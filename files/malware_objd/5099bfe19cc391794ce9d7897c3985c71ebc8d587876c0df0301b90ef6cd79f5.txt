
5099bfe19cc391794ce9d7897c3985c71ebc8d587876c0df0301b90ef6cd79f5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xf255e01a
  402b89:	jge    0x402bee
  402b8b:	sar    BYTE PTR [edx+0x7a],0x7a
  402b8f:	jp     0x402b68
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x15],0x6d6a6a66
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1b42f8bf
  402c38:	dec    esi
  402c39:	dec    ecx
  402c3a:	int    0xea
  402c3c:	xor    ah,dl
  402c3e:	xor    al,ah
  402c40:	arpl   bx,si
  402c42:	daa    
  402c43:	loopne 0x402bc7
  402c45:	push   ds
  402c46:	sbb    al,0xe0
  402c48:	xchg   DWORD PTR [eax+0x424e0a26],ebp
  402c4e:	mov    esi,0xd5f3d962
  402c53:	inc    esi
  402c54:	or     ebx,DWORD PTR [esi+0x4b]
  402c57:	sahf   
  402c58:	sub    eax,DWORD PTR [eax+edx*1+0x1da28086]
  402c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c60:	repnz stos BYTE PTR es:[edi],al
  402c62:	inc    ecx
  402c63:	push   es
  402c64:	cmp    BYTE PTR [ebx-0x487e8d6c],0xde
  402c6b:	sbb    edi,ecx
  402c6d:	and    DWORD PTR [eax+0x17],ecx
  402c70:	fdivr  DWORD PTR [eax+0x744d4ac3]
  402c76:	es adc al,0xa8
  402c79:	cmp    al,0xdf
  402c7b:	push   es
  402c7c:	iret   
  402c7d:	mov    ch,0xae
  402c7f:	inc    esi
  402c80:	sbb    BYTE PTR [ebx],bh
  402c82:	ins    DWORD PTR es:[edi],dx
  402c83:	cld    
  402c84:	jmp    eax
  402c86:	int    0x54
  402c88:	sar    ebp,cl
  402c8a:	xor    bh,BYTE PTR [edx+ebp*1]
  402c8d:	cmp    ch,BYTE PTR [edx]
  402c8f:	call   0xfe0509de
  402c94:	inc    ecx
  402c95:	adc    DWORD PTR ds:0x9dcfbbc5,esi
  402c9b:	clc    
  402c9c:	(bad)  
  402c9d:	neg    DWORD PTR [eax]
  402c9f:	or     eax,DWORD PTR [ecx-0x69]
  402ca2:	adc    esp,DWORD PTR [edx]
  402ca4:	add    BYTE PTR [ebx],ah
  402ca6:	push   ss
  402ca7:	inc    ebp
  402ca8:	xchg   DWORD PTR [ebx-0x75],ebp
  402cab:	lods   al,BYTE PTR ds:[esi]
  402cac:	push   edx
  402cad:	add    ch,BYTE PTR [eax]
  402caf:	mov    al,BYTE PTR [edi-0x2c]
  402cb2:	cmp    al,0xa
  402cb4:	stos   DWORD PTR es:[edi],eax
  402cb5:	cmp    BYTE PTR [esi+edx*2+0x388198da],0x76
  402cbd:	or     al,cl
  402cbf:	cdq    
  402cc0:	add    bh,ch
  402cc2:	test   DWORD PTR [esi+0x6],ebp
  402cc5:	or     DWORD PTR [edx+0x46],eax
  402cc8:	or     bh,BYTE PTR [esi]
  402cca:	out    dx,al
  402ccb:	mov    esp,0x8334b495
  402cd0:	mov    eax,ds:0x17caf975
  402cd5:	hlt    
  402cd6:	out    0x1a,eax
  402cd8:	into   
  402cd9:	dec    esp
  402cda:	xlat   BYTE PTR ds:[ebx]
  402cdb:	shr    DWORD PTR [eax-0x38b6d199],1
  402ce1:	inc    esi
  402ce2:	mov    edx,DWORD PTR [ebx+0x1ed3fe8b]
  402ce8:	arpl   WORD PTR [edi],sp
  402cea:	mov    ch,bl
  402cec:	inc    edi
  402ced:	jge    0x402c83
  402cef:	in     eax,dx
  402cf0:	and    esi,ebx
  402cf2:	mov    ch,0xba
  402cf4:	xor    edi,DWORD PTR [ecx]
  402cf6:	(bad)  
  402cf8:	mov    dl,0x4a
  402cfa:	icebp  
  402cfb:	repnz dec ebp
  402cfd:	daa    
  402cfe:	lods   al,BYTE PTR ds:[esi]
  402cff:	pop    eax
  402d00:	pop    esi
  402d01:	sub    BYTE PTR [ebx+0x8614d22],ah
  402d07:	das    
  402d08:	adc    BYTE PTR fs:0x44d1c958,0xf7
  402d10:	outs   dx,DWORD PTR ds:[esi]
  402d11:	jbe    0x402d7b
  402d13:	lods   al,BYTE PTR ds:[esi]
  402d14:	push   es
  402d15:	jno    0x402ce3
  402d17:	mov    bh,BYTE PTR [esi-0xc]
  402d1a:	sub    al,0xd2
  402d1c:	sti    
  402d1d:	xor    al,0xfc
  402d1f:	cs jns 0x402d93
  402d22:	cmp    DWORD PTR [esi+0x65],ebx
  402d25:	xchg   esi,eax
  402d26:	popf   
  402d27:	mov    eax,ebp
  402d29:	xchg   ebx,eax
  402d2a:	test   al,0x64
  402d2c:	dec    BYTE PTR [ebp-0x4c]
  402d2f:	out    0x2b,al
  402d31:	and    ecx,DWORD PTR fs:[edx-0x39]
  402d35:	cmp    eax,0x8b09d10e
  402d3a:	(bad)  
  402d3b:	in     al,dx
  402d3c:	(bad)  
  402d3d:	mov    edx,0x4fb43f24
  402d42:	mov    dl,0x89
  402d44:	push   ebp
  402d45:	ds push es
  402d47:	sub    cl,bl
  402d49:	dec    ebx
  402d4a:	shl    cl,1
  402d4c:	sub    BYTE PTR [eax],0xc7
  402d4f:	and    edi,eax
  402d51:	inc    ecx
  402d52:	inc    edi
  402d53:	jmp    0x3b32cc1b
  402d58:	and    edi,DWORD PTR [edx]
  402d5a:	fs jno 0x402dd8
  402d5d:	inc    eax
  402d5e:	xchg   edi,eax
  402d5f:	mov    ch,0x7a
  402d61:	add    bl,BYTE PTR [ecx+0x6f726de8]
  402d67:	fidivr DWORD PTR [edx+0x2a]
  402d6a:	push   esi
  402d6b:	fsubr  DWORD PTR [ebp+0x622f2c26]
  402d71:	cs pop ss
  402d73:	rcr    BYTE PTR [ebx],1
  402d75:	jb     0x402d58
  402d77:	stc    
  402d78:	repz or ch,BYTE PTR [edi-0x7d]
  402d7c:	add    ah,BYTE PTR [eax-0x42b17297]
  402d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d83:	and    eax,0x72fe89a2
  402d88:	scas   al,BYTE PTR es:[edi]
  402d89:	fild   QWORD PTR [ecx-0x32680c9e]
  402d8f:	adc    al,0x4e
  402d91:	je     0x402dfd
  402d93:	adc    esp,DWORD PTR [ecx]
  402d95:	std    
  402d96:	xchg   ecx,eax
  402d97:	fdiv   DWORD PTR [edx]
  402d99:	mov    ebp,0xcf2ab31b
  402d9e:	mov    ds:0x2118d650,al
  402da3:	xchg   DWORD PTR [edi-0x3fc33e13],edx
  402da9:	icebp  
  402daa:	jp     0x402d95
  402dac:	dec    edx
  402dad:	icebp  
  402dae:	sub    eax,0x54569ac1
  402db3:	dec    eax
  402db4:	or     ah,BYTE PTR [ecx+0x32]
  402db7:	sti    
  402db8:	inc    esi
  402db9:	aas    
  402dba:	daa    
  402dbb:	push   edx
  402dbc:	sub    BYTE PTR [ebp+eax*4-0x5122c973],bl
  402dc3:	jb     0x402d5c
  402dc5:	mov    esi,0xee390081
  402dca:	jmp    0xbf7f5d47
  402dcf:	sahf   
  402dd0:	push   ebx
  402dd1:	(bad)  
  402dd2:	in     eax,dx
  402dd3:	mov    ds:0x9365817c,eax
  402dd8:	ret    0x4676
  402ddb:	add    dl,0x29
  402dde:	mov    ds:0x3e29c1bd,al
  402de3:	ja     0x402d8d
  402de5:	or     edi,DWORD PTR [eax+0x18]
  402de8:	cli    
  402de9:	aam    0x57
  402deb:	adc    esi,DWORD PTR [ebx-0x41bb1851]
  402df1:	pop    eax
  402df2:	jmp    0x7955:0x1f5791c7
  402df9:	or     dl,BYTE PTR [esi]
  402dfb:	lods   al,BYTE PTR ds:[esi]
  402dfc:	jae    0x402e24
  402dfe:	aaa    
  402dff:	es ja  0x402e3e
  402e02:	mov    ds,WORD PTR [ecx]
  402e04:	sahf   
  402e05:	arpl   WORD PTR [edi],ax
  402e07:	and    al,0x79
  402e09:	(bad)  
  402e0a:	jnp    0x402e80
  402e0c:	mov    edx,0xaa4a0ed9
  402e11:	dec    esp
  402e12:	mov    bl,0x63
  402e14:	ds xchg dh,bl
  402e17:	clc    
  402e18:	cmp    ebp,edi
  402e1a:	enter  0xb696,0x34
  402e1e:	loop   0x402e85
  402e20:	inc    ecx
  402e21:	and    ch,BYTE PTR ds:0x158435c2
  402e27:	out    0x8c,al
  402e29:	ror    DWORD PTR [edx+eax*2],1
  402e2c:	cli    
  402e2d:	or     BYTE PTR [eax+0x6a3ae1fe],0xa
  402e34:	adc    cl,BYTE PTR [esi]
  402e36:	(bad)  
  402e37:	in     al,0x42
  402e39:	inc    edx
  402e3a:	shr    BYTE PTR [edi+edi*4+0x2776023],1
  402e41:	stos   BYTE PTR es:[edi],al
  402e42:	sub    edi,DWORD PTR [edi]
  402e44:	arpl   WORD PTR [eax-0x7f8a6834],cx
  402e4a:	call   0xaa3259d0
  402e4f:	cs jmp 0x4d8b16b
  402e55:	push   esi
  402e56:	fsubr  QWORD PTR [ecx]
  402e58:	sub    eax,0x59c53b01
  402e5d:	fsubr  st,st(0)
  402e5f:	pop    edx
  402e60:	or     eax,ebx
  402e62:	popa   
  402e63:	sub    eax,0x6513dd15
  402e68:	jge    0x402ec2
  402e6a:	jle    0x402e02
  402e6c:	xlat   BYTE PTR ds:[ebx]
  402e6d:	cwde   
  402e6e:	popf   
  402e6f:	mul    ah
  402e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e72:	call   0x801e:0x33bccb46
  402e79:	adc    al,BYTE PTR ss:[ebp+0x4ea779e9]
  402e80:	xor    esp,DWORD PTR [edx+0x692977a8]
  402e86:	stc    
  402e87:	aad    0x77
  402e89:	mov    dl,0x1f
  402e8b:	pusha  
  402e8c:	out    dx,eax
  402e8d:	sub    BYTE PTR [ecx+0x1c8b9a48],dl
  402e93:	and    al,0xd5
  402e95:	aaa    
  402e96:	push   edi
  402e97:	jb     0x402e68
  402e99:	lods   al,BYTE PTR ds:[esi]
  402e9a:	jb     0x402efc
  402e9c:	xchg   ebp,eax
  402e9d:	jb     0x402e3c
  402e9f:	outs   dx,DWORD PTR ds:[esi]
  402ea0:	retf   
  402ea1:	fwait
  402ea2:	ret    
  402ea3:	cmp    eax,0xceac9450
  402ea8:	fwait
  402ea9:	outs   dx,DWORD PTR ds:[esi]
  402eaa:	scas   eax,DWORD PTR es:[edi]
  402eab:	leave  
  402eac:	or     al,0x1b
  402eae:	or     bl,bh
  402eb0:	(bad)  
  402eb2:	rol    edx,cl
  402eb4:	fidiv  DWORD PTR [ebp+0x24]
  402eb7:	imul   eax,DWORD PTR [esi+0x3aada15c],0xffffffc2
  402ebe:	clc    
  402ebf:	mov    WORD PTR [eax+eax*4],cs
  402ec2:	cs enter 0xaad6,0xce
  402ec7:	add    ch,BYTE PTR [esi]
  402ec9:	lock or ecx,ebx
  402ecc:	shl    DWORD PTR [edi],cl
  402ece:	adc    edx,edi
  402ed0:	inc    ebp
  402ed1:	mov    ss,WORD PTR [edi-0x3b159734]
  402ed7:	push   esp
  402ed8:	push   esi
  402ed9:	xor    ch,cl
  402edb:	in     eax,0xfb
  402edd:	sub    BYTE PTR [eax],al
  402edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee0:	or     DWORD PTR [ecx-0x49691728],0xffffffec
  402ee7:	fisub  DWORD PTR [ebx+0x206eb52d]
  402eed:	mov    ebx,0x3b7f5b7c
  402ef2:	and    DWORD PTR [edi+0x2f],esi
  402ef5:	(bad)  
  402ef6:	push   esp
  402ef7:	scas   eax,DWORD PTR es:[edi]
  402ef8:	add    esi,DWORD PTR ss:[ecx]
  402efb:	loop   0x402e89
  402efd:	out    0x25,eax
  402eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f00:	shl    DWORD PTR [ebx],0xb5
  402f03:	icebp  
  402f04:	lock sub al,0x34
  402f07:	push   eax
  402f08:	stos   DWORD PTR es:[edi],eax
  402f09:	adc    eax,0x48ef5181
  402f0e:	mov    edi,esi
  402f10:	pop    edi
  402f11:	outs   dx,BYTE PTR ds:[esi]
  402f12:	jno    0x402eb2
  402f14:	test   ebx,ecx
  402f16:	push   esi
  402f17:	lods   eax,DWORD PTR ds:[esi]
  402f18:	cmp    BYTE PTR ds:0x901a382a,al
  402f1e:	imul   eax,DWORD PTR [ebp+0x32a0167c],0xffffffd4
  402f25:	fsub   st(5),st
  402f27:	inc    edx
  402f28:	retf   0x9ce4
  402f2b:	lods   al,BYTE PTR ds:[esi]
  402f2c:	sar    DWORD PTR fs:[ecx-0x6c],0x90
  402f31:	(bad)  
  402f32:	sbb    al,0xc8
  402f34:	push   cs
  402f35:	mov    cl,0x6d
  402f37:	arpl   WORD PTR [ebx],si
  402f39:	outs   dx,BYTE PTR ds:[esi]
  402f3a:	inc    edi
  402f3b:	fxch   st(0)
  402f3d:	pop    ecx
  402f3e:	stos   BYTE PTR es:[edi],al
  402f3f:	mov    cl,0x68
  402f41:	adc    esp,DWORD PTR [ebx]
  402f43:	int    0x79
  402f45:	mov    ebp,0x33509e4b
  402f4a:	aad    0x86
  402f4c:	sub    esp,DWORD PTR [ecx+0x667bcfdc]
  402f52:	ss jo  0x402fa1
  402f55:	fwait
  402f56:	push   0xf83fdf0
  402f5b:	stos   BYTE PTR es:[edi],al
  402f5c:	lock dec eax
  402f5e:	or     ch,BYTE PTR [ecx]
  402f60:	cwde   
  402f61:	hlt    
  402f62:	popf   
  402f63:	rcl    ah,0x2c
  402f66:	pop    ebp
  402f67:	and    dh,BYTE PTR [esi-0x5de3c1df]
  402f6d:	dec    ebp
  402f6e:	or     dl,BYTE PTR [edx]
  402f70:	sub    DWORD PTR [ebp+0x60d50db],ebp
  402f76:	lods   al,BYTE PTR ds:[esi]
  402f77:	out    dx,eax
  402f78:	mov    ch,0x70
  402f7a:	out    dx,al
  402f7b:	lock arpl WORD PTR [edi-0x1fa14a6a],bx
  402f82:	and    eax,0xfbf2896d
  402f87:	or     eax,0x6b5fdd50
  402f8c:	jmp    0x7a341939
  402f91:	call   0xadc2:0xf7eada45
  402f98:	loop   0x402f63
  402f9a:	jns    0x403004
  402f9c:	fs call 0x78a01caf
  402fa2:	mov    eax,DWORD PTR [ecx]
  402fa4:	jp     0x402fa5
  402fa6:	sbb    ebp,DWORD PTR [ebx]
  402fa8:	leave  
  402fa9:	mov    ds:0xcb05534b,eax
  402fae:	icebp  
  402faf:	(bad)  
  402fb0:	adc    eax,0x3f7734aa
  402fb5:	and    al,0xc8
  402fb7:	enter  0x11e6,0xfc
  402fbb:	and    esp,0x9bffabd0
  402fc1:	lahf   
  402fc2:	js     0x402faf
  402fc4:	xchg   esp,eax
  402fc5:	mov    ebx,0x5fa7ff4d
  402fca:	jge    0x402ffa
  402fcc:	int3   
  402fcd:	int    0x48
  402fcf:	ficomp DWORD PTR ds:0x5efbcd4
  402fd5:	cs adc eax,ebp
  402fd8:	xchg   esi,eax
  402fd9:	dec    ecx
  402fda:	push   edx
  402fdb:	inc    ebx
  402fdc:	iret   
  402fdd:	pop    ss
  402fde:	adc    al,0xc6
  402fe0:	cdq    
  402fe1:	imul   edi,DWORD PTR [edx],0xffffffcc
  402fe4:	xchg   ebp,eax
  402fe5:	rcl    DWORD PTR [edx-0x569c7fb5],0xe6
  402fec:	xchg   edi,eax
  402fed:	cs mov ebp,0xed0ef9ba
  402ff3:	sub    al,0x1c
  402ff5:	adc    esp,DWORD PTR [edx-0x6b53e3af]
  402ffb:	xor    ebx,DWORD PTR [esi-0x6]
  402ffe:	and    BYTE PTR [esi-0x80],ah
  403001:	stc    
  403002:	jnp    0x403003
  403004:	and    bl,ch
  403006:	retf   
  403007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403008:	scas   eax,DWORD PTR es:[edi]
  403009:	push   esp
  40300a:	das    
  40300b:	sar    dh,1
  40300d:	inc    esi
  40300e:	in     eax,dx
  40300f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403010:	xor    edi,eax
  403012:	and    edi,DWORD PTR [ebp+0x51]
  403015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403016:	xor    eax,0x47948478
  40301b:	xchg   edi,eax
  40301c:	push   ebx
  40301d:	scas   eax,DWORD PTR es:[edi]
  40301e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301f:	xchg   ebp,eax
  403020:	mov    bl,0x33
  403022:	cmp    ebx,eax
  403024:	push   ecx
  403025:	cmp    ecx,ebx
  403027:	out    dx,eax
  403028:	xor    DWORD PTR [esi-0x10],esi
  40302b:	mov    esp,DWORD PTR [edx-0x5e]
  40302e:	push   cs
  40302f:	xchg   BYTE PTR [eax+esi*4+0x6257f372],dl
  403036:	fdiv   DWORD PTR [ebx+0x36]
  403039:	xchg   ebx,eax
  40303a:	pop    ds
  40303b:	in     al,dx
  40303c:	sub    DWORD PTR [ecx],ebp
  40303e:	inc    eax
  40303f:	xorps  xmm1,XMMWORD PTR [edi-0x5c]
  403043:	jl     0x4030c1
  403045:	add    al,al
  403047:	push   es
  403048:	shl    BYTE PTR [edi-0x66626833],1
  40304e:	jg     0x40309b
  403050:	mov    ebp,0xa0e9580a
  403055:	stc    
  403056:	inc    ebp
  403057:	jae    0x403060
  403059:	das    
  40305a:	cmp    esp,esp
  40305c:	mov    cs,WORD PTR [ebp-0x118dd8cc]
  403062:	ins    DWORD PTR es:[edi],dx
  403063:	ds xor eax,0x2e1bc8dc
  403069:	call   0x1967:0x7a1b69cb
  403070:	and    ecx,DWORD PTR [eax]
  403072:	je     0x4030f1
  403074:	test   eax,0x29cdbac5
  403079:	pop    DWORD PTR [ecx-0x6c]
  40307c:	pushf  
  40307d:	pop    edx
  40307e:	arpl   cx,ax
  403080:	push   esp
  403081:	inc    ecx
  403082:	xchg   DWORD PTR [eax-0x2c],edx
  403085:	jne    0x4030ea
  403087:	aad    0x94
  403089:	inc    edi
  40308a:	ds pop ds
  40308c:	nop
  40308d:	fadd   DWORD PTR [esi+0xa]
  403090:	hlt    
  403091:	cmp    DWORD PTR [edi-0x59],ebx
  403094:	aas    
  403095:	mov    ds:0x826d2e4d,al
  40309a:	shl    BYTE PTR [edi+0x64c51e82],cl
  4030a0:	aaa    
  4030a1:	sbb    esi,esp
  4030a3:	es mov bh,0xfd
  4030a6:	pop    esi
  4030a7:	mov    al,0x30
  4030a9:	lock jg 0x4030c3
  4030ac:	jmp    0x6e7e:0x3caa0ca6
  4030b3:	add    DWORD PTR [eax-0x80],esi
  4030b6:	aaa    
  4030b7:	sbb    eax,0xafd2fde
  4030bc:	adc    al,0xb4
  4030be:	pushf  
  4030bf:	loope  0x4030f1
  4030c1:	imul   esp,DWORD PTR [ecx+eiz*4-0x5c],0xffffff8b
  4030c6:	inc    esp
  4030c7:	aad    0xce
  4030c9:	dec    esp
  4030ca:	lea    esi,[edi-0x3e]
  4030cd:	sub    al,0x87
  4030cf:	mov    edi,0x924fd627
  4030d4:	pop    ebx
  4030d5:	inc    edi
  4030d6:	sbb    esi,DWORD PTR ds:0x874d0046
  4030dc:	cmp    DWORD PTR [edi-0x6d],edi
  4030df:	ss pop ebx
  4030e1:	inc    ebp
  4030e2:	push   ebx
  4030e3:	and    BYTE PTR [eax+0x568a1e55],cl
  4030e9:	test   BYTE PTR [edi+0x66],ch
  4030ec:	inc    esp
  4030ed:	or     BYTE PTR [edx],0x60
  4030f0:	push   ss
  4030f1:	addr16 dec ecx
  4030f3:	cmp    eax,ebx
  4030f5:	mov    BYTE PTR [ebp+eax*2+0x42c6869c],0xaa
  4030fd:	dec    ecx
  4030fe:	shl    DWORD PTR [edi-0x70],1
  403101:	and    edx,DWORD PTR [ebx]
  403103:	dec    edx
  403104:	pop    edi
  403105:	mov    dl,0x70
  403107:	or     esp,ecx
  403109:	pop    esi
  40310a:	adc    al,0x46
  40310c:	lods   eax,DWORD PTR ds:[esi]
  40310d:	mov    ds:0xc225b890,al
  403112:	rcl    DWORD PTR [edx-0x73d2f4b1],0xfd
  403119:	test   eax,0x3167d0c0
  40311e:	sti    
  40311f:	int    0x5b
  403121:	adc    eax,0x40ff046f
  403126:	and    BYTE PTR [ecx+0xb],al
  403129:	push   0xffffffec
  40312b:	push   edx
  40312c:	mov    esi,0x6377e683
  403131:	sub    bh,dh
  403133:	or     BYTE PTR [esi+0x3b],ch
  403136:	dec    esp
  403137:	push   edi
  403138:	push   edx
  403139:	inc    ebx
  40313a:	lods   al,BYTE PTR ds:[esi]
  40313b:	sub    al,0x1c
  40313d:	jecxz  0x40311f
  40313f:	adc    edi,DWORD PTR [ebp-0x6c]
  403142:	loop   0x403111
  403144:	and    esp,edi
  403146:	rol    DWORD PTR [eax+0x16f09549],cl
  40314c:	pushf  
  40314d:	dec    ebx
  40314e:	pop    ebp
  40314f:	stos   BYTE PTR es:[edi],al
  403150:	into   
  403151:	in     eax,0xce
  403153:	adc    eax,0xedd6209
  403158:	xor    eax,0x9eee7642
  40315d:	pop    esi
  40315e:	cli    
  40315f:	pop    edx
  403160:	lahf   
  403161:	imul   edi,DWORD PTR [esi],0xffffffa6
  403164:	xchg   ebp,eax
  403165:	gs jmp 0x40314d
  403168:	sbb    ch,0xb1
  40316b:	xchg   DWORD PTR [esi+esi*8],esp
  40316e:	sub    BYTE PTR [edi],al
  403170:	adc    esi,DWORD PTR [ebx]
  403172:	add    BYTE PTR [ebp+0x17],cl
  403175:	mov    dl,0xd5
  403177:	lods   al,BYTE PTR ds:[si]
  403179:	pop    esp
  40317a:	cs inc ebx
  40317c:	cmp    al,0x3
  40317e:	sub    esp,DWORD PTR [ebx-0x2b]
  403181:	pop    esi
  403182:	sbb    BYTE PTR [ebp+0x3b],dl
  403185:	daa    
  403186:	in     eax,0xfa
  403188:	rcr    BYTE PTR [edi-0x52],0xfe
  40318c:	push   cs
  40318d:	sub    al,0xfb
  40318f:	daa    
  403190:	xor    edx,DWORD PTR [edx+0x16094d4e]
  403196:	lea    eax,[ebp+0x590be2d2]
  40319c:	sub    DWORD PTR [ecx+0x76],ebx
  40319f:	pop    esi
  4031a0:	xchg   ebp,eax
  4031a1:	mov    WORD PTR [ebp-0x25],cs
  4031a4:	push   cs
  4031a5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4031a7:	out    dx,ax
  4031a9:	jecxz  0x40321e
  4031ab:	jb     0x403173
  4031ad:	cld    
  4031ae:	xchg   edi,eax
  4031af:	sub    ecx,edi
  4031b1:	jmp    0xae5c08bc
  4031b6:	sar    BYTE PTR [eax+0x2af9a7b2],0x45
  4031bd:	cmp    dl,BYTE PTR [esi-0x6a]
  4031c0:	inc    ebp
  4031c1:	lds    edx,FWORD PTR [ecx-0x12]
  4031c4:	adc    ebx,edx
  4031c6:	leave  
  4031c7:	push   ebx
  4031c8:	stos   BYTE PTR es:[edi],al
  4031c9:	pop    ebp
  4031ca:	mov    ebp,0xe1fdc784
  4031cf:	mov    eax,0x31fbe64f
  4031d4:	or     bl,bh
  4031d6:	ret    0xc73d
  4031d9:	aaa    
  4031da:	mov    ebx,0xc665dcd0
  4031df:	das    
  4031e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031e1:	(bad)  
  4031e2:	mov    esp,esp
  4031e4:	jl     0x40319f
  4031e6:	jns    0x40321d
  4031e8:	add    al,0x6d
  4031ea:	cmp    BYTE PTR [edi-0x3769a673],bh
  4031f0:	aaa    
  4031f1:	jge    0x40324b
  4031f3:	cld    
  4031f4:	bound  edi,QWORD PTR [ecx-0x69]
  4031f7:	sub    bh,BYTE PTR [esp+ecx*8]
  4031fa:	dec    esi
  4031fb:	pop    edx
  4031fc:	fild   DWORD PTR cs:[edi-0x60b9a620]
  403203:	fisub  WORD PTR [ebx+0x8]
  403206:	test   DWORD PTR [edi-0xa5bdd38],esp
  40320c:	dec    ecx
  40320d:	aas    
  40320e:	clc    
  40320f:	(bad)  
  403210:	out    dx,eax
  403211:	mov    eax,DWORD PTR [ebp-0x36]
  403214:	rcr    esi,0xb4
  403217:	ss or  ch,0x5
  40321b:	push   0x42002ae4
  403220:	(bad)  
  403221:	sbb    esi,esp
  403223:	aam    0x1c
  403225:	add    al,0x42
  403227:	shl    dh,cl
  403229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322a:	call   0x5b03:0xaa0b8ffc
  403231:	dec    edx
  403232:	call   0x3b06a3ef
  403237:	loop   0x403230
  403239:	addr16 jge 0x4031e7
  40323c:	nop
  40323d:	inc    ebp
  40323e:	jmp    0x6fce:0x99ea3a28
  403245:	(bad)  
  403246:	fs pop ebp
  403248:	sbb    eax,DWORD PTR [edx-0x74]
  40324b:	out    0xaa,al
  40324d:	jns    0x40322a
  40324f:	ins    DWORD PTR es:[edi],dx
  403250:	dec    ecx
  403251:	dec    esi
  403252:	bound  edi,QWORD PTR [ecx+0x69]
  403255:	sbb    ebp,DWORD PTR [ebp+0x1dc60761]
  40325b:	jmp    0x14d8:0x2ed380f8
  403262:	mov    eax,0x6117cdb1
  403267:	jns    0x40327e
  403269:	lods   al,BYTE PTR ds:[esi]
  40326b:	(bad)  
  40326c:	sub    DWORD PTR [esi],esi
  40326e:	rol    ebp,1
  403270:	(bad)  
  403271:	mov    ch,bh
  403273:	mov    ch,0xbb
  403275:	jno    0x403295
  403277:	pop    eax
  403278:	or     DWORD PTR [edi-0x23],eax
  40327b:	(bad)  
  40327c:	in     al,0x4a
  40327e:	imul   ebx,eax,0xe955a604
  403284:	jmp    edx
  403286:	loope  0x40323f
  403288:	jmp    0x40325b
  40328a:	hlt    
  40328b:	ins    DWORD PTR es:[edi],dx
  40328c:	cmp    eax,0x6b77346c
  403291:	mov    eax,ds:0x58628adc
  403296:	aad    0xb0
  403298:	jg     0x403260
  40329a:	or     eax,0xfc85b556
  40329f:	add    al,0xf4
  4032a1:	xchg   ecx,eax
  4032a2:	and    al,0xc6
  4032a4:	test   esp,ebx
  4032a6:	in     al,0x9d
  4032a8:	std    
  4032a9:	mov    bl,0x0
  4032ab:	adc    ch,BYTE PTR [ebp+0x19]
  4032ae:	and    eax,0xbbceb912
  4032b3:	popa   
  4032b4:	push   DWORD PTR [eax-0x58]
  4032b7:	mov    BYTE PTR [ecx+0x6c3548b0],bl
  4032bd:	add    esi,DWORD PTR [ecx+eax*8]
  4032c0:	out    dx,al
  4032c1:	push   edx
  4032c2:	xor    eax,0xb623ff3b
  4032c7:	xchg   ebp,eax
  4032c8:	bound  eax,QWORD PTR [ecx+ebp*2]
  4032cb:	fisttp WORD PTR [ebx]
  4032cd:	push   es
  4032ce:	xor    eax,0xb21c096d
  4032d3:	dec    esp
  4032d4:	js     0x403299
  4032d6:	or     DWORD PTR [esi-0x5b],edx
  4032d9:	and    BYTE PTR [edi-0x66c62edc],dl
  4032df:	pop    esp
  4032e0:	test   al,0xb3
  4032e2:	mov    ecx,0xbb171f42
  4032e7:	jle    0x40326f
  4032e9:	inc    esp
  4032ea:	mov    eax,0x73cd6301
  4032ef:	(bad)  
  4032f0:	sub    ah,cl
  4032f2:	out    0x89,al
  4032f4:	imul   edx,edx,0xffffffff
  4032f7:	retf   
  4032f8:	xchg   esp,eax
  4032f9:	jecxz  0x403318
  4032fb:	scas   al,BYTE PTR es:[edi]
  4032fc:	lea    ebp,[esi]
  4032fe:	out    dx,al
  4032ff:	aas    
  403300:	mov    dl,0x8b
  403302:	push   cs
  403303:	div    ah
  403305:	mov    edx,0x90a99c74
  40330a:	jle    0x4032c0
  40330c:	outs   dx,DWORD PTR ds:[esi]
  40330d:	cli    
  40330e:	aad    0x51
  403310:	pop    ebp
  403311:	push   es
  403312:	imul   esp,DWORD PTR [esi+eax*1+0x4ed83f7b],0x3d0694c7
  40331d:	call   FWORD PTR [esi-0x3bfd824b]
  403323:	mov    WORD PTR [esi+0x25],ds
  403326:	pop    edi
  403327:	push   ebx
  403328:	aad    0x80
  40332a:	rcl    DWORD PTR [eax-0x627ef495],0x8e
  403331:	lock jo 0x4032ca
  403334:	pop    es
  403335:	mov    cl,0x1d
  403337:	dec    esp
  403338:	repz push ss
  40333a:	lods   al,BYTE PTR ds:[esi]
  40333b:	test   eax,0xba298f3d
  403340:	mov    ds:0x3c4f09ee,eax
  403345:	ror    bl,cl
  403347:	dec    edx
  403348:	or     BYTE PTR [ebx],bh
  40334a:	jp     0x40336c
  40334c:	or     bh,dl
  40334e:	jo     0x403304
  403350:	add    ebx,ecx
  403352:	jle    0x403396
  403354:	(bad)  
  403355:	mov    eax,ds:0xfed615b7
  40335a:	push   esi
  40335b:	clc    
  40335c:	in     al,0x1d
  40335e:	add    dl,BYTE PTR [edx-0x2e]
  403361:	push   ds
  403362:	sub    bh,BYTE PTR [eax-0x58600242]
  403368:	adc    al,0xd
  40336a:	mov    bl,0x7c
  40336c:	fs pop esp
  40336e:	or     BYTE PTR [edi-0x76],dh
  403371:	fisub  WORD PTR [ebx]
  403373:	in     al,0x45
  403375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403376:	pushf  
  403377:	rcr    BYTE PTR [edi],cl
  403379:	je     0x4033c4
  40337b:	js     0x40333b
  40337d:	pop    esi
  40337e:	cmc    
  40337f:	fisttp DWORD PTR [edx+0x58]
  403382:	inc    ebx
  403383:	inc    ebp
  403384:	pop    ecx
  403385:	cmp    ebp,DWORD PTR [eax-0x77]
  403388:	test   DWORD PTR [edi],ecx
  40338a:	sbb    eax,0x4dda8c14
  40338f:	push   es
  403390:	push   esi
  403391:	mov    esi,0xc03e3c46
  403396:	mov    ecx,DWORD PTR [ecx-0x5369f4ac]
  40339c:	mov    esi,0xe4f78399
  4033a1:	and    DWORD PTR [ecx-0x53],edx
  4033a4:	loop   0x40332d
  4033a6:	daa    
  4033a7:	js     0x40335d
  4033a9:	jno    0x40334e
  4033ab:	outs   dx,BYTE PTR ds:[esi]
  4033ac:	jmp    0x3ef8:0x35a66132
  4033b3:	loop   0x403431
  4033b5:	mov    esi,0xe85830a8
  4033ba:	push   cs
  4033bb:	add    BYTE PTR [esp+eax*2-0x23],cl
  4033bf:	sti    
  4033c0:	jbe    0x40342d
  4033c2:	or     ebp,DWORD PTR [edi+0x73006118]
  4033c8:	outs   dx,DWORD PTR ds:[esi]
  4033c9:	rol    ebx,cl
  4033cb:	in     al,0xda
  4033cd:	loopne 0x4033c9
  4033cf:	push   ds
  4033d0:	sub    BYTE PTR [ebx-0x167ebf48],0x2a
  4033d7:	jge    0x4033c4
  4033d9:	push   esi
  4033da:	mov    cl,0xcd
  4033dc:	cmp    eax,0xa2070dbf
  4033e1:	pop    ebx
  4033e2:	(bad)  
  4033e3:	cdq    
  4033e4:	adc    BYTE PTR [ecx],0x34
  4033e7:	inc    eax
  4033e8:	push   ss
  4033e9:	cwde   
  4033ea:	dec    ebp
  4033eb:	neg    BYTE PTR [edx-0x41106280]
  4033f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033f2:	in     al,dx
  4033f3:	jb     0x403422
  4033f5:	inc    esp
  4033f6:	scas   al,BYTE PTR es:[edi]
  4033f7:	mov    al,0xa0
  4033f9:	div    DWORD PTR ds:0x9c6d5b45
  4033ff:	test   cl,dh
  403401:	add    al,0xfd
  403403:	push   es
  403404:	add    edx,DWORD PTR [eax]
  403406:	adc    al,0x80
  403408:	sub    DWORD PTR fs:[ebp-0x7f],ecx
  40340c:	pop    edx
  40340d:	stc    
  40340e:	xchg   ebp,eax
  40340f:	jnp    0x4033f6
  403411:	ret    
  403412:	sbb    ch,dl
  403414:	jl     0x40341d
  403416:	popf   
  403417:	push   ecx
  403418:	outs   dx,BYTE PTR ds:[esi]
  403419:	jecxz  0x40341d
  40341b:	retf   
  40341c:	jo     0x4033d7
  40341e:	aas    
  40341f:	xchg   edi,eax
  403420:	and    eax,0x2f1b3a20
  403425:	pop    ebp
  403426:	or     al,0x84
  403428:	and    BYTE PTR [ecx+0x5a7a7476],ah
  40342e:	inc    esi
  40342f:	out    dx,al
  403430:	adc    al,0x5e
  403432:	repz vdivsd xmm2,xmm2,QWORD PTR [ebx-0x5f9e3042]
  40343b:	dec    esi
  40343c:	loop   0x40349b
  40343e:	and    DWORD PTR [esi-0x12285f01],0xf53f44b0
  403448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403449:	ror    DWORD PTR [eax],1
  40344b:	inc    edi
  40344c:	out    0xd5,eax
  40344e:	xor    eax,0x2f8bf9df
  403453:	shl    DWORD PTR fs:[edx-0x33],0xd0
  403458:	add    dl,BYTE PTR [edx]
  40345a:	dec    esp
  40345b:	push   ebx
  40345c:	push   edx
  40345d:	push   cs
  40345e:	popa   
  40345f:	xlat   BYTE PTR ds:[ebx]
  403460:	lods   al,BYTE PTR ds:[esi]
  403461:	adc    eax,0xb338358b
  403466:	mov    bl,0x1a
  403468:	arpl   di,sp
  40346a:	sbb    BYTE PTR [ecx+eiz*8+0x74],al
  40346e:	rcr    esi,1
  403470:	sar    DWORD PTR [ecx+edx*2+0x14],0xa8
  403475:	inc    esp
  403476:	add    eax,0xe7f252d3
  40347b:	and    DWORD PTR [edx+0x1c058b08],edi
  403481:	into   
  403482:	mov    ah,0xc
  403484:	shl    BYTE PTR [esi+0x35a25da9],1
  40348a:	jo     0x403491
  40348c:	ss inc bh
  40348f:	mov    al,ds:0x5c007ad5
  403494:	in     al,dx
  403495:	imul   edx,esp,0x3f
  403498:	retf   0x692f
  40349b:	or     ah,ch
  40349d:	pop    ds
  40349e:	scas   al,BYTE PTR es:[edi]
  40349f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a0:	mov    al,0xf8
  4034a2:	mov    eax,ds:0xcecca439
  4034a7:	mov    bl,0xa8
  4034a9:	out    dx,eax
  4034aa:	jg     0x403449
  4034ac:	sub    ch,dh
  4034ae:	clc    
  4034af:	push   edi
  4034b0:	xlat   BYTE PTR ds:[ebx]
  4034b1:	in     al,0x10
  4034b3:	xchg   ecx,eax
  4034b4:	xor    BYTE PTR [esi-0x43d0f97c],0xa1
  4034bb:	cmp    cl,BYTE PTR [esi+ebx*2]
  4034be:	cmp    eax,0x394726c0
  4034c3:	push   esi
  4034c4:	xchg   ebp,eax
  4034c5:	xchg   DWORD PTR [edi+0x2d],edi
  4034c8:	fsub   DWORD PTR [eax-0x17]
  4034cb:	mov    eax,ds:0x9e21419f
  4034d0:	push   edx
  4034d1:	shl    DWORD PTR [edi+edx*4-0x49],0xe9
  4034d6:	sub    BYTE PTR [edx+esi*1],ah
  4034d9:	fs scas al,BYTE PTR es:[edi]
  4034db:	xor    dl,BYTE PTR [ebp-0x5b5608e5]
  4034e1:	inc    esp
  4034e2:	icebp  
  4034e3:	sub    al,0x8
  4034e5:	pop    esp
  4034e6:	outs   dx,BYTE PTR ds:[esi]
  4034e7:	push   0x4e
  4034e9:	ror    BYTE PTR [edx-0x1fe9bc5c],1
  4034ef:	jp     0x403523
  4034f1:	jo     0x403565
  4034f3:	push   ds
  4034f4:	(bad)  
  4034f5:	jmp    0x40348b
  4034f7:	mov    edx,0x62f94fa0
  4034fc:	or     eax,0xbe23c5de
  403501:	push   edx
  403502:	hlt    
  403503:	lds    edi,FWORD PTR [eax+0x18]
  403506:	nop
  403507:	mov    eax,ds:0xb913aa46
  40350c:	icebp  
  40350d:	scas   al,BYTE PTR es:[edi]
  40350e:	add    cl,BYTE PTR [edx-0x50]
  403511:	and    eax,0x51718911
  403516:	leave  
  403517:	daa    
  403518:	mov    ebp,0xb2fb110
  40351d:	jmp    0xa0b3:0x5eb833b7
  403524:	pusha  
  403525:	and    DWORD PTR [ecx+0x7070af50],esp
  40352b:	outs   dx,BYTE PTR ds:[esi]
  40352c:	jmp    0x6488:0x7af141dc
  403533:	mov    ds:0x9a219403,al
  403538:	call   0x8657:0xebd329c2
  40353f:	jb     0x4034f3
  403541:	dec    ecx
  403542:	(bad)  
  403543:	mov    edx,0x5779189a
  403548:	pop    ss
  403549:	mov    al,BYTE PTR [ebx-0x5e]
  40354c:	jns    0x403545
  40354e:	lock popa 
  403550:	into   
  403551:	jmp    0xa67e:0xee29fa56
  403558:	popf   
  403559:	push   0xffffffb4
  40355b:	pop    ebp
  40355c:	inc    eax
  40355d:	xor    eax,0x1f8402b6
  403562:	out    0x21,al
  403564:	or     eax,0x691a5b1c
  403569:	and    bh,ah
  40356b:	dec    edi
  40356c:	xor    BYTE PTR [esp+ebp*4+0x25],dh
  403570:	push   0x314dfd8
  403575:	mov    edx,0x9b2bbc65
  40357a:	jmp    0xbf90:0x70705810
  403581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403582:	in     al,0xd7
  403584:	fsub   QWORD PTR [esi+0x35]
  403587:	cmc    
  403588:	sbb    eax,DWORD PTR [esi-0xec16649]
  40358e:	mov    ecx,gs
  403590:	or     al,0xaf
  403592:	push   esp
  403593:	call   0x196c:0x410e2b4c
  40359a:	cmp    ebx,DWORD PTR ds:0xa24c2b14
  4035a0:	in     eax,dx
  4035a1:	aad    0x12
  4035a3:	pushf  
  4035a4:	popf   
  4035a5:	xchg   ebx,eax
  4035a6:	pop    esp
  4035a7:	adc    BYTE PTR [ebp+0x78],ch
  4035aa:	or     eax,0x80a4fda9
  4035af:	aas    
  4035b0:	xor    al,0x44
  4035b2:	pop    ecx
  4035b3:	(bad)  [ebx+0x23]
  4035b6:	pop    esp
  4035b7:	pop    ecx
  4035b8:	mov    ebx,0xff4812b6
  4035bd:	stos   DWORD PTR es:[edi],eax
  4035be:	mov    ds:0xd9ee6a8d,eax
  4035c3:	js     0x403587
  4035c5:	pop    ebx
  4035c6:	mov    dh,0xc6
  4035c8:	add    edx,DWORD PTR [edi*1-0x7ae8885a]
  4035cf:	or     edx,edx
  4035d1:	push   esi
  4035d2:	mov    esp,0x3419c8c5
  4035d7:	mov    ah,0x61
  4035d9:	push   eax
  4035da:	pop    edx
  4035db:	popf   
  4035dc:	and    eax,ecx
  4035de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035df:	les    esi,FWORD PTR [edx]
  4035e1:	push   eax
  4035e2:	xor    bl,bh
  4035e4:	adc    dl,dl
  4035e6:	aas    
  4035e7:	cdq    
  4035e8:	push   edi
  4035e9:	gs repnz xchg ecx,eax
  4035ec:	test   BYTE PTR [esi-0x35],cl
  4035ef:	cld    
  4035f0:	mov    edx,DWORD PTR [eax]
  4035f2:	or     ecx,DWORD PTR [edi]
  4035f4:	sahf   
  4035f5:	add    al,0xb8
  4035f7:	gs jge 0x4035c7
  4035fa:	xor    eax,ebx
  4035fc:	dec    esi
  4035fd:	jmp    0x403654
  4035ff:	outs   dx,BYTE PTR ds:[esi]
  403600:	xlat   BYTE PTR ds:[ebx]
  403601:	ja     0x4035a6
  403603:	lods   al,BYTE PTR ds:[esi]
  403604:	push   0xfe44c75c
  403609:	add    esp,DWORD PTR [eax+0x27ea0dc8]
  40360f:	sub    BYTE PTR [esi+0xaf0c17a],dh
  403615:	or     ebx,edx
  403617:	push   esi
  403618:	jmp    0xa993:0x2f1984d8
  40361f:	lods   eax,DWORD PTR ds:[esi]
  403620:	jo     0x4035cd
  403622:	jbe    0x4035df
  403624:	xlat   BYTE PTR cs:[ebx]
  403626:	push   esi
  403627:	mov    DWORD PTR [ebx+0x59],ebp
  40362a:	test   al,0xa9
  40362c:	xor    cl,ah
  40362e:	push   esi
  40362f:	icebp  
  403630:	xor    ebx,0xffffffb5
  403633:	push   esp
  403634:	popf   
  403635:	out    dx,al
  403636:	sbb    ebp,DWORD PTR [ebx+0x19]
  403639:	fsubr  DWORD PTR [edi-0x7d]
  40363c:	sahf   
  40363d:	jnp    0x4035db
  40363f:	pop    ss
  403640:	pop    ebx
  403641:	int    0xfa
  403643:	sub    DWORD PTR [ecx],0x5e
  403646:	(bad)  
  403647:	pusha  
  403648:	jae    0x4035e4
  40364a:	cmp    DWORD PTR [ebp+0x7ffc681d],ebp
  403650:	mov    esp,0x7c2253ac
  403655:	xchg   ebx,eax
  403656:	test   eax,0xb44a0d01
  40365b:	fdivr  st(5),st
  40365d:	add    DWORD PTR ds:0x917a3898,esp
  403663:	cmp    al,0xf2
  403665:	ja     0x4036e4
  403667:	imul   eax,ebx,0xffffffb1
  40366a:	inc    ebx
  40366b:	xor    esi,0xfffffffa
  40366e:	repnz pop eax
  403670:	xor    BYTE PTR [ecx-0x4c],bl
  403673:	and    bl,dh
  403675:	mov    ah,0x66
  403677:	arpl   WORD PTR [edi-0x57],bx
  40367a:	sub    BYTE PTR [ebx-0x65],ch
  40367d:	mov    dh,0xd0
  40367f:	fsubr  DWORD PTR [ecx+0x753bd13c]
  403685:	xor    esp,DWORD PTR [ebp+0x5e]
  403688:	je     0x403697
  40368a:	dec    eax
  40368b:	mov    edi,0xc77be5d2
  403690:	push   0x108ba159
  403695:	jmp    0xcba0c5a3
  40369a:	loope  0x403653
  40369c:	jle    0x403621
  40369e:	popf   
  40369f:	cs dec ebp
  4036a1:	aaa    
  4036a2:	aas    
  4036a3:	inc    ebp
  4036a4:	pop    edi
  4036a5:	arpl   WORD PTR [ebx+0x2d6e5470],di
  4036ab:	rcl    DWORD PTR [ecx-0x24cb0e2f],1
  4036b1:	sub    DWORD PTR [eax+0x7f066ba8],0xd080d9a
  4036bb:	and    DWORD PTR [esi-0x139128ec],0x93c29387
  4036c5:	aas    
  4036c6:	pop    ds
  4036c7:	aad    0x2
  4036c9:	mov    cl,0x74
  4036cb:	aad    0x12
  4036cd:	test   DWORD PTR [ebx],ecx
  4036cf:	xchg   edi,eax
  4036d0:	fwait
  4036d1:	(bad)
  4036d4:	out    dx,al
  4036d5:	push   edi
  4036d6:	dec    ecx
  4036d7:	fdivr  st,st(7)
  4036d9:	bound  ebx,QWORD PTR [eax-0x583eb02b]
  4036df:	dec    edi
  4036e0:	shl    BYTE PTR [ecx-0x376ce8b1],1
  4036e6:	fs retf 0x330b
  4036ea:	xor    dh,bl
  4036ec:	ficom  DWORD PTR [ebx]
  4036ee:	mov    dl,0x92
  4036f0:	push   es
  4036f1:	xchg   esp,eax
  4036f2:	dec    esi
  4036f3:	aaa    
  4036f4:	push   edx
  4036f5:	dec    ebx
  4036f6:	call   0xf67c:0x32710d35
  4036fd:	fild   DWORD PTR [ecx]
  4036ff:	lds    ebp,FWORD PTR [ebp+0x5]
  403702:	mov    ds,WORD PTR [ebx]
  403704:	pop    esi
  403705:	data16 jge 0x40375f
  403708:	test   BYTE PTR [edx+0x603a9d1d],bl
  40370e:	lahf   
  40370f:	xor    al,0x4d
  403711:	pop    eax
  403712:	(bad)  
  403713:	retf   
  403714:	pushf  
  403715:	and    bh,BYTE PTR [esi-0x39]
  403718:	add    BYTE PTR [eax],bl
  40371a:	outs   dx,BYTE PTR ds:[esi]
  40371b:	std    
  40371c:	mov    edx,0x368dddac
  403721:	lock (bad) [ebp-0x5cd3c4d]
  403728:	stos   DWORD PTR es:[edi],eax
  403729:	out    0x40,eax
  40372b:	das    
  40372c:	enter  0x7f2b,0xa3
  403730:	js     0x40372c
  403732:	xchg   DWORD PTR [eax],ecx
  403734:	lahf   
  403735:	add    al,0x2f
  403737:	sub    al,0x7a
  403739:	frstor [ebx]
  40373b:	(bad)  
  40373d:	int3   
  40373e:	fadd   st(2),st
  403740:	retf   0xd30
  403743:	ret    0x994f
  403746:	fsubrp st(0),st
  403748:	into   
  403749:	loopne 0x40375d
  40374b:	retf   0x7791
  40374e:	sub    ah,dl
  403750:	add    eax,0x7c85845c
  403755:	sub    BYTE PTR [esi+0xc],bh
  403758:	dec    edi
  403759:	inc    ebx
  40375a:	mov    dl,0x94
  40375c:	repz pusha 
  40375e:	ss push 0xbed19062
  403764:	inc    eax
  403765:	cmp    al,0xf3
  403767:	js     0x40370e
  403769:	and    BYTE PTR [ecx+edi*8],bh
  40376c:	jg     0x4037a2
  40376e:	fsub   DWORD PTR [eax+0x7a6ef754]
  403774:	push   ss
  403775:	inc    ecx
  403776:	jp     0x403775
  403778:	mov    al,es:0x432c2e53
  40377e:	push   ebp
  40377f:	sbb    al,0xac
  403781:	dec    esp
  403782:	push   esp
  403783:	iret   
  403784:	push   edi
  403785:	shl    esi,0x6b
  403788:	pop    ds
  403789:	sbb    ebp,DWORD PTR ds:0x4d589a85
  40378f:	ins    DWORD PTR es:[edi],dx
  403790:	cld    
  403791:	dec    ebx
  403792:	scas   al,BYTE PTR es:[edi]
  403793:	pop    edx
  403794:	jne    0x403799
  403796:	or     dl,BYTE PTR [edi+0x36]
  403799:	and    al,0x4e
  40379b:	xchg   BYTE PTR [ebx-0x6b2c90b4],bh
  4037a1:	scas   al,BYTE PTR es:[edi]
  4037a2:	mov    ebx,0x75c85761
  4037a7:	push   es
  4037a8:	and    dh,BYTE PTR [edi]
  4037aa:	fsubr  QWORD PTR [eax*2+0x4dc47c0c]
  4037b1:	ja     0x4037b3
  4037b3:	xchg   edi,eax
  4037b4:	push   edx
  4037b5:	imul   DWORD PTR [edi]
  4037b7:	or     ebp,DWORD PTR [eax+0xe35b494]
  4037bd:	mov    ebx,0x6998064d
  4037c2:	leave  
  4037c3:	stos   DWORD PTR es:[edi],eax
  4037c4:	or     eax,ebx
  4037c6:	ret    
  4037c7:	ffree  st(5)
  4037c9:	push   esp
  4037ca:	call   0xb780:0x261eced1
  4037d1:	mov    dh,0xc1
  4037d3:	sar    dl,1
  4037d5:	xchg   edi,eax
  4037d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d7:	pop    es
  4037d8:	out    0x52,eax
  4037da:	(bad)  
  4037db:	jecxz  0x40377e
  4037dd:	push   cs
  4037de:	jb     0x4037b2
  4037e0:	loopne 0x403812
  4037e2:	push   DWORD PTR [ebx-0x399037b8]
  4037e8:	cmc    
  4037e9:	cmp    eax,0xea8507aa
  4037ee:	and    al,bl
  4037f0:	ja     0x403824
  4037f2:	pop    es
  4037f3:	frstor [eax+ecx*1]
  4037f6:	rol    DWORD PTR [ebx],1
  4037f8:	ror    BYTE PTR fs:[ecx],1
  4037fb:	mov    bh,0xf9
  4037fd:	adc    BYTE PTR [eax-0x7c],ch
  403800:	pop    ebp
  403801:	add    DWORD PTR [eax-0x5035943b],0xffffffe9
  403808:	scas   al,BYTE PTR es:[edi]
  403809:	add    dl,BYTE PTR [ebp-0x6d]
  40380c:	out    dx,al
  40380d:	call   0xa296e353
  403812:	mov    al,0x4b
  403814:	sub    al,0xfd
  403816:	out    dx,eax
  403817:	and    eax,ecx
  403819:	push   cs
  40381a:	in     al,0x75
  40381c:	or     BYTE PTR [ecx],0x98
  40381f:	or     al,0x9a
  403821:	idiv   DWORD PTR [edx+0x5d]
  403824:	dec    eax
  403825:	mov    eax,ds:0xf4eca8d5
  40382a:	mov    dh,0xfd
  40382c:	mov    cl,ah
  40382e:	sub    BYTE PTR [esi-0x29],al
  403831:	stos   BYTE PTR es:[edi],al
  403832:	ret    
  403833:	int3   
  403834:	push   ebp
  403835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403836:	retf   0x719b
  403839:	imul   ecx,DWORD PTR [eax],0xffffffae
  40383c:	and    dh,BYTE PTR [ebp+0x7c]
  40383f:	ja     0x40389b
  403841:	ss adc dh,dl
  403844:	in     al,dx
  403845:	push   0x9
  403847:	xchg   ch,ah
  403849:	inc    edx
  40384a:	jmp    edx
  40384c:	arpl   WORD PTR [edx-0x32c11f53],dx
  403852:	call   0x95fc:0x7bd73ff8
  403859:	fnsave [esi-0x21]
  40385c:	mov    al,0x6e
  40385e:	adc    BYTE PTR [eax],dl
  403860:	xchg   esi,eax
  403861:	xor    DWORD PTR [edi+0x7aabb052],edi
  403867:	pop    ebx
  403868:	or     bl,BYTE PTR [esi+eax*1]
  40386b:	adc    BYTE PTR [eax],bh
  40386d:	out    dx,eax
  40386e:	into   
  40386f:	dec    esp
  403870:	cmp    DWORD PTR [esi-0x9],esp
  403873:	cmp    ch,dh
  403875:	data16 test ah,bh
  403878:	dec    eax
  403879:	test   ch,ch
  40387b:	out    0xfb,al
  40387d:	pop    ebp
  40387e:	pop    ebp
  40387f:	mov    bh,0x74
  403881:	(bad)  
  403882:	push   edi
  403883:	push   eax
  403884:	jg     0x4038bb
  403886:	enter  0xc814,0xc4
  40388a:	lea    ebp,[eax+0x2e1768a2]
  403890:	dec    edx
  403891:	gs (bad) 
  403893:	cmp    eax,0x2b4a068a
  403898:	or     al,0x92
  40389a:	popa   
  40389b:	lods   al,BYTE PTR ds:[esi]
  40389c:	fdiv   DWORD PTR [ecx-0x3]
  40389f:	push   cs
  4038a0:	push   edx
  4038a1:	dec    esi
  4038a2:	sbb    BYTE PTR [ebp+0x6],ah
  4038a5:	addr16 cmp eax,0xaee0a47e
  4038ab:	ja     0x40387a
  4038ad:	sahf   
  4038ae:	mov    esi,0x9a3a532b
  4038b3:	or     eax,0xac86adfe
  4038b8:	std    
  4038b9:	js     0x4038ae
  4038bb:	fimul  WORD PTR [ecx]
  4038bd:	xchg   ebp,eax
  4038be:	cmp    ebx,DWORD PTR [eax]
  4038c0:	push   edi
  4038c1:	mov    ds,WORD PTR [eax+0x1abcf7c0]
  4038c7:	icebp  
  4038c8:	repnz (bad) 
  4038ca:	jne    0x4038c3
  4038cc:	ja     0x4038e3
  4038ce:	lods   al,BYTE PTR ds:[esi]
  4038cf:	sub    esi,DWORD PTR [esi+0x3b77c3c0]
  4038d5:	ss pop ebx
  4038d7:	lahf   
  4038d8:	dec    edx
  4038d9:	add    BYTE PTR [eax-0x6b],bl
  4038dc:	mov    DWORD PTR [edi],ecx
  4038de:	cs call 0x1dcf:0x80b9c51c
  4038e6:	cmp    eax,0x20cb088
  4038eb:	std    
  4038ec:	mov    edi,0x832a7e97
  4038f1:	sbb    eax,0xe7c48db5
  4038f6:	cmp    ecx,0x6d810c5
  4038fc:	push   ds
  4038fd:	fs jge 0x4038fd
  403900:	xchg   esi,eax
  403901:	not    dh
  403903:	mov    edx,DWORD PTR [ebp-0x60]
  403906:	dec    ecx
  403907:	mov    eax,ds:0xf8dcb7c5
  40390c:	jno    0x403937
  40390e:	jb     0x40395a
  403910:	push   edx
  403911:	aam    0x8b
  403913:	stos   DWORD PTR es:[edi],eax
  403914:	xor    DWORD PTR [eax-0x15],esi
  403917:	fmul   QWORD PTR [esp+ebp*2]
  40391a:	mov    ds,WORD PTR [ebx+0x62]
  40391d:	ret    0xb33b
  403920:	pop    es
  403921:	pop    es
  403922:	sub    DWORD PTR [ecx-0x25],edx
  403925:	nop
  403926:	mov    BYTE PTR [ebp-0x4d],al
  403929:	xchg   edx,eax
  40392a:	mov    esi,DWORD PTR [edi+0x4fe97f8c]
  403930:	sub    ebx,DWORD PTR [edi]
  403932:	or     BYTE PTR [edi+0x52],al
  403935:	and    al,0x6
  403937:	pop    edx
  403938:	mov    cl,0x25
  40393a:	mov    esi,0x216a51a6
  40393f:	or     esi,DWORD PTR [ebx]
  403941:	xor    BYTE PTR [eax],dl
  403943:	push   ecx
  403944:	mov    al,0x94
  403946:	dec    eax
  403947:	jle    0x403989
  403949:	xor    eax,0x709b20fb
  40394e:	rcr    edx,cl
  403950:	out    dx,eax
  403951:	mov    al,ds:0x5514cc0
  403956:	dec    esi
  403957:	jbe    0x4038f3
  403959:	sbb    eax,0x5c160e12
  40395e:	lahf   
  40395f:	mov    BYTE PTR ds:0x24201517,ch
  403965:	ds sahf 
  403967:	in     eax,0x60
  403969:	sti    
  40396a:	mov    al,0x26
  40396c:	mov    ah,0x8f
  40396e:	stc    
  40396f:	in     al,dx
  403970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403971:	sbb    DWORD PTR [edx-0x6a],eax
  403974:	pop    eax
  403975:	frstor ds:0xef9f73ea
  40397b:	into   
  40397c:	pusha  
  40397d:	push   eax
  40397e:	or     DWORD PTR [ebx+0x63b7bc86],edi
  403984:	in     al,dx
  403985:	jnp    0x40397c
  403987:	adc    al,0x10
  403989:	loopne 0x403916
  40398b:	leave  
  40398c:	in     al,0x48
  40398e:	adc    BYTE PTR [edi-0x109efd7],0xb7
  403995:	add    eax,0x3f566b36
  40399a:	les    edi,FWORD PTR [edi+0x61f4a339]
  4039a0:	iret   
  4039a1:	jmp    0x55cfec60
  4039a6:	aas    
  4039a7:	and    DWORD PTR [ecx],0x54
  4039aa:	push   ss
  4039ab:	xchg   ebp,eax
  4039ac:	(bad)  
  4039ad:	fnsetpm(287 only) 
  4039af:	push   eax
  4039b0:	inc    ebx
  4039b1:	jl     0x403988
  4039b3:	xchg   ebx,eax
  4039b4:	cmp    eax,0xc851172
  4039b9:	sub    DWORD PTR [edi+0x12d4a08f],esp
  4039bf:	pop    edi
  4039c0:	cmp    eax,0xfb663735
  4039c5:	out    dx,eax
  4039c6:	cld    
  4039c7:	std    
  4039c8:	dec    ebp
  4039c9:	clc    
  4039ca:	inc    ebp
  4039cb:	ins    BYTE PTR es:[edi],dx
  4039cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039cd:	addr16 sbb eax,0xa45d4034
  4039d3:	ds mov dh,0x5c
  4039d6:	pushf  
  4039d7:	cmp    DWORD PTR [ecx-0x25],0x17
  4039db:	lock stc 
  4039dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039de:	(bad)  
  4039df:	jmp    0x4039aa
  4039e1:	stos   DWORD PTR es:[edi],eax
  4039e2:	data16 jmp 0x403a43
  4039e5:	push   ecx
  4039e6:	rcl    DWORD PTR [ecx],cl
  4039e8:	xchg   edi,eax
  4039e9:	adc    eax,0xec618f74
  4039ee:	push   edi
  4039ef:	repz not BYTE PTR [esi+0x7a]
  4039f3:	sbb    ebp,DWORD PTR [ebx]
  4039f5:	jae    0x403980
  4039f7:	add    BYTE PTR [esi],ah
  4039f9:	adc    DWORD PTR [esi-0x80],edi
  4039fc:	in     eax,0xa1
  4039fe:	outs   dx,BYTE PTR ds:[esi]
  4039ff:	pop    ebp
  403a00:	js     0x403992
  403a02:	jnp    0x4039c7
  403a04:	iret   
  403a05:	cld    
  403a06:	jno    0x4039a0
  403a08:	pop    ebp
  403a09:	fld    TBYTE PTR [ecx+0x67d1d79f]
  403a0f:	imul   BYTE PTR [edx-0x7b]
  403a12:	(bad)  
  403a13:	leave  
  403a14:	loope  0x4039cf
  403a16:	push   0x5a
  403a18:	sbb    ebx,DWORD PTR [eax+0x29687148]
  403a1e:	mov    dh,BYTE PTR [edi]
  403a20:	cli    
  403a21:	sti    
  403a22:	mov    cl,0x39
  403a24:	pop    es
  403a25:	mov    esi,0xf5e912e3
  403a2a:	ja     0x4039d0
  403a2c:	xchg   BYTE PTR [ecx],bl
  403a2e:	aaa    
  403a2f:	scas   al,BYTE PTR es:[edi]
  403a30:	clc    
  403a31:	rol    BYTE PTR ss:[edi+0x6c],1
  403a35:	int3   
  403a36:	sub    DWORD PTR [eax-0x64],esi
  403a39:	sahf   
  403a3a:	cmp    ah,bh
  403a3c:	jb     0x403a2c
  403a3e:	loop   0x4039d0
  403a40:	fdivr  st,st(1)
  403a42:	scas   eax,DWORD PTR es:[edi]
  403a43:	(bad)  
  403a44:	adc    DWORD PTR [ebx+ecx*8+0x6e],edx
  403a48:	stos   DWORD PTR es:[edi],eax
  403a49:	stc    
  403a4a:	mov    bl,0xf0
  403a4c:	pop    ebp
  403a4d:	cmp    dh,bh
  403a4f:	fwait
  403a50:	in     al,0x33
  403a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a53:	ffree  st(5)
  403a55:	sysret 
  403a57:	ins    BYTE PTR es:[edi],dx
  403a58:	(bad)
  403a5c:	jb     0x403a2d
  403a5e:	sub    ch,BYTE PTR [esi+0x7]
  403a61:	mov    bl,0x63
  403a63:	push   ds
  403a64:	jno    0x403aa0
  403a66:	jmp    0x9ff6:0x4799af1f
  403a6d:	out    0xcb,eax
  403a6f:	mov    al,ds:0xe5eb895c
  403a74:	mov    ebp,0xade3f20a
  403a79:	jmp    0xd952:0xe676ef8b
  403a80:	pop    ecx
  403a81:	mov    al,0x11
  403a83:	pop    esi
  403a84:	mov    al,0xba
  403a86:	leave  
  403a87:	sub    cl,bl
  403a89:	daa    
  403a8a:	je     0x403a20
  403a8c:	push   eax
  403a8d:	adc    eax,0xd1252ed1
  403a92:	outs   dx,BYTE PTR ds:[esi]
  403a93:	adc    al,0x90
  403a95:	pop    eax
  403a96:	dec    ecx
  403a97:	sub    dl,BYTE PTR [esi+eax*2+0x3723b10e]
  403a9e:	call   0x87b9e8a1
  403aa3:	sub    eax,0x8d3a1b4d
  403aa8:	in     al,0xcd
  403aaa:	aad    0xc2
  403aac:	(bad)  
  403aae:	(bad)  
  403aaf:	adc    bh,BYTE PTR [ebx+0x1ce3411b]
  403ab5:	add    al,0xf2
  403ab7:	mov    ebx,0x3bae098a
  403abc:	lods   eax,DWORD PTR ds:[esi]
  403abe:	cld    
  403abf:	xchg   ecx,eax
  403ac0:	push   es
  403ac1:	sub    esi,esp
  403ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac4:	mov    cl,0xc8
  403ac6:	in     eax,dx
  403ac7:	mov    eax,DWORD PTR [ecx+esi*1-0x71532451]
  403ace:	adc    esi,DWORD PTR [eax]
  403ad0:	adc    esp,DWORD PTR [edi+0x23]
  403ad3:	mov    ebx,0xe8841cc4
  403ad8:	(bad)  [edi]
  403ada:	jl     0x403b0a
  403adc:	xchg   edx,eax
  403add:	sbb    DWORD PTR [ebx+0x10415000],0xa4e48bd8
  403ae7:	loop   0x403aca
  403ae9:	arpl   WORD PTR [esi+0x74],sp
  403aec:	ss pop edi
  403aee:	out    0xda,eax
  403af0:	aas    
  403af1:	mov    edx,0x75df9dae
  403af6:	cmp    cl,dl
  403af8:	jb     0x403a7a
  403afa:	das    
  403afb:	jbe    0x403ade
  403afd:	sahf   
  403afe:	mov    dh,0x29
  403b00:	aam    0x1a
  403b02:	lahf   
  403b03:	ret    0xb0d4
  403b06:	clc    
  403b07:	fbld   TBYTE PTR [esi+0x23]
  403b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0b:	outs   dx,DWORD PTR ds:[esi]
  403b0c:	pop    esi
  403b0d:	je     0x403b23
  403b0f:	sub    esi,esp
  403b11:	sbb    BYTE PTR [ebx+0x1a],ah
  403b14:	(bad)  
  403b15:	fs inc ebx
  403b17:	call   0x1248:0xbaa15a69
  403b1e:	lahf   
  403b1f:	lahf   
  403b20:	mov    dh,0x9e
  403b22:	out    0xdc,al
  403b24:	lods   eax,DWORD PTR ds:[esi]
  403b25:	popa   
  403b26:	add    dl,ah
  403b28:	std    
  403b29:	add    al,0xa9
  403b2b:	xchg   esp,eax
  403b2c:	cmp    eax,0xd79b572
  403b31:	jno    0x403b10
  403b33:	stos   DWORD PTR es:[edi],eax
  403b34:	gs push esp
  403b36:	or     WORD PTR [eax+0x5c],bx
  403b3a:	cmp    DWORD PTR [eax-0xc956596],edx
  403b40:	dec    ecx
  403b41:	dec    ebp
  403b42:	(bad)  
  403b43:	cld    
  403b44:	inc    edi
  403b45:	call   0xc6e:0xd14aa3c0
  403b4c:	ss mov ebx,0x8106bbb8
  403b52:	mov    bh,0xf
  403b54:	in     al,dx
  403b55:	jo     0x403b81
  403b57:	rol    BYTE PTR [esp+eax*1-0x13628a35],1
  403b5e:	push   ecx
  403b5f:	out    0x5a,eax
  403b61:	xor    DWORD PTR [esi-0x3b],edx
  403b64:	pop    ebx
  403b65:	not    dl
  403b67:	cdq    
  403b68:	sub    eax,0xe9d9bc4
  403b6d:	cmc    
  403b6e:	push   cx
  403b70:	jle    0x403afb
  403b72:	outs   dx,DWORD PTR es:[esi]
  403b74:	fimul  WORD PTR [edx+0x2b67e2b8]
  403b7a:	cld    
  403b7b:	ficom  DWORD PTR ds:0xc331d77f
  403b81:	sbb    eax,0x93e73945
  403b86:	xchg   ebx,eax
  403b87:	loop   0x403b0a
  403b89:	fucom  st(3)
  403b8b:	int    0xc
  403b8d:	mov    dl,BYTE PTR [ebp+0x31]
  403b90:	jmp    0x672a:0xc3f9c1fb
  403b97:	xchg   DWORD PTR [ecx],ebx
  403b99:	adc    BYTE PTR [eax+ecx*8+0x28],bh
  403b9d:	test   al,0xa8
  403b9f:	std    
  403ba0:	test   BYTE PTR [esi],cl
  403ba2:	rcl    DWORD PTR [edi-0x1],cl
  403ba5:	sub    dl,BYTE PTR ds:0x497f2966
  403bab:	iret   
  403bac:	xchg   bh,bh
  403bae:	sub    edx,DWORD PTR [eax]
  403bb0:	sti    
  403bb1:	inc    ebx
  403bb3:	ins    DWORD PTR es:[edi],dx
  403bb4:	and    dl,BYTE PTR [edi-0x1b]
  403bb7:	cmp    DWORD PTR [ebx],edx
  403bb9:	ja     0x403c2c
  403bbb:	or     ebp,DWORD PTR [eax-0x5d]
  403bbe:	inc    esp
  403bbf:	retf   0xf21d
  403bc2:	fwait
  403bc3:	pop    eax
  403bc4:	call   0xddacf252
  403bc9:	lahf   
  403bca:	xchg   DWORD PTR [ecx+0x6e],esi
  403bcd:	cli    
  403bce:	sbb    BYTE PTR [ebx+edi*8],cl
  403bd1:	int    0xc
  403bd3:	and    al,0xfc
  403bd5:	sti    
  403bd6:	jl     0x403b6d
  403bd8:	mov    cl,0xbf
  403bda:	mov    esp,0x82740e8a
  403bdf:	jmp    0x403c38
  403be1:	xor    ebx,ebx
  403be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be4:	cmp    bh,BYTE PTR [edi+0x21]
  403be7:	or     cl,BYTE PTR [edi-0x1af06869]
  403bed:	scas   eax,DWORD PTR es:[edi]
  403bee:	stos   DWORD PTR es:[edi],eax
  403bef:	jo     0x403bce
  403bf1:	and    eax,0xfe83aa20
  403bf6:	push   edi
  403bf7:	inc    ebx
  403bf8:	jbe    0x403bc8
  403bfa:	cmp    DWORD PTR [eax],esp
  403bfc:	arpl   WORD PTR [ecx+0x6e370853],sp
  403c02:	arpl   WORD PTR [ebp+0x6f12f92c],bp
  403c08:	mov    ebp,0x535c4877
  403c0d:	push   eax
  403c0e:	pop    ecx
  403c0f:	(bad)  
  403c10:	lock adc BYTE PTR ss:[edi+0x5e],bh
  403c15:	popf   
  403c16:	jmp    0xccc8:0x7cd6b516
  403c1d:	dec    ebx
  403c1e:	lds    edx,FWORD PTR [edi]
  403c20:	test   eax,0x98a940cb
  403c25:	dec    edx
  403c26:	popf   
  403c27:	mov    esp,0x634cfb76
  403c2c:	mov    DWORD PTR [ebp-0x1d038088],0xe5d964dd
  403c36:	push   ss
  403c37:	(bad)  
  403c38:	bnd ja 0x403ca8
  403c3b:	out    dx,al
  403c3c:	jns    0x403bf0
  403c3e:	mov    cs,WORD PTR [ebp-0x940de83]
  403c44:	(bad)  
  403c45:	push   0xd4cc3dd1
  403c4a:	jo     0x403c46
  403c4c:	sbb    al,0x36
  403c4e:	outs   dx,BYTE PTR ds:[esi]
  403c4f:	pop    edx
  403c50:	retf   0xec4d
  403c53:	leave  
  403c54:	push   ds
  403c55:	cld    
  403c56:	xor    bl,BYTE PTR [ebx+ebx*2-0x3a]
  403c5a:	ss pushf 
  403c5c:	xchg   ecx,eax
  403c5d:	add    eax,DWORD PTR [esp+edi*1+0x41]
  403c61:	retf   0x3a0d
  403c64:	call   0xd751b0a8
  403c69:	pushf  
  403c6a:	ds xchg ecx,eax
  403c6c:	out    dx,al
  403c6d:	xchg   ebp,eax
  403c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c6f:	call   edx
  403c71:	loopne 0x403cb9
  403c73:	xchg   esi,eax
  403c74:	xor    edi,ebp
  403c76:	jmp    0x403ca1
  403c78:	lods   al,BYTE PTR ds:[esi]
  403c79:	shr    DWORD PTR [eax+0x1c],1
  403c7c:	push   edi
  403c7d:	ret    0xddeb
  403c80:	mov    bl,0x9a
  403c82:	fwait
  403c83:	mov    eax,0x17d5dbbf
  403c88:	fidivr DWORD PTR [ecx-0x1da168fa]
  403c8e:	arpl   WORD PTR ds:0x1b8f7b49,sp
  403c94:	test   eax,0xa261f5ef
  403c99:	pop    ebx
  403c9a:	jmp    0x403c62
  403c9c:	cld    
  403c9d:	or     al,0xcf
  403c9f:	jmp    0x3049dd55
  403ca4:	popf   
  403ca5:	cmp    bh,BYTE PTR [ebp+ebx*1-0x249a0c9a]
  403cac:	fild   DWORD PTR [edi+eiz*4-0xe]
  403cb0:	mov    bh,0x2f
  403cb2:	jno    0x403c40
  403cb4:	jno    0x403cdb
  403cb6:	jmp    0xc07:0x3532cb00
  403cbd:	inc    ecx
  403cbe:	stc    
  403cbf:	push   eax
  403cc0:	lock sbb BYTE PTR [edi-0x1a083c50],0x27
  403cc8:	adc    al,0xe7
  403cca:	ins    DWORD PTR es:[edi],dx
  403ccb:	es dec esp
  403ccd:	inc    ebp
  403cce:	xor    al,al
  403cd0:	neg    esp
  403cd2:	push   edi
  403cd3:	pop    ds
  403cd4:	pop    ss
  403cd5:	mov    dh,BYTE PTR [edi+0xb1a737]
  403cdb:	mov    edx,0xcb57b0e
  403ce0:	inc    eax
  403ce1:	ins    DWORD PTR es:[edi],dx
  403ce2:	mov    dh,0x48
  403ce4:	(bad)  
  403ce6:	repz and al,0xdb
  403ce9:	sbb    DWORD PTR [ebx-0x729b5b66],edx
  403cef:	mov    esi,esp
  403cf1:	jne    0x403c79
  403cf3:	iret   
  403cf4:	std    
  403cf5:	mov    ds:0x8253f703,eax
  403cfa:	xor    BYTE PTR [ecx],dh
  403cfc:	sub    bl,BYTE PTR [eax]
  403cfe:	(bad)  
  403cff:	out    0xcb,eax
  403d01:	retf   0x6320
  403d04:	and    eax,0x9a8e0027
  403d09:	daa    
  403d0a:	mov    eax,cs:0xb0631eaa
  403d10:	scas   eax,DWORD PTR es:[edi]
  403d11:	pop    esp
  403d12:	pop    ss
  403d13:	std    
  403d14:	adc    eax,0x8a9ba621
  403d19:	ja     0x403d5a
  403d1b:	je     0x403cb9
  403d1d:	sbb    eax,ecx
  403d1f:	fnstsw WORD PTR [edx-0x37]
  403d22:	addr16 mov ah,0x53
  403d25:	retf   0x158f
  403d28:	inc    ebx
  403d29:	mov    ds:0x7870d1f1,eax
  403d2e:	jo     0x403cc1
  403d30:	ret    
  403d31:	imul   edi,ebx,0x21
  403d34:	dec    ebp
  403d35:	das    
  403d36:	pop    esp
  403d37:	dec    ebx
  403d38:	add    ah,BYTE PTR [esi-0x53]
  403d3b:	into   
  403d3c:	push   0x400afa70
  403d41:	and    ecx,DWORD PTR [ecx-0x3d6c2b54]
  403d47:	xchg   BYTE PTR [esp+esi*2],dh
  403d4a:	ds fwait
  403d4c:	adc    BYTE PTR [eax],bh
  403d4e:	popf   
  403d4f:	ror    BYTE PTR [ebp+0x36],1
  403d52:	jl     0x403cf5
  403d54:	and    bl,dl
  403d56:	sbb    al,0xb8
  403d58:	mov    esi,0xb8c8a52d
  403d5d:	bsr    eax,DWORD PTR [edi+0x13]
  403d61:	xchg   edi,eax
  403d62:	lds    esi,FWORD PTR [esi-0xc442233]
  403d68:	sbb    al,0xd8
  403d6a:	pop    edi
  403d6b:	mov    al,ds:0x22df0025
  403d70:	or     eax,0x7aae1c04
  403d75:	inc    edx
  403d76:	dec    ebp
  403d77:	sbb    dl,ah
  403d79:	jp     0x403d9f
  403d7b:	add    BYTE PTR [eax-0x6ae34e46],al
  403d81:	outs   dx,BYTE PTR ds:[esi]
  403d82:	repnz dec ebp
  403d84:	mov    edi,0x21506057
  403d89:	aad    0x69
  403d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d8c:	nop
  403d8d:	pop    ebx
  403d8e:	js     0x403d60
  403d90:	sbb    bh,BYTE PTR [edi+0x56d66e86]
  403d96:	in     eax,dx
  403d97:	aam    0x73
  403d99:	xchg   ecx,eax
  403d9a:	pop    esi
  403d9b:	and    DWORD PTR [ecx],0xc24efffc
  403da1:	mov    ah,0xc5
  403da3:	cmp    eax,0xeae0e28e
  403da8:	rol    DWORD PTR [eax+0x1ba11456],cl
  403dae:	out    0xbd,al
  403db0:	mov    DWORD PTR [esp+ebp*4-0x6f],ecx
  403db4:	and    al,0x6b
  403db6:	and    al,0x5e
  403db8:	ret    
  403db9:	(bad)  
  403dba:	jecxz  0x403d74
  403dbc:	(bad)  
  403dbe:	iret   
  403dbf:	test   BYTE PTR [esi],0x3c
  403dc2:	mov    ebp,0x3c2bc7da
  403dc7:	cli    
  403dc8:	xor    eax,0xa8f33c0e
  403dcd:	lahf   
  403dce:	sub    ecx,DWORD PTR [ebp-0x543afb81]
  403dd4:	rcl    cl,cl
  403dd6:	fild   QWORD PTR [ebp+edi*8-0x5d75bcef]
  403ddd:	add    al,0xed
  403ddf:	or     DWORD PTR [eax-0x25],esp
  403de2:	sub    BYTE PTR [eax-0x1727b5f2],bl
  403de8:	ffreep st(6)
  403dea:	cmp    al,0x8e
  403dec:	dec    edx
  403ded:	jl     0x403d81
  403def:	fisttp DWORD PTR [eax+0x64]
  403df2:	xchg   edi,eax
  403df3:	fisubr DWORD PTR [esi-0x35]
  403df6:	neg    dl
  403df8:	push   ss
  403df9:	and    ch,bl
  403dfb:	call   0x4a627b50
  403e00:	sub    eax,0x2f7fcb08
  403e05:	jno    0x403dad
  403e07:	sub    esp,DWORD PTR [esp+ebx*2-0x2c]
  403e0b:	leave  
  403e0c:	stos   BYTE PTR es:[edi],al
  403e0d:	push   ss
  403e0e:	mov    edi,0x98281bf2
  403e13:	cli    
  403e14:	jle    0x403e81
  403e16:	pop    edi
  403e17:	adc    ebx,DWORD PTR [ecx]
  403e19:	cwde   
  403e1a:	inc    edi
  403e1b:	mov    cl,BYTE PTR [eax+0x6ad8b14d]
  403e21:	mov    dl,0xfa
  403e23:	(bad)  
  403e24:	mov    eax,ds:0xab9a88d6
  403e29:	add    eax,0xe318d0c9
  403e2e:	aad    0x1
  403e30:	add    DWORD PTR [ebx],esi
  403e32:	in     al,dx
  403e33:	fcomi  st,st(2)
  403e35:	lods   eax,DWORD PTR ds:[esi]
  403e36:	rcl    DWORD PTR [esi-0x2fe1be23],cl
  403e3c:	adc    bh,BYTE PTR [esp+ebp*1+0x7d]
  403e40:	pop    ebx
  403e41:	add    al,0x34
  403e43:	mov    bl,0x44
  403e45:	sub    DWORD PTR [esi],ebx
  403e47:	xor    al,0x3d
  403e49:	push   esi
  403e4a:	add    eax,0x890bc4da
  403e4f:	mov    ds:0xe70017d9,al
  403e54:	clc    
  403e55:	dec    edi
  403e56:	sbb    al,BYTE PTR ss:[edx]
  403e59:	mov    esi,esi
  403e5b:	xchg   ebx,esp
  403e5d:	lock add BYTE PTR [esi+0xf5290bf],dh
  403e64:	adc    eax,0x9ec34938
  403e69:	mov    edx,0xa34a3fc7
  403e6e:	and    DWORD PTR [edx],esi
  403e70:	jnp    0x403ec1
  403e72:	sub    DWORD PTR [esp+eax*8-0x4a3ccad9],edi
  403e79:	or     ch,BYTE PTR [ecx+0x6c1e34d6]
  403e7f:	xor    al,dl
  403e81:	jb     0x403eab
  403e83:	jb     0x403e15
  403e85:	in     al,0xdd
  403e87:	xor    DWORD PTR [ecx+edi*2],edi
  403e8a:	jns    0x403eac
  403e8c:	stc    
  403e8d:	fwait
  403e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e8f:	rol    BYTE PTR [ebx+0x2],1
  403e92:	inc    eax
  403e93:	and    DWORD PTR [ebp+0x21],0xffffffef
  403e97:	pop    ds
  403e98:	je     0x403eaa
  403e9a:	into   
  403e9b:	xor    ebp,DWORD PTR [ecx-0x2a]
  403e9e:	xor    al,0x18
  403ea0:	adc    ch,BYTE PTR [esi-0x19]
  403ea3:	sbb    ah,BYTE PTR [edi+0x20]
  403ea6:	jno    0x403e6c
  403ea8:	dec    ecx
  403ea9:	mov    eax,ds:0x91b38499
  403eae:	cmc    
  403eaf:	das    
  403eb0:	inc    esi
  403eb1:	cwde   
  403eb2:	repnz cwde 
  403eb4:	imul   esp,ebx,0x90375dd5
  403eba:	test   DWORD PTR [esi-0x50],ebx
  403ebd:	cmp    cl,0xd8
  403ec0:	stc    
  403ec1:	mov    cl,0x56
  403ec3:	pop    ss
  403ec4:	pop    ss
  403ec5:	gs inc ebx
  403ec7:	push   0xfe7ed433
  403ecc:	arpl   WORD PTR [ecx+edi*2-0x42],si
  403ed0:	mov    bh,0x87
  403ed2:	sbb    eax,0x12bd93e5
  403ed7:	ins    DWORD PTR es:[edi],dx
  403ed8:	or     cl,ah
  403eda:	in     al,dx
  403edb:	icebp  
  403edc:	clc    
  403edd:	ret    
  403ede:	call   0x3415:0x376705d1
  403ee5:	sbb    dh,BYTE PTR [ebx+0x573be90d]
  403eeb:	fistp  WORD PTR [esi+0x65]
  403eee:	int    0x97
  403ef0:	mov    dl,0x90
  403ef2:	not    DWORD PTR [ebp*2+0x6ec0cd9b]
  403ef9:	adc    al,0xe9
  403efb:	or     al,0xa2
  403efd:	push   edi
  403efe:	adc    al,BYTE PTR [edx+0x7a]
  403f01:	mov    WORD PTR [edi-0x3f],?
  403f04:	jge    0x403ee4
  403f06:	sbb    ch,BYTE PTR [edi+0x68]
  403f09:	add    DWORD PTR [ebp+0x525c5fb3],ebp
  403f0f:	lods   eax,DWORD PTR ds:[esi]
  403f10:	ja     0x403f4c
  403f12:	xlat   BYTE PTR ds:[ebx]
  403f13:	or     eax,DWORD PTR [ebp+0x21]
  403f16:	push   edx
  403f17:	call   0x5b6a2742
  403f1c:	cli    
  403f1d:	cli    
  403f1e:	pop    esp
  403f1f:	test   DWORD PTR [bp-0x8],ebp
  403f23:	aam    0xb6
  403f25:	in     al,dx
  403f26:	mov    ebx,0x4183d7f5
  403f2b:	sbb    al,0x96
  403f2d:	dec    esi
  403f2e:	loopne 0x403eb0
  403f30:	fwait
  403f31:	pop    ebx
  403f32:	sub    al,bl
  403f34:	sbb    dh,cl
  403f36:	(bad)  
  403f37:	mov    BYTE PTR [ecx],0xf0
  403f3a:	dec    ebp
  403f3b:	(bad)  
  403f3c:	fist   WORD PTR [ebx-0x71]
  403f3f:	enter  0xaef6,0xfb
  403f43:	cmp    dl,BYTE PTR [esi+0x4e187c14]
  403f49:	cmp    dl,BYTE PTR [ebx-0x3ed89ee4]
  403f4f:	sbb    dh,0x4f
  403f52:	leave  
  403f53:	add    DWORD PTR [edx],edx
  403f55:	stos   DWORD PTR es:[edi],eax
  403f56:	add    DWORD PTR [ebx+0x7795f6c1],ebx
  403f5c:	clc    
  403f5d:	mov    dl,0xbc
  403f5f:	add    bh,dl
  403f61:	jmp    esi
  403f63:	jae    0x403fac
  403f65:	jmp    0x403f8d
  403f67:	outs   dx,BYTE PTR ds:[esi]
  403f68:	hlt    
  403f69:	pmulhw mm0,QWORD PTR [eax+0x7c]
  403f6d:	xchg   BYTE PTR [ebx+0x23],dh
  403f70:	mov    ah,0x53
  403f72:	test   eax,0x51b6c90c
  403f77:	sub    esp,DWORD PTR [eax+0x208c2a4f]
  403f7d:	in     al,dx
  403f7e:	jne    0x403f42
  403f80:	retf   0x80c0
  403f83:	dec    edi
  403f84:	(bad)  
  403f85:	adc    DWORD PTR ds:0x197c8791,edx
  403f8b:	daa    
  403f8c:	push   cs
  403f8d:	mul    bl
  403f8f:	(bad)  
  403f90:	ins    BYTE PTR es:[edi],dx
  403f91:	pop    eax
  403f92:	(bad)  
  403f93:	loope  0x403f61
  403f95:	test   eax,0x5d7f5dac
  403f9a:	pop    ss
  403f9b:	add    al,0x2c
  403f9d:	inc    edi
  403f9e:	jo     0x403f7b
  403fa0:	out    0x4f,eax
  403fa2:	fidivr WORD PTR [edx]
  403fa4:	sbb    edx,DWORD PTR [eax+esi*1-0x7f]
  403fa8:	push   edx
  403fa9:	fadd   QWORD PTR [edx+0x448edc73]
  403faf:	sub    ch,BYTE PTR [ebx-0x2f]
  403fb2:	jne    0x403f34
  403fb4:	inc    edx
  403fb5:	mov    eax,ds:0xf4aa7672
  403fba:	adc    eax,0x11915331
  403fbf:	xchg   esp,eax
  403fc0:	and    ebx,DWORD PTR [ebp-0x3522aca0]
  403fc6:	cmp    al,0x56
  403fc8:	sbb    ebx,DWORD PTR ds:0x64efa36d
  403fce:	jl     0x403f66
  403fd0:	xchg   ebx,eax
  403fd1:	mov    cl,0xdc
  403fd3:	dec    ecx
  403fd4:	imul   eax,DWORD PTR [ebp+0x4f999bec],0xfffffff4
  403fdb:	mov    DWORD PTR [ecx],edi
  403fdd:	stos   DWORD PTR es:[edi],eax
  403fde:	je     0x403f76
  403fe0:	shr    bh,cl
  403fe2:	ja     0x403f77
  403fe4:	mov    ds:0x65541b79,al
  403fe9:	adc    BYTE PTR [esi],dl
  403feb:	adc    eax,0x378a4f7b
  403ff0:	out    dx,al
  403ff1:	mov    dh,0x30
  403ff3:	fsub   st,st(0)
  403ff5:	jne    0x403fb7
  403ff7:	mov    edx,0x28284712
  403ffc:	dec    eax
  403ffd:	imul   edi,esi,0xffffffd3
  404000:	int    0x1
  404002:	hlt    
  404003:	icebp  
  404004:	data16 xor al,0x1b
  404007:	sub    esi,0x136f3b0d
  40400d:	fwait
  40400e:	aaa    
  40400f:	leave  
  404010:	pop    edx
  404011:	rcr    DWORD PTR [ebx+esi*4-0x75236739],0xa9
  404019:	push   ebx
  40401a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401c:	sti    
  40401d:	and    eax,0x83f93a12
  404022:	sti    
  404023:	adc    BYTE PTR [edi],bh
  404025:	stc    
  404026:	ret    0x719e
  404029:	jno    0x40408f
  40402b:	test   ebp,edx
  40402d:	mov    dl,0xf1
  40402f:	mov    bl,0xdd
  404031:	jl     0x403fd0
  404033:	ins    BYTE PTR es:[edi],dx
  404034:	and    al,BYTE PTR [esi*8-0x7ff0fc82]
  40403b:	mov    ch,BYTE PTR [ecx]
  40403d:	jecxz  0x404048
  40403f:	repz add BYTE PTR [eax],ch
  404042:	(bad)  
  404043:	or     eax,0x341f19bb
  404048:	es stc 
  40404a:	lods   al,BYTE PTR ds:[esi]
  40404b:	jne    0x404018
  40404d:	push   0xe71f26d4
  404052:	cmp    ebp,DWORD PTR [ebx-0x85f27c]
  404058:	mov    al,ds:0x894ec3bd
  40405d:	sub    eax,0xbc515e6d
  404062:	sub    BYTE PTR [ebx+0x51ecceb8],bl
  404068:	mov    bh,0xee
  40406a:	into   
  40406b:	ror    DWORD PTR [edi+0xe],0xc7
  40406f:	test   eax,0x77c0940f
  404074:	xchg   ebx,eax
  404075:	fld    st(2)
  404077:	add    eax,0x40f38fe8
  40407c:	aam    0x46
  40407e:	icebp  
  40407f:	pop    esi
  404080:	jae    0x4040c4
  404082:	fnstsw WORD PTR [esi-0x42]
  404085:	inc    esi
  404086:	ss call 0x14d5:0xf952ddfe
  40408e:	out    dx,eax
  40408f:	inc    eax
  404090:	push   ss
  404091:	sahf   
  404092:	jne    0x404089
  404094:	int    0x5e
  404096:	test   DWORD PTR [ebx],esi
  404098:	sti    
  404099:	stc    
  40409a:	xor    DWORD PTR [edx],ebp
  40409c:	dec    ecx
  40409d:	or     DWORD PTR [esi+edx*8+0x74],esi
  4040a1:	stos   DWORD PTR es:[edi],eax
  4040a2:	or     al,0x5b
  4040a4:	mov    esp,0xd67f5e6
  4040a9:	dec    ebx
  4040aa:	mov    dh,0x5
  4040ac:	aas    
  4040ad:	mov    ecx,fs
  4040af:	in     eax,0xec
  4040b1:	push   ds
  4040b2:	ret    0x633
  4040b5:	sbb    DWORD PTR [edi],edx
  4040b7:	xchg   edx,eax
  4040b8:	inc    eax
  4040b9:	jmp    0xb0c7:0x5ac0e7df
  4040c0:	adc    ch,BYTE PTR [edx-0x6dbba171]
  4040c6:	mov    al,0x94
  4040c8:	sub    ah,dl
  4040ca:	mov    ds:0xcee006d,al
  4040cf:	ret    
  4040d0:	and    dh,dl
  4040d2:	fisttp DWORD PTR [ecx-0x7fefb141]
  4040d8:	sub    bh,ah
  4040da:	sub    bh,cl
  4040dc:	enter  0x79a2,0xd0
  4040e0:	dec    esp
  4040e1:	jmp    0x101e:0x2e45a1
  4040e8:	pusha  
  4040e9:	inc    ebx
  4040ea:	and    bh,ah
  4040ec:	mov    edi,0xd4bc211a
  4040f1:	in     al,0x11
  4040f3:	jle    0x4040ca
  4040f5:	clc    
  4040f6:	push   esp
  4040f7:	int3   
  4040f8:	and    dh,dl
  4040fa:	shr    ah,cl
  4040fc:	frstor ds:0xd42be5b
  404102:	mov    al,0xdd
  404104:	lds    esp,FWORD PTR [edi]
  404106:	mov    ds:0x16c0422f,eax
  40410b:	sub    BYTE PTR [edi+0x7dd4b5d9],0x17
  404112:	push   0xeeb1cda9
  404117:	push   ebp
  404118:	ins    BYTE PTR es:[edi],dx
  404119:	aaa    
  40411a:	pop    esp
  40411b:	std    
  40411c:	inc    edi
  40411d:	add    al,0xb3
  40411f:	sub    al,0xd1
  404121:	enter  0xe40f,0x14
  404125:	cmp    al,0x2c
  404127:	push   0xffffffdd
  404129:	call   0x49558422
  40412e:	sahf   
  40412f:	adc    al,0x20
  404131:	int3   
  404132:	xchg   ecx,eax
  404133:	aaa    
  404134:	sub    bh,dh
  404136:	xor    DWORD PTR [esi-0x3],ebx
  404139:	retf   0xcf7e
  40413c:	mov    edx,0x9c94a2d5
  404141:	iret   
  404142:	push   ebx
  404143:	mov    bh,0xd9
  404145:	out    0x4b,eax
  404147:	pop    ss
  404148:	nop
  404149:	add    eax,0x71d00480
  40414e:	(bad)  
  40414f:	hlt    
  404150:	push   cs
  404151:	outs   dx,BYTE PTR ds:[esi]
  404152:	(bad)  
  404154:	xchg   edi,eax
  404155:	dec    ebx
  404156:	or     dl,dl
  404158:	ins    BYTE PTR es:[edi],dx
  404159:	push   ds
  40415a:	popf   
  40415b:	or     esi,DWORD PTR [edx-0x77071131]
  404161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404162:	jmp    0x83a2:0xc1b3bc59
  404169:	and    eax,DWORD PTR ds:0x377d4631
  40416f:	pop    ecx
  404170:	jno    0x4041da
  404172:	call   0x1cbc3b95
  404177:	xor    bh,BYTE PTR [ebx+0x40]
  40417a:	xor    DWORD PTR [edx-0x61],0xffffffde
  40417e:	mov    eax,ds:0xb1ca0813
  404183:	sub    eax,0x23027c12
  404188:	pop    ss
  404189:	scas   eax,DWORD PTR es:[edi]
  40418a:	sbb    eax,0x99cfcf55
  40418f:	imul   ebx,DWORD PTR [ebx-0x548761],0x1865a934
  404199:	dec    DWORD PTR [esi+0x1978a08c]
  40419f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a0:	mov    DWORD PTR [esi-0x4b],ebp
  4041a3:	mov    ecx,0x3a3aa8b9
  4041a8:	mov    dl,0xa1
  4041aa:	or     BYTE PTR [esi],ch
  4041ac:	or     edi,ecx
  4041ae:	in     eax,0x62
  4041b0:	xor    bh,bh
  4041b2:	adc    BYTE PTR [ecx+0x2b],dl
  4041b5:	arpl   WORD PTR [esi+0x48],sp
  4041b8:	int    0xc4
  4041ba:	popf   
  4041bb:	out    dx,al
  4041bc:	outs   dx,DWORD PTR ds:[esi]
  4041bd:	mov    dl,0x92
  4041bf:	dec    ebx
  4041c0:	neg    edx
  4041c2:	mov    WORD PTR [ebp+0x1da864ac],es
  4041c8:	ds mov eax,0x5a081926
  4041ce:	daa    
  4041cf:	mov    ah,0xc9
  4041d1:	arpl   WORD PTR [ecx+0x58],si
  4041d4:	mov    al,0x77
  4041d6:	dec    esp
  4041d7:	enter  0x6694,0xa6
  4041db:	dec    esi
  4041dc:	sbb    BYTE PTR [eax-0x72],cl
  4041df:	(bad)  
  4041e0:	imul   esp,edi,0x5ce46ebe
  4041e6:	pusha  
  4041e7:	add    cl,BYTE PTR [esi+0x48]
  4041ea:	cli    
  4041eb:	fldcw  WORD PTR [eax]
  4041ed:	fwait
  4041ee:	and    ebx,edi
  4041f0:	mov    BYTE PTR [esi],bl
  4041f2:	scas   al,BYTE PTR es:[edi]
  4041f3:	add    al,0xb5
  4041f5:	enter  0x1b29,0x80
  4041f9:	loop   0x4041e1
  4041fb:	add    al,0xba
  4041fd:	and    DWORD PTR ss:[ebp+0x1c],ebp
  404201:	or     eax,0x4cb07dc2
  404206:	ins    BYTE PTR es:[edi],dx
  404207:	jnp    0x40420c
  404209:	shr    DWORD PTR [ebp+0x339b90b2],cl
  40420f:	dec    ebp
  404210:	adc    BYTE PTR [ecx-0x64],dh
  404213:	xchg   edx,edi
  404215:	mov    BYTE PTR [ebx],ch
  404217:	stc    
  404218:	inc    esi
  404219:	fstp   QWORD PTR [eax+0x38]
  40421c:	inc    esi
  40421d:	jge    0x40425f
  40421f:	xchg   BYTE PTR ds:0xeed17614,al
  404225:	xor    eax,0xb7cb8eac
  40422a:	mov    ah,0xda
  40422c:	mov    BYTE PTR [ebp+edi*2+0x422fdddd],dh
  404233:	cmp    ch,ah
  404235:	pop    ebx
  404236:	cld    
  404237:	add    ah,BYTE PTR [ebx]
  404239:	mov    al,cl
  40423b:	pusha  
  40423c:	mov    eax,0x20504415
  404241:	outs   dx,DWORD PTR ds:[esi]
  404242:	push   ebx
  404243:	data16 daa 
  404245:	sahf   
  404246:	mov    ah,0x78
  404248:	jae    0x404212
  40424a:	sbb    al,0x2a
  40424c:	into   
  40424d:	je     0x40425c
  40424f:	cs std 
  404251:	ss pop esp
  404253:	sbb    al,0xb5
  404255:	mov    eax,ds:0xad5783c7
  40425a:	mov    al,ds:0xa17ac05
  40425f:	mov    ebp,fs
  404261:	xor    ch,BYTE PTR [eax-0x5e]
  404264:	add    cl,BYTE PTR [edx+eax*2+0x2]
  404268:	lds    ebx,FWORD PTR [esi]
  40426a:	enter  0x7a95,0x8d
  40426e:	(bad)  
  404270:	xchg   ebx,eax
  404271:	bound  edi,QWORD PTR [ebp+0x29]
  404274:	ja     0x404295
  404276:	int    0x51
  404278:	xor    DWORD PTR [ebx+0x4958dbf4],esp
  40427e:	jns    0x4042b7
  404280:	mov    eax,0x88e2a4ea
  404285:	push   esp
  404286:	jmp    0xa003f216
  40428b:	out    0x86,al
  40428d:	dec    eax
  40428e:	in     eax,0x68
  404290:	add    ebp,DWORD PTR [ebx]
  404292:	inc    edx
  404293:	push   0x6528064c
  404298:	or     DWORD PTR [ebp+0x6664970c],ecx
  40429e:	repnz sbb ch,bh
  4042a1:	aam    0x7f
  4042a3:	and    eax,0x84e3e67f
  4042a8:	(bad)  [edi+0x6a7ee31]
  4042ae:	mov    edi,0xf032ed55
  4042b3:	push   cs
  4042b4:	cwde   
  4042b5:	jmp    0xd79e:0x8363824d
  4042bc:	sub    eax,0x17e4beda
  4042c1:	pop    ds
  4042c2:	fdivr  st,st(5)
  4042c4:	mov    DWORD PTR [esi*8-0x31e300ec],ebx
  4042cb:	aam    0xe8
  4042cd:	ret    0x93da
  4042d0:	retf   
  4042d1:	mov    ds:0xe9193209,al
  4042d6:	pop    esi
  4042d7:	cmp    ebp,edi
  4042d9:	lahf   
  4042da:	and    BYTE PTR [edx-0x1a],0x3e
  4042de:	mov    WORD PTR [esp+edx*8+0x48bdfb4e],?
  4042e5:	cli    
  4042e6:	rcr    DWORD PTR [ecx],0x43
  4042e9:	jo     0x404297
  4042eb:	push   edi
  4042ec:	in     eax,0xea
  4042ee:	retf   
  4042ef:	icebp  
  4042f0:	rol    eax,0xd8
  4042f3:	ror    ecx,0x87
  4042f6:	jb     0x404302
  4042f8:	ror    DWORD PTR ds:0x36b6d9c7,1
  4042fe:	mov    ebp,DWORD PTR [edx+0x58]
  404301:	mov    esi,0x1c043b21
  404306:	or     bh,cl
  404308:	push   cs
  404309:	and    ah,BYTE PTR [edx+ebp*1-0x21]
  40430d:	mov    ecx,0xe928091b
  404312:	xchg   ecx,eax
  404313:	xchg   ebp,eax
  404314:	and    DWORD PTR ds:0x7f20371f,0x56
  40431b:	adc    BYTE PTR [eax],dl
  40431d:	and    ebp,DWORD PTR [esi]
  40431f:	cdq    
  404320:	rcl    eax,0xf3
  404323:	in     eax,dx
  404324:	pop    esp
  404325:	jmp    DWORD PTR [esi]
  404327:	and    al,BYTE PTR [edi]
  404329:	mov    gs,WORD PTR [ecx+0x70f78a41]
  40432f:	pusha  
  404330:	(bad)  
  404331:	fstp   DWORD PTR ds:0x9dc6c055
  404337:	pop    edi
  404338:	and    eax,0x556307d4
  40433d:	cmp    ebp,ecx
  40433f:	jg     0x4042d1
  404341:	jecxz  0x40435e
  404343:	push   ds
  404344:	adc    al,0x39
  404346:	call   0xfd093636
  40434b:	adc    edi,edx
  40434d:	int3   
  40434e:	jmp    0xf8bf:0x918030e1
  404355:	out    dx,al
  404356:	(bad)  
  404358:	popa   
  404359:	inc    ebx
  40435a:	mov    DWORD PTR [edi],esi
  40435c:	jns    0x4042fa
  40435e:	out    dx,al
  40435f:	clc    
  404360:	lahf   
  404361:	mov    esp,edi
  404363:	imul   esp,DWORD PTR [ebx-0x4a1702b],0x84c0433b
  40436d:	jnp    0x404361
  40436f:	mov    bh,0x42
  404371:	sahf   
  404372:	jecxz  0x404314
  404374:	xchg   dl,ch
  404376:	shr    DWORD PTR [ecx-0x3d],0x2c
  40437a:	rcr    DWORD PTR [eax+0x64],1
  40437d:	inc    edi
  40437e:	frstor [eax+0x67]
  404381:	pop    edi
  404382:	iret   
  404383:	mov    ds:0x4124d798,eax
  404388:	rcl    esp,1
  40438a:	cmp    BYTE PTR [edx-0x479781db],0xba
  404391:	pop    edi
  404392:	ds (bad) 
  404394:	retf   0x8114
  404397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404398:	jl     0x4043ec
  40439a:	jecxz  0x4043ef
  40439c:	(bad)  
  40439d:	fs pop esi
  40439f:	sti    
  4043a0:	xor    ch,BYTE PTR [ebp+0x41]
  4043a3:	jp     0x4043f7
  4043a5:	adc    al,0xbf
  4043a7:	lock shr BYTE PTR [esi+edi*1],cl
  4043ab:	push   ss
  4043ac:	fnstcw WORD PTR [esi+edx*8-0x60fb5d7d]
  4043b3:	jb     0x4043cb
  4043b5:	push   edx
  4043b6:	mov    ebp,0xa7f99059
  4043bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043bc:	xlat   BYTE PTR ds:[ebx]
  4043bd:	xlat   BYTE PTR ds:[ebx]
  4043be:	cwde   
  4043bf:	popf   
  4043c0:	or     ecx,DWORD PTR [eax+eiz*4]
  4043c3:	dec    edi
  4043c4:	ss and eax,edx
  4043c7:	or     ch,BYTE PTR [edi+0x3dd93671]
  4043cd:	int    0x44
  4043cf:	or     BYTE PTR [edx],dh
  4043d1:	push   ds
  4043d2:	mov    bh,0x8
  4043d4:	data16 jle 0x4043ea
  4043d7:	loopne 0x404369
  4043d9:	jg     0x4043ad
  4043db:	lock shl DWORD PTR [eax-0x37],0xca
  4043e0:	into   
  4043e1:	adc    DWORD PTR [esi],ebp
  4043e3:	loope  0x404411
  4043e5:	dec    ecx
  4043e6:	cs push es
  4043e8:	jbe    0x40437a
  4043ea:	ins    BYTE PTR es:[edi],dx
  4043eb:	pop    ds
  4043ec:	inc    edx
  4043ed:	int    0x46
  4043ef:	gs xor eax,edi
  4043f2:	mov    ah,0x8e
  4043f4:	add    BYTE PTR [edi-0x6a],al
  4043f7:	std    
  4043f8:	out    0xa8,al
  4043fa:	pop    ebx
  4043fb:	push   esp
  4043fc:	xchg   ecx,eax
  4043fd:	mov    ebx,0xebd7ff00
  404402:	xchg   esi,eax
  404403:	jmp    0x40443f
  404405:	cmc    
  404406:	mov    ds:0x3b4d91ea,eax
  40440b:	ins    DWORD PTR es:[edi],dx
  40440c:	mov    edx,0xcd004dc2
  404411:	outs   dx,BYTE PTR ds:[esi]
  404412:	sub    ebp,edx
  404414:	scas   al,BYTE PTR es:[edi]
  404415:	and    eax,DWORD PTR [esp+eiz*4+0x55ccd62d]
  40441c:	cmp    BYTE PTR [edi-0x63],bh
  40441f:	inc    ecx
  404420:	sbb    DWORD PTR [ebx+0x50],eax
  404423:	xor    ah,BYTE PTR [ecx]
  404425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404426:	sar    DWORD PTR [ecx+0x3f],cl
  404429:	dec    ecx
  40442a:	mov    ebx,0xd16ebac1
  40442f:	test   DWORD PTR [ecx],0xf0921546
  404435:	mov    esi,0x68dafd7f
  40443a:	imul   BYTE PTR [edi-0x8]
  40443d:	jge    0x4043de
  40443f:	xlat   BYTE PTR ds:[ebx]
  404440:	shl    BYTE PTR [esi+0x775060a8],0x45
  404447:	das    
  404448:	jns    0x4043e4
  40444a:	mov    ecx,0xdd3a05b
  40444f:	std    
  404450:	dec    ecx
  404451:	dec    esi
  404452:	mov    cl,0x9d
  404454:	mov    edi,0x35d80b13
  404459:	jge    0x404475
  40445b:	pop    edx
  40445c:	or     edx,DWORD PTR [ebx-0x2aa209cc]
  404462:	rcr    DWORD PTR [ebx+0x77],1
  404465:	jno    0x4044d7
  404467:	mov    BYTE PTR [ecx-0x2c],bl
  40446a:	mov    bl,0x9b
  40446c:	stos   DWORD PTR es:[edi],eax
  40446d:	mov    WORD PTR [edx],es
  40446f:	fs inc ebx
  404471:	jne    0x40446a
  404473:	mov    edi,0xb394c862
  404478:	es ins DWORD PTR es:[edi],dx
  40447a:	or     BYTE PTR [edx-0x36bd06b0],dh
  404480:	pop    ds
  404481:	fnstcw WORD PTR [eax]
  404483:	mov    edx,DWORD PTR [esi-0xe4eb70]
  404489:	mov    edi,0x107be2c6
  40448e:	sbb    cl,BYTE PTR [ecx]
  404490:	std    
  404491:	xchg   ebx,eax
  404492:	xchg   esi,eax
  404493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404494:	cmc    
  404495:	sbb    al,BYTE PTR [ecx+0x77]
  404498:	je     0x40444b
  40449a:	rcr    BYTE PTR [edi],cl
  40449c:	xchg   esi,eax
  40449d:	sahf   
  40449e:	pop    esp
  40449f:	mov    al,ds:0x6896e128
  4044a4:	ror    edi,0x89
  4044a7:	ja     0x404515
  4044a9:	daa    
  4044aa:	ja     0x4044cd
  4044ac:	sbb    ecx,DWORD PTR [ecx+0x226c7c3c]
  4044b2:	fsub   QWORD PTR [eax+edi*4+0x67462c13]
  4044b9:	lahf   
  4044ba:	or     ch,BYTE PTR [ebx]
  4044bc:	jbe    0x40451f
  4044be:	push   edi
  4044bf:	pop    ds
  4044c0:	xchg   BYTE PTR [edi-0x68],dl
  4044c3:	jae    0x4044e6
  4044c5:	ficomp DWORD PTR [edx-0x28]
  4044c8:	dec    ebx
  4044c9:	dec    edi
  4044ca:	xor    esp,DWORD PTR [ecx]
  4044cc:	inc    eax
  4044cd:	outs   dx,BYTE PTR ds:[esi]
  4044ce:	mov    ebp,0xb94e32d1
  4044d3:	sub    DWORD PTR [eax+0x543a0be4],eax
  4044d9:	dec    esi
  4044da:	inc    ebp
  4044db:	loop   0x404536
  4044dd:	mov    esi,0xa0d3b106
  4044e2:	and    ebx,0x4c
  4044e5:	clc    
  4044e6:	ja     0x40453c
  4044e8:	dec    eax
  4044e9:	pushf  
  4044ea:	aam    0x88
  4044ec:	sub    eax,0x81cadf46
  4044f1:	or     dl,BYTE PTR [eax+0x715e51b4]
  4044f7:	lock mov DWORD PTR cs:[edi+ebp*4],esi
  4044fc:	xor    esp,DWORD PTR [ecx+0x53]
  4044ff:	push   ebp
  404500:	dec    ebp
  404501:	pop    esp
  404502:	push   esi
  404503:	jae    0x4044ae
  404505:	imul   eax,DWORD PTR ds:0xb066b264,0x9541ba1a
  40450f:	(bad)  
  404510:	push   ebx
  404511:	fldcw  WORD PTR [esi]
  404513:	fist   WORD PTR [edx-0x16e8597]
  404519:	xchg   edx,eax
  40451a:	sbb    BYTE PTR [esp+eiz*4-0x6c0fcac8],ch
  404521:	mov    dh,0xa3
  404523:	jae    0x404526
  404525:	adc    al,0xc3
  404527:	pop    ecx
  404528:	in     eax,dx
  404529:	pop    edi
  40452a:	pop    esp
  40452b:	rcl    dl,0xe9
  40452e:	cdq    
  40452f:	icebp  
  404530:	mov    ds:0x7d30a7f1,eax
  404535:	test   BYTE PTR [ebp+0xc],dh
  404538:	jo     0x4045ab
  40453a:	mov    BYTE PTR [ebx+0x168cd4a7],bl
  404540:	mov    ch,0x9e
  404542:	sbb    al,0x34
  404544:	leave  
  404545:	jg     0x4044cb
  404547:	std    
  404548:	sbb    BYTE PTR [edx-0x5de777f5],0x4b
  40454f:	dec    ebx
  404550:	js     0x4045c7
  404552:	out    dx,al
  404553:	aad    0xb7
  404555:	lahf   
  404556:	dec    edx
  404557:	imul   edx,DWORD PTR [esp+ecx*2],0x41
  40455b:	loopne 0x404579
  40455d:	shr    BYTE PTR [ecx+0x6fb2c872],1
  404563:	mov    ecx,ss
  404565:	pop    esp
  404566:	and    DWORD PTR [ecx+0x73726c8],ebp
  40456c:	fldenv [ebx-0x31]
  40456f:	sub    DWORD PTR [ebx-0x1d],ecx
  404572:	hlt    
  404573:	mov    eax,0xbb8ee33a
  404578:	aas    
  404579:	ret    0x64ca
  40457c:	dec    esp
  40457d:	mov    al,BYTE PTR [ebx]
  40457f:	mov    ds:0x87726fef,eax
  404584:	mov    ah,0xf4
  404586:	jp     0x40451f
  404588:	imul   ecx,DWORD PTR [edx+0x7c],0x648b8c2
  40458f:	add    cl,BYTE PTR [eax+eax*4+0x4db0d45a]
  404596:	push   esp
  404597:	iret   
  404598:	gs cmp eax,0xaadef417
  40459e:	out    0x3b,al
  4045a0:	loope  0x4045cb
  4045a2:	mov    ebp,0x25522386
  4045a7:	jnp    0x4045c5
  4045a9:	cmp    eax,0xb9e6f7a
  4045ae:	inc    esp
  4045af:	cmp    ebp,esp
  4045b1:	cdq    
  4045b2:	sub    cl,BYTE PTR [eax+0x5f]
  4045b5:	imul   esp,DWORD PTR [edi-0x2c8b80c],0x8dade029
  4045bf:	sbb    BYTE PTR [ebx-0x5f],dl
  4045c2:	mov    ds:0x3f1b22ea,eax
  4045c7:	test   al,0xac
  4045c9:	sbb    BYTE PTR [edi-0x56],0x9c
  4045cd:	sub    eax,0x3ec0246
  4045d2:	or     al,0x6b
  4045d4:	dec    ebp
  4045d5:	(bad)  
  4045d6:	mov    eax,0xddf6b251
  4045db:	inc    ebp
  4045dc:	mov    eax,0x44d6549c
  4045e1:	jb     0x404652
  4045e3:	sahf   
  4045e4:	mov    DWORD PTR [ecx-0x75],ebx
  4045e7:	inc    eax
  4045e8:	fs (bad) 
  4045ea:	pop    ebp
  4045eb:	pusha  
  4045ec:	cmp    eax,0x9dbc4de4
  4045f1:	cmp    eax,0x65450bfa
  4045f6:	in     al,dx
  4045f7:	mov    cs,esi
  4045f9:	call   0xb3fe532d
  4045fe:	(bad)  
  404600:	rcr    DWORD PTR [eax+0x34],0x7f
  404604:	jle    0x4045db
  404606:	pop    ecx
  404607:	xchg   ebp,eax
  404608:	ficom  DWORD PTR [edi-0x6f3ffea8]
  40460e:	mov    ah,BYTE PTR [eax+0x0]
  404611:	test   DWORD PTR [ecx],eax
  404613:	call   0x1b67b2f0
  404618:	(bad)  
  404619:	pushf  
  40461a:	xchg   esp,eax
  40461b:	ins    BYTE PTR es:[edi],dx
  40461c:	xchg   eax,esi
  40461e:	ins    DWORD PTR es:[edi],dx
  40461f:	clc    
  404620:	bound  ecx,QWORD PTR [ebx-0x7f75cb20]
  404626:	test   al,0x5c
  404628:	xor    al,0x28
  40462a:	xchg   ebx,eax
  40462b:	cmp    ebp,esi
  40462d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40462e:	xchg   BYTE PTR [eax],ah
  404630:	push   ebx
  404631:	mov    dh,0x87
  404633:	pop    es
  404634:	xchg   edi,eax
  404635:	sub    dl,BYTE PTR [eax+0x4c]
  404638:	in     eax,dx
  404639:	rcr    DWORD PTR [ebx-0x485f131],1
  40463f:	push   edi
  404640:	stc    
  404641:	adc    al,0x7
  404643:	push   0xffffff93
  404645:	or     eax,0xf0849d88
  40464a:	enter  0x88d7,0xcb
  40464e:	mov    cl,0x7
  404650:	test   al,0xfd
  404652:	dec    ebp
  404653:	mov    esp,0xcfd392ce
  404658:	mov    cl,0xe4
  40465a:	sbb    BYTE PTR [edx],bl
  40465c:	sbb    ah,bl
  40465e:	jo     0x40462b
  404660:	sbb    al,0xc4
  404662:	fcmovne st,st(2)
  404664:	repnz cmp BYTE PTR [edi+0x1b],al
  404668:	lds    esi,FWORD PTR [ebp-0x8]
  40466b:	daa    
  40466c:	sbb    edx,eax
  40466e:	les    esi,FWORD PTR [ecx-0xc]
  404671:	aam    0x4f
  404673:	fisub  WORD PTR [ebp-0x4c144372]
  404679:	dec    ebp
  40467a:	fdivp  st(2),st
  40467c:	adc    bh,BYTE PTR ds:0xf800346c
  404682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404683:	push   es
  404684:	pop    ebp
  404685:	outs   dx,BYTE PTR ds:[esi]
  404686:	and    al,0x89
  404688:	jecxz  0x404655
  40468a:	fwait
  40468b:	outs   dx,BYTE PTR ds:[esi]
  40468c:	mov    ebx,0x64d9669f
  404691:	xchg   ecx,eax
  404692:	cmp    eax,0x2149b4c4
  404697:	pop    edx
  404698:	sbb    DWORD PTR [ecx+eax*2-0x9],0xffffffe9
  40469d:	mov    dl,0x56
  40469f:	dec    ebx
  4046a0:	push   0xd49f97cb
  4046a5:	dec    ebp
  4046a6:	sbb    al,0x9
  4046a8:	mov    dh,0x5b
  4046aa:	inc    edi
  4046ab:	cmp    edx,DWORD PTR [eax-0x23bc8d60]
  4046b1:	ins    BYTE PTR es:[edi],dx
  4046b2:	retf   
  4046b3:	jns    0x4046a3
  4046b5:	lods   eax,DWORD PTR ds:[esi]
  4046b6:	mov    BYTE PTR [ebx-0x5d06f665],al
  4046bc:	fnstsw WORD PTR [edx]
  4046be:	repz mov al,0xc7
  4046c1:	jbe    0x4046cc
  4046c3:	dec    ecx
  4046c4:	xlat   BYTE PTR ds:[ebx]
  4046c5:	or     eax,0xe081f0a9
  4046ca:	or     eax,DWORD PTR [ebx]
  4046cc:	inc    esp
  4046cd:	sub    al,0xba
  4046cf:	data16 aaa 
  4046d1:	jl     0x4046e7
  4046d3:	push   ebp
  4046d4:	cmp    eax,0xca2207e9
  4046d9:	retf   0x2d52
  4046dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046dd:	xor    edx,esp
  4046df:	in     al,0x24
  4046e1:	jmp    0x4185:0x87a3bab7
  4046e8:	fwait
  4046e9:	cmp    BYTE PTR [ebp-0x45a7076f],bh
  4046ef:	dec    edi
  4046f0:	jo     0x4046aa
  4046f2:	lock mov dh,0x20
  4046f5:	das    
  4046f6:	arpl   WORD PTR gs:[esi-0x386ed9d9],di
  4046fd:	cmp    eax,0xc6af920d
  404702:	mov    al,0x2d
  404704:	popa   
  404705:	xchg   esp,eax
  404706:	fnstenv [ebx-0x2c621c28]
  40470c:	scas   al,BYTE PTR es:[edi]
  40470d:	pop    ebp
  40470e:	or     bl,BYTE PTR [ebp-0x68]
  404711:	jg     0x40476c
  404713:	mov    di,0xeb7
  404717:	jl     0x404733
  404719:	or     esp,ebx
  40471b:	xor    edi,DWORD PTR [esi+ecx*2-0x3d]
  40471f:	cmp    WORD PTR ds:0x7e421f1d,sp
  404726:	and    BYTE PTR [edx],bh
  404728:	mov    edx,0xbe41abdf
  40472d:	lock adc DWORD PTR [ebx-0x12116f1e],ebp
  404734:	retf   0xdf6d
  404737:	fist   WORD PTR [ebx-0x23fadad0]
  40473d:	cli    
  40473e:	adc    ch,ch
  404740:	pop    edi
  404741:	jmp    0xc94c:0xa9323092
  404748:	sub    eax,0x3f5a4f35
  40474d:	cmp    DWORD PTR [edi],esi
  40474f:	or     ah,BYTE PTR [eax-0x2541d8fa]
  404755:	loop   0x4047d1
  404757:	sub    eax,0xadc42713
  40475c:	or     eax,0x6df7e28e
  404761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404762:	fstp   st(3)
  404764:	jae    0x404764
  404766:	cmp    eax,0x66f0eaa7
  40476b:	shl    BYTE PTR [eax],1
  40476d:	pop    eax
  40476e:	sti    
  40476f:	push   0x94027396
  404774:	jecxz  0x404744
  404776:	inc    edx
  404777:	mov    ah,0x93
  404779:	fdivr  st,st(5)
  40477b:	push   eax
  40477c:	arpl   WORD PTR [ecx+eiz*1+0x562c68b0],si
  404783:	bt     DWORD PTR [ecx+0x6db7d931],ebp
  40478a:	test   DWORD PTR [edx-0x37],ecx
  40478d:	imul   ebx,DWORD PTR [edx],0x4b
  404790:	push   cs
  404791:	lahf   
  404792:	test   BYTE PTR [edx+0x2d9f97e1],ah
  404798:	jbe    0x4047f6
  40479a:	inc    edx
  40479b:	cmc    
  40479c:	adc    BYTE PTR [ebx],ch
  40479e:	mov    eax,0xdf9ec156
  4047a3:	jmp    0xb6c5:0xdc436946
  4047aa:	into   
  4047ab:	or     al,0x8b
  4047ad:	ins    BYTE PTR es:[edi],dx
  4047ae:	jae    0x4047a4
  4047b0:	jns    0x404814
  4047b2:	dec    eax
  4047b3:	dec    ebx
  4047b4:	jl     0x4047d7
  4047b6:	jne    0x4047c3
  4047b8:	repnz or BYTE PTR [edi],0xfc
  4047bc:	mov    esp,0xf6ea0e29
  4047c1:	stos   BYTE PTR es:[edi],al
  4047c2:	js     0x404757
  4047c4:	inc    eax
  4047c5:	push   ss
  4047c6:	xchg   DWORD PTR [edx+0x5905a2fd],ebx
  4047cc:	out    dx,al
  4047cd:	mov    es,WORD PTR [esi-0x68]
  4047d0:	xchg   esp,eax
  4047d1:	xchg   edi,eax
  4047d2:	pop    ecx
  4047d3:	iret   
  4047d4:	inc    esp
  4047d5:	jbe    0x404805
  4047d7:	retf   
  4047d8:	lods   al,BYTE PTR ds:[esi]
  4047d9:	dec    BYTE PTR [esi]
  4047db:	stos   DWORD PTR es:[edi],eax
  4047dc:	or     eax,0x9863179a
  4047e1:	ret    
  4047e2:	ret    0xf403
  4047e5:	cld    
  4047e6:	adc    al,0x5b
  4047e8:	outs   dx,DWORD PTR ds:[esi]
  4047e9:	(bad)  
  4047eb:	out    0x90,al
  4047ed:	repnz add ecx,edi
  4047f0:	stos   DWORD PTR es:[edi],eax
  4047f1:	data16 ds adc al,0x2f
  4047f5:	ror    BYTE PTR [eax+0x520958e1],cl
  4047fb:	xor    eax,0xb805bd1c
  404800:	clc    
  404801:	(bad)  
  404802:	jno    0x40487a
  404804:	cmp    dl,BYTE PTR [edx-0x5d]
  404807:	je     0x40483c
  404809:	and    eax,0x13591cea
  40480e:	scas   eax,DWORD PTR es:[edi]
  40480f:	dec    ebx
  404810:	xor    al,0x87
  404812:	daa    
  404813:	sti    
  404814:	sub    al,0x3d
  404816:	mov    ah,0x61
  404818:	clc    
  404819:	test   BYTE PTR [edi],ah
  40481b:	mov    ebp,0x33578e57
  404820:	retf   0x98de
  404823:	push   ebp
  404824:	js     0x4047cf
  404826:	sbb    al,0xdf
  404828:	lea    esp,[ecx]
  40482a:	es ins DWORD PTR es:[edi],dx
  40482c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40482d:	ins    BYTE PTR es:[edi],dx
  40482e:	in     al,0x0
  404830:	xchg   esp,eax
  404831:	mov    WORD PTR [edi-0x77],?
  404834:	or     dh,BYTE PTR [esi]
  404836:	pop    ebp
  404837:	lea    ebp,[ebp-0x22acdd1]
  40483d:	in     eax,dx
  40483e:	aas    
  40483f:	xor    DWORD PTR [ecx-0xd],ebx
  404842:	div    BYTE PTR [esi-0x55ec280a]
  404848:	inc    edx
  404849:	sub    DWORD PTR [eax-0x7e],ecx
  40484c:	rol    DWORD PTR [esi+edx*4+0x3c39c3f9],0xba
  404854:	dec    ebx
  404855:	fwait
  404856:	dec    ecx
  404857:	cld    
  404858:	pop    ds
  404859:	jo     0x404871
  40485b:	dec    esi
  40485c:	jg     0x404833
  40485e:	idiv   DWORD PTR [ebp+0x44]
  404861:	cli    
  404862:	push   ebx
  404863:	leave  
  404864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404865:	mov    BYTE PTR [edx+edi*8+0x559a3bcb],ah
  40486c:	mov    cl,0xf9
  40486e:	push   0x66240f29
  404873:	mov    ebp,eax
  404875:	fsub   QWORD PTR [ebx+0x7f643ba8]
  40487b:	call   0x5816:0x34a04657
  404882:	mov    ds:0x9fe5d1b1,al
  404887:	hlt    
  404888:	jne    0x404834
  40488a:	ja     0x404838
  40488c:	(bad)  
  40488d:	loop   0x4048fc
  40488f:	ins    BYTE PTR es:[edi],dx
  404890:	xchg   ebx,eax
  404891:	test   dh,cl
  404893:	and    ch,BYTE PTR [eax-0x54c9edb7]
  404899:	icebp  
  40489a:	xchg   esi,eax
  40489c:	out    0xc3,al
  40489e:	pop    edx
  40489f:	(bad)  
  4048a0:	dec    esp
  4048a1:	stc    
  4048a2:	loop   0x404867
  4048a4:	mov    ecx,0x31deb3f7
  4048a9:	xor    cl,BYTE PTR [ebx-0x5f81da76]
  4048af:	in     al,dx
  4048b0:	(bad)  
  4048b1:	aas    
  4048b2:	pop    edx
  4048b4:	xor    al,BYTE PTR [edi]
  4048b6:	int    0x34
  4048b8:	repnz loop 0x4048d2
  4048bb:	aad    0x2b
  4048bd:	jl     0x4048a8
  4048bf:	out    dx,eax
  4048c0:	mov    BYTE PTR [esi+0x23b604fa],ah
  4048c6:	inc    ebp
  4048c7:	xor    cl,BYTE PTR [ecx+edx*1-0x2d]
  4048cb:	mov    al,0xae
  4048cd:	dec    ecx
  4048ce:	scas   eax,DWORD PTR es:[edi]
  4048cf:	push   edi
  4048d0:	mov    DWORD PTR [eax],ebx
  4048d2:	jnp    0x40491d
  4048d4:	xchg   BYTE PTR [ebx],bl
  4048d6:	add    eax,0x90c5bc43
  4048db:	das    
  4048dc:	dec    ebp
  4048dd:	jne    0x4048a1
  4048df:	(bad)  
  4048e0:	sti    
  4048e1:	adc    al,0xde
  4048e3:	push   esp
  4048e4:	rol    DWORD PTR [edx+0x4a],1
  4048e7:	shr    BYTE PTR [edx+0x2f428dce],0x6f
  4048ee:	rcr    BYTE PTR [edx+0x7c179292],1
  4048f4:	and    DWORD PTR [ecx],edi
  4048f6:	aam    0x67
  4048f8:	pop    edi
  4048f9:	fst    QWORD PTR [eax]
  4048fb:	scas   al,BYTE PTR es:[edi]
  4048fc:	or     DWORD PTR [edx+0x28],ecx
  4048ff:	xor    BYTE PTR [ebx+0x29657dd4],ah
  404905:	jae    0x404931
  404907:	cld    
  404908:	aad    0x92
  40490a:	cmp    al,0x8d
  40490c:	sbb    eax,0x111ec153
  404911:	push   ds
  404912:	pop    ds
  404913:	leave  
  404914:	sub    DWORD PTR [esi],edx
  404916:	ja     0x40492a
  404918:	xlat   BYTE PTR ds:[ebx]
  404919:	pop    eax
  40491a:	pop    ecx
  40491b:	push   cs
  40491c:	adc    esi,DWORD PTR ss:[edx+ecx*1-0x20a587b]
  404924:	sub    eax,edi
  404926:	mov    edi,0x629b91e0
  40492b:	jmp    0x4048ba
  40492d:	pop    edi
  40492e:	rol    BYTE PTR [eax],1
  404930:	xor    edx,DWORD PTR [ebp+0x11]
  404933:	inc    ebx
  404934:	pop    ss
  404935:	out    0xb0,al
  404937:	(bad)  
  404939:	loopne 0x4048cd
  40493b:	stos   BYTE PTR es:[edi],al
  40493c:	iret   
  40493d:	jmp    0x4048d4
  40493f:	in     eax,dx
  404940:	sub    DWORD PTR [ecx],0x1a159cd2
  404946:	inc    ebx
  404947:	mov    ch,0x1c
  404949:	xor    eax,0x9076bdee
  40494e:	xchg   BYTE PTR [ebx+0x19],dh
  404951:	in     eax,dx
  404952:	lods   eax,DWORD PTR ds:[esi]
  404953:	pop    ss
  404954:	arpl   WORD PTR [edi+0x5d445e0],bp
  40495a:	into   
  40495b:	push   ds
  40495c:	std    
  40495d:	div    bl
  40495f:	push   esp
  404960:	mov    ds,WORD PTR [eax]
  404962:	xor    al,0x95
  404964:	mov    dl,BYTE PTR [bx+si+0x2a]
  404968:	out    dx,eax
  404969:	pop    ds
  40496a:	adc    bh,BYTE PTR [ecx-0x1d]
  40496d:	(bad)  
  40496e:	(bad)  
  404970:	dec    edx
  404971:	bound  edi,QWORD PTR [eax+0x77]
  404974:	pop    eax
  404975:	neg    BYTE PTR [edi+0x46bcb0c8]
  40497b:	mov    ?,WORD PTR [ebx+ecx*1-0x5cfa0393]
  404982:	and    BYTE PTR [ebp-0x68acb64],0x6e
  404989:	or     eax,DWORD PTR [esi+0x5d]
  40498c:	lds    ecx,FWORD PTR [eax]
  40498e:	pop    es
  40498f:	in     al,dx
  404990:	adc    BYTE PTR [ebx+esi*1-0x29],al
  404994:	int3   
  404995:	aad    0xff
  404997:	sbb    dl,BYTE PTR [ebx-0x5e]
  40499a:	in     eax,0xb0
  40499c:	mov    dl,0xc4
  40499e:	in     al,0x80
  4049a0:	loop   0x404949
  4049a2:	imul   ebx,DWORD PTR [ebp-0x3c],0xffffffd9
  4049a6:	iret   
  4049a7:	stc    
  4049a8:	aaa    
  4049a9:	or     DWORD PTR [edx+eax*4],esp
  4049ac:	rol    BYTE PTR [eax+0x4056a4d],cl
  4049b2:	jl     0x40499c
  4049b4:	ds xchg edi,eax
  4049b6:	loope  0x4049c6
  4049b8:	xor    DWORD PTR [ebx],0xffffff94
  4049bb:	sbb    ebx,DWORD PTR [edx+0x6a6f0475]
  4049c1:	adc    BYTE PTR [ecx-0x6d],dl
  4049c4:	(bad)  
  4049c5:	pusha  
  4049c6:	scas   al,BYTE PTR es:[edi]
  4049c7:	lods   al,BYTE PTR ds:[esi]
  4049c8:	xor    BYTE PTR [edi+0x28],dl
  4049cb:	xchg   esp,eax
  4049cc:	adc    al,BYTE PTR [edi]
  4049ce:	jle    0x4049b0
  4049d0:	pop    esi
  4049d1:	mov    edx,0xb10635b
  4049d6:	iret   
  4049d7:	lahf   
  4049d8:	jle    0x4049b6
  4049da:	mov    dh,0x49
  4049dc:	out    0x7,al
  4049de:	or     DWORD PTR [esi],ebx
  4049e0:	cmp    BYTE PTR [ebx+0x6a],ah
  4049e3:	(bad)  
  4049e5:	push   edx
  4049e6:	cmp    al,0x9d
  4049e8:	mov    ebx,edi
  4049ea:	jp     0x40498c
  4049ec:	out    dx,eax
  4049ed:	jmp    0x4049a6
  4049ef:	lock stos DWORD PTR es:[edi],eax
  4049f1:	(bad)  
  4049f2:	sub    eax,0xe5ffaece
  4049f7:	sbb    al,0xbc
  4049f9:	cmp    esp,DWORD PTR [eax-0x30]
  4049fc:	stos   BYTE PTR es:[edi],al
  4049fd:	mov    esi,0xf7057a98
  404a02:	jg     0x4049ae
  404a04:	std    
  404a05:	cs push edx
  404a07:	test   al,0x3f
  404a09:	xchg   esp,eax
  404a0a:	inc    esi
  404a0b:	mov    esi,0xed76b687
  404a10:	aam    0x2a
  404a12:	mov    esp,0x96cb05d8
  404a17:	loop   0x404a4b
  404a19:	jns    0x404a83
  404a1b:	jns    0x404a86
  404a1d:	and    esp,ecx
  404a1f:	or     dl,dh
  404a21:	push   cs
  404a22:	fisub  WORD PTR [edi-0x1d1811b0]
  404a28:	sbb    eax,0xc9099df0
  404a2d:	adc    BYTE PTR [eax],ah
  404a2f:	adc    eax,0x179ff894
  404a34:	and    BYTE PTR [ebx-0xedae8ec],al
  404a3a:	add    al,0xc6
  404a3c:	adc    ebx,DWORD PTR [ebx]
  404a3e:	sub    DWORD PTR [edi+eiz*2],edi
  404a41:	or     eax,0x9c7ce1cb
  404a46:	mov    cl,0x7d
  404a48:	mov    ch,0x33
  404a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a4b:	mov    dl,0xb3
  404a4d:	in     eax,0x6c
  404a4f:	cmp    eax,0x374f9a76
  404a54:	add    eax,0xd8b187ed
  404a59:	cmp    BYTE PTR [eax],al
  404a5b:	fbld   TBYTE PTR [eax+0x78]
  404a5e:	add    dh,dl
  404a60:	add    cl,BYTE PTR [eax-0xd]
  404a63:	pop    eax
  404a64:	jo     0x404a67
  404a66:	mov    esp,0xeaa1f284
  404a6b:	add    dh,0x98
  404a6e:	mov    eax,ds:0x71265ec9
  404a73:	fdiv   st,st(4)
  404a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a76:	clc    
  404a77:	aaa    
  404a78:	adc    al,0x28
  404a7a:	push   edi
  404a7b:	dec    esi
  404a7c:	inc    eax
  404a7d:	loopne 0x404a67
  404a7f:	retf   0xc7f
  404a82:	lods   eax,DWORD PTR ds:[esi]
  404a83:	mov    al,0x7
  404a85:	ds jl  0x404a3c
  404a88:	data16 cmp al,0x12
  404a8b:	inc    ebp
  404a8c:	loop   0x404a22
  404a8e:	mov    BYTE PTR [esp+edi*8-0x3557ff8a],0x9a
  404a96:	mov    bh,0x24
  404a98:	jb     0x404aa1
  404a9a:	cdq    
  404a9b:	(bad)  
  404a9c:	pop    eax
  404a9d:	sti    
  404a9e:	xchg   ebp,eax
  404a9f:	div    ebx
  404aa1:	dec    ebx
  404aa2:	xor    eax,0xee38a96a
  404aa7:	cwde   
  404aa8:	test   BYTE PTR [esi],bl
  404aaa:	(bad)  
  404aab:	iret   
  404aac:	sub    eax,0xcbafeaad
  404ab1:	(bad)  
  404ab2:	shr    BYTE PTR [ebx],1
  404ab4:	loop   0x404ae3
  404ab6:	outs   dx,DWORD PTR ds:[esi]
  404ab7:	and    esi,DWORD PTR ds:0x2191529f
  404abd:	ret    0x6bd1
  404ac0:	test   al,0xeb
  404ac2:	out    0x8a,al
  404ac4:	push   ss
  404ac5:	mov    eax,ds:0x4350c6ff
  404aca:	sub    eax,DWORD PTR [edi-0x5]
  404acd:	dec    ebx
  404ace:	shl    DWORD PTR [ecx-0x4e],1
  404ad1:	sbb    bh,BYTE PTR [eax+0x10]
  404ad4:	enter  0x3086,0xb6
  404ad8:	pop    DWORD PTR [ecx-0x2e]
  404adb:	dec    eax
  404adc:	test   DWORD PTR [edx-0x3078ea2],edx
  404ae2:	xor    al,0xe3
  404ae4:	jae    0x404a6c
  404ae6:	and    BYTE PTR [ebp+edx*4+0xddbcd54],0xd9
  404aee:	mov    esi,DWORD PTR [esi+0x597a813e]
  404af4:	inc    ebp
  404af5:	mov    edx,DWORD PTR [esi]
  404af7:	mov    BYTE PTR [edx],dl
  404af9:	sar    DWORD PTR [eax+0x11],1
  404afc:	lock je 0x404b06
  404aff:	in     eax,0xb3
  404b01:	inc    ebx
  404b02:	inc    eax
  404b03:	mov    esp,0xd4fa1d10
  404b08:	lods   al,BYTE PTR ds:[esi]
  404b09:	sbb    dh,BYTE PTR [esi+ebp*2+0x41]
  404b0d:	daa    
  404b0e:	mov    ebx,DWORD PTR [eax+0x7a93c9b7]
  404b14:	in     eax,0xb2
  404b16:	std    
  404b17:	fs pop edx
  404b19:	sub    BYTE PTR [edx+0x4e],dh
  404b1c:	fsubr  st(1),st
  404b1e:	mov    al,0x44
  404b20:	pushf  
  404b21:	dec    esi
  404b22:	mov    edx,0x24288a
  404b27:	jmp    0x803d:0x93949a5d
  404b2e:	ret    
  404b2f:	lds    esp,FWORD PTR [ebx+ebp*8+0x4b]
  404b33:	je     0x404ba4
  404b35:	inc    edi
  404b36:	lock jno 0x404b0e
  404b39:	test   DWORD PTR [eax],eax
  404b3b:	push   eax
  404b3c:	lds    esi,FWORD PTR [ecx+0x421b0b59]
  404b42:	aad    0xfb
  404b44:	repnz or ebp,DWORD PTR [eax-0x6f]
  404b48:	mov    esp,0xcef8381e
  404b4d:	push   ss
  404b4e:	lea    ebp,[ebp+0x4e]
  404b51:	jnp    0x404bcd
  404b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b54:	in     eax,0x77
  404b56:	mov    WORD PTR [esi],cs
  404b58:	repnz data16 lods al,BYTE PTR ds:[esi]
  404b5b:	stc    
  404b5c:	mov    cs,WORD PTR [esi+0x1a]
  404b5f:	mov    ds:0x8e76d013,al
  404b64:	sahf   
  404b65:	ins    BYTE PTR es:[edi],dx
  404b66:	xor    ebp,edx
  404b68:	ja     0x404b94
  404b6a:	jmp    0x8e3f4321
  404b6f:	xor    esi,eax
  404b71:	ds inc ebp
  404b73:	cmpps  xmm3,XMMWORD PTR [eax+0x37082822],0x4e
  404b7b:	shrd   DWORD PTR [esi],esp,0x5e
  404b7f:	sub    dh,0x9c
  404b82:	mov    ch,BYTE PTR [esp+edx*8+0x5b]
  404b86:	sti    
  404b87:	loopne 0x404b98
  404b89:	js     0x404b41
  404b8b:	sub    DWORD PTR [ecx-0x718b4c6e],edi
  404b91:	shr    BYTE PTR [ecx+0x6b14e7b6],0xeb
  404b98:	aad    0x91
  404b9a:	sbb    BYTE PTR [edi],dl
  404b9c:	pop    ebx
  404b9d:	and    esp,ebp
  404b9f:	cmp    eax,0x5bf3e74e
  404ba4:	imul   esi,DWORD PTR [edx-0x5e],0x96917501
  404bab:	data16 jp 0x404b64
  404bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404baf:	sub    BYTE PTR gs:[eax],dh
  404bb2:	mov    eax,0x8088ef79
  404bb7:	xor    al,0x1f
  404bb9:	push   esi
  404bba:	mov    WORD PTR [edx+0x1195be5a],gs
  404bc0:	fild   QWORD PTR [eax+0x5]
  404bc3:	je     0x404b90
  404bc5:	pusha  
  404bc6:	sar    BYTE PTR ds:[ebx-0x56],0x33
  404bcb:	push   esi
  404bcc:	arpl   WORD PTR ds:[ecx+0x2e8e194d],cx
  404bd3:	out    0xd9,al
  404bd5:	scas   eax,DWORD PTR es:[edi]
  404bd6:	pop    edx
  404bd7:	inc    ebp
  404bd8:	jmp    0xed4f:0x72f68fb5
  404bdf:	sbb    al,0xb9
  404be1:	(bad)  [ebp-0x6366173b]
  404be7:	iret   
  404be8:	test   BYTE PTR [edi],bh
  404bea:	or     eax,0x1d5bff27
  404bef:	mov    gs,WORD PTR [ecx+ebx*8-0x38]
  404bf3:	aaa    
  404bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf5:	idiv   ebx
  404bf7:	adc    eax,0xbf20e7ee
  404bfc:	out    dx,al
  404bfd:	and    eax,0x5c0529cf
  404c02:	mov    eax,ds:0xd5d40c39
  404c07:	mov    esi,?
  404c09:	add    eax,0xe58a8b1d
  404c0e:	dec    esp
  404c0f:	paddsw mm4,mm6
  404c12:	and    ah,bl
  404c14:	and    eax,0xb76fa114
  404c19:	dec    ecx
  404c1a:	mov    al,ds:0xc430c89c
  404c1f:	cdq    
  404c20:	(bad)  
  404c21:	dec    esp
  404c22:	or     esp,DWORD PTR [edi-0x2a07c32f]
  404c28:	dec    esi
  404c29:	pop    ss
  404c2a:	sbb    eax,0x412cd5d0
  404c2f:	scas   eax,DWORD PTR es:[edi]
  404c30:	push   0x570e2466
  404c35:	ds fwait
  404c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c38:	retf   0x8218
  404c3b:	sbb    ebx,DWORD PTR [edx-0x3423f0e5]
  404c41:	retf   
  404c42:	sub    eax,0x7b96e86f
  404c47:	xor    edx,edi
  404c49:	cmp    esi,DWORD PTR [ebp+0x28]
  404c4c:	push   0xb35e007c
  404c51:	xchg   ecx,eax
  404c52:	mov    dl,0x43
  404c54:	fs ins DWORD PTR es:[edi],dx
  404c56:	mov    ecx,0xd6e813fc
  404c5b:	xor    al,0x78
  404c5d:	cdq    
  404c5e:	not    BYTE PTR [edx]
  404c60:	fcom   QWORD PTR [esi+eax*1]
  404c63:	pop    ecx
  404c64:	jnp    0x404c4e
  404c66:	outs   dx,BYTE PTR fs:[esi]
  404c68:	or     DWORD PTR [esi-0x2e],ebp
  404c6b:	mov    al,0xd8
  404c6d:	cmp    al,0x3c
  404c6f:	sbb    edx,edi
  404c71:	out    0xf8,eax
  404c73:	inc    cl
  404c75:	inc    edi
  404c76:	push   ebx
  404c77:	jne    0x404caf
  404c79:	or     DWORD PTR [esp+edi*8+0x6c],0xffffffa0
  404c7e:	xor    eax,DWORD PTR [ebx-0x6568ccc1]
  404c84:	sbb    DWORD PTR [esi],esp
  404c86:	test   al,0x52
  404c88:	scas   ax,WORD PTR es:[edi]
  404c8a:	mov    ah,0x97
  404c8c:	mov    ecx,0xa32be2cd
  404c91:	popa   
  404c92:	and    BYTE PTR [ecx],0x27
  404c95:	inc    ebx
  404c96:	cdq    
  404c97:	ins    BYTE PTR es:[edi],dx
  404c98:	(bad)  
  404c9a:	daa    
  404c9b:	fs jmp 0xe41:0x400205b9
  404ca3:	add    al,0x4
  404ca5:	ins    BYTE PTR es:[edi],dx
  404ca6:	or     al,0x51
  404ca8:	cmp    BYTE PTR [esi],0x13
  404cab:	dec    edi
  404cac:	aam    0x81
  404cae:	add    al,0x84
  404cb0:	shl    BYTE PTR [ecx+edi*2-0x62],0x19
  404cb5:	xor    eax,0xca839fb3
  404cba:	and    ch,BYTE PTR [esi]
  404cbc:	in     eax,dx
  404cbd:	jbe    0x404c9c
  404cbf:	pop    ds
  404cc0:	mov    ah,0x69
  404cc2:	(bad)  
  404cc3:	cdq    
  404cc4:	pop    esp
  404cc5:	lahf   
  404cc6:	inc    esi
  404cc7:	fld    st(3)
  404cc9:	inc    edx
  404cca:	ja     0x404ceb
  404ccc:	adc    eax,0x9d6acfb
  404cd1:	xchg   BYTE PTR [esi],bh
  404cd3:	cmp    esp,DWORD PTR [edi]
  404cd5:	sub    DWORD PTR [ecx],eax
  404cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd8:	nop
  404cd9:	sbb    BYTE PTR [ebx+0x5b],bh
  404cdc:	es std 
  404cde:	xchg   ebp,eax
  404cdf:	sbb    DWORD PTR [esi],eax
  404ce1:	push   es
  404ce2:	dec    esp
  404ce3:	mov    BYTE PTR [esi+ebp*1+0x50],bh
  404ce7:	shr    bh,cl
  404ce9:	adc    BYTE PTR [ebx+edi*2+0x201ef4aa],bh
  404cf0:	inc    eax
  404cf1:	loope  0x404cec
  404cf3:	mov    ds,WORD PTR [edx-0x35]
  404cf6:	das    
  404cf7:	jne    0x404d10
  404cf9:	dec    edi
  404cfa:	scas   eax,DWORD PTR es:[edi]
  404cfb:	int    0xad
  404cfd:	sbb    BYTE PTR [edi-0x2d],ah
  404d00:	call   0x462c8723
  404d05:	out    0xb1,al
  404d07:	push   ecx
  404d08:	ror    BYTE PTR [ecx-0x17f09676],0x7b
  404d0f:	fcmovb st,st(0)
  404d11:	sbb    edi,ebp
  404d13:	ins    DWORD PTR es:[edi],dx
  404d14:	in     eax,0xd7
  404d16:	sbb    cl,al
  404d18:	jno    0x404d5b
  404d1a:	stos   DWORD PTR es:[edi],eax
  404d1b:	inc    edx
  404d1c:	add    eax,0xf169ad6b
  404d21:	lea    eax,[esi-0x409bf30f]
  404d27:	push   cs
  404d28:	pushf  
  404d29:	popf   
  404d2a:	push   cs
  404d2b:	jle    0x404d8c
  404d2d:	jae    0x404d10
  404d2f:	and    DWORD PTR [esi+0x7afc6d13],ebx
  404d35:	inc    edx
  404d36:	rcr    BYTE PTR [ebx+ecx*1-0x73ff2a0a],0x18
  404d3e:	sbb    DWORD PTR [eax+0x12],ebx
  404d41:	ficom  WORD PTR [ebp-0x64]
  404d44:	push   edi
  404d45:	leave  
  404d46:	adc    ebx,esp
  404d48:	into   
  404d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d4a:	push   es
  404d4b:	scas   eax,DWORD PTR es:[edi]
  404d4c:	fimul  DWORD PTR [eax]
  404d4e:	imul   ecx,DWORD PTR [esi-0x9],0xffffffda
  404d52:	cmp    eax,0x4bda5238
  404d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d58:	std    
  404d59:	jbe    0x404d72
  404d5b:	jge    0x404d73
  404d5d:	dec    esi
  404d5e:	ja     0x404db1
  404d60:	aas    
  404d61:	dec    ebp
  404d62:	into   
  404d63:	jno    0x404dc5
  404d65:	icebp  
  404d66:	xchg   ebx,eax
  404d67:	mov    ds:0xb0c65d5b,eax
  404d6c:	jmp    0xabd75f94
  404d71:	hlt    
  404d72:	test   al,0xf8
  404d74:	jne    0x404d96
  404d76:	bound  edi,QWORD PTR [eax]
  404d78:	and    eax,0xb1743f39
  404d7d:	test   DWORD PTR [ebx+0x6cb5499e],edx
  404d83:	push   ds
  404d84:	jle    0x404d4b
  404d86:	mov    cl,0xbe
  404d88:	int3   
  404d89:	shr    edi,1
  404d8b:	mov    dh,0xc4
  404d8d:	pop    esi
  404d8e:	push   0x3f170c98
  404d93:	out    dx,al
  404d94:	aad    0xdf
  404d96:	aas    
  404d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d98:	ss call 0xf990f4cc
  404d9e:	outs   dx,BYTE PTR ds:[esi]
  404d9f:	jno    0x87348c6a
  404da5:	in     al,dx
  404da6:	outs   dx,DWORD PTR ds:[esi]
  404da7:	xchg   ecx,eax
  404da8:	jno    0x404da0
  404daa:	dec    eax
  404dab:	adc    bl,BYTE PTR [ebx]
  404dad:	mov    DWORD PTR [edx-0x55f5b462],eax
  404db3:	push   cs
  404db4:	lahf   
  404db5:	dec    ebx
  404db6:	jne    0x404e21
  404db8:	jmp    0xc2275c7b
  404dbd:	mov    ah,ah
  404dbf:	xchg   ecx,eax
  404dc0:	pop    esp
  404dc1:	adc    dh,cl
  404dc3:	add    ah,BYTE PTR [ebx-0x5aea2f]
  404dc9:	push   edi
  404dca:	mov    al,0x1d
  404dcc:	in     eax,0x6a
  404dce:	sahf   
  404dcf:	cmp    dh,BYTE PTR [edi+0x5a]
  404dd2:	int3   
  404dd3:	mov    ah,0x4b
  404dd5:	pop    esi
  404dd6:	fistp  DWORD PTR [ebx+0x44]
  404dd9:	pop    ss
  404dda:	nop
  404ddb:	mov    WORD PTR [ecx],ds
  404ddd:	popf   
  404dde:	cld    
  404ddf:	add    DWORD PTR [ebp+0x23fca98c],esp
  404de5:	add    ebx,DWORD PTR [eax+ebx*1+0xab34336]
  404dec:	mov    eax,0x339c152a
  404df1:	and    BYTE PTR [ebx-0x64],ch
  404df4:	out    dx,eax
  404df5:	mov    edx,0x6d7ae828
  404dfa:	mov    edi,0x5ef7d704
  404dff:	cmp    dh,BYTE PTR [esi-0x21]
  404e02:	mov    bl,ah
  404e04:	pop    esi
  404e05:	(bad)  
  404e06:	popf   
  404e07:	cs fwait
  404e09:	mov    al,ds:0xc37cd720
  404e0e:	cwde   
  404e0f:	aam    0x81
  404e11:	inc    esp
  404e12:	loopne 0x404db8
  404e14:	adc    BYTE PTR [eax],ah
  404e16:	inc    ebx
  404e17:	pop    ebp
  404e18:	mov    edx,0x3591b729
  404e1d:	mov    edx,0x9e9d549f
  404e22:	stc    
  404e23:	xlat   BYTE PTR ds:[ebx]
  404e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e25:	push   ecx
  404e26:	out    0xd3,al
  404e28:	dec    edi
  404e29:	xchg   esp,eax
  404e2a:	jl     0x404e78
  404e2c:	arpl   WORD PTR [edx-0x27c81904],bp
  404e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e33:	shl    DWORD PTR ds:0xc185353a,cl
  404e39:	xor    BYTE PTR [eax],cl
  404e3b:	aad    0x5d
  404e3d:	aad    0xd9
  404e3f:	jg     0x404def
  404e41:	(bad)  [edi-0x22]
  404e44:	jno    0x404e51
  404e46:	push   0x62601215
  404e4b:	pop    edx
  404e4c:	es ins BYTE PTR es:[edi],dx
  404e4e:	shr    edx,0x76
  404e51:	pop    ecx
  404e52:	aam    0x65
  404e54:	(bad)  
  404e55:	lea    ecx,[eax+eax*4]
  404e58:	adc    al,0x1
  404e5a:	jmp    0xc0022725
  404e5f:	push   es
  404e60:	sub    BYTE PTR [esi],cl
  404e62:	aas    
  404e63:	int    0xda
  404e65:	xchg   DWORD PTR [ecx],ebp
  404e67:	dec    edx
  404e68:	mov    dl,0x57
  404e6a:	dec    eax
  404e6b:	mov    ah,0x89
  404e6d:	fucom  st(4)
  404e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e70:	push   ss
  404e71:	xor    al,BYTE PTR [edx-0x5588d0a4]
  404e77:	xor    ebp,DWORD PTR [edi+0x462890f0]
  404e7d:	mov    ebp,0x379180ba
  404e82:	outs   dx,DWORD PTR ds:[esi]
  404e83:	or     DWORD PTR [edx+0x1],edi
  404e86:	lods   al,BYTE PTR ds:[esi]
  404e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e88:	pop    esp
  404e89:	xor    eax,0x9328808b
  404e8e:	ss mov esp,0x7908a300
  404e94:	loop   0x404f06
  404e96:	int    0x13
  404e98:	pop    eax
  404e99:	lds    edi,FWORD PTR [edi+0x18]
  404e9c:	rcl    esp,1
  404e9e:	cmp    esp,edx
  404ea0:	adc    edi,ebp
  404ea2:	gs repnz aad 0x1b
  404ea6:	add    BYTE PTR [edi+0x5c2eab2c],0x83
  404ead:	jl     0x404edc
  404eaf:	xor    ecx,DWORD PTR ds:0x5efadb67
  404eb5:	popf   
  404eb6:	popf   
  404eb7:	add    BYTE PTR [esi],0xcc
  404eba:	inc    ebx
  404ebb:	(bad)  
  404ebc:	outs   dx,BYTE PTR ds:[esi]
  404ebd:	leave  
  404ebe:	push   esi
  404ebf:	pop    ebp
  404ec0:	(bad)  
  404ec1:	push   ebx
  404ec2:	enter  0x165a,0x41
  404ec6:	imul   eax,edi,0xae3a1cfb
  404ecc:	sahf   
  404ecd:	xor    eax,0xd3f339bf
  404ed2:	in     eax,0x3
  404ed4:	add    al,0x8f
  404ed6:	shr    DWORD PTR [edi+0x2d],0x55
  404eda:	cs jne 0x404f4d
  404edd:	adc    DWORD PTR [ecx+ebx*4+0x763a7e50],0xffffffa2
  404ee5:	push   edx
  404ee6:	jns    0x404f30
  404ee8:	and    dl,ch
  404eea:	xor    bl,BYTE PTR [ebx+ecx*4-0x55]
  404eee:	dec    esp
  404eef:	xor    dl,BYTE PTR [eax-0x67]
  404ef2:	cmp    bl,0x3d
  404ef5:	adc    al,0x95
  404ef7:	cs jne 0x404f59
  404efa:	xchg   BYTE PTR [ecx],al
  404efc:	add    esp,eax
  404efe:	pop    ecx
  404eff:	mov    ebx,edx
  404f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f02:	in     eax,dx
  404f03:	hlt    
  404f04:	cs scas al,BYTE PTR es:[edi]
  404f06:	jae    0x404f14
  404f08:	dec    edx
  404f09:	repz retf 0xd5a5
  404f0d:	dec    edx
  404f0e:	test   al,0xc8
  404f10:	dec    ebx
  404f11:	inc    ebx
  404f12:	ret    
  404f13:	mov    eax,ds:0x2c7f3044
  404f18:	push   0xeb38712b
  404f1d:	in     al,0x29
  404f1f:	sbb    DWORD PTR [edx],esi
  404f21:	call   0xf43e:0x391515d
  404f28:	xchg   ebx,eax
  404f29:	mov    bl,0x67
  404f2b:	pop    eax
  404f2c:	cmp    eax,ebx
  404f2e:	or     cl,BYTE PTR [ebx+0x7d8bfc45]
  404f34:	clc    
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0x89b2f58a
  405700:	sbb    BYTE PTR [edi+edx*8+0x5f],ah
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	or     bl,BYTE PTR [edi+0x37bda1e7]
  405710:	add    ecx,ebx
  405712:	jle    0x40572e
  405714:	rcr    DWORD PTR [ebp+eiz*4-0x5164bbd0],0x4d
  40571c:	dec    ecx
  40571d:	fisttp QWORD PTR [eax-0x10]
  405720:	inc    edx
  405721:	xchg   esp,eax
  405722:	data16 sbb BYTE PTR [esi+0x50b21061],ch
  405729:	call   0x272f0d2f
  40572e:	into   
  40572f:	mov    BYTE PTR [ebx-0x36],dl
  405732:	or     ebp,DWORD PTR [ebx]
  405734:	(bad)  
  405735:	sahf   
  405736:	out    dx,al
  405737:	or     eax,0x6d026491
  40573c:	in     al,0xbd
  40573e:	ret    
  40573f:	mov    esp,0x70b6e622
  405744:	and    BYTE PTR [eax],0xdc
  405747:	and    bh,BYTE PTR [ecx*2+0x7527e0fd]
  40574e:	fmul   QWORD PTR [esi-0x990b706]
  405754:	xchg   DWORD PTR [edx],ebx
  405756:	cwde   
  405757:	mov    ds:0x54a01947,eax
  40575c:	mov    DWORD PTR [ebp-0x1035563d],edx
  405762:	loop   0x40576a
  405764:	jmp    0x54525ff7
  405769:	shr    BYTE PTR [ecx+0x212e6522],cl
  40576f:	ds jbe 0x4057ea
  405772:	les    esp,FWORD PTR [esi-0x596f03a0]
  405778:	iret   
  405779:	inc    esi
  40577a:	inc    ebx
  40577b:	sbb    al,0x97
  40577d:	jnp    0x4057c4
  40577f:	les    edi,FWORD PTR [edx+edi*1+0x75c4fb92]
  405786:	sub    DWORD PTR [edx-0x20],esi
  405789:	jmp    0xd6e2ada9
  40578e:	xchg   esp,eax
  40578f:	xchg   ebx,eax
  405790:	mov    esi,DWORD PTR [edi+0x6156c5cc]
  405796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405797:	xchg   edi,eax
  405798:	jmp    0x4057cc
  40579a:	clc    
  40579b:	cmp    ah,bh
  40579d:	cmpps  xmm1,XMMWORD PTR [esi],0x4a
  4057a1:	fldenv [edx]
  4057a3:	scas   al,BYTE PTR es:[edi]
  4057a4:	push   esi
  4057a5:	enter  0x2081,0xa5
  4057a9:	shl    DWORD PTR [ebx-0x14244fb4],1
  4057af:	rcl    bl,1
  4057b1:	sub    eax,0xa6193556
  4057b6:	xchg   cl,al
  4057b8:	sti    
  4057b9:	push   ebx
  4057ba:	pop    eax
  4057bb:	ret    
  4057bc:	push   ebp
  4057bd:	xchg   BYTE PTR [eax+0x38],bl
  4057c0:	push   ebp
  4057c1:	cmc    
  4057c2:	sub    al,0x44
  4057c4:	(bad)  
  4057c5:	mov    ds:0x89bce654,eax
  4057ca:	shr    eax,0x12
  4057cd:	xor    BYTE PTR cs:[esi],cl
  4057d0:	add    al,0xd7
  4057d2:	push   ds
  4057d3:	out    dx,al
  4057d4:	mov    cl,0xca
  4057d6:	das    
  4057d7:	pop    ecx
  4057d8:	cmp    dl,dh
  4057da:	push   cs
  4057db:	xor    ecx,DWORD PTR [edi+0x25]
  4057de:	jnp    0x4057a9
  4057e0:	xor    ebx,edi
  4057e2:	or     DWORD PTR [eax+0x289ca141],esi
  4057e8:	mov    DWORD PTR [edi+0x14],ecx
  4057eb:	and    eax,0x2c1c88f8
  4057f0:	mov    bh,0x21
  4057f2:	ret    
  4057f3:	in     al,0x21
  4057f5:	jbe    0x4057ea
  4057f7:	dec    ecx
  4057f8:	fnstenv [ecx]
  4057fa:	add    ah,BYTE PTR [esi]
  4057fc:	out    0xe2,al
  4057fe:	call   DWORD PTR [ebx-0x7b]
  405801:	inc    ecx
  405802:	push   ecx
  405803:	btc    esi,edi
  405806:	imul   edi,DWORD PTR [ecx*4-0x2417b399],0x14
  40580e:	aas    
  40580f:	cli    
  405810:	sub    eax,0x3e22f9f1
  405815:	mov    ds:0x286ce9b8,eax
  40581a:	cmp    BYTE PTR [ecx+0x41135a68],ah
  405820:	jae    0x40580d
  405822:	clc    
  405823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405824:	mov    ebp,0x2489560f
  405829:	lods   al,BYTE PTR ds:[esi]
  40582a:	xor    BYTE PTR [eax+0x78],dl
  40582d:	pop    ebp
  40582e:	pop    edi
  40582f:	pop    edx
  405830:	loop   0x405880
  405832:	call   0xc47e:0xa4778abe
  405839:	dec    esi
  40583a:	(bad)  
  40583b:	xchg   edx,eax
  40583c:	jmp    0x8f23:0xd0166702
  405843:	pop    eax
  405845:	xchg   edx,edi
  405847:	pop    esp
  405848:	pop    edx
  405849:	xor    DWORD PTR [edi+eiz*2-0x6648129a],ebx
  405850:	out    0x84,eax
  405852:	leave  
  405853:	adc    DWORD PTR [edx],ebp
  405855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405856:	cs inc esp
  405858:	or     bh,BYTE PTR [eax-0x5c]
  40585b:	adc    al,0x7d
  40585d:	push   edi
  40585e:	ret    
  40585f:	jns    0x4058c3
  405861:	pop    ebp
  405862:	lods   al,BYTE PTR ds:[esi]
  405863:	push   esi
  405864:	jae    0x40585e
  405866:	sub    al,0x68
  405868:	into   
  405869:	sbb    ch,BYTE PTR [edi+eax*2+0x1a26d538]
  405870:	dec    ecx
  405871:	ins    BYTE PTR es:[edi],dx
  405872:	cmp    dh,BYTE PTR ds:0xb1a001e9
  405878:	or     DWORD PTR [edi],ecx
  40587a:	mov    bl,0x5f
  40587c:	js     0x405858
  40587e:	or     cl,al
  405880:	adc    ah,BYTE PTR [edi+edx*8+0x2e4393b1]
  405887:	mov    eax,ds:0x97dea76
  40588c:	push   es
  40588d:	mov    ebp,0x1d10ccf1
  405892:	cli    
  405893:	push   0xffffffe0
  405895:	adc    al,0x7a
  405897:	fwait
  405898:	ror    DWORD PTR [edx-0x1],0x60
  40589c:	cmp    BYTE PTR [esp+ecx*4],bl
  40589f:	das    
  4058a0:	mov    esi,0xd075fa2
  4058a5:	imul   edi,DWORD PTR [ecx],0x72
  4058a8:	jp     0x40587b
  4058aa:	imul   edx,edi,0x5f
  4058ad:	push   es
  4058ae:	repz sbb edi,DWORD PTR [ebp+0xf8ecaa4]
  4058b5:	stos   DWORD PTR es:[edi],eax
  4058b6:	sub    eax,0x636c82fb
  4058bb:	dec    esi
  4058bc:	outs   dx,DWORD PTR ds:[esi]
  4058bd:	leave  
  4058be:	fidivr WORD PTR [edi-0x6711f7d0]
  4058c4:	ftst   
  4058c6:	loopne 0x4058fe
  4058c8:	out    0x5c,al
  4058ca:	arpl   WORD PTR [eax+0x41],sp
  4058cd:	ss sbb al,0x86
  4058d0:	sub    ah,cl
  4058d2:	jp     0x405874
  4058d4:	sub    dh,dl
  4058d6:	push   ebx
  4058d7:	and    esp,0x518cfec9
  4058dd:	scas   al,BYTE PTR es:[edi]
  4058de:	add    DWORD PTR [ecx],0xffffffae
  4058e1:	sub    DWORD PTR [esi-0x7e],esp
  4058e4:	xor    al,0x7
  4058e6:	shl    ebx,0x9
  4058e9:	mov    al,ds:0x38c72316
  4058ee:	loopne 0x405942
  4058f0:	mov    ds:0x393ae0d9,eax
  4058f5:	cmp    ecx,esp
  4058f7:	repz pop ebp
  4058f9:	ins    BYTE PTR es:[edi],dx
  4058fa:	add    BYTE PTR [ebx+edi*1+0x52cda40d],0x25
  405902:	xchg   ebx,eax
  405903:	scas   al,BYTE PTR es:[edi]
  405904:	xlat   BYTE PTR ds:[ebx]
  405905:	loope  0x40591a
  405907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405908:	adc    BYTE PTR [ebp+0x75],cl
  40590b:	lds    edx,FWORD PTR [edx]
  40590d:	lea    esi,[esi-0xe8febf]
  405913:	mov    esi,0xb89e0b0d
  405918:	xor    ebx,DWORD PTR [eax+0x31]
  40591b:	or     BYTE PTR [esi-0x3f86715c],0x33
  405922:	push   0x51e8ec6c
  405927:	jle    0x4059a2
  405929:	xor    eax,0xc8e260e6
  40592e:	cs stos DWORD PTR es:[edi],eax
  405930:	retf   0xe1c1
  405933:	push   ebx
  405934:	ss dec edx
  405936:	push   ebx
  405937:	adc    DWORD PTR [ecx+0x3e],edx
  40593a:	(bad)  
  40593b:	mov    ebp,0xa8353fc7
  405940:	ret    
  405941:	and    al,BYTE PTR [eax+ecx*1]
  405944:	and    al,0xd8
  405946:	in     al,dx
  405947:	scas   al,BYTE PTR es:[edi]
  405948:	mov    ebx,0x1666cd6a
  40594d:	pop    edi
  40594e:	push   ss
  40594f:	push   esp
  405950:	fsub   DWORD PTR [ebx+edx*1]
  405953:	mov    bh,BYTE PTR [esi-0x62]
  405956:	mov    ecx,DWORD PTR [edi-0x15511858]
  40595c:	in     al,0x3d
  40595e:	scas   al,BYTE PTR es:[edi]
  40595f:	sub    DWORD PTR [esi+esi*4-0x30],edi
  405963:	dec    esi
  405964:	inc    eax
  405965:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405967:	lods   eax,DWORD PTR ds:[esi]
  405968:	call   0x77a87ff8
  40596d:	push   edi
  40596e:	mov    ds,WORD PTR [edi]
  405970:	xchg   DWORD PTR [edi+0x48],ecx
  405973:	mov    ?,esp
  405975:	cmp    DWORD PTR [esi+0x45],ebp
  405978:	pop    es
  405979:	repnz pop ebp
  40597b:	mov    bl,0xe
  40597d:	sub    BYTE PTR [edx],al
  40597f:	jle    0x405969
  405981:	(bad)  
  405982:	aad    0x7
  405984:	int    0xaf
  405986:	push   esi
  405987:	mov    ebp,0x9179ca33
  40598c:	aaa    
  40598d:	scas   al,BYTE PTR es:[edi]
  40598e:	lahf   
  40598f:	sbb    al,0x2a
  405991:	mov    eax,0x67193330
  405996:	dec    edi
  405997:	adc    eax,0x4c0c4631
  40599c:	adc    DWORD PTR [esi+eiz*2],esi
  40599f:	ret    0x1479
  4059a2:	jmp    0x910a8291
  4059a7:	ret    0xdbb9
  4059aa:	jno    0x4059de
  4059ac:	jg     0x4059a8
  4059ae:	out    dx,al
  4059af:	jnp    0x40598d
  4059b1:	std    
  4059b2:	cmp    DWORD PTR [ebp+0x19],0x639fd305
  4059b9:	cld    
  4059ba:	(bad)  
  4059bc:	sbb    ah,dl
  4059be:	mov    dl,BYTE PTR [esi]
  4059c0:	fwait
  4059c1:	(bad)  
  4059c2:	jmp    0x405945
  4059c4:	mov    eax,ds:0x627c4cab
  4059c9:	sub    dh,dh
  4059cb:	call   0x7ce70d75
  4059d0:	cmp    bl,BYTE PTR ds:0x1fba7149
  4059d6:	scas   eax,DWORD PTR es:[edi]
  4059d7:	(bad)  
  4059d8:	inc    edi
  4059d9:	clc    
  4059da:	cmp    al,0x43
  4059dc:	fwait
  4059dd:	arpl   WORD PTR [eax-0x77],sp
  4059e0:	push   0x6dae6ec8
  4059e5:	clc    
  4059e6:	mov    eax,ds:0xe8af6deb
  4059eb:	ss out dx,eax
  4059ed:	sbb    dh,dh
  4059ef:	add    al,BYTE PTR fs:[ebp-0x7d69a84c]
  4059f6:	dec    esp
  4059f7:	in     eax,0x2b
  4059f9:	add    eax,0x25cd4d70
  4059fe:	aaa    
  4059ff:	lahf   
  405a00:	xchg   ecx,eax
  405a01:	add    DWORD PTR [ecx],edi
  405a03:	pop    ecx
  405a04:	call   0xfa21:0x61d85b90
  405a0b:	dec    ebp
  405a0c:	pop    esp
  405a0d:	jmp    0x79660500
  405a12:	js     0x4059f5
  405a14:	jle    0x4059c7
  405a16:	push   ebp
  405a17:	mov    ebx,0x20a2182e
  405a1c:	daa    
  405a1d:	shr    BYTE PTR [esi+0x55],cl
  405a20:	mov    cl,0x74
  405a22:	out    0x5f,eax
  405a24:	(bad)  
  405a25:	mov    esi,0xa62203a2
  405a2a:	shl    DWORD PTR [esi],cl
  405a2c:	dec    ecx
  405a2d:	cld    
  405a2e:	mov    bl,ch
  405a30:	iret   
  405a31:	mov    ebx,0xb2de1ae
  405a36:	jp     0x405a3c
  405a38:	mov    edx,0x2fae9087
  405a3d:	cli    
  405a3e:	sbb    eax,0x2621b3f4
  405a43:	sbb    DWORD PTR [ecx-0x59650805],0x39
  405a4a:	add    BYTE PTR [ecx],ch
  405a4c:	in     eax,dx
  405a4d:	sbb    al,0x9d
  405a4f:	mov    bh,0xed
  405a51:	dec    ecx
  405a52:	les    esi,FWORD PTR [edx+esi*4]
  405a55:	jge    0x405ab7
  405a57:	and    edx,DWORD PTR [esp+ecx*8+0x3ff1c0c5]
  405a5e:	nop
  405a5f:	cmp    ch,BYTE PTR [edx-0x4]
  405a62:	mov    ecx,0xc8b2d804
  405a67:	push   ds
  405a68:	pushf  
  405a69:	mov    al,0x51
  405a6b:	lods   al,BYTE PTR ds:[esi]
  405a6c:	loope  0x405a87
  405a6e:	pop    edx
  405a6f:	repnz sub ah,BYTE PTR [ecx+0x5f]
  405a73:	fxtract 
  405a75:	cmp    al,0x92
  405a77:	aad    0x51
  405a79:	push   es
  405a7a:	xchg   BYTE PTR [eax],dl
  405a7c:	sub    DWORD PTR [ebx],ebx
  405a7e:	xchg   BYTE PTR [edx-0x45],ah
  405a81:	sub    DWORD PTR [esi],ecx
  405a83:	outs   dx,DWORD PTR ds:[esi]
  405a84:	xchg   ebx,eax
  405a85:	es mov dh,0xc6
  405a88:	xchg   esi,eax
  405a89:	(bad)  
  405a8a:	jmp    0x20a8:0x84aca8b7
  405a91:	int    0x4
  405a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a94:	dec    esp
  405a95:	shl    edi,0xe9
  405a98:	dec    eax
  405a99:	cmp    DWORD PTR [ecx+0x1e061f04],eax
  405a9f:	in     al,dx
  405aa0:	nop
  405aa1:	add    DWORD PTR [ecx+0x1f76da19],0xffffffa8
  405aa8:	lods   al,BYTE PTR gs:[esi]
  405aaa:	push   0xffffffd5
  405aac:	adc    DWORD PTR [edi+eax*2-0x4f23fb53],eax
  405ab3:	add    eax,0x61c8b627
  405ab8:	out    dx,al
  405ab9:	jg     0x405b39
  405abb:	loop   0x405b1f
  405abd:	(bad)  
  405abf:	(bad)  
  405ac0:	loope  0x405ad6
  405ac2:	test   eax,0x1c63741
  405ac7:	jge    0x405b30
  405ac9:	rol    BYTE PTR [ecx+0x4a],1
  405acc:	mov    ah,0xaf
  405ace:	addr16 (bad) 
  405ad0:	cld    
  405ad1:	fwait
  405ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad3:	mov    eax,0x6c77f53b
  405ad8:	je     0x405b50
  405ada:	test   al,dl
  405adc:	dec    ebx
  405add:	int    0x67
  405adf:	add    BYTE PTR [edx-0x2b],bl
  405ae2:	fistp  WORD PTR [esi]
  405ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ae5:	mov    esi,0x7c1658c3
  405aea:	sbb    al,0xd4
  405aec:	js     0x405a77
  405aee:	mov    edi,0x2f0aacfc
  405af3:	call   0x129a:0xf2f2636
  405afa:	fdiv   st,st(6)
  405afc:	lds    edi,FWORD PTR [ebx]
  405afe:	lea    esp,[esi+eax*8+0x45]
  405b02:	jb     0x405b35
  405b04:	pushf  
  405b05:	ja     0x405afc
  405b07:	mov    eax,0x3738ee5b
  405b0c:	in     eax,dx
  405b0d:	fcmovne st,st(4)
  405b0f:	mov    edx,0x30b90af4
  405b14:	aas    
  405b15:	jg     0x405b1d
  405b17:	(bad)  
  405b19:	sub    al,0xa3
  405b1b:	aam    0x67
  405b1d:	(bad)  
  405b1e:	lods   al,BYTE PTR ds:[esi]
  405b1f:	(bad)  
  405b22:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405b24:	or     cl,ch
  405b26:	or     BYTE PTR [esi],bh
  405b28:	jmp    0xce21:0xc2f1d70b
  405b2f:	(bad)  
  405b30:	jmp    0x405afe
  405b32:	ins    BYTE PTR es:[edi],dx
  405b33:	in     al,dx
  405b34:	out    dx,eax
  405b35:	jno    0x405b6f
  405b37:	lahf   
  405b38:	les    esp,FWORD PTR [edi+edx*4-0x7f]
  405b3c:	retf   0xd23f
  405b3f:	sub    BYTE PTR [ecx-0x55af3bd2],dh
  405b45:	sub    al,BYTE PTR [edi+eiz*4+0x3c]
  405b49:	pop    edx
  405b4a:	inc    BYTE PTR [edi-0x24]
  405b4d:	sahf   
  405b4e:	ror    BYTE PTR [eax+edx*4+0x1639f5b3],0x41
  405b56:	lock mov al,dl
  405b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b5a:	xchg   BYTE PTR [ebx-0x75acadfc],dl
  405b60:	xchg   edi,eax
  405b61:	aam    0x61
  405b63:	icebp  
  405b64:	sti    
  405b65:	dec    esp
  405b66:	int    0x47
  405b68:	scas   eax,DWORD PTR es:[edi]
  405b69:	add    dh,cl
  405b6b:	ret    0xec41
  405b6e:	loop   0x405bb3
  405b70:	call   0x5b34dbbb
  405b75:	jae    0x405ba3
  405b77:	adc    al,0x3d
  405b79:	xor    DWORD PTR [edx],ebx
  405b7b:	popf   
  405b7c:	jae    0x405bb8
  405b7e:	clc    
  405b7f:	mov    al,0x24
  405b81:	out    dx,eax
  405b82:	stos   BYTE PTR es:[edi],al
  405b83:	mov    bh,0xe5
  405b85:	or     eax,0x5093404a
  405b8a:	mov    ebp,DWORD PTR [esi]
  405b8c:	hlt    
  405b8d:	out    0xb9,al
  405b8f:	mov    ds:0xed8d970c,eax
  405b94:	les    edx,FWORD PTR [ebx]
  405b96:	inc    edx
  405b97:	jns    0x405bea
  405b99:	cmp    eax,0xef2d037a
  405b9e:	or     BYTE PTR [ebp-0x42f10f],bh
  405ba4:	inc    edi
  405ba5:	nop
  405ba6:	scas   eax,DWORD PTR es:[edi]
  405ba7:	and    DWORD PTR [esi+eax*4-0x1ffc3194],edx
  405bae:	dec    edi
  405baf:	lahf   
  405bb0:	pop    es
  405bb1:	pop    edi
  405bb2:	mov    WORD PTR [ebx-0x4ba02b32],fs
  405bb8:	popf   
  405bb9:	inc    edi
  405bba:	inc    ebp
  405bbb:	inc    esi
  405bbc:	pushf  
  405bbd:	int3   
  405bbe:	mov    ds:0x85238409,al
  405bc3:	(bad)  
  405bc4:	adc    BYTE PTR [edi+0x1e],ah
  405bc7:	push   cs
  405bc8:	pop    ds
  405bc9:	sbb    al,0x6c
  405bcb:	push   esi
  405bcc:	push   cs
  405bcd:	outs   dx,DWORD PTR ds:[esi]
  405bce:	(bad)  
  405bcf:	fstp   TBYTE PTR [ebx-0x7979f88f]
  405bd5:	xlat   BYTE PTR ds:[ebx]
  405bd6:	std    
  405bd7:	idiv   DWORD PTR [ebx]
  405bd9:	push   es
  405bda:	hlt    
  405bdb:	dec    ebx
  405bdc:	pop    ds
  405bdd:	jno    0x405be6
  405bdf:	or     al,0x7b
  405be1:	xlat   BYTE PTR ds:[ebx]
  405be2:	(bad)  
  405be3:	ss push ecx
  405be5:	xlat   BYTE PTR ds:[ebx]
  405be6:	pushf  
  405be7:	aaa    
  405be8:	jg     0x405bd6
  405bea:	fidiv  DWORD PTR [edx]
  405bed:	mov    es,WORD PTR [ecx]
  405bef:	fs jecxz 0x405bec
  405bf2:	push   eax
  405bf3:	mov    al,0xe5
  405bf5:	push   ebp
  405bf6:	pop    ds
  405bf7:	sar    BYTE PTR [ebx+0x5b],cl
  405bfa:	jb     0x405ba4
  405bfc:	inc    ebx
  405bfd:	push   cs
  405bfe:	push   ss
  405bff:	adc    dh,dh
  405c01:	jge    0x405c55
  405c03:	mov    ecx,0x31f42a7c
  405c08:	jle    0x405c4c
  405c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0b:	pusha  
  405c0c:	mov    ecx,0x8ccc79b0
  405c11:	outs   dx,DWORD PTR ds:[esi]
  405c12:	cmp    eax,0x588624b9
  405c17:	lds    ebp,FWORD PTR [ebp+0x5b]
  405c1a:	popa   
  405c1b:	dec    ecx
  405c1c:	dec    eax
  405c1d:	push   edx
  405c1e:	push   edi
  405c1f:	xchg   esp,eax
  405c20:	lods   al,BYTE PTR ds:[esi]
  405c21:	xchg   ebx,eax
  405c22:	mov    dl,0x46
  405c24:	(bad)  
  405c25:	fincstp 
  405c27:	sbb    al,0xc8
  405c29:	cmc    
  405c2a:	ficom  WORD PTR [esi-0x13]
  405c2d:	stos   DWORD PTR es:[edi],eax
  405c2e:	int    0xdf
  405c30:	push   ds
  405c31:	loopne 0x405c48
  405c33:	cmp    edi,edi
  405c35:	push   esi
  405c36:	xchg   ebx,eax
  405c37:	mov    ah,BYTE PTR [edi-0x3856b7f2]
  405c3d:	and    ah,ah
  405c3f:	jg     0x405c34
  405c41:	dec    esp
  405c42:	adc    ebx,DWORD PTR [edx]
  405c44:	mov    edi,0x12da11d3
  405c49:	mov    esp,0x8833a41d
  405c4e:	sub    al,0xce
  405c50:	fistp  QWORD PTR [ecx]
  405c52:	lods   eax,DWORD PTR es:[esi]
  405c54:	cmc    
  405c55:	and    ebp,DWORD PTR [edx]
  405c57:	lods   al,BYTE PTR ds:[esi]
  405c58:	imul   ebx,esi,0xf
  405c5b:	outs   dx,DWORD PTR ds:[esi]
  405c5c:	imul   ecx,DWORD PTR [ebp-0x30],0x73caa554
  405c63:	sti    
  405c64:	jmp    0xabfcee0b
  405c69:	jp     0x405cde
  405c6b:	cmc    
  405c6c:	add    edx,DWORD PTR [edx+0x41]
  405c6f:	mov    bl,BYTE PTR [ebp+0x7aea7709]
  405c75:	sub    eax,DWORD PTR [esi+0x47615e32]
  405c7b:	cwde   
  405c7c:	rcl    BYTE PTR [esi+0x44],1
  405c7f:	iret   
  405c80:	call   0x7c4ba9ea
  405c85:	mov    bl,0xd0
  405c87:	xor    esi,eax
  405c89:	shl    BYTE PTR [esi],cl
  405c8b:	bound  ecx,QWORD PTR [ebx+0xc]
  405c8e:	mov    ecx,0x182979ac
  405c93:	mov    BYTE PTR ss:[ebp+0x29396d86],dh
  405c9a:	lods   eax,DWORD PTR ds:[esi]
  405c9b:	mov    ah,BYTE PTR [ecx+0x34821496]
  405ca1:	mov    bh,0x4
  405ca3:	add    BYTE PTR [esi],cl
  405ca5:	cmp    BYTE PTR [esi+0x3c],0xbc
  405ca9:	cwde   
  405caa:	pop    ebp
  405cab:	or     BYTE PTR [eax+0xc5c01d0],cl
  405cb1:	retf   
  405cb2:	xor    DWORD PTR ds:0x768bc5b2,esp
  405cb8:	xlat   BYTE PTR ds:[ebx]
  405cb9:	inc    edx
  405cba:	mov    esp,0xea5c63bf
  405cbf:	jb     0x405cd5
  405cc1:	xchg   edi,eax
  405cc2:	test   BYTE PTR [edi-0x7e],bh
  405cc5:	loop   0x405cc9
  405cc7:	fisttp DWORD PTR [ebp-0x72]
  405cca:	in     eax,dx
  405ccb:	outs   dx,DWORD PTR ds:[esi]
  405ccc:	sub    al,0x3e
  405cce:	es iret 
  405cd0:	mov    dh,BYTE PTR cs:[edi+0x5a]
  405cd4:	ins    BYTE PTR es:[edi],dx
  405cd5:	jl     0x405cbe
  405cd7:	mov    ?,WORD PTR [ebx+eiz*1]
  405cda:	adc    eax,esi
  405cdc:	out    dx,eax
  405cdd:	jbe    0x405cbd
  405cdf:	shl    BYTE PTR [eax-0x2c],0x5
  405ce3:	inc    ebx
  405ce4:	adc    al,0xce
  405ce6:	(bad)  
  405ce7:	fist   WORD PTR [edi-0x6c3314c]
  405ced:	dec    esp
  405cee:	addr16 or eax,0x8cedbbb9
  405cf4:	mov    ah,0x48
  405cf6:	and    esp,DWORD PTR [ecx+0x6e]
  405cf9:	in     eax,0x55
  405cfb:	xchg   BYTE PTR ds:0x826f52c9,cl
  405d01:	rol    DWORD PTR [ebx-0x2080087b],0x60
  405d08:	dec    esp
  405d09:	in     al,dx
  405d0a:	sti    
  405d0b:	out    0x19,al
  405d0d:	mov    bl,0xea
  405d0f:	jae    0x405d40
  405d11:	jmp    0xc2694759
  405d16:	in     eax,dx
  405d17:	lea    esp,[edx+0x7a]
  405d1a:	mov    esp,0xac19260d
  405d1f:	xchg   BYTE PTR [ebp-0xfc96086],dh
  405d25:	mov    edx,0x7f59fb28
  405d2a:	popf   
  405d2b:	xchg   edi,eax
  405d2c:	ss push es
  405d2e:	imul   eax,DWORD PTR [esp+ebx*4],0xffffffbf
  405d32:	sbb    esi,ebx
  405d34:	lea    ebp,[ecx+0x4a]
  405d37:	mov    esi,0xc652715f
  405d3c:	xlat   BYTE PTR ds:[ebx]
  405d3d:	inc    ecx
  405d3e:	cwde   
  405d3f:	adc    ecx,DWORD PTR [ecx+0x2f2cdce0]
  405d45:	lods   al,BYTE PTR ds:[esi]
  405d46:	xchg   ecx,eax
  405d47:	es cs add al,0x71
  405d4b:	test   al,0x6c
  405d4d:	popa   
  405d4e:	mov    ah,0xe9
  405d50:	jecxz  0x405d2a
  405d52:	clc    
  405d53:	shl    DWORD PTR [ecx+0x76],1
  405d56:	cli    
  405d57:	mov    ds:0x2658540e,al
  405d5c:	inc    edi
  405d5d:	jg     0x405d1b
  405d5f:	xor    dl,BYTE PTR [esi]
  405d61:	add    eax,0xfe8a7af
  405d66:	or     al,0xf2
  405d68:	outs   dx,DWORD PTR ds:[esi]
  405d69:	pop    edi
  405d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d6b:	ins    DWORD PTR es:[edi],dx
  405d6c:	call   0x3baa:0xd55f8d1
  405d73:	outs   dx,BYTE PTR ds:[esi]
  405d74:	fnstcw WORD PTR [ecx+0x293b486f]
  405d7a:	gs loope 0x405dfb
  405d7d:	scas   al,BYTE PTR es:[edi]
  405d7e:	imul   edi,DWORD PTR [eax],0x16
  405d81:	cmp    BYTE PTR [ebp+ecx*1-0x77],ch
  405d85:	fsubr  QWORD PTR [ebx]
  405d87:	inc    ebp
  405d88:	icebp  
  405d89:	mov    cl,0xb1
  405d8b:	sbb    al,BYTE PTR [ebp+0x3c]
  405d8e:	pop    edx
  405d8f:	push   ds
  405d90:	pop    ebp
  405d91:	ins    DWORD PTR es:[edi],dx
  405d92:	dec    esi
  405d93:	cmp    edi,eax
  405d95:	inc    esp
  405d96:	push   edi
  405d97:	jo     0x405df3
  405d99:	sahf   
  405d9a:	jmp    0x405e0e
  405d9c:	xchg   DWORD PTR [edx],eax
  405d9e:	test   eax,0x2b5d0640
  405da3:	inc    ecx
  405da4:	jns    0x405df8
  405da6:	sub    ch,BYTE PTR gs:[ecx]
  405da9:	call   0x9a78:0x76000fd8
  405db0:	stc    
  405db1:	hlt    
  405db2:	in     eax,0x6
  405db4:	mov    ah,0x79
  405db6:	mov    ebp,0x8bee454e
  405dbb:	bound  eax,QWORD PTR [esi+eax*4+0x3e]
  405dbf:	ficomp DWORD PTR [edi+0x28bc2bd1]
  405dc5:	jb     0x405dbd
  405dc7:	sbb    BYTE PTR [ecx+0x3c],0x34
  405dcb:	(bad)  
  405dcc:	adc    BYTE PTR [eax-0x1b],ch
  405dcf:	mov    eax,0x152bc091
  405dd4:	ins    BYTE PTR es:[edi],dx
  405dd5:	js     0x405d7f
  405dd7:	inc    ebx
  405dd8:	pop    DWORD PTR [esp+eiz*2]
  405ddb:	pop    eax
  405ddc:	inc    ebx
  405ddd:	mov    al,0x3d
  405ddf:	stos   BYTE PTR es:[edi],al
  405de0:	mov    cs:0xe6b0818e,al
  405de6:	leave  
  405de7:	in     al,0x5a
  405de9:	and    DWORD PTR [esi+edi*8+0xbe359e1],edi
  405df0:	dec    ebp
  405df1:	push   ds
  405df2:	lods   eax,DWORD PTR ds:[esi]
  405df3:	cmp    ecx,esp
  405df5:	or     dl,BYTE PTR [edx-0x64f074be]
  405dfb:	inc    esi
  405dfc:	mov    WORD PTR [ebp-0x3b08fb84],cs
  405e02:	outs   dx,DWORD PTR ds:[esi]
  405e03:	in     eax,0x9e
  405e05:	add    bl,dh
  405e07:	jno    0x405db3
  405e09:	cmp    DWORD PTR [esi+0x33],ebp
  405e0c:	shr    BYTE PTR [ecx+0x37],1
  405e0f:	imul   eax,eax,0xffffff81
  405e12:	cs and al,0x15
  405e15:	push   DWORD PTR [ecx+0x5c136a50]
  405e1b:	aas    
  405e1c:	js     0x405dbb
  405e1e:	jg     0x405de0
  405e20:	sub    al,0x39
  405e22:	fcmovnb st,st(3)
  405e24:	dec    ebp
  405e25:	mov    ebp,0x37f3432d
  405e2a:	pop    edx
  405e2b:	mov    ch,0xe4
  405e2d:	pop    es
  405e2e:	push   0x77
  405e30:	test   al,0xc9
  405e32:	push   ebp
  405e33:	adc    al,0xf1
  405e35:	mov    ah,0x32
  405e37:	add    BYTE PTR [eax+0x61],ch
  405e3a:	popa   
  405e3b:	shr    BYTE PTR [edx-0x37],1
  405e3e:	iret   
  405e3f:	stos   DWORD PTR es:[edi],eax
  405e40:	mov    DWORD PTR ds:0xf3e3b22d,ebx
  405e46:	sub    cl,BYTE PTR [eax]
  405e48:	dec    eax
  405e49:	xchg   edx,eax
  405e4a:	sub    eax,0x5300555e
  405e4f:	pop    ds
  405e50:	(bad)  
  405e51:	out    0xb1,al
  405e53:	fmul   DWORD PTR [ebx+ecx*4]
  405e56:	popf   
  405e57:	lahf   
  405e58:	mov    ebp,0xd5354af0
  405e5d:	mov    eax,0x1722a094
  405e62:	repz sbb DWORD PTR [edi],ecx
  405e65:	push   esi
  405e66:	push   eax
  405e67:	push   ds
  405e68:	ret    0x45e4
  405e6b:	mov    edx,0x48acf6c8
  405e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e71:	clc    
  405e72:	pusha  
  405e73:	or     BYTE PTR [ebp-0x4e],0xac
  405e77:	and    edx,eax
  405e79:	inc    ecx
  405e7a:	xor    esp,eax
  405e7c:	std    
  405e7d:	xor    eax,0x4e794dc5
  405e82:	sbb    al,0x21
  405e84:	xchg   DWORD PTR ds:0x41918f84,ecx
  405e8a:	xchg   ecx,eax
  405e8b:	clc    
  405e8c:	test   DWORD PTR [eax],ecx
  405e8e:	ret    
  405e8f:	sub    BYTE PTR [ecx-0x7b32d720],ah
  405e95:	fistp  WORD PTR [eax-0x734a9513]
  405e9b:	xchg   ecx,eax
  405e9c:	ror    DWORD PTR [ecx],0xdc
  405e9f:	fwait
  405ea0:	not    BYTE PTR [eax+0x27214942]
  405ea6:	sbb    al,0x76
  405ea8:	in     eax,dx
  405ea9:	pop    ebx
  405eaa:	dec    edi
  405eab:	jle    0x405f28
  405ead:	xor    eax,0x85a87478
  405eb2:	outs   dx,BYTE PTR ds:[esi]
  405eb3:	mov    ds:0x806a6672,al
  405eb8:	test   eax,0x2d3ad06d
  405ebd:	mov    esi,0x968d2d34
  405ec2:	push   ebp
  405ec3:	js     0x405e5c
  405ec5:	xor    eax,0x535ecca9
  405eca:	inc    eax
  405ecb:	imul   edi,DWORD PTR [ebp*8+0x526bdf20],0xed1c49ad
  405ed6:	out    dx,al
  405ed7:	arpl   WORD PTR [edi-0x63],cx
  405eda:	fwait
  405edb:	ret    
  405edc:	fsubr  DWORD PTR [esi+ebx*4-0x2e33cbc9]
  405ee3:	mov    bl,0x91
  405ee5:	std    
  405ee6:	iret   
  405ee7:	and    eax,0xc2954639
  405eec:	int3   
  405eed:	fmul   DWORD PTR [eax-0x5b]
  405ef0:	jne    0x405ef3
  405ef2:	cmc    
  405ef3:	pop    esp
  405ef4:	xor    al,BYTE PTR [edi]
  405ef6:	fistp  QWORD PTR [edi-0x2d4479e9]
  405efc:	dec    edx
  405efd:	jne    0x405f67
  405eff:	popa   
  405f00:	xlat   BYTE PTR ds:[ebx]
  405f01:	les    eax,FWORD PTR [esi]
  405f03:	stc    
  405f04:	repnz test DWORD PTR [esi+0x20],0x2c95185
  405f0c:	add    BYTE PTR [esi+0x5d61934e],cl
  405f12:	push   ecx
  405f13:	les    esp,FWORD PTR [edx*8-0x55ab0ce1]
  405f1a:	leave  
  405f1b:	aam    0x95
  405f1d:	mov    bh,0xc2
  405f1f:	mov    eax,ds:0x33fc4979
  405f24:	data16 fisubr WORD PTR ds:0xcd2ca067
  405f2b:	push   esi
  405f2c:	inc    edi
  405f2d:	mov    es,WORD PTR [edx-0x19]
  405f30:	rol    BYTE PTR [eax+0x1459d5ec],cl
  405f36:	pop    ss
  405f37:	mov    edx,0x1f1b3d3
  405f3c:	push   cs
  405f3d:	adc    bl,BYTE PTR [edx+ebx*8]
  405f40:	push   ss
  405f41:	inc    ebp
  405f42:	jo     0x405f5e
  405f44:	rcl    DWORD PTR [ecx],0x6d
  405f47:	(bad)  
  405f48:	mov    al,0x39
  405f4a:	sub    eax,0x3066ce54
  405f4f:	push   es
  405f50:	gs fst st(3)
  405f53:	arpl   WORD PTR [ecx+0x64],bp
  405f56:	xor    cl,BYTE PTR [esi+0xe33b832]
  405f5c:	nop
  405f5d:	out    dx,eax
  405f5e:	mov    edx,0xdabc306a
  405f63:	test   BYTE PTR [ebx],al
  405f65:	test   DWORD PTR [edx],edx
  405f67:	mov    dl,0x73
  405f69:	addr16 sbb eax,0x174bf72c
  405f6f:	xor    BYTE PTR [edi+0x7e8a992c],ch
  405f75:	fisubr DWORD PTR [esi+0x46]
  405f78:	aam    0xf1
  405f7a:	sbb    eax,ecx
  405f7c:	int3   
  405f7d:	mov    BYTE PTR [ebp+0x46afc1af],cl
  405f83:	mov    ds:0xc6f4959d,al
  405f88:	pop    es
  405f89:	fistp  DWORD PTR [eax]
  405f8b:	adc    al,0xe0
  405f8d:	mov    esi,0xcb67efd2
  405f92:	or     ecx,0x4
  405f95:	add    cl,BYTE PTR [edx]
  405f97:	aas    
  405f98:	ficom  DWORD PTR [esi]
  405f9a:	push   eax
  405f9b:	xchg   DWORD PTR [ecx],edi
  405f9d:	xchg   ebx,eax
  405f9e:	xor    eax,0xa3ae11be
  405fa3:	jp     0x405fc8
  405fa5:	clc    
  405fa6:	(bad)  
  405fa7:	ds jl  0x405ff2
  405faa:	jle    0x405f5e
  405fac:	push   eax
  405fad:	xor    al,0xc5
  405faf:	shl    DWORD PTR [edx],1
  405fb1:	fwait
  405fb2:	cmp    BYTE PTR [esi+0x72],ah
  405fb5:	mov    dl,0xf2
  405fb7:	pop    esi
  405fb8:	and    ecx,ebx
  405fba:	in     al,0xb4
  405fbc:	fucom  st(3)
  405fbe:	aad    0xb
  405fc0:	jne    0x405f6f
  405fc2:	jmp    0xd8a3e864
  405fc7:	sub    edx,DWORD PTR [ebx-0x1af4bec0]
  405fcd:	adc    eax,0xcff5d4ec
  405fd2:	fist   DWORD PTR [ecx+0xb1c3a9f]
  405fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd9:	retf   0x58b9
  405fdc:	cdq    
  405fdd:	xchg   ecx,eax
  405fde:	std    
  405fdf:	lods   eax,DWORD PTR ds:[esi]
  405fe0:	sti    
  405fe1:	clc    
  405fe2:	sub    al,0x69
  405fe4:	fsubr  QWORD PTR [edi]
  405fe6:	sub    edi,edx
  405fe8:	or     bl,BYTE PTR [edi]
  405fea:	xchg   edi,eax
  405feb:	int    0x69
  405fed:	ror    BYTE PTR [esi+edx*2],0x84
  405ff1:	fs fwait
  405ff3:	cmp    eax,0xefaa824
  405ff8:	test   al,0x7
  405ffa:	push   eax
  405ffb:	aam    0x7b
  405ffd:	xchg   ecx,eax
  405ffe:	or     al,ah
  406000:	retf   
  406001:	in     al,dx
  406002:	mov    al,0xb7
  406004:	pop    es
  406005:	adc    BYTE PTR [edi-0x2b08c64b],bl
  40600b:	mul    dh
  40600d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40600e:	pop    esi
  40600f:	and    ah,al
  406011:	loop   0x406021
  406013:	xchg   edi,eax
  406014:	js     0x405fb8
  406016:	outs   dx,BYTE PTR ds:[esi]
  406017:	loop   0x40607c
  406019:	cmp    DWORD PTR [esi+0x52],0xffffffef
  40601d:	inc    edx
  40601e:	push   ebp
  40601f:	xlat   BYTE PTR ds:[ebx]
  406020:	test   BYTE PTR [edx+eiz*1-0x2c1343d0],bh
  406027:	xor    BYTE PTR [edx-0x1d],ah
  40602a:	mov    dh,0xfc
  40602c:	sbb    DWORD PTR [ecx],edi
  40602e:	nop
  40602f:	adc    esi,ebx
  406031:	jge    0x405fcc
  406033:	mov    esi,0xd7b042dd
  406038:	ror    BYTE PTR fs:[ebx+0x6fc0d1c9],0x84
  406040:	retf   0xe3d2
  406043:	mov    ds:0xdc8bf80c,eax
  406048:	jmp    0x21fc:0xc538c26
  40604f:	mov    bh,BYTE PTR [eax-0x61]
  406052:	sbb    al,0x89
  406054:	push   edx
  406055:	add    ebp,edx
  406057:	mov    cl,0x8b
  406059:	xor    bl,ch
  40605b:	xchg   ebp,eax
  40605c:	stos   BYTE PTR es:[edi],al
  40605d:	add    ebp,edi
  40605f:	lods   al,BYTE PTR ds:[esi]
  406060:	rcr    ecx,0x4a
  406063:	sub    bl,cl
  406065:	jo     0x406045
  406067:	or     ecx,DWORD PTR [ecx+0x7d]
  40606a:	outs   dx,BYTE PTR ds:[esi]
  40606b:	or     al,BYTE PTR [edx]
  40606d:	sub    eax,0xac70038f
  406072:	ret    0xb57d
  406075:	popf   
  406076:	push   0x6a4e9d5b
  40607b:	shr    BYTE PTR [edx+edi*2+0x31d55f70],1
  406082:	jmp    0x40607f
  406084:	adc    ah,ch
  406086:	dec    edx
  406087:	pusha  
  406088:	push   cs
  406089:	sahf   
  40608a:	or     DWORD PTR [edi+0x4e204562],ebp
  406090:	push   es
  406091:	adc    eax,0x798b7ef0
  406096:	idiv   BYTE PTR [edx-0x77ac4feb]
  40609c:	bound  esp,QWORD PTR [ecx-0x58]
  40609f:	inc    eax
  4060a0:	lds    eax,FWORD PTR [eax-0x39]
  4060a3:	jmp    0x40609a
  4060a5:	mov    ebp,0x44b92ecd
  4060aa:	xchg   edi,eax
  4060ab:	xor    bl,BYTE PTR [eax+0x19]
  4060ae:	xchg   esi,eax
  4060af:	sahf   
  4060b0:	fisub  DWORD PTR [ecx+0x54]
  4060b3:	adc    BYTE PTR [esi-0x62fdb6d0],0xf0
  4060ba:	xlat   BYTE PTR ds:[ebx]
  4060bb:	es lahf 
  4060bd:	pop    ss
  4060be:	out    0x34,al
  4060c0:	adc    dl,BYTE PTR [ebx+eax*2-0x333accdd]
  4060c7:	and    bh,BYTE PTR [ebp+0x9f9f7b4]
  4060cd:	je     0x4060b7
  4060cf:	jle    0x406071
  4060d1:	push   es
  4060d2:	pop    ss
  4060d3:	outs   dx,BYTE PTR ds:[esi]
  4060d4:	or     BYTE PTR [ebx+eax*8-0x12682e0b],ah
  4060db:	inc    edx
  4060dc:	mov    ch,0xcd
  4060de:	push   ecx
  4060df:	cmc    
  4060e0:	cmc    
  4060e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e2:	or     eax,0x89785f9a
  4060e7:	fldenv [eax]
  4060e9:	icebp  
  4060ea:	sub    DWORD PTR [ebx-0xb2f95c2],0xffffffe1
  4060f1:	mov    cs,WORD PTR [edx]
  4060f3:	sbb    al,0x37
  4060f5:	sbb    ch,ch
  4060f7:	out    0x5b,eax
  4060f9:	paddsb mm7,QWORD PTR [ecx+0x57cbfd55]
  406100:	cld    
  406101:	nop    DWORD PTR [esi*2+0x7ffcf9fb]
  406109:	xchg   BYTE PTR [ebx-0x31],ah
  40610c:	mov    ch,0x31
  40610e:	loop   0x406153
  406110:	loope  0x4060af
  406112:	xchg   DWORD PTR [ebp-0x2b],ebp
  406115:	inc    ebp
  406116:	test   BYTE PTR [edx-0xe],dh
  406119:	imul   ebp,DWORD PTR [ebx-0x136c2f7b],0x465ed7c
  406123:	pop    ecx
  406124:	mov    esp,0xfd0584e3
  406129:	cmp    ebp,ebp
  40612b:	mov    dh,0xb5
  40612d:	loop   0x406199
  40612f:	mov    eax,0x842043d3
  406134:	sar    ch,0xe
  406137:	in     al,0xe7
  406139:	jns    0x4060bb
  40613b:	cmp    al,0xe4
  40613d:	and    cl,BYTE PTR [esp+ebx*8]
  406140:	xchg   edx,eax
  406141:	xlat   BYTE PTR ds:[ebx]
  406142:	arpl   WORD PTR [ecx-0x2b],bp
  406145:	cdq    
  406146:	adc    BYTE PTR [ebx-0x58],dh
  406149:	adc    eax,0x442496a5
  40614e:	aas    
  40614f:	adc    al,0xc6
  406151:	xor    bl,0x8b
  406154:	and    BYTE PTR ds:0x316d1d48,al
  40615a:	arpl   dx,dx
  40615c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40615d:	les    ebx,FWORD PTR [ebx]
  40615f:	sbb    BYTE PTR [esi],bl
  406161:	push   es
  406162:	pop    ebx
  406163:	jo     0x4060f9
  406165:	sub    BYTE PTR [ebp-0x1d9234a1],bh
  40616b:	call   0x22c:0xc483c91a
  406172:	adc    bh,ch
  406174:	inc    edx
  406175:	jnp    0x4061e7
  406177:	out    dx,eax
  406178:	mov    dl,0xbb
  40617a:	inc    esi
  40617b:	adc    ecx,DWORD PTR [eax+eiz*2]
  40617e:	sub    DWORD PTR [eax],ebx
  406180:	adc    eax,0xe9621652
  406185:	sbb    dl,BYTE PTR [edi+0x6]
  406188:	pop    ds
  406189:	cwde   
  40618a:	and    al,0xa8
  40618c:	mov    al,0xcc
  40618e:	cmp    DWORD PTR [esi-0x69],ebp
  406191:	pop    eax
  406192:	retf   
  406193:	inc    ebp
  406194:	(bad)  
  406195:	mov    es,WORD PTR [edi-0x4f]
  406198:	lea    edi,[esi+0x3b5aa8c0]
  40619e:	(bad)  
  40619f:	mov    ch,0x5f
  4061a1:	mov    ebp,0x4ab2c774
  4061a6:	dec    esi
  4061a7:	cmp    al,0xd8
  4061a9:	aad    0x69
  4061ab:	xor    al,ch
  4061ad:	jge    0x4061d1
  4061af:	out    0xb5,al
  4061b1:	mov    al,ds:0x9d12476d
  4061b6:	test   BYTE PTR ds:0xdd104214,dl
  4061bc:	ss push edx
  4061be:	sbb    al,0xd1
  4061c0:	aas    
  4061c1:	adc    eax,DWORD PTR [ecx-0x5a092e8d]
  4061c7:	ret    0x1afd
  4061ca:	push   ss
  4061cb:	dec    ebx
  4061cc:	call   0xa351:0x9275caad
  4061d3:	cdq    
  4061d4:	inc    ebp
  4061d5:	leave  
  4061d6:	cmp    al,0x2b
  4061d8:	xlat   BYTE PTR ds:[ebx]
  4061d9:	int3   
  4061da:	rcr    DWORD PTR [edx+0x7e36d4bd],1
  4061e0:	mov    ch,0xb5
  4061e2:	retf   0xc5b7
  4061e5:	lea    edx,[esi-0x294e9846]
  4061eb:	in     eax,0xc7
  4061ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ee:	test   al,0x10
  4061f0:	addr16 mov esi,0x74b355b6
  4061f6:	cmp    esp,esp
  4061f8:	(bad)  
  4061fa:	sti    
  4061fb:	mov    edi,DWORD PTR [esi+0x2e]
  4061fe:	es repz mov ebp,0x84702f7d
  406205:	dec    ecx
  406206:	mov    ecx,0xe0fe8d11
  40620b:	sbb    eax,0xca3c13a3
  406210:	xchg   edx,eax
  406211:	jmp    0x776c67a3
  406216:	or     esp,DWORD PTR [ebp-0x3e]
  406219:	(bad)  
  40621a:	scas   al,BYTE PTR es:[edi]
  40621b:	call   0xe3e86953
  406220:	cdq    
  406221:	mov    esi,0x1e68e3b8
  406226:	pop    es
  406227:	jne    0x40624b
  406229:	sar    BYTE PTR [edx],1
  40622b:	out    0xb5,eax
  40622d:	in     eax,dx
  40622e:	rol    BYTE PTR [ebp+0x6e6e9971],cl
  406234:	push   ecx
  406235:	clc    
  406236:	mov    ch,0x16
  406238:	mov    al,ds:0xb3134767
  40623d:	push   ebx
  40623e:	xlat   BYTE PTR ds:[ebx]
  40623f:	stos   BYTE PTR es:[edi],al
  406240:	mov    ds:0x9ad9b428,eax
  406245:	aam    0x7b
  406247:	mov    eax,ds:0x918295e0
  40624c:	push   cs
  40624d:	fidivr DWORD PTR [ebx]
  40624f:	jl     0x406266
  406251:	xor    eax,0xc6393d13
  406256:	push   0x115e5e8d
  40625b:	loop   0x406285
  40625d:	scas   eax,DWORD PTR es:[edi]
  40625e:	mov    dh,0x3d
  406260:	jmp    0x40621e
  406262:	push   edx
  406263:	das    
  406264:	add    al,0x59
  406266:	cli    
  406267:	inc    ebx
  406268:	outs   dx,DWORD PTR ds:[esi]
  406269:	les    esp,FWORD PTR [ebx-0x54d34f3b]
  40626f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406270:	stos   DWORD PTR es:[edi],eax
  406271:	jecxz  0x406266
  406273:	stc    
  406274:	retf   0x89d7
  406277:	or     ch,BYTE PTR [ebx]
  406279:	mov    ah,dh
  40627b:	sar    BYTE PTR [esi-0x2d91bdc1],cl
  406281:	xchg   ebp,eax
  406282:	enter  0xe445,0x9b
  406286:	push   edx
  406287:	push   DWORD PTR ds:[edi]
  40628a:	ins    BYTE PTR es:[edi],dx
  40628b:	add    eax,0x33e48d4e
  406290:	jo     0x406306
  406292:	pop    ebx
  406293:	or     BYTE PTR [edi-0x5a1b610c],dl
  406299:	inc    eax
  40629a:	(bad)  
  40629b:	mov    DWORD PTR [edi],ebx
  40629d:	(bad)  
  40629e:	fsubr  DWORD PTR [esi+0x61c631b]
  4062a4:	(bad)  
  4062a5:	mov    eax,edx
  4062a7:	cmp    cl,bl
  4062a9:	adc    eax,0xff203311
  4062af:	jmp    0x406232
  4062b1:	aaa    
  4062b2:	daa    
  4062b3:	iret   
  4062b4:	pusha  
  4062b5:	push   ss
  4062b6:	pusha  
  4062b7:	inc    esp
  4062b8:	pushf  
  4062b9:	dec    ecx
  4062ba:	and    ch,BYTE PTR [ebp-0x2cf3b1cd]
  4062c0:	clc    
  4062c1:	pop    ss
  4062c2:	mov    cl,0x59
  4062c4:	gs mov ebx,0xa8f3836c
  4062ca:	xchg   ebx,eax
  4062cb:	mov    dh,0x8c
  4062cd:	xor    bl,al
  4062cf:	mov    esp,0x1a3dfdf1
  4062d4:	cmp    DWORD PTR [edi+ebp*8+0x2957a840],0x7a
  4062dc:	fnstcw WORD PTR [ebx]
  4062de:	cmovp  eax,DWORD PTR [ebx]
  4062e1:	mov    ebx,0xa6440347
  4062e6:	xor    BYTE PTR ds:0xea679531,bh
  4062ec:	call   0x8ca04a77
  4062f1:	mov    bh,0x41
  4062f3:	and    ecx,DWORD PTR fs:[edi]
  4062f6:	mov    al,bh
  4062f8:	push   esp
  4062f9:	adc    al,0xbf
  4062fb:	push   ss
  4062fc:	mov    dh,0xfb
  4062fe:	jl     0x406362
  406300:	sub    al,BYTE PTR [ecx+0x5f70afd9]
  406306:	ror    DWORD PTR [edx-0x5e06d241],1
  40630c:	inc    edi
  40630d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40630e:	xor    ah,BYTE PTR [eax-0x6c]
  406311:	rcr    DWORD PTR [ebx-0x63ee0a3c],cl
  406317:	sbb    esi,DWORD PTR [esi-0x347520b7]
  40631d:	dec    ebx
  40631e:	inc    ebx
  40631f:	imul   ebp,ebx,0x69d8a609
  406325:	es int 0x1f
  406328:	data16 (bad) 
  40632a:	mov    WORD PTR [ebx+0x34],ss
  40632d:	(bad)  
  40632e:	pushf  
  40632f:	and    dl,bh
  406331:	mov    esi,0xb5663a1
  406336:	ficom  WORD PTR [esi+0x1c]
  406339:	jns    0x40630b
  40633b:	pop    es
  40633c:	shl    DWORD PTR ds:0xcfa565b0,cl
  406342:	or     al,0xf9
  406344:	push   ds
  406345:	outs   dx,BYTE PTR ds:[esi]
  406346:	jne    0x4062d5
  406348:	loopne 0x4062ce
  40634a:	rol    DWORD PTR [esi+ebx*1+0x76],1
  40634e:	(bad)  
  40634f:	xor    DWORD PTR [ecx-0x8],esi
  406352:	neg    DWORD PTR ds:0x315cff9f
  406358:	fdivr  QWORD PTR ds:0xe1363042
  40635e:	retf   
  40635f:	sbb    eax,0x73c39694
  406364:	sub    BYTE PTR [esp+eax*2+0x5c],dl
  406368:	je     0x406309
  40636a:	sub    bh,BYTE PTR [ebx+0x25]
  40636d:	adc    ebp,eax
  40636f:	lea    edi,[ebx-0x46ed0520]
  406375:	xchg   esp,eax
  406376:	cmp    bl,dh
  406378:	cmp    BYTE PTR [edx+0x398e851f],dl
  40637e:	cwde   
  40637f:	in     al,0x6a
  406381:	push   edx
  406382:	aad    0x6c
  406384:	sti    
  406385:	sub    DWORD PTR [ecx+0x4d],esp
  406388:	addr16 push esp
  40638a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638b:	push   0x7
  40638d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638e:	(bad)  
  40638f:	add    al,0x2c
  406391:	popa   
  406392:	nop
  406393:	loope  0x406340
  406395:	mov    esp,0x34e3df57
  40639a:	xchg   DWORD PTR [edx],edi
  40639c:	cli    
  40639d:	sub    eax,0xe391aef
  4063a2:	jno    0x406405
  4063a4:	out    0xc5,al
  4063a6:	lahf   
  4063a7:	cld    
  4063a8:	imul   esi,DWORD PTR [ecx+0x43e4b1dc],0xa5df29d4
  4063b2:	jno    0x406391
  4063b4:	and    dh,BYTE PTR [ecx-0x78]
  4063b7:	dec    esi
  4063b8:	dec    ecx
  4063b9:	jle    0x4063fe
  4063bb:	fsubp  st(5),st
  4063bd:	xlat   BYTE PTR ds:[ebx]
  4063be:	mov    WORD PTR [ebp-0x56f92867],fs
  4063c4:	shr    BYTE PTR [ebx+0x61],0x4
  4063c8:	jle    0x40639a
  4063ca:	sbb    al,0x4e
  4063cc:	fsubrp st(0),st
  4063ce:	aam    0x61
  4063d0:	call   0x4ad1:0x990cde57
  4063d7:	dec    esp
  4063d8:	repz loop 0x40637d
  4063db:	inc    edi
  4063dc:	es clc 
  4063de:	ror    dh,1
  4063e0:	scas   al,BYTE PTR es:[edi]
  4063e1:	cmp    eax,0x810a6d37
  4063e6:	test   eax,0xf39091d1
  4063eb:	rcl    dh,cl
  4063ed:	sub    dl,BYTE PTR [ebp+0x746d2e02]
  4063f3:	sbb    cl,BYTE PTR [ecx]
  4063f5:	mov    dl,0x31
  4063f7:	nop
  4063f8:	push   esp
  4063f9:	cdq    
  4063fa:	pop    es
  4063fb:	popf   
  4063fc:	inc    ebx
  4063fd:	fist   WORD PTR [eax+0x58]
  406400:	push   0x15
  406402:	fwait
  406403:	and    ebx,ebx
  406405:	dec    ecx
  406406:	mov    BYTE PTR [edi+0x2526ac6b],bh
  40640c:	xor    BYTE PTR [esi],ch
  40640e:	push   0xffffffff
  406410:	mov    eax,ds:0x2fac44d7
  406415:	pop    ebx
  406416:	xor    ecx,edi
  406418:	mov    DWORD PTR [eax],edi
  40641a:	lahf   
  40641b:	ss ds mov ah,0x3e
  40641f:	jnp    0x406432
  406421:	inc    edi
  406422:	xchg   edx,eax
  406423:	add    esp,DWORD PTR [edx-0x4e]
  406426:	mov    cl,0x77
  406429:	pop    edx
  40642a:	add    dh,cl
  40642c:	or     DWORD PTR [edx+eiz*4-0x38],esp
  406430:	arpl   WORD PTR [eax+0x126130c8],dx
  406436:	and    bl,BYTE PTR [esi+0x2221082e]
  40643c:	leave  
  40643d:	or     ecx,DWORD PTR ds:0x469833d3
  406443:	dec    esi
  406444:	mov    esi,DWORD PTR [ecx+eax*2-0x2e41c79e]
  40644b:	xor    al,0x6f
  40644d:	inc    eax
  40644e:	aas    
  40644f:	inc    esp
  406450:	push   eax
  406451:	stos   DWORD PTR es:[edi],eax
  406452:	jle    0x4064d0
  406454:	(bad)  
  406455:	das    
  406456:	int    0xbb
  406458:	fst    QWORD PTR [edi-0x66]
  40645b:	mov    ecx,0xf2b1c2e5
  406460:	pop    esp
  406461:	mov    bh,0x0
  406463:	imul   edi,DWORD PTR [edi+eiz*4+0x7d],0xef9f28a
  40646b:	pop    edi
  40646c:	ja     0x4064af
  40646e:	out    dx,eax
  40646f:	and    ebx,DWORD PTR [edi+0x47f1859e]
  406475:	and    dh,bl
  406477:	in     eax,dx
  406478:	push   ss
  406479:	enter  0x40f0,0x7a
  40647d:	push   ds
  40647e:	in     eax,0x68
  406480:	ds push edi
  406482:	xchg   ebp,eax
  406483:	pusha  
  406484:	add    BYTE PTR [ebp+eax*4-0x3c981d0e],bl
  40648b:	inc    ebx
  40648c:	add    eax,DWORD PTR [ebx+ebx*4+0x4e]
  406490:	dec    edi
  406491:	mov    eax,0x14a65af8
  406496:	gs jmp 0xa308:0xf5d187c1
  40649e:	push   eax
  40649f:	pop    edx
  4064a0:	xor    al,0x9b
  4064a2:	aaa    
  4064a3:	mov    dh,BYTE PTR [edi+0x49]
  4064a6:	fild   DWORD PTR [eax-0x6c3c269e]
  4064ac:	jmp    0xea7375dd
  4064b1:	repz push esp
  4064b3:	popa   
  4064b4:	adc    edi,0xa46889d1
  4064ba:	jo     0x4064cc
  4064bc:	inc    ebp
  4064bd:	sbb    BYTE PTR [edi+0x652e5c7e],ch
  4064c3:	cmp    al,bh
  4064c5:	inc    edx
  4064c6:	(bad)  
  4064c7:	jbe    0x406472
  4064c9:	sbb    bl,BYTE PTR [edi-0x51]
  4064cc:	fxch   st(5)
  4064ce:	sub    BYTE PTR [ebx-0xc],bh
  4064d1:	jge    0x4064af
  4064d3:	pushf  
  4064d4:	jmp    0xddd48824
  4064d9:	dec    ebx
  4064da:	add    BYTE PTR [edi],al
  4064dc:	adc    esp,edx
  4064de:	add    esp,DWORD PTR [eax-0x45fb984e]
  4064e4:	(bad)  [esi]
  4064e6:	retf   0x7908
  4064e9:	pop    esp
  4064ea:	fdivr  DWORD PTR [eax]
  4064ec:	jnp    0x406484
  4064ee:	and    al,0x90
  4064f0:	cmp    eax,0xa8259dcf
  4064f5:	xchg   ebx,eax
  4064f6:	mov    ebx,DWORD PTR [eax+0x883c7e1]
  4064fc:	ja     0x40649f
  4064fe:	inc    esi
  4064ff:	push   ebx
  406500:	xor    DWORD PTR [edi],0xffffffb9
  406503:	dec    edi
  406504:	push   edi
  406505:	or     BYTE PTR [esi+0xac2a297],bh
  40650b:	and    BYTE PTR [eax+eiz*1-0x425abd89],bh
  406512:	stos   DWORD PTR es:[edi],eax
  406513:	dec    eax
  406514:	repz adc eax,0xb1924ede
  40651a:	xchg   ebp,eax
  40651b:	and    al,BYTE PTR [eax-0x42]
  40651e:	fst    DWORD PTR gs:[edi+0x22]
  406522:	out    0xc4,al
  406524:	mov    ah,BYTE PTR ds:0x5ecb7587
  40652a:	inc    ebx
  40652b:	sub    eax,0xc316e150
  406530:	call   esp
  406532:	sub    al,0x1f
  406534:	jbe    0x4064ca
  406536:	mov    BYTE PTR [ecx+0x32],0x6b
  40653a:	loope  0x406526
  40653c:	push   0x8d6a3c8
  406541:	mov    BYTE PTR [ecx+0x3e69f845],al
  406547:	dec    esi
  406548:	or     DWORD PTR [ebx+0x53],ebp
  40654b:	xor    eax,DWORD PTR [ecx+esi*2]
  40654e:	pusha  
  40654f:	jge    0x4065c4
  406551:	mov    al,0x3b
  406553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406554:	shl    DWORD PTR [ecx-0x64a41570],0xd
  40655b:	and    eax,0x6a9c7283
  406560:	xchg   ebx,eax
  406561:	push   ebp
  406562:	imul   esi,DWORD PTR [ebx-0x2a],0x41
  406566:	aas    
  406567:	sbb    eax,0xf8b60796
  40656c:	or     BYTE PTR [eax],ch
  40656e:	push   ds
  40656f:	jmp    0xa367:0xa333b4d0
  406576:	fcmovu st,st(2)
  406578:	xor    BYTE PTR [ebx],ah
  40657a:	mov    esi,0x5854e2e3
  40657f:	fld    DWORD PTR [ebx-0x7c1bc55f]
  406585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406587:	loopne 0x40656a
  406589:	pop    ebx
  40658a:	daa    
  40658b:	les    eax,FWORD PTR [ebp-0x10]
  40658e:	fstp   QWORD PTR [ebx]
  406590:	cmc    
  406591:	fisubr WORD PTR [ebp+0xa]
  406594:	mov    edx,0xba8f27b0
  406599:	jg     0x4065f0
  40659b:	push   esi
  40659c:	inc    ebx
  40659d:	push   ds
  40659e:	arpl   WORD PTR [esi],bp
  4065a0:	lds    ebp,FWORD PTR [ebp-0xbb956ea]
  4065a6:	add    esp,edi
  4065a8:	mov    cl,0x4
  4065aa:	clc    
  4065ab:	pop    eax
  4065ac:	jo     0x40662d
  4065ae:	jns    0x4065e9
  4065b0:	loope  0x40656f
  4065b2:	mov    ebp,DWORD PTR [esi]
  4065b4:	pop    ss
  4065b5:	push   cs
  4065b6:	xchg   ebp,eax
  4065b7:	add    BYTE PTR [esi],0x63
  4065ba:	jg     0x4065cb
  4065bc:	push   esp
  4065bd:	jb     0x40654e
  4065bf:	mov    eax,ds:0x933ab506
  4065c4:	pop    edi
  4065c5:	pusha  
  4065c6:	fdiv   QWORD PTR [edi-0x70c81bb0]
  4065cc:	fwait
  4065cd:	aas    
  4065ce:	(bad)  
  4065cf:	fs inc ebp
  4065d1:	dec    eax
  4065d2:	or     dh,BYTE PTR [ecx]
  4065d4:	push   0x769a80d1
  4065d9:	jge    0x4065e5
  4065db:	push   cs
  4065dc:	std    
  4065dd:	inc    esi
  4065de:	addr16 sbb eax,0x51065145
  4065e4:	inc    edx
  4065e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e6:	jg     0x406618
  4065e8:	adc    BYTE PTR [esi+0x1f],0xac
  4065ec:	test   eax,0xff184cb0
  4065f1:	mov    dl,0x37
  4065f3:	xchg   DWORD PTR [ecx-0x31798dd2],ebp
  4065f9:	mov    ah,BYTE PTR [esi]
  4065fb:	bound  ebp,QWORD PTR ds:0x29b7c3f5
  406601:	popa   
  406602:	add    BYTE PTR [ebp+0x1b8b99f7],cl
  406608:	pop    edi
  406609:	(bad)  
  40660a:	clc    
  40660b:	or     al,0x62
  40660d:	add    al,0xea
  40660f:	popf   
  406610:	xchg   esp,eax
  406611:	ins    BYTE PTR es:[edi],dx
  406612:	jp     0x406612
  406614:	sbb    esp,DWORD PTR [eax+0x42]
  406617:	mov    ds:0x62a2d7fc,eax
  40661c:	div    DWORD PTR [eax+0x13033ac4]
  406622:	repnz push esp
  406624:	inc    esi
  406625:	or     eax,0x7468efd5
  40662a:	push   ebx
  40662b:	and    edi,DWORD PTR [ecx+0x25]
  40662e:	lea    ebx,[esi+0x18]
  406631:	jnp    0x406641
  406633:	cmp    al,0x36
  406635:	stc    
  406636:	arpl   WORD PTR [ebp+0x45f8dc45],sp
  40663c:	mov    WORD PTR [ebx-0x32],fs
  40663f:	shl    BYTE PTR [ebp-0x6d46e04f],cl
  406645:	xchg   ebp,eax
  406646:	add    BYTE PTR [ebx+0x22987939],dl
  40664c:	push   0xffffff8c
  40664e:	adc    ecx,DWORD PTR [eax+0x45]
  406651:	add    BYTE PTR [edi-0x38],ah
  406654:	xchg   esp,eax
  406655:	lods   al,BYTE PTR ds:[esi]
  406656:	sub    BYTE PTR [ebx+0x69],al
  406659:	outs   dx,BYTE PTR ds:[esi]
  40665a:	leave  
  40665b:	and    ebx,DWORD PTR [ebp+0x5db9b3bd]
  406661:	pop    esp
  406662:	jbe    0x4066bc
  406664:	out    0x62,eax
  406666:	gs inc esi
  406668:	pop    edi
  406669:	jp     0x4066d4
  40666b:	jl     0x40660e
  40666d:	mov    esi,0xcb05f811
  406672:	push   ebp
  406673:	pusha  
  406674:	lahf   
  406675:	dec    ebx
  406676:	mov    ds:0x79ce0dd0,eax
  40667b:	lahf   
  40667c:	cs in  al,dx
  40667e:	dec    ebp
  40667f:	loopne 0x40664e
  406681:	scas   eax,DWORD PTR es:[edi]
  406682:	out    dx,eax
  406683:	sub    eax,0xe5d5de87
  406688:	push   0xffffff95
  40668a:	jle    0x406655
  40668c:	or     DWORD PTR [esi+0x609440ca],esi
  406692:	enter  0xa440,0x8
  406696:	in     al,0x9b
  406698:	add    eax,esp
  40669a:	int    0x3d
  40669c:	mov    bh,BYTE PTR [ebp+0x6d]
  40669f:	push   0xc0167dcd
  4066a4:	jbe    0x40669d
  4066a6:	or     ah,BYTE PTR [edx+edi*4]
  4066a9:	push   edx
  4066aa:	dec    esi
  4066ab:	fbld   TBYTE PTR [eax+0x3091c344]
  4066b1:	and    edi,ecx
  4066b3:	data16 cs mov dh,0xf6
  4066b7:	out    dx,al
  4066b8:	push   esp
  4066b9:	loope  0x406672
  4066bb:	cmp    esi,esi
  4066bd:	mov    dh,0xe1
  4066bf:	pop    ds
  4066c0:	out    dx,al
  4066c1:	mov    bl,0x64
  4066c3:	addr16 shl dl,1
  4066c6:	(bad)  
  4066c7:	repz test eax,0xc5ecac83
  4066cd:	lods   eax,DWORD PTR ds:[esi]
  4066ce:	dec    ebx
  4066cf:	icebp  
  4066d0:	fwait
  4066d1:	mov    al,0x50
  4066d3:	push   ebp
  4066d4:	xchg   ebx,ecx
  4066d6:	cmc    
  4066d7:	jmp    0x4066f6
  4066d9:	mov    ecx,0xdadcf33e
  4066de:	jnp    0x4066d0
  4066e0:	imul   edi,ecx,0x62
  4066e3:	imul   edi,DWORD PTR [ebp+0x6e906287],0x27
  4066ea:	leave  
  4066eb:	ror    DWORD PTR [edx-0x46ac3baa],cl
  4066f1:	call   0x4812c33a
  4066f6:	pop    ebp
  4066f7:	sub    BYTE PTR [ecx],dh
  4066f9:	xchg   ecx,eax
  4066fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fb:	mov    ebx,DWORD PTR [ebx+0x1d]
  4066fe:	cmp    DWORD PTR ds:0xb247231a,edi
  406704:	cdq    
  406705:	cmp    bh,al
  406707:	mov    bh,BYTE PTR [edi-0x21]
  40670a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40670b:	adc    al,0x2b
  40670d:	jmp    0x406690
  40670f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406710:	fwait
  406711:	push   es
  406712:	mov    edx,0x1dc25ebb
  406717:	dec    eax
  406718:	mov    ebx,0x13f95c56
  40671d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40671e:	lods   eax,DWORD PTR ds:[esi]
  40671f:	lds    ebp,FWORD PTR [ebx+ebx*4-0x1b]
  406723:	cmc    
  406724:	enter  0xf518,0x94
  406728:	mov    DWORD PTR [edi+0x7791db15],edi
  40672e:	call   0xf23967c3
  406733:	xchg   edx,eax
  406734:	xchg   BYTE PTR [ebx-0x724cd5fc],dh
  40673a:	or     DWORD PTR [edi-0x23b85de7],ecx
  406740:	jne    0x406701
  406742:	mov    ch,0x97
  406744:	popa   
  406745:	das    
  406746:	loopne 0x4066ff
  406748:	pop    ecx
  406749:	pushf  
  40674a:	outs   dx,DWORD PTR ds:[esi]
  40674b:	xchg   BYTE PTR [eax],bl
  40674d:	inc    eax
  40674e:	xchg   BYTE PTR [eax+0x63],dh
  406751:	subps  xmm5,XMMWORD PTR [ebp+0x8bf20e4]
  406758:	add    eax,0x7014d744
  40675d:	xor    eax,0xbe603917
  406762:	jl     0x40672e
  406764:	cmp    esi,DWORD PTR [eax+0x40cef508]
  40676a:	(bad)  
  40676b:	scas   al,BYTE PTR es:[edi]
  40676c:	add    ecx,DWORD PTR [edx-0x73]
  40676f:	dec    edi
  406770:	fimul  DWORD PTR [esi+0x68c2ca0]
  406776:	pop    ebx
  406777:	sbb    eax,0xe9ceaff4
  40677c:	es ds loop 0x4067fe
  406780:	fwait
  406781:	(bad)  
  406782:	and    BYTE PTR [ebp-0x6],dh
  406785:	stc    
  406786:	dec    esi
  406787:	lahf   
  406788:	enter  0x6661,0xff
  40678c:	les    eax,FWORD PTR ds:0x591e1582
  406792:	mov    edi,DWORD PTR [edx-0x11aef2b2]
  406798:	cli    
  406799:	ins    DWORD PTR es:[edi],dx
  40679a:	les    esi,FWORD PTR [ebp-0x1ca1455f]
  4067a0:	xchg   edx,eax
  4067a1:	popa   
  4067a2:	and    eax,0x7b81671c
  4067a7:	pop    esp
  4067a8:	int    0x46
  4067aa:	imul   eax,DWORD PTR [eax],0x553c5452
  4067b0:	xchg   esi,eax
  4067b1:	cmp    ch,cl
  4067b3:	xchg   edi,eax
  4067b4:	pop    es
  4067b5:	inc    ecx
  4067b6:	imul   ecx,ebp,0x33c84468
  4067bc:	jecxz  0x4067b1
  4067be:	call   0x6cb3f102
  4067c3:	ret    
  4067c4:	test   BYTE PTR [edi+0x17],bl
  4067c7:	sbb    bh,cl
  4067c9:	xchg   BYTE PTR [edi],bl
  4067cb:	popa   
  4067cc:	pop    ds
  4067cd:	sbb    al,0x73
  4067cf:	jo     0x4067ec
  4067d1:	pop    esi
  4067d2:	push   ebp
  4067d3:	dec    ebx
  4067d4:	xchg   ebp,eax
  4067d5:	dec    edi
  4067d6:	sbb    ebx,DWORD PTR [edi+0x60664a67]
  4067dc:	cs adc eax,0x9957722f
  4067e2:	je     0x406845
  4067e4:	jp     0x406773
  4067e6:	(bad)  
  4067e8:	sbb    BYTE PTR [ebx-0x73d7db38],0x6a
  4067ef:	inc    edi
  4067f0:	add    DWORD PTR [edi-0x5c],edx
  4067f3:	mov    DWORD PTR [edi],esi
  4067f5:	stos   BYTE PTR es:[edi],al
  4067f6:	lds    ebx,FWORD PTR es:[esi]
  4067f9:	push   ebx
  4067fa:	add    bh,BYTE PTR [edi]
  4067fc:	stos   BYTE PTR es:[edi],al
  4067fd:	push   edi
  4067fe:	mov    al,ds:0x74c144e8
  406803:	push   ebp
  406804:	jl     0x40684c
  406806:	(bad)  
  406808:	mul    DWORD PTR [ebp+0x1010b3b4]
  40680e:	pop    ebp
  40680f:	mov    ds:0x5998af68,al
  406814:	out    dx,eax
  406815:	cdq    
  406816:	call   0x4a5a95c2
  40681b:	add    DWORD PTR [ecx],ecx
  40681d:	imul   BYTE PTR [eax+0x5100ce6b]
  406823:	add    eax,0x75abf017
  406828:	jg     0x40680c
  40682a:	cmp    DWORD PTR [ebp+0x6b],esp
  40682d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682e:	in     al,0x90
  406830:	cmp    DWORD PTR ss:[ebx-0xe],ebp
  406834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406836:	dec    edi
  406837:	fisttp DWORD PTR [edx+0x121ef32a]
  40683d:	cdq    
  40683e:	sub    al,0x8e
  406840:	or     ebp,ebx
  406842:	and    BYTE PTR [ebx],cl
  406844:	inc    ecx
  406845:	fdiv   QWORD PTR [edi+0x7c8ae31b]
  40684b:	ds into 
  40684d:	shr    DWORD PTR [ecx+0x53],0x9f
  406851:	into   
  406852:	push   es
  406853:	dec    ebx
  406854:	rcl    DWORD PTR [ebx+0x4f4ce85],0x51
  40685b:	xchg   esi,eax
  40685c:	jmp    0x40681f
  40685e:	fisub  DWORD PTR [edx+0x6c]
  406861:	inc    ebp
  406862:	addr16 cli 
  406864:	push   cs
  406865:	cmc    
  406866:	jns    0x4068e6
  406868:	jle    0x40688c
  40686a:	(bad)  
  40686b:	jmp    ebx
  40686d:	rcl    BYTE PTR [eax],cl
  40686f:	xor    eax,0x32b9cad3
  406874:	dec    edx
  406875:	cmp    DWORD PTR [ebx-0x56],esp
  406878:	push   es
  406879:	aad    0x47
  40687b:	jge    0x40680a
  40687d:	or     edx,ebp
  40687f:	sbb    BYTE PTR ds:0x7fb57f36,0x15
  406886:	xor    BYTE PTR [eax-0x5c2c0de3],0x8a
  40688d:	iret   
  40688e:	in     eax,dx
  40688f:	inc    eax
  406890:	fnstenv [edx+0x19e8f93f]
  406896:	mov    DWORD PTR ds:0xc64ed3df,0xacebbd1c
  4068a0:	sub    ecx,0xffffff8d
  4068a3:	xchg   edx,eax
  4068a4:	ret    0xdfbc
  4068a7:	stos   BYTE PTR es:[edi],al
  4068a8:	js     0x406902
  4068aa:	xor    eax,0xa1fb232f
  4068af:	idiv   ecx
  4068b1:	call   0x4fae:0xb8712cb0
  4068b8:	adc    al,0xb3
  4068ba:	shr    DWORD PTR [ebx],cl
  4068bc:	push   cs
  4068bd:	add    eax,0x2b89affa
  4068c2:	int3   
  4068c3:	icebp  
  4068c4:	cmp    BYTE PTR [esi],0x6e
  4068c7:	aas    
  4068c8:	mov    ah,BYTE PTR [eax]
  4068ca:	mov    eax,ds:0xf34b6486
  4068cf:	stc    
  4068d0:	icebp  
  4068d1:	pusha  
  4068d2:	or     ch,BYTE PTR ds:0x96bf00d4
  4068d8:	(bad)  
  4068d9:	(bad)  
  4068da:	inc    BYTE PTR [ebp-0x316b8f51]
  4068e0:	cmp    al,BYTE PTR [ecx]
  4068e2:	lods   al,BYTE PTR ds:[esi]
  4068e3:	sbb    dl,BYTE PTR [edi+ecx*8+0x35]
  4068e7:	dec    edx
  4068e8:	xchg   edi,eax
  4068e9:	jl     0x40691c
  4068eb:	test   BYTE PTR [eax+ecx*4-0x72],bh
  4068ef:	mov    ah,0x9f
  4068f1:	enter  0x530b,0x33
  4068f5:	or     bl,BYTE PTR [ecx+0x39310bb1]
  4068fb:	jnp    0x406964
  4068fd:	outs   dx,DWORD PTR ds:[esi]
  4068fe:	fwait
  4068ff:	mov    al,ds:0x2cac27cd
  406904:	xor    DWORD PTR [ebp+0x6],eax
  406907:	jne    0x4068f1
  406909:	dec    ebx
  40690a:	int3   
  40690b:	jne    0x4068d1
  40690d:	pop    edi
  40690e:	rcr    DWORD PTR [eax-0x70183e50],1
  406914:	ror    edi,0x8b
  406917:	mov    edx,0x8c58a0f2
  40691c:	imul   ebx,DWORD PTR [edx+ecx*2+0x3f],0xffffff94
  406921:	pop    ebp
  406922:	mov    cl,0x2a
  406924:	pop    ss
  406925:	jle    0x406988
  406927:	shl    BYTE PTR [edi],0xa2
  40692a:	pushf  
  40692b:	ret    0x7113
  40692e:	in     eax,dx
  40692f:	popf   
  406930:	mov    DWORD PTR [ebp-0x48],esi
  406933:	stc    
  406934:	fnstenv [eax+ebp*2+0x47]
  406938:	sub    eax,0x7c131de6
  40693d:	lds    edx,FWORD PTR [edx]
  40693f:	jbe    0x4068e3
  406941:	not    DWORD PTR [esi+0x3525052b]
  406947:	xor    DWORD PTR [ecx+0x1ce81afc],0xffffffd4
  40694e:	mov    dh,0x52
  406950:	icebp  
  406951:	add    cl,BYTE PTR [ebx+0x70]
  406954:	sbb    al,0x3
  406956:	into   
  406957:	cdq    
  406958:	ret    0x5c97
  40695b:	fst    DWORD PTR [edx+eax*4]
  40695e:	aaa    
  40695f:	pop    ds
  406960:	loopne 0x40695c
  406962:	jmp    0x406987
  406964:	mov    bl,BYTE PTR [esi-0x7b7bfe47]
  40696a:	sbb    ah,BYTE PTR [ebx+edi*4+0xe]
  40696e:	jo     0x4068fc
  406970:	xchg   BYTE PTR cs:[ecx-0x604a240d],cl
  406977:	pusha  
  406978:	pop    ecx
  406979:	fs test ecx,0xdfd9e5f4
  406980:	mov    bh,0x56
  406982:	sbb    ah,BYTE PTR [edi+0x54840b6f]
  406988:	shr    DWORD PTR [edi-0x2dbc39bf],0x24
  40698f:	mov    esi,0x1f4a1356
  406994:	mov    al,0x91
  406996:	mov    bh,0xeb
  406998:	(bad)  
  406999:	ins    DWORD PTR es:[edi],dx
  40699a:	data16 shr BYTE PTR [ecx-0x2dcd7488],0x32
  4069a2:	out    dx,al
  4069a3:	mov    eax,ds:0x8109d524
  4069a8:	fldcw  WORD PTR [ebp-0x45]
  4069ab:	add    eax,0x604dff9b
  4069b0:	jle    0x4069d7
  4069b2:	pop    ebx
  4069b3:	mov    dl,0xbc
  4069b5:	jl     0x4069e2
  4069b7:	stos   BYTE PTR es:[edi],al
  4069b8:	jae    0x406a2d
  4069ba:	out    0x87,eax
  4069bc:	inc    ebp
  4069bd:	scas   eax,DWORD PTR es:[edi]
  4069be:	(bad)  
  4069bf:	dec    edx
  4069c0:	mov    esi,0x4be21643
  4069c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069c6:	mov    ebp,0xf02b79b1
  4069cb:	aam    0x1a
  4069cd:	loopne 0x4069f8
  4069cf:	into   
  4069d0:	adc    ch,BYTE PTR [esi+0x57]
  4069d3:	fnsave [edi+0x33fa53d5]
  4069d9:	jg     0x406a39
  4069db:	retf   0x62e8
  4069de:	mov    esi,0x58d64fc3
  4069e3:	pop    esi
  4069e4:	imul   bp,WORD PTR [ecx],0xc6d6
  4069e9:	pop    ebp
  4069ea:	add    bl,BYTE PTR [ebp-0x79]
  4069ed:	aad    0x1b
  4069ef:	rol    DWORD PTR [edx+eax*2+0x5],cl
  4069f3:	sbb    eax,0xb10e93f4
  4069f8:	cdq    
  4069f9:	(bad)  
  4069fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fb:	mov    bh,0x2d
  4069fd:	cmp    dl,BYTE PTR [edx-0x491e8258]
  406a03:	mov    bl,0x62
  406a05:	fs ds mov bl,0xe7
  406a09:	inc    eax
  406a0a:	mov    eax,0xb3c6408b
  406a0f:	hlt    
  406a10:	pop    edx
  406a11:	mov    BYTE PTR [ebp+0x75ce7696],0xf1
  406a18:	daa    
  406a19:	hlt    
  406a1a:	imul   esp,edi,0xffffffe7
  406a1d:	jmp    0x4069e5
  406a1f:	dec    ebx
  406a20:	lahf   
  406a21:	jnp    0x4069c6
  406a23:	inc    eax
  406a24:	iret   
  406a25:	push   eax
  406a26:	dec    edx
  406a27:	enter  0x1fc7,0x74
  406a2b:	imul   edi,esi,0x23
  406a2e:	add    DWORD PTR [edi-0x71],edi
  406a31:	(bad)  
  406a32:	jns    0x4069ef
  406a34:	sbb    ebx,DWORD PTR [edx]
  406a36:	(bad)  
  406a37:	cli    
  406a38:	(bad)  
  406a3a:	in     al,0x8
  406a3c:	xchg   ebp,eax
  406a3d:	push   0xffffffce
  406a3f:	sub    BYTE PTR [esi-0x12],ch
  406a42:	aad    0xf6
  406a44:	cmp    eax,0xb0bdd848
  406a49:	cdq    
  406a4a:	xor    al,0x44
  406a4c:	inc    ebx
  406a4d:	(bad)  
  406a4e:	(bad)
  406a51:	(bad)  
  406a52:	mov    ds:0xf55a26da,al
  406a57:	xchg   edi,eax
  406a58:	sti    
  406a59:	cmp    al,0xd8
  406a5b:	pop    ds
  406a5c:	inc    ecx
  406a5d:	inc    ebx
  406a5e:	out    0x9a,al
  406a60:	pop    ebx
  406a61:	adc    al,0x10
  406a63:	pop    ds
  406a64:	pusha  
  406a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a66:	xor    cl,bh
  406a68:	mov    ecx,0xaf923b9
  406a6d:	add    BYTE PTR [esi-0x4a02ffb],dl
  406a73:	mov    ebp,0x3599e5cc
  406a78:	jno    0x406a13
  406a7a:	scas   eax,DWORD PTR es:[edi]
  406a7b:	sub    BYTE PTR [edi+0x6c8002f],0x64
  406a82:	xchg   edi,eax
  406a83:	loope  0x406ae7
  406a85:	xor    ebp,DWORD PTR [edi+0xd90c700]
  406a8b:	push   es
  406a8c:	fwait
  406a8d:	dec    esi
  406a8e:	test   eax,0x85b615a2
  406a93:	inc    esi
  406a94:	dec    eax
  406a95:	add    DWORD PTR [eax+0x76],0xffffffbb
  406a99:	and    al,0x85
  406a9b:	mov    BYTE PTR [ebx],bh
  406a9d:	jno    0x406abc
  406a9f:	out    0x14,eax
  406aa1:	pop    edx
  406aa2:	xchg   ebp,eax
  406aa3:	pop    esi
  406aa4:	mov    DWORD PTR ds:0xc4a5ec2d,edi
  406aaa:	cli    
  406aab:	jmp    0x6091446
  406ab0:	rcr    DWORD PTR [esi],1
  406ab2:	or     BYTE PTR [edi-0x9],dl
  406ab5:	and    BYTE PTR [edi],bh
  406ab7:	inc    esi
  406ab8:	jle    0x406a7d
  406aba:	cmp    edi,DWORD PTR [ebx]
  406abc:	in     al,0xc
  406abe:	adc    dh,BYTE PTR [edi-0x47]
  406ac1:	fs adc eax,0x2752c630
  406ac7:	cmp    al,cl
  406ac9:	arpl   WORD PTR [ebp+0x6d],bp
  406acc:	mov    WORD PTR [ecx],cs
  406ace:	pop    ss
  406acf:	mov    al,ds:0x7c20c623
  406ad4:	jmp    0x406aa8
  406ad6:	mov    ah,0x63
  406ad8:	loop   0x406a74
  406ada:	sbb    ebx,DWORD PTR [edx+0x3148b410]
  406ae0:	inc    ebp
  406ae1:	push   ecx
  406ae2:	push   ss
  406ae3:	aad    0xc
  406ae5:	xor    eax,0x114f36f1
  406aea:	dec    ecx
  406aeb:	clc    
  406aec:	in     al,0x8b
  406aee:	pop    eax
  406aef:	ror    BYTE PTR [esi],cl
  406af1:	mov    ecx,0x76f1653a
  406af6:	xor    edi,DWORD PTR [esi+0x7445693e]
  406afc:	call   0xd0a3ef0a
  406b01:	push   ebp
  406b02:	outs   dx,DWORD PTR ds:[esi]
  406b03:	(bad)  
  406b04:	cwde   
  406b05:	sub    BYTE PTR [esi-0x36ddf671],dh
  406b0b:	or     edx,DWORD PTR [ebp+0x3d6b0fef]
  406b11:	jg     0x406ae7
  406b13:	cmp    bh,al
  406b15:	cmc    
  406b16:	lahf   
  406b17:	dec    ebx
  406b18:	ss jmp 0xfebb41c0
  406b1e:	mov    ds:0x8844a674,al
  406b23:	mov    eax,0xbcd7c374
  406b28:	pusha  
  406b29:	add    DWORD PTR [eax],ebx
  406b2b:	jge    0x406af4
  406b2d:	cmp    DWORD PTR [edx-0x3b24ea91],edx
  406b33:	dec    ebx
  406b34:	loop   0x406b77
  406b36:	sub    al,0xde
  406b38:	xchg   esp,eax
  406b39:	int3   
  406b3a:	ds adc eax,0x92e676e
  406b40:	outs   dx,BYTE PTR ds:[esi]
  406b41:	sub    eax,0x74b757d9
  406b46:	scas   eax,DWORD PTR es:[edi]
  406b47:	cmp    BYTE PTR [edi],al
  406b49:	cli    
  406b4a:	dec    eax
  406b4b:	or     al,0xd5
  406b4d:	mov    ebp,0xc62808a2
  406b52:	ret    
  406b53:	mov    DWORD PTR [ebx+0x147bb361],ecx
  406b59:	adc    eax,0x133a93fb
  406b5e:	pop    ebx
  406b5f:	pop    ebx
  406b60:	loopne 0x406b1f
  406b62:	xchg   edx,eax
  406b63:	or     eax,0x2a9dfdbe
  406b68:	hlt    
  406b69:	mov    WORD PTR [edx-0x34],ss
  406b6c:	push   ds
  406b6d:	arpl   WORD PTR [eax+ebp*2-0x76],sp
  406b71:	inc    ebx
  406b72:	ret    
  406b73:	or     al,0x65
  406b75:	shl    BYTE PTR [ebx],cl
  406b77:	fstp   st(6)
  406b79:	pop    esi
  406b7a:	aad    0x9d
  406b7c:	lea    esp,[edi+0x2a]
  406b7f:	jg     0x406b99
  406b81:	jmp    0x406bad
  406b83:	pusha  
  406b84:	push   esp
  406b85:	xlat   BYTE PTR ds:[ebx]
  406b86:	in     eax,0xd8
  406b88:	sbb    ch,BYTE PTR [ebx]
  406b8a:	lea    eax,[edi-0x68da56f]
  406b90:	bnd jno 0x406b75
  406b93:	imul   ebx,DWORD PTR [eax+0x7973187e],0xf37abb08
  406b9d:	mov    dh,0xf9
  406b9f:	fisttp QWORD PTR [eax+0x417680da]
  406ba5:	mov    ecx,0xb22fa8cd
  406baa:	in     eax,0x78
  406bac:	jl     0x406b34
  406bae:	fidiv  DWORD PTR [edx-0x3f456254]
  406bb4:	sti    
  406bb5:	sbb    DWORD PTR [edi+0x7d],ebx
  406bb8:	push   ebp
  406bb9:	or     eax,0x290fd1ac
  406bbe:	int3   
  406bbf:	aad    0x46
  406bc1:	shr    DWORD PTR [eax+0x3c],cl
  406bc4:	or     eax,0xf5d8cd
  406bc9:	pop    esi
  406bca:	jl     0x406b91
  406bcc:	push   ebx
  406bcd:	jo     0x406c4a
  406bcf:	retf   
  406bd0:	out    0x77,eax
  406bd2:	nop
  406bd3:	ret    
  406bd4:	jbe    0x406bfa
  406bd6:	es sub cl,bl
  406bd9:	fwait
  406bda:	leave  
  406bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bdc:	popa   
  406bdd:	enter  0x4be6,0x63
  406be1:	mov    ebx,0x3298ae3a
  406be6:	push   cs
  406be7:	ja     0x406ba1
  406be9:	cmp    cl,BYTE PTR [eax-0x25]
  406bec:	pop    ebp
  406bed:	xor    ecx,DWORD PTR [ebp+edx*2-0x5e]
  406bf1:	jmp    0x60e3:0x7ab72424
  406bf8:	scas   al,BYTE PTR es:[edi]
  406bf9:	pop    edi
  406bfa:	stc    
  406bfb:	mov    bh,0xf0
  406bfd:	push   0x1c2c7b42
  406c02:	or     BYTE PTR [edx],ch
  406c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c05:	test   DWORD PTR [edi-0x18dd66c5],esi
  406c0b:	idiv   DWORD PTR [ebp+0x29]
  406c0e:	out    0x6f,al
  406c10:	mov    ecx,0x2109b6af
  406c15:	sar    BYTE PTR [eax],0x6d
  406c18:	and    eax,0x1438f56c
  406c1d:	jno    0x406c79
  406c1f:	psubusb mm1,QWORD PTR [esi]
  406c22:	shl    DWORD PTR [ecx+0x22607f36],1
  406c28:	rol    BYTE PTR [esi-0x11a66405],0xf0
  406c2f:	jo     0x406c56
  406c31:	daa    
  406c32:	lock inc eax
  406c34:	mov    BYTE PTR [edx+0x47],al
  406c37:	lzcnt  ebx,DWORD PTR fs:[edx]
  406c3c:	jge    0x406bca
  406c3e:	and    DWORD PTR [ebp-0x780d6d5b],edx
  406c44:	into   
  406c45:	dec    edi
  406c46:	inc    ecx
  406c47:	pop    ds
  406c48:	lds    eax,FWORD PTR [edi+0x24]
  406c4b:	ds ins BYTE PTR es:[edi],dx
  406c4d:	jno    0x406c56
  406c4f:	pop    ebx
  406c50:	es jnp 0x406c52
  406c53:	sub    BYTE PTR [edx],ch
  406c55:	push   0x2c
  406c57:	mov    al,0x7f
  406c59:	loope  0x406cae
  406c5b:	xchg   ebx,eax
  406c5c:	mov    esp,db2
  406c5f:	xchg   ebp,eax
  406c60:	fxsave ds:0xed289e16
  406c67:	jnp    0x406bf1
  406c69:	xchg   esp,eax
  406c6a:	loope  0x406ce5
  406c6c:	(bad)  
  406c6d:	lahf   
  406c6e:	in     al,dx
  406c6f:	mov    esi,edx
  406c71:	add    BYTE PTR [esi+0x79],ah
  406c74:	adc    ebp,DWORD PTR [ebx+0x45ec28f8]
  406c7a:	cli    
  406c7b:	mov    ds:0x48b2b3a7,eax
  406c80:	cwde   
  406c81:	cmp    ebx,DWORD PTR [edi]
  406c83:	or     eax,0x27f4dbc5
  406c88:	fnstenv [eax]
  406c8a:	jnp    0x406ca5
  406c8c:	sbb    dh,bh
  406c8e:	push   edi
  406c8f:	loopne 0x406c13
  406c91:	sub    DWORD PTR [ecx-0x5b],esp
  406c94:	push   0xffffffa9
  406c96:	cmc    
  406c97:	add    dl,BYTE PTR [eax-0x5c0229f4]
  406c9d:	push   ecx
  406c9e:	adc    ah,BYTE PTR [edx+0x5f]
  406ca1:	loopne 0x406c74
  406ca3:	je     0x406cfb
  406ca5:	inc    esp
  406ca6:	(bad)  
  406ca7:	shl    al,cl
  406ca9:	push   esp
  406caa:	sub    edi,ecx
  406cac:	sbb    DWORD PTR [eax],ebp
  406cae:	test   ecx,0xea967baf
  406cb4:	pop    ss
  406cb5:	sub    eax,0x5a2aa17e
  406cba:	adc    eax,0x6d4f12ee
  406cbf:	popf   
  406cc0:	jne    0x406c65
  406cc2:	push   ecx
  406cc3:	ja     0x406d03
  406cc5:	pop    ds
  406cc6:	fwait
  406cc7:	add    eax,0x1c04e5be
  406ccc:	(bad)  
  406ccd:	jle    0x406c58
  406ccf:	retf   
  406cd0:	dec    ebp
  406cd1:	fcom   QWORD PTR [eax-0x7258c05b]
  406cd7:	retf   
  406cd8:	push   esi
  406cd9:	and    dh,BYTE PTR [eax+0x7c]
  406cdc:	(bad)  
  406cde:	mov    ds,eax
  406ce0:	xchg   edi,eax
  406ce1:	push   ecx
  406ce2:	pop    eax
  406ce3:	(bad)
  406ce6:	gs fs push eax
  406ce9:	mov    cl,0xe0
  406ceb:	jle    0x406ccd
  406ced:	lock push ss
  406cef:	out    0xa7,al
  406cf1:	adc    al,0x0
  406cf3:	inc    esp
  406cf4:	test   al,0xc
  406cf6:	push   cs
  406cf7:	test   DWORD PTR [edx-0x7276e386],ebx
  406cfd:	lods   eax,DWORD PTR ds:[esi]
  406cfe:	push   0xffffffb6
  406d00:	stos   DWORD PTR es:[edi],eax
  406d01:	xchg   ecx,eax
  406d02:	dec    ebx
  406d03:	stc    
  406d04:	and    al,BYTE PTR [ebx-0x18]
  406d07:	paddd  mm3,QWORD PTR [edx+0x2e]
  406d0b:	pushf  
  406d0c:	xchg   ebp,eax
  406d0d:	cmp    ecx,ebp
  406d0f:	add    al,0x12
  406d11:	imul   BYTE PTR [ecx+0x28]
  406d14:	call   0x3c47:0xa1315191
  406d1b:	fstp   TBYTE PTR [edi-0x950e7c9]
  406d21:	mov    ds:0x1ba04ef4,eax
  406d26:	lods   al,BYTE PTR ds:[esi]
  406d27:	je     0x406d48
  406d29:	push   eax
  406d2a:	aam    0x49
  406d2c:	std    
  406d2d:	pop    ebx
  406d2e:	cbw    
  406d30:	out    dx,al
  406d31:	dec    edi
  406d32:	or     eax,0x81c7670
  406d37:	repnz sbb al,0x5b
  406d3a:	jle    0x406d94
  406d3c:	mov    esi,0xde931be2
  406d41:	mov    bl,0xa3
  406d43:	inc    esp
  406d44:	je     0x406cd4
  406d46:	pop    ss
  406d47:	shl    BYTE PTR [ebx+0x50],0x41
  406d4b:	(bad)  
  406d4c:	mov    edx,0x93ee4560
  406d51:	sbb    eax,0x92756d4
  406d56:	sbb    cl,al
  406d58:	out    dx,eax
  406d59:	mov    ecx,0xc08eb8b7
  406d5e:	ds inc esp
  406d60:	js     0x406d71
  406d62:	jl     0x406d56
  406d64:	jecxz  0x406cf1
  406d66:	xor    BYTE PTR [edx-0xea2b2],dh
  406d6c:	je     0x406d5c
  406d6e:	jecxz  0x406d5c
  406d70:	sub    ebp,DWORD PTR [edx+0xda6c025]
  406d76:	(bad)  
  406d77:	js     0x406d18
  406d79:	mov    ah,0x4b
  406d7b:	or     BYTE PTR [ecx-0x2e],al
  406d7e:	and    BYTE PTR [edx+0x7c],0x40
  406d82:	jmp    0x325127f9
  406d87:	or     al,0x91
  406d89:	mov    ds:0xbc27b80f,eax
  406d8e:	jmp    0xc88c2558
  406d93:	sar    BYTE PTR [edi],1
  406d95:	mov    dl,0xf4
  406d97:	xchg   edx,eax
  406d98:	pusha  
  406d99:	inc    esi
  406d9a:	bound  esi,QWORD PTR [ecx]
  406d9c:	jmp    0x406d8b
  406d9e:	ret    0x8c3f
  406da1:	aad    0xd4
  406da3:	lahf   
  406da4:	(bad)  
  406da6:	(bad)
  406da9:	inc    ebx
  406daa:	cdq    
  406dab:	sub    eax,0xc732d26a
  406db0:	mov    dh,bl
  406db2:	sub    al,0x28
  406db4:	daa    
  406db5:	(bad)  
  406db6:	les    esp,FWORD PTR [edx]
  406db8:	mov    gs,WORD PTR [esi-0x38]
  406dbb:	test   DWORD PTR [edi],esi
  406dbd:	das    
  406dbe:	dec    ecx
  406dbf:	inc    esi
  406dc0:	loop   0x406ddc
  406dc2:	(bad)  
  406dc3:	jno    0x406d46
  406dc5:	jl     0x406db7
  406dc7:	aad    0x23
  406dc9:	pop    esi
  406dca:	mov    bh,0x19
  406dcc:	bound  edi,QWORD PTR [ebx+0x43]
  406dcf:	outs   dx,DWORD PTR ds:[esi]
  406dd0:	leave  
  406dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd2:	cli    
  406dd3:	(bad)  
  406dd5:	imul   ebx,esp,0x8389aaf7
  406ddb:	jmp    0x406da8
  406ddd:	test   BYTE PTR [edi+0x66],bl
  406de0:	shr    eax,0x8f
  406de3:	inc    edx
  406de4:	xor    al,0x69
  406de6:	ss es xor eax,0x4b90b0e3
  406ded:	or     DWORD PTR [eax-0x374d28b1],0x5d
  406df4:	sub    edi,DWORD PTR [edx+edx*4-0x58]
  406df8:	mov    edi,0xf3425e52
  406dfd:	mov    edi,0x8c565887
  406e02:	stos   DWORD PTR es:[edi],eax
  406e03:	std    
  406e04:	lock mov ds,WORD PTR [ebp+0x5e76cb07]
  406e0b:	jl     0x406e3d
  406e0d:	lods   eax,DWORD PTR ds:[esi]
  406e0e:	push   es
  406e0f:	pop    edx
  406e10:	jb     0x406ddb
  406e12:	push   0x44
  406e14:	or     dl,ah
  406e16:	adc    edi,DWORD PTR [ebp+0x1a]
  406e19:	xlat   BYTE PTR ds:[ebx]
  406e1a:	sub    cl,dl
  406e1c:	stos   DWORD PTR es:[edi],eax
  406e1d:	xchg   edi,eax
  406e1e:	repnz pop edi
  406e20:	pusha  
  406e21:	test   eax,0x2ceff9a8
  406e26:	push   es
  406e27:	pop    eax
  406e28:	pop    ds
  406e29:	add    dl,BYTE PTR [ebp-0x23]
  406e2c:	ds push 0x2d935649
  406e32:	add    ebx,DWORD PTR [esi-0x5d1a6b7d]
  406e38:	dec    esp
  406e39:	retf   0x6b07
  406e3c:	outs   dx,BYTE PTR ds:[esi]
  406e3d:	into   
  406e3e:	jl     0x406e7e
  406e40:	cmp    eax,0xbbcfaea6
  406e45:	cmp    DWORD PTR [edi+0x21],0xb34f90e8
  406e4c:	std    
  406e4d:	sbb    DWORD PTR [ebx+ecx*2-0x31],edx
  406e51:	inc    ebx
  406e52:	sbb    BYTE PTR [ebx+esi*1],dh
  406e55:	cmp    DWORD PTR [ebx-0x2f8c7b00],edi
  406e5b:	js     0x406e7a
  406e5d:	and    ebp,esp
  406e5f:	in     eax,0x63
  406e61:	jnp    0x406ea9
  406e63:	shl    BYTE PTR ds:0xde7b36dc,cl
  406e69:	ror    DWORD PTR [ebp-0x5],cl
  406e6c:	les    eax,FWORD PTR [ecx+eax*2-0x61]
  406e70:	pusha  
  406e71:	rcr    DWORD PTR [edi-0x23b1fd3c],cl
  406e77:	cwde   
  406e78:	mov    esi,ebp
  406e7a:	jae    0x406e28
  406e7c:	test   eax,0xa5d5a050
  406e81:	mov    al,ds:0x4ebbb538
  406e86:	test   eax,0xb2c2a941
  406e8b:	add    bh,BYTE PTR ds:[eax-0x448387a9]
  406e92:	push   0x5d4abef4
  406e97:	xchg   ecx,eax
  406e98:	popa   
  406e99:	dec    edi
  406e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9b:	test   eax,0x5aae01e4
  406ea0:	inc    ebx
  406ea1:	test   BYTE PTR [ebp+esi*1-0x30],bh
  406ea5:	push   ds
  406ea6:	and    esp,DWORD PTR ds:0x29f76f6d
  406eac:	push   ss
  406ead:	pop    ecx
  406eae:	mov    dh,0xb6
  406eb0:	sbb    al,0xda
  406eb2:	xor    eax,0xf9e838c0
  406eb7:	call   0xffb867cd
  406ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ebd:	les    eax,FWORD PTR [edi+0x1d68a337]
  406ec3:	mov    bl,0x7c
  406ec5:	sti    
  406ec6:	stos   BYTE PTR es:[edi],al
  406ec7:	call   0x363ffb3
  406ecc:	dec    ebp
  406ecd:	outs   dx,BYTE PTR ds:[esi]
  406ece:	xchg   esp,eax
  406ecf:	mov    bh,0xe6
  406ed1:	call   0xe7cb:0xaba84ead
  406ed8:	cmp    DWORD PTR [esi-0x39c46696],edi
  406ede:	lahf   
  406edf:	int    0x98
  406ee1:	aam    0xf8
  406ee3:	mov    bl,0xd9
  406ee5:	rol    edx,1
  406ee7:	sahf   
  406ee8:	loopne 0x406e77
  406eea:	mov    ebx,0xae1ceb8a
  406eef:	retf   0x588e
  406ef2:	inc    esi
  406ef3:	(bad)  
  406ef4:	retf   0xf959
  406ef7:	pop    esi
  406ef8:	je     0x406f0f
  406efa:	leave  
  406efb:	mov    ah,0x4d
  406efd:	and    bh,dh
  406eff:	arpl   WORD PTR [ebx+0x3],sp
  406f02:	mov    ds:0xa07e040f,al
  406f07:	jge    0x406e89
  406f09:	jne    0x406f08
  406f0b:	nop
  406f0c:	adc    al,0x8f
  406f0e:	repz lock dec ebp
  406f11:	xchg   ebx,eax
  406f12:	jmp    eax
  406f14:	push   0x46
  406f16:	stos   BYTE PTR es:[edi],al
  406f17:	mov    bh,0x2c
  406f19:	out    dx,al
  406f1a:	dec    eax
  406f1b:	jl     0x406f88
  406f1d:	and    edi,0x64
  406f20:	stos   DWORD PTR es:[edi],eax
  406f21:	cmp    al,0x4c
  406f23:	outs   dx,BYTE PTR ds:[esi]
  406f24:	jb     0x406f52
  406f26:	or     al,ch
  406f28:	cmp    DWORD PTR [edi],edx
  406f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f2b:	fldenv [esi]
  406f2d:	dec    eax
  406f2e:	(bad)  
  406f2f:	enter  0x43e4,0xe5
  406f33:	mov    esi,0xa813d75b
  406f38:	cmp    eax,0xf02696b1
  406f3d:	in     al,dx
  406f3e:	jge    0x406f87
  406f40:	sbb    ah,BYTE PTR [esi]
  406f42:	ja     0x406edb
  406f44:	in     al,0xb8
  406f46:	je     0x406f78
  406f48:	mov    edx,0xba41616
  406f4d:	cmp    ebp,DWORD PTR [ebx]
  406f4f:	loop   0x406f8f
  406f51:	imul   ecx,ebp,0xa
  406f54:	xor    ah,BYTE PTR ds:0x9e4e1c1d
  406f5a:	js     0x406f85
  406f5c:	daa    
  406f5d:	arpl   WORD PTR [esi-0x7566b509],ax
  406f63:	std    
  406f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f65:	aaa    
  406f66:	hlt    
  406f67:	jmp    0x406f68
  406f69:	mov    ecx,0x6dacf098
  406f6e:	enter  0xac42,0x55
  406f72:	or     ch,dl
  406f74:	in     eax,0xd3
  406f76:	and    bh,BYTE PTR [ebx]
  406f78:	pop    esi
  406f79:	push   edx
  406f7a:	sub    ah,BYTE PTR [eax-0x5166b92f]
  406f80:	mov    ecx,esp
  406f82:	adc    eax,0x5fbb32ac
  406f87:	rol    edi,cl
  406f89:	cli    
  406f8a:	loopne 0x406ff1
  406f8c:	std    
  406f8d:	aas    
  406f8e:	mov    dh,ah
  406f90:	pop    ds
  406f91:	and    ebx,ecx
  406f93:	imul   ecx,DWORD PTR [ecx-0x3a],0x45bf95fe
  406f9a:	sub    eax,0xa9a9221c
  406f9f:	xor    ch,bl
  406fa1:	mov    DWORD PTR [edx-0x55],ebx
  406fa4:	xchg   ebp,eax
  406fa5:	push   0x9a51864e
  406faa:	sub    dl,dh
  406fac:	and    BYTE PTR [ebx-0x2],cl
  406faf:	pop    ebx
  406fb0:	pop    ebx
  406fb1:	cmp    eax,0x2a6c8510
  406fb6:	xchg   BYTE PTR [bx+0x1793],ah
  406fbb:	repnz call 0xdd24:0x79ed12ed
  406fc3:	mov    DWORD PTR [esp+ecx*4-0x673d7236],edx
  406fca:	and    bh,BYTE PTR [esi-0x1cee1c8e]
  406fd0:	cld    
  406fd1:	mov    edx,DWORD PTR [edi+0xa]
  406fd4:	mov    DWORD PTR [edx],eax
  406fd6:	pop    eax
  406fd7:	shl    DWORD PTR ds:0x4502ab9,cl
  406fdd:	pusha  
  406fde:	push   ebp
  406fdf:	outs   dx,DWORD PTR ds:[esi]
  406fe0:	jp     0x407040
  406fe2:	adc    al,0xb6
  406fe4:	sbb    eax,DWORD PTR [eax+eax*4]
  406fe7:	mov    edx,0x3568fc29
  406fec:	pop    edi
  406fed:	push   edi
  406fee:	aad    0xd8
  406ff0:	inc    esi
  406ff1:	cmp    dh,cl
  406ff3:	xor    eax,DWORD PTR [ebx-0x3]
  406ff6:	push   es
  406ff7:	xadd   DWORD PTR [eax],ebp
  406ffa:	clc    
  406ffb:	push   esp
  406ffc:	adc    dh,BYTE PTR [esi+0x50570223]
  407002:	cmp    eax,0xcef0119a
  407007:	sub    al,0x8
  407009:	test   DWORD PTR [ebp+0x0],0xeda7a613
  407010:	sub    al,0xf9
  407012:	push   DWORD PTR [eax+0xa655b64]
  407018:	out    dx,eax
  407019:	sti    
  40701a:	sub    al,0xd7
  40701c:	ins    DWORD PTR es:[edi],dx
  40701d:	shl    BYTE PTR [edi+eax*2+0xf],cl
  407021:	inc    esp
  407022:	leave  
  407023:	fdivr  st,st(1)
  407025:	cli    
  407026:	dec    ebx
  407027:	lods   al,BYTE PTR ds:[esi]
  407028:	lahf   
  407029:	loope  0x406fc7
  40702b:	mov    ds:0x874b09e4,eax
  407030:	and    eax,esp
  407032:	xchg   edi,eax
  407033:	dec    ebx
  407034:	sbb    ch,BYTE PTR [esi-0x6b5302c2]
  40703a:	bound  esi,QWORD PTR [ecx]
  40703c:	push   0xed8048a0
  407041:	mov    cl,dl
  407043:	fiadd  DWORD PTR ds:0xe0d38c69
  407049:	or     DWORD PTR [esi+0x355d61d8],ecx
  40704f:	xchg   esi,eax
  407050:	fnstcw WORD PTR [ebp-0x18]
  407053:	push   edx
  407054:	adc    dh,BYTE PTR [edx-0x18]
  407057:	in     eax,dx
  407058:	add    eax,0xf5606676
  40705d:	sbb    eax,0xa153fbb1
  407062:	out    dx,eax
  407063:	out    0xf6,al
  407065:	xchg   esi,eax
  407066:	fnstsw WORD PTR [eax-0x50acae21]
  40706c:	repnz sub BYTE PTR [esi],0xf6
  407070:	jae    0x407020
  407072:	jbe    0x4070cf
  407074:	push   ebp
  407075:	xchg   edx,eax
  407076:	dec    edx
  407077:	push   ds
  407078:	jp     0x4070f6
  40707a:	inc    esi
  40707b:	add    al,BYTE PTR [ebx-0x18]
  40707e:	(bad)  
  40707f:	pop    ecx
  407080:	fs dec ebx
  407082:	inc    edx
  407083:	push   edi
  407084:	sbb    esi,DWORD PTR ds:0x28d5602e
  40708a:	xlat   BYTE PTR ds:[ebx]
  40708b:	fisubr WORD PTR [edi+eiz*1]
  40708e:	xor    al,0x80
  407090:	mov    dl,0x17
  407092:	test   ebp,ebx
  407094:	xor    al,0xaa
  407096:	fldcw  WORD PTR [ecx-0x7]
  407099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40709a:	mov    ds:0xb02d876,eax
  40709f:	jmp    0x4070d0
  4070a1:	data16 jo 0x4070da
  4070a4:	push   0x48835a28
  4070a9:	push   es
  4070aa:	inc    eax
  4070ab:	pop    es
  4070ac:	or     edi,DWORD PTR [eax+edx*4-0x16]
  4070b0:	dec    edx
  4070b1:	cmc    
  4070b2:	dec    ebx
  4070b3:	dec    edx
  4070b4:	aam    0xd8
  4070b6:	pop    edi
  4070b7:	sbb    bl,cl
  4070b9:	jmp    0x407088
  4070bb:	mov    edx,0x10913b68
  4070c0:	mov    dh,0xda
  4070c2:	std    
  4070c3:	add    al,0xc7
  4070c5:	pop    esp
  4070c6:	js     0x4070e1
  4070c8:	popa   
  4070c9:	repz xor al,0x48
  4070cc:	mov    al,0x95
  4070ce:	xor    DWORD PTR [ebp-0x563327a3],esp
  4070d4:	cmp    esp,0x53
  4070d7:	pop    ecx
  4070d8:	or     al,0x8b
  4070da:	ret    
  4070db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070dc:	into   
  4070dd:	push   eax
  4070de:	fsub   DWORD PTR [eax]
  4070e0:	clc    
  4070e1:	int    0x14
  4070e3:	scas   eax,DWORD PTR es:[edi]
  4070e4:	fldenv [eax-0x191834c3]
  4070ea:	fbld   TBYTE PTR [edi+0x66611032]
  4070f0:	xchg   esi,eax
  4070f1:	ins    BYTE PTR es:[edi],dx
  4070f2:	ins    WORD PTR es:[edi],dx
  4070f4:	or     bl,BYTE PTR [eax+0x52]
  4070f7:	and    eax,0x2a2490e2
  4070fc:	adc    eax,0x5900dac0
  407101:	and    ebp,esi
  407103:	out    0x5c,eax
  407105:	or     cl,BYTE PTR [eax+esi*2-0x29]
  407109:	push   ebx
  40710a:	xor    esi,edx
  40710c:	pusha  
  40710d:	(bad)  
  40710e:	and    bl,BYTE PTR [ecx-0x55]
  407111:	push   eax
  407112:	sbb    edx,eax
  407114:	jle    0x4070fb
  407116:	shl    BYTE PTR [ebp+0x6b],cl
  407119:	arpl   WORD PTR [esi+ebx*1],cx
  40711c:	inc    ecx
  40711d:	xchg   edi,eax
  40711e:	int    0x83
  407120:	(bad)  
  407121:	test   eax,0xfd771d0d
  407126:	int3   
  407127:	mov    ds,WORD PTR [edi]
  407129:	repnz push ebp
  40712b:	cmp    eax,0x4f9666a3
  407130:	xchg   ecx,eax
  407131:	pop    edi
  407132:	cmp    bl,bl
  407134:	(bad)  
  407135:	(bad)  
  407136:	jg     0x407105
  407138:	inc    esp
  407139:	mov    ebx,0x7cc7736b
  40713e:	ss pop eax
  407140:	popa   
  407141:	mov    ecx,DWORD PTR [ebx-0x7b]
  407144:	push   esi
  407145:	call   0x7f869f4f
  40714a:	loope  0x40712d
  40714c:	aam    0xa4
  40714e:	sub    edi,DWORD PTR [ebp-0x5d88186a]
  407154:	stc    
  407155:	cli    
  407156:	clc    
  407157:	jo     0x407135
  407159:	mov    eax,ds:0x4815b8e6
  40715e:	or     DWORD PTR ds:0xfb2afb5,esi
  407164:	xor    eax,0xa3502fc1
  407169:	sbb    BYTE PTR [edx-0x618f91ef],ah
  40716f:	cwde   
  407170:	jo     0x407174
  407172:	mov    esi,0x37bc8de0
  407177:	(bad)
  40717c:	sar    DWORD PTR [edx-0x48],0xe8
  407180:	xlat   BYTE PTR ds:[ebx]
  407181:	mov    dh,BYTE PTR [edx+edi*4+0x20]
  407185:	add    BYTE PTR [ebx+0x41be07b6],ah
  40718b:	mov    edi,0x65d99893
  407190:	mov    edx,0x33e167e4
  407195:	lahf   
  407196:	sbb    ecx,DWORD PTR [ebx+edi*4]
  407199:	xor    eax,0xe3dac17c
  40719e:	or     al,0x9c
  4071a0:	cmc    
  4071a1:	das    
  4071a2:	mov    cl,0xbe
  4071a4:	cmc    
  4071a5:	jno    0x407221
  4071a7:	sub    DWORD PTR [eax],edx
  4071a9:	jmp    0xc2d29eb
  4071ae:	ins    BYTE PTR es:[edi],dx
  4071af:	jecxz  0x407202
  4071b1:	pop    edi
  4071b2:	jbe    0x407191
  4071b4:	dec    ebp
  4071b6:	and    ebx,DWORD PTR [esi-0x10]
  4071b9:	mov    eax,ds:0x510bec61
  4071be:	in     eax,dx
  4071bf:	jo     0x407170
  4071c1:	(bad)  
  4071c2:	(bad)  
  4071c3:	mov    cl,0x57
  4071c5:	das    
  4071c6:	push   eax
  4071c7:	mov    DWORD PTR [ecx],ebx
  4071c9:	xor    BYTE PTR [ebx],al
  4071cb:	popa   
  4071cc:	imul   esi,DWORD PTR [ebp-0x3c7f5b9f],0xfffffffc
  4071d3:	push   ebx
  4071d4:	pusha  
  4071d5:	mul    DWORD PTR [edx+0x57]
  4071d8:	fsubr  QWORD PTR [ebx-0x6d]
  4071db:	push   0x983eb5b7
  4071e0:	add    eax,0xfe487cc4
  4071e5:	mov    esi,ss
  4071e7:	jp     0x40721b
  4071e9:	or     al,0xaf
  4071eb:	fnstsw WORD PTR [edi+0x5b]
  4071ee:	push   edx
  4071ef:	add    al,0xdb
  4071f1:	jns    0x4071ae
  4071f3:	nop
  4071f4:	xchg   edx,eax
  4071f5:	lock jne 0x4071a5
  4071f8:	push   ecx
  4071f9:	outs   dx,BYTE PTR ds:[esi]
  4071fa:	push   ebp
  4071fb:	das    
  4071fc:	aad    0x2e
  4071fe:	jno    0x407184
  407200:	popf   
  407201:	jnp    0x407198
  407203:	mov    ah,ch
  407205:	sbb    al,0x9
  407207:	xchg   ebp,eax
  407208:	(bad)  
  40720a:	leave  
  40720b:	inc    ebx
  40720c:	outs   dx,DWORD PTR ds:[esi]
  40720d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40720e:	shl    DWORD PTR [edi],0xe6
  407211:	add    DWORD PTR [esi-0x6c373050],0x25
  407218:	call   0x267b1102
  40721d:	adc    eax,0x64d016e5
  407222:	rcr    BYTE PTR [edx+0x51],0xd6
  407226:	mov    WORD PTR [edi-0x35],ds
  407229:	mov    esp,0x24536c22
  40722e:	xchg   ebp,eax
  40722f:	pop    es
  407230:	jecxz  0x4071ed
  407232:	adc    ecx,esp
  407234:	add    al,0xdb
  407236:	pop    edx
  407237:	out    dx,eax
  407238:	lahf   
  407239:	or     BYTE PTR [ecx+edi*1-0x13],bl
  40723d:	outs   dx,DWORD PTR ds:[esi]
  40723e:	outs   dx,DWORD PTR ds:[esi]
  40723f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407240:	inc    esp
  407241:	stc    
  407242:	jge    0x407243
  407244:	jmp    0xaf17cba8
  407249:	dec    esp
  40724a:	or     BYTE PTR [edi-0x2e],dl
  40724d:	mov    dl,0x47
  40724f:	jle    0x407263
  407251:	ss clc 
  407253:	mov    ds:0x75a40a0b,eax
  407258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407259:	xchg   edi,eax
  40725a:	mov    bl,0x50
  40725c:	xchg   edx,eax
  40725d:	sbb    al,0x55
  40725f:	push   eax
  407260:	mov    eax,ds:0xf6b54e89
  407265:	(bad)  
  407266:	stos   DWORD PTR es:[edi],eax
  407267:	hlt    
  407268:	neg    ch
  40726a:	sub    DWORD PTR [edx],ebx
  40726c:	jo     0x407249
  40726e:	aaa    
  40726f:	jno    0x4072c3
  407271:	fsub   DWORD PTR [edx]
  407273:	cmp    bh,cl
  407275:	fdivr  DWORD PTR [ebp-0xad7b623]
  40727b:	add    bh,bh
  40727d:	imul   ebp,DWORD PTR ds:[edi-0x58],0xc5c2b63e
  407285:	lock pop esp
  407287:	mov    cl,0x23
  407289:	mov    edx,0x6c0d0b9b
  40728e:	cli    
  40728f:	sbb    ah,BYTE PTR [ebx-0x7eca5e0f]
  407295:	add    DWORD PTR [eax-0x7a],esi
  407298:	mov    edx,DWORD PTR [ebx]
  40729a:	out    dx,eax
  40729b:	fsub   st(5),st
  40729d:	test   ah,cl
  40729f:	je     0x407281
  4072a1:	mov    ebp,0xab6406c9
  4072a6:	setns  BYTE PTR [esi]
  4072a9:	mov    bh,0x7c
  4072ab:	mov    ebp,DWORD PTR [eax-0x525de763]
  4072b1:	ret    
  4072b2:	rcl    BYTE PTR [ecx],0xaa
  4072b5:	ror    DWORD PTR [esi],cl
  4072b7:	neg    eax
  4072b9:	xchg   esi,eax
  4072ba:	jo     0x40728e
  4072bc:	xchg   edi,eax
  4072bd:	outs   dx,BYTE PTR ds:[esi]
  4072be:	fild   WORD PTR [edi]
  4072c0:	clc    
  4072c1:	stos   DWORD PTR es:[edi],eax
  4072c2:	mov    bh,0x31
  4072c4:	pop    es
  4072c5:	div    BYTE PTR [edi-0x5f]
  4072c8:	in     al,0x36
  4072ca:	and    BYTE PTR [ebx],bl
  4072cc:	arpl   WORD PTR [edi+0x77],bx
  4072cf:	fs popf 
  4072d1:	sbb    DWORD PTR [edi-0x2e],ecx
  4072d4:	out    0x4a,eax
  4072d6:	pop    esp
  4072d7:	gs pop esi
  4072d9:	add    al,0x11
  4072db:	lea    edx,[ecx]
  4072dd:	out    dx,al
  4072de:	rcl    ebx,1
  4072e0:	shld   ebp,eax,0xf6
  4072e4:	int3   
  4072e5:	jl     0x407271
  4072e7:	in     eax,0x33
  4072e9:	mov    eax,0xbea6d317
  4072ee:	jp     0x407365
  4072f0:	adc    eax,0xd994a599
  4072f5:	jne    0x4072c5
  4072f7:	sub    al,0x86
  4072f9:	retf   
  4072fa:	arpl   WORD PTR [ecx-0x6b],ax
  4072fd:	sbb    DWORD PTR [ecx+0x71ed799a],0xf124408f
  407307:	mov    cl,0x30
  407309:	fs lock xchg ecx,eax
  40730c:	inc    edx
  40730d:	loope  0x40737b
  40730f:	jecxz  0x40738e
  407311:	out    0xd3,al
  407313:	sbb    DWORD PTR [ebp+0x4b],0xd6afa1ce
  40731a:	gs mov ebx,0x4eac2704
  407320:	cmp    al,0x9c
  407322:	xchg   esi,eax
  407323:	and    esi,DWORD PTR [esi-0x26203feb]
  407329:	sbb    eax,0xa1c0204d
  40732e:	add    bl,ch
  407330:	stc    
  407331:	jg     0x40733c
  407333:	enter  0xfe35,0xaa
  407337:	ror    BYTE PTR [edi],1
  407339:	and    ecx,ebp
  40733b:	dec    ebx
  40733c:	or     ah,BYTE PTR [edx+0x1e2838dc]
  407342:	fwait
  407343:	push   ecx
  407344:	lahf   
  407345:	jmp    0x3697f650
  40734a:	retf   
  40734b:	mov    ds:0xa4370edf,eax
  407350:	mov    ecx,gs
  407352:	js     0x40739e
  407354:	sub    DWORD PTR [esi+0x60e4f19c],ebx
  40735a:	xchg   ebp,eax
  40735b:	test   DWORD PTR [esp+ebx*8+0x38959b06],ecx
  407362:	and    dl,BYTE PTR [ebp+0x246199d3]
  407368:	push   ebp
  407369:	cli    
  40736a:	dec    esi
  40736b:	adc    dl,bl
  40736d:	inc    ebp
  40736e:	ror    BYTE PTR [esi-0x6ec220cf],1
  407374:	or     dh,BYTE PTR [edi+0x7]
  407377:	loope  0x4073c4
  407379:	test   DWORD PTR [edx+edi*8+0x3a],edi
  40737d:	push   ebp
  40737e:	mov    dh,0x61
  407380:	call   0x4365:0x1f036697
  407387:	mov    eax,0x41b8d7db
  40738c:	inc    esi
  40738d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40738e:	fwait
  40738f:	daa    
  407390:	push   cs
  407391:	(bad)  
  407393:	jmp    0x407375
  407395:	es (bad) 
  407397:	jmp    0x4073a3
  407399:	pop    ecx
  40739a:	or     eax,0x8903c422
  40739f:	mov    esi,0x21e8069
  4073a4:	gs ds call 0x54a7:0xea35aab2
  4073ad:	aaa    
  4073ae:	lods   eax,DWORD PTR ds:[esi]
  4073af:	sbb    eax,0xd3d51e2d
  4073b4:	mov    edx,0x39badbe
  4073b9:	mov    ds:0x4d013407,eax
  4073be:	sbb    edx,DWORD PTR [edx]
  4073c0:	aaa    
  4073c1:	sti    
  4073c2:	push   esi
  4073c3:	(bad)
  4073c6:	inc    ebx
  4073c7:	jb     0x407409
  4073c9:	xchg   DWORD PTR [esi-0x40],edx
  4073cc:	(bad)  
  4073cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ce:	stos   DWORD PTR es:[edi],eax
  4073cf:	jo     0x407365
  4073d1:	pop    ss
  4073d2:	mov    al,ds:0xb9af09cf
  4073d7:	and    cl,BYTE PTR [esi+eiz*4]
  4073da:	das    
  4073db:	aas    
  4073dc:	clc    
  4073dd:	je     0x407379
  4073df:	mov    al,0x94
  4073e1:	fwait
  4073e2:	mov    dh,0x22
  4073e4:	(bad)
  4073e7:	mov    ds:0x271aa70,al
  4073ec:	test   BYTE PTR [esi-0x16],cl
  4073ef:	scas   eax,DWORD PTR es:[edi]
  4073f0:	push   edx
  4073f1:	lods   eax,DWORD PTR ds:[esi]
  4073f2:	pop    ebp
  4073f3:	(bad)
  4073f7:	xchg   ecx,eax
  4073f8:	mov    fs,WORD PTR [ebp+0x7c]
  4073fb:	push   ecx
  4073fc:	and    al,BYTE PTR [ecx-0x650bf392]
  407402:	or     ch,dl
  407404:	xor    BYTE PTR [ecx],ch
  407406:	jmp    0x407423
  407408:	sub    BYTE PTR [edi+0x37],ah
  40740b:	adc    ch,al
  40740d:	pop    eax
  40740e:	inc    ecx
  40740f:	dec    esp
  407410:	pop    ecx
  407411:	mov    BYTE PTR [eax+0x16903c08],ch
  407417:	xchg   BYTE PTR [edi-0x76ac3491],bl
  40741d:	dec    esi
  40741e:	jge    0x4073d3
  407420:	xor    bl,BYTE PTR [ebp+0x68]
  407423:	jne    0x4073f7
  407425:	int3   
  407426:	pop    eax
  407427:	xor    BYTE PTR [esi],0x38
  40742a:	jb     0x4073cb
  40742c:	out    0x9,al
  40742e:	out    0x65,eax
  407430:	and    al,0xd7
  407432:	shl    BYTE PTR [ebp-0x6557a207],1
  407438:	xlat   BYTE PTR ds:[ebx]
  407439:	scas   al,BYTE PTR es:[edi]
  40743a:	or     ebp,DWORD PTR [ebp+eax*2-0x80]
  40743e:	xchg   DWORD PTR [edi+0x694b296b],edx
  407444:	and    ecx,esp
  407446:	dec    ebx
  407447:	call   0xd8f1:0x9508534f
  40744e:	mul    BYTE PTR [edx]
  407450:	mov    dh,0x9c
  407452:	inc    ebx
  407453:	or     al,BYTE PTR [ebx+0xa]
  407456:	sti    
  407457:	mov    cs,WORD PTR [esi]
  407459:	aad    0x0
  40745b:	fcom   DWORD PTR ss:[esi+0x5461fe5a]
  407462:	lods   al,BYTE PTR ds:[esi]
  407463:	stos   DWORD PTR es:[edi],eax
  407464:	test   eax,0xb73e1925
  407469:	enter  0xc7c8,0xc3
  40746d:	data16 mov bl,0xb7
  407470:	sbb    edi,DWORD PTR [ebx+ebp*2-0x5]
  407474:	push   0x5a8960c3
  407479:	in     al,dx
  40747a:	in     al,0x7e
  40747c:	cwde   
  40747d:	sti    
  40747e:	sbb    eax,0x5d9da3e7
  407483:	dec    ebp
  407484:	xor    eax,0x63fa2af8
  407489:	xchg   esp,eax
  40748a:	cmc    
  40748b:	adc    al,0x61
  40748d:	and    eax,0x357e6350
  407492:	dec    esp
  407493:	xchg   edi,eax
  407494:	into   
  407495:	int    0x8f
  407497:	outs   dx,DWORD PTR ds:[esi]
  407498:	push   0x3
  40749a:	ss pop edx
  40749c:	sar    edx,0xb6
  40749f:	mov    esp,0xe4c51e5f
  4074a4:	cmp    DWORD PTR [eax+0x55],ebp
  4074a7:	inc    ebx
  4074a8:	dec    ebx
  4074a9:	test   al,0x46
  4074ab:	fnstcw WORD PTR [esi]
  4074ad:	push   edi
  4074ae:	dec    edx
  4074af:	xchg   ecx,eax
  4074b0:	lods   eax,DWORD PTR ss:[esi]
  4074b2:	es out 0xfe,eax
  4074b5:	inc    ebx
  4074b6:	gs mov ebp,0x7c532b15
  4074bc:	and    al,0xf7
  4074be:	sub    al,0x83
  4074c0:	out    0x17,al
  4074c2:	jae    0x4074be
  4074c4:	push   esi
  4074c5:	inc    ebx
  4074c6:	in     al,0xdc
  4074c8:	loope  0x4074cd
  4074ca:	sbb    bl,dh
  4074cc:	xchg   edx,eax
  4074cd:	mov    ecx,0xef5c413f
  4074d2:	xor    ebp,eax
  4074d4:	jae    0x4074ac
  4074d6:	dec    ebp
  4074d7:	and    dh,al
  4074d9:	mov    ds:0xb7129e,eax
  4074de:	(bad)  
  4074df:	jne    0x4074cf
  4074e1:	test   BYTE PTR [ecx],ah
  4074e3:	enter  0xe853,0xe7
  4074e7:	shl    BYTE PTR [ecx-0x5f741e1a],1
  4074ed:	sub    BYTE PTR [eax-0x7dc5423f],al
  4074f3:	mov    dh,0xb6
  4074f5:	sti    
  4074f6:	gs iret 
  4074f8:	inc    ebx
  4074f9:	pusha  
  4074fa:	push   0xffffff9c
  4074fc:	cld    
  4074fd:	mov    bh,0x8b
  4074ff:	push   ecx
  407500:	fidiv  DWORD PTR [edx+edi*2]
  407503:	lahf   
  407504:	les    ebp,FWORD PTR [esi+0x76]
  407507:	pop    esi
  407508:	sar    eax,1
  40750a:	sub    DWORD PTR [esp+eax*4+0x55],edi
  40750e:	int    0xff
  407510:	pop    eax
  407511:	and    DWORD PTR [edi+eax*2+0x44588655],ecx
  407518:	lea    ecx,[esi-0x4b]
  40751b:	mov    ebx,0x2663a3d
  407520:	stc    
  407521:	adc    ch,al
  407523:	ficom  WORD PTR [eax]
  407525:	lods   al,BYTE PTR ds:[esi]
  407526:	push   esi
  407527:	and    DWORD PTR [ecx],esp
  407529:	inc    ebx
  40752a:	loopne 0x4074c1
  40752c:	pop    edi
  40752d:	loope  0x4074f2
  40752f:	mov    ch,0x51
  407531:	push   eax
  407532:	jo     0x4074f4
  407534:	jge    0x407545
  407536:	fstp   TBYTE PTR [edi]
  407538:	imul   ebx,DWORD PTR [ecx],0x96ec1b31
  40753e:	push   ebx
  40753f:	adc    al,0xf7
  407541:	push   edx
  407542:	push   ecx
  407543:	pusha  
  407544:	fimul  WORD PTR [ecx]
  407546:	lahf   
  407547:	dec    edi
  407548:	adc    eax,0x59e54224
  40754d:	mov    cl,0xdb
  40754f:	push   es
  407550:	inc    esp
  407551:	cli    
  407552:	xlat   BYTE PTR ds:[ebx]
  407553:	int3   
  407554:	call   0xb2f27ef5
  407559:	orps   xmm1,XMMWORD PTR [ecx]
  40755c:	sar    DWORD PTR [ecx-0x69a929cf],cl
  407562:	cdq    
  407563:	pop    esp
  407564:	xor    BYTE PTR [eax+0x65],0x47
  407568:	mov    dh,0xa0
  40756a:	dec    edi
  40756b:	jae    0x407577
  40756d:	shl    DWORD PTR [eax],1
  40756f:	jmp    0x407592
  407571:	cmp    eax,0x2857fb82
  407576:	jnp    0x407533
  407578:	repz mul BYTE PTR [ecx+0x2027a4b3]
  40757f:	or     cl,al
  407581:	adc    BYTE PTR ds:[ebx],ch
  407584:	cmp    ch,dh
  407586:	popf   
  407587:	pop    edi
  407588:	xor    ah,BYTE PTR [edx-0x21]
  40758b:	lods   al,BYTE PTR ds:[esi]
  40758c:	cwde   
  40758d:	adc    eax,0x5b83d32
  407592:	mov    DWORD PTR [edx+edx*1-0x1170aa2e],esi
  407599:	jmp    0xbceb:0x336e565c
  4075a0:	mov    ecx,DWORD PTR [esi+edi*1-0xe]
  4075a4:	or     al,0x85
  4075a6:	sbb    dl,ah
  4075a8:	xor    eax,0x2b9494a8
  4075ad:	push   edx
  4075ae:	cwde   
  4075af:	push   edi
  4075b0:	popa   
  4075b1:	gs jnp 0x4075bf
  4075b4:	mov    WORD PTR [edi+0x1302c206],es
  4075ba:	push   edx
  4075bb:	sub    al,0x1
  4075bd:	neg    DWORD PTR [edx+0x7fc213b9]
  4075c3:	sub    al,0xbf
  4075c5:	jge    0x407576
  4075c7:	bound  esp,QWORD PTR [ebp-0x71]
  4075ca:	test   eax,0x80f6dbf3
  4075cf:	inc    edi
  4075d0:	xor    BYTE PTR [esp+ebp*4-0x16],0x6a
  4075d5:	adc    al,cl
  4075d7:	adc    ebx,DWORD PTR [edi+ebx*4+0xe]
  4075db:	jne    0x407658
  4075dd:	or     eax,edx
  4075df:	inc    edi
  4075e0:	push   esp
  4075e1:	push   es
  4075e2:	xchg   edi,eax
  4075e3:	sbb    al,0x9c
  4075e5:	and    al,0x6f
  4075e7:	mov    dh,0x33
  4075e9:	sub    eax,0x4a1252b0
  4075ee:	test   BYTE PTR [eax+0x4f],ch
  4075f1:	cmp    ah,BYTE PTR [ebp+0x1f4ad378]
  4075f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f8:	add    eax,0x17b61e07
  4075fd:	data16 lahf 
  4075ff:	into   
  407600:	repz jmp 0x64f33d5e
  407606:	jae    0x4075ae
  407608:	(bad)  
  40760a:	loop   0x407684
  40760c:	loopne 0x407661
  40760e:	mov    ds:0xc32bf558,al
  407613:	push   edx
  407614:	cmp    cl,0x70
  407617:	sti    
  407618:	jo     0x4075f0
  40761a:	inc    eax
  40761b:	or     ch,BYTE PTR [edx]
  40761d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761e:	sub    DWORD PTR [ebx],esi
  407620:	inc    esp
  407621:	out    dx,eax
  407622:	das    
  407623:	frstor [eax]
  407625:	jg     0x4075d7
  407627:	scas   eax,DWORD PTR es:[edi]
  407628:	cmp    ebx,DWORD PTR [eax-0x4e]
  40762b:	push   0x7c
  40762d:	inc    edx
  40762e:	pop    ds
  40762f:	mov    ?,WORD PTR ds:0x50269259
  407635:	(bad)  
  407636:	pop    ss
  407637:	adc    DWORD PTR [edx],ebp
  407639:	push   esp
  40763a:	jno    0x40766f
  40763c:	call   0xd77f:0xee945e9d
  407643:	inc    edi
  407644:	aam    0xd0
  407646:	add    al,0x7f
  407648:	jnp    0x407695
  40764a:	sbb    BYTE PTR [esi-0x73892fcb],0x3a
  407651:	aam    0xdb
  407653:	jns    0x4076b1
  407655:	add    bl,BYTE PTR [ebx+0x38]
  407658:	aam    0xd3
  40765a:	data16 fadd QWORD PTR [ebp+0x1b]
  40765e:	xor    DWORD PTR [eax+0x28],esp
  407661:	int    0x22
  407663:	nop
  407664:	pop    ebp
  407665:	jg     0x407623
  407667:	addr16 xchg esp,eax
  407669:	fiadd  DWORD PTR [esi-0x57]
  40766c:	je     0x4075ff
  40766e:	jmp    0x40760a
  407670:	(bad)  
  407671:	retf   
  407672:	mov    eax,0xc69307be
  407677:	dec    ecx
  407678:	jns    0x4076d7
  40767a:	pop    ebp
  40767b:	add    BYTE PTR [ebx+ebx*1-0x53b826bc],dh
  407682:	aam    0xeb
  407684:	les    ecx,FWORD PTR [esi+ebx*1+0x1f5f7f26]
  40768b:	addr16 ss in al,0x43
  40768f:	fisub  WORD PTR [ebp+0x1c85067e]
  407695:	repnz adc BYTE PTR [ecx+0x23],ch
  407699:	inc    esp
  40769a:	out    0xfd,eax
  40769c:	xchg   DWORD PTR [edx-0x1f],esi
  40769f:	dec    eax
  4076a0:	adc    eax,0x1ed344fd
  4076a5:	pop    esi
  4076a6:	jmp    0x98b42ada
  4076ab:	xlat   BYTE PTR ds:[ebx]
  4076ac:	in     al,0x5e
  4076ae:	neg    esp
  4076b0:	inc    ebx
  4076b1:	xchg   BYTE PTR [ecx-0x2b],bh
  4076b4:	bound  edx,QWORD PTR ds:0x3d1afc40
  4076ba:	inc    ebp
  4076bb:	stos   BYTE PTR es:[edi],al
  4076bc:	outs   dx,BYTE PTR ds:[esi]
  4076bd:	adc    al,0x8e
  4076bf:	inc    ebx
  4076c0:	ret    
  4076c1:	ret    0xfbf9
  4076c4:	rcl    BYTE PTR [eax],1
  4076c6:	sbb    ch,BYTE PTR [eax-0x6]
  4076c9:	loope  0x407690
  4076cb:	cs ins BYTE PTR es:[edi],dx
  4076cd:	adc    eax,0xc1ef8684
  4076d2:	ret    0x9580
  4076d5:	add    BYTE PTR [eax],cl
  4076d7:	adc    ebx,DWORD PTR [ecx-0x47b92c3]
  4076dd:	sub    al,0xde
  4076df:	mov    dl,ah
  4076e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076e2:	add    BYTE PTR [edx+0xef769ed],dh
  4076e8:	and    BYTE PTR [edx],ch
  4076ea:	out    dx,al
  4076eb:	repz mov WORD PTR cs:[eax+0xb],gs
  4076f0:	push   esi
  4076f1:	inc    esp
  4076f2:	sbb    eax,DWORD PTR [ecx-0x37]
  4076f5:	sbb    bl,BYTE PTR [edx]
  4076f7:	adc    al,0xb8
  4076f9:	stc    
  4076fa:	dec    ebp
  4076fb:	cmc    
  4076fc:	and    eax,0x887c8cb7
  407701:	cwde   
  407702:	pop    edi
  407703:	loope  0x4076d9
  407705:	mov    WORD PTR [eax+0x3648319],ss
  40770b:	xor    al,0x37
  40770d:	jge    0x40772c
  40770f:	stos   DWORD PTR es:[edi],eax
  407710:	popf   
  407711:	ins    BYTE PTR es:[edi],dx
  407712:	adc    DWORD PTR [esi+ebx*4],esp
  407715:	dec    ecx
  407716:	sahf   
  407717:	retf   0x5b10
  40771a:	mov    dl,0x8
  40771c:	pop    es
  40771d:	sbb    BYTE PTR [ecx+0x15a91cd8],al
  407723:	inc    ebp
  407724:	ror    DWORD PTR [ecx+0x6ba826ad],0xa1
  40772b:	jle    0x4076fa
  40772d:	icebp  
  40772e:	fucom  st(7)
  407730:	repz dec esp
  407732:	mov    BYTE PTR [ebx+0x13],0x67
  407736:	fild   WORD PTR [ebx]
  407738:	sahf   
  407739:	mov    ebx,esi
  40773b:	xchg   esp,eax
  40773c:	sub    DWORD PTR [edx],ebx
  40773e:	pop    ebp
  40773f:	adc    DWORD PTR [edi-0x2ff1b92f],edi
  407745:	popf   
  407746:	push   ss
  407747:	cs add al,0x4
  40774a:	imul   ecx,esp,0xffffff84
  40774d:	pop    esi
  40774e:	adc    BYTE PTR fs:[eax-0x1450666b],bh
  407755:	stc    
  407756:	mov    ebp,0x7441a02a
  40775b:	sub    ah,BYTE PTR [ecx+0x2f]
  40775e:	or     eax,0xdc0c851d
  407763:	mov    ds,WORD PTR [edi+0x3b56dcc6]
  407769:	sar    DWORD PTR [ebx+0xe566af3],cl
  40776f:	sahf   
  407770:	ds dec esi
  407772:	cmp    BYTE PTR [eax+0x71b1c02c],0xd6
  407779:	in     eax,0x78
  40777b:	push   es
  40777c:	scas   eax,DWORD PTR es:[edi]
  40777d:	mov    ch,ch
  40777f:	popa   
  407780:	mov    ebx,0x2238091f
  407785:	scas   eax,DWORD PTR es:[edi]
  407786:	or     BYTE PTR ds:0xfaf0540c,bh
  40778c:	std    
  40778d:	aas    
  40778e:	aas    
  40778f:	xchg   esp,eax
  407790:	sbb    al,0xd3
  407792:	inc    ebp
  407793:	pop    esp
  407794:	xor    edx,0xffffffbe
  407797:	ja     0x40771c
  407799:	repnz rcl DWORD PTR [edx],cl
  40779c:	jno    0x4077a9
  40779e:	add    al,0x31
  4077a0:	fnstcw WORD PTR [ebp+0x700ebd63]
  4077a6:	push   cs
  4077a7:	adc    al,0x78
  4077a9:	jg     0x407771
  4077ab:	jmp    0x13ce:0x888acaa2
  4077b2:	in     eax,dx
  4077b3:	movd   DWORD PTR [edx+0x4c],mm3
  4077b7:	aas    
  4077b8:	xchg   esi,eax
  4077b9:	sbb    edx,eax
  4077bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077bc:	or     cl,BYTE PTR [edi+0x7b]
  4077bf:	sub    esp,DWORD PTR [esi]
  4077c1:	retf   0x1d6e
  4077c4:	in     al,0x1c
  4077c6:	pop    edi
  4077c7:	ins    DWORD PTR es:[edi],dx
  4077c8:	lods   eax,DWORD PTR ds:[esi]
  4077c9:	out    0x6d,eax
  4077cb:	fsub   st(5),st
  4077cd:	sub    edx,edx
  4077cf:	push   ss
  4077d0:	xor    al,ch
  4077d2:	pop    es
  4077d3:	jecxz  0x40780e
  4077d5:	pop    edi
  4077d6:	inc    eax
  4077d7:	repz inc BYTE PTR [edx+0x46]
  4077db:	sahf   
  4077dc:	push   DWORD PTR cs:[edi+0x3]
  4077e0:	xchg   ebp,eax
  4077e1:	call   0xab9214ac
  4077e6:	lahf   
  4077e7:	xor    al,cl
  4077e9:	mov    ds:0x8a2c3b1f,eax
  4077ee:	stc    
  4077ef:	mov    ecx,esi
  4077f1:	repz cmp al,0xa6
  4077f4:	ffreep st(3)
  4077f6:	outs   dx,BYTE PTR ds:[esi]
  4077f7:	(bad)  
  4077f8:	sub    DWORD PTR [edi-0x64457d7f],ebx
  4077fe:	ret    
  4077ff:	inc    edx
  407800:	rol    BYTE PTR [edx-0x45],cl
  407803:	mov    esi,0x7bd827ff
  407808:	sbb    BYTE PTR [edi-0x54c9f147],dl
  40780e:	les    ebp,FWORD PTR [edi]
  407810:	ror    BYTE PTR [ebp+0x2d4b34ee],cl
  407816:	add    BYTE PTR [edx-0x37e3e85c],ch
  40781c:	bnd ja 0x40784c
  40781f:	retf   
  407820:	mov    ch,0xb2
  407822:	jmp    0xdd3159a3
  407827:	loope  0x4077d4
  407829:	test   eax,0x7a1e6732
  40782e:	or     dh,dh
  407830:	popa   
  407831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407832:	popa   
  407833:	add    DWORD PTR [eax-0x54d0d141],eax
  407839:	ins    DWORD PTR es:[edi],dx
  40783a:	loope  0x4077c0
  40783c:	ss pop ebx
  40783e:	pop    esp
  40783f:	xor    edx,edi
  407841:	inc    edi
  407842:	cdq    
  407843:	imul   esi,DWORD PTR [edx+ecx*1],0x6bebad52
  40784a:	sub    esi,0xffffffba
  40784d:	inc    esi
  40784e:	mov    al,ds:0x25362287
  407853:	ja     0x407870
  407855:	mov    eax,ds:0x95fe30ec
  40785a:	and    ebp,eax
  40785c:	lods   al,BYTE PTR ds:[esi]
  40785d:	scas   eax,DWORD PTR es:[edi]
  40785e:	fimul  WORD PTR [eax+0x33]
  407861:	push   0xffffffce
  407863:	mov    eax,ds:0xf6c91e35
  407868:	je     0x40784d
  40786a:	in     eax,0xf4
  40786c:	lods   al,BYTE PTR ds:[esi]
  40786d:	ret    0x6a95
  407870:	xor    ebp,DWORD PTR [edi+0x28]
  407873:	jne    0x40782e
  407875:	xchg   DWORD PTR ds:0xbf5b82e,esi
  40787b:	inc    esp
  40787c:	or     cl,bh
  40787e:	lds    esi,FWORD PTR [ebx+0x22]
  407881:	and    eax,0xa0f52404
  407886:	jl     0x4078ac
  407888:	inc    edx
  407889:	push   0x143bb320
  40788e:	push   ecx
  40788f:	fwait
  407890:	jno    0x407899
  407892:	in     al,0x69
  407894:	fsubr  DWORD PTR [ebx-0x369a39bc]
  40789a:	les    edi,FWORD PTR [esi+0x7b]
  40789d:	add    ch,BYTE PTR [ecx]
  40789f:	cmp    eax,0x16128c46
  4078a4:	retf   0xd7fd
  4078a7:	sbb    edi,DWORD PTR [ecx-0x31]
  4078aa:	xor    eax,0x809d21c9
  4078af:	jmp    0x9d06:0x5dad109b
  4078b6:	lods   al,BYTE PTR ds:[esi]
  4078b7:	cmp    al,0xb4
  4078b9:	xchg   ebx,eax
  4078ba:	mov    edi,0x98f5ed0f
  4078bf:	push   esp
  4078c0:	inc    ecx
  4078c1:	add    eax,0xeb466c20
  4078c6:	es pusha 
  4078c8:	dec    esp
  4078c9:	dec    esi
  4078ca:	adc    al,0xf7
  4078cc:	cwde   
  4078cd:	outs   dx,DWORD PTR ds:[esi]
  4078ce:	cs push ecx
  4078d0:	pop    edx
  4078d1:	push   0x2ac4da6a
  4078d6:	jge    0x407913
  4078d8:	mov    bl,0xf5
  4078da:	lock pushf 
  4078dc:	fdiv   st(6),st
  4078de:	rcl    cl,1
  4078e0:	cwde   
  4078e1:	test   BYTE PTR [ebx+ecx*1],ah
  4078e4:	clc    
  4078e5:	sub    DWORD PTR [edx],eax
  4078e7:	sbb    BYTE PTR [ebp-0x1a103f6a],dl
  4078ed:	cmp    ch,bh
  4078ef:	cmp    al,ah
  4078f1:	into   
  4078f2:	adc    esp,eax
  4078f4:	fwait
  4078f5:	test   eax,0x2d0f6e88
  4078fa:	les    esp,FWORD PTR [ebx]
  4078fc:	add    DWORD PTR [eax+0x6f],ebp
  4078ff:	in     al,dx
  407900:	rcl    DWORD PTR [ecx-0x230ad9f],cl
  407906:	adc    eax,DWORD PTR cs:[ecx-0x60]
  40790a:	arpl   WORD PTR [ebx+0x38],sp
  40790d:	push   ebx
  40790e:	repnz fistp DWORD PTR [edx+0x13249292]
  407915:	emms   
  407917:	mov    edi,0x519def36
  40791c:	cmp    al,BYTE PTR ds:0xef394de4
  407922:	mov    esi,0xedf50c48
  407927:	dec    edi
  407928:	sub    edx,DWORD PTR [ecx-0x7a494d7e]
  40792e:	aad    0x48
  407930:	push   ds
  407931:	call   0x44137226
  407936:	sbb    DWORD PTR [esi],edx
  407938:	xchg   edx,eax
  407939:	cmp    eax,0x33c026f9
  40793e:	pop    esi
  40793f:	pusha  
  407940:	clc    
  407941:	retf   
  407942:	cld    
  407943:	and    ebp,DWORD PTR [ebp-0x21]
  407946:	ds nop
  407948:	cmp    ebp,0xffffffd0
  40794b:	test   DWORD PTR [ebx+0x36],0xe9e268f
  407952:	out    0x78,al
  407954:	mov    ebx,0x9b860429
  407959:	stc    
  40795a:	adc    al,0x1
  40795c:	cmp    eax,0x369f5718
  407961:	jae    0x4079c7
  407963:	adc    al,BYTE PTR [ebx+0x6]
  407966:	xlat   BYTE PTR ds:[ebx]
  407967:	and    bh,ch
  407969:	or     DWORD PTR [ebx],esi
  40796b:	adc    eax,0x8bfbd5be
  407970:	mov    ds:0xfed30732,al
  407975:	je     0x407992
  407977:	call   0x9aa1:0x68d5c64c
  40797e:	inc    eax
  40797f:	push   ds
  407980:	mov    edx,0x722c17fb
  407985:	xor    al,0xd4
  407987:	pop    ds
  407988:	sub    DWORD PTR [edi+0xc],ecx
  40798b:	lahf   
  40798c:	push   eax
  40798d:	mul    ebp
  40798f:	or     DWORD PTR [edi+0x13484525],esi
  407995:	cld    
  407996:	jbe    0x407945
  407998:	jae    0x407939
  40799a:	sub    ebx,edi
  40799c:	imul   esi,DWORD PTR [edx-0x4],0xb3d938db
  4079a3:	jecxz  0x40797a
  4079a5:	fwait
  4079a6:	shl    BYTE PTR [ebp+0x5271c6bf],0x3a
  4079ad:	rcl    DWORD PTR [ebp-0x73d137c4],cl
  4079b3:	outs   dx,DWORD PTR ds:[esi]
  4079b5:	or     ah,ah
  4079b7:	and    al,0xda
  4079b9:	lods   al,BYTE PTR ds:[esi]
  4079ba:	sbb    DWORD PTR [ecx-0x75],ecx
  4079bd:	jnp    0x4079b8
  4079bf:	pop    edi
  4079c0:	lea    edx,[edi]
  4079c2:	mul    DWORD PTR [ebx-0x68b5dabf]
  4079c8:	mov    dh,0x9a
  4079ca:	ss out dx,eax
  4079cc:	add    BYTE PTR [ecx],0xb7
  4079cf:	loopne 0x40798d
  4079d1:	popw   ss
  4079d3:	test   eax,0x32c06ecd
  4079d8:	mov    WORD PTR [bp+0x18],cs
  4079dc:	in     al,0xfb
  4079de:	outs   dx,BYTE PTR ds:[esi]
  4079df:	es push ss
  4079e1:	shr    DWORD PTR [eax],1
  4079e3:	add    al,0x31
  4079e5:	jp     0x407a09
  4079e7:	pop    ebx
  4079e8:	loop   0x4079db
  4079ea:	ss xor dl,al
  4079ed:	xchg   edx,eax
  4079ee:	xor    dh,dl
  4079f0:	loope  0x407a24
  4079f2:	sbb    ebp,esp
  4079f4:	mov    esp,0x230f32ed
  4079f9:	lock push ds
  4079fb:	push   0x692a7e87
  407a00:	mov    edx,DWORD PTR [ebp+0x1c]
  407a03:	mov    edx,0x2485c96e
  407a08:	outs   dx,DWORD PTR ds:[esi]
  407a09:	cmp    ecx,DWORD PTR ss:[edx+0x19]
  407a0d:	pop    esp
  407a0e:	(bad)  
  407a0f:	arpl   si,dx
  407a11:	inc    ecx
  407a12:	pop    edi
  407a13:	lods   eax,DWORD PTR ds:[esi]
  407a14:	int3   
  407a15:	pushf  
  407a16:	sbb    eax,0x25a26396
  407a1b:	sbb    al,0xed
  407a1d:	daa    
  407a1e:	pop    edi
  407a1f:	xchg   edx,eax
  407a20:	aas    
  407a21:	sbb    eax,0x1c7e4fdd
  407a26:	loop   0x407a06
  407a28:	int3   
  407a29:	aad    0xbb
  407a2b:	(bad)  
  407a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a2d:	xor    ch,BYTE PTR [edi+0x77]
  407a30:	rcr    esi,cl
  407a32:	add    BYTE PTR [edx],0x16
  407a35:	mov    ebx,0xf5aedfd7
  407a3a:	outs   dx,BYTE PTR ds:[esi]
  407a3b:	pop    ecx
  407a3c:	and    esi,edi
  407a3e:	jns    0x407a52
  407a40:	sahf   
  407a41:	lea    edx,[eax+0x74]
  407a44:	fwait
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xbc3b5807
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b36:	bound  ebp,QWORD PTR [ebx-0x6a9ebb3]
  407b3c:	into   
  407b3d:	inc    ecx
  407b3e:	mov    esp,gs
  407b40:	imul   esi,edx,0xffffff81
  407b43:	pop    eax
  407b44:	ret    0x18b1
  407b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b48:	icebp  
  407b49:	sbb    BYTE PTR [eax],bh
  407b4b:	xor    al,0xab
  407b4d:	dec    esi
  407b4e:	loopne 0x407b01
  407b50:	fisubr DWORD PTR [edi+0x5e]
  407b53:	xchg   esi,eax
  407b54:	fdivrp st(7),st
  407b56:	in     eax,dx
  407b57:	fstp   QWORD PTR [esi]
  407b59:	out    0x80,eax
  407b5b:	(bad)  [ebx-0xbf18755]
  407b61:	mov    bl,0x60
  407b63:	std    
  407b64:	std    
  407b65:	xlat   BYTE PTR ds:[ebx]
  407b66:	dec    ecx
  407b67:	xor    dh,bh
  407b69:	clc    
  407b6a:	cmp    DWORD PTR [ecx],edx
  407b6c:	mov    dh,0x96
  407b6e:	aad    0xa9
  407b70:	je     0x407b66
  407b72:	out    0x6e,eax
  407b74:	and    DWORD PTR [edx+0xd],ecx
  407b77:	sub    DWORD PTR [edx-0x11],ebp
  407b7a:	(bad)  
  407b7c:	xor    dl,dl
  407b7e:	mov    ecx,0x7e5c529e
  407b83:	stos   DWORD PTR es:[edi],eax
  407b84:	xchg   edx,ecx
  407b86:	push   esi
  407b87:	pop    edi
  407b88:	fxch   st(7)
  407b8a:	ret    
  407b8b:	pop    eax
  407b8c:	test   al,0xaf
  407b8e:	mov    ebp,0xdbe69d3
  407b93:	stos   DWORD PTR es:[edi],eax
  407b94:	adc    ecx,DWORD PTR [ebp+0x1f36a1b6]
  407b9a:	pop    edi
  407b9b:	push   ss
  407b9c:	adc    ecx,esi
  407b9e:	cmc    
  407b9f:	das    
  407ba0:	in     eax,dx
  407ba1:	jmp    0xaf7b84db
  407ba6:	ret    0x310d
  407ba9:	clc    
  407baa:	xchg   ebp,eax
  407bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bac:	sbb    ebp,DWORD PTR [ecx]
  407bae:	jmp    0x407b30
  407bb0:	push   ecx
  407bb1:	or     bl,0x8f
  407bb4:	fist   WORD PTR [eax+0x1a2f1232]
  407bba:	sbb    ebx,DWORD PTR [eax-0x3f9c2af2]
  407bc0:	stos   DWORD PTR es:[edi],eax
  407bc1:	mov    ds,WORD PTR [edi]
  407bc3:	pop    es
  407bc4:	add    DWORD PTR [eax+edi*1-0x49],edi
  407bc8:	xchg   DWORD PTR [ecx+edx*1],esp
  407bcb:	sahf   
  407bcc:	push   cs
  407bcd:	popf   
  407bce:	adc    DWORD PTR [edi-0x3e048d1d],edi
  407bd4:	xchg   esi,eax
  407bd5:	dec    edi
  407bd6:	js     0x407c45
  407bd8:	repnz pop edx
  407bda:	cmp    eax,0x9d70e2b1
  407bdf:	adc    BYTE PTR [eax-0x2353a99d],0x4f
  407be6:	fisub  WORD PTR [ebx-0x70]
  407be9:	(bad)  
  407bea:	sbb    DWORD PTR ss:[ebp+0x2a],ebx
  407bee:	mov    esp,0x516fa818
  407bf3:	fadd   QWORD PTR [eax-0x7c0b6b9d]
  407bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bfa:	jl     0x407bb1
  407bfc:	fdiv   QWORD PTR [esi]
  407bfe:	dec    esi
  407bff:	in     eax,0x84
  407c01:	xchg   ebp,eax
  407c02:	jle    0x407be1
  407c04:	cmp    ebx,0x3b0f9f4a
  407c0a:	retf   
  407c0b:	popa   
  407c0c:	mov    BYTE PTR [esi],0x9a
  407c0f:	ins    BYTE PTR es:[edi],dx
  407c10:	mov    esi,0x9e36eda8
  407c15:	add    ebx,DWORD PTR [ebx+0x5c]
  407c18:	dec    eax
  407c19:	pop    eax
  407c1a:	mov    ds:0x144d0271,al
  407c1f:	and    eax,DWORD PTR [ecx-0x68]
  407c22:	add    ebx,DWORD PTR [esp+eax*8-0x4a6a77c2]
  407c29:	test   DWORD PTR ds:0x522f1ad0,edi
  407c2f:	daa    
  407c30:	out    dx,al
  407c31:	mov    ebx,0xb1d3bee5
  407c36:	mov    ds:0xbe02841f,eax
  407c3b:	push   ss
  407c3c:	mov    al,al
  407c3e:	call   0x3225:0xa5c177a2
  407c45:	adc    eax,0x39178279
  407c4b:	pop    esp
  407c4c:	call   0x930:0x22995f24
  407c53:	enter  0x5f94,0xff
  407c57:	aam    0xc4
  407c59:	dec    esi
  407c5a:	sbb    DWORD PTR ds:0x4181971b,esp
  407c60:	loope  0x407ccb
  407c62:	jmp    0xa947:0x3afe4a59
  407c69:	jp     0x407ce7
  407c6b:	mov    WORD PTR [esi+0x4b],cs
  407c6e:	fisttp WORD PTR [esi+0x29]
  407c71:	imul   eax,ebx,0xffffffb6
  407c74:	rcr    DWORD PTR [edx+0x42],1
  407c77:	lea    esi,[esi+esi*2-0x5a]
  407c7b:	jl     0x407c3f
  407c7d:	cmp    al,bl
  407c7f:	jge    0x407c16
  407c81:	jecxz  0x407c25
  407c83:	xor    eax,0x3c42109a
  407c88:	cmp    BYTE PTR [eax+0x4cfe5b51],0x72
  407c8f:	mov    ecx,0xd489b7e4
  407c94:	add    DWORD PTR [ebx+eiz*2-0x563704de],edi
  407c9b:	aaa    
  407c9c:	int3   
  407c9d:	sbb    eax,0x633fb386
  407ca2:	fsubp  st(1),st
  407ca4:	xchg   ecx,eax
  407ca5:	mov    bl,0x8d
  407ca7:	cmp    al,0x85
  407ca9:	pop    eax
  407caa:	add    eax,DWORD PTR [ebx-0x6f]
  407cad:	adc    al,0x54
  407caf:	out    0xeb,al
  407cb1:	test   DWORD PTR [esi],0xb6d0788c
  407cb7:	scas   eax,DWORD PTR es:[edi]
  407cb8:	sub    ebx,DWORD PTR [edi-0x763af051]
  407cbe:	inc    edx
  407cbf:	fidiv  DWORD PTR [ecx]
  407cc1:	fild   QWORD PTR [eax]
  407cc3:	or     esi,edx
  407cc5:	fild   WORD PTR [eax+ecx*2+0x5fa7404b]
  407ccc:	push   cs
  407ccd:	push   edi
  407cce:	fsubr  DWORD PTR [edi]
  407cd0:	sub    ebp,edx
  407cd2:	fidiv  WORD PTR [si-0x2555]
  407cd7:	and    al,0x37
  407cd9:	mov    edx,0xbdfbe96e
  407cde:	retf   0xf91c
  407ce1:	(bad)  
  407ce2:	shl    DWORD PTR [eax+0x32bee6a3],1
  407ce8:	push   cs
  407ce9:	pop    eax
  407cea:	jp     0x407cc9
  407cec:	cmc    
  407ced:	pop    ds
  407cee:	aaa    
  407cef:	mov    al,0x32
  407cf1:	sub    eax,DWORD PTR [esi]
  407cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf4:	fidiv  DWORD PTR [eax-0x731e86e4]
  407cfa:	sbb    BYTE PTR [eax-0x7ad3a6de],bl
  407d00:	or     BYTE PTR ds:0xe5a54cbf,0xfa
  407d08:	call   0x6f4c:0xc7e2ec27
  407d0f:	in     eax,0xae
  407d11:	mov    edx,0x59fad4f8
  407d16:	or     dl,dl
  407d18:	jg     0x407d21
  407d1a:	jb     0x407d79
  407d1c:	jmp    0x407ca5
  407d1e:	sbb    esp,DWORD PTR [eax+0x67b09ffa]
  407d24:	fcom   QWORD PTR [edx+0x110ef67]
  407d2a:	add    BYTE PTR ds:0x8c0b38bc,0x40
  407d31:	mov    edx,0xfbef77ba
  407d36:	pop    edi
  407d37:	inc    esi
  407d38:	jecxz  0x407db2
  407d3a:	jns    0x407d78
  407d3c:	ja     0x407cf5
  407d3e:	mov    ch,0xcc
  407d40:	imul   esi,DWORD PTR [esp+ecx*8],0x1d
  407d44:	and    ah,BYTE PTR [esi+0x4a]
  407d47:	(bad)  
  407d48:	mov    ebp,0x50584fc
  407d4d:	test   eax,eax
  407d4f:	dec    ebx
  407d50:	nop
  407d51:	rcr    BYTE PTR [edi],1
  407d53:	dec    eax
  407d54:	mov    ah,BYTE PTR [edx+0x44]
  407d57:	fwait
  407d58:	push   ds
  407d59:	mov    cl,BYTE PTR [ecx+edi*1+0x4f799ed3]
  407d60:	div    DWORD PTR [eax+0x52]
  407d63:	popa   
  407d64:	ja     0x407d10
  407d66:	mov    ds:0x7c0f1ef0,eax
  407d6b:	sub    ebp,DWORD PTR [ebx+0x4647f36a]
  407d71:	pop    ebx
  407d72:	xchg   BYTE PTR [eax],ch
  407d74:	ds repz or al,0x68
  407d78:	retf   
  407d79:	pop    ss
  407d7a:	jmp    0x407d3d
  407d7c:	inc    eax
  407d7d:	pop    ds
  407d7e:	ins    DWORD PTR es:[edi],dx
  407d7f:	pop    es
  407d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d81:	add    ebp,DWORD PTR [edi-0x3193cee8]
  407d87:	and    bl,BYTE PTR [ebp+0x4e]
  407d8a:	js     0x407d6c
  407d8c:	imul   ebp,DWORD PTR [esi],0x31
  407d8f:	cmp    DWORD PTR [ebx+edx*1],eax
  407d92:	xor    BYTE PTR [ecx+0x43],cl
  407d95:	or     esp,DWORD PTR [esi]
  407d97:	data16 mov ds:0xfe5dd7be,al
  407d9d:	sahf   
  407d9e:	gs jge 0x407e20
  407da1:	syscall 
  407da3:	mov    ebx,0xecad585f
  407da8:	mov    edx,0x7c497ac1
  407dad:	cmp    BYTE PTR [eax+0x11],ch
  407db0:	inc    ecx
  407db1:	cmp    ah,BYTE PTR [eax+0x77]
  407db4:	stos   BYTE PTR es:[edi],al
  407db5:	inc    ebp
  407db6:	pusha  
  407db7:	sub    BYTE PTR [edi],bl
  407db9:	test   eax,0x49c6917f
  407dbe:	mov    ah,0xd7
  407dc0:	stos   BYTE PTR es:[edi],al
  407dc1:	(bad)  
  407dc2:	or     DWORD PTR [edi+0x3d63d707],ecx
  407dc8:	(bad)  
  407dc9:	jl     0x407dad
  407dcb:	cmp    BYTE PTR [ecx],bl
  407dcd:	gs int3 
  407dcf:	aad    0xd7
  407dd1:	aaa    
  407dd2:	dec    ebx
  407dd3:	lock lods al,BYTE PTR ds:[esi]
  407dd5:	lods   eax,DWORD PTR ds:[esi]
  407dd6:	hlt    
  407dd7:	add    BYTE PTR [edx],bh
  407dd9:	xor    DWORD PTR [edi],0xb23fede1
  407ddf:	pop    edx
  407de0:	fild   WORD PTR [esi-0x34]
  407de3:	xlat   BYTE PTR ds:[ebx]
  407de4:	outs   dx,BYTE PTR ds:[esi]
  407de5:	pop    ebx
  407de6:	out    0x8d,eax
  407de8:	fimul  WORD PTR [edi-0x32]
  407deb:	sbb    al,0x90
  407ded:	jge    0x407dd7
  407def:	hlt    
  407df0:	xlat   BYTE PTR ds:[ebx]
  407df1:	js     0x407dd5
  407df3:	int3   
  407df4:	sahf   
  407df5:	aas    
  407df6:	or     eax,0xeb843e36
  407dfb:	mov    ecx,0x260bc6e3
  407e00:	ds scas eax,DWORD PTR es:[edi]
  407e02:	xchg   ecx,ecx
  407e04:	or     eax,0x904e8fe3
  407e09:	mov    edx,0xdc144fdd
  407e0e:	arpl   WORD PTR [ebx+0x6670db6e],ax
  407e14:	jecxz  0x407e21
  407e16:	push   0xffffffc8
  407e18:	rcr    bh,1
  407e1a:	jmp    FWORD PTR [edi-0xc9d3a72]
  407e20:	add    eax,ebx
  407e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e24:	xchg   ebx,eax
  407e25:	popa   
  407e26:	mov    ebx,0xc869a108
  407e2b:	retf   0xfb44
  407e2e:	inc    edi
  407e2f:	lahf   
  407e30:	imul   esi,DWORD PTR [edi],0x40064405
  407e36:	out    dx,al
  407e37:	sar    ecx,cl
  407e39:	jmp    0xe88d:0xa0e9e746
  407e40:	addr16 xchg ebp,eax
  407e42:	test   ebx,esp
  407e44:	add    BYTE PTR [eax+0x3f],dl
  407e47:	cmp    eax,0xc7e4731e
  407e4c:	lods   al,BYTE PTR ds:[esi]
  407e4d:	inc    esp
  407e4e:	imul   edi,DWORD PTR [ebp-0x20bd3147],0xffffff85
  407e55:	add    BYTE PTR [edx],bl
  407e57:	jg     0x407e6a
  407e59:	aad    0x5
  407e5b:	test   al,0xc9
  407e5d:	dec    esi
  407e5e:	inc    ebx
  407e5f:	(bad)  
  407e60:	pop    ss
  407e61:	cmc    
  407e62:	stos   DWORD PTR es:[edi],eax
  407e63:	pop    ds
  407e64:	push   edi
  407e65:	fbld   TBYTE PTR [edi-0x7b]
  407e68:	push   edi
  407e69:	cmp    al,0xa3
  407e6b:	adc    dh,BYTE PTR [edi]
  407e6d:	mov    ds:0xcbb44b4e,al
  407e72:	jns    0x407e21
  407e74:	lods   eax,DWORD PTR ds:[esi]
  407e75:	imul   ecx,DWORD PTR [esi+0x29],0x75d4f87e
  407e7c:	repz cmc 
  407e7e:	pop    eax
  407e7f:	dec    esi
  407e80:	cld    
  407e81:	push   esi
  407e82:	mov    dl,0xb7
  407e84:	aas    
  407e85:	mov    WORD PTR [ecx-0x414d5903],fs
  407e8b:	mov    DWORD PTR [ecx+esi*8-0x658dbea9],esp
  407e92:	push   ss
  407e93:	fsubp  st(3),st
  407e95:	cdq    
  407e96:	or     ecx,ebp
  407e98:	dec    edi
  407e99:	sub    eax,0x335f41a0
  407e9e:	leave  
  407e9f:	sbb    ah,BYTE PTR [edi+0x2c5a348d]
  407ea5:	jno    0x407e98
  407ea7:	inc    esi
  407ea8:	sti    
  407ea9:	mov    ds:0xbd6b5cad,eax
  407eae:	(bad)  
  407eaf:	pop    ss
  407eb0:	dec    edi
  407eb1:	jg     0x407e46
  407eb3:	xor    DWORD PTR [ecx+0x1],edi
  407eb6:	mov    ebx,0x7eccb231
  407ebb:	out    0x31,al
  407ebd:	push   es
  407ebe:	into   
  407ebf:	imul   edi,DWORD PTR [edx],0x9
  407ec2:	shl    dl,cl
  407ec4:	sbb    DWORD PTR [eax],0x5e
  407ec7:	mov    esp,0x3fc676f
  407ecc:	mov    ds:0x28c09316,al
  407ed1:	sbb    DWORD PTR [eax],ebx
  407ed3:	sub    ebp,DWORD PTR [ecx+0x69f5aead]
  407ed9:	js     0x407f05
  407edb:	out    dx,eax
  407edc:	push   edi
  407edd:	cwde   
  407ede:	push   esi
  407edf:	dec    eax
  407ee0:	loopne 0x407eb9
  407ee2:	sbb    DWORD PTR [ebp-0x17793016],esi
  407ee8:	stos   DWORD PTR es:[edi],eax
  407ee9:	sti    
  407eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eeb:	inc    ebx
  407eec:	pop    ebx
  407eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eee:	push   edi
  407eef:	retf   
  407ef0:	xchg   dh,dl
  407ef2:	or     DWORD PTR [ecx+0x69],ecx
  407ef5:	sub    BYTE PTR [edi],ch
  407ef7:	xchg   ebp,eax
  407ef8:	and    ebp,DWORD PTR [edi+0x7898129c]
  407efe:	retf   0x6522
  407f01:	xchg   ecx,eax
  407f02:	and    edx,edx
  407f04:	push   ebp
  407f05:	mov    dh,BYTE PTR [edx]
  407f07:	xchg   esi,eax
  407f08:	and    ecx,DWORD PTR [edx]
  407f0a:	adc    eax,0x5bd66b82
  407f0f:	cdq    
  407f10:	daa    
  407f11:	mov    ecx,0x301e4fac
  407f16:	aaa    
  407f17:	or     DWORD PTR ds:0x2e1476a4,edi
  407f1d:	sub    eax,0x9dec1542
  407f22:	call   0xccbf:0x7e6047ca
  407f29:	jle    0x407f3c
  407f2b:	mov    esi,0x44f253a9
  407f30:	pop    edx
  407f31:	push   0xb
  407f33:	outs   dx,DWORD PTR ds:[esi]
  407f34:	sub    eax,0xd9b013b8
  407f39:	retf   0xe76f
  407f3c:	pop    ecx
  407f3d:	out    dx,al
  407f3e:	mov    ?,WORD PTR [eax+ebp*1+0x21]
  407f42:	jb     0x407eda
  407f44:	ret    0xa268
  407f47:	push   ss
  407f48:	imul   ebx,DWORD PTR [esi],0x4d
  407f4b:	fidivr WORD PTR [edx+0x47]
  407f4e:	dec    edi
  407f4f:	ret    0x3e38
  407f52:	ffreep st(2)
  407f54:	sub    bh,dl
  407f56:	jnp    0x407fb6
  407f58:	popf   
  407f59:	outs   dx,BYTE PTR ds:[esi]
  407f5a:	ss jmp 0xdd96:0x1f6fbcaa
  407f62:	pop    esp
  407f63:	dec    ebx
  407f64:	sub    BYTE PTR [edx],0xcf
  407f67:	rol    BYTE PTR [ecx],0x9d
  407f6a:	fld    TBYTE PTR [edi-0x49]
  407f6d:	fwait
  407f6e:	inc    ebx
  407f6f:	out    0x89,al
  407f71:	scas   eax,DWORD PTR es:[edi]
  407f72:	popf   
  407f73:	aas    
  407f74:	dec    ebx
  407f75:	ins    BYTE PTR es:[edi],dx
  407f76:	sti    
  407f77:	dec    esp
  407f78:	xor    edx,DWORD PTR [ecx]
  407f7a:	or     cl,BYTE PTR [ecx+0x17acf675]
  407f80:	mov    ds:0x2dd74cb,al
  407f85:	xor    al,0x5d
  407f87:	xor    eax,DWORD PTR [ebx]
  407f89:	add    bp,bx
  407f8c:	cmp    al,0xb3
  407f8e:	jecxz  0x407f9f
  407f90:	retf   
  407f91:	or     dl,al
  407f93:	jbe    0x407fbe
  407f95:	fsub   st,st(2)
  407f97:	jge    0x407fb8
  407f99:	std    
  407f9a:	push   eax
  407f9b:	and    DWORD PTR [ebp+0x7c],ebp
  407f9e:	mov    edx,DWORD PTR cs:0x4ea3cc93
  407fa5:	repnz push 0xffffffdf
  407fa8:	adc    DWORD PTR [eax+0x72],ecx
  407fab:	gs ret 0xb588
  407faf:	mov    al,0xcd
  407fb1:	dec    ebx
  407fb2:	mov    bh,0x62
  407fb4:	jb     0x408028
  407fb6:	mov    cs:0x7f5e7497,al
  407fbc:	and    ch,cl
  407fbe:	in     eax,dx
  407fbf:	ror    BYTE PTR [ebx-0x1a8ecfcd],1
  407fc5:	daa    
  407fc6:	xor    al,0xb8
  407fc8:	test   BYTE PTR [ecx+0x54565378],ch
  407fce:	inc    ebx
  407fcf:	sti    
  407fd0:	syscall 
  407fd2:	mov    edx,0x3ca640e0
  407fd7:	push   0x831a5665
  407fdc:	icebp  
  407fdd:	or     BYTE PTR [esi+0x1a],al
  407fe0:	outs   dx,BYTE PTR ds:[esi]
  407fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fe2:	add    eax,0x46a3b9e9
  407fe7:	test   eax,0x83f87787
  407fec:	in     al,0x17
  407fee:	in     eax,0x23
  407ff0:	mov    edx,0x7c7cd2e4
  407ff5:	(bad)  
  407ff6:	mov    ebx,0x4d584c65
  407ffb:	ins    BYTE PTR es:[edi],dx
  407ffc:	cdq    
  407ffd:	arpl   dx,di
  407fff:	sar    BYTE PTR [ebx-0x75],0x97
  408003:	xchg   esi,eax
  408004:	ds and eax,0x333b87c6
  40800a:	lock lods al,BYTE PTR ds:[esi]
  40800c:	sar    DWORD PTR [esi+0x24],1
  40800f:	out    dx,al
  408010:	call   0xfeb0:0x3ae1cac7
  408017:	sub    eax,0x8215a7d9
  40801c:	adc    ch,ch
  40801e:	pushf  
  40801f:	xchg   edi,eax
  408020:	fbld   TBYTE PTR [edi+0x40232ea9]
  408026:	loop   0x407fe6
  408028:	xchg   ebp,eax
  408029:	inc    edi
  40802a:	push   esi
  40802b:	mov    ebp,0x22bc18d5
  408030:	stos   BYTE PTR es:[edi],al
  408031:	inc    esi
  408032:	repz fist DWORD PTR [eax+0x41e49036]
  408039:	call   0xbd1c:0xd2d62546
  408040:	daa    
  408041:	mov    eax,0x53ad2534
  408046:	mov    cs,WORD PTR [edi]
  408048:	jl     0x40800d
  40804a:	xchg   ebp,eax
  40804b:	pop    esp
  40804c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804d:	pop    esp
  40804e:	test   eax,0x6b0f7e67
  408053:	jbe    0x408004
  408055:	dec    ecx
  408056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408057:	xchg   edi,eax
  408058:	mov    esp,0x89359584
  40805d:	push   es
  40805e:	daa    
  40805f:	pop    ds
  408060:	add    edx,DWORD PTR [edi-0x3c7cea14]
  408066:	sbb    BYTE PTR [eax-0x85019e2],ch
  40806c:	in     al,dx
  40806d:	mov    ebp,0x7ab90375
  408072:	xchg   ecx,eax
  408073:	ret    
  408074:	push   0x9
  408076:	jl     0x408044
  408078:	mov    dl,0x84
  40807a:	leave  
  40807b:	sbb    esp,ecx
  40807d:	cmp    ch,BYTE PTR [edx-0x4dbd69a3]
  408083:	cld    
  408084:	dec    ebp
  408085:	or     esp,ebp
  408087:	repnz adc DWORD PTR [ecx],ebp
  40808a:	jmp    0xbf54:0x63023bf1
  408091:	ja     0x408089
  408093:	loope  0x40805c
  408095:	dec    ebp
  408096:	and    ch,BYTE PTR [eax]
  408098:	mov    dl,0x10
  40809a:	add    BYTE PTR [edi-0x1b],ah
  40809d:	mov    cl,0x92
  40809f:	and    al,0x6f
  4080a1:	ret    
  4080a2:	sub    eax,0x15902b52
  4080a7:	inc    esi
  4080a8:	mov    esp,ss
  4080aa:	lds    edx,FWORD PTR [ebp+0x725314e6]
  4080b0:	mov    esi,0x48d1b14f
  4080b5:	ins    BYTE PTR es:[edi],dx
  4080b6:	loopne 0x4080c1
  4080b8:	sbb    al,0xe0
  4080ba:	enter  0x7fb9,0x2b
  4080be:	addr16 mov ah,0xed
  4080c1:	out    dx,eax
  4080c2:	leave  
  4080c3:	dec    esi
  4080c4:	mov    WORD PTR [edx-0x29],es
  4080c7:	enter  0x3097,0xc2
  4080cb:	fld    DWORD PTR [eax+0x3badbc36]
  4080d1:	mov    gs,WORD PTR [esp+edi*2+0x29d6432a]
  4080d8:	push   esi
  4080d9:	xlat   BYTE PTR ds:[ebx]
  4080da:	dec    esp
  4080db:	dec    esi
  4080dc:	pop    edi
  4080dd:	cs fcmovne st,st(3)
  4080e0:	or     al,0x1d
  4080e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e3:	mov    ch,0xe3
  4080e5:	outs   dx,DWORD PTR ds:[esi]
  4080e6:	and    al,0xaa
  4080e8:	ror    BYTE PTR [ebx+eax*8],1
  4080eb:	mov    ecx,0x9aab35eb
  4080f0:	push   esp
  4080f1:	pusha  
  4080f2:	mov    ebx,es
  4080f4:	shr    DWORD PTR [esi-0x70],1
  4080f7:	sar    BYTE PTR [edi+0x3b],1
  4080fa:	cli    
  4080fb:	loop   0x4080a0
  4080fd:	out    dx,eax
  4080fe:	test   eax,0xbf2fa959
  408103:	xor    DWORD PTR [ebp+0x510b862e],edi
  408109:	add    eax,0x2ee60af6
  40810e:	push   edi
  40810f:	mov    eax,DWORD PTR [eax+ebp*8]
  408112:	jmp    0xdb92e147
  408117:	test   al,0xc0
  408119:	adc    ch,BYTE PTR fs:0xb5a4a5e3
  408120:	sbb    ecx,DWORD PTR ds:0x93985f5a
  408126:	mov    ecx,0x3d1efd6c
  40812b:	inc    esp
  40812c:	adc    BYTE PTR [ebp+0x41c8fb65],0x9e
  408133:	repz not ch
  408136:	add    al,0x29
  408138:	in     eax,dx
  408139:	ss sub al,bl
  40813c:	lods   eax,DWORD PTR ds:[esi]
  40813d:	mov    eax,ds:0x4c4c2790
  408142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408143:	sahf   
  408144:	add    ah,ah
  408146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408147:	xchg   esp,eax
  408148:	not    BYTE PTR [edx-0x5badafa5]
  40814e:	in     eax,dx
  40814f:	hlt    
  408150:	adc    al,0xd4
  408152:	inc    edx
  408153:	test   DWORD PTR [ecx],edx
  408155:	(bad)  
  408156:	push   esp
  408157:	in     eax,0x8d
  408159:	aas    
  40815a:	or     al,0xd0
  40815c:	mov    edx,0x65e34d71
  408161:	jo     0x4080f7
  408163:	adc    al,0x80
  408165:	popa   
  408166:	mov    WORD PTR [ebx+0x37f415b1],gs
  40816c:	ins    DWORD PTR es:[edi],dx
  40816d:	jg     0x4081d4
  40816f:	mov    ds:0x9391a33e,eax
  408174:	adc    BYTE PTR [eax+0x1f],0x8e
  408178:	inc    esi
  408179:	cld    
  40817a:	pop    ebx
  40817b:	xor    eax,0x52899db9
  408180:	jmp    0x7b35:0xe28cae29
  408187:	cld    
  408188:	xchg   edx,eax
  408189:	sahf   
  40818a:	(bad)  [ecx]
  40818c:	fdivr  QWORD PTR [ebp+eax*4-0xe391aba]
  408193:	arpl   sp,dx
  408195:	outs   dx,BYTE PTR ds:[esi]
  408196:	sbb    DWORD PTR [esi-0x6fbe97be],esi
  40819c:	outs   dx,DWORD PTR ds:[esi]
  40819d:	sub    bh,dl
  40819f:	dec    edx
  4081a0:	icebp  
  4081a1:	inc    esp
  4081a2:	add    al,0xfa
  4081a4:	fnsave [ebp-0x4034db1d]
  4081aa:	push   esp
  4081ab:	stos   BYTE PTR es:[edi],al
  4081ac:	outs   dx,BYTE PTR ds:[esi]
  4081ad:	mov    esi,0x95f69e1e
  4081b2:	sbb    al,0x17
  4081b4:	mov    esp,0xc212a098
  4081b9:	out    dx,eax
  4081ba:	call   0x4c17:0x91c38654
  4081c1:	int3   
  4081c2:	jb     0x40821d
  4081c4:	test   eax,0xb31e6582
  4081c9:	mov    DWORD PTR ss:[ecx+0x25],edx
  4081cd:	pop    eax
  4081ce:	lods   al,BYTE PTR ds:[esi]
  4081cf:	test   eax,0x3d1ba85d
  4081d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d5:	std    
  4081d6:	push   cs
  4081d7:	(bad)  
  4081d8:	adc    edx,esp
  4081da:	pop    edx
  4081db:	dec    ecx
  4081dc:	lea    eax,ds:0x837629d0
  4081e2:	xlat   BYTE PTR ds:[ebx]
  4081e3:	or     ch,BYTE PTR [ebp+0x5400f5ad]
  4081e9:	mov    ecx,0x9df2d291
  4081ee:	mov    al,ds:0x548e2293
  4081f3:	mov    ds:0xd95e8efc,eax
  4081f8:	ins    BYTE PTR es:[edi],dx
  4081f9:	in     al,0x99
  4081fb:	rcl    al,0x33
  4081fe:	or     al,0x81
  408200:	inc    BYTE PTR [esp+edx*2]
  408203:	hlt    
  408204:	mov    dl,0x97
  408206:	xchg   DWORD PTR [ecx+eiz*8+0x1],esp
  40820a:	mov    eax,0x5e9e6694
  40820f:	into   
  408210:	es and al,0x90
  408213:	aam    0x18
  408215:	dec    edx
  408216:	add    bl,BYTE PTR [ecx+edi*1]
  408219:	pop    eax
  40821a:	pop    ecx
  40821b:	stc    
  40821c:	push   esp
  40821d:	mov    edi,0x89ec0228
  408222:	dec    edx
  408223:	iret   
  408224:	mov    BYTE PTR [edi-0x49],ch
  408227:	sbb    eax,0xce3b2f21
  40822c:	lock xor al,0xcb
  40822f:	mov    eax,ds:0x48f7824d
  408234:	aaa    
  408235:	pop    edi
  408236:	adc    DWORD PTR [ebp+0x245c0fee],ecx
  40823c:	add    eax,0xbd4e679b
  408241:	lods   al,BYTE PTR ds:[esi]
  408242:	adc    DWORD PTR [eax+ecx*4-0x2b],esi
  408246:	shr    BYTE PTR [ebx],0x76
  408249:	leave  
  40824a:	hlt    
  40824b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40824c:	pop    esp
  40824e:	icebp  
  40824f:	fistp  DWORD PTR [ecx-0x43]
  408252:	retf   0xc738
  408255:	cmp    BYTE PTR [edi],0xb3
  408258:	les    edi,FWORD PTR [edi+0x58d7e1d]
  40825e:	cmp    al,BYTE PTR [ebp-0x3d67b6d5]
  408264:	jb     0x408254
  408266:	sbb    esi,DWORD PTR [eax]
  408268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408269:	sahf   
  40826a:	xor    al,0x42
  40826c:	inc    eax
  40826d:	cmp    al,0x1c
  40826f:	xor    DWORD PTR [ebx],ebx
  408271:	cmp    BYTE PTR [edx+0x16],ah
  408274:	(bad)  ds:0x4e5e3983
  40827a:	inc    edi
  40827b:	mov    edx,0x7c56ab53
  408280:	(bad)  
  408281:	retf   0x8ee3
  408284:	aam    0x5d
  408286:	adc    bl,ah
  408288:	test   BYTE PTR [eax+0x12],0xe5
  40828c:	fwait
  40828d:	and    ch,dl
  40828f:	add    ebx,0xffffffc9
  408292:	(bad)  
  408293:	jb     0x4082c5
  408295:	cs adc al,0x14
  408298:	aam    0x17
  40829a:	rcl    BYTE PTR [eax-0x4b84f3d6],cl
  4082a0:	jmp    FWORD PTR [edi+0x13]
  4082a3:	fld    TBYTE PTR [ebx]
  4082a5:	and    DWORD PTR [ebp+0x5ae841cb],ebx
  4082ab:	inc    edx
  4082ac:	or     BYTE PTR [ecx+edx*8],dl
  4082af:	or     ebx,DWORD PTR [edi-0x5a03d07e]
  4082b5:	hlt    
  4082b6:	push   ebp
  4082b7:	and    al,0xa3
  4082b9:	pop    ss
  4082ba:	stos   BYTE PTR es:[edi],al
  4082bb:	add    dl,BYTE PTR [esi]
  4082bd:	addr16 aaa 
  4082bf:	sub    al,0x26
  4082c1:	and    al,0x2a
  4082c3:	les    ebx,FWORD PTR [ebx]
  4082c5:	inc    ebx
  4082c6:	jge    0x4082a4
  4082c8:	adc    eax,DWORD PTR ds:0x209c1fc6
  4082ce:	cli    
  4082cf:	inc    ecx
  4082d0:	xchg   esi,eax
  4082d1:	pop    ebx
  4082d2:	rol    BYTE PTR [esi+0x2e9080bd],0x9b
  4082d9:	mov    esi,DWORD PTR [ebx+0x2198c068]
  4082df:	jmp    FWORD PTR [ecx-0x7f64f665]
  4082e5:	test   eax,0x2846bbd
  4082ea:	xor    bh,BYTE PTR [eax]
  4082ec:	and    eax,0x44a1d163
  4082f1:	adc    esi,DWORD PTR [edx-0xe3beedd]
  4082f7:	and    ebx,DWORD PTR [ebx+ebx*4+0x33]
  4082fb:	popa   
  4082fc:	jno    0x40829d
  4082fe:	mov    esi,0x7c999c34
  408303:	or     dh,0x1c
  408306:	xor    BYTE PTR [esi-0x7f],cl
  408309:	add    BYTE PTR [eax+0x12],ch
  40830c:	aam    0x17
  40830e:	in     al,dx
  40830f:	inc    ebp
  408310:	mov    al,0x4c
  408312:	xchg   ebx,eax
  408313:	adc    al,0x36
  408315:	call   0xdf6bf85a
  40831a:	ja     0x40833b
  40831c:	test   ecx,esi
  40831e:	and    DWORD PTR [edx-0x8],ebp
  408321:	cmp    BYTE PTR [ebp+0x7f],0xd1
  408325:	pop    ss
  408326:	adc    ch,BYTE PTR [ecx]
  408328:	in     eax,0xbb
  40832a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40832b:	sbb    BYTE PTR [ecx-0x43],dh
  40832e:	push   eax
  40832f:	xchg   esi,eax
  408330:	cmp    DWORD PTR [eax-0x7f],esp
  408333:	or     eax,0x3b639417
  408338:	mov    ?,WORD PTR [edx-0x4b34db9b]
  40833e:	call   0xfab8:0x20a5d807
  408345:	je     0x4083c6
  408347:	jno    0x4083ae
  408349:	loopne 0x4082f4
  40834b:	jmp    0x84aa:0xb2e8f9eb
  408352:	fbld   TBYTE PTR [edi-0x6976311a]
  408358:	jnp    0x408377
  40835a:	pop    edx
  40835b:	dec    edx
  40835c:	xchg   ch,ch
  40835e:	in     eax,dx
  40835f:	dec    edi
  408360:	arpl   WORD PTR [edi+0x1d91a365],ax
  408366:	xchg   DWORD PTR fs:[ebx+0xa23a94d],eax
  40836d:	mov    ah,0x4d
  40836f:	mov    edx,DWORD PTR [eax+0x10]
  408372:	out    dx,al
  408373:	lahf   
  408374:	mov    ds:0x453272ed,al
  408379:	adc    eax,0x2f07203f
  40837e:	push   edx
  40837f:	fwait
  408380:	sbb    al,0x3f
  408382:	cmp    BYTE PTR [edi+0x30],dl
  408385:	xor    dh,BYTE PTR [ebp-0x63]
  408388:	sahf   
  408389:	adc    ecx,ebx
  40838b:	cmp    edi,DWORD PTR [ebp+0x77]
  40838e:	or     BYTE PTR [ebx+esi*1],bh
  408391:	sbb    DWORD PTR [edx-0x1362c763],esp
  408397:	lahf   
  408398:	xchg   BYTE PTR [eax+0xd],cl
  40839b:	sbb    al,BYTE PTR [ecx-0x7]
  40839e:	sahf   
  40839f:	sbb    ecx,DWORD PTR [edx-0x5d]
  4083a2:	pop    edi
  4083a3:	xor    DWORD PTR [eax],esp
  4083a5:	call   0x85314934
  4083aa:	sub    al,0xdd
  4083ac:	adc    bl,ah
  4083ae:	sbb    eax,0x8526d95e
  4083b3:	mov    al,ds:0x1f1f4b69
  4083b8:	rol    DWORD PTR [esp+edi*1-0x19],1
  4083bc:	or     eax,0xdd1631a7
  4083c1:	call   FWORD PTR [ecx-0x3669b724]
  4083c7:	in     eax,dx
  4083c8:	cmp    BYTE PTR [esi+edi*2],0xcc
  4083cc:	cmp    al,bh
  4083ce:	les    esi,FWORD PTR [eax+0x7]
  4083d1:	fdivr  DWORD PTR [edi]
  4083d3:	dec    edi
  4083d4:	arpl   di,bx
  4083d6:	bound  ebp,QWORD PTR [edx+0x44c11703]
  4083dc:	jp     0x4083b2
  4083de:	or     al,0x8b
  4083e0:	pusha  
  4083e1:	add    al,0x9e
  4083e3:	(bad)  
  4083e5:	xchg   ebx,eax
  4083e6:	pop    eax
  4083e7:	test   eax,0x9674d1a
  4083ec:	add    dh,BYTE PTR [edx+ebx*1+0x7]
  4083f0:	in     al,dx
  4083f1:	jg     0x4083c2
  4083f3:	jmp    DWORD PTR ds:0xe63b1fcc
  4083f9:	sub    al,0x7c
  4083fb:	aas    
  4083fc:	sbb    bh,bl
  4083fe:	fldcw  WORD PTR [ecx]
  408400:	xchg   ebp,eax
  408401:	push   ecx
  408402:	(bad)  
  408403:	shr    bh,1
  408405:	aas    
  408406:	push   0xeeb2ba18
  40840b:	sub    BYTE PTR [esi+0x57],ah
  40840e:	mov    eax,0x32b41235
  408413:	add    DWORD PTR [ebp+0x10],0x73
  408417:	inc    ecx
  408418:	stc    
  408419:	ret    
  40841a:	xor    eax,0xb7b29937
  40841f:	in     eax,dx
  408420:	out    dx,al
  408421:	pop    edi
  408422:	inc    edx
  408423:	push   ebp
  408424:	in     eax,0x21
  408426:	cmp    eax,0xc4491b3c
  40842b:	jns    0x4083f1
  40842d:	scas   eax,DWORD PTR es:[edi]
  40842e:	xchg   edi,eax
  40842f:	jmp    0x4083b2
  408431:	test   BYTE PTR [edx+0x4a],al
  408434:	cmp    BYTE PTR [ecx+0x5c6d0a3b],cl
  40843a:	inc    esi
  40843b:	xchg   edi,eax
  40843c:	pushf  
  40843d:	sub    DWORD PTR [eax],esi
  40843f:	out    0xd2,al
  408441:	xchg   edx,eax
  408442:	test   ebp,esi
  408444:	mov    eax,ds:0xcda537fb
  408449:	sahf   
  40844a:	sbb    cl,BYTE PTR [eax-0x34]
  40844d:	in     al,0x32
  40844f:	repnz xor al,0xd
  408452:	aas    
  408453:	(bad)  
  408454:	mul    DWORD PTR [ecx+0x15]
  408457:	cmp    DWORD PTR [eax-0x7c2ae62b],esi
  40845d:	arpl   WORD PTR [esi+0x25],di
  408460:	retf   0x347b
  408463:	add    BYTE PTR [ebx-0x771d0ca4],al
  408469:	jno    0x408458
  40846b:	jne    0x4084c1
  40846d:	mov    al,ds:0xefbc3d9
  408472:	in     al,0xfa
  408474:	neg    eax
  408476:	lods   al,BYTE PTR ds:[esi]
  408477:	out    dx,al
  408478:	or     al,0xb7
  40847a:	sbb    cl,bh
  40847c:	xchg   ebx,eax
  40847d:	add    DWORD PTR [ecx],0x76
  408480:	(bad)  
  408481:	jns    0x4084de
  408483:	sub    DWORD PTR [edi],0xeb4732b1
  408489:	(bad)  [edx-0x180fe1eb]
  40848f:	je     0x4084cc
  408491:	add    ebx,0xfffffff2
  408494:	sub    al,BYTE PTR [eiz*4+0x3bf74781]
  40849b:	adc    eax,0xd6f4a5e2
  4084a0:	push   cs
  4084a1:	aas    
  4084a2:	test   al,0xb1
  4084a4:	neg    BYTE PTR [esi+0x57a283ae]
  4084aa:	inc    esi
  4084ab:	or     al,0x51
  4084ad:	or     dl,0xa4
  4084b0:	test   al,0x6
  4084b2:	sbb    BYTE PTR [ebp-0x10873878],0x9d
  4084b9:	mov    BYTE PTR [edx],cl
  4084bb:	popa   
  4084bc:	test   DWORD PTR [edx],0xc55082a5
  4084c2:	push   ebp
  4084c3:	jne    0x4084d5
  4084c5:	inc    esi
  4084c7:	or     esp,DWORD PTR [ebp+0x289dfcdf]
  4084cd:	mov    ds:0x3866c5f,al
  4084d2:	mov    edi,DWORD PTR [edi+0x54c89ff]
  4084d8:	stos   BYTE PTR es:[edi],al
  4084d9:	ret    0x7e2e
  4084dc:	mov    eax,ds:0xc6d44847
  4084e1:	jmp    0x5767:0x7c02a660
  4084e8:	rol    DWORD PTR [edx+0x27345310],1
  4084ee:	push   ecx
  4084ef:	cmp    DWORD PTR [edx+0x65],ecx
  4084f2:	adc    DWORD PTR [edx-0x18fd6727],0xffffff9c
  4084f9:	jmp    0x8545:0x662f120c
  408500:	call   0xb575:0xf02a9713
  408507:	popf   
  408508:	xor    eax,0x3d39ec8c
  40850d:	aaa    
  40850e:	cmp    ebx,esp
  408510:	popa   
  408511:	lahf   
  408512:	add    edx,DWORD PTR [edx+0x29fc557c]
  408518:	and    BYTE PTR [edi],bh
  40851a:	adc    BYTE PTR [edx-0x56],al
  40851d:	clc    
  40851e:	jo     0x408516
  408520:	sub    DWORD PTR [edx],edx
  408522:	push   ebx
  408523:	sub    eax,0x44474eeb
  408528:	xchg   ebp,eax
  408529:	push   ss
  40852a:	lahf   
  40852b:	in     eax,0x9a
  40852d:	lods   eax,DWORD PTR ds:[esi]
  40852e:	sub    BYTE PTR [edx+0x58],0xe4
  408532:	jmp    0x4084cb
  408534:	fcomp  DWORD PTR [ebx-0x3cfeefeb]
  40853a:	ds out 0xa5,al
  40853d:	jg     0x408540
  40853f:	mov    edi,DWORD PTR [esi+0x5547858d]
  408545:	dec    esp
  408546:	sbb    bh,al
  408548:	sbb    edi,0x27056abb
  40854e:	(bad)
  408552:	popa   
  408553:	mov    al,0xbd
  408555:	imul   esp,DWORD PTR [ecx+0x5447ff1f],0x2ac1500e
  40855f:	outs   dx,BYTE PTR ds:[esi]
  408560:	pop    edi
  408561:	outs   dx,BYTE PTR ds:[esi]
  408562:	or     eax,0xd764434f
  408567:	xchg   ecx,eax
  408568:	jge    0x4085e2
  40856a:	dec    ecx
  40856b:	out    0x98,eax
  40856d:	adc    esi,DWORD PTR [edi+0x60]
  408570:	leave  
  408571:	ror    BYTE PTR [ecx],0xe0
  408574:	ja     0x40853b
  408576:	popa   
  408577:	jmp    0x654d:0x48a13c50
  40857e:	xor    DWORD PTR [ecx+0x1e753dd3],ecx
  408584:	sub    bh,BYTE PTR gs:[edx]
  408587:	mov    eax,0xcaf430e4
  40858c:	scas   eax,DWORD PTR es:[edi]
  40858d:	imul   esi,DWORD PTR [esi+0x46],0x76
  408591:	ror    ecx,0x42
  408594:	rcr    BYTE PTR [ecx],cl
  408596:	test   DWORD PTR [edx-0x60a1d8df],ecx
  40859c:	dec    edx
  40859d:	jp     0x40855b
  40859f:	mov    edx,0xad8df388
  4085a4:	ror    BYTE PTR [ebx+0x27],cl
  4085a7:	xor    bl,BYTE PTR [ebp-0x2fa2f19f]
  4085ad:	xlat   BYTE PTR ds:[ebx]
  4085ae:	mov    cl,ah
  4085b0:	jmp    0x5ad6:0x6a7ccb19
  4085b7:	imul   ebp,DWORD PTR [esi-0x56a03565],0x11
  4085be:	jp     0x4085fb
  4085c0:	pop    ds
  4085c1:	push   ecx
  4085c2:	xor    BYTE PTR [ecx-0x6c2d65ad],ch
  4085c8:	sub    al,BYTE PTR [eax]
  4085ca:	ret    
  4085cb:	jb     0x408596
  4085cd:	cmp    eax,0x217e87a
  4085d2:	inc    edi
  4085d3:	jae    0x4085c8
  4085d5:	gs mov ch,0xd3
  4085d8:	stos   BYTE PTR es:[edi],al
  4085d9:	aam    0x75
  4085db:	jl     0x408577
  4085dd:	aam    0x13
  4085df:	push   esi
  4085e0:	out    dx,al
  4085e1:	pop    ecx
  4085e2:	and    al,bl
  4085e4:	pop    eax
  4085e5:	shl    DWORD PTR [edi+esi*8],0x15
  4085e9:	xlat   BYTE PTR ds:[ebx]
  4085ea:	ror    BYTE PTR [eax],1
  4085ec:	jg     0x408657
  4085ee:	mov    bh,0xc5
  4085f0:	lods   al,BYTE PTR ds:[esi]
  4085f1:	adc    bl,cl
  4085f3:	(bad)  
  4085f5:	jnp    0x408615
  4085f7:	or     eax,0x53470891
  4085fc:	std    
  4085fd:	retf   0x1c8b
  408600:	sbb    DWORD PTR [eax+0x40],eax
  408603:	mov    eax,ds:0x45491e24
  408608:	and    eax,0x57579959
  40860d:	rcl    bh,1
  40860f:	dec    esi
  408610:	neg    al
  408612:	mov    ecx,0xb6905387
  408617:	(bad)  
  408618:	xor    ebx,DWORD PTR [esi+eax*1+0xd]
  40861c:	or     eax,0x28ad8481
  408621:	cld    
  408622:	mov    fs,WORD PTR [edx+0x77f41971]
  408628:	aam    0x68
  40862a:	aad    0x8d
  40862c:	cli    
  40862d:	xchg   ebp,eax
  40862e:	call   0xbf1ed1d
  408633:	mov    ?,WORD PTR [eax+esi*2]
  408636:	aaa    
  408637:	je     0x4085dd
  408639:	fs jl  0x4085cc
  40863c:	fsubp  st(3),st
  40863e:	ds pusha 
  408640:	sbb    eax,0x93090896
  408645:	jl     0x4085d9
  408647:	mov    edi,0xf58e7b07
  40864c:	popa   
  40864d:	mov    ch,0x68
  40864f:	sub    eax,0xdf70abfa
  408654:	pop    ecx
  408655:	dec    ebp
  408656:	sbb    BYTE PTR [eax-0x6985d660],al
  40865c:	aas    
  40865d:	ins    BYTE PTR es:[edi],dx
  40865e:	jmp    DWORD PTR [ebx+0x7e380f32]
  408664:	xchg   ecx,eax
  408665:	dec    ebp
  408666:	xor    al,0x42
  408668:	xchg   edx,eax
  408669:	sub    DWORD PTR [edx+eiz*8+0x7a3c9a7f],ebx
  408670:	mov    bl,0x24
  408672:	pop    ss
  408673:	mov    ch,0x9a
  408675:	mov    edx,0xccf65d37
  40867a:	je     0x408670
  40867c:	sub    al,0x80
  40867e:	cld    
  40867f:	push   esi
  408680:	data16 cmp bl,BYTE PTR [eax+0x33]
  408684:	fprem  
  408686:	fistp  QWORD PTR [edx]
  408688:	icebp  
  408689:	dec    ecx
  40868a:	ins    DWORD PTR es:[edi],dx
  40868b:	arpl   WORD PTR [esi-0x9e99904],si
  408691:	cmp    eax,0x30d8fcd5
  408696:	das    
  408697:	or     ecx,DWORD PTR [esi-0x36]
  40869a:	pop    ebx
  40869b:	enterw 0xa19c,0x62
  4086a0:	pushf  
  4086a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a2:	into   
  4086a3:	std    
  4086a4:	ds cli 
  4086a6:	jg     0x40871c
  4086a8:	xlat   BYTE PTR ds:[ebx]
  4086a9:	es cmp eax,0x1fcd6f91
  4086af:	sbb    ebx,0x71
  4086b2:	jnp    0x4086b5
  4086b4:	and    al,0x26
  4086b6:	pushf  
  4086b7:	xchg   ecx,eax
  4086b8:	inc    esi
  4086b9:	mov    DWORD PTR [edi+eax*4],ebx
  4086bc:	lods   eax,DWORD PTR ds:[esi]
  4086bd:	leave  
  4086be:	mov    fs,WORD PTR [ebx]
  4086c0:	leave  
  4086c1:	xchg   esi,eax
  4086c2:	and    edx,DWORD PTR [esi+0x2fdd544b]
  4086c8:	pusha  
  4086c9:	int3   
  4086ca:	adc    BYTE PTR [eax+0x47444bc3],cl
  4086d0:	inc    esp
  4086d1:	stos   BYTE PTR es:[edi],al
  4086d2:	das    
  4086d3:	jg     0x40869b
  4086d5:	lea    edx,[ecx+0x32]
  4086d8:	xchg   BYTE PTR [edi+0x44],bh
  4086db:	lahf   
  4086dc:	int    0xf
  4086de:	ss push 0x4c
  4086e1:	in     al,dx
  4086e2:	shr    DWORD PTR [edx],0x50
  4086e5:	fst    DWORD PTR [eax+0x37]
  4086e8:	scas   eax,DWORD PTR es:[edi]
  4086e9:	sbb    edi,ebx
  4086eb:	mov    dl,0x89
  4086ed:	ret    
  4086ee:	push   edx
  4086ef:	ja     0x408681
  4086f1:	dec    DWORD PTR [edx+0x25ebde63]
  4086f7:	xchg   BYTE PTR [ebx],bl
  4086f9:	mov    dl,0xee
  4086fb:	aas    
  4086fc:	adc    eax,0xa946f22f
  408701:	bound  ebx,QWORD PTR [ebx+0x6f]
  408704:	arpl   WORD PTR [esi],ax
  408706:	(bad)  
  408707:	iret   
  408708:	pop    es
  408709:	jp     0x4086dd
  40870b:	mov    al,ds:0xce780cda
  408710:	(bad)  
  408711:	xchg   esp,eax
  408712:	mov    BYTE PTR [eax+0x40],dh
  408715:	sbb    DWORD PTR [esi],ebp
  408717:	ins    DWORD PTR es:[edi],dx
  408718:	or     BYTE PTR [edi-0x1f2b3c24],ah
  40871e:	sbb    al,0x9
  408720:	xchg   ebx,eax
  408721:	push   0xffffffe5
  408723:	dec    BYTE PTR [eax-0x42bf946]
  408729:	add    bl,BYTE PTR [eax]
  40872b:	je     0x40877c
  40872d:	(bad)  [ecx]
  40872f:	cmp    BYTE PTR [edi],0x83
  408732:	(bad)  
  408733:	cld    
  408734:	ds push edi
  408736:	and    DWORD PTR [edi+eiz*8-0x1b21a76c],ebx
  40873d:	adc    ecx,edi
  40873f:	cmp    bh,dh
  408741:	leave  
  408742:	loopne 0x408767
  408744:	mov    ?,WORD PTR [ebx-0x23]
  408747:	stc    
  408748:	jg     0x408790
  40874a:	xchg   esi,eax
  40874b:	sbb    eax,DWORD PTR [esi+0x2d]
  40874e:	inc    edi
  40874f:	fbld   TBYTE PTR [esi+0x2d]
  408752:	bound  ecx,QWORD PTR [edi]
  408754:	fwait
  408755:	add    edx,DWORD PTR [esp+edi*2+0x4bc490b1]
  40875c:	mov    ch,0x5e
  40875e:	or     BYTE PTR ds:[eax+0x4b977f7a],al
  408765:	xor    eax,0xab1bd446
  40876a:	mov    ch,0x91
  40876c:	call   0xa731:0x4903a65b
  408773:	(bad)  
  408774:	repnz cld 
  408776:	mov    ds:0x48063250,al
  40877b:	jne    0x408714
  40877d:	jle    0x408745
  40877f:	jo     0x4087bd
  408781:	adc    ebp,eax
  408783:	outs   dx,DWORD PTR ds:[esi]
  408784:	add    esp,DWORD PTR [ecx+edi*1]
  408787:	jecxz  0x408790
  408789:	popa   
  40878a:	call   0x1a612651
  40878f:	dec    ecx
  408790:	retf   0x682f
  408793:	stos   DWORD PTR es:[edi],eax
  408794:	cmp    dh,cl
  408796:	or     cl,BYTE PTR [edi+0xb]
  408799:	xlat   BYTE PTR ds:[ebx]
  40879a:	(bad)  
  40879b:	jg     0x408777
  40879d:	mov    DWORD PTR [eax+0x5faa106f],esp
  4087a3:	mov    cl,0xc
  4087a5:	aam    0xb5
  4087a7:	(bad)
  4087aa:	cli    
  4087ab:	jb     0x408780
  4087ad:	xor    eax,0xbe076c6b
  4087b2:	lods   al,BYTE PTR ds:[esi]
  4087b3:	sbb    esi,DWORD PTR [esi]
  4087b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b6:	push   esi
  4087b7:	xor    bl,BYTE PTR [esi-0x80]
  4087ba:	cmp    DWORD PTR [ecx-0x6083ef70],edi
  4087c0:	repnz rcl DWORD PTR [edi+0x2fbcf900],0xe5
  4087c8:	call   0xfa16815a
  4087cd:	(bad)  
  4087cf:	test   BYTE PTR [edi],cl
  4087d1:	push   cs
  4087d2:	(bad)  
  4087d3:	sbb    ecx,DWORD PTR [edi+0x6153ac50]
  4087d9:	cdq    
  4087da:	inc    ecx
  4087db:	inc    ebp
  4087dc:	inc    esp
  4087dd:	inc    esp
  4087de:	inc    esp
  4087df:	(bad)  
  4087e0:	jnp    0x40877c
  4087e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087e3:	popa   
  4087e4:	adc    esp,DWORD PTR [eax-0x6b]
  4087e7:	test   BYTE PTR [edx],ch
  4087e9:	mov    al,ds:0xec9f0eec
  4087ee:	and    dl,BYTE PTR [ebp+0x73]
  4087f1:	lock jmp 0x4087cc
  4087f4:	add    ch,BYTE PTR [edi]
  4087f6:	leave  
  4087f7:	les    edx,FWORD PTR [ebx-0x20]
  4087fa:	push   ebp
  4087fb:	pusha  
  4087fc:	cmc    
  4087fd:	jp     0x408831
  4087ff:	dec    eax
  408800:	outs   dx,BYTE PTR ds:[esi]
  408801:	and    eax,0x5ddb57c6
  408806:	jbe    0x4087a2
  408808:	mov    ch,0x2f
  40880a:	add    DWORD PTR [ecx-0x6695e453],ecx
  408810:	xchg   ebx,eax
  408811:	dec    edi
  408812:	and    eax,0x72f8385e
  408817:	jmp    0x3001:0x480099b2
  40881e:	neg    BYTE PTR [eax+0x74350fcf]
  408824:	jecxz  0x408800
  408826:	sbb    al,0x2e
  408828:	dec    edx
  408829:	call   0x377c:0xfeb4d606
  408830:	repnz leave 
  408832:	mov    ebx,0xd2fbbddc
  408838:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40883a:	iret   
  40883b:	int    0xe5
  40883d:	cwde   
  40883e:	rcl    BYTE PTR [esi],cl
  408840:	loopne 0x408832
  408842:	int3   
  408843:	cmp    BYTE PTR [eax+ecx*4],bh
  408846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408847:	mov    esp,0x878a66ab
  40884c:	enter  0xc3e2,0x56
  408850:	das    
  408851:	daa    
  408852:	push   ebx
  408853:	pop    ecx
  408854:	leave  
  408855:	in     eax,dx
  408856:	sbb    al,0x7
  408858:	out    dx,eax
  408859:	or     ecx,ecx
  40885b:	xor    DWORD PTR [esp+ebp*1-0x46],eax
  40885f:	retf   0x4b62
  408862:	add    dh,BYTE PTR [ebp+0x66]
  408865:	rcl    dl,0xb9
  408868:	mov    ebp,0x7a2ef640
  40886d:	mov    bl,0x29
  40886f:	push   ss
  408870:	jle    0x40880f
  408872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408873:	ins    BYTE PTR es:[edi],dx
  408874:	push   ds
  408875:	adc    eax,0xaa5260cb
  40887a:	cmp    DWORD PTR [ebx+0x2],0xffffffad
  40887e:	fdiv   st,st(7)
  408880:	pop    esi
  408881:	jae    0x40884e
  408883:	bound  eax,QWORD PTR [edx-0x709f11d2]
  408889:	mov    bl,0x47
  40888b:	push   esi
  40888c:	dec    ebx
  40888d:	dec    ecx
  40888e:	cwde   
  40888f:	and    eax,DWORD PTR [bx+si]
  408892:	mov    dh,BYTE PTR [edi+0x75]
  408895:	scas   al,BYTE PTR es:[edi]
  408896:	mov    ch,0xa1
  408898:	mov    dh,0x62
  40889a:	push   eax
  40889b:	adc    BYTE PTR [ebx-0x2d],0x2d
  40889f:	sbb    al,0x19
  4088a1:	daa    
  4088a2:	pop    esi
  4088a3:	xchg   edx,eax
  4088a4:	cld    
  4088a5:	mov    ds:0xcfe237f0,al
  4088aa:	jbe    0x40888d
  4088ac:	inc    edi
  4088ad:	pop    edi
  4088ae:	inc    eax
  4088af:	addr16 mov cl,0x46
  4088b2:	dec    ebx
  4088b3:	(bad)  
  4088b4:	jnp    0x4088fa
  4088b6:	dec    bl
  4088b8:	mov    ah,0x8c
  4088ba:	xor    eax,0x4db60e15
  4088bf:	sub    al,0x73
  4088c1:	jbe    0x40892f
  4088c3:	pop    ebx
  4088c4:	xchg   ecx,eax
  4088c5:	jecxz  0x4088de
  4088c7:	add    al,0x5e
  4088c9:	sar    esp,1
  4088cb:	inc    ebx
  4088cc:	jbe    0x408920
  4088ce:	mov    eax,0xd3ef0e26
  4088d3:	mov    ds:0x6fa2de8f,eax
  4088d8:	push   ds
  4088d9:	fisttp DWORD PTR ds:0x21870092
  4088df:	pop    ds
  4088e0:	jo     0x40891f
  4088e2:	aad    0x28
  4088e4:	inc    ebp
  4088e5:	jge    0x4088a5
  4088e7:	cld    
  4088e8:	cmp    bh,BYTE PTR [ebx+0x60]
  4088eb:	aam    0xe3
  4088ed:	push   es
  4088ee:	fsubp  st(5),st
  4088f0:	jle    0x408926
  4088f2:	loopne 0x4088eb
  4088f4:	pop    ds
  4088f5:	mov    cl,0xb6
  4088f7:	js     0x408960
  4088f9:	stos   BYTE PTR es:[edi],al
  4088fa:	lahf   
  4088fb:	(bad)  
  4088fc:	cmp    eax,0xdffd0a79
  408901:	mov    eax,ds:0x8c0f80a8
  408906:	push   edx
  408907:	cmp    al,0xe0
  408909:	rcl    DWORD PTR [ecx-0x1774fd61],1
  40890f:	popa   
  408910:	adc    ebx,DWORD PTR [edi-0x47fa7091]
  408916:	mov    dh,0x9e
  408918:	sub    BYTE PTR [esi-0x4b6e0d88],bh
  40891e:	mov    bh,0x28
  408920:	into   
  408921:	ds pop es
  408923:	and    bl,dl
  408925:	jno    0x4088bb
  408927:	add    DWORD PTR [esp+edx*1-0x125be087],ecx
  40892e:	ficom  WORD PTR [ecx+0x26]
  408931:	adc    BYTE PTR [eax+ebp*2],dh
  408934:	pop    edi
  408935:	jne    0x4088fd
  408937:	push   edx
  408938:	fdiv   DWORD PTR [ecx-0x50d3757e]
  40893e:	and    ebp,DWORD PTR [ebx+0x6]
  408941:	add    DWORD PTR [esi-0x6c0de473],ebp
  408947:	ucomiss xmm6,DWORD PTR [esp+ebp*1+0x65b14762]
  40894f:	std    
  408950:	mov    dl,0xa0
  408952:	sub    ch,al
  408954:	adc    ch,BYTE PTR [edi-0x1739d947]
  40895a:	push   edi
  40895b:	xchg   ecx,eax
  40895c:	inc    eax
  40895d:	pop    eax
  40895e:	lea    ebx,[ebx-0x4b3feb9b]
  408964:	test   BYTE PTR [edi-0x24026fc6],0x7c
  40896b:	push   edx
  40896c:	vpackssdw xmm1,xmm0,xmm3
  408970:	pop    esi
  408971:	call   0x9ae:0xcd07e439
  408978:	rcl    al,0x7b
  40897b:	fs aas 
  40897d:	push   cs
  40897e:	loopne 0x408973
  408980:	(bad)  
  408982:	sub    dl,BYTE PTR [edx+edi*4+0xc163200]
  408989:	or     esp,ebp
  40898b:	pop    ebx
  40898c:	hlt    
  40898d:	(bad)  
  40898e:	hlt    
  40898f:	adc    al,BYTE PTR [edx]
  408991:	and    ecx,DWORD PTR [ebp+0x7a]
  408994:	stc    
  408995:	cld    
  408996:	sub    eax,0x35b6eb22
  40899b:	xor    esp,DWORD PTR [ebx+esi*1]
  40899e:	dec    esp
  40899f:	call   DWORD PTR [esi+0x65a9c57d]
  4089a5:	mov    ds:0x78d6ac9a,al
  4089aa:	daa    
  4089ab:	jnp    0x408a15
  4089ad:	in     al,dx
  4089ae:	jmp    0x87e54b7a
  4089b3:	adc    BYTE PTR [ebx],bh
  4089b5:	jae    0x4089bc
  4089b7:	mov    eax,ds:0x4c3dfe6f
  4089bc:	daa    
  4089bd:	mov    ds:0x73a0fdf4,al
  4089c2:	into   
  4089c3:	pop    edi
  4089c4:	(bad)  
  4089c5:	push   ebp
  4089c6:	mov    cl,0x60
  4089c8:	push   ecx
  4089c9:	pop    es
  4089ca:	add    BYTE PTR [ebx-0x25],al
  4089cd:	fwait
  4089ce:	push   es
  4089cf:	mov    ebp,0xdb93d18c
  4089d4:	sbb    DWORD PTR [esp+ebp*1-0x31d11d5d],esi
  4089db:	(bad)  
  4089dc:	into   
  4089dd:	cmp    BYTE PTR [edx-0x6c365842],ch
  4089e3:	xor    DWORD PTR [eax+0x6ebc9cf8],edi
  4089e9:	and    BYTE PTR [ebx],0x53
  4089ec:	lahf   
  4089ed:	sub    DWORD PTR [edi+ecx*1],eax
  4089f0:	test   eax,0x10e189ad
  4089f5:	fisubr DWORD PTR [edi-0x35]
  4089f8:	scas   al,BYTE PTR es:[edi]
  4089f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089fa:	push   edx
  4089fb:	repz push es
  4089fd:	mov    BYTE PTR [ecx-0x224f0728],cl
  408a03:	popa   
  408a04:	inc    edi
  408a05:	pusha  
  408a06:	add    al,0x4
  408a08:	push   cs
  408a09:	(bad)  
  408a0a:	aad    0x73
  408a0c:	mov    bh,0xe7
  408a0e:	sub    DWORD PTR [esi],eax
  408a10:	test   edi,ebx
  408a12:	mov    ah,0x7c
  408a14:	inc    edx
  408a15:	int    0x59
  408a17:	dec    ebx
  408a18:	nop
  408a19:	xchg   ebp,eax
  408a1a:	rcl    DWORD PTR [edx-0x41eec2e],1
  408a20:	sub    bl,BYTE PTR cs:0x7c74c37a
  408a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a28:	aam    0x19
  408a2a:	sahf   
  408a2b:	out    0xfc,eax
  408a2d:	ds jmp 0x4f19:0xb2501c4a
  408a35:	push   0x34
  408a37:	dec    ebp
  408a38:	ror    DWORD PTR [ecx+0x21],1
  408a3b:	jno    0x408a6d
  408a3d:	imul   ecx,DWORD PTR [ebp-0x33],0x69
  408a41:	gs cmp al,0x65
  408a44:	xacquire xchg BYTE PTR [esi+0x1dd17c31],ch
  408a4b:	in     al,0x7c
  408a4d:	rcl    BYTE PTR [ebp-0x6],1
  408a50:	mov    ds:0xddcc4751,eax
  408a55:	pushf  
  408a56:	jnp    0x408a70
  408a58:	test   DWORD PTR [esi+0x39fd4d0c],esi
  408a5e:	into   
  408a5f:	into   
  408a60:	xor    cl,BYTE PTR [ebp+0x3f4bc81f]
  408a66:	outs   dx,DWORD PTR ds:[esi]
  408a67:	mov    cs,WORD PTR [edx+0x72]
  408a6a:	in     eax,dx
  408a6b:	ins    DWORD PTR es:[edi],dx
  408a6c:	(bad)  
  408a6d:	adc    al,BYTE PTR [ebx+0x32]
  408a70:	mov    ah,0x45
  408a72:	mov    edx,0x2a8f126d
  408a77:	(bad)  [ebx+edi*4]
  408a7a:	bound  edx,QWORD PTR [edi-0x15]
  408a7d:	lods   eax,DWORD PTR ds:[esi]
  408a7e:	push   ds
  408a7f:	xchg   ebp,ebx
  408a81:	icebp  
  408a82:	fidiv  DWORD PTR [ebx]
  408a84:	stc    
  408a85:	je     0x408a30
  408a87:	fxch   st(2)
  408a89:	push   ss
  408a8a:	cmc    
  408a8b:	inc    esi
  408a8c:	ret    
  408a8d:	(bad)  
  408a8e:	gs call 0xfb104c14
  408a94:	mov    dl,0xbb
  408a96:	gs loope 0x408b06
  408a99:	ss ins BYTE PTR es:[edi],dx
  408a9b:	mov    edx,0x4d6380b5
  408aa0:	jp     0x408a6f
  408aa2:	fst    DWORD PTR [edx-0x57]
  408aa5:	jns    0x408a9c
  408aa7:	sub    edi,esp
  408aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aaa:	push   0x1
  408aac:	xchg   edx,eax
  408aad:	lock push 0xfffffffa
  408ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab1:	sbb    ebx,DWORD PTR [ecx]
  408ab3:	aas    
  408ab4:	test   BYTE PTR [ecx],bh
  408ab6:	lea    ebx,[esi]
  408ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab9:	arpl   dx,sp
  408abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408abc:	loopne 0x408a9b
  408abe:	sti    
  408abf:	out    0x5f,eax
  408ac1:	jb     0x408b13
  408ac3:	inc    edi
  408ac4:	imul   edi,DWORD PTR [edi-0x1d],0xfffffff8
  408ac8:	mov    ch,BYTE PTR [edx+0x56]
  408acb:	push   edx
  408acc:	in     al,dx
  408acd:	adc    eax,0x6318d7bf
  408ad2:	jl     0x408b22
  408ad4:	gs imul ebp,ebx,0xf8d0213f
  408adb:	mov    DWORD PTR ds:0x662bd395,ebx
  408ae1:	leave  
  408ae2:	sub    esi,DWORD PTR [ecx-0x115d2315]
  408ae8:	mov    ebp,DWORD PTR [edi]
  408aea:	ins    DWORD PTR es:[edi],dx
  408aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aec:	es jb  0x408b65
  408aef:	push   ecx
  408af0:	dec    edi
  408af1:	bound  ebp,QWORD PTR [edi+eax*2-0x35]
  408af5:	call   0xd2ee4b11
  408afa:	loopne 0x408a96
  408afc:	jne    0x408abb
  408afe:	loopne 0x408a9d
  408b00:	pop    ds
  408b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b02:	push   ecx
  408b03:	push   ebp
  408b04:	sbb    eax,DWORD PTR [eax+0x2]
  408b07:	and    al,0x5a
  408b09:	sahf   
  408b0a:	lods   al,BYTE PTR ds:[esi]
  408b0b:	add    bh,BYTE PTR [bp+0x7c]
  408b0f:	out    dx,eax
  408b10:	mov    ds:0x7138820d,eax
  408b15:	mov    eax,ds:0x8d26b918
  408b1a:	push   edx
  408b1b:	repz mov dh,BYTE PTR [edx-0xb]
  408b1f:	ret    0xe477
  408b22:	in     al,0x64
  408b24:	das    
  408b25:	gs jnp 0x408af5
  408b28:	mov    dl,0x5d
  408b2a:	jg     0x408ab6
  408b2c:	repnz repz add al,0x1e
  408b30:	clc    
  408b31:	in     al,0x34
  408b33:	aam    0xfa
  408b35:	ds icebp 
  408b37:	lock sub ch,BYTE PTR [eax]
  408b3a:	mov    esp,edi
  408b3c:	mov    edx,0xc3707613
  408b41:	out    dx,eax
  408b42:	retf   
  408b43:	adc    eax,0xe7cd8e01
  408b48:	xchg   ecx,eax
  408b49:	and    ch,BYTE PTR [edi-0x2792c5af]
  408b4f:	add    DWORD PTR [edi+0x476eed25],esp
  408b55:	cmp    al,0x33
  408b57:	call   0xbfc6e52c
  408b5c:	test   eax,0x5abac642
  408b61:	add    ebx,DWORD PTR [ebx+0x47]
  408b64:	cdq    
  408b65:	out    dx,al
  408b66:	pop    ds
  408b67:	sbb    ecx,DWORD PTR [eax+0x5c]
  408b6a:	and    edx,ebx
  408b6c:	jb     0x408b72
  408b6e:	ret    0x48a2
  408b71:	jne    0x408b00
  408b73:	(bad)  
  408b74:	ficomp DWORD PTR [edx-0x6d8edb2c]
  408b7a:	(bad)  
  408b7b:	icebp  
  408b7c:	nop    ebx
  408b7f:	push   cs
  408b80:	and    DWORD PTR [ebp-0x2],esp
  408b83:	or     BYTE PTR [ebp-0x5e],dl
  408b86:	cwde   
  408b87:	std    
  408b88:	pop    edi
  408b89:	in     eax,0xb3
  408b8b:	out    0x71,al
  408b8d:	jl     0x408b6d
  408b8f:	test   bh,dh
  408b91:	das    
  408b92:	and    esp,DWORD PTR [eax+0x46]
  408b95:	jnp    0x408b48
  408b97:	jmp    0x408be0
  408b99:	jmp    DWORD PTR [ecx]
  408b9b:	sbb    esp,ebp
  408b9d:	aas    
  408b9e:	int3   
  408b9f:	mov    al,ds:0x98e4de57
  408ba4:	jmp    FWORD PTR [esi-0x7a5ef71a]
  408baa:	(bad)  [ebx]
  408bac:	mov    dl,al
  408bae:	out    0x98,al
  408bb0:	retf   
  408bb1:	dec    esp
  408bb2:	xor    eax,0xc62edf8
  408bb7:	clc    
  408bb8:	jmp    0x757f:0x63dbd9e
  408bbf:	loope  0x408b63
  408bc1:	sub    BYTE PTR [ecx],0x12
  408bc4:	jns    0x408b72
  408bc6:	mov    ebx,DWORD PTR [esi-0x3f]
  408bc9:	sbb    eax,0x70172415
  408bce:	pop    ds
  408bcf:	sub    ecx,edi
  408bd1:	mov    ds:0xbb8fb527,al
  408bd6:	sub    BYTE PTR [ecx],ch
  408bd8:	xchg   dl,bl
  408bda:	xor    BYTE PTR [esp+ebp*8+0x40],al
  408bde:	rol    DWORD PTR [eax+0x3b],0x8
  408be2:	xchg   edi,eax
  408be3:	and    BYTE PTR ds:0x3e73cd15,dl
  408be9:	or     al,0xc8
  408beb:	mov    DWORD PTR [ebp-0x71],ebp
  408bee:	mov    BYTE PTR [edx-0x3a],bl
  408bf1:	iret   
  408bf2:	add    bh,BYTE PTR [eax+0x76ffa9c3]
  408bf8:	aaa    
  408bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bfa:	pop    eax
  408bfb:	test   al,0x2d
  408bfd:	mov    bl,0x5a
  408bff:	(bad)  
  408c00:	call   0x6b92a3e7
  408c05:	(bad)  
  408c06:	jl     0x408c35
  408c08:	lahf   
  408c09:	push   ds
  408c0a:	jns    0x408ba6
  408c0c:	or     ecx,DWORD PTR [eax]
  408c0e:	inc    esp
  408c0f:	cmp    al,0x8
  408c11:	loop   0x408c58
  408c13:	and    al,0xd6
  408c15:	(bad)  
  408c16:	pusha  
  408c17:	arpl   WORD PTR [edx-0x27a0d213],bp
  408c1d:	ficomp DWORD PTR [ebx+0x6ecda401]
  408c23:	dec    ebp
  408c24:	and    dh,ah
  408c26:	dec    eax
  408c27:	loop   0x408c0a
  408c29:	pop    ecx
  408c2a:	mov    eax,ds:0x4d29b867
  408c2f:	xchg   DWORD PTR [edx],eax
  408c31:	iret   
  408c32:	pop    ebp
  408c33:	icebp  
  408c34:	inc    esi
  408c35:	add    BYTE PTR [eax],dh
  408c37:	aaa    
  408c38:	sub    al,0xa6
  408c3a:	imul   edi,DWORD PTR [ebp+0xa],0x75
  408c3e:	inc    esi
  408c3f:	sub    al,0x4c
  408c41:	repnz and eax,esp
  408c44:	punpcklbw mm6,DWORD PTR [ecx+0x5880cde0]
  408c4b:	xor    DWORD PTR [ecx+0x7b],ebp
  408c4e:	lods   eax,DWORD PTR ds:[esi]
  408c4f:	ja     0x408c39
  408c51:	pop    edi
  408c52:	scas   eax,DWORD PTR es:[edi]
  408c53:	and    al,0x6
  408c55:	sahf   
  408c56:	adc    al,0x36
  408c58:	push   ebp
  408c59:	add    eax,DWORD PTR [edi-0x55]
  408c5c:	pop    es
  408c5d:	sbb    DWORD PTR [ecx-0x3b],esi
  408c60:	(bad)  
  408c61:	jo     0x408c5b
  408c63:	sub    BYTE PTR [ebx-0x2e268df5],bh
  408c69:	imul   edi,DWORD PTR [eax],0xe
  408c6c:	inc    esi
  408c6d:	adc    eax,0xe31abf24
  408c72:	mul    BYTE PTR [eax+0x1eb9499c]
  408c78:	adc    cl,BYTE PTR [eax]
  408c7a:	xchg   ecx,eax
  408c7b:	mov    al,ds:0x67ede5fe
  408c80:	mov    ds:0x7cb68527,al
  408c85:	aad    0x7d
  408c87:	mov    ds:0xf1d2f5db,eax
  408c8c:	jnp    0x408cbb
  408c8e:	mov    esp,0x663a7fc7
  408c93:	fwait
  408c94:	in     al,dx
  408c95:	pop    ds
  408c96:	pushf  
  408c97:	add    BYTE PTR [edx+0x9],bl
  408c9a:	(bad)  
  408c9b:	adc    BYTE PTR [ecx],al
  408c9d:	jb     0x408d1b
  408c9f:	pusha  
  408ca0:	add    eax,0xd1fecd8e
  408ca5:	popa   
  408ca6:	push   ecx
  408ca7:	jne    0x408cf3
  408ca9:	mov    bl,0x72
  408cab:	cli    
  408cac:	sahf   
  408cad:	push   0xffffffc7
  408caf:	mov    ebx,0xfbb49ea8
  408cb4:	mov    ecx,0xfadd19f8
  408cb9:	pop    ss
  408cba:	imul   esp,edi,0x411d99f
  408cc0:	mov    WORD PTR [ecx-0x9333f3],cs
  408cc6:	and    BYTE PTR [eax-0x7],dl
  408cc9:	aam    0x4
  408ccb:	sbb    eax,0x3888f9c0
  408cd0:	call   0x2d44066d
  408cd5:	in     al,dx
  408cd6:	inc    edx
  408cd7:	push   ecx
  408cd8:	test   al,0x68
  408cda:	mov    cl,cl
  408cdc:	and    eax,0x55f5a46a
  408ce1:	pushf  
  408ce2:	push   cs
  408ce3:	sub    al,0x55
  408ce5:	mov    cl,0x7e
  408ce7:	mov    esi,0xcc21d9c8
  408cec:	in     al,dx
  408ced:	aad    0xb0
  408cef:	xlat   BYTE PTR ds:[ebx]
  408cf0:	mov    ch,0x97
  408cf2:	test   ah,ch
  408cf4:	mov    edi,0xa8228ac6
  408cf9:	retf   0x237e
  408cfc:	mov    fs,WORD PTR [ebx+0x33b9c8c5]
  408d02:	lock sbb ebp,DWORD PTR [edi]
  408d05:	lods   eax,DWORD PTR ds:[esi]
  408d06:	aam    0xad
  408d08:	mov    ?,ebp
  408d0a:	sub    eax,0xc710a722
  408d0f:	loop   0x408ca4
  408d11:	cmp    eax,0xf8ad72f4
  408d16:	pushf  
  408d17:	fisubr WORD PTR [edx-0x6d858f5a]
  408d1d:	adc    al,0x69
  408d1f:	jne    0x408cbc
  408d21:	pop    eax
  408d22:	mov    BYTE PTR [esi-0x42],bl
  408d25:	out    0x68,al
  408d27:	ss inc ebp
  408d29:	xor    DWORD PTR [esi],edi
  408d2b:	mov    eax,ds:0x4595ef45
  408d30:	jge    0x408d69
  408d32:	push   esp
  408d33:	fldcw  WORD PTR [ebx-0x6e]
  408d36:	add    BYTE PTR [edi+0x45],cl
  408d39:	je     0x408cbb
  408d3b:	or     eax,0x1cad12d9
  408d40:	popa   
  408d41:	inc    ebx
  408d42:	adc    eax,0x6dba3783
  408d47:	push   0x1c
  408d49:	leave  
  408d4a:	mov    ebx,edx
  408d4c:	adc    DWORD PTR [edi],eax
  408d4e:	dec    esp
  408d4f:	inc    eax
  408d50:	pop    ds
  408d51:	adc    esp,edx
  408d53:	xchg   esi,eax
  408d54:	sub    esi,DWORD PTR [esi+edx*1-0x79]
  408d58:	and    ecx,DWORD PTR [ebx-0x65b42832]
  408d5e:	push   edx
  408d5f:	push   edi
  408d60:	xor    ch,dl
  408d62:	mov    al,ds:0x68c0709f
  408d67:	add    bl,BYTE PTR [esi]
  408d69:	iret   
  408d6a:	in     al,0xf
  408d6c:	push   esp
  408d6d:	push   ebx
  408d6e:	xchg   cl,al
  408d70:	pop    edx
  408d71:	in     al,0x5d
  408d73:	mov    al,0x55
  408d75:	ret    0x748a
  408d78:	enter  0xec5a,0xf2
  408d7c:	out    dx,al
  408d7d:	mov    cl,0x64
  408d7f:	jge    0x408dad
  408d81:	popf   
  408d82:	lock in eax,0x49
  408d85:	sub    bl,BYTE PTR [esi]
  408d87:	sub    edx,ebp
  408d89:	lds    ebp,FWORD PTR [ecx]
  408d8b:	sahf   
  408d8c:	and    bl,dh
  408d8e:	push   edi
  408d8f:	loopne 0x408df7
  408d91:	lods   al,BYTE PTR ds:[esi]
  408d92:	rcl    BYTE PTR [esi-0x4d97df11],cl
  408d98:	add    BYTE PTR [ecx-0x11ac00d0],dh
  408d9e:	stos   BYTE PTR es:[edi],al
  408d9f:	clc    
  408da0:	add    DWORD PTR [edx+0x15],ecx
  408da3:	fbstp  TBYTE PTR [ebp+ecx*8-0x4f1a923e]
  408daa:	mov    ch,0xf9
  408dac:	push   ebx
  408dad:	push   eax
  408dae:	rol    BYTE PTR [eax-0xb],cl
  408db1:	adc    edx,ecx
  408db3:	jg     0x408d71
  408db5:	retf   0x23b
  408db8:	adc    DWORD PTR [edi-0x30],esp
  408dbb:	mov    ?,WORD PTR [edx]
  408dbd:	test   DWORD PTR [edi],ebx
  408dbf:	or     cl,BYTE PTR [ecx-0x37]
  408dc2:	imul   ecx,DWORD PTR [ecx-0x41],0xa6306df9
  408dc9:	push   DWORD PTR [edx]
  408dcb:	ret    
  408dcc:	add    eax,0x1e56af27
  408dd1:	test   esp,ecx
  408dd3:	mov    ch,dl
  408dd5:	xor    DWORD PTR [ebp-0x23],eax
  408dd8:	push   ecx
  408dd9:	mov    eax,fs
  408ddb:	jp     0x408de4
  408ddd:	in     eax,dx
  408dde:	cmp    DWORD PTR [esp+ecx*8+0x65],esp
  408de2:	fnstsw ax
  408de4:	enter  0x9631,0x82
  408de8:	repnz mov esi,0x8b59d903
  408dee:	sub    ebx,ecx
  408df0:	add    eax,0xb607e757
  408df5:	mov    bh,0xd9
  408df7:	push   cs
  408df8:	int3   
  408df9:	lds    eax,FWORD PTR [edi-0x1d47ed49]
  408dff:	push   ds
  408e00:	enter  0xc06f,0xfb
  408e04:	ins    DWORD PTR es:[edi],dx
  408e05:	sahf   
  408e06:	out    0x23,al
  408e08:	xor    ch,BYTE PTR [ebx+0x3dc56d7c]
  408e0e:	sub    eax,0xbb0ce3ff
  408e13:	daa    
  408e14:	aad    0xc
  408e16:	popf   
  408e17:	sbb    DWORD PTR [edi+0x13cc959],0xffffffe8
  408e1e:	iret   
  408e1f:	das    
  408e20:	out    dx,eax
  408e21:	lods   eax,DWORD PTR ds:[esi]
  408e22:	js     0x408dc5
  408e24:	enter  0xf4fa,0x2c
  408e28:	je     0x408dbb
  408e2a:	call   0xc667:0x3d42bfc8
  408e31:	sbb    dl,BYTE PTR [edi]
  408e33:	stc    
  408e34:	pop    eax
  408e35:	add    bl,BYTE PTR [edx+0x6a24d9e7]
  408e3b:	jge    0x408eac
  408e3d:	ss fdivp st(3),st
  408e40:	test   BYTE PTR [edi+0x2f788c20],ch
  408e46:	sbb    ah,BYTE PTR ds:0x21f34d21
  408e4c:	fs clc 
  408e4e:	sub    ebp,esi
  408e50:	ins    DWORD PTR es:[edi],dx
  408e51:	and    al,0x83
  408e53:	add    eax,0x9ea593f7
  408e58:	fsub   DWORD PTR [edx-0x42]
  408e5b:	push   0x2a
  408e5d:	xchg   esi,eax
  408e5e:	push   esi
  408e5f:	push   ebx
  408e60:	xor    eax,0x78d5f9df
  408e65:	sbb    BYTE PTR [esi+eax*4-0x4f2a705c],ah
  408e6c:	xor    DWORD PTR [edx],ebx
  408e6e:	(bad)  
  408e70:	sbb    DWORD PTR [ebx*8+0x7669e8da],edi
  408e77:	mov    ch,0x9b
  408e79:	pop    ebp
  408e7a:	dec    ebx
  408e7b:	sbb    eax,0x281522b0
  408e80:	leave  
  408e81:	scas   al,BYTE PTR es:[edi]
  408e82:	jns    0x408eaa
  408e84:	in     al,dx
  408e85:	das    
  408e86:	mov    al,0x87
  408e88:	arpl   WORD PTR [ecx],sp
  408e8a:	mov    ch,0xd
  408e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e8d:	xor    DWORD PTR [eax],ebp
  408e8f:	xchg   ebp,eax
  408e90:	xchg   edx,eax
  408e91:	jb     0x408ee7
  408e93:	adc    al,0xb5
  408e95:	xchg   esi,eax
  408e96:	mov    ebx,0x4837831b
  408e9b:	push   esi
  408e9c:	test   al,0xab
  408e9e:	bound  edx,QWORD PTR [edi]
  408ea0:	repnz add BYTE PTR [ebx],0xa7
  408ea4:	xchg   edx,eax
  408ea5:	iret   
  408ea6:	jae    0x408e70
  408ea8:	push   ss
  408ea9:	cli    
  408eaa:	xchg   BYTE PTR [eax-0xd13cf8c],cl
  408eb0:	jbe    0x408eb7
  408eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb3:	mov    edi,0x460c883d
  408eb8:	jae    0x408f1f
  408eba:	test   BYTE PTR [ebp+0x7e5ec006],bh
  408ec0:	inc    esi
  408ec1:	(bad)  
  408ec2:	popa   
  408ec3:	scas   eax,DWORD PTR es:[edi]
  408ec4:	ficomp DWORD PTR [ecx+0x4f997102]
  408eca:	repz push 0xffffffa7
  408ecd:	fdivr  DWORD PTR [esi-0x35]
  408ed0:	dec    esi
  408ed1:	stos   DWORD PTR es:[edi],eax
  408ed2:	enter  0x566e,0x59
  408ed6:	and    al,0x1
  408ed8:	in     al,0x6b
  408eda:	xchg   edi,eax
  408edb:	lods   eax,DWORD PTR ds:[esi]
  408edc:	call   0xb746754d
  408ee1:	popf   
  408ee2:	cmp    al,0x1f
  408ee4:	jmp    0x8f619a5e
  408ee9:	nop    esi
  408eec:	or     DWORD PTR [ecx+0x30af4720],ebx
  408ef2:	(bad)  
  408ef3:	jecxz  0x408f16
  408ef5:	add    DWORD PTR [esp+esi*1-0x1e],esi
  408ef9:	xchg   edx,eax
  408efa:	or     al,0xfa
  408efc:	retf   
  408efd:	call   0xa0d5:0x5fd94ff5
  408f04:	and    al,0x97
  408f06:	push   esp
  408f07:	sar    BYTE PTR [ebx-0xb],cl
  408f0a:	sbb    edi,DWORD PTR [esi]
  408f0c:	jge    0x408f38
  408f0e:	dec    ecx
  408f0f:	out    dx,eax
  408f10:	call   DWORD PTR [ecx-0x4a6ae2cd]
  408f16:	mov    dh,0xae
  408f18:	popa   
  408f19:	popf   
  408f1a:	inc    edi
  408f1b:	cmp    bh,BYTE PTR [ecx+0x6c]
  408f1e:	inc    ebp
  408f1f:	(bad)  
  408f21:	jae    0x408f4e
  408f23:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f25:	push   es
  408f26:	popa   
  408f27:	mov    bh,0x60
  408f29:	xchg   edx,eax
  408f2a:	sub    eax,DWORD PTR [ebx+0x1e8e2dcc]
  408f30:	stos   DWORD PTR es:[edi],eax
  408f31:	imul   ebp,DWORD PTR [ebx-0x2e6687fe],0xffffffb8
  408f38:	jle    0x408f1b
  408f3a:	mov    ebp,0x507cb9d8
  408f3f:	test   bh,0x9a
  408f42:	ja     0x408f25
  408f44:	retf   
  408f45:	inc    esi
  408f46:	clc    
  408f47:	sahf   
  408f48:	jno    0x408f98
  408f4a:	fistp  QWORD PTR [ecx+ebp*1-0x5b6b83f1]
  408f51:	ret    
  408f52:	sub    al,BYTE PTR [esi+ebp*8-0x6bd4b28a]
  408f59:	icebp  
  408f5a:	mov    eax,ds:0xc15cba29
  408f5f:	or     eax,0x1e7a16a8
  408f64:	fnsave [edx-0x3c]
  408f67:	fs push 0x51d4abae
  408f6d:	sbb    al,0x75
  408f6f:	aaa    
  408f70:	push   cs
  408f71:	rcl    BYTE PTR [edx+0x7b],1
  408f74:	mov    ecx,0x8cdd2b95
  408f79:	cmp    DWORD PTR ds:0xc21212f5,esp
  408f7f:	sub    al,0x5
  408f81:	mov    ss,WORD PTR [edx+ecx*2+0x34c5a9d5]
  408f88:	shl    DWORD PTR [esi],0x8a
  408f8b:	sbb    eax,0x82374843
  408f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f91:	call   0x8269:0xf44a3808
  408f98:	pop    ss
  408f99:	shr    DWORD PTR [ebp-0x69],1
  408f9c:	xchg   DWORD PTR [edi],ecx
  408f9e:	pop    esi
  408f9f:	dec    edi
  408fa0:	xchg   DWORD PTR [esp+0x55],ebp
  408fa4:	inc    esi
  408fa5:	inc    ebx
  408fa6:	adc    al,0x6b
  408fa8:	cmp    eax,DWORD PTR [eax+0x39]
  408fab:	cld    
  408fac:	std    
  408fad:	and    BYTE PTR [ebp-0x799e721e],bh
  408fb3:	cs call 0x2fbffbce
  408fb9:	lock add al,0x57
  408fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fbe:	sub    DWORD PTR [ebx+0x14b4189f],edx
  408fc4:	or     eax,esp
  408fc6:	cmc    
  408fc7:	xor    BYTE PTR [ebx-0x3fce7234],bl
  408fcd:	add    DWORD PTR [ebp+0x2b769969],ebx
  408fd3:	sub    BYTE PTR [edx+0x3d],dh
  408fd6:	(bad)  
  408fd7:	inc    ecx
  408fd8:	xchg   BYTE PTR ds:0x454c120,cl
  408fde:	sbb    eax,0x44b5c15d
  408fe3:	jno    0x409014
  408fe5:	fistp  DWORD PTR [edi+ebx*2-0x28]
  408fe9:	dec    esi
  408fea:	vmptrst QWORD PTR [ebp+0x7e]
  408fee:	sub    al,0x27
  408ff0:	add    dh,BYTE PTR [edi+0x371e97cc]
  408ff6:	stos   DWORD PTR es:[edi],eax
  408ff7:	jmp    0x409026
  408ff9:	push   ss
  408ffa:	xor    al,0xc2
  408ffc:	sbb    esp,ecx
  408ffe:	mov    eax,ds:0x23d099c3
  409003:	aaa    
  409004:	sub    eax,0x99c0f3a2
  409009:	cmp    ch,ch
  40900b:	mov    dh,0x7a
  40900d:	mov    bl,bh
  40900f:	sub    ebx,DWORD PTR [edx-0x10]
  409012:	push   ds
  409013:	push   ecx
  409014:	ins    BYTE PTR es:[edi],dx
  409015:	mov    bl,0x64
  409017:	test   eax,0x676fb057
  40901c:	cmp    BYTE PTR [ebx-0x1143d3b5],dl
  409022:	fsubp  st(2),st
  409024:	das    
  409025:	(bad)  
  409026:	fcmove st,st(5)
  409028:	xor    al,0x71
  40902a:	(bad)  
  40902b:	cld    
  40902c:	inc    esi
  40902d:	int3   
  40902e:	mov    eax,ds:0x4bc93774
  409033:	cmp    ebp,DWORD PTR [esi]
  409035:	aad    0x68
  409037:	fwait
  409038:	(bad)  
  409039:	push   edi
  40903a:	push   esi
  40903b:	dec    esi
  40903c:	sbb    BYTE PTR [ecx],0x48
  40903f:	jge    0x409077
  409041:	fisub  DWORD PTR [eax]
  409043:	dec    ecx
  409044:	bound  eax,QWORD PTR [edi+0x48c56dd0]
  40904a:	adc    eax,0x4f3efd9c
  40904f:	pop    es
  409050:	xor    bl,BYTE PTR [edi-0x49]
  409053:	jnp    0x409071
  409055:	out    0x2f,al
  409057:	cmp    al,0xcf
  409059:	dec    esi
  40905a:	fld    QWORD PTR [ebp-0x420be333]
  409060:	jae    0x40901f
  409062:	retf   
  409063:	sub    al,0xa8
  409065:	rcl    BYTE PTR gs:[ebx],cl
  409068:	fdivr  st,st(4)
  40906a:	hlt    
  40906b:	popf   
  40906c:	xor    BYTE PTR [ecx+eax*2+0x74bded92],0x4
  409074:	mov    edi,0xca6f3429
  409079:	test   ch,ch
  40907b:	pop    eax
  40907c:	fcom   QWORD PTR [ebx+eiz*1-0x7]
  409080:	jmp    0xea0a:0xcdadc802
  409087:	es inc ebx
  409089:	sub    DWORD PTR [ebp+ebx*1+0x49],edx
  40908d:	jp     0x4090b2
  40908f:	(bad)  
  409090:	pop    ebx
  409091:	leave  
  409092:	stos   BYTE PTR es:[edi],al
  409093:	push   es
  409094:	mov    al,0xf
  409096:	add    edi,DWORD PTR [esi+ecx*8-0x28]
  40909a:	fld    DWORD PTR [edi+0x51]
  40909d:	into   
  40909e:	cmp    ebp,esi
  4090a0:	or     eax,0x95fa5471
  4090a5:	das    
  4090a6:	push   edi
  4090a7:	jno    0x40905d
  4090a9:	mov    bl,0x66
  4090ab:	sbb    al,0x1
  4090ad:	test   BYTE PTR [ecx+eiz*2],ah
  4090b0:	pop    eax
  4090b1:	mov    dl,0xf7
  4090b3:	mov    edx,es
  4090b5:	push   eax
  4090b6:	push   esi
  4090b7:	std    
  4090b8:	retf   0xd3fc
  4090bb:	jl     0x409102
  4090bd:	inc    edi
  4090be:	psllw  mm3,QWORD PTR [esi+0x19]
  4090c2:	or     DWORD PTR [eax],ebx
  4090c4:	adc    dl,BYTE PTR [esi-0x42]
  4090c7:	jecxz  0x4090fe
  4090c9:	aam    0x18
  4090cb:	cmp    al,0x1d
  4090cd:	cmp    ecx,DWORD PTR [edx+0x38]
  4090d0:	js     0x40910b
  4090d2:	out    0x99,al
  4090d4:	in     eax,0x80
  4090d6:	cmp    al,BYTE PTR [ebx+0x13]
  4090d9:	hlt    
  4090da:	inc    ebx
  4090db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090dc:	xchg   BYTE PTR [ecx+0x5f02cd32],cl
  4090e2:	fs pop ebx
  4090e4:	pop    ecx
  4090e5:	mov    ebx,0xc32f02f3
  4090ea:	(bad)  
  4090eb:	jecxz  0x409110
  4090ed:	rol    BYTE PTR [esi],1
  4090ef:	inc    ebp
  4090f0:	xchg   ecx,eax
  4090f1:	or     eax,esi
  4090f3:	dec    edi
  4090f4:	lds    ecx,FWORD PTR [eax+0x3bf8e51e]
  4090fa:	sub    al,0x7f
  4090fc:	cmp    al,0x53
  4090fe:	out    dx,eax
  4090ff:	lods   al,BYTE PTR ds:[esi]
  409100:	jmp    0xc04b:0x554304b2
  409107:	mov    esp,edi
  409109:	push   0xffffffdc
  40910b:	fidiv  DWORD PTR [ebx]
  40910d:	iret   
  40910e:	fwait
  40910f:	jns    0x409177
  409111:	in     al,dx
  409112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409113:	in     al,dx
  409114:	jb     0x4090bf
  409116:	jns    0x4090e1
  409118:	js     0x4090c3
  40911a:	(bad)  
  40911b:	outs   dx,DWORD PTR ds:[esi]
  40911c:	or     al,0xbe
  40911e:	inc    edi
  40911f:	js     0x4090af
  409121:	rcl    DWORD PTR [esi-0x2],0xf2
  409125:	jg     0x409186
  409127:	rcr    DWORD PTR [edx],0xc7
  40912a:	int3   
  40912b:	or     BYTE PTR [esi+0x4f],ch
  40912e:	jecxz  0x40910b
  409130:	out    dx,eax
  409131:	xchg   esi,eax
  409132:	xchg   edx,eax
  409133:	ss leave 
  409135:	xor    ch,BYTE PTR [ebx+0x3cce34ab]
  40913b:	xchg   DWORD PTR [eax],edx
  40913d:	loop   0x4090fb
  40913f:	and    DWORD PTR ds:0x353ffd0a,ebp
  409145:	mov    ds:0xfaba3fff,al
  40914b:	popa   
  40914c:	fdivr  st(3),st
  40914e:	pop    eax
  40914f:	pop    es
  409150:	cmp    eax,0x44830faf
  409155:	mov    es,WORD PTR [edi]
  409157:	fidivr DWORD PTR [ebx]
  409159:	or     al,BYTE PTR ds:0x83335f23
  40915f:	mov    dh,dh
  409161:	test   eax,0xb8cbd6ac
  409166:	lahf   
  409167:	jno    0x409182
  409169:	pushf  
  40916a:	adc    edi,DWORD PTR [ebx+0x4b]
  40916d:	lods   al,BYTE PTR ds:[esi]
  40916e:	out    0xf9,al
  409170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409171:	xchg   esi,eax
  409172:	pop    ebp
  409173:	mov    ecx,0xe38b5a6b
  409178:	cmp    ebp,DWORD PTR [ebx-0x7b20723e]
  40917e:	enter  0x318d,0x29
  409182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409183:	mov    eax,0x7a2dd487
  409189:	(bad)  
  40918a:	jae    0x409170
  40918c:	nop
  40918d:	push   ds
  40918e:	je     0x4091c7
  409190:	xchg   ecx,eax
  409191:	sbb    eax,0x6eef4805
  409196:	cmp    al,0xc6
  409198:	and    esi,DWORD PTR ss:[edx]
  40919b:	push   esp
  40919c:	mov    ebp,0x367da85f
  4091a1:	int    0xc
  4091a3:	mov    eax,ds:0xe65c5676
  4091a8:	int3   
  4091a9:	jle    0x409185
  4091ab:	sbb    al,0x19
  4091ad:	(bad)  
  4091af:	(bad)  
  4091b0:	mov    eax,0x12b08369
  4091b5:	fsub   st(5),st
  4091b7:	dec    esi
  4091b8:	rcr    DWORD PTR [eax+edx*1],1
  4091bb:	adc    esp,DWORD PTR [eax+0x10]
  4091be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091bf:	and    DWORD PTR [edi],0x78
  4091c2:	dec    edi
  4091c3:	in     al,dx
  4091c4:	ja     0x4091df
  4091c6:	adc    BYTE PTR [edx+ebx*4],ch
  4091c9:	xchg   ebx,eax
  4091ca:	outs   dx,BYTE PTR ds:[esi]
  4091cb:	mov    ah,0xde
  4091cd:	cmp    BYTE PTR [ecx+0x41],dl
  4091d0:	xor    eax,0xa59ce418
  4091d5:	xchg   ebp,eax
  4091d6:	sbb    DWORD PTR [ecx],ebp
  4091d8:	sbb    dh,BYTE PTR [edx+0x23417109]
  4091de:	mov    WORD PTR [edx-0x47],cs
  4091e1:	adc    eax,ebp
  4091e3:	jo     0x4091ff
  4091e5:	xchg   DWORD PTR [eax+ecx*1-0x12ddd68a],esp
  4091ec:	mov    DWORD PTR [ecx-0x1582a34e],ebp
  4091f2:	push   ds
  4091f3:	loope  0x409233
  4091f5:	fmul   QWORD PTR [edi+0x102629fb]
  4091fb:	les    ebp,FWORD PTR [esi-0x38]
  4091fe:	es push 0xffffff92
  409201:	and    DWORD PTR [edi-0x5dd5614d],eax
  409207:	mov    ds:0xcd8b520a,al
  40920c:	mov    ds:0x52d83bfb,al
  409211:	jbe    0x409275
  409213:	xchg   ebx,eax
  409214:	adc    eax,DWORD PTR [edi+ebx*4+0x5b]
  409218:	lock test al,0x5f
  40921b:	or     BYTE PTR [eax+0x20],dh
  40921e:	mov    esp,0x96ab7258
  409223:	xchg   edx,eax
  409224:	and    cl,BYTE PTR [ecx+0x36]
  409227:	jecxz  0x4091e8
  409229:	push   ecx
  40922a:	mov    esi,0x654fbf2a
  40922f:	mov    DWORD PTR [ebx-0x73107f84],edi
  409235:	rcr    BYTE PTR [ebx+esi*8],cl
  409238:	icebp  
  409239:	fnstcw WORD PTR [edi+0x5e]
  40923c:	(bad)  
  40923d:	rol    BYTE PTR [edx],cl
  40923f:	adc    eax,0x9c19f406
  409244:	enter  0xc1ea,0x49
  409248:	or     al,0xd3
  40924a:	out    0xe4,eax
  40924c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924d:	add    ebx,esi
  40924f:	xchg   BYTE PTR [edx],ch
  409251:	lods   al,BYTE PTR ds:[esi]
  409252:	in     al,dx
  409253:	popa   
  409254:	dec    esi
  409255:	hlt    
  409256:	sahf   
  409257:	loopne 0x4091e2
  409259:	sbb    ebp,DWORD PTR [ebx-0x45]
  40925c:	imul   edi,DWORD PTR [edi],0xb4d11d77
  409262:	mov    bh,0x8a
  409264:	stos   BYTE PTR es:[edi],al
  409265:	sbb    al,0xc2
  409267:	mov    al,0xa6
  409269:	adc    eax,0x87b2875f
  40926e:	int    0x93
  409270:	outs   dx,BYTE PTR ds:[esi]
  409271:	arpl   WORD PTR [eax-0x80],bx
  409274:	push   eax
  409275:	jecxz  0x4092e1
  409277:	xchg   edi,eax
  409278:	mov    ah,0xb8
  40927a:	ins    DWORD PTR es:[edi],dx
  40927b:	jno    0x409246
  40927d:	lods   eax,DWORD PTR ds:[esi]
  40927e:	sbb    BYTE PTR [ecx-0x6a31d355],bl
  409284:	int3   
  409285:	div    BYTE PTR [ecx+0x15]
  409288:	scas   al,BYTE PTR es:[edi]
  409289:	inc    ecx
  40928a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40928b:	pop    ss
  40928c:	dec    esi
  40928d:	jl     0x40928b
  40928f:	call   0x1c94535
  409294:	in     eax,dx
  409295:	aaa    
  409296:	addr16 mov esi,0x8708568e
  40929c:	nop
  40929d:	jb     0x4092aa
  40929f:	inc    eax
  4092a0:	enter  0x343a,0x2d
  4092a4:	(bad)  
  4092a5:	dec    edx
  4092a6:	retf   
  4092a7:	or     eax,0xa83a1e1f
  4092ac:	aad    0xe4
  4092ae:	mov    ch,0x18
  4092b0:	pop    ds
  4092b1:	xor    esi,DWORD PTR [ebx+0x15]
  4092b4:	shl    BYTE PTR [esp+ebp*4-0x34],1
  4092b8:	push   ecx
  4092b9:	std    
  4092ba:	push   eax
  4092bb:	das    
  4092bc:	lods   eax,DWORD PTR ds:[esi]
  4092bd:	xchg   DWORD PTR [edx-0xea1e483],ecx
  4092c3:	call   DWORD PTR [ecx]
  4092c5:	rcr    DWORD PTR [ecx],cl
  4092c7:	ss push esp
  4092c9:	adc    DWORD PTR [eax*8-0x411ac6a3],esp
  4092d0:	lds    edx,FWORD PTR [edx-0x7ffd9076]
  4092d6:	adc    ebp,DWORD PTR [edx+ebx*2+0x32952dbb]
  4092dd:	pusha  
  4092de:	cmp    al,bh
  4092e0:	mov    ah,0x9
  4092e2:	pop    edx
  4092e3:	mov    BYTE PTR [edi],cl
  4092e5:	scas   al,BYTE PTR es:[edi]
  4092e6:	lahf   
  4092e7:	push   edx
  4092e8:	clc    
  4092e9:	push   ebp
  4092ea:	xor    DWORD PTR [edx],esi
  4092ec:	sbb    eax,0x23ff282b
  4092f1:	and    BYTE PTR ds:0x34cd244f,dh
  4092f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f8:	inc    edx
  4092f9:	push   ss
  4092fa:	add    bl,bh
  4092fc:	rol    ah,1
  4092fe:	xor    DWORD PTR [ebp+0x68d797fb],ebx
  409304:	pop    ebx
  409305:	mov    ds:0x68ae35fe,al
  40930a:	aaa    
  40930b:	out    dx,al
  40930c:	adc    ah,BYTE PTR gs:[edx]
  40930f:	mov    ecx,0x7b66a13
  409314:	sub    cl,dl
  409316:	in     al,dx
  409317:	dec    esi
  409318:	or     BYTE PTR [ebp+0x70a04437],al
  40931e:	sub    ebp,DWORD PTR [edx-0x73]
  409321:	jmp    0x19e:0xe438f461
  409328:	add    DWORD PTR [ecx-0xb],edi
  40932b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40932c:	jns    0x40930b
  40932e:	js     0x40938a
  409330:	jg     0x4093af
  409332:	leave  
  409333:	aam    0xe5
  409335:	fwait
  409336:	push   edi
  409337:	sbb    DWORD PTR [ebp-0x23],edx
  40933a:	pop    es
  40933b:	pushf  
  40933c:	(bad)  
  40933d:	mov    ebp,0xaf7e59e2
  409342:	inc    esp
  409343:	sbb    esp,DWORD PTR [edx]
  409345:	call   DWORD PTR [ecx+esi*2-0x4a50acc5]
  40934c:	(bad)  
  40934d:	cmc    
  40934e:	fsubr  st(2),st
  409350:	sbb    DWORD PTR [eax-0x29],ebp
  409353:	add    bl,bh
  409355:	adc    eax,0xffffffb6
  409358:	cwde   
  409359:	ins    BYTE PTR es:[edi],dx
  40935a:	mov    edx,0xe9f69eb7
  40935f:	fisttp DWORD PTR [edi]
  409361:	add    eax,0x8fe9f837
  409366:	in     al,0xd2
  409368:	mov    ds:0x6a7e3a0e,al
  40936d:	mov    dl,0xfc
  40936f:	pop    edi
  409370:	pusha  
  409371:	jnp    0x4093f1
  409373:	arpl   WORD PTR [ebx+0x63],ax
  409376:	cmp    eax,0xec4529ce
  40937b:	daa    
  40937c:	jge    0x40930e
  40937e:	add    BYTE PTR [ebp+0x28],dl
  409381:	je     0x4c5c9935
  409387:	test   al,0xe
  409389:	mov    bh,cl
  40938b:	(bad)  
  40938c:	cmp    eax,0x3c33cfa
  409391:	out    dx,eax
  409392:	hlt    
  409393:	mov    ecx,0xf8d97c3a
  409398:	jp     0x409323
  40939a:	cmp    DWORD PTR [ecx],esp
  40939c:	int3   
  40939d:	ds (bad) 
  40939f:	retf   0x5f47
  4093a2:	ret    0x38d3
  4093a5:	aad    0xb7
  4093a7:	sub    DWORD PTR [eax+eiz*4],0x269d0d45
  4093ae:	ficom  WORD PTR [edx+0x3e3c2efb]
  4093b4:	push   ss
  4093b5:	into   
  4093b6:	retf   
  4093b7:	pop    esp
  4093b8:	dec    esp
  4093b9:	ins    DWORD PTR es:[edi],dx
  4093ba:	push   cs
  4093bb:	mov    dl,0x49
  4093bd:	mov    al,ds:0x8947f67b
  4093c2:	pop    ebx
  4093c3:	cmp    BYTE PTR [ebx-0x614eeb9f],bh
  4093c9:	or     al,0xd9
  4093cb:	aas    
  4093cc:	jo     0x409354
  4093ce:	in     al,0x4e
  4093d0:	xor    ecx,esp
  4093d2:	daa    
  4093d3:	cmp    BYTE PTR [ebp-0x2],0xf1
  4093d7:	jmp    0xb03f:0xfb89b8ec
  4093de:	call   0xabc3:0xc5628a4
  4093e5:	cmc    
  4093e6:	daa    
  4093e7:	int    0xf3
  4093e9:	adc    edx,DWORD PTR [eax]
  4093eb:	test   eax,0xf78e9f7f
  4093f0:	mov    ecx,0xa21c8988
  4093f5:	cwde   
  4093f6:	imul   edi,DWORD PTR [ebp+ecx*4-0x6942e20d],0xffffffb2
  4093fe:	pusha  
  4093ff:	test   eax,0x2dd45be2
  409404:	dec    esi
  409405:	imul   ebp,DWORD PTR [eax+0xbab6c7f],0x96964ab3
  40940f:	mov    ebx,DWORD PTR ds:0x6d1297e9
  409415:	arpl   WORD PTR [edx],sp
  409417:	call   0xefdc74b6
  40941c:	and    BYTE PTR [eax+0x1823dbe0],0x94
  409423:	fcom   DWORD PTR [ecx-0x11]
  409426:	retf   0x4d10
  409429:	dec    esi
  40942a:	out    dx,eax
  40942b:	jmp    0x4093e6
  40942d:	xchg   DWORD PTR [esi],ebx
  40942f:	jno    0x409429
  409431:	(bad)  
  409432:	xchg   edi,eax
  409433:	push   0xd8df1c66
  409438:	mov    ebp,0x1c1b2a2d
  40943d:	mov    es,WORD PTR [eax-0x2630224d]
  409443:	mov    edx,0x24f0c77
  409448:	inc    eax
  409449:	and    eax,0x2c1122d5
  40944e:	popa   
  40944f:	or     ah,ch
  409451:	lods   al,BYTE PTR ds:[esi]
  409452:	fwait
  409453:	loop   0x409463
  409455:	pushf  
  409456:	xchg   ebx,eax
  409457:	rcl    BYTE PTR [eax],cl
  409459:	outs   dx,BYTE PTR ds:[esi]
  40945a:	imul   edi,DWORD PTR [eax+0x7a],0x8c85d79
  409461:	or     eax,0x5ecd8b8d
  409466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409467:	jns    0x4094b1
  409469:	test   ebx,edi
  40946b:	int3   
  40946c:	(bad)
  409471:	aam    0xc4
  409473:	jne    0x4094a5
  409475:	mov    ch,0xec
  409477:	loope  0x4094b9
  409479:	mov    ah,0xd9
  40947b:	mov    al,ds:0x9509a381
  409480:	mov    ecx,0xf3a43abc
  409485:	shl    DWORD PTR [eax+0x1],cl
  409488:	or     ch,BYTE PTR [ebp+0x40941b05]
  40948e:	inc    eax
  40948f:	or     BYTE PTR [ebx+edx*2],0x78
  409493:	leave  
  409494:	not    BYTE PTR [ebp-0x3b]
  409497:	(bad)  
  409498:	cld    
  409499:	pushf  
  40949a:	ds ror edi,0x3b
  40949e:	and    edx,DWORD PTR [edi-0x3b7adcef]
  4094a4:	mov    ebx,0xeee94a79
  4094a9:	or     DWORD PTR [esi+0x13],ebx
  4094ac:	dec    edx
  4094ad:	leave  
  4094ae:	or     al,0x22
  4094b0:	or     edi,DWORD PTR [ebx]
  4094b2:	xchg   edi,eax
  4094b3:	out    dx,eax
  4094b4:	dec    ebx
  4094b5:	cmp    al,0x63
  4094b7:	push   ds
  4094b8:	sbb    al,0xf9
  4094ba:	shl    al,cl
  4094bc:	into   
  4094bd:	jnp    0x4094ea
  4094bf:	mov    dh,0xd1
  4094c1:	inc    edx
  4094c2:	sbb    cl,ch
  4094c4:	jge    0x40945f
  4094c6:	loope  0x4094b4
  4094c8:	fisubr DWORD PTR [ebp+0x41]
  4094cb:	mov    eax,ds:0xe98dd4d9
  4094d0:	mov    edi,0x164b7efc
  4094d5:	stc    
  4094d6:	retf   0xf01b
  4094d9:	repz inc edi
  4094db:	out    0xf5,al
  4094dd:	push   ss
  4094de:	retf   0x4fa4
  4094e1:	inc    eax
  4094e2:	stos   BYTE PTR es:[edi],al
  4094e3:	ss out 0x26,al
  4094e6:	jmp    0xe22ee4ab
  4094eb:	xor    eax,DWORD PTR [ecx]
  4094ed:	pop    ebx
  4094ee:	jg     0x409567
  4094f0:	jo     0x40955c
  4094f2:	cmp    ebx,ebp
  4094f4:	in     eax,dx
  4094f5:	fisttp WORD PTR [eax-0x3c60ed15]
  4094fb:	std    
  4094fc:	(bad)  
  4094fd:	mov    cl,0xef
  4094ff:	dec    ecx
  409500:	pop    ds
  409501:	inc    edi
  409502:	xor    ebp,DWORD PTR [esi-0x59]
  409505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409506:	dec    esi
  409507:	mov    ecx,0xc5e97fcc
  40950c:	mov    ah,0xf4
  40950e:	(bad)  
  40950f:	mov    bh,0x81
  409511:	mov    ds:0x6fb1f042,al
  409516:	popf   
  409517:	lea    edx,[eax-0x1dbb8782]
  40951d:	(bad)  
  40951e:	mov    fs,WORD PTR [ebx+0x447bf70]
  409524:	push   ds
  409525:	inc    ebx
  409526:	ret    0x391c
  409529:	outs   dx,BYTE PTR ds:[esi]
  40952a:	sbb    dl,ah
  40952c:	add    dl,bh
  40952e:	lds    ebp,FWORD PTR [edi-0x1f]
  409531:	xor    DWORD PTR [esi-0x69],0x724857d3
  409538:	cmp    al,0xf4
  40953a:	test   eax,0xf45a8496
  40953f:	sbb    al,BYTE PTR [ebx]
  409541:	sti    
  409542:	inc    esi
  409543:	jmp    0xe4251c04
  409548:	or     BYTE PTR [edx+eax*4],ch
  40954b:	mov    cl,0x6c
  40954d:	stos   DWORD PTR es:[edi],eax
  40954e:	pop    edx
  40954f:	repz sti 
  409551:	mov    edi,0xe9ddf3ab
  409556:	xchg   ebp,eax
  409557:	outs   dx,DWORD PTR ds:[esi]
  409558:	rcl    BYTE PTR [edx-0x5f],cl
  40955b:	js     0x4095be
  40955d:	cli    
  40955e:	fist   WORD PTR [edi-0x52]
  409561:	daa    
  409562:	dec    eax
  409563:	adc    al,0x6e
  409566:	jmp    eax
  409568:	ss fs ins DWORD PTR es:[edi],dx
  40956b:	adc    DWORD PTR [ebx+0x6b],edi
  40956e:	push   ebp
  40956f:	stos   DWORD PTR es:[edi],eax
  409570:	les    ebp,FWORD PTR [eax+0x2f8ad2e7]
  409576:	call   0xd720:0xd3fa0c6
  40957d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40957e:	xor    edx,eax
  409580:	pop    edx
  409581:	fidivr WORD PTR [esi+0x1f24db7c]
  409587:	cmp    BYTE PTR [esi-0x32899ec4],al
  40958d:	or     al,0x5d
  40958f:	sub    BYTE PTR [edx],dh
  409591:	mov    ecx,0x3de10719
  409596:	inc    esi
  409597:	into   
  409598:	and    al,0x61
  40959a:	mov    cl,0xf1
  40959c:	mov    es,WORD PTR [edi+0x4fb5c191]
  4095a2:	test   al,0xba
  4095a4:	jne    0x4095bf
  4095a6:	test   DWORD PTR [eax],0x124c571b
  4095ac:	or     eax,0x5a4fc62b
  4095b1:	sti    
  4095b2:	arpl   WORD PTR [esp+ecx*2],si
  4095b5:	sti    
  4095b6:	push   ds
  4095b7:	lahf   
  4095b8:	pop    ds
  4095b9:	shl    ecx,cl
  4095bb:	retf   
  4095bc:	add    eax,0x4c622e45
  4095c1:	dec    eax
  4095c2:	(bad)  
  4095c3:	mov    ch,0xc6
  4095c5:	test   BYTE PTR [ecx+0x4acffbe5],cl
  4095cb:	rol    cl,cl
  4095cd:	sub    BYTE PTR [ebx],ah
  4095cf:	and    dl,dl
  4095d1:	movlps xmm4,QWORD PTR [ecx+esi*4]
  4095d5:	or     BYTE PTR [edx+0x13bbb09e],dh
  4095db:	sbb    dh,al
  4095dd:	push   edi
  4095de:	jecxz  0x409577
  4095e0:	(bad)  
  4095e1:	gs jae 0x409565
  4095e4:	mov    esi,0x6fda9f00
  4095e9:	ja     0x409627
  4095eb:	pop    esi
  4095ec:	retf   
  4095ed:	mov    dl,0x4f
  4095ef:	mov    edi,0x98e571fa
  4095f4:	int    0xfe
  4095f6:	jns    0x409648
  4095f8:	lods   eax,DWORD PTR ds:[esi]
  4095f9:	cmp    ch,BYTE PTR [eax+0x24728418]
  4095ff:	xchg   edx,eax
  409600:	aas    
  409601:	xchg   ecx,eax
  409602:	mov    es,WORD PTR [ecx]
  409604:	mov    bh,dh
  409606:	iret   
  409607:	(bad)  
  409609:	xor    eax,0x1bddf74
  40960e:	data16 scas al,BYTE PTR es:[edi]
  409610:	jb     0x409604
  409612:	xor    BYTE PTR [esi],0xfa
  409615:	(bad)  
  409616:	mov    dh,0xbd
  409618:	inc    DWORD PTR [eax+ecx*8-0x47828003]
  40961f:	mov    bl,0xc1
  409621:	lods   al,BYTE PTR es:[esi]
  409623:	inc    edi
  409624:	xor    al,0x95
  409626:	jmp    0xf5989ce6
  40962b:	aad    0x15
  40962d:	pop    ss
  40962e:	dec    esi
  40962f:	iret   
  409630:	mov    esp,DWORD PTR [edx-0x3]
  409633:	lds    edx,FWORD PTR [edx+0x2a]
  409636:	jge    0x409685
  409638:	jo     0x4095de
  40963a:	lds    esi,FWORD PTR ss:[eax-0x43]
  40963e:	adc    BYTE PTR es:[esi-0x37b64a8f],dl
  409645:	mov    eax,0x67afe960
  40964a:	scas   al,BYTE PTR es:[edi]
  40964b:	mov    eax,ds:0x461884da
  409650:	jnp    0x409659
  409652:	and    al,0xe1
  409654:	clc    
  409655:	int    0xf0
  409657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409658:	mov    edi,0x24269374
  40965d:	je     0x409674
  40965f:	xor    BYTE PTR [ecx+0x9],0xd4
  409663:	mov    bh,0x40
  409665:	dec    edi
  409666:	retf   
  409667:	sub    eax,0xd03451d5
  40966c:	xchg   BYTE PTR [edx],dl
  40966e:	sti    
  40966f:	mov    ds:0xf15a671c,al
  409674:	mov    ds:0x55309a8b,al
  409679:	ret    
  40967a:	cli    
  40967b:	mul    BYTE PTR [ebx+0x28545f13]
  409681:	mov    dh,0xbf
  409683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409684:	pop    eax
  409685:	pusha  
  409686:	jb     0x409632
  409688:	mov    edx,0xc0744b84
  40968d:	les    ecx,FWORD PTR [ebp+0x60]
  409690:	xor    eax,0x10ccc826
  409695:	lahf   
  409696:	sbb    ecx,DWORD PTR [ebp+0x5e]
  409699:	fwait
  40969a:	std    
  40969b:	push   edi
  40969c:	jne    0x4096b2
  40969e:	or     al,0xfd
  4096a0:	call   0x9f5c56d7
  4096a5:	lods   al,BYTE PTR ds:[esi]
  4096a6:	xchg   edi,eax
  4096a7:	add    al,0x1f
  4096a9:	mov    ebp,0xb0aa970b
  4096ae:	sub    dh,ah
  4096b0:	adc    BYTE PTR [edi-0x49],dh
  4096b3:	dec    edx
  4096b4:	jb     0x4096c4
  4096b6:	jne    0x4096a3
  4096b8:	(bad)  
  4096b9:	or     al,0xc
  4096bc:	test   BYTE PTR [ebx],dh
  4096be:	sti    
  4096bf:	xor    ecx,0xb2a1239b
  4096c5:	fimul  DWORD PTR [esi+0x2f0df4e]
  4096cb:	adc    BYTE PTR [edi-0x2c],dl
  4096ce:	mov    dl,0xd9
  4096d0:	sbb    al,0xd0
  4096d2:	int3   
  4096d3:	popf   
  4096d4:	and    DWORD PTR [ecx+0x31],ecx
  4096d7:	adc    al,0xab
  4096d9:	mov    al,ds:0xf735d23
  4096de:	sbb    BYTE PTR [edx-0xcc0a325],ah
  4096e4:	mov    eax,ds:0xb358601f
  4096e9:	cmp    DWORD PTR [ebx+0x1bff1c22],esp
  4096ef:	push   cs
  4096f0:	imul   DWORD PTR [ebp+eax*8-0x10]
  4096f4:	ja     0x4096b6
  4096f6:	fdiv   DWORD PTR [ebx]
  4096f8:	div    dh
  4096fa:	std    
  4096fb:	out    0x1e,eax
  4096fd:	rol    BYTE PTR [edx],1
  4096ff:	iret   
  409700:	and    al,0xa0
  409702:	sub    al,0x9c
  409704:	xor    DWORD PTR [edx+0x7d165c5e],eax
  40970a:	repz mov edi,0xda39bacf
  409710:	or     ebp,DWORD PTR [ebx]
  409712:	enter  0x1c6e,0xd2
  409716:	mov    ebx,DWORD PTR [esi-0x43]
  409719:	stos   DWORD PTR es:[edi],eax
  40971a:	xchg   esi,eax
  40971b:	ret    0xe13c
  40971e:	adc    al,0x56
  409720:	imul   edx,eax,0xc183cab3
  409726:	inc    edi
  409727:	out    0x63,eax
  409729:	scas   eax,DWORD PTR es:[edi]
  40972a:	retf   
  40972b:	outs   dx,BYTE PTR ds:[esi]
  40972c:	(bad)  
  40972e:	fistp  QWORD PTR [edi+0x2f]
  409731:	fbld   TBYTE PTR ds:[ecx+0x22e2fe2]
  409738:	push   es
  409739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973a:	loope  0x4096cb
  40973c:	repnz test al,0xb1
  40973f:	int    0x49
  409741:	cmp    BYTE PTR [ecx+0x38],bh
  409744:	xor    ecx,eax
  409746:	test   BYTE PTR [esi-0x1178efba],bh
  40974c:	lods   eax,DWORD PTR ds:[esi]
  40974d:	out    0xf0,eax
  40974f:	lods   eax,DWORD PTR ds:[esi]
  409750:	iret   
  409751:	fwait
  409752:	dec    edx
  409753:	pop    ebp
  409754:	dec    eax
  409755:	sub    BYTE PTR [eax+0x71],cl
  409758:	jmp    0x409793
  40975a:	jae    0x409781
  40975c:	xchg   ebp,eax
  40975d:	imul   ebp,DWORD PTR [edx+eiz*2],0x7c
  409761:	and    eax,0x171f2e61
  409766:	xlat   BYTE PTR ds:[ebx]
  409767:	sub    bl,BYTE PTR [esi]
  409769:	ds je  0x4097e3
  40976c:	push   eax
  40976d:	inc    esp
  40976e:	xlat   BYTE PTR ds:[ebx]
  40976f:	dec    esi
  409770:	es dec ebx
  409772:	pop    edx
  409773:	(bad)  [esi+ebp*2+0x6a]
  409777:	(bad)  
  409778:	(bad)  
  409779:	clc    
  40977a:	sub    ecx,DWORD PTR [ebx+0x3]
  40977d:	jg     0x4097c8
  40977f:	mov    esi,0xd09b93e1
  409784:	xchg   esp,eax
  409785:	aaa    
  409786:	pop    ebx
  409787:	fild   QWORD PTR [esi-0x136ab924]
  40978d:	lds    ebp,FWORD PTR [edx-0x4cec8f3c]
  409793:	sub    DWORD PTR [ecx+0x35],edx
  409796:	pop    ds
  409797:	mov    al,0x45
  409799:	fsubr  QWORD PTR [ebx-0x742cfd14]
  40979f:	cmc    
  4097a0:	add    bh,BYTE PTR [eax]
  4097a2:	xchg   esi,eax
  4097a3:	mov    ds:0xbb39746d,al
  4097a8:	stos   DWORD PTR es:[edi],eax
  4097a9:	or     esi,DWORD PTR [eax+0x7b2018ab]
  4097af:	shl    DWORD PTR [eax],1
  4097b1:	sti    
  4097b2:	sub    eax,0x40d8b9f2
  4097b7:	and    dh,BYTE PTR [ecx+0x12385c92]
  4097bd:	lds    ecx,FWORD PTR [esi-0x28]
  4097c0:	das    
  4097c1:	popa   
  4097c2:	outs   dx,DWORD PTR ds:[esi]
  4097c3:	dec    eax
  4097c4:	aaa    
  4097c5:	loop   0x40977d
  4097c7:	mov    edx,0xd6a9559b
  4097cc:	rcr    DWORD PTR [edx],cl
  4097ce:	and    eax,0x62bdb52f
  4097d3:	and    bh,BYTE PTR [edi-0x2174294f]
  4097d9:	sti    
  4097da:	push   0xffffffaa
  4097dc:	scas   eax,DWORD PTR es:[edi]
  4097dd:	cmc    
  4097de:	push   edx
  4097df:	sbb    DWORD PTR [eax+ebp*4+0x71aa2e8f],esp
  4097e6:	mov    esi,0x2cc661a3
  4097eb:	jge    0x409777
  4097ed:	fnstenv [ebx]
  4097ef:	mov    cl,0xcd
  4097f1:	jmp    0xadf9:0xf19cdf9b
  4097f8:	mov    al,cl
  4097fa:	imul   ebp,DWORD PTR [edx+0xb27434d],0xeb6ca988
  409804:	lahf   
  409805:	sahf   
  409806:	imul   eax,DWORD PTR [ebx+0x18979461],0xbc32c468
  409810:	adc    bh,BYTE PTR [esi]
  409812:	aas    
  409813:	xor    al,BYTE PTR [ebx]
  409815:	sbb    bh,bh
  409817:	lods   al,BYTE PTR ds:[esi]
  409818:	scas   al,BYTE PTR es:[edi]
  409819:	out    dx,al
  40981a:	xchg   ecx,eax
  40981b:	test   al,0x56
  40981d:	push   ebp
  40981e:	cmp    ebx,DWORD PTR [eax]
  409820:	xor    eax,0xb8e78fac
  409825:	sbb    eax,0x47196504
  40982a:	inc    ebx
  40982b:	stos   DWORD PTR es:[edi],eax
  40982c:	add    al,0x55
  40982e:	mov    al,0x1e
  409830:	jmp    0x4097d3
  409832:	loop   0x40986d
  409834:	fadd   st,st(1)
  409836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409837:	sbb    bh,0x19
  40983a:	and    al,0x1e
  40983c:	bound  esi,QWORD PTR [edi+ebp*1]
  40983f:	xor    eax,DWORD PTR [esi-0x570ad00e]
  409845:	in     eax,dx
  409846:	sar    BYTE PTR [edx+0x49f044cb],1
  40984c:	mov    al,ds:0xa70b243d
  409851:	jns    0x4098ad
  409853:	scas   eax,DWORD PTR es:[edi]
  409854:	repz and ecx,DWORD PTR [edi-0x4e]
  409858:	push   0xb1b38c81
  40985d:	mov    eax,ds:0x129e8d4e
  409862:	stos   BYTE PTR es:[edi],al
  409863:	pop    esp
  409864:	popa   
  409865:	sub    eax,0xbe948b62
  40986a:	pop    ss
  40986b:	jge    0x40986f
  40986d:	dec    edi
  40986e:	cmp    DWORD PTR [ecx],eax
  409870:	sub    DWORD PTR [eax-0x4995b38c],edx
  409876:	lahf   
  409877:	and    DWORD PTR [ebx-0x17],0x4e97964e
  40987e:	shr    BYTE PTR ds:0xddd24781,1
  409884:	std    
  409885:	sbb    al,0xb7
  409887:	push   edx
  409888:	mov    ah,0x38
  40988b:	xor    eax,0xaa320f02
  409890:	inc    eax
  409891:	ja     0x40985b
  409893:	sbb    DWORD PTR [ecx],edx
  409895:	rcl    DWORD PTR ds:0x12cfadd6,cl
  40989b:	cld    
  40989c:	or     eax,0xe34a6f73
  4098a1:	xor    dl,bl
  4098a3:	xor    BYTE PTR [edx+0x64],0x4b
  4098a7:	lods   al,BYTE PTR ds:[esi]
  4098a8:	sahf   
  4098a9:	xor    esi,DWORD PTR [esp+ebp*8-0x76]
  4098ad:	pop    esp
  4098ae:	cmp    al,0x29
  4098b0:	mov    cl,0x64
  4098b2:	fisubr DWORD PTR ds:0xcaeee237
  4098b8:	les    ebp,FWORD PTR [ebp+esi*8-0x4b]
  4098bc:	mov    edx,0x303d9aad
  4098c1:	dec    esp
  4098c2:	and    BYTE PTR [eax],0x2a
  4098c5:	sar    DWORD PTR [edi+0x7ac403fb],cl
  4098cb:	push   edx
  4098cc:	push   ds
  4098cd:	cs jg  0x40991e
  4098d0:	sar    DWORD PTR [ecx-0x436886d4],1
  4098d6:	out    0xdf,eax
  4098d8:	fistp  QWORD PTR [ebp-0xd]
  4098db:	sub    ch,dh
  4098dd:	jp     0x4098f5
  4098df:	enter  0xc585,0x27
  4098e3:	lahf   
  4098e4:	add    ebp,DWORD PTR [ebx+0x7b]
  4098e7:	sub    BYTE PTR [ecx-0x7adb1b7f],ch
  4098ed:	xchg   esp,eax
  4098ee:	sti    
  4098ef:	sbb    eax,0x3061412a
  4098f4:	mov    cl,0x90
  4098f6:	sub    al,0xea
  4098f8:	int3   
  4098f9:	in     al,dx
  4098fa:	pop    edx
  4098fb:	or     al,cl
  4098fd:	mov    al,ds:0xb8f29910
  409902:	jb     0x4098fc
  409904:	(bad)  
  409905:	(bad)  [ebx+0x703c0bfa]
  40990b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40990c:	test   eax,0xc6ef3888
  409911:	xchg   edi,eax
  409912:	pop    esi
  409914:	stos   DWORD PTR es:[edi],eax
  409915:	(bad)  
  409917:	and    al,0x23
  409919:	outs   dx,BYTE PTR ds:[esi]
  40991a:	lods   eax,DWORD PTR ds:[esi]
  40991b:	xor    eax,0xed99a119
  409920:	sbb    al,0x50
  409922:	std    
  409923:	sbb    dh,BYTE PTR [esi-0x12]
  409926:	or     al,0x28
  409928:	mov    fs,WORD PTR [ebp-0xb]
  40992b:	mov    bh,0x47
  40992d:	mov    bh,0x93
  40992f:	rol    DWORD PTR [edx-0x5b93da7],cl
  409935:	push   ebp
  409936:	loop   0x4098c5
  409938:	xor    BYTE PTR [ecx+0x78],ah
  40993b:	cmp    edi,DWORD PTR [ecx-0x164214f8]
  409941:	pop    esi
  409942:	xor    DWORD PTR [edi-0x431e5bcf],ebx
  409948:	lds    ebp,FWORD PTR [ebx]
  40994a:	adc    esi,DWORD PTR [edx+0x61e91d4f]
  409950:	repnz pop ecx
  409952:	icebp  
  409953:	arpl   bx,di
  409955:	fwait
  409956:	sar    DWORD PTR [edx-0x5e],1
  409959:	call   0x63e739f
  40995e:	jbe    0x4099a8
  409960:	aad    0x43
  409962:	push   edx
  409963:	push   edx
  409964:	xchg   ebx,eax
  409965:	out    dx,al
  409966:	inc    eax
  409967:	mov    edx,edx
  409969:	jmp    0x1c5a:0x4481f9b8
  409970:	cmp    DWORD PTR [edx-0x30],esi
  409973:	rcr    DWORD PTR [eax],0x3d
  409976:	in     eax,0x97
  409978:	dec    DWORD PTR ds:0x14fe8fdb
  40997e:	fcomi  st,st(0)
  409980:	mov    eax,ds:0xdd8cfeab
  409985:	xchg   ecx,eax
  409986:	mov    dh,0xad
  409988:	out    dx,eax
  409989:	jge    0x40991a
  40998b:	cli    
  40998c:	mov    ah,0x91
  40998e:	jge    0x40991e
  409990:	aam    0x81
  409992:	sub    dl,BYTE PTR [eax+0x57]
  409995:	lds    ebx,FWORD PTR [edi+0x8831388]
  40999b:	retf   
  40999c:	shl    BYTE PTR [esp+ecx*8],1
  40999f:	int    0xea
  4099a1:	lahf   
  4099a2:	test   BYTE PTR [eax+0x22908e31],ch
  4099a8:	add    ah,dl
  4099aa:	sbb    ebp,DWORD PTR [bx]
  4099ad:	addr16 fs fwait
  4099b0:	int    0xb4
  4099b2:	ins    BYTE PTR es:[edi],dx
  4099b3:	mov    eax,ds:0x70f55861
  4099b8:	sbb    al,0x6a
  4099ba:	std    
  4099bb:	loope  0x409a09
  4099bd:	(bad)  
  4099be:	(bad)  
  4099bf:	popf   
  4099c0:	in     eax,0x72
  4099c2:	loope  0x4099f5
  4099c4:	(bad)  
  4099c5:	mov    dh,0x34
  4099c7:	and    al,0xdc
  4099c9:	xchg   esi,eax
  4099ca:	cmp    al,0xbc
  4099cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099cd:	retf   
  4099ce:	fsub   QWORD PTR [eax]
  4099d0:	mov    eax,ds:0x1de45122
  4099d5:	push   es
  4099d6:	pminsw mm5,QWORD PTR [eax]
  4099d9:	mov    al,0x40
  4099db:	cwde   
  4099dc:	xor    bl,BYTE PTR [edx+0x2e]
  4099df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099e0:	push   ebp
  4099e1:	fisub  WORD PTR [edx+0x58]
  4099e4:	(bad)  [esp+edi*4+0x1f]
  4099e8:	xchg   edi,eax
  4099e9:	lahf   
  4099ea:	jno    0x4099c4
  4099ec:	jno    0x409a0f
  4099ee:	sub    ebx,DWORD PTR [ebx]
  4099f0:	adc    bh,BYTE PTR [edx+0x63b841b6]
  4099f6:	push   esp
  4099f7:	sub    eax,0x7d3f4599
  4099fc:	test   ch,dl
  4099fe:	pop    esi
  4099ff:	jo     0x4099bd
  409a01:	mov    bl,0xea
  409a03:	cdq    
  409a04:	jge    0x4099e3
  409a06:	pusha  
  409a07:	retf   
  409a08:	inc    ebx
  409a09:	dec    ebx
  409a0a:	cwde   
  409a0b:	push   ebp
  409a0c:	add    BYTE PTR [edx],dh
  409a0e:	int    0xb8
  409a10:	dec    esp
  409a11:	adc    ebp,ecx
  409a13:	cwde   
  409a14:	sub    eax,0x3975458b
  409a19:	lds    ebp,FWORD PTR ds:0x973d2160
  409a1f:	(bad)  
  409a20:	and    DWORD PTR [ebx],ecx
  409a22:	or     DWORD PTR ds:[ebp-0x51],eax
  409a26:	mov    eax,ds:0x3a42e1cf
  409a2b:	push   edx
  409a2c:	inc    edi
  409a2d:	iret   
  409a2e:	ret    0x9867
  409a31:	and    ch,BYTE PTR [esp+ecx*4]
  409a34:	xor    cl,BYTE PTR [ecx+ebp*2-0x5b]
  409a38:	in     al,dx
  409a39:	imul   esi,eax,0xffffff9c
  409a3c:	xchg   esp,eax
  409a3d:	(bad)  
  409a3e:	pop    ebx
  409a3f:	fisubr DWORD PTR [esi-0x6d03fc84]
  409a45:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a47:	fisub  DWORD PTR [ecx+0x5d9555c6]
  409a4d:	test   eax,0x1b4d5a15
  409a52:	mov    dl,0x22
  409a54:	sub    ebx,esp
  409a56:	clc    
  409a57:	and    eax,0x648d38f
  409a5c:	lock push edx
  409a5e:	in     al,dx
  409a5f:	or     cl,BYTE PTR [ebp-0x7f]
  409a62:	fst    QWORD PTR [ebx]
  409a64:	jp     0x409ac1
  409a66:	or     ebp,ebx
  409a68:	cwde   
  409a69:	shr    ecx,cl
  409a6b:	sbb    eax,0x4c739f59
  409a70:	inc    esi
  409a71:	ins    BYTE PTR es:[edi],dx
  409a72:	xor    eax,0x67007ccd
  409a77:	addr16 push ecx
  409a79:	inc    ebp
  409a7a:	sbb    al,0xcc
  409a7c:	test   DWORD PTR [eax-0x64c80f17],edx
  409a82:	fpatan 
  409a84:	push   0xffffff9c
  409a86:	jle    0x409ab1
  409a88:	data16 sub dl,bh
  409a8b:	cs pop esp
  409a8d:	cmp    eax,0xd66898f9
  409a92:	bound  edx,QWORD PTR [ecx+0x10]
  409a95:	gs hlt 
  409a97:	je     0x409aa0
  409a99:	imul   ebx,DWORD PTR [esi+0x37ec26a7],0x53
  409aa0:	ret    
  409aa1:	and    DWORD PTR [edi+0x46],eax
  409aa4:	stos   BYTE PTR es:[edi],al
  409aa5:	scas   al,BYTE PTR es:[edi]
  409aa6:	mov    edi,0x124b8e74
  409aab:	xchg   edx,eax
  409aac:	add    al,0x1
  409aae:	xchg   BYTE PTR [ebx+ebp*8],cl
  409ab1:	test   eax,0x3707fae4
  409ab6:	fild   DWORD PTR [eax]
  409ab8:	push   edx
  409ab9:	sahf   
  409aba:	and    edi,DWORD PTR [edi+0x0]
  409abd:	pusha  
  409abe:	push   edx
  409abf:	ficomp DWORD PTR [ecx-0x2c]
  409ac2:	jb     0x409aff
  409ac4:	push   cs
  409ac5:	ins    BYTE PTR es:[edi],dx
  409ac6:	jo     0x409a68
  409ac8:	mov    ds:0xfea9e9a3,al
  409acd:	les    eax,FWORD PTR [esi+0x70]
  409ad0:	mov    BYTE PTR [edx+edx*4-0x20fcfc92],al
  409ad7:	push   ss
  409ad8:	or     DWORD PTR [edx-0x71a12435],edx
  409ade:	out    0x12,al
  409ae0:	fdiv   QWORD PTR [ebx-0x72ed284f]
  409ae6:	push   edi
  409ae7:	xchg   ecx,eax
  409ae8:	mov    ecx,0xdb4c3108
  409aed:	inc    edx
  409aee:	cmp    edi,esi
  409af0:	in     eax,dx
  409af1:	xchg   edx,eax
  409af2:	mov    ah,0x3d
  409af4:	popa   
  409af5:	dec    ebp
  409af6:	mov    eax,ds:0xc6c044f8
  409afb:	mov    ds:0x46f1955d,eax
  409b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b01:	adc    eax,0x87190f80
  409b06:	xchg   DWORD PTR [ebp-0x5ebd3b40],edi
  409b0c:	jae    0x409b2e
  409b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b0f:	dec    esp
  409b10:	pop    esp
  409b11:	push   esi
  409b12:	add    bl,BYTE PTR [edi+0x2a]
  409b15:	leave  
  409b16:	xchg   ebp,eax
  409b17:	cld    
  409b18:	call   0x31da:0x92e261a4
  409b1f:	cld    
  409b20:	jns    0x409b7d
  409b22:	pop    ecx
  409b23:	jg     0x409ab2
  409b25:	pop    esi
  409b26:	push   esi
  409b27:	ins    BYTE PTR es:[edi],dx
  409b28:	xor    al,0x84
  409b2a:	mov    ebp,0x305e07ef
  409b2f:	int    0x8
  409b31:	retf   
  409b32:	jae    0x409b5d
  409b34:	jo     0x409b63
  409b36:	push   esi
  409b37:	adc    BYTE PTR [edx],al
  409b39:	mov    ecx,0xbe31dcf4
  409b3e:	test   al,0xfc
  409b40:	push   edi
  409b41:	add    eax,DWORD PTR [edi+0x4d]
  409b44:	add    BYTE PTR [ebx-0x7a23e69],dl
  409b4a:	mov    BYTE PTR [ebx],bl
  409b4c:	adc    al,0x79
  409b4e:	popa   
  409b4f:	pop    ss
  409b50:	adc    al,0x26
  409b52:	in     al,dx
  409b53:	es retf 0x925
  409b57:	push   esi
  409b58:	gs pop ds
  409b5a:	xor    edx,DWORD PTR [edx+0x36]
  409b5d:	fisub  WORD PTR [eax+0x6558f94c]
  409b63:	stos   DWORD PTR es:[edi],eax
  409b64:	and    esp,DWORD PTR [ecx]
  409b66:	xchg   esi,eax
  409b67:	aaa    
  409b68:	out    0x13,eax
  409b6a:	jmp    0xf0fc:0xbf0c6a9
  409b71:	inc    eax
  409b72:	lock das 
  409b74:	popa   
  409b75:	dec    esi
  409b76:	mov    ds:0xdbbdb7f6,eax
  409b7b:	(bad)  
  409b7c:	out    0xf7,al
  409b7e:	sbb    eax,0x896bc65c
  409b83:	mov    al,ds:0xf4aa2b7
  409b88:	jno    0x409bc8
  409b8a:	pop    ebx
  409b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b8c:	jnp    0x409bf8
  409b8e:	data16 adc BYTE PTR [esi+ebp*4-0x4c5efd28],cl
  409b96:	and    DWORD PTR [ebp-0x4fd04c93],ebx
  409b9c:	mov    eax,ds:0x48952e7a
  409ba1:	loope  0x409bbc
  409ba3:	test   BYTE PTR [ecx+0x2e],cl
  409ba6:	push   ebp
  409ba7:	loope  0x409b38
  409ba9:	or     eax,0x576988fa
  409bae:	and    cl,BYTE PTR [ebp+0xe]
  409bb1:	jnp    0x409bfd
  409bb3:	push   ebx
  409bb4:	out    dx,eax
  409bb5:	out    0xe7,al
  409bb7:	dec    ebx
  409bb8:	sahf   
  409bb9:	daa    
  409bba:	jg     0x409c34
  409bbc:	rcr    DWORD PTR [esp+edx*8+0x6f],cl
  409bc0:	out    0x88,al
  409bc2:	xchg   ebx,eax
  409bc3:	ret    0xa48f
  409bc6:	mov    dh,BYTE PTR [ecx]
  409bc8:	sub    DWORD PTR [ebp+0x1c3b3dd8],ebp
  409bce:	xchg   ebp,eax
  409bcf:	cmp    DWORD PTR [ebx+esi*1-0x11],0xd210bfe2
  409bd7:	inc    edx
  409bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd9:	fild   QWORD PTR [edi]
  409bdb:	sbb    esp,DWORD PTR [esi-0x16334fad]
  409be1:	sahf   
  409be2:	out    dx,al
  409be3:	pop    ebp
  409be4:	mov    cl,0xdb
  409be6:	mov    cs,WORD PTR [ecx-0x3680f92f]
  409bec:	jae    0x409c0b
  409bee:	sbb    edx,DWORD PTR [ebx-0x39]
  409bf1:	js     0x409c27
  409bf3:	stos   BYTE PTR es:[edi],al
  409bf4:	stos   DWORD PTR es:[edi],eax
  409bf5:	call   0xb8fbe02a
  409bfa:	push   ebx
  409bfb:	dec    edx
  409bfc:	or     eax,0x687f188d
  409c01:	add    DWORD PTR [esi],ebx
  409c03:	mov    WORD PTR [ebp+ebx*2-0x15],sp
  409c08:	iret   
  409c09:	cmp    eax,0xca3c7e09
  409c0e:	into   
  409c0f:	add    ebx,DWORD PTR [eax]
  409c11:	stc    
  409c12:	out    0xc1,al
  409c14:	lods   eax,DWORD PTR ds:[esi]
  409c15:	and    eax,0xd80685f9
  409c1a:	cdq    
  409c1b:	jmp    0x8971:0x7a2fa8be
  409c22:	mov    BYTE PTR [ecx],bh
  409c24:	test   BYTE PTR [eax],ah
  409c26:	cmp    BYTE PTR ss:[esi],cl
  409c29:	mov    esi,0xbd90d57b
  409c2e:	lahf   
  409c2f:	aaa    
  409c30:	je     0x409c88
  409c32:	(bad)  
  409c33:	sbb    ebx,DWORD PTR [edi]
  409c35:	mov    edx,0x7b70904a
  409c3a:	jge    0x409bed
  409c3c:	cmp    al,0xea
  409c3e:	out    0x6b,eax
  409c40:	mov    esp,0xef1e89d9
  409c45:	and    al,0x81
  409c47:	dec    ebx
  409c48:	mov    dl,0x22
  409c4a:	add    ebp,ebp
  409c4c:	sti    
  409c4d:	and    DWORD PTR [edi],edx
  409c4f:	mov    edx,gs
  409c51:	icebp  
  409c52:	mov    ebp,0x55772668
  409c57:	lods   eax,DWORD PTR ds:[esi]
  409c58:	fs shl edx,cl
  409c5b:	dec    esp
  409c5c:	jle    0x409be6
  409c5e:	jl     0x409bf5
  409c60:	xor    eax,0x8e022f7c
  409c65:	ret    
  409c66:	daa    
  409c67:	xor    BYTE PTR [edi+0x44],al
  409c6a:	or     al,0x8b
  409c6c:	shr    BYTE PTR [ebx],cl
  409c6e:	cmc    
  409c6f:	adc    BYTE PTR [ebp-0x7352a62a],0x2
  409c76:	adc    BYTE PTR [ebp+ebx*8+0x30],cl
  409c7a:	mov    ebx,DWORD PTR [eax+0x35308486]
  409c80:	mov    edx,0xd094ab22
  409c85:	mov    al,0x37
  409c87:	das    
  409c88:	mov    dh,BYTE PTR ds:0xfdd7ed39
  409c8e:	and    al,0x93
  409c90:	dec    ecx
  409c91:	lea    edi,[ecx-0x5d]
  409c94:	jle    0x409c86
  409c96:	imul   ebp,DWORD PTR [ecx-0x748dab7b],0x39
  409c9d:	mov    ebx,0xd1e99500
  409ca2:	jnp    0x409ce4
  409ca4:	popa   
  409ca5:	repnz rol BYTE PTR [edx+eiz*1+0x73ea4e84],cl
  409cad:	xchg   esi,eax
  409cae:	xor    al,0x22
  409cb1:	dec    esi
  409cb2:	dec    edx
  409cb3:	jg     0x409ce3
  409cb5:	lahf   
  409cb6:	mov    eax,ds:0xf98fc690
  409cbb:	cld    
  409cbc:	aaa    
  409cbd:	and    eax,0x2b092a4
  409cc2:	add    eax,0x53fdd9b3
  409cc7:	xor    al,BYTE PTR [ecx+0x25]
  409cca:	mov    eax,0x25df0098
  409ccf:	add    ecx,esp
  409cd1:	jbe    0x409c58
  409cd3:	jmp    0xf8ee:0x5fe32491
  409cda:	mov    ah,0x88
  409cdc:	xchg   esp,eax
  409cdd:	ins    DWORD PTR es:[edi],dx
  409cde:	mov    WORD PTR [eax-0x29bdccbf],?
  409ce4:	sbb    ch,dh
  409ce6:	mov    WORD PTR [ebp+0x32],es
  409ce9:	in     eax,0xea
  409ceb:	push   ss
  409cec:	cmp    BYTE PTR [esi-0x7def0ba4],0x99
  409cf3:	add    eax,0x626f3f17
  409cf8:	inc    ebp
  409cf9:	lods   eax,DWORD PTR ds:[esi]
  409cfa:	or     al,0x46
  409cfc:	jmp    0x409cb6
  409cfe:	or     ch,dl
  409d00:	inc    ecx
  409d01:	or     eax,0xe0fbd4b5
  409d06:	out    dx,al
  409d07:	mov    ch,0x63
  409d09:	sar    BYTE PTR [edi-0x14aec4c1],0xe9
  409d10:	add    BYTE PTR [ebx-0x4d],bl
  409d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d14:	fimul  DWORD PTR ds:0x5a90d221
  409d1a:	mov    ecx,0x82d64e50
  409d1f:	mov    al,ds:0xb3bc3b69
  409d24:	nop
  409d25:	out    dx,eax
  409d26:	xchg   BYTE PTR [ecx],cl
  409d28:	push   eax
  409d29:	pushf  
  409d2a:	and    al,0x64
  409d2c:	rol    BYTE PTR [ebx+esi*2+0x400f8ee1],cl
  409d33:	or     ebp,DWORD PTR [edx+0x2d]
  409d36:	ret    0x381c
  409d39:	push   ds
  409d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3b:	and    edi,ebx
  409d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d3e:	lahf   
  409d3f:	rol    DWORD PTR [ecx-0x11ba61dc],cl
  409d45:	cmp    ah,BYTE PTR [esi-0x38]
  409d48:	dec    esi
  409d49:	mov    eax,ds:0xec96aba7
  409d4e:	add    eax,0x457f46d6
  409d53:	sbb    BYTE PTR [edi-0x4c],bl
  409d56:	cmc    
  409d57:	fistp  WORD PTR [ebx+0x592e5b02]
  409d5d:	sub    DWORD PTR ds:0x8b582336,0xbb48c724
  409d67:	outs   dx,BYTE PTR ds:[esi]
  409d68:	pop    edi
  409d69:	test   BYTE PTR [eax-0x55],bl
  409d6c:	mov    esp,0xb898304f
  409d71:	sbb    BYTE PTR [esi-0x40],bh
  409d74:	fimul  WORD PTR [edx+ebp*8]
  409d77:	int    0xbb
  409d79:	clc    
  409d7a:	adc    dl,BYTE PTR [eax+0x18]
  409d7d:	hlt    
  409d7e:	xchg   esi,eax
  409d7f:	aaa    
  409d80:	inc    esi
  409d81:	stc    
  409d82:	in     eax,dx
  409d83:	mov    edi,0x5c9e6e79
  409d88:	mov    WORD PTR [ebp-0x187dd058],gs
  409d8e:	cmp    bh,cl
  409d90:	mov    ds:0x3e50a7fe,eax
  409d95:	jl     0x409e0b
  409d97:	adc    DWORD PTR [ebx+0x27],edx
  409d9a:	xor    esi,DWORD PTR [ebx+0x16]
  409d9d:	pop    ebp
  409d9e:	or     BYTE PTR ds:0xe44e4af5,bl
  409da4:	xchg   dl,bl
  409da6:	pop    es
  409da7:	std    
  409da8:	mov    ecx,0xc59953d6
  409dad:	cmp    eax,0xea161a44
  409db2:	stos   BYTE PTR es:[edi],al
  409db3:	sti    
  409db4:	(bad)  
  409db5:	stos   DWORD PTR es:[edi],eax
  409db6:	out    0x5d,eax
  409db8:	into   
  409db9:	cmp    eax,0x63f4bec5
  409dbe:	jle    0x409e15
  409dc0:	pop    eax
  409dc1:	bound  edi,QWORD PTR [edx-0x3d512bd8]
  409dc7:	pop    edx
  409dc8:	cmp    cl,BYTE PTR [ecx-0x6a]
  409dcb:	into   
  409dcc:	cmp    al,0x8b
  409dce:	fild   QWORD PTR [edi-0x8]
  409dd1:	lea    ecx,[ecx-0x13e31238]
  409dd7:	outs   dx,DWORD PTR ds:[esi]
  409dd8:	shl    esi,1
  409dda:	pusha  
  409ddb:	jp     0x409dad
  409ddd:	mov    ecx,0x510e867a
  409de2:	mov    al,ds:0x4b2ea01a
  409de7:	test   DWORD PTR [eax+0x3087ba9c],0x9c7f76b4
  409df1:	mov    dl,0x21
  409df3:	push   es
  409df4:	mov    edi,0x3e100f2e
  409df9:	and    edx,DWORD PTR [ebp+0x1832ac12]
  409dff:	call   0x1363d619
  409e04:	ds inc esi
  409e06:	ss scas eax,DWORD PTR es:[edi]
  409e08:	xor    BYTE PTR ss:0x272883e,ch
  409e0f:	jecxz  0x409dbf
  409e11:	std    
  409e12:	ret    
  409e13:	cmp    eax,0x4df3121a
  409e18:	jae    0x409dbf
  409e1a:	sbb    dh,BYTE PTR [eax+0x3562779d]
  409e20:	leave  
  409e21:	imul   edi,DWORD PTR [edi-0xb],0xbe7f3293
  409e28:	jg     0x409dfb
  409e2a:	(bad)  
  409e2c:	and    DWORD PTR fs:[ebx-0xa],ecx
  409e30:	int3   
  409e31:	pushf  
  409e32:	cmp    edx,edx
  409e34:	cli    
  409e35:	mov    BYTE PTR [ebp+0x29e7913a],0x55
  409e3c:	dec    edx
  409e3d:	mov    dh,0x3b
  409e3f:	nop
  409e40:	xor    DWORD PTR [esp+ebp*1-0x1c5d741f],0x713ffa16
  409e4b:	mov    eax,0xba1352d5
  409e50:	stos   BYTE PTR es:[edi],al
  409e51:	push   edi
  409e52:	mov    ebx,0x90a9feb9
  409e57:	jns    0x409e01
  409e59:	mov    eax,ds:0x13d237c7
  409e5e:	xchg   ebx,eax
  409e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e60:	fst    QWORD PTR [edi-0x20]
  409e63:	jne    0x409e08
  409e65:	push   ebp
  409e66:	mov    eax,0x46ec7f5a
  409e6b:	push   edi
  409e6c:	add    DWORD PTR [ebx+eiz*8],ebp
  409e6f:	push   0xf
  409e71:	scas   eax,DWORD PTR es:[edi]
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x4da83f7d],bl
  40a717:	dec    esi
  40a718:	and    DWORD PTR ds:0x7a7a046d,0xffffffe6
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	sub    DWORD PTR [esp+ecx*1+0x15],0x1f9df705
  40a72a:	xchg   edi,eax
  40a72b:	test   ecx,eax
  40a72d:	dec    ebp
  40a72e:	mov    al,ds:0x755f689c
  40a733:	push   ebx
  40a734:	and    dh,ah
  40a736:	(bad)  [esi+0x1743295d]
  40a73c:	or     al,0x7e
  40a73e:	jge    0x40a737
  40a740:	jmp    0x708090f0
  40a745:	aaa    
  40a746:	xchg   BYTE PTR [ecx-0xc1d28f7],cl
  40a74c:	dec    eax
  40a74d:	pop    esi
  40a74e:	repnz sub cl,dl
  40a751:	neg    dl
  40a753:	push   0x152a8672
  40a758:	or     BYTE PTR [ecx],0x62
  40a75b:	fild   WORD PTR [eax]
  40a75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75e:	pop    esi
  40a75f:	push   ds
  40a760:	repz mov al,ds:0x3e2d45d6
  40a766:	outs   dx,DWORD PTR ds:[esi]
  40a767:	loopne 0x40a73d
  40a769:	push   ebx
  40a76a:	retf   0x9600
  40a76d:	leave  
  40a76e:	adc    bl,bl
  40a770:	je     0x40a6fe
  40a772:	mov    ds:0x4338f205,eax
  40a777:	add    BYTE PTR ds:0xae341358,dh
  40a77d:	or     al,0xfb
  40a77f:	mov    cl,0xf7
  40a781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a782:	pop    esp
  40a783:	clc    
  40a784:	push   ss
  40a785:	pop    edi
  40a786:	icebp  
  40a787:	xor    BYTE PTR [ebp+0x62b5cb3c],bl
  40a78d:	adc    al,0xa0
  40a78f:	cmp    dh,BYTE PTR [esi+0x48860f78]
  40a795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a796:	pop    es
  40a797:	lods   eax,DWORD PTR ds:[esi]
  40a798:	hlt    
  40a799:	push   ebp
  40a79a:	mov    bh,0xa1
  40a79c:	and    ah,BYTE PTR [edi+eax*2+0x465ffd3b]
  40a7a3:	adc    eax,0xe3d8bf8d
  40a7a8:	das    
  40a7a9:	jp     0x40a81b
  40a7ab:	or     BYTE PTR [eax-0x31],ah
  40a7ae:	outs   dx,DWORD PTR ds:[esi]
  40a7af:	sub    BYTE PTR [ecx-0x5f],cl
  40a7b2:	jnp    0x40a75b
  40a7b4:	popf   
  40a7b5:	or     esi,DWORD PTR [edx-0x3d4aa390]
  40a7bb:	xor    edi,DWORD PTR [ebp+ecx*4-0x6c43eecd]
  40a7c2:	(bad)  
  40a7c3:	(bad)  
  40a7c5:	sbb    al,0xef
  40a7c7:	aas    
  40a7c8:	xchg   edi,eax
  40a7c9:	adc    al,0x99
  40a7cb:	fstp   TBYTE PTR [ecx+0x127372a5]
  40a7d1:	pushf  
  40a7d2:	test   DWORD PTR [edi+ebp*4],esi
  40a7d5:	mov    BYTE PTR [edx+0x43],ch
  40a7d8:	mov    ecx,0x8e16878f
  40a7dd:	lods   al,BYTE PTR ds:[esi]
  40a7de:	out    dx,al
  40a7df:	xchg   ecx,eax
  40a7e0:	push   edi
  40a7e1:	aas    
  40a7e2:	pop    es
  40a7e3:	call   0x43ee:0x7f632fe2
  40a7ea:	jl     0x40a802
  40a7ec:	adc    ebx,ecx
  40a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ef:	mov    al,ds:0xaec7910f
  40a7f4:	fimul  WORD PTR [esi+edx*2]
  40a7f7:	fadd   DWORD PTR [edx-0x393203a5]
  40a7fd:	cs into 
  40a7ff:	mov    bl,ah
  40a801:	sub    DWORD PTR [eax-0x29501055],0xe6013a01
  40a80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a80c:	stc    
  40a80d:	lea    ebx,[edi]
  40a80f:	sahf   
  40a810:	fmul   st(2),st
  40a812:	into   
  40a813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a814:	or     ebp,DWORD PTR [edi-0x54]
  40a817:	shl    BYTE PTR [edi],1
  40a819:	frstor [ebx-0xa]
  40a81c:	adc    al,0xf2
  40a81e:	pop    es
  40a81f:	(bad)
  40a823:	inc    esp
  40a824:	jmp    0xec27:0xbad0b59
  40a82b:	into   
  40a82c:	and    ch,ch
  40a82e:	xchg   edx,eax
  40a82f:	fiadd  WORD PTR [eax+ebx*2+0x3752b2c3]
  40a836:	ret    0xb198
  40a839:	add    eax,0xa502a531
  40a83e:	in     al,0x6a
  40a840:	call   0x2785:0x7f2d57e4
  40a847:	mov    bl,0xb3
  40a849:	mov    ebx,0x139f9272
  40a84e:	or     DWORD PTR [ebx],esi
  40a850:	add    DWORD PTR [ecx],esp
  40a852:	xor    DWORD PTR [edi],0xce2a56f3
  40a858:	cmp    esi,DWORD PTR [ebp-0x6]
  40a85b:	in     al,dx
  40a85c:	jg     0x40a865
  40a85e:	stos   DWORD PTR es:[edi],eax
  40a85f:	xchg   ecx,eax
  40a860:	pop    ebp
  40a861:	push   ecx
  40a862:	push   0xffffff9b
  40a864:	sub    ah,BYTE PTR [eax]
  40a866:	repnz xor ebp,DWORD PTR [ebx]
  40a869:	sbb    esi,DWORD PTR [edx+0x5d]
  40a86c:	ins    DWORD PTR es:[edi],dx
  40a86d:	mov    edi,0x5d6c2ce4
  40a872:	outs   dx,DWORD PTR ds:[esi]
  40a873:	push   0x2f21e57c
  40a878:	push   cs
  40a879:	ins    DWORD PTR es:[edi],dx
  40a87a:	xchg   edi,eax
  40a87b:	das    
  40a87c:	fadd   DWORD PTR [ecx+0x67]
  40a87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a880:	mov    ds:0x4b0e246d,al
  40a885:	add    DWORD PTR [ebx-0x43],ecx
  40a888:	lds    ebx,FWORD PTR [edi]
  40a88a:	dec    ecx
  40a88b:	dec    eax
  40a88c:	loope  0x40a90b
  40a88e:	fimul  DWORD PTR [ebx]
  40a890:	xchg   BYTE PTR [edi+0x1e0a96c1],al
  40a896:	call   FWORD PTR [ebx]
  40a898:	sub    edi,edi
  40a89a:	stos   DWORD PTR es:[edi],eax
  40a89b:	call   0xe509:0x25beeee0
  40a8a2:	(bad)  
  40a8a3:	int3   
  40a8a4:	cmp    BYTE PTR [esi+0x8028ead],dl
  40a8aa:	loop   0x40a904
  40a8ac:	stc    
  40a8ad:	ret    
  40a8ae:	xor    ah,dh
  40a8b0:	jmp    0x208a:0x40994c04
  40a8b7:	aaa    
  40a8b8:	outs   dx,BYTE PTR ds:[esi]
  40a8b9:	or     eax,ebp
  40a8bb:	mov    al,ds:0xe7581413
  40a8c0:	adc    dh,cl
  40a8c2:	sub    cl,BYTE PTR [edx]
  40a8c4:	inc    ebx
  40a8c5:	add    BYTE PTR [edx+0x44],dl
  40a8c8:	pop    es
  40a8c9:	std    
  40a8ca:	sbb    DWORD PTR [ebx],edx
  40a8cc:	push   eax
  40a8cd:	or     DWORD PTR [ebx],ebx
  40a8cf:	push   ss
  40a8d0:	mov    ah,0xfb
  40a8d2:	in     al,dx
  40a8d3:	or     al,dl
  40a8d5:	stos   DWORD PTR es:[edi],eax
  40a8d6:	test   DWORD PTR ds:0x2b5b4886,0x99837c1f
  40a8e0:	dec    ebp
  40a8e1:	push   0x5d29c84e
  40a8e6:	sahf   
  40a8e7:	push   edi
  40a8e8:	sub    DWORD PTR [eax+0x4f],ebx
  40a8eb:	retf   0x9f07
  40a8ee:	jnp    0x40a932
  40a8f0:	xchg   ecx,eax
  40a8f1:	jg     0x40a93a
  40a8f3:	mov    bl,0x50
  40a8f5:	das    
  40a8f6:	jb     0x40a95d
  40a8f8:	dec    eax
  40a8f9:	xor    ecx,DWORD PTR [ecx+0x6c]
  40a8fc:	(bad)  
  40a8fd:	push   ebp
  40a8fe:	mul    BYTE PTR [esi+0x1303bcc2]
  40a904:	fild   WORD PTR [esi-0x2f]
  40a907:	rol    BYTE PTR [ebp+0x64baacc7],cl
  40a90d:	xor    ch,BYTE PTR [eax+0x2dd4ebc4]
  40a913:	jae    0x40a8c6
  40a915:	iret   
  40a916:	mov    ah,0x5f
  40a918:	sbb    edi,DWORD PTR [esi+ecx*2+0x6f]
  40a91c:	sbb    dl,BYTE PTR [ecx]
  40a91e:	lods   eax,DWORD PTR ds:[esi]
  40a91f:	das    
  40a920:	mov    dh,0xde
  40a922:	sub    BYTE PTR [eax],cl
  40a924:	sbb    edi,DWORD PTR [edx]
  40a926:	jge    0x40a8c6
  40a928:	mov    esi,ss
  40a92a:	pop    ebx
  40a92b:	fisttp QWORD PTR [ebx+0x5fe1648a]
  40a931:	mov    bl,BYTE PTR [edi-0x44]
  40a934:	sbb    ebx,DWORD PTR [eax+0x23e3638f]
  40a93a:	xchg   ecx,eax
  40a93b:	add    al,0xdd
  40a93d:	inc    esi
  40a93e:	adc    BYTE PTR [eax-0x3e],cl
  40a941:	ror    bh,cl
  40a943:	lea    edx,[ebx+0x35]
  40a946:	call   0xf0be:0x6226616b
  40a94d:	jge    0x40a911
  40a94f:	mov    cl,0x9d
  40a951:	push   ebp
  40a952:	sub    esp,DWORD PTR [eax]
  40a954:	dec    ecx
  40a955:	xchg   esi,eax
  40a956:	sbb    BYTE PTR [esi+0x6b],bh
  40a959:	mov    WORD PTR [esi+ebp*1],ds
  40a95c:	cdq    
  40a95d:	jns    0x40a997
  40a95f:	dec    ecx
  40a960:	clc    
  40a961:	sbb    DWORD PTR [ecx-0x34de8737],esi
  40a967:	pop    ebx
  40a968:	into   
  40a969:	cmp    eax,0xd807da0d
  40a96e:	pop    esi
  40a96f:	(bad)
  40a974:	jns    0x40a9f1
  40a976:	push   ss
  40a977:	sbb    al,0x10
  40a979:	pop    esp
  40a97a:	in     eax,0x90
  40a97c:	sbb    DWORD PTR [edi-0x33],eax
  40a97f:	push   esp
  40a980:	push   ss
  40a981:	iret   
  40a982:	in     eax,0x3
  40a984:	or     esp,DWORD PTR [ebp+0x25]
  40a987:	cmp    esi,DWORD PTR [esp+eax*2]
  40a98a:	(bad)  
  40a98b:	lods   eax,DWORD PTR ds:[esi]
  40a98c:	sub    BYTE PTR [ecx-0x5c],dh
  40a98f:	jp     0x40a9bb
  40a991:	pop    ecx
  40a992:	addr16 jns 0x40a9d4
  40a995:	mov    es,WORD PTR [edi]
  40a997:	aaa    
  40a998:	pop    es
  40a999:	mov    ds:0xb4effef0,eax
  40a99e:	cmp    ebp,DWORD PTR [esi+eax*8+0x2f]
  40a9a2:	add    DWORD PTR [edi-0x70],ebx
  40a9a5:	imul   esi,eax,0xfb28177
  40a9ab:	loope  0x40a9de
  40a9ad:	test   eax,0x1a28584c
  40a9b2:	sbb    ah,ch
  40a9b4:	add    eax,esp
  40a9b6:	mov    ebx,0xf6235a3e
  40a9bb:	xchg   BYTE PTR [edx+0x16],cl
  40a9be:	push   edi
  40a9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c0:	outs   dx,DWORD PTR ds:[esi]
  40a9c1:	inc    ebp
  40a9c2:	mov    edx,0x4307dbe6
  40a9c7:	mov    ch,0x62
  40a9c9:	ret    
  40a9ca:	mov    ch,0x2d
  40a9cc:	dec    eax
  40a9cd:	rcl    BYTE PTR [edx+0x62f2ebb1],0x9f
  40a9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9d5:	and    ebp,ecx
  40a9d7:	dec    ebx
  40a9d8:	inc    edx
  40a9d9:	imul   edx,DWORD PTR [edx],0x4833fd8d
  40a9df:	jo     0x40a9dd
  40a9e1:	mov    al,0x36
  40a9e3:	push   0xffffffa3
  40a9e5:	div    DWORD PTR [esi]
  40a9e7:	imul   BYTE PTR [ebx-0x7]
  40a9ea:	xchg   ecx,eax
  40a9eb:	out    dx,al
  40a9ec:	and    al,0x66
  40a9ee:	es mov eax,0x6cd3988b
  40a9f4:	add    ebp,DWORD PTR [edx]
  40a9f6:	mov    ebp,0x24fe200d
  40a9fb:	push   edx
  40a9fc:	cmp    ebp,ebp
  40a9fe:	das    
  40a9ff:	mov    al,0xdb
  40aa01:	push   ds
  40aa02:	js     0x40aa59
  40aa04:	jg     0x40a9c3
  40aa06:	ret    
  40aa07:	scas   al,BYTE PTR es:[edi]
  40aa08:	ja     0x40aa3f
  40aa0a:	add    DWORD PTR [edx],ebx
  40aa0c:	fwait
  40aa0d:	ins    DWORD PTR es:[edi],dx
  40aa0e:	inc    ecx
  40aa0f:	clc    
  40aa10:	jecxz  0x40a99a
  40aa12:	mov    edi,0x48c04921
  40aa17:	shr    DWORD PTR [eax+0x11186bfd],1
  40aa1d:	pop    ss
  40aa1e:	jo     0x40a9ef
  40aa20:	dec    ecx
  40aa21:	push   ebx
  40aa22:	sub    ah,cl
  40aa24:	data16 sahf 
  40aa26:	jmp    0xd77ee8ba
  40aa2b:	xchg   ebp,eax
  40aa2c:	sbb    BYTE PTR [edi+0x2ee9cc56],0xe1
  40aa33:	fimul  DWORD PTR ds:0xf4bb1599
  40aa39:	xchg   esp,eax
  40aa3a:	cld    
  40aa3b:	jo     0x40aa06
  40aa3d:	call   DWORD PTR [ebx+0x7d]
  40aa40:	pop    ss
  40aa41:	inc    ecx
  40aa42:	js     0x40aa7a
  40aa44:	mov    esp,DWORD PTR [edx+0x6f]
  40aa47:	jo     0x40aaa3
  40aa49:	cmp    eax,0x2f491af2
  40aa4e:	(bad)  
  40aa4f:	xchg   edi,eax
  40aa50:	cmc    
  40aa51:	fs mov dl,0x94
  40aa54:	mov    cl,bl
  40aa56:	inc    esp
  40aa57:	push   es
  40aa58:	scas   eax,DWORD PTR es:[edi]
  40aa59:	sbb    BYTE PTR [ebp+0x12],ah
  40aa5c:	lahf   
  40aa5d:	xchg   ecx,eax
  40aa5e:	popf   
  40aa5f:	retf   0x3cbe
  40aa62:	jmp    0x81dde977
  40aa67:	push   0xffffffda
  40aa69:	mov    edx,0x7307d97b
  40aa6e:	jnp    0x40aaec
  40aa70:	xchg   ecx,eax
  40aa71:	push   edi
  40aa72:	adc    edi,DWORD PTR [esi]
  40aa74:	jbe    0x40aadd
  40aa76:	mov    ch,0x27
  40aa78:	in     al,0x41
  40aa7a:	inc    ecx
  40aa7b:	xor    bl,al
  40aa7d:	lidtd  [esi-0x47]
  40aa81:	mul    BYTE PTR [esi]
  40aa83:	(bad)  
  40aa84:	jnp    0x40aa16
  40aa86:	sar    DWORD PTR [edx+0x5e060192],0x41
  40aa8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa8e:	nop
  40aa8f:	pop    ss
  40aa90:	xchg   esp,eax
  40aa91:	or     DWORD PTR [ecx+edi*2],0xffffff9d
  40aa95:	adc    ax,0x60e6
  40aa99:	pop    es
  40aa9a:	mov    al,0xce
  40aa9c:	fld    TBYTE PTR [esi+edi*4-0x70]
  40aaa0:	test   DWORD PTR [edi],eax
  40aaa2:	jp     0x40ab0a
  40aaa4:	ret    
  40aaa5:	icebp  
  40aaa6:	push   ss
  40aaa7:	push   esp
  40aaa8:	shl    BYTE PTR [edx+0x4b4b8c10],0x73
  40aaaf:	inc    edx
  40aab0:	cmp    DWORD PTR [edi+eiz*8+0x1e],esp
  40aab4:	cmp    eax,0xc61f82d4
  40aab9:	imul   esi,DWORD PTR [edx+eiz*4],0xffffffdf
  40aabd:	and    BYTE PTR [ecx],ah
  40aabf:	sub    eax,0x7fdcaeec
  40aac4:	push   es
  40aac5:	push   es
  40aac6:	dec    ebp
  40aac7:	xor    esp,eax
  40aac9:	(bad)  
  40aacb:	mul    dh
  40aacd:	pop    eax
  40aace:	arpl   di,si
  40aad0:	mov    ecx,0x899393a7
  40aad5:	inc    edx
  40aad6:	fwait
  40aad7:	and    BYTE PTR [ecx],al
  40aad9:	cdq    
  40aada:	pop    edi
  40aadb:	sbb    eax,0xacaadce7
  40aae0:	mov    eax,ds:0xcfd07261
  40aae5:	cmc    
  40aae6:	jns    0x40aa88
  40aae8:	gs nop
  40aaea:	loope  0x40aadf
  40aaec:	ss xor cl,cl
  40aaef:	push   esi
  40aaf0:	cld    
  40aaf1:	hlt    
  40aaf2:	pop    esp
  40aaf3:	mov    ds:0x4a431569,al
  40aaf8:	das    
  40aaf9:	adc    esp,DWORD PTR [edx+edx*1+0x38]
  40aafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aafe:	scas   eax,DWORD PTR es:[edi]
  40aaff:	daa    
  40ab00:	icebp  
  40ab01:	or     edx,DWORD PTR [ecx-0x12]
  40ab04:	adc    DWORD PTR [ecx],eax
  40ab06:	mov    eax,ds:0x5cf860bd
  40ab0b:	dec    edx
  40ab0c:	outs   dx,DWORD PTR ds:[esi]
  40ab0d:	shr    al,cl
  40ab0f:	fst    DWORD PTR [esp+ebp*4]
  40ab12:	sub    DWORD PTR [edi+edx*2-0x39],0xffffffa7
  40ab17:	out    0xb4,al
  40ab19:	dec    ebp
  40ab1a:	out    0x58,al
  40ab1c:	xchg   ebp,eax
  40ab1d:	push   eax
  40ab1e:	cdq    
  40ab1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab20:	or     BYTE PTR [eax],dh
  40ab22:	mov    WORD PTR [edx+0x11fe53ba],gs
  40ab28:	pop    edi
  40ab29:	xchg   ebp,eax
  40ab2a:	cmp    BYTE PTR [edi],0x5f
  40ab2d:	xchg   edx,eax
  40ab2e:	addr16 retf 
  40ab30:	popa   
  40ab31:	push   ebp
  40ab32:	mov    ebx,0xf60d0575
  40ab37:	gs (bad) 
  40ab39:	mov    cl,0x8c
  40ab3b:	rol    edx,1
  40ab3d:	test   DWORD PTR [ebx-0x24005e63],edx
  40ab43:	mov    bh,0xe
  40ab45:	mov    al,0xa6
  40ab47:	push   eax
  40ab48:	add    BYTE PTR [edx+0x63],al
  40ab4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab4c:	popa   
  40ab4d:	mov    ds:0x69fc1a30,eax
  40ab52:	mov    ecx,0x84eb630e
  40ab57:	rol    DWORD PTR [eax-0x62c2e5a3],cl
  40ab5d:	in     eax,dx
  40ab5e:	les    ebp,FWORD PTR [edx]
  40ab60:	aam    0x60
  40ab62:	not    ah
  40ab64:	sub    esp,DWORD PTR [ecx-0x4bab91d9]
  40ab6a:	push   esp
  40ab6b:	pop    edi
  40ab6c:	fcomp  DWORD PTR [edi+0x39d7829c]
  40ab72:	sbb    dl,BYTE PTR [ebp+ebp*8+0x1cfa9522]
  40ab79:	or     BYTE PTR ss:[ebx+0x7d],0x26
  40ab7e:	sub    al,0xbd
  40ab80:	push   es
  40ab81:	and    eax,0x5f39aefc
  40ab86:	pop    esp
  40ab87:	pop    ebp
  40ab88:	jbe    0x40aba4
  40ab8a:	push   ss
  40ab8b:	int3   
  40ab8c:	cld    
  40ab8d:	retf   0x4c01
  40ab90:	ret    0x37b8
  40ab93:	and    BYTE PTR [edx],ch
  40ab95:	mov    esp,0x1cf20443
  40ab9b:	add    al,dl
  40ab9d:	enter  0x8d1f,0x56
  40aba1:	jbe    0x40abf1
  40aba3:	pop    edx
  40aba4:	arpl   WORD PTR [ebp-0x44fd4fce],bx
  40abaa:	push   ss
  40abab:	in     eax,0x7b
  40abad:	rcr    dl,1
  40abaf:	sbb    al,BYTE PTR ds:[edi+edi*1+0xb556861]
  40abb7:	repz mov ecx,0x9fe8702d
  40abbd:	and    al,0x3f
  40abbf:	jnp    0x40ac0d
  40abc1:	(bad)  
  40abc3:	mov    al,0xe0
  40abc5:	neg    DWORD PTR [ebx+eiz*2]
  40abc8:	push   es
  40abc9:	aad    0x81
  40abcb:	ret    0xecc5
  40abce:	cdq    
  40abcf:	dec    ebp
  40abd0:	fwait
  40abd1:	ret    
  40abd2:	int    0x6e
  40abd4:	shr    BYTE PTR [ebp+0x4e],1
  40abd7:	push   edx
  40abd8:	jmp    0x569e:0x514cd554
  40abdf:	dec    edi
  40abe0:	or     cl,cl
  40abe2:	sub    esi,edi
  40abe4:	mov    BYTE PTR [edi],al
  40abe6:	sub    eax,DWORD PTR [eax]
  40abe8:	and    eax,0x316abcef
  40abed:	fisttp QWORD PTR [eax]
  40abef:	ficomp WORD PTR [esi-0x2a]
  40abf2:	bound  edi,QWORD PTR [ebx-0x3d8f3dd5]
  40abf8:	les    ecx,FWORD PTR [eax]
  40abfa:	push   edx
  40abfb:	push   0xf6dda95d
  40ac00:	mov    bl,0x27
  40ac02:	sub    eax,0x1f1810f4
  40ac07:	jmp    0x40abb6
  40ac09:	dec    ebp
  40ac0a:	dec    eax
  40ac0b:	es jecxz 0x40abf2
  40ac0e:	inc    esp
  40ac0f:	fst    QWORD PTR [ecx+0x37]
  40ac12:	mov    ebp,DWORD PTR [edx+0x6e]
  40ac15:	popf   
  40ac16:	pavgw  mm1,mm0
  40ac19:	xchg   esp,eax
  40ac1a:	sub    eax,0x4a0ffd78
  40ac20:	sub    DWORD PTR [edx-0x44],esp
  40ac23:	dec    ecx
  40ac24:	jmp    0x40abb7
  40ac26:	jb     0x40ac3d
  40ac28:	ret    
  40ac29:	out    dx,eax
  40ac2a:	les    edi,FWORD PTR [edi]
  40ac2c:	mov    WORD PTR [edx+0x3a2f7617],cs
  40ac32:	cmp    al,0x99
  40ac34:	jmp    0xf77f:0x18af3f26
  40ac3b:	arpl   bx,si
  40ac3d:	stc    
  40ac3e:	add    BYTE PTR [eax+0x2f29ccd2],ch
  40ac44:	dec    ecx
  40ac45:	mov    eax,ds:0xd1bd6422
  40ac4a:	shr    eax,1
  40ac4c:	lds    esp,FWORD PTR [edi-0x30]
  40ac4f:	int3   
  40ac50:	fidivr WORD PTR [ebp+0x132f9cd1]
  40ac56:	or     eax,0xada44d78
  40ac5b:	xor    edx,ebx
  40ac5d:	es or  eax,0x1762fdfd
  40ac63:	mov    ebx,0xb4bd6a45
  40ac68:	mov    al,0xe6
  40ac6a:	xor    BYTE PTR cs:[edi-0x4b2b9536],bl
  40ac71:	lea    edi,[esi+esi*4-0x5f62dac4]
  40ac78:	pop    ebx
  40ac79:	jb     0x40ac3a
  40ac7b:	jae    0x40ac4c
  40ac7d:	sbb    bl,bl
  40ac7f:	out    0xb6,al
  40ac81:	sbb    al,0x7c
  40ac83:	nop
  40ac84:	mov    eax,ds:0x53a93cb5
  40ac89:	loopne 0x40ac0c
  40ac8b:	outs   dx,BYTE PTR ds:[esi]
  40ac8c:	jb     0x40ac89
  40ac8e:	mov    ah,0xa6
  40ac90:	sub    dh,al
  40ac92:	outs   dx,DWORD PTR ds:[esi]
  40ac93:	pop    ecx
  40ac94:	test   DWORD PTR [edx+0x6d],edx
  40ac97:	or     DWORD PTR [ecx-0x55],0x92121aaa
  40ac9e:	(bad)  
  40ac9f:	pop    ebx
  40aca0:	jg     0x40ac3e
  40aca2:	cmc    
  40aca3:	xchg   esp,eax
  40aca4:	add    BYTE PTR [ebx+esi*8],0x18
  40aca8:	or     DWORD PTR [ebp+0x68109d2f],ecx
  40acae:	fmulp  st(1),st
  40acb0:	icebp  
  40acb1:	loopne 0x40ac62
  40acb3:	fisubr DWORD PTR [edi-0x8]
  40acb6:	mov    dh,0x68
  40acb8:	and    al,0xf7
  40acba:	aaa    
  40acbb:	dec    ebp
  40acbc:	or     BYTE PTR [ebx+0x548affcc],cl
  40acc2:	shl    dh,cl
  40acc4:	mov    edx,0x18ac6c7c
  40acc9:	push   cs
  40acca:	jmp    0x40ac4d
  40accc:	ret    
  40accd:	inc    ebp
  40acce:	cwde   
  40accf:	mov    esi,edi
  40acd1:	ja     0x40ac84
  40acd3:	(bad)  
  40acd4:	and    al,0xde
  40acd6:	inc    edx
  40acd7:	addr16 loop 0x40accc
  40acda:	xor    ebp,DWORD PTR [ecx]
  40acdc:	aas    
  40acdd:	sub    cl,ah
  40acdf:	jg     0x40ad01
  40ace1:	out    dx,eax
  40ace2:	nop
  40ace3:	xchg   edi,eax
  40ace4:	inc    esi
  40ace5:	leave  
  40ace6:	dec    ebp
  40ace7:	or     BYTE PTR [esi+eiz*1-0x74],dh
  40aceb:	call   0x48587aac
  40acf0:	ins    BYTE PTR es:[edi],dx
  40acf1:	pusha  
  40acf2:	test   al,0xab
  40acf4:	inc    ebp
  40acf5:	std    
  40acf6:	hlt    
  40acf7:	loopne 0x40acce
  40acf9:	cmp    edx,DWORD PTR ds:0xe41e6c92
  40acff:	xchg   edx,eax
  40ad00:	iret   
  40ad01:	dec    esi
  40ad02:	jl     0x40ad08
  40ad04:	int    0x8
  40ad06:	push   edx
  40ad07:	xchg   edi,eax
  40ad09:	out    0xe7,al
  40ad0b:	and    BYTE PTR [edx-0x3b660520],ah
  40ad11:	pminsw mm5,QWORD PTR [edi]
  40ad14:	int    0x2d
  40ad16:	mov    ds:0xb3d071a4,al
  40ad1b:	push   0xffffffaf
  40ad1d:	and    DWORD PTR [edi],esp
  40ad1f:	loope  0x40ad78
  40ad21:	add    dl,ah
  40ad23:	lods   eax,DWORD PTR ds:[esi]
  40ad24:	nop
  40ad25:	dec    ebx
  40ad26:	xchg   esi,eax
  40ad27:	lods   eax,DWORD PTR ds:[esi]
  40ad28:	jns    0x40acd3
  40ad2a:	mov    dl,0xa1
  40ad2c:	stos   DWORD PTR es:[edi],eax
  40ad2d:	or     DWORD PTR [ebp-0x39],eax
  40ad30:	add    bl,BYTE PTR [ebp-0xe]
  40ad33:	xor    dl,BYTE PTR [eax]
  40ad35:	mov    eax,ds:0x925e9087
  40ad3a:	lock gs push edx
  40ad3d:	(bad)  
  40ad3e:	loopne 0x40ad00
  40ad40:	addr16 pop ecx
  40ad42:	mov    dl,BYTE PTR [eax-0x2718d30f]
  40ad48:	cld    
  40ad49:	mov    ds,WORD PTR [eax-0x79ca3c53]
  40ad4f:	(bad)
  40ad53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad54:	les    edx,FWORD PTR ds:0x8bbbc522
  40ad5a:	push   esp
  40ad5b:	mov    edx,0xc96d060c
  40ad60:	lock scas eax,DWORD PTR es:[edi]
  40ad62:	jnp    0x40ad0b
  40ad64:	push   eax
  40ad65:	outs   dx,DWORD PTR gs:[esi]
  40ad67:	cdq    
  40ad68:	cdq    
  40ad69:	pop    esp
  40ad6a:	js     0x40ad48
  40ad6c:	inc    ebx
  40ad6d:	ja     0x40ade4
  40ad6f:	stos   WORD PTR es:[edi],ax
  40ad71:	or     al,0xf9
  40ad73:	push   ebx
  40ad74:	mul    cl
  40ad76:	push   esp
  40ad77:	popa   
  40ad78:	or     ebp,DWORD PTR [eax+0x2d]
  40ad7b:	sbb    eax,0x13d1bb30
  40ad80:	fdivr  DWORD PTR [edx]
  40ad82:	cld    
  40ad83:	shr    esi,0x12
  40ad86:	push   0xffffffca
  40ad88:	(bad)  
  40ad89:	pop    esi
  40ad8a:	sbb    BYTE PTR [esp+ecx*8+0x55],0xcc
  40ad8f:	dec    ebp
  40ad90:	clc    
  40ad91:	dec    edx
  40ad92:	aas    
  40ad93:	cmp    eax,0x3a8ef810
  40ad98:	cmp    al,0xa9
  40ad9a:	inc    edi
  40ad9b:	ret    
  40ad9c:	and    eax,0x90d68968
  40ada1:	push   es
  40ada2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada3:	adc    ebp,ecx
  40ada5:	push   ss
  40ada6:	scas   al,BYTE PTR es:[edi]
  40ada7:	and    DWORD PTR [esi-0x338dc9ea],ecx
  40adad:	gs or  bl,0xf2
  40adb1:	hlt    
  40adb2:	inc    eax
  40adb3:	bound  eax,QWORD PTR [ebp+0x10]
  40adb6:	shr    BYTE PTR [ebx],cl
  40adb8:	add    ch,BYTE PTR [ebx+edi*8-0x7d]
  40adbc:	add    eax,0xcff5409f
  40adc1:	gs sbb eax,0x9aa2f923
  40adc7:	adc    dh,bh
  40adc9:	ret    0xace1
  40adcc:	adc    eax,0xc9005417
  40add1:	jo     0x40ae2a
  40add3:	bound  edi,QWORD PTR [esi+ebp*8-0x1d]
  40add7:	jge    0x40ae13
  40add9:	adc    edi,ebx
  40addb:	pop    esi
  40addc:	imul   ebx,DWORD PTR ss:[ebp+0x4e],0xc2a2a96e
  40ade4:	dec    esi
  40ade5:	mov    al,0xce
  40ade7:	xchg   edx,eax
  40ade8:	pop    esp
  40ade9:	(bad)  
  40adea:	pop    edx
  40adeb:	push   ecx
  40adec:	call   0x52b6:0xc09e42ba
  40adf3:	popf   
  40adf4:	dec    eax
  40adf5:	loopne 0x40ae45
  40adf7:	imul   edx,esp,0xa2996964
  40adfd:	fistp  WORD PTR ds:0xbafe47a7
  40ae03:	lods   al,BYTE PTR ds:[esi]
  40ae04:	sub    cl,BYTE PTR [ebx+eiz*8]
  40ae07:	mov    esi,0xd037bfb1
  40ae0c:	(bad)  
  40ae0e:	or     al,BYTE PTR [eax]
  40ae10:	enter  0x1178,0x32
  40ae14:	push   es
  40ae15:	pusha  
  40ae16:	xor    DWORD PTR [eax],edx
  40ae18:	add    ecx,ebp
  40ae1a:	jp     0x40ada2
  40ae1c:	enter  0xb2e4,0xc7
  40ae20:	(bad)  
  40ae21:	and    edi,esp
  40ae23:	mov    ah,0x70
  40ae25:	in     eax,dx
  40ae26:	xlat   BYTE PTR ds:[ebx]
  40ae27:	out    dx,eax
  40ae28:	mov    edi,0xf72beb6a
  40ae2d:	(bad)  
  40ae2e:	sar    DWORD PTR cs:[ebx-0x4b],cl
  40ae32:	fwait
  40ae33:	ror    dh,1
  40ae35:	xchg   edx,eax
  40ae36:	fidiv  WORD PTR [eax]
  40ae38:	ins    BYTE PTR es:[edi],dx
  40ae39:	hlt    
  40ae3a:	test   al,0x65
  40ae3c:	ja     0x40ae80
  40ae3e:	adc    ecx,DWORD PTR [ecx+0x4c]
  40ae41:	and    ah,BYTE PTR [edi]
  40ae43:	(bad)  [edx+esi*1-0x80]
  40ae47:	add    ah,BYTE PTR [esi+0x67]
  40ae4a:	leave  
  40ae4b:	call   0x450f53
  40ae50:	test   eax,0xfa96bb0e
  40ae55:	mov    ds:0x1f76d954,eax
  40ae5a:	jecxz  0x40ae98
  40ae5c:	in     eax,dx
  40ae5d:	sbb    al,0x1c
  40ae5f:	and    DWORD PTR [ecx+0x5afa6c23],ebp
  40ae65:	daa    
  40ae66:	call   0xffd6:0x1b524d7e
  40ae6d:	pop    ebx
  40ae6e:	dec    eax
  40ae6f:	loope  0x40ae4c
  40ae71:	nop
  40ae72:	add    esi,DWORD PTR [edx-0x57]
  40ae75:	enter  0xd9b4,0x75
  40ae79:	mov    cl,0xa4
  40ae7b:	pop    es
  40ae7c:	int3   
  40ae7d:	lock neg DWORD PTR [ebx+0x62e91e40]
  40ae84:	jecxz  0x40ae48
  40ae86:	lods   eax,DWORD PTR ds:[esi]
  40ae87:	fisttp WORD PTR [esi+ecx*1+0x65539343]
  40ae8e:	mov    dl,BYTE PTR [ecx]
  40ae90:	out    0x32,eax
  40ae92:	es out dx,eax
  40ae94:	push   edx
  40ae95:	pop    ebx
  40ae96:	(bad)  
  40ae97:	xrelease data16 mov BYTE PTR [ecx+ebp*1],cl
  40ae9c:	inc    ecx
  40ae9d:	imul   DWORD PTR [ecx+ebp*1-0x65]
  40aea1:	mov    esi,0xc0b38152
  40aea6:	mov    ss,WORD PTR [eax-0xe]
  40aea9:	dec    esi
  40aeaa:	les    edx,FWORD PTR [ebx+0x4f]
  40aead:	cmp    al,0x44
  40aeaf:	mov    ebp,0x475f8efc
  40aeb4:	fucomip st,st(5)
  40aeb6:	adc    BYTE PTR [ebx+0x3fd5a849],0xb6
  40aebd:	fdiv   QWORD PTR [ecx-0x62bfedf3]
  40aec3:	add    bh,BYTE PTR [edx+esi*1]
  40aec6:	add    al,0x12
  40aec8:	push   cs
  40aec9:	sbb    eax,0x665f7d9b
  40aece:	gs push 0xffffffd3
  40aed1:	das    
  40aed2:	loop   0x40ae57
  40aed4:	mov    WORD PTR [ebp+0x19],?
  40aed7:	xchg   DWORD PTR [edi],eax
  40aed9:	push   0x44
  40aedb:	call   0xc1ad:0x86341e8b
  40aee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee3:	push   ebp
  40aee4:	ins    BYTE PTR es:[edi],dx
  40aee5:	repnz push 0xffffffbd
  40aee8:	mov    eax,ds:0x6185418e
  40aeed:	(bad)  
  40aeef:	jle    0x40af42
  40aef1:	fild   WORD PTR ds:[ebx]
  40aef4:	pop    esp
  40aef5:	arpl   WORD PTR [edx],di
  40aef7:	call   0x1bc4:0xfec48808
  40aefe:	inc    eax
  40aeff:	push   eax
  40af00:	sub    ecx,DWORD PTR [esp+ecx*2]
  40af03:	mov    dl,0x28
  40af05:	mov    ebp,DWORD PTR [esi+0x44dd8b62]
  40af0b:	jl     0x40aea2
  40af0d:	push   eax
  40af0e:	and    bh,BYTE PTR [edi-0x149f3803]
  40af14:	inc    ecx
  40af15:	mov    eax,DWORD PTR [ebx]
  40af17:	(bad)  
  40af18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af19:	jbe    0x40af3c
  40af1b:	std    
  40af1c:	push   es
  40af1d:	sub    eax,0x84b17e7e
  40af22:	dec    esi
  40af23:	and    ecx,DWORD PTR [esi]
  40af25:	aaa    
  40af26:	xor    bl,BYTE PTR [ecx]
  40af28:	and    BYTE PTR [esi-0x63cc487],ah
  40af2e:	xor    al,0x76
  40af30:	inc    ebp
  40af31:	scas   al,BYTE PTR es:[edi]
  40af32:	aas    
  40af33:	aam    0x28
  40af35:	push   0x36a0a346
  40af3a:	push   edx
  40af3b:	pop    ecx
  40af3c:	adc    edi,ecx
  40af3e:	les    ebp,FWORD PTR [esi-0x7a]
  40af41:	push   esp
  40af42:	mov    WORD PTR [edx],ss
  40af44:	pop    ds
  40af45:	sub    al,0xad
  40af47:	cmp    eax,0xaa18ee83
  40af4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af4d:	mov    eax,ds:0x94a8dfc
  40af52:	fldcw  WORD PTR [eax]
  40af54:	inc    eax
  40af55:	adc    esp,esi
  40af57:	push   cs
  40af58:	les    edx,FWORD PTR [esi-0x69f48d40]
  40af5e:	aas    
  40af5f:	push   0x12
  40af61:	retf   
  40af62:	ret    
  40af63:	fcom   QWORD PTR [eax+0xd0ad3db]
  40af69:	xchg   ecx,eax
  40af6a:	push   eax
  40af6b:	adc    al,0xb9
  40af6d:	dec    ecx
  40af6e:	(bad)  
  40af6f:	mov    ah,0x7f
  40af71:	jp     0x40afdb
  40af73:	jmp    0xeafd051
  40af78:	xor    cl,BYTE PTR [ecx+0x11]
  40af7b:	dec    ecx
  40af7c:	mul    DWORD PTR [edx+eax*8]
  40af7f:	add    bh,BYTE PTR [ebx]
  40af81:	and    DWORD PTR [edi-0x61],eax
  40af84:	dec    ebx
  40af85:	push   eax
  40af86:	mov    ebp,0x1dbd8cdf
  40af8b:	rcl    DWORD PTR [esp+edx*4],cl
  40af8e:	mov    esp,DWORD PTR [ebx]
  40af90:	inc    ecx
  40af91:	stc    
  40af92:	int    0x86
  40af94:	jmp    0x418b:0x325a9740
  40af9b:	cwde   
  40af9c:	sbb    al,dl
  40af9e:	test   ecx,0xf568cfc8
  40afa4:	stos   DWORD PTR es:[edi],eax
  40afa5:	jmp    0x4baf:0xc0c2a682
  40afac:	xchg   DWORD PTR [eax-0xb451572],eax
  40afb2:	iret   
  40afb3:	pop    edx
  40afb4:	dec    edx
  40afb6:	mov    al,0xe2
  40afb8:	mov    fs,WORD PTR [esi+0x821a165]
  40afbe:	push   ss
  40afbf:	push   ebx
  40afc0:	xor    eax,0x484cadd5
  40afc5:	adc    ebp,eax
  40afc7:	loop   0x40afc3
  40afc9:	mul    BYTE PTR [ecx-0x47b8a84c]
  40afcf:	data16 in al,0x9
  40afd2:	push   ebp
  40afd3:	jecxz  0x40b030
  40afd5:	stos   BYTE PTR es:[edi],al
  40afd6:	out    0x72,al
  40afd8:	shl    esi,cl
  40afda:	loop   0x40b029
  40afdc:	dec    esp
  40afdd:	inc    edi
  40afde:	xor    eax,0x8cbda0af
  40afe3:	bound  eax,QWORD PTR [ecx]
  40afe5:	and    BYTE PTR [eax+0x6b],0x53
  40afe9:	add    BYTE PTR [esp+esi*4-0x25],dh
  40afed:	and    eax,0xfc4e4a0
  40aff2:	sub    dl,BYTE PTR ds:0xc2f74399
  40aff8:	ins    DWORD PTR es:[edi],dx
  40aff9:	mov    edi,0x21007e33
  40affe:	sub    ah,BYTE PTR [edi]
  40b000:	loope  0x40afd3
  40b002:	push   eax
  40b003:	stc    
  40b004:	xor    ebx,DWORD PTR [eax-0x3c29f48e]
  40b00a:	or     eax,0x55bbeae1
  40b00f:	scas   eax,DWORD PTR es:[edi]
  40b010:	mov    edi,0x3a65b2e9
  40b015:	cli    
  40b016:	scas   eax,DWORD PTR es:[edi]
  40b017:	sub    al,0xbb
  40b019:	adc    WORD PTR [ebx],ax
  40b01c:	in     eax,0x5e
  40b01e:	adc    eax,0x176ba1c1
  40b023:	xchg   edi,eax
  40b024:	dec    ebx
  40b025:	sbb    bl,ah
  40b027:	jns    0x40b040
  40b029:	pop    DWORD PTR [ebx]
  40b02b:	adc    DWORD PTR [esi],eax
  40b02d:	ja     0x40b083
  40b02f:	dec    ecx
  40b030:	adc    DWORD PTR [ecx],edi
  40b032:	aad    0xf4
  40b034:	xchg   ecx,eax
  40b035:	pusha  
  40b036:	js     0x40b08c
  40b038:	leave  
  40b039:	pop    esp
  40b03a:	mov    ebp,ss
  40b03c:	push   edi
  40b03d:	adc    eax,DWORD PTR [edx+ecx*2]
  40b040:	sbb    DWORD PTR [ebp+0x12],0x88a05282
  40b047:	xor    cl,bh
  40b049:	inc    eax
  40b04a:	lock sbb al,0x0
  40b04d:	sbb    al,0x3d
  40b04f:	retf   0xad3c
  40b052:	(bad)  
  40b053:	out    dx,al
  40b054:	fst    DWORD PTR [edi-0x1c9dcd0c]
  40b05a:	or     DWORD PTR [edi+esi*8],edi
  40b05d:	pop    esi
  40b05e:	ret    
  40b05f:	repz arpl cx,ax
  40b062:	scas   ax,WORD PTR es:[edi]
  40b064:	lods   eax,DWORD PTR ds:[esi]
  40b065:	outs   dx,BYTE PTR ds:[esi]
  40b066:	(bad)  
  40b067:	jle    0x40b028
  40b069:	jno    0x40b07f
  40b06b:	sub    al,0x97
  40b06d:	ret    
  40b06e:	or     eax,0x1b4225b1
  40b073:	cmc    
  40b074:	ds clc 
  40b076:	ret    
  40b077:	stos   BYTE PTR es:[edi],al
  40b078:	mov    eax,ds:0x79f9e0d7
  40b07d:	adc    al,0x59
  40b07f:	das    
  40b080:	ret    0x3bad
  40b083:	pop    ebp
  40b084:	arpl   WORD PTR [esi-0x74b04149],bp
  40b08a:	pop    ds
  40b08b:	daa    
  40b08c:	idiv   DWORD PTR [esi-0xa]
  40b08f:	jmp    0x40b058
  40b091:	inc    eax
  40b092:	ret    0x3695
  40b095:	jmp    0x40b0dc
  40b097:	sbb    eax,0x9258915b
  40b09c:	mov    BYTE PTR [edi-0x70],dl
  40b09f:	cmp    esp,DWORD PTR [eax+0x4b3ae2c2]
  40b0a5:	jecxz  0x40b035
  40b0a7:	aas    
  40b0a8:	iret   
  40b0a9:	imul   BYTE PTR [ecx+0x7c]
  40b0ac:	(bad)  
  40b0ad:	cmp    dl,BYTE PTR [esi+0x6949403]
  40b0b3:	shl    DWORD PTR [edi+eax*8],0xc4
  40b0b7:	push   ecx
  40b0b8:	jns    0x40b0a5
  40b0ba:	mov    ds:0x83d5410d,eax
  40b0bf:	fsubr  DWORD PTR [ecx+0x222a6d35]
  40b0c5:	leave  
  40b0c6:	mov    ch,0xd
  40b0c8:	repz enter 0xa4f2,0xb8
  40b0cd:	inc    ecx
  40b0ce:	or     edi,DWORD PTR [edi]
  40b0d0:	je     0x40b0e8
  40b0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d4:	xor    esp,DWORD PTR [ebx+0x2a710b9f]
  40b0da:	mov    esp,0xaea62d79
  40b0df:	dec    ebp
  40b0e0:	jbe    0x40b08a
  40b0e2:	stos   BYTE PTR es:[edi],al
  40b0e3:	jo     0x40b068
  40b0e5:	cdq    
  40b0e6:	add    eax,DWORD PTR [edi-0x59a35e5a]
  40b0ec:	pop    ds
  40b0ed:	sbb    DWORD PTR [eax-0x1b],ebp
  40b0f0:	xor    eax,0x2760c4bd
  40b0f5:	pop    eax
  40b0f6:	int    0xc9
  40b0f8:	stc    
  40b0f9:	inc    esp
  40b0fa:	ja     0x40b0be
  40b0fc:	out    dx,eax
  40b0fd:	retf   
  40b0fe:	cmp    DWORD PTR [edx-0x319d380f],0xbbcf0acc
  40b108:	pop    es
  40b109:	out    dx,eax
  40b10a:	jle    0x40b0c4
  40b10c:	mov    edi,0x870ffa8b
  40b111:	in     eax,0x9d
  40b113:	lahf   
  40b114:	ins    DWORD PTR es:[edi],dx
  40b115:	xchg   edi,eax
  40b116:	sahf   
  40b117:	cmp    ch,ah
  40b119:	les    esp,FWORD PTR [ecx]
  40b11b:	pop    ebp
  40b11c:	add    al,0x3
  40b11e:	fistp  DWORD PTR [ebp+0x71]
  40b121:	stos   BYTE PTR es:[edi],al
  40b122:	mov    al,ds:0x49d30c77
  40b127:	outs   dx,BYTE PTR ds:[esi]
  40b128:	sti    
  40b129:	pop    eax
  40b12a:	shl    DWORD PTR [edi*1-0x1baa5351],0x44
  40b132:	inc    DWORD PTR [ebx-0x3fa778a0]
  40b138:	arpl   WORD PTR [edx+0x7457242d],bp
  40b13e:	test   DWORD PTR [esi+0x52],eax
  40b141:	add    eax,0xb324aee9
  40b146:	mov    edi,0x7a2b9a33
  40b14b:	inc    eax
  40b14c:	cmp    ah,BYTE PTR [edx]
  40b14e:	pop    ebp
  40b14f:	inc    cx
  40b151:	loop   0x40b1c9
  40b153:	sbb    bh,BYTE PTR [esi+ebp*8+0x5add0755]
  40b15a:	push   ebx
  40b15b:	add    al,BYTE PTR [eax+0x4ccafcf7]
  40b161:	ja     0x40b1bf
  40b163:	fld    TBYTE PTR [edi-0x5c]
  40b166:	into   
  40b167:	(bad)  
  40b168:	adc    al,0xe7
  40b16a:	mov    ah,0x68
  40b16c:	scas   al,BYTE PTR es:[edi]
  40b16d:	es sahf 
  40b16f:	dec    ecx
  40b170:	in     eax,dx
  40b171:	xchg   BYTE PTR [edx-0x285f4112],ch
  40b177:	dec    ebx
  40b178:	(bad)  
  40b179:	cwde   
  40b17a:	jl     0x40b142
  40b17c:	lock jns 0x40b149
  40b17f:	cmc    
  40b180:	adc    esi,DWORD PTR [eax-0x8d49b98]
  40b186:	xor    al,0xc1
  40b188:	aas    
  40b189:	cdq    
  40b18a:	cmp    ebx,esp
  40b18c:	test   BYTE PTR ds:0xd5b8b627,0x41
  40b193:	dec    edx
  40b194:	jp     0x40b1f1
  40b196:	mov    ebp,esi
  40b198:	jmp    0x40b1b7
  40b19a:	pop    ebp
  40b19b:	data16 adc BYTE PTR [edi+0x3541c33],bl
  40b1a2:	(bad)  
  40b1a3:	or     eax,0xda69612c
  40b1a8:	mov    bh,0xee
  40b1aa:	(bad)  
  40b1ab:	push   esp
  40b1ac:	dec    edi
  40b1ad:	sbb    dl,BYTE PTR [ecx+eiz*2+0x482e2e1f]
  40b1b4:	push   ebp
  40b1b5:	daa    
  40b1b6:	pop    ds
  40b1b7:	or     eax,0x2dcb120d
  40b1bc:	pop    ss
  40b1bd:	xlat   BYTE PTR ds:[ebx]
  40b1be:	or     ah,BYTE PTR [ebp+0x238334b8]
  40b1c4:	bound  ebp,QWORD PTR [ecx+0x3ffe719e]
  40b1ca:	pop    edi
  40b1cb:	fadd   DWORD PTR [esi+ebx*1]
  40b1ce:	adc    DWORD PTR [ecx-0x4a],edi
  40b1d1:	mov    edx,0x73168f5b
  40b1d6:	out    0xd1,al
  40b1d8:	pop    ecx
  40b1d9:	idiv   DWORD PTR [ebx+0x44]
  40b1dc:	cld    
  40b1dd:	in     al,dx
  40b1de:	sub    eax,0xc0c800c9
  40b1e3:	mov    es:0xc009e58d,eax
  40b1e9:	jae    0x40b1aa
  40b1eb:	ficomp WORD PTR [eax-0x79]
  40b1ee:	shl    BYTE PTR [ecx-0x243a0551],0x7f
  40b1f5:	xchg   esp,eax
  40b1f6:	repnz pop es
  40b1f8:	ins    DWORD PTR es:[edi],dx
  40b1f9:	jns    0x40b240
  40b1fb:	data16 out 0xc7,al
  40b1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ff:	mov    cl,0x9e
  40b201:	jecxz  0x40b1ff
  40b203:	mov    bh,bh
  40b205:	cmp    ah,BYTE PTR [esi]
  40b207:	fdivr  QWORD PTR [ebp+0x348a0f76]
  40b20d:	or     eax,0xb4a4b838
  40b212:	fwait
  40b213:	out    dx,al
  40b214:	add    BYTE PTR [eax+0x71c35650],ch
  40b21a:	mov    bh,0xea
  40b21c:	mov    ah,0x66
  40b21e:	jnp    0x40b26e
  40b220:	daa    
  40b221:	clc    
  40b222:	imul   esp,ebp,0x61
  40b225:	ss pop eax
  40b227:	lods   al,BYTE PTR ds:[esi]
  40b228:	jp     0x40b25a
  40b22a:	mov    eax,ds:0x7257593d
  40b22f:	push   esp
  40b230:	addps  xmm4,XMMWORD PTR [eax-0x52]
  40b234:	pop    ebp
  40b235:	scas   eax,DWORD PTR es:[edi]
  40b236:	ins    BYTE PTR es:[edi],dx
  40b237:	xor    DWORD PTR [esi],ebx
  40b239:	popf   
  40b23a:	sti    
  40b23b:	mov    di,0x9f23
  40b23f:	or     bl,BYTE PTR [ecx+0x7f]
  40b242:	pop    ebp
  40b243:	test   eax,0xa584d983
  40b248:	pop    eax
  40b249:	(bad)  
  40b24a:	jge    0x40b211
  40b24c:	pop    ecx
  40b24d:	shl    DWORD PTR [ecx+0x6c],cl
  40b250:	cs std 
  40b252:	(bad)  
  40b253:	aad    0xd2
  40b255:	xchg   edx,eax
  40b256:	rcl    ebx,1
  40b258:	xor    BYTE PTR [esi],bl
  40b25a:	mov    esp,DWORD PTR [edi]
  40b25c:	jmp    0xd5be:0x72283e1f
  40b263:	pop    es
  40b264:	xchg   ebx,eax
  40b265:	adc    DWORD PTR [ebx-0x47],ebp
  40b268:	xor    BYTE PTR [edi],al
  40b26a:	aad    0xf0
  40b26c:	ret    0x6465
  40b26f:	adc    al,0xb9
  40b271:	xchg   ecx,eax
  40b272:	enter  0x5415,0xde
  40b276:	lock mov edx,DWORD PTR [edi+edx*8]
  40b27a:	mov    al,0xf5
  40b27c:	stc    
  40b27d:	xchg   esp,eax
  40b27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27f:	adc    eax,DWORD PTR [esp+ecx*8+0x70f07783]
  40b286:	xor    BYTE PTR [edx+0x5211ceb7],ah
  40b28c:	ins    DWORD PTR es:[edi],dx
  40b28d:	add    esi,ecx
  40b28f:	add    eax,0x24f6a822
  40b294:	jmp    0x828c:0x744b5d2d
  40b29b:	sbb    DWORD PTR [ecx],ebp
  40b29d:	das    
  40b29e:	hlt    
  40b29f:	push   ebx
  40b2a0:	int3   
  40b2a1:	retf   
  40b2a2:	cmp    BYTE PTR [ecx-0x16],cl
  40b2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a6:	inc    edx
  40b2a7:	cmc    
  40b2a8:	or     BYTE PTR [eax-0x3f],ch
  40b2ab:	lock push ebx
  40b2ad:	aas    
  40b2ae:	pop    ss
  40b2af:	mov    cl,0xe0
  40b2b1:	out    dx,eax
  40b2b2:	(bad)  
  40b2b3:	push   ebx
  40b2b4:	sar    BYTE PTR [ebx],1
  40b2b6:	retf   
  40b2b7:	add    DWORD PTR [edi-0x4cacf438],ebp
  40b2bd:	cmp    dh,0xe8
  40b2c0:	fs push ds
  40b2c2:	jno    0x40b30e
  40b2c4:	call   0x58f17c45
  40b2c9:	dec    edi
  40b2ca:	add    al,0x4
  40b2cc:	test   al,0x8d
  40b2ce:	dec    ebp
  40b2cf:	add    ah,BYTE PTR [ecx-0x60]
  40b2d2:	mov    esp,0xc7ed4850
  40b2d7:	xor    edi,ebp
  40b2d9:	cdq    
  40b2da:	push   esi
  40b2db:	sti    
  40b2dc:	leave  
  40b2dd:	repnz (bad) 
  40b2df:	out    dx,eax
  40b2e0:	push   0x31
  40b2e2:	cmp    BYTE PTR [ecx-0xc],ah
  40b2e5:	call   0x98b2:0x1e8b64e7
  40b2ec:	cmp    eax,0x9d5fdd5d
  40b2f1:	inc    ecx
  40b2f2:	add    eax,0x4f154179
  40b2f7:	adc    al,0x63
  40b2f9:	imul   esp,DWORD PTR gs:[ebp+0x4a],0xcb57792d
  40b301:	bound  esp,QWORD PTR [ecx+0x41]
  40b304:	outs   dx,DWORD PTR ds:[esi]
  40b305:	jbe    0x40b2f7
  40b307:	jne    0x40b340
  40b309:	out    dx,al
  40b30a:	jnp    0x40b311
  40b30c:	cmp    eax,0xd77e2a60
  40b311:	adc    al,0x6
  40b313:	sub    ah,BYTE PTR [edi]
  40b315:	lea    edi,[esi]
  40b317:	push   ss
  40b318:	inc    ecx
  40b319:	rep lods eax,DWORD PTR ds:[esi]
  40b31b:	fcomp  DWORD PTR [edx+0x6645f4cc]
  40b321:	sbb    DWORD PTR [ebx+0x79208e1a],ebp
  40b327:	sbb    eax,esp
  40b329:	icebp  
  40b32a:	mov    bh,0x62
  40b32c:	adc    ebx,edx
  40b32e:	lock mov ch,0x29
  40b331:	loopne 0x40b2c5
  40b333:	sbb    eax,0x72f93f4
  40b338:	pop    eax
  40b339:	cld    
  40b33a:	ret    
  40b33b:	cmp    al,0xca
  40b33d:	cwde   
  40b33e:	fidivr WORD PTR [esi-0x49252c4c]
  40b344:	lahf   
  40b345:	fist   DWORD PTR [edx]
  40b347:	mov    ebx,DWORD PTR [ecx+0x7f01d062]
  40b34d:	pushf  
  40b34e:	adc    eax,0x41d6b91e
  40b353:	mov    ah,0x58
  40b355:	push   0x12cccaea
  40b35a:	js     0x40b30e
  40b35c:	mov    edi,0xccf9d5e5
  40b361:	jne    0x40b34a
  40b363:	cmc    
  40b364:	aam    0xc
  40b366:	in     eax,dx
  40b367:	xor    esp,ebx
  40b369:	adc    DWORD PTR [edi-0x69d3f50d],eax
  40b36f:	push   edi
  40b370:	push   esp
  40b371:	retf   0x12b0
  40b374:	adc    DWORD PTR [esi+0x7d1eddd5],eax
  40b37a:	jl     0x40b310
  40b37c:	fadd   DWORD PTR [edx-0x42]
  40b37f:	inc    ebx
  40b380:	jl     0x40b30a
  40b382:	jae    0x40b31e
  40b384:	jne    0x40b36b
  40b386:	es inc ebp
  40b388:	cmp    al,0x6c
  40b38a:	inc    ah
  40b38c:	loope  0x40b3ff
  40b38e:	lods   al,BYTE PTR ds:[esi]
  40b38f:	pop    ds
  40b390:	dec    edi
  40b391:	xor    al,0x68
  40b393:	inc    edi
  40b394:	imul   edx,DWORD PTR [eax+0x46c11ed2],0x74
  40b39b:	ins    BYTE PTR es:[edi],dx
  40b39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39d:	out    dx,eax
  40b39e:	xchg   edx,eax
  40b39f:	mov    ecx,0x545c0a2a
  40b3a4:	cli    
  40b3a5:	push   es
  40b3a6:	(bad)  
  40b3a7:	jecxz  0x40b3d4
  40b3a9:	jae    0x40b410
  40b3ab:	sub    al,0x66
  40b3ad:	mov    eax,0xa6158396
  40b3b2:	aam    0x81
  40b3b4:	int    0x3b
  40b3b6:	es stos BYTE PTR es:[edi],al
  40b3b8:	pop    ss
  40b3b9:	push   esp
  40b3ba:	jl     0x40b375
  40b3bc:	push   edi
  40b3bd:	shr    BYTE PTR [edi],cl
  40b3bf:	push   edi
  40b3c0:	int    0xfa
  40b3c2:	mov    edi,0x3eb50309
  40b3c7:	popa   
  40b3c8:	stos   DWORD PTR es:[edi],eax
  40b3c9:	pop    ecx
  40b3ca:	jnp    0x40b3cc
  40b3cc:	loopne 0x40b359
  40b3ce:	neg    BYTE PTR [edx]
  40b3d0:	mov    ebp,DWORD PTR [ecx+0x12523729]
  40b3d6:	lods   eax,DWORD PTR ds:[esi]
  40b3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3d8:	outs   dx,BYTE PTR ds:[esi]
  40b3d9:	add    eax,0x41bce19
  40b3de:	fucom  st(4)
  40b3e0:	mov    edi,0xa99619fb
  40b3e5:	inc    ebx
  40b3e6:	gs sub eax,0xe952ee27
  40b3ec:	mov    al,ds:0x717b88a6
  40b3f1:	(bad)  
  40b3f2:	mov    dl,0x4e
  40b3f4:	fcos   
  40b3f6:	xlat   BYTE PTR ds:[ebx]
  40b3f7:	je     0x40b477
  40b3f9:	imul   ebp,DWORD PTR [edx],0xb50b79c1
  40b3ff:	mov    al,0xc8
  40b401:	cld    
  40b402:	cmp    dl,ch
  40b404:	cld    
  40b405:	lods   eax,DWORD PTR ds:[esi]
  40b406:	push   esp
  40b407:	or     eax,0x1aabc0b4
  40b40c:	xchg   edx,eax
  40b40d:	out    dx,al
  40b40e:	mov    BYTE PTR [eax+esi*1],al
  40b411:	adc    eax,0x309ca9ed
  40b416:	sar    edx,1
  40b418:	out    0xb1,eax
  40b41a:	jne    0x40b3b6
  40b41c:	loop   0x40b44c
  40b41e:	dec    edx
  40b41f:	jecxz  0x40b411
  40b421:	fst    DWORD PTR [ecx+eiz*8]
  40b424:	mov    bh,0x5c
  40b426:	std    
  40b427:	jecxz  0x40b3e1
  40b429:	pop    ss
  40b42a:	enter  0xcf5,0x16
  40b42e:	subss  xmm6,DWORD PTR [esi+0x5a3a0766]
  40b436:	jg     0x40b433
  40b438:	les    esi,FWORD PTR [ecx+0x61]
  40b43b:	dec    ebp
  40b43c:	(bad)  
  40b43d:	pop    ss
  40b43e:	push   ecx
  40b43f:	cmp    al,0x98
  40b441:	pop    ebp
  40b442:	jg     0x40b40d
  40b444:	div    BYTE PTR [ebp+0x16ff6dda]
  40b44a:	add    DWORD PTR [eax-0x72],ebx
  40b44d:	sub    BYTE PTR [ebp-0x2],cl
  40b450:	mov    ah,0x96
  40b452:	jmp    0x644806b3
  40b457:	iret   
  40b458:	mov    edx,ss
  40b45a:	push   ebp
  40b45b:	rcl    DWORD PTR [edx],cl
  40b45d:	jae    0x40b451
  40b45f:	sub    ebx,ecx
  40b461:	xor    al,0x96
  40b463:	std    
  40b464:	aam    0xa4
  40b466:	(bad)  
  40b467:	mov    dh,0x13
  40b469:	retf   
  40b46a:	or     BYTE PTR [eax],dl
  40b46c:	pop    edi
  40b46d:	lock hlt 
  40b46f:	cmp    al,0x85
  40b471:	mov    edx,esi
  40b473:	cmp    BYTE PTR [ebx+0x5168f9f9],cl
  40b479:	lods   eax,DWORD PTR ds:[esi]
  40b47a:	jo     0x40b4d9
  40b47c:	dec    edi
  40b47d:	addr16 sub eax,0x99f00ddb
  40b483:	push   es
  40b484:	pop    edi
  40b485:	es mov edi,0x3bcfdcee
  40b48b:	mov    dh,0x92
  40b48d:	cmp    DWORD PTR [edx],esi
  40b48f:	sbb    ebp,DWORD PTR [ecx-0x72]
  40b492:	pop    esp
  40b493:	sbb    DWORD PTR [edx+0x117c9a79],ebp
  40b499:	push   es
  40b49a:	push   ebx
  40b49b:	in     al,dx
  40b49c:	pop    ebx
  40b49d:	jnp    0x40b425
  40b49f:	mov    DWORD PTR [ecx-0x6cf50557],eax
  40b4a5:	fistp  WORD PTR [ebx+edx*8+0x51]
  40b4a9:	pop    esp
  40b4aa:	daa    
  40b4ab:	push   ebp
  40b4ac:	rcr    BYTE PTR [ebp+0x2f513a2a],cl
  40b4b2:	in     al,dx
  40b4b3:	leave  
  40b4b4:	and    dl,BYTE PTR [edx]
  40b4b6:	mov    bh,0xa5
  40b4b8:	dec    ecx
  40b4b9:	xor    BYTE PTR [edx],0xb6
  40b4bc:	enter  0x9b14,0x47
  40b4c0:	(bad)  
  40b4c1:	sub    eax,0x8bee1529
  40b4c6:	sub    BYTE PTR [ebx],0xc3
  40b4c9:	cmc    
  40b4ca:	lods   al,BYTE PTR ds:[esi]
  40b4cb:	out    0x78,al
  40b4cd:	mov    bh,0xde
  40b4cf:	retf   0x27dc
  40b4d2:	test   ah,bh
  40b4d4:	adc    al,0x8e
  40b4d6:	or     BYTE PTR ds:0xadcd77d1,bh
  40b4dc:	ins    DWORD PTR es:[edi],dx
  40b4dd:	out    dx,al
  40b4de:	mov    dl,0x7c
  40b4e0:	in     eax,0x92
  40b4e2:	jns    0x40b501
  40b4e4:	mov    WORD PTR es:[eax-0x48c34a03],gs
  40b4eb:	cmp    eax,0x1aad90b8
  40b4f0:	fldcw  WORD PTR [esi]
  40b4f2:	repz adc DWORD PTR [eax],ebx
  40b4f5:	jl     0x40b504
  40b4f7:	fwait
  40b4f8:	mov    ds:0xf5e7d055,eax
  40b4fd:	mov    ds:0xa406939f,al
  40b502:	icebp  
  40b503:	ds pop ds
  40b505:	repnz leave 
  40b507:	sub    eax,0xc73f6fd7
  40b50c:	push   esi
  40b50d:	mov    ch,0xce
  40b50f:	cwde   
  40b510:	jno    0x40b57b
  40b512:	call   0xe0f:0xb72961df
  40b519:	add    DWORD PTR [esi-0x6a7c412],edi
  40b51f:	rcr    BYTE PTR [ebp+0x2c],1
  40b522:	sub    BYTE PTR [ebx-0x35],bh
  40b525:	ret    0x5ae
  40b528:	pop    edi
  40b529:	adc    al,0x89
  40b52b:	mov    eax,ds:0xeb6cc760
  40b530:	outs   dx,DWORD PTR ds:[esi]
  40b531:	and    eax,0xb66e9ae4
  40b536:	xor    al,0x54
  40b538:	inc    eax
  40b539:	pop    ecx
  40b53a:	sar    esp,0x52
  40b53d:	sub    DWORD PTR [ecx-0x9],ecx
  40b540:	jno    0x40b57b
  40b542:	es jge 0x40b551
  40b545:	(bad)  
  40b546:	mov    eax,ds:0x31000dea
  40b54b:	in     al,0x3
  40b54d:	push   edx
  40b54e:	jnp    0x40b4d1
  40b550:	sub    bl,ah
  40b552:	or     DWORD PTR [ecx-0xa],edx
  40b555:	sbb    edi,0x55
  40b558:	fwait
  40b559:	(bad)  
  40b55a:	es add al,0xb
  40b55d:	icebp  
  40b55e:	aaa    
  40b55f:	and    DWORD PTR [ebx+0x6f],eax
  40b562:	pop    es
  40b563:	xor    eax,0xa9977355
  40b568:	aaa    
  40b569:	add    ch,BYTE PTR [eax+0x18e07141]
  40b56f:	jmp    0x40b5c5
  40b571:	jae    0x40b55c
  40b573:	inc    ebp
  40b574:	mov    BYTE PTR [eax],ch
  40b576:	and    eax,0x7a1c6ff1
  40b57b:	out    0xfb,eax
  40b57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b57e:	into   
  40b57f:	rol    DWORD PTR [edx-0x1bafe9ff],1
  40b585:	cmp    BYTE PTR [eax+0x43cc395d],ch
  40b58b:	lahf   
  40b58c:	retf   
  40b58d:	cmp    DWORD PTR [ebx+0x7c042fbb],esi
  40b593:	mov    edx,ebp
  40b595:	or     al,0x1d
  40b597:	in     al,0x76
  40b599:	push   edx
  40b59a:	jae    0x40b605
  40b59c:	jns    0x40b612
  40b59e:	mov    edx,0x8028d925
  40b5a3:	fwait
  40b5a4:	mov    ah,0x64
  40b5a6:	xor    BYTE PTR [ebx-0x29],dh
  40b5a9:	cld    
  40b5aa:	xchg   cl,bh
  40b5ac:	and    al,0x95
  40b5ae:	mov    dh,0x8c
  40b5b0:	xor    BYTE PTR ds:0x94d5a6ae,cl
  40b5b6:	shl    DWORD PTR [ecx+0x88247c7],0xe3
  40b5bd:	stos   DWORD PTR es:[edi],eax
  40b5be:	nop
  40b5bf:	mov    cl,0xaa
  40b5c1:	jae    0xfdf2923b
  40b5c7:	jno    0x40b63c
  40b5c9:	add    DWORD PTR [edi],ecx
  40b5cb:	ja     0x40b5cb
  40b5cd:	and    bh,ah
  40b5cf:	mov    cs,WORD PTR [edx]
  40b5d1:	or     eax,0x118f11a
  40b5d6:	push   ebx
  40b5d7:	xchg   ebp,eax
  40b5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d9:	push   eax
  40b5da:	lods   eax,DWORD PTR ds:[esi]
  40b5db:	fwait
  40b5dc:	push   esp
  40b5dd:	or     dl,BYTE PTR [ebx-0x23]
  40b5e0:	push   0xaf146912
  40b5e5:	rol    DWORD PTR [eax+0x5a00032a],0xc9
  40b5ec:	(bad)  
  40b5ed:	retf   
  40b5ee:	fist   WORD PTR [edi+edx*1+0x54]
  40b5f2:	enter  0x9b7b,0xf
  40b5f6:	push   ds
  40b5f7:	sub    BYTE PTR [ecx+0x61b36e25],al
  40b5fd:	idiv   BYTE PTR [ecx-0x1]
  40b600:	xor    al,0xca
  40b602:	icebp  
  40b603:	icebp  
  40b604:	cld    
  40b605:	arpl   WORD PTR [edx+0x2fdbbccc],si
  40b60b:	pop    esi
  40b60c:	lahf   
  40b60d:	sub    BYTE PTR [edi],bh
  40b60f:	data16 mov dl,0xb5
  40b612:	fs mov edi,0xf04d5031
  40b618:	adc    DWORD PTR [edi+0x40da2a0f],eax
  40b61e:	jo     0x40b624
  40b620:	mov    eax,ds:0x39c260ee
  40b625:	out    dx,eax
  40b626:	shl    DWORD PTR [eax*1-0x6df1a08d],1
  40b62d:	fwait
  40b62e:	add    eax,0xb236954e
  40b633:	or     cl,dl
  40b635:	loop   0x40b61b
  40b637:	aad    0x4a
  40b639:	inc    ebx
  40b63a:	and    BYTE PTR [esi+0x39],ah
  40b63d:	in     al,0xfd
  40b63f:	sbb    eax,0x65e1b2f6
  40b644:	xchg   edx,eax
  40b645:	dec    edi
  40b646:	and    dh,BYTE PTR [esi]
  40b648:	les    edi,FWORD PTR [ebx-0x42c375fe]
  40b64e:	scas   eax,DWORD PTR es:[edi]
  40b64f:	push   ebp
  40b650:	mov    esi,0xa73ba59a
  40b655:	test   DWORD PTR [eax],esi
  40b657:	jmp    0xa4af:0x75aea350
  40b65e:	jmp    0xc6c4:0x6d84908d
  40b665:	scas   eax,DWORD PTR es:[edi]
  40b666:	inc    ebx
  40b667:	or     eax,0xab190341
  40b66c:	in     al,dx
  40b66d:	stc    
  40b66e:	ins    BYTE PTR es:[edi],dx
  40b66f:	outs   dx,BYTE PTR ds:[esi]
  40b670:	push   ss
  40b671:	(bad)  
  40b672:	mov    dh,0xd5
  40b674:	(bad)  
  40b675:	pop    edi
  40b676:	pusha  
  40b677:	addr16 jns 0x40b663
  40b67a:	sub    eax,0xe677d615
  40b67f:	cmp    BYTE PTR [esi-0x5675d473],bh
  40b685:	iret   
  40b686:	lds    ebp,FWORD PTR [edi]
  40b688:	push   ebx
  40b689:	das    
  40b68a:	pop    ebx
  40b68b:	call   0xc0b3177c
  40b690:	je     0x40b6c5
  40b692:	xchg   dl,bl
  40b694:	stos   BYTE PTR es:[edi],al
  40b695:	inc    ebp
  40b696:	addr16 stc 
  40b698:	jns    0x40b6b5
  40b69a:	dec    ecx
  40b69b:	repz mov edx,0x1ac9892a
  40b6a1:	xchg   edx,eax
  40b6a2:	lock and edi,DWORD PTR [esi+0x4c]
  40b6a6:	pop    esp
  40b6a7:	adc    eax,0xaaa4a842
  40b6ac:	pop    es
  40b6ad:	pop    edx
  40b6ae:	cmp    al,0x0
  40b6b0:	sbb    dh,BYTE PTR ds:0xbb9cfa71
  40b6b6:	fwait
  40b6b7:	pusha  
  40b6b8:	add    al,0x9c
  40b6ba:	(bad)  
  40b6bb:	pop    edi
  40b6bc:	test   eax,0xe828b1cf
  40b6c1:	int    0xc8
  40b6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c4:	pop    esi
  40b6c5:	iret   
  40b6c6:	add    al,0x62
  40b6c8:	ins    DWORD PTR es:[edi],dx
  40b6c9:	mov    ah,0x6c
  40b6cb:	int    0xdb
  40b6cd:	mov    ds:0xd9d13a91,al
  40b6d2:	jmp    0x8109ab1c
  40b6d7:	xchg   ebx,eax
  40b6d8:	pop    es
  40b6d9:	and    DWORD PTR [edx],eax
  40b6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6dc:	mov    al,0xd5
  40b6de:	xor    eax,0xfa6aaba5
  40b6e3:	lds    esp,FWORD PTR [ebx+0x56]
  40b6e6:	jae    0x40b717
  40b6e8:	xchg   DWORD PTR [ecx],edx
  40b6ea:	sub    DWORD PTR [edi],ebp
  40b6ec:	push   ebx
  40b6ed:	outs   dx,BYTE PTR ds:[esi]
  40b6ee:	mov    dh,al
  40b6f0:	aas    
  40b6f1:	aad    0x96
  40b6f3:	in     al,dx
  40b6f4:	inc    esp
  40b6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f6:	mov    ah,0xe7
  40b6f8:	jmp    0x8a75:0x9477c16c
  40b6ff:	iret   
  40b700:	in     al,0xfa
  40b702:	sti    
  40b703:	mov    dh,0x18
  40b705:	aam    0x7a
  40b707:	or     BYTE PTR [ecx-0x48268986],al
  40b70d:	hlt    
  40b70e:	scas   eax,DWORD PTR es:[edi]
  40b70f:	sub    BYTE PTR ds:0x198b71bf,cl
  40b715:	inc    ebx
  40b716:	sbb    BYTE PTR [edx+0x3def806f],ch
  40b71c:	sbb    eax,0x59fb9b1b
  40b721:	nop
  40b722:	fild   WORD PTR [ebx-0x32]
  40b725:	sahf   
  40b726:	cmc    
  40b727:	imul   ebp,DWORD PTR [eax],0x53a5842
  40b72d:	sbb    BYTE PTR [eax+0x3fd1612c],bh
  40b733:	xor    dl,BYTE PTR [eax]
  40b735:	xchg   esp,eax
  40b736:	inc    ebx
  40b737:	or     al,0x22
  40b739:	gs pop edx
  40b73b:	and    al,0xb
  40b73d:	pop    eax
  40b73e:	fsub   DWORD PTR [eax]
  40b740:	jo     0x40b777
  40b742:	xor    eax,DWORD PTR ds:0x9425a290
  40b748:	xlat   BYTE PTR ds:[ebx]
  40b749:	scas   eax,DWORD PTR es:[edi]
  40b74a:	loope  0x40b6ea
  40b74c:	(bad)  
  40b74d:	outs   dx,BYTE PTR ds:[esi]
  40b74e:	mov    dl,0x74
  40b750:	mov    ecx,0x93794e5f
  40b755:	pusha  
  40b756:	xor    DWORD PTR [eax+ebp*1],0xafbd32bf
  40b75d:	pop    es
  40b75e:	push   ds
  40b75f:	jle    0x40b7ac
  40b761:	mov    ecx,DWORD PTR [eax+0x3b]
  40b764:	nop
  40b765:	pushf  
  40b766:	dec    ebp
  40b767:	pop    ebp
  40b768:	(bad)  
  40b76a:	sbb    al,0x2d
  40b76c:	fld    DWORD PTR [edx]
  40b76e:	shl    DWORD PTR [esi-0x2e7dd87b],0x8f
  40b775:	aas    
  40b776:	pop    ecx
  40b777:	in     al,dx
  40b778:	cmp    al,0x3d
  40b77a:	ja     0x40b7f7
  40b77c:	sub    DWORD PTR [esi+0x4c],ecx
  40b77f:	ror    BYTE PTR [ebx+0x7],1
  40b782:	js     0x40b7cf
  40b784:	div    cl
  40b786:	jge    0x40b760
  40b788:	xchg   esi,eax
  40b789:	(bad)  
  40b78a:	xor    BYTE PTR [esi-0x57],cl
  40b78d:	ss (bad) 
  40b78f:	jmp    0x40b7c2
  40b791:	cmp    BYTE PTR [esi+0x6],0x39
  40b795:	cmp    al,0x88
  40b797:	pop    ss
  40b798:	les    esp,FWORD PTR [esi]
  40b79a:	or     cl,BYTE PTR [ebp-0x381ffb84]
  40b7a0:	push   cs
  40b7a1:	cs inc ebx
  40b7a3:	mov    esp,0xda77cd33
  40b7a8:	inc    ebp
  40b7a9:	test   eax,0xa9216334
  40b7ae:	call   0xa1b1:0xf8f64de0
  40b7b5:	aad    0xfd
  40b7b7:	int    0x44
  40b7b9:	mov    ah,al
  40b7bb:	fistp  QWORD PTR [edi]
  40b7bd:	sub    ah,dl
  40b7bf:	dec    ecx
  40b7c0:	aad    0x1c
  40b7c2:	or     DWORD PTR [edi+0x64],0x94a422bc
  40b7c9:	pop    edx
  40b7ca:	xchg   BYTE PTR [eax+0x7911254d],cl
  40b7d0:	icebp  
  40b7d1:	push   eax
  40b7d2:	inc    ebx
  40b7d3:	stos   BYTE PTR es:[edi],al
  40b7d4:	pop    ss
  40b7d5:	or     esi,ebx
  40b7d7:	es xor cl,cl
  40b7da:	mov    ah,0xb1
  40b7dc:	jp     0x40b853
  40b7de:	(bad)  
  40b7df:	pop    eax
  40b7e0:	icebp  
  40b7e1:	sahf   
  40b7e2:	out    dx,eax
  40b7e3:	ins    BYTE PTR es:[edi],dx
  40b7e4:	dec    edi
  40b7e5:	xor    eax,0x3688cf3b
  40b7ea:	mov    bh,0x3e
  40b7ec:	and    dh,BYTE PTR [ecx-0x68]
  40b7ef:	xchg   ecx,eax
  40b7f0:	inc    esi
  40b7f1:	inc    ebp
  40b7f2:	cmp    eax,DWORD PTR [ecx+0x7e]
  40b7f5:	xchg   edx,eax
  40b7f6:	stc    
  40b7f7:	out    0x2d,al
  40b7f9:	scas   al,BYTE PTR es:[edi]
  40b7fa:	adc    al,0x94
  40b7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7fd:	bound  esi,QWORD PTR [edx-0x4f8e8724]
  40b803:	outs   dx,BYTE PTR ds:[esi]
  40b804:	fidiv  WORD PTR [esi+0x23c9ed17]
  40b80a:	mov    ds:0x3364de03,al
  40b80f:	int    0xcf
  40b811:	dec    eax
  40b812:	add    esi,esi
  40b814:	xor    ebx,ebp
  40b816:	jne    0x40b854
  40b818:	push   ebp
  40b819:	inc    edx
  40b81a:	(bad)  
  40b81b:	sti    
  40b81c:	xor    BYTE PTR [ecx-0x244d4053],ah
  40b822:	or     eax,0x15164717
  40b827:	lods   al,BYTE PTR ds:[esi]
  40b828:	jmp    0x61a7c22d
  40b82d:	stos   DWORD PTR es:[edi],eax
  40b82e:	jbe    0x40b84b
  40b830:	ja     0x40b87e
  40b832:	push   ebx
  40b833:	icebp  
  40b834:	cmp    al,cl
  40b836:	and    DWORD PTR ds:0x85dd33ad,esp
  40b83c:	test   eax,0x8d0a2b13
  40b841:	call   0x6590a6de
  40b846:	push   ebx
  40b847:	out    0xa9,eax
  40b849:	mov    ebp,0x5b4a771
  40b84e:	sub    DWORD PTR [edi+edi*2+0x3d9ad57],edi
  40b855:	push   ebx
  40b856:	or     bl,BYTE PTR [ebx]
  40b858:	in     al,dx
  40b859:	ud2    
  40b85b:	shl    BYTE PTR [eax+eax*8+0x3c],cl
  40b85f:	test   al,0x53
  40b861:	rol    eax,cl
  40b863:	xchg   DWORD PTR [ecx+ebx*4],edx
  40b866:	pop    eax
  40b867:	inc    ebp
  40b868:	fld    DWORD PTR [ebx]
  40b86a:	lahf   
  40b86b:	sbb    edx,esp
  40b86d:	sub    eax,esi
  40b86f:	mov    ds:0x3d66ab90,eax
  40b874:	pop    edi
  40b875:	out    dx,al
  40b876:	call   0x4d1852d8
  40b87b:	retf   
  40b87c:	mov    dl,0xfb
  40b87e:	lahf   
  40b87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b880:	fcom   st(2)
  40b882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b883:	adc    eax,0x991a1372
  40b888:	stos   DWORD PTR es:[edi],eax
  40b889:	push   eax
  40b88a:	into   
  40b88b:	mov    DWORD PTR [ebp+0x20de9797],ecx
  40b891:	mov    edi,0x6c75e72c
  40b896:	jmp    0xabf9fe94
  40b89b:	sbb    ebp,DWORD PTR [edi+edi*2+0x6a93211]
  40b8a2:	popf   
  40b8a3:	test   DWORD PTR [ecx+esi*1+0x22],ebx
  40b8a7:	push   0xe40e049f
  40b8ac:	fmul   DWORD PTR [edi+0x33]
  40b8af:	add    bl,BYTE PTR [ebx-0x24e36e62]
  40b8b5:	jl     0x40b869
  40b8b7:	mov    bl,0xb2
  40b8b9:	pop    eax
  40b8ba:	dec    eax
  40b8bb:	int3   
  40b8bc:	cvttps2pi mm2,xmm5
  40b8bf:	cmc    
  40b8c0:	ins    BYTE PTR es:[edi],dx
  40b8c1:	(bad)  
  40b8c2:	not    DWORD PTR [edi-0x20ae7d9b]
  40b8c8:	xor    eax,0x20aac393
  40b8cd:	repnz ins DWORD PTR es:[edi],dx
  40b8cf:	jp     0x40b932
  40b8d1:	sub    DWORD PTR [ecx],esp
  40b8d3:	push   ecx
  40b8d4:	jecxz  0x40b87b
  40b8d6:	out    dx,eax
  40b8d7:	pop    ebp
  40b8d8:	into   
  40b8d9:	pop    esi
  40b8da:	xchg   ecx,eax
  40b8db:	test   DWORD PTR [ecx-0x399f631],ebp
  40b8e1:	and    ah,cl
  40b8e3:	jae    0x40b94f
  40b8e5:	xor    bh,BYTE PTR [esi-0x1a]
  40b8e8:	mov    ch,0x9a
  40b8ea:	xor    eax,0x42ff5bbc
  40b8ef:	mov    dh,BYTE PTR [ebp+0x6a]
  40b8f2:	sbb    al,0x40
  40b8f4:	int3   
  40b8f5:	mov    esp,0x2e20bf3b
  40b8fa:	push   eax
  40b8fb:	sbb    BYTE PTR [eax],dh
  40b8fd:	cmp    eax,0xf6657473
  40b902:	call   0xb5e09c31
  40b907:	xor    dl,BYTE PTR [ebx+0x6b]
  40b90a:	outs   dx,DWORD PTR ds:[esi]
  40b90b:	shl    BYTE PTR [edi-0x3b53cba5],1
  40b911:	mov    eax,0x56976c7f
  40b916:	inc    eax
  40b917:	xor    ebp,esp
  40b919:	lock out dx,eax
  40b91b:	sar    DWORD PTR [ecx],0xc1
  40b91e:	jg     0x40b935
  40b920:	(bad)  
  40b921:	stc    
  40b922:	xlat   BYTE PTR ds:[ebx]
  40b923:	pop    ebp
  40b924:	or     ah,ch
  40b926:	and    BYTE PTR [edx+0x3869b3c2],dl
  40b92c:	add    BYTE PTR [eax+0x7f],0x53
  40b930:	mov    dl,0xc8
  40b932:	cld    
  40b933:	mov    ds:0x17f1786,eax
  40b938:	dec    ecx
  40b939:	push   cs
  40b93a:	and    bh,ah
  40b93c:	xor    edx,ecx
  40b93e:	lock in eax,0xc4
  40b941:	inc    ecx
  40b942:	dec    edi
  40b943:	xor    esi,DWORD PTR [esi+0x28203016]
  40b949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b94a:	or     BYTE PTR [esi],0xdc
  40b94d:	and    al,BYTE PTR [eax-0x54440c62]
  40b953:	jge    0x40b8e6
  40b955:	jb     0x40b95f
  40b957:	xor    esi,DWORD PTR [ebp+0x638fe75]
  40b95d:	and    al,0x24
  40b95f:	jns    0x40b914
  40b961:	push   cs
  40b962:	and    al,0xa
  40b964:	xor    al,0xd3
  40b966:	and    edi,DWORD PTR [ebp+0x14]
  40b969:	mov    bh,ch
  40b96b:	in     eax,0xcc
  40b96d:	jb     0x40b8fa
  40b96f:	ja     0x40b98c
  40b971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b972:	std    
  40b973:	daa    
  40b974:	lods   eax,DWORD PTR ds:[esi]
  40b975:	pushf  
  40b976:	mov    DWORD PTR [edi+0x39],eax
  40b979:	mov    bl,0x70
  40b97b:	aaa    
  40b97c:	aas    
  40b97d:	jg     0x40b982
  40b97f:	shr    DWORD PTR gs:[edx+esi*1+0x56711749],0xb7
  40b988:	stos   BYTE PTR es:[edi],al
  40b989:	xor    BYTE PTR ds:0xc59380a0,dl
  40b98f:	mov    esi,0x826773dd
  40b994:	mov    edi,0x75e33797
  40b999:	mov    dh,BYTE PTR [ebp-0x6d]
  40b99c:	cmp    eax,0x6a567278
  40b9a1:	cld    
  40b9a2:	leave  
  40b9a3:	add    BYTE PTR [edx-0x3],ch
  40b9a6:	ja     0x40ba24
  40b9a8:	adc    ch,0x85
  40b9ab:	adc    ebx,DWORD PTR [ecx+0x5e36d9b5]
  40b9b1:	mov    BYTE PTR [edx-0x5a43449],bh
  40b9b7:	ds pop ecx
  40b9b9:	je     0x40b964
  40b9bb:	jp     0x40b9a4
  40b9bd:	aas    
  40b9be:	mov    WORD PTR [ebp-0x6183ade9],fs
  40b9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9c5:	xor    al,BYTE PTR [eax]
  40b9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9c8:	dec    ebx
  40b9c9:	jbe    0x40b9c3
  40b9cb:	add    DWORD PTR [eax+eiz*2+0x4621f9b9],eax
  40b9d2:	pop    ss
  40b9d3:	jge    0x40b9f6
  40b9d5:	dec    esp
  40b9d6:	or     eax,0xa2f5d71a
  40b9db:	adc    al,0xc2
  40b9dd:	inc    edi
  40b9de:	inc    ecx
  40b9df:	addr16 in al,dx
  40b9e1:	cmc    
  40b9e2:	dec    esp
  40b9e3:	fwait
  40b9e4:	(bad)  
  40b9e5:	in     eax,0x6f
  40b9e7:	(bad)  [esi]
  40b9e9:	jbe    0x40b97e
  40b9eb:	loopne 0x40b9ca
  40b9ed:	aas    
  40b9ee:	fistp  WORD PTR [ebx]
  40b9f0:	gs jl  0x40ba20
  40b9f3:	dec    ebp
  40b9f4:	mov    bh,0x4c
  40b9f6:	xlat   BYTE PTR ds:[ebx]
  40b9f7:	mov    al,ds:0x91ce905e
  40b9fc:	or     DWORD PTR [eax+0x64],edi
  40b9ff:	fwait
  40ba00:	pop    es
  40ba01:	cmp    dh,BYTE PTR [edx]
  40ba03:	dec    ecx
  40ba04:	loopne 0x40b9aa
  40ba06:	shl    DWORD PTR [ebx-0x5f],cl
  40ba09:	cwde   
  40ba0a:	sub    ecx,ebp
  40ba0c:	push   0x0
  40ba0e:	(bad)  
  40ba0f:	adc    eax,0x7bbe077f
  40ba14:	es mov ecx,0xf785c43e
  40ba1a:	jmp    0x2d2b:0x726bf2f8
  40ba21:	dec    ebx
  40ba22:	add    eax,0x90cae313
  40ba27:	ror    ah,cl
  40ba29:	push   ss
  40ba2a:	and    BYTE PTR [ebx-0x68],0x26
  40ba2e:	dec    ebx
  40ba2f:	pop    ss
  40ba30:	cmp    ch,BYTE PTR [ebx-0x6b5ae515]
  40ba36:	jmp    0x40b9e8
  40ba38:	inc    esp
  40ba39:	xchg   DWORD PTR [eax],ecx
  40ba3b:	sub    dh,BYTE PTR [ecx]
  40ba3d:	sub    ch,BYTE PTR [ecx+0x34]
  40ba40:	ds mov dl,0x65
  40ba43:	nop
  40ba44:	cwde   
  40ba45:	sub    DWORD PTR [edx+0x4e],eax
  40ba48:	mov    al,ds:0x2ca0551d
  40ba4d:	les    esi,FWORD PTR [eax]
  40ba4f:	push   ds
  40ba50:	aas    
  40ba51:	in     al,dx
  40ba52:	adc    al,0xcf
  40ba54:	push   ss
  40ba55:	dec    esi
  40ba56:	bound  esi,QWORD PTR [ebx+0x4c]
  40ba59:	neg    DWORD PTR [ecx]
  40ba5b:	xchg   DWORD PTR [ebx+0x44],edx
  40ba5e:	leave  
  40ba5f:	pop    eax
  40ba60:	jo     0x40ba68
  40ba62:	dec    esi
  40ba63:	jle    0x40ba3f
  40ba65:	clc    
  40ba66:	aas    
  40ba67:	pop    edx
  40ba68:	xor    al,0xb5
  40ba6a:	and    ch,0x6d
  40ba6d:	mov    ch,0x48
  40ba6f:	jnp    0x40ba42
  40ba71:	dec    ebx
  40ba72:	mov    esp,0x84869f18
  40ba77:	outs   dx,BYTE PTR ds:[esi]
  40ba78:	fwait
  40ba79:	mov    dh,0x53
  40ba7b:	rol    BYTE PTR [edi-0x4a],0xf4
  40ba7f:	mov    eax,ds:0x4a16120
  40ba84:	fisttp QWORD PTR [ebx]
  40ba86:	or     cl,bh
  40ba88:	rcr    DWORD PTR [edx+eiz*1-0x39],cl
  40ba8c:	in     eax,dx
  40ba8d:	lods   eax,DWORD PTR ds:[esi]
  40ba8e:	jae    0x40baa7
  40ba90:	jno    0x40bafb
  40ba92:	or     cl,BYTE PTR [ecx-0x28]
  40ba95:	ins    BYTE PTR es:[edi],dx
  40ba96:	add    DWORD PTR ds:0x6b0d755d,esi
  40ba9c:	or     al,BYTE PTR [ebx+0x69c59c60]
  40baa2:	add    eax,0xb393d512
  40baa7:	pop    ss
  40baa8:	sti    
  40baa9:	mov    DWORD PTR [edi-0x750cee33],ebp
  40baaf:	ja     0x40bae0
  40bab1:	in     al,0xc6
  40bab3:	mov    al,ds:0xd9070859
  40bab8:	pusha  
  40bab9:	adc    edx,ebp
  40babb:	pop    ebp
  40babc:	rcl    BYTE PTR [ebx-0x7997be26],1
  40bac2:	or     al,al
  40bac4:	loopne 0x40baee
  40bac6:	dec    ecx
  40bac7:	hlt    
  40bac8:	jbe    0x40bb2a
  40baca:	push   ss
  40bacb:	shl    DWORD PTR [esi+ebp*8+0x3f],1
  40bacf:	mov    esp,0xbc7db283
  40bad4:	push   ebp
  40bad5:	aaa    
  40bad6:	in     eax,dx
  40bad7:	rol    BYTE PTR [ebx+0x9dbcc96],1
  40badd:	fst    st(6)
  40badf:	sbb    esi,ebx
  40bae1:	std    
  40bae2:	xchg   ebx,eax
  40bae3:	add    eax,0x81acc679
  40bae8:	add    DWORD PTR [edi+0x42f7f7b9],eax
  40baee:	mov    bl,0x27
  40baf0:	mov    al,ds:0xb511420d
  40baf5:	sub    edx,edi
  40baf7:	mov    ch,0xa8
  40baf9:	cwde   
  40bafa:	pop    ds
  40bafb:	mov    ah,0x64
  40bafd:	mov    ecx,0xd86cda57
  40bb02:	out    dx,eax
  40bb03:	call   0x34458acb
  40bb08:	add    eax,0xf6d730e6
  40bb0d:	sahf   
  40bb0e:	xchg   ebp,eax
  40bb0f:	fucomip st,st(6)
  40bb11:	pop    ss
  40bb12:	ficomp DWORD PTR [ebp-0x15]
  40bb15:	xchg   ecx,eax
  40bb16:	out    0x93,eax
  40bb18:	mov    WORD PTR [eax],cs
  40bb1a:	scas   al,BYTE PTR es:[edi]
  40bb1b:	loop   0x40baf2
  40bb1d:	adc    al,0xa0
  40bb1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb20:	push   esp
  40bb21:	cli    
  40bb22:	pop    ss
  40bb23:	push   ss
  40bb24:	or     DWORD PTR ds:0xd7a70d0f,ebx
  40bb2a:	or     edi,DWORD PTR [eax]
  40bb2c:	addr16 and ch,dl
  40bb2f:	lds    edx,FWORD PTR [ebp+0xed7cf7e]
  40bb35:	mov    ds,WORD PTR [ecx+0x3814c9d1]
  40bb3b:	in     al,0x8a
  40bb3d:	scas   eax,DWORD PTR es:[edi]
  40bb3e:	div    BYTE PTR [ebp-0x20]
  40bb41:	test   DWORD PTR [eax],edi
  40bb43:	pop    edx
  40bb44:	dec    DWORD PTR [edi-0x65]
  40bb47:	lahf   
  40bb48:	dec    ecx
  40bb49:	push   cs
  40bb4a:	rcr    BYTE PTR [esi+ebp*2-0x44],1
  40bb4e:	(bad)  
  40bb4f:	cli    
  40bb50:	add    eax,0x926fd8cb
  40bb55:	imul   ebp,ebp,0xc58c8f2d
  40bb5b:	out    dx,eax
  40bb5c:	mov    WORD PTR [ebp+0x2111eac0],ss
  40bb62:	bound  ebx,QWORD PTR [edi-0x31]
  40bb65:	add    eax,0x2ca960c1
  40bb6a:	enter  0x29fb,0x52
  40bb6e:	xchg   ebx,eax
  40bb6f:	mov    ebx,0xb36bd080
  40bb74:	lock push esp
  40bb76:	and    dh,BYTE PTR [edi-0x755c3778]
  40bb7c:	jmp    0x33af455d
  40bb81:	mov    esi,0x5d0061b
  40bb86:	jns    0x40bbd8
  40bb88:	or     eax,0xe50220a1
  40bb8d:	retf   0xc899
  40bb90:	pushf  
  40bb91:	sbb    BYTE PTR [esi+0x2d],cl
  40bb94:	in     eax,0x21
  40bb96:	sub    al,0x6b
  40bb98:	cmc    
  40bb99:	shl    DWORD PTR [edx+0x42],0x9f
  40bb9d:	and    al,0x6e
  40bb9f:	mov    bh,0x6c
  40bba1:	imul   esi,DWORD PTR [esp+ebp*1+0x7b0f7bfc],0x76
  40bba9:	add    BYTE PTR [ebx+eiz*4+0xed06aab],cl
  40bbb0:	mov    eax,ds:0x8dcc2e13
  40bbb5:	xor    edx,ebp
  40bbb7:	pop    es
  40bbb8:	adc    ebp,edx
  40bbba:	mov    ds:0xa2c8819,eax
  40bbbf:	jbe    0x40bbfa
  40bbc1:	dec    eax
  40bbc2:	ins    DWORD PTR es:[edi],dx
  40bbc3:	call   0xd448:0xeb533f7e
  40bbca:	mov    edi,0xebc90146
  40bbcf:	dec    esi
  40bbd0:	es and ah,cl
  40bbd3:	ror    DWORD PTR [ebp+ebp*2+0x1a4fa6cf],cl
  40bbda:	rcr    DWORD PTR [ebx+0x494cde9f],cl
  40bbe0:	js     0x40bc41
  40bbe2:	dec    edi
  40bbe3:	push   ebp
  40bbe4:	jp     0x40bbbc
  40bbe6:	fcomp  QWORD PTR [edx+0x58]
  40bbe9:	div    BYTE PTR [eax-0x78e53d5c]
  40bbef:	icebp  
  40bbf0:	jecxz  0x40bc0e
  40bbf2:	or     ecx,DWORD PTR [ebx+ebx*2+0x1c90d7c9]
  40bbf9:	or     ecx,ebx
  40bbfb:	das    
  40bbfc:	jo     0x40bc3a
  40bbfe:	mov    al,ds:0xa57317cf
  40bc03:	add    eax,0xcaf423a
  40bc08:	fcmovu st,st(6)
  40bc0a:	push   eax
  40bc0b:	pop    edi
  40bc0c:	xchg   ebp,eax
  40bc0d:	pop    ds
  40bc0e:	arpl   WORD PTR [ebx],ax
  40bc10:	(bad)  
  40bc11:	cwde   
  40bc12:	push   es
  40bc13:	xchg   ebx,eax
  40bc14:	jae    0x40bc08
  40bc16:	or     BYTE PTR [eax-0x7e],dl
  40bc19:	fbstp  TBYTE PTR [edi-0x249b024b]
  40bc1f:	loope  0x40bbd5
  40bc21:	(bad)  
  40bc22:	es xor eax,0x9f08c5b4
  40bc28:	inc    ebp
  40bc29:	adc    BYTE PTR [ecx],ah
  40bc2b:	stos   DWORD PTR es:[edi],eax
  40bc2c:	jo     0x40bc26
  40bc2e:	mov    ch,0x2d
  40bc30:	in     al,dx
  40bc31:	inc    esp
  40bc32:	cld    
  40bc33:	sub    BYTE PTR [ecx-0x17],bh
  40bc36:	and    eax,esi
  40bc38:	cdq    
  40bc39:	and    al,0xf4
  40bc3b:	mov    al,0x7e
  40bc3d:	mov    bl,0xb5
  40bc3f:	and    BYTE PTR [edi],dl
  40bc41:	stc    
  40bc42:	xchg   esp,eax
  40bc43:	jb     0x40bca3
  40bc45:	push   edi
  40bc46:	retf   0x306c
  40bc49:	or     al,BYTE PTR [eax-0x2]
  40bc4c:	clc    
  40bc4d:	cmp    cl,BYTE PTR [edi+0x22b2c70c]
  40bc53:	or     eax,0xf5772f7e
  40bc58:	pusha  
  40bc59:	push   0xffffff81
  40bc5b:	mov    al,ds:0xd5d38306
  40bc61:	das    
  40bc62:	xlat   BYTE PTR ds:[ebx]
  40bc63:	test   DWORD PTR ds:0x436a8552,ecx
  40bc69:	data16 fcomp DWORD PTR [edi+0x6cbc3872]
  40bc70:	or     BYTE PTR [ecx+eiz*4],0x71
  40bc74:	std    
  40bc75:	(bad)  
  40bc76:	into   
  40bc77:	pop    ecx
  40bc78:	lods   eax,DWORD PTR ds:[esi]
  40bc79:	inc    eax
  40bc7a:	lahf   
  40bc7b:	mov    eax,gs
  40bc7d:	pop    edx
  40bc7e:	mov    ebp,0x66fae2d2
  40bc83:	shl    BYTE PTR [ebp+0x4e],0xc0
  40bc87:	mov    esp,0x88a6dc2b
  40bc8c:	scas   eax,DWORD PTR es:[edi]
  40bc8d:	cmp    eax,0x1a67658
  40bc92:	in     al,0x9
  40bc94:	imul   eax,DWORD PTR [ebp-0x2e64422a],0xffffffbf
  40bc9b:	mov    ebp,eax
  40bc9d:	shl    BYTE PTR [ecx+ebp*1-0x18],cl
  40bca1:	stc    
  40bca2:	push   eax
  40bca3:	loop   0x40bc83
  40bca5:	test   eax,0x8b553d59
  40bcaa:	movlhps xmm1,xmm3
  40bcad:	retf   
  40bcae:	mov    eax,0xdf53dce0
  40bcb4:	in     eax,0xb4
  40bcb6:	and    ebp,DWORD PTR [ebx+0x99d1683]
  40bcbc:	adc    BYTE PTR [eax+ecx*1],0xc1
  40bcc0:	cli    
  40bcc1:	xor    DWORD PTR [eax],esp
  40bcc3:	jo     0x40bc52
  40bcc5:	(bad)  
  40bcc6:	les    edx,FWORD PTR [esi-0x7e]
  40bcc9:	jmp    0x8e32:0xf3a6ae95
  40bcd0:	ja     0x40bce9
  40bcd2:	mov    al,0x9f
  40bcd4:	mov    bh,0x47
  40bcd6:	js     0x40bc9b
  40bcd8:	jno    0x40bd53
  40bcda:	fild   WORD PTR [ebx]
  40bcdc:	dec    ebx
  40bcdd:	lahf   
  40bcde:	ins    DWORD PTR es:[edi],dx
  40bcdf:	ficom  DWORD PTR [esi-0x9]
  40bce2:	pop    eax
  40bce3:	xchg   esi,esp
  40bce5:	or     DWORD PTR [eax+0x62],0x5e
  40bce9:	add    eax,DWORD PTR [esi+0x60]
  40bcec:	call   0x8f4056cd
  40bcf1:	je     0x40bc88
  40bcf3:	inc    ebx
  40bcf4:	jno    0x40bc8d
  40bcf6:	aad    0x7c
  40bcf8:	xchg   ebx,eax
  40bcf9:	mov    esi,0x73729051
  40bcfe:	push   0x75ba4a9
  40bd03:	add    edx,DWORD PTR [edi]
  40bd05:	ins    BYTE PTR es:[edi],dx
  40bd06:	xlat   BYTE PTR ds:[ebx]
  40bd07:	mov    ebp,0x31cdd183
  40bd0c:	or     eax,0xabd46a4f
  40bd11:	xchg   esi,eax
  40bd12:	adc    ebx,DWORD PTR [edi+0x7a]
  40bd15:	pop    edx
  40bd16:	mov    eax,ds:0x5bc5b9cc
  40bd1b:	ss jbe 0x40bd75
  40bd1e:	addr16 int3 
  40bd20:	lahf   
  40bd21:	pop    ecx
  40bd22:	and    DWORD PTR [eax],eax
  40bd24:	movsx  ecx,ax
  40bd27:	and    al,0x69
  40bd29:	leave  
  40bd2a:	aad    0x62
  40bd2c:	icebp  
  40bd2d:	pop    edi
  40bd2e:	jb     0x40bcc6
  40bd30:	sub    ah,BYTE PTR ds:0x43942f3d
  40bd36:	cli    
  40bd37:	fs dec edi
  40bd39:	enter  0x83ec,0xc0
  40bd3d:	shl    bl,1
  40bd3f:	scas   al,BYTE PTR es:[edi]
  40bd40:	stos   DWORD PTR es:[edi],eax
  40bd41:	xor    al,dh
  40bd43:	mov    al,ds:0xe76b56f8
  40bd48:	data16 mov dh,dl
  40bd4b:	and    al,0x8d
  40bd4d:	pop    ebx
  40bd4e:	mov    al,ds:0xdd23cb1e
  40bd53:	repz mov esp,esi
  40bd56:	lock mov ebp,0xc7b6e878
  40bd5c:	fdivr  st(2),st
  40bd5e:	push   es
  40bd5f:	js     0x40bd6d
  40bd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd62:	sar    edx,0x2f
  40bd65:	fdivr  DWORD PTR [edi]
  40bd67:	adc    dl,bl
  40bd69:	ins    DWORD PTR es:[edi],dx
  40bd6a:	cs dec eax
  40bd6c:	mov    esp,0xe72e46
  40bd71:	fadd   st,st(4)
  40bd73:	fisub  DWORD PTR [eax+0x4ae087f4]
  40bd79:	mov    ds:0xf6f01eab,al
  40bd7e:	aas    
  40bd7f:	shr    dh,cl
  40bd81:	outs   dx,DWORD PTR ds:[esi]
  40bd82:	adc    al,0x40
  40bd84:	and    ebp,esi
  40bd86:	inc    ebx
  40bd87:	fsubr  DWORD PTR [ebx+0x4d]
  40bd8a:	imul   ebx,DWORD PTR [ecx+0x6f1a9d7d],0xffffffbc
  40bd91:	pop    es
  40bd92:	inc    ebx
  40bd93:	add    ebx,DWORD PTR [esp+edi*2+0x7c6cd4a9]
  40bd9a:	pop    ss
  40bd9b:	(bad)  
  40bd9c:	lock or BYTE PTR [eax],al
  40bd9f:	or     eax,0x5002076e
  40bda4:	xor    DWORD PTR [edx],0xffffff89
  40bda7:	ins    DWORD PTR es:[edi],dx
  40bda8:	xchg   esp,eax
  40bda9:	or     DWORD PTR [edi+0x14],eax
  40bdac:	dec    eax
  40bdad:	in     eax,0x87
  40bdaf:	das    
  40bdb0:	or     al,0xd1
  40bdb2:	scas   eax,DWORD PTR es:[edi]
  40bdb3:	mov    ch,0xca
  40bdb5:	cdq    
  40bdb6:	dec    esi
  40bdb7:	cs ja  0x40bdc5
  40bdba:	sbb    DWORD PTR [ebx-0x67df22a6],ebp
  40bdc0:	addr16 hlt 
  40bdc2:	pop    es
  40bdc3:	fidivr WORD PTR [eax-0x70ca21b9]
  40bdc9:	xchg   esi,eax
  40bdca:	lahf   
  40bdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdcc:	scas   eax,DWORD PTR es:[edi]
  40bdcd:	or     ebx,DWORD PTR [eax+0x60]
  40bdd0:	sbb    BYTE PTR [eax],0x13
  40bdd3:	bound  ecx,QWORD PTR ds:0x210283a4
  40bdd9:	jmp    0xfbf48669
  40bdde:	or     edx,ebx
  40bde0:	xchg   edx,eax
  40bde1:	clc    
  40bde2:	jno    0x40be58
  40bde4:	dec    eax
  40bde5:	js     0x40bdfd
  40bde7:	dec    edi
  40bde8:	scas   eax,DWORD PTR es:[edi]
  40bde9:	in     al,0xf5
  40bdeb:	mov    ds:0xe5527591,al
  40bdf0:	xchg   ebx,eax
  40bdf1:	je     0x40bdd4
  40bdf3:	xor    al,0x6
  40bdf5:	dec    ebp
  40bdf6:	fst    QWORD PTR [ecx-0x3b]
  40bdf9:	jae    0x40be09
  40bdfb:	into   
  40bdfc:	into   
  40bdfd:	jg     0x40bdd6
  40bdff:	inc    DWORD PTR [eax+0xa325b9f]
  40be05:	lods   al,BYTE PTR ds:[esi]
  40be06:	loopne 0x40be3c
  40be08:	fisub  DWORD PTR [edx]
  40be0a:	mov    edi,0x10ce5c3a
  40be0f:	maskmovq mm5,(bad)
  40be10:	imul   DWORD PTR [ecx+0x465512f5]
  40be16:	adc    al,0x3
  40be18:	mov    eax,ds:0x4f3c6350
  40be1d:	push   esp
  40be1e:	mov    dh,0x5
  40be20:	imul   eax,DWORD PTR [ebx+0x2f],0x48
  40be24:	sbb    ebp,DWORD PTR [ebx-0x4643ca0c]
  40be2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2b:	aaa    
  40be2c:	dec    edx
  40be2d:	rol    DWORD PTR [eax-0x4843f843],cl
  40be33:	neg    DWORD PTR [edi+0xf33d358]
  40be39:	ja     0x40be79
  40be3b:	pop    esp
  40be3c:	jo     0x40bea5
  40be3e:	leave  
  40be3f:	cmc    
  40be40:	xlat   BYTE PTR ds:[ebx]
  40be41:	push   esp
  40be42:	cs out 0x86,eax
  40be45:	hlt    
  40be46:	pop    ebx
  40be47:	cmp    al,0xdf
  40be49:	jo     0x40be7a
  40be4b:	dec    eax
  40be4c:	and    al,BYTE PTR [ebp-0xa]
  40be4f:	(bad)  
  40be51:	jl     0x40be60
  40be53:	fnstsw WORD PTR [esi+0x656d9815]
  40be59:	inc    esp
  40be5a:	stos   BYTE PTR es:[edi],al
  40be5b:	cld    
  40be5c:	arpl   WORD PTR [edi],cx
  40be5e:	jo     0x40be7c
  40be60:	in     al,0x6b
  40be62:	test   al,0xfe
  40be64:	int    0x8d
  40be66:	cmp    ch,bl
  40be68:	cdq    
  40be69:	lock (bad) 
  40be6b:	sbb    DWORD PTR [edx+0x61],edx
  40be6e:	leave  
  40be6f:	fs add eax,0xc7b955ce
  40be75:	mov    edx,0xe99c9330
  40be7a:	cdq    
  40be7b:	adc    edi,DWORD PTR [ebx-0x6b60482c]
  40be81:	or     DWORD PTR [ebp+0x4079c16b],esi
  40be87:	mov    edi,0x62b87317
  40be8d:	mov    ds:0x45da310d,al
  40be92:	or     eax,DWORD PTR [edi*2-0x668ab94]
  40be99:	ins    BYTE PTR es:[edi],dx
  40be9a:	int    0xf7
  40be9c:	and    ch,cl
  40be9e:	and    eax,0x6bbcb205
  40bea3:	(bad)  
  40bea4:	in     al,0xd8
  40bea6:	push   ds
  40bea7:	add    BYTE PTR [edx-0x67],ch
  40beaa:	in     al,0x2e
  40beac:	sbb    al,0x5d
  40beae:	ds je  0x40be80
  40beb1:	and    dh,BYTE PTR [ecx+esi*8+0x1d2b2c0c]
  40beb8:	xor    al,0xfb
  40beba:	es cs dec esp
  40bebd:	mov    edi,0x41f86772
  40bec2:	mov    dl,0x48
  40bec4:	jae    0x40bf01
  40bec6:	outs   dx,BYTE PTR ds:[esi]
  40bec7:	fsubp  st(5),st
  40bec9:	xor    ch,BYTE PTR [eax-0x13]
  40becc:	enter  0x6ccf,0x73
  40bed0:	(bad)  
  40bed1:	mov    bh,0x64
  40bed3:	cmc    
  40bed4:	icebp  
  40bed5:	ja     0x40be6d
  40bed7:	push   ecx
  40bed8:	in     eax,dx
  40bed9:	rcr    bl,cl
  40bedb:	out    dx,eax
  40bedc:	retf   0xe870
  40bedf:	(bad)  [edi-0x4bf6420e]
  40bee5:	xlat   BYTE PTR ds:[ebx]
  40bee6:	mov    eax,ds:0xddf591e0
  40beeb:	mov    bl,0x30
  40beed:	mov    ch,0xc1
  40beef:	sub    DWORD PTR [eax],ebx
  40bef1:	push   0xc592e456
  40bef6:	sahf   
  40bef7:	jmp    0x1ad8:0x71e1eb23
  40befe:	and    ebx,edx
  40bf00:	mov    ebx,0x5ecd9011
  40bf05:	cli    
  40bf06:	or     al,0xac
  40bf08:	or     al,0xee
  40bf0a:	outs   dx,DWORD PTR ds:[esi]
  40bf0b:	xor    ebx,DWORD PTR ds:0x6b366065
  40bf11:	imul   ecx,ebx,0xb934bb5b
  40bf17:	xor    dh,0x77
  40bf1a:	push   0x71
  40bf1c:	retf   
  40bf1d:	lods   al,BYTE PTR ds:[esi]
  40bf1e:	not    DWORD PTR [edx+0x4b6448e7]
  40bf24:	sti    
  40bf25:	add    BYTE PTR [esi+0x52],al
  40bf28:	adc    DWORD PTR [esp+esi*8],ebx
  40bf2b:	dec    esp
  40bf2c:	outs   dx,DWORD PTR ds:[esi]
  40bf2d:	aaa    
  40bf2e:	add    esp,DWORD PTR [edi]
  40bf30:	mov    cl,0x15
  40bf32:	jo     0x40bf46
  40bf34:	jbe    0x40becf
  40bf36:	push   edx
  40bf37:	jle    0x40bfa9
  40bf39:	popf   
  40bf3a:	add    bh,BYTE PTR [esi-0x4b]
  40bf3d:	enter  0xa3e0,0xef
  40bf41:	test   al,0xa0
  40bf43:	aas    
  40bf44:	popa   
  40bf45:	sub    BYTE PTR [eax+0x19d68b47],al
  40bf4b:	or     DWORD PTR [edx],ecx
  40bf4d:	mov    dl,0xda
  40bf4f:	mov    bl,0x74
  40bf51:	pusha  
  40bf52:	ss fadd st(6),st
  40bf55:	pop    esi
  40bf56:	lahf   
  40bf57:	js     0x40bfa4
  40bf59:	int    0x55
  40bf5b:	add    edx,DWORD PTR [eax+0x93dd836]
  40bf61:	dec    edx
  40bf62:	out    dx,eax
  40bf63:	fistp  QWORD PTR [esi-0x431e683f]
  40bf69:	and    DWORD PTR [edx-0x58],edi
  40bf6c:	lds    esp,FWORD PTR [ecx+0x31ffa53c]
  40bf72:	sbb    eax,esi
  40bf74:	popf   
  40bf75:	cmp    bh,BYTE PTR [ebx+ebp*2]
  40bf78:	mov    eax,0xf1f666ff
  40bf7d:	mov    ebx,0xfceb8341
  40bf82:	gs jecxz 0x40bf28
  40bf85:	test   al,0xbe
  40bf87:	xchg   esi,eax
  40bf88:	xor    al,0xb3
  40bf8a:	push   0x3b42d037
  40bf8f:	jb     0x40bfe2
  40bf91:	jle    0x40c007
  40bf93:	mov    BYTE PTR [eax],cl
  40bf95:	test   BYTE PTR [eax+eiz*2-0x76],bl
  40bf99:	test   eax,0x6c496b8f
  40bf9e:	xor    ebp,ecx
  40bfa0:	add    BYTE PTR [eax-0x829299b],0xdd
  40bfa7:	fadd   DWORD PTR [eax]
  40bfa9:	jns    0x40bf98
  40bfab:	and    DWORD PTR [edi-0x4333a7b5],esi
  40bfb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb2:	cmp    ebx,DWORD PTR [edi]
  40bfb4:	(bad)  [eax-0x6c]
  40bfb7:	jle    0x40bf80
  40bfb9:	cmp    ch,ah
  40bfbb:	in     eax,dx
  40bfbc:	mov    dl,0xc8
  40bfbe:	jo     0x40bf85
  40bfc0:	mov    edx,0x6d4a1313
  40bfc5:	stos   BYTE PTR es:[edi],al
  40bfc6:	cmc    
  40bfc7:	sub    ch,BYTE PTR [edx-0x1a]
  40bfca:	sub    DWORD PTR [ebp+0x14],ebx
  40bfcd:	mov    eax,ds:0x1983e3ff
  40bfd2:	jl     0x40c009
  40bfd4:	call   0xfd1b:0xddc1a834
  40bfdb:	cmp    eax,0x2bcfeed5
  40bfe0:	pop    eax
  40bfe1:	mov    WORD PTR [ebx],es
  40bfe3:	cld    
  40bfe4:	jo     0x40c013
  40bfe6:	mov    dh,0x40
  40bfe8:	fild   QWORD PTR ds:0xed841e34
  40bfee:	mov    dh,0x94
  40bff0:	jg     0x40bff3
  40bff2:	sbb    eax,0x840847db
  40bff7:	idiv   BYTE PTR [edi]
  40bff9:	icebp  
  40bffa:	in     al,0x93
  40bffc:	(bad)  
  40bffd:	es enter 0x1cb,0xd0
  40c002:	pop    ds
  40c003:	push   ds
  40c004:	mov    ds,WORD PTR [esi]
  40c006:	jmp    0xf01a:0xa1d02d45
  40c00d:	int    0x88
  40c00f:	dec    edi
  40c010:	mov    ecx,0x8addc0e4
  40c015:	jnp    0x40c042
  40c017:	jl     0x40c02f
  40c019:	mul    ebp
  40c01b:	jecxz  0x40bff7
  40c01d:	or     BYTE PTR ds:0xadaccf63,bh
  40c023:	fist   WORD PTR [ebp+0x5dd2ee4]
  40c029:	inc    edx
  40c02a:	mov    ebp,0xe15b500
  40c02f:	pop    edi
  40c030:	pop    edx
  40c031:	cmp    cl,BYTE PTR [esi]
  40c033:	xchg   ebx,eax
  40c034:	dec    ebx
  40c035:	mov    bl,0x21
  40c037:	cdq    
  40c038:	ins    DWORD PTR es:[edi],dx
  40c039:	test   eax,0xb78beae3
  40c03e:	icebp  
  40c03f:	xor    edi,0x41446704
  40c045:	mov    BYTE PTR [esi+0x14],al
  40c048:	push   edx
  40c049:	adc    DWORD PTR [esi-0x4af75833],ecx
  40c04f:	pop    esi
  40c050:	in     al,0xfa
  40c052:	fisttp QWORD PTR [edi-0x74]
  40c055:	cmp    BYTE PTR ds:0x9daea05a,cl
  40c05b:	loope  0x40c08f
  40c05d:	repnz inc esi
  40c05f:	fld    QWORD PTR [eax+0x72]
  40c062:	rcr    DWORD PTR [ebp-0x36a19bda],0xb6
  40c069:	or     eax,0x14750219
  40c06e:	inc    edx
  40c06f:	fwait
  40c070:	jmp    0xdb8adb0e
  40c075:	aad    0x3d
  40c077:	mov    ebx,0x8b7f5bc3
  40c07c:	mov    edi,DWORD PTR [ecx+eiz*2]
  40c07f:	sub    ch,ch
  40c081:	jg     0x40c01a
  40c083:	loopne 0x40c00c
  40c085:	jecxz  0x40c035
  40c087:	not    BYTE PTR [esi]
  40c089:	mov    BYTE PTR [esi+edx*1],bl
  40c08c:	or     DWORD PTR [ebp+0x5f],ebp
  40c08f:	inc    edx
  40c090:	inc    esi
  40c091:	mov    ch,0x81
  40c093:	and    BYTE PTR [esi+0x5cf33a25],dh
  40c099:	in     al,dx
  40c09a:	popa   
  40c09b:	sbb    dl,BYTE PTR [edi]
  40c09d:	inc    esi
  40c09e:	mov    esp,?
  40c0a0:	test   BYTE PTR [eax],0x12
  40c0a3:	pop    esp
  40c0a4:	lahf   
  40c0a5:	popw   es
  40c0a7:	retf   0x170f
  40c0aa:	pop    edi
  40c0ab:	add    ecx,DWORD PTR [edi-0x22e32969]
  40c0b1:	and    eax,0x8cfcb8c5
  40c0b6:	push   cs
  40c0b7:	mov    dh,0x33
  40c0b9:	imul   esp,ebx,0xb40da628
  40c0bf:	xchg   DWORD PTR [ebp-0x6b],esi
  40c0c2:	outs   dx,BYTE PTR ds:[esi]
  40c0c3:	rcl    DWORD PTR [eax],0xf9
  40c0c6:	xchg   BYTE PTR [edx],bh
  40c0c8:	rol    BYTE PTR [ecx+0x4f29972],0xa4
  40c0cf:	mov    esp,0x4e675a0f
  40c0d4:	adc    cl,BYTE PTR [ecx]
  40c0d6:	js     0x40c142
  40c0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d9:	mov    dh,0xaf
  40c0db:	dec    ebx
  40c0dc:	push   es
  40c0dd:	leave  
  40c0de:	add    eax,edi
  40c0e0:	xor    DWORD PTR [ecx],esi
  40c0e2:	push   DWORD PTR [edi+edi*1+0x1]
  40c0e6:	into   
  40c0e7:	mov    ds:0x8746ecd,al
  40c0ec:	loopne 0x40c0c4
  40c0ee:	sahf   
  40c0ef:	retf   
  40c0f0:	and    esp,DWORD PTR [esi+ecx*8+0x5e37ebd6]
  40c0f7:	mov    bl,0x6a
  40c0f9:	pop    ebx
  40c0fa:	(bad)  
  40c0fb:	pop    ecx
  40c0fc:	lahf   
  40c0fd:	push   ss
  40c0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ff:	jnp    0x40c0e9
  40c101:	out    0x1c,eax
  40c103:	xchg   ebp,eax
  40c104:	and    ah,BYTE PTR [edx]
  40c106:	lock gs daa 
  40c109:	ret    0x4533
  40c10c:	push   0x4340b4aa
  40c111:	into   
  40c112:	mov    BYTE PTR [esi-0x7d],dh
  40c115:	enter  0x5c99,0x60
  40c119:	sub    BYTE PTR [ebp+0x5e588a1d],bl
  40c11f:	cmc    
  40c120:	mov    dl,0xce
  40c122:	and    al,0x8d
  40c124:	inc    ebp
  40c125:	cmp    al,0xc4
  40c127:	icebp  
  40c128:	pop    ecx
  40c129:	into   
  40c12a:	pop    ecx
  40c12b:	jmp    0x251e3ce2
  40c130:	pop    ecx
  40c131:	outs   dx,BYTE PTR ds:[esi]
  40c132:	sbb    al,0x71
  40c134:	dec    ebp
  40c135:	mov    ebp,0xc543925b
  40c13a:	icebp  
  40c13b:	std    
  40c13c:	scas   eax,DWORD PTR es:[edi]
  40c13d:	test   DWORD PTR [eax+0x7e],ebp
  40c140:	mov    edx,0x638b07ff
  40c145:	scas   eax,DWORD PTR es:[edi]
  40c146:	test   BYTE PTR [eax-0x30],dl
  40c149:	scas   al,BYTE PTR es:[edi]
  40c14a:	dec    eax
  40c14b:	into   
  40c14c:	pop    ecx
  40c14d:	ss pop edi
  40c14f:	fiadd  WORD PTR [ecx]
  40c151:	mov    dl,0xa6
  40c153:	popa   
  40c154:	inc    eax
  40c155:	xor    DWORD PTR [ebp+0x4f],ebx
  40c158:	pop    ebp
  40c159:	mov    ebx,0x2e8147d1
  40c15e:	sahf   
  40c15f:	daa    
  40c160:	inc    esi
  40c161:	sbb    BYTE PTR [esi+0x78],dl
  40c164:	fistp  DWORD PTR [edi]
  40c166:	ficom  DWORD PTR [ebx]
  40c168:	pop    edi
  40c169:	mov    DWORD PTR [ecx-0x2d873c19],esi
  40c16f:	push   0x3281b517
  40c174:	js     0x40c173
  40c176:	lahf   
  40c177:	fldenv [edi-0x5b5cd7b0]
  40c17d:	mul    DWORD PTR [esi]
  40c17f:	pop    esi
  40c180:	out    dx,al
  40c181:	mov    ebx,edx
  40c183:	retf   
  40c184:	cs dec esp
  40c186:	pop    es
  40c187:	cs sbb al,0x11
  40c18a:	inc    ebx
  40c18b:	push   ebx
  40c18c:	push   ss
  40c18d:	faddp  st(4),st
  40c18f:	push   ecx
  40c190:	imul   ecx,edx,0xffffffe1
  40c193:	inc    ebp
  40c194:	inc    edx
  40c195:	cmp    esp,esi
  40c197:	xchg   edx,eax
  40c198:	and    esi,DWORD PTR [ebx-0x2e]
  40c19b:	sbb    ecx,DWORD PTR [edi+esi*1-0x22857fcf]
  40c1a2:	or     eax,DWORD PTR [edi-0xc]
  40c1a5:	test   al,0x3d
  40c1a7:	inc    ebp
  40c1a8:	pop    edx
  40c1a9:	jne    0x40c190
  40c1ab:	sahf   
  40c1ac:	sub    esi,edi
  40c1ae:	sub    esi,esi
  40c1b0:	jg     0x40c1c5
  40c1b2:	(bad)  
  40c1b3:	repnz xor DWORD PTR [bx+si],edi
  40c1b7:	js     0x40c22e
  40c1b9:	dec    edx
  40c1ba:	(bad)  
  40c1bc:	xlat   BYTE PTR ds:[ebx]
  40c1bd:	maskmovq mm7,(bad)
  40c1be:	idiv   DWORD PTR [ebx+0x7a42d941]
  40c1c4:	(bad)  
  40c1c5:	out    0xdf,eax
  40c1c7:	xchg   esp,eax
  40c1c8:	dec    eax
  40c1c9:	fadd   QWORD PTR [ebx+0x4c724568]
  40c1cf:	mov    esi,0x951d8134
  40c1d4:	jo     0x40c1c7
  40c1d6:	dec    edi
  40c1d7:	xor    edi,ebp
  40c1d9:	mov    cl,cl
  40c1db:	inc    ebp
  40c1dc:	mov    al,ds:0x612fde7e
  40c1e1:	cmp    eax,0xaed9d8de
  40c1e6:	imul   ebp,ecx,0xc14e7271
  40c1ec:	nop
  40c1ed:	jae    0x40c238
  40c1ef:	scas   al,BYTE PTR es:[edi]
  40c1f0:	stc    
  40c1f1:	dec    ebp
  40c1f2:	xchg   BYTE PTR [ecx],cl
  40c1f4:	sub    DWORD PTR [edx-0x34b7fec7],edx
  40c1fa:	pop    edi
  40c1fb:	fsub   st,st(4)
  40c1fd:	xlat   BYTE PTR fs:[ebx]
  40c1ff:	inc    ecx
  40c200:	daa    
  40c201:	xor    bl,BYTE PTR [esi+0xa]
  40c204:	imul   edi,DWORD PTR [edi-0x2976f4c1],0x367ecb2
  40c20e:	inc    edx
  40c20f:	xchg   DWORD PTR [edi+ecx*1+0x28],esi
  40c213:	popf   
  40c214:	into   
  40c215:	aad    0x61
  40c217:	push   ss
  40c218:	shl    BYTE PTR [ebx],cl
  40c21a:	dec    esp
  40c21b:	push   edx
  40c21c:	add    DWORD PTR [ebp+eiz*4-0x65],esi
  40c220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c221:	mov    ds:0x55f4a5f1,al
  40c226:	and    al,0x16
  40c228:	jns    0x40c209
  40c22a:	test   BYTE PTR [eax-0x4c],bl
  40c22d:	xor    al,0x7b
  40c22f:	aas    
  40c230:	out    dx,al
  40c231:	inc    edi
  40c232:	rcr    DWORD PTR [edi-0x4c808d21],cl
  40c238:	cmc    
  40c239:	sbb    ah,cl
  40c23b:	pop    ecx
  40c23c:	aam    0xd7
  40c23e:	sar    DWORD PTR [edx],cl
  40c240:	sub    eax,0x14fe5ef0
  40c245:	lods   al,BYTE PTR ds:[esi]
  40c246:	pop    eax
  40c247:	not    BYTE PTR [eax-0x34f4ea8]
  40c24d:	bound  esp,QWORD PTR [edi+0x38]
  40c250:	push   ecx
  40c251:	pop    ds
  40c252:	das    
  40c253:	mov    edx,es
  40c255:	int    0x2c
  40c257:	adc    al,0xa7
  40c259:	js     0x40c2a4
  40c25b:	aaa    
  40c25c:	data16 loope 0x40c28d
  40c25f:	stos   BYTE PTR es:[edi],al
  40c260:	fist   WORD PTR ds:0xddbf4458
  40c266:	sbb    al,0x74
  40c268:	lock iret 
  40c26a:	mov    ecx,0xdc2d4911
  40c26f:	sub    ch,BYTE PTR cs:[edx+0x663b040e]
  40c276:	pushf  
  40c277:	loope  0x40c27d
  40c279:	pop    esi
  40c27a:	or     edi,DWORD PTR [edx-0x3b]
  40c27d:	mov    ebx,0x4d886ef6
  40c282:	test   eax,eax
  40c284:	xchg   ecx,eax
  40c285:	daa    
  40c286:	ror    BYTE PTR [eax-0x23e84342],cl
  40c28c:	inc    ebx
  40c28d:	lea    esp,[bp-0x75a6]
  40c292:	pop    eax
  40c293:	push   esp
  40c294:	push   0x3c
  40c296:	mov    bl,0x59
  40c298:	pop    ds
  40c299:	leave  
  40c29a:	mov    edx,gs
  40c29c:	sub    eax,0x5cdf2413
  40c2a1:	adc    eax,0xd1428940
  40c2a6:	(bad)  
  40c2a7:	js     0x40c25a
  40c2a9:	or     eax,0xdb3e8f71
  40c2ae:	pop    esp
  40c2af:	daa    
  40c2b0:	enter  0x4e1f,0x94
  40c2b4:	mov    eax,DWORD PTR [eax-0x25f5ffab]
  40c2ba:	aad    0x67
  40c2bc:	adc    BYTE PTR [esi+0xb8ed840],bl
  40c2c2:	in     al,dx
  40c2c3:	retf   0xa78f
  40c2c6:	(bad)  [esi-0x39]
  40c2c9:	mov    bl,0x6d
  40c2cb:	outs   dx,BYTE PTR ds:[esi]
  40c2cc:	cwde   
  40c2cd:	iret   
  40c2ce:	mov    bh,0x17
  40c2d0:	cld    
  40c2d1:	cld    
  40c2d2:	ficom  DWORD PTR [ecx-0x70625d38]
  40c2d8:	mov    ds:0xe4a3a9ec,al
  40c2dd:	loope  0x40c345
  40c2df:	sbb    DWORD PTR [edx-0x76a53978],0x558bee69
  40c2e9:	das    
  40c2ea:	push   ecx
  40c2eb:	add    eax,0x801d241d
  40c2f0:	xor    ebp,DWORD PTR [edx+eax*8-0x1ff73fde]
  40c2f7:	(bad)  
  40c2f8:	in     eax,dx
  40c2f9:	mov    ds,WORD PTR [eax-0x21]
  40c2fc:	rdmsr  
  40c2fe:	jmp    0xce49a5d
  40c303:	jns    0x40c2e1
  40c305:	test   edx,ecx
  40c307:	inc    ebp
  40c308:	adc    eax,edx
  40c30a:	fsubp  st(7),st
  40c30c:	lods   eax,DWORD PTR ds:[esi]
  40c30d:	mov    es,WORD PTR [eax+0xd173ffb]
  40c313:	jnp    0x40c347
  40c315:	and    esp,DWORD PTR [eax]
  40c317:	inc    edx
  40c318:	xlat   BYTE PTR ds:[ebx]
  40c319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c31a:	popa   
  40c31b:	or     dl,dl
  40c31d:	das    
  40c31e:	or     al,0x87
  40c320:	jl     0x40c373
  40c322:	mov    bh,0x6
  40c324:	push   es
  40c325:	inc    esp
  40c326:	stc    
  40c327:	dec    esp
  40c328:	cli    
  40c329:	fisttp QWORD PTR [ebp+ebx*1+0x59]
  40c32d:	sbb    eax,0xeeee980e
  40c332:	out    dx,eax
  40c333:	sbb    ecx,DWORD PTR [edx-0x430196a1]
  40c339:	outs   dx,BYTE PTR ds:[esi]
  40c33a:	jge    0x40c2d6
  40c33c:	arpl   bp,si
  40c33e:	and    eax,0xe03d3012
  40c343:	dec    esp
  40c344:	mov    edi,0xb723ce9d
  40c349:	mov    eax,0xa8f49cf4
  40c34e:	retf   
  40c34f:	sbb    BYTE PTR [ebx+0x4fa969c7],dh
  40c355:	xor    al,0x0
  40c357:	inc    eax
  40c358:	push   edx
  40c359:	jb     0x40c3ac
  40c35b:	jns    0x40c314
  40c35d:	shl    BYTE PTR [ecx+esi*1+0x29],cl
  40c361:	enter  0x6320,0x97
  40c365:	inc    edi
  40c366:	dec    ebx
  40c367:	in     eax,0xe3
  40c369:	or     al,0xc9
  40c36b:	js     0x40c33d
  40c36d:	xor    eax,0x435bfaa
  40c372:	jge    0x40c33b
  40c374:	in     al,dx
  40c375:	jnp    0x40c34b
  40c377:	add    dh,BYTE PTR [ecx-0x5]
  40c37a:	test   BYTE PTR [esi+0x6d516ce],dl
  40c380:	sbb    eax,0xab342806
  40c385:	lahf   
  40c386:	jb     0x40c3e5
  40c388:	ja     0x40c3bd
  40c38a:	in     al,dx
  40c38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c38c:	popf   
  40c38d:	adc    BYTE PTR cs:[eax-0x77a83bab],ch
  40c394:	dec    ebp
  40c395:	outs   dx,DWORD PTR ds:[esi]
  40c396:	pop    esp
  40c397:	mov    esp,0x25fa5d29
  40c39c:	and    al,BYTE PTR [edi-0x791638]
  40c3a2:	pop    esp
  40c3a3:	dec    ecx
  40c3a4:	cmp    DWORD PTR [ebp+0x63],ebx
  40c3a7:	sbb    BYTE PTR [edi+esi*8-0x6c06b2d0],0x46
  40c3af:	retf   0xfa42
  40c3b2:	ret    
  40c3b3:	and    BYTE PTR [edi+eiz*2+0x73],al
  40c3b7:	nop
  40c3b8:	jmp    0x762:0xe41dda74
  40c3bf:	push   esi
  40c3c0:	add    eax,0xb3a4fc35
  40c3c5:	pop    edx
  40c3c6:	(bad)  
  40c3c7:	sbb    edx,esp
  40c3c9:	arpl   WORD PTR ds:0x82972836,bx
  40c3cf:	xor    al,0x17
  40c3d1:	add    DWORD PTR [ecx-0x7f],esp
  40c3d4:	xchg   edi,eax
  40c3d5:	jo     0x40c449
  40c3d7:	dec    eax
  40c3d8:	inc    ecx
  40c3d9:	pushf  
  40c3da:	dec    edx
  40c3db:	sub    esi,esi
  40c3dd:	fisttp QWORD PTR [edx+0x5]
  40c3e0:	addr16 dec eax
  40c3e2:	popf   
  40c3e3:	xor    DWORD PTR [ebx+0xdb03600],esi
  40c3e9:	cli    
  40c3ea:	arpl   WORD PTR [edi-0x5892e11c],si
  40c3f0:	mov    cl,0x63
  40c3f2:	mov    bh,0xd6
  40c3f4:	adc    al,0xba
  40c3f6:	xor    al,0x69
  40c3f8:	mov    bh,BYTE PTR [ebx*4+0x77a3e654]
  40c3ff:	or     eax,0xc6aa5279
  40c404:	stc    
  40c405:	jl     0x40c3e0
  40c407:	scas   eax,DWORD PTR es:[edi]
  40c408:	sbb    al,0x6e
  40c40a:	jg     0x40c3ab
  40c40c:	mov    ecx,edx
  40c40e:	cdq    
  40c40f:	cld    
  40c410:	push   cs
  40c411:	std    
  40c412:	bound  edi,QWORD PTR [ecx+esi*8+0xb]
  40c416:	cmc    
  40c417:	aad    0x37
  40c419:	pop    esp
  40c41a:	xchg   esi,eax
  40c41b:	scas   eax,DWORD PTR es:[edi]
  40c41c:	and    BYTE PTR [eax+0x3f7bb779],ch
  40c422:	and    bh,BYTE PTR [esi+0x59]
  40c425:	int    0xc5
  40c427:	retf   0x190e
  40c42a:	jno    0x40c44b
  40c42c:	mov    ds:0x7854eccd,eax
  40c431:	fisubr WORD PTR [ecx]
  40c433:	mov    eax,ds:0xd2756b
  40c438:	xlat   BYTE PTR ds:[ebx]
  40c439:	out    dx,eax
  40c43a:	addr16 cmp eax,0xb8437993
  40c440:	jmp    0xfcce1df8
  40c445:	and    eax,0x374f4741
  40c44a:	mov    edi,0x97bf30e1
  40c44f:	sti    
  40c450:	lahf   
  40c451:	out    dx,eax
  40c452:	add    BYTE PTR [eax-0x46d28578],ah
  40c458:	clc    
  40c459:	mov    BYTE PTR [esi+0x4c641d4c],cl
  40c45f:	inc    ecx
  40c460:	mov    eax,ds:0xdc4205c3
  40c465:	inc    esp
  40c466:	shl    edi,1
  40c468:	and    ecx,DWORD PTR [ebx]
  40c46a:	sbb    al,0x73
  40c46c:	mov    ds:0xc769faf6,eax
  40c471:	lea    esi,[edi]
  40c473:	sahf   
  40c474:	mov    ebx,0x1439bd74
  40c479:	mov    cl,cl
  40c47b:	ror    DWORD PTR [ebp-0x7991d001],1
  40c481:	lahf   
  40c482:	rol    edx,0x5b
  40c485:	repnz aad 0x29
  40c488:	loopne 0x40c418
  40c48a:	dec    BYTE PTR [ecx]
  40c48c:	in     al,dx
  40c48d:	pop    edx
  40c48e:	test   DWORD PTR es:[esi+0x38d49306],edi
  40c495:	mov    edi,0x3025ae3e
  40c49a:	sbb    DWORD PTR [eax],esp
  40c49c:	adc    BYTE PTR [eax+0x3],cl
  40c49f:	jo     0x40c4ae
  40c4a1:	std    
  40c4a2:	adc    eax,0xc61743f7
  40c4a7:	xor    al,0x71
  40c4a9:	xchg   edx,eax
  40c4aa:	js     0x40c4f8
  40c4ac:	shr    DWORD PTR [eax],1
  40c4ae:	out    dx,eax
  40c4af:	mov    BYTE PTR [edx+edi*1],0x6f
  40c4b3:	inc    ebx
  40c4b4:	nop
  40c4b5:	xor    ebx,DWORD PTR [ebx+0x50]
  40c4b8:	mov    ds:0x10d5e393,al
  40c4bd:	(bad)  
  40c4be:	and    al,0xba
  40c4c0:	inc    ecx
  40c4c1:	ss jmp 0x40c51d
  40c4c4:	jmp    0x40c4be
  40c4c6:	or     ah,BYTE PTR [edx+0x37]
  40c4c9:	dec    esi
  40c4ca:	sub    ch,BYTE PTR [eax+0x2f]
  40c4cd:	ins    DWORD PTR es:[edi],dx
  40c4ce:	hlt    
  40c4cf:	mov    DWORD PTR [edi+ebx*8+0x31fb21ad],esp
  40c4d6:	imul   si,WORD PTR [edi-0x326b28ce],0xfff4
  40c4de:	into   
  40c4df:	shl    BYTE PTR [edi+edi*2],cl
  40c4e2:	jbe    0x40c4c9
  40c4e4:	push   esi
  40c4e5:	fdivp  st(1),st
  40c4e7:	mov    ebp,0xe38f83ef
  40c4ec:	pushf  
  40c4ed:	mov    esi,0xd2ec4f0b
  40c4f2:	pop    ds
  40c4f3:	dec    ebx
  40c4f4:	mov    edi,0xe984e5cd
  40c4f9:	jno    0x40c49d
  40c4fb:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4fd:	pushf  
  40c4fe:	fdivr  QWORD PTR [edx]
  40c500:	retf   
  40c501:	fucomip st,st(0)
  40c503:	xchg   edi,eax
  40c504:	sbb    eax,0x94ee0e15
  40c509:	les    esi,FWORD PTR [ebx]
  40c50b:	repnz shl DWORD PTR [edi+0x10],1
  40c50f:	pop    ebp
  40c510:	xchg   BYTE PTR [ecx-0x64],al
  40c513:	sbb    al,BYTE PTR [eax]
  40c515:	mov    ebx,0x71c96ecd
  40c51a:	pop    ebp
  40c51b:	fdiv   st(2),st
  40c51d:	add    esi,ebp
  40c51f:	(bad)  
  40c520:	jp     0x40c4c5
  40c522:	cmp    ecx,DWORD PTR [ecx-0x44c257c7]
  40c528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c529:	add    ecx,eax
  40c52b:	outs   dx,BYTE PTR ds:[esi]
  40c52c:	or     al,0x5f
  40c52e:	mov    ax,di
  40c531:	dec    edi
  40c532:	(bad)  
  40c533:	pop    ebx
  40c534:	mov    ch,0xe6
  40c536:	cmp    DWORD PTR [edi],0xffffffad
  40c539:	jmp    0xa228579a
  40c53e:	ins    DWORD PTR es:[edi],dx
  40c53f:	push   esi
  40c540:	and    bl,ch
  40c542:	cli    
  40c543:	cmp    edx,DWORD PTR [edi-0x28]
  40c546:	cld    
  40c547:	jg     0x40c5b8
  40c549:	scas   al,BYTE PTR es:[edi]
  40c54a:	frstor [ebx]
  40c54c:	stos   BYTE PTR es:[edi],al
  40c54d:	ins    DWORD PTR es:[edi],dx
  40c54e:	js     0x40c528
  40c550:	repnz rcl BYTE PTR [esi],cl
  40c553:	in     al,0x19
  40c555:	fs shr ecx,cl
  40c558:	sbb    al,0x4d
  40c55a:	and    DWORD PTR [eax-0x19],edx
  40c55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c55e:	nop
  40c55f:	mov    esi,0x140447d5
  40c565:	stos   BYTE PTR es:[edi],al
  40c566:	xchg   esp,eax
  40c567:	fbstp  TBYTE PTR [ebx-0x70]
  40c56a:	dec    esp
  40c56b:	in     eax,dx
  40c56c:	push   0xc5a1a59a
  40c571:	jmp    0x4a28f647
  40c576:	mov    ecx,0x776315e0
  40c57b:	mov    dh,0x22
  40c57d:	sbb    al,0x82
  40c57f:	aam    0x13
  40c581:	fimul  WORD PTR [edi]
  40c583:	xor    bl,BYTE PTR [ebp-0x44]
  40c586:	retf   0x7be4
  40c589:	in     al,dx
  40c58a:	jecxz  0x40c598
  40c58c:	jae    0x40c549
  40c58e:	mov    ah,0x61
  40c590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c591:	and    al,0xe1
  40c593:	arpl   sp,bp
  40c595:	in     al,dx
  40c596:	ss stos BYTE PTR es:[edi],al
  40c598:	(bad)  [esi]
  40c59a:	mov    ah,0x14
  40c59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59d:	leave  
  40c59e:	xchg   dh,dh
  40c5a0:	cmp    BYTE PTR [esi-0x47],0xa1
  40c5a4:	mov    dh,0xa
  40c5a6:	popa   
  40c5a7:	stc    
  40c5a8:	cmc    
  40c5a9:	stos   DWORD PTR es:[edi],eax
  40c5aa:	enter  0x1973,0x3c
  40c5ae:	adc    edi,ebp
  40c5b0:	(bad)  
  40c5b1:	mov    al,0x9
  40c5b3:	sub    al,0xc0
  40c5b5:	ret    
  40c5b6:	lock jle 0x40c619
  40c5b9:	inc    ebx
  40c5ba:	outs   dx,BYTE PTR ds:[esi]
  40c5bb:	lods   eax,DWORD PTR ds:[esi]
  40c5bc:	add    dh,dl
  40c5be:	outs   dx,BYTE PTR ds:[esi]
  40c5bf:	jns    0x40c5ee
  40c5c1:	cli    
  40c5c2:	xor    BYTE PTR ds:0x96aedb2e,ah
  40c5c8:	mov    cl,0x7d
  40c5ca:	retf   
  40c5cb:	ror    BYTE PTR [edi+edi*8-0xc],0xea
  40c5d0:	or     edi,DWORD PTR [edi+ebx*1+0x373a5011]
  40c5d7:	sub    eax,0xb79de69a
  40c5dc:	lahf   
  40c5dd:	pop    esi
  40c5de:	sub    ah,BYTE PTR [edx-0x4ef6b6c6]
  40c5e4:	jbe    0x40c663
  40c5e6:	mov    ds:0xe9175b45,eax
  40c5eb:	sbb    eax,0xd2316fba
  40c5f0:	jge    0x40c5c4
  40c5f2:	mov    ecx,DWORD PTR [eax]
  40c5f4:	inc    ebp
  40c5f5:	xchg   ebx,eax
  40c5f6:	test   al,0x81
  40c5f8:	and    al,0xde
  40c5fa:	dec    ecx
  40c5fb:	loope  0x40c5f2
  40c5fd:	dec    ebp
  40c5fe:	iret   
  40c5ff:	xor    esp,DWORD PTR [esi]
  40c601:	xlat   BYTE PTR ds:[ebx]
  40c602:	push   es
  40c603:	push   esi
  40c604:	fcomp  QWORD PTR [eax+0x1f865703]
  40c60a:	retf   
  40c60b:	inc    esi
  40c60c:	sar    DWORD PTR [ebp+0x7cbce60d],0xa1
  40c613:	push   0x1a026888
  40c618:	jge    0x40c685
  40c61a:	pop    es
  40c61b:	xor    eax,0x696096ce
  40c620:	jg     0x40c681
  40c622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c623:	push   ss
  40c624:	ja     0x40c605
  40c626:	(bad)  
  40c628:	sub    al,0x3f
  40c62a:	push   eax
  40c62b:	ret    0xc4f3
  40c62e:	lods   al,BYTE PTR ds:[esi]
  40c62f:	mov    ebp,0xcb3523ff
  40c634:	in     eax,0x76
  40c636:	mov    bh,0xa4
  40c638:	leave  
  40c639:	fwait
  40c63a:	push   edi
  40c63b:	xchg   ebx,ebx
  40c63d:	imul   esp,DWORD PTR [ecx-0x2e],0x5c
  40c641:	scas   al,BYTE PTR es:[edi]
  40c642:	stc    
  40c643:	enter  0xa351,0xe9
  40c647:	dec    ebx
  40c648:	mov    ebp,0xaf400cb3
  40c64d:	mov    al,ds:0xad23ec36
  40c652:	jge    0x40c689
  40c654:	and    ebx,DWORD PTR [ebp+0x791e65d1]
  40c65a:	in     al,0x48
  40c65c:	sbb    ebx,DWORD PTR [ebx+eax*1-0x43]
  40c660:	stc    
  40c661:	and    al,0x8c
  40c663:	push   edx
  40c664:	pop    esp
  40c665:	mov    dh,0xe8
  40c667:	adc    edi,DWORD PTR [edx+0x1e831e5f]
  40c66d:	inc    ebx
  40c66e:	lea    ebx,[esi]
  40c670:	and    bl,BYTE PTR [eax]
  40c672:	xchg   edx,eax
  40c673:	dec    edi
  40c674:	nop
  40c675:	push   esp
  40c676:	lahf   
  40c677:	jns    0x40c6f5
  40c679:	push   esi
  40c67a:	adc    cl,BYTE PTR [edi]
  40c67c:	dec    ebx
  40c67d:	jp     0x40c6fa
  40c67f:	pop    ss
  40c680:	jbe    0x40c66a
  40c682:	scas   al,BYTE PTR es:[edi]
  40c683:	ror    DWORD PTR [edx+0x23adf42e],1
  40c689:	fst    st(1)
  40c68b:	lahf   
  40c68c:	in     al,0x98
  40c68e:	pop    ss
  40c68f:	push   ecx
  40c690:	cs inc ebx
  40c692:	sub    edi,ecx
  40c694:	xor    al,0x70
  40c696:	(bad)  
  40c697:	(bad)  
  40c698:	xor    eax,0xb0d6bf94
  40c69d:	jmp    0x40c6cd
  40c69f:	stc    
  40c6a0:	sub    ebx,edi
  40c6a2:	mov    bh,0x4e
  40c6a4:	push   cs
  40c6a5:	or     al,0xe6
  40c6a7:	jle    0x40c659
  40c6a9:	xchg   ebx,eax
  40c6aa:	(bad)  
  40c6ab:	add    al,0x7
  40c6ad:	mov    cl,0xa7
  40c6af:	ins    BYTE PTR es:[edi],dx
  40c6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6b2:	mov    fs,ecx
  40c6b4:	mov    cl,BYTE PTR [edx+eiz*2-0x5272fcb9]
  40c6bb:	out    dx,eax
  40c6bc:	sbb    eax,0x1fa8369f
  40c6c1:	dec    esp
  40c6c2:	in     eax,0x4b
  40c6c4:	jge    0x40c6fe
  40c6c6:	call   0x4c86e966
  40c6cb:	not    BYTE PTR [edi+0x7cb750a1]
  40c6d1:	adc    dh,BYTE PTR [edx+0x23]
  40c6d4:	(bad)  
  40c6d5:	rcl    dl,cl
  40c6d7:	(bad)  
  40c6d8:	fs (bad) 
  40c6db:	ins    BYTE PTR es:[edi],dx
  40c6dc:	inc    ecx
  40c6dd:	mov    ch,0x19
  40c6df:	sbb    BYTE PTR [ecx+eiz*8],bl
  40c6e2:	mov    al,ds:0xdc3ed624
  40c6e7:	sbb    esp,DWORD PTR [esi]
  40c6e9:	push   ecx
  40c6ea:	xchg   ecx,eax
  40c6eb:	shl    BYTE PTR [edx+0x3eb76d22],cl
  40c6f1:	arpl   WORD PTR [ebp+0x2e760b1c],sp
  40c6f7:	jl     0x40c6c9
  40c6f9:	pop    ss
  40c6fa:	in     eax,dx
  40c6fb:	jne    0x40c680
  40c6fd:	call   0xc7c6c91f
  40c702:	push   edx
  40c703:	ins    DWORD PTR es:[edi],dx
  40c704:	jno    0x40c6dd
  40c706:	push   edi
  40c707:	ret    0xe8bb
  40c70a:	dec    edi
  40c70b:	jno    0x40c77f
  40c70d:	lea    edx,[ebx+ebx*1-0x6bacca28]
  40c714:	cmp    ebx,DWORD PTR [eax-0x3fe90153]
  40c71a:	stos   BYTE PTR es:[edi],al
  40c71b:	inc    ebx
  40c71c:	jmp    0xd942:0x84e18246
  40c723:	cmp    eax,0x4fe42238
  40c728:	push   0xf4c07f79
  40c72d:	nop
  40c72e:	mov    esp,0x2f8ae43
  40c733:	and    ecx,esp
  40c735:	xor    ebx,ebx
  40c737:	push   esp
  40c738:	outs   dx,BYTE PTR ds:[esi]
  40c739:	loop   0x40c6dc
  40c73b:	sahf   
  40c73c:	call   0x2b2b0b3b
  40c741:	aad    0xa0
  40c743:	add    al,0x46
  40c745:	mov    dl,0xf8
  40c747:	and    eax,DWORD PTR [esp+ebp*8+0x1993ea15]
  40c74e:	mov    ds:0x57c5d9dd,eax
  40c753:	ror    DWORD PTR [edx+0x66],cl
  40c756:	mov    ss,WORD PTR [ecx+0x32]
  40c759:	stos   DWORD PTR es:[edi],eax
  40c75a:	loop   0x40c783
  40c75c:	add    eax,0x7f94d4e9
  40c761:	pop    es
  40c762:	or     DWORD PTR [esi-0x10],ecx
  40c765:	hlt    
  40c766:	inc    edx
  40c767:	add    dl,BYTE PTR [edi]
  40c769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c76a:	xor    eax,DWORD PTR [edx-0x7f4de7ab]
  40c770:	out    0xb5,eax
  40c772:	fwait
  40c773:	(bad)  
  40c774:	mov    eax,ds:0xf8bb19bb
  40c779:	jnp    0x40c702
  40c77b:	sti    
  40c77c:	adc    BYTE PTR [edi],0xeb
  40c77f:	lods   al,BYTE PTR ds:[esi]
  40c780:	out    dx,al
  40c781:	xlat   BYTE PTR ds:[ebx]
  40c782:	xor    DWORD PTR [esi-0x541d546e],ebx
  40c788:	lods   eax,DWORD PTR ds:[esi]
  40c789:	pop    ebp
  40c78a:	outs   dx,DWORD PTR ds:[esi]
  40c78b:	imul   edi,DWORD PTR [eax+0x64fda1f2],0x5706c1a
  40c795:	xchg   ebx,eax
  40c797:	pop    ss
  40c798:	popa   
  40c799:	fimul  DWORD PTR [ebx+0x25]
  40c79c:	mov    al,0x38
  40c79e:	push   0xffffff96
  40c7a0:	in     eax,dx
  40c7a1:	dec    ebx
  40c7a2:	shl    bh,1
  40c7a4:	stos   BYTE PTR es:[edi],al
  40c7a5:	clc    
  40c7a6:	in     al,dx
  40c7a7:	mov    ebp,0xc2b0e792
  40c7ac:	xchg   esp,eax
  40c7ad:	mov    dh,0xce
  40c7af:	dec    edx
  40c7b0:	or     dl,BYTE PTR [ecx+0x72]
  40c7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b4:	xchg   esp,eax
  40c7b5:	pop    edi
  40c7b6:	push   ds
  40c7b7:	adc    ah,cl
  40c7b9:	cli    
  40c7ba:	xchg   esp,eax
  40c7bb:	jne    0x40c788
  40c7bd:	ins    DWORD PTR es:[edi],dx
  40c7be:	pop    edi
  40c7bf:	push   ebx
  40c7c0:	push   ebx
  40c7c1:	aam    0x1d
  40c7c3:	adc    al,0xf8
  40c7c5:	lea    edx,[eax+0xb]
  40c7c8:	mov    esi,0xfb6b4c07
  40c7cd:	inc    edx
  40c7ce:	pop    eax
  40c7cf:	enter  0xf1be,0x6
  40c7d3:	or     DWORD PTR [edx+0x7863d1c],ecx
  40c7d9:	mov    bl,0x90
  40c7db:	dec    esp
  40c7dc:	cmp    bl,cl
  40c7de:	xchg   esp,eax
  40c7df:	movzx  esi,di
  40c7e2:	(bad)  
  40c7e3:	lods   al,BYTE PTR ds:[esi]
  40c7e4:	iret   
  40c7e5:	xor    DWORD PTR [esi+ecx*8+0x7d],edi
  40c7e9:	cmc    
  40c7ea:	cs imul ecx,eax,0xb4b31023
  40c7f1:	push   0x6
  40c7f3:	sti    
  40c7f4:	rcl    BYTE PTR [ebx-0x53834d83],0x29
  40c7fb:	jo     0x40c7a3
  40c7fd:	or     al,0xd5
  40c7ff:	cmp    BYTE PTR [ebp+0x19],ch
  40c802:	sti    
  40c803:	jnp    0x40c814
  40c805:	call   0xeb6d:0xaeaa0a5f
  40c80c:	into   
  40c80d:	rcr    DWORD PTR [edx-0x16a41b5d],0x79
  40c814:	add    al,0x28
  40c816:	lock std 
  40c818:	mov    edx,0x9623dadf
  40c81d:	xchg   esi,eax
  40c81e:	sbb    eax,0x56877f8
  40c823:	fisubr DWORD PTR [ebx-0x48]
  40c826:	push   ebx
  40c827:	mov    ecx,0x87393198
  40c82c:	js     0x40c88f
  40c82e:	xchg   ebx,eax
  40c82f:	aas    
  40c830:	std    
  40c831:	mov    ch,0x45
  40c833:	mov    ?,WORD PTR [edi]
  40c835:	pop    esi
  40c836:	out    0xf0,al
  40c838:	push   ds
  40c839:	pusha  
  40c83a:	lods   al,BYTE PTR ds:[esi]
  40c83b:	(bad)  
  40c83c:	frstor [esi-0x7d]
  40c83f:	push   ebp
  40c840:	cmp    BYTE PTR [eax],0x94
  40c843:	mov    al,cs:0x37ab9f0d
  40c849:	ret    
  40c84a:	and    al,0xf4
  40c84c:	jb     0x40c87c
  40c84e:	imul   ebp,DWORD PTR [eax+ebp*1-0x4f0ba838],0xfa9dc3af
  40c859:	addr16 ss pop esi
  40c85c:	push   ss
  40c85d:	cmc    
  40c85e:	add    BYTE PTR [edi-0x1c],0x81
  40c862:	aaa    
  40c863:	mov    ch,0x2e
  40c865:	ins    DWORD PTR es:[edi],dx
  40c866:	add    al,BYTE PTR [ebx]
  40c868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c869:	xchg   esi,eax
  40c86a:	call   0xb591bd63
  40c86f:	mov    es,WORD PTR [esi]
  40c871:	enter  0x7348,0x65
  40c875:	sahf   
  40c876:	stc    
  40c877:	push   es
  40c878:	(bad)  
  40c87a:	jb     0x40c8fb
  40c87c:	jbe    0x40c8df
  40c87e:	push   ds
  40c87f:	pop    edi
  40c880:	cld    
  40c881:	jb     0x40c8a6
  40c883:	test   BYTE PTR [edx+0x49f5c2b3],bl
  40c889:	push   ecx
  40c88a:	adc    al,BYTE PTR [ecx-0x2a4f3ca3]
  40c890:	jecxz  0x40c876
  40c892:	sbb    al,0xfd
  40c894:	ds dec esi
  40c896:	out    0x3d,eax
  40c898:	cs aaa 
  40c89a:	push   0xbeae63a2
  40c89f:	adc    eax,0x7fce7f8b
  40c8a4:	jns    0x40c899
  40c8a6:	jbe    0x40c894
  40c8a8:	mov    WORD PTR [eax],?
  40c8aa:	gs inc edi
  40c8ac:	xor    ah,BYTE PTR [ebx+0x4c]
  40c8af:	fsub   st,st(2)
  40c8b1:	sbb    DWORD PTR [ecx-0x6a6ffbbf],0xc722e47c
  40c8bb:	or     eax,0x2cb21adb
  40c8c0:	aas    
  40c8c1:	rcr    ecx,0xee
  40c8c4:	jle    0x40c8ca
  40c8c6:	std    
  40c8c7:	mov    al,BYTE PTR [ebp+0x6c34b47f]
  40c8cd:	aad    0xf7
  40c8cf:	int3   
  40c8d0:	js     0x40c8d4
  40c8d2:	clc    
  40c8d3:	sbb    esi,DWORD PTR [esi+0xf]
  40c8d6:	data16 mov cl,0xe8
  40c8d9:	aaa    
  40c8da:	mov    dl,0x7c
  40c8dc:	inc    eax
  40c8dd:	loopne 0x40c8d6
  40c8df:	fst    DWORD PTR [ebp+0x5c]
  40c8e2:	leave  
  40c8e3:	dec    esp
  40c8e4:	xlat   BYTE PTR ds:[ebx]
  40c8e5:	cdq    
  40c8e6:	jno    0x40c8ec
  40c8e8:	das    
  40c8e9:	cmp    DWORD PTR [eax+0x1228080f],ebp
  40c8ef:	popf   
  40c8f0:	inc    ebx
  40c8f1:	pop    edi
  40c8f2:	pop    ecx
  40c8f3:	inc    edi
  40c8f4:	or     DWORD PTR [ebx-0x54],esp
  40c8f7:	xchg   edx,eax
  40c8f8:	retf   
  40c8f9:	test   esi,edx
  40c8fb:	push   eax
  40c8fc:	not    BYTE PTR [eax+0x2e553ae3]
  40c902:	push   eax
  40c903:	push   ebp
  40c904:	cmovo  ebx,DWORD PTR [edx-0x5a7ac92d]
  40c90b:	imul   esi,edx,0xffffff9b
  40c90e:	xchg   esi,eax
  40c90f:	outs   dx,DWORD PTR ds:[esi]
  40c910:	ins    BYTE PTR es:[edi],dx
  40c911:	push   ebx
  40c912:	rol    DWORD PTR [edi-0x4a4345b3],cl
  40c918:	fld    QWORD PTR [ecx-0x2280f01f]
  40c91e:	jp     0x40c8f6
  40c920:	mov    edi,0xca578733
  40c925:	mov    BYTE PTR [eax-0x33],ah
  40c928:	cs in  al,0x2a
  40c92b:	push   esp
  40c92c:	sbb    dh,al
  40c92e:	test   eax,0x9f6d471c
  40c933:	pop    ecx
  40c934:	pop    ss
  40c935:	pop    edi
  40c936:	loope  0x40c8fd
  40c938:	pop    edx
  40c939:	jno    0x40c989
  40c93b:	pusha  
  40c93c:	mul    DWORD PTR [ecx+0x2f7c0b43]
  40c942:	cmp    ch,cl
  40c944:	daa    
  40c945:	mov    esi,0x51309a18
  40c94a:	dec    esp
  40c94b:	and    esp,DWORD PTR [edi+0x50416e10]
  40c951:	test   eax,0xec8a052b
  40c956:	into   
  40c957:	mov    eax,ds:0x86300158
  40c95c:	push   ds
  40c95d:	sbb    esi,DWORD PTR ss:[edi-0x20a08f2a]
  40c964:	jbe    0x40c9a1
  40c966:	lea    ebp,ds:0xadaa3a7a
  40c96c:	in     al,0x1e
  40c96e:	push   edi
  40c96f:	sub    bh,BYTE PTR [edx]
  40c971:	enter  0x4271,0xdc
  40c975:	lahf   
  40c976:	(bad)  
  40c978:	sub    DWORD PTR [edi],eax
  40c97a:	xor    al,0x1c
  40c97c:	mov    esi,0xd1fc3189
  40c981:	jmp    0xbaa3:0xc75f675f
  40c988:	xchg   edi,eax
  40c989:	inc    edx
  40c98a:	jecxz  0x40c9f4
  40c98c:	sti    
  40c98d:	jo     0x40c972
  40c98f:	cs loopne 0x40c986
  40c992:	xchg   esi,eax
  40c993:	xchg   ebx,eax
  40c994:	xlat   BYTE PTR ds:[ebx]
  40c995:	or     eax,0xb4f7b0a
  40c99a:	dec    ebx
  40c99b:	sub    DWORD PTR [edx-0x1],ebp
  40c99e:	xchg   ecx,eax
  40c99f:	lea    esi,[ebx-0x4cc9fbc0]
  40c9a5:	stos   BYTE PTR es:[edi],al
  40c9a6:	dec    ebx
  40c9a7:	ja     0x40c948
  40c9a9:	shr    BYTE PTR [ebp+0x550e5848],cl
  40c9af:	lods   al,BYTE PTR ds:[si]
  40c9b2:	jmp    0xd9ca2031
  40c9b7:	data16 (bad) 
  40c9b9:	fisttp QWORD PTR [ecx+eax*1]
  40c9bc:	dec    edx
  40c9bd:	xor    esp,DWORD PTR [eax-0x216b6536]
  40c9c3:	xchg   DWORD PTR [esi+0x30],edx
  40c9c6:	psubusb mm0,mm5
  40c9c9:	or     BYTE PTR [esi],0xb5
  40c9cc:	out    dx,al
  40c9cd:	leave  
  40c9ce:	xchg   edx,eax
  40c9cf:	jnp    0x40c963
  40c9d1:	leave  
  40c9d2:	shr    BYTE PTR [ecx-0x6410649a],cl
  40c9d8:	dec    eax
  40c9d9:	fdivr  QWORD PTR [eax-0x5fbfc013]
  40c9df:	and    BYTE PTR [edi-0x78],0xc5
  40c9e3:	inc    ecx
  40c9e4:	out    dx,eax
  40c9e5:	bnd ja 0x40c96e
  40c9e8:	leave  
  40c9e9:	les    esi,FWORD PTR [ecx-0x5705025b]
  40c9ef:	xor    esi,ebx
  40c9f1:	adc    esi,ecx
  40c9f3:	push   eax
  40c9f4:	retf   
  40c9f5:	test   eax,0x3342dfe3
  40c9fa:	into   
  40c9fb:	repz stc 
  40c9fd:	outs   dx,DWORD PTR ds:[esi]
  40c9fe:	or     ah,BYTE PTR [ecx]
  40ca00:	cmp    edi,ecx
  40ca02:	push   edi
  40ca03:	jns    0x40ca0d
  40ca05:	cmp    BYTE PTR [esi+eiz*1+0x1d9a8a0f],cl
  40ca0c:	push   ds
  40ca0d:	pop    es
  40ca0e:	or     eax,DWORD PTR [edi+0x8b80fb2]
  40ca14:	scas   eax,DWORD PTR es:[edi]
  40ca15:	jg     0x40ca1b
  40ca17:	push   ecx
  40ca18:	sub    BYTE PTR [edx+edx*4],bl
  40ca1b:	das    
  40ca1c:	adc    eax,0x68350ab5
  40ca21:	pop    es
  40ca22:	hlt    
  40ca23:	popa   
  40ca24:	adc    al,0x51
  40ca26:	xchg   BYTE PTR [ecx-0x66db42b6],dh
  40ca2c:	pop    esp
  40ca2d:	cmp    DWORD PTR [edi+0x26f20f4f],eax
  40ca33:	dec    eax
  40ca34:	inc    edx
  40ca35:	je     0x40ca44
  40ca37:	jo     0x40ca88
  40ca39:	adc    al,0xd
  40ca3b:	ins    BYTE PTR es:[edi],dx
  40ca3c:	dec    ebp
  40ca3d:	(bad)  
  40ca3e:	ds ds int 0xf0
  40ca42:	push   eax
  40ca43:	and    edx,DWORD PTR [esi]
  40ca45:	push   ds
  40ca46:	sahf   
  40ca47:	jne    0x40ca31
  40ca49:	rcl    BYTE PTR [esi+eiz*1-0x59e1e749],0xcc
  40ca51:	mov    DWORD PTR [esi],edx
  40ca53:	les    eax,FWORD PTR [ecx]
  40ca55:	sub    BYTE PTR [eax],0xc0
  40ca58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca59:	sub    ecx,eax
  40ca5b:	pop    ecx
  40ca5c:	(bad)  
  40ca5d:	(bad)  
  40ca5e:	aam    0x33
  40ca60:	mov    edi,0xfa455209
  40ca65:	pop    ecx
  40ca66:	(bad)  
  40ca67:	sbb    DWORD PTR [ecx-0x1c60fb2b],0xb38167c1
  40ca71:	call   0x77d4:0xfbc
  40ca77:	(bad)  
  40ca78:	cdq    
  40ca79:	aad    0xd0
  40ca7b:	jle    0x40cacd
  40ca7d:	out    dx,eax
  40ca7e:	test   BYTE PTR ds:0x2fb28a85,bl
  40ca84:	mov    ds:0x975930f6,al
  40ca89:	push   ecx
  40ca8a:	xor    edi,edi
  40ca8c:	fdiv   st,st(3)
  40ca8e:	sub    ecx,DWORD PTR [edi]
  40ca90:	aaa    
  40ca91:	in     al,0xd5
  40ca93:	mov    al,0x8d
  40ca95:	push   ebx
  40ca96:	and    BYTE PTR [esi],dl
  40ca98:	fcmovb st,st(3)
  40ca9a:	xchg   edx,eax
  40ca9b:	sbb    BYTE PTR [edi-0x48],bh
  40ca9e:	call   0x4a9c:0x2bf0ea74
  40caa5:	into   
  40caa6:	or     al,0x22
  40caa8:	test   al,0xad
  40caaa:	pop    ebp
  40caab:	pop    ebx
  40caac:	sti    
  40caad:	or     BYTE PTR [ecx],al
  40caaf:	sbb    BYTE PTR [ebx+0x7d8bfc45],cl
  40cab5:	clc    
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xf4ed07b6,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40ce34
  40cde1:	es inc ebp
  40cde3:	in     al,0x2c
  40cde5:	dec    ebx
  40cde6:	xlat   BYTE PTR ds:[ebx]
  40cde7:	mov    edi,0x88e3bbf1
  40cdec:	inc    eax
  40cded:	mov    eax,ds:0x6417eee2
  40cdf2:	popa   
  40cdf3:	cli    
  40cdf4:	aaa    
  40cdf5:	pop    eax
  40cdf6:	int    0x8d
  40cdf8:	cmp    ah,ch
  40cdfa:	mov    edi,0xc0063688
  40cdff:	js     0x40ce52
  40ce01:	cmp    eax,esp
  40ce03:	test   BYTE PTR [esi-0x732040be],dh
  40ce09:	pop    edi
  40ce0a:	fs or  edx,esi
  40ce0d:	gs aad 0x5d
  40ce10:	adc    DWORD PTR [ecx+0x5a],esp
  40ce13:	and    eax,0xe56f7818
  40ce18:	aam    0xae
  40ce1a:	xchg   BYTE PTR [esi+0x3b],bh
  40ce1d:	mov    esi,0xc8534adf
  40ce22:	lods   eax,DWORD PTR ds:[esi]
  40ce23:	sub    BYTE PTR [edx+0x134d17bb],bh
  40ce29:	inc    esi
  40ce2a:	cs and al,0x20
  40ce2d:	push   0x49393bbc
  40ce32:	jno    0x40cdb5
  40ce34:	scas   eax,DWORD PTR es:[edi]
  40ce35:	pushf  
  40ce36:	mov    dh,0xc9
  40ce38:	mov    dl,0x6
  40ce3a:	mov    ds:0x9f84496d,eax
  40ce3f:	cs push esp
  40ce41:	lods   eax,DWORD PTR ds:[esi]
  40ce42:	(bad)  
  40ce43:	sub    ah,ch
  40ce45:	test   DWORD PTR [esi-0x55],eax
  40ce48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce49:	popf   
  40ce4a:	bound  esi,QWORD PTR [ebx]
  40ce4c:	rcl    BYTE PTR [ebp+0x17],0xb5
  40ce50:	ret    
  40ce51:	push   eax
  40ce52:	add    eax,0x1cd81caa
  40ce57:	cmp    eax,0xbfd22f46
  40ce5c:	mov    eax,ds:0xa40b43ac
  40ce61:	jbe    0x40ce4e
  40ce63:	mov    cl,0xab
  40ce65:	imul   esi,DWORD PTR [edi+0x46d4382],0xffffff8d
  40ce6c:	data16 arpl WORD PTR [edi*1+0x1a64e8ad],di
  40ce74:	mov    bh,0x61
  40ce76:	pusha  
  40ce77:	sub    DWORD PTR [ebx-0x19],0x5
  40ce7b:	(bad)  
  40ce7c:	mov    esi,0x9f52a227
  40ce81:	sbb    eax,0x13ffab98
  40ce86:	retf   0xe76e
  40ce89:	cmp    ah,0x13
  40ce8c:	cmp    cl,BYTE PTR [eax]
  40ce8e:	cwde   
  40ce8f:	scas   eax,DWORD PTR es:[edi]
  40ce90:	jne    0x40cec0
  40ce92:	fnstenv [esi-0x79551be9]
  40ce98:	ret    
  40ce99:	mov    eax,0xec1031b
  40ce9e:	ins    DWORD PTR es:[edi],dx
  40ce9f:	mov    dl,BYTE PTR [esi]
  40cea1:	stos   DWORD PTR es:[edi],eax
  40cea2:	dec    edx
  40cea3:	call   0x3e3d:0xde12cd0b
  40ceaa:	ins    BYTE PTR es:[edi],dx
  40ceab:	ja     0x40ce85
  40cead:	outs   dx,BYTE PTR ds:[esi]
  40ceae:	call   0x2661:0x5563a3d5
  40ceb5:	cwde   
  40ceb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb7:	and    eax,0x7ea18249
  40cebc:	test   eax,0x934b13ca
  40cec1:	mov    bh,0x25
  40cec3:	repnz inc edx
  40cec5:	aas    
  40cec6:	pusha  
  40cec7:	cdq    
  40cec8:	inc    edi
  40cec9:	dec    esi
  40ceca:	sbb    eax,0xb3c043ba
  40cecf:	sbb    esp,edx
  40ced1:	pop    ds
  40ced2:	test   edx,ebp
  40ced4:	mov    esi,0x46992dc0
  40ced9:	xchg   edx,eax
  40ceda:	jge    0x40cf58
  40cedc:	jp     0x40ce61
  40cede:	mov    bh,BYTE PTR [eax-0x38]
  40cee1:	sbb    ah,BYTE PTR [ecx-0x628124ae]
  40cee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cee8:	pop    esp
  40cee9:	sub    al,0x75
  40ceeb:	pop    ecx
  40ceec:	jmp    0x40cf40
  40ceee:	stos   DWORD PTR es:[edi],eax
  40ceef:	mov    cl,0xe6
  40cef1:	das    
  40cef2:	hlt    
  40cef3:	jne    0x40cf66
  40cef5:	(bad)  
  40cef6:	cmp    ch,BYTE PTR [edi-0x1b873c57]
  40cefc:	and    al,BYTE PTR [ecx-0x262eb18f]
  40cf02:	call   0x285a4fbf
  40cf07:	xchg   ebx,eax
  40cf08:	mov    ds:0x661a289a,al
  40cf0d:	mov    dh,0xa
  40cf0f:	neg    DWORD PTR [ebx-0x4ade7060]
  40cf15:	xchg   ebx,eax
  40cf16:	out    dx,eax
  40cf17:	mov    DWORD PTR [eax-0x71],eax
  40cf1a:	std    
  40cf1b:	mov    ebx,ebp
  40cf1d:	mov    BYTE PTR [ebx+0x5c603da0],al
  40cf23:	nop
  40cf24:	push   eax
  40cf25:	lahf   
  40cf26:	call   0x81902333
  40cf2b:	pop    ds
  40cf2c:	lods   eax,DWORD PTR ds:[esi]
  40cf2d:	add    DWORD PTR ds:0x42c84d2b,edx
  40cf33:	out    dx,al
  40cf34:	test   DWORD PTR [ebx+0x3],edx
  40cf37:	adc    al,0xfc
  40cf39:	push   ecx
  40cf3a:	icebp  
  40cf3b:	mov    al,ds:0x2403684a
  40cf40:	gs or  eax,0x4f253be
  40cf46:	ins    BYTE PTR es:[edi],dx
  40cf47:	sahf   
  40cf48:	mov    ecx,0x3b87be38
  40cf4d:	fdiv   QWORD PTR [ecx-0x61]
  40cf50:	dec    DWORD PTR [ecx]
  40cf52:	mov    eax,0x75a78985
  40cf57:	lock and eax,DWORD PTR [esi+0x41]
  40cf5b:	test   eax,0x8656c298
  40cf60:	sub    eax,0x95b48712
  40cf65:	imul   esi,DWORD PTR [ecx-0x3b],0x4e
  40cf69:	sysenter 
  40cf6b:	sti    
  40cf6c:	out    0x34,al
  40cf6e:	loopne 0x40cf37
  40cf70:	add    esi,edi
  40cf72:	lds    esi,FWORD PTR [ebx+eiz*2]
  40cf75:	icebp  
  40cf76:	loop   0x40cf0e
  40cf78:	cwde   
  40cf79:	std    
  40cf7a:	(bad)  
  40cf7b:	aaa    
  40cf7c:	push   0x12
  40cf7e:	je     0x40cf02
  40cf80:	jp     0x40cf42
  40cf82:	pop    ebx
  40cf83:	add    ecx,DWORD PTR [ecx+0x6d]
  40cf86:	int3   
  40cf87:	xchg   esp,eax
  40cf88:	sub    ebx,DWORD PTR [edx]
  40cf8a:	pushf  
  40cf8b:	rcr    DWORD PTR es:[edi],1
  40cf8e:	push   ds
  40cf8f:	hlt    
  40cf90:	pop    es
  40cf91:	jmp    0x91523cd2
  40cf96:	mov    al,ds:0x479392c9
  40cf9b:	loop   0x40cf75
  40cf9d:	xchg   ecx,esp
  40cf9f:	fdivr  DWORD PTR [esi]
  40cfa1:	mov    eax,0x39a87651
  40cfa6:	dec    esp
  40cfa7:	cs test eax,0x448908ed
  40cfad:	add    al,0x99
  40cfaf:	add    eax,0x9a3885df
  40cfb4:	imul   edx,DWORD PTR [ebx+0x27],0x6322394d
  40cfbb:	addr16 adc ch,dh
  40cfbe:	jge    0x40cfb6
  40cfc0:	loope  0x40cf7c
  40cfc2:	pusha  
  40cfc3:	fxch   st(0)
  40cfc5:	push   ebx
  40cfc6:	push   0xffffffda
  40cfc8:	test   DWORD PTR [edx],0x11205ad3
  40cfce:	out    0x42,eax
  40cfd0:	fcom   st(4)
  40cfd2:	scas   eax,DWORD PTR es:[edi]
  40cfd3:	jb     0x40cfe7
  40cfd5:	mov    bl,0xda
  40cfd7:	jmp    0x38e419ab
  40cfdc:	neg    BYTE PTR [eax]
  40cfde:	inc    edi
  40cfdf:	jbe    0x40d03c
  40cfe1:	cmp    DWORD PTR [ebx],ebx
  40cfe3:	or     BYTE PTR [eax],0x7a
  40cfe6:	sbb    al,0xe
  40cfe8:	jb     0x40d030
  40cfea:	out    dx,al
  40cfeb:	push   0x7c
  40cfed:	and    ah,al
  40cfef:	aam    0x42
  40cff1:	dec    ebx
  40cff2:	in     al,dx
  40cff3:	hlt    
  40cff4:	push   ds
  40cff5:	mov    esp,0x50bf5704
  40cffa:	pop    ebp
  40cffb:	call   0x97b:0xac89f80c
  40d002:	xchg   edx,eax
  40d003:	sub    eax,0xc67a60c1
  40d008:	xor    eax,DWORD PTR [eax-0x4c]
  40d00b:	cmp    eax,0x4dc5177a
  40d010:	cmp    al,0xd5
  40d012:	repz jl 0x40cf9d
  40d015:	clc    
  40d016:	inc    edx
  40d017:	lock mov bl,0xa8
  40d01a:	mov    ds:0xc97978f3,eax
  40d01f:	inc    edi
  40d020:	sub    ebp,edi
  40d022:	inc    ebx
  40d023:	retf   
  40d024:	mov    esi,0x15e0b7ad
  40d029:	cmp    BYTE PTR [ebx+eax*2+0x31],0x1
  40d02e:	xor    al,0x13
  40d030:	xchg   eax,eax
  40d032:	jbe    0x40cfd1
  40d034:	call   0x7104:0x32886b9b
  40d03b:	rcl    BYTE PTR [eiz*8-0x53e8bc3],cl
  40d042:	mov    DWORD PTR [ebp-0x64],0x5a0f8984
  40d049:	je     0x40d007
  40d04b:	lahf   
  40d04c:	and    eax,DWORD PTR [ecx+0x3c]
  40d04f:	outs   dx,BYTE PTR ds:[esi]
  40d050:	fnsave [ebx]
  40d052:	cs dec esi
  40d054:	adc    DWORD PTR [edx-0x3e569541],esi
  40d05a:	aam    0xb5
  40d05c:	mov    ch,0x31
  40d05e:	mov    ebp,0x43ae9b0d
  40d063:	ret    
  40d064:	test   cl,0xfd
  40d067:	std    
  40d068:	lods   eax,DWORD PTR ds:[esi]
  40d069:	pop    ds
  40d06a:	je     0x40d085
  40d06c:	cdq    
  40d06d:	fiadd  DWORD PTR ds:0xaceeac25
  40d073:	data16 or bl,BYTE PTR [edx-0x2684b087]
  40d07a:	out    dx,al
  40d07b:	mov    edi,0x6781cc44
  40d080:	push   cs
  40d081:	push   ebp
  40d082:	xchg   edi,eax
  40d083:	cdq    
  40d084:	stos   DWORD PTR es:[edi],eax
  40d085:	mov    eax,ds:0xbb64b34b
  40d08a:	xor    eax,0xf90ae1d1
  40d08f:	es inc ecx
  40d091:	dec    esp
  40d092:	jg     0x40d033
  40d094:	mov    esp,0xeae1c927
  40d099:	dec    ecx
  40d09a:	cmp    esi,DWORD PTR [ebp+0x3e]
  40d09d:	lds    edx,FWORD PTR [ecx+0x79]
  40d0a0:	inc    edx
  40d0a1:	sub    DWORD PTR [ebp+ecx*2+0x6601e2ed],esi
  40d0a8:	sub    eax,0xbff53b68
  40d0ad:	mov    eax,ds:0xed684bd1
  40d0b2:	jns    0x40d0a7
  40d0b4:	dec    esp
  40d0b5:	jae    0x40d12b
  40d0b7:	push   esi
  40d0b8:	mov    ah,0xef
  40d0ba:	mov    ds:0x8f9c09ea,eax
  40d0bf:	pop    ss
  40d0c0:	sbb    al,0x7
  40d0c2:	icebp  
  40d0c3:	popa   
  40d0c4:	push   esi
  40d0c5:	dec    ebx
  40d0c6:	push   0x1a
  40d0c8:	mov    al,ds:0x19abf4ab
  40d0cd:	inc    ecx
  40d0ce:	in     al,dx
  40d0cf:	out    0x8e,al
  40d0d1:	fnsave [eax]
  40d0d3:	add    eax,DWORD PTR ds:0xc7ca8d7c
  40d0d9:	mov    es,WORD PTR [esi+eiz*1]
  40d0dc:	loop   0x40d0db
  40d0de:	xchg   BYTE PTR [ebp-0x51],dl
  40d0e1:	ret    0xcb8e
  40d0e4:	scas   al,BYTE PTR es:[edi]
  40d0e5:	fdivr  DWORD PTR [edi-0x40a57986]
  40d0eb:	adc    eax,0x1e00688d
  40d0f0:	or     cl,BYTE PTR [ebp+0x3d]
  40d0f3:	popa   
  40d0f4:	and    bl,al
  40d0f6:	mov    ecx,0x17aece71
  40d0fb:	jo     0x40d0fa
  40d0fd:	lods   al,BYTE PTR ds:[esi]
  40d0fe:	cmp    BYTE PTR [edi-0x789f1582],al
  40d104:	lea    edi,ds:0x11d092b0
  40d10a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10b:	jae    0x40d0ef
  40d10d:	add    eax,DWORD PTR [ecx-0x53]
  40d110:	addr16 loop 0x40d166
  40d113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d114:	pop    edi
  40d115:	loope  0x40d10d
  40d117:	cmp    BYTE PTR [edi+esi*8-0x53],0x7
  40d11c:	out    0x91,al
  40d11e:	into   
  40d11f:	jge    0x40d0bb
  40d121:	(bad)  
  40d122:	dec    ebp
  40d123:	xor    ah,BYTE PTR ds:0x822f9b23
  40d129:	fnstenv [edx]
  40d12b:	xor    dl,bl
  40d12d:	cmp    cl,BYTE PTR [esi+0x46]
  40d130:	mov    ch,0x6c
  40d132:	dec    ebx
  40d133:	data16 add dh,ah
  40d136:	int3   
  40d137:	into   
  40d138:	rcl    DWORD PTR [edx+0x72f7312a],cl
  40d13e:	jno    0x40d153
  40d140:	loop   0x40d1b3
  40d142:	fimul  WORD PTR [ebp-0x26585387]
  40d148:	arpl   WORD PTR [ecx+0x57e97d93],bx
  40d14e:	dec    esp
  40d14f:	or     BYTE PTR [edx],bl
  40d151:	mov    BYTE PTR [edi+0x3a],ah
  40d154:	rol    DWORD PTR [edi],1
  40d156:	add    al,0xb5
  40d158:	inc    esp
  40d159:	(bad)  
  40d15a:	dec    ecx
  40d15b:	out    0xc5,al
  40d15d:	push   ds
  40d15e:	ss dec edx
  40d160:	mov    dl,0x4a
  40d162:	iret   
  40d163:	aam    0x13
  40d165:	pusha  
  40d166:	xchg   edi,eax
  40d167:	dec    eax
  40d168:	inc    ebx
  40d169:	(bad)  
  40d16b:	jns    0x40d17d
  40d16d:	mov    DWORD PTR [edx],ebp
  40d16f:	jmp    0x40d1ce
  40d171:	xor    BYTE PTR [ecx+0x4b],dl
  40d174:	fiadd  WORD PTR [edx-0x20]
  40d177:	leave  
  40d178:	lods   eax,DWORD PTR ds:[esi]
  40d179:	adc    DWORD PTR [edx-0x2c],ebp
  40d17c:	push   0xa4210cea
  40d181:	mov    edx,DWORD PTR [edx]
  40d183:	inc    DWORD PTR [ecx+0x15f0f33a]
  40d189:	dec    ebp
  40d18a:	cdq    
  40d18b:	mov    dl,0x30
  40d18d:	dec    ebx
  40d18e:	push   0xffffffd2
  40d190:	scas   eax,DWORD PTR es:[edi]
  40d191:	push   esp
  40d192:	jmp    0x9060842d
  40d197:	or     edx,0xa58d2594
  40d19d:	arpl   WORD PTR [ecx-0x51],ax
  40d1a0:	mov    bh,0x43
  40d1a2:	adc    BYTE PTR [esi-0x5f],ah
  40d1a5:	or     ecx,DWORD PTR [edi]
  40d1a7:	or     BYTE PTR [edi-0x473d5820],ch
  40d1ad:	(bad)  
  40d1af:	test   BYTE PTR [edx+0x555d8dad],dl
  40d1b5:	inc    esi
  40d1b6:	aam    0x3e
  40d1b8:	inc    esi
  40d1b9:	stos   DWORD PTR es:[edi],eax
  40d1ba:	mov    ss,WORD PTR [ecx]
  40d1bc:	inc    ebp
  40d1bd:	mov    eax,0xbb0fd742
  40d1c2:	pop    eax
  40d1c3:	ret    0x5ad6
  40d1c6:	or     eax,0xf1ea0ea
  40d1cb:	pop    ds
  40d1cc:	xchg   edx,eax
  40d1cd:	repnz sub al,0xd3
  40d1d0:	jnp    0x40d186
  40d1d2:	sbb    BYTE PTR [eax+0x27295da1],ah
  40d1d8:	and    edi,DWORD PTR [esi+ecx*4-0xf]
  40d1dc:	jmp    0xcef48aeb
  40d1e1:	adc    al,BYTE PTR [bp+si-0x4a0e]
  40d1e6:	lods   eax,DWORD PTR ds:[esi]
  40d1e7:	xor    BYTE PTR [edx],dh
  40d1e9:	cmp    eax,0xc1a4f4fc
  40d1ee:	xor    DWORD PTR [eax+0x5c4868a],esi
  40d1f4:	jbe    0x40d1f2
  40d1f6:	push   edx
  40d1f7:	jge    0x40d19b
  40d1f9:	sti    
  40d1fa:	push   edi
  40d1fb:	push   0x4b1f5814
  40d200:	cmp    ebp,DWORD PTR [esi+0x1b]
  40d203:	mov    bh,BYTE PTR [edi]
  40d205:	jb     0x40d271
  40d207:	add    bl,BYTE PTR [eax-0x2d4a4b35]
  40d20d:	mov    dl,0xd
  40d20f:	test   al,0x54
  40d211:	cli    
  40d212:	mov    dl,0x8b
  40d214:	jge    0x40d1b4
  40d216:	in     eax,0xa2
  40d218:	mov    BYTE PTR [ecx-0x1a],cl
  40d21b:	mov    ecx,?
  40d21d:	cld    
  40d21e:	inc    edi
  40d21f:	mov    bh,0x61
  40d221:	aam    0xd0
  40d223:	adc    edi,DWORD PTR [ebp+esi*8+0x62]
  40d227:	xchg   edi,ecx
  40d229:	push   ecx
  40d22a:	cs into 
  40d22c:	jmp    0xd879d2b0
  40d231:	popf   
  40d232:	cwde   
  40d233:	mov    ebx,edx
  40d235:	mov    al,0xf
  40d237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d238:	push   ebp
  40d239:	mov    edx,0x51ba0442
  40d23e:	and    eax,0x223ec5a1
  40d243:	cmp    DWORD PTR [edx],esi
  40d245:	in     eax,0x2e
  40d247:	fstp   TBYTE PTR [edi+edx*1-0x36883143]
  40d24e:	or     BYTE PTR [edx+0x145713f0],0xfd
  40d255:	sbb    al,0x49
  40d257:	xor    DWORD PTR ds:0xb0ff52cc,ebp
  40d25d:	pop    eax
  40d25e:	lods   al,BYTE PTR ds:[esi]
  40d25f:	int3   
  40d260:	inc    edi
  40d261:	retf   
  40d262:	fiadd  DWORD PTR [esi+0x64]
  40d265:	outs   dx,DWORD PTR ds:[esi]
  40d266:	retf   
  40d267:	(bad)  
  40d268:	out    dx,al
  40d269:	cmp    cl,BYTE PTR [eax]
  40d26b:	xchg   esi,eax
  40d26c:	xor    ebp,DWORD PTR [ebx+0x3f2e985a]
  40d272:	mov    BYTE PTR [esi-0x21],dh
  40d275:	mov    edi,0xff40f562
  40d27a:	cwde   
  40d27b:	into   
  40d27c:	std    
  40d27d:	ins    BYTE PTR es:[edi],dx
  40d27e:	cmp    bl,ah
  40d280:	jno    0x40d216
  40d282:	arpl   WORD PTR [ecx+0x3b],bp
  40d285:	dec    ebx
  40d286:	mov    ecx,0xb1fa3354
  40d28b:	popa   
  40d28c:	mov    al,0x36
  40d28e:	ins    DWORD PTR es:[edi],dx
  40d28f:	sbb    al,0xa1
  40d291:	xor    dl,dh
  40d293:	and    DWORD PTR [edi+edi*4],0x98d68c7f
  40d29a:	mov    edi,0x83fe8dcb
  40d29f:	imul   edi,DWORD PTR [ebx+ebp*8],0x26
  40d2a3:	pop    esi
  40d2a4:	push   cs
  40d2a5:	cdq    
  40d2a6:	out    dx,eax
  40d2a7:	push   ebx
  40d2a8:	add    bh,BYTE PTR [ecx+edi*2]
  40d2ab:	ja     0x40d308
  40d2ad:	inc    esi
  40d2ae:	add    dh,BYTE PTR [eax]
  40d2b0:	cmc    
  40d2b1:	mov    ecx,0x18147274
  40d2b6:	ja     0x40d273
  40d2b8:	xor    eax,edi
  40d2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2bc:	jno    0x40d306
  40d2be:	shl    BYTE PTR [esp+ebx*4],cl
  40d2c1:	jnp    0x40d2ba
  40d2c3:	jle    0x40d2d8
  40d2c5:	rcl    DWORD PTR [edx+0x6e],0xe0
  40d2c9:	or     eax,0x6b1e0049
  40d2ce:	icebp  
  40d2cf:	adc    eax,0x8b821088
  40d2d4:	hlt    
  40d2d5:	call   0x3dcf:0xa9c4
  40d2db:	dec    edi
  40d2dc:	aas    
  40d2dd:	jmp    0x90ba651
  40d2e2:	aad    0x4b
  40d2e4:	add    BYTE PTR [ecx+0x7bb5ecb2],ah
  40d2ea:	loopne 0x40d2fb
  40d2ec:	jl     0x40d357
  40d2ee:	mov    edx,0x1bf9e2d1
  40d2f3:	inc    esp
  40d2f4:	rol    BYTE PTR [eax-0x49],1
  40d2f7:	pop    eax
  40d2f8:	ret    
  40d2f9:	call   0x8049:0xfcc92bf6
  40d300:	repz ds or bl,bl
  40d304:	out    0xa6,al
  40d306:	mov    gs,WORD PTR [eax+0x3b]
  40d309:	shl    BYTE PTR [edx],cl
  40d30b:	mov    bh,0x7c
  40d30d:	in     eax,dx
  40d30e:	in     al,dx
  40d30f:	fwait
  40d310:	shr    dh,1
  40d312:	imul   ecx,DWORD PTR [ebx],0xffffffc2
  40d315:	xor    BYTE PTR [ecx-0x5f],al
  40d318:	stc    
  40d319:	mov    al,ds:0xb1ff21ec
  40d31e:	rcl    DWORD PTR [edi-0xa],0x1c
  40d322:	ja     0x40d2e0
  40d324:	mov    ah,0xce
  40d326:	nop
  40d327:	test   al,0x52
  40d329:	dec    ebx
  40d32a:	inc    ebx
  40d32b:	pushf  
  40d32c:	loope  0x40d2fc
  40d32e:	push   cs
  40d32f:	mov    ?,WORD PTR [edi-0x41900ee5]
  40d335:	mov    dh,0x2c
  40d337:	jne    0x40d339
  40d339:	xchg   esp,eax
  40d33a:	lea    eax,ds:0xc68d0159
  40d340:	js     0x40d307
  40d342:	inc    ebp
  40d343:	sbb    DWORD PTR ss:[edi],ebp
  40d346:	mov    ds:0xdaf79fc2,eax
  40d34b:	out    dx,eax
  40d34c:	or     al,0xfb
  40d34e:	out    dx,eax
  40d34f:	cdq    
  40d350:	cmp    eax,0x5bad6c1f
  40d355:	adc    edx,DWORD PTR [eax+0xc8d4313]
  40d35b:	dec    ecx
  40d35c:	mov    esi,ebp
  40d35e:	bound  esp,QWORD PTR [eax]
  40d360:	xor    cl,BYTE PTR [bp+0x7b09]
  40d365:	and    BYTE PTR [esi-0x1addc6e5],ch
  40d36b:	pop    ebx
  40d36c:	add    al,0x9
  40d36e:	pop    eax
  40d36f:	mov    cl,0x3a
  40d371:	add    DWORD PTR [eax],0xffffff96
  40d374:	xor    DWORD PTR [edx],ebp
  40d376:	imul   BYTE PTR [esi-0x12]
  40d379:	das    
  40d37a:	xchg   ecx,eax
  40d37b:	xchg   ebx,eax
  40d37c:	push   es
  40d37d:	inc    esp
  40d37e:	ja     0x40d3c0
  40d380:	es in  eax,dx
  40d382:	rcl    DWORD PTR [esi+0x1895c2ff],1
  40d388:	or     DWORD PTR [esi],ebx
  40d38a:	or     BYTE PTR [edi-0x4f],0xbe
  40d38e:	call   0x8b1f:0x1d7d54d0
  40d395:	hlt    
  40d396:	jmp    0x926c9b4f
  40d39b:	lods   al,BYTE PTR ds:[esi]
  40d39c:	shl    DWORD PTR [ecx],cl
  40d39e:	xor    bl,BYTE PTR [edi]
  40d3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a1:	xor    eax,0x8ade912d
  40d3a6:	push   esp
  40d3a7:	sbb    eax,DWORD PTR [eax-0x26ec1582]
  40d3ad:	jne    0x40d3d1
  40d3af:	int3   
  40d3b0:	cli    
  40d3b1:	aad    0xa2
  40d3b3:	jbe    0x40d367
  40d3b5:	push   edx
  40d3b6:	mov    cl,0xce
  40d3b8:	call   0x6e64:0xc2f26f3d
  40d3bf:	mov    ds,eax
  40d3c1:	jo     0x40d362
  40d3c3:	inc    ebx
  40d3c4:	sub    eax,0x26a39ae1
  40d3c9:	inc    ebp
  40d3ca:	retf   0x68c9
  40d3cd:	and    eax,0xf33af08a
  40d3d2:	sub    al,0xf
  40d3d4:	mov    ah,0x7
  40d3d6:	push   esi
  40d3d7:	scas   eax,DWORD PTR es:[edi]
  40d3d8:	int    0xfe
  40d3da:	adc    al,0x85
  40d3dc:	rcl    BYTE PTR [edx+0x1],0x3d
  40d3e0:	sub    DWORD PTR [ecx-0x51],ebx
  40d3e3:	xchg   ebx,eax
  40d3e4:	lahf   
  40d3e5:	(bad)  
  40d3e6:	ds mov ebx,0x15457f21
  40d3ec:	push   es
  40d3ed:	pusha  
  40d3ee:	icebp  
  40d3ef:	aad    0x12
  40d3f1:	mov    edx,0x9cbdb2b6
  40d3f6:	lods   eax,DWORD PTR ds:[esi]
  40d3f7:	jmp    0x22973020
  40d3fc:	push   ds
  40d3fd:	and    dl,BYTE PTR [edx+0x143b0291]
  40d403:	inc    edx
  40d404:	sbb    bl,ch
  40d406:	mov    al,ch
  40d408:	nop
  40d409:	pop    ecx
  40d40a:	(bad)  
  40d40b:	aaa    
  40d40c:	stos   DWORD PTR es:[edi],eax
  40d40d:	xchg   esi,eax
  40d40e:	xchg   esp,eax
  40d40f:	jg     0x40d477
  40d411:	inc    edi
  40d412:	sbb    eax,0x2c56316b
  40d417:	sbb    DWORD PTR [esi+0x53],ecx
  40d41a:	rcr    BYTE PTR [ecx-0x46],0xa2
  40d41e:	aam    0x9c
  40d420:	jno    0x40d3b2
  40d422:	push   esp
  40d423:	mov    BYTE PTR [edi-0x4f889a60],al
  40d429:	push   edi
  40d42a:	xor    ch,cl
  40d42c:	pop    edi
  40d42d:	repnz icebp 
  40d42f:	retf   
  40d430:	fnstcw WORD PTR [ebx-0x4c]
  40d433:	sub    ebx,0xffffff8a
  40d436:	lock dec ebp
  40d438:	xchg   ebp,eax
  40d439:	mov    eax,ds:0x4e9279c6
  40d43e:	push   ebp
  40d43f:	add    dh,BYTE PTR [ebx]
  40d441:	and    DWORD PTR [esi],0x2
  40d444:	aam    0x70
  40d446:	lds    ecx,FWORD PTR [edx+ebx*4-0x2031f6b8]
  40d44d:	dec    ecx
  40d44e:	lds    ebx,FWORD PTR [edi-0x63]
  40d451:	sar    ecx,cl
  40d453:	cmp    al,0xa1
  40d455:	loope  0x40d47b
  40d457:	daa    
  40d458:	(bad)  
  40d459:	dec    ebx
  40d45a:	mov    edx,0x8f1954b2
  40d45f:	push   es
  40d460:	data16 and al,0xe8
  40d463:	xchg   ebx,eax
  40d464:	mov    ch,0x99
  40d466:	cmp    BYTE PTR [ecx+0x741c0c73],ch
  40d46c:	imul   eax,DWORD PTR [esp],0xffffffca
  40d470:	test   al,bh
  40d472:	sbb    eax,0xd166e277
  40d477:	sub    eax,0xd708e6a0
  40d47c:	adc    dl,BYTE PTR [edi]
  40d47e:	sti    
  40d47f:	jb     0x40d430
  40d481:	inc    edi
  40d482:	sub    eax,0x11b3efae
  40d487:	mov    cl,0xad
  40d489:	jne    0x40d492
  40d48b:	pop    ecx
  40d48c:	lea    esi,[edi]
  40d48e:	sub    dh,BYTE PTR ds:0x2d8fa400
  40d494:	pop    es
  40d495:	or     al,BYTE PTR ds:0x391901ca
  40d49b:	in     al,dx
  40d49c:	iret   
  40d49d:	dec    eax
  40d49e:	xlat   BYTE PTR ds:[ebx]
  40d49f:	inc    esi
  40d4a0:	popf   
  40d4a1:	or     ah,bl
  40d4a3:	jmp    0x1763:0xa0372b0c
  40d4aa:	jns    0x40d45b
  40d4ac:	push   ebp
  40d4ad:	sti    
  40d4ae:	les    eax,FWORD PTR [edx]
  40d4b0:	jmp    0x48e2:0x3859ae10
  40d4b7:	addr16 out dx,eax
  40d4b9:	cdq    
  40d4ba:	mov    ah,0xb2
  40d4bc:	jae    0x40d4ec
  40d4be:	xchg   ebp,eax
  40d4bf:	fimul  WORD PTR [eax]
  40d4c1:	add    ecx,DWORD PTR [edi]
  40d4c3:	call   0x3063:0xc849383e
  40d4ca:	inc    edx
  40d4cb:	popa   
  40d4cc:	jge    0x40d483
  40d4ce:	(bad)
  40d4d2:	or     al,BYTE PTR [edi+0x62f4c503]
  40d4d8:	xor    al,0x6a
  40d4da:	addr16 mov dl,0x6
  40d4dd:	mov    eax,eax
  40d4df:	ss iret 
  40d4e1:	and    BYTE PTR [ebx],0x9
  40d4e4:	fs cmc 
  40d4e6:	fimul  WORD PTR [ebx]
  40d4e8:	inc    edi
  40d4e9:	jle    0x40d52f
  40d4eb:	rcl    DWORD PTR [esi-0xf],1
  40d4ee:	jb     0x40d524
  40d4f0:	add    BYTE PTR [edi+ebx*8-0x3301fa87],0xbf
  40d4f8:	add    ch,BYTE PTR [edi-0x66]
  40d4fb:	xchg   esi,eax
  40d4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4fd:	mov    eax,ds:0x556788d8
  40d502:	and    BYTE PTR [ebx],bh
  40d504:	gs cmp eax,0xa723f85b
  40d50a:	loop   0x40d52a
  40d50c:	fsubr  DWORD PTR [ebp-0x2e]
  40d50f:	sbb    eax,0xb3adcb84
  40d514:	push   0xd1b86cb4
  40d519:	and    eax,0x8478233b
  40d51e:	ror    BYTE PTR [ebp-0x5b],0xef
  40d522:	daa    
  40d523:	pop    edx
  40d524:	jno    0x40d558
  40d526:	rol    DWORD PTR [esp+edx*1],0xe
  40d52a:	or     eax,0xfd0dcb81
  40d52f:	or     edx,ebx
  40d531:	mov    ebp,0xeb8a0990
  40d536:	hlt    
  40d537:	and    DWORD PTR [esi+esi*8],esp
  40d53a:	les    edx,FWORD PTR [ecx]
  40d53c:	mov    esp,0xf238fef4
  40d541:	nop
  40d542:	push   0x8942249f
  40d547:	push   ds
  40d548:	dec    edx
  40d549:	into   
  40d54a:	aas    
  40d54b:	aam    0xd0
  40d54d:	mov    al,ds:0xea478d12
  40d552:	in     eax,0x5d
  40d554:	xchg   esi,eax
  40d555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d556:	scas   al,BYTE PTR es:[edi]
  40d557:	mov    bl,0xcd
  40d559:	jno    0x40d4ee
  40d55b:	ret    
  40d55c:	fnstenv cs:0x25cc3eac
  40d563:	scas   al,BYTE PTR es:[edi]
  40d564:	push   esp
  40d565:	pop    eax
  40d566:	pop    eax
  40d567:	int    0xbf
  40d569:	stos   DWORD PTR es:[edi],eax
  40d56a:	inc    esp
  40d56b:	jl     0x40d5c1
  40d56d:	mov    BYTE PTR [edi+0x73],cl
  40d570:	data16 int3 
  40d572:	(bad)  
  40d573:	pusha  
  40d574:	out    0xf7,eax
  40d576:	inc    eax
  40d577:	and    BYTE PTR es:[edi-0x31293889],bl
  40d57e:	loopne 0x40d543
  40d580:	in     al,0x75
  40d582:	jp     0x40d56b
  40d584:	sbb    DWORD PTR [edx-0x66],ecx
  40d587:	bound  edx,QWORD PTR [ebx-0x20d0f889]
  40d58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d58f:	fcom   DWORD PTR [ecx]
  40d591:	outs   dx,DWORD PTR ds:[esi]
  40d592:	jge    0x40d59c
  40d594:	mov    dl,0x4c
  40d596:	lahf   
  40d597:	mov    ch,0xc2
  40d599:	xchg   esi,eax
  40d59a:	(bad)  
  40d59c:	popf   
  40d59d:	enter  0x6ab,0x94
  40d5a1:	popf   
  40d5a2:	xor    DWORD PTR [edx+eiz*1],ecx
  40d5a5:	pushf  
  40d5a6:	imul   ebx,DWORD PTR [ecx],0xffffffe4
  40d5a9:	pop    esp
  40d5aa:	xchg   esi,eax
  40d5ab:	and    eax,DWORD PTR [ebx-0x78]
  40d5ae:	cmp    ebx,ecx
  40d5b0:	mov    ah,0xbd
  40d5b2:	jb     0x40d5c2
  40d5b4:	sub    ebx,DWORD PTR [edi+0xb9185f0]
  40d5ba:	sbb    eax,DWORD PTR [esi-0x457f0f9e]
  40d5c0:	jb     0x40d5e0
  40d5c2:	loopne 0x40d5a4
  40d5c4:	xor    ebp,eax
  40d5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c7:	scas   eax,DWORD PTR es:[edi]
  40d5c8:	gs cmc 
  40d5ca:	popf   
  40d5cb:	test   BYTE PTR [ebx+0x332a213c],dl
  40d5d1:	jb     0x40d5d9
  40d5d3:	in     eax,dx
  40d5d4:	xchg   ecx,eax
  40d5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d6:	cmc    
  40d5d7:	mov    bl,0x9f
  40d5d9:	inc    edx
  40d5da:	aad    0x2b
  40d5dc:	cwde   
  40d5dd:	cmp    eax,0x9dc46dd2
  40d5e2:	push   esp
  40d5e3:	aaa    
  40d5e4:	aas    
  40d5e5:	test   DWORD PTR [edx],esi
  40d5e7:	xchg   DWORD PTR [ebp+0x3cb03d75],ebx
  40d5ed:	ds nop
  40d5ef:	test   BYTE PTR [edx],0xa5
  40d5f2:	mov    dh,0x41
  40d5f4:	dec    ebx
  40d5f5:	(bad)  
  40d5f6:	jmp    0x40d57b
  40d5f8:	jge    0x40d64f
  40d5fa:	add    DWORD PTR [eax-0x406f9dbb],ecx
  40d600:	and    DWORD PTR [edx-0x78],esp
  40d603:	push   0xb0e13c8a
  40d608:	jnp    0x40d5d3
  40d60a:	ins    DWORD PTR es:[edi],dx
  40d60b:	jnp    0x40d5b0
  40d60d:	jno    0x40d5c6
  40d60f:	(bad)  
  40d610:	cwde   
  40d611:	iret   
  40d612:	cmp    esp,DWORD PTR [ebx]
  40d614:	lock pusha 
  40d616:	xlat   BYTE PTR ds:[ebx]
  40d617:	sar    BYTE PTR [edx+0x4df8a938],1
  40d61d:	js     0x40d59f
  40d61f:	push   esi
  40d620:	push   eax
  40d621:	retf   0x42e0
  40d624:	sti    
  40d625:	daa    
  40d626:	or     eax,0x41c3eda
  40d62b:	daa    
  40d62c:	cs xchg esp,eax
  40d62e:	cmp    edx,DWORD PTR [esi-0x63]
  40d631:	js     0x40d695
  40d633:	and    ch,dh
  40d635:	and    eax,DWORD PTR [edi+0x2]
  40d638:	les    edi,FWORD PTR [edx+0x4d]
  40d63b:	and    BYTE PTR [ebp-0x14],bh
  40d63e:	mov    eax,ds:0xb8179525
  40d643:	sub    eax,0xebe99728
  40d648:	sbb    eax,0x35ef21c4
  40d64d:	inc    esp
  40d64e:	mov    dh,0xed
  40d650:	clc    
  40d651:	jecxz  0x40d63c
  40d653:	es mov ch,0xec
  40d656:	push   ebx
  40d657:	jp     0x40d624
  40d659:	outs   dx,DWORD PTR ds:[esi]
  40d65a:	data16 lods al,BYTE PTR ds:[esi]
  40d65c:	inc    edx
  40d65d:	imul   esp,ebp,0xffffffaf
  40d660:	inc    BYTE PTR [edx+0x11f0b1cc]
  40d666:	scas   al,BYTE PTR es:[edi]
  40d667:	sbb    BYTE PTR [ebp-0x198329d2],0x91
  40d66e:	and    DWORD PTR [eax-0x1a],ebp
  40d671:	int3   
  40d672:	loopne 0x40d6a9
  40d674:	icebp  
  40d675:	mov    dl,al
  40d677:	jno    0x40d68a
  40d679:	mov    ebp,0x8d629ff7
  40d67e:	jl     0x40d678
  40d680:	stos   BYTE PTR es:[edi],al
  40d681:	dec    ebp
  40d682:	dec    ebp
  40d683:	push   cs
  40d684:	out    0xb8,al
  40d686:	mov    bl,BYTE PTR [ebx-0x3c]
  40d689:	add    ch,bl
  40d68b:	push   esp
  40d68c:	mov    ds:0xe368d3f,al
  40d691:	and    eax,0x3b72eaed
  40d696:	sub    eax,0x787aa683
  40d69b:	or     DWORD PTR [edi+0x67],esp
  40d69e:	mov    bl,BYTE PTR [ebx+0x18]
  40d6a1:	push   DWORD PTR [edx+ebp*1+0x320ec9cc]
  40d6a8:	xor    eax,0x6541080e
  40d6ad:	in     al,0x60
  40d6af:	sbb    BYTE PTR [eax],al
  40d6b1:	in     al,0xfb
  40d6b3:	nop
  40d6b4:	inc    al
  40d6b6:	hlt    
  40d6b7:	or     BYTE PTR gs:[ebx+0x26],dl
  40d6bb:	mov    edi,0x53a743eb
  40d6c0:	hlt    
  40d6c1:	pop    esi
  40d6c2:	fucomi st,st(5)
  40d6c4:	repnz push edx
  40d6c6:	or     eax,0x6c9935c2
  40d6cb:	or     ecx,DWORD PTR [edi+0x1]
  40d6ce:	dec    esi
  40d6cf:	(bad)  
  40d6d0:	rol    DWORD PTR [edi+0x5e],cl
  40d6d3:	(bad)  
  40d6d4:	aaa    
  40d6d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d6:	pop    esi
  40d6d7:	shr    DWORD PTR [ebp+0x695dc69c],1
  40d6dd:	jmp    0x81e18a31
  40d6e2:	dec    esi
  40d6e3:	jecxz  0x40d733
  40d6e5:	adc    bh,0x5a
  40d6e8:	mov    ah,0x4c
  40d6ea:	loop   0x40d6cb
  40d6ec:	xchg   ecx,eax
  40d6ed:	cmp    al,0x86
  40d6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f0:	pop    ds
  40d6f1:	iret   
  40d6f2:	addr16 xchg edi,eax
  40d6f4:	sub    eax,0x610bac08
  40d6f9:	mov    al,0xe2
  40d6fb:	jl     0x40d74c
  40d6fd:	push   edi
  40d6fe:	mov    edi,0x6c9661a4
  40d703:	mov    gs,WORD PTR [ecx-0x29]
  40d706:	mov    al,ds:0xe77055c
  40d70b:	dec    esi
  40d70c:	nop
  40d70d:	fxch   st(4)
  40d70f:	pop    esi
  40d710:	sbb    esi,edi
  40d712:	clc    
  40d713:	adc    eax,0x4a5f6e15
  40d718:	pop    ecx
  40d719:	sahf   
  40d71a:	cwde   
  40d71b:	dec    ecx
  40d71c:	ds std 
  40d71e:	test   al,0x72
  40d720:	xchg   edi,eax
  40d721:	inc    esi
  40d722:	adc    al,0x7a
  40d724:	mov    bl,0xb
  40d726:	scas   eax,DWORD PTR es:[edi]
  40d727:	ss xchg esp,eax
  40d729:	arpl   WORD PTR [esi+0x6],si
  40d72c:	sub    DWORD PTR [edx+0x226fac31],esp
  40d732:	data16 fist DWORD PTR [esi+0xc]
  40d736:	add    dl,BYTE PTR [ebp-0xa]
  40d739:	cli    
  40d73a:	cmc    
  40d73b:	out    dx,eax
  40d73c:	test   eax,0x87f6c1bc
  40d741:	call   0x9356:0xcd57746c
  40d748:	inc    BYTE PTR [eax]
  40d74a:	retf   0x65fc
  40d74d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d74e:	inc    ecx
  40d74f:	mov    ecx,0x77f37ce8
  40d754:	out    0xa9,eax
  40d756:	dec    esp
  40d757:	push   ecx
  40d758:	inc    esp
  40d759:	inc    ecx
  40d75a:	ins    BYTE PTR es:[edi],dx
  40d75b:	pop    ecx
  40d75c:	or     eax,0xfb93ce90
  40d761:	xchg   esp,eax
  40d762:	(bad)  
  40d765:	fimul  DWORD PTR [eax+0x1f]
  40d768:	pop    edi
  40d769:	adc    BYTE PTR [ebp-0x5b],bl
  40d76c:	test   eax,0x2df02549
  40d771:	push   es
  40d772:	sub    edi,DWORD PTR [ebp-0x10cf3b08]
  40d778:	mov    eax,0xeef6d94e
  40d77d:	scas   eax,DWORD PTR es:[edi]
  40d77e:	jae    0x40d7c9
  40d780:	inc    ecx
  40d781:	mov    esp,0x7beea01f
  40d786:	mov    ebx,0x76a2ff4c
  40d78b:	adc    bl,BYTE PTR [ecx]
  40d78d:	jmp    0x31fd74ec
  40d792:	cmp    al,BYTE PTR [esi-0x61]
  40d795:	aad    0x1e
  40d797:	jns    0x40d720
  40d799:	call   0x9521:0xe2648049
  40d7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a1:	mov    cl,0x7b
  40d7a3:	repnz aam 0xf3
  40d7a6:	add    dl,dh
  40d7a8:	jnp    0x40d746
  40d7aa:	gs mov ah,0x77
  40d7ad:	fisttp DWORD PTR [esi]
  40d7af:	sbb    BYTE PTR [edx-0x2c],dh
  40d7b2:	or     ch,BYTE PTR [edi+0x7f5aa031]
  40d7b8:	xor    eax,0x2fcb44d
  40d7bd:	int    0x54
  40d7bf:	xor    BYTE PTR [edi+0x65],ch
  40d7c2:	dec    esi
  40d7c3:	mov    ebp,0xb2fbb612
  40d7c8:	sub    DWORD PTR [esi+0xb3e73bb],ecx
  40d7ce:	inc    esp
  40d7cf:	or     al,0xcf
  40d7d1:	mov    eax,0x60d54f04
  40d7d6:	int3   
  40d7d7:	fidivr WORD PTR [eax+0x6b]
  40d7da:	push   ss
  40d7db:	out    0xc,eax
  40d7dd:	sbb    al,0xf3
  40d7df:	int    0xe2
  40d7e1:	sub    DWORD PTR [edx],eax
  40d7e3:	icebp  
  40d7e4:	addr16 pop ebp
  40d7e6:	lock ret 
  40d7e8:	adc    DWORD PTR [esi],ebp
  40d7ea:	sbb    eax,0x4eb1b638
  40d7ef:	mov    esp,0x733d15a0
  40d7f4:	aaa    
  40d7f5:	add    edx,edx
  40d7f7:	dec    esp
  40d7f8:	in     eax,0x4d
  40d7fa:	pop    esi
  40d7fb:	mov    bh,0xdc
  40d7fd:	rol    DWORD PTR [ebp-0x30531540],1
  40d803:	xor    eax,0x948ee295
  40d808:	xor    esp,0xffffffdf
  40d80b:	arpl   WORD PTR [ebp+0x2bb19252],bx
  40d811:	inc    edx
  40d812:	add    al,0x3b
  40d814:	sbb    BYTE PTR [edx+0x38],0xf6
  40d818:	test   DWORD PTR [ebp+0x60],esp
  40d81b:	data16 and al,0x60
  40d81e:	mov    ch,0x97
  40d820:	mov    ds:0x7487a984,al
  40d825:	cmovl  ebp,DWORD PTR [edx+0x3a9c0493]
  40d82c:	xchg   edi,eax
  40d82d:	inc    edx
  40d82e:	(bad)  
  40d82f:	dec    ebp
  40d830:	add    ecx,DWORD PTR [ebp-0x7b]
  40d833:	cmp    BYTE PTR [edx-0x1afa7383],0xb6
  40d83a:	inc    ebx
  40d83b:	jmp    0x40d87d
  40d83d:	ret    
  40d83e:	jmp    0x40d7cb
  40d840:	or     esi,DWORD PTR [ebp-0xe]
  40d843:	sahf   
  40d844:	lock loop 0x40d7ce
  40d847:	test   bh,ch
  40d849:	in     al,0x7f
  40d84b:	push   eax
  40d84c:	jmp    0xf1f5:0x912c0104
  40d853:	sub    al,0x49
  40d855:	adc    BYTE PTR [ebp-0x7b],ch
  40d858:	xchg   edi,eax
  40d859:	cs or  al,0x46
  40d85c:	mov    bh,0x4f
  40d85e:	cmp    esp,DWORD PTR [ebx+0x60]
  40d861:	push   0x808295ac
  40d866:	imul   eax,DWORD PTR [eax+0x4b],0x4a82545e
  40d86d:	mov    ebx,0xb470c5a7
  40d872:	cli    
  40d873:	push   ds
  40d874:	sbb    ah,cl
  40d876:	push   esi
  40d877:	in     eax,0xfa
  40d879:	xchg   ebx,eax
  40d87a:	push   esp
  40d87b:	push   ss
  40d87c:	inc    esp
  40d87d:	lods   eax,DWORD PTR ds:[esi]
  40d87e:	ror    BYTE PTR [esi],0xa6
  40d881:	ror    BYTE PTR [edx+0x22a066cf],0x7e
  40d888:	mov    bl,0x26
  40d88a:	sub    ebx,DWORD PTR [esi]
  40d88c:	or     ecx,esp
  40d88e:	test   DWORD PTR [ecx-0x7035bc4],ebp
  40d894:	add    ch,dl
  40d896:	add    eax,0x9be4aff2
  40d89b:	xor    DWORD PTR [ebx+ebx*1-0x1f],edi
  40d89f:	ins    BYTE PTR es:[edi],dx
  40d8a0:	das    
  40d8a1:	sub    DWORD PTR [ecx+ecx*1-0x4c],esp
  40d8a5:	push   esi
  40d8a6:	imul   ebx,eax,0xb386cb97
  40d8ac:	fucom  st(7)
  40d8ae:	mov    ah,0x89
  40d8b0:	mov    dl,0x19
  40d8b2:	enter  0xbd72,0x2c
  40d8b6:	jecxz  0x40d845
  40d8b8:	mov    dl,0x8
  40d8ba:	ds mov edx,0x75ee66c5
  40d8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c1:	lea    ebp,[edi]
  40d8c3:	je     0x40d8d9
  40d8c5:	mov    ?,WORD PTR [ecx]
  40d8c7:	jno    0x40d887
  40d8c9:	cmp    edi,DWORD PTR [esi-0x59]
  40d8cc:	cmp    ebx,DWORD PTR [ecx-0x76]
  40d8cf:	scas   eax,DWORD PTR es:[edi]
  40d8d0:	or     edi,DWORD PTR [edx-0x3]
  40d8d3:	(bad)  
  40d8d4:	(bad)  
  40d8d5:	iret   
  40d8d6:	cld    
  40d8d7:	je     0x40d8de
  40d8d9:	pop    edx
  40d8da:	enter  0x5ce5,0x9b
  40d8de:	push   esp
  40d8df:	cmp    ah,ah
  40d8e1:	and    DWORD PTR [eax-0x36],ecx
  40d8e4:	jmp    0x40d880
  40d8e6:	xor    esi,DWORD PTR [edx-0x579676ee]
  40d8ec:	push   eax
  40d8ed:	ss cld 
  40d8ef:	das    
  40d8f0:	xchg   edi,eax
  40d8f1:	mov    dh,0x64
  40d8f3:	xchg   ebp,eax
  40d8f4:	jnp    0x40d92d
  40d8f6:	daa    
  40d8f7:	mov    esp,0x6ebed4f6
  40d8fc:	mov    dl,0xeb
  40d8fe:	aaa    
  40d8ff:	inc    eax
  40d900:	sbb    eax,0x49906c9a
  40d905:	repnz out dx,eax
  40d907:	sbb    al,0x68
  40d909:	test   BYTE PTR [edx],ah
  40d90b:	add    ah,BYTE PTR cs:[esi-0x54]
  40d90f:	xor    al,0x61
  40d911:	dec    esp
  40d912:	or     al,BYTE PTR [eax]
  40d914:	mov    eax,DWORD PTR [edx-0x5f]
  40d917:	fcom   DWORD PTR [esi+0x66728cdd]
  40d91d:	les    edi,FWORD PTR [esi+0x213025af]
  40d923:	add    eax,0xc7527819
  40d928:	lods   eax,DWORD PTR ds:[esi]
  40d929:	inc    eax
  40d92a:	out    dx,al
  40d92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d92c:	test   DWORD PTR [ebx+0x50],esp
  40d92f:	addr16 mov ds:0xed36,eax
  40d933:	mov    DWORD PTR [esp],esp
  40d936:	ret    0xa38e
  40d939:	mov    ds,WORD PTR [esi+0x57a3f800]
  40d93f:	test   BYTE PTR [ebx-0x14d1a7d8],ch
  40d945:	cmp    BYTE PTR [ebx],bh
  40d947:	xor    dl,BYTE PTR [edi+esi*2]
  40d94a:	(bad)  
  40d94b:	test   BYTE PTR [edx-0x5184d52d],0xc6
  40d952:	and    eax,0xb6f9a562
  40d957:	pop    es
  40d958:	xchg   esi,eax
  40d959:	mov    edi,0xfe1adca6
  40d95e:	popa   
  40d95f:	nop
  40d960:	sbb    eax,0xa5149b97
  40d965:	xchg   ecx,eax
  40d966:	jle    0x40d9a3
  40d968:	mov    esi,0xd60fe3bf
  40d96d:	mov    ch,0xec
  40d96f:	ds inc esp
  40d971:	dec    edx
  40d972:	fs test eax,0xc4c46aa4
  40d978:	nop
  40d979:	or     BYTE PTR [ebp+0x7d],ah
  40d97c:	ret    0xdd48
  40d97f:	fisttp QWORD PTR [ebx]
  40d981:	sahf   
  40d982:	xchg   edx,eax
  40d983:	sub    al,0xe8
  40d985:	out    0xfa,eax
  40d987:	test   BYTE PTR [eax-0x79],dl
  40d98a:	das    
  40d98b:	mov    al,0xdf
  40d98d:	(bad)
  40d991:	or     dl,BYTE PTR [eax-0x135107f7]
  40d997:	bound  ebp,QWORD PTR [ecx-0x87e2556]
  40d99d:	test   al,0x1d
  40d99f:	or     eax,0xd2105462
  40d9a4:	add    al,BYTE PTR [ebp+edx*4+0x62]
  40d9a8:	cmp    DWORD PTR [ebp+0x3a],edi
  40d9ab:	push   cs
  40d9ac:	or     ecx,edi
  40d9ae:	dec    ebp
  40d9af:	add    edx,DWORD PTR [ebp-0x6a]
  40d9b2:	dec    ebp
  40d9b3:	retf   
  40d9b4:	js     0x40d99b
  40d9b6:	jbe    0x40d9f4
  40d9b8:	mov    bl,0x5f
  40d9ba:	mov    dl,0xbf
  40d9bc:	push   ss
  40d9bd:	rcl    BYTE PTR [edx],cl
  40d9bf:	jo     0x40d9c5
  40d9c1:	fldcw  WORD PTR [ecx-0x46434205]
  40d9c7:	jmp    FWORD PTR [edi-0x44]
  40d9ca:	jg     0x40d99b
  40d9cc:	shr    BYTE PTR [esi+0x19],0xd5
  40d9d0:	fxch   st(4)
  40d9d2:	cmp    bh,BYTE PTR [ebp-0x3799df95]
  40d9d8:	imul   esi,DWORD PTR [edx+0x54fec23],0x79743819
  40d9e2:	pop    es
  40d9e3:	jl     0x40d984
  40d9e5:	push   ds
  40d9e6:	jmp    0xc6ca5107
  40d9eb:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d9ed:	es addr16 sti 
  40d9f0:	adc    DWORD PTR [ecx+0x5],esi
  40d9f3:	icebp  
  40d9f4:	pop    ebx
  40d9f5:	outs   dx,BYTE PTR ds:[esi]
  40d9f6:	dec    edi
  40d9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f8:	mov    ds:0x518498cb,al
  40d9fd:	icebp  
  40d9fe:	dec    esp
  40d9ff:	sub    eax,0x71593bf5
  40da04:	std    
  40da05:	lods   al,BYTE PTR ds:[esi]
  40da06:	push   ebp
  40da07:	mov    ecx,0x4cb6a4b9
  40da0c:	popf   
  40da0d:	(bad)  
  40da0e:	xor    bl,BYTE PTR [eax+0x2c]
  40da11:	mov    edx,0xfcaa780f
  40da16:	push   es
  40da17:	nop
  40da18:	cmp    BYTE PTR [ebp+edx*2+0x71a1d08a],bl
  40da1f:	outs   dx,DWORD PTR ds:[esi]
  40da20:	daa    
  40da21:	fsubr  QWORD PTR [ebp-0x32]
  40da24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da25:	daa    
  40da26:	clc    
  40da27:	rol    BYTE PTR [eax-0x33edfb4],1
  40da2d:	pop    ebx
  40da2e:	jnp    0x40d9de
  40da30:	xchg   esi,eax
  40da31:	stc    
  40da32:	loopne 0x40da03
  40da34:	sbb    eax,0x385823fe
  40da3a:	cld    
  40da3b:	ja     0x40d9df
  40da3d:	add    eax,0x30ce4e1d
  40da42:	(bad)  
  40da43:	ds nop
  40da45:	sahf   
  40da46:	jge    0x40da66
  40da48:	pop    ebx
  40da49:	mov    eax,0xe485f015
  40da4e:	shl    DWORD PTR [esi-0x2f],1
  40da51:	(bad)  
  40da52:	dec    ebx
  40da53:	out    0x66,eax
  40da55:	or     esp,DWORD PTR [edi+ebp*8+0xfc32f6]
  40da5c:	(bad)
  40da5f:	(bad)  
  40da60:	ds ret 0xbcea
  40da64:	out    dx,al
  40da65:	pop    eax
  40da66:	or     BYTE PTR [ebp+0x1781d7cf],bl
  40da6c:	enter  0x979c,0x47
  40da70:	(bad)  
  40da72:	lahf   
  40da73:	mov    bl,0xd4
  40da75:	pop    edi
  40da76:	inc    esi
  40da77:	pop    esp
  40da78:	repnz adc al,0x60
  40da7b:	aas    
  40da7c:	outs   dx,BYTE PTR ds:[esi]
  40da7d:	outs   dx,BYTE PTR ds:[esi]
  40da7e:	enter  0xb91c,0x42
  40da82:	mov    dl,0xa2
  40da84:	jp     0x40da2c
  40da86:	xchg   edx,eax
  40da87:	int    0xc7
  40da89:	stos   DWORD PTR es:[edi],eax
  40da8a:	fs gs pop edx
  40da8d:	push   esp
  40da8e:	std    
  40da8f:	adc    ebp,ebp
  40da91:	stc    
  40da92:	or     ebp,ebx
  40da94:	cmc    
  40da95:	fs das 
  40da97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da98:	fmul   QWORD PTR [ecx]
  40da9a:	sbb    eax,0xf12d5250
  40da9f:	pop    esp
  40daa0:	in     eax,0x6c
  40daa2:	int    0xc9
  40daa4:	adc    edi,esi
  40daa6:	popa   
  40daa7:	call   0xc1d5:0x99ffb6aa
  40daae:	sub    al,0xea
  40dab0:	mov    ebp,0x35ff3ce2
  40dab5:	mov    esi,0xb5016540
  40daba:	dec    ebp
  40dabb:	arpl   WORD PTR [eax-0x4c],si
  40dabe:	and    ecx,esi
  40dac0:	repnz adc esp,esi
  40dac3:	xor    eax,0x70ac2aba
  40dac8:	cmc    
  40dac9:	xchg   BYTE PTR [ebp+0x7bc1df97],al
  40dacf:	jmp    0x9e54c4d6
  40dad4:	add    al,0x34
  40dad6:	jg     0x40da77
  40dad8:	and    DWORD PTR [eax],edx
  40dada:	out    dx,eax
  40dadb:	xor    bx,WORD PTR [eax-0x7dcbeb05]
  40dae2:	push   cs
  40dae3:	mul    DWORD PTR [eax]
  40dae5:	(bad)  [edi]
  40dae7:	inc    ebp
  40dae8:	mov    ecx,0xce82c476
  40daed:	aas    
  40daee:	and    eax,0xd0cd1402
  40daf3:	test   eax,0xdb3fd0cd
  40daf8:	ins    DWORD PTR es:[edi],dx
  40daf9:	xor    ch,BYTE PTR [ecx]
  40dafb:	inc    ebx
  40dafc:	aas    
  40dafd:	mov    eax,ds:0xbfeabfc7
  40db02:	fucomi st,st(1)
  40db04:	sti    
  40db05:	icebp  
  40db06:	pop    ebx
  40db07:	retf   0xd86e
  40db0a:	dec    ecx
  40db0b:	inc    esi
  40db0c:	lea    ecx,[ebx-0x58]
  40db0f:	and    esp,DWORD PTR [edi-0x59aa484e]
  40db15:	xor    al,0x2d
  40db17:	imul   esi,DWORD PTR ds:0xd088c99b,0x403cd911
  40db21:	or     ah,BYTE PTR [ebp+ebp*4-0x4122014a]
  40db28:	outs   dx,BYTE PTR ds:[esi]
  40db29:	sub    BYTE PTR ds:0x8b397251,dh
  40db2f:	icebp  
  40db30:	mov    eax,ds:0xe2b077b6
  40db35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db36:	mov    edi,0x4b44663f
  40db3b:	xor    al,0xe9
  40db3d:	xchg   ecx,eax
  40db3e:	(bad)  
  40db3f:	call   FWORD PTR [ebp-0x5]
  40db42:	push   cs
  40db43:	inc    esp
  40db44:	pop    ebp
  40db45:	test   BYTE PTR [eax],dh
  40db47:	jle    0x40dbc2
  40db49:	jno    0x40daff
  40db4b:	mov    DWORD PTR [edx+0x55],eax
  40db4e:	push   edx
  40db4f:	mov    ah,0x63
  40db51:	(bad)  
  40db52:	xchg   esp,eax
  40db53:	ffreep st(7)
  40db55:	sahf   
  40db56:	enter  0xb15e,0x24
  40db5a:	adc    ebp,DWORD PTR [esi-0x25]
  40db5d:	or     ch,BYTE PTR ds:0x6a781573
  40db63:	ja     0x40db7b
  40db65:	adc    bl,BYTE PTR [eax+0x54]
  40db68:	adc    BYTE PTR ds:0x3f6f4e53,dh
  40db6e:	cmp    eax,0x26dba687
  40db73:	mov    esp,0x7226012d
  40db78:	and    al,0x8b
  40db7a:	in     eax,0xb
  40db7c:	pop    es
  40db7d:	stos   WORD PTR es:[edi],ax
  40db7f:	scas   eax,DWORD PTR es:[edi]
  40db80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db81:	xchg   ebp,eax
  40db82:	push   0x3a
  40db84:	jmp    0xda9a:0x68b80541
  40db8b:	xor    esp,DWORD PTR [esi]
  40db8d:	fs popa 
  40db8f:	ret    0x7642
  40db92:	push   edx
  40db93:	push   eax
  40db94:	cld    
  40db95:	sbb    esi,DWORD PTR [ebx-0x4eaa3c6b]
  40db9b:	jo     0x40db8a
  40db9d:	in     al,dx
  40db9e:	loop   0x40dbd2
  40dba0:	pop    ebx
  40dba1:	sbb    DWORD PTR [ebx-0x3162d91],ebp
  40dba7:	outs   dx,BYTE PTR ds:[esi]
  40dba8:	adc    edi,edx
  40dbaa:	ret    
  40dbab:	ret    
  40dbac:	cmp    DWORD PTR ds:0xccafc223,esi
  40dbb2:	adc    edi,edi
  40dbb4:	and    BYTE PTR [esi-0x32],ch
  40dbb7:	sbb    ecx,DWORD PTR [ecx-0x4b513c43]
  40dbbd:	jg     0x40dc0d
  40dbbf:	cmp    dh,BYTE PTR [eax]
  40dbc1:	cmp    edx,esi
  40dbc3:	shl    DWORD PTR [ebp+0xfcf523d],0x7b
  40dbca:	dec    ecx
  40dbcb:	mov    ah,BYTE PTR [esi+0x42dbe294]
  40dbd1:	sbb    edi,DWORD PTR [edx+0x7c]
  40dbd4:	icebp  
  40dbd5:	cmp    esi,DWORD PTR [ebp-0x2530ec6d]
  40dbdb:	add    al,0x81
  40dbdd:	cmp    ebx,DWORD PTR [edi+0x6fc99018]
  40dbe3:	xor    esp,DWORD PTR [edx+0x52]
  40dbe6:	push   edi
  40dbe7:	fs push 0xffffff82
  40dbea:	test   ch,ch
  40dbec:	repnz mov dl,bh
  40dbef:	pop    ds
  40dbf0:	shl    BYTE PTR [ecx+0x1d69f7ab],1
  40dbf6:	lds    edi,FWORD PTR [ebp-0x1]
  40dbf9:	mov    ah,0x89
  40dbfb:	das    
  40dbfc:	jno    0x40db9e
  40dbfe:	jns    0x40dbdd
  40dc00:	imul   edx,ebx,0x7f80509b
  40dc06:	push   cs
  40dc07:	cmc    
  40dc08:	inc    edx
  40dc09:	data16 out dx,al
  40dc0b:	and    ebp,esi
  40dc0d:	dec    ebp
  40dc0e:	cmp    eax,0x8adf11ec
  40dc13:	pop    ds
  40dc14:	retf   
  40dc15:	mov    ebp,0xe7b4e18
  40dc1a:	rcl    ebx,0xd2
  40dc1d:	push   esp
  40dc1e:	hlt    
  40dc1f:	adc    eax,0xe43950da
  40dc24:	mov    esi,0x4f5f7ba5
  40dc29:	sub    esp,edi
  40dc2b:	jne    0x40dc25
  40dc2d:	and    DWORD PTR [eax-0x49],edi
  40dc30:	dec    ebp
  40dc31:	test   eax,esi
  40dc33:	(bad)  
  40dc35:	cs (bad) 
  40dc37:	sub    esp,DWORD PTR [eax-0x69]
  40dc3a:	cdq    
  40dc3b:	test   BYTE PTR [esi-0x32],al
  40dc3e:	adc    eax,0xd0e29434
  40dc43:	and    al,BYTE PTR [ebx+ebp*2-0x64536ef1]
  40dc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc4b:	sub    al,0x62
  40dc4d:	adc    eax,DWORD PTR [ecx]
  40dc4f:	fldln2 
  40dc51:	in     al,0x94
  40dc53:	sbb    DWORD PTR [ecx-0x4c],ecx
  40dc56:	add    al,0x3e
  40dc58:	pop    esi
  40dc59:	in     eax,0xff
  40dc5b:	or     ebx,esi
  40dc5d:	scas   eax,DWORD PTR es:[edi]
  40dc5e:	es xchg ebp,eax
  40dc60:	pusha  
  40dc61:	fidiv  DWORD PTR [ecx-0x357066c2]
  40dc67:	inc    eax
  40dc68:	ret    
  40dc69:	mov    ds:0x3ae373ec,al
  40dc6e:	mov    eax,ds:0x6a3fd3d7
  40dc73:	jb     0x40dc55
  40dc75:	cmp    eax,DWORD PTR [edx]
  40dc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc78:	push   ecx
  40dc79:	call   0x55b63713
  40dc7e:	ds pop ss
  40dc80:	push   0x4d933e27
  40dc85:	xchg   edi,eax
  40dc86:	stos   BYTE PTR es:[edi],al
  40dc87:	or     eax,0x4dd99a40
  40dc8c:	gs fcom st(7)
  40dc8f:	add    bh,BYTE PTR [eax+ecx*1]
  40dc92:	pop    ebx
  40dc93:	pop    es
  40dc94:	dec    edx
  40dc95:	mov    dh,0xa1
  40dc97:	dec    ebp
  40dc98:	lock lahf 
  40dc9a:	shr    DWORD PTR [edi],1
  40dc9c:	call   DWORD PTR cs:[ebx-0x39]
  40dca0:	cmp    DWORD PTR [edi+0x11],ecx
  40dca3:	rcl    DWORD PTR [ebx+ebx*8+0x45958b42],cl
  40dcaa:	fstp   TBYTE PTR [edi+0x27]
  40dcad:	jae    0x40dc2f
  40dcaf:	or     esp,DWORD PTR [eax]
  40dcb1:	test   al,0x57
  40dcb3:	push   0x51cff192
  40dcb8:	add    al,al
  40dcba:	and    ebp,DWORD PTR [ecx]
  40dcbc:	outs   dx,DWORD PTR ds:[esi]
  40dcbd:	adc    ah,ch
  40dcbf:	lds    ebp,FWORD PTR [edi+0x74]
  40dcc2:	repz push eax
  40dcc4:	cmp    esp,DWORD PTR [ecx+eax*4]
  40dcc7:	pop    eax
  40dcc8:	xor    DWORD PTR [ecx],edx
  40dcca:	test   ecx,ebx
  40dccc:	hlt    
  40dccd:	pop    edi
  40dcce:	loopne 0x40dcf9
  40dcd0:	ror    edx,0xaf
  40dcd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcd4:	mov    BYTE PTR [edi-0x1d],0x7d
  40dcd8:	push   ebx
  40dcd9:	jl     0x40dcc0
  40dcdb:	fadd   QWORD PTR [esp+ebp*8-0x59e33253]
  40dce2:	cwde   
  40dce3:	std    
  40dce4:	(bad)  
  40dce5:	adc    ah,ah
  40dce7:	push   0xae0d31f7
  40dcec:	fsubr  QWORD PTR [esi-0x3b642aea]
  40dcf2:	ret    0xadb1
  40dcf5:	inc    edx
  40dcf6:	sub    DWORD PTR ds:0x6b84c0de,ebp
  40dcfc:	adc    BYTE PTR [edx],bh
  40dcfe:	ret    0xc2fa
  40dd01:	ss pop ecx
  40dd03:	daa    
  40dd04:	add    al,0xca
  40dd06:	into   
  40dd07:	cdq    
  40dd08:	cmp    BYTE PTR ds:0x6be1bf52,al
  40dd0e:	mov    eax,ds:0x2616f48b
  40dd13:	mov    edi,0xe2e1e6a8
  40dd18:	out    0xbc,al
  40dd1a:	mov    esi,0x21b888a7
  40dd1f:	cmc    
  40dd20:	pop    ebx
  40dd21:	push   ebx
  40dd22:	nop    DWORD PTR [ebx+ebx*8-0x3ce197e3]
  40dd2a:	and    eax,DWORD PTR [esi+0x52]
  40dd2d:	loopne 0x40dd6f
  40dd2f:	inc    ebp
  40dd30:	test   BYTE PTR [edx],dl
  40dd32:	add    bl,0x49
  40dd35:	and    dl,dh
  40dd37:	mov    cl,0x4
  40dd39:	and    al,0x81
  40dd3b:	push   esp
  40dd3c:	ss add al,0x4b
  40dd40:	mov    dl,BYTE PTR [ebx+eiz*1]
  40dd43:	inc    esi
  40dd44:	ins    DWORD PTR es:[edi],dx
  40dd45:	adc    al,0x8
  40dd47:	shr    BYTE PTR [edi+0x37],0xc7
  40dd4b:	sbb    eax,0x76a6fd1a
  40dd50:	mov    bl,0xf9
  40dd52:	push   si
  40dd54:	call   0xc39c4f1
  40dd59:	mov    ch,0xb2
  40dd5b:	out    0x26,eax
  40dd5d:	mov    eax,0xff8ba801
  40dd62:	jg     0x40ddc0
  40dd64:	imul   edi,DWORD PTR [eax-0x7],0x5e
  40dd68:	or     al,0x87
  40dd6a:	dec    ecx
  40dd6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6c:	adc    eax,edx
  40dd6e:	ins    BYTE PTR es:[edi],dx
  40dd6f:	add    esi,ebx
  40dd71:	mov    al,ds:0x9a6f0c8e
  40dd76:	sbb    eax,0x867c7497
  40dd7b:	fmul   QWORD PTR [ebp-0x3c]
  40dd7e:	and    ebp,DWORD PTR [eax-0xa43742c]
  40dd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd85:	mov    ebx,0x75a5082d
  40dd8a:	into   
  40dd8b:	stc    
  40dd8c:	jle    0x40ddfc
  40dd8e:	push   edi
  40dd8f:	dec    ebx
  40dd90:	adc    al,0xc8
  40dd92:	in     eax,dx
  40dd93:	ins    DWORD PTR es:[edi],dx
  40dd94:	jae    0x40ddb6
  40dd96:	test   DWORD PTR [edx+0x4f],eax
  40dd99:	sahf   
  40dd9a:	mov    cl,0x41
  40dd9c:	pop    ds
  40dd9d:	mov    esp,ds
  40dd9f:	jg     0x40ddbd
  40dda1:	mov    eax,ds:0x47132c75
  40dda6:	and    DWORD PTR [ecx+0x73],0x39bd8849
  40ddad:	cdq    
  40ddae:	(bad)  
  40ddaf:	jl     0x40dd45
  40ddb1:	aas    
  40ddb2:	test   al,0xe7
  40ddb4:	adc    bl,0x3b
  40ddb7:	inc    eax
  40ddb8:	cmp    BYTE PTR ds:0x246e7009,ah
  40ddbe:	clc    
  40ddbf:	test   DWORD PTR [esi-0x367e0151],eax
  40ddc5:	add    BYTE PTR [edx-0x1eb639a3],ah
  40ddcb:	push   esi
  40ddcc:	jl     0x40dd63
  40ddce:	and    edi,ebp
  40ddd0:	(bad)
  40ddd3:	jl     0x40ddbf
  40ddd5:	xchg   DWORD PTR [eax+esi*8+0x4ed76a96],edx
  40dddc:	xor    ebx,DWORD PTR [eax+ebp*8-0x3bd8f182]
  40dde3:	cmp    DWORD PTR [eax+0x8],edx
  40dde6:	call   0x78819523
  40ddeb:	jb     0x40de06
  40dded:	enter  0x5362,0xb7
  40ddf1:	addr16 (bad) 
  40ddf3:	pop    ss
  40ddf4:	push   ecx
  40ddf5:	rol    cl,1
  40ddf7:	idiv   eax
  40ddf9:	hlt    
  40ddfa:	addr16 pop eax
  40ddfc:	mov    edi,0x8c4fd550
  40de01:	sbb    ch,BYTE PTR [edi+ebp*8+0x50]
  40de05:	cli    
  40de06:	dec    ebx
  40de07:	add    al,0xe2
  40de09:	scas   al,BYTE PTR es:[edi]
  40de0a:	dec    ebp
  40de0b:	imul   ebp,DWORD PTR [ebx+0xb],0xc0ef7b77
  40de12:	inc    edx
  40de13:	or     DWORD PTR [eax],ecx
  40de15:	cmp    eax,0x8c1aef22
  40de1a:	inc    ecx
  40de1b:	int3   
  40de1c:	stc    
  40de1d:	jne    0x40ddf5
  40de1f:	inc    eax
  40de20:	lds    edi,FWORD PTR [edx+edx*1+0x44]
  40de24:	hlt    
  40de25:	sub    al,0xc1
  40de27:	fmulp  st(5),st
  40de29:	lods   eax,DWORD PTR ds:[esi]
  40de2a:	or     ecx,DWORD PTR [edi+0x2b]
  40de2d:	out    dx,al
  40de2e:	retf   0x2fe
  40de31:	bound  edi,QWORD PTR [ebx-0x31b54b96]
  40de37:	imul   ebx,DWORD PTR [esi+ebp*8+0x66a195b],0x43
  40de3f:	in     al,dx
  40de40:	xor    BYTE PTR [esi+edi*1],ch
  40de43:	mov    bh,0x2a
  40de45:	ret    
  40de46:	inc    edx
  40de47:	mov    eax,0x25954191
  40de4c:	fscale 
  40de4e:	pop    esp
  40de4f:	push   ds
  40de50:	sbb    eax,0x3bac4265
  40de55:	repz add al,0xf9
  40de58:	lds    esi,FWORD PTR [edx+0x65]
  40de5b:	pop    ss
  40de5c:	adc    ebp,DWORD PTR [edx+0xd5f9eb7]
  40de62:	addr16 adc al,bl
  40de65:	xchg   ebx,eax
  40de66:	mov    ds:0xf7301883,eax
  40de6b:	sbb    ebx,ecx
  40de6d:	push   esp
  40de6e:	sub    DWORD PTR [eax+0x3ec770c7],eax
  40de74:	cdq    
  40de75:	dec    esp
  40de76:	jne    0x40de6a
  40de78:	mov    eax,ds:0xdea2a543
  40de7d:	pop    ss
  40de7e:	add    esp,edi
  40de80:	jns    0x40de96
  40de82:	in     al,dx
  40de83:	ds xchg dl,dh
  40de86:	xchg   ebp,eax
  40de87:	or     ah,dh
  40de89:	mov    esi,0xf91147bf
  40de8e:	sbb    BYTE PTR [edi-0x68e2b53b],ch
  40de94:	push   ss
  40de95:	xor    ebx,DWORD PTR [ecx]
  40de97:	pop    ebx
  40de98:	fwait
  40de99:	xor    ecx,eax
  40de9b:	das    
  40de9c:	je     0x40de87
  40de9e:	cwde   
  40de9f:	ins    BYTE PTR es:[edi],dx
  40dea0:	dec    eax
  40dea1:	mov    bh,0x71
  40dea3:	mov    ds:0xdc7593eb,al
  40dea8:	adc    BYTE PTR [ecx+0x4d],bl
  40deab:	ins    DWORD PTR es:[edi],dx
  40deac:	inc    ebp
  40dead:	outs   dx,BYTE PTR ds:[esi]
  40deae:	xchg   ebp,eax
  40deaf:	lods   al,BYTE PTR ds:[esi]
  40deb0:	xchg   edi,eax
  40deb1:	enter  0x2d41,0xa4
  40deb5:	sub    al,0xc1
  40deb7:	bound  edi,QWORD PTR [eax-0x5fd27124]
  40debd:	xor    bl,cl
  40debf:	sbb    BYTE PTR [edx],bh
  40dec1:	je     0x40df31
  40dec3:	mov    dh,0x69
  40dec5:	div    DWORD PTR [eax-0x6]
  40dec8:	sbb    al,BYTE PTR [esi+0x7efcf6]
  40dece:	retf   0xae90
  40ded1:	or     eax,0x6164dc6c
  40ded6:	jb     0x40def5
  40ded8:	fmul   DWORD PTR [eax+0x5d40f993]
  40dede:	mov    ecx,DWORD PTR [edi+0x138c520]
  40dee4:	mov    dl,0x3c
  40dee6:	jb     0x40dee3
  40dee8:	mov    ch,0xa0
  40deea:	sub    eax,DWORD PTR [esi]
  40deec:	stc    
  40deed:	mov    ch,0xfb
  40deef:	xchg   ebx,eax
  40def0:	sbb    BYTE PTR [ebp-0x6c6e98ae],dl
  40def6:	sub    DWORD PTR [eax+0x2cec29c6],esp
  40defc:	push   es
  40defd:	shl    DWORD PTR [edi-0x3],0x85
  40df01:	mov    ebx,0x94ba1af
  40df06:	mov    ah,0x8f
  40df08:	xchg   edx,eax
  40df09:	stos   DWORD PTR es:[edi],eax
  40df0a:	xor    al,0xee
  40df0c:	arpl   bx,bp
  40df0e:	dec    eax
  40df0f:	xor    ch,BYTE PTR [ebx+0x14b30672]
  40df15:	jp     0x40deaa
  40df17:	jmp    0x40dec3
  40df19:	aad    0xd2
  40df1b:	cmp    eax,0xfe4b8bf0
  40df20:	jle    0x40df10
  40df22:	cmp    dl,BYTE PTR [esi]
  40df24:	inc    edi
  40df25:	xor    BYTE PTR [edx+0x707c3c3c],0x13
  40df2c:	cmp    edx,edi
  40df2e:	inc    ebp
  40df2f:	push   ds
  40df30:	ret    0x4820
  40df33:	fdiv   QWORD PTR [ebp+0x6d]
  40df36:	jne    0x40df6d
  40df38:	call   0xb8bdce90
  40df3d:	ins    BYTE PTR es:[edi],dx
  40df3e:	fstp   TBYTE PTR [esi+0x14e6c8af]
  40df44:	pop    esp
  40df45:	or     eax,0x596dc088
  40df4a:	jno    0x40dfa7
  40df4c:	ret    0xb4d7
  40df4f:	pop    edi
  40df50:	(bad)  
  40df51:	or     DWORD PTR [esi+ebp*2+0xbfd969e],ebp
  40df58:	fld    TBYTE PTR [esi-0x74a8e487]
  40df5e:	mov    bl,0x4a
  40df60:	and    bl,BYTE PTR [edi]
  40df62:	mov    DWORD PTR [edi+0x254b1c4e],edx
  40df68:	hlt    
  40df69:	jmp    0x917d:0x29f097c
  40df70:	in     eax,dx
  40df71:	int3   
  40df72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df73:	dec    edi
  40df74:	xor    eax,0x3cf4ed9b
  40df79:	mov    fs,ebx
  40df7b:	sub    ecx,ecx
  40df7d:	mov    al,ds:0x34ca54ca
  40df82:	mov    ebp,0xb3d98fa6
  40df87:	or     ebp,DWORD PTR [ecx-0x11]
  40df8a:	cmp    eax,0xd9009339
  40df8f:	sub    ecx,DWORD PTR [edi-0x24]
  40df92:	dec    eax
  40df93:	mov    eax,?
  40df95:	das    
  40df96:	gs xor al,0x50
  40df99:	cmp    BYTE PTR ds:0x43e3ccf2,bh
  40df9f:	(bad)  
  40dfa0:	xchg   ebx,eax
  40dfa1:	xlat   BYTE PTR ds:[ebx]
  40dfa2:	or     ebp,DWORD PTR [ecx]
  40dfa4:	ret    
  40dfa5:	pop    es
  40dfa6:	ret    0xec12
  40dfa9:	test   al,0x65
  40dfab:	jge    0x40e017
  40dfad:	or     BYTE PTR [eax-0x366a6064],cl
  40dfb3:	inc    esi
  40dfb4:	xlat   BYTE PTR ds:[ebx]
  40dfb5:	retf   
  40dfb6:	mov    BYTE PTR [ebp+ebx*4+0x3d20d119],cl
  40dfbd:	fs pusha 
  40dfbf:	xlat   BYTE PTR ds:[ebx]
  40dfc0:	push   ds
  40dfc1:	ins    BYTE PTR es:[edi],dx
  40dfc2:	mov    al,0x98
  40dfc4:	dec    ebp
  40dfc5:	mov    ecx,0x68500838
  40dfca:	loop   0x40df4f
  40dfcc:	jbe    0x40e015
  40dfce:	mov    esi,0x8f1dc358
  40dfd3:	mov    al,0x10
  40dfd5:	dec    ecx
  40dfd6:	je     0x40df9a
  40dfd8:	sbb    edi,DWORD PTR [eax-0x60]
  40dfdb:	adc    BYTE PTR [ecx],al
  40dfdd:	and    eax,0xa89577bc
  40dfe2:	leave  
  40dfe3:	pop    ds
  40dfe4:	dec    esp
  40dfe5:	adc    dh,BYTE PTR [ecx+0x5b936182]
  40dfeb:	add    al,0x81
  40dfed:	cs aas 
  40dfef:	push   ss
  40dff0:	jecxz  0x40e04b
  40dff2:	add    ebp,DWORD PTR [ebp+0x61f915f3]
  40dff8:	sbb    eax,0xeee342b3
  40dffd:	hlt    
  40dffe:	lods   eax,DWORD PTR ds:[esi]
  40dfff:	mov    al,0xdc
  40e001:	in     al,dx
  40e002:	loopne 0x40e06f
  40e004:	add    BYTE PTR [ebp-0x4b6f9700],cl
  40e00a:	push   ds
  40e00b:	mov    cl,0x78
  40e00d:	test   al,0x84
  40e00f:	das    
  40e010:	adc    esp,esp
  40e012:	or     ecx,DWORD PTR [edi+0xb]
  40e015:	jns    0x40e078
  40e017:	push   ds
  40e018:	fdivr  QWORD PTR [ebx]
  40e01a:	je     0x40e092
  40e01c:	inc    ebp
  40e01d:	mov    dl,0x7f
  40e01f:	aaa    
  40e020:	add    eax,0x3beefd3e
  40e025:	inc    ebp
  40e026:	dec    eax
  40e027:	into   
  40e028:	cwde   
  40e029:	(bad)  
  40e02a:	shl    BYTE PTR [esi],0x45
  40e02d:	sub    al,0x46
  40e02f:	xchg   ebp,eax
  40e030:	loopne 0x40e056
  40e032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e034:	pop    esi
  40e035:	test   eax,0xa4e478f6
  40e03a:	arpl   WORD PTR [esi],bp
  40e03c:	cmc    
  40e03d:	iret   
  40e03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e03f:	mov    ebx,0x59999af4
  40e044:	inc    ebx
  40e045:	xchg   ebx,eax
  40e046:	mov    esp,0xd93a4454
  40e04b:	das    
  40e04c:	pop    edx
  40e04d:	imul   eax,DWORD PTR [ecx-0x61c37eec],0x3d
  40e054:	(bad)  
  40e055:	fcmovnbe st,st(7)
  40e057:	jo     0x40e04b
  40e059:	sbb    esi,edi
  40e05b:	mov    bh,0xf2
  40e05d:	xor    ah,ch
  40e05f:	scas   al,BYTE PTR es:[edi]
  40e060:	push   ds
  40e061:	pop    eax
  40e062:	call   0x561c2b17
  40e067:	sbb    edi,esi
  40e069:	jle    0x40e080
  40e06b:	push   ecx
  40e06c:	push   ecx
  40e06d:	adc    eax,0xc79bfd22
  40e072:	sbb    al,al
  40e074:	rcr    BYTE PTR [edx],cl
  40e076:	xchg   edx,eax
  40e077:	add    cl,BYTE PTR [esi+eax*2-0x18c4c204]
  40e07e:	add    edx,esp
  40e080:	xchg   ebx,eax
  40e081:	jb     0x40e051
  40e083:	xchg   BYTE PTR [ebx-0x6d35ebc6],dl
  40e089:	and    ah,cl
  40e08b:	sbb    BYTE PTR [edx-0x45da8aa7],0xce
  40e092:	inc    ebx
  40e093:	lods   al,BYTE PTR ds:[esi]
  40e094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e095:	adc    ecx,ebx
  40e097:	xor    ecx,eax
  40e099:	mov    ah,0x2a
  40e09b:	scas   al,BYTE PTR es:[edi]
  40e09c:	mov    cl,0xbd
  40e09e:	cld    
  40e09f:	mov    al,ds:0xabef985b
  40e0a4:	cmovg  ecx,esi
  40e0a7:	sub    cl,dl
  40e0a9:	cmc    
  40e0aa:	in     eax,0xe2
  40e0ac:	add    eax,0xe2d63f4f
  40e0b1:	jge    0x40e062
  40e0b3:	xor    ch,bl
  40e0b5:	dec    ebp
  40e0b6:	pop    eax
  40e0b7:	xor    al,0x38
  40e0b9:	dec    eax
  40e0ba:	rcr    ch,0xc3
  40e0bd:	add    dh,BYTE PTR [ebx]
  40e0bf:	mov    al,ch
  40e0c1:	adc    al,0x50
  40e0c3:	lock in al,dx
  40e0c5:	daa    
  40e0c6:	sub    eax,0xb1d53662
  40e0cb:	retf   
  40e0cc:	stos   BYTE PTR es:[edi],al
  40e0cd:	and    ebp,DWORD PTR [ecx]
  40e0cf:	in     eax,0xae
  40e0d1:	hlt    
  40e0d2:	icebp  
  40e0d3:	add    eax,0x1341c608
  40e0d8:	and    DWORD PTR [ebp-0x9d65c29],0x645e7351
  40e0e2:	scas   al,BYTE PTR es:[edi]
  40e0e3:	adc    BYTE PTR [edi],dl
  40e0e5:	hlt    
  40e0e6:	fsubrp st(7),st
  40e0e8:	sbb    BYTE PTR [ecx],ch
  40e0ea:	pop    ebp
  40e0eb:	int    0x82
  40e0ed:	jp     0x40e0ec
  40e0ef:	lahf   
  40e0f0:	pop    ecx
  40e0f1:	fadd   st(7),st
  40e0f3:	outs   dx,DWORD PTR ds:[esi]
  40e0f4:	mov    ebp,0x31d9f6eb
  40e0f9:	lea    ecx,[eax+0x55]
  40e0fc:	mov    esi,DWORD PTR [ecx-0x31a93c9b]
  40e102:	aas    
  40e103:	mov    cl,0x7f
  40e105:	push   es
  40e106:	into   
  40e107:	dec    esp
  40e108:	lods   al,BYTE PTR ds:[esi]
  40e109:	mov    eax,0x149e2bb6
  40e10e:	adc    bl,bh
  40e110:	and    al,0xfd
  40e112:	inc    edx
  40e113:	adc    BYTE PTR [edi+0x71],0xd7
  40e117:	jbe    0x40e116
  40e119:	mov    ch,0x13
  40e11c:	shl    eax,1
  40e11e:	cmp    DWORD PTR [ebp-0x5a3925e7],esi
  40e124:	xchg   DWORD PTR [ebx-0x6d78caf4],eax
  40e12a:	jecxz  0x40e15d
  40e12c:	and    ah,dl
  40e12e:	mov    ebp,0xbffcd567
  40e134:	xchg   ebx,eax
  40e135:	cli    
  40e136:	sub    DWORD PTR [edi-0x18c3459f],ecx
  40e13c:	xchg   edi,eax
  40e13d:	mov    esi,0xc1e64c1b
  40e142:	xchg   ebp,eax
  40e143:	add    esi,DWORD PTR [ecx]
  40e145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e146:	sub    eax,0x62502898
  40e14b:	jae    0x40e1ac
  40e14d:	es mov ecx,0x42f3a6ad
  40e153:	leave  
  40e154:	iret   
  40e155:	or     al,0x4e
  40e157:	loop   0x40e183
  40e159:	addr16 cdq 
  40e15b:	cmp    eax,0xf96af52f
  40e160:	rcl    ebx,cl
  40e162:	scas   al,BYTE PTR es:[edi]
  40e163:	aad    0x41
  40e165:	rcl    DWORD PTR [esi+0x4fbfabd4],0xfc
  40e16c:	les    eax,FWORD PTR [ebp-0x45]
  40e16f:	mov    esi,0x66122447
  40e174:	pop    ds
  40e175:	push   ebx
  40e177:	fs mov eax,ebx
  40e17a:	into   
  40e17b:	(bad)  [ebp+0x3d]
  40e17e:	add    eax,0x71475170
  40e183:	dec    edi
  40e184:	popa   
  40e185:	stos   DWORD PTR es:[edi],eax
  40e186:	out    0x3d,eax
  40e188:	out    0xba,eax
  40e18a:	scas   eax,DWORD PTR es:[edi]
  40e18b:	(bad)  
  40e18c:	test   eax,0x11231830
  40e191:	aad    0x70
  40e193:	or     ebp,edi
  40e195:	imul   ecx,DWORD PTR [eax-0x63],0xaecea798
  40e19c:	repnz inc ebx
  40e19e:	or     ah,al
  40e1a0:	inc    eax
  40e1a1:	xor    ecx,0x1b
  40e1a4:	mov    eax,ds:0xbff3fc8a
  40e1a9:	jg     0x40e136
  40e1ab:	imul   ebp,DWORD PTR [edx-0x4a],0x72
  40e1af:	xchg   edi,eax
  40e1b0:	cmp    bp,WORD PTR [esi+edx*1-0x3d]
  40e1b5:	and    al,0xcb
  40e1b7:	nop
  40e1b8:	adc    eax,0xa4bda1d7
  40e1bd:	xchg   edx,eax
  40e1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1bf:	stos   BYTE PTR es:[edi],al
  40e1c0:	adc    eax,ecx
  40e1c2:	pop    eax
  40e1c3:	fisttp WORD PTR [edx-0x361c3dd0]
  40e1c9:	sahf   
  40e1ca:	fld    DWORD PTR [ecx-0x49779cf9]
  40e1d0:	dec    esi
  40e1d1:	aam    0x44
  40e1d3:	mov    BYTE PTR [bp+0x56],ah
  40e1d7:	dec    ebx
  40e1d8:	mov    ebx,0xf58a1358
  40e1dd:	dec    esi
  40e1de:	inc    esp
  40e1df:	lea    ecx,[ebp+0x76]
  40e1e2:	mov    edx,0xe675bf44
  40e1e7:	add    BYTE PTR [eax],al
  40e1e9:	sub    al,BYTE PTR [ecx+ecx*8]
  40e1ec:	sahf   
  40e1ed:	mov    ecx,DWORD PTR [edi]
  40e1ef:	fcmovbe st,st(0)
  40e1f1:	jnp    0x40e21f
  40e1f3:	lock xchg DWORD PTR [esi-0x3eb97147],esp
  40e1fa:	pop    es
  40e1fb:	inc    edi
  40e1fc:	fs inc edi
  40e1fe:	cmp    dh,BYTE PTR [ecx+0x4be38f6f]
  40e204:	pop    esi
  40e205:	fdivr  st,st(2)
  40e207:	inc    ecx
  40e208:	jo     0x40e1c6
  40e20a:	sbb    DWORD PTR [esi-0x35494616],edi
  40e210:	push   cs
  40e211:	and    dh,BYTE PTR [ebx+0x4a]
  40e214:	and    ebx,DWORD PTR [ebx-0x1d]
  40e217:	mov    edi,DWORD PTR [esi+0x4f]
  40e21a:	inc    ebx
  40e21b:	mov    eax,ds:0x3710d17
  40e220:	mov    ebp,0x850044ef
  40e225:	(bad)  
  40e226:	call   DWORD PTR [ecx+0x3a2b1d3e]
  40e22c:	or     al,BYTE PTR [ebx+esi*8-0x4adbef08]
  40e233:	inc    esi
  40e234:	rcr    DWORD PTR [ebx-0x25],cl
  40e237:	fbld   TBYTE PTR [ebp+0xd]
  40e23a:	add    DWORD PTR [ecx+0x2],0x77
  40e23e:	in     eax,0xb5
  40e240:	jle    0x40e2a2
  40e242:	outs   dx,BYTE PTR ds:[esi]
  40e243:	pop    ds
  40e244:	push   ebx
  40e245:	cmp    dl,0xe5
  40e248:	out    dx,eax
  40e249:	pop    ebp
  40e24a:	aam    0x5e
  40e24c:	pop    ds
  40e24d:	dec    edi
  40e24e:	jl     0x40e2a4
  40e250:	shr    DWORD PTR [esi],1
  40e252:	inc    edx
  40e253:	fst    QWORD PTR [esi]
  40e255:	push   ebx
  40e256:	mov    ah,BYTE PTR [ecx-0x63]
  40e259:	out    dx,al
  40e25a:	loopne 0x40e2a8
  40e25c:	loope  0x40e23e
  40e25e:	cld    
  40e25f:	cmp    al,0x4e
  40e261:	pop    es
  40e262:	into   
  40e263:	les    ecx,FWORD PTR [eax+0x7242e8ff]
  40e269:	add    eax,0xf5e93bad
  40e26e:	sbb    BYTE PTR [edi+0x70fc2b3a],ch
  40e274:	sbb    al,bh
  40e276:	mov    bh,0xe
  40e278:	sbb    dl,BYTE PTR [edx]
  40e27a:	and    al,0x9c
  40e27c:	push   0x8e797ddb
  40e281:	cmp    esp,ecx
  40e283:	mov    edi,0xb287e567
  40e288:	pop    ds
  40e289:	dec    ecx
  40e28a:	and    edx,ebx
  40e28c:	mov    ds:0x46e381e0,al
  40e291:	or     BYTE PTR [esi+0x10908b94],0x70
  40e298:	fidivr WORD PTR [edi-0x6581ede8]
  40e29e:	xor    eax,0xf5fc80c5
  40e2a3:	pop    esp
  40e2a4:	icebp  
  40e2a5:	xchg   ebp,eax
  40e2a6:	or     DWORD PTR [edx+0x41738846],esi
  40e2ac:	jmp    0x5aa2:0x46c099ce
  40e2b3:	aad    0x4c
  40e2b5:	and    DWORD PTR [ebp-0x63],edx
  40e2b8:	push   eax
  40e2b9:	js     0x40e269
  40e2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2bc:	pushf  
  40e2bd:	lock (bad) 
  40e2bf:	fisttp WORD PTR [eax+0x411a5051]
  40e2c5:	xor    bl,BYTE PTR [ebx+0x814fb49]
  40e2cb:	cmp    edx,DWORD PTR [ebp+esi*2-0x1d]
  40e2cf:	pop    edi
  40e2d0:	or     BYTE PTR [edx+0x5],ah
  40e2d3:	out    dx,al
  40e2d4:	pop    ecx
  40e2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2d6:	or     DWORD PTR [ecx-0x3d78abe1],esp
  40e2dc:	(bad)  
  40e2dd:	aad    0x5
  40e2df:	scas   eax,DWORD PTR es:[edi]
  40e2e0:	call   0xf577:0xe113424f
  40e2e7:	sub    DWORD PTR [esi-0x1d6277ea],ecx
  40e2ed:	adc    DWORD PTR [eax+eax*4],esp
  40e2f0:	ja     0x40e2ed
  40e2f2:	xchg   esp,eax
  40e2f3:	outs   dx,DWORD PTR ds:[esi]
  40e2f4:	dec    ecx
  40e2f5:	(bad)  
  40e2f6:	xor    ah,BYTE PTR [esi+0x73]
  40e2f9:	jmp    0xda0986ca
  40e2fe:	and    al,cl
  40e300:	out    dx,eax
  40e301:	mov    DWORD PTR [edi],eax
  40e303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e304:	addr16 jp 0x40e291
  40e307:	add    ebx,DWORD PTR [eax-0x55]
  40e30a:	sub    esp,DWORD PTR [ebp-0x40a8740f]
  40e310:	sbb    al,0xd7
  40e312:	test   eax,0x469a4e74
  40e317:	fxch   st(5)
  40e319:	jecxz  0x40e2d6
  40e31b:	sbb    al,0xde
  40e31d:	push   edi
  40e31e:	fucompp 
  40e320:	xchg   ecx,eax
  40e321:	gs pop ds
  40e323:	and    eax,0xfc72064a
  40e328:	or     ebp,DWORD PTR [ecx+0x57]
  40e32b:	call   0x58feb701
  40e330:	int    0x2c
  40e332:	stos   DWORD PTR es:[edi],eax
  40e333:	push   ss
  40e334:	xchg   DWORD PTR [edi+0x70],edi
  40e337:	push   ecx
  40e338:	lods   eax,DWORD PTR ds:[esi]
  40e339:	or     eax,0x2cc136a4
  40e33e:	xchg   ebp,eax
  40e33f:	mov    dh,0xb0
  40e341:	scas   eax,DWORD PTR es:[edi]
  40e342:	xor    BYTE PTR [edi+0x66be88fb],ah
  40e348:	pop    es
  40e349:	mov    esp,0x534050ea
  40e34e:	loop   0x40e390
  40e350:	sar    BYTE PTR [eax+0x3cc4f3aa],1
  40e356:	mov    DWORD PTR [edx+edx*8-0x43b439a2],esp
  40e35d:	pop    ebp
  40e35e:	out    0x5,eax
  40e360:	cmp    BYTE PTR [ecx+0x716afea3],cl
  40e366:	(bad)  
  40e367:	cmp    BYTE PTR [edx],ah
  40e369:	mov    eax,0xc8389e23
  40e36e:	stos   DWORD PTR es:[edi],eax
  40e36f:	cs cli 
  40e371:	pop    DWORD PTR ds:[edx-0x69]
  40e375:	shl    DWORD PTR [eax-0x27],1
  40e378:	icebp  
  40e379:	int    0x78
  40e37b:	icebp  
  40e37c:	mov    edx,0x2d7c1c58
  40e381:	add    esp,DWORD PTR [edx+eiz*8]
  40e384:	pop    edi
  40e385:	in     eax,0xc6
  40e387:	stos   BYTE PTR es:[edi],al
  40e388:	jp     0x40e3e3
  40e38a:	sahf   
  40e38b:	cmp    al,0x6e
  40e38d:	imul   ecx,DWORD PTR [eax+0x2201a0e5],0x50
  40e394:	add    eax,0x12a55e1b
  40e399:	leave  
  40e39a:	mov    ds:0x9a60324d,al
  40e39f:	pop    esi
  40e3a0:	mov    dh,0x6e
  40e3a2:	or     DWORD PTR [ecx+eax*1-0x74d95daa],0x23
  40e3aa:	and    DWORD PTR [ebp-0x6e05a627],ebx
  40e3b0:	pop    edi
  40e3b1:	jmp    0x8c8990bc
  40e3b6:	mov    ds:0x218d9476,al
  40e3bb:	clc    
  40e3bc:	int3   
  40e3bd:	mov    al,0xcc
  40e3bf:	push   esp
  40e3c0:	dec    ebp
  40e3c1:	xchg   ebp,eax
  40e3c2:	push   cs
  40e3c3:	mov    dl,bl
  40e3c5:	sub    eax,0x21e879e
  40e3ca:	pop    es
  40e3cb:	mov    ebp,0x8f06b81b
  40e3d0:	and    BYTE PTR [eax-0x3ea6ba9b],al
  40e3d6:	scas   al,BYTE PTR es:[edi]
  40e3d7:	xor    esi,DWORD PTR [edi]
  40e3d9:	sbb    dl,0x50
  40e3dc:	xchg   DWORD PTR [esi-0xf5adb76],ebx
  40e3e2:	inc    edi
  40e3e3:	mov    bh,al
  40e3e5:	gs enter 0xd757,0x72
  40e3ea:	hlt    
  40e3eb:	outs   dx,DWORD PTR ds:[esi]
  40e3ec:	aad    0xf5
  40e3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3ef:	fcom   QWORD PTR [eax-0x2]
  40e3f2:	mov    ds:0x8f9718e1,eax
  40e3f7:	fldcw  WORD PTR [edi+0x6]
  40e3fa:	xchg   edi,eax
  40e3fb:	je     0x40e42d
  40e3fd:	(bad)  
  40e3fe:	cmp    al,0x97
  40e400:	pop    eax
  40e401:	mov    BYTE PTR [esi+0xb60b9d],cl
  40e407:	and    DWORD PTR [edx-0x63e4a6b8],esp
  40e40d:	jmp    0xc007:0x7a38cd6
  40e414:	(bad)  
  40e415:	enter  0x54eb,0x54
  40e419:	xor    al,al
  40e41b:	mov    ds:0x287e4328,eax
  40e420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e421:	and    al,0x25
  40e423:	inc    esp
  40e424:	mov    bh,0xd
  40e426:	mov    edi,0x22484e
  40e42b:	cmp    edx,ebx
  40e42d:	retf   0xa004
  40e430:	int    0x25
  40e432:	adc    DWORD PTR [eax],eax
  40e434:	mov    ah,BYTE PTR [edx-0x70]
  40e437:	cmp    eax,0x5153a037
  40e43c:	push   cs
  40e43d:	pop    edx
  40e43e:	adc    al,0xf4
  40e440:	mov    bh,0xf7
  40e442:	sbb    edi,DWORD PTR [edx+0x56be79bb]
  40e448:	sub    DWORD PTR [ebp-0x2a],eax
  40e44b:	retf   0x604a
  40e44e:	and    eax,0x12745a29
  40e453:	int3   
  40e454:	add    DWORD PTR [edx],ebx
  40e456:	xlat   BYTE PTR ss:[ebx]
  40e458:	sbb    eax,DWORD PTR [ecx]
  40e45a:	add    eax,0x8b379155
  40e45f:	inc    eax
  40e460:	dec    eax
  40e461:	mov    ch,0x97
  40e463:	push   ebx
  40e464:	loop   0x40e4da
  40e466:	dec    ebx
  40e467:	rcr    BYTE PTR [edx],1
  40e469:	sahf   
  40e46a:	xchg   ebx,eax
  40e46b:	mov    DWORD PTR [edx],0xf12db5fe
  40e471:	push   cs
  40e472:	imul   edi,ecx,0xffffffd5
  40e475:	pop    es
  40e476:	add    eax,ebp
  40e478:	sub    eax,0x919c13ed
  40e47d:	std    
  40e47e:	mov    BYTE PTR [esi],dl
  40e480:	xor    DWORD PTR [edx],edi
  40e482:	sub    eax,0x158bbcd7
  40e487:	dec    ebp
  40e488:	fcomip st,st(7)
  40e48a:	rol    BYTE PTR [ebx+0x1123a6b],0xd8
  40e491:	cmp    BYTE PTR [esi],ah
  40e493:	cli    
  40e494:	repnz ss stos BYTE PTR es:[edi],al
  40e497:	xor    DWORD PTR [eax-0x4957e445],ebp
  40e49d:	inc    esi
  40e49e:	lods   eax,DWORD PTR ds:[esi]
  40e49f:	adc    eax,0x472e1e66
  40e4a4:	mov    dl,0xa
  40e4a6:	retf   
  40e4a7:	xchg   esp,eax
  40e4a8:	add    ebx,0x49
  40e4ab:	mov    dl,0xef
  40e4ad:	cdq    
  40e4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4af:	pushf  
  40e4b0:	pop    es
  40e4b1:	fs push esi
  40e4b3:	push   ebp
  40e4b4:	dec    eax
  40e4b5:	dec    edx
  40e4b6:	sub    ch,cl
  40e4b8:	sbb    dl,BYTE PTR [esi]
  40e4ba:	loopne 0x40e4ca
  40e4bc:	jmp    0xad2:0x13bad86b
  40e4c3:	lahf   
  40e4c4:	cmp    BYTE PTR [edi+0x7f8d6edc],cl
  40e4ca:	inc    edi
  40e4cb:	xchg   ebx,eax
  40e4cc:	or     BYTE PTR [esi],cl
  40e4ce:	inc    edi
  40e4cf:	mov    al,0x74
  40e4d1:	mov    edx,0x23624625
  40e4d6:	jbe    0x40e4af
  40e4d8:	pop    es
  40e4d9:	pop    ebp
  40e4da:	inc    esi
  40e4db:	adc    eax,0xbd331ebb
  40e4e0:	add    ebx,DWORD PTR [esi+0x7977254e]
  40e4e6:	stos   BYTE PTR es:[edi],al
  40e4e7:	popf   
  40e4e8:	and    BYTE PTR [edx+0x978133c],bh
  40e4ee:	sub    BYTE PTR cs:[eax+0x31de8c00],ch
  40e4f5:	in     eax,0x1b
  40e4f7:	loopne 0x40e4b9
  40e4f9:	xchg   DWORD PTR [esp+eax*4],ebp
  40e4fc:	and    eax,DWORD PTR [ecx]
  40e4fe:	add    eax,0x14f35abd
  40e503:	cmp    eax,0xbd2ccbc8
  40e508:	sub    al,0x11
  40e50a:	jnp    0x40e4a0
  40e50c:	daa    
  40e50d:	cs jg  0x40e58f
  40e510:	sbb    eax,0x8d8429d7
  40e515:	cmp    bh,cl
  40e517:	stos   DWORD PTR es:[edi],eax
  40e518:	mov    edi,0x74f7f6da
  40e51d:	cli    
  40e51e:	(bad)  
  40e51f:	lods   eax,DWORD PTR ds:[esi]
  40e520:	repz push eax
  40e522:	push   cs
  40e523:	int3   
  40e524:	das    
  40e525:	call   0x9dab:0x518262cd
  40e52c:	inc    esp
  40e52d:	sbb    eax,0xba8414f
  40e532:	stos   BYTE PTR es:[edi],al
  40e533:	xchg   BYTE PTR [esi],al
  40e535:	aas    
  40e536:	and    al,BYTE PTR es:[ebx+0x5f9e05d7]
  40e53d:	adc    eax,0x6e4d745f
  40e542:	xchg   ebx,eax
  40e543:	and    esp,DWORD PTR [edx]
  40e545:	test   DWORD PTR [eax-0x7cb7a590],esp
  40e54b:	mov    WORD PTR [ebx],es
  40e54d:	ja     0x40e4d8
  40e54f:	mov    dh,0xb9
  40e551:	sub    al,BYTE PTR [ebx]
  40e553:	idiv   DWORD PTR [eax-0x54]
  40e556:	adc    eax,0xfdffd00b
  40e55b:	out    0x96,eax
  40e55d:	(bad)  
  40e55e:	fimul  DWORD PTR [ecx-0x7375a957]
  40e564:	jb     0x40e516
  40e566:	pusha  
  40e567:	clc    
  40e568:	bound  ebp,QWORD PTR [ebx+0x29]
  40e56b:	iret   
  40e56c:	push   ebx
  40e56d:	jne    0x40e50c
  40e56f:	push   0xffffffd1
  40e571:	sti    
  40e572:	iret   
  40e573:	push   ds
  40e574:	cs ins DWORD PTR es:[edi],dx
  40e576:	adc    BYTE PTR gs:[esi-0x14],cl
  40e57a:	aaa    
  40e57b:	imul   ecx,ebx,0x7c723f99
  40e581:	xlat   BYTE PTR ds:[ebx]
  40e582:	retf   
  40e583:	xchg   ebx,eax
  40e584:	fisub  WORD PTR [esi]
  40e586:	xor    bh,dl
  40e588:	ror    DWORD PTR [eax+0x3017aa4e],1
  40e58e:	retf   
  40e58f:	inc    esp
  40e590:	imul   ebp,edx,0x9c362f5d
  40e596:	mov    eax,ds:0xe69b9fa3
  40e59b:	fild   DWORD PTR [edi-0x19]
  40e59e:	and    al,0x45
  40e5a0:	fadd   QWORD PTR [esi]
  40e5a2:	(bad)  
  40e5a3:	and    DWORD PTR [eax+0x5b],esi
  40e5a6:	cmovbe eax,DWORD PTR [ebp+0x5bad76c5]
  40e5ad:	gs push esi
  40e5af:	test   cl,ah
  40e5b1:	sub    eax,0x6c51cfe5
  40e5b6:	or     al,0x89
  40e5b8:	out    0x9c,al
  40e5ba:	cmp    ecx,DWORD PTR [edx]
  40e5bc:	mov    esp,0xfa25222b
  40e5c1:	pop    ebx
  40e5c2:	or     al,0x33
  40e5c4:	sar    DWORD PTR [edx+0x4],1
  40e5c7:	inc    ebp
  40e5c8:	aaa    
  40e5c9:	or     cl,BYTE PTR [ecx+0x66]
  40e5cc:	cmc    
  40e5cd:	mov    cl,0x46
  40e5cf:	jecxz  0x40e601
  40e5d1:	adc    BYTE PTR [edx+0x2d],bh
  40e5d4:	xor    eax,0x23d22a18
  40e5d9:	dec    ecx
  40e5da:	lods   al,BYTE PTR ds:[esi]
  40e5db:	fisttp WORD PTR [eax]
  40e5dd:	push   ds
  40e5de:	push   ss
  40e5df:	data16 icebp 
  40e5e1:	push   edx
  40e5e2:	fisubr DWORD PTR [ebx+0x53ee7df3]
  40e5e8:	shr    BYTE PTR [ebx],1
  40e5ea:	into   
  40e5eb:	cwde   
  40e5ec:	lods   al,BYTE PTR ds:[esi]
  40e5ed:	rep outs dx,DWORD PTR ds:[esi]
  40e5ef:	sbb    DWORD PTR [ecx+0x120116d8],ebx
  40e5f5:	fmul   QWORD PTR [edi+0x108e3aa4]
  40e5fb:	les    ebx,FWORD PTR [ebx+0x4c]
  40e5fe:	lds    esi,FWORD PTR [ecx+0x1a68b098]
  40e604:	sub    dl,cl
  40e606:	and    eax,0xda5ff8b2
  40e60b:	jne    0x40e5e8
  40e60d:	mov    WORD PTR [ebx],?
  40e60f:	push   es
  40e610:	js     0x40e678
  40e612:	call   0xfb6f654d
  40e617:	(bad)  
  40e618:	push   ds
  40e619:	lahf   
  40e61a:	mov    ecx,0xf9a8a4af
  40e61f:	popfw  
  40e621:	(bad)  
  40e622:	stos   BYTE PTR es:[edi],al
  40e623:	stc    
  40e624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e625:	dec    ebx
  40e626:	adc    eax,ecx
  40e628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e629:	pop    edx
  40e62a:	inc    DWORD PTR [eax-0x59]
  40e62d:	jae    0x40e699
  40e62f:	pop    esi
  40e630:	and    eax,0x4a969bf5
  40e635:	cmp    bh,BYTE PTR [eax+esi*4]
  40e638:	jge    0x40e675
  40e63a:	sbb    edi,DWORD PTR [edx+edi*8]
  40e63d:	dec    eax
  40e63e:	push   esp
  40e63f:	mov    eax,ds:0x919e0be1
  40e644:	push   ss
  40e645:	xor    edx,edx
  40e647:	ins    BYTE PTR es:[edi],dx
  40e648:	call   0xa33c365c
  40e64d:	mov    al,0x42
  40e64f:	in     al,0x5f
  40e651:	mov    dl,0x5a
  40e653:	jno    0x40e606
  40e655:	sti    
  40e656:	pusha  
  40e657:	jb     0x40e638
  40e659:	test   eax,0x1172016d
  40e65e:	sar    eax,cl
  40e660:	mov    ?,WORD PTR [eax]
  40e662:	xor    BYTE PTR [ebx-0x1e],ah
  40e665:	test   al,0x3c
  40e667:	inc    ebx
  40e668:	popf   
  40e669:	push   ebp
  40e66a:	iret   
  40e66b:	mov    bh,0x1c
  40e66d:	lds    edx,FWORD PTR [ebp+0x50]
  40e670:	xchg   esi,eax
  40e671:	cmc    
  40e672:	add    DWORD PTR [ebp+0x485c79d3],ebx
  40e678:	adc    ebx,ebx
  40e67a:	lahf   
  40e67b:	inc    edi
  40e67c:	fwait
  40e67d:	xor    BYTE PTR [ebp-0x3834dfb8],dh
  40e683:	jae    0x40e6b5
  40e685:	lahf   
  40e686:	mov    cs,WORD PTR [eax+0x5ae8c24c]
  40e68c:	pop    ecx
  40e68d:	or     ecx,DWORD PTR [edi+0x7f32f9c6]
  40e693:	sahf   
  40e694:	cmp    DWORD PTR [ebp-0x1379623d],0x62
  40e69b:	sbb    BYTE PTR [eax+ebx*8+0x60143157],bl
  40e6a2:	ds aam 0xbb
  40e6a5:	inc    esp
  40e6a6:	cs inc eax
  40e6a8:	shl    ah,0x7
  40e6ab:	pop    ebp
  40e6ac:	jbe    0x40e657
  40e6ae:	jbe    0x40e726
  40e6b0:	fcom   st(7)
  40e6b2:	loope  0x40e63b
  40e6b4:	mov    dh,0xc9
  40e6b6:	adc    ah,BYTE PTR [esi-0x55e98cc4]
  40e6bc:	iret   
  40e6bd:	pop    es
  40e6be:	and    DWORD PTR [ebp+0x239462f7],eax
  40e6c4:	mov    bh,0x68
  40e6c6:	outs   dx,BYTE PTR ds:[esi]
  40e6c7:	fimul  DWORD PTR [ebx+edx*1-0x6c56e26a]
  40e6ce:	mov    ebp,DWORD PTR [esi+ecx*4]
  40e6d1:	dec    eax
  40e6d2:	nop
  40e6d3:	xchg   esi,eax
  40e6d4:	aad    0xeb
  40e6d6:	pop    es
  40e6d7:	sbb    BYTE PTR [edi+0x40],al
  40e6da:	sub    ah,BYTE PTR [esi+0x681b7fb9]
  40e6e0:	outs   dx,DWORD PTR ds:[esi]
  40e6e1:	sar    ecx,0x53
  40e6e4:	xor    BYTE PTR [ecx],bl
  40e6e6:	sar    esi,0xe3
  40e6e9:	sbb    ecx,DWORD PTR [edi]
  40e6eb:	mov    edx,0x7d83c47e
  40e6f0:	inc    ecx
  40e6f1:	jge    0x40e716
  40e6f3:	mov    bh,0x83
  40e6f5:	rcl    bl,1
  40e6f7:	inc    esi
  40e6f8:	jmp    0x40e700
  40e6fa:	stc    
  40e6fb:	stc    
  40e6fc:	adc    ebx,ebp
  40e6fe:	push   ebp
  40e6ff:	add    DWORD PTR [ecx-0x5c],edi
  40e702:	or     BYTE PTR [edx+eiz*1],0xcc
  40e706:	and    ah,BYTE PTR [ebp-0x55d97a45]
  40e70c:	mov    WORD PTR [edi],es
  40e70e:	sti    
  40e70f:	xchg   ecx,ebp
  40e711:	clc    
  40e712:	sub    dh,dh
  40e714:	mov    fs,WORD PTR [eax]
  40e716:	ret    0xa65
  40e719:	out    0x84,eax
  40e71b:	ins    BYTE PTR es:[edi],dx
  40e71c:	stos   BYTE PTR es:[edi],al
  40e71d:	sub    esp,DWORD PTR [eax*2+0x63fdf8d9]
  40e724:	daa    
  40e725:	mov    ds:0x7bb8c120,eax
  40e72a:	out    0xea,eax
  40e72c:	adc    DWORD PTR [edx+edx*2-0x9],edi
  40e730:	neg    BYTE PTR [eax+edx*1]
  40e733:	push   edi
  40e734:	shr    BYTE PTR [ebx-0x79],cl
  40e737:	popa   
  40e738:	inc    ecx
  40e739:	and    edi,ecx
  40e73b:	push   edi
  40e73c:	sub    al,0x1c
  40e73e:	pop    ebp
  40e73f:	push   esp
  40e740:	pop    esp
  40e741:	sbb    al,0x7a
  40e743:	jg     0x40e6d9
  40e745:	ret    0x3fed
  40e748:	mov    ebx,0x4cad4eb7
  40e74d:	or     dl,cl
  40e74f:	sbb    al,0xdb
  40e751:	sub    ax,0x1009
  40e755:	pop    esi
  40e756:	push   esp
  40e757:	adc    al,0xeb
  40e759:	out    0xef,eax
  40e75b:	dec    edx
  40e75c:	push   edi
  40e75d:	(bad)  
  40e75e:	sub    eax,ebx
  40e760:	dec    edx
  40e761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e762:	mov    ebx,DWORD PTR [ebp+0x32380bdd]
  40e768:	ja     0x40e7b8
  40e76a:	xlat   BYTE PTR ds:[ebx]
  40e76b:	ror    ebx,cl
  40e76d:	jge    0x40e75f
  40e76f:	cld    
  40e770:	xor    eax,0xb580f79
  40e775:	xchg   ecx,eax
  40e776:	rcl    cl,1
  40e778:	jle    0x40e738
  40e77a:	imul   eax,esi,0x69
  40e77d:	shl    BYTE PTR [ebx],cl
  40e77f:	xchg   BYTE PTR [esi+0x337f0c4a],bl
  40e785:	pop    ss
  40e786:	dec    edi
  40e787:	sbb    esp,DWORD PTR [ebx+0x1598dba7]
  40e78d:	leave  
  40e78e:	sub    al,0x31
  40e790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e791:	mov    fs,esi
  40e793:	dec    ebx
  40e794:	rcr    ebp,cl
  40e796:	mov    ah,0x3
  40e798:	jmp    0x40e770
  40e79a:	inc    edi
  40e79b:	test   BYTE PTR [eax-0x4e67c757],ch
  40e7a1:	fucomip st,st(7)
  40e7a3:	jmp    0x40e7d0
  40e7a5:	cmp    bh,al
  40e7a7:	sub    BYTE PTR [ebx+0x7460461c],dl
  40e7ad:	std    
  40e7ae:	outs   dx,DWORD PTR ds:[esi]
  40e7af:	aad    0x90
  40e7b1:	cmp    bl,BYTE PTR [esi]
  40e7b3:	cmp    eax,0x60e53eb2
  40e7b8:	push   esp
  40e7b9:	arpl   WORD PTR [ecx],cx
  40e7bb:	imul   eax,ecx,0xfffffff5
  40e7be:	jmp    0x40e7f3
  40e7c0:	adc    DWORD PTR fs:[ebx+0x6c],esp
  40e7c4:	ss scas eax,DWORD PTR es:[edi]
  40e7c6:	jno    0x40e815
  40e7c8:	mov    dl,0xfc
  40e7ca:	sub    eax,0xf7ed1a10
  40e7cf:	cli    
  40e7d0:	sbb    ebx,DWORD PTR [ecx]
  40e7d2:	xlat   BYTE PTR ds:[ebx]
  40e7d3:	add    BYTE PTR [edi+ebp*8+0x69],bl
  40e7d7:	pusha  
  40e7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d9:	sbb    eax,0x8a9299df
  40e7de:	mov    eax,0xd31f84c4
  40e7e3:	jp     0x40e813
  40e7e5:	mov    dh,0xac
  40e7e7:	popf   
  40e7e8:	test   eax,0x6c54e7de
  40e7ed:	arpl   WORD PTR [ecx],di
  40e7ef:	cmp    al,0x85
  40e7f1:	pop    ebx
  40e7f2:	jb     0x40e821
  40e7f4:	and    eax,0x1024f311
  40e7f9:	aad    0x77
  40e7fb:	retf   
  40e7fc:	fs sub eax,0xb04fc8a1
  40e802:	mov    ch,0x8f
  40e804:	cmova  ebx,DWORD PTR [ecx]
  40e807:	dec    edi
  40e808:	push   0xfffffff2
  40e80a:	pushf  
  40e80b:	or     cl,BYTE PTR [ecx]
  40e80d:	mov    ah,0x19
  40e80f:	and    eax,0x10dd12b7
  40e814:	mov    eax,edx
  40e816:	adc    dh,0x5b
  40e819:	(bad)  
  40e81a:	cli    
  40e81b:	xor    esi,DWORD PTR [edi+ebp*8+0x788075b4]
  40e822:	test   eax,0x455571cf
  40e827:	in     al,0x88
  40e829:	imul   ebp,DWORD PTR ss:[ebp-0x20],0xffffffe7
  40e82e:	test   BYTE PTR [edx-0x32],bh
  40e831:	popf   
  40e832:	add    eax,0x89c13c08
  40e837:	adc    eax,0x534d3bb
  40e83c:	cmp    al,0x36
  40e83e:	jp     0x40e80e
  40e840:	leave  
  40e841:	ret    0x345d
  40e844:	pop    ds
  40e845:	call   0x3f8f6d86
  40e84a:	ins    BYTE PTR es:[edi],dx
  40e84b:	les    edi,FWORD PTR [esi-0x3913092d]
  40e851:	and    ebp,DWORD PTR [edi-0x1]
  40e854:	dec    esp
  40e855:	cmp    ecx,ebx
  40e857:	dec    edx
  40e858:	mov    WORD PTR [eax-0x761d81d1],gs
  40e85e:	hlt    
  40e85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e860:	cdq    
  40e861:	dec    ebp
  40e862:	mov    edi,0x6f66bb7
  40e867:	xor    dl,BYTE PTR [ebx-0x5]
  40e86a:	or     DWORD PTR [edx],ecx
  40e86c:	sar    edx,cl
  40e86e:	mov    eax,ds:0x1a12f41b
  40e873:	pop    ebx
  40e874:	adc    BYTE PTR [eax-0x2],0x56
  40e878:	punpckhbw mm7,QWORD PTR [edx]
  40e87b:	(bad)  
  40e87c:	aam    0xa3
  40e87e:	jae    0x40e8ad
  40e880:	sub    esp,DWORD PTR cs:[edx-0x7e27055d]
  40e887:	ds add eax,0xddcdf614
  40e88d:	push   0xd1ceaeb1
  40e892:	pop    es
  40e893:	fwait
  40e894:	adc    al,0x78
  40e896:	int    0x25
  40e898:	(bad)  
  40e899:	gs lahf 
  40e89b:	ja     0x40e85e
  40e89d:	mov    dh,bh
  40e89f:	xor    esp,DWORD PTR [eax+0x59]
  40e8a2:	mov    edx,0x1c4b64c4
  40e8a7:	or     al,BYTE PTR [eax]
  40e8a9:	sub    DWORD PTR [esi-0x945bb4d],edi
  40e8af:	xchg   BYTE PTR [ebx],cl
  40e8b1:	test   al,0xf3
  40e8b3:	inc    ebx
  40e8b4:	push   ss
  40e8b5:	cs dec edx
  40e8b7:	fild   QWORD PTR [ebx+0x16]
  40e8ba:	aad    0x6
  40e8bc:	or     ebp,DWORD PTR [ebx+0x5458105c]
  40e8c2:	je     0x40e8fe
  40e8c4:	mov    cs,WORD PTR [ebx]
  40e8c6:	mov    ss,WORD PTR [ecx+0x70]
  40e8c9:	sub    DWORD PTR [esi+eax*1+0x7459fa82],0x9fcfaea2
  40e8d4:	cmp    BYTE PTR [ebx-0x3758e3ef],dl
  40e8da:	jl     0x40e88f
  40e8dc:	aam    0x62
  40e8de:	jbe    0x40e921
  40e8e0:	cli    
  40e8e1:	inc    edi
  40e8e2:	aam    0x7f
  40e8e4:	cmp    BYTE PTR [ebx],0x8b
  40e8e7:	or     eax,0x86a8b3d8
  40e8ec:	inc    edi
  40e8ed:	jae    0x40e898
  40e8ef:	je     0x40e8aa
  40e8f1:	je     0x40e90a
  40e8f3:	inc    edx
  40e8f4:	clc    
  40e8f5:	push   0x5c
  40e8f7:	cli    
  40e8f8:	je     0x40e8c5
  40e8fa:	pop    ss
  40e8fb:	lds    edi,FWORD PTR [ebp+0x3d]
  40e8fe:	cmp    DWORD PTR [ecx-0x35],edx
  40e901:	and    dh,dh
  40e903:	sub    cl,al
  40e905:	lock dec DWORD PTR es:[edx]
  40e909:	adc    cl,BYTE PTR [esi+edi*2+0x63]
  40e90d:	pop    ecx
  40e90f:	jo     0x40e938
  40e911:	stos   DWORD PTR es:[edi],eax
  40e912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e913:	or     al,0xd8
  40e915:	jp     0x40e92e
  40e917:	cwde   
  40e918:	mov    dl,0xba
  40e91a:	or     eax,DWORD PTR [ebp+0x13]
  40e91d:	push   eax
  40e91e:	shr    DWORD PTR [ebx-0x32],0x2f
  40e922:	xchg   edi,eax
  40e923:	pop    esp
  40e924:	jnp    0x40e911
  40e926:	mul    DWORD PTR [esi+ebp*2-0x56578d2f]
  40e92d:	add    DWORD PTR [ecx],ecx
  40e92f:	fwait
  40e930:	retf   0xf263
  40e933:	inc    esi
  40e934:	pop    edi
  40e935:	cdq    
  40e936:	fnstenv [edx+0x4a20a289]
  40e93c:	pop    ds
  40e93d:	nop
  40e93e:	out    0xad,al
  40e940:	pop    ds
  40e941:	les    eax,FWORD PTR [edx-0x65e70ade]
  40e947:	sub    al,dl
  40e949:	stos   DWORD PTR es:[edi],eax
  40e94a:	retf   0x6eff
  40e94d:	ja     0x40e91c
  40e94f:	pop    edx
  40e950:	add    bl,al
  40e952:	adc    edx,DWORD PTR [edi+0x2eee81c8]
  40e958:	mov    al,0xed
  40e95a:	or     BYTE PTR [edi-0x33],bh
  40e95d:	push   0xffffffb1
  40e95f:	xchg   edi,eax
  40e960:	xchg   ecx,eax
  40e961:	push   0xffffff96
  40e963:	out    dx,eax
  40e964:	lods   al,BYTE PTR ds:[esi]
  40e965:	xchg   esp,eax
  40e966:	xchg   ecx,eax
  40e967:	jnp    0x40e957
  40e969:	and    al,0xe1
  40e96b:	dec    esp
  40e96c:	add    cl,al
  40e96e:	pop    ss
  40e96f:	imul   ecx,esp,0x6618833b
  40e975:	jns    0x40e943
  40e977:	shl    bh,1
  40e979:	dec    edx
  40e97a:	dec    edx
  40e97b:	hlt    
  40e97c:	dec    ebp
  40e97d:	push   edi
  40e97e:	or     ebp,DWORD PTR [edx-0x63ab2e6f]
  40e984:	ds sysret 
  40e987:	fs pop ss
  40e989:	sbb    al,0x12
  40e98b:	jp     0x40e90e
  40e98d:	jne    0x40e986
  40e98f:	sub    ebp,0x5ac8dd18
  40e995:	leave  
  40e996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e997:	mov    dl,ch
  40e999:	push   ebp
  40e99a:	daa    
  40e99b:	sub    eax,0x34272be8
  40e9a0:	je     0x40e9c8
  40e9a2:	dec    eax
  40e9a3:	adc    DWORD PTR [esi+0x1c],esi
  40e9a6:	xchg   esi,eax
  40e9a7:	popa   
  40e9a8:	(bad)  
  40e9a9:	out    0xdd,eax
  40e9ab:	jne    0x40e9af
  40e9ad:	mov    al,ds:0x5d6fb3c6
  40e9b2:	outs   dx,DWORD PTR ds:[esi]
  40e9b3:	in     al,0xc1
  40e9b5:	outs   dx,BYTE PTR ds:[esi]
  40e9b6:	out    dx,eax
  40e9b7:	xor    BYTE PTR [ebx+0x2c9987fc],bl
  40e9bd:	in     al,dx
  40e9be:	dec    edi
  40e9bf:	sub    ah,BYTE PTR [edx]
  40e9c1:	icebp  
  40e9c2:	fwait
  40e9c3:	bound  esp,QWORD PTR [eax+0x55ac4612]
  40e9c9:	xor    ch,BYTE PTR [esi]
  40e9cb:	shr    DWORD PTR [ebx+0x29],1
  40e9ce:	mov    edi,0x6e42010c
  40e9d3:	push   es
  40e9d4:	pop    eax
  40e9d5:	sub    al,BYTE PTR [edx]
  40e9d7:	dec    ebp
  40e9d8:	addr16 inc ebx
  40e9da:	xchg   edi,eax
  40e9db:	dec    edx
  40e9dc:	in     al,0xb7
  40e9de:	cmp    al,BYTE PTR ds:0x46a29039
  40e9e4:	sub    eax,0x39233f27
  40e9e9:	dec    eax
  40e9ea:	mov    eax,0x4570e2bd
  40e9ef:	jmp    0x40ea6b
  40e9f1:	mov    eax,ds:0x210da367
  40e9f6:	sbb    esi,DWORD PTR [esi-0x67]
  40e9f9:	mov    al,0x3c
  40e9fb:	out    0x3e,al
  40e9fd:	dec    esp
  40e9fe:	clc    
  40e9ff:	mov    ch,cl
  40ea01:	mov    al,ds:0xdc4c1ea0
  40ea06:	clc    
  40ea07:	pop    ebx
  40ea08:	aaa    
  40ea09:	adc    DWORD PTR [edx*8-0x70d61e2a],esp
  40ea10:	call   0xc61f892b
  40ea15:	push   ebx
  40ea16:	pop    ss
  40ea17:	mov    ebp,0xe76ee016
  40ea1c:	mov    DWORD PTR [esi+0x10],edi
  40ea1f:	dec    edi
  40ea20:	mov    ch,0x47
  40ea22:	popa   
  40ea23:	sub    BYTE PTR [edx+0x4539d4df],cl
  40ea29:	add    al,0xfa
  40ea2b:	mov    ecx,0x4607ab8f
  40ea30:	jnp    0x40e9d5
  40ea32:	into   
  40ea33:	cld    
  40ea34:	repz inc eax
  40ea36:	mov    al,0x96
  40ea38:	fild   QWORD PTR [eax+0x46]
  40ea3b:	sahf   
  40ea3c:	xlat   BYTE PTR ds:[ebx]
  40ea3d:	sahf   
  40ea3e:	jecxz  0x40ea07
  40ea40:	cdq    
  40ea41:	cmp    ah,BYTE PTR [ebx]
  40ea43:	std    
  40ea44:	daa    
  40ea45:	sbb    al,0x8d
  40ea47:	xchg   edx,eax
  40ea48:	xchg   ebx,eax
  40ea49:	mov    esi,0x81fb316
  40ea4e:	jmp    0x4c3d090d
  40ea53:	push   ebp
  40ea54:	xchg   esi,eax
  40ea55:	adc    ch,0xa
  40ea58:	cmp    edx,esi
  40ea5a:	mov    WORD PTR [edi+eax*2-0x16937f7e],?
  40ea61:	pop    ebp
  40ea62:	enter  0x79f0,0x50
  40ea66:	mov    edx,0xfa7cfa3c
  40ea6b:	hlt    
  40ea6c:	clc    
  40ea6d:	pop    ds
  40ea6e:	pop    esp
  40ea6f:	lods   al,BYTE PTR ds:[esi]
  40ea70:	mov    BYTE PTR [edi-0xd29a6f2],bl
  40ea76:	push   0xb9d2217c
  40ea7b:	push   ss
  40ea7c:	lea    edi,[ecx]
  40ea7e:	fisubr DWORD PTR [edx]
  40ea80:	sub    esp,edi
  40ea82:	jae    0x40ea28
  40ea84:	dec    ecx
  40ea85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea86:	dec    ecx
  40ea87:	inc    ecx
  40ea88:	jge    0x40ea33
  40ea8a:	out    0xe8,al
  40ea8c:	jp     0x40eae3
  40ea8e:	xor    ecx,0xffffff93
  40ea91:	xchg   ecx,eax
  40ea92:	inc    eax
  40ea93:	sti    
  40ea94:	cmp    ebp,DWORD PTR [esi-0x79]
  40ea97:	inc    esi
  40ea98:	mov    BYTE PTR [esi-0x16],al
  40ea9b:	mov    bl,0x59
  40ea9d:	cmp    eax,DWORD PTR ds:0x958703c2
  40eaa3:	aas    
  40eaa4:	xchg   edx,eax
  40eaa5:	add    DWORD PTR [ebx],eax
  40eaa7:	jae    0x40eae6
  40eaa9:	jecxz  0x40eabb
  40eaab:	sti    
  40eaac:	inc    ecx
  40eaad:	jns    0x40ea78
  40eaaf:	shl    DWORD PTR [ebp+0x37951640],cl
  40eab5:	inc    esp
  40eab6:	bound  edi,QWORD PTR [esi-0x1b]
  40eab9:	xlat   BYTE PTR ds:[ebx]
  40eaba:	ret    
  40eabb:	dec    dh
  40eabd:	outs   dx,DWORD PTR ds:[esi]
  40eabe:	mov    dh,0xf
  40eac0:	mov    ebx,0x2493e09a
  40eac5:	and    al,BYTE PTR [eax+0x58]
  40eac8:	mov    esp,ecx
  40eaca:	pop    ebp
  40eacb:	dec    ebp
  40eacc:	mov    eax,ds:0x92d217d7
  40ead1:	inc    esp
  40ead2:	call   0xe406:0xf2470d9
  40ead9:	(bad)  
  40eada:	jecxz  0x40eb02
  40eadc:	mov    DWORD PTR [eax+0x2a],ebp
  40eadf:	lahf   
  40eae0:	stos   DWORD PTR es:[edi],eax
  40eae1:	push   es
  40eae2:	outs   dx,DWORD PTR ds:[esi]
  40eae3:	sub    eax,0xfb1530c8
  40eae8:	enter  0x8c,0x5b
  40eaec:	inc    ecx
  40eaed:	or     dl,BYTE PTR [esi]
  40eaef:	mov    eax,0xaa1eaf43
  40eaf4:	push   ebp
  40eaf5:	pop    esp
  40eaf6:	loop   0x40eab8
  40eaf8:	sub    cl,bh
  40eafa:	push   ss
  40eafb:	jbe    0x40eaa8
  40eafd:	jno    0x40eb71
  40eaff:	and    al,0x1b
  40eb01:	jbe    0x40eb3a
  40eb03:	cmp    al,0x85
  40eb05:	imul   ebp,DWORD PTR [ebx-0x3dc32edb],0xfffffffb
  40eb0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb0d:	mov    ebp,0xe27b9714
  40eb12:	push   ebp
  40eb13:	dec    edi
  40eb14:	retf   0x72ab
  40eb17:	(bad)  
  40eb18:	adc    edx,DWORD PTR ds:0x728d29ea
  40eb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb1f:	iret   
  40eb20:	fsubr  DWORD PTR [eax+0x5e]
  40eb23:	mov    edi,DWORD PTR [ecx]
  40eb25:	fwait
  40eb26:	call   0x64b6:0x77dc0aa9
  40eb2d:	dec    edx
  40eb2e:	cmp    al,0xdc
  40eb30:	xlat   BYTE PTR ds:[ebx]
  40eb31:	mov    esp,0xa507d975
  40eb36:	outs   dx,DWORD PTR ds:[esi]
  40eb37:	inc    edi
  40eb38:	jo     0x40eabc
  40eb3a:	and    BYTE PTR [eax+0x2948d122],dh
  40eb40:	das    
  40eb41:	aaa    
  40eb42:	rol    DWORD PTR [edx+ecx*4+0x75],cl
  40eb46:	cli    
  40eb47:	(bad)  
  40eb48:	sub    DWORD PTR [esi-0x55],esi
  40eb4b:	inc    ebp
  40eb4c:	js     0x40eaf1
  40eb4e:	or     DWORD PTR [ecx],edi
  40eb50:	stos   DWORD PTR es:[edi],eax
  40eb51:	fstp   TBYTE PTR [ebx+0x47]
  40eb54:	call   0xc094:0xf539abd8
  40eb5b:	push   0xcbb510a9
  40eb60:	dec    esp
  40eb61:	mov    ch,BYTE PTR [ecx+0x4bd56e2a]
  40eb67:	jle    0x40eb89
  40eb69:	rol    ax,1
  40eb6c:	int    0x1a
  40eb6e:	and    al,0xed
  40eb70:	jns    0x40ebec
  40eb72:	(bad)  
  40eb74:	and    esp,ebp
  40eb76:	jbe    0x40ebc0
  40eb78:	enter  0xe275,0xce
  40eb7c:	mov    edi,0x501c8a8c
  40eb81:	mov    al,0x6a
  40eb83:	cmp    eax,0x65da806d
  40eb88:	daa    
  40eb89:	psubusw mm2,QWORD PTR [ecx+0x692922bb]
  40eb90:	lock xchg edx,eax
  40eb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb93:	hlt    
  40eb94:	loope  0x40eb27
  40eb96:	push   esi
  40eb97:	mov    al,0x22
  40eb99:	xchg   ebx,eax
  40eb9a:	mov    dl,0x79
  40eb9c:	loopne 0x40eb26
  40eb9e:	jb     0x40eb6f
  40eba0:	xchg   edx,eax
  40eba1:	(bad)  
  40eba2:	aam    0x90
  40eba4:	adc    eax,0x3466bc2e
  40eba9:	dec    eax
  40ebaa:	es stc 
  40ebac:	push   es
  40ebad:	or     BYTE PTR [ecx],0x73
  40ebb0:	test   eax,0x12b19bab
  40ebb5:	xchg   ebp,eax
  40ebb7:	dec    DWORD PTR [ebp-0x44]
  40ebba:	addr16 push cs
  40ebbc:	cld    
  40ebbd:	and    al,0xf4
  40ebbf:	push   cs
  40ebc0:	cld    
  40ebc1:	sub    al,0xaf
  40ebc3:	jmp    0x40eb89
  40ebc5:	jo     0x40ebc2
  40ebc7:	or     ecx,ebx
  40ebc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebca:	add    eax,0xfb4ec749
  40ebcf:	dec    eax
  40ebd0:	push   0xffffffb9
  40ebd2:	out    dx,al
  40ebd3:	ja     0x40ec28
  40ebd5:	push   ecx
  40ebd6:	add    al,0x6
  40ebd8:	call   0xefd10d4a
  40ebdd:	and    ah,BYTE PTR [edx]
  40ebdf:	or     ah,0xe6
  40ebe2:	push   ebp
  40ebe3:	mov    ds:0x8011b763,al
  40ebe8:	daa    
  40ebe9:	std    
  40ebea:	add    bh,bl
  40ebec:	xor    al,BYTE PTR [edx+0x47f768fc]
  40ebf2:	int    0x6
  40ebf4:	and    ah,BYTE PTR [ebp-0x4]
  40ebf7:	cmp    eax,0x3bd4ec68
  40ebfc:	mov    ecx,DWORD PTR [esi]
  40ebfe:	mov    bh,0x13
  40ec00:	or     dl,BYTE PTR [ecx+ebx*1+0x6fa33c73]
  40ec07:	ins    DWORD PTR es:[edi],dx
  40ec08:	aaa    
  40ec09:	sbb    BYTE PTR [edx-0x7477cdce],bl
  40ec0f:	jo     0x40ec43
  40ec11:	sub    eax,esp
  40ec13:	xor    ah,cl
  40ec15:	push   ebp
  40ec16:	fninit 
  40ec18:	rcr    BYTE PTR [edx+eiz*1],1
  40ec1b:	sbb    eax,0x1b3636c4
  40ec20:	aas    
  40ec21:	(bad)  
  40ec22:	imul   ecx,DWORD PTR [ebx],0xffffff89
  40ec25:	and    al,0x7c
  40ec27:	ror    ebp,cl
  40ec29:	fild   DWORD PTR [edx]
  40ec2b:	iret   
  40ec2c:	mov    dh,0x9c
  40ec2e:	sub    eax,0xf1b7c5f8
  40ec33:	push   es
  40ec34:	mov    esp,0xdb1baa5e
  40ec39:	jns    0x40ec6d
  40ec3b:	loop   0x40ebc9
  40ec3d:	pop    ecx
  40ec3e:	dec    edx
  40ec3f:	push   esi
  40ec40:	sbb    ebp,esp
  40ec42:	es mov ecx,0x2a2896c6
  40ec48:	cmp    al,0x4d
  40ec4a:	addr16 pop ebx
  40ec4c:	push   0x1f
  40ec4e:	sub    al,0xa9
  40ec50:	imul   ebx,ebx,0xffffffc6
  40ec53:	addr16 jmp 0xf1b8:0xb1b76b00
  40ec5b:	test   eax,0x2a927dea
  40ec60:	jb     0x40ec65
  40ec62:	push   edx
  40ec63:	clc    
  40ec64:	in     eax,0x72
  40ec66:	mov    ebx,DWORD PTR [ecx]
  40ec68:	pmaddwd mm7,mm0
  40ec6b:	xor    ecx,edx
  40ec6d:	sbb    al,BYTE PTR [ebp-0x598a0500]
  40ec73:	gs or  ch,0x8
  40ec77:	sub    al,BYTE PTR [edx]
  40ec79:	mov    esi,0x95f6033a
  40ec7e:	test   eax,0x661de8d
  40ec83:	in     al,0xd3
  40ec85:	sbb    esi,DWORD PTR [edi]
  40ec87:	mov    WORD PTR [eax-0x6b],ds
  40ec8a:	cmc    
  40ec8b:	add    esi,eax
  40ec8d:	retf   
  40ec8e:	push   ss
  40ec8f:	add    BYTE PTR [edx-0x68a7de20],ch
  40ec95:	and    DWORD PTR [ebx+0x6e],esi
  40ec98:	dec    esi
  40ec99:	mov    dl,0x8c
  40ec9b:	sbb    al,0x11
  40ec9d:	mov    ah,0x7c
  40ec9f:	bound  ebx,QWORD PTR [ebp-0x2c]
  40eca2:	aaa    
  40eca3:	ficom  WORD PTR [ebx+edx*2-0x69b9369f]
  40ecaa:	imul   ebx,DWORD PTR [eax+0x264128df],0xfe2800
  40ecb4:	xor    DWORD PTR [ecx+0x72],0x868a29b1
  40ecbb:	out    dx,al
  40ecbc:	pop    edx
  40ecbd:	dec    esp
  40ecbe:	(bad)  
  40ecbf:	into   
  40ecc0:	mov    ch,0xaf
  40ecc2:	mov    edx,0x63295d00
  40ecc7:	cld    
  40ecc8:	mov    dl,0x2d
  40ecca:	push   edi
  40eccb:	and    al,0xd2
  40eccd:	cmc    
  40ecce:	dec    ebp
  40eccf:	jae    0x40ec9d
  40ecd1:	dec    esi
  40ecd2:	arpl   ax,ax
  40ecd4:	pop    edx
  40ecd5:	loopne 0x40ed23
  40ecd7:	nop
  40ecd8:	dec    ecx
  40ecd9:	jae    0x40ed26
  40ecdb:	xchg   ebp,eax
  40ecdc:	pop    esi
  40ecdd:	sbb    BYTE PTR [eax+eax*4+0x133741b2],0x33
  40ece5:	jl     0x40ed23
  40ece7:	add    edx,DWORD PTR [ebx+0x42d8c16f]
  40eced:	cs ja  0x40ed47
  40ecf0:	fs push 0xffffffaf
  40ecf3:	pop    eax
  40ecf4:	add    BYTE PTR [ebx],bl
  40ecf6:	push   ecx
  40ecf7:	pop    esp
  40ecf8:	arpl   WORD PTR ds:0xfee8d7db,dx
  40ecfe:	jecxz  0x40ecc9
  40ed00:	mov    esp,0xf2acdead
  40ed05:	nop
  40ed06:	mov    esi,0x3e7a15b6
  40ed0b:	mov    ch,0xcf
  40ed0d:	pop    ds
  40ed0e:	(bad)  
  40ed0f:	adc    BYTE PTR [eax-0x675dedef],dl
  40ed15:	imul   esi,DWORD PTR [ecx-0x58],0xb4b70540
  40ed1c:	test   DWORD PTR [esi+edi*8-0x4a],eax
  40ed20:	lahf   
  40ed21:	rol    DWORD PTR [edx],1
  40ed23:	push   ds
  40ed24:	dec    esp
  40ed25:	in     al,0x78
  40ed27:	or     esi,DWORD PTR [ebx]
  40ed29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed2a:	sbb    DWORD PTR [edi-0x2436c45f],0xffffffa1
  40ed31:	dec    ebx
  40ed32:	and    DWORD PTR [esi-0x33],esi
  40ed35:	push   0xffffffb8
  40ed37:	hlt    
  40ed38:	xchg   edi,eax
  40ed39:	or     al,0x57
  40ed3b:	shl    DWORD PTR [ebx],0xc
  40ed3e:	mov    dl,0x42
  40ed40:	push   0xffffff8d
  40ed42:	dec    ebp
  40ed43:	retf   
  40ed44:	fisttp WORD PTR [eax-0x78]
  40ed47:	arpl   bx,ax
  40ed49:	nop
  40ed4a:	push   es
  40ed4b:	xchg   edx,eax
  40ed4c:	lea    ebx,[ecx]
  40ed4e:	cmp    al,0x37
  40ed50:	test   eax,0x9b961536
  40ed55:	into   
  40ed56:	aas    
  40ed57:	scas   al,BYTE PTR es:[edi]
  40ed58:	mov    WORD PTR [edi-0x52],ds
  40ed5b:	or     DWORD PTR [edi+0x23b0d997],esi
  40ed61:	fs jle 0x40ed47
  40ed64:	add    eax,0x7fdd076f
  40ed69:	sbb    ecx,esi
  40ed6b:	fwait
  40ed6c:	lea    edx,[ebx+0x14329d0]
  40ed72:	mov    dh,0xf2
  40ed75:	cs adc al,0x73
  40ed78:	cmp    eax,0x3d111b76
  40ed7d:	fisubr DWORD PTR [ebp+0x7605b539]
  40ed83:	imul   edi,DWORD PTR [esi],0x4a
  40ed86:	ret    0xe743
  40ed89:	es (bad) 
  40ed8b:	in     eax,0x34
  40ed8d:	aas    
  40ed8e:	mov    esi,0xc372c76c
  40ed93:	jmp    0x40edc0
  40ed95:	(bad)
  40ed99:	test   BYTE PTR [edi],cl
  40ed9b:	into   
  40ed9c:	in     eax,dx
  40ed9d:	xchg   edx,eax
  40ed9e:	loope  0x40ed36
  40eda0:	clc    
  40eda1:	jno    0x40ed44
  40eda3:	mov    eax,0xd41b70d2
  40eda8:	lods   al,BYTE PTR ds:[esi]
  40eda9:	(bad)  
  40edaa:	aad    0x6
  40edac:	mov    ebx,DWORD PTR [ebp+0x1ca2ad7d]
  40edb2:	(bad)  
  40edb4:	out    0x2,eax
  40edb6:	lea    ebp,[esi]
  40edb8:	in     eax,0x7
  40edba:	icebp  
  40edbb:	sub    BYTE PTR [edi-0x28],ah
  40edbe:	pushf  
  40edbf:	out    0x40,eax
  40edc1:	gs or  ah,ah
  40edc4:	jecxz  0x40ed63
  40edc6:	dec    ecx
  40edc7:	retf   0x20d2
  40edca:	and    DWORD PTR [eax+esi*1],ebp
  40edcd:	pop    es
  40edce:	mov    esp,0x89a0ad3b
  40edd3:	mov    ebx,0xe34752ad
  40edd8:	xor    ch,BYTE PTR [esi]
  40edda:	add    edi,DWORD PTR [edx-0x7934f823]
  40ede0:	pop    ebx
  40ede1:	push   ss
  40ede2:	adc    BYTE PTR [esi+0x5b],dl
  40ede5:	rol    BYTE PTR [edi+0x73e2aa17],1
  40edeb:	mov    bl,ch
  40eded:	fidivr DWORD PTR [eax-0x7d]
  40edf0:	lea    esp,[eax+0x26]
  40edf3:	clc    
  40edf4:	outs   dx,BYTE PTR ds:[esi]
  40edf5:	pop    esp
  40edf6:	cmc    
  40edf7:	xchg   ah,cl
  40edf9:	push   ebp
  40edfa:	loope  0x40edd9
  40edfc:	xor    ah,cl
  40edfe:	scas   eax,DWORD PTR es:[edi]
  40edff:	jl     0x40ee30
  40ee01:	rcl    BYTE PTR [edx+0x2b20f2a7],cl
  40ee07:	sbb    cl,ah
  40ee09:	lea    ebp,[edx+0x1d]
  40ee0c:	sub    eax,0xea9e6766
  40ee11:	ja     0x40ee8c
  40ee13:	jg     0x40ed9a
  40ee15:	mov    cl,0x2
  40ee17:	aad    0x90
  40ee19:	pop    esp
  40ee1a:	mov    esp,0xbb410758
  40ee1f:	mov    bh,0x23
  40ee21:	loope  0x40ee95
  40ee23:	sub    cl,0xec
  40ee26:	fdiv   st(6),st
  40ee28:	adc    eax,0x8358dc6c
  40ee2d:	(bad)
  40ee30:	push   cs
  40ee31:	xor    BYTE PTR ds:0xd47f10b5,0x78
  40ee38:	cmc    
  40ee39:	adc    edx,DWORD PTR [ebp+0x75b01f2a]
  40ee3f:	add    BYTE PTR [ebp+0x52cd935d],dh
  40ee45:	ja     0x40ee68
  40ee47:	or     BYTE PTR es:[edi-0x47667295],dl
  40ee4e:	push   ecx
  40ee4f:	into   
  40ee50:	add    bh,BYTE PTR [eax+0x3e]
  40ee53:	dec    ebp
  40ee54:	mov    edi,0xca4cc410
  40ee59:	jno    0x40ee23
  40ee5b:	xor    ecx,edi
  40ee5d:	test   eax,0x158c1041
  40ee62:	neg    ebx
  40ee64:	jle    0x40eea7
  40ee66:	or     BYTE PTR [eax-0x42],dl
  40ee69:	push   edx
  40ee6a:	(bad)  
  40ee6b:	loopne 0x40ee37
  40ee6d:	in     eax,0x20
  40ee6f:	aaa    
  40ee70:	js     0x40ee9a
  40ee72:	cmp    BYTE PTR [edi-0x5f],dl
  40ee75:	pop    edi
  40ee76:	ss dec eax
  40ee78:	mov    gs,WORD PTR [ebx+0x8]
  40ee7b:	fistp  DWORD PTR [eax]
  40ee7d:	aaa    
  40ee7e:	mov    BYTE PTR [eax+0x10710bb7],dh
  40ee84:	adc    DWORD PTR [edx],ecx
  40ee86:	mov    al,0x85
  40ee88:	lea    esp,[ebp-0x13]
  40ee8b:	imul   ebx,DWORD PTR [ecx],0xffffffbf
  40ee8e:	je     0x40ee67
  40ee90:	dec    eax
  40ee91:	inc    ebp
  40ee92:	shr    dh,cl
  40ee94:	inc    esi
  40ee95:	jo     0x40eea9
  40ee97:	(bad)  
  40ee98:	xchg   ebp,eax
  40ee99:	inc    ecx
  40ee9a:	add    edi,esp
  40ee9c:	push   edi
  40ee9d:	pop    esi
  40ee9e:	pop    ebx
  40ee9f:	push   0xbbf92ebe
  40eea4:	jb     0x40eefc
  40eea6:	scas   al,BYTE PTR es:[edi]
  40eea7:	outs   dx,DWORD PTR ds:[esi]
  40eea8:	mov    bh,0xe8
  40eeaa:	jmp    0xb4aae031
  40eeaf:	cmp    BYTE PTR [ebx],ah
  40eeb1:	xchg   ebp,eax
  40eeb2:	xor    ebx,DWORD PTR [edi+0x75]
  40eeb5:	push   ss
  40eeb6:	js     0x40ee6a
  40eeb8:	and    DWORD PTR [edi],esp
  40eeba:	call   0xc59b:0xdf576da5
  40eec1:	dec    ecx
  40eec2:	pop    ecx
  40eec3:	pop    edx
  40eec4:	call   0xb79f:0xa389f6e6
  40eecb:	xor    al,0x1d
  40eecd:	inc    edx
  40eece:	test   BYTE PTR [esi+0x3cca7c60],dh
  40eed4:	leave  
  40eed5:	(bad)  
  40eed6:	retf   
  40eed7:	push   ss
  40eed8:	xchg   ebp,eax
  40eed9:	jmp    0x40eee6
  40eedb:	mov    BYTE PTR [edi-0x49],bl
  40eede:	out    dx,al
  40eedf:	add    al,0x24
  40eee1:	fst    QWORD PTR [edx]
  40eee3:	aaa    
  40eee4:	inc    edi
  40eee5:	outs   dx,DWORD PTR ds:[esi]
  40eee6:	or     edx,DWORD PTR [eax-0x54]
  40eee9:	mov    DWORD PTR [eax-0x4d4cc6cd],ecx
  40eeef:	sbb    al,0x6c
  40eef1:	xor    BYTE PTR [eax-0x1d],al
  40eef4:	sub    eax,0xdbbb173d
  40eef9:	int    0xd3
  40eefb:	aam    0xa9
  40eefd:	fadd   DWORD PTR [ecx]
  40eeff:	emms   
  40ef01:	jge    0x40ef00
  40ef03:	cld    
  40ef04:	lods   eax,DWORD PTR ds:[esi]
  40ef05:	sbb    ch,ah
  40ef07:	shr    DWORD PTR [edx+0xb0a6332],1
  40ef0d:	scas   eax,DWORD PTR es:[edi]
  40ef0e:	clc    
  40ef0f:	adc    BYTE PTR [eax-0x287854bd],al
  40ef15:	mov    bh,0xb9
  40ef17:	rcl    ebp,0xa2
  40ef1a:	push   ebp
  40ef1b:	mov    al,ds:0x23e893da
  40ef20:	les    esp,FWORD PTR [eax-0x60]
  40ef23:	shld   DWORD PTR [esi+0xce3eddd],ecx,cl
  40ef2a:	or     DWORD PTR ds:0x9345a629,esp
  40ef30:	jmp    0xc17dc256
  40ef35:	out    dx,al
  40ef36:	push   es
  40ef37:	jg     0x40ef47
  40ef39:	rcr    DWORD PTR [eax],1
  40ef3b:	sub    eax,DWORD PTR [ebx-0x663e7763]
  40ef41:	out    0xce,al
  40ef43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef44:	scas   eax,DWORD PTR es:[edi]
  40ef45:	mov    bl,0xf2
  40ef47:	pop    ds
  40ef48:	je     0x40eee4
  40ef4a:	push   cs
  40ef4b:	fdivr  st(5),st
  40ef4d:	jle    0x40eefd
  40ef4f:	push   esi
  40ef50:	inc    esp
  40ef51:	lods   al,BYTE PTR ds:[esi]
  40ef52:	sub    BYTE PTR [ebx],ah
  40ef54:	fs nop
  40ef56:	cmp    BYTE PTR [ecx+0x71203b4f],bl
  40ef5c:	pop    edi
  40ef5d:	mov    edi,0x412e6182
  40ef62:	cwde   
  40ef63:	shl    edx,cl
  40ef65:	stos   DWORD PTR es:[edi],eax
  40ef66:	or     ebp,edi
  40ef68:	mov    eax,ds:0x667ade3e
  40ef6d:	jmp    0x55270a4b
  40ef72:	int3   
  40ef73:	xchg   edx,eax
  40ef74:	leave  
  40ef75:	popa   
  40ef76:	sub    eax,0x29f3b0f1
  40ef7b:	rol    DWORD PTR [ecx-0x296638c],cl
  40ef81:	stc    
  40ef82:	retf   0xed32
  40ef85:	xor    DWORD PTR [edi+0x6f],ebx
  40ef88:	xchg   ecx,eax
  40ef89:	dec    ebx
  40ef8a:	fidiv  WORD PTR [ebx+0x56]
  40ef8d:	mov    esi,0xee56c585
  40ef92:	sub    esp,esp
  40ef94:	sbb    DWORD PTR [ebp-0x48c820c2],0x24
  40ef9b:	das    
  40ef9c:	lods   eax,DWORD PTR ds:[esi]
  40ef9d:	ins    BYTE PTR es:[edi],dx
  40ef9e:	push   eax
  40ef9f:	jecxz  0x40f018
  40efa1:	mov    esp,0xca3ac6ee
  40efa6:	rol    DWORD PTR [edx+0x7cb753f1],0x12
  40efad:	jge    0x40efb8
  40efaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb0:	in     al,dx
  40efb1:	leave  
  40efb2:	imul   ecx,DWORD PTR [edi-0x7e11d852],0xffffffc7
  40efb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efba:	cmp    cl,BYTE PTR [edi]
  40efbc:	stos   DWORD PTR es:[edi],eax
  40efbd:	jb     0x40efe9
  40efbf:	add    al,0x95
  40efc1:	dec    ebx
  40efc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc3:	mov    ?,esp
  40efc5:	push   eax
  40efc6:	stos   BYTE PTR es:[edi],al
  40efc7:	retf   0x5624
  40efca:	fsubr  QWORD PTR [ebx]
  40efcc:	and    DWORD PTR [ebx+esi*4],edx
  40efcf:	mov    al,BYTE PTR [ecx]
  40efd1:	repz addr16 (bad) 
  40efd4:	mov    ah,BYTE PTR [eax]
  40efd6:	fninit 
  40efd8:	and    bl,dl
  40efda:	or     al,0xf6
  40efdc:	loop   0x40f049
  40efde:	mov    ebx,0xaed204aa
  40efe3:	sbb    al,0x87
  40efe5:	xchg   ecx,eax
  40efe6:	jns    0x40ef98
  40efe8:	mov    ebx,0xecc25cd3
  40efed:	pop    esp
  40efee:	aam    0x78
  40eff0:	and    DWORD PTR [ecx+0x6cfe6cd8],ecx
  40eff6:	lock push edx
  40eff8:	xor    DWORD PTR [edx+0x70dae498],esp
  40effe:	mov    eax,0xa870c929
  40f003:	add    DWORD PTR [bx+di-0x41],0x2759f322
  40f00b:	fcomp  DWORD PTR [ecx]
  40f00d:	cmp    bh,BYTE PTR [eax-0x7e]
  40f010:	jecxz  0x40f034
  40f012:	jp     0x40f093
  40f014:	aad    0x3f
  40f016:	and    bh,BYTE PTR [ecx+0x4e05d117]
  40f01c:	cwde   
  40f01d:	(bad)
  40f022:	push   ds
  40f023:	sbb    ebx,edi
  40f025:	in     al,0x91
  40f027:	adc    al,0x65
  40f029:	lods   al,BYTE PTR ds:[esi]
  40f02a:	jp     0x40efdc
  40f02c:	or     eax,ebx
  40f02e:	pop    ebx
  40f02f:	sahf   
  40f030:	sub    esp,0x1e
  40f033:	push   ecx
  40f034:	loop   0x40f042
  40f036:	xor    al,0x80
  40f038:	nop
  40f039:	nop
  40f03a:	push   es
  40f03b:	dec    eax
  40f03c:	sub    DWORD PTR [esi],edx
  40f03e:	cmp    al,0x6
  40f040:	push   edi
  40f041:	loope  0x40f015
  40f043:	gs dec eax
  40f045:	shr    BYTE PTR [edx],cl
  40f047:	arpl   dx,di
  40f049:	lods   al,BYTE PTR ds:[esi]
  40f04a:	leave  
  40f04b:	cli    
  40f04c:	js     0x40efd5
  40f04e:	xor    BYTE PTR [ebp+0x314e427d],bl
  40f054:	ret    0xd3e5
  40f057:	shl    BYTE PTR [ebp-0x71],0xa1
  40f05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f05c:	mov    DWORD PTR [esp+edx*1],esp
  40f05f:	fisubr DWORD PTR [ebx]
  40f061:	inc    eax
  40f062:	lahf   
  40f063:	adc    dh,ch
  40f065:	sub    edi,DWORD PTR [esi-0x4]
  40f068:	stos   DWORD PTR es:[edi],eax
  40f069:	loopne 0x40f0d6
  40f06b:	out    dx,al
  40f06c:	pop    ebx
  40f06d:	shl    DWORD PTR [ebx],0xa4
  40f070:	adc    ebx,esi
  40f072:	call   0x70514e9c
  40f077:	jo     0x40f0c7
  40f079:	shl    DWORD PTR [edi-0x32],cl
  40f07c:	mov    ch,0xf
  40f07e:	inc    ebp
  40f07f:	xor    BYTE PTR [ebx+ebx*1],bl
  40f082:	lods   al,BYTE PTR ds:[esi]
  40f083:	or     al,0xb8
  40f085:	ss aam 0xcc
  40f088:	les    eax,FWORD PTR [ebx-0x1e]
  40f08b:	(bad)  
  40f08c:	aam    0xd1
  40f08e:	adc    dh,BYTE PTR [edi+0x45]
  40f091:	push   edx
  40f092:	pop    ecx
  40f093:	sub    esp,edi
  40f095:	cmp    DWORD PTR [edx-0xac80828],0x4
  40f09c:	(bad)  
  40f09d:	mov    al,ds:0x87991444
  40f0a2:	lods   eax,DWORD PTR ds:[esi]
  40f0a3:	sub    ebp,DWORD PTR [ebp+0x75]
  40f0a6:	sub    BYTE PTR gs:[eax],al
  40f0a9:	adc    ch,BYTE PTR [edi]
  40f0ab:	(bad)  
  40f0ac:	dec    edx
  40f0ad:	daa    
  40f0ae:	mov    dl,BYTE PTR [ebp+0x430255a7]
  40f0b4:	mov    ebx,0xded4fc4b
  40f0b9:	shl    BYTE PTR [esi+eax*8+0x615cd5b1],cl
  40f0c0:	inc    ebx
  40f0c1:	jecxz  0x40f07e
  40f0c3:	sbb    ch,BYTE PTR [esi+edi*1-0x278f39c4]
  40f0ca:	(bad)  
  40f0cb:	call   0xbd2e1964
  40f0d0:	(bad)  
  40f0d1:	(bad)  
  40f0d2:	pop    ebp
  40f0d3:	inc    edx
  40f0d4:	mov    al,ds:0xfff13750
  40f0d9:	and    al,dl
  40f0db:	and    esp,DWORD PTR [esi+0x6bdfbfeb]
  40f0e1:	(bad)  
  40f0e2:	cs out 0x82,eax
  40f0e5:	shl    BYTE PTR [edx+esi*4],1
  40f0e8:	fsubrp st(2),st
  40f0ea:	xchg   DWORD PTR [edx+0x44],esp
  40f0ed:	xacquire xchg BYTE PTR [edx],cl
  40f0f0:	pop    ecx
  40f0f1:	or     ebx,ecx
  40f0f3:	add    al,0x66
  40f0f5:	mov    cl,0x5b
  40f0f7:	loope  0x40f0b0
  40f0f9:	jbe    0x40f07d
  40f0fb:	(bad)  
  40f0fc:	add    al,0xff
  40f0fe:	adc    BYTE PTR ds:0xc2f5dc9d,0x9f
  40f105:	mov    bl,0xc7
  40f107:	inc    esp
  40f108:	leave  
  40f109:	or     DWORD PTR [ecx],0xffffff82
  40f10c:	push   esp
  40f10d:	and    eax,0x8304781f
  40f112:	or     ch,dl
  40f114:	xchg   ebp,eax
  40f115:	gs push ebx
  40f117:	xor    DWORD PTR [esi],ecx
  40f119:	inc    esp
  40f11a:	ins    BYTE PTR es:[edi],dx
  40f11b:	loopne 0x40f0cd
  40f11d:	ins    BYTE PTR es:[edi],dx
  40f11e:	retf   0xf378
  40f121:	ret    0xdae0
  40f124:	push   eax
  40f125:	cmp    al,0x7d
  40f127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f128:	cmp    al,0x42
  40f12a:	cmp    eax,0x23c00b77
  40f12f:	mov    edx,0x7356537c
  40f134:	fcmovbe st,st(4)
  40f136:	pop    es
  40f137:	inc    esi
  40f138:	jae    0x40f160
  40f13a:	jecxz  0x40f127
  40f13c:	pop    edx
  40f13d:	mov    esi,DWORD PTR [ebp+0xc]
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	pusha  
  40fa17:	mov    DWORD PTR [eax+esi*2+0x74],0xfb7a7aca
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa23:	adc    eax,0x1a4245e5
  40fa28:	inc    edx
  40fa29:	push   cs
  40fa2a:	jge    0x40fa7f
  40fa2c:	mov    esi,0x790e23c2
  40fa31:	adc    ebx,DWORD PTR [ecx+esi*1+0x434c8f80]
  40fa38:	xchg   ebx,eax
  40fa39:	pop    ebp
  40fa3a:	mov    ebp,0x22da6c63
  40fa3f:	and    ah,BYTE PTR [eax-0x3]
  40fa42:	or     DWORD PTR [ebp-0x6a],0xffffff8e
  40fa46:	and    al,0xb3
  40fa48:	xchg   ecx,eax
  40fa49:	in     eax,dx
  40fa4a:	mov    edi,0x8552275b
  40fa4f:	jb     0x40fac8
  40fa51:	mov    eax,ds:0x72aad4f1
  40fa56:	sbb    DWORD PTR [edx],ecx
  40fa58:	retf   0x302c
  40fa5b:	jge    0x40fa1b
  40fa5d:	or     BYTE PTR [ebp+0x40],0x9a
  40fa61:	xor    DWORD PTR [edi],edi
  40fa63:	xor    al,0x6a
  40fa65:	int    0x2f
  40fa67:	mov    bh,0x4b
  40fa69:	jecxz  0x40fa7d
  40fa6b:	inc    esp
  40fa6c:	cmp    dh,ah
  40fa6e:	inc    edi
  40fa6f:	jo     0x40fa3d
  40fa71:	xor    al,0xd6
  40fa73:	and    WORD PTR [ebx*8+0xcf817a7],sp
  40fa7b:	(bad)  
  40fa7d:	or     dh,cl
  40fa7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa80:	test   BYTE PTR [ecx],cl
  40fa82:	shl    BYTE PTR fs:[ecx+0x5f],cl
  40fa86:	mov    ebp,0xf053233c
  40fa8b:	xor    bl,bl
  40fa8d:	or     esp,DWORD PTR [ecx-0x4f]
  40fa90:	xchg   esi,eax
  40fa91:	cld    
  40fa92:	push   eax
  40fa93:	and    al,ch
  40fa95:	cmc    
  40fa96:	xchg   ecx,eax
  40fa97:	cld    
  40fa98:	(bad)  
  40fa99:	lock icebp 
  40fa9b:	scas   al,BYTE PTR es:[edi]
  40fa9c:	inc    ebp
  40fa9d:	leave  
  40fa9e:	xchg   edx,eax
  40fa9f:	call   0xb806ca99
  40faa4:	xor    al,0x4d
  40faa6:	dec    edi
  40faa7:	(bad)  
  40faa8:	shr    edi,cl
  40faaa:	push   ebx
  40faab:	test   eax,0xb9ec86b0
  40fab0:	lahf   
  40fab1:	sbb    al,0x23
  40fab3:	lock push edi
  40fab5:	pop    ds
  40fab6:	stc    
  40fab7:	jmp    0x8e2a5336
  40fabc:	ja     0x40fadc
  40fabe:	sub    cl,bh
  40fac0:	mov    al,0x67
  40fac2:	dec    esi
  40fac3:	dec    dh
  40fac5:	dec    ebx
  40fac6:	(bad)  
  40fac7:	mov    ebx,0xebc26cb
  40facc:	bnd jl 0x40fa81
  40facf:	add    al,0xf4
  40fad1:	adc    BYTE PTR [ecx+0x1f97a0f4],bh
  40fad7:	scas   eax,DWORD PTR es:[edi]
  40fad8:	rol    DWORD PTR [ebp+0xe],cl
  40fadb:	push   ecx
  40fadc:	pushf  
  40fadd:	or     BYTE PTR [eax+0x45],ch
  40fae0:	mov    ecx,0x78579c2b
  40fae5:	aad    0x97
  40fae7:	inc    DWORD PTR [esi-0x5110bd42]
  40faed:	mov    edx,0x52828550
  40faf2:	xor    eax,0xf72bf884
  40faf7:	xchg   DWORD PTR [edx+esi*8-0x7021cd6],esp
  40fafe:	dec    ebp
  40faff:	loope  0x40fa8c
  40fb01:	arpl   WORD PTR ds:0x495a0a38,bx
  40fb07:	stos   DWORD PTR es:[edi],eax
  40fb08:	sbb    ah,BYTE PTR [ebp+0x4b2f77e7]
  40fb0e:	xchg   DWORD PTR [edi+0xc],ebx
  40fb11:	sub    al,0xec
  40fb13:	or     BYTE PTR [edx+0x1e],dh
  40fb16:	ds adc bh,dh
  40fb19:	and    BYTE PTR [ecx-0x1e5ce544],ch
  40fb1f:	scas   al,BYTE PTR es:[edi]
  40fb20:	mov    ds:0xbcb857bc,al
  40fb25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb26:	in     al,dx
  40fb27:	mov    edi,0xb32c070e
  40fb2c:	dec    ebx
  40fb2d:	mov    ch,0x5
  40fb2f:	dec    ecx
  40fb30:	mov    ah,BYTE PTR [edx*4-0x40278db6]
  40fb37:	imul   esp,DWORD PTR ds:0x7e9c8c7d,0x158a19cb
  40fb41:	dec    ecx
  40fb42:	loope  0x40fb7c
  40fb44:	jmp    0x40fb38
  40fb46:	ret    0xdcef
  40fb49:	(bad)  
  40fb4a:	xor    BYTE PTR [ebx-0x242f86d0],dl
  40fb50:	xor    ah,BYTE PTR [edx+eiz*1+0x3709ffff]
  40fb57:	pop    ds
  40fb58:	jae    0x40fb99
  40fb5a:	dec    ebx
  40fb5b:	push   ss
  40fb5c:	unpckhps xmm1,XMMWORD PTR [ebp-0x27e446eb]
  40fb63:	imul   esp,DWORD PTR [esi+ebx*4-0x66],0x46
  40fb68:	sbb    esp,esi
  40fb6a:	cmp    esp,DWORD PTR [edx+0x52]
  40fb6d:	scas   eax,DWORD PTR es:[edi]
  40fb6e:	push   ds
  40fb6f:	xchg   edx,eax
  40fb70:	popa   
  40fb71:	(bad)  
  40fb72:	scas   eax,DWORD PTR es:[edi]
  40fb73:	xchg   edx,eax
  40fb74:	inc    esi
  40fb75:	xchg   BYTE PTR [ecx-0x33cc272c],dh
  40fb7b:	sub    eax,0x3b6d6d10
  40fb80:	sub    eax,0x7ec5ba82
  40fb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb86:	mov    DWORD PTR [eax-0x3b2a0842],ebx
  40fb8c:	mov    ebp,0xaf62088d
  40fb91:	xor    al,0xba
  40fb93:	sub    al,0x17
  40fb95:	mov    cl,0x70
  40fb97:	loope  0x40fb60
  40fb99:	daa    
  40fb9a:	pop    ebx
  40fb9b:	pop    ss
  40fb9c:	out    0x57,eax
  40fb9e:	imul   esp,DWORD PTR [esi+0x6],0xfffffff3
  40fba2:	hlt    
  40fba3:	and    BYTE PTR [eax],cl
  40fba5:	mov    dh,0xb6
  40fba7:	jmp    0x3933ce86
  40fbac:	imul   esi,DWORD PTR [ecx+ebp*8+0x61],0xffffffe3
  40fbb1:	add    DWORD PTR [ebp-0x39],ebx
  40fbb4:	cwde   
  40fbb5:	adc    ch,BYTE PTR [ebx]
  40fbb7:	ds mov dl,0xea
  40fbba:	imul   edi,DWORD PTR [eax+eiz*2+0x12fea3a],0xffffffb7
  40fbc2:	sbb    al,BYTE PTR ds:0xcbd82b63
  40fbc8:	add    eax,DWORD PTR [ecx-0x3f]
  40fbcb:	jno    0x40fbc1
  40fbcd:	lods   al,BYTE PTR ds:[esi]
  40fbce:	outs   dx,DWORD PTR ds:[esi]
  40fbcf:	(bad)  
  40fbd1:	ror    BYTE PTR [edi],1
  40fbd3:	aaa    
  40fbd4:	stos   BYTE PTR es:[edi],al
  40fbd5:	fbld   TBYTE PTR [eax+0x108eeae9]
  40fbdb:	fcmovnu st,st(3)
  40fbdd:	dec    ebp
  40fbde:	jl     0x40fbc9
  40fbe0:	aam    0xcf
  40fbe2:	(bad)  
  40fbe4:	cwde   
  40fbe5:	jae    0x40fbcc
  40fbe7:	push   ecx
  40fbe8:	add    ch,al
  40fbea:	sub    esi,DWORD PTR [eax-0x523fb3d8]
  40fbf0:	sbb    al,0xfe
  40fbf2:	rol    DWORD PTR [esi-0x4d],1
  40fbf5:	enter  0xbc1b,0x24
  40fbf9:	pop    esi
  40fbfa:	sbb    al,0x2b
  40fbfc:	addr16 aam 0xce
  40fbff:	add    eax,0x2540e48a
  40fc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc05:	repnz hlt 
  40fc07:	dec    eax
  40fc08:	mov    ah,0x7d
  40fc0a:	push   ss
  40fc0b:	adc    eax,0xa0e12e88
  40fc10:	push   edx
  40fc11:	pop    edx
  40fc12:	aam    0xaa
  40fc14:	jmp    0x18c63143
  40fc19:	lea    ebx,[esp+eiz*2]
  40fc1c:	mov    eax,gs:0x4e36f79
  40fc22:	mov    bh,0x4c
  40fc24:	icebp  
  40fc25:	mov    cs,WORD PTR [edi-0x21]
  40fc28:	(bad)  
  40fc29:	jg     0x40fbd5
  40fc2b:	mov    bl,0x58
  40fc2d:	xchg   edx,eax
  40fc2e:	pop    ss
  40fc2f:	retf   0xe84a
  40fc32:	pop    es
  40fc33:	xor    eax,edi
  40fc35:	xor    BYTE PTR [edx+0x79],al
  40fc38:	xor    eax,0xea8e6c58
  40fc3d:	push   ebx
  40fc3e:	(bad)  
  40fc3f:	jecxz  0x40fcaf
  40fc41:	jb     0x40fbe4
  40fc43:	mul    BYTE PTR [edx+0x66df3861]
  40fc49:	jno    0x40fc52
  40fc4b:	pop    eax
  40fc4c:	out    dx,al
  40fc4d:	sub    bh,BYTE PTR [edx]
  40fc4f:	lea    edx,[eax]
  40fc51:	hlt    
  40fc52:	scas   eax,DWORD PTR es:[edi]
  40fc53:	in     eax,0xae
  40fc55:	mov    dl,0x6c
  40fc57:	or     bh,BYTE PTR [eax+0x40]
  40fc5a:	repz jp 0x40fcbb
  40fc5d:	sub    dl,al
  40fc5f:	shl    BYTE PTR [ecx+0x1ea20362],1
  40fc65:	cwde   
  40fc66:	repnz popfw 
  40fc69:	leave  
  40fc6a:	repnz add eax,0xd2fa06cf
  40fc70:	pop    esi
  40fc71:	dec    ebp
  40fc72:	pusha  
  40fc73:	or     eax,0x1d4019f8
  40fc78:	retf   0xa447
  40fc7b:	sbb    dh,BYTE PTR [ebx-0x6428542f]
  40fc81:	outs   dx,DWORD PTR ds:[esi]
  40fc82:	pusha  
  40fc83:	or     DWORD PTR [esi],edx
  40fc85:	arpl   WORD PTR [eax],di
  40fc87:	inc    edi
  40fc88:	lea    ecx,[edi-0x3499c387]
  40fc8e:	icebp  
  40fc8f:	mov    esi,0xc1182bb1
  40fc94:	aam    0xae
  40fc96:	mov    ebp,DWORD PTR [ebp-0x52]
  40fc99:	pop    ss
  40fc9a:	sti    
  40fc9b:	into   
  40fc9c:	mov    dl,0xb3
  40fc9e:	neg    DWORD PTR [esi-0x10]
  40fca1:	mov    bl,0xba
  40fca3:	add    eax,0x1bf62676
  40fca8:	loope  0x40fc91
  40fcaa:	sub    BYTE PTR [eax+0x45],bh
  40fcad:	aam    0x6b
  40fcaf:	push   edx
  40fcb0:	push   ecx
  40fcb1:	loopne 0x40fcd5
  40fcb3:	cmp    eax,0xea5d916b
  40fcb8:	test   al,0x27
  40fcba:	mov    ecx,0xbe690e90
  40fcbf:	(bad)  
  40fcc0:	repz fistp DWORD PTR [edx+0x38]
  40fcc4:	stos   BYTE PTR es:[edi],al
  40fcc5:	sub    ecx,DWORD PTR [edx+ebp*1+0x4]
  40fcc9:	jle    0x40fc86
  40fccb:	popf   
  40fccc:	jno    0x40fd40
  40fcce:	jno    0x40fd2f
  40fcd0:	std    
  40fcd1:	jge    0x40fc7d
  40fcd3:	bound  ebp,QWORD PTR ds:0x37315b57
  40fcd9:	je     0x40fd3e
  40fcdb:	fwait
  40fcdc:	xchg   ebx,eax
  40fcdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcde:	pop    edx
  40fcdf:	mov    eax,ds:0x3cff7658
  40fce4:	pop    ebx
  40fce5:	push   esp
  40fce6:	pop    ss
  40fce7:	aaa    
  40fce8:	fcmovnbe st,st(0)
  40fcea:	enter  0x6bc,0x6c
  40fcee:	jb     0x40fcb3
  40fcf0:	jmp    0xd6eb:0xb4cf302b
  40fcf7:	and    ebp,DWORD PTR [edx-0x6e61a53e]
  40fcfd:	mov    WORD PTR [edi-0x11e3575e],gs
  40fd03:	ror    BYTE PTR [ecx],cl
  40fd05:	pop    esi
  40fd06:	cmp    cl,BYTE PTR [ebx]
  40fd08:	repnz dec ebp
  40fd0a:	ss leave 
  40fd0c:	push   edx
  40fd0d:	cmc    
  40fd0e:	push   ecx
  40fd0f:	lock jg 0x40fd1d
  40fd12:	shl    BYTE PTR [ebx+0x4ff2a3f],0x82
  40fd19:	lea    ebx,[edi]
  40fd1b:	xchg   BYTE PTR [ebp-0x488c32b9],dl
  40fd21:	loopne 0x40fd1c
  40fd23:	test   BYTE PTR [ebx],bh
  40fd25:	cmp    edi,esi
  40fd27:	in     eax,0xa0
  40fd29:	hlt    
  40fd2a:	sbb    esp,ebp
  40fd2c:	dec    ecx
  40fd2d:	dec    ecx
  40fd2e:	(bad)  
  40fd2f:	into   
  40fd30:	repz fidiv DWORD PTR cs:[edx]
  40fd34:	jne    0x40fd4d
  40fd36:	dec    esi
  40fd37:	iret   
  40fd38:	xor    BYTE PTR [ecx],al
  40fd3a:	cmp    al,0x37
  40fd3c:	sub    esp,edi
  40fd3e:	cs ins BYTE PTR es:[edi],dx
  40fd40:	jge    0x40fccd
  40fd42:	stos   DWORD PTR es:[edi],eax
  40fd43:	out    dx,al
  40fd44:	outs   dx,DWORD PTR ds:[esi]
  40fd45:	push   ebp
  40fd46:	test   BYTE PTR [ebp+0x6f7d3d27],0x92
  40fd4d:	es scas ax,WORD PTR es:[edi]
  40fd50:	adc    al,0x66
  40fd52:	add    BYTE PTR [ebx+0x29abd999],cl
  40fd58:	inc    edx
  40fd59:	mov    ch,0x51
  40fd5b:	pop    eax
  40fd5c:	pop    esi
  40fd5d:	jmp    0x40fd69
  40fd5f:	add    BYTE PTR [edi+0x22],cl
  40fd62:	and    al,0x2c
  40fd64:	mov    ah,0x8d
  40fd66:	pusha  
  40fd67:	ror    DWORD PTR [esi+eiz*8-0x31154446],0x6a
  40fd6f:	into   
  40fd70:	push   ss
  40fd71:	mov    esi,0x1cc4945
  40fd76:	sub    al,0xdc
  40fd78:	repnz nop
  40fd7a:	fstp   QWORD PTR [ebx-0x5d57fbd5]
  40fd80:	xchg   bl,ch
  40fd82:	push   eax
  40fd83:	test   BYTE PTR [edx+ecx*1],dh
  40fd86:	rcl    DWORD PTR [edx+0x27],1
  40fd89:	scas   al,BYTE PTR es:[edi]
  40fd8a:	inc    edx
  40fd8b:	sbb    esp,esi
  40fd8d:	cmovg  esp,DWORD PTR [ebx+0x3a]
  40fd91:	in     al,0x46
  40fd93:	retf   0x8508
  40fd96:	mov    eax,0x9389df73
  40fd9b:	xor    al,0x33
  40fd9d:	lock ss sahf 
  40fda0:	pop    es
  40fda1:	inc    esi
  40fda2:	lahf   
  40fda3:	mov    esi,0xde3ca5ac
  40fda8:	stos   BYTE PTR es:[edi],al
  40fda9:	and    al,0xe3
  40fdab:	adc    al,0xb0
  40fdad:	fs mov dl,0xaa
  40fdb0:	sbb    esp,DWORD PTR [edx-0x1f]
  40fdb3:	push   ss
  40fdb4:	jae    0x40fd3b
  40fdb6:	pushf  
  40fdb7:	sub    edx,ebx
  40fdb9:	loope  0x40fe15
  40fdbb:	cwde   
  40fdbc:	mov    esp,0x2f25a463
  40fdc1:	mov    ebx,0xee18e4e7
  40fdc6:	and    DWORD PTR [edx-0x61193a17],ecx
  40fdcc:	ror    DWORD PTR [edx+0x3f9f4e95],1
  40fdd2:	sub    BYTE PTR [ecx+0x10],bl
  40fdd5:	add    eax,0xf196fcc9
  40fdda:	xor    ch,ah
  40fddc:	mov    esp,0xc7a51790
  40fde1:	jo     0x40fdd3
  40fde3:	into   
  40fde4:	mov    bh,0x33
  40fde6:	mov    al,ds:0xc1256a37
  40fdeb:	jne    0x40fe3e
  40fded:	mov    ?,WORD PTR [eax-0x284e9859]
  40fdf3:	(bad)  
  40fdf4:	ficom  DWORD PTR [ecx]
  40fdf6:	mov    al,ds:0x49f1407a
  40fdfb:	ja     0x40fe74
  40fdfd:	test   BYTE PTR [ebx+edi*2+0x74],ah
  40fe01:	test   BYTE PTR [ebx],0x89
  40fe04:	not    dh
  40fe06:	pop    esp
  40fe07:	dec    ebx
  40fe08:	and    edx,DWORD PTR [ebp+0x44]
  40fe0b:	popa   
  40fe0c:	int    0xfe
  40fe0e:	clc    
  40fe0f:	inc    eax
  40fe10:	fmulp  st(4),st
  40fe12:	sub    ecx,ecx
  40fe14:	mov    WORD PTR [ecx-0x45],ss
  40fe17:	mul    BYTE PTR [esi+0x1c10eaa6]
  40fe1d:	outs   dx,DWORD PTR ds:[esi]
  40fe1e:	popa   
  40fe1f:	mov    ecx,0xd6dae37a
  40fe24:	repnz fnstenv [edi+0x18]
  40fe28:	and    edi,DWORD PTR [esp+edi*1]
  40fe2b:	cmp    al,0x45
  40fe2d:	(bad)  [edi-0x48]
  40fe30:	pop    es
  40fe31:	int3   
  40fe32:	mov    esi,0xced5d542
  40fe37:	push   edi
  40fe38:	sub    al,0xdb
  40fe3a:	mov    dh,bl
  40fe3c:	fsub   st(2),st
  40fe3e:	arpl   WORD PTR [eax+0x37],cx
  40fe41:	pop    ds
  40fe42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe43:	test   al,0xa6
  40fe45:	jo     0x40fe55
  40fe47:	cld    
  40fe48:	daa    
  40fe49:	mov    cl,0x65
  40fe4b:	push   ss
  40fe4c:	fcomp  DWORD PTR [ecx+eiz*2+0x40]
  40fe50:	aad    0xc4
  40fe52:	dec    edi
  40fe53:	adc    eax,0x3e4c8f2d
  40fe58:	lods   al,BYTE PTR ds:[esi]
  40fe59:	mov    dl,0xda
  40fe5b:	or     ebp,eax
  40fe5d:	xchg   ebp,eax
  40fe5e:	dec    edx
  40fe5f:	sub    edi,DWORD PTR [eax-0x60]
  40fe62:	div    BYTE PTR [ebp-0x4fda0eeb]
  40fe68:	mov    dl,0x43
  40fe6a:	inc    ecx
  40fe6b:	mov    ah,0x95
  40fe6d:	cmp    BYTE PTR [edx+ebp*8],dl
  40fe70:	xor    eax,0x15586532
  40fe75:	dec    edx
  40fe76:	add    esp,DWORD PTR [edi+0x6b]
  40fe79:	cdq    
  40fe7a:	mov    edx,0xc0794def
  40fe7f:	sahf   
  40fe80:	pop    es
  40fe81:	loope  0x40fe55
  40fe83:	pop    esi
  40fe84:	sbb    DWORD PTR [ebx-0x49],0x867d5b38
  40fe8b:	mov    bl,0x10
  40fe8d:	scas   eax,DWORD PTR es:[edi]
  40fe8e:	mov    eax,0xe366f58e
  40fe93:	pop    ebx
  40fe94:	sub    BYTE PTR [ebx+0x39],bl
  40fe97:	sub    DWORD PTR [edx+edx*4],0x48
  40fe9b:	mov    ebp,0xd4978f79
  40fea0:	loope  0x40fe60
  40fea2:	jbe    0x40fe84
  40fea4:	sbb    bh,BYTE PTR [esi]
  40fea6:	mov    BYTE PTR [edi+0x583ffb71],0x32
  40fead:	sub    eax,0xf6486e08
  40feb2:	inc    edx
  40feb3:	es jae 0x40fea1
  40feb6:	out    0x3f,eax
  40feb8:	or     al,0xaa
  40febb:	call   0xd0634fe9
  40fec0:	or     DWORD PTR [edx+edx*2-0x23bb3c32],edi
  40fec7:	cmp    ah,BYTE PTR [esi]
  40fec9:	push   0x47
  40fecb:	(bad)  
  40fecd:	jge    0x40fede
  40fecf:	mov    cl,0x2b
  40fed1:	hlt    
  40fed2:	xchg   edi,eax
  40fed3:	xchg   ecx,eax
  40fed4:	aaa    
  40fed5:	mov    bl,0x48
  40fed7:	arpl   bx,bp
  40fed9:	jne    0x40fee4
  40fedb:	repnz in eax,0xf4
  40fede:	test   BYTE PTR [edx],al
  40fee0:	push   edx
  40fee1:	clc    
  40fee2:	aam    0x33
  40fee4:	xchg   esi,eax
  40fee5:	cli    
  40fee6:	call   0x22918d3
  40feeb:	sub    esi,DWORD PTR [edx+eiz*8+0x42529890]
  40fef2:	std    
  40fef3:	lahf   
  40fef4:	or     cl,0xf1
  40fef7:	or     DWORD PTR [edi+0x506ad088],0xffffffd5
  40fefe:	xchg   edi,eax
  40feff:	pop    es
  40ff00:	stos   DWORD PTR es:[edi],eax
  40ff01:	jle    0x40ff3e
  40ff03:	dec    esi
  40ff04:	iret   
  40ff05:	outs   dx,BYTE PTR ds:[esi]
  40ff06:	xlat   BYTE PTR ds:[ebx]
  40ff07:	in     eax,dx
  40ff08:	xchg   BYTE PTR [edx*2+0x103d90c3],ch
  40ff0f:	jns    0x40fec2
  40ff11:	and    dl,BYTE PTR [eax-0x51]
  40ff14:	inc    eax
  40ff15:	shl    DWORD PTR [ebp-0x3500fd3d],0x5b
  40ff1c:	cmp    BYTE PTR [ebx+0x2f9d31ce],bh
  40ff22:	imul   edi,DWORD PTR [eax+0x2],0xc0820d63
  40ff29:	xchg   edx,eax
  40ff2a:	in     al,0x14
  40ff2c:	jmp    0x40ffa8
  40ff2e:	xchg   ebp,eax
  40ff2f:	xor    esi,DWORD PTR [ebx-0x62]
  40ff32:	imul   edx,DWORD PTR [edx+0x3e1d289c],0x60bcdec7
  40ff3c:	dec    esi
  40ff3d:	mov    WORD PTR [esi-0x5c1b0c73],cs
  40ff43:	mov    bl,0x65
  40ff45:	ins    DWORD PTR es:[edi],dx
  40ff46:	jmp    0x40ff07
  40ff48:	dec    eax
  40ff49:	mov    eax,0xa7626001
  40ff4e:	sbb    BYTE PTR [edx+0x76763df2],bh
  40ff54:	scas   eax,DWORD PTR es:[edi]
  40ff55:	data16 stc 
  40ff57:	xchg   ebp,eax
  40ff58:	jecxz  0x40fee4
  40ff5a:	xor    ah,ah
  40ff5c:	into   
  40ff5d:	and    esi,esp
  40ff5f:	push   edx
  40ff60:	or     al,0xb1
  40ff62:	push   0x39
  40ff64:	jmp    0xa876:0x290afad6
  40ff6b:	aad    0xe9
  40ff6d:	mov    ecx,0x16771375
  40ff72:	push   ds
  40ff73:	(bad)  
  40ff74:	gs push ds
  40ff76:	ds pop edi
  40ff78:	inc    esp
  40ff79:	jp     0x40ffb3
  40ff7b:	repz into 
  40ff7d:	jp     0x40ff37
  40ff7f:	int    0x34
  40ff81:	sub    bl,0x4e
  40ff84:	adc    al,0xc1
  40ff86:	mov    es,WORD PTR [ebx+0x1e]
  40ff89:	push   ss
  40ff8a:	jae    0x40ff22
  40ff8c:	outs   dx,DWORD PTR ds:[esi]
  40ff8d:	iret   
  40ff8e:	jmp    0xe4a3c097
  40ff93:	repz jmp 0x7900:0xd6a021a1
  40ff9b:	ret    
  40ff9c:	pop    ecx
  40ff9d:	pop    esi
  40ff9e:	pop    ss
  40ff9f:	jle    0x410002
  40ffa1:	mov    ecx,0x9644ebef
  40ffa6:	fbstp  TBYTE PTR [esi+0x1e]
  40ffa9:	and    DWORD PTR [eax],esp
  40ffab:	sbb    DWORD PTR [eax],0xe5f9c2ec
  40ffb1:	bound  esp,QWORD PTR gs:[ebp-0x69]
  40ffb5:	cs fs ret 
  40ffb8:	jae    0x410020
  40ffba:	jmp    0x41001a
  40ffbc:	jmp    0xc25113a6
  40ffc1:	mov    al,ds:0x6cec87b0
  40ffc6:	call   FWORD PTR [esi-0x16524dfd]
  40ffcc:	jae    0x40ffbf
  40ffce:	xchg   edx,eax
  40ffcf:	test   ebx,0xa05c59a2
  40ffd5:	cli    
  40ffd6:	jb     0x410023
  40ffd8:	sbb    BYTE PTR [edx-0x2ca378bf],ch
  40ffde:	pop    ds
  40ffdf:	lods   al,BYTE PTR ds:[esi]
  40ffe0:	fbstp  TBYTE PTR [edi]
  40ffe2:	movups xmm1,XMMWORD PTR [edi+0x5b]
  40ffe6:	and    DWORD PTR [ecx],esi
  40ffe8:	loop   0x41002a
  40ffea:	or     dl,bh
  40ffec:	(bad)  
  40ffed:	mov    eax,ds:0xc5db9402
  40fff2:	aaa    
  40fff3:	sti    
  40fff4:	or     BYTE PTR [ebx],ah
  40fff6:	int3   
  40fff7:	retf   0xac36
  40fffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fffb:	shl    BYTE PTR [ebp+0x4bb0a9f2],cl
  410001:	xor    DWORD PTR [ecx+0x24055e0d],edi
  410007:	or     DWORD PTR [esi],edi
  410009:	sbb    al,0xf7
  41000b:	ja     0x410026
  41000d:	leave  
  41000e:	dec    eax
  41000f:	aad    0x5
  410011:	lea    ebx,[ecx]
  410013:	mov    bh,0x80
  410015:	lds    edx,FWORD PTR [esi+0x28ee1048]
  41001b:	arpl   WORD PTR [ecx+ebp*8],sp
  41001e:	pop    es
  41001f:	daa    
  410020:	push   esi
  410021:	rcr    DWORD PTR [ebp-0x2e],cl
  410024:	call   0x3e3655a9
  410029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002a:	pop    ds
  41002b:	cmp    BYTE PTR [eax-0x1f],dl
  41002e:	pop    ebp
  41002f:	test   al,0x1d
  410031:	mov    dh,0x47
  410033:	xchg   ebp,eax
  410034:	xchg   BYTE PTR [edx+0x3bbfc78a],bh
  41003a:	test   ch,dl
  41003c:	not    DWORD PTR [edi+0x5132318f]
  410042:	retf   0xce60
  410045:	inc    esp
  410046:	cmp    esp,esi
  410048:	shl    BYTE PTR [ebx-0x6c9e3f97],1
  41004e:	out    0xca,eax
  410050:	adc    DWORD PTR [ebx],eax
  410052:	and    esp,DWORD PTR [ecx]
  410054:	aaa    
  410055:	mov    ch,0xe6
  410057:	bound  edx,QWORD PTR [ebx+edx*2+0x4d]
  41005b:	adc    ebp,0xffffffd7
  41005e:	(bad)  
  41005f:	pop    edx
  410060:	(bad)  
  410061:	lahf   
  410062:	mov    ah,0xf9
  410064:	xor    DWORD PTR [ecx],esi
  410066:	fcom   DWORD PTR [edi+0x55]
  410069:	das    
  41006a:	xchg   esp,eax
  41006b:	jmp    0x80225f69
  410070:	fnstcw WORD PTR [ebx-0x7b98e36a]
  410076:	dec    eax
  410077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410078:	pop    ebx
  410079:	mov    WORD PTR [edx+0x7e],?
  41007c:	stos   DWORD PTR es:[edi],eax
  41007d:	gs dec edx
  41007f:	xchg   esi,eax
  410080:	add    esi,DWORD PTR [esi]
  410082:	fistp  QWORD PTR [eax+ebp*1+0x41307418]
  410089:	cmp    dh,0x56
  41008c:	mov    al,ds:0xd0559dd2
  410091:	mov    ebp,eax
  410093:	push   ecx
  410094:	add    DWORD PTR [edx],ebx
  410096:	mov    dl,0xc7
  410098:	or     DWORD PTR [esi-0x38],esi
  41009b:	jl     0x410070
  41009d:	and    dh,BYTE PTR [ecx]
  41009f:	sub    ebp,edx
  4100a1:	pushf  
  4100a2:	enter  0x1bf2,0x4f
  4100a6:	ret    
  4100a7:	push   ecx
  4100a8:	outs   dx,BYTE PTR ds:[esi]
  4100a9:	cs cdq 
  4100ab:	mov    cs,WORD PTR [ebx]
  4100ad:	jmp    0x66e1d5b6
  4100b2:	mov    bl,0xa7
  4100b4:	fisub  WORD PTR [ebp+0x5]
  4100b7:	xchg   ecx,eax
  4100b8:	pop    edx
  4100b9:	inc    edi
  4100ba:	inc    ebp
  4100bb:	iret   
  4100bc:	inc    esp
  4100bd:	aas    
  4100be:	or     al,0x5f
  4100c0:	dec    eax
  4100c1:	dec    esp
  4100c2:	adc    cl,bl
  4100c4:	pop    esp
  4100c5:	adc    DWORD PTR ds:0x5c32b4b0,eax
  4100cb:	call   0x1ce8cd52
  4100d0:	cmp    ebx,DWORD PTR [edx-0x21]
  4100d3:	jge    0x41006e
  4100d5:	mov    fs:0x2f074af6,al
  4100db:	mov    esi,0x7b8c8a87
  4100e0:	in     eax,dx
  4100e1:	fstp   DWORD PTR [ebx-0x47f31bd8]
  4100e7:	in     eax,0x71
  4100e9:	int    0xf1
  4100eb:	rcl    DWORD PTR [edx+0x27],1
  4100ee:	mov    eax,0xfaac974e
  4100f3:	add    DWORD PTR [edx],ecx
  4100f5:	pushf  
  4100f6:	fld    TBYTE PTR [esi-0x34283294]
  4100fc:	and    bh,BYTE PTR [ebx-0x7f095ee1]
  410102:	out    dx,eax
  410103:	push   0xcbca03dc
  410108:	mov    edi,0xa21b8f1e
  41010d:	xchg   ebx,edx
  41010f:	xchg   ecx,eax
  410110:	pop    ebp
  410111:	in     eax,0x3b
  410113:	xor    DWORD PTR [ebx+esi*1-0x35],0xd9d495cb
  41011b:	sub    al,0x36
  41011d:	jns    0x410117
  41011f:	sbb    edx,DWORD PTR [ebp+0x55c4d537]
  410125:	test   DWORD PTR [ecx-0x15],ecx
  410128:	call   0xbb5b:0xbc2ef893
  41012f:	lods   eax,DWORD PTR ds:[esi]
  410130:	and    DWORD PTR [edi-0x19],edi
  410133:	sbb    dh,dl
  410135:	jnp    0x410135
  410137:	mov    DWORD PTR [ecx-0x46],edx
  41013a:	adc    ebp,DWORD PTR [esi]
  41013c:	mov    ebp,0x4747871b
  410141:	sub    bl,BYTE PTR [ebp+0x39cee9ef]
  410147:	(bad)  
  410148:	jo     0x410173
  41014a:	adc    ebx,DWORD PTR [ebp+0x11]
  41014d:	or     ch,BYTE PTR [edx-0x3c]
  410150:	enter  0x10a0,0xb8
  410154:	mov    dh,0x4c
  410156:	rcr    ch,0xd2
  410159:	ret    
  41015a:	mov    ch,0xe1
  41015c:	sub    ebp,DWORD PTR ds:0x3e706ba1
  410162:	dec    ebp
  410163:	arpl   WORD PTR [edx],ax
  410165:	xchg   esp,eax
  410166:	stos   DWORD PTR es:[edi],eax
  410167:	dec    ecx
  410168:	xchg   edi,eax
  410169:	push   ecx
  41016a:	mov    eax,0x70f07661
  41016f:	and    DWORD PTR [ebx-0x61],0xffffff87
  410173:	aam    0x3c
  410175:	mov    ds:0xdc5680d9,al
  41017a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41017b:	sbb    edi,DWORD PTR [edi+0x15]
  41017e:	xchg   edi,eax
  41017f:	je     0x4101ae
  410181:	or     ebx,DWORD PTR [ecx+ecx*8]
  410184:	aaa    
  410185:	adc    dl,BYTE PTR [edx]
  410187:	jle    0x4101bb
  410189:	mov    edx,0x140cbc1d
  41018e:	cmovns ecx,DWORD PTR [edi]
  410191:	cmp    dl,BYTE PTR [ebp-0x50]
  410194:	fst    DWORD PTR [esi+0x2c]
  410197:	add    eax,0x8aabd9c6
  41019c:	push   es
  41019d:	leave  
  41019e:	enter  0xf5c9,0xc3
  4101a2:	push   esp
  4101a3:	push   esi
  4101a4:	lock or al,0xd4
  4101a7:	mov    ebp,0x33034819
  4101ac:	mov    ch,0x1d
  4101ae:	push   ss
  4101af:	lahf   
  4101b0:	cmp    ecx,ecx
  4101b2:	(bad)  
  4101b3:	mov    bl,0xb4
  4101b5:	cdq    
  4101b6:	div    BYTE PTR [ebp+0x15]
  4101b9:	pop    di
  4101bb:	push   ss
  4101bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101bd:	pop    es
  4101be:	mul    DWORD PTR [eax+0x8]
  4101c1:	int3   
  4101c2:	fwait
  4101c3:	outs   dx,DWORD PTR ds:[esi]
  4101c4:	and    BYTE PTR [edi+ebp*1-0x8],bh
  4101c8:	mov    WORD PTR ds:0x322cd3b,es
  4101ce:	loop   0x41017f
  4101d0:	(bad)  
  4101d2:	je     0x4101f4
  4101d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101d5:	fadd   DWORD PTR [edi-0x6c71f2b2]
  4101db:	xor    al,0xa4
  4101dd:	jle    0x4101d7
  4101df:	fwait
  4101e0:	push   es
  4101e1:	jne    0x4101dd
  4101e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101e4:	push   edi
  4101e5:	sar    DWORD PTR [esi+0x12f432ec],1
  4101eb:	pcmpeqd mm0,QWORD PTR [bx+0x7c]
  4101f0:	(bad)  
  4101f1:	test   BYTE PTR [esi-0x40],0xfa
  4101f5:	mov    edx,ss
  4101f7:	and    al,0x3b
  4101f9:	les    ecx,FWORD PTR [esi+0x16]
  4101fc:	in     eax,0x8f
  4101fe:	push   es
  4101ff:	sub    eax,0xb4054425
  410204:	dec    eax
  410205:	push   es
  410206:	(bad)  
  410207:	fisubr DWORD PTR [edx+0x69]
  41020a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41020b:	and    esp,ebp
  41020d:	mov    dh,0xe1
  41020f:	int3   
  410210:	bound  esi,QWORD PTR [edi-0x6c]
  410213:	mov    WORD PTR [ebp+0x6b],gs
  410216:	sub    ch,BYTE PTR [esi-0x51]
  410219:	lea    ecx,[ebx]
  41021b:	das    
  41021c:	ret    0xdc8f
  41021f:	add    ecx,DWORD PTR [edx-0x62]
  410222:	sar    BYTE PTR [ebp-0xe34e316],0x14
  410229:	int    0x96
  41022b:	adc    al,0x12
  41022d:	daa    
  41022e:	mov    fs,WORD PTR [ecx-0x1d]
  410231:	outs   dx,DWORD PTR ds:[esi]
  410232:	mov    dh,0x9c
  410234:	aas    
  410235:	mov    bh,0xae
  410237:	lahf   
  410238:	stos   DWORD PTR es:[edi],eax
  410239:	mov    dl,0x25
  41023b:	add    BYTE PTR [ecx-0x79338edc],dl
  410241:	pop    eax
  410242:	jmp    0xe633:0x661da32c
  410249:	hlt    
  41024a:	pop    ds
  41024b:	or     esi,esp
  41024d:	mov    DWORD PTR [eax],ebp
  41024f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410250:	or     al,0xe7
  410252:	repnz pop ecx
  410254:	mul    DWORD PTR [ebp-0x491f5e75]
  41025a:	add    edi,DWORD PTR [eax]
  41025c:	je     0x4101ff
  41025e:	push   ss
  41025f:	mov    ecx,0x4363ff7d
  410264:	jnp    0x4102b9
  410266:	and    al,0xca
  410268:	data16 daa 
  41026a:	mov    eax,0x9812cb82
  41026f:	push   cs
  410270:	mov    ebp,0x3040a116
  410275:	ds push cs
  410277:	fcomp  DWORD PTR [edi+0x33]
  41027a:	call   0xfba3:0x4ea410d9
  410281:	in     al,dx
  410282:	repnz pop ax
  410285:	cs dec edx
  410287:	fnstsw WORD PTR [esi-0x5dc229bd]
  41028d:	push   ecx
  41028e:	mov    edi,0x763cf274
  410293:	rol    ebp,1
  410295:	fisubr WORD PTR [edx-0x62]
  410298:	jae    0x410249
  41029a:	xchg   al,ch
  41029c:	fs pop ebp
  41029e:	xchg   edi,eax
  41029f:	les    edx,FWORD PTR [ebp-0x24139cde]
  4102a5:	fiadd  DWORD PTR [eax-0x29bb50ff]
  4102ab:	pop    eax
  4102ac:	or     al,0x76
  4102ae:	mov    ebx,0xbb0729b6
  4102b3:	imul   esp,DWORD PTR [edx+0x4e0df762],0xffffffdc
  4102ba:	add    ecx,eax
  4102bc:	mov    ebp,0x873d2916
  4102c1:	(bad)  
  4102c2:	icebp  
  4102c3:	pop    esp
  4102c4:	sub    al,BYTE PTR [ebp+eiz*1-0x322ae72f]
  4102cb:	fdivr  DWORD PTR ds:0xc686b556
  4102d1:	dec    esi
  4102d2:	xor    ebx,0x1c
  4102d5:	daa    
  4102d6:	add    DWORD PTR [eax-0x65],ebx
  4102d9:	xchg   esi,eax
  4102da:	xchg   ebp,eax
  4102db:	xor    BYTE PTR [ebp-0x40],dh
  4102de:	dec    ecx
  4102df:	sbb    eax,0x2aa4139
  4102e4:	or     bh,BYTE PTR [ecx]
  4102e6:	mov    ah,0xd1
  4102e8:	inc    edi
  4102e9:	inc    ebx
  4102ea:	push   esp
  4102eb:	push   ss
  4102ec:	or     DWORD PTR [esi],ebx
  4102ee:	(bad)  
  4102ef:	xchg   esp,eax
  4102f0:	inc    edi
  4102f1:	or     eax,0x57ede4c8
  4102f6:	stos   BYTE PTR es:[edi],al
  4102f7:	adc    BYTE PTR [eax+0x8],0xd3
  4102fb:	ret    0x3f58
  4102fe:	retf   
  4102ff:	mov    ah,0x71
  410301:	push   ebx
  410302:	pop    eax
  410303:	scas   eax,DWORD PTR es:[edi]
  410304:	iret   
  410305:	clc    
  410306:	xchg   ecx,eax
  410307:	add    esi,DWORD PTR [esp+ecx*4+0xa]
  41030b:	jae    0x41033b
  41030d:	sub    ebx,DWORD PTR ds:0x3a1df3c
  410313:	lea    esp,[edi-0x59bf1231]
  410319:	jbe    0x41030b
  41031b:	jle    0x41032f
  41031d:	popa   
  41031e:	or     BYTE PTR [edi+eiz*8+0x5a],dl
  410322:	pop    edi
  410323:	mov    eax,ds:0x5c27405d
  410328:	mov    dl,0x8e
  41032a:	jns    0x41035b
  41032c:	js     0x4102c4
  41032e:	ss mov cl,0x15
  410331:	loopne 0x41038c
  410333:	rol    DWORD PTR [esi+0x2f4b07d3],0xb7
  41033a:	ret    0x6e06
  41033d:	sbb    BYTE PTR [ecx],ah
  41033f:	into   
  410340:	push   ds
  410341:	inc    edx
  410342:	inc    ebx
  410343:	cmp    cl,BYTE PTR [ebx+0x50cacb1]
  410349:	iret   
  41034a:	jecxz  0x4103be
  41034c:	mov    esp,0x6960b71e
  410351:	iret   
  410352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410353:	sbb    al,BYTE PTR [edi-0x3f14ec3f]
  410359:	lods   al,BYTE PTR ds:[esi]
  41035a:	mov    esi,0x91611388
  41035f:	xor    edi,DWORD PTR [edx-0x3b]
  410362:	mov    ds:0x56068cf5,al
  410367:	inc    edx
  410368:	xchg   edi,eax
  410369:	in     al,0x47
  41036b:	mov    dl,0xc8
  41036d:	leave  
  41036e:	aaa    
  41036f:	sub    DWORD PTR [edx+0x4a5c1c2e],0x9e5fd6bb
  410379:	and    al,0x63
  41037b:	sub    DWORD PTR [esp+edx*8],eax
  41037e:	test   eax,0x4f6d054f
  410383:	(bad)  
  410384:	test   DWORD PTR [ecx+ecx*1+0x30],0x74779fc6
  41038c:	jo     0x4103d9
  41038e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41038f:	add    ebp,esp
  410391:	sar    BYTE PTR [edi],1
  410393:	add    ebx,DWORD PTR [edx+0x57]
  410396:	enter  0x9765,0xed
  41039a:	adc    al,0x9d
  41039c:	push   ebx
  41039d:	sbb    ecx,DWORD PTR [esp+ebp*8-0x1cd29681]
  4103a4:	lea    esi,[ebx-0x72]
  4103a7:	xor    al,0xb7
  4103a9:	adc    DWORD PTR [esi-0x4b2be714],eax
  4103af:	cmp    bl,BYTE PTR [ecx+edx*8-0x4be8c3fb]
  4103b6:	ins    DWORD PTR es:[edi],dx
  4103b7:	jo     0x4103ed
  4103b9:	inc    edi
  4103ba:	dec    ebp
  4103bb:	add    BYTE PTR [edi-0x63],0x8
  4103bf:	enter  0x8f56,0x3d
  4103c3:	mov    dl,0x1d
  4103c5:	sahf   
  4103c6:	mov    ecx,0x2ae4d2f7
  4103cb:	xor    al,0xa5
  4103cd:	sti    
  4103ce:	mov    es,WORD PTR [edx+0xa]
  4103d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d2:	or     al,BYTE PTR [esi+0x21]
  4103d5:	mov    DWORD PTR fs:[eax],ebx
  4103d8:	cmp    al,0x47
  4103da:	xchg   ecx,eax
  4103db:	xchg   DWORD PTR [edx+0x19],esi
  4103de:	es inc eax
  4103e0:	inc    esp
  4103e1:	iret   
  4103e2:	outs   dx,BYTE PTR ds:[esi]
  4103e3:	or     DWORD PTR [ecx-0x1657e716],0xfffffff9
  4103ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103eb:	mov    edi,0xf93348e1
  4103f0:	and    ecx,0xfd9c61c4
  4103f6:	jne    0x410476
  4103f8:	push   ss
  4103f9:	rcl    DWORD PTR [ecx+0x75],cl
  4103fc:	sbb    DWORD PTR [edi],ebx
  4103fe:	in     eax,dx
  4103ff:	push   0xffffffcb
  410401:	cmc    
  410402:	inc    esp
  410403:	mov    esi,DWORD PTR [ecx]
  410405:	sbb    ecx,DWORD PTR [esi]
  410407:	sub    al,0x82
  410409:	jmp    0x410461
  41040b:	es ss es cwde 
  41040f:	retf   
  410410:	mov    ch,BYTE PTR [ebx+0x34566950]
  410416:	inc    eax
  410417:	ret    0xc2c2
  41041a:	std    
  41041b:	sub    eax,0x2007b62c
  410420:	popf   
  410421:	xor    eax,0x3be2c4d8
  410426:	push   esp
  410427:	into   
  410428:	xlat   BYTE PTR ds:[ebx]
  410429:	mov    dh,0xe1
  41042b:	iret   
  41042c:	int3   
  41042d:	mov    ebx,0x5ae83f6d
  410432:	imul   esp,DWORD PTR [esi-0x44],0xffffffec
  410436:	jnp    0x41049f
  410438:	call   0x923cc3f4
  41043d:	mov    DWORD PTR [edx+0x49cf97da],edx
  410443:	xchg   BYTE PTR [ecx+0x43da139b],ch
  410449:	repz es pop ecx
  41044c:	int3   
  41044d:	dec    ebp
  41044e:	mov    BYTE PTR [ebx-0x6f],cl
  410451:	fnop   
  410453:	or     esp,DWORD PTR [ebx+0x71]
  410456:	fild   DWORD PTR [ebx-0x7127a065]
  41045c:	and    BYTE PTR [ebx+0x5a],dh
  41045f:	or     ch,bh
  410461:	add    al,0xc7
  410463:	or     DWORD PTR [esi+0x30],ebp
  410466:	or     eax,esp
  410468:	and    esp,0x56f6e7d8
  41046e:	mov    esi,0x37037ab5
  410473:	(bad)  
  410474:	adc    eax,0x6f0b8bab
  410479:	mov    ebp,0x452c9391
  41047e:	mov    ecx,0x5f97d499
  410483:	push   cs
  410484:	push   ds
  410485:	repnz gs inc esp
  410488:	rcl    DWORD PTR [ebp-0x7b],cl
  41048b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41048c:	pop    ebx
  41048d:	pop    ss
  41048e:	inc    edi
  41048f:	cdq    
  410490:	out    0xf2,eax
  410492:	mov    dh,0x60
  410494:	and    BYTE PTR [edx+0x44],al
  410497:	aad    0x47
  410499:	jo     0x41047e
  41049b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41049c:	arpl   si,bx
  41049e:	xor    BYTE PTR [ecx-0x70],ah
  4104a1:	xlat   BYTE PTR ds:[ebx]
  4104a2:	or     eax,0xb921cf9e
  4104a7:	push   es
  4104a8:	loop   0x410431
  4104aa:	dec    edi
  4104ab:	mov    ebx,0xad2f1763
  4104b0:	daa    
  4104b1:	out    dx,al
  4104b2:	add    BYTE PTR [ebx],al
  4104b4:	pushf  
  4104b5:	jg     0x410487
  4104b7:	xlat   BYTE PTR ds:[ebx]
  4104b8:	add    ch,BYTE PTR [ebx]
  4104ba:	mov    bl,0x2e
  4104bc:	or     al,0x1
  4104be:	jae    0x410464
  4104c0:	js     0x41053e
  4104c2:	mov    ds:0x2573a82d,al
  4104c7:	add    edx,edx
  4104c9:	xlat   BYTE PTR ds:[ebx]
  4104ca:	inc    ebp
  4104cb:	adc    eax,0x1de9190d
  4104d0:	xchg   ebx,eax
  4104d1:	push   ss
  4104d2:	sub    BYTE PTR [esi],0x26
  4104d5:	cli    
  4104d6:	jmp    0xe5aa80d4
  4104db:	(bad)  
  4104dc:	cmp    DWORD PTR [ecx+0x42631652],edx
  4104e2:	into   
  4104e3:	pop    es
  4104e4:	mov    al,ds:0x9f5b8415
  4104e9:	adc    BYTE PTR [ebx],dl
  4104eb:	int3   
  4104ec:	je     0x41050b
  4104ee:	push   ebx
  4104ef:	mov    ds:0x84837443,eax
  4104f4:	ds xchg ecx,eax
  4104f6:	xor    BYTE PTR [edx+0x7069bd45],dh
  4104fc:	fidivr WORD PTR [ecx]
  4104fe:	add    sp,ax
  410501:	dec    ebp
  410502:	retf   0x15d1
  410505:	cmc    
  410506:	hlt    
  410507:	or     eax,0x1d056199
  41050c:	push   esi
  41050d:	sub    DWORD PTR ds:[eax-0x5],esi
  410511:	mov    ss,edi
  410513:	mov    ecx,0x68a7e87a
  410518:	sub    DWORD PTR [edi+0x6f],edx
  41051b:	mov    al,0x38
  41051d:	scas   al,BYTE PTR es:[edi]
  41051e:	add    eax,0xbd8d84b0
  410523:	ja     0x410503
  410525:	jl     0x41059d
  410527:	adc    eax,0xd9d0db47
  41052c:	jb     0x41052f
  41052e:	leave  
  41052f:	pop    ss
  410530:	xor    ch,al
  410532:	cmp    BYTE PTR [edi+0x186aaf85],dh
  410538:	cmp    DWORD PTR [edi+0x2d],eax
  41053b:	js     0x410518
  41053d:	cmp    al,0x3
  41053f:	sbb    DWORD PTR [ebp+edi*4+0x4675f16c],ebp
  410546:	inc    ecx
  410547:	imul   eax,DWORD PTR [ecx-0x1888fdb4],0x1bbea8de
  410551:	fiadd  WORD PTR [ecx]
  410553:	xchg   esi,eax
  410554:	jbe    0x410592
  410556:	fmulp  st(5),st
  410558:	mov    ch,0xdf
  41055a:	mov    bl,0xff
  41055c:	test   al,0xff
  41055e:	jo     0x410561
  410560:	dec    esp
  410561:	xchg   esp,eax
  410562:	(bad)  
  410563:	aam    0xf4
  410565:	mov    al,ds:0xdb9f05c9
  41056a:	xchg   edx,eax
  41056b:	pop    ebp
  41056c:	call   0x326c:0xf3e83692
  410573:	pop    es
  410574:	retf   0xe3d9
  410577:	mov    ch,0x8d
  410579:	mov    al,BYTE PTR [ebp+0x1d]
  41057c:	push   ebx
  41057d:	mov    edx,0xc6f851fc
  410582:	xor    eax,0x213c6304
  410587:	les    edx,FWORD PTR es:[esi]
  41058a:	cmp    ebx,0xee832cf9
  410590:	pop    eax
  410591:	hlt    
  410592:	ficom  DWORD PTR [esi-0x37b1ce56]
  410598:	out    0xe,eax
  41059a:	xchg   esp,eax
  41059b:	imul   ecx,DWORD PTR [ecx-0x4e],0x1d
  41059f:	sub    esp,DWORD PTR [ebp-0x69d496c7]
  4105a5:	inc    ebx
  4105a6:	test   al,0xe1
  4105a8:	in     al,dx
  4105a9:	push   edx
  4105aa:	inc    ebp
  4105ab:	push   ss
  4105ac:	mov    dh,0xe0
  4105ae:	push   esi
  4105af:	push   ecx
  4105b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b1:	in     eax,dx
  4105b2:	adc    DWORD PTR [eax],edi
  4105b4:	in     eax,0x67
  4105b6:	or     BYTE PTR [ecx-0x19],cl
  4105b9:	jle    0x410596
  4105bb:	popa   
  4105bc:	scas   eax,DWORD PTR es:[edi]
  4105bd:	cmp    bl,ah
  4105bf:	dec    edx
  4105c0:	aad    0x2b
  4105c2:	mov    edx,DWORD PTR [ebp+0x7deb5155]
  4105c8:	pmulhuw mm6,QWORD PTR [ebx]
  4105cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105cc:	xchg   ecx,eax
  4105cd:	cli    
  4105ce:	sub    cl,ch
  4105d0:	xchg   edx,eax
  4105d1:	retf   
  4105d2:	xchg   edx,eax
  4105d3:	jb     0x410632
  4105d5:	xor    al,0x2d
  4105d7:	xchg   esp,edi
  4105d9:	lea    ecx,[esi+0x2b42c9e6]
  4105df:	xchg   ebx,eax
  4105e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e1:	mov    edi,0x22df7ab1
  4105e6:	adc    ebp,eax
  4105e8:	pop    edx
  4105e9:	jmp    0xb3c33a26
  4105ee:	inc    edi
  4105ef:	fidivr WORD PTR ss:[eax+0x41]
  4105f3:	pop    ss
  4105f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f5:	shl    BYTE PTR [ebx+0x2361896c],1
  4105fb:	mov    bh,0xd8
  4105fd:	pusha  
  4105fe:	lods   al,BYTE PTR ds:[esi]
  4105ff:	sar    DWORD PTR [ecx+0xe],0xc6
  410603:	adc    bh,dh
  410605:	or     BYTE PTR [edi+0x0],0x78
  410609:	fisub  WORD PTR [eax+0x35bb3b78]
  41060f:	aas    
  410610:	jg     0x4105fc
  410612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410613:	sub    ecx,DWORD PTR [ebx-0x6c5345ab]
  410619:	mov    WORD PTR [eax-0x6ea1c346],?
  41061f:	ins    BYTE PTR es:[edi],dx
  410620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410621:	push   ecx
  410622:	mov    ch,0x73
  410624:	popa   
  410625:	mov    bl,0xdb
  410627:	pop    edx
  410628:	mov    WORD PTR [eax],cs
  41062a:	pop    ebx
  41062b:	jp     0x4105f7
  41062d:	mov    ch,BYTE PTR [edi+0x3e]
  410630:	cmp    ecx,ebx
  410632:	test   eax,0xe01b83b8
  410637:	mov    al,ds:0x1bb2d739
  41063c:	cmp    cl,BYTE PTR [edi-0x33]
  41063f:	push   edx
  410640:	mov    BYTE PTR [edi+0x55],ah
  410643:	xchg   edx,eax
  410644:	xlat   BYTE PTR ds:[ebx]
  410645:	inc    edi
  410646:	lock add BYTE PTR [edi],0xf2
  41064a:	fstp   QWORD PTR [ecx+0x38]
  41064d:	(bad)  
  41064e:	daa    
  41064f:	sub    eax,DWORD PTR [edi]
  410651:	nop
  410652:	mov    eax,ds:0x67dabcd9
  410657:	pop    edx
  410658:	xor    ebp,DWORD PTR [ebx]
  41065a:	mov    ds:0x9f93baba,eax
  41065f:	mov    ah,0xef
  410661:	into   
  410662:	mov    al,ds:0x1e9bb40b
  410667:	sbb    DWORD PTR [ebx],edi
  410669:	dec    eax
  41066a:	je     0x410619
  41066c:	jp     0x4106a5
  41066e:	scas   al,BYTE PTR es:[edi]
  41066f:	rcr    BYTE PTR [edx-0x43de7433],1
  410675:	pop    edx
  410676:	fcmovbe st,st(5)
  410678:	aas    
  410679:	stos   DWORD PTR es:[edi],eax
  41067a:	push   esi
  41067b:	or     eax,0x6d222cb1
  410680:	and    DWORD PTR [eax+0x44],ebp
  410683:	repz push cs
  410685:	push   edx
  410686:	retf   
  410687:	mov    al,ds:0x1510e4e2
  41068c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41068d:	push   ss
  41068e:	sub    DWORD PTR [edi+0x5ac12548],eax
  410694:	ss xchg ecx,eax
  410696:	aaa    
  410697:	xchg   ebp,esi
  410699:	lds    ebp,FWORD PTR [ebx+ebx*1]
  41069c:	push   0xffffffd5
  41069e:	mov    esi,0x9de856ed
  4106a3:	pop    esi
  4106a4:	add    al,0xa3
  4106a6:	mov    ds:0xbca5518,al
  4106ab:	sub    BYTE PTR [eax+0x50],bh
  4106ae:	popa   
  4106af:	xchg   ecx,eax
  4106b0:	push   edx
  4106b1:	push   edx
  4106b2:	pop    ds
  4106b3:	jmp    0x9543f74a
  4106b8:	dec    ecx
  4106b9:	in     al,dx
  4106ba:	jnp    0x4106fc
  4106bc:	cs test al,0xd5
  4106bf:	jmp    0x9090:0x45ea244a
  4106c6:	inc    ecx
  4106c7:	xor    esi,DWORD PTR [ebx]
  4106c9:	mov    ah,0xe5
  4106cb:	icebp  
  4106cc:	mov    ch,0x83
  4106ce:	pop    ds
  4106cf:	xor    ebx,DWORD PTR [edx]
  4106d1:	pop    ss
  4106d2:	xor    ebp,edx
  4106d4:	lea    ebp,[esi+0x6]
  4106d7:	stc    
  4106d8:	test   bh,dl
  4106da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106db:	es sbb esp,0xffffffb1
  4106df:	mov    dl,0x97
  4106e1:	inc    edi
  4106e2:	adc    dl,bh
  4106e4:	test   BYTE PTR [edx],bh
  4106e6:	mov    al,ds:0x25583de4
  4106eb:	clc    
  4106ec:	cmc    
  4106ed:	and    eax,0x49243845
  4106f2:	mov    dh,0xf7
  4106f4:	and    eax,0x45658002
  4106f9:	mov    cl,0x1a
  4106fb:	ror    BYTE PTR [eax+ecx*1-0x2a45db78],cl
  410702:	pop    esi
  410703:	cmp    eax,0x6b0ea6c7
  410708:	pop    edi
  410709:	(bad)  
  41070a:	loope  0x41074d
  41070c:	loopne 0x41075d
  41070e:	add    eax,0x9295e46
  410713:	xchg   ebp,eax
  410714:	or     esi,ebp
  410716:	push   edx
  410717:	jl     0x410742
  410719:	add    eax,0x6b537b9e
  41071e:	lods   al,BYTE PTR ds:[esi]
  41071f:	and    esi,DWORD PTR [ebp+0x706133ce]
  410725:	mov    ecx,DWORD PTR [ebx+0xe]
  410728:	dec    esp
  410729:	lods   al,BYTE PTR ds:[esi]
  41072a:	leave  
  41072b:	(bad)
  41072e:	jmp    0x410762
  410730:	adc    ecx,eax
  410732:	jne    0x4106df
  410734:	out    0x85,al
  410736:	adc    al,0x5
  410738:	shr    DWORD PTR [edi],cl
  41073a:	cmp    edx,DWORD PTR [esi]
  41073c:	lahf   
  41073d:	sti    
  41073e:	(bad)  
  41073f:	jge    0x4106cd
  410741:	pop    ds
  410742:	dec    esp
  410743:	dec    ebx
  410744:	push   0xffffffa1
  410746:	fwait
  410747:	shl    dh,0x85
  41074a:	lahf   
  41074b:	xor    eax,0xd4efae2c
  410750:	shl    DWORD PTR [esi],cl
  410752:	mov    DWORD PTR [eax],edi
  410754:	js     0x41078e
  410756:	inc    edx
  410757:	sub    cl,BYTE PTR [eax]
  410759:	fst    QWORD PTR [edx-0x6706e291]
  41075f:	jae    0x4107d5
  410761:	jnp    0x4106f4
  410763:	loopne 0x4107dc
  410765:	add    dl,BYTE PTR [ebp-0x24]
  410768:	xchg   ah,dh
  41076a:	mov    ebx,0xc5d6da07
  41076f:	cld    
  410770:	call   FWORD PTR [eax+ebp*1]
  410773:	sub    al,0x43
  410775:	je     0x41071f
  410777:	mov    esi,0xbd815782
  41077c:	xchg   dl,ah
  41077e:	ret    
  41077f:	xchg   ebx,eax
  410780:	pop    edi
  410781:	pop    edi
  410782:	xchg   edi,eax
  410783:	push   ss
  410784:	jmp    0xc656:0x87c680af
  41078b:	jnp    0x410723
  41078d:	add    al,0x58
  41078f:	fdiv   QWORD PTR [ecx-0x32]
  410792:	or     BYTE PTR [esi],al
  410794:	pop    esi
  410795:	sti    
  410796:	loope  0x410735
  410798:	jns    0x4107db
  41079a:	jge    0x410750
  41079c:	(bad)
  41079f:	ror    DWORD PTR [eax-0x7b],cl
  4107a2:	push   es
  4107a3:	mov    ds:0x38a81d4f,eax
  4107a8:	cmc    
  4107a9:	pusha  
  4107aa:	test   BYTE PTR [ebx+0x1ee52527],al
  4107b0:	sub    bl,BYTE PTR [ecx]
  4107b2:	pop    ecx
  4107b3:	jo     0x41076a
  4107b5:	adc    al,0xc0
  4107b7:	xchg   ecx,eax
  4107b8:	mov    edi,0x96dd7292
  4107bd:	es and al,0x5d
  4107c0:	or     eax,0x37f879b6
  4107c5:	inc    esp
  4107c6:	rol    DWORD PTR [ecx+0x38257702],0x3c
  4107cd:	xor    al,BYTE PTR [esi+ecx*8]
  4107d0:	lds    esi,FWORD PTR [ecx]
  4107d2:	and    eax,0x7ebb7727
  4107d7:	sub    ecx,edx
  4107d9:	shr    BYTE PTR [eax],1
  4107db:	outs   dx,DWORD PTR ds:[esi]
  4107dc:	std    
  4107dd:	jns    0x41082b
  4107df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e0:	retf   0x6401
  4107e3:	popa   
  4107e4:	mov    al,0x30
  4107e6:	and    al,0x8a
  4107e8:	pop    edi
  4107e9:	cmp    esi,DWORD PTR [ecx+0xa]
  4107ec:	cld    
  4107ed:	int    0x34
  4107ef:	(bad)  
  4107f0:	retf   0xa7a3
  4107f3:	inc    ecx
  4107f4:	das    
  4107f5:	mov    ah,0xf
  4107f7:	int    0x9d
  4107f9:	push   ebx
  4107fa:	retf   
  4107fb:	ret    
  4107fc:	ss aas 
  4107fe:	sub    BYTE PTR [esi+0x54],0x4c
  410802:	popf   
  410803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410805:	aaa    
  410806:	scas   al,BYTE PTR es:[edi]
  410807:	jne    0x4107ac
  410809:	outs   dx,DWORD PTR ds:[esi]
  41080a:	jae    0x410852
  41080c:	mov    ah,BYTE PTR ds:0xe34d2174
  410812:	ret    0x3002
  410815:	imul   ecx,DWORD PTR [ecx+0x32],0x2f
  410819:	sahf   
  41081a:	ret    
  41081b:	clc    
  41081c:	lods   eax,DWORD PTR ds:[esi]
  41081d:	inc    esp
  41081e:	xor    edx,esi
  410820:	xor    esp,DWORD PTR [ecx]
  410822:	push   ss
  410823:	pop    eax
  410824:	inc    ebx
  410825:	xchg   esp,eax
  410826:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  410828:	jne    0x41082e
  41082a:	inc    esi
  41082b:	add    ch,BYTE PTR [esi+0x2bd7acf0]
  410831:	xchg   edi,eax
  410832:	push   es
  410833:	add    esi,esi
  410835:	xchg   esp,eax
  410836:	sbb    eax,0x12fef268
  41083b:	fmul   st(5),st
  41083d:	daa    
  41083e:	out    0x57,eax
  410840:	cmc    
  410841:	mov    ds:0x498da9e7,eax
  410846:	inc    edi
  410847:	jno    0x4107cd
  410849:	rol    DWORD PTR [ebp+0x7caf05a9],0xce
  410850:	mov    cl,0xff
  410852:	jecxz  0x41082d
  410854:	hlt    
  410855:	mov    eax,0xe741ad54
  41085a:	sub    cl,BYTE PTR [eax+0x4039280b]
  410860:	inc    esi
  410861:	data16 cs fwait
  410864:	xor    dh,BYTE PTR [eax-0x5f]
  410867:	fs test dh,al
  41086a:	pop    edi
  41086b:	sahf   
  41086c:	int    0xe3
  41086e:	int3   
  41086f:	das    
  410870:	pop    edi
  410871:	inc    esi
  410872:	inc    esp
  410873:	int    0xd5
  410875:	jmp    0x777d6ebe
  41087a:	sub    BYTE PTR [eax-0x79320858],dl
  410880:	lods   al,BYTE PTR ds:[esi]
  410881:	das    
  410882:	jbe    0x41089c
  410884:	leave  
  410885:	adc    ah,dl
  410887:	loopne 0x4108be
  410889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088a:	(bad)  
  41088c:	int    0x48
  41088e:	mov    ecx,0x53c0c3f6
  410893:	push   0x18
  410895:	fs mov esi,0xa1182e0f
  41089b:	or     al,0xdf
  41089d:	or     bl,bh
  41089f:	ds loope 0x41087a
  4108a2:	mov    cl,0xe5
  4108a4:	sbb    al,0x21
  4108a6:	push   ebx
  4108a7:	repz jnp 0x410904
  4108aa:	mov    ah,0x5f
  4108ac:	adc    bl,BYTE PTR ds:0x2114f4e7
  4108b2:	sub    eax,0x2b5bbc6
  4108b7:	adc    BYTE PTR [ebp+0x287cb1d2],dl
  4108bd:	xchg   ecx,eax
  4108be:	xchg   esp,eax
  4108bf:	xor    ebp,DWORD PTR [ebx-0x12]
  4108c2:	mov    ah,0xc8
  4108c4:	jne    0x4108c0
  4108c6:	xor    ah,cl
  4108c8:	pop    edi
  4108c9:	sbb    ah,BYTE PTR [eax-0x77]
  4108cc:	mov    al,ds:0x8a80038f
  4108d1:	adc    eax,0x5bb85cb7
  4108d6:	(bad)  [ecx]
  4108d8:	sub    cl,BYTE PTR [esi]
  4108da:	lahf   
  4108db:	icebp  
  4108dc:	or     ebp,DWORD PTR [edi-0x11]
  4108df:	cs out 0xb9,eax
  4108e2:	nop
  4108e3:	loope  0x41093f
  4108e5:	lds    edx,FWORD PTR [edi+0x7f29fd17]
  4108eb:	and    bh,BYTE PTR [eax-0x7f241168]
  4108f1:	adc    eax,0xc8ea3f00
  4108f6:	loope  0x410883
  4108f8:	inc    edi
  4108f9:	into   
  4108fa:	call   0x3641fe25
  4108ff:	or     eax,0x3f7b742d
  410904:	inc    esi
  410905:	pop    edi
  410906:	xchg   ecx,eax
  410907:	sbb    edx,DWORD PTR [ebx]
  410909:	fmul   QWORD PTR [eax+0x637e9969]
  41090f:	lods   al,BYTE PTR ds:[esi]
  410910:	popa   
  410911:	loop   0x410955
  410913:	mov    ah,0xdb
  410915:	loop   0x4108fd
  410917:	rcl    BYTE PTR [edi],cl
  410919:	dec    eax
  41091a:	into   
  41091b:	ins    DWORD PTR es:[edi],dx
  41091c:	pushf  
  41091d:	mov    WORD PTR [ecx+0x1c941d08],cs
  410923:	jbe    0x4108c0
  410925:	mov    ds:0xb7a231ce,eax
  41092a:	xlat   BYTE PTR ds:[ebx]
  41092b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41092c:	jmp    0x4501:0xde53ed2
  410933:	jmp    0xc43bd04d
  410938:	popf   
  410939:	push   ds
  41093a:	test   al,0x20
  41093c:	push   ecx
  41093d:	inc    edx
  41093e:	xchg   ebx,eax
  41093f:	int    0x51
  410941:	push   0x47ece5c9
  410946:	dec    edi
  410947:	mov    bh,BYTE PTR [esi-0x91a0a07]
  41094d:	cmp    DWORD PTR [ebx],ebp
  41094f:	(bad)  
  410951:	mov    ch,0xf2
  410953:	scas   al,BYTE PTR es:[edi]
  410954:	jno    0x41092a
  410956:	scas   al,BYTE PTR es:[edi]
  410957:	sbb    BYTE PTR [esi-0x7c],ch
  41095a:	cmp    al,0x8d
  41095c:	xchg   edx,eax
  41095d:	adc    dl,bl
  41095f:	jge    0x41096b
  410961:	stos   BYTE PTR es:[edi],al
  410962:	mov    esp,0x19566d1d
  410967:	xor    al,0x7b
  410969:	add    DWORD PTR [ebx],esp
  41096b:	(bad)  
  41096c:	cli    
  41096d:	inc    esi
  41096e:	sub    eax,0x7ffc02fb
  410973:	in     eax,0xcd
  410975:	pop    ebx
  410976:	ret    
  410977:	int    0x9b
  410979:	push   ds
  41097a:	mov    edx,0xed62da46
  41097f:	adc    bh,BYTE PTR [edi+0x3dc33cec]
  410985:	pushf  
  410986:	in     al,0xb0
  410988:	jmp    0x2dfa:0xbd2a5290
  41098f:	int3   
  410990:	jmp    0x44de:0x596a179e
  410997:	(bad)  
  410999:	lock adc al,0x5a
  41099c:	(bad)  
  41099e:	jp     0x410954
  4109a0:	ret    
  4109a1:	test   BYTE PTR [edi+0x3f],dl
  4109a4:	jecxz  0x4109f3
  4109a6:	cld    
  4109a7:	je     0x41098e
  4109a9:	jae    0x4109f4
  4109ab:	clc    
  4109ac:	std    
  4109ad:	adc    BYTE PTR [edx+0xe],0x26
  4109b1:	loope  0x41094f
  4109b3:	dec    esp
  4109b4:	pop    ebp
  4109b5:	dec    ecx
  4109b6:	ds jmp 0x28da:0xaa2ad8da
  4109be:	mov    WORD PTR [edx-0x27],cs
  4109c1:	xchg   ebx,eax
  4109c2:	repz push 0xe219d117
  4109c8:	push   eax
  4109c9:	cmp    ebp,DWORD PTR [ebp*4+0x6fba8c54]
  4109d0:	outs   dx,DWORD PTR ds:[esi]
  4109d1:	iret   
  4109d2:	scas   eax,DWORD PTR es:[edi]
  4109d3:	push   0x3c
  4109d5:	dec    ecx
  4109d6:	popa   
  4109d7:	inc    esi
  4109d8:	out    dx,al
  4109d9:	jb     0x410a36
  4109db:	call   0x74c2d952
  4109e0:	scas   al,BYTE PTR es:[edi]
  4109e1:	in     eax,dx
  4109e2:	popf   
  4109e3:	or     al,0x80
  4109e5:	into   
  4109e6:	mov    esi,DWORD PTR [ebp*1-0x334f2a78]
  4109ed:	dec    eax
  4109ee:	inc    edi
  4109ef:	repnz pop ebp
  4109f1:	test   bl,ah
  4109f3:	loop   0x410990
  4109f5:	lods   al,BYTE PTR ds:[esi]
  4109f6:	out    0x33,al
  4109f8:	arpl   WORD PTR [edx],si
  4109fa:	(bad)  
  4109fb:	xbegin 0xccba8253
  410a01:	(bad)  
  410a02:	addr16 jae 0x4109cb
  410a05:	cmp    DWORD PTR [ebp+0x77821154],ecx
  410a0b:	test   eax,0x308e12fc
  410a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a11:	std    
  410a12:	mov    ebp,0x7639f2f5
  410a17:	push   esi
  410a18:	cs pop edx
  410a1a:	push   ss
  410a1b:	das    
  410a1c:	bound  esp,QWORD PTR [edx-0x7575b652]
  410a22:	jl     0x4109ea
  410a24:	dec    ebp
  410a25:	test   DWORD PTR [eax+0x30c3033e],0x77cc085a
  410a2f:	inc    ebp
  410a30:	cld    
  410a31:	call   0x45b40b9d
  410a36:	cmp    BYTE PTR [ecx+0x2ed6f27a],ch
  410a3c:	mov    bh,0x70
  410a3e:	or     ah,BYTE PTR [ebp-0x6d]
  410a41:	aaa    
  410a42:	jl     0x410ac0
  410a44:	fs dec eax
  410a46:	or     al,0xe4
  410a48:	mov    ebp,0x4e1f5433
  410a4d:	jmp    0x4109f3
  410a4f:	pop    ebp
  410a50:	(bad)  
  410a51:	pop    ebx
  410a52:	fcomp  QWORD PTR [ebx]
  410a54:	dec    ebx
  410a55:	pop    edi
  410a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a57:	jbe    0x410aca
  410a59:	dec    eax
  410a5a:	inc    esp
  410a5b:	sbb    DWORD PTR [esi+0x7b6c7c3c],0x4b
  410a62:	mov    gs,WORD PTR [ebx]
  410a64:	sub    DWORD PTR [esi],ecx
  410a66:	xlat   BYTE PTR ds:[ebx]
  410a67:	add    BYTE PTR [esi],dh
  410a69:	xchg   edi,eax
  410a6a:	jg     0x4109ef
  410a6c:	mov    ?,WORD PTR [ebp+0x66ae8fbc]
  410a72:	xlat   BYTE PTR ds:[ebx]
  410a73:	arpl   WORD PTR [ecx+eiz*8-0x53],si
  410a77:	leave  
  410a78:	stc    
  410a79:	jbe    0x410a32
  410a7b:	mov    ecx,0x9da8498c
  410a80:	and    al,0xac
  410a82:	and    al,0xc2
  410a84:	(bad)  
  410a85:	(bad)  
  410a87:	sub    DWORD PTR [ecx],edx
  410a89:	fadd   st,st(7)
  410a8b:	std    
  410a8c:	out    0x7b,al
  410a8e:	loop   0x410b0c
  410a90:	mov    cl,0x65
  410a92:	xchg   ecx,eax
  410a93:	enter  0x76e9,0x27
  410a97:	jmp    0x410a6c
  410a99:	dec    ebx
  410a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a9b:	into   
  410a9c:	mov    WORD PTR [eax],ds
  410a9e:	inc    esp
  410a9f:	xchg   esi,eax
  410aa0:	xchg   ebp,eax
  410aa1:	pop    ebx
  410aa2:	repz adc ah,BYTE PTR [eax]
  410aa5:	scas   al,BYTE PTR es:[edi]
  410aa6:	mov    edi,0xff371aa5
  410aab:	jo     0x410b29
  410aad:	push   0x1e
  410aaf:	div    DWORD PTR ds:0x5f7c7ba
  410ab5:	and    bl,BYTE PTR [esi-0x2b395aeb]
  410abb:	push   es
  410abc:	test   eax,0x3a1022e3
  410ac1:	test   DWORD PTR [esi+0x5c0b5ecf],edx
  410ac7:	loopne 0x410a53
  410ac9:	lea    ecx,[edi+0x5b]
  410acc:	in     al,dx
  410acd:	or     BYTE PTR [ebx+0x2f51d96f],al
  410ad3:	pop    ss
  410ad4:	stos   DWORD PTR es:[edi],eax
  410ad5:	(bad)  
  410ad6:	dec    edi
  410ad7:	adc    BYTE PTR ds:0x9fd5eced,al
  410add:	call   0x75d6eae2
  410ae2:	xor    eax,0x3d168321
  410ae7:	jecxz  0x410acb
  410ae9:	pop    eax
  410aea:	sub    edi,DWORD PTR [ebx+0x58]
  410aed:	cmp    al,0x2b
  410aef:	cs jmp 0x83d5:0x9e59a62e
  410af7:	push   cs
  410af8:	xchg   edi,eax
  410af9:	sbb    eax,0xb64f8ba9
  410afe:	mov    esi,0xdc0035bb
  410b03:	test   BYTE PTR [ebp+0x72],ah
  410b06:	inc    ebp
  410b07:	mov    ah,0xc9
  410b09:	test   al,0xdf
  410b0b:	inc    ebx
  410b0c:	xchg   edi,eax
  410b0d:	in     eax,0x71
  410b0f:	cmp    bh,BYTE PTR [esi-0x208b4ad]
  410b15:	xchg   ecx,eax
  410b16:	push   esp
  410b17:	dec    edx
  410b18:	push   0x53
  410b1a:	cmp    BYTE PTR [ecx+0x274ecbb4],bl
  410b20:	test   al,0xc
  410b22:	lods   eax,DWORD PTR ds:[esi]
  410b23:	sar    DWORD PTR [ecx+0x62],1
  410b26:	jae    0x410ad6
  410b28:	pop    ss
  410b29:	push   0x65
  410b2b:	in     eax,0xeb
  410b2d:	stc    
  410b2e:	sub    al,0x94
  410b30:	push   ebp
  410b31:	enter  0x52f2,0x25
  410b35:	cmp    eax,0x62a2b3a1
  410b3a:	xchg   ecx,eax
  410b3b:	add    edi,DWORD PTR [eax-0x2ff87171]
  410b41:	scas   eax,DWORD PTR es:[edi]
  410b42:	rol    bh,cl
  410b44:	sbb    ch,dh
  410b46:	mov    al,0x18
  410b48:	push   edi
  410b49:	fisttp DWORD PTR [ebp-0x65]
  410b4c:	push   eax
  410b4d:	cwde   
  410b4e:	popa   
  410b4f:	lea    edx,[edx]
  410b51:	pop    ecx
  410b52:	in     al,0xce
  410b54:	stos   BYTE PTR es:[edi],al
  410b55:	enter  0x4595,0xfd
  410b59:	bound  edi,QWORD PTR [edi+0x35]
  410b5c:	pinsrw mm0,WORD PTR [ebx-0x4052860e],0xf1
  410b64:	mov    ebp,0xdaf0698c
  410b69:	das    
  410b6a:	or     DWORD PTR [edx],esi
  410b6c:	cmp    esp,DWORD PTR [eax]
  410b6e:	sbb    al,0xa8
  410b70:	xchg   esp,eax
  410b71:	jmp    FWORD PTR [edx]
  410b73:	dec    esi
  410b74:	or     edi,DWORD PTR [esi+0xbd144]
  410b7a:	pop    ebx
  410b7b:	mov    BYTE PTR [edx+eax*1-0x30676860],0xae
  410b83:	xchg   ebx,eax
  410b84:	in     al,dx
  410b85:	or     bh,0xf3
  410b88:	jmpw   0xb84d
  410b8c:	or     BYTE PTR ds:0x8ce46f67,dh
  410b92:	cmp    dh,dh
  410b94:	call   0xb6ccd4a2
  410b99:	cld    
  410b9a:	sub    dl,bh
  410b9c:	sub    DWORD PTR [ebx],ebx
  410b9e:	xchg   edi,eax
  410b9f:	test   eax,esi
  410ba1:	jns    0x410b7d
  410ba3:	shl    esp,cl
  410ba5:	(bad)  
  410ba6:	mov    dh,0x46
  410ba8:	fidiv  DWORD PTR [ebx-0x12]
  410bab:	cdq    
  410bac:	inc    si
  410bae:	mov    eax,DWORD PTR [ebp+eiz*1-0x42]
  410bb2:	fdiv   DWORD PTR [eax]
  410bb4:	pop    ds
  410bb5:	ret    
  410bb6:	mov    bh,BYTE PTR [esi-0x1f8f837b]
  410bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bbd:	inc    ebx
  410bbe:	push   0xabdacbff
  410bc3:	add    DWORD PTR ds:0x844172b8,0xac528273
  410bcd:	rol    BYTE PTR [ecx-0x2c],cl
  410bd0:	ds into 
  410bd2:	sub    BYTE PTR ds:0xf435d39d,ah
  410bd8:	inc    ebp
  410bd9:	dec    edi
  410bda:	mov    ds:0x4dd03b88,eax
  410bdf:	stos   DWORD PTR es:[edi],eax
  410be0:	cmp    al,0xc3
  410be2:	pop    ebp
  410be3:	jle    0x410b69
  410be5:	lea    edi,[esi]
  410be7:	cmp    eax,0x900c6ef8
  410bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bed:	loope  0x410c36
  410bef:	outs   dx,DWORD PTR ds:[esi]
  410bf0:	xor    BYTE PTR [edx+ebp*4],ch
  410bf3:	mov    ah,0x45
  410bf5:	cdq    
  410bf6:	retf   
  410bf7:	xchg   BYTE PTR gs:[ebx-0x634d9a8a],al
  410bfe:	and    al,0x8a
  410c00:	popf   
  410c01:	push   ecx
  410c02:	cmp    al,0x9d
  410c04:	cmp    DWORD PTR [edx],0xffffffba
  410c07:	aad    0x77
  410c09:	cdq    
  410c0a:	mov    ss,WORD PTR [ebx+0x17]
  410c0d:	sbb    BYTE PTR [eax],ah
  410c0f:	jbe    0x410c5d
  410c11:	std    
  410c12:	xor    al,0x8a
  410c14:	push   edi
  410c15:	adc    ah,BYTE PTR [edi]
  410c17:	neg    DWORD PTR ds:0x790f3cb
  410c1d:	xor    BYTE PTR [edi-0x7c5de4b5],al
  410c23:	je     0x410c7b
  410c25:	imul   edx,DWORD PTR [ebx-0x37db3869],0x1e3bd710
  410c2f:	in     al,dx
  410c30:	fisub  WORD PTR [eax+0x463efdff]
  410c36:	bound  esi,QWORD PTR [ebp+0x7f]
  410c39:	xchg   ecx,eax
  410c3a:	mov    al,0xd0
  410c3c:	sub    DWORD PTR [eax],edi
  410c3e:	les    ebx,FWORD PTR [ecx]
  410c40:	sti    
  410c41:	(bad)
  410c44:	add    al,0xd1
  410c46:	jo     0x410c71
  410c48:	add    cl,dl
  410c4a:	push   esi
  410c4b:	fdivr  st(7),st
  410c4d:	xchg   DWORD PTR [edx+0x28],ecx
  410c50:	pop    eax
  410c51:	sbb    al,0x29
  410c53:	inc    esp
  410c54:	dec    ecx
  410c55:	push   ebx
  410c56:	enter  0xf218,0xaa
  410c5a:	xor    esi,esp
  410c5c:	add    al,BYTE PTR [esi+ecx*8+0x72]
  410c60:	ret    0x8e06
  410c63:	mov    cl,0x2a
  410c66:	jl     0x410c3f
  410c68:	hlt    
  410c69:	mov    al,0x7b
  410c6b:	cmp    edx,0xe66ea57a
  410c71:	ss (bad) 
  410c73:	retf   
  410c74:	inc    eax
  410c75:	shl    DWORD PTR [edx+0x502ffde8],1
  410c7b:	and    cl,BYTE PTR [eax+0x3bd130b4]
  410c81:	and    cl,BYTE PTR [esp+ebp*4+0x6f]
  410c85:	outs   dx,BYTE PTR ds:[esi]
  410c86:	cmovp  eax,DWORD PTR [si+0x2de3]
  410c8c:	jge    0x410cc9
  410c8e:	loopne 0x410c53
  410c90:	jbe    0x410c47
  410c92:	add    eax,0x938a269a
  410c97:	cmp    DWORD PTR [edx],ebx
  410c99:	lock dec esp
  410c9b:	and    bl,BYTE PTR [esi*4+0x2e70c576]
  410ca2:	sub    edx,DWORD PTR ds:0xc4002eeb
  410ca8:	sbb    al,0xed
  410caa:	leave  
  410cab:	sub    al,0x6d
  410cad:	mov    al,0xb3
  410caf:	loope  0x410d1e
  410cb1:	inc    edi
  410cb2:	mov    bl,0x7b
  410cb4:	rcr    DWORD PTR [ebx-0x1eda7697],1
  410cba:	pushf  
  410cbb:	into   
  410cbc:	jecxz  0x410d1b
  410cbe:	add    BYTE PTR [esi+0xd6d31e6],bh
  410cc4:	mov    ds:0x16f8e792,al
  410cc9:	neg    DWORD PTR [edi+0x1201f0de]
  410ccf:	jmp    0xeb40:0xa1c2ada6
  410cd6:	inc    edx
  410cd7:	mov    ds:0x7c7b6a6d,eax
  410cdc:	out    0xd8,al
  410cde:	sbb    al,0x9e
  410ce0:	lahf   
  410ce1:	jns    0x410c90
  410ce3:	lds    ecx,FWORD PTR [esi]
  410ce5:	mov    ecx,0xc8f240b1
  410cea:	fld    QWORD PTR [esp+ebp*2]
  410ced:	sub    DWORD PTR [ecx+ecx*1+0x74],0x74
  410cf2:	mov    edi,0x880b1cce
  410cf7:	(bad)  
  410cf8:	fimul  WORD PTR [eax]
  410cfa:	mov    ds:0x778c6f49,al
  410cff:	pushf  
  410d00:	ds jae 0x410cef
  410d03:	cli    
  410d04:	and    al,0xcf
  410d06:	pushf  
  410d07:	xlat   BYTE PTR ds:[ebx]
  410d08:	mov    ds:0xe61081b5,al
  410d0d:	jmp    0x13fb:0x9ee2a795
  410d14:	jmp    0x7f19:0xee5006d1
  410d1b:	hlt    
  410d1c:	push   esp
  410d1d:	xchg   BYTE PTR [ebp-0x13cc1a4c],bl
  410d23:	jge    0x410d21
  410d25:	mov    bl,0xf3
  410d27:	aas    
  410d28:	(bad)  
  410d29:	iret   
  410d2a:	sub    eax,DWORD PTR [ebx]
  410d2c:	js     0x410cb7
  410d2e:	loopne 0x410cf0
  410d30:	add    al,0x14
  410d32:	xchg   ebx,eax
  410d33:	push   eax
  410d34:	jl     0x410d2f
  410d36:	adc    DWORD PTR [ecx+edx*2+0xa],edi
  410d3a:	pop    ebx
  410d3b:	fucomp st(5)
  410d3d:	jecxz  0x410d68
  410d3f:	push   0x106de72d
  410d44:	popa   
  410d45:	add    esp,ebp
  410d47:	rcl    BYTE PTR [ebx+0x35],cl
  410d4a:	push   ebx
  410d4b:	clc    
  410d4c:	lods   eax,DWORD PTR ds:[esi]
  410d4d:	sbb    al,0x3c
  410d4f:	jmp    0x410cfb
  410d51:	call   0x879255cf
  410d56:	push   edi
  410d57:	xchg   esi,eax
  410d58:	lods   eax,DWORD PTR ds:[esi]
  410d59:	pop    esi
  410d5a:	das    
  410d5b:	stc    
  410d5c:	push   ds
  410d5d:	std    
  410d5e:	mov    esp,0xc7ab53e
  410d63:	fdivr  st,st(2)
  410d65:	push   edx
  410d66:	and    BYTE PTR [ecx-0x5d],0xaa
  410d6a:	or     eax,ecx
  410d6c:	sub    DWORD PTR [ebx],eax
  410d6e:	xor    DWORD PTR [ebx+0x1cf0c5d6],ebp
  410d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d75:	gs cmp BYTE PTR es:[esp],bl
  410d7a:	sub    al,0x1
  410d7c:	aas    
  410d7d:	or     DWORD PTR [esi],ebx
  410d7f:	sbb    esp,ebx
  410d81:	inc    eax
  410d82:	xor    DWORD PTR [ebx+esi*4],0x37
  410d86:	jge    0x410dcb
  410d88:	xchg   ebp,eax
  410d89:	jae    0x410d7e
  410d8b:	imul   eax,DWORD PTR [edi-0x7c2ba054],0x4bc07087
  410d95:	jo     0x410d4c
  410d97:	add    eax,0x2b387f28
  410d9c:	cli    
  410d9d:	mov    dh,BYTE PTR [ebx+0x25]
  410da0:	loopne 0x410d87
  410da2:	jnp    0x410e1c
  410da4:	push   cs
  410da5:	dec    ecx
  410da6:	xchg   ch,dh
  410da8:	hlt    
  410da9:	dec    esp
  410daa:	push   es
  410dab:	push   ecx
  410dac:	xlat   BYTE PTR ds:[ebx]
  410dad:	mov    al,0xd5
  410daf:	mov    al,0xc5
  410db1:	and    al,0x9d
  410db3:	xchg   ecx,eax
  410db4:	enter  0xce1c,0xf3
  410db8:	fsub   DWORD PTR [eax+0x6683c6b8]
  410dbe:	jno    0x410e35
  410dc0:	or     cl,bh
  410dc2:	mov    edx,0xb78a4433
  410dc7:	add    eax,0xc6f39b59
  410dcc:	pop    eax
  410dcd:	mov    bh,0x94
  410dcf:	and    esp,DWORD PTR [edi+esi*4]
  410dd2:	jmp    0x410dfc
  410dd4:	mov    DWORD PTR [edi+0x517d8b1],edx
  410dda:	out    0xc2,eax
  410ddc:	adc    edi,DWORD PTR [ebx+edi*4]
  410ddf:	lahf   
  410de0:	clc    
  410de1:	pop    es
  410de2:	cmp    BYTE PTR [edx+0x4bbc1c8e],ch
  410de8:	adc    esp,DWORD PTR [ebx]
  410dea:	inc    esi
  410deb:	(bad)  
  410dec:	sbb    ecx,DWORD PTR [edx+0x72db31b1]
  410df2:	cmp    ebx,DWORD PTR [ebx+0x2a]
  410df5:	pop    eax
  410df6:	pop    edx
  410df7:	adc    BYTE PTR [ebp+0x9],0x9e
  410dfb:	add    ch,BYTE PTR ds:0x9ebf481f
  410e01:	sahf   
  410e02:	xor    ecx,DWORD PTR [ebp-0xe0a8aa5]
  410e08:	mov    ah,0x25
  410e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e0b:	push   edx
  410e0c:	sbb    dl,BYTE PTR [edx-0x983fe2c]
  410e12:	mov    edi,0x52cb75a9
  410e17:	inc    esi
  410e18:	sbb    edx,DWORD PTR [edx+edx*4+0x4c]
  410e1c:	outs   dx,BYTE PTR ds:[esi]
  410e1d:	jnp    0x410de7
  410e1f:	mov    ebx,0x2e04b3b0
  410e24:	inc    ebx
  410e25:	mov    eax,ds:0x13e09ee4
  410e2a:	inc    edi
  410e2b:	push   ss
  410e2c:	(bad)  
  410e2d:	int    0x54
  410e2f:	psadbw mm2,QWORD PTR [edx]
  410e32:	dec    BYTE PTR [ebx+eax*1+0x72548f93]
  410e39:	into   
  410e3a:	addr16 pop esp
  410e3c:	sar    ah,cl
  410e3e:	mov    eax,ds:0x4cabf521
  410e43:	ror    BYTE PTR [ecx-0x11],0x38
  410e47:	loope  0x410eb3
  410e49:	xor    eax,DWORD PTR [edi]
  410e4b:	dec    esp
  410e4c:	mov    eax,0x52cdb347
  410e51:	call   0x9c27:0xbf83b9e2
  410e58:	adc    al,0xed
  410e5a:	inc    ecx
  410e5b:	sbb    eax,0xc2d1cf19
  410e60:	sub    eax,0xf4046431
  410e65:	xchg   esi,esi
  410e67:	ss inc ebp
  410e69:	pop    edx
  410e6a:	or     edi,DWORD PTR [esi+0x111ac41c]
  410e70:	xchg   ah,ch
  410e72:	pop    eax
  410e73:	std    
  410e74:	cmp    dh,0xb7
  410e77:	popa   
  410e78:	jb     0x410e82
  410e7a:	push   esp
  410e7b:	pop    ecx
  410e7c:	push   ecx
  410e7d:	adc    cl,BYTE PTR [edi]
  410e7f:	xor    al,0x9f
  410e81:	push   es
  410e82:	xor    BYTE PTR [esi],al
  410e84:	and    ch,dh
  410e86:	repz ficom DWORD PTR [esi]
  410e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e8a:	(bad)
  410e8d:	and    esp,DWORD PTR [ebp-0x39fcc30f]
  410e93:	ror    BYTE PTR [edx+0x396bd191],0xe9
  410e9a:	pop    es
  410e9b:	das    
  410e9c:	stc    
  410e9d:	fxch   st(6)
  410e9f:	(bad)  
  410ea0:	adc    al,0xdd
  410ea2:	and    bl,BYTE PTR [edi-0x4d]
  410ea5:	jg     0x410f0e
  410ea7:	push   ebp
  410ea8:	push   es
  410ea9:	ins    DWORD PTR es:[edi],dx
  410eaa:	xlat   BYTE PTR ds:[ebx]
  410eab:	inc    edi
  410eac:	cmp    ah,BYTE PTR [ebx]
  410eae:	mul    ebp
  410eb0:	cmp    cl,dh
  410eb2:	and    al,0x2f
  410eb4:	inc    ebx
  410eb5:	pop    esi
  410eb6:	pop    ecx
  410eb7:	mov    ah,0x6c
  410eb9:	leave  
  410eba:	pusha  
  410ebb:	dec    ecx
  410ebc:	das    
  410ebd:	fst    DWORD PTR [ebx]
  410ebf:	daa    
  410ec0:	and    ebp,0xd84d527d
  410ec6:	loop   0x410e5e
  410ec8:	mov    dl,0xa7
  410eca:	dec    esp
  410ecb:	or     ebx,ebp
  410ecd:	cmp    al,0xf5
  410ecf:	sti    
  410ed0:	hlt    
  410ed1:	dec    esp
  410ed2:	call   0x1f9c7f91
  410ed7:	and    cl,bl
  410ed9:	inc    edx
  410eda:	lock aam 0xe2
  410edd:	adc    cl,0x3d
  410ee0:	stos   DWORD PTR es:[edi],eax
  410ee1:	ror    DWORD PTR [esi],cl
  410ee3:	or     esp,DWORD PTR [edx+ebp*1]
  410ee6:	dec    ebp
  410ee7:	ins    BYTE PTR es:[edi],dx
  410ee8:	out    0x49,eax
  410eea:	sti    
  410eeb:	pusha  
  410eec:	ret    
  410eed:	xchg   esp,eax
  410eee:	push   esp
  410eef:	push   edx
  410ef0:	imul   edi,esp,0x32
  410ef3:	loope  0x410f66
  410ef5:	xor    al,0x99
  410ef7:	inc    edi
  410ef8:	je     0x410ecf
  410efa:	adc    al,0x6a
  410efc:	ret    0x3a88
  410eff:	fs (bad) 
  410f01:	dec    eax
  410f02:	adc    al,0x6d
  410f04:	add    edx,DWORD PTR [esi+ecx*8]
  410f07:	mov    esp,0x1e87beb4
  410f0c:	dec    edi
  410f0d:	push   esp
  410f0e:	jg     0x410ed4
  410f10:	sub    al,0x12
  410f12:	and    al,0x99
  410f14:	jg     0x410ea9
  410f16:	int    0xc6
  410f18:	dec    esp
  410f19:	xchg   DWORD PTR [bx+di+0x77],ebp
  410f1d:	sub    al,BYTE PTR [edx+eiz*2-0x6784760f]
  410f24:	xchg   ebp,eax
  410f25:	(bad)  
  410f26:	mul    DWORD PTR [edi+0x7f222d3c]
  410f2c:	into   
  410f2d:	add    al,0xa0
  410f2f:	lahf   
  410f30:	fdivp  st(4),st
  410f32:	cld    
  410f33:	mov    dl,0xc7
  410f35:	push   eax
  410f36:	ret    
  410f37:	sub    ah,BYTE PTR [esi-0x3edf2be7]
  410f3d:	push   ds
  410f3e:	mov    ah,0x63
  410f40:	xchg   esp,eax
  410f41:	push   ecx
  410f42:	stos   BYTE PTR es:[edi],al
  410f43:	lahf   
  410f44:	xor    BYTE PTR fs:[ecx+0xb],dl
  410f48:	or     DWORD PTR [ebx],ecx
  410f4a:	and    BYTE PTR [edi+ecx*1+0x548ff909],cl
  410f51:	push   eax
  410f52:	fninit 
  410f54:	mov    dh,0x8b
  410f56:	dec    DWORD PTR [eax]
  410f58:	fs xchg esp,eax
  410f5a:	nop
  410f5b:	xchg   ah,ah
  410f5d:	repz scas eax,DWORD PTR es:[edi]
  410f5f:	test   al,0xe6
  410f61:	pop    ebx
  410f62:	loopne 0x410ef5
  410f64:	int    0x36
  410f66:	jge    0x410f57
  410f68:	les    esi,FWORD PTR [ebx-0x75]
  410f6b:	(bad)  
  410f6c:	lods   al,BYTE PTR ds:[esi]
  410f6d:	cmp    eax,0x80f02865
  410f72:	jle    0x410fcb
  410f74:	ss or  bl,dh
  410f77:	mov    dh,0x6c
  410f79:	int    0x86
  410f7b:	pop    ss
  410f7c:	scas   eax,DWORD PTR es:[edi]
  410f7d:	scas   al,BYTE PTR es:[edi]
  410f7e:	cmp    DWORD PTR [ebx],ebp
  410f80:	loope  0x410f63
  410f82:	fs push ss
  410f84:	and    al,0xf9
  410f86:	xor    eax,0xe84533d8
  410f8b:	rcl    ecx,0x2f
  410f8e:	lock pop es
  410f90:	in     eax,0x60
  410f92:	pop    esi
  410f93:	les    edi,FWORD PTR [edx-0x346b2312]
  410f99:	inc    esi
  410f9a:	ins    BYTE PTR es:[edi],dx
  410f9b:	rcr    bh,0xe5
  410f9e:	or     eax,0x5763bccf
  410fa3:	mov    cl,0xa8
  410fa5:	sbb    al,0xdd
  410fa7:	pop    ds
  410fa8:	lea    esi,[esi-0x167e02ae]
  410fae:	xchg   edi,eax
  410faf:	ror    DWORD PTR [bp+di+0x3904],1
  410fb4:	pop    ecx
  410fb5:	test   edx,eax
  410fb7:	cdq    
  410fb8:	or     esi,esp
  410fba:	call   0x65b59846
  410fbf:	aam    0x30
  410fc1:	inc    ecx
  410fc2:	fsub   st(7),st
  410fc4:	xchg   BYTE PTR [ebx+0x52],dl
  410fc7:	mov    esp,0xd2c7a236
  410fcc:	in     al,dx
  410fcd:	gs push ebx
  410fcf:	push   es
  410fd0:	jg     0x41103d
  410fd2:	js     0x41102f
  410fd4:	push   esi
  410fd5:	xor    al,0x54
  410fd7:	outs   dx,BYTE PTR ds:[esi]
  410fd8:	das    
  410fd9:	out    0x30,eax
  410fdb:	jns    0x410f66
  410fdd:	fchs   
  410fdf:	arpl   WORD PTR [esp+ebp*2],dx
  410fe2:	pop    ebx
  410fe3:	shr    dh,cl
  410fe5:	bound  edi,QWORD PTR [eax+0x4d0c9629]
  410feb:	inc    esp
  410fec:	or     ebx,eax
  410fee:	fisub  WORD PTR [edx+0x36574c40]
  410ff4:	adc    DWORD PTR [ecx+0x2bcab3f6],eax
  410ffa:	mov    WORD PTR [ecx+0x7],?
  410ffd:	jbe    0x410fcb
  410fff:	adc    dh,cl
  411001:	and    al,0x60
  411003:	mov    ah,0x9c
  411005:	xchg   al,dh
  411007:	sub    esp,eax
  411009:	fwait
  41100a:	bound  ebp,QWORD PTR [ecx]
  41100c:	or     ebx,edi
  41100e:	inc    ecx
  41100f:	rol    DWORD PTR [eax+ebx*2+0x9ee08d1],1
  411016:	sub    DWORD PTR [edi-0x5cde6f91],0xfffffff3
  41101d:	push   edx
  41101e:	into   
  41101f:	outs   dx,DWORD PTR ds:[esi]
  411020:	cwde   
  411021:	add    al,cl
  411023:	ffreep st(4)
  411025:	jecxz  0x411035
  411027:	std    
  411028:	push   eax
  411029:	in     eax,dx
  41102a:	push   cs
  41102b:	enter  0x2f0b,0xc0
  41102f:	inc    edi
  411030:	call   0x79b9:0xe7b683d2
  411037:	mov    edx,0xea49f42b
  41103c:	cmp    edi,DWORD PTR [ecx+0x7ebf89c6]
  411042:	xchg   esp,eax
  411043:	rol    esp,cl
  411045:	retf   0xd4da
  411048:	jmp    DWORD PTR [ecx+eax*4-0x12]
  41104c:	lea    edi,[ecx+0x7]
  41104f:	or     dh,BYTE PTR [eax+eax*8-0x582ec28d]
  411056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411057:	ror    edi,1
  411059:	inc    edx
  41105a:	sbb    esp,DWORD PTR [ebx]
  41105c:	xchg   ebp,eax
  41105d:	dec    ecx
  41105e:	jmp    DWORD PTR [edx+0x1c14c9fa]
  411064:	and    al,0x8e
  411066:	sub    BYTE PTR [edi],bh
  411068:	jl     0x4110e1
  41106a:	inc    ecx
  41106b:	pop    ebp
  41106c:	dec    edx
  41106d:	retf   
  41106e:	fwait
  41106f:	sub    bl,BYTE PTR ds:0xa9353d82
  411075:	out    dx,al
  411076:	aaa    
  411077:	xlat   BYTE PTR ds:[ebx]
  411078:	mov    bh,0x3f
  41107a:	push   0xffffffbc
  41107c:	cld    
  41107d:	or     al,BYTE PTR [edx]
  41107f:	mov    bl,0x3f
  411081:	mov    ch,0x14
  411083:	add    dh,dh
  411085:	arpl   WORD PTR [ebx],dx
  411087:	or     eax,0xe1255fad
  41108c:	fadd   st(1),st
  41108e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41108f:	inc    BYTE PTR [ebp+ebx*2-0x4d]
  411093:	scas   eax,DWORD PTR es:[edi]
  411094:	ins    DWORD PTR es:[edi],dx
  411095:	(bad)  
  411096:	cli    
  411097:	and    BYTE PTR [ebp+0x60f8f29f],0x65
  41109e:	dec    ebp
  41109f:	push   bp
  4110a1:	icebp  
  4110a2:	outs   dx,BYTE PTR ds:[esi]
  4110a3:	dec    ebx
  4110a4:	es ret 0x18bd
  4110a8:	loopne 0x4110da
  4110aa:	jae    0x4110f5
  4110ac:	add    cl,BYTE PTR [eax]
  4110ae:	jg     0x4110dc
  4110b0:	sbb    al,0xd8
  4110b2:	jb     0x4110f2
  4110b4:	scas   eax,DWORD PTR es:[edi]
  4110b5:	mov    eax,ds:0x9a069ab4
  4110ba:	mov    al,0x88
  4110bc:	gs dec edx
  4110be:	adc    al,BYTE PTR [ecx+0x8]
  4110c1:	test   al,0xad
  4110c3:	fwait
  4110c4:	lods   eax,DWORD PTR ds:[esi]
  4110c5:	push   ds
  4110c6:	div    al
  4110c8:	jg     0x4110b6
  4110ca:	jnp    0x411106
  4110cc:	dec    esi
  4110cd:	fld    DWORD PTR [esi+ebx*8]
  4110d0:	rol    DWORD PTR [ebp+0x588cfdab],cl
  4110d6:	sbb    DWORD PTR [ebx+0x72],0x4f05676a
  4110dd:	hlt    
  4110de:	xlat   BYTE PTR ds:[ebx]
  4110df:	mov    edi,0xb635dbd1
  4110e4:	push   ebx
  4110e5:	push   ss
  4110e6:	rol    ah,0x53
  4110e9:	add    eax,DWORD PTR [edx+0x28b12e80]
  4110ef:	repz push eax
  4110f1:	mov    bl,0xc7
  4110f3:	in     eax,dx
  4110f4:	or     BYTE PTR [ebp+0x38c0d692],ch
  4110fa:	adc    DWORD PTR [eax+0x1d],0xffffffbc
  4110fe:	push   ebx
  4110ff:	hlt    
  411100:	xlat   BYTE PTR ds:[ebx]
  411101:	mov    cl,0xf7
  411103:	xchg   ecx,eax
  411104:	pop    ds
  411105:	pop    ebp
  411106:	sub    eax,0x72b257d3
  41110b:	shl    BYTE PTR [ebp-0x283b9e49],0x90
  411112:	les    ecx,FWORD PTR ss:[ebp-0x1e]
  411116:	aaa    
  411117:	xchg   ebp,eax
  411118:	imul   esi,DWORD PTR [edi-0x6f052336],0x81e34b72
  411122:	lea    eax,[edx-0x22]
  411125:	imul   ebx,ecx,0xfb132b41
  41112b:	xor    eax,0xb298ab5e
  411130:	jbe    0x411166
  411132:	das    
  411133:	push   ebp
  411134:	cld    
  411135:	sbb    BYTE PTR [eax-0x26],0xe5
  411139:	shl    BYTE PTR [ecx+0x25],0x17
  41113d:	jb     0x4110d4
  41113f:	inc    ebp
  411140:	fisub  DWORD PTR [esi+esi*2+0x5ff8bae]
  411147:	and    BYTE PTR [ebp-0x6bae955c],bl
  41114d:	dec    ecx
  41114e:	xor    BYTE PTR ds:0xf0c6683a,0xbd
  411155:	dec    al
  411157:	pop    eax
  411158:	imul   ecx,DWORD PTR [ebx-0x6a],0xe09501a7
  41115f:	fs jo  0x41115b
  411162:	mov    dl,0x2
  411164:	sbb    dh,BYTE PTR [ecx+0x16]
  411167:	jns    0x41115d
  411169:	inc    ecx
  41116a:	rcl    DWORD PTR [ebx],0x5c
  41116d:	or     eax,0x40875713
  411172:	and    al,0x15
  411174:	lahf   
  411175:	xchg   BYTE PTR [edi],cl
  411177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411178:	sub    al,0x65
  41117a:	and    esp,ebp
  41117c:	clc    
  41117d:	lea    esi,ds:0x729c7daf
  411183:	aad    0xa1
  411185:	fisttp QWORD PTR [ecx]
  411187:	cmp    BYTE PTR [ebp+0x3d],ah
  41118a:	adc    ebp,DWORD PTR [ecx+0x7f0eb122]
  411190:	fsub   st(6),st
  411192:	and    eax,edx
  411194:	mov    al,0x2b
  411196:	arpl   ax,bx
  411198:	cmp    DWORD PTR ds:0x402ab05d,ebp
  41119e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41119f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a0:	pusha  
  4111a1:	(bad)  
  4111a2:	call   0x19e870f3
  4111a7:	and    BYTE PTR [eax],0xf8
  4111aa:	out    dx,al
  4111ab:	dec    esp
  4111ac:	fprem1 
  4111ae:	xchg   edx,eax
  4111af:	mov    edx,0xf2b78bcd
  4111b4:	cwde   
  4111b5:	dec    esp
  4111b6:	mov    edx,0x941a9d59
  4111bb:	add    bh,BYTE PTR [ecx]
  4111bd:	mov    ds:0x8bec6efd,eax
  4111c2:	sbb    al,0x8f
  4111c4:	enter  0x8d02,0x81
  4111c8:	dec    esi
  4111c9:	and    BYTE PTR [ebx+ebp*8],bh
  4111cc:	jmp    0xd799bde6
  4111d1:	ret    0x7f2
  4111d4:	inc    eax
  4111d5:	xchg   ebp,eax
  4111d6:	sub    eax,0x1dc701c5
  4111db:	adc    dh,bl
  4111dd:	and    eax,0xc58fc44e
  4111e2:	stos   DWORD PTR es:[edi],eax
  4111e3:	not    DWORD PTR [eax]
  4111e5:	dec    eax
  4111e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e7:	jmp    0x4111a6
  4111e9:	mov    al,0x12
  4111eb:	and    BYTE PTR [ecx-0x6445b83f],cl
  4111f1:	push   esp
  4111f2:	shl    DWORD PTR [ecx-0x32],cl
  4111f5:	nop
  4111f6:	push   ss
  4111f7:	fbld   TBYTE PTR [ebx+0x6be47f6a]
  4111fd:	jg     0x4111e7
  4111ff:	jmp    0x426559f8
  411204:	out    dx,eax
  411205:	add    DWORD PTR [edx+0x5ad08b98],esi
  41120b:	pop    ds
  41120c:	hlt    
  41120d:	adc    al,0xe3
  41120f:	xchg   esp,eax
  411210:	xchg   ebx,eax
  411211:	aas    
  411212:	stc    
  411213:	sub    eax,0xeac76d41
  411218:	cmp    eax,0x89c4bd6
  41121d:	add    BYTE PTR gs:[esi+0x5d],0x4d
  411222:	mov    edx,0xee4b85b3
  411227:	sbb    BYTE PTR ds:0x8f86e843,bl
  41122d:	inc    eax
  41122e:	jmp    0x8fa6a89e
  411233:	mov    eax,esp
  411235:	in     eax,dx
  411236:	ret    
  411237:	mov    WORD PTR [edx-0x1c],es
  41123a:	mov    al,0x54
  41123c:	arpl   si,cx
  41123e:	in     eax,0x57
  411240:	rcr    DWORD PTR [ebx-0x29c1a705],cl
  411246:	inc    esi
  411247:	xor    DWORD PTR [edx+0x1d],ebx
  41124a:	ins    DWORD PTR es:[edi],dx
  41124b:	addr16 call 0x4fb9e352
  411251:	mov    dl,BYTE PTR [ebp-0xc935eb6]
  411257:	in     eax,dx
  411258:	arpl   WORD PTR [ebx+0x6c8c8224],ax
  41125e:	cmp    DWORD PTR [edx],ecx
  411260:	xchg   ebp,eax
  411261:	loope  0x411239
  411263:	push   esp
  411264:	add    BYTE PTR [ebp-0x46],cl
  411267:	lea    edx,[eax+0x50c68d63]
  41126d:	(bad)  
  41126e:	and    DWORD PTR [ecx+0x4c],esp
  411271:	out    dx,al
  411272:	shl    BYTE PTR [ebx],0x1a
  411275:	div    BYTE PTR [ebx+0x57]
  411278:	adc    DWORD PTR [eax-0x3d],ecx
  41127b:	loope  0x411213
  41127d:	outs   dx,BYTE PTR ds:[esi]
  41127e:	fild   DWORD PTR [esi+ebx*2]
  411281:	push   esp
  411282:	pop    esi
  411283:	mov    ah,0x36
  411285:	xor    DWORD PTR [ebp+0x6e],0xffffffa9
  411289:	mov    cl,0xd4
  41128b:	rol    al,cl
  41128d:	sahf   
  41128e:	jle    0x411233
  411290:	mov    cs,WORD PTR [ebx*2-0x293251bc]
  411297:	add    edx,DWORD PTR [esi-0x3326a4cf]
  41129d:	call   0xc40d786e
  4112a2:	shr    bh,1
  4112a4:	push   0x8f176aca
  4112a9:	dec    eax
  4112ab:	fs int 0x6e
  4112ae:	sub    esi,DWORD PTR [ebp+0x3d1dd6d6]
  4112b4:	in     al,0x88
  4112b6:	cdq    
  4112b7:	inc    esp
  4112b8:	cmp    esi,esi
  4112ba:	add    bh,BYTE PTR [ebx-0x108df9b9]
  4112c0:	das    
  4112c1:	lods   al,BYTE PTR ds:[esi]
  4112c2:	adc    BYTE PTR [ebx+0x3f1c2bbd],dh
  4112c8:	(bad)  
  4112c9:	sti    
  4112ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112cb:	mov    ds:0x586989c4,eax
  4112d0:	sub    ebp,DWORD PTR [esi-0x7ecda757]
  4112d6:	inc    eax
  4112d7:	xchg   ebx,eax
  4112d8:	add    esp,DWORD PTR [ebp-0x6c]
  4112db:	push   es
  4112dc:	arpl   WORD PTR [ebp+0x41f88d5f],bx
  4112e2:	and    BYTE PTR [ebx+0x51],0x25
  4112e6:	xor    DWORD PTR [esi],edx
  4112e8:	lock sbb BYTE PTR [ebx+eiz*2],bh
  4112ec:	shr    BYTE PTR [ebx-0x40],cl
  4112ef:	mov    gs,WORD PTR [edi]
  4112f1:	push   ss
  4112f2:	cmp    esi,DWORD PTR [esi+ebp*1]
  4112f5:	test   DWORD PTR [ebx+ebx*2+0x69],0x75cae42
  4112fd:	mov    dl,0xf4
  4112ff:	xchg   edx,eax
  411300:	sbb    eax,esp
  411302:	mov    ch,0x85
  411304:	jmp    0x51f53702
  411309:	js     0x41135b
  41130b:	xor    al,0xd1
  41130d:	popa   
  41130e:	cmp    bh,BYTE PTR [ecx-0x81f4da6]
  411314:	adc    BYTE PTR [edx],dh
  411316:	retf   0x9701
  411319:	cmp    bl,0x9
  41131c:	ds pop edx
  41131e:	loopne 0x411339
  411320:	js     0x4112cf
  411322:	cmp    DWORD PTR [edi-0x46b68409],edi
  411328:	daa    
  411329:	test   bh,0xfb
  41132c:	call   DWORD PTR [edx+0x5f]
  41132f:	or     al,0xff
  411331:	pusha  
  411332:	int    0x77
  411334:	dec    edx
  411335:	cmp    BYTE PTR [edx+0x66],ch
  411338:	mov    ch,0xe2
  41133a:	pusha  
  41133b:	ins    BYTE PTR es:[edi],dx
  41133c:	cwde   
  41133d:	retf   0xa091
  411340:	(bad)
  411343:	add    edx,DWORD PTR [edx-0x370dbac8]
  411349:	dec    ecx
  41134a:	pop    ecx
  41134b:	sub    al,BYTE PTR [edx]
  41134d:	int    0xc8
  41134f:	cmp    esp,DWORD PTR [eax-0x12]
  411352:	and    al,0xc7
  411354:	daa    
  411355:	push   0x968cb08
  41135a:	es push ss
  41135c:	mov    cl,0xb0
  41135e:	rep outs dx,BYTE PTR ds:[esi]
  411360:	xor    BYTE PTR [ebp-0x5c],dl
  411363:	or     BYTE PTR [edx+0x63],al
  411366:	jg     0x4113a6
  411368:	push   ebx
  411369:	jp     0x4113d2
  41136b:	xchg   esp,eax
  41136c:	pop    edx
  41136d:	(bad)  
  41136e:	(bad)  
  411370:	inc    edi
  411371:	or     ecx,DWORD PTR [edi]
  411373:	mov    bh,0xcf
  411375:	cmp    ebp,DWORD PTR [edx-0x79cb7a7b]
  41137b:	int3   
  41137c:	xchg   ecx,eax
  41137d:	push   eax
  41137e:	adc    esi,DWORD PTR [ebx-0x3ad58ca9]
  411384:	dec    edi
  411385:	lds    esi,FWORD PTR [ebx+0x464475cd]
  41138b:	push   ebp
  41138c:	sbb    edi,DWORD PTR [edx-0x22]
  41138f:	rcl    dl,cl
  411391:	std    
  411392:	push   cs
  411393:	xor    eax,0xac03c311
  411398:	dec    ecx
  411399:	fnstsw WORD PTR [eax+0x7c1508f7]
  41139f:	in     eax,0x3e
  4113a1:	inc    esp
  4113a2:	xor    al,0x14
  4113a4:	inc    esi
  4113a5:	mov    DWORD PTR [ebx+0x67],ebx
  4113a8:	and    bl,BYTE PTR [eax]
  4113aa:	push   eax
  4113ab:	outs   dx,DWORD PTR ds:[esi]
  4113ac:	xchg   ah,bh
  4113ae:	xlat   BYTE PTR ds:[ebx]
  4113af:	ffreep st(5)
  4113b1:	aam    0xc1
  4113b3:	add    BYTE PTR [ebp+0x6b3f0de2],0x32
  4113ba:	add    BYTE PTR ds:0x5188154,al
  4113c0:	daa    
  4113c1:	dec    DWORD PTR [esi]
  4113c3:	jecxz  0x411360
  4113c5:	imul   ebp,DWORD PTR [ebx+0x1fe3145d],0xfffffff9
  4113cc:	sahf   
  4113cd:	lock adc DWORD PTR ds:[edx+ecx*2-0x12be45e1],0xc3cf890a
  4113da:	jb     0x411366
  4113dc:	pop    es
  4113dd:	cmp    al,0x4
  4113df:	aad    0x6
  4113e1:	das    
  4113e2:	mov    dh,0xc7
  4113e4:	jb     0x411395
  4113e6:	hlt    
  4113e7:	xchg   ecx,eax
  4113e8:	pop    esi
  4113e9:	into   
  4113ea:	ret    0xf8a9
  4113ed:	jmp    0xb7d1:0xc1275f7a
  4113f4:	cmp    al,0xbb
  4113f6:	in     al,0xbd
  4113f8:	jnp    0x4113fd
  4113fa:	call   0xdf42:0x23de259c
  411401:	mov    cl,0x77
  411403:	mov    ecx,esi
  411405:	pop    edx
  411406:	or     esp,DWORD PTR [esi+0x4e3dc88]
  41140c:	mov    esp,0x27a601d1
  411411:	xchg   edi,eax
  411412:	add    ebp,DWORD PTR [eax]
  411414:	cmp    ebx,esi
  411416:	or     ecx,DWORD PTR [edi-0x6ca4efbf]
  41141c:	stc    
  41141d:	call   0x3eb7160d
  411422:	loopne 0x4113db
  411424:	push   edx
  411425:	push   0xaf95515b
  41142a:	loope  0x411414
  41142c:	ret    0xefc9
  41142f:	jp     0x4113d6
  411431:	dec    ebp
  411432:	out    0xc8,eax
  411434:	and    BYTE PTR ss:[ebp+0x6b],dh
  411438:	jne    0x411435
  41143a:	mov    ah,0x24
  41143c:	sub    eax,0x9c27a7cc
  411441:	inc    ebp
  411442:	cli    
  411443:	retf   
  411444:	addr16 in al,dx
  411446:	sub    esi,0xd1c40103
  41144c:	fisubr DWORD PTR [edx+eiz*1]
  41144f:	ficomp DWORD PTR [ebp-0x4b]
  411452:	fbstp  TBYTE PTR [ebx+0x3b474782]
  411458:	iret   
  411459:	in     al,dx
  41145a:	mov    DWORD PTR [ecx+0x79],ebx
  41145d:	xor    ecx,DWORD PTR [esi+edi*8]
  411460:	test   DWORD PTR [eax+0x3e],esi
  411463:	xchg   esp,eax
  411464:	lds    ebp,FWORD PTR [ebp-0xb129bf5]
  41146a:	adc    al,0xc2
  41146c:	sti    
  41146d:	or     al,0x60
  41146f:	mov    ds:0x4e783f99,al
  411474:	mov    ecx,DWORD PTR ds:0x7aa02bf4
  41147a:	mov    ds:0x14d043c7,al
  41147f:	jo     0x4114d1
  411481:	loop   0x41142c
  411483:	(bad)  
  411484:	scas   eax,DWORD PTR es:[edi]
  411485:	iret   
  411486:	inc    ebx
  411487:	and    edi,edx
  411489:	cmp    al,0x12
  41148b:	mov    edi,0x53a819
  411490:	stc    
  411491:	pushf  
  411492:	das    
  411493:	mov    esp,DWORD PTR [edi+ecx*4+0x72d0b7e4]
  41149a:	pop    ecx
  41149b:	fist   DWORD PTR [esi+eiz*8]
  41149e:	jmp    0xc662a87c
  4114a3:	fdivr  QWORD PTR [ecx]
  4114a5:	loop   0x41149f
  4114a7:	enter  0x14bb,0x7f
  4114ab:	mov    al,0x56
  4114ad:	push   ds
  4114ae:	or     eax,0x5bfaa042
  4114b3:	(bad)  
  4114b5:	sbb    al,0xe4
  4114b7:	js     0x411488
  4114b9:	add    DWORD PTR [ebx+eax*4+0x12],0xac6ac3f3
  4114c1:	xor    al,0x5a
  4114c3:	xchg   ecx,eax
  4114c4:	(bad)  [edi+0x3f]
  4114c7:	mov    ebp,0xeeff5b05
  4114cc:	inc    ebp
  4114cd:	test   DWORD PTR [edx-0x246685b],edi
  4114d3:	(bad)  
  4114d4:	xor    bl,dl
  4114d6:	ja     0x411508
  4114d8:	sbb    ah,BYTE PTR [edx+0x6d]
  4114db:	ins    DWORD PTR es:[edi],dx
  4114dc:	push   ss
  4114dd:	xchg   esi,eax
  4114de:	test   eax,0x533f675b
  4114e3:	cmp    eax,0xf218542d
  4114e8:	fwait
  4114e9:	test   BYTE PTR [edi+0x1],dl
  4114ec:	sbb    esp,edi
  4114ee:	test   eax,0x95b2820d
  4114f3:	jmp    0xdfce0a
  4114f8:	mov    al,ds:0xa242af7d
  4114fd:	jmp    0x411542
  4114ff:	(bad)  
  411501:	mov    al,ds:0x3ef2ba18
  411506:	sbb    eax,0xb89ff5ee
  41150b:	xchg   esp,eax
  41150c:	dec    esi
  41150d:	lods   al,BYTE PTR ds:[esi]
  41150e:	dec    edi
  41150f:	sub    BYTE PTR [eax-0x8c73a45],bh
  411515:	jbe    0x4114b7
  411517:	xor    eax,0xb33279db
  41151c:	sbb    BYTE PTR [ecx-0x37],ch
  41151f:	jmp    0xa7be:0xd8428e7b
  411526:	test   eax,0x490392e0
  41152b:	popa   
  41152c:	dec    ecx
  41152d:	pop    eax
  41152e:	add    ebx,edx
  411530:	fstp   QWORD PTR [ecx-0x9726ecf]
  411536:	imul   esi,DWORD PTR [edx-0x36],0xffffffe9
  41153a:	cmp    BYTE PTR [edi+0x235d39e8],ch
  411540:	and    eax,DWORD PTR [esi+0x76c50bfc]
  411546:	jg     0x411583
  411548:	lods   eax,DWORD PTR ds:[esi]
  411549:	mov    dl,0x36
  41154b:	imul   dl
  41154d:	test   al,0xf7
  41154f:	add    DWORD PTR [esi+0x5c],eax
  411552:	jge    0x41151d
  411554:	pop    edx
  411555:	xchg   ecx,eax
  411556:	test   DWORD PTR [eax],0x7144df18
  41155c:	sbb    edi,edi
  41155e:	retf   0xd942
  411561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411562:	mov    eax,ds:0xa39ce9ae
  411567:	out    dx,al
  411568:	loop   0x411586
  41156a:	int    0x42
  41156c:	cmp    dh,bl
  41156e:	inc    ecx
  41156f:	sbb    DWORD PTR [edx],edi
  411571:	xchg   edx,eax
  411572:	adc    DWORD PTR [eax],edi
  411574:	and    ebx,ecx
  411576:	mov    edi,0x4d0ce1b8
  41157b:	in     eax,dx
  41157c:	fsubr  QWORD PTR ds:0x1ceedc2c
  411582:	mov    dh,0xb0
  411584:	mov    dh,0x36
  411586:	add    dl,BYTE PTR [esi+0x6b]
  411589:	mov    cl,0xfc
  41158b:	mov    dl,0xc1
  41158d:	jno    0x411568
  41158f:	mov    ecx,0xe3bc78d9
  411594:	test   al,0x22
  411596:	mov    al,0xac
  411598:	les    edx,FWORD PTR [edi+0x5]
  41159b:	inc    eax
  41159c:	jl     0x41158e
  41159e:	adc    al,0x92
  4115a0:	jg     0x411591
  4115a2:	arpl   WORD PTR [ecx+0x2f9210fc],sp
  4115a8:	or     DWORD PTR es:[edx],ebx
  4115ab:	add    al,0xaf
  4115ad:	cmp    dh,BYTE PTR [edx]
  4115af:	cmp    al,dl
  4115b1:	mov    esi,0x2b6acf27
  4115b6:	or     dl,dh
  4115b8:	clc    
  4115b9:	cmp    esp,ebp
  4115bb:	xchg   edi,eax
  4115bc:	mov    WORD PTR [edi],fs
  4115be:	xchg   DWORD PTR [eax+ebp*4+0x3ea6c49e],ebp
  4115c5:	inc    edi
  4115c6:	es call 0x812ec3d7
  4115cc:	btc    edi,0x59
  4115d0:	adc    dl,bl
  4115d2:	xchg   esi,eax
  4115d3:	mov    edi,0x3e014522
  4115d8:	je     0x41164d
  4115da:	push   edx
  4115db:	cmp    BYTE PTR [edx],0x18
  4115de:	xor    BYTE PTR [ecx-0x51],dl
  4115e1:	lods   eax,DWORD PTR ds:[esi]
  4115e2:	xchg   al,al
  4115e4:	fisub  WORD PTR [esi+0x3f]
  4115e7:	or     BYTE PTR [ebp+0x57c60b9a],cl
  4115ed:	shr    BYTE PTR [ebx+0x2351e3d0],cl
  4115f3:	and    al,0x22
  4115f5:	sub    bl,BYTE PTR [eax+ecx*8-0x65bf5e34]
  4115fc:	pusha  
  4115fd:	(bad)  
  4115fe:	iret   
  4115ff:	mov    bl,0x78
  411601:	xor    ah,BYTE PTR [ebx+0x2314a2ea]
  411607:	dec    ebp
  411608:	add    ah,BYTE PTR [esp+eax*8-0xb]
  41160c:	ror    BYTE PTR [ebx+0x49],1
  41160f:	popf   
  411610:	pop    esi
  411611:	jno    0x411652
  411613:	mov    WORD PTR [eax+0x1e00621d],es
  411619:	sti    
  41161a:	xchg   esi,eax
  41161b:	mov    eax,0xfe003fb3
  411620:	iret   
  411621:	aas    
  411622:	mov    al,ds:0xe570818e
  411627:	cwde   
  411628:	cmp    al,0x75
  41162a:	xchg   BYTE PTR [ebx-0x6b],dh
  41162d:	das    
  41162e:	ror    DWORD PTR [esi-0x52c615f2],0xe2
  411635:	xchg   dx,ax
  411637:	mov    bh,0x94
  411639:	aad    0xf2
  41163b:	dec    esp
  41163c:	dec    esp
  41163d:	imul   edi,edx,0x734afcd
  411643:	sbb    al,BYTE PTR [ebp+ebp*8-0x3]
  411647:	xchg   BYTE PTR [eiz*1+0xf785f89],al
  41164e:	pop    esi
  41164f:	xor    dh,BYTE PTR ds:0x9c4c0a99
  411655:	ins    BYTE PTR es:[edi],dx
  411656:	in     al,0xf3
  411658:	xchg   edx,eax
  411659:	pop    ss
  41165a:	arpl   WORD PTR [eax-0x5c872f9],bp
  411660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411661:	fnstcw WORD PTR [edx-0x6a]
  411664:	mov    ecx,0xf8074afc
  411669:	imul   eax,DWORD PTR [esi+0x4b],0x8a51bff3
  411670:	addr16 inc edx
  411672:	lock mov al,0xe7
  411675:	pop    eax
  411676:	sub    al,0x8d
  411678:	and    ebp,DWORD PTR es:[esi+0x6113585b]
  41167f:	or     al,0x16
  411681:	iret   
  411682:	fldl2e 
  411684:	inc    edx
  411685:	popf   
  411686:	sbb    BYTE PTR [eax+0x46],ah
  411689:	gs enter 0xa79e,0x95
  41168e:	cmp    ebp,esp
  411690:	js     0x4116ad
  411692:	xchg   ecx,eax
  411693:	out    dx,eax
  411694:	into   
  411695:	repz test eax,edi
  411698:	dec    edx
  411699:	repnz pusha 
  41169b:	push   eax
  41169c:	in     al,dx
  41169d:	add    DWORD PTR ds:0x8e386bef,0xffffff8f
  4116a4:	lahf   
  4116a5:	xchg   ecx,eax
  4116a6:	sahf   
  4116a7:	xchg   esi,eax
  4116a8:	jae    0x4116c9
  4116aa:	and    edi,ebx
  4116ac:	pop    ebx
  4116ad:	aad    0xd7
  4116af:	add    DWORD PTR [edx-0x43b0d457],0x3a
  4116b6:	dec    eax
  4116b7:	dec    esi
  4116b8:	test   eax,0x827a0ac0
  4116bd:	out    dx,eax
  4116be:	into   
  4116bf:	mov    esp,0xb1dc7239
  4116c4:	mov    al,ds:0xb01ea6d9
  4116c9:	ret    
  4116ca:	pop    ds
  4116cb:	js     0x411738
  4116cd:	in     eax,0x9c
  4116cf:	jne    0x41166b
  4116d1:	xor    ecx,DWORD PTR [ebp+ebp*1+0x4c]
  4116d5:	test   eax,0x85e90b95
  4116da:	aaa    
  4116db:	cli    
  4116dc:	sbb    al,0x89
  4116de:	sti    
  4116df:	(bad)  
  4116e0:	sub    DWORD PTR [ecx+0x7c],ebx
  4116e3:	call   0xa38e23fa
  4116e8:	cwde   
  4116e9:	in     eax,dx
  4116ea:	fldenv [eiz*2-0x1ae7aa3b]
  4116f1:	dec    esi
  4116f2:	lds    ecx,FWORD PTR [edx+0x32cbc0c4]
  4116f8:	outs   dx,BYTE PTR ds:[esi]
  4116f9:	lahf   
  4116fa:	pusha  
  4116fb:	mov    edi,0xf5ee53c2
  411700:	(bad)  
  411702:	mov    edx,0xbd0deb72
  411707:	mov    ecx,DWORD PTR [ecx+0x7c]
  41170a:	adc    eax,0xd1b3564
  41170f:	push   0xffffffde
  411711:	push   cs
  411712:	mov    al,ds:0x3098f1a6
  411717:	and    eax,0x51def08
  41171c:	(bad)  
  41171d:	hlt    
  41171e:	xchg   ebx,eax
  41171f:	lods   eax,DWORD PTR ds:[esi]
  411720:	mov    dh,0x7
  411722:	mov    ebx,0x8f3f83f1
  411727:	cmp    DWORD PTR [edi],esp
  411729:	sbb    ecx,DWORD PTR [esi+ecx*2+0xd]
  41172d:	pushf  
  41172e:	imul   ecx,DWORD PTR [ebp+0xeeb57b0],0x1b932771
  411738:	js     0x411776
  41173a:	pop    ebp
  41173b:	pushf  
  41173c:	shl    DWORD PTR [ecx],cl
  41173e:	or     al,0x77
  411740:	push   edi
  411741:	jle    0x41170f
  411743:	adc    BYTE PTR [edx+0x7ddaed05],bh
  411749:	sub    BYTE PTR [ecx],bh
  41174b:	clc    
  41174c:	lea    ebx,[ebp+0x60]
  41174f:	mov    ebx,0x1d2244a8
  411754:	adc    al,0xd6
  411756:	hlt    
  411757:	xchg   esi,eax
  411758:	imul   ecx,DWORD PTR ds:0xaf203ae3,0x10
  41175f:	mov    edi,0x3e0bd671
  411764:	pop    esi
  411765:	xchg   esi,eax
  411766:	mov    al,0xa4
  411768:	mov    ecx,0x83adcac7
  41176d:	shl    DWORD PTR [ecx+0x1930056a],1
  411773:	retf   
  411774:	ret    0x485f
  411777:	cmp    ch,BYTE PTR ds:0x6662ab23
  41177d:	inc    ebx
  41177e:	repnz or DWORD PTR es:[esi+ebx*1-0x3b],0x99adab69
  411788:	adc    al,0x11
  41178a:	clc    
  41178b:	sub    BYTE PTR ss:[ebp-0x22],dh
  41178f:	lods   eax,DWORD PTR ds:[esi]
  411790:	pusha  
  411791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411792:	ins    DWORD PTR es:[edi],dx
  411793:	push   cs
  411794:	push   es
  411795:	push   ecx
  411796:	mov    ecx,DWORD PTR [ebx-0xd4bfca7]
  41179c:	add    BYTE PTR [ecx+0x2d527c42],dl
  4117a2:	rcl    ecx,1
  4117a4:	inc    ebp
  4117a5:	ret    0x70b
  4117a8:	mov    al,ds:0x6f203227
  4117ad:	push   ds
  4117ae:	push   esi
  4117af:	lds    ebx,FWORD PTR [edx]
  4117b1:	leave  
  4117b2:	int3   
  4117b3:	mov    dl,0x5e
  4117b5:	addr16 sub al,bl
  4117b8:	adc    al,0x61
  4117ba:	fwait
  4117bb:	loop   0x4117d5
  4117bd:	dec    edi
  4117be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117bf:	xor    DWORD PTR [esi],0xbb5a9f1
  4117c5:	sub    al,0x1e
  4117c7:	pop    es
  4117c8:	xlat   BYTE PTR ds:[ebx]
  4117c9:	std    
  4117ca:	test   al,0xb6
  4117cc:	lahf   
  4117cd:	sub    al,0x6f
  4117cf:	add    al,0x85
  4117d1:	sysret 
  4117d3:	mov    ecx,0xae0c9a1
  4117d8:	pop    ecx
  4117d9:	daa    
  4117da:	adc    BYTE PTR [eax-0x50a6e03b],cl
  4117e0:	push   ss
  4117e1:	ffreep st(2)
  4117e3:	punpckhwd mm3,mm0
  4117e6:	lock sub al,0xb0
  4117e9:	mov    ebx,0x553ce43f
  4117ee:	add    al,0x57
  4117f0:	leave  
  4117f1:	popa   
  4117f2:	ror    DWORD PTR gs:[edi-0x68faadde],1
  4117f9:	push   es
  4117fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fb:	pop    esi
  4117fc:	jmp    0x4117a3
  4117fe:	xchg   esi,eax
  411800:	ja     0x411863
  411802:	mov    cl,0xe4
  411804:	ror    BYTE PTR [edx-0x2f],1
  411807:	fs js  0x4117bf
  41180a:	int    0xa0
  41180c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180d:	icebp  
  41180e:	test   eax,0xfc88954d
  411813:	mov    ebp,0xc91173ba
  411818:	mov    al,0xa
  41181a:	push   ecx
  41181b:	je     0x411871
  41181d:	imul   edi,DWORD PTR [di+0x2b],0x9a74d090
  411825:	xchg   BYTE PTR [ecx+0x5707298b],al
  41182b:	dec    edx
  41182c:	cwde   
  41182d:	push   0x6d2dbde7
  411832:	add    dh,BYTE PTR [esi]
  411834:	jmp    0x3773cc1c
  411839:	pop    ebp
  41183a:	xor    eax,0x2f2feb15
  41183f:	jae    0x411837
  411841:	push   ebx
  411842:	loope  0x411896
  411844:	fidiv  WORD PTR [ecx-0x51cec149]
  41184a:	mov    esp,0xb47e3a54
  41184f:	xchg   ebp,eax
  411850:	and    dh,BYTE PTR [esi+0x30340f9e]
  411856:	daa    
  411857:	ret    
  411858:	xor    esp,DWORD PTR [ebp-0x3b]
  41185b:	sbb    al,BYTE PTR [edx+esi*2]
  41185e:	ret    
  41185f:	jae    0x41188d
  411861:	leave  
  411862:	inc    esi
  411863:	lods   eax,DWORD PTR ds:[esi]
  411864:	stos   DWORD PTR es:[edi],eax
  411865:	pop    ebp
  411866:	sub    ch,BYTE PTR [ecx+0x0]
  411869:	loop   0x411898
  41186b:	or     al,0xf1
  41186d:	push   cs
  41186e:	mov    edx,0x40a3dc03
  411873:	cmp    bh,BYTE PTR [ecx]
  411875:	int3   
  411876:	and    DWORD PTR [eax],edi
  411878:	sub    BYTE PTR [edi+edx*2-0x58],ah
  41187c:	in     al,0xfb
  41187e:	mov    ?,ebx
  411880:	and    bh,0xb7
  411883:	fisubr WORD PTR [eax-0x4a]
  411886:	scas   al,BYTE PTR es:[edi]
  411887:	mov    eax,ds:0x144aacc5
  41188c:	(bad)  
  41188d:	xchg   ebx,eax
  41188e:	or     BYTE PTR [edx],al
  411890:	stos   DWORD PTR es:[edi],eax
  411891:	cmp    ebp,DWORD PTR [edx-0x22]
  411894:	and    dl,dl
  411896:	or     BYTE PTR [eax+0x6015c168],dh
  41189c:	stos   BYTE PTR es:[edi],al
  41189d:	mov    ebx,0x3cd792b4
  4118a2:	cdq    
  4118a3:	ds mov bl,0x39
  4118a6:	and    ebx,eax
  4118a8:	and    esi,ecx
  4118aa:	fwait
  4118ab:	xor    eax,DWORD PTR [ebp+ebx*4+0x29]
  4118af:	imul   eax,DWORD PTR [eax-0x716d67ec],0x16
  4118b6:	adc    ebx,0xc669221b
  4118bc:	rcl    DWORD PTR [ebx+0x6a],1
  4118bf:	jmp    0x1761:0x3d6b428d
  4118c6:	nop
  4118c7:	test   DWORD PTR [eax+0x7fce87e8],esi
  4118cd:	adc    ebx,DWORD PTR [ecx+0x51]
  4118d0:	xchg   ecx,eax
  4118d1:	mov    eax,ds:0xf4edf21a
  4118d6:	adc    cl,ch
  4118d8:	lods   al,BYTE PTR ss:[esi]
  4118da:	ret    
  4118db:	xor    DWORD PTR [ecx+0xfdacd77],esp
  4118e1:	push   eax
  4118e2:	or     eax,0xb9ef09b9
  4118e7:	pop    edi
  4118e8:	les    esi,FWORD PTR [ebx]
  4118ea:	adc    eax,0x55176bbf
  4118ef:	mov    dl,0xac
  4118f1:	ret    0x9e1d
  4118f4:	or     DWORD PTR [ebp+eax*1-0x78],eax
  4118f8:	pop    ebx
  4118f9:	lods   al,BYTE PTR ds:[esi]
  4118fa:	mov    BYTE PTR [eax+0x7b],bh
  4118fd:	mov    esp,0xbda728c8
  411902:	enter  0x91c1,0x45
  411906:	cmp    DWORD PTR [esi],ecx
  411908:	ds adc eax,0xa2d692f9
  41190e:	loop   0x4118c8
  411910:	sti    
  411911:	xor    DWORD PTR [ebx+ecx*4],edi
  411914:	cmp    eax,DWORD PTR [esi-0x63]
  411917:	sub    edx,DWORD PTR [edi+esi*8+0xa]
  41191b:	pop    esp
  41191c:	cmp    DWORD PTR [eax],eax
  41191e:	rol    DWORD PTR [eax+0x39],cl
  411921:	addr16 mul eax
  411924:	add    BYTE PTR [edi+0x43b8c7bb],bl
  41192a:	jge    0x4119ab
  41192c:	jns    0x41192c
  41192e:	sbb    DWORD PTR [edi],eax
  411930:	ds js  0x4119b1
  411933:	mov    bl,0x1
  411935:	inc    ebp
  411936:	hlt    
  411937:	inc    esp
  411938:	ins    BYTE PTR es:[edi],dx
  411939:	stos   BYTE PTR es:[edi],al
  41193a:	pop    ds
  41193b:	fst    QWORD PTR [edi]
  41193d:	stos   BYTE PTR es:[edi],al
  41193e:	imul   esp,DWORD PTR ds:0x144bf67a,0x5c51f408
  411948:	mov    dl,0x14
  41194a:	inc    eax
  41194b:	mov    WORD PTR [ebx],?
  41194d:	inc    edi
  41194e:	ret    0x64ac
  411951:	in     eax,dx
  411952:	sub    al,al
  411954:	(bad)  
  411955:	(bad)
  411958:	sub    dl,dh
  41195a:	data16 lods al,BYTE PTR ds:[esi]
  41195c:	in     al,dx
  41195d:	out    0xc,al
  41195f:	in     eax,dx
  411960:	sub    eax,0x1ce404c
  411965:	cs pop ebp
  411967:	out    0xee,al
  411969:	mov    dh,0xd2
  41196b:	repnz cdq 
  41196d:	jb     0x411918
  41196f:	dec    edi
  411970:	jb     0x411938
  411972:	call   0x3b63:0x696322c0
  411979:	dec    esi
  41197a:	in     eax,0x78
  41197c:	mov    ecx,0x646ae077
  411981:	sub    ecx,edx
  411983:	in     eax,dx
  411984:	xor    eax,0x640d482e
  411989:	sub    al,BYTE PTR [esi]
  41198b:	push   ebx
  41198c:	stos   DWORD PTR es:[edi],eax
  41198d:	imul   ecx,DWORD PTR [edi+ecx*4],0xd39efa3a
  411994:	xchg   BYTE PTR [ecx-0xe],dh
  411997:	sub    al,0x77
  411999:	mov    ebx,0xa2f19bbb
  41199e:	gs pop edi
  4119a0:	repnz ins DWORD PTR es:[edi],dx
  4119a2:	xchg   ebx,eax
  4119a3:	and    eax,0x7865cfe3
  4119a8:	dec    edi
  4119a9:	ds xchg esp,eax
  4119ab:	sub    BYTE PTR [edx+0x7d3c2959],0x2e
  4119b2:	hlt    
  4119b3:	daa    
  4119b4:	ficom  DWORD PTR [ebx+ebp*1+0x19]
  4119b8:	(bad)  
  4119ba:	or     eax,0x80a1a710
  4119bf:	mov    DWORD PTR [ebp+eax*4+0x3f],esi
  4119c3:	mov    eax,eax
  4119c5:	jge    0x411a18
  4119c7:	cs cmp eax,0x34d56004
  4119cd:	jno    0x4119e0
  4119cf:	xchg   edx,eax
  4119d0:	adc    ax,0x9016
  4119d4:	adc    edi,esi
  4119d6:	push   0x3f14c438
  4119db:	pop    ss
  4119dc:	mov    eax,DWORD PTR [esi]
  4119de:	js     0x411a5a
  4119e0:	jmp    0xb64c04b2
  4119e5:	xchg   BYTE PTR [edi+0x64829d42],ah
  4119eb:	mov    al,0x5b
  4119ed:	(bad)  
  4119ee:	push   esi
  4119ef:	and    al,0x1
  4119f1:	sub    eax,0x2e9de8a7
  4119f6:	or     DWORD PTR [ecx+0x5e],eax
  4119f9:	ret    0xb94c
  4119fc:	jno    0x411a3f
  4119fe:	ret    
  4119ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a00:	pop    ecx
  411a01:	neg    BYTE PTR [ebx-0x6a036445]
  411a07:	pusha  
  411a08:	pop    edi
  411a09:	inc    eax
  411a0a:	neg    BYTE PTR [ebx]
  411a0c:	mov    edx,DWORD PTR [edx-0x3f33e26b]
  411a12:	jecxz  0x411a19
  411a14:	add    BYTE PTR ds:0x57119e47,dl
  411a1a:	cmc    
  411a1b:	loop   0x411a3e
  411a1d:	push   ds
  411a1e:	adc    dl,bh
  411a20:	fild   QWORD PTR [eax+edi*2-0x436b1b40]
  411a27:	mov    DWORD PTR [ecx],eax
  411a29:	jne    0x4119ca
  411a2b:	arpl   WORD PTR [esi-0x129106c2],bx
  411a31:	mov    al,0x63
  411a33:	jl     0x411a11
  411a35:	sbb    DWORD PTR [esi-0x35],esi
  411a38:	jo     0x411a80
  411a3a:	fisub  DWORD PTR [edi+eax*4+0x2809a7ea]
  411a41:	icebp  
  411a42:	pop    ecx
  411a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a44:	vpaddw ymm2,ymm7,YMMWORD PTR [esi-0x12]
  411a49:	test   eax,0x6f32f82b
  411a4e:	adc    ecx,DWORD PTR [ecx]
  411a50:	je     0x411a0c
  411a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a53:	jbe    0x4119e4
  411a55:	mov    ds,ebp
  411a57:	push   edx
  411a58:	dec    esi
  411a59:	xchg   DWORD PTR [esi+0x53881e06],ebx
  411a5f:	ins    DWORD PTR es:[edi],dx
  411a60:	add    DWORD PTR [eax-0x692b424],0x52fdfc9a
  411a6a:	mov    ecx,0x2a2d9eb8
  411a6f:	mov    bh,0xdb
  411a71:	jbe    0x411a69
  411a73:	push   eax
  411a74:	ret    
  411a75:	int    0x7a
  411a77:	ror    BYTE PTR [eax+0x743610bf],1
  411a7d:	lods   al,BYTE PTR ds:[esi]
  411a7e:	dec    ebx
  411a7f:	fst    QWORD PTR [ebp-0x360674ad]
  411a85:	mov    gs,WORD PTR [esp+eiz*2]
  411a88:	test   BYTE PTR [edi+0x13],bl
  411a8b:	mov    ?,WORD PTR gs:[edx-0x7f1b169b]
  411a92:	jl     0x411abe
  411a94:	in     al,dx
  411a95:	in     eax,dx
  411a96:	jg     0x411b04
  411a98:	ret    
  411a99:	out    dx,eax
  411a9a:	(bad)
  411a9d:	and    cl,bl
  411a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa0:	fld    TBYTE PTR [edx-0x55]
  411aa3:	xlat   BYTE PTR ds:[ebx]
  411aa4:	jecxz  0x411af0
  411aa6:	loopne 0x411a2d
  411aa8:	jmp    0xabdcc871
  411aad:	mov    edi,0x207a7b8d
  411ab2:	or     eax,0x45eb46e3
  411ab7:	mov    DWORD PTR ds:0xe1332207,esp
  411abd:	pop    eax
  411abe:	test   DWORD PTR [ebp+ecx*1-0x72],ecx
  411ac2:	fs mov eax,0xb33a7182
  411ac8:	repz sahf 
  411aca:	jp     0x411a61
  411acc:	add    DWORD PTR [edx],edi
  411ace:	daa    
  411acf:	cmc    
  411ad0:	addr16 dec ebp
  411ad2:	cmp    al,0xb5
  411ad4:	enter  0xf10,0x5c
  411ad8:	mov    ds:0x4e88a096,eax
  411add:	inc    ebx
  411ade:	xchg   edi,eax
  411adf:	rol    BYTE PTR [ecx-0x2e],1
  411ae2:	(bad)  
  411ae4:	mov    dl,0x71
  411ae6:	push   cs
  411ae7:	inc    ecx
  411ae8:	pop    eax
  411ae9:	sbb    eax,0xbd5f3999
  411aee:	jmp    FWORD PTR [edx]
  411af0:	mov    ds:0xabbfdb0b,eax
  411af5:	push   es
  411af6:	add    esi,DWORD PTR [edi-0x65]
  411af9:	test   eax,0xfdbef5eb
  411afe:	sbb    eax,0xa2890e49
  411b03:	and    DWORD PTR [edi],esp
  411b05:	jge    0x411b15
  411b07:	nop
  411b08:	add    al,0x12
  411b0a:	sar    DWORD PTR [edx+0x29],cl
  411b0d:	repz fnstcw WORD PTR [edi+0x5c]
  411b11:	dec    edx
  411b12:	cmp    esp,eax
  411b14:	(bad)  
  411b15:	jmp    FWORD PTR [edx]
  411b17:	mov    DWORD PTR [edi+0x2d],esi
  411b1a:	jmp    0x65bf:0x5795a4f6
  411b21:	fs (bad) 
  411b23:	cld    
  411b24:	sar    DWORD PTR [edi-0xf9739c6],cl
  411b2a:	out    0xce,eax
  411b2c:	add    eax,DWORD PTR [ecx]
  411b2e:	and    edi,DWORD PTR [edi+eiz*1]
  411b31:	out    dx,al
  411b32:	iret   
  411b33:	jecxz  0x411b1f
  411b35:	pop    eax
  411b36:	cmp    DWORD PTR [eax+eax*1+0x77],0xfffffffc
  411b3b:	call   0xba1eadb0
  411b40:	adc    eax,0xe268505
  411b45:	pusha  
  411b46:	fcomp  DWORD PTR [ebp-0x44]
  411b49:	push   edi
  411b4a:	ins    BYTE PTR es:[edi],dx
  411b4b:	ret    0x7eb
  411b4e:	enter  0xb9aa,0x68
  411b52:	fistp  WORD PTR [ecx-0x78659fe7]
  411b58:	jns    0x411b45
  411b5a:	outs   dx,BYTE PTR ds:[esi]
  411b5b:	xor    edi,ebx
  411b5d:	dec    ecx
  411b5e:	and    eax,0x2be59181
  411b63:	addr16 add al,0xb3
  411b66:	adc    bl,BYTE PTR [eax]
  411b68:	jg     0x411ba2
  411b6a:	pop    esp
  411b6b:	scas   eax,DWORD PTR es:[edi]
  411b6c:	shl    DWORD PTR [edx+ebx*2],1
  411b6f:	cmp    BYTE PTR [eax+edx*2+0x5019a9bc],dh
  411b76:	mov    eax,?
  411b78:	jge    0x411b3e
  411b7a:	adc    ebp,ebx
  411b7c:	pop    ss
  411b7d:	into   
  411b7e:	inc    BYTE PTR [eax+0x20]
  411b81:	cmp    eax,0xde0cd783
  411b86:	sbb    eax,0x3d58f088
  411b8b:	cmp    cl,dh
  411b8d:	imul   ecx,DWORD PTR [ebx-0x46],0x30e8095c
  411b94:	lds    eax,FWORD PTR [edi+0x126a2be5]
  411b9a:	shr    BYTE PTR [edi-0xf03470a],cl
  411ba0:	and    BYTE PTR [esi+0x23],cl
  411ba3:	jle    0x411baf
  411ba5:	sti    
  411ba6:	scas   eax,DWORD PTR es:[edi]
  411ba7:	dec    ebp
  411ba8:	xlat   BYTE PTR ds:[ebx]
  411ba9:	mov    bh,0xee
  411bab:	(bad)  
  411bac:	jae    0x411beb
  411bae:	jmp    0xef02:0x5d050ab5
  411bb5:	or     eax,0xffffffbd
  411bb8:	push   ebx
  411bb9:	and    BYTE PTR [ecx],bh
  411bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbc:	push   eax
  411bbd:	dec    edx
  411bbe:	mov    ebx,0x40da0a5b
  411bc3:	test   BYTE PTR [ecx+0x2cf838b6],bh
  411bc9:	mov    dl,BYTE PTR [edi+ebp*8]
  411bcc:	pop    edi
  411bcd:	ds sbb bl,bl
  411bd0:	mov    dl,0xf4
  411bd2:	mov    ds:0xf631abd7,eax
  411bd7:	les    esi,FWORD PTR ds:0xd554c1df
  411bdd:	or     ebp,DWORD PTR [eax]
  411bdf:	mov    dh,0x63
  411be1:	add    al,dl
  411be3:	jno    0x411ba0
  411be5:	xchg   ecx,eax
  411be6:	mov    edx,0x36155e5e
  411beb:	sbb    al,0x9a
  411bed:	sbb    ebp,DWORD PTR [esi]
  411bef:	inc    edx
  411bf0:	jnp    0x411c57
  411bf2:	sbb    BYTE PTR [ebp-0x28],dh
  411bf5:	mov    edi,edx
  411bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf8:	mov    DWORD PTR [esi],esi
  411bfa:	cdq    
  411bfb:	sub    eax,0x7539d29a
  411c00:	pop    ds
  411c01:	sbb    al,0x46
  411c03:	cli    
  411c04:	mov    ebx,0xb4cf3d54
  411c09:	retf   0xd109
  411c0c:	dec    eax
  411c0d:	adc    esp,DWORD PTR [eax+0x27508421]
  411c13:	adc    ecx,DWORD PTR gs:[edi]
  411c16:	xor    DWORD PTR [edi],0xffffff95
  411c19:	lods   al,BYTE PTR ds:[esi]
  411c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c1b:	aam    0x2f
  411c1d:	sbb    eax,0x44a8f901
  411c22:	jne    0x411be1
  411c24:	dec    eax
  411c25:	push   esp
  411c26:	sub    edx,DWORD PTR [esi]
  411c28:	push   esp
  411c29:	xchg   DWORD PTR [ecx-0x73],esp
  411c2c:	add    al,0xe1
  411c2e:	and    ch,BYTE PTR [ebx+edi*2-0x3e9a8c9e]
  411c35:	jno    0x411c8f
  411c37:	inc    esp
  411c38:	in     eax,dx
  411c39:	aas    
  411c3a:	(bad)  
  411c3b:	in     eax,dx
  411c3c:	clc    
  411c3d:	call   0x2c28:0x4b5b3c04
  411c44:	jle    0x411c9c
  411c46:	data16 and al,0xd6
  411c49:	mov    esp,0x3bcd159d
  411c4e:	add    edi,DWORD PTR [edi]
  411c50:	inc    edx
  411c51:	mov    WORD PTR [edx-0x57d69d22],fs
  411c57:	lahf   
  411c58:	or     esp,DWORD PTR [ecx+ecx*4-0x1b8b68f5]
  411c5f:	(bad)  
  411c60:	popa   
  411c61:	sub    DWORD PTR [edi],esp
  411c63:	add    eax,0x8fd07f54
  411c68:	pusha  
  411c69:	repz sub BYTE PTR [esi],al
  411c6c:	or     al,0x59
  411c6e:	shr    BYTE PTR [edx*2-0x75ca84a9],1
  411c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c76:	in     al,0x81
  411c78:	fs icebp 
  411c7a:	inc    eax
  411c7b:	and    al,0x59
  411c7d:	loope  0x411cf2
  411c7f:	test   al,0x44
  411c81:	rcl    ebx,cl
  411c83:	mov    ecx,DWORD PTR [eax-0x4d]
  411c86:	mov    bh,0x70
  411c88:	cmp    eax,0x7b1ab851
  411c8d:	xchg   BYTE PTR [eax],bh
  411c8f:	xchg   edi,eax
  411c90:	out    0xab,eax
  411c92:	loop   0x411d07
  411c94:	test   BYTE PTR cs:[edx+0x9],ah
  411c98:	jo     0x411c81
  411c9a:	leave  
  411c9b:	shl    cl,1
  411c9d:	mov    ds:0x8ebbe2f7,eax
  411ca2:	push   ebp
  411ca3:	adc    eax,0xc01291e2
  411ca8:	retf   0xcd22
  411cab:	mov    dl,0xfc
  411cad:	je     0x411cc3
  411caf:	pop    edx
  411cb0:	nop
  411cb1:	or     al,0x1
  411cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cb4:	adc    dh,bl
  411cb6:	mov    ecx,0x9e82d1e5
  411cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cbc:	adc    eax,0x71e292f0
  411cc1:	es or  al,0x8e
  411cc4:	test   eax,0x5d589e36
  411cc9:	fsubr  QWORD PTR [edx+0x6d]
  411ccc:	in     eax,dx
  411ccd:	mov    esp,edx
  411ccf:	into   
  411cd0:	or     eax,0x5421d395
  411cd5:	add    al,0xd7
  411cd7:	add    eax,esp
  411cd9:	pusha  
  411cda:	mov    ds:0x85dfee3e,eax
  411cdf:	push   0xffffffbb
  411ce1:	push   0x62
  411ce3:	aaa    
  411ce4:	fs xchg esp,eax
  411ce6:	inc    ebx
  411ce7:	or     al,0xdc
  411ce9:	popf   
  411cea:	sub    eax,0x6e2d84c
  411cef:	dec    eax
  411cf0:	outs   dx,DWORD PTR ds:[esi]
  411cf1:	xchg   edi,eax
  411cf2:	lea    edx,[ecx+0x22650238]
  411cf8:	retf   
  411cf9:	add    ecx,DWORD PTR [ecx]
  411cfb:	test   al,0xb5
  411cfd:	clc    
  411cfe:	sbb    BYTE PTR [edi-0x2],0x24
  411d02:	stos   BYTE PTR es:[edi],al
  411d03:	neg    DWORD PTR [edi-0x6]
  411d06:	jbe    0x411c8a
  411d08:	mov    ds:0x29414f64,eax
  411d0d:	cmc    
  411d0e:	out    0x1c,eax
  411d10:	pop    edi
  411d11:	jmp    0x5068:0x4cc50e81
  411d18:	adc    BYTE PTR [ebx+ecx*8],bl
  411d1b:	jmp    0xef78700b
  411d20:	aam    0xe5
  411d22:	bnd jp 0x411cb0
  411d25:	push   es
  411d26:	mov    DWORD PTR [eax+0x3bad4412],ebx
  411d2c:	push   ebp
  411d2d:	(bad)  
  411d2e:	pop    edi
  411d2f:	dec    ebx
  411d30:	dec    edi
  411d31:	dec    ecx
  411d32:	rcl    BYTE PTR [ecx-0x50],1
  411d35:	push   0x92e13af
  411d3a:	inc    eax
  411d3b:	out    dx,al
  411d3c:	daa    
  411d3d:	xchg   ah,ch
  411d3f:	xor    esi,DWORD PTR [ecx]
  411d41:	pusha  
  411d42:	pop    DWORD PTR [edx+0x55]
  411d45:	pop    ecx
  411d46:	hlt    
  411d47:	enter  0x4575,0xeb
  411d4b:	mov    eax,0xf2b3999a
  411d50:	fimul  WORD PTR [esi]
  411d52:	cmp    dl,BYTE PTR [edi]
  411d54:	push   ds
  411d55:	repnz xchg edi,eax
  411d57:	ins    DWORD PTR es:[edi],dx
  411d58:	lods   al,BYTE PTR ds:[esi]
  411d59:	sbb    BYTE PTR [esi],bl
  411d5b:	dec    ebx
  411d5c:	push   esi
  411d5d:	loope  0x411d90
  411d5f:	and    DWORD PTR [ecx-0x7bba2a9e],0xd7c7957f
  411d69:	gs out 0x15,eax
  411d6c:	dec    edx
  411d6d:	inc    esp
  411d6e:	mov    BYTE PTR [esi+eax*4+0x33d5f3c4],ah
  411d75:	aad    0x9a
  411d77:	repnz inc ebx
  411d79:	cmp    DWORD PTR [eax+0x656a4fa2],esp
  411d7f:	add    edx,DWORD PTR [ebx+0x44]
  411d82:	or     DWORD PTR [ebx+0x5b199827],esp
  411d88:	pop    ds
  411d89:	ror    BYTE PTR [ebx+0x3c6ccdbd],cl
  411d8f:	popf   
  411d90:	gs ret 
  411d92:	imul   edx,DWORD PTR ds:0xa2770a4b,0x7d5bc874
  411d9c:	arpl   WORD PTR [esi],cx
  411d9e:	jge    0x411daa
  411da0:	test   al,0x3b
  411da2:	retf   0x820f
  411da5:	daa    
  411da6:	fdiv   st(7),st
  411da8:	(bad)  
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	cmp    BYTE PTR [edx+0x6],bh
  412037:	daa    
  412038:	in     al,dx
  412039:	mov    eax,ds:0x249f485c
  41203e:	sbb    dl,BYTE PTR [edx+0x8174c68]
  412044:	add    DWORD PTR [eax],eax
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	mov    cl,0xfd
  415640:	inc    ebp
  415641:	jge    0x4156bc
  415643:	aam    0x0
  415645:	add    al,bh
  415647:	add    al,0x0
  415649:	add    BYTE PTR [ebx+0x3ffaba0c],dl
  41564f:	cmp    DWORD PTR [eax-0x2f],0x21
  415653:	mov    dl,0x77
  415655:	arpl   WORD PTR [ebp-0x5c],cx
  415658:	(bad)  
  41565a:	push   cs
  41565b:	ins    DWORD PTR es:[edi],dx
  41565c:	fcmovnu st,st(7)
  41565e:	jno    0x415647
  415660:	push   edx
  415661:	mov    ds:0x1083b22e,eax
  415666:	xor    BYTE PTR [ebp+0x1f42539d],bl
  41566c:	pop    esi
  41566d:	scas   al,BYTE PTR es:[edi]
  41566e:	sahf   
  41566f:	loop   0x4156cb
  415671:	add    al,0x69
  415673:	mov    ds:0xf4eeb058,al
  415678:	loopne 0x4156b8
  41567a:	daa    
  41567b:	push   edi
  41567c:	cmp    ebp,DWORD PTR [ecx]
  41567e:	xchg   DWORD PTR [edx-0x3f],esp
  415681:	imul   edi,DWORD PTR [ebx+0x41],0xffffffa1
  415685:	sbb    ch,al
  415687:	ret    
  415688:	xchg   BYTE PTR [edi],al
  41568a:	inc    ebx
  41568b:	push   esp
  41568c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568d:	ins    BYTE PTR es:[edi],dx
  41568e:	xor    DWORD PTR [edx+0x2],esi
  415691:	add    BYTE PTR [ebx+edi*8-0x1ce735ce],0x85
  415699:	shl    eax,0xa8
  41569c:	sar    DWORD PTR [esi],1
  41569e:	cmp    DWORD PTR [esi],0x61
  4156a1:	mov    ch,0xb
  4156a3:	jle    0x4156f8
  4156a5:	dec    ebx
  4156a6:	inc    esp
  4156a7:	stc    
  4156a8:	xor    al,0x29
  4156aa:	cmp    al,0x5a
  4156ac:	add    al,BYTE PTR [eax+eiz*1-0x6a3fc0e1]
  4156b3:	sub    al,0xef
  4156b5:	je     0x415736
  4156b7:	rol    BYTE PTR [esp+esi*4-0x2d17cea8],1
  4156be:	sar    ch,cl
  4156c0:	rol    DWORD PTR [edi],1
  4156c2:	jo     0x415684
  4156c4:	adc    al,0x7c
  4156c6:	xor    al,0xfe
  4156c8:	mov    ah,0xc9
  4156ca:	xchg   DWORD PTR [edi+eax*8-0x2],ebp
  4156ce:	cli    
  4156cf:	into   
  4156d0:	ret    
  4156d1:	mov    ebx,0x987bf478
  4156d6:	(bad)  [ebp+0x10]
  4156d9:	retf   
  4156da:	sbb    BYTE PTR [edi],cl
  4156dc:	jb     0x415756
  4156de:	scas   al,BYTE PTR es:[edi]
  4156df:	ja     0x415746
  4156e1:	inc    esi
  4156e2:	jb     0x415670
  4156e4:	push   esi
  4156e5:	scas   eax,DWORD PTR es:[edi]
  4156e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e7:	jne    0x415691
  4156e9:	pop    ecx
  4156ea:	xchg   edx,eax
  4156eb:	dec    eax
  4156ec:	inc    ebx
  4156ed:	and    al,0x9b
  4156ef:	jno    0x4156ff
  4156f1:	xor    BYTE PTR [ecx],0xf
  4156f4:	or     ah,BYTE PTR [esi+0x67b05d4a]
  4156fa:	pop    eax
  4156fb:	out    dx,al
  4156fc:	fsubr  st,st(7)
  4156fe:	or     DWORD PTR [ecx-0x48],0xffffff84
  415702:	pop    eax
  415703:	push   0xffffff8e
  415705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415706:	retf   
  415707:	and    edi,edx
  415709:	mov    WORD PTR [edx+0x2ee4261],ds
  41570f:	and    ch,0xb6
  415712:	mov    ecx,0x995087f6
  415717:	xor    cl,bh
  415719:	sbb    bl,BYTE PTR [edi-0x3a303173]
  41571f:	push   ebp
  415720:	add    eax,0x20c05cba
  415725:	xchg   edi,eax
  415726:	into   
  415727:	mov    dl,0x8b
  415729:	mov    eax,ds:0x5d7388e1
  41572e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41572f:	sub    BYTE PTR [edi],dl
  415731:	jp     0x415734
  415733:	add    ebx,DWORD PTR [edx-0x4d03f194]
  415739:	add    eax,0x5dffedc7
  41573e:	fcomp  DWORD PTR [esi+0x5b6fdd2e]
  415744:	sbb    al,0x88
  415746:	sahf   
  415747:	or     eax,0x88b4bd3d
  41574c:	mov    al,0x9f
  41574e:	ins    DWORD PTR es:[edi],dx
  41574f:	and    DWORD PTR [edx+ebx*8],0xffffffdd
  415753:	std    
  415754:	cli    
  415755:	push   esp
  415756:	(bad)  
  415757:	out    0x8b,al
  415759:	repnz in al,dx
  41575b:	and    DWORD PTR [ebx],0xe684e959
  415761:	out    dx,al
  415762:	je     0x4157b8
  415764:	cli    
  415765:	daa    
  415766:	out    0xf3,al
  415768:	dec    edi
  41576a:	mov    al,ds:0x31a1c7d8
  41576f:	xor    dl,BYTE PTR [ecx]
  415771:	retf   0xbdd8
  415774:	cmp    BYTE PTR [ebx],ah
  415776:	mov    ds:0x6aa9f4e6,al
  41577b:	cld    
  41577c:	jp     0x41572a
  41577e:	sbb    eax,DWORD PTR [edx+ebp*8-0x5b]
  415782:	jo     0x415750
  415784:	in     al,dx
  415785:	mov    ds:0xdfb10b59,eax
  41578a:	lea    edx,[esi+0x1efd8d2a]
  415790:	(bad)  
  415791:	retf   0x653f
  415794:	mov    dl,0x5
  415796:	mov    BYTE PTR [edx+0x97f282a],0x8f
  41579d:	test   BYTE PTR [edx+0x314fb1a4],ah
  4157a3:	repnz shl BYTE PTR [ebp-0x3a8a5955],0xbf
  4157ab:	xchg   esp,eax
  4157ac:	fcom   QWORD PTR [edx+0x68d0e6a0]
  4157b2:	pmulhw mm3,QWORD PTR [eax+0x2d]
  4157b6:	ror    DWORD PTR [ebx-0x52206567],cl
  4157bc:	cmc    
  4157bd:	inc    esp
  4157be:	enter  0x9a0f,0x89
  4157c2:	cdq    
  4157c3:	jae    0x415820
  4157c5:	mov    cx,0xc652
  4157c9:	clc    
  4157ca:	ret    0x19d8
  4157cd:	pop    ebp
  4157ce:	hlt    
  4157cf:	and    al,0xfd
  4157d1:	dec    eax
  4157d2:	adc    edx,0xffffffef
  4157d5:	inc    esp
  4157d6:	or     bh,bl
  4157d8:	mov    DWORD PTR [ebx+esi*1-0x3b223049],ebp
  4157df:	or     DWORD PTR [ebx-0x3a],0x75
  4157e3:	push   ebx
  4157e4:	mov    edi,0xf511a03e
  4157e9:	adc    eax,0x9047d5be
  4157ee:	or     eax,0x3e64a9c3
  4157f3:	cmp    eax,0x667f1f90
  4157f8:	stos   BYTE PTR es:[edi],al
  4157f9:	sbb    al,0x4d
  4157fb:	jl     0x41583a
  4157fd:	mov    edx,DWORD PTR [ebx+0x18]
  415800:	gs xchg esp,eax
  415802:	mov    bl,0x9a
  415804:	mov    ?,ecx
  415806:	mov    bl,0xd9
  415808:	std    
  415809:	push   ebx
  41580a:	scas   al,BYTE PTR es:[edi]
  41580b:	add    eax,0x1a5718be
  415810:	cmp    eax,0x9522fc2
  415815:	or     al,0x7f
  415817:	pop    ds
  415818:	les    edx,FWORD PTR [eax-0x2e]
  41581b:	pushf  
  41581c:	inc    BYTE PTR [edi]
  41581e:	dec    ecx
  41581f:	add    eax,ebx
  415821:	pop    es
  415822:	dec    ebp
  415823:	ins    BYTE PTR es:[edi],dx
  415824:	lods   al,BYTE PTR ds:[esi]
  415825:	mov    ah,0xd2
  415827:	dec    edi
  415828:	imul   esi,ecx,0x7158daf
  41582e:	test   al,0x5c
  415830:	popa   
  415831:	rcl    BYTE PTR [ebx+0xa39e0b8],1
  415837:	lds    edi,FWORD PTR [ebx]
  415839:	mov    ebx,0xf560d5a6
  41583e:	retf   0xd836
  415841:	shl    DWORD PTR [eax-0x19aa6836],0x6e
  415848:	loop   0x41580f
  41584a:	loop   0x415888
  41584c:	sub    al,0x57
  41584e:	mov    ds:0x805cdeff,ax
  415854:	xor    DWORD PTR [esi+eiz*4],0x49
  415858:	jns    0x415843
  41585a:	popf   
  41585b:	jl     0x41581c
  41585d:	fcomp  DWORD PTR [ebp+ecx*1-0x76]
  415861:	lock mov dh,0x59
  415864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415865:	stos   DWORD PTR es:[edi],eax
  415866:	iret   
  415867:	sub    esi,DWORD PTR [ebx-0x59c3c1e2]
  41586d:	mov    DWORD PTR [ebp+0x29],edi
  415870:	pop    es
  415871:	outs   dx,DWORD PTR ds:[esi]
  415872:	push   0xd2a9b0b2
  415877:	ds into 
  415879:	stc    
  41587a:	sbb    DWORD PTR [edx+0x63fefa17],eax
  415880:	scas   eax,DWORD PTR es:[edi]
  415881:	imul   esp,DWORD PTR [edi-0x64f4fd7d],0xc5977db0
  41588b:	or     eax,0xb7321cb8
  415890:	(bad)  
  415891:	mov    dl,0xc4
  415893:	xchg   DWORD PTR [ebx],esi
  415895:	xchg   edx,eax
  415896:	add    esi,DWORD PTR [esp+esi*4-0x35d96e36]
  41589d:	cld    
  41589e:	mov    cl,0x5a
  4158a0:	addr16 jmp 0x4158b3
  4158a3:	push   es
  4158a4:	mov    ebx,0x2001166f
  4158a9:	xchg   edx,eax
  4158aa:	imul   eax,DWORD PTR [edi-0x2c],0xffffff8b
  4158ae:	cli    
  4158af:	mov    dh,BYTE PTR [esi]
  4158b1:	mov    ds:0x7e1d24eb,al
  4158b6:	mov    al,0xe
  4158b8:	(bad)  
  4158b9:	push   edx
  4158ba:	sbb    esi,DWORD PTR [esi+0x6d]
  4158bd:	out    0x9f,eax
  4158bf:	mov    bl,0x81
  4158c1:	cmp    DWORD PTR [edi+edi*2+0x5c41ba00],0x5d3c5d18
  4158cc:	xor    al,0x57
  4158ce:	mov    eax,ds:0xd5b22c13
  4158d3:	(bad)  
  4158d5:	shr    BYTE PTR [ecx-0x11],1
  4158d8:	or     al,0x1d
  4158da:	add    eax,DWORD PTR [ebx]
  4158dc:	inc    eax
  4158dd:	or     al,0x34
  4158df:	stos   BYTE PTR es:[edi],al
  4158e0:	push   cs
  4158e1:	jl     0x41592e
  4158e3:	jno    0x41589b
  4158e5:	mov    edi,0x30c9c318
  4158ea:	push   edx
  4158eb:	out    0xe,al
  4158ed:	sbb    BYTE PTR [edi],bh
  4158ef:	mov    eax,ds:0xf2f23d6c
  4158f4:	ja     0x41592a
  4158f6:	mov    cl,0xf8
  4158f8:	mov    ebp,0x38a825d9
  4158fd:	scas   al,BYTE PTR es:[edi]
  4158fe:	retf   0x28d2
  415901:	or     eax,0x87a32842
  415906:	scas   eax,DWORD PTR es:[edi]
  415907:	xchg   ecx,eax
  415908:	sbb    dh,bh
  41590a:	loope  0x4158c7
  41590c:	loop   0x415910
  41590e:	ret    
  41590f:	push   0x52
  415911:	sbb    dl,ch
  415913:	push   edx
  415914:	stos   BYTE PTR es:[edi],al
  415915:	pop    ebx
  415916:	xor    ch,BYTE PTR [edi+0xb39913c]
  41591c:	std    
  41591d:	aas    
  41591e:	rcr    al,1
  415920:	outs   dx,DWORD PTR ds:[esi]
  415921:	mov    ds:0xf410cbdc,eax
  415926:	mov    DWORD PTR [edx+0x0],edx
  415929:	mov    ebx,0xa533739a
  41592e:	dec    eax
  41592f:	xchg   cl,bl
  415931:	mov    edi,0xff1726a3
  415936:	repz xchg esp,eax
  415938:	xor    al,0x3
  41593a:	lods   eax,DWORD PTR ds:[esi]
  41593b:	iret   
  41593c:	push   esp
  41593d:	xchg   edi,eax
  41593e:	mov    ah,BYTE PTR [ebp+0x573e80b0]
  415944:	std    
  415945:	lds    ecx,FWORD PTR [eax-0xc]
  415948:	pop    ebx
  415949:	pop    esp
  41594a:	pop    edi
  41594b:	push   ds
  41594c:	or     al,0xd6
  41594e:	cld    
  41594f:	hlt    
  415950:	mov    dh,0x10
  415952:	mov    edi,ebx
  415954:	cmp    edi,edi
  415956:	out    0xa4,al
  415958:	ins    BYTE PTR es:[edi],dx
  415959:	xlat   BYTE PTR ds:[ebx]
  41595a:	pop    ds
  41595b:	xchg   ebp,eax
  41595c:	and    BYTE PTR [ecx+0x52],ah
  41595f:	push   DWORD PTR [edi-0x40]
  415962:	adc    edx,DWORD PTR [eax+0x42]
  415965:	jns    0x4159c2
  415967:	arpl   WORD PTR [ebp+0x5b],cx
  41596a:	std    
  41596b:	sub    eax,0x53a75029
  415970:	es ret 0x65ec
  415974:	fld    TBYTE PTR ds:0x404586ca
  41597a:	cwde   
  41597b:	je     0x41595d
  41597d:	jns    0x415987
  41597f:	add    edx,edx
  415981:	fimul  WORD PTR [eax+0x63]
  415984:	add    ecx,eax
  415986:	xchg   ebx,eax
  415987:	add    ebx,DWORD PTR [eax*4-0x3180118f]
  41598e:	jg     0x415953
  415990:	inc    BYTE PTR [ebx-0x56]
  415993:	mov    cl,0xda
  415995:	call   0xe8d0:0x73b60968
  41599c:	iret   
  41599d:	jno    0x4159c6
  41599f:	or     ebx,ebp
  4159a1:	mov    ?,WORD PTR [esi]
  4159a3:	mov    ds:0x7401def5,eax
  4159a8:	mov    ah,0x62
  4159aa:	ja     0x41596d
  4159ac:	(bad)  
  4159ae:	xchg   DWORD PTR [esi],eax
  4159b0:	outs   dx,DWORD PTR ds:[esi]
  4159b1:	mov    al,ds:0x5cb38c20
  4159b6:	int    0x43
  4159b8:	or     ebp,DWORD PTR [esi+0x5819b7b2]
  4159be:	mov    al,0x89
  4159c0:	dec    edi
  4159c1:	in     al,dx
  4159c2:	iret   
  4159c3:	sbb    eax,0x3afa2778
  4159c8:	push   ecx
  4159c9:	or     ecx,DWORD PTR [edx+eiz*8+0xb]
  4159cd:	popf   
  4159ce:	fs fnop 
  4159d1:	xchg   esi,eax
  4159d2:	int3   
  4159d3:	ja     0x41598b
  4159d5:	xchg   bl,bh
  4159d7:	xchg   ebp,eax
  4159d8:	mov    ds:0x7d7517b1,eax
  4159dd:	iret   
  4159de:	imul   esi,DWORD PTR [esi-0x4bf6ebf],0x59522b2c
  4159e8:	test   esi,esp
  4159ea:	and    ebp,DWORD PTR [ecx]
  4159ec:	cmp    edx,ebp
  4159ee:	xor    ebp,edx
  4159f0:	sub    ecx,DWORD PTR [ebx-0xc5154ed]
  4159f6:	or     BYTE PTR [edi],0xa9
  4159f9:	(bad)  
  4159fa:	test   eax,0x2716a5fb
  4159ff:	gs xchg esp,eax
  415a01:	mov    edx,0x8c5463e6
  415a06:	lods   al,BYTE PTR ds:[esi]
  415a07:	xchg   ebp,eax
  415a08:	xchg   ebp,edi
  415a0a:	fbstp  TBYTE PTR [ebx]
  415a0c:	(bad)  
  415a0d:	lods   al,BYTE PTR ds:[esi]
  415a0e:	mov    edi,0xb5a34fda
  415a13:	and    al,0x5a
  415a15:	dec    edi
  415a16:	stc    
  415a17:	imul   esp,DWORD PTR [ecx+0x6980df03],0x5f
  415a1e:	(bad)  
  415a1f:	pop    edx
  415a20:	sub    al,0x6
  415a22:	jge    0x415a70
  415a24:	sub    esp,DWORD PTR [edi+ecx*1]
  415a27:	sub    al,0x35
  415a29:	cld    
  415a2a:	arpl   WORD PTR [ebx+0xeb28543],ax
  415a30:	mov    BYTE PTR [ebx],cl
  415a32:	adc    al,0xd5
  415a34:	shr    al,0x46
  415a37:	int3   
  415a38:	mov    cl,0xfb
  415a3a:	hlt    
  415a3b:	sti    
  415a3c:	jle    0x415a60
  415a3e:	aam    0x2e
  415a40:	sub    eax,ecx
  415a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a43:	(bad)  
  415a44:	retf   0x2316
  415a47:	test   BYTE PTR [eax+0x205b58a6],ah
  415a4d:	inc    edi
  415a4e:	setns  BYTE PTR [esi+0x6f]
  415a52:	fdivrp st(5),st
  415a54:	push   eax
  415a55:	repz sub al,0x8e
  415a58:	mov    ecx,0x2a4bcdee
  415a5d:	jnp    0x415a51
  415a5f:	mov    esi,0x7002815a
  415a64:	cmc    
  415a65:	adc    edx,DWORD PTR [esi+edx*2+0xc]
  415a69:	ret    0x48de
  415a6c:	push   edx
  415a6d:	fcmovne st,st(7)
  415a6f:	not    ebp
  415a71:	xchg   ebx,eax
  415a72:	stos   BYTE PTR es:[edi],al
  415a73:	sbb    al,0x6a
  415a75:	fadd   QWORD PTR [esi-0x29]
  415a78:	xchg   edi,eax
  415a79:	xchg   ebx,eax
  415a7a:	mov    eax,ds:0x4746f99f
  415a7f:	lea    edx,[esi+0x11]
  415a82:	rcr    DWORD PTR [edi+eax*8],0x7
  415a86:	xchg   BYTE PTR [edi-0x27935a47],ah
  415a8c:	ret    0xe404
  415a8f:	cdq    
  415a90:	shr    DWORD PTR [edx+0x3dffc6bf],0xc9
  415a97:	fidiv  DWORD PTR [edx+0x35]
  415a9a:	dec    edx
  415a9b:	cmc    
  415a9c:	push   es
  415a9d:	xor    DWORD PTR [ebx],esi
  415a9f:	es pop ebp
  415aa1:	rcr    esp,0x42
  415aa4:	push   ss
  415aa5:	inc    ebp
  415aa6:	pop    ebp
  415aa7:	jns    0x415a3b
  415aa9:	(bad)  
  415aaa:	sub    al,0xd8
  415aac:	adc    bl,dl
  415aae:	xlat   BYTE PTR ds:[ebx]
  415aaf:	and    edi,DWORD PTR [edi-0x4c3395aa]
  415ab5:	adc    ch,BYTE PTR [ecx+0x4b]
  415ab8:	pop    ebp
  415ab9:	dec    ebx
  415aba:	mov    al,ds:0x84ec9446
  415abf:	xchg   ecx,eax
  415ac0:	stos   DWORD PTR es:[edi],eax
  415ac1:	mov    dh,0x5f
  415ac3:	add    al,0x31
  415ac5:	mov    esi,0x9c12b591
  415aca:	pushf  
  415acb:	jae    0x415a6f
  415acd:	jmp    0xb074611e
  415ad2:	mov    al,0xcb
  415ad4:	adc    esi,DWORD PTR [edi-0x44]
  415ad7:	mov    ah,0xe7
  415ad9:	xor    edi,DWORD PTR [eax+0x68739c52]
  415adf:	(bad)  
  415ae0:	popa   
  415ae1:	mov    bh,cl
  415ae3:	(bad)  
  415ae4:	stc    
  415ae5:	xchg   edi,eax
  415ae6:	dec    edx
  415ae7:	and    edi,DWORD PTR [edx+0x6f]
  415aea:	sbb    al,dh
  415aec:	repnz add al,0x1e
  415aef:	in     al,dx
  415af0:	or     ch,BYTE PTR [esi-0x19]
  415af3:	jb     0x415a75
  415af5:	mov    ch,0x31
  415af7:	jae    0x415a7a
  415af9:	dec    esp
  415afa:	xor    eax,0x6da7f9b7
  415aff:	fild   DWORD PTR [esp+edi*1+0x4b]
  415b03:	mov    cl,0xca
  415b05:	cmp    DWORD PTR [edx+ebx*1+0x27],0xfffffff5
  415b0a:	pop    edx
  415b0b:	arpl   WORD PTR [eax],sp
  415b0d:	repz and eax,ebp
  415b10:	push   ss
  415b11:	add    BYTE PTR [eax],ch
  415b13:	jecxz  0x415b00
  415b15:	je     0x415b28
  415b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b18:	aas    
  415b19:	pop    ds
  415b1a:	sbb    ecx,DWORD PTR [esi-0x1a]
  415b1d:	mov    al,ds:0x726b79f8
  415b23:	pop    ds
  415b24:	mov    edx,0xa5354015
  415b29:	xchg   BYTE PTR [ebp-0x37],bl
  415b2c:	mov    edi,0x1b5139cd
  415b31:	nop
  415b32:	imul   ebx,DWORD PTR [ecx+0x6a8989ea],0x6fa38298
  415b3c:	jno    0x415bb9
  415b3e:	mov    ds:0xc0bdc20d,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	inc    eax
  415b4f:	mov    dh,0xe3
  415b51:	dec    ebx
  415b52:	jno    0x415b2d
  415b54:	add    BYTE PTR [eax],al
  415b56:	clc    
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [ebp-0x27],ch
  415b5c:	push   0x2167cac3
  415b61:	push   0x3d
  415b63:	sub    BYTE PTR [edi-0x31],dh
  415b66:	jne    0x415bd2
  415b68:	lock (bad) 
  415b6a:	sahf   
  415b6b:	push   ss
  415b6c:	lods   eax,DWORD PTR ds:[esi]
  415b6d:	sub    eax,0x15c50306
  415b72:	jecxz  0x415b34
  415b74:	mov    ah,0xb2
  415b76:	mov    al,ds:0x7df6fd05
  415b7b:	inc    edx
  415b7c:	cmp    eax,eax
  415b7e:	or     ebp,ebx
  415b80:	into   
  415b81:	rol    DWORD PTR ds:[edx-0x3b7c3e19],cl
  415b88:	pop    ebx
  415b89:	add    al,0xf6
  415b8b:	retf   0xe9cf
  415b8e:	in     eax,0x73
  415b90:	xor    DWORD PTR [edi+eax*1+0xffb0fc3],ecx
  415b97:	std    
  415b98:	loop   0x415b9c
  415b9a:	mov    eax,ds:0x2b71e94
  415b9f:	in     eax,0x90
  415ba1:	(bad)  [edx+0x7b08d8d1]
  415ba7:	test   eax,0xc081163e
  415bac:	push   es
  415bad:	dec    ecx
  415bae:	ins    BYTE PTR es:[edi],dx
  415baf:	aad    0x40
  415bb1:	cmp    ebx,DWORD PTR [ecx+0x39]
  415bb4:	mov    dh,0x2d
  415bb6:	shl    esp,cl
  415bb8:	dec    ecx
  415bb9:	(bad)  
  415bbb:	push   0x1b
  415bbd:	sar    BYTE PTR [ecx+0x46],cl
  415bc0:	jmp    0x9c88:0x4284c6d
  415bc7:	cld    
  415bc8:	rcl    DWORD PTR [edi+eiz*4-0x3dff076],1
  415bcf:	in     al,0x74
  415bd1:	loopne 0x415b81
  415bd3:	fistp  QWORD PTR [ebp+0x534b8f2f]
  415bd9:	xor    DWORD PTR [esi],ebx
  415bdb:	pop    ds
  415bdc:	out    0x66,al
  415bde:	fistp  QWORD PTR [edx-0x29]
  415be1:	dec    edx
  415be2:	sahf   
  415be3:	test   ah,ch
  415be5:	mov    WORD PTR [ebx-0x563da0ba],ss
  415beb:	fcmovnb st,st(0)
  415bed:	sbb    ch,BYTE PTR [edx+edi*1-0x5b3d69f6]
  415bf4:	cdq    
  415bf5:	or     esp,DWORD PTR ss:[bx+si]
  415bf9:	stos   BYTE PTR es:[edi],al
  415bfa:	jmp    0x415c3b
  415bfc:	mov    esp,0xad3a8a8e
  415c01:	push   ds
  415c02:	(bad)  
  415c03:	dec    eax
  415c04:	jmp    0x403a72f5
  415c09:	(bad)  
  415c0a:	rcl    DWORD PTR [edi+0x3a],1
  415c0d:	ret    
  415c0e:	dec    edi
  415c0f:	loope  0x415c2f
  415c11:	test   eax,0xad724259
  415c16:	pusha  
  415c17:	jmp    0x853f:0x894d7a83
  415c1e:	not    DWORD PTR [edi+eiz*1-0x278d2fb1]
  415c25:	stc    
  415c26:	js     0x415be0
  415c28:	add    bh,BYTE PTR [esi+0x2f693eac]
  415c2e:	jp     0x415c5d
  415c30:	sub    bl,BYTE PTR [ebx]
  415c32:	inc    ebp
  415c33:	mov    DWORD PTR [ecx+eax*4-0x335b7e4d],ebx
  415c3a:	retf   
  415c3b:	loopne 0x415c56
  415c3d:	dec    ecx
  415c3e:	fbld   TBYTE PTR [esi+0x502f5878]
  415c44:	jge    0x415beb
  415c46:	scas   eax,DWORD PTR es:[edi]
  415c47:	inc    esp
  415c48:	cld    
  415c49:	push   edx
  415c4a:	(bad)  
  415c4c:	int    0x20
  415c4e:	ret    0x55f9
  415c51:	into   
  415c52:	mov    ah,0x42
  415c54:	push   edx
  415c55:	mov    edx,0x263d6d05
  415c5a:	or     bl,BYTE PTR [ebp-0x7]
  415c5d:	clc    
  415c5e:	loop   0x415c73
  415c60:	repnz mov edx,0x540bdcfa
  415c66:	cmp    ecx,edx
  415c68:	and    ebx,DWORD PTR [ebx+0x12]
  415c6b:	ins    BYTE PTR es:[edi],dx
  415c6c:	imul   edx,DWORD PTR [ecx],0xffffff81
  415c6f:	sbb    BYTE PTR [edi],ch
  415c71:	jge    0x415cc8
  415c73:	adc    bh,BYTE PTR [esp+ebx*8+0x5f]
  415c77:	out    dx,al
  415c78:	cmp    bh,ch
  415c7a:	in     al,dx
  415c7b:	mov    dl,0x2f
  415c7d:	jmp    0x415c3e
  415c7f:	call   0x70ed828a
  415c84:	inc    ebx
  415c85:	and    ebx,eax
  415c87:	fst    st(7)
  415c89:	adc    eax,DWORD PTR [edx+0x715270d5]
  415c8f:	cwde   
  415c90:	mov    ebx,0xb2d15b11
  415c95:	push   es
  415c96:	xor    eax,0x2109fdce
  415c9b:	lods   al,BYTE PTR ds:[esi]
  415c9c:	in     eax,dx
  415c9d:	sub    ebx,DWORD PTR [ecx+ebx*1]
  415ca0:	shl    cl,0xf6
  415ca3:	cmp    edx,DWORD PTR [ecx-0x8]
  415ca6:	rcl    BYTE PTR [edx-0x30],1
  415ca9:	test   DWORD PTR cs:[ecx+0x393f29fa],ebx
  415cb0:	jmp    0xd749:0xfce46ca7
  415cb7:	das    
  415cb8:	loop   0x415cb8
  415cba:	fsubr  QWORD PTR [ecx+0x30bccb84]
  415cc0:	aas    
  415cc1:	push   0xae73ba42
  415cc6:	xor    al,0xf4
  415cc8:	jl     0x415c99
  415cca:	push   es
  415ccb:	pop    ds
  415ccc:	jbe    0x415ce1
  415cce:	mov    cl,0xad
  415cd0:	xor    ch,BYTE PTR [edx-0x4b]
  415cd3:	test   DWORD PTR [ecx-0x6b9fce7b],esp
  415cd9:	leave  
  415cda:	das    
  415cdb:	shl    BYTE PTR ds:0xe474a96,0xc1
  415ce3:	xor    ah,BYTE PTR [esi+0x53]
  415ce6:	pop    edx
  415ce7:	mov    ds:0xc8aacc6e,eax
  415cec:	xor    edx,esi
  415cee:	(bad)  
  415cf0:	pop    ecx
  415cf1:	in     eax,dx
  415cf2:	and    al,0xf6
  415cf4:	mov    al,0xe4
  415cf6:	or     eax,0xa14f6e1e
  415cfb:	sbb    edx,DWORD PTR [ecx-0x5c8136e5]
  415d01:	push   eax
  415d02:	sub    al,0x51
  415d04:	xchg   ecx,eax
  415d05:	pop    ds
  415d06:	add    ecx,DWORD PTR [edi]
  415d08:	cmp    ebx,DWORD PTR [ecx]
  415d0a:	imul   edi,DWORD PTR [edx],0xffffff8d
  415d0d:	sub    BYTE PTR ds:0xd09790d2,ch
  415d13:	pop    ds
  415d14:	fcomp  DWORD PTR [edi-0x74]
  415d17:	adc    al,0x9a
  415d19:	call   0x15c90c68
  415d1e:	repz sti 
  415d20:	push   ecx
  415d21:	inc    edx
  415d22:	mov    ecx,0xa873b4e0
  415d27:	cli    
  415d28:	out    dx,al
  415d29:	dec    eax
  415d2a:	(bad)  
  415d2c:	xchg   ecx,eax
  415d2d:	or     cl,BYTE PTR [ecx-0x3ef88843]
  415d33:	lds    esp,FWORD PTR [edx+0xf]
  415d36:	push   ss
  415d37:	aaa    
  415d38:	pop    ebp
  415d39:	dec    eax
  415d3a:	dec    ebp
  415d3b:	stos   BYTE PTR es:[edi],al
  415d3c:	ja     0x415cbe
  415d3e:	add    ah,0x65
  415d41:	sub    esp,esi
  415d43:	pop    edx
  415d44:	scas   eax,DWORD PTR es:[edi]
  415d45:	jp     0x415d16
  415d47:	aad    0xe4
  415d49:	(bad)  
  415d4a:	jg     0x415d80
  415d4c:	xchg   ecx,eax
  415d4d:	sahf   
  415d4e:	mov    eax,ds:0xe014fa61
  415d53:	test   DWORD PTR [eax-0x60],edi
  415d56:	dec    ebx
  415d57:	popa   
  415d58:	test   al,0x1e
  415d5a:	stos   BYTE PTR es:[edi],al
  415d5b:	fistp  WORD PTR [esi+0x5f27c97d]
  415d61:	adc    edx,DWORD PTR [edx-0x1]
  415d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d65:	je     0x415d35
  415d67:	not    BYTE PTR [esi+0x6d]
  415d6a:	mov    esi,0x9643e199
  415d6f:	and    DWORD PTR [edi-0x7875fe99],edx
  415d75:	fst    QWORD PTR [edi-0x77]
  415d78:	cwde   
  415d79:	and    bh,BYTE PTR [esi-0x4cfe92d1]
  415d7f:	aad    0xbb
  415d81:	adc    eax,0xefc7d983
  415d86:	bound  eax,QWORD PTR [ebx]
  415d88:	std    
  415d89:	daa    
  415d8a:	xchg   ecx,eax
  415d8b:	outs   dx,BYTE PTR ds:[esi]
  415d8c:	aas    
  415d8d:	sbb    al,0x32
  415d8f:	clc    
  415d90:	dec    eax
  415d91:	cs jecxz 0x415d99
  415d94:	in     al,dx
  415d95:	cld    
  415d96:	(bad)  
  415d97:	mov    ?,WORD PTR [ebp+0x5f]
  415d9a:	adc    eax,0x80189d12
  415d9f:	call   0xf51f:0x46b12cb7
  415da6:	add    eax,0x629790f7
  415dab:	sbb    eax,0x234d6d7e
  415db0:	xor    BYTE PTR [ecx-0xd],0x23
  415db4:	inc    ebx
  415db5:	repz (bad) 
  415db7:	add    eax,0xe812eafd
  415dbc:	fmul   DWORD PTR [ebx+0x3ed9a3c4]
  415dc2:	lock cmc 
  415dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc5:	xchg   esp,eax
  415dc6:	adc    BYTE PTR ds:0xbc7d18c4,0x13
  415dcd:	loopne 0x415e1e
  415dcf:	stc    
  415dd0:	lods   al,BYTE PTR ds:[esi]
  415dd1:	pop    ebp
  415dd2:	mov    DWORD PTR [esi-0x35],edi
  415dd5:	cdq    
  415dd6:	mov    bl,0x71
  415dd8:	fadd   QWORD PTR [ebx]
  415dda:	push   ds
  415ddb:	mov    ecx,0xedfc10c9
  415de0:	(bad)  
  415de1:	and    bh,BYTE PTR [esi]
  415de3:	mov    esi,0x85fa353c
  415de8:	rcl    esi,cl
  415dea:	imul   esi,DWORD PTR [ecx],0xffffffa1
  415ded:	cmp    bl,BYTE PTR [edi+0x7c8a4949]
  415df3:	xor    BYTE PTR [edx-0x10],0x64
  415df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df8:	gs leave 
  415dfa:	inc    eax
  415dfb:	jp     0x415dd3
  415dfd:	jecxz  0x415e2d
  415dff:	pop    esp
  415e00:	rcl    BYTE PTR [ecx],0x99
  415e03:	stos   BYTE PTR es:[edi],al
  415e04:	das    
  415e05:	jle    0x415e4e
  415e07:	pop    esi
  415e08:	sbb    eax,0x1d17e68c
  415e0d:	int    0xbc
  415e0f:	add    eax,0x3fb44956
  415e14:	call   0x3b53:0x1fe28c90
  415e1b:	or     bh,BYTE PTR [edi+eiz*1-0x70]
  415e1f:	ss (bad) 
  415e21:	(bad)  
  415e22:	sub    DWORD PTR [ebp+0x3c],ebx
  415e25:	loopne 0x415e58
  415e27:	pop    eax
  415e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e29:	rcr    BYTE PTR [ecx],cl
  415e2b:	xchg   esi,eax
  415e2c:	loopne 0x415dd0
  415e2e:	mov    ds:0x1a490853,eax
  415e33:	adc    ebp,DWORD PTR [ecx+0x5ade5c53]
  415e39:	cmp    eax,0x5487055d
  415e3e:	pop    es
  415e3f:	sub    edx,DWORD PTR [edx]
  415e41:	push   ds
  415e42:	jmp    0x98b1:0xf73c6def
  415e49:	(bad)  
  415e4a:	loop   0x415df3
  415e4c:	cli    
  415e4d:	scas   eax,DWORD PTR es:[edi]
  415e4e:	sbb    al,0xcd
  415e50:	push   edx
  415e51:	xlat   BYTE PTR ds:[ebx]
  415e52:	cmc    
  415e53:	mov    ecx,0x51e1ab85
  415e58:	cmp    DWORD PTR [edx],0xffffff8c
  415e5b:	jne    0x415ed8
  415e5d:	sub    BYTE PTR [ecx+0x801d789],0xec
  415e64:	test   BYTE PTR [ecx-0x1629955b],ah
  415e6a:	ins    DWORD PTR es:[edi],dx
  415e6b:	push   edx
  415e6c:	jns    0x415e73
  415e6e:	push   ebx
  415e6f:	in     al,dx
  415e70:	push   esi
  415e71:	in     eax,0x5f
  415e73:	xchg   ebx,eax
  415e74:	xor    al,0x73
  415e76:	cli    
  415e77:	add    ecx,DWORD PTR [edi]
  415e79:	xlat   BYTE PTR ds:[ebx]
  415e7a:	fs js  0x415ed6
  415e7d:	xchg   edx,eax
  415e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7f:	(bad)  
  415e80:	mov    dl,0xd3
  415e82:	cld    
  415e83:	jl     0x415e1e
  415e85:	aaa    
  415e86:	jecxz  0x415ea5
  415e88:	stos   DWORD PTR es:[edi],eax
  415e89:	mov    esi,0x5c9558f3
  415e8e:	jp     0x415e85
  415e90:	sbb    ebx,DWORD PTR [ebx]
  415e92:	outs   dx,BYTE PTR ds:[esi]
  415e93:	mov    DWORD PTR [edx+0x66616771],ebp
  415e99:	cmp    BYTE PTR [eax-0x2dd21959],al
  415e9f:	mov    es,WORD PTR [edx+0x75]
  415ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea3:	rcr    BYTE PTR [ecx],0x8c
  415ea6:	push   ebp
  415ea7:	daa    
  415ea8:	or     BYTE PTR [edx],0x82
  415eab:	(bad)  
  415eac:	ja     0x415e4d
  415eae:	mov    eax,0xc7bf6e3f
  415eb3:	stos   DWORD PTR es:[edi],eax
  415eb4:	repnz inc ebx
  415eb6:	fwait
  415eb7:	push   ds
  415eb8:	retf   0x927e
  415ebb:	pop    ds
  415ebc:	icebp  
  415ebd:	mov    bl,0x9a
  415ebf:	and    al,0x46
  415ec1:	mov    eax,0x3d72a57
  415ec6:	lahf   
  415ec7:	(bad)  
  415ec9:	dec    ebx
  415eca:	push   ecx
  415ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ecc:	mov    ecx,DWORD PTR [esi+0x4f]
  415ecf:	jmp    0x415f1a
  415ed1:	and    DWORD PTR [edx],esp
  415ed3:	jmp    0xd29b0352
  415ed8:	jno    0x415f4e
  415eda:	jp     0x415eae
  415edc:	in     al,dx
  415edd:	fcomip st,st(1)
  415edf:	jg     0x415e8a
  415ee1:	sbb    eax,0xe687384d
  415ee6:	inc    eax
  415ee7:	int    0xb9
  415ee9:	cld    
  415eea:	or     DWORD PTR [ebx+0x12481d89],ebp
  415ef0:	test   BYTE PTR [ebx-0x18fbfeb],al
  415ef6:	mov    al,ds:0xa50161cb
  415efb:	popa   
  415efc:	mov    ebx,0x13207464
  415f01:	cld    
  415f02:	xor    eax,0x7ab8bd67
  415f07:	lods   eax,DWORD PTR ds:[esi]
  415f08:	es mov ah,0x1d
  415f0b:	mov    ch,0x36
  415f0d:	into   
  415f0e:	lods   al,BYTE PTR ds:[esi]
  415f0f:	xor    cl,BYTE PTR [esi]
  415f11:	inc    eax
  415f12:	mov    BYTE PTR [edx-0x73],bh
  415f15:	div    bl
  415f17:	pushf  
  415f18:	jmp    0x415f71
  415f1a:	inc    esi
  415f1b:	sahf   
  415f1c:	jp     0x415ea6
  415f1e:	call   0xbd81f57a
  415f23:	shl    DWORD PTR [esi],cl
  415f25:	mov    ah,0xc6
  415f27:	mov    eax,0x48dc9d8
  415f2c:	pop    eax
  415f2d:	push   ss
  415f2e:	call   0x4da5:0xa6947774
  415f35:	adc    BYTE PTR [eax+0x1a48731d],bh
  415f3b:	jmp    0x415fa7
  415f3d:	xchg   esi,eax
  415f3e:	lock mov bl,0x7
  415f41:	fldcw  WORD PTR [edx+0x46]
  415f44:	push   ss
  415f45:	fmul   QWORD PTR [ebx-0x4c]
  415f48:	lahf   
  415f49:	cmp    ah,BYTE PTR [ebp+0x6d]
  415f4c:	push   ss
  415f4d:	pop    eax
  415f4e:	or     eax,0xd8ac6302
  415f53:	xchg   esp,eax
  415f54:	xchg   BYTE PTR ds:0x2d83881f,ch
  415f5a:	lea    edi,[ecx+0x792f5067]
  415f60:	cmp    al,0xbd
  415f62:	or     esi,ebp
  415f64:	pop    ds
  415f65:	sbb    eax,0x966c3c8c
  415f6a:	inc    edi
  415f6b:	xchg   esp,eax
  415f6c:	and    al,0xdb
  415f6e:	adc    al,0x24
  415f70:	mov    edx,0xdd00df0e
  415f75:	addr16 out dx,eax
  415f77:	pop    esp
  415f78:	mov    ecx,0x608f01fc
  415f7d:	xchg   esp,eax
  415f7e:	aad    0x94
  415f80:	cli    
  415f81:	jp     0x415f0e
  415f83:	push   0xffffffcc
  415f85:	ficomp DWORD PTR [edi]
  415f87:	hlt    
  415f88:	push   ecx
  415f89:	jmp    0x21d08e64
  415f8e:	cs (bad) 
  415f90:	jp     0x415fa4
  415f92:	arpl   WORD PTR [ebx-0x27ce0961],di
  415f98:	mov    cl,BYTE PTR [eax+edx*4-0x4f6bb20c]
  415f9f:	push   0xffffffef
  415fa1:	and    ah,cl
  415fa3:	ins    BYTE PTR es:[edi],dx
  415fa4:	das    
  415fa5:	ret    
  415fa6:	enter  0x285f,0xe1
  415faa:	mov    cl,0xe7
  415fac:	push   ds
  415fad:	stc    
  415fae:	fcom   DWORD PTR [ebp-0x2b06b98e]
  415fb4:	cld    
  415fb5:	xor    eax,0xbdbb30d0
  415fba:	xor    cl,BYTE PTR [ecx]
  415fbc:	sub    dl,BYTE PTR [esi]
  415fbe:	hlt    
  415fbf:	sbb    BYTE PTR [edx-0x4d6766a9],dh
  415fc5:	cwde   
  415fc6:	adc    edx,edx
  415fc8:	scas   eax,DWORD PTR es:[edi]
  415fc9:	lock jmp 0xf9b:0xa9a684a5
  415fd1:	test   edi,0x3edfb551
  415fd7:	pop    ecx
  415fd8:	pop    edi
  415fd9:	call   0xafa170bc
  415fde:	out    dx,eax
  415fdf:	adc    eax,0xeab25aea
  415fe4:	gs add esi,ebp
  415fe7:	dec    edx
  415fe8:	loop   0x41602c
  415fea:	jnp    0x415fbd
  415fec:	imul   eax,DWORD PTR [edi],0xffffffaf
  415fef:	ret    
  415ff0:	and    BYTE PTR ds:0x8289d9b5,dh
  415ff6:	xor    eax,0xf738c444
  415ffb:	push   es
  415ffc:	mov    al,ds:0xbf49af8a
  416001:	ja     0x415f93
  416003:	xlat   BYTE PTR ds:[ebx]
  416004:	(bad)  
  416006:	(bad)  
  416008:	sub    edi,DWORD PTR [edx+esi*4]
  41600b:	and    DWORD PTR [ebp+0x3f],edx
  41600e:	dec    ebx
  41600f:	add    BYTE PTR [ecx],bl
  416011:	xor    eax,0x123b75d4
  416016:	push   0xffffffc5
  416018:	std    
  416019:	sub    edi,DWORD PTR [edi+0x11]
  41601c:	sub    BYTE PTR [edx+0x18],cl
  41601f:	scas   eax,DWORD PTR es:[edi]
  416020:	sub    esi,DWORD PTR [edi-0x7fb00bfa]
  416026:	xchg   BYTE PTR ds:0x46ba07b0,bl
  41602c:	xchg   BYTE PTR [ecx+0x36],dl
  41602f:	push   ds
  416030:	cwde   
  416031:	pop    ebx
  416032:	sti    
  416033:	not    edi
  416035:	je     0x415ffa
  416037:	inc    ebp
  416038:	and    edi,DWORD PTR [edi-0x4b]
  41603b:	mov    bh,0xd7
  41603d:	pop    edi
  41603e:	(bad)  
  41603f:	pop    edx
  416040:	je     0x416033
  416042:	pop    esi
  416043:	sbb    bh,BYTE PTR [ebp+0x79c6fa5b]
  416049:	xchg   edx,eax
  41604a:	mov    BYTE PTR [ebp-0x1f],al
  41604d:	cs (bad) 
  41604f:	pushf  
  416050:	imul   eax,DWORD PTR [eax+0x3a],0x7fa63c75
  416057:	out    dx,eax
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x416023
  41605f:	jae    0x416029
  416061:	retf   0xde69
  416064:	add    BYTE PTR [eax],al
  416066:	clc    
  416067:	add    al,0x0
  416069:	add    BYTE PTR ds:0x229e1e54,ah
  41606f:	loop   0x416023
  416071:	dec    edi
  416072:	nop
  416073:	sub    bh,cl
  416075:	cmp    eax,0x807b1530
  41607a:	adc    bh,BYTE PTR ds:0x5d99165c
  416080:	fidiv  WORD PTR [edx+edi*2]
  416083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416084:	adc    BYTE PTR [ecx-0x21],dh
  416087:	adc    ch,BYTE PTR [edx+0x1898bbd4]
  41608d:	pop    ebx
  41608e:	ja     0x4160b9
  416090:	lock in al,dx
  416092:	and    BYTE PTR [edi+0x63a71e81],cl
  416098:	mov    cl,0xd2
  41609a:	dec    ebx
  41609b:	pop    ebp
  41609c:	and    eax,0xf0e42687
  4160a1:	jb     0x4160aa
  4160a3:	sar    bl,cl
  4160a5:	out    dx,eax
  4160a6:	mov    ah,bl
  4160a8:	imul   ebx,DWORD PTR [ebx+0x12824308],0x21
  4160af:	fld    TBYTE PTR [eax+0x1e]
  4160b2:	out    0x48,al
  4160b4:	adc    ecx,DWORD PTR ds:0x9caf08
  4160ba:	xchg   edi,eax
  4160bb:	or     eax,DWORD PTR [ebx]
  4160bd:	inc    DWORD PTR ds:0x4a6b6ec2
  4160c3:	out    0xbf,eax
  4160c5:	test   eax,0x4fe090a0
  4160ca:	push   0xffffffbf
  4160cc:	jae    0x416103
  4160ce:	stos   BYTE PTR es:[edi],al
  4160cf:	sub    DWORD PTR [ecx+eiz*8-0x3a],0xffffff92
  4160d4:	sub    ch,BYTE PTR [esi+0x19]
  4160d7:	cmc    
  4160d8:	and    eax,0x418d8fdc
  4160dd:	rcl    DWORD PTR [esp+esi*2],1
  4160e0:	pop    ebp
  4160e1:	inc    edx
  4160e2:	pop    edi
  4160e3:	mov    cl,0x89
  4160e5:	pop    esi
  4160e6:	pop    ds
  4160e7:	add    eax,0x29ad2b60
  4160ec:	mov    ebx,ss
  4160ee:	mov    al,0x45
  4160f0:	dec    ebx
  4160f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f2:	mov    ebx,0x81756ee7
  4160f7:	xor    al,0xe3
  4160f9:	cmp    BYTE PTR [esi],ch
  4160fb:	into   
  4160fc:	add    bh,BYTE PTR ds:0x73f6a278
  416102:	adc    al,0x29
  416104:	mov    dh,0x18
  416106:	push   es
  416107:	cmp    al,0xa
  416109:	or     ecx,DWORD PTR [edi+0x4552f17e]
  41610f:	pusha  
  416110:	push   esp
  416111:	aad    0xd9
  416113:	fild   WORD PTR [ebx+0x189157ca]
  416119:	push   ebx
  41611a:	fs int 0x6a
  41611d:	add    eax,0x45ae42ca
  416122:	fdivr  st(2),st
  416125:	mov    ebx,0xeb507bd0
  41612a:	imul   ebp,DWORD PTR [edx-0x18],0xffffff99
  41612e:	nop
  41612f:	mov    BYTE PTR [esi-0x18890c14],al
  416135:	sub    ch,BYTE PTR ds:0x33d14194
  41613b:	fucomp st(7)
  41613d:	jmp    0x41613a
  41613f:	or     edx,DWORD PTR [eax-0x78]
  416142:	adc    dh,BYTE PTR [ebx]
  416144:	dec    esp
  416145:	rol    DWORD PTR [esi+0x4f],0x2a
  416149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41614a:	(bad)  
  41614b:	xchg   esi,eax
  41614c:	inc    eax
  41614d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41614e:	xor    BYTE PTR [ebx+0x30],dl
  416151:	pop    esi
  416152:	imul   edx,eax,0xfffffff1
  416155:	mov    WORD PTR [ecx+0x33f40348],fs
  41615b:	out    0xd8,al
  41615d:	inc    esi
  41615e:	icebp  
  41615f:	pop    eax
  416160:	pop    eax
  416161:	ror    edi,cl
  416163:	or     ah,BYTE PTR [eax-0x5a182436]
  416169:	das    
  41616a:	mov    cl,0x6b
  41616c:	add    DWORD PTR [ebp-0x256b53fb],0x7e
  416173:	ss dec ecx
  416175:	sbb    eax,0xa7cf9d
  41617a:	int    0x9a
  41617c:	inc    eax
  41617d:	cli    
  41617e:	call   0x13f4ae23
  416183:	mov    ds:0x5e1c5e2,al
  416188:	cli    
  416189:	outs   dx,BYTE PTR ds:[esi]
  41618a:	sub    BYTE PTR [ebx],0xb0
  41618d:	inc    edi
  41618e:	and    eax,0x168e4537
  416193:	push   edi
  416194:	pcmpgtd mm0,QWORD PTR [esi+edx*1-0x64ccd7eb]
  41619c:	inc    ebp
  41619d:	loopne 0x4161d2
  41619f:	or     al,0xd7
  4161a1:	je     0x4161fe
  4161a3:	repz retf 0xd3f2
  4161a7:	mov    edi,0x944e9b38
  4161ac:	pop    ss
  4161ad:	out    dx,al
  4161ae:	jl     0x41619e
  4161b0:	shr    BYTE PTR [esi+eax*2-0x45d4718b],0x13
  4161b8:	loope  0x4161e0
  4161ba:	push   0x2ab3da34
  4161bf:	jmp    0x416197
  4161c1:	adc    BYTE PTR [esi],0x86
  4161c4:	push   edx
  4161c5:	cld    
  4161c6:	imul   eax,DWORD PTR [ebx-0x2fd17c38],0xffffff92
  4161cd:	xor    eax,0xd18f796e
  4161d2:	cmp    ecx,ebx
  4161d4:	cmc    
  4161d5:	cmp    eax,0x7f74f1b0
  4161da:	jne    0x41615f
  4161dc:	jo     0x416236
  4161de:	jnp    0x4161c1
  4161e0:	scas   eax,DWORD PTR es:[edi]
  4161e1:	neg    dl
  4161e3:	ins    DWORD PTR es:[edi],dx
  4161e4:	es dec ebx
  4161e6:	in     al,0xd2
  4161e8:	push   ebp
  4161e9:	loope  0x4161fe
  4161eb:	pop    edi
  4161ec:	sub    BYTE PTR [ebx],bl
  4161ee:	inc    esp
  4161ef:	xor    eax,0x96067ec2
  4161f4:	xchg   edx,eax
  4161f5:	fst    DWORD PTR [esi+0x50]
  4161f8:	jp     0x416202
  4161fa:	adc    al,0x9e
  4161fc:	pop    esi
  4161fd:	mov    esp,0xa6bfe2ea
  416202:	sub    DWORD PTR cs:[ecx-0x3e],0x5ea35bd8
  41620a:	push   edx
  41620b:	mov    ds:0xf8bac1b0,eax
  416210:	push   esp
  416211:	movaps XMMWORD PTR [edx+ebx*4+0x261889d7],xmm7
  416219:	test   BYTE PTR [eax],dl
  41621b:	jns    0x4161bc
  41621d:	lahf   
  41621e:	and    BYTE PTR [ebx-0x62],bh
  416221:	push   ebp
  416222:	pushf  
  416223:	mov    eax,0x891b2ac3
  416228:	jmp    0x416288
  41622a:	dec    esi
  41622b:	add    DWORD PTR [esi+eax*4],edx
  41622e:	add    bh,bl
  416230:	cmp    BYTE PTR [edx+0xb],dh
  416233:	jnp    0x41625e
  416235:	sahf   
  416236:	mov    ds:0x9aef592,al
  41623b:	xchg   dh,ah
  41623d:	pop    esp
  41623e:	ficom  WORD PTR [ecx]
  416240:	add    eax,DWORD PTR [ebx]
  416242:	jns    0x4161ef
  416244:	inc    ecx
  416245:	lahf   
  416246:	jne    0x41622e
  416248:	push   ebp
  416249:	pop    ebx
  41624a:	fisttp WORD PTR [esi+eax*4]
  41624d:	pop    edx
  41624e:	retf   
  41624f:	dec    ebp
  416250:	retf   
  416251:	enter  0x95f9,0x8c
  416255:	cdq    
  416256:	dec    ebx
  416257:	mov    dl,bl
  416259:	mov    cl,0x24
  41625b:	add    ah,BYTE PTR [eax-0x4d]
  41625e:	leave  
  41625f:	dec    edx
  416260:	push   eax
  416261:	jmp    0xbf1cdc06
  416266:	inc    ebp
  416267:	in     al,0xfa
  416269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626a:	and    eax,0x71ea1866
  41626f:	jmp    0xa088d699
  416274:	xchg   edi,esi
  416276:	mov    ch,0xd5
  416278:	(bad)  
  416279:	test   ah,ah
  41627b:	jle    0x4162d7
  41627d:	ret    
  41627e:	imul   edi,DWORD PTR [edi-0x30],0x1d670c44
  416285:	mul    DWORD PTR ds:0x48823e3e
  41628b:	jno    0x416290
  41628d:	inc    esp
  41628e:	mov    eax,DWORD PTR [ebx]
  416290:	push   ebp
  416291:	sbb    BYTE PTR [edi+0x78],bh
  416294:	mov    al,ds:0xefa6b1a4
  416299:	pusha  
  41629a:	leave  
  41629b:	rcl    ecx,0xd2
  41629e:	mov    esi,DWORD PTR [esi]
  4162a0:	rol    BYTE PTR [edi],0x37
  4162a3:	push   esp
  4162a4:	enter  0x66b2,0xba
  4162a8:	ret    0xedd
  4162ab:	lock fs mov ebx,0x4bf1096c
  4162b2:	inc    ecx
  4162b3:	shl    BYTE PTR [esp+edi*8+0x3d661bef],cl
  4162ba:	ins    BYTE PTR es:[edi],dx
  4162bb:	sbb    BYTE PTR [eax-0x38],ch
  4162be:	lods   eax,DWORD PTR ds:[esi]
  4162bf:	scas   al,BYTE PTR es:[edi]
  4162c0:	ja     0x416330
  4162c2:	or     eax,0xfdcde7cd
  4162c7:	xor    BYTE PTR [esi],cl
  4162c9:	and    al,0xe4
  4162cb:	sbb    bl,BYTE PTR [esp+ebx*4+0x6ecbe75b]
  4162d2:	fs (bad) 
  4162d4:	ret    0x5c45
  4162d7:	cwde   
  4162d8:	(bad)  
  4162da:	sub    DWORD PTR [eax-0x21a493c8],edi
  4162e0:	lods   eax,DWORD PTR ds:[esi]
  4162e1:	sbb    dh,dh
  4162e3:	sub    ebx,ecx
  4162e5:	sbb    esp,esi
  4162e7:	fisubr DWORD PTR [esi]
  4162e9:	mov    edx,0x2f1024ef
  4162ee:	push   0xffffffea
  4162f0:	js     0x416353
  4162f2:	icebp  
  4162f3:	mov    edi,0x460cfe94
  4162f8:	mov    ds:0x7745ae03,al
  4162fd:	aad    0x87
  4162ff:	dec    edi
  416300:	in     eax,dx
  416301:	mov    ah,ah
  416303:	cdq    
  416304:	push   cs
  416305:	not    BYTE PTR [esi]
  416307:	stos   BYTE PTR es:[edi],al
  416308:	pop    ecx
  416309:	scas   eax,DWORD PTR es:[edi]
  41630a:	sbb    eax,0x4f674a7d
  41630f:	sub    al,0x78
  416311:	fwait
  416312:	or     dh,ch
  416314:	ficom  WORD PTR [eax-0x66]
  416317:	into   
  416318:	popf   
  416319:	enter  0x301c,0x26
  41631d:	jnp    0x4162ec
  41631f:	lahf   
  416320:	mov    dh,0x7c
  416322:	lods   eax,DWORD PTR ds:[esi]
  416323:	mov    esi,0x9752cb2d
  416328:	xor    dh,al
  41632a:	inc    edi
  41632b:	popf   
  41632c:	daa    
  41632d:	xor    ebp,DWORD PTR [edi+0x4495b874]
  416333:	pop    es
  416334:	fst    DWORD PTR [edx+0xe]
  416337:	xchg   BYTE PTR [edi-0x65ba687e],al
  41633d:	cmp    al,0xa2
  41633f:	mov    ebp,0xf5aacc86
  416344:	jne    0x41635b
  416346:	fwait
  416347:	lods   al,BYTE PTR ds:[esi]
  416348:	hlt    
  416349:	push   ss
  41634a:	(bad)  
  41634c:	std    
  41634d:	adc    DWORD PTR [edi+0x2d],0xffffffb2
  416351:	and    edi,DWORD PTR [esi+0x2a11f6da]
  416357:	xchg   DWORD PTR [ecx-0x2b8f45aa],eax
  41635d:	ins    BYTE PTR es:[edi],dx
  41635e:	jge    0x4163bf
  416360:	fcmovbe st,st(6)
  416362:	mov    edx,0x16431a48
  416367:	sub    al,0x2f
  416369:	ficomp WORD PTR [ebp-0x4f4fa72e]
  41636f:	dec    esi
  416370:	iret   
  416371:	add    ch,BYTE PTR [edi-0x1efaa0f9]
  416377:	xchg   di,ax
  416379:	and    DWORD PTR [ebx-0x72],ebp
  41637c:	in     eax,dx
  41637d:	fnstenv [edi+0x57]
  416380:	dec    esi
  416381:	or     al,0xa
  416383:	scas   eax,DWORD PTR es:[edi]
  416384:	and    bh,BYTE PTR [edx+0x75]
  416387:	mov    esi,0x7be4a61f
  41638c:	les    esi,FWORD PTR [esi-0x7320c676]
  416392:	outs   dx,BYTE PTR ds:[esi]
  416393:	cld    
  416394:	mov    ebx,0x8cc783a
  416399:	fbstp  TBYTE PTR [eax-0x59e106de]
  41639f:	inc    edi
  4163a0:	mov    DWORD PTR [eax+edx*1],edx
  4163a3:	xchg   ecx,eax
  4163a4:	popa   
  4163a5:	xchg   ebp,eax
  4163a6:	mov    ebx,0xd792b77
  4163ab:	push   es
  4163ac:	icebp  
  4163ad:	jae    0x416397
  4163af:	adc    DWORD PTR [ebx+0x27e6d82d],ecx
  4163b5:	loopne 0x4163b5
  4163b7:	jo     0x4163aa
  4163b9:	mov    ds:0x5f6e61ea,al
  4163be:	int    0x16
  4163c0:	aas    
  4163c1:	add    DWORD PTR [ecx],edi
  4163c3:	stos   DWORD PTR es:[edi],eax
  4163c4:	(bad)  
  4163c5:	out    0x7b,eax
  4163c7:	xchg   esp,eax
  4163c8:	popf   
  4163c9:	sbb    bl,BYTE PTR [esi+0x1f]
  4163cc:	test   eax,0x529721bd
  4163d1:	pop    esi
  4163d2:	inc    eax
  4163d3:	push   0xffffffb8
  4163d5:	add    BYTE PTR [ebp-0x37],ch
  4163d8:	add    BYTE PTR [edi],dl
  4163da:	push   ebp
  4163db:	sub    BYTE PTR [esi-0x2b935e65],dl
  4163e1:	mov    eax,0x10852aa9
  4163e6:	clc    
  4163e7:	sti    
  4163e8:	dec    ebx
  4163e9:	jno    0x4163f4
  4163eb:	addr16 pop ebx
  4163ed:	cmp    edi,DWORD PTR [edi+0x29]
  4163f0:	loopne 0x416436
  4163f2:	sbb    DWORD PTR [ebp+0x5ba4b745],0xc3ec7fe7
  4163fc:	(bad)
  4163ff:	popa   
  416400:	and    BYTE PTR ds:0x2e49cece,dl
  416406:	ficomp DWORD PTR [edi]
  416408:	nop
  416409:	out    0xe2,eax
  41640b:	cmp    ebx,DWORD PTR [edi+0x68]
  41640e:	or     al,0xd0
  416410:	inc    eax
  416411:	cmp    bh,BYTE PTR [ebp-0x25]
  416414:	xor    bl,BYTE PTR [ecx+0x1a285059]
  41641a:	gs mov ecx,0xbe25a2c1
  416420:	test   ebp,ebp
  416422:	cmc    
  416423:	pop    ss
  416424:	or     al,0xd6
  416426:	mov    ebx,0x20dd6eca
  41642c:	sahf   
  41642d:	mov    bh,0x86
  41642f:	jae    0x4164a5
  416431:	int    0xc5
  416433:	loope  0x41647f
  416435:	scas   eax,DWORD PTR es:[edi]
  416436:	sub    eax,0xce2c60e5
  41643b:	inc    edx
  41643c:	mov    DWORD PTR [ebx],eax
  41643e:	sbb    BYTE PTR [ebx+0x6c3282f7],0x2a
  416445:	daa    
  416446:	aas    
  416447:	inc    edx
  416448:	fstp   TBYTE PTR [esi-0x6ab4295a]
  41644e:	inc    eax
  41644f:	inc    eax
  416450:	call   0x5f96:0x99d2e364
  416457:	xchg   esi,eax
  416458:	and    DWORD PTR [esi-0x52],ecx
  41645b:	push   cs
  41645c:	shl    ecx,cl
  41645e:	sbb    DWORD PTR [eax-0x4e],0x598c364
  416465:	lahf   
  416466:	cmp    al,0x82
  416468:	sub    edx,ebp
  41646a:	daa    
  41646b:	or     ch,BYTE PTR [edi+0x65]
  41646e:	xchg   ecx,eax
  41646f:	push   esp
  416470:	ret    0xb79b
  416473:	pop    edx
  416474:	mov    es:0xafedd4f6,eax
  41647a:	xchg   esi,eax
  41647b:	call   FWORD PTR [eax+0x77]
  41647e:	mov    dl,0x14
  416480:	je     0x416433
  416482:	push   esi
  416483:	push   ecx
  416484:	sub    DWORD PTR [ebp+0x283218d7],esp
  41648a:	pop    edx
  41648b:	popf   
  41648c:	push   ebp
  41648d:	adc    edi,ebp
  41648f:	test   al,0x1a
  416491:	fisttp WORD PTR [ecx-0x7320630b]
  416497:	(bad)  
  416498:	mov    al,ds:0xe4453745
  41649d:	mov    ah,0x28
  41649f:	sub    DWORD PTR [esi+0x6d],ebx
  4164a2:	dec    ebp
  4164a3:	adc    al,bh
  4164a5:	outs   dx,DWORD PTR ds:[esi]
  4164a6:	fcomip st,st(5)
  4164a8:	test   BYTE PTR [eax+0x66b98f5],0xf9
  4164af:	mov    BYTE PTR [ecx-0x6d],0x54
  4164b3:	jae    0x416480
  4164b5:	cmp    eax,0x63078da1
  4164ba:	stc    
  4164bb:	sub    dl,BYTE PTR [edx+0x6afc6272]
  4164c1:	ret    0xe7cd
  4164c4:	leave  
  4164c5:	das    
  4164c6:	sbb    eax,0x8ead1062
  4164cb:	sub    edx,ebx
  4164cd:	push   edx
  4164ce:	inc    eax
  4164cf:	(bad)  
  4164d0:	pop    ds
  4164d1:	jmp    0x8b2e:0x2968d233
  4164d8:	imul   esi,DWORD PTR [esi+0x775e69ad],0xffffff97
  4164df:	nop
  4164e0:	clc    
  4164e1:	inc    ecx
  4164e2:	fst    st(3)
  4164e4:	and    al,BYTE PTR ds:0xf5c2ff52
  4164ea:	aad    0x90
  4164ec:	addr16 inc esi
  4164ee:	shr    esp,cl
  4164f0:	inc    edi
  4164f1:	scas   al,BYTE PTR es:[edi]
  4164f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f3:	cmp    eax,0x6b116be8
  4164f8:	rcl    BYTE PTR [edi+0x1],0x69
  4164fc:	xchg   ebp,eax
  4164fd:	ja     0x416549
  4164ff:	or     dl,cl
  416501:	mov    cs,ebp
  416503:	les    esp,FWORD PTR [esp+ebp*4-0x74]
  416507:	mov    edi,0x9ff49df4
  41650c:	mov    ebp,DWORD PTR [edi+0x63ff1172]
  416512:	xor    edi,eax
  416514:	in     eax,dx
  416515:	fcomp  DWORD PTR [esi]
  416517:	sub    al,0x75
  416519:	rcl    BYTE PTR [edi+eax*2-0x12c10c2f],0x8d
  416521:	imul   ebp,edi,0xe7dcd1a1
  416527:	push   ecx
  416528:	xor    al,0xab
  41652a:	ja     0x416522
  41652c:	xor    BYTE PTR [ecx+ecx*4],bl
  41652f:	retf   0x8574
  416532:	jmp    0x15dc:0x98956fdc
  416539:	mov    ebp,0x8ec70870
  41653e:	popa   
  41653f:	mov    WORD PTR gs:[ebp+0x77],ss
  416543:	test   DWORD PTR [edi-0x18],ebp
  416546:	xchg   ebp,eax
  416547:	ror    BYTE PTR [edi],cl
  416549:	ins    BYTE PTR es:[edi],dx
  41654a:	jmp    0xd3a4:0x3690b725
  416551:	shl    BYTE PTR [esi],1
  416553:	adc    esi,DWORD PTR [edi+0x4580daa6]
  416559:	ret    0xadd9
  41655c:	test   ebx,edi
  41655e:	pop    ss
  41655f:	ficom  WORD PTR [ebp-0x15f00719]
  416565:	ja     0x416566
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x9f1
  41656f:	jae    0x416575
  416571:	add    BYTE PTR [ecx-0x1d],ah
  416574:	add    BYTE PTR [eax],al
  416576:	clc    
  416577:	add    al,0x0
  416579:	add    BYTE PTR [esi],dl
  41657b:	loope  0x4165a8
  41657d:	pop    esp
  41657e:	call   0xbebb918c
  416583:	mov    cl,0x38
  416585:	jnp    0x416526
  416587:	loop   0x41651e
  416589:	scas   eax,DWORD PTR es:[edi]
  41658a:	push   edx
  41658b:	sbb    esp,DWORD PTR [ebp-0x6882771]
  416591:	add    esi,DWORD PTR [edx+0x5d]
  416594:	adc    al,0x48
  416596:	dec    edx
  416597:	sbb    al,BYTE PTR [edi+0x5f]
  41659a:	aad    0x91
  41659c:	jno    0x416589
  41659e:	xor    esi,DWORD PTR [ebp-0x39]
  4165a1:	popf   
  4165a2:	div    BYTE PTR ds:0xafba77eb
  4165a8:	jg     0x416573
  4165aa:	cwde   
  4165ab:	(bad)
  4165ae:	rol    DWORD PTR [edi-0x59],1
  4165b1:	hlt    
  4165b2:	adc    al,0x71
  4165b4:	jl     0x416579
  4165b6:	pop    ebx
  4165b7:	xchg   esp,eax
  4165b8:	shl    dh,1
  4165ba:	inc    ebp
  4165bb:	xchg   ebx,eax
  4165bc:	push   0xffffff89
  4165be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165bf:	sub    cl,BYTE PTR [esi]
  4165c1:	lods   al,BYTE PTR ds:[esi]
  4165c2:	int3   
  4165c3:	jl     0x416565
  4165c5:	sub    eax,0x70a35ec0
  4165ca:	jns    0x416649
  4165cc:	xor    eax,0x15859c2a
  4165d1:	and    BYTE PTR [esi+0x46],ah
  4165d4:	cmp    ebx,edi
  4165d6:	aad    0xbd
  4165d8:	in     eax,0x11
  4165da:	add    DWORD PTR [esi+0x2770a063],ebx
  4165e0:	or     bl,ch
  4165e2:	pusha  
  4165e3:	mov    bl,0x18
  4165e5:	test   DWORD PTR [ebx-0x737113e1],edi
  4165eb:	(bad)  
  4165ec:	mov    ecx,0xfba6a770
  4165f1:	in     eax,dx
  4165f2:	push   ds
  4165f3:	cli    
  4165f4:	ds cmc 
  4165f6:	inc    esi
  4165f7:	xor    edi,DWORD PTR [esi+0x4c165315]
  4165fd:	in     al,dx
  4165fe:	cmp    eax,0x80f3e49e
  416603:	pop    edx
  416604:	je     0x416663
  416606:	pop    edi
  416607:	shl    DWORD PTR [edx-0xb],0xf2
  41660b:	adc    al,0xf3
  41660d:	aam    0xbc
  41660f:	adc    dl,BYTE PTR [esi+edi*2+0x9628f44]
  416616:	xor    eax,0x342f822
  41661b:	xchg   esp,eax
  41661c:	pop    es
  41661d:	retf   
  41661e:	nop
  41661f:	test   DWORD PTR [eax-0x31],0x4219c690
  416626:	cld    
  416627:	stos   BYTE PTR es:[edi],al
  416628:	mov    al,ds:0xe6baed51
  41662d:	jmp    0x35343a70
  416632:	sub    DWORD PTR [eax+0x19bdbbdf],eax
  416638:	js     0x4165ba
  41663a:	std    
  41663b:	push   cs
  41663c:	mov    WORD PTR [edi+0x39],gs
  41663f:	push   ebx
  416640:	stos   DWORD PTR es:[edi],eax
  416641:	and    ah,bl
  416643:	frstor [eax]
  416645:	xchg   DWORD PTR [ebx+0x79],ebx
  416648:	fdiv   QWORD PTR [ebp-0x3f]
  41664b:	imul   eax,ebp,0xffffffc1
  41664e:	add    ah,BYTE PTR [edi]
  416650:	(bad)  
  416651:	sub    eax,0x686e9c0e
  416656:	lods   al,BYTE PTR ds:[esi]
  416657:	xchg   ebp,eax
  416658:	fwait
  416659:	btr    ebp,edi
  41665c:	(bad)  
  41665d:	es push eax
  41665f:	lea    ebx,[eax-0x656365e5]
  416665:	bound  ecx,QWORD PTR [edi-0x604ddbc0]
  41666b:	int    0x29
  41666d:	(bad)  
  41666e:	mov    eax,ds:0x7b4c3ca8
  416673:	inc    edi
  416674:	inc    esi
  416675:	xchg   DWORD PTR [edx+esi*8+0x46ddc6b0],esi
  41667c:	and    al,0x4
  41667e:	xor    BYTE PTR [eax+edi*1+0x6f],dh
  416682:	inc    edi
  416683:	adc    ah,BYTE PTR [esi+0x53949078]
  416689:	mov    BYTE PTR [esi+ecx*4],bl
  41668c:	mov    dh,0xcd
  41668e:	and    edx,DWORD PTR [esi]
  416690:	sbb    eax,0xb95f012f
  416695:	(bad)  
  416696:	sahf   
  416697:	jg     0x41661b
  416699:	push   ebx
  41669a:	mov    al,ds:0xd4ebb170
  41669f:	shr    DWORD PTR [eax],1
  4166a1:	pop    edi
  4166a2:	outs   dx,BYTE PTR ds:[esi]
  4166a3:	and    eax,0x8f39d961
  4166a8:	adc    al,0xf7
  4166aa:	sub    al,0xc4
  4166ac:	enter  0x5940,0xb7
  4166b0:	jns    0x4166ac
  4166b2:	adc    dh,dl
  4166b4:	xor    esi,esi
  4166b6:	es call 0x86f87db9
  4166bc:	inc    ebp
  4166bd:	(bad)  
  4166be:	mov    esi,0xd5d5676d
  4166c3:	imul   esp,edx,0x45
  4166c6:	aad    0xa3
  4166c8:	stc    
  4166c9:	inc    esi
  4166ca:	lds    ebx,FWORD PTR [esi]
  4166cc:	popa   
  4166cd:	and    BYTE PTR [edx],0xda
  4166d0:	sbb    esi,DWORD PTR [ebp+0x1e]
  4166d3:	mov    ebp,0x2a3513ac
  4166d8:	outs   dx,DWORD PTR ds:[esi]
  4166d9:	imul   ebx,eax,0xc9184f2d
  4166df:	dec    ebp
  4166e0:	push   cs
  4166e1:	daa    
  4166e2:	(bad)  
  4166e3:	sub    al,0xea
  4166e5:	idiv   al
  4166e7:	daa    
  4166e8:	and    eax,0xe77c8a62
  4166ed:	mov    ecx,DWORD PTR [ebx]
  4166ef:	out    dx,eax
  4166f0:	int3   
  4166f1:	(bad)  
  4166f2:	pop    edx
  4166f3:	stos   DWORD PTR es:[edi],eax
  4166f4:	add    dl,BYTE PTR [edi-0x65d500dc]
  4166fa:	mov    al,ds:0xa23817e2
  4166ff:	inc    edx
  416700:	jmp    0xab48517c
  416705:	addr16 pop ebp
  416707:	xchg   dh,cl
  416709:	ds mov dl,0x33
  41670c:	std    
  41670d:	fisttp DWORD PTR [ebx+eax*2-0x5c14f12e]
  416715:	add    al,0x66
  416717:	dec    ebx
  416718:	xor    esp,DWORD PTR [ecx+0x22]
  41671b:	jp     0x416775
  41671d:	push   0xbb84415d
  416722:	sbb    al,0xc0
  416724:	jae    0x41677b
  416726:	mov    ?,eax
  416728:	repnz mov edx,0x9dd14a56
  41672e:	es or  esi,edx
  416731:	mov    ecx,DWORD PTR [edx+ebx*8+0x6f3891aa]
  416738:	fist   WORD PTR [ebx*2-0x1c28d219]
  41673f:	je     0x4167bd
  416741:	loop   0x4166e4
  416743:	js     0x4166de
  416745:	sbb    DWORD PTR [edi],ecx
  416747:	jmp    0x4166e0
  416749:	xor    DWORD PTR [ebx+0x3aec9da3],ecx
  41674f:	push   eax
  416750:	stos   BYTE PTR es:[edi],al
  416751:	dec    ebx
  416752:	inc    ebx
  416753:	fwait
  416754:	in     al,0x66
  416756:	mov    edi,0x6ccac1e3
  41675b:	push   0x5bc17476
  416760:	inc    edx
  416761:	test   DWORD PTR [ebp+0x3d0a9911],edx
  416767:	das    
  416768:	jno    0x416726
  41676a:	mov    eax,ds:0x6f39838a
  41676f:	inc    DWORD PTR [edx+0x25]
  416772:	dec    ebx
  416773:	fimul  DWORD PTR [edx-0xe238ecc]
  416779:	xchg   ebx,eax
  41677a:	adc    al,BYTE PTR [esi+0x2ac2ea97]
  416780:	add    DWORD PTR [ebp-0x67],edi
  416783:	mov    al,0x4c
  416785:	mov    ebx,0xaed35c6a
  41678a:	jae    0x4167a0
  41678c:	mov    dh,0x47
  41678e:	js     0x416747
  416790:	aam    0x85
  416792:	aad    0x81
  416794:	or     dl,BYTE PTR [edi+0x2b]
  416797:	(bad)  
  416798:	out    dx,al
  416799:	or     BYTE PTR [ebx],0x10
  41679c:	gs jg  0x416782
  41679f:	sar    esp,cl
  4167a1:	xchg   edx,eax
  4167a2:	imul   esi,DWORD PTR [edx],0xffffff8a
  4167a5:	dec    esi
  4167a6:	pushf  
  4167a7:	fimul  DWORD PTR [ebp+0x3a]
  4167aa:	out    dx,al
  4167ab:	dec    ebx
  4167ac:	mov    gs,WORD PTR [ebp-0x1c5ddfd0]
  4167b2:	pop    ecx
  4167b3:	jnp    0x416749
  4167b5:	push   eax
  4167b6:	aas    
  4167b7:	sub    al,0x56
  4167b9:	mov    ds:0x6a898e0c,al
  4167be:	cdq    
  4167bf:	and    eax,0x9e418546
  4167c4:	popa   
  4167c5:	push   ds
  4167c6:	mov    ah,0xf
  4167c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c9:	sbb    al,0x57
  4167cb:	sub    DWORD PTR [ebx+0x6b],esp
  4167ce:	gs lock pop ss
  4167d1:	cli    
  4167d2:	stos   DWORD PTR es:[edi],eax
  4167d3:	push   cs
  4167d4:	push   edi
  4167d5:	outs   dx,DWORD PTR ds:[esi]
  4167d6:	mov    edi,0x2878e8b5
  4167db:	dec    eax
  4167dc:	push   0xffffff95
  4167de:	or     al,0xd2
  4167e0:	inc    esi
  4167e1:	test   al,0x85
  4167e3:	push   ecx
  4167e4:	fwait
  4167e5:	rep stos BYTE PTR es:[edi],al
  4167e7:	add    bh,BYTE PTR [edx]
  4167e9:	and    ebp,DWORD PTR [edi-0x11]
  4167ec:	int3   
  4167ed:	jecxz  0x416806
  4167ef:	ins    DWORD PTR es:[edi],dx
  4167f0:	repz sub dh,BYTE PTR gs:[ebx+eax*4+0x4f]
  4167f6:	lods   al,BYTE PTR ds:[esi]
  4167f7:	cmovns ebp,DWORD PTR [eax-0x2deabff2]
  4167fe:	cmp    DWORD PTR [esp+edi*2-0x49752c0d],ecx
  416805:	push   eax
  416806:	in     eax,0x93
  416808:	aam    0x5a
  41680a:	loop   0x4167b2
  41680c:	bound  ebp,QWORD PTR [edx-0x74]
  41680f:	jmp    0x3cf:0xb38b95c9
  416816:	imul   esp,edi,0x9a87a035
  41681c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681d:	(bad)  
  41681e:	pop    ebx
  41681f:	mul    ch
  416821:	push   ebp
  416822:	push   ds
  416823:	pop    edx
  416824:	mov    cs,WORD PTR [edi+0x132586fc]
  41682a:	xor    al,0x2e
  41682c:	mov    ds:0xd7f17f1c,al
  416831:	adc    dh,0xc
  416834:	imul   edx,ebp,0xffffffde
  416837:	sub    eax,0x8e4310b2
  41683c:	in     eax,0x96
  41683e:	mov    eax,ds:0xbc0fe302
  416843:	fimul  WORD PTR [edi-0x56234785]
  416849:	and    eax,0xc9d7f87b
  41684e:	push   cs
  41684f:	dec    esp
  416850:	mov    cl,0x18
  416852:	in     al,0xf2
  416854:	fmul   DWORD PTR [esi-0x2f713773]
  41685a:	hlt    
  41685b:	pushf  
  41685c:	adc    BYTE PTR [edi+0x37],al
  41685f:	dec    esp
  416860:	sar    BYTE PTR [esi+eax*1-0x57b7880f],0xe0
  416868:	inc    ecx
  416869:	test   eax,0x2252646e
  41686e:	pop    ebx
  41686f:	pop    ebx
  416870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416871:	mov    ah,BYTE PTR [ecx+esi*2+0x45]
  416875:	sti    
  416876:	or     BYTE PTR [eax-0x64f45862],dh
  41687c:	pop    edx
  41687d:	inc    ebp
  41687e:	inc    edx
  41687f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416880:	rcr    BYTE PTR [edx-0x52],cl
  416883:	jae    0x416808
  416885:	imul   ecx,DWORD PTR [ecx+0x5ee76cd],0x1c7232aa
  41688f:	out    dx,al
  416890:	cmc    
  416891:	xchg   ecx,eax
  416892:	xor    al,0x97
  416894:	adc    eax,esp
  416896:	outs   dx,DWORD PTR ds:[esi]
  416897:	and    esp,DWORD PTR [ebp+0x256ac1b2]
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cmp    al,0xf8
  4168a0:	les    edx,FWORD PTR [ebx]
  4168a2:	repz ret 
  4168a4:	sub    DWORD PTR [ebx],0xffffffe3
  4168a7:	cs cli 
  4168a9:	jbe    0x4168bb
  4168ab:	inc    eax
  4168ac:	addr16 fmul st,st(7)
  4168af:	mov    dl,0x92
  4168b1:	xchg   ecx,eax
  4168b2:	or     DWORD PTR [eax],ebp
  4168b4:	js     0x41688c
  4168b6:	pop    eax
  4168b7:	push   ebx
  4168b8:	push   ss
  4168b9:	repnz sbb cl,al
  4168bc:	dec    eax
  4168bd:	in     al,0x94
  4168bf:	popa   
  4168c0:	push   es
  4168c1:	xchg   esi,eax
  4168c2:	and    BYTE PTR [edx],0xdb
  4168c5:	loop   0x4168b7
  4168c7:	dec    ecx
  4168c8:	jns    0x41685c
  4168ca:	push   esp
  4168cb:	xor    eax,esp
  4168cd:	(bad)
  4168d1:	sbb    al,0x3
  4168d3:	in     eax,dx
  4168d4:	sbb    dh,ch
  4168d6:	mov    ch,0x9a
  4168d8:	ror    ebp,1
  4168da:	outs   dx,BYTE PTR ds:[esi]
  4168db:	jb     0x4168a1
  4168dd:	loop   0x416893
  4168df:	and    DWORD PTR [esp+edi*4],ebx
  4168e2:	enter  0x8de1,0x8e
  4168e6:	cmp    al,bl
  4168e8:	cmc    
  4168e9:	lods   ax,WORD PTR ds:[esi]
  4168eb:	push   ds
  4168ec:	mov    ebp,0x12046a44
  4168f1:	cli    
  4168f2:	pop    edx
  4168f3:	jecxz  0x416876
  4168f5:	mov    ds:0xa4e8ca61,eax
  4168fa:	mov    ecx,0x2f96b63e
  4168ff:	push   ebp
  416900:	aaa    
  416901:	pop    ebp
  416902:	add    ebp,0x10
  416905:	sti    
  416906:	ret    0x513
  416909:	rol    DWORD PTR [edi],1
  41690b:	push   ss
  41690c:	adc    ecx,esi
  41690e:	dec    edi
  41690f:	and    ch,BYTE PTR [eax]
  416911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416912:	pop    edi
  416913:	inc    edi
  416914:	pop    ss
  416915:	sub    BYTE PTR [eax],bh
  416917:	fist   WORD PTR [ebx+eiz*2+0x4441a641]
  41691e:	push   edi
  41691f:	mov    ah,0xb5
  416921:	imul   ebp,DWORD PTR [ecx-0x4fd790f9],0x63697539
  41692b:	and    al,0xdb
  41692d:	jbe    0x416973
  41692f:	pop    edx
  416930:	jp     0x41692b
  416932:	scas   al,BYTE PTR es:[edi]
  416933:	pop    es
  416934:	xor    esp,DWORD PTR [ebx]
  416936:	iret   
  416937:	(bad)  
  416939:	adc    DWORD PTR [edx+ebx*1+0x5f457531],0x45
  416941:	sub    eax,0xcf612885
  416946:	scas   eax,DWORD PTR es:[edi]
  416947:	inc    edi
  416948:	sbb    DWORD PTR [ecx+0x16d93f10],0xf7c60ca4
  416952:	(bad)  
  416953:	jnp    0x4168ee
  416955:	repz cwde 
  416957:	inc    esp
  416958:	into   
  416959:	push   cs
  41695a:	hlt    
  41695b:	(bad)  
  41695c:	iret   
  41695d:	and    BYTE PTR [esi],cl
  41695f:	sub    BYTE PTR ds:0x50389ae4,bl
  416965:	sub    edi,DWORD PTR [ebp+ebp*2-0x401c1edf]
  41696c:	cmp    ebp,esp
  41696e:	dec    ecx
  41696f:	call   0x79e6711d
  416974:	fisttp QWORD PTR [edi+0x71]
  416977:	ss dec edx
  416979:	jecxz  0x416978
  41697b:	pop    eax
  41697c:	scas   al,BYTE PTR es:[edi]
  41697d:	and    BYTE PTR [edi],dl
  41697f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416980:	fdivr  QWORD PTR [esi-0x58]
  416983:	inc    ecx
  416984:	cs push eax
  416986:	mov    ch,0x49
  416988:	adc    eax,0x8f07142b
  41698d:	add    BYTE PTR [ebp+0x37],dh
  416990:	or     dh,cl
  416992:	sub    al,0x19
  416994:	and    eax,0x4a5efac5
  416999:	sti    
  41699a:	push   esi
  41699b:	pop    ecx
  41699c:	or     cl,bl
  41699e:	(bad)  
  41699f:	lock inc ecx
  4169a1:	popf   
  4169a2:	(bad)  
  4169a3:	mov    dl,0xcf
  4169a5:	fild   WORD PTR [edx-0x80]
  4169a8:	dec    esi
  4169a9:	mov    bl,0x94
  4169ab:	xchg   esi,eax
  4169ac:	adc    BYTE PTR [esi],bl
  4169ae:	out    0x6e,eax
  4169b0:	mov    edx,0xed9d7c78
  4169b5:	xor    ebx,DWORD PTR [edi-0x66]
  4169b8:	jbe    0x4169d0
  4169ba:	add    BYTE PTR [esp+ecx*4+0x5e],dh
  4169be:	dec    ebp
  4169bf:	lock out 0xf,eax
  4169c2:	pop    ebx
  4169c3:	pop    es
  4169c4:	push   0x19
  4169c6:	aaa    
  4169c7:	dec    esp
  4169c8:	push   es
  4169c9:	std    
  4169ca:	dec    esi
  4169cb:	ds xchg esi,eax
  4169cd:	jmp    0xee149e4d
  4169d2:	pop    ds
  4169d3:	cmp    eax,ebp
  4169d5:	(bad)  
  4169d6:	neg    BYTE PTR [edi+0x653954cc]
  4169dc:	push   ebp
  4169dd:	add    esp,DWORD PTR [ecx-0x6088a20e]
  4169e3:	je     0x4169da
  4169e5:	add    al,0x4
  4169e7:	scas   eax,DWORD PTR es:[edi]
  4169e8:	xor    DWORD PTR [ebp-0x4146b7fe],eax
  4169ee:	ins    BYTE PTR es:[edi],dx
  4169ef:	fidivr DWORD PTR [edi-0x31]
  4169f2:	fwait
  4169f3:	jle    0x4169db
  4169f5:	je     0x416a53
  4169f7:	xor    al,0x7f
  4169f9:	nop
  4169fa:	repz mov esi,0x8c587c41
  416a00:	test   ch,ch
  416a02:	scas   eax,DWORD PTR es:[edi]
  416a03:	outs   dx,BYTE PTR ds:[esi]
  416a04:	inc    edx
  416a05:	repnz mov ebp,0x4ea017ee
  416a0b:	jge    0x4169cc
  416a0d:	cmp    al,bh
  416a0f:	mov    ah,0x5
  416a11:	sub    esi,DWORD PTR [edx+ecx*8+0x1f]
  416a15:	mov    eax,esi
  416a17:	addr16 push edx
  416a19:	sub    cl,BYTE PTR [edi]
  416a1b:	test   DWORD PTR [esi],ebx
  416a1d:	mov    ah,BYTE PTR [edx]
  416a1f:	fucomp st(1)
  416a21:	loop   0x416a30
  416a23:	sbb    BYTE PTR [ecx+0x7cf0f8d6],ah
  416a29:	rol    DWORD PTR [ecx],cl
  416a2b:	out    dx,al
  416a2c:	and    ecx,esp
  416a2e:	xor    DWORD PTR [esi+0x53a55c68],esi
  416a34:	fcmove st,st(2)
  416a36:	pop    ss
  416a37:	bound  ecx,QWORD PTR [esp+eax*4-0x17066767]
  416a3e:	pop    ds
  416a3f:	loop   0x416a4b
  416a41:	dec    edi
  416a42:	add    cl,cl
  416a44:	(bad)  
  416a45:	push   edx
  416a46:	or     bl,BYTE PTR [edx+0x60]
  416a49:	jo     0x4169dd
  416a4b:	jb     0x416a35
  416a4d:	jp     0x416ac1
  416a4f:	adc    al,BYTE PTR [ebp+0x51ad0b83]
  416a55:	mov    esp,eax
  416a57:	(bad)  
  416a58:	popa   
  416a59:	sub    al,bl
  416a5b:	xchg   edi,eax
  416a5c:	mov    ch,0x91
  416a5e:	xchg   esp,eax
  416a5f:	jl     0x416a39
  416a61:	cmp    BYTE PTR fs:[edx+0x28],ch
  416a65:	jl     0x416ab4
  416a67:	xchg   edx,eax
  416a68:	pop    edi
  416a69:	imul   esi,DWORD PTR [ebp+0x63],0xc26cfb1a
  416a70:	xor    ecx,ebx
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x78f3b875],cl
  416a7f:	sbb    eax,0xe8590ad6
  416a84:	add    BYTE PTR [eax],al
  416a86:	clc    
  416a87:	add    al,0x0
  416a89:	add    BYTE PTR [ebp+0x47],al
  416a8c:	jns    0x416aa5
  416a8e:	fs cdq 
  416a90:	or     DWORD PTR [ebx-0x7c46f824],esi
  416a96:	push   edi
  416a97:	sub    esi,eax
  416a99:	(bad)  
  416a9a:	bnd je 0x416a53
  416a9d:	mov    cl,0x12
  416a9f:	ds jbe 0x416a4e
  416aa2:	dec    ebp
  416aa3:	das    
  416aa4:	out    dx,eax
  416aa5:	test   eax,ebp
  416aa7:	das    
  416aa8:	adc    dl,BYTE PTR [edx-0x50]
  416aab:	enter  0x8f08,0x72
  416aaf:	repz in eax,dx
  416ab1:	call   0xc71ba40a
  416ab6:	lock xor eax,0xa8414b8b
  416abc:	popf   
  416abd:	cld    
  416abe:	add    cl,BYTE PTR [ebp+0x38]
  416ac1:	(bad)  
  416ac3:	jnp    0x416b3b
  416ac5:	mov    eax,ds:0x8fa19f4a
  416aca:	nop
  416acb:	and    esp,ecx
  416acd:	dec    ebx
  416ace:	sub    BYTE PTR [ecx],0x6f
  416ad1:	mov    bh,0xc6
  416ad3:	(bad)  [edi+esi*4+0x45]
  416ad7:	push   cs
  416ad8:	fwait
  416ad9:	mov    bl,BYTE PTR [eax]
  416adb:	dec    edi
  416adc:	ja     0x416aea
  416ade:	out    0x94,al
  416ae0:	and    eax,0xa4eec008
  416ae5:	jne    0x416b62
  416ae7:	or     ecx,DWORD PTR [eax+0x7125cc5]
  416aed:	dec    edi
  416aee:	(bad)  
  416aef:	cli    
  416af0:	xor    eax,0x64fadc33
  416af5:	das    
  416af6:	dec    edx
  416af7:	xor    esi,DWORD PTR [ecx]
  416af9:	mov    bl,0xb2
  416afb:	aaa    
  416afc:	gs mov edi,0x20e8d0d
  416b02:	pushf  
  416b03:	mov    dh,0x51
  416b05:	mov    edx,0x581e7ac0
  416b0a:	popf   
  416b0b:	dec    DWORD PTR [eax]
  416b0d:	ret    
  416b0e:	rcl    cl,0x8a
  416b11:	add    al,0x20
  416b13:	mov    ecx,0xdb156bf7
  416b18:	sub    esi,DWORD PTR [edi+ebx*1-0x56060c34]
  416b1f:	popa   
  416b20:	jno    0x416ac2
  416b22:	add    BYTE PTR [ebx+esi*1-0x284d625],dl
  416b29:	mov    cl,0xdd
  416b2b:	and    al,0x8
  416b2d:	inc    eax
  416b2e:	add    dh,cl
  416b30:	adc    al,ah
  416b32:	add    bl,bl
  416b34:	jge    0x416b33
  416b36:	mov    eax,ds:0xa76cc323
  416b3b:	xchg   ecx,eax
  416b3c:	mov    WORD PTR [edx],cs
  416b3e:	add    al,dh
  416b40:	cld    
  416b41:	dec    edi
  416b42:	jle    0x416ada
  416b44:	push   esp
  416b45:	dec    ecx
  416b46:	bswap  eax
  416b48:	mov    ebx,0xd1e219dc
  416b4d:	pop    edi
  416b4e:	lahf   
  416b4f:	add    eax,0x7e60fa81
  416b54:	sbb    bh,BYTE PTR [ebp+edx*2+0x1652efbf]
  416b5b:	mov    dh,0xd4
  416b5d:	mov    esi,0x17e691ba
  416b62:	jmp    0x8289bfcd
  416b67:	out    0xa7,al
  416b69:	out    dx,al
  416b6a:	and    dl,BYTE PTR [edx-0x4b]
  416b6d:	fiadd  WORD PTR [ecx-0x5b2f5e0]
  416b73:	clc    
  416b74:	fisttp DWORD PTR [ecx]
  416b76:	pop    DWORD PTR [esi]
  416b78:	cmp    eax,0xd4c6c5f4
  416b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b7e:	sub    eax,DWORD PTR [esi]
  416b80:	pushf  
  416b81:	mov    dl,0x40
  416b83:	xor    DWORD PTR [esi-0x47],ecx
  416b86:	inc    ebx
  416b87:	mov    dh,0x6f
  416b89:	pop    ecx
  416b8a:	mul    BYTE PTR cs:0x76544ee7
  416b91:	adc    al,0xef
  416b93:	inc    eax
  416b94:	dec    esi
  416b95:	out    dx,eax
  416b96:	icebp  
  416b97:	mov    ds:0x653181d7,al
  416b9c:	imul   edi,DWORD PTR [eax+0x465897dd],0x75b65b36
  416ba6:	into   
  416ba7:	mov    eax,0x67a08c2d
  416bac:	jo     0x416b6a
  416bae:	add    BYTE PTR [ecx+0x1],0x3d
  416bb2:	mov    bh,0xc3
  416bb4:	jns    0x416b98
  416bb6:	fs jmp 0x416b79
  416bb9:	xlat   BYTE PTR ds:[ebx]
  416bba:	bound  esp,QWORD PTR [eax+0x61]
  416bbd:	cmc    
  416bbe:	mov    al,0x33
  416bc0:	dec    edi
  416bc1:	adc    BYTE PTR [esi-0x54],al
  416bc4:	inc    esi
  416bc5:	dec    edx
  416bc6:	pop    ebx
  416bc7:	ins    BYTE PTR es:[edi],dx
  416bc8:	jge    0x416bc0
  416bca:	jbe    0x416c17
  416bcc:	xchg   ebx,eax
  416bcd:	sbb    edi,esp
  416bcf:	sbb    ah,0x7b
  416bd2:	dec    ecx
  416bd3:	psadbw mm0,mm2
  416bd6:	(bad)  
  416bd7:	les    edi,FWORD PTR [edi]
  416bd9:	scas   eax,DWORD PTR es:[edi]
  416bda:	(bad)  
  416bdb:	jbe    0x416b77
  416bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bde:	cdq    
  416bdf:	js     0x416c57
  416be1:	sti    
  416be2:	xchg   edx,eax
  416be3:	push   edx
  416be4:	or     eax,DWORD PTR [esi+0x4bdd9427]
  416bea:	test   eax,0x819d2b64
  416bef:	ret    0x1d3e
  416bf2:	enter  0xae3c,0xb9
  416bf6:	mov    ebx,0xbc798e43
  416bfb:	and    eax,esi
  416bfd:	in     eax,0xa8
  416bff:	or     bh,dh
  416c01:	and    bh,BYTE PTR [ebx-0x51]
  416c04:	sahf   
  416c05:	lods   eax,DWORD PTR ds:[esi]
  416c06:	adc    dh,BYTE PTR [ecx-0x53678c47]
  416c0c:	mov    eax,DWORD PTR [edi+0x66]
  416c0f:	inc    edx
  416c10:	mov    edx,0x60e6c110
  416c15:	not    DWORD PTR [eax]
  416c17:	lahf   
  416c18:	test   edx,ebx
  416c1a:	ror    BYTE PTR [ebp+0xfc515db],0xd5
  416c21:	repnz inc ecx
  416c23:	add    al,BYTE PTR [edi+ecx*8]
  416c26:	ds add eax,0x778a2230
  416c2c:	mov    ch,BYTE PTR [ebp-0x621c8f98]
  416c32:	addr16 push 0xffffffda
  416c35:	jns    0x416bc4
  416c37:	imul   edx,DWORD PTR [esi-0x56e750c1],0x60d846ff
  416c41:	pop    edx
  416c42:	dec    edi
  416c43:	mov    dl,BYTE PTR [edi-0x69]
  416c46:	loop   0x416bd9
  416c48:	push   ebp
  416c49:	push   esp
  416c4a:	push   esp
  416c4b:	das    
  416c4c:	nop
  416c4d:	dec    esi
  416c4e:	add    al,0x52
  416c50:	rcr    BYTE PTR [esi+0x58c2c74d],0x69
  416c57:	mov    WORD PTR [ebp-0x137af823],cs
  416c5d:	mov    al,ds:0xd1538dfe
  416c62:	push   es
  416c63:	push   ss
  416c64:	popf   
  416c65:	stos   DWORD PTR es:[edi],eax
  416c66:	or     DWORD PTR [edi+ebp*2+0x75a879c8],edx
  416c6d:	dec    edx
  416c6e:	jge    0x416c2c
  416c70:	cdq    
  416c71:	sub    edx,eax
  416c73:	fdivr  QWORD PTR [ecx-0x74]
  416c76:	push   ecx
  416c77:	stos   BYTE PTR es:[edi],al
  416c78:	push   ebp
  416c79:	aad    0x12
  416c7b:	jno    0x416cd6
  416c7d:	jbe    0x416c91
  416c7f:	outs   dx,DWORD PTR ds:[esi]
  416c80:	and    BYTE PTR [ebp-0x39],ch
  416c83:	or     al,0xe1
  416c85:	stos   BYTE PTR es:[edi],al
  416c86:	mov    bl,0xfe
  416c88:	(bad)  
  416c89:	or     BYTE PTR [edi-0x4d2b559f],al
  416c8f:	stos   DWORD PTR es:[edi],eax
  416c90:	jne    0x416cf9
  416c92:	test   BYTE PTR [edx+0x1c5b1524],al
  416c98:	test   al,0xb4
  416c9a:	shl    cl,0xe5
  416c9d:	call   edi
  416c9f:	mov    gs,ebp
  416ca1:	xor    eax,0x7815f7ca
  416ca6:	push   ds
  416ca7:	jb     0x416c86
  416ca9:	cs sbb al,0xe0
  416cac:	and    al,BYTE PTR [edi+0x4137441b]
  416cb2:	cmp    ebx,DWORD PTR [esi]
  416cb4:	outs   dx,BYTE PTR ds:[esi]
  416cb5:	sbb    DWORD PTR [ebx-0x38],ebx
  416cb8:	idiv   bl
  416cba:	enter  0x48d7,0xeb
  416cbe:	fcomp  QWORD PTR [esi+0x54]
  416cc1:	mov    ah,0x74
  416cc3:	cmp    bl,BYTE PTR [edx+0x3ba88202]
  416cc9:	mov    DWORD PTR [edx+0x19],ebx
  416ccc:	jge    0x416c5d
  416cce:	pusha  
  416ccf:	stos   BYTE PTR es:[edi],al
  416cd0:	push   eax
  416cd1:	adc    BYTE PTR [ebp+0x505b5fd1],al
  416cd7:	addr16 (bad) 
  416cd9:	mov    cl,0x8c
  416cdb:	sub    al,BYTE PTR [edx+0x3ffc09f]
  416ce1:	inc    eax
  416ce2:	scas   al,BYTE PTR es:[edi]
  416ce3:	xor    eax,0x6d7cd2d8
  416ce8:	inc    edx
  416ce9:	xchg   esp,eax
  416cea:	jecxz  0x416cdb
  416cec:	fwait
  416ced:	adc    edx,esi
  416cef:	je     0x416cdc
  416cf1:	adc    esi,DWORD PTR [esi+0x59]
  416cf4:	sub    BYTE PTR [eax],dl
  416cf6:	lds    edi,FWORD PTR [ebp-0xda20b94]
  416cfc:	or     ah,BYTE PTR [ebx-0x7d1095b0]
  416d02:	shl    DWORD PTR [edx+0x353fdbcd],1
  416d08:	and    al,0xc2
  416d0a:	add    edi,edx
  416d0c:	pop    ebx
  416d0d:	in     eax,0x8
  416d0f:	scas   eax,DWORD PTR es:[edi]
  416d10:	mov    ch,0x43
  416d12:	sar    DWORD PTR [eax+0x2c458e5a],cl
  416d18:	jno    0x416d0e
  416d1a:	xor    BYTE PTR ds:0x2e3c214a,bh
  416d20:	xor    BYTE PTR [esi],bl
  416d22:	jmp    0xe16857a
  416d27:	fs inc ebp
  416d29:	stc    
  416d2a:	js     0x416cd3
  416d2c:	clc    
  416d2d:	push   eax
  416d2e:	jecxz  0x416ce1
  416d30:	mov    dh,BYTE PTR [esi-0x2a]
  416d33:	mov    eax,0xf03fe3c7
  416d38:	sub    DWORD PTR [ebp+0x66],ebx
  416d3b:	sbb    DWORD PTR [ebx+0x4d4b965b],0x6d
  416d42:	jne    0x416d24
  416d44:	enter  0x48d3,0x8
  416d48:	aam    0x18
  416d4a:	(bad)  
  416d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d4c:	cs cmc 
  416d4e:	pop    ebp
  416d4f:	cmp    bh,BYTE PTR [edi-0x61e3e88]
  416d55:	fcom   QWORD PTR ds:0x3b68f8cb
  416d5b:	mov    al,0x89
  416d5d:	mov    eax,0x35b027df
  416d62:	cld    
  416d63:	mov    eax,ds:0x8265d4de
  416d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d69:	call   0xba19:0x909cbb48
  416d70:	mov    esi,0x69470e6e
  416d75:	xor    esi,DWORD PTR [eax]
  416d77:	xchg   ebx,eax
  416d78:	dec    ecx
  416d79:	test   DWORD PTR [ecx-0x2c],ebp
  416d7c:	mov    ah,BYTE PTR [edx+edi*2+0x50e651af]
  416d83:	popf   
  416d84:	adc    ebx,DWORD PTR [eax+edx*8+0x3]
  416d88:	adc    al,0x79
  416d8a:	xor    eax,0x9434897e
  416d8f:	(bad)  
  416d90:	sti    
  416d91:	cmp    BYTE PTR [edi-0x67],dl
  416d94:	mov    eax,ds:0x144fa4fc
  416d99:	or     ebp,eax
  416d9b:	gs push ss
  416d9d:	repz sbb BYTE PTR [edi+0x74],ch
  416da1:	shr    ah,cl
  416da3:	stos   DWORD PTR es:[edi],eax
  416da4:	lds    ecx,FWORD PTR [esi]
  416da6:	mul    DWORD PTR [ebp-0x1b]
  416da9:	jmp    0x5506:0x32255b05
  416db0:	jl     0x416d7a
  416db2:	rcr    DWORD PTR [eax],cl
  416db4:	cmp    ebx,ecx
  416db6:	hlt    
  416db7:	ret    
  416db8:	ja     0x416e2f
  416dba:	cld    
  416dbb:	(bad)  
  416dbc:	or     esi,esp
  416dbe:	enter  0x3e65,0xae
  416dc2:	gs (bad) 
  416dc4:	scas   eax,DWORD PTR es:[edi]
  416dc5:	cmovl  eax,DWORD PTR [edi]
  416dc8:	call   0x5e04d7e2
  416dcd:	dec    ebp
  416dce:	jno    0x416dbd
  416dd0:	pop    ebx
  416dd1:	inc    edx
  416dd2:	aas    
  416dd3:	scas   eax,DWORD PTR es:[edi]
  416dd4:	lea    ecx,[ebp-0x34043e71]
  416dda:	out    0xc5,eax
  416ddc:	popa   
  416ddd:	retf   
  416dde:	add    eax,0xacb04589
  416de3:	cmp    ebx,edx
  416de5:	mov    dh,0x9b
  416de7:	out    0x53,al
  416de9:	ins    DWORD PTR es:[edi],dx
  416dea:	jb     0x416db8
  416dec:	jecxz  0x416dd9
  416dee:	aas    
  416def:	in     al,dx
  416df0:	sub    eax,0x5b059b54
  416df5:	das    
  416df6:	sbb    al,cl
  416df8:	push   ss
  416df9:	jge    0x416e08
  416dfb:	sbb    DWORD PTR [ecx],edx
  416dfd:	mov    BYTE PTR ds:0x732fccc2,dh
  416e03:	sub    esp,DWORD PTR [ebp-0x3e]
  416e06:	icebp  
  416e07:	ds push ecx
  416e09:	jbe    0x416e28
  416e0b:	out    dx,eax
  416e0c:	cmp    esp,DWORD PTR [eax]
  416e0e:	and    al,0x7a
  416e10:	push   0x4a
  416e12:	sub    al,0x7
  416e14:	jp     0x416e7d
  416e16:	rol    ch,cl
  416e18:	test   al,0xbd
  416e1a:	dec    eax
  416e1b:	shl    eax,0x34
  416e1e:	push   ebx
  416e1f:	js     0x416e67
  416e21:	push   ebp
  416e22:	sbb    al,0x5d
  416e24:	push   edx
  416e25:	cmp    bh,BYTE PTR [esi-0x19]
  416e28:	mov    ds:0x858272a8,eax
  416e2d:	push   edi
  416e2e:	dec    ebp
  416e2f:	mov    cl,0xf0
  416e31:	xchg   edx,eax
  416e32:	int3   
  416e33:	fbld   TBYTE PTR [esi+0x3b]
  416e36:	jb     0x416ea9
  416e38:	adc    ch,dl
  416e3a:	mov    eax,DWORD PTR [edx]
  416e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e3d:	mov    edx,0x2ee2fc37
  416e42:	and    eax,0xc800b7b8
  416e47:	xchg   esi,eax
  416e48:	add    DWORD PTR [esi],0xffffffaf
  416e4b:	push   esi
  416e4c:	push   ebp
  416e4d:	stos   BYTE PTR es:[edi],al
  416e4e:	dec    edx
  416e4f:	push   0x93540e36
  416e54:	sbb    esi,edi
  416e56:	scas   eax,DWORD PTR es:[edi]
  416e57:	push   esi
  416e58:	repz in al,dx
  416e5a:	mov    edi,0x397f9540
  416e5f:	pushf  
  416e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e61:	aam    0x97
  416e63:	jno    0x416e6d
  416e65:	pop    ecx
  416e66:	pop    edi
  416e67:	std    
  416e68:	stc    
  416e69:	leave  
  416e6a:	adc    eax,0x76107774
  416e6f:	and    al,0x64
  416e71:	loop   0x416e1c
  416e73:	pop    edi
  416e74:	test   DWORD PTR [edi+0x169d7f2],ebp
  416e7a:	mov    BYTE PTR [eax-0x6d],al
  416e7d:	inc    ebp
  416e7e:	es pusha 
  416e80:	int    0x38
  416e82:	fst    DWORD PTR [ecx-0x2f10d1ba]
  416e88:	arpl   WORD PTR [ebx+0x5562e5c3],bp
  416e8e:	ja     0x416ee4
  416e90:	stc    
  416e91:	mov    bl,ah
  416e93:	out    0x34,eax
  416e95:	pop    ebx
  416e96:	or     BYTE PTR [eax-0x2d],dl
  416e99:	xchg   ebx,eax
  416e9a:	fwait
  416e9b:	je     0x416f03
  416e9d:	and    cl,BYTE PTR [ebx*8+0x471e5e6b]
  416ea4:	cmp    eax,0x9e5e60de
  416ea9:	adc    DWORD PTR [esi-0x1c],esp
  416eac:	dec    edi
  416ead:	mov    esp,0xf881631d
  416eb2:	sar    DWORD PTR [edx+0x76],1
  416eb5:	clc    
  416eb6:	mov    ah,ah
  416eb8:	mov    esp,0xd6990def
  416ebd:	pop    esp
  416ebe:	lds    eax,FWORD PTR [esi+0x17]
  416ec1:	mov    WORD PTR [esi-0x77f11556],?
  416ec7:	mov    dl,0x81
  416ec9:	repz test DWORD PTR [ecx],0x3ae5cee3
  416ed0:	pop    edi
  416ed1:	mov    edi,0xac0251b3
  416ed6:	imul   ecx,eax,0x6b8ec1f8
  416edc:	addr16 es hlt 
  416edf:	ss jnp 0x416eec
  416ee2:	cmp    ecx,DWORD PTR [edi]
  416ee4:	mov    ds:0x6cb0e55e,al
  416ee9:	mov    bl,ch
  416eeb:	mov    edi,0xccea3fad
  416ef0:	dec    ecx
  416ef1:	inc    edx
  416ef2:	mov    dh,0x95
  416ef4:	out    dx,al
  416ef5:	cmp    al,0x8
  416ef7:	test   BYTE PTR [edx],cl
  416ef9:	lock adc bl,bl
  416efc:	(bad)  
  416efd:	fs pop ecx
  416eff:	scas   eax,DWORD PTR es:[edi]
  416f00:	imul   edi,DWORD PTR [ebp+0x70],0x79
  416f04:	jecxz  0x416f69
  416f06:	mov    BYTE PTR [ebp-0x23],cl
  416f09:	pavgb  mm3,mm4
  416f0c:	into   
  416f0d:	nop
  416f0e:	lods   al,BYTE PTR ds:[esi]
  416f0f:	jnp    0x416ef1
  416f11:	add    al,0x86
  416f13:	in     al,0xce
  416f15:	mov    dh,0x6
  416f17:	mov    ds:0xcea8fa8d,al
  416f1c:	outs   dx,BYTE PTR ds:[esi]
  416f1d:	jbe    0x416f9e
  416f1f:	sbb    al,ch
  416f21:	add    al,0xf4
  416f23:	mov    ebp,ebp
  416f25:	add    ah,cl
  416f27:	jnp    0x416ed7
  416f29:	js     0x416f3a
  416f2b:	cs mov edi,0x5a4eaec8
  416f31:	mov    al,0x66
  416f33:	inc    esp
  416f34:	ins    DWORD PTR es:[edi],dx
  416f35:	imul   ebx,DWORD PTR [edi+0x56564b27],0x38
  416f3c:	das    
  416f3d:	cmc    
  416f3e:	add    al,0xff
  416f40:	xchg   edx,eax
  416f41:	fcomp  st(5)
  416f43:	jg     0x416eff
  416f45:	sub    DWORD PTR [ebp+0x5],eax
  416f48:	cmp    DWORD PTR [edi+edi*4+0x4f],esi
  416f4c:	fdivr  DWORD PTR [esi+0xa0eb613]
  416f52:	mov    ah,0x4e
  416f54:	pop    edx
  416f55:	push   es
  416f56:	push   ecx
  416f57:	loop   0x416eec
  416f59:	fnstcw WORD PTR [eax-0x5b]
  416f5c:	fbstp  TBYTE PTR [ebp+0x16]
  416f5f:	sbb    esp,ebp
  416f61:	and    DWORD PTR [edx-0x56],esp
  416f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f65:	std    
  416f66:	dec    esi
  416f67:	ins    DWORD PTR es:[edi],dx
  416f68:	mov    ds:0x19002129,eax
  416f6d:	fdivrp st(6),st
  416f6f:	cmp    BYTE PTR [edx-0x27],0xb8
  416f73:	and    edx,DWORD PTR [esi]
  416f75:	rcr    BYTE PTR [ebp-0x5f],1
  416f78:	xchg   edx,eax
  416f79:	dec    ebp
  416f7a:	test   eax,0x4022899f
  416f7f:	fcom   DWORD PTR [ebx+0x5f2c55ef]
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x7efef626]
  416f90:	adc    edi,DWORD PTR [ecx+edx*2-0x7ffff13]
  416f97:	add    al,0x0
  416f99:	add    BYTE PTR [esi+0x6f5fac37],ch
  416f9f:	pop    ds
  416fa0:	ret    
  416fa1:	sbb    al,BYTE PTR [eax-0x2917e679]
  416fa7:	push   DWORD PTR [ebp-0x70d0f146]
  416fad:	push   ebx
  416fae:	xchg   esp,eax
  416faf:	pop    ds
  416fb0:	add    ecx,esi
  416fb2:	adc    BYTE PTR [esi],bh
  416fb4:	outs   dx,BYTE PTR ds:[esi]
  416fb5:	(bad)  ds:0xdf401ef0
  416fbb:	addr16 aam 0x4b
  416fbe:	gs pop es
  416fc0:	ret    0xf8dc
  416fc3:	mov    edi,DWORD PTR ds:0xf89091c7
  416fc9:	jge    0x417047
  416fcb:	dec    edx
  416fcc:	punpcklwd mm0,mm3
  416fcf:	mul    BYTE PTR [ebx-0xe]
  416fd2:	gs push eax
  416fd4:	je     0x417028
  416fd6:	xor    dl,BYTE PTR [eax+0x1]
  416fd9:	pop    edx
  416fda:	stc    
  416fdb:	or     al,BYTE PTR [ecx]
  416fdd:	xchg   edi,eax
  416fde:	mov    WORD PTR [esi-0x5da5d37b],fs
  416fe4:	push   edx
  416fe5:	ret    0x6398
  416fe8:	popa   
  416fe9:	push   ds
  416fea:	lahf   
  416feb:	retf   0xe15
  416fee:	mov    ds:0x7d00a0c8,al
  416ff3:	fimul  DWORD PTR [esi+0x5d]
  416ff6:	xchg   edi,eax
  416ff7:	clc    
  416ff8:	leave  
  416ff9:	mov    esp,0x8b502033
  416ffe:	outs   dx,DWORD PTR ds:[esi]
  416fff:	cmp    al,0xb2
  417001:	dec    esi
  417002:	jno    0x41706b
  417004:	cs enter 0xd916,0x8a
  417009:	xlat   BYTE PTR ds:[ebx]
  41700a:	push   esp
  41700b:	cmp    eax,0xd11f650f
  417010:	xchg   edx,eax
  417011:	js     0x416fed
  417013:	ja     0x41704a
  417015:	sbb    BYTE PTR [ebx-0x66],ah
  417018:	fwait
  417019:	and    ch,bl
  41701b:	fisubr WORD PTR [ecx]
  41701d:	ins    BYTE PTR es:[edi],dx
  41701e:	jne    0x416ffb
  417020:	dec    edx
  417021:	test   al,0x8d
  417023:	adc    ecx,DWORD PTR [edi-0x2b]
  417026:	(bad)  
  417027:	mov    bh,0x31
  417029:	jne    0x417072
  41702b:	sbb    ebx,DWORD PTR [esi]
  41702d:	scas   eax,DWORD PTR es:[edi]
  41702e:	out    0x34,eax
  417030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417031:	and    eax,0xcae65777
  417036:	jg     0x41704f
  417038:	pop    es
  417039:	aas    
  41703a:	xchg   esi,eax
  41703b:	jge    0x416fcd
  41703d:	icebp  
  41703e:	sbb    bh,al
  417040:	and    BYTE PTR [edi],bl
  417042:	adc    eax,0x9d652fa4
  417047:	test   DWORD PTR [eax],edx
  417049:	dec    edi
  41704a:	aas    
  41704b:	dec    BYTE PTR [edx-0x4a]
  41704e:	xchg   ebx,eax
  41704f:	sub    al,0xa2
  417051:	jo     0x417025
  417053:	ds push ss
  417055:	jmp    0xae36b5d2
  41705a:	(bad)  
  41705b:	fisubr DWORD PTR [eax+eiz*4]
  41705e:	outs   dx,DWORD PTR ds:[esi]
  41705f:	shl    BYTE PTR [eax],cl
  417061:	pop    edx
  417062:	lock jecxz 0x417088
  417065:	adc    eax,0xd9c6e922
  41706a:	jns    0x4170e5
  41706c:	out    dx,eax
  41706d:	jne    0x417025
  41706f:	mov    cs,ebp
  417071:	inc    edx
  417072:	addr16 inc ebx
  417074:	rol    DWORD PTR [eax+0x742a843a],1
  41707a:	cdq    
  41707b:	add    al,0x97
  41707d:	stos   DWORD PTR es:[edi],eax
  41707e:	or     eax,0xfc43bac9
  417083:	std    
  417084:	add    eax,0x28593c25
  417089:	loopne 0x4170b2
  41708b:	xor    BYTE PTR [edi],ah
  41708d:	adc    ebx,DWORD PTR [edx-0x55d59c7f]
  417093:	out    0xc2,eax
  417095:	inc    esp
  417096:	jnp    0x417052
  417098:	stos   DWORD PTR es:[edi],eax
  417099:	push   cs
  41709a:	ret    0xa9dc
  41709d:	jae    0x4170d8
  41709f:	call   FWORD PTR [edi+0x34]
  4170a2:	call   0xa4bddf69
  4170a7:	cmp    BYTE PTR [ebp-0x80],al
  4170aa:	jb     0x417063
  4170ac:	fistp  WORD PTR [ecx+ebp*4+0x16cc27a9]
  4170b3:	call   0xee51c751
  4170b8:	int    0x3c
  4170ba:	loop   0x4170ee
  4170bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170bd:	sbb    eax,ebx
  4170bf:	jae    0x417114
  4170c1:	push   cs
  4170c2:	pop    ss
  4170c3:	cmp    eax,DWORD PTR ds:0x2b723d37
  4170c9:	ret    
  4170ca:	data16 lods al,BYTE PTR ds:[esi]
  4170cc:	xchg   edi,eax
  4170cd:	mov    ah,0xad
  4170cf:	jne    0x4170fb
  4170d1:	iret   
  4170d2:	aas    
  4170d3:	sar    DWORD PTR [ebx],0x7e
  4170d6:	sub    DWORD PTR [esi],ebp
  4170d8:	mov    al,ds:0x24470efc
  4170dd:	jp     0x417100
  4170df:	call   0xebaef076
  4170e4:	ret    
  4170e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e6:	(bad)  
  4170e7:	sub    DWORD PTR [ebp-0x33],edi
  4170ea:	jb     0x41712e
  4170ec:	inc    ecx
  4170ed:	nop
  4170ee:	inc    ebx
  4170ef:	pushf  
  4170f0:	jecxz  0x41711b
  4170f2:	mov    eax,ds:0x28349113
  4170f7:	lahf   
  4170f8:	or     ah,dl
  4170fa:	push   esi
  4170fb:	icebp  
  4170fc:	scas   eax,DWORD PTR es:[edi]
  4170fd:	mov    DWORD PTR [ecx],ebx
  4170ff:	xlat   BYTE PTR ds:[ebx]
  417100:	pop    ss
  417101:	push   esi
  417102:	pop    edx
  417103:	xchg   edi,eax
  417104:	push   ebp
  417105:	add    al,0xea
  417107:	push   es
  417108:	pop    ds
  417109:	jp     0x417091
  41710b:	es push 0xffffff8d
  41710e:	cmp    DWORD PTR [esi],edx
  417110:	aaa    
  417111:	xlat   BYTE PTR ds:[ebx]
  417112:	sub    eax,0x5bc5366d
  417117:	xlat   BYTE PTR ds:[ebx]
  417118:	and    DWORD PTR [ebx-0x79],0x82b13612
  41711f:	loopne 0x4170a2
  417121:	ja     0x4170a5
  417123:	mov    al,0x51
  417125:	stc    
  417126:	fstp   DWORD PTR [edx-0x68fedfa2]
  41712c:	and    DWORD PTR [ecx+0x70],ebp
  41712f:	mov    eax,ds:0xd1ccc265
  417134:	or     ebx,DWORD PTR [eax-0x36ee8a8e]
  41713a:	call   0x6da7:0x756363a8
  417141:	cmp    al,0x69
  417143:	outs   dx,DWORD PTR cs:[esi]
  417145:	mov    DWORD PTR ds:0x2264e60e,edx
  41714b:	cmp    eax,0xd2a3462c
  417150:	in     al,0xe5
  417152:	jg     0x4171b1
  417154:	inc    edi
  417155:	sbb    eax,DWORD PTR [eax-0x6857a2c3]
  41715b:	add    esp,DWORD PTR [edi]
  41715d:	inc    esp
  41715e:	fst    QWORD PTR [ecx+0x4c]
  417161:	jp     0x4170ef
  417163:	inc    ebx
  417164:	sub    DWORD PTR [ecx],0x5867b19e
  41716a:	sahf   
  41716b:	aas    
  41716c:	cmp    edi,edi
  41716e:	mov    eax,0xd0ff081f
  417173:	(bad)  
  417174:	sahf   
  417175:	and    eax,0x4004deae
  41717a:	inc    eax
  41717b:	mov    eax,ds:0x456f6f7f
  417180:	xchg   ebx,eax
  417181:	imul   edx,DWORD PTR [eax+0x537b55d3],0xffffffa1
  417188:	imul   ebx,DWORD PTR [ecx+0x4b],0x5a60380c
  41718f:	nop
  417190:	mov    al,ch
  417192:	inc    eax
  417193:	test   DWORD PTR [ebx+esi*4-0x2fc84590],ecx
  41719a:	sti    
  41719b:	shl    edi,0xa3
  41719e:	arpl   bx,bx
  4171a0:	jmp    DWORD PTR [edi]
  4171a2:	adc    eax,0xfc9ba61b
  4171a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a8:	in     eax,dx
  4171a9:	repz stc 
  4171ab:	xchg   ecx,eax
  4171ac:	mov    ebx,0x6e85d344
  4171b1:	(bad)  
  4171b2:	cmp    BYTE PTR [ecx],bh
  4171b4:	bound  esi,QWORD PTR [eax+0x2075b39d]
  4171ba:	push   esp
  4171bb:	mov    bh,ch
  4171bd:	dec    ebp
  4171be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171bf:	cli    
  4171c0:	sub    DWORD PTR [esi-0x6e],eax
  4171c3:	popa   
  4171c4:	push   esi
  4171c5:	int3   
  4171c6:	mov    fs,WORD PTR [ecx-0x6]
  4171c9:	or     DWORD PTR [edx-0x67],0xfffffff3
  4171cd:	mov    eax,0x6720135b
  4171d2:	fild   WORD PTR [edi]
  4171d4:	dec    edi
  4171d5:	xchg   ebp,eax
  4171d6:	mov    eax,0x973cb0c4
  4171db:	test   BYTE PTR [esi-0x1b4fe142],dl
  4171e1:	adc    eax,0x147148fa
  4171e6:	push   esi
  4171e7:	rcr    DWORD PTR [ebx+0x5536cae5],1
  4171ed:	sbb    edi,DWORD PTR [esp+ebx*2]
  4171f0:	sub    edx,edi
  4171f2:	sub    ebx,DWORD PTR [edx]
  4171f4:	maskmovq mm1,mm5
  4171f7:	jo     0x417193
  4171f9:	stc    
  4171fa:	cmp    BYTE PTR [ebp+0x28],ch
  4171fd:	aam    0x10
  4171ff:	pop    ebp
  417200:	dec    ebx
  417201:	pop    ds
  417202:	imul   ebp,eax,0x62
  417205:	pushf  
  417206:	int3   
  417207:	and    esi,eax
  417209:	adc    eax,0xe2d94f8d
  41720e:	or     al,0x4d
  417210:	cld    
  417211:	mov    ebp,0x3f520e2e
  417216:	dec    DWORD PTR [ebp-0x4dc68b69]
  41721c:	dec    eax
  41721d:	jmp    0xa4ec0ada
  417222:	imul   edx,DWORD PTR [edi-0x7000c0d5],0x37
  417229:	aad    0xfa
  41722b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41722c:	and    DWORD PTR [esi],ecx
  41722e:	scas   al,BYTE PTR es:[edi]
  41722f:	sub    al,BYTE PTR [esi]
  417231:	aad    0x5b
  417233:	or     edx,DWORD PTR [ebp+0x1dc8d5ce]
  417239:	xchg   ebx,eax
  41723a:	retf   
  41723b:	push   es
  41723c:	aaa    
  41723d:	mov    bh,BYTE PTR [esi]
  41723f:	mov    ebp,0xda7e5f96
  417244:	mov    eax,ds:0xd835df9
  417249:	jnp    0x4171f8
  41724b:	jae    0x41727f
  41724d:	cmp    dl,BYTE PTR [ebx+0x414ee0b7]
  417253:	adc    BYTE PTR [edx],dl
  417255:	idiv   BYTE PTR [edi-0x4d6b50f1]
  41725b:	pop    eax
  41725c:	repz fsub DWORD PTR [edi-0x2eb8165f]
  417263:	pop    ss
  417264:	clc    
  417265:	xor    DWORD PTR [ecx-0x53e9f187],eax
  41726b:	or     edx,DWORD PTR [edi+0x5e]
  41726e:	dec    ecx
  41726f:	sbb    DWORD PTR ds:0x89106510,esi
  417275:	jle    0x41727a
  417277:	cmp    bh,cl
  417279:	mov    eax,ds:0x88142f89
  41727e:	and    ecx,edi
  417280:	add    ebx,DWORD PTR [esi-0x1b]
  417283:	inc    eax
  417284:	fwait
  417285:	aaa    
  417286:	sbb    eax,0x73f3c43e
  41728b:	jo     0x41725b
  41728d:	cdq    
  41728e:	jb     0x41730d
  417290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417291:	inc    ecx
  417292:	arpl   WORD PTR [edx],dx
  417294:	pop    esi
  417295:	xor    eax,0x99faf006
  41729a:	sbb    eax,0x7893d498
  41729f:	mov    ebp,0x879e73ed
  4172a4:	pusha  
  4172a5:	clc    
  4172a6:	lock xchg DWORD PTR [ecx],ebp
  4172a9:	shl    DWORD PTR [ebp-0x2b663caf],cl
  4172af:	xchg   DWORD PTR [eax-0x67],ecx
  4172b2:	mov    eax,ds:0xbb3d5789
  4172b7:	outs   dx,BYTE PTR ds:[esi]
  4172b8:	ins    DWORD PTR es:[edi],dx
  4172b9:	push   es
  4172ba:	je     0x417318
  4172bc:	mov    ds:0xea0d78bc,al
  4172c1:	je     0x4172f8
  4172c3:	scas   eax,DWORD PTR es:[edi]
  4172c4:	jbe    0x41724c
  4172c6:	std    
  4172c7:	lods   eax,DWORD PTR ds:[esi]
  4172c8:	cwde   
  4172c9:	sbb    DWORD PTR [ebx+0x18dd320a],esi
  4172cf:	cld    
  4172d0:	jmp    0xcf906a35
  4172d5:	dec    ecx
  4172d6:	imul   esp,DWORD PTR [ecx],0x8fde4344
  4172dc:	mov    cl,0x88
  4172de:	std    
  4172df:	jl     0x417282
  4172e1:	mov    edx,0xf5c15724
  4172e7:	adc    BYTE PTR [esi-0x6d],bl
  4172ea:	mov    edi,0x6027907f
  4172ef:	leave  
  4172f0:	lahf   
  4172f1:	pop    ecx
  4172f2:	mov    ds,ecx
  4172f4:	and    dh,BYTE PTR [edx-0x58]
  4172f7:	ret    0xeb6
  4172fa:	(bad)  
  4172fb:	shl    edx,1
  4172fd:	fcomp  DWORD PTR [ebx]
  4172ff:	and    BYTE PTR [ecx+ebx*1+0x3e],bl
  417303:	lock mov esi,0x6a2e27c0
  417309:	mov    bh,0x41
  41730b:	sub    eax,0x6728e411
  417310:	push   ss
  417311:	rcr    BYTE PTR [edi-0xfe5c94d],cl
  417317:	pop    esp
  417318:	pop    es
  417319:	pusha  
  41731a:	aaa    
  41731b:	call   0x52bc:0x6301530d
  417322:	aam    0x20
  417324:	imul   ebp,ebx,0xe54c4d
  41732a:	pop    ss
  41732b:	sbb    cl,bl
  41732d:	and    ebp,eax
  41732f:	xlat   BYTE PTR ds:[ebx]
  417330:	cwde   
  417331:	mov    al,0x9d
  417333:	xchg   ebp,eax
  417334:	mov    ebx,DWORD PTR [ecx+0x9ac0f7e]
  41733a:	leave  
  41733b:	xchg   ebx,eax
  41733c:	push   eax
  41733d:	and    dl,dl
  41733f:	in     al,dx
  417340:	mov    ds:0x2b0f5779,eax
  417345:	adc    al,0xc4
  417347:	mov    edx,0x10c6adc3
  41734c:	sbb    BYTE PTR [esi-0x16],dh
  41734f:	lods   eax,DWORD PTR ds:[esi]
  417350:	popa   
  417351:	jb     0x417357
  417353:	rcr    DWORD PTR ds:0xd7f38637,0x9f
  41735a:	inc    ebx
  41735b:	fadd   DWORD PTR [edx+0x5d]
  41735e:	ror    BYTE PTR [ebp+0x5353a619],0x4d
  417365:	mov    esi,0xec7cc08
  41736a:	mov    edi,0x8654db86
  41736f:	mov    al,0xa0
  417371:	(bad)  
  417372:	ror    ah,cl
  417374:	dec    ecx
  417375:	mov    edi,0xf874ff06
  41737a:	or     eax,0xe23a6e5e
  417380:	inc    ebx
  417381:	fcom   QWORD PTR [di-0x61]
  417385:	lock add cl,0xec
  417389:	leave  
  41738a:	jecxz  0x41738b
  41738c:	fs cmp al,0x7f
  41738f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417390:	or     eax,DWORD PTR [eax-0x73]
  417393:	scas   eax,DWORD PTR es:[edi]
  417394:	and    BYTE PTR [ebp+0x34],0xaf
  417398:	push   0xb1cce1b
  41739d:	xor    ebx,0x27
  4173a0:	lea    edi,[esi+0x8]
  4173a3:	sti    
  4173a4:	dec    edi
  4173a5:	cmc    
  4173a6:	cmp    esp,DWORD PTR [ecx-0x1c3150de]
  4173ac:	aas    
  4173ad:	es scas al,BYTE PTR es:[edi]
  4173af:	leave  
  4173b0:	sub    bl,BYTE PTR [edi+0x78]
  4173b3:	xor    al,0xf8
  4173b5:	mov    ds:0x591f25d3,eax
  4173ba:	hlt    
  4173bb:	lods   al,BYTE PTR ds:[esi]
  4173bc:	in     eax,0x1
  4173be:	jnp    0x4173ef
  4173c0:	inc    ebx
  4173c1:	add    cl,al
  4173c3:	sbb    al,0xf7
  4173c5:	xor    al,0xc7
  4173c7:	mov    dl,0x5d
  4173c9:	inc    esi
  4173ca:	mov    eax,ds:0xec823098
  4173cf:	inc    eax
  4173d0:	sbb    BYTE PTR [eax+0x3e3be0d2],al
  4173d6:	sbb    edi,DWORD PTR [ebx-0x3d75bd55]
  4173dc:	repz repz stc 
  4173df:	aas    
  4173e0:	icebp  
  4173e1:	sti    
  4173e2:	xchg   ebp,eax
  4173e3:	(bad)
  4173e7:	stos   DWORD PTR es:[edi],eax
  4173e8:	loopne 0x417378
  4173ea:	push   esp
  4173eb:	push   edi
  4173ec:	sbb    eax,0xbdf912aa
  4173f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f2:	repz jge 0x41744d
  4173f5:	hlt    
  4173f6:	push   ds
  4173f7:	xchg   edi,eax
  4173f8:	or     DWORD PTR [eax-0x48],ebp
  4173fb:	(bad)  
  4173fc:	repnz mov bl,0xa
  4173ff:	pop    eax
  417400:	lock cwde 
  417402:	test   al,0x67
  417404:	(bad)  
  417405:	adc    ah,ch
  417407:	ror    ebx,cl
  417409:	push   eax
  41740a:	shl    BYTE PTR [ebx-0x429d6ba3],cl
  417410:	sub    ch,bh
  417412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417413:	aas    
  417414:	cmp    ebx,DWORD PTR [ebp+0x2306cd3a]
  41741a:	sub    ebx,DWORD PTR [ecx+eax*2]
  41741d:	or     esp,esp
  41741f:	xor    bh,BYTE PTR [ebp+0x6b]
  417422:	dec    eax
  417423:	adc    al,0xa2
  417425:	aam    0xf7
  417427:	hlt    
  417428:	pop    edi
  417429:	jne    0x4173ba
  41742b:	push   0x68539eaf
  417430:	test   bh,cl
  417432:	cmp    ch,BYTE PTR [edi+edx*2+0x1c2ee5e8]
  417439:	(bad)  
  41743a:	scas   eax,DWORD PTR es:[edi]
  41743b:	in     eax,0xb9
  41743d:	mov    es,WORD PTR [edx-0xb]
  417440:	lods   al,BYTE PTR ds:[esi]
  417441:	and    edi,DWORD PTR [eax]
  417443:	mov    ds:0x32b2a63,al
  417448:	cmp    BYTE PTR [ecx],bl
  41744a:	jge    0x41741d
  41744c:	jae    0x417499
  41744e:	shl    DWORD PTR [edx+0x49],0x59
  417452:	or     eax,0xd895a1c2
  417457:	jb     0x417490
  417459:	jbe    0x4174b6
  41745b:	call   0xa2e4acf1
  417460:	push   cs
  417461:	retf   
  417462:	cmp    eax,0x2456ee78
  417467:	out    dx,al
  417468:	test   eax,0xc15c267
  41746d:	iret   
  41746e:	mov    bl,0x35
  417470:	sub    al,0xef
  417472:	icebp  
  417473:	ffree  st(4)
  417475:	mov    dl,ah
  417477:	es stos DWORD PTR es:[edi],eax
  417479:	pop    ebx
  41747a:	cmp    bh,0x58
  41747d:	and    edi,DWORD PTR [ebp-0x70d4ea77]
  417483:	xchg   ebx,eax
  417484:	inc    eax
  417485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417486:	and    BYTE PTR [edx-0x7f332a92],ah
  41748c:	les    edi,FWORD PTR [eax+0x18]
  41748f:	jmp    0x899a:0x4ddff517
  417496:	call   0x6114:0x305fdfdf
  41749d:	retf   0xc397
  4174a0:	nop
  4174a1:	pop    edi
  4174a2:	dec    ecx
  4174a3:	repnz add BYTE PTR [eax],al
  4174a6:	clc    
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR ds:0x2a3886d9,bl
  4174af:	iret   
  4174b0:	test   DWORD PTR [ebp-0x6bd06a5d],ebp
  4174b6:	mov    ah,0x11
  4174b8:	stos   BYTE PTR es:[edi],al
  4174b9:	mov    edx,0xadf4dc5f
  4174be:	test   eax,0x1f5d845c
  4174c3:	das    
  4174c4:	int3   
  4174c5:	ret    0x5729
  4174c8:	or     DWORD PTR [ebp+0x30],esi
  4174cb:	xor    BYTE PTR [eax],al
  4174cd:	cmp    al,0xe9
  4174cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d0:	loopne 0x417509
  4174d2:	push   esp
  4174d3:	hlt    
  4174d4:	test   ecx,ecx
  4174d6:	mov    eax,ds:0xa7fbdbab
  4174db:	int    0x6e
  4174dd:	mov    bl,BYTE PTR [eax]
  4174df:	add    al,0xfb
  4174e1:	cmp    eax,0x11164d0e
  4174e6:	adc    BYTE PTR [eax+edx*2],bh
  4174e9:	mov    WORD PTR [eax],?
  4174eb:	sub    bh,ah
  4174ed:	out    0x62,al
  4174ef:	aam    0xe4
  4174f1:	pop    ds
  4174f2:	das    
  4174f3:	pop    edx
  4174f4:	aas    
  4174f5:	imul   edi,ebp,0xf602221e
  4174fb:	or     BYTE PTR [esi],al
  4174fd:	js     0x41756e
  4174ff:	jmp    0x702c6a04
  417504:	daa    
  417505:	ins    DWORD PTR es:[edi],dx
  417506:	mov    ch,0x6a
  417508:	daa    
  417509:	sbb    bh,ch
  41750b:	fst    QWORD PTR [edi+0x5a]
  41750e:	jecxz  0x4174e7
  417510:	retf   
  417511:	push   ebx
  417512:	cs gs int3 
  417515:	iret   
  417516:	pop    es
  417517:	xor    edx,DWORD PTR [ebx]
  417519:	mov    ds:0x6d182937,al
  41751e:	and    ecx,esp
  417520:	push   ss
  417521:	adc    BYTE PTR [ebx],0xd7
  417524:	xor    dh,BYTE PTR [edx]
  417526:	and    DWORD PTR [eax],esi
  417528:	inc    ecx
  417529:	inc    esi
  41752a:	push   ss
  41752b:	inc    esp
  41752c:	ret    0x6743
  41752f:	in     al,dx
  417530:	enter  0x9da,0xd1
  417534:	aad    0xf9
  417536:	imul   edi,DWORD PTR [eax-0x21],0xb45e9435
  41753d:	mov    esp,0xbc06774d
  417542:	cmp    DWORD PTR [ecx-0x1f],ecx
  417545:	mov    eax,ds:0xb9c1d58
  41754a:	icebp  
  41754b:	push   edx
  41754c:	cmc    
  41754d:	lahf   
  41754e:	xor    dh,al
  417550:	fnstsw WORD PTR [eax-0x30e369a6]
  417556:	cwde   
  417557:	inc    esp
  417558:	es clc 
  41755a:	int    0xf2
  41755c:	ret    
  41755d:	pop    edi
  41755e:	lea    esp,[ebx]
  417560:	push   ebx
  417561:	in     al,dx
  417562:	stos   BYTE PTR es:[edi],al
  417563:	dec    ebp
  417564:	call   0x29e2:0x7f231377
  41756b:	imul   eax,DWORD PTR [edi],0xa173ac4e
  417571:	loop   0x4175ac
  417573:	dec    edi
  417574:	gs pop esi
  417576:	jo     0x4175b5
  417578:	xor    eax,0x225a736c
  41757d:	jmp    0x14e4:0x18f47f1e
  417584:	jno    0x417536
  417586:	rol    BYTE PTR [esi-0x11],cl
  417589:	das    
  41758a:	push   ecx
  41758b:	test   al,0xe6
  41758d:	adc    DWORD PTR [edi+0x5ed22bd],ecx
  417593:	inc    ebp
  417594:	and    DWORD PTR [ebx+ebx*2],esi
  417597:	dec    eax
  417598:	mov    DWORD PTR [ecx-0x9],ebx
  41759b:	inc    ebx
  41759c:	aas    
  41759d:	or     eax,eax
  41759f:	arpl   ax,ax
  4175a1:	cmp    al,0xaf
  4175a3:	ss jno 0x41756c
  4175a6:	icebp  
  4175a7:	rol    BYTE PTR [eax+0x267a223d],cl
  4175ad:	adc    al,0xcc
  4175af:	leave  
  4175b0:	cmp    cl,BYTE PTR [eax+0x4c6b0b7a]
  4175b6:	jl     0x4175c0
  4175b8:	loope  0x417565
  4175ba:	add    al,0x70
  4175bc:	cmp    eax,DWORD PTR [ebx]
  4175be:	sub    DWORD PTR [edx-0x77],ecx
  4175c1:	in     eax,dx
  4175c2:	push   esi
  4175c3:	ins    BYTE PTR es:[edi],dx
  4175c4:	dec    edx
  4175c5:	push   ecx
  4175c7:	out    0x4c,eax
  4175c9:	cwde   
  4175ca:	mov    edi,0x7af13572
  4175cf:	inc    ebx
  4175d0:	mov    eax,ds:0x1c5598ba
  4175d5:	mov    ds:0xf6066f87,al
  4175da:	cmp    esi,ecx
  4175dc:	mov    eax,ds:0x320f4073
  4175e1:	loope  0x4175c4
  4175e3:	mov    cl,0x51
  4175e5:	add    DWORD PTR [esi-0x23487214],esp
  4175eb:	fdiv   QWORD PTR [edx-0x337abdb4]
  4175f1:	jp     0x417630
  4175f3:	jg     0x41757b
  4175f5:	inc    ebx
  4175f6:	xchg   ebx,eax
  4175f7:	cs sti 
  4175f9:	fwait
  4175fa:	hlt    
  4175fb:	mov    cl,ch
  4175fd:	aas    
  4175fe:	push   ebp
  4175ff:	dec    esp
  417600:	pushf  
  417601:	data16 daa 
  417603:	outs   dx,DWORD PTR ds:[esi]
  417604:	adc    edi,DWORD PTR [eax-0x400c635b]
  41760a:	push   ss
  41760b:	fsubr  DWORD PTR [edx+0x57]
  41760e:	jne    0x4175d0
  417610:	sub    DWORD PTR ds:0x17442c9a,esp
  417616:	pop    ds
  417617:	fisttp WORD PTR [eax]
  417619:	and    ebx,edx
  41761b:	cdq    
  41761c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41761d:	fwait
  41761e:	sub    BYTE PTR [ebx+edi*2+0x1d],dl
  417622:	icebp  
  417623:	sahf   
  417624:	leave  
  417625:	retf   0xe7c8
  417628:	jnp    0x41767a
  41762a:	sub    BYTE PTR [ecx+0x58],0x7c
  41762e:	jmp    0x41769a
  417630:	xlat   BYTE PTR ds:[ebx]
  417631:	xor    ch,al
  417633:	mov    esi,DWORD PTR [ecx]
  417635:	cmp    ebx,edx
  417637:	inc    edx
  417638:	xchg   ecx,eax
  417639:	sub    BYTE PTR [edi],0x65
  41763c:	push   es
  41763d:	je     0x417697
  41763f:	add    DWORD PTR [edi-0x3],ebp
  417642:	push   ecx
  417643:	stos   BYTE PTR es:[edi],al
  417644:	mov    esi,0xc08e3280
  417649:	das    
  41764a:	or     BYTE PTR [ebp+0x3a],0x24
  41764e:	nop
  41764f:	outs   dx,BYTE PTR ds:[esi]
  417650:	lods   al,BYTE PTR ds:[esi]
  417651:	add    ecx,ecx
  417653:	bound  esp,QWORD PTR [edi]
  417655:	mov    gs,WORD PTR [edi]
  417657:	mov    DWORD PTR [edx+ebp*2],edi
  41765a:	pop    ss
  41765b:	repz pop esi
  41765d:	jle    0x417621
  41765f:	lods   eax,DWORD PTR ds:[esi]
  417660:	sti    
  417661:	pop    ds
  417662:	shl    BYTE PTR [esi+0x67],1
  417665:	add    esi,0x13c8f537
  41766b:	in     eax,dx
  41766c:	icebp  
  41766d:	int    0xc3
  41766f:	popf   
  417670:	iret   
  417671:	or     eax,0xf1b1d6df
  417676:	mov    ecx,0x3144e260
  41767b:	lods   eax,DWORD PTR ds:[esi]
  41767c:	mov    bh,cl
  41767e:	icebp  
  41767f:	and    eax,0x51fabb03
  417684:	mov    ebx,0x879c9c4
  417689:	cmp    esi,DWORD PTR cs:[ebp-0x80]
  41768d:	push   ebx
  41768e:	mov    ah,0x6b
  417690:	add    al,0x5f
  417692:	test   eax,0xa5681baf
  417697:	fst    st(5)
  417699:	mov    edx,0xcdf371bd
  41769e:	test   eax,0x4c0dbc37
  4176a3:	(bad)  
  4176a4:	jns    0x417694
  4176a6:	jnp    0x4176e2
  4176a8:	ret    
  4176a9:	add    BYTE PTR [esi],0x3f
  4176ac:	xor    BYTE PTR [esi+0x1],bh
  4176af:	and    edx,ebx
  4176b1:	pushf  
  4176b2:	sub    eax,0xfc19d3a1
  4176b7:	std    
  4176b8:	mov    WORD PTR [esp+eax*1+0x74155dd0],?
  4176bf:	or     DWORD PTR [ecx+0x6909e832],ebp
  4176c5:	cdq    
  4176c6:	adc    eax,0xe66edd1b
  4176cb:	xchg   ebp,eax
  4176cc:	add    eax,0x20a7296f
  4176d1:	imul   esp,ecx,0xfffffffe
  4176d4:	ins    BYTE PTR es:[edi],dx
  4176d5:	push   cs
  4176d6:	jmp    0x693a3b0c
  4176db:	sub    al,0x52
  4176dd:	lods   eax,DWORD PTR ds:[esi]
  4176de:	mov    edx,0xa455fdd8
  4176e3:	pop    esp
  4176e4:	mov    al,ds:0xcf2bc51d
  4176e9:	fs ds inc eax
  4176ec:	sub    BYTE PTR [ebp+0x1c],ch
  4176ef:	mov    edx,0xa03677de
  4176f4:	pop    edi
  4176f5:	push   ss
  4176f6:	or     BYTE PTR [ecx+0xc],al
  4176f9:	add    ah,ch
  4176fb:	sub    ax,0xed4f
  4176ff:	sbb    ebx,DWORD PTR [edx-0x2a]
  417702:	das    
  417703:	xlat   BYTE PTR ds:[ebx]
  417704:	pop    ecx
  417705:	sub    edx,DWORD PTR [ebx]
  417707:	(bad)  
  417708:	mov    al,BYTE PTR [ebx+ebp*4+0x638cfce0]
  41770f:	pop    ebx
  417710:	mov    ebx,0x2c9aca46
  417715:	fwait
  417716:	nop
  417717:	push   edi
  417718:	aad    0x73
  41771a:	hlt    
  41771b:	inc    edi
  41771c:	js     0x4176f8
  41771e:	rcr    DWORD PTR [esi],1
  417720:	stos   BYTE PTR es:[edi],al
  417721:	call   DWORD PTR [edx]
  417723:	(bad)  
  417724:	jmp    0xdf6cc8a7
  417729:	dec    esi
  41772a:	xor    bl,BYTE PTR [ebx-0x5a]
  41772d:	pop    ecx
  41772e:	xchg   esi,eax
  41772f:	or     BYTE PTR [ecx-0xe],0xbe
  417733:	jl     0x41777c
  417735:	cmp    eax,0x2408e8e0
  41773a:	push   ebx
  41773b:	div    BYTE PTR [eax]
  41773d:	dec    ebp
  41773e:	(bad)  
  41773f:	sbb    al,0xfd
  417741:	push   ds
  417742:	pop    ebx
  417743:	bound  eax,QWORD PTR [esi]
  417745:	addr16 jnp 0x4176cb
  417748:	and    al,BYTE PTR [edi-0x70e823c]
  41774e:	sub    al,0xd
  417750:	jne    0x417792
  417752:	popa   
  417753:	push   ds
  417754:	cmp    bh,BYTE PTR [ebp-0x76fa15a9]
  41775a:	xor    BYTE PTR [edx-0x3e],ah
  41775d:	mov    ah,0x6
  41775f:	fild   QWORD PTR [edi-0x4df2863d]
  417765:	into   
  417766:	adc    DWORD PTR [esi],esp
  417768:	sti    
  417769:	in     eax,0x66
  41776b:	aam    0x23
  41776d:	xlat   BYTE PTR ds:[ebx]
  41776e:	fisubr WORD PTR [eax-0x13b7d08b]
  417774:	push   edi
  417775:	sbb    eax,0x89f54bd4
  41777a:	mov    al,ds:0xa60dcdc3
  41777f:	outs   dx,DWORD PTR ds:[esi]
  417780:	mov    dl,0x45
  417782:	mov    dl,0x60
  417784:	fadd   QWORD PTR [eiz*1-0x26661512]
  41778b:	(bad)  ds:0x58afe3b6
  417791:	add    bh,BYTE PTR [edx-0x4cb62e1a]
  417797:	adc    BYTE PTR [esi+0x5f],bl
  41779a:	and    BYTE PTR [edx],0x9b
  41779d:	inc    ebx
  41779e:	cli    
  41779f:	or     BYTE PTR [eax+0x5c7c84e],ch
  4177a5:	adc    eax,0xa1f3c1ed
  4177aa:	jo     0x4177c7
  4177ac:	ins    BYTE PTR es:[edi],dx
  4177ad:	lods   al,BYTE PTR ds:[esi]
  4177ae:	call   0xc440afd1
  4177b3:	repnz sub eax,0x244aed6c
  4177b9:	push   esp
  4177ba:	and    bh,BYTE PTR [edx+0x65]
  4177bd:	dec    edi
  4177be:	add    al,BYTE PTR [edx]
  4177c0:	or     BYTE PTR [ebx],0x58
  4177c3:	add    ch,BYTE PTR [ecx+0xe321735]
  4177c9:	jmp    0x1ed66cee
  4177ce:	into   
  4177cf:	jns    0x4177f9
  4177d1:	sub    eax,DWORD PTR [esi-0x1df92658]
  4177d7:	rol    DWORD PTR [esi+eiz*1+0xf2aac29],1
  4177de:	mov    DWORD PTR [eax-0x78],ecx
  4177e1:	pop    esi
  4177e2:	sub    al,0x6a
  4177e4:	aas    
  4177e5:	in     al,dx
  4177e6:	adc    DWORD PTR [esi+eax*8+0x7ab1d041],0x5d4c4740
  4177f1:	mov    bl,0xee
  4177f3:	add    bl,ah
  4177f5:	mov    edi,0xd6229cc9
  4177fa:	pop    ds
  4177fb:	sub    eax,0xd6182c31
  417800:	aaa    
  417801:	stos   DWORD PTR es:[edi],eax
  417802:	scas   al,BYTE PTR es:[edi]
  417803:	jb     0x4177d0
  417805:	mov    WORD PTR [edi+0x4fdbd040],?
  41780b:	repnz mov cl,0x73
  41780e:	gs repnz mov esp,0x45931b46
  417815:	mov    ebp,0xf964eb8
  41781a:	imul   esp,esi,0xffffff87
  41781d:	pop    esi
  41781e:	scas   eax,DWORD PTR es:[edi]
  41781f:	push   esi
  417820:	or     BYTE PTR [edi-0x3c7d9917],bl
  417826:	pusha  
  417827:	outs   dx,DWORD PTR ds:[esi]
  417828:	std    
  417829:	sar    BYTE PTR ds:0xed835686,0xbc
  417830:	mov    esp,0xd45a57c1
  417835:	jb     0x417847
  417837:	ret    
  417838:	cmp    DWORD PTR [ecx-0x775ab2a2],ecx
  41783e:	add    BYTE PTR [eax-0x19],0xdd
  417842:	push   esi
  417843:	lahf   
  417844:	fsub   QWORD PTR [eax+ebp*1+0x40]
  417848:	test   al,0xf5
  41784a:	mov    eax,0x355ac1e1
  41784f:	(bad)  
  417850:	cdq    
  417851:	stos   DWORD PTR es:[edi],eax
  417852:	js     0x417838
  417854:	(bad)  
  417855:	loop   0x4177fd
  417857:	sbb    al,0x65
  417859:	mov    bh,BYTE PTR [edx+0x67d3b80d]
  41785f:	cmp    esi,DWORD PTR es:[edx]
  417862:	fisttp QWORD PTR [ebx-0x5f]
  417865:	iret   
  417866:	lds    esp,FWORD PTR [ebx+edi*8+0x15]
  41786a:	sub    eax,0x1bf4ef9a
  41786f:	jmp    0x41786a
  417871:	push   cs
  417872:	mov    edi,0x4078f608
  417877:	sub    BYTE PTR [ebp+0x2a9cfb78],al
  41787d:	stc    
  41787e:	out    0x76,al
  417880:	dec    edx
  417881:	iret   
  417882:	daa    
  417883:	scas   eax,DWORD PTR es:[edi]
  417884:	je     0x41785d
  417886:	push   ebp
  417887:	and    ah,BYTE PTR ds:0xdaaac0cf
  41788d:	push   0x255aee89
  417892:	dec    esi
  417893:	outs   dx,BYTE PTR ds:[esi]
  417894:	jg     0x4178e8
  417896:	push   cs
  417897:	and    eax,0xdc62a2b5
  41789c:	lods   al,BYTE PTR ds:[esi]
  41789d:	stc    
  41789e:	retf   0x557b
  4178a1:	test   bh,0x2e
  4178a4:	stc    
  4178a5:	adc    al,0xc5
  4178a7:	lods   al,BYTE PTR ds:[esi]
  4178a8:	jne    0x41785c
  4178aa:	jne    0x41785a
  4178ac:	jl     0x4178e4
  4178ae:	jecxz  0x4178a7
  4178b0:	jl     0x417899
  4178b2:	test   eax,0x46ad6ae6
  4178b7:	pop    edx
  4178b8:	push   ss
  4178b9:	ds push edx
  4178bb:	cmp    DWORD PTR [edx-0x26ceb52c],ebp
  4178c1:	(bad)  
  4178c2:	repz push cs
  4178c4:	push   ds
  4178c5:	arpl   WORD PTR [ecx-0x71dc89d1],si
  4178cb:	and    BYTE PTR [eax],ch
  4178cd:	fs pop ebp
  4178cf:	xchg   edi,eax
  4178d0:	jns    0x41794a
  4178d2:	je     0x417899
  4178d4:	xor    eax,ebx
  4178d6:	fiadd  DWORD PTR [ebp+0x4d]
  4178d9:	add    esp,DWORD PTR [ebp+0x784a602e]
  4178df:	mov    ebp,0x2b391ac
  4178e4:	add    bl,BYTE PTR [eax]
  4178e6:	add    ebx,esp
  4178e8:	and    cl,BYTE PTR [esi+0x3318912a]
  4178ee:	xor    DWORD PTR [ebp-0x399b4658],eax
  4178f4:	iret   
  4178f5:	sbb    DWORD PTR [edx],0xffffffbd
  4178f8:	icebp  
  4178f9:	imul   ecx,edi,0x53
  4178fc:	add    BYTE PTR [ecx],0x87
  4178ff:	or     eax,0xb18bf35a
  417904:	sub    eax,0xe2928bfe
  417909:	aam    0xdc
  41790b:	or     al,0xd3
  41790d:	leave  
  41790e:	sbb    BYTE PTR [esi+0x7adbf547],dl
  417914:	out    0x93,al
  417916:	shr    BYTE PTR [esi-0xb],0xaa
  41791a:	aam    0xd9
  41791c:	sahf   
  41791d:	(bad)  
  41791e:	popa   
  41791f:	xchg   edx,eax
  417920:	aad    0x19
  417922:	daa    
  417923:	(bad)  
  417925:	(bad)  
  417927:	aam    0x2a
  417929:	aas    
  41792a:	scas   al,BYTE PTR es:[edi]
  41792b:	fidiv  DWORD PTR [eax+0x4d]
  41792e:	push   esp
  41792f:	dec    esp
  417930:	je     0x4178d4
  417932:	test   al,0x92
  417934:	and    dl,bl
  417936:	sub    eax,0xed1c5122
  41793b:	inc    edx
  41793c:	in     eax,0x80
  41793e:	sub    eax,0x8782b4e9
  417943:	fisttp QWORD PTR [eax]
  417945:	mov    ebx,0xbcfa34d5
  41794a:	leave  
  41794b:	inc    eax
  41794c:	out    0x97,al
  41794e:	pop    edx
  41794f:	add    ah,BYTE PTR [edi-0x64b30d29]
  417955:	jnp    0x41797f
  417957:	pop    ebx
  417958:	cmp    dh,BYTE PTR [ecx]
  41795a:	dec    ebx
  41795b:	outs   dx,BYTE PTR ds:[esi]
  41795c:	(bad)  
  41795d:	jge    0x4179bd
  41795f:	mov    eax,ds:0x4491fab0
  417964:	js     0x4179d3
  417966:	add    BYTE PTR [edi+0x36],0x9
  41796a:	xlat   BYTE PTR ds:[ebx]
  41796b:	mov    bl,0x76
  41796d:	inc    eax
  41796e:	out    dx,eax
  41796f:	jb     0x41797e
  417971:	lahf   
  417972:	mov    ch,0xd6
  417974:	xchg   edi,edx
  417976:	ins    DWORD PTR es:[edi],dx
  417977:	jnp    0x417900
  417979:	adc    cl,cl
  41797b:	(bad)  
  41797c:	mov    esi,0xd7ccb05d
  417981:	mov    WORD PTR [ecx+ebx*8],gs
  417984:	mov    ecx,0x1dbe78fd
  417989:	into   
  41798a:	and    DWORD PTR [ebx+ebp*8+0x7d],0xffffffd4
  41798f:	inc    edi
  417990:	das    
  417991:	(bad)  
  417992:	ficom  DWORD PTR [ecx+0x76ee6d3a]
  417998:	cdq    
  417999:	adc    al,0x9f
  41799b:	jp     0x4179a7
  41799d:	stos   BYTE PTR es:[edi],al
  41799e:	or     DWORD PTR [edx-0x4bd97ac6],ebx
  4179a4:	jno    0x417a17
  4179a6:	repz cmc 
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0xd9fd2175
  4179b1:	and    al,BYTE PTR [ecx-0x9]
  4179b4:	add    BYTE PTR [eax],al
  4179b6:	clc    
  4179b7:	add    al,0x0
  4179b9:	add    cl,bh
  4179bb:	add    eax,0x5191eb49
  4179c0:	popf   
  4179c1:	mov    al,0xd6
  4179c3:	sbb    eax,0x6b20988d
  4179c8:	ss and ebx,edx
  4179cb:	mov    al,ds:0xd1a1ffe2
  4179d0:	push   ebp
  4179d1:	add    eax,0xc152634a
  4179d6:	stc    
  4179d7:	push   ebx
  4179d9:	cmp    ah,BYTE PTR [ebp-0x80]
  4179dc:	sub    esi,0xffffff90
  4179df:	ins    DWORD PTR es:[edi],dx
  4179e0:	pop    ebp
  4179e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e2:	test   DWORD PTR [esi-0x29],0x185bee5b
  4179e9:	data16 test BYTE PTR [edx],ah
  4179ec:	adc    BYTE PTR [esi+esi*8-0x7e],cl
  4179f0:	mov    esi,0xc612e904
  4179f5:	xchg   edi,eax
  4179f6:	cld    
  4179f7:	add    ah,bh
  4179f9:	jmp    0xbeec:0xc5ecdea2
  417a00:	add    eax,0x7b0c509a
  417a05:	popf   
  417a06:	pop    ecx
  417a07:	mov    ch,0x61
  417a09:	adc    ebp,esp
  417a0b:	sbb    dl,ch
  417a0d:	test   eax,0xcb95e74c
  417a12:	jo     0x417a16
  417a14:	inc    ebp
  417a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a16:	or     BYTE PTR [ecx],ah
  417a18:	push   ds
  417a19:	jp     0x417a3e
  417a1b:	ins    BYTE PTR es:[edi],dx
  417a1c:	fsub   DWORD PTR [edx+0x276be1c5]
  417a22:	call   0x5c3a:0xfc91e4cd
  417a29:	push   ecx
  417a2a:	stos   BYTE PTR es:[edi],al
  417a2b:	scas   al,BYTE PTR es:[edi]
  417a2c:	fisub  WORD PTR [esi]
  417a2e:	hlt    
  417a2f:	or     BYTE PTR [ebx-0x53],ch
  417a32:	hlt    
  417a33:	ja     0x417a8c
  417a35:	pop    edx
  417a36:	loopne 0x417a97
  417a38:	cmp    edx,edx
  417a3a:	shr    edx,1
  417a3c:	stos   BYTE PTR es:[edi],al
  417a3d:	xchg   ebp,eax
  417a3e:	inc    esi
  417a3f:	pop    ss
  417a40:	sub    eax,ecx
  417a42:	pop    edx
  417a43:	push   ecx
  417a44:	pop    esp
  417a45:	sti    
  417a46:	retf   
  417a47:	into   
  417a48:	sbb    bl,BYTE PTR [edx+0x2b]
  417a4b:	jge    0x417a3c
  417a4d:	popf   
  417a4e:	jb     0x417a6b
  417a50:	fdivr  st,st(0)
  417a52:	into   
  417a53:	iret   
  417a54:	fs dec edx
  417a56:	mov    cl,0x7e
  417a58:	mov    esi,0x79a7b479
  417a5d:	jge    0x417a11
  417a5f:	ret    0xf599
  417a62:	mov    WORD PTR [esi],ss
  417a64:	mov    bl,0xa0
  417a66:	pushf  
  417a67:	inc    esp
  417a68:	sti    
  417a69:	mov    ds:0xc2310d11,al
  417a6e:	mov    ah,0x83
  417a70:	xchg   ebp,eax
  417a71:	push   cs
  417a72:	aam    0x64
  417a74:	ss out dx,al
  417a76:	mov    esp,0x964fd12a
  417a7b:	ja     0x417ae9
  417a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a7e:	out    0xb7,al
  417a80:	cmp    al,0x59
  417a82:	xor    DWORD PTR [esi+0x2f],0xffffffe3
  417a86:	test   BYTE PTR [esi],ch
  417a88:	cmp    dl,bh
  417a8a:	out    0xa7,eax
  417a8c:	mov    BYTE PTR [esp+ebp*4-0x183e2c8d],bh
  417a93:	aas    
  417a94:	popf   
  417a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a96:	pop    ss
  417a97:	fld    QWORD PTR [ebp-0x163fff9e]
  417a9d:	aam    0x2d
  417a9f:	data16 shl BYTE PTR [edi],1
  417aa2:	inc    ecx
  417aa3:	cwde   
  417aa4:	sub    bh,cl
  417aa6:	mov    ecx,eax
  417aa8:	mov    al,ds:0x2342eccf
  417aad:	sbb    ah,ah
  417aaf:	and    dh,BYTE PTR [eax+0x436da738]
  417ab5:	pop    ss
  417ab6:	popa   
  417ab7:	add    esi,DWORD PTR [ebx]
  417ab9:	dec    edx
  417aba:	or     ebx,DWORD PTR [eax+edi*1-0x5f]
  417abe:	push   ebx
  417abf:	push   edi
  417ac0:	ret    
  417ac1:	add    eax,0x2f66a876
  417ac6:	scas   eax,DWORD PTR es:[edi]
  417ac7:	cli    
  417ac8:	bound  edx,QWORD PTR [ebp-0x7f]
  417acb:	push   ecx
  417acc:	shr    DWORD PTR [ebx+0x2a93262d],1
  417ad2:	pop    ebp
  417ad3:	xchg   esp,eax
  417ad4:	xchg   edx,eax
  417ad5:	fmul   DWORD PTR [esi]
  417ad7:	(bad)  
  417ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad9:	out    dx,eax
  417ada:	dec    ebx
  417adb:	std    
  417adc:	pop    eax
  417add:	pop    esi
  417ade:	push   edi
  417adf:	push   esp
  417ae0:	sbb    edx,DWORD PTR [ebp+0x2834ec9]
  417ae6:	imul   esp,ebx,0xfea56835
  417aec:	or     ch,BYTE PTR [esi-0x5bcb6cd0]
  417af2:	imul   ecx,DWORD PTR [esi+0x4d2cc011],0xbf81bcac
  417afc:	dec    ebx
  417afd:	(bad)  
  417aff:	jle    0x417b61
  417b01:	ja     0x417b7d
  417b03:	push   edi
  417b04:	pop    ebx
  417b05:	call   0xb50d461d
  417b0a:	je     0x417ab0
  417b0c:	out    0x14,eax
  417b0e:	icebp  
  417b0f:	adc    DWORD PTR [edi-0xe39a9a],0xf3dd2079
  417b19:	push   ss
  417b1a:	dec    ebp
  417b1b:	mov    eax,0x60f97c44
  417b20:	cmp    eax,DWORD PTR [edi-0x7b1038b2]
  417b26:	or     DWORD PTR [eax],ecx
  417b28:	int    0xf8
  417b2a:	jae    0x417aef
  417b2c:	jbe    0x417b59
  417b2e:	mov    bh,0x3c
  417b30:	xchg   DWORD PTR [ebx],edx
  417b32:	mov    ds:0x1c097c37,al
  417b37:	idiv   DWORD PTR [ecx-0x14619d0f]
  417b3d:	cmp    al,0x99
  417b3f:	das    
  417b40:	adc    eax,0xc9475ee6
  417b45:	pop    ds
  417b46:	or     bl,BYTE PTR [edx-0x3c]
  417b49:	in     al,0xd1
  417b4b:	cld    
  417b4c:	imul   esi,DWORD PTR [ebp-0x78acefdd],0x70
  417b53:	in     al,dx
  417b54:	xlat   BYTE PTR ds:[ebx]
  417b55:	test   ah,dh
  417b57:	mov    bh,0xcc
  417b59:	or     edi,DWORD PTR [eax-0x6]
  417b5c:	(bad)  
  417b5d:	gs cld 
  417b5f:	mov    ?,WORD PTR [esi+ecx*2-0x5e96f923]
  417b66:	push   ss
  417b67:	pop    esi
  417b68:	pop    ds
  417b69:	ret    
  417b6a:	mov    al,0xea
  417b6c:	outs   dx,DWORD PTR ds:[esi]
  417b6d:	sub    al,0x60
  417b6f:	mov    cl,cl
  417b71:	dec    eax
  417b72:	pop    esi
  417b73:	inc    edx
  417b74:	jno    0x417b6c
  417b76:	xor    DWORD PTR es:[ebx+0x7f676f3f],esi
  417b7d:	xchg   ecx,eax
  417b7e:	outs   dx,BYTE PTR ds:[esi]
  417b7f:	mov    bh,0x78
  417b81:	in     eax,0xe0
  417b83:	and    al,bh
  417b85:	add    DWORD PTR [edi+0x803bd49],esi
  417b8b:	and    ebx,DWORD PTR [eax+ecx*2-0x7a4e1232]
  417b92:	fnstsw WORD PTR [ecx]
  417b94:	loopne 0x417b67
  417b96:	pushf  
  417b97:	jle    0x417b28
  417b99:	sbb    al,0x23
  417b9b:	fst    QWORD PTR [ecx+0x7463b145]
  417ba1:	xchg   esi,eax
  417ba2:	sub    cl,dl
  417ba4:	jmp    0x417b35
  417ba6:	add    BYTE PTR [edx-0x1b697731],bl
  417bac:	pop    ds
  417bad:	adc    al,0x65
  417baf:	xchg   edx,eax
  417bb0:	sbb    dh,BYTE PTR ds:0x5d0db414
  417bb6:	sar    edi,1
  417bb8:	xchg   edi,eax
  417bb9:	xor    cl,BYTE PTR [ebx+0x12d4a737]
  417bbf:	inc    ebx
  417bc0:	fistp  WORD PTR [esp+ecx*2+0x274fd992]
  417bc7:	in     eax,0x26
  417bc9:	push   edx
  417bca:	add    cl,dl
  417bcc:	push   edi
  417bcd:	js     0x417c01
  417bcf:	sub    BYTE PTR [esi+0x453fff7b],bh
  417bd5:	out    0xb,al
  417bd7:	lods   eax,DWORD PTR ds:[esi]
  417bd8:	aaa    
  417bd9:	mov    eax,0x5265a8df
  417bde:	ja     0x417bfb
  417be0:	sub    DWORD PTR [esi-0x26549478],eax
  417be6:	adc    eax,0x6a1dc7a0
  417beb:	call   0x5f78eb1a
  417bf0:	cld    
  417bf1:	pushf  
  417bf2:	aam    0xd5
  417bf4:	mov    esp,0x3eef6760
  417bf9:	push   ebx
  417bfa:	fstp   QWORD PTR [edx]
  417bfc:	bnd jl 0x417c29
  417bff:	mov    bh,0x25
  417c01:	repnz dec DWORD PTR [ecx+0x39]
  417c05:	and    eax,0xeec85f94
  417c0a:	mov    edi,0xde6a84c9
  417c0f:	rcr    BYTE PTR [edx+0x49],0xbb
  417c13:	mov    edx,0x1d5f7340
  417c18:	mov    esp,0x3e28a398
  417c1d:	mov    eax,ds:0xccd1185c
  417c22:	jp     0x417c6d
  417c24:	popf   
  417c25:	jns    0x417c04
  417c27:	jecxz  0x417bd8
  417c29:	arpl   WORD PTR [esi-0x55c09cd7],dx
  417c2f:	neg    BYTE PTR [ebx]
  417c31:	push   eax
  417c32:	or     DWORD PTR [esp+esi*8],esi
  417c35:	mov    DWORD PTR [edi-0x22],eax
  417c38:	lods   eax,DWORD PTR ds:[esi]
  417c39:	rol    edi,cl
  417c3b:	popf   
  417c3c:	mov    WORD PTR ds:0x21a47436,ds
  417c42:	data16 test al,0x87
  417c45:	jecxz  0x417c49
  417c47:	push   ss
  417c48:	inc    esp
  417c49:	neg    BYTE PTR [ebx+0x62]
  417c4c:	fwait
  417c4d:	ja     0x417c11
  417c4f:	adc    DWORD PTR [edi+eiz*2],esp
  417c52:	mov    cl,dl
  417c54:	dec    esi
  417c55:	and    BYTE PTR [edi-0x55],al
  417c58:	sub    eax,0x1d3577a9
  417c5d:	jno    0x417cdb
  417c5f:	mov    al,ds:0xaf13d483
  417c64:	mov    ds:0x2808e663,al
  417c69:	xchg   edx,eax
  417c6a:	inc    esi
  417c6b:	lods   eax,DWORD PTR ds:[esi]
  417c6c:	cld    
  417c6d:	sbb    eax,0xada58755
  417c72:	mov    edx,0xb3f475bc
  417c77:	lds    eax,FWORD PTR [eax-0x23]
  417c7a:	dec    esi
  417c7b:	jg     0x417c59
  417c7d:	cli    
  417c7e:	stc    
  417c7f:	scas   al,BYTE PTR es:[di]
  417c81:	stos   DWORD PTR es:[edi],eax
  417c82:	adc    BYTE PTR [ebp+0x11a1afa3],cl
  417c88:	daa    
  417c89:	les    eax,FWORD PTR [ebp+0x45]
  417c8c:	pop    edi
  417c8d:	into   
  417c8e:	imul   eax,DWORD PTR [ebx-0x6ca89fa5],0x2e
  417c95:	push   0x4f
  417c97:	inc    ebx
  417c98:	inc    edi
  417c99:	pop    esp
  417c9a:	mov    edx,0xaa93fc8
  417c9f:	icebp  
  417ca0:	mov    dh,0xb0
  417ca2:	sbb    cl,al
  417ca4:	adc    eax,0xe59e076d
  417ca9:	jmp    0x3482:0xbe5334e3
  417cb0:	das    
  417cb1:	lock xchg DWORD PTR [esi-0x1a12fd70],edi
  417cb8:	push   esp
  417cb9:	xchg   esi,eax
  417cba:	cmp    al,0x2d
  417cbc:	(bad)  
  417cbd:	ja     0x417cc5
  417cbf:	aas    
  417cc0:	frstor [edx]
  417cc2:	push   ecx
  417cc3:	(bad)  
  417cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc5:	call   0x46ed:0xf196aa5c
  417ccc:	jecxz  0x417cca
  417cce:	stos   BYTE PTR es:[edi],al
  417ccf:	pop    ebp
  417cd0:	xor    bl,ah
  417cd2:	mov    ecx,0x5e872612
  417cd7:	fcom   QWORD PTR [ebx+0x73]
  417cda:	jae    0x417d50
  417cdc:	aad    0x9f
  417cde:	sub    eax,0x9c1e515b
  417ce3:	dec    ebx
  417ce4:	in     eax,0x7d
  417ce6:	fst    DWORD PTR [edi-0x4e]
  417ce9:	push   eax
  417cea:	rol    edi,0x4
  417ced:	push   esp
  417cee:	pop    ds
  417cef:	xchg   ebp,eax
  417cf0:	cdq    
  417cf1:	pushf  
  417cf2:	mov    al,0x79
  417cf4:	ja     0x417cf3
  417cf6:	mov    eax,ds:0xde55e7d7
  417cfb:	pop    ebx
  417cfc:	imul   ebp,DWORD PTR [edi+0x913681e],0x73317fe1
  417d06:	dec    esp
  417d07:	push   ebx
  417d08:	in     eax,dx
  417d09:	(bad)  
  417d0b:	daa    
  417d0c:	lock or al,0x94
  417d0f:	or     ebx,DWORD PTR [ecx+0x75a6942c]
  417d15:	(bad)  
  417d16:	xchg   esp,eax
  417d17:	pushf  
  417d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d19:	iret   
  417d1a:	fs push ecx
  417d1c:	mov    ebp,0xb27bcc7e
  417d21:	fild   QWORD PTR [eax+edx*8]
  417d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d25:	aas    
  417d26:	stc    
  417d27:	sbb    BYTE PTR [ecx+0x161a1a61],0x40
  417d2e:	sub    eax,0x9cf69475
  417d33:	fisub  WORD PTR [eax]
  417d35:	lds    esi,FWORD PTR [ecx+eiz*4+0x3d]
  417d39:	or     DWORD PTR [edx-0x1a4417c6],esp
  417d3f:	add    BYTE PTR [edi-0x756eccde],ch
  417d45:	aad    0x2
  417d47:	mov    ebp,0xa2d27e4f
  417d4c:	mov    ch,0x49
  417d4e:	xor    eax,edx
  417d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d51:	imul   ecx,DWORD PTR [esi],0xa4f506f9
  417d57:	call   0x391c573c
  417d5c:	or     eax,0xc32092cc
  417d61:	xchg   edx,eax
  417d62:	push   ss
  417d63:	and    BYTE PTR [edi*8+0x7eb0e331],0x52
  417d6b:	or     DWORD PTR [edx+0x62],0x34
  417d6f:	or     ebp,edx
  417d71:	mov    ch,0xb4
  417d73:	js     0x417dc2
  417d75:	pop    ecx
  417d76:	jg     0x417daa
  417d78:	add    eax,0xed27cf50
  417d7d:	gs js  0x417d54
  417d80:	mov    bl,0x9c
  417d82:	mov    DWORD PTR [ebx+ebx*8-0x1c],eax
  417d86:	stc    
  417d87:	dec    esi
  417d88:	outs   dx,DWORD PTR ds:[esi]
  417d89:	mov    al,bh
  417d8b:	mov    al,ds:0xd007b932
  417d90:	sbb    DWORD PTR [ecx-0x78],ebx
  417d93:	test   al,0x6
  417d95:	push   edi
  417d96:	scas   eax,DWORD PTR es:[edi]
  417d97:	repnz ss shr ebp,1
  417d9b:	sbb    esi,0x11
  417d9e:	jecxz  0x417deb
  417da0:	cmp    BYTE PTR [esi],0x1e
  417da3:	cmp    edi,DWORD PTR [eax-0x664c392]
  417da9:	enter  0x8ff,0x41
  417dad:	arpl   WORD PTR [ebp-0x26011b88],sp
  417db3:	add    DWORD PTR [esi],edi
  417db5:	sbb    DWORD PTR [edi-0x7d],0xffffffff
  417db9:	in     al,0x4d
  417dbb:	lahf   
  417dbc:	add    BYTE PTR [esi-0xe6c0ed2],ah
  417dc2:	sbb    ch,BYTE PTR [ecx+0x40]
  417dc5:	sahf   
  417dc6:	and    al,0x2b
  417dc8:	push   edx
  417dc9:	gs aad 0xef
  417dcc:	mov    esi,0x9538f9c0
  417dd1:	cli    
  417dd2:	inc    esp
  417dd3:	(bad)  
  417dd4:	xchg   ecx,eax
  417dd5:	add    bl,bl
  417dd7:	call   0x892b:0xbcf3a9f4
  417dde:	mov    edi,0x8d068ec2
  417de3:	and    DWORD PTR [ebp-0x621adcc8],0x69dae91d
  417ded:	pushf  
  417dee:	mov    edx,0xca86354c
  417df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df4:	jae    0x417e0c
  417df6:	lea    ebx,[ebp+0x67]
  417df9:	xor    eax,0x6968755e
  417dfe:	fucomip st,st(6)
  417e00:	repz fs sub al,0x72
  417e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e05:	shr    DWORD PTR ds:0xa435132a,cl
  417e0b:	or     DWORD PTR [ebp+0x4cd46661],edi
  417e11:	jbe    0x417e7a
  417e13:	fdiv   QWORD PTR [edi+0x2]
  417e16:	std    
  417e17:	xor    DWORD PTR [esi+0x45],esp
  417e1a:	mov    ebx,DWORD PTR [ebp+0x5e4977c5]
  417e20:	mov    esi,0xa16a1c11
  417e25:	add    BYTE PTR [esi+0x5a],0x94
  417e29:	fcmovu st,st(1)
  417e2b:	jg     0x417e65
  417e2d:	push   ebp
  417e2e:	retf   0xd4ea
  417e31:	jle    0x417def
  417e33:	pop    edx
  417e34:	or     BYTE PTR [eax-0x60372343],al
  417e3a:	mov    esi,0x75f7d696
  417e3f:	or     dl,0x4c
  417e42:	lea    esi,[eax-0x77]
  417e45:	push   ds
  417e46:	sti    
  417e47:	mov    edx,0xdc9f8474
  417e4c:	mov    dl,0xae
  417e4e:	fistp  DWORD PTR [ebx+0x6a]
  417e51:	out    0x4e,eax
  417e53:	neg    DWORD PTR [eax]
  417e55:	pop    es
  417e56:	sbb    ecx,edx
  417e58:	loope  0x417e8c
  417e5a:	jl     0x417e54
  417e5c:	and    bh,BYTE PTR [ecx-0x30]
  417e5f:	mov    DWORD PTR [eax-0x5eb4b945],esp
  417e65:	mov    ebp,0x86d06c64
  417e6a:	xchg   esp,eax
  417e6b:	nop
  417e6c:	jmp    0x417ea0
  417e6e:	fimul  DWORD PTR [edx-0x7]
  417e71:	int3   
  417e72:	cld    
  417e73:	popa   
  417e74:	push   0x37f950bf
  417e79:	popf   
  417e7a:	test   DWORD PTR [esi+ecx*4-0x32a6b44b],0x3fceec86
  417e85:	mov    DWORD PTR [eax-0x9],eax
  417e88:	and    al,0xe4
  417e8a:	hlt    
  417e8b:	jae    0x417eff
  417e8d:	out    0x6a,eax
  417e8f:	rcl    DWORD PTR [edi-0x7cfbaa8],1
  417e95:	rcl    BYTE PTR [ebx+esi*8+0x66],1
  417e99:	stos   BYTE PTR es:[edi],al
  417e9a:	mov    edx,0xff615d4c
  417e9f:	sbb    ah,BYTE PTR [ebx]
  417ea1:	push   esp
  417ea2:	sbb    eax,0xd783d767
  417ea7:	cmc    
  417ea8:	pusha  
  417ea9:	cli    
  417eaa:	test   eax,0x7de3cc47
  417eaf:	sbb    BYTE PTR [edi],bh
  417eb1:	cwde   
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	addps  xmm0,XMMWORD PTR [eax-0x3c672ca]
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	clc    
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR [edx+0x48],dh
  417ecc:	fwait
  417ecd:	and    al,0x9d
  417ecf:	cmp    eax,ebp
  417ed1:	ds and ebp,ebp
  417ed4:	out    dx,al
  417ed5:	jp     0x417e9e
  417ed7:	ror    DWORD PTR [esi],1
  417ed9:	and    DWORD PTR [edi],0x60
  417edc:	xchg   BYTE PTR [ecx+0x55],ah
  417edf:	push   eax
  417ee0:	dec    esp
  417ee1:	repz fimul WORD PTR [eax+0x61]
  417ee5:	adc    DWORD PTR [esi],ecx
  417ee7:	dec    edi
  417ee9:	int    0xa8
  417eeb:	data16 mov al,ds:0xe2d12471
  417ef1:	push   esp
  417ef2:	mov    ebp,0x990ea92a
  417ef7:	mov    edi,0x61f6b712
  417efc:	cmp    eax,DWORD PTR [ecx+0x7b203a5e]
  417f02:	cmp    al,0x35
  417f04:	and    ebx,DWORD PTR [eax]
  417f06:	pop    ecx
  417f07:	cmp    eax,0x71154bd1
  417f0c:	dec    edi
  417f0d:	mov    eax,ds:0xf8c51201
  417f12:	dec    edx
  417f13:	or     ah,BYTE PTR [eax-0x8a8f0e9]
  417f19:	or     ebp,ebx
  417f1b:	in     eax,0xe8
  417f1d:	loopne 0x417f2f
  417f1f:	inc    eax
  417f20:	and    al,0x26
  417f22:	push   es
  417f23:	sub    DWORD PTR [ebx+0x315658ee],0x8dbd8f86
  417f2d:	gs dec edx
  417f2f:	call   0x987e:0x340381cc
  417f36:	sbb    DWORD PTR [edx+ecx*1+0x6d],0x70
  417f3b:	ins    DWORD PTR es:[edi],dx
  417f3c:	shl    DWORD PTR [edi+0x4f],0xb5
  417f40:	mov    ah,0x4c
  417f42:	ins    DWORD PTR es:[edi],dx
  417f43:	fstp   DWORD PTR [esp+ecx*2]
  417f46:	pop    edi
  417f47:	pop    eax
  417f48:	add    DWORD PTR [edx+eax*1],esi
  417f4b:	ins    DWORD PTR es:[edi],dx
  417f4c:	fist   WORD PTR [edx+ecx*8+0x4a4371b1]
  417f53:	xor    DWORD PTR [ebx-0x3c],eax
  417f56:	leave  
  417f57:	in     eax,0x78
  417f59:	cmp    al,0x3f
  417f5b:	(bad)
  417f5e:	cdq    
  417f5f:	shr    BYTE PTR [edi+0x46],cl
  417f62:	ret    
  417f63:	mov    ecx,0x27a83f5d
  417f68:	aad    0x30
  417f6a:	aas    
  417f6b:	jmp    0x417f06
  417f6d:	sub    ah,al
  417f6f:	pop    ebp
  417f70:	jnp    0x417f23
  417f72:	inc    edx
  417f73:	ins    DWORD PTR es:[edi],dx
  417f74:	xlat   BYTE PTR ds:[ebx]
  417f75:	sbb    ebx,ebp
  417f77:	mov    bl,0x2a
  417f79:	sub    BYTE PTR [ebp-0x6ed1bda1],bh
  417f7f:	adc    DWORD PTR [eax+edi*8],eax
  417f82:	sbb    bl,ah
  417f84:	aad    0x7a
  417f86:	sub    ebx,DWORD PTR [esi]
  417f88:	sti    
  417f89:	pop    ecx
  417f8a:	sub    bl,al
  417f8c:	frstpm(287 only) 
  417f8e:	or     al,0xdf
  417f90:	dec    edx
  417f91:	je     0x417f89
  417f93:	inc    edi
  417f94:	xchg   BYTE PTR [edi+0x7c],dh
  417f97:	sbb    al,0x7c
  417f99:	add    eax,0x65b378c0
  417f9e:	iret   
  417f9f:	mov    bh,0x8a
  417fa1:	leave  
  417fa2:	rcr    BYTE PTR [edx+0x5708d245],0xe7
  417fa9:	aad    0x1e
  417fab:	gs xchg DWORD PTR ss:[ebx],esi
  417faf:	xchg   DWORD PTR [ebx-0x48],ecx
  417fb2:	cdq    
  417fb3:	(bad)  
  417fb4:	std    
  417fb5:	add    BYTE PTR [eax],0xbd
  417fb8:	adc    bh,BYTE PTR [esi-0x6abec97c]
  417fbe:	push   ecx
  417fbf:	fstp   TBYTE PTR [eax-0x6f]
  417fc2:	(bad)  
  417fc3:	into   
  417fc4:	clc    
  417fc5:	pop    esp
  417fc6:	pop    edi
  417fc7:	ins    BYTE PTR es:[edi],dx
  417fc8:	cmp    DWORD PTR ds:0x82e5ee6d,ecx
  417fce:	push   ebp
  417fcf:	add    al,0xf9
  417fd1:	mov    eax,0xf1e6618
  417fd6:	stc    
  417fd7:	adc    al,0x4f
  417fd9:	jecxz  0x417fa3
  417fdb:	icebp  
  417fdc:	and    BYTE PTR [esi+eiz*2-0x1f0652e4],ch
  417fe3:	xchg   BYTE PTR [ebp+0x5a99dcc4],dh
  417fe9:	push   eax
  417fea:	ss cs test eax,0x93017238
  417ff1:	cmp    ebx,DWORD PTR [ecx-0x4f]
  417ff4:	mov    bh,BYTE PTR [ebx]
  417ff6:	pop    edi
  417ff7:	lea    ebx,[eax-0x69c281d0]
  417ffd:	dec    eax
  417ffe:	cmp    eax,0x184585c3
  418003:	es xchg esi,eax
  418005:	addr16 mov dl,0x4a
  418008:	push   0xffffffad
  41800a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41800b:	jmp    0xc7e3:0xb039315d
  418012:	mov    ebp,0x45ce9179
  418017:	cs inc ebx
  418019:	lea    edi,[ecx+ebx*1-0x1a]
  41801d:	inc    ebp
  41801e:	adc    edi,DWORD PTR [ebp-0x5b68da4d]
  418024:	adc    BYTE PTR [esi+0x60],ch
  418027:	mov    bl,0x66
  418029:	cld    
  41802a:	mov    esi,es
  41802c:	jl     0x418019
  41802e:	(bad)  
  418031:	call   0x3ac39b2f
  418036:	xor    al,0x58
  418038:	xchg   edi,eax
  418039:	sub    edx,0x5539f8ff
  41803f:	ins    DWORD PTR es:[edi],dx
  418040:	fimul  WORD PTR [esi-0x141d7c1]
  418046:	and    BYTE PTR [ecx],cl
  418048:	mov    ds:0x2be693a4,eax
  41804d:	inc    esi
  41804e:	mov    dl,0x3f
  418050:	lds    ebp,FWORD PTR [ebp-0x4c486b5c]
  418056:	fsub   DWORD PTR [esi]
  418058:	int3   
  418059:	jecxz  0x41809e
  41805b:	and    eax,0x51ba9412
  418060:	inc    esp
  418061:	add    eax,0xa0997cb4
  418066:	repz xchg ecx,eax
  418068:	lock adc dh,BYTE PTR [ebx+0x39]
  41806c:	mov    eax,ds:0x526bd392
  418071:	xchg   BYTE PTR [ebp+0x63],dl
  418074:	adc    al,0xa2
  418076:	mul    DWORD PTR [eax]
  418078:	nop
  418079:	rcr    DWORD PTR [edx+ebp*8-0x8926d50],cl
  418080:	and    DWORD PTR [edx+0x29846553],ecx
  418086:	xchg   ebx,eax
  418087:	mov    BYTE PTR [eax+eiz*4],ch
  41808a:	pop    edi
  41808b:	add    BYTE PTR [edi],cl
  41808d:	dec    ecx
  41808e:	jl     0x418084
  418090:	pop    ebx
  418091:	je     0x4180f5
  418093:	nop
  418094:	mov    ecx,0x6c8aac49
  418099:	jl     0x41803f
  41809b:	xchg   ecx,eax
  41809c:	scas   al,BYTE PTR es:[edi]
  41809d:	cmp    DWORD PTR [edx+ebx*8],esp
  4180a0:	add    DWORD PTR [edi-0x754e5d39],ebx
  4180a6:	pop    es
  4180a7:	or     DWORD PTR [ecx+0x704a6437],edi
  4180ad:	mov    ecx,0x678ea9f2
  4180b2:	mov    bl,0xe3
  4180b4:	or     DWORD PTR [eax],edx
  4180b6:	repnz ins DWORD PTR es:[edi],dx
  4180b8:	inc    edi
  4180b9:	stos   DWORD PTR es:[edi],eax
  4180ba:	mov    edx,0x896819c2
  4180bf:	cmp    eax,0x7c50e387
  4180c4:	gs test ecx,esi
  4180c7:	jge    0x418096
  4180c9:	mov    edx,0xdbf98fa5
  4180ce:	or     al,0x67
  4180d0:	jo     0x41806f
  4180d2:	mov    eax,0x6c7006f
  4180d7:	rcr    DWORD PTR [eax],cl
  4180d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180da:	mov    ebp,0x8a90488b
  4180df:	repz jg 0x418086
  4180e2:	jl     0x4180a5
  4180e4:	ror    BYTE PTR [esi-0x2703de7e],1
  4180ea:	in     eax,dx
  4180eb:	mov    eax,0x2162ad81
  4180f0:	jle    0x418111
  4180f2:	add    eax,ebp
  4180f4:	loope  0x418166
  4180f6:	xor    esi,DWORD PTR [eax]
  4180f8:	inc    edi
  4180f9:	test   BYTE PTR [ebx],bl
  4180fb:	mov    ebp,0x81306608
  418100:	pop    ecx
  418101:	aam    0xd6
  418103:	cdq    
  418104:	dec    edx
  418105:	push   esp
  418106:	pop    es
  418107:	or     DWORD PTR [ebx+0x3515b8b5],ebx
  41810d:	and    esp,DWORD PTR [ebp-0x7e]
  418110:	into   
  418111:	cmp    edx,ebx
  418113:	rcr    BYTE PTR [edx+eiz*8-0x34429da5],0xd8
  41811b:	imul   esp,DWORD PTR [ebp+0x5],0x90273296
  418122:	mov    al,ds:0x47fe753a
  418127:	xchg   ebx,eax
  418128:	in     al,dx
  418129:	mov    bh,0x8b
  41812b:	mov    esp,0xb2496749
  418130:	mov    ecx,0xb0eeee04
  418135:	jp     0x4180dd
  418137:	mov    ebp,DWORD PTR ds:0xae8f8ee8
  41813d:	cdq    
  41813e:	jbe    0x418109
  418140:	sub    ch,dh
  418142:	mov    ah,0x8c
  418144:	in     al,dx
  418145:	mov    ebp,0xef9d3bd9
  41814a:	ror    DWORD PTR ds:0x27bcfb27,0x6c
  418151:	dec    DWORD PTR [edi+0x15c71789]
  418157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418158:	mov    al,0xee
  41815a:	jbe    0x418135
  41815c:	jo     0x41811f
  41815e:	mov    esi,0x8de81a83
  418163:	mov    WORD PTR [ebx],es
  418165:	sbb    esi,esi
  418167:	jecxz  0x418179
  418169:	xor    dh,bl
  41816b:	inc    edx
  41816c:	adc    BYTE PTR [eax-0x65b7291],cl
  418172:	jno    0x4181dc
  418174:	ja     0xd43cbf7e
  41817a:	int    0x8
  41817c:	das    
  41817d:	fstp   DWORD PTR [eax-0x78925059]
  418183:	pop    es
  418184:	dec    edi
  418185:	fwait
  418186:	inc    edx
  418187:	cmp    esp,DWORD PTR [ebx+0x11a0edc]
  41818d:	jne    0x418203
  41818f:	rcl    DWORD PTR [edx-0x4f],cl
  418192:	popf   
  418193:	jns    0x41812e
  418195:	push   ecx
  418196:	and    eax,0x6aee01e0
  41819b:	push   ebp
  41819c:	inc    ebp
  41819d:	add    ebx,ecx
  41819f:	add    esp,DWORD PTR [edi]
  4181a1:	xchg   edx,eax
  4181a2:	(bad)  
  4181a3:	leave  
  4181a4:	mov    eax,0xa02f5ccf
  4181a9:	xlat   BYTE PTR ds:[ebx]
  4181aa:	cmp    DWORD PTR [edi],ecx
  4181ac:	xor    BYTE PTR [esi],ah
  4181ae:	es lahf 
  4181b0:	dec    ebp
  4181b1:	in     eax,0xca
  4181b3:	mov    ebp,DWORD PTR [esi-0x2d]
  4181b6:	mov    esi,0x4c131b0f
  4181bb:	jge    0x4181d5
  4181bd:	out    dx,al
  4181be:	int    0x16
  4181c0:	and    dl,bl
  4181c2:	pop    ebp
  4181c3:	mov    cl,0x4a
  4181c5:	ror    BYTE PTR ds:0x389ba608,cl
  4181cb:	arpl   WORD PTR [eax-0x519cbd48],bx
  4181d1:	(bad)  
  4181d2:	jl     0x418181
  4181d4:	dec    ebp
  4181d5:	xchg   edi,eax
  4181d6:	(bad)  
  4181d7:	test   al,0xa4
  4181d9:	jmp    0x2bbb:0x5393a1da
  4181e0:	stc    
  4181e1:	mov    dl,0x97
  4181e3:	ins    DWORD PTR es:[edi],dx
  4181e4:	cmp    al,0x82
  4181e6:	dec    esp
  4181e7:	xor    DWORD PTR [edi-0x8],esi
  4181ea:	cwde   
  4181eb:	sub    BYTE PTR [eax+ebp*8],ah
  4181ee:	and    bh,BYTE PTR [edx+ebx*1]
  4181f1:	das    
  4181f2:	ins    DWORD PTR es:[edi],dx
  4181f3:	test   eax,0x1537061b
  4181f8:	or     BYTE PTR [esi+0x283c058f],bl
  4181fe:	inc    ecx
  4181ff:	nop
  418200:	push   edi
  418201:	js     0x4181f8
  418203:	dec    edi
  418204:	jmp    0x9349018e
  418209:	popa   
  41820a:	or     eax,0x6bbcaa0f
  41820f:	jo     0x418255
  418211:	jmp    0x41823a
  418213:	fisub  WORD PTR [eax-0x10e63ac7]
  418219:	popa   
  41821a:	lock addr16 mov bl,0x72
  41821e:	(bad)
  418222:	fldenv [ebx+0x1a8b7d82]
  418228:	xchg   edx,eax
  418229:	cmp    al,0x80
  41822b:	mov    esi,0xb2a66380
  418230:	pusha  
  418231:	pop    ebx
  418232:	rcr    BYTE PTR ds:0xcd9ec607,1
  418238:	fsubr  QWORD PTR [ecx]
  41823a:	adc    edi,DWORD PTR [eax+0x1f3b22e8]
  418240:	xchg   edx,eax
  418241:	repnz not edi
  418244:	sub    DWORD PTR ds:0xe40da274,esp
  41824a:	cmp    bh,BYTE PTR [ecx-0x763639a1]
  418250:	out    dx,al
  418251:	(bad)  
  418252:	in     eax,0xd1
  418254:	push   ds
  418255:	mov    dh,0x77
  418257:	cld    
  418258:	mov    bh,0xbf
  41825a:	inc    edx
  41825b:	dec    edx
  41825c:	xlat   BYTE PTR ds:[ebx]
  41825d:	sbb    BYTE PTR [ecx-0x43068b98],ah
  418263:	mov    bh,0xc8
  418265:	adc    bh,ah
  418267:	jmp    0x7ccb7ee8
  41826c:	retf   0x586
  41826f:	jno    0x418270
  418271:	mov    bh,0x29
  418273:	jae    0x418208
  418275:	stos   DWORD PTR es:[edi],eax
  418276:	adc    BYTE PTR [ebx-0x4ca44274],0xfb
  41827d:	adc    BYTE PTR [ecx-0xee44f80],bh
  418283:	jmp    0x4182d9
  418285:	stc    
  418286:	mov    ah,0x93
  418288:	call   FWORD PTR ds:0x9f474be9
  41828e:	lock test DWORD PTR [esi+0x62cbe48a],esi
  418295:	push   ds
  418296:	cld    
  418297:	jo     0x4182e1
  418299:	jge    0x4182f8
  41829b:	xchg   ebp,eax
  41829c:	inc    esi
  41829d:	stc    
  41829e:	lods   al,BYTE PTR ds:[esi]
  41829f:	bound  ebp,QWORD PTR [ebp+0x15928afd]
  4182a5:	addr16 das 
  4182a7:	inc    esi
  4182a8:	and    al,0x41
  4182aa:	sbb    ah,bh
  4182ac:	retf   0xd838
  4182af:	fld    QWORD PTR [ebp-0x22]
  4182b2:	sbb    BYTE PTR [esp+ecx*2-0x1d],0x25
  4182b7:	stos   BYTE PTR es:[edi],al
  4182b8:	fxch   st(7)
  4182ba:	xor    dh,BYTE PTR [ecx+edi*2-0x66e701d4]
  4182c1:	mov    ecx,0xac63a0d0
  4182c6:	fisubr WORD PTR [ebp-0x73b6b29f]
  4182cc:	xor    al,0xbd
  4182ce:	pusha  
  4182cf:	les    esi,FWORD PTR [ebp+0x66e4808c]
  4182d5:	inc    esi
  4182d6:	mov    ds:0x520a790b,al
  4182db:	cdq    
  4182dc:	adc    eax,0xc3da0979
  4182e1:	repnz push ss
  4182e3:	les    edi,FWORD PTR [eax+0x6789506f]
  4182e9:	cwde   
  4182ea:	int3   
  4182eb:	xor    al,0x65
  4182ed:	mov    ecx,0x1c66499d
  4182f2:	jmp    FWORD PTR [ebx]
  4182f4:	or     BYTE PTR [ecx-0x2c],dh
  4182f7:	stos   DWORD PTR es:[edi],eax
  4182f8:	pop    es
  4182f9:	adc    bh,BYTE PTR [ecx-0x22eb791b]
  4182ff:	stc    
  418300:	test   al,0x9a
  418302:	mov    esp,0x9d094d7d
  418307:	dec    edi
  418308:	fstp   st(7)
  41830a:	dec    ecx
  41830b:	jmp    0x418385
  41830d:	or     BYTE PTR [esi-0x51feaa03],bl
  418313:	mov    ch,BYTE PTR [edx+0x68]
  418316:	scas   al,BYTE PTR es:[edi]
  418317:	sbb    dl,BYTE PTR [ebp+0x58]
  41831a:	jecxz  0x4182c4
  41831c:	call   0xa6ac:0x3b8d903b
  418323:	adc    eax,0x807af165
  418328:	ret    
  418329:	jbe    0x418395
  41832b:	sbb    eax,0xb771feda
  418330:	shl    BYTE PTR [edx],0xf2
  418333:	pop    esp
  418334:	mov    al,ds:0x4790a1b2
  418339:	sbb    DWORD PTR [esi],ecx
  41833b:	int    0x83
  41833d:	inc    eax
  41833e:	add    eax,0xb6c6ce88
  418343:	xchg   edx,eax
  418344:	loopne 0x41836e
  418346:	pop    eax
  418347:	dec    edi
  418348:	jnp    0x4182f1
  41834a:	cmp    DWORD PTR [ecx],ecx
  41834c:	fbld   TBYTE PTR [ecx+ecx*4+0x6f1c4b39]
  418353:	lock ret 
  418355:	rol    ah,0x1d
  418358:	popf   
  418359:	sbb    DWORD PTR [eax+0x222fba67],edi
  41835f:	sub    al,dl
  418361:	adc    edx,DWORD PTR [ecx-0x68]
  418364:	sub    al,0x2
  418366:	stc    
  418367:	sbb    dl,ah
  418369:	jmp    0x70feaaf5
  41836e:	mov    ecx,0xf67c7466
  418373:	icebp  
  418374:	gs inc si
  418377:	in     al,0xc6
  418379:	xlat   BYTE PTR ds:[ebx]
  41837a:	rol    eax,cl
  41837c:	fdiv   st(1),st
  41837e:	inc    cl
  418380:	xchg   ebx,eax
  418381:	jne    0x4183b4
  418383:	retf   0xa74
  418386:	jmp    0x1b969e85
  41838b:	cmp    eax,0xc8af8cc6
  418390:	dec    esp
  418391:	out    0x46,al
  418393:	imul   esp,edi,0xffffff96
  418396:	xchg   ebp,eax
  418397:	jl     0x41838f
  418399:	lods   al,BYTE PTR ds:[esi]
  41839a:	cmp    al,0xd8
  41839c:	jl     0x41833a
  41839e:	dec    eax
  41839f:	sub    eax,0x6e52642f
  4183a4:	mov    bl,0x43
  4183a6:	adc    esp,DWORD PTR [ebx]
  4183a8:	jp     0x4183ef
  4183aa:	dec    ecx
  4183ab:	out    dx,eax
  4183ac:	inc    ecx
  4183ad:	rcl    BYTE PTR [ecx+0x6623199a],0xdf
  4183b4:	gs inc esi
  4183b6:	mov    ?,WORD PTR [edx-0x44]
  4183b9:	fstp   TBYTE PTR [esi+0x2c]
  4183bc:	xor    al,0x99
  4183be:	arpl   WORD PTR [esi],sp
  4183c0:	pushf  
  4183c1:	inc    ebx
  4183c2:	xchg   esi,eax
  4183c3:	cmp    eax,0xffebb562
  4183c8:	xlat   BYTE PTR ds:[ebx]
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	sbb    DWORD PTR [edi-0x54],0x77
  4183d1:	dec    esp
  4183d2:	xor    DWORD PTR [ecx],eax
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	clc    
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [ebx-0x5fd38bbd],cl
  4183df:	cmp    ah,ch
  4183e1:	sub    bh,BYTE PTR [ebp+edx*1-0x5d860738]
  4183e8:	out    dx,eax
  4183e9:	sbb    eax,0x2349a268
  4183ee:	push   eax
  4183ef:	jae    0x418463
  4183f1:	in     al,dx
  4183f2:	js     0x4183ab
  4183f4:	lock sbb DWORD PTR [eax],ecx
  4183f7:	cmp    al,0xa6
  4183f9:	mov    ebx,0xfbd398c3
  4183fe:	inc    esp
  4183ff:	push   ss
  418400:	dec    ebp
  418401:	cwde   
  418402:	outs   dx,DWORD PTR ds:[esi]
  418403:	push   esp
  418404:	outs   dx,DWORD PTR ds:[esi]
  418405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418406:	(bad)  
  418407:	out    0xe5,eax
  418409:	test   eax,0xe056e2dc
  41840e:	fistp  DWORD PTR fs:[esi+0x2677f7a]
  418415:	(bad)  
  418416:	pop    ss
  418417:	push   esi
  418418:	dec    ecx
  418419:	mov    al,ds:0x457842ab
  41841e:	add    BYTE PTR ds:0x7d877380,dh
  418424:	sbb    eax,DWORD PTR [ebx+0x38]
  418427:	jmp    0xfa6f:0xb4ede043
  41842e:	imul   ecx,DWORD PTR [ebp+0x1b],0x13
  418432:	leave  
  418433:	(bad)  
  418434:	dec    ebp
  418435:	xchg   esp,eax
  418436:	dec    edx
  418437:	mov    ah,0xab
  418439:	rcl    DWORD PTR [ecx-0x41],cl
  41843c:	int    0x80
  41843e:	or     eax,ebx
  418440:	dec    esi
  418441:	rol    DWORD PTR [edi-0x2de83eba],cl
  418447:	mov    bl,0x57
  418449:	push   edx
  41844a:	push   ds
  41844b:	mov    dh,BYTE PTR [edx+ecx*8+0x4c]
  41844f:	int3   
  418450:	pop    eax
  418451:	or     ecx,esp
  418453:	adc    eax,ebx
  418455:	xchg   edx,eax
  418456:	jmp    0x43536d73
  41845b:	ret    
  41845c:	loope  0x4184c9
  41845e:	cs sbb eax,0x78659515
  418464:	push   cs
  418465:	mov    ?,WORD PTR [edx+ebp*4+0x5d]
  418469:	jmp    DWORD PTR [eax]
  41846b:	stos   DWORD PTR es:[edi],eax
  41846c:	pop    es
  41846d:	adc    dl,ah
  41846f:	in     al,0xc0
  418471:	fdivr  QWORD PTR [edx+0x7f]
  418474:	repnz pop bp
  418477:	adc    BYTE PTR [edi-0x47],ch
  41847a:	neg    DWORD PTR [edi+esi*4]
  41847d:	jle    0x418422
  41847f:	jmp    0x9e09:0x364d9205
  418486:	stos   BYTE PTR es:[edi],al
  418487:	jno    0x41845f
  418489:	fiadd  DWORD PTR [ebx-0x43]
  41848c:	gs cmp bh,bh
  41848f:	mov    esp,0x720cfe47
  418494:	fsubr  DWORD PTR [ebp-0x742ff71a]
  41849a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41849b:	cmp    DWORD PTR [ecx],ebp
  41849d:	stos   BYTE PTR es:[edi],al
  41849e:	aaa    
  41849f:	add    dh,dl
  4184a1:	mov    bl,0x45
  4184a3:	sub    al,0x7e
  4184a5:	mov    ds:0xcd45a20d,al
  4184aa:	xchg   esp,eax
  4184ab:	mov    edi,0xb5b7d58c
  4184b0:	xor    DWORD PTR [ebp+ebx*8-0x73],0xffffffec
  4184b5:	jmp    0x4184e4
  4184b7:	int3   
  4184b8:	mov    ah,0x33
  4184ba:	mov    ds:0xb093388e,eax
  4184bf:	push   cs
  4184c0:	aas    
  4184c1:	sub    BYTE PTR [edi+eiz*1+0x3c06c470],ah
  4184c8:	pop    es
  4184c9:	repnz xchg esi,eax
  4184cb:	adc    eax,esp
  4184cd:	jecxz  0x418480
  4184cf:	(bad)  
  4184d0:	sahf   
  4184d1:	mov    ds:0xf856b044,al
  4184d6:	in     eax,0xed
  4184d8:	push   edi
  4184d9:	fs push cs
  4184db:	cmp    al,0x2
  4184dd:	stos   DWORD PTR es:[edi],eax
  4184de:	cdq    
  4184df:	(bad)  
  4184e0:	into   
  4184e1:	jbe    0x4184a1
  4184e3:	dec    eax
  4184e4:	xchg   esi,eax
  4184e5:	in     al,0x81
  4184e7:	push   ss
  4184e8:	cdq    
  4184e9:	jmp    0xcd80a177
  4184ee:	call   0x71fd2dc9
  4184f3:	push   ebp
  4184f4:	sar    BYTE PTR [eax+0x31400c22],1
  4184fa:	in     eax,0xd9
  4184fc:	mov    bl,0xd6
  4184fe:	mov    ah,0x37
  418500:	les    eax,FWORD PTR [edi]
  418502:	sti    
  418503:	mov    WORD PTR [esp+ecx*4+0xdfdfa19],es
  41850a:	inc    edi
  41850b:	sub    eax,0xc79d0587
  418510:	inc    ebp
  418511:	mov    ds:0xc6a3af9e,eax
  418516:	je     0x4184d1
  418518:	push   esi
  418519:	fdiv   QWORD PTR ss:[ebp+esi*1-0x323cc790]
  418521:	dec    esi
  418522:	mov    dh,0x5
  418524:	mov    edi,0x3f51e19d
  418529:	ds hlt 
  41852b:	mov    ds:0xce064442,eax
  418530:	jns    0x41853f
  418532:	data16 adc BYTE PTR [esi-0x6cfcfe2f],bl
  418539:	push   edx
  41853a:	jp     0x41859b
  41853c:	loope  0x4185ad
  41853e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853f:	inc    ebp
  418540:	ins    DWORD PTR es:[edi],dx
  418541:	sbb    ebp,esi
  418543:	mov    esi,0xe27db334
  418548:	add    BYTE PTR ds:0xc6012ed4,0x2d
  41854f:	push   0x633b43ce
  418554:	add    dh,BYTE PTR [ebx]
  418556:	pop    eax
  418557:	sub    ch,0xe
  41855a:	xlat   BYTE PTR ds:[ebx]
  41855b:	loopne 0x4184f5
  41855d:	sub    eax,0x52595a6d
  418562:	fnstenv [ebx]
  418564:	stos   DWORD PTR es:[edi],eax
  418565:	je     0x41855e
  418567:	(bad)  
  418568:	cmp    BYTE PTR [ecx-0x66],dh
  41856b:	mov    BYTE PTR [eax],bh
  41856d:	dec    bp
  41856f:	cli    
  418570:	inc    edx
  418571:	push   esi
  418572:	leave  
  418573:	push   eax
  418574:	loope  0x41859d
  418576:	(bad)  
  418577:	mov    bl,0xa0
  418579:	test   eax,0x29261651
  41857e:	cmp    BYTE PTR [ecx],dl
  418580:	rol    BYTE PTR [eax-0x11ff0ce6],0x93
  418587:	test   al,0x71
  418589:	lahf   
  41858a:	jmp    0x1cf9:0x3eaa144
  418591:	sbb    esp,DWORD PTR [eax]
  418593:	shl    bh,0x2e
  418596:	mov    edx,0x9da3c497
  41859b:	out    0xa4,eax
  41859d:	in     eax,0xf4
  41859f:	push   cs
  4185a0:	push   0x8af27cd0
  4185a5:	fld    TBYTE PTR [edx+0x64]
  4185a8:	sub    esp,DWORD PTR [eax]
  4185aa:	jb     0x4185f6
  4185ac:	add    bl,bl
  4185ae:	mov    al,0x75
  4185b0:	push   0x7e
  4185b2:	push   ss
  4185b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185b4:	adc    al,0x9a
  4185b6:	mov    esi,0x7c73fddd
  4185bb:	in     eax,dx
  4185bc:	add    ebx,DWORD PTR [edi-0x3a848c86]
  4185c2:	(bad)  
  4185c3:	pop    ecx
  4185c4:	js     0x41863d
  4185c6:	jp     0x4185cf
  4185c8:	add    al,0x41
  4185ca:	ja     0x4185f6
  4185cc:	pushf  
  4185cd:	mul    DWORD PTR [ebx-0x46e64200]
  4185d3:	test   eax,0x19b9ace0
  4185d8:	imul   esp,DWORD PTR [ebx],0xffffffa9
  4185db:	jp     0x41864f
  4185dd:	(bad)  
  4185de:	in     al,0x2c
  4185e0:	fcmovnu st,st(3)
  4185e2:	cs call 0xaf2fbb71
  4185e8:	mov    ecx,0x77c913f3
  4185ed:	mov    eax,ds:0x609733bf
  4185f2:	in     al,0xfa
  4185f4:	pop    ecx
  4185f5:	xchg   BYTE PTR [eax-0x26],cl
  4185f8:	jp     0x418586
  4185fa:	pop    ecx
  4185fb:	sub    dh,BYTE PTR [edi]
  4185fd:	sbb    BYTE PTR [ebx-0x4d055610],al
  418603:	sbb    ah,BYTE PTR [ecx+eiz*4-0x1026e6e4]
  41860a:	add    bl,BYTE PTR [edi+0x2e]
  41860d:	jnp    0x41861c
  41860f:	mov    ebp,0x3f11354f
  418614:	mov    al,ds:0x26252ee1
  418619:	dec    ecx
  41861a:	in     al,dx
  41861b:	and    al,0xc7
  41861d:	and    al,BYTE PTR [edi]
  41861f:	push   ebx
  418620:	jo     0x4185be
  418622:	inc    ebx
  418623:	fidiv  WORD PTR [eax-0x562a57a8]
  418629:	sti    
  41862a:	test   BYTE PTR [ecx],ch
  41862c:	jns    0x4185c1
  41862e:	pop    ds
  41862f:	stos   DWORD PTR es:[edi],eax
  418630:	call   0xcb82:0xbe44611
  418637:	neg    DWORD PTR [ebp+eiz*4-0x479888e1]
  41863e:	aam    0x92
  418640:	cmp    BYTE PTR [esi],ch
  418642:	mov    ah,0x42
  418644:	sti    
  418645:	cs cmp eax,0x7a0509a7
  41864b:	(bad)  
  41864c:	cmp    al,0xd3
  41864e:	xchg   BYTE PTR [eax+0x3c82696d],bl
  418654:	ja     0x41862a
  418656:	je     0x4186d2
  418658:	jae    0x4186d3
  41865a:	call   0x2990622c
  41865f:	mov    ds:0xed25a2f4,eax
  418664:	jle    0x41866c
  418666:	push   es
  418667:	out    dx,al
  418668:	inc    ecx
  418669:	and    DWORD PTR [eax+0x24f6a31b],esi
  41866f:	inc    BYTE PTR [ebp-0x6e]
  418672:	adc    ah,BYTE PTR [edx]
  418674:	test   WORD PTR [ecx+0x6a3afd2],bx
  41867b:	jnp    0x418661
  41867d:	xchg   edi,eax
  41867e:	xor    eax,0x57fe693e
  418683:	ss enter 0xa927,0xe0
  418688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418689:	mov    dl,0x73
  41868b:	xor    eax,0x2172e7d4
  418690:	and    al,BYTE PTR [ecx]
  418692:	xor    eax,0x1f5f21d6
  418697:	xchg   ebp,eax
  418698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418699:	in     al,0xae
  41869b:	xor    al,0x23
  41869d:	or     eax,0xf8b5932a
  4186a2:	rcr    DWORD PTR [ebx-0x6a1bc217],1
  4186a8:	outs   dx,DWORD PTR ds:[esi]
  4186a9:	fld    DWORD PTR ds:0x608053f8
  4186af:	xchg   ecx,eax
  4186b0:	mov    eax,0x9e1f6a42
  4186b5:	pminub mm4,QWORD PTR [eax+0xe789af0]
  4186bc:	imul   ecx,DWORD PTR [ebx+0x49],0xffffffe2
  4186c0:	aas    
  4186c1:	icebp  
  4186c2:	shl    dh,0xdd
  4186c5:	push   ds
  4186c6:	gs in  eax,0xc5
  4186c9:	mov    BYTE PTR ds:0xbffb7737,ah
  4186cf:	retf   
  4186d0:	sbb    BYTE PTR [esi+0x7a554e7a],cl
  4186d6:	stos   DWORD PTR es:[edi],eax
  4186d7:	mov    ds:0xbf93e60a,al
  4186dc:	outs   dx,DWORD PTR ds:[esi]
  4186dd:	(bad)  
  4186de:	imul   esp,DWORD PTR [ebx+0x2f52e6e0],0x1ef7ec30
  4186e8:	pop    edx
  4186e9:	mov    eax,ds:0xf3fb9b0f
  4186ee:	mov    dl,0x6d
  4186f0:	mov    dl,0xfb
  4186f2:	aad    0x9e
  4186f4:	mov    DWORD PTR [eax],edx
  4186f6:	repz out dx,al
  4186f8:	dec    esi
  4186f9:	adc    cl,bh
  4186fb:	fwait
  4186fc:	enter  0xf0ec,0xd
  418700:	mov    ecx,0x23bbd680
  418705:	inc    ebp
  418706:	ins    BYTE PTR es:[edi],dx
  418707:	ja     0x418724
  418709:	or     cl,BYTE PTR [esi+0x45]
  41870c:	xor    al,0x48
  41870e:	pop    ecx
  41870f:	add    ebx,DWORD PTR [ecx+0x44a32c5b]
  418715:	and    DWORD PTR [edi+eiz*8],ebp
  418718:	xor    al,0x34
  41871a:	sub    eax,0x98a727f8
  41871f:	cmc    
  418720:	mov    eax,ds:0x18e7ffd0
  418725:	jle    0x418720
  418727:	or     eax,0x4e486b80
  41872c:	(bad)  
  41872e:	or     BYTE PTR [ebx],cl
  418730:	addr16 xchg ecx,eax
  418732:	cmp    BYTE PTR [ebx+eax*2+0x2d],dh
  418736:	pop    eax
  418737:	(bad)  
  418738:	xchg   esi,eax
  418739:	mov    DWORD PTR [edi+0x35],edx
  41873c:	dec    eax
  41873d:	je     0x4187b0
  41873f:	fcmovnu st,st(6)
  418741:	pop    eax
  418742:	mov    ch,0xaf
  418744:	js     0x4186e0
  418746:	inc    ebx
  418747:	scas   al,BYTE PTR es:[edi]
  418748:	inc    edi
  418749:	or     al,0x47
  41874b:	add    DWORD PTR [edx-0x3f062502],eax
  418751:	loopne 0x418764
  418753:	inc    edx
  418754:	xchg   esi,eax
  418755:	xchg   esi,eax
  418756:	add    ch,ah
  418758:	rcr    BYTE PTR [ebx-0x30999535],1
  41875e:	std    
  41875f:	fsubr  QWORD PTR [edi+eiz*2+0x3d00c186]
  418766:	xlat   BYTE PTR ds:[ebx]
  418767:	pop    esi
  418768:	cwde   
  418769:	jno    0x41878e
  41876b:	pop    edx
  41876c:	mov    ebp,0xa46bb92e
  418771:	cs hlt 
  418773:	fsubr  st,st(3)
  418775:	adc    ah,BYTE PTR [ebx-0x3c]
  418778:	pop    ds
  418779:	jg     0x418786
  41877b:	pop    ecx
  41877c:	mov    ecx,0xf32b4ea2
  418781:	pop    ebx
  418782:	(bad)  
  418783:	cld    
  418784:	dec    ecx
  418785:	loopne 0x4187dd
  418787:	mov    edx,0xe7467586
  41878c:	daa    
  41878d:	add    eax,0x6a90ff36
  418792:	xchg   edx,eax
  418793:	ss int 0x26
  418796:	(bad)  
  418797:	mov    ecx,0x171894d1
  41879c:	shr    DWORD PTR [edx-0x34],cl
  41879f:	loop   0x418772
  4187a1:	(bad)  
  4187a2:	stc    
  4187a3:	dec    ebx
  4187a4:	lods   eax,DWORD PTR ds:[esi]
  4187a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a6:	sub    DWORD PTR [bp+di],eax
  4187a9:	jecxz  0x4187ec
  4187ab:	mov    cl,0x30
  4187ad:	cmp    esi,DWORD PTR [edx]
  4187af:	mov    ebx,0x5560a668
  4187b4:	push   ebx
  4187b5:	sbb    ch,BYTE PTR [esi-0x19]
  4187b8:	jne    0x41879b
  4187ba:	mov    ecx,eax
  4187bc:	enter  0xa196,0x6
  4187c0:	ss inc edx
  4187c2:	jge    0x418811
  4187c4:	data16 and al,0x9e
  4187c7:	clc    
  4187c8:	dec    edx
  4187c9:	daa    
  4187ca:	jae    0x418820
  4187cc:	cmp    al,0xa9
  4187ce:	mov    ebp,DWORD PTR [ebp-0x3f]
  4187d1:	out    dx,al
  4187d2:	mov    ecx,0x7dfd0f93
  4187d7:	fdiv   st(6),st
  4187d9:	fs in  al,dx
  4187db:	jne    0x41884e
  4187dd:	ret    0xe160
  4187e0:	mov    esi,0xe6bb47dc
  4187e5:	adc    BYTE PTR [ebx],bl
  4187e7:	clc    
  4187e8:	mov    ecx,0x9f5127f5
  4187ed:	sbb    esi,DWORD PTR [edx+0x3f9548c4]
  4187f3:	mov    edx,0xf5e026a8
  4187f8:	lock jge 0x418798
  4187fb:	mov    dh,0xff
  4187fd:	mov    dh,0xe4
  4187ff:	fdiv   QWORD PTR [edi+0x25]
  418802:	xchg   edx,eax
  418803:	adc    DWORD PTR [edx+0x4e],edx
  418806:	imul   ebx,DWORD PTR [edi+0x1a0875ee],0x515825a6
  418810:	out    dx,al
  418811:	iret   
  418812:	cdq    
  418813:	mov    cl,0x5b
  418815:	push   ss
  418816:	je     0x4187ed
  418818:	jge    0x41888f
  41881a:	repz add ah,BYTE PTR [ebp-0xb]
  41881e:	and    al,0x94
  418820:	sbb    al,0xcb
  418822:	retf   0x13c
  418825:	pop    edi
  418826:	jl     0x4187ef
  418828:	dec    di
  41882a:	pop    es
  41882b:	xor    DWORD PTR [ecx-0x23],ebp
  41882e:	stos   DWORD PTR es:[edi],eax
  41882f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418830:	sbb    al,0x4a
  418832:	or     ah,BYTE PTR [ecx-0x2d1bc1ad]
  418838:	ins    BYTE PTR es:[edi],dx
  418839:	and    eax,ebp
  41883b:	mov    ds:0x30a39051,al
  418840:	jmp    0xb0b131c6
  418845:	jo     0x4187df
  418847:	adc    esi,edi
  418849:	nop
  41884a:	or     eax,0xba80a69d
  41884f:	iret   
  418850:	mov    al,ds:0xf2e77af8
  418855:	sbb    BYTE PTR [edi-0x66],dl
  418858:	repz push 0xf9759cec
  41885e:	dec    esp
  41885f:	and    al,0xea
  418861:	or     al,0x39
  418863:	xchg   edx,eax
  418864:	xchg   ebx,eax
  418865:	aad    0xaf
  418867:	(bad)  
  418869:	xor    al,0x3
  41886b:	outs   dx,DWORD PTR ds:[esi]
  41886c:	pop    ds
  41886d:	das    
  41886e:	gs inc edx
  418870:	test   BYTE PTR [esi-0x69],bh
  418873:	outs   dx,BYTE PTR ds:[esi]
  418874:	out    0x84,al
  418876:	neg    BYTE PTR [edx]
  418878:	mov    ecx,0xbf5210b3
  41887d:	push   cs
  41887e:	repz rol BYTE PTR [edx+0x3a611a7],cl
  418885:	cdq    
  418886:	in     eax,0xc6
  418888:	cmp    dh,BYTE PTR [ecx+0x47]
  41888b:	xlat   BYTE PTR ds:[ebx]
  41888c:	xor    edi,eax
  41888e:	jo     0x41884f
  418890:	lods   al,BYTE PTR ds:[esi]
  418891:	pop    ds
  418892:	cmp    DWORD PTR ds:[edx+0x73b7070],0xe71b2d57
  41889d:	adc    DWORD PTR [edi+esi*4],esi
  4188a0:	sti    
  4188a1:	jle    0x418841
  4188a3:	and    eax,0x8497148
  4188a8:	ret    0xc979
  4188ab:	or     al,0x0
  4188ad:	and    DWORD PTR [esi+0x5328f0c6],0x4b
  4188b4:	fldenv [edi]
  4188b6:	out    0x34,al
  4188b8:	out    0x61,al
  4188ba:	out    dx,eax
  4188bb:	jg     0x4188ac
  4188bd:	cmp    BYTE PTR [ebp+0x3c203d1c],0x8a
  4188c4:	or     eax,0x744cd4ab
  4188c9:	adc    DWORD PTR [esi-0x2ced594c],eax
  4188cf:	lahf   
  4188d0:	aas    
  4188d1:	dec    ebp
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0x9c
  4188df:	fs mov cl,0x27
  4188e2:	sub    DWORD PTR [esi],eax
  4188e4:	add    DWORD PTR [eax],eax
  4188e6:	clc    
  4188e7:	add    al,0x0
  4188e9:	add    cl,dh
  4188eb:	cmp    eax,ecx
  4188ed:	stc    
  4188ee:	fld    DWORD PTR [ebx+0x62656f14]
  4188f4:	aad    0x7f
  4188f6:	push   ebp
  4188f7:	mov    bl,0x73
  4188f9:	rcr    DWORD PTR [ebx+0x45],cl
  4188fc:	lahf   
  4188fd:	div    DWORD PTR [ebx-0x34]
  418900:	pusha  
  418901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418902:	ret    0x347e
  418905:	mov    edi,0x1a2dc27f
  41890a:	in     al,0xea
  41890c:	push   ds
  41890d:	mov    edx,0x377b28d4
  418912:	sub    ch,BYTE PTR cs:[ebx+0x11]
  418916:	test   DWORD PTR [ebp-0x2ece8878],ebp
  41891c:	jnp    0x4188fe
  41891e:	mov    ds:0xcadc81f4,al
  418923:	inc    esi
  418924:	es jecxz 0x4188db
  418927:	mov    ebp,ebx
  418929:	or     BYTE PTR [ebp+0x72],ah
  41892c:	sbb    BYTE PTR [ebx-0x6ef67fe0],ch
  418932:	mov    al,ds:0x68ecc46a
  418937:	jmp    0xfcfe:0x550b92ef
  41893e:	pusha  
  41893f:	icebp  
  418940:	push   esi
  418941:	ins    BYTE PTR es:[edi],dx
  418942:	mov    al,ds:0xc94a65fe
  418947:	pop    eax
  418948:	(bad)  
  418949:	dec    ebp
  41894a:	xlat   BYTE PTR ds:[ebx]
  41894b:	sahf   
  41894c:	xchg   esi,eax
  41894d:	xchg   esp,eax
  41894e:	pop    ebx
  41894f:	sbb    ecx,0xffffffc5
  418952:	dec    edi
  418953:	out    0x6b,eax
  418955:	xchg   esp,eax
  418956:	and    ah,BYTE PTR [ebp+0x35]
  418959:	mov    eax,ds:0xc8c615e1
  41895e:	test   al,0xc9
  418960:	mov    esi,0x7802050a
  418965:	or     eax,0xfc8d6724
  41896a:	fs stos BYTE PTR es:[edi],al
  41896c:	sar    DWORD PTR [esi-0xd],cl
  41896f:	imul   ebx,DWORD PTR [eax+0x134f74e3],0xffffffbc
  418976:	mov    DWORD PTR [edx+0x1b446f4d],esp
  41897c:	xchg   ecx,eax
  41897d:	out    dx,al
  41897e:	sar    DWORD PTR [ebx+edi*4+0x73],1
  418982:	lock scas al,BYTE PTR es:[edi]
  418984:	push   es
  418985:	cwde   
  418986:	mov    DWORD PTR [ebx-0x2ff214f7],0x7b8c7bd6
  418990:	rcl    DWORD PTR [edi],cl
  418992:	jne    0x4189c0
  418994:	in     al,0xd9
  418996:	cwde   
  418997:	mov    ecx,0xc1d55ce4
  41899c:	jmp    0x901e:0x3679fe91
  4189a3:	pop    edi
  4189a4:	adc    DWORD PTR [edx+0x5b62eda8],esi
  4189aa:	fsub   st(4),st
  4189ac:	cmp    al,bh
  4189ae:	stc    
  4189af:	push   es
  4189b0:	push   ebp
  4189b1:	loop   0x41897b
  4189b3:	jae    0x4189b5
  4189b5:	jne    0x418a15
  4189b7:	mov    ebx,0x96a950ab
  4189bc:	aad    0x63
  4189be:	mov    eax,ds:0x9d29412a
  4189c3:	inc    ecx
  4189c4:	mov    al,0x6b
  4189c6:	pop    ebx
  4189c7:	adc    dl,ch
  4189c9:	and    al,0x60
  4189cb:	in     eax,0x5
  4189cd:	xlat   BYTE PTR ds:[ebx]
  4189ce:	repnz and esi,edi
  4189d1:	sub    ch,BYTE PTR [esi-0x2f8745f4]
  4189d7:	mov    cl,0x2
  4189d9:	das    
  4189da:	mov    esi,0x4cd5aa7b
  4189df:	in     eax,dx
  4189e0:	xor    eax,0x9f0a744f
  4189e5:	sub    al,0xeb
  4189e7:	sbb    eax,0xd8134465
  4189ec:	ja     0x4189d5
  4189ee:	or     al,dh
  4189f0:	test   al,0x61
  4189f2:	mov    bl,0x9e
  4189f4:	jb     0x418996
  4189f6:	popa   
  4189f7:	std    
  4189f8:	pushf  
  4189f9:	jle    0x418a02
  4189fb:	dec    ecx
  4189fc:	cdq    
  4189fd:	imul   edi,DWORD PTR [eax],0x360f4816
  418a03:	cli    
  418a04:	jbe    0x418a60
  418a06:	nop
  418a07:	or     ebx,DWORD PTR [eax-0x59]
  418a0a:	dec    ebp
  418a0b:	mov    ds:0x7232c38c,al
  418a10:	add    eax,0x3f847261
  418a15:	xor    eax,0x920332c
  418a1a:	mov    ecx,0xcdb4d901
  418a1f:	jno    0x418a79
  418a21:	sub    DWORD PTR [ebx-0xa],ebp
  418a24:	or     al,0x9a
  418a26:	push   ds
  418a27:	outs   dx,BYTE PTR ds:[esi]
  418a28:	ins    DWORD PTR es:[edi],dx
  418a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a2a:	dec    ecx
  418a2b:	aam    0x75
  418a2d:	inc    edx
  418a2e:	rcr    DWORD PTR [edi-0x7f],0xa
  418a32:	mov    dl,BYTE PTR [ebx+0x6b]
  418a35:	push   ebp
  418a36:	jno    0x418aa0
  418a38:	inc    esp
  418a39:	sub    eax,0x824ec88e
  418a3e:	adc    BYTE PTR [esi+edx*1-0x7e8ef005],dl
  418a45:	and    ch,cl
  418a47:	xor    BYTE PTR [ebp+0x62],bl
  418a4a:	ins    BYTE PTR es:[edi],dx
  418a4b:	mov    ecx,0xcee17c8c
  418a50:	fild   DWORD PTR [edx+0x48296fa7]
  418a56:	sbb    ebp,DWORD PTR [edi+0x16]
  418a59:	popf   
  418a5a:	xor    DWORD PTR [esi+0x4b],esp
  418a5d:	cmp    al,0x98
  418a5f:	mov    ds:0x3a720bc9,al
  418a64:	arpl   WORD PTR [ebx-0xeb388dc],si
  418a6a:	xchg   ecx,eax
  418a6b:	adc    eax,0xf5f3a4ba
  418a70:	cdq    
  418a71:	scas   al,BYTE PTR es:[edi]
  418a72:	inc    esi
  418a73:	or     BYTE PTR [edx],0xb0
  418a76:	xchg   esi,eax
  418a77:	jbe    0x418a85
  418a79:	inc    ebx
  418a7a:	ds dec esp
  418a7c:	outs   dx,BYTE PTR ds:[esi]
  418a7d:	push   ss
  418a7e:	jns    0x418a08
  418a80:	mov    ebp,0xcb20724f
  418a85:	icebp  
  418a86:	dec    edi
  418a87:	dec    ecx
  418a88:	sbb    ebx,DWORD PTR ds:0x73e2aee4
  418a8e:	ret    
  418a8f:	push   ebp
  418a90:	adc    eax,0xb9454414
  418a95:	mov    edx,0x382e0aa1
  418a9a:	fdiv   QWORD PTR [esi]
  418a9c:	rcr    BYTE PTR [esi],1
  418a9e:	xor    DWORD PTR [edi+0x6077b3a9],ebp
  418aa4:	in     al,dx
  418aa5:	or     eax,0x8400629a
  418aaa:	das    
  418aab:	cmp    eax,0x9a2a8e65
  418ab0:	fadd   QWORD PTR [edx+0x61]
  418ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab5:	pusha  
  418ab6:	inc    ebx
  418ab7:	dec    ecx
  418ab8:	cmp    esp,ebx
  418aba:	in     al,dx
  418abb:	retf   0x2952
  418abe:	(bad)  
  418abf:	fld    TBYTE PTR [esi+ecx*2+0xd]
  418ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ac4:	jne    0x418abd
  418ac6:	test   eax,0xde87411c
  418acb:	push   ecx
  418acc:	in     al,0xa4
  418ace:	jo     0x418b41
  418ad0:	jle    0x418b30
  418ad2:	mov    ah,0x57
  418ad4:	retf   0xb097
  418ad7:	fiadd  WORD PTR [edx-0x1a]
  418ada:	adc    BYTE PTR [edi-0x5143ee7a],al
  418ae0:	xchg   esp,eax
  418ae1:	mov    bh,0x96
  418ae3:	stos   BYTE PTR es:[edi],al
  418ae4:	addr16 pop esp
  418ae6:	mov    ah,0x5d
  418ae8:	and    eax,0x6d714098
  418aed:	punpckhbw mm2,QWORD PTR [esi+0x6e]
  418af1:	xchg   esi,eax
  418af2:	ss xchg ebp,eax
  418af4:	pop    ecx
  418af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418af6:	mov    ebx,0x85292de1
  418afb:	fbld   TBYTE PTR [ecx+0x28]
  418afe:	mov    eax,edi
  418b00:	sub    eax,0x15ad4840
  418b05:	cmp    BYTE PTR [ebp+0x3],0x4d
  418b09:	out    0x60,al
  418b0b:	loopne 0x418b82
  418b0d:	data16 cmp cl,BYTE PTR es:[ecx-0x7]
  418b12:	daa    
  418b13:	push   0x2e1ae22f
  418b18:	lahf   
  418b19:	xchg   esi,eax
  418b1a:	sbb    ch,BYTE PTR [esi-0x78a2373a]
  418b20:	gs dec ebx
  418b22:	cmp    DWORD PTR [edx+0x4b],esp
  418b25:	mov    ds:0xb846c830,eax
  418b2a:	in     eax,0xec
  418b2c:	fisub  WORD PTR [edi+0x3c3e7077]
  418b32:	sub    ebx,ecx
  418b34:	pop    es
  418b35:	test   eax,0x6a5e6dc4
  418b3a:	jmp    0x954ec97a
  418b3f:	adc    ch,BYTE PTR [edx-0x48]
  418b42:	xchg   ebx,eax
  418b43:	xor    BYTE PTR [edi],0xb2
  418b46:	adc    al,0x75
  418b48:	pop    ebp
  418b49:	push   eax
  418b4a:	pushf  
  418b4b:	test   eax,0x7f4c98db
  418b50:	js     0x418b43
  418b52:	add    ch,BYTE PTR [ebp-0x7da2846c]
  418b58:	ret    
  418b59:	inc    edx
  418b5a:	add    bh,BYTE PTR [edi+ebx*4+0x7ab152da]
  418b61:	stos   DWORD PTR es:[edi],eax
  418b62:	fisub  DWORD PTR [edi+eax*1+0x368a877d]
  418b69:	imul   ecx,DWORD PTR [esi+eax*1],0xffffffc7
  418b6d:	and    cl,BYTE PTR [ebp+0x18]
  418b70:	or     eax,0xe6466d1b
  418b75:	xor    ah,BYTE PTR [ecx-0x5b]
  418b78:	cdq    
  418b79:	imul   esi,eax,0xffffffc5
  418b7c:	adc    ah,al
  418b7e:	loope  0x418be5
  418b80:	repz ds sti 
  418b83:	mov    ds:0x12c8652a,eax
  418b88:	sbb    eax,0x99f45c3f
  418b8d:	ds (bad) 
  418b8f:	mov    ds:0x939a1e65,eax
  418b94:	mov    bh,0x67
  418b96:	lock lahf 
  418b98:	mov    ebp,0x753a3b6e
  418b9d:	and    DWORD PTR [ebp-0x3f],ebp
  418ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba1:	mov    eax,ds:0x113d9cf5
  418ba6:	scas   al,BYTE PTR es:[edi]
  418ba7:	data16 addr16 mov al,ds:0xe71c
  418bac:	int3   
  418bad:	mov    WORD PTR [edx-0x40768d5f],ds
  418bb3:	jmp    0x471f289a
  418bb8:	(bad)  
  418bb9:	jecxz  0x418c0e
  418bbb:	jae    0x418b8d
  418bbd:	in     eax,dx
  418bbe:	pop    DWORD PTR [ebx+0x4707e590]
  418bc4:	push   es
  418bc5:	jge    0x418b73
  418bc7:	daa    
  418bc8:	pop    ebp
  418bc9:	jbe    0x418ba6
  418bcb:	(bad)  
  418bcc:	enter  0x1f76,0xc9
  418bd0:	ds jmp 0x5d3:0x5689b521
  418bd8:	or     eax,0xc70171a9
  418bdd:	pop    edx
  418bde:	mov    ch,0x67
  418be0:	es xchg edx,eax
  418be2:	test   BYTE PTR [edi+0x50ac4c70],dl
  418be8:	inc    edx
  418be9:	(bad)  
  418beb:	(bad)  
  418bec:	xchg   DWORD PTR [ebx+0x46b066d7],eax
  418bf2:	pusha  
  418bf3:	sbb    bh,BYTE PTR [edx+0x5cbb038d]
  418bf9:	cli    
  418bfa:	sti    
  418bfb:	mov    esp,0x74042c6d
  418c00:	fcomip st,st(2)
  418c02:	mov    al,ds:0x7412a9da
  418c07:	mov    edx,0x9d72c39c
  418c0c:	pop    esi
  418c0d:	push   ecx
  418c0e:	jl     0x418c3c
  418c10:	loope  0x418bb3
  418c12:	mov    al,0x60
  418c14:	sbb    al,0x44
  418c16:	pop    es
  418c17:	in     al,dx
  418c18:	pop    ecx
  418c19:	pushf  
  418c1a:	(bad)  
  418c1b:	sbb    cl,bl
  418c1d:	jmp    0xd248e1b
  418c22:	or     BYTE PTR [ecx-0x131c5ce3],dh
  418c28:	mov    ebx,0x52e7b24f
  418c2d:	cmc    
  418c2e:	aaa    
  418c2f:	stc    
  418c30:	and    al,0xd4
  418c32:	pop    ebx
  418c33:	jbe    0x418c86
  418c35:	loopne 0x418bc0
  418c37:	fist   DWORD PTR [esi+0x40]
  418c3a:	xlat   BYTE PTR ds:[ebx]
  418c3b:	push   cs
  418c3c:	aaa    
  418c3d:	mov    fs,WORD PTR [ebp+0x1b]
  418c40:	jmp    0x5aee:0xd1f8fa6b
  418c47:	stc    
  418c48:	outs   dx,BYTE PTR ds:[esi]
  418c49:	xchg   esp,eax
  418c4a:	mov    ds,ebx
  418c4c:	inc    esi
  418c4d:	cmp    al,0x7
  418c4f:	not    DWORD PTR [eax+esi*1+0x48]
  418c53:	xor    DWORD PTR [ecx+0x22],0x812f4005
  418c5a:	mov    ecx,0x8beeb4d7
  418c5f:	fs daa 
  418c61:	xchg   esi,eax
  418c62:	push   ss
  418c63:	ror    BYTE PTR [esi-0x3ab1a5c1],0xcb
  418c6a:	mov    edx,0x22daa1da
  418c6f:	lods   eax,DWORD PTR ds:[esi]
  418c70:	inc    edx
  418c71:	mov    edx,0x6f528e57
  418c76:	aam    0x30
  418c78:	adc    ebx,DWORD PTR [edx]
  418c7a:	lods   eax,DWORD PTR ds:[esi]
  418c7b:	mov    ch,bh
  418c7d:	and    BYTE PTR [edx],0x93
  418c80:	xor    DWORD PTR [esp+esi*1+0x45],edx
  418c84:	xor    al,0x27
  418c86:	xor    eax,0x2df88139
  418c8b:	jg     0x418ce3
  418c8d:	push   0x18
  418c8f:	jne    0x418c1b
  418c91:	enter  0x288a,0x75
  418c95:	xchg   ebp,eax
  418c96:	cli    
  418c97:	fldcw  WORD PTR [ecx-0x20d0c99]
  418c9d:	mov    WORD PTR [edx+0x4a],?
  418ca0:	fcmovu st,st(5)
  418ca2:	pushf  
  418ca3:	dec    eax
  418ca4:	iret   
  418ca5:	push   0xffffffc2
  418ca7:	and    BYTE PTR [ebx-0x2a18195d],0x7
  418cae:	cmp    eax,DWORD PTR [esi+eax*4+0x32]
  418cb2:	enter  0x94dc,0x26
  418cb6:	dec    ebx
  418cb7:	outs   dx,BYTE PTR ds:[esi]
  418cb8:	inc    edi
  418cb9:	mov    eax,0x82f8dd3d
  418cbe:	pushf  
  418cbf:	mov    WORD PTR [edx+0x28],ds
  418cc2:	push   esp
  418cc3:	inc    ebp
  418cc4:	aam    0x12
  418cc6:	dec    ecx
  418cc7:	cmp    BYTE PTR [esi-0x14],dh
  418cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ccb:	mov    es,WORD PTR [edi-0x17]
  418cce:	(bad)  
  418ccf:	and    ah,BYTE PTR [ecx]
  418cd1:	in     al,0x26
  418cd3:	jnp    0x418cf0
  418cd5:	and    eax,0xd880786a
  418cda:	bound  ebp,QWORD PTR [esp+ecx*4-0xf]
  418cde:	(bad)  
  418cdf:	cmc    
  418ce0:	ins    BYTE PTR es:[edi],dx
  418ce1:	sub    BYTE PTR [edi-0x20],dl
  418ce4:	loop   0x418c9b
  418ce6:	shl    DWORD PTR [ebp-0x5],1
  418ce9:	int    0xc5
  418ceb:	into   
  418cec:	repnz shl BYTE PTR [eax+0x152ca56f],cl
  418cf3:	and    BYTE PTR [edx+eiz*4+0x9],0xf6
  418cf8:	cdq    
  418cf9:	sti    
  418cfa:	or     eax,0x41d94d0f
  418cff:	pop    es
  418d00:	mov    es,WORD PTR [eax-0x46f285fe]
  418d06:	cli    
  418d07:	push   edx
  418d08:	jns    0x418d68
  418d0a:	jne    0x418cec
  418d0c:	ss leave 
  418d0e:	dec    edi
  418d0f:	pop    es
  418d10:	aaa    
  418d11:	sar    eax,1
  418d13:	push   ss
  418d14:	pslld  mm7,QWORD PTR [edi-0x1b]
  418d18:	push   ds
  418d19:	leave  
  418d1a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d1c:	rcr    DWORD PTR [eax],1
  418d1e:	push   esp
  418d1f:	and    ebx,ecx
  418d21:	add    cl,dh
  418d23:	mov    edi,0x7562449e
  418d28:	xchg   ebx,eax
  418d29:	mov    bl,ch
  418d2b:	es xor eax,0x79583640
  418d31:	out    dx,al
  418d32:	(bad)  
  418d33:	and    bl,BYTE PTR [edi+0xca2bfff]
  418d39:	and    BYTE PTR [edx-0x6e033d6c],0xad
  418d40:	jg     0x418ce5
  418d42:	pop    ss
  418d43:	mov    al,0x14
  418d45:	inc    ebx
  418d46:	aad    0x44
  418d48:	enter  0xa368,0xd9
  418d4c:	pop    ebx
  418d4d:	retf   0x792c
  418d50:	dec    edx
  418d51:	xchg   ecx,eax
  418d52:	add    ecx,eax
  418d54:	sbb    al,0x11
  418d56:	icebp  
  418d57:	inc    edi
  418d58:	out    dx,eax
  418d59:	jnp    0x418d08
  418d5b:	pusha  
  418d5c:	arpl   WORD PTR ds:0x646359e6,di
  418d62:	jmp    0x3748:0x88bee133
  418d69:	jnp    0x418d6f
  418d6b:	gs clc 
  418d6d:	pusha  
  418d6e:	inc    esi
  418d6f:	push   0x3f1d3df0
  418d74:	xor    eax,0xe69ae97f
  418d79:	pop    edi
  418d7a:	adc    edi,DWORD PTR [edi-0x51]
  418d7d:	test   eax,0x8984e031
  418d82:	daa    
  418d83:	mov    cs,WORD PTR [edi]
  418d85:	and    eax,0xe296bc2a
  418d8a:	mov    al,ds:0x9ba81fa9
  418d8f:	(bad)
  418d93:	or     bl,BYTE PTR [ecx-0x38]
  418d96:	sbb    eax,0x8422ea9b
  418d9b:	mov    esi,DWORD PTR [ebx]
  418d9d:	push   ds
  418d9e:	clc    
  418d9f:	mov    es,WORD PTR [ebx+0x39520797]
  418da5:	mov    al,ds:0xcb1f4bdf
  418daa:	and    al,0x62
  418dac:	nop
  418dad:	add    al,0x14
  418daf:	adc    al,0xec
  418db1:	call   0x286bba70
  418db6:	sbb    eax,0x1433b312
  418dbb:	sub    BYTE PTR [ecx+0x7d3c0d82],ah
  418dc1:	inc    ebp
  418dc2:	aad    0x5a
  418dc4:	xchg   DWORD PTR [eax+0x34f7a53f],ebx
  418dca:	lods   eax,DWORD PTR ds:[esi]
  418dcb:	push   ecx
  418dcc:	jp     0x418e0e
  418dce:	daa    
  418dcf:	js     0x418da7
  418dd1:	mov    ch,0x67
  418dd3:	add    DWORD PTR [ecx],ebx
  418dd5:	imul   ecx,edi,0x8ad5ce1f
  418ddb:	lea    eax,[edi+0x2c]
  418dde:	dec    ebp
  418ddf:	sub    BYTE PTR [ebx+0x6a57b250],bh
  418de5:	leave  
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x66cb2898
  418df2:	and    DWORD PTR [ebx],ecx
  418df4:	add    DWORD PTR [eax],eax
  418df6:	clc    
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [edx+0x6b],dl
  418dfc:	loopne 0x418dd4
  418dfe:	mov    esp,0x77bd4c92
  418e03:	cdq    
  418e04:	add    ch,bh
  418e06:	ins    BYTE PTR es:[edi],dx
  418e07:	(bad)  
  418e08:	xchg   ebp,eax
  418e09:	mov    ds:0x68b30642,eax
  418e0e:	mov    ebp,0xdef9f128
  418e13:	scas   eax,DWORD PTR es:[edi]
  418e14:	push   ebx
  418e15:	mov    ds:0x9d8676d3,al
  418e1a:	bound  esp,QWORD PTR [eax]
  418e1c:	push   DWORD PTR [ecx-0x1ed4df07]
  418e22:	scas   al,BYTE PTR es:[edi]
  418e23:	and    DWORD PTR [ebp-0x52],ecx
  418e26:	clc    
  418e27:	test   eax,0x87e48955
  418e2c:	test   BYTE PTR [esi+0x16cb2172],ah
  418e32:	lea    ebx,fs:[esp+ebx*2+0x4526e183]
  418e3a:	jb     0x418ded
  418e3c:	or     eax,0xe6da9723
  418e41:	daa    
  418e42:	sbb    bh,BYTE PTR [eax-0x186af83a]
  418e48:	cmp    al,BYTE PTR [edi+0x55f16c20]
  418e4e:	jl     0x418e3e
  418e50:	retf   
  418e51:	inc    eax
  418e52:	xchg   edi,eax
  418e53:	inc    esi
  418e54:	mov    ebp,0x487e28dc
  418e59:	fcomp  DWORD PTR [ebp+0x3d6b7b84]
  418e5f:	mov    eax,0x61906c
  418e64:	fst    st(3)
  418e66:	pop    edi
  418e67:	push   0x2f28ad1e
  418e6c:	retf   0x976
  418e6f:	push   ebp
  418e70:	xor    al,0x15
  418e72:	adc    cl,bh
  418e74:	lahf   
  418e75:	iret   
  418e76:	add    DWORD PTR [edx+0x75],eax
  418e79:	dec    esi
  418e7a:	clc    
  418e7b:	pushf  
  418e7c:	in     al,dx
  418e7d:	cmp    BYTE PTR [eax],ch
  418e7f:	aas    
  418e80:	outs   dx,BYTE PTR ds:[esi]
  418e81:	mov    ebp,esi
  418e83:	inc    edi
  418e84:	sub    dl,BYTE PTR [ebx-0x2d]
  418e87:	sahf   
  418e88:	int3   
  418e89:	jno    0x418e0c
  418e8b:	xchg   ebp,eax
  418e8c:	ret    
  418e8d:	dec    esp
  418e8e:	mov    ch,0xcc
  418e90:	cwde   
  418e91:	mov    al,ds:0x9fd8f77
  418e96:	dec    ecx
  418e97:	scas   eax,DWORD PTR es:[edi]
  418e98:	lahf   
  418e99:	scas   al,BYTE PTR es:[edi]
  418e9a:	(bad)  
  418e9b:	popa   
  418e9c:	bound  edx,QWORD PTR [edi+0x44cc8321]
  418ea2:	(bad)  [ebx]
  418ea4:	clc    
  418ea5:	stc    
  418ea6:	(bad)  
  418ea7:	cdq    
  418ea8:	int3   
  418ea9:	pop    ds
  418eaa:	mov    ebp,DWORD PTR [esi+0x24ea25fe]
  418eb0:	or     ah,BYTE PTR [edi-0x1c]
  418eb3:	sub    eax,DWORD PTR [edi+0x77]
  418eb6:	cmp    edx,ebx
  418eb8:	aam    0x0
  418eba:	lds    edi,FWORD PTR [ecx-0x34]
  418ebd:	cmp    BYTE PTR [eax+edx*4],cl
  418ec0:	jmp    0x98fae178
  418ec5:	arpl   WORD PTR [ebx+0x7f],bp
  418ec8:	ror    BYTE PTR [ebp+esi*2+0x490b8999],cl
  418ecf:	jmp    0x52565342
  418ed4:	jg     0x418e64
  418ed6:	mov    ah,0x63
  418ed8:	jmp    0xc79094e0
  418edd:	adc    esi,DWORD PTR [edi+0x36]
  418ee0:	mov    al,ds:0xba9e9895
  418ee5:	add    ch,ch
  418ee7:	pop    ds
  418ee8:	xchg   edx,eax
  418ee9:	push   ds
  418eea:	adc    al,cl
  418eec:	push   ecx
  418eed:	hlt    
  418eee:	or     DWORD PTR [ebx-0x7dcd5def],0xffffffdd
  418ef5:	popa   
  418ef6:	bound  esp,QWORD PTR [ebx]
  418ef8:	not    BYTE PTR [ebp-0x5e]
  418efb:	test   eax,0x6cdd900e
  418f00:	arpl   WORD PTR [eax-0x3018d849],bp
  418f06:	push   cs
  418f07:	xor    DWORD PTR [ebp+0x60],esi
  418f0a:	icebp  
  418f0b:	jnp    0x418ed3
  418f0d:	push   esi
  418f0e:	cmp    ebx,ecx
  418f10:	loop   0x418f8c
  418f12:	call   0x678c2e91
  418f17:	dec    esi
  418f18:	mov    BYTE PTR [ebx-0x7b],ch
  418f1b:	pop    ds
  418f1c:	mov    esi,DWORD PTR [ebp+eiz*1-0x20]
  418f20:	fs inc edx
  418f22:	into   
  418f23:	push   ecx
  418f24:	dec    ecx
  418f25:	lds    ebx,FWORD PTR [edx]
  418f27:	add    edi,DWORD PTR [edx-0x6c]
  418f2a:	gs inc edx
  418f2c:	dec    ebp
  418f2d:	mov    bh,0x3c
  418f2f:	lds    ebp,FWORD PTR [esi+eax*2+0x6a370bf8]
  418f36:	arpl   WORD PTR [esi-0x40539c3b],di
  418f3c:	mov    bl,0xb5
  418f3e:	cmp    eax,0xd4144710
  418f43:	sub    al,BYTE PTR [ebx]
  418f45:	out    dx,eax
  418f46:	push   es
  418f47:	pushf  
  418f48:	and    BYTE PTR [esi-0x11],0xb2
  418f4c:	inc    ebp
  418f4d:	(bad)  
  418f4f:	dec    edx
  418f50:	adc    BYTE PTR [eax+0x30f45332],cl
  418f56:	add    WORD PTR [edx+0x504ee3eb],bp
  418f5d:	mov    dl,0x6a
  418f5f:	push   edx
  418f60:	and    ecx,ebx
  418f62:	test   BYTE PTR [ecx],dl
  418f64:	pop    esp
  418f65:	shl    DWORD PTR [ecx-0x4f],cl
  418f68:	add    al,0xd8
  418f6a:	sahf   
  418f6b:	cmp    dh,BYTE PTR [ebp+0x7a]
  418f6e:	mov    ch,0x92
  418f70:	sub    eax,0xf787d6e1
  418f75:	fs push 0x20
  418f78:	jno    0x418f35
  418f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f7b:	ss inc eax
  418f7d:	test   DWORD PTR [ebp-0x73],esi
  418f80:	imul   ebx
  418f82:	pop    ebx
  418f83:	sbb    al,0x4e
  418f85:	inc    esp
  418f86:	push   edx
  418f87:	popf   
  418f88:	scas   al,BYTE PTR es:[edi]
  418f89:	fidiv  DWORD PTR ds:[ecx+0x57bb62c8]
  418f90:	add    al,0x60
  418f92:	aas    
  418f93:	ss pop es
  418f95:	call   0x3323:0x460af9da
  418f9c:	das    
  418f9d:	icebp  
  418f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f9f:	pop    edi
  418fa0:	gs enter 0x5c24,0x23
  418fa5:	outs   dx,BYTE PTR ds:[esi]
  418fa6:	les    edx,FWORD PTR ds:0x5cf43791
  418fac:	rcr    bl,1
  418fae:	(bad)  
  418faf:	push   esp
  418fb0:	cs jecxz 0x418f7b
  418fb3:	int    0x3e
  418fb5:	sahf   
  418fb6:	shl    DWORD PTR [ecx],cl
  418fb8:	push   es
  418fb9:	add    eax,0x303fe09f
  418fbe:	mov    ah,0xaa
  418fc0:	xor    ecx,DWORD PTR [ebx+edx*8+0x1d]
  418fc4:	sub    ebp,ebx
  418fc6:	xor    eax,0x4a454919
  418fcb:	xlat   BYTE PTR ds:[ebx]
  418fcc:	(bad)  
  418fcd:	(bad)  
  418fce:	cwde   
  418fcf:	pop    edx
  418fd0:	or     eax,0x9fa01a0f
  418fd5:	lods   al,BYTE PTR ds:[esi]
  418fd6:	(bad)  
  418fd7:	aad    0x74
  418fd9:	mov    dl,0xc0
  418fdb:	int3   
  418fdc:	ins    BYTE PTR es:[edi],dx
  418fdd:	sbb    al,0x5
  418fdf:	jle    0x418fca
  418fe1:	xor    eax,0xda3af363
  418fe6:	out    0x4c,eax
  418fe8:	adc    eax,0x355d5f3d
  418fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fee:	and    al,0xe8
  418ff0:	inc    esi
  418ff1:	ret    
  418ff2:	adc    DWORD PTR [edi],esi
  418ff4:	(bad)  
  418ff5:	out    0x6c,eax
  418ff7:	sbb    BYTE PTR [ecx-0x276754fb],ah
  418ffd:	inc    esp
  418ffe:	js     0x418fa5
  419000:	out    dx,al
  419001:	fcmovbe st,st(3)
  419003:	out    0x35,al
  419005:	leave  
  419006:	out    0x70,al
  419008:	mov    dh,0xf7
  41900a:	dec    edx
  41900b:	inc    edi
  41900c:	popa   
  41900d:	dec    esp
  41900e:	push   0xfffffff9
  419010:	mov    WORD PTR [ecx],fs
  419012:	mov    ch,BYTE PTR [edx+0x7bad0f4c]
  419018:	add    ebx,DWORD PTR [esi+0x1f1a7d4d]
  41901e:	sub    DWORD PTR [ebx],esp
  419020:	jle    0x418fcf
  419022:	icebp  
  419023:	lods   al,BYTE PTR ds:[esi]
  419024:	stos   BYTE PTR es:[edi],al
  419025:	sub    ebp,DWORD PTR [edx]
  419027:	fidivr WORD PTR [edx+ebx*8]
  41902a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41902b:	or     BYTE PTR [ebx],dh
  41902d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41902e:	push   esi
  41902f:	icebp  
  419030:	ret    
  419031:	and    eax,0xdd06a615
  419036:	fdivrp st(6),st
  419038:	lods   al,BYTE PTR ds:[esi]
  419039:	stc    
  41903a:	push   ebx
  41903b:	dec    eax
  41903c:	jl     0x418ff2
  41903e:	pop    edx
  41903f:	jb     0x419045
  419041:	xchg   DWORD PTR [ebx+0x4c6d2ed4],ebp
  419047:	xor    edi,esi
  419049:	daa    
  41904a:	stos   DWORD PTR es:[edi],eax
  41904b:	inc    esp
  41904c:	in     al,0x7d
  41904e:	in     al,0x17
  419050:	or     eax,0xf7d78c74
  419055:	mov    al,ds:0x3225e5a3
  41905a:	jg     0x4190c6
  41905c:	jno    0x419055
  41905e:	aad    0xa5
  419060:	push   ebx
  419061:	lock loopne 0x419009
  419064:	adc    DWORD PTR [edx+0x35],eax
  419067:	sbb    eax,0xc6c3a0e8
  41906c:	jle    0x4190be
  41906e:	int3   
  41906f:	dec    eax
  419070:	lea    ecx,[edx+0x62]
  419073:	xchg   ecx,eax
  419074:	mov    BYTE PTR [eax],0xe2
  419077:	ins    DWORD PTR es:[edi],dx
  419078:	xor    eax,0x1388e896
  41907d:	sub    eax,0x360800b2
  419082:	mov    edx,ds
  419084:	xchg   ebx,eax
  419085:	xchg   edx,eax
  419086:	cmp    eax,0xd4af2410
  41908b:	inc    esp
  41908d:	fwait
  41908e:	dec    esi
  41908f:	rol    BYTE PTR [ebx+0x5169d676],0x2c
  419096:	out    dx,eax
  419097:	push   edx
  419098:	in     al,dx
  419099:	cld    
  41909a:	stc    
  41909b:	std    
  41909c:	adc    BYTE PTR [edi-0x5bd2fab1],dl
  4190a2:	add    bh,BYTE PTR ds:[ebx]
  4190a5:	mov    DWORD PTR [ecx-0x1e],edx
  4190a8:	out    0xc5,al
  4190aa:	enter  0xaac4,0xda
  4190ae:	(bad)  
  4190b0:	leave  
  4190b1:	jmp    0x41905a
  4190b3:	js     0x419116
  4190b5:	jbe    0x41906b
  4190b7:	cmp    eax,0x49800a85
  4190bc:	pop    es
  4190bd:	test   al,0x9d
  4190bf:	jb     0x41905a
  4190c1:	out    dx,eax
  4190c2:	push   edi
  4190c3:	or     eax,DWORD PTR [eax-0x2f]
  4190c6:	test   BYTE PTR [eax+0x6b],dh
  4190c9:	lods   al,BYTE PTR ds:[esi]
  4190ca:	call   0xb87cc3cf
  4190cf:	xchg   esi,eax
  4190d0:	dec    ecx
  4190d1:	inc    eax
  4190d2:	jl     0x4190eb
  4190d4:	add    dl,BYTE PTR [ebx+0x56]
  4190d7:	or     esp,eax
  4190d9:	jns    0x419118
  4190db:	jns    0x41907c
  4190dd:	push   ebx
  4190de:	xchg   BYTE PTR [ebx-0x748cfe89],al
  4190e4:	xchg   ebx,eax
  4190e5:	iret   
  4190e6:	jmp    0x108a:0xbdb36de1
  4190ed:	or     cl,dh
  4190ef:	mov    edi,0x17a944a8
  4190f4:	mov    dh,0x90
  4190f6:	mov    al,0x43
  4190f8:	or     DWORD PTR [eax+0x14],ebp
  4190fb:	or     dh,BYTE PTR ds:0xb017b31c
  419101:	aad    0x15
  419103:	pop    edi
  419104:	fisub  DWORD PTR [ebx]
  419106:	rcl    DWORD PTR [ebx-0x7cbaa9d8],1
  41910c:	fstp   TBYTE PTR [eax+0x3007be06]
  419112:	or     al,0xe2
  419114:	shl    BYTE PTR [ebx],0x2
  419117:	mov    ebp,DWORD PTR [esi+0x1a]
  41911a:	stos   BYTE PTR es:[edi],al
  41911b:	stos   DWORD PTR es:[edi],eax
  41911c:	pusha  
  41911d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911e:	jmp    0x4ea2287b
  419123:	inc    eax
  419124:	sar    cl,1
  419126:	jmp    0x4190db
  419128:	adc    DWORD PTR [eax-0x30],esi
  41912b:	lods   al,BYTE PTR ds:[esi]
  41912c:	fwait
  41912d:	push   ss
  41912e:	push   ebx
  41912f:	add    ebp,DWORD PTR [edi-0x574c33ce]
  419135:	cld    
  419136:	mov    al,0x92
  419138:	jnp    0x419181
  41913a:	dec    ecx
  41913b:	mul    BYTE PTR [ebx]
  41913d:	mov    edi,0xdfe1b79d
  419142:	push   edx
  419143:	aad    0x7a
  419145:	popf   
  419146:	and    eax,0x40d479ef
  41914b:	mov    edi,0x907b8f
  419150:	cmp    DWORD PTR [ecx],eax
  419152:	stos   BYTE PTR es:[edi],al
  419153:	fistp  WORD PTR [edx]
  419155:	ret    
  419156:	and    bh,BYTE PTR [edi+0x1e]
  419159:	adc    BYTE PTR [ebx-0x33],dh
  41915c:	test   al,0xfb
  41915e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41915f:	push   esp
  419160:	lea    ecx,[edi]
  419162:	or     edx,DWORD PTR [esi]
  419164:	addr16 push ss
  419166:	aas    
  419167:	mov    dl,0x4b
  419169:	mov    ?,WORD PTR [ebp+0x2479dede]
  41916f:	xor    esp,eax
  419171:	outs   dx,BYTE PTR ds:[esi]
  419172:	mov    ah,0x7a
  419174:	sbb    al,0x43
  419176:	mov    eax,ds:0x8f5bfcc8
  41917b:	enter  0x2b45,0xf8
  41917f:	pop    ss
  419180:	dec    eax
  419181:	jmp    0x3260fa5e
  419186:	adc    BYTE PTR [edx+0x52],0x74
  41918a:	ror    ecx,cl
  41918c:	mov    eax,ds:0x959ecec6
  419191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419192:	in     al,0x3d
  419194:	push   0xffffffc7
  419196:	ror    DWORD PTR [ebx+esi*2],1
  419199:	sti    
  41919a:	pop    ecx
  41919b:	int3   
  41919c:	inc    edx
  41919d:	add    eax,eax
  41919f:	mov    dh,0xe8
  4191a1:	push   cs
  4191a2:	aaa    
  4191a3:	(bad)  
  4191a4:	lea    esi,[ecx+0x4a]
  4191a7:	out    0xea,eax
  4191a9:	and    al,al
  4191ab:	jo     0x4191e9
  4191ad:	sbb    edx,DWORD PTR [eax]
  4191af:	loopne 0x4191f9
  4191b1:	jp     0x419133
  4191b3:	sahf   
  4191b4:	push   0x4b97831c
  4191b9:	or     ebp,DWORD PTR [ebx]
  4191bb:	test   DWORD PTR ds:0x29cf12a8,0xbc3ca34f
  4191c5:	sahf   
  4191c6:	and    BYTE PTR [esi-0x7a],dl
  4191c9:	xor    BYTE PTR [esi],dh
  4191cb:	adc    ecx,edx
  4191cd:	icebp  
  4191ce:	jmp    0x9d19096f
  4191d3:	pop    ebx
  4191d4:	push   esp
  4191d5:	mov    esi,0xb4c0d07
  4191da:	(bad)  
  4191db:	pop    eax
  4191dc:	pop    edx
  4191dd:	fidiv  WORD PTR [edx]
  4191df:	div    BYTE PTR ds:0xc73c77e2
  4191e5:	mov    ebx,0xb9b66df1
  4191ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191eb:	jmp    0x5502e79e
  4191f0:	pop    edx
  4191f1:	inc    ebx
  4191f2:	sti    
  4191f3:	adc    eax,0xf827386e
  4191f8:	gs cmp al,0xc8
  4191fb:	lods   eax,DWORD PTR ds:[esi]
  4191fc:	add    esi,esp
  4191fe:	mov    ebx,0x257a1764
  419203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419204:	addr16 pop esi
  419206:	mov    edx,0xea211282
  41920b:	mov    ds:0xdc34e27,eax
  419210:	hlt    
  419211:	push   ebp
  419212:	push   ebp
  419213:	adc    DWORD PTR [ebp+esi*8-0x37f60cae],edi
  41921a:	test   DWORD PTR [eax],edx
  41921c:	ins    DWORD PTR es:[edi],dx
  41921d:	lods   eax,DWORD PTR ds:[esi]
  41921e:	xchg   ecx,eax
  41921f:	add    edx,esp
  419221:	fmul   QWORD PTR [eax+0x53ba4dfa]
  419227:	ret    
  419228:	fcom   QWORD PTR [edx+0x2137755b]
  41922e:	aad    0x81
  419230:	(bad)  
  419231:	popa   
  419232:	jecxz  0x4192a6
  419234:	sub    esp,DWORD PTR [ebx]
  419236:	pop    ebp
  419237:	ja     0x4191c4
  419239:	mov    edx,0xd9f2c9d8
  41923e:	iret   
  41923f:	or     ah,BYTE PTR [edx-0x10]
  419242:	fsubr  st,st(2)
  419244:	jmp    0x4192b0
  419246:	xor    edx,ebx
  419248:	dec    esp
  419249:	inc    ecx
  41924a:	test   BYTE PTR [ecx],al
  41924c:	jne    0x4191d3
  41924e:	xor    ebp,ebp
  419250:	sbb    al,BYTE PTR [ebx]
  419252:	cmc    
  419253:	add    al,0x45
  419255:	push   ss
  419256:	fst    QWORD PTR [eax+0x7f]
  419259:	pop    ds
  41925a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41925b:	jmp    0xc1a2:0xfe342a24
  419262:	aad    0x5c
  419264:	xor    ebx,DWORD PTR es:[ebx]
  419267:	sbb    eax,0x3cb07c26
  41926c:	aam    0xd5
  41926e:	xor    ebp,esi
  419270:	add    cl,BYTE PTR [ebx-0x426c0ab1]
  419276:	sub    eax,0x89725264
  41927b:	ds ret 0xcfd0
  41927f:	fwait
  419280:	pop    ds
  419281:	lds    ebx,FWORD PTR [ebx+0x3ecbe8b1]
  419287:	dec    edi
  419288:	ins    BYTE PTR es:[edi],dx
  419289:	ins    BYTE PTR es:[edi],dx
  41928a:	dec    ebx
  41928b:	cld    
  41928c:	pop    ebp
  41928d:	mov    cl,0x21
  41928f:	arpl   WORD PTR [ebp-0x778d277f],cx
  419295:	push   cs
  419296:	jge    0x4192b5
  419298:	addr16 mov cl,0x4
  41929b:	test   eax,0xf64c8e6e
  4192a0:	xchg   ecx,eax
  4192a1:	xchg   ecx,eax
  4192a2:	(bad)  
  4192a3:	out    dx,eax
  4192a4:	dec    edi
  4192a5:	dec    ebp
  4192a6:	adc    DWORD PTR [ecx-0x37],ecx
  4192a9:	and    edx,DWORD PTR [edx]
  4192ab:	enter  0x89d8,0xfc
  4192af:	cli    
  4192b0:	jbe    0x419321
  4192b2:	arpl   cx,dx
  4192b4:	rol    DWORD PTR [ebx+eax*1-0xca078c5],1
  4192bb:	or     eax,0xde148894
  4192c0:	call   FWORD PTR [eax+0x6]
  4192c3:	js     0x419313
  4192c5:	cmp    DWORD PTR [eax],eax
  4192c7:	in     eax,0x1
  4192c9:	pop    ebx
  4192ca:	aad    0x26
  4192cc:	adc    dl,dh
  4192ce:	mov    ebp,0xdd1913f3
  4192d3:	gs mov dh,0xdb
  4192d6:	int    0x6a
  4192d8:	adc    eax,ecx
  4192da:	pop    ds
  4192db:	add    al,0xd3
  4192dd:	xchg   esp,eax
  4192de:	push   eax
  4192df:	adc    al,0x12
  4192e1:	or     al,0x80
  4192e3:	fisttp QWORD PTR [ecx+edx*1+0x1]
  4192e7:	mov    ebx,0xebbd3eb0
  4192ec:	jg     0x419314
  4192ee:	xor    cl,BYTE PTR [edi+0xe457611]
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x6d145d81
  419300:	fnsave [eax+0x19]
  419303:	adc    BYTE PTR [ecx],al
  419305:	add    al,bh
  419307:	add    al,0x0
  419309:	add    BYTE PTR ds:0xbf660bfd,ah
  41930f:	or     ch,BYTE PTR [ebp-0x2930fc9]
  419315:	push   edx
  419316:	ret    
  419317:	inc    edi
  419318:	ins    DWORD PTR es:[edi],dx
  419319:	mov    dl,0x71
  41931b:	repnz div BYTE PTR [edi-0x3e]
  41931f:	mov    ah,bh
  419321:	push   ss
  419322:	adc    DWORD PTR [eax],ecx
  419324:	inc    esp
  419325:	xchg   edi,eax
  419326:	shl    esp,0xc
  419329:	xchg   ecx,eax
  41932a:	daa    
  41932b:	lods   al,BYTE PTR ds:[esi]
  41932c:	out    0x28,eax
  41932e:	sbb    ah,BYTE PTR [eax-0x14341960]
  419334:	sub    ch,ah
  419336:	jge    0x419379
  419338:	ds in  al,0xac
  41933b:	push   ss
  41933c:	or     al,0x12
  41933e:	scas   eax,DWORD PTR es:[edi]
  41933f:	inc    edi
  419340:	cld    
  419341:	cli    
  419342:	cs jbe 0x41936b
  419345:	add    esi,DWORD PTR [ebp+0x504a3091]
  41934b:	popa   
  41934c:	xor    dl,BYTE PTR [ebp+ebx*8+0x7585106f]
  419353:	jg     0x41936b
  419355:	adc    BYTE PTR [eax+eax*8],ah
  419358:	out    dx,eax
  419359:	fnstcw WORD PTR [ebp+0x5beef34f]
  41935f:	retf   0x651c
  419362:	into   
  419363:	adc    BYTE PTR [ebx+ebx*4-0x80],ch
  419367:	pop    ecx
  419368:	or     eax,0xf44c388c
  41936d:	imul   esi,DWORD PTR [ebp-0x153e8e6],0xfffffff5
  419374:	data16 mov dh,BYTE PTR [ecx-0x39]
  419378:	popa   
  419379:	push   es
  41937a:	out    0x7b,eax
  41937c:	sub    al,0x81
  41937e:	xchg   ecx,eax
  41937f:	jno    0x419357
  419381:	scas   al,BYTE PTR es:[edi]
  419382:	pop    edx
  419383:	inc    esp
  419384:	adc    BYTE PTR [eax+ecx*2],cl
  419387:	scas   eax,DWORD PTR es:[edi]
  419388:	leave  
  419389:	adc    BYTE PTR [ecx+ebx*8+0x2c7d045c],bl
  419390:	outs   dx,BYTE PTR ds:[esi]
  419391:	fisttp DWORD PTR [ebp+0x4565d278]
  419397:	or     al,0x4b
  419399:	std    
  41939a:	fcmovu st,st(0)
  41939c:	or     esi,DWORD PTR [ecx]
  41939e:	fmul   st(6),st
  4193a0:	push   ebx
  4193a1:	mov    ebp,ecx
  4193a3:	int3   
  4193a4:	inc    edx
  4193a5:	test   eax,0x5e6bd1f5
  4193aa:	loop   0x41938c
  4193ac:	test   al,0xd4
  4193ae:	movlps QWORD PTR [edx-0x5fe7520f],xmm4
  4193b5:	mov    ds:0x6cddbbe1,al
  4193ba:	shr    DWORD PTR [eax+0x2d76e5a4],0x34
  4193c1:	sbb    DWORD PTR ds:0xde2f8a4b,ebp
  4193c7:	stos   DWORD PTR es:[edi],eax
  4193c8:	aas    
  4193c9:	(bad)  
  4193ca:	cli    
  4193cb:	adc    al,0xe3
  4193cd:	fdiv   st,st(1)
  4193cf:	pop    esi
  4193d0:	lds    ecx,FWORD PTR [esi+0x66]
  4193d3:	pop    ss
  4193d4:	jo     0x4193e0
  4193d6:	fsubr  DWORD PTR [esi+0x4b9567d3]
  4193dc:	test   al,0x53
  4193de:	pop    ecx
  4193df:	xchg   ecx,eax
  4193e0:	mov    dl,0x3d
  4193e2:	push   ds
  4193e3:	lods   al,BYTE PTR ds:[esi]
  4193e4:	test   eax,ebx
  4193e6:	pop    ss
  4193e7:	retf   
  4193e8:	xchg   edi,edx
  4193ea:	adc    al,0xe6
  4193ec:	sbb    dh,dh
  4193ee:	push   0x6f
  4193f0:	sbb    ch,BYTE PTR [ebx-0x623ddac4]
  4193f6:	pop    esp
  4193f7:	(bad)  
  4193f8:	pusha  
  4193f9:	sbb    esp,DWORD PTR [ebp+edx*2+0x53]
  4193fd:	pusha  
  4193fe:	push   ebx
  4193ff:	xor    DWORD PTR [esi+eax*1-0x33349d28],esp
  419406:	dec    edx
  419407:	test   BYTE PTR [ebx-0x6aede80c],bl
  41940d:	and    al,0xb4
  41940f:	push   ss
  419410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419411:	cmp    DWORD PTR [eax],0x6167a65d
  419417:	(bad)  
  419418:	nop
  419419:	jns    0x4193b6
  41941b:	jmp    0x419475
  41941d:	enter  0x1654,0x50
  419421:	xchg   esi,eax
  419422:	push   cs
  419423:	and    al,0xbc
  419425:	mov    DWORD PTR [esi-0x65],esp
  419428:	loop   0x41940e
  41942a:	pop    ss
  41942b:	rol    BYTE PTR [ecx+0x542cdb06],cl
  419431:	hlt    
  419432:	jne    0x4194ae
  419434:	adc    DWORD PTR [ecx],ebp
  419436:	xor    DWORD PTR fs:[esi+0x5d],ebp
  41943a:	sbb    eax,0x39ad5acb
  41943f:	jns    0x419418
  419441:	dec    ebx
  419442:	xor    eax,0xa7e75fd2
  419447:	mov    ah,0xab
  419449:	lods   eax,DWORD PTR ds:[esi]
  41944a:	cmp    al,0x5c
  41944c:	fldenv [ebx+0x6109c005]
  419452:	dec    edi
  419453:	mov    cl,BYTE PTR [edx-0x14]
  419456:	add    bh,ch
  419458:	or     DWORD PTR [esi+0x65],0x3e3b45e8
  41945f:	outs   dx,BYTE PTR ds:[esi]
  419460:	inc    esp
  419461:	shl    BYTE PTR [edx+0x56fb621d],0xaa
  419468:	clc    
  419469:	mov    ebp,0x19d24d44
  41946e:	sbb    bh,BYTE PTR [ecx]
  419470:	test   bl,0xf4
  419473:	cdq    
  419474:	adc    BYTE PTR [esi-0x25],0xcf
  419478:	call   0x79a8c46e
  41947d:	adc    al,0xb9
  41947f:	pop    edi
  419480:	cs mov eax,0xe004d155
  419486:	bound  esi,QWORD PTR [ecx-0xe699607]
  41948c:	ins    DWORD PTR es:[edi],dx
  41948d:	jno    0x419457
  41948f:	xor    BYTE PTR [esi-0x76],dl
  419492:	mov    bh,0x3d
  419494:	jecxz  0x419421
  419496:	data16 mov cl,dl
  419499:	sub    eax,0x4ebb4a73
  41949e:	mov    edx,ebp
  4194a0:	cwde   
  4194a1:	xor    DWORD PTR [esi-0x1170423b],eax
  4194a7:	mov    BYTE PTR [edi+ecx*2],0x26
  4194ab:	xor    esi,DWORD PTR [ecx-0x3f]
  4194ae:	imul   eax,DWORD PTR [esi],0xb0d4dfb6
  4194b4:	ja     0x419524
  4194b6:	in     al,dx
  4194b7:	push   eax
  4194b8:	stos   BYTE PTR es:[edi],al
  4194b9:	not    bl
  4194bb:	out    0x9a,eax
  4194bd:	adc    bh,dl
  4194bf:	or     al,0xe1
  4194c1:	iret   
  4194c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c3:	inc    ebx
  4194c4:	out    dx,al
  4194c5:	(bad)  
  4194c6:	fnstsw WORD PTR [edi]
  4194c8:	mov    ebp,0xf22aca35
  4194cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194ce:	clc    
  4194cf:	cmp    al,0xbe
  4194d1:	(bad)  [edx]
  4194d3:	ret    0x26db
  4194d6:	loop   0x4194ef
  4194d8:	sbb    eax,0x6ac40aa3
  4194dd:	push   ebp
  4194de:	mov    DWORD PTR [ebx+0x66],edi
  4194e1:	mov    eax,ds:0x156fc7bb
  4194e6:	repz pop eax
  4194e8:	add    ebx,DWORD PTR [eax]
  4194ea:	and    ah,BYTE PTR [esi+0x4c439c39]
  4194f0:	jg     0x419494
  4194f2:	fisubr WORD PTR [ebp+0x3bd043e1]
  4194f8:	mov    al,ds:0xae42aaf0
  4194fd:	(bad)  
  4194fe:	sub    edx,DWORD PTR [eax-0x19]
  419501:	jg     0x419579
  419503:	mov    esi,0x2751edcc
  419508:	mov    cl,0xfd
  41950a:	ins    BYTE PTR es:[edi],dx
  41950b:	shl    BYTE PTR [ecx],0x81
  41950e:	xchg   esp,eax
  41950f:	(bad)  
  419510:	repnz xlat BYTE PTR ds:[ebx]
  419512:	and    esp,DWORD PTR [eax+0xa687cf2]
  419518:	outs   dx,DWORD PTR ds:[esi]
  419519:	(bad)  
  41951a:	xchg   edx,eax
  41951b:	or     bh,bl
  41951d:	xor    al,0x86
  41951f:	adc    DWORD PTR [edx-0x5e65e437],esp
  419525:	fs enter 0x2b44,0x82
  41952a:	or     eax,0x832296a
  41952f:	je     0x41953b
  419531:	lea    edi,[ebx+0x12]
  419534:	test   BYTE PTR [ebp+0x7d],al
  419537:	lahf   
  419538:	mov    esi,DWORD PTR [edx]
  41953a:	xchg   edx,eax
  41953b:	pop    esi
  41953c:	sub    al,0x9e
  41953e:	pop    eax
  41953f:	mov    edi,0x7eeabef9
  419544:	xchg   esi,eax
  419545:	push   esp
  419546:	pop    ecx
  419547:	imul   edi,DWORD PTR [edx-0x2ff9c5b3],0x4b
  41954e:	push   eax
  41954f:	xor    eax,DWORD PTR [ecx+0x66]
  419552:	cmp    ebp,DWORD PTR [eax+ebp*1+0x22b3096e]
  419559:	stc    
  41955a:	gs jo  0x4194f9
  41955d:	imul   esi,DWORD PTR [edx+0x4b],0x7808430e
  419564:	in     al,0x29
  419566:	(bad)  
  419567:	imul   ebp,DWORD PTR [eax+0x46],0x7b
  41956b:	out    dx,eax
  41956c:	push   ss
  41956d:	jae    0x41951a
  41956f:	bound  ebx,QWORD PTR [edi]
  419571:	hlt    
  419572:	jl     0x4195ca
  419574:	add    DWORD PTR [ebx+eiz*1+0x24],0x65586083
  41957c:	xchg   ecx,eax
  41957d:	xchg   edx,eax
  41957e:	addr16 push cs
  419580:	data16 arpl WORD PTR ds:0x231b6bb8,dx
  419587:	sub    DWORD PTR [ebp+ebp*2+0xc],ecx
  41958b:	(bad)  
  41958c:	out    dx,al
  41958d:	jae    0x4195e5
  41958f:	xchg   dl,bl
  419591:	push   ds
  419592:	cli    
  419593:	bound  edx,QWORD PTR [ecx]
  419595:	ja     0x4195f9
  419597:	xchg   edi,eax
  419598:	test   eax,0x741a052e
  41959d:	mov    bl,0x62
  41959f:	fstp   DWORD PTR [edx]
  4195a1:	xchg   edi,eax
  4195a2:	das    
  4195a3:	(bad)  
  4195a4:	(bad)  
  4195a5:	push   ss
  4195a6:	in     eax,dx
  4195a7:	clc    
  4195a8:	(bad)  
  4195a9:	mov    bl,0xc9
  4195ab:	add    esp,DWORD PTR [eax]
  4195ad:	icebp  
  4195ae:	mov    ch,0xfe
  4195b0:	test   ax,0x405c
  4195b4:	mov    dh,0x56
  4195b6:	sahf   
  4195b7:	cmp    ecx,DWORD PTR [ecx+0x54]
  4195ba:	stos   BYTE PTR es:[edi],al
  4195bb:	retf   
  4195bc:	xchg   BYTE PTR [esi+0x18f8bcc4],cl
  4195c2:	push   ecx
  4195c3:	scas   eax,DWORD PTR es:[edi]
  4195c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195c5:	iret   
  4195c6:	sub    eax,0xa838ec5c
  4195cb:	xlat   BYTE PTR ds:[ebx]
  4195cc:	push   esi
  4195cd:	out    0x78,al
  4195cf:	mov    cl,0xed
  4195d1:	inc    esp
  4195d2:	cmp    al,0x43
  4195d4:	cmc    
  4195d5:	aaa    
  4195d6:	push   edx
  4195d7:	mov    dl,dh
  4195d9:	inc    ecx
  4195da:	mov    ecx,0xfa18017e
  4195df:	dec    ebx
  4195e0:	out    dx,eax
  4195e1:	xchg   edx,eax
  4195e2:	xchg   ebp,eax
  4195e3:	aam    0x17
  4195e5:	push   0x19
  4195e7:	retf   
  4195e8:	cld    
  4195e9:	and    edi,ecx
  4195eb:	dec    ebx
  4195ec:	pop    ss
  4195ed:	and    eax,0x7cc3940e
  4195f2:	and    al,0xd5
  4195f4:	enter  0x27e6,0xd4
  4195f8:	dec    eax
  4195f9:	repz cmp DWORD PTR [esi+0x475de37f],0x74ff83cb
  419604:	dec    esi
  419605:	icebp  
  419606:	adc    BYTE PTR [edx+0x746539db],0xfb
  41960d:	adc    al,0x30
  41960f:	or     DWORD PTR [eax-0xc],esp
  419612:	out    0xd7,al
  419614:	es xchg esp,eax
  419616:	mov    al,BYTE PTR [edi-0xcc37d08]
  41961c:	pusha  
  41961d:	out    dx,eax
  41961e:	aas    
  41961f:	adc    DWORD PTR [edx-0x6e5175c6],esi
  419625:	mov    al,0xb5
  419627:	add    esp,DWORD PTR [esi]
  419629:	ror    DWORD PTR [ebp+ecx*4-0xe],1
  41962d:	aad    0x92
  41962f:	bound  ebx,QWORD PTR [eax]
  419631:	das    
  419632:	inc    ebp
  419633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419634:	xchg   esi,eax
  419635:	fcmovu st,st(2)
  419637:	rol    DWORD PTR [edi+0xc],cl
  41963a:	and    ecx,DWORD PTR [edx]
  41963c:	lock inc edx
  41963e:	mov    bl,0xbe
  419640:	jmp    0x419649
  419642:	ret    0xd4e7
  419645:	fnstcw WORD PTR [di]
  419648:	call   0x3f33:0x2f59ae2e
  41964f:	xchg   BYTE PTR [ebx-0x42],ah
  419652:	push   0x927c6e3
  419657:	pop    ds
  419658:	xchg   esi,eax
  419659:	pop    es
  41965a:	lds    ecx,FWORD PTR [edx]
  41965c:	xor    eax,0xb1bb915e
  419661:	lock push esi
  419663:	pop    ebx
  419664:	sub    DWORD PTR [edi],esi
  419666:	rcl    edi,0x32
  419669:	dec    ebp
  41966a:	enter  0x1312,0x57
  41966e:	jecxz  0x4196c3
  419670:	push   ds
  419671:	mov    BYTE PTR [ecx],bl
  419673:	int3   
  419674:	psubw  mm3,QWORD PTR fs:[esi-0x35c1f867]
  41967c:	inc    ebx
  41967d:	test   eax,eax
  41967f:	xchg   ebx,eax
  419680:	leave  
  419681:	ins    DWORD PTR es:[edi],dx
  419682:	cmp    edi,DWORD PTR [edi]
  419684:	cmc    
  419685:	ja     0x419668
  419687:	adc    dl,dh
  419689:	dec    edi
  41968a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968b:	loope  0x4196ee
  41968d:	les    ecx,FWORD PTR [esi]
  41968f:	or     edx,DWORD PTR [eax]
  419691:	mov    ds:0x9b45d0a9,al
  419696:	dec    edx
  419697:	ret    0xfbb7
  41969a:	dec    edi
  41969b:	inc    edx
  41969c:	push   ebp
  41969d:	mov    WORD PTR [ebx+0x47b848f5],?
  4196a3:	adc    eax,0xe79dec1b
  4196a8:	leave  
  4196a9:	mov    BYTE PTR [ebx+0x443dcec1],cl
  4196af:	lss    si,DWORD PTR [ebp-0x2ca5e09d]
  4196b7:	cmp    al,0xe2
  4196b9:	dec    ebx
  4196ba:	call   0x939a81d1
  4196bf:	sub    al,BYTE PTR [eax]
  4196c1:	test   bh,al
  4196c3:	adc    bl,al
  4196c5:	mov    ebx,ebx
  4196c7:	stc    
  4196c8:	jae    0x4196b9
  4196ca:	or     ch,BYTE PTR [eax-0x5c08a8cc]
  4196d0:	mov    ebx,0x1c09b3b0
  4196d5:	stos   DWORD PTR es:[edi],eax
  4196d6:	add    al,0xc3
  4196d8:	ja     0x4196cd
  4196da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196db:	xchg   ebx,ebx
  4196dd:	pop    ebp
  4196de:	mov    esp,0x155b631c
  4196e3:	addr16 jne 0x41968e
  4196e6:	ret    0x2309
  4196e9:	out    dx,al
  4196ea:	aad    0x9a
  4196ec:	xlat   BYTE PTR ds:[ebx]
  4196ed:	jp     0x4196e4
  4196ef:	mov    al,ds:0xc08cb069
  4196f4:	inc    eax
  4196f5:	std    
  4196f6:	rcl    DWORD PTR [ecx-0x36],0xb7
  4196fa:	dec    bx
  4196fc:	sbb    BYTE PTR [ebx+eiz*4+0x11],bh
  419700:	mov    bh,0x1a
  419702:	fist   WORD PTR [esi-0x2d16d5fe]
  419708:	fmul   QWORD PTR [ebx+0x4f4ed183]
  41970e:	mov    ?,WORD PTR [edx]
  419710:	push   edi
  419711:	pop    edi
  419712:	icebp  
  419713:	mov    ebp,0xea9405d2
  419718:	cmp    BYTE PTR [ebx+0x2304e095],ch
  41971e:	or     al,0x3b
  419720:	push   0xc462b88e
  419725:	dec    ebp
  419726:	fsub   QWORD PTR [eax-0x17c13a55]
  41972c:	jne    0x419741
  41972e:	mov    esi,0x9df2a74
  419733:	call   0x7dd723b3
  419738:	repnz cs aaa 
  41973b:	jmp    0x8d44:0x6859ce15
  419742:	pop    ebp
  419743:	clc    
  419744:	mov    WORD PTR [edx+ecx*4],ds
  419747:	dec    esi
  419748:	jo     0x4197a4
  41974a:	data16 jb 0x41976d
  41974d:	xchg   edi,eax
  41974e:	or     dh,BYTE PTR [eax+0x9]
  419751:	std    
  419752:	out    0x43,eax
  419754:	sbb    eax,0x92389345
  419759:	ins    BYTE PTR es:[edi],dx
  41975a:	dec    esi
  41975b:	mov    al,0xd8
  41975d:	inc    eax
  41975e:	jg     0x4196fc
  419760:	or     DWORD PTR [esi+0x30dacf72],esp
  419766:	sub    eax,0x4887297b
  41976b:	and    eax,0x98887be2
  419770:	aad    0xae
  419772:	push   DWORD PTR [ecx+ebp*8+0x3]
  419776:	out    0xc3,al
  419778:	adc    ebx,DWORD PTR [ebx-0x68]
  41977b:	and    bh,BYTE PTR [edx-0x2404c229]
  419781:	retf   
  419782:	dec    ecx
  419783:	gs call 0xab3ec7e5
  419789:	leave  
  41978a:	pop    ds
  41978b:	loope  0x4197de
  41978d:	pusha  
  41978e:	xchg   esp,eax
  41978f:	fsubr  QWORD PTR [esi+0x7]
  419792:	pusha  
  419793:	jne    0x41975b
  419795:	inc    ecx
  419796:	push   edx
  419797:	inc    ebx
  419798:	and    eax,0xa5e95145
  41979d:	in     al,dx
  41979e:	adc    al,0xe
  4197a0:	aaa    
  4197a1:	adc    DWORD PTR [ecx+ebp*8],esi
  4197a4:	lahf   
  4197a5:	jp     0x4197bb
  4197a7:	rep lods eax,DWORD PTR ds:[esi]
  4197a9:	(bad)  [edx-0x39]
  4197ac:	adc    DWORD PTR [eax],0xb6cc130
  4197b2:	imul   edx,DWORD PTR [edi],0x176f1e8d
  4197b8:	sub    DWORD PTR [edi+0x33],0x5c
  4197bc:	add    cl,BYTE PTR ds:0x9fdcba63
  4197c2:	adc    edi,eax
  4197c4:	or     ebp,0xffffffdb
  4197c7:	ret    0x34d4
  4197ca:	and    al,0x5d
  4197cc:	lea    ebx,[edi]
  4197ce:	inc    ebp
  4197cf:	pop    es
  4197d0:	inc    edx
  4197d1:	pop    edx
  4197d2:	add    eax,ebx
  4197d4:	gs xchg edi,eax
  4197d6:	inc    edi
  4197d7:	and    BYTE PTR ds:0x51278ba9,dh
  4197dd:	inc    edx
  4197de:	jne    0x419831
  4197e0:	push   ebp
  4197e1:	jle    0x41980e
  4197e3:	ret    0x4fdd
  4197e6:	jae    0x419832
  4197e8:	sub    al,0x62
  4197ea:	dec    esp
  4197eb:	cld    
  4197ec:	mov    ds:0x46f25bac,eax
  4197f1:	mov    fs,WORD PTR [eax+edi*8+0x548a02c9]
  4197f8:	(bad)  
  4197f9:	jnp    0x419837
  4197fb:	pop    esi
  4197fc:	punpckhwd mm6,mm3
  4197ff:	sbb    cl,dl
  419801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	ror    BYTE PTR [ebx+0x61],1
  419810:	inc    edx
  419811:	rcl    BYTE PTR [ecx],cl
  419813:	adc    eax,0x4f80001
  419818:	add    BYTE PTR [eax],al
  41981a:	jecxz  0x419812
  41981c:	ror    al,0xb5
  41981f:	scas   al,BYTE PTR es:[edi]
  419820:	mov    al,ds:0x96c1eb45
  419825:	call   0xf86b:0x1dd1a1b8
  41982c:	scas   al,BYTE PTR es:[edi]
  41982d:	aas    
  41982e:	pmulhw mm5,QWORD PTR [ecx-0x36a6ab54]
  419835:	(bad)  
  419836:	jmp    0x4197f0
  419838:	ror    BYTE PTR [esi+0x3ea3d64c],1
  41983e:	mov    cl,0xce
  419840:	sbb    BYTE PTR [ebx],0x25
  419843:	xchg   ecx,eax
  419844:	inc    eax
  419845:	xor    eax,0xb27287fc
  41984a:	xchg   edx,eax
  41984b:	sti    
  41984c:	jo     0x419898
  41984e:	mov    ch,0x9b
  419850:	pushf  
  419851:	mov    edx,0x4eabb052
  419856:	or     eax,0x9c86c972
  41985b:	cmp    eax,0x32965c90
  419860:	(bad)  
  419861:	mov    ebp,0x6d04bf08
  419866:	les    eax,FWORD PTR ds:[edi]
  419869:	hlt    
  41986a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41986b:	push   esp
  41986c:	xor    bh,bl
  41986e:	repz pop edx
  419870:	sbb    bl,bh
  419872:	push   esi
  419873:	and    edx,DWORD PTR [ecx]
  419875:	fcomp  DWORD PTR [edx+0x1c27f0e6]
  41987b:	ins    BYTE PTR es:[edi],dx
  41987c:	jnp    0x41988f
  41987e:	mov    BYTE PTR [esi],dl
  419880:	hlt    
  419881:	(bad)  
  419882:	fiadd  WORD PTR [ecx]
  419884:	pop    edi
  419885:	xchg   ebx,eax
  419886:	arpl   si,ax
  419888:	adc    DWORD PTR [ecx+edi*8-0x24b51af4],esp
  41988f:	or     DWORD PTR [edi-0x3a],esi
  419892:	sub    al,0x2f
  419894:	or     eax,0xa576c146
  419899:	adc    BYTE PTR [edx-0x3f7f06f7],bh
  41989f:	push   ebp
  4198a0:	sti    
  4198a1:	mov    edi,0x9bf8fdc2
  4198a6:	dec    esp
  4198a7:	repz rcl al,cl
  4198aa:	xor    dh,BYTE PTR [eax+eax*8]
  4198ad:	out    dx,al
  4198ae:	mov    eax,0x9ea3dc63
  4198b3:	dec    edi
  4198b4:	mov    dl,0x8d
  4198b6:	jmp    0x4198b5
  4198b8:	pop    esi
  4198b9:	inc    edi
  4198ba:	mov    fs,WORD PTR ds:0x7ca538a3
  4198c0:	mov    DWORD PTR [edi],edx
  4198c2:	ret    
  4198c3:	in     al,dx
  4198c4:	mov    bh,BYTE PTR [ecx]
  4198c6:	fadd   QWORD PTR [edi-0x4e]
  4198c9:	addr16 inc ebx
  4198cb:	adc    BYTE PTR [ebp-0x1b],al
  4198ce:	test   eax,0x10d5d1e5
  4198d3:	lock aam 0x59
  4198d6:	rcr    BYTE PTR [ebp+eax*4+0x437bf942],0x1e
  4198de:	sbb    al,0xa6
  4198e0:	dec    eax
  4198e1:	push   esp
  4198e2:	jne    0x41987f
  4198e4:	dec    edx
  4198e5:	add    eax,0xcbead26b
  4198ea:	nop
  4198eb:	hlt    
  4198ec:	dec    edx
  4198ed:	cmovb  esp,DWORD PTR [eax]
  4198f0:	rcl    DWORD PTR [ecx*8-0x770a544b],0x7a
  4198f8:	addr16 and edx,edx
  4198fb:	or     bl,BYTE PTR [ecx+ebx*2]
  4198fe:	jg     0x41992e
  419900:	and    BYTE PTR gs:[edi-0x5d],ch
  419904:	cmp    DWORD PTR [ebx-0x5c316b05],0x26
  41990b:	and    al,0x8a
  41990d:	add    BYTE PTR [esi+ebx*1-0x640ca2a8],dh
  419914:	xor    al,0x33
  419916:	shl    ah,1
  419918:	(bad)
  41991c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41991d:	out    0x64,al
  41991f:	mov    ?,WORD PTR [ebp-0x68823721]
  419925:	xchg   esp,eax
  419926:	in     eax,dx
  419927:	lea    edi,[edi-0x50]
  41992a:	inc    ebp
  41992b:	push   ebp
  41992c:	mov    DWORD PTR [esi],edx
  41992e:	sub    bh,BYTE PTR [ebp-0x16df2110]
  419934:	mov    ebx,0x2df96b09
  419939:	pop    edx
  41993a:	sar    DWORD PTR ds:0x7592312a,0x4e
  419941:	mov    al,0xb
  419943:	xor    dh,BYTE PTR [edx+eax*4+0x4a520d5d]
  41994a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41994b:	xchg   DWORD PTR [eax+0x8],ecx
  41994e:	mov    dl,0xd6
  419950:	stos   DWORD PTR es:[edi],eax
  419951:	mov    eax,ds:0xd47e798
  419956:	std    
  419957:	arpl   WORD PTR [esi],si
  419959:	pop    esi
  41995a:	addr16 push eax
  41995c:	punpckhdq mm5,mm2
  41995f:	in     eax,0x2
  419961:	fs fs jno 0x41997a
  419965:	pop    ds
  419966:	fwait
  419967:	jb     0x4199a0
  419969:	inc    edi
  41996a:	in     eax,dx
  41996b:	(bad)  
  41996c:	pop    ecx
  41996d:	adc    dl,0xab
  419970:	cld    
  419971:	push   esp
  419972:	nop
  419973:	test   BYTE PTR [esi+0x3f],dl
  419976:	lock xchg ebx,eax
  419978:	push   0xffffff86
  41997a:	ins    DWORD PTR es:[edi],dx
  41997b:	push   edx
  41997c:	or     ah,bh
  41997e:	inc    ecx
  41997f:	push   ds
  419980:	add    cl,BYTE PTR [ebp-0x517073fd]
  419986:	or     BYTE PTR ds:0xc29b1b41,al
  41998c:	sahf   
  41998d:	mov    dh,0x77
  41998f:	test   al,0xce
  419991:	xor    BYTE PTR [edi+0x2faaf52e],0x59
  419998:	fidivr DWORD PTR [ecx+0x1f749a01]
  41999e:	(bad)  
  41999f:	mov    eax,0xd15b321f
  4199a4:	dec    edx
  4199a5:	and    edx,ebp
  4199a7:	add    dl,BYTE PTR [edi+edi*8]
  4199aa:	jb     0x419959
  4199ac:	jge    0x4199ae
  4199ae:	sub    esp,ecx
  4199b0:	sbb    BYTE PTR [edx],bl
  4199b2:	loop   0x419a14
  4199b4:	fist   WORD PTR [ebp-0x4b3eb222]
  4199ba:	jnp    0x4199ed
  4199bc:	rol    DWORD PTR [ecx+ecx*4+0x68b9d0f1],cl
  4199c3:	and    DWORD PTR [edx*4+0x6585c0a8],ecx
  4199ca:	or     eax,0x269c6637
  4199cf:	mov    edi,0x51f79c43
  4199d4:	add    al,0x6
  4199d6:	dec    edx
  4199d7:	in     eax,dx
  4199d8:	dec    ebp
  4199d9:	fwait
  4199da:	pushf  
  4199db:	sbb    ebp,DWORD PTR es:[edi+0x33]
  4199df:	rcl    DWORD PTR [edi-0x2aeeeb3a],cl
  4199e5:	and    al,0x91
  4199e7:	mov    esp,0x4ea2703
  4199ec:	add    eax,0x5ad6a992
  4199f1:	mov    al,0x35
  4199f3:	mov    ebp,0x6789045d
  4199f8:	or     ebp,eax
  4199fa:	sbb    eax,0x7dd639f2
  4199ff:	inc    edx
  419a00:	mov    dl,0x50
  419a02:	adc    BYTE PTR ds:0x23000a9d,al
  419a08:	mov    al,ds:0x368cb86b
  419a0d:	and    al,0x26
  419a0f:	popf   
  419a10:	pop    eax
  419a11:	inc    esi
  419a12:	fnstsw WORD PTR [eax]
  419a14:	and    al,0xf0
  419a16:	cmp    esi,esp
  419a18:	jo     0x419a1c
  419a1a:	(bad)  
  419a1b:	push   ebp
  419a1c:	int3   
  419a1d:	adc    eax,0x6eae7e4d
  419a22:	and    al,0x8a
  419a24:	sbb    eax,DWORD PTR [esi-0x433bda96]
  419a2a:	test   al,0x87
  419a2c:	cdq    
  419a2d:	lds    ebx,FWORD PTR [ebp-0x47cb2dc4]
  419a33:	dec    edi
  419a34:	and    al,0x6a
  419a36:	and    al,cl
  419a38:	fst    st(0)
  419a3a:	xor    eax,0x36ea453d
  419a3f:	aaa    
  419a40:	sbb    al,0x55
  419a42:	imul   BYTE PTR ds:0xa53b0014
  419a48:	jg     0x419a9f
  419a4a:	push   0x58
  419a4c:	inc    edi
  419a4d:	sbb    eax,0x36eb009d
  419a52:	pop    ss
  419a53:	nop
  419a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a55:	mov    ch,0x35
  419a57:	repz xchg ecx,eax
  419a59:	sub    bl,BYTE PTR [ebp-0xf]
  419a5c:	xor    ecx,DWORD PTR [ecx]
  419a5e:	pushf  
  419a5f:	inc    eax
  419a60:	xor    al,0xa7
  419a62:	repnz and edi,DWORD PTR [ebp+eax*8-0x4297169c]
  419a6a:	leave  
  419a6b:	cwde   
  419a6c:	jne    0x419a27
  419a6e:	nop
  419a6f:	and    DWORD PTR [esi-0x75efac21],edi
  419a75:	and    DWORD PTR [eax+ebx*1+0x7da68d0],ebp
  419a7c:	(bad)  
  419a7d:	aad    0x7b
  419a7f:	sti    
  419a80:	jge    0x419a81
  419a82:	fldenv [ebx]
  419a84:	mov    ds:0x17513961,eax
  419a89:	int    0x28
  419a8b:	or     BYTE PTR [edi],ah
  419a8d:	test   al,0x57
  419a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a90:	xor    eax,0x2a6dcf95
  419a95:	add    BYTE PTR [ebx-0x29e3b0eb],dl
  419a9b:	fwait
  419a9c:	sbb    dh,BYTE PTR [edx]
  419a9e:	xchg   ecx,eax
  419a9f:	fadd   st(6),st
  419aa1:	mov    ?,edi
  419aa3:	sbb    bl,BYTE PTR [edi+0x26a1ffa3]
  419aa9:	iret   
  419aaa:	call   0x4cc11774
  419aaf:	in     al,0x1d
  419ab1:	mov    esi,0xdd519481
  419ab6:	inc    esi
  419ab7:	cmp    eax,0x92d0fed
  419abc:	xor    DWORD PTR [ecx+0x32],edx
  419abf:	pop    esi
  419ac0:	mov    ecx,0x70c23f4e
  419ac5:	int3   
  419ac6:	jmp    0xde502679
  419acb:	sbb    esp,ebx
  419acd:	clc    
  419ace:	(bad)  
  419acf:	retf   0xda3e
  419ad2:	inc    ebp
  419ad3:	jge    0x419a96
  419ad5:	sub    eax,0xbcaa9315
  419ada:	dec    esp
  419adb:	imul   ebx,ecx,0x5b63e204
  419ae1:	int    0x43
  419ae3:	int3   
  419ae4:	sub    al,dh
  419ae6:	rcl    esp,cl
  419ae8:	test   eax,0x13d64e5a
  419aed:	(bad)  
  419aee:	push   ss
  419aef:	pop    esi
  419af0:	loope  0x419aba
  419af2:	int3   
  419af3:	pop    edi
  419af4:	push   ebp
  419af5:	cmp    bl,BYTE PTR [edi+0x1c338494]
  419afb:	dec    edx
  419afc:	jg     0x419b37
  419afe:	sahf   
  419aff:	cmp    eax,0x751687b2
  419b04:	pop    ecx
  419b05:	cdq    
  419b06:	push   ebx
  419b07:	mov    edx,DWORD PTR [edi+ebx*8+0x43bdfb95]
  419b0e:	fcomi  st,st(2)
  419b10:	leave  
  419b11:	xlat   BYTE PTR ds:[ebx]
  419b12:	sub    dh,BYTE PTR [eax-0x34675d2]
  419b18:	outs   dx,BYTE PTR ds:[esi]
  419b19:	push   cs
  419b1a:	jecxz  0x419b76
  419b1c:	(bad)  [edx+0x48]
  419b1f:	dec    esp
  419b20:	or     al,0xad
  419b22:	aas    
  419b23:	loope  0x419b07
  419b25:	jp     0x419af5
  419b27:	sbb    al,dh
  419b29:	dec    esp
  419b2a:	dec    edx
  419b2b:	jnp    0x419b26
  419b2d:	mov    ?,esi
  419b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b30:	call   0xe507af29
  419b35:	pop    ecx
  419b36:	inc    edx
  419b37:	fcomip st,st(0)
  419b39:	inc    esi
  419b3a:	out    dx,al
  419b3b:	sub    DWORD PTR [edx],esp
  419b3d:	outs   dx,DWORD PTR ds:[esi]
  419b3e:	mov    ebx,0x67e23a47
  419b43:	loopne 0x419b56
  419b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b46:	and    esi,DWORD PTR [esi-0x723f371]
  419b4c:	push   0x7b
  419b4e:	add    dh,dh
  419b50:	out    0xed,al
  419b52:	aas    
  419b53:	xor    al,0xf0
  419b55:	xchg   ecx,eax
  419b56:	adc    DWORD PTR [esi-0x78943b6f],eax
  419b5c:	scas   eax,DWORD PTR es:[edi]
  419b5d:	pop    esi
  419b5e:	push   edi
  419b5f:	sub    BYTE PTR [esi+0x2b],bl
  419b62:	sbb    ebp,DWORD PTR [esi]
  419b64:	daa    
  419b65:	mov    ?,eax
  419b67:	mov    DWORD PTR [esi],edi
  419b69:	call   0xbcb65a8b
  419b6e:	mov    edx,0x2f61944e
  419b73:	xor    al,cl
  419b75:	or     DWORD PTR [ecx-0x2b],esi
  419b78:	fcom   st(1)
  419b7a:	jae    0x419b7e
  419b7c:	push   esi
  419b7d:	pop    ecx
  419b7e:	es cmp al,0xa5
  419b81:	fstp   QWORD PTR ds:0xd2d1e64e
  419b87:	retf   
  419b88:	mov    al,ds:0x570814c
  419b8d:	lahf   
  419b8e:	inc    edi
  419b8f:	pusha  
  419b90:	and    ecx,DWORD PTR [esi]
  419b92:	jmp    DWORD PTR [ebp+0x30]
  419b95:	sub    BYTE PTR [edi+ecx*1+0x220409ca],0xcc
  419b9d:	retf   
  419b9e:	add    bl,BYTE PTR [eax]
  419ba0:	mov    ah,bl
  419ba2:	jge    0x419bb3
  419ba4:	push   eax
  419ba5:	inc    esp
  419ba6:	jle    0x419b30
  419ba8:	or     BYTE PTR [ecx+0x22],bh
  419bab:	in     eax,0x5b
  419bad:	arpl   si,ax
  419baf:	neg    BYTE PTR [edi+0x1b7fb1d3]
  419bb5:	sub    dl,ah
  419bb7:	fiadd  WORD PTR [ebx-0x2235b04c]
  419bbd:	jb     0x419bd2
  419bbf:	jmp    0xd2de:0x7401a136
  419bc6:	ja     0x419b7c
  419bc8:	add    BYTE PTR [edi-0x36],0xcc
  419bcc:	cld    
  419bcd:	aas    
  419bce:	and    DWORD PTR [edx],edx
  419bd0:	inc    edi
  419bd1:	inc    edi
  419bd2:	sar    bh,cl
  419bd4:	dec    eax
  419bd5:	call   0x9b20dc1e
  419bda:	xor    edi,eax
  419bdc:	push   ss
  419bdd:	test   eax,0xb5dbf207
  419be2:	push   0x25
  419be4:	sbb    eax,0x4e664bee
  419be9:	add    eax,0x15fab3be
  419bee:	retf   
  419bef:	div    edi
  419bf1:	scas   al,BYTE PTR es:[edi]
  419bf2:	and    eax,0x7665da4d
  419bf7:	clc    
  419bf8:	xor    eax,0xbdc08516
  419bfd:	fsub   DWORD PTR [edx+0x48]
  419c00:	sbb    eax,0x56cd57dc
  419c05:	ins    DWORD PTR es:[edi],dx
  419c06:	lea    ebx,[ebp+eiz*2+0x71a068cd]
  419c0d:	pop    esi
  419c0e:	jne    0x419c44
  419c10:	nop
  419c11:	stc    
  419c12:	(bad)  
  419c13:	fst    st(0)
  419c15:	jmp    0xdae6:0xb253c2ae
  419c1c:	cmp    ebp,ecx
  419c1e:	jne    0x419c2a
  419c20:	pop    ss
  419c21:	pushf  
  419c22:	inc    ebx
  419c23:	iret   
  419c24:	and    al,0x91
  419c26:	add    ah,cl
  419c28:	stos   DWORD PTR es:[edi],eax
  419c29:	or     ebx,DWORD PTR [ebp+0x0]
  419c2c:	pop    ss
  419c2d:	rol    BYTE PTR [ebx+0x5],0x68
  419c31:	shl    DWORD PTR [esi+0x4c9aedd3],1
  419c37:	(bad)  
  419c38:	das    
  419c39:	mov    al,0x61
  419c3c:	sbb    BYTE PTR [ebx-0x3956ae4e],0xf0
  419c43:	jae    0x419c18
  419c45:	call   FWORD PTR [esi-0x15542d04]
  419c4b:	jmp    0x98b96a9d
  419c50:	dec    edi
  419c51:	cli    
  419c52:	stos   BYTE PTR es:[edi],al
  419c53:	in     al,0x86
  419c55:	je     0x419c44
  419c57:	(bad)  
  419c58:	leave  
  419c59:	mov    eax,ds:0xe7a72b77
  419c5e:	retf   0xa12e
  419c61:	enter  0xbc5d,0xb9
  419c65:	jnp    0x419cba
  419c67:	mov    ah,ch
  419c69:	in     al,0xdb
  419c6b:	stos   DWORD PTR es:[edi],eax
  419c6c:	out    0x38,eax
  419c6e:	mov    edi,0xfc114013
  419c73:	push   esp
  419c74:	adc    al,0x4d
  419c76:	(bad)  
  419c77:	stos   DWORD PTR es:[edi],eax
  419c78:	mov    bh,0x70
  419c7a:	test   eax,0x6997f6b2
  419c7f:	and    eax,0xf4b1d0cf
  419c84:	sbb    eax,0x860020b8
  419c89:	fist   WORD PTR [ebx]
  419c8b:	inc    esi
  419c8c:	adc    al,0x63
  419c8e:	(bad)  
  419c8f:	loop   0x419d0f
  419c91:	out    dx,al
  419c92:	inc    ebx
  419c93:	mov    ecx,0x971f655c
  419c98:	out    dx,eax
  419c99:	pusha  
  419c9a:	add    DWORD PTR [esi-0x28],ebp
  419c9d:	inc    esi
  419c9e:	rol    DWORD PTR [edi+eax*4+0xb],0x37
  419ca3:	jne    0x419cc5
  419ca5:	or     DWORD PTR [edx+0x42757466],0x49d8fceb
  419caf:	inc    esi
  419cb0:	das    
  419cb1:	pop    edi
  419cb2:	fidiv  WORD PTR [ebx]
  419cb4:	jl     0x419cd7
  419cb6:	enter  0x479c,0x3
  419cba:	adc    eax,0xc6143f44
  419cbf:	rol    BYTE PTR [edi+0x2c9826fe],1
  419cc5:	add    BYTE PTR [ecx-0x57],dl
  419cc8:	in     al,dx
  419cc9:	call   0x478c5542
  419cce:	pop    edi
  419ccf:	or     BYTE PTR [ebx-0x6c616d7f],dh
  419cd5:	(bad)  
  419cd7:	(bad)
  419cdb:	pop    edi
  419cdc:	cmp    DWORD PTR [edx],esp
  419cde:	ret    
  419cdf:	shl    DWORD PTR [esi-0x65],cl
  419ce2:	mov    WORD PTR [edx],ds
  419ce4:	scas   al,BYTE PTR es:[edi]
  419ce5:	mov    WORD PTR [ebx+esi*1-0x44012c59],?
  419cec:	ds ds loopne 0x419d5e
  419cf0:	(bad)  
  419cf2:	test   al,0xc9
  419cf4:	lea    esi,ds:0x8e197d23
  419cfa:	push   esi
  419cfb:	fidiv  WORD PTR [eax-0x3d81a5f5]
  419d01:	dec    eax
  419d02:	lahf   
  419d03:	ins    DWORD PTR es:[edi],dx
  419d04:	imul   eax,DWORD PTR [edi+0x7c9b99c1],0xc9611d8b
  419d0e:	loopne 0x419d15
  419d10:	icebp  
  419d11:	bound  ecx,QWORD PTR [eax-0x329b3fbb]
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x768b077c]
  419d20:	jmp    0xf800:0x11a092b
  419d27:	add    al,0x0
  419d29:	add    bh,al
  419d2b:	sti    
  419d2c:	out    dx,eax
  419d2d:	jnp    0x419cfb
  419d2f:	push   ebx
  419d30:	xor    DWORD PTR [esi-0x31ee7cc5],ebx
  419d36:	xor    BYTE PTR [edi+0x66],dl
  419d39:	call   0x7738abc9
  419d3e:	mov    bh,0x87
  419d40:	arpl   WORD PTR [edi+ecx*8+0x77c48b7f],dx
  419d47:	push   esp
  419d48:	mov    ds:0x4a6d88cc,eax
  419d4d:	pop    esi
  419d4e:	sar    DWORD PTR ds:0x608fa2dd,0x21
  419d55:	jb     0x419d3b
  419d57:	xlat   BYTE PTR ds:[ebx]
  419d58:	lods   eax,DWORD PTR ds:[esi]
  419d59:	(bad)  
  419d5b:	push   ebp
  419d5c:	sti    
  419d5d:	push   edi
  419d5e:	pushf  
  419d5f:	mov    DWORD PTR [edx+ecx*4+0x77],ecx
  419d63:	xor    al,ch
  419d65:	cli    
  419d66:	mov    edi,0x684a5449
  419d6b:	mov    cs,WORD PTR [ecx]
  419d6d:	in     al,dx
  419d6e:	daa    
  419d6f:	cdq    
  419d70:	cwde   
  419d71:	(bad)
  419d75:	add    eax,0x7de1c523
  419d7a:	js     0x419dbd
  419d7c:	imul   BYTE PTR [edx]
  419d7e:	ds xor ebx,edi
  419d81:	jmp    DWORD PTR [ecx+0x23]
  419d84:	stos   DWORD PTR es:[edi],eax
  419d85:	rcl    DWORD PTR [eax+0x1d],0x2d
  419d89:	mov    bh,0xac
  419d8b:	mov    cl,0x26
  419d8d:	add    BYTE PTR [ebx-0x26],0x92
  419d91:	mov    cl,0x2b
  419d93:	pop    ss
  419d94:	loopne 0x419d21
  419d96:	cmp    DWORD PTR [ecx],0x43614aea
  419d9c:	sbb    eax,0x30fad118
  419da1:	push   ebx
  419da2:	rol    BYTE PTR [ebp-0x30f9b33f],0x85
  419da9:	cmp    DWORD PTR [ebx],0x35af425f
  419daf:	test   eax,0xa326c05f
  419db4:	test   eax,0x403b1a61
  419db9:	xor    cl,BYTE PTR [esi]
  419dbb:	pop    esp
  419dbc:	jge    0x419e39
  419dbe:	push   ebx
  419dbf:	jne    0x419d67
  419dc1:	int3   
  419dc2:	sbb    ebp,DWORD PTR [ebp+0x5507ad5d]
  419dc8:	dec    esi
  419dc9:	out    0x90,eax
  419dcb:	fcmovu st,st(1)
  419dcd:	jne    0x419df5
  419dcf:	push   0xf4653eb3
  419dd4:	xchg   esi,eax
  419dd5:	loopne 0x419dc0
  419dd7:	rol    BYTE PTR [edx],1
  419dd9:	imul   esp,DWORD PTR [ebx],0x2d
  419ddc:	sub    eax,0x622c5bd8
  419de1:	int    0xe
  419de3:	adc    DWORD PTR [ebp-0x54],ebx
  419de6:	lods   eax,DWORD PTR ds:[esi]
  419de7:	jnp    0x419e01
  419de9:	ret    
  419dea:	dec    sp
  419dec:	test   BYTE PTR ds:0xbdcba9f8,0x71
  419df3:	ja     0x419de5
  419df5:	les    eax,FWORD PTR [esi]
  419df7:	mov    bl,bh
  419df9:	push   edi
  419dfa:	lods   al,BYTE PTR cs:[esi]
  419dfc:	or     eax,0xf372c497
  419e01:	and    eax,0x30cbd26c
  419e06:	outs   dx,DWORD PTR ds:[esi]
  419e07:	ins    BYTE PTR es:[edi],dx
  419e08:	xor    DWORD PTR [edx+0x4ea56a12],ebp
  419e0e:	fsubr  st,st(1)
  419e10:	cmp    eax,0xe8cb7dc6
  419e15:	inc    edi
  419e16:	cmp    eax,0x13f47755
  419e1b:	shr    BYTE PTR [ebx+eiz*2+0x1457aef8],1
  419e22:	gs push ds
  419e24:	out    dx,al
  419e25:	mov    DWORD PTR [edi-0x18553817],edx
  419e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e2c:	ins    BYTE PTR es:[edi],dx
  419e2d:	or     DWORD PTR [esi],eax
  419e2f:	and    cl,BYTE PTR [edx]
  419e31:	add    DWORD PTR [ebx],ebp
  419e33:	call   0xecd:0xa7ecaf9d
  419e3a:	fwait
  419e3b:	shl    ebx,1
  419e3d:	mov    dh,0x6b
  419e3f:	cmp    cl,al
  419e41:	pusha  
  419e42:	test   DWORD PTR [eax+0x28f11637],ebp
  419e48:	jno    0x419e3e
  419e4a:	fstp   QWORD PTR [esi]
  419e4c:	cmp    esp,edx
  419e4e:	xor    eax,0x5eb5d02c
  419e53:	retf   
  419e54:	iret   
  419e55:	fcmovne st,st(5)
  419e57:	fnstenv [edx]
  419e59:	out    dx,al
  419e5a:	push   eax
  419e5b:	push   esi
  419e5c:	sbb    DWORD PTR [edx+0x13cfc90a],esp
  419e62:	mov    dh,BYTE PTR [ecx+0x6]
  419e65:	hlt    
  419e66:	jno    0x419e8e
  419e68:	xlat   BYTE PTR ds:[ebx]
  419e69:	adc    BYTE PTR [edi+0x7c],ch
  419e6c:	mov    esi,0xca47e773
  419e71:	mov    DWORD PTR [ebp+edx*2+0x39a87ba3],0xa7862aea
  419e7c:	lods   eax,DWORD PTR ds:[esi]
  419e7e:	lea    edx,[edx-0x28]
  419e81:	hlt    
  419e82:	shl    dh,0x49
  419e85:	adc    al,0x73
  419e87:	push   0x1a
  419e89:	push   ds
  419e8a:	loope  0x419ead
  419e8c:	popf   
  419e8d:	mov    ebx,es
  419e8f:	adc    DWORD PTR [eax+0x201e6364],ecx
  419e95:	inc    eax
  419e96:	lahf   
  419e97:	mov    bh,0x2b
  419e99:	ins    BYTE PTR es:[edi],dx
  419e9a:	jne    0x419ed7
  419e9c:	test   esi,0x4f43d834
  419ea2:	and    DWORD PTR [edi+esi*1+0x7b],ecx
  419ea6:	call   0x7ab87ab3
  419eab:	daa    
  419eac:	jns    0x419e31
  419eae:	out    dx,al
  419eaf:	hlt    
  419eb0:	jmp    0x524b:0x38f60d7c
  419eb7:	shl    DWORD PTR [esi],0x33
  419eba:	mov    ah,BYTE PTR [edi]
  419ebc:	sub    BYTE PTR [edx-0x681f4403],bl
  419ec2:	(bad)  
  419ec3:	jg     0x419e84
  419ec5:	dec    ebx
  419ec6:	mov    al,0x5e
  419ec8:	pop    edx
  419ec9:	imul   ebx,DWORD PTR [edi+0x52],0x0
  419ecd:	jo     0x419ebb
  419ecf:	xchg   ecx,eax
  419ed0:	aam    0xef
  419ed2:	dec    esp
  419ed3:	mov    ebx,0xfa31eb60
  419ed8:	sti    
  419ed9:	inc    ebp
  419eda:	daa    
  419edb:	mov    al,ds:0x33cd643c
  419ee0:	mov    ebx,0xe1f70821
  419ee5:	scas   al,BYTE PTR es:[edi]
  419ee6:	in     al,dx
  419ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee8:	test   BYTE PTR [eax+0x5a],0x2
  419eec:	ins    DWORD PTR es:[edi],dx
  419eed:	jmp    0x4927:0x7aab2b2f
  419ef4:	jbe    0x419f44
  419ef6:	sub    ebp,0x9d6670a9
  419efc:	int3   
  419efd:	or     al,0x88
  419eff:	xchg   esp,eax
  419f00:	dec    esi
  419f01:	ins    BYTE PTR es:[edi],dx
  419f02:	sub    esp,DWORD PTR [ebx-0x4b]
  419f05:	adc    DWORD PTR [eax+esi*2+0x26],0xf895dc8f
  419f0d:	clc    
  419f0e:	adc    eax,DWORD PTR [edx-0xb46e1b]
  419f14:	jno    0x419ece
  419f16:	inc    edx
  419f17:	loope  0x419f08
  419f19:	add    dh,BYTE PTR [ecx]
  419f1b:	(bad)  
  419f1c:	jl     0x419f5f
  419f1e:	inc    esp
  419f1f:	add    al,0x21
  419f21:	(bad)  
  419f23:	pop    ecx
  419f24:	or     bl,BYTE PTR [ecx+0x7458f78]
  419f2a:	sbb    eax,esp
  419f2c:	sbb    al,0xae
  419f2e:	pop    es
  419f2f:	fucom  st(7)
  419f31:	in     al,0x1d
  419f33:	xor    BYTE PTR [ebp-0x695f788c],ah
  419f39:	jb     0x419f58
  419f3b:	mov    ah,0xc5
  419f3d:	out    dx,al
  419f3e:	sbb    edi,DWORD PTR [ecx]
  419f40:	xor    esi,DWORD PTR [esi+edi*1]
  419f43:	push   ss
  419f44:	call   0xbce580bc
  419f49:	fistp  WORD PTR [ecx+0x1f]
  419f4c:	mov    ebx,0x8fa61f50
  419f51:	adc    al,0x3
  419f53:	dec    ebx
  419f54:	pop    edi
  419f55:	scas   eax,DWORD PTR es:[edi]
  419f56:	inc    ebp
  419f57:	out    0x85,al
  419f59:	add    al,0x59
  419f5b:	inc    ebp
  419f5c:	data16 mov al,0xd1
  419f5f:	test   DWORD PTR [edi],ebx
  419f61:	repnz xor al,0x78
  419f64:	jmp    0x96a8c563
  419f69:	stos   DWORD PTR es:[edi],eax
  419f6a:	pop    ecx
  419f6b:	fistp  WORD PTR [esi]
  419f6d:	pop    eax
  419f6e:	inc    esi
  419f6f:	jo     0x419eff
  419f71:	push   edx
  419f72:	add    dh,BYTE PTR [edi+edi*8+0x58]
  419f76:	scas   al,BYTE PTR es:[edi]
  419f77:	push   edx
  419f78:	paddusb mm4,QWORD PTR [esi]
  419f7b:	sbb    esi,0x949768ca
  419f81:	das    
  419f82:	or     eax,0x7e9bde15
  419f87:	jecxz  0x419ffb
  419f89:	fnstsw WORD PTR ds:0x70a87c9f
  419f8f:	inc    edi
  419f90:	and    eax,0x5b7b32ee
  419f95:	rcr    DWORD PTR [ebp-0x7],1
  419f98:	test   eax,0x32a4fe6c
  419f9d:	mov    WORD PTR ds:0x54188964,ss
  419fa3:	cdq    
  419fa4:	sub    DWORD PTR [edi],esp
  419fa6:	xor    esi,edi
  419fa8:	out    dx,al
  419fa9:	sub    al,0x5b
  419fab:	pop    ebp
  419fac:	lods   al,BYTE PTR ds:[esi]
  419fad:	xlat   BYTE PTR ds:[ebx]
  419fae:	div    DWORD PTR [eax+edi*4+0x4e5e95be]
  419fb5:	sub    eax,ebx
  419fb7:	inc    esi
  419fb8:	call   0x7809b681
  419fbd:	clc    
  419fbe:	(bad)  
  419fbf:	or     eax,0xed55e82d
  419fc4:	inc    eax
  419fc5:	call   0x97dc6246
  419fca:	xchg   ebp,eax
  419fcb:	pop    ebx
  419fcc:	(bad)  [ecx]
  419fce:	lea    edi,[ecx]
  419fd0:	sbb    dh,cl
  419fd2:	dec    edi
  419fd3:	pop    ebx
  419fd4:	mov    ch,0xf1
  419fd7:	sub    eax,0x902ac5bc
  419fdc:	dec    esp
  419fdd:	mov    eax,ds:0x60195537
  419fe2:	dec    ecx
  419fe3:	mov    ss,esi
  419fe5:	and    esi,eax
  419fe7:	dec    edx
  419fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe9:	mov    eax,ds:0xa375bebc
  419fee:	test   eax,0x7d065089
  419ff3:	dec    eax
  419ff4:	bnd jl 0x41a050
  419ff7:	sbb    eax,DWORD PTR [edi+0x7934d6d7]
  419ffd:	dec    ebp
  419ffe:	pop    DWORD PTR [esi+0x68]
  41a001:	fwait
  41a002:	mov    ch,0x1d
  41a004:	aad    0xd1
  41a006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a007:	and    DWORD PTR [ebp-0x4e2c20e1],0xfffffff1
  41a00e:	mov    bl,0xa1
  41a010:	mul    al
  41a012:	(bad)
  41a016:	call   0x5fb8:0xf0e52adc
  41a01d:	pusha  
  41a01e:	add    eax,DWORD PTR es:[esi+0x7b]
  41a022:	in     eax,0x83
  41a024:	outs   dx,BYTE PTR ds:[esi]
  41a025:	in     eax,dx
  41a026:	xchg   esp,eax
  41a027:	leave  
  41a028:	mov    cl,cl
  41a02a:	(bad)  
  41a02b:	mov    ds:0x3e30d743,eax
  41a030:	pop    esp
  41a031:	jb     0x419fed
  41a033:	adc    ecx,esp
  41a035:	outs   dx,BYTE PTR ds:[esi]
  41a036:	xchg   edi,eax
  41a037:	ja     0x41a090
  41a039:	std    
  41a03a:	int3   
  41a03b:	mov    ah,0xb6
  41a03d:	push   ecx
  41a03e:	retf   0x8c5c
  41a041:	div    ecx
  41a043:	sbb    edi,DWORD PTR [edx-0xa]
  41a046:	push   edx
  41a047:	in     eax,dx
  41a048:	jb     0x41a077
  41a04a:	fdivr  st,st(5)
  41a04c:	fadd   DWORD PTR [ecx+0x71]
  41a04f:	or     eax,0x5b248b71
  41a054:	(bad)  
  41a055:	push   ebp
  41a056:	jmp    0x419fdf
  41a058:	push   cs
  41a059:	imul   eax,DWORD PTR [esi],0x3f64fb50
  41a05f:	inc    ecx
  41a060:	mov    ds:0x1e27edf8,eax
  41a065:	popa   
  41a066:	xchg   edi,eax
  41a067:	jne    0x41a032
  41a069:	fwait
  41a06a:	outs   dx,BYTE PTR ds:[esi]
  41a06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a06c:	shl    BYTE PTR [eax+0x3786d675],cl
  41a072:	mov    cl,BYTE PTR [esi-0x58]
  41a075:	cmp    BYTE PTR [ecx-0x1a],ah
  41a078:	lods   al,BYTE PTR ds:[esi]
  41a079:	inc    esi
  41a07a:	mov    eax,0x5524ef6e
  41a07f:	sub    ah,BYTE PTR [edx]
  41a081:	retf   0x21db
  41a084:	mov    WORD PTR [edi],?
  41a086:	xor    BYTE PTR [edx+0x72],dl
  41a089:	pop    esp
  41a08a:	cwde   
  41a08b:	ret    
  41a08c:	jecxz  0x41a101
  41a08e:	xchg   esi,eax
  41a08f:	and    eax,ebp
  41a091:	inc    esp
  41a092:	enter  0x5848,0x88
  41a096:	jecxz  0x41a07e
  41a098:	cmp    al,0xff
  41a09a:	enter  0x7e19,0x1b
  41a09e:	or     al,0xc2
  41a0a0:	mov    ebx,0xa7d5bcff
  41a0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a6:	inc    ebx
  41a0a7:	fidiv  WORD PTR [esi]
  41a0a9:	loope  0x41a0a4
  41a0ab:	(bad)  
  41a0ac:	into   
  41a0ad:	icebp  
  41a0ae:	icebp  
  41a0af:	int3   
  41a0b0:	adc    bl,BYTE PTR [edi+0x49]
  41a0b3:	mov    al,ds:0x6f43a7df
  41a0b8:	add    DWORD PTR [edi+0x212351b3],edi
  41a0be:	shr    BYTE PTR [ecx-0x7b8c47d0],0x4d
  41a0c5:	mov    edx,0x73ba0aec
  41a0cb:	add    eax,0xab39b218
  41a0d0:	ins    DWORD PTR es:[edi],dx
  41a0d1:	addr16 and al,0x94
  41a0d4:	dec    eax
  41a0d5:	dec    ebp
  41a0d6:	jge    0x41a082
  41a0d8:	sub    al,al
  41a0da:	push   cs
  41a0db:	inc    eax
  41a0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0dd:	pusha  
  41a0de:	xchg   ebp,eax
  41a0df:	sbb    eax,0x4e
  41a0e2:	enter  0x6b04,0xe0
  41a0e6:	mov    al,ds:0x183600ad
  41a0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ec:	pop    ss
  41a0ed:	(bad)  
  41a0ee:	into   
  41a0ef:	xchg   bl,bl
  41a0f1:	mov    bl,0x53
  41a0f3:	push   0xffffff98
  41a0f5:	mov    esp,0xe0995caa
  41a0fa:	pop    esi
  41a0fb:	inc    DWORD PTR [ebp-0x61df267]
  41a101:	push   ds
  41a102:	pop    ss
  41a103:	cmp    eax,0x69873946
  41a108:	retf   0x8534
  41a10b:	in     eax,dx
  41a10c:	inc    ebp
  41a10d:	sub    al,0x97
  41a10f:	jp     0x41a0b3
  41a111:	jl     0x41a12a
  41a113:	fs mov dl,0xa4
  41a116:	fidiv  DWORD PTR [ebx]
  41a118:	pcmpeqw mm3,QWORD PTR [ebp+0x5af3b309]
  41a11f:	out    0xda,al
  41a121:	out    dx,al
  41a122:	xchg   esp,eax
  41a123:	push   ebx
  41a124:	scas   eax,DWORD PTR es:[edi]
  41a125:	xchg   esp,eax
  41a126:	and    dl,BYTE PTR [edx+0x6b]
  41a129:	cs das 
  41a12b:	cli    
  41a12c:	mov    dh,0x5
  41a12e:	ret    
  41a12f:	xor    BYTE PTR [ebx],0x2c
  41a132:	adc    dl,BYTE PTR [edx]
  41a134:	push   cs
  41a135:	jne    0x41a179
  41a137:	sub    al,0x6
  41a139:	sub    esi,edx
  41a13b:	xor    dl,BYTE PTR [edi+0x57]
  41a13e:	jle    0x41a0ce
  41a140:	neg    DWORD PTR [ebx]
  41a142:	or     eax,0x35483aee
  41a147:	inc    esi
  41a148:	fdiv   DWORD PTR [edi+0x38915b3f]
  41a14e:	adc    DWORD PTR [esp+0x2e898bfe],esp
  41a155:	dec    edx
  41a156:	aaa    
  41a157:	push   ebp
  41a158:	shl    BYTE PTR [ebx+0x3f],0x56
  41a15c:	out    0x4a,al
  41a15e:	mov    bh,0x24
  41a160:	mov    edi,0xb6fe359a
  41a165:	xchg   esp,eax
  41a166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a167:	add    eax,0x1483c47b
  41a16c:	adc    BYTE PTR [ecx],0xcf
  41a16f:	js     0x41a163
  41a171:	dec    eax
  41a172:	xchg   ebx,eax
  41a173:	call   0x86e4:0xde4c8ed5
  41a17a:	push   es
  41a17b:	cmp    BYTE PTR [edx+0x3b69ecf],ah
  41a181:	ret    0xa40d
  41a184:	fs icebp 
  41a186:	lock and dl,cl
  41a189:	and    DWORD PTR [ecx+0x2f],ecx
  41a18c:	dec    eax
  41a18d:	jg     0x41a194
  41a18f:	pushf  
  41a190:	mov    BYTE PTR [edx+eiz*4-0x66],dh
  41a194:	sbb    esi,DWORD PTR [edx]
  41a196:	jbe    0x41a202
  41a198:	fild   DWORD PTR [edi]
  41a19a:	jle    0x41a14b
  41a19c:	lods   al,BYTE PTR ds:[esi]
  41a19d:	push   ebx
  41a19e:	xchg   ebx,eax
  41a19f:	dec    ecx
  41a1a0:	mov    ah,BYTE PTR [ecx+0x5d]
  41a1a3:	iret   
  41a1a4:	retf   
  41a1a5:	(bad)  
  41a1a6:	xchg   edx,eax
  41a1a7:	mov    edx,0x133f12ad
  41a1ac:	inc    ebx
  41a1ad:	jno    0x41a1e7
  41a1af:	and    eax,0xe668a71e
  41a1b4:	xor    al,0x92
  41a1b6:	pushf  
  41a1b7:	cmp    eax,0xc9d9c964
  41a1bc:	jb     0x41a158
  41a1be:	(bad)  
  41a1bf:	(bad)  
  41a1c0:	and    DWORD PTR [ecx-0x1092e97],ebx
  41a1c6:	xlat   BYTE PTR ds:[ebx]
  41a1c7:	jmp    0x8e57:0xe5c16320
  41a1ce:	icebp  
  41a1cf:	ds ja  0x41a1b4
  41a1d2:	gs mov ah,0x56
  41a1d5:	fcom   st(0)
  41a1d7:	xor    DWORD PTR [edi+esi*4],esp
  41a1da:	out    dx,eax
  41a1db:	jnp    0x41a1f4
  41a1dd:	pop    ss
  41a1de:	cmp    BYTE PTR [ebx+0x33],0x26
  41a1e2:	mov    dl,0xb2
  41a1e4:	mov    al,ds:0x8d423463
  41a1e9:	pushf  
  41a1ea:	je     0x41a1fa
  41a1ec:	pop    ebp
  41a1ed:	pop    ebx
  41a1ee:	cwde   
  41a1ef:	mov    dl,BYTE PTR [esi]
  41a1f1:	mov    edi,0xe89df5c8
  41a1f6:	fld    TBYTE PTR [edi+0x73101af3]
  41a1fc:	mov    ebx,?
  41a1fe:	mov    ds:0x9ad0d9cd,eax
  41a203:	outs   dx,BYTE PTR ds:[esi]
  41a204:	jno    0x41a1d8
  41a206:	inc    esp
  41a207:	inc    edx
  41a208:	aad    0x1c
  41a20a:	ret    
  41a20b:	add    DWORD PTR [eax+0x5ec6a42d],0x86e2b29f
  41a215:	and    dl,BYTE PTR [esi+ebp*1]
  41a218:	pusha  
  41a219:	xor    edi,edi
  41a21b:	xchg   esi,eax
  41a21c:	outs   dx,BYTE PTR ds:[esi]
  41a21d:	adc    al,bl
  41a21f:	lods   al,BYTE PTR ds:[esi]
  41a220:	xchg   DWORD PTR ds:0x50e5518,ebx
  41a226:	dec    edi
  41a227:	pop    edi
  41a228:	sbb    ebx,DWORD PTR [ebp-0x53]
  41a22b:	test   al,0x5b
  41a22d:	gs mov dh,0xe4
  41a230:	fst    DWORD PTR [ecx+eax*1]
  41a233:	pop    ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	clc    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [edi+ecx*4],bl
  41a23c:	or     al,0xe9
  41a23e:	push   edi
  41a23f:	inc    ecx
  41a240:	pop    ds
  41a241:	push   ecx
  41a242:	or     cl,BYTE PTR ds:0xe470cd72
  41a248:	xor    bh,BYTE PTR [edx+0x15]
  41a24b:	sbb    eax,0xaf8df709
  41a250:	push   ds
  41a251:	fstp   DWORD PTR ds:0x5d33f16b
  41a257:	xchg   ebx,eax
  41a258:	jp     0x41a1e7
  41a25a:	push   ss
  41a25b:	or     esp,edx
  41a25d:	lods   eax,DWORD PTR ds:[esi]
  41a25e:	xchg   ecx,eax
  41a25f:	inc    BYTE PTR [ebx+0x14]
  41a262:	add    dh,BYTE PTR ds:0x6b4829c0
  41a268:	xor    BYTE PTR [eax+0x56],cl
  41a26b:	icebp  
  41a26c:	dec    edi
  41a26d:	push   0x7aaf52d3
  41a272:	jns    0x41a2d8
  41a274:	mov    ah,0x34
  41a276:	shl    BYTE PTR [esp+eax*8],0x1
  41a27a:	scas   eax,DWORD PTR es:[edi]
  41a27b:	jmp    0x41a2a9
  41a27d:	xor    DWORD PTR ds:0xeda152b5,ebx
  41a283:	js     0x41a281
  41a285:	mov    ah,0x7e
  41a287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a288:	add    al,0xc7
  41a28a:	push   0x5b
  41a28c:	neg    esi
  41a28e:	fidiv  WORD PTR [edi+0x5d]
  41a291:	fistp  WORD PTR [edi+eiz*1+0x1e]
  41a295:	cli    
  41a296:	popa   
  41a297:	pusha  
  41a298:	jne    0x41a30b
  41a29a:	rcr    DWORD PTR [esi+0x3f25dc69],1
  41a2a0:	dec    esi
  41a2a1:	outs   dx,BYTE PTR ds:[esi]
  41a2a2:	mov    bh,dl
  41a2a4:	sbb    esp,esi
  41a2a6:	mov    BYTE PTR [edx],cl
  41a2a8:	(bad)  
  41a2a9:	popf   
  41a2aa:	add    ch,ah
  41a2ac:	lea    eax,[edx-0x72]
  41a2af:	jbe    0x41a288
  41a2b1:	sbb    ebx,esi
  41a2b3:	and    al,dl
  41a2b5:	(bad)  
  41a2b7:	mov    bl,0xf1
  41a2b9:	mov    cs,esp
  41a2bb:	jge    0x41a2f4
  41a2bd:	pop    eax
  41a2be:	stos   BYTE PTR es:[edi],al
  41a2bf:	aas    
  41a2c0:	sbb    eax,0x4eeea8f8
  41a2c5:	shr    edi,0xc7
  41a2c8:	je     0x41a2a2
  41a2ca:	adc    DWORD PTR [ebx-0x7d747357],edx
  41a2d0:	lock sbb BYTE PTR ds:0xadd16dac,0x4c
  41a2d8:	pop    edx
  41a2d9:	(bad)  
  41a2da:	test   BYTE PTR [ecx-0x3f9ddcd5],0x83
  41a2e1:	stos   DWORD PTR es:[edi],eax
  41a2e2:	sub    eax,0x12a539a4
  41a2e7:	or     esp,DWORD PTR [ebx+0x14c161a0]
  41a2ed:	lods   eax,DWORD PTR ds:[esi]
  41a2ee:	inc    eax
  41a2ef:	and    BYTE PTR ds:[esi],dh
  41a2f2:	jecxz  0x41a2dd
  41a2f4:	fidivr DWORD PTR [esi]
  41a2f6:	ja     0x41a320
  41a2f8:	les    eax,FWORD PTR [edi+0x744ac5ce]
  41a2fe:	(bad)  
  41a2ff:	or     al,0x2f
  41a301:	(bad)  
  41a302:	faddp  st(1),st
  41a304:	das    
  41a305:	dec    edx
  41a306:	mov    BYTE PTR [edx-0x2c],dl
  41a309:	adc    DWORD PTR [ebp-0x747a8512],edx
  41a30f:	adc    DWORD PTR [esi-0x54],edx
  41a312:	mov    edi,0xf6d83e29
  41a317:	jns    0x41a37a
  41a319:	xchg   edx,eax
  41a31a:	aad    0xa1
  41a31c:	lock test al,0xb2
  41a31f:	mov    ds:0x6a98775f,eax
  41a324:	push   esi
  41a325:	test   DWORD PTR [ebp+0x591a760],edi
  41a32b:	xor    al,0xd9
  41a32d:	ror    dh,1
  41a32f:	int3   
  41a330:	ins    BYTE PTR es:[edi],dx
  41a331:	inc    esp
  41a332:	ficom  WORD PTR [ebp+ebx*8-0x27]
  41a336:	(bad)  
  41a337:	pop    edx
  41a338:	or     eax,DWORD PTR [eax+0xf9e663c]
  41a33e:	outs   dx,BYTE PTR ds:[esi]
  41a33f:	arpl   bx,di
  41a341:	nop
  41a342:	xor    BYTE PTR [esi-0x73],dl
  41a345:	push   ss
  41a346:	imul   edx,ebp,0xffffffc7
  41a349:	lahf   
  41a34a:	dec    ebp
  41a34b:	stc    
  41a34c:	daa    
  41a34d:	mov    edi,0x48766ce6
  41a352:	push   ss
  41a353:	retf   0xc5de
  41a356:	fimul  DWORD PTR ds:0x12497f56
  41a35c:	inc    ebx
  41a35d:	fdiv   DWORD PTR [ebx+0x50f059d9]
  41a363:	add    dl,ah
  41a365:	jbe    0x41a3a7
  41a367:	fistp  DWORD PTR [esi]
  41a369:	clc    
  41a36a:	shl    DWORD PTR [edx],1
  41a36c:	pop    esi
  41a36d:	mov    WORD PTR [ebx+0x5a6134d6],gs
  41a373:	xchg   edx,eax
  41a374:	mov    cl,0xf4
  41a376:	inc    ebx
  41a377:	sub    edx,esi
  41a379:	data16 ins BYTE PTR es:[edi],dx
  41a37b:	jecxz  0x41a3c0
  41a37d:	and    BYTE PTR [ebp+0xd99858a],0x28
  41a384:	pushf  
  41a385:	nop
  41a386:	sub    al,0xf5
  41a388:	test   BYTE PTR [ecx+0x64],ch
  41a38b:	dec    ebp
  41a38c:	xor    BYTE PTR [ebx+0x132cd4dc],al
  41a392:	push   edi
  41a393:	rep ins DWORD PTR es:[edi],dx
  41a395:	out    0x8f,al
  41a397:	out    0x64,eax
  41a399:	and    al,0x8
  41a39b:	adc    edi,DWORD PTR [ecx+0x31709f5f]
  41a3a1:	xor    dl,bh
  41a3a3:	mov    al,ds:0x902d81e
  41a3a8:	mov    eax,edx
  41a3aa:	xor    edi,DWORD PTR [ecx+0x44a005c0]
  41a3b0:	add    dh,ch
  41a3b2:	pop    edx
  41a3b3:	lock fstp QWORD PTR [edx-0x34]
  41a3b7:	leave  
  41a3b8:	loop   0x41a367
  41a3ba:	aaa    
  41a3bb:	ins    BYTE PTR es:[edi],dx
  41a3bc:	ror    BYTE PTR [eax-0x20ef22b2],0x6d
  41a3c3:	and    BYTE PTR [ecx+edx*1-0x3ba5d671],bl
  41a3ca:	jnp    0x41a3c1
  41a3cc:	or     al,BYTE PTR [esi+0x1ca8659c]
  41a3d2:	push   edx
  41a3d3:	jmp    0x184bef59
  41a3d8:	imul   ebp,DWORD PTR [eax+0x7b72a314],0x720f91bd
  41a3e2:	mov    esi,0xc98b7f7b
  41a3e7:	xchg   DWORD PTR [eax],esp
  41a3e9:	sbb    dl,ah
  41a3eb:	cmp    cl,bh
  41a3ed:	push   cs
  41a3ee:	xor    ch,dh
  41a3f0:	imul   DWORD PTR [edx]
  41a3f2:	jge    0x41a3e2
  41a3f4:	add    cl,cl
  41a3f6:	sahf   
  41a3f7:	pop    ecx
  41a3f8:	nop
  41a3f9:	xchg   DWORD PTR [ebx+edx*8+0x4c],esp
  41a3fd:	xchg   esi,eax
  41a3fe:	xchg   edx,eax
  41a3ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a400:	dec    eax
  41a401:	and    BYTE PTR [ebp-0x1b],dl
  41a404:	mov    dh,0xe6
  41a406:	sbb    esi,DWORD PTR [edi-0x7190c87a]
  41a40c:	in     eax,0x5f
  41a40e:	inc    ebp
  41a40f:	inc    eax
  41a410:	imul   esp,DWORD PTR [eax+0x32042bd3],0xb6186e04
  41a41a:	xor    ecx,DWORD PTR [eax]
  41a41c:	lock inc edx
  41a41e:	xchg   esi,eax
  41a41f:	xchg   ebx,eax
  41a420:	call   0x7de6454
  41a425:	call   0x2a3b:0x4abde7c1
  41a42c:	add    al,0xad
  41a42e:	pop    ss
  41a42f:	les    esi,FWORD PTR [edx+0x4d]
  41a432:	ficom  WORD PTR [esi]
  41a434:	add    BYTE PTR [edx],ch
  41a436:	dec    ebx
  41a437:	mov    DWORD PTR [ecx-0x3f],ebp
  41a43a:	imul   esp,DWORD PTR [eax+ebx*1+0x5d],0xffffffe4
  41a43f:	inc    edi
  41a440:	call   0x5503c076
  41a445:	push   eax
  41a446:	stos   DWORD PTR es:[edi],eax
  41a447:	leave  
  41a448:	xchg   esp,eax
  41a449:	mov    ch,BYTE PTR [edi-0xd6d5e35]
  41a44f:	ins    BYTE PTR es:[edi],dx
  41a450:	mov    ah,0xae
  41a452:	cwde   
  41a453:	pop    ecx
  41a454:	xor    al,0x30
  41a456:	and    al,BYTE PTR [eiz*4-0x7aa440bf]
  41a45d:	push   0xea827418
  41a462:	adc    esi,edx
  41a464:	ins    BYTE PTR es:[edi],dx
  41a465:	xchg   DWORD PTR [ebx+0x56],edx
  41a468:	push   ds
  41a469:	add    al,0x14
  41a46b:	add    al,bh
  41a46d:	cmp    bl,dl
  41a46f:	or     eax,0xf5655a3a
  41a474:	push   0x73ef4cd9
  41a479:	adc    DWORD PTR es:[ecx],ebp
  41a47c:	jne    0x41a4ed
  41a47e:	lods   eax,DWORD PTR ds:[esi]
  41a47f:	jbe    0x41a446
  41a481:	add    ebx,esp
  41a483:	(bad)  
  41a484:	(bad)  
  41a485:	mov    bl,0x3c
  41a487:	adc    al,0xc6
  41a489:	lea    esi,[esi+0x5a]
  41a48c:	jle    0x3a068a1a
  41a492:	ins    BYTE PTR es:[edi],dx
  41a493:	jb     0x41a419
  41a495:	nop
  41a496:	std    
  41a497:	fimul  DWORD PTR [edi+0x1]
  41a49a:	cli    
  41a49b:	push   esp
  41a49c:	inc    edx
  41a49d:	daa    
  41a49e:	bound  esp,QWORD PTR [esi+0xe]
  41a4a1:	in     eax,0xa4
  41a4a3:	mov    DWORD PTR [esi+0x12],esp
  41a4a6:	fwait
  41a4a7:	pop    esi
  41a4a8:	jl     0x41a46c
  41a4aa:	push   0x9ea1ddf8
  41a4af:	add    DWORD PTR [ebp+0x33],edx
  41a4b2:	push   ebx
  41a4b3:	ficomp DWORD PTR [eax+0x34]
  41a4b6:	(bad)  
  41a4b7:	sar    DWORD PTR [edi+0x77e8f7a7],1
  41a4bd:	and    DWORD PTR [esp+ecx*1+0x77f62b7f],edx
  41a4c4:	cdq    
  41a4c5:	and    eax,0xe3564e11
  41a4ca:	push   esi
  41a4cb:	sub    al,0xa7
  41a4cd:	test   DWORD PTR [ebx],edx
  41a4cf:	loopne 0x41a4a3
  41a4d1:	arpl   WORD PTR [ecx],ax
  41a4d3:	ror    DWORD PTR ds:0xc8ee118b,1
  41a4d9:	push   cs
  41a4da:	out    0xea,eax
  41a4dc:	rcl    DWORD PTR [edi],0x8a
  41a4df:	gs cli 
  41a4e1:	or     esp,ecx
  41a4e3:	fwait
  41a4e4:	push   ebp
  41a4e5:	xor    eax,0xa0785371
  41a4ea:	mov    ds:0x7ff95b4f,eax
  41a4ef:	pop    esp
  41a4f0:	mov    ds:0x4162b6ec,eax
  41a4f5:	and    ebx,esi
  41a4f7:	fwait
  41a4f8:	mov    al,ds:0xa6a389dd
  41a4fd:	mov    ebx,0xf0e94bc7
  41a502:	xchg   edx,eax
  41a503:	fwait
  41a504:	lahf   
  41a505:	push   esp
  41a506:	push   ebx
  41a507:	dec    esp
  41a508:	pop    esp
  41a509:	inc    ebx
  41a50a:	dec    edi
  41a50b:	mov    ecx,0x145febf8
  41a510:	cmp    BYTE PTR [eax+0x5407b4c2],al
  41a516:	push   esp
  41a517:	pop    ebp
  41a518:	stos   DWORD PTR es:[edi],eax
  41a519:	sti    
  41a51a:	pop    ecx
  41a51b:	pop    es
  41a51c:	dec    edi
  41a51d:	into   
  41a51e:	idiv   ebx
  41a520:	jnp    0x41a53c
  41a522:	ds mov esi,0x1a014ccf
  41a528:	shl    DWORD PTR [ebx],cl
  41a52a:	mov    ds:0xc70d9551,al
  41a52f:	jecxz  0x41a563
  41a531:	jmp    0xf3d4:0xbc3fa4f8
  41a538:	fcmovne st,st(7)
  41a53a:	add    bl,BYTE PTR [esi-0x485dcad8]
  41a540:	repnz aam 0xb0
  41a543:	push   ebx
  41a544:	in     eax,0xe6
  41a546:	stos   BYTE PTR es:[edi],al
  41a547:	add    eax,DWORD PTR [eax-0x630dbb09]
  41a54d:	mov    ah,0xbf
  41a54f:	into   
  41a550:	out    dx,al
  41a551:	clc    
  41a552:	pop    ecx
  41a553:	inc    esp
  41a554:	in     al,dx
  41a555:	retf   
  41a556:	cmp    eax,0x50fbd770
  41a55b:	mov    ds:0xe9e8b827,al
  41a560:	cmp    DWORD PTR [eax],edi
  41a562:	or     eax,0xbff91dba
  41a567:	das    
  41a568:	sahf   
  41a569:	push   eax
  41a56a:	pop    esi
  41a56b:	mov    eax,0xdddf635b
  41a570:	pop    ss
  41a571:	rcl    DWORD PTR ss:[ebx],1
  41a574:	adc    eax,0xc4bba65b
  41a579:	and    ebp,ebp
  41a57b:	sbb    BYTE PTR [edx+0x7e],bh
  41a57e:	je     0x41a501
  41a580:	loope  0x41a531
  41a582:	mov    ah,0x4a
  41a584:	rcr    DWORD PTR [esp+ebp*1-0x5fb728a],cl
  41a58b:	fwait
  41a58c:	push   edx
  41a58d:	or     eax,0x75486319
  41a592:	cmp    ecx,DWORD PTR [edx+0x3]
  41a595:	and    eax,0x75fd2f33
  41a59a:	sbb    al,0x7e
  41a59c:	inc    ebx
  41a59d:	mov    ah,0x47
  41a59f:	daa    
  41a5a0:	shl    DWORD PTR [esi-0x5b],1
  41a5a3:	stos   BYTE PTR es:[edi],al
  41a5a4:	and    BYTE PTR [eax-0x3f78db41],0x8f
  41a5ab:	pusha  
  41a5ac:	lea    ebx,[ebp+0x1af0b7c4]
  41a5b2:	xchg   ebx,eax
  41a5b3:	nop
  41a5b4:	xor    eax,0xd5c494f8
  41a5b9:	add    cl,BYTE PTR [eax+0x329b8fba]
  41a5bf:	loopne 0x41a5a8
  41a5c1:	(bad)  
  41a5c2:	jmp    0x377:0x5837b579
  41a5c9:	pushf  
  41a5ca:	pop    ebp
  41a5cb:	mov    ecx,0xc081b12d
  41a5d0:	mov    esi,0xa8d6eec1
  41a5d5:	and    DWORD PTR [ebx+0x76],0xf6399421
  41a5dc:	mov    edx,0x77ba469e
  41a5e1:	imul   ecx,DWORD PTR [eax+ebx*1-0x59],0x1231e854
  41a5e9:	into   
  41a5ea:	out    0x8c,eax
  41a5ec:	in     eax,dx
  41a5ed:	adc    eax,DWORD PTR [esi+ebx*8]
  41a5f0:	ds inc ecx
  41a5f2:	in     eax,dx
  41a5f3:	pop    edi
  41a5f4:	sub    dh,BYTE PTR [ecx-0x24]
  41a5f7:	pop    es
  41a5f8:	xor    BYTE PTR [esi-0xd031d70],ch
  41a5fe:	jg     0x41a595
  41a600:	aaa    
  41a601:	xor    eax,0x138bd23b
  41a606:	adc    eax,0x16dc081e
  41a60b:	push   ss
  41a60c:	pop    edi
  41a60d:	or     ebx,DWORD PTR [ebx]
  41a60f:	mov    ebp,0xdb85ae7b
  41a614:	lahf   
  41a615:	cld    
  41a616:	cmp    DWORD PTR ds:0x3a917d00,esi
  41a61c:	dec    ebp
  41a61d:	retf   
  41a61e:	xchg   ebx,eax
  41a61f:	ja     0x41a5e3
  41a621:	mov    ecx,0x9851aab4
  41a626:	(bad)  
  41a627:	dec    edx
  41a628:	cmc    
  41a629:	imul   edx,edx,0xb1dfbe5d
  41a62f:	xor    esp,ebx
  41a631:	ins    BYTE PTR es:[edi],dx
  41a632:	jae    0x41a5d3
  41a634:	jbe    0x41a680
  41a636:	rol    DWORD PTR [ebx],1
  41a638:	mov    eax,ds:0xa77198a
  41a63d:	fcmovnbe st,st(3)
  41a63f:	retf   
  41a640:	rcl    bh,1
  41a642:	dec    ebx
  41a643:	mov    ds,WORD PTR [ecx+edi*8+0x45]
  41a647:	mov    al,ds:0x72a60b47
  41a64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a64d:	shl    DWORD PTR [esi],cl
  41a64f:	push   ebx
  41a650:	dec    ebp
  41a651:	mov    ebp,0xc0963de6
  41a656:	mov    eax,0xaeb68c42
  41a65b:	jne    0x41a6b9
  41a65d:	dec    esi
  41a65e:	into   
  41a65f:	pop    esi
  41a660:	or     BYTE PTR [edi+0x18b4e8f5],bh
  41a666:	aaa    
  41a667:	in     eax,0x9d
  41a669:	mov    eax,0xe50a2664
  41a66e:	out    dx,eax
  41a66f:	adc    eax,edx
  41a671:	jbe    0x41a67a
  41a673:	imul   ecx,ecx,0x64
  41a676:	loopne 0x41a61d
  41a678:	dec    ebp
  41a679:	push   esp
  41a67a:	enter  0x4784,0x5e
  41a67e:	fcmove st,st(0)
  41a680:	push   ebp
  41a681:	mov    bh,0x5e
  41a683:	mov    esi,0xf572746b
  41a688:	inc    esi
  41a689:	cmp    dh,BYTE PTR [esi]
  41a68b:	sub    eax,0xdc921f5f
  41a690:	or     BYTE PTR [ebx-0x53],dl
  41a693:	push   0x30
  41a695:	vorps  xmm0,xmm1,XMMWORD PTR [eax+0x57]
  41a69a:	(bad)  
  41a69b:	into   
  41a69c:	es ins DWORD PTR es:[edi],dx
  41a69e:	jecxz  0x41a696
  41a6a0:	mov    bh,0xd9
  41a6a2:	inc    eax
  41a6a3:	ret    
  41a6a4:	test   DWORD PTR gs:[bp-0x12e4],eax
  41a6aa:	inc    esp
  41a6ab:	(bad)  
  41a6ad:	fiadd  DWORD PTR [edi+0x11]
  41a6b0:	iret   
  41a6b1:	rcr    DWORD PTR [edx+edi*2],cl
  41a6b4:	mov    edi,0xcc0492a4
  41a6b9:	push   edx
  41a6ba:	dec    esp
  41a6bb:	xchg   ebx,eax
  41a6bc:	retf   
  41a6bd:	push   0x9
  41a6bf:	xchg   edi,eax
  41a6c0:	adc    DWORD PTR [ecx+0x45],0xffffffa7
  41a6c4:	in     eax,0x7c
  41a6c6:	dec    esi
  41a6c7:	aad    0xf4
  41a6c9:	repnz cmp al,0xfe
  41a6cd:	loop   0x41a6e4
  41a6cf:	dec    esp
  41a6d0:	add    ecx,edi
  41a6d2:	sti    
  41a6d3:	daa    
  41a6d4:	xchg   DWORD PTR [eax-0x2c02534c],edx
  41a6da:	test   al,0x42
  41a6dc:	and    edi,DWORD PTR ds:0xd810ca83
  41a6e2:	sbb    eax,0xbc6a9346
  41a6e7:	rcr    DWORD PTR [esp-0x181ea739],1
  41a6ee:	in     eax,dx
  41a6ef:	jp     0x41a6d8
  41a6f1:	mov    esp,0xd04e3cdc
  41a6f6:	lahf   
  41a6f7:	cli    
  41a6f8:	outs   dx,DWORD PTR ds:[esi]
  41a6f9:	jmp    0xe702:0xda5147a0
  41a700:	hlt    
  41a701:	mov    ds:0xffe0d0b2,eax
  41a706:	retf   0x8d0e
  41a709:	push   es
  41a70a:	fsqrt  
  41a70c:	repnz pop ecx
  41a70e:	fistp  QWORD PTR [edi]
  41a710:	in     al,0x28
  41a712:	iret   
  41a713:	and    BYTE PTR [ecx-0x575a18eb],bl
  41a719:	xchg   DWORD PTR [ebp+0x4b742009],esp
  41a71f:	(bad)  
  41a720:	mov    ecx,0xbf03182e
  41a725:	loope  0x41a740
  41a727:	icebp  
  41a728:	cmp    eax,0xee0d0329
  41a72d:	cmovb  edx,ecx
  41a730:	pop    ds
  41a731:	or     DWORD PTR [esi+0x6f],0x74
  41a735:	sub    BYTE PTR [ebp+0x3b],dh
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	pushf  
  41a73f:	lods   eax,DWORD PTR ds:[esi]
  41a740:	xor    eax,0x123f960
  41a745:	add    al,bh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ecx-0x48600a9c],bl
  41a74f:	fwait
  41a750:	(bad)  
  41a751:	out    0xea,eax
  41a753:	mov    edi,cs
  41a755:	push   esp
  41a756:	jae    0x41a736
  41a758:	push   cs
  41a759:	sbb    eax,0xd114d82c
  41a75e:	sbb    edx,DWORD PTR [edi+0x32]
  41a761:	xchg   esp,eax
  41a762:	xchg   edi,eax
  41a763:	or     al,0x78
  41a765:	xchg   ebp,eax
  41a766:	xor    eax,DWORD PTR [edi+eiz*4+0x4a6fb0c1]
  41a76d:	imul   edi,ebx,0x3e
  41a770:	jmp    0x5da93c79
  41a775:	lds    edx,FWORD PTR [ebx-0x70]
  41a778:	jl     0x41a732
  41a77a:	cdq    
  41a77b:	jo     0x41a7a6
  41a77d:	shl    dh,1
  41a77f:	mov    ebx,0x610a6208
  41a784:	pop    es
  41a785:	sbb    BYTE PTR [edx],dl
  41a787:	pusha  
  41a788:	jmp    FWORD PTR [eax-0x28]
  41a78b:	ficomp WORD PTR [ebp+ebp*8+0x4da35d14]
  41a792:	out    0x59,eax
  41a794:	xchg   edx,eax
  41a795:	mov    edi,0x15b4cb3c
  41a79a:	lea    ebx,[esi-0x1b]
  41a79d:	shl    cl,0x9
  41a7a0:	dec    ebx
  41a7a1:	pop    ebp
  41a7a2:	in     eax,0x7a
  41a7a4:	sub    dh,BYTE PTR ds:[esi]
  41a7a7:	jno    0x41a813
  41a7a9:	mov    eax,ds:0xa3f11bdc
  41a7ae:	sbb    dh,0xdf
  41a7b1:	add    edi,DWORD PTR [edx-0x2]
  41a7b4:	xchg   edi,eax
  41a7b5:	jle    0x41a81e
  41a7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b8:	pop    es
  41a7b9:	inc    esi
  41a7ba:	(bad)  
  41a7bb:	jl     0x41a75b
  41a7bd:	and    dl,BYTE PTR [eax]
  41a7bf:	shl    cl,cl
  41a7c1:	ret    0xd576
  41a7c4:	lods   al,BYTE PTR ds:[esi]
  41a7c5:	lahf   
  41a7c6:	inc    ebx
  41a7c7:	or     DWORD PTR [eax-0x39],ecx
  41a7ca:	or     BYTE PTR [edx],bl
  41a7cc:	gs faddp st(1),st
  41a7cf:	jnp    0x41a829
  41a7d1:	bound  ebx,QWORD PTR [eax]
  41a7d3:	pushf  
  41a7d4:	jo     0x41a7a8
  41a7d6:	mov    esp,0x222d342f
  41a7db:	pop    es
  41a7dc:	dec    esp
  41a7dd:	mov    ch,0x0
  41a7df:	xor    ch,al
  41a7e1:	mov    bl,0x9
  41a7e3:	and    edx,DWORD PTR [esp+edx*8+0x77]
  41a7e7:	ret    
  41a7e8:	or     eax,0x3de473dc
  41a7ed:	mov    dl,0xc3
  41a7ef:	sahf   
  41a7f0:	cdq    
  41a7f1:	xchg   edi,eax
  41a7f2:	pop    ecx
  41a7f3:	jmp    0x41a809
  41a7f5:	cmp    ebp,DWORD PTR [ecx-0xbe1d4ff]
  41a7fb:	xchg   edi,eax
  41a7fc:	iret   
  41a7fd:	add    dh,BYTE PTR [eax+ebp*8]
  41a800:	pop    esi
  41a801:	add    ebp,DWORD PTR ds:0x803c7c52
  41a807:	add    DWORD PTR [eax-0x2e],ecx
  41a80a:	mov    DWORD PTR [esi],edi
  41a80c:	stos   DWORD PTR es:[edi],eax
  41a80d:	push   es
  41a80e:	fmul   st(2),st
  41a810:	push   eax
  41a811:	sub    al,0xfa
  41a813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a814:	adc    DWORD PTR [esi],ebx
  41a816:	push   esi
  41a817:	lock mov DWORD PTR [esi+0x38b618bd],ecx
  41a81e:	inc    edi
  41a81f:	ret    0x50af
  41a822:	ja     0x41a897
  41a824:	push   edx
  41a825:	outs   dx,BYTE PTR ds:[esi]
  41a826:	out    0xae,eax
  41a828:	(bad)  
  41a82a:	retf   0x109c
  41a82d:	pop    ebx
  41a82e:	loop   0x41a866
  41a830:	push   esp
  41a831:	pop    esi
  41a832:	mov    BYTE PTR [ebx-0x7e17eaf7],cl
  41a838:	push   eax
  41a839:	adc    BYTE PTR [eax+0x47],ah
  41a83c:	push   ds
  41a83d:	adc    DWORD PTR [edx],ebx
  41a83f:	sbb    ebp,DWORD PTR [ebx-0x26e72e80]
  41a845:	pop    edi
  41a846:	inc    edi
  41a847:	fwait
  41a848:	pusha  
  41a849:	icebp  
  41a84a:	add    dh,al
  41a84c:	nop
  41a84d:	fimul  DWORD PTR [ebx]
  41a84f:	aas    
  41a850:	aad    0x11
  41a852:	loop   0x41a8d2
  41a854:	dec    eax
  41a855:	inc    eax
  41a856:	cmp    ah,0xb0
  41a859:	mov    eax,ds:0x7f63e68d
  41a85e:	push   cs
  41a85f:	inc    ecx
  41a860:	mov    cl,0xaf
  41a862:	sub    DWORD PTR [eax],edi
  41a864:	jl     0x41a87d
  41a866:	loop   0x41a8cd
  41a868:	inc    ebx
  41a869:	push   ds
  41a86a:	push   esp
  41a86b:	lea    ebx,[eax-0x50]
  41a86e:	add    DWORD PTR [edx],eax
  41a870:	outs   dx,BYTE PTR ds:[esi]
  41a871:	pop    ds
  41a872:	ss mov esi,ecx
  41a875:	mov    al,ds:0x22b41ac5
  41a87a:	cmp    cl,dl
  41a87c:	addr16 loopne 0x41a8f0
  41a87f:	push   ecx
  41a880:	(bad)  [ebx-0x12]
  41a883:	(bad)  
  41a884:	clc    
  41a885:	inc    esi
  41a886:	mov    WORD PTR [edi-0x141444e0],?
  41a88c:	stc    
  41a88d:	dec    esi
  41a88e:	cld    
  41a88f:	loop   0x41a902
  41a891:	retf   0x2a79
  41a894:	pop    edi
  41a895:	std    
  41a896:	cld    
  41a897:	cld    
  41a898:	push   esi
  41a899:	mov    dh,0x2a
  41a89b:	sbb    al,0xc9
  41a89d:	pop    ecx
  41a89e:	jo     0x41a892
  41a8a0:	in     al,0x40
  41a8a2:	dec    ebx
  41a8a3:	pop    esp
  41a8a5:	adc    esp,esi
  41a8a7:	push   es
  41a8a8:	(bad)
  41a8ac:	push   esi
  41a8ad:	lds    sp,DWORD PTR [esi]
  41a8b0:	mov    ds:0x86cdbf1f,eax
  41a8b5:	mov    ebx,0x2f5338d4
  41a8ba:	sbb    dh,BYTE PTR [edx]
  41a8bc:	cwde   
  41a8bd:	cmp    eax,0x90a1c1a7
  41a8c2:	rol    DWORD PTR [edx+0x72ad26f9],1
  41a8c8:	js     0x41a8c4
  41a8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8cb:	int    0x7
  41a8cd:	adc    edi,DWORD PTR [edx]
  41a8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d0:	(bad)  
  41a8d1:	lock mov ch,0x5d
  41a8d4:	fwait
  41a8d5:	push   0xffffffd8
  41a8d7:	lods   eax,DWORD PTR ds:[esi]
  41a8d8:	xchg   ecx,eax
  41a8d9:	mov    ?,WORD PTR [edx+0x36]
  41a8dc:	and    eax,esp
  41a8de:	dec    ebx
  41a8df:	sub    BYTE PTR [edx-0x4a],0xf9
  41a8e3:	lea    ecx,[eax-0x4d3f978f]
  41a8e9:	and    bh,BYTE PTR [edi+ecx*2+0x7f1fc0f3]
  41a8f0:	dec    ebp
  41a8f1:	push   ebx
  41a8f2:	fidiv  WORD PTR [eax+0x49]
  41a8f5:	pop    esi
  41a8f6:	jge    0x41a969
  41a8f8:	or     dh,BYTE PTR [ebx+0x3cbf64e9]
  41a8fe:	xor    al,0x2a
  41a900:	aad    0xda
  41a902:	test   dl,ah
  41a904:	leave  
  41a905:	pop    ebp
  41a906:	ret    
  41a907:	push   0x16
  41a909:	ds mov ebx,0x5049c4ed
  41a90f:	retf   
  41a910:	ins    DWORD PTR es:[edi],dx
  41a911:	lock imul ebx,DWORD PTR [ebp+eiz*2+0x2a],0x62
  41a917:	pop    edx
  41a918:	dec    ebp
  41a919:	rcr    BYTE PTR [edi-0x4f],cl
  41a91c:	push   ebp
  41a91d:	or     esi,DWORD PTR [esi]
  41a91f:	mov    ds:0xd7b4450d,al
  41a924:	jne    0x41a8b8
  41a926:	(bad)  
  41a927:	in     al,dx
  41a928:	dec    ecx
  41a929:	jae    0x41a9aa
  41a92b:	or     al,0x15
  41a92d:	int    0x1e
  41a92f:	pushf  
  41a930:	gs cld 
  41a932:	mov    ds:0x91510e62,eax
  41a937:	xchg   ecx,eax
  41a938:	icebp  
  41a939:	or     eax,0x6a9f49b7
  41a93f:	xchg   edi,eax
  41a940:	lods   al,BYTE PTR ds:[esi]
  41a941:	pop    eax
  41a942:	pop    eax
  41a943:	in     al,0xb3
  41a945:	ins    DWORD PTR es:[edi],dx
  41a946:	sbb    ebx,edx
  41a948:	dec    edi
  41a949:	arpl   ax,bp
  41a94b:	mov    esp,0xb543d1ff
  41a950:	sub    esp,DWORD PTR [ebp+0x43]
  41a953:	std    
  41a954:	sbb    al,0xcd
  41a956:	sbb    eax,0xe6559c6f
  41a95b:	ret    
  41a95c:	je     0x41a8df
  41a95e:	int3   
  41a95f:	jg     0x41a961
  41a961:	popf   
  41a962:	inc    esi
  41a963:	adc    esi,ebp
  41a965:	in     al,0x68
  41a967:	in     eax,0xc4
  41a969:	sbb    al,0xbd
  41a96b:	(bad)  
  41a96c:	out    0x4a,al
  41a96e:	pop    esp
  41a96f:	cli    
  41a970:	and    DWORD PTR [ebp+edi*4-0x7a],ebx
  41a974:	push   0x2e
  41a976:	sub    ch,bl
  41a978:	jg     0x41a97b
  41a97a:	cmp    dl,BYTE PTR [edi]
  41a97c:	pusha  
  41a97d:	jbe    0x41a914
  41a97f:	sti    
  41a980:	xor    BYTE PTR [ecx+edi*1+0x12e43c88],ah
  41a987:	nop
  41a988:	test   eax,0x152cbfd5
  41a98d:	in     eax,0x3
  41a98f:	inc    edx
  41a990:	scas   al,BYTE PTR es:[edi]
  41a991:	dec    esi
  41a992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a993:	xchg   ebx,eax
  41a994:	pop    edx
  41a995:	es pop es
  41a997:	mov    dl,0x2d
  41a999:	sub    al,0x4d
  41a99b:	jne    0x41a98b
  41a99d:	mov    BYTE PTR [edx-0x7f],ch
  41a9a0:	xor    dh,BYTE PTR [eax+0x9]
  41a9a3:	fwait
  41a9a4:	sub    al,0xe2
  41a9a6:	call   0x3c0f:0x54944f9c
  41a9ad:	pop    ebp
  41a9ae:	sub    edi,DWORD PTR [edx-0x63]
  41a9b1:	adc    dl,BYTE PTR [edx-0x7ebfe82]
  41a9b7:	mov    ah,0x28
  41a9b9:	mov    ebp,0x278ba630
  41a9be:	(bad)  
  41a9bf:	(bad)  [ecx]
  41a9c1:	dec    esi
  41a9c2:	mov    ss,ebp
  41a9c4:	nop
  41a9c5:	fist   WORD PTR [esi-0x6911a18e]
  41a9cb:	push   ecx
  41a9cc:	jecxz  0x41a9f3
  41a9ce:	xor    eax,0xb5f818b8
  41a9d3:	idiv   DWORD PTR [ebx+0x3ca283be]
  41a9d9:	cmc    
  41a9da:	sub    bl,bl
  41a9dc:	into   
  41a9dd:	dec    esi
  41a9de:	arpl   WORD PTR [edi+0x69d580ce],cx
  41a9e4:	push   cs
  41a9e5:	lock jp 0x41a9e7
  41a9e8:	(bad)  
  41a9e9:	fdivp  st(4),st
  41a9eb:	adc    eax,0xfdd75cee
  41a9f0:	(bad)  [ecx+edx*8]
  41a9f3:	(bad)  
  41a9f5:	sub    DWORD PTR [ebp+esi*2+0x3f1d0930],esp
  41a9fc:	xchg   ebp,eax
  41a9fd:	repz rol BYTE PTR [eax],cl
  41aa00:	and    al,0xfb
  41aa02:	shl    BYTE PTR [eax+eax*1],1
  41aa05:	sub    al,BYTE PTR [edx+ecx*4+0x22]
  41aa09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa0a:	(bad)  
  41aa0b:	repnz retf 
  41aa0d:	int3   
  41aa0e:	jns    0x41aa74
  41aa10:	mov    bh,0x31
  41aa12:	or     esi,esi
  41aa14:	sub    BYTE PTR [ebp-0x32],cl
  41aa17:	and    eax,0x69cb4ff2
  41aa1c:	popa   
  41aa1d:	push   ds
  41aa1e:	fidiv  WORD PTR [esi+0x7191c513]
  41aa24:	push   ss
  41aa25:	std    
  41aa26:	dec    edi
  41aa27:	mov    dh,0xf1
  41aa29:	mov    al,ds:0x5fca25ce
  41aa2e:	or     dh,dh
  41aa30:	push   edi
  41aa31:	fdivr  DWORD PTR [esi]
  41aa33:	call   0xbac28d74
  41aa38:	push   ss
  41aa39:	xchg   ecx,eax
  41aa3a:	push   edx
  41aa3b:	mov    ah,0xb9
  41aa3d:	sub    al,0x84
  41aa3f:	pushf  
  41aa40:	push   0xffffffc6
  41aa42:	sbb    ah,cl
  41aa44:	adc    DWORD PTR [ecx-0x26cc19fb],esi
  41aa4a:	xor    al,0x3e
  41aa4c:	jl     0x41aa73
  41aa4e:	jbe    0x41aa03
  41aa50:	inc    ecx
  41aa51:	(bad)  
  41aa52:	mov    ebx,0xee5f8655
  41aa57:	pop    ebp
  41aa58:	adc    al,0x65
  41aa5a:	jmp    0x5c26:0x490c4d6f
  41aa61:	xchg   BYTE PTR [edx+0x7e],dl
  41aa64:	xchg   esp,eax
  41aa65:	lahf   
  41aa66:	ficomp WORD PTR [esi]
  41aa68:	adc    edi,edi
  41aa6a:	cld    
  41aa6b:	jg     0x41aae3
  41aa6d:	sbb    eax,0xbc0cc7db
  41aa72:	test   DWORD PTR [ecx],edi
  41aa74:	addr16 pop edx
  41aa76:	dec    esp
  41aa77:	es inc esp
  41aa79:	out    0xfb,eax
  41aa7b:	push   ds
  41aa7c:	mov    bl,BYTE PTR [ebp-0x617f05f4]
  41aa82:	sti    
  41aa83:	mov    BYTE PTR [edi+0x65],ch
  41aa86:	mov    cs,esi
  41aa88:	in     al,0xda
  41aa8a:	and    al,0x65
  41aa8c:	push   ss
  41aa8d:	fistp  DWORD PTR [esi]
  41aa8f:	dec    edi
  41aa90:	cmp    eax,0x564492a9
  41aa95:	sub    BYTE PTR ss:0xcfd106b,ch
  41aa9c:	mov    ch,0x6
  41aa9e:	mov    esi,0x64087076
  41aaa3:	xchg   ebx,eax
  41aaa4:	cmp    DWORD PTR [esi-0x74],esp
  41aaa7:	cmp    al,0xe6
  41aaa9:	stc    
  41aaaa:	or     edx,edi
  41aaac:	pop    ebp
  41aaad:	inc    esp
  41aaae:	adc    al,BYTE PTR [eax-0x17]
  41aab1:	pop    ebx
  41aab2:	or     DWORD PTR [ebp-0x59],0x7fc20d68
  41aab9:	dec    dh
  41aabb:	out    dx,eax
  41aabc:	das    
  41aabd:	leave  
  41aabe:	outs   dx,DWORD PTR ds:[esi]
  41aabf:	neg    DWORD PTR [edx-0x18f50e20]
  41aac5:	pop    edi
  41aac6:	and    BYTE PTR [edx-0x4d],ch
  41aac9:	jno    0x41aad4
  41aacb:	adc    DWORD PTR [edx],eax
  41aacd:	xchg   ebp,eax
  41aace:	adc    BYTE PTR [ecx+0x40],cl
  41aad1:	xor    al,0x95
  41aad3:	inc    edx
  41aad4:	pushw  es
  41aad6:	dec    ebp
  41aad7:	mov    ah,BYTE PTR [ebx+ecx*8-0x44]
  41aadb:	shr    DWORD PTR [ecx-0x10251a55],1
  41aae1:	test   DWORD PTR [ebx+0xeae4b16],0xa27fc4f7
  41aaeb:	xor    DWORD PTR [esp+eiz*4-0x1e],ebp
  41aaef:	mov    edi,0x6a84af82
  41aaf4:	or     eax,DWORD PTR [edx]
  41aaf6:	js     0x41aaed
  41aaf8:	test   eax,0x6062a3cb
  41aafd:	ins    DWORD PTR es:[edi],dx
  41aafe:	sti    
  41aaff:	jo     0x41ab7e
  41ab01:	out    0x8d,eax
  41ab03:	pop    eax
  41ab04:	pop    ds
  41ab05:	sbb    ah,BYTE PTR [edi]
  41ab07:	pop    edx
  41ab08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab09:	in     eax,dx
  41ab0a:	sub    eax,0x3c84dc86
  41ab0f:	bswap  esi
  41ab11:	mov    dh,0x11
  41ab13:	scas   al,BYTE PTR es:[edi]
  41ab14:	std    
  41ab15:	xchg   ebx,eax
  41ab16:	outs   dx,BYTE PTR ds:[esi]
  41ab17:	mov    ecx,0xe0666a5f
  41ab1c:	jmp    FWORD PTR [ebx+0x2127343b]
  41ab22:	pop    ecx
  41ab23:	test   dh,dh
  41ab25:	or     bl,BYTE PTR [eax-0x5d]
  41ab28:	inc    ecx
  41ab29:	int    0x87
  41ab2b:	(bad)  
  41ab2c:	adc    esp,DWORD PTR [ebx+0x17]
  41ab2f:	lds    esp,FWORD PTR [edx-0x4945ebe0]
  41ab35:	pop    esi
  41ab36:	pushf  
  41ab37:	push   0x39a05851
  41ab3c:	(bad)  
  41ab3d:	mov    edi,0xb3e70893
  41ab42:	and    DWORD PTR [esi+ecx*1],edi
  41ab45:	sbb    BYTE PTR [ebx-0x7f],0xab
  41ab49:	dec    eax
  41ab4a:	jae    0x41ab20
  41ab4c:	cmp    ebp,DWORD PTR [esi+0x631312f2]
  41ab52:	sti    
  41ab53:	clc    
  41ab54:	cs push edi
  41ab56:	in     eax,0x99
  41ab58:	and    eax,0x9aa74147
  41ab5d:	popf   
  41ab5e:	jo     0x41ab4b
  41ab60:	(bad)  [ebp+0x75213e06]
  41ab66:	push   ss
  41ab67:	push   0x1746edb7
  41ab6c:	add    BYTE PTR [ebx+edx*2+0x6c00d7c],ah
  41ab73:	cmp    DWORD PTR [ebx-0x5b68ec14],0xffffffaa
  41ab7a:	or     ebx,DWORD PTR [ebp-0x14]
  41ab7d:	je     0x41ab1d
  41ab7f:	lods   al,BYTE PTR ds:[esi]
  41ab80:	add    dh,BYTE PTR gs:[ecx+0x6a715aea]
  41ab87:	in     al,dx
  41ab88:	retf   0xc530
  41ab8b:	push   edi
  41ab8c:	outs   dx,BYTE PTR ds:[esi]
  41ab8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab8e:	fdiv   DWORD PTR [esi]
  41ab90:	jo     0x41ab55
  41ab92:	jb     0x41aba6
  41ab94:	push   eax
  41ab95:	in     al,dx
  41ab96:	xor    ebx,ecx
  41ab98:	dec    ebx
  41ab99:	or     esi,ebx
  41ab9b:	das    
  41ab9c:	adc    BYTE PTR [ebx+0x1a],cl
  41ab9f:	(bad)  
  41aba0:	out    0xc9,al
  41aba2:	das    
  41aba3:	sar    BYTE PTR [eax+0x27217b84],0xaa
  41abaa:	cwde   
  41abab:	sub    BYTE PTR [esp+ebp*4],al
  41abae:	xchg   BYTE PTR [esi+esi*4],ch
  41abb1:	sbb    DWORD PTR [esi+0x5b82ffa9],ecx
  41abb7:	ror    cl,0xa8
  41abba:	xor    DWORD PTR [esp+ebx*1-0x7c],esi
  41abbe:	pop    eax
  41abbf:	push   0x1cd666f1
  41abc4:	pop    ebp
  41abc5:	push   eax
  41abc6:	rol    BYTE PTR [ecx+esi*1-0x3fa06c76],0x3
  41abce:	push   edx
  41abcf:	sub    edi,DWORD PTR [ebx-0x4cddd966]
  41abd5:	inc    esi
  41abd6:	dec    ecx
  41abd7:	cmp    eax,0xee485357
  41abdc:	adc    eax,0x50f4b62
  41abe1:	ret    
  41abe2:	mov    ds:0x9a544bbb,al
  41abe7:	or     al,0x6f
  41abe9:	sub    DWORD PTR [edx+eiz*2-0x44],esi
  41abed:	cdq    
  41abee:	push   ecx
  41abef:	je     0x41ac70
  41abf1:	ins    BYTE PTR es:[edi],dx
  41abf2:	mov    BYTE PTR [ebp+0x51f85e75],dl
  41abf8:	push   edx
  41abf9:	mov    bh,0x57
  41abfb:	sbb    BYTE PTR [ebx],ah
  41abfd:	and    eax,DWORD PTR [eax-0x38]
  41ac00:	push   esi
  41ac01:	mov    eax,ds:0x69a35950
  41ac06:	imul   edi,DWORD PTR ds:0xdd590d97,0xa1305597
  41ac10:	int3   
  41ac11:	ins    BYTE PTR es:[edi],dx
  41ac12:	jmp    0x697f:0x974a7104
  41ac19:	fcom   DWORD PTR [ebp+0x1b]
  41ac1c:	mov    ch,0xc2
  41ac1e:	outs   dx,DWORD PTR ds:[esi]
  41ac1f:	sbb    eax,0xf560b756
  41ac24:	mov    ebx,0x6d844f94
  41ac29:	push   ebx
  41ac2a:	(bad)  
  41ac2c:	jecxz  0x41acad
  41ac2e:	mov    dl,ah
  41ac30:	sub    BYTE PTR [eax+ebp*2-0x4b33a045],cl
  41ac37:	push   ebp
  41ac38:	fild   WORD PTR [ebp-0x2d8a8f3e]
  41ac3e:	ror    DWORD PTR ds:0x4d4d780c,1
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	add    BYTE PTR [eax+0x28f11d2b],ah
  41ac54:	add    DWORD PTR [eax],eax
  41ac56:	clc    
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [ebp+0x680eb8e3],dl
  41ac5f:	inc    edx
  41ac60:	data16 jmp 0x41ac41
  41ac63:	out    dx,eax
  41ac64:	cmp    al,0xf5
  41ac66:	pop    ebp
  41ac67:	js     0x41ac60
  41ac69:	push   esi
  41ac6a:	aas    
  41ac6b:	xchg   ebx,eax
  41ac6c:	std    
  41ac6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac6e:	popf   
  41ac6f:	mov    dh,0xa3
  41ac71:	mov    ds:0x816d4d87,al
  41ac76:	xchg   ebp,eax
  41ac77:	imul   ecx,DWORD PTR [edx+0x5a],0xd229a0bf
  41ac7e:	push   edi
  41ac7f:	out    0x58,al
  41ac81:	leave  
  41ac82:	sbb    eax,DWORD PTR [eax]
  41ac84:	push   edi
  41ac85:	clc    
  41ac86:	sbb    al,0xb9
  41ac88:	and    eax,0x8fb655cd
  41ac8d:	mov    cl,0x75
  41ac8f:	in     eax,0xea
  41ac91:	rol    BYTE PTR [eax],cl
  41ac93:	sub    dh,BYTE PTR [eax]
  41ac95:	dec    ecx
  41ac96:	mov    esp,0xfa4abe1
  41ac9b:	mov    esp,0xeda69d94
  41aca0:	in     al,dx
  41aca1:	aas    
  41aca2:	in     al,dx
  41aca3:	inc    eax
  41aca4:	icebp  
  41aca5:	jo     0x41ac50
  41aca7:	sub    eax,0x108d86bb
  41acac:	xor    DWORD PTR [edx],edx
  41acae:	jle    0x41ac6a
  41acb0:	mov    ecx,0x48c53778
  41acb5:	ins    DWORD PTR es:[edi],dx
  41acb6:	xor    esi,DWORD PTR [esi+0x3fe1966f]
  41acbc:	f2xm1  
  41acbe:	xchg   eax,edi
  41acc0:	leave  
  41acc1:	jg     0x41ad00
  41acc3:	jbe    0x41ad3d
  41acc5:	fcom   QWORD PTR [eax-0xa75e6b5]
  41accb:	fisttp QWORD PTR [eax]
  41accd:	mov    esp,0xe2d295b9
  41acd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd3:	mov    dl,0x18
  41acd5:	adc    eax,0x38a6c5f9
  41acda:	jmp    0x93fa832e
  41acdf:	out    dx,al
  41ace0:	push   ecx
  41ace1:	push   ds
  41ace2:	pop    eax
  41ace3:	or     bl,BYTE PTR [ebp+0x3c]
  41ace6:	faddp  st(0),st
  41ace8:	cmp    bh,BYTE PTR [ebx+0x8]
  41aceb:	sub    ebp,DWORD PTR [ecx+0x22]
  41acee:	mov    cl,0xc6
  41acf0:	push   edx
  41acf1:	and    DWORD PTR [eax-0xedad36a],esp
  41acf7:	mov    eax,0x4f0b825b
  41acfc:	aad    0x2a
  41acfe:	retf   0x7ccf
  41ad01:	mov    edx,0xa74f394e
  41ad06:	scas   eax,DWORD PTR es:[edi]
  41ad07:	stos   DWORD PTR es:[edi],eax
  41ad08:	sahf   
  41ad09:	xchg   BYTE PTR [ebp+ebp*1+0x7d7e3688],ch
  41ad10:	inc    edi
  41ad11:	in     al,dx
  41ad12:	ja     0x41acb6
  41ad14:	out    dx,al
  41ad15:	mov    ebx,ds
  41ad17:	sub    cl,BYTE PTR [ebx-0x7d45e760]
  41ad1d:	pushf  
  41ad1e:	pop    ds
  41ad1f:	outs   dx,BYTE PTR ds:[esi]
  41ad20:	(bad)  
  41ad21:	xchg   esp,eax
  41ad22:	mov    ds:0xc637c53f,eax
  41ad27:	clc    
  41ad28:	data16 gs lahf 
  41ad2b:	sahf   
  41ad2c:	xchg   ebx,eax
  41ad2d:	jmp    0x64b57d2e
  41ad32:	aam    0x96
  41ad34:	cmp    DWORD PTR [ecx-0x16],esp
  41ad37:	cmp    cl,dh
  41ad39:	or     ecx,edx
  41ad3b:	sub    al,0x6c
  41ad3d:	mov    esi,0x49b9d3df
  41ad42:	push   ebx
  41ad43:	(bad)  
  41ad44:	xor    BYTE PTR [eax],ah
  41ad46:	mov    ?,WORD PTR [edx+0x21a2c8bf]
  41ad4c:	in     al,dx
  41ad4d:	fcom   QWORD PTR [ebp+0x2b]
  41ad50:	fdivr  st(6),st
  41ad52:	xchg   ecx,eax
  41ad53:	jmp    0x13ab:0x99dbd657
  41ad5a:	lods   al,BYTE PTR ds:[esi]
  41ad5b:	mov    ebp,DWORD PTR ds:0x718dd974
  41ad61:	into   
  41ad62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad63:	test   al,0x55
  41ad65:	into   
  41ad66:	push   cs
  41ad67:	cs loopne 0x41adb4
  41ad6a:	rcl    al,0x7d
  41ad6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad6e:	rcr    DWORD PTR [ecx+0x3219358f],0xe
  41ad75:	mul    dl
  41ad77:	xchg   edi,eax
  41ad78:	and    BYTE PTR [ebx+0x16ac9bf6],cl
  41ad7e:	(bad)  [edx+0x7f72d9a]
  41ad84:	out    0x61,al
  41ad86:	xchg   DWORD PTR [ebx-0x392580c7],esi
  41ad8c:	push   es
  41ad8d:	mov    ebx,0xd3b93c3c
  41ad92:	and    edi,DWORD PTR [esi]
  41ad94:	ins    BYTE PTR es:[edi],dx
  41ad95:	mov    ebp,0xa541ef82
  41ad9a:	sbb    al,0xce
  41ad9c:	mov    edx,0x5d9bdff9
  41ada1:	xor    eax,0xbdc572a6
  41ada6:	xor    BYTE PTR [ebp+eax*8-0x39],ch
  41adaa:	call   0xf575340d
  41adaf:	jg     0x41adec
  41adb1:	push   edx
  41adb2:	jg     0x41adb0
  41adb4:	loop   0x41adde
  41adb6:	repz out 0x95,eax
  41adb9:	and    al,BYTE PTR [edi-0x4c]
  41adbc:	(bad)  
  41adbd:	sub    al,0x8
  41adbf:	dec    esi
  41adc0:	popfw  
  41adc2:	and    dl,BYTE PTR [ebx]
  41adc4:	add    bl,ch
  41adc6:	add    eax,0x4129b086
  41adcb:	add    BYTE PTR ds:0x4f13a193,0xd9
  41add2:	imul   edx,DWORD PTR [esi],0x57dbfc77
  41add8:	scas   al,BYTE PTR es:[edi]
  41add9:	pop    edi
  41adda:	in     eax,0xfc
  41addc:	leave  
  41addd:	hlt    
  41adde:	lods   eax,DWORD PTR ds:[esi]
  41addf:	mov    bh,0xd7
  41ade1:	pop    ebx
  41ade2:	pop    edi
  41ade3:	mov    ecx,0xd9d9d2ef
  41ade8:	xor    ebp,esp
  41adea:	repz inc eax
  41adec:	icebp  
  41aded:	mov    bh,0x59
  41adef:	push   ds
  41adf0:	mov    ch,BYTE PTR [eax-0x7b]
  41adf3:	je     0x41ae3e
  41adf5:	mov    eax,0xb33520e8
  41adfa:	int    0xb
  41adfc:	and    esp,DWORD PTR [ecx]
  41adfe:	fnstenv [edx-0x56]
  41ae01:	fidivr WORD PTR [ecx+0x17]
  41ae04:	popa   
  41ae05:	xor    DWORD PTR [ecx],edx
  41ae07:	fiadd  DWORD PTR [ebp+0x7f]
  41ae0a:	fadd   DWORD PTR [eax-0x23]
  41ae0d:	inc    ebx
  41ae0e:	bnd jns 0x41ae4b
  41ae11:	scas   eax,DWORD PTR es:[edi]
  41ae12:	imul   edx,DWORD PTR [esi+0x46],0x2e
  41ae16:	(bad)  
  41ae17:	aam    0x6c
  41ae19:	in     eax,dx
  41ae1a:	ror    BYTE PTR [ecx],cl
  41ae1c:	sub    eax,0x50b5bfb5
  41ae21:	(bad)  
  41ae23:	out    dx,eax
  41ae24:	in     eax,dx
  41ae25:	das    
  41ae26:	xchg   esp,eax
  41ae27:	jmp    0xb67b:0xad879f16
  41ae2e:	fisub  DWORD PTR [eax+0x1b]
  41ae31:	mov    ch,0x98
  41ae33:	push   0xcc6618c6
  41ae38:	sub    BYTE PTR [ebp+0x30b019ec],dh
  41ae3e:	mov    ebp,ebx
  41ae40:	xor    BYTE PTR [eax+0xde7e09d],0x35
  41ae47:	test   al,0xc0
  41ae49:	ret    0xf85b
  41ae4c:	std    
  41ae4d:	stos   DWORD PTR es:[edi],eax
  41ae4e:	dec    esi
  41ae4f:	push   ecx
  41ae50:	lock push ebx
  41ae52:	jmp    0x41adec
  41ae54:	cld    
  41ae55:	mov    bh,0x69
  41ae57:	fstp   QWORD PTR [edx]
  41ae59:	push   esp
  41ae5a:	fnsave [edi-0x78]
  41ae5d:	push   ss
  41ae5e:	fs push 0xa
  41ae61:	in     al,0x52
  41ae63:	jns    0x41ae34
  41ae65:	mov    bl,0x78
  41ae67:	(bad)  
  41ae68:	sar    edi,0x97
  41ae6b:	or     BYTE PTR [edi+0x4ebb9c40],0xe8
  41ae72:	scas   eax,DWORD PTR es:[edi]
  41ae73:	mov    esp,0x809b7645
  41ae78:	iret   
  41ae79:	pop    edi
  41ae7a:	sti    
  41ae7b:	mov    ah,0xc7
  41ae7d:	fiadd  WORD PTR [edx]
  41ae7f:	fistp  WORD PTR [edi+eax*1]
  41ae82:	mov    DWORD PTR ds:0xbcb5be01,ecx
  41ae88:	pop    esi
  41ae89:	sti    
  41ae8a:	int3   
  41ae8b:	and    ecx,DWORD PTR [ebx+0x471ec8b7]
  41ae91:	mov    dh,0x41
  41ae93:	mov    ch,0x40
  41ae95:	out    dx,al
  41ae96:	jmp    0xe571:0x35f23adc
  41ae9d:	cld    
  41ae9e:	loop   0x41aef4
  41aea0:	loope  0x41ae90
  41aea2:	sbb    dh,dl
  41aea4:	aam    0xe7
  41aea6:	jns    0x41ae2c
  41aea8:	vmwrite esi,DWORD PTR [edi-0x2116da53]
  41aeaf:	inc    edx
  41aeb0:	addr16 xor eax,0x3566bfed
  41aeb6:	xchg   esp,eax
  41aeb7:	inc    edx
  41aeb8:	or     DWORD PTR [ebp-0x2b],0x1c
  41aebc:	in     al,dx
  41aebd:	arpl   cx,bx
  41aebf:	mov    cl,0x9a
  41aec1:	push   eax
  41aec2:	cmp    eax,0x69a92b30
  41aec7:	push   ss
  41aec8:	retf   
  41aec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeca:	xchg   ebp,eax
  41aecb:	(bad)  
  41aecc:	cld    
  41aecd:	inc    edx
  41aece:	lea    ecx,ds:0x9009f96d
  41aed4:	push   esp
  41aed5:	sti    
  41aed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aed7:	adc    eax,0x5b34bb93
  41aedc:	pop    edx
  41aedd:	cmp    al,0xed
  41aedf:	push   es
  41aee0:	lds    eax,FWORD PTR [ebx+0x40b6be07]
  41aee6:	in     eax,0x11
  41aee8:	sub    DWORD PTR [ebx],edx
  41aeea:	cmc    
  41aeeb:	pop    edi
  41aeec:	or     BYTE PTR [ecx+0x5],bh
  41aeef:	pop    ds
  41aef0:	call   0xa215:0x86bb5d41
  41aef7:	push   edi
  41aef8:	jns    0x41af35
  41aefa:	imul   eax,DWORD PTR [eax],0xffffffd3
  41aefd:	retf   0x34f0
  41af00:	fsubr  QWORD PTR [edi+0x5a129e2]
  41af06:	mov    DWORD PTR [edi],0x1fc1f8db
  41af0c:	sub    ebx,DWORD PTR [esi+eax*2-0x77659347]
  41af13:	and    DWORD PTR [eax],edi
  41af15:	loope  0x41af2a
  41af17:	fnsave [ebx+0x170129f7]
  41af1d:	sti    
  41af1e:	pop    ebp
  41af1f:	xchg   BYTE PTR [eax-0x385eca64],ch
  41af25:	lods   al,BYTE PTR ds:[esi]
  41af26:	and    DWORD PTR fs:[eax],ebp
  41af29:	mov    DWORD PTR [eax+0x29],esi
  41af2c:	pop    ecx
  41af2d:	lds    esp,FWORD PTR ds:0xb284c01a
  41af33:	retf   
  41af34:	push   es
  41af35:	mov    ah,0xc0
  41af37:	mov    edx,DWORD PTR [edi+0x4a]
  41af3a:	ja     0x41afa6
  41af3c:	xrelease xchg BYTE PTR [ecx],dl
  41af3f:	test   eax,0x9c6a068f
  41af44:	sub    eax,0x45ce61f0
  41af49:	mov    eax,0x47e2cfd6
  41af4e:	jmp    0xcc48cd88
  41af53:	retf   0x8
  41af56:	mov    ?,WORD PTR [ebx+0xf]
  41af59:	mov    esi,0xe8eb490f
  41af5e:	add    BYTE PTR [esi-0x5f],bh
  41af61:	jb     0x41af56
  41af63:	ins    DWORD PTR es:[edi],dx
  41af64:	cmp    BYTE PTR [edx],dh
  41af66:	push   cs
  41af67:	and    BYTE PTR [ebx-0x18],dh
  41af6a:	dec    eax
  41af6b:	je     0x41af95
  41af6d:	(bad)  
  41af6e:	bswap  esi
  41af70:	add    BYTE PTR [edi+ebx*1-0xf238cac],ah
  41af77:	push   esi
  41af78:	jecxz  0x41af20
  41af7a:	test   eax,0xe115c005
  41af7f:	sbb    bl,bh
  41af81:	or     BYTE PTR [esi],dh
  41af83:	jp     0x41afbf
  41af85:	push   es
  41af86:	sub    eax,0xbad8da4a
  41af8b:	cmp    DWORD PTR [eax-0x66],edi
  41af8e:	mov    ecx,esi
  41af90:	repnz and cl,dl
  41af93:	call   0x5cf73172
  41af98:	mov    ebp,0xbd5b7675
  41af9d:	in     eax,0x7
  41af9f:	adc    eax,0x3202953
  41afa4:	fnsave ds:0xe44eeb97
  41afaa:	mov    eax,ds:0x93925fb1
  41afaf:	je     0x41afd4
  41afb1:	sahf   
  41afb2:	fadd   QWORD PTR [ecx]
  41afb4:	add    DWORD PTR [edx-0x47427b01],edx
  41afba:	adc    BYTE PTR [edi],al
  41afbc:	add    esi,DWORD PTR [esi-0x69]
  41afbf:	xor    DWORD PTR [eax+edi*4+0x10],0x699a719
  41afc7:	sub    bh,BYTE PTR [esi]
  41afc9:	or     cl,al
  41afcb:	inc    esp
  41afcc:	mov    ds:0xbf19effa,eax
  41afd1:	push   eax
  41afd2:	jbe    0x41b003
  41afd4:	add    eax,0x46534dcc
  41afd9:	sub    edx,eax
  41afdb:	mov    ch,0x14
  41afdd:	icebp  
  41afde:	lods   eax,DWORD PTR ds:[esi]
  41afdf:	in     eax,dx
  41afe0:	mov    ds:0xc67ea74d,al
  41afe5:	lea    esp,[edx+0x66]
  41afe8:	and    eax,0xb60c64af
  41afed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afee:	mov    ds:0x724de33e,al
  41aff3:	in     eax,0x9f
  41aff5:	out    0x59,eax
  41aff7:	and    DWORD PTR [ebx+0x31],edx
  41affa:	or     bh,BYTE PTR [edi-0x17]
  41affd:	stos   DWORD PTR es:[edi],eax
  41affe:	and    edi,DWORD PTR [edx+0x3a14e7ab]
  41b004:	lahf   
  41b005:	mov    ecx,esi
  41b007:	sahf   
  41b008:	inc    esp
  41b009:	out    0x56,al
  41b00b:	push   es
  41b00c:	mov    eax,0xba1d9c11
  41b011:	cwde   
  41b012:	out    dx,eax
  41b013:	frstor ds:0xfab1e9ad
  41b019:	(bad)  
  41b01a:	mov    edx,0x6bdeeef2
  41b01f:	xor    al,0x50
  41b021:	and    eax,0xa9338a3d
  41b026:	push   edx
  41b027:	xchg   edi,eax
  41b028:	into   
  41b029:	iret   
  41b02a:	mov    edx,0x9f91a56d
  41b02f:	mov    ds,WORD PTR ds:0xe8a8304
  41b035:	cwde   
  41b036:	push   ecx
  41b037:	cmp    DWORD PTR [ebp+0x33],0x49
  41b03b:	mov    al,0xd1
  41b03d:	sub    ah,bh
  41b03f:	xchg   edi,eax
  41b040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b041:	jb     0x41b06d
  41b043:	push   ecx
  41b044:	or     al,BYTE PTR [eax-0x6]
  41b047:	adc    eax,0xb4fedfcc
  41b04c:	neg    edx
  41b04e:	lock dec esp
  41b050:	nop
  41b051:	xchg   ebp,eax
  41b052:	call   0xa78d:0xc83080e5
  41b059:	add    eax,0x128a93e5
  41b05e:	pop    ss
  41b05f:	xchg   esp,eax
  41b060:	push   esp
  41b061:	push   ebp
  41b062:	inc    edi
  41b063:	js     0x41b010
  41b065:	stos   BYTE PTR es:[edi],al
  41b066:	mov    al,0x27
  41b068:	xor    bh,BYTE PTR [ebx-0x1f]
  41b06b:	xor    eax,ecx
  41b06d:	mov    ecx,0xe21072dc
  41b072:	pop    edi
  41b073:	lahf   
  41b074:	dec    esp
  41b075:	add    al,0xd6
  41b077:	mov    bl,0x63
  41b079:	add    DWORD PTR [edx+eax*2+0x39],edx
  41b07d:	adc    BYTE PTR [esi-0x9b99586],0xec
  41b084:	popa   
  41b085:	jl     0x41b0a9
  41b087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b088:	aad    0xec
  41b08a:	mov    edx,0xb6bdfa9b
  41b08f:	sbb    DWORD PTR [eax],ebx
  41b091:	shl    DWORD PTR [ebx+0x1960752],1
  41b097:	neg    dl
  41b099:	inc    ebp
  41b09a:	cli    
  41b09b:	iret   
  41b09c:	aaa    
  41b09d:	retf   
  41b09e:	int    0x67
  41b0a0:	out    dx,al
  41b0a1:	loopne 0x41b0e1
  41b0a3:	cmp    al,0x7e
  41b0a5:	fnsave [ecx-0x77]
  41b0a8:	(bad)  
  41b0a9:	and    DWORD PTR [edx-0x64],ebp
  41b0ac:	aas    
  41b0ad:	popf   
  41b0ae:	aaa    
  41b0af:	lea    eax,[ebx-0x32acbf81]
  41b0b5:	aam    0x44
  41b0b7:	gs aas 
  41b0b9:	pop    es
  41b0ba:	inc    ebp
  41b0bb:	aam    0x1d
  41b0bd:	mov    bl,BYTE PTR es:[eax-0x5c]
  41b0c1:	pop    edi
  41b0c2:	jns    0x41b0d6
  41b0c4:	push   edx
  41b0c5:	xor    ecx,ebx
  41b0c7:	ja     0x41b04e
  41b0c9:	fsub   QWORD PTR [ebx-0x3c]
  41b0cc:	sub    BYTE PTR [ebx],al
  41b0ce:	bnd jne 0x41b08d
  41b0d1:	cli    
  41b0d2:	sbb    dl,bl
  41b0d4:	loopne 0x41b0e8
  41b0d6:	push   eax
  41b0d7:	ss inc ecx
  41b0d9:	leave  
  41b0da:	das    
  41b0db:	and    eax,0x34c0e48a
  41b0e0:	xor    eax,0x63ba79ad
  41b0e5:	dec    ebp
  41b0e6:	(bad)  
  41b0e7:	mov    ds:0xfdb082e2,al
  41b0ec:	inc    ecx
  41b0ed:	ins    BYTE PTR es:[edi],dx
  41b0ee:	xor    DWORD PTR [ebp+0x444ec70e],edi
  41b0f4:	and    ebx,esi
  41b0f6:	(bad)  
  41b0f7:	std    
  41b0f8:	call   0xbbf091e9
  41b0fd:	sti    
  41b0fe:	xor    bl,dl
  41b100:	call   0x6ca5:0xb341afe0
  41b107:	xchg   esp,eax
  41b108:	outs   dx,BYTE PTR ds:[esi]
  41b109:	xor    BYTE PTR [ebx],dl
  41b10b:	jmp    0x4ce7fe78
  41b110:	mov    ebp,0x390e6a7
  41b115:	mov    al,0x76
  41b117:	retf   0xeccf
  41b11a:	hlt    
  41b11b:	xor    eax,DWORD PTR [ecx-0x41]
  41b11e:	ins    BYTE PTR es:[edi],dx
  41b11f:	es mov ebp,0xd20fb16e
  41b125:	pop    es
  41b126:	pop    ds
  41b127:	inc    eax
  41b128:	sbb    dl,BYTE PTR [edx]
  41b12a:	ins    DWORD PTR es:[edi],dx
  41b12b:	or     al,BYTE PTR [ecx]
  41b12d:	cli    
  41b12e:	retf   0xcc08
  41b131:	xlat   BYTE PTR ds:[ebx]
  41b132:	and    ebx,DWORD PTR [eax-0x68497d25]
  41b138:	xor    DWORD PTR [edi+0x59],0xdb19151f
  41b13f:	out    dx,al
  41b140:	xchg   ebx,eax
  41b141:	stos   DWORD PTR es:[edi],eax
  41b142:	xor    DWORD PTR [eax+eiz*1-0x8],esi
  41b146:	ja     0x41b157
  41b148:	jecxz  0x41b0fb
  41b14a:	pop    ss
  41b14b:	test   BYTE PTR [ebp+0x699d51cd],bl
  41b151:	xchg   edx,eax
  41b152:	cld    
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	das    
  41b15f:	into   
  41b160:	add    edx,DWORD PTR [ecx+ebp*8]
  41b163:	sub    eax,0x4f80001
  41b168:	add    BYTE PTR [eax],al
  41b16a:	cmp    al,0x28
  41b16c:	jecxz  0x41b14f
  41b16e:	mov    ah,0x9c
  41b170:	ret    
  41b171:	mov    esp,0x5dbb9f1e
  41b176:	inc    ecx
  41b177:	sbb    al,0x74
  41b179:	iret   
  41b17a:	mov    eax,DWORD PTR [ecx-0x2b]
  41b17d:	inc    edx
  41b17e:	sbb    ecx,ebx
  41b180:	cli    
  41b181:	fcomi  st,st(2)
  41b183:	shl    BYTE PTR gs:[ebp+0x1618d079],0x9
  41b18b:	mov    dh,0x1b
  41b18d:	shl    BYTE PTR [ebx-0x65b02cf6],cl
  41b193:	xchg   edi,eax
  41b194:	sbb    DWORD PTR [ebx+0x11],ebx
  41b197:	sti    
  41b198:	pop    DWORD PTR [edi]
  41b19a:	ds or  al,0x1
  41b19e:	test   BYTE PTR [edx+ecx*4+0x2d],dh
  41b1a2:	mov    ah,BYTE PTR [ebx-0x12]
  41b1a5:	rcr    BYTE PTR [ebx+eax*2],1
  41b1a8:	in     eax,0xe3
  41b1aa:	mov    esi,0x74fdf7d6
  41b1af:	call   FWORD PTR [ecx-0x32482ce0]
  41b1b5:	cmp    BYTE PTR [ebp-0x161733ad],bl
  41b1bb:	jbe    0x41b1d1
  41b1bd:	scas   eax,DWORD PTR es:[edi]
  41b1be:	shr    DWORD PTR [ebx+0x74685a3e],cl
  41b1c4:	adc    ch,ch
  41b1c6:	pop    ebp
  41b1c7:	adc    DWORD PTR [edi],eax
  41b1c9:	test   al,0xca
  41b1cb:	sub    al,BYTE PTR [eax+edx*4+0x5cffc59]
  41b1d2:	xchg   esi,ecx
  41b1d4:	loop   0x41b1fa
  41b1d6:	mov    bh,0x44
  41b1d8:	outs   dx,DWORD PTR ds:[esi]
  41b1d9:	test   DWORD PTR [ebp-0x6e820e07],esi
  41b1df:	add    BYTE PTR [ebx+0x54],al
  41b1e2:	pop    ecx
  41b1e3:	ficom  DWORD PTR ds:0x9728dc51
  41b1e9:	mov    bh,0x38
  41b1eb:	inc    ebp
  41b1ec:	jne    0x41b1f4
  41b1ee:	pop    ebx
  41b1ef:	jg     0x41b22c
  41b1f1:	mov    bl,0xb
  41b1f3:	add    dh,BYTE PTR [esi+edx*2]
  41b1f6:	jmp    0x41b257
  41b1f8:	adc    DWORD PTR [ebp-0x6102dd51],ecx
  41b1fe:	xor    BYTE PTR [esp+ecx*1+0x5e2f9ec6],0x94
  41b206:	in     al,dx
  41b207:	in     al,0xf3
  41b209:	dec    edi
  41b20a:	mov    ch,BYTE PTR [eax+0x62]
  41b20d:	adc    ebx,DWORD PTR [edx]
  41b20f:	aam    0x76
  41b211:	fsubr  DWORD PTR [edi-0x6f]
  41b214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b215:	sbb    DWORD PTR [ebx+0x1673f1ca],ecx
  41b21b:	hlt    
  41b21c:	sti    
  41b21d:	shl    DWORD PTR ds:0xe8f52298,0xef
  41b224:	pusha  
  41b225:	cmp    BYTE PTR ds:0xd93b66ae,0x6c
  41b22c:	das    
  41b22d:	jl     0x41b1c0
  41b22f:	jnp    0x41b1f4
  41b231:	ror    BYTE PTR [edx+0x7c72d04c],cl
  41b237:	imul   esp,DWORD PTR [esi+0x6c2bec2],0xffffff9e
  41b23e:	aam    0x30
  41b240:	aam    0x7c
  41b242:	dec    esi
  41b243:	pusha  
  41b244:	cdq    
  41b245:	mov    bh,0x7d
  41b247:	outs   dx,BYTE PTR ds:[esi]
  41b248:	(bad)  
  41b249:	pop    esi
  41b24a:	sbb    BYTE PTR [ecx],ah
  41b24c:	dec    edx
  41b24d:	or     al,0x33
  41b24f:	sbb    BYTE PTR [ebp-0x26],al
  41b252:	mov    eax,ds:0xb2d5469a
  41b257:	sub    eax,0xe4bd8d0b
  41b25c:	mov    esp,0x78b05ad0
  41b261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b262:	mov    ah,0x6d
  41b264:	mov    ebp,0x77cab9c0
  41b269:	dec    edx
  41b26a:	xchg   esp,edi
  41b26c:	and    cl,BYTE PTR [edi]
  41b26e:	lods   al,BYTE PTR ds:[esi]
  41b26f:	(bad)  
  41b270:	loope  0x41b2be
  41b272:	inc    edx
  41b273:	iret   
  41b274:	out    dx,eax
  41b275:	in     al,dx
  41b276:	aaa    
  41b277:	cld    
  41b278:	sub    BYTE PTR [edi],bh
  41b27a:	sbb    BYTE PTR [edi],0xc0
  41b27d:	jecxz  0x41b21f
  41b27f:	test   al,0xc3
  41b281:	cs hlt 
  41b283:	and    esi,ebp
  41b285:	xor    eax,0xd7d5fb7c
  41b28a:	mov    BYTE PTR [ebx+0x7e],bh
  41b28d:	mov    ebp,0x3eb1c751
  41b292:	adc    DWORD PTR [edx],eax
  41b294:	or     ebp,DWORD PTR [ebx-0x17f5fa27]
  41b29a:	jnp    0x41b2a4
  41b29c:	add    ebx,DWORD PTR [esi+0x2c]
  41b29f:	ins    BYTE PTR es:[edi],dx
  41b2a0:	mov    dl,0xe1
  41b2a2:	jb     0x41b292
  41b2a4:	jnp    0x41b244
  41b2a6:	cwde   
  41b2a7:	cmp    al,0xdb
  41b2a9:	int3   
  41b2aa:	ror    BYTE PTR [edx+0x76],cl
  41b2ad:	push   cs
  41b2ae:	add    bh,BYTE PTR [ebx-0xbd2dcb7]
  41b2b4:	pushf  
  41b2b5:	push   0x1d14c715
  41b2ba:	add    dl,BYTE PTR [ecx-0x7f60e355]
  41b2c0:	push   cs
  41b2c1:	ja     0x41b2ef
  41b2c3:	xor    al,0x6d
  41b2c5:	or     al,BYTE PTR [edx+0x5c6a5acb]
  41b2cb:	add    al,0xe
  41b2cd:	jg     0x41b2c3
  41b2cf:	mov    dl,0xfb
  41b2d1:	mov    ebx,0x6a8e4445
  41b2d6:	mov    bl,0xb8
  41b2d8:	mov    ebx,0x424d8540
  41b2dd:	in     eax,dx
  41b2de:	xlat   BYTE PTR ds:[ebx]
  41b2df:	cli    
  41b2e0:	mov    ecx,?
  41b2e2:	je     0x41b349
  41b2e4:	inc    edi
  41b2e5:	shl    DWORD PTR [eax],1
  41b2e7:	jno    0x41b31f
  41b2e9:	test   eax,0x10b3efba
  41b2ee:	pusha  
  41b2ef:	xchg   esi,eax
  41b2f0:	pop    es
  41b2f1:	pop    es
  41b2f2:	shl    DWORD PTR [ebx-0x38],0x2
  41b2f6:	pop    ebx
  41b2f7:	test   eax,ebp
  41b2f9:	shl    DWORD PTR [edx+0x3a],1
  41b2fc:	jmp    0x41b34c
  41b2fe:	in     al,dx
  41b2ff:	xchg   ecx,eax
  41b300:	loope  0x41b2b0
  41b302:	clc    
  41b303:	sbb    BYTE PTR [edi-0x22],dl
  41b306:	es mov bl,0x23
  41b309:	rcr    BYTE PTR [ecx-0x1a887deb],1
  41b30f:	ror    DWORD PTR [esi-0x4d],cl
  41b312:	xor    al,0x6
  41b314:	push   0xc3e6753d
  41b319:	inc    eax
  41b31a:	add    eax,0x95fc0a0
  41b31f:	sar    DWORD PTR [ebp-0x26],cl
  41b322:	iret   
  41b323:	(bad)  
  41b324:	les    esp,FWORD PTR [esi-0x40]
  41b327:	lahf   
  41b328:	gs mov eax,0xcc73fc72
  41b32e:	add    eax,DWORD PTR [ecx+ebp*8]
  41b331:	pop    ss
  41b332:	je     0x41b2c4
  41b334:	shr    DWORD PTR [edi+0x2356a42e],0x30
  41b33b:	jae    0x41b3ad
  41b33d:	xchg   esp,eax
  41b33e:	xchg   ebp,eax
  41b33f:	fsubr  QWORD PTR [ebx+0x1fd06730]
  41b345:	(bad)  
  41b346:	dec    eax
  41b347:	push   ds
  41b348:	(bad)  
  41b349:	mov    cl,0x20
  41b34b:	adc    dh,BYTE PTR [ecx]
  41b34d:	sbb    eax,0x266a1a53
  41b352:	stos   DWORD PTR es:[edi],eax
  41b353:	push   esp
  41b354:	adc    esp,ebp
  41b356:	inc    ebx
  41b357:	ds xchg esp,eax
  41b359:	call   0xdcf8:0x6ae60ec6
  41b360:	sbb    DWORD PTR [edx+0x364b5373],0x33
  41b367:	(bad)  
  41b368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b369:	mov    edi,DWORD PTR [esp+eiz*8+0x45]
  41b36d:	sub    al,0x21
  41b36f:	es or  al,0xa7
  41b372:	push   edi
  41b373:	xchg   esp,eax
  41b374:	cmp    DWORD PTR [ebp-0x8],0x4f1bc8c9
  41b37b:	add    BYTE PTR [edi],ch
  41b37d:	push   edi
  41b37e:	inc    esi
  41b37f:	cmp    eax,0xa0b7e1d3
  41b384:	adc    DWORD PTR [eax+0x4a],0x22a39883
  41b38b:	ins    DWORD PTR es:[edi],dx
  41b38c:	(bad)  
  41b38d:	push   ebp
  41b38e:	fdiv   DWORD PTR [edi+0x33]
  41b391:	rol    DWORD PTR [esi+0x12d0b494],1
  41b397:	fwait
  41b398:	pop    ebp
  41b399:	pop    ebp
  41b39a:	jno    0x41b36b
  41b39c:	ss pop ebp
  41b39e:	shl    BYTE PTR [edi+ebx*8-0x43],1
  41b3a2:	cmp    DWORD PTR [ebx-0x6096bb80],esp
  41b3a8:	jecxz  0x41b33c
  41b3aa:	mov    eax,ds:0x8b6d7d33
  41b3af:	fdivr  st,st(7)
  41b3b1:	sbb    BYTE PTR [ebx+edx*2-0x9],bh
  41b3b5:	push   0x15
  41b3b7:	push   eax
  41b3b8:	and    DWORD PTR [ecx+ebx*1],0xf92664ec
  41b3bf:	xor    al,0x36
  41b3c1:	loopne 0x41b3f1
  41b3c3:	loope  0x41b41a
  41b3c5:	ins    DWORD PTR es:[edi],dx
  41b3c6:	adc    ch,ah
  41b3c8:	xchg   esi,eax
  41b3c9:	sub    DWORD PTR [eax-0x6a173ecc],edx
  41b3cf:	in     al,dx
  41b3d0:	push   eax
  41b3d1:	or     BYTE PTR [esi-0x64],dl
  41b3d4:	test   al,0x95
  41b3d6:	sbb    edi,0x33
  41b3d9:	fst    st(4)
  41b3db:	jg     0x41b38e
  41b3dd:	pop    ds
  41b3de:	imul   esi,DWORD PTR [eax-0xded78b9],0x4b3cd314
  41b3e8:	scas   eax,DWORD PTR es:[edi]
  41b3e9:	xor    BYTE PTR [ecx],0xe4
  41b3ec:	stc    
  41b3ed:	call   0x2103:0x6e0a9781
  41b3f4:	adc    al,0x80
  41b3f6:	jg     0x41b467
  41b3f8:	mov    al,0xd0
  41b3fa:	jnp    0x41b3fb
  41b3fc:	jge    0x41b44a
  41b3fe:	into   
  41b3ff:	ds or  al,0x8e
  41b402:	es pop ds
  41b404:	daa    
  41b405:	imul   ecx,DWORD PTR [eax],0x275dcfb1
  41b40b:	bound  edx,QWORD PTR [eax-0x21]
  41b40e:	jl     0x41b3dd
  41b410:	lods   eax,DWORD PTR ds:[esi]
  41b411:	stos   DWORD PTR es:[edi],eax
  41b412:	jl     0x41b437
  41b414:	lea    edi,[esi+0x59da73ca]
  41b41a:	shld   DWORD PTR [eax],edi,cl
  41b41d:	xor    BYTE PTR [ebp+esi*4-0x46],bl
  41b421:	lock xchg edi,eax
  41b423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b424:	aad    0xc1
  41b426:	(bad)  
  41b427:	js     0x41b42d
  41b429:	cwde   
  41b42a:	inc    ebx
  41b42b:	jg     0x41b45e
  41b42d:	test   esp,ebp
  41b42f:	nop
  41b430:	push   ss
  41b431:	ins    DWORD PTR es:[edi],dx
  41b432:	sub    DWORD PTR [ecx+ebp*2-0x6c196383],eax
  41b439:	sub    DWORD PTR [ebp+esi*8-0x21],edx
  41b43d:	jg     0x41b3ef
  41b43f:	(bad)  
  41b440:	ins    DWORD PTR es:[edi],dx
  41b441:	fist   DWORD PTR [ebx-0x214caec]
  41b447:	push   ebx
  41b448:	call   0x9d45:0xc131e0cb
  41b44f:	out    dx,eax
  41b450:	jnp    0x41b3e1
  41b452:	call   0x9235:0x49e17c1
  41b459:	and    eax,0xc7b85c8e
  41b45e:	cld    
  41b45f:	out    dx,eax
  41b460:	xchg   BYTE PTR [ebx],cl
  41b462:	dec    edi
  41b463:	add    eax,0xeacb3dc7
  41b468:	gs (bad) 
  41b46b:	sub    eax,0x917966ce
  41b470:	shr    DWORD PTR [eax+0x77],cl
  41b473:	lock inc edx
  41b475:	xchg   dx,ax
  41b477:	pop    esi
  41b478:	int3   
  41b479:	push   edi
  41b47a:	xchg   DWORD PTR [ebp-0x3a],esi
  41b47d:	mov    edi,0x575d8995
  41b482:	cmp    edx,DWORD PTR [eax]
  41b484:	sbb    ch,BYTE PTR [esi+0x69080ae9]
  41b48a:	or     al,0x99
  41b48c:	(bad)  
  41b48d:	call   0x7e56:0x8bf141e3
  41b494:	or     DWORD PTR [eax+0xf7e1a5f],edx
  41b49a:	(bad)  
  41b49b:	icebp  
  41b49c:	mov    esi,0xcb43c91b
  41b4a1:	(bad)  
  41b4a2:	and    al,0x1b
  41b4a4:	push   esp
  41b4a5:	or     eax,0x84dcaac
  41b4aa:	ins    BYTE PTR es:[edi],dx
  41b4ab:	lods   eax,DWORD PTR ds:[esi]
  41b4ac:	add    al,0x64
  41b4ae:	pop    si
  41b4b0:	aas    
  41b4b1:	jmp    0xd547:0xf19062c5
  41b4b8:	cmp    al,0x5d
  41b4ba:	mov    WORD PTR [eax+0x799afa70],cs
  41b4c0:	sbb    BYTE PTR [eax+0x160b9b83],ch
  41b4c6:	lock cmp ebx,DWORD PTR [ecx-0x2cd3ba31]
  41b4cd:	arpl   WORD PTR [edx],sp
  41b4cf:	sbb    bh,BYTE PTR [ebx-0x1a]
  41b4d2:	dec    eax
  41b4d3:	pop    DWORD PTR [ecx+0x50]
  41b4d6:	dec    esi
  41b4d7:	mov    esi,0x2831d1bb
  41b4dc:	retf   
  41b4dd:	pop    edx
  41b4de:	cmp    BYTE PTR [eax-0x80],cl
  41b4e1:	xchg   dh,cl
  41b4e3:	cwde   
  41b4e4:	addr16 stc 
  41b4e6:	mov    ebp,0x7b0f68a0
  41b4eb:	repnz into 
  41b4ed:	ins    BYTE PTR es:[edi],dx
  41b4ee:	sbb    al,0x33
  41b4f0:	outs   dx,BYTE PTR ds:[esi]
  41b4f1:	lods   al,BYTE PTR ds:[esi]
  41b4f2:	adc    ch,dl
  41b4f4:	mov    WORD PTR [edi+0x30ed55a0],gs
  41b4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4fb:	icebp  
  41b4fc:	xchg   BYTE PTR ds:[edx],dl
  41b4ff:	popa   
  41b500:	mov    al,0xfb
  41b502:	nop
  41b503:	sbb    ch,BYTE PTR ss:[eax-0x2c9a4887]
  41b50a:	data16 mov bh,0xaf
  41b50d:	pop    edi
  41b50e:	popa   
  41b50f:	inc    esi
  41b510:	inc    edi
  41b511:	test   al,0xaa
  41b513:	dec    edi
  41b514:	loop   0x41b510
  41b516:	inc    ecx
  41b517:	cmp    eax,DWORD PTR [ebp+0xa]
  41b51a:	inc    edx
  41b51b:	scas   eax,DWORD PTR es:[edi]
  41b51c:	sbb    bh,bh
  41b51e:	out    dx,eax
  41b51f:	and    DWORD PTR ds:0x1967cca9,0x44166e31
  41b529:	cmp    DWORD PTR [eax-0x19],0xfffffff6
  41b52d:	mov    bh,0xac
  41b52f:	push   ds
  41b530:	gs arpl sp,bx
  41b533:	cld    
  41b534:	pop    ds
  41b535:	xchg   ebp,eax
  41b536:	mov    ebp,0x49630e0e
  41b53b:	mov    dl,0x80
  41b53d:	fcomip st,st(7)
  41b53f:	mov    bh,bl
  41b541:	loop   0x41b5b8
  41b543:	(bad)  
  41b544:	scas   eax,DWORD PTR es:[edi]
  41b545:	mov    esi,0xa016e329
  41b54a:	int    0xc2
  41b54c:	pusha  
  41b54d:	mov    cl,0x25
  41b54f:	js     0x41b4df
  41b551:	mov    esp,0xaffe81a4
  41b556:	shl    BYTE PTR [eax+0x49],1
  41b559:	inc    esi
  41b55a:	hlt    
  41b55b:	fild   WORD PTR [ecx-0x2c]
  41b55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b55f:	mov    bh,0x5f
  41b561:	stos   DWORD PTR es:[edi],eax
  41b562:	sbb    ch,BYTE PTR [ebx]
  41b564:	xor    DWORD PTR [eax-0x11],esi
  41b567:	xchg   BYTE PTR [esi],bl
  41b569:	fnstenv [eax+ecx*2+0x1f6a840e]
  41b570:	sub    WORD PTR [ecx+esi*4],0x53
  41b575:	jp     0x41b532
  41b577:	sub    BYTE PTR [eax],0x7b
  41b57a:	push   ebp
  41b57b:	sub    bl,BYTE PTR [ecx-0x40]
  41b57e:	(bad)  
  41b57f:	adc    eax,0xeaef42fe
  41b584:	mov    dh,0xdd
  41b586:	xchg   esi,eax
  41b587:	scas   al,BYTE PTR es:[edi]
  41b588:	add    al,0x9
  41b58a:	aam    0xc1
  41b58c:	pushf  
  41b58d:	jno    0x41b5e0
  41b58f:	mov    ecx,0x772f1e56
  41b594:	inc    esp
  41b595:	pop    ecx
  41b596:	adc    DWORD PTR [ebp-0x54],ecx
  41b599:	xor    DWORD PTR [edx-0x1782960],eax
  41b59f:	xor    BYTE PTR [eax+0xade1650],al
  41b5a5:	fadd   DWORD PTR [eax]
  41b5a7:	pop    edx
  41b5a8:	sbb    BYTE PTR [ecx+eiz*2-0x36618e1e],dl
  41b5af:	inc    ebp
  41b5b0:	jae    0x41b58d
  41b5b2:	pop    ds
  41b5b3:	ja     0x41b55b
  41b5b5:	and    ecx,edi
  41b5b7:	(bad)  
  41b5b9:	or     eax,0x5445f8bd
  41b5be:	mov    edi,0xafe7cf1e
  41b5c3:	mov    ecx,0xab0dab0d
  41b5c8:	sub    DWORD PTR [edx-0x4ac9f7e6],edi
  41b5ce:	jg     0x41b602
  41b5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5d1:	xadd   al,bh
  41b5d4:	xchg   esp,eax
  41b5d5:	retf   0x3e04
  41b5d8:	or     ch,BYTE PTR [edi-0x66]
  41b5db:	mov    esi,0x36ac855c
  41b5e0:	push   ebx
  41b5e1:	jae    0x41b63e
  41b5e3:	push   edx
  41b5e4:	in     al,0xcd
  41b5e6:	mov    bl,0x8e
  41b5e8:	cmp    eax,0x131fe62c
  41b5ed:	loope  0x41b5e3
  41b5ef:	not    DWORD PTR [ebp-0x7c255d97]
  41b5f5:	(bad)  
  41b5f6:	fcmovb st,st(0)
  41b5f8:	outs   dx,BYTE PTR ds:[esi]
  41b5f9:	push   ebp
  41b5fa:	and    eax,0x38336aa0
  41b5ff:	sub    ah,BYTE PTR [esi]
  41b601:	push   eax
  41b602:	xor    al,0x23
  41b604:	shr    DWORD PTR [eax-0x41d0a592],1
  41b60a:	scas   eax,DWORD PTR es:[edi]
  41b60b:	ss inc ebp
  41b60d:	xchg   esp,eax
  41b60e:	ins    BYTE PTR es:[edi],dx
  41b60f:	dec    esi
  41b610:	mov    ah,0x64
  41b612:	push   es
  41b613:	jle    0x41b67c
  41b615:	cmp    DWORD PTR [ebp+0x25],ebx
  41b618:	sbb    DWORD PTR [eax+edi*8-0x56],ebx
  41b61c:	adc    eax,0x1505371f
  41b621:	jns    0x41b670
  41b623:	sbb    BYTE PTR [ebp+0x74ef7e20],0x1e
  41b62a:	scas   al,BYTE PTR es:[edi]
  41b62b:	sub    BYTE PTR [ebx-0x37da6be8],0x26
  41b632:	mov    WORD PTR [eax+0x7a69cdc9],ss
  41b638:	sub    DWORD PTR [eax+0x5306794c],ebx
  41b63e:	or     ecx,DWORD PTR [esi]
  41b640:	jo     0x41b604
  41b642:	imul   ecx,DWORD PTR [esi-0x11],0x5b
  41b646:	and    ch,dl
  41b648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b649:	cmp    al,bh
  41b64b:	std    
  41b64c:	enter  0xd0e5,0xfc
  41b650:	pushf  
  41b651:	xor    ch,BYTE PTR [eax+0x37]
  41b654:	push   esi
  41b655:	mov    DWORD PTR [esi],0xa83cea29
  41b65b:	jmp    0x41b67d
  41b65d:	aas    
  41b65e:	shr    ebx,cl
  41b660:	ror    DWORD PTR [esi+0x67fb37c6],0xfb
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	xor    DWORD PTR ds:0x32e14914,esp
  41b674:	add    DWORD PTR [eax],eax
  41b676:	clc    
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [edi-0x2e2f2100],al
  41b67f:	xchg   esi,eax
  41b680:	fst    DWORD PTR [ebp+0x37691db0]
  41b686:	inc    DWORD PTR [edx+0x3c5c86ce]
  41b68c:	mov    ?,WORD PTR [ecx+0x27]
  41b68f:	aas    
  41b690:	rcl    BYTE PTR [eax+0x14aa83fb],1
  41b696:	mov    dl,0x70
  41b698:	lahf   
  41b699:	loope  0x41b6ab
  41b69b:	lods   al,BYTE PTR ds:[esi]
  41b69c:	and    eax,DWORD PTR [ebp-0xc]
  41b69f:	dec    ecx
  41b6a0:	mov    ch,0x87
  41b6a2:	rol    DWORD PTR ds:0x5759ec57,cl
  41b6a8:	cmp    eax,0xa627aae
  41b6ad:	pop    edi
  41b6ae:	add    BYTE PTR [eax],cl
  41b6b0:	add    BYTE PTR [edx],bh
  41b6b2:	fucomi st,st(2)
  41b6b4:	xchg   esi,eax
  41b6b5:	dec    esi
  41b6b6:	mov    ebx,0x5d4436e0
  41b6bb:	fidivr DWORD PTR [edi-0xe70a2d0]
  41b6c1:	hlt    
  41b6c2:	pop    edx
  41b6c3:	ret    0x488f
  41b6c6:	lahf   
  41b6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c8:	xor    ah,BYTE PTR [edi+0x45]
  41b6cb:	fucomi st,st(4)
  41b6cd:	dec    edx
  41b6ce:	imul   DWORD PTR [ebx-0x7b]
  41b6d1:	xlat   BYTE PTR ds:[ebx]
  41b6d2:	xchg   edi,eax
  41b6d3:	loopne 0x41b6e2
  41b6d5:	sbb    DWORD PTR [edx],0x1b26ea3a
  41b6db:	fdiv   st,st(6)
  41b6dd:	sub    DWORD PTR [ebp-0x16],edx
  41b6e0:	add    al,0x39
  41b6e2:	pop    ss
  41b6e3:	xchg   esi,eax
  41b6e4:	xchg   DWORD PTR [edi-0x2e],esp
  41b6e7:	out    dx,eax
  41b6e8:	inc    eax
  41b6e9:	cmp    ebp,DWORD PTR [edx+0x23]
  41b6ec:	outs   dx,BYTE PTR ds:[esi]
  41b6ed:	jecxz  0x41b69b
  41b6ef:	cmc    
  41b6f0:	imul   eax,DWORD PTR ds:0x45a6533,0xdcdb6841
  41b6fa:	jb     0x41b74e
  41b6fc:	pop    ds
  41b6fd:	sti    
  41b6fe:	ret    0x9c5b
  41b701:	xchg   DWORD PTR [ebp+edx*2+0x385ad2db],edi
  41b708:	jns    0x41b6d5
  41b70a:	mov    bl,0x12
  41b70c:	mov    ebp,0x460e4603
  41b711:	fld    st(6)
  41b713:	rol    DWORD PTR [edx],0x4a
  41b716:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b718:	(bad)  
  41b719:	push   esi
  41b71a:	(bad)  
  41b71b:	mov    ebx,0x7a5efa7c
  41b720:	dec    ebp
  41b721:	test   al,0x86
  41b723:	lds    edx,FWORD PTR [esi+0x0]
  41b726:	cmp    BYTE PTR [esi-0x67],dl
  41b729:	xchg   eax,esi
  41b72b:	pop    eax
  41b72c:	push   DWORD PTR [edx]
  41b72e:	in     eax,0x3a
  41b730:	add    al,0xa5
  41b732:	repnz cwde 
  41b734:	sbb    BYTE PTR [ebx+0x14],dh
  41b737:	fadd   DWORD PTR [edi-0x25]
  41b73a:	pop    esp
  41b73b:	push   eax
  41b73c:	test   BYTE PTR [ebx+ebp*4+0x23d12eed],dh
  41b743:	pop    ebx
  41b744:	int3   
  41b745:	retf   0x5063
  41b748:	or     al,0xc0
  41b74a:	sar    DWORD PTR [esi+0x74b3a3e7],cl
  41b750:	xchg   edi,eax
  41b751:	(bad)  
  41b752:	in     al,0xf3
  41b754:	(bad)  
  41b755:	mov    eax,0xfdf8ab30
  41b75a:	addr16 pop es
  41b75c:	pop    ss
  41b75d:	out    dx,al
  41b75e:	aam    0xd2
  41b760:	dec    esp
  41b761:	mov    dl,BYTE PTR [esi+0x7a]
  41b764:	ja     0x41b7df
  41b766:	ucomiss xmm3,DWORD PTR [edi+0x1a]
  41b76a:	xchg   DWORD PTR [ecx+0x4b],edi
  41b76d:	jg     0x41b728
  41b76f:	jp     0x41b762
  41b771:	nop
  41b772:	dec    edi
  41b773:	fs nop
  41b775:	and    BYTE PTR [ebp+0x45],ah
  41b778:	xor    DWORD PTR [edx+0x20ed0bf6],ecx
  41b77e:	les    esp,FWORD PTR [eax+0x5d6349c3]
  41b784:	pusha  
  41b785:	inc    ebp
  41b786:	out    0x8f,al
  41b788:	push   ds
  41b789:	or     BYTE PTR [esi-0x3e],cl
  41b78c:	jae    0x41b798
  41b78e:	mov    esi,0x56088651
  41b793:	fcmovu st,st(2)
  41b795:	popf   
  41b796:	sbb    eax,0xe2ae7d55
  41b79b:	jecxz  0x41b7b9
  41b79d:	dec    ecx
  41b79e:	inc    eax
  41b79f:	push   0x76
  41b7a1:	arpl   WORD PTR [ebp+0x2b1d5f3f],cx
  41b7a7:	in     eax,dx
  41b7a8:	inc    esi
  41b7a9:	repz jne 0x41b72d
  41b7ac:	int    0x4f
  41b7ae:	or     DWORD PTR [ebx+0x5a24a916],esp
  41b7b4:	mov    esp,DWORD PTR [ecx]
  41b7b6:	enter  0x7eaa,0xbc
  41b7ba:	adc    al,0x3c
  41b7bc:	loope  0x41b7b8
  41b7be:	push   ebx
  41b7bf:	shl    BYTE PTR [ebp-0x71],0x9d
  41b7c3:	sahf   
  41b7c4:	outs   dx,BYTE PTR ds:[esi]
  41b7c5:	into   
  41b7c6:	sti    
  41b7c7:	test   al,0xf6
  41b7c9:	mov    eax,0xca3e9bf4
  41b7ce:	fsubr  DWORD PTR [ecx+0x23]
  41b7d1:	mov    esp,0x295887fe
  41b7d6:	popf   
  41b7d7:	lods   al,BYTE PTR ds:[esi]
  41b7d8:	test   al,0x37
  41b7da:	popa   
  41b7db:	or     al,0xd9
  41b7dd:	push   cs
  41b7de:	xor    ecx,esp
  41b7e0:	pusha  
  41b7e1:	inc    BYTE PTR [edx+0x61]
  41b7e4:	cmp    DWORD PTR [esi-0x3e21c15b],ebp
  41b7ea:	sahf   
  41b7eb:	fadd   DWORD PTR [ebp-0x5]
  41b7ee:	mul    DWORD PTR [edi]
  41b7f0:	or     edx,DWORD PTR [esi]
  41b7f2:	jp     0x41b777
  41b7f4:	jl     0x41b79c
  41b7f6:	dec    ecx
  41b7f7:	mov    bh,0x87
  41b7f9:	mov    ds:0x532923b8,al
  41b7fe:	ds pop ecx
  41b800:	cld    
  41b801:	arpl   WORD PTR [edi-0x41],sp
  41b804:	(bad)  
  41b805:	push   esp
  41b806:	test   eax,0x522f9fa5
  41b80b:	or     al,BYTE PTR [ebx]
  41b80d:	out    dx,al
  41b80e:	add    dh,BYTE PTR [esi+0x734e09fb]
  41b814:	aad    0x86
  41b816:	call   0xd8db:0x134128bd
  41b81d:	sub    dl,al
  41b81f:	fucomi st,st(2)
  41b821:	xor    ch,cl
  41b823:	cwde   
  41b824:	shl    BYTE PTR [edx],0xfd
  41b827:	inc    ebp
  41b828:	sub    al,0xc9
  41b82a:	(bad)  
  41b82b:	cwde   
  41b82c:	(bad)  
  41b82d:	dec    edi
  41b82e:	in     eax,dx
  41b82f:	stos   BYTE PTR es:[di],al
  41b831:	pop    ds
  41b832:	aas    
  41b833:	or     BYTE PTR [ecx+0x1aa9d3d6],cl
  41b839:	jmp    0x41b81f
  41b83b:	sub    al,0xb6
  41b83d:	mov    bh,0x8
  41b83f:	xor    BYTE PTR [ebx+0xc68161a],bl
  41b845:	fs cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b848:	xchg   edx,eax
  41b849:	push   ebx
  41b84a:	pop    edi
  41b84b:	or     al,0x6d
  41b84d:	inc    ebx
  41b84e:	xor    esi,DWORD PTR [eax-0x56]
  41b851:	mov    BYTE PTR ds:0xa1ab09de,al
  41b857:	pop    es
  41b858:	mov    WORD PTR [edx],?
  41b85a:	loop   0x41b85f
  41b85c:	or     DWORD PTR [esi+ecx*8-0x80],ebx
  41b860:	pop    es
  41b861:	(bad)  
  41b862:	and    al,0x6e
  41b864:	push   0x63
  41b866:	dec    eax
  41b867:	scas   eax,DWORD PTR es:[edi]
  41b868:	addr16 dec ebp
  41b86a:	jnp    0x41b80b
  41b86c:	lock xchg BYTE PTR [ebx-0x58],cl
  41b870:	ja     0x41b8e2
  41b872:	sbb    bh,BYTE PTR ds:0x75aa6b06
  41b878:	sub    eax,0x3d69ef33
  41b87d:	sbb    al,0x31
  41b87f:	xchg   ebx,eax
  41b880:	mov    ds:0xea2ba982,al
  41b885:	sub    dh,BYTE PTR [ebp+ecx*1-0x2]
  41b889:	popf   
  41b88a:	pop    edx
  41b88b:	nop
  41b88c:	shr    DWORD PTR [edx+0x32],0x21
  41b890:	scas   al,BYTE PTR es:[edi]
  41b891:	xor    eax,DWORD PTR [esi-0x58]
  41b894:	jnp    0x41b8e4
  41b896:	pop    eax
  41b897:	sbb    DWORD PTR [ebx+0x3430a4b4],esi
  41b89d:	clc    
  41b89e:	push   ecx
  41b89f:	sub    esi,DWORD PTR [esi-0x3a]
  41b8a2:	cmp    eax,ebx
  41b8a4:	dec    ebp
  41b8a5:	mov    edx,DWORD PTR ds:0x7f649c23
  41b8ab:	pop    esi
  41b8ac:	mov    ecx,DWORD PTR [eax-0x44]
  41b8af:	in     al,dx
  41b8b0:	adc    ah,BYTE PTR [ebx+0x6581b0c3]
  41b8b6:	inc    eax
  41b8b7:	push   ss
  41b8b8:	add    al,0x34
  41b8ba:	add    DWORD PTR [ebx-0xa],ecx
  41b8bd:	icebp  
  41b8be:	push   ebx
  41b8bf:	mov    ebp,0xc7c9ec98
  41b8c4:	mov    dh,0x7e
  41b8c6:	rol    DWORD PTR ds:0x622ef137,1
  41b8cc:	inc    eax
  41b8cd:	mov    eax,ds:0xd425721a
  41b8d2:	adc    DWORD PTR [ecx],esp
  41b8d4:	jo     0x41b8af
  41b8d6:	xchg   ecx,eax
  41b8d7:	sahf   
  41b8d8:	or     dh,dh
  41b8da:	pop    esp
  41b8db:	pop    ecx
  41b8dc:	mov    ebp,0xde6ef8db
  41b8e1:	mov    eax,es:0xa75f49c7
  41b8e7:	call   0x3644c460
  41b8ec:	ror    eax,1
  41b8ee:	or     BYTE PTR [eax+eiz*4+0x0],bl
  41b8f2:	popa   
  41b8f3:	xchg   ebx,eax
  41b8f4:	xor    al,al
  41b8f6:	fcom   QWORD PTR [ebx-0x3891ba80]
  41b8fc:	ficomp WORD PTR [edx-0x3f]
  41b8ff:	retf   
  41b900:	adc    ah,BYTE PTR [esi-0x2f47f6a3]
  41b906:	cmp    DWORD PTR [eax],edi
  41b908:	pop    ds
  41b909:	lahf   
  41b90a:	lahf   
  41b90b:	je     0x41b8a7
  41b90d:	sub    DWORD PTR [esi+0x71201acd],edi
  41b913:	sti    
  41b914:	data16 aam 0x5f
  41b917:	sbb    eax,0x35920a90
  41b91c:	mov    BYTE PTR [ebx-0x26e30a3a],ah
  41b922:	dec    ecx
  41b923:	stos   DWORD PTR es:[edi],eax
  41b924:	imul   edx,ecx,0x5ae27e92
  41b92a:	ror    BYTE PTR [esi],1
  41b92c:	inc    edx
  41b92d:	test   al,0x58
  41b92f:	add    BYTE PTR [edx+0x114cbc6e],0x12
  41b936:	xchg   ebp,eax
  41b937:	adc    DWORD PTR [edi+0x1],edi
  41b93a:	stc    
  41b93b:	mov    dl,BYTE PTR [edx+0x74]
  41b93e:	and    DWORD PTR [edi+eiz*4],0x174966e0
  41b945:	add    dh,al
  41b947:	js     0x41b92d
  41b949:	sbb    BYTE PTR [edx],ch
  41b94b:	dec    eax
  41b94c:	adc    DWORD PTR [ebp+0x3fd087ce],esi
  41b952:	jl     0x41b964
  41b954:	push   eax
  41b955:	das    
  41b956:	sti    
  41b957:	mov    bl,0x8c
  41b959:	hlt    
  41b95a:	outs   dx,DWORD PTR ds:[esi]
  41b95b:	scas   al,BYTE PTR es:[edi]
  41b95c:	sub    ah,ah
  41b95e:	cld    
  41b95f:	pop    ebp
  41b960:	sub    DWORD PTR [ebx+0x5c27e8ce],0xa7330f43
  41b96a:	mov    eax,0xf00c1444
  41b96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b970:	pop    eax
  41b971:	outs   dx,BYTE PTR ds:[esi]
  41b972:	imul   ebx,DWORD PTR [edi],0x17
  41b975:	sbb    DWORD PTR [ecx+eax*2+0x32bd2a74],eax
  41b97c:	enter  0x30fe,0x15
  41b980:	loop   0x41b947
  41b982:	pop    esi
  41b983:	out    0x81,al
  41b985:	jo     0x41b94e
  41b987:	mov    BYTE PTR [ebp+0x7c],dh
  41b98a:	xor    BYTE PTR [ecx],al
  41b98c:	and    al,0x44
  41b98e:	and    eax,0x37e310e5
  41b993:	cmp    DWORD PTR [eax+0x2c8f8abd],ebp
  41b999:	cmp    BYTE PTR [edi],cl
  41b99b:	inc    ebp
  41b99c:	in     eax,dx
  41b99d:	jle    0x41b9f8
  41b99f:	mov    dh,0xa2
  41b9a1:	cmc    
  41b9a2:	retf   0x1130
  41b9a5:	aad    0x1e
  41b9a7:	lahf   
  41b9a8:	jmp    0x41b994
  41b9aa:	lock (bad) 
  41b9ac:	shl    DWORD PTR ds:0x6f039220,1
  41b9b2:	sub    DWORD PTR [eax],edx
  41b9b4:	push   eax
  41b9b5:	retf   0x822
  41b9b8:	jno    0x41b958
  41b9ba:	adc    ch,BYTE PTR [esi]
  41b9bc:	xor    al,0x4b
  41b9be:	iret   
  41b9bf:	data16 or al,0x98
  41b9c2:	mov    ds:0x9f5f9f19,eax
  41b9c7:	mov    cl,0x6f
  41b9c9:	daa    
  41b9ca:	sar    ebp,cl
  41b9cc:	jle    0x41b9f5
  41b9ce:	adc    esp,DWORD PTR [edi+0x21]
  41b9d1:	nop
  41b9d2:	stos   DWORD PTR es:[edi],eax
  41b9d3:	retf   
  41b9d4:	push   ecx
  41b9d5:	out    0x50,al
  41b9d7:	lea    eax,[ecx]
  41b9d9:	aam    0xee
  41b9db:	mov    ah,0xb0
  41b9dd:	test   DWORD PTR [esi+ebp*4-0x65799fd7],ebx
  41b9e4:	mov    ebx,0xf011b231
  41b9e9:	iret   
  41b9ea:	push   ebp
  41b9eb:	mov    ds:0xdbc87985,al
  41b9f0:	test   DWORD PTR [ebx-0x1139c812],ecx
  41b9f6:	inc    eax
  41b9f7:	lods   al,BYTE PTR ds:[esi]
  41b9f8:	shl    BYTE PTR [eax-0x24],0xeb
  41b9fc:	sub    eax,0x3c6345a
  41ba01:	(bad)  
  41ba02:	dec    ebp
  41ba03:	lahf   
  41ba04:	fbstp  TBYTE PTR [ebp+0x69]
  41ba07:	jp     0x41ba6c
  41ba09:	adc    ch,ah
  41ba0b:	push   ds
  41ba0c:	push   eax
  41ba0d:	xchg   ebx,eax
  41ba0e:	push   eax
  41ba0f:	xchg   BYTE PTR [edi-0x73a6b67a],dl
  41ba15:	adc    DWORD PTR [ecx+0x4326094b],esp
  41ba1b:	jno    0x41b9e3
  41ba1d:	push   0x74
  41ba1f:	(bad)  
  41ba20:	ss (bad) 
  41ba23:	sti    
  41ba24:	cmp    DWORD PTR ds:0xb15c0963,0x6c
  41ba2b:	mov    DWORD PTR [esi-0x556e004f],0x16581254
  41ba35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba36:	push   esi
  41ba37:	mov    esp,0x7520857e
  41ba3c:	dec    eax
  41ba3d:	cmp    ebp,ecx
  41ba3f:	pop    edx
  41ba40:	ja     0x41ba5b
  41ba42:	push   ecx
  41ba43:	ret    0xb800
  41ba46:	xchg   ecx,eax
  41ba47:	xor    eax,0x3038e351
  41ba4c:	mov    al,ds:0xb7e149be
  41ba51:	hlt    
  41ba52:	dec    esi
  41ba53:	mov    edx,0x93f298ca
  41ba58:	pop    esp
  41ba59:	inc    esi
  41ba5a:	and    bh,BYTE PTR ss:[edi]
  41ba5d:	mov    gs:0x5db6d440,eax
  41ba63:	xlat   BYTE PTR ds:[ebx]
  41ba64:	mov    eax,DWORD PTR [ebp+0x791053f]
  41ba6a:	cmc    
  41ba6b:	jb     0x41ba9d
  41ba6d:	mov    al,0x70
  41ba6f:	sbb    ch,BYTE PTR [eax-0x3f]
  41ba72:	adc    BYTE PTR [ebp+0xa],dh
  41ba75:	mov    BYTE PTR [ebx-0x2776b04f],dh
  41ba7b:	inc    esp
  41ba7c:	loopne 0x41ba6b
  41ba7e:	aad    0x48
  41ba80:	not    BYTE PTR [ebx]
  41ba82:	xchg   ecx,eax
  41ba83:	nop
  41ba84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba85:	mov    ebx,0xfc19f693
  41ba8a:	lahf   
  41ba8b:	mov    edi,0xf2471027
  41ba90:	dec    esp
  41ba91:	sub    eax,0x81df43d3
  41ba96:	mov    cl,BYTE PTR [eax]
  41ba98:	addr16 push ss
  41ba9a:	xor    al,0x5c
  41ba9c:	jno    0x41ba2b
  41ba9e:	sub    eax,0x16e66191
  41baa3:	shr    BYTE PTR [esi-0x17],cl
  41baa6:	(bad)  
  41baa7:	adc    ebx,DWORD PTR [eax+0x46]
  41baaa:	popf   
  41baab:	imul   esi,DWORD PTR [edi-0x7d4383d],0xb6c0ce08
  41bab5:	jle    0x41bae2
  41bab7:	outs   dx,DWORD PTR ds:[esi]
  41bab8:	scas   eax,DWORD PTR es:[edi]
  41bab9:	push   0xfb622ba9
  41babe:	sbb    DWORD PTR [eax],edi
  41bac0:	push   ss
  41bac1:	rcl    BYTE PTR [edi+0x7],0x2b
  41bac5:	aaa    
  41bac6:	cmovae esp,eax
  41bac9:	inc    di
  41bacb:	loop   0x41ba9c
  41bacd:	not    DWORD PTR [edi-0x165837]
  41bad3:	ror    BYTE PTR [edi],0x12
  41bad6:	cdq    
  41bad7:	rcl    ecx,0xbe
  41bada:	jecxz  0x41baa7
  41badc:	iret   
  41badd:	mov    eax,0x37c892d1
  41bae2:	jmp    0x95190201
  41bae7:	mov    esp,0x4630421
  41baec:	movhps xmm2,QWORD PTR [eax]
  41baef:	ins    BYTE PTR es:[edi],dx
  41baf0:	xchg   esi,eax
  41baf1:	mov    esp,esp
  41baf3:	je     0x41bb6d
  41baf5:	ins    DWORD PTR es:[edi],dx
  41baf6:	dec    ebp
  41baf7:	add    bl,dl
  41baf9:	ret    0xbd7e
  41bafc:	imul   DWORD PTR [ebx-0x787ae9e8]
  41bb02:	jbe    0x41bb56
  41bb04:	inc    esp
  41bb05:	xchg   esp,eax
  41bb06:	fisubr WORD PTR [ebx]
  41bb08:	sub    al,0xaa
  41bb0a:	jl     0x41baa7
  41bb0c:	add    al,0x52
  41bb0e:	ja     0x41bb5e
  41bb10:	popf   
  41bb11:	pop    ss
  41bb12:	aad    0x8
  41bb14:	ins    BYTE PTR es:[edi],dx
  41bb15:	jl     0x41bb17
  41bb17:	dec    esi
  41bb18:	adc    ecx,DWORD PTR [edi]
  41bb1a:	dec    eax
  41bb1b:	sbb    BYTE PTR [eax+0x39fa7ad6],al
  41bb21:	sahf   
  41bb22:	into   
  41bb23:	div    DWORD PTR [eax]
  41bb25:	push   cs
  41bb26:	data16 (bad) 
  41bb28:	pusha  
  41bb29:	cmc    
  41bb2a:	fcmovnu st,st(1)
  41bb2c:	or     eax,DWORD PTR [ebx-0x13]
  41bb2f:	mov    al,0xc7
  41bb31:	(bad)  
  41bb32:	sahf   
  41bb33:	mov    eax,ds:0x5ecb8a5
  41bb38:	push   ds
  41bb39:	hlt    
  41bb3a:	sbb    eax,0x96047342
  41bb3f:	adc    eax,0xf761ebf0
  41bb44:	xor    al,0xe0
  41bb46:	push   ebp
  41bb47:	mov    cl,dl
  41bb49:	rcr    ch,1
  41bb4b:	ror    BYTE PTR [ebp-0x47],cl
  41bb4e:	add    BYTE PTR [ebp-0x1e],dh
  41bb51:	mov    fs,WORD PTR [ebp+ebp*1+0x5e]
  41bb55:	and    eax,0xd65e1bfe
  41bb5a:	push   esp
  41bb5b:	test   BYTE PTR [esi+0x736add5a],cl
  41bb61:	or     DWORD PTR [edx+edx*4-0x65],ebp
  41bb65:	retf   
  41bb66:	call   0x60ca:0x6844425
  41bb6d:	mov    cs,WORD PTR [ebx-0x19c9892d]
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xa3442583
  41bb7f:	sar    DWORD PTR [edx+0x2d],1
  41bb82:	fnstenv [edi]
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	clc    
  41bb87:	add    al,0x0
  41bb89:	add    BYTE PTR [esi+0x25],bl
  41bb8c:	std    
  41bb8d:	mov    al,0xf3
  41bb8f:	retf   0xc112
  41bb92:	loopne 0x41bbfe
  41bb94:	das    
  41bb95:	call   0x2b6eba43
  41bb9a:	mov    esp,DWORD PTR [ebp-0x58]
  41bb9d:	xchg   DWORD PTR [ecx+esi*8],esp
  41bba0:	lock mov dl,0x8f
  41bba3:	and    al,0x6a
  41bba5:	jmp    0x25ae:0x2416d260
  41bbac:	fcomp  DWORD PTR [edx]
  41bbae:	push   edi
  41bbaf:	sahf   
  41bbb0:	jecxz  0x41bbd6
  41bbb2:	dec    edi
  41bbb3:	pop    esp
  41bbb4:	aam    0xc6
  41bbb6:	add    dh,bh
  41bbb8:	jmp    0x226c9254
  41bbbd:	cmp    bl,al
  41bbbf:	out    dx,al
  41bbc0:	cmovb  esp,esi
  41bbc3:	fnstsw WORD PTR [ecx]
  41bbc5:	in     al,dx
  41bbc6:	mov    ch,0xa7
  41bbc8:	pusha  
  41bbc9:	sbb    DWORD PTR [ecx+eiz*1],esp
  41bbcc:	sub    DWORD PTR [esi-0x16810204],0x18
  41bbd3:	adc    esp,DWORD PTR [eax+ecx*8-0x23]
  41bbd7:	jge    0x41bc46
  41bbd9:	xchg   ecx,eax
  41bbda:	sub    dh,BYTE PTR [eax+0x52]
  41bbdd:	adc    BYTE PTR cs:[edx],al
  41bbe0:	sti    
  41bbe1:	cmp    ch,BYTE PTR [edi+0x6f]
  41bbe4:	iret   
  41bbe5:	adc    al,BYTE PTR [ebx-0x40]
  41bbe8:	push   0x3ef4bc28
  41bbed:	loopne 0x41bc46
  41bbef:	xor    edx,ebp
  41bbf1:	xchg   esi,eax
  41bbf2:	pop    esi
  41bbf3:	bound  edx,QWORD PTR [ebx]
  41bbf5:	das    
  41bbf6:	ds pop ebx
  41bbf8:	jl     0x41bc26
  41bbfa:	test   al,0x5d
  41bbfc:	sahf   
  41bbfd:	push   esi
  41bbfe:	aad    0x15
  41bc00:	(bad)  [eax-0x58]
  41bc03:	push   ebx
  41bc04:	pop    edx
  41bc05:	lahf   
  41bc06:	(bad)  
  41bc07:	imul   ebx,DWORD PTR [ebp-0x3152bced],0xffffff93
  41bc0e:	iret   
  41bc0f:	aad    0x9b
  41bc11:	fdivrp st(1),st
  41bc13:	out    0xdb,eax
  41bc15:	(bad)  
  41bc16:	outs   dx,BYTE PTR ds:[esi]
  41bc17:	setns  BYTE PTR [edi-0x1f9e97d2]
  41bc1e:	and    al,cl
  41bc20:	pop    ecx
  41bc21:	jmp    0x41bc48
  41bc23:	imul   BYTE PTR [ecx+0x30]
  41bc26:	aam    0xa0
  41bc28:	shr    BYTE PTR [ecx],1
  41bc2a:	sub    eax,0x10b6f6c0
  41bc2f:	ffree  st(0)
  41bc31:	mov    DWORD PTR [eax],ecx
  41bc33:	mov    dl,0xfb
  41bc35:	sub    DWORD PTR [edi+0x78],ecx
  41bc38:	es icebp 
  41bc3a:	sbb    ecx,esi
  41bc3c:	jp     0x41bbc6
  41bc3e:	int    0x93
  41bc40:	and    eax,0xb455453f
  41bc45:	int    0x46
  41bc47:	mov    ds:0xb17a3e69,al
  41bc4c:	mov    ds:0x68ab5052,eax
  41bc51:	sbb    DWORD PTR [edx-0x1],esi
  41bc54:	cwde   
  41bc55:	sub    ah,BYTE PTR [edi]
  41bc57:	imul   ecx,DWORD PTR [esi],0x50
  41bc5a:	jmp    0x41bc7a
  41bc5c:	sti    
  41bc5d:	mov    dh,al
  41bc5f:	pop    esp
  41bc60:	jle    0x41bc90
  41bc62:	in     al,dx
  41bc63:	mov    edi,0x82f471dd
  41bc68:	mov    dh,0xf5
  41bc6a:	mov    ds:0x2b4ffa6,eax
  41bc6f:	and    BYTE PTR [ebx-0x616720d6],bl
  41bc75:	or     esi,DWORD PTR [edi]
  41bc77:	nop
  41bc78:	push   ebp
  41bc79:	push   esp
  41bc7a:	sbb    DWORD PTR [edi+0x10],0x28d84154
  41bc81:	cmc    
  41bc82:	jg     0x41bcc9
  41bc84:	and    bh,bh
  41bc86:	lea    edi,[edi]
  41bc88:	fimul  DWORD PTR [ecx-0x6b779f54]
  41bc8e:	in     eax,0x85
  41bc90:	(bad)  
  41bc91:	das    
  41bc92:	test   BYTE PTR [ebp-0x65851a88],al
  41bc98:	and    eax,0x2e65285b
  41bc9d:	pop    edi
  41bc9e:	pop    edx
  41bc9f:	dec    edx
  41bca0:	(bad)  
  41bca1:	xlat   BYTE PTR ds:[ebx]
  41bca2:	push   edx
  41bca3:	mov    ?,WORD PTR [ebp+0x66a72406]
  41bca9:	and    eax,0x127fae02
  41bcae:	ins    BYTE PTR es:[edi],dx
  41bcaf:	pop    ss
  41bcb0:	iret   
  41bcb1:	pop    esi
  41bcb2:	sbb    eax,ecx
  41bcb4:	in     al,0x39
  41bcb6:	mov    bl,0xa1
  41bcb8:	adc    BYTE PTR [edi+0x37],0x50
  41bcbc:	mov    edi,0xfc512f06
  41bcc1:	fldcw  WORD PTR [eax-0x3b7fe99]
  41bcc7:	das    
  41bcc8:	mov    BYTE PTR ds:0x2174439e,al
  41bcce:	jnp    0x41bcc2
  41bcd0:	je     0x41bc9c
  41bcd2:	xchg   edx,eax
  41bcd3:	pop    ds
  41bcd4:	and    cl,bl
  41bcd6:	gs jl  0x41bd3c
  41bcd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcda:	jmp    0xeb5d153a
  41bcdf:	inc    esp
  41bce0:	nop
  41bce1:	push   ss
  41bce2:	ret    0x2b08
  41bce5:	test   BYTE PTR [ebx-0x39],0x8d
  41bce9:	test   al,0xb4
  41bceb:	and    ecx,DWORD PTR [ecx-0x63e8ded7]
  41bcf1:	sbb    ebp,DWORD PTR [edx-0x2cda8f3c]
  41bcf7:	lock and eax,0x2261990d
  41bcfd:	sti    
  41bcfe:	in     eax,dx
  41bcff:	sbb    DWORD PTR [esi+0x46465819],0x19
  41bd06:	rol    edx,0x9c
  41bd09:	fisub  DWORD PTR [esi+0x41]
  41bd0c:	mov    bh,0x68
  41bd0e:	mov    al,ds:0x137bf19c
  41bd13:	dec    ebx
  41bd14:	clc    
  41bd15:	ins    DWORD PTR es:[edi],dx
  41bd16:	add    ebx,esi
  41bd18:	mov    bh,0x93
  41bd1a:	jnp    0x41bcbe
  41bd1c:	fsub   QWORD PTR [eax]
  41bd1e:	retf   0x6e79
  41bd21:	dec    esi
  41bd22:	jg     0x41bd4c
  41bd24:	es cs out dx,eax
  41bd27:	gs sub dl,0xce
  41bd2b:	int3   
  41bd2c:	push   ebp
  41bd2d:	ret    0xa9c7
  41bd30:	loop   0x41bd97
  41bd32:	fs push ebp
  41bd34:	and    ebp,DWORD PTR [ebx-0x1de85bae]
  41bd3a:	xor    al,0xd
  41bd3c:	rcl    DWORD PTR [esi*4-0x1a42be42],cl
  41bd43:	(bad)  
  41bd44:	dec    esi
  41bd45:	pushf  
  41bd46:	fdivr  QWORD PTR [edx+0x71069c4]
  41bd4c:	(bad)
  41bd50:	or     DWORD PTR [edx],ecx
  41bd52:	sub    eax,0xd83eeb17
  41bd57:	bound  eax,QWORD PTR [esi-0x1]
  41bd5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5b:	pop    edi
  41bd5c:	and    DWORD PTR [ecx+0x23],0x334c96e6
  41bd63:	das    
  41bd64:	xor    eax,0x433ddd6a
  41bd69:	jl     0x41bd7a
  41bd6b:	fisubr WORD PTR [ebx]
  41bd6d:	push   0x15
  41bd6f:	test   eax,0x39b0a6d
  41bd74:	lods   al,BYTE PTR ds:[esi]
  41bd75:	xchg   DWORD PTR [ebx+0xc],esp
  41bd78:	mov    ds:0xc159ebee,al
  41bd7d:	out    dx,eax
  41bd7e:	adc    BYTE PTR [ecx-0x4],dl
  41bd81:	les    esp,FWORD PTR [esi-0x87f4bfe]
  41bd87:	rol    DWORD PTR [edx-0x2c],cl
  41bd8a:	fsub   QWORD PTR [ebx]
  41bd8c:	dec    eax
  41bd8d:	outs   dx,BYTE PTR ds:[esi]
  41bd8e:	pop    ds
  41bd8f:	xchg   BYTE PTR [ebp+0x6c],dh
  41bd92:	ja     0x41bd69
  41bd94:	nop
  41bd95:	pop    ebp
  41bd96:	lock gs (bad) 
  41bd99:	xchg   ecx,eax
  41bd9a:	mov    bh,0x0
  41bd9c:	dec    ebx
  41bd9d:	jns    0x41bd67
  41bd9f:	in     al,dx
  41bda0:	mov    ds:0x92858e73,al
  41bda5:	sub    al,0x85
  41bda7:	add    DWORD PTR [edx-0x42d8d713],esp
  41bdad:	and    BYTE PTR [esi-0x7d4b331],dh
  41bdb3:	cmove  edi,DWORD PTR [ecx+esi*2]
  41bdb7:	sbb    DWORD PTR [eax],eax
  41bdb9:	gs or  al,0x52
  41bdbc:	inc    edi
  41bdbd:	pop    ecx
  41bdbe:	and    BYTE PTR [eax+0x5536f076],0x69
  41bdc5:	mov    WORD PTR [eax-0x37cc2ae4],?
  41bdcb:	and    bh,BYTE PTR [eax]
  41bdcd:	jge    0x41bd71
  41bdcf:	mov    ds:0x4501049f,al
  41bdd4:	inc    eax
  41bdd5:	cmp    eax,0x4a8539f6
  41bdda:	daa    
  41bddb:	sub    edx,esi
  41bddd:	popa   
  41bdde:	and    al,0xbb
  41bde0:	push   ss
  41bde1:	and    cl,BYTE PTR [esp+ebx*8+0x8]
  41bde5:	xchg   ebx,eax
  41bde6:	xchg   ebp,eax
  41bde7:	sbb    edx,edx
  41bde9:	aad    0x27
  41bdeb:	push   cs
  41bdec:	in     eax,dx
  41bded:	adc    BYTE PTR [esp+esi*1+0x64],0xd2
  41bdf2:	cmp    eax,0xdb4a4053
  41bdf7:	call   0x4aa1e221
  41bdfc:	loopne 0x41bde5
  41bdfe:	mov    ch,0xd3
  41be00:	ss push cs
  41be02:	mov    WORD PTR [ebx-0x69],es
  41be05:	les    ebx,FWORD PTR [ecx-0x6d8b642e]
  41be0b:	ins    DWORD PTR es:[edi],dx
  41be0c:	or     dh,cl
  41be0e:	sub    ecx,DWORD PTR [esi-0x16bd24c5]
  41be14:	int3   
  41be15:	(bad)  
  41be16:	mov    ebp,0xa4ba1d87
  41be1b:	(bad)  
  41be1c:	adc    al,0x41
  41be1e:	test   al,0x23
  41be20:	ret    
  41be21:	fisub  WORD PTR [edi]
  41be23:	retf   0xc96c
  41be26:	pusha  
  41be27:	fdivr  QWORD PTR [ebp+edx*2+0x1a]
  41be2b:	cwde   
  41be2c:	loop   0x41be69
  41be2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be2f:	mov    ebx,0x924ccd17
  41be34:	or     dl,BYTE PTR [edx-0x32e0c705]
  41be3a:	push   ss
  41be3b:	shl    DWORD PTR [ebp+0x62ec0b48],0x5a
  41be42:	arpl   bx,bp
  41be44:	mov    ds:0x2180073c,al
  41be49:	pop    edx
  41be4a:	sbb    eax,0x941b2d4
  41be4f:	shl    ebp,cl
  41be51:	sahf   
  41be52:	inc    eax
  41be53:	add    cl,bl
  41be55:	pop    edi
  41be56:	mov    ah,0x3b
  41be58:	xor    al,0xd4
  41be5a:	add    BYTE PTR [ecx],ch
  41be5c:	arpl   WORD PTR [edx+0x1603f043],cx
  41be62:	aaa    
  41be63:	mov    dh,0xc8
  41be65:	cld    
  41be66:	cmc    
  41be67:	leave  
  41be68:	mov    esp,0xebccb1dc
  41be6d:	fdivrp st(3),st
  41be6f:	xor    al,0xe
  41be71:	test   dl,cl
  41be73:	pop    es
  41be74:	scas   eax,DWORD PTR es:[edi]
  41be75:	jbe    0x41be92
  41be77:	mov    ss,esp
  41be79:	rol    BYTE PTR [ebx],cl
  41be7b:	mov    al,0xf3
  41be7d:	inc    edx
  41be7e:	add    BYTE PTR [ecx],0xd7
  41be81:	or     eax,0xd2b61a12
  41be86:	mov    ecx,0xd37627cf
  41be8b:	test   eax,0x53e132e1
  41be90:	inc    esp
  41be91:	nop    ecx
  41be94:	repnz fsub QWORD PTR gs:[eax-0x35beeaa3]
  41be9c:	inc    ecx
  41be9d:	aas    
  41be9e:	lods   al,BYTE PTR ds:[esi]
  41be9f:	call   0xcbaf:0x7eb952f4
  41bea6:	pop    es
  41bea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bea8:	into   
  41bea9:	or     bl,0x22
  41beac:	popf   
  41bead:	(bad)  
  41beae:	gs or  eax,0xeea695e5
  41beb4:	stos   DWORD PTR es:[edi],eax
  41beb5:	out    dx,al
  41beb6:	inc    edi
  41beb7:	popa   
  41beb8:	aad    0x8f
  41beba:	and    eax,DWORD PTR [ebp-0x47]
  41bebd:	sub    al,0xf9
  41bebf:	xchg   BYTE PTR [edi+0x78e7e729],bl
  41bec5:	dec    edx
  41bec6:	icebp  
  41bec7:	add    DWORD PTR [ebx-0x40],eax
  41beca:	mov    bl,0x6d
  41becc:	stc    
  41becd:	or     ah,BYTE PTR [ecx]
  41becf:	xchg   esi,eax
  41bed0:	xor    ch,dl
  41bed2:	pop    ebx
  41bed3:	or     eax,0x469091e6
  41bed8:	dec    ecx
  41bed9:	inc    ebp
  41beda:	xchg   esp,eax
  41bedb:	mov    edi,0x48a21cfc
  41bee0:	je     0x41bf0b
  41bee2:	and    DWORD PTR [ecx+ecx*1],edx
  41bee5:	dec    esp
  41bee6:	shr    al,1
  41bee8:	fild   DWORD PTR [ebp+0x65]
  41beeb:	mov    esp,ds
  41beed:	je     0x41be8b
  41beef:	popa   
  41bef0:	push   ebx
  41bef1:	repz je 0x41bf6b
  41bef4:	icebp  
  41bef5:	push   ebx
  41bef6:	jecxz  0x41bf38
  41bef8:	push   edi
  41bef9:	jmp    0x41beb7
  41befb:	mov    ds:0xb28a8de5,al
  41bf00:	jg     0x41bf44
  41bf02:	out    dx,al
  41bf03:	mov    ebp,0xdfca719a
  41bf08:	loope  0x41be9f
  41bf0a:	add    DWORD PTR [edx],ebp
  41bf0c:	jnp    0x41bf01
  41bf0e:	inc    esp
  41bf0f:	test   BYTE PTR [edx+0x5c56c7e1],bh
  41bf15:	sub    BYTE PTR [ecx],0x7a
  41bf18:	leave  
  41bf19:	adc    BYTE PTR [ecx+esi*1-0x11ec4be9],bl
  41bf20:	retf   0xd162
  41bf23:	leave  
  41bf24:	mov    eax,0xecb83032
  41bf29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf2a:	inc    edi
  41bf2b:	je     0x41bf67
  41bf2d:	cmp    ebp,edi
  41bf2f:	inc    edx
  41bf30:	fild   QWORD PTR [ebx]
  41bf32:	ins    DWORD PTR es:[edi],dx
  41bf33:	shl    dh,1
  41bf35:	js     0x41bf08
  41bf37:	cmp    DWORD PTR [ebx+0x29132eda],ebp
  41bf3d:	pop    eax
  41bf3e:	and    eax,0x812192ad
  41bf43:	push   edi
  41bf44:	cmp    al,0xea
  41bf46:	pop    ebp
  41bf47:	push   0xffffffa6
  41bf49:	add    DWORD PTR [ebp+eax*4+0x92555db],0xffffff93
  41bf51:	or     al,0x11
  41bf53:	mov    ds:0x469ea1e8,al
  41bf59:	fs mov esi,0x22cb3483
  41bf5f:	cli    
  41bf60:	out    dx,eax
  41bf61:	hlt    
  41bf62:	jae    0x41bfcc
  41bf64:	retf   0x9d20
  41bf67:	dec    ebp
  41bf68:	pop    ecx
  41bf69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6a:	out    dx,eax
  41bf6b:	mov    ds:0x635d295c,al
  41bf70:	(bad)  [esp+edi*1+0xf]
  41bf74:	fmul   QWORD PTR [eax+0x72f58200]
  41bf7a:	out    dx,eax
  41bf7b:	pop    ebx
  41bf7c:	ret    
  41bf7d:	outs   dx,DWORD PTR ds:[esi]
  41bf7e:	inc    ebp
  41bf7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf80:	fld    DWORD PTR [esi-0x2026c21f]
  41bf86:	jo     0x41bfa4
  41bf88:	les    ebp,FWORD PTR [eax+0x34]
  41bf8b:	jle    0x41bf33
  41bf8d:	mov    dl,0xc8
  41bf8f:	push   esi
  41bf90:	mov    ss,WORD PTR fs:[edx]
  41bf93:	out    0x3a,eax
  41bf95:	pop    DWORD PTR [esi]
  41bf97:	(bad)  
  41bf99:	jo     0x41bf26
  41bf9b:	cmp    eax,ebx
  41bf9d:	and    DWORD PTR [eax],ebx
  41bf9f:	imul   esp,DWORD PTR [edi],0xb55b88a
  41bfa5:	pop    ds
  41bfa6:	pop    ebp
  41bfa7:	mov    esp,DWORD PTR [eax+ebx*4+0x56d4380]
  41bfae:	jmp    0x41bfad
  41bfb0:	mov    ah,0x10
  41bfb2:	bound  eax,QWORD PTR [eax-0x4d]
  41bfb5:	mov    edx,0x3d7b8010
  41bfba:	jmp    0x41bfab
  41bfbc:	jo     0x41bfa1
  41bfbe:	mov    ebx,0xb41acc72
  41bfc3:	push   esi
  41bfc4:	push   eax
  41bfc5:	dec    DWORD PTR [edi]
  41bfc7:	popa   
  41bfc8:	mov    bh,0x1a
  41bfca:	xchg   ebp,eax
  41bfcb:	lds    esi,FWORD PTR [ebx+0x79]
  41bfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfcf:	sbb    eax,0x5aeffeec
  41bfd4:	fsubp  st(1),st
  41bfd6:	lods   eax,DWORD PTR ds:[esi]
  41bfd7:	imul   eax,DWORD PTR [eax-0x152b44f9],0xffffffff
  41bfde:	dec    ebx
  41bfdf:	clc    
  41bfe0:	jg     0x41bfbe
  41bfe2:	mov    bl,bl
  41bfe4:	hlt    
  41bfe5:	enter  0xb4ef,0xb
  41bfe9:	jno    0x41bf76
  41bfeb:	xor    esi,DWORD PTR [edx-0x2d]
  41bfee:	inc    edi
  41bfef:	jg     0x41bf7f
  41bff1:	lea    edi,gs:[eax+0x399cd353]
  41bff8:	xchg   ecx,eax
  41bff9:	dec    ebp
  41bffa:	cmp    dl,BYTE PTR ds:0x39eb6fcb
  41c000:	dec    edx
  41c001:	cmp    DWORD PTR ds:[ecx-0x31a0b2ac],ecx
  41c008:	mov    ah,BYTE PTR [ecx+eax*8+0x71d08aea]
  41c00f:	lock hlt 
  41c011:	xor    DWORD PTR [ecx],ebp
  41c013:	xor    edx,edi
  41c015:	repnz sbb eax,0x2ee28481
  41c01b:	jnp    0x41bfcb
  41c01d:	mov    bh,0xcb
  41c01f:	dec    esi
  41c020:	adc    BYTE PTR ds:0x20200ca5,al
  41c026:	mov    bl,0x3d
  41c028:	xor    edi,DWORD PTR [eax+0x10c4afcb]
  41c02e:	mov    al,0x6c
  41c030:	cmp    ebp,DWORD PTR ss:[ecx+0x65d38a95]
  41c037:	and    al,0x30
  41c039:	xchg   ecx,eax
  41c03a:	adc    eax,0x2af2f613
  41c03f:	inc    esp
  41c040:	and    bh,BYTE PTR [ebp-0x39]
  41c043:	xor    esp,DWORD PTR [esi+edi*4-0x4ae29104]
  41c04a:	pop    ebp
  41c04b:	cmp    dl,BYTE PTR [eax-0xb7e985b]
  41c051:	hlt    
  41c052:	shl    ecx,1
  41c054:	jg     0x41c05e
  41c056:	enter  0x70d8,0xab
  41c05a:	out    dx,al
  41c05b:	cmp    DWORD PTR [esi-0x4d1760f7],ebx
  41c061:	std    
  41c062:	leave  
  41c063:	xlat   BYTE PTR ds:[ebx]
  41c064:	sub    dh,ah
  41c066:	out    0x6b,al
  41c068:	push   cs
  41c069:	dec    eax
  41c06a:	and    BYTE PTR [edi],al
  41c06c:	ret    
  41c06d:	imul   ebx,DWORD PTR [ebx+0x3dd31c2b],0x18
  41c074:	(bad)  
  41c075:	test   al,0xe3
  41c077:	inc    edx
  41c078:	test   eax,0x90f4647f
  41c07d:	shl    BYTE PTR [ecx-0x49993916],cl
  41c083:	cmp    ah,bh
  41c085:	add    edi,ebp
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	fucomip st,st(7)
  41c090:	fstp   st(7)
  41c092:	sar    DWORD PTR [ecx+eax*1],1
  41c095:	add    al,bh
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [edi],bl
  41c09b:	or     edx,DWORD PTR [edx+0x6c]
  41c09e:	xor    DWORD PTR [ebp+0xf],ecx
  41c0a1:	inc    esp
  41c0a2:	and    cl,al
  41c0a4:	lods   al,BYTE PTR ds:[esi]
  41c0a5:	jmp    0x41c09c
  41c0a7:	fisttp QWORD PTR [ecx-0x1ce18860]
  41c0ad:	ror    DWORD PTR [edx-0x10],0x43
  41c0b1:	dec    ecx
  41c0b2:	or     dl,BYTE PTR [edx+0x173dc96c]
  41c0b8:	xor    edx,DWORD PTR [edi-0x34]
  41c0bb:	or     BYTE PTR [ecx+0xc2e1437],bh
  41c0c1:	push   ebp
  41c0c2:	aaa    
  41c0c3:	jnp    0x41c13d
  41c0c5:	repz xchg edx,eax
  41c0c7:	fisubr WORD PTR [ecx]
  41c0c9:	mov    DWORD PTR [ebx],edi
  41c0cb:	and    BYTE PTR [ebp+0x417aac8b],0x4c
  41c0d2:	pop    es
  41c0d3:	inc    edi
  41c0d4:	cmp    esi,DWORD PTR [esi+0x52]
  41c0d7:	fcmovb st,st(1)
  41c0d9:	adc    BYTE PTR ds:0xc1adc9a4,cl
  41c0df:	jae    0x41c101
  41c0e1:	xchg   ebp,eax
  41c0e2:	(bad)  
  41c0e3:	call   0xfa31509c
  41c0e8:	idiv   DWORD PTR [eax-0x11]
  41c0eb:	(bad)  
  41c0ed:	test   eax,edx
  41c0ef:	dec    edi
  41c0f0:	cmp    eax,0x4fd9ba67
  41c0f5:	mov    DWORD PTR [edx],eax
  41c0f7:	test   BYTE PTR [edi-0xe],cl
  41c0fa:	or     BYTE PTR [bx+di],0xbb
  41c0fe:	jne    0x41c0de
  41c100:	loopne 0x41c09b
  41c102:	inc    esi
  41c103:	or     BYTE PTR [edi+ebp*2-0x542005d7],dh
  41c10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c10b:	rcl    BYTE PTR [esi],0x85
  41c10e:	xchg   DWORD PTR [esi+0x60cacf0f],esi
  41c114:	arpl   WORD PTR [esi+0x739d4c63],cx
  41c11a:	dec    esi
  41c11b:	test   DWORD PTR [ebp-0x5298394d],ecx
  41c121:	pmaddwd mm4,QWORD PTR [edi]
  41c124:	xlat   BYTE PTR ds:[ebx]
  41c125:	shr    BYTE PTR ss:[eax+0x6b],cl
  41c129:	fs cwde 
  41c12b:	int3   
  41c12c:	xor    DWORD PTR [ecx+0x5d],0x43229b57
  41c133:	punpckhdq mm2,QWORD PTR ds:0x87ad3878
  41c13a:	shr    DWORD PTR [eax-0x7b],1
  41c13d:	daa    
  41c13e:	daa    
  41c13f:	inc    eax
  41c140:	xchg   edi,eax
  41c141:	in     al,dx
  41c142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c143:	push   esi
  41c144:	inc    eax
  41c145:	cmp    BYTE PTR [edi],bl
  41c147:	into   
  41c148:	sbb    BYTE PTR [ecx],dh
  41c14a:	mov    dl,0xbf
  41c14c:	ret    0x8293
  41c14f:	imul   edi,DWORD PTR [ebx-0x2c199067],0xfffffff0
  41c156:	sub    DWORD PTR [ecx+0x471704c5],0xffffffe5
  41c15d:	adc    dh,dl
  41c15f:	cmp    al,0x39
  41c161:	enter  0xc006,0x7b
  41c165:	(bad)  
  41c166:	loop   0x41c170
  41c168:	bound  esp,QWORD PTR [esi+0x7a]
  41c16b:	mov    cl,0xe7
  41c16d:	je     0x41c18c
  41c16f:	mov    ch,0xa8
  41c171:	inc    ecx
  41c172:	or     edi,DWORD PTR [ebp-0x3da9f27]
  41c178:	es adc al,0x63
  41c17b:	or     DWORD PTR [ecx+0x5],ebx
  41c17e:	cli    
  41c17f:	xchg   esi,eax
  41c180:	icebp  
  41c181:	mov    esi,0x4763c082
  41c186:	push   ecx
  41c187:	fisub  WORD PTR [edi+0x64]
  41c18a:	add    esp,DWORD PTR [ecx-0x6b]
  41c18d:	mov    al,0x7a
  41c18f:	mov    eax,ds:0x14ac0338
  41c194:	push   es
  41c195:	les    ebx,FWORD PTR fs:0xf42d2882
  41c19c:	das    
  41c19d:	mov    DWORD PTR [esi],esi
  41c19f:	rol    BYTE PTR [edx+0x4c581cd8],0xe1
  41c1a6:	xchg   edx,eax
  41c1a7:	cmp    al,0xd7
  41c1aa:	leave  
  41c1ab:	pop    ds
  41c1ac:	mov    dh,0x3b
  41c1ae:	jne    0x41c206
  41c1b0:	fwait
  41c1b1:	push   eax
  41c1b2:	cli    
  41c1b3:	stc    
  41c1b4:	add    al,ch
  41c1b6:	and    al,0x12
  41c1b8:	xchg   esi,eax
  41c1b9:	cdq    
  41c1ba:	cld    
  41c1bb:	push   esi
  41c1bc:	rcr    BYTE PTR [edx+edx*4+0x3a54ee75],cl
  41c1c3:	aas    
  41c1c4:	mov    ah,0xe5
  41c1c6:	mov    ecx,0xcccca0fb
  41c1cb:	out    0x97,eax
  41c1cd:	xchg   BYTE PTR [ebx-0x14821a65],al
  41c1d3:	xor    cl,BYTE PTR [edi+0x20]
  41c1d6:	aad    0x7f
  41c1d8:	xor    eax,0x6ead62
  41c1dd:	repnz mov WORD PTR [edi],fs
  41c1e0:	sbb    dh,dh
  41c1e2:	mov    eax,ds:0xaa824f60
  41c1e7:	sub    esp,DWORD PTR [edi+ebx*4]
  41c1ea:	xlat   BYTE PTR ds:[ebx]
  41c1eb:	loop   0x41c174
  41c1ed:	retf   0x10f
  41c1f0:	or     ch,BYTE PTR [edi]
  41c1f2:	mov    dh,BYTE PTR [ebp+0x44647f5e]
  41c1f8:	sti    
  41c1f9:	sub    BYTE PTR [eax],bl
  41c1fb:	jg     0x41c21b
  41c1fd:	add    bh,BYTE PTR [eax-0x3e]
  41c200:	pop    edx
  41c201:	and    ch,al
  41c203:	(bad)  
  41c204:	fld    QWORD PTR [eax+0x4]
  41c207:	push   esp
  41c208:	icebp  
  41c209:	jns    0x41c283
  41c20b:	cwde   
  41c20c:	ret    0xef1f
  41c20f:	jno    0x41c230
  41c211:	aam    0x91
  41c213:	adc    al,0xfb
  41c215:	fstp   DWORD PTR [edx+esi*1-0x67e7903]
  41c21c:	or     DWORD PTR [eax-0x3f11fdfa],0x3d
  41c223:	sahf   
  41c224:	daa    
  41c225:	ret    0xfd13
  41c228:	xor    eax,esp
  41c22a:	js     0x41c26f
  41c22c:	in     al,dx
  41c22d:	cmp    al,0xba
  41c22f:	dec    ebp
  41c230:	mov    bh,0x5b
  41c232:	inc    ebx
  41c233:	and    BYTE PTR [edi+0x4a],ch
  41c236:	enter  0x6b06,0x8c
  41c23a:	fwait
  41c23b:	popa   
  41c23c:	xor    al,0x6
  41c23e:	mov    DWORD PTR [ecx+0x2a],esi
  41c241:	ss jg  0x41c1d7
  41c244:	(bad)  
  41c245:	sub    BYTE PTR [edi+0x16a7982c],dh
  41c24b:	fbstp  TBYTE PTR [edx+0x20]
  41c24e:	xchg   edi,eax
  41c24f:	mov    es,esp
  41c251:	mov    ah,0x13
  41c253:	repnz mov bl,0xdd
  41c256:	mov    esp,0xe4643851
  41c25b:	das    
  41c25c:	xchg   ecx,eax
  41c25d:	ds dec edx
  41c25f:	sbb    DWORD PTR [ecx],0xffffffb9
  41c262:	dec    eax
  41c263:	mov    al,ds:0x5785eb81
  41c269:	xor    DWORD PTR [edi+0x12],0xfffffff1
  41c26d:	xchg   DWORD PTR [edi-0x595254af],esp
  41c273:	jno    0x41c25f
  41c275:	or     eax,0xa665e7e4
  41c27a:	(bad)  
  41c27b:	push   0x26
  41c27d:	fld    QWORD PTR cs:[edx+0x64717dc4]
  41c284:	xchg   ebp,eax
  41c285:	(bad)  
  41c286:	stc    
  41c287:	sbb    BYTE PTR [ecx-0x2d],dl
  41c28a:	jb     0x41c25f
  41c28c:	shr    DWORD PTR [edx-0x14],0x9e
  41c290:	sbb    eax,0x34bb0932
  41c295:	inc    esp
  41c296:	rep lods al,BYTE PTR ds:[esi]
  41c298:	xchg   esp,eax
  41c299:	xchg   ecx,eax
  41c29a:	mov    edi,ebx
  41c29c:	lahf   
  41c29d:	daa    
  41c29e:	pop    esi
  41c29f:	pop    ds
  41c2a0:	stos   DWORD PTR es:[edi],eax
  41c2a1:	push   ebx
  41c2a2:	cmp    al,0xab
  41c2a4:	inc    edi
  41c2a5:	mov    ds:0x9a0ed945,al
  41c2aa:	call   0xe861a1b0
  41c2af:	add    ax,di
  41c2b2:	adc    cl,BYTE PTR [edx+0x66]
  41c2b5:	cld    
  41c2b6:	jmp    0x41c335
  41c2b8:	ins    BYTE PTR es:[edi],dx
  41c2b9:	rol    DWORD PTR [esi],cl
  41c2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bc:	data16 je 0x41c2be
  41c2bf:	jae    0x41c28c
  41c2c1:	push   ebx
  41c2c2:	mov    esi,0x5ff2c07b
  41c2c7:	jge    0x41c32d
  41c2c9:	xor    eax,0x3d79519e
  41c2ce:	cli    
  41c2cf:	mov    eax,0x1316bea2
  41c2d4:	mov    ds:0xd740e5b4,eax
  41c2d9:	mov    esi,0x71ebfef3
  41c2de:	and    DWORD PTR [ebp+0x26d4d1da],ebx
  41c2e4:	rol    dl,0xf9
  41c2e7:	xor    bl,BYTE PTR [ecx]
  41c2e9:	ret    
  41c2ea:	adc    eax,0xe22565a3
  41c2ef:	ds mov ch,0x5c
  41c2f2:	jbe    0x41c2f6
  41c2f4:	bound  eax,QWORD PTR [esp+edi*2+0x7b58035f]
  41c2fb:	push   ds
  41c2fc:	jnp    0x41c292
  41c2fe:	mov    fs,WORD PTR [ebx-0x5d]
  41c301:	stc    
  41c302:	iret   
  41c303:	call   0x4c23:0x1316617b
  41c30a:	std    
  41c30b:	rcl    DWORD PTR [ebp-0x54893a64],0x1
  41c312:	rcl    DWORD PTR [ecx-0x7d],1
  41c315:	stos   BYTE PTR es:[edi],al
  41c316:	fwait
  41c317:	mov    al,ah
  41c319:	push   cs
  41c31a:	xchg   dl,ah
  41c31c:	xchg   esp,eax
  41c31d:	fidivr DWORD PTR [ebp+ecx*8+0x5f4badf3]
  41c324:	or     eax,0x382136e5
  41c329:	int    0x37
  41c32b:	mov    edi,0x886faa86
  41c330:	shl    cl,0xc
  41c333:	std    
  41c334:	je     0x41c368
  41c336:	jo     0x41c36f
  41c338:	mov    WORD PTR [ebp*2-0x749bab70],cs
  41c33f:	adc    DWORD PTR ds:0xe29e5b2c,0x94c6eeb9
  41c349:	mov    ah,0xf6
  41c34b:	stos   BYTE PTR es:[edi],al
  41c34c:	bound  ebx,QWORD PTR [ebx+ebp*1-0x55d274e7]
  41c353:	ins    BYTE PTR es:[edi],dx
  41c354:	mov    cl,0xd
  41c356:	and    ebx,DWORD PTR [ebx]
  41c358:	mov    ds:0xc2ed72b6,eax
  41c35d:	cmp    al,0x74
  41c35f:	scas   al,BYTE PTR es:[edi]
  41c360:	sbb    DWORD PTR [eax],ebx
  41c362:	xlat   BYTE PTR ds:[ebx]
  41c363:	ins    BYTE PTR es:[edi],dx
  41c364:	cld    
  41c365:	out    0xdb,al
  41c367:	cmp    BYTE PTR [edi-0x3e7ec7be],al
  41c36d:	adc    DWORD PTR [edx+0xa],0x6596fb6c
  41c374:	test   al,0x8c
  41c376:	out    0xcf,al
  41c378:	push   edx
  41c379:	stos   DWORD PTR es:[edi],eax
  41c37a:	enter  0x8865,0x97
  41c37e:	adc    eax,DWORD PTR [edx]
  41c380:	fdiv   QWORD PTR ds:0xe10903ab
  41c386:	loope  0x41c3f9
  41c388:	ret    
  41c389:	mov    DWORD PTR [esi-0x5a],esp
  41c38c:	pop    ds
  41c38d:	cmp    DWORD PTR [eax-0x12],edi
  41c390:	jnp    0x41c33e
  41c392:	sbb    ecx,DWORD PTR [eax-0x26]
  41c395:	and    bh,BYTE PTR [ebp-0xd719bae]
  41c39b:	test   DWORD PTR [eax],0x9ce1debf
  41c3a1:	push   ds
  41c3a2:	push   0x47
  41c3a4:	mov    eax,0x87cb7301
  41c3a9:	push   ecx
  41c3aa:	call   0x670c471f
  41c3af:	repz lock adc eax,0xf4bea815
  41c3b6:	dec    ebp
  41c3b7:	loopne 0x41c3ec
  41c3b9:	call   0x70f4:0xe1b5981e
  41c3c0:	dec    edx
  41c3c1:	jbe    0x41c432
  41c3c3:	les    esi,FWORD PTR [ecx+0x79a3d53]
  41c3c9:	xchg   ebp,eax
  41c3ca:	gs sub eax,0x2760e4e4
  41c3d0:	call   DWORD PTR [ebx]
  41c3d2:	fwait
  41c3d3:	not    ecx
  41c3d5:	push   esi
  41c3d6:	jmp    0xdfe70fda
  41c3db:	lods   eax,DWORD PTR ds:[esi]
  41c3dc:	pop    es
  41c3dd:	pop    eax
  41c3de:	enter  0xc771,0xfa
  41c3e2:	retf   
  41c3e3:	out    0xc1,al
  41c3e5:	mov    dl,0xd0
  41c3e7:	lea    edx,[ebx-0x5c]
  41c3ea:	pop    ebp
  41c3eb:	retf   
  41c3ec:	sub    al,0x95
  41c3ee:	(bad)  
  41c3ef:	mov    edx,0x360a3a6d
  41c3f4:	stos   DWORD PTR es:[edi],eax
  41c3f5:	adc    bh,BYTE PTR [eax+0x46]
  41c3f8:	pop    ebx
  41c3f9:	jns    0x41c443
  41c3fb:	inc    ebp
  41c3fc:	imul   edx,DWORD PTR es:[esi],0xfffffffd
  41c400:	pop    ds
  41c401:	ret    0x1ba9
  41c404:	mov    al,ds:0x4aa6383a
  41c409:	adc    bl,BYTE PTR [eax]
  41c40b:	jae    0x41c442
  41c40d:	cmp    eax,0x5cbfb9bf
  41c412:	outs   dx,DWORD PTR ds:[esi]
  41c413:	dec    edi
  41c414:	dec    esi
  41c415:	push   ebp
  41c416:	(bad)  
  41c417:	lahf   
  41c418:	sbb    eax,0x365f2b66
  41c41d:	xchg   edi,eax
  41c41e:	outs   dx,DWORD PTR ds:[esi]
  41c41f:	clc    
  41c420:	jno    0x41c415
  41c422:	or     eax,0x79d156cc
  41c427:	out    0xde,al
  41c429:	xchg   edx,eax
  41c42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c42b:	or     al,0x7
  41c42d:	mov    ebx,0x551286ad
  41c432:	in     al,0x8a
  41c434:	push   eax
  41c435:	xlat   BYTE PTR ds:[ebx]
  41c436:	(bad)  
  41c438:	xor    DWORD PTR ds:0x4b5d9338,eax
  41c43e:	xchg   edi,eax
  41c43f:	push   ecx
  41c440:	push   ss
  41c441:	stos   BYTE PTR es:[edi],al
  41c442:	jns    0x41c4bf
  41c444:	das    
  41c445:	sti    
  41c446:	shl    BYTE PTR [esi+0x640d6d91],1
  41c44c:	and    DWORD PTR [eax],esp
  41c44e:	cdq    
  41c44f:	dec    eax
  41c451:	outs   dx,BYTE PTR ds:[esi]
  41c452:	add    al,0xa7
  41c454:	push   es
  41c455:	std    
  41c456:	cdq    
  41c457:	into   
  41c458:	mov    ds:0x75b4aa0b,eax
  41c45d:	sub    dh,BYTE PTR [edi]
  41c45f:	xchg   esp,eax
  41c460:	fdiv   DWORD PTR [edi+0xf]
  41c463:	fs cmp esi,ecx
  41c466:	push   ds
  41c467:	add    eax,0x2c3279a
  41c46c:	nop
  41c46d:	push   0x51
  41c46f:	and    eax,DWORD PTR [eax+0x3a1c6476]
  41c475:	push   edx
  41c476:	xchg   DWORD PTR [ebp-0x319d83a2],ecx
  41c47c:	and    eax,0x94fe90d9
  41c481:	shl    BYTE PTR [esp+edx*2],1
  41c484:	and    eax,0x47c8adaa
  41c489:	or     edi,edx
  41c48b:	xchg   esi,eax
  41c48c:	sbb    bh,dl
  41c48e:	addr16 jp 0x41c4d5
  41c491:	mov    cl,bh
  41c493:	sti    
  41c494:	lock xchg DWORD PTR [ecx],ebp
  41c497:	or     BYTE PTR [edx+esi*4-0x61dda835],0x16
  41c49f:	dec    BYTE PTR [eax]
  41c4a1:	xchg   ebx,eax
  41c4a2:	adc    al,0x27
  41c4a4:	ret    
  41c4a5:	outs   dx,DWORD PTR ds:[esi]
  41c4a6:	add    DWORD PTR [ebp-0x5b],ebx
  41c4a9:	dec    edx
  41c4aa:	das    
  41c4ab:	pushf  
  41c4ac:	push   ss
  41c4ad:	fisttp DWORD PTR [ebx+0x795dc764]
  41c4b3:	mov    ecx,0x89fc4f51
  41c4b8:	arpl   WORD PTR [ebp+0x75],dx
  41c4bb:	int    0xec
  41c4bd:	cld    
  41c4be:	or     ebx,DWORD PTR [eax+0x65]
  41c4c1:	jge    0x41c517
  41c4c3:	or     edx,DWORD PTR [ecx+0x70c05e35]
  41c4c9:	mov    bh,0xd7
  41c4cb:	cmp    al,0x70
  41c4cd:	mov    edx,0xf7223540
  41c4d2:	add    eax,0xaadb1236
  41c4d7:	sbb    eax,0x7f254b25
  41c4dc:	adc    dl,BYTE PTR [ebp+0x38]
  41c4df:	mov    al,0x5b
  41c4e1:	stos   BYTE PTR es:[edi],al
  41c4e2:	clc    
  41c4e3:	cdq    
  41c4e4:	mov    BYTE PTR [edi+0x7],al
  41c4e7:	lds    ebp,FWORD PTR [ebp+esi*8+0x6a9e3870]
  41c4ee:	bound  edi,QWORD PTR [esi-0x17591cc9]
  41c4f4:	sahf   
  41c4f5:	cdq    
  41c4f6:	push   esp
  41c4f7:	add    BYTE PTR [ebp+ecx*4+0x2f],cl
  41c4fb:	pop    edi
  41c4fc:	rcl    DWORD PTR [esp+ebx*2+0x33ab7c47],0x77
  41c504:	stos   DWORD PTR es:[edi],eax
  41c505:	jnp    0x41c48c
  41c507:	add    esp,edi
  41c509:	sbb    ebp,DWORD PTR [eax-0x4]
  41c50c:	pusha  
  41c50d:	xchg   edx,eax
  41c50e:	rcr    DWORD PTR [ecx+ebx*1+0x4c],cl
  41c512:	fnop   
  41c514:	pop    ebp
  41c515:	and    esp,DWORD PTR [esi+0x35fde4b0]
  41c51b:	cwde   
  41c51c:	lock inc esi
  41c51e:	jne    0x41c512
  41c520:	inc    ecx
  41c521:	inc    edi
  41c522:	loop   0x41c521
  41c524:	loop   0x41c528
  41c526:	out    dx,al
  41c527:	into   
  41c528:	jmp    0xf307d78
  41c52d:	or     bh,ah
  41c52f:	cmp    bh,BYTE PTR [ecx-0x30a8bec0]
  41c535:	add    DWORD PTR [ebx+0x54],ecx
  41c538:	xor    BYTE PTR [esi-0x5a],al
  41c53b:	sti    
  41c53c:	adc    DWORD PTR [ebx+0x59e5a5fe],ecx
  41c542:	sub    dh,BYTE PTR [ebp-0x7567a708]
  41c548:	icebp  
  41c549:	outs   dx,DWORD PTR ds:[esi]
  41c54a:	pushf  
  41c54b:	push   0x79
  41c54d:	push   ss
  41c54e:	sub    al,0xac
  41c550:	or     al,0x1c
  41c552:	and    ebp,DWORD PTR [ecx]
  41c554:	mov    WORD PTR [ecx+0x2e],ds
  41c557:	pop    ds
  41c558:	sub    al,BYTE PTR [ecx-0x65f23882]
  41c55e:	ret    0x96bb
  41c561:	(bad)  
  41c562:	loope  0x41c561
  41c564:	pop    esp
  41c565:	jbe    0x41c519
  41c567:	lea    ebx,ds:0x84ee8d64
  41c56d:	fld    QWORD PTR [ecx]
  41c56f:	jnp    0x41c57d
  41c571:	push   cs
  41c572:	sub    BYTE PTR [eax-0x7b],al
  41c575:	(bad)  
  41c577:	scas   eax,DWORD PTR es:[edi]
  41c578:	sub    eax,0x9d37a922
  41c57d:	mov    dl,0xc2
  41c57f:	call   0x93e4:0xd8afee83
  41c586:	leave  
  41c587:	sbb    BYTE PTR [ebx],bh
  41c589:	sub    dl,BYTE PTR [esi+0x5d64ff16]
  41c58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c590:	fwait
  41c591:	cdq    
  41c592:	in     eax,0x12
  41c594:	pop    es
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	sbb    BYTE PTR [eax+0x41c9be10],dh
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	clc    
  41c5a7:	add    al,0x0
  41c5a9:	add    BYTE PTR [ebp-0x25f32a75],dl
  41c5af:	leave  
  41c5b0:	cld    
  41c5b1:	sbb    eax,0xb12a0869
  41c5b6:	inc    ebp
  41c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b8:	fs jl  0x41c60d
  41c5bb:	imul   DWORD PTR [esi]
  41c5bd:	ret    0xa319
  41c5c0:	fwait
  41c5c1:	push   es
  41c5c2:	ins    DWORD PTR es:[edi],dx
  41c5c3:	cwde   
  41c5c4:	fst    QWORD PTR [ebx+0x10b39363]
  41c5ca:	imul   ecx,DWORD PTR [esi-0x40],0xffffffba
  41c5ce:	ins    BYTE PTR es:[edi],dx
  41c5cf:	and    eax,0x78d1f5f1
  41c5d4:	mov    eax,ds:0xe0052847
  41c5d9:	mov    edx,0x5c3bf257
  41c5de:	adc    esp,DWORD PTR [esi+0x2f63433e]
  41c5e4:	dec    esp
  41c5e5:	shl    BYTE PTR [edi],0x29
  41c5e8:	push   ss
  41c5e9:	mov    cl,0x9e
  41c5eb:	std    
  41c5ec:	mov    ecx,0xf010b20
  41c5f1:	(bad)  
  41c5f2:	icebp  
  41c5f3:	leave  
  41c5f4:	daa    
  41c5f5:	in     eax,0x2e
  41c5f7:	xchg   ecx,eax
  41c5f8:	pop    ds
  41c5f9:	xchg   ebp,edi
  41c5fb:	je     0x41c630
  41c5fd:	and    al,0xb8
  41c5ff:	in     al,0x67
  41c601:	shl    WORD PTR ds:0x42734273,1
  41c608:	inc    ecx
  41c609:	fild   WORD PTR [eax+ecx*2]
  41c60c:	adc    DWORD PTR [esi-0x626ceb2e],0xd75c41b1
  41c616:	add    DWORD PTR [ebx],0x9b9eb5b3
  41c61c:	fcomp  QWORD PTR [ecx+0x3]
  41c61f:	cmp    eax,0x95662f4c
  41c624:	add    BYTE PTR [esp+ebp*1],ch
  41c627:	(bad)  
  41c628:	ret    
  41c629:	imul   esp,DWORD PTR [eax+0x15],0xffffff8e
  41c62d:	fnstenv [esi+0x28]
  41c630:	sbb    al,0xc1
  41c632:	lahf   
  41c633:	shl    DWORD PTR [ebx-0x2a],1
  41c636:	adc    BYTE PTR [ebp+0x52],ch
  41c639:	outs   dx,DWORD PTR ds:[esi]
  41c63a:	dec    ecx
  41c63b:	adc    al,0xa3
  41c63d:	sub    dh,bh
  41c63f:	mov    DWORD PTR [ecx-0x3ce7baa8],esi
  41c645:	add    ax,0x94ae
  41c649:	xchg   edx,eax
  41c64a:	vpshab ymm6,xmm4,ds:0xa82e25f9
  41c653:	dec    esi
  41c654:	mov    al,0xcf
  41c656:	imul   ebp,DWORD PTR [edx-0x22],0x7b
  41c65a:	mul    BYTE PTR ds:0x130f1850
  41c660:	xchg   ecx,eax
  41c661:	push   ss
  41c662:	(bad)  
  41c663:	daa    
  41c664:	and    esi,esp
  41c666:	cmp    BYTE PTR [ebx],0xd3
  41c669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c66a:	jne    0x41c610
  41c66c:	jle    0x41c6e5
  41c66e:	sahf   
  41c66f:	xor    BYTE PTR [eax],dh
  41c671:	cdq    
  41c672:	in     eax,dx
  41c673:	aad    0x40
  41c675:	mov    bh,0xfb
  41c677:	adc    dl,BYTE PTR gs:[ebx]
  41c67a:	xor    ebp,DWORD PTR [esp+ebp*1-0x22]
  41c67e:	cli    
  41c67f:	pusha  
  41c680:	and    ebp,DWORD PTR [ebp+0x50485f7e]
  41c686:	test   BYTE PTR [edx],ch
  41c688:	and    esp,DWORD PTR [ebx+0x75f1cdbe]
  41c68e:	and    edx,DWORD PTR [esi]
  41c690:	or     ch,BYTE PTR [edx+0x4579f097]
  41c696:	cld    
  41c697:	loop   0x41c69e
  41c699:	int    0xcd
  41c69b:	iret   
  41c69c:	sub    al,0x45
  41c69e:	push   0x18
  41c6a0:	pop    eax
  41c6a1:	mov    eax,0xd8b5bf9f
  41c6a6:	in     al,0x53
  41c6a8:	mov    dh,0xae
  41c6aa:	arpl   WORD PTR [esi+0x6f],sp
  41c6ad:	push   eax
  41c6ae:	jae    0x41c6e3
  41c6b0:	jns    0x41c6d8
  41c6b2:	xor    eax,0x1f571271
  41c6b7:	(bad)  
  41c6b8:	imul   esi,DWORD PTR [edx+0x2f],0x32
  41c6bc:	sub    cl,dh
  41c6be:	loop   0x41c719
  41c6c0:	idiv   dl
  41c6c2:	test   esi,esp
  41c6c4:	in     al,dx
  41c6c5:	sbb    DWORD PTR [eax],0x37
  41c6c8:	popf   
  41c6c9:	clc    
  41c6ca:	sbb    ch,BYTE PTR [ecx]
  41c6cc:	xor    eax,0x331f2caf
  41c6d1:	loopne 0x41c65f
  41c6d3:	cmp    al,0x5d
  41c6d5:	bound  edx,QWORD PTR [ebx+0x40414ac7]
  41c6db:	out    0xae,eax
  41c6dd:	push   cs
  41c6de:	icebp  
  41c6df:	xor    DWORD PTR [esi-0x2d],edi
  41c6e2:	iret   
  41c6e3:	mov    WORD PTR [ebp+0xd69c817],gs
  41c6e9:	and    eax,0x8f37ae81
  41c6ee:	fnstenv [eax+0x6f]
  41c6f1:	and    cl,cl
  41c6f3:	ins    BYTE PTR es:[edi],dx
  41c6f4:	lds    esi,FWORD PTR [ebx+edi*2-0x3b]
  41c6f8:	ins    BYTE PTR es:[edi],dx
  41c6f9:	fst    QWORD PTR [esp+esi*4-0x4fcfbd7b]
  41c700:	xchg   ecx,eax
  41c701:	jg     0x41c6a6
  41c703:	lock adc ebp,DWORD PTR [eax+0x3]
  41c707:	mov    eax,0x9ddb868a
  41c70c:	and    ch,BYTE PTR [esi+0xa94fab1]
  41c712:	push   cs
  41c713:	aas    
  41c714:	addr16 js 0x41c74b
  41c717:	pop    edx
  41c718:	push   ebx
  41c719:	ins    DWORD PTR es:[edi],dx
  41c71a:	sbb    eax,0x632bf117
  41c71f:	inc    ecx
  41c720:	into   
  41c721:	(bad)  
  41c723:	dec    esi
  41c724:	jo     0x41c6a8
  41c726:	(bad)  
  41c727:	(bad)  
  41c729:	loope  0x41c790
  41c72b:	outs   dx,BYTE PTR ds:[esi]
  41c72c:	out    0xe4,eax
  41c72e:	push   cs
  41c72f:	shl    DWORD PTR [ebx],cl
  41c731:	and    esi,ebp
  41c733:	test   DWORD PTR [esi+0x3f],edx
  41c736:	push   eax
  41c737:	hlt    
  41c738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c739:	data16 jo 0x41c77b
  41c73c:	es loopne 0x41c7af
  41c73f:	mov    al,dh
  41c741:	sbb    BYTE PTR [ebp+0x3c6f8815],0x98
  41c748:	pop    edx
  41c749:	imul   esp,DWORD PTR [eax],0xdd8280bb
  41c74f:	inc    esp
  41c750:	adc    al,0xf3
  41c752:	cs scas eax,DWORD PTR es:[edi]
  41c754:	jl     0x41c70c
  41c756:	adc    dl,BYTE PTR [edi-0x7a4be1b]
  41c75c:	xchg   edi,eax
  41c75d:	je     0x41c73c
  41c75f:	jbe    0x41c764
  41c761:	repz jns 0x41c751
  41c764:	nop
  41c765:	das    
  41c766:	mov    cl,0xca
  41c768:	mov    dl,0x5f
  41c76a:	repz mov eax,0x4867fc9f
  41c770:	rol    BYTE PTR [edi],cl
  41c772:	pop    es
  41c773:	or     edi,ebp
  41c775:	jecxz  0x41c743
  41c777:	rol    ebx,cl
  41c779:	std    
  41c77a:	push   ebp
  41c77b:	les    esi,FWORD PTR [edi]
  41c77d:	dec    ebp
  41c77e:	add    bh,BYTE PTR [esi+0x35]
  41c781:	inc    ebx
  41c782:	cld    
  41c783:	or     esp,edx
  41c785:	jg     0x41c777
  41c787:	pop    esi
  41c788:	dec    esp
  41c789:	cmp    DWORD PTR [esi+0x70],esp
  41c78c:	lahf   
  41c78d:	sbb    BYTE PTR [edi-0x47],0xe9
  41c791:	dec    eax
  41c792:	add    BYTE PTR [eax],dl
  41c794:	jl     0x41c737
  41c796:	cdq    
  41c797:	pop    eax
  41c798:	xchg   ebp,eax
  41c799:	xchg   esp,eax
  41c79a:	adc    al,0x58
  41c79c:	jnp    0x41c81a
  41c79e:	aam    0x9a
  41c7a0:	pop    ebp
  41c7a1:	sub    ecx,0x357fd375
  41c7a7:	fisttp WORD PTR [ebp+0x2206956]
  41c7ad:	aam    0xe4
  41c7af:	and    dh,BYTE PTR [edi]
  41c7b1:	add    BYTE PTR [ebx],dl
  41c7b3:	adc    al,BYTE PTR [ecx+esi*2]
  41c7b6:	into   
  41c7b7:	loop   0x41c797
  41c7b9:	cld    
  41c7ba:	dec    edx
  41c7bb:	pop    edi
  41c7bc:	jnp    0x41c7ba
  41c7be:	iret   
  41c7bf:	xchg   esp,eax
  41c7c0:	aas    
  41c7c1:	arpl   WORD PTR ds:0xe550c908,cx
  41c7c7:	push   ds
  41c7c8:	fs loopne 0x41c77f
  41c7cb:	addr16 mov ecx,0xec3fa95f
  41c7d1:	jge    0x41c7dd
  41c7d3:	and    bl,BYTE PTR [edi]
  41c7d5:	inc    eax
  41c7d6:	daa    
  41c7d7:	cs add eax,0xd8823c26
  41c7dd:	stos   DWORD PTR es:[edi],eax
  41c7de:	pushf  
  41c7df:	sbb    eax,0x50b32bd2
  41c7e4:	jnp    0x41c7ca
  41c7e6:	aam    0x9e
  41c7e8:	neg    DWORD PTR [edi+0x1d39237e]
  41c7ee:	jns    0x41c818
  41c7f0:	cmc    
  41c7f1:	xor    BYTE PTR [eax-0x78],cl
  41c7f4:	sub    DWORD PTR [eax-0x50],ecx
  41c7f7:	bound  edx,QWORD PTR [edx-0x309b4888]
  41c7fd:	mov    esp,0x7c600a63
  41c802:	pop    edi
  41c803:	cmp    DWORD PTR cs:[ebp-0x7ba39e1b],ebx
  41c80a:	test   eax,0x309f0ba9
  41c80f:	ret    
  41c810:	aaa    
  41c811:	daa    
  41c812:	cmp    esp,DWORD PTR [esi+ebx*1]
  41c815:	arpl   WORD PTR [edi],si
  41c817:	jne    0x41c850
  41c819:	xor    eax,0x5268927
  41c81e:	aaa    
  41c81f:	xchg   ebx,eax
  41c820:	xor    eax,0x151f5128
  41c825:	xor    eax,DWORD PTR [edi]
  41c827:	adc    BYTE PTR [ebp+0x6426b2c8],ch
  41c82d:	mov    dh,0xad
  41c82f:	xchg   BYTE PTR [esi-0x77],ch
  41c832:	mov    al,ds:0x704c6887
  41c837:	mov    al,0x69
  41c839:	(bad)  
  41c83a:	and    al,0xee
  41c83c:	xchg   esp,eax
  41c83d:	sub    DWORD PTR [ebx+0x3e],ebx
  41c840:	aaa    
  41c841:	or     eax,0xb32fc8b3
  41c846:	lea    ebx,[esi-0x4c8dd142]
  41c84c:	jle    0x41c7ff
  41c84e:	sbb    BYTE PTR ds:0xe513,dh
  41c853:	or     DWORD PTR [edx+0x3284ee27],ecx
  41c859:	mov    cl,0xcf
  41c85b:	push   ds
  41c85c:	arpl   WORD PTR [ecx-0x18],dx
  41c85f:	iret   
  41c860:	mov    ds:0xec041361,al
  41c865:	mov    dh,0xf1
  41c867:	lods   al,BYTE PTR ds:[esi]
  41c868:	popa   
  41c869:	xchg   ebx,eax
  41c86a:	mov    cl,0x25
  41c86c:	jbe    0x41c81e
  41c86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86f:	add    DWORD PTR [ecx+0x50],ecx
  41c872:	mov    ah,0xc2
  41c874:	adc    eax,0x672d393
  41c879:	cdq    
  41c87a:	pop    ds
  41c87b:	pop    edx
  41c87c:	inc    edi
  41c87d:	shr    DWORD PTR [eax-0x2c],1
  41c880:	dec    eax
  41c881:	test   al,0xbb
  41c883:	repz mov bl,0xe9
  41c886:	jl     0x41c87c
  41c888:	dec    ebx
  41c889:	jmp    0x5c31f353
  41c88e:	bound  edi,QWORD PTR [edx]
  41c890:	pop    ebx
  41c891:	or     eax,DWORD PTR [eax-0x59]
  41c894:	ins    DWORD PTR es:[edi],dx
  41c895:	aam    0xa6
  41c897:	fadd   DWORD PTR [edi+ebx*4+0x40]
  41c89b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c89d:	mov    ecx,0x8455bfd8
  41c8a2:	xchg   ebp,eax
  41c8a3:	mul    BYTE PTR [eax]
  41c8a5:	cmp    BYTE PTR [ebp-0x50],dl
  41c8a8:	test   eax,esi
  41c8aa:	adc    BYTE PTR [ecx],bl
  41c8ac:	push   0x4f
  41c8ae:	jmp    0x4f76652f
  41c8b3:	pop    ebx
  41c8b4:	stos   BYTE PTR es:[edi],al
  41c8b5:	(bad)  
  41c8b6:	cli    
  41c8b7:	cs xchg ebp,eax
  41c8b9:	hlt    
  41c8ba:	cmc    
  41c8bb:	xor    al,BYTE PTR [ecx+0x30]
  41c8be:	jge    0x41c84b
  41c8c0:	fwait
  41c8c1:	mov    esp,0x7aad2368
  41c8c6:	addr16 out dx,eax
  41c8c8:	into   
  41c8c9:	mov    esp,0x98f41c27
  41c8ce:	xor    al,0x3
  41c8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d1:	popa   
  41c8d2:	jl     0x41c877
  41c8d4:	jns    0x41c868
  41c8d6:	popa   
  41c8d7:	mov    WORD PTR [ebp+esi*2+0x3b6d6ac],fs
  41c8de:	jge    0x41c8f9
  41c8e0:	outs   dx,BYTE PTR ds:[esi]
  41c8e1:	sbb    DWORD PTR ds:0x3a3e8735,esi
  41c8e7:	jb     0x41c90a
  41c8e9:	or     edx,DWORD PTR [eax]
  41c8eb:	fidiv  DWORD PTR [ebx-0x74aff9f6]
  41c8f1:	(bad)  
  41c8f3:	mov    DWORD PTR [esi-0x48d52719],ecx
  41c8f9:	jg     0x41c96a
  41c8fb:	dec    edi
  41c8fc:	sar    DWORD PTR [edi],1
  41c8fe:	imul   edx,DWORD PTR [edx],0x1639c118
  41c904:	adc    eax,0x493c2c29
  41c909:	mov    eax,DWORD PTR [ecx]
  41c90b:	mov    ah,0xee
  41c90d:	and    ebx,DWORD PTR [esi-0x4001d128]
  41c913:	xchg   esi,eax
  41c914:	bnd jge 0x41c8ce
  41c917:	lahf   
  41c918:	dec    esi
  41c919:	dec    ecx
  41c91a:	stc    
  41c91b:	jecxz  0x41c98a
  41c91d:	pop    edi
  41c91e:	loop   0x41c8ee
  41c920:	test   BYTE PTR [eax+0x4e2b3bd0],0xac
  41c927:	sub    DWORD PTR [esi],0x9d4832f0
  41c92d:	mov    WORD PTR [ebx+eax*1],es
  41c930:	int    0x74
  41c932:	lds    edx,FWORD PTR [ebx-0x5f]
  41c935:	jo     0x41c987
  41c937:	push   ds
  41c938:	xchg   edx,eax
  41c939:	and    BYTE PTR [esi+edx*8],cl
  41c93c:	int    0xe4
  41c93e:	push   0xffffff94
  41c940:	mov    cl,0x24
  41c942:	das    
  41c943:	test   eax,0x67763a39
  41c948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c949:	lods   eax,DWORD PTR ds:[esi]
  41c94a:	sbb    BYTE PTR [ecx+0x4565ca54],dh
  41c950:	call   0xee69:0xbbb207e3
  41c957:	lea    ecx,[ecx+ebp*4+0x39498c48]
  41c95e:	iret   
  41c95f:	shl    al,cl
  41c961:	inc    esp
  41c962:	mov    al,ds:0xab8b8fd0
  41c967:	stos   BYTE PTR es:[edi],al
  41c968:	sbb    esp,eax
  41c96a:	adc    ecx,DWORD PTR [eax-0x39e13511]
  41c970:	mov    esp,0x5a10cb72
  41c975:	loopne 0x41c990
  41c977:	xchg   ebp,eax
  41c978:	nop
  41c979:	rcl    BYTE PTR [edi],1
  41c97b:	inc    esp
  41c97c:	inc    edx
  41c97d:	(bad)  
  41c97e:	cmc    
  41c97f:	mov    ds:0xd42a2914,eax
  41c984:	xchg   edi,eax
  41c985:	loope  0x41c92e
  41c987:	ins    BYTE PTR es:[edi],dx
  41c988:	std    
  41c989:	mov    bl,0x5f
  41c98b:	pop    edi
  41c98c:	shl    BYTE PTR cs:[ebp-0x2c],0xf3
  41c991:	aad    0xec
  41c993:	xchg   ebp,eax
  41c994:	inc    ebp
  41c995:	jmp    0x2e45d73d
  41c99a:	pop    esp
  41c99b:	xor    ebx,DWORD PTR [esi+0x1b0f5af0]
  41c9a1:	push   edx
  41c9a2:	pop    edx
  41c9a3:	push   ss
  41c9a4:	rcl    BYTE PTR [ebp-0x6627dfae],cl
  41c9aa:	outs   dx,DWORD PTR ds:[esi]
  41c9ab:	jl     0x41ca00
  41c9ad:	inc    esp
  41c9ae:	shl    edi,1
  41c9b0:	xchg   DWORD PTR [eax-0x4f41cb7],esi
  41c9b6:	js     0x41c9c7
  41c9b8:	sti    
  41c9b9:	push   edi
  41c9ba:	clc    
  41c9bb:	pop    ebp
  41c9bc:	je     0x41ca35
  41c9be:	in     al,dx
  41c9bf:	mov    bl,0x25
  41c9c1:	ins    DWORD PTR es:[edi],dx
  41c9c2:	sub    al,0xd2
  41c9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c5:	fmul   DWORD PTR [edx+0x5c4b28d8]
  41c9cb:	sub    al,0xaa
  41c9cd:	daa    
  41c9ce:	fstp   QWORD PTR [ecx-0x6b]
  41c9d1:	mov    dh,BYTE PTR [ecx-0x3f7fe0ea]
  41c9d7:	xor    DWORD PTR [edi-0x4ea803ec],ebp
  41c9dd:	dec    eax
  41c9de:	adc    eax,0x77ea104e
  41c9e3:	xchg   ecx,eax
  41c9e4:	outs   dx,DWORD PTR ds:[esi]
  41c9e5:	jno    0x41c977
  41c9e7:	mov    eax,0x42d749d5
  41c9ec:	push   ebx
  41c9ed:	arpl   WORD PTR [ebp+0x79],di
  41c9f0:	ins    DWORD PTR es:[edi],dx
  41c9f1:	jnp    0x41ca45
  41c9f3:	out    dx,eax
  41c9f4:	sbb    esi,DWORD PTR [ecx+0x417425d5]
  41c9fa:	mov    dx,dx
  41c9fd:	js     0x41ca04
  41c9ff:	and    BYTE PTR [ecx+edx*8],bl
  41ca02:	aad    0x55
  41ca04:	mov    bh,0xd2
  41ca06:	gs scas eax,DWORD PTR es:[edi]
  41ca08:	scas   al,BYTE PTR es:[edi]
  41ca09:	icebp  
  41ca0a:	sbb    BYTE PTR [ebp-0x5a],0x2e
  41ca0e:	dec    esp
  41ca0f:	add    cl,dl
  41ca11:	mov    al,BYTE PTR [esi-0x2e]
  41ca14:	adc    ah,dl
  41ca16:	shl    DWORD PTR [ebx],0xf1
  41ca19:	test   eax,0x3c6e9105
  41ca1e:	or     ebx,ecx
  41ca20:	inc    eax
  41ca21:	mov    gs,WORD PTR [edx+0x3dc0b82b]
  41ca27:	into   
  41ca28:	cmp    al,0x6f
  41ca2a:	xchg   ebx,esi
  41ca2c:	jnp    0x41ca56
  41ca2e:	imul   di,WORD PTR [ebp-0x51],0x64
  41ca33:	sbb    BYTE PTR [ebx+0xa743996],ch
  41ca39:	lods   al,BYTE PTR ds:[esi]
  41ca3a:	call   0x5a6f:0xfe30741e
  41ca41:	scas   eax,DWORD PTR es:[edi]
  41ca42:	enter  0x6245,0xe
  41ca46:	(bad)  
  41ca48:	in     eax,0x90
  41ca4a:	jnp    0x41c9ee
  41ca4c:	mov    esi,0xbd212994
  41ca51:	out    0xd3,al
  41ca53:	sar    DWORD PTR [edx+edi*4],0xbe
  41ca57:	test   DWORD PTR [ebp-0x1a],0x33face4d
  41ca5e:	xor    esp,0xffffff99
  41ca61:	mov    dl,0xb4
  41ca63:	sar    DWORD PTR [edi+0x44],cl
  41ca66:	xor    edx,DWORD PTR [esi-0x43741191]
  41ca6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca6d:	adc    dl,BYTE PTR [edi]
  41ca6f:	push   esp
  41ca70:	stc    
  41ca71:	test   BYTE PTR cs:[eax],ah
  41ca74:	push   esp
  41ca75:	and    eax,0x2b9e46b6
  41ca7a:	xchg   ebp,eax
  41ca7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca7c:	jge    0x41ca1e
  41ca7e:	xchg   ebp,eax
  41ca7f:	sbb    DWORD PTR [ebp-0x3a],0xa
  41ca83:	retf   
  41ca84:	or     ebp,DWORD PTR [edi+esi*1+0x28]
  41ca88:	call   0xc932:0x16113428
  41ca8f:	mov    edx,DWORD PTR [esi-0x4fdf51f4]
  41ca95:	mov    ah,BYTE PTR [edi-0x69]
  41ca98:	(bad)  
  41ca99:	xchg   ebp,eax
  41ca9a:	loopne 0x41ca53
  41ca9c:	push   ss
  41ca9d:	ja     0x41cabf
  41ca9f:	stos   DWORD PTR es:[edi],eax
  41caa0:	test   al,0x20
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x21]
  41caaf:	enter  0x8277,0xc1
  41cab3:	inc    esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	clc    
  41cab7:	add    al,0x0
  41cab9:	add    cl,bl
  41cabb:	inc    ebp
  41cabc:	sub    DWORD PTR [eax-0x2e],eax
  41cabf:	xor    al,0xea
  41cac1:	mov    esp,0x52beb4af
  41cac6:	rcl    BYTE PTR [ebx],cl
  41cac8:	sbb    eax,0x5bf2c591
  41cacd:	fst    st(2)
  41cacf:	arpl   WORD PTR [esi],bx
  41cad1:	sub    DWORD PTR [esp+ebp*1+0x66],eax
  41cad5:	push   edx
  41cad6:	(bad)  [esi]
  41cad8:	xchg   ebp,eax
  41cad9:	clc    
  41cada:	cmc    
  41cadb:	scas   eax,DWORD PTR es:[edi]
  41cadc:	pop    edx
  41cadd:	dec    esp
  41cade:	js     0x41ca7b
  41cae0:	xlat   BYTE PTR ds:[ebx]
  41cae1:	ror    DWORD PTR [eax+ecx*2+0x3e],1
  41cae5:	dec    eax
  41cae7:	pop    ebp
  41cae8:	or     cl,BYTE PTR [ebx+0x568315b8]
  41caee:	imul   BYTE PTR [ecx]
  41caf0:	xor    eax,0xf586e930
  41caf5:	retf   
  41caf6:	pop    ds
  41caf7:	push   ds
  41caf8:	lds    edi,FWORD PTR [edi]
  41cafa:	sub    eax,0x76efbf19
  41caff:	test   al,0x85
  41cb01:	int    0x90
  41cb03:	imul   edi,DWORD PTR [edi+0x5f],0xd5e957b3
  41cb0a:	lahf   
  41cb0b:	leave  
  41cb0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb0d:	test   eax,0x9cf874fd
  41cb12:	sti    
  41cb13:	pop    edi
  41cb14:	mov    eax,0x2ca32363
  41cb19:	fnstcw WORD PTR [ecx+0x35]
  41cb1c:	test   BYTE PTR [edi],dh
  41cb1e:	xchg   edi,eax
  41cb1f:	xor    eax,0x94423b8a
  41cb24:	aad    0xdc
  41cb26:	outs   dx,BYTE PTR ds:[esi]
  41cb27:	and    eax,0xc3c74634
  41cb2c:	adc    DWORD PTR [edi],edx
  41cb2e:	and    esp,DWORD PTR [ecx+eax*8+0x31]
  41cb32:	mov    cs,edx
  41cb34:	pusha  
  41cb35:	mov    ebp,DWORD PTR [edi-0xc]
  41cb38:	outs   dx,DWORD PTR ds:[esi]
  41cb39:	cs jbe 0x41cb5f
  41cb3c:	push   ecx
  41cb3d:	xchg   edx,eax
  41cb3e:	in     eax,0x6e
  41cb40:	pop    edi
  41cb41:	pushf  
  41cb42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb43:	dec    esp
  41cb44:	and    al,BYTE PTR ds:0x5ac1678a
  41cb4a:	jl     0x41caf4
  41cb4c:	xchg   edx,eax
  41cb4d:	cld    
  41cb4e:	imul   DWORD PTR [eax-0x11]
  41cb51:	dec    edx
  41cb52:	add    al,0xc3
  41cb54:	out    0x3c,eax
  41cb56:	add    ecx,DWORD PTR [ebp+0xa484c1b]
  41cb5c:	ds rcl dl,0xe3
  41cb60:	mov    ah,0x9b
  41cb62:	add    eax,0x55ab55c9
  41cb67:	sub    DWORD PTR [ecx],eax
  41cb69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb6a:	inc    edx
  41cb6b:	std    
  41cb6c:	aad    0xa9
  41cb6e:	pusha  
  41cb6f:	ins    DWORD PTR es:[edi],dx
  41cb70:	js     0x41cb93
  41cb72:	xor    BYTE PTR [ecx+0x2cd88194],bh
  41cb78:	jnp    0x41cb95
  41cb7a:	jbe    0x41cba3
  41cb7c:	imul   ebx,DWORD PTR [bx+si-0x3f68],0xffffffef
  41cb82:	adc    al,BYTE PTR [esp+ebx*8]
  41cb85:	dec    ebx
  41cb86:	xor    esi,DWORD PTR [esi-0x5f]
  41cb89:	and    dh,BYTE PTR [ebx+0x75]
  41cb8c:	mov    bl,0xb9
  41cb8e:	xchg   ebx,eax
  41cb8f:	in     eax,dx
  41cb90:	mov    ebp,0xf795889d
  41cb95:	test   BYTE PTR [edx],0x50
  41cb98:	pop    ebp
  41cb99:	retf   0x96c
  41cb9c:	or     ch,BYTE PTR [edx-0x7d]
  41cb9f:	mov    ch,0xa3
  41cba1:	mov    BYTE PTR [ecx+0x3b],dl
  41cba4:	xchg   ebx,eax
  41cba5:	sub    al,bh
  41cba7:	jl     0x41cbf4
  41cba9:	inc    edx
  41cbaa:	xor    eax,0x4bcf2e6c
  41cbaf:	retf   0x554b
  41cbb2:	cld    
  41cbb3:	mov    bh,0x79
  41cbb5:	aam    0x8d
  41cbb7:	push   edi
  41cbb8:	jmp    0x41cb8b
  41cbba:	push   esi
  41cbbb:	out    0x41,eax
  41cbbd:	hlt    
  41cbbe:	sub    BYTE PTR [edi+0x45],dl
  41cbc1:	(bad)  
  41cbc2:	jp     0x41cc03
  41cbc4:	cmp    ebx,esp
  41cbc6:	aam    0xa0
  41cbc8:	test   eax,0x5bc338ba
  41cbcd:	xor    esi,DWORD PTR ds:0x9efd80fe
  41cbd3:	push   0x2a
  41cbd5:	popf   
  41cbd6:	test   ch,0x4e
  41cbd9:	rol    DWORD PTR [edx+0x10],1
  41cbdc:	ins    BYTE PTR es:[edi],dx
  41cbdd:	test   al,0xb2
  41cbdf:	inc    ebp
  41cbe0:	bound  eax,QWORD PTR [edi-0x3b]
  41cbe3:	inc    edx
  41cbe5:	imul   ebp,ebp,0xfffffff6
  41cbe8:	js     0x41cc1c
  41cbea:	test   DWORD PTR [ecx-0x9e9fe67],ebx
  41cbf0:	jg     0x41cba4
  41cbf2:	imul   ebx,DWORD PTR [ecx],0x21
  41cbf5:	(bad)  [esi+esi*4-0x7fbcd0f]
  41cbfc:	pop    es
  41cbfd:	repz xor eax,0x397ef7af
  41cc03:	leave  
  41cc04:	fsub   DWORD PTR [eax+0x29]
  41cc07:	test   DWORD PTR [edi+esi*1],ebx
  41cc0a:	repnz test ecx,esp
  41cc0d:	daa    
  41cc0e:	sbb    ebp,DWORD PTR ds:0xdf56c819
  41cc14:	mov    ?,WORD PTR [eax+0x33901969]
  41cc1a:	aad    0xa9
  41cc1c:	add    edx,DWORD PTR [esi]
  41cc1e:	dec    esp
  41cc1f:	and    edi,DWORD PTR [ecx-0x502b38f8]
  41cc25:	int    0xbf
  41cc27:	mov    dh,0x4e
  41cc29:	fst    DWORD PTR [esi+edx*8+0x75]
  41cc2d:	icebp  
  41cc2e:	sub    al,BYTE PTR [edi]
  41cc30:	xor    edi,edi
  41cc32:	jge    0x41cc43
  41cc34:	sahf   
  41cc35:	retf   
  41cc36:	push   es
  41cc37:	daa    
  41cc38:	xchg   edx,eax
  41cc39:	cmc    
  41cc3a:	enter  0x9c05,0xb1
  41cc3e:	stos   BYTE PTR es:[edi],al
  41cc3f:	ret    
  41cc40:	lahf   
  41cc41:	test   eax,0x3171db5d
  41cc46:	dec    edx
  41cc47:	(bad)  
  41cc48:	dec    ecx
  41cc49:	and    eax,0xd5a8ac13
  41cc4e:	aad    0x47
  41cc50:	and    al,0x6d
  41cc52:	adc    BYTE PTR [esi+0x68],0xdf
  41cc56:	jmp    0xb706:0x13d2c03f
  41cc5d:	movd   DWORD PTR [edx+0x33eb9884],mm1
  41cc64:	out    dx,eax
  41cc65:	test   al,0xd4
  41cc67:	inc    esp
  41cc68:	lods   al,BYTE PTR ds:[esi]
  41cc69:	jl     0x41ccb2
  41cc6b:	pop    ds
  41cc6c:	add    BYTE PTR [ebp-0x64a67087],ah
  41cc72:	pop    edi
  41cc73:	pop    eax
  41cc74:	scas   eax,DWORD PTR es:[edi]
  41cc75:	popf   
  41cc76:	and    DWORD PTR [esi],ebx
  41cc78:	mov    edi,0x2e55c536
  41cc7d:	fdiv   DWORD PTR ds:0x5be7bdf8
  41cc83:	mov    eax,ds:0x4a278274
  41cc88:	adc    BYTE PTR [esi+0x30c8ad1b],bh
  41cc8e:	cmp    DWORD PTR [edi-0x70ae4dc8],esi
  41cc94:	sbb    bh,0x7a
  41cc97:	and    ch,BYTE PTR [edi+esi*8]
  41cc9a:	or     BYTE PTR [ecx],al
  41cc9c:	scas   al,BYTE PTR es:[edi]
  41cc9d:	pop    esp
  41cc9e:	out    0x7,al
  41cca0:	clc    
  41cca1:	push   edx
  41cca2:	fdivr  QWORD PTR [eax-0x6]
  41cca5:	mov    edx,0x2d9af19f
  41ccaa:	pop    ebp
  41ccab:	aam    0x7f
  41ccad:	fldcw  WORD PTR [edi+0x4a7efb44]
  41ccb3:	jne    0x41cc37
  41ccb5:	ja     0x41cd0e
  41ccb7:	pop    ebp
  41ccb8:	adc    ebx,DWORD PTR [ebp+0x7011276e]
  41ccbe:	and    DWORD PTR [ebp-0x4d],0xa4e6b439
  41ccc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccc6:	xchg   edx,eax
  41ccc7:	inc    BYTE PTR [ebx+0x47]
  41ccca:	jb     0x41cd02
  41cccc:	int    0xb0
  41ccce:	sub    esi,esp
  41ccd0:	scas   eax,DWORD PTR es:[edi]
  41ccd1:	or     BYTE PTR [esi-0x68],ch
  41ccd4:	add    eax,0x2c315724
  41ccd9:	xchg   BYTE PTR [esp+eiz*8],al
  41ccdc:	es inc ebp
  41ccde:	nop
  41ccdf:	push   0x14
  41cce1:	xor    al,0xfa
  41cce3:	fist   DWORD PTR ds:0x31c6638
  41cce9:	ja     0x41cca7
  41cceb:	push   ebx
  41ccec:	push   es
  41cced:	xchg   edx,eax
  41ccee:	push   ebp
  41ccef:	or     al,0x9b
  41ccf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccf2:	inc    ebx
  41ccf3:	push   ss
  41ccf4:	adc    eax,0x2ff2581e
  41ccf9:	pusha  
  41ccfa:	out    0xca,eax
  41ccfc:	sub    edi,DWORD PTR [ecx]
  41ccfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccff:	aad    0xcf
  41cd01:	mov    ch,0x1a
  41cd03:	push   es
  41cd04:	loopne 0x41ccac
  41cd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd07:	out    dx,eax
  41cd08:	sbb    al,0x56
  41cd0a:	stos   DWORD PTR es:[edi],eax
  41cd0b:	pusha  
  41cd0c:	call   0xeb10:0x93d8f304
  41cd13:	push   ebp
  41cd14:	mov    eax,ds:0x22dd8c6b
  41cd19:	call   0x2c8e:0x30dad051
  41cd20:	sbb    BYTE PTR [ebp+ecx*4+0x77],0x3a
  41cd25:	ret    
  41cd26:	(bad)  
  41cd27:	jge    0x41cd88
  41cd29:	out    0x42,eax
  41cd2b:	xchg   ebx,eax
  41cd2c:	sub    eax,DWORD PTR [ebx-0x15]
  41cd2f:	inc    ebp
  41cd30:	cdq    
  41cd31:	aad    0xea
  41cd33:	jae    0x41ccdb
  41cd35:	push   esp
  41cd36:	add    BYTE PTR [ebx+0x4d9c6154],0x6f
  41cd3d:	(bad)  
  41cd3e:	jge    0x41cd7d
  41cd40:	jp     0x41cd69
  41cd42:	mov    dh,0xd0
  41cd44:	xchg   ch,cl
  41cd46:	mov    ds:0x9f86dc47,al
  41cd4b:	mov    ch,0x29
  41cd4d:	push   0x11ea355d
  41cd52:	cmp    al,0x80
  41cd54:	push   cs
  41cd55:	data16 scas al,BYTE PTR es:[edi]
  41cd57:	jecxz  0x41ccf1
  41cd59:	ins    DWORD PTR es:[edi],dx
  41cd5a:	fsub   DWORD PTR [ebx+0x11055df5]
  41cd60:	rcl    BYTE PTR [esi+eiz*1-0x48],1
  41cd64:	dec    esp
  41cd65:	xchg   DWORD PTR [edx],eax
  41cd67:	xchg   esi,eax
  41cd68:	clc    
  41cd69:	neg    BYTE PTR [esp+eax*2]
  41cd6c:	jge    0x41cd6c
  41cd6e:	clc    
  41cd6f:	sub    ah,ah
  41cd71:	xchg   ecx,eax
  41cd72:	shl    DWORD PTR [ebx+0x9],0x7b
  41cd76:	inc    edx
  41cd77:	hlt    
  41cd78:	push   esp
  41cd79:	ds push esi
  41cd7b:	cli    
  41cd7c:	sbb    bl,BYTE PTR [ebx+0xa]
  41cd7f:	aas    
  41cd80:	mov    dl,ah
  41cd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd83:	mov    WORD PTR [edx-0x63],fs
  41cd86:	mov    ebp,DWORD PTR [eax+0x42]
  41cd89:	jl     0x41cdb9
  41cd8b:	aam    0x27
  41cd8d:	lods   eax,DWORD PTR ds:[esi]
  41cd8e:	mov    ebp,0x3e623da5
  41cd93:	mov    edx,0xe6640d04
  41cd98:	stos   BYTE PTR es:[edi],al
  41cd99:	xlat   BYTE PTR ds:[ebx]
  41cd9a:	aaa    
  41cd9b:	xor    dh,BYTE PTR [ebx+0x7cf338fa]
  41cda1:	jecxz  0x41cd45
  41cda3:	cs mov ch,0xa8
  41cda6:	jp     0x41cd99
  41cda8:	je     0x41cdb0
  41cdaa:	dec    edi
  41cdab:	rcl    DWORD PTR [ecx+ebx*4+0x72ac29f3],cl
  41cdb2:	call   0x4352:0x1a4ef57f
  41cdb9:	dec    edx
  41cdba:	leave  
  41cdbb:	add    edx,DWORD PTR [esp+eiz*8-0x1a3c443b]
  41cdc2:	not    DWORD PTR [ebx+0x37359ad]
  41cdc8:	jo     0x41cd4f
  41cdca:	push   edx
  41cdcb:	ins    BYTE PTR es:[edi],dx
  41cdcc:	ret    0x1b02
  41cdcf:	adc    ebp,0xffffffc2
  41cdd2:	cmp    edx,DWORD PTR [ecx]
  41cdd4:	ins    BYTE PTR es:[edi],dx
  41cdd5:	loopne 0x41cd7f
  41cdd7:	dec    edi
  41cdd8:	adc    BYTE PTR [edx+0x3b],dl
  41cddb:	sub    al,0xad
  41cddd:	loopne 0x41ce2c
  41cddf:	mov    DWORD PTR [ebx-0x4e111be6],ebp
  41cde5:	in     eax,dx
  41cde6:	mov    ch,0x2f
  41cde8:	enter  0x3abb,0xf7
  41cdec:	jge    0x41ce0a
  41cdee:	cmp    al,0xdd
  41cdf0:	xchg   edx,eax
  41cdf1:	cmp    BYTE PTR ss:0x3c9bce30,0x3c
  41cdf9:	(bad)  
  41cdfa:	pop    esp
  41cdfb:	adc    ah,BYTE PTR [esi-0x66]
  41cdfe:	mov    dl,0x9
  41ce00:	(bad)  
  41ce01:	repz xchg esp,eax
  41ce03:	fwait
  41ce04:	(bad)  
  41ce05:	jns    0x41cd9f
  41ce07:	mov    cl,0xa9
  41ce09:	out    0x67,al
  41ce0b:	sub    esi,DWORD PTR [esi-0x72]
  41ce0e:	pop    ebp
  41ce0f:	outs   dx,DWORD PTR ds:[esi]
  41ce10:	or     BYTE PTR ss:[edi-0x5a],dh
  41ce14:	jp     0x41ce19
  41ce16:	(bad)  
  41ce17:	xor    BYTE PTR [edi+0x7d0f1ff8],ah
  41ce1d:	xor    edi,edx
  41ce1f:	ds mov esp,0xdadd60d8
  41ce25:	retf   
  41ce26:	out    0x12,eax
  41ce28:	cwde   
  41ce29:	sub    edx,DWORD PTR [eax-0x4f]
  41ce2c:	jl     0x41cdaf
  41ce2e:	ror    ah,0xe5
  41ce31:	(bad)  
  41ce32:	fiadd  WORD PTR [eax]
  41ce34:	jp     0x41cdc0
  41ce36:	xor    esp,0xffffffcb
  41ce39:	mov    ds:0xf49383dd,eax
  41ce3e:	fdiv   st,st(5)
  41ce40:	mov    cl,0x4c
  41ce42:	pop    edi
  41ce43:	stos   BYTE PTR es:[edi],al
  41ce44:	sbb    eax,0x284a91be
  41ce49:	cdq    
  41ce4a:	jmp    DWORD PTR [edi-0x80]
  41ce4d:	mov    ds:0x3d0c66bd,eax
  41ce52:	jecxz  0x41ce5a
  41ce54:	inc    eax
  41ce55:	sub    bl,BYTE PTR [esi+0x24003aa6]
  41ce5b:	xor    al,0x69
  41ce5d:	or     BYTE PTR [edi-0x5e380882],0x87
  41ce64:	mov    ecx,0x58f1db58
  41ce69:	pop    eax
  41ce6a:	clc    
  41ce6b:	push   ss
  41ce6c:	jle    0x41ce2f
  41ce6e:	adc    bl,al
  41ce70:	jmp    0x26b8:0xfcf327d3
  41ce77:	imul   ebp,DWORD PTR [edi],0xc3ae5119
  41ce7d:	ins    BYTE PTR es:[edi],dx
  41ce7e:	sub    DWORD PTR [eax+0x44],0xd6cba4c6
  41ce85:	scas   eax,DWORD PTR es:[edi]
  41ce86:	mov    ah,0x95
  41ce88:	pop    ebx
  41ce89:	jl     0x41ced9
  41ce8b:	cmc    
  41ce8c:	pushf  
  41ce8d:	xlat   BYTE PTR ds:[ebx]
  41ce8e:	retf   
  41ce8f:	and    DWORD PTR [esi-0x727cc4ac],ebp
  41ce95:	fldenv [ebp-0x26]
  41ce98:	push   esp
  41ce99:	mov    ebp,0x3a81bbfd
  41ce9e:	and    eax,0x242206f9
  41cea3:	es mov ?,ebx
  41cea6:	mov    edi,0xc2f211f8
  41ceab:	mov    dh,0xb0
  41cead:	mov    esp,0xc11d45d7
  41ceb2:	push   esi
  41ceb3:	cli    
  41ceb4:	ror    BYTE PTR [ebp+0x6a5974a3],cl
  41ceba:	or     dh,BYTE PTR [ebx]
  41cebc:	cdq    
  41cebd:	inc    ecx
  41cebe:	je     0x41cf2b
  41cec0:	pop    ebp
  41cec1:	imul   edi,DWORD PTR [edx],0x88425318
  41cec7:	popa   
  41cec8:	fisub  WORD PTR [ebp+0x6f]
  41cecb:	push   cs
  41cecc:	push   es
  41cecd:	loope  0x41ce92
  41cecf:	jae    0x41cf24
  41ced1:	pop    ebx
  41ced2:	push   es
  41ced3:	jmp    0x41cefe
  41ced5:	cwde   
  41ced6:	cs or  ecx,edx
  41ced9:	push   esp
  41ceda:	stos   DWORD PTR es:[edi],eax
  41cedb:	and    al,0xb4
  41cedd:	jmp    0x41cf00
  41cedf:	or     al,0xc9
  41cee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cee2:	hlt    
  41cee3:	mov    bl,0x25
  41cee5:	mov    eax,ds:0x5cf92b8b
  41ceea:	adc    edx,DWORD PTR [esp+edx*8-0x12]
  41ceee:	add    eax,0xd528e908
  41cef3:	cld    
  41cef4:	mov    ecx,0xe191a8c3
  41cef9:	push   esp
  41cefa:	fidivr DWORD PTR [ebx-0x61b004cd]
  41cf00:	jno    0x41cf03
  41cf02:	fcomp  DWORD PTR [edx-0xc]
  41cf05:	xchg   esi,eax
  41cf06:	inc    esi
  41cf07:	mov    esp,0xbefa22e9
  41cf0c:	lock jle 0x41cf50
  41cf0f:	test   al,0x4f
  41cf11:	in     al,0x7a
  41cf13:	not    edi
  41cf15:	shr    BYTE PTR [edx-0x671db6f2],1
  41cf1b:	repz adc al,0x6
  41cf1e:	adc    ebx,DWORD PTR [ebx]
  41cf20:	out    dx,al
  41cf21:	xlat   BYTE PTR ds:[ebx]
  41cf22:	mov    ch,BYTE PTR ds:0x8709070c
  41cf28:	mov    bh,BYTE PTR [edi+0x3f57004c]
  41cf2e:	mov    ds:0x614d22d3,eax
  41cf33:	lea    edi,[edx]
  41cf35:	and    esp,DWORD PTR [ecx-0x728afd6d]
  41cf3b:	lea    edx,[edi-0x332e84f7]
  41cf41:	push   ebp
  41cf42:	lods   eax,DWORD PTR ds:[esi]
  41cf43:	in     eax,dx
  41cf44:	mov    WORD PTR [eax-0x6515c3b6],?
  41cf4a:	ja     0x41cfa5
  41cf4c:	imul   edi,DWORD PTR [esi+0x3d],0x74
  41cf50:	js     0x41cee3
  41cf52:	bound  ebx,QWORD PTR ds:0x901dd46b
  41cf58:	xchg   ebx,eax
  41cf59:	fistp  QWORD PTR [ecx+0x28]
  41cf5c:	in     al,dx
  41cf5d:	and    eax,0xb6020a5f
  41cf62:	test   eax,0x99975b7e
  41cf67:	sbb    al,0x5f
  41cf69:	cmp    BYTE PTR [ebx+0x32f4efd0],bh
  41cf6f:	in     al,dx
  41cf70:	adc    BYTE PTR [ecx-0x272d96df],dh
  41cf76:	das    
  41cf77:	outs   dx,DWORD PTR ds:[esi]
  41cf78:	pop    ss
  41cf79:	ficomp DWORD PTR [ebx-0x7e]
  41cf7c:	dec    edi
  41cf7d:	imul   eax,DWORD PTR [edi+ebp*4-0x4c],0x6
  41cf82:	jmp    FWORD PTR [ebx]
  41cf84:	cmc    
  41cf85:	jmp    0x8552b1bf
  41cf8a:	sbb    BYTE PTR [eax+eiz*2+0xe698d4a],0x90
  41cf92:	jae    0x41cfd9
  41cf94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf95:	dec    edx
  41cf96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf97:	xor    BYTE PTR [ebp-0x2b],ah
  41cf9a:	jge    0x41cf4e
  41cf9c:	adc    BYTE PTR [ebp+ebp*2+0x3bf14e48],dl
  41cfa3:	out    dx,eax
  41cfa4:	dec    ecx
  41cfa5:	mov    esp,0x65355b76
  41cfaa:	imul   BYTE PTR [esi-0xd9f7161]
  41cfb0:	pop    ss
  41cfb1:	retf   0xc97b
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x5c895d97
  41cfc2:	mov    ecx,0xf800014b
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [ebx+0x41],bl
  41cfcc:	ins    DWORD PTR es:[edi],dx
  41cfcd:	xlat   BYTE PTR ds:[ebx]
  41cfce:	call   0x918f:0xd298174
  41cfd5:	mov    dl,0x1
  41cfd7:	adc    ch,BYTE PTR [edx+0x36d137ca]
  41cfdd:	inc    ebx
  41cfde:	xchg   edx,eax
  41cfdf:	dec    ebp
  41cfe0:	pop    ecx
  41cfe1:	(bad)  
  41cfe2:	out    dx,al
  41cfe3:	dec    esi
  41cfe4:	out    dx,eax
  41cfe5:	sbb    ecx,DWORD PTR [ebp+edx*4+0x32759ff8]
  41cfec:	ds push ds
  41cfee:	sbb    bl,dh
  41cff0:	icebp  
  41cff1:	inc    edi
  41cff2:	jno    0x41d064
  41cff4:	int    0x19
  41cff6:	or     al,0xb1
  41cff8:	xchg   ecx,eax
  41cff9:	push   es
  41cffa:	add    al,0xbf
  41cffc:	lods   al,BYTE PTR ds:[esi]
  41cffd:	push   0xb27b0792
  41d002:	aaa    
  41d003:	sar    bh,cl
  41d005:	pop    esi
  41d006:	fwait
  41d007:	cmp    DWORD PTR [edi+ebp*8],eax
  41d00a:	jmp    0xa00dd02c
  41d00f:	pushf  
  41d010:	in     eax,0x87
  41d012:	xchg   esp,eax
  41d013:	mov    bl,0x92
  41d015:	adc    ah,ah
  41d017:	js     0x41d08c
  41d019:	fiadd  WORD PTR [ebx+0x310800a3]
  41d01f:	imul   eax,DWORD PTR [edi-0x64976d1d],0xb4c4deff
  41d029:	push   eax
  41d02a:	add    BYTE PTR [esi+0x7f64aa7f],ch
  41d030:	mov    ah,0x71
  41d032:	or     DWORD PTR [ebp+0x14],edx
  41d035:	push   0xfffffff8
  41d037:	data16 aam 0xd8
  41d03a:	je     0x41d080
  41d03c:	ins    BYTE PTR es:[edi],dx
  41d03d:	push   ebp
  41d03e:	push   ds
  41d03f:	jo     0x41d03b
  41d041:	pop    eax
  41d042:	or     dl,BYTE PTR [edi+0x37]
  41d045:	sbb    BYTE PTR [eax-0x2a],bh
  41d048:	into   
  41d049:	psubq  mm0,mm5
  41d04c:	sub    DWORD PTR [ebx-0x6ad88cc0],0xffffffb2
  41d053:	mov    dh,0xf
  41d055:	cmc    
  41d056:	sub    ebx,DWORD PTR [ebx-0x7cceba49]
  41d05c:	lds    esi,FWORD PTR [edi+0x75c89c93]
  41d062:	xor    al,0x75
  41d064:	out    0x6c,al
  41d066:	mov    esi,0xccf0be29
  41d06b:	imul   esi,DWORD PTR [edi-0x1],0xffffffdd
  41d06f:	xor    edx,edi
  41d071:	test   eax,0x27edaeea
  41d076:	xor    ch,0x1d
  41d079:	mov    eax,0xce3b4e56
  41d07e:	ffree  st(3)
  41d080:	adc    ah,BYTE PTR [ebp+0x46]
  41d083:	in     al,dx
  41d084:	addr16 popaw 
  41d087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d088:	jns    0x41d013
  41d08a:	test   al,0xde
  41d08c:	rcl    BYTE PTR [eax+0x1f],0x64
  41d090:	dec    bp
  41d092:	xlat   BYTE PTR ds:[ebx]
  41d093:	out    0xf7,eax
  41d095:	enter  0x54ea,0x75
  41d099:	jno    0x41d068
  41d09b:	sub    DWORD PTR [ebp+ebx*8+0x3bda4000],edx
  41d0a2:	in     eax,0xd1
  41d0a4:	mov    ecx,0xf9017814
  41d0a9:	popa   
  41d0aa:	xchg   ecx,eax
  41d0ab:	sub    BYTE PTR [ebp+0x337701a6],cl
  41d0b1:	xor    eax,0x359f5cc8
  41d0b6:	and    BYTE PTR [edx+0x635bf37],cl
  41d0bc:	sbb    al,0x79
  41d0be:	cs jae 0x41d13d
  41d0c1:	mov    gs,WORD PTR [ecx]
  41d0c3:	mov    esi,DWORD PTR [edi]
  41d0c5:	push   ss
  41d0c6:	fcomp  DWORD PTR [esi]
  41d0c8:	(bad)  
  41d0c9:	loop   0x41d0c6
  41d0cb:	push   edi
  41d0cc:	repz fnstcw WORD PTR ds:0x83236f3a
  41d0d3:	xor    BYTE PTR [ecx+0x3a53dfbb],dh
  41d0d9:	pop    esi
  41d0da:	xlat   BYTE PTR ds:[ebx]
  41d0db:	pop    ds
  41d0dc:	shr    DWORD PTR [ecx],cl
  41d0de:	jo     0x41d158
  41d0e0:	pushf  
  41d0e1:	(bad)  
  41d0e2:	out    dx,al
  41d0e3:	cdq    
  41d0e4:	and    al,0x6f
  41d0e6:	loope  0x41d096
  41d0e8:	pop    ecx
  41d0e9:	cld    
  41d0ea:	push   cs
  41d0eb:	aad    0xc4
  41d0ed:	sub    al,0xc7
  41d0ef:	adc    eax,0x6957eb3c
  41d0f4:	inc    ebx
  41d0f5:	adc    eax,0x137556bc
  41d0fa:	or     ecx,eax
  41d0fc:	scas   al,BYTE PTR es:[edi]
  41d0fd:	ret    
  41d0fe:	inc    ebx
  41d0ff:	sub    al,0x99
  41d101:	ror    DWORD PTR [edx-0x5b],1
  41d104:	in     al,dx
  41d105:	inc    ebp
  41d106:	adc    eax,0x41
  41d109:	sub    eax,0xbcb2adbd
  41d10e:	inc    eax
  41d10f:	imul   ebp,ecx,0x6
  41d112:	out    0x7b,eax
  41d114:	dec    ecx
  41d115:	mov    ah,bh
  41d117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d118:	jo     0x41d0ad
  41d11a:	sahf   
  41d11b:	push   esi
  41d11c:	(bad)  
  41d11d:	adc    DWORD PTR [esi+0x8],ebx
  41d120:	(bad)  
  41d121:	mov    dl,0x6d
  41d123:	rol    BYTE PTR [ecx+0x72],cl
  41d126:	repnz int 0x50
  41d129:	mov    DWORD PTR ss:[ebp-0x35c56086],ebp
  41d130:	sub    bh,BYTE PTR [esi]
  41d132:	in     eax,dx
  41d133:	pop    ds
  41d134:	dec    esp
  41d135:	call   0x79f1:0x6b2f71d4
  41d13c:	ret    
  41d13d:	mov    al,0xac
  41d13f:	mov    ah,0x88
  41d141:	add    BYTE PTR [ebp+0x7e],cl
  41d144:	push   ss
  41d145:	mov    bl,0x87
  41d147:	loope  0x41d164
  41d149:	jnp    0x41d15d
  41d14b:	push   es
  41d14c:	(bad)  
  41d14d:	or     al,0xcc
  41d14f:	shl    BYTE PTR [eax+0x38ea192c],0xa5
  41d156:	rcl    BYTE PTR [esi-0x7],0xf3
  41d15a:	dec    edx
  41d15b:	lahf   
  41d15c:	pop    esi
  41d15d:	popa   
  41d15e:	fisub  DWORD PTR [ebx]
  41d160:	data16 and BYTE PTR [edi+0x47],ch
  41d164:	call   0xf2bcd1a5
  41d169:	dec    esi
  41d16a:	or     DWORD PTR ds:0x22b4dd99,edx
  41d170:	aas    
  41d171:	retf   
  41d172:	jp     0x41d13a
  41d174:	jnp    0x41d196
  41d176:	sbb    BYTE PTR [ecx+0x6f],bl
  41d179:	cdq    
  41d17a:	fucomp st(3)
  41d17c:	pop    ds
  41d17d:	(bad)  
  41d17f:	xchg   esp,eax
  41d180:	ins    BYTE PTR es:[edi],dx
  41d181:	stc    
  41d182:	(bad)  
  41d183:	sbb    al,0xfb
  41d185:	sbb    al,0xdc
  41d187:	cmp    ebp,DWORD PTR [esi-0x62]
  41d18a:	mov    ebp,0xcb30e454
  41d18f:	shl    DWORD PTR [ebx+eax*1-0x33],cl
  41d193:	fsubr  QWORD PTR [edx+ebx*8+0x7a6c5cc4]
  41d19a:	xor    al,0xf9
  41d19c:	mov    WORD PTR [ecx],gs
  41d19e:	shr    BYTE PTR ds:0x950c4ff7,0x78
  41d1a5:	jnp    0x41d1ba
  41d1a7:	ds inc ecx
  41d1a9:	ror    BYTE PTR [ebp+eax*4-0xfedec77],1
  41d1b0:	jmp    0xbd7a:0x3f9a1600
  41d1b7:	mov    WORD PTR [edi+0x63],ds
  41d1ba:	das    
  41d1bb:	pop    ecx
  41d1bc:	dec    ecx
  41d1bd:	nop
  41d1be:	mov    bh,0x72
  41d1c0:	sbb    al,0x30
  41d1c2:	hlt    
  41d1c3:	fld    DWORD PTR [ecx+ebp*2-0x4042326d]
  41d1ca:	mov    dl,0xa8
  41d1cc:	jo     0x41d1bb
  41d1ce:	test   DWORD PTR [edx+0x1366361d],eax
  41d1d4:	fs dec eax
  41d1d6:	pop    ss
  41d1d7:	rcr    DWORD PTR [edx-0x2c],cl
  41d1da:	cmc    
  41d1db:	jb     0x41d253
  41d1dd:	fld    DWORD PTR [ebx+0x4]
  41d1e0:	ss push ds
  41d1e2:	xor    eax,edi
  41d1e4:	pop    ds
  41d1e5:	and    bl,dl
  41d1e7:	fcos   
  41d1e9:	cld    
  41d1ea:	repnz push es
  41d1ec:	push   es
  41d1ed:	stos   DWORD PTR es:[edi],eax
  41d1ee:	lds    esi,FWORD PTR [esi-0x2f]
  41d1f1:	retf   0x153b
  41d1f4:	imul   eax,DWORD PTR [edx],0x50eceee6
  41d1fa:	retf   0x467c
  41d1fd:	in     al,0x4f
  41d1ff:	std    
  41d200:	cmp    DWORD PTR [edi+0x3a],esp
  41d203:	aas    
  41d204:	idiv   DWORD PTR [eax-0x5a]
  41d207:	sar    DWORD PTR [edx+edi*4+0x5ae7a99a],0xb7
  41d20f:	and    eax,0xb53df381
  41d214:	lods   al,BYTE PTR ds:[esi]
  41d215:	sbb    DWORD PTR [ebp+0x66],ebx
  41d218:	mov    cl,0xf9
  41d21a:	repnz sub esp,DWORD PTR [ebx+0x6c]
  41d21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d21f:	lds    edi,FWORD PTR [edx-0x6f5536f7]
  41d225:	pop    DWORD PTR [ebx+ebx*1+0x1bb481ad]
  41d22c:	pop    ebx
  41d22d:	pop    edx
  41d22e:	adc    dh,ah
  41d230:	or     eax,0x88a38298
  41d235:	in     al,0xd3
  41d237:	xor    DWORD PTR [edx],0xffffffe3
  41d23a:	mov    ah,0xd9
  41d23c:	adc    al,0xfd
  41d23e:	xchg   BYTE PTR [eax+0x58f2a36e],dl
  41d244:	mov    cl,0x31
  41d246:	pop    esp
  41d247:	pop    es
  41d248:	jg     0x41d2c3
  41d24a:	add    al,0x72
  41d24c:	fbld   TBYTE PTR [ecx+0x1353868c]
  41d252:	inc    esp
  41d253:	gs (bad) 
  41d255:	xor    ebx,edi
  41d257:	pop    ds
  41d258:	sbb    DWORD PTR [bx+di-0x425f],esi
  41d25d:	aaa    
  41d25e:	xchg   edx,eax
  41d25f:	lods   eax,DWORD PTR ds:[esi]
  41d260:	arpl   WORD PTR [ecx],cx
  41d262:	mov    ah,0x77
  41d264:	or     DWORD PTR [ecx+0x30],esp
  41d267:	sub    DWORD PTR [edi+eax*8],ebx
  41d26a:	and    eax,0x149ac930
  41d26f:	popf   
  41d270:	xchg   BYTE PTR [edi],bh
  41d272:	aas    
  41d273:	aas    
  41d274:	add    ebx,DWORD PTR [ecx]
  41d276:	mov    bh,0x6b
  41d278:	sub    ch,BYTE PTR [edi+0x77]
  41d27b:	fwait
  41d27c:	xor    BYTE PTR [ecx+eax*1],dl
  41d27f:	dec    esp
  41d280:	add    eax,0xf0c76c5
  41d285:	scas   eax,DWORD PTR es:[edi]
  41d286:	call   0x55f8:0x8883029a
  41d28d:	int3   
  41d28e:	xlat   BYTE PTR ds:[ebx]
  41d28f:	inc    ebx
  41d290:	push   edx
  41d291:	rcl    BYTE PTR [ebp+eiz*4-0x70b3349c],0x5b
  41d299:	jne    0x41d312
  41d29b:	ins    BYTE PTR es:[edi],dx
  41d29c:	pop    edx
  41d29d:	xchg   ebx,eax
  41d29e:	sub    esp,ebx
  41d2a0:	xchg   edi,eax
  41d2a1:	lods   al,BYTE PTR ds:[esi]
  41d2a2:	pop    esp
  41d2a3:	hlt    
  41d2a4:	mov    edi,0xbcb4644e
  41d2a9:	dec    edx
  41d2aa:	scas   al,BYTE PTR es:[edi]
  41d2ab:	sahf   
  41d2ac:	fs pop edx
  41d2ae:	cdq    
  41d2af:	int3   
  41d2b0:	jmp    0x8bd250e1
  41d2b5:	mov    edi,0x4dc0077
  41d2ba:	push   edi
  41d2bb:	cmp    al,0xee
  41d2bd:	fwait
  41d2be:	test   BYTE PTR [edi+0x422d5d22],dl
  41d2c4:	xor    DWORD PTR [edx+eiz*1],eax
  41d2c7:	inc    edi
  41d2c8:	push   ecx
  41d2c9:	fstp   TBYTE PTR [eax]
  41d2cb:	or     al,0x78
  41d2cd:	mov    BYTE PTR [ebx],0xf
  41d2d0:	stc    
  41d2d1:	std    
  41d2d2:	sbb    ecx,DWORD PTR [ebp-0x741224a3]
  41d2d8:	mov    ebx,0x9b5c0ae7
  41d2dd:	add    al,0x6a
  41d2df:	cmp    BYTE PTR [edi+0x8],dh
  41d2e2:	push   ecx
  41d2e3:	ins    BYTE PTR es:[edi],dx
  41d2e4:	pusha  
  41d2e5:	loopne 0x41d32c
  41d2e7:	dec    esp
  41d2e8:	int    0x38
  41d2ea:	adc    bh,ch
  41d2ec:	pop    ss
  41d2ed:	ja     0x41d2e4
  41d2ef:	mov    ebp,0xa694fc38
  41d2f4:	scas   eax,DWORD PTR es:[edi]
  41d2f5:	aad    0x58
  41d2f7:	push   cs
  41d2f8:	ds jae 0x41d327
  41d2fb:	push   ecx
  41d2fc:	pop    ebx
  41d2fd:	pop    ebx
  41d2fe:	mov    esp,DWORD PTR ds:0xd476d4b
  41d304:	scas   eax,DWORD PTR es:[edi]
  41d305:	sub    eax,0x5ba0c422
  41d30a:	inc    eax
  41d30b:	dec    edx
  41d30c:	dec    edi
  41d30d:	jns    0x41d34d
  41d30f:	mov    WORD PTR [edi+0x24],cs
  41d312:	or     DWORD PTR [edx-0x4c],0x1fdb8a86
  41d319:	push   edx
  41d31a:	dec    edx
  41d31b:	pop    esi
  41d31c:	pop    es
  41d31d:	test   DWORD PTR ds:0x86f452e3,esi
  41d323:	ins    DWORD PTR es:[edi],dx
  41d324:	mov    eax,ds:0xcc3702cb
  41d329:	add    al,0x8f
  41d32b:	mov    ecx,0xd26c49cb
  41d330:	sub    bl,BYTE PTR [eax]
  41d332:	icebp  
  41d333:	pushf  
  41d334:	inc    ebp
  41d335:	rol    ebp,0x3
  41d338:	add    BYTE PTR [esi],dh
  41d33a:	adc    eax,0xa112514c
  41d33f:	js     0x41d365
  41d341:	mov    bh,0x50
  41d343:	adc    ebp,DWORD PTR [eax+eax*4+0x16]
  41d347:	(bad)  
  41d348:	std    
  41d349:	add    dl,BYTE PTR [ebp+0x1a655994]
  41d34f:	arpl   WORD PTR [edi],ax
  41d351:	or     bl,BYTE PTR [edx]
  41d353:	cld    
  41d354:	std    
  41d355:	lds    esp,FWORD PTR [eax-0x75]
  41d358:	cmp    DWORD PTR [ebx],edx
  41d35a:	pop    ds
  41d35b:	pop    edx
  41d35c:	or     esi,DWORD PTR [ebp+0x7e]
  41d35f:	dec    edx
  41d360:	adc    al,0x5a
  41d362:	fisubr WORD PTR [esi-0x4f]
  41d365:	and    eax,0x75c21c07
  41d36a:	mov    esp,0x40a2291b
  41d36f:	in     eax,0x69
  41d371:	mov    edi,DWORD PTR [edx-0x5aabbdff]
  41d377:	xor    bh,ch
  41d379:	mov    cl,0xcb
  41d37b:	hlt    
  41d37c:	xchg   ebx,eax
  41d37d:	push   es
  41d37e:	test   DWORD PTR [edi+esi*1-0x37b3fa32],esp
  41d385:	ret    
  41d386:	sahf   
  41d387:	idiv   DWORD PTR [edx-0x3c]
  41d38a:	xor    DWORD PTR [ecx+0x44],ebp
  41d38d:	and    eax,0x7c42090a
  41d392:	fcomp  DWORD PTR [edi-0x575b031b]
  41d398:	jmp    0x31e0a1b1
  41d39d:	mov    ch,0xe9
  41d39f:	jbe    0x41d365
  41d3a1:	push   es
  41d3a2:	int3   
  41d3a3:	cld    
  41d3a4:	pop    edx
  41d3a5:	pusha  
  41d3a6:	imul   eax,DWORD PTR [eax],0x5e8c63ae
  41d3ac:	dec    ecx
  41d3ad:	jbe    0x41d3d2
  41d3af:	or     DWORD PTR [ecx],ebx
  41d3b1:	jne    0x41d3c8
  41d3b3:	(bad)  
  41d3b4:	cwde   
  41d3b5:	retf   
  41d3b6:	xchg   ebx,eax
  41d3b7:	xor    dh,BYTE PTR [ebx+0x70]
  41d3ba:	fwait
  41d3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3bc:	rcl    bh,cl
  41d3be:	cwde   
  41d3bf:	call   0xedf7dbd8
  41d3c4:	fld    TBYTE PTR [esi-0x47]
  41d3c7:	sub    al,0xa9
  41d3c9:	stc    
  41d3ca:	jbe    0x41d36e
  41d3cc:	cdq    
  41d3cd:	scas   eax,DWORD PTR es:[edi]
  41d3ce:	and    edx,eax
  41d3d0:	aam    0x26
  41d3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d3:	rcr    BYTE PTR [eax+0x29],cl
  41d3d6:	out    0x59,eax
  41d3d8:	push   0x45
  41d3da:	cs mov ecx,0x98f9176b
  41d3e0:	jmp    0x4c9f:0x3e17cb9c
  41d3e7:	(bad)  
  41d3e8:	pop    ss
  41d3e9:	stos   DWORD PTR es:[edi],eax
  41d3ea:	push   ds
  41d3eb:	jb     0x41d3c0
  41d3ed:	jp     0x41d387
  41d3ef:	cmp    ebx,eax
  41d3f1:	aaa    
  41d3f2:	outs   dx,BYTE PTR ds:[esi]
  41d3f3:	dec    ecx
  41d3f4:	pop    esp
  41d3f5:	fbld   TBYTE PTR [ebp+0x30]
  41d3f8:	add    DWORD PTR [ecx-0x32],ebx
  41d3fb:	mov    BYTE PTR [esi+0x10783565],ch
  41d401:	xor    al,0x82
  41d403:	outs   dx,DWORD PTR ds:[esi]
  41d404:	or     DWORD PTR [ebp+0x3997eaf8],0x3e
  41d40b:	sbb    esp,DWORD PTR [ecx]
  41d40d:	aam    0x4d
  41d40f:	mov    dl,0xa9
  41d411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d412:	imul   eax,DWORD PTR [esi],0xd88a4cfe
  41d418:	mov    ecx,0x16d5dc3f
  41d41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d41e:	add    cl,bl
  41d420:	call   0x538c7e5d
  41d425:	mov    bl,0x8c
  41d427:	mov    ah,0xa8
  41d429:	fcomp  QWORD PTR [ecx-0x80]
  41d42c:	jle    0x41d3e1
  41d42e:	jle    0x41d49a
  41d430:	ficom  DWORD PTR [edi-0x4cf5be0d]
  41d436:	add    cl,BYTE PTR [ebx+edi*4]
  41d439:	repz mov eax,ds:0x218d6a2e
  41d43f:	dec    esi
  41d440:	std    
  41d441:	sub    al,0x87
  41d443:	fnsave [esi-0x5bd4a764]
  41d449:	fwait
  41d44a:	dec    ebp
  41d44b:	and    edi,DWORD PTR [ebx-0x67]
  41d44e:	rol    BYTE PTR ds:0xffd4cfbf,cl
  41d454:	mov    ebp,0x88a316b3
  41d459:	mov    bl,0x7b
  41d45b:	inc    esi
  41d45c:	sbb    al,0x2c
  41d45e:	nop
  41d45f:	popa   
  41d460:	sbb    esi,DWORD PTR [ebp+0x7]
  41d463:	mov    dh,0xb4
  41d465:	push   esp
  41d466:	inc    ecx
  41d467:	and    ebp,DWORD PTR [ebp-0x45ca61f5]
  41d46d:	mov    dh,0xda
  41d46f:	shr    ebx,1
  41d471:	xor    DWORD PTR [ebp+0x41],ecx
  41d474:	push   esp
  41d475:	push   ecx
  41d476:	shl    eax,cl
  41d478:	iret   
  41d479:	adc    ax,0x7e93
  41d47d:	fistp  QWORD PTR [esi+0x5323bc4c]
  41d483:	lahf   
  41d484:	sub    DWORD PTR [edi+0x76],esp
  41d487:	enter  0x1824,0xd0
  41d48b:	sbb    eax,0xbf697851
  41d490:	pop    edx
  41d491:	inc    esp
  41d492:	mov    WORD PTR [edi],gs
  41d494:	mov    dh,0xff
  41d496:	mov    ch,0x61
  41d498:	pushf  
  41d499:	dec    ebp
  41d49a:	lea    ecx,[esi-0x1a67a370]
  41d4a0:	iret   
  41d4a1:	fsub   QWORD PTR [ebx+0x7255b181]
  41d4a7:	test   BYTE PTR [edx],ah
  41d4a9:	and    eax,0x9aa93b35
  41d4ae:	js     0x41d44f
  41d4b0:	fdiv   QWORD PTR [ebx-0x12689c07]
  41d4b6:	xchg   ebx,eax
  41d4b7:	call   DWORD PTR [edx+0x3bcdff7a]
  41d4bd:	inc    ebp
  41d4be:	and    BYTE PTR [eax],bl
  41d4c0:	leave  
  41d4c1:	fnclex 
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	sahf   
  41d4cf:	and    ch,BYTE PTR [eax-0x78]
  41d4d2:	mov    cl,0x50
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	clc    
  41d4d7:	add    al,0x0
  41d4d9:	add    al,al
  41d4db:	out    dx,al
  41d4dc:	xchg   esp,eax
  41d4dd:	mov    ecx,0xde7f0a37
  41d4e2:	mov    esi,0xc2ea4733
  41d4e7:	dec    esi
  41d4e8:	cmp    edi,ebx
  41d4ea:	cmp    al,0x4b
  41d4ec:	push   cs
  41d4ed:	(bad)  
  41d4ee:	adc    eax,0x630b9c7f
  41d4f3:	pop    esi
  41d4f4:	mov    WORD PTR [eax-0x5be8b422],cs
  41d4fa:	and    BYTE PTR [edi],cl
  41d4fc:	pop    eax
  41d4fd:	mov    edi,0x233265d5
  41d502:	sub    DWORD PTR [ecx],ebx
  41d504:	dec    eax
  41d505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d507:	xchg   esp,eax
  41d508:	pop    esi
  41d509:	push   0x28
  41d50b:	mov    eax,0x450eedcf
  41d510:	xor    cl,BYTE PTR [ebx+0x78]
  41d513:	xlat   BYTE PTR ds:[ebx]
  41d514:	retf   
  41d515:	mov    ah,0xb7
  41d517:	cdq    
  41d518:	js     0x41d57d
  41d51a:	jg     0x41d53c
  41d51c:	mov    bl,0x4a
  41d51e:	pop    edi
  41d51f:	xor    DWORD PTR [esi-0xe],ebx
  41d522:	out    0x3c,eax
  41d524:	shl    BYTE PTR ds:0xc49ed06b,0xc7
  41d52b:	rcl    BYTE PTR [esi+0x1dd50140],cl
  41d531:	dec    edi
  41d532:	jb     0x41d501
  41d534:	fcomp  QWORD PTR [edi-0x716efae1]
  41d53a:	loopne 0x41d562
  41d53c:	cwde   
  41d53d:	sar    BYTE PTR [edx+0x42],0xd7
  41d541:	dec    ecx
  41d542:	loop   0x41d52c
  41d544:	mov    ch,0x3a
  41d546:	cwde   
  41d547:	or     DWORD PTR [ecx-0x28df10fd],0xffffffa8
  41d54e:	add    eax,0x4fd84d64
  41d553:	sub    BYTE PTR [ecx+0x2ea4277f],bh
  41d559:	mov    eax,0x678df93e
  41d55e:	adc    DWORD PTR [esp+ebp*8+0x45],0xb0594025
  41d566:	ins    BYTE PTR es:[edi],dx
  41d567:	(bad)
  41d56a:	sbb    DWORD PTR [ebp+0x6d4052cf],0x7a
  41d571:	ror    eax,cl
  41d573:	cmp    BYTE PTR [eax-0x3f50ba99],ch
  41d579:	or     sp,WORD PTR [esi+0x62]
  41d57d:	je     0x41d596
  41d57f:	pop    esp
  41d580:	or     eax,0x604ebabe
  41d585:	je     0x41d605
  41d587:	push   0xa5d04b16
  41d58c:	push   esi
  41d58d:	xor    BYTE PTR [ebp-0x121148a2],0xd8
  41d594:	cld    
  41d595:	scas   eax,DWORD PTR es:[edi]
  41d596:	cmp    eax,0x43f37039
  41d59b:	xor    DWORD PTR [edi+0x2a],edi
  41d59e:	pop    edx
  41d59f:	push   eax
  41d5a0:	aam    0xc1
  41d5a2:	aas    
  41d5a3:	loop   0x41d5b5
  41d5a5:	jno    0x41d574
  41d5a7:	inc    BYTE PTR [esi]
  41d5a9:	sub    BYTE PTR [edx+ebp*8],dl
  41d5ac:	inc    ebp
  41d5ad:	mov    esi,0xc7a497c7
  41d5b2:	lock mov es,esp
  41d5b5:	dec    edi
  41d5b6:	leave  
  41d5b7:	or     eax,0xb9f75b03
  41d5bc:	(bad)  
  41d5bd:	fstp   DWORD PTR [ebp+0x56]
  41d5c0:	sahf   
  41d5c1:	loop   0x41d641
  41d5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5c4:	pop    ss
  41d5c5:	mov    dh,ah
  41d5c7:	xlat   BYTE PTR ds:[ebx]
  41d5c8:	jp     0x41d5c0
  41d5ca:	mov    edi,?
  41d5cc:	pop    ebx
  41d5cd:	adc    cl,BYTE PTR [bp+si-0x6abd]
  41d5d2:	jg     0x41d5e4
  41d5d4:	jo     0x41d633
  41d5d6:	bt     DWORD PTR [edx-0x769699f4],eax
  41d5dd:	pop    ebx
  41d5de:	xchg   edi,eax
  41d5df:	mov    ds:0x3190fbb,al
  41d5e4:	fcmovnbe st,st(0)
  41d5e6:	je     0x41d5f5
  41d5e8:	push   ebx
  41d5e9:	pop    ecx
  41d5ea:	pop    ecx
  41d5eb:	push   ecx
  41d5ec:	ret    0x4781
  41d5ef:	dec    ecx
  41d5f0:	jmp    0xed2c:0x160b2879
  41d5f7:	outs   dx,DWORD PTR ds:[esi]
  41d5f8:	nop
  41d5f9:	mov    edx,0x19e19246
  41d5fe:	ror    DWORD PTR [edx+eax*1],0x2e
  41d602:	mov    WORD PTR [ebx-0x14],ds
  41d605:	sub    DWORD PTR [edi+0x1e],esp
  41d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d609:	jns    0x41d5a9
  41d60b:	in     al,dx
  41d60c:	retf   0x490d
  41d60f:	mov    bh,0xc3
  41d611:	enter  0x96ba,0x6a
  41d615:	les    ebx,FWORD PTR [esi]
  41d617:	push   eax
  41d618:	loope  0x41d5b8
  41d61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d61b:	xor    DWORD PTR [ebp-0x5a79760a],edi
  41d621:	sbb    al,0xe8
  41d623:	call   DWORD PTR [ebp+0x4e92d968]
  41d629:	iret   
  41d62a:	add    DWORD PTR [eax+0xc08d367],esp
  41d630:	aaa    
  41d631:	inc    esi
  41d632:	mov    edx,0xe2975214
  41d637:	sbb    DWORD PTR [edi],esi
  41d639:	cs push ecx
  41d63b:	fisubr DWORD PTR [edx+0x1b093ce1]
  41d641:	jecxz  0x41d65e
  41d643:	jp     0x41d652
  41d645:	imul   edi,eax,0xc5582e92
  41d64b:	cmp    eax,0x2a876f42
  41d650:	leave  
  41d651:	in     al,dx
  41d652:	pop    ds
  41d653:	div    BYTE PTR [eax+ecx*8+0x708f6995]
  41d65a:	mov    BYTE PTR [edi-0x16],cl
  41d65d:	fadd   DWORD PTR [ebx]
  41d65f:	call   0x1161:0xf7b6dba2
  41d666:	jg     0x41d6ce
  41d668:	mov    eax,0x494e1529
  41d66d:	ret    0x4431
  41d670:	out    0xef,eax
  41d672:	xchg   edi,eax
  41d673:	test   eax,0x5d3c577f
  41d678:	jno    0x41d60b
  41d67a:	pop    ds
  41d67b:	icebp  
  41d67c:	add    al,0xcf
  41d67e:	cs pusha 
  41d680:	ret    
  41d681:	aas    
  41d682:	mov    edi,0x5f903f72
  41d687:	jl     0x41d65f
  41d689:	mov    DWORD PTR [edx-0x2b],edx
  41d68c:	cmp    dl,BYTE PTR [eax-0x13]
  41d68f:	mov    WORD PTR [ebx],gs
  41d691:	sahf   
  41d692:	sbb    DWORD PTR [edi+0x2665a019],ebp
  41d698:	dec    esp
  41d699:	addr16 inc eax
  41d69b:	retf   0xb77d
  41d69e:	jmp    0x23fb:0x3fe5be7d
  41d6a5:	cmc    
  41d6a6:	push   ds
  41d6a7:	adc    edx,DWORD PTR [edx-0x1231ef5c]
  41d6ad:	adc    esi,eax
  41d6af:	xchg   ecx,eax
  41d6b0:	bound  edi,QWORD PTR [eax-0x6c10a600]
  41d6b6:	sub    BYTE PTR ds:0x254b4499,dh
  41d6bc:	sbb    BYTE PTR [edx-0x176268b8],0x7b
  41d6c3:	xor    BYTE PTR [edi],bh
  41d6c5:	fstp   DWORD PTR [eax+ecx*4-0x25cd794b]
  41d6cc:	js     0x41d669
  41d6ce:	jae    0x41d68e
  41d6d0:	aaa    
  41d6d1:	mov    bl,0x57
  41d6d3:	mov    DWORD PTR es:[eax+0x69],esi
  41d6d7:	test   ah,0x2c
  41d6da:	iret   
  41d6db:	dec    edi
  41d6dc:	lods   al,BYTE PTR ds:[esi]
  41d6dd:	jb     0x41d6bd
  41d6df:	int    0x26
  41d6e1:	cmc    
  41d6e2:	sbb    dl,BYTE PTR [eax+ecx*1]
  41d6e5:	xchg   esp,eax
  41d6e6:	sub    al,0xb0
  41d6e8:	xchg   edx,eax
  41d6e9:	jmp    0x9bde:0x9caba461
  41d6f0:	cli    
  41d6f1:	loope  0x41d6b5
  41d6f3:	and    BYTE PTR [ebx],0x47
  41d6f6:	gs sub al,0xf4
  41d6f9:	mov    dh,0xae
  41d6fb:	or     ch,BYTE PTR [ebp+0x19db99e6]
  41d701:	or     eax,0xbe1b071e
  41d706:	leave  
  41d707:	xor    al,BYTE PTR [ecx+eax*2+0x79]
  41d70b:	popf   
  41d70c:	in     al,0xe5
  41d70e:	xor    ch,BYTE PTR [ebx-0x67ea663f]
  41d714:	and    eax,0xb811c13d
  41d719:	push   0xeb18195e
  41d71e:	jg     0x41d766
  41d720:	fdivr  st(2),st
  41d722:	nop
  41d723:	shl    ebx,0x8b
  41d726:	jno    0x41d728
  41d728:	cld    
  41d729:	jo     0x41d723
  41d72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d72c:	dec    esi
  41d72d:	mov    edi,0x723d0bd5
  41d732:	sbb    esp,esi
  41d734:	jae    0x41d6c3
  41d736:	mov    gs,WORD PTR [edx+ebx*2]
  41d739:	rcl    DWORD PTR [edx+ecx*8-0x78c3d2a],1
  41d740:	imul   ecx,DWORD PTR gs:[ecx],0x6a
  41d744:	cmp    BYTE PTR [ebx],ch
  41d746:	fwait
  41d747:	pushf  
  41d748:	cwde   
  41d749:	or     DWORD PTR [eax+edi*8],0x20a9cf66
  41d750:	(bad)  
  41d751:	xchg   edi,eax
  41d752:	ret    
  41d753:	(bad)  
  41d754:	jo     0x41d6ee
  41d756:	xor    DWORD PTR [edi],0xffffffab
  41d759:	js     0x41d747
  41d75b:	call   FWORD PTR [ecx+0x26]
  41d75e:	mov    eax,ds:0xc9320939
  41d763:	fld    TBYTE PTR [ebp-0x6893f4f8]
  41d769:	iret   
  41d76a:	mov    esp,0x56e6c584
  41d76f:	in     eax,0x63
  41d771:	jmp    0x41d72c
  41d773:	or     ecx,DWORD PTR [edi]
  41d775:	lds    edi,FWORD PTR [ebx-0x23121cd2]
  41d77b:	adc    BYTE PTR [eax+0x528e0e5b],0x5c
  41d782:	push   esi
  41d783:	or     al,0xaf
  41d785:	cmp    BYTE PTR [edx-0x1d],dh
  41d788:	lods   eax,DWORD PTR ds:[esi]
  41d789:	dec    eax
  41d78a:	fst    st(4)
  41d78c:	clc    
  41d78d:	pusha  
  41d78e:	cmp    BYTE PTR [ecx],dh
  41d790:	addr16 jp 0x41d76c
  41d793:	sbb    al,0x59
  41d795:	int    0x83
  41d797:	push   cs
  41d798:	adc    eax,0x87ab9744
  41d79d:	jno    0x41d743
  41d79f:	mov    dh,0xcf
  41d7a1:	mul    BYTE PTR [ebx+0x71]
  41d7a4:	mov    dh,0x34
  41d7a6:	aam    0xb6
  41d7a8:	sub    ah,BYTE PTR [ecx+0x305501e4]
  41d7ae:	(bad)  
  41d7af:	std    
  41d7b0:	ret    0xb7fe
  41d7b3:	add    eax,0x31ae471
  41d7b8:	(bad)  
  41d7b9:	cli    
  41d7ba:	pusha  
  41d7bb:	fimul  WORD PTR [edx-0x3c]
  41d7be:	mov    DWORD PTR [ebp-0x51523b3],ebp
  41d7c4:	test   DWORD PTR [esi+0x10aa798e],esp
  41d7ca:	inc    edi
  41d7cb:	rol    DWORD PTR [edx+0x4d],0x48
  41d7cf:	imul   DWORD PTR [edx+ebp*8+0x1a]
  41d7d3:	and    eax,0xfe616228
  41d7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d9:	daa    
  41d7da:	mov    edi,0xe6239bb6
  41d7df:	push   ss
  41d7e0:	mov    al,0xf0
  41d7e2:	retf   
  41d7e3:	pusha  
  41d7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e5:	cwde   
  41d7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e7:	mov    dh,cl
  41d7e9:	popa   
  41d7ea:	jl     0x41d80e
  41d7ec:	int3   
  41d7ed:	lahf   
  41d7ee:	fbstp  TBYTE PTR [ebx+0x3cc9fe29]
  41d7f4:	or     BYTE PTR [ebx-0x21],al
  41d7f7:	inc    ebp
  41d7f8:	addr16 (bad) 
  41d7fa:	retf   0xac68
  41d7fd:	dec    ebx
  41d7fe:	jno    0x41d79c
  41d800:	jmp    0x41d86b
  41d802:	jmp    0x41d844
  41d804:	call   0x7b67f260
  41d809:	rcl    BYTE PTR ds:0x5e6c6f1c,cl
  41d80f:	ins    BYTE PTR es:[edi],dx
  41d810:	js     0x41d7ed
  41d812:	pop    ss
  41d813:	mov    cl,0xf8
  41d815:	or     BYTE PTR [eax+0x1],0x3b
  41d819:	cli    
  41d81a:	call   0xb2fc:0xc12aa802
  41d821:	daa    
  41d822:	imul   edi,DWORD PTR [eax-0x6f],0xcf01fd1
  41d829:	es daa 
  41d82b:	inc    ecx
  41d82c:	xchg   edi,eax
  41d82d:	mov    ds:0xd8237b3d,al
  41d833:	push   ebp
  41d834:	adc    eax,0xd91d16c0
  41d839:	push   ebp
  41d83a:	imul   ebx,DWORD PTR [edx-0x1cb5bdbd],0x4d
  41d841:	add    eax,0xa5ec2bb0
  41d846:	retf   
  41d847:	rol    ebp,1
  41d849:	out    0x8d,al
  41d84b:	cmp    eax,0xc51f17ae
  41d850:	leave  
  41d851:	cmp    ebx,DWORD PTR [ecx]
  41d853:	shr    DWORD PTR [esi],0x52
  41d856:	mov    eax,0x9c5848b1
  41d85b:	cmp    BYTE PTR [ecx+ebx*4-0x14be890e],bl
  41d862:	in     eax,0x7a
  41d864:	sbb    eax,0x4094b89
  41d869:	loopne 0x41d8d6
  41d86b:	pop    ss
  41d86c:	(bad)  
  41d86d:	or     al,0xd0
  41d86f:	or     BYTE PTR [ebx-0x60],dh
  41d872:	aam    0x2a
  41d874:	add    bl,al
  41d876:	xor    BYTE PTR [esp+edx*1+0x50d04a32],ch
  41d87d:	add    eax,DWORD PTR [eax+0xcfd0383]
  41d883:	je     0x41d868
  41d885:	(bad)  
  41d886:	pop    ebp
  41d887:	xchg   esi,ebx
  41d889:	lahf   
  41d88a:	mov    cl,0xba
  41d88c:	in     al,0x1
  41d88e:	js     0x41d811
  41d890:	ror    DWORD PTR [eax+0x3b5ae401],0x95
  41d897:	dec    edx
  41d898:	stos   BYTE PTR es:[edi],al
  41d899:	lahf   
  41d89a:	jle    0x41d847
  41d89c:	and    al,0x9
  41d89e:	and    al,0x32
  41d8a0:	fist   WORD PTR [esi]
  41d8a2:	stos   BYTE PTR es:[edi],al
  41d8a3:	xchg   esi,eax
  41d8a4:	loop   0x41d835
  41d8a6:	outs   dx,BYTE PTR ds:[esi]
  41d8a7:	inc    esi
  41d8a8:	mov    dh,0xc8
  41d8aa:	ret    0x8d20
  41d8ad:	adc    al,0x1f
  41d8af:	adc    bl,BYTE PTR [ebp+0x252d6827]
  41d8b5:	repz repz sub eax,0x63bd1834
  41d8bc:	push   ebx
  41d8bd:	in     eax,dx
  41d8be:	mov    bh,0xe7
  41d8c0:	icebp  
  41d8c1:	scas   al,BYTE PTR es:[edi]
  41d8c2:	push   cs
  41d8c3:	and    ebp,ebx
  41d8c5:	repnz out dx,al
  41d8c7:	sub    bh,BYTE PTR [eax]
  41d8c9:	std    
  41d8ca:	mov    ebp,0xaaf1240b
  41d8cf:	addr16 hlt 
  41d8d1:	jl     0x41d913
  41d8d3:	mov    WORD PTR [ecx+eiz*4],?
  41d8d6:	retf   
  41d8d7:	dec    ebx
  41d8d8:	push   esi
  41d8d9:	add    DWORD PTR [esi+0x6c2380fa],edx
  41d8df:	aas    
  41d8e0:	retf   0x87f
  41d8e3:	mov    ch,0x99
  41d8e5:	jno    0x41d86c
  41d8e7:	pop    ecx
  41d8e8:	lea    ebp,[edx+0x3becab10]
  41d8ee:	mov    gs,WORD PTR [esi+0xd]
  41d8f1:	mov    edx,ebp
  41d8f3:	test   eax,0x3f778d3c
  41d8f8:	stos   DWORD PTR es:[edi],eax
  41d8f9:	ret    0xdba0
  41d8fc:	mov    cl,BYTE PTR [ecx+0x6f]
  41d8ff:	sbb    bh,0x5c
  41d902:	out    0x88,al
  41d904:	or     ah,cl
  41d906:	addr16 mov al,0xae
  41d909:	adc    ecx,eax
  41d90b:	mov    edi,0xaa118a65
  41d910:	into   
  41d911:	retf   0x6137
  41d914:	jbe    0x41d8fc
  41d916:	repz pop ebp
  41d918:	or     ah,BYTE PTR [eax-0x5bd4b555]
  41d91e:	mov    esp,0xa09ad873
  41d923:	into   
  41d924:	in     al,dx
  41d925:	outs   dx,DWORD PTR ds:[esi]
  41d926:	clc    
  41d927:	and    DWORD PTR [esi],0xf4007484
  41d92d:	sub    eax,0x92cc580b
  41d932:	out    0x48,eax
  41d934:	sahf   
  41d935:	dec    edx
  41d936:	fidivr WORD PTR [ecx]
  41d938:	aaa    
  41d939:	mov    ch,0x0
  41d93b:	repnz xchg edx,eax
  41d93d:	mov    dl,0xec
  41d93f:	leave  
  41d940:	inc    edx
  41d941:	push   edi
  41d942:	mov    ecx,0x7a26f67f
  41d947:	mov    ecx,0x2d69b15e
  41d94c:	fdiv   DWORD PTR [ecx]
  41d94e:	sbb    ch,BYTE PTR [edx]
  41d950:	shl    DWORD PTR [ebx-0x54],0xcb
  41d954:	pop    edx
  41d955:	test   DWORD PTR [ecx+edx*2],esi
  41d958:	push   eax
  41d959:	or     DWORD PTR [eax],eax
  41d95b:	sub    DWORD PTR [esi],edx
  41d95d:	pushf  
  41d95e:	sbb    BYTE PTR [eax],bh
  41d960:	repnz outs dx,BYTE PTR ds:[esi]
  41d962:	inc    ecx
  41d963:	jl     0x41d900
  41d965:	inc    ebp
  41d966:	popa   
  41d967:	jp     0x41d981
  41d969:	push   esi
  41d96a:	stos   DWORD PTR es:[edi],eax
  41d96b:	popa   
  41d96c:	add    BYTE PTR [eax+0x10],dl
  41d96f:	repz add eax,0xde3a6bdc
  41d975:	mov    al,0xe9
  41d977:	sbb    BYTE PTR [edi+0xffbd51f],bh
  41d97d:	not    BYTE PTR [ebp-0x62]
  41d980:	jecxz  0x41d969
  41d982:	lods   al,BYTE PTR ds:[esi]
  41d983:	outs   dx,DWORD PTR ds:[esi]
  41d984:	mov    ecx,0x62993857
  41d989:	jo     0x41d92c
  41d98b:	mov    esi,0x1debed12
  41d990:	push   esi
  41d991:	or     BYTE PTR [edx],ah
  41d993:	out    0xda,eax
  41d995:	mov    bh,0xa0
  41d997:	sbb    eax,0x6f44801f
  41d99c:	cmp    DWORD PTR [edx],esi
  41d99e:	daa    
  41d99f:	lds    ecx,FWORD PTR [edx+0x1a]
  41d9a2:	mov    DWORD PTR [ecx],ebx
  41d9a4:	inc    ebp
  41d9a5:	inc    ebx
  41d9a6:	ins    DWORD PTR es:[edi],dx
  41d9a7:	xchg   DWORD PTR [eax+eax*8-0x48232403],ebx
  41d9ae:	mov    esp,0x5b26eb30
  41d9b3:	push   cs
  41d9b4:	mov    edx,0xe79ee996
  41d9b9:	test   DWORD PTR [ebp-0x3],edi
  41d9bc:	es xchg esi,eax
  41d9be:	push   ebx
  41d9bf:	addr16 adc al,0xa7
  41d9c2:	into   
  41d9c3:	xchg   edx,eax
  41d9c4:	aad    0x88
  41d9c6:	test   eax,0xedf290a
  41d9cb:	pusha  
  41d9cc:	xchg   DWORD PTR [ebx+0x65],edi
  41d9cf:	imul   esi,DWORD PTR [edi],0x26
  41d9d2:	pop    esi
  41d9d3:	pop    esi
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	sbb    eax,0xffffffc0
  41d9e1:	pusha  
  41d9e2:	test   eax,0xf8000155
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR [ebp-0x60],dl
  41d9ec:	in     al,0x54
  41d9ee:	loopne 0x41da24
  41d9f0:	add    DWORD PTR [ebx-0x3c24ed12],eax
  41d9f6:	loop   0x41d9e4
  41d9f8:	xor    eax,0xd064c381
  41d9fd:	fisttp DWORD PTR [edi]
  41d9ff:	dec    esp
  41da00:	mov    eax,ds:0x9e004610
  41da05:	mov    cl,0x89
  41da07:	and    ebx,ebp
  41da09:	jmp    0x41b8:0x488fbd01
  41da10:	sahf   
  41da11:	int    0xc
  41da13:	(bad)  
  41da14:	and    BYTE PTR [edi+0x3c1135b4],bl
  41da1a:	xchg   edx,eax
  41da1b:	call   0xfc0d64bd
  41da20:	rcl    BYTE PTR [eax],1
  41da22:	sbb    ebp,DWORD PTR [ebx+0x6d212d7f]
  41da28:	shl    DWORD PTR [edi],0x1a
  41da2b:	sbb    DWORD PTR [esi+0x4b],esp
  41da2e:	and    BYTE PTR [eax],ah
  41da30:	mov    BYTE PTR [edi-0x1b],ah
  41da33:	adc    al,0x79
  41da35:	cld    
  41da36:	jmp    0x21f5:0xd4e9c674
  41da3d:	pop    eax
  41da3e:	mov    esi,0x6e34e0fe
  41da43:	outs   dx,DWORD PTR ds:[esi]
  41da44:	pop    ds
  41da45:	xor    DWORD PTR [ebp-0x14],esi
  41da48:	(bad)  [ecx+ecx*4]
  41da4b:	retf   
  41da4c:	popa   
  41da4d:	xor    BYTE PTR [eax],0x5b
  41da50:	inc    eax
  41da51:	push   ss
  41da52:	nop
  41da53:	push   edx
  41da54:	or     al,0x72
  41da56:	repz adc al,0x25
  41da59:	test   ebx,esi
  41da5b:	inc    esp
  41da5c:	dec    ebp
  41da5d:	pop    esp
  41da5e:	inc    ebp
  41da5f:	push   0xffffffd5
  41da61:	out    dx,eax
  41da62:	add    DWORD PTR [ebx+0x611452d8],ebx
  41da68:	(bad)  
  41da69:	lock sbb eax,0xed7aaa63
  41da6f:	(bad)  
  41da71:	jne    0x41da0d
  41da73:	daa    
  41da74:	(bad)
  41da77:	pop    eax
  41da78:	int3   
  41da79:	sub    BYTE PTR [eax-0x46],dh
  41da7c:	(bad)  
  41da7d:	(bad)  
  41da7e:	sbb    eax,0x455ee182
  41da83:	out    dx,eax
  41da84:	push   eax
  41da85:	call   0x6eda:0x725de67a
  41da8c:	mov    ds:0x1095cea2,eax
  41da91:	inc    edx
  41da92:	push   eax
  41da93:	lahf   
  41da94:	shl    DWORD PTR [edi],cl
  41da96:	cs loopne 0x41db16
  41da99:	jo     0x41da3f
  41da9b:	hlt    
  41da9c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41da9e:	or     bh,al
  41daa0:	sub    al,0xc1
  41daa2:	jmp    DWORD PTR [edi+0x74e8bb34]
  41daa8:	ror    DWORD PTR [edi-0x51c053aa],1
  41daae:	nop
  41daaf:	cmc    
  41dab0:	jmp    DWORD PTR ds:0xca2a46d
  41dab6:	push   cs
  41dab7:	mov    esi,0xe7528b07
  41dabc:	dec    ecx
  41dabd:	(bad)  
  41dabf:	jb     0x41daad
  41dac1:	add    al,0x36
  41dac3:	fnstsw WORD PTR ds:0xc28f71a4
  41dac9:	push   esp
  41daca:	xchg   ecx,eax
  41dacb:	inc    edi
  41dacc:	push   ebp
  41dacd:	loopne 0x41daf2
  41dacf:	or     BYTE PTR [ebx+edx*4+0x156d163b],bl
  41dad6:	iret   
  41dad7:	mov    ds:0x98797925,al
  41dadc:	pop    edi
  41dadd:	pop    es
  41dade:	gs cdq 
  41dae0:	jb     0x41db0c
  41dae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae3:	and    DWORD PTR [edi+0x41acb9ee],esp
  41dae9:	popa   
  41daea:	das    
  41daeb:	sbb    al,0xef
  41daed:	pop    esi
  41daee:	not    DWORD PTR [ebp-0x3dc016e5]
  41daf4:	sti    
  41daf5:	out    dx,eax
  41daf6:	and    ecx,DWORD PTR [edi-0x2e]
  41daf9:	pop    es
  41dafa:	mov    ebp,0xbc3e6cbc
  41daff:	xchg   edi,eax
  41db00:	sub    ah,BYTE PTR [esi+0x7f94f40d]
  41db06:	adc    eax,0x4b9c3be5
  41db0b:	hlt    
  41db0c:	mov    ebp,0xc3216aa5
  41db11:	jl     0x41db16
  41db13:	and    BYTE PTR [esi+0x2c],ah
  41db16:	call   0xe3965e9a
  41db1b:	or     al,0x5
  41db1d:	jbe    0x41db40
  41db1f:	add    DWORD PTR [esi],0x22
  41db22:	mov    edx,0x36bb6c62
  41db27:	idiv   DWORD PTR [edx-0x5a]
  41db2a:	loope  0x41db58
  41db2c:	add    al,0xd6
  41db2e:	pushf  
  41db2f:	mov    ah,0x82
  41db31:	cmp    BYTE PTR [eax-0x64c36c18],dl
  41db37:	cmp    eax,0xbd271c89
  41db3c:	mov    bh,BYTE PTR [ebp-0x67]
  41db3f:	aas    
  41db40:	jmp    DWORD PTR [ebx]
  41db42:	enter  0x254c,0x8
  41db46:	fimul  DWORD PTR [ecx]
  41db48:	fcmove st,st(3)
  41db4a:	bnd call DWORD PTR ds:0xfd6b77e2
  41db51:	push   esp
  41db52:	pop    ebp
  41db53:	and    ebp,DWORD PTR [edi-0x6cd80595]
  41db59:	jle    0x41db69
  41db5b:	xchg   edi,eax
  41db5c:	js     0x41db04
  41db5e:	jnp    0x41dbd0
  41db60:	mov    esp,0xc14867e
  41db65:	stc    
  41db66:	sbb    esp,ecx
  41db68:	or     BYTE PTR [edx],bl
  41db6a:	sub    eax,0xcf6bfb3
  41db6f:	fimul  DWORD PTR [edi-0x2fe8d74c]
  41db75:	mov    cl,0x77
  41db77:	outs   dx,DWORD PTR ds:[esi]
  41db78:	das    
  41db79:	xor    al,0x12
  41db7b:	ds cmc 
  41db7d:	std    
  41db7e:	pushf  
  41db7f:	ins    BYTE PTR es:[edi],dx
  41db80:	inc    ebp
  41db81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db82:	inc    ecx
  41db83:	add    al,BYTE PTR [esi]
  41db85:	pop    ebp
  41db86:	imul   edx
  41db88:	out    dx,eax
  41db89:	test   al,0x3
  41db8b:	out    0x57,al
  41db8d:	sbb    al,0x87
  41db8f:	sub    ah,BYTE PTR [edx+0x7373e03]
  41db95:	push   ebp
  41db96:	pop    ebx
  41db97:	xchg   esi,eax
  41db98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db99:	daa    
  41db9a:	sub    dl,BYTE PTR [ebx+eiz*1+0x3cb27398]
  41dba1:	jno    0x41dc0e
  41dba3:	jmp    0x111a:0xb15e97d7
  41dbaa:	pop    eax
  41dbab:	mov    bl,BYTE PTR [ebx+0x53ec90b6]
  41dbb1:	mov    edi,ebp
  41dbb3:	push   ecx
  41dbb4:	dec    ebx
  41dbb5:	lds    esp,FWORD PTR [esi]
  41dbb7:	push   esp
  41dbb8:	out    0x40,al
  41dbba:	jno    0x41dc04
  41dbbc:	aaa    
  41dbbd:	scas   al,BYTE PTR es:[edi]
  41dbbe:	push   cs
  41dbbf:	dec    esi
  41dbc0:	jns    0x41db93
  41dbc2:	push   0x1e
  41dbc4:	dec    edx
  41dbc5:	pushf  
  41dbc6:	scas   eax,DWORD PTR es:[edi]
  41dbc7:	jae    0x41dbf9
  41dbc9:	jo     0x41dba3
  41dbcb:	xchg   edi,eax
  41dbcc:	out    0xff,eax
  41dbce:	iret   
  41dbcf:	adc    al,0x75
  41dbd1:	popf   
  41dbd2:	loope  0x41dc46
  41dbd4:	fisttp WORD PTR [esi+0x44]
  41dbd7:	mov    ecx,0x48a66d9e
  41dbdc:	icebp  
  41dbdd:	into   
  41dbde:	dec    esi
  41dbdf:	sub    DWORD PTR [ecx+0x4e7b8db6],edi
  41dbe5:	jmp    0x41dbcb
  41dbe7:	pop    ds
  41dbe8:	dec    ebp
  41dbe9:	loop   0x41dc0f
  41dbeb:	and    al,0x42
  41dbed:	scas   al,BYTE PTR es:[edi]
  41dbee:	lea    edx,[edx-0x4f0cab6f]
  41dbf4:	shr    DWORD PTR [ecx+0x41d8e6b8],0x97
  41dbfb:	test   bl,ah
  41dbfd:	cmp    al,0x6f
  41dbff:	jne    0x41dc19
  41dc01:	adc    al,0x7f
  41dc03:	aam    0x5c
  41dc05:	std    
  41dc06:	loopne 0x41dc6b
  41dc08:	in     eax,0x5
  41dc0a:	cmp    ebx,DWORD PTR [esi+ebx*2]
  41dc0d:	sbb    DWORD PTR [edx-0x4057ffd5],ebp
  41dc13:	imul   esp,DWORD PTR [eax-0x1a3bd4a4],0x21
  41dc1a:	mov    ebx,0xe2da1221
  41dc1f:	xchg   ecx,eax
  41dc20:	push   ebp
  41dc21:	in     eax,dx
  41dc22:	sahf   
  41dc23:	std    
  41dc24:	push   ecx
  41dc25:	in     eax,0xc0
  41dc27:	scas   al,BYTE PTR es:[edi]
  41dc28:	dec    esp
  41dc29:	lds    ebx,FWORD PTR [edx+0x4e]
  41dc2c:	push   eax
  41dc2d:	cli    
  41dc2e:	push   ebp
  41dc2f:	popf   
  41dc30:	cwde   
  41dc31:	xlat   BYTE PTR ds:[ebx]
  41dc32:	mov    es,WORD PTR [edx]
  41dc34:	shr    DWORD PTR [ecx+ecx*4-0x21],cl
  41dc38:	inc    edi
  41dc39:	xlat   BYTE PTR ds:[ebx]
  41dc3a:	loope  0x41dc7c
  41dc3c:	mov    ds:0x6786709,eax
  41dc41:	stc    
  41dc42:	fcom   DWORD PTR [ebx]
  41dc44:	sbb    eax,0xe57b6ec0
  41dc49:	cdq    
  41dc4a:	push   edi
  41dc4b:	push   0x6545c4c9
  41dc50:	jle    0x41dcbc
  41dc52:	into   
  41dc53:	data16 stc 
  41dc55:	adc    eax,0xe060ebe2
  41dc5a:	dec    esi
  41dc5b:	stos   DWORD PTR es:[edi],eax
  41dc5c:	(bad)  [ebp-0x1e4d92d4]
  41dc62:	repnz add dl,al
  41dc65:	sbb    al,0x89
  41dc67:	ins    DWORD PTR es:[edi],dx
  41dc68:	les    ecx,FWORD PTR [edi]
  41dc6a:	dec    ebx
  41dc6b:	jl     0x41dc35
  41dc6d:	mov    dl,0x91
  41dc6f:	gs jno 0x41dc55
  41dc72:	or     ch,cl
  41dc74:	clc    
  41dc75:	pop    eax
  41dc76:	jmp    0x41dc54
  41dc78:	in     al,dx
  41dc79:	jl     0x41dc90
  41dc7b:	jle    0x41dc2b
  41dc7d:	jne    0x41dc54
  41dc7f:	shl    BYTE PTR [ebx+0x7b28d467],1
  41dc85:	dec    edi
  41dc86:	pop    ecx
  41dc87:	mov    esp,0x33d59358
  41dc8c:	jg     0x41dc6e
  41dc8e:	dec    esi
  41dc8f:	cmp    eax,0x4d3e8b13
  41dc94:	out    dx,al
  41dc95:	xchg   ecx,eax
  41dc96:	addr16 jne 0x41dca1
  41dc99:	ret    
  41dc9a:	inc    eax
  41dc9b:	xor    DWORD PTR [ebx+0x5f],esp
  41dc9e:	jecxz  0x41dc7d
  41dca0:	xor    ebx,eax
  41dca2:	pop    eax
  41dca3:	xchg   esi,eax
  41dca4:	and    BYTE PTR [esi],ch
  41dca6:	shl    BYTE PTR [edx],0xf3
  41dca9:	ficomp WORD PTR [esi]
  41dcab:	push   ebp
  41dcac:	pop    ecx
  41dcad:	pop    ds
  41dcae:	arpl   WORD PTR [eax+esi*1-0x3a],bp
  41dcb2:	xchg   ecx,eax
  41dcb3:	in     eax,0x10
  41dcb5:	fwait
  41dcb6:	aad    0x86
  41dcb8:	out    dx,eax
  41dcb9:	outs   dx,DWORD PTR ds:[esi]
  41dcba:	int    0x60
  41dcbc:	fst    DWORD PTR [edi+ebx*8+0x7e03e6b6]
  41dcc3:	mov    dh,0xf2
  41dcc5:	and    al,0xe3
  41dcc7:	fisubr WORD PTR [esi-0x2557d1e3]
  41dccd:	shl    BYTE PTR [ebx+0x3a],cl
  41dcd0:	add    BYTE PTR cs:[ebx+0x70754edc],bl
  41dcd7:	sbb    dl,BYTE PTR [edi+0x15]
  41dcda:	test   al,0xfb
  41dcdc:	enter  0x9886,0x4c
  41dce0:	sbb    esi,eax
  41dce2:	dec    DWORD PTR [ebx-0x24]
  41dce5:	ins    DWORD PTR es:[edi],dx
  41dce6:	leave  
  41dce7:	pop    ds
  41dce8:	(bad)  
  41dce9:	cld    
  41dcea:	repnz mov edi,ebx
  41dced:	fdiv   QWORD PTR [edi-0x176208e1]
  41dcf3:	xlat   BYTE PTR ds:[ebx]
  41dcf4:	repnz ins BYTE PTR es:[edi],dx
  41dcf6:	adc    DWORD PTR [edi+eiz*2],0x15
  41dcfa:	sub    cl,0x1c
  41dcfd:	cli    
  41dcfe:	xchg   DWORD PTR [eax-0x5e563406],edi
  41dd04:	mov    bl,0xf0
  41dd06:	push   eax
  41dd07:	xchg   ebx,eax
  41dd08:	push   cs
  41dd09:	push   ds
  41dd0a:	xchg   edi,eax
  41dd0b:	repnz push ds
  41dd0d:	mov    bl,0x35
  41dd0f:	push   ecx
  41dd10:	hlt    
  41dd11:	jg     0x41dd58
  41dd13:	mov    ebx,ebx
  41dd15:	arpl   WORD PTR [ecx],ax
  41dd17:	pop    ds
  41dd18:	bound  ebx,QWORD PTR [ecx*2-0x57b456ac]
  41dd1f:	iret   
  41dd20:	push   edx
  41dd21:	jnp    0x41dd72
  41dd23:	mov    ds:0xa1f0a744,eax
  41dd28:	pop    ebp
  41dd29:	jmp    0xc36e69dc
  41dd2e:	popa   
  41dd2f:	mov    WORD PTR [eax-0x4b],cs
  41dd32:	add    BYTE PTR [edi+0x67],0xb5
  41dd36:	(bad)  
  41dd37:	addr16 retf 
  41dd39:	daa    
  41dd3a:	xchg   edx,eax
  41dd3b:	retf   0xa3d1
  41dd3e:	push   ecx
  41dd3f:	sbb    al,0xc
  41dd41:	jae    0x41dd30
  41dd43:	rcr    DWORD PTR [esi-0x57],cl
  41dd46:	pop    edi
  41dd47:	xor    ch,0x3a
  41dd4a:	aas    
  41dd4b:	bnd jne 0x41dd55
  41dd4e:	jmp    0xe93e:0xa034aa39
  41dd55:	sub    eax,0x4393795e
  41dd5a:	fdivr  QWORD PTR [eax-0x6e]
  41dd5d:	pop    ss
  41dd5e:	loopne 0x41ddae
  41dd60:	neg    ah
  41dd62:	dec    esi
  41dd63:	and    BYTE PTR [ecx-0x5a],bh
  41dd66:	and    BYTE PTR [edx],ah
  41dd68:	cmp    BYTE PTR ds:0x43aa3ede,ch
  41dd6e:	call   0xc6d7449f
  41dd73:	jo     0x41dd0c
  41dd75:	inc    ebx
  41dd76:	ror    DWORD PTR [edi],1
  41dd78:	inc    edi
  41dd79:	(bad)  
  41dd7a:	pop    eax
  41dd7b:	add    al,0xe1
  41dd7d:	push   ebx
  41dd7e:	sub    ch,BYTE PTR [eax+0x549049dc]
  41dd84:	lea    esp,ds:0x7def64f2
  41dd8a:	sbb    al,0xb0
  41dd8c:	mov    WORD PTR [ebx+0x13bacd1],?
  41dd92:	cmc    
  41dd93:	jbe    0x41de0b
  41dd95:	pop    ebx
  41dd96:	std    
  41dd97:	jmp    0x1aa8:0x37b8fc13
  41dd9e:	add    esp,DWORD PTR [edx]
  41dda0:	sub    BYTE PTR [ebx+0xb],dl
  41dda3:	ret    0x669b
  41dda6:	popa   
  41dda7:	or     DWORD PTR [edx],ecx
  41dda9:	push   0x73d7ee02
  41ddae:	(bad)  
  41ddaf:	pop    esp
  41ddb0:	aad    0xc1
  41ddb2:	push   ebx
  41ddb3:	sbb    BYTE PTR [ecx+0xe],dl
  41ddb6:	in     eax,0x7e
  41ddb8:	cld    
  41ddb9:	leave  
  41ddba:	xchg   edi,eax
  41ddbb:	ja     0x41dde6
  41ddbd:	jl     0x41dd82
  41ddbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddc0:	fdiv   st(3),st
  41ddc2:	pop    es
  41ddc3:	inc    edx
  41ddc4:	sahf   
  41ddc5:	pop    esp
  41ddc6:	retf   0x8cb3
  41ddc9:	int    0xf2
  41ddcb:	and    bl,BYTE PTR [ebx-0x7c43b24c]
  41ddd1:	and    bh,0x2e
  41ddd4:	push   0x10c06627
  41ddd9:	js     0x41ddc3
  41dddb:	fidivr WORD PTR [ebx]
  41dddd:	pop    ecx
  41ddde:	not    BYTE PTR [esi+eiz*8]
  41dde1:	xchg   ecx,eax
  41dde2:	push   ebx
  41dde3:	jl     0x41ddc6
  41dde5:	fisttp WORD PTR [ebp+0x727274ba]
  41ddeb:	imul   ebx,DWORD PTR [eax],0x7022f0a1
  41ddf1:	pop    ss
  41ddf2:	cmp    BYTE PTR [edi+0x27d6ce7],al
  41ddf8:	stos   DWORD PTR es:[edi],eax
  41ddf9:	mov    ah,0x57
  41ddfb:	js     0x41de0b
  41ddfd:	ror    BYTE PTR ds:0x7b7ba449,cl
  41de03:	imul   ebx,DWORD PTR [ecx+0x785f2089],0x45
  41de0a:	xchg   esi,eax
  41de0b:	mov    al,ds:0x2d235147
  41de10:	mov    al,ds:0x815140b7
  41de15:	retf   
  41de16:	jl     0x41de76
  41de18:	pushf  
  41de19:	and    DWORD PTR [ebp-0x4e],esi
  41de1c:	pop    eax
  41de1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de1e:	dec    ebx
  41de1f:	mov    fs,WORD PTR [ebp+0x31b978b]
  41de25:	in     eax,dx
  41de26:	mov    DWORD PTR [ebp+eiz*2-0x6b707b71],edi
  41de2d:	out    0x2d,al
  41de2f:	add    eax,0x6ec2fb5e
  41de34:	rol    BYTE PTR [ebp-0x6be8fc50],cl
  41de3a:	dec    eax
  41de3b:	sub    esi,eax
  41de3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de3e:	xchg   ebx,eax
  41de3f:	mov    ebp,0xe30b2fa0
  41de44:	(bad)  
  41de45:	popa   
  41de46:	or     esp,DWORD PTR [eax-0x279a0298]
  41de4c:	and    bl,BYTE PTR [edx]
  41de4e:	mov    edi,0xb7553d85
  41de53:	xchg   ebp,eax
  41de54:	rcl    DWORD PTR [edi],cl
  41de56:	ja     0x41de4a
  41de58:	sti    
  41de59:	xor    bh,ch
  41de5b:	or     BYTE PTR [ebx+0x717e680b],0xcd
  41de62:	push   eax
  41de63:	add    bl,BYTE PTR [edx]
  41de65:	sar    BYTE PTR [ebx+0x6],0x63
  41de69:	add    ch,BYTE PTR [ecx]
  41de6b:	je     0x41de44
  41de6d:	or     eax,0x2581d93f
  41de72:	punpckhbw mm6,QWORD PTR ds:0xf4270d09
  41de79:	bound  ebx,QWORD PTR [esi+0x3e3d719e]
  41de7f:	lds    ecx,FWORD PTR [ebx+0x52]
  41de82:	push   0xd
  41de84:	mov    ebp,0x29695a0e
  41de89:	out    0x98,eax
  41de8b:	idiv   BYTE PTR [esi-0x7d]
  41de8e:	shl    BYTE PTR cs:[edx],0xf1
  41de92:	out    dx,eax
  41de93:	fxch   st(3)
  41de95:	mov    ah,0xa2
  41de97:	(bad)  
  41de98:	repz jg 0x41df18
  41de9b:	les    esi,FWORD PTR [eax+0x38]
  41de9e:	pop    esp
  41de9f:	lds    edi,FWORD PTR [eax+0x5e4720a4]
  41dea5:	jg     0x41de3f
  41dea7:	pop    ds
  41dea8:	loop   0x41de4e
  41deaa:	or     bh,ah
  41deac:	in     eax,dx
  41dead:	popa   
  41deae:	call   0xa054:0x8ea439ce
  41deb5:	imul   ebp,DWORD PTR [eax+0x459deea0],0x87f3f3c5
  41debf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dec0:	sub    DWORD PTR [ebx+0x2d],esi
  41dec3:	push   esp
  41dec4:	sbb    eax,0x724dafa9
  41dec9:	xor    BYTE PTR [esi],ah
  41decb:	adc    BYTE PTR [esi+0x62294ecb],al
  41ded1:	adc    esp,DWORD PTR [ecx-0xe4be8b7]
  41ded7:	sub    BYTE PTR [eax],ah
  41ded9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deda:	lods   eax,DWORD PTR ds:[esi]
  41dedb:	push   ebp
  41dedc:	shr    DWORD PTR [edx+0x70],0x4b
  41dee0:	jmp    0x41dec2
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	sub    eax,0xa1705631
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	clc    
  41def7:	add    al,0x0
  41def9:	add    BYTE PTR [ecx-0x46],bl
  41defc:	mov    ah,0x4a
  41defe:	and    dl,dh
  41df00:	pusha  
  41df01:	lods   al,BYTE PTR ds:[esi]
  41df02:	jno    0x41df1e
  41df04:	and    cl,BYTE PTR [edi-0x28]
  41df07:	imul   ecx,DWORD PTR ds:0x1d78,0x49
  41df0d:	cmp    esi,0xacde06a1
  41df13:	retf   
  41df14:	inc    eax
  41df15:	iret   
  41df16:	pop    ss
  41df17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df18:	adc    esp,DWORD PTR [edi+0x0]
  41df1b:	adc    esi,ebp
  41df1d:	into   
  41df1e:	push   esi
  41df1f:	sub    BYTE PTR [ebx],ch
  41df21:	and    eax,0xd453d0ef
  41df26:	das    
  41df27:	mov    ch,0xc5
  41df29:	sub    cl,dl
  41df2b:	inc    esp
  41df2c:	popf   
  41df2d:	push   ebp
  41df2e:	hlt    
  41df2f:	loopne 0x41def6
  41df31:	mov    ch,0xb5
  41df33:	ins    DWORD PTR es:[edi],dx
  41df34:	iret   
  41df35:	mov    eax,ds:0x1de41b13
  41df3a:	jns    0x41dfa6
  41df3c:	imul   esp,ecx,0x6a
  41df3f:	pushf  
  41df40:	fwait
  41df41:	mov    ah,0xdf
  41df43:	aad    0x15
  41df45:	outs   dx,BYTE PTR ds:[esi]
  41df46:	ja     0x41df76
  41df48:	lds    edi,FWORD PTR [esi-0x14]
  41df4b:	fldpi  
  41df4d:	shl    dh,cl
  41df4f:	in     al,dx
  41df50:	adc    dl,BYTE PTR [eax]
  41df52:	div    BYTE PTR [ecx+esi*1+0x50279a9b]
  41df59:	repnz pop ecx
  41df5b:	cdq    
  41df5c:	inc    ebp
  41df5d:	add    BYTE PTR [edx-0x49074034],0x52
  41df64:	mov    ah,0xc5
  41df66:	(bad)  
  41df67:	pop    esi
  41df68:	gs jnp 0x41df42
  41df6b:	mov    edi,esp
  41df6d:	mov    ebx,0x627850c7
  41df72:	push   cs
  41df73:	dec    ecx
  41df74:	mov    ch,0x10
  41df76:	shr    BYTE PTR [ecx+0x79],cl
  41df79:	mov    bl,0x93
  41df7b:	add    ah,BYTE PTR [ebp+0x63]
  41df7e:	cmc    
  41df7f:	mov    ds:0xbd9cffde,al
  41df84:	dec    ecx
  41df85:	and    eax,DWORD PTR [ecx]
  41df87:	(bad)  
  41df88:	enter  0xb43d,0x5f
  41df8c:	dec    eax
  41df8d:	outs   dx,DWORD PTR ds:[esi]
  41df8e:	sub    BYTE PTR [edi-0x37],al
  41df91:	imul   DWORD PTR [ecx+0x77]
  41df94:	jne    0x41df77
  41df96:	arpl   WORD PTR [ebx+eax*1-0x41fce7b6],di
  41df9d:	ret    
  41df9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df9f:	cli    
  41dfa0:	mov    cl,bh
  41dfa2:	addr16 out dx,eax
  41dfa4:	gs in  al,0x48
  41dfa7:	in     al,0x8
  41dfa9:	das    
  41dfaa:	mov    dh,0x56
  41dfac:	xlat   BYTE PTR ds:[ebx]
  41dfad:	mov    edx,0xb9264b2a
  41dfb2:	int    0xbb
  41dfb4:	or     al,0xa4
  41dfb6:	ret    0xc1b3
  41dfb9:	cmc    
  41dfba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfbb:	(bad)  
  41dfbc:	jecxz  0x41df58
  41dfbe:	je     0x41e028
  41dfc0:	sub    eax,0x47545271
  41dfc5:	repnz out 0xd6,al
  41dfc8:	lock mov dl,0x0
  41dfcb:	iret   
  41dfcc:	sub    BYTE PTR [ebx],cl
  41dfce:	fld    TBYTE PTR [eax]
  41dfd0:	(bad)  
  41dfd1:	repnz cld 
  41dfd3:	jbe    0x41df76
  41dfd5:	leave  
  41dfd6:	jg     0x41e051
  41dfd8:	cmp    eax,0x8c7724b5
  41dfdd:	mov    ebp,DWORD PTR [edi+0x653ea9fe]
  41dfe3:	xchg   ebp,eax
  41dfe4:	lods   al,BYTE PTR ds:[esi]
  41dfe5:	sbb    al,0x28
  41dfe7:	leave  
  41dfe8:	imul   ebx,DWORD PTR [ecx+0x5844d1e9],0x47f45b49
  41dff2:	ss (bad) 
  41dff4:	cdq    
  41dff5:	jno    0x41dfce
  41dff7:	inc    ebp
  41dff8:	sti    
  41dff9:	jns    0x41df93
  41dffb:	out    dx,eax
  41dffc:	ins    BYTE PTR es:[edi],dx
  41dffd:	cwde   
  41dffe:	stos   DWORD PTR es:[edi],eax
  41dfff:	loop   0x41df91
  41e001:	cdq    
  41e002:	sub    bh,cl
  41e004:	or     ecx,DWORD PTR [ebp-0x46]
  41e007:	mov    BYTE PTR ds:0x4b0c6eb1,cl
  41e00d:	and    dh,BYTE PTR [edx+eiz*1-0x11]
  41e011:	or     DWORD PTR [edx+eax*8-0x45],ebp
  41e015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e016:	lea    edi,[ecx-0x48d35e68]
  41e01c:	xlat   BYTE PTR ds:[ebx]
  41e01d:	in     eax,0x6f
  41e01f:	mov    ?,WORD PTR [edi+0x5bc2f147]
  41e025:	(bad)  
  41e026:	sti    
  41e027:	(bad)  
  41e028:	dec    ebx
  41e029:	les    ecx,FWORD PTR [esi+0x17071819]
  41e02f:	jmp    0x41dfe1
  41e031:	dec    eax
  41e032:	(bad)  
  41e033:	jge    0x41e026
  41e035:	mov    BYTE PTR [eax],0x9
  41e038:	fmul   QWORD PTR [esi+0x2d]
  41e03b:	dec    esi
  41e03c:	fwait
  41e03d:	pop    ss
  41e03e:	cmp    al,0xd4
  41e040:	jns    0x41e06c
  41e042:	xchg   edx,eax
  41e043:	stos   DWORD PTR es:[edi],eax
  41e044:	clc    
  41e045:	xlat   BYTE PTR ds:[ebx]
  41e046:	and    bl,BYTE PTR [eax+ebp*8+0x12]
  41e04a:	daa    
  41e04b:	sbb    cl,cl
  41e04d:	push   ebx
  41e04e:	imul   eax,DWORD PTR [edx+ecx*2+0x5e10f7f2],0xc0869b62
  41e059:	xchg   ebx,eax
  41e05a:	pop    ecx
  41e05b:	mov    cl,0xfd
  41e05d:	ins    DWORD PTR es:[edi],dx
  41e05e:	or     BYTE PTR [ecx+0x30ddca15],al
  41e064:	(bad)  
  41e065:	neg    DWORD PTR [edi+0x17]
  41e068:	mov    edx,0x9321527b
  41e06d:	and    eax,0xf2f428f2
  41e072:	in     al,0xf
  41e074:	xchg   edi,eax
  41e075:	and    DWORD PTR [esi-0x19],ebx
  41e078:	pop    es
  41e079:	js     0x41e0b6
  41e07b:	mov    eax,DWORD PTR [edi+esi*4]
  41e07e:	mov    dl,0x23
  41e080:	std    
  41e081:	ss sbb dh,dh
  41e084:	pusha  
  41e085:	out    0x64,al
  41e087:	xchg   esp,eax
  41e088:	icebp  
  41e089:	repnz lock or eax,0x6408b289
  41e090:	mov    ebx,0x8504db15
  41e095:	pop    esp
  41e096:	inc    esp
  41e097:	lods   al,BYTE PTR ds:[esi]
  41e098:	mov    esi,0x1d05ad27
  41e09d:	call   0xa0d3:0xb7b4bca7
  41e0a4:	jbe    0x41e0e7
  41e0a6:	rol    edx,cl
  41e0a8:	or     DWORD PTR [ebp-0x10],ebp
  41e0ab:	jnp    0x41e0c5
  41e0ad:	enter  0x59a5,0x52
  41e0b1:	fidiv  WORD PTR [eax-0x1]
  41e0b4:	adc    al,0x3d
  41e0b6:	adc    eax,0x59d31bd6
  41e0bb:	dec    edx
  41e0bc:	mov    ebx,0x1693934b
  41e0c1:	icebp  
  41e0c2:	pushf  
  41e0c3:	ins    DWORD PTR es:[edi],dx
  41e0c4:	dec    ebx
  41e0c5:	cmp    eax,0x83268739
  41e0ca:	fist   WORD PTR [eax]
  41e0cc:	gs in  al,0xdd
  41e0cf:	dec    edx
  41e0d0:	push   edx
  41e0d1:	rcl    ch,cl
  41e0d3:	out    0xc6,al
  41e0d5:	je     0x41e108
  41e0d7:	dec    eax
  41e0d8:	mov    cl,0x22
  41e0da:	fisttp QWORD PTR [edi-0x6527871a]
  41e0e0:	arpl   WORD PTR [edi+0x5f],bp
  41e0e3:	cmp    DWORD PTR [ebx],0x181b76a3
  41e0e9:	dec    ebp
  41e0ea:	std    
  41e0eb:	sub    BYTE PTR [ecx+eax*8],al
  41e0ee:	inc    esp
  41e0ef:	loopne 0x41e083
  41e0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f2:	xchg   esp,eax
  41e0f3:	inc    esp
  41e0f4:	fwait
  41e0f5:	add    dl,BYTE PTR [ecx+0x60]
  41e0f8:	cmp    al,0x7a
  41e0fa:	add    BYTE PTR [esi+0x6f],dh
  41e0fd:	ins    BYTE PTR es:[edi],dx
  41e0fe:	pop    ss
  41e0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e100:	sbb    al,BYTE PTR [ecx+0x8]
  41e103:	mov    WORD PTR [edx+0x579bce9f],ss
  41e109:	jb     0x41e14f
  41e10b:	cld    
  41e10c:	mov    al,0x84
  41e10e:	sbb    BYTE PTR [eax],bh
  41e110:	mov    ds:0x38c1b516,eax
  41e115:	(bad)  
  41e116:	and    ebx,DWORD PTR [ecx-0x74]
  41e119:	dec    ebp
  41e11a:	scas   al,BYTE PTR es:[edi]
  41e11b:	lahf   
  41e11c:	in     eax,dx
  41e11d:	dec    eax
  41e11e:	stc    
  41e11f:	fist   DWORD PTR [ebx]
  41e121:	dec    esi
  41e122:	pop    ds
  41e123:	jge    0x41e113
  41e125:	dec    esi
  41e126:	jno    0x41e13e
  41e128:	lods   eax,DWORD PTR ds:[esi]
  41e129:	ficom  DWORD PTR [ebx-0x316cf0c9]
  41e12f:	pop    ss
  41e130:	int3   
  41e131:	pop    ebx
  41e132:	test   eax,0xa71ee635
  41e137:	xor    eax,0xf2f90eb4
  41e13c:	loopne 0x41e13d
  41e13e:	stos   BYTE PTR es:[edi],al
  41e13f:	aas    
  41e140:	lock and DWORD PTR [esi],0xffffffe0
  41e144:	jo     0x41e153
  41e146:	dec    ebx
  41e147:	(bad)  
  41e148:	xchg   ecx,eax
  41e149:	sbb    eax,0xe1b1f253
  41e14e:	popa   
  41e14f:	mov    DWORD PTR [ecx+0x42],edi
  41e152:	pop    ebp
  41e153:	jl     0x41e17c
  41e155:	call   0xd2c46e7f
  41e15a:	jnp    0x41e110
  41e15c:	(bad)  
  41e15d:	jns    0x41e1ad
  41e15f:	xor    DWORD PTR ds:0xa8ccdea8,esp
  41e165:	adc    BYTE PTR [eax-0x28],bl
  41e168:	fs sub eax,0xced90a00
  41e16e:	mov    bh,dh
  41e170:	inc    ebp
  41e171:	aaa    
  41e172:	ja     0x41e165
  41e174:	jle    0x41e1a9
  41e176:	loopne 0x41e1e4
  41e178:	and    esp,edx
  41e17a:	xor    esp,DWORD PTR [ecx]
  41e17c:	adc    eax,0x1342fbb4
  41e181:	imul   ebp,DWORD PTR [ebx-0x1e061c6b],0x56
  41e188:	jg     0x41e16f
  41e18a:	pop    edx
  41e18b:	lea    ebp,[ebx]
  41e18d:	adc    al,BYTE PTR [esp+edx*2+0xf]
  41e191:	fs mov ecx,0xaa5d7f9c
  41e197:	xor    eax,DWORD PTR [edi-0x72]
  41e19a:	pushf  
  41e19b:	xchg   ebp,eax
  41e19c:	jmp    0x41e147
  41e19e:	in     eax,dx
  41e19f:	xchg   esi,eax
  41e1a0:	retf   
  41e1a1:	or     esi,DWORD PTR [ecx]
  41e1a3:	out    0x8,eax
  41e1a5:	sub    cl,ah
  41e1a7:	xchg   ebx,eax
  41e1a8:	dec    esp
  41e1a9:	stos   DWORD PTR es:[edi],eax
  41e1aa:	push   esp
  41e1ac:	mov    esi,0x1ad697ec
  41e1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1b2:	inc    ecx
  41e1b3:	inc    ebp
  41e1b4:	fistp  WORD PTR [ebp+0x29]
  41e1b7:	shl    al,0x92
  41e1ba:	xlat   BYTE PTR ds:[ebx]
  41e1bb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41e1bd:	scas   al,BYTE PTR es:[edi]
  41e1be:	or     al,0xe5
  41e1c0:	push   ss
  41e1c1:	mov    ah,0x37
  41e1c3:	rsqrtps xmm0,xmm0
  41e1c6:	mov    edx,0xe48b4b48
  41e1cb:	or     eax,0x754e35c5
  41e1d0:	push   es
  41e1d1:	in     eax,dx
  41e1d2:	stos   BYTE PTR es:[edi],al
  41e1d3:	xor    esi,edx
  41e1d5:	push   eax
  41e1d6:	mov    WORD PTR [esi],ss
  41e1d8:	dec    edx
  41e1d9:	pushf  
  41e1da:	xchg   esi,eax
  41e1db:	sar    BYTE PTR [ebx],cl
  41e1dd:	test   BYTE PTR [ecx-0x57f37a51],al
  41e1e3:	xor    bh,BYTE PTR [edx+0x49d4bee]
  41e1e9:	cs inc esp
  41e1eb:	dec    ecx
  41e1ec:	sahf   
  41e1ed:	into   
  41e1ee:	add    bh,BYTE PTR [eax]
  41e1f0:	ja     0x41e260
  41e1f2:	mov    ebx,0xdcfc95c8
  41e1f7:	pop    ds
  41e1f8:	push   esi
  41e1f9:	sbb    DWORD PTR [ecx-0x7b4c2536],eax
  41e1ff:	fsubr  st(3),st
  41e201:	sub    DWORD PTR [edx-0x11],edi
  41e204:	jmp    0x7d2b:0x840fdf6e
  41e20b:	jne    0x41e270
  41e20d:	or     eax,0xd0d5e801
  41e212:	iret   
  41e213:	inc    edi
  41e214:	mov    edx,0x6667a589
  41e219:	sbb    DWORD PTR [ebx-0x4b],edi
  41e21c:	dec    ebx
  41e21d:	cmp    edi,DWORD PTR fs:[edx]
  41e220:	sub    ecx,DWORD PTR [ecx-0x7e]
  41e223:	mov    dl,0x7c
  41e225:	dec    ebx
  41e226:	lds    ebp,FWORD PTR [ebp+0x4223bbe9]
  41e22c:	xchg   esi,eax
  41e22d:	and    ecx,DWORD PTR [esp+0x78]
  41e231:	xor    BYTE PTR [edx+0x5278c463],dh
  41e237:	ret    
  41e238:	mov    ebx,0x84f3abdc
  41e23d:	outs   dx,DWORD PTR ds:[esi]
  41e23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e23f:	daa    
  41e240:	ins    DWORD PTR es:[edi],dx
  41e241:	sbb    ah,BYTE PTR [ebx]
  41e243:	xor    ebp,DWORD PTR [ebx-0x15]
  41e246:	mov    WORD PTR fs:[ecx],fs
  41e249:	mov    ds,WORD PTR [edx+edx*8+0x4a]
  41e24d:	(bad)  
  41e24e:	fisttp WORD PTR [ebp+0x4d]
  41e251:	fbld   TBYTE PTR [ebx+0x30]
  41e254:	pop    edi
  41e255:	add    BYTE PTR [ebx],cl
  41e257:	and    al,0x5
  41e259:	add    al,0xe1
  41e25b:	adc    edx,edi
  41e25d:	inc    esi
  41e25e:	call   0xdcc4027a
  41e263:	mov    WORD PTR [ecx],gs
  41e265:	out    0x5f,al
  41e267:	call   0xab01885d
  41e26c:	push   ebp
  41e26d:	out    dx,al
  41e26e:	push   es
  41e26f:	mov    cl,0x70
  41e271:	cmp    DWORD PTR [esi-0xfa516dd],esp
  41e277:	jp     0x41e2dd
  41e279:	scas   eax,DWORD PTR es:[edi]
  41e27a:	stos   DWORD PTR es:[edi],eax
  41e27b:	fwait
  41e27c:	std    
  41e27d:	mov    dh,0x19
  41e27f:	fst    st(6)
  41e281:	(bad)  
  41e283:	inc    edi
  41e284:	inc    esp
  41e285:	xchg   ecx,eax
  41e286:	retf   0x4b35
  41e289:	sbb    ch,ah
  41e28b:	push   0xffffffe6
  41e28d:	ins    DWORD PTR es:[edi],dx
  41e28e:	cmp    eax,0xcc21f751
  41e293:	dec    eax
  41e294:	cmp    al,0x21
  41e296:	jecxz  0x41e2ef
  41e298:	hlt    
  41e299:	inc    esp
  41e29a:	mov    esi,0xc1cc2019
  41e29f:	mov    ds:0x19cbccc2,al
  41e2a4:	mov    dl,0x37
  41e2a6:	(bad)  
  41e2a7:	push   esi
  41e2a8:	ja     0x41e2e9
  41e2aa:	or     BYTE PTR [eiz*1-0x390c39f9],bh
  41e2b1:	mov    ds:0x90b372b3,al
  41e2b6:	gs and dh,cl
  41e2b9:	mov    edx,0xcc51911b
  41e2be:	ror    ebp,0x2e
  41e2c1:	std    
  41e2c2:	add    DWORD PTR [edx],edx
  41e2c4:	(bad)  
  41e2c5:	mov    esp,0xa3fc23c7
  41e2ca:	cli    
  41e2cb:	lds    ecx,FWORD PTR [edx+0x16c1224d]
  41e2d1:	or     DWORD PTR [ecx+0x2bf1ca35],ebp
  41e2d7:	dec    edx
  41e2d8:	push   ss
  41e2d9:	in     eax,0x73
  41e2db:	test   DWORD PTR [edx+ebp*8],0x97dcc6e0
  41e2e2:	and    BYTE PTR ds:0xfffb5a3a,bh
  41e2e8:	dec    eax
  41e2e9:	shl    ebp,0x65
  41e2ec:	pop    DWORD PTR [ecx-0x3]
  41e2ef:	inc    eax
  41e2f0:	in     eax,dx
  41e2f1:	std    
  41e2f2:	or     DWORD PTR [ecx+0x7998fd9],esi
  41e2f8:	test   eax,0xe0c9a190
  41e2fd:	inc    esp
  41e2fe:	mov    eax,ds:0xb1a80d71
  41e303:	aas    
  41e304:	retf   0x24b6
  41e307:	sbb    al,0x82
  41e309:	sar    BYTE PTR [ebx+ecx*2-0x78],0xf4
  41e30e:	jl     0x41e360
  41e310:	shl    BYTE PTR [ebx+0x7114403e],0x6
  41e317:	cmp    dh,BYTE PTR [esi]
  41e319:	or     BYTE PTR [edx],al
  41e31b:	clc    
  41e31c:	scas   eax,DWORD PTR es:[edi]
  41e31d:	popa   
  41e31e:	or     BYTE PTR [ebp-0x675bef56],al
  41e324:	mov    ds:0xa61b6df2,al
  41e329:	hlt    
  41e32a:	arpl   bp,bx
  41e32c:	sahf   
  41e32d:	and    al,0x49
  41e32f:	shl    BYTE PTR ds:0x20d55fa3,cl
  41e335:	ins    BYTE PTR es:[edi],dx
  41e336:	sub    eax,0xbae83304
  41e33b:	into   
  41e33c:	icebp  
  41e33d:	dec    eax
  41e33e:	outs   dx,BYTE PTR ds:[esi]
  41e33f:	scas   al,BYTE PTR es:[edi]
  41e340:	push   esp
  41e341:	cs pop esi
  41e343:	out    0x23,eax
  41e345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e346:	daa    
  41e347:	inc    ebp
  41e348:	and    ah,BYTE PTR [edi]
  41e34a:	dec    edx
  41e34b:	jae    0x41e3bf
  41e34d:	fcmovnb st,st(4)
  41e34f:	mov    esi,0xe162c5a2
  41e354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e355:	pushf  
  41e356:	fwait
  41e357:	sbb    dl,BYTE PTR [edi-0x2dbba265]
  41e35d:	pop    ecx
  41e35e:	dec    BYTE PTR [ebx-0x260290b8]
  41e364:	xor    BYTE PTR [edx+0x64a5d593],ah
  41e36a:	add    dh,dh
  41e36c:	mov    eax,ds:0xd0ff4f20
  41e371:	push   ss
  41e372:	jnp    0x41e379
  41e374:	add    DWORD PTR [ecx-0x402acb4a],ecx
  41e37a:	xor    BYTE PTR [esi],bl
  41e37c:	xor    ebp,DWORD PTR [edx+ebp*8]
  41e37f:	pop    ds
  41e380:	sti    
  41e381:	dec    eax
  41e382:	mov    esp,0xc334f4d2
  41e387:	and    ebp,DWORD PTR [edx+0xacb5da5]
  41e38d:	dec    esp
  41e38e:	in     eax,dx
  41e38f:	jmp    0x9165:0x99acc0a0
  41e396:	add    DWORD PTR [edx-0x75f4f4b1],ecx
  41e39c:	mov    ch,0xc7
  41e39e:	jge    0x41e3db
  41e3a0:	fisub  WORD PTR [edi+eiz*2+0x4c01ecfe]
  41e3a7:	xor    edx,0xffffffa3
  41e3aa:	xchg   edi,eax
  41e3ab:	imul   dx,WORD PTR [edi+0x41],0x5f3c
  41e3b1:	cld    
  41e3b2:	rcl    DWORD PTR [esi+0x5e8b9d46],1
  41e3b8:	leave  
  41e3b9:	fist   DWORD PTR [ecx-0x3c]
  41e3bc:	sub    ebp,esi
  41e3be:	push   ebp
  41e3bf:	inc    edx
  41e3c0:	ins    DWORD PTR es:[edi],dx
  41e3c1:	jl     0x41e358
  41e3c3:	stc    
  41e3c4:	xchg   ecx,eax
  41e3c5:	xchg   ecx,eax
  41e3c6:	out    0xa1,eax
  41e3c8:	fst    DWORD PTR [ebp-0x4b]
  41e3cb:	mov    bh,0x73
  41e3cd:	ror    BYTE PTR [edi],1
  41e3cf:	cdq    
  41e3d0:	mov    eax,0x31aef96f
  41e3d5:	push   esp
  41e3d6:	out    dx,eax
  41e3d7:	lods   eax,DWORD PTR ds:[esi]
  41e3d8:	ins    DWORD PTR es:[edi],dx
  41e3d9:	dec    edi
  41e3da:	aam    0x94
  41e3dc:	and    ebp,edx
  41e3de:	add    eax,0x3931dbde
  41e3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e4:	xchg   ebx,eax
  41e3e5:	mov    edi,0x9878a498
  41e3ea:	pop    ecx
  41e3eb:	push   es
  41e3ec:	mov    cl,0x97
  41e3ee:	inc    edi
  41e3ef:	dec    eax
  41e3f0:	fild   DWORD PTR fs:[eax-0x7de0740]
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0xa59dfc94
  41e400:	sub    eax,0x15f99bc
  41e405:	add    al,bh
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [edi+0x1933275a],cl
  41e40f:	dec    ebp
  41e410:	ins    BYTE PTR es:[edi],dx
  41e411:	mov    esi,0xe3fb64ce
  41e416:	cmc    
  41e417:	in     al,dx
  41e418:	das    
  41e419:	das    
  41e41a:	jle    0x41e45f
  41e41c:	repnz mov al,0x19
  41e41f:	dec    ecx
  41e420:	repz add ebx,ebx
  41e423:	in     eax,dx
  41e424:	lock xchg ebp,edx
  41e427:	shr    BYTE PTR [eax],1
  41e429:	call   0xa5eb5bd8
  41e42e:	(bad)  
  41e42f:	in     eax,dx
  41e430:	jmp    0x41e47e
  41e432:	xor    eax,0x7001a9f2
  41e437:	aas    
  41e438:	ds adc al,0xd7
  41e43b:	jne    0x41e4bb
  41e43d:	out    0xe3,eax
  41e43f:	sbb    edi,DWORD PTR [edi]
  41e441:	cmp    BYTE PTR [ecx+0x7bab371c],dl
  41e447:	sub    DWORD PTR [edx+0x45],edi
  41e44a:	(bad)  
  41e44b:	aas    
  41e44c:	pop    ecx
  41e44d:	adc    ecx,DWORD PTR [ebx-0xaefac0a]
  41e453:	aas    
  41e454:	cwde   
  41e455:	push   es
  41e456:	jbe    0x41e3da
  41e458:	push   esp
  41e459:	push   ebp
  41e45a:	push   esi
  41e45b:	pop    esi
  41e45c:	pop    edi
  41e45d:	push   es
  41e45e:	xchg   esi,eax
  41e45f:	lahf   
  41e460:	push   ss
  41e461:	or     BYTE PTR [ecx+ebp*1],bl
  41e464:	stos   DWORD PTR es:[edi],eax
  41e465:	(bad)  
  41e466:	lea    ebp,[edi]
  41e468:	js     0x41e401
  41e46a:	dec    ebp
  41e46b:	cmp    ebx,DWORD PTR [ebp-0x58]
  41e46e:	std    
  41e46f:	mov    al,ds:0x7a40847a
  41e474:	push   esp
  41e475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e476:	cdq    
  41e477:	jns    0x41e44b
  41e479:	pop    ebx
  41e47a:	sub    ebp,DWORD PTR [eax+0x5b]
  41e47d:	(bad)  
  41e47e:	in     al,dx
  41e47f:	jmp    0x41e4a1
  41e481:	int3   
  41e482:	ds cmp eax,0x5bab75bf
  41e488:	adc    edx,DWORD PTR [eax-0x73]
  41e48b:	dec    esi
  41e48c:	popf   
  41e48d:	jnp    0x41e44c
  41e48f:	jo     0x41e492
  41e491:	(bad)
  41e494:	scas   al,BYTE PTR es:[edi]
  41e495:	es aas 
  41e497:	(bad)  
  41e498:	jmp    0xbe97a708
  41e49d:	popf   
  41e49e:	jg     0x41e4e4
  41e4a0:	xchg   BYTE PTR ds:0xb4ff0330,cl
  41e4a6:	adc    al,0x45
  41e4a8:	pushf  
  41e4a9:	sub    BYTE PTR [ecx+0x11082539],bh
  41e4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b0:	loopne 0x41e4e2
  41e4b2:	lds    eax,FWORD PTR [esi-0x3a22099e]
  41e4b8:	hlt    
  41e4b9:	call   0x6e00:0x2f7e113a
  41e4c0:	mov    DWORD PTR [ecx-0x14f78504],edi
  41e4c6:	retf   
  41e4c7:	or     esi,edi
  41e4c9:	sbb    eax,0x194bebac
  41e4ce:	or     esi,DWORD PTR [ebp-0x79]
  41e4d1:	xor    eax,0x24a124e7
  41e4d6:	mov    eax,0xb603720b
  41e4db:	js     0x41e4d0
  41e4dd:	mov    al,ds:0x3986aefc
  41e4e2:	imul   esi,DWORD PTR [edi],0x7f
  41e4e5:	inc    esp
  41e4e6:	pusha  
  41e4e7:	mov    ebp,DWORD PTR [edi-0x787239ee]
  41e4ed:	js     0x41e4fa
  41e4ef:	adc    BYTE PTR [edi+eiz*8],0x2
  41e4f3:	daa    
  41e4f4:	stos   DWORD PTR es:[edi],eax
  41e4f5:	lods   eax,DWORD PTR ds:[esi]
  41e4f6:	xchg   esp,eax
  41e4f7:	cs cli 
  41e4f9:	cmp    BYTE PTR [eax],ah
  41e4fb:	ficomp DWORD PTR [ecx-0x14dc3542]
  41e501:	lods   eax,DWORD PTR ds:[esi]
  41e502:	jmp    0x1dc2bbf4
  41e507:	adc    BYTE PTR [ebx],al
  41e509:	je     0x41e4a2
  41e50b:	jno    0x41e573
  41e50d:	xchg   DWORD PTR [ecx+0x70097f55],edi
  41e513:	call   0x47ddee16
  41e518:	test   eax,0x1bf36c8b
  41e51d:	dec    ebx
  41e51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e51f:	mov    ah,BYTE PTR [esi+0x65]
  41e522:	test   eax,0xaa1585bd
  41e527:	into   
  41e528:	mov    ebp,0x62b58300
  41e52d:	jmp    0xc3bd:0xfba2ac61
  41e534:	dec    esp
  41e535:	adc    DWORD PTR [esi+0x59],ecx
  41e538:	test   edx,ebx
  41e53a:	mov    eax,ds:0x8e7d16b3
  41e53f:	call   0xf235:0xfb1a6e4a
  41e546:	add    eax,0x34c6b56e
  41e54b:	sub    edx,edx
  41e54d:	pop    ss
  41e54e:	test   eax,0xca6145b4
  41e553:	cmp    cl,BYTE PTR [ebx+0xb4e76dd]
  41e559:	dec    ebx
  41e55a:	push   esp
  41e55b:	push   ds
  41e55c:	jns    0x41e590
  41e55e:	fs daa 
  41e560:	sub    ebx,edi
  41e562:	cdq    
  41e563:	out    0xfd,al
  41e565:	out    0x8,eax
  41e567:	mov    esi,0x8d176931
  41e56c:	jb     0x41e5da
  41e56e:	mov    al,BYTE PTR [ebp+0x2b92b0e0]
  41e574:	push   cs
  41e575:	dec    eax
  41e576:	jmp    0xb84859fb
  41e57b:	sub    DWORD PTR [edx+edx*4+0x68007477],ecx
  41e582:	add    al,0xe3
  41e584:	ins    DWORD PTR es:[edi],dx
  41e585:	idiv   DWORD PTR [ebp+0x47639e06]
  41e58b:	push   esi
  41e58c:	out    dx,al
  41e58d:	dec    esi
  41e58e:	fidivr DWORD PTR [ebx]
  41e590:	sbb    DWORD PTR [ebp+0x57bda292],edx
  41e596:	(bad)  
  41e597:	stos   DWORD PTR es:[edi],eax
  41e598:	std    
  41e599:	mov    esi,0xfa6fcdfe
  41e59e:	add    al,BYTE PTR [edi+0x454824fe]
  41e5a4:	xchg   edi,eax
  41e5a5:	pusha  
  41e5a6:	push   ds
  41e5a7:	mov    dh,dl
  41e5a9:	sub    dl,BYTE PTR [edx+0x6f]
  41e5ac:	xor    edi,DWORD PTR [ebp+0x6b1efa75]
  41e5b2:	xchg   ebx,eax
  41e5b3:	xchg   BYTE PTR [ecx+esi*2+0x53],dh
  41e5b7:	clc    
  41e5b8:	jmp    0xe4e824fb
  41e5bd:	pop    DWORD PTR [ebp-0x28bc3d17]
  41e5c3:	pop    ebx
  41e5c4:	inc    esi
  41e5c5:	jne    0x41e5ec
  41e5c7:	or     eax,0x7da3652e
  41e5cc:	add    DWORD PTR [eax],eax
  41e5ce:	rol    DWORD PTR [esi+0x47],0xd0
  41e5d2:	xor    ch,BYTE PTR [ebp-0x56f99de5]
  41e5d8:	(bad)  
  41e5d9:	jo     0x41e5b4
  41e5db:	jae    0x41e5ce
  41e5dd:	push   cs
  41e5de:	(bad)  
  41e5df:	jo     0x41e64e
  41e5e1:	and    eax,0x8e59e479
  41e5e6:	push   es
  41e5e7:	mov    esp,0x2684e706
  41e5ec:	adc    BYTE PTR [ecx],dl
  41e5ee:	in     al,dx
  41e5ef:	call   0xecb8:0xa273e028
  41e5f6:	into   
  41e5f7:	arpl   WORD PTR [esi],sp
  41e5f9:	cmp    al,0x50
  41e5fb:	iret   
  41e5fc:	outs   dx,BYTE PTR ds:[esi]
  41e5fd:	cmp    bh,BYTE PTR [edi+edi*4]
  41e600:	in     eax,0x6b
  41e602:	inc    edi
  41e603:	mul    BYTE PTR [ebx-0x55e51b0]
  41e609:	(bad)  
  41e60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e60c:	mov    ecx,0xd291e7ac
  41e611:	and    al,0x6e
  41e613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e614:	xor    DWORD PTR [edx-0xd],ecx
  41e617:	mov    ds:0x9dd9ccd,al
  41e61c:	test   al,0xd5
  41e61e:	xor    DWORD PTR [edi-0x5d2989f2],ebp
  41e624:	rcl    BYTE PTR [edi-0x6c2dbf79],cl
  41e62a:	sub    ch,BYTE PTR [ecx+0x3a08d52f]
  41e630:	fidiv  WORD PTR [ebx]
  41e632:	cs hlt 
  41e634:	pop    ebp
  41e635:	cmovae ebx,DWORD PTR [edi+0x78]
  41e639:	sti    
  41e63a:	retf   
  41e63b:	sbb    esi,ecx
  41e63d:	xor    DWORD PTR [eax-0x5a],ebx
  41e640:	mov    cl,0xbc
  41e642:	push   es
  41e643:	push   edi
  41e644:	mov    ds:0xfbbfd76d,eax
  41e649:	mov    edi,0x26da3c83
  41e64e:	or     esp,DWORD PTR [esp+eiz*4+0x2e2fb55]
  41e655:	icebp  
  41e656:	xchg   edi,eax
  41e657:	(bad)  
  41e658:	xchg   ebp,eax
  41e659:	xchg   edi,eax
  41e65a:	pop    es
  41e65b:	loop   0x41e5fb
  41e65d:	add    BYTE PTR [ebx+edi*2+0x1591fe1e],bl
  41e664:	int    0x52
  41e666:	mov    ecx,0x6efaf53b
  41e66b:	rcl    DWORD PTR [ecx-0x2d88105f],1
  41e671:	enter  0x8159,0x47
  41e675:	jo     0x41e67f
  41e677:	popf   
  41e678:	out    0x14,eax
  41e67a:	xchg   DWORD PTR [ebx-0x175ee4a0],ebp
  41e680:	xchg   ecx,eax
  41e681:	mov    ebp,0xfe4907c4
  41e686:	(bad)  
  41e687:	cmp    cl,BYTE PTR [eax-0x43]
  41e68a:	mov    dh,ch
  41e68c:	ins    BYTE PTR es:[edi],dx
  41e68d:	push   ebp
  41e68e:	cdq    
  41e68f:	fist   DWORD PTR [eax+0x6498c7ae]
  41e695:	popf   
  41e696:	cmc    
  41e697:	fadd   QWORD PTR [ecx]
  41e699:	mov    al,ds:0xc142c97d
  41e69e:	adc    edi,DWORD PTR [edi+0x47]
  41e6a1:	push   esp
  41e6a2:	pop    edx
  41e6a4:	inc    ebp
  41e6a5:	mov    ah,BYTE PTR [edi+0x9]
  41e6a8:	xchg   edi,eax
  41e6a9:	xor    DWORD PTR [ebx+0x23],ebp
  41e6ac:	mov    bh,0x2e
  41e6ae:	(bad)  
  41e6af:	clc    
  41e6b0:	pop    esp
  41e6b1:	xchg   edi,eax
  41e6b2:	fdiv   QWORD PTR [edx]
  41e6b4:	mov    BYTE PTR [esi],bl
  41e6b6:	(bad)  
  41e6b7:	js     0x41e667
  41e6b9:	lahf   
  41e6ba:	sti    
  41e6bb:	ja     0x41e69e
  41e6bd:	xchg   ebx,eax
  41e6be:	(bad)  
  41e6c0:	jecxz  0x41e6cb
  41e6c2:	pop    ebp
  41e6c3:	ror    BYTE PTR [ebp+0x70],1
  41e6c6:	push   edi
  41e6c7:	aam    0xc1
  41e6c9:	push   esp
  41e6ca:	sbb    al,0xf9
  41e6cc:	or     eax,0xa5cdbfed
  41e6d1:	jb     0x41e709
  41e6d3:	jnp    0x41e720
  41e6d5:	cmp    DWORD PTR [ecx+0xb48f18d],eax
  41e6db:	jl     0x41e751
  41e6dd:	xchg   esi,eax
  41e6de:	mov    ecx,0x69849de4
  41e6e3:	and    eax,0x5c70fab2
  41e6e8:	inc    ebx
  41e6e9:	int    0xe6
  41e6eb:	pop    ebp
  41e6ec:	test   DWORD PTR [edx+0x38],0xb6e1ab66
  41e6f3:	mov    edi,0x215ab55f
  41e6f8:	dec    ebx
  41e6f9:	inc    esp
  41e6fa:	mov    ecx,0xaac23f1
  41e6ff:	scas   al,BYTE PTR es:[edi]
  41e700:	push   0xffffffb3
  41e702:	lods   eax,DWORD PTR ds:[esi]
  41e703:	xor    eax,0xbbdc776e
  41e708:	push   0xde732e4d
  41e70d:	mov    gs,WORD PTR [eax]
  41e70f:	xchg   esp,eax
  41e710:	inc    ebx
  41e711:	in     al,dx
  41e712:	test   eax,edx
  41e714:	adc    eax,0x68
  41e717:	push   esp
  41e718:	loopne 0x41e723
  41e71a:	and    bh,al
  41e71c:	retf   0xbf12
  41e71f:	sub    esi,ecx
  41e721:	push   ebx
  41e722:	daa    
  41e723:	ret    
  41e724:	popa   
  41e725:	(bad)  
  41e726:	or     ebp,DWORD PTR [esi-0x11cad377]
  41e72c:	sti    
  41e72d:	popa   
  41e72e:	xlat   BYTE PTR ds:[ebx]
  41e72f:	dec    ebx
  41e730:	ds loope 0x41e797
  41e733:	push   ecx
  41e734:	call   FWORD PTR [ebx-0x36]
  41e737:	inc    eax
  41e738:	jg     0x41e6ca
  41e73a:	scas   eax,DWORD PTR es:[edi]
  41e73b:	xor    DWORD PTR [ebp+0xb69cf88],esp
  41e741:	sbb    al,0x7
  41e743:	ret    
  41e744:	push   ebp
  41e745:	scas   eax,DWORD PTR es:[edi]
  41e746:	jne    0x41e730
  41e748:	fstp   QWORD PTR [eax]
  41e74a:	fldenv [eax-0x49]
  41e74d:	call   0xd8086308
  41e752:	and    esp,esi
  41e754:	in     eax,0xaa
  41e756:	pop    ebx
  41e757:	push   ecx
  41e758:	mov    ch,0x8c
  41e75a:	add    dl,BYTE PTR [eax-0x63acb817]
  41e760:	stos   DWORD PTR es:[edi],eax
  41e761:	mov    cl,0x98
  41e763:	xchg   edx,eax
  41e764:	sub    al,0x89
  41e766:	mov    ah,0xec
  41e768:	inc    eax
  41e769:	popf   
  41e76a:	dec    ebx
  41e76b:	cs jmp 0x561e2f0e
  41e771:	cmp    BYTE PTR [eax],0x95
  41e774:	add    ah,BYTE PTR [edi]
  41e776:	retf   
  41e777:	mov    DWORD PTR [edx],ecx
  41e779:	cli    
  41e77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77b:	xlat   BYTE PTR ds:[ebx]
  41e77c:	mov    dl,0xb0
  41e77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e77f:	push   cs
  41e780:	data16 (bad) 
  41e782:	fcom   DWORD PTR [ebx]
  41e784:	pusha  
  41e785:	lahf   
  41e786:	cmp    edx,esi
  41e788:	dec    esp
  41e789:	stos   DWORD PTR es:[edi],eax
  41e78a:	fdivr  QWORD PTR [ecx+ebp*1]
  41e78d:	mov    ch,0xb7
  41e78f:	inc    ebx
  41e790:	jbe    0x41e78d
  41e792:	lea    edi,[eax]
  41e794:	jmp    0x296eeefc
  41e799:	fs in  eax,dx
  41e79b:	mov    edi,0xf4d26528
  41e7a0:	push   ds
  41e7a1:	loopne 0x41e79b
  41e7a3:	pop    ds
  41e7a4:	push   ebx
  41e7a5:	lods   al,BYTE PTR ds:[esi]
  41e7a6:	inc    esp
  41e7a7:	adc    al,BYTE PTR [eax+0x6385a642]
  41e7ad:	pop    ecx
  41e7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7af:	add    BYTE PTR [ebp+0x66],bl
  41e7b2:	cmp    eax,ebp
  41e7b4:	sti    
  41e7b5:	sub    al,0x48
  41e7b7:	or     al,0xb6
  41e7b9:	add    eax,0xa8b3e5e7
  41e7be:	cmp    esi,ebx
  41e7c0:	scas   al,BYTE PTR es:[edi]
  41e7c1:	push   0xc4c02f1b
  41e7c6:	icebp  
  41e7c7:	jecxz  0x41e795
  41e7c9:	mov    DWORD PTR [edi+eax*1-0x19],eax
  41e7cd:	xchg   BYTE PTR [edi],bl
  41e7cf:	test   dl,al
  41e7d1:	mov    eax,ds:0xbb271f39
  41e7d6:	icebp  
  41e7d7:	aad    0x72
  41e7d9:	pusha  
  41e7da:	dec    esp
  41e7db:	test   BYTE PTR [edi-0x47],bh
  41e7de:	adc    edx,DWORD PTR [eax]
  41e7e0:	ss inc esi
  41e7e2:	pushf  
  41e7e3:	pop    edx
  41e7e4:	inc    ebx
  41e7e5:	jecxz  0x41e802
  41e7e7:	aas    
  41e7e8:	add    eax,0x425bf23d
  41e7ed:	test   ecx,ebp
  41e7ef:	adc    edi,DWORD PTR [ecx+ebx*1]
  41e7f2:	fistp  WORD PTR [esi+eiz*4-0x216f4b27]
  41e7f9:	out    dx,al
  41e7fa:	rcl    DWORD PTR [esi*4-0x319c0c39],1
  41e801:	sbb    al,0xa
  41e803:	pop    ebx
  41e804:	add    edx,DWORD PTR [eax-0x45feb057]
  41e80a:	jp     0x41e82c
  41e80c:	neg    DWORD PTR [esp+eiz*8+0x4068eeed]
  41e813:	or     cl,BYTE PTR [esi-0x5f1efd24]
  41e819:	fnstcw WORD PTR ds:0x15dfd449
  41e81f:	fs test DWORD PTR cs:[edx],esi
  41e823:	mov    bl,0x53
  41e825:	das    
  41e826:	mul    cl
  41e828:	sub    BYTE PTR [ecx-0x597d2ed0],ah
  41e82e:	xor    DWORD PTR [ecx+ebx*2],esi
  41e831:	dec    ecx
  41e832:	data16 loop 0x41e8ae
  41e835:	dec    BYTE PTR [edi+0x36]
  41e838:	imul   esp,edx,0x829598ea
  41e83e:	add    edx,esi
  41e840:	sbb    eax,0x279d25d6
  41e845:	loope  0x41e8b3
  41e847:	push   edx
  41e848:	sub    cl,BYTE PTR [ebp-0x73]
  41e84b:	xor    DWORD PTR [ebx],0xffffff9b
  41e84e:	xchg   BYTE PTR ds:0xecf4c8ba,ah
  41e854:	daa    
  41e855:	sub    DWORD PTR es:[edi-0x4f794ced],0xd17e1b85
  41e860:	rcr    bl,cl
  41e862:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41e864:	pushf  
  41e865:	and    bl,BYTE PTR fs:[edx+0x34ac7635]
  41e86c:	xor    eax,0xeb9e00b8
  41e871:	out    dx,al
  41e872:	or     edx,DWORD PTR [esi+0x1b]
  41e875:	dec    ebp
  41e876:	lods   al,BYTE PTR ds:[esi]
  41e877:	jle    0x41e8f3
  41e879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e87a:	and    eax,0x53f67d3b
  41e87f:	xchg   DWORD PTR [ecx-0x64],ecx
  41e882:	mov    ecx,0x38053899
  41e887:	sub    bh,bh
  41e889:	fdivp  st(2),st
  41e88b:	and    al,BYTE PTR [esi+0x1e]
  41e88e:	outs   dx,DWORD PTR ds:[esi]
  41e88f:	ficom  WORD PTR [ebx+0x22e1ad62]
  41e895:	pop    ecx
  41e896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e898:	sub    BYTE PTR ds:0xe8043dde,0xb2
  41e89f:	push   edi
  41e8a0:	ss cdq 
  41e8a2:	sub    DWORD PTR [ebx],eax
  41e8a4:	fmul   st(4),st
  41e8a6:	test   DWORD PTR [ecx+0x5279166b],ecx
  41e8ac:	sbb    DWORD PTR ds:0x776cd0d3,edi
  41e8b2:	adc    eax,0xe1a73a63
  41e8b7:	neg    DWORD PTR [eax+ebx*4-0x243d87ad]
  41e8be:	(bad)  
  41e8bf:	mov    ebx,0x2d39ded5
  41e8c4:	fidiv  DWORD PTR [eax]
  41e8c6:	out    dx,al
  41e8c7:	inc    edx
  41e8c8:	adc    eax,0x490dae5b
  41e8cd:	and    BYTE PTR [edi],bh
  41e8cf:	jns    0x41e94f
  41e8d1:	mov    eax,ds:0x2425cdc6
  41e8d6:	jmp    0x7aee65d1
  41e8db:	or     dl,al
  41e8dd:	or     esi,DWORD PTR [edx]
  41e8df:	cld    
  41e8e0:	setae  BYTE PTR [ebx+0x17]
  41e8e4:	data16 scas al,BYTE PTR es:[edi]
  41e8e6:	xchg   esi,eax
  41e8e7:	cmp    dh,BYTE PTR [edx]
  41e8e9:	sub    BYTE PTR [ecx],cl
  41e8eb:	adc    ah,ch
  41e8ed:	mov    eax,ds:0x51fea96c
  41e8f2:	mov    al,ds:0xc4d54e94
  41e8f7:	ins    DWORD PTR es:[edi],dx
  41e8f8:	adc    DWORD PTR [edx],0x2e
  41e8fb:	js     0x41e8dc
  41e8fd:	je     0x41e8b9
  41e8ff:	nop
  41e900:	mov    ah,0x8e
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	and    eax,ebx
  41e910:	jp     0x41e8ff
  41e912:	xchg   ecx,eax
  41e913:	add    DWORD PTR fs:[eax],eax
  41e916:	clc    
  41e917:	add    al,0x0
  41e919:	add    BYTE PTR ds:0x64f4bffb,bh
  41e91f:	cdq    
  41e920:	clc    
  41e921:	dec    eax
  41e922:	xlat   BYTE PTR ds:[ebx]
  41e923:	mov    eax,0x65d10e1a
  41e928:	push   ds
  41e929:	retf   
  41e92a:	xchg   DWORD PTR [edi],esi
  41e92c:	shr    DWORD PTR [ebx],cl
  41e92e:	sub    DWORD PTR [eax+0x7a7b1751],ecx
  41e934:	mov    DWORD PTR [ebp+0x65],ebp
  41e937:	lea    esi,[edi+0x3c]
  41e93a:	pop    eax
  41e93b:	out    0x60,al
  41e93d:	and    DWORD PTR [eax],edx
  41e93f:	sahf   
  41e940:	xchg   edx,eax
  41e941:	pop    esp
  41e942:	jmp    0x1d31e56a
  41e947:	outs   dx,DWORD PTR ds:[esi]
  41e948:	mov    edx,0xdd0b3796
  41e94d:	sbb    ah,BYTE PTR [eax]
  41e94f:	xchg   ebx,eax
  41e950:	nop
  41e951:	pop    edi
  41e952:	push   ss
  41e953:	sbb    DWORD PTR [edx],ecx
  41e955:	lock dec ebp
  41e957:	test   eax,0x6ae1c0d0
  41e95c:	mov    ebp,0x6f54cba4
  41e961:	cmp    ecx,edx
  41e963:	sbb    eax,0x8bb6649a
  41e968:	and    BYTE PTR [edi],bl
  41e96a:	icebp  
  41e96b:	push   esi
  41e96c:	call   0x15274395
  41e971:	xchg   BYTE PTR [edi],dl
  41e973:	ja     0x41e9da
  41e975:	xchg   esi,eax
  41e976:	popf   
  41e977:	or     al,0xdb
  41e979:	mov    bl,0x26
  41e97b:	arpl   WORD PTR [edi],bp
  41e97d:	push   ebp
  41e97e:	xchg   ebp,eax
  41e97f:	(bad)  
  41e980:	jmp    0x5cf4c018
  41e985:	outs   dx,DWORD PTR ds:[esi]
  41e986:	fld    TBYTE PTR [esi]
  41e988:	(bad)  
  41e989:	jge    0x41e926
  41e98b:	and    al,0x90
  41e98d:	adc    cl,ch
  41e98f:	jp     0x41e9a2
  41e991:	or     BYTE PTR [ebx-0xd83dcef],bl
  41e997:	push   esp
  41e998:	inc    ebx
  41e999:	das    
  41e99a:	in     eax,0x79
  41e99c:	leave  
  41e99d:	xchg   DWORD PTR fs:[edx],eax
  41e9a0:	adc    al,0x9d
  41e9a2:	push   es
  41e9a3:	xchg   esp,eax
  41e9a4:	lods   eax,DWORD PTR ds:[esi]
  41e9a5:	xor    ch,al
  41e9a7:	sar    DWORD PTR [ecx-0x6ccbfea8],cl
  41e9ad:	(bad)  
  41e9ae:	out    0xda,eax
  41e9b0:	mov    al,ds:0x9542c41d
  41e9b5:	push   ebx
  41e9b6:	int    0x65
  41e9b8:	or     ebx,DWORD PTR [ebp-0x52cf9307]
  41e9be:	xor    al,0x26
  41e9c0:	aaa    
  41e9c1:	ret    
  41e9c2:	ret    0x6f7f
  41e9c5:	(bad)  
  41e9c6:	addr16 inc edi
  41e9c8:	outs   dx,BYTE PTR ds:[esi]
  41e9c9:	fistp  DWORD PTR [ebp+0x147f040f]
  41e9cf:	inc    edx
  41e9d0:	inc    edi
  41e9d1:	dec    esp
  41e9d2:	jns    0x41e9e6
  41e9d4:	(bad)  
  41e9d5:	aad    0xa6
  41e9d7:	push   edi
  41e9d8:	je     0x41ea03
  41e9da:	ret    
  41e9db:	xchg   esp,eax
  41e9dc:	(bad)  
  41e9dd:	jl     0x41ea08
  41e9df:	add    dl,al
  41e9e1:	retf   
  41e9e2:	jmp    0x91674f7
  41e9e7:	pop    ebp
  41e9e8:	lods   al,BYTE PTR ds:[esi]
  41e9e9:	mov    bh,0xf3
  41e9eb:	mov    bh,0xb3
  41e9ed:	fwait
  41e9ee:	scas   eax,DWORD PTR es:[edi]
  41e9ef:	jbe    0x41e9a6
  41e9f1:	jmp    0x41e985
  41e9f3:	test   al,0xe5
  41e9f5:	sahf   
  41e9f6:	(bad)  
  41e9f7:	imul   ebx,edx,0xffffff8a
  41e9fa:	out    0x40,al
  41e9fc:	(bad)  
  41e9fe:	mov    ds:0x9bb1e906,al
  41ea03:	xor    BYTE PTR [ebx-0xa],al
  41ea06:	lods   eax,DWORD PTR ds:[esi]
  41ea07:	das    
  41ea08:	mov    ah,0xec
  41ea0a:	out    dx,al
  41ea0b:	test   eax,0xb72019a6
  41ea10:	jo     0x41ea34
  41ea12:	imul   esp,DWORD PTR [ebx-0x26],0x9303ad8e
  41ea19:	daa    
  41ea1a:	adc    eax,0xb41577a3
  41ea1f:	loop   0x41ea03
  41ea21:	mov    edi,0xe1bb32c3
  41ea26:	mov    dl,0xff
  41ea28:	inc    esp
  41ea29:	imul   ebp,DWORD PTR ds:0x8e17adbc,0x65927cdc
  41ea33:	loopne 0x41e9de
  41ea35:	clc    
  41ea36:	mov    eax,0x75557a8c
  41ea3b:	fsubrp st(2),st
  41ea3d:	and    ah,BYTE PTR [eax]
  41ea3f:	popa   
  41ea40:	aaa    
  41ea41:	sbb    bh,al
  41ea43:	daa    
  41ea44:	dec    esp
  41ea45:	adc    ecx,DWORD PTR [eax-0x61]
  41ea48:	pusha  
  41ea49:	and    eax,0x6dcb019a
  41ea4e:	dec    eax
  41ea4f:	(bad)  
  41ea50:	xor    edx,DWORD PTR [eax+eiz*1+0x137027ff]
  41ea57:	loopne 0x41ea05
  41ea59:	and    eax,0xcbf07f03
  41ea5e:	repz xchg ecx,eax
  41ea60:	imul   esp,DWORD PTR [ecx],0xfffffff1
  41ea63:	add    al,0x76
  41ea65:	pop    ds
  41ea66:	test   DWORD PTR [esi+eax*8+0x4f],esp
  41ea6a:	ret    
  41ea6b:	ret    
  41ea6c:	sub    esi,ecx
  41ea6e:	adc    eax,0x2154f486
  41ea73:	js     0x41eaf3
  41ea75:	scas   al,BYTE PTR es:[edi]
  41ea76:	xor    ah,0x2c
  41ea79:	dec    eax
  41ea7a:	jb     0x41ea87
  41ea7c:	sub    eax,0x8f814a20
  41ea81:	in     al,0xae
  41ea83:	pusha  
  41ea84:	mov    ds:0x6017e561,eax
  41ea89:	hlt    
  41ea8a:	push   edi
  41ea8b:	in     al,dx
  41ea8c:	sub    al,cl
  41ea8e:	or     al,0x93
  41ea90:	jg     0x41ea14
  41ea92:	call   0x6db8c92e
  41ea97:	in     al,dx
  41ea98:	jns    0x41ea2f
  41ea9a:	aad    0x32
  41ea9c:	dec    eax
  41ea9d:	or     eax,0x140b45c9
  41eaa2:	mov    esi,0x8326df6f
  41eaa7:	call   0xc4e7:0xde224ed6
  41eaae:	jo     0x41ea97
  41eab0:	cdq    
  41eab1:	mov    DWORD PTR [ebp-0x60],ecx
  41eab4:	jae    0x41ea73
  41eab6:	and    ecx,edi
  41eab8:	in     al,dx
  41eab9:	add    al,0x4f
  41eabb:	sub    edx,0x7d
  41eabe:	adc    esp,DWORD PTR [ecx-0x4470f38a]
  41eac4:	fstp   TBYTE PTR [eax]
  41eac6:	push   cs
  41eac7:	pop    ecx
  41eac8:	les    ebp,FWORD PTR [edx]
  41eaca:	xchg   ecx,eax
  41eacb:	pop    ecx
  41eacc:	bound  ebx,QWORD PTR [esi-0x59]
  41eacf:	xchg   esp,eax
  41ead0:	retf   0x8e79
  41ead3:	das    
  41ead4:	cmp    ch,ah
  41ead6:	jg     0x41eac7
  41ead8:	push   esi
  41ead9:	je     0x41eae4
  41eadb:	add    DWORD PTR [ebp+eax*4-0x3bad0fe8],ebp
  41eae2:	sbb    al,0x20
  41eae4:	retf   0x739f
  41eae7:	in     al,dx
  41eae8:	pop    es
  41eae9:	pop    ecx
  41eaea:	sub    BYTE PTR [edx-0x31],dh
  41eaed:	mov    ah,0xfe
  41eaef:	mov    ebp,0xb8fe113c
  41eaf4:	inc    esi
  41eaf5:	jmp    0x50e6528
  41eafa:	ins    BYTE PTR es:[edi],dx
  41eafb:	mov    dh,0x88
  41eafd:	cmc    
  41eafe:	push   ds
  41eaff:	iret   
  41eb00:	test   eax,0x363db496
  41eb05:	dec    esi
  41eb06:	mov    esi,0xe6e918b2
  41eb0b:	sbb    dh,0x3
  41eb0e:	mov    fs,WORD PTR [ebx+0x54]
  41eb11:	jnp    0x41ead2
  41eb13:	xchg   ecx,edi
  41eb15:	jns    0x41eb96
  41eb17:	inc    edx
  41eb18:	push   esp
  41eb19:	fistp  WORD PTR [esi+0x65]
  41eb1c:	add    eax,0x608dadf1
  41eb21:	jecxz  0x41eb2c
  41eb23:	mov    edx,0xa5ab008d
  41eb28:	ins    BYTE PTR es:[edi],dx
  41eb29:	mov    bh,0x48
  41eb2b:	je     0x41eb76
  41eb2d:	ins    BYTE PTR es:[edi],dx
  41eb2e:	lods   al,BYTE PTR ds:[esi]
  41eb2f:	popf   
  41eb30:	pop    ds
  41eb31:	push   esi
  41eb32:	daa    
  41eb33:	cmc    
  41eb34:	call   0x2bbc:0xbac56f58
  41eb3b:	imul   edx,DWORD PTR [esi-0x7dd8f6f8],0x2f
  41eb42:	cdq    
  41eb43:	dec    ebx
  41eb44:	sahf   
  41eb45:	es jmp 0x613ec27e
  41eb4b:	aaa    
  41eb4c:	ja     0x41eb86
  41eb4e:	jo     0x41eb3b
  41eb50:	je     0x41eadf
  41eb52:	outs   dx,DWORD PTR ds:[esi]
  41eb53:	in     eax,dx
  41eb54:	in     eax,dx
  41eb55:	popw   es
  41eb57:	mov    ebx,0xa9a86d31
  41eb5c:	jge    0x41eb54
  41eb5e:	xchg   edx,ebx
  41eb60:	fist   DWORD PTR [edi+0x6c]
  41eb63:	in     eax,0x94
  41eb65:	outs   dx,BYTE PTR ds:[esi]
  41eb66:	and    DWORD PTR [eax],edx
  41eb68:	pop    edx
  41eb69:	fnstsw WORD PTR [esi+eax*8+0x19f8ca73]
  41eb70:	data16 fdivr QWORD PTR [edx+0x62ca606a]
  41eb77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb78:	add    DWORD PTR [ecx+0x17d4b162],ecx
  41eb7e:	mov    ah,0x4a
  41eb80:	mov    dh,0x8c
  41eb82:	sub    dl,BYTE PTR ds:0x6a53765
  41eb88:	aas    
  41eb89:	je     0x41eb5e
  41eb8b:	push   es
  41eb8c:	repnz push cx
  41eb8f:	rep lods al,BYTE PTR ds:[esi]
  41eb91:	mov    gs,WORD PTR [eax]
  41eb93:	pop    ebp
  41eb94:	push   edi
  41eb95:	imul   ecx,edx,0x9c15362c
  41eb9b:	into   
  41eb9c:	fmul   QWORD PTR [ecx+0x5732c7e7]
  41eba2:	ror    DWORD PTR [esp+esi*1+0x4b3eaeda],1
  41eba9:	dec    ecx
  41ebaa:	(bad)  
  41ebac:	aaa    
  41ebad:	push   ss
  41ebae:	mov    al,ds:0xa42134ad
  41ebb3:	scas   al,BYTE PTR es:[edi]
  41ebb4:	clc    
  41ebb5:	lahf   
  41ebb6:	and    eax,0xbcbd6025
  41ebbb:	sub    eax,DWORD PTR [edx]
  41ebbd:	imul   esp,DWORD PTR [esi+0x589b23ad],0xffffff8c
  41ebc4:	push   ds
  41ebc5:	ror    ch,1
  41ebc7:	stc    
  41ebc8:	dec    edx
  41ebc9:	push   es
  41ebca:	jnp    0x41ebcc
  41ebcc:	pop    edi
  41ebcd:	and    DWORD PTR [ebp-0x70822d60],0xffffffbc
  41ebd4:	adc    esp,DWORD PTR [eax+0x676e8b4f]
  41ebda:	push   esi
  41ebdb:	or     BYTE PTR ds:0xc166a885,bh
  41ebe1:	adc    edi,DWORD PTR [esi]
  41ebe3:	fsubr  QWORD PTR [ebx]
  41ebe5:	mov    eax,0x18571465
  41ebea:	cs pushf 
  41ebec:	cld    
  41ebed:	call   0x9daa2e8c
  41ebf2:	adc    BYTE PTR [ebp+0x6f],dh
  41ebf5:	jbe    0x41eb7a
  41ebf7:	mov    BYTE PTR [ebp-0x1219e4cd],ah
  41ebfd:	mov    ch,0xe
  41ebff:	test   DWORD PTR [edx-0x2d12c479],esp
  41ec05:	dec    esi
  41ec06:	call   0xfdacaf5a
  41ec0b:	jo     0x41ec51
  41ec0d:	aas    
  41ec0e:	or     DWORD PTR [eax-0x7880fce7],edi
  41ec14:	mov    ecx,0x62b2009e
  41ec19:	cmc    
  41ec1a:	ds inc esp
  41ec1c:	pop    ebp
  41ec1d:	pop    edi
  41ec1e:	outs   dx,BYTE PTR ds:[esi]
  41ec1f:	call   0x420dfd54
  41ec24:	arpl   sp,cx
  41ec26:	sub    ch,bl
  41ec28:	jmp    0xe0e2e9ed
  41ec2d:	test   al,0x78
  41ec2f:	retw   
  41ec31:	in     eax,dx
  41ec32:	sar    DWORD PTR [ecx],1
  41ec34:	or     eax,0x809a593c
  41ec39:	mov    dh,0x0
  41ec3b:	jmp    0xb39d:0x3efebce6
  41ec42:	ret    
  41ec43:	xchg   ebp,eax
  41ec44:	pusha  
  41ec45:	loop   0x41ec06
  41ec47:	mov    eax,0xaf890b2c
  41ec4c:	xchg   edi,eax
  41ec4d:	stc    
  41ec4e:	xor    DWORD PTR [ebp+0x27683179],0x72
  41ec55:	cmp    al,0x1e
  41ec57:	into   
  41ec58:	ror    BYTE PTR [ebx],0x1f
  41ec5b:	bound  ebp,QWORD PTR [eax+0x46f82906]
  41ec61:	mov    ah,dl
  41ec63:	ins    DWORD PTR es:[edi],dx
  41ec64:	(bad)  
  41ec65:	sub    BYTE PTR [edx],ch
  41ec67:	out    dx,eax
  41ec68:	xchg   ebp,eax
  41ec69:	push   0xe72667ce
  41ec6e:	jg     0x41ebf1
  41ec70:	push   eax
  41ec71:	mov    ecx,0x785d0094
  41ec76:	(bad)  
  41ec78:	pop    edi
  41ec79:	xor    al,0x49
  41ec7b:	adc    DWORD PTR ss:[edx+0x7b0bcfda],ebx
  41ec82:	stc    
  41ec83:	mov    al,0xd6
  41ec85:	pop    esp
  41ec86:	repnz mov ebx,0x34b467a5
  41ec8c:	and    eax,0x714378fe
  41ec91:	mov    cl,0x93
  41ec93:	imul   ecx,DWORD PTR ds:0xd30d7bba,0x4805ec1b
  41ec9d:	pop    esi
  41ec9e:	or     BYTE PTR [edx],cl
  41eca0:	sbb    ecx,edi
  41eca2:	mov    fs,WORD PTR [edx+0x40]
  41eca5:	dec    eax
  41eca6:	leave  
  41eca7:	out    0xb7,eax
  41eca9:	in     eax,0x84
  41ecab:	sub    bl,BYTE PTR [ebp-0x79]
  41ecae:	int3   
  41ecaf:	rol    BYTE PTR [ebp-0xf],0x8a
  41ecb3:	pop    ebx
  41ecb4:	xor    eax,DWORD PTR [eax+0x33f5331c]
  41ecba:	das    
  41ecbb:	hlt    
  41ecbc:	inc    esi
  41ecbd:	sbb    eax,0x108bb7b2
  41ecc2:	shl    ebp,0xc3
  41ecc5:	adc    BYTE PTR [ecx-0x52],0xfc
  41ecc9:	xchg   ebx,eax
  41ecca:	ja     0x41ed37
  41eccc:	push   cs
  41eccd:	sub    al,0x92
  41eccf:	mov    ah,dh
  41ecd1:	fst    QWORD PTR [eax+0x63]
  41ecd4:	cmp    bl,BYTE PTR [edx-0x37e90569]
  41ecda:	pop    ebp
  41ecdb:	sbb    edi,edi
  41ecdd:	in     eax,0xf1
  41ecdf:	pop    ss
  41ece0:	add    BYTE PTR [ecx],0x7a
  41ece3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece4:	and    al,0x3c
  41ece6:	sar    BYTE PTR [ebp-0x4f4ad511],cl
  41ecec:	sub    eax,0xdad88da3
  41ecf1:	psrad  mm0,mm1
  41ecf4:	ror    ebp,0x1b
  41ecf7:	mov    dl,0x30
  41ecf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecfa:	and    ebx,eax
  41ecfc:	addr16 mov bl,0xa6
  41ecff:	test   eax,0xfe25ed27
  41ed04:	jl     0x41ed4a
  41ed06:	mov    eax,ds:0x7b18a4d8
  41ed0b:	in     al,0x1c
  41ed0d:	pop    esi
  41ed0e:	pcmpeqw mm4,mm3
  41ed11:	fwait
  41ed12:	pusha  
  41ed13:	popf   
  41ed14:	mov    ds:0x19f9e9c6,al
  41ed19:	fcmovnbe st,st(7)
  41ed1b:	xor    bh,dh
  41ed1d:	xor    al,0x34
  41ed1f:	call   0x2de2d848
  41ed24:	pop    ebx
  41ed25:	push   es
  41ed26:	and    bh,BYTE PTR [edx-0x157d8ca7]
  41ed2c:	mov    ecx,0xd3fbdf41
  41ed31:	stc    
  41ed32:	stos   DWORD PTR es:[edi],eax
  41ed33:	push   ebx
  41ed34:	lea    edx,[edi-0xe]
  41ed37:	ret    0x2e0e
  41ed3a:	push   ds
  41ed3b:	dec    esp
  41ed3c:	test   eax,eax
  41ed3e:	std    
  41ed3f:	imul   ebx,DWORD PTR [eax+0x5d],0x8efe4f00
  41ed46:	sub    ah,BYTE PTR [ebp+eax*1-0x1e]
  41ed4a:	nop
  41ed4b:	mov    bh,0x7c
  41ed4d:	fsubr  DWORD PTR [edx+0x413ae4b4]
  41ed53:	pop    edx
  41ed54:	mov    dh,0x7e
  41ed56:	sub    BYTE PTR [ecx+ecx*2],ch
  41ed59:	in     al,0xff
  41ed5b:	mov    ebp,0x7b1c3031
  41ed60:	idiv   ebp
  41ed62:	call   0xff0e:0xa0779467
  41ed69:	push   esp
  41ed6a:	sub    DWORD PTR [ebp-0x30],esi
  41ed6d:	xchg   ebx,eax
  41ed6e:	outs   dx,DWORD PTR ds:[esi]
  41ed6f:	xor    al,0xc1
  41ed71:	push   edi
  41ed72:	sub    BYTE PTR [ebx-0x6],bh
  41ed75:	loop   0x41ed98
  41ed77:	repz cmp BYTE PTR [edx],0x73
  41ed7b:	pop    edx
  41ed7c:	stos   BYTE PTR es:[edi],al
  41ed7d:	(bad)  
  41ed7e:	sub    edx,DWORD PTR [ecx-0xd]
  41ed81:	inc    ebp
  41ed82:	push   esi
  41ed83:	test   DWORD PTR [ebp+0x7117cca1],ebp
  41ed89:	cdq    
  41ed8a:	add    edi,esp
  41ed8c:	in     eax,dx
  41ed8d:	and    BYTE PTR [edx],ah
  41ed8f:	xchg   edi,eax
  41ed90:	add    esi,esi
  41ed92:	ja     0x41edf2
  41ed94:	out    dx,al
  41ed95:	pushf  
  41ed96:	and    al,0x16
  41ed98:	mov    cl,0xa3
  41ed9a:	scas   eax,DWORD PTR es:[edi]
  41ed9b:	sar    ecx,1
  41ed9d:	retf   0x5f9
  41eda0:	pushf  
  41eda1:	call   0x178c62f8
  41eda6:	xor    dl,BYTE PTR [edi+eiz*2-0x444a5f0e]
  41edad:	hlt    
  41edae:	aaa    
  41edaf:	(bad)  
  41edb0:	ds pop ss
  41edb2:	xchg   DWORD PTR [ebx-0x7e739f64],ebp
  41edb8:	dec    eax
  41edb9:	outs   dx,BYTE PTR ds:[esi]
  41edba:	ficom  DWORD PTR [ecx]
  41edbc:	push   cs
  41edbd:	pop    es
  41edbe:	fbld   TBYTE PTR [esi]
  41edc0:	sub    al,0x98
  41edc2:	xor    al,0xa7
  41edc4:	push   esp
  41edc5:	les    ebx,FWORD PTR [esi]
  41edc7:	xchg   al,cl
  41edc9:	mov    ebx,0xc73e3b99
  41edce:	(bad)  [esi]
  41edd0:	popa   
  41edd1:	pop    es
  41edd2:	mov    ds:0xdfca05d8,al
  41edd7:	jg     0x41ede4
  41edd9:	rcl    DWORD PTR [edi+0x63388e92],0x69
  41ede0:	mov    ds:0xc225494f,eax
  41ede5:	xor    eax,0xb41ab353
  41edea:	lahf   
  41edeb:	or     ebx,DWORD PTR [edi+ecx*4+0x1]
  41edef:	data16 mov dl,0xff
  41edf2:	daa    
  41edf3:	dec    edx
  41edf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf5:	retf   0x6d2b
  41edf8:	pop    eax
  41edf9:	retf   
  41edfa:	dec    edi
  41edfb:	retf   0xd100
  41edfe:	stos   DWORD PTR es:[edi],eax
  41edff:	nop
  41ee00:	mov    bh,0xae
  41ee02:	inc    ebp
  41ee03:	leave  
  41ee04:	loopne 0x41eda9
  41ee06:	clc    
  41ee07:	or     eax,0x6e041d06
  41ee0c:	xor    BYTE PTR [esi],al
  41ee0e:	mov    bh,BYTE PTR [edi+0x7c]
  41ee11:	or     edx,DWORD PTR [edx+0x51]
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	pop    ecx
  41ee1f:	fisubr DWORD PTR [ebx+eax*4+0x16989]
  41ee26:	clc    
  41ee27:	add    al,0x0
  41ee29:	add    BYTE PTR [edx+0x6d450ae4],dl
  41ee2f:	xchg   ebp,eax
  41ee30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee31:	enter  0x100f,0xfc
  41ee35:	mov    WORD PTR [ebp+0x68e46ff3],?
  41ee3b:	(bad)  
  41ee3c:	pminsw mm3,QWORD PTR [ebx]
  41ee3f:	sar    bh,1
  41ee41:	sar    eax,1
  41ee43:	lea    ebx,[edi+ecx*1+0x597e0d66]
  41ee4a:	ret    0x1792
  41ee4d:	(bad)  
  41ee4e:	and    DWORD PTR [eax+eiz*1+0xfa80339],esp
  41ee55:	hlt    
  41ee56:	adc    al,0xea
  41ee58:	cmp    ecx,0x37e3e06b
  41ee5e:	in     al,dx
  41ee5f:	in     al,0xa4
  41ee61:	icebp  
  41ee62:	push   0xffffffd7
  41ee64:	(bad)  
  41ee65:	das    
  41ee66:	jmp    0x41ee1d
  41ee68:	call   0x5b6e:0xb824afd6
  41ee6f:	add    al,0x6
  41ee71:	int3   
  41ee72:	mov    ecx,0xd3569502
  41ee77:	into   
  41ee78:	cmp    ch,BYTE PTR [esi]
  41ee7a:	add    DWORD PTR [edi],eax
  41ee7c:	mov    dh,cl
  41ee7e:	xor    dl,dh
  41ee80:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41ee82:	xchg   edx,eax
  41ee83:	cli    
  41ee84:	cmp    al,0xc3
  41ee86:	inc    ecx
  41ee87:	and    BYTE PTR [ebx-0x1e],al
  41ee8a:	fstp   DWORD PTR [eax-0x1f8768f9]
  41ee90:	out    0x3c,eax
  41ee92:	rcr    ebp,0x85
  41ee95:	pusha  
  41ee96:	loopne 0x41ee3b
  41ee98:	mov    ds:0x760aa57,al
  41ee9d:	inc    ebx
  41ee9e:	leave  
  41ee9f:	xchg   ebx,eax
  41eea0:	adc    DWORD PTR [ebp+0x24106d11],esp
  41eea6:	call   0x18a3:0x100db087
  41eead:	xchg   edi,eax
  41eeae:	ret    
  41eeaf:	fs xlat BYTE PTR ds:[ebx]
  41eeb2:	sbb    BYTE PTR [esi],bh
  41eeb4:	pushf  
  41eeb5:	stos   DWORD PTR es:[edi],eax
  41eeb6:	sub    al,0xd5
  41eeb8:	inc    edx
  41eeb9:	out    dx,al
  41eeba:	stos   BYTE PTR es:[edi],al
  41eebb:	mov    al,ds:0x58763b75
  41eec0:	dec    eax
  41eec1:	scas   eax,DWORD PTR es:[edi]
  41eec2:	(bad)  
  41eec3:	mov    ecx,0x8d996de1
  41eec8:	fwait
  41eec9:	inc    ecx
  41eeca:	inc    eax
  41eecb:	fild   QWORD PTR [ebx-0x5c77e55a]
  41eed1:	fisubr DWORD PTR [eax]
  41eed3:	inc    esi
  41eed4:	inc    ebx
  41eed5:	or     al,0xc9
  41eed7:	xor    DWORD PTR [edi+0x6429c57f],esi
  41eedd:	pop    edi
  41eede:	push   0x22
  41eee0:	inc    eax
  41eee1:	push   cs
  41eee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee3:	mov    al,ds:0x5628e3c6
  41eee8:	push   edi
  41eee9:	push   ebp
  41eeea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeeb:	stos   DWORD PTR es:[edi],eax
  41eeec:	retf   
  41eeed:	pop    ebx
  41eeee:	push   esp
  41eeef:	xchg   DWORD PTR [esi-0x2bc5c241],esi
  41eef5:	aam    0xbc
  41eef7:	jns    0x41ef52
  41eef9:	loope  0x41eeda
  41eefb:	ja     0x41ee86
  41eefd:	mov    edx,0xe9e1cfe
  41ef02:	pop    ds
  41ef03:	jb     0x41ef21
  41ef05:	mov    ebx,edx
  41ef07:	adc    al,0x9b
  41ef09:	imul   esi,DWORD PTR [edx+ebp*1-0x66],0x16
  41ef0e:	in     al,0x10
  41ef10:	inc    ebp
  41ef11:	sub    eax,0x6a91b0f6
  41ef16:	inc    eax
  41ef17:	inc    esp
  41ef18:	repnz fsubr st,st(0)
  41ef1b:	sbb    eax,0xbb1b913a
  41ef20:	mov    esi,0x80953a18
  41ef25:	pop    ss
  41ef26:	xlat   BYTE PTR ds:[ebx]
  41ef27:	loopne 0x41ef4d
  41ef29:	cwde   
  41ef2a:	add    al,0xb5
  41ef2c:	js     0x41eeec
  41ef2e:	mov    edx,0xa35b4c76
  41ef33:	mov    ds,WORD PTR [edx]
  41ef35:	sbb    BYTE PTR [ebx+0xeaf7a15],ch
  41ef3b:	or     al,0x50
  41ef3d:	sar    BYTE PTR [ebx+0x35febbe],cl
  41ef43:	or     eax,0x8737bf52
  41ef48:	fist   WORD PTR [esi]
  41ef4a:	inc    edi
  41ef4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef4c:	js     0x41ef63
  41ef4e:	xlat   BYTE PTR ds:[ebx]
  41ef4f:	mov    edi,0x9f8097ea
  41ef54:	mov    dh,0x6c
  41ef56:	xchg   ebp,eax
  41ef57:	xchg   ecx,eax
  41ef58:	cmc    
  41ef59:	ds jmp 0xc25b39c4
  41ef5f:	sbb    dl,BYTE PTR [ebp+0x4d6a49cd]
  41ef65:	pop    eax
  41ef66:	or     eax,0x24e1cefa
  41ef6b:	test   al,0x36
  41ef6d:	test   eax,0xf5bdd9b7
  41ef72:	out    0xd3,eax
  41ef74:	xchg   esp,eax
  41ef75:	push   edi
  41ef76:	sub    bh,BYTE PTR [edi]
  41ef78:	cmp    eax,DWORD PTR [edi+0x19]
  41ef7b:	and    eax,ebx
  41ef7d:	in     eax,dx
  41ef7e:	fs mov edx,0x85bdd07f
  41ef84:	dec    ecx
  41ef85:	(bad)  
  41ef86:	or     eax,edi
  41ef88:	inc    edi
  41ef89:	(bad)  
  41ef8a:	(bad)  
  41ef8b:	repnz mov ds:0x6007f5f1,eax
  41ef91:	test   eax,0xecb71d22
  41ef96:	fsubr  DWORD PTR [edx+0x71c02a18]
  41ef9c:	inc    eax
  41ef9d:	mov    bh,0xd7
  41ef9f:	pusha  
  41efa0:	or     BYTE PTR [ecx],bl
  41efa2:	mov    edi,0x66a61b95
  41efa7:	jge    0x41efa8
  41efa9:	mov    ecx,0x622d4139
  41efae:	or     eax,DWORD PTR [esi]
  41efb0:	(bad)  
  41efb1:	cmp    ecx,DWORD PTR [ebx+ebx*8+0x6b3fe3fb]
  41efb8:	imul   eax,DWORD PTR ds:0xf89d2c2b,0xdab419f4
  41efc2:	call   0x6a053c1
  41efc7:	(bad)  
  41efc8:	rol    DWORD PTR [esi],1
  41efca:	scas   eax,DWORD PTR es:[edi]
  41efcb:	jno    0x41effc
  41efcd:	add    al,0xb9
  41efcf:	mov    dl,0xec
  41efd1:	fldenv [edx]
  41efd3:	sbb    al,0xdf
  41efd5:	mov    ds:0xd962dbf3,al
  41efda:	sbb    al,0x9a
  41efdc:	xor    ah,bh
  41efde:	test   al,0xc1
  41efe0:	cmc    
  41efe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe2:	inc    ebx
  41efe3:	pop    es
  41efe4:	pop    es
  41efe5:	sbb    DWORD PTR ds:0x8749a342,esp
  41efeb:	inc    ecx
  41efec:	int3   
  41efed:	push   cs
  41efee:	lock int 0xf8
  41eff1:	fst    DWORD PTR [eax+edi*2-0x24f79f7f]
  41eff8:	dec    BYTE PTR [eax+0x3532b18d]
  41effe:	les    eax,FWORD PTR [edx+0x7f489094]
  41f004:	iret   
  41f005:	ja     0x41f041
  41f007:	jl     0x41efdc
  41f009:	mov    bl,0x72
  41f00b:	ror    dh,cl
  41f00d:	out    dx,eax
  41f00e:	pop    ss
  41f00f:	js     0x41ef93
  41f011:	(bad)  [edi]
  41f013:	and    edx,DWORD PTR [eax*8+0x1412a51]
  41f01a:	sub    BYTE PTR [ebx-0x6d],al
  41f01d:	retf   
  41f01e:	push   edx
  41f01f:	sub    al,dl
  41f021:	(bad)  
  41f022:	xor    ebp,DWORD PTR [esi+eax*8]
  41f025:	sub    eax,0xd5272807
  41f02a:	scas   eax,DWORD PTR es:[edi]
  41f02b:	or     esp,esp
  41f02d:	push   esp
  41f02e:	or     al,0x7
  41f030:	test   DWORD PTR [esi-0x75],0xcfafdda9
  41f037:	jmp    0x46d591f
  41f03c:	mov    bl,BYTE PTR [edx-0x74adc53]
  41f042:	lahf   
  41f043:	push   es
  41f044:	retf   0x9e5c
  41f047:	or     al,BYTE PTR [esi+0x55c1b382]
  41f04d:	pop    esp
  41f04e:	dec    eax
  41f04f:	ins    BYTE PTR es:[edi],dx
  41f050:	sub    edx,DWORD PTR [ecx]
  41f052:	dec    esi
  41f053:	mov    esp,0x423d6e55
  41f058:	mov    ebx,0x1d1c0230
  41f05d:	nop
  41f05e:	sbb    edx,DWORD PTR [eax-0x633715e5]
  41f064:	dec    esi
  41f065:	mov    dh,0xc6
  41f067:	sub    al,0x64
  41f069:	or     esi,DWORD PTR [eax+0x68dd7cc9]
  41f06f:	icebp  
  41f070:	add    eax,0x35c091a2
  41f075:	loop   0x41f040
  41f077:	cmc    
  41f078:	mov    bh,0x2
  41f07a:	ror    ch,cl
  41f07c:	fwait
  41f07d:	mov    es,WORD PTR [edi-0x5aacb248]
  41f083:	ret    
  41f084:	loop   0x41f0f2
  41f086:	adc    al,0x58
  41f088:	mov    eax,ds:0x8838a435
  41f08d:	bound  ebx,QWORD PTR [esi-0x23]
  41f090:	mov    DWORD PTR [eax],ebx
  41f092:	int3   
  41f093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f094:	jmp    0xd51ab321
  41f099:	jecxz  0x41f0a8
  41f09b:	cli    
  41f09c:	(bad)  
  41f09d:	out    0xc1,al
  41f09f:	les    edi,FWORD PTR [ebx+0x2913fab7]
  41f0a5:	xchg   BYTE PTR [ebp-0x24],bh
  41f0a8:	sub    al,0x1b
  41f0ab:	loopne 0x41f085
  41f0ad:	mov    esi,0x4915a406
  41f0b2:	sahf   
  41f0b3:	je     0x41f12f
  41f0b5:	(bad)  
  41f0b6:	mov    cl,0x63
  41f0b8:	mov    edx,0xe50c859a
  41f0bd:	xchg   ebp,eax
  41f0be:	mov    bh,0x2a
  41f0c0:	aas    
  41f0c1:	fimul  WORD PTR ds:0xcf013e2e
  41f0c7:	dec    esp
  41f0c8:	fdivr  DWORD PTR [edi-0x71]
  41f0cb:	stos   BYTE PTR es:[edi],al
  41f0cc:	cmp    dl,BYTE PTR [esi]
  41f0ce:	sub    dl,BYTE PTR ds:[ecx+ebx*2-0x78]
  41f0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d4:	into   
  41f0d5:	test   BYTE PTR [ecx+0x66d484ae],dl
  41f0db:	cmp    eax,0xd1b13d46
  41f0e0:	daa    
  41f0e1:	je     0x41f148
  41f0e3:	add    BYTE PTR [ebp-0x64],dh
  41f0e6:	dec    esp
  41f0e7:	jae    0x41f095
  41f0e9:	xchg   esp,eax
  41f0ea:	icebp  
  41f0eb:	ds mov cl,0xce
  41f0ee:	(bad)  
  41f0ef:	into   
  41f0f0:	or     eax,0x4aca6ac
  41f0f5:	fst    DWORD PTR [edx+0x47]
  41f0f8:	jnp    0x41f0e1
  41f0fa:	mov    DWORD PTR [ebx],0xfe86d6b5
  41f100:	enter  0xd5a9,0xd6
  41f104:	sbb    eax,0xd6a0e502
  41f109:	or     cl,BYTE PTR ds:0x160260fc
  41f10f:	call   0xba23f8b9
  41f114:	(bad)  
  41f115:	out    dx,eax
  41f116:	jle    0x41f114
  41f118:	pop    ecx
  41f119:	push   es
  41f11a:	iret   
  41f11b:	add    DWORD PTR [edi+0x55770575],ecx
  41f121:	inc    esp
  41f122:	adc    BYTE PTR [ebx+ebx*8+0x27284345],bh
  41f129:	mov    ecx,0x5b2daaea
  41f12e:	aad    0x80
  41f130:	fisub  DWORD PTR cs:[edi-0x257c434]
  41f137:	mov    cs,WORD PTR [edi-0x7aa4996b]
  41f13d:	mov    edi,0xd4ad3236
  41f142:	mov    dh,0x6c
  41f144:	mov    DWORD PTR [esi+ebx*1],esi
  41f147:	pop    ss
  41f148:	cmc    
  41f149:	pop    ss
  41f14a:	cmp    edi,DWORD PTR [eax+0x28]
  41f14d:	jo     0x41f14a
  41f14f:	push   esp
  41f150:	lea    ecx,[ebp+eiz*1-0x67]
  41f154:	ror    edi,1
  41f156:	xchg   esi,eax
  41f157:	push   ss
  41f158:	in     eax,dx
  41f159:	and    dl,cl
  41f15b:	xchg   al,bl
  41f15d:	pop    ds
  41f15e:	in     al,dx
  41f15f:	int    0x0
  41f161:	(bad)  
  41f162:	loopne 0x41f150
  41f164:	aas    
  41f165:	cmc    
  41f166:	(bad)  
  41f167:	jmp    0x41f11d
  41f169:	es call 0xaeba:0x74a84f94
  41f171:	add    al,0x21
  41f173:	sti    
  41f174:	gs (bad) 
  41f176:	pop    es
  41f177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f178:	rcr    ebp,1
  41f17a:	push   0x78
  41f17c:	dec    eax
  41f17d:	fadd   DWORD PTR [ecx]
  41f17f:	ins    BYTE PTR es:[edi],dx
  41f180:	neg    DWORD PTR [ebp+0x45a637d]
  41f186:	sub    al,0x74
  41f188:	test   al,0x79
  41f18a:	push   edx
  41f18b:	add    ah,BYTE PTR [ebp+0x5e]
  41f18e:	xchg   esi,eax
  41f18f:	in     eax,dx
  41f190:	mov    ebp,0x4186c8f4
  41f195:	adc    ah,BYTE PTR ds:[edx+0x7e]
  41f199:	adc    BYTE PTR [edi-0x2c],0xab
  41f19d:	xor    bl,BYTE PTR [ecx-0x61]
  41f1a0:	fwait
  41f1a1:	popf   
  41f1a2:	aad    0xb4
  41f1a4:	sbb    edx,DWORD PTR [esi]
  41f1a6:	mov    edx,0x1883fbe9
  41f1ab:	pop    ds
  41f1ac:	dec    ebx
  41f1ad:	adc    DWORD PTR [ebx+0x2cb3658b],0x49
  41f1b4:	repz sub DWORD PTR [edi+0x19],edi
  41f1b8:	dec    esp
  41f1b9:	ficomp WORD PTR [edi]
  41f1bb:	pop    esi
  41f1bc:	xchg   ecx,eax
  41f1bd:	sbb    BYTE PTR [edi],cl
  41f1bf:	sar    DWORD PTR [edx-0x17],1
  41f1c2:	xor    ecx,DWORD PTR [eax-0xc4bf6ec]
  41f1c8:	fdivr  QWORD PTR [ebp-0xe14c514]
  41f1ce:	mov    bh,0x63
  41f1d0:	retf   
  41f1d1:	(bad)  
  41f1d2:	lahf   
  41f1d3:	jl     0x41f209
  41f1d5:	adc    eax,0x7fb80f2f
  41f1da:	pop    ds
  41f1db:	mov    esi,DWORD PTR [ebx]
  41f1dd:	ret    
  41f1de:	adc    DWORD PTR [ebp+0x143b465f],edi
  41f1e4:	in     eax,dx
  41f1e5:	push   ebp
  41f1e6:	xchg   DWORD PTR [ebx],edi
  41f1e8:	jbe    0x41f257
  41f1ea:	fs scas eax,DWORD PTR es:[edi]
  41f1ec:	dec    esp
  41f1ed:	xor    eax,0xfcb35597
  41f1f2:	xlat   BYTE PTR ds:[ebx]
  41f1f3:	inc    eax
  41f1f4:	call   0xcee3e3b0
  41f1f9:	inc    ebx
  41f1fa:	scas   eax,DWORD PTR es:[edi]
  41f1fb:	inc    eax
  41f1fc:	jl     0x41f27d
  41f1fe:	loopne 0x41f1f8
  41f200:	mov    esi,0x97b8a02
  41f205:	outs   dx,DWORD PTR ds:[esi]
  41f206:	pop    ebp
  41f207:	mov    esi,0x574896a6
  41f20c:	mov    ecx,0x9380bd73
  41f211:	jne    0x41f21d
  41f213:	ins    DWORD PTR es:[edi],dx
  41f214:	and    bh,ch
  41f216:	xchg   esi,eax
  41f217:	dec    edx
  41f218:	push   0x8872651f
  41f21d:	dec    esp
  41f21e:	lea    esi,[edx-0x37]
  41f221:	pop    esi
  41f222:	mov    al,ds:0xe7ec5cb6
  41f227:	aam    0xfb
  41f229:	inc    esp
  41f22a:	gs add al,0x60
  41f22d:	dec    esi
  41f22e:	repz jns 0x41f243
  41f231:	nop
  41f232:	lea    ebx,[ebx+0x7c79b10f]
  41f238:	cmp    DWORD PTR [eax+eax*4],0xffffffcb
  41f23c:	add    BYTE PTR [edx-0x599c1c96],cl
  41f242:	fstp   QWORD PTR [edi-0x4a142aa]
  41f248:	lea    edx,fs:[edi-0x5d]
  41f24c:	inc    edx
  41f24d:	(bad)  
  41f24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f24f:	das    
  41f250:	pushf  
  41f251:	and    eax,0xe5b54a8a
  41f256:	int    0x6d
  41f258:	and    DWORD PTR [ebp-0x75fbbad8],eax
  41f25e:	aad    0x40
  41f260:	xor    BYTE PTR [edx],cl
  41f262:	push   es
  41f263:	and    al,0x8a
  41f265:	sub    al,0xc
  41f267:	inc    edi
  41f268:	fs xchg esi,eax
  41f26a:	repnz std 
  41f26c:	sbb    eax,0xf0aad1e9
  41f271:	in     eax,dx
  41f272:	cwde   
  41f273:	push   edx
  41f274:	pop    edx
  41f275:	fwait
  41f276:	sbb    al,0xd7
  41f278:	and    bl,BYTE PTR [ebx+0x15]
  41f27b:	rcl    BYTE PTR [edi-0x7c],0x94
  41f27f:	dec    esi
  41f280:	shr    BYTE PTR [ebp-0x7aa29b5d],cl
  41f286:	jae    0x41f2ff
  41f288:	mov    DWORD PTR es:[ecx+edi*8],0x640d5f46
  41f290:	pusha  
  41f291:	loope  0x41f310
  41f293:	int    0x85
  41f295:	mov    esi,0xc99a81ac
  41f29a:	mov    edi,0xa106fb17
  41f29f:	int    0x75
  41f2a1:	or     BYTE PTR [ebp-0x611a3ca2],dl
  41f2a7:	out    0x4a,eax
  41f2a9:	jp     0x41f2cc
  41f2ab:	lahf   
  41f2ac:	xchg   BYTE PTR [edi],cl
  41f2ae:	mov    eax,ds:0x70a05517
  41f2b3:	stos   BYTE PTR es:[edi],al
  41f2b4:	ret    
  41f2b5:	leave  
  41f2b6:	inc    ecx
  41f2b7:	das    
  41f2b8:	mov    ebx,0x53cb1a16
  41f2bd:	outs   dx,BYTE PTR ds:[esi]
  41f2bf:	repz les edi,FWORD PTR [ecx+0x47]
  41f2c3:	ret    0x58ea
  41f2c6:	xchg   BYTE PTR [edi],ch
  41f2c8:	out    0xfd,al
  41f2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2cb:	jae    0x41f33d
  41f2cd:	fisubr DWORD PTR [esp+ecx*4]
  41f2d0:	mov    ch,0xf2
  41f2d2:	and    ch,BYTE PTR [ebx+0x2e]
  41f2d5:	sub    al,0xf
  41f2d7:	inc    edx
  41f2d8:	adc    DWORD PTR [ebx],ebp
  41f2da:	and    eax,0x237e193c
  41f2df:	outs   dx,BYTE PTR ds:[esi]
  41f2e0:	dec    eax
  41f2e1:	add    eax,0xca8702c3
  41f2e6:	addr16 rcr dh,cl
  41f2e9:	inc    ebx
  41f2ea:	or     DWORD PTR [ebx+0x74],ecx
  41f2ed:	sub    ebx,ecx
  41f2ef:	mov    edi,0xb523c355
  41f2f4:	out    dx,al
  41f2f5:	push   edi
  41f2f6:	ss inc esp
  41f2f8:	mov    ah,0xd6
  41f2fa:	shl    DWORD PTR [ebp-0x457e072d],cl
  41f300:	lods   al,BYTE PTR ds:[esi]
  41f301:	je     0x41f381
  41f303:	sub    ch,BYTE PTR [esi+0x78]
  41f306:	imul   ecx,DWORD PTR [eax],0x51
  41f309:	add    ah,dh
  41f30b:	adc    al,0xd2
  41f30d:	inc    ebx
  41f30e:	ss push ebp
  41f311:	pop    esi
  41f312:	or     bh,bl
  41f314:	pop    eax
  41f315:	bndldx (bad),[edx+ebp*2]
  41f319:	out    0x2,eax
  41f31b:	push   esp
  41f31c:	jbe    0x41f307
  41f31e:	ffree  st(6)
  41f320:	push   es
  41f321:	je     0x41f34e
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	xor    cl,0x77
  41f330:	je     0x41f306
  41f332:	sub    DWORD PTR [esi+0x1],0x4f800
  41f339:	add    BYTE PTR [ecx-0x440aeb3c],ch
  41f33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f340:	lea    edx,[ebx+0x62f5860d]
  41f346:	pushf  
  41f347:	inc    ecx
  41f348:	jno    0x41f2f1
  41f34a:	mov    ?,esi
  41f34c:	xor    edi,esp
  41f34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34f:	mov    cl,bl
  41f351:	jle    0x41f375
  41f353:	pop    esp
  41f354:	mov    dh,0x6e
  41f356:	ss jb  0x41f308
  41f359:	and    BYTE PTR [edi+eax*2-0x5180c645],bl
  41f360:	outs   dx,BYTE PTR ds:[esi]
  41f361:	push   esi
  41f362:	hlt    
  41f363:	lock jne 0x41f2f4
  41f366:	inc    ebp
  41f367:	and    al,0x9d
  41f369:	mov    BYTE PTR [edi-0x72297dc3],al
  41f36f:	push   ebp
  41f370:	and    dl,0xac
  41f373:	mov    ch,0x6f
  41f375:	adc    DWORD PTR [eax-0x3e34c9f3],ecx
  41f37b:	lea    edi,fs:[ebx+0x1d]
  41f37f:	ror    BYTE PTR [esp+eiz*4+0x5a],1
  41f383:	fwait
  41f384:	jbe    0x41f3e3
  41f386:	jmp    0x9087e3ab
  41f38b:	push   es
  41f38c:	cld    
  41f38d:	lods   al,BYTE PTR ds:[esi]
  41f38e:	cdq    
  41f38f:	jle    0x41f3e6
  41f391:	std    
  41f392:	mov    ds,WORD PTR [edi+edx*2+0x4]
  41f396:	inc    ebp
  41f397:	leave  
  41f398:	rcr    DWORD PTR [esi-0x34436084],cl
  41f39e:	daa    
  41f39f:	aad    0xc4
  41f3a1:	xchg   edi,eax
  41f3a2:	pop    ebx
  41f3a3:	sbb    BYTE PTR [edx-0x6f],bh
  41f3a6:	sub    al,bl
  41f3a8:	or     ah,BYTE PTR [ebp+0x2323d977]
  41f3ae:	daa    
  41f3af:	out    0xfb,eax
  41f3b1:	cmp    ch,BYTE PTR [ebp-0x525d4d78]
  41f3b7:	cmp    al,0x4e
  41f3b9:	mov    al,ds:0x7250a8f0
  41f3be:	xor    DWORD PTR ds:0x63a5cab4,eax
  41f3c4:	add    dl,BYTE PTR [edi+0x18]
  41f3c7:	or     BYTE PTR [edx+0x3856d98a],0x9
  41f3ce:	sbb    al,0xb4
  41f3d0:	leave  
  41f3d1:	and    bl,BYTE PTR ds:0x96c6d995
  41f3d7:	mov    esi,0x64a4cf1e
  41f3dc:	paddsb mm0,mm6
  41f3df:	mov    cl,0x4e
  41f3e1:	loopne 0x41f374
  41f3e3:	stos   BYTE PTR es:[edi],al
  41f3e4:	mov    esp,0x639f8764
  41f3e9:	cmp    edi,DWORD PTR [edx]
  41f3eb:	aad    0x1e
  41f3ed:	(bad)  
  41f3ee:	sub    eax,0x5cd6f3b9
  41f3f3:	dec    ecx
  41f3f4:	nop
  41f3f5:	(bad)  
  41f3f6:	leave  
  41f3f7:	push   ss
  41f3f8:	adc    DWORD PTR [eax+0x2acba262],edx
  41f3fe:	push   ebx
  41f3ff:	clc    
  41f400:	ss sub eax,edx
  41f403:	adc    ebp,DWORD PTR ds:0x73fb3b6b
  41f409:	xchg   bl,dl
  41f40b:	cmp    BYTE PTR [esi+0x20],al
  41f40e:	pop    ebx
  41f40f:	mov    ebp,0x16089271
  41f414:	pop    ss
  41f415:	div    BYTE PTR [ecx]
  41f417:	and    cl,BYTE PTR [edi+eax*1+0x70]
  41f41b:	sub    al,BYTE PTR [ebx-0x8]
  41f41e:	test   DWORD PTR [ecx],esp
  41f420:	aad    0x10
  41f422:	retf   0x52a8
  41f425:	add    DWORD PTR [ebx],edi
  41f427:	xchg   edi,eax
  41f428:	cmp    ecx,DWORD PTR [ebx+0x74c8975d]
  41f42e:	or     eax,0x1d943702
  41f433:	cmp    ecx,DWORD PTR [esp+edi*2-0xe8045ec]
  41f43a:	into   
  41f43b:	ficomp WORD PTR [ecx+0x25f10660]
  41f441:	cmp    al,0x29
  41f443:	outs   dx,BYTE PTR ds:[esi]
  41f444:	aaa    
  41f445:	test   eax,0xc85a6962
  41f44a:	pop    es
  41f44b:	bound  eax,QWORD PTR [eax+0x73]
  41f44e:	dec    eax
  41f44f:	and    ebp,DWORD PTR fs:[edx+0x67866e78]
  41f456:	pop    esp
  41f457:	rol    al,0x87
  41f45a:	inc    ebp
  41f45b:	dec    ebp
  41f45c:	dec    ebp
  41f45d:	push   ds
  41f45e:	addr16 popa 
  41f460:	add    cl,BYTE PTR [ecx-0x59959470]
  41f466:	jae    0x41f4da
  41f468:	jle    0x41f463
  41f46a:	test   eax,0x80295814
  41f46f:	repz inc esp
  41f471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f472:	into   
  41f473:	and    DWORD PTR [ecx+0x2e],edi
  41f476:	pop    edi
  41f477:	push   es
  41f478:	xchg   edi,eax
  41f479:	jle    0x41f41e
  41f47b:	ja     0x41f4b3
  41f47d:	mov    eax,0x808ba5c8
  41f482:	dec    esi
  41f483:	mov    ecx,0xd82af2cf
  41f488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f489:	add    eax,edi
  41f48b:	cs cli 
  41f48d:	out    0x29,al
  41f48f:	ss mov edi,0x59c3c34d
  41f495:	jae    0x41f4f7
  41f497:	inc    ecx
  41f498:	sti    
  41f499:	sub    al,BYTE PTR [ebp+0x36]
  41f49c:	mov    al,0x3a
  41f49e:	fild   QWORD PTR [ebp+0x18]
  41f4a1:	data16 lahf 
  41f4a3:	xchg   ebx,eax
  41f4a4:	je     0x41f467
  41f4a6:	int    0xde
  41f4a8:	cmp    bl,BYTE PTR [ebx+0x371d8a93]
  41f4ae:	out    0x13,al
  41f4b0:	test   ebx,esi
  41f4b2:	(bad)  
  41f4b3:	clc    
  41f4b4:	outs   dx,DWORD PTR ds:[esi]
  41f4b5:	cmp    BYTE PTR [eax-0x1489c081],ah
  41f4bb:	and    eax,DWORD PTR [ebx-0x74]
  41f4be:	jl     0x41f46e
  41f4c0:	pop    eax
  41f4c1:	shr    BYTE PTR [ebx-0x7],0x96
  41f4c5:	jne    0x41f4af
  41f4c7:	fmul   QWORD PTR [edx]
  41f4c9:	fimul  DWORD PTR [edx+ecx*1]
  41f4cc:	mov    dl,0x95
  41f4ce:	mov    cl,0x7a
  41f4d0:	mov    WORD PTR [edx],es
  41f4d2:	mov    ebx,0x788401ba
  41f4d7:	cmp    bl,ch
  41f4d9:	nop
  41f4da:	mov    edx,0xb4fd9f69
  41f4df:	sahf   
  41f4e0:	xchg   ecx,eax
  41f4e1:	sti    
  41f4e2:	pop    edx
  41f4e3:	je     0x41f54c
  41f4e5:	mov    eax,ds:0xcb4810a9
  41f4ea:	jmp    0x4a37bb55
  41f4ef:	mov    ds:0xc327bb69,eax
  41f4f4:	scas   al,BYTE PTR es:[edi]
  41f4f5:	in     al,dx
  41f4f6:	mov    BYTE PTR [edi],dh
  41f4f8:	retf   0x6552
  41f4fb:	pusha  
  41f4fc:	xchg   ecx,eax
  41f4fd:	addr16 cwde 
  41f4ff:	retf   0x18de
  41f502:	mov    ebx,esi
  41f504:	popf   
  41f505:	adc    BYTE PTR [ebp+0x3dc2727f],dh
  41f50b:	and    al,0x58
  41f50d:	or     edi,DWORD PTR [ebp+0x7d65be85]
  41f513:	inc    edx
  41f514:	xchg   ebx,eax
  41f515:	in     al,0xcb
  41f517:	dec    edi
  41f518:	add    edx,DWORD PTR [eax+0x2f08f351]
  41f51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51f:	imul   esp,DWORD PTR [ebx-0x29c1883b],0x7e
  41f526:	mov    gs,edx
  41f528:	xchg   esi,eax
  41f529:	(bad)  
  41f52a:	mov    cl,0xe8
  41f52c:	ret    0x2667
  41f52f:	out    0x45,al
  41f531:	(bad)  
  41f532:	imul   edx,ecx,0xaf9d0609
  41f538:	push   esi
  41f539:	stos   DWORD PTR es:[edi],eax
  41f53a:	cmp    eax,0xbadbbcd5
  41f53f:	xchg   esi,eax
  41f540:	adc    ebx,esp
  41f542:	jne    0x41f5b0
  41f544:	sbb    bh,cl
  41f546:	aad    0x44
  41f548:	bound  ecx,QWORD PTR [ebp-0x59682cea]
  41f54e:	cmp    esi,esp
  41f550:	xchg   edx,eax
  41f551:	clc    
  41f552:	xor    al,0xf1
  41f554:	call   DWORD PTR ds:0x55abd966
  41f55a:	mov    ch,0xe9
  41f55c:	dec    eax
  41f55d:	adc    BYTE PTR [edx+0x47f60884],al
  41f563:	into   
  41f564:	xchg   ebx,eax
  41f565:	dec    edx
  41f566:	test   al,0xbd
  41f568:	fstp   st(4)
  41f56a:	adc    dl,BYTE PTR [esi-0x74]
  41f56d:	pop    esi
  41f56e:	(bad)  
  41f56f:	mov    edx,0x766889ca
  41f574:	loope  0x41f5cc
  41f576:	mov    dh,0x8a
  41f578:	js     0x41f5a5
  41f57a:	pusha  
  41f57b:	dec    ebx
  41f57c:	test   al,0xb4
  41f57e:	test   DWORD PTR [ecx-0x363c4a4f],ebx
  41f584:	sbb    DWORD PTR [edx],eax
  41f586:	mov    edi,ebp
  41f588:	bound  edx,QWORD PTR [ebx+0x5d]
  41f58b:	sub    al,0x7e
  41f58d:	sub    ebp,DWORD PTR [edx]
  41f58f:	mov    ebx,0x4694dba2
  41f594:	add    al,0xc1
  41f596:	push   es
  41f597:	push   eax
  41f598:	add    DWORD PTR [ebp+eax*4+0x8],0xffffffec
  41f59d:	test   al,0x84
  41f59f:	adc    BYTE PTR [esi+0x104046cd],dl
  41f5a5:	xor    eax,0xb94fb716
  41f5aa:	xchg   edx,eax
  41f5ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ac:	push   eax
  41f5ad:	lds    esp,FWORD PTR [ecx-0x23a094d2]
  41f5b3:	push   DWORD PTR [edi+0x427516e1]
  41f5b9:	add    ch,BYTE PTR [esi+eax*4-0x75]
  41f5bd:	daa    
  41f5be:	xchg   edi,eax
  41f5bf:	mov    eax,ds:0xbd4a2fba
  41f5c4:	and    eax,0x6fa18201
  41f5c9:	push   0x5487d2f7
  41f5ce:	aas    
  41f5cf:	test   al,0x57
  41f5d1:	in     al,0x1e
  41f5d3:	xlat   BYTE PTR ds:[ebx]
  41f5d4:	and    al,0x72
  41f5d6:	sbb    dh,0x1a
  41f5d9:	jp     0x41f5c9
  41f5db:	adc    al,0x93
  41f5dd:	stc    
  41f5de:	int3   
  41f5df:	std    
  41f5e0:	push   ds
  41f5e1:	inc    edx
  41f5e2:	xor    DWORD PTR [eax-0x41],edx
  41f5e5:	sbb    bl,BYTE PTR [ebp+0x7]
  41f5e8:	out    0x89,al
  41f5ea:	pushf  
  41f5eb:	inc    edi
  41f5ec:	pop    es
  41f5ed:	fwait
  41f5ee:	mov    esp,DWORD PTR [ecx+0x1767a5ac]
  41f5f4:	add    al,BYTE PTR [esi]
  41f5f6:	cmp    al,0xad
  41f5f8:	jnp    0x41f5e8
  41f5fa:	int    0xea
  41f5fc:	mov    edx,esi
  41f5fe:	adc    ecx,DWORD PTR [edi+0x25c3faec]
  41f604:	loopne 0x41f655
  41f606:	xchg   esp,eax
  41f607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f608:	leave  
  41f609:	jb     0x41f5a4
  41f60b:	je     0x41f5bf
  41f60d:	mov    edx,0x2be38588
  41f612:	mov    dh,BYTE PTR [esi]
  41f614:	popf   
  41f615:	adc    esi,DWORD PTR [ebp-0x1c32738c]
  41f61b:	sbb    al,0x2f
  41f61d:	je     0x41f670
  41f61f:	jmp    0xc33e7662
  41f624:	mov    al,0x75
  41f626:	push   esp
  41f627:	popf   
  41f628:	add    esi,DWORD PTR [ebx+0x64]
  41f62b:	jecxz  0x41f660
  41f62d:	cmp    al,BYTE PTR [edi+0x1ba6b3cc]
  41f633:	and    eax,0x41002222
  41f638:	inc    esp
  41f639:	xchg   ebp,eax
  41f63a:	inc    edi
  41f63b:	ja     0x41f639
  41f63d:	sbb    bh,BYTE PTR [eax+eiz*2+0x34]
  41f641:	mov    ss:0x78e6ab3c,eax
  41f647:	inc    ecx
  41f648:	fidivr DWORD PTR [ecx-0x44d8b11c]
  41f64e:	in     ax,dx
  41f650:	jmp    0x41f5db
  41f652:	imul   DWORD PTR [ebx+0xc23fd95]
  41f658:	aam    0xce
  41f65a:	push   eax
  41f65b:	retf   0x7659
  41f65e:	mov    bh,0x1d
  41f660:	push   ebx
  41f661:	pop    esi
  41f662:	pushf  
  41f663:	jmp    0x44fa:0xaa794ba3
  41f66a:	mov    esp,0x769a81a2
  41f66f:	push   ebp
  41f670:	pop    ecx
  41f671:	aam    0xa2
  41f673:	fisubr DWORD PTR [edx-0x31]
  41f676:	mov    edx,0xa2819b35
  41f67b:	adc    eax,DWORD PTR [ecx-0x1c9a9a70]
  41f681:	pusha  
  41f682:	jecxz  0x41f693
  41f684:	popf   
  41f685:	sbb    al,0x90
  41f687:	jp     0x41f628
  41f689:	jle    0x41f61d
  41f68b:	popa   
  41f68c:	shr    DWORD PTR [ebp+0x7865284a],0xdc
  41f693:	push   ecx
  41f694:	and    dl,cl
  41f696:	inc    ebp
  41f697:	jns    0x41f710
  41f699:	and    bh,BYTE PTR [esi-0x74bf7652]
  41f69f:	jno    0x41f6f8
  41f6a1:	popa   
  41f6a2:	ficom  DWORD PTR [eax-0x29]
  41f6a5:	mov    ds:0xec512db8,eax
  41f6aa:	shl    DWORD PTR [esi+edi*2-0x70465138],1
  41f6b1:	repz xchg edi,eax
  41f6b3:	xor    esp,esi
  41f6b5:	retf   
  41f6b6:	sbb    DWORD PTR [edx+0x26],edx
  41f6b9:	stos   BYTE PTR es:[edi],al
  41f6ba:	ins    BYTE PTR es:[edi],dx
  41f6bb:	inc    ebx
  41f6bc:	xchg   edx,eax
  41f6bd:	inc    edi
  41f6be:	jp     0x41f6e0
  41f6c0:	push   esp
  41f6c1:	xor    BYTE PTR [ebp+0x73f5214],cl
  41f6c7:	inc    eax
  41f6c8:	in     eax,0x6f
  41f6ca:	mov    ch,0x1b
  41f6cc:	ds jle 0x41f73f
  41f6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6d0:	fimul  DWORD PTR [esi]
  41f6d2:	sbb    BYTE PTR [ebp-0x46],bl
  41f6d5:	dec    esp
  41f6d6:	xchg   ecx,eax
  41f6d7:	retf   
  41f6d8:	add    eax,0xf8186f6e
  41f6dd:	sub    edx,DWORD PTR [esi+eiz*1]
  41f6e0:	sbb    esi,DWORD PTR [edi-0x3c]
  41f6e3:	jns    0x41f74b
  41f6e5:	jp     0x41f6a4
  41f6e7:	addr16 adc ch,dh
  41f6ea:	outs   dx,BYTE PTR ds:[esi]
  41f6eb:	jnp    0x41f753
  41f6ed:	xchg   ebx,edi
  41f6ef:	lds    edi,FWORD PTR [esi-0x73]
  41f6f2:	hlt    
  41f6f3:	cli    
  41f6f4:	(bad)  
  41f6f5:	sahf   
  41f6f6:	into   
  41f6f7:	fadd   DWORD PTR [esi+ecx*4]
  41f6fa:	mov    ah,0xe
  41f6fc:	leave  
  41f6fd:	xor    DWORD PTR [edi+0x29],ebp
  41f700:	scas   al,BYTE PTR es:[edi]
  41f701:	sub    ecx,DWORD PTR [ebx-0x7e]
  41f704:	mov    ds:0x24567ad6,al
  41f709:	std    
  41f70a:	xor    al,0x7
  41f70c:	xchg   esi,eax
  41f70d:	mov    eax,ds:0x1bfecf1d
  41f712:	cmp    eax,0x5f0c0a4a
  41f717:	pop    esp
  41f718:	xchg   esi,eax
  41f719:	sub    al,0x2d
  41f71b:	test   BYTE PTR [edx+0x7f],bh
  41f71e:	mov    cl,0xd1
  41f720:	bound  ecx,QWORD PTR [esi-0x5fcb4f26]
  41f726:	das    
  41f727:	xchg   esp,eax
  41f728:	movhps QWORD PTR [ecx-0x98bb62d],xmm4
  41f72f:	mov    esi,DWORD PTR [ebx+esi*8+0x58]
  41f733:	inc    ecx
  41f734:	(bad)  
  41f736:	das    
  41f737:	jne    0x41f762
  41f739:	xchg   ebp,eax
  41f73a:	inc    esi
  41f73b:	inc    ecx
  41f73c:	fwait
  41f73d:	ja     0x41f74b
  41f73f:	cli    
  41f740:	xor    eax,0x5b222e52
  41f745:	mov    ebp,0xf475cc48
  41f74a:	ins    BYTE PTR es:[edi],dx
  41f74b:	ret    0x120d
  41f74e:	push   0x1d
  41f750:	into   
  41f751:	cli    
  41f752:	fdiv   QWORD PTR [ebx+0x1d9b72a4]
  41f758:	ret    
  41f759:	xchg   edx,eax
  41f75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75b:	and    eax,0xba1efc37
  41f760:	sbb    dh,ah
  41f762:	sbb    DWORD PTR [ecx+0x551ef526],eax
  41f768:	aaa    
  41f769:	inc    esp
  41f76a:	xchg   DWORD PTR [edi-0x1f],ebp
  41f76d:	loope  0x41f6f4
  41f76f:	pop    ebp
  41f770:	sub    BYTE PTR [ecx],bh
  41f772:	int    0x42
  41f774:	cmc    
  41f775:	in     eax,dx
  41f776:	jnp    0x41f72b
  41f778:	jbe    0x41f70d
  41f77a:	dec    edx
  41f77b:	xchg   ebx,eax
  41f77c:	out    dx,eax
  41f77d:	inc    ecx
  41f77e:	pusha  
  41f77f:	sti    
  41f780:	or     al,0xb5
  41f782:	out    dx,al
  41f783:	iret   
  41f784:	or     al,0x11
  41f786:	cli    
  41f787:	or     edi,DWORD PTR [esi]
  41f789:	cmp    ah,BYTE PTR [ebp+0xa]
  41f78c:	push   0x471efd8b
  41f791:	test   DWORD PTR [ecx+edx*2+0x2437f2b8],0xad3dbb89
  41f79c:	and    BYTE PTR [ecx],al
  41f79e:	sbb    dl,BYTE PTR [edx+0x232b847]
  41f7a4:	js     0x41f74f
  41f7a6:	scas   al,BYTE PTR es:[edi]
  41f7a7:	pop    edx
  41f7a8:	adc    DWORD PTR [edi+ebp*4],ebp
  41f7ab:	dec    eax
  41f7ac:	sub    BYTE PTR [esi],0xc8
  41f7af:	mov    eax,ds:0xb73bcd9e
  41f7b4:	out    dx,al
  41f7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b6:	imul   BYTE PTR gs:[edi]
  41f7b9:	add    eax,0x83d7c84d
  41f7be:	out    dx,eax
  41f7bf:	loope  0x41f77e
  41f7c1:	(bad)  
  41f7c2:	push   cs
  41f7c3:	adc    BYTE PTR [esp+ebx*2],al
  41f7c6:	and    al,0x90
  41f7c8:	cmc    
  41f7c9:	mov    al,ds:0xe4bb6afc
  41f7ce:	mov    cs,WORD PTR [eax]
  41f7d0:	mov    eax,0xd14bcb1a
  41f7d5:	pop    esi
  41f7d6:	fnstsw WORD PTR [edi-0x61e5805a]
  41f7dc:	ss dec ebx
  41f7de:	xlat   BYTE PTR ds:[ebx]
  41f7df:	mov    edx,DWORD PTR [ecx+esi*8]
  41f7e2:	dec    ecx
  41f7e3:	push   ss
  41f7e4:	in     al,0xc9
  41f7e6:	adc    DWORD PTR [edi+eiz*1],edx
  41f7e9:	sti    
  41f7ea:	push   esi
  41f7eb:	jns    0x41f7f4
  41f7ed:	pop    ebx
  41f7ee:	add    al,0x25
  41f7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f1:	jl     0x41f7a9
  41f7f3:	mov    ds:0xc76dadc,al
  41f7f8:	xor    BYTE PTR [ebx-0x6e472647],bh
  41f7fe:	ret    
  41f7ff:	dec    esp
  41f800:	pusha  
  41f801:	sbb    DWORD PTR [edi+0x15a61cc0],ebp
  41f807:	pop    eax
  41f808:	ins    DWORD PTR es:[edi],dx
  41f809:	dec    eax
  41f80a:	lods   eax,DWORD PTR ds:[esi]
  41f80b:	cmp    BYTE PTR [edi+0x6358f718],al
  41f811:	or     ebx,DWORD PTR [edx-0x6b4eb769]
  41f817:	neg    BYTE PTR ds:0xf555634
  41f81d:	(bad)  
  41f81e:	mov    ch,0xd8
  41f820:	enter  0xf772,0x1c
  41f824:	push   cs
  41f825:	outs   dx,DWORD PTR ds:[esi]
  41f826:	test   DWORD PTR [ecx-0x25],ebx
  41f829:	cdq    
  41f82a:	push   es
  41f82b:	jnp    0x41f7cd
  41f82d:	mov    edx,ebp
  41f82f:	into   
  41f830:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f83f:	mov    dh,0x8f
  41f841:	and    al,0x79
  41f843:	jae    0x41f846
  41f845:	add    al,bh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [eax],al
  41f84b:	inc    edx
  41f84c:	dec    esp
  41f84d:	jmp    0x41f7e1
  41f84f:	(bad)  
  41f850:	jp     0x41f7e1
  41f852:	mov    eax,0xb745d11f
  41f857:	jno    0x41f86b
  41f859:	shr    BYTE PTR [esp+ebx*8-0x1764c9f5],0x3e
  41f861:	sti    
  41f862:	out    dx,eax
  41f863:	jbe    0x41f804
  41f865:	daa    
  41f866:	outs   dx,DWORD PTR ds:[esi]
  41f867:	sbb    DWORD PTR [eax+eax*4+0x49],ebx
  41f86b:	in     eax,0x81
  41f86d:	arpl   WORD PTR [edi+0x308e4f9d],bp
  41f873:	test   DWORD PTR [edx-0x22],esi
  41f876:	in     eax,dx
  41f877:	sub    DWORD PTR [esi+0x61],edx
  41f87a:	ins    BYTE PTR es:[edi],dx
  41f87b:	(bad)  [esi+0x64]
  41f87e:	xchg   ecx,eax
  41f87f:	loop   0x41f864
  41f881:	push   ecx
  41f882:	adc    DWORD PTR [ecx],eax
  41f884:	ins    DWORD PTR es:[edi],dx
  41f885:	sbb    BYTE PTR [edi-0x1beac494],bh
  41f88b:	mov    esi,0x8aafa8be
  41f890:	sbb    ecx,0x219c093c
  41f896:	mov    BYTE PTR [ebx+ebx*4+0x7a],cl
  41f89a:	aad    0x3
  41f89c:	or     DWORD PTR [ebx],edx
  41f89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f89f:	or     dl,0x73
  41f8a2:	jnp    0x41f8d1
  41f8a4:	imul   esp,DWORD PTR [ecx],0x7fe91082
  41f8aa:	std    
  41f8ab:	jmp    0xe3e02207
  41f8b0:	in     eax,dx
  41f8b1:	leave  
  41f8b2:	mov    ch,0xa4
  41f8b4:	mov    eax,ds:0xd239a23c
  41f8b9:	fild   QWORD PTR [eax]
  41f8bb:	mov    edi,0x8c381793
  41f8c0:	push   cs
  41f8c1:	cld    
  41f8c2:	sub    BYTE PTR [edx-0x53],al
  41f8c5:	adc    BYTE PTR [eax+0x2b],bh
  41f8c8:	cwde   
  41f8c9:	and    ebx,edi
  41f8cb:	loopne 0x41f870
  41f8cd:	shl    BYTE PTR [ebx+esi*1],0x8c
  41f8d1:	movzx  ebp,WORD PTR [esi+0x7a]
  41f8d5:	ds ret 0x908
  41f8d9:	repz mov ch,0x37
  41f8dc:	jb     0x41f897
  41f8de:	push   ebx
  41f8df:	retf   
  41f8e0:	add    al,BYTE PTR [esi+0x49e3b0c3]
  41f8e6:	nop
  41f8e7:	xchg   esp,eax
  41f8e8:	push   0xffffffc7
  41f8ea:	or     al,0xbc
  41f8ec:	nop
  41f8ed:	mov    esp,0x15d2e0c7
  41f8f2:	sbb    al,0x44
  41f8f4:	enter  0x25ce,0x27
  41f8f8:	sub    BYTE PTR [esi+0x2d],dl
  41f8fb:	fwait
  41f8fc:	dec    esi
  41f8fd:	hlt    
  41f8fe:	call   0xc449a1b8
  41f903:	outs   dx,BYTE PTR ds:[esi]
  41f904:	cdq    
  41f905:	iret   
  41f906:	cld    
  41f907:	xchg   ebp,esp
  41f909:	pop    ds
  41f90a:	(bad)  
  41f90b:	ss test BYTE PTR cs:[ebx],ah
  41f90f:	mov    BYTE PTR ds:0xcf1e2f5e,bl
  41f915:	mov    dh,0x9
  41f917:	inc    ebp
  41f918:	jg     0x41f8f1
  41f91a:	sbb    ecx,DWORD PTR fs:[ecx]
  41f91d:	adc    bh,BYTE PTR [eax+0x149cddc]
  41f923:	mov    dh,0x8a
  41f925:	mov    edi,0x5f64cc43
  41f92a:	ins    DWORD PTR es:[edi],dx
  41f92b:	xchg   ecx,eax
  41f92c:	outs   dx,DWORD PTR ds:[esi]
  41f92d:	fs call 0xe5a31300
  41f933:	(bad)  
  41f934:	in     al,0x2d
  41f936:	mov    ebp,ebx
  41f938:	fwait
  41f939:	cwde   
  41f93a:	push   ds
  41f93b:	sub    DWORD PTR [edi-0x3a],ecx
  41f93e:	popf   
  41f93f:	popf   
  41f940:	pushf  
  41f941:	jbe    0x41f930
  41f943:	xor    edi,DWORD PTR [ebx+0x768795ee]
  41f949:	add    eax,0x8906a58b
  41f94e:	push   ecx
  41f94f:	enter  0x6060,0x37
  41f953:	jg     0x41f937
  41f955:	ficomp WORD PTR [ebp+0x49]
  41f958:	leave  
  41f959:	gs pop es
  41f95b:	stc    
  41f95c:	lods   eax,DWORD PTR ds:[esi]
  41f95d:	inc    ebp
  41f95e:	mov    esp,0x3887b28d
  41f963:	xor    BYTE PTR [ebp+esi*2+0x2de44fd6],bh
  41f96a:	cmp    esi,DWORD PTR [ebp+ebx*2+0x216713b6]
  41f971:	sbb    eax,0xb0e79c2c
  41f976:	rcl    BYTE PTR [edi-0x4c93c6e7],cl
  41f97c:	in     eax,0xea
  41f97e:	arpl   WORD PTR fs:[eax+0x28],ax
  41f982:	aaa    
  41f983:	(bad)  
  41f985:	xor    ch,BYTE PTR [ecx]
  41f987:	int3   
  41f988:	mov    ch,0x3e
  41f98a:	pop    ebx
  41f98b:	jmp    0x3b8c:0xea1e43da
  41f992:	xchg   esp,eax
  41f993:	inc    ebx
  41f994:	lods   al,BYTE PTR ds:[esi]
  41f995:	or     esp,DWORD PTR [ecx-0x53b15732]
  41f99b:	fcom   DWORD PTR [esi-0x8f5f0f9]
  41f9a1:	mov    dh,0x73
  41f9a3:	pop    ebp
  41f9a4:	nop
  41f9a5:	ins    DWORD PTR es:[edi],dx
  41f9a6:	inc    esp
  41f9a7:	rol    BYTE PTR [eax-0x5353205d],1
  41f9ad:	in     al,dx
  41f9ae:	inc    DWORD PTR [ebp-0x57e50d0f]
  41f9b4:	push   0xffffff91
  41f9b6:	repnz in eax,0x31
  41f9b9:	mov    ch,0x66
  41f9bb:	adc    eax,0xf1d24c4d
  41f9c0:	ret    0x7977
  41f9c3:	xchg   BYTE PTR [ebp-0x53],bl
  41f9c6:	and    eax,0x2e574874
  41f9cb:	cdq    
  41f9cc:	cld    
  41f9cd:	sub    BYTE PTR [edi],0xdb
  41f9d0:	(bad)  
  41f9d1:	ficom  DWORD PTR [edx]
  41f9d3:	xchg   edi,eax
  41f9d4:	out    0x1b,al
  41f9d6:	into   
  41f9d7:	add    BYTE PTR [ebp+ecx*2+0x7d],bh
  41f9db:	cmp    esp,DWORD PTR [ebp-0x42d2b50d]
  41f9e1:	idiv   DWORD PTR [ebx+edx*2+0x6d2690a2]
  41f9e8:	sub    eax,0x567e42a0
  41f9ed:	stos   BYTE PTR es:[edi],al
  41f9ee:	sbb    esp,ebp
  41f9f0:	or     ch,BYTE PTR [eax-0x17]
  41f9f3:	scas   eax,DWORD PTR es:[edi]
  41f9f4:	enter  0x2686,0x6c
  41f9f8:	jo     0x41f99c
  41f9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9fb:	push   0x909a9721
  41fa00:	xchg   edx,eax
  41fa01:	inc    edi
  41fa02:	fstp   TBYTE PTR [ecx+0xed73729]
  41fa08:	arpl   WORD PTR [edx+0x178fce30],dx
  41fa0e:	adc    eax,0x4488f713
  41fa13:	(bad)  
  41fa14:	mov    cl,0x39
  41fa16:	jnp    0x41fa16
  41fa18:	mov    ebx,DWORD PTR gs:[esi+ebp*1+0x61a02442]
  41fa20:	out    dx,al
  41fa21:	push   edi
  41fa22:	in     al,dx
  41fa23:	mov    dh,0xd2
  41fa25:	jmp    0x5308:0xf25cce48
  41fa2c:	sbb    BYTE PTR [ecx],dh
  41fa2e:	shr    BYTE PTR gs:[ecx+0x36e1794c],0x9e
  41fa36:	mov    al,0x91
  41fa38:	fistp  QWORD PTR [edi+0x79]
  41fa3b:	(bad)  
  41fa3c:	sar    BYTE PTR [eax],1
  41fa3e:	ja     0x41fa36
  41fa40:	adc    BYTE PTR [esi+0x21757db1],al
  41fa46:	aad    0x54
  41fa48:	in     al,dx
  41fa49:	sbb    ch,0x6d
  41fa4c:	ins    BYTE PTR es:[edi],dx
  41fa4d:	xchg   edx,eax
  41fa4e:	mov    eax,0x4d6ad0e0
  41fa53:	xchg   esp,eax
  41fa54:	ja     0x41fa40
  41fa56:	js     0x41fa86
  41fa58:	inc    esi
  41fa59:	sub    BYTE PTR [edx-0x1c648ad0],ch
  41fa5f:	xlat   BYTE PTR ds:[ebx]
  41fa60:	data16 js 0x41fa08
  41fa63:	in     al,dx
  41fa64:	or     BYTE PTR [ebx],bl
  41fa66:	jbe    0x41fa43
  41fa68:	std    
  41fa69:	or     eax,0x8a376873
  41fa6e:	fstp   DWORD PTR [edx-0x11193b6f]
  41fa74:	push   esp
  41fa75:	jnp    0x41fab1
  41fa77:	mov    ch,0xf6
  41fa79:	push   ds
  41fa7a:	push   edx
  41fa7b:	addr16 sbb al,0xca
  41fa7e:	mov    esp,DWORD PTR [ebp+0x6a]
  41fa81:	sub    al,0x1c
  41fa83:	mov    eax,ds:0x5d2fc8b9
  41fa88:	call   0x6dd6:0xd55b62e3
  41fa8f:	scas   eax,DWORD PTR es:[edi]
  41fa90:	(bad)  
  41fa91:	call   0xf2c57a18
  41fa96:	adc    ebp,DWORD PTR [eax-0x44]
  41fa99:	ror    BYTE PTR [edi-0x2a7d01ff],1
  41fa9f:	xchg   DWORD PTR [edx+0x4b],esp
  41faa2:	mov    dl,0x5b
  41faa4:	test   eax,0x60c32343
  41faa9:	pop    esi
  41faaa:	mov    gs,edx
  41faac:	stos   BYTE PTR es:[edi],al
  41faad:	xor    ecx,DWORD PTR [ecx-0x40]
  41fab0:	cld    
  41fab1:	int3   
  41fab2:	inc    ecx
  41fab3:	sahf   
  41fab4:	mov    BYTE PTR [ecx+0xe8c1f99],dl
  41faba:	adc    al,0x62
  41fabc:	sbb    eax,0x366ccfb9
  41fac1:	imul   BYTE PTR [edx-0x32801b81]
  41fac7:	add    eax,0xc580e09a
  41facc:	enter  0x26b8,0x80
  41fad0:	cmpxchg esi,ecx
  41fad3:	mov    al,ds:0x42b0ebe7
  41fad8:	pop    es
  41fad9:	sub    eax,esp
  41fadb:	in     al,0x31
  41fadd:	fist   DWORD PTR [esi+0x48d5468b]
  41fae3:	dec    edx
  41fae4:	jge    0x41fa79
  41fae6:	mov    edx,0x78a95f9
  41faeb:	jae    0x41fb3d
  41faed:	mov    cl,0x40
  41faef:	fdivp  st(1),st
  41faf1:	adc    ch,BYTE PTR [esi-0x69]
  41faf4:	push   edi
  41faf5:	int3   
  41faf6:	mov    cl,0xdb
  41faf8:	lods   al,BYTE PTR ds:[esi]
  41faf9:	loop   0x41fae3
  41fafb:	repnz mov edi,0x9cfde909
  41fb01:	pop    ecx
  41fb02:	out    0xa0,al
  41fb04:	cmp    bh,BYTE PTR [ecx]
  41fb06:	das    
  41fb07:	(bad)  
  41fb08:	hlt    
  41fb09:	or     eax,0xa5440967
  41fb0e:	and    ch,BYTE PTR [esi]
  41fb10:	sbb    cl,BYTE PTR [ecx-0x31a8b8b1]
  41fb16:	xor    eax,0x5f6660b6
  41fb1b:	push   esp
  41fb1c:	aam    0xd1
  41fb1e:	gs popa 
  41fb20:	adc    DWORD PTR [ecx],0x1c
  41fb23:	ins    DWORD PTR es:[edi],dx
  41fb24:	ret    
  41fb25:	js     0x41fb7a
  41fb27:	xchg   esi,eax
  41fb28:	pop    esi
  41fb29:	mov    DWORD PTR [ecx],ebx
  41fb2b:	inc    ecx
  41fb2c:	pop    ss
  41fb2d:	mov    dh,0x39
  41fb2f:	aad    0x27
  41fb31:	inc    edi
  41fb32:	fcomi  st,st(7)
  41fb34:	daa    
  41fb35:	jp     0x41fac9
  41fb37:	lods   eax,DWORD PTR ds:[esi]
  41fb38:	lods   al,BYTE PTR ds:[esi]
  41fb39:	or     al,0x71
  41fb3b:	(bad)  
  41fb3c:	xlat   BYTE PTR ds:[ebx]
  41fb3d:	cs mov ebp,0x8d6f3d20
  41fb43:	xchg   esp,eax
  41fb44:	leave  
  41fb45:	xlat   BYTE PTR ds:[ebx]
  41fb46:	sub    ebp,DWORD PTR [ecx-0x3a]
  41fb49:	lods   eax,DWORD PTR ds:[esi]
  41fb4a:	sahf   
  41fb4b:	daa    
  41fb4c:	jbe    0x41fb9d
  41fb4e:	(bad)  
  41fb4f:	lahf   
  41fb50:	jnp    0x41fb1c
  41fb52:	and    edx,DWORD PTR [ecx-0xfe84d1c]
  41fb58:	addr16 or al,bl
  41fb5b:	xor    cl,ch
  41fb5d:	(bad)  
  41fb5e:	mov    edx,DWORD PTR [ecx-0x14]
  41fb61:	mov    bl,BYTE PTR [edx]
  41fb63:	jmp    0x6f6b:0xce2ed66f
  41fb6a:	ficomp WORD PTR [eax-0x3c]
  41fb6d:	mov    ds:0x1b9ee7d5,eax
  41fb72:	cwde   
  41fb73:	out    0x62,al
  41fb75:	dec    esi
  41fb76:	pop    ecx
  41fb77:	aad    0xec
  41fb79:	sbb    dh,BYTE PTR ds:0x6f730eac
  41fb7f:	lods   al,BYTE PTR ds:[esi]
  41fb80:	imul   esp,DWORD PTR [edi+0x6f],0xffffff8d
  41fb84:	das    
  41fb85:	jl     0x41fb10
  41fb87:	or     ch,BYTE PTR [esi-0x21193abe]
  41fb8d:	mov    esp,0x4c5e7dfd
  41fb92:	push   ss
  41fb93:	popf   
  41fb94:	sbb    eax,0x18ef213f
  41fb99:	adc    eax,DWORD PTR [ecx+0x7eebd7d5]
  41fb9f:	fidivr WORD PTR [edi+0x6fb3628d]
  41fba5:	dec    ebx
  41fba6:	(bad)  
  41fba7:	sub    al,0xa6
  41fba9:	pushf  
  41fbaa:	mov    ebp,0x3e0cb610
  41fbaf:	jmp    0x78d1:0xb70a4b3e
  41fbb6:	mov    ah,0x3a
  41fbb8:	vpmacssww ymm10,ymm3,ymm1,YMMWORD PTR [ebp+0x34]
  41fbbf:	push   esi
  41fbc0:	hlt    
  41fbc1:	add    dh,dh
  41fbc3:	retf   0xd42c
  41fbc6:	sub    eax,0x9147d84c
  41fbcb:	in     al,0xe8
  41fbcd:	sub    ecx,DWORD PTR [edx]
  41fbcf:	pop    esi
  41fbd0:	fistp  DWORD PTR [edi]
  41fbd2:	jo     0x41fb96
  41fbd4:	push   ecx
  41fbd5:	ficomp WORD PTR [esi+edx*4+0x44]
  41fbd9:	inc    esi
  41fbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbdb:	out    dx,al
  41fbdc:	xlat   BYTE PTR ds:[ebx]
  41fbdd:	mov    bh,0x9e
  41fbdf:	or     eax,DWORD PTR [esi]
  41fbe1:	cmp    ebx,DWORD PTR [ebp+0x20]
  41fbe4:	(bad)  
  41fbe5:	leave  
  41fbe6:	fistp  DWORD PTR [eax+0x272a687c]
  41fbec:	fstp   DWORD PTR [edi]
  41fbee:	and    cl,0xb2
  41fbf1:	dec    ebx
  41fbf2:	sub    al,0x27
  41fbf4:	inc    edi
  41fbf5:	inc    ebp
  41fbf6:	jbe    0x41fbc6
  41fbf8:	std    
  41fbf9:	dec    edx
  41fbfa:	jge    0x41fbc0
  41fbfc:	fnsave [eax+0x7964b5]
  41fc02:	jnp    0x41fba7
  41fc04:	fmul   QWORD PTR [edx-0x47ae70eb]
  41fc0a:	xchg   ebp,eax
  41fc0b:	outs   dx,DWORD PTR ds:[esi]
  41fc0c:	pushf  
  41fc0d:	jno    0x41fc28
  41fc0f:	mov    bl,0xf1
  41fc11:	loopne 0x41fc84
  41fc13:	stos   BYTE PTR es:[edi],al
  41fc14:	xor    ah,BYTE PTR [ebp+eax*1+0x37]
  41fc18:	iret   
  41fc19:	icebp  
  41fc1a:	xchg   edi,eax
  41fc1b:	cmp    cl,BYTE PTR [esi]
  41fc1d:	mov    edi,0x92bb472d
  41fc22:	jns    0x41fc09
  41fc24:	jae    0x41fc31
  41fc26:	sbb    cl,BYTE PTR [edi+0x37]
  41fc29:	xchg   edx,eax
  41fc2a:	pop    edx
  41fc2b:	or     al,0x79
  41fc2d:	xchg   BYTE PTR [esp+esi*4-0x7e9695ae],bl
  41fc34:	dec    esi
  41fc35:	sar    DWORD PTR [ebx-0x33f75140],1
  41fc3b:	out    dx,al
  41fc3c:	dec    ecx
  41fc3d:	cmp    al,0xff
  41fc3f:	ja     0x41fc6d
  41fc41:	sub    al,0x22
  41fc43:	dec    edi
  41fc44:	pop    ds
  41fc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc46:	(bad)  
  41fc48:	arpl   WORD PTR [ebp-0x5fbf127b],di
  41fc4e:	inc    esp
  41fc4f:	dec    ebx
  41fc50:	fadd   st(4),st
  41fc52:	pop    esp
  41fc53:	test   DWORD PTR [ebx],esi
  41fc55:	data16 sbb BYTE PTR [ecx],ah
  41fc58:	ss push esi
  41fc5a:	loope  0x41fcd1
  41fc5c:	fstp   TBYTE PTR [eax+0x74]
  41fc5f:	dec    esp
  41fc60:	scas   eax,DWORD PTR es:[edi]
  41fc61:	fsubr  st(5),st
  41fc63:	retf   0x1868
  41fc66:	lahf   
  41fc67:	ret    
  41fc68:	fidivr DWORD PTR [ebx+edx*1+0x3373aba5]
  41fc6f:	sub    DWORD PTR [ebx-0x76],0x43d5d580
  41fc76:	pop    esi
  41fc77:	mov    ebx,0xfd71b0c5
  41fc7c:	test   al,0x74
  41fc7e:	icebp  
  41fc7f:	mov    eax,ds:0xfbfd3d65
  41fc84:	mov    ds:0x915adce9,eax
  41fc89:	adc    ebp,ecx
  41fc8b:	cli    
  41fc8c:	jp     0x41fca4
  41fc8e:	adc    ecx,DWORD PTR [edx+0x4b]
  41fc91:	dec    eax
  41fc92:	jbe    0x41fc91
  41fc94:	mov    ebp,0xf7beb6f8
  41fc99:	and    bh,ch
  41fc9b:	dec    eax
  41fc9c:	js     0x41fc48
  41fc9e:	inc    ecx
  41fc9f:	ret    
  41fca0:	jmp    0x6ed604b6
  41fca5:	clc    
  41fca6:	jnp    0x41fca8
  41fca8:	retf   0xbe01
  41fcab:	sub    bl,BYTE PTR [ebp-0x1d]
  41fcae:	outs   dx,BYTE PTR ds:[esi]
  41fcaf:	ja     0x41fd13
  41fcb1:	sub    eax,0xd3d315b1
  41fcb6:	jg     0x41fc6a
  41fcb8:	or     ch,bh
  41fcba:	mov    esi,0x36b08379
  41fcbf:	leave  
  41fcc0:	rcr    BYTE PTR [edx],1
  41fcc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcc3:	loop   0x41fc45
  41fcc5:	(bad)  
  41fcc6:	pop    edx
  41fcc7:	mov    ah,0xef
  41fcc9:	lods   al,BYTE PTR ds:[esi]
  41fcca:	das    
  41fccb:	sub    eax,0x2a8c32f9
  41fcd0:	aas    
  41fcd1:	cmp    BYTE PTR [esi+0x7d8cea35],dh
  41fcd7:	mov    ds:0xc2b3450d,al
  41fcdc:	(bad)  
  41fcdd:	sbb    esp,eax
  41fcdf:	add    ah,cl
  41fce1:	cmp    al,0x4e
  41fce3:	inc    eax
  41fce4:	arpl   WORD PTR [edi],cx
  41fce6:	push   cs
  41fce7:	adc    DWORD PTR [ecx],0xffffffa0
  41fcea:	fidivr DWORD PTR [ecx]
  41fcec:	outs   dx,BYTE PTR ds:[esi]
  41fced:	retf   
  41fcee:	jmp    0xad48:0x547db79e
  41fcf5:	cmp    al,0x87
  41fcf7:	pusha  
  41fcf8:	inc    ebp
  41fcf9:	xchg   DWORD PTR [ecx+esi*1],edi
  41fcfc:	in     al,0x80
  41fcfe:	lds    esi,FWORD PTR [ebx+0xa5415d6]
  41fd04:	in     eax,0x18
  41fd06:	mov    bh,0x45
  41fd08:	fistp  DWORD PTR [ebx+0x5f]
  41fd0b:	jbe    0x41fd2d
  41fd0d:	adc    dh,BYTE PTR [eax-0x24da829c]
  41fd13:	aam    0x8a
  41fd15:	sahf   
  41fd16:	pusha  
  41fd17:	sar    ebp,cl
  41fd19:	mov    ds:0x9b148119,eax
  41fd1e:	mov    ebx,0xc6ec068e
  41fd23:	retf   0xb4f4
  41fd26:	int3   
  41fd27:	cmc    
  41fd28:	xchg   ebx,eax
  41fd29:	mov    edx,0x2458b509
  41fd2e:	xchg   ah,bh
  41fd30:	cs add eax,0xf6e7265f
  41fd36:	sbb    ebx,DWORD PTR [ebp+0x62d4968d]
  41fd3c:	in     al,dx
  41fd3d:	les    edx,FWORD PTR [edi+edi*8]
  41fd40:	inc    ebx
  41fd41:	cwde   
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x72b2a124],dh
  41fd51:	cld    
  41fd52:	jno    0x41fdcc
  41fd54:	add    DWORD PTR [eax],eax
  41fd56:	clc    
  41fd57:	add    al,0x0
  41fd59:	add    dl,ah
  41fd5b:	mov    esi,0xf20ad7
  41fd60:	cmp    ch,BYTE PTR [esi+0x19]
  41fd63:	aaa    
  41fd64:	sbb    ch,BYTE PTR [ecx]
  41fd66:	push   edi
  41fd67:	rcr    edi,1
  41fd69:	shl    ch,1
  41fd6b:	pop    ecx
  41fd6c:	js     0x41fd5f
  41fd6e:	mov    ebp,0x28d9fd
  41fd73:	jns    0x41fd51
  41fd75:	mov    esp,0xbfe877cf
  41fd7a:	das    
  41fd7b:	fucomi st,st(0)
  41fd7d:	mov    ah,0xd8
  41fd7f:	into   
  41fd80:	call   0x1aa74fdc
  41fd85:	mov    ds:0x6130097c,eax
  41fd8a:	cmp    bl,bh
  41fd8c:	iret   
  41fd8d:	inc    esp
  41fd8e:	xlat   BYTE PTR ds:[ebx]
  41fd8f:	(bad)  
  41fd91:	sbb    al,0xeb
  41fd93:	in     al,0xe1
  41fd95:	inc    BYTE PTR [ebp+0x5713c920]
  41fd9b:	arpl   dx,dx
  41fd9d:	xor    ebp,DWORD PTR [ebx]
  41fd9f:	push   es
  41fda0:	(bad)  
  41fda1:	fcomp  DWORD PTR [edi+0x55a6f295]
  41fda7:	or     al,0x78
  41fdaa:	scas   eax,DWORD PTR es:[edi]
  41fdab:	andnps xmm7,XMMWORD PTR [esp+edi*1]
  41fdaf:	sar    esp,cl
  41fdb1:	into   
  41fdb2:	out    0xa9,eax
  41fdb4:	or     BYTE PTR [edx+0x19],dl
  41fdb7:	or     al,al
  41fdb9:	repnz add ah,dl
  41fdbc:	inc    ecx
  41fdbd:	pop    es
  41fdbe:	pop    es
  41fdbf:	clc    
  41fdc0:	xchg   edx,eax
  41fdc1:	shl    BYTE PTR [esi-0x568d91d5],0x5e
  41fdc8:	jg     0x41fe00
  41fdca:	push   ebp
  41fdcb:	sbb    edi,DWORD PTR [ecx+0x41]
  41fdce:	popf   
  41fdcf:	loop   0x41fdb7
  41fdd1:	mov    bl,0x76
  41fdd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdd4:	mov    ah,0xdf
  41fdd6:	jge    0x41fe0c
  41fdd8:	adc    DWORD PTR [edx+0x19],ebp
  41fddb:	out    0xc3,eax
  41fddd:	push   ebx
  41fdde:	es xchg edi,eax
  41fde0:	inc    edx
  41fde1:	fst    QWORD PTR [edx-0x5d85b871]
  41fde7:	push   es
  41fde8:	ins    BYTE PTR es:[edi],dx
  41fde9:	daa    
  41fdea:	jo     0x41fe35
  41fdec:	mov    esp,0x420e38aa
  41fdf1:	loop   0x41fe51
  41fdf3:	loopne 0x41fdb5
  41fdf5:	scas   eax,DWORD PTR es:[edi]
  41fdf6:	mov    edx,0x7fb06158
  41fdfb:	jl     0x41fdc2
  41fdfd:	dec    ebx
  41fdfe:	adc    edi,ebx
  41fe00:	adc    ebx,edi
  41fe02:	les    esi,FWORD PTR [edx+0x7e21abfd]
  41fe08:	jmp    0x41fe51
  41fe0a:	popf   
  41fe0b:	push   0xd2d50c4f
  41fe10:	push   0xffffffb4
  41fe12:	out    dx,al
  41fe13:	sbb    dl,BYTE PTR [edi]
  41fe15:	xchg   ebp,eax
  41fe16:	ins    DWORD PTR es:[edi],dx
  41fe17:	mov    ds:0xaf28a472,al
  41fe1c:	mov    ah,0xb6
  41fe1e:	adc    al,0xe4
  41fe20:	mov    eax,ds:0x98c80369
  41fe25:	push   esi
  41fe26:	out    dx,al
  41fe27:	daa    
  41fe28:	jg     0x41fe46
  41fe2a:	mov    dh,BYTE PTR [ecx+0x4bdf80fb]
  41fe30:	fs xchg edx,eax
  41fe32:	retf   0x771e
  41fe35:	add    bh,BYTE PTR [ebx-0xc]
  41fe38:	data16 das 
  41fe3a:	adc    edx,DWORD PTR [ecx+0x555710af]
  41fe40:	jno    0x41fe62
  41fe42:	enter  0x8b57,0x2a
  41fe46:	dec    esi
  41fe47:	retf   
  41fe48:	in     al,0xb3
  41fe4a:	scas   al,BYTE PTR es:[edi]
  41fe4b:	stos   BYTE PTR es:[edi],al
  41fe4c:	fwait
  41fe4d:	mov    al,ds:0x6154ef65
  41fe52:	inc    esp
  41fe53:	adc    dh,dl
  41fe55:	mov    edi,0xcbacbde2
  41fe5a:	mov    dl,0x52
  41fe5c:	mov    edi,ebx
  41fe5e:	out    dx,eax
  41fe5f:	stos   DWORD PTR es:[edi],eax
  41fe60:	cld    
  41fe61:	cmp    al,BYTE PTR [edx+0x4f121121]
  41fe67:	enter  0x6697,0x4f
  41fe6b:	inc    edi
  41fe6c:	jbe    0x41fdf7
  41fe6e:	adc    al,BYTE PTR [ecx]
  41fe70:	mov    bl,0xd3
  41fe72:	push   ebx
  41fe73:	add    DWORD PTR [esi],edx
  41fe75:	dec    edi
  41fe76:	lods   eax,DWORD PTR ds:[esi]
  41fe77:	mov    eax,ds:0x9105c795
  41fe7c:	adc    al,0x8a
  41fe7e:	mov    ch,0xe2
  41fe80:	pusha  
  41fe81:	mov    DWORD PTR [ebp+0x46],edi
  41fe84:	adc    ch,BYTE PTR [ebp-0x53]
  41fe87:	pop    ds
  41fe88:	inc    esi
  41fe89:	outs   dx,DWORD PTR ds:[esi]
  41fe8a:	sub    edi,DWORD PTR [edx]
  41fe8c:	retf   0x663d
  41fe8f:	aaa    
  41fe90:	pop    esp
  41fe91:	push   0x44206aea
  41fe96:	dec    edx
  41fe97:	lods   al,BYTE PTR ds:[esi]
  41fe98:	cmp    ebx,DWORD PTR [esi-0x757d49b5]
  41fe9e:	xor    eax,0x82dfd07c
  41fea3:	or     eax,0xe6929c0a
  41fea8:	xor    eax,esp
  41feaa:	push   esp
  41feab:	push   es
  41feac:	(bad)  
  41fead:	hlt    
  41feae:	add    esp,edx
  41feb0:	add    bl,bl
  41feb2:	pop    edx
  41feb3:	(bad)  
  41feb4:	scas   al,BYTE PTR es:[edi]
  41feb5:	push   ecx
  41feb6:	lds    eax,FWORD PTR [ebx+0x3c7b76eb]
  41febc:	test   DWORD PTR [ecx],esi
  41febe:	mov    cl,0x4a
  41fec0:	rcl    eax,cl
  41fec2:	jg     0x41ff3f
  41fec4:	mov    dl,0x2a
  41fec6:	jg     0x41fea2
  41fec8:	(bad)  
  41fec9:	or     eax,0x3ea8fd72
  41fece:	inc    edi
  41fecf:	pop    ebp
  41fed0:	lock pop ss
  41fed2:	adc    WORD PTR ds:0x9cf9a9b2,bx
  41fed9:	cmp    DWORD PTR [edx+ebp*4+0x36],eax
  41fedd:	dec    esi
  41fede:	nop/reserved BYTE PTR [ecx]
  41fee1:	stos   DWORD PTR es:[di],eax
  41fee3:	js     0x41fef6
  41fee5:	mov    ebx,DWORD PTR [esi-0x17]
  41fee8:	test   DWORD PTR ds:0xf8c59457,edx
  41feee:	ds mov edi,0xc9f11b51
  41fef4:	nop
  41fef5:	imul   ebx,DWORD PTR [ecx],0x8d7719f0
  41fefb:	ret    
  41fefc:	cdq    
  41fefd:	fdiv   QWORD PTR [ebx]
  41feff:	pop    eax
  41ff00:	(bad)  
  41ff01:	mov    WORD PTR [ecx+0x27],fs
  41ff04:	xor    ecx,DWORD PTR [eax+0x31fcf0e0]
  41ff0a:	imul   edi,DWORD PTR [ebx-0x57e817cd],0xca2743a1
  41ff14:	xchg   edi,eax
  41ff15:	mov    eax,0x5bf91215
  41ff1a:	test   DWORD PTR [ebx],0x55e0c7ff
  41ff20:	or     bh,BYTE PTR [esi+0x3be60e67]
  41ff26:	cmp    al,0xbc
  41ff28:	in     al,0x90
  41ff2a:	pop    ebx
  41ff2b:	int3   
  41ff2c:	(bad)  
  41ff2d:	fnstenv [eax+ebp*8-0x30c2269a]
  41ff34:	mov    ebp,0x592782b1
  41ff39:	push   eax
  41ff3a:	mov    ds:0xcc2c9841,eax
  41ff3f:	mov    ch,0x2
  41ff41:	jb     0x41ff11
  41ff43:	mov    bh,0x4f
  41ff45:	sbb    al,0x89
  41ff47:	mov    ecx,0x1ffc447e
  41ff4c:	adc    dl,BYTE PTR [edi+0x73]
  41ff4f:	mov    bl,0xb3
  41ff51:	sbb    edi,DWORD PTR [ebx]
  41ff53:	inc    esi
  41ff54:	dec    eax
  41ff55:	ret    
  41ff56:	push   eax
  41ff57:	dec    ecx
  41ff58:	ficom  WORD PTR ss:0x1bdd0acf
  41ff5f:	and    bl,BYTE PTR [ecx+0x2]
  41ff62:	add    ebx,eax
  41ff64:	fs (bad) 
  41ff66:	call   0x6c26cd32
  41ff6b:	loop   0x41ff14
  41ff6d:	sub    dl,BYTE PTR [ebp-0x7e]
  41ff70:	pop    edi
  41ff71:	stos   BYTE PTR es:[edi],al
  41ff72:	(bad)  
  41ff73:	jno    0x41ff2e
  41ff75:	adc    eax,0xd8b4382f
  41ff7a:	and    DWORD PTR [ebx],ecx
  41ff7c:	adc    eax,0xcf352b41
  41ff81:	enter  0xe179,0x37
  41ff85:	mov    al,0xe0
  41ff87:	ds cmc 
  41ff89:	pop    edx
  41ff8a:	xchg   ecx,eax
  41ff8b:	out    0x75,al
  41ff8d:	loope  0x41ffa6
  41ff8f:	dec    esp
  41ff90:	mov    ds:0xa4102111,eax
  41ff95:	pop    edi
  41ff96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff97:	mov    BYTE PTR [ecx],dl
  41ff99:	dec    edi
  41ff9a:	dec    eax
  41ff9b:	fnstsw WORD PTR [ebx-0x39bc5e60]
  41ffa1:	and    al,0x36
  41ffa3:	jmp    0x41ff46
  41ffa5:	mov    bl,0xf8
  41ffa7:	xor    eax,0x769833b2
  41ffac:	lds    edi,FWORD PTR [ecx]
  41ffae:	mov    ch,0xb2
  41ffb0:	scas   eax,DWORD PTR es:[edi]
  41ffb1:	mov    ?,WORD PTR [ecx+0x64555fbb]
  41ffb7:	ins    BYTE PTR es:[edi],dx
  41ffb8:	sbb    eax,0xaadf23ac
  41ffbd:	adc    BYTE PTR [ecx+edi*4+0xe],dl
  41ffc1:	lods   al,BYTE PTR ds:[esi]
  41ffc2:	pop    edx
  41ffc3:	sti    
  41ffc4:	div    esp
  41ffc6:	inc    esi
  41ffc7:	jmp    0x39a7:0x31ea13d5
  41ffce:	cmc    
  41ffcf:	pop    eax
  41ffd0:	push   cs
  41ffd1:	xor    esp,esi
  41ffd3:	lods   al,BYTE PTR ds:[esi]
  41ffd4:	dec    edx
  41ffd5:	shl    DWORD PTR [ecx],cl
  41ffd7:	fcmovnu st,st(2)
  41ffd9:	cwde   
  41ffda:	shl    BYTE PTR [ebx-0x2e],1
  41ffdd:	addr16 cmp eax,0xc7015eb
  41ffe3:	sub    eax,0x18a003ee
  41ffe8:	pusha  
  41ffe9:	jb     0x41ff7d
  41ffeb:	jae    0x41ff71
  41ffed:	mov    ebp,0x570815e2
  41fff2:	push   ebx
  41fff3:	push   ds
  41fff4:	and    eax,0xc765cd90
  41fff9:	out    dx,eax
  41fffa:	xor    ch,ch
  41fffc:	add    eax,0xe1e45c0a
  420001:	dec    ecx
  420002:	out    dx,eax
  420003:	rcl    BYTE PTR [esi-0x223c7180],1
  420009:	nop
  42000a:	jae    0x420059
  42000c:	sub    BYTE PTR [esp+eax*2],al
  42000f:	dec    edi
  420010:	outs   dx,DWORD PTR ds:[esi]
  420011:	mov    DWORD PTR [esi],edi
  420013:	pushf  
  420014:	into   
  420015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420016:	jge    0x41ffab
  420018:	cwde   
  420019:	icebp  
  42001a:	jl     0x420046
  42001c:	repnz xor edx,DWORD PTR [ecx+ecx*1]
  420020:	aas    
  420021:	hlt    
  420022:	cmp    esi,DWORD PTR [ecx]
  420024:	sahf   
  420025:	nop
  420026:	in     eax,0x64
  420028:	mov    ds:0xc63ddcb6,al
  42002d:	enter  0xf833,0x69
  420031:	mov    ds:0x430cf8b2,al
  420036:	pop    edi
  420037:	imul   ecx,DWORD PTR [eax+0x2eadd92],0xffffffef
  42003e:	int3   
  42003f:	inc    ebx
  420040:	enter  0xd075,0x61
  420044:	add    eax,0xf05b24d0
  420049:	add    eax,0x4211cc81
  42004e:	mov    esi,DWORD PTR [ebp-0x7a]
  420051:	inc    edi
  420052:	(bad)  
  420054:	test   DWORD PTR es:[edx+0xa],esi
  420058:	in     eax,dx
  420059:	fisttp WORD PTR [edx+0x29f5b2f4]
  42005f:	jmp    0x4504ad9f
  420064:	lea    ecx,[eax-0x9]
  420067:	out    0x51,al
  420069:	loop   0x420073
  42006b:	repz cmp edi,DWORD PTR [eax+ebx*1+0x1e]
  420070:	mov    WORD PTR [esp+eiz*2],ss
  420073:	lods   al,BYTE PTR fs:[esi]
  420075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420076:	jno    0x420089
  420078:	cwde   
  420079:	jno    0x41fffc
  42007b:	push   ss
  42007c:	aaa    
  42007d:	popf   
  42007e:	cli    
  42007f:	add    dl,BYTE PTR [esi]
  420081:	mov    eax,0x4d8e647
  420086:	xchg   ecx,eax
  420087:	adc    bl,dh
  420089:	adc    bh,bl
  42008b:	mov    bh,0x5e
  42008d:	cmp    DWORD PTR [esi+0x20d6c315],eax
  420093:	xor    eax,DWORD PTR [ecx]
  420095:	dec    esi
  420096:	call   0xdfd1:0xe26faca4
  42009d:	enter  0x1ceb,0x6
  4200a1:	into   
  4200a2:	fmul   st,st(5)
  4200a4:	adc    esp,DWORD PTR [ecx]
  4200a6:	lods   al,BYTE PTR ds:[esi]
  4200a7:	icebp  
  4200a8:	popa   
  4200a9:	and    BYTE PTR [ebp-0x754a972c],0xa2
  4200b0:	pop    es
  4200b1:	xor    DWORD PTR [edi-0x5205e3a8],eax
  4200b7:	xor    BYTE PTR [ebx],ah
  4200b9:	mov    ds:0xb34564a3,eax
  4200be:	test   edi,edx
  4200c0:	pop    eax
  4200c1:	mov    ch,0xcf
  4200c3:	aaa    
  4200c4:	push   cs
  4200c5:	jbe    0x4200f1
  4200c7:	pop    edi
  4200c8:	adc    eax,DWORD PTR [ebp-0xe]
  4200cb:	xor    esp,ebp
  4200cd:	pop    edi
  4200ce:	mov    es,ecx
  4200d0:	jp     0x420147
  4200d2:	data16 loopne 0x420096
  4200d5:	sbb    eax,DWORD PTR [ecx-0x2a]
  4200d8:	aam    0x12
  4200da:	imul   eax,ebp,0xffffff9f
  4200dd:	inc    edi
  4200de:	std    
  4200df:	shl    BYTE PTR [ecx],1
  4200e1:	mov    ds:0x1b51d973,al
  4200e6:	xchg   edi,eax
  4200e7:	adc    eax,0x5207d533
  4200ec:	loopne 0x4200f1
  4200ee:	repnz pop es
  4200f0:	mov    esp,0x3ca66a16
  4200f5:	rol    cl,1
  4200f7:	mov    esi,0x3fe14212
  4200fc:	retf   0x40cc
  4200ff:	xlat   BYTE PTR ds:[ebx]
  420100:	pop    es
  420101:	imul   esi,DWORD PTR [esi],0x9f45bc99
  420107:	out    dx,eax
  420108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420109:	cmp    eax,0x724c0d35
  42010e:	mov    edi,0x728a182a
  420113:	test   eax,0x7e37f9b8
  420118:	xlat   BYTE PTR ds:[ebx]
  420119:	push   ecx
  42011a:	inc    edi
  42011b:	shl    DWORD PTR [esi+edi*2+0x76],1
  42011f:	inc    edx
  420120:	ss jecxz 0x420113
  420123:	cmp    eax,0x5ce76eb9
  420128:	test   al,0xde
  42012a:	inc    ebx
  42012b:	(bad)  
  42012c:	jno    0x4200d7
  42012e:	inc    ebx
  42012f:	scas   al,BYTE PTR es:[edi]
  420130:	mov    al,ds:0x88d62246
  420135:	test   BYTE PTR [esi+0x1d],dl
  420138:	sub    al,0x20
  42013a:	jb     0x420142
  42013c:	push   ebx
  42013d:	sub    DWORD PTR [ecx-0xc],ecx
  420140:	or     eax,0x89f798c1
  420145:	pop    edx
  420146:	js     0x4200e6
  420148:	mov    cl,0x20
  42014a:	adc    DWORD PTR [ecx-0x19],ebp
  42014d:	mov    eax,ds:0xcba2192f
  420152:	fmul   st,st(0)
  420154:	scas   eax,DWORD PTR es:[edi]
  420155:	fs retf 0xce1f
  420159:	mov    edx,esi
  42015b:	repz mov ah,0xcf
  42015e:	inc    ebp
  42015f:	clc    
  420160:	sub    DWORD PTR [ebx],esi
  420162:	ss repnz in al,dx
  420165:	mov    esp,0x313d03c
  42016a:	sbb    DWORD PTR [edi+0x294efea6],0x1f
  420171:	mov    ebp,0x203bd985
  420176:	jno    0x42012f
  420178:	loop   0x4201b9
  42017a:	sbb    dh,BYTE PTR [ecx]
  42017c:	xchg   ecx,eax
  42017d:	pop    edi
  42017e:	mov    dh,0x31
  420180:	fstp   DWORD PTR [ecx-0x6a]
  420183:	or     al,0xba
  420185:	cmp    BYTE PTR [esi-0x43747454],cl
  42018b:	mov    dh,ch
  42018d:	(bad)  
  42018e:	cli    
  42018f:	shl    BYTE PTR [ecx+0x3d],1
  420192:	push   ebp
  420193:	pop    eax
  420194:	not    BYTE PTR [eax+0x5b77208b]
  42019a:	repz inc eax
  42019c:	js     0x4201ab
  42019e:	fidivr DWORD PTR [ecx]
  4201a0:	push   ebx
  4201a1:	adc    al,0xd7
  4201a3:	xor    ebx,DWORD PTR [edi+0x41f2aad8]
  4201a9:	dec    ebp
  4201aa:	pop    es
  4201ab:	gs dec eax
  4201ad:	sbb    BYTE PTR [eax+0x6113be0e],dl
  4201b3:	cmp    ebp,DWORD PTR [ecx+0x14]
  4201b6:	mov    edi,0xb5293ebb
  4201bb:	outs   dx,DWORD PTR ss:[esi]
  4201bd:	cmc    
  4201be:	ss jb  0x4201be
  4201c1:	inc    edi
  4201c2:	addr16 jae 0x420202
  4201c5:	lods   eax,DWORD PTR ds:[esi]
  4201c6:	dec    edx
  4201c7:	or     al,0xd3
  4201c9:	fldenv [ebx+0x5ff5c6d4]
  4201cf:	add    eax,0x2da3e272
  4201d4:	add    ebp,DWORD PTR [eax+ecx*8-0x79d14073]
  4201db:	cmp    edi,DWORD PTR [ecx-0x6a]
  4201de:	sahf   
  4201df:	pop    edx
  4201e0:	pop    ebp
  4201e1:	shr    DWORD PTR [ebp-0x6],1
  4201e4:	cli    
  4201e5:	gs ins BYTE PTR es:[edi],dx
  4201e7:	leave  
  4201e8:	sti    
  4201e9:	lods   al,BYTE PTR ds:[esi]
  4201ea:	sub    BYTE PTR [ebx+0xf],0x65
  4201ee:	mov    edx,0xde5fc49f
  4201f3:	outs   dx,DWORD PTR ds:[esi]
  4201f4:	xchg   bp,ax
  4201f6:	loop   0x420228
  4201f8:	inc    edi
  4201f9:	push   ecx
  4201fa:	jmp    0x613e:0x3464b349
  420201:	fwait
  420202:	push   ss
  420203:	pop    edx
  420204:	inc    eax
  420205:	out    dx,eax
  420206:	inc    esi
  420207:	inc    eax
  420208:	xchg   edi,eax
  420209:	or     DWORD PTR [edx-0x2f],ecx
  42020c:	out    0xb3,al
  42020e:	push   ecx
  42020f:	test   BYTE PTR [esi],0xc6
  420212:	and    BYTE PTR [ecx+0x58a971f4],bl
  420218:	jbe    0x4201c7
  42021a:	jl     0x4201c4
  42021c:	push   eax
  42021d:	arpl   WORD PTR [esi],bp
  42021f:	xor    al,0x6e
  420221:	(bad)  
  420222:	xchg   ebp,eax
  420223:	cmc    
  420224:	bound  eax,QWORD PTR [edi-0x3b]
  420227:	ds xchg ebx,eax
  420229:	mov    ebx,0xed64400e
  42022e:	lea    eax,[ebx]
  420230:	clc    
  420231:	sub    al,0xb
  420233:	or     DWORD PTR [edx-0x4a],ecx
  420236:	and    al,0xf
  420238:	inc    edi
  420239:	mov    dl,0xcf
  42023b:	daa    
  42023c:	xor    BYTE PTR [ecx+0x724d7bd5],al
  420242:	push   ebx
  420243:	sub    BYTE PTR [ebp-0x714779d1],cl
  420249:	xchg   esi,eax
  42024a:	js     0x4201d8
  42024c:	fwait
  42024d:	cmp    ch,dh
  42024f:	push   esp
  420250:	popa   
  420251:	arpl   WORD PTR [esi+0x57fe4584],dx
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ebx+0x6982c12a],dl
  420263:	jge    0x420266
  420265:	add    al,bh
  420267:	add    al,0x0
  420269:	add    BYTE PTR [ebx-0x21],dh
  42026c:	jo     0x4202c7
  42026e:	cmp    edx,DWORD PTR [edx+0x6]
  420271:	xor    esi,esi
  420273:	test   dh,ch
  420275:	js     0x42028b
  420277:	(bad)  
  420278:	mov    al,ds:0xaa7dff51
  42027d:	or     esp,edx
  42027f:	lods   al,BYTE PTR ds:[esi]
  420280:	retf   
  420281:	loope  0x420227
  420283:	(bad)  
  420284:	outs   dx,DWORD PTR ds:[esi]
  420285:	repz leave 
  420287:	iret   
  420288:	adc    esi,ecx
  42028a:	imul   ebx,DWORD PTR [edx-0xe],0x1dbdc8b9
  420291:	xor    eax,0xe0753e66
  420296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420297:	jg     0x420270
  420299:	scas   al,BYTE PTR es:[edi]
  42029a:	mov    ebx,ds
  42029c:	(bad)  
  42029d:	cld    
  42029e:	mov    edi,0xf048780f
  4202a3:	mov    ch,0xf7
  4202a5:	aad    0xa6
  4202a7:	(bad)  
  4202a8:	icebp  
  4202a9:	xlat   BYTE PTR ds:[ebx]
  4202aa:	stos   DWORD PTR es:[edi],eax
  4202ab:	loopne 0x420255
  4202ad:	pop    ecx
  4202ae:	jp     0x4202c3
  4202b0:	bound  edx,QWORD PTR [eax+0x11]
  4202b3:	shr    DWORD PTR [edx-0x66baef92],0xf2
  4202ba:	add    eax,0xea7fe4ab
  4202bf:	push   es
  4202c0:	xor    BYTE PTR [ebx-0x1e],al
  4202c3:	add    BYTE PTR [esi+0x70b53566],al
  4202c9:	sbb    dh,BYTE PTR [ebx]
  4202cb:	aam    0x1b
  4202cd:	or     eax,0x53baca34
  4202d2:	pop    ds
  4202d3:	enter  0xadaa,0x8e
  4202d7:	mov    ecx,0xb4ea0c3b
  4202dc:	jne    0x420304
  4202de:	cmp    eax,0xef1e0c9c
  4202e3:	jecxz  0x42030f
  4202e5:	es mov ebx,0x3d775f2e
  4202eb:	sub    al,0xfa
  4202ed:	lods   eax,DWORD PTR ds:[esi]
  4202ee:	fist   WORD PTR [esi+0x13]
  4202f1:	sbb    DWORD PTR [ebx+0xb],eax
  4202f4:	call   0x6668a90b
  4202f9:	cs mov esi,0xe5db69ea
  4202ff:	inc    edi
  420300:	mov    ah,0x13
  420302:	or     eax,0x35f70dd9
  420307:	xor    eax,0x65197f1d
  42030c:	js     0x4202fb
  42030e:	(bad)  
  42030f:	xchg   ebp,eax
  420310:	xchg   edi,eax
  420311:	pop    esi
  420312:	mov    ebx,0xa8f192d8
  420317:	data16 or BYTE PTR [esi+0x6c7027cf],0x5a
  42031f:	data16 jmp 0x420398
  420322:	gs dec edi
  420324:	leave  
  420325:	aad    0xb5
  420327:	cwde   
  420328:	retf   
  420329:	js     0x4202e2
  42032b:	mov    es,WORD PTR [ebx+0xb]
  42032e:	jns    0x4202c7
  420330:	(bad)  
  420331:	retf   0x89d5
  420334:	push   edi
  420335:	(bad)  
  420336:	sub    ecx,DWORD PTR [ebx+eax*2+0x7b8a83fc]
  42033d:	xor    al,0xc7
  42033f:	ret    
  420340:	mov    edx,0x33631788
  420345:	push   cs
  420346:	and    ebp,esi
  420348:	mov    WORD PTR [edx],ds
  42034a:	outs   dx,BYTE PTR ds:[esi]
  42034b:	adc    al,0x7c
  42034d:	ins    BYTE PTR es:[edi],dx
  42034e:	push   ebx
  42034f:	inc    ebx
  420350:	out    dx,eax
  420351:	(bad)  
  420352:	xchg   esi,eax
  420353:	arpl   WORD PTR [ebx+0x492b26fb],si
  420359:	push   0xf729c523
  42035e:	jnp    0x4202f2
  420360:	int    0xce
  420362:	sbb    al,0x2b
  420364:	fsubp  st(0),st
  420366:	jmp    0x5b661903
  42036b:	outs   dx,DWORD PTR ds:[esi]
  42036c:	push   0xa32a57bf
  420371:	push   ss
  420372:	or     eax,0xac0c357
  420377:	xor    cl,BYTE PTR [esi+0x611a7ce6]
  42037d:	lods   eax,DWORD PTR ds:[esi]
  42037e:	push   esp
  42037f:	fild   QWORD PTR [ebx+0x7b]
  420382:	icebp  
  420383:	ins    BYTE PTR es:[edi],dx
  420384:	push   edi
  420385:	inc    ecx
  420386:	sub    eax,0x28aef912
  42038b:	lea    ebx,[ecx]
  42038d:	in     eax,dx
  42038e:	(bad)  
  42038f:	pusha  
  420390:	cmp    DWORD PTR [esi+0x5e],0xb234956a
  420397:	test   al,0x71
  420399:	sbb    bl,BYTE PTR [esi+0x24f274b2]
  42039f:	add    dh,BYTE PTR [edi-0x44]
  4203a2:	sbb    eax,0xb33eb6ac
  4203a7:	sbb    eax,0xeb1e8320
  4203ac:	or     edx,ebx
  4203ae:	ins    BYTE PTR es:[edi],dx
  4203af:	add    DWORD PTR [edi-0x49],ecx
  4203b2:	cmp    DWORD PTR [ecx],esi
  4203b4:	sub    eax,DWORD PTR [edx]
  4203b6:	push   0xf3a31470
  4203bb:	add    eax,0x2f9b1fa2
  4203c0:	adc    al,0x9e
  4203c2:	pop    ebp
  4203c3:	and    DWORD PTR [eax-0x2898ec8c],eax
  4203c9:	push   0x6d
  4203cb:	dec    ebx
  4203cc:	xchg   esp,eax
  4203cd:	and    eax,0x8b6e42e4
  4203d2:	fnsave ds:0x4ae5edb1
  4203d8:	repnz sbb ah,al
  4203db:	lods   al,BYTE PTR ds:[esi]
  4203dc:	gs add cl,ah
  4203df:	inc    edx
  4203e0:	cdq    
  4203e1:	jb     0x4203ad
  4203e3:	or     eax,0x2c794e80
  4203e8:	(bad)  
  4203e9:	pop    eax
  4203ea:	shl    BYTE PTR [esi-0x14],1
  4203ed:	sti    
  4203ee:	stc    
  4203ef:	jmp    FWORD PTR [edx+0x56db2b7c]
  4203f5:	pop    ecx
  4203f6:	sub    dl,bh
  4203f8:	je     0x420459
  4203fa:	or     DWORD PTR [ebp+0x79],esi
  4203fd:	xor    al,0x9c
  4203ff:	adc    DWORD PTR [eax],eax
  420401:	and    DWORD PTR [eax-0x520864c7],ebp
  420407:	inc    ecx
  420408:	cli    
  420409:	js     0x4203a8
  42040b:	and    DWORD PTR [ebp+0x6557577b],ecx
  420411:	rcr    DWORD PTR [esi],cl
  420413:	mov    bl,0xff
  420415:	sahf   
  420416:	push   0x6a66ec74
  42041b:	pop    edx
  42041c:	shl    bh,cl
  42041e:	cld    
  42041f:	add    esp,ecx
  420421:	cmp    esi,DWORD PTR [edi-0x1]
  420424:	enter  0xca59,0x1b
  420428:	ret    
  420429:	in     al,0x96
  42042b:	(bad)  [eax+0x2e1207a4]
  420431:	imul   eax,DWORD PTR [ebx+edx*8+0x50dabf36],0xfffffff3
  420439:	push   0x2331ae76
  42043e:	sub    dh,BYTE PTR [ecx]
  420440:	add    ebp,DWORD PTR [eax+ebx*1-0x3eece001]
  420447:	mov    bh,0x5f
  420449:	adc    bl,dh
  42044b:	jae    0x420485
  42044d:	ss jmp 0x4204c6
  420450:	jp     0x42046a
  420452:	lods   al,BYTE PTR ds:[esi]
  420453:	mov    DWORD PTR [ecx],esp
  420455:	push   es
  420456:	out    0x1e,eax
  420458:	cmp    dl,BYTE PTR [eax+eiz*8]
  42045b:	(bad)  
  42045c:	adc    DWORD PTR [esi],esi
  42045e:	test   eax,0xf108bf43
  420463:	mov    eax,0x4ad734c
  420468:	popa   
  420469:	outs   dx,BYTE PTR ds:[esi]
  42046a:	(bad)  
  42046b:	idiv   BYTE PTR [eax]
  42046d:	fdivr  DWORD PTR [ecx]
  42046f:	inc    ebx
  420471:	mov    esi,0x120205a8
  420476:	mov    edi,0xfc8a0cad
  42047b:	mov    eax,ds:0xae0ea66a
  420480:	aam    0x96
  420482:	jecxz  0x42044a
  420484:	scas   al,BYTE PTR es:[edi]
  420485:	mov    WORD PTR [ebp+eax*4-0x759e3fd4],cs
  42048c:	fisubr WORD PTR [edi+0x56800502]
  420492:	sbb    al,0x5f
  420494:	sar    ebx,0x83
  420497:	sub    edx,DWORD PTR [ecx]
  420499:	hlt    
  42049a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42049b:	cmp    edi,edi
  42049d:	loope  0x4204ce
  42049f:	into   
  4204a0:	retf   
  4204a1:	mov    ah,0x8b
  4204a3:	imul   ebp,DWORD PTR [edx],0xf2a69b4c
  4204a9:	jmp    0x87bd:0x50533535
  4204b0:	push   esi
  4204b1:	leave  
  4204b2:	ins    DWORD PTR es:[edi],dx
  4204b3:	ret    0xc4f4
  4204b6:	stc    
  4204b7:	xchg   ebp,ebx
  4204b9:	jae    0x4204f1
  4204bb:	lods   eax,DWORD PTR ds:[esi]
  4204bc:	call   0x4b6c4f96
  4204c1:	jbe    0x4204b5
  4204c3:	sbb    esi,esp
  4204c5:	fisub  WORD PTR [edi]
  4204c7:	out    0xa7,al
  4204c9:	cmp    bl,ch
  4204cb:	push   es
  4204cc:	scas   al,BYTE PTR es:[edi]
  4204cd:	sbb    eax,0x5b0a5cbb
  4204d2:	stos   BYTE PTR es:[edi],al
  4204d3:	jae    0x420534
  4204d5:	popf   
  4204d6:	loopne 0x420512
  4204d8:	mov    dh,0x7e
  4204da:	and    ebx,edi
  4204dc:	loope  0x42054b
  4204de:	dec    ebx
  4204df:	mov    bh,0x87
  4204e1:	push   edi
  4204e2:	cmp    al,0x8e
  4204e4:	mov    eax,ds:0x4d19675a
  4204e9:	push   edi
  4204ea:	and    DWORD PTR [edi+0x147394ae],0x13e3095b
  4204f4:	mov    ds:0xc52df84,eax
  4204f9:	jp     0x42050f
  4204fb:	sub    ch,BYTE PTR [ebx]
  4204fd:	dec    esi
  4204fe:	mov    ebp,0x6df3716f
  420503:	dec    ecx
  420504:	loopne 0x420528
  420506:	pop    edx
  420507:	test   al,0x4d
  420509:	push   0xa12ca4
  42050e:	iret   
  42050f:	jo     0x4204c7
  420511:	cmc    
  420512:	or     BYTE PTR [esi+0x65],bh
  420515:	ja     0x420533
  420517:	mov    ebp,DWORD PTR [eax+0x58]
  42051a:	mov    BYTE PTR [eax-0x1dc5f0e5],bl
  420520:	sahf   
  420521:	mov    ebx,0xef411ec2
  420526:	sbb    ah,BYTE PTR [esi+0x3c9ddf0f]
  42052c:	xlat   BYTE PTR ds:[ebx]
  42052d:	sti    
  42052e:	cli    
  42052f:	outs   dx,DWORD PTR ds:[esi]
  420530:	dec    DWORD PTR [eax]
  420532:	popf   
  420533:	sub    eax,0x112d4899
  420538:	popf   
  420539:	ja     0x4204f6
  42053b:	adc    eax,0x7933e4c5
  420540:	adc    eax,0x8517f04b
  420545:	mov    dh,ah
  420547:	adc    eax,0xfd013f38
  42054c:	or     DWORD PTR [ecx+0x7f],edi
  42054f:	ds cdq 
  420551:	shr    BYTE PTR [edi-0x5624a240],0x37
  420558:	mov    ebp,0x4de5b248
  42055d:	ja     0x42052e
  42055f:	fs push ebx
  420561:	xor    edi,DWORD PTR [edi]
  420563:	arpl   WORD PTR [edi-0x6f0d3939],si
  420569:	mov    ch,0x12
  42056b:	pop    eax
  42056c:	lock or ch,BYTE PTR [edx]
  42056f:	jmp    0xf9dad4ae
  420574:	push   esp
  420575:	lods   al,BYTE PTR ds:[esi]
  420576:	mov    ds:0x25b23715,eax
  42057b:	pop    ebx
  42057c:	mov    DWORD PTR [edi-0x22],ebx
  42057f:	rep stos BYTE PTR es:[edi],al
  420581:	mov    bl,0x9e
  420583:	pop    ds
  420584:	jecxz  0x420549
  420586:	xchg   ebx,eax
  420587:	push   edx
  420588:	and    eax,0xfc6e7a99
  42058d:	pop    esi
  42058e:	ins    BYTE PTR es:[edi],dx
  42058f:	dec    ebx
  420590:	cli    
  420591:	xchg   ebp,eax
  420592:	(bad)  
  420593:	sub    al,0xc9
  420595:	or     DWORD PTR [eax+0x7f],0x33
  420599:	mov    al,0x4e
  42059b:	out    dx,al
  42059c:	mov    eax,ds:0xcd40fc16
  4205a1:	into   
  4205a2:	dec    edi
  4205a3:	(bad)  
  4205a4:	rcr    DWORD PTR [ebx+edx*4],1
  4205a7:	inc    ebx
  4205a8:	xlat   BYTE PTR ds:[ebx]
  4205a9:	in     al,0x90
  4205ab:	mov    cs,eax
  4205ad:	mov    bh,0x8b
  4205af:	xchg   dh,ah
  4205b1:	dec    ebp
  4205b2:	mov    eax,0x9c428918
  4205b7:	sti    
  4205b8:	cmp    eax,0x461420fb
  4205bd:	xchg   esp,eax
  4205be:	es dec edx
  4205c0:	std    
  4205c1:	jg     0x42061b
  4205c3:	mov    BYTE PTR [ebx+0x3aee8283],cl
  4205c9:	into   
  4205ca:	aaa    
  4205cb:	mov    eax,ds:0xf0b1395b
  4205d0:	inc    edi
  4205d1:	sub    esi,DWORD PTR [ecx+0x38b8fcc4]
  4205d7:	cmp    eax,0xd570635f
  4205dc:	loop   0x42059b
  4205de:	push   ss
  4205df:	mov    ecx,0x3cc82503
  4205e4:	fidivr DWORD PTR [edi]
  4205e6:	or     dh,BYTE PTR [esi]
  4205e8:	sbb    dh,BYTE PTR [esi+ebx*8+0x534589a9]
  4205ef:	inc    esi
  4205f0:	dec    edx
  4205f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205f2:	push   esi
  4205f3:	adc    eax,0x3079016a
  4205f8:	jmp    0x7cf:0xea861ed
  4205ff:	cmp    al,cl
  420601:	pop    ss
  420602:	jb     0x4205c8
  420604:	test   al,0xa
  420606:	xchg   ebp,eax
  420607:	scas   al,BYTE PTR es:[edi]
  420608:	test   BYTE PTR [ebx+0x29],ah
  42060b:	xchg   ecx,eax
  42060c:	xchg   esi,eax
  42060d:	and    eax,0x11682677
  420612:	push   0xffffff87
  420614:	stos   DWORD PTR es:[edi],eax
  420615:	sbb    esp,DWORD PTR [eax+eiz*1+0x7d]
  420619:	inc    ebx
  42061a:	dec    esi
  42061b:	mov    ds:0x1542d1af,eax
  420620:	imul   edx,DWORD PTR [ecx-0x31b06c89],0xda762b2a
  42062a:	lahf   
  42062b:	sub    ch,dh
  42062d:	sar    DWORD PTR [edx],0xb6
  420630:	mov    ebx,0x773461b3
  420635:	cmp    DWORD PTR [ebx+0x6c],ebp
  420638:	cli    
  420639:	cwde   
  42063a:	es clc 
  42063c:	and    ecx,DWORD PTR [eax+0x2dd0420]
  420642:	xchg   esi,eax
  420643:	jno    0x4206ae
  420645:	(bad)  
  420646:	pop    ecx
  420647:	aaa    
  420648:	inc    eax
  420649:	xchg   BYTE PTR [edi],bl
  42064b:	mov    al,ds:0x64005799
  420650:	int3   
  420651:	and    al,0x1a
  420653:	or     edx,DWORD PTR [eax]
  420655:	inc    ebp
  420656:	push   edi
  420657:	fcom   QWORD PTR [edi+0x5d025547]
  42065d:	add    dh,BYTE PTR [ecx+0x4e]
  420660:	push   cs
  420661:	sbb    al,0xfa
  420663:	cmp    al,0x84
  420665:	call   0x4728:0xcea0f3de
  42066c:	js     0x420686
  42066e:	sbb    DWORD PTR [edi+0x5b528ece],ebp
  420674:	nop
  420675:	mov    WORD PTR [esi+0x736d20ec],ss
  42067b:	(bad)  [ebp-0x71a7ed59]
  420681:	js     0x4206c4
  420683:	(bad)  
  420684:	pop    ds
  420685:	dec    ecx
  420686:	mov    eax,0x8381bc7f
  42068b:	daa    
  42068c:	jecxz  0x4206fa
  42068e:	(bad)  
  42068f:	dec    esp
  420690:	leave  
  420691:	inc    ecx
  420692:	mov    ah,0x7c
  420694:	aaa    
  420695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420696:	imul   ebx,DWORD PTR [edx-0x3a],0x49179130
  42069d:	ja     0x420703
  42069f:	xchg   edx,eax
  4206a0:	lods   al,BYTE PTR ds:[esi]
  4206a1:	cld    
  4206a2:	sub    ah,BYTE PTR [ebx+eax*2]
  4206a5:	jl     0x4206a8
  4206a7:	push   ebp
  4206a8:	fmul   st(0),st
  4206aa:	repnz adc esi,ebp
  4206ad:	adc    BYTE PTR [eax-0x24a0a0cf],ah
  4206b3:	sbb    eax,0x336821d9
  4206b8:	psllq  mm3,QWORD PTR [ebp-0x6c]
  4206bc:	lahf   
  4206bd:	sub    eax,0xb2d9f82d
  4206c2:	push   ebx
  4206c3:	cdq    
  4206c4:	mov    ah,0xf0
  4206c6:	leave  
  4206c7:	xor    ch,ah
  4206c9:	ffree  st(0)
  4206cb:	jns    0x42065b
  4206cd:	mov    BYTE PTR [ecx-0x335051ea],cl
  4206d3:	in     al,dx
  4206d4:	clc    
  4206d5:	(bad)  
  4206d6:	int    0x91
  4206d8:	dec    ecx
  4206d9:	dec    ecx
  4206da:	jnp    0x4206fc
  4206dc:	outs   dx,BYTE PTR ds:[esi]
  4206dd:	inc    eax
  4206de:	cmp    eax,0xdaa335e2
  4206e3:	bound  esi,QWORD PTR [ebp-0x3a10745f]
  4206e9:	adc    DWORD PTR ds:0x51aab808,ebx
  4206ef:	cmp    DWORD PTR [ecx],0x6a3da9aa
  4206f5:	test   DWORD PTR [eax+edx*8+0x4281531f],edi
  4206fc:	mov    WORD PTR [edi],?
  4206fe:	mov    edi,0xd07c5a7
  420703:	fidiv  DWORD PTR ds:0xc2bbb21c
  420709:	xor    al,0x27
  42070b:	pop    edx
  42070c:	cmc    
  42070d:	es mov dh,bh
  420710:	test   eax,0x727b59db
  420715:	imul   edx,DWORD PTR [ebx-0x1803f5af],0x2a6e0f67
  42071f:	add    ah,BYTE PTR [ebp-0x2f918e4d]
  420725:	mov    eax,ds:0x9e014897
  42072a:	sub    dh,BYTE PTR [ebp+ebp*8+0x5cc06076]
  420731:	stc    
  420732:	popa   
  420733:	outs   dx,BYTE PTR ds:[esi]
  420734:	mov    ch,0xb4
  420736:	add    dh,BYTE PTR [ecx+0x59]
  420739:	call   ebp
  42073b:	dec    ebp
  42073c:	rcr    DWORD PTR [edi-0x21],cl
  42073f:	or     DWORD PTR [esi+0x46],ebp
  420742:	dec    ebx
  420743:	sub    dl,bh
  420745:	mov    esi,DWORD PTR [ecx-0x5e36ea24]
  42074b:	dec    ecx
  42074c:	fsub   DWORD PTR [edx-0x46]
  42074f:	lahf   
  420750:	fnstenv [edx+0x626faefa]
  420756:	sbb    al,0xb9
  420758:	pop    edi
  420759:	jmp    0xdbd5:0xbce36769
  420760:	sbb    ecx,DWORD PTR [edx]
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	inc    edi
  42076f:	fcomi  st,st(5)
  420771:	pop    edi
  420772:	popa   
  420773:	add    BYTE PTR [ecx],0x0
  420776:	clc    
  420777:	add    al,0x0
  420779:	add    BYTE PTR [edx-0x636e3280],bh
  42077f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420781:	inc    edi
  420783:	xchg   ecx,eax
  420784:	repnz (bad) 
  420786:	mov    edi,0xfff88e23
  42078b:	push   cs
  42078c:	loopne 0x4207e0
  42078e:	push   edx
  42078f:	add    eax,esi
  420791:	xchg   esp,eax
  420792:	les    edx,FWORD PTR [eax+0x66]
  420795:	add    BYTE PTR [ebp-0x77140d79],ah
  42079b:	outs   dx,BYTE PTR ds:[esi]
  42079c:	mov    esi,edi
  42079e:	test   BYTE PTR [edx],cl
  4207a0:	call   0xda1c08c3
  4207a5:	mov    ds:0xd335f3fb,al
  4207aa:	stc    
  4207ab:	inc    esi
  4207ac:	mov    ds:0xaa30c222,al
  4207b1:	jae    0x4207b9
  4207b3:	retf   0x318a
  4207b6:	and    eax,0xcb9d30ac
  4207bb:	(bad)  
  4207bc:	and    eax,0xf2aef898
  4207c1:	jns    0x4207df
  4207c3:	sbb    DWORD PTR [esi+0x24fc31c0],ecx
  4207c9:	aad    0x40
  4207cb:	cdq    
  4207cc:	bound  esp,QWORD PTR [eax]
  4207ce:	sbb    cl,cl
  4207d0:	lds    ebx,FWORD PTR [esi+0x7904fd49]
  4207d6:	add    al,0xa5
  4207d8:	sub    WORD PTR [bp+0x36],sp
  4207dd:	pop    es
  4207de:	test   DWORD PTR [edx-0xd],edi
  4207e1:	retf   
  4207e2:	cmp    BYTE PTR ds:0xa905aa89,al
  4207e8:	in     eax,dx
  4207e9:	iret   
  4207ea:	cmp    BYTE PTR [edi+ebx*2-0x3f],bh
  4207ee:	(bad)  
  4207ef:	(bad)  
  4207f0:	in     eax,0x5a
  4207f2:	add    al,0x6
  4207f4:	inc    ebp
  4207f5:	xchg   BYTE PTR [ecx],bl
  4207f7:	mov    al,al
  4207f9:	xchg   DWORD PTR [edx-0x67635a50],esi
  4207ff:	jmp    0x2e6d6a95
  420804:	cs push 0x67d57abc
  42080a:	icebp  
  42080b:	mov    ds:0x83b08fa7,eax
  420810:	jmp    0x7df5cd6
  420815:	outs   dx,BYTE PTR gs:[esi]
  420817:	sub    BYTE PTR [ecx+edi*8+0xd],bh
  42081b:	or     eax,0x9c64a5c6
  420820:	in     eax,dx
  420821:	and    eax,0xcf705738
  420826:	enter  0xb30f,0xc
  42082a:	sub    dl,bh
  42082c:	or     eax,0xcc6e3f8f
  420831:	jmp    0xaaa8774
  420836:	ret    0xc0fc
  420839:	cwde   
  42083a:	mov    al,bh
  42083c:	inc    edx
  42083d:	imul   edi,ecx,0xffffffb6
  420840:	outs   dx,DWORD PTR ds:[esi]
  420841:	not    DWORD PTR [eax+edi*8+0x3]
  420845:	xor    bh,BYTE PTR [edx+0x50]
  420848:	not    ebp
  42084a:	xchg   BYTE PTR [eax+0x40d65600],bh
  420850:	es (bad) 
  420852:	jb     0x420856
  420854:	aad    0x54
  420856:	mov    bl,0x55
  420858:	mov    ?,edi
  42085a:	scas   eax,DWORD PTR es:[edi]
  42085b:	push   eax
  42085c:	pop    esp
  42085d:	mov    ebx,0x93131f75
  420862:	sar    BYTE PTR [ebp+0x2d803369],0x6b
  420869:	xchg   edx,eax
  42086a:	call   FWORD PTR [eax]
  42086c:	push   ebx
  42086d:	in     al,0x6b
  42086f:	hlt    
  420870:	inc    edx
  420871:	jno    0x420875
  420873:	push   ds
  420874:	mov    ebx,0xe0bf1f25
  420879:	repz xor eax,0xf0c71648
  42087f:	mov    WORD PTR [eax+0x1b911328],es
  420885:	leave  
  420886:	mov    al,0x30
  420888:	fucomp st(5)
  42088a:	(bad)
  42088d:	inc    esp
  42088e:	adc    al,0x60
  420890:	dec    ebp
  420891:	shl    BYTE PTR [eax],0xdf
  420894:	test   eax,0xa9d44028
  420899:	push   ds
  42089a:	in     al,dx
  42089b:	aam    0x7a
  42089d:	inc    ebx
  42089e:	jnp    0x4208e7
  4208a0:	or     eax,0x670f6e22
  4208a5:	cmp    BYTE PTR [ecx-0x7a],dl
  4208a8:	pop    edi
  4208a9:	aas    
  4208aa:	mov    ah,0x2
  4208ac:	aas    
  4208ad:	mov    WORD PTR [edi],cs
  4208af:	int3   
  4208b0:	push   cs
  4208b1:	xchg   edx,eax
  4208b2:	push   ebp
  4208b3:	test   esi,ecx
  4208b5:	das    
  4208b6:	out    dx,eax
  4208b7:	(bad)
  4208ba:	mov    dl,BYTE PTR [edi-0x3c]
  4208bd:	cmp    al,BYTE PTR [esi-0x65]
  4208c0:	xlat   BYTE PTR ds:[ebx]
  4208c1:	mov    edi,0xc67cd0f7
  4208c6:	mov    al,0x69
  4208c8:	xchg   esi,eax
  4208c9:	fcomp  DWORD PTR [edx+ebx*8]
  4208cc:	inc    edi
  4208cd:	sahf   
  4208ce:	je     0x420899
  4208d0:	jno    0x4208ba
  4208d2:	(bad)  
  4208d3:	in     al,dx
  4208d4:	inc    BYTE PTR [ecx-0x41]
  4208d7:	test   DWORD PTR [ecx+0x5b],esp
  4208da:	mov    al,0xb4
  4208dc:	les    edi,FWORD PTR [ecx]
  4208de:	sbb    al,0xa0
  4208e0:	sub    ecx,DWORD PTR [edx+0x2b702a56]
  4208e6:	(bad)  
  4208e7:	imul   eax,DWORD PTR [eax+0x69],0x39
  4208eb:	push   esi
  4208ec:	lods   eax,DWORD PTR ds:[esi]
  4208ed:	daa    
  4208ee:	fldlg2 
  4208f0:	jle    0x4208f1
  4208f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f3:	bound  ecx,QWORD PTR [eax-0x7c3454d9]
  4208f9:	adc    al,0x11
  4208fb:	push   ebp
  4208fc:	test   BYTE PTR [edx+edx*2-0x25],al
  420900:	or     bl,dl
  420902:	xchg   esi,eax
  420903:	gs inc ecx
  420905:	add    al,0x29
  420907:	cmp    edi,edx
  420909:	push   ebx
  42090a:	je     0x420927
  42090c:	sar    DWORD PTR [edx],0x75
  42090f:	xchg   esp,eax
  420910:	ins    DWORD PTR es:[edi],dx
  420911:	test   DWORD PTR ds:0xd49910ec,ecx
  420917:	test   al,0xf8
  420919:	popf   
  42091a:	out    0xcd,al
  42091c:	ins    DWORD PTR es:[edi],dx
  42091d:	and    BYTE PTR [edx-0x39ecb0fb],ch
  420923:	loop   0x420960
  420925:	push   ds
  420926:	xchg   edi,eax
  420927:	out    dx,eax
  420928:	jecxz  0x420919
  42092a:	xchg   DWORD PTR cs:[ebx+0x6ec1c445],edx
  420931:	jb     0x4208da
  420933:	pop    edi
  420934:	call   DWORD PTR [ebx+0x4b]
  420937:	ja     0x42096c
  420939:	cdq    
  42093a:	stos   BYTE PTR es:[edi],al
  42093b:	rcl    esp,0x9c
  42093e:	dec    edx
  42093f:	mov    ebp,0x6abfa606
  420944:	mov    ds:0xbfd454f4,al
  420949:	inc    ecx
  42094a:	lods   eax,DWORD PTR ds:[esi]
  42094b:	loope  0x4208f9
  42094d:	(bad)
  420950:	mov    al,ds:0xf3d3911e
  420955:	fld    TBYTE PTR [ebx+edi*2+0x5824d248]
  42095c:	jns    0x420942
  42095e:	push   ebx
  42095f:	cmp    bh,BYTE PTR [edi+0x59138f3d]
  420965:	(bad)  
  420966:	jno    0x4209be
  420968:	and    al,0x23
  42096a:	jns    0x42094c
  42096c:	mov    eax,0xc8ec3d69
  420971:	add    ebx,DWORD PTR [ecx+ebx*4-0x48]
  420975:	pop    eax
  420976:	js     0x4209a0
  420978:	ret    
  420979:	out    dx,al
  42097a:	xchg   ebp,eax
  42097b:	retf   
  42097c:	sar    DWORD PTR [edi+0x44],cl
  42097f:	or     edx,DWORD PTR [edi-0x11]
  420982:	mov    al,0xb6
  420984:	aaa    
  420985:	add    DWORD PTR [edi-0x3c],esi
  420988:	push   ecx
  420989:	jmp    0x4209ab
  42098b:	lock mov ch,0xe6
  42098e:	retf   
  42098f:	xchg   esi,eax
  420990:	mov    eax,0xc47ba69b
  420995:	xchg   edx,eax
  420996:	mov    cl,BYTE PTR [ebx+0x4c]
  420999:	clc    
  42099a:	add    BYTE PTR [ebp+0x15],dl
  42099d:	cmovle edi,DWORD PTR [bp+0xf87]
  4209a3:	xlat   BYTE PTR ds:[ebx]
  4209a4:	inc    edi
  4209a5:	push   esi
  4209a6:	mov    WORD PTR [ebp-0x455a1f0a],es
  4209ac:	mov    ebx,0x8317d7f2
  4209b1:	inc    ecx
  4209b2:	sbb    esp,DWORD PTR [eax+0x67]
  4209b5:	sub    esi,eax
  4209b7:	mov    al,0x6e
  4209b9:	int    0x19
  4209bb:	data16 fcomip st,st(0)
  4209be:	test   DWORD PTR [ebx-0x6ceb8c79],0xd9b5e479
  4209c8:	mov    ah,0x32
  4209ca:	cmc    
  4209cb:	jmp    0x42095c
  4209cd:	(bad)  
  4209ce:	mov    ds:0x26271443,al
  4209d3:	pop    esp
  4209d4:	xor    al,bl
  4209d6:	popf   
  4209d7:	inc    ebp
  4209d8:	jo     0x420981
  4209da:	push   es
  4209db:	or     al,0x9f
  4209dd:	div    DWORD PTR [esi-0x4eb3ee7]
  4209e3:	xor    ebp,0xe82626fa
  4209e9:	test   al,0x41
  4209eb:	dec    ebp
  4209ec:	lods   al,BYTE PTR ds:[esi]
  4209ed:	xor    eax,eax
  4209ef:	add    dh,ch
  4209f1:	fidiv  WORD PTR [ebx-0x6a27fc3a]
  4209f7:	push   es
  4209f8:	in     eax,0xaf
  4209fa:	mov    ah,0x40
  4209fc:	ins    BYTE PTR es:[edi],dx
  4209fd:	add    dl,BYTE PTR [esi-0x3e]
  420a00:	mov    ecx,ecx
  420a02:	sbb    al,0x4e
  420a04:	arpl   WORD PTR es:[ebx+0x55],cx
  420a08:	jmp    0x4209b2
  420a0a:	mov    WORD PTR [edi],fs
  420a0c:	xchg   BYTE PTR [eax-0x17dcd612],cl
  420a12:	out    0xcd,al
  420a14:	sti    
  420a15:	(bad)  
  420a16:	not    BYTE PTR [eax-0x205698a7]
  420a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a1d:	shl    cl,cl
  420a1f:	les    edx,FWORD PTR es:[esi]
  420a22:	aas    
  420a23:	shr    DWORD PTR [ebp-0x6a3f1eaf],1
  420a29:	sbb    al,0xd8
  420a2b:	xor    DWORD PTR [ebp+0x4d],0xd1e343e1
  420a32:	fcmove st,st(7)
  420a34:	mov    edi,0x9f3dc0c
  420a39:	(bad)  
  420a3a:	push   ds
  420a3b:	sbb    esp,DWORD PTR [eax+0x61e27dc3]
  420a41:	xchg   ecx,eax
  420a42:	bound  edi,QWORD PTR [ecx]
  420a44:	ja     0x420a08
  420a46:	sub    DWORD PTR [ecx-0x5e],0x5f
  420a4a:	xchg   BYTE PTR [ecx+0x71],bh
  420a4d:	ss ret 
  420a4f:	test   edi,ebp
  420a51:	add    ah,BYTE PTR [esi]
  420a53:	jbe    0x420aad
  420a55:	icebp  
  420a56:	(bad)  
  420a57:	mov    al,ds:0xcb29c0e9
  420a5c:	mov    esi,0x125f99c
  420a61:	jmp    0x420ab6
  420a63:	stc    
  420a64:	ins    DWORD PTR es:[edi],dx
  420a65:	loope  0x420aaf
  420a67:	jne    0x420a12
  420a69:	sub    DWORD PTR [eax],esp
  420a6b:	dec    eax
  420a6c:	das    
  420a6d:	loopne 0x420acd
  420a6f:	mov    di,si
  420a72:	pushf  
  420a73:	arpl   WORD PTR [esi+edi*4+0x55],di
  420a77:	fcomp  st(3)
  420a79:	add    DWORD PTR [edi],0x1f
  420a7c:	outs   dx,DWORD PTR ds:[esi]
  420a7d:	sbb    al,ch
  420a7f:	jg     0x420a56
  420a81:	fisub  DWORD PTR [ebp-0x7c]
  420a84:	rcl    BYTE PTR [eax-0x3bf11a94],cl
  420a8a:	jmp    0x420a61
  420a8c:	lea    esi,[esi+ebp*8-0x61]
  420a90:	pushf  
  420a91:	inc    ebx
  420a92:	xchg   ebp,eax
  420a93:	stos   DWORD PTR es:[edi],eax
  420a94:	xchg   DWORD PTR [eax],eax
  420a96:	push   edx
  420a97:	and    edi,DWORD PTR ds:0x26d68ffb
  420a9d:	fcmovnbe st,st(6)
  420a9f:	sahf   
  420aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa1:	or     DWORD PTR [esi],esi
  420aa3:	and    cl,BYTE PTR [edx-0x1a]
  420aa6:	frstor [eax+0x41bf66c2]
  420aac:	xlat   BYTE PTR ds:[ebx]
  420aad:	fisttp WORD PTR [eax+0x3b]
  420ab0:	sub    BYTE PTR ds:0x39e4dbbb,al
  420ab6:	push   esp
  420ab7:	shl    DWORD PTR [esi+0x44],1
  420aba:	repz imul ebx,eax,0xffffff95
  420abe:	dec    eax
  420abf:	pop    ss
  420ac0:	push   ebx
  420ac1:	lods   eax,DWORD PTR ds:[esi]
  420ac2:	stos   BYTE PTR es:[edi],al
  420ac3:	scas   al,BYTE PTR es:[edi]
  420ac4:	fidivr WORD PTR [esi]
  420ac6:	(bad)  
  420ac7:	adc    ebx,esp
  420ac9:	das    
  420aca:	shr    BYTE PTR [ecx-0x5ce13df4],0x4b
  420ad1:	pop    edi
  420ad2:	cmp    BYTE PTR [eax],bl
  420ad4:	adc    cl,bl
  420ad6:	dec    eax
  420ad7:	cli    
  420ad8:	call   0xb610701a
  420add:	mov    al,ds:0xd9841e78
  420ae2:	jb     0x420b3b
  420ae4:	and    eax,0xf28d5974
  420ae9:	or     DWORD PTR [edi-0x3ca87efa],ebp
  420aef:	test   bh,ah
  420af1:	jmp    0xac11:0x2671b9c6
  420af8:	ss retf 
  420afa:	rcl    BYTE PTR [ebp-0xd52aa0b],cl
  420b00:	ds or  al,0xa
  420b03:	mov    dh,BYTE PTR [ecx-0x7e]
  420b06:	xor    DWORD PTR [edx-0x54ce28e0],eax
  420b0c:	xchg   edx,eax
  420b0d:	lds    esp,FWORD PTR [ebx-0x24a63c8]
  420b13:	or     esp,DWORD PTR [edi]
  420b15:	mov    eax,?
  420b17:	lods   eax,DWORD PTR ds:[esi]
  420b18:	mov    bh,0x7a
  420b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b1b:	aad    0xf9
  420b1d:	xchg   esp,eax
  420b1e:	repnz inc ebp
  420b20:	push   edx
  420b21:	pushf  
  420b22:	fst    QWORD PTR [ebx+0x400f1b82]
  420b28:	nop
  420b29:	sub    DWORD PTR [ebx],ebx
  420b2b:	push   edx
  420b2c:	shr    al,0xde
  420b2f:	(bad)
  420b33:	ficomp DWORD PTR [edi+0x9c2d8e7]
  420b39:	pop    edi
  420b3a:	push   ecx
  420b3b:	push   0xfffffff7
  420b3d:	shr    DWORD PTR [ebx],cl
  420b3f:	cdq    
  420b40:	popf   
  420b41:	xchg   DWORD PTR [eax+edi*4],ecx
  420b44:	xchg   DWORD PTR [ebx+0xf],eax
  420b47:	pop    ecx
  420b48:	dec    ecx
  420b49:	fst    QWORD PTR [eax-0xfc82b27]
  420b4f:	cs daa 
  420b51:	fisttp WORD PTR [eax-0xb6bff2b]
  420b57:	add    ebp,DWORD PTR [edi+0x74]
  420b5a:	shl    BYTE PTR [ebx],cl
  420b5c:	test   eax,0x896590e0
  420b61:	(bad)  
  420b62:	xchg   esp,eax
  420b63:	jne    0x420b88
  420b65:	outs   dx,BYTE PTR ds:[esi]
  420b66:	pushf  
  420b67:	push   0xffffffb0
  420b69:	retf   
  420b6a:	cmp    edx,ecx
  420b6c:	adc    DWORD PTR [ebx+0x3f],eax
  420b6f:	and    eax,0x18d3d5ae
  420b74:	fdivr  QWORD PTR [edx-0x5c]
  420b77:	pusha  
  420b78:	mov    eax,0xc3a3952c
  420b7d:	comiss xmm7,DWORD PTR [edi]
  420b80:	mov    ah,0x81
  420b82:	sbb    edx,DWORD PTR [edx-0x30]
  420b85:	sub    eax,0x7dc00d6
  420b8a:	js     0x420c0a
  420b8c:	adc    BYTE PTR [edx+ebx*1-0x71],bl
  420b90:	sbb    dl,BYTE PTR [edx]
  420b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b93:	push   cs
  420b94:	jmp    0x6e0d:0x966c2115
  420b9b:	pop    edi
  420b9c:	cdq    
  420b9d:	jecxz  0x420bc5
  420b9f:	sub    ah,ch
  420ba1:	out    dx,al
  420ba2:	test   eax,0x3c341572
  420ba7:	jmp    0x3003:0x59957806
  420bae:	jmp    0x3d2:0xb0f42215
  420bb5:	das    
  420bb6:	loope  0x420b93
  420bb8:	sbb    al,0xf1
  420bba:	pop    ebx
  420bbb:	xchg   esp,eax
  420bbc:	iret   
  420bbd:	mov    ebp,DWORD PTR [eax-0x21]
  420bc0:	outs   dx,BYTE PTR ds:[esi]
  420bc1:	cld    
  420bc2:	jae    0x420bde
  420bc4:	(bad)  
  420bc6:	and    al,0x1c
  420bc8:	jno    0x420b76
  420bca:	jb     0x420ba2
  420bcc:	or     ch,BYTE PTR [edi-0x13]
  420bcf:	pop    esi
  420bd0:	and    BYTE PTR [ecx],bh
  420bd2:	pop    ss
  420bd3:	jl     0x420b82
  420bd5:	stos   DWORD PTR es:[edi],eax
  420bd6:	fs cdq 
  420bd8:	cmp    DWORD PTR [eax+ebx*8],edi
  420bdb:	pop    ds
  420bdc:	dec    ecx
  420bdd:	or     ebp,DWORD PTR [eax]
  420bdf:	dec    edx
  420be0:	push   DWORD PTR [ebx-0x19]
  420be3:	inc    ebp
  420be4:	mov    al,ds:0x26222fd6
  420be9:	add    bl,BYTE PTR [edx+0x584e109b]
  420bef:	pop    ss
  420bf0:	aad    0x2b
  420bf2:	dec    eax
  420bf3:	test   al,0xa6
  420bf5:	adc    esp,DWORD PTR [ecx]
  420bf7:	shl    DWORD PTR [edx-0x31299574],1
  420bfd:	dec    ebp
  420bfe:	aas    
  420bff:	dec    esi
  420c00:	mov    al,ds:0xbe130120
  420c05:	jae    0x420c31
  420c07:	hlt    
  420c08:	out    dx,eax
  420c09:	push   0x4e
  420c0b:	pushf  
  420c0c:	aaa    
  420c0d:	mov    edi,0x8467c598
  420c12:	lahf   
  420c13:	int    0xc2
  420c15:	cmp    DWORD PTR [eax-0x4e71e1c4],0xffffff8d
  420c1c:	xor    DWORD PTR [edx],0xe7e78c06
  420c22:	rcl    DWORD PTR [ebx],1
  420c24:	dec    ebp
  420c25:	adc    ecx,0xffffffb0
  420c28:	mov    edx,0x17e8d18a
  420c2d:	mov    ebx,esp
  420c2f:	retf   
  420c30:	sbb    al,0x3d
  420c32:	lods   eax,DWORD PTR ds:[esi]
  420c33:	or     eax,0xc2caba35
  420c38:	shl    BYTE PTR [edx],cl
  420c3a:	lock pop ebx
  420c3c:	je     0x420c54
  420c3e:	jmp    0x767a:0x40c00c44
  420c45:	jne    0x420c3d
  420c47:	ror    DWORD PTR ds:0x6250e00a,0xa0
  420c4e:	inc    esp
  420c4f:	sbb    eax,0x57ec6143
  420c54:	aam    0x23
  420c56:	adc    ecx,DWORD PTR [ecx]
  420c58:	pop    ebp
  420c59:	sahf   
  420c5a:	xchg   ebp,eax
  420c5b:	in     eax,dx
  420c5c:	imul   edi,DWORD PTR [edx],0xfffffffa
  420c5f:	into   
  420c60:	cmp    cl,al
  420c62:	repnz mov esp,DWORD PTR [edi+0x3916566c]
  420c69:	dec    ecx
  420c6a:	push   ds
  420c6b:	xor    ebp,DWORD PTR [eax-0x22]
  420c6e:	cwde   
  420c6f:	inc    ebx
  420c70:	add    ebx,ecx
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0x52f5b857]
  420c80:	mov    dl,0xaa
  420c82:	pop    ecx
  420c83:	xchg   DWORD PTR [ecx],eax
  420c85:	add    al,bh
  420c87:	add    al,0x0
  420c89:	add    ah,dl
  420c8b:	out    dx,eax
  420c8c:	xchg   edi,eax
  420c8d:	xchg   edx,eax
  420c8e:	jmp    0x9dbfd739
  420c93:	mov    edx,0x5aaecee1
  420c98:	adc    al,0xe1
  420c9a:	mov    ch,0xe8
  420c9c:	ins    DWORD PTR es:[edi],dx
  420c9d:	sub    DWORD PTR [edi],edx
  420c9f:	add    esp,esi
  420ca1:	mov    al,0x71
  420ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ca4:	push   ecx
  420ca5:	(bad)  
  420ca7:	ins    DWORD PTR es:[edi],dx
  420ca8:	pop    ss
  420ca9:	mov    ebp,0x5effa847
  420cae:	out    0x42,eax
  420cb0:	repz je 0x420c4a
  420cb3:	int    0x8a
  420cb5:	fisubr DWORD PTR fs:[eax+0xfa62f08]
  420cbc:	pop    es
  420cbd:	and    eax,0xd22afe6c
  420cc2:	ins    DWORD PTR es:[edi],dx
  420cc3:	fneni(8087 only) 
  420cc5:	(bad)  
  420cc6:	(bad)  
  420cc7:	xor    esi,DWORD PTR ds:0xe9dfc4c2
  420ccd:	adc    esp,ebp
  420ccf:	xchg   edx,eax
  420cd0:	push   ebx
  420cd1:	scas   eax,DWORD PTR es:[edi]
  420cd2:	scas   al,BYTE PTR es:[edi]
  420cd3:	sbb    eax,esi
  420cd5:	dec    ebx
  420cd6:	push   ebx
  420cd7:	sti    
  420cd8:	and    esi,eax
  420cda:	jae    0x420c78
  420cdc:	das    
  420cdd:	sbb    eax,DWORD PTR [esi-0x11]
  420ce0:	jmp    0x420cea
  420ce2:	dec    esi
  420ce3:	mov    al,0x5f
  420ce5:	sub    BYTE PTR [esi+0xb5ea94a],bl
  420ceb:	jp     0x420c7b
  420ced:	push   ebx
  420cee:	cmp    ebp,eax
  420cf0:	pop    edx
  420cf1:	adc    edi,esp
  420cf3:	out    dx,eax
  420cf4:	(bad)  
  420cf5:	cmp    eax,ecx
  420cf7:	dec    edx
  420cf8:	fldcw  WORD PTR [ebp-0x31b9b0d3]
  420cfe:	pop    esi
  420cff:	mov    DWORD PTR [esi+0x40],ecx
  420d02:	add    eax,0x544a7e15
  420d07:	xchg   edi,eax
  420d08:	ja     0x420cca
  420d0a:	jmp    0x420d80
  420d0c:	hlt    
  420d0d:	ror    BYTE PTR [esi+0x63257c64],0x34
  420d14:	test   dl,bl
  420d16:	je     0x420cc5
  420d18:	aaa    
  420d19:	push   ss
  420d1a:	pop    ecx
  420d1b:	js     0x420d5c
  420d1d:	pop    ebx
  420d1e:	ds repnz cmc 
  420d21:	xor    esi,eax
  420d23:	dec    sp
  420d25:	call   0xbfdf2252
  420d2a:	mov    ds:0x7fb7102,al
  420d2f:	leave  
  420d30:	cmp    bh,BYTE PTR [ebx]
  420d32:	bound  esi,QWORD PTR [ecx]
  420d34:	pushf  
  420d35:	hlt    
  420d36:	dec    edx
  420d37:	jne    0x420cd4
  420d39:	fnstsw WORD PTR [ebp-0x5f]
  420d3c:	mov    edx,0xd2a8e888
  420d41:	fdivr  DWORD PTR [ecx+0xd]
  420d44:	push   ebx
  420d45:	(bad)  
  420d46:	in     eax,0xd9
  420d48:	xchg   edi,eax
  420d49:	mov    ch,0x17
  420d4b:	rcr    bl,1
  420d4d:	and    BYTE PTR [ecx],bl
  420d4f:	mov    dl,0x4e
  420d51:	jne    0x420d6b
  420d53:	and    eax,0x17a80667
  420d58:	xor    DWORD PTR [edi+0x1921fae5],eax
  420d5e:	idiv   DWORD PTR [ecx+esi*4+0x46]
  420d62:	outs   dx,BYTE PTR ds:[esi]
  420d63:	in     eax,0x33
  420d65:	ins    DWORD PTR es:[edi],dx
  420d66:	mov    es,WORD PTR [eax]
  420d68:	add    al,0x78
  420d6a:	and    DWORD PTR [edi+0x60],eax
  420d6d:	adc    ch,BYTE PTR [eax]
  420d6f:	mov    ebx,0xabe67ea1
  420d74:	pop    ecx
  420d75:	std    
  420d76:	ja     0x420d4f
  420d78:	shl    BYTE PTR [eax-0x1eba2c58],cl
  420d7e:	fcomp  st(2)
  420d80:	mov    ebp,0x8d008166
  420d85:	pop    ds
  420d86:	add    eax,0x3659202d
  420d8b:	jecxz  0x420def
  420d8d:	ret    
  420d8e:	cmp    BYTE PTR [ecx+0x68],al
  420d91:	dec    esi
  420d92:	cmp    BYTE PTR [eax+0x74],cl
  420d95:	and    BYTE PTR [ebp-0x76921a26],dh
  420d9b:	pusha  
  420d9c:	inc    edx
  420d9d:	addr16 xchg esi,eax
  420d9f:	out    dx,eax
  420da0:	or     al,bl
  420da2:	jmp    0x15f6:0xa26f7b13
  420da9:	hlt    
  420daa:	or     edi,DWORD PTR [esi+0x79]
  420dad:	js     0x420e26
  420daf:	das    
  420db0:	ja     0x420de9
  420db2:	xchg   DWORD PTR [ecx],esp
  420db4:	int3   
  420db5:	cmp    bh,BYTE PTR gs:[esp+edi*4]
  420db9:	stos   BYTE PTR es:[edi],al
  420dba:	stos   BYTE PTR es:[edi],al
  420dbb:	and    ah,BYTE PTR [ecx+ecx*1-0x5b]
  420dbf:	test   eax,0x7098c84d
  420dc4:	arpl   WORD PTR [edi+0x39ed5de8],si
  420dca:	lahf   
  420dcb:	cmp    eax,0x3053e678
  420dd0:	dec    esi
  420dd1:	out    0x66,al
  420dd3:	clc    
  420dd4:	and    ecx,DWORD PTR [ebx-0x25]
  420dd7:	push   es
  420dd8:	mov    dl,0xf0
  420dda:	push   eax
  420ddb:	mov    bh,0xe9
  420ddd:	scas   al,BYTE PTR es:[edi]
  420dde:	cld    
  420ddf:	dec    edx
  420de0:	mov    ebx,cs
  420de2:	leave  
  420de3:	ins    BYTE PTR es:[edi],dx
  420de4:	fisubr DWORD PTR [edx+0x4fa697ae]
  420dea:	(bad)  
  420deb:	out    0xca,eax
  420ded:	and    BYTE PTR ds:0x639e129,0x9d
  420df4:	xchg   DWORD PTR [ecx],ebx
  420df6:	jmp    0x2601:0x46e8f177
  420dfd:	(bad)  
  420dfe:	xor    al,bh
  420e00:	sub    edi,DWORD PTR [edi+esi*2-0x3f]
  420e04:	or     eax,0xefa32316
  420e09:	or     BYTE PTR [esi-0x73],bh
  420e0c:	add    edi,esi
  420e0e:	shr    BYTE PTR [ebp-0x6e],1
  420e11:	mov    ecx,0xb3537381
  420e16:	jge    0x420dbf
  420e18:	mov    ebp,?
  420e1a:	jg     0x420dce
  420e1c:	or     al,bl
  420e1e:	add    BYTE PTR [edx+0x6a],cl
  420e21:	shl    bh,1
  420e23:	test   DWORD PTR [eax],0xeb67307a
  420e29:	push   0xffffffb0
  420e2b:	scas   al,BYTE PTR es:[edi]
  420e2c:	lods   eax,DWORD PTR ds:[esi]
  420e2d:	cmc    
  420e2e:	or     DWORD PTR [ebx],ebp
  420e30:	mov    eax,0xdd5ccbdf
  420e35:	sub    al,0x1b
  420e37:	outs   dx,DWORD PTR ds:[esi]
  420e38:	ss int3 
  420e3a:	daa    
  420e3b:	dec    edi
  420e3c:	push   esi
  420e3d:	mov    esp,0x65eff2dc
  420e42:	mov    esi,0x7dfdf87f
  420e47:	(bad)  
  420e48:	cmp    esp,DWORD PTR [esi-0x1595878a]
  420e4e:	in     eax,0xc8
  420e50:	jo     0x420ec7
  420e52:	cmp    cl,BYTE PTR [edx+0x74]
  420e55:	int3   
  420e56:	lods   al,BYTE PTR ds:[esi]
  420e57:	or     DWORD PTR [esi+eiz*4-0x4280f6da],esi
  420e5e:	ss pop edx
  420e60:	je     0x420ec3
  420e62:	ins    DWORD PTR es:[edi],dx
  420e63:	lods   al,BYTE PTR ds:[esi]
  420e64:	jnp    0x420ea9
  420e66:	inc    ecx
  420e67:	push   esp
  420e68:	in     eax,0x87
  420e6a:	imul   ebx,ebx,0x33
  420e6d:	cmc    
  420e6e:	sahf   
  420e6f:	ret    0x2b75
  420e72:	push   ss
  420e73:	jb     0x420ea8
  420e75:	std    
  420e76:	fisub  DWORD PTR [edx+0x10c0898]
  420e7c:	stos   BYTE PTR es:[edi],al
  420e7d:	jne    0x420e60
  420e7f:	data16 int 0xa7
  420e82:	ss mov al,0x8e
  420e85:	push   ds
  420e86:	xchg   ebx,eax
  420e87:	dec    esi
  420e88:	ins    DWORD PTR es:[edi],dx
  420e89:	mov    DWORD PTR [edx-0xbcd0a8b],esp
  420e8f:	call   0xf183:0xecabf6e2
  420e96:	dec    ecx
  420e97:	cmp    ah,BYTE PTR [eax]
  420e99:	(bad)  [edi-0x16]
  420e9c:	jmp    0x2f65:0xa871e909
  420ea3:	mov    al,0xb0
  420ea5:	shl    DWORD PTR [edx-0x75234876],0xae
  420eac:	cmp    dh,BYTE PTR [ecx+0x3c42d44]
  420eb2:	and    BYTE PTR [edi-0x1],ah
  420eb5:	inc    esi
  420eb6:	mov    bl,0xae
  420eb8:	int3   
  420eb9:	ret    0xeb7d
  420ebc:	sbb    DWORD PTR [ebp+0x187993df],esi
  420ec2:	push   cs
  420ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec4:	les    esp,FWORD PTR [eax-0x4c243a05]
  420eca:	mov    ch,0x91
  420ecc:	or     eax,DWORD PTR [ecx-0x2066b90c]
  420ed2:	cmp    al,0x9a
  420ed4:	push   esi
  420ed5:	sahf   
  420ed6:	bound  edi,QWORD PTR [esi+edx*1+0x134c89c4]
  420edd:	jno    0x420e68
  420edf:	push   ebx
  420ee0:	mov    ds,ecx
  420ee2:	sub    eax,0x5fbf3787
  420ee7:	sbb    DWORD PTR [edx],ecx
  420ee9:	inc    edx
  420eea:	inc    esi
  420eeb:	or     al,0x8e
  420eed:	adc    ah,BYTE PTR [esi-0x4dd19ec3]
  420ef3:	push   ds
  420ef4:	push   es
  420ef5:	ds add bl,al
  420ef8:	jl     0x420f4e
  420efa:	retf   0x7c30
  420efd:	pop    ebp
  420efe:	push   esp
  420eff:	test   ecx,eax
  420f01:	(bad)  
  420f02:	jno    0x420f4c
  420f04:	out    dx,al
  420f05:	push   ds
  420f06:	nop
  420f07:	enter  0x73e,0x4e
  420f0b:	shl    DWORD PTR [edi+edi*8-0x68],cl
  420f0f:	mul    DWORD PTR [esi+0x78191bf7]
  420f15:	or     al,0x7e
  420f17:	in     eax,0xdd
  420f19:	cmp    DWORD PTR [ebp+0x3e2fe11d],esi
  420f1f:	jle    0x420ef6
  420f21:	aad    0x8c
  420f23:	inc    ebp
  420f24:	sub    DWORD PTR [esp+eiz*8],edx
  420f27:	pop    ebp
  420f28:	ficom  WORD PTR [ebx]
  420f2a:	ds pop ss
  420f2c:	pop    es
  420f2d:	add    eax,0xd13b1387
  420f32:	dec    eax
  420f33:	and    esp,DWORD PTR [eax+0x2a7dacd1]
  420f39:	dec    esi
  420f3a:	rcl    BYTE PTR [ecx],1
  420f3c:	push   ebx
  420f3d:	lahf   
  420f3e:	jmp    0xcda234a1
  420f43:	stos   DWORD PTR es:[edi],eax
  420f44:	cmp    ecx,DWORD PTR [edi+eax*1+0x2c]
  420f48:	mov    ch,BYTE PTR [eax-0x496357e9]
  420f4e:	mov    al,ds:0x9813a8a8
  420f53:	iret   
  420f54:	pop    eax
  420f55:	test   DWORD PTR [edi],0x7ad980a3
  420f5b:	push   DWORD PTR [eax+0x4d]
  420f5e:	lea    ebx,[eax]
  420f60:	into   
  420f61:	mov    ah,bl
  420f63:	aaa    
  420f64:	ficomp WORD PTR [ecx]
  420f66:	push   0xc0c6ee19
  420f6b:	push   cs
  420f6c:	push   ebp
  420f6d:	pop    es
  420f6e:	pop    edi
  420f6f:	icebp  
  420f70:	xchg   ebp,eax
  420f71:	sbb    DWORD PTR [esp+edi*4],edi
  420f74:	inc    ebx
  420f75:	cld    
  420f76:	mov    al,0xd6
  420f78:	mov    edi,0xf79c2cdd
  420f7d:	pop    esp
  420f7e:	jle    0x420ff5
  420f80:	addr16 (bad) 
  420f82:	push   eax
  420f83:	pop    ebx
  420f84:	call   0x3db7:0xc6196f71
  420f8b:	hlt    
  420f8c:	push   edx
  420f8d:	in     al,0xe4
  420f8f:	test   edi,0x23d51511
  420f95:	call   0x9b5a:0xfd3533c
  420f9c:	add    DWORD PTR [edi],ecx
  420f9e:	push   ebp
  420f9f:	fisub  WORD PTR [edi-0x16d608b6]
  420fa5:	out    dx,al
  420fa6:	enter  0x83c6,0x4a
  420faa:	test   al,0xe
  420fac:	test   eax,0x89f1cb6c
  420fb1:	dec    edx
  420fb2:	into   
  420fb3:	mov    cl,BYTE PTR [eax-0x32ffed1c]
  420fb9:	sub    ebp,DWORD PTR es:[ebx*2-0x3a91be9a]
  420fc1:	stos   DWORD PTR es:[edi],eax
  420fc2:	mov    ah,bl
  420fc4:	out    0x5e,eax
  420fc6:	or     esi,DWORD PTR [esi-0x6f183ad8]
  420fcc:	sub    DWORD PTR [ecx-0x3a],ecx
  420fcf:	mov    ebx,0x3f551462
  420fd4:	and    bh,ch
  420fd6:	dec    ebx
  420fd7:	pop    ebx
  420fd8:	adc    al,0x80
  420fda:	jp     0x420f99
  420fdc:	add    al,bh
  420fde:	dec    ebx
  420fdf:	cmp    BYTE PTR [edi+0x69],0x69
  420fe3:	int3   
  420fe4:	aaa    
  420fe5:	sbb    bl,cl
  420fe7:	ror    DWORD PTR ds:0xcbe46e3e,1
  420fed:	lahf   
  420fee:	mov    ch,BYTE PTR [esp+edi*4-0x8058e5b]
  420ff5:	or     eax,DWORD PTR [ebx+eiz*4+0x37]
  420ff9:	cmc    
  420ffa:	cwde   
  420ffb:	call   0xbc5:0xe1298687
  421002:	aam    0x19
  421004:	popf   
  421005:	iret   
  421006:	mov    al,ds:0x512db64a
  42100b:	jns    0x421081
  42100d:	jno    0x42102e
  42100f:	jno    0x420fbf
  421011:	dec    ebx
  421012:	mov    cl,0x86
  421014:	xchg   esi,eax
  421015:	mov    dl,0x79
  421017:	dec    edi
  421018:	aas    
  421019:	push   esp
  42101a:	push   ecx
  42101b:	sar    ecx,cl
  42101d:	fadd   DWORD PTR [esi+edx*2]
  421020:	or     edi,DWORD PTR [eax-0x3e75ca06]
  421026:	mul    BYTE PTR [eax]
  421028:	adc    eax,DWORD PTR [ebp-0x2248c38f]
  42102e:	and    eax,esp
  421030:	ds push ecx
  421032:	test   eax,0x684e6939
  421037:	in     al,dx
  421038:	push   eax
  421039:	cmp    BYTE PTR [ecx],cl
  42103b:	jmp    0xa6d4:0xb4b39424
  421042:	pop    ecx
  421043:	jl     0x421079
  421045:	jno    0x42105c
  421047:	adc    BYTE PTR [eax+0x7c],cl
  42104a:	push   ds
  42104b:	xchg   esi,eax
  42104c:	inc    edi
  42104d:	stos   BYTE PTR es:[edi],al
  42104e:	loopne 0x42101b
  421050:	int    0x92
  421052:	rol    BYTE PTR [edi],0xb5
  421055:	sbb    DWORD PTR [edi],eax
  421057:	or     dl,dl
  421059:	div    DWORD PTR [ecx-0x3b]
  42105c:	sub    ebx,DWORD PTR [ebx]
  42105e:	pop    ds
  42105f:	(bad)  
  421061:	lds    esp,FWORD PTR [ebp+0x31]
  421064:	(bad)
  421069:	fldenv [esi-0x4b42c51e]
  42106f:	or     cl,BYTE PTR [edi-0x43439987]
  421075:	push   eax
  421076:	(bad)  
  421077:	es pop ds
  421079:	push   ecx
  42107a:	xor    ch,BYTE PTR ds:0x5625fa85
  421080:	out    0x86,eax
  421082:	in     al,0x94
  421084:	jle    0x42107e
  421086:	lock (bad) 
  421088:	jg     0x421018
  42108a:	outs   dx,DWORD PTR ds:[esi]
  42108b:	inc    ebp
  42108c:	or     BYTE PTR ds:0xfed35724,dl
  421092:	push   esi
  421093:	mov    cs,WORD PTR [edi]
  421095:	fs mov bl,0x1c
  421098:	pop    esp
  421099:	mov    edi,0x8331e95
  42109e:	dec    esp
  42109f:	mov    eax,0xaaa71b81
  4210a4:	mov    al,cs:0xb61c876
  4210aa:	xchg   esi,eax
  4210ab:	lods   al,BYTE PTR ds:[esi]
  4210ac:	sbb    DWORD PTR [edi],ebx
  4210ae:	iret   
  4210af:	mov    WORD PTR [esp+eax*2+0x46],fs
  4210b3:	je     0x421132
  4210b5:	jl     0x421129
  4210b7:	jle    0x421047
  4210b9:	ret    0xbb63
  4210bc:	or     al,0xd5
  4210be:	jae    0x421075
  4210c0:	and    al,0xba
  4210c2:	sub    ebp,esp
  4210c4:	pop    es
  4210c5:	sub    al,0xa9
  4210c7:	mov    ah,0xf5
  4210c9:	aam    0x5e
  4210cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210cc:	mov    eax,0x162cb120
  4210d1:	adc    dl,bl
  4210d3:	repnz and DWORD PTR [ebp+0x13669f4e],0x7bfc4904
  4210de:	jecxz  0x4210ed
  4210e0:	push   edi
  4210e1:	gs (bad) 
  4210e4:	rcr    ebx,1
  4210e6:	in     eax,dx
  4210e7:	or     eax,0x36f018df
  4210ec:	aaa    
  4210ed:	loopne 0x421137
  4210ef:	int3   
  4210f0:	mov    eax,0x64f52f48
  4210f5:	sahf   
  4210f6:	dec    edx
  4210f7:	pop    ss
  4210f8:	aam    0x87
  4210fa:	test   eax,0x7bb8129
  4210ff:	inc    eax
  421100:	arpl   sp,si
  421102:	mov    eax,edx
  421104:	mov    ds:0x93db1ac6,eax
  421109:	cs inc edx
  42110b:	sbb    BYTE PTR [esi+0x5d],cl
  42110e:	pop    edi
  42110f:	rcl    ecx,cl
  421111:	jno    0x4210dc
  421113:	into   
  421114:	(bad)  
  421115:	adc    eax,eax
  421117:	out    dx,al
  421118:	ins    BYTE PTR es:[edi],dx
  421119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42111a:	shl    al,cl
  42111c:	out    dx,al
  42111d:	xchg   edx,eax
  42111e:	jo     0x4210f5
  421120:	or     DWORD PTR [esi],ebx
  421122:	imul   ecx,ecx,0xffffff96
  421125:	pop    ds
  421126:	jge    0x4210c6
  421128:	test   eax,0xbacd4c0c
  42112d:	xchg   edi,eax
  42112e:	test   edi,ebx
  421130:	sub    esi,eax
  421132:	outs   dx,BYTE PTR ds:[esi]
  421133:	jno    0x4210d9
  421135:	xor    dh,BYTE PTR [edi-0x13]
  421138:	mov    eax,0xc1ad9e6f
  42113d:	push   esi
  42113e:	ss repz dec eax
  421141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421142:	icebp  
  421143:	or     al,0x6d
  421145:	and    al,0x63
  421147:	bound  ecx,QWORD PTR [esi-0x6873aef]
  42114d:	lods   al,BYTE PTR ds:[esi]
  42114e:	jle    0x4211b6
  421150:	pop    eax
  421151:	lea    ecx,[edx+0x47e85899]
  421157:	or     ebp,esi
  421159:	and    bh,ah
  42115b:	sbb    esi,esp
  42115d:	jne    0x421100
  42115f:	shl    DWORD PTR [ebp+eiz*1-0x50999ca8],1
  421166:	popa   
  421167:	xor    DWORD PTR [ecx-0x17],0x75
  42116b:	mov    bh,0x6a
  42116d:	push   ds
  42116e:	xchg   DWORD PTR [ebx-0x7c],esp
  421171:	repnz mov bl,0xb3
  421174:	push   ds
  421175:	loop   0x4211c7
  421177:	xchg   esi,eax
  421178:	xchg   ecx,eax
  421179:	call   0x2e18e1ae
  42117e:	push   esp
  42117f:	jge    0x4211b2
  421181:	pop    edi
  421182:	xchg   edi,ecx
  421184:	adc    ebp,DWORD PTR [edx]
  421186:	pop    ebx
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    ch,al
  42118f:	or     BYTE PTR [ebx+eax*4+0x18c51],0xf8
  421197:	add    al,0x0
  421199:	add    BYTE PTR [ebx-0x1fc517c],bl
  42119f:	pop    es
  4211a0:	(bad)  
  4211a1:	mov    al,0x2a
  4211a3:	xchg   ecx,eax
  4211a4:	call   0xf2fd868
  4211a9:	stos   BYTE PTR es:[edi],al
  4211aa:	dec    edi
  4211ab:	adc    eax,0x8bb7ee70
  4211b0:	inc    edi
  4211b1:	push   cs
  4211b2:	sub    ch,BYTE PTR ds:0x5ac5dbd0
  4211b8:	sub    esi,DWORD PTR [edi]
  4211ba:	out    0xc0,eax
  4211bc:	add    eax,0xed3e762b
  4211c1:	out    0x40,eax
  4211c3:	pop    edi
  4211c4:	int    0xb4
  4211c6:	leave  
  4211c7:	push   eax
  4211c8:	xor    eax,0xbeca55bc
  4211cd:	inc    eax
  4211ce:	(bad)  
  4211cf:	fwait
  4211d0:	stc    
  4211d1:	inc    esi
  4211d2:	pushf  
  4211d3:	pop    ds
  4211d4:	push   0xffffffc3
  4211d6:	ja     0x42117f
  4211d8:	mov    ebp,0x97db8c0d
  4211dd:	inc    esi
  4211de:	xor    al,0x2a
  4211e0:	lds    edx,FWORD PTR [ecx-0x3603480b]
  4211e6:	ja     0x42117d
  4211e8:	mov    cl,0x6c
  4211ea:	fidiv  WORD PTR [eax-0x21]
  4211ed:	inc    edx
  4211ee:	cmp    edi,esp
  4211f0:	cwde   
  4211f1:	icebp  
  4211f2:	in     al,0xab
  4211f4:	nop
  4211f5:	pop    esp
  4211f6:	pop    DWORD PTR [ecx+0x9]
  4211f9:	test   eax,0x92d84f1f
  4211fe:	xor    edi,DWORD PTR [edi+ecx*4]
  421201:	jb     0x421192
  421203:	jno    0x4211a9
  421205:	pushf  
  421206:	test   BYTE PTR [eax],bl
  421208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421209:	in     al,dx
  42120a:	dec    eax
  42120b:	push   cs
  42120c:	add    esi,esp
  42120e:	sti    
  42120f:	push   edx
  421210:	inc    edi
  421211:	ret    0xf483
  421214:	frstor [edi+0x75569613]
  42121a:	xor    eax,0x3993bce1
  42121f:	mov    dh,0xf2
  421221:	xlat   BYTE PTR ds:[ebx]
  421222:	inc    ecx
  421223:	std    
  421224:	mov    eax,0x5017ea4e
  421229:	push   esi
  42122a:	mov    bh,0xa2
  42122c:	lea    esi,[eax-0x5c1740b6]
  421232:	xor    BYTE PTR [esi+ecx*1-0x5ce7429e],dh
  421239:	cwde   
  42123a:	icebp  
  42123b:	xor    dl,BYTE PTR [eax+edx*1]
  42123e:	mov    ebx,0xa23f7ae8
  421243:	fiadd  WORD PTR [ecx]
  421245:	shl    DWORD PTR [ebp-0x39],1
  421248:	dec    esi
  421249:	lahf   
  42124a:	fwait
  42124b:	push   eax
  42124c:	fs cmp al,0x57
  42124f:	inc    esp
  421250:	mov    ?,WORD PTR ds:0x11c1b862
  421256:	push   ss
  421257:	fiadd  DWORD PTR [ebp+0x3db3fc0e]
  42125d:	dec    ecx
  42125e:	mov    edx,0x3591576e
  421263:	pusha  
  421264:	jle    0x42125d
  421266:	add    ecx,DWORD PTR [edi]
  421268:	push   ds
  421269:	xor    eax,0x37f15a0d
  42126e:	fsubp  st(0),st
  421270:	mov    eax,ds:0x4a28bf3c
  421275:	xor    DWORD PTR [eax+0x3b],esi
  421278:	mov    BYTE PTR [esp+edx*1+0x2c],al
  42127c:	dec    esi
  42127d:	sbb    eax,DWORD PTR [edx-0x1e]
  421280:	mov    bh,0x8f
  421282:	lea    esp,[edi]
  421284:	ins    DWORD PTR es:[edi],dx
  421285:	push   es
  421286:	inc    ecx
  421287:	mov    fs,WORD PTR [edi+0x31]
  42128a:	ds jne 0x421241
  42128d:	ja     0x421297
  42128f:	out    0xf2,al
  421291:	arpl   WORD PTR [ebp-0x5b8b11d4],bp
  421297:	cmp    BYTE PTR [edi],al
  421299:	popa   
  42129a:	jmp    0x60ae0e0c
  42129f:	cmc    
  4212a0:	inc    eax
  4212a1:	jge    0x4212e7
  4212a3:	push   ebp
  4212a4:	push   0x73
  4212a6:	inc    ecx
  4212a7:	(bad)  
  4212a8:	mov    al,ds:0xc43bad06
  4212ad:	clc    
  4212ae:	mov    ecx,0x567c4515
  4212b3:	xor    ebp,DWORD PTR [ebx-0x7e260ef5]
  4212b9:	leave  
  4212ba:	mov    cl,0x17
  4212bc:	pushf  
  4212bd:	xor    BYTE PTR [esi-0x7c],al
  4212c0:	scas   al,BYTE PTR es:[edi]
  4212c1:	add    esp,DWORD PTR [ebp-0x6906239a]
  4212c7:	dec    eax
  4212c8:	ds fistp WORD PTR fs:[edx-0x525c3dec]
  4212d0:	jmp    0xe553ccd5
  4212d5:	mov    ah,0x8e
  4212d7:	sbb    cl,BYTE PTR [ebp-0x71638db6]
  4212dd:	fs ds lahf 
  4212e0:	and    ebp,ecx
  4212e2:	sbb    edi,DWORD PTR [esi+0x4f]
  4212e5:	xchg   esi,eax
  4212e6:	mov    esp,0x44aec50c
  4212eb:	xor    dl,0x19
  4212ee:	xchg   edi,eax
  4212ef:	push   es
  4212f0:	jb     0x4212a2
  4212f2:	loope  0x4212c5
  4212f4:	dec    esi
  4212f5:	or     eax,0x64d2cf44
  4212fa:	dec    edx
  4212fb:	out    dx,eax
  4212fc:	ds add esi,edi
  4212ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421300:	jo     0x4212f6
  421302:	mov    ds:0xbcb6e248,eax
  421307:	in     ax,0x99
  42130a:	xlat   BYTE PTR ds:[ebx]
  42130b:	cmp    BYTE PTR [ebx-0x51ed8517],ch
  421311:	imul   eax,edx,0x64
  421314:	inc    edx
  421315:	sbb    al,0x14
  421317:	dec    esp
  421318:	(bad)  
  421319:	bound  ebp,QWORD PTR [ebx+ecx*8+0x6794ae52]
  421320:	and    BYTE PTR [esi-0x56de204c],dl
  421326:	push   ebp
  421327:	jp     0x421324
  421329:	adc    cl,dh
  42132b:	mov    edx,0x6e9019eb
  421330:	aad    0x47
  421332:	jmp    DWORD PTR [ecx]
  421334:	shl    eax,1
  421336:	retf   0x2753
  421339:	lahf   
  42133a:	jmp    0x6e57:0x58d7c756
  421341:	xor    BYTE PTR [esi-0x706fc594],ch
  421347:	cmp    ch,BYTE PTR [esi]
  421349:	cwde   
  42134a:	sbb    DWORD PTR [edx+0x685ca9d4],esp
  421350:	lods   al,BYTE PTR ds:[esi]
  421351:	inc    eax
  421352:	push   cs
  421353:	sbb    dl,cl
  421355:	jb     0x421304
  421357:	mov    WORD PTR [edi+0x6c70fd98],?
  42135d:	outs   dx,BYTE PTR ds:[esi]
  42135e:	dec    esi
  42135f:	xor    edi,ebx
  421361:	mov    ebx,0x977807cf
  421366:	mov    ebx,0xa922a602
  42136b:	mov    bl,0xe3
  42136d:	sub    al,0xd3
  42136f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421370:	pusha  
  421371:	xchg   edx,eax
  421372:	les    edx,FWORD PTR [ebp-0x466868c6]
  421378:	jae    0x4213ce
  42137a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42137b:	jl     0x42133c
  42137d:	call   0xaea:0xd99fa60d
  421384:	mov    bh,BYTE PTR [edx+0x33]
  421387:	hlt    
  421388:	ds dec edi
  42138a:	fiadd  WORD PTR [esi-0x5aba8d76]
  421390:	rol    DWORD PTR [ecx-0xca8f371],0x6
  421397:	ds addr16 mov ebx,0x3f8978c9
  42139e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42139f:	test   DWORD PTR [esi],ecx
  4213a1:	pop    ebx
  4213a2:	stc    
  4213a3:	mov    bl,0x23
  4213a5:	jb     0x4213ed
  4213a7:	add    edi,DWORD PTR [edx]
  4213a9:	out    0x43,al
  4213ab:	sbb    BYTE PTR [ebx],0x58
  4213ae:	fisttp QWORD PTR [ebx-0x51]
  4213b1:	mov    al,ds:0xefe3778e
  4213b6:	ds in  al,0xdc
  4213b9:	mov    eax,ds:0xb152e074
  4213be:	push   ecx
  4213bf:	adc    al,bl
  4213c1:	mov    cl,0x89
  4213c3:	mov    ebp,0x9e427100
  4213c8:	push   ss
  4213c9:	ss adc al,0x3f
  4213cc:	jle    0x4213c3
  4213ce:	nop
  4213cf:	fwait
  4213d0:	add    esi,DWORD PTR [ebp+esi*2+0x684f7ad5]
  4213d7:	jg     0x42144e
  4213d9:	xchg   edi,eax
  4213da:	fidivr WORD PTR [edi+0xc]
  4213dd:	lods   eax,DWORD PTR ds:[esi]
  4213de:	mov    ecx,0xecb014b
  4213e3:	dec    ebx
  4213e4:	mov    cl,0xf2
  4213e6:	int3   
  4213e7:	dec    esi
  4213e8:	icebp  
  4213e9:	out    0xd8,al
  4213eb:	fwait
  4213ec:	stos   DWORD PTR es:[edi],eax
  4213ed:	dec    edi
  4213ee:	repnz int3 
  4213f0:	leave  
  4213f1:	mov    bl,0x70
  4213f3:	lock jbe 0x421439
  4213f6:	test   ebp,ecx
  4213f8:	pop    ds
  4213f9:	mov    dl,BYTE PTR ds:0xbd7aec5c
  4213ff:	and    eax,DWORD PTR [edx+edx*2-0x19a381c1]
  421406:	(bad)  
  421407:	fnstenv [eax+0x1a]
  42140a:	jbe    0x4213cc
  42140c:	retf   
  42140d:	lock push 0xffffff8e
  421410:	out    dx,al
  421411:	mov    BYTE PTR [edi-0x1bdafa85],cl
  421417:	retf   
  421418:	mov    eax,ds:0x177c3048
  42141d:	ret    0x7be9
  421420:	lods   al,BYTE PTR ds:[esi]
  421421:	xchg   edi,eax
  421422:	and    DWORD PTR [ebx],edi
  421424:	call   0x676c1904
  421429:	jo     0x421443
  42142b:	cmp    DWORD PTR [esi+eax*8],eax
  42142e:	sbb    esi,DWORD PTR [esi-0x256cbb4f]
  421434:	jns    0x4213bf
  421436:	mov    eax,ds:0x5430548d
  42143b:	push   edx
  42143c:	push   ecx
  42143d:	push   0x18
  42143f:	and    ch,BYTE PTR [ebp-0x28058040]
  421445:	sti    
  421446:	stc    
  421447:	es or  eax,0x48d52011
  42144d:	pop    esp
  42144e:	hlt    
  42144f:	pop    esp
  421450:	mov    DWORD PTR [ebp+eax*4-0x4595b6bd],edi
  421457:	mov    ds:0x3c18eb26,eax
  42145c:	push   edx
  42145d:	xor    eax,0x51f1a10d
  421462:	(bad)  
  421463:	sbb    esp,ebx
  421465:	popa   
  421466:	cli    
  421467:	icebp  
  421468:	(bad)  
  421469:	xlat   BYTE PTR ds:[ebx]
  42146a:	daa    
  42146b:	and    bl,cl
  42146d:	cld    
  42146e:	xor    esi,0x20
  421471:	out    0x96,al
  421473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421474:	jb     0x421423
  421476:	add    eax,0x78325520
  42147b:	imul   BYTE PTR [edi+edx*4]
  42147e:	mov    al,0x95
  421480:	int    0x68
  421482:	sbb    al,0xea
  421484:	cmp    esi,eax
  421486:	mov    esi,0x5d1c4e04
  42148b:	jnp    0x4214e0
  42148d:	bound  edx,QWORD PTR [eax+0x68]
  421490:	sub    BYTE PTR [ebx],0xb5
  421493:	sub    DWORD PTR [ebp+0x51],0xffffffb7
  421497:	xor    eax,0x6bd3183b
  42149c:	push   esi
  42149d:	mov    ds:0x671ded2f,al
  4214a2:	push   0x37ebf7a3
  4214a7:	mov    ch,0x93
  4214a9:	xchg   ebp,eax
  4214aa:	push   esi
  4214ab:	dec    ebx
  4214ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ad:	xchg   edi,eax
  4214ae:	and    al,ch
  4214b0:	sbb    al,0x87
  4214b2:	std    
  4214b3:	pop    edi
  4214b4:	inc    edx
  4214b5:	mov    esp,0x52a42435
  4214ba:	inc    esp
  4214bb:	and    al,0x21
  4214bd:	and    BYTE PTR [esi+ebx*2],dl
  4214c0:	mov    cl,BYTE PTR [ebx]
  4214c2:	loopne 0x421537
  4214c4:	jbe    0x42152b
  4214c6:	or     BYTE PTR [ebp+0x46],al
  4214c9:	aaa    
  4214ca:	and    al,0x55
  4214cc:	mov    al,ds:0xca275cb6
  4214d1:	shr    DWORD PTR [edx],cl
  4214d3:	or     ch,BYTE PTR [edx]
  4214d5:	sub    ah,BYTE PTR [ebx-0x3e]
  4214d8:	loop   0x421525
  4214da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214db:	stos   BYTE PTR es:[edi],al
  4214dc:	push   ebx
  4214dd:	pop    ss
  4214de:	ror    BYTE PTR [ebx],0x12
  4214e1:	scas   al,BYTE PTR es:[edi]
  4214e2:	jmp    0x421482
  4214e4:	aam    0x40
  4214e6:	xor    al,BYTE PTR [esi]
  4214e8:	push   es
  4214e9:	pop    ebp
  4214ea:	jbe    0x421563
  4214ec:	mov    cl,0x2a
  4214ee:	pop    ds
  4214ef:	aam    0xab
  4214f1:	cs push ebx
  4214f3:	adc    DWORD PTR [ebx+ebx*8-0x671e5c93],ecx
  4214fa:	jb     0x42150c
  4214fc:	(bad)  
  4214fd:	xor    eax,0x621b27dd
  421502:	mov    edx,0xb8f2f76e
  421508:	and    esi,DWORD PTR [eax-0x58]
  42150b:	mov    cl,BYTE PTR [esi]
  42150d:	dec    ebx
  42150e:	test   eax,0xa1e1195
  421513:	test   al,cl
  421515:	gs std 
  421517:	cdq    
  421518:	enter  0x86d6,0xd7
  42151c:	repz cmp BYTE PTR [eax-0x6c],dl
  421520:	cli    
  421521:	add    al,0xc6
  421523:	push   edi
  421524:	test   BYTE PTR [eax+0x1],al
  421527:	jne    0x4214ed
  421529:	sbb    DWORD PTR [ecx],ebx
  42152b:	mov    ebp,0x12ecaeb9
  421530:	adc    bl,al
  421532:	fwait
  421533:	je     0x42150d
  421535:	and    esi,esp
  421537:	push   ebx
  421538:	paddsb mm5,QWORD PTR [esi]
  42153b:	es xor al,0xac
  42153e:	(bad)  
  42153f:	stos   BYTE PTR es:[edi],al
  421540:	mov    al,ds:0xc8ad4537
  421545:	lods   eax,DWORD PTR ds:[esi]
  421546:	cld    
  421547:	inc    edx
  421548:	sahf   
  421549:	mov    cl,0xe4
  42154b:	cdq    
  42154c:	gs inc eax
  42154e:	sub    BYTE PTR [ebx+0x23be37f7],ah
  421554:	call   0x7670:0xc58ebf75
  42155b:	inc    BYTE PTR [edi+0x6018c46f]
  421561:	out    dx,al
  421562:	push   es
  421563:	gs out dx,al
  421565:	push   eax
  421566:	imul   ebp,DWORD PTR [ecx+eiz*2],0xaf1e3a17
  42156d:	and    bh,ch
  42156f:	inc    ecx
  421570:	or     ch,0xe9
  421573:	shl    DWORD PTR [ebx+0x44],1
  421576:	out    0x5b,al
  421578:	iret   
  421579:	scas   eax,DWORD PTR es:[edi]
  42157a:	mov    ds:0xde2a396b,eax
  42157f:	jnp    0x421570
  421581:	xor    al,bl
  421583:	dec    edx
  421584:	adc    al,bh
  421586:	in     al,0xdf
  421588:	sub    eax,0x2d2fd6d7
  42158d:	xchg   ebx,eax
  42158e:	jo     0x421531
  421590:	inc    ecx
  421591:	imul   ebp,DWORD PTR [eax+0x6ced31e8],0x4
  421598:	sbb    DWORD PTR [edi+0x6e],edi
  42159b:	push   ecx
  42159c:	push   edi
  42159d:	add    eax,0xb686a38c
  4215a2:	mov    ds:0x182cc72a,al
  4215a7:	repnz xlat BYTE PTR ds:[ebx]
  4215a9:	stc    
  4215aa:	dec    esp
  4215ab:	(bad)  
  4215ac:	ficomp DWORD PTR [edx+0x5]
  4215af:	repnz cmp eax,0x850506e8
  4215b5:	sbb    al,bl
  4215b7:	pop    ecx
  4215b8:	mov    gs,WORD PTR [esi+0x1b4ccc28]
  4215be:	retf   
  4215bf:	cmc    
  4215c0:	sbb    DWORD PTR [eax+eiz*1+0x3bae7db7],ebp
  4215c7:	push   edx
  4215c8:	retfw  0xe768
  4215cc:	(bad)  
  4215cd:	xchg   edx,eax
  4215ce:	or     al,0x62
  4215d0:	shl    BYTE PTR [edx-0x58],cl
  4215d3:	test   eax,0x1a6a579
  4215d8:	mov    edi,DWORD PTR [edi-0x7b9f395a]
  4215de:	scas   eax,DWORD PTR es:[edi]
  4215df:	mov    DWORD PTR [edi+esi*8+0x2],ebp
  4215e3:	mov    esp,0x95fde4e6
  4215e8:	fld    QWORD PTR [ebp-0x4df26e74]
  4215ee:	or     cl,BYTE PTR [ebp+0x67994c50]
  4215f4:	ret    
  4215f5:	mov    edi,0x2918be9d
  4215fa:	mov    edi,0x2b4afa43
  4215ff:	js     0x421619
  421601:	les    esi,FWORD PTR [ecx-0x2e]
  421604:	mov    eax,0xef5b9017
  421609:	fsub   QWORD PTR ds:0x19d9b977
  42160f:	xchg   edx,eax
  421610:	mov    bl,0x7e
  421612:	loop   0x4215cd
  421614:	aam    0x23
  421616:	xlat   BYTE PTR ds:[ebx]
  421617:	fwait
  421618:	addr16 mov ah,0x99
  42161b:	jle    0x42161a
  42161d:	jb     0x42162a
  42161f:	test   al,0x96
  421621:	lahf   
  421622:	xchg   edi,eax
  421623:	arpl   ax,si
  421625:	add    eax,0x2568b439
  42162a:	call   0x17d8:0x917fa77
  421631:	mov    esi,DWORD PTR [ebp+0x10]
  421634:	div    bl
  421636:	and    BYTE PTR [edi-0x54],cl
  421639:	daa    
  42163a:	shl    BYTE PTR [eax],0xb9
  42163d:	pop    ecx
  42163e:	js     0x4215c7
  421640:	rcl    DWORD PTR [ecx+ebx*4+0x6c],1
  421644:	cli    
  421645:	sbb    edx,edx
  421647:	neg    BYTE PTR [edi-0x1]
  42164a:	add    dh,BYTE PTR [ecx+0x11]
  42164d:	(bad)  
  42164e:	jecxz  0x42168e
  421650:	pushf  
  421651:	inc    ebx
  421652:	jae    0x421625
  421654:	mov    eax,?
  421656:	inc    eax
  421657:	sbb    esi,esi
  421659:	lock mov al,BYTE PTR [ebp+0xb91b825]
  421660:	sub    DWORD PTR [esi+0x55],ecx
  421663:	js     0x42169f
  421665:	fsub   DWORD PTR [ebp-0x34]
  421668:	cld    
  421669:	add    ecx,DWORD PTR [ecx+0x767f3c1a]
  42166f:	loop   0x4216cd
  421671:	and    dh,BYTE PTR [ecx+0x20]
  421674:	in     al,dx
  421675:	in     al,dx
  421676:	retf   0xaef7
  421679:	jns    0x421626
  42167b:	xor    eax,0x569cb5f2
  421680:	ret    
  421681:	cld    
  421682:	push   ss
  421683:	dec    esp
  421684:	add    al,BYTE PTR [edi-0x40]
  421687:	xchg   esp,eax
  421688:	or     al,0x65
  42168a:	pop    edx
  42168b:	pop    ebp
  42168c:	xchg   ebp,eax
  42168d:	ret    
  42168e:	cs pop ebx
  421690:	(bad)  
  421691:	leave  
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0xe1437c6
  4216a1:	mov    al,ds:0x19149
  4216a6:	clc    
  4216a7:	add    al,0x0
  4216a9:	add    BYTE PTR [edi+eax*1],al
  4216ac:	ret    0xe1b0
  4216af:	pop    eax
  4216b0:	inc    esi
  4216b1:	mov    edx,0xfc8308ce
  4216b6:	test   DWORD PTR [eax+esi*8-0x5c],esi
  4216ba:	popa   
  4216bb:	out    dx,al
  4216bc:	jle    0x4216bb
  4216be:	lahf   
  4216bf:	shl    DWORD PTR [ecx],1
  4216c1:	xor    DWORD PTR [ebp+0x42],esp
  4216c4:	(bad)  
  4216c5:	and    al,0x2c
  4216c7:	push   edx
  4216c8:	gs cdq 
  4216ca:	jb     0x421698
  4216cc:	mov    BYTE PTR ds:0xc86638e5,cl
  4216d2:	std    
  4216d3:	(bad)  
  4216d4:	dec    esi
  4216d5:	push   0x60e027f9
  4216da:	aad    0x67
  4216dc:	dec    ecx
  4216dd:	cdq    
  4216de:	jp     0x4216a4
  4216e0:	dec    ebx
  4216e1:	fisubr WORD PTR [ecx+0x55e140da]
  4216e7:	push   0x9fa0c277
  4216ec:	fistp  DWORD PTR [eax+0x31d78d57]
  4216f2:	jno    0x4216be
  4216f4:	mov    bh,ah
  4216f6:	pop    esi
  4216f7:	jb     0x4216a5
  4216f9:	cmp    al,0x6f
  4216fb:	xor    al,0x38
  4216fd:	and    esp,DWORD PTR [esi-0x70]
  421700:	cwde   
  421701:	inc    esp
  421702:	add    DWORD PTR [edi-0x42],0x71
  421706:	out    dx,al
  421707:	addr16 cmp dl,ah
  42170a:	rcl    BYTE PTR [ecx-0x391f5a20],0xf5
  421711:	js     0x4216cc
  421713:	mov    WORD PTR [edx],ds
  421715:	(bad)  
  421716:	shl    DWORD PTR [ebp+0x1a],cl
  421719:	push   ds
  42171a:	(bad)  
  42171b:	pop    edi
  42171c:	icebp  
  42171d:	xchg   edi,eax
  42171e:	cmp    al,0x88
  421720:	cwde   
  421721:	das    
  421722:	das    
  421723:	add    DWORD PTR [eax-0x19],edx
  421726:	inc    eax
  421727:	inc    eax
  421728:	pop    esi
  421729:	xor    dl,BYTE PTR [ebx+0x68b1bd38]
  42172f:	push   eax
  421730:	mov    al,0xcb
  421732:	cmp    al,0xbf
  421734:	out    dx,eax
  421735:	inc    edi
  421736:	fsub   DWORD PTR [eax+0x28c5dce8]
  42173c:	out    dx,al
  42173d:	jo     0x421724
  42173f:	arpl   WORD PTR [ecx],sp
  421741:	add    ebp,DWORD PTR [ecx+0x32]
  421744:	jp     0x4216e4
  421746:	and    dl,BYTE PTR [esi+0x29]
  421749:	cmp    ch,dh
  42174b:	scas   al,BYTE PTR es:[edi]
  42174c:	pop    ebp
  42174d:	dec    esp
  42174e:	mov    edx,0xab982221
  421753:	mov    ds:0x365d8855,al
  421758:	(bad)  [eax-0x7460ff53]
  42175e:	jecxz  0x42175d
  421760:	popf   
  421761:	dec    esp
  421762:	fisub  WORD PTR [eax-0x29132760]
  421768:	jle    0x421708
  42176a:	or     dl,BYTE PTR [esp+ebp*1]
  42176d:	mov    eax,edx
  42176f:	mov    ds:0xbbdf50de,eax
  421774:	or     BYTE PTR [edx],ah
  421776:	stos   BYTE PTR es:[edi],al
  421777:	cs (bad) 
  421779:	(bad)  
  42177b:	xchg   ebx,eax
  42177c:	std    
  42177d:	jmp    0x4217d9
  42177f:	repz js 0x421721
  421782:	lea    ebp,[ebx+0x58]
  421785:	(bad)  
  421786:	int3   
  421787:	test   al,0xd
  421789:	les    edx,FWORD PTR [ebp-0x54c0ec9b]
  42178f:	mov    al,BYTE PTR [esi+eiz*8-0x426168e]
  421796:	lahf   
  421797:	lock ja 0x42180c
  42179a:	hlt    
  42179b:	inc    ecx
  42179c:	ds jb  0x421726
  42179f:	pop    esp
  4217a0:	addr16 or al,0xbf
  4217a3:	mov    ecx,0x483ad4fd
  4217a8:	sub    ebx,DWORD PTR [ebp+0x44]
  4217ab:	int    0x48
  4217ad:	pop    ebp
  4217ae:	fbstp  TBYTE PTR [edi]
  4217b0:	and    ebx,esp
  4217b2:	adc    ah,bh
  4217b4:	btr    DWORD PTR [esi],0xaa
  4217b8:	es pop edx
  4217ba:	mov    bl,0xb9
  4217bc:	hlt    
  4217bd:	div    BYTE PTR [eax+0x34547ae]
  4217c3:	lds    edx,FWORD PTR [ebx+0x25]
  4217c6:	rcr    DWORD PTR [eax],1
  4217c8:	and    eax,0x74b22548
  4217cd:	std    
  4217ce:	in     eax,dx
  4217cf:	loop   0x421752
  4217d1:	inc    BYTE PTR ds:0x21505e11
  4217d7:	retf   
  4217d8:	pop    esi
  4217d9:	dec    BYTE PTR [edx+ebx*1-0xe]
  4217dd:	inc    ebx
  4217de:	mov    bl,0x7f
  4217e0:	mov    ds:0xbc588cb3,eax
  4217e5:	push   esp
  4217e6:	fdivr  QWORD PTR [edi-0x683b747a]
  4217ec:	sub    eax,0x951a973f
  4217f1:	push   ebx
  4217f2:	ins    BYTE PTR es:[edi],dx
  4217f3:	jl     0x421848
  4217f5:	leave  
  4217f6:	jno    0x42185a
  4217f8:	xchg   ebp,eax
  4217f9:	mov    cl,0x92
  4217fb:	int    0xba
  4217fd:	enter  0x2c8b,0x9c
  421801:	and    al,0xb6
  421803:	jp     0x42180e
  421805:	(bad)
  42180a:	sub    ecx,DWORD PTR [eax]
  42180c:	and    eax,0x3dd75ea
  421811:	(bad)  
  421812:	fdiv   DWORD PTR [eax-0x4a]
  421815:	jo     0x421840
  421817:	rcr    BYTE PTR [edx-0x4004e781],1
  42181d:	mov    ebx,edx
  42181f:	adc    DWORD PTR [eax],esp
  421821:	lahf   
  421822:	mov    al,0x86
  421824:	mov    dl,0xde
  421826:	and    BYTE PTR [ebp-0x6c],dl
  421829:	ja     0x421870
  42182b:	push   esp
  42182c:	cmp    ecx,DWORD PTR [eax+ebx*4-0x58]
  421830:	mov    ch,0xa8
  421832:	repz jb 0x42186c
  421835:	or     DWORD PTR [ebp-0x6b],0xfffffff4
  421839:	outs   dx,DWORD PTR ds:[esi]
  42183a:	std    
  42183b:	(bad)  [ebx]
  42183d:	push   ebp
  42183e:	shr    esi,cl
  421840:	lock lods eax,DWORD PTR ds:[esi]
  421842:	dec    ebx
  421843:	out    dx,al
  421844:	jp     0x42182b
  421846:	mov    fs,WORD PTR [ebx+0x2c]
  421849:	neg    DWORD PTR [eax+0x66ecddda]
  42184f:	idiv   BYTE PTR [ecx+0x58]
  421852:	pop    es
  421853:	adc    eax,0xd7cc9138
  421858:	dec    esp
  421859:	adc    DWORD PTR [esi+esi*4-0x2bb8485e],esp
  421860:	push   es
  421861:	ror    eax,1
  421863:	push   eax
  421864:	mov    edx,0x71908fd6
  421869:	dec    esp
  42186a:	sub    ebx,DWORD PTR [eax-0x50369d60]
  421870:	push   ebp
  421871:	mov    esp,0x47eea8fc
  421876:	retf   
  421877:	mov    ch,ah
  421879:	lds    ebp,FWORD PTR [edi+esi*1-0x37]
  42187d:	fdiv   DWORD PTR [esi-0x2e6e3087]
  421883:	sar    BYTE PTR [eax-0x21],1
  421886:	add    edi,DWORD PTR [ecx]
  421888:	and    bh,BYTE PTR [edx+0x5576ee0d]
  42188e:	cmp    eax,0x315ecdaf
  421893:	mov    ah,0x91
  421895:	imul   ebp,DWORD PTR [ecx],0x6443a79c
  42189b:	mov    ah,0x44
  42189d:	mov    esi,0x1bae1393
  4218a2:	or     bh,BYTE PTR [edx]
  4218a4:	pop    ebp
  4218a5:	mov    bl,0x20
  4218a7:	add    eax,0xce979b99
  4218ac:	jnp    0x421910
  4218ae:	push   es
  4218af:	sub    edi,DWORD PTR [ebx-0x6f]
  4218b2:	ror    dh,0xcf
  4218b5:	inc    ebx
  4218b6:	addr16 xor eax,0xdd3a665f
  4218bc:	jge    0x421897
  4218be:	xchg   ebp,eax
  4218bf:	adc    esp,DWORD PTR [edi-0x1f]
  4218c2:	xchg   esi,eax
  4218c3:	cmp    DWORD PTR [edi+edx*2-0x2e],edi
  4218c7:	out    0xad,eax
  4218c9:	or     bh,BYTE PTR ds:0x4209a3c3
  4218cf:	push   ebp
  4218d0:	stos   BYTE PTR es:[edi],al
  4218d1:	xor    ch,BYTE PTR [ebp+eiz*4-0x2b8e16b0]
  4218d8:	gs (bad) 
  4218da:	mov    ch,0x51
  4218dc:	mov    bh,0xeb
  4218de:	ins    BYTE PTR es:[edi],dx
  4218df:	fild   DWORD PTR [esi]
  4218e1:	push   cs
  4218e2:	adc    BYTE PTR [eax-0x2e],0x50
  4218e6:	pop    ds
  4218e7:	(bad)  
  4218e9:	dec    ebx
  4218ea:	sbb    al,0x58
  4218ec:	sbb    DWORD PTR [esp+ecx*2+0x67489d0a],0x572be3e
  4218f7:	jnp    0x4218e7
  4218f9:	outs   dx,DWORD PTR ds:[esi]
  4218fa:	in     eax,0x90
  4218fc:	push   ebp
  4218fd:	enter  0x837b,0x88
  421901:	imul   ecx,DWORD PTR [esi+edx*2+0x19],0xa
  421906:	mov    ch,0x2a
  421908:	test   DWORD PTR [edi],edx
  42190a:	jge    0x421935
  42190c:	and    ebp,ebp
  42190e:	nop
  42190f:	adc    al,0x2c
  421911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421912:	mov    bl,0x5e
  421914:	call   0x66e0f666
  421919:	sub    BYTE PTR [edx],0x3d
  42191c:	dec    esp
  42191d:	sub    BYTE PTR [ebx],al
  42191f:	lahf   
  421920:	test   al,0x2f
  421922:	lahf   
  421923:	mov    esi,0xce5e98f9
  421928:	cli    
  421929:	push   cs
  42192a:	mov    ecx,0x23937ef4
  42192f:	dec    eax
  421930:	test   eax,0x8de7fe3b
  421935:	push   0x54
  421937:	push   ecx
  421938:	js     0x421918
  42193a:	jmp    0x4d950cb1
  42193f:	lahf   
  421940:	rcr    edi,1
  421942:	and    al,0xe7
  421944:	and    eax,0x7d881c74
  421949:	fistp  QWORD PTR [esi-0x7c1addf6]
  42194f:	lds    ebp,FWORD PTR [edi-0x4a535a9]
  421955:	add    eax,0xa9ee3bd0
  42195a:	jecxz  0x421930
  42195c:	sbb    DWORD PTR [ecx],edi
  42195e:	jne    0x4218f8
  421960:	mov    edx,0x9508b235
  421965:	add    dh,cl
  421967:	arpl   cx,si
  421969:	add    bl,bh
  42196b:	pcmpeqb mm2,QWORD PTR [edi+0x72]
  42196f:	xor    BYTE PTR [ecx-0x73],ch
  421972:	jmp    0x4219ea
  421974:	cdq    
  421975:	xor    eax,0x6ac49579
  42197a:	test   BYTE PTR [edx+0x47647e62],ah
  421980:	idiv   DWORD PTR [eax-0x6bf0482f]
  421986:	lods   al,BYTE PTR ds:[esi]
  421987:	mov    ds:0xcd474df9,al
  42198c:	fisttp QWORD PTR fs:[ebp-0x22]
  421990:	iret   
  421991:	pushf  
  421992:	mov    BYTE PTR [ecx],bl
  421994:	dec    esp
  421995:	mov    bh,0xa0
  421997:	ret    0x229b
  42199a:	dec    edx
  42199b:	mov    BYTE PTR [ebx-0x26657d49],bl
  4219a1:	add    esp,DWORD PTR [edx]
  4219a3:	adc    BYTE PTR [edi-0x5f99957e],dh
  4219a9:	jne    0x4219e7
  4219ab:	fdiv   st(3),st
  4219ad:	int    0x7a
  4219af:	out    0xda,eax
  4219b1:	adc    BYTE PTR [ebp-0x2e3c526c],dl
  4219b7:	lods   ax,WORD PTR ds:[esi]
  4219b9:	popa   
  4219ba:	repz mov esp,0x55cb7c51
  4219c0:	sub    bh,BYTE PTR [eax+0x52f38b67]
  4219c6:	mov    esi,0x35ace1a7
  4219cb:	jecxz  0x421a11
  4219cd:	mov    esi,DWORD PTR [ebp+0x35a8a30e]
  4219d3:	jno    0x42197d
  4219d5:	bound  edx,QWORD PTR [edx-0x16]
  4219d8:	cld    
  4219d9:	and    eax,0x50ef7004
  4219de:	add    bh,dl
  4219e0:	ret    0x8e2d
  4219e3:	sahf   
  4219e4:	xchg   edi,eax
  4219e5:	mov    ecx,0x5d3898ea
  4219ea:	mov    eax,0x3f71bdbc
  4219ef:	jl     0x421986
  4219f1:	hlt    
  4219f2:	js     0x4219d8
  4219f4:	or     BYTE PTR [ebp+0x19],cl
  4219f7:	and    al,BYTE PTR [edi]
  4219f9:	mov    bl,BYTE PTR [esi]
  4219fb:	(bad)  
  4219fc:	and    BYTE PTR [ebp+0x17945d19],0x13
  421a03:	mov    esi,0x92e72a8
  421a08:	mov    ebx,0x5f156006
  421a0d:	xlat   BYTE PTR ds:[ebx]
  421a0e:	ret    0xe942
  421a11:	popf   
  421a12:	mov    eax,0xadd849e3
  421a17:	imul   edi,DWORD PTR [esi-0x60eafaa2],0x79200530
  421a21:	jmp    0x503c593d
  421a26:	add    eax,0x58ceb377
  421a2b:	mov    DWORD PTR [edi+edx*1],ebp
  421a2e:	cmp    edx,DWORD PTR [edx-0x23]
  421a31:	sti    
  421a32:	jnp    0x421a3a
  421a34:	(bad)  
  421a35:	or     BYTE PTR [ecx],ch
  421a37:	mov    dh,0x45
  421a39:	cld    
  421a3a:	mov    al,BYTE PTR [ebx]
  421a3c:	or     bl,BYTE PTR [ebp+ebx*8+0x7c]
  421a40:	aad    0xc4
  421a42:	repz and cl,BYTE PTR [ebx+0x19]
  421a46:	fs call 0xe6ea:0x9ecae27c
  421a4e:	sbb    BYTE PTR [ebp-0x18a6099],bl
  421a54:	call   0x801f:0x9b6fe3ae
  421a5b:	aaa    
  421a5c:	lods   eax,DWORD PTR ds:[esi]
  421a5d:	mov    bl,0xa5
  421a5f:	push   eax
  421a60:	inc    ebx
  421a61:	inc    ebp
  421a62:	shrd   DWORD PTR [edx-0x5180fba1],eax,cl
  421a69:	mov    al,ds:0xf1f0bb32
  421a6e:	ret    0x1d1d
  421a71:	xlat   BYTE PTR ds:[ebx]
  421a72:	jmp    0xd0a4:0x9ecd7509
  421a79:	inc    eax
  421a7a:	ret    
  421a7b:	lahf   
  421a7c:	sub    eax,DWORD PTR [ecx]
  421a7e:	in     al,0xa8
  421a80:	xor    edx,DWORD PTR [esi+0x781b5024]
  421a86:	sbb    al,0x88
  421a88:	xor    eax,0xdfc48ff
  421a8d:	push   eax
  421a8e:	pusha  
  421a8f:	mov    esi,0xa3be2c92
  421a94:	adc    bh,BYTE PTR [ebp+edx*1+0x58f68437]
  421a9b:	mov    bl,0x8e
  421a9d:	aaa    
  421a9e:	(bad)  
  421aa0:	add    al,0xb9
  421aa2:	jno    0x421a5f
  421aa4:	in     eax,0x9b
  421aa6:	lea    edi,[eax-0x26a67f6]
  421aac:	mov    ebx,0xb49e7620
  421ab1:	jnp    0x421aeb
  421ab3:	inc    ebp
  421ab4:	rcl    DWORD PTR [edx+ebp*4-0x6e],1
  421ab8:	or     eax,0xbcc5fe3b
  421abd:	adc    eax,ebx
  421abf:	push   edx
  421ac0:	adc    eax,0xcdf278b
  421ac5:	xchg   ebx,eax
  421ac6:	inc    ebx
  421ac7:	icebp  
  421ac8:	leave  
  421ac9:	cdq    
  421aca:	and    eax,0x43f1b52d
  421acf:	cmp    DWORD PTR [ebx-0x2c3db04d],esi
  421ad5:	mov    eax,0xb2264d4a
  421ada:	mov    bl,0x20
  421add:	ins    BYTE PTR es:[edi],dx
  421ade:	out    dx,eax
  421adf:	out    dx,eax
  421ae0:	and    BYTE PTR [ebx+ecx*1+0x37],0xe9
  421ae5:	out    0x8f,eax
  421ae7:	mov    fs,edx
  421ae9:	mov    edx,0x36419d55
  421aee:	mov    cl,0xb3
  421af0:	sub    eax,0xa4ad7b15
  421af5:	arpl   cx,ax
  421af7:	dec    ebx
  421af8:	ins    DWORD PTR es:[edi],dx
  421af9:	lea    ebx,[ecx-0x7aba924a]
  421aff:	repnz sar dl,1
  421b02:	xchg   BYTE PTR [esi-0xb],ah
  421b05:	jmp    0x421a9f
  421b07:	lods   eax,DWORD PTR ds:[esi]
  421b08:	sub    cl,BYTE PTR [ebp-0x3d]
  421b0b:	inc    esi
  421b0c:	sub    BYTE PTR [edx-0x78],ah
  421b0f:	inc    edx
  421b10:	sbb    ch,ch
  421b12:	je     0x421acb
  421b14:	call   0x311fcef3
  421b19:	push   ebx
  421b1a:	cmp    BYTE PTR [ebx+edx*2-0x4e36742c],al
  421b21:	inc    esi
  421b22:	mov    BYTE PTR [eax-0x56174fde],bl
  421b28:	enter  0xfeb5,0x13
  421b2c:	in     eax,dx
  421b2d:	xchg   edx,eax
  421b2e:	and    eax,0x68bec592
  421b33:	pop    ecx
  421b34:	rcr    BYTE PTR [eax+0x272ced9b],1
  421b3a:	xor    cl,ch
  421b3c:	dec    ebx
  421b3d:	imul   ecx,eax,0x6979fd03
  421b43:	xor    al,0x44
  421b45:	add    edx,DWORD PTR [edx-0x36090fce]
  421b4b:	push   ebp
  421b4c:	jle    0x421b38
  421b4e:	sbb    bh,BYTE PTR [edi+eiz*1]
  421b51:	dec    ebp
  421b52:	push   esp
  421b53:	jl     0x421b7b
  421b55:	xor    eax,0x5fde7e94
  421b5a:	push   edi
  421b5b:	test   al,0x71
  421b5d:	sahf   
  421b5e:	int3   
  421b5f:	jle    0x421b85
  421b61:	mov    edx,0x9ba031dd
  421b66:	lock add al,0xdd
  421b69:	push   ebx
  421b6a:	pop    edx
  421b6b:	jmp    0xa204:0x2640867f
  421b72:	xchg   edx,eax
  421b73:	test   BYTE PTR [esi-0x78],cl
  421b76:	mov    eax,ds:0xacae1cd3
  421b7b:	cld    
  421b7c:	dec    esi
  421b7d:	push   cs
  421b7e:	mov    dh,0x39
  421b80:	dec    ecx
  421b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b82:	stos   BYTE PTR es:[edi],al
  421b83:	xchg   edi,eax
  421b84:	and    ah,BYTE PTR [ebp-0x38]
  421b87:	add    ch,dh
  421b89:	xchg   ebp,eax
  421b8a:	push   0x519cd65b
  421b8f:	xchg   esi,eax
  421b90:	sbb    al,0x6
  421b92:	add    eax,0x4b9d644e
  421b97:	and    edi,DWORD PTR [edi+ebp*1+0x7db4381f]
  421b9e:	add    dh,BYTE PTR [eax]
  421ba0:	jo     0x421bf0
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0x5f31:0xc4770da0
  421bb1:	mov    esp,0x19641
  421bb6:	clc    
  421bb7:	add    al,0x0
  421bb9:	add    bh,ch
  421bbb:	aas    
  421bbc:	or     ah,BYTE PTR [edi-0x5a251f03]
  421bc2:	pushf  
  421bc3:	push   cs
  421bc4:	lock fist DWORD PTR cs:[edx+0x1d]
  421bc9:	jge    0x421b99
  421bcb:	in     al,0x69
  421bcd:	out    dx,al
  421bce:	int    0x65
  421bd0:	out    0x54,al
  421bd2:	inc    esp
  421bd3:	pop    ss
  421bd4:	pop    ds
  421bd5:	mov    bl,0xe7
  421bd7:	mov    edx,0xde0c899d
  421bdc:	add    bl,BYTE PTR [ebx+0x33]
  421bdf:	loopne 0x421b84
  421be1:	pop    esi
  421be2:	add    eax,esi
  421be4:	pop    ebp
  421be5:	call   0x99696cd1
  421bea:	xor    DWORD PTR [esi-0x38],ebx
  421bed:	ins    BYTE PTR es:[edi],dx
  421bee:	pop    edi
  421bef:	jl     0x421c25
  421bf1:	adc    BYTE PTR [eax+0x73],bh
  421bf4:	dec    esi
  421bf5:	or     DWORD PTR [ecx+0x2553eab9],ebp
  421bfb:	add    DWORD PTR [edi+0x6e92cdf1],ecx
  421c01:	mov    edi,0xac39db52
  421c06:	inc    esp
  421c07:	mov    eax,0x213c4dac
  421c0c:	dec    esi
  421c0d:	lods   eax,DWORD PTR ds:[esi]
  421c0e:	test   ch,bl
  421c10:	sub    BYTE PTR [ebx-0x7d],0xeb
  421c14:	jne    0x421c19
  421c16:	mov    bh,BYTE PTR [eax+eiz*1]
  421c19:	popf   
  421c1a:	lock mov al,0xb4
  421c1d:	and    bh,BYTE PTR [ecx]
  421c1f:	scas   al,BYTE PTR es:[edi]
  421c20:	pusha  
  421c21:	(bad)  
  421c22:	xchg   ecx,eax
  421c23:	out    dx,al
  421c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c25:	or     DWORD PTR [eax+ecx*2-0x3c],esi
  421c29:	out    0xad,al
  421c2b:	mov    ch,0xb9
  421c2d:	addr16 icebp 
  421c2f:	addr16 or eax,0x7911e8d6
  421c35:	push   ds
  421c36:	leave  
  421c37:	sti    
  421c38:	cmp    al,bh
  421c3a:	cwde   
  421c3b:	sub    eax,0xde437a9c
  421c40:	shl    DWORD PTR [ebp+0x51],cl
  421c43:	xor    bh,BYTE PTR [ecx]
  421c45:	cmc    
  421c46:	xor    DWORD PTR [esi],0xffffffa7
  421c49:	in     eax,0x8a
  421c4b:	fs xchg ebp,eax
  421c4d:	push   ebp
  421c4e:	mov    ch,0x6e
  421c50:	and    eax,0x1acaaa61
  421c55:	mov    cs,WORD PTR ds:0x35081320
  421c5b:	in     eax,dx
  421c5c:	dec    edi
  421c5d:	js     0x421c9c
  421c5f:	add    eax,0x6e082938
  421c64:	sbb    BYTE PTR [edx-0x35ed4ca9],cl
  421c6a:	jnp    0x421c3e
  421c6c:	push   edx
  421c6d:	inc    esp
  421c6e:	lea    eax,[edi]
  421c70:	inc    esi
  421c71:	dec    ebx
  421c72:	out    0xa6,al
  421c74:	std    
  421c75:	test   DWORD PTR [ecx],0xdde957a2
  421c7b:	sub    bh,bh
  421c7d:	and    BYTE PTR [ebp+0x28],cl
  421c80:	mov    DWORD PTR [ecx],edx
  421c82:	je     0x421c3b
  421c84:	jmp    FWORD PTR [edi+0x9]
  421c87:	neg    BYTE PTR [ebp-0x4779174d]
  421c8d:	fs dec eax
  421c8f:	push   0xc8e59600
  421c94:	neg    DWORD PTR [eax]
  421c96:	dec    edi
  421c97:	pop    ecx
  421c98:	push   ebx
  421c99:	retf   
  421c9a:	mov    ch,0xd3
  421c9c:	mov    cl,0xb0
  421c9e:	pop    edx
  421c9f:	call   0x379b:0x64ce65f6
  421ca6:	mov    al,0xad
  421ca8:	adc    eax,0xadb0aa58
  421cad:	fiadd  DWORD PTR [edx]
  421caf:	adc    edi,DWORD PTR [esi-0xfbc23bf]
  421cb5:	int    0xbb
  421cb7:	pop    ebx
  421cb8:	jns    0x421d28
  421cba:	jbe    0x421c4e
  421cbc:	jecxz  0x421cdd
  421cbe:	retf   
  421cbf:	pop    esp
  421cc0:	mov    ah,0xd0
  421cc2:	mov    cl,0x40
  421cc4:	and    eax,0x5baf82b8
  421cc9:	sbb    BYTE PTR [ebp+0x1],dl
  421ccc:	dec    edx
  421ccd:	add    eax,0x4c6ad566
  421cd2:	lock xchg edi,eax
  421cd4:	je     0x421c61
  421cd6:	clc    
  421cd7:	adc    al,0x72
  421cd9:	mov    esi,0x3c498c99
  421cde:	ror    DWORD PTR [ebx],1
  421ce0:	add    esi,ebx
  421ce2:	push   ebx
  421ce3:	add    ebx,DWORD PTR [ebx+0x25]
  421ce6:	mov    ch,0xbd
  421ce8:	pop    ebp
  421ce9:	sub    al,0x78
  421ceb:	xchg   ebx,eax
  421cec:	aad    0x46
  421cee:	cdq    
  421cef:	xor    DWORD PTR [edx],ecx
  421cf1:	js     0x421d68
  421cf3:	loop   0x421c97
  421cf5:	mov    DWORD PTR [ebp-0x75e6a40d],esi
  421cfb:	jecxz  0x421ca7
  421cfd:	jmp    0x421d62
  421cff:	sub    eax,0xc5314ebb
  421d04:	pushf  
  421d05:	and    cl,al
  421d07:	jae    0x421cd9
  421d09:	pop    edx
  421d0a:	or     dl,BYTE PTR [ebx-0x59fa849c]
  421d10:	sbb    BYTE PTR [eax],al
  421d12:	mov    esp,0xefe3974a
  421d17:	push   ecx
  421d18:	inc    ebp
  421d19:	arpl   dx,si
  421d1b:	jp     0x421cec
  421d1d:	ins    BYTE PTR es:[edi],dx
  421d1e:	outs   dx,DWORD PTR ds:[esi]
  421d1f:	test   DWORD PTR [edi-0x7f],ecx
  421d22:	ja     0x421cba
  421d24:	jo     0x421d3b
  421d26:	in     eax,0x6c
  421d28:	xchg   ebp,eax
  421d29:	lahf   
  421d2a:	dec    edx
  421d2b:	cmc    
  421d2c:	aas    
  421d2d:	popa   
  421d2e:	and    DWORD PTR [edx-0x62],0x4364a49f
  421d35:	fld    QWORD PTR [ecx+0xe]
  421d38:	or     eax,0x7b2a32c3
  421d3d:	cmp    al,BYTE PTR [ebp+0x7d716bca]
  421d43:	xchg   BYTE PTR [ebx],bh
  421d45:	mov    WORD PTR [edi],fs
  421d47:	int3   
  421d48:	and    BYTE PTR [ebx+esi*4+0x4ea17fcf],dh
  421d4f:	sbb    ah,BYTE PTR [esi+0xfa4ca87]
  421d55:	xor    eax,0xcdf859c
  421d5a:	repnz fisub DWORD PTR [esi+0x12]
  421d5e:	ret    0x3ced
  421d61:	xor    bh,dl
  421d63:	sbb    eax,0x1cf7514b
  421d68:	dec    ecx
  421d69:	pop    ecx
  421d6a:	repz inc eax
  421d6c:	shl    esp,1
  421d6e:	xchg   ebp,eax
  421d6f:	icebp  
  421d70:	sahf   
  421d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d72:	mov    ah,BYTE PTR [edi+0x6aa811f5]
  421d78:	push   ebp
  421d79:	mov    esi,DWORD PTR ds:0x3cc60e30
  421d7f:	or     ch,0x58
  421d82:	inc    esi
  421d83:	xor    BYTE PTR [eax+0xb],dl
  421d86:	cdq    
  421d87:	xchg   esi,eax
  421d88:	inc    DWORD PTR [eax-0x77f0aa76]
  421d8e:	int    0x14
  421d90:	jle    0x421dd8
  421d92:	retf   0xf3a
  421d95:	xchg   ebx,eax
  421d96:	sub    esi,DWORD PTR [edi]
  421d98:	and    DWORD PTR [edx-0x3ad5b4ad],0xf
  421d9f:	xor    esp,ebx
  421da1:	stc    
  421da2:	shl    DWORD PTR [edi],1
  421da4:	in     eax,dx
  421da5:	in     al,dx
  421da6:	sbb    BYTE PTR [ecx+0x3af323b7],0x30
  421dad:	addr16 push 0x1012c690
  421db3:	xchg   edi,eax
  421db4:	and    esi,DWORD PTR [edx]
  421db6:	arpl   WORD PTR [eax-0x40809654],cx
  421dbc:	lahf   
  421dbd:	mov    ebx,0xd3515c9c
  421dc2:	xchg   DWORD PTR [ebx-0x31],ebx
  421dc5:	aaa    
  421dc6:	in     al,0x64
  421dc8:	cmp    DWORD PTR [ecx],ecx
  421dca:	fild   DWORD PTR [ebx-0x1d]
  421dcd:	add    ch,BYTE PTR [ebx+0x397f9945]
  421dd3:	mov    al,ds:0xd6535d64
  421dd8:	ins    BYTE PTR es:[edi],dx
  421dd9:	sahf   
  421dda:	mov    ebp,0xc6c53325
  421ddf:	or     eax,0x7da7dd7
  421de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421de5:	dec    ebx
  421de6:	punpcklwd mm0,mm2
  421de9:	enter  0xe9f2,0x12
  421ded:	fmul   st,st(0)
  421def:	dec    esp
  421df0:	cmp    dh,BYTE PTR [ecx-0x75]
  421df3:	and    eax,0x1561f884
  421df8:	dec    edi
  421df9:	ja     0x421e6c
  421dfb:	das    
  421dfc:	push   esp
  421dfd:	adc    edi,DWORD PTR [ebp-0x1bb72db]
  421e03:	xchg   DWORD PTR [edi+0x4d],ecx
  421e06:	dec    ecx
  421e07:	adc    eax,0x10825899
  421e0c:	jns    0x421dc6
  421e0e:	icebp  
  421e0f:	sub    eax,0xd3b64a4f
  421e14:	aam    0xdb
  421e16:	and    eax,DWORD PTR [ebx-0x226ccd88]
  421e1c:	adc    BYTE PTR [ebx-0x60fce76e],bh
  421e22:	dec    esi
  421e23:	bound  esp,QWORD PTR [edi]
  421e25:	adc    ah,ch
  421e27:	lea    esp,[esi-0x52d4edeb]
  421e2d:	inc    esi
  421e2e:	aam    0xfe
  421e30:	adc    ebx,DWORD PTR [ecx+eiz*2+0x690db3c]
  421e37:	(bad)  
  421e38:	add    BYTE PTR [edx+eax*8+0xb497e15],bh
  421e3f:	adc    eax,0x2a8489a6
  421e44:	jge    0x421e8c
  421e46:	call   0x520bde2
  421e4b:	pop    es
  421e4c:	int3   
  421e4d:	xor    edx,DWORD PTR [esi+0xf]
  421e50:	cli    
  421e51:	cmp    ebp,edx
  421e53:	scas   al,BYTE PTR es:[edi]
  421e54:	cmp    eax,0x355a95ba
  421e59:	adc    DWORD PTR [edi],ebp
  421e5b:	dec    ecx
  421e5c:	jecxz  0x421eac
  421e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5f:	into   
  421e60:	push   0x8668daac
  421e65:	call   0x51eb23b3
  421e6a:	sbb    DWORD PTR [edx-0x38dda5b4],eax
  421e70:	xor    DWORD PTR [edx+0x3dd5a81b],edi
  421e76:	sub    esp,ecx
  421e78:	mov    bh,0x42
  421e7a:	das    
  421e7b:	pop    edi
  421e7c:	imul   esi,DWORD PTR [ecx+0x14],0x36c8244
  421e83:	mov    esp,0x31a0b27f
  421e88:	sbb    al,0x18
  421e8a:	lea    eax,[edx-0x34]
  421e8d:	mov    BYTE PTR [eax-0x19ca27bb],bl
  421e93:	out    dx,eax
  421e94:	inc    ebx
  421e95:	enter  0x78b4,0x4
  421e99:	repz pushf 
  421e9b:	sub    BYTE PTR [edx],dh
  421e9d:	lea    ebx,[ebx]
  421e9f:	sub    edx,eax
  421ea1:	bound  esi,QWORD PTR [edi+0x4d]
  421ea4:	cmp    ecx,eax
  421ea6:	sub    cl,BYTE PTR [esi+0x79c2b1f5]
  421eac:	rcr    DWORD PTR [edx+0x57],0x74
  421eb0:	push   edx
  421eb1:	mov    esp,0x24c3b7cf
  421eb6:	out    dx,al
  421eb7:	das    
  421eb8:	inc    esp
  421eb9:	xor    BYTE PTR [ecx+0x56c882a2],dl
  421ebf:	addr16 mov dh,0x6c
  421ec2:	or     eax,0x1cdff95b
  421ec7:	push   ds
  421ec8:	push   cs
  421ec9:	lea    eax,[esi]
  421ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ecc:	in     eax,0xd
  421ece:	fldenv [ecx-0xeaa57cf]
  421ed4:	xor    ebx,ebp
  421ed6:	pop    ss
  421ed7:	push   ss
  421ed8:	pop    ecx
  421ed9:	and    bh,BYTE PTR [esi+ebp*4]
  421edc:	mov    WORD PTR [ecx+0x2a],?
  421edf:	aam    0x2c
  421ee1:	xor    al,0xae
  421ee3:	fucomip st,st(3)
  421ee5:	scas   eax,DWORD PTR es:[edi]
  421ee6:	push   cs
  421ee7:	sub    ebp,ebp
  421ee9:	sysenter 
  421eeb:	loope  0x421f10
  421eed:	push   ss
  421eee:	test   edx,ecx
  421ef0:	loop   0x421edf
  421ef2:	xor    bh,BYTE PTR [ebx+0x58]
  421ef5:	jno    0x421f56
  421ef7:	sbb    BYTE PTR [eax],al
  421ef9:	outs   dx,DWORD PTR ds:[esi]
  421efa:	dec    esp
  421efb:	stc    
  421efc:	or     esp,ebp
  421efe:	adc    al,bh
  421f00:	push   cs
  421f01:	fistp  DWORD PTR [esi+0x75]
  421f04:	adc    dh,BYTE PTR ds:0x9f5888c3
  421f0a:	aad    0xca
  421f0c:	enter  0x90fd,0x9d
  421f10:	popa   
  421f11:	cmc    
  421f12:	cwde   
  421f13:	in     al,dx
  421f14:	sbb    al,0x97
  421f16:	xor    BYTE PTR [ecx],ch
  421f18:	jns    0x421ed1
  421f1a:	jo     0x421f68
  421f1c:	fadd   st,st(1)
  421f1e:	mov    ecx,0x6dc75a0
  421f23:	mov    bh,0xc7
  421f25:	pusha  
  421f26:	test   al,0xb9
  421f28:	cmp    bl,BYTE PTR ds:0xd062a76b
  421f2e:	imul   ebx,DWORD PTR [edi-0x78338340],0x44918a31
  421f38:	sub    DWORD PTR [esp+eax*1-0xa09f028],0xf59956f9
  421f43:	scas   eax,DWORD PTR es:[edi]
  421f44:	retf   0x3ce8
  421f47:	add    al,0x1a
  421f49:	imul   edi,DWORD PTR [esi-0x7c637a24],0x7a3efdd7
  421f53:	and    al,0x75
  421f55:	sar    BYTE PTR [ebp-0x18441154],0x70
  421f5c:	or     eax,0xaa01a68f
  421f61:	sar    DWORD PTR [ebx-0x4],cl
  421f64:	ja     0x421f08
  421f66:	shl    ebx,cl
  421f68:	outs   dx,BYTE PTR ds:[esi]
  421f69:	mov    esi,0x8337aeab
  421f6e:	push   0x2e71f8cf
  421f73:	push   0xd3aafc4f
  421f78:	mov    cl,0xfe
  421f7a:	mov    ch,0x78
  421f7c:	clc    
  421f7d:	(bad)  
  421f7e:	xchg   ebx,eax
  421f7f:	scas   eax,DWORD PTR es:[edi]
  421f80:	icebp  
  421f81:	cs pop ds
  421f83:	add    ecx,ebx
  421f85:	inc    esi
  421f86:	and    ebx,ebx
  421f88:	cmp    DWORD PTR [edi],ebp
  421f8a:	jns    0x421f57
  421f8c:	fistp  QWORD PTR [ecx+0x50d6dc41]
  421f92:	sub    BYTE PTR [edi+0x37c10bcb],bh
  421f98:	clc    
  421f99:	call   0xcc86ae8
  421f9e:	ja     0x421fff
  421fa0:	pushf  
  421fa1:	mov    WORD PTR [ebp-0x43],ds
  421fa4:	lods   eax,DWORD PTR ds:[esi]
  421fa5:	mov    esp,0xa4a1fbf4
  421faa:	adc    al,0xc2
  421fac:	mul    ah
  421fae:	pop    edx
  421faf:	mov    al,ds:0xb85c8ccd
  421fb4:	jns    0x421f8f
  421fb6:	das    
  421fb7:	cmp    al,0xd9
  421fb9:	mov    esi,0x6293fac6
  421fbe:	arpl   bp,cx
  421fc0:	ja     0x421f47
  421fc2:	fist   WORD PTR [eax-0x3c]
  421fc5:	xchg   edx,eax
  421fc6:	test   BYTE PTR ds:0x6d08bfa6,ah
  421fcc:	fwait
  421fcd:	and    eax,0xaa28d730
  421fd2:	sar    BYTE PTR ds:0xbc89863d,cl
  421fd8:	or     DWORD PTR [eax+0x3b4594a0],0xffffff9e
  421fdf:	add    DWORD PTR gs:[esi],eax
  421fe2:	js     0x422005
  421fe4:	jmp    0x421fae
  421fe6:	loop   0x422006
  421fe8:	in     al,0x4f
  421fea:	add    BYTE PTR [edi-0x51222c09],ah
  421ff0:	push   ds
  421ff1:	inc    DWORD PTR [edx-0x1b]
  421ff4:	jp     0x421fb4
  421ff6:	out    0xeb,eax
  421ff8:	fwait
  421ff9:	mov    bh,BYTE PTR [edx+0x6803b501]
  421fff:	sub    DWORD PTR [edi+0x7c522773],eax
  422005:	shl    DWORD PTR [ebx+esi*4+0x7f],1
  422009:	repnz outs dx,BYTE PTR ds:[esi]
  42200b:	cmp    eax,DWORD PTR [edx]
  42200d:	mov    dh,0x55
  42200f:	iret   
  422010:	mov    dh,bl
  422012:	dec    ebx
  422013:	xchg   esi,eax
  422014:	push   es
  422015:	mov    cl,0x93
  422017:	sub    ebx,esp
  422019:	pushf  
  42201a:	mov    bl,0x0
  42201c:	pop    edi
  42201d:	mov    ch,BYTE PTR [edi]
  42201f:	mov    ebx,0xaf8524ec
  422024:	pop    ecx
  422025:	js     0x421fc3
  422027:	les    ecx,FWORD PTR [esi+0x38584e9c]
  42202d:	bound  esi,QWORD PTR [ebx+0x17c3383d]
  422033:	and    dl,cl
  422035:	lds    ecx,FWORD PTR [ebx+0x2f]
  422038:	stos   DWORD PTR es:[edi],eax
  422039:	jp     0x422095
  42203b:	stos   DWORD PTR es:[edi],eax
  42203c:	xlat   BYTE PTR ds:[ebx]
  42203d:	lea    edi,[ebx+0x3f4567a0]
  422043:	std    
  422044:	dec    esi
  422045:	and    DWORD PTR [ebx+ebp*4-0x230fd111],esp
  42204c:	jb     0x42202e
  42204e:	mov    eax,DWORD PTR [eax-0x3aacbebd]
  422054:	xchg   esi,eax
  422055:	clc    
  422056:	sbb    esp,DWORD PTR [ecx-0x2e]
  422059:	das    
  42205a:	dec    edi
  42205b:	adc    BYTE PTR [ecx-0x43369969],ah
  422061:	ret    
  422062:	iret   
  422063:	aam    0xf9
  422065:	pop    edi
  422066:	cs cld 
  422068:	data16 mov WORD PTR [ebx-0x7eeade3f],?
  42206f:	ins    BYTE PTR es:[edi],dx
  422070:	jo     0x42208c
  422072:	jmp    0x422037
  422074:	rcl    DWORD PTR [edi+edi*1+0x2a19e1d5],0x8c
  42207c:	mov    al,ds:0x49e0eeef
  422081:	out    dx,eax
  422082:	inc    dl
  422084:	outs   dx,DWORD PTR ds:[esi]
  422085:	sbb    eax,0xbee578d9
  42208a:	fcmovnu st,st(3)
  42208c:	pop    esp
  42208d:	clc    
  42208e:	sbb    DWORD PTR [edi-0x2f],ebp
  422091:	dec    edi
  422092:	bound  esi,QWORD PTR [edi+ebx*1+0x1c]
  422096:	or     al,0x7e
  422098:	dec    edx
  422099:	adc    edi,0xfffffff3
  42209c:	mov    ds:0x46877cde,al
  4220a1:	sub    al,BYTE PTR [edi-0x37555688]
  4220a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a8:	loop   0x422060
  4220aa:	or     BYTE PTR [edi-0x17339fad],ch
  4220b0:	pusha  
  4220b1:	xchg   edx,eax
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	mov    edx,0x395cf264
  4220c3:	fwait
  4220c4:	add    DWORD PTR [eax],eax
  4220c6:	clc    
  4220c7:	add    al,0x0
  4220c9:	add    BYTE PTR [ecx+0x28058e42],bl
  4220cf:	inc    ecx
  4220d0:	imul   ebx,esi,0x4a
  4220d3:	cli    
  4220d4:	dec    edi
  4220d5:	(bad)
  4220d8:	inc    esp
  4220d9:	frstor [edi-0x705c847d]
  4220df:	mov    ebx,0x5821cab2
  4220e4:	leave  
  4220e5:	(bad)  
  4220e6:	retf   
  4220e7:	daa    
  4220e8:	mov    ebx,0x91e5cf19
  4220ed:	out    dx,eax
  4220ee:	dec    BYTE PTR [edi]
  4220f0:	jns    0x4220d2
  4220f2:	mov    al,ds:0xd122f70b
  4220f7:	mov    ah,bh
  4220f9:	cmp    al,0xe3
  4220fb:	jno    0x4220cf
  4220fd:	mov    ah,0x73
  4220ff:	pop    ebx
  422100:	imul   eax,DWORD PTR [eax-0x7b1f69c3],0x3d6d1158
  42210a:	gs fwait
  42210c:	dec    esi
  42210d:	call   0xd8b94a0b
  422112:	jp     0x422127
  422114:	test   DWORD PTR [edi-0x3],eax
  422117:	xchg   edx,eax
  422118:	fidiv  DWORD PTR [ecx]
  42211a:	ins    BYTE PTR es:[edi],dx
  42211b:	jge    0x42211c
  42211d:	retf   
  42211e:	sub    ecx,edi
  422120:	or     al,0x1f
  422122:	rol    DWORD PTR [edx+0x6a],0x9f
  422126:	lods   al,BYTE PTR ds:[esi]
  422127:	outs   dx,BYTE PTR ds:[esi]
  422128:	arpl   WORD PTR [edi-0x69],si
  42212b:	inc    edi
  42212c:	lea    ecx,[esi+esi*8+0x7fff9b72]
  422133:	jge    0x422183
  422135:	or     BYTE PTR [ebx],dl
  422137:	pop    edi
  422138:	into   
  422139:	sbb    BYTE PTR [edi-0x4a52ae50],cl
  42213f:	fld    TBYTE PTR [ebp-0x30168650]
  422145:	int3   
  422146:	imul   ebx,esi,0xa1b7cd02
  42214c:	fnstsw WORD PTR [edi+0x32086e7d]
  422152:	jb     0x422196
  422154:	inc    esp
  422155:	lds    edi,FWORD PTR [esi-0x49]
  422158:	pop    esp
  422159:	fimul  DWORD PTR [ebx]
  42215b:	les    edi,FWORD PTR [edi-0xd]
  42215e:	dec    edi
  42215f:	mov    eax,0x98169536
  422164:	push   0x2e
  422166:	and    eax,0x2772e5ea
  42216b:	sub    al,0x6f
  42216d:	jle    0x4220fd
  42216f:	sub    BYTE PTR [esi],0x79
  422172:	inc    esi
  422173:	or     eax,esi
  422175:	and    al,0x15
  422177:	ins    DWORD PTR es:[edi],dx
  422178:	lods   al,BYTE PTR ds:[esi]
  422179:	inc    ebp
  42217a:	(bad)  
  42217b:	clc    
  42217c:	aad    0x91
  42217e:	xchg   ebx,eax
  42217f:	inc    esi
  422180:	pop    ebp
  422181:	ret    0x93fe
  422184:	mov    ch,al
  422186:	jmp    0x422180
  422188:	xor    BYTE PTR [ebp+0x7b],ah
  42218b:	xchg   esp,eax
  42218c:	push   edx
  42218d:	push   edi
  42218e:	je     0x422154
  422190:	(bad)  
  422191:	gs xor al,0xff
  422194:	lds    esp,FWORD PTR [esi+0x2e]
  422197:	fistp  DWORD PTR [edi-0x5]
  42219a:	je     0x422150
  42219c:	mov    ecx,0x5cff318f
  4221a1:	or     DWORD PTR [ecx+0x6598aef4],ecx
  4221a7:	repz jo 0x4221af
  4221aa:	mov    edi,0xeb952178
  4221af:	fist   WORD PTR [ecx+0x44]
  4221b3:	xchg   ecx,eax
  4221b4:	push   cs
  4221b5:	repz inc esp
  4221b7:	cmp    BYTE PTR [edi+0xfa80ae9],bl
  4221bd:	xchg   esp,eax
  4221be:	xchg   BYTE PTR [edi+0x12b76450],ah
  4221c4:	das    
  4221c5:	xchg   edx,eax
  4221c6:	imul   edx,DWORD PTR [ecx-0x3b],0xce24e7e8
  4221cd:	sub    ecx,DWORD PTR [esi-0x56ad1a3f]
  4221d3:	add    DWORD PTR [eax+0x4008a98e],ebp
  4221d9:	push   es
  4221da:	(bad)  
  4221db:	push   edi
  4221dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221dd:	sub    ebp,esi
  4221df:	jbe    0x4221ba
  4221e1:	push   esi
  4221e2:	and    dl,BYTE PTR [edi-0x22]
  4221e5:	pop    ss
  4221e6:	sar    BYTE PTR [edx+0xb2956bf],1
  4221ec:	ins    DWORD PTR es:[edi],dx
  4221ed:	scas   al,BYTE PTR es:[edi]
  4221ee:	push   edx
  4221ef:	mov    cl,0x23
  4221f1:	les    esi,FWORD PTR [eax+0x30]
  4221f4:	iret   
  4221f5:	add    eax,0x4770cdef
  4221fa:	call   0x37e1ddcb
  4221ff:	pop    edx
  422200:	sub    esp,ebp
  422202:	imul   ecx,DWORD PTR [ebx],0x21
  422205:	sbb    eax,0x71a8cf17
  42220a:	mov    bh,0xa6
  42220c:	mov    edi,0x8d4c05f2
  422211:	imul   esi,edx,0xffffffca
  422214:	lods   eax,DWORD PTR ds:[esi]
  422215:	fwait
  422216:	and    dh,BYTE PTR [ebp-0x6a]
  422219:	xchg   edx,eax
  42221a:	mov    DWORD PTR [ecx],ebx
  42221c:	mov    dl,0x7d
  42221e:	mov    DWORD PTR [edx+0x6c],ebp
  422221:	lea    ebx,[eax]
  422223:	ins    BYTE PTR es:[edi],dx
  422224:	enterw 0x53c4,0x52
  422229:	inc    esi
  42222a:	jle    0x422246
  42222c:	push   0xffffffa0
  42222e:	sub    ebx,esp
  422230:	jae    0x4221fc
  422232:	pop    esi
  422233:	jo     0x4221f9
  422235:	adc    ch,BYTE PTR [eax+0x1675d923]
  42223b:	jne    0x422213
  42223d:	fidiv  DWORD PTR [esi+0x3578e420]
  422243:	ins    BYTE PTR es:[edi],dx
  422244:	fwait
  422245:	mov    DWORD PTR [eax+0x1f177da5],esp
  42224b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42224c:	inc    eax
  42224d:	or     bh,ch
  42224f:	cmp    BYTE PTR [esi+ebp*1+0x6083cc26],cl
  422256:	jl     0x422238
  422258:	push   es
  422259:	xlat   BYTE PTR ds:[ebx]
  42225a:	jmp    0xaff8:0x6bf3ce8d
  422261:	repz das 
  422263:	loopne 0x422282
  422265:	lds    ebp,FWORD PTR [edx+0x62]
  422268:	fs pop ebp
  42226a:	xor    bl,bl
  42226c:	stos   BYTE PTR es:[edi],al
  42226d:	ficom  WORD PTR [ebx+ecx*2+0x68d59a29]
  422274:	or     al,0xd
  422276:	fld    st(2)
  422278:	enter  0xb1a3,0xbe
  42227c:	or     BYTE PTR [ecx-0x670f85bc],bh
  422282:	push   esp
  422283:	xchg   dl,bh
  422285:	xor    edi,DWORD PTR [edx]
  422287:	cmp    ah,0xe2
  42228a:	iret   
  42228b:	xchg   ecx,eax
  42228c:	in     al,dx
  42228d:	es sub eax,0x73aeeb96
  422293:	xlat   BYTE PTR ds:[ebx]
  422294:	pusha  
  422295:	push   ss
  422296:	mov    dh,0x6d
  422298:	cdq    
  422299:	bound  esi,QWORD PTR ds:0xeea649e0
  42229f:	jne    0x422229
  4222a1:	pushf  
  4222a2:	test   bh,ch
  4222a4:	sub    eax,0xcadad346
  4222a9:	leave  
  4222aa:	ins    BYTE PTR es:[edi],dx
  4222ab:	test   eax,0x923c12b5
  4222b0:	xlat   BYTE PTR ds:[ebx]
  4222b1:	pop    ebx
  4222b2:	cmp    ebp,ebx
  4222b4:	loop   0x422288
  4222b6:	pop    es
  4222b7:	jp     0x4222e6
  4222b9:	add    eax,0xa58d45b
  4222be:	into   
  4222bf:	cdq    
  4222c0:	aam    0x4c
  4222c2:	test   BYTE PTR [edi],dh
  4222c4:	ficomp WORD PTR [edi]
  4222c6:	popf   
  4222c7:	pop    ebp
  4222c8:	jnp    0x4222a0
  4222ca:	jmp    0xa72ca92c
  4222cf:	pop    es
  4222d0:	sbb    al,0x15
  4222d2:	popf   
  4222d3:	jne    0x422318
  4222d5:	call   0xa2d014cc
  4222da:	neg    BYTE PTR [edx-0x56]
  4222dd:	sti    
  4222de:	aaa    
  4222df:	mov    ch,0xb0
  4222e1:	les    edi,FWORD PTR [edx-0x188d8521]
  4222e7:	fcomp  DWORD PTR [esi-0x73ed1aec]
  4222ed:	mov    edi,0x9a9001cc
  4222f2:	les    ecx,FWORD PTR [ebx+0x728dbf9a]
  4222f8:	add    eax,0xd4f480f
  4222fd:	inc    esi
  4222fe:	xchg   ecx,edx
  422300:	loope  0x42229f
  422302:	push   ebp
  422303:	mov    cl,0x6c
  422305:	add    eax,esi
  422307:	mov    cl,0x5e
  422309:	mov    di,WORD PTR [ebx+edx*4+0x79]
  42230e:	arpl   WORD PTR [eax-0x35],di
  422311:	jnp    0x42235b
  422313:	(bad)  
  422314:	leave  
  422315:	mov    eax,0x9d1f6188
  42231a:	jae    0x4222ca
  42231c:	les    edi,FWORD PTR [edx-0x730d2e59]
  422322:	adc    edi,DWORD PTR [eax-0x69]
  422325:	call   DWORD PTR [ebx]
  422327:	xchg   esp,eax
  422328:	cmc    
  422329:	sti    
  42232a:	out    0x22,eax
  42232c:	mov    edx,0x258f197c
  422331:	sahf   
  422332:	jne    0x422373
  422334:	sub    al,0xbd
  422336:	push   esp
  422337:	jne    0x422324
  422339:	in     eax,0xbd
  42233b:	xor    eax,DWORD PTR [ecx]
  42233d:	push   cs
  42233e:	add    eax,0x4de8854
  422343:	jnp    0x42237b
  422345:	aam    0x6a
  422347:	mov    ecx,0xb65f41cc
  42234c:	into   
  42234d:	pop    ss
  42234e:	mov    edi,0x8f33c937
  422353:	cmp    DWORD PTR [esi+ebx*8],0xffffffd6
  422357:	xchg   ebp,eax
  422358:	pop    eax
  422359:	aaa    
  42235a:	(bad)  
  42235b:	out    dx,eax
  42235c:	jp     0x422385
  42235e:	inc    eax
  42235f:	or     edx,DWORD PTR ds:0xe226822f
  422365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422366:	jle    0x4223a1
  422368:	jne    0x42231f
  42236a:	mov    ebx,0x22d135fb
  42236f:	sbb    al,0x43
  422371:	test   BYTE PTR [ebx+edi*1-0x2100652e],al
  422378:	lea    eax,[edi-0x9]
  42237b:	inc    ebx
  42237c:	cli    
  42237d:	sub    edx,DWORD PTR [edi-0x38]
  422380:	xor    DWORD PTR [edx+0x77],edx
  422383:	jmp    0x82ac9674
  422388:	cmp    eax,0xe09f8dec
  42238d:	nop
  42238e:	imul   ecx,DWORD PTR [esi+0x3e],0xffffffb1
  422392:	sub    DWORD PTR [ebx-0x57],edx
  422395:	mov    DWORD PTR [ebp-0x10d8aa86],esp
  42239b:	pop    esp
  42239c:	jno    0x4223fa
  42239e:	push   ebp
  42239f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223a0:	mov    BYTE PTR [edi],al
  4223a2:	aaa    
  4223a3:	gs (bad) 
  4223a5:	stos   DWORD PTR es:[edi],eax
  4223a6:	leave  
  4223a7:	mov    eax,0xedb03c38
  4223ac:	test   BYTE PTR [ebp+0x313946ec],bl
  4223b2:	jno    0x4223ab
  4223b4:	fld    DWORD PTR [edi-0x1f]
  4223b7:	mov    al,0x30
  4223b9:	scas   al,BYTE PTR es:[edi]
  4223ba:	outs   dx,BYTE PTR cs:[esi]
  4223bc:	cmp    ecx,ebx
  4223be:	in     al,0x75
  4223c0:	cld    
  4223c1:	fs es xor eax,0xe20b5cbc
  4223c8:	loop   0x4223b8
  4223ca:	jne    0x4223c4
  4223cc:	cmovg  esi,esi
  4223cf:	mov    ecx,DWORD PTR [ebp+0x6b837022]
  4223d5:	jno    0x422396
  4223d7:	cs std 
  4223d9:	pusha  
  4223da:	pusha  
  4223db:	bound  ebp,QWORD PTR [ecx]
  4223dd:	xchg   esp,eax
  4223de:	or     edi,DWORD PTR [edi+0x152de597]
  4223e4:	push   ebp
  4223e5:	or     eax,0x3eb2edee
  4223ea:	std    
  4223eb:	cwde   
  4223ec:	pop    ss
  4223ed:	test   al,0xd5
  4223ef:	inc    esi
  4223f0:	cmp    eax,0x33ded0cb
  4223f5:	pop    ecx
  4223f6:	pop    ecx
  4223f7:	cld    
  4223f8:	xchg   edx,eax
  4223f9:	push   ebp
  4223fa:	inc    esi
  4223fb:	sti    
  4223fc:	dec    ebp
  4223fd:	(bad)  
  4223ff:	pop    ebp
  422400:	stc    
  422401:	in     al,0xe5
  422403:	stc    
  422404:	mov    dl,0xbe
  422406:	cld    
  422407:	fs hlt 
  422409:	outs   dx,DWORD PTR ds:[esi]
  42240a:	shr    DWORD PTR [edx-0x51afdf76],1
  422410:	sub    eax,0x11089cb4
  422415:	jo     0x4223b7
  422417:	fistp  DWORD PTR [eax]
  422419:	adc    eax,0xabc726dc
  42241e:	push   ds
  42241f:	call   0xe07c:0x95941a72
  422426:	cmp    esp,DWORD PTR [eax]
  422428:	jno    0x422410
  42242a:	lods   eax,DWORD PTR ds:[esi]
  42242b:	nop
  42242c:	mov    DWORD PTR ds:0x7d99ff53,eax
  422432:	lahf   
  422433:	cmc    
  422434:	cmp    eax,0x32f6eda4
  422439:	in     al,dx
  42243a:	mov    esi,0xad011fd0
  42243f:	inc    edx
  422440:	dec    esp
  422441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422442:	stos   DWORD PTR es:[edi],eax
  422443:	xchg   esp,eax
  422444:	add    dl,BYTE PTR [ebp-0x5c]
  422447:	xchg   BYTE PTR [ebx],bl
  422449:	in     eax,0x58
  42244b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42244c:	add    eax,0x3ced2a1e
  422451:	pusha  
  422452:	in     al,dx
  422453:	sub    DWORD PTR [esi-0x54],eax
  422456:	(bad)  
  422457:	shl    BYTE PTR [edi],cl
  422459:	ficomp DWORD PTR ds:0xbcf82a2d
  42245f:	sti    
  422460:	ss call 0x7d77:0x594dbb1
  422468:	gs pusha 
  42246a:	fist   WORD PTR [ebp-0x1bed8256]
  422470:	stos   DWORD PTR es:[edi],eax
  422471:	xchg   ah,bl
  422473:	dec    ecx
  422474:	sbb    dh,bl
  422476:	sub    eax,0x186489cb
  42247b:	inc    edx
  42247c:	aaa    
  42247d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42247e:	mov    al,ds:0x97785810
  422483:	add    bh,ah
  422485:	fisttp DWORD PTR [esi+0x3f00daa5]
  42248b:	scas   al,BYTE PTR es:[edi]
  42248c:	enter  0x1ca9,0xcc
  422490:	and    al,0xd1
  422492:	pop    ss
  422493:	sub    ecx,DWORD PTR [ebx+0x3485934a]
  422499:	adc    BYTE PTR [edx],dl
  42249b:	add    esi,esi
  42249d:	mov    dl,dh
  42249f:	xor    ecx,DWORD PTR [ecx]
  4224a1:	test   al,0x24
  4224a3:	in     eax,dx
  4224a4:	scas   eax,DWORD PTR es:[edi]
  4224a5:	rol    DWORD PTR [ebx],cl
  4224a7:	mov    ch,0x69
  4224a9:	(bad)  
  4224aa:	jmp    0x4224ca
  4224ac:	loope  0x4224bc
  4224ae:	lods   al,BYTE PTR ds:[esi]
  4224af:	stos   DWORD PTR es:[edi],eax
  4224b0:	nop
  4224b1:	retf   
  4224b2:	call   0x761d:0x5f01c293
  4224b9:	adc    BYTE PTR [edx],0x1d
  4224bc:	imul   ebp,ebx,0xffffffdc
  4224bf:	dec    DWORD PTR [eax-0x28]
  4224c2:	rol    BYTE PTR [eax-0x4],0x6
  4224c6:	push   0x4035964d
  4224cb:	lds    eax,FWORD PTR [eax-0x3b7e48b5]
  4224d1:	adc    ch,BYTE PTR [edx]
  4224d3:	cmp    BYTE PTR [esi+ecx*4+0x6d],dh
  4224d7:	mov    bh,0x47
  4224d9:	push   0x3a
  4224db:	xor    BYTE PTR [eax],0xeb
  4224de:	leave  
  4224df:	stos   DWORD PTR es:[edi],eax
  4224e0:	das    
  4224e1:	xchg   ebp,eax
  4224e2:	bound  ecx,QWORD PTR ds:0x5b320dff
  4224e8:	test   eax,0x6152acec
  4224ed:	or     al,0x45
  4224ef:	sub    al,0xfb
  4224f1:	push   esi
  4224f2:	shl    BYTE PTR [edi+0x361b1184],cl
  4224f8:	dec    ecx
  4224f9:	inc    esp
  4224fa:	mov    ebx,0xf7fc340e
  4224ff:	or     ch,dl
  422501:	or     DWORD PTR [edx],0x8a0616f6
  422507:	add    al,0xce
  422509:	xor    al,0xdb
  42250b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42250c:	jle    0x4224c4
  42250e:	call   0xabd485e0
  422513:	out    dx,eax
  422514:	adc    DWORD PTR [edx-0x4a],ecx
  422517:	scas   eax,DWORD PTR es:[edi]
  422518:	leave  
  422519:	xchg   esi,eax
  42251a:	dec    esp
  42251b:	mov    WORD PTR [edx-0x9],ss
  42251e:	mov    al,0x14
  422520:	mov    WORD PTR [edx-0x2c659296],es
  422526:	mov    cl,0x2f
  422528:	cli    
  422529:	das    
  42252a:	loopne 0x4224e2
  42252c:	lock mov dl,0xc0
  42252f:	sub    DWORD PTR [edi-0x5d182434],edi
  422535:	mov    WORD PTR [ebp+0x623d1921],cs
  42253b:	sub    BYTE PTR [ecx+0x45],bh
  42253e:	or     eax,ebx
  422540:	push   ebx
  422541:	push   0xc37db8f2
  422546:	jae    0x4225a1
  422548:	or     BYTE PTR [eax],al
  42254a:	(bad)  
  42254b:	enter  0xaf52,0x52
  42254f:	out    dx,eax
  422550:	adc    al,cl
  422552:	loope  0x42257d
  422554:	mov    al,0xa8
  422556:	ret    
  422557:	adc    BYTE PTR [ebx+0x71],al
  42255a:	pop    esp
  42255b:	mov    dl,0x64
  42255d:	cmp    eax,0xa3a4ec31
  422562:	add    eax,0x33c52c97
  422567:	in     eax,0x1f
  422569:	push   eax
  42256a:	scas   eax,DWORD PTR es:[edi]
  42256b:	les    esi,FWORD PTR [esi+0x1dd77e9b]
  422571:	gs xchg ebx,ebx
  422574:	dec    edi
  422575:	lahf   
  422576:	or     ch,BYTE PTR [edi]
  422578:	aam    0x4e
  42257a:	jmp    eax
  42257c:	mov    dh,0x21
  42257e:	push   ebx
  42257f:	fld    QWORD PTR [esp+edi*2]
  422582:	ja     0x4225be
  422584:	sbb    al,0xdb
  422586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422587:	mov    eax,ds:0x745383e6
  42258c:	enter  0xd73a,0x7
  422590:	push   ds
  422591:	int3   
  422592:	int    0x1a
  422594:	rol    DWORD PTR [ebp+0x30],0xfd
  422598:	shr    DWORD PTR [ebp+0xb],cl
  42259b:	sub    ecx,ecx
  42259d:	sbb    DWORD PTR [ebx-0x755824b6],esi
  4225a3:	(bad)  
  4225a4:	retf   0x2fb1
  4225a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225a8:	pusha  
  4225a9:	aam    0xb5
  4225ab:	aas    
  4225ac:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4225ae:	cmp    DWORD PTR [esi+esi*8],esi
  4225b1:	jnp    0x4225bb
  4225b3:	clc    
  4225b4:	xor    edx,edi
  4225b6:	jg     0x42255c
  4225b8:	fcom   DWORD PTR [ebp+0x59]
  4225bb:	and    eax,0xcae02c6a
  4225c0:	mov    cl,0x47
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0xa031:0x21086781
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	clc    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR [ecx-0x615f37d0],ah
  4225df:	daa    
  4225e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225e1:	daa    
  4225e2:	popa   
  4225e3:	sub    al,0x60
  4225e5:	xchg   esi,eax
  4225e6:	popa   
  4225e7:	dec    ebx
  4225e8:	jo     0x42259e
  4225ea:	sbb    BYTE PTR [edx-0x625b66fe],0x55
  4225f1:	cmp    eax,0x1ed15402
  4225f6:	add    BYTE PTR [ecx+0x34],0x7b
  4225fa:	pop    ss
  4225fb:	xchg   ebp,eax
  4225fc:	clc    
  4225fd:	gs cdq 
  4225ff:	cmp    BYTE PTR [edx+0x1070ebcb],bh
  422605:	dec    esi
  422606:	ds ins DWORD PTR es:[edi],dx
  422608:	fwait
  422609:	out    0x32,al
  42260b:	rcl    BYTE PTR [ebp+0x7b],cl
  42260e:	jle    0x4225df
  422610:	jno    0x4225b4
  422612:	mov    WORD PTR [ebx],es
  422614:	cld    
  422615:	fidiv  WORD PTR [ebp+eiz*8-0x3c17650c]
  42261c:	neg    esp
  42261e:	ins    DWORD PTR es:[edi],dx
  42261f:	inc    edx
  422620:	mov    al,0x7d
  422622:	jmp    0x422671
  422624:	outs   dx,BYTE PTR ds:[esi]
  422625:	out    0xea,al
  422627:	ins    BYTE PTR es:[edi],dx
  422628:	cld    
  422629:	and    BYTE PTR [ecx+eax*1-0x181b529d],al
  422630:	xchg   ecx,eax
  422631:	and    dl,BYTE PTR [ebx]
  422633:	fnstcw WORD PTR [edi+0x3a]
  422636:	ret    0x6701
  422639:	in     al,dx
  42263a:	inc    ecx
  42263b:	jmp    0x4225ff
  42263d:	xchg   ecx,eax
  42263e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263f:	test   DWORD PTR [edx-0x2f],eax
  422642:	test   eax,0xba39901
  422647:	stos   BYTE PTR es:[edi],al
  422648:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42264a:	mov    DWORD PTR [edi-0x72],edx
  42264d:	test   DWORD PTR [ecx+0x5e8e75f2],eax
  422653:	sub    ebp,ecx
  422655:	inc    edx
  422656:	cmp    ch,cl
  422658:	inc    eax
  422659:	inc    esp
  42265a:	sahf   
  42265b:	lods   eax,DWORD PTR ds:[esi]
  42265c:	mov    bh,BYTE PTR [edi+0x7f6c56d8]
  422662:	sub    ebx,DWORD PTR [esi+eax*2]
  422665:	cdq    
  422666:	adc    cl,bh
  422668:	bound  eax,QWORD PTR [esp+esi*2+0x44]
  42266c:	ins    BYTE PTR es:[edi],dx
  42266d:	mov    ds:0xef7ae298,al
  422672:	into   
  422673:	and    al,0x4d
  422675:	dec    edx
  422676:	and    dh,BYTE PTR [ebx+edx*8]
  422679:	les    edi,FWORD PTR [ebx-0x1c]
  42267c:	jnp    0x422612
  42267e:	mov    esp,0xb0c3c789
  422683:	jle    0x4226b6
  422685:	inc    esi
  422686:	faddp  st(7),st
  422688:	addr16 inc ebp
  42268a:	mov    ebx,0xfaca5fc
  42268f:	ret    0x4b1e
  422692:	(bad)  
  422694:	push   esi
  422695:	or     bh,BYTE PTR [edi]
  422697:	sub    ebx,ecx
  422699:	cmp    eax,0xfe6bddf0
  42269e:	in     al,dx
  42269f:	cmp    DWORD PTR [ebp-0x3b334b4a],0x49b2ffe0
  4226a9:	push   ecx
  4226aa:	sbb    BYTE PTR [ecx],dl
  4226ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ad:	mov    bh,0xa3
  4226af:	jno    0x422705
  4226b1:	out    0x47,al
  4226b3:	or     eax,0xef10fd21
  4226b8:	pop    ebp
  4226b9:	sahf   
  4226ba:	push   0x2f4cf8da
  4226bf:	fincstp 
  4226c1:	bound  ebp,QWORD PTR [ecx+0x3a]
  4226c4:	xor    cl,0xc0
  4226c7:	jae    0x4226a8
  4226c9:	push   0x61047a0c
  4226ce:	idiv   BYTE PTR [ebp+ebx*1-0x80]
  4226d2:	mov    ebp,0x83dfba01
  4226d7:	mov    eax,0x92d57bc9
  4226dc:	xchg   ebx,eax
  4226dd:	pop    eax
  4226de:	mov    ds:0x66a4c32d,al
  4226e3:	mov    dl,0xc1
  4226e5:	jae    0x422714
  4226e7:	adc    DWORD PTR [eax+0x37],ebp
  4226ea:	in     eax,dx
  4226eb:	in     al,dx
  4226ec:	mov    edx,0x58fc8c09
  4226f1:	mov    WORD PTR [ecx+0x6d2fe732],?
  4226f7:	outs   dx,BYTE PTR ds:[esi]
  4226f8:	lods   eax,DWORD PTR ds:[esi]
  4226f9:	lea    ebp,[esi]
  4226fb:	aad    0xa7
  4226fd:	or     eax,0xdb87c547
  422702:	fwait
  422703:	popa   
  422704:	mov    ds:0x2955c61e,al
  422709:	sbb    eax,0x2dc03e59
  42270e:	outs   dx,BYTE PTR ds:[esi]
  42270f:	push   ds
  422710:	mov    WORD PTR [eax],ds
  422712:	ror    DWORD PTR [ebx],0x93
  422715:	hlt    
  422716:	scas   eax,DWORD PTR es:[edi]
  422717:	sub    al,0x1f
  422719:	jnp    0x4226a8
  42271b:	adc    ecx,DWORD PTR [eax]
  42271d:	(bad)  
  42271e:	fiadd  DWORD PTR [eax-0x2176d87f]
  422724:	hlt    
  422725:	repz mov eax,ds:0x32190b26
  42272b:	inc    eax
  42272c:	punpckldq mm4,DWORD PTR [ecx+ebx*1+0xc]
  422731:	push   ss
  422732:	retf   0xa6a7
  422735:	pop    edi
  422736:	repz mov ebp,0x41bf1a2d
  42273c:	addr16 mov dl,0x25
  42273f:	ret    
  422740:	and    eax,0x27c6e2e3
  422745:	leave  
  422746:	cdq    
  422747:	cs lock pop ss
  42274a:	adc    DWORD PTR [ecx+ebx*1],ecx
  42274d:	mov    bh,0xae
  42274f:	je     0x4227be
  422751:	or     dh,BYTE PTR [ebx]
  422753:	jge    0x4227a9
  422755:	and    al,0x48
  422757:	mov    ah,0x43
  422759:	test   al,0x24
  42275b:	push   ss
  42275c:	xor    al,0xa4
  42275e:	push   ebx
  42275f:	shr    BYTE PTR [esp+esi*1],1
  422762:	aas    
  422763:	add    BYTE PTR [edi],al
  422765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422766:	pop    ebx
  422767:	push   ecx
  422768:	or     al,0x20
  42276a:	aam    0x42
  42276c:	outs   dx,DWORD PTR ds:[esi]
  42276d:	sub    al,0xa6
  42276f:	sub    DWORD PTR [eax+0x51bacb36],edx
  422775:	shl    DWORD PTR [edi-0x742f5bee],cl
  42277b:	or     al,0xc0
  42277d:	scas   eax,DWORD PTR es:[edi]
  42277e:	jle    0x422750
  422780:	pop    ecx
  422781:	cmp    BYTE PTR [esi],bh
  422783:	gs sahf 
  422785:	xchg   ebp,eax
  422786:	dec    ebp
  422787:	pushf  
  422788:	retf   
  422789:	adc    eax,0x5a5f1bd2
  42278e:	cli    
  42278f:	inc    ecx
  422790:	adc    BYTE PTR [eax-0x71],dl
  422793:	out    dx,eax
  422794:	mov    bl,0x45
  422796:	clc    
  422797:	jge    0x422774
  422799:	dec    esi
  42279a:	into   
  42279b:	lock jmp 0xe8a5:0x75707dfa
  4227a3:	sahf   
  4227a4:	or     bh,BYTE PTR [ebx-0x1ada302c]
  4227aa:	dec    esp
  4227ab:	aas    
  4227ac:	jbe    0x422826
  4227ae:	out    0xcf,eax
  4227b0:	jb     0x422739
  4227b2:	out    0x55,eax
  4227b4:	ja     0x4227aa
  4227b6:	inc    eax
  4227b7:	scas   eax,DWORD PTR es:[edi]
  4227b8:	add    al,BYTE PTR [edx+ebx*2+0x6a3a2716]
  4227bf:	inc    edi
  4227c0:	es test al,0x7
  4227c3:	sti    
  4227c4:	imul   BYTE PTR [eax+0x57]
  4227c7:	or     ah,cl
  4227c9:	jae    0x422775
  4227cb:	pop    eax
  4227cc:	or     ch,dh
  4227ce:	mov    cl,0xe7
  4227d0:	jecxz  0x4227a7
  4227d2:	pop    ebx
  4227d3:	icebp  
  4227d4:	loopne 0x42276a
  4227d6:	and    al,0xb2
  4227d8:	sub    bh,BYTE PTR [edx+0x72da9c0]
  4227de:	sub    eax,0x9eb75e7c
  4227e3:	mov    ebx,0xf72fc4c8
  4227e8:	in     eax,0x3d
  4227ea:	jmp    0x91296391
  4227ef:	retf   
  4227f0:	dec    ebp
  4227f1:	mov    dh,0x53
  4227f3:	bound  ecx,QWORD PTR [edx+0x4c]
  4227f6:	add    DWORD PTR [eax-0x61],edx
  4227f9:	fmul   QWORD PTR [ebx]
  4227fb:	or     ah,BYTE PTR [ebx+0x16]
  4227fe:	in     al,dx
  4227ff:	jl     0x422814
  422801:	outs   dx,BYTE PTR es:[esi]
  422803:	adc    BYTE PTR [edx+0x5ef254bb],dh
  422809:	sub    al,0x33
  42280b:	cmp    cl,BYTE PTR [eax]
  42280d:	inc    ebp
  42280e:	cmc    
  42280f:	jb     0x422832
  422811:	cdq    
  422812:	pop    eax
  422813:	call   0x5865:0xf997461f
  42281a:	rcl    DWORD PTR [ecx-0x386e8188],1
  422820:	push   edi
  422821:	push   es
  422822:	nop
  422823:	xor    al,0x99
  422825:	(bad)  
  422826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422827:	jb     0x2c64a3aa
  42282d:	std    
  42282e:	xchg   edx,eax
  422830:	xchg   ecx,eax
  422831:	push   ebp
  422832:	in     al,0x4e
  422834:	sub    al,BYTE PTR [edx+0x255f3475]
  42283a:	rcr    DWORD PTR [edi-0x9f4e896],1
  422840:	xchg   ebx,eax
  422841:	ins    DWORD PTR es:[edi],dx
  422842:	fwait
  422843:	jne    0x422831
  422845:	and    eax,0xb0da19d2
  42284a:	loope  0x422840
  42284c:	idiv   BYTE PTR [esi]
  42284e:	scas   eax,DWORD PTR es:[edi]
  42284f:	inc    edx
  422850:	mov    ebp,0x9a9f459b
  422855:	mov    gs,WORD PTR [eax-0x3762c0e7]
  42285b:	in     eax,dx
  42285c:	or     eax,0xf1d80ca7
  422861:	mov    ch,0x30
  422863:	ins    BYTE PTR es:[edi],dx
  422864:	retw   0xc9fe
  422868:	jno    0x422810
  42286a:	das    
  42286b:	and    esp,DWORD PTR [edx-0x45ea6a1b]
  422871:	pop    esp
  422872:	mov    WORD PTR [ecx+ebx*2],?
  422875:	and    edx,DWORD PTR [edi+edx*4-0x80]
  422879:	mov    WORD PTR [edi+edx*2],?
  42287c:	mov    bh,0xe6
  42287e:	jnp    0x422898
  422880:	imul   ecx,edx,0xb859f188
  422886:	xchg   ch,cl
  422888:	(bad)
  42288b:	js     0x422909
  42288d:	not    DWORD PTR [edi+0xd44f05e]
  422893:	add    DWORD PTR [esi+edx*1-0x2460da80],esp
  42289a:	push   ecx
  42289b:	ds pop eax
  42289d:	in     eax,dx
  42289e:	mov    al,ds:0x21791c65
  4228a3:	sbb    dh,al
  4228a5:	add    DWORD PTR [ecx+0x74b667c7],ecx
  4228ab:	repz xchg esi,eax
  4228ad:	sbb    BYTE PTR [ebp+0x76ffa15b],al
  4228b3:	int3   
  4228b4:	aas    
  4228b5:	out    dx,eax
  4228b6:	mov    ebp,0xf8cb81ee
  4228bb:	jbe    0x4228a8
  4228bd:	push   0x5c95491b
  4228c2:	daa    
  4228c3:	retf   0xd932
  4228c6:	movzx  edx,WORD PTR [edi]
  4228c9:	cmp    DWORD PTR [esp+esi*8+0x21700af0],0x6f6b4f77
  4228d4:	popa   
  4228d5:	pop    ebx
  4228d6:	daa    
  4228d7:	nop
  4228d8:	popa   
  4228d9:	mov    eax,0xc1cd1307
  4228de:	sub    eax,0x65fa17f2
  4228e3:	xchg   edi,eax
  4228e4:	test   eax,0x83613879
  4228e9:	xchg   esp,eax
  4228ea:	jmp    0x4228e3
  4228ec:	int3   
  4228ed:	ja     0x422968
  4228ef:	jmp    0x3e0b726d
  4228f4:	pushf  
  4228f5:	xor    al,0x34
  4228f7:	fstp   DWORD PTR [eax-0x59]
  4228fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228fb:	popa   
  4228fc:	fwait
  4228fd:	dec    esp
  4228fe:	test   DWORD PTR [ebp-0x558996e5],ecx
  422904:	sub    dh,dh
  422906:	mov    dh,0x2a
  422908:	xchg   ecx,eax
  422909:	je     0x4228d5
  42290b:	(bad)  
  42290c:	xchg   esp,eax
  42290d:	inc    eax
  42290e:	mov    ds:0xcf1673c6,eax
  422913:	lods   eax,DWORD PTR ds:[esi]
  422914:	ins    BYTE PTR es:[edi],dx
  422915:	loopne 0x4228e1
  422917:	and    bh,BYTE PTR [eax]
  422919:	test   al,0x4f
  42291b:	and    DWORD PTR [ebx+edx*4-0x7e],edi
  42291f:	inc    ecx
  422920:	push   esp
  422921:	pop    edi
  422922:	test   edi,ecx
  422924:	popf   
  422925:	imul   ecx,DWORD PTR [eax+eiz*2+0x8],0xffffffe9
  42292a:	adc    al,0x4b
  42292c:	bnd call 0x22fbe176
  422932:	cmc    
  422933:	call   0x903e:0x30be9239
  42293a:	push   esp
  42293b:	out    0x56,eax
  42293d:	adc    cl,BYTE PTR [ebp-0x3c]
  422940:	cmp    eax,edx
  422942:	adc    al,0xe
  422944:	enter  0x2c2c,0xa9
  422948:	fcmovb st,st(5)
  42294a:	repnz mov edi,0x3b3ea37a
  422950:	ss mov ecx,0x764a979f
  422956:	adc    dh,0x75
  422959:	imul   ecx,esp,0x7b
  42295c:	xor    al,0xda
  42295e:	push   ecx
  42295f:	adc    al,0xe3
  422961:	clc    
  422962:	xor    eax,0x2ff6ca7d
  422967:	lea    esi,[ebp+ecx*4-0x5df83279]
  42296e:	(bad)  
  42296f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422971:	inc    edi
  422972:	jmp    0x30a3:0xc5a7416a
  422979:	cmovbe ecx,eax
  42297c:	ret    0x968f
  42297f:	dec    eax
  422980:	sub    al,0xce
  422982:	out    dx,eax
  422983:	mov    ecx,0x70b41bdd
  422988:	test   eax,0x6e5c1dba
  42298d:	fadd   QWORD PTR [ebx-0x3a6d88]
  422993:	retf   0x3d2
  422996:	rcl    BYTE PTR [eax-0x65],cl
  422999:	mov    WORD PTR [edx],ds
  42299b:	sbb    eax,0xcbf5e2ed
  4229a0:	adc    BYTE PTR [eax+0x3fa6aeff],ah
  4229a6:	retf   0x85fc
  4229a9:	mov    esp,0x67f26849
  4229ae:	and    WORD PTR [edi-0x23],bx
  4229b2:	mov    ah,0x12
  4229b4:	pop    ebp
  4229b5:	mov    dl,0x90
  4229b7:	test   dl,dl
  4229b9:	test   BYTE PTR [ebx],al
  4229bb:	(bad)  
  4229bc:	imul   ebp,DWORD PTR [ecx+0x317bb7a7],0x69b01c41
  4229c6:	lods   eax,DWORD PTR ds:[esi]
  4229c7:	aaa    
  4229c8:	ja     0x4229a8
  4229ca:	mov    ch,0x6f
  4229cc:	out    dx,al
  4229cd:	sub    ebx,edx
  4229cf:	adc    edi,DWORD PTR [esi+eax*1+0x16]
  4229d3:	mov    eax,0xf266ee80
  4229d8:	xor    ecx,DWORD PTR [ebp+esi*8+0x71]
  4229dc:	ss lahf 
  4229de:	and    bh,BYTE PTR [edx]
  4229e0:	and    al,0xea
  4229e2:	cmp    BYTE PTR [ebx],ah
  4229e4:	sbb    DWORD PTR es:0x28cd9da5,esp
  4229eb:	add    eax,DWORD PTR [edi+0x265385d8]
  4229f1:	xchg   DWORD PTR [edi+0x20],ebp
  4229f4:	xchg   BYTE PTR [ebp+ecx*4+0x24],cl
  4229f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f9:	adc    al,0xe6
  4229fb:	call   0x50f24674
  422a00:	adc    eax,0x20818431
  422a05:	pop    es
  422a06:	out    0xd6,eax
  422a08:	lods   eax,DWORD PTR ds:[esi]
  422a09:	and    eax,DWORD PTR [ebx]
  422a0b:	stos   BYTE PTR es:[edi],al
  422a0c:	and    al,0x8e
  422a0e:	or     DWORD PTR [edi],edi
  422a10:	ja     0x4229e1
  422a12:	and    eax,esi
  422a14:	test   al,0xe7
  422a16:	xchg   bh,ch
  422a18:	sub    DWORD PTR [edi+0x3ad19ced],0x78
  422a1f:	and    bl,ch
  422a21:	jno    0x422a84
  422a23:	or     DWORD PTR [ebx+ecx*4-0x4b],ebx
  422a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a28:	out    0x2d,eax
  422a2a:	xlat   BYTE PTR ds:[ebx]
  422a2b:	hlt    
  422a2c:	daa    
  422a2d:	mov    edx,0x45772bc6
  422a32:	cdq    
  422a33:	pop    esp
  422a34:	push   es
  422a35:	or     al,0x4e
  422a37:	add    eax,0xfe0d9f9d
  422a3c:	sti    
  422a3d:	icebp  
  422a3e:	cmp    DWORD PTR [eax-0x6e],edx
  422a41:	pop    ebp
  422a42:	pop    ds
  422a43:	es jmp 0xd0ec:0xe425acaf
  422a4b:	jno    0x422a42
  422a4d:	inc    ecx
  422a4e:	mov    ah,0xb2
  422a50:	add    DWORD PTR ds:0xe662adae,edx
  422a56:	dec    ebx
  422a57:	rcr    DWORD PTR [ebx],1
  422a59:	jmp    0x4229db
  422a5b:	out    0x7d,al
  422a5d:	mov    ?,ecx
  422a5f:	leave  
  422a60:	and    BYTE PTR [edx-0x16],dh
  422a63:	push   ds
  422a64:	pop    ss
  422a65:	lods   al,BYTE PTR ds:[esi]
  422a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a67:	xlat   BYTE PTR ds:[ebx]
  422a68:	cdq    
  422a69:	lds    ecx,FWORD PTR ds:0x81783dde
  422a6f:	pop    edi
  422a70:	mov    ds:0xe49c11c5,al
  422a75:	push   ss
  422a76:	loop   0x422ade
  422a78:	daa    
  422a79:	das    
  422a7a:	or     eax,0x22143f7c
  422a7f:	dec    esi
  422a80:	sti    
  422a81:	xor    al,0x7
  422a83:	out    dx,eax
  422a84:	add    ecx,DWORD PTR [esi+0x4f]
  422a87:	mov    ds:0x6d98f5f9,al
  422a8c:	cmp    al,0x7a
  422a8e:	push   esi
  422a8f:	mov    bl,0x2b
  422a91:	mov    esi,0xf387f3b7
  422a96:	into   
  422a97:	imul   edi,ecx,0xf2dd6f66
  422a9d:	and    DWORD PTR [edi-0x62942256],edx
  422aa3:	pop    esi
  422aa4:	ja     0x422aaf
  422aa6:	mov    cl,0x8b
  422aa8:	xchg   edx,eax
  422aa9:	cmp    eax,0xbdc1f2c7
  422aae:	pop    edi
  422aaf:	push   0xfb0cea43
  422ab4:	jno    0x422a58
  422ab6:	test   BYTE PTR [edi+0x38],cl
  422ab9:	mov    ebx,0x7561dc0e
  422abe:	cs jge 0x422a58
  422ac1:	cmp    eax,0x80e8cff8
  422ac6:	in     eax,0xa6
  422ac8:	(bad)  [edi]
  422aca:	sbb    BYTE PTR [edx],0x44
  422acd:	xor    cl,BYTE PTR [ebx]
  422acf:	pop    es
  422ad0:	mov    al,0xf6
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx-0x5ac52b65],bh
  422ae2:	sub    DWORD PTR [ebp+0x4f80001],esp
  422ae8:	add    BYTE PTR [eax],al
  422aea:	nop
  422aeb:	pop    edx
  422aec:	es in  al,0xaf
  422aef:	call   0x567e64da
  422af4:	pop    ecx
  422af5:	xchg   ecx,eax
  422af6:	cmp    eax,0x33f3b4a0
  422afb:	int3   
  422afc:	adc    al,0xa4
  422afe:	ins    DWORD PTR es:[edi],dx
  422aff:	cmp    DWORD PTR [ecx-0x40],ebx
  422b02:	jmp    0x603e:0x11a7ba65
  422b09:	xchg   esi,eax
  422b0a:	xor    eax,DWORD PTR [esi-0x34e42cb0]
  422b10:	rol    BYTE PTR [ebx+0x61],0xfe
  422b14:	addr16 aam 0x52
  422b17:	fwait
  422b18:	stos   DWORD PTR es:[edi],eax
  422b19:	xchg   esp,eax
  422b1a:	cli    
  422b1b:	and    eax,DWORD PTR [ebp-0x4819c815]
  422b21:	nop
  422b22:	sbb    bl,BYTE PTR [edx+0x4d6e84ab]
  422b28:	adc    BYTE PTR [eax],dh
  422b2a:	push   ss
  422b2b:	js     0x422aeb
  422b2d:	ja     0x422b15
  422b2f:	xor    DWORD PTR [ebx],edx
  422b31:	stos   BYTE PTR es:[edi],al
  422b32:	pop    es
  422b33:	dec    edi
  422b34:	test   BYTE PTR [edx+0x67],0x9
  422b38:	adc    DWORD PTR [ebx+0x7f792d2a],esp
  422b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b3f:	call   0x61e43b1d
  422b44:	add    esi,esi
  422b46:	xchg   edi,eax
  422b47:	(bad)
  422b4a:	xchg   edi,eax
  422b4b:	repz adc eax,0x40c20ab4
  422b51:	xchg   edx,eax
  422b52:	das    
  422b53:	shr    eax,1
  422b55:	xor    ah,BYTE PTR [eax]
  422b57:	cmp    al,0xb0
  422b59:	push   esp
  422b5a:	add    BYTE PTR [ebx],ch
  422b5c:	(bad)  
  422b5e:	mov    ds:0x9a8083b7,eax
  422b63:	inc    ecx
  422b64:	fld    QWORD PTR [edx+esi*8+0x13]
  422b68:	aad    0xe9
  422b6a:	or     esp,ecx
  422b6c:	stos   BYTE PTR es:[edi],al
  422b6d:	in     eax,0xd9
  422b6f:	gs mov ecx,0x1cc4da74
  422b75:	xor    DWORD PTR [eax-0x45],eax
  422b78:	xor    eax,0x73531736
  422b7d:	cmp    DWORD PTR ds:0x65b4d5b7,0x85aaf2ab
  422b87:	adc    al,0x1e
  422b89:	jne    0x422b19
  422b8b:	fild   WORD PTR [eax+0x12609659]
  422b91:	jl     0x422b4f
  422b93:	setbe  BYTE PTR [edx]
  422b96:	popa   
  422b97:	pop    esi
  422b98:	je     0x422b42
  422b9a:	cdq    
  422b9b:	stc    
  422b9c:	mov    BYTE PTR [ebx+0x6e],dh
  422b9f:	add    DWORD PTR [eax+0x7c],ebx
  422ba2:	(bad)  
  422ba3:	clc    
  422ba4:	lds    esi,FWORD PTR [edi]
  422ba6:	push   0x4a
  422ba8:	inc    ebx
  422ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422baa:	dec    ebp
  422bab:	xor    ch,bl
  422bad:	mov    esp,0x7db1c1ee
  422bb2:	adc    edx,DWORD PTR [eax-0x3]
  422bb5:	imul   eax,ebp,0x23
  422bb8:	out    dx,al
  422bb9:	call   0xca93:0xf1e104dd
  422bc0:	jle    0x422be3
  422bc2:	xlat   BYTE PTR ds:[ebx]
  422bc3:	dec    ecx
  422bc4:	xchg   ecx,eax
  422bc5:	jl     0x422bc5
  422bc7:	sbb    BYTE PTR [edi-0x29],bh
  422bca:	(bad)  
  422bcc:	xchg   BYTE PTR [ebx],cl
  422bce:	or     esp,DWORD PTR [edx-0x651f983]
  422bd4:	mov    al,ds:0xa14c0295
  422bd9:	dec    ebp
  422bda:	jno    0x422bb0
  422bdc:	pop    ds
  422bdd:	loop   0x422c3e
  422bdf:	xor    dh,BYTE PTR ds:0xbd04bf56
  422be5:	add    DWORD PTR [eax+0x633a8553],edi
  422beb:	cs push 0x5446744e
  422bf1:	loop   0x422bcd
  422bf3:	ret    
  422bf4:	call   0x847f26a6
  422bf9:	inc    DWORD PTR [eax]
  422bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bfc:	mov    ah,0x59
  422bfe:	ins    BYTE PTR es:[edi],dx
  422bff:	fdiv   QWORD PTR [ebp+0x6d27c04b]
  422c05:	cmp    BYTE PTR [ecx+0x1ef0e3e1],ah
  422c0b:	push   edi
  422c0c:	or     bl,cl
  422c0e:	lahf   
  422c0f:	fwait
  422c10:	lods   al,BYTE PTR ds:[esi]
  422c11:	push   0x1f4a654
  422c16:	les    esi,FWORD PTR [edi+0x8]
  422c19:	les    ecx,FWORD PTR [edx+0xd8f3424]
  422c1f:	pop    ebx
  422c20:	and    DWORD PTR [esi+0x51],esp
  422c23:	jmp    0xc845590d
  422c28:	mov    dl,0xda
  422c2a:	loopne 0x422bae
  422c2c:	fnstenv [ebp-0x1e]
  422c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c30:	mov    ebx,cs
  422c32:	xchg   esp,eax
  422c33:	test   al,0xb3
  422c35:	sbb    eax,0xc9c57611
  422c3a:	out    dx,al
  422c3b:	pop    ss
  422c3c:	je     0x422c7f
  422c3e:	or     DWORD PTR [edx+0x32],esi
  422c41:	and    BYTE PTR [ebp-0x4abe59d5],dh
  422c47:	bound  esp,QWORD PTR [eax+0x45]
  422c4a:	imul   eax,DWORD PTR [ebx-0x32],0x9c6b6333
  422c51:	sbb    DWORD PTR ds:0x25cbed8,esi
  422c57:	fadd   DWORD PTR [ebx]
  422c59:	and    ecx,DWORD PTR [eax-0x314e951b]
  422c5f:	sahf   
  422c60:	(bad)  
  422c61:	daa    
  422c62:	jle    0x422ccf
  422c64:	ror    DWORD PTR [ecx+eax*4-0x1],1
  422c68:	(bad)  
  422c69:	jecxz  0x422c5e
  422c6b:	jno    0x422c57
  422c6d:	mov    al,BYTE PTR [ebx+0x60]
  422c70:	push   es
  422c71:	daa    
  422c72:	cld    
  422c73:	jecxz  0x422c57
  422c75:	inc    edx
  422c76:	lea    ebp,[esi+0x4b]
  422c79:	mov    ah,0xdb
  422c7b:	xchg   esi,eax
  422c7c:	jle    0x422ce3
  422c7e:	push   ebp
  422c7f:	or     cl,BYTE PTR [edx+0x267046d3]
  422c85:	jle    0x422c22
  422c87:	cmp    eax,DWORD PTR [edi-0x5793a44e]
  422c8d:	scas   al,BYTE PTR es:[edi]
  422c8e:	add    DWORD PTR [ecx+0x49f4ae66],edx
  422c94:	sub    BYTE PTR [ebx+0x7af54e4a],al
  422c9a:	add    eax,0x15df87ad
  422c9f:	icebp  
  422ca0:	ja     0x422cd3
  422ca2:	mov    eax,ds:0x5601d2dc
  422ca7:	lods   al,BYTE PTR ds:[esi]
  422ca8:	mov    esp,0x46ddc81
  422cad:	dec    ebx
  422cae:	outs   dx,DWORD PTR ds:[esi]
  422caf:	scas   eax,DWORD PTR es:[edi]
  422cb0:	adc    edx,ebp
  422cb2:	retf   0x87cc
  422cb5:	call   0x3698:0x8009cafb
  422cbc:	js     0x422c7c
  422cbe:	dec    edx
  422cbf:	xchg   ecx,eax
  422cc0:	clc    
  422cc1:	cmp    al,0x4c
  422cc3:	(bad)  
  422cc4:	mov    esp,0x5a66307d
  422cc9:	psrlq  mm7,mm3
  422ccc:	pop    ebx
  422ccd:	jno    0x422cbc
  422ccf:	mov    bh,0x99
  422cd1:	fs dec esp
  422cd3:	xchg   edi,eax
  422cd4:	stos   BYTE PTR es:[edi],al
  422cd5:	jge    0x422caf
  422cd7:	stos   DWORD PTR es:[edi],eax
  422cd8:	in     al,0x7b
  422cda:	shr    DWORD PTR [ebx-0x1ea74bc],1
  422ce0:	sbb    al,0xe4
  422ce2:	sbb    DWORD PTR [eax-0x9],esp
  422ce5:	cwde   
  422ce6:	xor    cl,ch
  422ce8:	fwait
  422ce9:	int3   
  422cea:	iret   
  422ceb:	mov    BYTE PTR [ebx-0x2ac001cf],ch
  422cf1:	pop    ebx
  422cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf3:	out    dx,eax
  422cf4:	aad    0xb8
  422cf6:	out    dx,al
  422cf7:	rcl    DWORD PTR [eax-0x10970c7c],0x77
  422cfe:	sub    al,0x5b
  422d00:	es xchg ebp,eax
  422d02:	sub    edi,DWORD PTR [esi-0x7d]
  422d05:	sbb    DWORD PTR [edi],esp
  422d07:	cmp    dl,BYTE PTR [ecx+0x26]
  422d0a:	aas    
  422d0b:	cmp    al,0xae
  422d0d:	or     al,0x3f
  422d0f:	jo     0x422ce4
  422d11:	push   cs
  422d12:	sub    DWORD PTR [edx],edx
  422d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d15:	pop    edx
  422d16:	cdq    
  422d17:	popf   
  422d18:	in     eax,dx
  422d19:	ss jne 0x422d36
  422d1c:	jmp    0x422d25
  422d1e:	or     DWORD PTR [ecx-0x5],0xeea7bdf8
  422d25:	jge    0x422d83
  422d27:	adc    edi,0x8ffa9028
  422d2d:	paddsb mm6,QWORD PTR [edx]
  422d30:	call   0x558ed848
  422d35:	pop    ebx
  422d36:	pop    edx
  422d37:	push   0xb0f08042
  422d3c:	not    BYTE PTR [ecx+0x41]
  422d3f:	sub    ch,BYTE PTR [ecx+0x1fc34f87]
  422d45:	inc    ebp
  422d46:	cmp    edx,ebx
  422d48:	mov    cl,0x51
  422d4a:	adc    BYTE PTR [esi],dl
  422d4c:	xor    DWORD PTR [ebx],edx
  422d4e:	add    edi,DWORD PTR [ebp-0x4befb1e9]
  422d54:	mov    ah,0x85
  422d56:	jb     0x422d9a
  422d58:	jp     0x422dd2
  422d5a:	add    DWORD PTR [edi],edx
  422d5c:	dec    eax
  422d5d:	push   edx
  422d5e:	sbb    DWORD PTR [ecx+0x5f809d1d],ebx
  422d64:	neg    BYTE PTR [ebx+0x4b]
  422d67:	test   BYTE PTR [ecx+0x7f],ah
  422d6a:	fwait
  422d6b:	pop    esp
  422d6c:	or     al,0xaf
  422d6e:	(bad)
  422d73:	push   edx
  422d74:	and    eax,0x6a3bed10
  422d79:	aaa    
  422d7a:	imul   esi,eax,0xffffffbb
  422d7d:	ss sahf 
  422d7f:	(bad)  
  422d80:	mov    al,ds:0x1ece188
  422d85:	cmp    esi,DWORD PTR [esi+0x46]
  422d88:	cwde   
  422d89:	ror    bh,cl
  422d8b:	jp     0x422d24
  422d8d:	scas   al,BYTE PTR es:[edi]
  422d8e:	das    
  422d8f:	iret   
  422d90:	lock adc eax,0x4ecbbf99
  422d96:	or     eax,0xe5fb4bc0
  422d9b:	jno    0x422d81
  422d9d:	adc    DWORD PTR [ebx-0x4],edi
  422da0:	neg    DWORD PTR [edx-0x2d33b9de]
  422da6:	lea    ebp,[ecx-0x4e]
  422da9:	lods   al,BYTE PTR ss:[esi]
  422dab:	imul   edx,ebp,0xf29996e6
  422db1:	test   eax,0x6294fea9
  422db6:	gs push 0xec616611
  422dbc:	push   es
  422dbd:	push   ss
  422dbe:	cwde   
  422dbf:	shr    DWORD PTR [esi],0x3
  422dc2:	mov    ebp,eax
  422dc4:	xchg   BYTE PTR [ecx-0x38ae27f7],dh
  422dca:	dec    edx
  422dcb:	mul    BYTE PTR [edi+0x24]
  422dce:	stos   DWORD PTR es:[edi],eax
  422dcf:	xchg   BYTE PTR [ebp-0x26],dh
  422dd2:	in     eax,0x1b
  422dd4:	sub    eax,0xe3b58838
  422dd9:	outs   dx,DWORD PTR ds:[esi]
  422dda:	in     al,dx
  422ddb:	mov    al,ds:0x717e3f62
  422de0:	mov    eax,ds:0xb193999e
  422de5:	push   edx
  422de6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422de8:	popf   
  422de9:	out    dx,eax
  422dea:	adc    dl,dl
  422dec:	loopne 0x422d98
  422dee:	xchg   esp,eax
  422def:	out    dx,al
  422df0:	sub    ebx,edi
  422df2:	int    0x19
  422df4:	mov    ebp,cs
  422df6:	outs   dx,BYTE PTR ds:[esi]
  422df7:	fwait
  422df8:	push   es
  422df9:	lock lods al,BYTE PTR ds:[esi]
  422dfb:	jg     0x422dd5
  422dfd:	cs loopne 0x422e53
  422e00:	sub    bl,BYTE PTR [ebp+0xc599123]
  422e06:	push   esi
  422e07:	xchg   edx,eax
  422e08:	or     dl,BYTE PTR [ecx-0x59161a4d]
  422e0e:	fs popf 
  422e10:	xchg   ebx,eax
  422e11:	push   ss
  422e12:	inc    edx
  422e13:	retf   
  422e14:	and    eax,eax
  422e16:	cwde   
  422e17:	lea    ebp,[edi+ebp*4-0x1c]
  422e1b:	xchg   esi,eax
  422e1c:	aam    0xfc
  422e1e:	dec    ebx
  422e1f:	sahf   
  422e20:	das    
  422e21:	mov    al,ds:0xfad9446c
  422e26:	mov    ds:0xbf7d088,eax
  422e2b:	cdq    
  422e2c:	mov    dl,BYTE PTR [ecx+edi*1-0xb70e492]
  422e33:	mov    esi,0x5b13e5fd
  422e38:	cwde   
  422e39:	xor    al,0x38
  422e3b:	mov    edi,0xd9ac9d4e
  422e40:	or     BYTE PTR [ecx+0x11dae7c0],dh
  422e46:	push   esp
  422e47:	xchg   esi,eax
  422e48:	adc    dl,dh
  422e4a:	repnz das 
  422e4c:	daa    
  422e4d:	and    dl,dl
  422e4f:	add    BYTE PTR [ecx+eiz*2-0x19],al
  422e53:	xchg   esp,eax
  422e54:	add    cl,0x59
  422e57:	js     0x422ecc
  422e59:	aam    0x47
  422e5b:	addr16 add ebp,esi
  422e5e:	addr16 arpl sp,sp
  422e61:	out    0xce,eax
  422e63:	or     esi,DWORD PTR cs:[bx+si+0x408d]
  422e69:	or     al,BYTE PTR [ebx+0x23]
  422e6c:	retf   0x7284
  422e6f:	mov    ebp,0x924b5d12
  422e74:	call   0x3fde31f
  422e79:	inc    eax
  422e7a:	ins    DWORD PTR es:[edi],dx
  422e7b:	inc    ebp
  422e7c:	sbb    eax,0xfe049f86
  422e81:	inc    ebx
  422e82:	jmp    DWORD PTR [ebx-0x56f3afb7]
  422e89:	mov    al,ds:0xb2d1794e
  422e8e:	mov    gs,edi
  422e90:	jle    0x422ee3
  422e92:	adc    al,0x40
  422e94:	in     eax,0x47
  422e96:	add    eax,0xa26ef7dc
  422e9b:	pop    ss
  422e9c:	pop    edx
  422e9d:	sahf   
  422e9e:	sahf   
  422e9f:	jb     0x422e4b
  422ea1:	sahf   
  422ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ea3:	dec    esi
  422ea4:	adc    bh,BYTE PTR [eax]
  422ea6:	cli    
  422ea7:	xchg   DWORD PTR [esi],eax
  422ea9:	sub    eax,0x32696e19
  422eae:	dec    ebp
  422eaf:	jns    0x422eb8
  422eb1:	jno    0x422ed0
  422eb3:	cmc    
  422eb4:	mov    ch,0x91
  422eb6:	pop    es
  422eb7:	sub    DWORD PTR [ebx+0x733cfea8],esp
  422ebd:	rcr    BYTE PTR [esi+0x1253d4],1
  422ec3:	loopne 0x422e75
  422ec5:	cmp    dh,BYTE PTR [ebx-0x44]
  422ec8:	pop    ds
  422ec9:	and    edx,DWORD PTR [ebx+0x14]
  422ecc:	lds    esi,FWORD PTR [esi-0x2c]
  422ecf:	xchg   ebp,eax
  422ed0:	shr    BYTE PTR [eax],1
  422ed2:	jge    0x422f00
  422ed4:	jo     0x422f24
  422ed6:	aas    
  422ed7:	sbb    dh,BYTE PTR [ecx]
  422ed9:	out    0xf0,al
  422edb:	jbe    0x422e87
  422edd:	ret    
  422ede:	add    BYTE PTR [eax],bl
  422ee0:	out    dx,al
  422ee1:	and    ah,al
  422ee3:	xlat   BYTE PTR ds:[ebx]
  422ee4:	ret    
  422ee5:	(bad)
  422ee8:	mov    DWORD PTR [edx],0x16a6a5ce
  422eee:	outs   dx,DWORD PTR ds:[esi]
  422eef:	jb     0x422edc
  422ef1:	ret    0x9115
  422ef4:	xchg   ecx,eax
  422ef6:	aad    0x8d
  422ef8:	mov    ebp,0xaa810221
  422efd:	std    
  422efe:	push   edi
  422eff:	add    bl,al
  422f01:	and    BYTE PTR [edx],ah
  422f03:	lods   al,BYTE PTR ds:[esi]
  422f04:	jae    0x422f6c
  422f06:	xor    bh,dl
  422f08:	cmc    
  422f09:	mov    ah,0xd1
  422f0b:	fst    DWORD PTR [ebx+0x5a]
  422f0e:	cld    
  422f0f:	mov    WORD PTR [edx-0x6c],gs
  422f12:	mov    esp,0x686e53f9
  422f17:	dec    ecx
  422f18:	into   
  422f19:	fild   DWORD PTR [edx*2+0x54db7b03]
  422f20:	or     al,0x1c
  422f22:	repz sbb al,0xc0
  422f25:	or     ebp,DWORD PTR [esi-0x651422cf]
  422f2b:	sub    DWORD PTR [ecx],esp
  422f2d:	rcr    DWORD PTR [ebx+eax*1],cl
  422f30:	or     al,BYTE PTR [edx-0x66]
  422f33:	dec    ecx
  422f34:	hlt    
  422f35:	fsub   QWORD PTR [eax]
  422f37:	cdq    
  422f38:	mov    ecx,0x4aa58576
  422f3d:	adc    DWORD PTR [ebx-0x4761bdbc],0x7b
  422f44:	xchg   edx,eax
  422f45:	or     DWORD PTR [ebx],ebx
  422f47:	mov    ds:0x17f8b5e6,al
  422f4c:	outs   dx,BYTE PTR ds:[esi]
  422f4d:	fnstsw WORD PTR [ebx-0x400873a5]
  422f53:	fadd   DWORD PTR ds:0x5e41805
  422f59:	loopne 0x422fc8
  422f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f5c:	mov    al,ds:0x77b84d38
  422f61:	enter  0xa8d2,0x16
  422f65:	retf   0x46d5
  422f68:	sub    ebp,DWORD PTR [ecx+0x6]
  422f6b:	clc    
  422f6c:	ror    al,cl
  422f6e:	es repnz and eax,0xe475dc92
  422f75:	mov    bl,0xf1
  422f77:	daa    
  422f78:	jmp    0x52ff9ebb
  422f7d:	jnp    0x422fa2
  422f7f:	pop    ebx
  422f80:	dec    edi
  422f81:	mov    dh,0x60
  422f83:	(bad)  
  422f85:	mov    edx,esp
  422f87:	fisubr DWORD PTR [ebp+0x2ec9c55a]
  422f8d:	mov    eax,0xab3a9882
  422f92:	std    
  422f93:	daa    
  422f94:	lds    ecx,FWORD PTR [eax]
  422f96:	stc    
  422f97:	push   eax
  422f98:	imul   ebp,DWORD PTR [ebx+0x77],0x2588d2f3
  422f9f:	pop    edi
  422fa0:	push   ds
  422fa1:	out    dx,eax
  422fa2:	sahf   
  422fa3:	adc    ebx,DWORD PTR [ecx+ecx*4+0x51]
  422fa7:	sub    bh,BYTE PTR [eax+0x5e]
  422faa:	dec    eax
  422fab:	or     BYTE PTR [ecx-0x61],ch
  422fae:	mov    al,0xfd
  422fb0:	adc    dh,dh
  422fb2:	mov    WORD PTR [eax-0x7f],es
  422fb5:	xchg   esi,eax
  422fb6:	imul   BYTE PTR [esi]
  422fb8:	xor    ecx,edi
  422fba:	or     al,0x84
  422fbc:	xor    BYTE PTR [edi],ah
  422fbe:	cmp    eax,0xd7dd305f
  422fc3:	add    al,0x95
  422fc5:	xor    al,0x5c
  422fc7:	repnz and eax,0x729108be
  422fcd:	mov    ds:0x3020cea3,al
  422fd2:	lea    ebp,[edi-0x60]
  422fd5:	scas   eax,DWORD PTR es:[edi]
  422fd6:	out    dx,al
  422fd7:	les    esi,FWORD PTR [ebp-0x79]
  422fda:	cmp    eax,0x9d97336c
  422fdf:	cmp    al,0xe
  422fe1:	mov    eax,ds:0x16845b0f
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    esp,DWORD PTR [ebx-0x55]
  422ff0:	push   ebx
  422ff1:	sub    esp,DWORD PTR [ecx]
  422ff3:	stos   BYTE PTR es:[edi],al
  422ff4:	add    DWORD PTR [eax],eax
  422ff6:	clc    
  422ff7:	add    al,0x0
  422ff9:	add    BYTE PTR [edx],bl
  422ffb:	cmp    eax,0xeed35d2a
  423000:	mov    ebx,0xfb634ace
  423005:	mov    ah,0xfe
  423007:	xchg   ebp,eax
  423008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423009:	mov    ebx,0x10bd6428
  42300e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42300f:	and    ah,bl
  423011:	dec    ebp
  423012:	shl    DWORD PTR [edi+0x7b85152b],1
  423018:	aam    0x15
  42301a:	jmp    0x835ea1c1
  42301f:	pushf  
  423020:	les    ebx,FWORD PTR [ebp+0xc47e2e3]
  423026:	pop    es
  423027:	jge    0x422ff0
  423029:	push   cs
  42302a:	test   ch,al
  42302c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42302d:	dec    esi
  42302e:	sbb    DWORD PTR [ecx+0x39],edx
  423031:	ins    DWORD PTR es:[edi],dx
  423032:	inc    ecx
  423033:	pusha  
  423034:	out    dx,eax
  423035:	retf   
  423036:	pop    ebx
  423037:	adc    DWORD PTR [eax-0x3b],edi
  42303a:	ror    BYTE PTR [edi+0x5c],0xa
  42303e:	mov    ecx,0xc5e6ad12
  423043:	aam    0xc4
  423045:	cld    
  423046:	fucomi st,st(4)
  423048:	sub    BYTE PTR [esi-0x17],0xc4
  42304c:	adc    BYTE PTR [esi],bl
  42304e:	inc    edi
  42304f:	lods   eax,DWORD PTR ds:[esi]
  423050:	push   cs
  423051:	sub    al,0xb8
  423053:	or     al,0xbc
  423055:	sar    ah,0x65
  423058:	je     0x42302e
  42305a:	daa    
  42305b:	(bad)  
  42305c:	cmp    edi,ecx
  42305e:	jne    0x423060
  423060:	jge    0x422ff8
  423062:	stos   BYTE PTR es:[edi],al
  423063:	arpl   WORD PTR [eax+0x68db797c],di
  423069:	rcr    ebp,0xd4
  42306c:	jnp    0x4230b4
  42306e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42306f:	popf   
  423070:	sub    eax,0x73df850e
  423075:	in     eax,dx
  423076:	or     BYTE PTR [ecx],dh
  423078:	sbb    cl,bl
  42307a:	push   0xffffffc3
  42307c:	out    0xa,al
  42307e:	mov    bl,0x1f
  423080:	xchg   ebx,eax
  423081:	outs   dx,DWORD PTR ds:[esi]
  423082:	or     DWORD PTR [esi-0x33a27106],eax
  423088:	mov    BYTE PTR [ebx-0x40],bh
  42308b:	addr16 (bad) 
  42308d:	loop   0x4230a8
  42308f:	xor    BYTE PTR [edx-0x5],0x33
  423093:	je     0x423056
  423095:	aam    0xa7
  423097:	inc    eax
  423098:	and    BYTE PTR [ebp+esi*2-0x64],bl
  42309c:	sbb    al,0x95
  42309e:	nop
  42309f:	or     DWORD PTR [eax-0x63],esi
  4230a2:	cmp    DWORD PTR [eax+eiz*2-0x4ae3f100],esp
  4230a9:	xchg   ebx,eax
  4230aa:	inc    esi
  4230ab:	cs out 0x17,al
  4230ae:	aas    
  4230af:	in     al,dx
  4230b0:	mov    eax,0x40d08fb2
  4230b5:	or     al,0xa5
  4230b7:	push   ss
  4230b8:	mov    ds:0xd36a1177,eax
  4230bd:	gs inc edx
  4230bf:	pop    es
  4230c0:	sbb    DWORD PTR [ebx],esp
  4230c2:	pop    esp
  4230c3:	pusha  
  4230c4:	jb     0x423058
  4230c6:	pop    ss
  4230c7:	jl     0x423094
  4230c9:	and    edx,DWORD PTR ss:[edi]
  4230cc:	jb     0x423096
  4230ce:	scas   eax,DWORD PTR es:[edi]
  4230cf:	mov    ah,0xc
  4230d1:	out    dx,eax
  4230d2:	push   edx
  4230d3:	repz loope 0x423147
  4230d6:	popf   
  4230d7:	mov    fs,WORD PTR [edi]
  4230d9:	jmp    0xd6f60b32
  4230de:	pop    es
  4230df:	xor    edx,eax
  4230e1:	in     eax,dx
  4230e2:	mov    BYTE PTR [ecx-0x29],dh
  4230e5:	xor    ebx,eax
  4230e7:	sub    DWORD PTR [edx],0xffffffb8
  4230ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230eb:	or     DWORD PTR [esi+0x497773d4],0x1e
  4230f2:	sub    DWORD PTR [edx-0x51cb584c],esp
  4230f8:	in     eax,dx
  4230f9:	out    0x78,eax
  4230fb:	xchg   edi,eax
  4230fc:	mov    al,0x64
  4230fe:	popf   
  4230ff:	loopne 0x4230a5
  423101:	add    dh,BYTE PTR ds:0xdb319b6f
  423107:	mov    ebp,0x4438ce3a
  42310c:	or     DWORD PTR [edx-0x23],0x98c11850
  423113:	scas   al,BYTE PTR es:[edi]
  423114:	mov    cl,0x3c
  423116:	pop    es
  423117:	retf   0x1fd6
  42311a:	mov    fs,WORD PTR [edx]
  42311c:	nop
  42311d:	sbb    eax,0xd34b587b
  423122:	push   0x16
  423124:	addps  xmm5,XMMWORD PTR [edi+ebx*8+0x6767c990]
  42312c:	and    DWORD PTR [eax],ebx
  42312e:	arpl   di,si
  423130:	adc    al,bh
  423132:	into   
  423133:	or     DWORD PTR ds:0x946f5b46,eax
  423139:	push   edi
  42313a:	fistp  DWORD PTR [ebp-0x47f78eb3]
  423140:	pop    esi
  423141:	jnp    0x42317d
  423143:	jb     0x423131
  423145:	in     al,dx
  423146:	pop    es
  423147:	push   es
  423148:	push   ebp
  423149:	or     eax,0x7d77db51
  42314e:	pop    ebp
  42314f:	push   esp
  423150:	push   es
  423151:	cmp    BYTE PTR [ecx+0xa1152ca],ch
  423157:	push   cs
  423158:	pop    es
  423159:	jg     0x42315f
  42315b:	jae    0x423150
  42315d:	xchg   edi,eax
  42315e:	(bad)
  423161:	mov    al,ds:0x967e9e71
  423166:	int    0x96
  423168:	imul   esp,DWORD PTR [esi+0x3218e54],0x5805011c
  423172:	mov    dl,0xad
  423174:	push   ecx
  423175:	js     0x423150
  423177:	fdivrp st(1),st
  423179:	mov    eax,0xbd8b9428
  42317e:	addr16 jo 0x423128
  423181:	je     0x423197
  423183:	in     al,0xa0
  423185:	xor    edi,DWORD PTR [ebx]
  423187:	sub    eax,0x34152939
  42318c:	xor    al,0x92
  42318e:	or     ch,0x6c
  423191:	cmp    DWORD PTR [edx],ebp
  423193:	cmp    DWORD PTR [eax+0x4d3fe551],edx
  423199:	ror    eax,cl
  42319b:	dec    esp
  42319c:	inc    ebp
  42319d:	(bad)  
  42319e:	test   al,0x91
  4231a0:	dec    ecx
  4231a1:	cwde   
  4231a2:	xchg   ebp,eax
  4231a3:	cmp    BYTE PTR [edi],bh
  4231a5:	push   edx
  4231a6:	xor    DWORD PTR [edi+edx*8],ebx
  4231a9:	in     eax,dx
  4231aa:	(bad)  
  4231ab:	cs std 
  4231ad:	sbb    eax,0xcced39dd
  4231b2:	je     0x4231de
  4231b4:	ins    BYTE PTR es:[edi],dx
  4231b5:	leave  
  4231b6:	cwde   
  4231b7:	(bad)  
  4231b8:	xor    eax,0x14c1d874
  4231bd:	hlt    
  4231be:	dec    ebp
  4231bf:	xor    BYTE PTR [edx+0x1f1130ec],cl
  4231c5:	inc    esp
  4231c6:	sbb    bh,BYTE PTR [edx+0x45825928]
  4231cc:	add    eax,0x4ede10a3
  4231d1:	rol    DWORD PTR [edx+0x16],0x19
  4231d5:	rcl    ah,cl
  4231d7:	push   cs
  4231d8:	dec    eax
  4231d9:	das    
  4231da:	imul   esi,DWORD PTR [eax-0x738adff7],0x65cce2cb
  4231e4:	int    0xb5
  4231e6:	push   0xb26400e9
  4231eb:	sub    ecx,edx
  4231ed:	mov    ebp,0xfbe7b21d
  4231f2:	mov    ds:0x1ed617c1,eax
  4231f7:	aas    
  4231f8:	sahf   
  4231f9:	dec    eax
  4231fa:	and    DWORD PTR [edi+0x70],0x806a2ec1
  423201:	jne    0x4231f0
  423203:	shr    BYTE PTR gs:[edi],1
  423206:	dec    ecx
  423207:	ror    DWORD PTR [edx+0x6b],cl
  42320a:	add    eax,0xc0f5a068
  42320f:	adc    BYTE PTR [eax],0x42
  423212:	sbb    ebx,0xfffffffb
  423215:	dec    eax
  423216:	aaa    
  423217:	xchg   esi,eax
  423218:	mov    al,ds:0xc85c511c
  42321d:	sub    BYTE PTR [esi+0x5e45da4f],0xf
  423224:	imul   esp,DWORD PTR [ebx+0x448af1d8],0xffffffd4
  42322b:	stos   DWORD PTR es:[edi],eax
  42322c:	rol    BYTE PTR [ebx+0x9],0x85
  423230:	fucomp st(2)
  423232:	pop    ecx
  423233:	mov    gs,WORD PTR [edi]
  423235:	mov    dh,0xc3
  423237:	out    dx,eax
  423238:	into   
  423239:	imul   ebp,DWORD PTR [ecx],0xffffffe0
  42323c:	adc    ebx,DWORD PTR [edi]
  42323e:	cmovs  esi,ebp
  423241:	cwde   
  423242:	push   ebp
  423243:	in     al,0x6b
  423245:	sub    ebp,DWORD PTR [edi+0x6f]
  423248:	sub    DWORD PTR [ebp+0x5fd5dd2b],eax
  42324e:	test   ch,bl
  423250:	ror    dh,0x2b
  423253:	fiadd  DWORD PTR [eax]
  423255:	push   ebx
  423256:	(bad)  
  423257:	lods   al,BYTE PTR ds:[esi]
  423258:	mov    dl,BYTE PTR [ecx-0x5e]
  42325b:	dec    ecx
  42325c:	inc    edi
  42325d:	push   edx
  42325e:	ins    DWORD PTR es:[edi],dx
  42325f:	arpl   WORD PTR [eax+0x6fd6af85],bp
  423265:	out    dx,eax
  423266:	dec    ebp
  423267:	bound  edx,QWORD PTR [ebp-0x601aef27]
  42326d:	pop    es
  42326e:	or     al,0x13
  423270:	into   
  423271:	lods   eax,DWORD PTR ds:[esi]
  423272:	jnp    0x42325a
  423274:	ss inc edi
  423276:	inc    edi
  423277:	sub    ch,BYTE PTR [edi-0x1aa19617]
  42327d:	ins    BYTE PTR es:[edi],dx
  42327e:	sub    BYTE PTR [eax+0x71],ah
  423281:	inc    esi
  423282:	shr    DWORD PTR [edx+0xaa7b751],0x68
  423289:	and    edx,DWORD PTR [eax+0x6f]
  42328c:	ret    0x5545
  42328f:	imul   edx,DWORD PTR [ebp+0x6714d932],0xcd3778bf
  423299:	or     BYTE PTR [ecx],al
  42329b:	in     al,0x98
  42329d:	cmp    DWORD PTR [edi],esi
  42329f:	dec    esp
  4232a0:	fidivr WORD PTR [eax]
  4232a2:	call   0x2d0bdd03
  4232a7:	mul    BYTE PTR [ebx]
  4232a9:	inc    esp
  4232aa:	test   DWORD PTR [esi-0x7a2214d4],ebx
  4232b0:	daa    
  4232b1:	adc    BYTE PTR es:[ebp+0x31a06fd],ah
  4232b8:	loop   0x423325
  4232ba:	ror    BYTE PTR [esi+eiz*8+0x4b0e935d],cl
  4232c1:	std    
  4232c2:	pop    ds
  4232c3:	lods   al,BYTE PTR ds:[esi]
  4232c4:	lods   eax,DWORD PTR ds:[esi]
  4232c5:	out    dx,eax
  4232c6:	(bad)  
  4232c7:	lods   eax,DWORD PTR ds:[esi]
  4232c8:	fmul   QWORD PTR [eax+edx*2]
  4232cb:	loope  0x4232ce
  4232cd:	and    dl,bh
  4232cf:	jl     0x4232d2
  4232d1:	rol    DWORD PTR ds:0xff92642c,1
  4232d7:	sbb    al,0x67
  4232d9:	pop    edx
  4232da:	mov    ah,0x0
  4232dc:	mov    ah,0xd8
  4232de:	pop    edi
  4232df:	jle    0x42327f
  4232e1:	mov    cl,0x70
  4232e3:	push   ebp
  4232e4:	stos   BYTE PTR es:[edi],al
  4232e5:	sub    al,0x74
  4232e7:	fcmovnb st,st(2)
  4232e9:	aaa    
  4232ea:	stos   DWORD PTR es:[di],eax
  4232ec:	pusha  
  4232ed:	push   ds
  4232ee:	fxtract 
  4232f0:	sub    BYTE PTR [eax+0x3e5e69fa],0x1e
  4232f7:	sbb    eax,0xfcb1163e
  4232fc:	loopne 0x4232d5
  4232fe:	leave  
  4232ff:	add    eax,0x5bcff8db
  423304:	pop    edi
  423305:	push   ds
  423306:	(bad)  
  423307:	std    
  423308:	ins    BYTE PTR es:[edi],dx
  423309:	cmp    eax,0xcbcb3eb7
  42330e:	fild   WORD PTR [edx+0xbea5306]
  423314:	scas   eax,DWORD PTR es:[edi]
  423315:	jbe    0x4232b4
  423317:	retf   
  423318:	mov    ?,WORD PTR [ebp+eax*4-0x2e]
  42331c:	js     0x4232ee
  42331e:	xchg   edi,ebx
  423320:	push   eax
  423321:	pop    esi
  423322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423323:	addr16 mov edx,0xd075c613
  423329:	in     al,0x20
  42332b:	mov    ah,dl
  42332d:	das    
  42332e:	clc    
  42332f:	ss jae 0x4233b0
  423332:	sub    bh,0x96
  423335:	test   cl,dl
  423337:	inc    edi
  423338:	mov    esp,0x4e132a18
  42333d:	xor    BYTE PTR [eax-0x64],ch
  423340:	xor    bl,BYTE PTR [eax]
  423342:	out    dx,eax
  423343:	cld    
  423344:	mul    ecx
  423346:	shr    DWORD PTR [edi],0x63
  423349:	jns    0x4232fe
  42334b:	jo     0x4232e5
  42334d:	and    edx,ebx
  42334f:	in     eax,0x1c
  423351:	xor    bh,BYTE PTR [esi+0x58]
  423354:	inc    ebx
  423355:	imul   edx,ecx,0x89b18dc1
  42335b:	sub    ebx,DWORD PTR [ebp+0x2a5188c9]
  423361:	add    esp,DWORD PTR [edx+0x6e9999f4]
  423367:	clc    
  423368:	mov    bl,0x80
  42336a:	inc    edx
  42336b:	xchg   ebp,eax
  42336c:	adc    eax,0x42604282
  423371:	inc    edi
  423372:	ins    DWORD PTR es:[edi],dx
  423373:	enter  0x2266,0x2c
  423377:	test   al,0xb1
  423379:	push   ecx
  42337a:	ror    BYTE PTR ds:[ecx-0x55],0x97
  42337f:	(bad)
  423382:	xlat   BYTE PTR ds:[ebx]
  423383:	jmp    0x423378
  423385:	mov    ds:0xa933d65b,eax
  42338a:	data16 mov ds,WORD PTR [edx]
  42338d:	jnp    0x423321
  42338f:	or     BYTE PTR [ebp-0x7a],al
  423392:	pop    ebp
  423393:	call   0xce90af21
  423398:	inc    esp
  423399:	dec    esi
  42339a:	push   ebp
  42339b:	inc    BYTE PTR [ecx-0x3a]
  42339e:	and    eax,DWORD PTR [esp+edx*1]
  4233a1:	jbe    0x4233bd
  4233a3:	and    al,0x7b
  4233a5:	(bad)  [ebx-0x1c]
  4233a8:	mov    dh,0x36
  4233aa:	stos   BYTE PTR es:[edi],al
  4233ab:	fcmovnu st,st(0)
  4233ad:	arpl   WORD PTR ds:0xa0185c8,sp
  4233b3:	fs mov esi,0x9f164186
  4233b9:	sub    bl,BYTE PTR [eax-0x1e]
  4233bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233bd:	pop    DWORD PTR [edi-0x38]
  4233c0:	es inc edi
  4233c2:	ror    DWORD PTR [edi*8-0x3b2f216d],cl
  4233c9:	mov    cs,WORD PTR [eax-0x4f304332]
  4233cf:	or     ah,BYTE PTR [edi-0x25]
  4233d2:	je     0x423371
  4233d4:	jmp    0x3034:0x5fdc85f8
  4233db:	mov    dl,0xa9
  4233dd:	stos   BYTE PTR es:[edi],al
  4233de:	pop    ebp
  4233df:	cs sbb eax,0x781a7a81
  4233e5:	sti    
  4233e6:	inc    ebx
  4233e7:	daa    
  4233e8:	adc    BYTE PTR [edi+0x5d],dl
  4233eb:	fisttp QWORD PTR [ebx-0x1d]
  4233ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ef:	ret    0xb667
  4233f2:	dec    esp
  4233f3:	xor    DWORD PTR [ebx+0x2e],0xffffffa5
  4233f7:	scas   al,BYTE PTR es:[edi]
  4233f8:	adc    BYTE PTR [esi],ah
  4233fa:	cwde   
  4233fb:	mov    eax,ds:0xebaf76fd
  423400:	and    al,0x83
  423402:	mov    WORD PTR [edi],?
  423404:	or     al,0x1f
  423406:	hlt    
  423407:	std    
  423408:	mov    eax,ds:0x28ea903e
  42340d:	ds sub dh,ah
  423410:	out    0x56,al
  423412:	and    eax,0x4d536bca
  423417:	jno    0x4233e1
  423419:	std    
  42341a:	shl    DWORD PTR [ecx+0x21a2a4ea],1
  423420:	shl    DWORD PTR [ebp+0x7],0x7b
  423424:	xlat   BYTE PTR ds:[ebx]
  423425:	bts    DWORD PTR [edx],ecx
  423428:	xor    DWORD PTR ds:0xa9b0a8f8,esi
  42342e:	ins    BYTE PTR es:[edi],dx
  42342f:	scas   al,BYTE PTR es:[edi]
  423430:	dec    ebp
  423431:	mov    ah,0x40
  423433:	sub    esp,DWORD PTR [ebx]
  423435:	dec    edi
  423436:	das    
  423437:	and    dh,bh
  423439:	inc    esi
  42343a:	pop    ds
  42343b:	xchg   esi,eax
  42343c:	adc    eax,DWORD PTR [eax]
  42343e:	cmp    al,0xa0
  423440:	mov    DWORD PTR [eax+0x6f],eax
  423443:	and    eax,DWORD PTR [esp+ebp*4+0x6e5ad1b4]
  42344a:	adc    edx,DWORD PTR [edx-0x7a892d93]
  423450:	xchg   ebp,eax
  423451:	fisttp QWORD PTR [edx+eiz*2+0x10]
  423455:	adc    al,0xb6
  423457:	sbb    al,0xdf
  423459:	nop
  42345a:	inc    ecx
  42345b:	sbb    DWORD PTR [esi-0x9cc2039],esi
  423461:	imul   esp,DWORD PTR [ebx],0x3e7c5eab
  423467:	adc    eax,0xf3f3873b
  42346c:	(bad)  
  42346f:	test   DWORD PTR [edi],0xb5337faa
  423475:	push   ds
  423476:	jmp    0xfdaf:0xbb205219
  42347d:	pop    edx
  42347e:	(bad)  
  42347f:	sub    al,0xcc
  423481:	mov    edx,0x3d18da40
  423486:	in     eax,0xf8
  423488:	outs   dx,DWORD PTR ds:[esi]
  423489:	sub    al,0x4c
  42348b:	xor    eax,0xa09f85f4
  423490:	add    bh,bl
  423492:	or     al,0x10
  423494:	sub    eax,0xec957676
  423499:	ins    DWORD PTR es:[edi],dx
  42349a:	dec    edi
  42349b:	adc    DWORD PTR [ecx],edx
  42349d:	in     al,dx
  42349e:	mov    bl,0x2b
  4234a0:	ins    BYTE PTR es:[edi],dx
  4234a1:	sub    eax,0x48df3f18
  4234a6:	call   0xc0787f55
  4234ab:	(bad)  
  4234ac:	std    
  4234ad:	ret    0x122d
  4234b0:	xor    BYTE PTR [ebx],cl
  4234b2:	arpl   WORD PTR [esi-0x658d351d],bp
  4234b8:	scas   al,BYTE PTR es:[edi]
  4234b9:	mov    ebx,0x1d98bf48
  4234be:	push   0xe9d75534
  4234c3:	cdq    
  4234c4:	mov    cs:0x3bee9526,eax
  4234ca:	adc    BYTE PTR [ebp+0x7dc6e954],dh
  4234d0:	cmp    BYTE PTR [esi-0x3fb818c5],bl
  4234d6:	xlat   BYTE PTR ds:[ebx]
  4234d7:	pushf  
  4234d8:	(bad)  
  4234d9:	aas    
  4234da:	jne    0x423467
  4234dc:	adc    eax,0x4ed5248e
  4234e1:	push   ss
  4234e2:	(bad)  
  4234e3:	iret   
  4234e4:	push   esp
  4234e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234e6:	inc    ebp
  4234e7:	push   esp
  4234e8:	clc    
  4234e9:	cmp    BYTE PTR [edi],cl
  4234eb:	pop    es
  4234ec:	pop    ebp
  4234ed:	sub    dl,BYTE PTR ds:0x49d21331
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	(bad)  
  4234ff:	fistp  WORD PTR [ecx-0x49]
  423502:	sbb    DWORD PTR [edi+0x4f80001],ebp
  423508:	add    BYTE PTR [eax],al
  42350a:	and    ecx,esp
  42350c:	fsub   QWORD PTR [eax+0x25]
  42350f:	and    BYTE PTR [ebx+0x69],al
  423512:	sti    
  423513:	mov    al,0xb7
  423515:	dec    eax
  423516:	fwait
  423517:	popa   
  423518:	xor    eax,0x29499b9f
  42351d:	(bad)  
  42351e:	xor    edi,DWORD PTR [ebx]
  423520:	fisttp WORD PTR [ebp+0x11c70690]
  423526:	jno    0x423591
  423528:	mov    dh,0x48
  42352a:	lock inc edx
  42352c:	xlat   BYTE PTR ds:[ebx]
  42352d:	cmp    DWORD PTR [eax+0x3e],ecx
  423530:	loopne 0x4235a3
  423532:	imul   ebp,DWORD PTR [edi+0x3],0xffffffdb
  423536:	fst    QWORD PTR [edx+0x39b73f40]
  42353c:	xchg   ebp,eax
  42353d:	cs lahf 
  42353f:	rol    cl,0xe1
  423542:	(bad)  
  423543:	mul    ebx
  423545:	mov    ds:0x615643f,al
  42354a:	lods   eax,DWORD PTR ds:[esi]
  42354b:	loope  0x423529
  42354d:	adc    esp,DWORD PTR [ebp+0x33aaddf4]
  423553:	in     eax,0x81
  423555:	xor    BYTE PTR [ecx+0x45aa650f],bl
  42355b:	xchg   BYTE PTR [edx+ebx*8+0x4d],bh
  42355f:	add    DWORD PTR [edi+0x1a830a67],edx
  423565:	imul   esp,DWORD PTR [edi-0x11],0xffffffd8
  423569:	nop
  42356a:	dec    edx
  42356b:	loope  0x42351f
  42356d:	xchg   BYTE PTR [ebp-0xd],cl
  423570:	int    0xf2
  423572:	inc    ebp
  423573:	inc    ebx
  423574:	cmp    ah,BYTE PTR [ebx+0x9]
  423577:	inc    edi
  423578:	dec    edx
  423579:	push   esi
  42357a:	inc    esi
  42357b:	mov    eax,ds:0x1ca9b772
  423580:	nop
  423581:	loope  0x42357f
  423583:	mov    edx,0x8b08f7
  423588:	adc    eax,0x5a4bc9a4
  42358d:	aam    0x6a
  42358f:	cmp    ecx,DWORD PTR [edx+esi*4]
  423592:	pushf  
  423593:	jae    0x4235f4
  423595:	test   al,0x65
  423597:	(bad)  
  423598:	mov    bl,0x8c
  42359a:	pop    esp
  42359b:	fiadd  WORD PTR [ecx+0x44]
  42359e:	(bad)  
  42359f:	fdiv   QWORD PTR [eax]
  4235a1:	xor    dh,BYTE PTR [eax+0x74]
  4235a4:	pusha  
  4235a5:	jbe    0x423559
  4235a7:	jmp    0x4235c2
  4235a9:	scas   eax,DWORD PTR es:[edi]
  4235aa:	dec    ebx
  4235ab:	pop    edx
  4235ac:	inc    edx
  4235ad:	mov    ebx,0xa7124861
  4235b2:	inc    esp
  4235b3:	jbe    0x4235d0
  4235b5:	fstp   QWORD PTR [edx+0x3ce19487]
  4235bb:	add    al,0x17
  4235bd:	ret    
  4235be:	or     edx,DWORD PTR [ecx-0x4a]
  4235c1:	push   edx
  4235c2:	mov    gs,edi
  4235c4:	clc    
  4235c5:	adc    edi,DWORD PTR [edi]
  4235c7:	or     eax,0x64b97a9b
  4235cc:	jge    0x423573
  4235ce:	push   edx
  4235cf:	xor    DWORD PTR [ecx-0x34],ebx
  4235d2:	inc    edx
  4235d3:	aad    0x77
  4235d5:	je     0x42355d
  4235d7:	cli    
  4235d8:	repnz xchg ebp,eax
  4235da:	push   ebx
  4235db:	adc    esi,DWORD PTR [eax]
  4235dd:	lahf   
  4235de:	fldenv [esi+0x14]
  4235e1:	push   eax
  4235e2:	mov    ds:0xa2e6de0b,eax
  4235e7:	mov    ds:0x8dc236c4,al
  4235ec:	call   0x7dd1:0x91e06bfe
  4235f3:	xor    BYTE PTR [ecx],bl
  4235f5:	arpl   WORD PTR ds:0x380d394c,di
  4235fb:	ror    edx,cl
  4235fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235fe:	dec    edi
  4235ff:	rol    BYTE PTR [ebx-0x45e4b30c],cl
  423605:	and    BYTE PTR [ebp+0x77ab6aaa],0x3e
  42360c:	jno    0x423602
  42360e:	jns    0x423591
  423610:	xchg   ebp,eax
  423611:	mov    ds:0xa495acb0,eax
  423616:	sub    al,0x1
  423618:	adc    dh,bl
  42361a:	loopne 0x42359d
  42361c:	push   ebp
  42361d:	or     eax,DWORD PTR [edx]
  42361f:	pop    ecx
  423620:	nop
  423621:	jb     0x4235ea
  423623:	xor    edi,edx
  423625:	hlt    
  423626:	inc    esp
  423627:	lea    eax,[edi-0x5d]
  42362a:	and    esp,0x59
  42362d:	and    eax,0xd5e1ea90
  423632:	add    DWORD PTR [esi-0x4a6bd01e],esi
  423638:	jge    0x423646
  42363a:	sbb    eax,0x8bc7de95
  42363f:	fstp   QWORD PTR [edx]
  423641:	push   eax
  423642:	jbe    0x4235f0
  423644:	add    BYTE PTR [edi],al
  423646:	mov    al,0x3e
  423648:	jecxz  0x4235e7
  42364a:	mov    al,BYTE PTR [ebx-0x3e04a0d9]
  423650:	dec    eax
  423651:	sbb    eax,0x825d4992
  423656:	or     ebx,DWORD PTR [esi+0x7211d084]
  42365c:	div    DWORD PTR [ebx]
  42365e:	aaa    
  42365f:	mov    al,0x65
  423661:	lahf   
  423662:	and    al,0xca
  423664:	ds stos BYTE PTR es:[edi],al
  423666:	je     0x423614
  423668:	add    DWORD PTR [edi-0x2],ecx
  42366b:	inc    ebp
  42366c:	out    0xb5,eax
  42366e:	cmp    BYTE PTR [edx-0x55012579],dh
  423674:	and    eax,0x4aec6ad8
  423679:	mov    ch,0xb1
  42367b:	sahf   
  42367c:	mov    ah,bh
  42367e:	stos   DWORD PTR es:[edi],eax
  42367f:	sbb    ecx,eax
  423681:	pop    ss
  423682:	mov    BYTE PTR [edx+ebx*4+0x37],ch
  423686:	rcr    BYTE PTR [ebx+0x3b0d84c1],1
  42368c:	jns    0x4236c1
  42368e:	cmp    ecx,ebp
  423690:	loope  0x4236a7
  423692:	es into 
  423694:	cmp    al,0x5c
  423696:	adc    eax,0x70509d2e
  42369b:	cmp    BYTE PTR [ebx-0xf],bl
  42369e:	mov    WORD PTR [edi+0x32],es
  4236a1:	xchg   DWORD PTR [ecx],edx
  4236a3:	pop    ebx
  4236a4:	iret   
  4236a5:	bound  ebp,QWORD PTR [edi]
  4236a7:	dec    esi
  4236a8:	fst    QWORD PTR [edi+0x7a]
  4236ab:	dec    ecx
  4236ac:	cmp    eax,0x5c5bab9f
  4236b1:	fucom  st(5)
  4236b3:	mov    ebx,0xcab55614
  4236b8:	ds inc ebx
  4236ba:	pop    ebx
  4236bb:	sahf   
  4236bc:	mov    BYTE PTR [ebp+edx*8+0x183f3a47],al
  4236c3:	in     al,dx
  4236c4:	cmc    
  4236c5:	add    eax,0x8280edf5
  4236ca:	jge    0x423669
  4236cc:	push   cs
  4236cd:	jns    0x4236b7
  4236cf:	pop    ds
  4236d0:	int3   
  4236d1:	jle    0x4236c5
  4236d3:	(bad)  
  4236d4:	dec    eax
  4236d5:	iret   
  4236d6:	sub    DWORD PTR [edx+0x15],edx
  4236d9:	pop    es
  4236da:	jae    0x42368b
  4236dc:	xchg   ebp,eax
  4236dd:	pop    ds
  4236de:	jmp    0xaabd408f
  4236e3:	pop    ds
  4236e4:	push   ebx
  4236e5:	sbb    ebx,DWORD PTR [edx]
  4236e7:	mov    cl,0xa5
  4236e9:	sub    DWORD PTR [esi-0x22],0xffffffb9
  4236ed:	repnz xchg esp,eax
  4236ef:	sbb    BYTE PTR ds:0x81c26fc6,dh
  4236f5:	mov    ch,0x18
  4236f7:	sbb    cl,BYTE PTR [edi]
  4236f9:	push   es
  4236fa:	jns    0x4236fc
  4236fc:	ror    BYTE PTR [ecx-0x63b21e97],0x60
  423703:	sbb    BYTE PTR [edi+0x665efc1d],0xe2
  42370a:	and    eax,0x3a33167a
  42370f:	not    DWORD PTR [edx-0x2d]
  423712:	cmp    al,BYTE PTR [edi]
  423714:	push   eax
  423715:	(bad)  
  423716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423717:	hlt    
  423718:	rcl    esi,0x31
  42371b:	mov    edi,DWORD PTR [ebx+0x39]
  42371e:	push   ecx
  42371f:	js     0x42377d
  423721:	mov    al,ds:0xe3f45883
  423726:	iret   
  423727:	ja     0x4237a2
  423729:	cmp    al,BYTE PTR [eax-0x29]
  42372c:	sub    bh,cl
  42372e:	sbb    al,0xd3
  423730:	xchg   DWORD PTR [ebx+0x58b90178],eax
  423736:	add    al,0xd8
  423738:	sbb    DWORD PTR [ecx-0x7d],ebx
  42373b:	sub    DWORD PTR [ebx+0x700fefd0],ebp
  423741:	adc    DWORD PTR [ebx*4-0x35618a32],0x45646933
  42374c:	xchg   esi,eax
  42374d:	loopne 0x4236fc
  42374f:	xor    DWORD PTR [edi],ebp
  423751:	lods   eax,DWORD PTR ds:[esi]
  423752:	add    eax,0x9f79a67c
  423757:	retf   0xd356
  42375a:	enter  0xa2a1,0x48
  42375e:	mov    bl,0xea
  423760:	xchg   esp,ecx
  423762:	invd   
  423764:	inc    esp
  423765:	sbb    DWORD PTR [esi+eax*4],0x53eefd0a
  42376c:	push   esi
  42376d:	cmc    
  42376e:	and    DWORD PTR [ebp-0x5e6204f9],esp
  423774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423775:	inc    esp
  423776:	and    cl,BYTE PTR [ecx]
  423778:	ins    BYTE PTR es:[edi],dx
  423779:	mov    BYTE PTR [ebp-0x7d],bl
  42377c:	iret   
  42377d:	xor    ch,BYTE PTR [edx]
  42377f:	clc    
  423780:	sti    
  423781:	adc    eax,0xd4f32535
  423786:	push   ebx
  423787:	inc    edx
  423788:	repz and BYTE PTR [ebp-0x6213802d],dl
  42378f:	xor    DWORD PTR [esi+eax*1+0x16],0xfffffffb
  423794:	inc    esp
  423795:	mov    DWORD PTR [edx+ecx*1+0x4b],esi
  423799:	test   al,0xee
  42379b:	pop    edi
  42379c:	ret    0x9d2a
  42379f:	stc    
  4237a0:	cmp    DWORD PTR [edx+0x13a6ad24],ebx
  4237a6:	sbb    eax,0x98ff844a
  4237ab:	pop    eax
  4237ac:	adc    eax,0xedfa95ca
  4237b1:	repz mov bl,0x9b
  4237b4:	in     al,0x3
  4237b6:	push   ebp
  4237b7:	adc    eax,0x270af9c9
  4237bc:	pop    esp
  4237bd:	jno    0x423780
  4237bf:	sti    
  4237c0:	retf   
  4237c1:	into   
  4237c2:	daa    
  4237c3:	adc    eax,0xe36894d0
  4237c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237c9:	jnp    0x42381e
  4237cb:	cs pop ebp
  4237cd:	jae    0x4237d7
  4237cf:	lods   al,BYTE PTR ds:[esi]
  4237d0:	pop    esp
  4237d1:	cmp    BYTE PTR [edi+0x315f0408],0x1f
  4237d8:	or     BYTE PTR [esi+0xf],0x98
  4237dc:	ror    DWORD PTR [ebx-0x3f23c632],1
  4237e2:	imul   ebx,esi,0x1a500f25
  4237e8:	popf   
  4237e9:	mov    edx,0x5ba84d38
  4237ee:	inc    ebp
  4237ef:	ja     0x423790
  4237f1:	adc    bl,BYTE PTR [ebx-0x26]
  4237f4:	arpl   WORD PTR fs:[edx],si
  4237f7:	aad    0x10
  4237f9:	adc    eax,0xbb9fe383
  4237fe:	(bad)  
  4237ff:	cmp    esi,DWORD PTR [ecx+0x798d694]
  423805:	sahf   
  423806:	das    
  423807:	ins    BYTE PTR es:[edi],dx
  423808:	ror    BYTE PTR [edx],1
  42380a:	pop    esp
  42380b:	cmp    DWORD PTR [eax-0x6d777432],ecx
  423811:	ret    0x56d8
  423814:	stc    
  423815:	out    0x4b,eax
  423817:	loope  0x42384e
  423819:	jae    0x423820
  42381b:	stc    
  42381c:	mov    al,0x26
  42381e:	lahf   
  42381f:	push   eax
  423820:	out    dx,al
  423821:	in     eax,0x44
  423823:	in     al,dx
  423824:	xchg   edx,eax
  423825:	sub    al,0xe6
  423827:	js     0x423849
  423829:	rcr    bh,cl
  42382b:	pop    ss
  42382c:	and    eax,0x304d7fcb
  423831:	retf   0x516c
  423834:	loopne 0x4237c0
  423836:	mov    al,ds:0xf98e3f6d
  42383b:	aad    0x2a
  42383d:	lea    esp,[ebp-0x15]
  423840:	(bad)  
  423842:	inc    ebp
  423843:	inc    eax
  423844:	pop    ecx
  423845:	in     al,0x5
  423847:	cmp    ecx,DWORD PTR [edi+0x6d]
  42384a:	ret    0x6a9c
  42384d:	leave  
  42384e:	mov    DWORD PTR [edi-0x44],0x69be3051
  423855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423856:	lea    esp,[esi]
  423858:	aam    0x5e
  42385a:	mov    ch,0xe6
  42385c:	push   esp
  42385d:	test   BYTE PTR [esi],cl
  42385f:	sub    ebx,DWORD PTR [eax+0x5e4e2fd1]
  423865:	cmp    ebx,edi
  423867:	push   ebp
  423869:	push   edi
  42386a:	push   edi
  42386b:	mov    WORD PTR [eax],?
  42386d:	test   al,0xf9
  42386f:	popa   
  423870:	in     al,dx
  423871:	test   DWORD PTR [eax-0x1c1e7e68],ecx
  423877:	and    eax,0x6bda43ca
  42387c:	not    DWORD PTR [esi+0x68]
  42387f:	and    DWORD PTR [ebp-0xb33a137],0xffffff89
  423886:	xchg   edx,eax
  423887:	fcomp  QWORD PTR [edi-0x55]
  42388a:	mov    BYTE PTR [esi-0x699f011],ah
  423890:	mov    ecx,0x33ea3a54
  423895:	push   ss
  423896:	push   esi
  423897:	ficomp DWORD PTR [eax-0x79]
  42389a:	mov    WORD PTR [edi+0x1e67aa53],fs
  4238a0:	dec    ecx
  4238a1:	fnsave [ebx-0x6c9b4c8c]
  4238a7:	mov    bl,0x10
  4238a9:	or     ah,dh
  4238ab:	fcomp  DWORD PTR [eax]
  4238ad:	jmp    0x42391d
  4238af:	imul   edx,DWORD PTR [esi-0x37],0x135b4e50
  4238b6:	or     BYTE PTR [esi],bh
  4238b8:	(bad)  
  4238b9:	pop    ds
  4238ba:	ror    BYTE PTR ds:0x6404740d,cl
  4238c0:	inc    ebp
  4238c1:	addr16 pop ebp
  4238c3:	and    dh,dh
  4238c5:	ret    0x955f
  4238c8:	inc    edi
  4238c9:	mov    edx,0xa0ea3799
  4238ce:	jle    0x423921
  4238d0:	jbe    0x423878
  4238d2:	or     dh,BYTE PTR [eax+0x4]
  4238d5:	jo     0x423885
  4238d7:	repz xor BYTE PTR [edi-0x50222397],ah
  4238de:	retf   0x42f7
  4238e1:	(bad)  
  4238e3:	std    
  4238e4:	jp     0x423945
  4238e6:	test   dh,0xba
  4238e9:	sbb    DWORD PTR [eax+ebx*4-0x5f],ecx
  4238ed:	retf   0xf316
  4238f0:	mov    ecx,esi
  4238f2:	sbb    ebp,esp
  4238f4:	mov    ds:0x14e86549,al
  4238f9:	add    edi,DWORD PTR [ebx]
  4238fb:	mov    ah,0xc6
  4238fd:	adc    DWORD PTR [ebp-0x6c1fbd35],esp
  423903:	jbe    0x4238d4
  423905:	data16 sbb al,0x11
  423908:	mov    edx,0xf309c2e5
  42390d:	loopne 0x4238fb
  42390f:	cmc    
  423910:	xchg   BYTE PTR [edi+edi*8+0x2d],bl
  423914:	mov    BYTE PTR [edi+eiz*2-0x6],ah
  423918:	out    dx,eax
  423919:	lods   eax,DWORD PTR ds:[esi]
  42391a:	hlt    
  42391b:	dec    ecx
  42391c:	test   ecx,esp
  42391e:	sub    BYTE PTR [esi-0x5e485fb0],ah
  423924:	cmp    dl,BYTE PTR [ebx-0x6b]
  423927:	jmp    0x423994
  423929:	enter  0x6def,0xc9
  42392d:	pop    ds
  42392e:	data16 and dh,cl
  423931:	aas    
  423932:	pop    ebx
  423933:	dec    ecx
  423934:	pop    esi
  423935:	popa   
  423936:	retf   0xc248
  423939:	mov    ?,WORD PTR [eax-0x8b5828a]
  42393f:	mov    DWORD PTR [eax+ebx*8],eax
  423942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423943:	enter  0x7431,0xca
  423947:	or     BYTE PTR [eax+0x3e820635],bl
  42394d:	jmp    0x4238d1
  42394f:	pusha  
  423950:	nop
  423951:	sbb    DWORD PTR [ebx+0x5ea75e8e],ecx
  423957:	lock shl BYTE PTR [esi+0x31],cl
  42395b:	aaa    
  42395c:	push   ds
  42395d:	fsub   DWORD PTR [ebx-0x128e38ce]
  423963:	add    eax,0x28c0bd4
  423968:	mov    esi,0xe8d1a12
  42396d:	dec    esi
  42396e:	push   ebp
  42396f:	loopne 0x423941
  423971:	jge    0x4239a4
  423973:	int    0x13
  423975:	cwde   
  423976:	add    BYTE PTR [ebx],bl
  423978:	add    al,0xfd
  42397a:	fadd   QWORD PTR gs:[ebx+0x1812a1d5]
  423981:	pop    es
  423982:	xchg   edi,eax
  423983:	dec    ebp
  423984:	outs   dx,DWORD PTR ds:[esi]
  423985:	fmul   QWORD PTR [esi+0x6a]
  423988:	xchg   ebp,eax
  423989:	xor    dh,BYTE PTR [edx+ecx*8-0x45]
  42398d:	inc    esp
  42398e:	mov    DWORD PTR [eax+0x3353a448],eax
  423994:	inc    edi
  423995:	out    0x77,al
  423997:	test   al,0x7c
  423999:	fild   WORD PTR [ecx+ebx*2-0x6b77422d]
  4239a0:	loopne 0x423a0b
  4239a2:	xchg   edi,eax
  4239a3:	inc    ebp
  4239a4:	add    BYTE PTR [ebx+0xeb22cd0],bl
  4239aa:	lods   eax,DWORD PTR ds:[esi]
  4239ab:	retf   0x7304
  4239ae:	mov    al,0xee
  4239b0:	rol    BYTE PTR [ebp+eiz*2-0x1c],0x4d
  4239b5:	adc    eax,DWORD PTR [ebx-0x69]
  4239b8:	pop    ebx
  4239b9:	adc    ebp,DWORD PTR [esp+eiz*8]
  4239bc:	pop    edi
  4239bd:	es in  al,0xc0
  4239c0:	xor    eax,0x47bdd6b3
  4239c5:	aam    0x79
  4239c7:	mov    ebx,0x1f31748b
  4239cc:	cmc    
  4239cd:	sub    BYTE PTR [edx],0xf8
  4239d0:	cld    
  4239d1:	cdq    
  4239d2:	das    
  4239d3:	and    eax,0xac90dfd2
  4239d8:	mov    bl,BYTE PTR ds:0xed60ee37
  4239de:	pushf  
  4239df:	clc    
  4239e0:	fnstenv [edx+edx*4-0x6c]
  4239e4:	stos   DWORD PTR es:[edi],eax
  4239e5:	fwait
  4239e6:	arpl   WORD PTR cs:[ecx*1-0x6942224c],cx
  4239ee:	test   DWORD PTR [ecx],edi
  4239f0:	mov    ds:0xc9dc2120,al
  4239f5:	pop    esp
  4239f6:	dec    ecx
  4239f7:	cmp    eax,0xea8e051c
  4239fc:	stos   DWORD PTR es:[edi],eax
  4239fd:	or     DWORD PTR [eax+ebp*8-0x68b93ff1],0xbbf73b27
  423a08:	pop    esi
  423a09:	call   DWORD PTR [ebx-0x65]
  423a0c:	and    ebx,DWORD PTR [ebp+0x35f02ec6]
  423a12:	adc    DWORD PTR [ecx+eax*1+0x4f800],esi
  423a19:	add    BYTE PTR [ecx],ah
  423a1b:	dec    ecx
  423a1c:	(bad)  
  423a1e:	xchg   BYTE PTR [edi],dh
  423a20:	mov    esi,0xde628f42
  423a25:	(bad)  [eax]
  423a27:	xchg   ebp,eax
  423a28:	push   eax
  423a29:	xor    dl,BYTE PTR [esi+0x2c2f1996]
  423a2f:	push   esp
  423a30:	je     0x423a54
  423a32:	sub    DWORD PTR [eax+0x1b],edx
  423a35:	mov    WORD PTR [eax],es
  423a37:	add    al,ch
  423a39:	mov    edi,0x58a0c84
  423a3e:	sub    DWORD PTR [ebx+0x25],0xfffffff2
  423a42:	into   
  423a43:	jnp    0x4239c7
  423a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a46:	mov    DWORD PTR [edi],esp
  423a48:	lea    edx,[esi+esi*1-0x79]
  423a4c:	dec    edi
  423a4d:	adc    esi,DWORD PTR [eax-0x29d61801]
  423a53:	cli    
  423a54:	mov    al,0x7e
  423a56:	retf   0xc734
  423a59:	mov    ecx,0x6d6649c1
  423a5e:	fdiv   QWORD PTR [ebp-0x1b07757c]
  423a64:	js     0x423a38
  423a66:	je     0x4239f3
  423a68:	pop    ebp
  423a69:	(bad)  
  423a6a:	(bad)  
  423a6b:	out    dx,eax
  423a6c:	inc    esp
  423a6d:	xchg   ebx,eax
  423a6e:	loope  0x423ad2
  423a70:	cdq    
  423a71:	int3   
  423a72:	ins    BYTE PTR es:[edi],dx
  423a73:	loope  0x423ad4
  423a75:	mov    esi,0x5cfe1cdb
  423a7a:	dec    DWORD PTR [eax]
  423a7c:	outs   dx,DWORD PTR ds:[esi]
  423a7d:	add    eax,DWORD PTR [eax]
  423a7f:	mov    ds:0x9bab9644,eax
  423a84:	jae    0x423a84
  423a86:	jns    0x423a9e
  423a88:	xchg   DWORD PTR [ebp-0x4149d7eb],edi
  423a8e:	xchg   ebp,eax
  423a8f:	scas   eax,DWORD PTR es:[edi]
  423a90:	test   eax,0x6b64cea9
  423a95:	sbb    esi,DWORD PTR [ebp-0x22]
  423a98:	outs   dx,DWORD PTR ds:[esi]
  423a99:	mov    DWORD PTR [eax+0xe],edx
  423a9c:	shl    BYTE PTR [edx-0x6a],cl
  423a9f:	cwde   
  423aa0:	mov    al,ds:0x865c595
  423aa5:	inc    ecx
  423aa6:	mov    edx,0x1f5d2a40
  423aab:	push   edi
  423aac:	aam    0x46
  423aae:	add    ah,BYTE PTR [edi-0x5c]
  423ab1:	adc    DWORD PTR [esi+edi*8],ebp
  423ab4:	idiv   DWORD PTR [eax-0x51]
  423ab7:	sar    DWORD PTR gs:[ebp+0x8],0x63
  423abc:	cli    
  423abd:	jmp    0xce201c9c
  423ac2:	loop   0x423b41
  423ac4:	sar    ch,0x59
  423ac7:	mov    ch,0xb5
  423ac9:	mov    edx,0x854ea4e7
  423ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423acf:	pop    es
  423ad0:	fist   DWORD PTR [edx]
  423ad2:	loopne 0x423a99
  423ad4:	hlt    
  423ad5:	pop    ss
  423ad6:	in     eax,dx
  423ad7:	sqrtps xmm7,XMMWORD PTR [eax+0x43e4417b]
  423ade:	xor    DWORD PTR [esi-0x59a971fe],edi
  423ae4:	pop    es
  423ae5:	nop
  423ae6:	(bad)  
  423ae8:	test   al,0xcf
  423aea:	and    al,0x4d
  423aec:	cmp    ch,dh
  423aee:	daa    
  423aef:	enter  0x6c37,0xa4
  423af3:	call   0xafa0:0xcddb3a19
  423afa:	xor    eax,0x7502ec20
  423aff:	sti    
  423b00:	push   eax
  423b01:	dec    edi
  423b02:	pop    edx
  423b03:	pop    edx
  423b04:	clc    
  423b05:	call   0xec74f6de
  423b0a:	mov    ds:0xf558ae86,eax
  423b0f:	and    esp,eax
  423b11:	imul   esi,DWORD PTR [ebp+0x5],0x2e
  423b15:	into   
  423b16:	inc    esi
  423b17:	fdivr  st(6),st
  423b19:	ds int3 
  423b1b:	fwait
  423b1c:	xchg   esp,eax
  423b1d:	inc    eax
  423b1e:	mov    bh,0x72
  423b20:	push   esp
  423b21:	xchg   ecx,eax
  423b22:	js     0x423b24
  423b24:	pusha  
  423b25:	cmp    esi,DWORD PTR [edi-0x40f0b4ae]
  423b2b:	lea    ecx,[ebp+0x3e]
  423b2e:	mov    edi,0xc3952577
  423b33:	dec    esi
  423b34:	mov    edi,0xcb744e16
  423b39:	cmc    
  423b3a:	retf   0xde
  423b3d:	xchg   DWORD PTR [ebx-0x15c24992],ecx
  423b43:	pop    edi
  423b44:	pop    ebx
  423b45:	xor    BYTE PTR [ecx-0x76],0xaf
  423b49:	bnd jo 0x423b05
  423b4c:	and    al,0xf3
  423b4e:	das    
  423b4f:	inc    esp
  423b50:	in     al,dx
  423b51:	push   ebx
  423b52:	mov    bh,0xe9
  423b54:	jl     0x423bb1
  423b56:	cs leave 
  423b58:	or     BYTE PTR [eax+ebp*1-0x7616fef7],bh
  423b5f:	mov    ch,0x34
  423b61:	mov    al,ds:0xb3f08f9e
  423b66:	and    ecx,esi
  423b68:	jnp    0x423be2
  423b6a:	sub    ebp,ebp
  423b6c:	adc    eax,0x41ebe911
  423b71:	sub    bl,dl
  423b73:	call   0xed06:0x6d5d73ba
  423b7a:	and    bh,BYTE PTR [ebp+0x4f]
  423b7d:	fst    DWORD PTR [eax]
  423b7f:	imul   edx,DWORD PTR [ebx+0x4a],0x809bc4e8
  423b86:	xor    cl,BYTE PTR [edx]
  423b88:	push   es
  423b89:	push   esi
  423b8a:	into   
  423b8b:	stos   BYTE PTR es:[edi],al
  423b8c:	jg     0x423bab
  423b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b8f:	jmp    0x23b008e
  423b94:	and    dh,bh
  423b96:	js     0x423b3d
  423b98:	pop    esi
  423b99:	xor    cl,bl
  423b9b:	mov    esp,0x2223b367
  423ba0:	xchg   edi,eax
  423ba1:	ret    0x2dd3
  423ba4:	mov    cl,bh
  423ba6:	xor    al,0x96
  423ba8:	stos   DWORD PTR es:[edi],eax
  423ba9:	push   ebx
  423baa:	mov    ebp,0x1a6ce030
  423baf:	mov    ah,0x99
  423bb1:	inc    edx
  423bb2:	mov    ds,ebx
  423bb4:	std    
  423bb5:	push   ecx
  423bb6:	inc    BYTE PTR [edi-0xd]
  423bb9:	or     cl,bl
  423bbb:	rcr    BYTE PTR [ecx+0x136e3c73],cl
  423bc1:	jmp    0xb280:0x98674adc
  423bc8:	pop    edi
  423bc9:	push   eax
  423bca:	and    al,0xd3
  423bcc:	out    0x3c,eax
  423bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bcf:	or     DWORD PTR [edx+eiz*8],esi
  423bd2:	sub    edx,DWORD PTR [ebp+edi*1+0x4c]
  423bd6:	int3   
  423bd7:	popf   
  423bd8:	inc    eax
  423bd9:	cmp    eax,0x557a47c5
  423bde:	mov    eax,0x689b74a1
  423be3:	loope  0x423b8b
  423be5:	cmp    BYTE PTR [esp+edx*4-0x68807677],0xe7
  423bed:	inc    ebx
  423bee:	xor    DWORD PTR [esi],esi
  423bf0:	push   es
  423bf1:	xchg   ecx,eax
  423bf2:	push   esi
  423bf3:	ror    edx,1
  423bf5:	push   ss
  423bf6:	mov    edx,0x4cccaeb5
  423bfb:	push   edi
  423bfc:	mov    dh,0xc1
  423bfe:	dec    ebp
  423bff:	lods   eax,DWORD PTR ds:[esi]
  423c00:	mov    gs,WORD PTR [esi+0x75696976]
  423c06:	pop    es
  423c07:	fisub  DWORD PTR [ebp+0x5661cadf]
  423c0d:	(bad)  
  423c0e:	retf   
  423c0f:	and    ebp,DWORD PTR [ebp+0x26]
  423c12:	cmp    BYTE PTR ds:0x30b2f134,ch
  423c18:	or     edx,esi
  423c1a:	retfw  
  423c1c:	adc    BYTE PTR [ebp+0x27b36f4a],dh
  423c22:	in     al,0x87
  423c24:	xchg   DWORD PTR [ebx],eax
  423c26:	sub    al,0x90
  423c28:	mov    ah,0x8b
  423c2a:	test   DWORD PTR [eax-0x28],edi
  423c2d:	mov    cl,bl
  423c2f:	(bad)  
  423c30:	and    DWORD PTR [ecx],ebp
  423c32:	or     edx,esp
  423c34:	and    dh,BYTE PTR [esi+eiz*8-0x43]
  423c38:	mov    esi,0x3b75a41b
  423c3d:	pop    esp
  423c3e:	call   0xc446:0xb85745bd
  423c45:	sbb    BYTE PTR [ecx+0x6f67297c],bl
  423c4b:	inc    eax
  423c4c:	aam    0x51
  423c4e:	mov    bh,0xff
  423c50:	mov    dh,0x69
  423c52:	outs   dx,DWORD PTR ds:[esi]
  423c53:	mov    ah,0xa1
  423c55:	js     0x423cc9
  423c57:	aad    0xcc
  423c59:	inc    eax
  423c5a:	fadd   QWORD PTR [ebp-0x67]
  423c5d:	enter  0x61e4,0xa8
  423c61:	push   ecx
  423c62:	push   0xffffffb6
  423c64:	cs pop esi
  423c66:	bound  esi,QWORD PTR [esi-0x2]
  423c69:	sub    eax,esp
  423c6b:	fwait
  423c6c:	mov    al,ds:0x2a71e47b
  423c71:	or     esp,DWORD PTR [esi+0x4a0b7375]
  423c77:	scas   al,BYTE PTR es:[edi]
  423c78:	fwait
  423c79:	iret   
  423c7a:	int    0xc2
  423c7c:	imul   esp,DWORD PTR [esp+ebx*8+0x27],0xb1c1a163
  423c84:	adc    ecx,edi
  423c86:	sbb    edi,ebp
  423c88:	inc    edi
  423c89:	jg     0x423cfd
  423c8b:	mov    esp,0x74a90474
  423c90:	call   0xd83d:0x6bbe9046
  423c97:	pop    ss
  423c98:	test   DWORD PTR [edx],esp
  423c9a:	enter  0xab55,0x48
  423c9e:	call   0x87bf4e93
  423ca3:	or     al,0x43
  423ca5:	cdq    
  423ca6:	xchg   ch,ch
  423ca8:	aaa    
  423ca9:	aad    0xe4
  423cab:	je     0x423cc1
  423cad:	pop    edi
  423cae:	cld    
  423caf:	aaa    
  423cb0:	dec    esp
  423cb1:	jmp    0x63aa299c
  423cb6:	add    DWORD PTR [esi-0x35],ebx
  423cb9:	lock jns 0x423c5e
  423cbc:	arpl   WORD PTR [edi-0x1c],bx
  423cbf:	push   DWORD PTR [eax]
  423cc1:	dec    ebp
  423cc2:	sbb    BYTE PTR ds:0xa85018be,ch
  423cc8:	leave  
  423cc9:	jg     0x423ce2
  423ccb:	hlt    
  423ccc:	add    bh,0xfa
  423ccf:	pop    esi
  423cd0:	jecxz  0x423c95
  423cd2:	and    al,0x1a
  423cd4:	pop    esp
  423cd5:	jmp    0xff6d:0xee7134e3
  423cdc:	test   eax,ebx
  423cde:	dec    esi
  423cdf:	cmp    ch,0x34
  423ce2:	jae    0x423c97
  423ce4:	dec    esp
  423ce5:	iret   
  423ce6:	int    0x65
  423ce8:	fsubr  st(0),st
  423cea:	push   edx
  423ceb:	jne    0x423cde
  423ced:	push   ebx
  423cee:	test   eax,0x1671411d
  423cf3:	pop    ebx
  423cf4:	jle    0x423cf1
  423cf6:	or     dl,ah
  423cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cf9:	fnstcw WORD PTR [ebx+0x25]
  423cfc:	mov    edx,0x328f6fa
  423d01:	gs pop edi
  423d03:	shl    BYTE PTR [ecx+0x30],1
  423d06:	jle    0x423d61
  423d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d09:	mov    ecx,0x6b0c6ada
  423d0e:	mov    edi,0x9c4a4dc5
  423d13:	sbb    BYTE PTR ds:0x40350855,ah
  423d19:	fwait
  423d1a:	jle    0x423d83
  423d1c:	adc    dl,BYTE PTR [esi-0x4860f01e]
  423d22:	outs   dx,BYTE PTR ds:[esi]
  423d23:	cmc    
  423d24:	fwait
  423d25:	aaa    
  423d26:	jmp    0x609f:0xf5ccc608
  423d2d:	mov    ebx,DWORD PTR [esi]
  423d2f:	in     al,0xac
  423d31:	mov    ebp,DWORD PTR [edi]
  423d33:	icebp  
  423d34:	push   0xa39c5e59
  423d39:	fsub   st(6),st
  423d3b:	ret    
  423d3c:	cdq    
  423d3d:	in     al,0xf3
  423d3f:	dec    esp
  423d40:	call   0x2407bbf3
  423d45:	xchg   ecx,eax
  423d46:	ficomp WORD PTR [ecx-0x1007425e]
  423d4c:	inc    ecx
  423d4d:	inc    edi
  423d4e:	and    esi,ebx
  423d50:	sahf   
  423d51:	scas   eax,DWORD PTR es:[edi]
  423d52:	cmp    esi,DWORD PTR [ebp-0x3e]
  423d55:	aas    
  423d56:	pop    edi
  423d57:	xchg   ebp,eax
  423d58:	(bad)  
  423d59:	loopne 0x423d2f
  423d5b:	jmp    0x488d:0xedb8d3a2
  423d62:	test   al,0x67
  423d64:	inc    eax
  423d65:	add    ch,BYTE PTR [edi-0x3d]
  423d68:	sub    eax,0x54f2c41e
  423d6d:	ss or  al,0x4d
  423d70:	test   DWORD PTR [edx+ecx*8+0x45],esp
  423d74:	(bad)
  423d78:	xchg   ecx,eax
  423d79:	add    eax,0x19c98ebb
  423d7e:	mov    ebp,0x674c8309
  423d83:	mov    WORD PTR [esp+ebp*8],?
  423d86:	or     al,0xb6
  423d88:	pop    esp
  423d89:	fdivp  st(1),st
  423d8b:	push   0x6a
  423d8d:	and    eax,0x78c31205
  423d92:	mov    eax,0xb1b36521
  423d97:	and    ebp,ebx
  423d99:	or     BYTE PTR [ecx+0xe],dl
  423d9c:	mov    ch,BYTE PTR [edi-0x322192d7]
  423da2:	mov    al,0x98
  423da4:	jns    0x423e1d
  423da6:	ins    BYTE PTR es:[edi],dx
  423da7:	cli    
  423da8:	mov    ebp,0xadb2d6e8
  423dad:	adc    bh,ah
  423daf:	ret    
  423db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423db1:	dec    ebx
  423db2:	sbb    eax,0x3879947c
  423db7:	push   0xffffffb6
  423db9:	imul   eax,edx,0xc2ef1a
  423dbf:	pop    ss
  423dc0:	mov    esp,0x53df4bf9
  423dc5:	fsubrp st(1),st
  423dc7:	fist   WORD PTR [ecx-0x2]
  423dca:	jp     0x423e0a
  423dcc:	or     al,0x6e
  423dce:	leave  
  423dcf:	sti    
  423dd0:	mov    edi,0x202575bb
  423dd5:	add    edi,DWORD PTR [edi+0x58]
  423dd8:	cmp    bh,BYTE PTR [ebx+eax*2]
  423ddb:	xor    eax,ebx
  423ddd:	mov    WORD PTR [edx-0x5b9b2054],es
  423de3:	leave  
  423de4:	add    ebp,edi
  423de6:	push   esi
  423de7:	dec    edx
  423de8:	mov    bh,0x88
  423dea:	ds push esp
  423dec:	ins    DWORD PTR es:[edi],dx
  423ded:	aad    0x9d
  423def:	mov    DWORD PTR [edi+0x5e],ecx
  423df2:	xchg   edi,eax
  423df3:	dec    bp
  423df5:	or     ch,BYTE PTR [edi+edx*8+0x70da871a]
  423dfc:	jo     0x423e06
  423dfe:	mov    esp,esp
  423e00:	mov    esi,0x55d4627c
  423e05:	mov    ah,0xc6
  423e07:	push   ss
  423e08:	and    edx,ebp
  423e0a:	dec    eax
  423e0b:	adc    esp,DWORD PTR [edx]
  423e0d:	cld    
  423e0e:	aas    
  423e0f:	xchg   BYTE PTR [esi+0x24],ch
  423e12:	retf   0x3b1c
  423e15:	scas   al,BYTE PTR es:[edi]
  423e16:	stc    
  423e17:	jae    0x423e37
  423e19:	and    DWORD PTR [ecx+0x60],eax
  423e1c:	popa   
  423e1d:	shr    DWORD PTR [ecx-0x17],0x80
  423e21:	pop    eax
  423e22:	pop    esi
  423e23:	outs   dx,DWORD PTR ds:[esi]
  423e24:	popa   
  423e25:	(bad)  
  423e26:	int    0xd9
  423e28:	ins    DWORD PTR es:[edi],dx
  423e29:	icebp  
  423e2a:	and    BYTE PTR [edx],0x15
  423e2d:	test   eax,0x834c136c
  423e32:	rol    cl,1
  423e34:	pop    eax
  423e35:	push   esi
  423e36:	inc    esi
  423e37:	mov    esp,es
  423e39:	rol    BYTE PTR [ecx-0x5f],cl
  423e3c:	out    0x75,al
  423e3e:	loop   0x423e35
  423e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e41:	sbb    eax,DWORD PTR [edx+0x2867b359]
  423e47:	aad    0x24
  423e49:	jmp    0x423e55
  423e4b:	ja     0x423e57
  423e4d:	pop    ebx
  423e4e:	(bad)  
  423e4f:	mov    cs,WORD PTR [edi]
  423e51:	adc    al,0xe7
  423e53:	add    eax,0x2a8f4cd4
  423e58:	sbb    BYTE PTR [eax-0x2e],dl
  423e5b:	pop    ds
  423e5c:	rcl    BYTE PTR [eax+0x28],1
  423e5f:	mov    esp,0xf77b363d
  423e64:	inc    esi
  423e65:	test   DWORD PTR [ebx],eax
  423e67:	pop    ds
  423e68:	dec    esp
  423e69:	jp     0x423eae
  423e6b:	mov    ah,0xa5
  423e6d:	sti    
  423e6e:	repnz inc edi
  423e70:	inc    eax
  423e71:	push   ss
  423e72:	in     al,dx
  423e73:	ror    BYTE PTR [edx+0x166d3377],1
  423e79:	jmp    0x578f9148
  423e7e:	xor    dl,BYTE PTR [ebx]
  423e80:	inc    ebp
  423e81:	jns    0x423e24
  423e83:	sbb    ah,0xba
  423e86:	test   al,0xa8
  423e88:	dec    edi
  423e89:	xchg   DWORD PTR [ecx],edx
  423e8b:	sub    al,0xdd
  423e8d:	lods   eax,DWORD PTR ds:[esi]
  423e8e:	sub    eax,DWORD PTR [edx+edx*2]
  423e91:	aas    
  423e92:	pop    ecx
  423e93:	push   es
  423e94:	sbb    DWORD PTR [edx],ebp
  423e96:	pusha  
  423e97:	in     eax,dx
  423e98:	lock pop ecx
  423e9a:	(bad)  [ecx+ebx*1+0x1aab77e5]
  423ea1:	cli    
  423ea2:	out    dx,eax
  423ea3:	jnp    0x423e6d
  423ea5:	push   0x37
  423ea7:	push   edi
  423ea8:	out    0x1d,eax
  423eaa:	jg     0x423f1f
  423eac:	ret    
  423ead:	rcr    BYTE PTR [edx+0x4],cl
  423eb0:	mov    cs,WORD PTR [esi+ecx*1]
  423eb3:	frstor [esi-0x3e]
  423eb6:	and    cl,BYTE PTR [edx-0x7e]
  423eb9:	imul   ebx,DWORD PTR [eax+0x7ef04509],0xffffffdf
  423ec0:	fs arpl si,ax
  423ec3:	mov    ds:0x7eb67575,eax
  423ec8:	mov    bl,0xa2
  423eca:	cdq    
  423ecb:	outs   dx,BYTE PTR ds:[esi]
  423ecc:	xchg   edx,eax
  423ecd:	jae    0x423eb9
  423ecf:	lds    esp,FWORD PTR [eax]
  423ed1:	test   DWORD PTR [edi+0x30e72958],eax
  423ed7:	xchg   DWORD PTR [ecx],eax
  423ed9:	add    BYTE PTR [ebp-0x6c31f03a],0x71
  423ee0:	cmp    al,0x26
  423ee2:	mov    WORD PTR [esi-0x644f6fc],bx
  423ee9:	push   edx
  423eea:	hlt    
  423eeb:	mov    BYTE PTR [ebx+0x4f7ab2cc],ah
  423ef1:	repz xor eax,0x379f79d5
  423ef7:	retf   
  423ef8:	sub    BYTE PTR [ebx-0x76],dh
  423efb:	mov    dl,0x68
  423efd:	sbb    eax,0x7632147f
  423f02:	or     dh,dl
  423f04:	out    0x2a,al
  423f06:	xchg   esp,eax
  423f07:	xchg   BYTE PTR [edx],ah
  423f09:	fstp   DWORD PTR [ecx]
  423f0b:	push   ss
  423f0c:	fucomi st,st(7)
  423f0e:	cdq    
  423f0f:	jmp    0x423efa
  423f11:	iret   
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fiadd  DWORD PTR [ebx+0x62]
  423f20:	out    0x74,al
  423f22:	or     DWORD PTR [ecx+0x4f80001],edi
  423f28:	add    BYTE PTR [eax],al
  423f2a:	add    dh,BYTE PTR [esi+0x4e622344]
  423f30:	xor    DWORD PTR [edi+0x56],ebp
  423f33:	iret   
  423f34:	push   edi
  423f35:	push   edx
  423f36:	addr16 or eax,0xe124965e
  423f3c:	scas   al,BYTE PTR es:[edi]
  423f3d:	cmp    DWORD PTR [edx],edx
  423f3f:	jno    0x423ef9
  423f41:	cmp    ch,al
  423f43:	jo     0x423f29
  423f45:	mov    dl,0x32
  423f47:	imul   BYTE PTR [edx+0x6079a51f]
  423f4d:	sti    
  423f4e:	adc    ecx,DWORD PTR [esi-0x2eb36020]
  423f54:	test   dl,dl
  423f56:	xor    BYTE PTR [esp+esi*1],cl
  423f59:	lods   eax,DWORD PTR ds:[esi]
  423f5a:	mov    edx,0x1e742639
  423f5f:	test   al,0x6e
  423f61:	scas   al,BYTE PTR es:[edi]
  423f62:	jmp    DWORD PTR [ecx+0x36a94502]
  423f68:	add    dl,BYTE PTR [eax+0x3b8495ce]
  423f6e:	icebp  
  423f6f:	mov    ds:0xe2c67985,eax
  423f74:	sub    bl,ch
  423f76:	jno    0x423faf
  423f78:	inc    edi
  423f79:	cld    
  423f7a:	inc    edi
  423f7b:	lods   al,BYTE PTR ds:[esi]
  423f7c:	cmp    BYTE PTR [ebp-0x1d],dh
  423f7f:	push   eax
  423f80:	xor    ebp,edx
  423f82:	push   edi
  423f83:	mov    ds:0xeddfe18c,eax
  423f88:	lock push ds
  423f8a:	lods   al,BYTE PTR ds:[esi]
  423f8b:	dec    esi
  423f8c:	sub    al,0x15
  423f8e:	xchg   edi,eax
  423f8f:	sub    BYTE PTR [esi+edx*8],al
  423f92:	adc    DWORD PTR [esi-0x28f524d3],esp
  423f98:	es jge 0x423fca
  423f9b:	sbb    al,0x1b
  423f9d:	retf   
  423f9e:	int    0xa4
  423fa0:	push   0x3eba95c7
  423fa5:	sub    ecx,ecx
  423fa7:	xor    al,0x54
  423fa9:	sbb    edi,DWORD PTR [ebx-0x7191f574]
  423faf:	cwde   
  423fb0:	fldenv [ebx-0x13aa0891]
  423fb6:	aam    0xdd
  423fb8:	pop    ds
  423fb9:	int3   
  423fba:	xor    eax,ebx
  423fbc:	dec    esp
  423fbd:	sbb    DWORD PTR [ebp+0x55],0x239c5c97
  423fc4:	inc    edx
  423fc5:	inc    ebx
  423fc6:	vandps xmm5,xmm3,XMMWORD PTR [ebx-0x78]
  423fcb:	sbb    ecx,0xe55eddf1
  423fd1:	(bad)  
  423fd2:	xchg   esi,eax
  423fd3:	in     eax,0xce
  423fd5:	test   eax,0x2f1168b9
  423fda:	xchg   edi,eax
  423fdb:	repnz cmp ebp,DWORD PTR [ebp+0x65f95add]
  423fe2:	out    dx,al
  423fe3:	fstp   TBYTE PTR [ecx+0x3d7f52fd]
  423fe9:	aas    
  423fea:	xchg   ecx,eax
  423feb:	sub    BYTE PTR ds:0x28f2bfc3,0x5c
  423ff2:	push   0xfffffffe
  423ff4:	jg     0x42403f
  423ff6:	pop    ebp
  423ff7:	and    eax,edi
  423ff9:	loopne 0x423feb
  423ffb:	mov    WORD PTR [edx-0x15],cs
  423ffe:	pop    esi
  423fff:	das    
  424000:	xchg   esi,eax
  424001:	ficom  WORD PTR [ebp-0x61]
  424004:	sbb    BYTE PTR [ecx-0x4f6a41d0],dl
  42400a:	and    DWORD PTR [eax+0x52b494ee],eax
  424010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424011:	xrelease mov BYTE PTR [edi-0x5547071c],al
  424018:	cmp    ebx,DWORD PTR [ebx-0x21]
  42401b:	mov    ds:0xf1d6b614,al
  424020:	ds retf 
  424022:	test   DWORD PTR ds:0xffcd84e,ebp
  424028:	stos   BYTE PTR es:[edi],al
  424029:	add    DWORD PTR fs:[ebp+0x330e7aaf],ecx
  424030:	mov    eax,cs
  424032:	mov    bh,0xb3
  424034:	jne    0x42405b
  424036:	pop    ecx
  424037:	sti    
  424038:	cmp    al,0x35
  42403a:	or     ebp,DWORD PTR [edx]
  42403c:	and    al,0x81
  42403e:	xchg   edx,eax
  42403f:	fnsavew [edx+eax*2-0x37]
  424044:	fist   DWORD PTR [edi]
  424046:	sbb    edi,esp
  424048:	mov    bh,0x3a
  42404a:	out    dx,eax
  42404b:	mov    esp,0x313310a0
  424050:	cld    
  424051:	adc    dh,BYTE PTR [esi+0x33dc8bab]
  424057:	pop    ecx
  424058:	(bad)  
  42405a:	aaa    
  42405b:	sub    BYTE PTR [ebp-0x5f],bh
  42405e:	mov    edx,0xa9d57010
  424063:	cs or  ah,bh
  424066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424067:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424069:	and    dl,dh
  42406b:	pop    esp
  42406c:	pop    ebp
  42406d:	rcr    BYTE PTR [ebx+eiz*8],1
  424070:	add    eax,0xd750b7c6
  424075:	jne    0x424086
  424077:	jp     0x42407d
  424079:	outs   dx,BYTE PTR ds:[esi]
  42407a:	in     eax,dx
  42407b:	arpl   ax,bx
  42407d:	outs   dx,BYTE PTR ds:[esi]
  42407e:	mov    ds:0xc57674d,al
  424083:	les    esp,FWORD PTR [eax]
  424085:	push   ss
  424086:	imul   edx,DWORD PTR [edx-0xba7b213],0x220bd748
  424090:	int    0x2c
  424092:	jmp    0x424086
  424094:	pop    ecx
  424095:	test   cl,dh
  424097:	inc    ebx
  424098:	inc    ecx
  424099:	fild   WORD PTR [eax]
  42409b:	mov    ebp,0xe018d5bb
  4240a0:	scas   eax,DWORD PTR es:[edi]
  4240a1:	shl    DWORD PTR [eax-0x36],0x5c
  4240a5:	out    0x87,eax
  4240a7:	mov    BYTE PTR [esi+0x1c],bh
  4240aa:	inc    ebx
  4240ab:	pop    ds
  4240ac:	and    al,0xf1
  4240ae:	pusha  
  4240af:	sahf   
  4240b0:	jecxz  0x4240f9
  4240b2:	inc    ebx
  4240b3:	xchg   ecx,eax
  4240b4:	xchg   edi,eax
  4240b5:	addr16 push eax
  4240b7:	stos   BYTE PTR es:[edi],al
  4240b8:	mov    cl,0x73
  4240ba:	js     0x42405c
  4240bc:	cmp    eax,0x761c49ad
  4240c1:	jo     0x424074
  4240c3:	sub    BYTE PTR [ecx-0x2a60584c],bh
  4240c9:	pusha  
  4240ca:	mov    eax,ds:0x88d69647
  4240cf:	ins    BYTE PTR es:[edi],dx
  4240d0:	ins    BYTE PTR es:[edi],dx
  4240d1:	push   0xffffffc2
  4240d3:	mov    ch,0x8a
  4240d5:	int3   
  4240d6:	lahf   
  4240d7:	push   ss
  4240d8:	in     al,0xf7
  4240da:	ins    DWORD PTR es:[edi],dx
  4240db:	adc    cl,BYTE PTR ds:[ebx-0x3c1a3454]
  4240e2:	hlt    
  4240e3:	pop    edi
  4240e4:	fs stos DWORD PTR es:[edi],eax
  4240e6:	push   0xa81ac3f7
  4240eb:	adc    al,0xac
  4240ed:	pusha  
  4240ee:	lahf   
  4240ef:	mov    bh,0x6e
  4240f1:	xor    al,0xd9
  4240f3:	ret    
  4240f4:	fdiv   DWORD PTR [ebp+0x68057172]
  4240fa:	inc    esi
  4240fb:	nop
  4240fc:	jnp    0x424144
  4240fe:	rol    dl,cl
  424100:	adc    al,0xd6
  424102:	jmp    0x4240b0
  424104:	in     al,dx
  424105:	dec    edi
  424106:	shl    esp,0xcb
  424109:	pmullw mm0,QWORD PTR [ebx]
  42410c:	xchg   edx,eax
  42410d:	loope  0x424153
  42410f:	lds    eax,FWORD PTR [ecx]
  424111:	mov    esp,0xcf63d0ff
  424116:	mov    dh,0x45
  424118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424119:	xchg   esi,eax
  42411a:	mov    ch,ch
  42411c:	adc    esp,DWORD PTR [esi]
  42411e:	sbb    eax,0x270eb97b
  424123:	and    DWORD PTR [eax-0x58389449],ecx
  424129:	xchg   ebx,eax
  42412a:	pop    esp
  42412b:	inc    BYTE PTR [edi+0x14]
  42412e:	jo     0x424132
  424130:	es pusha 
  424132:	nop
  424133:	add    DWORD PTR [esi+0x4cfdd986],eax
  424139:	cmp    BYTE PTR [edi+0x65771974],bl
  42413f:	push   edx
  424140:	and    al,0x8b
  424142:	pop    ebx
  424143:	mov    edx,0x6c6a3e0b
  424148:	mov    bl,0x6b
  42414a:	outs   dx,DWORD PTR ds:[esi]
  42414b:	ret    
  42414c:	in     al,0xef
  42414e:	xchg   edx,eax
  42414f:	dec    esp
  424150:	and    edx,DWORD PTR [edi]
  424152:	arpl   WORD PTR [eax+0x49],bp
  424155:	cli    
  424156:	rol    DWORD PTR ds:0x453326c0,cl
  42415c:	int3   
  42415d:	or     ebx,ebp
  42415f:	adc    eax,0x5e6fc36a
  424164:	ds cmp al,0x61
  424167:	add    esi,eax
  424169:	in     al,0x5b
  42416b:	shl    BYTE PTR [ecx+esi*8-0x7e],0x32
  424170:	retf   
  424171:	mov    ebx,0xa9bafbc5
  424176:	cmp    BYTE PTR [ebp-0x33],0xf
  42417a:	popa   
  42417b:	imul   edx,DWORD PTR gs:[ebx+0x6f1e34b2],0xffffffe0
  424183:	mov    ah,0xc2
  424185:	push   ds
  424186:	std    
  424187:	enter  0x2c06,0x66
  42418b:	dec    esp
  42418c:	jg     0x424151
  42418e:	jmp    0x424126
  424190:	mov    bh,0xe5
  424192:	mov    bl,0x2f
  424194:	sub    BYTE PTR [eax+0x99c7937],0x5e
  42419b:	jb     0x424217
  42419d:	ja     0x42413b
  42419f:	pop    ss
  4241a0:	add    eax,0x4a8f8dab
  4241a5:	dec    ebp
  4241a6:	sbb    eax,0xfe782616
  4241ab:	test   BYTE PTR fs:[ecx+0x67b4580],cl
  4241b2:	fcmovbe st,st(2)
  4241b4:	xchg   ebx,eax
  4241b5:	ins    DWORD PTR es:[edi],dx
  4241b6:	or     ebx,DWORD PTR [ecx+0x4a0e2d3b]
  4241bc:	in     al,0xc2
  4241be:	int3   
  4241bf:	rcr    BYTE PTR [edx],1
  4241c1:	push   esi
  4241c2:	inc    eax
  4241c3:	lods   eax,DWORD PTR ds:[esi]
  4241c4:	mov    bl,0xe6
  4241c6:	push   esi
  4241c7:	jnp    0x424243
  4241c9:	(bad)  
  4241ca:	aaa    
  4241cb:	ret    
  4241cc:	lds    ecx,FWORD PTR [ebp-0x6f]
  4241cf:	push   ebx
  4241d0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4241d2:	gs mov al,fs:0xeceab03f
  4241d9:	cdq    
  4241da:	(bad)  
  4241dc:	imul   ecx,esp,0x75
  4241df:	and    edx,edi
  4241e1:	in     eax,dx
  4241e2:	dec    edx
  4241e3:	mov    al,ds:0x1b6c13a9
  4241e8:	xor    BYTE PTR [ebx],dl
  4241ea:	mov    cs,WORD PTR [ecx]
  4241ec:	imul   ebx,DWORD PTR [ebx],0xe5b899a6
  4241f2:	inc    edx
  4241f3:	in     al,dx
  4241f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f5:	jp     0x424253
  4241f7:	pop    ebp
  4241f8:	or     dh,BYTE PTR [edi+0x61]
  4241fb:	cmp    dl,BYTE PTR [ebp+0x28255e5a]
  424201:	sbb    al,0xf4
  424203:	xchg   ecx,eax
  424204:	bound  esp,QWORD PTR [ecx]
  424206:	je     0x42418d
  424208:	outs   dx,DWORD PTR ds:[esi]
  424209:	pop    eax
  42420a:	pop    esi
  42420b:	pop    ebx
  42420c:	je     0x42420f
  42420e:	repz repz push edx
  424211:	jns    0x42427e
  424213:	out    0x1,eax
  424215:	les    ebx,FWORD PTR [ecx-0x6d]
  424218:	push   0x56
  42421a:	push   ebp
  42421b:	pop    edi
  42421c:	mov    WORD PTR [edx+0x43],es
  42421f:	cmp    dh,BYTE PTR [ebx+esi*2-0x32969c80]
  424226:	(bad)  
  424227:	mov    WORD PTR [esi-0x3c],cs
  42422a:	aaa    
  42422b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42422c:	mov    ch,0xac
  42422e:	hlt    
  42422f:	or     esp,DWORD PTR [esi+0x2f5557f9]
  424235:	sub    dl,cl
  424237:	inc    eax
  424238:	scas   al,BYTE PTR es:[edi]
  424239:	ror    DWORD PTR [esi+esi*1-0x3a],1
  42423d:	test   BYTE PTR [edx+0x15681957],al
  424243:	jae    0x424225
  424245:	or     ah,BYTE PTR [eax-0x4abb19fe]
  42424b:	push   ebp
  42424c:	xchg   ecx,eax
  42424d:	xchg   ebp,eax
  42424e:	lahf   
  42424f:	xchg   ecx,eax
  424250:	pop    ebx
  424251:	shr    DWORD PTR [eax-0x4dc86c15],1
  424257:	loope  0x4242a7
  424259:	or     edx,DWORD PTR [eax-0x7]
  42425c:	(bad)  
  42425d:	mov    edi,0x56409227
  424262:	sbb    ecx,DWORD PTR [ebx+ecx*4+0x1d6425ae]
  424269:	int3   
  42426a:	lds    edx,FWORD PTR ds:0x113112cf
  424270:	sbb    eax,0xba2c65ac
  424275:	into   
  424276:	jl     0x42427f
  424278:	push   ebx
  424279:	inc    ecx
  42427a:	xchg   BYTE PTR [edx],ch
  42427c:	adc    eax,0xc1b21a4c
  424281:	mov    al,0xfc
  424283:	mov    dl,0x84
  424285:	cmp    al,BYTE PTR [edi-0x38]
  424288:	add    eax,0xe5cc0bb0
  42428d:	cmc    
  42428e:	push   ecx
  42428f:	imul   esp,ecx,0xf8392f6
  424295:	dec    ecx
  424296:	mov    dl,0x68
  424298:	push   edx
  424299:	sub    al,0x1d
  42429b:	sahf   
  42429c:	dec    esp
  42429d:	inc    eax
  42429e:	(bad)
  4242a1:	push   ss
  4242a2:	addr16 mov ebx,0x72e2a277
  4242a8:	jb     0x42430e
  4242aa:	adc    al,0x3e
  4242ac:	or     ch,cl
  4242ae:	jne    0x424319
  4242b0:	mov    ds:0xfb24e1e4,al
  4242b5:	pop    esp
  4242b6:	pop    esi
  4242b7:	add    eax,0x743eb0ed
  4242bc:	add    al,0xcd
  4242be:	int3   
  4242bf:	jnp    0x424321
  4242c1:	and    DWORD PTR [edi-0x72],0x67
  4242c5:	and    bl,al
  4242c7:	jecxz  0x424320
  4242c9:	and    eax,0xeaadf50a
  4242ce:	jo     0x4242af
  4242d0:	pop    ss
  4242d1:	aaa    
  4242d2:	imul   ebp,DWORD PTR [eax-0x17d18844],0x42e3216a
  4242dc:	cmp    eax,0x9dbb2259
  4242e1:	fwait
  4242e2:	daa    
  4242e3:	mov    BYTE PTR [ebx+0x780c7e4b],0x63
  4242ea:	sbb    BYTE PTR [edx],dl
  4242ec:	and    eax,ebx
  4242ee:	xchg   BYTE PTR [ecx],cl
  4242f0:	mov    ?,WORD PTR [ecx]
  4242f2:	aam    0x17
  4242f4:	int3   
  4242f5:	mov    ecx,0x399687a5
  4242fa:	nop
  4242fb:	repnz loop 0x4242b9
  4242fe:	push   edx
  4242ff:	ret    0xe786
  424302:	or     DWORD PTR [ebp-0x37],0xfffffff0
  424306:	test   eax,0x5d74f865
  42430b:	out    dx,eax
  42430c:	ds cmc 
  42430e:	xchg   ebp,eax
  42430f:	adc    eax,0xd76a13e
  424314:	and    DWORD PTR [eax-0x42],ebp
  424317:	or     BYTE PTR [eax+0x21c38e68],ah
  42431d:	sub    al,0xd8
  42431f:	lock mov eax,0x6d250fd3
  424325:	aas    
  424326:	xor    esi,0x17
  424329:	inc    ebp
  42432a:	in     eax,0xec
  42432c:	out    0xc6,eax
  42432e:	outs   dx,BYTE PTR ds:[esi]
  42432f:	shl    DWORD PTR [eax+0x3],0x5e
  424333:	push   ebp
  424334:	adc    eax,DWORD PTR [ecx+0x29f9917]
  42433a:	popa   
  42433b:	xor    DWORD PTR [esi+edx*4-0x7],edi
  42433f:	or     DWORD PTR [esp+edx*2+0x20],eax
  424343:	psrad  mm2,QWORD PTR [ecx+0x11]
  424347:	add    bl,BYTE PTR cs:[eax-0x685cc928]
  42434e:	arpl   WORD PTR [ebp-0x41],ax
  424351:	mov    dh,0x58
  424353:	fcomp  QWORD PTR [ecx-0x42dc2902]
  424359:	push   ecx
  42435a:	shr    DWORD PTR [eax+0x15],0x76
  42435e:	hlt    
  42435f:	mov    ch,0xa9
  424361:	sub    DWORD PTR [ebx],ebp
  424363:	ret    
  424364:	out    0x6d,al
  424366:	pop    DWORD PTR [ebp+ecx*8-0xe]
  42436a:	ret    
  42436b:	mov    edi,0x38c4e52a
  424370:	push   0xbd2d296e
  424375:	mov    esi,0xa2409a84
  42437a:	dec    ebx
  42437b:	aad    0xdc
  42437d:	loopne 0x4243b6
  42437f:	xor    al,0x8f
  424381:	call   0x297903b2
  424386:	lods   eax,DWORD PTR ds:[esi]
  424387:	and    dh,BYTE PTR [esi-0x27]
  42438a:	and    ch,0x55
  42438d:	scas   eax,DWORD PTR es:[di]
  42438f:	(bad)  
  424390:	jae    0x4243d8
  424392:	lock outs dx,DWORD PTR ds:[esi]
  424394:	arpl   WORD PTR [edi+0xc],di
  424397:	jns    0x4243d9
  424399:	add    BYTE PTR [ebx],al
  42439b:	jle    0x4243d0
  42439d:	dec    edi
  42439e:	jb     0x4243b9
  4243a0:	push   edx
  4243a1:	or     edx,edx
  4243a3:	cdq    
  4243a4:	add    dh,BYTE PTR [esi-0x1106d954]
  4243aa:	sub    edx,ebp
  4243ac:	xchg   esp,eax
  4243ad:	daa    
  4243ae:	mul    DWORD PTR [eax+0x5b]
  4243b1:	or     BYTE PTR [ecx-0x26addae],0x3e
  4243b8:	push   0x7b
  4243ba:	aas    
  4243bb:	in     al,dx
  4243bc:	xor    DWORD PTR [ebp+0x57715581],esi
  4243c2:	clc    
  4243c3:	cmp    ebx,DWORD PTR [ebx]
  4243c5:	cli    
  4243c6:	loope  0x4243a6
  4243c8:	jae    0x42436e
  4243ca:	or     BYTE PTR [ebp-0x2a],dh
  4243cd:	fisub  DWORD PTR [edi+0x41]
  4243d0:	bound  ebx,QWORD PTR [esi+0x2942498e]
  4243d6:	sbb    BYTE PTR [esi-0x80],0x36
  4243da:	leave  
  4243db:	inc    esp
  4243dc:	push   cs
  4243dd:	(bad)  
  4243de:	jge    0x4243c6
  4243e0:	fimul  DWORD PTR [ebx-0x27c2bb8e]
  4243e6:	lods   eax,DWORD PTR ds:[esi]
  4243e7:	pop    edx
  4243e8:	sbb    DWORD PTR [edi+0x7cbdbfd7],esi
  4243ee:	inc    ebp
  4243ef:	(bad)  
  4243f0:	int3   
  4243f1:	in     al,dx
  4243f2:	pop    edx
  4243f3:	push   cs
  4243f4:	idiv   BYTE PTR [esi+0x56ff637d]
  4243fa:	push   edi
  4243fb:	sbb    ah,BYTE PTR [ebp-0x564149ac]
  424401:	fistp  DWORD PTR [ebp+0x678546c]
  424407:	shl    DWORD PTR [esi+0xf],1
  42440a:	xchg   BYTE PTR es:[ebp+0x6e3d7174],ah
  424411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424412:	adc    bl,BYTE PTR [ecx+edx*8+0x4d3bbb6c]
  424419:	sahf   
  42441a:	mov    esp,0x96b849c5
  42441f:	xor    al,dh
  424421:	push   0x80cfda2c
  424426:	call   DWORD PTR [ebp-0x361c0191]
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	cmp    cl,BYTE PTR [ebx-0x41fe4b65]
  424434:	add    DWORD PTR [eax],eax
  424436:	clc    
  424437:	add    al,0x0
  424439:	add    BYTE PTR [edi],dh
  42443b:	pop    edx
  42443c:	rcl    BYTE PTR [edi],1
  42443e:	shl    DWORD PTR [ebx],1
  424440:	rol    edi,0xb9
  424443:	popa   
  424444:	stc    
  424445:	mov    esi,DWORD PTR [ebp+0x6b367639]
  42444b:	dec    esp
  42444c:	stc    
  42444d:	mov    esi,0x66f4a8d2
  424452:	mov    bl,0x84
  424454:	ds ret 
  424456:	arpl   bp,bp
  424458:	icebp  
  424459:	sbb    ch,bl
  42445b:	sub    ah,BYTE PTR [ebx]
  42445d:	mov    esi,0x1970d52f
  424462:	inc    ebp
  424463:	xor    ebp,esi
  424465:	pusha  
  424466:	and    BYTE PTR [ebx],bh
  424468:	in     al,0x65
  42446a:	sbb    BYTE PTR [edi-0x3a],dh
  42446d:	sub    dh,BYTE PTR cs:[edx-0x311adec5]
  424474:	nop
  424475:	sub    BYTE PTR [eax+esi*2],0x98
  424479:	shl    ecx,1
  42447b:	jne    0x424474
  42447d:	xchg   esi,eax
  42447e:	xchg   esp,eax
  42447f:	arpl   ax,dx
  424481:	pop    esp
  424482:	pop    ebx
  424483:	or     edi,DWORD PTR [esi]
  424485:	sbb    eax,DWORD PTR [eax]
  424487:	mov    ah,0x8a
  424489:	loop   0x42442b
  42448b:	pop    es
  42448c:	imul   eax,DWORD PTR [ebx],0xcc998fe5
  424492:	shl    BYTE PTR [esi],1
  424494:	mov    ds:0xabf37218,eax
  424499:	idiv   DWORD PTR [ecx+0x5cd8d942]
  42449f:	bnd jge 0x42446e
  4244a2:	(bad)  
  4244a3:	fwait
  4244a4:	or     DWORD PTR [ecx+0x2f],ecx
  4244a7:	sbb    eax,0x8897e252
  4244ac:	shr    bl,0x3b
  4244af:	fcomi  st,st(0)
  4244b1:	add    al,0xec
  4244b3:	imul   edi,esi,0x53
  4244b6:	out    dx,eax
  4244b7:	mov    ebp,0xaf44d0ce
  4244bc:	push   cs
  4244bd:	xchg   edi,ebx
  4244bf:	lea    eax,[eax-0x35]
  4244c2:	inc    ebp
  4244c3:	in     eax,dx
  4244c4:	xchg   ecx,eax
  4244c5:	test   DWORD PTR [ebx-0x1a],esp
  4244c8:	sub    eax,0x973a8bbd
  4244cd:	push   0x51dfba35
  4244d2:	mov    bh,BYTE PTR [esi-0x68]
  4244d5:	sbb    dl,BYTE PTR [ebx+ecx*8-0x18ccdd98]
  4244dc:	inc    edi
  4244dd:	imul   esi,DWORD PTR [ebp+0x17],0x6514e61b
  4244e4:	and    eax,0x8e8b283d
  4244e9:	jecxz  0x4244ea
  4244eb:	push   eax
  4244ec:	push   ebx
  4244ed:	daa    
  4244ee:	adc    BYTE PTR [ecx+ebp*1],dh
  4244f1:	mov    ds:0x7c6fdd7c,eax
  4244f6:	inc    esp
  4244f7:	mov    ch,0x1d
  4244f9:	xchg   edx,eax
  4244fa:	cs xor eax,0x5056211e
  424500:	push   edi
  424501:	mov    bh,0x5b
  424503:	sbb    al,0x1d
  424505:	(bad)  
  424507:	arpl   WORD PTR [eax],cx
  424509:	cmc    
  42450a:	jle    0x424502
  42450c:	and    eax,0xdc50f0c6
  424511:	imul   ecx,DWORD PTR [ebx-0x689e9f4c],0x3709530c
  42451b:	and    edx,ecx
  42451d:	mov    DWORD PTR [eax],esp
  42451f:	les    esi,FWORD PTR [edx-0x4c]
  424522:	or     cl,cl
  424524:	add    edi,DWORD PTR [esi-0x590526ee]
  42452a:	add    al,0x95
  42452c:	bound  edx,QWORD PTR [edi-0xd1a40fb]
  424532:	lods   eax,DWORD PTR ds:[esi]
  424533:	or     eax,0xa7da5495
  424538:	cmp    ah,BYTE PTR [esi]
  42453a:	cmp    BYTE PTR [ebx+0x6c],bl
  42453d:	aad    0xe3
  42453f:	stos   BYTE PTR es:[edi],al
  424540:	mov    ch,0x7b
  424542:	and    bh,dh
  424544:	test   edx,edx
  424546:	nop
  424547:	ret    
  424548:	aam    0xf8
  42454a:	scas   al,BYTE PTR es:[edi]
  42454b:	jmp    0x37a1d62e
  424550:	xchg   ebp,eax
  424551:	xor    bh,ah
  424553:	jb     0x4244f5
  424555:	aam    0x23
  424557:	mov    eax,ds:0xa7d98d2b
  42455c:	sbb    al,0x25
  42455e:	jnp    0x4244e1
  424560:	scas   eax,DWORD PTR es:[edi]
  424561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424562:	icebp  
  424563:	mov    al,ds:0x21cf0c90
  424568:	ja     0x42454e
  42456a:	push   edi
  42456b:	sub    BYTE PTR [ecx],0xac
  42456e:	retf   
  42456f:	jg     0x424518
  424571:	xchg   esp,eax
  424572:	xor    DWORD PTR [edi+esi*1],esp
  424575:	aad    0xda
  424577:	lods   eax,DWORD PTR ds:[esi]
  424578:	xchg   edi,eax
  424579:	mov    DWORD PTR [edi],ebp
  42457b:	rol    DWORD PTR ds:0x4e33d58c,0x70
  424582:	push   esp
  424583:	cli    
  424584:	push   si
  424586:	push   0xffffffb4
  424588:	ins    BYTE PTR es:[edi],dx
  424589:	or     eax,0xf619ef49
  42458e:	and    ch,BYTE PTR [edi+0x20149ee4]
  424594:	sbb    esi,DWORD PTR [ebx]
  424596:	add    ecx,edi
  424598:	retf   
  424599:	jnp    0x424567
  42459b:	xchg   esi,eax
  42459c:	sub    DWORD PTR [edi+0x1],0x25602685
  4245a3:	call   0x436e:0x56010576
  4245aa:	punpckhbw mm2,QWORD PTR [ecx+0x1286dc22]
  4245b1:	jp     0x42457f
  4245b3:	inc    ebx
  4245b4:	jecxz  0x42459e
  4245b6:	(bad)  
  4245b7:	jmp    0x91c:0x300fadb9
  4245be:	pop    edi
  4245bf:	sub    al,0x5a
  4245c1:	push   esp
  4245c2:	pushf  
  4245c3:	push   edi
  4245c4:	aad    0xde
  4245c6:	or     al,0xe9
  4245c8:	das    
  4245c9:	mov    edx,0xa9f142cc
  4245ce:	mov    ds:0xc6b8de68,al
  4245d3:	mov    edi,0x73560b7e
  4245d8:	sub    BYTE PTR [edx-0x625e6a85],0x85
  4245df:	xchg   BYTE PTR [edx+0x1dd733cc],dh
  4245e5:	dec    eax
  4245e6:	ja     0x42465c
  4245e8:	mov    ds:0x40400c9a,al
  4245ed:	lock test DWORD PTR [edx+0x29],0x1db1ec9f
  4245f5:	inc    edx
  4245f6:	lahf   
  4245f7:	sar    esp,1
  4245f9:	mov    cs,WORD PTR [eax]
  4245fb:	std    
  4245fc:	add    cl,BYTE PTR [esi]
  4245fe:	cld    
  4245ff:	cmp    al,0x91
  424601:	mov    ds:0x6db1a06a,eax
  424606:	cli    
  424607:	in     al,dx
  424608:	sbb    eax,0x5345f66e
  42460d:	pop    ecx
  42460e:	xor    BYTE PTR cs:0x31586704,ch
  424615:	xor    ah,ah
  424617:	xchg   ebp,eax
  424618:	xchg   edi,eax
  424619:	outs   dx,BYTE PTR ds:[esi]
  42461a:	pop    ss
  42461b:	jge    0x424633
  42461d:	fwait
  42461e:	imul   ebx,DWORD PTR [eax+0x5d],0xb1491c79
  424625:	push   esp
  424626:	mov    ds,WORD PTR [esi+0x2d]
  424629:	adc    al,BYTE PTR [ebx-0x29]
  42462c:	je     0x4245ef
  42462e:	ror    ah,0x99
  424631:	fcmovnbe st,st(2)
  424633:	push   eax
  424634:	fild   DWORD PTR [esi-0x3d]
  424637:	mov    ch,0xb
  424639:	sub    ebp,esp
  42463b:	mov    bh,BYTE PTR [edi+edx*8+0x5e]
  42463f:	xchg   ebx,eax
  424640:	push   cs
  424641:	cmp    eax,0x7c775e98
  424646:	mov    cl,0x58
  424648:	pop    esp
  424649:	dec    edi
  42464a:	sbb    ebp,DWORD PTR [edi+eax*2-0x1f]
  42464e:	out    0xe1,eax
  424650:	jne    0x424636
  424652:	or     DWORD PTR [eax+edi*8+0x3],ebp
  424656:	dec    ecx
  424657:	sbb    edi,DWORD PTR [edx-0x3ef7f87c]
  42465d:	sbb    ah,ch
  42465f:	dec    esi
  424660:	sbb    al,0xe2
  424662:	ret    0xac6e
  424665:	imul   edx,DWORD PTR [ebp-0x45],0x7a
  424669:	xchg   ecx,eax
  42466a:	sbb    BYTE PTR [edx+edi*2-0x55],bh
  42466e:	fild   DWORD PTR [esi]
  424670:	cmp    eax,0x69588bf8
  424675:	jmp    edx
  424677:	icebp  
  424678:	adc    al,dl
  42467a:	popa   
  42467b:	icebp  
  42467c:	shr    BYTE PTR [edx+0x5360a131],1
  424682:	int    0x50
  424684:	inc    edi
  424685:	add    eax,0x2fa6f50e
  42468a:	ret    
  42468b:	aad    0xbf
  42468d:	aaa    
  42468e:	imul   esp,DWORD PTR [edx],0xffffff83
  424691:	fst    DWORD PTR [eax-0xbf146f4]
  424697:	out    dx,al
  424698:	aaa    
  424699:	imul   esi,DWORD PTR [esi-0x27e3051b],0x2a354f9c
  4246a3:	pop    eax
  4246a4:	sub    eax,0x8e3e6ddf
  4246a9:	das    
  4246aa:	add    ah,al
  4246ac:	sub    ah,BYTE PTR [edi+esi*4+0x50]
  4246b0:	xchg   DWORD PTR [esi],eax
  4246b2:	or     BYTE PTR [esi+0x37170387],ch
  4246b8:	fld    QWORD PTR [edx]
  4246ba:	and    dl,ch
  4246bc:	int3   
  4246bd:	addr16 ret 
  4246bf:	(bad)  
  4246c0:	int    0x5a
  4246c2:	addr16 push 0xfffffff0
  4246c5:	mov    ch,0x7
  4246c7:	jmp    0x5c277760
  4246cc:	jbe    0x424663
  4246ce:	cmp    BYTE PTR [edx+0x12],dh
  4246d1:	scas   eax,DWORD PTR es:[edi]
  4246d2:	xchg   DWORD PTR [edi-0x38ffa0f6],esp
  4246d8:	pop    ds
  4246d9:	jmp    0x424692
  4246db:	mov    cl,BYTE PTR ds:0xd6f02e45
  4246e1:	xor    ch,BYTE PTR [esi+0x6fde913f]
  4246e7:	jbe    0x4246be
  4246e9:	sub    BYTE PTR [eax+0x1566b7be],bh
  4246ef:	rcr    DWORD PTR [edx+0x6d],0x46
  4246f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f4:	dec    ebx
  4246f5:	sbb    eax,0x8b0096da
  4246fa:	sbb    eax,0x3153e9b8
  4246ff:	fnstenv [eax]
  424701:	(bad)  
  424702:	push   esp
  424703:	call   0x71d8:0x26fc87d7
  42470a:	push   ecx
  42470b:	mov    cr7,edi
  42470e:	mov    dh,0xfb
  424710:	std    
  424711:	js     0x424792
  424713:	(bad)  
  424714:	addr16 adc ah,cl
  424717:	inc    edx
  424718:	retf   0x75f7
  42471b:	xchg   ebx,eax
  42471c:	pop    esp
  42471d:	mov    dh,0xc0
  42471f:	std    
  424720:	test   DWORD PTR [esi+0xa],ebx
  424723:	cwde   
  424724:	sbb    al,BYTE PTR [edx-0x48]
  424727:	fbld   TBYTE PTR [esp+ebp*1-0x5ad881fb]
  42472e:	cmc    
  42472f:	out    0x17,al
  424731:	xchg   BYTE PTR [edi+0x2b],al
  424734:	fbstp  TBYTE PTR [ecx]
  424737:	scas   eax,DWORD PTR es:[edi]
  424738:	xchg   ecx,eax
  424739:	cld    
  42473a:	js     0x42474d
  42473c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42473d:	pop    esi
  42473e:	and    al,0x59
  424741:	dec    eax
  424742:	sti    
  424743:	test   DWORD PTR [ebx],ebp
  424745:	and    al,0xfd
  424747:	daa    
  424748:	mov    ch,0x20
  42474a:	xor    esp,DWORD PTR [esi-0x1a]
  42474d:	pop    ebx
  42474e:	jmp    0x913f:0x658ef600
  424755:	xchg   BYTE PTR [ecx+0x2b6d6ae6],al
  42475b:	or     BYTE PTR [ecx],cl
  42475d:	std    
  42475e:	xchg   ecx,eax
  42475f:	xor    eax,0x58d58451
  424764:	outs   dx,BYTE PTR ds:[esi]
  424765:	mov    ch,0x1e
  424767:	sbb    BYTE PTR es:[ecx+0x15],ah
  42476b:	aam    0x9c
  42476d:	xchg   ecx,eax
  42476e:	addr16 jmp 0x424748
  424771:	mov    esp,0x8727ce88
  424776:	pop    edi
  424777:	out    0x89,eax
  424779:	scas   eax,DWORD PTR es:[edi]
  42477a:	push   es
  42477b:	mov    ebx,0x10864290
  424780:	push   edi
  424781:	mov    esp,0xe9f93dbd
  424786:	mov    cl,0x36
  424788:	int3   
  424789:	mov    al,0x95
  42478b:	enter  0x6a71,0x10
  42478f:	fsub   st(4),st
  424791:	adc    ebp,ecx
  424793:	xchg   esp,eax
  424794:	sahf   
  424795:	jl     0x42471b
  424797:	add    bh,al
  424799:	mov    dh,0x3d
  42479b:	xchg   DWORD PTR [eax],esp
  42479d:	arpl   WORD PTR [edx+0x17b69607],bx
  4247a3:	scas   eax,DWORD PTR es:[edi]
  4247a4:	push   ecx
  4247a5:	popf   
  4247a6:	pop    ss
  4247a7:	nop
  4247a8:	icebp  
  4247a9:	xor    BYTE PTR [eax-0x7b9f3d1d],bl
  4247af:	sti    
  4247b0:	bound  ebp,QWORD PTR [esi-0x6f]
  4247b3:	jge    0x4247f2
  4247b5:	rcl    BYTE PTR [edi],1
  4247b7:	or     ah,BYTE PTR [esi-0x17]
  4247ba:	mov    dl,0x5a
  4247bc:	xlat   BYTE PTR ds:[ebx]
  4247bd:	(bad)  
  4247be:	xor    ebp,DWORD PTR [edx+edi*2-0x4a6d3681]
  4247c5:	inc    edx
  4247c6:	in     eax,0xd
  4247c8:	mov    ds:0x2fe3d16f,al
  4247cd:	lods   eax,DWORD PTR ds:[esi]
  4247ce:	pop    ds
  4247cf:	mov    cl,al
  4247d1:	jmp    0x424770
  4247d3:	out    dx,eax
  4247d4:	push   cs
  4247d5:	xor    al,0xbe
  4247d7:	xor    al,0xd1
  4247d9:	push   0x40
  4247db:	inc    edi
  4247dc:	push   edi
  4247dd:	inc    esi
  4247de:	jg     0x424772
  4247e0:	mov    edx,0x380b2b16
  4247e5:	jnp    0x424803
  4247e7:	sbb    DWORD PTR [eax+edx*2+0x70],0xb82469c
  4247ef:	pop    ss
  4247f0:	dec    edi
  4247f1:	call   0x476d2978
  4247f6:	fsub   QWORD PTR [edi]
  4247f8:	enter  0x505c,0xc7
  4247fc:	pop    ds
  4247fd:	and    BYTE PTR [ebx+edi*4-0x5c1405bd],dl
  424804:	cli    
  424805:	mov    dh,0xdd
  424807:	scas   al,BYTE PTR es:[edi]
  424808:	jmp    0x4247f7
  42480a:	adc    eax,0x887e72f0
  42480f:	nop
  424810:	in     al,0x55
  424812:	inc    ebp
  424813:	and    DWORD PTR [ecx-0x7b],edi
  424816:	adc    al,BYTE PTR [eax+0x751a62a1]
  42481c:	push   ecx
  42481d:	xadd   bh,dl
  424820:	call   0xe5cd:0xe10fee95
  424827:	call   0x94f0ef68
  42482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42482d:	std    
  42482e:	pop    edi
  42482f:	shl    esi,cl
  424831:	xchg   ebp,eax
  424832:	outs   dx,BYTE PTR ds:[esi]
  424833:	pop    es
  424834:	clc    
  424835:	add    bl,BYTE PTR [eax+0x6a]
  424838:	jno    0x424813
  42483a:	or     al,0x36
  42483c:	pop    ebp
  42483d:	ins    DWORD PTR es:[edi],dx
  42483e:	loopne 0x4247c6
  424840:	sub    esi,DWORD PTR [edi-0xa271a5e]
  424846:	or     al,0xfe
  424848:	stc    
  424849:	pop    edx
  42484a:	aad    0xab
  42484c:	mov    al,0x26
  42484e:	adc    eax,0x4958c840
  424853:	rcr    BYTE PTR [ecx+esi*8],0xa4
  424857:	xchg   esi,eax
  424858:	mov    ch,0xdf
  42485a:	ret    0x27fc
  42485d:	aas    
  42485e:	adc    bh,BYTE PTR [edi+0x41f394f]
  424864:	(bad)  
  424866:	stc    
  424867:	sbb    ah,cl
  424869:	xor    al,0x43
  42486b:	test   al,0x64
  42486d:	bound  ecx,QWORD PTR [eax-0x45]
  424870:	in     al,0x1f
  424872:	call   0xfaa8371
  424877:	mov    ah,0x80
  424879:	rcl    edi,cl
  42487b:	mov    ah,0x55
  42487d:	int3   
  42487e:	jno    0x42487e
  424880:	rcl    DWORD PTR [edi],cl
  424882:	and    ebp,DWORD PTR [edi+eax*8]
  424885:	hlt    
  424886:	mov    eax,ds:0x672c1f92
  42488b:	in     al,dx
  42488c:	or     edi,DWORD PTR [ebx]
  42488e:	xor    al,0x7d
  424890:	jecxz  0x424890
  424892:	jle    0x424866
  424894:	pop    ecx
  424895:	cmp    bh,BYTE PTR ds:0x30fc3199
  42489b:	mov    bh,BYTE PTR [ebp-0x70]
  42489e:	sbb    BYTE PTR [esi],0xf8
  4248a1:	mov    cl,0xe
  4248a3:	mov    cl,0x5c
  4248a5:	into   
  4248a6:	mov    edi,0x7c429d84
  4248ab:	or     BYTE PTR [esi+0x5ed6fee8],ah
  4248b1:	arpl   WORD PTR [esi],dx
  4248b3:	cld    
  4248b4:	pushf  
  4248b5:	mov    edi,0x86782c4f
  4248ba:	dec    ebp
  4248bb:	jbe    0x42484f
  4248bd:	cmp    BYTE PTR [ebx+eiz*2+0x37],dh
  4248c1:	xchg   edi,eax
  4248c2:	(bad)  
  4248c3:	fmulp  st(4),st
  4248c5:	scas   al,BYTE PTR es:[edi]
  4248c6:	cli    
  4248c7:	fist   DWORD PTR [esi-0x61]
  4248ca:	ja     0x424889
  4248cc:	mov    ebp,0x2d3fe5ae
  4248d1:	sub    DWORD PTR [ebx-0x50f57c6e],esp
  4248d7:	push   ecx
  4248d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248d9:	repz add DWORD PTR [edi-0x33c62009],edx
  4248e0:	fs xor dh,al
  4248e3:	jmp    0xfafb:0x9478e306
  4248ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248eb:	std    
  4248ec:	pop    ecx
  4248ed:	xchg   esp,eax
  4248ee:	sub    dl,BYTE PTR [ebp-0x451685aa]
  4248f4:	stos   DWORD PTR es:[edi],eax
  4248f5:	mov    BYTE PTR [ebp-0x1be9253f],dl
  4248fb:	xrelease mov DWORD PTR [ebp+0x55],eax
  4248ff:	xor    ebp,DWORD PTR ds:0x6f9071d9
  424905:	std    
  424906:	or     eax,0xc61547c8
  42490b:	add    BYTE PTR [ebx+0x5d30ea48],cl
  424911:	fsubr  DWORD PTR [ebp+0x2168b35f]
  424917:	repnz sbb DWORD PTR [ebx-0x5165b832],esi
  42491e:	jmp    0x42499b
  424920:	shl    ch,1
  424922:	and    BYTE PTR [ebx+0x5d],ch
  424925:	les    esp,FWORD PTR [ebx+esi*1+0x63]
  424929:	imul   eax,DWORD PTR [edi+edi*1],0xffffff87
  42492d:	lahf   
  42492e:	loop   0x4248d1
  424930:	ret    
  424931:	rcl    BYTE PTR [ebx],cl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	in     al,dx
  42493f:	xor    al,cl
  424941:	(bad)  
  424942:	stc    
  424943:	ret    0x1
  424946:	clc    
  424947:	add    al,0x0
  424949:	add    BYTE PTR [ebp-0x1397273e],ah
  42494f:	pandn  mm1,mm6
  424952:	scas   al,BYTE PTR es:[edi]
  424953:	cmp    al,0xb1
  424955:	cmp    ebp,ecx
  424957:	inc    edi
  424958:	pop    edx
  424959:	fcmovu st,st(0)
  42495b:	push   0x20
  42495d:	sbb    esp,DWORD PTR [ebx+0x62]
  424960:	pavgb  mm6,QWORD PTR [edi+0x4d38a6db]
  424967:	mov    dl,0xa7
  424969:	jb     0x424920
  42496b:	popf   
  42496c:	loopne 0x424949
  42496e:	lods   al,BYTE PTR ds:[esi]
  42496f:	sahf   
  424970:	outs   dx,DWORD PTR ds:[esi]
  424971:	(bad)  
  424972:	fdiv   DWORD PTR [ecx+edi*2]
  424975:	push   cs
  424976:	sar    DWORD PTR [eax+ecx*1-0x65],0xe8
  42497b:	and    al,0xfd
  42497d:	and    eax,0xc43240fe
  424982:	mov    cl,0x46
  424984:	sub    al,0x9e
  424986:	(bad)  
  424987:	mov    ecx,0x9dc0998
  42498c:	js     0x4249a4
  42498e:	adc    al,0x75
  424991:	inc    esp
  424992:	adc    DWORD PTR [ecx+0x5da64935],ebx
  424998:	ins    BYTE PTR es:[edi],dx
  424999:	dec    ebp
  42499a:	pop    edi
  42499b:	and    al,0x4b
  42499d:	ret    0x8b0a
  4249a0:	test   al,0xbc
  4249a2:	sbb    BYTE PTR [eax+0x422629ac],dl
  4249a8:	data16 jb 0x4249d8
  4249ab:	enter  0x11f8,0xdc
  4249af:	sub    dh,0xe1
  4249b2:	neg    DWORD PTR [ecx-0x76]
  4249b5:	add    bl,cl
  4249b7:	in     eax,0x8b
  4249b9:	or     al,0xbe
  4249bb:	mov    eax,0x467a747c
  4249c0:	or     DWORD PTR [ebx+0x711ba1ef],0xffffffaf
  4249c7:	or     ah,BYTE PTR [eax+0x41]
  4249ca:	add    cl,bl
  4249cc:	inc    eax
  4249cd:	push   ss
  4249ce:	test   bl,al
  4249d0:	mov    eax,0x51ec6917
  4249d5:	pushf  
  4249d6:	jmp    0x7d5bf5f5
  4249db:	and    eax,DWORD PTR [ecx+0x5f]
  4249de:	jo     0x424a0d
  4249e0:	adc    BYTE PTR [ebx+ebp*1-0x7f],al
  4249e4:	(bad)  
  4249e5:	out    0xb8,eax
  4249e7:	in     eax,0x75
  4249e9:	sbb    al,0xb0
  4249eb:	jno    0x4249fa
  4249ed:	dec    ebx
  4249ee:	adc    BYTE PTR [ecx],bh
  4249f0:	mov    ebx,0x8454bd3c
  4249f5:	pop    edi
  4249f6:	lds    ebp,FWORD PTR [edi]
  4249f8:	jmp    0x4249d3
  4249fa:	nop
  4249fb:	jnp    0x4249de
  4249fd:	sub    edi,DWORD PTR [eax+esi*2-0x36]
  424a01:	mov    cl,BYTE PTR ds:0xd9a4bed5
  424a07:	into   
  424a08:	mov    ebx,esp
  424a0a:	xor    ch,cl
  424a0c:	add    eax,0xfc3bd927
  424a11:	mov    bh,0x4
  424a13:	and    DWORD PTR [ebx],0x8
  424a16:	xchg   ecx,eax
  424a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a18:	fwait
  424a19:	mov    dl,0x31
  424a1b:	(bad)
  424a1f:	jae    0x424a75
  424a21:	jo     0x4249f5
  424a23:	sub    eax,0x1fd1b0cd
  424a28:	cmp    cl,dl
  424a2a:	inc    esi
  424a2b:	xchg   ecx,eax
  424a2c:	add    eax,0xaa71fb39
  424a31:	pop    ebp
  424a32:	sbb    esp,DWORD PTR [eax-0x2f]
  424a35:	sub    al,0x1b
  424a37:	add    DWORD PTR [esi-0x20],eax
  424a3a:	ror    DWORD PTR ds:0xcefcf013,cl
  424a40:	pop    ss
  424a41:	ss jecxz 0x424aae
  424a44:	mov    ds:0xaa14fda4,eax
  424a49:	lock cmp al,0x44
  424a4c:	call   0xd037:0xb3fc087e
  424a53:	xor    eax,0xf35e4eee
  424a58:	or     eax,0x43b2dc8b
  424a5d:	jp     0x424a8b
  424a5f:	and    eax,0x258249e3
  424a64:	fcmovbe st,st(7)
  424a66:	cmp    ebp,eax
  424a68:	or     BYTE PTR [ecx],0xee
  424a6b:	test   DWORD PTR [ecx],ebx
  424a6d:	ret    
  424a6e:	adc    BYTE PTR [eax],0x2e
  424a71:	mov    ds:0x6a56778e,eax
  424a76:	mov    eax,0x8ac2cc14
  424a7b:	inc    eax
  424a7c:	mov    bh,0xd3
  424a7e:	cld    
  424a7f:	leave  
  424a80:	dec    ecx
  424a81:	xchg   BYTE PTR [edx-0x36c38780],bl
  424a87:	pcmpeqw mm7,QWORD PTR [edx-0x1]
  424a8b:	call   0x8f53:0x68899e00
  424a92:	sub    ecx,DWORD PTR [ebx+0x6d]
  424a95:	add    eax,0x9311e508
  424a9a:	sub    eax,0x2e35ab5
  424a9f:	je     0x424b03
  424aa1:	aas    
  424aa2:	cmp    BYTE PTR [ebp-0x3eb9bd96],dl
  424aa8:	js     0x424a6c
  424aaa:	in     al,dx
  424aab:	rcl    BYTE PTR [ebp+esi*2-0x20ff4049],1
  424ab2:	mov    ah,0xd9
  424ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ab5:	ror    ch,0xb9
  424ab8:	retf   0xfeb6
  424abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424abc:	in     al,dx
  424abd:	loop   0x424b1b
  424abf:	or     al,0x25
  424ac1:	lods   eax,DWORD PTR ds:[esi]
  424ac2:	fwait
  424ac3:	sahf   
  424ac4:	push   ds
  424ac5:	xchg   DWORD PTR [eax+edi*1+0x30],edx
  424ac9:	or     ecx,DWORD PTR [eax-0x54e41014]
  424acf:	les    esp,FWORD PTR [ecx]
  424ad1:	jmp    0x424a9d
  424ad3:	jno    0x424aa0
  424ad5:	xchg   edx,eax
  424ad6:	shl    BYTE PTR [edi-0x1e4b2d9d],0xae
  424add:	xlat   BYTE PTR ds:[ebx]
  424ade:	ret    0xf288
  424ae1:	(bad)  
  424ae2:	js     0x424aec
  424ae4:	push   ecx
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	adc    DWORD PTR [ecx+0xbff8302],0x6
  424aed:	sbb    ebx,DWORD PTR [ebx-0x22]
  424af0:	add    DWORD PTR [ecx-0x3a],esi
  424af3:	cdq    
  424af4:	dec    ebx
  424af5:	mov    ebx,0xa886544d
  424afa:	pusha  
  424afb:	dec    ebp
  424afc:	test   al,0x98
  424afe:	repnz scas eax,DWORD PTR es:[edi]
  424b00:	jmp    0xca0f:0xab866330
  424b07:	imul   edi,DWORD PTR [ebp+0x64],0xffffff96
  424b0b:	retf   
  424b0c:	leave  
  424b0d:	xor    dh,BYTE PTR [ecx-0x52]
  424b10:	out    dx,al
  424b11:	cmp    bl,BYTE PTR [esi]
  424b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b14:	push   ebp
  424b15:	test   eax,0x62029e79
  424b1a:	pop    es
  424b1b:	sbb    edi,DWORD PTR [ebx+0x26]
  424b1e:	or     DWORD PTR [edi-0x3392a34d],eax
  424b24:	paddb  mm5,QWORD PTR [edx-0x6d]
  424b28:	neg    BYTE PTR [eax]
  424b2a:	sub    bh,BYTE PTR [eax]
  424b2c:	mov    eax,ds:0x8211d4dc
  424b31:	sbb    DWORD PTR [eax],ecx
  424b33:	std    
  424b34:	pop    ebp
  424b35:	add    al,0xd3
  424b37:	call   0xe9ee:0xa1ebd899
  424b3e:	rol    bl,1
  424b40:	mov    dh,0xa3
  424b42:	xor    bh,cl
  424b44:	fisttp WORD PTR [eax-0x3cb35f33]
  424b4a:	clc    
  424b4b:	imul   BYTE PTR [eax]
  424b4d:	pop    esp
  424b4e:	repz in eax,0x87
  424b51:	sub    al,BYTE PTR [ebp-0xb3eb7eb]
  424b57:	lea    ebp,[eax+ebx*1-0x1d4254e7]
  424b5e:	call   0xd9ca930b
  424b63:	out    dx,eax
  424b64:	ds add ebx,0x1cd21d7e
  424b6b:	jmp    0x424b3e
  424b6d:	mov    esi,0xe0170ae
  424b72:	jnp    0x424bc1
  424b74:	stos   BYTE PTR es:[edi],al
  424b75:	(bad)  
  424b77:	loop   0x424b72
  424b79:	push   ecx
  424b7a:	imul   ebx,DWORD PTR [edx+edi*2],0x15
  424b7e:	push   0xf83a3a6f
  424b83:	mov    dh,0xb1
  424b85:	and    ah,al
  424b87:	and    al,0x7a
  424b89:	and    ebp,esp
  424b8b:	xor    DWORD PTR [ebp-0x3fbcdd43],eax
  424b91:	mov    dl,0x9
  424b93:	das    
  424b94:	shl    BYTE PTR [ecx-0x23ec3327],0xf0
  424b9b:	ins    DWORD PTR es:[edi],dx
  424b9c:	mov    al,0x78
  424b9e:	xor    eax,0x3f2e627d
  424ba3:	mul    DWORD PTR [eax-0x51]
  424ba6:	dec    edx
  424ba7:	int    0x40
  424ba9:	cld    
  424baa:	ret    0x8521
  424bad:	aam    0x12
  424baf:	cdq    
  424bb0:	xchg   esp,eax
  424bb1:	hlt    
  424bb2:	cwde   
  424bb3:	(bad)  
  424bb4:	outs   dx,BYTE PTR ds:[esi]
  424bb5:	faddp  st(2),st
  424bb7:	dec    DWORD PTR [ebp-0x4594652c]
  424bbd:	jle    0x424be1
  424bbf:	lock xchg DWORD PTR [esi-0x47],esi
  424bc3:	leave  
  424bc4:	or     dh,0xd6
  424bc7:	push   edx
  424bc8:	pop    eax
  424bc9:	fs push edi
  424bcb:	or     BYTE PTR [ebx+ebx*4+0x0],ah
  424bcf:	push   ebx
  424bd0:	mov    es,WORD PTR [eax-0x6afdcfd1]
  424bd6:	test   BYTE PTR [ecx-0x4a],ch
  424bd9:	push   eax
  424bda:	call   0x23a:0x9ab850c2
  424be1:	rol    DWORD PTR [esi-0x1e05bb21],0xee
  424be8:	daa    
  424be9:	daa    
  424bea:	jb     0x424c35
  424bec:	mov    eax,0xc38d053f
  424bf1:	retf   
  424bf2:	pop    ebx
  424bf3:	lock lds ecx,FWORD PTR [esi]
  424bf6:	shr    DWORD PTR [eax+0x2e],cl
  424bf9:	mov    al,ds:0x799d47b9
  424bfe:	stos   DWORD PTR es:[edi],eax
  424bff:	adc    ch,BYTE PTR [eax-0x26]
  424c02:	jne    0x424c0e
  424c04:	mov    cl,0x29
  424c06:	or     al,0xee
  424c08:	adc    DWORD PTR [eax+0x6592e2c4],edx
  424c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c0f:	cmc    
  424c10:	add    DWORD PTR [ecx-0x63],eax
  424c13:	cmp    al,0xce
  424c15:	inc    edi
  424c16:	add    eax,ecx
  424c18:	or     eax,0x893de8c9
  424c1d:	mov    cl,0xd7
  424c1f:	dec    edx
  424c20:	add    eax,0x4539ad8d
  424c25:	inc    ah
  424c27:	js     0x424c77
  424c29:	pop    edi
  424c2a:	jmp    0xaf7b:0x3854225b
  424c31:	xor    eax,0x1de467e2
  424c36:	outs   dx,DWORD PTR ds:[esi]
  424c37:	inc    ebx
  424c38:	dec    ecx
  424c39:	mov    eax,ds:0x99f9e131
  424c3e:	and    eax,0x334c6eb6
  424c43:	sahf   
  424c44:	pop    ebp
  424c45:	cld    
  424c46:	pop    ds
  424c47:	sub    eax,0xef18a166
  424c4c:	add    al,0xe
  424c4e:	ins    BYTE PTR es:[edi],dx
  424c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c50:	mov    gs,WORD PTR [edi+ebx*2+0x6b2a5888]
  424c57:	(bad)  [edi-0x48220f1d]
  424c5d:	test   edx,esi
  424c5f:	jne    0x424c93
  424c61:	mov    esp,0x5a74f6cb
  424c66:	test   BYTE PTR [edx+0x18],ah
  424c69:	jl     0x424c46
  424c6b:	mov    ds:0xaceb6bb7,eax
  424c70:	lock aam 0xe0
  424c73:	cmp    eax,DWORD PTR [esp+ebx*2]
  424c76:	je     0x424c5a
  424c78:	aas    
  424c79:	ins    BYTE PTR es:[edi],dx
  424c7a:	cli    
  424c7b:	push   0xc56a0eaa
  424c80:	fs call 0x6ddb5efb
  424c86:	dec    esp
  424c87:	jae    0x424ce4
  424c89:	dec    esp
  424c8a:	mov    ebx,0x79bf17cf
  424c8f:	stos   BYTE PTR es:[edi],al
  424c90:	xor    edi,DWORD PTR [ecx]
  424c92:	in     eax,0x57
  424c94:	outs   dx,BYTE PTR ds:[esi]
  424c95:	dec    ebx
  424c96:	fimul  DWORD PTR [ecx]
  424c98:	mov    BYTE PTR [ebx+0x3b1aa2ad],dl
  424c9e:	cmc    
  424c9f:	iret   
  424ca0:	pop    edx
  424ca1:	call   0x8f819a53
  424ca6:	mov    ebx,0x551242d6
  424cab:	or     BYTE PTR [ecx+0x68bf8d9a],0x48
  424cb2:	push   ebp
  424cb3:	xchg   DWORD PTR [ecx+0x4ec2e9d],ebx
  424cb9:	inc    ecx
  424cba:	dec    edi
  424cbb:	scas   eax,DWORD PTR es:[edi]
  424cbc:	pop    ebx
  424cbd:	adc    esi,DWORD PTR [ecx-0x6fcbf69b]
  424cc3:	mov    al,ds:0x7a893525
  424cc8:	jne    0x424c8f
  424cca:	popa   
  424ccb:	pop    ss
  424ccc:	cmp    al,0x89
  424cce:	add    al,BYTE PTR [eax]
  424cd0:	pushf  
  424cd1:	sbb    eax,0xd07075c6
  424cd6:	xor    BYTE PTR [esi-0x2f],ah
  424cd9:	push   esp
  424cda:	add    esi,ebx
  424cdc:	mov    edx,0x3b9a0609
  424ce1:	dec    ebp
  424ce2:	cmp    al,0x6d
  424ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ce5:	lods   al,BYTE PTR ds:[esi]
  424ce6:	jl     0x424c97
  424ce8:	jmp    0x424c6a
  424cea:	push   ebp
  424ceb:	dec    ebp
  424cec:	in     al,0x46
  424cee:	dec    edi
  424cef:	test   eax,0xe955f05e
  424cf4:	fwait
  424cf5:	(bad)  
  424cf6:	fstp   DWORD PTR [edx+edi*2]
  424cf9:	retf   
  424cfa:	test   al,0x85
  424cfc:	jbe    0x424d04
  424cfe:	mov    bx,0xaf60
  424d02:	mov    WORD PTR [ebp-0x41f33f27],?
  424d08:	(bad)  
  424d09:	xchg   ebp,eax
  424d0a:	cmp    al,BYTE PTR [ecx]
  424d0c:	or     eax,0x40690652
  424d11:	sahf   
  424d12:	int    0x40
  424d14:	or     BYTE PTR [eax],cl
  424d16:	jge    0x424cdf
  424d18:	out    dx,eax
  424d19:	fstp   st(2)
  424d1b:	or     eax,0xbf54e04e
  424d20:	jle    0x424d71
  424d22:	pop    es
  424d23:	and    BYTE PTR [eax],cl
  424d25:	mov    dh,0xaa
  424d27:	nop
  424d28:	test   BYTE PTR [esi-0x75],bl
  424d2b:	dec    esp
  424d2c:	out    0xed,al
  424d2e:	je     0x424da5
  424d30:	cld    
  424d31:	add    ecx,DWORD PTR [ecx+0x16]
  424d34:	xlat   BYTE PTR ds:[ebx]
  424d35:	push   esi
  424d36:	(bad)  
  424d37:	sbb    eax,0x91a83dd4
  424d3c:	neg    BYTE PTR [ebx-0x10]
  424d3f:	pop    eax
  424d40:	dec    edi
  424d41:	adc    dh,dl
  424d43:	inc    esi
  424d44:	loop   0x424d6e
  424d46:	cli    
  424d47:	mov    ds:0xee3bc05e,eax
  424d4c:	test   al,0x0
  424d4e:	inc    ecx
  424d4f:	ret    0x8f1
  424d52:	dec    esi
  424d53:	inc    ecx
  424d54:	retf   
  424d55:	cli    
  424d56:	je     0x424d36
  424d58:	ins    DWORD PTR es:[edi],dx
  424d59:	aaa    
  424d5a:	xchg   esp,eax
  424d5b:	mov    bh,0xb8
  424d5d:	clc    
  424d5e:	stos   BYTE PTR es:[edi],al
  424d5f:	sahf   
  424d60:	pop    ecx
  424d61:	inc    esi
  424d62:	push   esp
  424d63:	data16 jae 0x424dae
  424d66:	out    dx,eax
  424d67:	mov    bh,0x5
  424d69:	xchg   esi,eax
  424d6a:	push   ds
  424d6b:	iret   
  424d6c:	shr    DWORD PTR [edx+0x3d],0x49
  424d70:	xlat   BYTE PTR ds:[ebx]
  424d71:	mov    eax,ds:0x53bf728c
  424d76:	inc    esp
  424d77:	pop    ecx
  424d78:	cld    
  424d79:	fadd   QWORD PTR [esi]
  424d7b:	packsswb mm5,QWORD PTR [ebp+0x935182a]
  424d82:	sahf   
  424d83:	mov    eax,DWORD PTR [ecx]
  424d85:	add    cl,BYTE PTR [ebp+0x6a]
  424d88:	imul   edx,DWORD PTR [esi-0x7f],0x3b
  424d8c:	push   eax
  424d8d:	push   0xffffffcc
  424d8f:	mov    eax,0x866fe0bb
  424d94:	jns    0x424d71
  424d96:	clc    
  424d97:	sub    al,0x93
  424d99:	gs iret 
  424d9b:	test   WORD PTR [edx],0x261e
  424da0:	dec    eax
  424da1:	popf   
  424da2:	lods   al,BYTE PTR ds:[esi]
  424da3:	call   0x6272a8a3
  424da8:	pop    ebp
  424da9:	mov    bh,0x33
  424dab:	dec    ebx
  424dac:	push   cs
  424dad:	cmp    al,0xb
  424daf:	inc    edx
  424db0:	pop    ds
  424db1:	scas   al,BYTE PTR es:[edi]
  424db2:	sti    
  424db3:	int    0x62
  424db5:	xor    DWORD PTR [edx-0x5c],eax
  424db8:	loop   0x424e1a
  424dba:	hlt    
  424dbb:	aam    0x3d
  424dbd:	push   ebx
  424dbe:	aam    0xb7
  424dc0:	xchg   BYTE PTR cs:[ecx],dh
  424dc3:	sub    BYTE PTR [ebp-0x35],0x7b
  424dc7:	mov    ch,0xcd
  424dc9:	adc    eax,0xf472c414
  424dce:	cmp    BYTE PTR [edi],0x66
  424dd1:	xor    BYTE PTR [edx],0x16
  424dd4:	js     0x424d72
  424dd6:	inc    eax
  424dd7:	add    BYTE PTR ds:0x6a8971a2,ah
  424ddd:	push   ebp
  424dde:	sub    eax,0x9cc8be87
  424de3:	in     al,dx
  424de4:	pop    ebp
  424de5:	leave  
  424de6:	adc    ebx,ecx
  424de8:	adc    bh,BYTE PTR [esi+0x62]
  424deb:	dec    ecx
  424dec:	fst    st(4)
  424dee:	sub    bl,BYTE PTR [esi]
  424df0:	pop    ss
  424df1:	add    al,0xdc
  424df3:	test   eax,esi
  424df5:	push   ebp
  424df6:	retf   0xa6d9
  424df9:	mov    ds:0xbdb864c3,eax
  424dfe:	dec    esi
  424dff:	mov    BYTE PTR ds:0x1c2dab0e,bl
  424e05:	aas    
  424e06:	add    esp,DWORD PTR [esi]
  424e08:	sub    ebx,DWORD PTR ds:0x5cda6c4
  424e0e:	push   ecx
  424e0f:	inc    edi
  424e10:	mov    ebx,0x40fc1dd
  424e15:	inc    esi
  424e16:	and    ah,bl
  424e18:	inc    ebx
  424e19:	pop    ss
  424e1a:	aaa    
  424e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e1c:	mov    ?,eax
  424e1e:	and    esi,edi
  424e20:	outs   dx,BYTE PTR ds:[esi]
  424e21:	mov    ebx,0x742b84bc
  424e26:	dec    esp
  424e27:	dec    edx
  424e28:	or     ch,bh
  424e2a:	adc    ebx,ebx
  424e2c:	pop    ds
  424e2d:	aam    0x7e
  424e2f:	js     0x424e9d
  424e31:	inc    esp
  424e32:	push   ebp
  424e33:	es inc eax
  424e35:	jnp    0x424dd6
  424e37:	or     ebp,DWORD PTR [edx]
  424e39:	push   ss
  424e3a:	in     eax,0x22
  424e3c:	data16 (bad) 
  424e3f:	test   al,0x45
  424e41:	mov    cl,0x80
  424e43:	inc    esp
  424e44:	dec    edi
  424e45:	pop    es
  424e46:	iret   
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ebx,edx
  424e4f:	mov    dl,0xb3
  424e51:	div    cl
  424e53:	mov    DWORD PTR [ecx],0x4f800
  424e59:	add    cl,bl
  424e5b:	xchg   DWORD PTR [esi+esi*2-0xf340518],esp
  424e62:	les    ecx,FWORD PTR [esp+ecx*1]
  424e65:	mov    dl,0x61
  424e67:	xor    al,0x6
  424e69:	add    DWORD PTR ds:0xc4ce4d1d,0x309f14a
  424e73:	scas   al,BYTE PTR es:[edi]
  424e74:	les    edi,FWORD PTR [eax]
  424e76:	dec    esi
  424e77:	retf   0x3074
  424e7a:	mov    WORD PTR [ecx+eiz*2],fs
  424e7d:	adc    ebx,DWORD PTR [eax]
  424e7f:	sbb    al,0x30
  424e81:	sar    BYTE PTR [ecx+0x4d51c9de],1
  424e87:	xor    dh,BYTE PTR [esi-0x67269037]
  424e8d:	and    cx,WORD PTR [edx-0x216601e3]
  424e94:	xor    DWORD PTR [ecx+esi*1-0x4e],ebp
  424e98:	data16 jg 0x424eea
  424e9b:	inc    ebp
  424e9c:	mov    dl,dh
  424e9e:	call   0x1c48d9d7
  424ea3:	xchg   ecx,esi
  424ea5:	xchg   edx,eax
  424ea6:	and    eax,0xb2b02400
  424eab:	repz push esi
  424ead:	retf   0x82fc
  424eb0:	stos   DWORD PTR es:[edi],eax
  424eb1:	imul   eax,ecx,0x27c030a2
  424eb7:	xchg   dl,bh
  424eb9:	fiadd  DWORD PTR [edx]
  424ebb:	daa    
  424ebc:	popa   
  424ebd:	jb     0x424ed5
  424ebf:	call   0xf7b4:0x6c9b4d61
  424ec6:	pop    esi
  424ec7:	fisttp QWORD PTR [eax+0x3a5a793d]
  424ecd:	adc    dh,BYTE PTR [ebx+0x6f]
  424ed0:	in     eax,dx
  424ed1:	gs das 
  424ed3:	sbb    esp,ebp
  424ed5:	cmc    
  424ed6:	nop
  424ed7:	jbe    0x424e7f
  424ed9:	gs push ss
  424edb:	sub    edx,DWORD PTR [esi+0xd]
  424ede:	adc    cl,BYTE PTR [edi]
  424ee0:	mov    esp,0xd2ade80f
  424ee5:	bound  esp,QWORD PTR [esi-0x53]
  424ee8:	push   ds
  424ee9:	mov    al,0xc2
  424eeb:	push   edi
  424eec:	lea    esi,[ebp-0x52]
  424eef:	mov    eax,ds:0x86aef6c3
  424ef4:	adc    bl,BYTE PTR [esi+0x74b1507e]
  424efa:	bound  edx,QWORD PTR [ecx+0x2cdc1748]
  424f00:	push   edx
  424f01:	mov    ds:0x985b5fc8,eax
  424f06:	js     0x424ea0
  424f08:	pop    edi
  424f09:	cmp    ch,bl
  424f0b:	es js  0x424f25
  424f0e:	pop    es
  424f0f:	imul   ecx,DWORD PTR [eax],0xfbb7f8a4
  424f15:	test   BYTE PTR [edx],0xb8
  424f18:	mov    ebp,DWORD PTR [ebp-0x698dd884]
  424f1e:	sbb    ecx,DWORD PTR [ecx-0x6e]
  424f21:	call   0x12da9163
  424f26:	xchg   BYTE PTR [ecx-0x5623051],al
  424f2c:	or     al,0x91
  424f2e:	dec    ecx
  424f2f:	cmp    BYTE PTR [ecx-0x54],bl
  424f32:	add    DWORD PTR ds:0xfde2fc11,ebx
  424f38:	mov    ds:0xeb47cc3e,eax
  424f3d:	scas   al,BYTE PTR es:[edi]
  424f3e:	loope  0x424ec3
  424f40:	test   BYTE PTR [edi+0x24cac1e4],cl
  424f46:	add    eax,0xbce379ea
  424f4b:	dec    esp
  424f4c:	sub    eax,0x8a0c30d3
  424f51:	sysret 
  424f53:	ret    
  424f54:	sbb    ebp,esi
  424f56:	test   eax,0xf7b4a0a3
  424f5b:	test   DWORD PTR ds:0x5e18e63e,edi
  424f61:	lods   al,BYTE PTR ds:[esi]
  424f62:	fnstenv [eax-0x29065f75]
  424f68:	retf   
  424f69:	and    eax,0x21930bc5
  424f6e:	call   0x3a6d:0xcf863d49
  424f75:	mov    eax,0x9022914b
  424f7a:	js     0x424fd6
  424f7c:	inc    edx
  424f7d:	mov    bl,0x93
  424f7f:	mov    DWORD PTR [esi],ecx
  424f81:	xlat   BYTE PTR ds:[ebx]
  424f82:	lods   al,BYTE PTR ds:[esi]
  424f83:	xor    eax,0xcd3fb7f3
  424f88:	fld1   
  424f8a:	xchg   cl,bl
  424f8c:	out    dx,al
  424f8d:	mov    al,ds:0x291ee99b
  424f92:	lahf   
  424f93:	adc    DWORD PTR [edx+0x5fbab2aa],ebp
  424f99:	sbb    BYTE PTR [eax+esi*4-0x38],ch
  424f9d:	mov    ah,0xbe
  424f9f:	jbe    0x424ffe
  424fa1:	push   ds
  424fa2:	pop    eax
  424fa3:	or     al,0x52
  424fa5:	mov    ds:0x13b838e4,eax
  424faa:	sar    BYTE PTR [ebp-0xc5160ba],cl
  424fb0:	jg     0x424fbd
  424fb2:	rcl    DWORD PTR [edx+0x2e],cl
  424fb5:	ret    
  424fb6:	test   BYTE PTR [esi-0x31],ah
  424fb9:	scas   al,BYTE PTR es:[edi]
  424fba:	xor    ah,BYTE PTR [ecx+0x5200721d]
  424fc0:	(bad)  [edi-0x4a]
  424fc3:	inc    ebp
  424fc4:	push   DWORD PTR [esi+0x5e18c568]
  424fca:	pop    edx
  424fcb:	stc    
  424fcc:	mov    esi,0x80c95dfb
  424fd1:	mov    fs,esi
  424fd3:	xchg   esi,esp
  424fd5:	xor    eax,0x703a75c8
  424fda:	pop    edi
  424fdb:	and    eax,0x69006ee8
  424fe0:	inc    BYTE PTR [edx+0x1b2aeb67]
  424fe6:	dec    ecx
  424fe7:	out    0x53,eax
  424fe9:	test   eax,0xdd404f2f
  424fee:	and    DWORD PTR ds:0x5e2da299,edx
  424ff4:	sub    edi,DWORD PTR [ebp+ebx*1+0x69967411]
  424ffb:	(bad)  
  424ffc:	mov    edx,0x24f07ded
  425001:	sub    ebp,DWORD PTR [eax+ecx*1-0x39]
  425005:	jle    0x42507f
  425007:	imul   BYTE PTR [esi+edi*1+0x69]
  42500b:	cwde   
  42500c:	xor    eax,0xb06d8ec9
  425011:	adc    BYTE PTR [ebp-0x2c84bff3],bh
  425017:	mov    esi,0x63976bca
  42501c:	sub    DWORD PTR [ecx-0x7f],0x13104fe0
  425023:	cmc    
  425024:	hlt    
  425025:	pop    eax
  425026:	jne    0x42500d
  425028:	xchg   ebp,eax
  425029:	cli    
  42502a:	lea    ecx,[ecx+edi*1+0x16151406]
  425031:	and    dh,bh
  425033:	das    
  425034:	frndint 
  425036:	test   BYTE PTR [edi-0x1b],al
  425039:	scas   al,BYTE PTR es:[edi]
  42503a:	fbld   TBYTE PTR [ebp+0x648aa3eb]
  425040:	jno    0x425072
  425042:	sbb    DWORD PTR [ebp-0x3],ebp
  425045:	enter  0xac5,0xfd
  425049:	mov    ds:0xf25679b,eax
  42504e:	fcmovb st,st(4)
  425050:	cmp    BYTE PTR [esi+0x5c],al
  425053:	jno    0x4250a5
  425055:	or     DWORD PTR [ecx],ebx
  425057:	xchg   edi,eax
  425058:	idiv   esi
  42505a:	add    bl,BYTE PTR [ebx-0x154855c5]
  425060:	stc    
  425061:	sti    
  425062:	addr16 jg 0x42504e
  425065:	mov    ?,WORD PTR ds:[eax]
  425068:	out    dx,al
  425069:	cld    
  42506a:	inc    eax
  42506b:	inc    esp
  42506c:	cmp    al,0x2e
  42506e:	sbb    eax,0xc0f72be0
  425073:	iret   
  425074:	mov    ebp,ebx
  425076:	xchg   edi,eax
  425077:	sub    esi,DWORD PTR [ebx-0x7e7cbd2f]
  42507d:	inc    ebp
  42507e:	jno    0x4250a0
  425080:	cmp    edi,DWORD PTR [edi+0x7e]
  425083:	sti    
  425084:	ret    
  425085:	adc    DWORD PTR [edx],esi
  425087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425088:	test   DWORD PTR [eax],edi
  42508a:	push   es
  42508b:	(bad)  
  42508c:	fiadd  WORD PTR [edx-0x3b01c5e0]
  425092:	mov    esp,esi
  425094:	popf   
  425095:	xchg   ebp,eax
  425096:	jne    0x42509b
  425098:	fst    DWORD PTR [ebx]
  42509a:	loop   0x4250a1
  42509c:	fst    DWORD PTR [eax]
  42509e:	out    0x43,al
  4250a0:	fild   DWORD PTR [esi]
  4250a2:	adc    ebp,DWORD PTR [eax+0x7a]
  4250a5:	push   ds
  4250a6:	sbb    al,0xca
  4250a8:	mov    edi,0xa968c16d
  4250ad:	jge    0x425046
  4250af:	pop    ecx
  4250b0:	pop    eax
  4250b1:	sub    DWORD PTR [ebx-0x12c033f6],ebp
  4250b7:	jle    0x4250d9
  4250b9:	adc    al,0x10
  4250bb:	test   eax,0xd6ddab07
  4250c0:	xchg   esi,eax
  4250c1:	test   DWORD PTR [esi],eax
  4250c3:	pop    ebx
  4250c4:	jae    0x42509e
  4250c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c7:	sub    al,0x9a
  4250c9:	inc    esp
  4250ca:	pop    es
  4250cb:	or     DWORD PTR [edx+0x106acab],ecx
  4250d1:	repnz sub eax,0x5990ff3e
  4250d7:	out    dx,eax
  4250d8:	jbe    0x425074
  4250da:	out    0x2f,al
  4250dc:	das    
  4250dd:	pop    ds
  4250de:	adc    bh,BYTE PTR ds:0x60851106
  4250e4:	jnp    0x4250ca
  4250e6:	sahf   
  4250e7:	mov    ?,WORD PTR [edx]
  4250e9:	retf   0xc250
  4250ec:	dec    ebx
  4250ed:	sub    eax,0x7214b604
  4250f2:	pop    ebx
  4250f3:	les    ebx,FWORD PTR [esi+0x5e]
  4250f6:	and    ch,BYTE PTR [eax]
  4250f8:	loop   0x42508e
  4250fa:	(bad)  
  4250fb:	mov    ch,0x30
  4250fd:	mov    ebx,0xe6fc0ddb
  425102:	in     eax,0x34
  425104:	push   0x6d
  425106:	mov    DWORD PTR [eax],edi
  425108:	inc    esp
  425109:	pop    ecx
  42510a:	iret   
  42510b:	jne    0x4250a2
  42510d:	add    eax,0x3a595320
  425112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425113:	mov    ah,0x61
  425115:	dec    ebx
  425116:	jb     0x4250f0
  425118:	sub    al,ah
  42511a:	ret    
  42511b:	ss push ds
  42511d:	push   esi
  42511e:	addr16 pop esp
  425120:	(bad)  
  425121:	out    dx,eax
  425122:	test   BYTE PTR [esi],ah
  425124:	aam    0xaa
  425126:	call   FWORD PTR [ebx-0x61b25d82]
  42512c:	jo     0x42516b
  42512e:	fdivr  DWORD PTR [edi+0x79]
  425131:	push   0x49
  425133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425134:	aas    
  425135:	aam    0x89
  425137:	cld    
  425138:	cdq    
  425139:	pop    ebp
  42513a:	loop   0x4250e4
  42513c:	and    eax,0x3d64f39f
  425141:	jb     0x425135
  425143:	std    
  425144:	daa    
  425145:	fstp   TBYTE PTR [edx+ebx*4+0x67]
  425149:	call   0x9f248352
  42514e:	sub    eax,DWORD PTR [eax+eiz*2-0x62]
  425152:	jle    0x425186
  425154:	inc    edi
  425155:	push   es
  425156:	push   0x2e
  425158:	jnp    0x425146
  42515a:	mov    BYTE PTR [edi],dh
  42515c:	(bad)  
  42515d:	sbb    DWORD PTR [eax+0x21b240dd],esi
  425163:	cs clc 
  425165:	mov    ds:0x8d468bbb,eax
  42516a:	add    edi,DWORD PTR [eax]
  42516c:	aam    0x19
  42516e:	xchg   esp,eax
  42516f:	int3   
  425170:	cmp    al,BYTE PTR fs:[ebp+0x18]
  425174:	push   cs
  425175:	push   edx
  425176:	cld    
  425177:	das    
  425178:	and    ah,al
  42517a:	cbw    
  42517c:	outs   dx,BYTE PTR ds:[esi]
  42517d:	mov    al,ds:0x54921093
  425182:	out    0xba,al
  425184:	repz pop ebp
  425186:	jle    0x4251a5
  425188:	mov    al,ds:0xd393e490
  42518d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42518e:	push   eax
  42518f:	pusha  
  425190:	ja     0x42511a
  425192:	inc    eax
  425193:	call   0x837b3f5b
  425198:	add    al,0x21
  42519a:	or     BYTE PTR [edx-0xc],0xb7
  42519e:	(bad)  [eax+0x4ea91fe3]
  4251a4:	cmp    DWORD PTR [edi+0x63fc7294],0xfe100ef2
  4251ae:	test   BYTE PTR [ecx-0x27d2882],ah
  4251b4:	pop    ebx
  4251b5:	pop    ecx
  4251b6:	popa   
  4251b7:	push   cs
  4251b8:	arpl   si,ax
  4251ba:	mov    ch,0xc4
  4251bc:	mov    esi,0x64f1d8b3
  4251c1:	jmp    0x425233
  4251c3:	jbe    0x42520e
  4251c5:	lock cli 
  4251c7:	mov    ch,bl
  4251c9:	stc    
  4251ca:	bound  edx,QWORD PTR [ebp-0x5794e1e8]
  4251d0:	dec    edx
  4251d1:	shl    ah,0xba
  4251d4:	mov    WORD PTR [ecx+0x64],ds
  4251d7:	and    edi,DWORD PTR [ecx+0x11]
  4251da:	fbld   TBYTE PTR [ebx+0x39]
  4251dd:	xor    edi,DWORD PTR [ebx-0x36]
  4251e0:	inc    ebp
  4251e1:	outs   dx,DWORD PTR ds:[esi]
  4251e2:	mov    al,0x65
  4251e4:	push   0x5464b15e
  4251e9:	call   0x59e28edc
  4251ee:	nop
  4251ef:	sbb    cl,bl
  4251f1:	ja     0x42518e
  4251f3:	pusha  
  4251f4:	das    
  4251f5:	ficomp WORD PTR [edx+0x11]
  4251f8:	xor    DWORD PTR [edi+0x1da8311],esi
  4251fe:	pop    edi
  4251ff:	xor    eax,DWORD PTR [edx+0x60]
  425202:	cld    
  425203:	jns    0x4251b8
  425205:	std    
  425206:	sbb    ebx,DWORD PTR [ecx-0x7e]
  425209:	add    eax,0xc28d47e0
  42520e:	ret    
  42520f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425210:	or     ah,BYTE PTR [ebx]
  425212:	sbb    ecx,edx
  425214:	fs jne 0x425235
  425217:	add    bh,BYTE PTR [edx-0x1392bdea]
  42521d:	enter  0xa604,0xb3
  425221:	xor    bl,BYTE PTR [esi+ebx*4+0x72c1fd0]
  425228:	dec    esi
  425229:	fnstsw WORD PTR [ecx]
  42522b:	or     al,0xf4
  42522d:	out    0x5b,al
  42522f:	rol    BYTE PTR [ebp-0x5e],cl
  425232:	mov    cs,WORD PTR [ecx-0x2d]
  425235:	daa    
  425236:	test   al,0x7e
  425238:	sub    eax,0x1f673864
  42523d:	push   edi
  42523e:	and    bh,BYTE PTR [edi+0xe00a21f]
  425244:	loopne 0x42521a
  425246:	pop    esp
  425247:	xlat   BYTE PTR ds:[ebx]
  425248:	clc    
  425249:	cwde   
  42524a:	iret   
  42524b:	call   0x11a56685
  425250:	std    
  425251:	jns    0x4251d7
  425253:	pop    ds
  425254:	cmp    DWORD PTR [ebp+0x1f],edi
  425257:	mov    edi,0xa961eaf8
  42525c:	mov    WORD PTR [esi-0xd],ss
  42525f:	sub    ebp,ecx
  425261:	inc    ebp
  425262:	mov    dh,0x88
  425264:	sbb    DWORD PTR [edi],edx
  425266:	or     BYTE PTR [esi+0x3f1a6076],dh
  42526c:	mov    ebp,0x8f2e433f
  425271:	pop    ebp
  425272:	sti    
  425273:	adc    DWORD PTR [edi-0x3b3fb043],ecx
  425279:	add    eax,0xe5e080df
  42527e:	ret    0xbf8e
  425281:	or     esp,esi
  425283:	stos   BYTE PTR es:[edi],al
  425284:	jmp    0xab6f:0xef0a653d
  42528b:	push   ebx
  42528c:	test   al,0xd
  42528e:	push   es
  42528f:	cmc    
  425290:	fdivr  QWORD PTR [eax+0x5fa96890]
  425296:	mov    esp,0x563a6aff
  42529b:	mov    BYTE PTR [eax-0x1a1188b3],cl
  4252a1:	test   al,0xfb
  4252a3:	sbb    BYTE PTR [ecx],dh
  4252a5:	les    edx,FWORD PTR [eax-0x18]
  4252a8:	jnp    0x4252bf
  4252aa:	and    ebp,esi
  4252ac:	aad    0xcb
  4252ae:	stc    
  4252af:	mov    edi,0x6465709c
  4252b4:	add    DWORD PTR [edi],edi
  4252b6:	jns    0x4252ae
  4252b8:	lock add bh,ch
  4252bb:	test   eax,0x23fc46d6
  4252c0:	in     al,dx
  4252c1:	pop    eax
  4252c2:	mov    ecx,0x86eb702f
  4252c7:	loopne 0x425285
  4252c9:	inc    ecx
  4252ca:	mov    dh,0x40
  4252cc:	push   esi
  4252cd:	test   BYTE PTR [eax-0x17],al
  4252d0:	in     al,0x9e
  4252d2:	lahf   
  4252d3:	adc    DWORD PTR ds:0xfde61e78,0xd2e3e8c5
  4252dd:	loopne 0x425283
  4252df:	push   edi
  4252e0:	sub    al,0x95
  4252e2:	cwde   
  4252e3:	out    dx,al
  4252e4:	iret   
  4252e5:	pushf  
  4252e6:	cmp    BYTE PTR [esi+0x64bd7d0f],bl
  4252ec:	adc    ebx,DWORD PTR [edx]
  4252ee:	cmp    ebx,DWORD PTR ds:0xeed93011
  4252f4:	push   cs
  4252f5:	jb     0x42531c
  4252f7:	cld    
  4252f8:	add    eax,0x2f0a7f36
  4252fd:	data16 (bad) 
  425300:	and    ebp,ecx
  425302:	fsub   st,st(1)
  425304:	add    bh,dh
  425306:	jns    0x425380
  425308:	fwait
  425309:	sub    BYTE PTR [eax+ebx*1],dh
  42530c:	pop    ecx
  42530d:	lahf   
  42530e:	pop    ebx
  42530f:	fld    TBYTE PTR [ebx+eax*2-0x3e771590]
  425316:	jbe    0x4252f9
  425318:	inc    esi
  425319:	xchg   ebx,ebx
  42531b:	pop    esp
  42531c:	dec    esi
  42531d:	int3   
  42531e:	push   cs
  42531f:	mov    ah,0xce
  425321:	xchg   ebp,eax
  425322:	inc    edx
  425323:	pop    es
  425324:	xlat   BYTE PTR ds:[ebx]
  425325:	hlt    
  425326:	and    al,0xeb
  425328:	sub    DWORD PTR [edx+0x7bee8591],ebp
  42532e:	jne    0x425301
  425330:	mov    eax,0x7b173801
  425335:	into   
  425336:	mov    edx,0xc31959f6
  42533b:	sub    al,0xce
  42533d:	sub    bl,cl
  42533f:	je     0x425394
  425341:	add    DWORD PTR [edi-0x47],ebp
  425344:	idiv   ebx
  425346:	pop    edx
  425347:	pop    eax
  425348:	push   ss
  425349:	jb     0x425318
  42534b:	mov    ebx,0xca093498
  425350:	and    al,0x33
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	or     al,0x1f
  425360:	add    edx,DWORD PTR [edx+0x1cce9]
  425366:	clc    
  425367:	add    al,0x0
  425369:	add    BYTE PTR [esi+esi*4+0x21],ch
  42536d:	cmp    al,0x2d
  42536f:	inc    edi
  425370:	ffree  st(2)
  425372:	mov    esi,0xb3541920
  425378:	xor    al,0x79
  42537a:	loopne 0x4253ef
  42537c:	sub    BYTE PTR [ebx+esi*1],cl
  42537f:	das    
  425380:	rcr    DWORD PTR [ecx+0x5d0d52cc],1
  425386:	add    DWORD PTR [ebx],ebp
  425388:	ds xchg edx,eax
  42538a:	jnp    0x4253f8
  42538c:	mov    edx,0x9945c4e5
  425391:	or     al,0x27
  425393:	mov    dh,0x2b
  425395:	out    dx,eax
  425396:	sub    DWORD PTR [esi+ebp*1],edi
  425399:	sbb    ecx,DWORD PTR [ebp-0x51fa63b2]
  42539f:	push   eax
  4253a0:	mov    edi,eax
  4253a2:	jmp    0x80ccf23b
  4253a7:	cdq    
  4253a8:	or     al,0xd3
  4253aa:	leave  
  4253ab:	mov    ch,0xc2
  4253ad:	lds    edi,FWORD PTR [ebp-0x6]
  4253b0:	scas   eax,DWORD PTR es:[edi]
  4253b1:	and    eax,0x5563d86f
  4253b6:	cmp    eax,0x6bf05db0
  4253bb:	cmp    DWORD PTR [eax+0x720f051a],esi
  4253c1:	popa   
  4253c2:	in     al,0x9a
  4253c4:	sub    DWORD PTR [ecx-0x698bc32a],0xffffff92
  4253cb:	js     0x4253e4
  4253cd:	neg    BYTE PTR [edi-0x2560f6ba]
  4253d3:	hlt    
  4253d4:	out    0x32,eax
  4253d6:	cmp    BYTE PTR [edi+0x7dac969d],bh
  4253dc:	sub    ch,BYTE PTR [ebx-0x3b]
  4253df:	sub    al,BYTE PTR [esi+eiz*2-0x27]
  4253e3:	push   DWORD PTR [edi]
  4253e5:	sti    
  4253e6:	out    dx,al
  4253e7:	pop    ebp
  4253e8:	call   0xbb53:0x22845a76
  4253ef:	mov    eax,ds:0x2d0e137e
  4253f4:	and    ebx,esp
  4253f6:	dec    ebp
  4253f7:	mov    ds:0x3fbedfcc,eax
  4253fc:	fiadd  WORD PTR [edx+0x21]
  4253ff:	pop    esi
  425400:	dec    esi
  425401:	(bad)
  425404:	je     0x425415
  425406:	mov    bh,0x4c
  425408:	inc    edx
  425409:	std    
  42540a:	mov    WORD PTR [esi-0xf],cs
  42540d:	out    dx,al
  42540e:	out    dx,eax
  42540f:	push   edx
  425410:	jmp    0xb29a:0xec1515b7
  425417:	test   al,0x52
  425419:	dec    edx
  42541a:	adc    BYTE PTR [esi+0x38],bl
  42541d:	push   ecx
  42541e:	mov    ebx,0x6f5ac5c5
  425423:	lahf   
  425424:	add    dh,bl
  425426:	ds mov esi,0x23afefc2
  42542c:	adc    al,BYTE PTR [ecx+0x68f48c33]
  425432:	out    0xa0,eax
  425434:	repnz xchg edx,eax
  425436:	sub    esp,DWORD PTR [ebp+0x2b678e82]
  42543c:	sbb    DWORD PTR [ebx-0x60],ebx
  42543f:	sbb    al,BYTE PTR [edx+esi*2+0x1f8e89f6]
  425446:	add    bh,al
  425448:	dec    esp
  425449:	xor    BYTE PTR [edi-0x6b],cl
  42544c:	sub    eax,0x10f3ecbf
  425451:	iret   
  425452:	sub    al,0x2b
  425454:	(bad)  
  425455:	adc    BYTE PTR [ebx],bl
  425457:	xor    ebx,edi
  425459:	(bad)  
  42545a:	mov    ebp,0xd9f6eed2
  42545f:	mov    ah,0xb0
  425461:	ds shr ebp,1
  425464:	inc    esi
  425465:	adc    eax,0x7032caa8
  42546a:	fwait
  42546b:	inc    ebx
  42546c:	xchg   edi,eax
  42546d:	cmp    esi,DWORD PTR [esi-0x73]
  425470:	sub    BYTE PTR [edi],0x15
  425473:	fld    QWORD PTR [edx+ebp*1+0x45]
  425477:	and    ebx,DWORD PTR [ebp+0x3cfdd967]
  42547d:	sahf   
  42547e:	fsubr  DWORD PTR [edx-0x781c3203]
  425484:	push   es
  425485:	mov    gs,WORD PTR [ebp-0x6762a128]
  42548b:	mov    ch,0x71
  42548d:	dec    esi
  42548e:	xchg   BYTE PTR [ecx],bh
  425490:	pop    ecx
  425491:	pop    esp
  425492:	lock xchg ebx,eax
  425494:	dec    ebp
  425495:	mov    ebx,0xfa81f72c
  42549a:	ficomp WORD PTR ds:0xd053d416
  4254a0:	mov    DWORD PTR [ebx],esp
  4254a2:	mov    ch,0x58
  4254a4:	xor    ecx,DWORD PTR [edi+0x14]
  4254a7:	mov    al,0xd5
  4254a9:	nop
  4254aa:	add    eax,0x68d2a4b0
  4254af:	ins    DWORD PTR es:[edi],dx
  4254b0:	sub    al,0x2f
  4254b2:	test   DWORD PTR ds:0xf901d074,ebx
  4254b8:	adc    BYTE PTR [ebx],bh
  4254ba:	jns    0x425449
  4254bc:	xchg   esp,eax
  4254bd:	sti    
  4254be:	scas   al,BYTE PTR es:[edi]
  4254bf:	daa    
  4254c0:	jo     0x42544f
  4254c2:	and    ebp,esp
  4254c4:	ss jb  0x42545c
  4254c7:	xchg   edx,eax
  4254c8:	ror    DWORD PTR [eax+0x15],cl
  4254cb:	jecxz  0x425540
  4254cd:	bound  ebx,QWORD PTR [esi+0x598fe029]
  4254d3:	call   0x63de:0x36f9e7d2
  4254da:	xchg   ebx,eax
  4254db:	mov    al,0xbc
  4254dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254de:	jmp    0xa2e9de5b
  4254e3:	mov    eax,0x7b9b8faa
  4254e8:	mov    ah,0x8c
  4254ea:	call   0x310c:0x7349186
  4254f1:	xor    bh,BYTE PTR [edx+eiz*1-0x2]
  4254f5:	add    BYTE PTR [esi+0x24],0xad
  4254f9:	xchg   esp,eax
  4254fa:	sbb    BYTE PTR [ecx],dh
  4254fc:	push   es
  4254fd:	push   edi
  4254fe:	not    DWORD PTR [edx-0x7537aacf]
  425504:	pop    ecx
  425505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425506:	add    al,0x3c
  425508:	ins    DWORD PTR es:[edi],dx
  425509:	or     DWORD PTR [ecx+0x12677ba7],0xffffffe8
  425510:	xchg   ecx,eax
  425511:	in     al,0xa5
  425513:	bound  edi,QWORD PTR ds:0xebe342b6
  425519:	xchg   edx,eax
  42551a:	xlat   BYTE PTR ds:[ebx]
  42551b:	retf   0x385a
  42551e:	fstp   TBYTE PTR [esi]
  425520:	sbb    DWORD PTR [ecx+0x27],esi
  425523:	aaa    
  425524:	leave  
  425525:	rcl    BYTE PTR [edx+esi*2],1
  425528:	cmp    edx,DWORD PTR [eax-0x74]
  42552b:	xchg   edi,eax
  42552c:	or     al,0xbe
  42552e:	pop    ss
  42552f:	in     eax,dx
  425530:	shl    DWORD PTR [ebx],cl
  425532:	fistp  WORD PTR [ebx]
  425534:	inc    esp
  425535:	cmc    
  425536:	mov    ds:0xe04369c,eax
  42553b:	dec    edi
  42553c:	jae    0x42558c
  42553e:	xchg   ebp,eax
  42553f:	inc    ebp
  425540:	sbb    eax,0x798c15c1
  425545:	sbb    DWORD PTR [esi-0x70],ecx
  425548:	inc    esp
  425549:	push   0x47
  42554b:	dec    esp
  42554c:	xchg   ecx,ebp
  42554e:	gs pop ss
  425550:	ins    DWORD PTR es:[edi],dx
  425551:	les    esp,FWORD PTR [ebp+0x1a45a6a6]
  425557:	fmul   DWORD PTR [ebx]
  425559:	js     0x4255a0
  42555b:	sbb    ebx,DWORD PTR [edi]
  42555d:	push   0xffffff83
  42555f:	lds    ebp,FWORD PTR [eax]
  425561:	mov    ebp,0xf084deab
  425566:	xor    ch,BYTE PTR [esi-0x8dd7fda]
  42556c:	ja     0x4255db
  42556e:	mov    bh,0x24
  425570:	(bad)  
  425571:	sub    edx,eax
  425573:	xor    eax,DWORD PTR [eax+edx*4-0x48]
  425577:	push   edi
  425578:	sub    eax,0x49613bd1
  42557d:	fistp  WORD PTR [edi-0x8d55925]
  425583:	pop    edi
  425584:	mov    ebx,0x10a94b5f
  425589:	leave  
  42558a:	add    al,0x51
  42558c:	mov    dl,0x2c
  42558e:	cmp    al,0xd5
  425590:	test   DWORD PTR [edx+0x79a65f96],ebp
  425596:	pop    ds
  425597:	das    
  425598:	adc    eax,DWORD PTR [ebp-0x67]
  42559b:	pop    edi
  42559c:	fnstsw WORD PTR [eax]
  42559e:	fwait
  42559f:	mov    bl,0x58
  4255a1:	mov    edi,0xc9ee338
  4255a6:	cld    
  4255a7:	lods   eax,DWORD PTR ds:[esi]
  4255a8:	mov    edx,0x49cb0448
  4255ad:	xor    BYTE PTR [ecx-0x78],al
  4255b0:	test   BYTE PTR [esi+0x2e01cf2b],0xc2
  4255b7:	dec    ecx
  4255b8:	retf   
  4255b9:	loope  0x425585
  4255bb:	popf   
  4255bc:	jne    0x425598
  4255be:	add    DWORD PTR ds:0xca5529e,ebx
  4255c4:	sbb    al,0x1e
  4255c6:	dec    esi
  4255c7:	hlt    
  4255c8:	rcr    BYTE PTR [ebp-0x13fbe753],cl
  4255ce:	jecxz  0x42557f
  4255d0:	cmp    cl,bl
  4255d2:	outs   dx,BYTE PTR ds:[esi]
  4255d3:	xlat   BYTE PTR ds:[ebx]
  4255d4:	pop    ds
  4255d5:	loope  0x425570
  4255d7:	repnz push ebx
  4255d9:	cmc    
  4255da:	xchg   ecx,eax
  4255db:	or     al,0x1b
  4255dd:	jnp    0x42563c
  4255df:	cmp    cl,BYTE PTR [edx-0x60]
  4255e2:	stos   BYTE PTR es:[edi],al
  4255e3:	leave  
  4255e4:	xor    BYTE PTR [ebx+0x32eb7c81],dl
  4255ea:	or     al,0x30
  4255ec:	clc    
  4255ed:	inc    ecx
  4255ee:	inc    eax
  4255ef:	jmp    0x425667
  4255f1:	dec    eax
  4255f2:	add    eax,0xd8069a99
  4255f7:	in     eax,dx
  4255f8:	scas   eax,DWORD PTR es:[edi]
  4255f9:	mov    esp,0x36e2033e
  4255fe:	or     eax,0xaeb25073
  425603:	lea    edi,[ebp+0x39fdf1d5]
  425609:	aaa    
  42560a:	(bad)  
  42560b:	out    0xeb,eax
  42560d:	sbb    eax,edi
  42560f:	pop    ecx
  425610:	leave  
  425611:	mov    ebp,0x36cd6f02
  425616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425617:	fistp  QWORD PTR es:[edx-0x65]
  42561b:	sub    eax,0xe109d190
  425620:	shl    BYTE PTR [edx-0x3b71c6eb],0xd4
  425627:	xchg   esp,eax
  425628:	push   ss
  425629:	or     DWORD PTR [eax-0x76a7b8f1],ebx
  42562f:	inc    ecx
  425630:	jecxz  0x4255e1
  425632:	jge    0x4256b3
  425634:	jmp    0x25bb5ced
  425639:	mov    ds:0xa1cc0f4a,eax
  42563e:	cmp    BYTE PTR [eax+ebx*1-0x36],bh
  425642:	add    eax,0xd4a31357
  425647:	add    ah,BYTE PTR [esi+eiz*1-0x10af8e08]
  42564e:	mov    ch,0xd1
  425650:	xchg   ebp,eax
  425651:	cmc    
  425652:	pop    edx
  425653:	xchg   BYTE PTR [ebp+0x15781655],ah
  425659:	adc    DWORD PTR [esi],ebp
  42565b:	mov    bl,dh
  42565d:	add    eax,0xd674c786
  425662:	xchg   DWORD PTR [eax+ebx*4+0x12],esp
  425666:	call   0x392b20e3
  42566b:	and    DWORD PTR [ebp+esi*1+0x712394f8],ebx
  425672:	outs   dx,BYTE PTR ds:[esi]
  425673:	mov    cl,0x13
  425675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425676:	stc    
  425677:	jb     0x425626
  425679:	jae    0x4256ba
  42567b:	daa    
  42567c:	inc    esp
  42567d:	mov    WORD PTR [ebx-0x7ae37d45],?
  425683:	jmp    0xdbba46a3
  425688:	es popa 
  42568a:	xor    esi,DWORD PTR [eax]
  42568c:	sti    
  42568d:	ret    0xe28a
  425690:	dec    edi
  425691:	(bad)  
  425692:	(bad)  
  425694:	daa    
  425695:	and    eax,0x36e2dc8f
  42569a:	icebp  
  42569b:	jne    0x425672
  42569d:	int    0xcd
  42569f:	je     0x42570f
  4256a1:	and    BYTE PTR [esi],dh
  4256a3:	lahf   
  4256a4:	adc    eax,0x6d7cfac2
  4256a9:	push   cs
  4256aa:	fmul   QWORD PTR [ebp+0x44]
  4256ad:	xchg   BYTE PTR [edi-0x6ca87f4c],ah
  4256b3:	dec    eax
  4256b4:	ror    dh,0xc2
  4256b7:	push   0x53
  4256b9:	imul   eax,DWORD PTR ds:0x151e5e84,0x14f1e57a
  4256c3:	(bad)  
  4256c4:	pusha  
  4256c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256c6:	loopne 0x4256a8
  4256c8:	sub    ecx,DWORD PTR [edi+edi*8]
  4256cb:	cmc    
  4256cc:	cmc    
  4256cd:	lods   eax,DWORD PTR ds:[esi]
  4256ce:	mov    ecx,DWORD PTR [edx-0x675b1d33]
  4256d4:	nop
  4256d5:	arpl   WORD PTR [ecx],di
  4256d7:	pop    eax
  4256d8:	inc    ebp
  4256d9:	aad    0x76
  4256db:	sar    BYTE PTR [edi],0x57
  4256de:	pop    eax
  4256df:	call   0x1c3d8372
  4256e4:	pop    edi
  4256e5:	sbb    esi,DWORD PTR ds:0xc1914088
  4256eb:	mov    BYTE PTR [edx+eiz*4],dl
  4256ee:	pop    ds
  4256ef:	pop    ecx
  4256f0:	dec    eax
  4256f1:	cmp    BYTE PTR [esi],cl
  4256f3:	dec    edi
  4256f4:	mov    ebx,0x25053874
  4256f9:	ficom  WORD PTR [ebp+0x2b]
  4256fc:	xchg   BYTE PTR ds:0x9cfd12f,cl
  425702:	js     0x425693
  425704:	jmp    0xe662:0x18d53ead
  42570b:	outs   dx,DWORD PTR ds:[esi]
  42570c:	sub    dh,dh
  42570e:	fbld   TBYTE PTR [ebx+eax*8+0x216a8e9e]
  425715:	clc    
  425716:	ror    ah,0x30
  425719:	xlat   BYTE PTR ds:[ebx]
  42571a:	xor    al,0x4c
  42571c:	or     eax,0xd2fd7e4b
  425721:	out    dx,eax
  425722:	or     cl,BYTE PTR [edx-0x39]
  425725:	dec    ebx
  425726:	jbe    0x425745
  425728:	mov    al,0x6d
  42572a:	hlt    
  42572b:	scas   eax,DWORD PTR es:[edi]
  42572c:	mov    eax,0x2f4b3968
  425731:	mov    ebx,0x63ba4093
  425736:	ja     0x4257ae
  425738:	push   ds
  425739:	sbb    ebx,DWORD PTR [esi-0x7]
  42573c:	mov    edx,0x6605847d
  425741:	mov    DWORD PTR [ebp-0x2b9e6f60],ebp
  425747:	fcomp  QWORD PTR ds:[esi]
  42574a:	mov    esp,0x3b34a91c
  42574f:	(bad)  
  425750:	pusha  
  425751:	cmp    dh,dh
  425753:	lock out dx,eax
  425755:	cmp    al,0x4
  425757:	pushf  
  425758:	mov    eax,0xc01352a2
  42575d:	jb     0x4256fd
  42575f:	fstp   QWORD PTR [ecx]
  425761:	das    
  425762:	es xchg ebp,eax
  425764:	adc    ah,BYTE PTR [edx-0xf70cfe7]
  42576a:	outs   dx,BYTE PTR ds:[esi]
  42576b:	or     ebx,DWORD PTR [edi+0xb]
  42576e:	pop    esp
  42576f:	and    ecx,DWORD PTR [ecx+esi*2+0x41]
  425773:	imul   ebp,DWORD PTR [esi+eax*1+0x32cd34a6],0xffffffe1
  42577b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42577c:	xor    al,BYTE PTR [edi+0x3e395a53]
  425782:	(bad)  
  425783:	ss sahf 
  425785:	(bad)  [edx+0x46293d91]
  42578b:	cwde   
  42578c:	rcl    DWORD PTR [edi+0x2e],cl
  42578f:	pop    esi
  425790:	lea    edi,[eax+0x79]
  425793:	cs pop ds
  425795:	dec    ebx
  425796:	adc    ah,BYTE PTR [edi+0x68]
  425799:	std    
  42579a:	or     cl,bl
  42579c:	xlat   BYTE PTR ds:[ebx]
  42579d:	dec    esp
  42579e:	jg     0x4257cb
  4257a0:	(bad)  
  4257a1:	not    bh
  4257a3:	cmp    esp,DWORD PTR [ecx+0x296ef753]
  4257a9:	cmp    DWORD PTR ds:0xf256f67d,eax
  4257af:	fs xchg ecx,eax
  4257b1:	leave  
  4257b2:	jbe    0x42574b
  4257b4:	test   al,0x4c
  4257b6:	jp     0x425816
  4257b8:	adc    ch,BYTE PTR [esi+eiz*4]
  4257bb:	push   es
  4257bc:	out    0x20,eax
  4257be:	jl     0x4257a1
  4257c0:	ja     0x425835
  4257c2:	(bad)  
  4257c3:	int3   
  4257c4:	pop    ds
  4257c5:	mov    eax,ds:0xe1ebc8a7
  4257ca:	retf   0xf7d1
  4257cd:	cmp    ch,0x65
  4257d0:	mov    ch,0x13
  4257d2:	sbb    ebp,esi
  4257d4:	(bad)  
  4257d5:	in     eax,0x3b
  4257d7:	pop    ebx
  4257d8:	fdivr  DWORD PTR [edi-0x529f8311]
  4257de:	adc    eax,0xd8da8a88
  4257e3:	push   ds
  4257e4:	repz sbb DWORD PTR [eax-0x70],esp
  4257e8:	dec    edi
  4257e9:	repnz sbb eax,0x54f82627
  4257ef:	mov    al,ds:0xa4a4b319
  4257f4:	gs dec edi
  4257f6:	lock dec eax
  4257f8:	cmp    esi,DWORD PTR [esi+ecx*1]
  4257fb:	imul   ebx,DWORD PTR [edi],0xffffffb9
  4257fe:	push   edi
  4257ff:	into   
  425800:	push   eax
  425801:	es sbb al,0x98
  425804:	scas   al,BYTE PTR es:[edi]
  425805:	sti    
  425806:	gs ret 0x643e
  42580a:	lods   al,BYTE PTR ds:[esi]
  42580b:	dec    ebp
  42580c:	int    0x3f
  42580e:	add    BYTE PTR [ecx-0x437f0770],bl
  425814:	mov    cl,BYTE PTR [eax-0x10b1f10a]
  42581a:	sbb    DWORD PTR [ebp+0x79385db5],esp
  425820:	fsubr  st(0),st
  425822:	jmp    0xbbd27409
  425827:	and    al,0x4e
  425829:	push   0x97a7141b
  42582e:	push   esi
  42582f:	popa   
  425830:	cmc    
  425831:	stos   BYTE PTR es:[edi],al
  425832:	rol    edi,1
  425834:	xlat   BYTE PTR ds:[ebx]
  425835:	(bad)  
  425836:	loop   0x425803
  425838:	inc    edx
  425839:	and    BYTE PTR [edx+0xa26f5e3],dh
  42583f:	out    0x78,al
  425841:	icebp  
  425842:	cmp    eax,0x26c12191
  425847:	adc    DWORD PTR [ebp-0x5e],edi
  42584a:	repz fistp DWORD PTR [ebp+0x6718d920]
  425851:	cmc    
  425852:	icebp  
  425853:	cmp    al,0xe1
  425855:	mov    edi,0x8c51c5ea
  42585a:	mov    esi,0xa2a8130
  42585f:	loop   0x42580f
  425861:	mov    esi,0x44af8505
  425866:	scas   eax,DWORD PTR es:[edi]
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x725d36f8]
  42586f:	pusha  
  425870:	cmp    DWORD PTR [ebp-0x1f],esi
  425873:	rol    DWORD PTR [ecx],1
  425875:	add    al,bh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [edx-0x14],bl
  42587c:	dec    ebp
  42587d:	iret   
  42587e:	clc    
  42587f:	retf   0xdd9d
  425882:	scas   al,BYTE PTR es:[edi]
  425883:	lods   al,BYTE PTR ds:[esi]
  425884:	data16 jge 0x425848
  425887:	repnz or BYTE PTR [ebp+0x20],cl
  42588b:	stos   DWORD PTR es:[edi],eax
  42588c:	mov    eax,ds:0xe02d08a1
  425891:	ret    0x38c6
  425894:	cmp    al,0x61
  425896:	popf   
  425897:	sub    al,0x6a
  425899:	iret   
  42589a:	mov    edx,DWORD PTR [edi]
  42589c:	push   esp
  42589d:	push   ecx
  42589e:	(bad)  
  42589f:	icebp  
  4258a0:	jo     0x425870
  4258a2:	push   ebp
  4258a3:	xchg   ebp,eax
  4258a4:	dec    esp
  4258a5:	(bad)  
  4258a6:	jge    0x425882
  4258a8:	xor    al,0xc4
  4258aa:	imul   ecx,DWORD PTR [edi-0x58],0xc1dbd660
  4258b1:	loopne 0x4258cc
  4258b3:	sbb    al,0xec
  4258b5:	jecxz  0x425902
  4258b7:	inc    esi
  4258b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258b9:	(bad)  [edx+ebx*4]
  4258bc:	test   eax,0xf4834aa5
  4258c1:	cmp    eax,0x2387a410
  4258c6:	push   ebx
  4258c7:	dec    eax
  4258c8:	ror    DWORD PTR [ebx+0x2f],cl
  4258cb:	jnp    0x425924
  4258cd:	lods   eax,DWORD PTR ds:[esi]
  4258ce:	(bad)  
  4258cf:	js     0x4258ad
  4258d1:	scas   al,BYTE PTR es:[edi]
  4258d2:	outs   dx,BYTE PTR ds:[esi]
  4258d3:	mov    ecx,ecx
  4258d5:	ret    
  4258d6:	inc    eax
  4258d7:	xchg   esi,eax
  4258d8:	sti    
  4258d9:	jmp    0xe1c9992c
  4258de:	or     al,0x7c
  4258e0:	sahf   
  4258e1:	retf   
  4258e2:	cmp    bh,BYTE PTR ss:[ecx+0x46]
  4258e6:	shr    eax,1
  4258e8:	pusha  
  4258e9:	arpl   si,si
  4258eb:	out    0xcf,al
  4258ed:	inc    eax
  4258ee:	inc    ecx
  4258ef:	push   eax
  4258f0:	gs cmp eax,0xb223ba53
  4258f6:	mov    DWORD PTR [eiz*2+0x240905ce],edx
  4258fd:	jbe    0x42592b
  4258ff:	inc    esi
  425900:	push   ebx
  425901:	jnp    0x4258af
  425903:	rcl    ah,0x30
  425906:	mov    ebp,0x1e45fdcd
  42590b:	imul   eax,ebp,0x36
  42590e:	mov    ah,0x37
  425910:	js     0x425957
  425912:	(bad)  
  425913:	enter  0x3da3,0x49
  425917:	arpl   WORD PTR [ecx-0x7e3be14],bx
  42591d:	add    BYTE PTR [esi-0x29a53574],ch
  425923:	stos   BYTE PTR es:[edi],al
  425924:	xor    cl,BYTE PTR [ebx+0x3d]
  425927:	sub    eax,0xbb0458c8
  42592c:	sar    BYTE PTR [edi+0xafe9de8],cl
  425932:	aaa    
  425933:	cmc    
  425934:	jae    0x425999
  425936:	dec    ebp
  425937:	imul   edx,DWORD PTR [ecx],0x33
  42593a:	jnp    0x425930
  42593c:	pop    eax
  42593d:	out    dx,eax
  42593e:	push   0xe099885
  425943:	jle    0x42592b
  425945:	dec    esp
  425946:	rcr    BYTE PTR [ebp-0x201cb658],cl
  42594c:	mov    WORD PTR [edx],ss
  42594e:	jmp    0x425929
  425950:	push   ecx
  425951:	pop    ds
  425952:	gs dec edi
  425954:	push   eax
  425955:	scas   eax,DWORD PTR es:[edi]
  425956:	cmc    
  425957:	dec    esi
  425958:	xchg   ebp,eax
  425959:	mov    ebx,0x8df7c258
  42595e:	sub    BYTE PTR [esi],dl
  425960:	and    esp,DWORD PTR [eax-0x1fdfa489]
  425966:	mov    edx,0x9098881e
  42596b:	aad    0x53
  42596d:	dec    esi
  42596e:	jle    0x4258f3
  425970:	inc    DWORD PTR [ecx+0x29530a3d]
  425976:	in     al,dx
  425977:	cmp    ecx,DWORD PTR [ecx-0x13be22f1]
  42597d:	mov    ebx,0xb2c2c52b
  425982:	xchg   esp,eax
  425983:	mov    cl,0x54
  425985:	xor    eax,0xccc4b11d
  42598a:	rcr    DWORD PTR [esi+0x54717515],1
  425990:	pop    edx
  425991:	(bad)  
  425992:	scas   al,BYTE PTR es:[edi]
  425993:	add    edi,DWORD PTR [ebp+0x44e04ad5]
  425999:	out    0xed,al
  42599b:	add    bh,0xb7
  42599e:	jmp    0x57d8a8fe
  4259a3:	lods   al,BYTE PTR ds:[esi]
  4259a4:	scas   eax,DWORD PTR es:[edi]
  4259a5:	sbb    eax,0x360f2934
  4259aa:	add    eax,0xb2ca7728
  4259af:	(bad)  [ebx-0x24]
  4259b2:	shr    BYTE PTR [ecx+0x14],0xa1
  4259b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b7:	sti    
  4259b8:	rcr    DWORD PTR [edi-0x37698146],1
  4259be:	ret    
  4259bf:	jae    0x425a02
  4259c1:	xchg   esp,eax
  4259c2:	out    0x93,eax
  4259c4:	and    ebp,DWORD PTR [esi+0x46]
  4259c7:	mov    dh,0xd9
  4259c9:	sbb    BYTE PTR [eax],dl
  4259cb:	lea    esp,[ebp+0x25]
  4259ce:	inc    esp
  4259cf:	popf   
  4259d0:	sahf   
  4259d1:	fistp  QWORD PTR [ebx-0x5d]
  4259d4:	(bad)
  4259d7:	xchg   BYTE PTR ds:0x4f3f7798,bl
  4259dd:	adc    al,0x7a
  4259df:	dec    eax
  4259e0:	xor    DWORD PTR [edx+0x31],esi
  4259e3:	imul   esi,DWORD PTR [esp+edx*2+0x71bfb620],0x20
  4259eb:	jecxz  0x4259bd
  4259ed:	mov    bl,0xb5
  4259ef:	repnz push edx
  4259f1:	ret    0x767b
  4259f4:	inc    esi
  4259f5:	push   es
  4259f6:	stc    
  4259f7:	inc    esp
  4259f8:	sbb    esi,ecx
  4259fa:	cmp    BYTE PTR [ecx],bl
  4259fc:	sahf   
  4259fd:	test   DWORD PTR [edx],ebx
  4259ff:	stc    
  425a00:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  425a02:	rcr    eax,1
  425a04:	stc    
  425a05:	stc    
  425a06:	enter  0x7d14,0x4c
  425a0a:	push   ds
  425a0b:	stos   DWORD PTR es:[edi],eax
  425a0c:	outs   dx,BYTE PTR ds:[esi]
  425a0d:	push   ds
  425a0e:	pushf  
  425a0f:	push   cs
  425a10:	sub    BYTE PTR [ebp-0x5b10e2ea],ah
  425a16:	mov    al,0x9e
  425a18:	sbb    dh,dl
  425a1a:	add    eax,0x11fa00df
  425a1f:	(bad)  [esi]
  425a21:	jmp    0x425a4f
  425a23:	call   0xde9b:0x483554f1
  425a2a:	nop
  425a2b:	mov    esp,edx
  425a2d:	js     0x425a7e
  425a2f:	cmp    al,0xb3
  425a31:	mov    ch,0xc4
  425a33:	pop    es
  425a34:	mov    al,ds:0xdea6b8c0
  425a39:	or     ebx,DWORD PTR [esi-0x1d]
  425a3c:	in     eax,0xb0
  425a3e:	jns    0x4259f6
  425a40:	scas   al,BYTE PTR es:[edi]
  425a41:	xor    esi,DWORD PTR [ebp-0x4317f9ff]
  425a47:	add    edx,DWORD PTR [edx-0x3380d5ac]
  425a4d:	jecxz  0x425a40
  425a4f:	test   esi,0x6467f3e7
  425a55:	jns    0x425a3a
  425a57:	mov    esi,DWORD PTR [esi-0x45bd869]
  425a5d:	mov    eax,ds:0x3177eee4
  425a62:	jg     0x425ac8
  425a64:	or     edx,DWORD PTR [edi+0x42ebd74f]
  425a6a:	aas    
  425a6b:	loopne 0x425a7c
  425a6d:	inc    eax
  425a6e:	adc    esp,edx
  425a70:	sub    DWORD PTR [ebx+0x4b332b7f],ecx
  425a76:	add    eax,0xb2172a11
  425a7b:	retf   0xb4d7
  425a7e:	into   
  425a7f:	xchg   ecx,eax
  425a80:	mov    ebx,DWORD PTR [esi+0x1e]
  425a83:	(bad)  
  425a84:	call   0x8f5c9d40
  425a89:	xchg   edx,eax
  425a8a:	add    eax,0x22b81644
  425a8f:	mov    DWORD PTR ss:[ebx+0x1a],edi
  425a93:	pop    esi
  425a94:	jmp    0x425abc
  425a96:	or     DWORD PTR [ebp-0x5c],edi
  425a99:	bnd jne 0x425a98
  425a9c:	loop   0x425a48
  425a9e:	icebp  
  425a9f:	shl    DWORD PTR [ebx+eax*8+0x6f],0xec
  425aa4:	and    al,0x38
  425aa6:	xor    al,bh
  425aa8:	and    cl,al
  425aaa:	cmc    
  425aab:	ja     0x425ad7
  425aad:	and    dl,BYTE PTR [edx-0x6f]
  425ab0:	add    edi,ecx
  425ab2:	in     al,dx
  425ab3:	retf   
  425ab4:	and    eax,0xcf197c48
  425ab9:	stos   BYTE PTR es:[edi],al
  425aba:	ret    0xb13
  425abd:	cmp    eax,0x5c0c9dbe
  425ac2:	into   
  425ac3:	stos   BYTE PTR es:[edi],al
  425ac4:	aam    0xfb
  425ac6:	jge    0x425afc
  425ac8:	test   al,0xb0
  425aca:	and    BYTE PTR [edx-0x3e],ch
  425acd:	(bad)  
  425ace:	jle    0x425a7d
  425ad0:	or     eax,0xbac7c9e0
  425ad5:	out    dx,al
  425ad6:	inc    esi
  425ad7:	repnz test cl,bh
  425ada:	pop    eax
  425adb:	repz jae 0x425ab9
  425ade:	push   esp
  425adf:	lea    edx,[esi+0xc]
  425ae2:	leave  
  425ae3:	arpl   WORD PTR [ecx-0x6a463a13],ax
  425ae9:	mov    ebx,0x8f7e991a
  425aee:	pop    ebx
  425aef:	add    eax,eax
  425af1:	outs   dx,DWORD PTR ds:[esi]
  425af2:	mov    ch,0x92
  425af4:	sub    esp,DWORD PTR [eax]
  425af6:	das    
  425af7:	scas   eax,DWORD PTR es:[edi]
  425af8:	dec    DWORD PTR ds:0xaebe0142
  425afe:	pushf  
  425aff:	(bad)  
  425b00:	repnz fst DWORD PTR [eax]
  425b03:	fst    DWORD PTR [ebp+0x57ce8fe1]
  425b09:	mov    al,0x7a
  425b0b:	out    0x92,al
  425b0d:	mov    ebx,0xa278a0d8
  425b12:	pop    esp
  425b13:	push   ss
  425b14:	mov    edx,0x21d1e16
  425b19:	mov    ds:0xd56cd022,al
  425b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b1f:	push   ds
  425b20:	enter  0x1bed,0x55
  425b24:	inc    ecx
  425b25:	cmp    al,0xa0
  425b27:	mov    dh,0x6
  425b29:	add    al,0x92
  425b2b:	sbb    ebp,DWORD PTR [edx+0x232f0c9]
  425b31:	pop    esp
  425b32:	and    eax,0x9fadf72a
  425b37:	mov    DWORD PTR [eax+eax*4+0x409a9cdc],eax
  425b3e:	les    ecx,FWORD PTR [eax+0x63]
  425b41:	sub    BYTE PTR [eax-0x1c40534b],ch
  425b47:	hlt    
  425b48:	sub    ch,bh
  425b4a:	fcomp  DWORD PTR [ebx]
  425b4c:	out    dx,al
  425b4d:	stos   DWORD PTR es:[edi],eax
  425b4e:	adc    al,0xd6
  425b50:	pop    ebp
  425b51:	mov    dh,0xba
  425b53:	push   esi
  425b54:	cwde   
  425b55:	(bad)  
  425b56:	cdq    
  425b57:	mov    al,0xa6
  425b59:	add    al,0xe8
  425b5b:	add    ah,BYTE PTR [ebx-0x66609025]
  425b61:	aas    
  425b62:	push   ss
  425b63:	ss mov eax,ebp
  425b66:	dec    esp
  425b67:	jle    0x425b5c
  425b69:	push   esi
  425b6a:	jae    0x425b7b
  425b6c:	or     DWORD PTR [ebx],ecx
  425b6e:	inc    ebx
  425b6f:	mov    bh,0xfa
  425b71:	int    0xb0
  425b73:	lods   eax,DWORD PTR ds:[esi]
  425b74:	test   al,0xbb
  425b76:	mov    ?,esp
  425b78:	test   DWORD PTR [edi],ebx
  425b7a:	(bad)  
  425b7b:	fs hlt 
  425b7d:	(bad)  
  425b7e:	pop    esi
  425b7f:	(bad)  
  425b80:	daa    
  425b81:	inc    esi
  425b82:	xchg   ebp,eax
  425b83:	inc    eax
  425b84:	mov    al,ds:0x5435a6a4
  425b89:	dec    ecx
  425b8a:	adc    BYTE PTR [ebx],dh
  425b8c:	xchg   ecx,eax
  425b8d:	jmp    0xf1ebe583
  425b92:	retfw  0xa4d
  425b96:	jle    0x425bc6
  425b98:	out    dx,eax
  425b99:	sbb    esi,DWORD PTR ds:0x778f8d4a
  425b9f:	bnd jp 0x425c1f
  425ba2:	nop
  425ba3:	xchg   edi,eax
  425ba4:	push   esp
  425ba5:	mov    dl,0xe8
  425ba7:	mov    dl,0xee
  425ba9:	mov    ah,0x31
  425bab:	sahf   
  425bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bad:	bound  eax,QWORD PTR [esi]
  425baf:	add    BYTE PTR [ecx-0x5002d408],al
  425bb5:	add    ah,BYTE PTR [edi]
  425bb7:	jo     0x425b3a
  425bb9:	pop    esp
  425bba:	lds    esi,FWORD PTR [edi+0x2]
  425bbd:	sti    
  425bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bbf:	pop    esi
  425bc0:	clc    
  425bc1:	lea    ebx,[edi-0x40]
  425bc4:	sub    eax,0x6120a484
  425bc9:	sbb    eax,0x9dbd0356
  425bce:	adc    al,0x21
  425bd0:	rol    BYTE PTR [edx-0x31],0x8c
  425bd4:	cmp    ax,0xa248
  425bd8:	mov    esi,0x4d774dfa
  425bdd:	mov    ebx,0x46badc9f
  425be2:	dec    ecx
  425be3:	push   edx
  425be4:	push   0xffffffc0
  425be6:	add    ebx,DWORD PTR [ebp+0x3b]
  425be9:	and    bl,BYTE PTR [esi-0x67e43445]
  425bef:	jae    0x425bdc
  425bf1:	xchg   ecx,eax
  425bf2:	mov    dh,0x4c
  425bf4:	jns    0x425c45
  425bf6:	adc    esi,DWORD PTR [edx+esi*8-0x23147ed2]
  425bfd:	push   cs
  425bfe:	sti    
  425bff:	mov    bh,0x37
  425c01:	lea    edi,[esi+eax*1-0x5916fc71]
  425c08:	dec    ebp
  425c09:	sub    dl,BYTE PTR [ebx+0x65955c1]
  425c0f:	inc    eax
  425c10:	mov    cl,0xa3
  425c12:	xor    edi,edx
  425c14:	adc    dh,BYTE PTR [eax+esi*1-0x34684f93]
  425c1b:	imul   esp,ebp,0xec004f63
  425c21:	xchg   ebp,eax
  425c22:	dec    esp
  425c23:	loop   0x425be5
  425c25:	mov    ebp,0x14aa4554
  425c2a:	test   BYTE PTR [ebp+0x42971fe9],ah
  425c30:	lods   al,BYTE PTR ds:[esi]
  425c31:	push   es
  425c32:	inc    ebp
  425c33:	push   eax
  425c34:	mov    bl,0x26
  425c36:	or     BYTE PTR [edx-0x37],ch
  425c39:	pop    eax
  425c3a:	mov    bh,0x14
  425c3c:	out    0x21,al
  425c3e:	in     al,0x24
  425c40:	popf   
  425c41:	jp     0x425c4e
  425c43:	and    BYTE PTR [edx+0x679f4a9d],0x84
  425c4a:	gs mov dl,0x9
  425c4d:	xchg   edx,eax
  425c4e:	add    al,0x3e
  425c50:	or     eax,0x9ea90c8d
  425c55:	cmp    BYTE PTR [edx+0x517082b7],0x2f
  425c5c:	xor    cl,ah
  425c5e:	and    eax,0x5a8bfd58
  425c63:	or     edi,DWORD PTR [ebp+0x6ce72894]
  425c69:	jae    0x425c9e
  425c6b:	adc    cl,BYTE PTR [eax]
  425c6d:	call   0x4ab8:0x9f059225
  425c74:	ds addr16 loope 0x425c70
  425c78:	mov    bh,0x4f
  425c7a:	ja     0x425c23
  425c7c:	fcmovu st,st(7)
  425c7e:	icebp  
  425c7f:	in     eax,dx
  425c80:	sahf   
  425c81:	push   ecx
  425c82:	popf   
  425c83:	or     DWORD PTR [ebx],0x75
  425c86:	ins    BYTE PTR es:[edi],dx
  425c87:	inc    ebx
  425c88:	cmp    al,0x44
  425c8a:	rol    BYTE PTR [edx],0x26
  425c8d:	mov    ds:0x67702708,eax
  425c92:	dec    ebp
  425c93:	aad    0x73
  425c95:	pop    es
  425c96:	add    al,0x7c
  425c98:	imul   esp,DWORD PTR [esi-0x12],0x65fde35e
  425c9f:	stos   DWORD PTR es:[edi],eax
  425ca0:	ins    DWORD PTR es:[edi],dx
  425ca1:	cli    
  425ca2:	pushf  
  425ca3:	mov    gs,WORD PTR [ecx-0x33]
  425ca6:	dec    ebp
  425ca7:	xor    ebp,ebp
  425ca9:	mov    ebx,0x32cefe8
  425cae:	mov    fs,WORD PTR [eax]
  425cb0:	cmp    edi,eax
  425cb2:	cmp    esp,DWORD PTR [ebp-0x431d070f]
  425cb8:	fdiv   QWORD PTR [esi-0x4b9b70ee]
  425cbe:	add    eax,0x2231f88e
  425cc3:	(bad)  
  425cc4:	out    0x7e,eax
  425cc6:	mov    al,0x22
  425cc8:	cld    
  425cc9:	mov    al,0x1e
  425ccb:	sub    cl,ch
  425ccd:	lods   al,BYTE PTR ds:[esi]
  425cce:	mov    eax,0x4cf1e574
  425cd3:	jmp    0x281934da
  425cd8:	stos   BYTE PTR es:[edi],al
  425cd9:	repz ret 0x7c49
  425cdd:	lods   eax,DWORD PTR ds:[esi]
  425cde:	jmp    0x1b5:0x507669f7
  425ce5:	jo     0x425cfa
  425ce7:	jmp    0xebe1:0x5ba55d22
  425cee:	fdivr  DWORD PTR [ebx]
  425cf0:	adc    DWORD PTR [ebp-0x713e5882],esi
  425cf6:	jns    0x425c8c
  425cf8:	and    BYTE PTR [ebp-0x6f],dh
  425cfb:	and    al,0x21
  425cfd:	dec    edx
  425cfe:	xchg   ebp,eax
  425cff:	mov    al,ds:0xd245d5c8
  425d04:	mov    eax,0xe037f456
  425d09:	sbb    edx,DWORD PTR [ebp+eax*2-0x48ddcee9]
  425d10:	ins    DWORD PTR es:[edi],dx
  425d11:	ror    DWORD PTR [edx-0x4f],1
  425d14:	aas    
  425d15:	aaa    
  425d16:	lods   eax,DWORD PTR ds:[esi]
  425d17:	and    eax,0xc5dd51ed
  425d1c:	mov    ch,0x85
  425d1e:	retf   
  425d1f:	fld    TBYTE PTR [esi]
  425d21:	sub    al,0x2
  425d23:	jmp    0x1509:0x45e8eee0
  425d2a:	add    BYTE PTR [edi+0x13],cl
  425d2d:	pop    esp
  425d2e:	not    ebx
  425d30:	stc    
  425d31:	jle    0x425da4
  425d33:	cmp    eax,0xeec43f87
  425d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d39:	sbb    al,0xac
  425d3b:	shl    BYTE PTR [esi-0x7365525a],cl
  425d41:	sub    cl,BYTE PTR [eax-0x77fc4722]
  425d47:	je     0x425d9d
  425d49:	adc    dl,ch
  425d4b:	dec    edx
  425d4c:	int    0x30
  425d4e:	jbe    0x425dc8
  425d50:	mov    dh,BYTE PTR [esi]
  425d52:	or     ebx,edx
  425d54:	out    dx,eax
  425d55:	and    eax,0x8be4bf0f
  425d5a:	mov    cl,0xb9
  425d5c:	dec    ebp
  425d5d:	jbe    0x425d07
  425d5f:	popf   
  425d60:	xlat   BYTE PTR ds:[ebx]
  425d61:	jl     0x425d18
  425d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d64:	mov    dl,0xc7
  425d66:	mov    edi,0xb941c09a
  425d6b:	dec    edx
  425d6c:	jb     0x425ddb
  425d6e:	pop    edx
  425d6f:	test   dl,al
  425d71:	pop    esp
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [edi+ecx*8-0x29]
  425d80:	je     0x425dc1
  425d82:	(bad)  
  425d84:	add    DWORD PTR [eax],eax
  425d86:	clc    
  425d87:	add    al,0x0
  425d89:	add    ch,al
  425d8b:	lea    esi,[edi+edx*2+0x711ca8ef]
  425d92:	daa    
  425d93:	aad    0x32
  425d95:	sahf   
  425d96:	xchg   eax,esi
  425d98:	mov    ah,0x6c
  425d9a:	aad    0x98
  425d9c:	popf   
  425d9d:	mov    cl,dh
  425d9f:	cmp    dh,bh
  425da1:	stos   BYTE PTR es:[edi],al
  425da2:	aam    0x5e
  425da4:	lea    esp,[esi]
  425da6:	(bad)  [eax]
  425da8:	or     BYTE PTR [eax+ebp*4],al
  425dab:	push   eax
  425dac:	imul   DWORD PTR [edi]
  425dae:	gs sub eax,0x86917556
  425db4:	xor    BYTE PTR [esi-0x39],cl
  425db7:	push   edx
  425db8:	add    al,0xb4
  425dba:	jmp    0xc40552d7
  425dbf:	inc    esi
  425dc0:	mov    edx,0x509a0d79
  425dc5:	arpl   WORD PTR [esi-0x6f651949],dx
  425dcb:	inc    ebx
  425dcc:	push   eax
  425dcd:	ret    
  425dce:	sub    BYTE PTR [edx+0x70],ch
  425dd1:	mov    dh,0xcc
  425dd3:	mov    DWORD PTR [ebx],ebp
  425dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dd6:	mov    esp,0x7df0472e
  425ddb:	icebp  
  425ddc:	(bad)  
  425ddd:	int3   
  425dde:	push   edi
  425ddf:	jmp    0x425d9b
  425de1:	imul   eax,esp,0xe5f93a7d
  425de7:	inc    ebp
  425de8:	mov    ds,WORD PTR [ecx-0x2fa169fe]
  425dee:	ins    DWORD PTR es:[edi],dx
  425def:	adc    DWORD PTR [esi-0x7cb981df],ebx
  425df5:	jo     0x425e15
  425df7:	(bad)  
  425df8:	in     al,0x1b
  425dfa:	pop    ecx
  425dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dfc:	mov    dh,0x3
  425dfe:	add    bh,dh
  425e00:	xor    al,0x35
  425e02:	(bad)  
  425e03:	(bad)  
  425e05:	cmp    ecx,DWORD PTR [ebx-0x29]
  425e08:	mov    ebp,0xbef767a3
  425e0d:	add    eax,0xb20f4b77
  425e12:	push   ds
  425e13:	add    eax,0x9abe4fde
  425e18:	sbb    bl,cl
  425e1a:	jmp    0x425dfc
  425e1c:	mov    DWORD PTR [edx-0x16],esi
  425e1f:	clc    
  425e20:	jbe    0x425e96
  425e22:	sbb    dh,BYTE PTR [ecx+0x2fcd2605]
  425e28:	fmul   QWORD PTR [eax]
  425e2a:	push   cs
  425e2b:	shl    DWORD PTR [esi+0xf],cl
  425e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e2f:	cdq    
  425e30:	sub    BYTE PTR [esi+edi*8+0x4bb18e9a],0xcb
  425e38:	cld    
  425e39:	ss ja  0x425e77
  425e3c:	xchg   esi,eax
  425e3d:	lahf   
  425e3e:	jge    0x425ebe
  425e40:	js     0x425e46
  425e42:	sar    BYTE PTR [edi+eiz*8+0x13],0x38
  425e47:	mov    cl,0xd2
  425e49:	inc    ecx
  425e4a:	push   0x867f9dd0
  425e4f:	ss ins BYTE PTR es:[edi],dx
  425e51:	retf   0xa59a
  425e54:	stos   DWORD PTR es:[edi],eax
  425e55:	cmp    dh,BYTE PTR [eax]
  425e57:	test   eax,0x2ab1b285
  425e5c:	test   cl,dl
  425e5e:	push   ss
  425e5f:	pop    ebp
  425e60:	mov    al,ds:0xc9a1de70
  425e65:	sbb    eax,0xd22f1935
  425e6a:	inc    eax
  425e6b:	inc    esi
  425e6c:	dec    ebx
  425e6d:	retf   0x22b7
  425e70:	dec    edx
  425e71:	mov    ebx,DWORD PTR [ebp+eiz*8-0x5ca03956]
  425e78:	xchg   ebx,eax
  425e79:	hlt    
  425e7a:	js     0x425e38
  425e7c:	ins    DWORD PTR es:[edi],dx
  425e7d:	stos   BYTE PTR es:[edi],al
  425e7e:	ficomp WORD PTR [ecx+0x43]
  425e81:	inc    ecx
  425e82:	ins    DWORD PTR es:[edi],dx
  425e83:	loope  0x425eb8
  425e85:	call   0x30844a3a
  425e8a:	xlat   BYTE PTR ds:[ebx]
  425e8b:	mov    eax,0x59fb3ac9
  425e90:	adc    BYTE PTR [edx-0x3a3c6302],0xfe
  425e97:	je     0x425e82
  425e99:	sub    edx,DWORD PTR [eax-0x7a]
  425e9c:	jp     0x425e27
  425e9e:	sar    al,0x93
  425ea1:	lahf   
  425ea2:	inc    edi
  425ea3:	leave  
  425ea4:	aaa    
  425ea5:	and    ebp,DWORD PTR [eax]
  425ea7:	mov    esp,0xc307fcda
  425eac:	in     eax,dx
  425ead:	out    0x65,eax
  425eaf:	cmp    DWORD PTR [edx+0x28ac05f3],esp
  425eb5:	js     0x425e6c
  425eb7:	ror    DWORD PTR [esi+0x0],1
  425eba:	mov    ds:0x9c7685a6,eax
  425ebf:	in     al,dx
  425ec0:	test   eax,0x96bc5879
  425ec5:	mov    edx,0xbdefe60d
  425eca:	dec    ebp
  425ecb:	aaa    
  425ecc:	retf   0xd216
  425ecf:	push   ecx
  425ed0:	mov    esp,0x9e60eb81
  425ed5:	fld    DWORD PTR [ecx-0x1b7574ca]
  425edb:	jmp    0x934c27c2
  425ee0:	mov    ah,0x22
  425ee2:	inc    eax
  425ee3:	and    eax,0xfe26dc18
  425ee8:	and    BYTE PTR [ebx+0x1d5c2e30],dl
  425eee:	xchg   ebx,ecx
  425ef0:	cs push ebx
  425ef2:	mov    esi,0x98835aef
  425ef7:	outs   dx,DWORD PTR ds:[esi]
  425ef8:	push   ebx
  425ef9:	xlat   BYTE PTR ds:[ebx]
  425efa:	mov    ah,0x92
  425efc:	inc    edx
  425efd:	mov    ds:0x4bc1f9b5,eax
  425f02:	das    
  425f03:	pop    ebx
  425f04:	cdq    
  425f05:	dec    edi
  425f06:	pop    edi
  425f07:	jmp    0x425f68
  425f09:	std    
  425f0a:	inc    eax
  425f0b:	pop    es
  425f0c:	jno    0x425eb7
  425f0e:	xchg   edx,eax
  425f0f:	fcomp  DWORD PTR [eax]
  425f11:	pop    ebp
  425f12:	pop    ds
  425f13:	loop   0x425f0d
  425f15:	aas    
  425f16:	fs call 0xa37a043b
  425f1c:	add    DWORD PTR [esi+0x40b2e62],esp
  425f22:	sbb    dl,bh
  425f24:	sar    BYTE PTR [edi-0x7e],1
  425f27:	retf   
  425f28:	jbe    0x425fa9
  425f2a:	sbb    al,0x68
  425f2c:	sbb    esi,edx
  425f2e:	cmc    
  425f2f:	test   esp,edx
  425f31:	cwde   
  425f32:	xchg   esi,eax
  425f33:	rcr    ecx,cl
  425f35:	gs push ecx
  425f37:	out    0x61,eax
  425f39:	rcr    BYTE PTR [ebx-0x7],0x23
  425f3d:	mov    DWORD PTR [edx-0x436dd673],ebx
  425f43:	lea    eax,[edx-0x1eaedae3]
  425f49:	sub    BYTE PTR [esi+edi*2],al
  425f4c:	scas   al,BYTE PTR es:[edi]
  425f4d:	dec    edi
  425f4e:	xor    DWORD PTR [esi*8+0x5ad2873e],esi
  425f55:	out    dx,al
  425f56:	fwait
  425f57:	jl     0x425fb3
  425f59:	xor    edi,esp
  425f5b:	cmc    
  425f5c:	jne    0x425f8a
  425f5e:	pop    es
  425f5f:	inc    ecx
  425f60:	js     0x425fd1
  425f62:	(bad)  [edi+eax*8]
  425f65:	inc    esi
  425f66:	(bad)  
  425f68:	pop    ebx
  425f69:	push   0x44a7d8a3
  425f6e:	xchg   ah,ch
  425f70:	xor    dh,bl
  425f72:	mov    dl,0x92
  425f74:	call   0x4ff6:0x1e58a18f
  425f7b:	mov    al,0xae
  425f7d:	mul    BYTE PTR ds:0x5e4315a6
  425f83:	fisubr DWORD PTR [edx+0x39]
  425f86:	sbb    esp,DWORD PTR [eax+0x5e38e886]
  425f8c:	mov    ds:0xfdb50780,eax
  425f91:	addr16 jmp 0x4280:0xd5c7e354
  425f99:	xlat   BYTE PTR ds:[ebx]
  425f9a:	out    0x88,al
  425f9c:	aad    0xbc
  425f9e:	iret   
  425f9f:	mov    al,0x8a
  425fa1:	fbld   TBYTE PTR [ecx-0x2cfaa564]
  425fa7:	out    0xf8,eax
  425fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425faa:	pop    ss
  425fab:	jmp    0x1b86c138
  425fb0:	test   ecx,ebx
  425fb2:	xor    eax,0x3caf6491
  425fb7:	les    edx,FWORD PTR [edi]
  425fb9:	(bad)  
  425fba:	mov    cl,0x22
  425fbc:	cwde   
  425fbd:	pop    es
  425fbe:	and    al,0x44
  425fc0:	mov    cl,0x55
  425fc2:	out    0xa8,al
  425fc4:	adc    BYTE PTR [ebx+0x234a34ce],dl
  425fca:	mov    edi,0x768b5840
  425fcf:	dec    esi
  425fd0:	push   0x3d
  425fd2:	je     0x425fb7
  425fd4:	ins    DWORD PTR es:[edi],dx
  425fd5:	mov    edi,0xcc628f91
  425fda:	xor    eax,0xfef67601
  425fdf:	fcomi  st,st(7)
  425fe1:	std    
  425fe2:	adc    al,0xb8
  425fe4:	mov    al,BYTE PTR [edi]
  425fe6:	test   BYTE PTR [eax+0x4e],ch
  425fe9:	xor    eax,0x27962ac7
  425fee:	pop    DWORD PTR [ecx]
  425ff0:	es iret 
  425ff2:	js     0x425f88
  425ff4:	push   ss
  425ff5:	test   edi,eax
  425ff7:	pop    eax
  425ff8:	dec    ecx
  425ff9:	cs mov edi,0x86d11f74
  425fff:	lahf   
  426000:	jl     0x425f90
  426002:	add    DWORD PTR [edx+0x3c],0x6
  426006:	fcomp  QWORD PTR [edi-0x7a]
  426009:	retf   0xf1fb
  42600c:	(bad)  
  42600d:	aaa    
  42600e:	popa   
  42600f:	in     al,dx
  426010:	sar    DWORD PTR [ebx],0x33
  426013:	mov    ds:0x46a6b2d0,eax
  426018:	call   0x968f:0x440ac7af
  42601f:	test   al,0xaf
  426021:	fcom   st(7)
  426023:	(bad)  
  426024:	fnsave [ecx+edx*1]
  426027:	pop    es
  426028:	pop    ebp
  426029:	data16 cmc 
  42602b:	fs sbb eax,0xaf39d6f1
  426031:	(bad)  
  426033:	jno    0x425fc1
  426035:	push   esp
  426036:	and    eax,0x752cf93
  42603b:	lahf   
  42603c:	mov    BYTE PTR [ebp+0x4e],ch
  42603f:	je     0x426098
  426041:	ds mov dl,0x1
  426044:	adc    al,0x53
  426046:	cmp    ebx,DWORD PTR [esi+0x2d]
  426049:	jle    0x426057
  42604b:	jecxz  0x42602c
  42604d:	push   cs
  42604e:	dec    eax
  42604f:	std    
  426050:	scas   eax,DWORD PTR es:[edi]
  426051:	bnd jge 0x4260b6
  426054:	mov    ch,0xba
  426056:	xchg   DWORD PTR [ecx],esp
  426058:	outs   dx,BYTE PTR ds:[esi]
  426059:	ret    0x8738
  42605c:	pusha  
  42605d:	jecxz  0x426005
  42605f:	push   esi
  426060:	inc    esi
  426061:	xor    ch,dh
  426063:	or     eax,0x6862d670
  426068:	in     eax,0x3d
  42606a:	sbb    al,BYTE PTR [ecx-0x45258ff8]
  426070:	add    al,0x98
  426072:	xchg   ebp,eax
  426073:	sub    dl,BYTE PTR [edi-0x693493c0]
  426079:	cmp    cl,BYTE PTR [esi+0x32]
  42607c:	cmp    eax,0xf36b4976
  426081:	push   eax
  426082:	xor    edi,DWORD PTR [edi]
  426084:	push   esp
  426085:	out    dx,al
  426086:	push   cs
  426087:	fmul   st,st(5)
  426089:	xlat   BYTE PTR ds:[ebx]
  42608a:	inc    esi
  42608b:	xlat   BYTE PTR ds:[ebx]
  42608c:	pop    ss
  42608d:	daa    
  42608e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42608f:	cmp    BYTE PTR [eax-0x430de0e0],al
  426095:	jmp    0x426031
  426097:	sbb    al,0x82
  426099:	add    cl,cl
  42609b:	retf   0x3d34
  42609e:	not    BYTE PTR [esi+0xc]
  4260a1:	stc    
  4260a2:	(bad)  
  4260a3:	scas   eax,DWORD PTR es:[edi]
  4260a4:	stc    
  4260a5:	pop    esp
  4260a6:	adc    esi,DWORD PTR [edi+edi*1-0x76a7c064]
  4260ad:	cs cli 
  4260af:	cmp    al,bh
  4260b1:	and    BYTE PTR [edx-0x44],cl
  4260b4:	adc    DWORD PTR [ebp+ecx*1-0x7a694e93],eax
  4260bb:	xlat   BYTE PTR ds:[ebx]
  4260bc:	iret   
  4260bd:	fadd   DWORD PTR [ebx-0x6]
  4260c0:	out    dx,al
  4260c1:	mov    ecx,0xf63a97b2
  4260c6:	lods   al,BYTE PTR ds:[esi]
  4260c7:	and    DWORD PTR [ebp+0xb71036f],ebx
  4260cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260ce:	lods   eax,DWORD PTR ds:[esi]
  4260cf:	sub    dh,BYTE PTR [edi]
  4260d1:	pop    es
  4260d2:	mov    esi,DWORD PTR [ecx-0x17]
  4260d5:	out    dx,al
  4260d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260d7:	shr    BYTE PTR [ebx+0x5d],1
  4260da:	or     bh,BYTE PTR [eax-0x6f]
  4260dd:	pop    edi
  4260de:	in     al,0xa2
  4260e0:	or     DWORD PTR [esi+0x6ac2c69d],ebx
  4260e6:	push   0xffffffe9
  4260e8:	adc    bl,BYTE PTR [eax]
  4260ea:	sahf   
  4260eb:	popf   
  4260ec:	add    BYTE PTR [edx-0x7be39e9f],dh
  4260f2:	xchg   edi,eax
  4260f3:	idiv   esp
  4260f5:	mov    cl,0xb0
  4260f7:	pop    ss
  4260f8:	fdivr  DWORD PTR [ebp-0x37]
  4260fb:	sub    eax,0x82503b3d
  426100:	out    0xfc,al
  426102:	imul   esi,DWORD PTR [ecx+edi*2+0x3632f998],0xbafbae36
  42610d:	addr16 out 0xce,al
  426110:	xchg   esi,eax
  426111:	in     eax,0x14
  426113:	xchg   ebx,eax
  426114:	mov    edx,0x7190f117
  426119:	jnp    0x426127
  42611b:	sub    ch,BYTE PTR [edx-0x53]
  42611e:	push   ebx
  42611f:	inc    ebx
  426120:	push   0xffffffba
  426122:	int    0xad
  426124:	mov    ch,0xab
  426126:	scas   eax,DWORD PTR es:[edi]
  426127:	push   ds
  426128:	ja     0x426131
  42612a:	xchg   edi,eax
  42612b:	cmp    DWORD PTR [edx-0x657be250],esi
  426131:	retf   0x7325
  426134:	ins    DWORD PTR es:[edi],dx
  426135:	rcr    BYTE PTR [ebp-0x69],cl
  426138:	nop
  426139:	(bad)  [ebx+ebx*8]
  42613c:	mov    ebp,0xbabfdbd9
  426141:	test   eax,0x37132524
  426146:	inc    eax
  426147:	mov    bh,0x2a
  426149:	pop    ebx
  42614a:	icebp  
  42614b:	mov    ah,0xfb
  42614d:	sub    DWORD PTR [ebx-0x3b1f80d6],edi
  426153:	fnstcw WORD PTR [ebp+0x7990fb17]
  426159:	pop    ss
  42615a:	retf   0x3d72
  42615d:	and    dh,BYTE PTR [esi+0x17]
  426160:	jp     0x4261c9
  426162:	fmul   QWORD PTR [eax-0x57]
  426165:	jmp    0x560e1b79
  42616a:	xchg   ebx,eax
  42616b:	mov    ah,0xbb
  42616d:	mov    al,0x95
  42616f:	sub    al,0xd8
  426171:	push   es
  426172:	repz pop es
  426174:	pop    edx
  426175:	sahf   
  426176:	mov    DWORD PTR [edx+ecx*2+0x42],esi
  42617a:	sub    dh,BYTE PTR [edx+0x5c150bb6]
  426180:	mov    ?,WORD PTR [edx+edx*4-0x58c6e7dc]
  426187:	sbb    al,0x14
  426189:	cdq    
  42618a:	stc    
  42618b:	inc    edi
  42618c:	jbe    0x426165
  42618e:	stos   BYTE PTR es:[edi],al
  42618f:	jp     0x426174
  426191:	pop    eax
  426192:	cwde   
  426193:	call   0x5482:0xfe22984e
  42619a:	mov    bl,0xf9
  42619c:	push   eax
  42619d:	add    DWORD PTR [eax+ebp*8+0x740fd5e8],0x69f1141c
  4261a8:	pop    ss
  4261a9:	imul   esi,eax,0x45fcb433
  4261af:	sub    al,0x45
  4261b1:	or     BYTE PTR [ecx],cl
  4261b3:	stos   DWORD PTR es:[edi],eax
  4261b4:	aad    0x39
  4261b6:	jle    0x426212
  4261b8:	adc    BYTE PTR [ecx+0x7074a385],0x3c
  4261bf:	xor    DWORD PTR [esi-0x70980fa7],edx
  4261c5:	stos   DWORD PTR es:[edi],eax
  4261c6:	xchg   DWORD PTR [esi-0xe],ebx
  4261c9:	dec    ebx
  4261ca:	arpl   WORD PTR [esi+0x43e571a3],cx
  4261d0:	call   0xb34faa5b
  4261d5:	sub    dh,bl
  4261d7:	ret    0x7f3
  4261da:	and    al,0x73
  4261dc:	cmp    bl,BYTE PTR [ecx-0x54cd2f67]
  4261e2:	xor    DWORD PTR [edi+0x78],edx
  4261e5:	fsub   st,st(7)
  4261e7:	jnp    0x426171
  4261e9:	sbb    DWORD PTR [ebx+0x69],eax
  4261ec:	lods   al,BYTE PTR ds:[esi]
  4261ed:	sbb    al,0x38
  4261ef:	repnz dec eax
  4261f1:	test   BYTE PTR [edi+0x736d3a50],cl
  4261f7:	jl     0x4261a1
  4261f9:	mov    dh,0x4a
  4261fb:	in     al,dx
  4261fc:	test   al,0xb0
  4261fe:	mov    edx,0x96fa13e4
  426203:	add    al,0x1a
  426205:	mov    ebp,0xde785cb9
  42620a:	push   edx
  42620b:	mov    dl,0x61
  42620d:	mov    eax,DWORD PTR [edi]
  42620f:	pop    ebp
  426210:	lea    esp,[eax-0x708ff4b4]
  426216:	cli    
  426217:	inc    esi
  426218:	push   ds
  426219:	call   0xab80:0xe70f3a95
  426220:	mov    bh,0xd5
  426222:	xor    DWORD PTR [ebx+0x1d],edi
  426225:	jmp    0x12ce:0xd1f5765
  42622c:	rol    DWORD PTR ds:0x528dceb1,0x49
  426233:	jecxz  0x426288
  426235:	adc    ch,BYTE PTR [esi]
  426237:	push   ebp
  426238:	and    ebp,DWORD PTR [edx-0x54]
  42623b:	mov    bh,0x5c
  42623d:	or     ah,BYTE PTR [esi]
  42623f:	pusha  
  426240:	cli    
  426241:	mov    al,ds:0xe98cfa25
  426246:	outs   dx,DWORD PTR ds:[esi]
  426247:	sbb    dl,BYTE PTR [ebx-0x44]
  42624a:	mov    ds:0x933a4f96,eax
  42624f:	mov    edx,0xf6c5f65b
  426254:	lldt   WORD PTR [eax+0x607b4fc6]
  42625b:	xor    DWORD PTR ds:0xd387fbe,esp
  426261:	sub    eax,0xaf53d856
  426266:	push   cs
  426267:	lods   eax,DWORD PTR ds:[esi]
  426268:	cmp    esp,ebx
  42626a:	(bad)  
  42626b:	out    0xb5,eax
  42626d:	jge    0x4262c9
  42626f:	lock test ebx,edx
  426272:	retf   0x94e3
  426275:	aas    
  426276:	cli    
  426277:	sti    
  426278:	(bad)  
  426279:	fnstsw WORD PTR [esi+0x321b62cf]
  42627f:	and    al,0x87
  426281:	sahf   
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	ins    BYTE PTR es:[edi],dx
  42628f:	rol    BYTE PTR [edx+edi*4],0xd1
  426293:	fild   DWORD PTR [ecx]
  426295:	add    al,bh
  426297:	add    al,0x0
  426299:	add    ch,ch
  42629b:	call   0xa41c4cee
  4262a0:	(bad)  
  4262a1:	in     al,dx
  4262a2:	data16 add al,0xca
  4262a5:	mov    ebp,0xd89cc30
  4262aa:	stos   DWORD PTR es:[edi],eax
  4262ab:	loope  0x426292
  4262ad:	ins    DWORD PTR es:[edi],dx
  4262ae:	mov    edx,0xc7e6b141
  4262b3:	clc    
  4262b4:	xchg   BYTE PTR [edx],bh
  4262b6:	loopne 0x42632d
  4262b8:	sub    esp,0x741580cb
  4262be:	inc    ebp
  4262bf:	outs   dx,DWORD PTR ds:[esi]
  4262c0:	icebp  
  4262c1:	adc    edi,0x54
  4262c4:	lock pop ds
  4262c6:	test   ch,0xe3
  4262c9:	adc    eax,0xeb2bf32e
  4262ce:	or     ecx,DWORD PTR [ebx+0x14b16286]
  4262d4:	pop    eax
  4262d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262d6:	popf   
  4262d7:	fwait
  4262d8:	inc    eax
  4262d9:	pop    es
  4262da:	cmp    al,0x9f
  4262dc:	das    
  4262dd:	sti    
  4262de:	das    
  4262df:	inc    edx
  4262e0:	jnp    0x4262d4
  4262e2:	(bad)
  4262e6:	retf   0xfd49
  4262e9:	imul   edi,ecx,0xffffffe2
  4262ec:	cmp    eax,0x30a4e77c
  4262f1:	dec    esp
  4262f2:	adc    DWORD PTR [ebp-0x5e],ebp
  4262f5:	rol    esi,cl
  4262f7:	mov    bh,0xdb
  4262f9:	or     edx,edx
  4262fb:	adc    al,0xb2
  4262fd:	jmp    0xa256:0x71ddbf1c
  426304:	aam    0x1d
  426306:	add    al,0x49
  426308:	sub    al,0x1a
  42630a:	mov    ch,BYTE PTR [ecx+0x11]
  42630d:	aam    0x69
  42630f:	(bad)  
  426310:	mov    ch,0xdf
  426312:	xor    eax,0x35d87591
  426317:	fwait
  426318:	push   edi
  426319:	es jmp 0x23823fe4
  42631f:	mov    ebx,0xaeeae068
  426324:	adc    dl,ah
  426326:	add    edi,DWORD PTR [edi-0x6d]
  426329:	sbb    BYTE PTR ds:0x2931ed9,ah
  42632f:	test   ecx,ecx
  426331:	test   eax,0xdf3192de
  426336:	(bad)  
  426337:	cmp    eax,0x664697be
  42633c:	add    ebp,edx
  42633e:	arpl   WORD PTR [ecx],si
  426340:	dec    edi
  426341:	rol    DWORD PTR ds:[edi-0x46],1
  426345:	mov    ds,WORD PTR [edx+eax*8-0x2cbaca97]
  42634c:	mov    esi,0xf95e4723
  426351:	aas    
  426352:	pop    esi
  426353:	jl     0x426372
  426355:	loopne 0x4263b0
  426357:	mov    ch,0x94
  426359:	pop    ss
  42635a:	inc    eax
  42635b:	lock push cs
  42635d:	xlat   BYTE PTR ds:[ebx]
  42635e:	mov    ch,0x44
  426360:	mov    ch,0x92
  426362:	xchg   esi,eax
  426363:	push   esi
  426364:	cmp    esi,DWORD PTR [edi+0x22]
  426367:	(bad)  
  426368:	or     al,0x19
  42636a:	add    al,0x8e
  42636c:	pop    ds
  42636d:	and    DWORD PTR [ecx-0x42],ecx
  426370:	xchg   ecx,eax
  426371:	push   ds
  426372:	mov    bh,0x4f
  426374:	add    eax,0x71cff7ba
  426379:	sahf   
  42637a:	jb     0x4263f9
  42637c:	xchg   BYTE PTR [edi],ah
  42637e:	cmp    esp,DWORD PTR [eax+edi*4+0x44ffb6f2]
  426385:	repnz test DWORD PTR [esi],ecx
  426388:	dec    esi
  426389:	add    DWORD PTR [edi-0x4016c928],eax
  42638f:	cld    
  426390:	inc    edi
  426391:	lock adc eax,0x8dcfec3d
  426397:	nop
  426398:	out    dx,al
  426399:	jb     0x4263a1
  42639b:	and    cl,BYTE PTR [edx-0xf77ad7b]
  4263a1:	add    bh,BYTE PTR [ebx-0x5f]
  4263a4:	pop    es
  4263a5:	cdq    
  4263a6:	call   0x7275:0xfe9d7b76
  4263ad:	mov    dh,0x59
  4263af:	loop   0x4263ea
  4263b1:	xchg   esp,eax
  4263b2:	jno    0x426357
  4263b4:	push   ss
  4263b5:	pop    ebx
  4263b6:	es add al,0x30
  4263b9:	inc    eax
  4263ba:	cmp    eax,0x4bfd803f
  4263bf:	adc    eax,0x4c4ccc95
  4263c4:	mov    ecx,0xb6dd9993
  4263c9:	cmp    BYTE PTR [esp+ecx*1+0x209fa718],bl
  4263d0:	aas    
  4263d1:	out    dx,eax
  4263d2:	jns    0x426382
  4263d4:	out    0xe6,al
  4263d6:	or     BYTE PTR [esi+ebp*1-0xf],bl
  4263da:	sbb    DWORD PTR [ecx-0x3e1ef5d5],ecx
  4263e0:	mov    eax,ds:0x5a9f965f
  4263e5:	fwait
  4263e6:	pop    ss
  4263e7:	fnstcw WORD PTR [ebx+0x279afacd]
  4263ed:	mov    DWORD PTR [ecx+0x74],ebp
  4263f0:	fdivp  st(3),st
  4263f2:	sub    eax,0x1a8342e6
  4263f7:	retf   0x4e37
  4263fa:	add    eax,0xc04ec4b7
  4263ff:	(bad)  
  426400:	rep outs dx,BYTE PTR ds:[esi]
  426402:	sbb    al,ah
  426404:	cli    
  426405:	pop    esp
  426406:	inc    eax
  426407:	retf   0x33ab
  42640a:	or     al,0x7a
  42640c:	jmp    0x51c462ef
  426411:	mov    cl,BYTE PTR [ecx]
  426413:	inc    edx
  426414:	and    al,0x29
  426416:	addr16 adc ebx,ebp
  426419:	scas   eax,DWORD PTR es:[edi]
  42641a:	ja     0x4263a8
  42641c:	stc    
  42641d:	mov    ds:0xd313b91a,eax
  426422:	enter  0x708f,0x2
  426426:	pop    ebp
  426427:	pop    ecx
  426428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426429:	std    
  42642a:	popf   
  42642b:	es dec esi
  42642d:	xor    cl,bh
  42642f:	sti    
  426430:	push   eax
  426431:	sahf   
  426432:	test   BYTE PTR [ebp-0x133f36e6],0x4a
  426439:	bnd ja 0x4263df
  42643c:	sbb    al,bl
  42643e:	gs ss (bad) 
  426441:	sbb    eax,0x92d62249
  426446:	push   ss
  426447:	inc    edi
  426448:	ret    0x9a0b
  42644b:	outs   dx,DWORD PTR ds:[esi]
  42644c:	dec    edx
  42644d:	sub    eax,0x8784400e
  426452:	inc    esi
  426453:	sub    BYTE PTR [ebx+0x7a],0x8e
  426457:	mov    DWORD PTR [edi+0x732b59ca],0xa6590e9a
  426461:	mov    cl,al
  426463:	shr    BYTE PTR [edi+0x23d32a0d],1
  426469:	lock xchg ebx,eax
  42646b:	xor    eax,0x581193d3
  426470:	push   cs
  426471:	sbb    al,cl
  426473:	bound  ebx,QWORD PTR [edi+ebx*1-0x19]
  426477:	mov    al,ds:0xa6b657b4
  42647c:	inc    esi
  42647d:	push   es
  42647e:	(bad)  
  42647f:	lahf   
  426480:	shr    DWORD PTR [edx+0x7f8c51ca],0x6e
  426487:	hlt    
  426488:	xchg   ebp,eax
  426489:	sub    al,0xe7
  42648b:	push   esi
  42648c:	les    ecx,FWORD PTR [edx]
  42648e:	popa   
  42648f:	xor    edi,esi
  426491:	or     al,0x7a
  426493:	push   ebp
  426494:	pop    eax
  426495:	jne    0x426473
  426497:	in     al,0xe
  426499:	sahf   
  42649a:	fnstcw WORD PTR [edi]
  42649c:	call   0x3a0646b
  4264a1:	cmp    al,0xbe
  4264a3:	mov    dl,0xe
  4264a5:	js     0x4264b9
  4264a7:	js     0x4264d6
  4264a9:	imul   ebx,DWORD PTR ds:0x62e44fce,0x5
  4264b0:	mov    edi,0x4bd16147
  4264b5:	cmp    al,0xe4
  4264b7:	adc    eax,0x33a7a58f
  4264bc:	(bad)  
  4264bd:	jmp    0x426440
  4264bf:	das    
  4264c0:	rep ins BYTE PTR es:[edi],dx
  4264c2:	mov    dh,0x8c
  4264c4:	adc    BYTE PTR [eax+0x5c],ah
  4264c7:	bound  ebp,QWORD PTR [edx+0x11d8229b]
  4264cd:	xchg   DWORD PTR [esi+0x30],esp
  4264d0:	pop    edi
  4264d1:	or     ebp,DWORD PTR [edx]
  4264d3:	mov    ds:0x2ecdcf82,eax
  4264d8:	out    0x90,al
  4264da:	popa   
  4264db:	shr    BYTE PTR ds:0x56f409ff,0x74
  4264e2:	sti    
  4264e3:	inc    ebp
  4264e4:	push   edi
  4264e5:	and    BYTE PTR [ecx-0x5a],0xdf
  4264e9:	(bad)  [ebx+0x355e43a7]
  4264ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264f0:	mov    dh,BYTE PTR [edx+eiz*8-0x3c]
  4264f4:	xchg   edx,eax
  4264f5:	jmp    0x1c2214d
  4264fa:	jns    0x426573
  4264fc:	and    bh,BYTE PTR [ecx-0xf]
  4264ff:	jbe    0x42656e
  426501:	add    cl,BYTE PTR [ecx]
  426503:	pop    ebx
  426504:	iret   
  426505:	cmp    edi,DWORD PTR [ecx-0x72]
  426508:	pop    eax
  426509:	inc    edi
  42650a:	and    eax,DWORD PTR [eax+ebx*1+0x70fe35de]
  426511:	mov    dh,0xcf
  426513:	xor    bl,BYTE PTR [edi]
  426515:	pop    ds
  426516:	jbe    0x4264fb
  426518:	cmp    ch,BYTE PTR [edx-0x55fcef74]
  42651e:	hlt    
  42651f:	cwde   
  426520:	xchg   edi,eax
  426521:	cs aas 
  426523:	push   edx
  426524:	jo     0x426509
  426526:	cmp    DWORD PTR [edi+0x4f8e9783],edx
  42652c:	jge    0x426544
  42652e:	xchg   BYTE PTR [ebp-0x53],ch
  426531:	jo     0x426554
  426533:	ja     0x4265b4
  426535:	dec    eax
  426536:	popa   
  426537:	push   eax
  426538:	(bad)  
  426539:	fiadd  WORD PTR [edi+ebp*8]
  42653c:	xor    eax,0xbadffec0
  426541:	scas   eax,DWORD PTR es:[edi]
  426542:	sub    eax,0xaaaee5d4
  426547:	xlat   BYTE PTR ds:[ebx]
  426548:	mov    ecx,0xa9d01bd5
  42654d:	pop    eax
  42654e:	mov    edx,DWORD PTR [ecx-0xf]
  426551:	mov    edi,0x387fb100
  426556:	adc    al,0x99
  426558:	pop    esp
  426559:	leave  
  42655a:	(bad)  
  42655b:	lahf   
  42655c:	out    0xc6,al
  42655e:	inc    esp
  42655f:	or     al,0x97
  426561:	cmc    
  426562:	and    eax,0xb42dc1a3
  426567:	out    dx,al
  426568:	push   edi
  426569:	xor    ecx,0xffffffc8
  42656c:	mov    eax,0x59a5f38e
  426571:	mov    dx,0x2289
  426575:	test   esi,edi
  426577:	addr16 inc esp
  426579:	push   ebp
  42657a:	bound  ebp,QWORD PTR [edx]
  42657c:	add    al,0xc1
  42657e:	cmp    al,0xe1
  426580:	push   edi
  426581:	inc    edi
  426582:	das    
  426583:	jle    0x426533
  426585:	loopne 0x4265b2
  426587:	push   ds
  426588:	ds pushf 
  42658a:	xor    ah,BYTE PTR [ecx]
  42658c:	or     BYTE PTR [ebp+0x24c53d79],0xd
  426593:	loop   0x426537
  426595:	scas   al,BYTE PTR es:[edi]
  426596:	dec    esp
  426597:	dec    esi
  426598:	adc    eax,0x57e6bc13
  42659d:	sbb    esp,ebp
  42659f:	ja     0x4265f6
  4265a1:	loope  0x426552
  4265a3:	(bad)  
  4265a4:	stos   BYTE PTR es:[edi],al
  4265a5:	inc    ebx
  4265a6:	test   BYTE PTR [edi+0xf],dl
  4265a9:	push   ebx
  4265aa:	(bad)  
  4265ab:	mov    bh,0x69
  4265ad:	mov    cl,0x19
  4265af:	adc    DWORD PTR [ecx-0x5236368],edx
  4265b5:	xchg   edx,eax
  4265b6:	test   eax,0xc5e8b631
  4265bb:	mov    dh,0x9d
  4265bd:	xchg   esi,eax
  4265be:	xchg   ecx,eax
  4265bf:	pop    edx
  4265c0:	push   esi
  4265c1:	dec    edi
  4265c2:	stc    
  4265c3:	mov    ebp,0x4d2149a
  4265c8:	es dec ebx
  4265ca:	or     ecx,0xffffffcf
  4265cd:	mov    edi,db4
  4265d0:	call   FWORD PTR [edx]
  4265d2:	mov    ch,0xe0
  4265d4:	jbe    0x42656d
  4265d6:	retf   
  4265d7:	fwait
  4265d8:	jno    0x42661d
  4265da:	fistp  WORD PTR ds:0x2be3eadc
  4265e1:	loop   0x426590
  4265e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e4:	jnp    0x426573
  4265e6:	xor    eax,0x5daa86ff
  4265eb:	mov    WORD PTR [eax+0xe],fs
  4265ee:	imul   ebp,ebx,0xffffff93
  4265f1:	arpl   WORD PTR [ebx+0x27979eb9],si
  4265f7:	inc    edi
  4265f8:	or     BYTE PTR [ebx],dl
  4265fa:	mul    BYTE PTR [ecx-0x5e1bc249]
  426600:	ss pusha 
  426602:	mov    esp,0xb93141d3
  426607:	imul   ebp,edx,0x42
  42660a:	dec    ebx
  42660b:	jg     0x4265e7
  42660d:	and    al,0x9a
  42660f:	xchg   edi,eax
  426610:	daa    
  426611:	scas   eax,DWORD PTR es:[edi]
  426612:	sbb    DWORD PTR [ebx],edi
  426614:	mov    ebx,0x14f0c45a
  426619:	ret    
  42661a:	in     al,dx
  42661b:	xchg   esi,eax
  42661c:	mov    ecx,0x7f96d6f5
  426621:	int3   
  426622:	mov    bl,0x4a
  426624:	jecxz  0x4265d3
  426626:	xor    dh,BYTE PTR [esi]
  426628:	push   es
  426629:	mov    al,0x7d
  42662b:	imul   edi,ebp,0x648f39da
  426631:	xchg   ebp,eax
  426632:	xor    eax,0x8358890b
  426637:	enter  0xb116,0xbb
  42663b:	mov    al,ds:0x71e4693
  426640:	out    dx,al
  426641:	imul   ebp,DWORD PTR [ebx],0x886ef5f3
  426647:	or     eax,0x82acad8f
  42664c:	jae    0x4266b4
  42664e:	imul   ebp,DWORD PTR [edx-0x4a],0xffffffde
  426652:	in     al,dx
  426653:	sbb    ebx,DWORD PTR [ecx+0x5b]
  426656:	ss push edx
  426658:	pushf  
  426659:	int    0x75
  42665b:	mov    edx,DWORD PTR [eax-0x61]
  42665e:	or     eax,0x3c8aeeb3
  426663:	pop    ds
  426664:	mov    ds:0x33cc76a0,eax
  426669:	cmp    BYTE PTR [esi-0x5d],0x9b
  42666d:	dec    edi
  42666e:	jae    0x4266b3
  426670:	push   edi
  426671:	mov    ebx,0x14aced74
  426676:	and    DWORD PTR ds:0x41a188f1,edx
  42667c:	ins    BYTE PTR es:[edi],dx
  42667d:	push   ds
  42667e:	push   0xb787c3e4
  426683:	adc    BYTE PTR [eax+0x2cd7d1be],bl
  426689:	jge    0x426708
  42668b:	clc    
  42668c:	adc    al,0x7e
  42668e:	or     DWORD PTR [ecx+0x47641de4],ecx
  426694:	sti    
  426695:	(bad)  
  426696:	div    DWORD PTR [edi+0x39ea9b11]
  42669c:	int    0x96
  42669e:	aad    0xeb
  4266a0:	inc    eax
  4266a1:	mov    ecx,0xba7cab50
  4266a6:	jns    0x426631
  4266a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266a9:	lea    ecx,[esi+0x4e]
  4266ac:	ins    BYTE PTR es:[edi],dx
  4266ad:	mov    edx,0xfd3c3325
  4266b2:	js     0x4266c2
  4266b4:	pop    ecx
  4266b5:	pusha  
  4266b6:	inc    esi
  4266b7:	imul   ebx,DWORD PTR [edi-0x56],0x8f59208d
  4266be:	push   0xffffffa0
  4266c0:	fisub  DWORD PTR [ebp+0x2c]
  4266c3:	iret   
  4266c4:	xchg   ebx,eax
  4266c5:	or     dh,BYTE PTR [esi+0x39]
  4266c8:	xor    bl,BYTE PTR [ebx-0x43]
  4266cb:	aam    0x12
  4266cd:	xchg   ecx,eax
  4266ce:	call   0x49cd:0x193a6964
  4266d5:	mov    ebx,0x6a512de0
  4266da:	cmp    DWORD PTR [ebx+ebx*1],esi
  4266dd:	dec    esp
  4266de:	sbb    esp,DWORD PTR [edi+0x77dfb73b]
  4266e4:	out    0x93,eax
  4266e6:	xchg   esp,eax
  4266e7:	mov    DWORD PTR [edx+edi*2-0x5b9c0b62],0x95218df2
  4266f2:	fdivr  st(1),st
  4266f4:	aas    
  4266f5:	in     eax,dx
  4266f6:	sbb    eax,0xed5d9ede
  4266fb:	xlat   BYTE PTR ds:[ebx]
  4266fc:	cmp    eax,0xc39c2fe5
  426701:	loope  0x426782
  426703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426704:	pop    ss
  426705:	adc    eax,0x33537d41
  42670a:	jmp    0x4266c2
  42670c:	ins    DWORD PTR es:[edi],dx
  42670d:	sahf   
  42670e:	push   0xffffff95
  426710:	sti    
  426711:	in     eax,0xde
  426713:	fild   QWORD PTR [ebx+0x29]
  426716:	ja     0x4266c4
  426718:	call   0x8598:0x88bc5a68
  42671f:	sbb    BYTE PTR [esi+edi*1+0x10a706d],ch
  426726:	sbb    edx,DWORD PTR [esi+0xa2e8b5b]
  42672c:	scas   eax,DWORD PTR es:[edi]
  42672d:	sub    eax,0x66405c07
  426732:	lock mov cl,0x2e
  426735:	repz fild WORD PTR [edi+0x4e88b75f]
  42673c:	mov    ebp,0x313c7a53
  426741:	xor    ebx,DWORD PTR [eax-0x7]
  426744:	les    edi,FWORD PTR [eax]
  426746:	iret   
  426747:	mov    ch,BYTE PTR [esi-0x50]
  42674a:	cmp    BYTE PTR [ebx+edx*1+0xb981dec],0xf2
  426752:	fcmove st,st(6)
  426754:	in     eax,dx
  426755:	mov    ebx,DWORD PTR [ecx+0x0]
  426758:	push   ebx
  426759:	icebp  
  42675a:	addr16 pop edi
  42675c:	or     esi,DWORD PTR [esi+0x34ae20d0]
  426762:	loope  0x42672c
  426764:	add    bl,cl
  426766:	push   cs
  426767:	mov    al,ds:0x62b8b345
  42676c:	mov    edi,0xc6168b35
  426771:	fs in  al,dx
  426773:	retf   0x16c7
  426776:	pusha  
  426777:	stos   BYTE PTR es:[edi],al
  426778:	aam    0xcf
  42677a:	dec    edx
  42677b:	sbb    ebp,0x9ec47044
  426781:	(bad)  
  426782:	sti    
  426783:	call   0x1150:0x6869054
  42678a:	pop    edx
  42678b:	jp     0x426785
  42678d:	jecxz  0x4267e7
  42678f:	sti    
  426790:	je     0x4267a6
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	test   BYTE PTR [esi+eax*2+0x52],cl
  4267a2:	leave  
  4267a3:	loopne 0x4267a6
  4267a5:	add    al,bh
  4267a7:	add    al,0x0
  4267a9:	add    ah,dh
  4267ab:	pop    edx
  4267ac:	scas   eax,DWORD PTR es:[edi]
  4267ad:	(bad)  
  4267af:	push   edx
  4267b0:	ficomp DWORD PTR [ecx]
  4267b2:	add    dh,BYTE PTR [ebp+0x6f]
  4267b5:	gs std 
  4267b7:	mov    ds:0x2fe8ec6c,eax
  4267bc:	inc    esp
  4267bd:	rcl    BYTE PTR [ebp-0x1e],0x79
  4267c1:	cld    
  4267c2:	outs   dx,BYTE PTR ds:[esi]
  4267c3:	mov    edx,0x5027c6c7
  4267c8:	test   al,0xbb
  4267ca:	mov    al,0xce
  4267cc:	add    eax,0xc1de21df
  4267d1:	out    dx,al
  4267d2:	or     ebx,DWORD PTR [eax]
  4267d4:	out    dx,al
  4267d5:	adc    BYTE PTR ds:0x7a41a61f,al
  4267db:	ja     0x42682b
  4267dd:	pop    ebx
  4267de:	xchg   esi,eax
  4267df:	add    ah,BYTE PTR [eax+0x24]
  4267e2:	pop    esi
  4267e3:	lods   eax,DWORD PTR ds:[esi]
  4267e4:	pop    ss
  4267e5:	ins    DWORD PTR es:[edi],dx
  4267e6:	push   edi
  4267e7:	add    BYTE PTR [ebx],al
  4267e9:	pushf  
  4267ea:	or     eax,DWORD PTR [ebx-0x4a6dc5ec]
  4267f0:	and    eax,0x9d8cea89
  4267f5:	stos   DWORD PTR es:[edi],eax
  4267f6:	rcr    eax,1
  4267f8:	sbb    BYTE PTR [eax],dl
  4267fa:	popf   
  4267fb:	(bad)  
  4267fc:	je     0x4267fb
  4267fe:	xlat   BYTE PTR fs:[ebx]
  426800:	sub    eax,0x37ffed8f
  426805:	jno    0x4267dd
  426807:	clc    
  426808:	push   0x3d558002
  42680d:	xor    eax,0x1dc92b2d
  426812:	xor    DWORD PTR ds:0xba1677b,ebx
  426818:	sub    DWORD PTR fs:[edx+0x29],eax
  42681c:	out    0xad,eax
  42681e:	jb     0x4267fa
  426820:	xor    DWORD PTR [ebp+edi*4-0x63d72739],esi
  426827:	push   ebp
  426828:	stos   BYTE PTR es:[edi],al
  426829:	retf   
  42682a:	jge    0x4267ca
  42682c:	mov    ecx,0xbec64eb7
  426831:	fcom   DWORD PTR [ebx+0x26b4b327]
  426837:	sti    
  426838:	push   eax
  426839:	xor    BYTE PTR [edi+ecx*2],dh
  42683c:	push   0xffffffd9
  42683e:	xchg   BYTE PTR [edi+0x7e69d746],bl
  426844:	mov    cl,BYTE PTR [edx]
  426846:	sahf   
  426847:	in     al,0x50
  426849:	aad    0x6b
  42684b:	bswap  eax
  42684d:	inc    eax
  42684e:	int    0x11
  426850:	cmp    al,0xfb
  426852:	call   0x4412:0xbd741d4a
  426859:	addr16 jle 0x4268c8
  42685c:	aas    
  42685d:	mov    al,ds:0x7d8f3172
  426862:	into   
  426863:	push   0x747081e7
  426868:	jne    0x4268ba
  42686a:	cs imul eax,edi,0x7ddc5730
  426871:	inc    ebx
  426872:	mov    ecx,0xe0ed775b
  426877:	dec    eax
  426878:	shr    ebp,cl
  42687a:	mov    esp,esi
  42687c:	sub    al,0x56
  42687e:	mov    WORD PTR ds:0x3012031,gs
  426884:	add    esi,edx
  426886:	cmp    BYTE PTR [esi+eax*1+0x4b08362f],bh
  42688d:	pop    ebp
  42688e:	pusha  
  42688f:	cld    
  426890:	sbb    eax,DWORD PTR [ebp+0x28]
  426893:	mov    eax,0x7724c5c3
  426898:	hlt    
  426899:	mov    ecx,0x42c52476
  42689e:	sbb    esp,esp
  4268a0:	mov    ds:0x65399b7f,al
  4268a5:	sahf   
  4268a6:	repnz sbb al,0x10
  4268a9:	jecxz  0x426850
  4268ab:	xchg   ecx,eax
  4268ac:	jg     0x426858
  4268ae:	push   eax
  4268af:	mov    WORD PTR [edi-0x5f],?
  4268b2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b4:	inc    esi
  4268b5:	xor    edi,DWORD PTR [edi]
  4268b7:	out    0xd1,eax
  4268b9:	js     0x4268a5
  4268bb:	jl     0x426904
  4268bd:	add    ecx,DWORD PTR [eax+0x2860324f]
  4268c3:	jb     0x426917
  4268c5:	(bad)  
  4268c6:	cli    
  4268c7:	in     eax,0xac
  4268c9:	sub    esp,ecx
  4268cb:	(bad)  [ebx+eax*1-0x24de2a28]
  4268d2:	adc    ebp,esi
  4268d4:	fldenv [edi+0x6b11d143]
  4268da:	jns    0x42692a
  4268dc:	adc    al,0xee
  4268de:	adc    dh,BYTE PTR [ebx+0xe]
  4268e1:	and    BYTE PTR [edx],0xce
  4268e4:	arpl   sp,ax
  4268e6:	mov    cl,0x95
  4268e8:	imul   ecx,esp,0xffffffce
  4268eb:	rcl    al,1
  4268ed:	and    ebp,DWORD PTR [ecx+eiz*1]
  4268f0:	mov    ch,0xf2
  4268f2:	lahf   
  4268f3:	(bad)  
  4268f4:	mov    esp,0xb68b6e5
  4268f9:	dec    BYTE PTR [ebp+0x6f]
  4268fc:	xchg   DWORD PTR [ebp-0x1e],ebp
  4268ff:	xor    DWORD PTR [edx-0x7d],edx
  426902:	gs sbb eax,0x1072a1f3
  426908:	push   ebx
  426909:	jno    0x426962
  42690b:	je     0x42697d
  42690d:	loopne 0x426941
  42690f:	adc    BYTE PTR [edi-0x41dca866],dh
  426915:	dec    ecx
  426916:	pop    es
  426917:	dec    ebp
  426918:	aam    0xd6
  42691a:	in     eax,dx
  42691b:	xchg   ebx,eax
  42691c:	rcr    eax,1
  42691e:	sub    eax,0x51d7ad3b
  426923:	adc    BYTE PTR ds:0xb315ea34,ch
  426929:	mov    esp,0xe72464d9
  42692e:	mov    eax,edx
  426930:	es daa 
  426932:	out    dx,al
  426933:	sub    BYTE PTR [esi],0xe6
  426936:	push   ss
  426937:	jge    0x4268bb
  426939:	pop    edi
  42693a:	and    al,0xe2
  42693c:	out    0xd3,eax
  42693e:	mov    edx,0xf1307f71
  426943:	and    al,0x5
  426945:	bound  ebp,QWORD PTR [eax]
  426947:	mov    ecx,0x8cffdf23
  42694c:	and    eax,0xdfce5723
  426951:	out    0xb3,eax
  426953:	adc    esi,edi
  426955:	xlat   BYTE PTR ds:[ebx]
  426956:	fidiv  DWORD PTR [edx]
  426958:	sbb    BYTE PTR [ebp-0x326564bd],0x6d
  42695f:	adc    DWORD PTR [edi],eax
  426961:	mov    al,ds:0x836e84bf
  426966:	push   ss
  426967:	jmp    0x8c73:0x32906bbc
  42696e:	inc    ebx
  42696f:	call   0xd516:0xafa939aa
  426976:	mov    bl,0x94
  426978:	leave  
  426979:	jae    0x426995
  42697b:	pop    ecx
  42697c:	cs out dx,al
  42697e:	dec    esi
  42697f:	fmul   st,st(2)
  426981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426982:	sbb    ebx,DWORD PTR [edx+0x3c0d5f9e]
  426988:	retf   0x74c9
  42698b:	and    DWORD PTR [ebx+ebp*2+0x1b],eax
  42698f:	pop    ecx
  426990:	shl    BYTE PTR [ebx-0x30],0x96
  426994:	mov    ch,0x98
  426996:	dec    esi
  426997:	mov    esi,0x44f965ea
  42699c:	pop    esp
  42699d:	add    DWORD PTR [esi],0x9d515637
  4269a3:	sar    ebp,cl
  4269a5:	adc    al,0x71
  4269a7:	loopne 0x426971
  4269a9:	bound  ebx,QWORD PTR [ebx+ebp*8-0x7c]
  4269ad:	cwde   
  4269ae:	sub    eax,0xe9e15d4d
  4269b3:	scas   eax,DWORD PTR es:[edi]
  4269b4:	repz ror BYTE PTR [ebx+ecx*4+0x33608478],cl
  4269bc:	rol    DWORD PTR [edx+0x2f],0x81
  4269c0:	dec    eax
  4269c1:	loope  0x4269bd
  4269c3:	push   ss
  4269c4:	(bad)  
  4269c5:	push   esp
  4269c6:	jb     0x426974
  4269c8:	retf   
  4269c9:	mov    ds:0xcae4b9a3,al
  4269ce:	jp     0x426978
  4269d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269d1:	les    ebp,FWORD PTR [ebp+0x1a]
  4269d4:	cmp    ah,BYTE PTR [ecx]
  4269d6:	enter  0x487d,0x64
  4269da:	jns    0x426a35
  4269dc:	mov    ah,0xa8
  4269de:	cwde   
  4269df:	fidiv  DWORD PTR [esi]
  4269e1:	sti    
  4269e2:	mov    dl,0xcb
  4269e4:	push   ebx
  4269e5:	in     eax,0x8e
  4269e7:	mov    eax,ds:0xbfa74993
  4269ec:	mov    BYTE PTR [edi+ebx*1+0x79],ah
  4269f0:	iret   
  4269f1:	test   eax,0x30a421a6
  4269f6:	stos   BYTE PTR es:[edi],al
  4269f7:	iret   
  4269f8:	clc    
  4269f9:	enter  0x39b5,0xd7
  4269fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269fe:	scas   al,BYTE PTR es:[edi]
  4269ff:	in     eax,dx
  426a00:	rol    BYTE PTR [edx],1
  426a02:	push   ebx
  426a03:	and    bh,bh
  426a05:	push   esi
  426a06:	(bad)  
  426a08:	ins    BYTE PTR es:[edi],dx
  426a09:	nop
  426a0a:	dec    esi
  426a0b:	xchg   edi,eax
  426a0c:	out    dx,eax
  426a0d:	push   ss
  426a0e:	lds    ecx,FWORD PTR [ebp-0x3f]
  426a11:	stc    
  426a12:	sub    al,0xe4
  426a14:	int    0xd2
  426a16:	es mov bh,0xcc
  426a19:	sbb    eax,0xd3f6b069
  426a1e:	mov    esp,0x998a7006
  426a23:	test   BYTE PTR [eax],cl
  426a25:	fdiv   st,st(4)
  426a27:	add    eax,0xfce4ef13
  426a2c:	pusha  
  426a2d:	or     al,0x77
  426a2f:	inc    edi
  426a30:	add    DWORD PTR [ecx-0x6ced84d0],eax
  426a36:	sti    
  426a37:	jne    0x4269d1
  426a39:	inc    ecx
  426a3a:	iret   
  426a3b:	push   es
  426a3c:	jmp    0x5e7:0xd983caa1
  426a43:	pop    eax
  426a44:	sbb    DWORD PTR [eax],edi
  426a46:	fs inc ebx
  426a48:	inc    ebp
  426a49:	add    eax,0x81f64223
  426a4e:	and    BYTE PTR [esi+ebx*2-0x7d],ch
  426a52:	lahf   
  426a53:	int    0x7a
  426a55:	dec    DWORD PTR [edi+0x49490ca7]
  426a5b:	jecxz  0x426aab
  426a5d:	sub    ch,BYTE PTR [esp+ebx*2]
  426a60:	fwait
  426a61:	and    esi,DWORD PTR ds:0xb1884529
  426a67:	mov    edx,0xf927c12b
  426a6c:	rcl    dh,0xbf
  426a6f:	rcl    ecx,1
  426a71:	sti    
  426a72:	imul   edx,DWORD PTR [edx-0x5ec0daf3],0x4e
  426a79:	inc    edx
  426a7a:	shr    BYTE PTR [edx-0x6d],cl
  426a7d:	push   ds
  426a7e:	fimul  DWORD PTR [ebx-0x6a]
  426a81:	jmp    0x94e2110e
  426a86:	sub    DWORD PTR [ebx],ebp
  426a88:	shr    DWORD PTR [esp+eax*2],cl
  426a8b:	ret    0x18f5
  426a8e:	imul   ecx,DWORD PTR gs:[ebx+0x12],0xffffffcf
  426a93:	test   BYTE PTR [edx+0x2f],bh
  426a96:	enter  0x3ca9,0x1d
  426a9a:	arpl   WORD PTR [esi-0x1e],di
  426a9d:	dec    esi
  426a9e:	push   eax
  426a9f:	push   es
  426aa0:	jg     0x426a67
  426aa2:	mov    ds:0x3c285bb0,al
  426aa7:	xchg   edi,esi
  426aa9:	mov    ebp,0x40fecc3d
  426aae:	ds adc eax,0xf0896eb
  426ab4:	dec    ecx
  426ab5:	popa   
  426ab6:	cmp    BYTE PTR [eax-0x35],cl
  426ab9:	das    
  426aba:	adc    BYTE PTR [ebx],cl
  426abc:	stos   DWORD PTR es:[edi],eax
  426abd:	popa   
  426abe:	popa   
  426abf:	add    al,0x9b
  426ac1:	pop    esi
  426ac2:	adc    al,cl
  426ac4:	add    ah,BYTE PTR [eax+0x17]
  426ac7:	in     al,dx
  426ac8:	dec    edi
  426ac9:	aam    0x29
  426acb:	adc    esp,DWORD PTR [esi+0x31]
  426ace:	(bad)  
  426acf:	dec    esi
  426ad0:	push   ecx
  426ad1:	cmp    eax,0x71406235
  426ad6:	xor    BYTE PTR [ecx+0x47],bh
  426ad9:	mov    ds:0xa87f0943,al
  426ade:	mov    ecx,DWORD PTR [ebx+0x10]
  426ae1:	ror    BYTE PTR [esi+esi*4],cl
  426ae4:	pop    ebp
  426ae5:	(bad)  
  426ae6:	sahf   
  426ae7:	cwde   
  426ae8:	adc    al,0xad
  426aea:	pop    edx
  426aeb:	vmaxpd xmm4,xmm2,XMMWORD PTR [eax-0x1f342974]
  426af3:	js     0x426b65
  426af5:	or     al,0x77
  426af7:	pop    ecx
  426af8:	cdq    
  426af9:	aam    0x7f
  426afb:	cs into 
  426afd:	and    DWORD PTR [edx+0xf95f0a2],esp
  426b03:	(bad)  
  426b04:	arpl   sp,ax
  426b06:	cdq    
  426b07:	in     eax,0x1f
  426b09:	in     eax,0x1b
  426b0b:	aaa    
  426b0c:	js     0x426aac
  426b0e:	in     al,0x8f
  426b10:	sahf   
  426b11:	icebp  
  426b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b13:	jmp    0x426b34
  426b15:	es ds and eax,0x208495f8
  426b1c:	leave  
  426b1d:	mov    bh,0x7
  426b1f:	push   eax
  426b20:	(bad)  
  426b21:	fidiv  WORD PTR [ebx]
  426b23:	(bad)  
  426b24:	not    ah
  426b26:	arpl   WORD PTR [esi-0x52d0cc49],sp
  426b2c:	sbb    ax,0xa197
  426b30:	pop    ebx
  426b31:	sbb    eax,0xce072ffa
  426b36:	stos   BYTE PTR es:[edi],al
  426b37:	out    0x47,eax
  426b39:	adc    DWORD PTR [esi-0x665effec],ebp
  426b3f:	or     ecx,DWORD PTR [ebp+0xaddbaf2]
  426b45:	dec    edx
  426b46:	setb   BYTE PTR [esi-0x9]
  426b4a:	ror    DWORD PTR [eax+0x8],0x3e
  426b4e:	push   edx
  426b4f:	(bad)
  426b53:	addr16 jb 0x426b01
  426b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b58:	mov    esi,0x874ae839
  426b5d:	stc    
  426b5e:	mov    WORD PTR [esi-0xccad34c],gs
  426b64:	and    BYTE PTR [esi],0x36
  426b67:	xchg   esp,eax
  426b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b69:	mov    ah,0xd7
  426b6b:	jmp    0xb556544
  426b70:	xchg   ecx,eax
  426b71:	nop
  426b72:	push   0xfeaf28cb
  426b77:	inc    BYTE PTR [ebp+0x29]
  426b7a:	fadd   st(4),st
  426b7c:	mov    bh,0x69
  426b7e:	pushf  
  426b7f:	mov    ecx,0x89496ba3
  426b84:	push   0x7fac9be8
  426b89:	pop    edx
  426b8a:	inc    eax
  426b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b8c:	mov    ebp,0xb4837090
  426b91:	loop   0x426b5c
  426b93:	push   eax
  426b94:	dec    DWORD PTR [edx+0xf9fb704]
  426b9a:	pop    ecx
  426b9b:	xlat   BYTE PTR ds:[ebx]
  426b9c:	sbb    esp,DWORD PTR [ebp-0x15e7fda7]
  426ba2:	call   0x824397a8
  426ba7:	js     0x426bb5
  426ba9:	dec    ebp
  426baa:	pop    edx
  426bab:	imul   esp,DWORD PTR [ecx+ecx*2],0xd
  426baf:	cmp    al,0x9a
  426bb1:	push   eax
  426bb2:	repnz xor cl,BYTE PTR [ebp-0x7482a9f]
  426bb9:	xor    esp,edx
  426bbb:	xchg   BYTE PTR [eax-0x3d58b290],dh
  426bc1:	add    DWORD PTR [esi],esi
  426bc3:	and    BYTE PTR [edx+0x6c5890af],bl
  426bc9:	mov    edi,0x6f1430ba
  426bce:	js     0x426c12
  426bd0:	xor    al,0x88
  426bd2:	retf   0xf4cd
  426bd5:	cmp    edi,eax
  426bd7:	push   cs
  426bd8:	lahf   
  426bd9:	cli    
  426bda:	or     eax,0xdf1464ac
  426bdf:	jmp    0xa9bf807b
  426be4:	out    0xf,al
  426be6:	inc    esi
  426be7:	inc    ebx
  426be8:	loop   0x426c1a
  426bea:	push   es
  426beb:	(bad)  
  426bed:	test   DWORD PTR [esp+edi*1+0x16115de9],eax
  426bf4:	cmp    BYTE PTR [edi],cl
  426bf6:	xor    al,dh
  426bf8:	into   
  426bf9:	dec    esp
  426bfa:	sbb    al,0x40
  426bfc:	addr16 and al,0x4d
  426bff:	popa   
  426c00:	dec    edi
  426c01:	daa    
  426c02:	fucomi st,st(5)
  426c04:	pop    esi
  426c05:	ss cwde 
  426c07:	cs int3 
  426c09:	pop    esp
  426c0a:	sbb    DWORD PTR [edx+0x4d],eax
  426c0d:	nop
  426c0e:	in     eax,dx
  426c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c10:	sub    eax,0xd54197d1
  426c15:	add    eax,0x85a7360
  426c1a:	shl    DWORD PTR [edi+0x72],cl
  426c1d:	mov    ebp,0xa9530687
  426c22:	test   BYTE PTR [ecx+0x7493692e],ch
  426c28:	and    al,0xfa
  426c2a:	pop    es
  426c2b:	xor    eax,DWORD PTR [edx-0x47]
  426c2e:	stc    
  426c2f:	ss loop 0x426c0a
  426c32:	rcl    DWORD PTR [ebx+edx*8+0x61],cl
  426c36:	lds    eax,FWORD PTR ss:[edi+0x126c2137]
  426c3d:	ins    DWORD PTR es:[edi],dx
  426c3e:	test   al,0x68
  426c40:	sbb    al,0xc8
  426c42:	mov    ch,BYTE PTR [eax-0x7b5969e2]
  426c48:	fldenv fs:[ecx]
  426c4b:	std    
  426c4c:	sub    BYTE PTR [ebx],ah
  426c4e:	(bad)  
  426c4f:	jmp    0xfc901804
  426c54:	idiv   DWORD PTR [ecx-0x66a5857b]
  426c5a:	in     al,dx
  426c5b:	fwait
  426c5c:	pop    esi
  426c5d:	out    dx,eax
  426c5e:	in     eax,0x57
  426c60:	js     0x426c9a
  426c62:	mov    eax,0xb1619d8a
  426c67:	push   ebp
  426c68:	add    al,0x1c
  426c6a:	pop    ss
  426c6b:	and    ecx,edi
  426c6d:	mov    edx,0xdde9fba0
  426c72:	lds    ebx,FWORD PTR [esi+0x46]
  426c75:	and    al,0x9d
  426c77:	cld    
  426c78:	retf   0x4a0c
  426c7b:	jno    0x426c17
  426c7d:	fwait
  426c7e:	push   ds
  426c7f:	jno    0x426c10
  426c81:	(bad)  
  426c83:	fst    DWORD PTR [edi+esi*8+0x3dca1031]
  426c8a:	xor    esp,esp
  426c8c:	lods   al,BYTE PTR ds:[esi]
  426c8d:	hlt    
  426c8e:	out    0x3f,eax
  426c90:	fistp  DWORD PTR [ebx]
  426c92:	sub    cl,BYTE PTR [ecx+0x7d]
  426c95:	mov    cl,BYTE PTR [edx]
  426c97:	add    ebp,DWORD PTR [eax-0x55]
  426c9a:	jnp    0x426cd6
  426c9c:	or     bh,BYTE PTR [ebx-0x25]
  426c9f:	lahf   
  426ca0:	adc    dh,BYTE PTR [eax]
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x2ee88e10],cl
  426caf:	push   esi
  426cb0:	push   ebx
  426cb1:	pop    ecx
  426cb3:	in     eax,0x1
  426cb5:	add    al,bh
  426cb7:	add    al,0x0
  426cb9:	add    dl,ch
  426cbb:	mov    edi,0x5c92c686
  426cc0:	xor    ebp,ecx
  426cc2:	dec    ebx
  426cc3:	xor    DWORD PTR [esp+ebx*1+0x33dd07c8],esi
  426cca:	pop    eax
  426ccb:	pop    ss
  426ccc:	push   esi
  426ccd:	or     eax,0x3ff0a1a0
  426cd2:	mov    ebx,DWORD PTR [ebp+0x47b05a]
  426cd8:	and    eax,0xe05ff4a9
  426cdd:	and    al,0x2f
  426cdf:	scas   eax,DWORD PTR es:[edi]
  426ce0:	jnp    0x426d00
  426ce2:	leave  
  426ce3:	int3   
  426ce4:	mov    esp,0xe116c361
  426ce9:	into   
  426cea:	pop    edi
  426ceb:	sub    al,0x6e
  426ced:	in     eax,0x5e
  426cef:	dec    ecx
  426cf0:	mov    BYTE PTR [esp+edi*1],ch
  426cf3:	and    BYTE PTR [edx+0x14cbab07],0xe
  426cfa:	cld    
  426cfb:	dec    eax
  426cfd:	push   esp
  426cfe:	or     DWORD PTR [edx-0x54d80bd2],ebp
  426d04:	xchg   BYTE PTR [ecx],bh
  426d06:	mov    BYTE PTR [edi+0x5ca63c30],cl
  426d0c:	sub    DWORD PTR [ebx+0x3306c263],esp
  426d12:	out    dx,al
  426d13:	(bad)  
  426d14:	xor    al,0xd7
  426d16:	pop    ds
  426d17:	scas   al,BYTE PTR es:[edi]
  426d18:	retw   
  426d1a:	lods   al,BYTE PTR ds:[esi]
  426d1b:	mov    eax,0x20d6776c
  426d20:	mov    dh,0xcd
  426d22:	outs   dx,DWORD PTR ds:[esi]
  426d23:	push   esi
  426d24:	fldcw  WORD PTR [edi]
  426d26:	xor    esp,DWORD PTR [ebp+edi*1+0x7e]
  426d2a:	and    DWORD PTR [esi],edi
  426d2c:	or     ch,ah
  426d2e:	stc    
  426d2f:	aaa    
  426d30:	or     DWORD PTR [ecx-0x642ba146],ecx
  426d36:	imul   esp,DWORD PTR [edx],0x2e
  426d39:	cmp    eax,0x9ff450c8
  426d3e:	push   ss
  426d3f:	repnz rcr DWORD PTR [ebx-0x57],cl
  426d43:	mov    dh,0xe9
  426d45:	sub    DWORD PTR [ebp-0x13],0x810d36f7
  426d4c:	cmp    ch,bl
  426d4e:	call   0x2dffd796
  426d53:	sbb    al,cl
  426d55:	jns    0x426d41
  426d57:	or     DWORD PTR [ebx+0x54f385e4],esp
  426d5d:	sbb    ch,al
  426d5f:	mov    ch,0xed
  426d61:	int    0x4c
  426d63:	pop    ebx
  426d64:	neg    DWORD PTR [ecx+0x33]
  426d67:	in     eax,0xf9
  426d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d6a:	shl    BYTE PTR [ecx-0x7d],cl
  426d6d:	movups xmm5,xmm1
  426d70:	inc    ebx
  426d71:	outs   dx,DWORD PTR ds:[esi]
  426d72:	ins    DWORD PTR es:[edi],dx
  426d73:	(bad)  
  426d74:	add    bh,BYTE PTR [eax+eax*4-0x4c]
  426d78:	xor    al,0x58
  426d7a:	jo     0x426cfe
  426d7c:	mov    ah,0x77
  426d7e:	test   DWORD PTR [ecx+0x5a16f7cd],ecx
  426d84:	in     eax,0xb6
  426d86:	sbb    eax,0xfac844bd
  426d8b:	loop   0x426d2d
  426d8d:	sbb    edx,DWORD PTR [ecx+0x1a]
  426d90:	fs mov ebx,0x54af120b
  426d96:	mov    ecx,0xf9e4b2df
  426d9b:	(bad)  
  426d9c:	sbb    al,0x53
  426d9e:	push   ds
  426d9f:	adc    al,0x5a
  426da1:	aaa    
  426da2:	sbb    bl,dl
  426da4:	daa    
  426da5:	cli    
  426da6:	(bad)  
  426da7:	mov    eax,0xdae2a42f
  426dac:	xchg   esp,eax
  426dad:	pop    ss
  426dae:	fdivr  st(2),st
  426db0:	adc    al,0x58
  426db2:	pop    ss
  426db3:	rcr    edx,1
  426db5:	cmp    al,0xd
  426db7:	scas   eax,DWORD PTR es:[edi]
  426db8:	push   edi
  426db9:	cdq    
  426dba:	xor    eax,0x54a0aa18
  426dbf:	xchg   edx,eax
  426dc0:	jg     0x426da8
  426dc2:	xlat   BYTE PTR ds:[ebx]
  426dc3:	div    bl
  426dc5:	jo     0x426d80
  426dc7:	and    ebp,DWORD PTR [esp+eiz*4-0x58cd64e7]
  426dce:	sub    DWORD PTR [edx-0x5a886dfb],ebx
  426dd4:	popf   
  426dd5:	and    DWORD PTR [ecx+0x24],ebx
  426dd8:	xor    ah,BYTE PTR [ebx+0x7085117f]
  426dde:	adc    DWORD PTR [edx],esi
  426de0:	ror    BYTE PTR [ebp-0x11],0x9d
  426de4:	pop    edx
  426de5:	cmp    ebx,DWORD PTR ds:0xc6f23bcf
  426deb:	xor    al,0x67
  426ded:	sub    BYTE PTR [eax],0x4b
  426df0:	ss ror ebx,0x26
  426df4:	cmp    eax,0x51458c69
  426df9:	mov    eax,0x5c79cb1b
  426dfe:	ret    0x45a4
  426e01:	push   0x13
  426e03:	neg    BYTE PTR [edx-0x7ea6db6b]
  426e09:	push   ebx
  426e0a:	out    dx,al
  426e0b:	jg     0x426e67
  426e0d:	adc    bh,BYTE PTR [ebx+0x2e]
  426e10:	mov    eax,0xa7549338
  426e15:	inc    eax
  426e16:	mov    al,ah
  426e18:	adc    ah,bh
  426e1a:	and    al,0xc6
  426e1c:	out    dx,eax
  426e1d:	add    edi,DWORD PTR [edx]
  426e1f:	xchg   ebp,eax
  426e20:	into   
  426e21:	mov    al,ds:0x7a721be5
  426e26:	js     0x426e6d
  426e28:	hlt    
  426e29:	mov    edx,0xfb402012
  426e2e:	jnp    0x426df0
  426e30:	fstp   DWORD PTR [ecx+eax*8-0x7054e105]
  426e37:	das    
  426e38:	adc    bh,BYTE PTR [ecx]
  426e3a:	sahf   
  426e3b:	out    dx,eax
  426e3c:	jecxz  0x426dff
  426e3e:	cli    
  426e3f:	das    
  426e40:	xor    eax,DWORD PTR [edx]
  426e42:	(bad)  
  426e43:	hlt    
  426e44:	sbb    DWORD PTR [edi],esp
  426e46:	or     al,0x68
  426e48:	out    dx,eax
  426e49:	lock add DWORD PTR [eax],0xdc53d935
  426e50:	jnp    0x426df6
  426e52:	push   esp
  426e53:	(bad)  
  426e54:	jnp    0x426e20
  426e56:	sahf   
  426e57:	stc    
  426e58:	sti    
  426e59:	sub    BYTE PTR [esi+edx*8],bh
  426e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e5d:	mov    bh,0x26
  426e5f:	dec    ebx
  426e60:	mov    bh,0xee
  426e62:	not    BYTE PTR [esp+ebx*8+0x10]
  426e66:	stc    
  426e67:	mov    ah,0x1d
  426e69:	mov    al,0xf6
  426e6b:	stos   DWORD PTR es:[edi],eax
  426e6c:	cmp    al,dh
  426e6e:	or     BYTE PTR [eax],ah
  426e70:	out    dx,eax
  426e71:	jne    0x426e53
  426e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e74:	and    eax,DWORD PTR [esi+ecx*8+0x10196ee5]
  426e7b:	cmp    eax,DWORD PTR [esp+ebx*1-0x5b]
  426e7f:	js     0x426e14
  426e81:	jae    0x426e5f
  426e83:	ins    BYTE PTR es:[edi],dx
  426e84:	cld    
  426e85:	div    DWORD PTR [ebx+0x5d95544a]
  426e8b:	scas   al,BYTE PTR es:[edi]
  426e8c:	punpckhbw mm5,QWORD PTR [ecx-0x26800411]
  426e93:	ror    edx,1
  426e95:	add    al,0xb1
  426e97:	call   FWORD PTR [edx]
  426e99:	xchg   BYTE PTR [edi-0x1391ab13],ah
  426e9f:	int3   
  426ea0:	(bad)  
  426ea1:	cs pop edi
  426ea3:	cdq    
  426ea4:	pop    ecx
  426ea5:	xor    esi,DWORD PTR [eax]
  426ea7:	push   esi
  426ea8:	dec    bl
  426eaa:	fdiv   st(3),st
  426eac:	dec    ecx
  426ead:	sbb    BYTE PTR [edi],dl
  426eaf:	repz inc esp
  426eb1:	popf   
  426eb2:	mov    esp,0x63e16322
  426eb7:	imul   edx,ecx,0xb6abc058
  426ebd:	shl    BYTE PTR [edx-0x4307781c],cl
  426ec3:	fsub   st,st(4)
  426ec5:	sub    al,0x7e
  426ec7:	pop    es
  426ec8:	and    eax,0x5caf900a
  426ecd:	test   DWORD PTR [edx+0x9],0x13c791c4
  426ed4:	adc    esp,DWORD PTR [edx+ecx*2+0x41]
  426ed8:	aas    
  426ed9:	clc    
  426eda:	or     eax,0x1c488909
  426edf:	xor    eax,0xff30f8d1
  426ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ee5:	mov    ah,0xee
  426ee7:	dec    eax
  426ee8:	lock daa 
  426eea:	test   BYTE PTR [edx+ebx*2-0x39],dl
  426eee:	push   ds
  426eef:	push   es
  426ef0:	jecxz  0x426f50
  426ef2:	mov    DWORD PTR [ebx],ecx
  426ef4:	scas   eax,DWORD PTR es:[edi]
  426ef5:	adc    eax,0x5a6005da
  426efa:	inc    edx
  426efb:	loope  0x426ec5
  426efd:	arpl   WORD PTR [ebx-0x11],bp
  426f00:	cdq    
  426f01:	es xchg ebp,eax
  426f03:	in     al,0x1b
  426f05:	fcomip st,st(7)
  426f07:	push   0x1c3e0a8b
  426f0c:	jne    0x426f75
  426f0e:	push   esi
  426f0f:	popf   
  426f10:	hlt    
  426f11:	xchg   esp,eax
  426f12:	mov    edi,0x5be10bc5
  426f17:	es mov esp,0xc67fffb9
  426f1d:	jo     0x426f5c
  426f1f:	inc    edi
  426f20:	pop    edx
  426f21:	adc    al,0x2
  426f23:	mov    ebp,0xc0f4e716
  426f28:	dec    ebx
  426f29:	pop    ss
  426f2a:	das    
  426f2b:	jmp    0xf0be0a33
  426f30:	inc    esp
  426f31:	dec    edi
  426f32:	int    0x5c
  426f34:	and    bh,BYTE PTR [ecx-0x6c781f19]
  426f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f3b:	sub    esi,ebp
  426f3d:	push   ebx
  426f3e:	jg     0x426f62
  426f40:	outs   dx,DWORD PTR ds:[esi]
  426f41:	mov    ecx,0xee4b78dd
  426f46:	jmp    0x426fa0
  426f48:	or     al,0xb5
  426f4a:	jbe    0x426f74
  426f4c:	mov    ecx,0x33b9709b
  426f51:	or     esi,DWORD PTR [esi]
  426f53:	ret    
  426f54:	or     al,0x6f
  426f56:	push   ecx
  426f57:	add    BYTE PTR [esi-0x32],dh
  426f5a:	ins    BYTE PTR es:[edi],dx
  426f5b:	add    cl,cl
  426f5d:	aas    
  426f5e:	dec    eax
  426f5f:	adc    BYTE PTR [eax-0x43bfa10c],dh
  426f65:	push   ebp
  426f66:	pushf  
  426f67:	inc    ebp
  426f68:	test   eax,0x28e6d61a
  426f6d:	inc    ebx
  426f6e:	or     BYTE PTR [ebx+edi*1-0x1c],dl
  426f72:	adc    DWORD PTR [ecx+0x48],0xffffffbe
  426f76:	shl    BYTE PTR [eax-0x2f],0xe9
  426f7a:	call   0x97c8c4cc
  426f7f:	pop    ebp
  426f80:	sbb    al,0x29
  426f82:	mov    BYTE PTR ss:[edx],bh
  426f85:	jns    0x426fa4
  426f87:	pop    DWORD PTR [ecx]
  426f89:	pop    es
  426f8a:	jns    0x426f74
  426f8c:	xor    DWORD PTR [ecx-0x6d],esp
  426f8f:	adc    eax,0x7fc7f55a
  426f94:	sahf   
  426f95:	mov    edi,0xc90596ab
  426f9a:	push   es
  426f9b:	arpl   cx,ax
  426f9d:	mov    al,ds:0x9bb825c5
  426fa2:	(bad)  
  426fa3:	outs   dx,DWORD PTR ds:[esi]
  426fa4:	dec    eax
  426fa5:	jbe    0x426ff2
  426fa7:	mov    ebp,0xc657a94b
  426fac:	ret    
  426fad:	adc    dh,0x8
  426fb0:	sahf   
  426fb1:	in     eax,dx
  426fb2:	jmp    0x426fbc
  426fb4:	ja     0x426fe9
  426fb6:	jge    0x426f43
  426fb8:	jnp    0x426ffe
  426fba:	outs   dx,BYTE PTR ds:[esi]
  426fbb:	xor    BYTE PTR gs:[eax+0x71],cl
  426fbf:	ins    DWORD PTR es:[edi],dx
  426fc0:	pop    ebx
  426fc1:	or     BYTE PTR [esi-0x4c386419],al
  426fc7:	jmp    0x4dca:0x611d511e
  426fce:	pop    edx
  426fcf:	dec    eax
  426fd0:	mov    DWORD PTR [eax],0xd9ea1564
  426fd6:	add    DWORD PTR [eax+0x3c],0x14c283f0
  426fdd:	mov    ebx,0x6bb12f6b
  426fe2:	mov    ecx,0xd0427d48
  426fe7:	ss mov esi,0x4123d79b
  426fed:	fidiv  DWORD PTR [ebx-0x2]
  426ff0:	jno    0x426fe6
  426ff2:	daa    
  426ff3:	fwait
  426ff4:	iret   
  426ff5:	das    
  426ff6:	ret    0xfbdc
  426ff9:	mov    edx,0xce21c460
  426ffe:	xchg   ebx,eax
  426fff:	test   eax,0x847f5757
  427004:	mov    eax,ds:0x3ef69f3a
  427009:	sti    
  42700a:	push   ebp
  42700b:	xchg   esp,eax
  42700c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42700d:	mov    edx,0xa824e354
  427012:	dec    ebp
  427013:	ss dec esi
  427015:	add    ebx,DWORD PTR [ecx]
  427017:	pop    eax
  427018:	mov    DWORD PTR [edx+0x40],edi
  42701b:	lods   al,BYTE PTR ds:[esi]
  42701c:	imul   ebp,DWORD PTR [edx],0xfc7bc16
  427022:	enter  0x47a1,0x7f
  427026:	test   BYTE PTR [ebx],0x31
  427029:	sbb    ebp,DWORD PTR [edi-0x77]
  42702c:	popf   
  42702d:	push   ebp
  42702e:	in     al,0x69
  427030:	jns    0x42707f
  427032:	in     al,dx
  427033:	add    eax,0xc73c2ee8
  427038:	pop    ds
  427039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42703a:	sti    
  42703b:	mov    WORD PTR [edx+0x63ab9861],ds
  427041:	mov    bh,0x4b
  427043:	shl    esi,1
  427045:	and    ebx,ecx
  427047:	xor    BYTE PTR [edx-0x32],al
  42704a:	std    
  42704b:	pop    ebp
  42704c:	cmp    dl,dl
  42704e:	mov    ebx,0x98ff80c
  427053:	pop    ebx
  427054:	sbb    al,BYTE PTR ds:0x9e0c8635
  42705a:	cmp    eax,0xb8e7dc71
  42705f:	mov    al,0xd0
  427061:	mov    edx,0x4ddda307
  427066:	dec    eax
  427067:	jne    0x42706d
  427069:	mov    dl,0x9a
  42706b:	mov    ebp,0x24302967
  427070:	xchg   ecx,eax
  427071:	xchg   DWORD PTR [esi-0x538da5cc],edx
  427077:	mov    edi,0xfc172165
  42707c:	cli    
  42707d:	pop    ecx
  42707e:	jns    0x427049
  427080:	mov    bl,0xec
  427082:	in     eax,0x8
  427084:	rcl    dh,0xd7
  427087:	add    al,0xa8
  427089:	ds sti 
  42708b:	ds pop ebx
  42708d:	fwait
  42708e:	pop    edi
  42708f:	xchg   ebx,eax
  427090:	xor    BYTE PTR [ebx+ebp*2-0x5f],ch
  427094:	call   0xea3bf652
  427099:	adc    ebx,DWORD PTR [esi]
  42709b:	js     0x427052
  42709d:	push   ecx
  42709e:	sub    eax,0x8b31d3b0
  4270a3:	xchg   edx,eax
  4270a4:	inc    esi
  4270a5:	dec    edx
  4270a6:	sahf   
  4270a7:	adc    BYTE PTR [edi*1-0x58707a63],dh
  4270ae:	out    0x15,eax
  4270b0:	fstp   QWORD PTR [esi+0x22]
  4270b3:	mov    esp,0x2ff7ebbe
  4270b8:	xor    ch,ch
  4270ba:	dec    edx
  4270bb:	jae    0x427093
  4270bd:	mov    esp,0x8885b5c3
  4270c2:	dec    esp
  4270c3:	(bad)  
  4270c4:	lock mov BYTE PTR [ecx-0xed7fa0f],dh
  4270cb:	pop    edx
  4270cc:	jl     0x427072
  4270ce:	xchg   ebx,eax
  4270cf:	xchg   DWORD PTR [esi],ebx
  4270d1:	repz dec eax
  4270d3:	ins    BYTE PTR es:[edi],dx
  4270d4:	and    eax,0x5e291e49
  4270d9:	xchg   edi,eax
  4270da:	mov    eax,esi
  4270dc:	sub    eax,0x16dce856
  4270e1:	dec    esi
  4270e2:	aad    0x76
  4270e4:	push   0x61b88d0
  4270e9:	cwde   
  4270ea:	jle    0x42711e
  4270ec:	inc    edx
  4270ed:	xor    eax,0x78165612
  4270f2:	sub    eax,0x503b1b46
  4270f7:	into   
  4270f8:	retf   
  4270f9:	jne    0x42709a
  4270fb:	test   DWORD PTR [ebx],ebp
  4270fd:	pop    ebp
  4270fe:	jl     0x42710b
  427100:	mov    edi,DWORD PTR [esi]
  427102:	mov    dh,0x3f
  427104:	push   0x56
  427106:	jge    0x427175
  427108:	inc    ebx
  427109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42710a:	mov    esp,0xf47aa001
  42710f:	in     eax,dx
  427110:	mov    ebx,0xcac06e31
  427115:	inc    BYTE PTR [ecx-0xa]
  427118:	outs   dx,BYTE PTR ds:[esi]
  427119:	outs   dx,BYTE PTR ds:[esi]
  42711a:	call   0xae8f3037
  42711f:	imul   ebp,DWORD PTR [ecx+0x6a],0x5b
  427123:	pop    ss
  427124:	sar    BYTE PTR [edi-0x451240cc],0xda
  42712b:	add    cl,bl
  42712d:	(bad)  
  42712f:	xlat   BYTE PTR ds:[ebx]
  427130:	aas    
  427131:	xchg   edi,eax
  427132:	mov    cl,0xc0
  427134:	ds ins BYTE PTR es:[edi],dx
  427136:	dec    esp
  427137:	or     al,0x93
  427139:	(bad)  
  42713b:	arpl   WORD PTR [ebx+0xe265240],sp
  427141:	loop   0x4270d4
  427143:	pop    esp
  427144:	cmp    eax,0x83cafecd
  427149:	xor    DWORD PTR [edx-0x5e],ebx
  42714c:	int3   
  42714d:	mov    ds:0xbcce6fe5,eax
  427152:	xchg   edi,eax
  427153:	rol    BYTE PTR [eax-0x42],cl
  427156:	mov    eax,0x1e3afa1e
  42715b:	inc    esp
  42715c:	adc    al,0xd5
  42715e:	loop   0x427165
  427160:	(bad)
  427163:	xchg   edx,eax
  427164:	or     ebp,0x700d84fc
  42716a:	je     0x42710d
  42716c:	jmp    0xb1f921bb
  427171:	shl    DWORD PTR [esp+ecx*1-0x27],0xa0
  427176:	sub    al,0x29
  427178:	pop    ebp
  427179:	lahf   
  42717a:	and    ebx,ebp
  42717c:	jne    0x427102
  42717e:	jge    0x427114
  427180:	inc    edx
  427181:	loop   0x4271cb
  427183:	dec    esi
  427184:	jo     0x4271b7
  427186:	jmp    0xea56:0xe042eff8
  42718d:	push   esp
  42718e:	inc    ebx
  42718f:	fmul   DWORD PTR [ebx]
  427191:	mov    dl,0xae
  427193:	lods   eax,DWORD PTR ds:[esi]
  427194:	test   eax,0x18913b79
  427199:	add    DWORD PTR [ebx],ebx
  42719b:	sub    ah,bl
  42719d:	cmp    BYTE PTR [esi],cl
  42719f:	push   ds
  4271a0:	je     0x427158
  4271a2:	or     DWORD PTR [ecx+0x3bcf4f30],esp
  4271a8:	pop    esp
  4271a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271aa:	stc    
  4271ab:	dec    ecx
  4271ac:	popf   
  4271ad:	je     0x42715d
  4271af:	ret    
  4271b0:	mov    esp,0x75872bba
  4271b5:	loope  0x4271b4
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	imul   ebp,DWORD PTR [ebp-0x77],0x1eab9ca
  4271c5:	add    al,bh
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [eax+esi*8],dh
  4271cc:	pop    ecx
  4271cd:	sub    bp,bp
  4271d0:	push   esp
  4271d1:	dec    esi
  4271d2:	stos   BYTE PTR es:[edi],al
  4271d3:	adc    ch,BYTE PTR [edx*4+0x3d4bf6de]
  4271da:	lds    edi,FWORD PTR [ecx+0x22]
  4271dd:	stos   DWORD PTR es:[edi],eax
  4271de:	sub    al,0x37
  4271e0:	in     al,dx
  4271e1:	lods   al,BYTE PTR ds:[esi]
  4271e2:	xor    eax,0x97938587
  4271e7:	inc    esi
  4271e8:	and    BYTE PTR [edi-0x59964f2f],dh
  4271ee:	adc    esi,DWORD PTR [ecx-0x10da0a02]
  4271f4:	mov    ch,0x7f
  4271f6:	in     al,dx
  4271f7:	dec    eax
  4271f8:	cs jae 0x4271c6
  4271fb:	sbb    al,0x99
  4271fd:	int    0xc2
  4271ff:	sti    
  427200:	push   ds
  427201:	adc    BYTE PTR [esi+0xe269f4f],bl
  427207:	dec    ebp
  427208:	add    al,0x49
  42720a:	xchg   cl,bh
  42720c:	xor    bl,BYTE PTR [edx+0x7731ac]
  427212:	or     al,0xb9
  427215:	mov    ebx,0x9fea20de
  42721a:	cmp    al,0xc1
  42721c:	dec    ebx
  42721d:	jns    0x427208
  42721f:	sbb    BYTE PTR [ecx-0x599791c7],al
  427225:	das    
  427226:	push   ebp
  427227:	aas    
  427228:	or     al,0xbb
  42722a:	dec    eax
  42722b:	clc    
  42722c:	(bad)  
  42722d:	fild   DWORD PTR [edx+0x273978fd]
  427233:	arpl   WORD PTR [ebp+edx*4+0xed35b6e],si
  42723a:	mov    DWORD PTR [eax],ebx
  42723c:	xchg   ebx,eax
  42723d:	lods   al,BYTE PTR ds:[esi]
  42723e:	outs   dx,BYTE PTR ds:[esi]
  42723f:	push   ecx
  427240:	in     eax,dx
  427241:	outs   dx,BYTE PTR ds:[esi]
  427242:	mov    ds:0xab8817fd,eax
  427247:	jne    0x427268
  427249:	les    edi,FWORD PTR ds:0xc6542e3
  42724f:	pop    es
  427250:	outs   dx,DWORD PTR ds:[esi]
  427251:	sar    DWORD PTR [ebx-0x60],cl
  427254:	adc    eax,DWORD PTR [esi+0x6f]
  427257:	cmp    al,0x98
  427259:	(bad)  
  42725a:	xor    bl,BYTE PTR [edi+0x4be90c3f]
  427260:	scas   eax,DWORD PTR es:[edi]
  427261:	or     BYTE PTR [ebx+ebp*8+0x40063e53],ch
  427268:	(bad)  
  427269:	xor    esi,DWORD PTR [esi*2+0x240fed90]
  427270:	in     al,0x49
  427272:	clc    
  427273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427274:	in     eax,dx
  427275:	add    DWORD PTR [ebx+0x5e5788ab],ebp
  42727b:	fistp  WORD PTR [esi+0xe]
  42727e:	popf   
  42727f:	sahf   
  427280:	(bad)  
  427282:	loopne 0x42723e
  427284:	rcl    edx,cl
  427286:	jnp    0x427287
  427288:	into   
  427289:	sub    ch,BYTE PTR [ebp-0x14]
  42728c:	dec    edi
  42728d:	addr16 (bad) 
  42728f:	jl     0x4272b5
  427291:	xchg   esi,eax
  427292:	sub    bl,bl
  427294:	ret    0xfd4e
  427297:	adc    al,0xd6
  427299:	stc    
  42729a:	adc    edi,DWORD PTR [eax+0x6f5839b1]
  4272a0:	pop    esi
  4272a1:	outs   dx,DWORD PTR ds:[esi]
  4272a2:	(bad)  
  4272a3:	aas    
  4272a4:	ss jmp 0x392422d6
  4272aa:	out    0x3d,al
  4272ac:	jae    0x427243
  4272ae:	push   eax
  4272af:	sbb    eax,0xabb728b7
  4272b4:	mov    esi,0xbc6efe8c
  4272b9:	jle    0x4272cf
  4272bb:	cmp    dl,BYTE PTR [ebx+0x73]
  4272be:	push   0x49d20d91
  4272c3:	scas   eax,DWORD PTR es:[edi]
  4272c4:	mov    ds:0xf9f9b5cc,al
  4272c9:	lock ror DWORD PTR [eax],cl
  4272cc:	or     DWORD PTR [ebx],esi
  4272ce:	sbb    DWORD PTR [eax-0x602a5f5d],ecx
  4272d4:	bound  ecx,QWORD PTR [ecx-0x5fc45a2b]
  4272da:	loope  0x427309
  4272dc:	popa   
  4272dd:	pop    es
  4272de:	sbb    DWORD PTR ds:0xe40e3b6,0xffffff93
  4272e5:	retf   
  4272e6:	pushf  
  4272e7:	mov    ecx,DWORD PTR [ebp+0xc2e0b5e]
  4272ed:	sbb    eax,0x4ce754c9
  4272f2:	adc    eax,0x77e865a3
  4272f7:	call   0x3477:0x8f2a9253
  4272fe:	dec    ebx
  4272ff:	into   
  427300:	dec    esi
  427301:	add    al,0xca
  427303:	dec    esi
  427304:	sbb    ch,BYTE PTR [edi+ebp*2+0x38e7e472]
  42730b:	fwait
  42730c:	cmp    eax,0x78669ea9
  427311:	fs cli 
  427313:	sbb    BYTE PTR [ecx+edx*4],al
  427316:	dec    edi
  427317:	pusha  
  427318:	scas   eax,DWORD PTR es:[edi]
  427319:	push   0xffffff86
  42731b:	mov    bl,0x1e
  42731d:	outs   dx,DWORD PTR ds:[esi]
  42731e:	and    al,0xf0
  427320:	cmc    
  427321:	mov    ds:0x1569a048,al
  427326:	cdq    
  427327:	mov    bh,0x67
  427329:	stos   DWORD PTR es:[edi],eax
  42732a:	sub    BYTE PTR [edx-0x742d68c],bl
  427330:	dec    edi
  427331:	push   ecx
  427332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427333:	sbb    edi,edi
  427335:	js     0x42735b
  427337:	adc    edx,edx
  427339:	das    
  42733a:	das    
  42733b:	inc    edi
  42733c:	dec    eax
  42733d:	push   0xac655c5d
  427342:	outs   dx,BYTE PTR ds:[esi]
  427343:	pop    eax
  427344:	xlat   BYTE PTR ds:[ebx]
  427345:	jbe    0x42738f
  427347:	xchg   BYTE PTR [ebx+esi*1-0x4d],cl
  42734b:	test   ah,al
  42734d:	pop    edx
  42734e:	lahf   
  42734f:	dec    esi
  427350:	or     DWORD PTR ds:0x52562aa8,edi
  427356:	mov    al,ds:0x91f8dcf5
  42735b:	int3   
  42735c:	or     ch,BYTE PTR [ebx-0x12]
  42735f:	ds push edx
  427361:	jg     0x427387
  427363:	lock clc 
  427365:	(bad)  
  427366:	(bad)  
  427368:	repnz loope 0x427391
  42736b:	sub    BYTE PTR [eax],bl
  42736d:	pop    ss
  42736e:	clc    
  42736f:	int3   
  427370:	and    eax,0x7f2c00d5
  427375:	mov    dl,0xab
  427377:	outs   dx,BYTE PTR ds:[esi]
  427378:	and    edx,DWORD PTR [edx+0x26]
  42737b:	dec    ebp
  42737c:	test   DWORD PTR ds:0x74f59a83,0x4c11a5ab
  427386:	jg     0x427348
  427388:	out    0xb3,al
  42738a:	mov    ebx,0x6a1059f3
  42738f:	cmp    bl,0x54
  427392:	repnz mov bh,0x7
  427395:	jbe    0x427346
  427397:	sbb    DWORD PTR [ebp-0x6e],ebx
  42739a:	(bad)  
  42739b:	jle    0x42740e
  42739d:	(bad)  
  42739e:	cs inc ebx
  4273a0:	fwait
  4273a1:	jnp    0x4273bd
  4273a3:	pusha  
  4273a4:	cmp    edi,edx
  4273a6:	or     DWORD PTR [esi],ebp
  4273a8:	ins    BYTE PTR es:[edi],dx
  4273a9:	adc    DWORD PTR [ecx+0x63f3d68c],ecx
  4273af:	mov    ah,0x35
  4273b1:	push   cs
  4273b2:	lock mov cl,0xc8
  4273b5:	aaa    
  4273b6:	and    edx,edi
  4273b8:	outs   dx,DWORD PTR ds:[esi]
  4273b9:	imul   edi,esp,0xabd84f61
  4273bf:	addr16 mov ebp,0x356abbf2
  4273c5:	mov    edi,0xcfc95099
  4273ca:	push   ss
  4273cb:	out    0x5b,al
  4273cd:	sub    DWORD PTR [esi],ebp
  4273cf:	cmp    bl,ah
  4273d1:	pushf  
  4273d2:	fwait
  4273d3:	dec    eax
  4273d4:	mov    ebx,0xc21d86c2
  4273d9:	loopne 0x4273ba
  4273db:	mov    fs,eax
  4273dd:	mov    BYTE PTR [ebx-0x33],cl
  4273e0:	jnp    0x4273e7
  4273e2:	sub    BYTE PTR [eax-0x402f1be],0xaf
  4273e9:	ror    BYTE PTR [edx],cl
  4273eb:	out    0x55,al
  4273ed:	and    DWORD PTR [ecx+eax*1-0x27],edi
  4273f1:	aad    0x12
  4273f3:	mov    edx,0x8b79cf4a
  4273f8:	xor    ecx,0x78a01916
  4273fe:	pop    esp
  4273ff:	sbb    ah,BYTE PTR [eax+0x41]
  427402:	add    DWORD PTR [ecx+0x39],ebx
  427405:	xchg   dl,cl
  427407:	das    
  427408:	shr    BYTE PTR [ebx],0x7c
  42740b:	lock mov cl,0x61
  42740e:	mov    edi,0x97c5a4c3
  427413:	ds pop esp
  427415:	xlat   BYTE PTR ds:[ebx]
  427416:	xor    DWORD PTR [ecx-0x19],esi
  427419:	daa    
  42741a:	push   0xe87fc916
  42741f:	stc    
  427420:	add    DWORD PTR [ebx-0x45],edx
  427423:	aaa    
  427424:	pop    esi
  427425:	push   eax
  427426:	mov    ds:0xfd4cdf99,al
  42742b:	in     eax,0x11
  42742d:	call   0x90c5:0x4bc44bd2
  427434:	loopne 0x42748e
  427436:	mov    esi,DWORD PTR ds:0xffea997e
  42743c:	mov    cl,0xf9
  42743e:	shl    BYTE PTR [edi-0x6d],0xbc
  427442:	dec    edi
  427443:	push   0x444af3c9
  427448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427449:	loopne 0x4273cd
  42744b:	push   0x2ee3702f
  427450:	outs   dx,DWORD PTR ds:[esi]
  427451:	xor    BYTE PTR [edx],0x10
  427454:	into   
  427455:	pop    edi
  427456:	pop    DWORD PTR [edi+0x20]
  427459:	add    cl,bh
  42745b:	scas   al,BYTE PTR es:[edi]
  42745c:	das    
  42745d:	mov    BYTE PTR [eax+0x44],cl
  427460:	push   ebx
  427461:	push   0x1b45fa49
  427466:	add    al,BYTE PTR [edx]
  427468:	mov    edx,0xb6d85457
  42746d:	test   eax,0x82dfbce3
  427472:	in     al,0xa2
  427474:	mov    cl,0x7e
  427476:	imul   edx,esp,0xffffff9e
  427479:	xor    dl,BYTE PTR [ecx+0x640cc7a1]
  42747f:	shr    BYTE PTR [ebx+0x7b],0x8b
  427483:	sub    DWORD PTR [edx+0x74c44548],esi
  427489:	adc    dl,BYTE PTR [esi+edi*2]
  42748c:	cs mov al,0x76
  42748f:	or     BYTE PTR [eax+edx*1],ah
  427492:	and    al,0xc8
  427494:	popa   
  427495:	sub    al,0x53
  427497:	scas   eax,DWORD PTR es:[edi]
  427498:	dec    esi
  427499:	stos   BYTE PTR es:[edi],al
  42749a:	pushf  
  42749b:	pop    eax
  42749c:	leave  
  42749d:	call   0xd7b2:0x28b7f4ad
  4274a4:	xchg   esi,eax
  4274a5:	inc    esi
  4274a6:	fstp   st(5)
  4274a8:	sbb    eax,0xeb9226f7
  4274ad:	es dec eax
  4274af:	sub    DWORD PTR [edx+esi*2+0xa],0x7c039033
  4274b7:	add    BYTE PTR [edx-0x4183dfc9],dh
  4274bd:	cmp    ah,BYTE PTR [edx]
  4274bf:	ins    BYTE PTR es:[edi],dx
  4274c0:	es gs xchg DWORD PTR ds:[esp+ebp*4+0x20eced41],esi
  4274ca:	mov    eax,ds:0xa37dd2dc
  4274cf:	sbb    ebx,DWORD PTR [edi]
  4274d1:	jbe    0x4274ee
  4274d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274d4:	mov    al,ds:0x9deabe04
  4274d9:	push   ss
  4274da:	dec    ebx
  4274db:	dec    DWORD PTR [eax+0x1f]
  4274de:	std    
  4274df:	(bad)  
  4274e0:	or     eax,0x729c9c75
  4274e5:	mov    WORD PTR [esi+0x55],fs
  4274e8:	mov    ah,0x17
  4274ea:	inc    esi
  4274eb:	shr    esi,0x6
  4274ee:	leave  
  4274ef:	retf   
  4274f0:	lds    esi,FWORD PTR [eax+0x6d6d03ba]
  4274f6:	adc    ebx,ebx
  4274f8:	mov    ah,0x56
  4274fa:	cwde   
  4274fb:	out    dx,eax
  4274fc:	xchg   dh,ch
  4274fe:	sbb    edi,DWORD PTR [esi-0x14843fd4]
  427504:	jbe    0x42756e
  427506:	inc    ecx
  427507:	iret   
  427508:	or     eax,0xc361d0f7
  42750d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42750e:	xor    edx,edi
  427510:	xchg   esi,eax
  427511:	out    dx,al
  427512:	jns    0x427538
  427514:	fucom  st(4)
  427516:	outs   dx,DWORD PTR ss:[esi]
  427518:	mov    ebx,0x603b9c81
  42751d:	test   al,0x37
  42751f:	jmp    0x4274e9
  427521:	push   cs
  427522:	push   ebx
  427523:	sbb    eax,0x36dbe393
  427528:	(bad)  
  427529:	xchg   ebx,eax
  42752a:	push   ds
  42752b:	popa   
  42752c:	inc    ebp
  42752d:	mov    ss,WORD PTR [ecx+0x20]
  427530:	inc    BYTE PTR [eax+esi*1-0x54844a6a]
  427537:	lock sub esi,DWORD PTR [esi]
  42753a:	fs pop es
  42753c:	dec    ebx
  42753d:	clc    
  42753e:	cdq    
  42753f:	add    edi,DWORD PTR [ecx+edi*1-0x5f]
  427543:	push   esp
  427544:	test   DWORD PTR [edx+esi*8],esp
  427547:	and    BYTE PTR [ebp+0x47fe8914],0xb2
  42754e:	push   eax
  42754f:	mov    ah,0x5e
  427551:	mov    eax,DWORD PTR [edx+0x3a9b5608]
  427557:	jbe    0x427575
  427559:	jmp    0xc89318d0
  42755e:	mov    al,ds:0xf4e2c901
  427563:	stos   BYTE PTR es:[edi],al
  427564:	out    0x77,al
  427566:	scas   eax,DWORD PTR es:[edi]
  427567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427568:	xchg   ebp,eax
  427569:	es pop esi
  42756b:	adc    bl,BYTE PTR [ebx+ebp*8+0x222de9d0]
  427572:	dec    eax
  427573:	fcomp  DWORD PTR [ecx]
  427575:	test   al,0xee
  427577:	inc    eax
  427578:	push   ebp
  427579:	mov    esp,0xac8d35af
  42757e:	fcomp  DWORD PTR [edx+0x45]
  427581:	in     al,dx
  427582:	and    al,0xd8
  427584:	cli    
  427585:	add    BYTE PTR [esi],cl
  427587:	mov    dh,0x6d
  427589:	mov    eax,0x6a28f105
  42758e:	push   es
  42758f:	pop    edi
  427590:	mov    edi,cs
  427592:	inc    edx
  427593:	ins    DWORD PTR es:[edi],dx
  427594:	loop   0x427601
  427596:	xchg   esp,eax
  427597:	pop    edi
  427598:	dec    esp
  427599:	cmp    al,0x99
  42759b:	add    ch,BYTE PTR [edx]
  42759d:	or     DWORD PTR [eax-0x13703e3a],edx
  4275a3:	ror    BYTE PTR [edi-0x1d24eee],1
  4275a9:	shl    BYTE PTR [ebx+ebp*2-0x5e],0x6
  4275ae:	push   es
  4275af:	jbe    0x427563
  4275b1:	(bad)  
  4275b2:	fs jno 0x4275e0
  4275b5:	inc    esp
  4275b6:	pop    esp
  4275b7:	mov    dh,BYTE PTR ds:0x4b0d1ea7
  4275bd:	dec    edi
  4275be:	push   ds
  4275bf:	and    eax,esp
  4275c1:	sbb    ebp,DWORD PTR [edi]
  4275c3:	xor    ebp,DWORD PTR [ecx+0x3a]
  4275c6:	mov    ecx,0x3d7c87dc
  4275cb:	mov    dl,0xd9
  4275cd:	sbb    dl,BYTE PTR [eax+0x791b8e38]
  4275d3:	adc    al,BYTE PTR [esi+0x5e]
  4275d6:	push   cs
  4275d7:	hlt    
  4275d8:	loope  0x42759f
  4275da:	xor    BYTE PTR [ebp-0x22d27234],dl
  4275e0:	imul   esp,ecx,0x554b0e46
  4275e6:	jo     0x4275e4
  4275e8:	and    al,0xa
  4275ea:	scas   eax,DWORD PTR es:[edi]
  4275eb:	fnsave [eax]
  4275ed:	or     al,0xd4
  4275ef:	cmp    dl,BYTE PTR [eax]
  4275f1:	push   edx
  4275f2:	jnp    0x4275c0
  4275f4:	jmp    edi
  4275f6:	jmp    0x4275f7
  4275f8:	aam    0x35
  4275fa:	(bad)  
  4275fb:	pop    edi
  4275fc:	(bad)  
  4275fd:	out    0xa1,eax
  4275ff:	sub    DWORD PTR [ebx],eax
  427601:	retf   
  427602:	xchg   esi,eax
  427603:	jnp    0x427647
  427605:	sbb    BYTE PTR [esi],bh
  427607:	push   0xffffffab
  427609:	sub    DWORD PTR [ecx+0x4],0x65f8d4e9
  427610:	loopne 0x4275cc
  427612:	cmp    ch,BYTE PTR [eax*2-0x3f29e6a]
  427619:	test   ebp,edi
  42761b:	pop    ds
  42761c:	jmp    0x75ecff5
  427621:	pop    esp
  427622:	jne    0x427661
  427624:	dec    ecx
  427625:	pop    ebp
  427626:	sbb    edi,edx
  427628:	push   eax
  42762a:	xchg   BYTE PTR [edi],ch
  42762c:	cld    
  42762d:	jp     0x427638
  42762f:	ss xchg ebx,eax
  427631:	mov    fs,WORD PTR [edx-0x6d]
  427634:	mov    dl,0xf4
  427636:	dec    edi
  427637:	sub    DWORD PTR [ecx],0xffffffbf
  42763a:	jp     0x427664
  42763c:	add    DWORD PTR [ebx-0x35],ecx
  42763f:	lds    ecx,FWORD PTR [eax+0x35]
  427642:	loope  0x42762f
  427644:	push   ebx
  427645:	in     eax,dx
  427646:	dec    ebx
  427647:	push   esi
  427648:	or     DWORD PTR [esp+ebp*2],edi
  42764b:	xor    al,0xfe
  42764d:	std    
  42764e:	xchg   DWORD PTR [ebp+esi*1-0xc973fe2],edx
  427655:	cmp    ebx,DWORD PTR [ecx+eax*2-0x7f]
  427659:	test   eax,0x68fe1537
  42765e:	call   0xe763:0xeec29482
  427665:	jmp    0x4a8b:0xf004c386
  42766c:	fisubr WORD PTR [ebp+esi*1+0xe]
  427670:	in     al,0xae
  427672:	loope  0x4276c7
  427674:	adc    al,0x27
  427676:	and    dh,BYTE PTR [edx+0x290d42bc]
  42767c:	pop    ebx
  42767d:	scas   al,BYTE PTR es:[edi]
  42767e:	shl    BYTE PTR [ebx-0x306483f6],0xfa
  427685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427687:	adc    eax,0x8c667e13
  42768c:	and    edi,ebp
  42768e:	and    al,0x61
  427690:	(bad)  
  427691:	lods   eax,DWORD PTR ds:[esi]
  427692:	jns    0x427643
  427694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427695:	pop    ebp
  427696:	jle    0x427645
  427698:	outs   dx,BYTE PTR ds:[esi]
  427699:	xchg   esp,eax
  42769a:	jns    0x4276bb
  42769c:	mov    bl,0x79
  42769e:	dec    esi
  42769f:	add    DWORD PTR ds:0x4f620f60,edx
  4276a5:	nop
  4276a6:	int    0x56
  4276a8:	push   ecx
  4276a9:	mov    dh,0x9c
  4276ab:	mov    DWORD PTR [edx+ebx*1],ebx
  4276ae:	sub    dl,BYTE PTR [ebx+0x69d31087]
  4276b4:	repz leave 
  4276b6:	sti    
  4276b7:	push   ebp
  4276b8:	push   edi
  4276b9:	das    
  4276ba:	pusha  
  4276bb:	cmp    eax,0xa2d3faff
  4276c0:	xor    eax,0xa1c40ad6
  4276c5:	imul   edi
  4276c7:	neg    DWORD PTR [esi-0x3]
  4276ca:	mov    ebp,0x45f91c3b
  4276cf:	pop    eax
  4276d0:	std    
  4276d1:	shl    BYTE PTR [ecx-0x7fffe11],1
  4276d7:	add    al,0x0
  4276d9:	add    BYTE PTR [edx+0x10],bh
  4276dc:	adc    DWORD PTR [esi+0x602de23f],edi
  4276e2:	or     dh,BYTE PTR [eax]
  4276e4:	mov    bl,0xd4
  4276e6:	mov    al,0xb6
  4276e8:	div    ah
  4276ea:	sub    BYTE PTR [ecx],dl
  4276ec:	(bad)  
  4276ed:	lods   al,BYTE PTR fs:[esi]
  4276ef:	rcl    WORD PTR [ecx+0x44754f51],cl
  4276f6:	jl     0x42775c
  4276f8:	push   edi
  4276f9:	test   BYTE PTR [eax+0x46],dh
  4276fc:	mov    al,BYTE PTR [ebx+0x67]
  4276ff:	pop    ecx
  427700:	inc    eax
  427701:	inc    edx
  427702:	mov    edi,0x6853b414
  427707:	bound  eax,QWORD PTR [ebx-0x6fa22481]
  42770d:	dec    eax
  42770e:	ficom  WORD PTR [ecx]
  427710:	or     eax,0xc361bb1f
  427715:	outs   dx,DWORD PTR ds:[esi]
  427716:	fbld   TBYTE PTR [edi-0x3f99cafc]
  42771c:	xor    al,0x1
  42771e:	sub    DWORD PTR [esi-0x75308221],ebp
  427724:	adc    BYTE PTR [ebx-0x2d112a1c],bh
  42772a:	(bad)  
  42772b:	pushf  
  42772c:	inc    esi
  42772d:	mov    edx,0x868815c5
  427732:	or     eax,0x9491d619
  427737:	mov    dh,0x1e
  427739:	mov    bh,0x4f
  42773b:	xchg   edx,eax
  42773c:	les    ecx,FWORD PTR [edx-0x19]
  42773f:	mov    ecx,?
  427741:	(bad)  
  427742:	int3   
  427743:	inc    eax
  427744:	lds    ebp,FWORD PTR [ebx+0x3a]
  427747:	or     eax,0xf8222e4d
  42774c:	frstor [edx+0x2b]
  42774f:	mov    ecx,0xc1082079
  427754:	jb     0x42772d
  427756:	test   BYTE PTR [esi+ebx*2],bh
  427759:	or     ebx,edi
  42775b:	sbb    al,0x33
  42775d:	mov    edx,0x50ca53db
  427762:	arpl   WORD PTR [edi-0x4d5c9d53],si
  427768:	xrelease xchg BYTE PTR [ebp-0x2ac4b380],bl
  42776f:	cmp    eax,0xb3363d36
  427774:	mov    cl,ch
  427776:	das    
  427777:	xor    dh,cl
  427779:	sbb    BYTE PTR [eax-0x35d4582d],bh
  42777f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427780:	sub    DWORD PTR [ebp+0x58],edx
  427783:	int3   
  427784:	add    BYTE PTR [ebx],bh
  427786:	xchg   esi,eax
  427787:	sbb    al,0xe6
  427789:	xor    cl,BYTE PTR [edi-0x72]
  42778c:	and    ebp,eax
  42778e:	cld    
  42778f:	in     al,dx
  427790:	das    
  427791:	jl     0x427811
  427793:	cwde   
  427794:	sbb    BYTE PTR [ecx],ah
  427796:	dec    esp
  427797:	mov    BYTE PTR [ebx-0x3e8ab7d4],bh
  42779d:	cmp    dl,BYTE PTR [edi+0x2599a98b]
  4277a3:	push   edx
  4277a4:	fisttp DWORD PTR [ecx+0x2961dbae]
  4277aa:	push   DWORD PTR [ecx*8+0x30436fc1]
  4277b1:	bound  edx,QWORD PTR [edx+ecx*1+0x6acddc01]
  4277b8:	fsubr  QWORD PTR [eax-0x35]
  4277bb:	aam    0xff
  4277bd:	and    DWORD PTR [esi+edi*1+0xdd9652d],0x7d
  4277c5:	out    dx,eax
  4277c6:	inc    edi
  4277c7:	and    esi,0x35c6ce0d
  4277cd:	ins    BYTE PTR es:[edi],dx
  4277ce:	jns    0x4277f3
  4277d0:	fwait
  4277d1:	cmp    BYTE PTR [eax],ah
  4277d3:	into   
  4277d4:	xor    ebx,DWORD PTR [ecx+ebp*2-0x44]
  4277d8:	inc    ebp
  4277d9:	jae    0x427768
  4277db:	push   es
  4277dc:	aaa    
  4277dd:	popf   
  4277de:	xlat   BYTE PTR ds:[ebx]
  4277df:	push   edi
  4277e0:	mov    cs,WORD PTR [ebx-0x22]
  4277e3:	xchg   esp,eax
  4277e4:	mov    al,0xb7
  4277e6:	out    dx,al
  4277e7:	push   eax
  4277e8:	arpl   WORD PTR [edi-0x768eb310],cx
  4277ee:	ret    
  4277ef:	loop   0x427832
  4277f1:	mov    bl,0x23
  4277f3:	mov    ecx,0xdd5b7236
  4277f8:	in     eax,dx
  4277f9:	mov    edi,0x1aba524a
  4277fe:	and    BYTE PTR [ecx-0x11],ch
  427801:	adc    eax,0xf3d5371a
  427806:	ficom  WORD PTR [eax+edi*2+0xa]
  42780a:	dec    edx
  42780b:	nop
  42780c:	fsubr  st(7),st
  42780e:	cld    
  42780f:	clc    
  427810:	fist   WORD PTR [ebp+0x37]
  427814:	cmp    ebx,0x4531be7a
  42781a:	cmp    esp,ebp
  42781c:	mov    cl,0xae
  42781e:	mov    ebx,0x4a58c58e
  427823:	push   cs
  427824:	add    al,0x1
  427826:	cmp    eax,0x841ac74b
  42782b:	or     ebx,DWORD PTR [esi-0x2a]
  42782e:	dec    esi
  42782f:	add    DWORD PTR [edi-0x36],ebp
  427832:	aas    
  427833:	dec    ebx
  427834:	lock aam 0x78
  427837:	jp     0x4277ca
  427839:	cli    
  42783a:	pop    esi
  42783b:	mov    WORD PTR [eax],cs
  42783d:	cmp    dl,BYTE PTR [esp+eax*2+0x590c71db]
  427844:	ins    BYTE PTR es:[edi],dx
  427845:	inc    eax
  427846:	int    0x1f
  427848:	mov    ah,0x3f
  42784a:	imul   ecx,DWORD PTR [edi-0x78],0x4e
  42784e:	push   edx
  42784f:	pop    eax
  427850:	mov    ah,0xeb
  427852:	lds    edi,FWORD PTR [ecx]
  427854:	stos   BYTE PTR es:[edi],al
  427855:	enter  0x8adb,0x9
  427859:	enter  0xf756,0xa
  42785d:	das    
  42785e:	xchg   ebx,eax
  42785f:	and    eax,DWORD PTR [ebx+0x72]
  427862:	pushf  
  427863:	stos   BYTE PTR es:[edi],al
  427864:	dec    eax
  427865:	imul   eax,ebx,0x4da973f
  42786b:	shl    BYTE PTR ds:0xae1a5bc,cl
  427871:	sub    BYTE PTR [edx+0x3f2d8d79],dl
  427877:	stos   BYTE PTR es:[edi],al
  427878:	mov    bl,0x19
  42787a:	or     dh,BYTE PTR [eax]
  42787c:	dec    ecx
  42787d:	or     ch,BYTE PTR [ebx]
  42787f:	jg     0x42786e
  427881:	jmp    0x6345:0x1f782f1d
  427888:	int    0x98
  42788a:	jno    0x427906
  42788c:	imul   BYTE PTR [esi]
  42788e:	inc    ebx
  42788f:	jb     0x427902
  427891:	cdq    
  427892:	jne    0x4278c3
  427894:	mov    al,ds:0x7ac55ec3
  427899:	sub    esi,esp
  42789b:	inc    esp
  42789c:	mov    al,0x25
  42789e:	push   0xb2812edc
  4278a3:	dec    ecx
  4278a4:	das    
  4278a5:	je     0x42782b
  4278a7:	add    eax,0x1fff377a
  4278ac:	inc    eax
  4278ad:	mov    dl,0x3b
  4278af:	ror    BYTE PTR [esi],0xc1
  4278b2:	js     0x4278c5
  4278b4:	jp     0x427907
  4278b6:	push   edx
  4278b7:	xchg   DWORD PTR [esi+eax*2],ebx
  4278ba:	imul   eax,ecx,0xfffffffe
  4278bd:	pop    ecx
  4278bf:	cld    
  4278c0:	mov    esi,DWORD PTR [edx+0x78]
  4278c3:	ins    DWORD PTR es:[edi],dx
  4278c4:	ja     0x427920
  4278c6:	out    0xd3,eax
  4278c8:	mov    ecx,0xa1816668
  4278cd:	scas   eax,DWORD PTR es:[edi]
  4278ce:	xchg   edx,eax
  4278cf:	out    dx,al
  4278d0:	inc    ebx
  4278d1:	mov    dh,0x4
  4278d3:	sbb    esi,DWORD PTR [edi+0x19aea81b]
  4278d9:	cmp    eax,0x7263f2c9
  4278de:	dec    ebx
  4278df:	push   edx
  4278e0:	sbb    ah,cl
  4278e2:	xchg   eax,ebp
  4278e4:	test   al,0xce
  4278e6:	cmp    al,0x9e
  4278e8:	or     DWORD PTR [edi+0x75fab6a3],esp
  4278ee:	lea    ecx,[ecx-0x43]
  4278f1:	sub    eax,0x67cc1dd7
  4278f6:	ret    0x44a2
  4278f9:	sbb    dh,BYTE PTR [ebp-0x63308d44]
  4278ff:	(bad)  
  427900:	fidiv  DWORD PTR [ebx+ebx*8]
  427903:	enter  0xa2ce,0x7a
  427907:	mov    bl,0xf8
  427909:	push   edx
  42790a:	pop    ebx
  42790b:	in     al,0xb4
  42790d:	vpshab xmm0,xmm1,ds:0x4ddc124b
  427916:	sbb    al,0x20
  427918:	aam    0x14
  42791a:	jmp    0x94af:0x27e96148
  427921:	(bad)  
  427922:	jne    0x4278ea
  427924:	jge    0x4278ab
  427926:	out    0x17,al
  427928:	jbe    0x427928
  42792a:	xor    dl,BYTE PTR [esi+eiz*1+0x22645334]
  427931:	pop    es
  427932:	sar    ah,cl
  427934:	xchg   ebx,eax
  427935:	imul   ecx,DWORD PTR [edi-0x4ec978c],0x44ed7cad
  42793f:	mov    bl,0xca
  427941:	dec    edi
  427942:	lds    ebp,FWORD PTR [eax]
  427944:	dec    edi
  427945:	sub    eax,0x2509b989
  42794a:	scas   al,BYTE PTR es:[edi]
  42794b:	aas    
  42794c:	dec    esp
  42794d:	adc    cl,dh
  42794f:	mov    bl,0x99
  427951:	jmp    0x4279a4
  427953:	nop
  427954:	ins    DWORD PTR es:[edi],dx
  427955:	(bad)  
  427956:	lahf   
  427957:	es xchg al,dh
  42795a:	mov    cl,0xc7
  42795c:	pop    es
  42795d:	in     al,0x75
  42795f:	or     ch,BYTE PTR [edx]
  427961:	inc    edx
  427962:	inc    eax
  427963:	imul   ecx,DWORD PTR [ebp+esi*8+0x68aa4a7d],0xc3ceebe6
  42796e:	(bad)  
  42796f:	fadd   st(4),st
  427971:	popf   
  427972:	pop    eax
  427973:	and    eax,edx
  427975:	cmp    edi,DWORD PTR [ebx+0x4a4c21b7]
  42797b:	pop    edi
  42797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42797d:	cs enter 0x6637,0xea
  427982:	mov    al,0x72
  427984:	cli    
  427985:	sbb    eax,0xc482b8da
  42798a:	jmp    0x98fe:0x581274b5
  427991:	jg     0x42791a
  427993:	mov    ch,0x2f
  427995:	cdq    
  427996:	mov    dh,0xe2
  427998:	lods   al,BYTE PTR ds:[esi]
  427999:	mov    esp,esp
  42799b:	out    0xa3,al
  42799d:	popa   
  42799e:	or     eax,0x1c8bbd9f
  4279a3:	sti    
  4279a4:	mov    cl,0x12
  4279a6:	jl     0x427a04
  4279a8:	cwde   
  4279a9:	push   edi
  4279aa:	faddp  st(3),st
  4279ac:	(bad)  
  4279ad:	out    0x91,al
  4279af:	dec    ecx
  4279b0:	push   ebx
  4279b1:	leave  
  4279b2:	ret    
  4279b3:	xor    eax,0x38e69e8a
  4279b8:	add    ecx,esi
  4279ba:	sub    BYTE PTR [ecx-0x45],ah
  4279bd:	sahf   
  4279be:	out    dx,eax
  4279bf:	rcr    BYTE PTR [edi-0x64],0x77
  4279c3:	aas    
  4279c4:	enter  0x75bd,0x3
  4279c8:	or     ebp,esi
  4279ca:	std    
  4279cb:	add    edx,ecx
  4279cd:	xor    ebx,DWORD PTR [esi]
  4279cf:	push   es
  4279d0:	shl    ah,1
  4279d2:	sub    cl,BYTE PTR [edx]
  4279d4:	mov    esi,0xe197c621
  4279d9:	loop   0x4279b4
  4279db:	inc    ebx
  4279dc:	dec    ecx
  4279dd:	mov    ebx,0x267fec98
  4279e2:	popf   
  4279e3:	ins    BYTE PTR es:[edi],dx
  4279e4:	xlat   BYTE PTR ds:[ebx]
  4279e5:	pop    ds
  4279e6:	and    eax,eax
  4279e8:	adc    eax,0x2466298a
  4279ed:	test   eax,0xa64e7829
  4279f2:	pop    ebp
  4279f3:	nop
  4279f4:	sahf   
  4279f5:	adc    DWORD PTR [eax-0x28582d96],eax
  4279fb:	mov    DWORD PTR [esi],esp
  4279fd:	mov    eax,0x75239224
  427a02:	jmp    0xeb47:0xb1d84033
  427a09:	mov    DWORD PTR [ecx],edi
  427a0b:	(bad)  
  427a0c:	pop    ds
  427a0d:	inc    ebp
  427a0e:	call   0x9ec689c2
  427a13:	pop    ebp
  427a14:	scas   eax,DWORD PTR es:[edi]
  427a15:	enter  0x32df,0x47
  427a19:	pop    edx
  427a1a:	scas   al,BYTE PTR es:[edi]
  427a1b:	bsf    eax,DWORD PTR [edx-0xec92f7]
  427a22:	sub    ebx,DWORD PTR [ebx-0x10]
  427a25:	add    al,0x4c
  427a27:	xchg   ecx,eax
  427a28:	jl     0x4279e0
  427a2a:	sbb    dh,BYTE PTR [edi+0x14]
  427a2d:	in     eax,dx
  427a2e:	neg    BYTE PTR [esi+0x53177fdd]
  427a34:	jmp    0x4279b7
  427a36:	xchg   esp,eax
  427a37:	test   eax,0xe66e28e
  427a3c:	and    al,0xe5
  427a3e:	test   DWORD PTR [ecx],edi
  427a40:	mov    cl,0x41
  427a42:	ror    DWORD PTR [ebx-0x27],1
  427a45:	push   es
  427a46:	mov    al,0xe1
  427a48:	xlat   BYTE PTR ds:[bx]
  427a4a:	xor    DWORD PTR [ecx-0x45eab132],ebx
  427a50:	cld    
  427a51:	pop    esi
  427a52:	aaa    
  427a53:	pusha  
  427a54:	mov    ebx,0xc0e27f1c
  427a59:	cmp    DWORD PTR [ecx-0x3f8e849f],ecx
  427a5f:	idiv   dh
  427a61:	fsub   QWORD PTR [ecx+0x57690492]
  427a67:	inc    esi
  427a68:	dec    ebp
  427a69:	enter  0x24c,0xba
  427a6d:	add    al,0xa8
  427a6f:	push   ebx
  427a70:	mov    DWORD PTR [ecx],edx
  427a72:	fwait
  427a73:	sahf   
  427a74:	push   ebx
  427a75:	sub    eax,0x96b180df
  427a7a:	xchg   DWORD PTR [esi+edx*8+0x6f],ebx
  427a7e:	cmc    
  427a7f:	mov    al,0xea
  427a81:	out    dx,eax
  427a82:	stos   DWORD PTR es:[edi],eax
  427a83:	(bad)  
  427a84:	cmp    eax,0x329002f9
  427a89:	rcl    DWORD PTR [ebp-0x57],0xb8
  427a8d:	test   al,0x94
  427a8f:	lea    edi,[esi-0x6c7398f3]
  427a95:	ret    0x77d2
  427a98:	je     0x427a68
  427a9a:	xchg   ebx,eax
  427a9b:	jb     0x427aea
  427a9d:	in     eax,0x6e
  427a9f:	loope  0x427a39
  427aa1:	fcmovu st,st(5)
  427aa3:	add    ah,BYTE PTR [ebp-0x3]
  427aa6:	dec    ebp
  427aa7:	int    0x8f
  427aa9:	loop   0x427ada
  427aab:	cld    
  427aac:	mov    bl,0x50
  427aae:	paddsw mm3,QWORD PTR [eax-0x4c9d21d0]
  427ab5:	mov    ebp,0x78d38a85
  427aba:	jp     0x427a40
  427abc:	jne    0x427ae4
  427abe:	mov    DWORD PTR [eax],ecx
  427ac0:	pushf  
  427ac1:	and    al,0x0
  427ac3:	loopne 0x427a5e
  427ac5:	pop    esp
  427ac6:	push   ss
  427ac7:	jmp    0xe7743b2f
  427acc:	and    eax,0x31647687
  427ad1:	inc    ebx
  427ad2:	adc    DWORD PTR [edx-0x24ddf9aa],edx
  427ad8:	mov    ecx,0xe0162b39
  427add:	push   ds
  427ade:	sbb    cl,BYTE PTR [ecx+0x6884181f]
  427ae4:	mov    ds:0x15fe79e2,eax
  427ae9:	popf   
  427aea:	rcl    BYTE PTR [ebp+0x73],cl
  427aed:	(bad)  
  427aee:	clc    
  427aef:	lock push 0xef9e3a80
  427af5:	pushf  
  427af6:	in     eax,0x11
  427af8:	mov    ecx,0x24f75c59
  427afd:	fnstsw ax
  427aff:	mov    ds:0x45350215,al
  427b04:	jo     0x427a98
  427b06:	sub    dl,BYTE PTR [esp+esi*2]
  427b09:	push   edx
  427b0a:	shl    BYTE PTR [edi],cl
  427b0c:	mov    edx,edx
  427b0e:	inc    esp
  427b0f:	out    0xe2,al
  427b11:	cdq    
  427b12:	ins    DWORD PTR es:[edi],dx
  427b13:	mov    ?,edx
  427b15:	xor    dh,bh
  427b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b18:	daa    
  427b19:	stc    
  427b1a:	mov    bh,0x1b
  427b1c:	adc    eax,0x3a70de28
  427b21:	xchg   esi,eax
  427b22:	push   ss
  427b23:	jno    0x427ad1
  427b25:	aas    
  427b26:	outs   dx,DWORD PTR ds:[esi]
  427b27:	js     0x427b8e
  427b29:	or     eax,0x8f50422
  427b2e:	adc    dl,BYTE PTR [edi]
  427b30:	(bad)  
  427b32:	push   0x65
  427b34:	mov    BYTE PTR [esi+eax*4-0x407dbe3d],dh
  427b3b:	sub    al,0xc6
  427b3d:	outs   dx,DWORD PTR ds:[esi]
  427b3e:	rol    BYTE PTR [ebp+0x24cbc6b9],cl
  427b44:	fwait
  427b45:	lock mov ecx,0x72e261d4
  427b4b:	push   0x31
  427b4d:	xor    eax,DWORD PTR [eax-0x64]
  427b50:	inc    ecx
  427b51:	fcomp  QWORD PTR [ebx+0x1f5122b5]
  427b57:	push   es
  427b58:	ret    0x75aa
  427b5b:	pop    ecx
  427b5c:	sub    ecx,DWORD PTR [ebp+0x5908013e]
  427b62:	out    0x1c,eax
  427b64:	push   ds
  427b65:	mov    ecx,0xd7c2585e
  427b6a:	mov    eax,DWORD PTR ds:0xef0d1c50
  427b70:	lods   eax,DWORD PTR ds:[esi]
  427b71:	cmp    ch,ah
  427b73:	mov    ecx,0xfbc343f3
  427b78:	sbb    eax,0x1e31d34
  427b7d:	std    
  427b7e:	loopne 0x427be2
  427b80:	adc    DWORD PTR [eax+0x7d],esp
  427b83:	fmul   QWORD PTR [edi+eax*4]
  427b86:	test   al,0x9a
  427b88:	gs jne 0x427b47
  427b8b:	jbe    0x427bff
  427b8d:	jmp    0x427b39
  427b8f:	aas    
  427b90:	mov    esp,0x4be42564
  427b95:	push   edx
  427b96:	xchg   ecx,eax
  427b97:	jno    0x427baf
  427b99:	push   0x5
  427b9b:	scas   eax,DWORD PTR es:[edi]
  427b9c:	rol    esp,0xae
  427b9f:	rcr    DWORD PTR [ebx-0x54f2fd50],0xef
  427ba6:	adc    al,0xd7
  427ba8:	mov    al,ds:0x95013fe7
  427bad:	push   ecx
  427bae:	cli    
  427baf:	clc    
  427bb0:	mov    eax,ds:0x6d894f4e
  427bb5:	xchg   ebx,eax
  427bb6:	push   edx
  427bb7:	scas   eax,DWORD PTR es:[edi]
  427bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bb9:	test   ebp,ecx
  427bbb:	js     0x427c08
  427bbd:	mov    ebx,0xd356838e
  427bc2:	fld    TBYTE PTR [edx]
  427bc4:	enter  0xca5d,0xf5
  427bc8:	sbb    dl,BYTE PTR [edx-0x4c]
  427bcb:	mov    ah,0x60
  427bcd:	lahf   
  427bce:	pop    ecx
  427bcf:	push   ds
  427bd0:	pushf  
  427bd1:	push   esp
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x7473e2d0
  427be0:	enter  0xa992,0xf4
  427be4:	add    DWORD PTR [eax],eax
  427be6:	clc    
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [ebp-0x25],ch
  427bec:	jecxz  0x427c58
  427bee:	inc    ebx
  427bef:	sbb    BYTE PTR ds:0x5244ae0d,ch
  427bf5:	inc    edx
  427bf6:	daa    
  427bf7:	add    DWORD PTR [ebx-0x4fc1ea85],ecx
  427bfd:	push   ss
  427bfe:	mov    eax,ds:0x8f611e73
  427c03:	bound  ebp,QWORD PTR [ebp-0x15]
  427c06:	pop    ds
  427c07:	push   edx
  427c08:	std    
  427c09:	and    ah,BYTE PTR [bx+0x2dd]
  427c0e:	inc    edi
  427c0f:	popa   
  427c10:	in     al,dx
  427c11:	jg     0x427bbe
  427c13:	cmp    DWORD PTR [edx],edi
  427c15:	dec    eax
  427c16:	lds    eax,FWORD PTR [ecx+edi*1-0x4772f0db]
  427c1d:	in     eax,0x15
  427c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c20:	add    bl,BYTE PTR [edi]
  427c22:	xchg   esp,eax
  427c23:	inc    esp
  427c24:	lea    ebp,[edx+0x5d780629]
  427c2a:	in     eax,dx
  427c2b:	xchg   ebx,eax
  427c2c:	xor    eax,0x16dcebd0
  427c31:	xor    eax,0xdfdf76be
  427c36:	in     al,dx
  427c37:	adc    esp,DWORD PTR [edx+0x58af2bac]
  427c3d:	sbb    al,0xf
  427c3f:	ret    
  427c40:	adc    DWORD PTR [esi+0x54],ecx
  427c43:	(bad)  
  427c45:	mov    ebx,0x63d6a97c
  427c4a:	push   ss
  427c4b:	add    BYTE PTR [ebp-0xb65aed5],al
  427c51:	sub    eax,DWORD PTR [ebp-0x52997f3]
  427c57:	fild   DWORD PTR [ecx]
  427c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c5a:	das    
  427c5b:	lods   al,BYTE PTR ds:[esi]
  427c5c:	pop    ebp
  427c5d:	xchg   ebp,eax
  427c5e:	sbb    cl,BYTE PTR [ebp+0x39]
  427c61:	mov    ds:0xaa862954,eax
  427c66:	and    ebp,ebx
  427c68:	cmp    al,0x60
  427c6a:	adc    ah,BYTE PTR [eax+esi*8]
  427c6d:	jl     0x427bf9
  427c6f:	push   edx
  427c70:	ins    BYTE PTR es:[edi],dx
  427c71:	hlt    
  427c72:	jnp    0x427c00
  427c74:	adc    al,0xc0
  427c76:	mov    al,0xf9
  427c78:	cmp    DWORD PTR [ecx],eax
  427c7a:	dec    edi
  427c7b:	cli    
  427c7c:	(bad)  
  427c7d:	jmp    0x427cef
  427c7f:	push   edx
  427c80:	js     0x427c31
  427c82:	mov    ebp,0x1e991620
  427c87:	push   cs
  427c88:	mov    esp,0xae5e7973
  427c8d:	mov    edi,0x1d70b581
  427c92:	sub    BYTE PTR [ebx],cl
  427c94:	jbe    0x427c23
  427c96:	jmp    0xb40a9674
  427c9b:	call   0xeec5:0xa51667b3
  427ca2:	aaa    
  427ca3:	dec    esi
  427ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ca5:	dec    ecx
  427ca6:	mov    ch,0x5f
  427ca8:	popa   
  427ca9:	sub    WORD PTR [ecx+0x5c],sp
  427cad:	xchg   edi,eax
  427cae:	and    BYTE PTR [edi-0x9],ch
  427cb1:	or     eax,0x8273d5c4
  427cb6:	(bad)  
  427cb7:	dec    eax
  427cb8:	and    ebx,DWORD PTR [eax+0x70190ede]
  427cbe:	fnstsw WORD PTR [ecx+0x4a44927d]
  427cc4:	xchg   edx,eax
  427cc5:	push   edx
  427cc6:	rcr    dl,cl
  427cc8:	inc    BYTE PTR [ebp+0xe]
  427ccb:	jmp    0x6dfa8c44
  427cd0:	shl    BYTE PTR [ecx],1
  427cd2:	stos   BYTE PTR es:[edi],al
  427cd3:	jae    0x427cfd
  427cd5:	icebp  
  427cd6:	mov    eax,0xb3a96f60
  427cdb:	cmp    edi,DWORD PTR [edi+ebp*2]
  427cde:	mov    ecx,0x147061e8
  427ce3:	cmp    eax,0x4ceb4143
  427ce8:	mov    cl,0xa5
  427cea:	out    dx,al
  427ceb:	ja     0x427cdc
  427ced:	or     DWORD PTR [ecx-0x43],ebx
  427cf0:	loopne 0x427c8f
  427cf2:	loopne 0x427d33
  427cf4:	mov    esp,0x9910a013
  427cf9:	xor    dh,BYTE PTR ss:[ecx+0x21]
  427cfd:	(bad)  
  427cff:	mul    BYTE PTR [eax]
  427d01:	add    bl,BYTE PTR [ebp+0x2a]
  427d04:	mov    ds:0xb5fbf1b8,eax
  427d09:	(bad)  
  427d0a:	arpl   bx,di
  427d0c:	xchg   edi,eax
  427d0d:	sub    eax,0x44bff683
  427d12:	(bad)  
  427d13:	fbstp  TBYTE PTR [ebx+eiz*4+0x18728f59]
  427d1a:	adc    bl,bl
  427d1c:	iret   
  427d1d:	jne    0x427d11
  427d1f:	repnz dec edi
  427d21:	jno    0x427d98
  427d23:	sbb    BYTE PTR [ebp-0x4cc0f486],0xcb
  427d2a:	pop    eax
  427d2c:	push   ecx
  427d2d:	and    al,0x88
  427d2f:	out    0xeb,al
  427d31:	arpl   WORD PTR [edx],sp
  427d33:	test   ecx,0x993397af
  427d39:	or     bl,BYTE PTR [ebx]
  427d3b:	push   esi
  427d3c:	daa    
  427d3d:	popf   
  427d3e:	cmp    bl,0xa1
  427d41:	adc    esi,DWORD PTR [ecx-0x3a]
  427d44:	pop    esi
  427d45:	add    al,0xd7
  427d47:	xor    eax,0xd83343f3
  427d4c:	mov    WORD PTR ds:0x900b80ed,es
  427d52:	push   0x5a8affe0
  427d57:	mov    edx,DWORD PTR [edx-0x5]
  427d5a:	mov    ecx,0xd34710fb
  427d5f:	pop    ebp
  427d60:	dec    edx
  427d61:	cmp    eax,esp
  427d63:	ins    BYTE PTR es:[edi],dx
  427d64:	ins    DWORD PTR es:[edi],dx
  427d65:	push   ebp
  427d66:	xchg   esp,eax
  427d67:	hlt    
  427d68:	mov    edi,0xcffa5242
  427d6d:	leave  
  427d6e:	push   esi
  427d6f:	aam    0x37
  427d71:	mov    ds:0xf16a351a,al
  427d76:	fiadd  DWORD PTR [ebp+0x6f]
  427d79:	shr    DWORD PTR [ecx-0x4eb2e7e0],cl
  427d7f:	cli    
  427d80:	xor    BYTE PTR [ebp+0x437e9e94],0xc3
  427d87:	pop    es
  427d88:	and    BYTE PTR [eax-0x12],dh
  427d8b:	sbb    eax,0x2a4f902d
  427d90:	push   ebx
  427d91:	es cs cli 
  427d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d95:	in     eax,0x27
  427d97:	inc    esi
  427d98:	das    
  427d99:	sbb    al,0x2
  427d9b:	popa   
  427d9c:	sahf   
  427d9d:	(bad)  [ebp+0x7d]
  427da0:	fs dec eax
  427da2:	adc    eax,0xd654704a
  427da7:	ss test al,0xae
  427daa:	sub    DWORD PTR [eax],esi
  427dac:	mov    cl,0xc
  427dae:	and    eax,DWORD PTR [edi-0x80]
  427db1:	int3   
  427db2:	push   0x4a
  427db4:	cmp    dh,bl
  427db6:	int3   
  427db7:	adc    bh,dl
  427db9:	cli    
  427dba:	test   al,0xb9
  427dbc:	pop    eax
  427dbd:	int3   
  427dbe:	xchg   DWORD PTR [esi-0x12],ebp
  427dc1:	into   
  427dc2:	cmc    
  427dc3:	(bad)  
  427dc4:	loop   0x427dee
  427dc6:	cli    
  427dc7:	loopne 0x427e0a
  427dc9:	mov    cl,0x84
  427dcb:	rcl    BYTE PTR [edi+0x6a559660],1
  427dd1:	dec    edi
  427dd2:	add    eax,0xc16eaaff
  427dd7:	or     bl,BYTE PTR [eax+0x2a]
  427dda:	sub    al,0xc8
  427ddc:	push   ds
  427ddd:	cmp    al,0xcf
  427ddf:	mov    ebx,eax
  427de1:	inc    ebx
  427de2:	mov    DWORD PTR [esi-0x5f],eax
  427de5:	jg     0x427daf
  427de7:	aad    0xb1
  427de9:	stos   BYTE PTR es:[edi],al
  427dea:	ret    0xfe30
  427ded:	test   eax,0x3b3bee48
  427df2:	sbb    dl,BYTE PTR [ebx-0x17]
  427df5:	(bad)  
  427df6:	xor    dh,BYTE PTR [ecx]
  427df8:	out    0x91,eax
  427dfa:	lock adc al,0x10
  427dfd:	dec    ebp
  427dfe:	or     eax,0x41d5492a
  427e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e04:	pop    ebx
  427e05:	adc    eax,0x7119e0c1
  427e0a:	sbb    BYTE PTR [esp+eiz*2],dl
  427e0d:	loop   0x427e13
  427e0f:	mov    edx,0x15c1c66a
  427e14:	mov    ecx,0xc03a4472
  427e19:	imul   edx,DWORD PTR [edx-0x1f],0x90e691b2
  427e20:	(bad)  
  427e21:	and    BYTE PTR [edi-0x4502a73b],bl
  427e27:	adc    edx,DWORD PTR [esi-0x1f]
  427e2a:	mov    ebp,0xab5d682b
  427e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e30:	mov    ah,0x68
  427e32:	jl     0x427deb
  427e34:	(bad)  
  427e35:	mov    WORD PTR [ebx+0x391a424f],ds
  427e3b:	rcr    ah,cl
  427e3d:	fs mov al,dh
  427e40:	sar    esi,cl
  427e42:	pop    eax
  427e43:	out    dx,eax
  427e44:	retf   
  427e45:	xor    al,0xa2
  427e47:	fwait
  427e48:	mov    bh,0xf
  427e4a:	cmp    DWORD PTR [ecx+0x2d],ebp
  427e4d:	into   
  427e4e:	cmp    eax,0x154d2bd9
  427e53:	les    esi,FWORD PTR [edi]
  427e55:	pop    esi
  427e56:	std    
  427e57:	mov    esp,0xb158438f
  427e5c:	cmp    BYTE PTR [esi],0xa
  427e5f:	daa    
  427e60:	pop    ecx
  427e61:	cli    
  427e62:	mov    al,0xfa
  427e64:	adc    DWORD PTR [esi],0xffffffcb
  427e67:	pop    edx
  427e68:	mov    ebx,0x22cc17ee
  427e6d:	add    eax,0xbf48decd
  427e72:	mov    ch,0x2b
  427e74:	mov    ds:0x33772271,al
  427e79:	jg     0x427ec5
  427e7b:	add    ecx,DWORD PTR [ebx-0x34bad432]
  427e81:	into   
  427e82:	inc    ebx
  427e83:	bound  esp,QWORD PTR [eax+0x28]
  427e86:	and    al,0xe7
  427e88:	out    0x18,al
  427e8a:	ret    
  427e8b:	sar    DWORD PTR ss:[ecx+ebp*2],1
  427e8f:	dec    esp
  427e90:	out    0xe3,eax
  427e92:	lds    edi,FWORD PTR [edx+0x6b]
  427e95:	ss push ds
  427e97:	push   ecx
  427e98:	or     BYTE PTR [edx],cl
  427e9a:	leave  
  427e9b:	imul   BYTE PTR ds:0x2d256e38
  427ea1:	ret    
  427ea2:	cmp    eax,0x83edd0f4
  427ea7:	push   ss
  427ea8:	mov    esp,0x243215ce
  427ead:	and    eax,0xfe1d2374
  427eb2:	arpl   WORD PTR [esi-0x61f1a626],si
  427eb8:	jge    0x427f08
  427eba:	imul   edx,DWORD PTR [ebx-0x49],0x48
  427ebe:	(bad)  
  427ebf:	xor    eax,DWORD PTR [ebx]
  427ec1:	cmp    bh,cl
  427ec3:	mov    ds:0x5bc1b658,eax
  427ec8:	addr16 iret 
  427eca:	xchg   edi,eax
  427ecb:	push   ss
  427ecc:	mov    ah,0x52
  427ece:	mov    eax,ds:0xdbee38e2
  427ed3:	pop    ecx
  427ed4:	es dec ecx
  427ed6:	inc    ebp
  427ed7:	and    esi,DWORD PTR [edi-0x4a]
  427eda:	ret    
  427edb:	jno    0x427e9e
  427edd:	adc    edx,DWORD PTR [esi-0x5e5e523a]
  427ee3:	lods   al,BYTE PTR ds:[esi]
  427ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ee5:	les    edi,FWORD PTR [eax+0x35]
  427ee8:	lods   al,BYTE PTR ds:[esi]
  427ee9:	jecxz  0x427f1b
  427eeb:	sar    BYTE PTR [edi+0x48],0x79
  427eef:	gs (bad) 
  427ef1:	mov    bh,0xaa
  427ef3:	clc    
  427ef4:	ins    BYTE PTR es:[edi],dx
  427ef5:	bnd jge 0x427ef9
  427ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ef9:	outs   dx,DWORD PTR ds:[esi]
  427efa:	(bad)  
  427efb:	mov    esi,0x473bb527
  427f00:	sub    bh,BYTE PTR [esi+0x4cb8f5df]
  427f06:	xchg   esp,eax
  427f07:	inc    ebx
  427f08:	jmp    0x427ebd
  427f0a:	(bad)  
  427f0b:	fwait
  427f0c:	push   cs
  427f0d:	xlat   BYTE PTR ds:[ebx]
  427f0e:	ins    DWORD PTR es:[edi],dx
  427f0f:	popa   
  427f10:	inc    eax
  427f11:	jno    0x427ed3
  427f13:	das    
  427f14:	sub    ah,BYTE PTR [bx+si-0x75bf]
  427f19:	add    DWORD PTR [esi],eax
  427f1b:	(bad)  
  427f1c:	jae    0x427f2b
  427f1e:	lock add bl,ah
  427f21:	stos   DWORD PTR es:[edi],eax
  427f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f23:	jbe    0x427ee0
  427f25:	jb     0x427f83
  427f27:	outs   dx,BYTE PTR ds:[esi]
  427f28:	push   edx
  427f29:	sti    
  427f2a:	cs (bad) 
  427f2c:	mov    BYTE PTR [ebp-0x5e],0x6d
  427f30:	(bad)  
  427f31:	clc    
  427f32:	mov    ds:0x6bcdc6fc,al
  427f38:	addr16 inc edx
  427f3a:	xchg   ecx,eax
  427f3b:	mov    dl,0xf8
  427f3d:	cli    
  427f3e:	or     dl,BYTE PTR [ebp+0xa]
  427f41:	xor    dh,BYTE PTR [edi+0x7114fd97]
  427f47:	mov    eax,ds:0x6ecdedb9
  427f4c:	mov    ebp,0xc86d1713
  427f51:	enter  0xdf8e,0xa4
  427f55:	int3   
  427f56:	leave  
  427f57:	lock (bad) 
  427f59:	dec    esp
  427f5a:	inc    edx
  427f5b:	psraw  mm2,QWORD PTR [esi+0x6a904d13]
  427f62:	stos   DWORD PTR es:[edi],eax
  427f63:	sbb    ah,BYTE PTR [edx+0x74]
  427f66:	pusha  
  427f67:	sub    dh,al
  427f69:	push   cs
  427f6a:	cs aaa 
  427f6c:	cs inc ebp
  427f6e:	daa    
  427f6f:	out    dx,eax
  427f70:	inc    esp
  427f71:	das    
  427f72:	stc    
  427f73:	mov    ds:0xc1053885,al
  427f78:	cdq    
  427f79:	fst    QWORD PTR [ecx]
  427f7b:	dec    edi
  427f7c:	ins    DWORD PTR es:[edi],dx
  427f7d:	xor    DWORD PTR ds:0xb90b876c,ebp
  427f83:	std    
  427f84:	cmp    eax,0xdcc2d515
  427f89:	xchg   ebp,eax
  427f8a:	cmp    cl,0x58
  427f8d:	sbb    eax,0x5356f5b8
  427f92:	pusha  
  427f93:	or     ecx,ebp
  427f95:	retf   0xc787
  427f98:	rol    ch,0x9a
  427f9b:	dec    eax
  427f9c:	add    eax,DWORD PTR [ecx-0x382f344d]
  427fa2:	mov    ah,BYTE PTR [ecx+0x5892eaf4]
  427fa8:	aas    
  427fa9:	dec    edi
  427faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fab:	retf   
  427fac:	or     eax,0x8cf716ba
  427fb1:	iret   
  427fb2:	and    ebp,eax
  427fb4:	add    al,0x3c
  427fb6:	jmp    0x427fd2
  427fb8:	mov    ebx,0x6df55b29
  427fbd:	inc    esi
  427fbe:	in     al,dx
  427fbf:	sub    al,0x29
  427fc1:	adc    eax,0xa06d0c3a
  427fc6:	jle    0x427fb3
  427fc8:	xor    cl,BYTE PTR [edx+0x6d3f44c]
  427fce:	call   0x90d5:0x9632fefd
  427fd5:	(bad)  
  427fd6:	hlt    
  427fd7:	sbb    eax,0xc35cef4
  427fdc:	push   ds
  427fdd:	int3   
  427fde:	cmp    eax,0xe852cd9b
  427fe3:	mov    dl,0xec
  427fe5:	jmp    0x8b98:0x70be1f82
  427fec:	xchg   ebx,eax
  427fed:	pop    edx
  427fee:	mov    WORD PTR [ecx+0x2f],cs
  427ff1:	into   
  427ff2:	pop    esi
  427ff3:	xlat   BYTE PTR fs:[ebx]
  427ff5:	int3   
  427ff6:	pop    ds
  427ff7:	cmp    al,0x28
  427ff9:	add    ecx,esi
  427ffb:	(bad)  
  427ffc:	ret    
  427ffd:	add    al,0x35
  427fff:	xor    DWORD PTR [eax+0x70],0x53
  428003:	repnz sti 
  428005:	mov    al,0xe9
  428007:	scas   eax,DWORD PTR es:[edi]
  428008:	cli    
  428009:	les    eax,FWORD PTR [eax-0x36]
  42800c:	(bad)  
  42800e:	sbb    BYTE PTR [eax+0x69],ah
  428011:	mov    esi,0xec71eb11
  428016:	adc    BYTE PTR [ecx-0x3a],bh
  428019:	in     eax,dx
  42801a:	jne    0x427fa8
  42801c:	or     cl,BYTE PTR [edi+ebp*8+0x74]
  428020:	adc    eax,0x9a8192e2
  428025:	xchg   ecx,eax
  428026:	test   eax,0x6b8d9ec0
  42802b:	popf   
  42802c:	lahf   
  42802d:	call   0xdce2:0x9c97b4c0
  428034:	and    al,0xa3
  428036:	sbb    DWORD PTR [eax],ebx
  428038:	ror    DWORD PTR [eax+0x67447327],0x88
  42803f:	pop    ebx
  428040:	lea    edx,[ebp-0x6e]
  428043:	xchg   edx,eax
  428044:	mov    esp,0xed9eaf03
  428049:	ss dec edi
  42804b:	cmc    
  42804c:	sbb    al,0xe0
  42804e:	lea    ebx,[ebx+ebp*1]
  428051:	and    DWORD PTR [ebx-0x553cf9d7],ebp
  428057:	pop    ebp
  428058:	pop    esi
  428059:	jnp    0x4280a8
  42805b:	or     cl,ah
  42805d:	sar    BYTE PTR [ecx-0x66d3b8c],cl
  428063:	ret    0x772a
  428066:	mov    eax,0x1792599a
  42806b:	jle    0x428031
  42806d:	pop    es
  42806e:	inc    ecx
  42806f:	cmc    
  428070:	shl    DWORD PTR [ebx-0x7b68087c],1
  428076:	pop    esi
  428077:	shr    ecx,1
  428079:	jl     0x42801e
  42807b:	mov    ebx,DWORD PTR [esi+0x3]
  42807e:	or     esi,eax
  428080:	and    dl,BYTE PTR [ebx+0x30]
  428083:	test   al,0xb0
  428085:	and    BYTE PTR [esi+ebx*1+0x4d8bef3c],cl
  42808c:	inc    edx
  42808d:	cdq    
  42808e:	or     bl,bl
  428090:	mov    dl,0x3d
  428092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428093:	pop    ds
  428094:	mov    cl,0x4e
  428096:	mov    WORD PTR [esi],?
  428098:	xor    DWORD PTR [esi],esp
  42809a:	push   eax
  42809b:	dec    ecx
  42809c:	push   ss
  42809d:	pop    ecx
  42809e:	fnstsw WORD PTR [edx+ebp*4]
  4280a1:	cmp    BYTE PTR [edx-0x4],ch
  4280a4:	mov    ds:0x5353c4cf,al
  4280a9:	faddp  st(1),st
  4280ab:	xor    ecx,DWORD PTR [edx+0x50]
  4280ae:	push   es
  4280af:	std    
  4280b0:	enter  0xc82e,0xd7
  4280b4:	push   ebx
  4280b5:	rcr    BYTE PTR [eax+edx*2+0x77],0x61
  4280ba:	adc    ah,BYTE PTR [edi+0x48]
  4280bd:	jle    0x4280bc
  4280bf:	test   DWORD PTR [esi-0x26],edx
  4280c2:	pop    es
  4280c3:	leave  
  4280c4:	jb     0x428123
  4280c6:	push   ecx
  4280c7:	jg     0x428148
  4280c9:	pop    es
  4280ca:	sti    
  4280cb:	jmp    0x86bbf820
  4280d0:	jecxz  0x428094
  4280d2:	inc    edx
  4280d3:	aas    
  4280d4:	or     DWORD PTR [ebx+eax*4-0x4b],ecx
  4280d8:	pop    es
  4280d9:	sub    ch,BYTE PTR [edx]
  4280db:	inc    esi
  4280dc:	dec    ecx
  4280dd:	jle    0xc711a222
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x7ad89742]
  4280ef:	sub    ch,BYTE PTR [esi+0x1f9a115]
  4280f5:	add    cl,dh
  4280f7:	add    al,0x0
  4280f9:	add    bh,bh
  4280fb:	mov    dh,BYTE PTR [ecx]
  4280fd:	xchg   esp,eax
  4280fe:	ins    DWORD PTR es:[edi],dx
  4280ff:	xchg   ebp,eax
  428100:	(bad)  
  428101:	jle    0x428099
  428103:	and    DWORD PTR [eax],esi
  428105:	sbb    eax,0x3a8abd24
  42810a:	push   ds
  42810b:	in     al,0x7
  42810d:	leave  
  42810e:	lds    esp,FWORD PTR [ebp*2+0x8619a77]
  428115:	adc    DWORD PTR [ebx-0x1c1e85d],esi
  42811b:	dec    ebx
  42811c:	xchg   BYTE PTR [ecx+0xd4c6a98],ch
  428122:	or     eax,ecx
  428124:	adc    esi,0xd01c1423
  42812a:	sti    
  42812b:	xor    al,0x22
  42812d:	mov    ds,WORD PTR [ecx-0x2e9fa127]
  428133:	mov    ch,dh
  428135:	pop    ecx
  428136:	out    dx,eax
  428137:	xor    DWORD PTR [edi],0x87b060d6
  42813d:	out    dx,al
  42813e:	mov    DWORD PTR [ebx+0x73],ebp
  428141:	mov    al,0x3
  428143:	shl    DWORD PTR [ecx],cl
  428145:	test   bl,dh
  428147:	pop    ebx
  428148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428149:	fild   WORD PTR [edx+0x54]
  42814c:	push   cs
  42814d:	mov    edx,0x31ceab0d
  428152:	icebp  
  428153:	div    BYTE PTR [ebx+edx*2-0x640ace2]
  42815a:	or     esp,ebx
  42815c:	lods   eax,DWORD PTR ds:[esi]
  42815d:	ins    BYTE PTR es:[edi],dx
  42815e:	xor    eax,0x820474b3
  428163:	and    esp,DWORD PTR [esp+eax*4-0x632b5e4f]
  42816a:	jo     0x428187
  42816c:	jno    0x428166
  42816e:	jns    0x4281a2
  428170:	xlat   BYTE PTR ds:[ebx]
  428171:	xchg   edi,eax
  428172:	fmul   st(0),st
  428174:	lea    edx,[edx]
  428176:	arpl   WORD PTR [edi],sp
  428178:	and    ch,BYTE PTR [edi+0x40f9248a]
  42817e:	xor    edx,esp
  428180:	cwde   
  428181:	add    DWORD PTR [esi],esp
  428183:	es pop ebx
  428185:	mov    bl,0x67
  428187:	push   esi
  428188:	cs lahf 
  42818a:	push   esi
  42818b:	pop    ds
  42818c:	jo     0x428200
  42818e:	pop    eax
  42818f:	fdivr  DWORD PTR [eax+0x75]
  428192:	push   edx
  428193:	pop    ebp
  428194:	test   al,0x7e
  428196:	or     esp,DWORD PTR [esi+0x24678d9]
  42819c:	pop    ds
  42819d:	stos   BYTE PTR es:[edi],al
  42819e:	outs   dx,DWORD PTR ds:[esi]
  42819f:	adc    DWORD PTR [ebx-0x51],esp
  4281a2:	pop    ecx
  4281a3:	sti    
  4281a4:	dec    esp
  4281a5:	mov    bl,0xeb
  4281a7:	mov    edx,0xb92ff11c
  4281ac:	sahf   
  4281ad:	mov    ecx,0x445e9cb9
  4281b2:	pop    ebp
  4281b3:	inc    edi
  4281b4:	std    
  4281b5:	mov    ebx,0x413bc3c6
  4281ba:	or     eax,0x5426b12f
  4281bf:	sbb    ecx,DWORD PTR [esi-0x7a]
  4281c2:	es dec edx
  4281c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281c5:	mov    ah,0x5e
  4281c7:	adc    DWORD PTR [edx],0x4987f202
  4281cd:	push   ebp
  4281ce:	ficom  WORD PTR [esi]
  4281d0:	jb     0x428198
  4281d2:	les    edx,FWORD PTR [eax+0x5a]
  4281d5:	xchg   esp,eax
  4281d6:	dec    ecx
  4281d7:	loope  0x428247
  4281d9:	cmp    DWORD PTR [eax],0xfffffff5
  4281dc:	ficomp DWORD PTR [eax]
  4281de:	fidivr DWORD PTR [eax-0x27827b4]
  4281e4:	loope  0x42822e
  4281e6:	jg     0x428176
  4281e8:	adc    al,0x7d
  4281ea:	jge    0x42817a
  4281ec:	xor    al,0x56
  4281ee:	shl    WORD PTR [edi],cl
  4281f1:	xor    ah,dh
  4281f3:	sar    BYTE PTR [ecx-0x3fa0abf5],0xe7
  4281fa:	test   DWORD PTR [ebx-0x274f977b],ebp
  428200:	gs inc edx
  428202:	nop
  428203:	data16 sbb cl,ah
  428206:	ins    DWORD PTR es:[edi],dx
  428207:	push   es
  428208:	dec    ebx
  428209:	mov    ds:0xbc6f17c1,al
  42820e:	dec    esi
  42820f:	adc    eax,DWORD PTR [ebp+0x27ecb1b6]
  428215:	or     ah,BYTE PTR [edx-0x3ec1a505]
  42821b:	pop    ebx
  42821c:	mov    al,ds:0xe9c2cf7c
  428221:	stos   DWORD PTR es:[edi],eax
  428222:	lods   eax,DWORD PTR ds:[esi]
  428223:	lods   eax,DWORD PTR ds:[esi]
  428224:	add    DWORD PTR [edx+ebp*8+0x1d],edi
  428228:	jo     0x4281ab
  42822a:	fwait
  42822b:	jge    0x428244
  42822d:	rcr    DWORD PTR [edx+ecx*8],0x34
  428231:	jle    0x428219
  428233:	mov    edx,0xf4531d64
  428238:	fbld   TBYTE PTR [edi]
  42823a:	ret    
  42823b:	mov    ebx,edx
  42823d:	add    bh,0x53
  428240:	jge    0x4282ba
  428242:	das    
  428243:	push   edi
  428244:	pop    ss
  428245:	pop    edx
  428246:	cwde   
  428247:	xchg   ebx,eax
  428248:	jmp    FWORD PTR [ecx+0x7a]
  42824b:	sbb    ah,cl
  42824d:	sbb    BYTE PTR [ebx+esi*8+0xf],cl
  428251:	lds    eax,FWORD PTR [edx-0x7c6cee40]
  428257:	cmp    dh,cl
  428259:	stc    
  42825a:	dec    ebx
  42825b:	out    0xec,eax
  42825d:	ss lock jmp 0x4281e2
  428261:	mov    al,0xdc
  428263:	cmp    eax,0x43432e
  428268:	mov    edx,0x8b44635e
  42826d:	and    bh,0xe3
  428270:	ss add al,0xbf
  428273:	test   BYTE PTR [ebx],al
  428275:	mov    esi,0xbadfe405
  42827a:	push   0xffffffe3
  42827c:	cs mov eax,0xdad069f0
  428282:	ins    BYTE PTR es:[edi],dx
  428283:	(bad)  
  428284:	retf   
  428285:	das    
  428286:	repnz add al,0x8d
  428289:	rol    BYTE PTR [edi+edi*4-0x5f80f382],1
  428290:	in     eax,0xbc
  428292:	nop
  428293:	lahf   
  428294:	mov    dh,0xb6
  428296:	jmp    DWORD PTR [eax+0x6a]
  428299:	mov    esi,0x9bbe8dae
  42829e:	sub    al,0xf3
  4282a0:	shl    DWORD PTR [eax-0x59],0x99
  4282a4:	mov    esp,0x605edf24
  4282a9:	cmp    ebx,esp
  4282ab:	xor    ebp,DWORD PTR [esi]
  4282ad:	jo     0x4282c0
  4282af:	mov    bl,0xed
  4282b1:	jge    0x428233
  4282b3:	cli    
  4282b4:	xor    edi,ebp
  4282b6:	cmp    cl,ah
  4282b8:	dec    esp
  4282b9:	jne    0x42831f
  4282bb:	jmp    FWORD PTR [edx]
  4282bd:	lds    esi,FWORD PTR [edi-0x1a627c44]
  4282c3:	imul   edi,DWORD PTR [ecx+0x39355707],0xffffffd7
  4282ca:	into   
  4282cb:	ja     0x4282b7
  4282cd:	ins    BYTE PTR es:[edi],dx
  4282ce:	in     al,0x4
  4282d0:	cmc    
  4282d1:	sbb    al,0xed
  4282d3:	(bad)  
  4282d4:	out    dx,al
  4282d5:	inc    edi
  4282d6:	mov    ds:0xcca228da,eax
  4282db:	inc    esi
  4282dc:	mov    ah,0xf6
  4282de:	mov    DWORD PTR [edx-0x7d],0xce010298
  4282e5:	cld    
  4282e6:	dec    ebx
  4282e7:	mov    DWORD PTR [eax+0x21],ebx
  4282ea:	and    al,0xd5
  4282ec:	outs   dx,BYTE PTR ds:[esi]
  4282ed:	jle    0x4282de
  4282ef:	or     esi,0xffffffa4
  4282f2:	fisttp DWORD PTR [eax+0x3285ba09]
  4282f8:	out    0xca,al
  4282fa:	jecxz  0x42834d
  4282fc:	push   eax
  4282fd:	ror    DWORD PTR [ebp+eiz*4-0x20],cl
  428301:	mov    esp,0xce939e85
  428306:	test   eax,0x5f6d4819
  42830b:	test   eax,0x6bb397f8
  428310:	dec    ebx
  428311:	pusha  
  428312:	imul   esp,DWORD PTR gs:[edi+0x3a],0xcddc8624
  42831a:	jmp    0x3ca95e43
  42831f:	dec    ebx
  428320:	fs ja  0x42830d
  428323:	imul   eax,DWORD PTR [ebx+0x5a45691b],0xffffffcd
  42832a:	test   eax,0xd22bebf7
  42832f:	xor    BYTE PTR [ecx],dl
  428331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428332:	dec    ebp
  428333:	fwait
  428334:	sti    
  428335:	js     0x428363
  428337:	out    0x61,al
  428339:	imul   ebp,DWORD PTR [esi],0x4ed9c077
  42833f:	and    eax,0x26a27d96
  428344:	cmp    eax,0x1a4629cf
  428349:	pop    ds
  42834a:	push   ss
  42834b:	pusha  
  42834c:	int    0x4f
  42834e:	xchg   edi,eax
  42834f:	sbb    al,0xc
  428351:	pop    es
  428352:	stos   DWORD PTR es:[edi],eax
  428353:	js     0x4282da
  428355:	xchg   ebp,eax
  428356:	test   DWORD PTR [edi],esp
  428358:	add    DWORD PTR [ecx+0x1376f768],esp
  42835e:	int    0x9b
  428360:	rcr    DWORD PTR [eax+0x7f],cl
  428363:	sub    al,0x6b
  428365:	add    ebp,DWORD PTR [esi+0x53ae95e]
  42836b:	mov    ebp,0xb190c54e
  428370:	inc    esp
  428371:	aad    0x93
  428373:	cli    
  428374:	xchg   edx,eax
  428375:	and    ebp,DWORD PTR [ecx+edi*4+0x5d9da267]
  42837c:	adc    ch,cl
  42837e:	jne    0x4283f7
  428380:	push   es
  428381:	ficomp DWORD PTR [eax]
  428383:	push   edx
  428384:	pop    ds
  428385:	sub    al,0xa1
  428387:	jle    0x428348
  428389:	xor    ebx,DWORD PTR [edx]
  42838b:	xchg   esi,eax
  42838c:	pop    ecx
  42838d:	dec    ebp
  42838e:	pop    es
  42838f:	xchg   esp,eax
  428390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428391:	jg     0x4283eb
  428393:	gs repnz push ds
  428396:	mov    esi,0xd3816d13
  42839b:	outs   dx,DWORD PTR ds:[esi]
  42839c:	imul   ebp,DWORD PTR [esi-0x7],0x31
  4283a0:	adc    DWORD PTR [ecx-0x72],0xf2adf419
  4283a7:	sub    cl,bh
  4283a9:	stos   BYTE PTR es:[edi],al
  4283aa:	out    0xe8,al
  4283ac:	mov    es,WORD PTR [ebp-0x14]
  4283af:	and    ebp,DWORD PTR [ecx+esi*8-0x4b]
  4283b3:	sbb    eax,0xebe1ddf0
  4283b8:	fimul  WORD PTR [ebp+0x2d2b9221]
  4283be:	mov    ah,0x85
  4283c0:	shl    BYTE PTR [edx-0x78],cl
  4283c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283c4:	test   BYTE PTR [ebx+esi*8],bh
  4283c7:	push   ebx
  4283c8:	int3   
  4283c9:	loop   0x428371
  4283cb:	ret    0xfee6
  4283ce:	xor    BYTE PTR [esp+edi*1],bl
  4283d1:	push   cs
  4283d2:	rcr    edi,cl
  4283d4:	aad    0x67
  4283d6:	dec    ebp
  4283d7:	mov    edx,0xea6073c3
  4283dc:	sbb    ah,dh
  4283de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283df:	scas   eax,DWORD PTR es:[edi]
  4283e0:	rcl    DWORD PTR [ebx-0x54],cl
  4283e3:	out    0xbe,al
  4283e5:	jo     0x42843c
  4283e7:	clc    
  4283e8:	int3   
  4283e9:	sahf   
  4283ea:	popa   
  4283eb:	ds (bad) 
  4283ed:	mov    bl,0x22
  4283ef:	mov    dl,0x40
  4283f1:	mov    eax,ds:0x6eb906f4
  4283f6:	adc    eax,0xe55fe1f2
  4283fb:	jae    0x428406
  4283fd:	mov    eax,ds:0x63a644b3
  428402:	sub    DWORD PTR [esi],edx
  428404:	mov    bl,0x62
  428406:	mov    ebp,DWORD PTR [ebp-0x39]
  428409:	xor    bh,BYTE PTR [esi+0x5350a91e]
  42840f:	stc    
  428410:	stos   DWORD PTR es:[edi],eax
  428411:	jge    0x42840f
  428413:	inc    DWORD PTR [eax+0x7b]
  428416:	ror    cl,cl
  428418:	xchg   DWORD PTR [ebx+0x4205eb8b],ebx
  42841e:	mov    al,0xdd
  428420:	xlat   BYTE PTR ds:[ebx]
  428421:	mov    ebp,0xdb6e9405
  428426:	(bad)  
  428427:	xlat   BYTE PTR ds:[ebx]
  428428:	fwait
  428429:	je     0x4284a8
  42842b:	cmp    ah,BYTE PTR [edi+0x4bdb2143]
  428431:	mov    al,0x57
  428433:	push   ebx
  428434:	inc    ebp
  428435:	stos   BYTE PTR es:[edi],al
  428436:	adc    eax,0x983d36a7
  42843b:	imul   esp,DWORD PTR [edi+ecx*2+0x77e2f2c0],0xe3099143
  428446:	in     al,dx
  428447:	xlat   BYTE PTR ds:[ebx]
  428448:	push   edi
  428449:	and    ecx,edx
  42844b:	data16 add al,0x7f
  42844e:	or     al,0x30
  428450:	outs   dx,DWORD PTR ds:[esi]
  428451:	lea    edi,[edx+edi*1+0x1c]
  428455:	push   ss
  428456:	push   0xfffffffb
  428458:	adc    BYTE PTR [eax],ah
  42845a:	mov    BYTE PTR [esp+ebx*1-0x35],dh
  42845e:	sbb    ecx,ebx
  428460:	push   0xffffff91
  428462:	xor    eax,0xa684bc64
  428467:	retf   
  428468:	mov    ah,0xce
  42846a:	xchg   esp,eax
  42846b:	inc    edx
  42846c:	and    dh,al
  42846e:	jp     0x428417
  428470:	fsubr  QWORD PTR [esi+0x18]
  428473:	xor    eax,ebx
  428475:	adc    BYTE PTR [ecx*2-0x782d6b89],ch
  42847c:	cmp    bl,bl
  42847e:	adc    eax,0x71850eaf
  428483:	mov    ebx,0x30204bc8
  428488:	in     eax,0xe5
  42848a:	jo     0x428427
  42848c:	xchg   ebp,eax
  42848d:	(bad)  
  42848f:	cmp    esp,0x7f0b9408
  428495:	popf   
  428496:	in     al,dx
  428497:	cmp    BYTE PTR [eax],ch
  428499:	out    0x82,al
  42849b:	sub    dh,ah
  42849d:	mov    ecx,0xd59755b5
  4284a2:	ror    DWORD PTR [esi],0x51
  4284a5:	cli    
  4284a6:	aad    0xe4
  4284a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284a9:	jmp    0x5da4:0x1e0f5991
  4284b0:	lea    esi,[ebp-0x24ccf760]
  4284b6:	sbb    DWORD PTR [edi],0xffffffe7
  4284b9:	mov    al,ds:0xdf6175f7
  4284be:	push   ebx
  4284bf:	mov    bl,dh
  4284c1:	jbe    0x428444
  4284c3:	xchg   edi,eax
  4284c4:	aas    
  4284c5:	dec    edi
  4284c6:	je     0x42853a
  4284c8:	add    bl,BYTE PTR [esi]
  4284ca:	ret    0xb70a
  4284cd:	add    edi,DWORD PTR [esi]
  4284cf:	and    ch,BYTE PTR [edi-0x2ce8437d]
  4284d5:	test   eax,0x980e0267
  4284da:	ss mov edi,0x58b8c19d
  4284e0:	sbb    eax,0xb5aaea3a
  4284e5:	repnz or BYTE PTR [edx+0x4],al
  4284e9:	mov    edi,0x3bfa8100
  4284ee:	or     al,0x59
  4284f0:	xor    DWORD PTR [edi-0x68e789c],ecx
  4284f6:	mov    dh,0xa5
  4284f8:	mov    BYTE PTR [esi-0x1ac01b4d],al
  4284fe:	and    ebp,DWORD PTR [esi-0x48ffca16]
  428504:	jg     0x428583
  428506:	mov    eax,0x16e9d21b
  42850b:	ja     0x428569
  42850d:	xchg   esp,eax
  42850e:	test   BYTE PTR [eax-0xf5da1c7],dl
  428514:	retf   
  428515:	dec    edx
  428516:	push   ds
  428517:	fwait
  428518:	pop    eax
  428519:	xlat   BYTE PTR ds:[ebx]
  42851a:	or     eax,esp
  42851c:	out    0xfb,eax
  42851e:	jp     0x4284fc
  428520:	outs   dx,DWORD PTR ds:[esi]
  428521:	ins    BYTE PTR es:[edi],dx
  428522:	lods   al,BYTE PTR ds:[esi]
  428523:	inc    edx
  428524:	test   eax,0x5959fc5a
  428529:	push   ds
  42852a:	mov    DWORD PTR [ebx],eax
  42852c:	pop    ebp
  42852d:	inc    esp
  42852e:	jg     0x42850f
  428530:	out    0xad,al
  428532:	fdivr  st(3),st
  428534:	mov    bl,bh
  428536:	or     edi,DWORD PTR [ecx]
  428538:	and    ebp,DWORD PTR [ebx]
  42853a:	sbb    DWORD PTR ds:0x86b625e8,0xffffffa4
  428541:	ds icebp 
  428543:	jns    0x42855a
  428545:	imul   edi,DWORD PTR [esi+0x2a5c5598],0xffffffd3
  42854c:	or     al,0x36
  42854e:	mov    ecx,0x92cbd0b9
  428553:	rcl    DWORD PTR [ecx-0x1aa3bc53],0x9e
  42855a:	push   ebx
  42855b:	in     eax,dx
  42855c:	sub    eax,DWORD PTR [eax]
  42855e:	outs   dx,BYTE PTR ds:[esi]
  42855f:	inc    ebp
  428560:	add    eax,0x5578033a
  428565:	mov    eax,0x64fcd8c5
  42856a:	lock push edx
  42856c:	mov    bl,0xd3
  42856e:	(bad)  
  42856f:	call   0xc727dc14
  428574:	push   es
  428575:	outs   dx,DWORD PTR ds:[esi]
  428576:	xlat   BYTE PTR ds:[ebx]
  428577:	lods   al,BYTE PTR ds:[esi]
  428578:	ret    
  428579:	(bad)
  42857d:	test   DWORD PTR [ebx-0x257163e3],ecx
  428583:	push   ebx
  428584:	mov    edi,0xefac5169
  428589:	inc    eax
  42858a:	and    ecx,0x97fb8baa
  428590:	mov    ds:0xd5f71a93,eax
  428595:	mov    edx,0x14844299
  42859a:	cmp    esp,DWORD PTR [esi-0x61]
  42859d:	adc    esp,ebp
  42859f:	es call 0x94f4:0x8e84e1b0
  4285a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285a8:	btr    DWORD PTR [ebp-0x7cfeeb11],esi
  4285af:	int3   
  4285b0:	(bad)  
  4285b1:	mov    eax,ds:0xbd4b407c
  4285b6:	out    0x7b,al
  4285b8:	inc    esi
  4285b9:	and    DWORD PTR [ebx],edi
  4285bb:	mov    edx,0xaad3e3c6
  4285c0:	add    DWORD PTR [ebp+0x22],esi
  4285c3:	mov    dl,0xa1
  4285c5:	dec    esi
  4285c6:	sub    ch,BYTE PTR [ecx+0x5264db93]
  4285cc:	push   es
  4285cd:	xlat   BYTE PTR ds:[ebx]
  4285ce:	outs   dx,BYTE PTR ds:[esi]
  4285cf:	mov    edi,0x40c47696
  4285d4:	add    al,BYTE PTR [ebp+0x497ec784]
  4285da:	stos   DWORD PTR es:[edi],eax
  4285db:	or     al,0xce
  4285dd:	mov    DWORD PTR [ecx+0x3c],edi
  4285e0:	jne    0x4285d9
  4285e2:	ja     0x428615
  4285e4:	push   ds
  4285e5:	gs or  eax,0x12415e8b
  4285eb:	add    BYTE PTR [eax],al
  4285ed:	add    BYTE PTR [eax],al
  4285ef:	add    BYTE PTR [eax],al
	...
