
2318b73544045c53ed87f71bd81d105811f48f675e16de189105f845f2692cd3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	sbb    DWORD PTR ds:0x42295a,0x42291e
  401019:	sub    eax,edx
  40101b:	push   edi
  40101c:	mov    edx,0x159a
  401021:	mov    edi,DWORD PTR [ebp-0x4c]
  401024:	mov    DWORD PTR [ebp-0x50],eax
  401027:	sbb    ecx,edi
  401029:	add    eax,eax
  40102b:	mov    DWORD PTR [ebp-0x4c],ecx
  40102e:	or     DWORD PTR [ebp-0x50],0xba68fc47
  401035:	or     DWORD PTR [ebp-0x4c],0x9c0a89d8
  40103c:	mov    eax,DWORD PTR [ebp-0x58]
  40103f:	mov    ecx,DWORD PTR [ebp-0x54]
  401042:	inc    edi
  401043:	mov    edx,DWORD PTR [ebp-0x58]
  401046:	adc    DWORD PTR ds:0x4228c2,0x7b28
  401050:	mov    edi,DWORD PTR [ebp-0x54]
  401053:	sub    eax,edx
  401055:	mov    edx,DWORD PTR ds:0x422926
  40105b:	mov    DWORD PTR [ebp-0x58],eax
  40105e:	sbb    ecx,edi
  401060:	xor    DWORD PTR ds:0x422936,ecx
  401066:	mov    DWORD PTR [ebp-0x54],ecx
  401069:	adc    edx,0x6dea
  40106f:	or     DWORD PTR [ebp-0x58],0xba68805f
  401076:	or     DWORD PTR [ebp-0x54],0x9c0a89d8
  40107d:	lea    eax,[ebp+0x20]
  401080:	mov    DWORD PTR [ebp-0xc],eax
  401083:	add    edx,edx
  401085:	mov    eax,ds:0x4220e0
  40108a:	mov    ecx,DWORD PTR [ebp-0xc]
  40108d:	mov    eax,DWORD PTR [eax]
  40108f:	xor    DWORD PTR ds:0x42293a,0x72a2
  401099:	add    eax,DWORD PTR [ecx]
  40109b:	xor    edx,edx
  40109d:	or     edx,DWORD PTR ds:0x422a4a
  4010a3:	mov    edx,DWORD PTR [edx]
  4010a5:	and    DWORD PTR ds:0x42299e,edx
  4010ab:	jmp    0x401635
  4010b0:	and    eax,0xffffffe4
  4010b3:	xor    eax,0xa0123954
  4010b8:	sbb    al,0x80
  4010ba:	mov    WORD PTR [esi-0x11],gs
  4010bd:	(bad)  
  4010be:	into   
  4010bf:	mov    dl,0x16
  4010c1:	push   ss
  4010c2:	push   ss
  4010c3:	push   ss
  4010c4:	cmp    eax,0x78161604
  4010c9:	out    0x29,al
  4010cb:	fnstsw WORD PTR [esi-0x7c]
  4010ce:	inc    eax
  4010cf:	mov    edi,0x241cf639
  4010d4:	dec    ecx
  4010d5:	popf   
  4010d6:	add    DWORD PTR [edi-0x23c6f8b1],edi
  4010dc:	rol    BYTE PTR [ebx+edx*8-0x3aaad908],0x9
  4010e4:	push   eax
  4010e5:	mov    dl,0xfe
  4010e7:	test   DWORD PTR [ecx+0x7894fd68],0xfdcbb128
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	dec    esi
  4010f3:	sbb    DWORD PTR [eax+0x38],ecx
  4010f6:	xor    BYTE PTR [eax-0x36c9554f],dl
  4010fc:	pop    es
  4010fd:	cmp    edi,ebx
  4010ff:	dec    edx
  401100:	rcl    edx,cl
  401102:	inc    eax
  401103:	inc    ebp
  401104:	push   ecx
  401105:	jl     0x40110c
  401107:	pop    ss
  401108:	mov    esi,DWORD PTR [ebx-0x30]
  40110b:	dec    edx
  40110c:	dec    ebp
  40110d:	dec    esi
  40110e:	ror    BYTE PTR [eax+0x5f42789e],0x3a
  401115:	or     dl,bh
  401117:	mov    al,ds:0x42d8f959
  40111c:	daa    
  40111d:	bound  edi,QWORD PTR [edi-0x1d]
  401120:	scas   eax,DWORD PTR es:[edi]
  401121:	test   eax,0xa527f95d
  401126:	mov    ch,0x94
  401128:	pop    ds
  401129:	push   ss
  40112a:	inc    edi
  40112b:	fdiv   DWORD PTR [edx]
  40112d:	imul   esi,esp,0xd0d5aab1
  401133:	mov    eax,0x2ca27ede
  401138:	jecxz  0x4011a2
  40113a:	add    esp,DWORD PTR [ecx]
  40113c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40113d:	inc    ebp
  40113e:	fucomp st(6)
  401140:	loopne 0x401178
  401142:	mov    ds:0xf9f819cb,al
  401147:	hlt    
  401148:	push   ss
  401149:	rcl    DWORD PTR [ecx+0xd],1
  40114c:	out    0x16,eax
  40114e:	jmp    0xf33c01
  401153:	rol    esi,1
  401155:	retf   
  401156:	mov    dh,0x34
  401158:	xor    bh,dl
  40115a:	push   edx
  40115b:	and    BYTE PTR [ecx-0x7eb27591],bl
  401161:	inc    ebp
  401162:	fiadd  DWORD PTR [edx+0x1c6f82ea]
  401168:	mov    eax,esi
  40116a:	push   ds
  40116b:	sbb    edi,eax
  40116d:	mov    dl,0x3e
  40116f:	repnz mov BYTE PTR [edx],ah
  401172:	test   ebx,eax
  401174:	jmp    0xde14524a
  401179:	outs   dx,BYTE PTR ds:[esi]
  40117a:	cmp    bh,BYTE PTR ds:0xbae146c0
  401180:	mov    eax,0x8eaa343f
  401185:	aad    0x6d
  401187:	fist   WORD PTR [ecx]
  401189:	xchg   ecx,eax
  40118a:	(bad)  
  40118b:	cs and al,0x3e
  40118e:	xor    eax,0x7e9e425b
  401193:	lock retf 0xeaa2
  401197:	stos   DWORD PTR es:[edi],eax
  401198:	pop    edx
  401199:	test   DWORD PTR ds:0x6c851a7e,ecx
  40119f:	ds cld 
  4011a1:	cmp    ch,BYTE PTR [eax+0x4c]
  4011a4:	fbstp  TBYTE PTR [edi+0x16]
  4011a7:	out    dx,eax
  4011a8:	or     esp,edx
  4011aa:	dec    ecx
  4011ab:	jl     0x4011f9
  4011ad:	xchg   ecx,eax
  4011ae:	push   eax
  4011af:	sub    DWORD PTR [edx],esp
  4011b1:	imul   ebp,DWORD PTR [edx-0x2a],0xffffff9d
  4011b5:	lods   eax,DWORD PTR ds:[esi]
  4011b6:	xchg   edx,eax
  4011b7:	sub    al,0xe
  4011b9:	sbb    DWORD PTR [ecx],eax
  4011bb:	cwde   
  4011bc:	iret   
  4011bd:	ins    BYTE PTR es:[edi],dx
  4011be:	rol    DWORD PTR [ecx+esi*2-0x185a0609],1
  4011c5:	sbb    eax,0x8e63b272
  4011ca:	mov    eax,0x785ab876
  4011cf:	rcr    bl,0x57
  4011d2:	(bad)  
  4011d3:	ins    DWORD PTR es:[edi],dx
  4011d4:	mov    BYTE PTR [edi+0x50],bl
  4011d7:	push   esi
  4011d8:	push   edx
  4011d9:	mov    esp,0xbccb4d7d
  4011de:	lds    ecx,FWORD PTR [ecx+0x14]
  4011e1:	adc    eax,0x16e4a6af
  4011e6:	idiv   DWORD PTR [edx-0x9]
  4011e9:	mov    ebp,0x596ffdee
  4011ee:	or     esp,DWORD PTR ds:0xca1ec58c
  4011f4:	jns    0x401248
  4011f6:	push   cs
  4011f7:	pushf  
  4011f8:	and    dl,dh
  4011fa:	sahf   
  4011fb:	sbb    BYTE PTR [eax],dh
  4011fd:	adc    ch,BYTE PTR [edx]
  4011ff:	ret    
  401200:	mul    BYTE PTR [eax+0x4e254453]
  401206:	shr    BYTE PTR [edx+0x1c86b605],cl
  40120c:	cmp    esp,DWORD PTR [edx]
  40120e:	enter  0x871f,0x1f
  401212:	repnz mov bl,0xf5
  401215:	push   ds
  401216:	jno    0x401263
  401218:	fs sahf 
  40121a:	jns    0x4011e5
  40121c:	or     DWORD PTR [ebx],ecx
  40121e:	add    al,0x7e
  401220:	fmulp  st(7),st
  401222:	leave  
  401223:	cdq    
  401224:	sub    bl,0xfa
  401227:	lock ins BYTE PTR es:[edi],dx
  401229:	pop    es
  40122a:	es mov al,0x25
  40122d:	not    dl
  40122f:	(bad)  
  401230:	loop   0x4011f2
  401232:	fisubr WORD PTR [eax-0x5d342d83]
  401238:	repz idiv DWORD PTR [edi]
  40123b:	jg     0x401241
  40123d:	retf   0xfd3
  401240:	(bad)  
  401241:	sti    
  401242:	xlat   BYTE PTR ds:[ebx]
  401243:	or     eax,0x3c34cf70
  401248:	jb     0x4011d2
  40124a:	les    ebp,FWORD PTR [edx-0x7e]
  40124d:	es xchg esp,eax
  40124f:	xchg   edi,eax
  401250:	dec    ecx
  401251:	(bad)  
  401252:	rol    BYTE PTR [ecx],1
  401254:	std    
  401255:	cld    
  401256:	push   eax
  401257:	jmp    0x401215
  401259:	xchg   ebp,eax
  40125a:	int3   
  40125b:	nop
  40125c:	pushf  
  40125d:	dec    esi
  40125e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40125f:	jno    0x401223
  401261:	out    0x6c,eax
  401263:	mov    eax,ds:0xa82fba85
  401268:	pop    edx
  401269:	jno    0x40124a
  40126b:	cmp    bl,BYTE PTR [edi+0x15]
  40126e:	push   es
  40126f:	pop    esi
  401270:	mov    al,bh
  401272:	test   eax,0xcbf44ff6
  401277:	adc    eax,0xf8c7ab13
  40127c:	dec    cx
  40127e:	dec    edi
  40127f:	mov    WORD PTR [ebx+0x55],es
  401282:	ror    BYTE PTR [eax-0x22907a25],1
  401288:	mov    bh,0x16
  40128a:	dec    ebp
  40128b:	xor    al,0xf9
  40128d:	xor    ebx,edi
  40128f:	dec    edx
  401290:	xor    al,0xaf
  401292:	loop   0x401273
  401294:	retf   
  401295:	or     dh,BYTE PTR [eax+0x2c]
  401298:	ja     0x40127c
  40129a:	outs   dx,DWORD PTR ds:[esi]
  40129b:	je     0x401222
  40129d:	xor    al,0x2
  40129f:	call   FWORD PTR [ebx]
  4012a1:	mov    dh,0x5a
  4012a3:	jle    0x40129e
  4012a5:	jl     0x401317
  4012a7:	lock mov ss,WORD PTR [ebx-0x1f026a4f]
  4012ae:	xor    dh,BYTE PTR [ecx]
  4012b0:	fcom   DWORD PTR [esi+eiz*8-0x50]
  4012b4:	pop    esp
  4012b5:	jnp    0x4012a2
  4012b7:	push   eax
  4012b8:	inc    esi
  4012b9:	loopne 0x401316
  4012bb:	inc    eax
  4012bc:	mov    DWORD PTR fs:[ecx+0x5641709c],ecx
  4012c3:	clc    
  4012c4:	out    0x70,eax
  4012c6:	jnp    0x40131f
  4012c8:	jmp    0xd5d1860d
  4012cd:	inc    eax
  4012ce:	jnp    0x401293
  4012d0:	xchg   esi,eax
  4012d1:	sub    dl,BYTE PTR [edi+0x1a]
  4012d4:	test   DWORD PTR [esi+0xa99674a],esi
  4012da:	sti    
  4012db:	push   0xffffffa0
  4012dd:	mov    eax,0xb8262cde
  4012e2:	jne    0x40135e
  4012e4:	aad    0xf5
  4012e6:	imul   edx,DWORD PTR [ebx+eiz*2+0x6ea0133f],0x8875de9e
  4012f1:	xchg   esp,eax
  4012f2:	int    0x82
  4012f4:	test   BYTE PTR [esi-0x4a9fe16b],al
  4012fa:	sub    BYTE PTR [eax-0x21f2772],bl
  401300:	iret   
  401301:	outs   dx,BYTE PTR ds:[esi]
  401302:	lods   al,BYTE PTR ds:[esi]
  401303:	jae    0x4012b2
  401305:	sbb    eax,DWORD PTR [edi+eiz*4-0x751545d7]
  40130c:	je     0x40130f
  40130e:	push   eax
  40130f:	jns    0x401379
  401311:	rcl    DWORD PTR [ebx-0x5f],1
  401314:	cmp    DWORD PTR [esi],0x5ed0312d
  40131a:	js     0x401300
  40131c:	push   esi
  40131d:	xchg   bh,ch
  40131f:	fild   QWORD PTR [edx-0x1555a4b7]
  401325:	ins    BYTE PTR es:[edi],dx
  401326:	sbb    esp,esp
  401328:	xor    ecx,DWORD PTR [edi+0x65]
  40132b:	mov    ebp,0x319552fa
  401330:	pop    edi
  401331:	(bad)  
  401332:	and    BYTE PTR [ecx],ah
  401334:	sub    eax,DWORD PTR [eax+0x7b]
  401337:	inc    edx
  401338:	ins    DWORD PTR es:[edi],dx
  401339:	push   cs
  40133a:	(bad)  
  40133b:	(bad)  
  40133c:	jns    0x4013bc
  40133e:	inc    ebx
  40133f:	lahf   
  401340:	push   esi
  401341:	inc    eax
  401342:	ins    BYTE PTR es:[edi],dx
  401343:	inc    esp
  401344:	add    eax,0xda8747c3
  401349:	lds    ebx,FWORD PTR [ecx]
  40134b:	in     al,dx
  40134c:	pop    esp
  40134d:	call   0x6d1a:0x8a20e6ff
  401354:	jo     0x4013d5
  401356:	dec    edx
  401357:	outs   dx,BYTE PTR ds:[esi]
  401358:	icebp  
  401359:	xlat   BYTE PTR ds:[ebx]
  40135a:	out    dx,al
  40135b:	pop    es
  40135c:	repnz mov BYTE PTR [esi-0x62],cl
  401360:	inc    edx
  401361:	or     bh,BYTE PTR [edi-0x3]
  401364:	seto   BYTE PTR [edx+0x6b117807]
  40136b:	jg     0x401385
  40136d:	lds    eax,FWORD PTR [edi-0x1fe467c0]
  401373:	popa   
  401374:	mov    DWORD PTR [edi-0x63932d20],eax
  40137a:	xor    DWORD PTR [edi+esi*2+0x618caf02],esp
  401381:	in     al,0x44
  401383:	and    ah,BYTE PTR [ebp+0x12]
  401386:	inc    esi
  401387:	(bad)  
  401388:	retf   
  401389:	adc    DWORD PTR [esi],esp
  40138b:	push   cs
  40138c:	lahf   
  40138d:	fistp  DWORD PTR [edx+eiz*1]
  401390:	push   es
  401391:	nop
  401392:	ds pushf 
  401394:	or     BYTE PTR [ecx-0xdb04161],ch
  40139a:	pusha  
  40139b:	ja     0x4013eb
  40139d:	adc    BYTE PTR ds:[eax-0x61],bl
  4013a1:	add    DWORD PTR [ecx],ecx
  4013a3:	sar    DWORD PTR [ebp+ecx*1+0x7162c7a1],0x0
  4013ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013ac:	mov    ds:0x11be16ea,eax
  4013b1:	nop
  4013b2:	ret    
  4013b3:	mov    ch,0xe7
  4013b5:	mov    esi,0x4a111931
  4013ba:	cmp    DWORD PTR [edx-0x7a],ebx
  4013bd:	ficomp DWORD PTR [edi+0x5b]
  4013c0:	dec    ebp
  4013c1:	xchg   esp,eax
  4013c2:	mov    bh,0x99
  4013c4:	aad    0x73
  4013c6:	ret    0xe60d
  4013c9:	push   0x69
  4013cb:	repnz les eax,FWORD PTR [edx-0x13]
  4013cf:	icebp  
  4013d0:	xchg   edi,ebp
  4013d2:	jmp    0xcd6111a9
  4013d7:	jae    0x401445
  4013d9:	or     eax,0x1b45070b
  4013de:	int3   
  4013df:	pushf  
  4013e0:	stc    
  4013e1:	pop    eax
  4013e2:	jg     0x401375
  4013e4:	mov    dh,0xd9
  4013e6:	scas   eax,DWORD PTR es:[edi]
  4013e7:	xchg   ebp,eax
  4013e8:	jno    0x401384
  4013ea:	xor    dl,BYTE PTR [eax-0x348c96b]
  4013f0:	add    eax,0x36421918
  4013f5:	adc    DWORD PTR [eax+0x794e334d],0x13
  4013fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013fd:	dec    ebx
  4013fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013ff:	mov    ah,0x9b
  401401:	loopne 0x40139d
  401403:	cmp    al,0xb9
  401405:	xor    BYTE PTR [edi],dh
  401407:	(bad)  [esi+ebp*1-0x73]
  40140b:	mov    esp,0xfd8ee9a7
  401410:	inc    ebp
  401411:	mov    ch,0xb4
  401413:	out    0x91,eax
  401415:	or     DWORD PTR [edx+esi*8+0x6c],ebx
  401419:	jge    0x40143d
  40141b:	mov    ds:0x6ba30800,al
  401420:	jno    0x4013b6
  401422:	sbb    al,0x5e
  401424:	retf   
  401425:	cmp    al,0x46
  401427:	in     eax,dx
  401428:	stos   BYTE PTR es:[edi],al
  401429:	imul   edi,edi,0x77993858
  40142f:	jb     0x4013b1
  401431:	and    ah,cl
  401433:	jmp    0xe78a:0x6a63af0f
  40143a:	loop   0x401415
  40143c:	clc    
  40143d:	adc    DWORD PTR ds:0x171bc94a,ebx
  401443:	hlt    
  401444:	mov    ecx,0x1be2a9d4
  401449:	mov    BYTE PTR [edi-0x3d131233],ah
  40144f:	rcl    esi,cl
  401451:	loope  0x401489
  401453:	out    0x9,al
  401455:	pop    ecx
  401456:	lds    eax,FWORD PTR [ecx-0x3f]
  401459:	lahf   
  40145a:	imul   ebx,ebx,0x1a19d3fa
  401460:	das    
  401461:	test   eax,0x9141cbc9
  401466:	ins    BYTE PTR es:[edi],dx
  401467:	cmp    BYTE PTR fs:[edi],bh
  40146a:	or     al,0x75
  40146c:	xchg   ebp,eax
  40146d:	hlt    
  40146e:	(bad)  
  40146f:	xor    eax,0x12ff913d
  401474:	push   0xf2a17105
  401479:	dec    eax
  40147a:	cwde   
  40147b:	les    eax,FWORD PTR [edi+0x1f0060e0]
  401481:	sbb    DWORD PTR [ebp-0x65],eax
  401484:	adc    BYTE PTR es:[esi-0x6],ah
  401488:	shl    BYTE PTR [edx],cl
  40148a:	arpl   dx,ax
  40148c:	and    eax,0xaa7fc87e
  401491:	jns    0x4014a3
  401493:	inc    esp
  401494:	add    BYTE PTR ds:0xc58799a7,bl
  40149a:	jo     0x40146c
  40149c:	shr    BYTE PTR [esi+0x11a44b08],0xe7
  4014a3:	aaa    
  4014a4:	into   
  4014a5:	enter  0xb815,0xc3
  4014a9:	outs   dx,DWORD PTR ds:[esi]
  4014aa:	in     eax,0x18
  4014ac:	and    DWORD PTR [edx+ebx*1],edx
  4014af:	sbb    al,0x27
  4014b1:	retf   
  4014b2:	popa   
  4014b3:	int3   
  4014b4:	dec    eax
  4014b5:	(bad)  
  4014b6:	pop    ebp
  4014b7:	mov    esi,DWORD PTR [ebx-0x1f]
  4014ba:	or     al,0x80
  4014bc:	mov    ebp,0xbf191a32
  4014c1:	xor    DWORD PTR [eax+0x390e378f],0x3e
  4014c8:	dec    edi
  4014c9:	cmp    BYTE PTR [eax+0x4f48b028],0x8c
  4014d0:	cmp    edx,esi
  4014d2:	int3   
  4014d3:	loopne 0x4014b8
  4014d5:	mov    BYTE PTR [ebx],ch
  4014d7:	cwde   
  4014d8:	test   BYTE PTR [edi],bl
  4014da:	(bad)  
  4014db:	mov    bl,0x34
  4014dd:	pusha  
  4014de:	dec    edx
  4014df:	(bad)  
  4014e0:	jg     0x40147b
  4014e2:	aas    
  4014e3:	mov    al,BYTE PTR [ebx]
  4014e5:	les    esp,FWORD PTR [edi+0x4f7e6ee8]
  4014eb:	or     DWORD PTR [ecx+esi*8+0x8c84f0e],ecx
  4014f2:	fs ins BYTE PTR es:[edi],dx
  4014f4:	xchg   BYTE PTR [ebx+ebp*1-0x54],bl
  4014f8:	lods   eax,DWORD PTR ds:[esi]
  4014f9:	inc    edx
  4014fa:	lods   eax,DWORD PTR cs:[esi]
  4014fc:	pushf  
  4014fd:	call   0xd6cd:0x270e020a
  401504:	xchg   edx,eax
  401505:	inc    ebx
  401506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401507:	shl    BYTE PTR [esi-0x49],cl
  40150a:	dec    ebx
  40150b:	mov    cl,0x21
  40150d:	mov    dh,0xd0
  40150f:	loopne 0x401508
  401511:	cmp    DWORD PTR [edi+0x3b],ecx
  401514:	out    0xf5,eax
  401516:	ss scas al,BYTE PTR es:[edi]
  401518:	mov    BYTE PTR [esi],bl
  40151a:	(bad)  
  40151b:	mov    al,ds:0xdc45122b
  401520:	out    dx,al
  401521:	and    bh,BYTE PTR [eax+0x5]
  401524:	or     bl,bl
  401526:	test   DWORD PTR [edx-0x5c],edi
  401529:	fmul   st,st(1)
  40152b:	popa   
  40152c:	pop    ss
  40152d:	or     BYTE PTR [edi-0x45],0xf5
  401531:	and    eax,0x9a70179
  401536:	xchg   ebx,eax
  401537:	stos   BYTE PTR es:[edi],al
  401538:	punpckldq mm7,DWORD PTR [ecx-0x22]
  40153c:	(bad)  
  40153d:	sbb    eax,0x29001d21
  401542:	fsubr  QWORD PTR [ebx]
  401544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401545:	div    BYTE PTR [ecx+0x15e5f779]
  40154b:	bound  ebx,QWORD PTR [esp+eax*4-0x5c]
  40154f:	cmp    edi,DWORD PTR [esp+ecx*1]
  401552:	sti    
  401553:	dec    edi
  401554:	xor    BYTE PTR [eax-0x1],ah
  401557:	add    cl,BYTE PTR [edx-0x6c4ff4fb]
  40155d:	scas   al,BYTE PTR es:[edi]
  40155e:	les    eax,FWORD PTR [bp-0x27]
  401562:	scas   al,BYTE PTR es:[edi]
  401563:	call   0x7219:0x5329380c
  40156a:	or     DWORD PTR [esi-0x57],0xc897f21b
  401571:	dec    ebp
  401572:	xor    eax,0x6b7a7663
  401577:	xor    eax,0x4814af77
  40157c:	mov    ah,0x24
  40157e:	stos   DWORD PTR es:[edi],eax
  40157f:	mov    ecx,0xf4f74beb
  401584:	push   ds
  401585:	jb     0x4015f7
  401587:	popf   
  401588:	mov    al,ds:0x67c6d98
  40158d:	jle    0x40159d
  40158f:	ss cdq 
  401591:	inc    edi
  401592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401593:	xor    BYTE PTR [edi+0x20],ah
  401596:	je     0x401617
  401598:	and    BYTE PTR [eax-0x62],0x22
  40159c:	mov    cl,0xe6
  40159e:	pop    edi
  40159f:	cmp    dh,dh
  4015a1:	add    esi,0x1f2489de
  4015a7:	cmc    
  4015a8:	xchg   ebp,eax
  4015a9:	mov    al,ds:0x3b884291
  4015ae:	add    eax,0xf047f745
  4015b3:	pop    ebp
  4015b4:	cmc    
  4015b5:	mov    esp,0x3b504986
  4015ba:	scas   al,BYTE PTR es:[edi]
  4015bb:	outs   dx,BYTE PTR ds:[esi]
  4015bc:	outs   dx,BYTE PTR ds:[esi]
  4015bd:	dec    edi
  4015be:	(bad)  
  4015bf:	xchg   ebp,eax
  4015c0:	sub    BYTE PTR [ebx],0x1d
  4015c3:	test   eax,0x2bbdab9d
  4015c8:	push   ebp
  4015c9:	iret   
  4015ca:	push   ecx
  4015cb:	push   cs
  4015cc:	sbb    bl,BYTE PTR [eax+0x3d447f40]
  4015d2:	push   0x58719f36
  4015d7:	add    bl,BYTE PTR [edi-0x3d]
  4015da:	pop    ebp
  4015db:	aam    0x3f
  4015dd:	xlat   BYTE PTR ds:[ebx]
  4015de:	icebp  
  4015df:	test   al,0xb3
  4015e1:	sti    
  4015e2:	or     eax,0xc7ef2095
  4015e7:	in     al,0x62
  4015e9:	pop    eax
  4015ea:	xor    BYTE PTR [esi-0x744c9b41],0x97
  4015f1:	ret    0x567
  4015f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015f5:	std    
  4015f6:	in     eax,dx
  4015f7:	rcl    DWORD PTR [ebx],cl
  4015f9:	sti    
  4015fa:	sti    
  4015fb:	stos   BYTE PTR es:[edi],al
  4015fc:	rol    DWORD PTR [eax-0x56fb08c2],0xaa
  401603:	lock sub ebp,eax
  401606:	sub    DWORD PTR [esp+edx*1+0x1478bbd3],ecx
  40160d:	shr    DWORD PTR [eax+ecx*2-0x16],cl
  401611:	add    eax,0x7f2be1a8
  401616:	cmp    DWORD PTR [esi],edx
  401618:	mov    edi,0xec825620
  40161d:	jle    0x4015da
  40161f:	add    DWORD PTR ds:0xf63a3a96,esp
  401625:	mov    al,0x66
  401627:	mov    ah,0xf2
  401629:	dec    edx
  40162a:	pop    esp
  40162b:	out    0x9b,al
  40162d:	and    al,0xa2
  40162f:	sub    DWORD PTR ds:0x908ca8ae,0xffffffbf
  401636:	pop    esp
  401637:	gs call 0x4228:0xe215332e
  40163f:	add    BYTE PTR [ecx+0x1d01ec45],cl
  401645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401646:	sub    BYTE PTR [edx+0x0],al
  401649:	mov    eax,DWORD PTR [ebp+0x18]
  40164c:	jmp    0x401bd6
  401651:	fdivr  DWORD PTR [ebp+0x2c]
  401654:	lds    ebp,FWORD PTR [eax]
  401656:	xchg   esp,eax
  401657:	pop    eax
  401658:	and    BYTE PTR [ecx+0x19b2ceab],dl
  40165e:	fwait
  40165f:	dec    eax
  401660:	test   al,0x3d
  401662:	add    al,0x16
  401664:	push   ss
  401665:	cmp    eax,0x51161604
  40166a:	sub    DWORD PTR [ebx],ebx
  40166c:	pop    ds
  40166d:	pop    es
  40166e:	lds    edx,FWORD PTR [ecx+0x5a]
  401671:	loope  0x401692
  401673:	pop    eax
  401674:	mov    ah,0x7a
  401676:	push   cs
  401677:	adc    ch,bh
  401679:	punpckldq mm7,DWORD PTR ds:0x88a381e2
  401680:	ror    BYTE PTR [edi-0x27],1
  401683:	retf   0x65ab
  401686:	jbe    0x4016cf
  401688:	lods   eax,DWORD PTR ds:[esi]
  401689:	mov    bh,0x6
  40168b:	test   DWORD PTR ds:0x7e0b51bb,esp
  401691:	cmp    BYTE PTR [edx+eax*8-0x12],bl
  401695:	sti    
  401696:	xor    al,0xe3
  401698:	sbb    BYTE PTR [edx],bh
  40169a:	jg     0x4016d6
  40169c:	jne    0x401694
  40169e:	push   0x1704708a
  4016a3:	jns    0x40166d
  4016a5:	xchg   BYTE PTR [edi+0x6464e346],dl
  4016ab:	shl    cl,0x90
  4016ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016af:	fild   QWORD PTR [ecx-0x3cb0a0ad]
  4016b5:	call   0x35ad20ce
  4016ba:	xchg   edx,eax
  4016bb:	push   0xf
  4016bd:	lahf   
  4016be:	xor    bh,BYTE PTR [ecx-0x33]
  4016c1:	aam    0xd0
  4016c3:	sub    al,0x82
  4016c5:	enter  0x315b,0x1f
  4016c9:	scas   eax,DWORD PTR es:[edi]
  4016ca:	ins    DWORD PTR es:[edi],dx
  4016cb:	xchg   ebp,eax
  4016cc:	mov    al,0x87
  4016ce:	imul   BYTE PTR ds:0xab55a991
  4016d4:	loop   0x40173f
  4016d6:	fild   QWORD PTR [eax-0x80]
  4016d9:	add    dh,BYTE PTR [eax+0x1b]
  4016dc:	fild   QWORD PTR [ebx+edx*8-0x61d5b0e]
  4016e3:	xchg   di,ax
  4016e5:	stos   DWORD PTR es:[edi],eax
  4016e6:	test   cl,dh
  4016e8:	push   esi
  4016e9:	jge    0x4016bf
  4016eb:	fisub  WORD PTR [esi+ebx*2+0x12d6d6b6]
  4016f2:	jb     0x40170e
  4016f4:	loope  0x401709
  4016f6:	pusha  
  4016f7:	ret    
  4016f8:	repz mov es:0xab8e25c4,al
  4016ff:	or     bh,BYTE PTR [edx]
  401701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401702:	or     BYTE PTR [edx],dh
  401704:	lock imul edi,DWORD PTR [esi+0x5e],0xad0a6e35
  40170c:	cmp    DWORD PTR [ebx],edi
  40170e:	mov    ebx,0x738ec0fe
  401713:	pop    ebx
  401714:	xchg   BYTE PTR ds:0x10455336,dl
  40171a:	sar    BYTE PTR [ebp+0x56],1
  40171d:	test   eax,0x1434990b
  401722:	in     al,dx
  401723:	push   ss
  401724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401726:	fbstp  TBYTE PTR [esp+ebx*1]
  401729:	call   0x9fa8:0x96b466ce
  401730:	adc    ebp,DWORD PTR [esi+0x7d]
  401733:	in     eax,0xd8
  401735:	hlt    
  401736:	inc    edx
  401737:	fcom   DWORD PTR [ecx]
  401739:	scas   al,BYTE PTR es:[edi]
  40173a:	add    dl,BYTE PTR [esi+0x6a]
  40173d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173e:	repnz mov cs,WORD PTR [edi-0x6]
  401742:	lahf   
  401743:	loop   0x4016e2
  401745:	rol    esi,0xe7
  401748:	sub    DWORD PTR [edx+0x48],ebx
  40174b:	push   edi
  40174c:	ficom  DWORD PTR [ebx-0x22]
  40174f:	pushf  
  401750:	mov    dl,0xa9
  401752:	ret    
  401753:	sbb    ebp,eax
  401755:	das    
  401756:	aas    
  401757:	pop    edi
  401758:	mov    eax,ds:0xf0f4c859
  40175d:	push   es
  40175e:	mov    dh,0xdf
  401760:	mov    ebp,0x8d1663fb
  401765:	das    
  401766:	or     BYTE PTR [edi],0xc4
  401769:	bound  edi,QWORD PTR [ebx]
  40176b:	inc    esp
  40176c:	push   ss
  40176d:	and    eax,0x525393de
  401772:	pop    esi
  401773:	pop    ds
  401774:	pop    edx
  401775:	jmp    0x40173e
  401777:	test   al,0x48
  401779:	mov    ah,0x72
  40177b:	adc    cl,BYTE PTR [edi+0x3d5bf936]
  401781:	jl     0x401759
  401783:	inc    esi
  401784:	es pop edi
  401786:	cs push eax
  401788:	cwde   
  401789:	xor    eax,0xd3f45df
  40178e:	ins    BYTE PTR es:[edi],dx
  40178f:	mov    bl,0xdf
  401791:	cmp    bl,dl
  401793:	jnp    0x401754
  401795:	ret    0x5e2e
  401798:	jno    0x401818
  40179a:	loopne 0x401766
  40179c:	dec    DWORD PTR [ecx+0x12]
  40179f:	sub    DWORD PTR [edx+0x7c226979],edx
  4017a5:	iret   
  4017a6:	js     0x4017c0
  4017a8:	sbb    DWORD PTR [edx],ebx
  4017aa:	stos   BYTE PTR es:[edi],al
  4017ab:	sub    BYTE PTR [eax-0x38af6caa],bh
  4017b1:	mov    ch,0xb8
  4017b3:	(bad)  
  4017b4:	sbb    DWORD PTR [edi-0x22],esi
  4017b7:	cli    
  4017b8:	or     BYTE PTR [edi-0x7],cl
  4017bb:	xchg   ebp,eax
  4017bc:	jns    0x4017a7
  4017be:	mov    fs,ebx
  4017c0:	mov    ss,WORD PTR [edi+0xd967f9b]
  4017c6:	mov    cl,0x37
  4017c8:	push   ecx
  4017c9:	mov    ds:0xc4f08ad9,eax
  4017ce:	cmp    DWORD PTR [edi-0x7a],0x8644e637
  4017d5:	mov    al,ds:0xeba8799b
  4017da:	add    eax,0x715ff4f7
  4017df:	sbb    ebp,eax
  4017e1:	mov    ebx,0x29d2a72c
  4017e6:	xor    dl,BYTE PTR [ebx-0x56]
  4017e9:	inc    eax
  4017ea:	pop    esi
  4017ec:	xchg   edi,eax
  4017ed:	nop
  4017ee:	ss pusha 
  4017f0:	adc    BYTE PTR [edx],0x13
  4017f3:	sbb    al,0x33
  4017f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f6:	and    DWORD PTR [ebx+0x72],ebx
  4017f9:	mov    al,0x36
  4017fb:	adc    BYTE PTR [eax-0x71],bl
  4017fe:	adc    DWORD PTR [eax+ebx*8-0x46],ebp
  401802:	sub    DWORD PTR [eax+0x5bde932b],edi
  401808:	mov    ebx,0xba8e5e3
  40180d:	jmp    0x6e3a8c1
  401812:	push   es
  401813:	and    al,0x78
  401815:	push   eax
  401816:	repnz pop ebx
  401818:	mov    ds:0x20d9760f,al
  40181d:	sbb    DWORD PTR [ebx+0x1ad9e647],edx
  401823:	jbe    0x40185e
  401825:	mov    DWORD PTR [ecx],esi
  401827:	mov    ch,0x5
  401829:	or     al,0x80
  40182b:	adc    al,0x7f
  40182d:	call   0xd97:0x22cc9b1d
  401834:	rcr    BYTE PTR [edi],1
  401836:	jb     0x40180e
  401838:	inc    esp
  401839:	jnp    0x4017c6
  40183b:	ja     0x40180c
  40183d:	cdq    
  40183e:	and    dl,dl
  401840:	sub    DWORD PTR [edi+0x32],ebx
  401843:	cmp    edx,edi
  401845:	mov    cl,0xd5
  401847:	mov    bh,0xb1
  401849:	mov    eax,DWORD PTR [esp+ebx*4]
  40184c:	bound  ebp,QWORD PTR [ebx+0x427781ce]
  401852:	dec    ebx
  401853:	jns    0x4017dd
  401855:	popa   
  401856:	retf   0xb49e
  401859:	sub    DWORD PTR [eax+0x69],ecx
  40185c:	xchg   BYTE PTR [ebp+0x0],bl
  40185f:	scas   al,BYTE PTR es:[edi]
  401860:	or     cl,BYTE PTR [ebx-0x4cf8d4e6]
  401866:	or     BYTE PTR [ebx+eax*1],ah
  401869:	xchg   ecx,eax
  40186a:	call   0xe46a:0x304f551c
  401871:	xor    eax,0xc1b6b8e8
  401876:	test   DWORD PTR [eax-0x3b146f00],ebp
  40187c:	retf   0x4f92
  40187f:	add    eax,0x402e2c2a
  401884:	mov    esp,es
  401886:	dec    ebx
  401887:	xchg   DWORD PTR [ebp-0x1aefd16b],esi
  40188d:	mov    dh,bl
  40188f:	js     0x401812
  401891:	int    0xb8
  401893:	xchg   ebx,eax
  401894:	adc    BYTE PTR [ecx-0x29],ch
  401897:	lock inc esp
  401899:	add    edi,eax
  40189b:	adc    BYTE PTR [edx+0x3b],dl
  40189e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40189f:	aas    
  4018a0:	scas   eax,DWORD PTR es:[edi]
  4018a1:	push   ss
  4018a2:	je     0x4018c1
  4018a4:	and    edi,DWORD PTR [ebp+0x5e]
  4018a7:	xchg   edx,eax
  4018a8:	and    DWORD PTR gs:[eax-0x42],ebx
  4018ac:	mov    cl,0x36
  4018ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018af:	imul   ecx,DWORD PTR [edi],0x3e
  4018b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018b3:	(bad)  
  4018b5:	fisttp WORD PTR [edi-0x79]
  4018b8:	rcr    DWORD PTR [ecx],cl
  4018ba:	popa   
  4018bb:	(bad)  
  4018bc:	jp     0x40193c
  4018be:	mov    ds:0x7046e530,al
  4018c3:	dec    eax
  4018c4:	in     eax,dx
  4018c5:	xor    BYTE PTR [esi-0x332aa8c9],cl
  4018cb:	fcomp  QWORD PTR [ecx]
  4018cd:	sbb    eax,0xdc26dfa9
  4018d2:	pop    esp
  4018d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d4:	call   0x791fc053
  4018d9:	fistp  QWORD PTR [eax-0x7d36d33f]
  4018df:	push   esi
  4018e0:	cmp    BYTE PTR [eax+0x40],dh
  4018e3:	in     al,dx
  4018e4:	(bad)  
  4018e6:	pop    edi
  4018e7:	cmc    
  4018e8:	aaa    
  4018e9:	sbb    dh,BYTE PTR [ebx+0x5]
  4018ec:	jne    0x401906
  4018ee:	sti    
  4018ef:	pushf  
  4018f0:	push   0x739ce96a
  4018f5:	leave  
  4018f6:	mov    BYTE PTR [edi],0x44
  4018f9:	push   ecx
  4018fa:	and    BYTE PTR [ecx+ebp*2],ch
  4018fd:	fild   DWORD PTR [ebp-0x7534917f]
  401903:	mov    eax,ds:0x740ba7e9
  401908:	lock sub eax,0xd4b20717
  40190e:	and    BYTE PTR [ebp+0x5],bh
  401911:	scas   al,BYTE PTR es:[edi]
  401912:	cli    
  401913:	fadd   QWORD PTR [ebp+0x49eef16a]
  401919:	or     ebx,DWORD PTR ds:0xca797de7
  40191f:	adc    DWORD PTR [ebx],ebx
  401921:	jmp    0xaccc23fa
  401926:	xlat   BYTE PTR ds:[ebx]
  401927:	cld    
  401928:	out    0x5f,eax
  40192a:	idiv   DWORD PTR [eax-0x25617469]
  401930:	out    0x1f,eax
  401932:	adc    dh,BYTE PTR [ebp-0x1682710d]
  401938:	fsubp  st(6),st
  40193a:	jbe    0x40196b
  40193c:	xor    eax,0x368e85f4
  401941:	and    ebx,ebx
  401943:	call   0x841accc6
  401948:	fwait
  401949:	arpl   WORD PTR [eax],di
  40194b:	repnz push edx
  40194d:	dec    edi
  40194e:	(bad)  
  40194f:	jbe    0x401961
  401951:	sub    eax,DWORD PTR [eax-0x74165304]
  401957:	mov    ds:0xe7045f1,al
  40195c:	les    ecx,FWORD PTR [esi]
  40195e:	jmp    ecx
  401960:	mov    al,ds:0x31ddba6c
  401965:	ja     0x401943
  401967:	add    BYTE PTR [ebx+eiz*2-0x627e9cb6],bh
  40196e:	bound  eax,QWORD PTR [ecx-0x3b239b85]
  401974:	and    DWORD PTR [esi],ebx
  401976:	imul   ebx,DWORD PTR [ecx+0x74],0xbe051e01
  40197d:	push   ss
  40197e:	cwde   
  40197f:	cmp    DWORD PTR [eax-0x6c844e30],ebp
  401985:	test   BYTE PTR [esi-0x53],al
  401988:	sbb    eax,0x1198bcc8
  40198d:	fwait
  40198e:	loope  0x4019b7
  401990:	lods   eax,DWORD PTR ds:[esi]
  401991:	inc    ecx
  401992:	nop
  401993:	clc    
  401994:	adc    eax,0x5260f902
  401999:	cdq    
  40199a:	(bad)  
  40199b:	fsubr  QWORD PTR [ecx]
  40199d:	cs clc 
  40199f:	or     al,0xed
  4019a1:	rcl    al,1
  4019a3:	xor    edx,DWORD PTR [ebx]
  4019a5:	push   ebp
  4019a6:	ror    BYTE PTR [ebp+0x54f2133e],cl
  4019ac:	xor    BYTE PTR [ecx+0x51ceb51f],ah
  4019b2:	push   edi
  4019b3:	mov    ss,edx
  4019b5:	or     al,0x72
  4019b7:	test   eax,0xc2f91ca8
  4019bc:	xchg   DWORD PTR [edx],ebx
  4019be:	fld    TBYTE PTR [esp+eax*8]
  4019c1:	std    
  4019c2:	inc    eax
  4019c3:	inc    esi
  4019c4:	das    
  4019c5:	inc    ebp
  4019c6:	pop    eax
  4019c7:	pushf  
  4019c8:	test   al,0x16
  4019ca:	sub    esi,edi
  4019cc:	cmp    eax,0xc63ad915
  4019d1:	rcl    DWORD PTR [esi-0x63bf82e4],0x37
  4019d8:	enter  0xffcb,0xfd
  4019dc:	xchg   ecx,eax
  4019dd:	loopne 0x401978
  4019df:	(bad)  
  4019e0:	push   ebp
  4019e1:	xor    eax,0xb6ccfece
  4019e6:	icebp  
  4019e7:	fisubr WORD PTR [esp+eiz*8+0x6]
  4019eb:	add    edx,esp
  4019ed:	leave  
  4019ee:	xchg   edi,eax
  4019ef:	mov    ch,0xb5
  4019f1:	imul   ebp,DWORD PTR [eax+0x14],0x6c
  4019f5:	jno    0x401a4e
  4019f7:	sbb    BYTE PTR [eax+0x2863df6],dh
  4019fd:	xchg   BYTE PTR [edx*4-0x6e04eb2],cl
  401a04:	retf   
  401a05:	stos   BYTE PTR es:[edi],al
  401a06:	stc    
  401a07:	cs rcl bl,1
  401a0a:	stc    
  401a0b:	fnstsw WORD PTR [ecx]
  401a0d:	mov    ebp,DWORD PTR [esi+0x5dda84be]
  401a13:	mov    al,ds:0xe3f3b450
  401a18:	iret   
  401a19:	adc    bl,dl
  401a1b:	stos   BYTE PTR es:[edi],al
  401a1c:	or     BYTE PTR [eax],dh
  401a1e:	pop    esp
  401a1f:	xor    al,0xae
  401a21:	je     0x4019b6
  401a23:	xlat   BYTE PTR ds:[ebx]
  401a24:	sti    
  401a25:	leave  
  401a26:	pop    esp
  401a27:	ret    0x2a80
  401a2a:	inc    eax
  401a2b:	sub    cl,BYTE PTR [edi]
  401a2d:	dec    esi
  401a2e:	xchg   esi,eax
  401a2f:	in     al,dx
  401a30:	call   0x9f2d854d
  401a35:	int3   
  401a36:	pop    es
  401a37:	xchg   ecx,eax
  401a38:	adc    BYTE PTR [ecx-0x47],ch
  401a3b:	mov    esi,0x2a858704
  401a40:	add    esi,DWORD PTR [esi]
  401a42:	das    
  401a43:	fiadd  WORD PTR [eax+edi*4]
  401a46:	xchg   ebx,eax
  401a47:	dec    ecx
  401a48:	sub    BYTE PTR [eax+ebp*2-0x3a6f86f6],ah
  401a4f:	clc    
  401a50:	rcr    BYTE PTR [esi+0x26914c68],0x81
  401a57:	add    bh,BYTE PTR [edi+eax*1-0x5b952a09]
  401a5e:	mov    al,0x1e
  401a60:	inc    edi
  401a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a62:	out    dx,eax
  401a63:	mov    edx,0x4992b1d4
  401a68:	xchg   ah,dl
  401a6a:	or     edx,DWORD PTR ds:0x113e7deb
  401a70:	test   DWORD PTR ds:0xa4378076,0x2832b04c
  401a7a:	pusha  
  401a7b:	loop   0x401af8
  401a7d:	rcr    ebx,0xf2
  401a80:	scas   al,BYTE PTR es:[edi]
  401a81:	xor    DWORD PTR [edi+0x5],eax
  401a84:	mov    gs,WORD PTR [esi+0x4a]
  401a87:	mov    esp,ebx
  401a89:	clc    
  401a8a:	fisttp QWORD PTR [ecx-0x55c6ec77]
  401a90:	imul   ebp,edx,0x6a2c076b
  401a96:	imul   DWORD PTR [ebx]
  401a98:	dec    edi
  401a99:	ins    BYTE PTR es:[edi],dx
  401a9a:	pop    edi
  401a9b:	add    BYTE PTR [ebx+edi*1],dh
  401a9e:	push   ebp
  401a9f:	xor    al,0x22
  401aa1:	push   edi
  401aa2:	sub    DWORD PTR [ecx+0x2922af8e],0xffffffa8
  401aa9:	clc    
  401aaa:	add    BYTE PTR ds:0xa7c0b786,bh
  401ab0:	xchg   edi,eax
  401ab1:	fsubr  QWORD PTR [edx-0x6e]
  401ab4:	adc    DWORD PTR [esi+0x6c],ebx
  401ab7:	xor    BYTE PTR [ebx-0x6b],ch
  401aba:	jbe    0x401adf
  401abc:	cld    
  401abd:	sti    
  401abe:	popa   
  401abf:	xor    al,0x2f
  401ac1:	popa   
  401ac2:	push   esi
  401ac3:	jmp    0xab39:0xc9526989
  401aca:	jae    0x401b30
  401acc:	fist   DWORD PTR [bx+si]
  401acf:	sub    DWORD PTR [edi],eax
  401ad1:	je     0x401a9b
  401ad3:	jp     0x401ace
  401ad5:	clc    
  401ad6:	stc    
  401ad7:	xor    edi,DWORD PTR [ecx]
  401ad9:	and    BYTE PTR [edi],ch
  401adb:	jecxz  0x401af5
  401add:	xchg   BYTE PTR [eax+0x5cab8abe],dl
  401ae3:	pusha  
  401ae4:	in     eax,0xff
  401ae6:	jge    0x401af4
  401ae8:	cs stc 
  401aea:	sbb    esi,DWORD PTR [ebx-0x34c4fe95]
  401af0:	imul   ecx,DWORD PTR [edi+0x7de94a93],0xffffff8e
  401af7:	mov    ebx,0x13c59e9f
  401afc:	test   al,0x70
  401afe:	ins    BYTE PTR es:[edi],dx
  401aff:	pop    ebx
  401b00:	add    eax,0x5f38497b
  401b05:	rcl    ch,0x4d
  401b08:	push   eax
  401b09:	in     eax,0x8b
  401b0b:	mov    fs:0x450bffa6,al
  401b11:	cmc    
  401b12:	pop    esi
  401b14:	fyl2x  
  401b16:	adc    eax,0xad598224
  401b1b:	rcl    DWORD PTR [ebx-0x4d4ac60b],0xe3
  401b22:	mov    edi,0x697b64d8
  401b27:	sar    ecx,0xba
  401b2a:	stc    
  401b2b:	repz das 
  401b2d:	bound  ebp,QWORD PTR [ebp-0x1cdfa697]
  401b33:	outs   dx,DWORD PTR ds:[esi]
  401b34:	inc    edi
  401b35:	jo     0x401b68
  401b37:	ret    0xde8c
  401b3a:	dec    eax
  401b3b:	es inc eax
  401b3d:	adc    eax,0x934482a8
  401b42:	push   ebx
  401b43:	mov    cs,WORD PTR [edx+0x4b]
  401b46:	xchg   ebx,eax
  401b47:	aas    
  401b48:	mov    BYTE PTR [edi+0x1c4d2c04],ch
  401b4e:	xor    al,0xcc
  401b50:	inc    edx
  401b51:	fadd   QWORD PTR [ebp+0x33adf544]
  401b57:	stos   BYTE PTR es:[edi],al
  401b58:	xchg   edi,eax
  401b59:	hlt    
  401b5a:	cwde   
  401b5b:	loop   0x401bb0
  401b5d:	ins    BYTE PTR es:[edi],dx
  401b5e:	imul   eax,esp,0x4856175b
  401b64:	sahf   
  401b65:	xor    al,0xde
  401b67:	sbb    eax,0xbf16975f
  401b6c:	push   0x20
  401b6e:	sbb    al,0xed
  401b70:	call   0x8c36:0xc09d185a
  401b77:	xchg   edx,eax
  401b78:	fs jmp 0x61af:0xdb6b504
  401b80:	adc    eax,edx
  401b82:	gs es std 
  401b85:	gs jecxz 0x401b15
  401b88:	mov    bh,0x80
  401b8a:	fisttp DWORD PTR [esi-0x80]
  401b8d:	sub    BYTE PTR [esi+0x7f5a5f30],0x72
  401b94:	jecxz  0x401ba5
  401b96:	loope  0x401b65
  401b98:	adc    cl,0x44
  401b9b:	mov    ch,0xaf
  401b9d:	add    DWORD PTR [edi-0x2a],esi
  401ba0:	sub    ebx,DWORD PTR [eax+0x68dbce3c]
  401ba6:	mov    eax,0xac954015
  401bab:	scas   eax,DWORD PTR es:[edi]
  401bac:	ds add bh,dh
  401baf:	push   eax
  401bb0:	(bad)  
  401bb1:	loop   0x401bef
  401bb3:	(bad)  
  401bb5:	nop
  401bb6:	imul   DWORD PTR [ecx+0x46d73de6]
  401bbc:	retf   
  401bbd:	stc    
  401bbe:	push   0x3837e4cf
  401bc3:	add    ecx,DWORD PTR [eax+ebp*4+0x79]
  401bc7:	inc    esi
  401bc8:	int    0x72
  401bca:	loop   0x401c13
  401bcc:	add    al,0x1b
  401bce:	ds dec edi
  401bd0:	imul   esi,DWORD PTR [ebx-0x713d6e47],0xf1c4d8b
  401bda:	lods   al,BYTE PTR ds:[esi]
  401bdb:	enter  0xc102,0xe9
  401bdf:	add    dh,bh
  401be1:	ror    BYTE PTR [ebx-0x74b5e7b3],cl
  401be7:	push   ebp
  401be8:	sbb    al,0x33
  401bea:	mov    DWORD PTR [ecx+0x42297e15],0x4229a200
  401bf4:	add    BYTE PTR [ebx],dh
  401bf6:	rol    bh,cl
  401bf8:	add    eax,0x4229ae
  401bfd:	mov    bl,0x6b
  401bff:	add    BYTE PTR [eax],al
  401c01:	or     edx,eax
  401c03:	adc    DWORD PTR ds:0x422986,0x42289e
  401c0d:	mov    DWORD PTR [ebp-0x3c],edx
  401c10:	neg    eax
  401c12:	mov    DWORD PTR [ebp-0x70],0x2c55
  401c19:	mov    DWORD PTR [ebp-0x6c],0x456f
  401c20:	cmp    DWORD PTR ds:0x4229d2,0x0
  401c27:	mov    DWORD PTR ds:0x42289e,0x7b64
  401c31:	mov    DWORD PTR ds:0x42292a,0x2f7e
  401c3b:	mov    DWORD PTR ds:0x42289a,0x21f
  401c45:	mov    DWORD PTR ds:0x4229ce,0x3163
  401c4f:	jmp    0x401cb0
  401c54:	mov    DWORD PTR ds:0x4228ae,0x1734
  401c5e:	mov    eax,0x7b34
  401c63:	je     0x401c91
  401c69:	push   0x771c
  401c6e:	push   DWORD PTR [ebp-0x18]
  401c71:	call   DWORD PTR ds:0x42a040
  401c77:	and    DWORD PTR ds:0x422996,0x7212
  401c81:	sub    DWORD PTR ds:0x42297e,0x15ec
  401c8b:	and    DWORD PTR ds:0x42290e,ebx
  401c91:	or     DWORD PTR ds:0x42298a,0x1787
  401c9b:	xor    DWORD PTR ds:0x4229aa,0x7558
  401ca5:	mov    eax,ds:0x4228f6
  401caa:	sub    DWORD PTR ds:0x4228fa,eax
  401cb0:	mov    DWORD PTR [ebp-0x70],0x78a6
  401cb7:	movzx  eax,BYTE PTR ds:0x4229a2
  401cbe:	or     DWORD PTR ds:0x4228fe,eax
  401cc4:	jmp    0x40224e
  401cc9:	in     eax,dx
  401cca:	in     al,dx
  401ccb:	test   DWORD PTR [edi+esi*8-0x219a9b7c],0x296e8adf
  401cd6:	push   ds
  401cd7:	icebp  
  401cd8:	mov    ah,0x6a
  401cda:	cli    
  401cdb:	push   ss
  401cdc:	push   ss
  401cdd:	cmp    eax,0x91161604
  401ce2:	cmp    DWORD PTR [ebp+eiz*8+0x197ad99a],edi
  401ce9:	sbb    dh,BYTE PTR [eax+eiz*4]
  401cec:	xchg   esi,eax
  401ced:	(bad)  
  401cef:	ret    
  401cf0:	lds    ebx,FWORD PTR [eax+0x2c34bb47]
  401cf6:	jl     0x401cf0
  401cf8:	rol    BYTE PTR [eax],0xb5
  401cfb:	mov    esp,0x51d29f07
  401d00:	aam    0x8d
  401d02:	ja     0x401d60
  401d04:	cld    
  401d05:	ss fwait
  401d07:	dec    esp
  401d08:	ins    DWORD PTR es:[edi],dx
  401d09:	cmp    eax,0xd2b73ca5
  401d0e:	int3   
  401d0f:	mov    ds:0xd0f89989,al
  401d14:	xchg   ebx,eax
  401d15:	test   BYTE PTR [edi+0x17797d2a],bh
  401d1b:	repz mov fs,WORD PTR [ecx+0x61943b70]
  401d22:	data16 std 
  401d24:	xchg   esp,eax
  401d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d26:	lods   eax,DWORD PTR ds:[esi]
  401d27:	inc    edi
  401d28:	push   esi
  401d29:	hlt    
  401d2a:	icebp  
  401d2b:	mov    ch,0x68
  401d2d:	in     al,0x13
  401d2f:	scas   al,BYTE PTR es:[edi]
  401d30:	in     al,0x4c
  401d32:	(bad)
  401d35:	neg    BYTE PTR [esi]
  401d37:	bound  ebp,QWORD PTR [edi+0x45d88b0b]
  401d3d:	fild   QWORD PTR [eax-0x6c54c0e7]
  401d43:	leave  
  401d44:	cmp    bl,cl
  401d46:	pop    eax
  401d47:	mov    edi,0xfb6628d
  401d4c:	(bad)  
  401d4d:	mov    esi,0x506adbab
  401d52:	mov    al,0x9e
  401d54:	(bad)  
  401d55:	jbe    0x401d2d
  401d57:	jle    0x401dae
  401d59:	push   esi
  401d5a:	lock pop edx
  401d5c:	pop    eax
  401d5d:	add    DWORD PTR [edx+0x9be78e3],ebx
  401d63:	xchg   ebx,eax
  401d64:	and    al,0xde
  401d66:	jg     0x401dbc
  401d68:	test   BYTE PTR [edx+0x341cef],dl
  401d6e:	fs pop ds
  401d70:	sub    eax,0x1cef6da2
  401d75:	push   esi
  401d76:	push   es
  401d77:	inc    eax
  401d78:	adc    al,0xd5
  401d7a:	into   
  401d7b:	imul   edi,DWORD PTR fs:[edi-0x44],0x6e062caa
  401d83:	fst    QWORD PTR [ecx]
  401d85:	sbb    esp,esp
  401d87:	stos   DWORD PTR es:[edi],eax
  401d88:	and    ebx,DWORD PTR [edx-0x1]
  401d8b:	jecxz  0x401da4
  401d8d:	mov    ecx,0xa06ead17
  401d92:	pop    ecx
  401d93:	test   BYTE PTR [eax+edx*8+0x1a],0x5c
  401d98:	cmp    DWORD PTR [edx],0xecde465
  401d9e:	repz call FWORD PTR ss:[edx+eiz*4+0x71]
  401da4:	push   cs
  401da5:	pop    ecx
  401da6:	sbb    DWORD PTR [ebp-0x158075e5],esp
  401dac:	sbb    BYTE PTR [ebp-0x21],dh
  401daf:	dec    ebp
  401db0:	xchg   esp,eax
  401db1:	test   al,0x47
  401db3:	mov    esp,0x70d18777
  401db8:	mov    DWORD PTR [esi-0x38],ebx
  401dbb:	jg     0x401e15
  401dbd:	add    eax,0x23e23895
  401dc2:	jp     0x401e34
  401dc4:	push   edi
  401dc5:	arpl   WORD PTR [ebp+eax*1-0x4b],dx
  401dc9:	neg    cl
  401dcb:	or     eax,DWORD PTR [eax+0x59]
  401dce:	add    eax,0x8026a5d3
  401dd3:	cdq    
  401dd4:	push   DWORD PTR [ebx+0x51a2a9da]
  401dda:	rcl    edi,0xa
  401ddd:	stos   DWORD PTR es:[edi],eax
  401dde:	cwde   
  401ddf:	test   eax,0xa8a32d41
  401de4:	or     ecx,DWORD PTR [edx-0x47]
  401de7:	xor    DWORD PTR [ebx+ebp*2+0x10],ecx
  401deb:	jmp    0xf3f11993
  401df0:	xor    edx,esi
  401df2:	dec    esi
  401df3:	jns    0x401d82
  401df5:	bound  ecx,QWORD PTR [eax+0x1f]
  401df8:	icebp  
  401df9:	mov    ebp,0x8847d2e6
  401dfe:	mov    ecx,0x812bcd8
  401e03:	mov    ds:0x167ad8ba,eax
  401e08:	inc    eax
  401e09:	hlt    
  401e0a:	repz push eax
  401e0c:	pop    ebx
  401e0d:	imul   ebx,DWORD PTR [esi+0x25a0964],0x64331535
  401e17:	pop    DWORD PTR [ebx]
  401e19:	aad    0x5a
  401e1b:	cmp    eax,0x988205ce
  401e20:	ins    DWORD PTR es:[edi],dx
  401e21:	cmp    eax,0x517ac250
  401e26:	push   0xe6e41ad7
  401e2b:	mov    ebp,0xa3d10399
  401e30:	and    al,0x3a
  401e32:	pop    DWORD PTR [edx+edi*2-0x11]
  401e36:	pop    ss
  401e37:	mov    bh,0xa5
  401e39:	sbb    al,0x3f
  401e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e3c:	adc    dh,cl
  401e3e:	or     dl,BYTE PTR [esi-0x18]
  401e41:	pop    es
  401e42:	retf   0xbdfc
  401e45:	or     ah,BYTE PTR [edx-0x17910ff4]
  401e4b:	fnstcw WORD PTR [ebx+0xd]
  401e4e:	inc    esp
  401e4f:	aaa    
  401e50:	dec    ebx
  401e51:	push   esi
  401e52:	loope  0x401e71
  401e54:	dec    ecx
  401e55:	pop    edx
  401e56:	xchg   ecx,eax
  401e57:	int3   
  401e58:	push   ss
  401e59:	mov    edx,0x1ffd4e7f
  401e5e:	push   esp
  401e5f:	push   ecx
  401e60:	and    DWORD PTR [esi-0x25],edi
  401e63:	add    al,0xf0
  401e65:	(bad)  
  401e66:	mov    al,0x27
  401e68:	cld    
  401e69:	arpl   WORD PTR [ecx],ax
  401e6b:	ret    
  401e6c:	or     eax,DWORD PTR [ecx+0x2ae57ebc]
  401e72:	pop    esp
  401e73:	sbb    dh,BYTE PTR [eax+0x5577f81]
  401e79:	mov    esi,0x54d8d994
  401e7e:	test   DWORD PTR [ecx-0x1c331599],edx
  401e84:	test   al,0xb5
  401e86:	adc    DWORD PTR [edi],ebx
  401e88:	fidivr WORD PTR [ecx+eax*1]
  401e8b:	stc    
  401e8c:	lea    eax,ds:0x7394d9aa
  401e92:	mov    ebx,0x8f737a42
  401e97:	xor    eax,0x530e25a2
  401e9c:	sbb    ecx,DWORD PTR [ecx-0x409ac27e]
  401ea2:	in     al,dx
  401ea3:	retf   
  401ea4:	(bad)  
  401ea5:	jecxz  0x401ec5
  401ea7:	pop    ecx
  401ea8:	ins    DWORD PTR es:[edi],dx
  401ea9:	jge    0x401e81
  401eab:	stos   DWORD PTR es:[edi],eax
  401eac:	add    ebx,ebp
  401eae:	pop    ds
  401eaf:	int3   
  401eb0:	and    ch,BYTE PTR [eax]
  401eb2:	je     0x401e84
  401eb4:	push   esi
  401eb5:	std    
  401eb6:	iret   
  401eb7:	cmp    BYTE PTR [ecx],ch
  401eb9:	ror    BYTE PTR [edi+0x40],0xf3
  401ebd:	xor    eax,DWORD PTR ds:0xbe586e20
  401ec3:	xchg   cl,dl
  401ec5:	mov    dh,0xfc
  401ec7:	push   cs
  401ec8:	ror    BYTE PTR [ecx-0x19],1
  401ecb:	inc    edi
  401ecc:	xor    dh,BYTE PTR [ebp+0x7f]
  401ecf:	out    dx,al
  401ed0:	stc    
  401ed1:	lods   al,BYTE PTR ds:[esi]
  401ed2:	adc    eax,0xcc89f22a
  401ed7:	fisttp DWORD PTR [edi+0x66]
  401eda:	retf   
  401edb:	sbb    al,0x28
  401edd:	mov    ah,0xbf
  401edf:	push   eax
  401ee0:	out    dx,al
  401ee1:	pop    es
  401ee2:	jns    0x401f2e
  401ee4:	cli    
  401ee5:	popa   
  401ee6:	shr    BYTE PTR [esi+0x5d32e851],cl
  401eec:	jae    0x401e83
  401eee:	sub    eax,0xf76072c2
  401ef3:	repnz pop edi
  401ef5:	stos   DWORD PTR es:[edi],eax
  401ef6:	push   ebx
  401ef7:	addr16 iret 
  401ef9:	pop    ebp
  401efa:	xchg   esp,eax
  401efb:	stos   DWORD PTR es:[edi],eax
  401efc:	dec    ecx
  401efd:	pop    edx
  401efe:	frstor [ebx+ebp*1-0x33660291]
  401f05:	or     esi,DWORD PTR [ebx]
  401f07:	xchg   edi,eax
  401f08:	test   BYTE PTR [eax-0x75fdce23],bl
  401f0e:	iret   
  401f0f:	xchg   DWORD PTR [esi-0x23],ecx
  401f12:	add    edi,DWORD PTR [eax]
  401f14:	popa   
  401f15:	clc    
  401f16:	mov    esp,DWORD PTR cs:[ecx+0x3edbf272]
  401f1d:	cld    
  401f1e:	push   ebp
  401f1f:	xor    DWORD PTR [esi],ebx
  401f21:	(bad)  
  401f22:	push   ebx
  401f23:	rcr    DWORD PTR [ebp-0x149cd4bc],cl
  401f29:	jg     0x401f6e
  401f2b:	popf   
  401f2c:	je     0x401ed8
  401f2e:	push   0xffffffce
  401f30:	jle    0x401f2f
  401f32:	and    al,0xc5
  401f34:	addr16 dec eax
  401f36:	scas   al,BYTE PTR es:[edi]
  401f37:	sbb    cl,BYTE PTR [edx+0x66]
  401f3a:	ins    DWORD PTR es:[edi],dx
  401f3b:	or     bl,BYTE PTR [eax-0x48a131c3]
  401f41:	xor    ebp,DWORD PTR [ecx+edi*2+0x72]
  401f45:	lods   al,BYTE PTR ds:[esi]
  401f46:	aas    
  401f47:	mov    ch,BYTE PTR [eax-0x6a]
  401f4a:	xor    BYTE PTR [ebx-0x15043a73],0x81
  401f51:	adc    eax,0x5bd03b6b
  401f56:	scas   al,BYTE PTR es:[edi]
  401f57:	ja     0x401f02
  401f59:	je     0x401faa
  401f5b:	adc    ax,0xc21
  401f5f:	push   ecx
  401f60:	test   BYTE PTR [edi],ch
  401f62:	mov    bl,0x32
  401f64:	xchg   esp,eax
  401f65:	and    eax,0xfba6f9cb
  401f6a:	xchg   edi,eax
  401f6b:	shl    edx,0xf0
  401f6e:	stc    
  401f6f:	test   DWORD PTR [ecx+0x69],ebx
  401f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f73:	call   FWORD PTR [edx+0x65]
  401f76:	cmp    BYTE PTR [esi+eiz*1-0x4dc1b112],bh
  401f7d:	mov    eax,ds:0xb9d35dee
  401f82:	fs dec ebp
  401f84:	lods   al,BYTE PTR ds:[esi]
  401f85:	mov    esp,0x17d977e2
  401f8a:	mov    dh,0x9a
  401f8c:	inc    esi
  401f8d:	mov    fs,WORD PTR [esi-0x52]
  401f90:	jmp    0x27ca:0x1bedd303
  401f97:	cmp    BYTE PTR [edx+0x2b97e882],dl
  401f9d:	cmp    DWORD PTR [edi],edx
  401f9f:	ret    
  401fa0:	popf   
  401fa1:	mov    bl,0xb8
  401fa3:	adc    BYTE PTR [ebp-0x33],dl
  401fa6:	addr16 add eax,0x1399861b
  401fac:	push   ss
  401fad:	std    
  401fae:	pop    esp
  401faf:	and    esp,esp
  401fb1:	pushf  
  401fb2:	jae    0x402011
  401fb4:	enter  0xf11b,0x1e
  401fb8:	test   BYTE PTR [edx-0x550dc145],ah
  401fbe:	outs   dx,BYTE PTR ds:[esi]
  401fbf:	jecxz  0x40201d
  401fc1:	out    0x6b,eax
  401fc3:	daa    
  401fc4:	daa    
  401fc5:	adc    eax,0xf510a058
  401fca:	mov    eax,ds:0x479bab40
  401fcf:	fisub  WORD PTR [eax]
  401fd1:	out    dx,eax
  401fd2:	sub    eax,0x3c0a7573
  401fd7:	xlat   BYTE PTR ds:[ebx]
  401fd8:	mov    cl,0xe8
  401fda:	or     BYTE PTR [ebp-0x14],ch
  401fdd:	outs   dx,BYTE PTR ds:[esi]
  401fde:	adc    ch,bl
  401fe0:	popf   
  401fe1:	jmp    0x6898:0x13862929
  401fe8:	push   eax
  401fe9:	push   0xffffffdf
  401feb:	je     0x401f92
  401fed:	and    ebx,DWORD PTR [ebx-0x66533549]
  401ff3:	add    eax,0x3fb3a1eb
  401ff8:	jno    0x40205e
  401ffa:	xor    eax,0xfb76cce6
  401fff:	cmp    al,0x64
  402001:	inc    eax
  402002:	add    eax,0xd5fd3723
  402007:	push   edx
  402008:	fst    QWORD PTR [esi+0x6badb2e3]
  40200e:	mov    ds:0x6c8764e7,eax
  402013:	pop    ebx
  402014:	sub    eax,0x40cdbfd7
  402019:	dec    ecx
  40201a:	enter  0xbb6e,0x47
  40201e:	cmovge ecx,DWORD PTR [ebp-0x6bb3951e]
  402025:	add    eax,0x21b11c80
  40202a:	jle    0x40203a
  40202c:	ds push ebp
  40202e:	mul    DWORD PTR [ebx-0x5dd196cf]
  402034:	sbb    al,0x12
  402036:	es dec edx
  402038:	pop    ebp
  402039:	mov    ebx,0xd910cab4
  40203e:	sahf   
  40203f:	jmp    0x1ac3:0x39468748
  402046:	in     al,dx
  402047:	mov    al,0xfd
  402049:	dec    esp
  40204a:	dec    ecx
  40204b:	pop    ecx
  40204c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40204d:	sub    ch,BYTE PTR [edi-0x59]
  402050:	jmp    0x1202:0x5d16df92
  402057:	sbb    ch,ch
  402059:	ins    DWORD PTR es:[edi],dx
  40205a:	xchg   edi,eax
  40205b:	or     DWORD PTR [edi-0x3d],ecx
  40205e:	mov    ah,0xa
  402060:	add    BYTE PTR [ebx+0x3400d577],0xdf
  402067:	imul   ebp,esp,0x16b9028a
  40206d:	in     al,dx
  40206e:	jg     0x4020a1
  402070:	or     esp,DWORD PTR [ebp+ebx*2+0x21]
  402074:	xor    al,0x51
  402076:	aaa    
  402077:	mov    ch,0xab
  402079:	mov    ebx,edx
  40207b:	sahf   
  40207c:	inc    ebp
  40207d:	int3   
  40207e:	cmp    BYTE PTR [edx-0x68c9b1e8],cl
  402084:	hlt    
  402085:	fs retf 0x4bf0
  402089:	pop    eax
  40208a:	dec    edi
  40208b:	cmp    al,0x12
  40208d:	inc    edi
  40208e:	jmp    0x91b15642
  402093:	fwait
  402094:	jmp    0xec43:0x7423ac6f
  40209b:	mov    ch,0x25
  40209d:	mov    ah,0xd
  40209f:	mov    dh,0xe4
  4020a1:	push   esp
  4020a2:	cld    
  4020a3:	scas   al,BYTE PTR es:[edi]
  4020a4:	daa    
  4020a5:	ret    
  4020a6:	add    al,BYTE PTR [ecx]
  4020a8:	mov    ds:0x734f56ef,eax
  4020ad:	jmp    0xd81d:0xe27a0593
  4020b4:	fnsave [edx]
  4020b6:	mov    edx,0x80bb289c
  4020bb:	mov    eax,cs:0x5cc9b466
  4020c1:	cdq    
  4020c2:	data16 into 
  4020c4:	repz inc edi
  4020c6:	in     eax,dx
  4020c7:	sub    esi,DWORD PTR [edi+0x77e06766]
  4020cd:	(bad)  
  4020ce:	or     edi,DWORD PTR [edx+eiz*2+0x2d]
  4020d2:	mul    ah
  4020d4:	retf   0x8de6
  4020d7:	jle    0x40206d
  4020d9:	repz inc esp
  4020db:	jbe    0x4020b9
  4020dd:	cdq    
  4020de:	jnp    0x402145
  4020e0:	jnp    0x4020ec
  4020e2:	ret    0x8b0b
  4020e5:	aas    
  4020e6:	retf   
  4020e7:	clc    
  4020e8:	std    
  4020e9:	imul   ebx,DWORD PTR [esi-0x717c1569],0xffffffa9
  4020f0:	(bad)  
  4020f4:	call   0x90041f7c
  4020f9:	pop    ebx
  4020fa:	inc    ecx
  4020fb:	int3   
  4020fc:	add    al,cl
  4020fe:	dec    esi
  4020ff:	mov    esp,0xf79d49a2
  402104:	cld    
  402105:	into   
  402106:	pop    edx
  402107:	adc    BYTE PTR [edi-0x41],bl
  40210a:	sbb    eax,eax
  40210c:	xchg   edi,eax
  40210d:	jnp    0x4020c4
  40210f:	mov    ds,WORD PTR [eax]
  402111:	mov    edi,0x57c5b931
  402116:	sbb    BYTE PTR [ecx],0x5d
  402119:	(bad)  
  40211a:	sbb    BYTE PTR [ecx-0x1a],dh
  40211d:	iret   
  40211e:	mov    ebp,0xe70b5585
  402123:	cdq    
  402124:	cmp    BYTE PTR [ebp+0x46],ch
  402127:	fwait
  402128:	xchg   ecx,eax
  402129:	bound  esi,QWORD PTR [esi]
  40212b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40212c:	outs   dx,BYTE PTR ds:[esi]
  40212d:	add    eax,0x6bc5efe0
  402132:	repnz sub eax,0x939b738a
  402138:	push   esi
  402139:	pop    ecx
  40213a:	out    0x6a,al
  40213c:	icebp  
  40213d:	daa    
  40213e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213f:	sub    DWORD PTR [ebx+0x4e1ff760],0xffffff9d
  402146:	repz fild DWORD PTR [ebp-0x47]
  40214a:	sbb    bh,ah
  40214c:	dec    edx
  40214d:	xchg   ecx,eax
  40214e:	xchg   esp,eax
  40214f:	ss ins BYTE PTR es:[edi],dx
  402151:	xor    eax,0xf5dd5746
  402156:	shr    DWORD PTR [edx+0x31345254],1
  40215c:	call   0xa9b1:0x859ba922
  402163:	jecxz  0x4020f2
  402165:	mov    dh,0xf8
  402167:	xchg   esp,eax
  402168:	adc    BYTE PTR [ebx+0x403b356],bh
  40216e:	xchg   ebx,eax
  40216f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402170:	pop    ecx
  402171:	pop    esi
  402172:	sbb    eax,0x103ce74e
  402177:	inc    edx
  402178:	add    ecx,ebx
  40217a:	jg     0x4021f8
  40217c:	popa   
  40217d:	aam    0x56
  40217f:	pop    eax
  402180:	leave  
  402181:	sbb    al,0xb4
  402183:	xchg   esp,eax
  402184:	inc    edi
  402185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402186:	bound  edi,QWORD PTR [edi-0x38df29ff]
  40218c:	sbb    al,0x64
  40218e:	psubw  mm4,QWORD PTR [ecx]
  402191:	and    eax,0xf01fb087
  402196:	std    
  402197:	mov    al,0xa4
  402199:	inc    eax
  40219a:	sbb    cl,BYTE PTR [esi]
  40219c:	push   ds
  40219d:	push   0x77caaf00
  4021a2:	mov    ebp,0x2cdb598d
  4021a7:	out    dx,al
  4021a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021a9:	nop
  4021aa:	aaa    
  4021ab:	inc    ebp
  4021ac:	ret    0x6809
  4021af:	repz jne 0x4021d1
  4021b2:	fisubr WORD PTR [edi+0x15]
  4021b5:	pop    eax
  4021b6:	mov    BYTE PTR [edx+esi*8+0x43],0x76
  4021bb:	cld    
  4021bc:	jle    0x40223a
  4021be:	or     BYTE PTR [edi+ecx*1+0x3e],cl
  4021c2:	or     ch,cl
  4021c4:	mov    bh,0x5a
  4021c6:	xor    al,0xd
  4021c8:	mov    bl,0xa
  4021ca:	mov    bh,ah
  4021cc:	sbb    BYTE PTR [edx-0x650a32c9],dl
  4021d2:	adc    al,0xdb
  4021d4:	mov    DWORD PTR [eax],edi
  4021d6:	pop    ecx
  4021d7:	cmp    eax,0xae408922
  4021dc:	sbb    BYTE PTR [ebp+0x53],cl
  4021df:	sub    ch,BYTE PTR ds:0x76db4d51
  4021e5:	scas   al,BYTE PTR es:[edi]
  4021e6:	jmp    0xc58:0x7a86264d
  4021ed:	xchg   ecx,eax
  4021ee:	loopne 0x402251
  4021f0:	ror    esp,1
  4021f2:	fdivr  DWORD PTR [ebp+0x13fd56fc]
  4021f8:	cmp    DWORD PTR [ecx],edx
  4021fa:	imul   ebx,DWORD PTR [eax+0x3c],0x884f3bb4
  402201:	cs dec eax
  402203:	inc    eax
  402204:	lods   eax,DWORD PTR ds:[esi]
  402205:	mov    ebp,0x611bed75
  40220a:	jnp    0x402225
  40220c:	pop    ds
  40220d:	fstp   QWORD PTR [ebx+0x69527285]
  402213:	xchg   ebx,eax
  402214:	repnz cmp al,0x58
  402217:	outs   dx,BYTE PTR ds:[esi]
  402218:	jg     0x4021ba
  40221a:	fnstsw WORD PTR [eax-0x2b]
  40221d:	fwait
  40221e:	repnz sub DWORD PTR [eax+0x79],edx
  402222:	fisttp DWORD PTR [ecx-0x7928a48a]
  402228:	scas   eax,DWORD PTR es:[edi]
  402229:	das    
  40222a:	push   esp
  40222b:	dec    ecx
  40222c:	adc    eax,0x2f76db77
  402231:	and    BYTE PTR [edx+0x24],dl
  402234:	repnz push esp
  402236:	mov    cl,0xa9
  402238:	cmp    BYTE PTR [ecx+ecx*8+0x60],bh
  40223c:	cmp    al,bl
  40223e:	outs   dx,DWORD PTR ds:[esi]
  40223f:	and    al,0xbd
  402241:	sbb    eax,ebx
  402243:	push   ss
  402244:	adc    BYTE PTR [ebx-0xf],bh
  402247:	hlt    
  402248:	jmp    0x4022a8
  40224a:	gs dec edx
  40224c:	jmp    0x9485e99d
  402251:	mov    BYTE PTR [ecx],al
  402253:	add    BYTE PTR [eax],al
  402255:	mov    DWORD PTR [ebp-0x70],0x5b3f
  40225c:	and    DWORD PTR ds:0x4228be,ecx
  402262:	jmp    0x4027ec
  402267:	loope  0x402242
  402269:	mov    bh,0x25
  40226b:	scas   eax,DWORD PTR es:[edi]
  40226c:	sbb    DWORD PTR [ecx+0x19],ebx
  40226f:	dec    edx
  402270:	retf   0x7262
  402273:	out    0xb9,al
  402275:	stos   BYTE PTR es:[edi],al
  402276:	scas   al,BYTE PTR es:[edi]
  402277:	mov    eax,ds:0x3d1616f6
  40227c:	add    al,0x16
  40227e:	push   ss
  40227f:	sbb    bh,dl
  402281:	mov    bl,0x2d
  402283:	mov    eax,0xf62b300d
  402288:	loop   0x402245
  40228a:	mov    WORD PTR [ebx-0x4ea8c142],cs
  402290:	and    edx,DWORD PTR [edx-0x37]
  402293:	pop    edx
  402294:	sub    dl,BYTE PTR [ebx-0x3e060f85]
  40229a:	xchg   edx,eax
  40229b:	jae    0x402292
  40229d:	pop    ecx
  40229e:	and    al,0xe2
  4022a0:	mov    BYTE PTR ds:0x3314607e,dl
  4022a6:	cmp    eax,0x11724c31
  4022ab:	xchg   ebx,eax
  4022ac:	ins    BYTE PTR es:[edi],dx
  4022ad:	mov    ecx,DWORD PTR [ecx-0x1c43f069]
  4022b3:	into   
  4022b4:	add    esi,esi
  4022b6:	mov    ebp,0xc7b97622
  4022bb:	call   0xc24fe227
  4022c0:	xchg   BYTE PTR [ebp+0x74],dl
  4022c3:	pop    ebp
  4022c4:	and    BYTE PTR [esp+esi*8-0x7a123bb],ah
  4022cb:	xchg   ebp,eax
  4022cc:	jns    0x402347
  4022ce:	xor    al,0x1a
  4022d0:	int3   
  4022d1:	test   eax,0x3f4ba532
  4022d6:	pop    esp
  4022d7:	mov    ebx,0x2e008672
  4022dc:	or     ah,ah
  4022de:	ret    0x2641
  4022e1:	mov    ds:0x3d8a4b6a,al
  4022e6:	retf   0xe0f8
  4022e9:	int    0x2b
  4022eb:	loop   0x402296
  4022ed:	cvtpi2ps xmm4,QWORD PTR [edi+0x4c]
  4022f1:	sbb    ebp,DWORD PTR [eax+0xb]
  4022f4:	cmp    BYTE PTR [edi],dl
  4022f6:	jp     0x40232d
  4022f8:	jns    0x402288
  4022fa:	icebp  
  4022fb:	arpl   ax,cx
  4022fd:	(bad)  
  4022fe:	and    eax,0x8d7a8e8
  402303:	in     al,0x1f
  402305:	mov    DWORD PTR [esi-0x414c41a4],eax
  40230b:	shr    DWORD PTR [ecx+ebx*2+0x3a],cl
  40230f:	aad    0x35
  402311:	enter  0xd038,0x1d
  402315:	mov    fs,WORD PTR [ecx-0x54]
  402318:	cli    
  402319:	cmp    al,0xdf
  40231b:	test   al,0x5c
  40231d:	sbb    esi,DWORD PTR ss:[ecx]
  402320:	dec    ecx
  402321:	adc    al,0xcc
  402323:	pop    esp
  402324:	push   es
  402325:	pop    edx
  402326:	ins    BYTE PTR es:[edi],dx
  402327:	outs   dx,BYTE PTR ds:[esi]
  402328:	test   eax,0x65f3c147
  40232d:	ret    
  40232e:	xor    al,0x25
  402330:	or     DWORD PTR [esi+0x744c495d],ecx
  402336:	mov    bh,0xc4
  402338:	xor    edi,eax
  40233a:	xchg   ecx,eax
  40233b:	jecxz  0x402304
  40233d:	jo     0x402378
  40233f:	test   DWORD PTR [esi+0x6f],edx
  402342:	jmp    0xe290:0x6280e9b7
  402349:	sub    eax,0x6062bb43
  40234e:	out    0x25,eax
  402350:	jge    0x4023a6
  402352:	fdivr  QWORD PTR [ebp+0x6e005328]
  402358:	loope  0x402373
  40235a:	(bad)  
  40235b:	shl    DWORD PTR [ecx],cl
  40235d:	mov    cl,0xd4
  40235f:	sub    DWORD PTR ds:0x1b8a63cb,edi
  402365:	cmp    al,0x9
  402367:	dec    ecx
  402368:	jmp    0xc2fd:0xa5d420e4
  40236f:	sbb    al,0x19
  402371:	ds int3 
  402373:	out    dx,al
  402374:	bound  esp,QWORD PTR [edx]
  402376:	pop    edi
  402377:	loopne 0x4023af
  402379:	xor    ch,dl
  40237b:	mov    bl,BYTE PTR [eax]
  40237d:	jge    0x402322
  40237f:	cmc    
  402380:	mov    edx,0xde10f847
  402385:	xchg   esi,eax
  402386:	inc    eax
  402387:	mov    ecx,0x8fd803fa
  40238c:	iret   
  40238d:	dec    edi
  40238e:	add    esp,DWORD PTR [edx+0x6a3ae8a6]
  402394:	clc    
  402395:	sub    ecx,DWORD PTR [esi]
  402397:	lods   eax,DWORD PTR ds:[esi]
  402398:	mov    dh,0x32
  40239a:	out    dx,eax
  40239b:	xor    edi,DWORD PTR fs:[esi+0x3e]
  40239f:	cs ins DWORD PTR es:[edi],dx
  4023a1:	mov    esi,0x37a87bd9
  4023a6:	shr    BYTE PTR ds:0x1db0e408,1
  4023ac:	xor    dl,0xe4
  4023af:	call   0x139d:0xe0d0d365
  4023b6:	jbe    0x4023ab
  4023b8:	xor    eax,0x7053e263
  4023bd:	dec    edi
  4023be:	sbb    bh,BYTE PTR [ebx-0xc8eaea6]
  4023c4:	push   edi
  4023c5:	sbb    al,0x12
  4023c7:	add    esp,DWORD PTR [esi]
  4023c9:	(bad)  
  4023ca:	clc    
  4023cb:	outs   dx,DWORD PTR ds:[esi]
  4023cc:	adc    BYTE PTR [esi],0x85
  4023cf:	xor    al,0x74
  4023d1:	pop    es
  4023d2:	or     edx,edi
  4023d4:	ret    
  4023d5:	clc    
  4023d6:	xor    ch,al
  4023d8:	or     al,0x18
  4023da:	add    BYTE PTR [eax-0x55],cl
  4023dd:	and    DWORD PTR [ebx+0x6f],ebp
  4023e0:	add    bl,BYTE PTR [edi]
  4023e2:	add    BYTE PTR [ebp+0x65ede83b],dh
  4023e8:	stc    
  4023e9:	add    BYTE PTR [di],bh
  4023ec:	test   eax,0x5198650e
  4023f1:	mul    BYTE PTR [ebx]
  4023f3:	aaa    
  4023f4:	jmp    0xca63:0x85ae9dde
  4023fb:	add    ah,BYTE PTR [eax-0x6625b860]
  402401:	(bad)  
  402403:	mov    es,WORD PTR [eax]
  402405:	pop    ss
  402406:	fsubr  QWORD PTR [ebp+0x2af48553]
  40240c:	inc    ebp
  40240d:	pop    ebx
  40240e:	bound  eax,QWORD PTR [ebp-0xd9b2184]
  402414:	mov    ecx,0xcb7407b7
  402419:	sbb    ebp,DWORD PTR [eax+0x637b3d15]
  40241f:	int3   
  402420:	adc    edi,0xffffff83
  402423:	test   BYTE PTR [edi],ch
  402425:	ud0    eax,DWORD PTR [esi+0x71]
  402429:	cmc    
  40242a:	add    eax,esi
  40242c:	or     eax,0x8e483391
  402431:	ror    DWORD PTR [ebx+0x15dcbfc5],0xad
  402438:	pusha  
  402439:	or     DWORD PTR [edx],0x9520179a
  40243f:	mov    ds:0xc8c2baf6,al
  402444:	sbb    DWORD PTR ds:0x7a36,edx
  402449:	call   0x26e65480
  40244e:	mov    ebx,0xbc9f430d
  402453:	dec    edi
  402454:	test   eax,0xdf02d4a1
  402459:	xchg   BYTE PTR [ebp-0x3da4f69c],bh
  40245f:	popf   
  402460:	aam    0xa7
  402462:	sbb    eax,DWORD PTR [esi+ebp*8]
  402465:	cwde   
  402466:	cmp    edx,DWORD PTR [ebx+ebx*1+0x34ea30d8]
  40246d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40246e:	sbb    DWORD PTR [esi],0xffffffe3
  402471:	sub    esi,DWORD PTR [edx-0xc]
  402474:	imul   ebx,DWORD PTR [eax+edi*1-0x11],0x5e5544b4
  40247c:	sbb    ah,BYTE PTR [ebx-0xc5e4c6d]
  402482:	imul   esi,DWORD PTR [ecx-0xcec446a],0x59a54e54
  40248c:	bound  ebx,QWORD PTR [ecx+0x45]
  40248f:	test   BYTE PTR [edi+eax*1],ah
  402492:	xchg   ecx,eax
  402493:	jge    0x4024c5
  402495:	pop    esi
  402496:	fldcw  WORD PTR ds:0x303bc27a
  40249c:	ja     0x40246a
  40249e:	mov    dh,BYTE PTR [esp+edi*1+0x7d]
  4024a2:	adc    ecx,edi
  4024a4:	cmp    ah,bl
  4024a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024a7:	xchg   esi,eax
  4024a8:	adc    BYTE PTR [eax+esi*8+0x37],0xeb
  4024ad:	xor    ebp,esp
  4024af:	push   ebp
  4024b0:	mov    ch,0xc7
  4024b2:	jmp    0x652d:0x3a54a718
  4024b9:	dec    ebp
  4024ba:	popa   
  4024bb:	mov    ecx,0xf2e8e0f1
  4024c0:	rcr    ch,1
  4024c2:	stos   DWORD PTR es:[edi],eax
  4024c3:	rol    BYTE PTR [esi+0x16],cl
  4024c6:	hlt    
  4024c7:	push   cs
  4024c8:	fistp  DWORD PTR [ecx+0x57]
  4024cb:	mov    eax,0x39b5e73f
  4024d0:	aam    0xd8
  4024d2:	loopne 0x4024f8
  4024d4:	sbb    al,0x23
  4024d6:	push   ss
  4024d7:	das    
  4024d8:	outs   dx,BYTE PTR ds:[esi]
  4024d9:	retf   
  4024da:	in     al,0x6b
  4024dc:	or     al,0x42
  4024de:	pop    edx
  4024df:	jmp    0x9098:0x6e7f3851
  4024e6:	sub    al,0x39
  4024e8:	or     BYTE PTR [ebp-0x6c723ee3],ah
  4024ee:	sbb    eax,DWORD PTR [eax+0x7]
  4024f1:	dec    ebp
  4024f2:	adc    ch,al
  4024f4:	outs   dx,DWORD PTR ds:[esi]
  4024f5:	es jnp 0x4024e9
  4024f8:	out    0x32,al
  4024fa:	test   bl,bh
  4024fc:	mov    WORD PTR [ebp-0x4f],gs
  4024ff:	test   DWORD PTR [ecx],edi
  402501:	call   0x27d3:0xfc1596b5
  402508:	sub    eax,0x50412719
  40250d:	xchg   ebx,eax
  40250e:	push   esi
  40250f:	push   edi
  402510:	test   BYTE PTR [edx],cl
  402512:	jbe    0x4024a9
  402514:	and    eax,0xaae1a439
  402519:	adc    DWORD PTR [esi-0x7],0x5df7846b
  402520:	das    
  402521:	inc    ebp
  402522:	dec    edi
  402523:	inc    ebx
  402524:	dec    sp
  402526:	inc    ecx
  402527:	cmp    DWORD PTR [ecx-0x64],ebx
  40252a:	pop    DWORD PTR [eax+0x5d]
  40252d:	pop    esp
  40252e:	fsubr  st(6),st
  402530:	stos   DWORD PTR es:[edi],eax
  402531:	stos   BYTE PTR es:[edi],al
  402532:	jge    0x40253f
  402534:	js     0x4024f2
  402536:	ja     0x4024ff
  402538:	xchg   bh,ah
  40253a:	sub    al,0x46
  40253c:	dec    esi
  40253d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40253e:	inc    ecx
  40253f:	xchg   edx,eax
  402540:	in     eax,dx
  402541:	sub    BYTE PTR [esi],bl
  402543:	sub    BYTE PTR [eax+0x77],ah
  402546:	dec    eax
  402547:	xchg   BYTE PTR [eax],bh
  402549:	ret    0xbbab
  40254c:	pop    ebp
  40254d:	mov    ah,0xd8
  40254f:	cmp    bl,dh
  402551:	mov    dl,0xac
  402553:	inc    esp
  402554:	dec    esp
  402555:	push   esi
  402556:	add    esi,0x35
  402559:	mov    al,bh
  40255b:	sub    DWORD PTR [ecx],0xffffff9b
  40255e:	imul   BYTE PTR [esi-0x3c]
  402561:	inc    edx
  402562:	jmp    0x4024f6
  402564:	dec    edx
  402565:	cld    
  402566:	ja     0x402507
  402568:	mov    bl,0x1c
  40256a:	pop    ebx
  40256b:	and    al,0xee
  40256d:	pop    edi
  40256e:	mov    ebp,0xb9ba8678
  402573:	iret   
  402574:	push   esi
  402575:	mov    esp,0x72f89806
  40257a:	outs   dx,DWORD PTR ds:[esi]
  40257b:	and    al,0x7e
  40257d:	ss xchg ebp,eax
  40257f:	xchg   dh,dh
  402581:	inc    ebx
  402582:	call   0x99c8:0x859c2830
  402589:	xchg   edx,eax
  40258a:	outs   dx,BYTE PTR ds:[esi]
  40258b:	loop   0x4025b3
  40258d:	fwait
  40258e:	hlt    
  40258f:	jnp    0x402566
  402591:	add    BYTE PTR [esi-0x37],cl
  402594:	mov    al,0x52
  402596:	iret   
  402597:	pop    ebx
  402598:	dec    esi
  402599:	xchg   esp,eax
  40259a:	rcl    BYTE PTR [eax+0x57],0x3f
  40259e:	mov    ds:0x7690e3df,eax
  4025a3:	ret    
  4025a4:	push   ebx
  4025a5:	jmp    0x40261c
  4025a7:	jp     0x4025db
  4025a9:	xor    BYTE PTR [ecx+0x38],cl
  4025ac:	lea    edx,[ebx]
  4025ae:	mov    ah,0x9
  4025b0:	sbb    ecx,ebp
  4025b2:	shl    DWORD PTR [edi+0x607cf874],0x6f
  4025b9:	cmp    BYTE PTR [esi+edx*2+0x24763f8c],dh
  4025c0:	jmp    0x1592:0xcfa50afc
  4025c7:	clc    
  4025c8:	xchg   BYTE PTR [ebx+0x47a7830c],dh
  4025ce:	push   ebp
  4025cf:	sbb    DWORD PTR [edi-0xeaa3f0a],ecx
  4025d5:	mov    ah,0x22
  4025d7:	push   ecx
  4025d8:	adc    cl,dh
  4025da:	mov    bl,0x77
  4025dc:	adc    bl,BYTE PTR [ebx-0x73]
  4025df:	add    BYTE PTR [edi+0x37],al
  4025e2:	mov    ecx,0xa11805d7
  4025e7:	lods   al,BYTE PTR ds:[esi]
  4025e8:	scas   al,BYTE PTR es:[edi]
  4025e9:	cwde   
  4025ea:	cmc    
  4025eb:	fcomip st,st(3)
  4025ed:	jmp    0x47c2:0x7ac7b72d
  4025f4:	neg    BYTE PTR cs:[ecx]
  4025f7:	adc    ecx,DWORD PTR [eax+0x64df29af]
  4025fd:	test   ebp,esp
  4025ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402600:	xchg   edx,eax
  402601:	aam    0x8a
  402603:	mov    ch,0xd1
  402605:	pop    esi
  402606:	push   eax
  402607:	scas   al,BYTE PTR es:[edi]
  402608:	mov    al,ds:0xb1f60a67
  40260d:	inc    edx
  40260e:	bound  edi,QWORD PTR [edi+0x6]
  402611:	fwait
  402612:	or     DWORD PTR [edx-0x5f],ebp
  402615:	jno    0x4025b3
  402617:	adc    edx,DWORD PTR [edx+0x5ec9ec80]
  40261d:	bound  esi,QWORD PTR [esi-0x36]
  402620:	adc    BYTE PTR [ebx-0x62],ah
  402623:	or     al,0x6c
  402625:	loop   0x402688
  402627:	test   BYTE PTR es:[edi+0x38a145a6],dl
  40262e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262f:	outs   dx,DWORD PTR ds:[esi]
  402630:	mov    eax,ds:0x4962dbeb
  402635:	mov    gs,WORD PTR [edi]
  402637:	leave  
  402638:	popf   
  402639:	cs push ss
  40263b:	mov    ecx,0x5d443b32
  402640:	mov    ecx,0x362c769d
  402645:	sub    al,0x82
  402647:	(bad)  
  402648:	leave  
  402649:	xor    DWORD PTR [edi],esp
  40264b:	dec    ecx
  40264c:	sub    al,dh
  40264e:	mov    al,ds:0x245b7b7b
  402653:	add    eax,0x1cbd1ac2
  402658:	push   0xe4d7bb08
  40265d:	jne    0x4025fb
  40265f:	iret   
  402660:	nop
  402661:	repz sbb esp,eax
  402664:	jno    0x40260e
  402666:	fdivr  QWORD PTR [edi+0xc0c3e39]
  40266c:	dec    eax
  40266d:	sbb    DWORD PTR [ecx+0x9a82ec0],0x24f3983f
  402677:	(bad)  
  402678:	ror    BYTE PTR [ecx-0x4953a56],cl
  40267e:	fwait
  40267f:	jecxz  0x40265d
  402681:	call   0xaa9f:0x6f94c187
  402688:	add    eax,0x913d5ad3
  40268d:	ins    BYTE PTR es:[edi],dx
  40268e:	inc    edi
  40268f:	jmp    0xde90:0x86d3dbb9
  402696:	or     esi,edx
  402698:	jo     0x40268b
  40269a:	adc    al,0xf4
  40269c:	push   0xffffffb2
  40269e:	mov    ebp,0xbad8635
  4026a3:	ins    DWORD PTR es:[edi],dx
  4026a4:	mov    bl,0x94
  4026a6:	jp     0x40267d
  4026a8:	mov    ah,0xd5
  4026aa:	data16 cld 
  4026ac:	mov    cl,0x96
  4026ae:	and    DWORD PTR [ebx],edx
  4026b0:	test   eax,0x8d795a
  4026b5:	jns    0x4026b6
  4026b7:	sahf   
  4026b8:	test   al,0x2d
  4026ba:	test   al,0x8b
  4026bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026bd:	mov    eax,ds:0x36f6f3cf
  4026c2:	jo     0x40269c
  4026c4:	jb     0x4026dc
  4026c6:	push   0xb33d866b
  4026cb:	mov    ebx,0xc96d78a2
  4026d0:	or     DWORD PTR [eax],ecx
  4026d2:	mov    cs,WORD PTR [eax]
  4026d4:	mov    edi,0x649ccffa
  4026d9:	hlt    
  4026da:	mov    edx,0x809de6a5
  4026df:	push   eax
  4026e0:	ins    DWORD PTR es:[edi],dx
  4026e1:	imul   esi,DWORD PTR [ebx],0xffffffbb
  4026e4:	or     ebp,DWORD PTR [edx]
  4026e6:	retf   
  4026e7:	and    ah,BYTE PTR [ebx-0x47]
  4026ea:	inc    edx
  4026eb:	leave  
  4026ec:	inc    edi
  4026ed:	lock cdq 
  4026ef:	add    esp,DWORD PTR [edi+0x73]
  4026f2:	push   edi
  4026f3:	xchg   ebx,eax
  4026f4:	addr16 das 
  4026f6:	jmp    0x402713
  4026f8:	test   DWORD PTR [ebp+0x11ee1f5e],edi
  4026fe:	adc    ebp,esp
  402700:	imul   esp,ecx,0x21
  402703:	sub    eax,0xffffffd7
  402706:	imul   eax,DWORD PTR [esi-0x5f],0xffffffe5
  40270a:	(bad)  
  40270b:	(bad)  
  40270c:	test   eax,0x4c1f7611
  402711:	mov    edx,0x720603a8
  402716:	sahf   
  402717:	sub    BYTE PTR [edi],bh
  402719:	sbb    BYTE PTR fs:[edi-0x4],bh
  40271d:	nop
  40271e:	fisttp QWORD PTR [edx+0x67efd4b9]
  402724:	xchg   ebp,eax
  402725:	jnp    0x4026eb
  402727:	mov    ebx,cs
  402729:	push   0x12
  40272b:	mov    edi,0x1da63973
  402730:	add    al,0x34
  402732:	mov    eax,ds:0x8e167dcf
  402737:	cmp    DWORD PTR [ecx+ebp*4],ebp
  40273a:	xchg   esi,eax
  40273b:	or     al,0x26
  40273d:	inc    eax
  40273e:	ds xor eax,0x94013b1b
  402744:	mov    bh,0xcc
  402746:	mov    cl,0x4b
  402748:	and    eax,0x8941bef2
  40274d:	push   ebp
  40274e:	xchg   edi,eax
  40274f:	add    cl,dl
  402751:	daa    
  402752:	fwait
  402753:	jecxz  0x402751
  402755:	fs push ds
  402757:	sbb    al,0xbb
  402759:	outs   dx,BYTE PTR ds:[esi]
  40275a:	push   cs
  40275b:	push   ss
  40275c:	test   eax,0x26d6912
  402761:	mov    eax,0x594ee464
  402766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402767:	dec    eax
  402768:	mov    dh,0xbc
  40276a:	mov    cl,0x4f
  40276c:	push   es
  40276d:	inc    ecx
  40276e:	dec    esp
  40276f:	or     BYTE PTR fs:[ecx],ch
  402772:	xlat   BYTE PTR ds:[ebx]
  402773:	daa    
  402774:	cmp    DWORD PTR [edx-0x3f],edx
  402777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402778:	add    al,0xc8
  40277a:	cvttps2pi mm1,QWORD PTR [esi]
  40277d:	in     eax,dx
  40277e:	(bad)  
  40277f:	dec    esp
  402780:	sbb    DWORD PTR [edx-0x55],ebp
  402783:	pop    eax
  402784:	cmp    al,0x76
  402786:	mov    bh,0x98
  402788:	dec    esi
  402789:	sbb    edx,DWORD PTR [ebx]
  40278b:	sbb    ebp,esi
  40278d:	add    eax,0x42bda800
  402792:	pop    ecx
  402793:	ret    0xae26
  402796:	(bad)  
  402797:	retf   
  402798:	cmc    
  402799:	add    eax,0xc060ba2f
  40279e:	xchg   esi,eax
  40279f:	loop   0x402762
  4027a1:	stos   DWORD PTR es:[edi],eax
  4027a2:	div    BYTE PTR [eax+ecx*8+0x7227f2ce]
  4027a9:	mov    bl,0x10
  4027ab:	or     DWORD PTR [ecx],eax
  4027ad:	addr16 jmp 0x40281a
  4027b0:	sbb    eax,0x48249783
  4027b5:	les    ebp,FWORD PTR [edx+0x240b2fdc]
  4027bb:	adc    al,0x18
  4027bd:	sbb    ebp,edx
  4027bf:	dec    ebp
  4027c0:	jp     0x402764
  4027c2:	aas    
  4027c3:	push   0xffffffb7
  4027c5:	cmp    bl,BYTE PTR [edx+0x472b8a93]
  4027cb:	in     eax,dx
  4027cc:	add    eax,0x6b49038c
  4027d1:	das    
  4027d2:	cld    
  4027d3:	jmp    0x8e1b8ac3
  4027d8:	test   BYTE PTR [ecx-0x142c8900],0x80
  4027df:	inc    edx
  4027e0:	sahf   
  4027e1:	jb     0x402829
  4027e3:	ret    0xae4e
  4027e6:	test   al,0xae
  4027e8:	dec    esp
  4027e9:	sahf   
  4027ea:	jp     0x4027fc
  4027ec:	mov    DWORD PTR [ebp-0x6c],0x3219
  4027f3:	mov    DWORD PTR [ebp-0x70],0x231c
  4027fa:	cmp    DWORD PTR ds:0x4229aa,0x0
  402801:	mov    DWORD PTR ds:0x422962,0x2a7e
  40280b:	mov    DWORD PTR ds:0x42293e,0x75fd
  402815:	jmp    0x40286f
  40281a:	not    DWORD PTR ds:0x4228a2
  402820:	jg     0x40285d
  402826:	push   0x445a
  40282b:	push   DWORD PTR [ebp-0x24]
  40282e:	push   0x4228fe
  402833:	push   0x30cc
  402838:	push   0x5f1f
  40283d:	call   DWORD PTR ds:0x42a288
  402843:	xor    DWORD PTR ds:0x4228da,0x678e
  40284d:	adc    DWORD PTR ds:0x4228a2,0x5868
  402857:	xor    DWORD PTR ds:0x42296e,ecx
  40285d:	or     DWORD PTR ds:0x4228ba,edi
  402863:	or     DWORD PTR ds:0x42299e,ecx
  402869:	sbb    DWORD PTR ds:0x422966,ecx
  40286f:	mov    DWORD PTR [ebp-0x6c],0x1337
  402876:	mov    eax,ds:0x42294a
  40287b:	add    eax,DWORD PTR ds:0x42291e
  402881:	mov    ds:0x42294a,eax
  402886:	mov    DWORD PTR [ebp-0x70],0x7593
  40288d:	sbb    DWORD PTR ds:0x422906,edx
  402893:	mov    DWORD PTR [ebp-0x6c],0x11b8
  40289a:	mov    DWORD PTR [ebp-0x70],0x3b72
  4028a1:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4028a8:	jmp    0x402e32
  4028ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	in     eax,0x5e
  4028b0:	ficom  DWORD PTR [eax+eiz*2]
  4028b3:	adc    ch,BYTE PTR [ecx-0x57e79dc5]
  4028b9:	imul   esi,DWORD PTR fs:[edx+esi*2-0x32],0xffffffe5
  4028bf:	push   ss
  4028c0:	push   ss
  4028c1:	cmp    eax,0x7a161604
  4028c6:	fs jo  0x4028af
  4028c9:	cwde   
  4028ca:	xchg   BYTE PTR [esi+0x7927fdc8],ah
  4028d0:	neg    DWORD PTR [esi+ecx*4-0x244d2f42]
  4028d7:	adc    eax,0xfe9cbee6
  4028dc:	int3   
  4028dd:	dec    ebx
  4028de:	add    eax,0x265fffc0
  4028e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028e4:	test   DWORD PTR [esi-0x1b24f470],esp
  4028ea:	and    DWORD PTR [ebp-0xb],edi
  4028ed:	loope  0x402921
  4028ef:	jnp    0x402967
  4028f1:	push   cs
  4028f2:	mov    eax,ds:0xbb488b2c
  4028f7:	shl    DWORD PTR [edi-0x16c1c56a],1
  4028fd:	fisub  DWORD PTR [ecx-0x19c474d1]
  402903:	cmp    BYTE PTR [ebx-0x60aa5b19],cl
  402909:	adc    ah,BYTE PTR [ebp+0x40]
  40290c:	adc    DWORD PTR [ecx],ebx
  40290e:	loop   0x4028c4
  402910:	inc    ebx
  402911:	mov    ?,WORD PTR [eax+edx*2]
  402914:	in     eax,0xbe
  402916:	retf   0x6d69
  402919:	xlat   BYTE PTR ds:[ebx]
  40291a:	lds    ecx,FWORD PTR [ebx]
  40291c:	push   eax
  40291d:	jae    0x402988
  40291f:	jo     0x402900
  402921:	cmp    BYTE PTR [esp+esi*4],bh
  402924:	(bad)  
  402926:	adc    DWORD PTR cs:[eax+0x35464215],esp
  40292d:	jmp    0x4028d0
  40292f:	into   
  402930:	xchg   edx,eax
  402931:	outs   dx,DWORD PTR ds:[esi]
  402932:	and    dh,BYTE PTR [eax-0x1725c38e]
  402938:	iret   
  402939:	cwde   
  40293a:	sub    al,BYTE PTR [edx]
  40293c:	cmp    edi,DWORD PTR [esi+ebx*1]
  40293f:	popa   
  402940:	call   0x9c4f:0xdf3e7125
  402947:	mov    WORD PTR [ecx+ebp*1-0x6f],?
  40294b:	xchg   BYTE PTR [edi],ch
  40294d:	or     al,0x22
  40294f:	jg     0x402925
  402951:	test   eax,0x5ecebc19
  402956:	js     0x40298a
  402958:	clc    
  402959:	jge    0x402919
  40295b:	retf   
  40295c:	das    
  40295d:	popf   
  40295e:	jmp    0x27c5dae
  402963:	mov    ds,WORD PTR [edx+0x1e04fc2e]
  402969:	mov    ds:0x6a705e3f,al
  40296e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40296f:	jmp    0x2dbc:0xef777107
  402976:	je     0x4029eb
  402978:	push   cs
  402979:	inc    eax
  40297a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40297b:	sbb    al,0xb9
  40297d:	mov    ebx,0x1901d1e
  402982:	push   0xfb9cbbbc
  402987:	cmp    ebp,DWORD PTR [eax]
  402989:	pushf  
  40298a:	lahf   
  40298b:	jecxz  0x4029fc
  40298d:	icebp  
  40298e:	adc    DWORD PTR [ecx],edi
  402990:	mov    ch,0xe5
  402992:	mov    ch,0x6e
  402994:	or     edx,DWORD PTR [ebp+0x5f72f172]
  40299a:	push   es
  40299b:	dec    ebp
  40299c:	pop    ss
  40299d:	loope  0x402a19
  40299f:	xor    ecx,ecx
  4029a1:	cmc    
  4029a2:	pop    ss
  4029a3:	and    BYTE PTR [edi-0x3],cl
  4029a6:	lods   eax,DWORD PTR ds:[esi]
  4029a7:	popf   
  4029a8:	push   edi
  4029a9:	cld    
  4029aa:	xchg   esp,eax
  4029ab:	cli    
  4029ac:	loope  0x4029ae
  4029ae:	stos   BYTE PTR es:[edi],al
  4029af:	int    0x70
  4029b1:	shl    DWORD PTR [ecx-0x28],1
  4029b4:	enter  0xf33c,0x2d
  4029b8:	ins    BYTE PTR es:[edi],dx
  4029b9:	pop    es
  4029ba:	frstor [edi-0x2928dbeb]
  4029c0:	shl    al,cl
  4029c2:	inc    esp
  4029c3:	lods   eax,DWORD PTR ds:[esi]
  4029c4:	ret    0x536d
  4029c7:	loopne 0x40297c
  4029c9:	adc    BYTE PTR [edi],bl
  4029cb:	and    DWORD PTR [edi],esp
  4029cd:	ja     0x402a30
  4029cf:	xor    eax,0x5a5ffd33
  4029d4:	outs   dx,DWORD PTR ds:[esi]
  4029d5:	push   ebx
  4029d6:	cmp    al,0x8b
  4029d8:	mov    edx,0x84532645
  4029dd:	sti    
  4029de:	loope  0x4029e9
  4029e0:	bound  esp,QWORD PTR [edx+0x3b7b7389]
  4029e6:	ficom  WORD PTR [ecx]
  4029e8:	mov    dh,0x87
  4029ea:	inc    eax
  4029eb:	(bad)  
  4029ec:	stc    
  4029ed:	loopne 0x402a24
  4029ef:	push   ebp
  4029f0:	mov    eax,0xdf3ed6a
  4029f5:	dec    edi
  4029f6:	sub    bh,dh
  4029f8:	je     0x402a4e
  4029fa:	popa   
  4029fb:	dec    esi
  4029fc:	in     al,0xe5
  4029fe:	mov    dl,0xbe
  402a00:	mov    edx,0x6e51ac0b
  402a05:	xchg   DWORD PTR [esi],edx
  402a07:	lods   eax,DWORD PTR ds:[esi]
  402a08:	push   edx
  402a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0a:	lds    edi,FWORD PTR [ebp-0x71]
  402a0d:	imul   esi,DWORD PTR [eax+0x64],0x524f73
  402a14:	jbe    0x4029e0
  402a16:	setle  BYTE PTR [ecx-0x667cbebb]
  402a1d:	lea    edx,[edi-0x1fe71a94]
  402a23:	adc    ebp,DWORD PTR [ebx-0x47d522f0]
  402a29:	sub    dh,al
  402a2b:	sub    al,0x6b
  402a2d:	std    
  402a2e:	lock rcr BYTE PTR [edx-0x39],1
  402a32:	test   al,0x59
  402a34:	cmc    
  402a35:	lods   al,BYTE PTR ds:[esi]
  402a36:	bound  eax,QWORD PTR [ecx-0x3e306d2c]
  402a3c:	xchg   edi,eax
  402a3d:	repnz aaa 
  402a3f:	inc    ebp
  402a40:	mov    edi,0x78f83656
  402a45:	fistp  WORD PTR [ebx]
  402a47:	push   esi
  402a48:	push   0x65
  402a4a:	(bad)  
  402a4c:	lea    edx,[edx]
  402a4e:	xor    bh,BYTE PTR [eax]
  402a50:	sub    ebp,edi
  402a52:	dec    esi
  402a53:	push   es
  402a54:	into   
  402a55:	adc    eax,0x7b6db68d
  402a5a:	iret   
  402a5b:	push   0x0
  402a5d:	and    ecx,DWORD PTR [edx-0x80]
  402a60:	mov    ch,0xaf
  402a62:	cmc    
  402a63:	ins    DWORD PTR es:[edi],dx
  402a64:	adc    al,0x94
  402a66:	repz repz mov esi,0x1a7911e6
  402a6d:	aad    0xe4
  402a6f:	lds    ebp,FWORD PTR cs:[eax-0x10]
  402a73:	ret    
  402a74:	fcom   DWORD PTR [ebx]
  402a76:	test   al,0x28
  402a78:	lock mov ah,0xb
  402a7b:	push   es
  402a7c:	jmp    0x402a36
  402a7e:	scas   eax,DWORD PTR es:[edi]
  402a7f:	mov    cl,0xe6
  402a81:	(bad)  
  402a84:	fcomp  QWORD PTR [ebp+ebx*2+0x5ef5a6cd]
  402a8b:	xor    edx,DWORD PTR [edx+0x1c]
  402a8e:	loope  0x402a86
  402a90:	push   edi
  402a91:	sbb    al,0x53
  402a93:	cli    
  402a94:	nop
  402a95:	cs dec ebx
  402a97:	inc    esi
  402a98:	lock pop ds
  402a9a:	ds pushf 
  402a9c:	in     eax,dx
  402a9d:	cmp    ecx,DWORD PTR [ecx-0x3a15b2ae]
  402aa3:	add    al,0xe3
  402aa5:	and    ah,ah
  402aa7:	test   edi,esp
  402aa9:	sub    al,0x11
  402aab:	lock (bad) 
  402aad:	mov    ecx,DWORD PTR [ebx+0x71ec78e1]
  402ab3:	sbb    dl,BYTE PTR ss:[eax+0x73]
  402ab7:	imul   ebp,DWORD PTR [esi],0x8373915
  402abd:	or     bh,bh
  402abf:	dec    ebp
  402ac0:	arpl   WORD PTR [ebp+0x18],bp
  402ac3:	shl    BYTE PTR [eax],cl
  402ac5:	pop    esp
  402ac6:	sbb    BYTE PTR [edi+ebx*8+0x49],0xc
  402acb:	cdq    
  402acc:	pop    ds
  402acd:	enter  0x3f66,0x70
  402ad1:	jno    0x402a76
  402ad3:	lock mov esp,0x1d10574c
  402ad9:	and    DWORD PTR [eax],0x54c20b0
  402adf:	jmp    0x8e78893a
  402ae4:	int3   
  402ae5:	rcl    ch,1
  402ae7:	inc    edi
  402ae8:	loop   0x402a7a
  402aea:	rol    DWORD PTR [ebx-0x5f],1
  402aed:	std    
  402aee:	jg     0x402a76
  402af0:	dec    edi
  402af1:	lods   eax,DWORD PTR ds:[esi]
  402af2:	cld    
  402af3:	shl    al,0x4f
  402af6:	jmp    0xa8517bc0
  402afb:	pop    eax
  402afc:	retf   0x1278
  402aff:	mov    eax,0xefa4aab2
  402b04:	scas   eax,DWORD PTR es:[edi]
  402b05:	fldcw  WORD PTR [edi-0x30]
  402b08:	mov    DWORD PTR [ecx],ecx
  402b0a:	enter  0x8f92,0xd8
  402b0e:	jmp    0x402b41
  402b10:	mov    al,0xd0
  402b12:	stc    
  402b13:	or     ebp,DWORD PTR [edx]
  402b15:	pushf  
  402b16:	pop    edi
  402b17:	iret   
  402b18:	sbb    al,0x63
  402b1a:	push   bp
  402b1c:	adc    DWORD PTR [eax],edx
  402b1e:	inc    ecx
  402b1f:	dec    edx
  402b20:	bound  edx,QWORD PTR [ecx]
  402b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b23:	ror    al,cl
  402b25:	int    0xdc
  402b27:	imul   ecx
  402b29:	cmp    al,0x78
  402b2b:	loop   0x402b3f
  402b2d:	push   esi
  402b2e:	push   ecx
  402b2f:	sub    BYTE PTR [edi],bl
  402b31:	das    
  402b32:	loopne 0x402ac8
  402b34:	hlt    
  402b35:	daa    
  402b36:	repnz rcl ecx,cl
  402b39:	inc    edi
  402b3a:	mov    al,0xdb
  402b3c:	push   ss
  402b3d:	jg     0x402b36
  402b3f:	ins    BYTE PTR es:[edi],dx
  402b40:	sbb    ch,BYTE PTR ds:0xb24bb53a
  402b46:	arpl   WORD PTR [ebp-0x28],di
  402b49:	push   ds
  402b4a:	into   
  402b4b:	adc    eax,0xf3bbb734
  402b50:	xchg   esp,eax
  402b51:	add    DWORD PTR [esi-0x39],ebx
  402b54:	into   
  402b55:	jmp    0x4164:0x391a027e
  402b5c:	lea    esi,[edi]
  402b5e:	sbb    al,0xdc
  402b60:	inc    edx
  402b61:	and    edx,DWORD PTR ds:0x8910a870
  402b67:	push   ss
  402b68:	nop
  402b69:	outs   dx,BYTE PTR ds:[esi]
  402b6a:	stc    
  402b6b:	aad    0x63
  402b6d:	jg     0x402b84
  402b6f:	repnz dec edi
  402b71:	dec    ebp
  402b72:	daa    
  402b73:	js     0x402b4b
  402b75:	adc    al,0x8
  402b77:	ficomp DWORD PTR [ebx+0x19]
  402b7a:	sti    
  402b7b:	stc    
  402b7c:	jbe    0x402b38
  402b7e:	icebp  
  402b7f:	rcr    DWORD PTR [ecx+0x1dd4cb2d],cl
  402b85:	mov    ds:0xff988951,al
  402b8a:	and    ch,BYTE PTR [edx]
  402b8c:	pop    ebx
  402b8d:	xchg   ebp,eax
  402b8e:	scas   eax,DWORD PTR es:[edi]
  402b8f:	mov    bh,0xf8
  402b91:	nop
  402b92:	inc    ebx
  402b93:	out    dx,al
  402b94:	fs and eax,0x69c43a27
  402b9a:	in     al,dx
  402b9b:	or     ebx,DWORD PTR [ebp-0x13]
  402b9e:	adc    edi,DWORD PTR [ebx+0x1f85710]
  402ba4:	ins    DWORD PTR es:[edi],dx
  402ba5:	bound  edi,QWORD PTR [ebp+0x1cf8a788]
  402bab:	rcl    ah,0xc4
  402bae:	adc    ebp,DWORD PTR [edi]
  402bb0:	xor    ah,ch
  402bb2:	jbe    0x402be8
  402bb4:	cmp    BYTE PTR [eax],cl
  402bb6:	jmp    0x20ff:0x8f99e2d
  402bbd:	das    
  402bbe:	sete   dh
  402bc1:	fsubr  st(1),st
  402bc3:	pop    eax
  402bc4:	mov    cl,0x6f
  402bc6:	scas   eax,DWORD PTR es:[edi]
  402bc7:	xchg   esp,eax
  402bc8:	nop
  402bc9:	jae    0x402c39
  402bcb:	sbb    esp,edx
  402bcd:	adc    ebp,0x2c6e8442
  402bd3:	mov    al,ds:0x8218887e
  402bd8:	cmp    ebx,DWORD PTR ds:0xf061d9ef
  402bde:	cmp    bh,dh
  402be0:	test   DWORD PTR [ecx],ebx
  402be2:	xor    cl,BYTE PTR ds:0xe8c6618b
  402be8:	imul   BYTE PTR [edi+0x2e6d165c]
  402bee:	sbb    eax,0xe19d9c6a
  402bf3:	or     DWORD PTR [ebx-0x1b],eax
  402bf6:	dec    eax
  402bf7:	retf   0x2b69
  402bfa:	call   0x17f6:0x569a35f5
  402c01:	and    DWORD PTR [ecx],esp
  402c03:	pop    esp
  402c04:	sub    esp,DWORD PTR [ebx]
  402c06:	iret   
  402c07:	sbb    DWORD PTR [eax],ebx
  402c09:	cld    
  402c0a:	into   
  402c0b:	pop    ds
  402c0c:	call   0x6f84c463
  402c11:	add    BYTE PTR [edi+0xc],dl
  402c14:	adc    eax,0x91cfd560
  402c19:	dec    eax
  402c1a:	pop    ss
  402c1b:	xchg   edi,eax
  402c1c:	mov    al,0x52
  402c1e:	mov    al,ds:0xfdd46e2d
  402c23:	xchg   edi,eax
  402c24:	pop    ss
  402c25:	sbb    DWORD PTR [edi-0x51365935],ecx
  402c2b:	pop    esi
  402c2c:	(bad)  
  402c2d:	aad    0xa7
  402c2f:	cmp    DWORD PTR [ecx-0x4d937cb9],esp
  402c35:	leave  
  402c36:	into   
  402c37:	pop    esp
  402c38:	sti    
  402c39:	pop    ebx
  402c3a:	lds    ebx,FWORD PTR [ecx]
  402c3c:	in     al,0x55
  402c3e:	cld    
  402c3f:	xor    DWORD PTR [ebp-0x29a32245],ebx
  402c45:	cmp    eax,0x55ad71b5
  402c4a:	pop    edx
  402c4b:	adc    edx,eax
  402c4d:	push   0xffffffcc
  402c4f:	test   eax,0xe6e5858a
  402c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c55:	icebp  
  402c56:	inc    ebx
  402c57:	lea    ebp,[eax]
  402c59:	jge    0x402ca9
  402c5b:	rcl    DWORD PTR [edi-0x78],cl
  402c5e:	and    dh,BYTE PTR [edi+0x2b]
  402c61:	dec    edi
  402c62:	add    bh,BYTE PTR ds:0x969e86ac
  402c68:	sbb    DWORD PTR [eax],esi
  402c6a:	outs   dx,DWORD PTR ds:[esi]
  402c6b:	(bad)  
  402c6c:	fnstcw WORD PTR [edx-0x5caefea0]
  402c72:	jecxz  0x402c7f
  402c74:	mov    edx,0x2ed1d7e8
  402c79:	int    0x52
  402c7b:	xchg   edx,eax
  402c7c:	mov    BYTE PTR [edx+edi*1],al
  402c7f:	sub    al,0x16
  402c81:	sub    DWORD PTR [ebp-0x13],edx
  402c84:	addr16 (bad) 
  402c86:	retf   0xeae0
  402c89:	lahf   
  402c8a:	mov    cl,0xce
  402c8c:	out    0xd6,al
  402c8e:	ds push 0xc72b2d19
  402c94:	mov    ds:0xf5096fa2,al
  402c99:	jo     0x402c71
  402c9b:	add    ecx,DWORD PTR [ebx+ecx*4+0x45]
  402c9f:	push   ecx
  402ca0:	punpcklbw mm7,mm7
  402ca3:	aaa    
  402ca4:	jmp    0x402ca3
  402ca6:	jg     0x402cd9
  402ca8:	sbb    dl,BYTE PTR [esi-0x78b8e470]
  402cae:	out    dx,al
  402caf:	imul   edx,edx,0x96d1353b
  402cb5:	xchg   edx,eax
  402cb6:	adc    edx,0x55
  402cb9:	fld    QWORD PTR es:[ebx]
  402cbc:	dec    edx
  402cbd:	add    ah,BYTE PTR [edi-0x79b72748]
  402cc3:	sbb    BYTE PTR [edx+0x45],cl
  402cc6:	outs   dx,BYTE PTR ds:[esi]
  402cc7:	xchg   ecx,eax
  402cc8:	in     al,dx
  402cc9:	daa    
  402cca:	mov    bl,0x8b
  402ccc:	mov    BYTE PTR [esi+0x7d42f1b],bh
  402cd2:	pop    ss
  402cd3:	es mov esi,0x87a6fbc0
  402cd9:	mov    eax,ds:0xbd7a3f64
  402cde:	adc    dh,BYTE PTR [ebx]
  402ce0:	pushf  
  402ce1:	daa    
  402ce2:	push   ds
  402ce3:	aad    0xbc
  402ce5:	cmp    BYTE PTR [esi+0x5c],dh
  402ce8:	rol    BYTE PTR [eax],1
  402cea:	adc    esi,DWORD PTR [ecx]
  402cec:	lahf   
  402ced:	mov    bl,0x12
  402cef:	outs   dx,BYTE PTR ds:[esi]
  402cf0:	cwde   
  402cf1:	outs   dx,DWORD PTR ds:[esi]
  402cf2:	call   0xfa8d:0x663cddc2
  402cf9:	retf   
  402cfa:	stos   DWORD PTR es:[edi],eax
  402cfb:	xlat   BYTE PTR ds:[ebx]
  402cfc:	mul    ebx
  402cfe:	jl     0x402ca5
  402d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d01:	imul   edx,ebp,0x1f84245c
  402d07:	add    esi,DWORD PTR [eax+0x1a5b6656]
  402d0d:	jno    0x402cff
  402d0f:	mov    ebp,0xc716238d
  402d14:	pop    ecx
  402d15:	adc    ah,0x89
  402d18:	mov    ecx,DWORD PTR [ebx+esi*4]
  402d1b:	fstp   DWORD PTR [eax]
  402d1d:	sbb    eax,0xb281d523
  402d22:	cmp    al,0xe9
  402d24:	stos   BYTE PTR es:[edi],al
  402d25:	hlt    
  402d26:	cmp    BYTE PTR [edx],dh
  402d28:	shl    DWORD PTR [ecx-0x5ace22a6],cl
  402d2e:	hlt    
  402d2f:	cmc    
  402d30:	imul   esi,eax,0x78690acb
  402d36:	jbe    0x402d05
  402d38:	add    BYTE PTR [esi+edx*8+0x18],al
  402d3c:	sbb    eax,0x360a2858
  402d41:	outs   dx,BYTE PTR ds:[esi]
  402d42:	(bad)  
  402d43:	(bad)  
  402d45:	into   
  402d46:	inc    esi
  402d47:	aas    
  402d48:	imul   DWORD PTR [ecx-0x26942b51]
  402d4e:	jne    0x402db3
  402d50:	pop    ebp
  402d51:	mov    edx,0x3d9650b7
  402d56:	add    DWORD PTR [ebp-0x6a],edx
  402d59:	out    0xb,eax
  402d5b:	pop    es
  402d5c:	pop    ss
  402d5d:	repnz rol ecx,1
  402d60:	aaa    
  402d61:	sahf   
  402d62:	dec    edx
  402d63:	test   BYTE PTR [edi+0x13],cl
  402d66:	push   edi
  402d67:	push   ss
  402d68:	sub    eax,0xccd34fbd
  402d6d:	imul   esi,DWORD PTR [ebx+edx*4],0x3f
  402d71:	rcl    DWORD PTR [esi+0x48f0340d],cl
  402d77:	sbb    esp,DWORD PTR [edx+0x2950db1a]
  402d7d:	sbb    DWORD PTR [ebx-0x2d3a51d5],0xffffffa1
  402d84:	push   eax
  402d85:	mov    DWORD PTR [edx-0x384ab5cd],0x6d766d26
  402d8f:	mov    ds,edx
  402d91:	outs   dx,BYTE PTR ds:[esi]
  402d92:	inc    ebx
  402d93:	mov    dh,0xdb
  402d95:	dec    esp
  402d96:	adc    eax,0x342ea125
  402d9b:	scas   al,BYTE PTR es:[edi]
  402d9c:	lahf   
  402d9d:	mov    ebp,0xd4774824
  402da2:	push   ebp
  402da3:	sub    dl,dl
  402da5:	inc    edi
  402da6:	hlt    
  402da7:	(bad)  [edi+0x45cf3998]
  402dad:	mov    ds:0x9bba51b5,eax
  402db2:	std    
  402db3:	fidivr DWORD PTR [ebx+0x7c]
  402db6:	sub    eax,0xc689a6df
  402dbb:	lods   al,BYTE PTR ds:[esi]
  402dbc:	mov    ds:0x52089656,al
  402dc1:	dec    ecx
  402dc2:	ds jle 0x402d70
  402dc5:	add    DWORD PTR [edi],eax
  402dc7:	fsubr  QWORD PTR [ebp+0x1197245d]
  402dcd:	pop    ss
  402dce:	or     bl,dl
  402dd0:	hlt    
  402dd1:	sbb    al,BYTE PTR [ebx+0x19]
  402dd4:	repz dec ebx
  402dd6:	sahf   
  402dd7:	pop    ebx
  402dd8:	lea    ebp,[ebp+0x3926a8e5]
  402dde:	mov    ecx,0xbad7cc05
  402de3:	fldcw  WORD PTR ds:0x3bbe0e0d
  402de9:	fsub   st(1),st
  402deb:	or     al,0x45
  402ded:	adc    edx,DWORD PTR [esi-0x49]
  402df0:	(bad)  
  402df1:	repz popa 
  402df3:	int    0xc5
  402df5:	xchg   edx,eax
  402df6:	and    eax,0xd42c8134
  402dfb:	adc    edx,DWORD PTR [ecx]
  402dfd:	cmp    DWORD PTR [ebx+0x19f2f4c3],ebp
  402e03:	push   edx
  402e04:	adc    eax,esp
  402e06:	fsubrp st(4),st
  402e08:	sub    eax,0xecc6ed8f
  402e0d:	int3   
  402e0e:	inc    edi
  402e0f:	ret    
  402e10:	mov    ds:0x88c5a777,eax
  402e15:	in     al,dx
  402e16:	sti    
  402e17:	push   0xfffffffc
  402e19:	lods   al,BYTE PTR ds:[esi]
  402e1a:	and    al,0x34
  402e1c:	xlat   BYTE PTR ds:[ebx]
  402e1d:	adc    DWORD PTR [bx+di-0x6ba0],edx
  402e22:	hlt    
  402e23:	push   ebx
  402e24:	in     eax,0xf9
  402e26:	push   ebp
  402e27:	(bad)  
  402e28:	pop    esp
  402e29:	push   cs
  402e2a:	inc    esi
  402e2b:	and    ebx,ebp
  402e2d:	ins    DWORD PTR es:[edi],dx
  402e2e:	pusha  
  402e2f:	loop   0x402e67
  402e31:	test   edi,0x1b459845
  402e37:	add    BYTE PTR [eax],al
  402e39:	mov    DWORD PTR ds:0x42299e,0x718
  402e43:	mov    DWORD PTR [ebp-0x64],0x767d
  402e4a:	cmp    DWORD PTR ds:0x42295a,0x0
  402e51:	mov    DWORD PTR ds:0x4229ba,0x78de
  402e5b:	mov    DWORD PTR ds:0x422976,0x1706
  402e65:	jmp    0x402ecb
  402e6a:	mov    DWORD PTR ds:0x4228ca,0x464
  402e74:	not    eax
  402e76:	jne    0x402ea1
  402e7c:	push   0x8a0f
  402e81:	call   DWORD PTR ds:0x42a28c
  402e87:	add    DWORD PTR ds:0x422982,ecx
  402e8d:	add    DWORD PTR ds:0x422912,0x4228d6
  402e97:	add    DWORD PTR ds:0x42291a,0x3216
  402ea1:	sub    DWORD PTR ds:0x4229be,0x591
  402eab:	adc    DWORD PTR ds:0x4228f2,0x4409
  402eb5:	add    DWORD PTR ds:0x4228fe,ebx
  402ebb:	add    DWORD PTR ds:0x4229ae,0x46bd
  402ec5:	sub    DWORD PTR ds:0x422936,ecx
  402ecb:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402ed2:	mov    DWORD PTR ds:0x42294a,0xbf3
  402edc:	mov    DWORD PTR [ebp-0x5c],0x0
  402ee3:	mov    DWORD PTR [ebp-0x34],0x599d
  402eea:	add    DWORD PTR ds:0x4228fa,edi
  402ef0:	mov    DWORD PTR [ebp-0x2c],0x165d
  402ef7:	movzx  eax,WORD PTR ds:0x4228a2
  402efe:	and    DWORD PTR ds:0x4229ae,eax
  402f04:	mov    DWORD PTR [ebp-0x1c],0xc51
  402f0b:	xor    eax,0x7ef6
  402f10:	mov    DWORD PTR [ebp-0x44],0x3f55
  402f17:	inc    eax
  402f18:	mov    DWORD PTR [ebp-0x44],0x1
  402f1f:	mov    DWORD PTR [ebp-0x44],0x42e8
  402f26:	cmp    DWORD PTR ds:0x4228a6,0x0
  402f2d:	mov    DWORD PTR ds:0x422926,ebx
  402f33:	mov    DWORD PTR ds:0x42296e,0x475b
  402f3d:	jmp    0x403081
  402f42:	mov    DWORD PTR ds:0x4228fa,0x2105
  402f4c:	not    eax
  402f4e:	jne    0x402f83
  402f54:	push   0x132b
  402f59:	push   DWORD PTR [ebp-0x14]
  402f5c:	push   DWORD PTR [ebp-0x10]
  402f5f:	call   DWORD PTR ds:0x42a290
  402f65:	xor    DWORD PTR ds:0x422932,0x9bb
  402f6f:	or     DWORD PTR ds:0x422996,0x4228ea
  402f79:	and    DWORD PTR ds:0x422932,0x4229ce
  402f83:	and    DWORD PTR ds:0x4229ce,edi
  402f89:	add    DWORD PTR ds:0x4228e6,0x4228da
  402f93:	dec    DWORD PTR ds:0x4229b2
  402f99:	xor    DWORD PTR ds:0x4228ee,ecx
  402f9f:	cmp    DWORD PTR ds:0x422996,0x0
  402fa6:	mov    DWORD PTR ds:0x4228e6,0xf94
  402fb0:	mov    DWORD PTR ds:0x4228de,0x6d8f
  402fba:	mov    DWORD PTR ds:0x42291e,0x78af
  402fc4:	jmp    0x403081
  402fc9:	mov    DWORD PTR ds:0x42290e,ebx
  402fcf:	mov    DWORD PTR ds:0x4228fe,0x3885
  402fd9:	jge    0x402ffe
  402fdf:	push   0x3dec
  402fe4:	call   DWORD PTR ds:0x42a044
  402fea:	add    DWORD PTR ds:0x42298e,0x4228ba
  402ff4:	sub    DWORD PTR ds:0x422916,0x422996
  402ffe:	add    DWORD PTR ds:0x42294e,0x308f
  403008:	sub    DWORD PTR ds:0x42299a,ebx
  40300e:	or     DWORD PTR ds:0x4228e2,0x4229ce
  403018:	and    DWORD PTR ds:0x422996,0x422972
  403022:	cmp    DWORD PTR ds:0x4228be,0x0
  403029:	mov    DWORD PTR ds:0x422896,0x7e8b
  403033:	mov    DWORD PTR ds:0x4228d2,0x6e2b
  40303d:	jmp    0x403081
  403042:	mov    eax,ds:0x42294e
  403047:	mov    DWORD PTR ds:0x422912,0x27c8
  403051:	jl     0x403071
  403057:	call   DWORD PTR ds:0x42a294
  40305d:	xor    DWORD PTR ds:0x4228f6,0x34a0
  403067:	and    DWORD PTR ds:0x42299e,0x4228c2
  403071:	or     DWORD PTR ds:0x4229b2,0x422916
  40307b:	xor    DWORD PTR ds:0x422892,ecx
  403081:	mov    eax,DWORD PTR [ebp-0x60]
  403084:	shl    ecx,0x1e
  403087:	mov    ecx,DWORD PTR [ebp-0x5c]
  40308a:	and    DWORD PTR ds:0x422912,0x10bb
  403094:	push   ecx
  403095:	inc    DWORD PTR ds:0x42298e
  40309b:	push   eax
  40309c:	push   0xddf
  4030a1:	push   0x2d0f
  4030a6:	add    DWORD PTR ds:0x4228d6,0x562b
  4030b0:	call   0x421ad6
  4030b5:	mov    ecx,DWORD PTR [ebp-0x68]
  4030b8:	add    DWORD PTR ds:0x4228e6,0x12e8
  4030c2:	mov    edx,DWORD PTR [ebp-0x64]
  4030c5:	sub    DWORD PTR ds:0x42290e,0x5673
  4030cf:	xor    eax,ecx
  4030d1:	not    ecx
  4030d3:	mov    ecx,DWORD PTR [ebp-0x70]
  4030d6:	add    edx,0x725d
  4030dc:	mov    edx,DWORD PTR [ebp-0x6c]
  4030df:	sub    edx,DWORD PTR ds:0x4228f2
  4030e5:	sub    eax,ecx
  4030e7:	cmp    DWORD PTR ds:0x4228c2,0x0
  4030ee:	mov    DWORD PTR ds:0x42295a,0x2680
  4030f8:	mov    edx,0xd63
  4030fd:	movzx  edx,BYTE PTR ds:0x4229ce
  403104:	mov    DWORD PTR ds:0x4228b6,ecx
  40310a:	jmp    0x403179
  40310f:	mov    DWORD PTR ds:0x4228f2,0x12c1
  403119:	mov    DWORD PTR ds:0x4228d2,ecx
  40311f:	jl     0x403160
  403125:	push   0x234a
  40312a:	push   0x7349
  40312f:	push   DWORD PTR [ebp-0x28]
  403132:	call   DWORD PTR ds:0x42a00c
  403138:	xor    edx,edx
  40313a:	or     edx,DWORD PTR ds:0x4229fe
  403140:	mov    edx,DWORD PTR [edx]
  403142:	sbb    DWORD PTR ds:0x4229ca,edx
  403148:	sbb    edx,DWORD PTR ds:0x42294a
  40314e:	mov    edx,DWORD PTR ds:0x42293e
  403154:	add    edx,DWORD PTR ds:0x42290e
  40315a:	mov    DWORD PTR ds:0x42293e,edx
  403160:	sbb    edx,0x27b8
  403166:	movzx  edx,BYTE PTR ds:0x422902
  40316d:	or     edx,DWORD PTR ds:0x422912
  403173:	mov    DWORD PTR ds:0x422902,edx
  403179:	mov    ecx,DWORD PTR ds:0x422298
  40317f:	mov    edx,DWORD PTR ds:0x4229ee
  403185:	mov    edx,DWORD PTR [edx]
  403187:	xor    DWORD PTR ds:0x4228be,edx
  40318d:	lea    eax,[eax+ecx*1-0x27d2]
  403194:	jmp    0x40371e
  403199:	out    0x30,al
  40319b:	dec    BYTE PTR [edi+0x18661839]
  4031a1:	lock push 0x7db772b2
  4031a7:	and    al,0x68
  4031a9:	hlt    
  4031aa:	loope  0x4031c2
  4031ac:	push   ss
  4031ad:	cmp    eax,0x53161604
  4031b2:	call   0x2ccf:0x1f101eb1
  4031b9:	cmc    
  4031ba:	dec    edi
  4031bb:	lds    eax,FWORD PTR [edi]
  4031bd:	or     al,0xcd
  4031bf:	sbb    eax,0x104dd9a2
  4031c4:	popf   
  4031c5:	mov    edx,0xcc81e6b2
  4031ca:	ud1    eax,DWORD PTR [edx+edx*4+0x5bd8806d]
  4031d2:	pop    edx
  4031d3:	ins    DWORD PTR es:[edi],dx
  4031d4:	daa    
  4031d5:	fsubr  DWORD PTR [ebp-0x70842dff]
  4031db:	push   0x2d
  4031dd:	test   al,0xa0
  4031df:	outs   dx,BYTE PTR ds:[esi]
  4031e0:	arpl   bx,cx
  4031e2:	fisubr DWORD PTR [ecx]
  4031e4:	inc    ebp
  4031e5:	xor    cl,BYTE PTR [eax+eax*1]
  4031e8:	mov    edx,0x5d756823
  4031ed:	jno    0x403236
  4031ef:	(bad)  
  4031f0:	sub    DWORD PTR [eax],eax
  4031f2:	icebp  
  4031f3:	push   eax
  4031f4:	bound  esi,QWORD PTR [edi+0x22]
  4031f7:	jmp    0x1881f9b2
  4031fc:	enter  0x1726,0xae
  403200:	pop    esi
  403201:	dec    ecx
  403202:	or     ebx,ecx
  403204:	out    0x5f,eax
  403206:	out    0x24,al
  403208:	in     al,0x3a
  40320a:	in     eax,dx
  40320b:	inc    esi
  40320c:	pop    esp
  40320d:	imul   DWORD PTR [ebp-0x275a3de2]
  403213:	pop    edx
  403214:	in     al,0x40
  403216:	scas   al,BYTE PTR es:[edi]
  403217:	ret    
  403218:	and    eax,0x7e164c72
  40321d:	jg     0x4031dd
  40321f:	jbe    0x40321e
  403221:	arpl   WORD PTR [edx+0x20bc3a4f],bp
  403227:	sub    eax,0x330a009f
  40322c:	test   eax,0x14463d3f
  403231:	mov    esi,0x96e67e4f
  403236:	lods   al,BYTE PTR ds:[esi]
  403237:	aam    0xdf
  403239:	jb     0x403224
  40323b:	imul   ecx,ebp,0x7bf7923d
  403241:	in     eax,dx
  403242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403243:	loopne 0x40324e
  403245:	mov    al,0x2e
  403247:	and    edx,ecx
  403249:	in     al,dx
  40324a:	shl    BYTE PTR [edx],1
  40324c:	test   eax,0xd2b3cf99
  403251:	(bad)  
  403252:	nop
  403253:	addr16 push ss
  403255:	retf   
  403256:	adc    BYTE PTR [ebx-0xd],ch
  403259:	cmp    eax,0x412169d0
  40325e:	pop    ebx
  40325f:	and    ch,bh
  403261:	leave  
  403262:	lods   al,BYTE PTR ds:[esi]
  403263:	call   0x77617548
  403268:	fs rcl eax,cl
  40326b:	pushf  
  40326c:	xor    DWORD PTR [ecx],ebx
  40326e:	(bad)  
  40326f:	int3   
  403270:	sub    DWORD PTR [ebx-0x38],0x62
  403274:	jne    0x40327d
  403276:	add    edi,DWORD PTR [ebp+0x7fd431a6]
  40327c:	test   BYTE PTR [eax],cl
  40327e:	fist   DWORD PTR [ebp-0x29da3d7c]
  403284:	pop    esp
  403285:	out    0x6c,eax
  403287:	push   0x30
  403289:	or     dh,0x69
  40328c:	retf   0x1ed5
  40328f:	sbb    DWORD PTR ss:[ebx+0xd],edx
  403293:	aad    0xa9
  403295:	or     BYTE PTR ds:0xc45ef96c,ch
  40329b:	ja     0x4032d1
  40329d:	xor    eax,0xcd1b655a
  4032a2:	or     al,0x51
  4032a4:	stos   BYTE PTR es:[edi],al
  4032a5:	xor    BYTE PTR [ecx-0x1de0f3b],al
  4032ab:	pop    esp
  4032ac:	das    
  4032ad:	mov    ah,0xb3
  4032af:	push   ss
  4032b0:	xchg   edi,eax
  4032b1:	cmp    BYTE PTR [ebp+0x5c],bl
  4032b4:	mov    bl,0x8e
  4032b6:	or     ebx,ebp
  4032b8:	jbe    0x4032be
  4032ba:	add    ecx,DWORD PTR [esi+ecx*4-0xe]
  4032be:	or     eax,0x219045e2
  4032c3:	icebp  
  4032c4:	jnp    0x403280
  4032c6:	mov    ds:0x9531be0,eax
  4032cb:	sbb    BYTE PTR [edx+ebx*1-0x68],bl
  4032cf:	xor    dl,bh
  4032d1:	outs   dx,BYTE PTR ds:[esi]
  4032d2:	xchg   ebp,eax
  4032d3:	into   
  4032d4:	mov    al,ds:0x81586d66
  4032d9:	dec    eax
  4032da:	sub    DWORD PTR [ebp-0x4fc51083],ebp
  4032e0:	stc    
  4032e1:	and    eax,0xd18f17eb
  4032e6:	or     BYTE PTR [esi-0x2a],dl
  4032e9:	jb     0x403309
  4032eb:	lods   eax,DWORD PTR ds:[esi]
  4032ec:	or     eax,0x9418bbe7
  4032f1:	and    al,0xf
  4032f3:	stos   DWORD PTR es:[edi],eax
  4032f4:	mov    ebp,DWORD PTR [esi+0x66c1cc56]
  4032fa:	aam    0xe4
  4032fc:	pop    ebx
  4032fd:	jo     0x403354
  4032ff:	add    DWORD PTR [eax-0x12],esp
  403302:	and    esi,DWORD PTR [ebp-0x51f0e229]
  403308:	es pop ds
  40330a:	iret   
  40330b:	(bad)  
  40330d:	dec    ecx
  40330e:	nop
  40330f:	cmp    esi,ebp
  403311:	shl    DWORD PTR [ecx],1
  403313:	(bad)  [ebp-0x2b]
  403316:	shr    dl,0xb7
  403319:	pop    edi
  40331a:	xor    esi,DWORD PTR [ecx]
  40331c:	sbb    eax,0xafaad567
  403321:	in     eax,dx
  403322:	ins    BYTE PTR es:[edi],dx
  403323:	mov    edi,0x1fb0e71c
  403328:	inc    ebp
  403329:	(bad)  
  40332a:	xchg   edi,eax
  40332b:	fwait
  40332c:	jmp    ecx
  40332e:	outs   dx,DWORD PTR ds:[esi]
  40332f:	aas    
  403330:	mov    edi,0xd9b61642
  403335:	(bad)  
  403336:	and    DWORD PTR [ebp+edx*4+0xc97df8a],ebp
  40333d:	out    dx,al
  40333e:	adc    al,0x50
  403340:	and    ebp,DWORD PTR ds:0x9d4d4f31
  403346:	stos   BYTE PTR es:[edi],al
  403347:	aas    
  403348:	jnp    0x403377
  40334a:	(bad)  
  40334b:	dec    ebp
  40334c:	ror    BYTE PTR [eax+0x42045eb2],0x5
  403353:	jns    0x40332c
  403355:	es retf 0xfcbe
  403359:	pop    edi
  40335a:	fs popf 
  40335c:	loope  0x4033a4
  40335e:	aas    
  40335f:	dec    esi
  403360:	mov    bl,0xa2
  403362:	add    al,0x38
  403364:	(bad)  
  403366:	add    eax,0x332845b3
  40336b:	nop
  40336c:	cld    
  40336d:	push   edi
  40336e:	std    
  40336f:	or     eax,0x79c9fa80
  403374:	inc    ecx
  403375:	xor    ebx,DWORD PTR [ebp-0x4d]
  403378:	je     0x40335c
  40337a:	push   esp
  40337b:	xchg   BYTE PTR [edx+0x4ea64bc1],cl
  403381:	push   0x15eb98d1
  403386:	stc    
  403387:	mov    esp,0x9d6d9da2
  40338c:	lea    ebx,[ebp-0x7d86622d]
  403392:	mov    al,ds:0xe1d64761
  403397:	xor    esi,edi
  403399:	mov    edi,0x7faadeef
  40339e:	leave  
  40339f:	lea    ecx,[ecx+0x75]
  4033a2:	popf   
  4033a3:	jmp    0xfd83e3b4
  4033a8:	(bad)  
  4033a9:	mov    esi,0x4acbadd5
  4033ae:	shr    DWORD PTR [esi],cl
  4033b0:	cli    
  4033b1:	inc    ebx
  4033b2:	cmp    ch,BYTE PTR [ecx+0x7189ce90]
  4033b8:	daa    
  4033b9:	cmc    
  4033ba:	sbb    al,0xb5
  4033bc:	xchg   edi,eax
  4033bd:	ds push 0x58b264f0
  4033c3:	hlt    
  4033c4:	mov    ebx,0x5d4f4a1a
  4033c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ca:	lock xchg BYTE PTR [eax+esi*8],dh
  4033ce:	mov    ch,0x23
  4033d0:	lds    ecx,FWORD PTR [edx+0x6c]
  4033d3:	pop    ebx
  4033d4:	xchg   edx,eax
  4033d5:	push   cs
  4033d6:	cwde   
  4033d7:	mov    ecx,0x39943d26
  4033dc:	(bad)  
  4033dd:	das    
  4033de:	jg     0x4033c2
  4033e0:	push   ss
  4033e1:	pop    es
  4033e2:	js     0x40341f
  4033e4:	mov    ds:0x199465b3,eax
  4033e9:	inc    esi
  4033ea:	jle    0x4033f8
  4033ec:	dec    esi
  4033ed:	stos   BYTE PTR es:[edi],al
  4033ee:	lea    ecx,[esp+eiz*8-0x5428ed81]
  4033f5:	jnp    0x403428
  4033f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f8:	cmc    
  4033f9:	loopne 0x403479
  4033fb:	mov    ebp,0x2c320ee8
  403400:	mov    esi,0x70860be2
  403405:	mov    ch,0x8c
  403407:	repz adc DWORD PTR [eax+0x41ed6a08],eax
  40340e:	mov    edx,ebx
  403410:	retf   0xcae6
  403413:	repnz push ss
  403415:	nop
  403416:	sar    DWORD PTR [eax+0x71799254],0xb
  40341d:	das    
  40341e:	and    al,0xbb
  403420:	and    ch,cl
  403422:	jp     0x403411
  403424:	sbb    edx,DWORD PTR [ebp+0x149bfc9b]
  40342a:	cmp    esp,edx
  40342c:	sbb    eax,0xde6f8f5b
  403431:	fbstp  TBYTE PTR ss:[esi-0x34]
  403435:	pop    edi
  403436:	fs data16 adc al,0x3e
  40343a:	cmp    DWORD PTR [edx],0x49
  40343d:	fwait
  40343e:	or     bh,BYTE PTR [esi]
  403440:	dec    esi
  403441:	jle    0x403412
  403443:	aad    0xcb
  403445:	outs   dx,BYTE PTR ds:[esi]
  403446:	push   es
  403447:	addr16 xchg ecx,eax
  403449:	jb     0x4033fe
  40344b:	call   DWORD PTR [eax-0x6f]
  40344e:	les    eax,FWORD PTR [edi-0x7b93e8a7]
  403454:	das    
  403455:	pop    esp
  403456:	pop    ds
  403457:	mov    bl,0xba
  403459:	and    DWORD PTR [esi-0x3961deb3],edi
  40345f:	mov    BYTE PTR [edx-0x1e],bl
  403462:	xchg   DWORD PTR [eax],ebp
  403464:	shl    DWORD PTR [ebx+0x1e4a3a],1
  40346a:	lock fidivr WORD PTR [ebp+0x34]
  40346e:	lds    ebp,FWORD PTR [ebx+0x2592f0b2]
  403474:	fisttp QWORD PTR [esi+0x2115e676]
  40347a:	and    BYTE PTR [edx],bh
  40347c:	sbb    eax,0xf200b96
  403481:	xchg   edx,eax
  403482:	mov    al,0xeb
  403484:	mov    edi,edi
  403486:	int    0x7b
  403488:	push   eax
  403489:	dec    edi
  40348a:	push   ebx
  40348b:	movups XMMWORD PTR [eax+0xb8d230b],xmm6
  403492:	sbb    eax,DWORD PTR ds:0x3630af2d
  403498:	mov    ebp,0x247633c2
  40349d:	lods   al,BYTE PTR ds:[esi]
  40349e:	dec    eax
  40349f:	mov    bh,0x1c
  4034a1:	dec    edi
  4034a2:	pop    edx
  4034a3:	ja     0x403464
  4034a5:	mov    eax,0xde3b525d
  4034aa:	or     eax,0x1e471088
  4034af:	imul   ebx,DWORD PTR [ecx-0x39a4bcc3],0xe5e23843
  4034b9:	mov    eax,ds:0xd09a5eb8
  4034be:	cli    
  4034bf:	stos   BYTE PTR es:[edi],al
  4034c0:	push   ebp
  4034c1:	out    0x46,al
  4034c3:	and    eax,0xd83965ac
  4034c8:	das    
  4034c9:	push   ebx
  4034ca:	(bad)  
  4034cc:	push   0xffffffad
  4034ce:	jge    0x403504
  4034d0:	mov    ch,BYTE PTR [ecx+0x4e7237a3]
  4034d6:	bound  ecx,QWORD PTR [eax+0x44d2f09b]
  4034dc:	pusha  
  4034dd:	adc    DWORD PTR [eax-0x73e3bb34],edx
  4034e3:	mov    ch,BYTE PTR [ecx+0x78]
  4034e6:	adc    al,0xd
  4034e8:	cmp    bl,BYTE PTR ds:0xfef82861
  4034ee:	push   cs
  4034ef:	xor    edi,edi
  4034f1:	hlt    
  4034f2:	(bad)  
  4034f3:	int    0xd1
  4034f5:	jno    0x4034d5
  4034f7:	xchg   ebx,eax
  4034f8:	push   ecx
  4034f9:	pushf  
  4034fa:	(bad)  [eax+0xfeee25d]
  403500:	clc    
  403501:	mov    fs,WORD PTR [edi-0x4b]
  403504:	es gs xchg esp,eax
  403507:	add    BYTE PTR [edx+edx*1-0x51b843aa],al
  40350e:	sub    DWORD PTR [esi+0x292dd411],edi
  403514:	dec    edx
  403515:	sub    BYTE PTR [esi+0x2b303c88],bl
  40351b:	add    al,0x66
  40351d:	add    esi,DWORD PTR [edx-0x28f69d1a]
  403523:	call   0xa062e9cc
  403528:	cmp    DWORD PTR [ecx-0x47034d7],edx
  40352e:	shl    DWORD PTR [ecx],0x92
  403531:	aad    0xfd
  403533:	lahf   
  403534:	fwait
  403535:	clc    
  403536:	aaa    
  403537:	(bad)  
  403538:	or     bl,BYTE PTR [ecx-0x9]
  40353b:	xchg   ebx,eax
  40353c:	into   
  40353d:	jg     0x4034fb
  40353f:	stc    
  403540:	lods   al,BYTE PTR ds:[esi]
  403541:	mov    esp,0x2726d693
  403546:	adc    cl,BYTE PTR [ebx+0x37994864]
  40354c:	mov    bl,0x78
  40354e:	xchg   esi,eax
  40354f:	inc    esi
  403550:	xchg   esi,eax
  403551:	scas   al,BYTE PTR es:[edi]
  403552:	add    DWORD PTR [esi-0x6f],ebx
  403555:	adc    ebp,0xffffffb7
  403558:	fucomp st(7)
  40355a:	push   esp
  40355b:	sub    BYTE PTR [eax+esi*4+0xc90bc67],al
  403562:	aad    0x49
  403564:	gs mov dl,0x8a
  403567:	(bad)  cs:[edx+eax*8]
  40356b:	das    
  40356c:	inc    esi
  40356d:	pop    edx
  40356e:	or     ecx,edi
  403570:	fistp  QWORD PTR [edx]
  403572:	loope  0x403594
  403574:	popa   
  403575:	rcr    DWORD PTR [ecx+edx*2+0x342ce96d],1
  40357c:	test   al,0x38
  40357e:	scas   eax,DWORD PTR es:[edi]
  40357f:	mov    WORD PTR [ebp-0x46],ss
  403582:	xor    edx,esp
  403584:	mov    bh,0xb4
  403586:	mov    ah,0xb3
  403588:	xchg   BYTE PTR [eax],bh
  40358a:	inc    ebp
  40358b:	arpl   WORD PTR [ebp-0x7e3c02d6],si
  403591:	data16 arpl ax,si
  403594:	sub    ah,BYTE PTR [esi-0xa79c232]
  40359a:	cld    
  40359b:	ss sub ah,dh
  40359e:	imul   ebx,DWORD PTR [esi+edx*1],0xa6707ede
  4035a5:	mov    dh,0xe0
  4035a7:	cmp    DWORD PTR [ecx],eax
  4035a9:	mov    BYTE PTR [ebx-0x57],0x9d
  4035ad:	pop    ecx
  4035ae:	loop   0x4035ca
  4035b0:	clc    
  4035b1:	jbe    0x40361b
  4035b3:	dec    esi
  4035b4:	enter  0x1337,0x1e
  4035b8:	cwde   
  4035b9:	repz sub eax,0x9da8e41e
  4035bf:	push   esp
  4035c0:	scas   al,BYTE PTR es:[edi]
  4035c1:	retf   
  4035c2:	imul   WORD PTR [eax]
  4035c5:	add    al,0xba
  4035c7:	fmulp  st(6),st
  4035c9:	mov    dh,0x7c
  4035cb:	mov    al,ds:0x2cf6ac9a
  4035d0:	cmp    eax,0x4de200d1
  4035d5:	sub    BYTE PTR [edi-0x16],ah
  4035d8:	fcomp  QWORD PTR [edi]
  4035da:	out    0x4,eax
  4035dc:	xor    al,0x9b
  4035de:	hlt    
  4035df:	sbb    DWORD PTR [edi*1+0x143e27a3],ebx
  4035e6:	cmp    eax,0x9d38a0ad
  4035eb:	and    BYTE PTR [ebp-0x22],bh
  4035ee:	adc    bh,bl
  4035f0:	sbb    al,0x10
  4035f2:	imul   esi,esp,0xfffffffb
  4035f5:	lods   al,BYTE PTR ds:[esi]
  4035f6:	inc    esi
  4035f7:	scas   al,BYTE PTR es:[edi]
  4035f8:	cdq    
  4035f9:	mov    ebx,0x6304b7b9
  4035fe:	fmulp  st(1),st
  403600:	out    dx,eax
  403601:	inc    ecx
  403602:	add    BYTE PTR [esi+edi*4-0x78],0xb2
  403607:	adc    BYTE PTR [edx+0x68bf137f],ch
  40360d:	mov    ss,WORD PTR [esi]
  40360f:	hlt    
  403610:	call   0x129cbe16
  403615:	push   edi
  403616:	jge    0x4035f8
  403618:	std    
  403619:	phsubd mm5,mm6
  40361d:	pop    edx
  40361e:	mov    eax,ds:0xbaa2fe5f
  403623:	jl     0x4035ac
  403625:	jmp    0x4035c4
  403627:	adc    bl,BYTE PTR [edx+ecx*8+0xecf1ae3]
  40362e:	pop    ebp
  40362f:	out    dx,eax
  403630:	psubsb xmm0,xmm7
  403634:	in     al,dx
  403635:	mov    BYTE PTR [edx+0x6fa79397],al
  40363b:	in     al,dx
  40363c:	js     0x4035e9
  40363e:	scas   eax,DWORD PTR es:[edi]
  40363f:	sbb    al,0x36
  403641:	test   eax,0x84fe0d71
  403646:	sbb    al,0xa4
  403648:	bound  esi,QWORD PTR [eax-0x12]
  40364b:	into   
  40364c:	out    0xdb,al
  40364e:	mov    edi,0x5de976ae
  403653:	push   es
  403654:	je     0x403643
  403656:	and    esp,DWORD PTR [ecx-0x53]
  403659:	mov    WORD PTR [ebx],gs
  40365b:	scas   al,BYTE PTR es:[edi]
  40365c:	shr    DWORD PTR [ebp+esi*1-0x6b0374b0],0x47
  403664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403665:	jb     0x403640
  403667:	xchg   ebx,eax
  403668:	aad    0x88
  40366a:	and    eax,0x4a01c036
  40366f:	imul   ebx,DWORD PTR [ecx+0x6c2de281],0x2e
  403676:	out    dx,al
  403677:	dec    ebx
  403678:	mov    eax,ds:0xe0faf50b
  40367d:	shl    DWORD PTR [eax-0x761b7d81],cl
  403683:	sti    
  403684:	loopne 0x40360e
  403686:	pop    edx
  403687:	aaa    
  403688:	xchg   edx,eax
  403689:	cdq    
  40368a:	repnz cs pop ds
  40368d:	leave  
  40368e:	(bad)  
  40368f:	test   al,0xf3
  403691:	popa   
  403692:	aas    
  403693:	push   ebx
  403694:	cli    
  403695:	dec    esi
  403696:	push   edx
  403697:	mov    al,0xa4
  403699:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40369b:	dec    esi
  40369c:	jb     0x4036bc
  40369e:	outs   dx,BYTE PTR ds:[esi]
  40369f:	(bad)  
  4036a1:	fdivr  QWORD PTR [esi+0x35]
  4036a5:	imul   DWORD PTR [esi-0x10]
  4036a8:	push   esi
  4036a9:	add    al,0x1
  4036ab:	mov    ebp,0x591e7775
  4036b0:	add    eax,DWORD PTR [esi+0x8fa0aac]
  4036b6:	(bad)  
  4036b7:	adc    edx,DWORD PTR [edi+0x11]
  4036ba:	ins    DWORD PTR es:[edi],dx
  4036bb:	mov    al,0x68
  4036bd:	icebp  
  4036be:	sahf   
  4036bf:	push   0x22815d3b
  4036c4:	xor    DWORD PTR [edi],0xffffff88
  4036c7:	test   al,0x12
  4036c9:	iret   
  4036ca:	clc    
  4036cb:	std    
  4036cc:	jmp    0xc917:0x2af1e9aa
  4036d3:	or     ch,BYTE PTR [ebx+0x1f]
  4036d6:	ins    BYTE PTR es:[edi],dx
  4036d7:	test   BYTE PTR gs:[ecx-0x2e1edba0],bl
  4036de:	xchg   DWORD PTR [edx+ebx*1],edi
  4036e1:	jp     0x403685
  4036e3:	sbb    al,0x1
  4036e5:	test   DWORD PTR [ebx],edi
  4036e7:	inc    ebx
  4036e8:	dec    ebx
  4036e9:	cmp    BYTE PTR [ebx-0x13],ch
  4036ec:	sbb    eax,0xefeebe91
  4036f1:	js     0x403713
  4036f3:	sbb    ebp,DWORD PTR [esi-0x4a]
  4036f6:	jmp    FWORD PTR [ecx]
  4036f8:	xchg   DWORD PTR [esi-0x40cbc58],ebx
  4036fe:	sti    
  4036ff:	cmc    
  403700:	sub    esi,DWORD PTR [ecx+0x653b0ecf]
  403706:	scas   al,BYTE PTR es:[edi]
  403707:	sub    al,0x62
  403709:	pop    esp
  40370a:	rcl    BYTE PTR [ecx-0x7d],0x6d
  40370e:	or     eax,0x993bd772
  403713:	ret    0x3d26
  403716:	push   ebp
  403717:	jno    0x403780
  403719:	fwait
  40371a:	jg     0x40378c
  40371c:	mov    al,ds:0xe44d8b5b
  403721:	cmp    DWORD PTR ds:0x42291a,0x0
  403728:	not    DWORD PTR ds:0x42292a
  40372e:	mov    edx,0x5d13
  403733:	movzx  edx,WORD PTR ds:0x42288a
  40373a:	jmp    0x403780
  40373f:	mov    DWORD PTR ds:0x4229aa,0xf15
  403749:	jg     0x40376e
  40374f:	push   DWORD PTR [ebp-0xc]
  403752:	call   DWORD PTR ds:0x42a174
  403758:	add    DWORD PTR ds:0x4228d2,ebx
  40375e:	xor    DWORD PTR ds:0x42296a,edi
  403764:	sub    DWORD PTR ds:0x4228ea,0x49b7
  40376e:	sub    edx,DWORD PTR ds:0x4228ca
  403774:	or     DWORD PTR ds:0x4228ce,edi
  40377a:	xor    DWORD PTR ds:0x4228f2,ebx
  403780:	mov    edx,DWORD PTR [ebp-0x2c]
  403783:	or     DWORD PTR ds:0x422942,0x4409
  40378d:	or     ecx,0x4f00
  403793:	and    ecx,edx
  403795:	mov    edx,DWORD PTR ds:0x422892
  40379b:	adc    edx,DWORD PTR ds:0x4229b6
  4037a1:	mov    DWORD PTR ds:0x422892,edx
  4037a7:	mov    edx,DWORD PTR [ebp-0x34]
  4037aa:	adc    DWORD PTR ds:0x4229b2,0x1e82
  4037b4:	or     ecx,edx
  4037b6:	adc    DWORD PTR ds:0x4228ba,0x5785
  4037c0:	xor    ecx,0x5fdd
  4037c6:	cmp    ecx,DWORD PTR [eax]
  4037c8:	jne    0x41a17f
  4037ce:	and    DWORD PTR ds:0x42297a,0x68cd
  4037d8:	mov    ecx,DWORD PTR [esi]
  4037da:	sub    DWORD PTR ds:0x42297a,0x1779
  4037e4:	mov    eax,DWORD PTR [esi+0x4]
  4037e7:	and    edx,0xf6b
  4037ed:	shrd   ecx,eax,0x2
  4037f1:	shr    eax,0x2
  4037f4:	sbb    edx,DWORD PTR ds:0x4228e2
  4037fa:	mov    eax,DWORD PTR [esi]
  4037fc:	and    edx,DWORD PTR ds:0x4229d2
  403802:	mov    edx,DWORD PTR [esi+0x4]
  403805:	shl    eax,0x1e
  403808:	add    DWORD PTR ds:0x4229ae,0x4229ca
  403812:	xor    ecx,edi
  403814:	sub    DWORD PTR ds:0x42292a,0x2cc5
  40381e:	jmp    0x403da8
  403823:	add    al,0xf4
  403825:	sbb    al,0x30
  403827:	sbb    al,0x28
  403829:	clc    
  40382a:	sbb    BYTE PTR [ecx+edi*2],ch
  40382d:	jb     0x4038a1
  40382f:	and    BYTE PTR [edx-0x28dc9136],0x16
  403836:	push   ss
  403837:	cmp    eax,0x3161604
  40383c:	test   DWORD PTR [edi],edi
  40383e:	sub    al,0x61
  403840:	xor    al,0xf8
  403842:	adc    DWORD PTR [eax+0x30e09f6a],esi
  403848:	xlat   BYTE PTR ds:[ebx]
  403849:	add    eax,0x7b1cc665
  40384e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40384f:	add    edx,0x17d7ff3
  403855:	mov    al,ds:0x43fb5d81
  40385a:	xor    edi,DWORD PTR [ebp-0x203461b8]
  403860:	mov    bl,0xe9
  403862:	dec    edx
  403863:	xor    BYTE PTR [ebp+0x73],ah
  403866:	push   es
  403867:	pusha  
  403868:	in     eax,dx
  403869:	outs   dx,DWORD PTR ds:[esi]
  40386a:	out    0xbb,al
  40386c:	sub    al,0xb
  40386e:	(bad)  
  403870:	inc    esp
  403871:	shr    BYTE PTR [edi+0x2a],0x82
  403875:	jo     0x4038d6
  403877:	xor    eax,0xf6e8ae91
  40387c:	pop    eax
  40387d:	sub    ebp,ebx
  40387f:	lods   al,BYTE PTR ds:[esi]
  403880:	sub    edi,DWORD PTR [esi-0x214e035a]
  403886:	cs nop
  403888:	inc    ebp
  403889:	fdivr  QWORD PTR [edx-0x79a2d395]
  40388f:	pusha  
  403890:	in     eax,dx
  403891:	adc    BYTE PTR [ecx-0x3f],0x78
  403895:	pop    edi
  403896:	(bad)  
  403897:	pop    eax
  403898:	and    esi,edi
  40389a:	ret    
  40389b:	ja     0x4038b1
  40389d:	sti    
  40389e:	jns    0x4038df
  4038a0:	shl    BYTE PTR [eax+0x5e],cl
  4038a3:	mov    eax,ds:0xf5e135ff
  4038a8:	sti    
  4038a9:	outs   dx,DWORD PTR ds:[esi]
  4038aa:	mov    ebp,0x50da8b4d
  4038af:	mov    esp,0xa1afd7b2
  4038b4:	cmc    
  4038b5:	cmc    
  4038b6:	data16 fsub st,st(5)
  4038b9:	cdq    
  4038ba:	shl    DWORD PTR [ecx-0x579033b5],cl
  4038c0:	(bad)  
  4038c1:	ins    BYTE PTR es:[edi],dx
  4038c2:	arpl   WORD PTR [ebp+0x5f],bx
  4038c5:	sub    al,0xef
  4038c7:	mov    dh,0x40
  4038c9:	inc    DWORD PTR [eax+0x722c3831]
  4038cf:	push   ebx
  4038d0:	shr    dh,0x35
  4038d3:	pushf  
  4038d4:	jmp    DWORD PTR [edx-0x5544a5d4]
  4038da:	push   esp
  4038db:	outs   dx,BYTE PTR ds:[esi]
  4038dc:	idiv   DWORD PTR [edi-0x6197a486]
  4038e2:	bound  eax,QWORD PTR [esi]
  4038e4:	or     al,0xca
  4038e6:	fimul  WORD PTR [edx]
  4038e8:	xchg   edx,eax
  4038e9:	imul   ebx,DWORD PTR [edx],0x1028b5ce
  4038ef:	pop    edi
  4038f0:	sahf   
  4038f1:	mov    BYTE PTR [ebx],bl
  4038f3:	sbb    DWORD PTR [edi],edx
  4038f5:	and    al,0xb5
  4038f7:	ins    DWORD PTR es:[edi],dx
  4038f8:	hlt    
  4038f9:	mov    ebx,0xe15a98ef
  4038fe:	add    eax,0xfa28a643
  403903:	or     eax,0x800e0673
  403908:	pop    esp
  403909:	jp     0x403959
  40390b:	aas    
  40390c:	xchg   esp,eax
  40390d:	xchg   esi,eax
  40390e:	pop    ecx
  40390f:	out    0xfd,al
  403911:	test   BYTE PTR [ebx+0x37eae424],ch
  403917:	je     0x4038ed
  403919:	mov    ebp,0xa70f3115
  40391e:	jb     0x403908
  403920:	or     eax,0xfe82d1e8
  403925:	add    dh,BYTE PTR [eax]
  403927:	mov    eax,0xf15cd3d6
  40392c:	cwde   
  40392d:	daa    
  40392e:	cs jo  0x403948
  403931:	adc    DWORD PTR [ebp+0x668bdefe],edx
  403937:	xchg   esi,eax
  403938:	int3   
  403939:	popf   
  40393a:	xor    DWORD PTR [edx-0x4659996c],edi
  403940:	arpl   WORD PTR [edx-0x6a3989a9],bp
  403946:	js     0x403938
  403948:	mov    ch,0x5b
  40394a:	jno    0x40396c
  40394c:	cmp    al,dl
  40394e:	jl     0x403903
  403950:	pop    ebx
  403951:	repnz nop
  403953:	cmp    esi,DWORD PTR [esi]
  403955:	add    eax,0x39506a01
  40395a:	in     al,dx
  40395b:	(bad)  
  40395c:	out    dx,al
  40395d:	push   0xa7c920b
  403962:	mov    esi,0xd617a1f7
  403967:	imul   esp,DWORD PTR [edi-0x10],0xffffffb8
  40396b:	sub    DWORD PTR [ecx-0x5281115],ecx
  403971:	pop    ebx
  403972:	pop    eax
  403973:	mov    dh,0xdb
  403975:	iret   
  403976:	push   edi
  403977:	loop   0x403937
  403979:	mov    al,ds:0xaeac40b7
  40397e:	pop    esp
  40397f:	cmp    eax,0xc974900d
  403984:	pusha  
  403985:	call   0xb22:0xbaec543d
  40398c:	dec    eax
  40398d:	test   DWORD PTR [edi],esi
  40398f:	mov    ebp,0x91c4dddc
  403994:	adc    DWORD PTR [esi+0x3c4f2ec9],edi
  40399a:	jno    0x40393c
  40399c:	test   eax,0x12790c49
  4039a1:	mov    ds:0x4c873c0c,eax
  4039a6:	cmp    ebx,DWORD PTR [esi+0x7c717964]
  4039ac:	sub    al,0xe3
  4039ae:	jge    0x4039e5
  4039b0:	pop    esp
  4039b1:	call   0xa399:0xf451c050
  4039b8:	lds    edi,FWORD PTR [ecx-0x4b]
  4039bb:	pop    ds
  4039bc:	ins    BYTE PTR es:[edi],dx
  4039bd:	das    
  4039be:	test   DWORD PTR ds:0x4351f323,esp
  4039c4:	ficom  DWORD PTR [ebx-0x5c]
  4039c7:	fidiv  DWORD PTR [ebx+0x6b6e4fdd]
  4039cd:	cmp    DWORD PTR [edi-0x52],edi
  4039d0:	cmp    DWORD PTR [eax+0x31b00a17],esp
  4039d6:	imul   edx,DWORD PTR [eax+0x4610b094],0x3be462a2
  4039e0:	jecxz  0x403a04
  4039e2:	dec    edx
  4039e3:	cmc    
  4039e4:	add    DWORD PTR [ebx+0x18],0xffffffb8
  4039e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e9:	lods   al,BYTE PTR ds:[esi]
  4039ea:	fcomp  st(7)
  4039ec:	(bad)  
  4039ed:	mov    dl,0x23
  4039ef:	clc    
  4039f0:	mov    edi,0x6ded03b
  4039f5:	stos   BYTE PTR es:[edi],al
  4039f6:	cld    
  4039f7:	push   ecx
  4039f8:	mov    edi,0xb8efeef5
  4039fd:	jmp    DWORD PTR [ebx-0x4e8ffd03]
  403a03:	in     eax,0x6
  403a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a06:	and    al,BYTE PTR [edi+edi*2-0x20df3071]
  403a0d:	rol    BYTE PTR [ecx+ebp*8],1
  403a10:	fild   QWORD PTR [edx]
  403a12:	xlat   BYTE PTR ds:[ebx]
  403a13:	iret   
  403a14:	and    BYTE PTR [ecx-0x54],0x11
  403a18:	inc    eax
  403a19:	push   ds
  403a1a:	pusha  
  403a1b:	shr    DWORD PTR [edi+0x47],0xa9
  403a1f:	push   ebp
  403a20:	xor    al,0x74
  403a22:	fwait
  403a23:	jne    0x4039de
  403a25:	bound  edi,QWORD PTR [edx-0x2d]
  403a28:	xchg   DWORD PTR [edi-0x47b13942],edx
  403a2e:	pusha  
  403a2f:	loope  0x403a2a
  403a31:	pop    ss
  403a32:	push   edi
  403a33:	cwde   
  403a34:	hlt    
  403a35:	add    eax,0xf42d7915
  403a3a:	jmp    0x4039e0
  403a3c:	push   ecx
  403a3d:	jp     0x4039eb
  403a3f:	xchg   ecx,eax
  403a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a41:	sub    esp,DWORD PTR ds:0x830965dc
  403a47:	aad    0xf3
  403a49:	in     al,dx
  403a4a:	inc    ecx
  403a4b:	ret    
  403a4c:	retf   0xe023
  403a4f:	pop    ebx
  403a50:	xchg   ebx,eax
  403a51:	xor    ch,BYTE PTR [ebp+0x40]
  403a54:	sti    
  403a55:	mov    ch,0xd2
  403a57:	or     DWORD PTR [ecx],0x78e31446
  403a5d:	pop    ebp
  403a5e:	leave  
  403a5f:	add    DWORD PTR [ebx-0x6bfb924c],eax
  403a65:	xchg   esp,eax
  403a66:	int    0x2e
  403a68:	xchg   BYTE PTR [edx+0x10],ah
  403a6b:	jne    0x403a39
  403a6d:	jne    0x403a74
  403a6f:	enter  0xddf9,0xff
  403a73:	inc    edi
  403a74:	pop    edi
  403a75:	cmp    BYTE PTR [esi+eiz*4+0x40],ch
  403a79:	enter  0x59a6,0x25
  403a7d:	and    BYTE PTR [edx+0x46a99d6c],bl
  403a83:	pop    ecx
  403a84:	sub    DWORD PTR [eax-0x6f9cd8f4],ebx
  403a8a:	sahf   
  403a8b:	sub    DWORD PTR [edi*2-0x4339efa6],edi
  403a92:	loop   0x403b0e
  403a94:	retf   0xf470
  403a97:	imul   esp,DWORD PTR [edi-0x7f],0x4f
  403a9b:	rcl    edx,1
  403a9d:	je     0x403a91
  403a9f:	adc    dx,ax
  403aa2:	repnz sbb al,0x8a
  403aa5:	retf   
  403aa6:	add    DWORD PTR [ecx+ebx*4-0x6cb3297c],esp
  403aad:	in     al,dx
  403aae:	js     0x403ab7
  403ab0:	add    edx,DWORD PTR [ebp-0x40e03a4e]
  403ab6:	das    
  403ab7:	pop    ss
  403ab8:	push   esi
  403ab9:	mov    ebp,0x8e102b1d
  403abe:	push   ds
  403abf:	sub    bh,al
  403ac1:	in     eax,0x9b
  403ac3:	mov    edx,0x6479e4a
  403ac8:	leave  
  403ac9:	xchg   edi,eax
  403aca:	(bad)  
  403acb:	adc    al,0x23
  403acd:	retf   
  403ace:	in     al,dx
  403acf:	pusha  
  403ad0:	xor    BYTE PTR [ebp-0x20],bl
  403ad3:	xor    DWORD PTR [ebp+0xe],eax
  403ad6:	xor    DWORD PTR [edi],ebx
  403ad8:	ja     0x403a8b
  403ada:	popa   
  403adb:	add    esp,DWORD PTR [ebx+eiz*1-0x7de11478]
  403ae2:	or     DWORD PTR [eax-0x7f],edx
  403ae5:	sbb    al,dl
  403ae7:	cwde   
  403ae8:	xlat   BYTE PTR ds:[ebx]
  403ae9:	xor    al,0x4a
  403aeb:	gs addr16 xchg esp,esi
  403aef:	in     eax,0xec
  403af1:	jns    0x403ae4
  403af3:	lock ret 
  403af5:	js     0x403acd
  403af7:	add    DWORD PTR [ebp+0x1a7502ea],ecx
  403afd:	les    edi,FWORD PTR [edi-0x10b54300]
  403b03:	jns    0x403b7f
  403b05:	mov    al,0xc7
  403b07:	scas   al,BYTE PTR es:[edi]
  403b08:	outs   dx,BYTE PTR ds:[esi]
  403b09:	push   esi
  403b0a:	lods   eax,DWORD PTR ds:[esi]
  403b0b:	mov    ebx,0xb282634
  403b10:	jnp    0x403ab1
  403b12:	inc    eax
  403b13:	xchg   esp,eax
  403b14:	loope  0x403b78
  403b16:	mov    ebp,0xf10e622f
  403b1b:	dec    ebp
  403b1c:	mov    dl,0x4e
  403b1e:	inc    ecx
  403b1f:	xchg   ebx,eax
  403b20:	cli    
  403b21:	push   ecx
  403b22:	xchg   edx,eax
  403b23:	push   es
  403b24:	loopne 0x403b21
  403b26:	fs cld 
  403b28:	push   edx
  403b29:	cmp    eax,0x1fcf377
  403b2e:	or     eax,0x345862dd
  403b33:	icebp  
  403b34:	jmp    0x8d1ebca4
  403b39:	je     0x403b1d
  403b3b:	clc    
  403b3c:	loop   0x403b4d
  403b3e:	xor    edx,0x67
  403b41:	or     BYTE PTR gs:[edx],ah
  403b44:	fucomip st,st(3)
  403b46:	dec    edx
  403b47:	cwde   
  403b48:	(bad)  
  403b49:	rol    DWORD PTR [ebx-0x44],cl
  403b4c:	pusha  
  403b4d:	dec    edi
  403b4e:	and    al,0x4b
  403b50:	add    DWORD PTR [edx],0x23
  403b53:	in     eax,0x1
  403b55:	and    DWORD PTR ds:[esi],edx
  403b58:	popa   
  403b59:	jbe    0x403bc5
  403b5b:	ret    0x7fa0
  403b5e:	jb     0x403b7b
  403b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b61:	jne    0x403b24
  403b63:	jecxz  0x403b94
  403b65:	div    DWORD PTR [edx+0x1e]
  403b68:	out    0x4,eax
  403b6a:	pop    ss
  403b6b:	into   
  403b6c:	popa   
  403b6d:	xchg   ebp,eax
  403b6e:	aad    0xaf
  403b70:	push   esp
  403b71:	cmp    ch,BYTE PTR ds:0x48354f3d
  403b77:	pop    edx
  403b78:	inc    esi
  403b79:	cmp    bh,BYTE PTR [edi+0x56]
  403b7c:	test   ecx,edx
  403b7e:	nop
  403b7f:	or     edx,ebp
  403b81:	repnz and edi,DWORD PTR [ecx]
  403b84:	imul   edi,DWORD PTR [eax],0xafcfbdd3
  403b8a:	pop    ds
  403b8b:	mov    esp,0x50fff6e1
  403b90:	jmp    0x403b66
  403b92:	jecxz  0x403b2e
  403b94:	mov    ebp,0x27b16f5c
  403b99:	outs   dx,BYTE PTR ds:[esi]
  403b9a:	(bad)  
  403b9c:	shr    cl,cl
  403b9e:	cdq    
  403b9f:	fisubr DWORD PTR ds:0xfa79c0d5
  403ba5:	cdq    
  403ba6:	dec    edi
  403ba7:	out    dx,al
  403ba8:	push   esp
  403ba9:	stos   DWORD PTR es:[edi],eax
  403baa:	sub    DWORD PTR [ebp+0x75],ebx
  403bad:	out    dx,eax
  403bae:	add    DWORD PTR [esi+0x6d],ebp
  403bb1:	and    eax,0xa5a51a32
  403bb6:	pusha  
  403bb7:	jne    0x403c28
  403bb9:	std    
  403bba:	push   ss
  403bbb:	mov    edx,0xa3d08e72
  403bc0:	mov    dh,0x9
  403bc2:	pop    edi
  403bc3:	dec    ebx
  403bc4:	mov    esi,0xb62f3091
  403bc9:	sbb    ch,BYTE PTR [ecx]
  403bcb:	xlat   BYTE PTR ds:[ebx]
  403bcc:	mov    ch,0x5c
  403bce:	nop
  403bcf:	shl    BYTE PTR gs:[eax+0x7b5a9ee5],1
  403bd6:	jl     0x403c08
  403bd8:	cmp    ebp,ecx
  403bda:	rol    BYTE PTR [ecx-0x82bd428],1
  403be0:	inc    esi
  403be1:	xor    cl,BYTE PTR ss:[edx-0x35]
  403be5:	mov    cl,0xa0
  403be7:	add    BYTE PTR [ebp-0x6df9130d],0x87
  403bee:	pop    edx
  403bef:	popa   
  403bf0:	stc    
  403bf1:	inc    esi
  403bf2:	call   0xfbc69ad
  403bf7:	pop    ss
  403bf8:	pop    ebp
  403bf9:	iret   
  403bfa:	pop    ecx
  403bfb:	mov    ebx,0x2356f9f9
  403c00:	outs   dx,BYTE PTR ds:[esi]
  403c01:	add    al,0xc3
  403c03:	ds (bad) 
  403c05:	and    al,0xb8
  403c07:	xchg   esi,eax
  403c08:	fmul   DWORD PTR [eax]
  403c0a:	cmc    
  403c0b:	popf   
  403c0c:	xchg   esp,eax
  403c0d:	adc    ecx,DWORD PTR [edi+ebx*1+0x2e7c9fda]
  403c14:	int3   
  403c15:	and    dl,BYTE PTR [ecx]
  403c17:	rcr    BYTE PTR [ebx-0x11],0xba
  403c1b:	ss out dx,al
  403c1d:	mov    ah,0x8c
  403c1f:	xchg   BYTE PTR [edx+eiz*2-0x4],dl
  403c23:	lods   al,BYTE PTR ds:[esi]
  403c24:	add    esi,eax
  403c26:	jno    0x403c07
  403c28:	dec    eax
  403c29:	test   eax,0x333ab7e9
  403c2e:	cmp    ebx,ecx
  403c30:	adc    al,bl
  403c32:	lock mov al,ds:0x9365de96
  403c38:	fstp   DWORD PTR [ebx]
  403c3a:	or     al,0x69
  403c3c:	xchg   BYTE PTR [edi-0x3b],dh
  403c3f:	jmp    0xb0e7:0x5de1d36f
  403c46:	sub    BYTE PTR [ebp+0xe093d84],bh
  403c4c:	cmp    bh,BYTE PTR [ebx-0x31]
  403c4f:	cmp    eax,0x40516f2
  403c54:	retf   
  403c55:	popa   
  403c56:	test   DWORD PTR [eax+0x34659a71],0x92ac048a
  403c60:	scas   eax,DWORD PTR es:[edi]
  403c61:	mov    cl,0x17
  403c63:	retf   0x105b
  403c66:	pop    esp
  403c67:	cmc    
  403c68:	and    DWORD PTR [esi-0x25],esp
  403c6b:	(bad)  
  403c6c:	es sub ecx,edi
  403c6f:	add    esp,edx
  403c71:	pop    edx
  403c72:	dec    ecx
  403c73:	bound  eax,QWORD PTR [ecx-0x5f]
  403c76:	mov    dl,BYTE PTR ss:[ecx]
  403c79:	dec    eax
  403c7a:	mov    DWORD PTR [eax+0x510e2f8b],edi
  403c80:	repz in al,dx
  403c82:	sub    eax,0x280597b6
  403c87:	shl    BYTE PTR [edx-0x7c7cbadf],0x15
  403c8e:	in     eax,dx
  403c8f:	adc    ecx,DWORD PTR [esi+esi*8-0x5ad6c0f0]
  403c96:	out    dx,eax
  403c97:	mov    ch,0x1
  403c99:	jmp    0x403c35
  403c9b:	in     al,0x2
  403c9d:	dec    esp
  403c9e:	mov    DWORD PTR ds:0xa99cd6e4,esi
  403ca4:	mov    ds:0xffca93cb,al
  403ca9:	jnp    0x403cac
  403cab:	retf   
  403cac:	call   0x7408:0x7ee0bc10
  403cb3:	push   eax
  403cb4:	inc    esi
  403cb5:	adc    ah,ch
  403cb7:	mov    bl,0x15
  403cb9:	sub    eax,0x13fa4599
  403cbe:	test   BYTE PTR [esi-0x150a4f77],bl
  403cc4:	addr16 mov bl,0x1a
  403cc7:	test   BYTE PTR [eax],dh
  403cc9:	fs nop
  403ccb:	sbb    al,0x8d
  403ccd:	xor    DWORD PTR [ecx],esp
  403ccf:	pop    es
  403cd0:	js     0x403c9c
  403cd2:	mov    eax,0x2a953cd3
  403cd7:	jbe    0x403d23
  403cd9:	mov    esp,0x83d5797d
  403cde:	sub    dh,ch
  403ce0:	xchg   edx,eax
  403ce1:	dec    esp
  403ce2:	fmulp  st(4),st
  403ce4:	xchg   esp,eax
  403ce5:	bound  edx,QWORD PTR [ebx-0x38776a05]
  403ceb:	mov    dh,BYTE PTR [edx+0x78739322]
  403cf1:	jl     0x403d2f
  403cf3:	sub    eax,0x39b44fbe
  403cf8:	push   ss
  403cf9:	push   es
  403cfa:	out    dx,eax
  403cfb:	hlt    
  403cfc:	mov    dl,0x28
  403cfe:	popf   
  403cff:	pop    eax
  403d00:	or     BYTE PTR [esp+eax*4-0x37],bh
  403d04:	sub    BYTE PTR [ebx-0x59],cl
  403d07:	mov    ah,0xb8
  403d09:	mov    ds:0x2be1229,al
  403d0e:	mov    bl,0x74
  403d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d11:	or     ebp,DWORD PTR [ebx]
  403d13:	mov    al,0xb2
  403d15:	in     eax,dx
  403d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d17:	aad    0x24
  403d19:	stos   BYTE PTR es:[edi],al
  403d1a:	push   cs
  403d1b:	test   BYTE PTR [edi],dh
  403d1d:	(bad)  
  403d1e:	adc    eax,0x47efe2cc
  403d23:	je     0x403d95
  403d25:	inc    ebp
  403d26:	std    
  403d27:	add    ecx,esi
  403d29:	xor    edx,DWORD PTR [edx-0x47]
  403d2c:	mov    ch,0x3c
  403d2e:	icebp  
  403d2f:	mov    esi,0x262838a1
  403d34:	cmp    dh,BYTE PTR gs:[ecx-0x28]
  403d38:	xchg   edx,eax
  403d39:	ja     0x403d07
  403d3b:	xchg   ebx,eax
  403d3c:	out    dx,al
  403d3d:	sbb    al,BYTE PTR [ecx+0x60]
  403d40:	(bad)  
  403d41:	mov    BYTE PTR [ecx-0x71b685f2],bl
  403d47:	and    ch,ah
  403d49:	dec    eax
  403d4a:	add    eax,0x445cd3c9
  403d4f:	pop    esi
  403d50:	jecxz  0x403d7d
  403d52:	loope  0x403ce7
  403d54:	inc    ecx
  403d55:	fs jns 0x403d75
  403d58:	int    0xed
  403d5a:	(bad)  
  403d5c:	sbb    ch,dl
  403d5e:	and    ebx,ecx
  403d60:	shl    DWORD PTR [ecx-0xc79becb],cl
  403d66:	shl    DWORD PTR [edi-0x596ad87f],0x2d
  403d6d:	jbe    0x403db2
  403d6f:	mov    edi,0x389483e7
  403d74:	ret    
  403d75:	push   esp
  403d76:	jmp    0x4a06:0x7eca14b6
  403d7d:	lea    ebp,[eax-0x74]
  403d80:	das    
  403d81:	out    0x90,al
  403d83:	sbb    eax,DWORD PTR [edi+0x40]
  403d86:	push   0xfffffff6
  403d88:	mov    bl,0x6d
  403d8a:	dec    ebp
  403d8b:	test   dl,0x43
  403d8e:	jb     0x403d76
  403d90:	xor    BYTE PTR [esi+0x2ea3c807],bl
  403d96:	or     bl,ch
  403d98:	and    BYTE PTR [esi+0x6d3ba884],dh
  403d9e:	sub    edx,edx
  403da0:	push   cs
  403da1:	ret    0xc133
  403da4:	pop    ecx
  403da5:	jo     0x403d71
  403da7:	(bad)  
  403da8:	xor    eax,eax
  403daa:	sub    DWORD PTR ds:0x422952,0x1af
  403db4:	or     eax,ecx
  403db6:	not    DWORD PTR ds:0x4229b6
  403dbc:	jmp    0x404346
  403dc1:	ss jp  0x403deb
  403dc4:	cmp    bl,BYTE PTR [ebx]
  403dc6:	sbb    ch,BYTE PTR [edx]
  403dc8:	pop    edx
  403dc9:	pop    es
  403dca:	scas   al,BYTE PTR es:[edi]
  403dcb:	and    ch,BYTE PTR [eax+0x79]
  403dce:	hlt    
  403dcf:	push   edx
  403dd0:	mov    dl,0x58
  403dd2:	lds    edx,FWORD PTR [esi]
  403dd4:	push   ss
  403dd5:	cmp    eax,0xd0161604
  403dda:	rcl    dl,0xe7
  403ddd:	dec    ecx
  403dde:	int    0xc0
  403de0:	sub    esi,DWORD PTR [eax+ecx*1-0x34]
  403de4:	jmp    0x9a8d1aa3
  403de9:	sti    
  403dea:	xor    edx,eax
  403dec:	mov    ds,WORD PTR [edi-0x5c]
  403def:	fnstcw WORD PTR [ebp+eax*8-0x69dfc8be]
  403df6:	rol    BYTE PTR [eax],0x82
  403df9:	fisubr DWORD PTR [eax+0x467dfb2d]
  403dff:	xchg   ebp,eax
  403e00:	test   eax,0x4746925c
  403e05:	arpl   WORD PTR [ebx],di
  403e07:	mov    edi,0x8c75a0b5
  403e0c:	or     al,0xf1
  403e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e0f:	jp     0x403dc0
  403e11:	inc    esi
  403e12:	inc    ebx
  403e13:	pop    ecx
  403e14:	mov    edi,0x88a7aafa
  403e19:	mov    esi,cs
  403e1b:	dec    edi
  403e1c:	es cli 
  403e1e:	dec    esi
  403e1f:	loop   0x403e61
  403e21:	mov    ecx,0xbc2ee26e
  403e26:	scas   al,BYTE PTR es:[edi]
  403e27:	into   
  403e28:	(bad)  
  403e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e2a:	stc    
  403e2b:	pop    esi
  403e2c:	sub    BYTE PTR [ecx],0xef
  403e2f:	jb     0x403e7d
  403e31:	fidiv  DWORD PTR [edx+ecx*1]
  403e34:	je     0x403e9d
  403e36:	inc    esp
  403e37:	scas   eax,DWORD PTR es:[edi]
  403e38:	mov    esi,0xf007968
  403e3d:	je     0x403ddb
  403e3f:	dec    edi
  403e40:	es popf 
  403e42:	es inc ebx
  403e44:	dec    ebx
  403e45:	dec    ecx
  403e46:	scas   eax,DWORD PTR es:[edi]
  403e47:	push   ds
  403e48:	mov    esp,0xf5e88e66
  403e4d:	(bad)  
  403e4e:	inc    esi
  403e4f:	loop   0x403e58
  403e51:	sbb    eax,0x94516c0a
  403e56:	std    
  403e57:	xchg   esi,eax
  403e58:	push   ecx
  403e59:	inc    esp
  403e5a:	dec    esp
  403e5b:	sbb    esp,DWORD PTR [ebp+0x73]
  403e5e:	add    BYTE PTR [ecx+0x2c],0xbb
  403e62:	repz repz xor DWORD PTR [edx-0x5e],ebx
  403e67:	(bad)  
  403e68:	push   edi
  403e69:	pop    esp
  403e6a:	sahf   
  403e6b:	xlat   BYTE PTR ds:[ebx]
  403e6c:	imul   esi,DWORD PTR ss:[edx],0x6f765152
  403e73:	and    BYTE PTR [eax+ebp*8+0x2c13592c],0x4c
  403e7b:	or     DWORD PTR [ecx-0x50526725],esi
  403e81:	sbb    esp,esp
  403e83:	scas   eax,DWORD PTR es:[edi]
  403e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e85:	retf   
  403e86:	dec    esi
  403e87:	jbe    0x403e28
  403e89:	lods   eax,DWORD PTR ds:[esi]
  403e8a:	mov    dh,0x12
  403e8c:	sbb    eax,0x9b600704
  403e91:	ret    
  403e92:	push   eax
  403e93:	mov    ds:0xcf0cd226,eax
  403e98:	jnp    0x403e81
  403e9a:	pushf  
  403e9b:	sub    al,0x5e
  403e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e9e:	add    ah,BYTE PTR [ebp-0x618a67a6]
  403ea4:	and    esp,esp
  403ea6:	ret    0xac6c
  403ea9:	fsub   st(3),st
  403eab:	adc    ebx,DWORD PTR [edi-0x78]
  403eae:	pop    ecx
  403eaf:	and    BYTE PTR [ebx+eax*1+0x7b],bl
  403eb3:	and    bh,BYTE PTR [eax]
  403eb5:	pop    esi
  403eb6:	and    ecx,0xa
  403eb9:	pop    edi
  403eba:	pusha  
  403ebb:	addr16 clc 
  403ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ebe:	jecxz  0x403f02
  403ec0:	shr    ch,cl
  403ec2:	adc    BYTE PTR [eax+esi*2-0x5e6bebed],cl
  403ec9:	xchg   esi,eax
  403eca:	adc    DWORD PTR [ebx+ebp*1+0x1228b684],esi
  403ed1:	inc    ecx
  403ed2:	ds adc eax,0xabe470bc
  403ed8:	pop    ebp
  403ed9:	leave  
  403eda:	pusha  
  403edb:	mov    esi,0x351d7aca
  403ee0:	pop    ds
  403ee1:	icebp  
  403ee2:	sbb    eax,edi
  403ee4:	push   edx
  403ee5:	jmp    0x403e78
  403ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee8:	out    dx,eax
  403ee9:	xchg   ebp,eax
  403eea:	scas   eax,DWORD PTR es:[edi]
  403eeb:	(bad)  
  403eec:	repz jp 0x403ece
  403eef:	dec    ebp
  403ef0:	jg     0x403f66
  403ef2:	mov    WORD PTR [ebx],cs
  403ef4:	cdq    
  403ef5:	add    edi,DWORD PTR [edi-0x580cf92a]
  403efb:	and    al,0xc
  403efd:	push   ebp
  403efe:	push   ds
  403eff:	rcl    DWORD PTR [edx+ecx*1],cl
  403f02:	clc    
  403f03:	es mov dh,0x48
  403f06:	(bad)  
  403f07:	xchg   esp,eax
  403f08:	push   ebx
  403f09:	leave  
  403f0a:	inc    eax
  403f0b:	and    DWORD PTR [ecx],0x4a
  403f0e:	(bad)  
  403f0f:	stos   DWORD PTR es:[edi],eax
  403f10:	scas   al,BYTE PTR es:[edi]
  403f11:	push   edi
  403f12:	in     al,0x99
  403f14:	out    dx,eax
  403f15:	out    dx,al
  403f16:	and    BYTE PTR [ebp+0x2e],al
  403f19:	fisttp QWORD PTR ss:[eax+0x2e]
  403f1d:	xlat   BYTE PTR ds:[ebx]
  403f1e:	mov    eax,0xa3571c1a
  403f23:	mov    edx,0xcf36d8bd
  403f28:	rcr    ah,0xac
  403f2b:	mov    dh,BYTE PTR [eax]
  403f2d:	jmp    0x403f48
  403f2f:	pslld  mm6,0xe0
  403f33:	test   eax,0x24bd2efc
  403f38:	gs dec eax
  403f3a:	xlat   BYTE PTR ds:[ebx]
  403f3b:	dec    edx
  403f3c:	fwait
  403f3d:	xchg   ebx,eax
  403f3e:	fadd   st(6),st
  403f40:	pop    es
  403f41:	out    0x21,eax
  403f43:	xor    bl,BYTE PTR [edx]
  403f45:	jb     0x403f18
  403f47:	out    0xde,eax
  403f49:	in     eax,dx
  403f4a:	les    ebp,FWORD PTR [edx+esi*4-0x142b74dd]
  403f51:	(bad)
  403f54:	aas    
  403f55:	je     0x403f03
  403f57:	sub    al,0xf1
  403f59:	or     eax,0x994f12f0
  403f5e:	stc    
  403f5f:	add    al,0x6e
  403f61:	cmp    ah,BYTE PTR [esi]
  403f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f64:	int    0x5b
  403f66:	pop    edx
  403f67:	push   0xabb1c3b9
  403f6c:	pop    ds
  403f6d:	push   ss
  403f6e:	in     eax,0xf9
  403f70:	outs   dx,BYTE PTR ds:[esi]
  403f71:	pop    edx
  403f72:	sub    BYTE PTR [edi+0x788d1459],dh
  403f78:	int    0xb9
  403f7a:	add    eax,0x8f9bb48a
  403f7f:	mov    dh,0xdb
  403f81:	dec    ecx
  403f82:	pop    esi
  403f83:	in     eax,0x72
  403f85:	ins    BYTE PTR es:[edi],dx
  403f86:	inc    eax
  403f87:	mov    dl,0xd8
  403f89:	sbb    DWORD PTR [ebp+0x2f],ebx
  403f8c:	(bad)  
  403f8e:	jae    0x403fe1
  403f90:	jbe    0x403f7a
  403f92:	mov    bl,0xf0
  403f94:	fwait
  403f95:	jmp    0x3b1f296a
  403f9a:	mov    ebp,0xa5270dfa
  403f9f:	dec    edi
  403fa0:	dec    eax
  403fa1:	xor    al,BYTE PTR [ebx+0x4a]
  403fa4:	arpl   WORD PTR [esi],bx
  403fa6:	aam    0x2c
  403fa8:	push   0xfa58318
  403fad:	pop    esp
  403fae:	inc    eax
  403faf:	mov    bl,0xc4
  403fb1:	arpl   dx,ax
  403fb3:	fwait
  403fb4:	sub    edx,DWORD PTR [eax-0xed14661]
  403fba:	jp     0x404025
  403fbc:	nop
  403fbd:	add    edi,DWORD PTR [ebp-0x1b5436d]
  403fc3:	icebp  
  403fc4:	pop    ss
  403fc5:	fwait
  403fc6:	and    dl,cl
  403fc8:	xor    DWORD PTR [ecx],eax
  403fca:	fadd   DWORD PTR [eax+0x5b016fb9]
  403fd0:	adc    eax,0x45c47b2f
  403fd5:	jne    0x40401f
  403fd7:	dec    esp
  403fd8:	xchg   edi,eax
  403fd9:	test   eax,0x87da04a1
  403fde:	push   0x47
  403fe0:	loopne 0x403fa7
  403fe2:	js     0x403fd2
  403fe4:	fisubr WORD PTR [eax-0x1701b7b]
  403fea:	les    ecx,FWORD PTR [ecx+edi*2+0x1c06c0f9]
  403ff1:	jge    0x403fe0
  403ff3:	cmovg  edx,DWORD PTR [ebx-0x2731724e]
  403ffa:	addr16 jo 0x403fc2
  403ffd:	xchg   edi,eax
  403ffe:	loope  0x40407e
  404000:	(bad)
  404004:	inc    ebx
  404005:	cmp    dl,BYTE PTR [ecx+eiz*2+0x50]
  404009:	scas   eax,DWORD PTR es:[edi]
  40400a:	add    DWORD PTR [esi],0xd6f4c319
  404010:	outs   dx,DWORD PTR ds:[esi]
  404011:	inc    ecx
  404012:	int3   
  404013:	es or  al,0x75
  404016:	pushf  
  404017:	rcl    BYTE PTR [ecx],0xc8
  40401a:	into   
  40401b:	neg    BYTE PTR [ebx]
  40401d:	cs pushf 
  40401f:	fs ins BYTE PTR es:[edi],dx
  404021:	mov    bh,0x66
  404023:	xor    ah,BYTE PTR [ebx+0x6816bcb]
  404029:	jmp    0xdea6:0x4332cc7b
  404030:	ror    DWORD PTR [ebx+0x2c],cl
  404033:	lock sub BYTE PTR [esi+0x53091fb],0x7e
  40403b:	push   edi
  40403c:	add    eax,0x8b9794b9
  404041:	imul   esp,DWORD PTR [edi-0x66],0x14
  404045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404046:	xchg   dh,ch
  404048:	cmp    al,BYTE PTR [ebp-0x73]
  40404b:	(bad)  
  40404c:	ss cmp eax,0x5eb04b80
  404052:	adc    eax,0x3b18e8d3
  404057:	push   cs
  404058:	inc    edx
  404059:	(bad)  
  40405b:	out    dx,eax
  40405c:	not    BYTE PTR [edx-0x43]
  40405f:	mov    cl,0xd0
  404061:	sub    BYTE PTR [edx-0x9c35a0b],ch
  404067:	out    dx,al
  404068:	(bad)  [ebx+0x24bfb654]
  40406e:	(bad)  
  40406f:	out    dx,eax
  404070:	loope  0x403fff
  404072:	clc    
  404073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404074:	cld    
  404075:	ins    DWORD PTR es:[edi],dx
  404076:	shl    BYTE PTR [esp+esi*2+0x2b],cl
  40407a:	cmp    bh,BYTE PTR [esi]
  40407c:	cwde   
  40407d:	mov    ch,0xe
  40407f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404080:	pusha  
  404081:	push   ebx
  404082:	lahf   
  404083:	out    0x6,al
  404085:	and    BYTE PTR [esp+eax*2+0x13a7b2e5],cl
  40408c:	ror    DWORD PTR [edx+ebp*2+0x1d],0x6d
  404091:	mov    al,ds:0xe39bfafe
  404096:	mov    eax,0xfcd28965
  40409b:	dec    edx
  40409c:	inc    esi
  40409d:	push   edx
  40409e:	cmp    esp,ecx
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	sub    bh,bl
  4040a3:	sub    dl,bh
  4040a5:	push   ss
  4040a6:	cmp    DWORD PTR [eax-0x28],esp
  4040a9:	inc    ebx
  4040aa:	pop    esi
  4040ab:	int    0x44
  4040ad:	ins    BYTE PTR es:[edi],dx
  4040ae:	or     ah,BYTE PTR [edi+0x426356f1]
  4040b4:	sbb    esi,DWORD PTR [esi]
  4040b6:	scas   eax,DWORD PTR es:[edi]
  4040b7:	mov    cl,0xfc
  4040b9:	add    eax,0xfb08cecf
  4040be:	pop    ds
  4040bf:	jmp    0x4040ec
  4040c1:	inc    ebp
  4040c2:	int3   
  4040c3:	push   edx
  4040c4:	cmp    DWORD PTR [ebp+edx*4+0x77],edi
  4040c8:	pop    eax
  4040c9:	(bad)  
  4040ca:	neg    DWORD PTR [edx+0x47f926a7]
  4040d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d1:	stos   BYTE PTR es:[edi],al
  4040d2:	adc    DWORD PTR ss:[edx+0x7a],esp
  4040d6:	push   cs
  4040d7:	xor    eax,DWORD PTR [ecx]
  4040d9:	pop    ecx
  4040da:	sbb    cl,bh
  4040dc:	frstor [ebx-0x3e]
  4040df:	cmp    al,0x70
  4040e1:	fucomp st(3)
  4040e3:	test   al,0x43
  4040e5:	adc    dl,BYTE PTR [eax+0x6b50ce78]
  4040eb:	(bad)  
  4040ec:	mov    WORD PTR [esi-0x1c],?
  4040ef:	push   cs
  4040f0:	dec    esp
  4040f1:	inc    ecx
  4040f2:	push   ecx
  4040f3:	jl     0x404097
  4040f5:	inc    eax
  4040f6:	fist   WORD PTR [ecx]
  4040f8:	mov    bl,0x6d
  4040fa:	ror    BYTE PTR [esi-0x4565be72],0xd7
  404101:	fisubr WORD PTR ds:0x936ac76d
  404107:	mov    DWORD PTR [ebp-0x73bff0e8],0xcaa355e5
  404111:	mov    ebp,0x5a986d24
  404116:	xor    edx,edx
  404118:	jmp    0x394634dc
  40411d:	leave  
  40411e:	pop    ecx
  40411f:	jge    0x4040d6
  404121:	cs (bad) 
  404124:	ror    DWORD PTR [ecx+0x7605aa1e],0x9e
  40412b:	add    al,0x36
  40412d:	lds    ecx,FWORD PTR [edx-0x1725d5f9]
  404133:	mov    bh,0x12
  404135:	inc    ebp
  404136:	xor    al,bh
  404138:	jmp    0x4040fb
  40413a:	sbb    ch,BYTE PTR [ebp+0x23]
  40413d:	loopne 0x40415c
  40413f:	pushf  
  404140:	dec    esp
  404141:	(bad)  
  404142:	sub    al,0xff
  404144:	cs xchg esp,eax
  404146:	sbb    DWORD PTR [eax-0x18263c35],esp
  40414c:	xchg   edx,eax
  40414d:	dec    edx
  40414e:	adc    cl,BYTE PTR [ecx]
  404150:	pop    ebp
  404151:	sbb    DWORD PTR [ebx-0x62fb2d23],edx
  404157:	aaa    
  404158:	test   eax,0xc1efff47
  40415d:	xchg   ecx,eax
  40415e:	addr16 pusha 
  404160:	sbb    ebx,DWORD PTR es:[ebx-0x63eb8545]
  404167:	bound  esp,QWORD PTR [ecx-0x3af35d66]
  40416d:	pop    edx
  40416e:	addr16 pop ebx
  404170:	mov    bl,0x70
  404172:	push   es
  404173:	jns    0x4041e1
  404175:	gs and esp,edi
  404178:	inc    edx
  404179:	xchg   edi,eax
  40417b:	sbb    BYTE PTR [ebx],bl
  40417d:	bound  esi,QWORD PTR [esi-0x387150c1]
  404183:	push   ds
  404184:	mov    DWORD PTR [edi+0x70803c21],0xc22a9536
  40418e:	pushf  
  40418f:	mov    BYTE PTR [ecx],cl
  404191:	sub    ebx,eax
  404193:	sub    BYTE PTR [ecx+0x5c],dh
  404196:	jno    0x40413c
  404198:	in     eax,dx
  404199:	es ins BYTE PTR es:[edi],dx
  40419b:	adc    al,0xae
  40419d:	in     al,dx
  40419e:	pop    es
  40419f:	mov    eax,ss
  4041a1:	retf   0x91af
  4041a4:	(bad)  
  4041a7:	ror    DWORD PTR [edx+eiz*8-0x31d0cd4a],0x64
  4041af:	xor    bl,BYTE PTR [eax+0xc]
  4041b2:	aam    0x11
  4041b4:	dec    esp
  4041b5:	repz inc esp
  4041b7:	mov    ah,0xa
  4041b9:	dec    esp
  4041ba:	push   ds
  4041bb:	scas   eax,DWORD PTR es:[edi]
  4041bc:	adc    BYTE PTR [ebx-0x7a93ef6f],cl
  4041c2:	lods   al,BYTE PTR ds:[esi]
  4041c3:	sbb    esi,ebp
  4041c5:	mov    ah,0x0
  4041c7:	das    
  4041c8:	std    
  4041c9:	push   ebp
  4041ca:	call   0xefee:0xc56a9fb6
  4041d1:	jecxz  0x40424f
  4041d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d4:	sub    ebx,DWORD PTR [esi-0x72]
  4041d7:	push   cs
  4041d8:	xchg   BYTE PTR [eax],dl
  4041da:	add    eax,0x6a8e0a54
  4041df:	mov    al,ds:0x83358a53
  4041e4:	inc    eax
  4041e5:	jecxz  0x404193
  4041e7:	ret    0xe87d
  4041ea:	clc    
  4041eb:	std    
  4041ec:	aaa    
  4041ed:	ret    0x8ece
  4041f0:	pushf  
  4041f1:	mov    edx,0xada59987
  4041f6:	and    cl,BYTE PTR [esi]
  4041f8:	or     esi,eax
  4041fa:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041fc:	adc    ebp,DWORD PTR [ecx]
  4041fe:	xchg   edi,eax
  4041ff:	and    BYTE PTR [ebp+0x3c],cl
  404202:	pop    ebx
  404203:	adc    esp,DWORD PTR [edx+0x11]
  404206:	mov    esp,0xd917f917
  40420b:	retf   
  40420c:	dec    edx
  40420d:	into   
  40420e:	bound  ebx,QWORD PTR [edx-0x4694beda]
  404214:	cmp    al,0xf7
  404216:	cmp    BYTE PTR [edi-0x30528b3c],al
  40421c:	scas   eax,DWORD PTR es:[edi]
  40421d:	inc    eax
  40421e:	sub    BYTE PTR [esi],cl
  404220:	ret    
  404221:	mov    bh,0xea
  404223:	test   BYTE PTR [edi+esi*8-0x36],bh
  404227:	lea    edi,[ecx+eiz*2+0x6c59266b]
  40422e:	rcr    DWORD PTR [ecx+0x7b],0xc
  404232:	add    al,0xed
  404234:	xlat   BYTE PTR ds:[ebx]
  404235:	fsub   DWORD PTR [ebx+0x24b5ce27]
  40423b:	mov    ebp,ebp
  40423d:	xchg   esp,eax
  40423e:	(bad)  
  40423f:	aam    0x6d
  404241:	mov    ch,ah
  404243:	sbb    DWORD PTR ds:0xb9610139,edi
  404249:	lea    ebx,[eax+0x7]
  40424c:	push   ds
  40424d:	add    DWORD PTR [esi-0x17],eax
  404250:	pop    esi
  404251:	mov    dl,0x3
  404253:	(bad)  
  404254:	or     bl,al
  404256:	ret    0xb6dd
  404259:	arpl   bx,dx
  40425b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40425c:	daa    
  40425d:	dec    esi
  40425e:	push   es
  40425f:	jge    0x404207
  404261:	pop    ebp
  404262:	sub    eax,0xf462509f
  404267:	inc    esi
  404268:	add    DWORD PTR [esi-0x538750b],ecx
  40426e:	cld    
  40426f:	cmp    ah,bl
  404271:	add    DWORD PTR [esi+0x73511ccf],0x47
  404278:	cli    
  404279:	inc    eax
  40427a:	jge    0x4042be
  40427c:	test   eax,0xbb3628d
  404281:	fcomp  DWORD PTR [esp+eiz*4]
  404284:	arpl   WORD PTR [ecx-0x10fa4bd6],ax
  40428a:	es mov eax,0xa1b3c893
  404290:	jne    0x40430b
  404292:	cli    
  404293:	push   ecx
  404294:	fstp   QWORD PTR [ebx]
  404296:	mov    eax,0x41260c98
  40429b:	inc    edx
  40429c:	icebp  
  40429d:	adc    ebp,ebp
  40429f:	pusha  
  4042a0:	jge    0x4042ec
  4042a2:	dec    esi
  4042a3:	mov    ebx,0xf23ff216
  4042a8:	inc    edx
  4042a9:	stos   DWORD PTR es:[edi],eax
  4042aa:	dec    edx
  4042ab:	popf   
  4042ac:	iret   
  4042ad:	(bad)  
  4042ae:	(bad)  
  4042af:	lods   eax,DWORD PTR ds:[esi]
  4042b0:	mov    dh,0x17
  4042b2:	pop    ebx
  4042b3:	add    ch,BYTE PTR [ecx-0x2e]
  4042b6:	bound  edx,QWORD PTR [edx-0x40]
  4042b9:	stos   BYTE PTR es:[edi],al
  4042ba:	sub    DWORD PTR [esi-0x47c63294],eax
  4042c0:	mov    edi,0x898ccbdf
  4042c5:	arpl   WORD PTR [edx],ax
  4042c7:	xor    eax,ebp
  4042c9:	mov    al,ds:0x37f9be1b
  4042ce:	or     edi,ebx
  4042d0:	lods   eax,DWORD PTR ds:[esi]
  4042d1:	mov    dh,0xb7
  4042d3:	sub    BYTE PTR [edx+0x3fd2db35],dl
  4042d9:	outs   dx,DWORD PTR ds:[esi]
  4042da:	push   ss
  4042db:	popf   
  4042dc:	push   edi
  4042dd:	pop    es
  4042de:	(bad)  
  4042df:	(bad)  
  4042e0:	adc    al,0xc2
  4042e2:	cli    
  4042e3:	jo     0x404295
  4042e5:	inc    ecx
  4042e6:	stos   BYTE PTR es:[edi],al
  4042e7:	pusha  
  4042e8:	aam    0xa0
  4042ea:	call   0xb225:0xa13a5a4b
  4042f1:	adc    ecx,0x29
  4042f4:	or     ch,BYTE PTR ds:0x5c4e0902
  4042fa:	or     eax,DWORD PTR [esi]
  4042fc:	mov    al,ds:0xe3757a1d
  404301:	sub    al,0x58
  404303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404304:	dec    BYTE PTR [edx+0x72986aff]
  40430a:	retf   
  40430b:	xor    al,0xd7
  40430d:	pop    ss
  40430e:	add    BYTE PTR [ecx+0x52],dl
  404311:	(bad)  
  404313:	adc    DWORD PTR ds:0xf3888e7f,ebp
  404319:	ja     0x404303
  40431b:	mov    ebx,0x4a6f2547
  404320:	sbb    al,BYTE PTR [ebx-0x9]
  404323:	pop    edx
  404324:	test   DWORD PTR [eax+eiz*2+0x2d],0x31ebb747
  40432c:	jnp    0x4042bf
  40432e:	jne    0x4042fd
  404330:	stc    
  404331:	pop    ds
  404332:	iret   
  404333:	mov    ebp,edi
  404335:	jg     0x4042cf
  404337:	pushf  
  404338:	inc    edi
  404339:	(bad)  
  40433b:	jle    0x404347
  40433d:	outs   dx,BYTE PTR ds:[esi]
  40433e:	es xchg esi,eax
  404340:	(bad)  [edx+ecx*4-0x71]
  404344:	ret    
  404345:	enter  0x4d8b,0xec
  404349:	mov    DWORD PTR ds:0x42299a,0x6672
  404353:	cmp    eax,DWORD PTR [ecx]
  404355:	mov    DWORD PTR ds:0x42289a,0xce0
  40435f:	jne    0x4044cf
  404365:	or     eax,DWORD PTR ds:0x422922
  40436b:	mov    eax,DWORD PTR [ebp-0xc]
  40436e:	cmp    DWORD PTR ds:0x4229ce,0x0
  404375:	mov    ecx,DWORD PTR ds:0x4229b2
  40437b:	not    ecx
  40437d:	jmp    0x4043e2
  404382:	mov    DWORD PTR ds:0x4228ce,0x6b59
  40438c:	mov    DWORD PTR ds:0x4228a6,edi
  404392:	jb     0x4043a7
  404398:	push   0x82d3
  40439d:	call   DWORD PTR ds:0x42a010
  4043a3:	xor    ecx,ecx
  4043a5:	adc    edx,ecx
  4043a7:	or     DWORD PTR ds:0x422992,0x7718
  4043b1:	mov    ecx,DWORD PTR ds:0x422a76
  4043b7:	mov    edx,DWORD PTR ds:0x422ade
  4043bd:	sub    ecx,edx
  4043bf:	xor    ecx,DWORD PTR [ecx+edx*1]
  4043c2:	mov    ecx,DWORD PTR ds:0x4229fe
  4043c8:	xor    edx,edx
  4043ca:	or     edx,DWORD PTR ds:0x422ace
  4043d0:	sub    edx,ecx
  4043d2:	sub    ecx,DWORD PTR [ecx+edx*1]
  4043d5:	movzx  edx,BYTE PTR ds:0x42292e
  4043dc:	add    DWORD PTR ds:0x4229a2,edx
  4043e2:	mov    ecx,DWORD PTR [ebp+0x20]
  4043e5:	movzx  edx,WORD PTR ds:0x4229ba
  4043ec:	or     edx,DWORD PTR ds:0x4229b2
  4043f2:	mov    DWORD PTR ds:0x4229ba,edx
  4043f8:	xor    DWORD PTR [eax],ecx
  4043fa:	mov    eax,DWORD PTR [ebp-0xc]
  4043fd:	mov    ecx,DWORD PTR [ebp+0x18]
  404400:	adc    DWORD PTR ds:0x422992,0x4b0d
  40440a:	mov    edx,DWORD PTR [ebp+0x1c]
  40440d:	shrd   ecx,edx,0x2
  404411:	and    DWORD PTR ds:0x4229ba,0x18b0
  40441b:	mov    DWORD PTR [ebp-0x14],ecx
  40441e:	add    ecx,0x56bc
  404424:	mov    ecx,DWORD PTR [ebp+0x18]
  404427:	xor    DWORD PTR [ebp-0x14],edi
  40442a:	sbb    DWORD PTR ds:0x42291e,0x4252
  404434:	shr    edx,0x2
  404437:	mov    edx,DWORD PTR [ebp+0x1c]
  40443a:	add    DWORD PTR ds:0x4228ce,0x42299e
  404444:	xor    edx,edx
  404446:	and    DWORD PTR ds:0x4228d6,0x4228ea
  404450:	or     edx,DWORD PTR [ebp-0x14]
  404453:	add    DWORD PTR ds:0x42289e,0x4229a2
  40445d:	shl    ecx,0x1e
  404460:	cmp    DWORD PTR ds:0x42294e,0x0
  404467:	mov    ecx,0x1e7
  40446c:	mov    DWORD PTR ds:0x4228ba,0x3be7
  404476:	mov    DWORD PTR ds:0x4229a2,edx
  40447c:	mov    ecx,0x41a9
  404481:	jmp    0x4044cd
  404486:	mov    DWORD PTR ds:0x42297a,0x6783
  404490:	mov    DWORD PTR ds:0x4228ee,0x5319
  40449a:	jl     0x4044b5
  4044a0:	push   DWORD PTR [ebp-0x18]
  4044a3:	call   DWORD PTR ds:0x42a014
  4044a9:	or     ecx,DWORD PTR ds:0x42290e
  4044af:	xor    DWORD PTR ds:0x4228d6,ebx
  4044b5:	xor    DWORD PTR ds:0x4229b2,0x1ac5
  4044bf:	inc    DWORD PTR ds:0x422956
  4044c5:	add    ecx,0x7d03
  4044cb:	not    ecx
  4044cd:	sub    DWORD PTR [eax],edx
  4044cf:	mov    eax,ds:0x4220e0
  4044d4:	mov    ecx,DWORD PTR [ebp-0xc]
  4044d7:	sbb    edx,DWORD PTR ds:0x4228c2
  4044dd:	mov    eax,DWORD PTR [eax]
  4044df:	add    eax,DWORD PTR [ecx]
  4044e1:	mov    edx,DWORD PTR ds:0x42297e
  4044e7:	and    edx,DWORD PTR ds:0x42288e
  4044ed:	mov    DWORD PTR ds:0x42297e,edx
  4044f3:	mov    DWORD PTR [ebp-0x14],eax
  4044f6:	mov    ecx,DWORD PTR [ebx]
  4044f8:	or     DWORD PTR ds:0x422922,edx
  4044fe:	mov    eax,DWORD PTR [ebx+0x4]
  404501:	xor    DWORD PTR ds:0x42299e,ebx
  404507:	jmp    0x404a91
  40450c:	xlat   BYTE PTR ds:[ebx]
  40450d:	mov    edi,0x38f472f4
  404512:	push   eax
  404513:	xor    dl,BYTE PTR [eax-0x7a97dd72]
  404519:	nop
  40451a:	push   ds
  40451b:	test   al,0x87
  40451d:	rcl    DWORD PTR [esi],0x16
  404520:	cmp    eax,0x1161604
  404525:	icebp  
  404526:	in     eax,0x1f
  404528:	add    al,0x6a
  40452a:	aam    0xaf
  40452c:	aad    0x34
  40452e:	mov    al,ds:0x263b41c5
  404533:	(bad)  
  404535:	jl     0x4044d6
  404537:	dec    esp
  404538:	push   ss
  404539:	cwde   
  40453a:	out    0x9e,eax
  40453c:	dec    esp
  40453d:	inc    ecx
  40453e:	mov    bl,0x60
  404540:	push   ecx
  404541:	js     0x404571
  404543:	fnstsw WORD PTR [edx+edx*2-0x25]
  404547:	sub    dl,al
  404549:	add    al,0xaa
  40454b:	popa   
  40454c:	mov    cl,0x78
  40454e:	(bad)  
  40454f:	lods   eax,DWORD PTR ds:[esi]
  404550:	cld    
  404551:	inc    ecx
  404552:	jmp    0x404599
  404554:	mov    esi,DWORD PTR [ecx]
  404556:	cwde   
  404557:	out    0xb3,al
  404559:	(bad)  
  40455a:	cmp    ch,dl
  40455c:	jnp    0x404524
  40455e:	adc    BYTE PTR [esi],cl
  404560:	imul   DWORD PTR [ebx+0x51]
  404563:	inc    esi
  404564:	xor    ah,BYTE PTR [edx]
  404566:	xchg   edi,eax
  404567:	push   0xffffffe7
  404569:	xchg   edx,eax
  40456a:	je     0x4045b7
  40456c:	mov    cl,0xa8
  40456e:	cld    
  40456f:	sub    esp,eax
  404571:	fisubr DWORD PTR [eax-0x1ca31337]
  404577:	adc    ecx,0x61c66917
  40457d:	sub    eax,0x7a97aa97
  404582:	mov    ch,BYTE PTR [edi+0x7b63e38c]
  404588:	xchg   edx,eax
  404589:	add    eax,0x718e9b86
  40458e:	pop    eax
  40458f:	inc    edx
  404590:	das    
  404591:	pop    edx
  404592:	out    0x2f,eax
  404594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404595:	loop   0x404521
  404597:	and    esi,DWORD PTR [ebx+0x284660f3]
  40459d:	in     al,dx
  40459e:	call   0xf6a40e1e
  4045a3:	mov    dl,0x22
  4045a5:	das    
  4045a6:	icebp  
  4045a7:	add    al,0xe6
  4045a9:	xor    al,0x9d
  4045ab:	fnstcw WORD PTR [ebx-0x6f]
  4045ae:	stc    
  4045af:	(bad)  
  4045b0:	xchg   ebx,eax
  4045b1:	shl    BYTE PTR [ebx-0x3],1
  4045b4:	jecxz  0x404616
  4045b6:	inc    ecx
  4045b7:	xchg   esi,eax
  4045b8:	dec    edx
  4045b9:	mov    dh,dh
  4045bb:	pop    ds
  4045bc:	xchg   ebp,eax
  4045bd:	retf   
  4045be:	cmp    DWORD PTR [ecx-0x564abc8b],esp
  4045c4:	xchg   bl,ch
  4045c6:	add    BYTE PTR [ebp+0x7bcbd1b7],0x4e
  4045cd:	fst    DWORD PTR [eax-0x38]
  4045d0:	and    BYTE PTR [edi],ch
  4045d2:	jb     0x404635
  4045d4:	sti    
  4045d5:	cmp    al,0xcb
  4045d7:	inc    ebp
  4045d8:	loopne 0x404656
  4045da:	js     0x40461b
  4045dc:	push   ecx
  4045dd:	cdq    
  4045de:	xlat   BYTE PTR ds:[bx]
  4045e0:	cdq    
  4045e1:	push   ecx
  4045e2:	ja     0x40461c
  4045e4:	loopne 0x40460c
  4045e6:	test   DWORD PTR [edi+0x2a830a68],edx
  4045ec:	ins    DWORD PTR es:[edi],dx
  4045ed:	xor    BYTE PTR [esp+esi*1+0x6c9e50cc],0x85
  4045f5:	stc    
  4045f6:	pushf  
  4045f7:	into   
  4045f8:	cli    
  4045f9:	rol    DWORD PTR [esi-0x243bfcd9],1
  4045ff:	cli    
  404600:	adc    bh,cl
  404602:	mov    dl,0x6e
  404604:	and    BYTE PTR [edx-0x68],0x31
  404608:	mov    al,0xda
  40460a:	cmc    
  40460b:	es xor ch,bl
  40460e:	imul   ch
  404610:	adc    eax,0xb75ecdeb
  404615:	retw   
  404617:	and    ebp,edi
  404619:	out    dx,al
  40461a:	int3   
  40461b:	sub    dh,dl
  40461d:	popf   
  40461e:	mov    edi,0x571e5980
  404623:	enter  0xc3dd,0xa0
  404627:	pop    ebx
  404628:	std    
  404629:	push   ebp
  40462a:	loopne 0x4045db
  40462c:	cmp    DWORD PTR [esi+ebp*4+0x3702d51b],ebx
  404633:	mov    esp,0xf0681f4c
  404638:	ss jo  0x4045fb
  40463b:	faddp  st(6),st
  40463d:	mov    ebx,0xda282ffc
  404642:	fist   WORD PTR [ecx-0x71]
  404645:	jnp    0x4045e0
  404647:	out    0xdc,eax
  404649:	fst    DWORD PTR [eax+0x14224f03]
  40464f:	pop    edx
  404650:	das    
  404651:	(bad)  
  404652:	xor    eax,0xb9bdadcc
  404657:	outs   dx,DWORD PTR ds:[esi]
  404658:	fs enter 0x5529,0x39
  40465d:	xor    dh,ah
  40465f:	push   0xffffff87
  404661:	adc    BYTE PTR [edi-0x3f],cl
  404664:	mov    ebp,eax
  404666:	nop
  404667:	test   eax,0xa84eb244
  40466c:	or     al,0xa7
  40466e:	add    al,0x96
  404670:	(bad)  
  404671:	jae    0x4046dc
  404673:	(bad)  
  404675:	dec    eax
  404676:	imul   edi,esi,0x47
  404679:	test   eax,0x6c60c71
  40467e:	mov    cl,0xa9
  404680:	fstp   st(5)
  404682:	es jne 0x404653
  404685:	jbe    0x4046ec
  404687:	into   
  404688:	mov    bl,0x8b
  40468a:	pop    esp
  40468b:	(bad)  
  40468c:	dec    edi
  40468d:	cmp    ah,BYTE PTR [eax]
  40468f:	add    eax,0x3537ab77
  404694:	retf   0x8676
  404697:	sar    BYTE PTR [esi-0x3e],1
  40469a:	sub    al,ch
  40469c:	mov    al,ds:0x53c2de5a
  4046a1:	(bad)  
  4046a3:	rcr    DWORD PTR gs:[ebx-0xa],cl
  4046a7:	stos   BYTE PTR es:[edi],al
  4046a8:	loope  0x40462b
  4046aa:	test   al,0x2a
  4046ac:	cld    
  4046ad:	fimul  DWORD PTR [ecx+edx*8+0x7ca1d111]
  4046b4:	jl     0x404721
  4046b6:	xchg   WORD PTR [ebp-0x59],si
  4046ba:	jo     0x4046ff
  4046bc:	lods   al,BYTE PTR ds:[esi]
  4046bd:	jbe    0x4046c9
  4046bf:	sbb    eax,DWORD PTR [ebx+0x6540243e]
  4046c5:	push   eax
  4046c6:	sub    al,0x16
  4046c8:	mov    cl,0x8c
  4046ca:	daa    
  4046cb:	mov    ecx,0xecad1d71
  4046d0:	mov    bh,0x67
  4046d2:	ins    BYTE PTR es:[edi],dx
  4046d3:	mov    ah,0xae
  4046d5:	dec    edi
  4046d6:	push   ebp
  4046d7:	enter  0x391f,0x3a
  4046db:	cs (bad) 
  4046dd:	sub    cl,BYTE PTR [ecx+0x31]
  4046e0:	cmp    esp,DWORD PTR [edx]
  4046e2:	ret    
  4046e3:	rcr    eax,cl
  4046e5:	out    dx,al
  4046e6:	fisub  WORD PTR [edi+0xe6127fb]
  4046ec:	(bad)  
  4046ed:	aaa    
  4046ee:	mov    esp,0x34e13eb
  4046f3:	inc    esi
  4046f4:	ficomp DWORD PTR [edi-0x26]
  4046f7:	mov    cl,0xa0
  4046f9:	sti    
  4046fa:	adc    BYTE PTR [ecx],ch
  4046fc:	dec    edi
  4046fd:	jb     0x404774
  4046ff:	inc    edi
  404700:	ret    
  404701:	rol    eax,0x98
  404704:	push   eax
  404705:	dec    esp
  404706:	jg     0x404700
  404708:	iret   
  404709:	aaa    
  40470a:	adc    BYTE PTR [ebp+0x7d17f931],0x7e
  404711:	repnz lods eax,DWORD PTR ds:[esi]
  404713:	ss shr ah,1
  404716:	and    al,BYTE PTR [edx+0x34]
  404719:	dec    esp
  40471a:	out    dx,eax
  40471b:	addr16 clc 
  40471d:	mov    ecx,0x73366d6c
  404722:	stos   BYTE PTR es:[edi],al
  404723:	(bad)  
  404725:	dec    ecx
  404726:	rcr    BYTE PTR [ecx+0x3e0ecad5],1
  40472c:	lea    eax,gs:0x41d5f02b
  404733:	imul   ebp,edx,0x2669d71f
  404739:	ja     0x4047b3
  40473b:	test   eax,0x694a7983
  404740:	fs add eax,0x516f609d
  404746:	fwait
  404747:	sbb    cl,bl
  404749:	push   ebp
  40474a:	pushf  
  40474b:	mov    BYTE PTR [ebx],al
  40474d:	js     0x404722
  40474f:	xchg   ebp,eax
  404751:	stos   DWORD PTR es:[edi],eax
  404752:	out    dx,al
  404753:	dec    esi
  404754:	test   al,0x93
  404756:	cmp    cl,bl
  404758:	test   BYTE PTR [edi-0x4499cf10],ah
  40475e:	xor    dh,bl
  404760:	ror    esp,0xbc
  404763:	inc    ecx
  404764:	mov    eax,ds:0x7462036f
  404769:	lock mov esi,0x80dd455e
  40476f:	daa    
  404770:	aaa    
  404771:	out    0x17,al
  404773:	add    DWORD PTR [edx-0x2881b449],0xf221ac08
  40477d:	ret    
  40477e:	inc    esp
  40477f:	and    BYTE PTR [ebx+0x72403de6],al
  404785:	fsubr  st,st(3)
  404787:	mov    edx,0x74e76472
  40478c:	push   ecx
  40478d:	sub    bl,BYTE PTR [ecx]
  40478f:	out    dx,eax
  404790:	mov    edx,0x1f2b1530
  404795:	push   ebp
  404796:	pop    edi
  404797:	js     0x404720
  404799:	ds pop ebx
  40479b:	into   
  40479c:	(bad)  
  40479f:	dec    edi
  4047a0:	xchg   ebp,eax
  4047a1:	mov    ch,0xa4
  4047a3:	stos   BYTE PTR es:[edi],al
  4047a4:	jp     0x40480a
  4047a6:	fcmovnb st,st(4)
  4047a8:	sub    BYTE PTR [edx+0x54],0x10
  4047ac:	jmp    0x24f:0x514e16a9
  4047b3:	cli    
  4047b4:	dec    ebp
  4047b5:	scas   eax,DWORD PTR es:[edi]
  4047b6:	bswap  edi
  4047b8:	or     eax,0xd9698bbe
  4047bd:	sub    al,0x34
  4047bf:	mov    al,ds:0x5cfb499a
  4047c4:	sti    
  4047c5:	outs   dx,DWORD PTR ds:[esi]
  4047c6:	enter  0xbc62,0x84
  4047ca:	pop    ecx
  4047cb:	cli    
  4047cc:	or     eax,0xddf12a11
  4047d1:	inc    ecx
  4047d2:	pop    ebp
  4047d3:	and    al,0x4
  4047d5:	dec    esi
  4047d7:	jnp    0x40475f
  4047d9:	add    al,0xbd
  4047db:	xor    DWORD PTR [ebx-0x50],esi
  4047de:	mov    al,0x4a
  4047e0:	in     al,dx
  4047e1:	jecxz  0x40481c
  4047e3:	scas   eax,DWORD PTR es:[edi]
  4047e4:	repnz add DWORD PTR [ebp+0x68],esi
  4047e8:	cmp    ah,BYTE PTR [eax+0x4f]
  4047eb:	mov    edx,0x2caf14b5
  4047f0:	fs icebp 
  4047f2:	dec    edx
  4047f3:	rcl    DWORD PTR [ebp-0x1c],0x13
  4047f7:	dec    ecx
  4047f8:	nop
  4047f9:	mov    WORD PTR [eax-0x77],gs
  4047fc:	les    eax,FWORD PTR [ebx-0x6e]
  4047ff:	cmp    DWORD PTR [ecx+0x15],ebp
  404802:	int3   
  404803:	sbb    esp,DWORD PTR [esi-0x71]
  404806:	sti    
  404807:	(bad)  
  404808:	sbb    ah,bh
  40480a:	pop    edx
  40480b:	add    eax,0x8f9919c3
  404810:	sub    al,0x1d
  404812:	outs   dx,DWORD PTR ds:[esi]
  404813:	(bad)  
  404814:	jnp    0x404895
  404816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404817:	shl    BYTE PTR [ebx-0x1c154969],1
  40481d:	pushf  
  40481e:	imul   edx,esi,0xd756db94
  404824:	cmp    eax,0x765d644a
  404829:	add    al,0x96
  40482b:	adc    DWORD PTR [ebx-0x5b],ebp
  40482e:	rol    ebp,1
  404830:	mov    BYTE PTR [edx+edx*1],0x95
  404834:	pop    es
  404835:	push   0xfce13672
  40483a:	dec    ecx
  40483b:	loopne 0x404858
  40483d:	mov    bh,BYTE PTR [ecx+eiz*8+0x59]
  404841:	dec    ecx
  404842:	mov    dl,0x59
  404844:	aaa    
  404845:	adc    eax,0x20c8dfcb
  40484a:	sbb    ebp,DWORD PTR [edi-0x3ad8eff7]
  404850:	ins    DWORD PTR es:[edi],dx
  404851:	and    ch,bl
  404853:	nop
  404854:	xchg   ebx,eax
  404855:	leave  
  404856:	pop    ecx
  404857:	inc    esp
  404858:	or     ebx,esi
  40485a:	jg     0x40485d
  40485c:	loop   0x40483b
  40485e:	outs   dx,DWORD PTR ds:[esi]
  40485f:	vdivss xmm6,xmm2,xmm2
  404864:	and    esi,edi
  404866:	push   ebx
  404867:	ja     0x4047f1
  404869:	push   eax
  40486a:	push   ebp
  40486b:	fsin   
  40486d:	add    eax,0xe407d3a5
  404872:	mov    edx,0x45c3c014
  404877:	cdq    
  404878:	adc    ecx,DWORD PTR [ecx]
  40487a:	retf   0xd870
  40487d:	inc    esi
  40487e:	push   ebp
  40487f:	or     ecx,DWORD PTR [edx+0x44a8369b]
  404885:	rcr    BYTE PTR [ebp+0x14b92e9e],1
  40488b:	and    bl,dh
  40488d:	xor    al,0x50
  40488f:	aad    0x39
  404891:	jne    0x404903
  404893:	inc    esp
  404894:	add    BYTE PTR [eax+eiz*8+0x7f],bh
  404898:	cdq    
  404899:	or     ah,BYTE PTR [ebp-0x22]
  40489c:	in     eax,0x7
  40489e:	ret    
  40489f:	adc    DWORD PTR [edx],0x1bc24005
  4048a5:	rol    BYTE PTR [ebp+0x5eaad9e7],1
  4048ab:	cmp    BYTE PTR [esi+0x5824fabc],dh
  4048b1:	ins    BYTE PTR es:[edi],dx
  4048b2:	loope  0x404856
  4048b4:	mov    esi,0x1e024676
  4048b9:	and    BYTE PTR [esi+0x65],0xff
  4048bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048be:	pop    eax
  4048bf:	bound  ebx,QWORD PTR [eax-0x79b902a9]
  4048c5:	jae    0x404876
  4048c7:	test   al,0xdf
  4048c9:	add    eax,0xd39febc1
  4048ce:	out    0xec,eax
  4048d0:	push   eax
  4048d1:	adc    esp,DWORD PTR [ebx-0x3b5d0d71]
  4048d7:	in     al,0x63
  4048d9:	ins    BYTE PTR es:[edi],dx
  4048da:	sbb    eax,0xfed67132
  4048df:	shl    DWORD PTR [ebx-0x71a746d1],0x8
  4048e6:	in     al,0x59
  4048e8:	dec    ebx
  4048e9:	and    DWORD PTR [edi-0x19],edi
  4048ec:	cmp    edi,DWORD PTR [edx]
  4048ee:	ret    
  4048ef:	jmp    0x404910
  4048f1:	retf   0x770e
  4048f4:	pop    eax
  4048f5:	xchg   ecx,eax
  4048f6:	imul   esi,DWORD PTR [edx],0xffffff9a
  4048f9:	sub    DWORD PTR [eax+ecx*2-0x3b],0x7d497a46
  404901:	test   BYTE PTR [esi],bl
  404903:	mov    eax,ds:0x856e6510
  404908:	fpatan 
  40490a:	in     eax,0xec
  40490c:	rcl    BYTE PTR ds:0x34646fab,cl
  404912:	mov    ebp,esp
  404914:	jbe    0x404932
  404916:	mov    ds:0x98f0793a,al
  40491b:	pusha  
  40491c:	lds    eax,FWORD PTR [ebx-0x3b2fcc65]
  404922:	or     eax,0x1416bbe4
  404927:	lds    esi,FWORD PTR [edi]
  404929:	add    cl,bl
  40492b:	fwait
  40492c:	cmp    dh,BYTE PTR [bp+si]
  40492f:	inc    esp
  404930:	lds    edx,FWORD PTR [edx+0x1f5f2c35]
  404936:	repz pop esi
  404938:	(bad)  
  404939:	arpl   WORD PTR [edx+0x390c4fa6],ax
  40493f:	fcmove st,st(5)
  404941:	(bad)  
  404942:	aas    
  404943:	or     eax,0x62e9ddb8
  404948:	xchg   edi,eax
  404949:	cmc    
  40494a:	mov    esp,DWORD PTR [eax]
  40494c:	outs   dx,DWORD PTR ds:[esi]
  40494d:	ffree  st(0)
  40494f:	cli    
  404950:	jl     0x4049a3
  404952:	pop    ds
  404953:	in     eax,dx
  404954:	pop    ecx
  404955:	repnz sbb bl,dl
  404958:	loope  0x404950
  40495a:	inc    edi
  40495b:	bswap  esi
  40495d:	and    ebp,ebp
  40495f:	into   
  404960:	mov    edx,0x7a37a275
  404965:	in     al,0x69
  404967:	sub    ch,0xa4
  40496a:	dec    ebp
  40496b:	out    dx,al
  40496c:	pop    edx
  40496d:	add    eax,DWORD PTR [ebx+ebp*4]
  404970:	std    
  404971:	pop    ss
  404972:	mov    ah,0x72
  404974:	out    dx,eax
  404975:	adc    DWORD PTR [edi+esi*8],esp
  404978:	clc    
  404979:	mov    ebx,0xdba33050
  40497e:	or     ecx,DWORD PTR [ebx]
  404980:	inc    edi
  404981:	xchg   ebp,eax
  404982:	fist   WORD PTR [eax+0xe]
  404985:	iret   
  404986:	adc    al,0x60
  404988:	ja     0x67ba7f87
  40498e:	jmp    0x685f:0xb8d9ce1d
  404995:	enter  0x7d54,0xba
  404999:	out    dx,eax
  40499a:	inc    eax
  40499b:	adc    dl,ah
  40499d:	gs in  eax,0xbd
  4049a0:	test   DWORD PTR [edi-0x6f4353be],0x64f45a66
  4049aa:	xor    esi,eax
  4049ac:	into   
  4049ad:	stc    
  4049ae:	xchg   DWORD PTR [ebp+eax*1-0x22],eax
  4049b2:	mov    sp,0xc980
  4049b6:	inc    esi
  4049b7:	repnz inc esi
  4049b9:	add    BYTE PTR [edx],cl
  4049bb:	jl     0x404944
  4049bd:	in     al,0x2
  4049bf:	scas   eax,DWORD PTR es:[edi]
  4049c0:	add    edx,DWORD PTR [ebx-0x35]
  4049c3:	pop    esp
  4049c4:	xlat   BYTE PTR ds:[ebx]
  4049c5:	pop    edx
  4049c6:	xchg   ebp,eax
  4049c7:	mov    esi,0xfe2a95f9
  4049cc:	inc    esi
  4049cd:	mov    bh,0x38
  4049cf:	cld    
  4049d0:	push   ax
  4049d2:	out    0x76,al
  4049d4:	retf   
  4049d5:	dec    ebp
  4049d6:	shl    BYTE PTR ds:0x8a42e7dc,1
  4049dc:	push   esp
  4049dd:	push   0x19f6a67
  4049e2:	mov    ah,0x5a
  4049e4:	test   al,0xd9
  4049e6:	xor    DWORD PTR [edi-0xe2da7db],0x1cdd9d60
  4049f0:	ret    
  4049f1:	lahf   
  4049f2:	mov    ds:0x979abccb,al
  4049f7:	inc    edi
  4049f8:	push   ds
  4049f9:	mov    al,0x83
  4049fb:	mov    BYTE PTR [eax],bl
  4049fd:	push   ss
  4049fe:	aas    
  4049ff:	push   ebx
  404a00:	push   0xda674ac1
  404a05:	test   DWORD PTR [ebp-0x15],esp
  404a08:	jmp    DWORD PTR [ecx-0x2318c46e]
  404a0e:	push   esi
  404a0f:	dec    ebp
  404a10:	mov    dl,0xbc
  404a12:	rol    BYTE PTR [ebx],cl
  404a14:	sub    cl,BYTE PTR [ebp+0x797f61df]
  404a1a:	in     al,0x6
  404a1c:	sub    eax,0x97e7fce7
  404a21:	mov    ss,WORD PTR [ebp-0x6e]
  404a24:	shl    DWORD PTR [edx-0x7c38281f],0xb3
  404a2b:	xor    eax,DWORD PTR [ebx-0x673a9ea2]
  404a31:	xor    dl,BYTE PTR [eax]
  404a33:	pop    ecx
  404a34:	in     al,0x81
  404a36:	(bad)  
  404a37:	(bad)  
  404a38:	and    ch,BYTE PTR [edi-0x4b8753fb]
  404a3e:	push   ebp
  404a3f:	mov    cl,0x76
  404a41:	clc    
  404a42:	outs   dx,DWORD PTR ds:[esi]
  404a43:	add    al,0xe5
  404a45:	dec    edx
  404a46:	jae    0x404a54
  404a48:	mov    bh,0xa4
  404a4a:	fmul   DWORD PTR [ebp+0x7a]
  404a4d:	pusha  
  404a4e:	xor    esp,DWORD PTR [esi+0x283afbed]
  404a54:	jns    0x404aa1
  404a56:	out    0xdf,al
  404a58:	(bad)  
  404a5a:	lock fldenv [edi-0x486aee73]
  404a61:	in     eax,0x40
  404a63:	xchg   esp,eax
  404a64:	test   al,0x1d
  404a66:	aaa    
  404a67:	dec    eax
  404a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a69:	jg     0x404ad2
  404a6b:	adc    al,0x7e
  404a6d:	pop    eax
  404a6e:	test   DWORD PTR [edi],ebp
  404a70:	dec    esp
  404a71:	or     eax,0x13ed257f
  404a76:	rcr    BYTE PTR ds:0xeea6a1f9,0xa8
  404a7d:	in     eax,dx
  404a7e:	push   ebx
  404a7f:	cmc    
  404a80:	xchg   ebp,eax
  404a81:	pop    esp
  404a82:	fld    QWORD PTR [ebp+0x11]
  404a85:	push   cs
  404a86:	out    dx,eax
  404a87:	call   0x708f2ec
  404a8c:	push   ecx
  404a8d:	out    dx,eax
  404a8e:	mov    bh,0x95
  404a90:	out    dx,eax
  404a91:	shrd   ecx,eax,0x2
  404a95:	add    DWORD PTR ds:0x4229a2,edi
  404a9b:	shr    eax,0x2
  404a9e:	mov    eax,DWORD PTR [ebx]
  404aa0:	mov    edx,DWORD PTR ds:0x4229a2
  404aa6:	xor    DWORD PTR ds:0x4228b2,edx
  404aac:	mov    edx,DWORD PTR [ebx+0x4]
  404aaf:	and    DWORD PTR ds:0x42293e,0x42295a
  404ab9:	xor    ecx,edi
  404abb:	shl    eax,0x1e
  404abe:	adc    DWORD PTR ds:0x4229a6,0x6b1a
  404ac8:	xor    eax,eax
  404aca:	or     DWORD PTR ds:0x422942,edi
  404ad0:	jmp    0x40505a
  404ad5:	xchg   DWORD PTR [edx+esi*8-0x3a],ebx
  404ad9:	fcomp  DWORD PTR [eax]
  404adb:	xor    bl,BYTE PTR [ecx+ebx*8]
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	jp     0x404a8f
  404ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae3:	sub    BYTE PTR [esi+0x1616b7ac],0x3d
  404aea:	add    al,0x16
  404aec:	push   ss
  404aed:	sbb    DWORD PTR [ebx+0x7a],edi
  404af0:	aaa    
  404af1:	jp     0x404b07
  404af3:	mov    cl,0x11
  404af5:	adc    ch,bh
  404af7:	jg     0x404aed
  404af9:	fcmovb st,st(6)
  404afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404afc:	jg     0x404b0f
  404afe:	stos   BYTE PTR es:[edi],al
  404aff:	imul   ecx,DWORD PTR [eax+0x61a60951],0xffffffc5
  404b06:	jo     0x404b22
  404b08:	or     DWORD PTR [esi],0xffffffe7
  404b0b:	cmp    al,0x9f
  404b0d:	(bad)  
  404b0e:	enter  0x28af,0xb5
  404b12:	lds    ebp,FWORD PTR [edx-0x388fb190]
  404b18:	bound  ebp,QWORD PTR [ebp+eiz*1+0x14]
  404b1c:	mov    dh,0x50
  404b1e:	test   esp,ecx
  404b20:	adc    BYTE PTR [esp+edx*4],bh
  404b23:	leave  
  404b24:	cli    
  404b25:	fwait
  404b26:	jl     0x404b22
  404b28:	add    eax,DWORD PTR [eax+0x296dec1f]
  404b2e:	addr16 nop
  404b30:	jmp    0x996096d6
  404b35:	in     al,0xde
  404b37:	inc    esp
  404b38:	xchg   esi,eax
  404b39:	or     al,0xcc
  404b3b:	(bad)  
  404b3c:	sar    DWORD PTR [edi+ebx*2],cl
  404b3f:	and    BYTE PTR [eax],0xd5
  404b42:	ss pop ecx
  404b44:	rcr    BYTE PTR [ecx+edx*2],1
  404b47:	fwait
  404b48:	mov    ecx,0xf16ab54f
  404b4d:	ins    BYTE PTR es:[edi],dx
  404b4e:	dec    ebx
  404b4f:	cmp    esp,DWORD PTR [edx+0x5d]
  404b52:	mov    ecx,0x301b554c
  404b57:	daa    
  404b58:	(bad)  
  404b59:	dec    edi
  404b5a:	add    DWORD PTR [eax],esp
  404b5c:	lods   al,BYTE PTR ds:[esi]
  404b5d:	or     BYTE PTR [edi+0x75],dl
  404b60:	lahf   
  404b61:	in     eax,0x85
  404b63:	xchg   esi,eax
  404b64:	jns    0x404b83
  404b66:	lods   eax,DWORD PTR ds:[esi]
  404b67:	(bad)  
  404b68:	add    eax,0xe20aa764
  404b6d:	dec    ecx
  404b6e:	push   cs
  404b6f:	or     dl,BYTE PTR [esi+eax*4]
  404b72:	loopne 0x404b44
  404b74:	rcr    BYTE PTR [ecx+eax*2+0x4c],0x83
  404b79:	xchg   edi,eax
  404b7a:	cld    
  404b7b:	cmp    BYTE PTR [ebx-0x56],al
  404b7e:	lods   al,BYTE PTR ds:[esi]
  404b7f:	fst    DWORD PTR [ecx]
  404b81:	pop    ebx
  404b82:	jge    0x404b3c
  404b84:	inc    ecx
  404b85:	not    cl
  404b87:	and    edi,esp
  404b89:	ss cmp eax,0x9eaefae8
  404b8f:	rol    DWORD PTR [eax+0x42],1
  404b92:	xor    ah,al
  404b94:	jp     0x404b9c
  404b96:	popa   
  404b97:	(bad)  
  404b98:	pop    ss
  404b99:	sub    eax,0x351d77b5
  404b9e:	xchg   ah,ch
  404ba0:	jbe    0x404b23
  404ba2:	mov    ebx,0xa3afe0a8
  404ba7:	fidiv  DWORD PTR [esi-0xa]
  404baa:	sti    
  404bab:	fdiv   DWORD PTR [esi+eax*1-0x172553f3]
  404bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb3:	sahf   
  404bb4:	jle    0x404c23
  404bb6:	jge    0x404b6c
  404bb8:	sub    DWORD PTR [esi-0x5e],esi
  404bbb:	arpl   cx,si
  404bbd:	sub    ch,BYTE PTR [edi+0x53f61c8d]
  404bc3:	dec    ecx
  404bc4:	push   es
  404bc5:	and    cl,BYTE PTR [ebx-0x70]
  404bc8:	and    bh,al
  404bca:	in     eax,dx
  404bcb:	in     eax,0xd1
  404bcd:	jge    0x404c11
  404bcf:	mov    ah,0x28
  404bd1:	xchg   edx,eax
  404bd2:	stc    
  404bd3:	xor    al,0x87
  404bd5:	mov    cl,0x16
  404bd7:	sub    al,BYTE PTR [edi-0x3bf2301c]
  404bdd:	leave  
  404bde:	mov    ds:0xdca0d420,al
  404be3:	xchg   ebx,eax
  404be4:	popa   
  404be5:	mov    esi,0x21a6c7fe
  404bea:	std    
  404beb:	adc    edx,ecx
  404bed:	in     al,0x45
  404bef:	inc    esi
  404bf0:	sahf   
  404bf1:	shl    DWORD PTR fs:[ecx-0xcbf7b0f],0x9a
  404bf9:	fsubr  QWORD PTR [edi]
  404bfb:	inc    eax
  404bfc:	push   0x5bb9918e
  404c01:	ficomp DWORD PTR [edx+eiz*4-0x212bfda5]
  404c08:	fcom   st(1)
  404c0a:	jbe    0x404c84
  404c0c:	add    ah,BYTE PTR [ecx+ebp*1+0x4c]
  404c10:	push   edx
  404c11:	and    eax,0xf242c5f5
  404c16:	xor    edx,DWORD PTR [esi]
  404c18:	enter  0xa515,0x84
  404c1c:	dec    edx
  404c1d:	sbb    eax,0x19a34f1d
  404c22:	rol    BYTE PTR [ebx-0x26],0x6a
  404c26:	xor    bh,BYTE PTR [eax+ebp*2]
  404c29:	iret   
  404c2a:	dec    ebp
  404c2b:	xchg   edi,eax
  404c2c:	imul   ebx,DWORD PTR [ecx+0x557b94c5],0xffffffe8
  404c33:	mov    al,0xe0
  404c35:	sbb    cl,bl
  404c37:	pop    edi
  404c38:	sbb    bl,bl
  404c3a:	push   ebx
  404c3b:	fcmovu st,st(1)
  404c3d:	sub    al,0xb4
  404c3f:	aaa    
  404c40:	lods   eax,DWORD PTR ds:[esi]
  404c41:	xlat   BYTE PTR ds:[ebx]
  404c42:	xlat   BYTE PTR ds:[ebx]
  404c43:	repnz mov esp,ebp
  404c46:	push   edi
  404c47:	pop    ds
  404c48:	dec    ecx
  404c49:	adc    al,0xdc
  404c4b:	xchg   ebx,eax
  404c4c:	(bad)  
  404c4d:	das    
  404c4e:	pop    edx
  404c4f:	out    dx,al
  404c50:	xchg   DWORD PTR [ebp-0x6b71c7d4],eax
  404c56:	dec    ecx
  404c57:	pop    ss
  404c58:	cmp    ah,ah
  404c5a:	ret    0x5b7d
  404c5d:	sbb    edi,ebx
  404c5f:	(bad)  
  404c60:	cld    
  404c61:	xchg   ecx,eax
  404c62:	pushf  
  404c63:	(bad)  
  404c64:	mov    gs,WORD PTR [eax]
  404c66:	ror    DWORD PTR [edx-0x7ecfe7d7],0x8b
  404c6d:	pop    ss
  404c6e:	call   DWORD PTR [ebx]
  404c70:	scas   al,BYTE PTR es:[edi]
  404c71:	test   al,0x2c
  404c73:	retf   0x6bc0
  404c76:	dec    edi
  404c77:	mov    ds:0xb71465c0,eax
  404c7c:	xor    eax,edi
  404c7e:	dec    ebx
  404c7f:	cmp    esi,edx
  404c81:	pop    edx
  404c82:	fidivr DWORD PTR [esi]
  404c86:	pusha  
  404c87:	jo     0x404c18
  404c89:	bnd jnp 0x404cf3
  404c8c:	lahf   
  404c8d:	stc    
  404c8e:	push   es
  404c8f:	out    0xe9,eax
  404c91:	pop    edi
  404c92:	pop    edx
  404c93:	scas   al,BYTE PTR es:[edi]
  404c94:	xor    dh,BYTE PTR [ecx+ebp*1]
  404c97:	mov    DWORD PTR [edx],esi
  404c99:	xchg   BYTE PTR [esi*8+0x470ef2b4],dl
  404ca0:	pop    ebx
  404ca1:	les    ecx,FWORD PTR [esi-0x55]
  404ca4:	stos   DWORD PTR es:[edi],eax
  404ca5:	cwde   
  404ca6:	jmp    0xdea9e540
  404cab:	not    al
  404cad:	mov    ds:0x60a57b43,al
  404cb2:	rol    DWORD PTR [eax+0x65c18e72],0x9a
  404cb9:	mov    bl,0x53
  404cbb:	out    dx,al
  404cbc:	dec    eax
  404cbd:	push   ds
  404cbe:	les    edx,FWORD PTR [edi]
  404cc0:	outs   dx,DWORD PTR ds:[esi]
  404cc1:	outs   dx,BYTE PTR ds:[esi]
  404cc2:	and    ah,BYTE PTR [ebx+0xf5cd221]
  404cc8:	inc    edi
  404cc9:	pop    ss
  404cca:	push   ss
  404ccb:	or     al,0x90
  404ccd:	pop    es
  404cce:	fs cli 
  404cd0:	xchg   esp,eax
  404cd1:	pop    ss
  404cd2:	and    ah,BYTE PTR [ebx+0x2f]
  404cd5:	rol    DWORD PTR [ebx-0x3c51750e],1
  404cdb:	pop    ss
  404cdc:	adc    eax,0x1
  404cdf:	xchg   esi,eax
  404ce0:	retf   
  404ce1:	pop    ebp
  404ce2:	fisubr WORD PTR [esi]
  404ce4:	inc    edi
  404ce5:	outs   dx,DWORD PTR ds:[esi]
  404ce6:	retf   0xf2b2
  404ce9:	ins    DWORD PTR es:[edi],dx
  404cea:	imul   esp,DWORD PTR [ecx+esi*4],0x3ef68730
  404cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf2:	sub    al,0x5f
  404cf4:	bound  ebx,QWORD PTR [esp+ecx*8+0x3c]
  404cf8:	adc    al,0x74
  404cfa:	pop    esp
  404cfb:	mov    ds:0x2e4c303d,al
  404d00:	jle    0x404d6b
  404d02:	retf   
  404d03:	mov    bl,0x43
  404d05:	inc    ecx
  404d06:	mov    ch,0x15
  404d08:	out    dx,eax
  404d09:	jecxz  0x404d34
  404d0b:	xor    BYTE PTR [ecx],dh
  404d0d:	xlat   BYTE PTR ds:[ebx]
  404d0e:	or     eax,eax
  404d10:	repz retf 
  404d12:	or     BYTE PTR [ecx+esi*8],dl
  404d15:	fsub   st(2),st
  404d17:	stos   BYTE PTR es:[edi],al
  404d18:	xchg   BYTE PTR [ebx],cl
  404d1a:	setns  BYTE PTR [eax+0x11]
  404d1e:	pop    ecx
  404d1f:	iret   
  404d20:	fmul   st(7),st
  404d22:	xor    al,0xa2
  404d24:	ret    
  404d25:	jmp    0xc729:0xb5ae5a8f
  404d2c:	push   es
  404d2d:	dec    ebp
  404d2e:	cmp    eax,0x2aff75ee
  404d33:	das    
  404d34:	push   ss
  404d35:	mov    WORD PTR [eax+0x79],?
  404d38:	test   DWORD PTR [eax+0x26],ecx
  404d3b:	cmp    edx,esp
  404d3d:	adc    al,0xc
  404d3f:	(bad)  
  404d40:	jns    0x404d8f
  404d42:	clc    
  404d43:	popa   
  404d44:	call   0x55af:0xb9c04059
  404d4b:	push   ss
  404d4c:	xor    BYTE PTR [esi-0x6f88b3c6],0xe7
  404d53:	mov    ch,0xd7
  404d55:	stc    
  404d56:	jo     0x404dc1
  404d58:	std    
  404d59:	cmp    ah,BYTE PTR [edx-0x4eeccf7b]
  404d5f:	or     DWORD PTR [eax],ebp
  404d61:	mov    al,0x4a
  404d63:	(bad)  
  404d64:	cld    
  404d65:	push   0x71d7eecd
  404d6a:	mov    ah,BYTE PTR [esi]
  404d6c:	mov    DWORD PTR [ebx],ebx
  404d6e:	ret    0xac14
  404d71:	adc    BYTE PTR [ecx+eax*1+0x206fd4e4],0x65
  404d79:	sbb    BYTE PTR [edx],0xf
  404d7c:	xchg   DWORD PTR [edx],edi
  404d7e:	sub    DWORD PTR [ebx+0x373c1d93],ecx
  404d84:	das    
  404d85:	push   ds
  404d86:	add    ebp,ebp
  404d88:	add    ah,BYTE PTR [ebx+eiz*1+0x6ef6913b]
  404d8f:	cvtpi2ps xmm7,QWORD PTR [ebx+0x65]
  404d93:	mov    al,0x25
  404d95:	movaps xmm3,XMMWORD PTR [ebx+ecx*2-0x494bc9be]
  404d9d:	inc    esp
  404d9e:	cli    
  404d9f:	push   ebp
  404da0:	iret   
  404da1:	or     eax,0xa46428c2
  404da6:	cli    
  404da7:	jbe    0x404e18
  404da9:	jbe    0x404ddb
  404dab:	out    dx,eax
  404dac:	or     al,bh
  404dae:	in     eax,dx
  404daf:	pop    esp
  404db0:	stos   BYTE PTR es:[edi],al
  404db1:	cmp    BYTE PTR [esi-0x9],ch
  404db4:	or     BYTE PTR [ebx],bh
  404db6:	loop   0x404de7
  404db8:	xchg   BYTE PTR [ebx],al
  404dba:	sub    ebp,DWORD PTR [edx+0xc342937]
  404dc0:	in     eax,0xb1
  404dc2:	test   al,0xcd
  404dc4:	xor    edx,ebx
  404dc6:	stc    
  404dc7:	jb     0x404dc6
  404dc9:	pop    esi
  404dca:	mov    DWORD PTR [ebx+0x30],edi
  404dcd:	push   esi
  404dce:	fisttp DWORD PTR [ebx+0x2f9f7719]
  404dd4:	or     bh,BYTE PTR [edi]
  404dd6:	rol    ecx,1
  404dd8:	push   0x64
  404dda:	ret    0x77bf
  404ddd:	fsub   DWORD PTR [eax-0x77adf393]
  404de3:	in     al,0x8
  404de5:	mov    al,ds:0xe40f5cab
  404dea:	push   0xc7270f5a
  404def:	(bad)  
  404df0:	sbb    edx,DWORD PTR [ecx]
  404df2:	div    cl
  404df4:	mov    bh,0x4f
  404df6:	mov    ds:0x5c8f85a4,al
  404dfb:	mov    dh,0x4e
  404dfd:	in     al,0xfc
  404dff:	sbb    dh,BYTE PTR [ebx-0x30491d9f]
  404e05:	(bad)  
  404e06:	jmp    0x404e1e
  404e08:	cmp    BYTE PTR [esi+0x7a95dc68],ch
  404e0e:	lock mov al,ds:0xda2ed1d9
  404e14:	push   0x7b
  404e16:	cld    
  404e17:	jl     0x404da5
  404e19:	xor    eax,0xaaceced
  404e1e:	pop    ebp
  404e1f:	iret   
  404e20:	dec    esi
  404e21:	push   0x12
  404e23:	dec    edx
  404e24:	xchg   edx,eax
  404e25:	js     0x404ea3
  404e27:	(bad)  
  404e28:	cli    
  404e29:	mov    bl,BYTE PTR [edi-0x12]
  404e2c:	pop    esi
  404e2d:	lock sbb dl,BYTE PTR [ecx+0x5dd16831]
  404e34:	or     bl,BYTE PTR [esi]
  404e36:	mov    al,ds:0x48e5c061
  404e3b:	pop    eax
  404e3c:	aam    0x5b
  404e3e:	push   esi
  404e3f:	(bad)  
  404e40:	pop    ss
  404e41:	ror    cl,1
  404e43:	ja     0x404e0e
  404e45:	jo     0x404df1
  404e47:	push   ss
  404e48:	inc    edx
  404e49:	mov    ds:0x36edd54f,al
  404e4e:	mov    eax,0x19ad6805
  404e53:	dec    esp
  404e54:	xchg   edx,eax
  404e55:	xor    BYTE PTR [ebp-0x2e3dbb2e],al
  404e5b:	add    ah,ah
  404e5d:	push   ecx
  404e5e:	loop   0x404e80
  404e60:	test   al,0x93
  404e62:	add    al,0x14
  404e64:	ds in  al,0xe3
  404e67:	data16 fs jo 0x404e0d
  404e6b:	fld    QWORD PTR [esi+0x3]
  404e6e:	jecxz  0x404e2e
  404e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e71:	imul   esi,DWORD PTR [edx-0x3c],0xadb80368
  404e78:	sub    bh,al
  404e7a:	loop   0x404ed4
  404e7c:	mov    al,ds:0x9ba7280f
  404e81:	test   al,0x68
  404e83:	aaa    
  404e84:	imul   ecx,DWORD PTR [edx-0x32a4fd1],0x56
  404e8b:	add    edx,DWORD PTR [esi-0x38]
  404e8e:	aam    0x7b
  404e90:	mov    dh,0xb6
  404e92:	test   DWORD PTR [edx],ecx
  404e94:	push   cs
  404e95:	test   DWORD PTR [eax],0x8063bc10
  404e9b:	jnp    0x404e89
  404e9d:	call   0xf0ccd897
  404ea2:	pop    ebp
  404ea3:	(bad)  
  404ea4:	neg    BYTE PTR [ebx-0x1]
  404ea7:	pop    ebp
  404ea8:	dec    edx
  404ea9:	retf   0x9d88
  404eac:	pop    eax
  404ead:	jae    0x404e74
  404eaf:	adc    BYTE PTR [edi+ecx*1],dl
  404eb2:	addr16 xor dl,bh
  404eb5:	lods   eax,DWORD PTR ds:[esi]
  404eb6:	dec    esi
  404eb7:	retf   0x7e5e
  404eba:	not    cl
  404ebc:	cmc    
  404ebd:	push   ecx
  404ebe:	dec    eax
  404ebf:	loop   0x404efd
  404ec1:	xchg   esp,eax
  404ec2:	add    BYTE PTR [edi],dh
  404ec4:	mov    esi,0x111800b4
  404ec9:	cmp    al,BYTE PTR [edx-0x19]
  404ecc:	pushf  
  404ecd:	popa   
  404ece:	push   eax
  404ecf:	or     ah,BYTE PTR ds:0x3ed3a885
  404ed5:	cld    
  404ed6:	pop    es
  404ed7:	jl     0x404f35
  404ed9:	into   
  404eda:	psllw  mm1,QWORD PTR [esi+0x2a]
  404ede:	xchg   ebx,eax
  404edf:	outs   dx,BYTE PTR ds:[esi]
  404ee0:	add    bl,bh
  404ee2:	sub    eax,0x68ebffd4
  404ee7:	push   0xffffff88
  404ee9:	mov    edi,0x21e3a8d8
  404eee:	fnstenv [ebp-0xc]
  404ef1:	test   BYTE PTR [esi+0x7f],dl
  404ef4:	inc    ebp
  404ef5:	iret   
  404ef6:	repnz mov ds:0xe6a80d63,al
  404efc:	iret   
  404efd:	mov    esp,DWORD PTR [edx+0x45]
  404f00:	test   BYTE PTR [edi],al
  404f02:	retf   
  404f03:	(bad)  [edx-0x72]
  404f06:	jle    0x404eb3
  404f08:	pop    ebx
  404f09:	dec    eax
  404f0a:	mov    eax,0x1b6557c0
  404f0f:	mov    ebx,0xf6181854
  404f14:	cmp    edi,DWORD PTR ds:0x74bb243c
  404f1a:	jl     0x404ea6
  404f1c:	leave  
  404f1d:	test   eax,0x38f60615
  404f22:	mov    ecx,0xa30b3838
  404f27:	xlat   BYTE PTR ds:[ebx]
  404f28:	repz dec ebx
  404f2a:	cld    
  404f2b:	xlat   BYTE PTR ds:[ebx]
  404f2c:	ss ds out 0x9c,al
  404f30:	fdivr  QWORD PTR [edx+0x3326cb2e]
  404f36:	inc    esp
  404f37:	loop   0x404ebe
  404f39:	jmp    0x404ebc
  404f3b:	jmp    0x404f4f
  404f3d:	sub    DWORD PTR [ebp+0x41],eax
  404f40:	adc    dl,dh
  404f42:	or     al,0x94
  404f44:	pop    ecx
  404f45:	je     0x404f60
  404f47:	in     eax,dx
  404f48:	mov    ebp,0xc6dbcd4b
  404f4d:	or     DWORD PTR [ebx+0x1c],ecx
  404f50:	dec    ebp
  404f51:	and    BYTE PTR [edi],0x43
  404f54:	jb     0x404f78
  404f56:	push   edx
  404f57:	jbe    0x404f30
  404f59:	jbe    0x404f7c
  404f5b:	das    
  404f5c:	mov    WORD PTR [ecx],fs
  404f5e:	mov    al,0xf9
  404f60:	inc    esi
  404f61:	inc    eax
  404f62:	adc    ch,cl
  404f64:	mov    ds:0x536028a2,eax
  404f69:	inc    edx
  404f6a:	or     cl,BYTE PTR [edi-0x3949f8c6]
  404f70:	out    0x1f,al
  404f72:	es cld 
  404f74:	inc    edx
  404f75:	cli    
  404f76:	sbb    ah,BYTE PTR [esi]
  404f78:	cdq    
  404f79:	outs   dx,BYTE PTR ds:[esi]
  404f7a:	dec    esp
  404f7b:	retf   
  404f7c:	ja     0x404efe
  404f7e:	bound  edi,QWORD PTR [edx+0x28]
  404f81:	fild   WORD PTR [esi]
  404f83:	xor    al,0x3c
  404f85:	cmp    al,ah
  404f87:	mov    eax,0x2b4df438
  404f8c:	jp     0x404f2e
  404f8e:	fs imul dh
  404f91:	jae    0x404f57
  404f93:	xor    ebx,DWORD PTR [esi+edi*2]
  404f96:	test   al,0x14
  404f98:	jns    0x404ffd
  404f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f9b:	dec    edi
  404f9c:	mov    esi,0x4b37d48f
  404fa1:	mov    WORD PTR [edi],ds
  404fa3:	(bad)  
  404fa4:	fild   QWORD PTR ds:0x44dbd355
  404faa:	push   edx
  404fab:	or     ebx,ecx
  404fad:	jmp    0xc214:0xed992ef6
  404fb4:	mov    ebp,0x619cef48
  404fb9:	mov    eax,ds:0x445a1a79
  404fbe:	cwde   
  404fbf:	in     eax,0xef
  404fc1:	in     eax,dx
  404fc2:	loope  0x404fd8
  404fc4:	inc    ebx
  404fc5:	cmp    dl,BYTE PTR [ebp-0x39]
  404fc8:	add    al,0x47
  404fca:	jne    0x404fed
  404fcc:	shr    DWORD PTR [esi-0x58acd0b5],cl
  404fd2:	mov    eax,ds:0x8a41f35d
  404fd7:	mov    bh,0x10
  404fd9:	jmp    0x333093e5
  404fde:	push   esp
  404fdf:	and    eax,0x6a8554ce
  404fe4:	shr    edx,cl
  404fe6:	imul   eax,DWORD PTR [edx+0x3b7ad5a0],0x1d
  404fed:	xor    bh,dh
  404fef:	loopne 0x404fd4
  404ff1:	push   edi
  404ff2:	or     eax,esp
  404ff4:	(bad)  
  404ff5:	jne    0x405073
  404ff7:	mov    dh,0x1a
  404ff9:	mov    al,BYTE PTR [edi-0x6b]
  404ffc:	sti    
  404ffd:	push   ebx
  404ffe:	add    BYTE PTR [eax],ch
  405000:	sbb    bl,BYTE PTR [esi+0x26c7d3ef]
  405006:	stos   BYTE PTR es:[edi],al
  405007:	xchg   ebx,eax
  405008:	push   ebp
  405009:	jnp    0x404f9c
  40500b:	nop
  40500c:	or     esi,0x2ea9edcd
  405012:	stos   DWORD PTR es:[edi],eax
  405013:	loope  0x404fe4
  405015:	xlat   BYTE PTR ds:[ebx]
  405016:	mov    edx,0xe2fb3f4e
  40501b:	jno    0x405052
  40501d:	mov    cl,0x78
  40501f:	xor    DWORD PTR ds:0xc4ac0cd5,edi
  405025:	push   ebp
  405026:	or     al,0x5f
  405028:	lea    esp,[edx-0x56]
  40502b:	inc    edx
  40502c:	add    eax,0x84d396a6
  405031:	xchg   esp,eax
  405032:	sbb    eax,0xdb3e692c
  405037:	sbb    ecx,DWORD PTR [esi+ebp*1]
  40503a:	inc    ecx
  40503b:	nop
  40503c:	sub    ecx,esi
  40503e:	outs   dx,BYTE PTR ds:[esi]
  40503f:	mov    cs:0x7c08134b,eax
  405045:	jo     0x404fde
  405047:	adc    al,0xfa
  405049:	cmc    
  40504a:	jno    0x4050c2
  40504c:	sub    al,0xbb
  40504e:	xlat   BYTE PTR ds:[ebx]
  40504f:	ja     0x405049
  405051:	xor    dh,0xd3
  405054:	ss retf 
  405056:	mov    ds:0xb8e36f2,al
  40505b:	rol    DWORD PTR [ecx+0x42294a2d],0x0
  405062:	mov    WORD PTR [esi],?
  405064:	add    BYTE PTR [eax],al
  405066:	mov    ecx,DWORD PTR [ebx]
  405068:	cmp    DWORD PTR ds:0x42291a,0x0
  40506f:	mov    edx,0x329b
  405074:	mov    DWORD PTR ds:0x42298e,edi
  40507a:	mov    DWORD PTR ds:0x422992,0x6944
  405084:	jmp    0x4050d1
  405089:	mov    DWORD PTR ds:0x4228a2,0x4c5b
  405093:	mov    DWORD PTR ds:0x42294a,0x78c7
  40509d:	jae    0x4050b9
  4050a3:	call   DWORD PTR ds:0x42a048
  4050a9:	and    DWORD PTR ds:0x422976,edi
  4050af:	sub    DWORD PTR ds:0x42292a,0xcc1
  4050b9:	add    edx,DWORD PTR ds:0x4228fe
  4050bf:	mov    edx,DWORD PTR ds:0x4229ae
  4050c5:	xor    DWORD PTR ds:0x42288a,edx
  4050cb:	xor    DWORD PTR ds:0x4228a6,ebx
  4050d1:	mov    edx,DWORD PTR [ebx+0x4]
  4050d4:	shrd   ecx,edx,0x2
  4050d8:	shr    edx,0x2
  4050db:	dec    edx
  4050dc:	mov    DWORD PTR [ebp-0x1c],ecx
  4050df:	mov    ecx,DWORD PTR [ebx]
  4050e1:	cmp    DWORD PTR ds:0x422956,0x0
  4050e8:	mov    DWORD PTR ds:0x4229a6,ecx
  4050ee:	mov    DWORD PTR ds:0x4228be,0x46b1
  4050f8:	mov    edx,0x1a3a
  4050fd:	jmp    0x405154
  405102:	mov    edx,DWORD PTR ds:0x4229be
  405108:	je     0x405144
  40510e:	push   0x4228ce
  405113:	push   0x891e
  405118:	call   DWORD PTR ds:0x42a298
  40511e:	mov    edx,DWORD PTR ds:0x422976
  405124:	sbb    DWORD PTR ds:0x4229a6,edx
  40512a:	or     DWORD PTR ds:0x4229b6,0x4229c6
  405134:	or     edx,DWORD PTR ds:0x4229ba
  40513a:	adc    DWORD PTR ds:0x42295a,0x7410
  405144:	xor    DWORD PTR ds:0x422932,0x293b
  40514e:	or     DWORD PTR ds:0x422982,edx
  405154:	mov    edx,DWORD PTR [ebx+0x4]
  405157:	or     DWORD PTR ds:0x422992,0x45bc
  405161:	xor    DWORD PTR [ebp-0x1c],edi
  405164:	sbb    DWORD PTR ds:0x4229ca,0x422976
  40516e:	xor    edx,edx
  405170:	not    DWORD PTR ds:0x4228d2
  405176:	or     edx,DWORD PTR [ebp-0x1c]
  405179:	or     DWORD PTR ds:0x42291e,0x4228e6
  405183:	jmp    0x40570d
  405188:	mov    cl,0xe1
  40518a:	inc    eax
  40518b:	test   al,0x40
  40518d:	sub    BYTE PTR [ecx],bl
  40518f:	fcomp  st(5)
  405191:	dec    edx
  405192:	int3   
  405193:	outs   dx,BYTE PTR ds:[esi]
  405194:	add    DWORD PTR [edi],edi
  405196:	pop    esp
  405197:	outs   dx,BYTE PTR ds:[esi]
  405198:	(bad)  [ebx+0x43d1616]
  40519e:	push   ss
  40519f:	push   ss
  4051a0:	stos   BYTE PTR es:[edi],al
  4051a1:	mov    edi,0x81423611
  4051a6:	adc    eax,0x2f3f8be1
  4051ab:	outs   dx,BYTE PTR ds:[esi]
  4051ac:	mov    dh,bl
  4051ae:	pop    ecx
  4051af:	in     eax,0x1
  4051b1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4051b3:	inc    BYTE PTR [ecx+0x24]
  4051b6:	xchg   DWORD PTR [ecx-0x53],edx
  4051b9:	jl     0x4051cc
  4051bb:	jno    0x4051e6
  4051bd:	in     eax,dx
  4051be:	xchg   ebx,eax
  4051bf:	add    DWORD PTR [ecx-0x4a9d6864],esi
  4051c5:	push   cs
  4051c6:	and    esp,DWORD PTR [eax]
  4051c8:	daa    
  4051c9:	stc    
  4051ca:	ror    DWORD PTR [edx+eiz*1-0x6556d094],1
  4051d1:	int3   
  4051d2:	mov    al,ds:0x8711d0bc
  4051d7:	cdq    
  4051d8:	dec    ecx
  4051d9:	push   ebx
  4051da:	aad    0xd3
  4051dc:	pop    esi
  4051dd:	inc    edx
  4051de:	les    eax,FWORD PTR [ebx]
  4051e0:	mov    dh,BYTE PTR [esi-0x43]
  4051e3:	bound  eax,QWORD PTR [ebp+0x679c2228]
  4051e9:	fist   DWORD PTR [esi-0x52cb8385]
  4051ef:	int    0x22
  4051f1:	imul   ebx,DWORD PTR [ecx+ebp*2-0x68],0xf3f49ade
  4051f9:	pop    ss
  4051fa:	je     0x4051a2
  4051fc:	xchg   BYTE PTR [esi],al
  4051fe:	and    dh,ah
  405200:	cli    
  405201:	dec    eax
  405202:	push   eax
  405203:	sar    BYTE PTR ds:[edi],cl
  405206:	sub    BYTE PTR [ebx-0x64],ah
  405209:	adc    al,0x68
  40520b:	imul   edx,DWORD PTR [edi],0x7915c196
  405211:	inc    edx
  405212:	imul   DWORD PTR [esi]
  405214:	mov    ch,0x2d
  405216:	or     DWORD PTR [edi+0x6d],eax
  405219:	add    DWORD PTR [ecx],edi
  40521b:	and    ebp,ecx
  40521d:	dec    esi
  40521e:	mov    cl,0x57
  405220:	inc    edx
  405221:	fistp  QWORD PTR [ebx+ecx*1+0x3f]
  405225:	mov    edi,0x2ffa265c
  40522a:	addr16 iret 
  40522c:	stos   DWORD PTR es:[edi],eax
  40522d:	pop    ebp
  40522e:	divps  xmm0,XMMWORD PTR [esi]
  405231:	rcr    BYTE PTR [esi],1
  405233:	sbb    BYTE PTR [edx],ah
  405235:	mov    ebp,ecx
  405237:	mov    dh,0x2b
  405239:	xchg   ebp,eax
  40523a:	mov    eax,ds:0x9dd40bff
  40523f:	mov    ebp,0xd07aa077
  405244:	cdq    
  405245:	adc    DWORD PTR [eax+0x210aa4d],esp
  40524b:	jo     0x405203
  40524d:	es push ds
  40524f:	leave  
  405250:	iret   
  405251:	adc    al,BYTE PTR [eax+0x1d]
  405254:	push   edx
  405255:	jmp    0xed40:0xb4507eb7
  40525c:	xor    bl,BYTE PTR [ebx+0x2655d515]
  405262:	and    bl,ah
  405264:	xor    ebx,DWORD PTR [edi]
  405266:	mov    DWORD PTR [eax],eax
  405268:	test   al,0x35
  40526a:	(bad)  
  40526b:	loopne 0x40528a
  40526d:	and    ecx,DWORD PTR [eax]
  40526f:	gs adc cl,ch
  405272:	(bad)  
  405273:	mov    eax,0xe77ce17d
  405278:	lods   al,BYTE PTR ds:[esi]
  405279:	or     BYTE PTR [esi-0x46],bl
  40527c:	mov    al,ds:0x67db6e36
  405281:	repnz aaa 
  405283:	fcomp  QWORD PTR [edx-0x4c]
  405286:	mov    esi,0x71000f7e
  40528b:	mov    esp,0x4f0ab50c
  405290:	iret   
  405291:	cdq    
  405292:	ja     0x4052b7
  405294:	mov    al,BYTE PTR [eax+0x21]
  405297:	mov    dl,0x9
  405299:	aad    0x5d
  40529b:	xor    ah,dl
  40529d:	test   al,0x90
  4052a0:	hlt    
  4052a1:	mov    eax,ds:0x43566d33
  4052a6:	nop
  4052a7:	jb     0x4052b0
  4052a9:	ret    
  4052aa:	ror    BYTE PTR [edx],cl
  4052ac:	pop    edi
  4052ad:	inc    ecx
  4052ae:	pop    ebx
  4052af:	jl     0x4052c7
  4052b1:	(bad)  
  4052b3:	xor    al,0xfa
  4052b5:	loope  0x4052ba
  4052b7:	repz jmp 0x4052d9
  4052ba:	jge    0x4052a4
  4052bc:	pop    edx
  4052bd:	xchg   ecx,eax
  4052be:	pop    ebp
  4052bf:	outs   dx,DWORD PTR ds:[esi]
  4052c0:	dec    eax
  4052c1:	pop    edx
  4052c2:	mov    al,0xf
  4052c4:	lds    ebp,FWORD PTR [esp+ecx*2+0x6eedfe7c]
  4052cb:	sbb    eax,0xa6b7aa48
  4052d0:	jmp    esp
  4052d2:	fbstp  TBYTE PTR [edx]
  4052d4:	pop    ebp
  4052d5:	push   0x6f60991e
  4052da:	mov    eax,0xdf90d98b
  4052df:	pause  
  4052e1:	pop    ss
  4052e2:	jb     0x405344
  4052e4:	(bad)  
  4052e5:	mov    ds:0x61b694d5,al
  4052ea:	xor    dl,BYTE PTR [edx]
  4052ec:	into   
  4052ed:	les    bx,DWORD PTR [ecx-0x5b]
  4052f1:	shl    BYTE PTR [edx+0x1da34470],1
  4052f7:	jl     0x40533f
  4052f9:	sub    edx,DWORD PTR [edx-0x6]
  4052fc:	popf   
  4052fd:	hlt    
  4052fe:	jbe    0x4052be
  405300:	mov    ch,0x5e
  405302:	xchg   edi,eax
  405303:	pop    ds
  405304:	and    ebx,0x904b29d0
  40530a:	dec    esp
  40530b:	pop    esp
  40530c:	aam    0x98
  40530e:	adc    BYTE PTR [ecx-0x726ef05e],bh
  405314:	ret    
  405315:	xchg   esi,eax
  405316:	jno    0x4052b8
  405318:	scas   al,BYTE PTR es:[edi]
  405319:	mov    al,ds:0x1206384b
  40531e:	imul   esi,DWORD PTR [edx+edi*8],0x51
  405322:	sbb    edi,DWORD PTR [ecx]
  405324:	je     0x405359
  405326:	inc    edx
  405327:	outs   dx,DWORD PTR ds:[esi]
  405328:	lock fidiv DWORD PTR [esp+eax*4+0x13]
  40532d:	jns    0x40534c
  40532f:	lods   eax,DWORD PTR ds:[esi]
  405330:	scas   eax,DWORD PTR es:[edi]
  405331:	jmp    0x405369
  405333:	int    0xd
  405335:	sbb    ebp,DWORD PTR [ebx+0x68714c72]
  40533b:	fcom   QWORD PTR [esi+ebx*2+0x4a0b89a8]
  405342:	outs   dx,DWORD PTR ds:[esi]
  405343:	jle    0x405316
  405345:	in     eax,dx
  405346:	sbb    DWORD PTR [esi-0x51a07999],esi
  40534c:	mov    cl,0x30
  40534e:	stos   DWORD PTR es:[edi],eax
  40534f:	sbb    al,0xed
  405351:	in     eax,dx
  405352:	mov    ch,0xdc
  405354:	sbb    si,WORD PTR [esi]
  405357:	adc    ebp,DWORD PTR [ebx]
  405359:	scas   eax,DWORD PTR es:[edi]
  40535a:	add    BYTE PTR [edx-0x7e],bh
  40535d:	mov    WORD PTR [ecx+0x60],ss
  405360:	test   eax,0xcc7d98a
  405365:	call   0x41c1:0xd64dd731
  40536c:	call   0xc38f:0x3a51969d
  405373:	pusha  
  405374:	fst    DWORD PTR [ecx]
  405376:	jno    0x4053c6
  405378:	sub    dh,0x19
  40537b:	mov    ch,BYTE PTR [edx+0x20]
  40537e:	pop    ebx
  40537f:	push   0xeb6d14de
  405384:	jmp    0xedf6:0xe076497c
  40538b:	or     ebx,0xfffffff7
  40538e:	add    DWORD PTR [edx+0x14],ebp
  405391:	cmp    DWORD PTR [ecx+edi*1-0x20a2fcc2],0x16bd0ee8
  40539c:	cli    
  40539d:	add    eax,0x8b06948c
  4053a2:	mov    bh,dl
  4053a4:	xchg   edx,eax
  4053a5:	inc    BYTE PTR [ebx]
  4053a7:	aam    0x84
  4053a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053aa:	adc    DWORD PTR [edx],edx
  4053ac:	bnd call 0x231d133f
  4053b2:	xor    DWORD PTR [edx+esi*1-0x6ad89358],ebx
  4053b9:	int3   
  4053ba:	lahf   
  4053bb:	mov    esp,0xbdbd3637
  4053c0:	cli    
  4053c1:	xor    BYTE PTR [eax+0x6f0a97d3],0x4f
  4053c8:	retf   0xd91e
  4053cb:	popf   
  4053cc:	push   0x3d9146fb
  4053d1:	adc    BYTE PTR [edi],bh
  4053d3:	ret    0xc177
  4053d6:	js     0x4053cd
  4053d8:	stc    
  4053d9:	jo     0x4053a9
  4053db:	jmp    0x255eea93
  4053e0:	pop    edx
  4053e1:	dec    ebx
  4053e2:	out    0x78,eax
  4053e4:	cmp    al,0xa8
  4053e6:	pop    esi
  4053e7:	mov    ds:0xd82872d5,al
  4053ec:	int3   
  4053ed:	adc    dh,BYTE PTR [esi+0x7f997aa1]
  4053f3:	aad    0xa
  4053f5:	or     BYTE PTR [ebx+0x3c],dl
  4053f8:	pusha  
  4053f9:	test   BYTE PTR [ebx],al
  4053fb:	es stos BYTE PTR es:[edi],al
  4053fd:	mov    BYTE PTR ds:0x929388e5,ah
  405403:	out    0x9c,eax
  405405:	sub    esp,esi
  405407:	or     BYTE PTR [ebx],bl
  405409:	jmp    0x2e17:0xc4d81209
  405410:	xchg   edx,eax
  405411:	ds dec edi
  405413:	out    dx,eax
  405414:	jbe    0x4053a3
  405416:	push   ecx
  405417:	sbb    al,al
  405419:	or     BYTE PTR [ebp+0x1e],0xf0
  40541d:	mov    esi,DWORD PTR [edi+0x4]
  405420:	popa   
  405421:	adc    dl,BYTE PTR ds:0x29d4a317
  405427:	mov    dl,0x94
  405429:	(bad)  
  40542a:	pushf  
  40542b:	mov    BYTE PTR ds:0xf81ff18f,bh
  405431:	dec    edi
  405432:	inc    ebp
  405433:	mov    ds:0x87b55f10,al
  405438:	test   BYTE PTR [edx+0x1391c09c],bl
  40543e:	add    esi,0xbf1be84a
  405444:	mov    ebx,0xb0fd61ac
  405449:	lods   eax,DWORD PTR ds:[esi]
  40544a:	call   0xb0bd9112
  40544f:	test   BYTE PTR [ecx+0x46],bh
  405452:	aad    0x13
  405454:	pop    ebx
  405455:	jge    0x4054a3
  405457:	sar    BYTE PTR [eax-0x24],1
  40545a:	dec    eax
  40545b:	pop    ss
  40545c:	imul   edx,DWORD PTR [edx-0x31],0xd
  405460:	push   cs
  405461:	(bad)  
  405462:	in     eax,dx
  405463:	dec    ecx
  405464:	push   edx
  405465:	jmp    0xa18ce7ca
  40546a:	imul   edx,DWORD PTR [edi-0x5e54618b],0xffffffce
  405471:	dec    ebx
  405472:	cli    
  405473:	out    dx,eax
  405474:	sbb    ebp,edi
  405476:	jne    0x405414
  405478:	mov    esp,DWORD PTR [edi-0x68786b30]
  40547e:	xchg   ebp,eax
  40547f:	enter  0x47a1,0x57
  405483:	rcl    DWORD PTR [esi-0xd2f37b6],cl
  405489:	xor    DWORD PTR [eax],ebp
  40548b:	push   es
  40548c:	jmp    0x86f7d11d
  405491:	or     eax,DWORD PTR [ebx+0x7b048900]
  405497:	sbb    ebx,edx
  405499:	cld    
  40549a:	push   edi
  40549b:	mov    cs,ebx
  40549d:	or     DWORD PTR [eax+0x3931d160],edx
  4054a3:	sub    BYTE PTR [esi-0x6188084e],bl
  4054a9:	rcl    BYTE PTR [esi+0x483203c9],cl
  4054af:	(bad)  
  4054b0:	and    ebp,DWORD PTR [esi+0x33869b25]
  4054b6:	adc    BYTE PTR fs:[ebx-0x1b],0x2
  4054bb:	jecxz  0x405455
  4054bd:	sbb    eax,0x7a84ead5
  4054c2:	fs inc esi
  4054c4:	push   ss
  4054c5:	iret   
  4054c6:	push   ebx
  4054c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c8:	in     eax,0x6f
  4054ca:	push   ss
  4054cb:	cmp    edx,DWORD PTR [eax+0x1355df88]
  4054d1:	mov    ah,0x3
  4054d3:	add    DWORD PTR [ecx-0x53],ecx
  4054d6:	into   
  4054d7:	mov    dh,cl
  4054d9:	pop    ss
  4054da:	mov    ecx,0x6884be82
  4054df:	stc    
  4054e0:	fidivr DWORD PTR [edi+0x77]
  4054e3:	xchg   ebp,eax
  4054e4:	dec    esi
  4054e5:	xchg   BYTE PTR [eax+0x4d],dl
  4054e8:	test   BYTE PTR [esi+0x49],bl
  4054eb:	loopne 0x405511
  4054ed:	push   ebx
  4054ee:	sub    bh,dl
  4054f0:	int3   
  4054f1:	or     ebx,DWORD PTR [edx-0x71]
  4054f4:	mov    dh,0x5
  4054f6:	out    dx,eax
  4054f7:	sbb    DWORD PTR [edx+0x1fd83060],edi
  4054fd:	and    eax,0x21e16f2b
  405502:	(bad)  
  405503:	fisubr DWORD PTR [edx-0xc]
  405506:	mov    bl,0x4c
  405508:	dec    ebp
  405509:	ss push es
  40550b:	adc    esi,edx
  40550d:	dec    edi
  40550e:	mov    ds:0xdd2f130f,eax
  405513:	aas    
  405514:	xchg   esp,eax
  405515:	aam    0xb5
  405517:	shl    DWORD PTR [eax+0x37],cl
  40551a:	(bad)  
  40551b:	jno    0x4054c3
  40551d:	sub    BYTE PTR [ecx],bl
  40551f:	xor    ebp,DWORD PTR [edi+0x5467290e]
  405525:	out    dx,al
  405526:	cmp    eax,0xfe89be40
  40552b:	repz cmp eax,0x7dcd4728
  405531:	into   
  405532:	call   0xb409:0x37413992
  405539:	sbb    esi,DWORD PTR [esi]
  40553b:	cmp    al,0xf1
  40553d:	dec    eax
  40553e:	scas   eax,DWORD PTR es:[edi]
  40553f:	sub    DWORD PTR [edi-0x56d1ec8e],edx
  405545:	stos   DWORD PTR es:[edi],eax
  405546:	pop    edx
  405547:	test   BYTE PTR [eax-0x5e],0x28
  40554b:	in     eax,dx
  40554c:	and    DWORD PTR [eax+0x487f0a2c],eax
  405552:	stos   DWORD PTR es:[edi],eax
  405553:	lods   eax,DWORD PTR ds:[esi]
  405554:	dec    edx
  405555:	xchg   edx,eax
  405556:	bound  edi,QWORD PTR [esi+0xc]
  405559:	dec    eax
  40555a:	sub    edx,esp
  40555c:	hlt    
  40555d:	inc    edi
  40555e:	lods   al,BYTE PTR ds:[esi]
  40555f:	js     0x40557e
  405561:	mov    ecx,0xa16f4d4b
  405566:	mov    edi,0xcbe5281a
  40556b:	iret   
  40556c:	or     DWORD PTR [eax],0x28
  40556f:	call   0x38e89f2d
  405574:	and    dl,BYTE PTR [ebx+0x67]
  405577:	add    esp,0x6824859e
  40557d:	jge    0x40550b
  40557f:	jmp    0x4692:0x13a4cdf6
  405586:	xchg   esi,eax
  405587:	pop    ebx
  405588:	pop    es
  405589:	std    
  40558a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40558b:	sub    eax,0x8928ef71
  405590:	loopne 0x405537
  405592:	fbld   TBYTE PTR [ecx+0xd0e8be5]
  405598:	mov    ecx,0x549df1f
  40559d:	mov    WORD PTR [ecx],es
  40559f:	push   ds
  4055a0:	aad    0x73
  4055a2:	hlt    
  4055a3:	iret   
  4055a4:	adc    BYTE PTR [ebp-0x56],cl
  4055a7:	inc    esi
  4055a8:	cmp    edx,DWORD PTR [ebp-0x25b26cf0]
  4055ae:	pop    ss
  4055af:	in     al,0x74
  4055b1:	adc    esp,esi
  4055b3:	cld    
  4055b4:	jg     0x405629
  4055b6:	mov    bh,0xf4
  4055b8:	mov    cs,WORD PTR [edx-0x10]
  4055bb:	mov    esp,0x4d13aa4c
  4055c0:	sbb    DWORD PTR [eax+ecx*8+0x3d05fb66],eax
  4055c7:	out    0xd,al
  4055c9:	sub    al,0x47
  4055cb:	xchg   esi,eax
  4055cc:	(bad)
  4055d0:	add    DWORD PTR [ecx-0x26],ebp
  4055d3:	(bad)  
  4055d4:	mov    edi,DWORD PTR es:[eax]
  4055d7:	or     al,0x30
  4055d9:	mov    esp,0x17ea4924
  4055de:	xchg   ecx,eax
  4055df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e0:	fisubr DWORD PTR [ebx+0xb]
  4055e3:	lds    edi,FWORD PTR [ebx+0xb029ab9]
  4055e9:	sub    eax,0xabe820cd
  4055ee:	push   esp
  4055ef:	fistp  DWORD PTR [ebx-0x5251e0e9]
  4055f5:	inc    ecx
  4055f6:	(bad)  
  4055f7:	in     eax,dx
  4055f8:	adc    BYTE PTR [esi-0x5bcec0c],dh
  4055fe:	adc    ebp,DWORD PTR [edi-0x78]
  405601:	ret    
  405602:	imul   esi,DWORD PTR [ebx+0x6c],0xffffffcc
  405606:	jle    0x40563a
  405608:	test   BYTE PTR [eax-0xfad2872],dl
  40560e:	push   eax
  40560f:	dec    esi
  405610:	mov    al,0x64
  405612:	inc    ebp
  405613:	sub    eax,0xcacc5741
  405618:	lods   al,BYTE PTR ds:[esi]
  405619:	lock dec eax
  40561b:	scas   eax,DWORD PTR es:[edi]
  40561c:	das    
  40561d:	les    eax,FWORD PTR [esi]
  40561f:	int3   
  405620:	popa   
  405621:	ss pop es
  405623:	retf   0x48d8
  405626:	shl    BYTE PTR [edx+esi*2],cl
  405629:	pop    es
  40562a:	cld    
  40562b:	xor    al,0x81
  40562d:	shr    DWORD PTR [ebp-0x44af6d84],1
  405633:	popa   
  405634:	jg     0x4055d5
  405636:	mov    eax,ds:0x9c0fd6bb
  40563b:	stos   BYTE PTR es:[edi],al
  40563c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563d:	sub    ebp,esp
  40563f:	push   ss
  405640:	add    dl,dl
  405642:	add    esi,DWORD PTR gs:[ebx+0x17]
  405646:	jae    0x405669
  405648:	pop    esi
  405649:	push   esi
  40564a:	add    eax,0x11a05799
  40564f:	rol    DWORD PTR [esi+0x7f],1
  405652:	inc    ecx
  405653:	lgs    edi,FWORD PTR [edx+ecx*1]
  405657:	mov    WORD PTR [edx+0x42],gs
  40565a:	ins    DWORD PTR es:[edi],dx
  40565b:	mov    al,0x80
  40565d:	js     0x405630
  40565f:	push   es
  405660:	sub    esp,DWORD PTR [edi+ebp*8]
  405663:	cmp    edi,DWORD PTR ds:0xebfe0031
  405669:	call   0xa649c6f4
  40566e:	pushf  
  40566f:	dec    esp
  405670:	mov    BYTE PTR [ebp+0x41984bf8],dh
  405676:	bound  ecx,QWORD PTR [esi-0x49]
  405679:	and    eax,ebx
  40567b:	(bad)  
  40567c:	enter  0x630,0x7b
  405680:	pop    es
  405681:	idiv   DWORD PTR [edx+0x73701b0]
  405687:	inc    esp
  405688:	xchg   esi,edi
  40568a:	xchg   ecx,eax
  40568b:	loope  0x405638
  40568d:	pop    ebp
  40568e:	sti    
  40568f:	mov    al,0x45
  405691:	inc    esp
  405692:	sub    eax,0x986a2b3c
  405697:	hlt    
  405698:	cmp    dh,BYTE PTR [edi-0x39]
  40569b:	pop    edx
  40569c:	mov    edx,0xac193159
  4056a1:	sbb    al,0x55
  4056a3:	lahf   
  4056a4:	pop    ecx
  4056a5:	lea    eax,[eax-0x45c48ea6]
  4056ab:	add    eax,0x2a44a853
  4056b0:	adc    eax,0xf0379a97
  4056b5:	loope  0x40572e
  4056b7:	popa   
  4056b8:	push   ebx
  4056b9:	cmp    dh,BYTE PTR [eax-0x4b]
  4056bc:	scas   al,BYTE PTR es:[edi]
  4056bd:	xor    al,BYTE PTR [edx+0x32d976a4]
  4056c3:	jno    0x4056a0
  4056c5:	test   eax,0xcdfe22f
  4056ca:	(bad)  
  4056cc:	pop    eax
  4056cd:	outs   dx,DWORD PTR ds:[esi]
  4056ce:	mov    ds:0x27f06f44,al
  4056d3:	jne    0x405718
  4056d5:	fisub  WORD PTR [esi-0x180f0a5c]
  4056db:	dec    esi
  4056dc:	dec    esp
  4056dd:	lods   eax,DWORD PTR ds:[esi]
  4056de:	pop    edi
  4056df:	repnz lods al,BYTE PTR ds:[esi]
  4056e1:	adc    ecx,DWORD PTR [edi+0xb]
  4056e4:	gs out 0x30,eax
  4056e7:	push   ds
  4056e8:	les    esi,FWORD PTR [eax-0x2d8c3175]
  4056ee:	or     eax,esi
  4056f0:	ja     0x40575f
  4056f2:	test   BYTE PTR [ecx],bh
  4056f4:	out    dx,eax
  4056f5:	dec    ebp
  4056f6:	dec    ebp
  4056f7:	or     dh,ah
  4056f9:	(bad)  
  4056fa:	out    0xfa,eax
  4056fc:	aaa    
  4056fd:	jle    0x405698
  4056ff:	fwait
  405700:	dec    ebx
  405701:	inc    edi
  405702:	int3   
  405703:	in     eax,dx
  405704:	pop    esi
  405705:	jl     0x405763
  405707:	push   eax
  405708:	pop    ebp
  405709:	cld    
  40570a:	push   esi
  40570b:	je     0x405753
  40570d:	shl    ecx,0x1e
  405710:	lea    ecx,[edx+eax*1]
  405713:	mov    eax,DWORD PTR [ebx]
  405715:	movzx  edx,WORD PTR ds:0x4228ca
  40571c:	or     edx,DWORD PTR ds:0x4229ae
  405722:	mov    DWORD PTR ds:0x4228ca,edx
  405728:	mov    edx,DWORD PTR [ebx+0x4]
  40572b:	sub    DWORD PTR ds:0x4228de,0x42296a
  405735:	shrd   eax,edx,0x2
  405739:	shr    edx,0x2
  40573c:	cmp    DWORD PTR ds:0x422936,0x0
  405743:	mov    DWORD PTR ds:0x42296a,edx
  405749:	mov    DWORD PTR ds:0x4229ca,0x5a5b
  405753:	mov    DWORD PTR ds:0x422952,0x59ac
  40575d:	jmp    0x4057b9
  405762:	not    edx
  405764:	mov    edx,DWORD PTR ds:0x4228aa
  40576a:	jbe    0x4057a1
  405770:	push   0x1
  405772:	push   0x68d9
  405777:	call   DWORD PTR ds:0x42a29c
  40577d:	mov    edx,DWORD PTR ds:0x4229ce
  405783:	add    DWORD PTR ds:0x422922,edx
  405789:	xor    edx,edx
  40578b:	or     edx,DWORD PTR ds:0x422926
  405791:	add    DWORD PTR ds:0x42297a,edx
  405797:	or     DWORD PTR ds:0x4228d6,0x1005
  4057a1:	add    DWORD PTR ds:0x4228ae,ecx
  4057a7:	mov    DWORD PTR ds:0x422912,0x7731
  4057b1:	add    edx,0x5dfe
  4057b7:	not    edx
  4057b9:	mov    DWORD PTR [ebp-0x1c],eax
  4057bc:	mov    edx,DWORD PTR ds:0x422982
  4057c2:	or     DWORD PTR ds:0x4228c2,edx
  4057c8:	mov    eax,DWORD PTR [ebx]
  4057ca:	jmp    0x405d54
  4057cf:	loope  0x405800
  4057d1:	adc    eax,0x58a019aa
  4057d6:	adc    al,0x1b
  4057d8:	push   ds
  4057d9:	fsubr  DWORD PTR [eax+0x68ef4e89]
  4057df:	adc    DWORD PTR [ecx+0x43d1616],esp
  4057e5:	push   ss
  4057e6:	push   ss
  4057e7:	or     edi,eax
  4057e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ea:	adc    al,0xf0
  4057ec:	out    dx,al
  4057ed:	cmp    bx,WORD PTR [edi-0x540e3b1a]
  4057f4:	jmp    0xe143b3c
  4057f9:	scas   al,BYTE PTR es:[edi]
  4057fa:	lds    ebx,FWORD PTR [eax-0x5ecde652]
  405800:	(bad)  
  405801:	xor    BYTE PTR [ebp-0x21449c57],al
  405807:	lock out dx,al
  405809:	mov    esp,DWORD PTR ds:0x8b4da4db
  40580f:	mov    ch,0xa7
  405811:	pusha  
  405812:	fdivr  st(0),st
  405814:	xor    BYTE PTR [edi+0x3d],0x63
  405818:	dec    ebp
  405819:	xlat   BYTE PTR ds:[ebx]
  40581a:	(bad)  [ecx+esi*1]
  40581d:	in     al,0x4c
  40581f:	hlt    
  405820:	mov    al,0x1b
  405822:	clc    
  405823:	test   edi,ebp
  405825:	mov    eax,0x4e63ea31
  40582a:	ficomp WORD PTR [eax+eiz*8-0x28f89f5e]
  405831:	aad    0xdc
  405833:	dec    eax
  405834:	sub    al,0x8
  405836:	shl    BYTE PTR [eax+0x224ed4e7],0xfe
  40583d:	popa   
  40583e:	push   esi
  40583f:	imul   ecx,DWORD PTR [edx-0x2a3d39b3],0x950807ee
  405849:	mov    DWORD PTR [ebx+eiz*8-0xc],ebp
  40584d:	mov    ch,0xe0
  40584f:	mov    dl,0xcb
  405851:	sahf   
  405852:	mov    esp,DWORD PTR [edi]
  405854:	adc    dl,dl
  405856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405857:	les    esp,FWORD PTR [esi-0x3cce080a]
  40585d:	adc    DWORD PTR [ecx-0x2423937e],esi
  405863:	mov    eax,ds:0xa27ce1b1
  405868:	jns    0x4058d1
  40586a:	cwde   
  40586b:	xor    BYTE PTR [ebx-0x9],ch
  40586e:	pushf  
  40586f:	ror    BYTE PTR [edx+0x44],cl
  405872:	mov    bh,0x8c
  405874:	and    cl,ch
  405876:	and    BYTE PTR [esi],bh
  405878:	and    BYTE PTR [edx-0x7d],0x8f
  40587c:	add    al,0x6
  40587e:	iret   
  40587f:	test   eax,0xdfb99b53
  405884:	out    0x35,eax
  405886:	and    al,BYTE PTR [esi]
  405888:	push   ebx
  405889:	lods   eax,DWORD PTR ds:[esi]
  40588a:	jge    0x4058a9
  40588c:	scas   eax,DWORD PTR es:[edi]
  40588d:	mov    DWORD PTR [edi-0xd],ecx
  405890:	dec    edx
  405891:	retf   
  405892:	xchg   ecx,eax
  405893:	mov    ax,ds:0x2a7f8676
  405899:	repz retf 0xc19b
  40589d:	loope  0x4058d6
  40589f:	dec    esi
  4058a1:	scas   al,BYTE PTR es:[edi]
  4058a2:	jbe    0x405892
  4058a4:	dec    eax
  4058a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058a6:	in     al,0x26
  4058a8:	jecxz  0x405922
  4058aa:	fsubr  QWORD PTR [edx-0x59]
  4058ad:	mov    DWORD PTR [edx+0x29a7e761],edi
  4058b3:	data16 arpl WORD PTR [edx-0x11],bp
  4058b7:	std    
  4058b8:	inc    esi
  4058b9:	(bad)  
  4058ba:	fbstp  TBYTE PTR [eax+0x7bd9439e]
  4058c0:	or     eax,0x1ef3242a
  4058c5:	dec    esi
  4058c6:	jnp    0x4058a3
  4058c8:	sbb    edi,DWORD PTR [esp+edx*1+0x21bde9f9]
  4058cf:	push   edi
  4058d0:	push   es
  4058d1:	sbb    ebp,ecx
  4058d3:	mov    cl,BYTE PTR [edi]
  4058d5:	repnz (bad) 
  4058d7:	sbb    al,0x35
  4058d9:	jnp    0x4058ca
  4058db:	lods   eax,DWORD PTR ds:[esi]
  4058dc:	sbb    eax,0x71f0526b
  4058e1:	push   ss
  4058e2:	jo     0x405960
  4058e4:	dec    BYTE PTR [ebp+eax*2+0x72]
  4058e8:	imul   BYTE PTR [edi-0x18]
  4058eb:	add    dl,al
  4058ed:	in     eax,dx
  4058ee:	ror    BYTE PTR [ebx],1
  4058f0:	mul    DWORD PTR [ecx]
  4058f2:	pop    eax
  4058f3:	lahf   
  4058f4:	sub    bl,BYTE PTR [edi+0x54e7ca06]
  4058fa:	inc    esi
  4058fb:	and    al,dh
  4058fd:	mul    edx
  4058ff:	test   edx,0x5e8a721c
  405905:	bound  esi,QWORD PTR [ebp+0x68ebaea9]
  40590b:	popf   
  40590c:	adc    eax,0xcb013a05
  405911:	mov    esp,0xd99c31d8
  405916:	xchg   DWORD PTR [esi+0x4cfd169f],esp
  40591c:	mov    ebp,0xda20234b
  405921:	test   BYTE PTR [edi+0x48],dh
  405924:	dec    ecx
  405925:	add    eax,0xd5a0667e
  40592a:	test   ah,0x7d
  40592d:	cmc    
  40592e:	fs js  0x405927
  405931:	mov    ah,0xd5
  405933:	cli    
  405934:	xor    DWORD PTR [ebp+eiz*2-0x5db64329],eax
  40593b:	push   cs
  40593c:	(bad)  
  40593d:	mov    eax,0x3957bf3c
  405942:	je     0x4058d2
  405944:	and    dh,BYTE PTR [eax]
  405946:	cmc    
  405947:	hlt    
  405948:	and    BYTE PTR [ebx+0x5],dl
  40594b:	and    DWORD PTR [ebx-0x6bdc8c3e],edi
  405951:	(bad)  
  405953:	inc    edi
  405954:	pushf  
  405955:	fdiv   st(0),st
  405957:	and    esp,DWORD PTR [ebx+0x6e]
  40595a:	adc    eax,0x8917392f
  40595f:	loop   0x40595b
  405961:	or     dh,BYTE PTR [eax+0x538768b]
  405967:	xchg   esi,eax
  405968:	fdivp  st(6),st
  40596a:	mov    ch,0x5f
  40596c:	pop    ebp
  40596d:	cdq    
  40596e:	cdq    
  40596f:	dec    esp
  405970:	push   0xffffffe8
  405972:	jb     0x4059a2
  405974:	mov    dl,0xc6
  405976:	imul   eax,DWORD PTR [edx],0x75328ea4
  40597c:	adc    DWORD PTR [eax+0x42bf4989],esi
  405982:	shr    BYTE PTR [edi+0x79],cl
  405985:	mov    edx,0x3f6884fe
  40598a:	xchg   edx,eax
  40598b:	dec    edx
  40598c:	mov    esp,0xd3fe141c
  405991:	xor    DWORD PTR [ebp+0x2e],edx
  405994:	jmp    0xfb72fd61
  405999:	xor    DWORD PTR [ebp-0x59],edi
  40599c:	add    eax,0x30b4d15f
  4059a1:	adc    esp,esp
  4059a3:	lods   al,BYTE PTR ds:[esi]
  4059a4:	(bad)  
  4059a5:	lahf   
  4059a6:	dec    ebp
  4059a7:	pop    esp
  4059a8:	mov    dh,0xc0
  4059aa:	inc    esi
  4059ab:	pop    eax
  4059ac:	(bad)  
  4059ad:	push   cs
  4059ae:	fiadd  DWORD PTR [edi]
  4059b0:	pushf  
  4059b1:	inc    edx
  4059b2:	adc    ah,dh
  4059b4:	ja     0x4059c9
  4059b6:	adc    ah,BYTE PTR [edi-0x6d]
  4059b9:	fs mov esi,0x2442700e
  4059bf:	push   esi
  4059c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c1:	int3   
  4059c2:	dec    ebx
  4059c3:	scas   eax,DWORD PTR es:[edi]
  4059c4:	rol    DWORD PTR ds:0x5a9896e6,0x26
  4059cb:	jle    0x4059bf
  4059cd:	std    
  4059ce:	clc    
  4059cf:	popa   
  4059d0:	fld    TBYTE PTR [ecx+0x561f0e4e]
  4059d6:	loopne 0x405a41
  4059d8:	fcmovne st,st(3)
  4059da:	dec    ebp
  4059db:	ret    
  4059dc:	(bad)  
  4059dd:	mov    DWORD PTR [edx+0x61],esp
  4059e0:	inc    BYTE PTR fs:[ebx+0xa880c25]
  4059e7:	pop    ecx
  4059e8:	call   0x97dc:0xc253cdc0
  4059ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f0:	out    dx,eax
  4059f1:	retf   0x193f
  4059f4:	ss in  eax,0xae
  4059f7:	pop    DWORD PTR [ebx+0x46]
  4059fa:	pop    ebp
  4059fb:	pop    edi
  4059fc:	push   es
  4059fd:	mov    ds:0x97ed81bf,eax
  405a02:	or     al,dh
  405a04:	fild   DWORD PTR [edx]
  405a06:	ror    DWORD PTR [ecx],0x77
  405a09:	ins    BYTE PTR es:[edi],dx
  405a0a:	shr    BYTE PTR [edx+ecx*8],cl
  405a0d:	sbb    eax,0xaf907d1
  405a12:	lds    ebx,FWORD PTR [edi]
  405a14:	xchg   BYTE PTR [ebp-0x2d27add4],cl
  405a1a:	mov    ecx,0x4137e28f
  405a1f:	jmp    DWORD PTR [esi+0x5fbf468]
  405a25:	xchg   esi,eax
  405a26:	cmc    
  405a27:	test   al,0x65
  405a29:	jnp    0x405a49
  405a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a2c:	xchg   edx,eax
  405a2d:	fst    QWORD PTR [eax-0x72]
  405a30:	aas    
  405a31:	push   es
  405a32:	leave  
  405a33:	mov    cl,0xe4
  405a35:	in     eax,dx
  405a36:	pop    eax
  405a37:	adc    bl,BYTE PTR [ebp-0x62e1b07a]
  405a3d:	cmc    
  405a3e:	push   0x9e798a60
  405a43:	jle    0x405a58
  405a45:	in     al,0x5b
  405a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a48:	add    eax,0x2f322423
  405a4d:	bound  ebx,QWORD PTR [edi-0x6]
  405a50:	sbb    dl,bh
  405a52:	ins    DWORD PTR es:[edi],dx
  405a53:	jb     0x4059eb
  405a55:	rol    BYTE PTR [ecx+0x2e],0x20
  405a59:	jmp    0x4e90:0xa5087c60
  405a60:	push   cs
  405a61:	popf   
  405a62:	outs   dx,BYTE PTR ds:[esi]
  405a63:	retf   
  405a64:	mov    al,ds:0x414b2ebf
  405a69:	mov    eax,0x8e74787b
  405a6e:	test   eax,0xf378b48
  405a73:	mov    edi,esp
  405a75:	retf   
  405a76:	mov    ecx,0xfb42f90f
  405a7b:	(bad)  
  405a7c:	std    
  405a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a7e:	mov    ds:0xbe349538,eax
  405a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a84:	jne    0x405b01
  405a86:	fnstenv [edi-0x8]
  405a89:	xor    edx,DWORD PTR [ecx]
  405a8b:	lds    ebx,FWORD PTR [eax+0x6b]
  405a8e:	and    edi,DWORD PTR ds:0x2cc4da92
  405a94:	fdivr  st,st(4)
  405a96:	js     0x405aec
  405a98:	sahf   
  405a99:	lock cmp al,0x5c
  405a9c:	pop    ebp
  405a9d:	std    
  405a9e:	(bad)  
  405aa0:	add    DWORD PTR [edx-0x35ec7fc1],0xdaa1ff45
  405aaa:	pcmpgtw mm4,mm0
  405aad:	shr    edx,0x96
  405ab0:	push   ebx
  405ab1:	(bad)  
  405ab2:	jmp    0x405a86
  405ab4:	sbb    BYTE PTR [eax+0x23c93188],0x13
  405abb:	loope  0x405ac1
  405abd:	xlat   BYTE PTR ds:[ebx]
  405abe:	jmp    0xec74ea5d
  405ac3:	dec    ebx
  405ac4:	je     0x405b29
  405ac6:	int    0xa5
  405ac8:	pop    esi
  405ac9:	fild   QWORD PTR [ebp+0x57f3e073]
  405acf:	adc    BYTE PTR [edi-0x668f0f5e],bl
  405ad5:	outs   dx,BYTE PTR ds:[esi]
  405ad6:	fidivr DWORD PTR [ebp-0x75]
  405ad9:	in     al,0x26
  405adb:	je     0x405b5a
  405add:	dec    ebx
  405ade:	retf   0x647a
  405ae1:	mov    ds:0x9557bee1,eax
  405ae6:	pop    esi
  405ae7:	inc    ebp
  405ae8:	adc    eax,0xb06f0bee
  405aed:	xchg   ebp,eax
  405aee:	pop    edx
  405aef:	jge    0x405a8c
  405af1:	jns    0x405b50
  405af3:	jp     0x405acb
  405af5:	(bad)  
  405af6:	stc    
  405af7:	sahf   
  405af8:	lock mov ebx,0xcd106d8b
  405afe:	ret    
  405aff:	ja     0x405af2
  405b01:	mov    eax,ds:0x9c8c4391
  405b06:	dec    esi
  405b07:	sbb    eax,0x20e97d71
  405b0c:	sti    
  405b0d:	sbb    ebx,edi
  405b0f:	inc    edx
  405b10:	data16 add al,0x19
  405b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b14:	dec    esp
  405b15:	shr    DWORD PTR [edi+eiz*4+0x62],cl
  405b19:	xchg   esp,eax
  405b1a:	inc    ebp
  405b1b:	mov    cs,WORD PTR [edx]
  405b1d:	mov    ecx,0x71790777
  405b22:	sub    cl,bl
  405b24:	add    cl,bl
  405b26:	or     esi,DWORD PTR [eax-0x80]
  405b29:	inc    ecx
  405b2a:	imul   edi,edi,0x5e
  405b2d:	push   ebp
  405b2e:	stc    
  405b2f:	mov    eax,0x5948c069
  405b34:	ret    0xa52c
  405b37:	fidiv  WORD PTR [edi]
  405b39:	xor    eax,DWORD PTR [ecx+0x61]
  405b3c:	mov    BYTE PTR [esi+0x5d],ah
  405b3f:	jmp    0x2b205088
  405b44:	test   eax,0x8e8ae77a
  405b49:	xor    edx,DWORD PTR [ebx+0x45aa9943]
  405b4f:	ss inc ebx
  405b51:	mov    fs,ebx
  405b53:	cmp    BYTE PTR [edi+0xd],cl
  405b56:	and    bl,dl
  405b58:	outs   dx,BYTE PTR ds:[esi]
  405b59:	dec    ecx
  405b5a:	das    
  405b5b:	push   ebp
  405b5c:	pop    di
  405b5e:	fild   QWORD PTR [edx+eiz*1-0x3f]
  405b62:	sbb    BYTE PTR [ebp-0x2292f7b8],dl
  405b68:	and    bh,dl
  405b6a:	sahf   
  405b6b:	mov    ebp,0x5e38251d
  405b70:	fcom   st(5)
  405b72:	pop    ecx
  405b73:	mov    ah,0xf9
  405b75:	pusha  
  405b76:	int3   
  405b77:	push   es
  405b78:	mov    ds:0xe1072046,eax
  405b7d:	hlt    
  405b7e:	push   edx
  405b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b80:	dec    ebp
  405b81:	clc    
  405b82:	fld    DWORD PTR [ecx-0x2]
  405b85:	je     0x405baa
  405b87:	cmp    esi,DWORD PTR [edi-0xc]
  405b8a:	gs (bad) 
  405b8c:	push   edi
  405b8d:	not    WORD PTR [ebx]
  405b90:	jp     0x405ba4
  405b92:	mov    ds:0xe83336b8,al
  405b97:	mov    ecx,0xd824e2e3
  405b9c:	das    
  405b9d:	sbb    eax,0x45e1e952
  405ba2:	sub    al,0xb1
  405ba4:	sub    BYTE PTR [edi],0x79
  405ba7:	jb     0x405b6d
  405ba9:	test   BYTE PTR [ebx+0x5bba3bcf],dh
  405baf:	sbb    ebx,DWORD PTR [ebx-0x505405dc]
  405bb5:	arpl   WORD PTR [edi-0x524dce68],bx
  405bbb:	stc    
  405bbc:	daa    
  405bbd:	and    eax,0xb4520599
  405bc2:	sbb    eax,0x711f2a21
  405bc7:	fsub   st,st(2)
  405bc9:	pop    ds
  405bca:	cs jo  0x405be2
  405bcd:	jecxz  0x405c13
  405bcf:	gs mov ebx,0x484279f3
  405bd5:	out    0xf4,al
  405bd7:	das    
  405bd8:	jg     0x405b60
  405bda:	add    eax,0x23386b49
  405bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405be0:	inc    edx
  405be1:	mov    al,ds:0x7bdf5545
  405be6:	lds    edi,FWORD PTR [ebx]
  405be8:	pop    ecx
  405be9:	mov    gs,eax
  405beb:	ds jns 0x405b7e
  405bee:	ja     0x405b70
  405bf0:	fild   WORD PTR [esi]
  405bf2:	or     eax,0x270ce524
  405bf7:	lock inc edi
  405bf9:	repnz push ebx
  405bfb:	ja     0x405b8e
  405bfd:	ret    0x4c8f
  405c00:	ins    DWORD PTR es:[edi],dx
  405c01:	or     esi,DWORD PTR [ecx-0x7f2b0e9e]
  405c07:	cdq    
  405c08:	mov    ch,0x34
  405c0a:	js     0x405bd5
  405c0c:	sti    
  405c0d:	cmp    esp,eax
  405c0f:	inc    ebx
  405c10:	nop
  405c11:	pop    edi
  405c12:	iret   
  405c13:	scas   eax,DWORD PTR es:[edi]
  405c14:	xchg   ebp,eax
  405c15:	mov    esp,0xd22e9844
  405c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c1b:	mov    esp,0xd21d3f0b
  405c20:	test   DWORD PTR [edi],0xc9febad4
  405c26:	sbb    al,0x7d
  405c28:	outs   dx,DWORD PTR ds:[esi]
  405c29:	mov    ds:0xb1cb6858,al
  405c2e:	xchg   edi,eax
  405c2f:	xchg   BYTE PTR [eax+0x3c],dh
  405c32:	icebp  
  405c33:	out    0x4f,eax
  405c35:	mov    cl,0x6f
  405c37:	fsubr  QWORD PTR [esp+edi*1]
  405c3a:	test   ah,bh
  405c3c:	cmp    edi,eax
  405c3e:	cdq    
  405c3f:	mov    dh,dl
  405c41:	jmp    0xa67b:0xdd249eda
  405c48:	lock or DWORD PTR [ebx+0x61224678],ebx
  405c4f:	and    eax,0xcba24de4
  405c54:	xchg   ebp,eax
  405c55:	add    ecx,eax
  405c57:	sbb    dh,BYTE PTR [eax-0x50473bdf]
  405c5d:	repnz pop edi
  405c5f:	ret    
  405c60:	imul   ecx,ecx,0xffffffdc
  405c63:	outs   dx,BYTE PTR ds:[esi]
  405c64:	ret    
  405c65:	add    cl,al
  405c67:	cmp    DWORD PTR [edx-0x4d],eax
  405c6a:	mov    ebx,0x5109084d
  405c6f:	ins    BYTE PTR es:[edi],dx
  405c70:	fdivrp st(3),st
  405c72:	push   eax
  405c73:	mov    eax,ds:0x64ab0903
  405c78:	(bad)  
  405c79:	sub    eax,0x1684d5fb
  405c7e:	lock test eax,ecx
  405c81:	mov    eax,0xc257883b
  405c86:	mov    ecx,0x376e6848
  405c8b:	iret   
  405c8c:	jno    0x405c4e
  405c8e:	shl    DWORD PTR [ebx+0x33aef9f7],cl
  405c94:	sub    DWORD PTR [edi],ebp
  405c96:	push   esi
  405c97:	cld    
  405c98:	stos   DWORD PTR es:[edi],eax
  405c99:	add    BYTE PTR [ebp+0x60],cl
  405c9c:	and    ah,al
  405c9e:	aaa    
  405c9f:	mov    WORD PTR [ebp-0x5aac3779],ds
  405ca5:	out    dx,al
  405ca6:	cld    
  405ca7:	mov    ds:0x789acd31,eax
  405cac:	push   ds
  405cad:	int3   
  405cae:	add    DWORD PTR [esi-0x5a87a46],esp
  405cb4:	out    0xf7,eax
  405cb6:	aad    0x83
  405cb8:	cmp    al,dl
  405cba:	ror    ebp,1
  405cbc:	sub    bh,BYTE PTR [edi-0x4e]
  405cbf:	pop    esp
  405cc0:	jg     0x405d31
  405cc2:	call   0x31d3:0x34a35e8a
  405cc9:	(bad)  
  405ccb:	and    al,0xa9
  405ccd:	push   edi
  405cce:	les    edi,FWORD PTR [ebx-0x44149f85]
  405cd4:	rol    dl,1
  405cd6:	pop    edx
  405cd7:	stc    
  405cd8:	(bad)  
  405cd9:	out    dx,al
  405cda:	mov    eax,ds:0xcc27bf4
  405cdf:	fist   WORD PTR [esi]
  405ce1:	jne    0x405cde
  405ce3:	clc    
  405ce4:	test   al,0x26
  405ce6:	aad    0x66
  405ce8:	fwait
  405ce9:	push   ss
  405cea:	daa    
  405ceb:	adc    cl,BYTE PTR [ecx+0x7be660a5]
  405cf1:	retf   0x4bbb
  405cf4:	or     ebp,edx
  405cf6:	ins    BYTE PTR es:[edi],dx
  405cf7:	jo     0x405ced
  405cf9:	jmp    0x30e5:0xeecaad04
  405d00:	fstp   QWORD PTR [eax+0x3d]
  405d03:	mov    dl,0x8
  405d05:	ja     0x405cf4
  405d07:	mov    BYTE PTR [esi+0x23],al
  405d0a:	sub    DWORD PTR [esi+0x62],ebp
  405d0d:	out    dx,eax
  405d0e:	lods   eax,DWORD PTR ds:[esi]
  405d0f:	pop    ebx
  405d10:	and    DWORD PTR [esi+ebx*8],esi
  405d13:	out    0xd7,eax
  405d15:	or     dl,BYTE PTR [ecx-0x52376aac]
  405d1b:	mov    DWORD PTR [esi-0xf],edi
  405d1e:	pop    esp
  405d1f:	call   0xc7da:0x8c9e76ae
  405d26:	or     ebp,edx
  405d28:	cli    
  405d29:	pop    edi
  405d2a:	push   0x4f
  405d2c:	push   ebp
  405d2d:	jl     0x405d5d
  405d2f:	pop    esp
  405d30:	je     0x405d3e
  405d32:	mov    ebp,0xaea7e6f4
  405d37:	push   ebx
  405d38:	pop    ebp
  405d39:	mov    ds:0x415e6d7e,eax
  405d3e:	mov    cs,WORD PTR [ecx+0x2ae75c03]
  405d44:	mov    edx,0xe73fcc06
  405d49:	jmp    0x765f565f
  405d4e:	jb     0x405d6a
  405d50:	aad    0xbb
  405d52:	lds    ebx,FWORD PTR [ebx+0xf04538b]
  405d58:	mov    dh,0x15
  405d5a:	inc    esi
  405d5b:	sub    DWORD PTR [edx+0x0],eax
  405d5e:	sub    DWORD PTR ds:0x4228f2,edx
  405d64:	xor    DWORD PTR [ebp-0x1c],edi
  405d67:	mov    edx,eax
  405d69:	or     DWORD PTR ds:0x4229ae,0x4229a2
  405d73:	xor    eax,eax
  405d75:	or     DWORD PTR ds:0x4228fa,0x422996
  405d7f:	or     eax,DWORD PTR [ebp-0x1c]
  405d82:	shl    edx,0x1e
  405d85:	sub    DWORD PTR ds:0x4228be,0x422982
  405d8f:	imul   eax,ecx
  405d92:	mov    ecx,DWORD PTR [ebx]
  405d94:	mov    edx,DWORD PTR [ebx+0x4]
  405d97:	shrd   ecx,edx,0x2
  405d9b:	inc    DWORD PTR ds:0x4228ee
  405da1:	mov    DWORD PTR [ebp-0x1c],ecx
  405da4:	mov    ecx,DWORD PTR [ebx]
  405da6:	xor    DWORD PTR [ebp-0x1c],edi
  405da9:	shr    edx,0x2
  405dac:	and    edx,DWORD PTR ds:0x4228ba
  405db2:	mov    edx,DWORD PTR [ebx+0x4]
  405db5:	movzx  edx,BYTE PTR ds:0x4228d2
  405dbc:	or     edx,DWORD PTR ds:0x422916
  405dc2:	mov    DWORD PTR ds:0x4228d2,edx
  405dc8:	mov    edx,ecx
  405dca:	add    DWORD PTR ds:0x42292a,0x4228d2
  405dd4:	xor    ecx,ecx
  405dd6:	and    DWORD PTR ds:0x4228c6,0x42295e
  405de0:	or     ecx,DWORD PTR [ebp-0x1c]
  405de3:	sbb    DWORD PTR ds:0x42288e,0x3b2c
  405ded:	shl    edx,0x1e
  405df0:	add    DWORD PTR ds:0x422926,0x2b51
  405dfa:	sub    ecx,eax
  405dfc:	mov    DWORD PTR ds:0x422992,0x2b61
  405e06:	mov    eax,DWORD PTR [ebp-0xc]
  405e09:	cmp    DWORD PTR [eax],ecx
  405e0b:	mov    eax,0x22e3
  405e10:	mov    eax,DWORD PTR [ebp-0xc]
  405e13:	jg     0x4069f3
  405e19:	xor    DWORD PTR ds:0x422956,0x2c62
  405e23:	mov    ecx,DWORD PTR [ebp+0x18]
  405e26:	adc    edx,0x3fdb
  405e2c:	mov    edx,DWORD PTR [ebp+0x1c]
  405e2f:	shrd   ecx,edx,0x2
  405e33:	or     DWORD PTR ds:0x42290e,0x2fd2
  405e3d:	mov    DWORD PTR [ebp-0x1c],ecx
  405e40:	xor    DWORD PTR ds:0x42297e,0x77ef
  405e4a:	mov    ecx,DWORD PTR [ebp+0x18]
  405e4d:	xor    DWORD PTR [ebp-0x1c],edi
  405e50:	shl    ecx,0x1e
  405e53:	xor    ecx,ecx
  405e55:	add    DWORD PTR ds:0x4229c6,0x4228de
  405e5f:	or     ecx,DWORD PTR [ebp-0x1c]
  405e62:	xor    DWORD PTR ds:0x42295a,0x42288a
  405e6c:	shr    edx,0x2
  405e6f:	mov    edx,DWORD PTR [ebp+0x1c]
  405e72:	mov    DWORD PTR [ebp-0x2c],ecx
  405e75:	mov    ecx,DWORD PTR [ebx]
  405e77:	or     DWORD PTR ds:0x42290a,edi
  405e7d:	mov    edx,DWORD PTR [ebx+0x4]
  405e80:	shrd   ecx,edx,0x2
  405e84:	sub    DWORD PTR ds:0x42294a,0x1cb2
  405e8e:	jmp    0x406418
  405e93:	fwait
  405e94:	push   edx
  405e95:	dec    esi
  405e96:	mov    dl,0x4e
  405e98:	xchg   edx,eax
  405e99:	sbb    edx,DWORD PTR [edx+0x58]
  405e9c:	inc    edi
  405e9d:	push   esi
  405e9e:	je     0x405ef2
  405ea0:	pop    esp
  405ea1:	into   
  405ea2:	mov    dl,0x3e
  405ea4:	xchg   edi,eax
  405ea5:	push   ss
  405ea6:	push   ss
  405ea7:	cmp    eax,0x48161604
  405eac:	sbb    al,0x25
  405eae:	ffree  st(6)
  405eb0:	in     al,0x82
  405eb2:	fucomi st,st(5)
  405eb4:	enter  0x40d,0x8b
  405eb8:	(bad)  
  405eb9:	(bad)  
  405eba:	fmul   DWORD PTR [edx-0x1]
  405ebd:	inc    esp
  405ebe:	push   0x18ead95c
  405ec3:	xchg   ebx,eax
  405ec4:	cmp    DWORD PTR [edx],ebx
  405ec6:	xor    ecx,ebp
  405ec8:	fistp  QWORD PTR [ebp+edx*1-0x3a85f052]
  405ecf:	mov    ch,0x5c
  405ed1:	sub    eax,0xb939d6ba
  405ed6:	sahf   
  405ed7:	dec    DWORD PTR [eax+0x4e]
  405eda:	add    esp,DWORD PTR [ebx+0x6b]
  405edd:	mov    ?,WORD PTR [esi+0x6c47503]
  405ee3:	sbb    ebp,DWORD PTR [ebx+0x474ace2a]
  405ee9:	ret    
  405eea:	push   ss
  405eeb:	imul   ebx,DWORD PTR [ebx+0x47],0x76
  405eef:	push   0x2d4a8092
  405ef4:	sbb    al,0xc5
  405ef6:	xlat   BYTE PTR ds:[ebx]
  405ef7:	cld    
  405ef8:	pop    ecx
  405ef9:	sub    eax,0x9cb1cee0
  405efe:	jmp    0x405ed2
  405f00:	xchg   esp,eax
  405f01:	lea    edi,[edx+0xa]
  405f04:	es and eax,0x543e364c
  405f0a:	data16 fmul st,st(5)
  405f0d:	pop    ss
  405f0e:	aam    0x7d
  405f10:	sub    dl,bl
  405f12:	test   eax,0x21563b5a
  405f17:	cmp    cl,BYTE PTR [ebp-0x12]
  405f1a:	mov    eax,0x4a0a282b
  405f1f:	sbb    ecx,ebp
  405f21:	cmp    eax,0x8f2aa99f
  405f26:	mov    WORD PTR [esi-0x492acc39],cs
  405f2c:	add    al,0xfc
  405f2e:	xchg   esi,eax
  405f2f:	icebp  
  405f30:	lea    ebp,[esi+0x3bc61298]
  405f36:	mov    al,ds:0x34fac092
  405f3b:	bound  eax,QWORD PTR ds:0x7e2e8eef
  405f41:	sahf   
  405f42:	cwde   
  405f43:	add    DWORD PTR [ebx-0x7be80f00],ecx
  405f49:	mov    ch,0xc4
  405f4b:	dec    ecx
  405f4c:	xchg   ebp,eax
  405f4d:	dec    ecx
  405f4e:	inc    edi
  405f4f:	or     eax,0x99e1ea76
  405f54:	mov    eax,ds:0x306e4acf
  405f59:	repz xor bh,bh
  405f5c:	retf   
  405f5d:	retf   
  405f5e:	add    esp,DWORD PTR [ebx+0x17534410]
  405f64:	sti    
  405f65:	sub    DWORD PTR [edx+0x9],edx
  405f68:	fcom   QWORD PTR fs:[ebx]
  405f6b:	das    
  405f6c:	ss push ebx
  405f6e:	ret    0x9186
  405f71:	fucomip st,st(2)
  405f73:	(bad)  
  405f74:	xchg   esp,eax
  405f75:	iret   
  405f76:	mov    es,WORD PTR [ecx]
  405f78:	xor    eax,0x860429e
  405f7d:	(bad)  
  405f7e:	test   al,0xf3
  405f80:	mov    esi,0xc3401e30
  405f85:	mov    esi,0x173016c9
  405f8a:	xlat   BYTE PTR ds:[ebx]
  405f8b:	adc    esi,DWORD PTR [ecx+0x3c8b3014]
  405f91:	fwait
  405f92:	(bad)  
  405f93:	in     eax,0xbc
  405f95:	das    
  405f96:	add    eax,0xac2c0e30
  405f9b:	xchg   esp,eax
  405f9c:	xor    al,0x74
  405f9e:	lods   eax,DWORD PTR ds:[esi]
  405f9f:	mov    ebp,esi
  405fa1:	clc    
  405fa2:	and    DWORD PTR [ebx-0x3b9c14f1],ebx
  405fa8:	(bad)  
  405fa9:	jmp    0x77994460
  405fae:	daa    
  405faf:	mov    ds:0x425c7c57,eax
  405fb4:	push   ebx
  405fb5:	cmp    ah,BYTE PTR [ebx-0x70c589af]
  405fbb:	ror    DWORD PTR [ebp-0x29],cl
  405fbe:	enter  0x4241,0x3d
  405fc2:	sbb    edx,DWORD PTR [ebx]
  405fc4:	mov    al,ds:0x864fa713
  405fc9:	(bad)  
  405fcb:	inc    esi
  405fcc:	jg     0x405fec
  405fce:	es in  eax,0x40
  405fd1:	push   es
  405fd2:	loop   0x405fe0
  405fd4:	nop
  405fd5:	pop    es
  405fd6:	mov    ecx,0x28e21875
  405fdb:	jecxz  0x406036
  405fdd:	inc    edx
  405fde:	das    
  405fdf:	sub    dh,BYTE PTR [ecx+0x49af8418]
  405fe5:	add    esi,esp
  405fe7:	jno    0x406017
  405fe9:	push   ebx
  405fea:	aas    
  405feb:	aad    0x5e
  405fed:	xor    BYTE PTR [edi-0x313da955],ah
  405ff3:	mov    ebp,0x50757d98
  405ff8:	test   BYTE PTR [esp+edi*2],al
  405ffb:	cmp    edx,ebx
  405ffd:	xor    eax,0x5f431e2
  406002:	sar    DWORD PTR [edi],0xce
  406005:	(bad)  
  406007:	jmp    0xe88015d3
  40600c:	xchg   esp,eax
  40600d:	fmul   st(0),st
  40600f:	sahf   
  406010:	jno    0x405fee
  406012:	outs   dx,BYTE PTR ds:[esi]
  406013:	or     ah,BYTE PTR [eax]
  406015:	out    0x9c,eax
  406017:	cmp    ch,BYTE PTR [ebx]
  406019:	add    dh,ch
  40601b:	jmp    0x55f4:0xf628a67b
  406022:	cdq    
  406023:	jmp    0x521436fa
  406028:	pop    es
  406029:	mov    cl,BYTE PTR [edx-0x2b6b7713]
  40602f:	sbb    eax,0x2597d5d9
  406034:	pop    ds
  406035:	and    al,0x52
  406037:	aad    0xe8
  406039:	jl     0x4060ac
  40603b:	jno    0x405ff8
  40603d:	jbe    0x406084
  40603f:	repz pop ecx
  406041:	sbb    BYTE PTR [ebx+0x51d07835],ah
  406047:	clc    
  406048:	sbb    dh,BYTE PTR [esi+0x51]
  40604b:	or     al,0xb1
  40604d:	adc    eax,0x1abd7dcc
  406052:	lods   al,BYTE PTR ds:[esi]
  406053:	adc    esp,DWORD PTR [ecx+0x51c3b86d]
  406059:	xlat   BYTE PTR ds:[ebx]
  40605a:	addr16 daa 
  40605c:	in     al,0x97
  40605e:	outs   dx,DWORD PTR ds:[esi]
  40605f:	push   esi
  406060:	push   ebp
  406061:	sbb    al,0x9e
  406063:	ins    DWORD PTR es:[edi],dx
  406064:	call   0x8fd0:0xbbb60c5c
  40606b:	pop    ecx
  40606c:	pop    ds
  40606d:	xor    eax,0x10482043
  406072:	out    dx,eax
  406073:	xchg   ecx,eax
  406074:	cmp    ebx,DWORD PTR [eax-0x31ff7d26]
  40607a:	dec    ebp
  40607b:	shl    ch,1
  40607d:	mov    ch,0xeb
  40607f:	outs   dx,DWORD PTR ds:[esi]
  406080:	out    dx,eax
  406081:	cli    
  406082:	sbb    bl,dh
  406084:	imul   eax,DWORD PTR [ecx-0x35ef83fe],0x3a
  40608b:	xlat   BYTE PTR ds:[ebx]
  40608c:	lock sbb eax,0xe3645766
  406092:	jbe    0x406103
  406094:	push   esi
  406095:	idiv   BYTE PTR [ebp+0x4a]
  406098:	daa    
  406099:	mov    eax,ds:0x87401f18
  40609e:	adc    dl,BYTE PTR [ebx]
  4060a0:	inc    ebx
  4060a1:	pop    ss
  4060a2:	es jno 0x4060ad
  4060a5:	cmp    BYTE PTR [ebp+ebp*8-0x68189270],al
  4060ac:	push   ecx
  4060ad:	mov    ah,BYTE PTR [eax]
  4060af:	jmp    0xff6a:0x3581b50d
  4060b6:	dec    esi
  4060b7:	repnz push esi
  4060b9:	gs mov edx,0x13189876
  4060bf:	jle    0x4060d3
  4060c1:	dec    edi
  4060c2:	div    DWORD PTR [esp+edi*8-0x6c24d720]
  4060c9:	(bad)  
  4060ca:	mov    eax,0x1cb9414e
  4060cf:	repz pop eax
  4060d1:	jns    0x406064
  4060d3:	and    dl,ah
  4060d5:	into   
  4060d6:	jl     0x40606e
  4060d8:	push   edx
  4060d9:	xor    DWORD PTR [eax],0xffffffa5
  4060dc:	push   es
  4060dd:	sbb    eax,0x52fd2689
  4060e2:	jmp    0x2c4c:0x288b1805
  4060e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ea:	call   0x5b7ead06
  4060ef:	aad    0xc4
  4060f1:	adc    eax,0xeaa1d569
  4060f6:	fist   WORD PTR [ebp-0x23b47699]
  4060fc:	repnz dec edx
  4060fe:	or     BYTE PTR [eax-0x6a],al
  406101:	push   ebx
  406102:	loop   0x406146
  406104:	jge    0xe1bef0da
  40610a:	int    0x58
  40610c:	ror    BYTE PTR [eax-0x5b],cl
  40610f:	xchg   dl,dl
  406111:	das    
  406112:	lods   al,BYTE PTR ds:[esi]
  406113:	cwde   
  406114:	bnd jne 0x40615c
  406117:	outs   dx,BYTE PTR ds:[esi]
  406118:	fwait
  406119:	dec    edi
  40611a:	pop    edx
  40611b:	xchg   ebx,eax
  40611c:	enter  0x7ed5,0x7
  406120:	pop    esi
  406121:	mov    ebp,0x742a4f79
  406126:	cmp    BYTE PTR [ebx+0x793725cb],dh
  40612c:	imul   eax,DWORD PTR [esi],0xa
  40612f:	mov    edi,0x206d1db3
  406134:	add    ah,bl
  406136:	pop    ebx
  406137:	sub    al,0xca
  406139:	xor    esi,DWORD PTR [edi-0x52]
  40613c:	mov    WORD PTR [edi-0x1857b5ad],ss
  406142:	adc    eax,0x4eda233a
  406147:	test   DWORD PTR [edi],esp
  406149:	data16 fisttp DWORD PTR [edx+0x638986a0]
  406150:	pop    ss
  406151:	outs   dx,BYTE PTR ds:[esi]
  406152:	pop    ecx
  406153:	pop    ss
  406154:	xchg   BYTE PTR [esi-0x31],dh
  406157:	mov    ebp,es
  406159:	pop    edi
  40615a:	leave  
  40615b:	adc    al,ah
  40615d:	mov    ds:0x2d4f51c0,eax
  406162:	inc    ebp
  406163:	fsubp  st(2),st
  406165:	xlat   BYTE PTR ds:[ebx]
  406166:	loop   0x406174
  406168:	pop    edx
  406169:	xchg   edi,eax
  40616a:	sub    al,0x72
  40616c:	cwde   
  40616d:	mov    bl,BYTE PTR [eax+0x35]
  406170:	retf   
  406171:	mov    ds:0xa7824bcd,al
  406176:	cmp    eax,0xffa27763
  40617b:	mov    cl,0x73
  40617d:	dec    edx
  40617e:	add    al,0xe7
  406180:	imul   esi,DWORD PTR [ebx+0x35],0xffffff9d
  406184:	and    bh,al
  406186:	fist   WORD PTR [edx-0x2c]
  406189:	das    
  40618a:	lods   eax,DWORD PTR ds:[esi]
  40618b:	mov    eax,0xf62e11b
  406190:	jmp    0x40617b
  406192:	mov    esp,0xd3fa0c49
  406197:	mov    eax,DWORD PTR [edx]
  406199:	sbb    BYTE PTR [edi],bh
  40619b:	mov    ebx,0xfc19b123
  4061a0:	xor    bh,dh
  4061a2:	je     0x40618e
  4061a4:	jecxz  0x40614b
  4061a6:	cmp    DWORD PTR [eax-0x22],ebx
  4061a9:	div    DWORD PTR [edx+0x3f]
  4061ac:	dec    edi
  4061ad:	out    0x5c,eax
  4061af:	mov    dl,BYTE PTR [edx+eax*2-0x46fe6043]
  4061b6:	mov    ecx,0x8b097d35
  4061bb:	retf   0xeb78
  4061be:	(bad)  
  4061bf:	shr    BYTE PTR [eax+0x4a],cl
  4061c2:	pop    eax
  4061c3:	xchg   edx,eax
  4061c4:	xchg   cl,dh
  4061c6:	lods   al,BYTE PTR ds:[esi]
  4061c7:	push   0x751b6ef0
  4061cc:	pop    ss
  4061cd:	and    ecx,DWORD PTR [eax-0x5c49e9c8]
  4061d3:	mov    bl,0xbf
  4061d5:	jl     0x4061ea
  4061d7:	cmp    BYTE PTR [edx+0x2c],cl
  4061da:	(bad)  
  4061db:	sar    BYTE PTR [esi],1
  4061dd:	lds    esp,FWORD PTR [ebx]
  4061df:	in     eax,dx
  4061e0:	mov    bh,0xa5
  4061e2:	out    0x6,eax
  4061e4:	(bad)  
  4061e6:	jecxz  0x40620d
  4061e8:	adc    cx,WORD PTR [eax-0x65583d68]
  4061ef:	dec    esi
  4061f0:	mov    bl,0x85
  4061f2:	loop   0x406188
  4061f4:	lea    eax,[eax-0x4b]
  4061f7:	into   
  4061f8:	ret    0xc1dd
  4061fb:	jl     0x406258
  4061fd:	xchg   edx,eax
  4061fe:	shl    BYTE PTR [eax+0xa],0x6b
  406202:	out    dx,al
  406203:	ret    0xad6c
  406206:	ins    DWORD PTR es:[edi],dx
  406207:	xor    cl,BYTE PTR [ebx-0x76]
  40620a:	or     al,0xb2
  40620c:	nop
  40620d:	hlt    
  40620e:	cmp    al,0x71
  406210:	sub    esp,DWORD PTR [edx]
  406212:	in     al,0x9b
  406214:	int3   
  406215:	dec    ebx
  406216:	cdq    
  406217:	mov    edi,0x814c89
  40621c:	dec    ebx
  40621d:	rcl    BYTE PTR [esi],1
  40621f:	xor    al,0x56
  406221:	mov    al,0x60
  406223:	jns    0x4061d6
  406225:	inc    ebp
  406226:	and    BYTE PTR [eax+0x7d34dac],ah
  40622c:	or     ah,BYTE PTR [ebp+eiz*2+0x7ff7e2df]
  406233:	mov    ebp,0x594d4071
  406238:	loopne 0x40627e
  40623a:	xchg   edi,eax
  40623b:	xchg   esp,eax
  40623c:	adc    BYTE PTR [ecx],bh
  40623e:	sbb    BYTE PTR [eax],al
  406240:	pop    edi
  406241:	push   ss
  406242:	in     eax,0x6a
  406244:	inc    esi
  406245:	sub    BYTE PTR [ebx],bh
  406247:	fist   DWORD PTR [esi-0x55]
  40624a:	push   edx
  40624b:	fld    DWORD PTR [ebx]
  40624d:	mov    ebx,0xd37ec5e5
  406252:	test   DWORD PTR [ebx+0x37],ecx
  406255:	push   ss
  406256:	int    0xbf
  406258:	mov    eax,0x2ba59bae
  40625d:	pushf  
  40625e:	pop    ecx
  40625f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406260:	js     0x4062bb
  406262:	mov    BYTE PTR [eax-0x4fb635bd],ah
  406268:	pop    eax
  406269:	pop    ss
  40626a:	addr16 jnp 0x406246
  40626d:	sub    eax,0x3727d7e3
  406272:	inc    edx
  406273:	ja     0x4062c6
  406275:	icebp  
  406276:	sbb    al,0xb0
  406278:	(bad)  
  406279:	and    al,0xb5
  40627b:	gs mov bh,ch
  40627e:	test   al,0x5
  406280:	(bad)  
  406281:	sbb    al,0xc
  406283:	cs loop 0x406258
  406286:	shl    BYTE PTR [edi-0x23],0x5c
  40628a:	and    BYTE PTR [esi],bh
  40628c:	adc    ch,BYTE PTR [eax+0x32c56d9b]
  406292:	pop    es
  406293:	test   BYTE PTR [esi],ah
  406295:	cld    
  406296:	xor    bh,BYTE PTR [esi-0x309476ee]
  40629c:	scas   eax,DWORD PTR es:[edi]
  40629d:	jns    0x4062bc
  40629f:	xchg   ebp,eax
  4062a0:	jbe    0x406289
  4062a2:	pop    esp
  4062a3:	jle    0x4062d9
  4062a5:	lods   eax,DWORD PTR ds:[esi]
  4062a6:	and    BYTE PTR [ebp-0x59812a2f],ch
  4062ac:	or     BYTE PTR [ebp+0x62],0x6c
  4062b0:	mov    ebx,0x72082b10
  4062b5:	bound  edi,QWORD PTR [esi+0x525ff8e7]
  4062bb:	cli    
  4062bc:	out    0xac,eax
  4062be:	push   esp
  4062bf:	(bad)  
  4062c1:	sbb    eax,0xf51054a6
  4062c6:	(bad)  
  4062c7:	mov    ah,0xfe
  4062c9:	fs jge 0x40626d
  4062cc:	add    edx,ebp
  4062ce:	add    DWORD PTR [eax],edx
  4062d0:	jae    0x406308
  4062d2:	pushf  
  4062d3:	jno    0x4062d6
  4062d5:	dec    edi
  4062d6:	xchg   ebp,eax
  4062d7:	mov    ah,0x81
  4062d9:	push   0xd0a1aae9
  4062de:	push   ebx
  4062df:	or     DWORD PTR [ebp+0x47f60002],0x56be5f8b
  4062e9:	adc    BYTE PTR [ecx+esi*1],bl
  4062ec:	mov    ds:0x9da8f938,eax
  4062f1:	ret    0x2599
  4062f4:	dec    esp
  4062f5:	pop    ebp
  4062f6:	xchg   esp,eax
  4062f7:	pop    ecx
  4062f8:	pop    ds
  4062f9:	fwait
  4062fa:	repnz repnz daa 
  4062fd:	rol    DWORD PTR [ebx+0x5e74aa1e],0xc9
  406304:	mov    al,ds:0xa84dd787
  406309:	cmp    eax,0x47fde875
  40630e:	and    eax,0x2fb9babc
  406313:	loope  0x4062dc
  406315:	adc    BYTE PTR [ebx+0x2f],bl
  406318:	test   eax,0x7f9ddd5e
  40631d:	jp     0x406392
  40631f:	popf   
  406320:	mov    ds:0x8671ac99,eax
  406325:	mov    dl,0xd9
  406327:	mov    dl,0xaf
  406329:	daa    
  40632a:	jle    0x40631b
  40632c:	out    dx,al
  40632d:	jnp    0x406315
  40632f:	add    DWORD PTR [eax+edi*4+0x383df3d2],edx
  406336:	pop    esi
  406337:	pop    esp
  406338:	pop    ss
  406339:	cdq    
  40633a:	cmp    dh,BYTE PTR [ebx]
  40633c:	mov    edi,0x2c91ab7d
  406341:	sub    al,0x11
  406343:	std    
  406344:	inc    esi
  406345:	retf   
  406346:	aam    0xa5
  406348:	aaa    
  406349:	inc    esi
  40634a:	dec    esi
  40634b:	inc    esp
  40634c:	nop
  40634d:	xlat   BYTE PTR ds:[ebx]
  40634e:	mov    eax,0x6a6bde41
  406353:	mov    al,ds:0xa603a60d
  406358:	jo     0x4062e9
  40635a:	in     eax,dx
  40635b:	sti    
  40635c:	xor    cl,BYTE PTR ds:0x980305ef
  406362:	stos   BYTE PTR es:[edi],al
  406363:	dec    eax
  406364:	jecxz  0x4062ef
  406366:	cmp    BYTE PTR [edi-0x6d],al
  406369:	data16 mov dh,0x8e
  40636c:	mov    eax,0x573dd31a
  406371:	ror    eax,cl
  406373:	or     BYTE PTR [edi+0x3c],dl
  406376:	mov    ds:0xc4346eff,al
  40637b:	aas    
  40637c:	jle    0x406304
  40637e:	(bad)  
  40637f:	xlat   BYTE PTR ds:[ebx]
  406380:	add    eax,0x1fbabd97
  406386:	loop   0x406391
  406388:	mov    ebp,0x45654811
  40638d:	aad    0x3a
  40638f:	inc    ebx
  406390:	push   ss
  406391:	lods   al,BYTE PTR ds:[esi]
  406392:	shl    DWORD PTR [edx+edi*8],cl
  406395:	rcr    DWORD PTR [ecx+0x43b2605b],1
  40639b:	scas   eax,DWORD PTR es:[edi]
  40639c:	das    
  40639d:	lods   al,BYTE PTR ds:[esi]
  40639e:	cdq    
  40639f:	and    ecx,DWORD PTR [eax-0x3a52b78c]
  4063a5:	jns    0x40638d
  4063a7:	sub    esi,esp
  4063a9:	add    ch,BYTE PTR [edi+edx*1]
  4063ac:	xchg   ebx,eax
  4063ad:	std    
  4063ae:	mov    dh,0x17
  4063b0:	and    esp,DWORD PTR [edi+0x28]
  4063b3:	jne    0x406361
  4063b5:	into   
  4063b6:	jo     0x4063ab
  4063b8:	das    
  4063b9:	pop    esi
  4063ba:	adc    eax,0xa8a63cde
  4063bf:	outs   dx,BYTE PTR ds:[esi]
  4063c0:	push   ss
  4063c1:	xchg   edx,eax
  4063c2:	xor    esi,DWORD PTR [esi+0x58]
  4063c5:	int3   
  4063c6:	sbb    ebp,ecx
  4063c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c9:	(bad)  
  4063cb:	jp     0x40642d
  4063cd:	mov    ah,0x30
  4063cf:	pop    ss
  4063d0:	jbe    0x4063c6
  4063d2:	out    dx,eax
  4063d3:	jle    0x40635c
  4063d5:	mov    gs,WORD PTR [ebp+0x18]
  4063d8:	push   esp
  4063d9:	xchg   esp,eax
  4063da:	pop    ebp
  4063db:	jnp    0x4063fa
  4063dd:	mov    ds:0x4aa716a0,eax
  4063e2:	loope  0x4063a8
  4063e4:	test   eax,0x711ec0e5
  4063e9:	inc    BYTE PTR [ecx]
  4063eb:	and    DWORD PTR [ecx+0x35],0x2815a768
  4063f2:	cmp    eax,0x21b2423f
  4063f7:	ret    0x2f48
  4063fa:	jmp    0xae4c9572
  4063ff:	mov    bh,0x58
  406401:	test   BYTE PTR [ecx+0x6f],dh
  406404:	jns    0x4063b3
  406406:	pop    esp
  406407:	ds scas al,BYTE PTR es:[edi]
  406409:	xor    DWORD PTR [eax+edx*2+0x41],edx
  40640d:	imul   edi,DWORD PTR [esp+edx*2+0x20e9330d],0xffffff8f
  406415:	pop    ds
  406416:	mov    ecx,0x2eac115
  40641b:	sub    edx,0x5589
  406421:	mov    DWORD PTR [ebp-0x1c],ecx
  406424:	or     DWORD PTR ds:0x4229ae,edx
  40642a:	mov    ecx,DWORD PTR [ebx]
  40642c:	and    DWORD PTR ds:0x4228fe,edi
  406432:	mov    edx,DWORD PTR [ebx+0x4]
  406435:	xor    DWORD PTR [ebp-0x1c],edi
  406438:	or     DWORD PTR ds:0x4228ee,0x53f5
  406442:	xor    edx,edx
  406444:	jmp    0x4069ce
  406449:	fisttp DWORD PTR [ecx+0x7b]
  40644c:	mov    WORD PTR [ecx],ds
  40644e:	xor    al,0xe0
  406450:	sbb    BYTE PTR [ebp+0x756e9a4b],bl
  406456:	xor    ebp,ebp
  406458:	mov    ah,0x65
  40645a:	adc    DWORD PTR [esi],0x16
  40645d:	cmp    eax,0xc0161604
  406462:	leave  
  406463:	shl    ch,1
  406465:	push   eax
  406466:	mov    bl,0x85
  406468:	pop    eax
  406469:	jns    0x4064c9
  40646b:	add    dl,dl
  40646d:	arpl   bp,sp
  40646f:	aam    0xd8
  406471:	sbb    al,bl
  406473:	popf   
  406474:	mov    edi,0xfa1495a8
  406479:	adc    BYTE PTR [edi],ah
  40647b:	mov    edi,0xc94c6239
  406480:	aaa    
  406481:	pop    esi
  406482:	ret    
  406483:	mov    ds:0xa0fbd008,eax
  406488:	cmp    al,0x96
  40648a:	gs jg  0x4064d4
  40648d:	jne    0x4064df
  40648f:	and    ah,BYTE PTR [eax+0xf936ce8]
  406495:	inc    eax
  406496:	jae    0x4064b9
  406498:	cmp    DWORD PTR ds:0xdcb679c7,ecx
  40649e:	or     BYTE PTR [esi],bl
  4064a0:	fstp   QWORD PTR [edi]
  4064a2:	retf   
  4064a3:	rol    BYTE PTR [eax],0x80
  4064a6:	sub    dl,BYTE PTR [edi]
  4064a8:	mov    cs,WORD PTR [edx]
  4064aa:	nop
  4064ab:	jnp    0x4064c4
  4064ad:	scas   eax,DWORD PTR es:[edi]
  4064ae:	inc    ebx
  4064af:	sbb    al,BYTE PTR [edx+ebx*2]
  4064b2:	mov    edx,0xbcad2530
  4064b7:	mov    esi,0x65dc8d9
  4064bc:	(bad)  
  4064bd:	and    DWORD PTR [eax],esi
  4064bf:	ja     0x406528
  4064c1:	nop
  4064c2:	cmp    BYTE PTR [ecx-0x5a],0xa4
  4064c6:	test   al,0x7e
  4064c8:	stos   BYTE PTR es:[edi],al
  4064c9:	daa    
  4064ca:	(bad)  
  4064cb:	clc    
  4064cc:	pop    ecx
  4064cd:	fdiv   QWORD PTR [ecx+0x3]
  4064d0:	mov    esp,0x624a5c39
  4064d5:	cmp    eax,0xa5570d44
  4064da:	pop    eax
  4064db:	pop    es
  4064dc:	sti    
  4064dd:	mov    dh,0x39
  4064df:	jns    0x406515
  4064e1:	mov    ah,0xcb
  4064e3:	and    al,0x5e
  4064e5:	dec    edx
  4064e6:	push   ds
  4064e7:	jne    0x4064a4
  4064e9:	pop    ebp
  4064ea:	test   al,0x46
  4064ec:	sub    al,0x3a
  4064ee:	cdq    
  4064ef:	push   ebx
  4064f0:	sub    BYTE PTR [edx],cl
  4064f2:	jmp    0x4ce6:0xae3e0007
  4064f9:	jg     0x40648e
  4064fb:	and    eax,0x501e2690
  406500:	popa   
  406501:	xchg   ecx,eax
  406502:	test   al,0x83
  406504:	mov    bh,0xf
  406506:	dec    ebx
  406507:	ds aad 0x42
  40650a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40650b:	lods   al,BYTE PTR ds:[esi]
  40650c:	sbb    dl,BYTE PTR [esi+ebx*4+0x57c11ec1]
  406513:	fs inc ebp
  406515:	aaa    
  406516:	loop   0x406506
  406518:	mov    ds:0x97359c84,eax
  40651d:	aad    0x9e
  40651f:	mov    ebp,0x66b16fff
  406524:	or     DWORD PTR [ebx],ecx
  406526:	imul   esi
  406528:	mov    edi,DWORD PTR ds:0x95b49d6d
  40652e:	or     DWORD PTR [ebx+ecx*2],eax
  406531:	xor    dl,0x39
  406534:	sbb    DWORD PTR [edi-0x2c],edi
  406537:	cmp    bl,ah
  406539:	fstp   QWORD PTR [eax]
  40653b:	cwde   
  40653c:	fstp   TBYTE PTR [edx]
  40653e:	aaa    
  40653f:	aad    0xd2
  406541:	cmp    DWORD PTR [edi+0x45a8e003],edi
  406547:	sbb    BYTE PTR [ebp+0x120cd3a],0xf7
  40654e:	cmp    BYTE PTR [edi-0x13cd8fec],0xf5
  406555:	adc    ecx,ebx
  406557:	push   edi
  406558:	mov    ah,0x96
  40655a:	les    esp,FWORD PTR [ebx]
  40655c:	rol    BYTE PTR [edx-0x4454e105],cl
  406562:	jns    0x4065b5
  406564:	dec    eax
  406565:	inc    ebx
  406566:	mov    esp,0x6c2368f0
  40656b:	mov    BYTE PTR [eax+0x5a],dl
  40656e:	dec    esp
  40656f:	leave  
  406570:	xchg   edx,eax
  406571:	outs   dx,BYTE PTR ds:[esi]
  406572:	mov    ah,0x8a
  406574:	scas   al,BYTE PTR es:[edi]
  406575:	mov    esi,0x90126a60
  40657a:	shl    BYTE PTR ss:[edi-0x60],0xf3
  40657f:	inc    ecx
  406580:	and    al,0xd5
  406582:	pop    ss
  406583:	and    DWORD PTR [eax+0x570d6163],ecx
  406589:	mov    ah,0xc6
  40658b:	jle    0x4065fc
  40658d:	and    al,BYTE PTR [ecx-0x80]
  406590:	lock shr DWORD PTR [esi+0x319a8da7],cl
  406597:	adc    edi,eax
  406599:	inc    esp
  40659a:	mov    esp,0xf0062e2
  40659f:	pop    ds
  4065a0:	imul   ebx,DWORD PTR [edi-0x5c897546],0x60
  4065a7:	xor    edx,DWORD PTR [eax-0x10]
  4065aa:	jge    0x4065d8
  4065ac:	push   edi
  4065ad:	add    esi,esi
  4065af:	mov    al,0x8e
  4065b1:	fcom   QWORD PTR [eax+ebp*1]
  4065b4:	add    ch,ah
  4065b6:	jg     0x4065c4
  4065b8:	cdq    
  4065b9:	inc    edi
  4065ba:	sub    eax,0xaa9be11
  4065bf:	pop    ecx
  4065c0:	mov    bl,0xbc
  4065c2:	int    0xa0
  4065c4:	xchg   BYTE PTR [esi],ah
  4065c6:	mov    ds:0x75b07b78,al
  4065cb:	in     eax,dx
  4065cc:	ret    0x4d80
  4065cf:	cmp    eax,0x36310ba7
  4065d4:	(bad)  
  4065d5:	loop   0x4065ba
  4065d7:	aam    0x7b
  4065d9:	inc    ebx
  4065da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065db:	test   BYTE PTR [edi+0x3c7e7a78],0xa5
  4065e2:	push   0x555b8996
  4065e7:	push   esp
  4065e8:	pop    ebp
  4065e9:	fild   DWORD PTR [ebx]
  4065eb:	cdq    
  4065ec:	out    0x87,al
  4065ee:	xchg   esp,eax
  4065ef:	out    0x72,al
  4065f1:	ja     0x4065a5
  4065f3:	hlt    
  4065f4:	test   DWORD PTR [ecx+0x1a],eax
  4065f7:	lahf   
  4065f8:	stc    
  4065f9:	dec    edx
  4065fa:	cmp    BYTE PTR [ecx-0x37],dh
  4065fd:	jae    0x406662
  4065ff:	repz fstp TBYTE PTR [edi+0x4]
  406603:	repz cdq 
  406605:	pop    ds
  406606:	mov    bh,0x3c
  406608:	adc    esp,DWORD PTR [esi+edx*8+0x44587068]
  40660f:	out    0xe8,al
  406611:	pusha  
  406612:	hlt    
  406613:	fsubrp st(0),st
  406615:	fistp  WORD PTR [esi+0x28f0df94]
  40661b:	ss (bad) 
  40661d:	(bad)  [edx+0x70b4f18d]
  406623:	loope  0x406603
  406625:	test   bl,bh
  406627:	pop    ecx
  406628:	dec    edx
  406629:	aas    
  40662a:	lods   eax,DWORD PTR ds:[esi]
  40662b:	into   
  40662c:	cmp    eax,0xe54d4b15
  406631:	cmp    BYTE PTR [edx+0x2d],bl
  406634:	int3   
  406635:	stos   BYTE PTR es:[edi],al
  406636:	aaa    
  406637:	fwait
  406638:	xor    BYTE PTR [eax],cl
  40663a:	xor    DWORD PTR [esp+eax*4-0x34a0d414],edx
  406641:	test   al,0x72
  406643:	xchg   esi,eax
  406644:	push   eax
  406645:	xchg   ebp,eax
  406646:	sbb    eax,0xc7512482
  40664b:	mov    dl,0x55
  40664d:	mov    ebp,0xe06a94b3
  406652:	pop    esp
  406653:	mov    edx,0x2e0fcfec
  406658:	and    eax,0x2f5cd7a7
  40665d:	and    eax,0x51d8cb96
  406662:	jne    0x40660c
  406664:	call   0xa987487e
  406669:	inc    ecx
  40666a:	inc    esi
  40666b:	scas   eax,DWORD PTR es:[edi]
  40666c:	and    ecx,esp
  40666e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666f:	pop    ds
  406670:	pop    edi
  406671:	stc    
  406672:	pop    es
  406673:	mov    edi,0x811e0cb2
  406678:	shr    ch,1
  40667a:	inc    esi
  40667b:	ins    BYTE PTR es:[edi],dx
  40667c:	sti    
  40667d:	push   edi
  40667e:	inc    edx
  40667f:	test   DWORD PTR [esi-0x1adb50e],0x1e396280
  406689:	fild   WORD PTR ss:[edi]
  40668c:	push   ebx
  40668d:	fdivr  QWORD PTR [ebx+0x18010a76]
  406693:	inc    ebp
  406694:	sbb    esp,DWORD PTR [ebx]
  406696:	ret    
  406697:	pop    ebx
  406698:	inc    ecx
  406699:	mov    eax,0x1a6629d3
  40669e:	(bad)  
  40669f:	push   ebx
  4066a0:	call   0x24fb:0xd25ee9c3
  4066a7:	or     eax,0x66a6983
  4066ac:	jo     0x406671
  4066ae:	retf   0x240
  4066b1:	enter  0xea41,0xad
  4066b5:	lods   al,BYTE PTR ds:[esi]
  4066b6:	pop    ecx
  4066b7:	xchg   ecx,eax
  4066b8:	sbb    al,0xb3
  4066ba:	test   BYTE PTR [eax],bh
  4066bc:	dec    ecx
  4066bd:	rcl    DWORD PTR [esi+0x276edb5b],cl
  4066c3:	jne    0x4066e2
  4066c5:	and    BYTE PTR [eax-0x2db528b4],bl
  4066cb:	lods   al,BYTE PTR ds:[esi]
  4066cc:	xchg   BYTE PTR [esi+0x1e],ch
  4066cf:	mov    DWORD PTR ss:[ebx],eax
  4066d2:	xlat   BYTE PTR ds:[ebx]
  4066d3:	mov    ch,0xf5
  4066d5:	or     eax,0x658b41f8
  4066da:	iret   
  4066db:	push   es
  4066dc:	jg     0x726b5fb4
  4066e2:	add    DWORD PTR [edx-0x72d946e2],ecx
  4066e8:	sub    BYTE PTR [edx+0x51],cl
  4066eb:	lock push eax
  4066ed:	mov    al,0x2d
  4066ef:	enter  0xfbfe,0x88
  4066f3:	aam    0x7c
  4066f5:	sbb    ebp,edi
  4066f7:	or     BYTE PTR [esi+0x8],dl
  4066fa:	and    BYTE PTR [ecx],0xbe
  4066fd:	inc    edx
  4066fe:	dec    edi
  4066ff:	les    ebp,FWORD PTR [edx]
  406701:	jmp    0x40676f
  406703:	pop    edx
  406704:	push   ebp
  406705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406706:	jmp    0xffa9597d
  40670b:	retf   
  40670c:	push   es
  40670d:	add    ebx,ebx
  40670f:	push   0xffffffac
  406711:	cmp    DWORD PTR [ebx],ebx
  406713:	sti    
  406714:	mov    bl,0x39
  406716:	les    esi,FWORD PTR [eax+0x25]
  406719:	mov    BYTE PTR [eax+0x45],0x98
  40671d:	sub    BYTE PTR [eax-0x62],dh
  406720:	mov    esi,0x193e437d
  406725:	dec    edi
  406726:	jl     0x40677f
  406728:	cli    
  406729:	gs in  al,0x77
  40672c:	test   eax,0x73dfbe50
  406731:	xchg   edi,eax
  406732:	pop    esi
  406733:	retf   0x320c
  406736:	fimul  DWORD PTR [ecx+ecx*8+0x41]
  40673a:	div    BYTE PTR [edi-0x31]
  40673d:	jle    0x406725
  40673f:	loop   0x406700
  406741:	ins    DWORD PTR es:[edi],dx
  406742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406743:	fwait
  406744:	jno    0x4067bb
  406746:	leave  
  406747:	scas   eax,DWORD PTR es:[edi]
  406748:	or     ebp,DWORD PTR [edi+0x3d475854]
  40674e:	hlt    
  40674f:	cld    
  406750:	mov    esi,?
  406752:	push   ss
  406753:	sub    al,BYTE PTR [ecx+0x7a]
  406756:	xor    eax,0x2684c6ea
  40675b:	push   esi
  40675c:	push   cs
  40675d:	xchg   edi,eax
  40675e:	sbb    edi,DWORD PTR [ebp-0x2bdfcb55]
  406764:	ja     0x4067c3
  406766:	or     al,BYTE PTR [esi+0x7f1be0c7]
  40676c:	sbb    eax,0x6015961
  406771:	dec    esp
  406772:	or     al,0xec
  406774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406775:	xor    DWORD PTR [eax],esi
  406777:	into   
  406778:	imul   esp
  40677a:	or     DWORD PTR [edx+0x35],eax
  40677d:	jp     0x4067e1
  40677f:	inc    ebp
  406781:	dec    esi
  406782:	sar    DWORD PTR [ecx+0x78b5dfaf],1
  406788:	dec    ecx
  406789:	sar    DWORD PTR [eax],1
  40678b:	std    
  40678c:	in     al,0xa3
  40678e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40678f:	cmp    edi,DWORD PTR [eax]
  406791:	clc    
  406792:	gs sub ebx,esp
  406795:	stc    
  406796:	adc    ebp,esp
  406798:	test   eax,0xa7a9a5b2
  40679d:	and    eax,0xc90218ab
  4067a2:	add    DWORD PTR ds:0x64fc6af0,eax
  4067a8:	jns    0x406760
  4067aa:	pop    esi
  4067ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ac:	cwde   
  4067ad:	xlat   BYTE PTR ds:[ebx]
  4067ae:	retf   0x6e4
  4067b1:	adc    BYTE PTR [esi+0x59c3d963],0xa6
  4067b8:	pop    ecx
  4067b9:	fisubr DWORD PTR [ecx]
  4067bb:	and    dh,BYTE PTR [edx+eax*1+0x4e0db60b]
  4067c2:	sbb    eax,DWORD PTR ds:0x371c3385
  4067c8:	aas    
  4067c9:	retf   0x6447
  4067cc:	cmc    
  4067cd:	daa    
  4067ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067cf:	retf   0x20dc
  4067d2:	mov    gs,WORD PTR [edx+0x2ad60afe]
  4067d8:	inc    esp
  4067d9:	sahf   
  4067da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067db:	fimul  DWORD PTR [edx+ebp*2+0x3d6e09c1]
  4067e2:	adc    dl,BYTE PTR ds:0x4e709f9
  4067e9:	push   edx
  4067ea:	adc    eax,edx
  4067ec:	pop    ecx
  4067ed:	es (bad) 
  4067ef:	cmp    al,ah
  4067f1:	clc    
  4067f2:	mov    eax,ds:0xc60b6aab
  4067f7:	cwde   
  4067f8:	xchg   ecx,eax
  4067f9:	out    0xbb,eax
  4067fb:	pop    edi
  4067fc:	xor    al,0xf5
  4067fe:	inc    ecx
  4067ff:	jmp    0x4067ba
  406801:	test   eax,0x3c3f59f4
  406806:	cmp    al,0xba
  406808:	cmp    BYTE PTR [ebx+0x21f317f2],bh
  40680e:	xor    edx,DWORD PTR [edi+ebp*1]
  406811:	and    bh,0x61
  406814:	test   al,0x67
  406816:	and    al,0xf5
  406818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406819:	mov    ah,0xbe
  40681b:	sub    al,0x83
  40681d:	or     al,0x74
  40681f:	and    bl,BYTE PTR [ebp+0x14f6b60f]
  406825:	push   ebp
  406826:	loopne 0x406824
  406828:	inc    esp
  406829:	aaa    
  40682a:	icebp  
  40682b:	pushf  
  40682c:	xchg   esi,eax
  40682d:	xor    al,0x9
  40682f:	mov    edi,0x68e5c5df
  406834:	leave  
  406835:	ja     0x406802
  406837:	sbb    eax,0x1831c2f3
  40683c:	adc    dl,ch
  40683e:	jns    0x4067f5
  406840:	mov    DWORD PTR [edx],ebx
  406842:	jae    0x406893
  406844:	ins    DWORD PTR es:[edi],dx
  406845:	add    DWORD PTR [ebx+0x3b],ebp
  406848:	shl    ah,0x48
  40684b:	sub    bl,bh
  40684d:	test   al,0xfe
  40684f:	ror    edi,0xf7
  406852:	scas   al,BYTE PTR es:[edi]
  406853:	dec    ebx
  406854:	cmp    BYTE PTR [eax-0x25ae4c80],bl
  40685a:	pusha  
  40685b:	rol    BYTE PTR [eax-0x18bb2352],0xe4
  406862:	jnp    0x4068a3
  406864:	sbb    DWORD PTR [ecx+0x1404bfcb],eax
  40686a:	add    DWORD PTR [edx+0x76f5571b],edi
  406870:	mov    bl,0x3c
  406872:	or     DWORD PTR [edx],0xffffff92
  406875:	or     BYTE PTR [eax+ecx*8],0x6c
  406879:	push   ds
  40687a:	dec    edx
  40687b:	sub    eax,0x914dbccd
  406880:	neg    BYTE PTR [eax+0x68]
  406883:	mov    ebp,0x77b1387d
  406888:	cmp    ah,al
  40688a:	adc    DWORD PTR [eax],esp
  40688c:	ror    BYTE PTR [edx-0x53e2681],cl
  406892:	push   cs
  406893:	cli    
  406894:	push   esp
  406895:	pop    ss
  406896:	mov    al,0x73
  406898:	out    0x2b,al
  40689a:	xchg   edx,eax
  40689b:	pop    edx
  40689c:	dec    ebx
  40689d:	ins    DWORD PTR es:[edi],dx
  40689e:	and    al,0x5f
  4068a0:	mov    al,BYTE PTR [edx]
  4068a2:	ret    0x56e4
  4068a5:	and    al,0xd3
  4068a7:	cmp    al,0x27
  4068a9:	add    ch,BYTE PTR [edx+edi*4]
  4068ac:	outs   dx,DWORD PTR ds:[esi]
  4068ad:	and    BYTE PTR [edi-0x1f985729],ah
  4068b3:	inc    edx
  4068b4:	sbb    eax,0xcc25a26b
  4068b9:	not    DWORD PTR [edx+0x7278832c]
  4068bf:	push   ebp
  4068c0:	push   eax
  4068c1:	add    ah,dl
  4068c3:	out    dx,al
  4068c4:	shr    BYTE PTR ds:0xfb0c3e06,1
  4068ca:	pop    ss
  4068cb:	xchg   ebp,eax
  4068cc:	adc    dh,BYTE PTR [edi]
  4068ce:	sbb    eax,0x4d0a1c3f
  4068d3:	call   0xfeec:0x64ef6a4b
  4068da:	aam    0x27
  4068dc:	mov    ds:0x9920376c,al
  4068e1:	cwde   
  4068e2:	pusha  
  4068e3:	aaa    
  4068e4:	adc    al,0xa1
  4068e6:	mov    ch,0xf0
  4068e8:	pop    es
  4068e9:	jne    0x40687d
  4068eb:	push   esp
  4068ec:	clc    
  4068ed:	bound  ecx,QWORD PTR [edi+0x2a]
  4068f0:	out    dx,eax
  4068f1:	pop    ebp
  4068f2:	push   esi
  4068f3:	mov    edx,0x8932036f
  4068f8:	ins    DWORD PTR es:[edi],dx
  4068f9:	push   ss
  4068fa:	jmp    0x406946
  4068fc:	or     eax,0x6e72aae1
  406901:	(bad)  
  406902:	popa   
  406903:	sub    DWORD PTR [esi],ecx
  406905:	out    0x1f,al
  406907:	mov    ah,0x28
  406909:	pop    ebx
  40690a:	pop    ebp
  40690b:	(bad)  
  40690c:	in     al,dx
  40690d:	ins    BYTE PTR es:[edi],dx
  40690e:	rcl    DWORD PTR [edx-0x57cd41d3],1
  406914:	fcmovbe st,st(5)
  406916:	arpl   WORD PTR [edx+0x45],bx
  406919:	xchg   edx,eax
  40691a:	inc    esp
  40691b:	lock test ah,bh
  40691e:	inc    eax
  40691f:	and    eax,0x2e84e546
  406924:	loopne 0x4068f5
  406926:	popf   
  406927:	jmp    0x30d4:0x88ec12a6
  40692e:	dec    eax
  40692f:	gs push ecx
  406931:	cli    
  406932:	adc    esp,esi
  406934:	sub    bl,0xb8
  406937:	test   esi,ecx
  406939:	xchg   edx,eax
  40693a:	push   ecx
  40693b:	xchg   ebx,eax
  40693c:	pop    ds
  40693d:	(bad)  
  40693e:	out    0xae,eax
  406940:	clc    
  406941:	sub    DWORD PTR [esi+0x70],ebx
  406944:	hlt    
  406945:	lahf   
  406946:	xor    ch,BYTE PTR [ebp-0x76]
  406949:	xchg   edi,eax
  40694a:	xchg   ebp,eax
  40694b:	xor    ecx,esi
  40694d:	inc    eax
  40694e:	lds    edi,FWORD PTR [ecx+0x70]
  406951:	mov    dl,0xf3
  406953:	push   eax
  406954:	push   esp
  406955:	push   ebp
  406956:	adc    eax,0xbfe3e7f0
  40695b:	mov    ds:0xef21939f,eax
  406960:	fstp   st(1)
  406962:	sbb    BYTE PTR [esp+ebp*1-0x80],ch
  406966:	cmp    eax,0xafa531da
  40696b:	pop    edi
  40696c:	das    
  40696d:	repnz popa 
  40696f:	ret    
  406970:	pushf  
  406971:	repz stc 
  406973:	sub    DWORD PTR [edx+0x42],esi
  406976:	scas   al,BYTE PTR es:[edi]
  406977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406978:	scas   eax,DWORD PTR es:[edi]
  406979:	icebp  
  40697a:	ins    BYTE PTR es:[edi],dx
  40697b:	pushf  
  40697c:	mov    bh,0xd7
  40697e:	sub    al,0xd3
  406980:	xor    eax,0xc8bef2fa
  406985:	and    DWORD PTR [ecx-0x1f06f56b],ebp
  40698b:	lods   al,BYTE PTR ds:[esi]
  40698c:	or     DWORD PTR [edi],ebx
  40698e:	ins    DWORD PTR es:[edi],dx
  40698f:	jbe    0x4069da
  406991:	adc    BYTE PTR gs:[edx],ch
  406994:	mov    ebx,0xb58a72d9
  406999:	ins    BYTE PTR es:[edi],dx
  40699a:	or     eax,0x710fc757
  40699f:	add    dh,bl
  4069a1:	mov    ds:0x7373ede4,al
  4069a6:	dec    ah
  4069a8:	xor    ah,BYTE PTR [esi+0x42d3fa5f]
  4069ae:	lods   eax,DWORD PTR ds:[esi]
  4069af:	fimul  WORD PTR [edi]
  4069b1:	lahf   
  4069b2:	mov    ds:0xf73a0eca,eax
  4069b7:	pop    ebx
  4069b8:	enter  0x1e4d,0xdd
  4069bc:	and    al,0xbc
  4069be:	enter  0xb937,0x9d
  4069c2:	stos   DWORD PTR es:[edi],eax
  4069c3:	sub    eax,0x508c5e6
  4069c8:	or     BYTE PTR [esi+0x38118a23],al
  4069ce:	or     edx,DWORD PTR [ebp-0x1c]
  4069d1:	shl    ecx,0x1e
  4069d4:	sub    DWORD PTR ds:0x4228b2,0x1171
  4069de:	imul   edx,DWORD PTR [ebp-0x2c]
  4069e2:	sub    DWORD PTR [eax],edx
  4069e4:	mov    DWORD PTR ds:0x4228ae,0x6b62
  4069ee:	jmp    0x4076e1
  4069f3:	sub    edx,ecx
  4069f5:	mov    ecx,DWORD PTR [esi]
  4069f7:	mov    edx,DWORD PTR [esi+0x4]
  4069fa:	sbb    DWORD PTR ds:0x42293a,0x607d
  406a04:	shrd   ecx,edx,0x2
  406a08:	mov    DWORD PTR [ebp-0x1c],ecx
  406a0b:	mov    ecx,DWORD PTR [esi]
  406a0d:	xor    DWORD PTR [ebp-0x1c],edi
  406a10:	adc    DWORD PTR ds:0x42288e,0x77db
  406a1a:	jmp    0x406fa4
  406a1f:	bound  ebx,QWORD PTR [ecx-0xe]
  406a22:	imul   edi,ecx,0x71
  406a25:	push   edx
  406a26:	pop    eax
  406a27:	fst    DWORD PTR [eax]
  406a29:	std    
  406a2a:	mov    ah,0x11
  406a2c:	push   ebx
  406a2d:	pop    esi
  406a2e:	mov    dl,0x92
  406a30:	adc    DWORD PTR [esi],0x16043d16
  406a36:	push   ss
  406a37:	icebp  
  406a38:	dec    esi
  406a39:	call   0x8a239025
  406a3e:	inc    edi
  406a3f:	push   ebx
  406a40:	fnstenv [edi-0x1]
  406a43:	mov    cl,0x13
  406a45:	out    0x65,al
  406a47:	int3   
  406a48:	loop   0x406a83
  406a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a4b:	icebp  
  406a4c:	fimul  DWORD PTR [esi-0x773e09f8]
  406a52:	jns    0x406a17
  406a54:	call   0x5dc6:0xc67d3b62
  406a5b:	add    al,0xb3
  406a5d:	or     dh,BYTE PTR [edi-0x2b54b1b9]
  406a63:	bound  eax,QWORD PTR [edx-0x52]
  406a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a67:	in     eax,dx
  406a68:	sti    
  406a69:	outs   dx,DWORD PTR ds:[esi]
  406a6a:	scas   eax,DWORD PTR es:[edi]
  406a6b:	les    ebx,FWORD PTR [eax+0x6e]
  406a6e:	xchg   esi,eax
  406a70:	cmp    BYTE PTR [ebx+edi*8+0x1a],bl
  406a74:	add    ch,BYTE PTR [ecx+esi*1]
  406a77:	cmp    BYTE PTR [ebp+0x6037512e],dh
  406a7d:	(bad)  
  406a7e:	(bad)  [esi-0x77f3f354]
  406a84:	xor    DWORD PTR [eax+eax*4-0x61d82876],0x3a
  406a8c:	(bad)  
  406a8d:	outs   dx,DWORD PTR ds:[esi]
  406a8e:	sbb    eax,DWORD PTR [eax]
  406a90:	retf   
  406a91:	sbb    ebx,ebp
  406a93:	pop    edi
  406a94:	jg     0x406b0f
  406a96:	icebp  
  406a97:	(bad)  
  406a98:	mov    eax,ds:0xf7d53eef
  406a9d:	push   0x7b
  406a9f:	add    eax,DWORD PTR [esi+ecx*2-0x17]
  406aa3:	pop    ebp
  406aa4:	xchg   ebp,eax
  406aa5:	inc    esi
  406aa6:	jo     0x406acd
  406aa8:	mov    esp,0xa9fab082
  406aad:	xor    al,0x8e
  406aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab0:	jle    0x406b08
  406ab2:	out    0x39,eax
  406ab4:	pop    ds
  406ab5:	in     al,dx
  406ab6:	iret   
  406ab7:	iret   
  406ab8:	dec    ecx
  406ab9:	xor    eax,0xd00f41ba
  406abe:	mov    dl,0xd9
  406ac0:	mov    ebp,0x78cc0a57
  406ac5:	pop    ebp
  406ac6:	das    
  406ac7:	sbb    BYTE PTR [edx-0x2933ea2d],cl
  406acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ace:	inc    esp
  406acf:	icebp  
  406ad0:	dec    ebx
  406ad1:	and    al,BYTE PTR [esi+0x5e]
  406ad4:	int    0x2f
  406ad6:	jns    0x406b27
  406ad8:	(bad)  
  406ad9:	ss out dx,eax
  406adb:	(bad)  
  406adc:	fiadd  WORD PTR [ecx]
  406ade:	mov    BYTE PTR [ebx],cl
  406ae0:	lods   al,BYTE PTR ds:[esi]
  406ae1:	jno    0x406b3b
  406ae3:	jo     0x406b11
  406ae5:	(bad)  
  406ae6:	jno    0x406aec
  406ae8:	loope  0x406b23
  406aea:	aas    
  406aeb:	ins    BYTE PTR es:[edi],dx
  406aec:	(bad)  
  406aed:	mov    cl,0x9f
  406aef:	xchg   DWORD PTR [ebx],ebx
  406af1:	cmp    ebp,0xfffffff6
  406af4:	push   ebp
  406af5:	dec    ecx
  406af6:	xchg   ecx,eax
  406af7:	mov    fs,WORD PTR ds:0x9a0e8f93
  406afd:	pop    esp
  406afe:	pop    edx
  406aff:	in     al,0xc1
  406b01:	xchg   esi,eax
  406b02:	setge  BYTE PTR [edi+0x28]
  406b06:	add    al,0x8c
  406b08:	jp     0x406b87
  406b0a:	mov    fs:0x2d1852c0,eax
  406b10:	les    ebp,FWORD PTR [edx]
  406b12:	xor    al,0x77
  406b14:	adc    eax,DWORD PTR [edi]
  406b16:	add    al,0x3b
  406b18:	rcr    esp,0xe3
  406b1b:	xchg   edi,eax
  406b1c:	adc    BYTE PTR [eax],cl
  406b1e:	jecxz  0x406b1b
  406b20:	mov    al,ds:0x2d4bce67
  406b25:	or     al,0x59
  406b27:	sbb    bl,BYTE PTR [edi+0x228797e6]
  406b2d:	xchg   ebp,eax
  406b2e:	(bad)
  406b31:	out    dx,eax
  406b32:	xor    DWORD PTR [eax-0x1c],ecx
  406b35:	add    ch,BYTE PTR [edi+0x681de1b8]
  406b3b:	pop    ss
  406b3c:	ss jmp 0x6473d743
  406b42:	sbb    BYTE PTR [ecx+0x53],dl
  406b45:	mov    ebp,0xb1b6ffe
  406b4a:	dec    ebx
  406b4b:	call   0x124be131
  406b50:	leave  
  406b51:	sub    esi,esi
  406b53:	cli    
  406b54:	mov    WORD PTR [edi-0x1],fs
  406b57:	pop    edi
  406b58:	call   0xe5fb6f43
  406b5d:	mov    ah,0x8
  406b5f:	mov    edi,0x6cc21bb6
  406b64:	cld    
  406b65:	ficom  WORD PTR [ecx+0xe]
  406b68:	adc    BYTE PTR [ebp+0x3c],ch
  406b6b:	sbb    al,0xfc
  406b6d:	in     eax,dx
  406b6e:	stc    
  406b6f:	push   eax
  406b70:	jl     0x406b7f
  406b72:	clc    
  406b73:	out    dx,eax
  406b74:	(bad)  
  406b76:	into   
  406b77:	push   ss
  406b78:	lods   al,BYTE PTR ds:[esi]
  406b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b7a:	retf   0x66c4
  406b7d:	xor    al,0x72
  406b7f:	js     0x406b5e
  406b81:	jmp    DWORD PTR [edi+esi*2-0x2a]
  406b85:	jp     0x406bd6
  406b87:	test   al,0x3c
  406b89:	addr16 loop 0x406b47
  406b8c:	and    eax,0x73cdab5
  406b91:	mov    DWORD PTR [ebp-0x77c1a3b],0xab9feb8a
  406b9b:	and    edx,ecx
  406b9d:	rdmsr  
  406b9f:	inc    esp
  406ba0:	or     DWORD PTR [edi+0x3e],ebp
  406ba3:	repnz xchg esi,eax
  406ba5:	int3   
  406ba6:	mov    bh,0x35
  406ba8:	or     eax,0xa2b075c3
  406bad:	ret    0x5c2b
  406bb0:	outs   dx,DWORD PTR ss:[esi]
  406bb2:	(bad)  
  406bb3:	sbb    ah,BYTE PTR [ebx+0x48]
  406bb6:	ss jbe 0x406b4b
  406bb9:	dec    ecx
  406bba:	add    BYTE PTR [esi],bh
  406bbc:	(bad)  
  406bbd:	out    dx,eax
  406bbe:	pusha  
  406bbf:	fmul   DWORD PTR [edi-0x5d872705]
  406bc5:	inc    esi
  406bc6:	fucom  st(1)
  406bc8:	lahf   
  406bc9:	adc    edi,DWORD PTR [ebp-0x68]
  406bcc:	mov    dl,0x14
  406bce:	rcl    DWORD PTR [edx],0x88
  406bd1:	pop    edx
  406bd2:	pop    edx
  406bd3:	inc    ebx
  406bd4:	mov    bh,0x9f
  406bd6:	test   DWORD PTR [eax+ebx*2],edx
  406bd9:	adc    DWORD PTR [esi+0x74007d1b],eax
  406bdf:	or     al,0xdf
  406be1:	sar    BYTE PTR ss:[ebp+0x3e],1
  406be5:	lods   al,BYTE PTR ds:[esi]
  406be6:	or     DWORD PTR [ecx+0x64],ecx
  406be9:	out    0xa8,eax
  406beb:	pop    esp
  406bec:	sub    BYTE PTR [esi+0x61deae6e],dh
  406bf2:	fnsetpm(287 only) 
  406bf4:	mov    cl,0xfa
  406bf6:	push   edi
  406bf7:	or     al,0x8e
  406bf9:	inc    eax
  406bfa:	inc    esi
  406bfb:	popf   
  406bfc:	pop    ds
  406bfd:	enter  0x4045,0xdc
  406c01:	stos   DWORD PTR es:[edi],eax
  406c02:	int    0x88
  406c04:	ret    
  406c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c06:	mov    BYTE PTR [edi+0xb],bh
  406c09:	adc    dl,bl
  406c0b:	cmp    ebp,DWORD PTR [esi+0x707aeddb]
  406c11:	(bad)  
  406c12:	push   0x5
  406c14:	aas    
  406c15:	(bad)  
  406c16:	call   0xc2d9:0x220ad082
  406c1d:	neg    BYTE PTR ds:0x2a664cbb
  406c23:	adc    al,0xea
  406c25:	test   DWORD PTR [edi+esi*8],ebx
  406c28:	adc    dh,BYTE PTR [ebp+edx*4-0x4c986563]
  406c2f:	inc    ecx
  406c30:	xlat   BYTE PTR ds:[ebx]
  406c31:	(bad)  
  406c32:	xor    ch,BYTE PTR [edx+0x3ae87e8b]
  406c38:	pop    esp
  406c39:	and    eax,DWORD PTR [edi+0x7ee90350]
  406c3f:	mov    ebx,0x1982055c
  406c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c45:	retf   0xc383
  406c48:	inc    eax
  406c49:	nop
  406c4a:	lods   al,BYTE PTR ds:[esi]
  406c4b:	sub    bl,al
  406c4d:	and    esp,0x7c974032
  406c53:	or     eax,0xac2088dc
  406c58:	adc    DWORD PTR [edi-0x1e],esi
  406c5b:	test   BYTE PTR [eax],bh
  406c5d:	mov    bh,0xd5
  406c5f:	js     0x406c67
  406c61:	pop    esi
  406c62:	je     0x406c08
  406c64:	push   es
  406c65:	mov    ecx,cs
  406c67:	pop    esp
  406c68:	shl    BYTE PTR [ebp-0x7e],1
  406c6b:	push   0xffffffe4
  406c6d:	icebp  
  406c6e:	(bad)  
  406c6f:	mov    BYTE PTR [eax],dh
  406c71:	pop    edi
  406c72:	cli    
  406c73:	add    bl,al
  406c75:	xor    BYTE PTR [ebp+0x5d],al
  406c78:	lock mov eax,0x914e2d50
  406c7e:	test   al,0xdf
  406c80:	mov    ds:0x5dccb0a3,eax
  406c85:	push   eax
  406c86:	mov    WORD PTR [edi],fs
  406c88:	add    dh,bl
  406c8a:	cmp    BYTE PTR [esi-0x35],dh
  406c8d:	jecxz  0x406c38
  406c8f:	and    eax,0xbea5b1a7
  406c94:	dec    edi
  406c95:	fwait
  406c96:	dec    ecx
  406c97:	xchg   ecx,eax
  406c98:	scas   eax,DWORD PTR es:[edi]
  406c99:	jl     0x406c5c
  406c9b:	pop    ebp
  406c9c:	mov    eax,0x8b5aca75
  406ca1:	add    ebp,DWORD PTR [eax+0x7e]
  406ca4:	adc    ecx,edi
  406ca6:	cmp    eax,0x267cbd5
  406cab:	lods   eax,DWORD PTR ds:[esi]
  406cac:	mov    dh,0xf6
  406cae:	xchg   ecx,eax
  406caf:	mov    esp,0xeb78725c
  406cb4:	add    eax,DWORD PTR [ecx+ecx*1+0x11983d39]
  406cbb:	and    eax,0x77622a99
  406cc0:	add    al,BYTE PTR [ecx-0x72b5ae48]
  406cc6:	cmp    DWORD PTR [edx],0xffffffcb
  406cc9:	push   ds
  406cca:	dec    esp
  406ccb:	lods   al,BYTE PTR ds:[esi]
  406ccc:	mov    ebx,0x640aaa89
  406cd1:	js     0x406d50
  406cd3:	mov    ds:0x1e0e3b91,al
  406cd8:	pushf  
  406cd9:	cs xor ch,bl
  406cdc:	cld    
  406cdd:	outs   dx,BYTE PTR ds:[esi]
  406cde:	cli    
  406cdf:	inc    ecx
  406ce0:	and    DWORD PTR [ebp+0x69b37f46],edi
  406ce6:	(bad)  
  406ce7:	int3   
  406ce8:	xchg   edi,eax
  406ce9:	arpl   sp,bx
  406ceb:	add    al,BYTE PTR [edi+0x36085b62]
  406cf1:	inc    ebx
  406cf2:	mov    eax,ds:0xb07f478c
  406cf7:	mov    DWORD PTR [ecx+0x4e],eax
  406cfa:	inc    edi
  406cfb:	inc    edi
  406cfc:	or     DWORD PTR [eax-0x1cb02a64],edi
  406d02:	and    ecx,edx
  406d04:	push   esi
  406d05:	cmp    ah,ah
  406d07:	mov    WORD PTR [eax],ds
  406d09:	aam    0x8
  406d0b:	pop    esp
  406d0c:	mov    ebp,0xf10f25f5
  406d11:	loop   0x406cda
  406d13:	dec    eax
  406d14:	arpl   WORD PTR [eax+0x14],bx
  406d17:	xor    al,BYTE PTR [esi+esi*4-0x6f]
  406d1b:	adc    DWORD PTR [ecx+0x16],ebx
  406d1e:	cmp    al,0x91
  406d20:	hlt    
  406d21:	mov    dh,0x94
  406d23:	sbb    DWORD PTR [edi-0x79],esi
  406d26:	mov    ah,0x51
  406d28:	shl    al,0xe5
  406d2b:	xor    eax,0xf926c308
  406d30:	pop    esp
  406d31:	cli    
  406d32:	add    al,0x6a
  406d34:	enter  0xe600,0x40
  406d38:	mov    bl,0xca
  406d3a:	or     al,0xa2
  406d3c:	pop    ebp
  406d3d:	outs   dx,DWORD PTR ds:[esi]
  406d3e:	jno    0x406cc2
  406d40:	add    BYTE PTR [ecx],cl
  406d42:	das    
  406d43:	ins    DWORD PTR es:[edi],dx
  406d44:	and    al,0x10
  406d46:	rcl    BYTE PTR [ecx+0x231042a4],cl
  406d4c:	js     0x406d60
  406d4e:	pusha  
  406d4f:	add    ebx,edx
  406d51:	fisttp DWORD PTR [esi]
  406d53:	dec    edi
  406d54:	or     eax,0x9730dafd
  406d59:	push   ecx
  406d5a:	pusha  
  406d5b:	test   al,0xe0
  406d5d:	repz mov ecx,0x8b980c96
  406d63:	jb     0x406db0
  406d65:	shl    DWORD PTR [ecx+0x56],0x49
  406d69:	arpl   WORD PTR [ebx-0x39a3d05c],si
  406d6f:	push   ebx
  406d70:	lods   eax,DWORD PTR ds:[esi]
  406d71:	jno    0x406d3d
  406d73:	fadd   QWORD PTR [eax-0x15d4a4f2]
  406d79:	out    dx,eax
  406d7a:	call   FWORD PTR ds:0xc3af9f5d
  406d80:	dec    esp
  406d81:	sti    
  406d82:	mov    ds:0x87d05c20,al
  406d87:	dec    edx
  406d88:	stc    
  406d89:	pusha  
  406d8a:	push   ebx
  406d8b:	fiadd  WORD PTR [ebp-0x4f42525b]
  406d91:	out    0xb9,eax
  406d93:	fimul  DWORD PTR [ebp-0x69dd5789]
  406d99:	push   cs
  406d9a:	(bad)  
  406d9b:	mov    BYTE PTR [edx],ah
  406d9d:	xor    eax,0x58b326e
  406da2:	fdiv   QWORD PTR [ebx-0x55]
  406da5:	xchg   ebp,eax
  406da6:	(bad)  
  406da7:	ror    DWORD PTR [ebx+0x51],1
  406daa:	jg     0x406d90
  406dac:	push   eax
  406dad:	ins    BYTE PTR es:[edi],dx
  406dae:	add    al,0x98
  406db0:	push   0x2e
  406db2:	dec    DWORD PTR [eax+ebx*8+0x3c362a3a]
  406db9:	mov    bl,0xfa
  406dbb:	mov    dl,0xa8
  406dbd:	cmp    bh,dl
  406dbf:	ret    0x91d0
  406dc2:	(bad)  
  406dc3:	jp     0x406da8
  406dc5:	xchg   esi,eax
  406dc6:	shl    ebp,0x2c
  406dc9:	fmul   DWORD PTR [esi]
  406dcb:	or     DWORD PTR [ebx+edx*1],ebp
  406dce:	sub    al,0xe
  406dd0:	pop    ds
  406dd1:	adc    DWORD PTR [edx+edx*2-0x12d434c1],0xf34f045e
  406ddc:	jbe    0x406dfd
  406dde:	sub    al,0xbb
  406de0:	adc    ah,BYTE PTR [ebp+0x7c]
  406de3:	jb     0x406e62
  406de5:	cmc    
  406de6:	and    ah,BYTE PTR [eax]
  406de8:	jbe    0x406e5a
  406dea:	dec    edi
  406deb:	rcl    BYTE PTR [eax],0xec
  406dee:	mov    al,ch
  406df0:	sti    
  406df1:	or     BYTE PTR [edi+ebp*1-0x4d],dl
  406df5:	push   cs
  406df6:	daa    
  406df7:	pop    edx
  406df8:	scas   eax,DWORD PTR es:[edi]
  406df9:	push   0xffffff8d
  406dfb:	jmp    0x406dc9
  406dfd:	xchg   DWORD PTR [ebp+0x61],ebp
  406e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e01:	inc    ebp
  406e02:	fist   DWORD PTR [ecx-0x37]
  406e05:	adc    eax,ebp
  406e07:	das    
  406e08:	not    BYTE PTR [ecx]
  406e0a:	dec    ebx
  406e0b:	sub    eax,0xe8f88e6
  406e10:	jp     0x406e41
  406e12:	bound  eax,QWORD PTR [ebp-0x79]
  406e15:	dec    ebp
  406e16:	in     al,0x3b
  406e18:	sub    BYTE PTR [ecx+0x27],0xc4
  406e1c:	cmc    
  406e1d:	xchg   ebx,eax
  406e1e:	push   ds
  406e1f:	pop    esi
  406e20:	inc    ebx
  406e21:	(bad)  
  406e23:	mov    ?,WORD PTR fs:[eax]
  406e26:	mov    eax,0xf3d16bc8
  406e2b:	mov    ebx,0xe0910fef
  406e30:	rcl    BYTE PTR [ebx+ebp*8-0x7c],cl
  406e34:	push   ebp
  406e35:	sub    eax,0xcc96a37
  406e3a:	pop    edi
  406e3b:	clc    
  406e3c:	fiadd  DWORD PTR [edi]
  406e3e:	jg     0x406de7
  406e40:	jmp    0x406dc7
  406e42:	xchg   ebp,eax
  406e44:	sbb    cl,dh
  406e46:	enter  0x83a1,0xaa
  406e4a:	pop    ebx
  406e4b:	pop    edx
  406e4c:	lods   al,BYTE PTR ds:[esi]
  406e4d:	push   cs
  406e4e:	xor    al,0xf4
  406e50:	(bad)  [ecx-0x6ca71f24]
  406e56:	lock mov dh,0xf7
  406e59:	fcomp  DWORD PTR [edx-0x8]
  406e5c:	icebp  
  406e5d:	inc    ebp
  406e5e:	rcr    DWORD PTR [ecx],1
  406e60:	ficom  WORD PTR [ebp+0xc]
  406e63:	das    
  406e64:	lds    ebx,FWORD PTR [esi]
  406e66:	test   eax,0x96d06598
  406e6b:	add    al,0x4c
  406e6d:	popa   
  406e6e:	pusha  
  406e6f:	int3   
  406e70:	mov    edi,0xc4e34605
  406e75:	cs pop ss
  406e77:	jl     0x406e5d
  406e79:	inc    edi
  406e7a:	push   ebp
  406e7b:	push   edi
  406e7c:	cwde   
  406e7d:	cli    
  406e7e:	fisttp WORD PTR [eax+0x2169d5b]
  406e84:	outs   dx,BYTE PTR ds:[esi]
  406e85:	sub    esp,esi
  406e87:	push   edx
  406e88:	inc    ebx
  406e89:	push   eax
  406e8a:	add    al,0x4b
  406e8c:	mov    ds:0x2725f012,al
  406e91:	and    al,0x1c
  406e93:	imul   edi,ebx,0x5f
  406e96:	jecxz  0x406f15
  406e98:	xchg   edx,eax
  406e99:	push   ebp
  406e9a:	jbe    0x406e2a
  406e9c:	cmp    bl,BYTE PTR [ebx]
  406e9e:	jno    0x406eab
  406ea0:	call   0x4c0547da
  406ea5:	mov    esi,DWORD PTR [eax]
  406ea7:	js     0x406e93
  406ea9:	cwde   
  406eaa:	push   eax
  406eab:	sbb    DWORD PTR [esi+0x13],eax
  406eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eaf:	test   BYTE PTR [eax+0x3ee17256],cl
  406eb5:	add    ebx,0xffffffc2
  406eb8:	mov    dl,0xde
  406eba:	dec    esp
  406ebb:	push   ebp
  406ebc:	jl     0x406eae
  406ebe:	addr16 pop ecx
  406ec0:	out    0x9b,eax
  406ec2:	gs pop esp
  406ec4:	xor    al,0x9c
  406ec6:	je     0x406ebc
  406ec8:	xchg   BYTE PTR [ebx+0x5cfcb6cf],dh
  406ece:	(bad)  
  406ecf:	adc    al,0x89
  406ed1:	adc    eax,0xdd1d9f02
  406ed6:	jp     0x406e6d
  406ed8:	adc    ebx,ecx
  406eda:	mov    esp,0xd743d729
  406edf:	push   0x7f38eee
  406ee4:	jmp    0xbc8e99f1
  406ee9:	repz xor edi,DWORD PTR [edi-0x976cefd]
  406ef0:	pop    esp
  406ef1:	inc    ecx
  406ef2:	xchg   ebp,eax
  406ef3:	out    0x71,al
  406ef5:	add    DWORD PTR [esi+0x13],0x6d
  406ef9:	mov    WORD PTR [eax-0x2a3b21bf],es
  406eff:	sub    bl,ch
  406f01:	int3   
  406f02:	inc    ax
  406f04:	and    al,0xe
  406f06:	inc    esp
  406f07:	jle    0x406eb8
  406f09:	pop    ds
  406f0a:	repz mov ecx,0xee9c361d
  406f10:	jns    0x406ea9
  406f12:	scas   eax,DWORD PTR es:[edi]
  406f13:	sub    DWORD PTR [edx+0x4a],ebx
  406f16:	pop    ebx
  406f17:	ins    BYTE PTR es:[edi],dx
  406f18:	dec    ch
  406f1a:	inc    esp
  406f1b:	jmp    0x406ea7
  406f1d:	adc    esp,ebp
  406f1f:	pop    ebx
  406f20:	fmul   QWORD PTR [ebp-0x18]
  406f23:	add    eax,0xd3c18f06
  406f28:	jo     0x406ed0
  406f2a:	fld    TBYTE PTR [ebx*8-0xfa09bf7]
  406f31:	push   0x73
  406f33:	and    edx,DWORD PTR [eax+edx*8]
  406f36:	sbb    DWORD PTR [esi],0x21
  406f39:	in     eax,0x79
  406f3b:	dec    esp
  406f3c:	stc    
  406f3d:	neg    BYTE PTR [ecx]
  406f3f:	xor    DWORD PTR ds:0xfb50e887,esi
  406f45:	pop    ds
  406f46:	inc    edi
  406f47:	and    ah,BYTE PTR [edi+0x12]
  406f4a:	inc    edi
  406f4b:	mov    edx,0xa9dd4dd5
  406f50:	jmp    0xa5f0c3ab
  406f55:	test   ah,ch
  406f57:	mov    ecx,0x236f2d8c
  406f5c:	rol    bl,1
  406f5e:	adc    al,0x15
  406f60:	xor    eax,0x4e4b9bc9
  406f65:	fs sub edx,0x3c
  406f69:	fisubr DWORD PTR [eax+0x78]
  406f6c:	jns    0x406f07
  406f6e:	xor    ecx,DWORD PTR [eax+0x28]
  406f71:	jmp    0x406f32
  406f73:	adc    al,0xc6
  406f75:	call   0x29caf3fd
  406f7a:	sbb    BYTE PTR ds:0x33cfd380,dh
  406f80:	sbb    bl,BYTE PTR [esi+edx*2]
  406f83:	sbb    al,0x26
  406f85:	sub    ebx,DWORD PTR [edx]
  406f87:	cdq    
  406f88:	inc    edi
  406f89:	push   es
  406f8a:	fldcw  WORD PTR [edi-0x706469be]
  406f90:	test   eax,0x1b549ce0
  406f95:	jecxz  0x406f34
  406f97:	dec    edx
  406f98:	inc    esi
  406f99:	(bad)  
  406f9a:	outs   dx,DWORD PTR ds:[esi]
  406f9b:	mov    esi,DWORD PTR [ebp-0x7e]
  406f9e:	push   edi
  406f9f:	nop
  406fa0:	inc    esp
  406fa1:	push   ss
  406fa2:	pop    edi
  406fa3:	test   ecx,0xc9331ee1
  406fa9:	xor    DWORD PTR ds:0x4229ba,0x4229a2
  406fb3:	or     ecx,DWORD PTR [ebp-0x1c]
  406fb6:	shr    edx,0x2
  406fb9:	xor    edx,DWORD PTR ds:0x422892
  406fbf:	mov    edx,DWORD PTR [esi+0x4]
  406fc2:	mov    DWORD PTR [ebp-0x2c],ecx
  406fc5:	cmp    DWORD PTR ds:0x422992,0x0
  406fcc:	mov    DWORD PTR ds:0x4228ee,0x4f9e
  406fd6:	mov    edx,0x30c0
  406fdb:	mov    edx,DWORD PTR ds:0x422936
  406fe1:	jmp    0x407022
  406fe6:	mov    DWORD PTR ds:0x42296a,0x6ad7
  406ff0:	je     0x407011
  406ff6:	push   0x592a
  406ffb:	call   DWORD PTR ds:0x42a018
  407001:	xor    edx,edx
  407003:	or     edx,DWORD PTR ds:0x4228b6
  407009:	xor    DWORD PTR ds:0x42294a,edx
  40700f:	add    ecx,edx
  407011:	inc    ecx
  407012:	or     ecx,0x572d
  407018:	adc    DWORD PTR ds:0x422992,0x6861
  407022:	mov    ecx,DWORD PTR [ebp+0x18]
  407025:	cmp    DWORD PTR ds:0x422966,0x0
  40702c:	mov    DWORD PTR ds:0x42299a,0x24bb
  407036:	mov    DWORD PTR ds:0x422992,0x4860
  407040:	jmp    0x4070fc
  407045:	mov    DWORD PTR ds:0x4228ea,0x356f
  40704f:	jle    0x407079
  407055:	push   DWORD PTR [ebp-0x18]
  407058:	push   0x5570
  40705d:	push   0x150b
  407062:	push   0x5476
  407067:	push   0x7791
  40706c:	push   0x2991
  407071:	call   DWORD PTR ds:0x42a01c
  407077:	inc    edx
  407078:	dec    edx
  407079:	sbb    DWORD PTR ds:0x4229c6,0x42296e
  407083:	sub    edx,DWORD PTR ds:0x422926
  407089:	cmp    DWORD PTR ds:0x4228d6,0x0
  407090:	mov    edx,DWORD PTR ds:0x422952
  407096:	mov    edx,0x5ca6
  40709b:	not    edx
  40709d:	jmp    0x4070fc
  4070a2:	mov    DWORD PTR ds:0x4228f6,0x627
  4070ac:	jae    0x4070d8
  4070b2:	push   0x5b8a
  4070b7:	push   0x190e
  4070bc:	call   DWORD PTR ds:0x42a2a0
  4070c2:	add    DWORD PTR ds:0x42297a,edi
  4070c8:	xor    DWORD PTR ds:0x42293a,edi
  4070ce:	and    DWORD PTR ds:0x4229b2,0x7045
  4070d8:	sbb    DWORD PTR ds:0x4228f6,0x244f
  4070e2:	adc    DWORD PTR ds:0x4229a2,ebx
  4070e8:	xor    edx,edx
  4070ea:	xor    edx,DWORD PTR ds:0x42296e
  4070f0:	add    edx,DWORD PTR ds:0x422986
  4070f6:	mov    DWORD PTR ds:0x42296e,edx
  4070fc:	mov    edx,DWORD PTR [ebp+0x1c]
  4070ff:	shrd   ecx,edx,0x2
  407103:	add    DWORD PTR ds:0x4229be,0x1936
  40710d:	jmp    0x407697
  407112:	loope  0x4070db
  407114:	ja     0x407111
  407116:	xor    DWORD PTR [edx],ebx
  407118:	pusha  
  407119:	pushf  
  40711a:	sub    DWORD PTR [edi],esp
  40711c:	scas   al,BYTE PTR es:[edi]
  40711d:	jb     0x4070cc
  40711f:	rol    BYTE PTR ds:0x166dc9a8,1
  407125:	push   ss
  407126:	cmp    eax,0x61161604
  40712b:	jmp    0x98e6:0x67531536
  407132:	ja     0x4070c2
  407134:	int3   
  407135:	daa    
  407136:	or     al,0xec
  407138:	neg    DWORD PTR [ebx]
  40713a:	(bad)  
  40713c:	jne    0x407126
  40713e:	dec    edx
  40713f:	inc    DWORD PTR [edi+0x52]
  407142:	test   DWORD PTR es:[ebx-0x4d],ebx
  407146:	sbb    eax,0x3e97bfbe
  40714b:	push   eax
  40714c:	add    dh,al
  40714e:	xchg   BYTE PTR [edx],ch
  407150:	pop    edx
  407151:	mov    ds:0x3f06051d,al
  407156:	lock mov al,ds:0xa93fa4cf
  40715c:	adc    dl,bh
  40715e:	and    dh,bl
  407160:	pop    ebx
  407161:	cli    
  407162:	lock cmp al,0xea
  407165:	mov    ebp,0xb977de99
  40716a:	and    edi,DWORD PTR [eax]
  40716c:	jb     0x4071c8
  40716e:	int    0x40
  407170:	leave  
  407171:	jne    0x407131
  407173:	ds xor eax,0x8e558d97
  407179:	pushf  
  40717a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40717b:	in     al,0x3d
  40717d:	and    ebx,DWORD PTR [ebp+0x20]
  407180:	mov    al,0xc1
  407182:	(bad)  
  407183:	popf   
  407184:	pushf  
  407185:	or     DWORD PTR [eax-0x51],edi
  407188:	stc    
  407189:	fistp  QWORD PTR [ebx-0x73]
  40718c:	aam    0xef
  40718e:	(bad)  
  40718f:	cmp    ebp,eax
  407191:	jecxz  0x407148
  407193:	jnp    0x407211
  407195:	nop
  407196:	lea    ebx,[eax+0x6e]
  407199:	pushf  
  40719a:	mov    al,ds:0x2db5358f
  40719f:	cmp    al,0xde
  4071a1:	mov    ebp,0x5408e66
  4071a6:	add    eax,0xdbeadc4a
  4071ab:	inc    edi
  4071ac:	les    edi,FWORD PTR [edx]
  4071ae:	mov    ds:0x7d4a0ceb,al
  4071b3:	sub    BYTE PTR [ecx+0x14],cl
  4071b6:	cmp    BYTE PTR [esi],0xc2
  4071b9:	dec    edi
  4071ba:	pop    ebx
  4071bb:	ss cwde 
  4071bd:	push   edi
  4071be:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4071c0:	sub    eax,0x63386f16
  4071c5:	mov    bh,0xb6
  4071c7:	push   ss
  4071c8:	repz cs adc al,0xd
  4071cc:	add    al,0x55
  4071ce:	push   edi
  4071cf:	in     al,0x33
  4071d1:	or     al,0x2
  4071d3:	sub    cl,BYTE PTR [edi+0x36bdf042]
  4071d9:	imul   edi,DWORD PTR [ebx-0x3a],0xf320b6cc
  4071e0:	fsub   st(4),st
  4071e2:	addr16 loop 0x407185
  4071e5:	sub    bl,ah
  4071e7:	mov    dh,0xd1
  4071e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ea:	xchg   ecx,eax
  4071eb:	ficomp WORD PTR [edi]
  4071ed:	or     DWORD PTR [eax+ebp*1-0x6a85ebf6],ecx
  4071f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f5:	fistp  WORD PTR [ecx]
  4071f7:	cld    
  4071f8:	(bad)  
  4071fa:	xor    ch,bh
  4071fc:	in     al,dx
  4071fd:	mov    esi,0xe650fc1a
  407202:	xor    eax,0x742ee99d
  407207:	sbb    al,0x45
  407209:	pop    ebx
  40720a:	sbb    al,0xae
  40720c:	dec    ebp
  40720d:	push   0xa1d9ddb9
  407212:	arpl   WORD PTR [edi+0x6f1c39f3],cx
  407218:	mov    DWORD PTR [ebp+0x2a],ebp
  40721b:	jbe    0x40722a
  40721d:	dec    edi
  40721e:	cmp    eax,0x74cf5b9b
  407223:	jmp    0x9d26a235
  407228:	sub    BYTE PTR [ecx],0xe9
  40722b:	cmp    eax,0xfe1f98b8
  407230:	into   
  407231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407232:	dec    esp
  407233:	and    eax,0x99bef4c6
  407238:	xor    al,0xeb
  40723a:	test   BYTE PTR [edx],0x36
  40723d:	test   al,0x79
  40723f:	fadd   QWORD PTR [esi]
  407241:	pop    edi
  407242:	out    0x71,eax
  407244:	and    eax,DWORD PTR [ecx]
  407246:	mov    ecx,0x8c2487e7
  40724b:	adc    ah,dh
  40724d:	or     esp,ebp
  40724f:	inc    ebp
  407250:	mov    DWORD PTR [ebp-0x6eb7fb6],esi
  407256:	(bad)  [eax]
  407258:	out    dx,eax
  407259:	cmp    BYTE PTR [ebx-0x1aad99d0],al
  40725f:	mov    BYTE PTR [edi],al
  407261:	jmp    0x6058:0x23bd0110
  407268:	pusha  
  407269:	(bad)  
  40726a:	xchg   edx,eax
  40726b:	not    DWORD PTR [esi+0x6c]
  40726e:	ficom  DWORD PTR [esi-0x1f]
  407271:	sti    
  407272:	ins    BYTE PTR es:[edi],dx
  407273:	pop    edi
  407274:	mov    BYTE PTR [ebp-0x36],cl
  407277:	sub    DWORD PTR [bx+si],ecx
  40727a:	dec    esp
  40727b:	sbb    BYTE PTR [ecx+eax*2+0x36],al
  40727f:	dec    edx
  407280:	lods   al,BYTE PTR ds:[esi]
  407281:	pop    ebx
  407282:	mov    eax,0xeecef865
  407287:	idiv   DWORD PTR [edx]
  407289:	add    ecx,DWORD PTR [edx-0x42]
  40728c:	neg    DWORD PTR [ecx-0x11e15f26]
  407292:	ds and al,0xe5
  407295:	inc    edi
  407296:	rcr    DWORD PTR [ebx],1
  407298:	jge    0x4072eb
  40729a:	push   esi
  40729b:	push   eax
  40729c:	or     DWORD PTR [edi+eiz*2],esi
  40729f:	sar    BYTE PTR [ecx+0x15],0xea
  4072a3:	das    
  4072a4:	jae    0x407240
  4072a6:	jl     0x407288
  4072a8:	scas   eax,DWORD PTR es:[edi]
  4072a9:	pushf  
  4072aa:	das    
  4072ab:	test   al,0xc6
  4072ad:	sub    al,bl
  4072af:	(bad)  
  4072b1:	and    BYTE PTR [ebx+0x67],ch
  4072b4:	inc    esi
  4072b5:	dec    ecx
  4072b6:	add    ebp,0x9d2fc7a6
  4072bc:	lods   al,BYTE PTR ds:[esi]
  4072bd:	push   0xc66109c6
  4072c2:	adc    DWORD PTR [esi+0x6d870f90],ebx
  4072c8:	jle    0x407265
  4072ca:	repz das 
  4072cc:	push   ebx
  4072cd:	repnz (bad) 
  4072cf:	sbb    al,0x7d
  4072d1:	fs pop ebx
  4072d3:	mov    ebx,0xb9c1e518
  4072d8:	nop
  4072d9:	and    edx,esp
  4072db:	fstp   DWORD PTR [esi+0x36]
  4072de:	cmp    DWORD PTR [edx],ebx
  4072e0:	pushf  
  4072e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072e2:	(bad)  
  4072e3:	call   DWORD PTR [edx-0x7c]
  4072e6:	ja     0x407344
  4072e8:	xchg   BYTE PTR ds:0x74231ce5,ah
  4072ee:	out    dx,eax
  4072ef:	rol    BYTE PTR [ebx-0x5f],cl
  4072f2:	pop    ebx
  4072f3:	pop    eax
  4072f4:	aas    
  4072f5:	xlat   BYTE PTR ds:[ebx]
  4072f6:	push   ds
  4072f7:	and    BYTE PTR [edi-0x28],ch
  4072fa:	stos   DWORD PTR es:[edi],eax
  4072fb:	push   0x337b8ffd
  407300:	jns    0x407373
  407302:	bound  ecx,QWORD PTR [ebp-0x77c1491b]
  407308:	mov    eax,0xdf87a2e2
  40730d:	sub    al,0xdd
  40730f:	xchg   edi,eax
  407310:	mov    ebx,0x218348f6
  407315:	push   esp
  407316:	push   ebx
  407317:	sub    cl,0x7f
  40731a:	push   es
  40731b:	jmp    0xe15678f6
  407320:	ins    BYTE PTR es:[edi],dx
  407321:	shr    cl,0xa6
  407324:	jb     0x407300
  407326:	pop    ecx
  407327:	(bad)  
  407328:	out    dx,al
  407329:	out    dx,eax
  40732a:	fadd   QWORD PTR [esi-0x7a]
  40732d:	(bad)  
  40732e:	shl    DWORD PTR [ecx-0x5f],cl
  407331:	jecxz  0x407372
  407333:	sub    dl,bh
  407335:	rol    WORD PTR [ebx+esi*1],cl
  407339:	rol    BYTE PTR [ecx+0x1c],0x39
  40733d:	adc    DWORD PTR [esi+0x1e],ebx
  407340:	call   0x854f:0x9e35f27b
  407347:	xor    ch,BYTE PTR [eax-0x4f]
  40734a:	xchg   ebx,eax
  40734b:	arpl   dx,dx
  40734d:	push   ebx
  40734e:	and    eax,DWORD PTR [esi+0x5e712b7a]
  407354:	icebp  
  407355:	and    eax,0xcdc727a4
  40735a:	int3   
  40735b:	or     BYTE PTR [ecx],0x23
  40735e:	jge    0x407380
  407360:	bound  ecx,QWORD PTR [ebx-0x4b9d944e]
  407366:	imul   edi,eax,0xb6d58627
  40736c:	out    dx,eax
  40736d:	sub    bl,bh
  40736f:	or     BYTE PTR [ecx+0x4cda42b0],bh
  407375:	sub    cl,BYTE PTR ds:[ebp-0x18ac4064]
  40737c:	test   al,0xc
  40737e:	and    esp,DWORD PTR [esi]
  407380:	mov    eax,0x3bb0b626
  407385:	inc    esi
  407386:	and    ah,dl
  407388:	pop    edi
  407389:	mov    ebx,0x2e672930
  40738e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40738f:	sbb    DWORD PTR [edi],edx
  407391:	inc    ecx
  407392:	enter  0xbcf7,0x75
  407396:	pop    ebp
  407397:	mov    esi,0x9618f01d
  40739c:	cmp    al,0x10
  40739e:	mov    edx,DWORD PTR [ecx+0x44]
  4073a1:	xor    ebx,0x75a67bda
  4073a7:	fcomp  st(1)
  4073a9:	mov    dl,0xb1
  4073ab:	int    0x16
  4073ad:	aaa    
  4073ae:	stc    
  4073af:	xor    BYTE PTR [esi+eax*1-0x52d058f1],dh
  4073b6:	mov    esp,0x92dcdc7
  4073bb:	ja     0x4073e8
  4073bd:	imul   eax,DWORD PTR [ecx-0x7],0xe2f5cc8e
  4073c4:	xchg   esp,eax
  4073c5:	mov    edx,0x334cc07c
  4073ca:	sbb    BYTE PTR [eax+0x13],ch
  4073cd:	fstp   DWORD PTR [ecx-0x22621eb6]
  4073d3:	mov    ch,0xa9
  4073d5:	jo     0x4073fc
  4073d7:	cmp    al,0x6b
  4073d9:	mov    al,ds:0xe84ef874
  4073de:	mov    edx,0xb68ff19d
  4073e3:	test   DWORD PTR [esi-0x5b45e255],edx
  4073e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ea:	push   ds
  4073eb:	shl    DWORD PTR [edx-0x5fd6825],cl
  4073f1:	shl    dh,0x36
  4073f4:	xchg   edi,eax
  4073f5:	(bad)  
  4073f6:	mov    eax,0xea6d1cb0
  4073fb:	inc    ebp
  4073fc:	dec    edi
  4073fd:	inc    ah
  4073ff:	neg    edi
  407401:	push   edx
  407402:	int3   
  407403:	cdq    
  407404:	mov    edx,0xa13cfa8e
  407409:	lahf   
  40740a:	add    al,0x76
  40740c:	mov    edi,0x654749ee
  407411:	jp     0x40742b
  407413:	test   al,0xa1
  407415:	adc    esp,DWORD PTR [eax-0x18]
  407418:	jmp    0x40743b
  40741a:	int    0x5c
  40741c:	jl     0x407421
  40741e:	ins    BYTE PTR es:[edi],dx
  40741f:	jg     0x407473
  407421:	xor    esp,DWORD PTR ds:0x70cfd050
  407427:	mov    al,ds:0x3eccae03
  40742c:	add    esp,edi
  40742e:	push   ss
  40742f:	test   al,cl
  407431:	or     ebp,ecx
  407433:	add    dl,BYTE PTR [eax]
  407435:	int3   
  407436:	lods   eax,DWORD PTR ds:[esi]
  407437:	cmp    DWORD PTR [esi+0x34],edx
  40743a:	out    0x50,eax
  40743c:	cs sbb al,0x2b
  40743f:	arpl   WORD PTR [ecx],di
  407441:	jne    0x4073e7
  407443:	mov    cl,0x1f
  407445:	mov    dh,0xd8
  407447:	shr    BYTE PTR [edx+0x52],0xfa
  40744b:	xor    ch,BYTE PTR [ecx-0x9]
  40744e:	in     eax,0x18
  407450:	es ja  0x4074ae
  407453:	jb     0x4073d7
  407455:	lods   al,BYTE PTR ds:[esi]
  407456:	adc    DWORD PTR [ebx-0x56ac2d94],esi
  40745c:	or     DWORD PTR [ebx],edx
  40745e:	mov    bh,0x9c
  407460:	push   0x11910842
  407465:	push   ebp
  407466:	stos   DWORD PTR es:[edi],eax
  407467:	dec    ecx
  407468:	(bad)  
  407469:	mov    ds:0x635af6ab,al
  40746e:	or     BYTE PTR [ebp-0x73935481],ah
  407474:	mov    WORD PTR [esi+0x1e37bb98],cs
  40747a:	push   esi
  40747b:	jno    0x407435
  40747d:	jge    0x40749a
  40747f:	in     al,0x1f
  407481:	dec    edi
  407482:	ss jecxz 0x4074e5
  407485:	ds pusha 
  407487:	inc    eax
  407488:	mov    ds:0x73159a37,al
  40748d:	and    eax,0xa26ee49c
  407492:	dec    ecx
  407493:	mov    esp,0xfb3c34da
  407498:	scas   eax,DWORD PTR es:[edi]
  407499:	ror    DWORD PTR [eax+edx*8],1
  40749c:	xchg   DWORD PTR [eax+0x48],ebx
  40749f:	push   esp
  4074a0:	ror    cl,1
  4074a2:	(bad)  
  4074a3:	jb     0x407523
  4074a5:	dec    ebp
  4074a6:	dec    ebp
  4074a7:	pusha  
  4074a8:	cld    
  4074a9:	aam    0x64
  4074ab:	or     eax,0xa68af0ee
  4074b0:	not    BYTE PTR [ebp+0x3e]
  4074b3:	jmp    0x407497
  4074b5:	in     eax,dx
  4074b6:	mov    DWORD PTR [eax-0x4e],ecx
  4074b9:	dec    eax
  4074ba:	add    ecx,DWORD PTR [edx+0x35a2d148]
  4074c0:	push   edi
  4074c1:	lods   al,BYTE PTR ds:[esi]
  4074c2:	popa   
  4074c3:	mov    al,0x6d
  4074c5:	fstp   st(6)
  4074c7:	dec    edi
  4074c8:	jnp    0x4074ee
  4074ca:	pcmpeqd mm3,QWORD PTR ds:[edi-0xf316f9c]
  4074d2:	lods   eax,DWORD PTR ds:[esi]
  4074d3:	inc    ebp
  4074d4:	pop    edi
  4074d5:	adc    BYTE PTR [ecx+0x15],cl
  4074d8:	outs   dx,BYTE PTR ds:[esi]
  4074d9:	mov    ecx,0xfabf9ba1
  4074de:	mov    ds,WORD PTR [esp+ecx*4]
  4074e1:	popf   
  4074e2:	in     al,dx
  4074e3:	push   cs
  4074e4:	push   ss
  4074e5:	pop    esi
  4074e6:	or     dh,ch
  4074e8:	mov    ds:0xf08ffe49,al
  4074ed:	(bad)  
  4074ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ef:	(bad)  
  4074f0:	int3   
  4074f1:	outs   dx,BYTE PTR ds:[esi]
  4074f2:	inc    ecx
  4074f3:	(bad)  
  4074f4:	std    
  4074f5:	mov    ah,0x74
  4074f7:	and    DWORD PTR [edx+0x4e254f7e],0xffffffdb
  4074fe:	out    dx,eax
  4074ff:	push   ss
  407500:	push   esi
  407501:	test   BYTE PTR [esi],dl
  407503:	sub    DWORD PTR [eax],0x8e1b4270
  407509:	mov    edi,0x91c8fdf5
  40750e:	outs   dx,BYTE PTR ds:[esi]
  40750f:	stos   DWORD PTR es:[edi],eax
  407510:	sbb    BYTE PTR [esi-0x38],dh
  407513:	shl    BYTE PTR [ecx],0xff
  407516:	into   
  407517:	test   BYTE PTR [ecx+0x63],ch
  40751a:	or     ecx,DWORD PTR [eax]
  40751c:	jns    0x4074b8
  40751e:	cmp    dl,ch
  407520:	les    ebp,FWORD PTR [ebx-0x10bc00f9]
  407526:	(bad)  
  407527:	nop
  407528:	fs iret 
  40752a:	fs (bad) 
  40752c:	fmul   st,st(7)
  40752e:	or     DWORD PTR [edi],ebx
  407530:	and    eax,0x72ba4984
  407535:	adc    edx,ecx
  407537:	je     0x407556
  407539:	mov    eax,0x1752f2b7
  40753e:	mov    dh,0x9a
  407540:	out    0x3d,eax
  407542:	push   ss
  407543:	jno    0x407521
  407545:	ret    0x50e5
  407548:	dec    edi
  407549:	pop    edi
  40754a:	cwde   
  40754b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40754c:	mov    bh,BYTE PTR [eax-0x137b3ece]
  407552:	out    dx,eax
  407553:	xor    eax,0xcc02d10e
  407558:	xchg   edx,eax
  407559:	push   esi
  40755a:	sub    al,0xf2
  40755c:	mov    eax,DWORD PTR [ecx+edx*2]
  40755f:	sub    DWORD PTR [ecx+0x568f766a],edx
  407565:	sbb    DWORD PTR [ebx+0x53],0xe35e91a
  40756c:	ins    DWORD PTR es:[edi],dx
  40756d:	gs call 0x198e:0x12e64e32
  407575:	int    0x71
  407577:	in     eax,0xad
  407579:	mov    ecx,0x44507a09
  40757e:	xchg   esp,eax
  40757f:	push   edi
  407580:	shl    BYTE PTR [edx+0x79],0x17
  407584:	dec    edi
  407585:	cdq    
  407586:	and    BYTE PTR [ecx-0x2f],bl
  407589:	add    ecx,DWORD PTR [ebx+0x2baff869]
  40758f:	out    0x3c,eax
  407591:	popf   
  407592:	add    eax,0x5351811d
  407597:	call   0x87f3:0x22a425ea
  40759e:	push   0x24
  4075a0:	xchg   esi,eax
  4075a1:	fadd   st,st(7)
  4075a3:	mov    ah,dl
  4075a5:	cli    
  4075a6:	push   cs
  4075a7:	jnp    0x4075b7
  4075a9:	repz aaa 
  4075ab:	adc    ebp,DWORD PTR [ebp+0x4c]
  4075ae:	or     BYTE PTR [ebx],dh
  4075b0:	push   ebp
  4075b1:	nop
  4075b2:	stc    
  4075b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b4:	cmp    eax,0xe111f669
  4075b9:	aaa    
  4075ba:	mov    eax,ds:0xc9799e53
  4075bf:	jle    0x4075c5
  4075c1:	pop    esp
  4075c2:	mov    esp,0x33c24b99
  4075c7:	xchg   edi,eax
  4075c8:	jl     0x40762e
  4075ca:	xlat   BYTE PTR ds:[ebx]
  4075cb:	lahf   
  4075cc:	sbb    eax,0xaf8419e8
  4075d1:	jge    0x4075df
  4075d3:	or     bh,BYTE PTR [ebx-0x21b1a66b]
  4075d9:	ror    DWORD PTR [ecx+0x1a7e26a1],cl
  4075df:	inc    ebx
  4075e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075e1:	aas    
  4075e2:	add    ah,BYTE PTR [eax]
  4075e4:	sub    eax,0x6be4832c
  4075e9:	test   eax,0xdff0c7da
  4075ee:	jae    0x4075a8
  4075f0:	push   ebx
  4075f1:	push   es
  4075f2:	imul   esp,esp,0xffffffd8
  4075f5:	mov    WORD PTR [esi],cs
  4075f7:	xchg   esi,eax
  4075f8:	xchg   edi,eax
  4075f9:	fs mov edi,edx
  4075fc:	adc    al,0x9a
  4075fe:	mov    ecx,0x7ad1ca1d
  407603:	fcomp  QWORD PTR [esi]
  407605:	mov    esi,0xf0b3564b
  40760a:	into   
  40760b:	fwait
  40760c:	inc    esp
  40760d:	xchg   DWORD PTR ss:[ebx],edi
  407610:	add    ah,bl
  407612:	pop    es
  407613:	in     eax,dx
  407614:	cmp    al,0xbe
  407616:	adc    al,0xa6
  407618:	mov    eax,0x3c643781
  40761d:	stos   DWORD PTR es:[edi],eax
  40761e:	mov    esi,0xfbf24dc4
  407623:	(bad)  
  407624:	xchg   edx,eax
  407625:	loopne 0x40767d
  407627:	sbb    eax,0x3e
  40762a:	or     al,0x80
  40762c:	mov    eax,ds:0xf9ea3524
  407631:	push   edx
  407632:	dec    ebp
  407633:	push   ebp
  407634:	in     eax,0x3c
  407636:	mov    dh,0x26
  407638:	inc    ecx
  407639:	fld    DWORD PTR [esi+esi*8+0x11fcae92]
  407640:	mov    ecx,0xddec11dc
  407645:	mov    fs,WORD PTR [esi+0x6e]
  407648:	sub    ebp,DWORD PTR [ecx+ebp*4+0x50]
  40764c:	mov    esp,0xa6cdc6e3
  407651:	shr    DWORD PTR [edx],0xbd
  407654:	std    
  407655:	rcr    BYTE PTR [eax-0x52372782],cl
  40765b:	aaa    
  40765c:	(bad)  
  40765d:	icebp  
  40765e:	pop    ebp
  40765f:	daa    
  407660:	mov    eax,ds:0xccad204e
  407665:	inc    BYTE PTR [edi+0x7bd6d3db]
  40766b:	xor    al,0x5f
  40766d:	or     al,0xac
  40766f:	mov    eax,0x2ec9b729
  407674:	ficom  DWORD PTR [edi]
  407676:	add    BYTE PTR [edi+0x5f98c938],0x1d
  40767d:	xor    DWORD PTR fs:[eax],esi
  407680:	jmp    0x4e4d:0xe75b1c74
  407687:	push   ecx
  407688:	pop    eax
  407689:	retf   0x9dd0
  40768c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40768d:	jl     0x4076c8
  40768f:	dec    eax
  407690:	div    cl
  407692:	test   al,0x1d
  407694:	test   eax,0xeac11afc
  407699:	add    cl,BYTE PTR [ecx+0x4d8be44d]
  40769f:	sbb    BYTE PTR [ecx+0x4229a62d],al
  4076a5:	add    BYTE PTR [edx+0x42],bl
  4076a8:	add    BYTE PTR [eax],al
  4076aa:	mov    edx,DWORD PTR [ebp+0x1c]
  4076ad:	or     DWORD PTR ds:0x4228da,0x210e
  4076b7:	xor    DWORD PTR [ebp-0x1c],edi
  4076ba:	or     DWORD PTR ds:0x422962,0x4229ce
  4076c4:	xor    edx,edx
  4076c6:	or     edx,DWORD PTR [ebp-0x1c]
  4076c9:	or     DWORD PTR ds:0x4228ce,0x4229c2
  4076d3:	shl    ecx,0x1e
  4076d6:	dec    DWORD PTR ds:0x4228f2
  4076dc:	add    edx,DWORD PTR [ebp-0x2c]
  4076df:	add    DWORD PTR [eax],edx
  4076e1:	sbb    eax,0x3637
  4076e6:	mov    eax,DWORD PTR [esi]
  4076e8:	sub    DWORD PTR ds:0x42292a,ebx
  4076ee:	mov    ecx,DWORD PTR [esi+0x4]
  4076f1:	movzx  edx,BYTE PTR ds:0x42290a
  4076f8:	sub    edx,DWORD PTR ds:0x42292e
  4076fe:	mov    DWORD PTR ds:0x42290a,edx
  407704:	shrd   eax,ecx,0x2
  407708:	shr    ecx,0x2
  40770b:	sub    edx,edx
  40770d:	mov    ecx,DWORD PTR [esi]
  40770f:	cmp    DWORD PTR ds:0x422956,0x0
  407716:	mov    DWORD PTR ds:0x422992,0x518b
  407720:	mov    edx,DWORD PTR ds:0x4228ee
  407726:	mov    DWORD PTR ds:0x4229b6,0x962
  407730:	jmp    0x40778a
  407735:	mov    DWORD PTR ds:0x422992,0x300f
  40773f:	mov    DWORD PTR ds:0x42296a,0xfe3
  407749:	jne    0x407770
  40774f:	push   0x0
  407751:	push   0x5aa3
  407756:	push   0x671f
  40775b:	push   DWORD PTR [ebp-0x10]
  40775e:	call   DWORD PTR ds:0x42a178
  407764:	and    DWORD PTR ds:0x42296a,ecx
  40776a:	sub    edx,0x694d
  407770:	inc    edx
  407771:	adc    DWORD PTR ds:0x4228be,0x1a32
  40777b:	dec    edx
  40777c:	mov    edx,DWORD PTR ds:0x4229fe
  407782:	mov    edx,DWORD PTR [edx]
  407784:	xor    DWORD PTR ds:0x422922,edx
  40778a:	mov    edx,DWORD PTR [esi+0x4]
  40778d:	xor    eax,edi
  40778f:	shl    ecx,0x1e
  407792:	xor    edx,edx
  407794:	or     edx,eax
  407796:	xor    eax,eax
  407798:	add    eax,DWORD PTR ds:0x4229c2
  40779e:	adc    eax,DWORD PTR ds:0x42298e
  4077a4:	mov    ds:0x4229c2,eax
  4077a9:	jmp    0x407d33
  4077ae:	jle    0x407760
  4077b0:	fucomp st(4)
  4077b2:	sbb    DWORD PTR [eax-0x7c58e782],esp
  4077b8:	test   BYTE PTR [edx+0x68ef93ce],dh
  4077be:	mul    DWORD PTR [ebx+0x16]
  4077c1:	push   ss
  4077c2:	cmp    eax,0xf2161604
  4077c7:	dec    edi
  4077c8:	mov    ds:0xc4fa4d14,al
  4077cd:	inc    bx
  4077cf:	cmp    DWORD PTR [edx+0x11],esi
  4077d2:	jmp    0x407787
  4077d4:	xor    edx,DWORD PTR [esi+0x34c09014]
  4077da:	icebp  
  4077db:	mov    dl,BYTE PTR [edx-0x3fa4b4cc]
  4077e1:	add    ah,bh
  4077e3:	pop    esi
  4077e4:	and    BYTE PTR [eax+0x2e],0xc
  4077e8:	jmp    0xb9a0:0xed5ff4b8
  4077ef:	lods   eax,DWORD PTR ds:[esi]
  4077f0:	xchg   ecx,eax
  4077f1:	outs   dx,DWORD PTR ds:[esi]
  4077f2:	or     bl,BYTE PTR [ebx-0x23]
  4077f5:	and    esi,DWORD PTR [edx+0x6622a60e]
  4077fb:	aad    0xb6
  4077fd:	test   eax,0x195ebc71
  407802:	es loopne 0x407844
  407805:	fucom  st(6)
  407807:	cmp    dl,BYTE PTR [esi+0x1c227a0a]
  40780d:	xor    edx,DWORD PTR ds:0x313ce918
  407813:	mov    bh,0x3b
  407815:	stc    
  407816:	rol    DWORD PTR [esi],1
  407818:	icebp  
  407819:	mul    DWORD PTR [ebp-0x30]
  40781c:	out    dx,al
  40781d:	xchg   ecx,eax
  40781e:	push   edx
  40781f:	js     0x40787e
  407821:	and    DWORD PTR ds:0x6a659400,0xffffffdd
  407828:	xchg   ecx,eax
  407829:	mov    dh,ah
  40782b:	loope  0x407855
  40782d:	retf   0xbcd6
  407830:	pop    ecx
  407831:	xor    bl,dl
  407833:	lea    ecx,[edi+0x38]
  407836:	rol    DWORD PTR [ebx],0x48
  407839:	jecxz  0x4078a7
  40783b:	ins    BYTE PTR es:[edi],dx
  40783c:	stos   BYTE PTR es:[edi],al
  40783d:	sub    dh,bl
  40783f:	pop    esp
  407840:	jne    0x40783c
  407842:	cmp    eax,0x22f7e2c6
  407847:	out    0x3f,eax
  407849:	sub    bl,BYTE PTR fs:0x60844ca1
  407850:	jl     0x407872
  407852:	(bad)  
  407853:	ds add al,0x29
  407856:	sbb    ebx,DWORD PTR [esi]
  407858:	retf   0xa854
  40785b:	lods   eax,DWORD PTR ds:[esi]
  40785c:	cmp    bl,BYTE PTR [ecx]
  40785e:	shl    DWORD PTR [edx-0x35de86a5],cl
  407864:	icebp  
  407865:	sahf   
  407866:	aaa    
  407867:	sub    eax,ecx
  407869:	dec    ebx
  40786a:	sahf   
  40786b:	clc    
  40786c:	adc    al,0xcb
  40786e:	xchg   edx,eax
  40786f:	fwait
  407870:	outs   dx,BYTE PTR ds:[esi]
  407871:	sbb    bh,BYTE PTR [eax]
  407873:	or     BYTE PTR [ebx],al
  407875:	sbb    al,0xd
  407877:	fs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  40787a:	and    ebp,esi
  40787c:	lahf   
  40787d:	mov    ds:0x174accd,eax
  407882:	adc    BYTE PTR [ecx-0x69],0x74
  407886:	push   eax
  407887:	retf   
  407888:	push   eax
  407889:	ficomp WORD PTR ds:0x592ce240
  40788f:	out    dx,eax
  407890:	cmc    
  407891:	xlat   BYTE PTR ds:[ebx]
  407892:	xchg   ecx,eax
  407893:	loope  0x40790b
  407895:	mov    edi,0xc75a66db
  40789a:	sahf   
  40789b:	call   0xd7a3:0x8ed72b2b
  4078a2:	adc    BYTE PTR [esi+0x6c0541c0],cl
  4078a8:	xchg   ebp,eax
  4078a9:	or     DWORD PTR [ebp+eax*1-0x2f],esp
  4078ad:	ror    BYTE PTR [esi+0x11],cl
  4078b0:	pop    esi
  4078b1:	sti    
  4078b2:	push   0x30c03ea4
  4078b7:	daa    
  4078b8:	fdiv   DWORD PTR [ebp+0x4e]
  4078bb:	pop    edx
  4078bc:	jg     0x4078ca
  4078be:	sub    eax,0x7d7c46b6
  4078c3:	sub    DWORD PTR [ebx+0x22],edx
  4078c6:	mov    cl,0x41
  4078c8:	fidiv  DWORD PTR [ebx+0x4a]
  4078cb:	or     DWORD PTR cs:[ecx+0x5e],edi
  4078cf:	aam    0xa4
  4078d1:	and    ebp,DWORD PTR [ecx+0x68f62af8]
  4078d7:	dec    ecx
  4078d8:	retf   0x8b94
  4078db:	add    al,0x5f
  4078dd:	mov    cl,0x20
  4078df:	add    BYTE PTR [eax+0x343fb669],ah
  4078e5:	call   0xff6c0239
  4078ea:	push   esp
  4078eb:	adc    eax,0xd11070ed
  4078f0:	mov    ah,0x21
  4078f2:	sbb    BYTE PTR [edx-0x43ac26b9],dh
  4078f8:	int    0x22
  4078fa:	pop    edi
  4078fb:	test   eax,0xf1643c50
  407900:	dec    edi
  407901:	sbb    dl,ch
  407903:	or     al,0x35
  407905:	inc    edx
  407906:	push   edi
  407907:	es mov dl,0xb1
  40790a:	sub    cl,cl
  40790c:	shl    ecx,0x35
  40790f:	and    esi,DWORD PTR [ecx-0xf8afeea]
  407915:	mov    ebp,0x34cbf9b7
  40791a:	xchg   BYTE PTR [edi],cl
  40791c:	inc    edx
  40791d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791e:	rol    edx,0xd2
  407921:	mov    dh,0x5b
  407923:	jne    0x407904
  407925:	mov    ch,0x75
  407927:	mov    eax,ds:0x17b8fdd0
  40792c:	pop    eax
  40792d:	push   cs
  40792e:	inc    esp
  40792f:	std    
  407930:	jl     0x407988
  407932:	add    al,0xef
  407934:	iret   
  407935:	sbb    DWORD PTR [edi],edi
  407937:	cld    
  407938:	adc    al,BYTE PTR [eax-0x14]
  40793b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793c:	push   esi
  40793d:	xor    edx,0xffffffcc
  407940:	add    edi,DWORD PTR [edx+0x1]
  407943:	inc    esi
  407944:	mov    ds:0x719fa563,al
  407949:	mov    esp,0x9893f2b1
  40794e:	dec    eax
  40794f:	or     esp,esp
  407951:	daa    
  407952:	arpl   WORD PTR [edx],sp
  407954:	rcl    BYTE PTR [esi-0x6928cac0],cl
  40795a:	mov    dl,0x89
  40795c:	lds    ecx,FWORD PTR [esi+0x3b56203d]
  407962:	sub    edx,eax
  407964:	jae    0x407961
  407966:	pop    es
  407967:	jecxz  0x4079bb
  407969:	dec    ecx
  40796a:	jnp    0x40795d
  40796c:	jno    0x407968
  40796e:	(bad)  
  407970:	loop   0x4079b2
  407972:	addr16 inc ebp
  407974:	dec    esp
  407975:	pop    esp
  407976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407977:	pusha  
  407978:	iret   
  407979:	(bad)  
  40797a:	stc    
  40797b:	retf   
  40797c:	into   
  40797d:	mov    ch,0xbb
  40797f:	mov    al,0x78
  407981:	aad    0x90
  407983:	gs ss es jae 0x407959
  407988:	mov    WORD PTR [ebx+0xa],fs
  40798b:	inc    eax
  40798c:	fcomp  DWORD PTR [eax+edi*4+0x69]
  407990:	mov    edi,0xb217fc26
  407995:	adc    DWORD PTR [ebp-0x796e2ab4],edx
  40799b:	dec    esp
  40799c:	dec    esp
  40799d:	mov    eax,0xa90ee305
  4079a2:	mov    edx,0x13963659
  4079a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a8:	lock xchg esi,eax
  4079aa:	inc    esp
  4079ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ac:	jecxz  0x407959
  4079ae:	imul   ecx,DWORD PTR [ebp+0x12],0x6b
  4079b2:	add    ebp,DWORD PTR [ecx+0x17]
  4079b5:	mov    WORD PTR [edx+0x775b3743],?
  4079bb:	add    eax,0x9b726e1a
  4079c0:	cs sub eax,0x321b74f0
  4079c6:	shr    DWORD PTR [eax+0x18c380dc],cl
  4079cc:	ret    
  4079cd:	jns    0x40795e
  4079cf:	jg     0x407972
  4079d1:	daa    
  4079d2:	rcr    DWORD PTR [eax+0x179cf8f8],cl
  4079d8:	mov    dh,0xc3
  4079da:	mov    ds:0xc7815b3a,al
  4079df:	jbe    0x4079fa
  4079e1:	xor    al,0x8c
  4079e3:	outs   dx,BYTE PTR ds:[esi]
  4079e4:	aaa    
  4079e5:	adc    eax,0xe3fb4c50
  4079ea:	je     0x4079e1
  4079ec:	jnp    0x4079b3
  4079ee:	dec    esi
  4079ef:	lods   al,BYTE PTR ds:[esi]
  4079f0:	retf   
  4079f1:	mov    esp,0x2881d606
  4079f6:	hlt    
  4079f7:	idiv   DWORD PTR [edi]
  4079f9:	dec    ebx
  4079fa:	les    esp,FWORD PTR [esi+eax*2-0x39]
  4079fe:	fldln2 
  407a00:	adc    BYTE PTR [edi],bh
  407a02:	sub    eax,0xb61eb5e5
  407a07:	mov    BYTE PTR [esi-0xee3bb64],ah
  407a0d:	rcl    DWORD PTR [esp+eiz*4-0x2b],1
  407a11:	dec    esp
  407a12:	push   ebx
  407a13:	sub    ecx,DWORD PTR [ebx+0x1a]
  407a16:	pop    esp
  407a17:	pop    esi
  407a18:	xor    eax,0x40586dd1
  407a1d:	sbb    edx,DWORD PTR [ebx]
  407a1f:	lds    ecx,FWORD PTR [eax]
  407a21:	sub    DWORD PTR [ebx],ebx
  407a23:	and    DWORD PTR [edx],edi
  407a25:	dec    esp
  407a26:	dec    eax
  407a27:	inc    esi
  407a28:	int    0x93
  407a2a:	sbb    esp,DWORD PTR [edi+0x7d8cf003]
  407a30:	shl    ebp,1
  407a32:	sub    al,BYTE PTR [ecx+0x71]
  407a35:	inc    DWORD PTR [ecx-0x13]
  407a38:	loope  0x4079f6
  407a3a:	cmp    ah,BYTE PTR [ebx+0x251fe2f6]
  407a40:	pop    esi
  407a41:	jno    0x407a4d
  407a43:	mov    ebx,0x5d943ea1
  407a48:	jae    0x407a99
  407a4a:	popa   
  407a4b:	dec    ebp
  407a4c:	and    DWORD PTR [ecx+eax*8+0x5a],edi
  407a50:	inc    ebx
  407a51:	lods   eax,DWORD PTR ds:[esi]
  407a52:	outs   dx,DWORD PTR ds:[esi]
  407a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a54:	out    dx,al
  407a55:	mov    ds:0xa11b24f3,eax
  407a5a:	shr    esi,0x70
  407a5d:	call   0x72fa8c42
  407a62:	in     al,0x65
  407a64:	jl     0x4079fe
  407a66:	xchg   edi,eax
  407a67:	leave  
  407a68:	aad    0xdb
  407a6a:	data16 xor ah,BYTE PTR [esi-0x59d5a096]
  407a71:	add    esp,DWORD PTR [edi+0x13]
  407a74:	jnp    0x407a4a
  407a76:	pop    esp
  407a77:	sbb    dl,BYTE PTR [ebp+0x1b]
  407a7a:	dec    esp
  407a7b:	push   cs
  407a7c:	jecxz  0x407a0e
  407a7e:	repnz hlt 
  407a80:	nop
  407a81:	push   ss
  407a82:	ss in  al,0x7e
  407a85:	out    0xe8,al
  407a87:	cli    
  407a88:	mov    edi,DWORD PTR [ebp+0x8485f4a]
  407a8e:	mov    dl,0xc
  407a90:	aad    0xb
  407a92:	mov    esp,0xa8652868
  407a97:	mov    ch,0x5d
  407a99:	(bad)  
  407a9a:	gs ret 0xba41
  407a9e:	adc    BYTE PTR [ebx],al
  407aa0:	mov    ds:0x4872685c,eax
  407aa5:	mov    BYTE PTR [ecx-0x49d751b7],0xa6
  407aac:	dec    ebp
  407aad:	push   esi
  407aae:	mov    edx,DWORD PTR [ecx-0x17]
  407ab1:	xchg   DWORD PTR [edi+0x2b71002f],ecx
  407ab7:	sbb    BYTE PTR [esi],bl
  407ab9:	mov    esi,0x97c0be3c
  407abe:	dec    ebx
  407abf:	mov    eax,0x225ace28
  407ac4:	sub    eax,0xb006faaf
  407ac9:	xor    al,0x75
  407acb:	mov    ebp,0x529764c0
  407ad0:	and    eax,0xae7bf87d
  407ad5:	and    cl,BYTE PTR [edx]
  407ad7:	push   cs
  407ad8:	mov    edi,0x84218199
  407add:	inc    cx
  407adf:	xor    ecx,DWORD PTR [edx]
  407ae1:	pop    esi
  407ae2:	mov    ah,0xd9
  407ae4:	sub    bh,BYTE PTR [ecx]
  407ae6:	test   al,0xa4
  407ae8:	pop    esp
  407ae9:	jae    0x407abe
  407aeb:	push   es
  407aec:	adc    ch,BYTE PTR [ebx+0x6dedfa64]
  407af2:	rcr    dl,cl
  407af4:	popf   
  407af5:	into   
  407af6:	inc    esi
  407af7:	loopne 0x407b37
  407af9:	rol    DWORD PTR [edi],1
  407afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407afc:	imul   esi,DWORD PTR [edi],0xc
  407aff:	add    BYTE PTR [si-0x1116],bh
  407b04:	adc    DWORD PTR [esi-0x11de3562],ebx
  407b0a:	(bad)  
  407b0b:	ins    DWORD PTR es:[edi],dx
  407b0c:	add    ebp,ecx
  407b0e:	mov    edx,0x9e88f35a
  407b13:	lahf   
  407b14:	shr    BYTE PTR [ecx+0x2c0c0543],0xdc
  407b1b:	mov    dl,0xad
  407b1d:	mov    esi,0x33e90588
  407b22:	clc    
  407b23:	ds xchg ebp,ecx
  407b26:	sbb    DWORD PTR [ebx+esi*4],esi
  407b29:	aas    
  407b2a:	and    esp,DWORD PTR [ebx+0x33]
  407b2d:	jns    0x407bae
  407b2f:	fsubr  QWORD PTR [esi+0x67ec4beb]
  407b35:	sub    DWORD PTR [ebx],ecx
  407b37:	enter  0x735f,0x60
  407b3b:	retf   
  407b3c:	(bad)  
  407b3e:	cmp    BYTE PTR [ebp+0x4415abbd],ah
  407b44:	pop    eax
  407b45:	sti    
  407b46:	fdiv   QWORD PTR [esi-0x4ca5e237]
  407b4c:	adc    al,0xe9
  407b4e:	mov    edx,0x60c9d78
  407b53:	rol    BYTE PTR [ecx],cl
  407b55:	out    dx,eax
  407b56:	inc    esi
  407b57:	mov    bh,0xf9
  407b59:	int3   
  407b5a:	mov    esi,0xe8be17a3
  407b5f:	adc    edi,ebx
  407b61:	xchg   edi,eax
  407b62:	or     eax,0x1ee609a1
  407b67:	sub    al,0x5
  407b6a:	inc    esp
  407b6b:	fcmovnu st,st(4)
  407b6d:	call   0x7695:0xb800530e
  407b74:	in     eax,dx
  407b75:	and    edx,ebp
  407b77:	mov    edx,0x7b0b70ad
  407b7c:	sub    DWORD PTR [eax-0x6b],ebp
  407b7f:	ret    0xbea4
  407b82:	popa   
  407b83:	div    DWORD PTR [esi-0x54b9f575]
  407b89:	mov    al,ds:0xdbba1a05
  407b8e:	fcmovne st,st(4)
  407b90:	loop   0x407bb4
  407b92:	hlt    
  407b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b94:	adc    BYTE PTR [esi+0x59f5de2d],cl
  407b9a:	aad    0xf5
  407b9c:	add    al,0xeb
  407b9e:	adc    BYTE PTR [edi-0x79427948],cl
  407ba4:	sbb    eax,0xfb185410
  407ba9:	inc    eax
  407baa:	test   al,cl
  407bac:	dec    eax
  407bad:	ja     0x407bde
  407baf:	int3   
  407bb0:	(bad)  
  407bb2:	into   
  407bb3:	dec    ebx
  407bb4:	(bad)  
  407bb5:	push   ds
  407bb6:	fwait
  407bb7:	ds ins DWORD PTR es:[edi],dx
  407bb9:	mov    ebp,0xa46e8a7c
  407bbe:	sti    
  407bbf:	sub    DWORD PTR [edi+0x2b],0xdec7d6
  407bc6:	sbb    DWORD PTR [edx-0x5d],ebx
  407bc9:	dec    ebp
  407bca:	mov    esp,0x196e5e3e
  407bcf:	call   0x4a45:0xfc7b0902
  407bd6:	cmp    DWORD PTR [eax+0x60],0xac8e46cd
  407bdd:	sub    DWORD PTR [esi],ecx
  407bdf:	sbb    DWORD PTR [ecx],ebx
  407be1:	xchg   eax,esi
  407be3:	push   ebx
  407be4:	scas   al,BYTE PTR es:[edi]
  407be5:	retf   
  407be6:	cmp    BYTE PTR [edx-0x2304f929],cl
  407bec:	(bad)  
  407bee:	jae    0x407c10
  407bf0:	ds mov eax,0x589467bc
  407bf6:	mov    bl,0xf4
  407bf8:	leave  
  407bf9:	mov    dl,0x3a
  407bfb:	jne    0x407be2
  407bfd:	xchg   al,dl
  407bff:	dec    ebx
  407c00:	cmc    
  407c01:	push   ebp
  407c02:	outs   dx,DWORD PTR ds:[esi]
  407c03:	pop    ss
  407c04:	loope  0x407c40
  407c06:	mov    dl,0x15
  407c08:	dec    esp
  407c09:	rol    DWORD PTR gs:[ecx+0x75054118],1
  407c10:	xchg   esi,eax
  407c11:	imul   esp,esi,0x8b28e5ef
  407c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c18:	in     eax,0xb4
  407c1a:	cmp    al,0x77
  407c1c:	adc    eax,0xcb83f50
  407c21:	jmp    0x407c25
  407c23:	sub    eax,esi
  407c25:	push   ds
  407c26:	pop    es
  407c27:	ins    BYTE PTR es:[edi],dx
  407c28:	out    0x5b,al
  407c2a:	jmp    0x407bec
  407c2c:	jge    0x407c01
  407c2e:	ins    DWORD PTR es:[edi],dx
  407c2f:	add    bh,BYTE PTR [esp+edi*4+0x6a]
  407c33:	jl     0x407c94
  407c35:	cld    
  407c36:	out    dx,eax
  407c37:	or     al,BYTE PTR [ecx+0x3c88e308]
  407c3d:	jae    0x407cad
  407c3f:	dec    ebx
  407c40:	ret    0x6d33
  407c43:	xchg   DWORD PTR [esi-0x10bdc06b],esp
  407c49:	jae    0x407c5e
  407c4b:	je     0x407c08
  407c4d:	and    DWORD PTR [edi],esp
  407c4f:	ror    eax,cl
  407c51:	addr16 inc eax
  407c53:	xchg   DWORD PTR gs:[ecx],edi
  407c56:	sbb    al,0xf5
  407c58:	or     eax,0xdf07ed4e
  407c5d:	pop    esp
  407c5e:	dec    eax
  407c5f:	int3   
  407c60:	test   DWORD PTR ds:0x1e9accaa,0xef167ea6
  407c6a:	cmp    ebp,DWORD PTR [edi]
  407c6c:	inc    edi
  407c6d:	aaa    
  407c6e:	mov    ecx,DWORD PTR [ebx+0x81f54d9]
  407c74:	stos   BYTE PTR es:[edi],al
  407c75:	sbb    edx,DWORD PTR [esi-0x2f]
  407c78:	or     eax,0x182415db
  407c7d:	xchg   edi,eax
  407c7e:	sbb    DWORD PTR [edi+0x40],edx
  407c81:	in     al,0x8e
  407c83:	push   es
  407c84:	int    0x77
  407c86:	inc    ebp
  407c87:	dec    esi
  407c88:	shl    DWORD PTR cs:[ecx-0x74],1
  407c8c:	rcr    BYTE PTR [eax+eiz*2],0x7e
  407c90:	xchg   BYTE PTR [ebp+0x3037ad33],dl
  407c96:	inc    ecx
  407c97:	mov    al,0x57
  407c99:	aaa    
  407c9a:	cwde   
  407c9b:	mov    ds:0x5df984cc,al
  407ca0:	in     al,0xb2
  407ca2:	pop    ecx
  407ca3:	ficomp WORD PTR [ecx-0x5c991285]
  407ca9:	xor    ah,BYTE PTR [ebx-0x234ffa69]
  407caf:	cmp    bh,0xd2
  407cb2:	push   edi
  407cb3:	jl     0x407ce2
  407cb5:	imul   eax,edi,0x9dbc9a42
  407cbb:	pop    ds
  407cbc:	jnp    0x407c48
  407cbe:	mov    esi,0x92336099
  407cc3:	mov    ds:0x9df8d9da,eax
  407cc8:	inc    esp
  407cc9:	aas    
  407cca:	push   ds
  407ccb:	cdq    
  407ccc:	sub    al,0xb5
  407cce:	pusha  
  407ccf:	out    dx,eax
  407cd0:	inc    edi
  407cd1:	out    0xb,al
  407cd3:	adc    eax,0xbb9d5fbc
  407cd8:	mov    WORD PTR [edx],ds
  407cda:	pop    ds
  407cdb:	xor    BYTE PTR [edx],dh
  407cdd:	clc    
  407cde:	cmp    ecx,DWORD PTR [edx+0x4a4e2fb4]
  407ce4:	outs   dx,DWORD PTR ds:[esi]
  407ce5:	mov    edx,0x1a2b3d9e
  407cea:	xor    DWORD PTR [ecx-0xe],esi
  407ced:	sub    eax,0x350e8962
  407cf2:	push   ds
  407cf3:	jne    0x407cbc
  407cf5:	jmp    0x407d5b
  407cf7:	xchg   ecx,eax
  407cf8:	test   DWORD PTR ds:0x592890c,ebx
  407cfe:	fdivr  DWORD PTR [esi-0x46]
  407d01:	pop    eax
  407d02:	xor    al,0x23
  407d04:	daa    
  407d05:	(bad)  
  407d06:	jnp    0x407cad
  407d08:	sbb    al,0xe7
  407d0a:	or     BYTE PTR [eax+0x49],al
  407d0d:	cmp    DWORD PTR [edi+eax*1],esp
  407d10:	push   eax
  407d11:	pop    ebx
  407d12:	test   al,0x22
  407d14:	dec    ebp
  407d15:	inc    ebx
  407d16:	pop    ebx
  407d17:	adc    edx,DWORD PTR [edi-0x13]
  407d1a:	loope  0x407d87
  407d1c:	in     al,dx
  407d1d:	es lock jnp 0x407cfd
  407d21:	mov    al,ds:0xefedf7b2
  407d26:	add    al,0x21
  407d28:	mov    bh,0xb3
  407d2a:	ins    BYTE PTR es:[edi],dx
  407d2b:	int3   
  407d2c:	push   esp
  407d2d:	in     al,0xfe
  407d2f:	(bad)  
  407d30:	(bad)  
  407d31:	push   ebx
  407d32:	push   ecx
  407d33:	mov    DWORD PTR [ebp-0x4],edx
  407d36:	mov    DWORD PTR [ebp-0x30],0xba699573
  407d3d:	sbb    DWORD PTR ds:0x422982,edx
  407d43:	mov    eax,0x9c0a89d8
  407d48:	or     edx,0x5666
  407d4e:	mov    DWORD PTR [ebp-0x2c],eax
  407d51:	sub    DWORD PTR ds:0x422996,ebx
  407d57:	mov    DWORD PTR [ebp-0x20],0xba699577
  407d5e:	and    DWORD PTR ds:0x42294a,ecx
  407d64:	mov    DWORD PTR [ebp-0x1c],eax
  407d67:	mov    DWORD PTR [ebp-0x10],0xba69957b
  407d6e:	mov    DWORD PTR [ebp-0xc],eax
  407d71:	mov    DWORD PTR [ebp-0x60],0xba69957f
  407d78:	add    edx,0x428b
  407d7e:	mov    DWORD PTR [ebp-0x5c],eax
  407d81:	sbb    DWORD PTR ds:0x42289a,0x1b7d
  407d8b:	mov    eax,DWORD PTR [ebp-0x30]
  407d8e:	xor    DWORD PTR ds:0x42299a,0x1f10
  407d98:	jmp    0x408322
  407d9d:	mov    ch,0x6c
  407d9f:	or     eax,0x997014f1
  407da4:	sbb    BYTE PTR [edx-0x539133e9],bh
  407daa:	mov    al,ds:0x611c72a2
  407daf:	push   ss
  407db0:	push   ss
  407db1:	cmp    eax,0x5b161604
  407db6:	aaa    
  407db7:	lahf   
  407db8:	fdiv   QWORD PTR [esi+0x33faf61f]
  407dbe:	push   es
  407dbf:	mov    ds:0xaf2d3eb0,eax
  407dc4:	fs push cs
  407dc6:	push   ecx
  407dc7:	loope  0x407d87
  407dc9:	popf   
  407dca:	(bad)  
  407dcb:	fld    TBYTE PTR [ecx+eiz*1-0x2663c0d0]
  407dd2:	adc    dl,0x52
  407dd5:	and    eax,0x59d73ea1
  407dda:	retf   
  407ddb:	jmp    0x8dfb36ba
  407de0:	and    DWORD PTR [esi+0x37f28d4],ebp
  407de6:	test   dl,ch
  407de8:	xor    esi,0x85eb10dd
  407dee:	loop   0x407d99
  407df0:	xor    edx,DWORD PTR [edi]
  407df2:	xchg   esi,eax
  407df3:	nop
  407df4:	rol    BYTE PTR [ebx-0x11c0b7da],1
  407dfa:	div    BYTE PTR [ebx-0x110b2b51]
  407e00:	(bad)  
  407e01:	call   0x3de0:0x43546a6a
  407e08:	sti    
  407e09:	jb     0x407d8c
  407e0b:	sbb    BYTE PTR [esi-0x23],cl
  407e0e:	add    al,0xf4
  407e10:	out    dx,al
  407e11:	cmp    DWORD PTR [ecx+0x121915bd],0xfffffff1
  407e18:	into   
  407e19:	jl     0x407ddf
  407e1b:	cmp    eax,0xbe1393e5
  407e20:	dec    eax
  407e21:	and    ebx,DWORD PTR [edi+0x5934a206]
  407e27:	js     0x407dc3
  407e29:	jne    0x407dbf
  407e2b:	sub    bl,ch
  407e2d:	pusha  
  407e2e:	push   eax
  407e2f:	mov    ecx,0x4e10b5ed
  407e34:	jp     0x407dfa
  407e36:	stc    
  407e37:	or     ah,BYTE PTR [esi-0x125910c1]
  407e3d:	xchg   edi,eax
  407e3e:	scas   eax,DWORD PTR es:[edi]
  407e3f:	xchg   esp,eax
  407e40:	lock out dx,eax
  407e42:	popf   
  407e43:	int3   
  407e44:	pop    esp
  407e45:	or     ebp,DWORD PTR [edx+0x1538bf5e]
  407e4b:	(bad)  
  407e4c:	xchg   esi,eax
  407e4d:	xchg   BYTE PTR [esi-0x4c],al
  407e50:	xchg   esi,eax
  407e51:	jne    0x407e52
  407e53:	add    bl,al
  407e55:	or     al,0xa6
  407e57:	xor    DWORD PTR ds:0x2934ba80,ebx
  407e5d:	inc    ecx
  407e5e:	push   0x27
  407e60:	sar    BYTE PTR [ebp+0x4f6913de],cl
  407e66:	xchg   BYTE PTR [edi-0x56],ch
  407e69:	add    al,0x65
  407e6b:	mov    ecx,0xc93a2df0
  407e70:	cmp    DWORD PTR [ebx+0x75315628],ecx
  407e76:	and    eax,0x97cbd4e6
  407e7b:	lea    ecx,[ecx]
  407e7d:	mov    al,0xb4
  407e7f:	push   eax
  407e80:	outs   dx,DWORD PTR ds:[esi]
  407e81:	pop    edi
  407e82:	sbb    bh,BYTE PTR [ebx-0x1c5c924e]
  407e88:	xor    eax,0x85a3b41c
  407e8d:	loop   0x407ef0
  407e8f:	adc    eax,0xaafc4d
  407e94:	xor    DWORD PTR [ebx],ecx
  407e96:	sub    bh,BYTE PTR [esi-0x7a]
  407e99:	enter  0x94a7,0xfc
  407e9d:	sahf   
  407e9e:	inc    esi
  407e9f:	data16 cmp al,0xf0
  407ea2:	call   0x9edd5210
  407ea7:	dec    edx
  407ea8:	dec    esp
  407ea9:	(bad)  
  407eaa:	jns    0x407f05
  407eac:	dec    eax
  407ead:	add    DWORD PTR [eax-0x21f57cf6],esi
  407eb3:	fadd   st,st(7)
  407eb5:	hlt    
  407eb6:	cmp    eax,0xc0c12e87
  407ebb:	adc    ecx,ebp
  407ebd:	jnp    0x407e5c
  407ebf:	bound  edi,QWORD PTR [edx+0x3e51631a]
  407ec5:	fs jmp 0x407f0e
  407ec8:	in     eax,dx
  407ec9:	jg     0x407f42
  407ecb:	outs   dx,BYTE PTR ds:[esi]
  407ecc:	cli    
  407ecd:	iret   
  407ece:	mov    bl,0x53
  407ed0:	loopne 0x407e7f
  407ed2:	and    BYTE PTR [eax+0x73],0x93
  407ed6:	sbb    al,0x3c
  407ed8:	jle    0x407e81
  407eda:	lods   al,BYTE PTR ds:[esi]
  407edb:	ret    
  407edc:	add    al,BYTE PTR [edx-0x3c521105]
  407ee2:	mov    edi,0xb6f53e6d
  407ee7:	repz ficomp DWORD PTR ds:0x31e6fc51
  407eee:	enter  0x1343,0x30
  407ef2:	jg     0x407ec2
  407ef4:	xchg   ecx,eax
  407ef5:	pop    edx
  407ef6:	sbb    ebx,edi
  407ef8:	push   ss
  407ef9:	inc    ecx
  407efa:	icebp  
  407efb:	fmul   QWORD PTR [edi]
  407efd:	bound  ebx,QWORD PTR [edx+0x46767670]
  407f03:	xor    DWORD PTR [edx+ebp*2+0x29],edi
  407f07:	mov    edi,0xce70570f
  407f0c:	int    0xb
  407f0e:	xor    BYTE PTR [edx-0x349c0b45],bh
  407f14:	outs   dx,BYTE PTR ds:[esi]
  407f15:	xchg   BYTE PTR [edx-0x652d6a84],ch
  407f1b:	retf   
  407f1c:	outs   dx,BYTE PTR ds:[esi]
  407f1d:	add    dh,cl
  407f1f:	xchg   DWORD PTR [ebx+0x30cc8e11],edi
  407f25:	pop    eax
  407f26:	jl     0x407eac
  407f28:	push   ds
  407f29:	pop    es
  407f2a:	and    bl,BYTE PTR [edx-0x2]
  407f2d:	dec    esp
  407f2e:	adc    ah,BYTE PTR [ebp-0x52]
  407f31:	mul    DWORD PTR [edx-0x47802c6c]
  407f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f38:	ins    BYTE PTR es:[edi],dx
  407f39:	mov    DWORD PTR [ebx+esi*4],ebx
  407f3c:	cmc    
  407f3d:	pop    ecx
  407f3e:	mov    eax,ds:0xfe40f1dc
  407f43:	xchg   ebp,eax
  407f44:	mov    cl,0x30
  407f46:	push   eax
  407f47:	mov    cs,WORD PTR [eax]
  407f49:	ss mov bl,al
  407f4c:	mov    ch,0xf6
  407f4e:	scas   al,BYTE PTR es:[edi]
  407f4f:	icebp  
  407f50:	push   esp
  407f51:	cli    
  407f52:	pusha  
  407f53:	mov    esi,0xd7c5e4c0
  407f58:	scas   al,BYTE PTR es:[edi]
  407f59:	mov    cl,bh
  407f5b:	pop    ebp
  407f5c:	mov    ds:0x69cd6b53,al
  407f61:	adc    edi,DWORD PTR [ebp+0x4b]
  407f64:	js     0x407fe2
  407f66:	ds jbe 0x407f56
  407f69:	sbb    BYTE PTR [ebx+edx*1+0x5a],bh
  407f6d:	rcr    BYTE PTR [ebx],1
  407f6f:	push   cs
  407f70:	and    ebp,DWORD PTR [edi-0x44e154a2]
  407f76:	scas   al,BYTE PTR es:[edi]
  407f77:	(bad)  [eax]
  407f79:	clc    
  407f7a:	push   esi
  407f7b:	xor    al,BYTE PTR [eax+ebp*8+0x30]
  407f7f:	sbb    ch,bl
  407f81:	push   cs
  407f82:	ss xchg esp,eax
  407f84:	add    esi,DWORD PTR [ecx]
  407f86:	cmp    eax,0xf8450ce9
  407f8b:	dec    ebx
  407f8c:	mov    ecx,0xc262db7d
  407f91:	and    al,0xf9
  407f93:	cs mov edx,0x18cd9a32
  407f9a:	xchg   edx,eax
  407f9b:	or     BYTE PTR [ebx-0x29358bb3],bl
  407fa1:	xchg   edx,eax
  407fa2:	mov    ebx,0xee8a7c79
  407fa7:	into   
  407fa8:	fiadd  WORD PTR ds:0xfa950c38
  407fae:	loope  0x407fa2
  407fb0:	xchg   BYTE PTR [ecx+0x4b530f9d],al
  407fb6:	and    eax,0x7c4dafe5
  407fbb:	(bad)  
  407fbc:	in     al,dx
  407fbd:	pop    edi
  407fbe:	mov    ecx,0x38ad6981
  407fc3:	es in  eax,dx
  407fc5:	imul   edx,DWORD PTR [esi-0x867d4f9],0x12
  407fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fcd:	xor    BYTE PTR [edx],bl
  407fcf:	adc    cl,BYTE PTR [ebx]
  407fd1:	inc    ecx
  407fd2:	ror    BYTE PTR [ecx],1
  407fd4:	stos   BYTE PTR es:[edi],al
  407fd5:	dec    edx
  407fd6:	aaa    
  407fd7:	mov    ah,0xed
  407fd9:	xor    ecx,edx
  407fdb:	or     BYTE PTR [edi-0xa0d24d5],al
  407fe1:	stc    
  407fe2:	int3   
  407fe3:	cmp    BYTE PTR [edi],ch
  407fe5:	sbb    cl,0x3f
  407fe8:	(bad)  
  407fea:	push   cs
  407feb:	div    DWORD PTR [ebx]
  407fed:	cmovl  ebx,DWORD PTR [edx-0x3d369707]
  407ff4:	popf   
  407ff5:	jmp    0x272d6e01
  407ffa:	jne    0x407fc0
  407ffc:	and    DWORD PTR [ebp-0x20],ebp
  407fff:	out    dx,al
  408000:	jmp    0x5b0ffc62
  408005:	pop    ebx
  408006:	fsubr  st(5),st
  408008:	inc    ecx
  408009:	push   0x5b3c0308
  40800e:	dec    eax
  40800f:	sbb    ecx,DWORD PTR [ebx-0x5e]
  408012:	scas   al,BYTE PTR es:[edi]
  408013:	jb     0x407fe3
  408015:	sub    dl,dh
  408017:	popa   
  408018:	stc    
  408019:	push   0x20c5072d
  40801e:	inc    ebp
  40801f:	cmc    
  408020:	cmp    dl,BYTE PTR [eax-0x45086b53]
  408026:	aad    0xc3
  408028:	push   esp
  408029:	pop    edi
  40802a:	dec    edi
  40802b:	add    eax,0xf41613f1
  408030:	rcr    edi,cl
  408032:	pop    ds
  408033:	out    0xe8,eax
  408035:	mov    ds:0x1a4c0d11,eax
  40803a:	enter  0x7e1c,0xbc
  40803e:	xchg   BYTE PTR [edi+eiz*1-0x3dfd17a9],bh
  408045:	popa   
  408046:	loope  0x407ff8
  408048:	add    eax,0xf3384643
  40804d:	jno    0x40802a
  40804f:	lds    esi,FWORD PTR [esi+esi*2+0x76563fd3]
  408056:	dec    ebx
  408057:	sbb    cl,dh
  408059:	adc    al,0x9c
  40805b:	jle    0x408017
  40805d:	ins    DWORD PTR es:[edi],dx
  40805e:	inc    ecx
  40805f:	cmp    al,0x3e
  408061:	cld    
  408062:	fucomp st(6)
  408064:	call   0xb216dc9e
  408069:	add    cl,bh
  40806b:	js     0x408078
  40806d:	arpl   WORD PTR [ebx],di
  40806f:	jp     0x408089
  408071:	pop    edi
  408072:	inc    ebx
  408073:	adc    esi,DWORD PTR [edi+0x6c353efa]
  408079:	and    eax,0xd7bfbe05
  40807e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807f:	call   0x4bc8:0xd4258d91
  408086:	mov    dl,0x72
  408088:	jmp    0xa653:0xac39961c
  40808f:	adc    ebx,DWORD PTR [edx-0x4e88d4c5]
  408095:	sub    eax,0x433c35d
  40809a:	xchg   edi,eax
  40809b:	sub    eax,0x9bdcc444
  4080a0:	and    DWORD PTR [eax],edx
  4080a2:	fwait
  4080a3:	cs push cs
  4080a5:	mov    BYTE PTR [eax+0xc7de1f2],ah
  4080ab:	mov    eax,ds:0x548166ef
  4080b0:	pop    edx
  4080b1:	rol    DWORD PTR [edx],cl
  4080b3:	aas    
  4080b4:	(bad)  
  4080b5:	rcr    cl,0x5a
  4080b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b9:	pop    esi
  4080ba:	push   0x42927e5f
  4080bf:	xchg   DWORD PTR [eax],ebx
  4080c1:	push   ebx
  4080c3:	lods   al,BYTE PTR ds:[esi]
  4080c4:	jp     0x4080c4
  4080c6:	pop    ds
  4080c7:	sub    DWORD PTR [esi-0x5f],esp
  4080ca:	add    bh,dl
  4080cc:	fcmovnu st,st(3)
  4080ce:	imul   ecx,DWORD PTR [ecx],0xffffff97
  4080d1:	ja     0x408108
  4080d3:	scas   al,BYTE PTR es:[edi]
  4080d4:	and    eax,DWORD PTR [edx]
  4080d6:	push   es
  4080d7:	push   edx
  4080d8:	adc    BYTE PTR [edi],0x24
  4080db:	aas    
  4080dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080dd:	pop    ebp
  4080de:	jo     0x408098
  4080e0:	dec    edi
  4080e1:	shl    DWORD PTR [ebx+0x7742f37],1
  4080e7:	adc    esi,ebp
  4080e9:	sahf   
  4080ea:	loopne 0x408103
  4080ec:	dec    eax
  4080ed:	xor    BYTE PTR [ecx-0x66],cl
  4080f0:	sahf   
  4080f1:	arpl   WORD PTR [edx],dx
  4080f3:	out    dx,al
  4080f4:	cld    
  4080f5:	pop    edi
  4080f6:	popa   
  4080f7:	cmp    al,0xcc
  4080f9:	push   0x852f6630
  4080fe:	shl    BYTE PTR ds:0x1c83e93f,cl
  408104:	or     eax,DWORD PTR [esi]
  408106:	mov    esp,DWORD PTR [ebx-0x6b]
  408109:	repz jbe 0x408103
  40810c:	pop    es
  40810d:	out    dx,al
  40810e:	ss push bp
  408111:	push   es
  408112:	push   esp
  408113:	fcmovbe st,st(7)
  408115:	vmwrite ebp,eax
  408118:	mov    ds:0x54aedffc,eax
  40811d:	iret   
  40811e:	push   0x96981fad
  408123:	and    al,0x34
  408125:	dec    eax
  408126:	gs xchg edi,eax
  408128:	xor    eax,eax
  40812a:	loop   0x4080d6
  40812c:	mov    ah,0xed
  40812e:	fcmovbe st,st(5)
  408130:	ins    BYTE PTR es:[edi],dx
  408131:	jo     0x4080e5
  408133:	gs dec ecx
  408135:	xchg   ebp,eax
  408136:	lods   eax,DWORD PTR ds:[esi]
  408137:	fs ds cdq 
  40813a:	(bad)  
  40813b:	pop    ebx
  40813c:	out    dx,al
  40813d:	mov    ah,0x83
  40813f:	stos   BYTE PTR es:[edi],al
  408140:	aaa    
  408141:	sbb    BYTE PTR [eax-0x37d4ddf9],0xda
  408148:	and    ecx,ebp
  40814a:	mov    eax,ds:0x4a923a8d
  40814f:	or     al,0x46
  408151:	sbb    ebx,DWORD PTR [eax*8+0x2cba0c09]
  408158:	and    DWORD PTR [edx-0xfb0f12e],ebx
  40815e:	dec    edx
  40815f:	mov    cl,0x7c
  408161:	cmp    ah,dh
  408163:	call   0x7b4659c6
  408168:	jno    0x408159
  40816a:	push   eax
  40816c:	mov    ebx,0xf62a32f7
  408171:	sti    
  408172:	dec    ebx
  408173:	or     DWORD PTR [edi-0x1f],ecx
  408176:	inc    edx
  408177:	sub    al,0x9c
  408179:	in     al,dx
  40817a:	add    esi,esp
  40817c:	lods   al,BYTE PTR ds:[esi]
  40817d:	xchg   ecx,eax
  40817e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40817f:	lea    ecx,[esi-0x60941eb4]
  408185:	sbb    eax,0xfaa73e1c
  40818a:	inc    ecx
  40818b:	or     cl,ah
  40818d:	and    al,0xe3
  40818f:	ss addr16 mov ds:0x84,al
  408195:	mov    ds:0x6b7db05c,al
  40819a:	or     bh,BYTE PTR ds:0xf98393ec
  4081a0:	xor    ch,BYTE PTR [ebp+0xa]
  4081a3:	(bad)  
  4081a4:	push   0x57
  4081a6:	(bad)  
  4081a7:	mov    bh,0x10
  4081a9:	push   ds
  4081aa:	push   ss
  4081ab:	aad    0x4a
  4081ad:	fidiv  DWORD PTR [esi+eiz*1+0x1b]
  4081b1:	push   0x5abcdc63
  4081b6:	test   BYTE PTR [ebp-0x7a],dh
  4081b9:	xor    eax,0x7eaab1a9
  4081be:	jmp    0x4081ed
  4081c0:	sub    al,0xdd
  4081c2:	sub    di,WORD PTR [eax-0x7f]
  4081c6:	les    esi,FWORD PTR [ebx*1+0x509e5ff9]
  4081cd:	cs cli 
  4081cf:	cmp    edx,ebp
  4081d1:	sbb    DWORD PTR [esi+edx*8+0x59460a8a],esp
  4081d8:	dec    ebp
  4081d9:	stos   DWORD PTR es:[edi],eax
  4081da:	jmp    0xec70ad98
  4081df:	push   edi
  4081e0:	inc    ecx
  4081e1:	mov    ch,0x93
  4081e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e4:	ins    DWORD PTR es:[edi],dx
  4081e5:	loopne 0x408255
  4081e7:	sbb    BYTE PTR [edi+0x478c824],al
  4081ed:	clc    
  4081ee:	arpl   WORD PTR [eax-0x25b66ead],ax
  4081f4:	mov    ch,0xc4
  4081f6:	retf   0xc5
  4081f9:	test   esp,edx
  4081fb:	je     0x4081a9
  4081fd:	push   0xfffffff1
  4081ff:	sbb    DWORD PTR [ecx-0x36],edi
  408202:	dec    ebp
  408203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408204:	pop    ss
  408205:	ret    
  408206:	pop    ebx
  408207:	inc    edi
  408208:	mov    dl,0x91
  40820a:	jmp    0xd15a:0x36a40b03
  408211:	and    BYTE PTR [edi-0x41c5a2b0],0xe3
  408218:	sbb    al,0x63
  40821a:	aaa    
  40821b:	lahf   
  40821c:	jne    0x4081ac
  40821e:	pop    edi
  40821f:	jnp    0x4081e7
  408221:	sahf   
  408222:	int    0xb9
  408224:	cld    
  408225:	rcr    DWORD PTR [edi],cl
  408227:	push   edi
  408228:	cdq    
  408229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40822a:	sub    dl,bl
  40822c:	sub    BYTE PTR [edi+edx*4],bh
  40822f:	dec    esi
  408230:	push   edx
  408231:	fs sbb al,0xca
  408234:	inc    esp
  408235:	sbb    BYTE PTR [ecx],al
  408237:	(bad)  
  408238:	mov    eax,0xd46969b3
  40823d:	push   0x3c
  40823f:	mov    ch,0xb2
  408241:	mov    BYTE PTR [ebp-0x379a1f6c],al
  408247:	xor    bh,bh
  408249:	sub    esp,DWORD PTR es:[ecx]
  40824c:	or     al,0xaf
  40824e:	add    DWORD PTR [edx+ebx*8],edi
  408251:	(bad)
  408254:	int3   
  408255:	fwait
  408256:	cmp    esi,DWORD PTR [edx]
  408258:	(bad)  
  408259:	mov    ah,0x70
  40825b:	fidivr WORD PTR ds:0x5c3e75c2
  408261:	cdq    
  408262:	jne    0x4081f1
  408264:	xor    eax,DWORD PTR [ebp-0xa0ce499]
  40826a:	fbld   TBYTE PTR [edx+0x7c]
  40826d:	jle    0x4082a5
  40826f:	clc    
  408270:	pop    ss
  408271:	push   ebx
  408272:	in     eax,0xe
  408274:	push   cs
  408275:	out    0x2b,eax
  408277:	(bad)  
  408278:	xchg   ecx,eax
  408279:	inc    ebp
  40827a:	mov    ebx,0xb14721ff
  40827f:	fistp  QWORD PTR [edx]
  408281:	mov    ah,BYTE PTR [esi-0x18]
  408284:	jne    0x40822c
  408286:	pop    ebp
  408287:	mov    edi,0xdf8c7083
  40828c:	(bad)  
  40828e:	ret    
  40828f:	or     ch,al
  408291:	shl    DWORD PTR [edi],cl
  408293:	add    al,0xa6
  408295:	push   ecx
  408296:	bound  esi,QWORD PTR [edi]
  408298:	jl     0x408276
  40829a:	push   esi
  40829b:	repz add bh,bh
  40829e:	cmp    ah,BYTE PTR [esi+edx*4+0x13]
  4082a2:	xor    bl,ah
  4082a4:	pop    ecx
  4082a5:	stos   DWORD PTR es:[edi],eax
  4082a6:	(bad)  
  4082a7:	push   esi
  4082a8:	mov    DWORD PTR [ebx+eax*1-0x22],ebx
  4082ac:	xor    dl,ah
  4082ae:	or     eax,0x70be89ca
  4082b3:	int    0xd4
  4082b5:	aam    0xf5
  4082b7:	and    eax,0xfdcc3fa8
  4082bc:	(bad)  
  4082bd:	(bad)  [eax+0x53]
  4082c0:	into   
  4082c1:	pop    esp
  4082c2:	mov    eax,0x1b87981
  4082c7:	xchg   ebp,eax
  4082c8:	xchg   ebp,eax
  4082c9:	or     DWORD PTR [edx-0x11e16f69],eax
  4082cf:	cmp    esi,DWORD PTR [edi+0x625d8286]
  4082d5:	rcr    dl,cl
  4082d7:	push   ss
  4082d8:	jg     0x408300
  4082da:	neg    DWORD PTR [esp+eax*2+0x13]
  4082de:	out    0xc3,al
  4082e0:	je     0x4082a5
  4082e2:	imul   BYTE PTR [edx]
  4082e4:	je     0x40829b
  4082e6:	lock icebp 
  4082e8:	sbb    esp,0x18
  4082eb:	je     0x408275
  4082ed:	sbb    eax,DWORD PTR [ebx]
  4082ef:	cmc    
  4082f0:	and    eax,0x6eca1755
  4082f5:	cld    
  4082f6:	loopne 0x408311
  4082f8:	loope  0x4082a8
  4082fa:	mov    dl,0xc3
  4082fc:	add    eax,0xba817d7b
  408301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408302:	dec    edx
  408303:	repz jp 0x4082f9
  408306:	pop    esp
  408307:	bswap  ebx
  408309:	iret   
  40830a:	jmp    0xd07:0xc9b7a52f
  408311:	cmp    DWORD PTR [ecx+0x55],esp
  408314:	or     eax,ecx
  408316:	add    BYTE PTR [eax+0x49],dh
  408319:	imul   esp,DWORD PTR [edx],0x29
  40831c:	xchg   DWORD PTR [edi+ebx*1],esi
  40831f:	imul   eax,DWORD PTR [esi],0x62
  408322:	mov    ecx,DWORD PTR [ebp-0x2c]
  408325:	shrd   eax,ecx,0x2
  408329:	cmp    DWORD PTR ds:0x422946,0x0
  408330:	movzx  edx,WORD PTR ds:0x4228f2
  408337:	mov    DWORD PTR ds:0x42291a,0x73f0
  408341:	mov    DWORD PTR ds:0x4228a6,0x5bc0
  40834b:	mov    DWORD PTR ds:0x4228a6,edi
  408351:	jmp    0x4083c2
  408356:	mov    DWORD PTR ds:0x422966,0x16dc
  408360:	ja     0x40839a
  408366:	push   0x7c34
  40836b:	push   0x2548
  408370:	push   0x422922
  408375:	push   0x4229d2
  40837a:	call   DWORD PTR ds:0x42a04c
  408380:	adc    DWORD PTR ds:0x4229b2,ebx
  408386:	or     DWORD PTR ds:0x422956,0x2706
  408390:	mov    DWORD PTR ds:0x42293e,0x85d
  40839a:	and    edx,DWORD PTR ds:0x4228ee
  4083a0:	mov    DWORD PTR ds:0x422892,0x217b
  4083aa:	mov    edx,DWORD PTR ds:0x422ae2
  4083b0:	mov    edx,DWORD PTR [edx]
  4083b2:	sub    DWORD PTR ds:0x422956,edx
  4083b8:	add    DWORD PTR ds:0x4228b6,0x6a28
  4083c2:	shr    ecx,0x2
  4083c5:	or     DWORD PTR ds:0x4229c2,0x19bb
  4083cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4083d2:	mov    edx,DWORD PTR [ebp-0x2c]
  4083d5:	xor    eax,edi
  4083d7:	shl    ecx,0x1e
  4083da:	and    ecx,0x262b
  4083e0:	xor    edx,edx
  4083e2:	or     eax,edx
  4083e4:	lea    eax,[ebp+eax*1-0x4]
  4083e8:	sbb    edx,ecx
  4083ea:	mov    DWORD PTR [ebp-0x34],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x30]
  4083f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4083f3:	and    DWORD PTR ds:0x4228b2,ebx
  4083f9:	shrd   eax,ecx,0x2
  4083fd:	mov    edx,DWORD PTR ds:0x42292e
  408403:	sub    DWORD PTR ds:0x4228fa,edx
  408409:	shr    ecx,0x2
  40840c:	or     ecx,ecx
  40840e:	jmp    0x408998
  408413:	xchg   edi,eax
  408414:	xchg   dl,bl
  408416:	(bad)  
  408418:	pop    ecx
  408419:	test   BYTE PTR [eax+0x3e],bl
  40841c:	mov    esi,0x5e84a8d4
  408421:	jl     0x4083d1
  408423:	dec    ebx
  408424:	dec    ebp
  408425:	push   ss
  408426:	push   ss
  408427:	cmp    eax,0x1161604
  40842c:	xor    al,0x8c
  40842e:	aaa    
  40842f:	fistp  QWORD PTR [edi-0x57]
  408432:	and    al,0x37
  408434:	adc    ch,BYTE PTR [edi+eax*8-0x17]
  408438:	pop    eax
  408439:	mov    BYTE PTR [eax+0x44],ah
  40843c:	test   al,0x8e
  40843e:	arpl   WORD PTR [edx-0x2023d2d2],dx
  408444:	daa    
  408445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408446:	cmp    BYTE PTR [ebx-0x5ddc641c],ah
  40844c:	add    eax,edi
  40844e:	cmp    eax,DWORD PTR [edi+edx*8+0x70]
  408452:	push   eax
  408453:	mov    db6,esp
  408456:	pop    ecx
  408457:	lods   eax,DWORD PTR ds:[esi]
  408458:	or     al,0x9c
  40845a:	jno    0x4083df
  40845c:	cwde   
  40845d:	cmp    eax,0xb1352f13
  408462:	pop    ss
  408463:	adc    esp,DWORD PTR [eax]
  408465:	adc    al,0x82
  408467:	mov    ebx,0xd04beb4f
  40846c:	pop    ebx
  40846d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846e:	pop    edx
  40846f:	mov    ecx,0x94456673
  408474:	loop   0x4084b5
  408476:	daa    
  408477:	add    al,0x90
  408479:	sub    edx,ebp
  40847b:	jb     0x408484
  40847d:	xor    ebx,ecx
  40847f:	retf   0x76c8
  408482:	or     esp,esp
  408484:	(bad)  
  408485:	aaa    
  408486:	dec    esi
  408487:	mov    esi,0xcb65aa50
  40848c:	lods   eax,DWORD PTR gs:[esi]
  40848e:	mov    ebx,0xcbd4d536
  408493:	jge    0x408449
  408495:	push   0xffffffb0
  408497:	arpl   WORD PTR [edi+0x35],di
  40849a:	in     eax,dx
  40849b:	outs   dx,BYTE PTR ds:[esi]
  40849c:	dec    ecx
  40849d:	mov    bl,0x51
  40849f:	jnp    0x408443
  4084a1:	jp     0x408433
  4084a3:	mov    edx,0xf957eead
  4084a8:	enter  0x689e,0x6e
  4084ac:	or     eax,DWORD PTR [edi]
  4084ae:	in     eax,dx
  4084af:	xor    edi,0xffffffce
  4084b2:	dec    ebp
  4084b3:	xor    eax,0x103e2e2a
  4084b8:	add    dl,ch
  4084ba:	retf   
  4084bb:	fwait
  4084bc:	xchg   esi,eax
  4084bd:	clc    
  4084be:	inc    ebp
  4084bf:	fsubr  DWORD PTR [esi]
  4084c1:	mov    dh,0x82
  4084c3:	cdq    
  4084c4:	out    dx,eax
  4084c5:	mov    al,ds:0x4c0317fc
  4084ca:	into   
  4084cb:	rol    DWORD PTR [eax+edx*1+0x1a96cbc],cl
  4084d2:	mov    ch,0x70
  4084d4:	push   eax
  4084d5:	inc    esi
  4084d6:	jg     0x4084bb
  4084d8:	aam    0x20
  4084da:	jg     0x4084b6
  4084dc:	and    DWORD PTR [esi+0x2f],0xcf4e18b
  4084e3:	cmp    al,0x14
  4084e5:	fiadd  DWORD PTR [ebp-0x51117d3d]
  4084eb:	lods   eax,DWORD PTR ds:[esi]
  4084ec:	xlat   BYTE PTR ds:[ebx]
  4084ed:	mov    ds:0xdb37e1fa,eax
  4084f2:	pop    esp
  4084f3:	jmp    DWORD PTR [ebx-0x370f5bf]
  4084f9:	dec    ecx
  4084fa:	aaa    
  4084fb:	je     0x4084da
  4084fd:	aas    
  4084fe:	sub    dl,dh
  408500:	add    DWORD PTR [ecx+0x0],0x55
  408504:	sub    BYTE PTR [edx+ebp*2+0x3],dl
  408508:	nop
  408509:	int    0xe8
  40850b:	xor    eax,0xc7fbd5df
  408510:	mov    dl,0x30
  408512:	lods   eax,DWORD PTR ds:[esi]
  408513:	iret   
  408514:	int3   
  408515:	(bad)  
  408516:	sar    DWORD PTR [ebp-0x5f8276be],1
  40851c:	jb     0x40851b
  40851e:	mov    edi,0x605ed853
  408523:	mov    eax,ds:0x319c97b7
  408528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408529:	mov    WORD PTR [eax+0x7afac417],fs
  40852f:	fcomp  QWORD PTR [ebp+0x797b196]
  408535:	xchg   ebx,eax
  408536:	ret    
  408537:	xchg   esp,eax
  408538:	fldcw  WORD PTR [esp+ecx*8]
  40853b:	stos   BYTE PTR es:[edi],al
  40853c:	ror    DWORD PTR [edi],cl
  40853e:	or     ebp,ebp
  408540:	mov    esp,0xcdd49b38
  408545:	loopne 0x408581
  408547:	push   0x20
  408549:	add    eax,0x28ee23a0
  40854e:	or     edx,0xffffffe0
  408551:	stos   DWORD PTR es:[edi],eax
  408552:	xor    bh,ah
  408554:	mov    ecx,ebp
  408556:	sahf   
  408557:	fisttp WORD PTR [edx+eax*8]
  40855a:	xor    DWORD PTR [esi],ebx
  40855c:	xchg   ebp,eax
  40855d:	clc    
  40855e:	dec    ecx
  40855f:	xor    eax,0x236408a9
  408564:	sub    ch,cl
  408566:	cmp    eax,0xfd0dac7c
  40856b:	inc    edx
  40856c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40856d:	out    0xad,eax
  40856f:	and    bl,dh
  408571:	cld    
  408572:	es push esi
  408574:	jmp    0x15b8:0x6b452a4
  40857b:	outs   dx,BYTE PTR ds:[esi]
  40857c:	cli    
  40857d:	aam    0xe3
  40857f:	dec    edi
  408580:	pop    edi
  408581:	clc    
  408582:	icebp  
  408583:	or     BYTE PTR [eax+0xf],0x67
  408587:	xor    al,0xa0
  408589:	mov    ah,0x93
  40858b:	inc    ecx
  40858c:	fdiv   QWORD PTR [edx+edx*2]
  40858f:	fild   QWORD PTR [eax]
  408591:	adc    DWORD PTR [ecx-0x8],0x28d32556
  408598:	mov    esp,0xa645ddaa
  40859d:	xchg   ebx,eax
  40859e:	jp     0x4085ba
  4085a0:	sub    bh,BYTE PTR [eax]
  4085a2:	mov    esi,0x87c1068e
  4085a7:	fsub   QWORD PTR [eax-0x1dfa0d71]
  4085ad:	popf   
  4085ae:	int    0xeb
  4085b0:	out    dx,al
  4085b1:	inc    edx
  4085b2:	xchg   esp,eax
  4085b3:	sbb    cl,BYTE PTR [eax]
  4085b5:	leave  
  4085b6:	gs cmp esp,0x21
  4085ba:	fsub   DWORD PTR [ebx]
  4085bc:	sar    DWORD PTR [eax-0xb17b92f],0x2a
  4085c3:	inc    edx
  4085c4:	mov    dh,0xfe
  4085c6:	aas    
  4085c7:	sub    esi,DWORD PTR [eax+0x6c]
  4085ca:	jne    0x4085d0
  4085cc:	aas    
  4085cd:	xchg   edx,eax
  4085ce:	cmp    cl,BYTE PTR [edi-0x71]
  4085d1:	xor    BYTE PTR [ecx+0x4c83fcfa],ch
  4085d7:	dec    ebx
  4085d8:	ja     0x408574
  4085da:	lea    edx,[eax+0x61fd6b4f]
  4085e0:	ins    BYTE PTR es:[edi],dx
  4085e1:	dec    esp
  4085e2:	aas    
  4085e3:	jno    0x4085ed
  4085e5:	cmp    BYTE PTR [ebx],dh
  4085e7:	or     bh,dh
  4085e9:	add    eax,0x4bd6f3cd
  4085ee:	pushf  
  4085ef:	jbe    0x4085ea
  4085f1:	dec    esi
  4085f2:	or     DWORD PTR [esi-0x6ecac88b],ebx
  4085f8:	(bad)  
  4085f9:	(bad)  [eax-0x35]
  4085fc:	jnp    0x4085f9
  4085fe:	test   al,0x85
  408600:	push   es
  408601:	dec    ebx
  408602:	add    esi,DWORD PTR ds:0x3df50bff
  408608:	pusha  
  408609:	and    esi,ebp
  40860b:	mov    ss,WORD PTR ds:0x81fed1b8
  408611:	test   DWORD PTR [edi+ecx*1-0x36a27591],esp
  408618:	sbb    eax,0x500c8a09
  40861d:	in     eax,0x6d
  40861f:	add    al,0x95
  408621:	bts    ebp,edi
  408624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408625:	mov    eax,ds:0x1a6bffc8
  40862a:	mov    ebp,0x96203fde
  40862f:	ins    BYTE PTR es:[edi],dx
  408630:	cmc    
  408631:	rcl    DWORD PTR [ebp-0x6c],1
  408634:	div    ebx
  408636:	push   ebp
  408637:	daa    
  408638:	cmp    bl,dl
  40863a:	pop    ebp
  40863b:	jmp    0x1a9780ee
  408640:	dec    eax
  408641:	adc    dl,BYTE PTR [esi]
  408643:	push   esi
  408644:	xchg   esi,eax
  408645:	retf   
  408646:	loope  0x4085e0
  408648:	loopne 0x4086a5
  40864a:	arpl   WORD PTR [eax],sp
  40864c:	jp     0x40867f
  40864e:	push   esi
  40864f:	clc    
  408650:	pop    eax
  408651:	and    bh,BYTE PTR [edx-0x5d2d4fb2]
  408657:	and    DWORD PTR [ebx],edi
  408659:	rcl    BYTE PTR [eiz*2+0x50231ebf],cl
  408660:	sub    DWORD PTR ds:0xd17f3e07,edi
  408666:	loop   0x4086b0
  408668:	leavew 
  40866a:	inc    ebx
  40866b:	mov    ah,0xe
  40866d:	lea    ebp,ds:0x713630ff
  408673:	and    BYTE PTR [esi],dl
  408675:	cmp    al,0xc9
  408677:	hlt    
  408678:	jns    0x40861c
  40867a:	xchg   esi,eax
  40867b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867c:	fstp   DWORD PTR [edi+0x4b9cb39b]
  408682:	inc    esp
  408683:	scas   eax,DWORD PTR es:[edi]
  408684:	imul   eax,eax,0xffffff8d
  408687:	xor    BYTE PTR ds:0xdfb4edb0,ah
  40868d:	cmc    
  40868e:	dec    edx
  40868f:	jb     0x40868b
  408691:	test   eax,0x7005148e
  408696:	ss test esp,0x6b02b064
  40869d:	mov    ah,BYTE PTR [edx-0x38]
  4086a0:	out    dx,eax
  4086a1:	dec    esp
  4086a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a4:	push   edi
  4086a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a6:	pop    es
  4086a7:	popa   
  4086a8:	sbb    DWORD PTR [eax-0x19],esi
  4086ab:	mov    ah,cl
  4086ad:	outs   dx,DWORD PTR ds:[esi]
  4086ae:	fbstp  TBYTE PTR [edi]
  4086b0:	adc    al,0xcd
  4086b2:	mov    BYTE PTR [eax+0x51],bh
  4086b5:	xor    al,0x7f
  4086b7:	jmp    0x408639
  4086b9:	adc    eax,0xbd0ba5f2
  4086be:	xlat   BYTE PTR ds:[ebx]
  4086bf:	test   al,0xc0
  4086c1:	or     eax,0xef8fca5a
  4086c6:	or     edx,ebx
  4086c8:	(bad)  
  4086c9:	call   0xa884adcf
  4086ce:	enter  0x5d9d,0x77
  4086d2:	xor    BYTE PTR [edi+0x1f99503],0x78
  4086d9:	add    BYTE PTR [edi-0x28],0xbb
  4086dd:	pop    ebp
  4086de:	pop    edx
  4086df:	adc    ah,BYTE PTR [eax-0x3c]
  4086e2:	mov    dh,0x53
  4086e4:	lea    esp,[eax]
  4086e6:	je     0x40874d
  4086e8:	jp     0x408762
  4086ea:	fldcw  WORD PTR [eax+0x1d]
  4086ed:	aas    
  4086ee:	nop
  4086ef:	and    al,0x9d
  4086f1:	btc    DWORD PTR [esi+0x442574bd],esp
  4086f8:	dec    DWORD PTR [ecx+0x70]
  4086fb:	and    DWORD PTR [eax+ebx*1+0x73],ebp
  4086ff:	mov    edi,0xe9189942
  408704:	cwde   
  408705:	jecxz  0x40877e
  408707:	jae    0x408784
  408709:	imul   esi,esi,0xecb3c2e7
  40870f:	iret   
  408710:	daa    
  408711:	pop    edx
  408712:	btc    DWORD PTR [ebx+0x50f4eb27],esp
  408719:	imul   esi,DWORD PTR [edx+0x7571eba2],0x73
  408720:	cdq    
  408721:	dec    esp
  408723:	dec    edi
  408724:	pushf  
  408725:	add    al,0x88
  408727:	or     al,0xee
  408729:	loope  0x408723
  40872b:	lock ins DWORD PTR es:[edi],dx
  40872d:	dec    esp
  40872e:	push   ss
  40872f:	fldz   
  408731:	jmp    0x408713
  408733:	xchg   edi,eax
  408734:	adc    al,0xb2
  408736:	adc    DWORD PTR [ebp+0x26],esi
  408739:	test   al,0xd9
  40873b:	xchg   edi,eax
  40873c:	icebp  
  40873d:	pusha  
  40873e:	addr16 pop ecx
  408740:	pop    eax
  408741:	jae    0x4087b4
  408743:	pop    esi
  408744:	dec    eax
  408745:	shl    BYTE PTR [ebx+edi*4],1
  408748:	retf   
  408749:	mov    cl,0x5e
  40874b:	pop    edi
  40874c:	add    cl,ah
  40874e:	pop    edi
  40874f:	call   0xb819173a
  408754:	add    DWORD PTR [ecx-0x1f],ecx
  408757:	xor    ch,cl
  408759:	lds    edi,FWORD PTR [edx]
  40875b:	dec    ebx
  40875c:	aaa    
  40875d:	add    ebp,DWORD PTR [ecx]
  40875f:	(bad)  [ecx-0x36459f5e]
  408765:	push   ecx
  408766:	inc    ebp
  408767:	retf   0xaf4e
  40876a:	xor    eax,0x97d6ac59
  40876f:	cld    
  408770:	arpl   WORD PTR [ecx+0x7cbaaf62],dx
  408776:	sbb    edi,DWORD PTR es:[ebx+0x4e255b40]
  40877d:	sbb    DWORD PTR [ecx],ebp
  40877f:	jmp    ebx
  408781:	es push ss
  408783:	ja     0x4087e6
  408785:	fdivr  QWORD PTR [ecx+0x6bfdc767]
  40878b:	sbb    ebp,0xffffffc6
  40878e:	push   ebx
  40878f:	repnz cld 
  408791:	aaa    
  408792:	test   eax,0x175d2e0f
  408797:	adc    edi,DWORD PTR [esi-0x44]
  40879a:	cmp    ch,BYTE PTR [edx+0x3e695c03]
  4087a0:	pop    edx
  4087a1:	and    BYTE PTR [edx+0x48],ch
  4087a4:	fdivr  DWORD PTR [ecx+0x5d]
  4087a7:	repnz fwait
  4087a9:	mov    bl,0x8b
  4087ab:	data16 mov ah,0xc
  4087ae:	test   al,0x33
  4087b0:	jl     0x4087fd
  4087b2:	fwait
  4087b3:	cli    
  4087b4:	scas   al,BYTE PTR es:[edi]
  4087b5:	jne    0x4087bf
  4087b7:	mov    eax,ds:0xca4f2702
  4087bc:	lods   eax,DWORD PTR ds:[esi]
  4087bd:	out    0x20,al
  4087bf:	add    al,0x86
  4087c1:	or     esi,DWORD PTR [ecx]
  4087c3:	push   esi
  4087c4:	sbb    DWORD PTR [ebx-0x4e],edx
  4087c7:	icebp  
  4087c8:	mov    ecx,ecx
  4087ca:	rol    edi,1
  4087cc:	and    eax,0x85caaf54
  4087d1:	fs das 
  4087d3:	mov    ebp,0x60c303d5
  4087d8:	adc    al,0x46
  4087da:	je     0x408814
  4087dc:	add    ah,al
  4087de:	push   esi
  4087df:	cli    
  4087e0:	inc    esi
  4087e1:	outs   dx,BYTE PTR ds:[esi]
  4087e2:	lahf   
  4087e3:	push   ecx
  4087e4:	jge    0x408790
  4087e6:	jg     0x408837
  4087e8:	in     eax,0x26
  4087ea:	push   esp
  4087eb:	jmp    0x408844
  4087ed:	jge    0x408808
  4087ef:	ss icebp 
  4087f1:	pop    ecx
  4087f2:	addr16 xchg edi,eax
  4087f4:	mov    bl,0xf6
  4087f6:	push   cs
  4087f7:	inc    ecx
  4087f8:	sub    edi,DWORD PTR ds:0xbd5881bd
  4087fe:	rol    BYTE PTR [edi+0x1554b80],cl
  408804:	adc    ecx,0x1c642e74
  40880a:	push   ebx
  40880b:	fistp  DWORD PTR [edi+0x19362e6b]
  408811:	call   0xc7c48305
  408816:	scas   eax,DWORD PTR es:[edi]
  408817:	rol    DWORD PTR [esi+ebp*4-0x49],1
  40881b:	xchg   ebx,eax
  40881c:	fcom   QWORD PTR [edi+0x43]
  40881f:	pop    eax
  408820:	jb     0x4087c0
  408822:	mov    bl,0xac
  408824:	and    al,0x16
  408826:	xor    al,0x67
  408828:	out    0x0,al
  40882a:	mov    ebp,0x4f65219e
  40882f:	adc    edx,DWORD PTR [eax-0x7dd26c6a]
  408835:	fld    TBYTE PTR [edi+0x5f]
  408838:	outs   dx,BYTE PTR ds:[esi]
  408839:	lods   eax,DWORD PTR ds:[esi]
  40883a:	stos   DWORD PTR es:[edi],eax
  40883b:	mov    eax,ds:0xfba685ee
  408840:	inc    ecx
  408841:	in     eax,dx
  408842:	cmp    al,0xc3
  408844:	cdq    
  408845:	or     eax,0x67e2a59e
  40884a:	out    dx,eax
  40884b:	jne    0x40888d
  40884d:	in     al,0x6a
  40884f:	pop    ss
  408850:	fstp   TBYTE PTR [ecx]
  408852:	gs aas 
  408854:	xchg   ecx,eax
  408855:	or     al,0xed
  408857:	cli    
  408858:	test   DWORD PTR [esp+ebx*8+0x4f155da],esp
  40885f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408861:	vmovupd ymm1,YMMWORD PTR [ecx-0x796df63c]
  408869:	cmp    eax,DWORD PTR [esp+edi*4]
  40886c:	cmp    eax,0x5fb6d5ee
  408871:	push   edi
  408872:	or     dh,cl
  408874:	ret    0x2d2a
  408877:	pop    es
  408878:	lahf   
  408879:	jbe    0x4088c1
  40887b:	mov    dh,0xc2
  40887d:	mov    bl,0x24
  40887f:	in     eax,dx
  408880:	fdivr  DWORD PTR [ebp-0x5d94d59c]
  408886:	cmp    BYTE PTR [edx+0x4a],0xdf
  40888a:	fadd   DWORD PTR [esi-0x3d3c3c07]
  408890:	aad    0xac
  408892:	imul   ecx,DWORD PTR [eax-0x12],0x1a
  408896:	fstp   DWORD PTR [ecx-0xa6f1a2d]
  40889c:	cmp    sp,WORD PTR [edx+0x6b]
  4088a0:	cmc    
  4088a1:	xchg   BYTE PTR [eax-0x571f59a4],al
  4088a7:	aaa    
  4088a8:	mov    cl,0x9a
  4088aa:	mov    BYTE PTR [ebx+0x3],al
  4088ad:	add    esp,esi
  4088af:	jle    0x408887
  4088b1:	fisubr WORD PTR [edx+eiz*8]
  4088b4:	popf   
  4088b5:	popf   
  4088b6:	lods   al,BYTE PTR ds:[esi]
  4088b7:	mov    ebp,0x2fac0349
  4088bc:	sub    edx,DWORD PTR [ecx]
  4088be:	fldcw  WORD PTR [esi-0x5e]
  4088c1:	stc    
  4088c2:	mov    bh,0x92
  4088c4:	int    0x8d
  4088c6:	xchg   ebp,eax
  4088c7:	call   0x6f043f4e
  4088cc:	mov    edi,0x3a20324e
  4088d1:	or     DWORD PTR [edi+0x31],eax
  4088d4:	popa   
  4088d5:	adc    dh,BYTE PTR [eax]
  4088d7:	not    esp
  4088d9:	mov    ebx,0x1b87f0ef
  4088de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088df:	inc    eax
  4088e0:	aad    0x85
  4088e2:	add    BYTE PTR [edi+0x3ffbc98e],ch
  4088e8:	and    al,0xd
  4088ea:	xchg   ebx,eax
  4088eb:	mov    ah,0xe9
  4088ed:	push   ecx
  4088ee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088f0:	imul   edx,DWORD PTR [ecx+0x412ec89f],0x9d37226e
  4088fa:	fstp   QWORD PTR [edi]
  4088fc:	mov    fs,WORD PTR [eax-0x7ee621f7]
  408902:	pop    ebx
  408903:	cmp    BYTE PTR [eax-0x3c2edda0],al
  408909:	ds inc ebx
  40890b:	xor    BYTE PTR [eax],dl
  40890d:	fs push edx
  40890f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408910:	repz aam 0x5e
  408913:	rol    DWORD PTR [eax-0x23bc3153],1
  408919:	jg     0x408980
  40891b:	jae    0x4088dd
  40891d:	inc    ebp
  40891e:	push   ss
  40891f:	pop    es
  408920:	pop    es
  408921:	pop    esp
  408922:	adc    cl,BYTE PTR fs:[esi+ecx*1+0x15]
  408927:	dec    esi
  408928:	aam    0xf3
  40892a:	lea    eax,[edi+0x179becdb]
  408930:	mov    ds:0xaa3849a6,al
  408935:	xchg   ebx,eax
  408936:	test   DWORD PTR fs:0x9e8de479,esp
  40893d:	rol    eax,cl
  40893f:	jae    0x40895b
  408941:	lock call 0xe8e7:0x882cfdec
  408949:	mov    al,ds:0xac2cc13b
  40894e:	jb     0x4088dd
  408950:	mov    ah,0x12
  408952:	loope  0x408955
  408954:	push   0xa094f84d
  408959:	push   cs
  40895a:	lods   al,BYTE PTR ds:[esi]
  40895b:	or     BYTE PTR [eax+ebx*8],cl
  40895e:	or     BYTE PTR [edx+ebx*1],ch
  408961:	or     al,0x95
  408963:	cmp    eax,0xc7783cee
  408968:	arpl   WORD PTR [eax],bx
  40896a:	mov    ds:0xb748824f,al
  40896f:	fs hlt 
  408971:	lea    esi,[ebx]
  408973:	and    esp,0xcc190327
  408979:	retf   
  40897a:	js     0x408920
  40897c:	add    cl,BYTE PTR [edi]
  40897e:	inc    ecx
  40897f:	jl     0x408986
  408981:	loope  0x40898c
  408983:	rol    DWORD PTR [eax+0x609fbcaa],1
  408989:	test   eax,0xb02bec2e
  40898e:	ror    DWORD PTR [edx-0x4b04a8a2],1
  408994:	out    dx,eax
  408995:	les    edi,FWORD PTR [edx+0x6f]
  408998:	mov    ecx,DWORD PTR [ebp-0x30]
  40899b:	mov    edx,DWORD PTR [ebp-0x2c]
  40899e:	adc    DWORD PTR ds:0x42294a,0x1fff
  4089a8:	shl    ecx,0x1e
  4089ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4089ae:	xor    eax,edi
  4089b0:	xor    edx,edx
  4089b2:	sbb    DWORD PTR ds:0x4228c2,0x5606
  4089bc:	or     eax,edx
  4089be:	mov    cl,BYTE PTR [eax+ecx*1]
  4089c1:	mov    eax,DWORD PTR [ebp-0x34]
  4089c4:	or     edx,DWORD PTR ds:0x42290e
  4089ca:	xor    BYTE PTR [eax],cl
  4089cc:	mov    eax,DWORD PTR [ebp-0x20]
  4089cf:	sub    DWORD PTR ds:0x422932,0x6c12
  4089d9:	jmp    0x408f63
  4089de:	in     eax,dx
  4089df:	imul   ebx,eax,0x7d
  4089e2:	pop    eax
  4089e3:	je     0x408a4d
  4089e5:	pop    edx
  4089e6:	mov    ds:0x1d72b232,eax
  4089eb:	aam    0xed
  4089ed:	mov    ah,0x80
  4089ef:	inc    ebx
  4089f0:	push   ss
  4089f1:	push   ss
  4089f2:	cmp    eax,0x21161604
  4089f7:	inc    eax
  4089f8:	(bad)  
  4089f9:	in     eax,0xf8
  4089fb:	pop    es
  4089fc:	push   edx
  4089fd:	mov    bl,BYTE PTR ds:0xb204372d
  408a03:	fisubr DWORD PTR ds:0x6aca9273
  408a09:	repnz aas 
  408a0b:	dec    ebx
  408a0c:	call   0xad99f693
  408a11:	(bad)  
  408a12:	std    
  408a13:	setl   cl
  408a16:	cdq    
  408a17:	mov    al,0xe8
  408a19:	pushf  
  408a1a:	pop    esi
  408a1b:	sbb    DWORD PTR [eax+0x27],eax
  408a1e:	mov    eax,0x9df426e
  408a23:	mov    cl,BYTE PTR [eax]
  408a25:	ficomp WORD PTR [ecx]
  408a27:	mov    al,0xab
  408a29:	or     esp,DWORD PTR [edx]
  408a2b:	mov    ebp,0x2ee8e215
  408a30:	shl    BYTE PTR [ecx-0x55663a07],cl
  408a36:	test   BYTE PTR [edx+0x72063045],al
  408a3c:	shr    DWORD PTR ds:0xa5a23160,1
  408a42:	ins    BYTE PTR es:[edi],dx
  408a43:	ja     0x408a59
  408a45:	dec    ebx
  408a46:	pop    esp
  408a47:	js     0x408a0c
  408a49:	push   edx
  408a4a:	push   eax
  408a4b:	lds    esp,FWORD PTR [ecx]
  408a4d:	aad    0xac
  408a4f:	cmp    BYTE PTR [ebp+0x6cab9675],ch
  408a55:	outs   dx,DWORD PTR ds:[esi]
  408a56:	ins    DWORD PTR es:[edi],dx
  408a57:	push   edx
  408a58:	sub    ebp,DWORD PTR [edi]
  408a5a:	cwde   
  408a5b:	push   cs
  408a5c:	pushf  
  408a5d:	or     al,0x52
  408a5f:	xchg   edi,eax
  408a60:	cmp    dl,dl
  408a62:	inc    edx
  408a63:	cmp    dh,BYTE PTR [ebx+0xbc1c5e6]
  408a69:	rcr    DWORD PTR [edx],cl
  408a6b:	js     0x408a0b
  408a6d:	daa    
  408a6e:	inc    edi
  408a6f:	mov    bh,0x5b
  408a71:	pop    esp
  408a72:	shl    BYTE PTR [eax-0x40],0x99
  408a76:	sbb    DWORD PTR [edi],esp
  408a78:	xchg   esp,eax
  408a79:	push   esi
  408a7a:	jmp    0xf50a4529
  408a7f:	sub    esi,ebx
  408a81:	imul   edx
  408a83:	es jp  0xc273c3f
  408a8a:	retf   
  408a8b:	cmp    esi,DWORD PTR [ebx-0x1bc1edcd]
  408a91:	sti    
  408a92:	sbb    ebp,DWORD PTR [ebp-0x24]
  408a95:	pop    ebx
  408a96:	cmp    eax,0x23e933f9
  408a9b:	xchg   edx,eax
  408a9c:	clc    
  408a9d:	pop    edx
  408a9e:	jae    0x408a3a
  408aa0:	pusha  
  408aa1:	dec    ebp
  408aa2:	iret   
  408aa3:	imul   ebp,DWORD PTR [edx-0x50],0xffffffbf
  408aa7:	push   eax
  408aa8:	je     0x408a3f
  408aaa:	xchg   edi,eax
  408aab:	mov    al,ds:0xb867d228
  408ab0:	imul   DWORD PTR [ebp+0x7b]
  408ab3:	out    0x4d,al
  408ab5:	push   esi
  408ab6:	loop   0x408aa9
  408ab8:	push   ecx
  408ab9:	adc    BYTE PTR [ebx+ebx*1-0x24],ah
  408abd:	pop    esp
  408abe:	mov    DWORD PTR [edx-0x59],eax
  408ac1:	test   eax,0xc9307049
  408ac6:	adc    esp,DWORD PTR [ecx]
  408ac8:	bound  edi,QWORD PTR [esi-0x47d0fd07]
  408ace:	pop    ebx
  408acf:	dec    ebx
  408ad0:	xor    eax,0x6ec7f70e
  408ad5:	jle    0x408a98
  408ad7:	test   eax,0xed078803
  408adc:	sub    bh,BYTE PTR [edx+0xc26373e]
  408ae2:	repnz push ebp
  408ae4:	mov    WORD PTR [ebx+ecx*2+0x3af1c82b],ds
  408aeb:	repnz mov ds:0x2163cc98,eax
  408af1:	mov    dl,BYTE PTR [ecx-0x2]
  408af4:	jo     0x408b48
  408af6:	mov    ds:0xb7f02fce,al
  408afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408afc:	imul   esp,ebx,0xffffffda
  408aff:	xchg   esi,eax
  408b00:	out    dx,al
  408b01:	jo     0x408b03
  408b03:	xor    bh,BYTE PTR es:[ebx+0x43120390]
  408b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b0b:	xchg   esp,eax
  408b0c:	cmp    al,BYTE PTR [ebx-0x55]
  408b0f:	ret    
  408b10:	cwde   
  408b11:	push   0xa274db12
  408b16:	stos   DWORD PTR es:[edi],eax
  408b17:	pop    ds
  408b18:	adc    al,0x18
  408b1a:	in     al,dx
  408b1b:	fdivr  st(2),st
  408b1d:	stos   BYTE PTR es:[edi],al
  408b1e:	icebp  
  408b1f:	(bad)  
  408b20:	mov    esi,0xae7093eb
  408b25:	dec    esp
  408b26:	xchg   esi,eax
  408b27:	jge    0x408ab7
  408b29:	mov    ?,eax
  408b2b:	add    BYTE PTR [ebp+0x16],bl
  408b2e:	pop    ebp
  408b2f:	xchg   edi,eax
  408b30:	mov    eax,ds:0x757a1c7c
  408b35:	add    dh,BYTE PTR ds:0x1a4482eb
  408b3b:	sbb    ecx,ecx
  408b3d:	shr    dh,cl
  408b3f:	mov    WORD PTR [eax],ss
  408b41:	std    
  408b42:	inc    ecx
  408b43:	add    dh,BYTE PTR [ebx-0x7e]
  408b46:	adc    al,0x66
  408b48:	loopne 0x408b2f
  408b4a:	ja     0x408b45
  408b4c:	adc    al,0xde
  408b4e:	mov    gs:0xbb9d1f49,al
  408b54:	and    DWORD PTR [ebx-0x18df1b8e],edi
  408b5a:	cmp    eax,0x24e5b44e
  408b5f:	popf   
  408b60:	(bad)  
  408b61:	(bad)  
  408b62:	cmp    al,BYTE PTR [edi-0xe]
  408b65:	xchg   edx,eax
  408b66:	mov    ah,0x2f
  408b68:	sbb    BYTE PTR [edx+0x17],dh
  408b6b:	or     DWORD PTR [ebp-0xf994ad9],edi
  408b71:	xor    DWORD PTR [edi],edx
  408b73:	pop    esp
  408b74:	iret   
  408b75:	(bad)
  408b7a:	dec    esp
  408b7b:	mov    es,WORD PTR [edx+0x3d]
  408b7e:	mov    ah,0x53
  408b80:	scas   eax,DWORD PTR es:[edi]
  408b81:	mov    eax,0x358f30f1
  408b86:	(bad)  
  408b87:	jl     0x408bc4
  408b89:	bound  ecx,QWORD PTR [edi-0x77a6c47f]
  408b8f:	push   eax
  408b90:	retf   
  408b91:	or     bl,BYTE PTR [esi]
  408b93:	mov    bh,BYTE PTR [edi-0x4e41d8b0]
  408b99:	nop
  408b9a:	or     dl,BYTE PTR [esi+0x24]
  408b9d:	ja     0x408b78
  408b9f:	push   ss
  408ba0:	dec    ebp
  408ba1:	adc    eax,0xa4e690d2
  408ba6:	cmp    esp,esp
  408ba8:	add    edx,DWORD PTR [esi+0x540a7461]
  408bae:	cwde   
  408baf:	iret   
  408bb0:	ficomp DWORD PTR [edx-0x8]
  408bb3:	pop    esp
  408bb4:	lds    ebp,FWORD PTR [ebx+0x24]
  408bb7:	sbb    bh,BYTE PTR [esp+ebp*1+0x78]
  408bbb:	call   0xebab:0xb9c94c0f
  408bc2:	lahf   
  408bc3:	mov    ch,0x69
  408bc5:	mov    ss:0x2bf29b1c,al
  408bcb:	adc    BYTE PTR [ebx+0x2577fc82],cl
  408bd1:	mov    ch,0x96
  408bd3:	popf   
  408bd4:	xchg   edx,eax
  408bd5:	inc    edi
  408bd6:	dec    esp
  408bd7:	mov    al,0x85
  408bd9:	dec    eax
  408bda:	fisttp QWORD PTR [ebx+0x2e888e18]
  408be0:	int3   
  408be1:	pusha  
  408be2:	xlat   BYTE PTR ds:[bx]
  408be4:	cwde   
  408be5:	ret    
  408be6:	(bad)  
  408be7:	ficom  DWORD PTR [eax-0x3b]
  408bea:	push   ss
  408beb:	jne    0x408c47
  408bed:	(bad)  
  408bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bef:	xor    ebp,ebp
  408bf1:	les    esi,FWORD PTR [eax-0x12f433e3]
  408bf7:	shl    BYTE PTR [esi],cl
  408bf9:	push   cs
  408bfa:	mov    ebx,0xd4cc205b
  408bff:	sbb    bh,BYTE PTR [edi+0x71356700]
  408c05:	outs   dx,DWORD PTR ds:[esi]
  408c06:	sub    BYTE PTR [ebx-0x72],ah
  408c09:	mov    dh,0x56
  408c0c:	push   edx
  408c0d:	sub    ebp,edi
  408c0f:	lock push ebp
  408c11:	es ins DWORD PTR es:[edi],dx
  408c13:	or     eax,0xebcc50bc
  408c18:	dec    eax
  408c19:	daa    
  408c1a:	add    dh,BYTE PTR [ebp+0x59]
  408c1d:	retf   
  408c1e:	jmp    0xddc5ff3
  408c23:	sub    al,0xe9
  408c25:	xor    DWORD PTR [eax],edx
  408c27:	call   0x7c7a:0x87d71391
  408c2e:	scas   eax,DWORD PTR es:[edi]
  408c2f:	cli    
  408c30:	push   ecx
  408c31:	xchg   ecx,eax
  408c32:	mov    BYTE PTR [eax+eax*1-0x21c31f90],0xc9
  408c3a:	jle    0x408c76
  408c3c:	std    
  408c3d:	ins    DWORD PTR es:[edi],dx
  408c3e:	xchg   ebx,eax
  408c3f:	nop
  408c40:	shl    cl,0x5b
  408c43:	scas   eax,DWORD PTR es:[edi]
  408c44:	nop
  408c45:	loop   0x408bf1
  408c47:	int3   
  408c48:	adc    al,0xb
  408c4a:	outs   dx,BYTE PTR ds:[esi]
  408c4b:	rcl    BYTE PTR [esp+edx*8+0x2d79e4b8],1
  408c52:	push   ebp
  408c53:	mov    cl,0xe8
  408c55:	pushf  
  408c56:	mov    ebp,0x34436112
  408c5b:	cmp    DWORD PTR [esi-0x5d],ebp
  408c5e:	js     0x408bec
  408c60:	sub    DWORD PTR [eax],ecx
  408c62:	icebp  
  408c63:	inc    esi
  408c64:	out    dx,eax
  408c65:	push   ss
  408c66:	pusha  
  408c67:	into   
  408c68:	lea    esp,[ecx]
  408c6a:	dec    edx
  408c6b:	repnz inc eax
  408c6d:	stc    
  408c6e:	inc    edi
  408c6f:	mov    ah,0x12
  408c71:	push   ebx
  408c72:	adc    ecx,edx
  408c74:	jl     0x408c54
  408c76:	outs   dx,DWORD PTR ds:[esi]
  408c77:	mov    edi,0xfad09b44
  408c7c:	inc    ebp
  408c7d:	xchg   ecx,eax
  408c7e:	mov    esp,0x36760db0
  408c83:	dec    esp
  408c84:	popf   
  408c85:	adc    esp,DWORD PTR [ecx+edx*8-0x28]
  408c89:	sahf   
  408c8a:	adc    BYTE PTR [ebp+esi*4-0x61],0xd
  408c8f:	push   edx
  408c90:	xchg   ecx,eax
  408c91:	dec    esi
  408c92:	jle    0x408c1f
  408c94:	mov    bh,BYTE PTR ds:[edx]
  408c97:	and    bl,BYTE PTR [ebx]
  408c99:	push   ebx
  408c9a:	pop    ss
  408c9b:	out    0xec,eax
  408c9d:	movaps xmm7,XMMWORD PTR [eax]
  408ca0:	xchg   edx,eax
  408ca1:	xchg   DWORD PTR [esi-0xc],edx
  408ca4:	into   
  408ca5:	mov    bh,0x47
  408ca7:	pushf  
  408ca8:	dec    ebx
  408ca9:	out    0xea,eax
  408cab:	and    bh,bl
  408cad:	push   0x4e9f4c42
  408cb2:	push   0xd71f4fc9
  408cb7:	xor    BYTE PTR [ecx-0x2b998c90],dh
  408cbd:	fs jmp 0x408ccd
  408cc0:	push   ebx
  408cc1:	xchg   ecx,eax
  408cc2:	xchg   ebp,eax
  408cc3:	mov    ds:0xbb2774c9,al
  408cc8:	xchg   ecx,eax
  408cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cca:	out    dx,al
  408ccb:	cmp    esp,DWORD PTR [eax+0x17]
  408cce:	popf   
  408ccf:	fild   DWORD PTR [ebp+0x63]
  408cd2:	aas    
  408cd3:	mov    BYTE PTR [ebp-0x18],ah
  408cd6:	and    DWORD PTR [edx-0x6b],edi
  408cd9:	add    BYTE PTR [ebx],ah
  408cdb:	xor    ah,0xbd
  408cde:	outs   dx,DWORD PTR ds:[esi]
  408cdf:	repnz aas 
  408ce1:	in     eax,dx
  408ce2:	inc    dl
  408ce4:	rol    BYTE PTR [esi+0x44e2b41],1
  408cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ceb:	or     BYTE PTR [ecx+esi*2],0x0
  408cef:	cs leave 
  408cf1:	enter  0x3ebb,0x3c
  408cf5:	(bad)  
  408cf6:	(bad)  
  408cf7:	outs   dx,DWORD PTR ds:[esi]
  408cf8:	mov    ds,WORD PTR [esi+0xa]
  408cfb:	sub    cl,dh
  408cfd:	xor    edx,DWORD PTR [edi+0x2d]
  408d00:	lock mov edx,0x99fdce57
  408d06:	loope  0x408cfa
  408d08:	es add eax,0x413e1bda
  408d0e:	dec    ebp
  408d0f:	out    0x51,eax
  408d11:	inc    ebp
  408d12:	jmp    0xb54a6cc7
  408d17:	mov    ds:0x17dc7637,al
  408d1c:	mov    ah,0x59
  408d1e:	gs stos BYTE PTR es:[edi],al
  408d20:	push   ss
  408d21:	inc    esi
  408d22:	call   0x5689b2e5
  408d27:	scas   eax,DWORD PTR es:[edi]
  408d28:	outs   dx,DWORD PTR ds:[esi]
  408d29:	jnp    0x408d22
  408d2b:	sar    bh,cl
  408d2d:	stos   DWORD PTR es:[edi],eax
  408d2e:	not    BYTE PTR [eax+0x52]
  408d31:	jecxz  0x408d05
  408d33:	mul    DWORD PTR [ebx+0x7113487e]
  408d39:	lea    ebp,[esp+ebx*8-0x53d98a7d]
  408d40:	enter  0x366e,0x35
  408d44:	xchg   BYTE PTR [esi],dl
  408d46:	adc    dh,BYTE PTR [eax]
  408d48:	rcr    DWORD PTR [edx+0x70],1
  408d4b:	adc    DWORD PTR [ecx+0x7f011734],ebx
  408d51:	lahf   
  408d52:	push   esi
  408d53:	in     eax,dx
  408d54:	sbb    ecx,edi
  408d56:	push   esi
  408d57:	mov    BYTE PTR [esi+0x3d],cl
  408d5a:	sub    al,0x70
  408d5c:	push   ebp
  408d5d:	gs repz push edx
  408d60:	into   
  408d61:	xchg   edx,eax
  408d62:	scas   al,BYTE PTR es:[edi]
  408d63:	cdq    
  408d64:	mov    dh,0x57
  408d66:	cmp    al,0x59
  408d68:	call   0x1fdf:0x46ed736d
  408d6f:	gs enter 0xae8c,0xa9
  408d74:	dec    esi
  408d75:	add    DWORD PTR [esi],ebp
  408d77:	mov    DWORD PTR [ebx-0x4c],0x2474b975
  408d7e:	in     al,dx
  408d7f:	xchg   bl,ch
  408d81:	sbb    ebx,DWORD PTR [ebp+0x72]
  408d84:	iret   
  408d85:	adc    dh,BYTE PTR [eax-0x2e97c4ea]
  408d8b:	or     BYTE PTR ds:0x64835040,0xe1
  408d92:	pop    ecx
  408d93:	push   0xff8bf297
  408d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d99:	repz ret 0xafff
  408d9d:	sub    cl,dl
  408d9f:	aaa    
  408da0:	jns    0x408d9c
  408da2:	cmp    al,0x4f
  408da4:	ins    DWORD PTR es:[edi],dx
  408da5:	jns    0x408d87
  408da7:	xchg   ebp,eax
  408da8:	cmp    eax,0x4b49c3e0
  408dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dae:	mov    ch,0xd4
  408db0:	mov    ds:0x9faff2a8,eax
  408db5:	xchg   ecx,eax
  408db6:	test   DWORD PTR [edi],eax
  408db8:	cwde   
  408db9:	(bad)  
  408dbb:	cwde   
  408dbc:	jbe    0x408d4e
  408dbe:	imul   DWORD PTR [ebx-0x2e527c]
  408dc4:	xchg   ebp,eax
  408dc5:	inc    edx
  408dc6:	sahf   
  408dc7:	fnsave [esi+0x6e969fe6]
  408dcd:	sar    DWORD PTR [ecx-0x3f71120f],0x94
  408dd4:	data16 adc BYTE PTR [ebp+0x63122998],ch
  408ddb:	popf   
  408ddc:	jecxz  0x408e2d
  408dde:	sub    DWORD PTR [edi-0x336891a2],edx
  408de4:	scas   al,BYTE PTR es:[edi]
  408de5:	fwait
  408de6:	pop    ecx
  408de7:	es inc edx
  408de9:	lods   eax,DWORD PTR ds:[esi]
  408dea:	in     al,0xa4
  408dec:	fwait
  408ded:	cli    
  408dee:	dec    edi
  408def:	dec    esi
  408df0:	(bad)  
  408df1:	sbb    DWORD PTR [ecx+0x65],edx
  408df4:	sub    al,0xeb
  408df6:	adc    al,0x60
  408df8:	pop    es
  408df9:	cs das 
  408dfb:	or     al,0x4f
  408dfd:	pop    ebx
  408dfe:	leave  
  408dff:	dec    esi
  408e00:	pop    es
  408e01:	ins    BYTE PTR es:[edi],dx
  408e02:	pop    edi
  408e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e04:	push   ebx
  408e05:	mov    edi,0x14363f67
  408e0a:	or     eax,0x60b423e
  408e0f:	enter  0x1d6a,0x5f
  408e13:	rcr    al,cl
  408e15:	or     esi,ebx
  408e17:	xor    BYTE PTR [ebx+0x26dc1133],dl
  408e1d:	lea    ebp,[edx]
  408e1f:	sub    esi,ebx
  408e21:	ds enter 0x8ef2,0x7a
  408e26:	and    al,BYTE PTR [eax-0x20]
  408e29:	icebp  
  408e2a:	inc    ecx
  408e2b:	scas   al,BYTE PTR es:[edi]
  408e2c:	pop    eax
  408e2d:	adc    bl,BYTE PTR ds:0xb07543ac
  408e33:	sbb    DWORD PTR [ecx+0x60],edi
  408e36:	retf   
  408e37:	mov    dh,0x1e
  408e39:	push   edx
  408e3a:	mov    ebp,esp
  408e3c:	packuswb mm5,QWORD PTR [eax]
  408e3f:	pop    es
  408e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e41:	(bad)  
  408e42:	fadd   DWORD PTR [edi]
  408e44:	lahf   
  408e45:	mov    cl,0x1f
  408e47:	jge    0x408dec
  408e49:	mov    esi,0xc1e5d5f1
  408e4e:	pop    ds
  408e4f:	xor    al,0xb
  408e51:	xor    eax,0xe80566cd
  408e56:	out    0x28,al
  408e58:	and    BYTE PTR ds:0x1fd62908,ah
  408e5e:	jg     0x408e70
  408e60:	and    eax,0xc296eeda
  408e65:	fcomp  DWORD PTR [edi+0x45]
  408e68:	push   ebx
  408e69:	sbb    bh,BYTE PTR [esi-0x594d8f46]
  408e6f:	test   DWORD PTR ds:[esi*8+0x54e27042],0x4ee26a67
  408e7b:	aaa    
  408e7c:	sub    eax,0xa90eb7c6
  408e81:	test   DWORD PTR [esp+ecx*8+0x6304899],ebx
  408e88:	outs   dx,BYTE PTR ds:[esi]
  408e89:	retf   
  408e8a:	jg     0x408eac
  408e8c:	xor    esp,0xffffffa0
  408e8f:	xchg   ebx,eax
  408e90:	jle    0x408edb
  408e92:	mov    ebp,0x3ff08194
  408e97:	jo     0x408e5d
  408e99:	icebp  
  408e9a:	and    cl,BYTE PTR [ecx+0x16]
  408e9d:	mov    BYTE PTR [ebp-0x12],al
  408ea0:	pop    esi
  408ea1:	sub    al,0x1a
  408ea3:	lods   al,BYTE PTR ds:[esi]
  408ea4:	(bad)  
  408ea5:	or     eax,0x529ff335
  408eaa:	int    0x3e
  408eac:	arpl   cx,bp
  408eae:	inc    edx
  408eaf:	pop    esi
  408eb0:	clc    
  408eb1:	fs out 0x66,al
  408eb4:	adc    ebx,DWORD PTR [edi]
  408eb6:	cmp    esp,DWORD PTR [esi]
  408eb8:	call   0x2907:0x68bb
  408ebe:	mov    cl,0x4c
  408ec0:	ret    0xe6cf
  408ec3:	outs   dx,DWORD PTR ds:[esi]
  408ec4:	or     edx,DWORD PTR [ebx+eax*8+0xd]
  408ec8:	cmp    dh,BYTE PTR [edx-0x35]
  408ecb:	scas   eax,DWORD PTR es:[edi]
  408ecc:	mov    bh,0xe9
  408ece:	and    BYTE PTR cs:[ebx],bl
  408ed1:	jb     0x408f18
  408ed3:	mov    ch,0x7d
  408ed5:	out    0x58,al
  408ed7:	iret   
  408ed8:	push   0xffffffa0
  408eda:	aam    0x15
  408edc:	daa    
  408edd:	stos   BYTE PTR es:[edi],al
  408ede:	jmp    0x408f2a
  408ee0:	mov    eax,0xe81bddfc
  408ee5:	icebp  
  408ee6:	sbb    eax,0x24f16f6e
  408eeb:	and    al,0x5
  408eed:	push   cs
  408eee:	sbb    DWORD PTR [eax],ecx
  408ef0:	aad    0xad
  408ef2:	jmp    0x408f31
  408ef4:	jb     0x408ea7
  408ef6:	jmp    0x793b:0xbb85513
  408efd:	mov    cs,WORD PTR [ecx]
  408eff:	xor    al,0x31
  408f01:	adc    eax,0x47d46e1e
  408f06:	jo     0x408f55
  408f08:	jo     0x408eff
  408f0a:	sbb    ebp,ecx
  408f0c:	dec    edi
  408f0d:	jns    0x408efd
  408f0f:	ins    DWORD PTR es:[edi],dx
  408f10:	push   0x4fb6877c
  408f15:	js     0x408f3b
  408f17:	and    eax,0xda2624ee
  408f1c:	pop    esi
  408f1d:	shr    DWORD PTR [eax+0x6],cl
  408f20:	retf   
  408f21:	sahf   
  408f22:	clc    
  408f23:	sbb    DWORD PTR [edi],ebp
  408f25:	rol    BYTE PTR [esi-0x4b],1
  408f28:	lahf   
  408f29:	mov    eax,ds:0x48250e83
  408f2e:	enter  0xb733,0xea
  408f32:	inc    esi
  408f33:	aas    
  408f34:	xor    eax,0xefa5955b
  408f39:	jmp    0x408f3c
  408f3b:	or     DWORD PTR [edi+0xe44733e],ebx
  408f41:	push   esp
  408f42:	cmp    BYTE PTR [eax],al
  408f44:	es sar ecx,1
  408f47:	mov    bh,0xbe
  408f49:	push   ecx
  408f4a:	je     0x408ed3
  408f4c:	cmp    eax,0xbd5e3b35
  408f51:	fsubr  st,st(4)
  408f53:	stc    
  408f54:	inc    esp
  408f55:	cmp    DWORD PTR [eax-0xc],ebx
  408f58:	mov    ax,0xb276
  408f5c:	sbb    BYTE PTR [edx],dh
  408f5e:	outs   dx,BYTE PTR ds:[esi]
  408f5f:	mov    edi,ss
  408f61:	mov    cl,BYTE PTR gs:[ebx+0xd21e44d]
  408f68:	mov    esi,0xf004229
  408f6d:	lods   al,BYTE PTR ds:[esi]
  408f6e:	enter  0x3302,0x15
  408f72:	stos   BYTE PTR es:[edi],al
  408f73:	sub    DWORD PTR [edx+0x0],eax
  408f76:	shr    ecx,0x2
  408f79:	add    DWORD PTR ds:0x4228ea,0x4c61
  408f83:	mov    ecx,DWORD PTR [ebp-0x20]
  408f86:	xor    edx,DWORD PTR ds:0x4228d2
  408f8c:	mov    edx,DWORD PTR [ebp-0x1c]
  408f8f:	xor    DWORD PTR ds:0x42297e,0xf7e
  408f99:	xor    eax,edi
  408f9b:	shl    ecx,0x1e
  408f9e:	sbb    ecx,DWORD PTR ds:0x42294e
  408fa4:	xor    edx,edx
  408fa6:	cmp    DWORD PTR ds:0x422916,0x0
  408fad:	mov    ecx,0xa46
  408fb2:	mov    DWORD PTR ds:0x4229ce,0x4de7
  408fbc:	mov    DWORD PTR ds:0x42291e,ecx
  408fc2:	jmp    0x409028
  408fc7:	mov    DWORD PTR ds:0x42298a,0x3b5
  408fd1:	jne    0x40900c
  408fd7:	push   DWORD PTR [ebp-0x20]
  408fda:	push   DWORD PTR [ebp-0x1c]
  408fdd:	push   DWORD PTR [ebp-0x10]
  408fe0:	call   DWORD PTR ds:0x42a020
  408fe6:	xor    ecx,ecx
  408fe8:	add    ecx,DWORD PTR ds:0x4228c2
  408fee:	and    DWORD PTR ds:0x4229ae,ecx
  408ff4:	mov    ecx,DWORD PTR ds:0x4228f2
  408ffa:	sub    DWORD PTR ds:0x42292e,ecx
  409000:	add    ecx,DWORD PTR ds:0x4229a6
  409006:	xor    DWORD PTR ds:0x4229a2,ebx
  40900c:	mov    ecx,DWORD PTR ds:0x42298a
  409012:	or     DWORD PTR ds:0x4228f6,ecx
  409018:	adc    ecx,0x6cf8
  40901e:	adc    DWORD PTR ds:0x422962,0xa1e
  409028:	or     eax,edx
  40902a:	cmp    DWORD PTR ds:0x4228e6,0x0
  409031:	mov    DWORD PTR ds:0x42289e,0x3e29
  40903b:	mov    ecx,0x398
  409040:	jmp    0x409109
  409045:	mov    DWORD PTR ds:0x4228e6,0x60d3
  40904f:	mov    DWORD PTR ds:0x4228ce,0x6d23
  409059:	je     0x409087
  40905f:	push   DWORD PTR [ebp-0x14]
  409062:	push   DWORD PTR [ebp-0x1c]
  409065:	push   0x422835
  40906a:	push   DWORD PTR [ebp-0x28]
  40906d:	call   DWORD PTR ds:0x42a024
  409073:	sbb    DWORD PTR ds:0x42293a,0x5600
  40907d:	sub    DWORD PTR ds:0x422942,0x2629
  409087:	add    ecx,0x569a
  40908d:	sub    edx,edx
  40908f:	and    DWORD PTR ds:0x4228c6,edx
  409095:	cmp    DWORD PTR ds:0x4229ae,0x0
  40909c:	mov    DWORD PTR ds:0x42298a,0x14a0
  4090a6:	movzx  edx,BYTE PTR ds:0x42293e
  4090ad:	mov    ecx,0x236d
  4090b2:	jmp    0x409109
  4090b7:	mov    DWORD PTR ds:0x4229ae,ecx
  4090bd:	mov    DWORD PTR ds:0x42292e,0x5874
  4090c7:	jge    0x4090e5
  4090cd:	push   DWORD PTR [ebp-0x28]
  4090d0:	push   DWORD PTR [ebp-0xc]
  4090d3:	call   DWORD PTR ds:0x42a050
  4090d9:	xor    DWORD PTR ds:0x422916,edx
  4090df:	sbb    ecx,0x5177
  4090e5:	mov    ecx,DWORD PTR ds:0x4229e2
  4090eb:	mov    edx,DWORD PTR ds:0x422a62
  4090f1:	sub    ecx,edx
  4090f3:	sub    ecx,DWORD PTR [ecx+edx*1]
  4090f6:	movzx  edx,BYTE PTR ds:0x4229ca
  4090fd:	or     edx,DWORD PTR ds:0x4228d6
  409103:	mov    DWORD PTR ds:0x4229ca,edx
  409109:	lea    eax,[ebp+eax*1-0x4]
  40910d:	mov    DWORD PTR [ebp-0x34],eax
  409110:	mov    eax,DWORD PTR [ebp-0x20]
  409113:	mov    ecx,DWORD PTR [ebp-0x1c]
  409116:	shrd   eax,ecx,0x2
  40911a:	shr    ecx,0x2
  40911d:	mov    ecx,DWORD PTR [ebp-0x20]
  409120:	mov    edx,DWORD PTR [ebp-0x1c]
  409123:	jmp    0x4096ad
  409128:	add    DWORD PTR [edx+0x589575b5],ebp
  40912e:	inc    eax
  40912f:	and    dh,BYTE PTR [ebx-0x5591636b]
  409135:	iret   
  409136:	dec    esp
  409137:	je     0x4090e8
  409139:	aas    
  40913a:	push   ss
  40913b:	push   ss
  40913c:	cmp    eax,0x63161604
  409141:	dec    BYTE PTR [ebx-0x11]
  409144:	icebp  
  409145:	or     al,0xab
  409147:	xchg   ebp,eax
  409148:	push   0x76
  40914a:	or     DWORD PTR [ebx+0x423980b6],0x111b0697
  409154:	or     esi,edx
  409156:	shl    DWORD PTR [edx],cl
  409158:	repnz pop ds
  40915a:	cmp    dh,0x37
  40915d:	call   0xc628879f
  409162:	push   es
  409163:	ja     0x409124
  409165:	cs adc eax,0xce07fbef
  40916b:	jge    0x4091be
  40916d:	xchg   edx,eax
  40916e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40916f:	inc    ecx
  409170:	push   cs
  409171:	pusha  
  409172:	loope  0x4091df
  409174:	inc    BYTE PTR cs:[edx]
  409177:	arpl   WORD PTR [esp+eax*4],ax
  40917a:	aam    0x3a
  40917c:	and    DWORD PTR [edi+eiz*8+0x3c],esp
  409180:	cmp    DWORD PTR [esi+0x32],esp
  409183:	xchg   ecx,eax
  409184:	inc    esp
  409185:	in     al,0x2f
  409187:	lds    eax,FWORD PTR [edx-0x2b70c3dd]
  40918d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40918e:	jns    0x4091b6
  409190:	fimul  DWORD PTR [edi-0x4d]
  409193:	inc    ebx
  409194:	fnsave [edi]
  409196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409197:	mov    al,0x57
  409199:	call   0xf2da:0xf6904092
  4091a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a1:	mov    ?,WORD PTR [edi]
  4091a3:	(bad)  
  4091a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a6:	ficomp WORD PTR [esi]
  4091a8:	loopne 0x40918f
  4091aa:	lahf   
  4091ab:	mov    edi,0x14ee0ab9
  4091b0:	scas   al,BYTE PTR es:[edi]
  4091b1:	sbb    al,0x25
  4091b3:	cmc    
  4091b4:	mov    edx,0x20d72338
  4091b9:	adc    DWORD PTR [esi-0xb8dfffe],ecx
  4091bf:	fld    st(1)
  4091c1:	and    al,0xda
  4091c3:	mov    bl,0xb8
  4091c5:	mov    eax,ds:0xba96f7b
  4091ca:	(bad)  
  4091cb:	pop    ebx
  4091cc:	mov    ah,0x6
  4091ce:	xchg   esp,eax
  4091cf:	sbb    bl,0x32
  4091d2:	ds jl  0x40920e
  4091d5:	outs   dx,DWORD PTR ds:[esi]
  4091d6:	mov    ecx,0x6bf07de8
  4091db:	lods   al,BYTE PTR ds:[esi]
  4091dc:	(bad)  
  4091dd:	sar    DWORD PTR [esi],cl
  4091df:	js     0x409190
  4091e1:	mov    ds:0x4a0ba5c0,al
  4091e6:	xchg   ecx,eax
  4091e7:	inc    esi
  4091e8:	stos   BYTE PTR es:[edi],al
  4091e9:	fstp   DWORD PTR [esi-0x23]
  4091ec:	(bad)  
  4091ed:	iret   
  4091ee:	push   edi
  4091ef:	jno    0x40920c
  4091f1:	add    eax,0x4c06f82b
  4091f6:	push   ecx
  4091f7:	sbb    esp,DWORD PTR [eax]
  4091f9:	shl    DWORD PTR [ebx-0x3571e4a9],cl
  4091ff:	pop    ss
  409200:	inc    edx
  409201:	mov    esp,DWORD PTR [ecx]
  409203:	inc    ebx
  409204:	and    DWORD PTR [edi],0x29
  409207:	in     al,0x72
  409209:	pop    es
  40920a:	add    eax,ecx
  40920c:	pop    edx
  40920d:	push   edi
  40920e:	ret    
  40920f:	pop    esi
  409210:	dec    esp
  409211:	div    DWORD PTR [ecx]
  409213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409214:	xor    al,0xa3
  409216:	cwde   
  409217:	and    DWORD PTR [esi],edx
  409219:	or     edi,DWORD PTR [eax-0x13]
  40921c:	adc    DWORD PTR [edi+edi*2+0x71a55d83],ecx
  409223:	mov    ebx,0x5b135677
  409228:	push   ecx
  409229:	jp     0x4091ea
  40922b:	push   esp
  40922c:	push   ss
  40922d:	icebp  
  40922e:	bound  esi,QWORD PTR [esi+0x61]
  409231:	mov    al,ds:0x155f7159
  409236:	mov    eax,0x55ae3a15
  40923b:	inc    edx
  40923c:	push   eax
  40923d:	xchg   ecx,eax
  40923e:	scas   eax,DWORD PTR es:[edi]
  40923f:	cs sbb al,0x53
  409242:	and    BYTE PTR [eax+ebx*1-0x2d],0x5
  409247:	fdiv   QWORD PTR [eax+edi*8-0x64]
  40924b:	push   ebx
  40924c:	or     eax,0x25caf6dd
  409251:	mov    ebx,0x5186ee1c
  409256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409257:	xchg   DWORD PTR [ebp+0x3f],eax
  40925a:	(bad)
  40925d:	call   0xdee7d039
  409262:	add    al,0x39
  409264:	inc    esi
  409265:	push   ds
  409266:	mov    DWORD PTR [ecx+0x6e312f12],ebp
  40926c:	je     0x4092d6
  40926e:	sub    bh,BYTE PTR [ebp+ebx*4+0x537d97ea]
  409275:	aam    0x7
  409277:	repnz cmp bh,cl
  40927a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40927b:	into   
  40927c:	pmulhuw mm4,QWORD PTR [edi]
  40927f:	retf   0x22e1
  409282:	dec    eax
  409283:	dec    ebx
  409284:	push   0x9462c3f2
  409289:	test   al,0x1c
  40928b:	mov    ds:0x49acd2dc,al
  409290:	add    dl,bl
  409292:	mov    ds:0x7d8bd7c3,al
  409297:	shl    ebp,1
  409299:	imul   esp,DWORD PTR [edx-0x20f75fa5],0x354ffa1d
  4092a3:	mov    ah,0x75
  4092a5:	push   ss
  4092a6:	lea    ecx,[edi-0x2b]
  4092a9:	pop    ss
  4092aa:	ds gs hlt 
  4092ad:	test   BYTE PTR [ebx-0x4373eb0a],cl
  4092b3:	repnz shl DWORD PTR [ebp+0x7],cl
  4092b7:	mov    al,ds:0x53ac4521
  4092bc:	aam    0x7
  4092be:	xor    ebx,edx
  4092c0:	js     0x4092e1
  4092c2:	shl    BYTE PTR [eax+0x18],1
  4092c5:	fisubr DWORD PTR [eax]
  4092c7:	data16 aaa 
  4092c9:	shl    DWORD PTR [ebx],1
  4092cb:	jmp    0xf1c8:0x64beb376
  4092d2:	mov    bl,0x50
  4092d4:	dec    ebp
  4092d5:	push   edx
  4092d6:	push   0x54
  4092d8:	jg     0x40931f
  4092da:	push   edx
  4092db:	mov    ebx,DWORD PTR [ebp-0x3b999c53]
  4092e1:	sbb    al,0xc
  4092e3:	add    al,0xf6
  4092e5:	dec    ecx
  4092e6:	sbb    BYTE PTR [ecx+edi*8+0x65],bl
  4092ea:	push   edi
  4092eb:	repz retf 0x3b8c
  4092ef:	mov    ecx,0xcc114316
  4092f4:	test   DWORD PTR [ebp-0x360cec02],eax
  4092fa:	cli    
  4092fb:	cmp    al,al
  4092fd:	pushf  
  4092fe:	ds pop es
  409300:	enter  0x3a2f,0x46
  409304:	loope  0x40936b
  409306:	and    edx,DWORD PTR [esi-0x70]
  409309:	imul   DWORD PTR ds:[edx-0x80]
  40930d:	mov    edx,0x9dcfb92f
  409312:	dec    esp
  409313:	fidiv  WORD PTR ss:[eax]
  409316:	int    0x16
  409318:	shr    BYTE PTR [eax],cl
  40931a:	js     0x409349
  40931c:	push   ebx
  40931d:	aas    
  40931e:	xchg   DWORD PTR [eax-0x2b99a2ce],esp
  409324:	mov    eax,ds:0xc1886748
  409329:	loope  0x4092ab
  40932b:	stc    
  40932c:	push   edi
  40932d:	jmp    0x4092f6
  40932f:	inc    DWORD PTR [esi-0x6a]
  409332:	jne    0x4092c3
  409334:	js     0x409351
  409336:	shr    BYTE PTR [edx],0x29
  409339:	pop    edx
  40933a:	repz adc al,0xd2
  40933d:	xor    eax,0x6446ba92
  409342:	(bad)  
  409344:	cmp    eax,0x4537b7f9
  409349:	les    eax,FWORD PTR [edi+ecx*1-0x32ece30e]
  409350:	xchg   DWORD PTR [ebx],esi
  409352:	mov    eax,0xba14bdd3
  409357:	or     cl,BYTE PTR [esi+edi*1-0x76]
  40935b:	cmp    BYTE PTR ds:0xc1c3a4c0,cl
  409361:	inc    ebx
  409362:	arpl   bx,ax
  409364:	cmp    esp,edi
  409366:	(bad)  
  409367:	sbb    al,0xce
  409369:	test   BYTE PTR [esi-0x33c0a91a],0x3
  409370:	xlat   BYTE PTR ds:[ebx]
  409371:	adc    edi,DWORD PTR [edi-0x2c]
  409374:	and    al,0xef
  409376:	push   cs
  409377:	mov    ch,0x43
  409379:	jle    0x40938b
  40937b:	fcom   QWORD PTR [ecx]
  40937d:	addr16 jmp 0x409306
  409380:	shr    DWORD PTR [ecx-0x2e],cl
  409383:	call   0x82b5a40a
  409388:	pop    edx
  409389:	in     al,0xb8
  40938b:	mov    ebx,0xa317250a
  409390:	add    al,0x88
  409392:	push   es
  409393:	pop    edi
  409394:	cmp    edi,ecx
  409396:	xor    edi,DWORD PTR [eax-0x64]
  409399:	xor    DWORD PTR [esi+0x621eb5f0],ecx
  40939f:	jno    0x40938d
  4093a1:	call   0xa5ad3f87
  4093a6:	xchg   ebp,eax
  4093a7:	shl    DWORD PTR [esi-0x12],cl
  4093aa:	pop    ds
  4093ab:	test   BYTE PTR [eax+0x72ff711d],dl
  4093b1:	push   ss
  4093b2:	add    edi,0xd4b47a71
  4093b8:	cmp    BYTE PTR ss:[ecx],bl
  4093bb:	mov    edx,0xceb42a0a
  4093c0:	cmp    eax,0xc872291f
  4093c5:	push   ebp
  4093c6:	add    edx,DWORD PTR [edx]
  4093c8:	xchg   DWORD PTR [eax],ecx
  4093ca:	inc    ecx
  4093cb:	xchg   ecx,eax
  4093cc:	mov    WORD PTR [ecx],ds
  4093ce:	mul    DWORD PTR [edi-0xb]
  4093d1:	(bad)  
  4093d2:	repz cmp edx,DWORD PTR [ecx+0x18]
  4093d6:	push   0xdbb4fcf4
  4093db:	mov    eax,ds:0x2944848
  4093e0:	fisttp WORD PTR [eax]
  4093e2:	in     al,0x19
  4093e4:	push   0x6a
  4093e6:	or     dl,cl
  4093e8:	add    dh,cl
  4093ea:	(bad)  
  4093eb:	dec    ebp
  4093ec:	xchg   edx,eax
  4093ed:	sub    BYTE PTR [esi+eax*1-0x79c6a8b9],ah
  4093f4:	push   esp
  4093f5:	test   BYTE PTR [esi+edx*1+0x2a],ch
  4093f9:	leave  
  4093fa:	aas    
  4093fb:	jo     0x4093cc
  4093fd:	push   ecx
  4093fe:	pop    ecx
  4093ff:	push   ds
  409400:	mov    edi,0xc9cfbd72
  409405:	pop    esp
  409406:	jnp    0x4093e3
  409408:	mov    dh,0xa1
  40940a:	jo     0x4093f9
  40940c:	ja     0x409393
  40940e:	push   es
  40940f:	rol    BYTE PTR [edx],1
  409411:	adc    bh,BYTE PTR [ebx+0x4390ee9]
  409417:	jge    0x40945d
  409419:	pop    eax
  40941a:	push   ds
  40941b:	dec    esi
  40941c:	fnsave ds:0xd57b518b
  409422:	adc    eax,0xf899c065
  409427:	push   ecx
  409428:	rol    DWORD PTR [ecx+0x7c149b31],1
  40942e:	(bad)  
  40942f:	xor    dh,ah
  409431:	lods   al,BYTE PTR ds:[esi]
  409432:	clc    
  409433:	add    eax,0x72d3ddb
  409438:	mov    WORD PTR [edx],fs
  40943a:	pop    esp
  40943b:	jo     0x4094b9
  40943d:	or     eax,0x88583f82
  409442:	pop    esp
  409443:	jo     0x4094b9
  409445:	pop    ds
  409446:	xchg   ebp,eax
  409447:	icebp  
  409448:	cdq    
  409449:	mov    esi,0xc0cb90dd
  40944e:	mov    dl,0xe9
  409450:	adc    edx,esi
  409452:	sub    eax,0x92c60d3c
  409457:	dec    edx
  409458:	cld    
  409459:	retf   
  40945a:	add    DWORD PTR [edi+0x72],esi
  40945d:	add    al,0xf6
  40945f:	sub    edi,edx
  409461:	lds    edi,FWORD PTR [ebp-0x435c0617]
  409467:	retf   
  409468:	jnp    0x409494
  40946a:	cmp    al,0xf7
  40946c:	arpl   WORD PTR [ebx],ax
  40946e:	shr    BYTE PTR [ebx],cl
  409470:	mov    dl,0x91
  409472:	imul   edx,DWORD PTR [ebp-0x4c901117],0x51
  409479:	xchg   esi,eax
  40947a:	clc    
  40947b:	mov    ah,0xed
  40947d:	xchg   edx,eax
  40947e:	mov    edi,0xc8ec1a98
  409483:	pop    ebx
  409484:	stc    
  409485:	sub    al,0xf7
  409487:	adc    eax,0x635fba6f
  40948c:	dec    edi
  40948d:	mov    BYTE PTR [esi+0x60],ch
  409490:	and    ebp,esi
  409492:	sub    al,0xa8
  409494:	cld    
  409495:	mov    ebp,0xaf21a676
  40949a:	sbb    bl,bl
  40949c:	retf   0xded0
  40949f:	mov    bl,0xfb
  4094a1:	cmp    BYTE PTR [eax-0x73],bl
  4094a4:	lahf   
  4094a5:	aaa    
  4094a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094a7:	dec    esi
  4094a8:	mov    dl,0x8
  4094aa:	jmp    0xbd128cd3
  4094af:	push   cs
  4094b0:	mov    dh,0xe2
  4094b2:	dec    ebx
  4094b3:	fimul  WORD PTR [eax]
  4094b5:	mov    DWORD PTR [edi-0x1532aa65],0x18f2f67
  4094bf:	(bad)  
  4094c1:	xlat   BYTE PTR ds:[ebx]
  4094c2:	mov    bh,0x25
  4094c4:	iret   
  4094c5:	ficom  WORD PTR [ebp+0x7bc34509]
  4094cb:	xor    eax,0xf8ed55b1
  4094d0:	and    eax,0xd275481e
  4094d5:	stos   BYTE PTR es:[edi],al
  4094d6:	mov    al,ds:0x924b9b07
  4094db:	xchg   edi,eax
  4094dc:	clc    
  4094dd:	retf   
  4094de:	std    
  4094df:	xlat   BYTE PTR ds:[ebx]
  4094e0:	mov    bl,0xd9
  4094e2:	adc    al,BYTE PTR [ecx+0x1c]
  4094e5:	lods   al,BYTE PTR ds:[esi]
  4094e6:	adc    esp,edi
  4094e8:	dec    esp
  4094e9:	ret    
  4094ea:	xchg   ebp,eax
  4094eb:	sbb    ebx,edi
  4094ed:	push   ebp
  4094ee:	cld    
  4094ef:	push   0xfffffff9
  4094f1:	xchg   edi,eax
  4094f2:	icebp  
  4094f3:	lds    esi,FWORD PTR [esi]
  4094f5:	ret    
  4094f6:	and    cl,BYTE PTR [esi-0x44]
  4094f9:	cmp    al,0xb3
  4094fb:	adc    DWORD PTR [ecx],ecx
  4094fd:	pusha  
  4094fe:	int    0x51
  409500:	rcr    DWORD PTR [eax-0x53395d2a],0x51
  409507:	cmp    edx,DWORD PTR [esi+0x5b]
  40950a:	or     ah,cl
  40950c:	imul   eax,DWORD PTR ds:[esi],0x6a
  409510:	cmp    edx,ecx
  409512:	out    0x5e,al
  409514:	xor    eax,0xe66d0535
  409519:	sbb    cl,BYTE PTR [esi]
  40951b:	fld    DWORD PTR [ebx]
  40951d:	mov    esi,0xfb5c8c4e
  409522:	cvttps2pi mm5,QWORD PTR [ebp-0xc]
  409526:	sti    
  409527:	int3   
  409528:	jb     0x409548
  40952a:	inc    esi
  40952b:	and    bl,BYTE PTR ds:0xd9865be8
  409531:	xor    DWORD PTR [ecx-0x7e],0x58782623
  409538:	sub    bh,bl
  40953a:	jne    0x4095ab
  40953c:	sets   BYTE PTR [eax-0x2ff576a3]
  409543:	mov    dh,bh
  409545:	xor    BYTE PTR [edi+ebp*2-0x69d39907],0x64
  40954d:	loope  0x4095a6
  40954f:	pop    edi
  409550:	sub    al,0x94
  409552:	xchg   ebx,eax
  409553:	cmp    esp,DWORD PTR [eax+ebp*1-0x3ca7ab4a]
  40955a:	inc    edi
  40955b:	mov    edi,DWORD PTR [ecx+edi*8+0x60e29c9e]
  409562:	mov    ds:0x778afa38,eax
  409567:	cmp    esp,ebp
  409569:	xor    eax,0xeccf292a
  40956e:	aaa    
  40956f:	cmp    eax,0xfe0517d7
  409574:	stos   BYTE PTR es:[edi],al
  409575:	ja     0x409542
  409577:	mov    eax,ds:0x492ed781
  40957c:	stos   BYTE PTR es:[edi],al
  40957d:	mov    esp,0xe130dfc
  409582:	dec    ebx
  409583:	mov    al,ds:0xc663a501
  409588:	jecxz  0x4095c6
  40958a:	imul   edx,edi,0xe04b7a6
  409590:	inc    ecx
  409591:	int3   
  409592:	test   eax,0xe7403a26
  409597:	(bad)  
  409598:	push   eax
  409599:	adc    eax,0x41c7e95e
  40959e:	fld    DWORD PTR [esi]
  4095a0:	sub    ecx,edi
  4095a2:	mov    eax,ds:0x25814a03
  4095a7:	aad    0x5d
  4095a9:	nop
  4095aa:	jnp    0x4095e1
  4095ac:	push   0xffffffab
  4095ae:	jecxz  0x409573
  4095b0:	call   0x5289:0xf3f00ca4
  4095b7:	dec    BYTE PTR [ebx]
  4095b9:	add    eax,0x564bd53f
  4095be:	push   esi
  4095bf:	jl     0x40956f
  4095c1:	or     eax,0x3222bbdb
  4095c6:	ret    
  4095c7:	pop    ss
  4095c8:	push   edx
  4095c9:	cmp    al,0x2a
  4095cb:	cmp    eax,DWORD PTR [edx]
  4095cd:	stos   DWORD PTR es:[edi],eax
  4095ce:	inc    esi
  4095cf:	clc    
  4095d0:	ror    dl,cl
  4095d2:	bound  ecx,QWORD PTR [eax]
  4095d4:	sub    bh,BYTE PTR [eax+0x26]
  4095d7:	retf   
  4095d8:	(bad)  
  4095d9:	test   al,0x9e
  4095db:	jecxz  0x40957d
  4095dd:	push   esp
  4095de:	dec    ecx
  4095df:	pop    edi
  4095e0:	out    0xfd,eax
  4095e2:	push   ebp
  4095e3:	call   0xa9278c6e
  4095e8:	push   es
  4095e9:	iret   
  4095ea:	hlt    
  4095eb:	or     edi,edx
  4095ed:	ficom  WORD PTR [eax+0x6]
  4095f0:	mov    esi,0x1ba8ca0c
  4095f5:	popf   
  4095f6:	fwait
  4095f7:	in     al,dx
  4095f8:	repnz sub ebx,DWORD PTR [eax-0x44]
  4095fc:	clc    
  4095fd:	imul   ebx,DWORD PTR [ebx-0x7606cc80],0x53
  409604:	adc    al,0x74
  409606:	mov    ds:0x2604f137,al
  40960b:	jmp    0x32c873af
  409610:	test   eax,0x45b233ad
  409615:	push   es
  409616:	mov    ebp,0xe40c7404
  40961b:	push   ebx
  40961c:	rcl    DWORD PTR [ecx+0xc],0x93
  409620:	push   cs
  409621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409622:	add    eax,edx
  409624:	cmp    DWORD PTR [esi],eax
  409626:	aas    
  409627:	mov    ds:0x90a97ebd,al
  40962c:	mov    esp,ebx
  40962e:	mov    esi,esi
  409630:	imul   ebx,DWORD PTR [edx],0x46
  409633:	idiv   BYTE PTR [edi+0x36]
  409636:	pushf  
  409637:	lods   eax,DWORD PTR ds:[esi]
  409638:	push   edi
  409639:	into   
  40963a:	shl    BYTE PTR [ebp-0x1c5b9459],cl
  409640:	or     eax,0x9140616
  409645:	xor    BYTE PTR [ebp+0x76],bl
  409648:	mov    ch,0xfe
  40964a:	sbb    eax,0xd7e46ea1
  40964f:	(bad)  
  409650:	cmc    
  409651:	jns    0x4095e2
  409653:	pop    ds
  409654:	pop    eax
  409655:	pop    ss
  409656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409657:	and    BYTE PTR [esi-0x33186a32],ch
  40965d:	mov    bl,0xcf
  40965f:	xchg   ecx,eax
  409660:	xlat   BYTE PTR ds:[ebx]
  409661:	mov    edi,0x3c1c0b53
  409666:	or     DWORD PTR [ebx+eiz*4+0x14],eax
  40966a:	fdivr  DWORD PTR [esi+0x745b0734]
  409670:	add    BYTE PTR [ecx+0x4203a173],ah
  409676:	xchg   edx,eax
  409677:	mov    edx,0x44bf8bca
  40967c:	jmp    0xa1ae9754
  409681:	jmp    0x4096a2
  409683:	clc    
  409684:	pop    esi
  409685:	mov    edx,0x32c545e3
  40968a:	fcmovnbe st,st(3)
  40968c:	mov    cl,0x54
  40968e:	and    al,0x8f
  409690:	adc    eax,0xb6ae89ee
  409695:	loopne 0x40965d
  409697:	and    DWORD PTR [ecx+0x54],edi
  40969a:	das    
  40969b:	fistp  DWORD PTR [ebp+0x39e0abb7]
  4096a1:	mov    ecx,0x33b94547
  4096a6:	outs   dx,BYTE PTR ds:[esi]
  4096a7:	mov    esp,0x369674e7
  4096ac:	push   ds
  4096ad:	shl    ecx,0x1e
  4096b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4096b3:	jmp    0x409c3d
  4096b8:	out    0x84,eax
  4096ba:	inc    ebx
  4096bb:	mov    bl,BYTE PTR [eax]
  4096bd:	push   eax
  4096be:	sahf   
  4096bf:	pop    eax
  4096c0:	sub    DWORD PTR [ecx+0x7985b254],edx
  4096c6:	mov    esp,0x162dd4ae
  4096cb:	push   ss
  4096cc:	cmp    eax,0x1161604
  4096d1:	rcl    BYTE PTR [ecx-0x2dd25cd3],1
  4096d7:	adc    ch,ch
  4096d9:	in     al,dx
  4096da:	test   al,0x27
  4096dc:	mov    ecx,0xe8151a2a
  4096e1:	jae    0x4096f2
  4096e3:	mov    ds:0x107b5922,eax
  4096e8:	jmp    0x409672
  4096ea:	imul   eax,edx,0xad7f3867
  4096f0:	cmp    DWORD PTR [eax-0xd],ebp
  4096f3:	test   al,0xeb
  4096f5:	jp     0x4096b6
  4096f7:	dec    ebx
  4096f8:	shl    BYTE PTR [esi],0x34
  4096fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096fc:	pop    DWORD PTR [ecx]
  4096fe:	or     DWORD PTR [edx-0x1df20e99],ebp
  409704:	sahf   
  409705:	outs   dx,DWORD PTR ds:[esi]
  409706:	fnsave ds:0x5d6082b5
  40970c:	pop    esi
  40970d:	mov    eax,0x7e738c4e
  409712:	fisub  WORD PTR [ebx+esi*1]
  409715:	cdq    
  409716:	inc    edx
  409717:	push   ebp
  409718:	cmp    DWORD PTR [edx+esi*2-0x2db55248],edx
  40971f:	push   DWORD PTR [ebp+edi*1-0x2c43a9b2]
  409726:	xor    BYTE PTR [edi],dl
  409728:	pop    ss
  409729:	inc    esp
  40972a:	cli    
  40972b:	retf   
  40972c:	push   ecx
  40972d:	mov    edx,0x3e0b7a6e
  409732:	js     0x409703
  409734:	dec    esp
  409735:	xchg   edx,eax
  409736:	xchg   ebp,eax
  409737:	stc    
  409738:	jg     0x409755
  40973a:	stc    
  40973b:	xchg   DWORD PTR [edi+0x30402256],ebx
  409741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409742:	out    0x55,al
  409744:	stos   BYTE PTR es:[edi],al
  409745:	xor    esi,edi
  409747:	fsubr  QWORD PTR [edx+edx*2-0x6a]
  40974b:	(bad)  
  40974c:	shl    DWORD PTR [edi-0x48],cl
  40974f:	pop    edi
  409750:	rol    BYTE PTR [edx+eax*1-0x3a],cl
  409754:	daa    
  409755:	clc    
  409756:	je     0x409779
  409758:	xchg   ebp,eax
  409759:	push   es
  40975a:	loope  0x4096e6
  40975c:	call   0x5146:0xcf78353a
  409763:	or     bh,BYTE PTR [eax+0x2a]
  409766:	inc    ebx
  409767:	lods   eax,DWORD PTR ds:[esi]
  409768:	ins    DWORD PTR es:[edi],dx
  409769:	and    BYTE PTR [esp+eiz*2+0x1b],ch
  40976d:	test   DWORD PTR [ecx],eax
  40976f:	or     dh,BYTE PTR [esi-0x48dc0f68]
  409775:	loope  0x40970c
  409777:	out    dx,al
  409778:	(bad)  
  409779:	sbb    DWORD PTR [ebx],edx
  40977b:	into   
  40977c:	xchg   ebp,eax
  40977d:	lods   al,BYTE PTR ds:[esi]
  40977e:	or     eax,0x207732f9
  409783:	(bad)  
  409784:	cwde   
  409785:	rcl    DWORD PTR [eax-0x2bd5c790],cl
  40978b:	outs   dx,BYTE PTR ds:[esi]
  40978c:	xor    BYTE PTR [eax],cl
  40978e:	call   DWORD PTR [ecx-0x4e]
  409791:	or     eax,0x57ee90e0
  409796:	cli    
  409797:	fwait
  409798:	cmp    ah,BYTE PTR ds:0xc3a710f4
  40979e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40979f:	call   0x47a1f6d1
  4097a4:	jle    0x4097b1
  4097a6:	push   ebp
  4097a7:	cmp    eax,0xed857054
  4097ac:	fstp   QWORD PTR [edx]
  4097ae:	sub    dl,dh
  4097b0:	std    
  4097b1:	sbb    ah,BYTE PTR [edx]
  4097b3:	mov    ebx,0x8bf6e1a2
  4097b8:	xor    ebx,ebp
  4097ba:	cwde   
  4097bb:	in     eax,0x64
  4097bd:	push   0x55
  4097bf:	(bad)  
  4097c0:	pop    edx
  4097c1:	and    BYTE PTR [ebp+0x20e8bd77],0xb
  4097c8:	shr    BYTE PTR [esi+0x105e65be],cl
  4097ce:	inc    ecx
  4097cf:	mov    ds:0xb386fc5e,eax
  4097d4:	add    dh,dh
  4097d6:	in     al,dx
  4097d7:	mov    bh,0x4c
  4097d9:	xchg   ebx,eax
  4097da:	add    BYTE PTR [edi],dl
  4097dc:	pop    esp
  4097dd:	sbb    al,0xd1
  4097df:	jle    0x409802
  4097e1:	pop    edi
  4097e2:	mul    DWORD PTR [ebp+ecx*8-0xd55196a]
  4097e9:	add    DWORD PTR [esi],esi
  4097eb:	rcr    DWORD PTR [esi+0x59070ca4],cl
  4097f1:	mov    al,ds:0xaa1871bd
  4097f6:	sbb    edx,DWORD PTR [edi+0x2b]
  4097f9:	lods   eax,DWORD PTR ds:[esi]
  4097fa:	xchg   edi,eax
  4097fb:	adc    DWORD PTR [edx],eax
  4097fd:	iret   
  4097fe:	je     0x409790
  409800:	or     BYTE PTR [edi-0x56df5996],dh
  409806:	mov    eax,0x3cda9f36
  40980b:	xor    eax,DWORD PTR [ecx]
  40980d:	repnz lods al,BYTE PTR ds:[esi]
  40980f:	fstp   QWORD PTR [eax-0x79]
  409812:	adc    eax,0x173d1e74
  409817:	push   ss
  409818:	das    
  409819:	ror    DWORD PTR [edi],1
  40981b:	inc    eax
  40981c:	mov    ch,0x30
  40981e:	jae    0x40987a
  409820:	sub    BYTE PTR [edi],ch
  409822:	adc    al,0x11
  409824:	cmp    DWORD PTR [ecx],eax
  409826:	outs   dx,BYTE PTR ds:[esi]
  409827:	sub    al,0x33
  409829:	xor    cl,0xe
  40982c:	xchg   DWORD PTR [esi],ecx
  40982e:	mov    ebp,0xf3b1b3ea
  409833:	mov    ch,0xee
  409835:	repz repz cmp BYTE PTR [eax-0x70012133],cl
  40983d:	sbb    edx,edx
  40983f:	and    BYTE PTR [eax-0x28],bh
  409842:	inc    ebx
  409843:	mov    edx,0x6ec62f64
  409848:	ror    DWORD PTR [eax],0x31
  40984b:	dec    edx
  40984c:	mov    ch,0xb1
  40984e:	inc    esp
  40984f:	add    eax,0xc18dd03
  409854:	mov    ds:0x5fc09996,eax
  409859:	outs   dx,BYTE PTR ds:[esi]
  40985a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40985b:	outs   dx,BYTE PTR ds:[esi]
  40985c:	arpl   WORD PTR [edi-0x359181a9],cx
  409862:	dec    ah
  409864:	sbb    ch,BYTE PTR [eax-0xcdc4a7a]
  40986a:	in     al,0x64
  40986c:	cs push ss
  40986e:	imul   edx,DWORD PTR es:[edx+0x23],0x22
  409873:	(bad)  
  409874:	mov    bl,bl
  409876:	pusha  
  409877:	mov    al,0x90
  409879:	push   ss
  40987a:	std    
  40987b:	fisub  WORD PTR [eax-0x3a9757f3]
  409881:	(bad)
  409884:	mov    dl,0x70
  409886:	cdq    
  409887:	cmp    eax,0xda2eb0d7
  40988c:	mov    cl,BYTE PTR [ebx-0x39]
  40988f:	sbb    esp,ecx
  409891:	jbe    0x30c75c8c
  409897:	iret   
  409898:	xchg   edx,eax
  409899:	adc    edx,DWORD PTR ds:0xa7e6a22a
  40989f:	xchg   esi,eax
  4098a0:	inc    eax
  4098a1:	add    BYTE PTR [ecx+esi*4],al
  4098a4:	ds pop ds
  4098a6:	sbb    eax,0x3612647d
  4098ab:	push   cs
  4098ac:	jmp    0xd2434fbc
  4098b1:	ss js  0x4098a4
  4098b4:	lahf   
  4098b5:	add    eax,0x914a107e
  4098ba:	sub    dh,BYTE PTR ds:[eax-0x3a]
  4098be:	je     0x4098f0
  4098c0:	jno    0x409855
  4098c2:	adc    esp,eax
  4098c4:	push   esp
  4098c5:	jne    0x40985d
  4098c7:	dec    edi
  4098c8:	or     eax,0xeb23f1f2
  4098cd:	adc    edx,esi
  4098cf:	pop    es
  4098d0:	push   esi
  4098d1:	xchg   edi,eax
  4098d2:	xor    eax,0xae1c897a
  4098d7:	add    cl,dl
  4098d9:	aad    0x2c
  4098db:	push   esp
  4098dc:	test   BYTE PTR [ecx],0xd5
  4098df:	inc    esp
  4098e0:	fistp  QWORD PTR [edi+0x3]
  4098e3:	retf   
  4098e4:	mov    cs:0xc04f7e19,al
  4098ea:	mov    edi,0x1aa4db16
  4098ef:	and    al,0x72
  4098f1:	ficom  WORD PTR [edi+0x2dd76e86]
  4098f7:	in     eax,0x5f
  4098f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fa:	ret    0x4785
  4098fd:	imul   ebp,DWORD PTR [eax-0x3b5a8552],0xffffffea
  409904:	inc    esi
  409905:	cdq    
  409906:	push   0xb2da7a6e
  40990b:	cli    
  40990c:	lea    edx,[ebp-0x78ef852c]
  409912:	sbb    bh,BYTE PTR [eax]
  409914:	jne    0x40997d
  409916:	jle    0x40995b
  409918:	adc    eax,0x5339874b
  40991d:	out    dx,al
  40991e:	pushf  
  40991f:	or     bl,BYTE PTR [edx+edi*2+0x19]
  409923:	add    BYTE PTR [ebp+eax*8+0x3c],cl
  409927:	arpl   WORD PTR [esi+0x66],bx
  40992a:	pop    eax
  40992b:	mov    BYTE PTR [esi+0x76],dl
  40992e:	sbb    dl,dl
  409930:	inc    ecx
  409931:	mov    eax,DWORD PTR [eax-0x6d]
  409934:	add    al,0x94
  409936:	in     eax,dx
  409937:	fcomp  st(3)
  409939:	jge    0x40995c
  40993b:	push   cs
  40993c:	out    dx,eax
  40993d:	mov    ecx,0x16a6dc0c
  409942:	out    0x90,al
  409944:	test   eax,0x190cac44
  409949:	mov    ebp,0x1b2e0e09
  40994e:	aam    0xd9
  409950:	out    dx,eax
  409951:	sbb    esi,DWORD PTR [edi]
  409953:	push   0xffffff8e
  409955:	pop    esi
  409956:	mov    ebp,0xa7cf9eb9
  40995b:	pop    eax
  40995c:	or     al,0xc1
  40995e:	es jmp 0x7b4f:0x8b1379b0
  409966:	or     BYTE PTR [ebp+ecx*8-0x7f66ec0c],dl
  40996d:	or     eax,DWORD PTR [eax-0x44]
  409970:	sub    DWORD PTR [edx-0x8],ebp
  409973:	fadd   st(4),st
  409975:	sub    BYTE PTR [edi],cl
  409977:	stos   BYTE PTR es:[edi],al
  409978:	loop   0x409998
  40997a:	fs ss je 0x409981
  40997e:	inc    edx
  40997f:	(bad)  
  409980:	mov    WORD PTR [ecx-0x7a],?
  409983:	xchg   edx,eax
  409984:	stos   DWORD PTR es:[edi],eax
  409985:	out    dx,eax
  409986:	lods   eax,DWORD PTR ds:[esi]
  409987:	repz sbb dh,BYTE PTR [edi+0x34]
  40998b:	mov    edi,0xd17f6d3d
  409990:	xchg   DWORD PTR [eax+0x3c],esi
  409993:	xor    BYTE PTR [ebp+0x57],0x66
  409997:	rdpmc  
  409999:	rcr    ch,1
  40999b:	jecxz  0x409985
  40999d:	fbstp  TBYTE PTR [edx+0x76]
  4099a0:	sbb    eax,0x7d4e7ee0
  4099a5:	pushf  
  4099a6:	mov    bh,0xfa
  4099a8:	scas   al,BYTE PTR es:[edi]
  4099a9:	scas   eax,DWORD PTR es:[edi]
  4099aa:	push   edx
  4099ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ac:	imul   edi,DWORD PTR [ecx-0x76cefc67],0x52783e54
  4099b6:	jnp    0x409a32
  4099b8:	cmp    al,0xc8
  4099ba:	nop
  4099bb:	(bad)  
  4099bc:	pop    eax
  4099bd:	push   es
  4099be:	jbe    0x409a2b
  4099c0:	cmp    DWORD PTR [ecx-0x714944d5],ebp
  4099c6:	push   ebp
  4099c7:	cmp    ecx,esi
  4099c9:	inc    eax
  4099ca:	popa   
  4099cb:	jmp    0xef2f:0x45824e90
  4099d2:	lahf   
  4099d3:	adc    al,BYTE PTR [ebx-0x352a99fa]
  4099d9:	test   DWORD PTR [esi],edi
  4099db:	jp     0x4099c7
  4099dd:	or     eax,ecx
  4099df:	(bad)  
  4099e0:	data16 mov ch,0x35
  4099e3:	js     0x409a08
  4099e5:	add    ecx,DWORD PTR [esi]
  4099e7:	lds    eax,FWORD PTR [esi+0x1e]
  4099ea:	cmp    ch,0x9d
  4099ed:	shr    BYTE PTR [eax+0x30],cl
  4099f0:	mov    esi,0x1c84a054
  4099f5:	rol    BYTE PTR [edx-0x24],0x71
  4099f9:	and    bl,BYTE PTR [esi-0x5690b75b]
  4099ff:	in     eax,0x9f
  409a01:	jnp    0x409a66
  409a03:	sbb    eax,0x86731d84
  409a08:	add    DWORD PTR [edi-0xd428517],edi
  409a0e:	xor    bh,cl
  409a10:	jmp    0xa9c6:0x61783592
  409a17:	sub    eax,0x133b1526
  409a1c:	js     0x4099bc
  409a1e:	outs   dx,DWORD PTR ds:[esi]
  409a1f:	popa   
  409a20:	jo     0x409a7e
  409a22:	std    
  409a23:	mov    eax,ds:0x22986e6c
  409a28:	mov    eax,0x1ea6553a
  409a2d:	dec    eax
  409a2e:	xchg   ecx,eax
  409a2f:	dec    ebx
  409a30:	out    0x41,al
  409a32:	repnz add DWORD PTR [ecx-0x2],esi
  409a36:	stc    
  409a37:	inc    edx
  409a38:	xchg   esp,eax
  409a39:	dec    ebp
  409a3a:	(bad)  
  409a3b:	fst    DWORD PTR [ebp-0x6e]
  409a3e:	test   al,0xd6
  409a40:	inc    eax
  409a41:	mov    al,0x39
  409a43:	loop   0x4099fb
  409a45:	ds jno 0x409a98
  409a48:	add    eax,0x57fc24a3
  409a4d:	and    eax,0xf077f168
  409a52:	add    DWORD PTR ds:0x74022474,ecx
  409a58:	loop   0x409a15
  409a5a:	adc    al,0xa5
  409a5c:	inc    esp
  409a5d:	in     eax,dx
  409a5e:	addr16 jne 0x409ada
  409a61:	dec    ebx
  409a62:	mov    edx,0x96908bd5
  409a67:	or     DWORD PTR [esi],edi
  409a69:	fidivr WORD PTR [edx]
  409a6b:	ret    0xcb3b
  409a6e:	ins    DWORD PTR es:[edi],dx
  409a6f:	mov    bh,0x26
  409a71:	(bad)  
  409a72:	and    al,0x5
  409a74:	mov    ebp,0xe1274f0b
  409a79:	cdq    
  409a7a:	jo     0x409af3
  409a7c:	ficom  WORD PTR [ecx-0x1c85d4b]
  409a82:	test   al,0x43
  409a84:	mul    DWORD PTR [edi*4+0x7b2067f2]
  409a8b:	jge    0x409ab6
  409a8d:	dec    esi
  409a8e:	scas   eax,DWORD PTR es:[edi]
  409a8f:	aaa    
  409a90:	imul   ecx,DWORD PTR [edi-0x301c6d94],0x3d2a1ad3
  409a9a:	adc    eax,0x6d23ede8
  409a9f:	sub    DWORD PTR [edx],esp
  409aa1:	xchg   ebp,eax
  409aa2:	fistp  WORD PTR [edi-0x79]
  409aa5:	lods   al,BYTE PTR ds:[esi]
  409aa6:	adc    ch,dl
  409aa8:	cmp    dl,ah
  409aaa:	push   es
  409aab:	lods   eax,DWORD PTR ds:[esi]
  409aac:	outs   dx,DWORD PTR ds:[esi]
  409aad:	mov    ebp,0xb5f17dae
  409ab2:	pushf  
  409ab3:	mov    cl,0x14
  409ab5:	inc    eax
  409ab6:	scas   al,BYTE PTR es:[edi]
  409ab7:	mov    eax,0x4deea66c
  409abc:	add    BYTE PTR [eax-0x4e564340],0x26
  409ac3:	pop    ds
  409ac4:	adc    edx,esp
  409ac6:	scas   eax,DWORD PTR es:[edi]
  409ac7:	addr16 popf 
  409ac9:	ret    0xef1a
  409acc:	imul   eax,ebp,0x2
  409acf:	or     eax,0xcd089bb6
  409ad4:	jns    0x409ae9
  409ad6:	jbe    0x409b30
  409ad8:	fsub   QWORD PTR [esi-0x58ad3a9d]
  409ade:	and    BYTE PTR [ebp-0x65],ah
  409ae1:	dec    eax
  409ae2:	fild   WORD PTR ds:0xde93268f
  409ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae9:	pushf  
  409aea:	aas    
  409aeb:	sub    al,0xf
  409aed:	fwait
  409aee:	push   0xffffffc0
  409af0:	outs   dx,DWORD PTR ds:[esi]
  409af1:	stos   DWORD PTR es:[edi],eax
  409af2:	mov    ch,0x2a
  409af4:	pop    ebp
  409af5:	and    edx,DWORD PTR [ecx+0x4c691b9f]
  409afb:	add    al,0xa2
  409afd:	inc    ebp
  409afe:	loop   0x409acc
  409b00:	dec    ebp
  409b01:	dec    edx
  409b02:	repz inc ebp
  409b04:	out    dx,al
  409b05:	pop    ebp
  409b06:	inc    edx
  409b07:	(bad)  
  409b09:	mov    BYTE PTR [eax],dh
  409b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0c:	jle    0x409b07
  409b0e:	pop    ebp
  409b0f:	mov    cl,BYTE PTR [edx-0x7bcdcebc]
  409b15:	outs   dx,BYTE PTR ds:[esi]
  409b16:	jge    0x409b44
  409b18:	mov    bh,0xe1
  409b1a:	lahf   
  409b1b:	xor    ah,BYTE PTR [eax-0x73]
  409b1e:	mov    edx,0x88fcf2f8
  409b23:	les    edx,FWORD PTR ds:0x7c083eb3
  409b29:	xor    eax,0xcea2d972
  409b2e:	js     0x409af6
  409b30:	in     eax,dx
  409b31:	mov    ds:0xe117e0c5,eax
  409b36:	imul   esi,edi,0x16
  409b39:	adc    dl,BYTE PTR [eax+0x500fad21]
  409b3f:	(bad)  
  409b40:	outs   dx,BYTE PTR ds:[esi]
  409b41:	or     ch,bl
  409b43:	cmp    BYTE PTR [edx],0x53
  409b46:	xor    ebp,edx
  409b48:	cmp    ecx,0x61
  409b4b:	in     al,0xfa
  409b4d:	push   ebp
  409b4e:	icebp  
  409b4f:	cmp    dl,BYTE PTR [ecx]
  409b51:	sbb    al,0xee
  409b53:	hlt    
  409b54:	not    DWORD PTR [esi]
  409b56:	test   al,0xb3
  409b58:	and    DWORD PTR [edx],ecx
  409b5a:	sub    dl,cl
  409b5c:	pop    DWORD PTR [eax+0x54]
  409b5f:	int    0xb1
  409b61:	test   DWORD PTR [esi],eax
  409b63:	jmp    0x409b1e
  409b65:	out    dx,eax
  409b66:	cdq    
  409b67:	cwde   
  409b68:	jns    0x409b5c
  409b6a:	add    bh,0xaa
  409b6d:	or     al,0x68
  409b6f:	pop    ss
  409b70:	add    eax,0x889d19e3
  409b75:	pop    es
  409b76:	adc    al,0x96
  409b78:	call   0x2328404a
  409b7d:	rcl    BYTE PTR [eax-0x66],0x12
  409b81:	neg    DWORD PTR [edi+0x69]
  409b84:	lods   al,BYTE PTR ds:[esi]
  409b85:	bound  esp,QWORD PTR [esi-0x2630786b]
  409b8b:	js     0x409b3e
  409b8d:	sbb    al,0xc7
  409b8f:	jmp    0x164734d2
  409b94:	jecxz  0x409b5e
  409b96:	push   ss
  409b97:	inc    ebx
  409b98:	and    al,0xdd
  409b9a:	push   eax
  409b9b:	or     ch,cl
  409b9d:	std    
  409b9e:	push   ebx
  409b9f:	pop    ecx
  409ba1:	bound  edi,QWORD PTR [esi+ebp*2-0x67bed050]
  409ba8:	mov    ah,0x13
  409baa:	add    BYTE PTR [si+0x56b4],dh
  409baf:	push   edi
  409bb0:	test   eax,0xb4b53d36
  409bb5:	jb     0x409b5f
  409bb7:	aaa    
  409bb8:	lods   eax,DWORD PTR ds:[esi]
  409bb9:	mov    bh,0x54
  409bbb:	or     al,0x6d
  409bbd:	fwait
  409bbe:	popa   
  409bbf:	adc    eax,eax
  409bc1:	xchg   esi,eax
  409bc2:	xor    BYTE PTR [ebx+eax*8+0x3e4fc47a],cl
  409bc9:	mov    edi,DWORD PTR [ebp+0x51]
  409bcc:	add    eax,0xe37e6421
  409bd1:	pop    ebp
  409bd2:	cmp    al,0x15
  409bd4:	jnp    0x409b72
  409bd6:	dec    ecx
  409bd7:	push   eax
  409bd8:	push   edx
  409bd9:	fst    DWORD PTR [ebp-0x605e9227]
  409bdf:	jnp    0x409b72
  409be1:	mov    esi,0x92c93e96
  409be6:	ins    BYTE PTR es:[edi],dx
  409be7:	cmp    bl,BYTE PTR [edi+0x47311e1]
  409bed:	ficomp WORD PTR [ecx+0x71]
  409bf0:	cmp    dl,bh
  409bf2:	mov    eax,ds:0x770d8255
  409bf7:	jnp    0x409bd5
  409bf9:	add    BYTE PTR [edi+0xcb7d163],0x8e
  409c00:	mov    edi,0x8f3e2a42
  409c05:	cmc    
  409c06:	test   al,0x98
  409c08:	loop   0x409c2b
  409c0a:	icebp  
  409c0b:	dec    esp
  409c0c:	and    BYTE PTR [edi+0x17],al
  409c0f:	jl     0x409c53
  409c11:	mul    ah
  409c13:	test   BYTE PTR [edi+0x6c],0x65
  409c17:	push   ss
  409c18:	pusha  
  409c19:	xor    DWORD PTR [eax],esi
  409c1b:	xchg   DWORD PTR ds:0xf62c58dc,esi
  409c21:	inc    eax
  409c22:	test   DWORD PTR [ecx+0x20],eax
  409c25:	pusha  
  409c26:	xor    ah,bl
  409c28:	jg     0x409c83
  409c2a:	lods   al,BYTE PTR ds:[esi]
  409c2b:	popf   
  409c2c:	(bad)  
  409c2d:	test   al,0x6d
  409c2f:	mov    al,0x60
  409c31:	dec    eax
  409c32:	push   ecx
  409c33:	(bad)  
  409c34:	xlat   BYTE PTR ds:[ebx]
  409c35:	jbe    0x409c97
  409c37:	xor    al,BYTE PTR ds:0xc67d42fa
  409c3d:	xor    eax,edi
  409c3f:	xor    edx,edx
  409c41:	jmp    0x40a1cb
  409c46:	into   
  409c47:	icebp  
  409c48:	test   DWORD PTR [ecx+ebp*1+0x6ce82e28],ebp
  409c4f:	dec    eax
  409c50:	push   edx
  409c51:	mov    dl,0x85
  409c53:	call   0x29430b2e
  409c58:	push   ss
  409c59:	push   ss
  409c5a:	cmp    eax,0xfb161604
  409c5f:	nop
  409c60:	dec    edi
  409c61:	sub    al,0x59
  409c63:	push   es
  409c64:	ss cdq 
  409c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c67:	inc    esi
  409c68:	sbb    al,0x75
  409c6a:	inc    edi
  409c6b:	xchg   edi,esi
  409c6d:	ret    0x26d0
  409c70:	inc    ebp
  409c71:	ror    cl,1
  409c73:	jle    0x409cad
  409c75:	stos   BYTE PTR es:[edi],al
  409c76:	mov    cl,0xa1
  409c78:	cli    
  409c79:	xor    esp,ebp
  409c7b:	inc    esp
  409c7c:	in     al,0xfd
  409c7e:	addr16 dec esp
  409c80:	(bad)  
  409c81:	sbb    eax,0xb7e0e6ac
  409c86:	adc    BYTE PTR [ecx-0x22e6ad31],dl
  409c8c:	in     al,dx
  409c8d:	rcl    bh,1
  409c8f:	cmp    DWORD PTR [edx+0x76],ebp
  409c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c93:	push   0xb757dc6e
  409c98:	test   DWORD PTR [ebp+ebx*4+0x42d57842],0xb70004e0
  409ca3:	popf   
  409ca4:	cld    
  409ca5:	xor    edx,ecx
  409ca7:	jo     0x409c98
  409ca9:	xchg   ebp,eax
  409caa:	dec    esp
  409cab:	ja     0x409cf4
  409cad:	add    al,0x9
  409caf:	call   0x250eaec0
  409cb4:	and    bh,BYTE PTR [edi]
  409cb6:	jno    0x409c41
  409cb8:	cmp    BYTE PTR ds:0x270c656e,0xc9
  409cbf:	pop    ecx
  409cc0:	mov    ch,0xc4
  409cc2:	and    al,0x93
  409cc4:	push   ebp
  409cc5:	mov    bh,0x8c
  409cc7:	fs pop ebx
  409cc9:	push   ds
  409cca:	imul   edx,DWORD PTR [esi-0x19],0xffffff85
  409cce:	dec    ebp
  409ccf:	outs   dx,DWORD PTR ds:[esi]
  409cd0:	mov    bl,0x4f
  409cd2:	cmp    ecx,DWORD PTR [esi+ecx*2+0x771cf22e]
  409cd9:	adc    ah,BYTE PTR [ecx+0x24]
  409cdc:	int3   
  409cdd:	inc    esp
  409cde:	loop   0x409c7e
  409ce0:	xchg   ecx,eax
  409ce1:	jmp    0x409c94
  409ce3:	(bad)  
  409ce4:	cmp    BYTE PTR [edi],ah
  409ce6:	dec    esp
  409ce7:	mov    ds:0x1ef1bd91,eax
  409cec:	inc    ebp
  409ced:	fcmovbe st,st(1)
  409cef:	scas   eax,DWORD PTR es:[edi]
  409cf0:	xor    dl,ah
  409cf2:	iret   
  409cf3:	jecxz  0x409d65
  409cf5:	push   0xbbca7507
  409cfa:	cmp    al,0x2d
  409cfc:	ret    
  409cfd:	test   DWORD PTR [edx+0x6c51f10a],esp
  409d03:	jo     0x409d34
  409d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d06:	xor    al,0x67
  409d08:	(bad)  
  409d09:	adc    DWORD PTR [esi-0x25c5cd0d],eax
  409d0f:	(bad)  
  409d10:	mov    esp,0x248841f4
  409d15:	sbb    al,0xab
  409d17:	popf   
  409d18:	inc    esp
  409d19:	sti    
  409d1a:	sahf   
  409d1b:	loop   0x409d48
  409d1d:	jmp    0x7567:0x21015095
  409d24:	gs mov dh,0x84
  409d27:	jae    0x409cc0
  409d29:	in     eax,dx
  409d2a:	xchg   esi,eax
  409d2b:	lds    esi,FWORD PTR [ebx+0x29]
  409d2e:	mov    ch,0x9f
  409d30:	pop    edx
  409d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d32:	imul   esp,DWORD PTR ds:[ebx-0x78],0xa8f27f95
  409d3a:	lahf   
  409d3b:	cmp    BYTE PTR [edi],ah
  409d3d:	dec    esi
  409d3e:	in     eax,0xd9
  409d40:	mov    BYTE PTR [ebx+eiz*8-0x34],bl
  409d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d45:	lods   al,BYTE PTR ds:[esi]
  409d46:	cdq    
  409d47:	pop    eax
  409d48:	call   0xce7f:0xc15f6457
  409d4f:	fidiv  DWORD PTR [edi+0x1d]
  409d52:	mov    al,ds:0x2e8af68f
  409d57:	xchg   esi,eax
  409d58:	imul   edi,DWORD PTR [esi-0x634ce1f2],0xe820b335
  409d62:	mov    dh,BYTE PTR [ebp+0x3e]
  409d65:	mov    edx,0xc50bad1f
  409d6a:	mov    ah,BYTE PTR [edx+0x50b34fe6]
  409d70:	ja     0x409d99
  409d72:	cwde   
  409d73:	xor    eax,DWORD PTR [esi]
  409d75:	adc    ebx,DWORD PTR ds:0x28840aac
  409d7b:	in     al,0x92
  409d7d:	enter  0xd460,0x9b
  409d81:	pusha  
  409d82:	mov    esp,tr5
  409d85:	sub    BYTE PTR [esi-0x46151fb6],dl
  409d8b:	jl     0x409df8
  409d8d:	sbb    DWORD PTR [ecx+0x431e98f4],edx
  409d93:	outs   dx,DWORD PTR ds:[esi]
  409d94:	mov    edx,DWORD PTR [esi-0x3d749983]
  409d9a:	jmp    0x409d78
  409d9c:	pop    edx
  409d9d:	xchg   ecx,eax
  409d9e:	xor    eax,0x292f9982
  409da3:	xor    al,0xfe
  409da5:	es pop esi
  409da7:	in     al,0xab
  409da9:	popf   
  409daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dab:	xor    DWORD PTR [esi],edi
  409dad:	inc    edx
  409dae:	xor    cl,BYTE PTR [ebp+0x7899a0f7]
  409db4:	aad    0x20
  409db6:	mov    bl,0xdc
  409db8:	std    
  409db9:	pop    ecx
  409dba:	mov    ah,0x9e
  409dbc:	iret   
  409dbd:	mov    dh,0xd8
  409dbf:	push   ebx
  409dc0:	jle    0x409d89
  409dc2:	ss xchg ebx,eax
  409dc4:	call   0x943d88e7
  409dc9:	sub    BYTE PTR [ebp+0x62],ch
  409dcc:	jle    0x409e0c
  409dce:	in     eax,dx
  409dcf:	js     0x409de7
  409dd1:	and    al,BYTE PTR [ecx]
  409dd3:	adc    eax,0x6ea3c006
  409dd8:	jno    0x409d65
  409dda:	mov    edi,0x9be7eb94
  409ddf:	push   esp
  409de0:	inc    eax
  409de1:	enter  0xd055,0x20
  409de5:	mov    ecx,0x873608dd
  409dea:	push   DWORD PTR ds:0xa5bb0f9e
  409df0:	test   al,0x33
  409df2:	aas    
  409df3:	push   esp
  409df4:	dec    ecx
  409df5:	add    DWORD PTR [ebx],0x7a3a5d4f
  409dfb:	cwde   
  409dfc:	in     al,dx
  409dfd:	push   0xffffff96
  409dff:	mov    ah,0xac
  409e01:	stos   BYTE PTR es:[edi],al
  409e02:	jp     0x409e43
  409e04:	dec    edi
  409e05:	loop   0x409e76
  409e07:	dec    ebx
  409e08:	leave  
  409e09:	xchg   edi,eax
  409e0a:	in     al,dx
  409e0b:	(bad)  
  409e0c:	les    esi,FWORD PTR [edx+edx*4-0x5e]
  409e10:	xchg   BYTE PTR [ebp-0x6053339c],bh
  409e16:	pcmpeqd mm3,QWORD PTR [esp+edi*2]
  409e1a:	pop    edx
  409e1b:	outs   dx,DWORD PTR ds:[esi]
  409e1c:	or     al,0xcf
  409e1e:	mov    al,0x64
  409e20:	dec    esi
  409e21:	out    dx,eax
  409e22:	xlat   BYTE PTR ds:[ebx]
  409e23:	pop    ebp
  409e24:	push   ecx
  409e25:	inc    edx
  409e26:	inc    eax
  409e27:	into   
  409e28:	inc    esp
  409e29:	pop    eax
  409e2a:	jne    0x409e68
  409e2c:	stc    
  409e2d:	mov    cl,0xee
  409e2f:	and    al,BYTE PTR [edx+eiz*4-0x8e70cf5]
  409e36:	repnz retf 
  409e38:	cmp    eax,0x9c8fd586
  409e3d:	pop    ss
  409e3e:	add    cl,BYTE PTR [edx+0x4bc2b014]
  409e44:	or     eax,0xc0b07640
  409e49:	fs daa 
  409e4b:	stos   DWORD PTR es:[edi],eax
  409e4c:	es sti 
  409e4e:	idiv   DWORD PTR [edi-0x1b]
  409e51:	or     dh,dh
  409e53:	dec    edi
  409e54:	or     BYTE PTR [edi+edx*4-0x16],al
  409e58:	loope  0x409e01
  409e5a:	ret    0x1fce
  409e5d:	ret    
  409e5e:	mov    ?,WORD PTR [bx+di-0x39]
  409e62:	xchg   ecx,eax
  409e63:	push   edx
  409e64:	rol    BYTE PTR [esi+0x5fce29c9],cl
  409e6a:	pop    ebp
  409e6b:	es sbb eax,0x113a5274
  409e71:	ret    0x2bb2
  409e74:	sub    eax,0xb14b61f8
  409e79:	icebp  
  409e7a:	jae    0x409e38
  409e7c:	test   al,0xc8
  409e7e:	mov    ebp,0x27914a1b
  409e83:	std    
  409e84:	icebp  
  409e85:	jmp    0xc8143a71
  409e8a:	mov    ah,0xea
  409e8c:	xor    al,BYTE PTR [ebp+0x2322a2a2]
  409e92:	mov    ds:0x985de654,al
  409e97:	push   edx
  409e98:	in     al,0xca
  409e9a:	xchg   ecx,eax
  409e9b:	das    
  409e9c:	in     eax,0x8a
  409e9e:	and    eax,DWORD PTR [edi-0x36b51189]
  409ea4:	cmp    DWORD PTR [esi+ecx*4-0x7a],ecx
  409ea8:	mov    al,ds:0x5a9dbb78
  409ead:	leave  
  409eae:	test   BYTE PTR ds:0xb9ef103f,al
  409eb4:	jmp    0xf9e0bb1e
  409eb9:	mov    ?,WORD PTR [eax-0x25]
  409ebc:	or     eax,0xae35b8e3
  409ec1:	mov    ebp,0x7d936261
  409ec6:	(bad)  
  409ec7:	push   eax
  409ec8:	pushf  
  409ec9:	or     al,0x84
  409ecb:	stc    
  409ecc:	xor    al,BYTE PTR ds:0x2f33b7e6
  409ed2:	inc    ecx
  409ed3:	(bad)  
  409ed4:	in     al,dx
  409ed5:	je     0x409f18
  409ed7:	in     eax,dx
  409ed8:	test   edx,edi
  409eda:	sbb    BYTE PTR [ebx],0xc4
  409edd:	jae    0x409e95
  409edf:	div    BYTE PTR [edi+0x3]
  409ee2:	gs xchg ebx,eax
  409ee4:	push   0xd613139
  409ee9:	mov    ecx,0xf80ac3e4
  409eee:	mov    dl,0xc6
  409ef0:	add    esi,DWORD PTR [ebp-0x3c3f5211]
  409ef6:	hlt    
  409ef7:	mov    edx,0xa35f5c6f
  409efc:	inc    ecx
  409efd:	jge    0x409f0b
  409eff:	dec    eax
  409f00:	push   0x7264fce5
  409f05:	gs push es
  409f07:	pop    edx
  409f08:	pop    ds
  409f09:	fs mov ch,0xca
  409f0c:	cli    
  409f0d:	xor    edi,DWORD PTR ds:0x1d86aab9
  409f13:	sbb    BYTE PTR [ebx-0x5c],al
  409f16:	mov    ch,0xc4
  409f18:	xchg   esi,eax
  409f19:	mov    edx,0xb2f2370c
  409f1e:	jnp    0x409eb8
  409f20:	inc    esi
  409f21:	jge    0x409f33
  409f23:	or     ebx,esp
  409f25:	mov    bh,0xe9
  409f27:	mov    esp,0x601aedd
  409f2c:	xchg   BYTE PTR [edi-0x4ecf7a06],al
  409f32:	cmc    
  409f33:	mov    ch,0xb4
  409f35:	mov    cl,0xe2
  409f37:	adc    al,0x37
  409f39:	cli    
  409f3a:	jno    0x409f1b
  409f3c:	pop    ecx
  409f3d:	inc    esi
  409f3e:	fdivr  QWORD PTR [ecx-0x757ef7da]
  409f44:	imul   edi,ebx,0x2fe610c5
  409f4a:	les    eax,FWORD PTR [esi]
  409f4c:	das    
  409f4d:	xlat   BYTE PTR ds:[ebx]
  409f4e:	es jge 0x409f93
  409f51:	xchg   esi,eax
  409f52:	mov    ds:0x72479e21,al
  409f57:	mov    bh,0xbc
  409f59:	call   0x806:0x62bb2124
  409f60:	ret    
  409f61:	cmp    DWORD PTR [ebx*1-0x3d8af9f7],edi
  409f68:	pop    ds
  409f69:	sub    eax,DWORD PTR [edi-0x57]
  409f6c:	lds    ebx,FWORD PTR [ecx]
  409f6e:	xchg   ebx,eax
  409f6f:	test   bl,bh
  409f71:	mov    edi,0x35a10379
  409f76:	std    
  409f77:	jecxz  0x409fbe
  409f79:	push   DWORD PTR [edx+ebx*4-0x3d]
  409f7d:	push   0xa4b55c51
  409f82:	pusha  
  409f83:	je     0x409f12
  409f85:	inc    ebp
  409f86:	scas   al,BYTE PTR es:[edi]
  409f87:	lods   eax,DWORD PTR ds:[esi]
  409f88:	mov    ebx,0x6dea086b
  409f8d:	jne    0x409f38
  409f8f:	(bad)  
  409f90:	cmp    BYTE PTR fs:[eax],dl
  409f93:	icebp  
  409f94:	cmp    DWORD PTR [edx],edi
  409f96:	jns    0x409f48
  409f98:	jmp    0x7ae0b4b
  409f9d:	lea    ebp,[esp+ebx*8+0x45]
  409fa1:	jb     0x409f43
  409fa3:	cmp    BYTE PTR [ebx+0x3f],cl
  409fa6:	jle    0x40a01e
  409fa8:	fwait
  409fa9:	inc    ebx
  409faa:	ret    
  409fab:	cmp    DWORD PTR [ebx],edx
  409fad:	ins    BYTE PTR es:[edi],dx
  409fae:	ja     0x409fb3
  409fb0:	inc    esp
  409fb1:	pop    edx
  409fb2:	loop   0x409fb7
  409fb4:	jge    0x40a025
  409fb6:	fcomp  QWORD PTR [esi+0x1e]
  409fb9:	test   al,0xa7
  409fbb:	cld    
  409fbc:	scas   al,BYTE PTR es:[edi]
  409fbd:	mov    esp,0x25e6613b
  409fc2:	mov    cl,0x1
  409fc4:	pusha  
  409fc5:	mov    ds:0x9dd26eed,al
  409fca:	mov    bl,0xa4
  409fcc:	jl     0x40a038
  409fce:	retf   0x2c33
  409fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd2:	jo     0x409f92
  409fd4:	or     edi,esp
  409fd6:	add    esi,eax
  409fd8:	mov    DWORD PTR [edi-0x1e],0xe1298a9d
  409fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe0:	sub    ah,BYTE PTR [esi-0x2c9963dd]
  409fe6:	ret    
  409fe7:	ret    0x3aae
  409fea:	xchg   esp,eax
  409feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fec:	adc    ecx,DWORD PTR ds:0xdfc207b9
  409ff2:	in     al,0x3d
  409ff4:	icebp  
  409ff5:	xor    edx,eax
  409ff7:	int3   
  409ff8:	ins    DWORD PTR es:[edi],dx
  409ff9:	fld    DWORD PTR [ebp+esi*4-0x67]
  409ffd:	push   ds
  409ffe:	ret    
  409fff:	pop    ds
  40a000:	es inc esi
  40a002:	cli    
  40a003:	add    cx,0xffc2
  40a007:	pop    ebp
  40a008:	mov    edi,0x1389a9e1
  40a00d:	add    eax,0xdf365ed8
  40a012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a013:	inc    ebp
  40a014:	scas   eax,DWORD PTR es:[di]
  40a016:	out    0x83,eax
  40a018:	jecxz  0x40a024
  40a01a:	les    edx,FWORD PTR [esi]
  40a01c:	aaa    
  40a01d:	mov    ds:0xa3af410b,al
  40a022:	jmp    0x7c34317b
  40a027:	popf   
  40a028:	jmp    0x7fd2:0x1a4ce237
  40a02f:	int3   
  40a030:	push   edi
  40a031:	inc    edx
  40a032:	ret    
  40a033:	mov    ecx,DWORD PTR [edi-0x12ce0096]
  40a039:	push   ss
  40a03a:	mov    edx,0x3648973f
  40a03f:	icebp  
  40a040:	add    edi,edi
  40a042:	push   cs
  40a043:	mov    esp,0x96c16153
  40a048:	cmp    DWORD PTR cs:[ebx-0x309003ab],esi
  40a04f:	add    ch,BYTE PTR [ecx-0x20fb32fd]
  40a055:	xor    DWORD PTR [ecx-0x4d8e9603],0x510acdf8
  40a05f:	add    BYTE PTR [ebp+0x1a],0x1f
  40a063:	jge    0x40a077
  40a065:	bound  esi,QWORD PTR [edx]
  40a067:	sti    
  40a068:	scas   al,BYTE PTR es:[edi]
  40a069:	cs cmc 
  40a06b:	std    
  40a06c:	rcl    DWORD PTR [edi-0x3e],cl
  40a06f:	test   esp,eax
  40a071:	fcomp  QWORD PTR [esi-0x5a1011cf]
  40a077:	mov    BYTE PTR [ecx],ah
  40a079:	mov    edi,0xee5991d6
  40a07e:	cdq    
  40a07f:	sahf   
  40a080:	loop   0x40a06f
  40a082:	sbb    eax,0x124edc7d
  40a087:	popa   
  40a088:	xor    esp,edx
  40a08a:	push   esi
  40a08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a08c:	pop    esi
  40a08d:	jmp    0xf44dd18
  40a092:	inc    edx
  40a093:	pusha  
  40a094:	or     al,0x60
  40a096:	sbb    cl,BYTE PTR [ebx+esi*4+0x59]
  40a09a:	fnstenv [ebx+esi*1+0x7f]
  40a09e:	repnz adc dl,BYTE PTR [ebp-0x53]
  40a0a2:	stc    
  40a0a3:	aam    0xba
  40a0a5:	mov    al,0x65
  40a0a7:	lods   eax,DWORD PTR ds:[esi]
  40a0a8:	stos   DWORD PTR es:[edi],eax
  40a0a9:	xchg   esi,eax
  40a0aa:	xchg   BYTE PTR [ebx],cl
  40a0ac:	repz aad 0x51
  40a0af:	cmc    
  40a0b0:	mov    eax,ds:0x1c734b1d
  40a0b5:	dec    ebx
  40a0b6:	or     al,0xe5
  40a0b8:	test   BYTE PTR ds:0x75ad538e,dh
  40a0be:	jo     0x40a085
  40a0c0:	cwde   
  40a0c1:	je     0x40a0fa
  40a0c3:	and    DWORD PTR [esi],esp
  40a0c5:	add    DWORD PTR [edx+edx*1-0x1f8d1751],esp
  40a0cc:	mov    ah,0x70
  40a0ce:	pop    ds
  40a0cf:	pop    es
  40a0d0:	and    al,BYTE PTR [eax-0x33f84734]
  40a0d6:	jns    0x40a075
  40a0d8:	int3   
  40a0d9:	xchg   BYTE PTR [esi-0x4788657e],dl
  40a0df:	fsub   QWORD PTR [eax]
  40a0e1:	jae    0x40a0f1
  40a0e3:	mov    edi,0xc9bbbcc6
  40a0e8:	les    ebx,FWORD PTR [ebp+eax*1+0x1ead1747]
  40a0ef:	adc    bh,BYTE PTR [esi-0x1499c9a8]
  40a0f5:	hlt    
  40a0f6:	das    
  40a0f7:	in     al,dx
  40a0f8:	xlat   BYTE PTR ds:[ebx]
  40a0f9:	adc    BYTE PTR [ecx-0x7d682a1d],ch
  40a0ff:	ins    DWORD PTR es:[edi],dx
  40a100:	cli    
  40a101:	test   al,0x98
  40a103:	loop   0x40a11e
  40a105:	sbb    BYTE PTR [eax],0xd
  40a108:	outs   dx,BYTE PTR ds:[esi]
  40a109:	inc    esi
  40a10a:	retf   
  40a10b:	fstp   DWORD PTR [eax]
  40a10d:	outs   dx,DWORD PTR ds:[esi]
  40a10e:	push   ecx
  40a10f:	xor    eax,0xcda62a81
  40a114:	cmp    al,0xc8
  40a116:	xor    eax,0x6aefad5f
  40a11b:	pop    ebx
  40a11c:	out    0x3c,eax
  40a11e:	mov    ebx,0x3f2d7588
  40a123:	mov    ecx,0x21a2301a
  40a128:	adc    DWORD PTR [eax-0x2639a1bc],ebx
  40a12e:	push   esi
  40a12f:	xor    ah,0x76
  40a132:	lods   eax,DWORD PTR ds:[esi]
  40a133:	pop    edi
  40a134:	push   ds
  40a135:	push   eax
  40a136:	test   al,0xae
  40a138:	sub    BYTE PTR [eax+ecx*2],ah
  40a13b:	sub    eax,0x626f235e
  40a140:	repz xor dl,BYTE PTR [eax+0x46]
  40a144:	mov    WORD PTR [ebx],?
  40a146:	sbb    BYTE PTR ds:0x4446c9d3,0xd0
  40a14d:	jmp    0x12ea711c
  40a152:	pop    ecx
  40a153:	dec    edx
  40a154:	mov    al,ds:0x12930fd2
  40a159:	sub    DWORD PTR [ebp-0x31],esp
  40a15c:	dec    BYTE PTR [ecx-0x46]
  40a15f:	jl     0x40a104
  40a161:	mov    eax,0x7f57c273
  40a166:	test   eax,0xfd7a1a82
  40a16c:	pop    eax
  40a16d:	adc    al,0x2b
  40a16f:	inc    ecx
  40a170:	jnp    0x40a134
  40a172:	out    0xaa,eax
  40a174:	ror    BYTE PTR [edx+0x26],cl
  40a177:	or     al,0x7a
  40a179:	(bad)  
  40a17b:	daa    
  40a17c:	lods   al,BYTE PTR ds:[esi]
  40a17d:	mov    ah,0x0
  40a17f:	mul    BYTE PTR [esi-0x5848e2df]
  40a185:	cmp    DWORD PTR [eax+0x761d9c10],ebx
  40a18b:	xchg   ecx,eax
  40a18c:	and    DWORD PTR [ebx+0x6f],esp
  40a18f:	popa   
  40a190:	jmp    0x40a177
  40a192:	mov    dl,0x97
  40a194:	(bad)  
  40a196:	adc    DWORD PTR [eax-0x499f9b13],0x35
  40a19d:	lods   al,BYTE PTR ds:[esi]
  40a19e:	mov    eax,0x31b5a495
  40a1a3:	pop    edi
  40a1a4:	mov    ch,0x45
  40a1a6:	icebp  
  40a1a7:	ret    
  40a1a8:	push   edx
  40a1a9:	mov    dl,0x59
  40a1ab:	dec    eax
  40a1ac:	jnp    0x40a1b0
  40a1ae:	stos   BYTE PTR es:[edi],al
  40a1af:	fadd   DWORD PTR [ebx+0xb]
  40a1b2:	fdivr  QWORD PTR [ecx-0x1c]
  40a1b5:	enter  0xe94a,0xd7
  40a1b9:	xchg   ebx,eax
  40a1ba:	sub    DWORD PTR [esi],edx
  40a1bc:	std    
  40a1bd:	dec    edi
  40a1be:	dec    eax
  40a1bf:	add    BYTE PTR [edx],al
  40a1c1:	sub    esp,DWORD PTR [ecx-0x51]
  40a1c4:	inc    edi
  40a1c5:	jmp    0x40a1de
  40a1c7:	pop    edx
  40a1c8:	push   cs
  40a1c9:	jle    0x40a20b
  40a1cb:	or     eax,edx
  40a1cd:	mov    cl,BYTE PTR [eax+ecx*1]
  40a1d0:	mov    eax,DWORD PTR [ebp-0x34]
  40a1d3:	or     BYTE PTR [eax],cl
  40a1d5:	mov    eax,DWORD PTR [ebp-0x10]
  40a1d8:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1db:	shrd   eax,ecx,0x2
  40a1df:	shr    ecx,0x2
  40a1e2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a1e5:	mov    edx,DWORD PTR [ebp-0xc]
  40a1e8:	xor    eax,edi
  40a1ea:	shl    ecx,0x1e
  40a1ed:	xor    edx,edx
  40a1ef:	or     eax,edx
  40a1f1:	lea    eax,[ebp+eax*1-0x4]
  40a1f5:	mov    DWORD PTR [ebp-0x34],eax
  40a1f8:	mov    eax,DWORD PTR [ebp-0x10]
  40a1fb:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1fe:	shrd   eax,ecx,0x2
  40a202:	shr    ecx,0x2
  40a205:	jmp    0x40a78f
  40a20a:	sbb    eax,0xb41fb564
  40a20f:	push   ds
  40a210:	sbb    eax,0xfb6fa164
  40a215:	mov    ah,0xe2
  40a217:	or     eax,0x1f39aeba
  40a21c:	push   ss
  40a21d:	push   ss
  40a21e:	cmp    eax,0x88161604
  40a223:	out    0x7f,al
  40a225:	sub    eax,0x1e5046a1
  40a22a:	push   ebx
  40a22b:	bound  esp,QWORD PTR [ebp+ebp*2-0x80]
  40a22f:	nop
  40a230:	cmp    BYTE PTR [ecx],al
  40a232:	or     BYTE PTR [esi-0x59bb0196],bl
  40a238:	jl     0x40a1cc
  40a23a:	fsub   st(4),st
  40a23c:	mov    eax,0x6f4f972
  40a241:	mov    ch,bh
  40a243:	inc    eax
  40a244:	fcom   DWORD PTR [esi]
  40a246:	mov    esp,0x10131a47
  40a24b:	ins    BYTE PTR es:[edi],dx
  40a24c:	dec    edi
  40a24d:	dec    esp
  40a24e:	inc    esp
  40a24f:	mov    cl,al
  40a251:	es or  eax,0x2f6a1a99
  40a257:	in     al,dx
  40a258:	push   es
  40a259:	aad    0x93
  40a25b:	lock into 
  40a25d:	les    ebp,FWORD PTR [edx-0x2a24817b]
  40a263:	adc    al,0x50
  40a265:	pop    ds
  40a266:	ja     0x40a23b
  40a268:	loopne 0x40a22d
  40a26a:	cmp    al,0xbf
  40a26c:	iret   
  40a26d:	mov    esi,DWORD PTR ds:0x5872d4f6
  40a273:	test   BYTE PTR [esp+edx*2],ch
  40a276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a277:	pop    esi
  40a278:	popa   
  40a279:	push   ecx
  40a27a:	mov    bp,0x4392
  40a27e:	(bad)  
  40a27f:	sti    
  40a280:	into   
  40a281:	enter  0x1253,0x14
  40a285:	ret    0x5dfb
  40a288:	and    eax,0xbf80388e
  40a28d:	into   
  40a28e:	dec    esi
  40a28f:	in     eax,0x3e
  40a291:	cmp    cl,BYTE PTR [ecx+edx*8-0x696bf089]
  40a298:	add    al,0x2e
  40a29a:	mov    al,0xeb
  40a29c:	sbb    dh,al
  40a29e:	push   eax
  40a29f:	das    
  40a2a0:	shl    BYTE PTR [ecx+0x4a92755a],1
  40a2a6:	call   0x4c707abc
  40a2ab:	mov    bl,0xad
  40a2ad:	pusha  
  40a2ae:	imul   ebp,DWORD PTR [edi-0x37006a8b],0x30
  40a2b5:	jp     0x40a26b
  40a2b7:	stos   BYTE PTR es:[edi],al
  40a2b8:	xchg   DWORD PTR [eax+0x668acb07],eax
  40a2be:	popa   
  40a2bf:	es cs jge 0x40a295
  40a2c3:	inc    esp
  40a2c4:	je     0x40a24a
  40a2c6:	mov    bl,0xa8
  40a2c8:	push   eax
  40a2c9:	jp     0x40a318
  40a2cb:	sub    al,0x62
  40a2cd:	and    cl,BYTE PTR [ebp-0x49e34d04]
  40a2d3:	xlat   BYTE PTR ds:[ebx]
  40a2d4:	stos   BYTE PTR es:[edi],al
  40a2d5:	jae    0x40a2b5
  40a2d7:	add    al,0x19
  40a2d9:	mov    ebp,0x9b56fce
  40a2de:	mov    bl,0x36
  40a2e0:	sub    BYTE PTR [esi+0x3aff57ba],al
  40a2e6:	push   0x1a
  40a2e8:	mov    eax,ds:0xec1486bb
  40a2ed:	lods   al,BYTE PTR ds:[si]
  40a2ef:	fldenv [eax+0x7d]
  40a2f2:	sub    edx,DWORD PTR [eax]
  40a2f4:	das    
  40a2f5:	pushf  
  40a2f6:	sbb    DWORD PTR [ebp-0xc],0x5ea61ba1
  40a2fd:	test   eax,0x5edb4857
  40a302:	test   al,0xcf
  40a304:	ficom  DWORD PTR [eax+0x76f86f86]
  40a30a:	add    al,0x95
  40a30c:	mov    eax,0x8199723c
  40a311:	aam    0x10
  40a313:	out    dx,al
  40a314:	repz sbb ah,dl
  40a317:	push   edx
  40a318:	dec    ebx
  40a319:	repnz cli 
  40a31b:	pop    edx
  40a31c:	dec    ebx
  40a31d:	xchg   edx,eax
  40a31e:	int    0xfd
  40a320:	and    bl,BYTE PTR [ecx-0x7e652245]
  40a326:	in     al,dx
  40a327:	cmp    eax,ebx
  40a329:	lock out 0xa5,eax
  40a32c:	mov    dh,dl
  40a32e:	xor    eax,edi
  40a330:	aad    0x98
  40a332:	fld    QWORD PTR [edx+ebp*2+0x7a]
  40a336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a337:	adc    ch,al
  40a339:	imul   edx,edx,0x8acb785e
  40a33f:	sub    DWORD PTR [ebx+0x77],esi
  40a342:	(bad)
  40a346:	idiv   bl
  40a348:	xchg   ebx,eax
  40a349:	jns    0x40a3c9
  40a34b:	sbb    BYTE PTR [edi],0xbe
  40a34e:	popf   
  40a34f:	inc    edx
  40a350:	rcr    BYTE PTR [edi-0x52],0xe2
  40a354:	(bad)  
  40a356:	sbb    BYTE PTR fs:[edx+ebp*2],0xe9
  40a35b:	(bad)  
  40a35c:	push   edi
  40a35d:	gs fcmovu st,st(0)
  40a360:	iret   
  40a361:	lahf   
  40a362:	xchg   ecx,eax
  40a364:	dec    edi
  40a365:	mov    al,ds:0x352213d2
  40a36a:	popa   
  40a36b:	push   es
  40a36c:	cli    
  40a36d:	into   
  40a36e:	xor    bl,dh
  40a370:	fnstcw WORD PTR [edx]
  40a372:	sub    eax,0x275b2e3c
  40a377:	jns    0x40a3d9
  40a379:	xor    BYTE PTR [esi+eax*8],cl
  40a37c:	cmp    esp,DWORD PTR [ecx]
  40a37e:	xor    DWORD PTR [esi+edx*1],0x9940c8f8
  40a385:	mov    esi,0xa43e283f
  40a38a:	push   0xbbae5d47
  40a38f:	cmp    BYTE PTR [ebx],dh
  40a391:	ret    
  40a392:	xchg   edx,eax
  40a393:	ins    BYTE PTR es:[edi],dx
  40a394:	ins    BYTE PTR es:[edi],dx
  40a395:	fimul  DWORD PTR [ebx+ecx*2-0x7c]
  40a399:	push   es
  40a39a:	imul   ebp,DWORD PTR [ecx-0x379bb4ea],0x7a
  40a3a1:	iret   
  40a3a2:	jo     0x40a3b2
  40a3a4:	popa   
  40a3a5:	(bad)  
  40a3a6:	outs   dx,DWORD PTR ds:[esi]
  40a3a7:	dec    edx
  40a3a8:	fstp   QWORD PTR [ecx+0x645d43]
  40a3ae:	fcomp  st(7)
  40a3b0:	int3   
  40a3b1:	enter  0x7f1a,0xfb
  40a3b5:	mul    BYTE PTR [edi-0x4fdf80e0]
  40a3bb:	mov    ecx,0x9fd555f7
  40a3c0:	lahf   
  40a3c1:	and    dl,BYTE PTR [ecx-0x376caab]
  40a3c7:	fs pop edx
  40a3c9:	inc    edi
  40a3ca:	inc    ecx
  40a3cb:	xor    eax,0x99a8e3d2
  40a3d0:	imul   esi,DWORD PTR [ecx+0x4e],0x90106cbb
  40a3d7:	adc    bl,BYTE PTR [edx-0x19628608]
  40a3dd:	int3   
  40a3de:	shr    DWORD PTR [edi-0x13dffb8],cl
  40a3e4:	push   esi
  40a3e5:	lahf   
  40a3e6:	inc    ecx
  40a3e7:	test   ecx,eax
  40a3e9:	mov    cl,0x9a
  40a3eb:	pop    ecx
  40a3ec:	jmp    0x40a451
  40a3ee:	(bad)  
  40a3ef:	stos   BYTE PTR es:[edi],al
  40a3f0:	test   BYTE PTR [edi+0xa],al
  40a3f3:	xchg   ecx,eax
  40a3f4:	lock xor eax,0xdccd5fea
  40a3fa:	std    
  40a3fb:	sub    eax,0xb54f50e0
  40a400:	sub    DWORD PTR [edx+eiz*4-0x36],ebx
  40a404:	mov    ebx,0xefd35444
  40a409:	sbb    bl,BYTE PTR [eax+0x37]
  40a40c:	ror    BYTE PTR [edx],0x75
  40a40f:	(bad)  [esi+0x39]
  40a412:	dec    esp
  40a413:	push   edx
  40a414:	xor    eax,0x53692a51
  40a41a:	mov    ?,WORD PTR [edi]
  40a41c:	loope  0x40a40d
  40a41e:	xchg   ebp,eax
  40a41f:	xchg   edi,eax
  40a420:	jb     0x40a424
  40a422:	mov    ebp,0xaff8aec3
  40a427:	inc    esi
  40a428:	cmc    
  40a429:	mov    bl,0x5
  40a42b:	stc    
  40a42c:	jne    0x40a47a
  40a42e:	sar    DWORD PTR [esi-0x57e1a08e],1
  40a434:	xor    eax,0xc0cf38f
  40a439:	rol    DWORD PTR [esi+0x31],cl
  40a43c:	pop    esp
  40a43d:	les    ebx,FWORD PTR ds:0x9ce6f5af
  40a443:	sub    BYTE PTR [ebx+eax*8-0x6c],bh
  40a447:	lahf   
  40a448:	cmp    al,0xc
  40a44a:	add    dh,BYTE PTR [edi+0x778d110a]
  40a450:	pop    esp
  40a451:	leave  
  40a452:	xor    bh,BYTE PTR [eax+0x22]
  40a455:	push   ebp
  40a456:	push   edx
  40a457:	popf   
  40a458:	push   esi
  40a459:	and    eax,0xb162eafe
  40a45e:	mov    ch,BYTE PTR [ecx]
  40a460:	daa    
  40a461:	rcl    BYTE PTR [ebp-0x3],0xe6
  40a465:	push   edx
  40a466:	ds fwait
  40a468:	mov    ds:0x7bdddc94,al
  40a46d:	call   DWORD PTR [eax-0x520ebd71]
  40a473:	add    BYTE PTR [ebx],al
  40a475:	fldenv [ecx-0x6c]
  40a478:	gs aam 0x10
  40a47b:	adc    al,0x63
  40a47d:	inc    ebx
  40a47e:	and    ah,bh
  40a480:	nop
  40a481:	inc    esi
  40a482:	ss call 0x2665:0x6ff120a9
  40a48a:	or     al,0x34
  40a48c:	push   cs
  40a48d:	xchg   ecx,eax
  40a48e:	push   edi
  40a48f:	ds pop edi
  40a491:	or     eax,ebx
  40a493:	pop    eax
  40a494:	(bad)  
  40a495:	jmp    0x40a455
  40a497:	jg     0x40a494
  40a499:	cmp    bl,BYTE PTR [edi+0x138d9391]
  40a49f:	and    BYTE PTR ds:0x9a389926,dl
  40a4a5:	jo     0x40a50a
  40a4a7:	cld    
  40a4a8:	fidiv  DWORD PTR [edi+0xfc9f5ac]
  40a4ae:	enter  0xcc80,0xcb
  40a4b2:	shl    ebp,1
  40a4b4:	ds mov bh,0x4e
  40a4b7:	aas    
  40a4b8:	ds daa 
  40a4ba:	adc    al,0xd
  40a4bc:	adc    edx,DWORD PTR [edi+ecx*2-0x5c4bb04e]
  40a4c3:	xchg   DWORD PTR [esi-0x46f5e81],esi
  40a4c9:	ret    0x8912
  40a4cc:	cmp    BYTE PTR [edx],ch
  40a4ce:	jecxz  0x40a4ba
  40a4d0:	pop    ds
  40a4d1:	mov    al,ds:0x1671b661
  40a4d6:	xor    BYTE PTR [ebp+0x5c],0xd2
  40a4da:	daa    
  40a4db:	xor    edi,DWORD PTR [ecx+0x52644442]
  40a4e1:	add    ah,dh
  40a4e3:	repnz or bh,BYTE PTR [ecx+0x3d653990]
  40a4ea:	mov    ebx,edi
  40a4ec:	ds jae 0x40a55f
  40a4ef:	sub    ecx,DWORD PTR [ecx+eax*4+0x68d53565]
  40a4f6:	sbb    DWORD PTR [edi+0xb7b4310],ecx
  40a4fc:	imul   ecx,DWORD PTR [ebp-0x55894b5],0xffffffc7
  40a503:	pop    edi
  40a504:	or     BYTE PTR [edi],al
  40a506:	div    dl
  40a508:	shr    esi,cl
  40a50a:	hlt    
  40a50b:	or     ecx,DWORD PTR [edx-0x4a532a12]
  40a511:	out    dx,eax
  40a512:	dec    esp
  40a513:	outs   dx,DWORD PTR ds:[esi]
  40a514:	(bad)  
  40a515:	ins    BYTE PTR es:[edi],dx
  40a516:	and    esp,DWORD PTR [ebp+eiz*2-0x4d]
  40a51a:	and    edx,0xd050be98
  40a520:	bound  esp,QWORD PTR [eax]
  40a522:	and    eax,DWORD PTR [edi-0x56fce285]
  40a528:	mov    al,ds:0xf5e46db6
  40a52d:	js     0x40a4f3
  40a52f:	jns    0x40a5ac
  40a531:	sub    al,0x68
  40a533:	jb     0x40a536
  40a535:	mov    eax,0xc656c387
  40a53a:	scas   eax,DWORD PTR es:[edi]
  40a53b:	cmp    eax,0x7721b9e1
  40a540:	retf   
  40a541:	daa    
  40a542:	clc    
  40a543:	and    al,0xf1
  40a545:	loope  0x40a556
  40a547:	xor    eax,DWORD PTR ss:[ebx+0x69d87d31]
  40a54e:	gs popa 
  40a550:	fcom   DWORD PTR [edi]
  40a552:	dec    DWORD PTR [ecx+0x508d3ffc]
  40a558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a559:	jecxz  0x40a4e0
  40a55b:	(bad)  
  40a55c:	jns    0x40a534
  40a55e:	sbb    eax,0x1108f52e
  40a563:	jae    0x40a58d
  40a565:	pusha  
  40a566:	dec    ax
  40a568:	lock cmp ah,al
  40a56b:	and    al,0xe9
  40a56d:	je     0x40a5a4
  40a56f:	cmp    eax,0x4971bc27
  40a574:	ins    BYTE PTR es:[edi],dx
  40a575:	jns    0x40a5ae
  40a577:	cmp    eax,0x81ee5016
  40a57c:	mov    DWORD PTR [ecx],ecx
  40a57e:	nop
  40a57f:	bound  ebx,QWORD PTR [edx-0xe97da05]
  40a585:	mov    dl,0xfb
  40a587:	sbb    al,BYTE PTR ds:0xc1652f3a
  40a58d:	test   DWORD PTR [edx+ecx*2+0x52],ebp
  40a591:	or     ebp,DWORD PTR [ebp+ecx*4-0x3e94dfca]
  40a598:	out    0xdd,eax
  40a59a:	sub    bl,cl
  40a59c:	scas   eax,DWORD PTR es:[edi]
  40a59d:	and    ebx,DWORD PTR [edi]
  40a59f:	mov    esi,0xf2c1b3df
  40a5a4:	leave  
  40a5a5:	mov    WORD PTR [ecx],cs
  40a5a7:	pop    ecx
  40a5a8:	ss mov ebx,ebx
  40a5ab:	push   ss
  40a5ac:	adc    ch,dl
  40a5ae:	jno    0x40a53f
  40a5b0:	je     0x40a5ab
  40a5b2:	les    edx,FWORD PTR [edx+0x2]
  40a5b5:	lea    ecx,[ebp+0x1d]
  40a5b8:	(bad)  
  40a5b9:	dec    ebx
  40a5ba:	imul   edi,DWORD PTR [ecx-0x1d],0xffffffff
  40a5be:	je     0x40a5c3
  40a5c0:	retf   
  40a5c1:	fadd   st(0),st
  40a5c3:	std    
  40a5c4:	ins    BYTE PTR es:[edi],dx
  40a5c5:	adc    al,BYTE PTR [ecx]
  40a5c7:	push   edi
  40a5c8:	fstp   DWORD PTR [ecx-0x75e43648]
  40a5ce:	xor    eax,0x7f7a696d
  40a5d3:	inc    dx
  40a5d5:	xchg   ebx,eax
  40a5d6:	dec    edx
  40a5d7:	inc    edi
  40a5d8:	and    ch,BYTE PTR [edx-0x35]
  40a5db:	sub    DWORD PTR [eax-0x5f15aa26],edi
  40a5e1:	jo     0x40a5f8
  40a5e3:	pop    edi
  40a5e4:	and    esp,DWORD PTR [esi+ecx*1+0x31]
  40a5e8:	sub    al,0x86
  40a5ea:	jl     0x40a5f4
  40a5ec:	jb     0x40a621
  40a5ee:	in     eax,0xbb
  40a5f0:	in     ax,0x22
  40a5f3:	sahf   
  40a5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f5:	pop    ecx
  40a5f6:	aas    
  40a5f7:	mov    al,0x92
  40a5f9:	mov    WORD PTR [ebp-0x4d],gs
  40a5fc:	jge    0x40a57f
  40a5fe:	pop    es
  40a5ff:	lock or ch,BYTE PTR [esi-0x5]
  40a603:	xchg   ecx,eax
  40a604:	int    0x9d
  40a606:	gs int 0xf6
  40a609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a60a:	neg    BYTE PTR [esi-0x7f]
  40a60d:	cli    
  40a60e:	jnp    0x40a629
  40a610:	clc    
  40a611:	outs   dx,BYTE PTR ds:[esi]
  40a612:	(bad)  
  40a614:	enter  0xec67,0xee
  40a618:	fcomp  st(1)
  40a61a:	iret   
  40a61b:	jecxz  0x40a639
  40a61d:	or     eax,0x9cd149bc
  40a622:	inc    edx
  40a623:	sbb    DWORD PTR [ebx-0x62],esp
  40a626:	sbb    ch,al
  40a628:	push   ecx
  40a629:	pop    ebx
  40a62a:	fnstenv [ebx-0x16496292]
  40a630:	lahf   
  40a631:	das    
  40a632:	pop    ecx
  40a633:	in     eax,dx
  40a634:	loop   0x40a67e
  40a636:	add    DWORD PTR [eax+0x37],0x41
  40a63a:	scas   eax,DWORD PTR es:[edi]
  40a63b:	fadd   DWORD PTR [ecx-0x4009484b]
  40a641:	iret   
  40a642:	fwait
  40a643:	mov    ds:0x8abf46b6,eax
  40a648:	lahf   
  40a649:	sbb    dl,BYTE PTR [edx+0x24]
  40a64c:	fisttp WORD PTR [ebp-0x6790a40f]
  40a652:	ins    DWORD PTR es:[edi],dx
  40a653:	test   WORD PTR [esi],dx
  40a656:	inc    esi
  40a657:	fcmovnb st,st(3)
  40a659:	pop    ecx
  40a65a:	outs   dx,BYTE PTR ds:[esi]
  40a65b:	adc    eax,0x76a8228a
  40a660:	or     edx,DWORD PTR [edi-0x34]
  40a663:	pop    ebp
  40a664:	or     BYTE PTR [ebx+0x9],dl
  40a667:	dec    ebp
  40a668:	cmp    eax,0xdb38a63f
  40a66d:	and    BYTE PTR [ebx-0x7dd0d9c7],cl
  40a673:	mov    bh,0x90
  40a675:	scas   eax,DWORD PTR es:[edi]
  40a676:	retf   
  40a677:	push   0x8ad48cd0
  40a67c:	and    dh,BYTE PTR [ebx+0x6c5e917a]
  40a682:	sub    eax,0x693d9bf4
  40a687:	mov    cl,BYTE PTR [esi]
  40a689:	lea    eax,[esi-0x7c]
  40a68c:	mov    bl,0xf9
  40a68e:	mov    bl,0x1e
  40a690:	add    dl,BYTE PTR [ebx]
  40a692:	call   0x262:0xc1ac29c5
  40a699:	int3   
  40a69a:	push   ebx
  40a69b:	lds    ebp,FWORD PTR [esi+0x3debd577]
  40a6a1:	int3   
  40a6a2:	fdivr  st(0),st
  40a6a4:	outs   dx,DWORD PTR ds:[esi]
  40a6a5:	mov    gs,esi
  40a6a7:	and    esi,DWORD PTR [ebp-0x6f267fcc]
  40a6ad:	pop    ecx
  40a6ae:	(bad)  
  40a6af:	push   ecx
  40a6b0:	jne    0x40a67c
  40a6b2:	sbb    bl,al
  40a6b4:	mov    BYTE PTR [edi-0x87a460e],cl
  40a6ba:	inc    eax
  40a6bb:	stos   BYTE PTR es:[edi],al
  40a6bc:	sbb    ebx,DWORD PTR [ebx+edi*2-0x4fd58c4b]
  40a6c3:	push   ebx
  40a6c4:	push   cs
  40a6c5:	jle    0x40a71f
  40a6c7:	icebp  
  40a6c8:	aam    0xc5
  40a6ca:	mov    edx,0xeb080795
  40a6cf:	pop    esp
  40a6d0:	adc    dh,dl
  40a6d2:	in     al,dx
  40a6d3:	adc    al,0x2c
  40a6d5:	pop    esp
  40a6d6:	std    
  40a6d7:	mov    ebp,0xd8dc0836
  40a6dc:	loop   0x40a72a
  40a6de:	mov    ebx,0xe68eb42e
  40a6e3:	int    0x9f
  40a6e5:	jg     0x40a675
  40a6e7:	and    edx,DWORD PTR [ecx+0x30]
  40a6ea:	in     al,0x1a
  40a6ec:	xor    edx,DWORD PTR [ecx]
  40a6ee:	xor    DWORD PTR [esp+ebp*1-0x1188f53c],ebp
  40a6f5:	cmp    BYTE PTR [edx-0x80],0xbd
  40a6f9:	or     DWORD PTR [edx+esi*8+0x3f],0x2e
  40a6fe:	stos   DWORD PTR es:[edi],eax
  40a6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a700:	mov    ch,0x3e
  40a702:	lock into 
  40a704:	sbb    edx,DWORD PTR [esi+0xa]
  40a707:	sub    eax,DWORD PTR [edx+0x4e3c6c1b]
  40a70d:	adc    ecx,eax
  40a70f:	mov    al,BYTE PTR [esi+0x1d]
  40a712:	xchg   ebx,eax
  40a713:	and    al,0x45
  40a715:	(bad)  
  40a716:	adc    ecx,ecx
  40a718:	mov    eax,ds:0x4e8f525e
  40a71d:	mov    edx,0x6e0f799e
  40a722:	sub    al,0x64
  40a724:	daa    
  40a725:	bound  eax,QWORD PTR [eax]
  40a727:	shr    DWORD PTR [edx+ecx*4+0x62],1
  40a72b:	cmp    eax,0xdf0236e4
  40a730:	ins    DWORD PTR es:[edi],dx
  40a731:	jge    0x40a78c
  40a733:	pop    esi
  40a734:	mov    al,ds:0x4f110cc9
  40a739:	adc    al,0x5b
  40a73b:	sub    eax,0xf3318dfb
  40a740:	xchg   ebx,eax
  40a741:	mov    ah,0xeb
  40a743:	(bad)  
  40a744:	dec    edx
  40a745:	fidivr WORD PTR [edi]
  40a747:	pusha  
  40a748:	pop    eax
  40a749:	lods   al,BYTE PTR ds:[esi]
  40a74a:	lahf   
  40a74b:	enter  0xed2f,0xb3
  40a74f:	dec    esp
  40a750:	dec    edi
  40a751:	mov    esi,0x7d62805b
  40a756:	addr16 addr16 lock mov ah,0x67
  40a75b:	in     al,dx
  40a75c:	pop    edi
  40a75d:	dec    edx
  40a75e:	mov    ah,0x57
  40a760:	mov    ah,0xa
  40a762:	cs push edi
  40a764:	inc    edx
  40a765:	pushf  
  40a766:	xchg   DWORD PTR [edx],edi
  40a768:	scas   eax,DWORD PTR es:[edi]
  40a769:	xchg   ecx,eax
  40a76a:	lods   eax,DWORD PTR ds:[esi]
  40a76b:	aad    0x72
  40a76d:	or     eax,edx
  40a76f:	nop
  40a770:	cli    
  40a771:	jnp    0x40a7cb
  40a773:	push   ecx
  40a774:	inc    esi
  40a775:	fistp  WORD PTR [ebp+0x23]
  40a778:	cmp    eax,0xf31778ad
  40a77d:	inc    eax
  40a77e:	inc    ebx
  40a77f:	or     BYTE PTR [edi-0x28],ah
  40a782:	or     BYTE PTR ds:0x1efa5e47,al
  40a788:	fs or  eax,0xa518efec
  40a78e:	mov    edi,0x8bf04d8b
  40a793:	push   ebp
  40a794:	hlt    
  40a795:	xor    eax,edi
  40a797:	shl    ecx,0x1e
  40a79a:	mov    ecx,DWORD PTR [ebp-0x14]
  40a79d:	xor    edx,edx
  40a79f:	or     eax,edx
  40a7a1:	mov    cl,BYTE PTR [eax+ecx*1]
  40a7a4:	mov    eax,DWORD PTR [ebp-0x34]
  40a7a7:	jmp    0x40ad31
  40a7ac:	inc    ebx
  40a7ad:	dec    esi
  40a7ae:	aad    0x8e
  40a7b0:	fcom   DWORD PTR [eax+ebx*1]
  40a7b3:	inc    edx
  40a7b4:	loop   0x40a7dd
  40a7b6:	ds push 0xa8d8e8dd
  40a7bc:	or     ax,0x1616
  40a7c0:	cmp    eax,0x20161604
  40a7c5:	mov    ah,dh
  40a7c7:	adc    eax,0x9fcf6123
  40a7cc:	ss js  0x40a794
  40a7cf:	loopne 0x40a7a7
  40a7d1:	push   esi
  40a7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d3:	mov    cl,0xce
  40a7d5:	xor    eax,0x8a15e792
  40a7da:	push   ss
  40a7db:	xor    al,0x4d
  40a7dd:	or     DWORD PTR [ecx+0x28a3d71c],esp
  40a7e3:	sbb    eax,0x596e9b0a
  40a7e8:	sbb    edi,esi
  40a7ea:	imul   eax,DWORD PTR [ecx+0x52],0xffffffe7
  40a7ee:	or     dh,BYTE PTR [edx+edi*1]
  40a7f1:	sahf   
  40a7f2:	xchg   ebx,eax
  40a7f3:	and    bh,BYTE PTR [edx]
  40a7f5:	mov    ecx,0x1f47ef77
  40a7fa:	test   al,0x1b
  40a7fc:	push   edx
  40a7fd:	adc    DWORD PTR [ecx+eax*1+0x63],edx
  40a801:	xchg   BYTE PTR [edi-0x64],ah
  40a804:	outs   dx,DWORD PTR ds:[esi]
  40a805:	push   0x4ca7c121
  40a80a:	xchg   DWORD PTR [edx],eax
  40a80c:	xor    ch,BYTE PTR [esi+ecx*8]
  40a80f:	inc    edi
  40a810:	or     edi,DWORD PTR [eax-0x29]
  40a813:	out    dx,eax
  40a814:	xchg   ebp,eax
  40a815:	imul   ebp,DWORD PTR [eax-0x7e56a38f],0x1c
  40a81c:	aam    0x39
  40a81e:	stos   DWORD PTR es:[edi],eax
  40a81f:	sub    eax,0x41ab57ff
  40a824:	xchg   ebp,eax
  40a825:	jb     0x40a803
  40a827:	pop    ebx
  40a828:	or     ah,ah
  40a82a:	sar    esi,0x85
  40a82d:	mov    dh,0x86
  40a82f:	xor    DWORD PTR [ecx+0x43edc0a5],0x6e
  40a836:	push   es
  40a837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a838:	jle    0x40a7f2
  40a83a:	mov    al,0xda
  40a83c:	sub    eax,0xe5e49c
  40a841:	mov    ebx,0x1b588d07
  40a846:	add    BYTE PTR [edi-0x41],bh
  40a849:	xor    BYTE PTR [eax-0x3700e7f6],0xb2
  40a850:	fdiv   DWORD PTR [eax+0x7fa8b3af]
  40a856:	fmul   QWORD PTR [eax+ebp*2+0x13]
  40a85a:	sub    esp,esp
  40a85c:	push   edx
  40a85d:	cmp    ebx,DWORD PTR [eax-0x65f066fd]
  40a863:	sbb    al,0x2e
  40a865:	mov    DWORD PTR [eax+eiz*8],0x6e2a128
  40a86c:	inc    edx
  40a86d:	dec    esi
  40a86e:	and    eax,DWORD PTR [edx]
  40a870:	dec    esi
  40a871:	dec    edi
  40a872:	mov    WORD PTR [eax-0x3e925318],ss
  40a878:	mov    edi,0x3f86f04b
  40a87d:	ins    BYTE PTR es:[edi],dx
  40a87e:	stos   BYTE PTR es:[edi],al
  40a87f:	es loopne 0x40a895
  40a882:	call   0xb0d1:0xba4e5fed
  40a889:	mov    edx,DWORD PTR [edi-0x3d6ec28c]
  40a88f:	and    al,0xf8
  40a891:	iret   
  40a892:	xor    ch,BYTE PTR [eax+ebx*8]
  40a895:	(bad)  [eax]
  40a897:	(bad)  
  40a898:	std    
  40a899:	or     bl,BYTE PTR ds:0xb57c77c1
  40a89f:	push   0x3b92b3f1
  40a8a4:	int3   
  40a8a5:	ja     0x40a879
  40a8a7:	sti    
  40a8a8:	je     0x40a90b
  40a8aa:	xchg   edx,eax
  40a8ab:	or     BYTE PTR [ebp+0x4e753473],ch
  40a8b1:	xchg   esp,eax
  40a8b2:	rcl    BYTE PTR [esi-0x2a],cl
  40a8b5:	adc    ch,BYTE PTR [ecx-0x27]
  40a8b8:	cli    
  40a8b9:	pop    eax
  40a8ba:	retf   0x3fda
  40a8bd:	pop    edx
  40a8be:	sub    DWORD PTR [edi],ebp
  40a8c0:	sahf   
  40a8c1:	or     eax,0x393a7aab
  40a8c6:	mov    ss,WORD PTR [edx]
  40a8c8:	push   edx
  40a8c9:	dec    edi
  40a8ca:	popf   
  40a8cb:	imul   ecx,DWORD PTR [edx+0x36bab0cf],0xffffffa0
  40a8d2:	daa    
  40a8d3:	ror    dh,cl
  40a8d5:	call   0x8a99:0x6b28e6fd
  40a8dc:	mov    ecx,0x1039b681
  40a8e1:	clc    
  40a8e2:	out    dx,al
  40a8e3:	leave  
  40a8e4:	popf   
  40a8e5:	inc    edi
  40a8e6:	adc    al,0x1a
  40a8e8:	mov    esp,0x57a31d3b
  40a8ed:	sub    ebx,DWORD PTR [esi]
  40a8ef:	cdq    
  40a8f0:	or     esp,DWORD PTR [ebx]
  40a8f2:	shr    BYTE PTR [edx+0x2c],1
  40a8f5:	and    DWORD PTR [eax+0x474b8ff4],0x743e6ae4
  40a8ff:	mov    eax,ds:0x29ebdb52
  40a904:	mul    DWORD PTR [ecx+0x173daed5]
  40a90a:	sub    eax,0xf1fc68bc
  40a90f:	clc    
  40a910:	xchg   ebx,eax
  40a911:	retf   0x593e
  40a914:	mov    ?,WORD PTR es:[eax-0x630a3bac]
  40a91b:	rol    BYTE PTR [ebp-0x7dbd376c],0x1a
  40a922:	mov    dh,0xa1
  40a924:	pop    ss
  40a925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a926:	clc    
  40a927:	jmp    0xfff6b0fa
  40a92c:	sbb    ebp,ebp
  40a92e:	lea    ecx,[ecx+esi*1-0x4e]
  40a932:	mov    al,ss:0x812f0c3f
  40a938:	ds sbb al,0x4b
  40a93b:	iret   
  40a93c:	sub    DWORD PTR [edx+0x5b],edi
  40a93f:	mov    ah,cl
  40a941:	push   esp
  40a942:	push   ss
  40a943:	fadd   st,st(4)
  40a945:	xor    bl,bl
  40a947:	inc    esp
  40a948:	mov    cs,ebx
  40a94a:	xor    dh,BYTE PTR [ecx]
  40a94c:	(bad)  
  40a94e:	sub    eax,0x9b77473b
  40a953:	dec    DWORD PTR [edi]
  40a955:	pop    es
  40a956:	aad    0xc
  40a958:	repz inc ebx
  40a95a:	aam    0x75
  40a95c:	ror    edx,1
  40a95e:	(bad)  
  40a95f:	out    dx,eax
  40a960:	bound  edi,QWORD PTR [edx-0x3b]
  40a963:	ins    DWORD PTR es:[edi],dx
  40a964:	mov    al,ds:0xb67b9cd3
  40a969:	in     eax,0x46
  40a96b:	popf   
  40a96c:	rcr    ebp,0x9f
  40a96f:	dec    esi
  40a970:	xchg   esp,eax
  40a971:	push   ss
  40a972:	in     eax,0xff
  40a974:	daa    
  40a975:	ret    0x7187
  40a978:	cmp    BYTE PTR [ebx+edx*2+0x60],ah
  40a97c:	dec    esi
  40a97d:	and    eax,0xcf02e072
  40a982:	gs in  al,dx
  40a984:	jp     0x40a9d1
  40a986:	retf   
  40a987:	cmp    eax,0x2cecf103
  40a98c:	mov    edx,0x7968007d
  40a991:	ret    
  40a992:	stos   DWORD PTR es:[edi],eax
  40a993:	inc    esp
  40a994:	in     al,0xa3
  40a996:	inc    ecx
  40a997:	sub    DWORD PTR [esi+edx*8],edx
  40a99a:	dec    eax
  40a99b:	nop
  40a99c:	out    0x4,al
  40a99e:	rcl    cl,0xb5
  40a9a1:	pop    edx
  40a9a2:	aam    0xae
  40a9a4:	pop    esi
  40a9a5:	sar    edi,cl
  40a9a7:	dec    esi
  40a9a8:	mov    ch,BYTE PTR [edi+edx*2-0x35]
  40a9ac:	out    0x76,al
  40a9ae:	sar    edi,1
  40a9b0:	sar    DWORD PTR [esi-0x6fd632c7],1
  40a9b6:	push   esp
  40a9b7:	sub    ebx,DWORD PTR [ebx]
  40a9b9:	inc    ecx
  40a9ba:	cwde   
  40a9bb:	aam    0xc4
  40a9bd:	mov    ebp,0xec40199a
  40a9c2:	popa   
  40a9c3:	xlat   BYTE PTR ds:[ebx]
  40a9c4:	mov    ebx,0x52855687
  40a9c9:	addr16 or al,0x5e
  40a9cc:	push   cs
  40a9cd:	je     0x40a9a5
  40a9cf:	sbb    eax,DWORD PTR [ebx-0x33e2e1ca]
  40a9d5:	jmp    0x1164:0xd4fe9772
  40a9dc:	imul   esp,DWORD PTR [ecx-0x44497dd4],0x97b1b16c
  40a9e6:	jno    0x40aa1c
  40a9e8:	mov    esi,0xfc38f91e
  40a9ed:	mov    edx,0x20a3b5e1
  40a9f2:	ficomp DWORD PTR [ecx]
  40a9f4:	inc    esi
  40a9f5:	dec    esp
  40a9f6:	(bad)
  40a9f9:	stos   BYTE PTR es:[edi],al
  40a9fa:	cmp    DWORD PTR fs:[eax+0x1d89d70d],esp
  40aa01:	sbb    DWORD PTR [ecx+0x5a],esp
  40aa04:	mov    al,0xdd
  40aa06:	sub    DWORD PTR [ebp-0x16],eax
  40aa09:	cs popf 
  40aa0b:	inc    BYTE PTR [esp+esi*8-0x4a]
  40aa0f:	shl    DWORD PTR ds:0x44094b90,1
  40aa15:	dec    edi
  40aa16:	cmc    
  40aa17:	mov    al,0xff
  40aa19:	std    
  40aa1a:	pop    eax
  40aa1b:	in     eax,0x19
  40aa1d:	cmp    al,0x9b
  40aa1f:	xchg   esp,eax
  40aa20:	push   ss
  40aa21:	adc    eax,0xeee13b82
  40aa26:	and    eax,0x6b20ce17
  40aa2b:	dec    eax
  40aa2c:	(bad)  
  40aa2d:	outs   dx,BYTE PTR ds:[esi]
  40aa2e:	jp     0x40aa11
  40aa30:	dec    ecx
  40aa31:	out    0x27,al
  40aa33:	mov    bl,cl
  40aa35:	test   DWORD PTR [ecx+0x3c610381],0x5e70b666
  40aa3f:	xchg   DWORD PTR [edx],edx
  40aa41:	enter  0x2ebd,0xf2
  40aa45:	xchg   edx,eax
  40aa46:	nop
  40aa47:	or     BYTE PTR [esi],0x32
  40aa4a:	aas    
  40aa4b:	js     0x40aa9b
  40aa4d:	shl    BYTE PTR [edi-0x37df71db],0xbf
  40aa54:	add    eax,0xcb626576
  40aa59:	pop    ss
  40aa5a:	adc    dl,bl
  40aa5c:	jle    0x40aa80
  40aa5e:	in     eax,0x57
  40aa60:	mov    dl,0x69
  40aa62:	mul    DWORD PTR [esi]
  40aa64:	push   cs
  40aa65:	sbb    eax,0x5d71df61
  40aa6a:	cwde   
  40aa6b:	in     eax,0xec
  40aa6d:	pop    eax
  40aa6e:	jne    0x40aab7
  40aa70:	xchg   edi,eax
  40aa71:	push   edi
  40aa72:	je     0x40aa63
  40aa74:	sar    DWORD PTR [esi+0x193bc205],0xf2
  40aa7b:	push   esp
  40aa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7d:	popf   
  40aa7e:	aaa    
  40aa7f:	or     ecx,0x8e3bb8eb
  40aa85:	fst    QWORD PTR [esi+0x48]
  40aa88:	pop    ebp
  40aa89:	and    al,0xfa
  40aa8b:	or     eax,0x61525f36
  40aa90:	pop    es
  40aa91:	mov    DWORD PTR [ebx],ebx
  40aa93:	maskmovq mm0,(bad)
  40aa94:	test   DWORD PTR [edx],0xec939f0f
  40aa9a:	(bad)  
  40aa9b:	sahf   
  40aa9c:	mov    edx,0xfac55900
  40aaa1:	add    ebp,DWORD PTR [esi]
  40aaa3:	fucomi st,st(0)
  40aaa5:	or     eax,0x1a7af25b
  40aaaa:	popf   
  40aaab:	xchg   edx,eax
  40aaac:	xchg   esi,eax
  40aaad:	cmp    al,BYTE PTR [ecx]
  40aaaf:	and    eax,0x7bd0d01d
  40aab4:	jmp    0x7291:0x8e0718b1
  40aabb:	(bad)  
  40aabc:	lods   al,BYTE PTR ds:[esi]
  40aabd:	out    0x30,eax
  40aabf:	push   esi
  40aac0:	inc    ecx
  40aac1:	jle    0x40aadd
  40aac3:	out    dx,al
  40aac4:	lock dec esp
  40aac6:	test   BYTE PTR [ebp+0x63],ah
  40aac9:	cmp    edi,DWORD PTR [edi+0x787a67bf]
  40aacf:	adc    esi,DWORD PTR [edx-0x71]
  40aad2:	dec    ebx
  40aad3:	dec    ecx
  40aad4:	arpl   WORD PTR [bp+di],ax
  40aad7:	out    dx,al
  40aad8:	cmp    eax,0x261391d6
  40aadd:	inc    ebp
  40aade:	push   ebx
  40aadf:	pop    esi
  40aae0:	mov    dh,0x1b
  40aae2:	(bad)  
  40aae3:	(bad)  
  40aae4:	mov    esi,0xfa32d971
  40aae9:	loop   0x40aaf2
  40aaeb:	add    DWORD PTR [ebp+0x41],edi
  40aaee:	xor    al,0xf3
  40aaf0:	shr    BYTE PTR [edi],1
  40aaf2:	mov    edx,0x867e89fc
  40aaf7:	add    BYTE PTR [ebx+0x3b153018],ch
  40aafd:	and    DWORD PTR [edx+0x58],0x3b
  40ab01:	call   0x165b249f
  40ab06:	dec    ebp
  40ab07:	in     al,0xf4
  40ab09:	mov    WORD PTR ds:0x479c2e1a,es
  40ab0f:	bound  ebx,QWORD PTR [edx]
  40ab11:	mov    bl,0x8b
  40ab13:	sub    bh,bh
  40ab15:	(bad)  [esi+eax*8+0x375cbd0f]
  40ab1c:	in     al,dx
  40ab1d:	and    DWORD PTR [eax+0x1a],edx
  40ab20:	les    esi,FWORD PTR [esi]
  40ab22:	mov    esi,0x1e19e5c1
  40ab27:	into   
  40ab28:	and    edi,DWORD PTR [ebp+0x4b]
  40ab2b:	and    DWORD PTR [ecx-0x4d],edx
  40ab2e:	push   ds
  40ab2f:	inc    edi
  40ab30:	dec    edi
  40ab31:	stos   BYTE PTR es:[edi],al
  40ab32:	jae    0x40aae3
  40ab34:	in     eax,0x80
  40ab36:	mov    cl,0x1
  40ab38:	push   ebx
  40ab39:	push   eax
  40ab3a:	cdq    
  40ab3b:	mov    edx,0xe6b61904
  40ab40:	rcl    BYTE PTR [edi],cl
  40ab42:	mov    ecx,0x329fbfc0
  40ab47:	cmp    al,0x4d
  40ab49:	jl     0x40aba3
  40ab4b:	pop    ebx
  40ab4c:	lods   eax,DWORD PTR ds:[esi]
  40ab4d:	and    esi,DWORD PTR [eax]
  40ab4f:	mov    dh,0xcf
  40ab51:	cli    
  40ab52:	aaa    
  40ab53:	or     bh,BYTE PTR [eax]
  40ab55:	ins    BYTE PTR es:[edi],dx
  40ab56:	loope  0x40ab8f
  40ab58:	rcl    BYTE PTR [edi-0x51],1
  40ab5b:	jge    0x40ab6f
  40ab5d:	push   edi
  40ab5e:	aaa    
  40ab5f:	jecxz  0x40aaef
  40ab61:	fild   QWORD PTR ds:0x63f0dae6
  40ab67:	mov    esp,0xa978cd84
  40ab6c:	std    
  40ab6d:	inc    eax
  40ab6e:	xchg   ebx,eax
  40ab6f:	pop    ds
  40ab70:	dec    esp
  40ab71:	inc    ebp
  40ab72:	dec    edx
  40ab73:	(bad)  
  40ab75:	clc    
  40ab76:	(bad)  [edi-0x2f]
  40ab79:	popf   
  40ab7a:	outs   dx,BYTE PTR ds:[esi]
  40ab7b:	xor    dl,ch
  40ab7d:	jns    0x40abdc
  40ab7f:	test   BYTE PTR ds:0x4e976f47,dl
  40ab85:	adc    eax,ebx
  40ab87:	popa   
  40ab88:	xchg   ah,dh
  40ab8a:	mov    edx,0x8ffcac9f
  40ab8f:	mov    edi,0x1985ba43
  40ab94:	into   
  40ab95:	sub    dh,BYTE PTR [edx-0x18]
  40ab98:	and    dl,BYTE PTR [esi+edx*1]
  40ab9b:	dec    esi
  40ab9c:	push   ss
  40ab9d:	je     0x40abd6
  40ab9f:	push   ecx
  40aba0:	xchg   ebp,eax
  40aba1:	dec    esi
  40aba2:	jp     0x40ab54
  40aba4:	xchg   ebx,eax
  40aba5:	bound  ebx,QWORD PTR [eax]
  40aba7:	sub    ecx,ebp
  40aba9:	jae    0x40ab3e
  40abab:	add    bh,BYTE PTR gs:[ebp+0x78]
  40abaf:	dec    ebp
  40abb0:	xchg   ecx,eax
  40abb1:	jae    0x40ab92
  40abb3:	inc    ebx
  40abb4:	mov    ecx,0xe754ef72
  40abb9:	retf   
  40abba:	ror    esp,0xd9
  40abbd:	mov    edi,ss
  40abbf:	dec    ecx
  40abc0:	cs ja  0x40aba8
  40abc3:	sbb    DWORD PTR [edx],edi
  40abc5:	dec    eax
  40abc6:	sahf   
  40abc7:	add    eax,0xd2ea5985
  40abcc:	jno    0x40ac0e
  40abce:	and    bh,BYTE PTR [esi-0x74]
  40abd1:	out    dx,eax
  40abd2:	in     al,0x5d
  40abd4:	ins    DWORD PTR es:[edi],dx
  40abd5:	sub    ch,al
  40abd7:	stos   BYTE PTR es:[edi],al
  40abd8:	xor    al,0x40
  40abda:	jecxz  0x40abee
  40abdc:	mov    bl,0xc6
  40abde:	xor    BYTE PTR [ebx-0x32],dh
  40abe1:	into   
  40abe2:	xchg   ebx,eax
  40abe3:	and    ebx,DWORD PTR [edx]
  40abe5:	sbb    esi,DWORD PTR [edi]
  40abe7:	sub    eax,0x8ea724ef
  40abec:	inc    edx
  40abed:	mov    al,0x61
  40abef:	adc    DWORD PTR ds:0xb92624c0,ebx
  40abf5:	adc    esp,DWORD PTR [ebx]
  40abf7:	xor    BYTE PTR [esi-0x6e61210a],dl
  40abfd:	test   dl,ch
  40abff:	repnz or DWORD PTR [eax],esi
  40ac02:	pop    ds
  40ac03:	lea    edx,[ebx+esi*4+0x33]
  40ac07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac08:	ret    0x9e04
  40ac0b:	inc    esp
  40ac0c:	clc    
  40ac0d:	push   es
  40ac0e:	mov    WORD PTR [eax-0x753ebbea],cs
  40ac14:	push   0x5d
  40ac16:	shl    BYTE PTR [ecx],0x62
  40ac19:	dec    esi
  40ac1a:	imul   eax,DWORD PTR [ebp+ecx*1-0x3c],0x1da0f470
  40ac22:	out    dx,eax
  40ac23:	and    bl,bl
  40ac25:	cmc    
  40ac26:	aad    0x35
  40ac28:	or     al,0x31
  40ac2a:	not    BYTE PTR [esi]
  40ac2c:	ret    0x9b7b
  40ac2f:	pop    edx
  40ac30:	and    esi,esi
  40ac32:	cmp    al,0xe9
  40ac34:	xor    cl,BYTE PTR [edx+eax*1+0x2e]
  40ac38:	add    eax,edi
  40ac3a:	xchg   ebp,eax
  40ac3b:	mov    al,ds:0x3a7f1604
  40ac40:	retf   0x4342
  40ac43:	cli    
  40ac44:	adc    BYTE PTR [edi-0xf20263],ch
  40ac4a:	sbb    BYTE PTR [eax],0x7b
  40ac4d:	xchg   ecx,eax
  40ac4e:	or     eax,0x5e59f083
  40ac53:	xchg   edx,eax
  40ac54:	dec    edx
  40ac55:	sbb    esp,ecx
  40ac57:	jg     0x40ac8c
  40ac59:	cmp    dl,ch
  40ac5b:	or     edx,ecx
  40ac5d:	arpl   WORD PTR [edi],di
  40ac5f:	adc    al,0xd9
  40ac61:	into   
  40ac62:	out    dx,eax
  40ac63:	loop   0x40ac04
  40ac65:	enter  0x5281,0x46
  40ac69:	xchg   BYTE PTR [edi+0x15bc006],al
  40ac6f:	or     BYTE PTR [ebx+ecx*4+0x436bcb9e],0x40
  40ac77:	or     DWORD PTR [ecx+eax*1],eax
  40ac7a:	popa   
  40ac7b:	rcl    BYTE PTR [edi+0x41c74d5d],cl
  40ac81:	cmp    ebp,DWORD PTR [eax-0x31bf2ee7]
  40ac87:	cmp    dh,dh
  40ac89:	sbb    DWORD PTR [ebx+0x3c],edi
  40ac8c:	push   0xffffffd1
  40ac8e:	cdq    
  40ac8f:	(bad)
  40ac94:	pop    ss
  40ac95:	lock pop esi
  40ac97:	mov    ds:0xdb13f977,eax
  40ac9c:	push   edi
  40ac9d:	cs int3 
  40ac9f:	push   ebx
  40aca0:	pusha  
  40aca1:	and    DWORD PTR [edi],0x24
  40aca4:	pop    ss
  40aca5:	cmc    
  40aca6:	(bad)  
  40aca7:	dec    esi
  40aca8:	push   es
  40aca9:	clc    
  40acaa:	add    dl,ah
  40acac:	enter  0x7bc3,0x61
  40acb0:	pusha  
  40acb1:	aas    
  40acb2:	adc    eax,eax
  40acb4:	icebp  
  40acb5:	xchg   esp,eax
  40acb6:	jl     0x40ad36
  40acb8:	ds push ebp
  40acba:	div    BYTE PTR fs:[edx-0x249c3c13]
  40acc1:	pop    esi
  40acc2:	add    DWORD PTR [ecx-0x4fe7b405],0x7431b6ce
  40accc:	popa   
  40accd:	cli    
  40acce:	sbb    al,0xe9
  40acd0:	imul   ebp,DWORD PTR [edi+eiz*8-0x938eac5],0xd
  40acd8:	xchg   esi,eax
  40acd9:	scas   eax,DWORD PTR es:[edi]
  40acda:	icebp  
  40acdb:	ins    DWORD PTR es:[edi],dx
  40acdc:	fsub   QWORD PTR [eax+0x50378a0b]
  40ace2:	sbb    eax,0x69fab925
  40ace7:	xchg   esp,eax
  40ace8:	(bad)  
  40ace9:	in     eax,dx
  40acea:	sub    dl,BYTE PTR [ebx]
  40acec:	mov    BYTE PTR [eax-0x1becad3f],ch
  40acf2:	dec    edi
  40acf3:	sub    BYTE PTR [ebp-0x6b6a6889],dh
  40acf9:	retf   
  40acfa:	jl     0x40acca
  40acfc:	scas   al,BYTE PTR es:[edi]
  40acfd:	mov    ds:0x273f846c,eax
  40ad02:	cmp    edi,ecx
  40ad04:	dec    eax
  40ad05:	xchg   ecx,eax
  40ad06:	lods   al,BYTE PTR ds:[esi]
  40ad07:	popa   
  40ad08:	mov    ch,0xbe
  40ad0a:	leave  
  40ad0b:	pop    esi
  40ad0c:	es xchg edx,eax
  40ad0e:	outs   dx,BYTE PTR ds:[esi]
  40ad0f:	icebp  
  40ad10:	and    edx,DWORD PTR [eax]
  40ad12:	dec    eax
  40ad13:	mov    ds:0xbbe2e779,eax
  40ad18:	push   0xffffffc2
  40ad1a:	adc    al,BYTE PTR [ebx-0x7a56c462]
  40ad20:	es cli 
  40ad22:	push   ecx
  40ad23:	das    
  40ad24:	(bad)  [ecx-0x42713107]
  40ad2a:	or     cl,BYTE PTR [edx+0xb]
  40ad2d:	cmp    eax,0x54c8b7
  40ad32:	or     BYTE PTR [ebx+0x4d8ba045],cl
  40ad38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad39:	shrd   eax,ecx,0x2
  40ad3d:	shr    ecx,0x2
  40ad40:	mov    ecx,DWORD PTR [ebp-0x60]
  40ad43:	mov    edx,DWORD PTR [ebp-0x5c]
  40ad46:	jmp    0x40b2d0
  40ad4b:	dec    ebx
  40ad4c:	adc    BYTE PTR [edi+0x4d],bl
  40ad4f:	adc    eax,0x89101919
  40ad54:	xchg   ebx,eax
  40ad55:	inc    esi
  40ad56:	mov    ah,0x30
  40ad58:	jge    0x40ad5b
  40ad5a:	mov    ah,0x8d
  40ad5c:	or     DWORD PTR [esi],edx
  40ad5e:	push   ss
  40ad5f:	cmp    eax,0x71161604
  40ad64:	pushf  
  40ad65:	and    ch,0xee
  40ad68:	xchg   edi,eax
  40ad69:	loop   0x40ad7a
  40ad6b:	cmp    ebp,ebp
  40ad6d:	in     al,dx
  40ad6e:	pop    ecx
  40ad6f:	in     al,0x14
  40ad71:	add    BYTE PTR [ebx-0x587519fb],dh
  40ad77:	icebp  
  40ad78:	or     ebp,edi
  40ad7a:	into   
  40ad7b:	xor    DWORD PTR [ecx+0x7bbaaf9],edx
  40ad81:	xchg   esi,eax
  40ad82:	mov    bh,0xe7
  40ad84:	dec    ebx
  40ad85:	std    
  40ad86:	retf   0x25a2
  40ad89:	ror    bh,cl
  40ad8b:	mov    DWORD PTR [eax],eax
  40ad8d:	lock nop
  40ad8f:	(bad)  
  40ad90:	xor    BYTE PTR [edi+0xd83e50c],bh
  40ad96:	mov    esi,0x6c7c6ab4
  40ad9b:	in     ax,0x1d
  40ad9e:	inc    esp
  40ad9f:	jns    0x40adc5
  40ada1:	bnd jno 0x40ada9
  40ada4:	pushf  
  40ada5:	loop   0x40adef
  40ada7:	jmp    0x40ae1b
  40ada9:	push   ecx
  40adaa:	imul   eax,ecx,0xffffff80
  40adad:	jge    0x40adce
  40adaf:	lahf   
  40adb0:	add    ebx,DWORD PTR [edx]
  40adb2:	bnd jno 0x40ad71
  40adb5:	mov    dl,0x16
  40adb7:	enter  0xcfac,0x40
  40adbb:	xlat   BYTE PTR gs:[ebx]
  40adbd:	ret    0xb63d
  40adc0:	in     eax,dx
  40adc1:	repz ret 0xde9c
  40adc5:	ffree  st(1)
  40adc7:	outs   dx,DWORD PTR ds:[esi]
  40adc8:	fnstsw WORD PTR [ebp+ebp*1+0x7bb9c3eb]
  40adcf:	sub    eax,0xa64e944e
  40add4:	xor    al,dl
  40add6:	jae    0x40ad6d
  40add8:	add    cl,bl
  40adda:	mov    eax,ds:0x7285057
  40addf:	adc    eax,DWORD PTR [edi]
  40ade1:	fst    QWORD PTR [ebx+eiz*1]
  40ade4:	cmp    ch,dh
  40ade6:	sbb    ebp,0x5b
  40ade9:	mov    edi,0x406df989
  40adee:	add    esp,eax
  40adf0:	push   eax
  40adf1:	inc    esi
  40adf2:	push   ebp
  40adf3:	ins    DWORD PTR es:[edi],dx
  40adf4:	imul   ecx,DWORD PTR [ebp-0x36],0x77ea17ac
  40adfb:	(bad)  
  40adfc:	cmp    esi,DWORD PTR [eax+0x5d4960bf]
  40ae02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae04:	bound  ecx,QWORD PTR [ecx+edi*4]
  40ae07:	dec    edi
  40ae08:	repnz hlt 
  40ae0a:	jle    0x40ae26
  40ae0c:	outs   dx,BYTE PTR ds:[esi]
  40ae0d:	xchg   ecx,eax
  40ae0e:	(bad)  
  40ae0f:	bound  edx,QWORD PTR [edx-0x895e7c9]
  40ae15:	sti    
  40ae16:	fadd   st(6),st
  40ae18:	(bad)
  40ae1b:	cs ss sahf 
  40ae1e:	loop   0x40ae9e
  40ae20:	xchg   ebp,eax
  40ae21:	sub    bl,BYTE PTR [eax-0x38]
  40ae24:	cli    
  40ae25:	pop    ds
  40ae26:	dec    ecx
  40ae27:	loop   0x40ae78
  40ae29:	loopne 0x40ae6a
  40ae2b:	xchg   BYTE PTR [edx+0x50],ch
  40ae2e:	adc    BYTE PTR [ecx+0x3d19e432],bh
  40ae34:	push   0x292d838c
  40ae39:	jae    0x40ae9f
  40ae3b:	or     DWORD PTR [edx],edx
  40ae3d:	jbe    0x40ae81
  40ae3f:	mov    ebp,0xacc55cca
  40ae44:	test   eax,0xf8683d38
  40ae49:	inc    ebx
  40ae4a:	mov    es,ebp
  40ae4c:	pusha  
  40ae4d:	inc    esp
  40ae4e:	xor    al,0xc8
  40ae50:	push   esp
  40ae51:	adc    esi,DWORD PTR [ecx+ecx*8]
  40ae54:	ds retf 
  40ae56:	into   
  40ae57:	jb     0x40ae12
  40ae59:	inc    esi
  40ae5a:	add    al,0xea
  40ae5c:	cld    
  40ae5d:	ja     0x40aec4
  40ae5f:	gs push eax
  40ae61:	cld    
  40ae62:	jb     0x40ae76
  40ae64:	cdq    
  40ae65:	ret    0xa39
  40ae68:	aas    
  40ae69:	out    dx,eax
  40ae6a:	mov    ebx,0x5745d3ac
  40ae6f:	push   edx
  40ae70:	pop    ebp
  40ae71:	frstor [ebx]
  40ae73:	xor    ecx,ebx
  40ae75:	xchg   ebp,eax
  40ae76:	cmp    DWORD PTR [esi+0x69],eax
  40ae79:	mov    DWORD PTR [eax-0x7027d7ea],eax
  40ae7f:	xchg   edi,eax
  40ae80:	mov    ecx,0xd99412e9
  40ae85:	aaa    
  40ae86:	inc    edx
  40ae87:	inc    cx
  40ae89:	lock gs pop esp
  40ae8c:	je     0x40aef3
  40ae8e:	sbb    esi,ecx
  40ae90:	jb     0x40ae90
  40ae92:	imul   esp,DWORD PTR [ebp-0x71718a48],0x71bd14fd
  40ae9c:	add    al,0x45
  40ae9e:	inc    esi
  40ae9f:	mov    esp,0xff0afba2
  40aea4:	or     al,0xa5
  40aea6:	xchg   ecx,eax
  40aea7:	stc    
  40aea8:	ret    
  40aea9:	xor    al,BYTE PTR [esi-0x2b]
  40aeac:	loopne 0x40ae42
  40aeae:	sbb    DWORD PTR [ebx],ecx
  40aeb0:	jg     0x40ae75
  40aeb2:	adc    dl,BYTE PTR [ecx+eax*1]
  40aeb5:	jno    0xbb753dac
  40aebb:	scas   eax,DWORD PTR es:[edi]
  40aebc:	xchg   BYTE PTR [ebp+edx*2-0x775c1009],ah
  40aec3:	fs idiv bl
  40aec6:	push   ss
  40aec7:	mov    eax,ds:0xa15d7c66
  40aecc:	inc    ebp
  40aecd:	into   
  40aece:	pop    ebp
  40aecf:	(bad)  
  40aed1:	repnz dec ebp
  40aed3:	mov    esp,0xd99b247a
  40aed8:	add    ebx,DWORD PTR [esi+0x3c]
  40aedb:	or     bl,BYTE PTR [ebx+0x1f]
  40aede:	and    ebp,DWORD PTR [eax+0x1788a39]
  40aee4:	aaa    
  40aee5:	test   BYTE PTR [edi-0x7d594914],al
  40aeeb:	xlat   BYTE PTR ds:[ebx]
  40aeec:	xchg   ecx,eax
  40aeed:	fisub  WORD PTR [ebx]
  40aeef:	fst    QWORD PTR [eax+0x6b]
  40aef2:	lods   eax,DWORD PTR ds:[esi]
  40aef3:	das    
  40aef4:	fcom   QWORD PTR [eax+0x12]
  40aef7:	popf   
  40aef8:	enter  0xe8ad,0xa4
  40aefc:	je     0x40af4b
  40aefe:	retf   0x22d3
  40af01:	mov    al,BYTE PTR [ebx]
  40af03:	hlt    
  40af04:	push   edi
  40af05:	xor    edx,DWORD PTR [esi]
  40af07:	popf   
  40af08:	dec    edi
  40af09:	fcmovnbe st,st(2)
  40af0b:	sub    DWORD PTR [ebx],esp
  40af0d:	cld    
  40af0e:	jo     0x40aea6
  40af10:	sahf   
  40af11:	pop    ebx
  40af12:	cwde   
  40af13:	sti    
  40af14:	dec    esp
  40af15:	ins    DWORD PTR es:[edi],dx
  40af16:	adc    cl,BYTE PTR [eax-0x7a]
  40af19:	push   edx
  40af1a:	sub    eax,0x2315a665
  40af1f:	cmp    cl,ch
  40af21:	mov    ecx,0xab113202
  40af26:	inc    esp
  40af27:	add    eax,0x1ba828ff
  40af2c:	rcl    BYTE PTR [edi-0x70],cl
  40af2f:	fisub  WORD PTR [edx]
  40af31:	shl    BYTE PTR [edi+0x729627c7],0x7d
  40af38:	pop    ebx
  40af39:	inc    edi
  40af3a:	ins    DWORD PTR es:[edi],dx
  40af3b:	cmp    eax,0x94da9d0c
  40af40:	ds dec esp
  40af42:	ret    0xcfc6
  40af45:	out    0xc1,eax
  40af47:	pop    ds
  40af48:	stos   DWORD PTR es:[edi],eax
  40af49:	jno    0x40af07
  40af4b:	sub    eax,0x1ee677e5
  40af50:	lfs    esp,FWORD PTR [ebp+0x5f]
  40af54:	lods   al,BYTE PTR ds:[esi]
  40af55:	xor    BYTE PTR [edi],bh
  40af57:	jecxz  0x40aef1
  40af59:	mov    esp,0xeeb15242
  40af5e:	cdq    
  40af5f:	jg     0x40afc3
  40af61:	jb     0x40aee7
  40af63:	and    dh,bl
  40af65:	popa   
  40af66:	jno    0x40af43
  40af68:	adc    BYTE PTR [ebx],al
  40af6a:	mov    edx,0x1f401648
  40af6f:	dec    esi
  40af70:	mov    ch,0xe2
  40af72:	ds aad 0x9a
  40af75:	xor    eax,0x91030386
  40af7a:	pusha  
  40af7b:	cs add al,0x5b
  40af7e:	leave  
  40af7f:	ror    DWORD PTR [eax],0x7d
  40af82:	mov    bh,0x74
  40af84:	inc    esi
  40af85:	dec    ebp
  40af86:	xor    DWORD PTR [edi],edi
  40af88:	cwde   
  40af89:	mov    eax,ds:0x5da4b574
  40af8e:	cs out 0xf0,eax
  40af91:	jmp    0x9de089d6
  40af96:	loopne 0x40af2b
  40af98:	push   ebp
  40af99:	ins    BYTE PTR es:[edi],dx
  40af9a:	jo     0x40affa
  40af9c:	std    
  40af9d:	imul   edi
  40af9f:	add    esi,DWORD PTR ds:0x9704b152
  40afa5:	repz xchg edx,eax
  40afa7:	or     bl,ah
  40afa9:	adc    ah,BYTE PTR [edi-0x10cd7729]
  40afaf:	shr    DWORD PTR [esi-0x35],1
  40afb2:	or     DWORD PTR [ecx-0x75adcfe7],esi
  40afb8:	and    ebp,DWORD PTR [ebp+0x41]
  40afbb:	jle    0x40afd3
  40afbd:	mov    ebx,DWORD PTR ds:0x5728869a
  40afc3:	hlt    
  40afc4:	inc    eax
  40afc5:	xchg   DWORD PTR [edi+0x26bc88f0],esp
  40afcb:	mov    dl,0xb7
  40afcd:	mov    fs,WORD PTR [ecx-0xd03a43]
  40afd3:	aad    0x88
  40afd5:	cmc    
  40afd6:	or     BYTE PTR [eax+0x49de9f3f],cl
  40afdc:	push   ebp
  40afdd:	loope  0x40af6c
  40afdf:	mov    ecx,ebx
  40afe1:	ret    
  40afe2:	loope  0x40b012
  40afe4:	xchg   ebx,eax
  40afe5:	adc    bh,BYTE PTR [edx]
  40afe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe8:	lock jbe 0x40af6d
  40afeb:	inc    ebp
  40afec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afed:	push   edi
  40afee:	test   BYTE PTR [esi+0x6a],dl
  40aff1:	mov    ds:0xf27c2e62,eax
  40aff6:	js     0x40b019
  40aff8:	inc    ecx
  40aff9:	xor    eax,0xec355aa2
  40affe:	xchg   edx,eax
  40afff:	jb     0x40afb9
  40b001:	cwde   
  40b002:	in     al,0x1b
  40b004:	and    al,0xd2
  40b006:	xchg   edi,eax
  40b007:	fldenv [esi]
  40b009:	add    ch,BYTE PTR [eax]
  40b00b:	sbb    BYTE PTR [edx],ah
  40b00d:	test   eax,0x1e1a9ddc
  40b012:	add    eax,0xbe29606c
  40b017:	xor    BYTE PTR [edi+0x5c],dl
  40b01a:	xor    al,0xd9
  40b01c:	xor    BYTE PTR [ecx+0x5ebc5a26],0xd2
  40b023:	mov    ecx,0x98e279a5
  40b028:	sbb    al,BYTE PTR [edx-0x5bf3e6e4]
  40b02e:	cmp    ecx,DWORD PTR [ecx]
  40b030:	test   DWORD PTR [edi*2+0x9107d29],esi
  40b037:	pop    es
  40b038:	jge    0x40afef
  40b03a:	jmp    0xed60efbc
  40b03f:	mov    edx,0x29b32ba2
  40b044:	imul   esi,DWORD PTR [edx+esi*2-0x180f4517],0xa21f55e1
  40b04f:	(bad)  
  40b050:	pop    ebx
  40b051:	mov    ds:0xca7ec62f,al
  40b056:	jae    0x40b0a9
  40b058:	jle    0x40affc
  40b05a:	fwait
  40b05b:	xchg   ecx,eax
  40b05c:	bound  ebp,QWORD PTR [eax+0x15]
  40b05f:	mul    ebp
  40b061:	jb     0x40b04f
  40b063:	push   cs
  40b064:	fsub   QWORD PTR [ebp+ebx*4+0x1f497b3d]
  40b06b:	sbb    ch,BYTE PTR [eax]
  40b06d:	stos   DWORD PTR es:[edi],eax
  40b06e:	jns    0x40b000
  40b070:	mov    dl,0x33
  40b072:	aaa    
  40b073:	nop
  40b074:	(bad)  
  40b075:	sbb    al,0xb8
  40b077:	pop    eax
  40b078:	mov    ds:0x147f0977,al
  40b07d:	stc    
  40b07e:	iret   
  40b07f:	mov    BYTE PTR [ecx-0x70],0xfa
  40b083:	mov    al,cs:0xe024f084
  40b089:	add    edx,DWORD PTR ds:0xee85d19a
  40b08f:	adc    dl,BYTE PTR [ecx-0x5ab60d7f]
  40b095:	aad    0x8b
  40b097:	retf   
  40b098:	sub    DWORD PTR [esi-0x60a17149],esp
  40b09e:	popf   
  40b09f:	and    al,0x2e
  40b0a1:	push   cs
  40b0a2:	and    al,0xb1
  40b0a4:	push   ss
  40b0a5:	mov    al,0xf1
  40b0a7:	jb     0x40b102
  40b0a9:	rol    DWORD PTR [edx+ecx*1-0x2198d105],1
  40b0b0:	leave  
  40b0b1:	add    DWORD PTR [eax],edx
  40b0b3:	pop    esi
  40b0b4:	clc    
  40b0b5:	stc    
  40b0b6:	pop    edx
  40b0b7:	arpl   WORD PTR [ebx+edx*8],sp
  40b0ba:	adc    BYTE PTR [edi+edx*2-0x45],cl
  40b0be:	adc    ch,al
  40b0c0:	or     BYTE PTR [esi+0x36],0xb7
  40b0c4:	push   ds
  40b0c5:	stos   BYTE PTR es:[edi],al
  40b0c6:	not    DWORD PTR [esi+0x21]
  40b0c9:	icebp  
  40b0ca:	out    0xfe,al
  40b0cc:	adc    DWORD PTR [ebp+0x6e400d5b],edx
  40b0d2:	push   ebp
  40b0d3:	aad    0xb4
  40b0d5:	sub    BYTE PTR [ecx-0x2b],ah
  40b0d8:	dec    ebx
  40b0d9:	vpcmpuw k6{k4},ymm4,YMMWORD PTR [eax],0x8e
  40b0e0:	fdivr  DWORD PTR [edx+0x36df564]
  40b0e6:	xor    ecx,ebp
  40b0e8:	xchg   edi,eax
  40b0e9:	jg     0x40b127
  40b0eb:	jb     0x40b06d
  40b0ed:	loop   0x40b108
  40b0ef:	and    esi,edi
  40b0f1:	shr    DWORD PTR [esi],cl
  40b0f3:	inc    ecx
  40b0f4:	jbe    0x40b0a3
  40b0f6:	add    esi,ebx
  40b0f8:	pop    ss
  40b0f9:	aaa    
  40b0fa:	and    al,0x7d
  40b0fc:	and    edi,DWORD PTR ds:0xb7554875
  40b102:	dec    ebx
  40b103:	fnstcw WORD PTR [ecx]
  40b105:	push   0xffffffb7
  40b107:	scas   ax,WORD PTR es:[edi]
  40b109:	push   0xffffff88
  40b10b:	aas    
  40b10c:	out    dx,al
  40b10d:	push   ss
  40b10e:	jg     0x40b134
  40b110:	cld    
  40b111:	xchg   edx,eax
  40b112:	push   edx
  40b113:	jae    0x40b10e
  40b115:	enter  0x89d1,0x5f
  40b119:	lock mov bh,ah
  40b11c:	f2xm1  
  40b11e:	jmp    0x199a:0xe996c809
  40b125:	mov    ds:0xcb37840e,eax
  40b12a:	push   esp
  40b12b:	fisub  DWORD PTR [edi+0x15]
  40b12e:	jmp    FWORD PTR [ebp-0x280180d2]
  40b134:	mov    cl,0xc2
  40b136:	pushf  
  40b137:	and    ebp,DWORD PTR [ecx]
  40b139:	mov    esp,0x4eda551
  40b13e:	test   DWORD PTR [eax+0x3ea929e],esp
  40b144:	jp     0x40b109
  40b146:	dec    ebx
  40b147:	push   0xb
  40b149:	hlt    
  40b14a:	jo     0x40b16b
  40b14c:	(bad)  
  40b14d:	out    0xb2,al
  40b14f:	jmp    0xbd7a:0x2f96b653
  40b156:	jp     0x40b1cc
  40b158:	cwde   
  40b159:	cli    
  40b15a:	xor    edx,DWORD PTR [edi+ebx*2]
  40b15d:	jmp    0xb8f1:0x22a5bbcb
  40b164:	int3   
  40b165:	dec    edi
  40b166:	aas    
  40b167:	inc    ecx
  40b168:	jno    0x40b138
  40b16a:	cmp    al,0x85
  40b16c:	cmp    edx,edx
  40b16e:	push   ecx
  40b16f:	push   0xffffff87
  40b171:	mov    ch,0x9e
  40b173:	dec    esp
  40b174:	mov    ecx,0xb04b7440
  40b179:	sbb    eax,0x73912658
  40b17e:	xlat   BYTE PTR ds:[ebx]
  40b17f:	inc    edx
  40b180:	ds jg  0x40b1cb
  40b183:	nop
  40b184:	xchg   esi,eax
  40b185:	(bad)  
  40b186:	push   esp
  40b187:	imul   BYTE PTR [ebp-0xc2498bd]
  40b18d:	jae    0x40b1da
  40b18f:	adc    bl,BYTE PTR [ecx]
  40b191:	xor    DWORD PTR [ebx+0x70ca6a5d],eax
  40b197:	mov    bl,0x94
  40b199:	jno    0x40b1a5
  40b19b:	outs   dx,DWORD PTR ds:[esi]
  40b19c:	inc    ebp
  40b19d:	not    BYTE PTR [esi]
  40b19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a0:	ret    
  40b1a1:	imul   BYTE PTR [eax]
  40b1a3:	cld    
  40b1a4:	int    0x20
  40b1a6:	xchg   ecx,eax
  40b1a7:	popf   
  40b1a8:	pop    esi
  40b1a9:	mov    eax,0x1cf643fa
  40b1ae:	or     ebx,edi
  40b1b0:	das    
  40b1b1:	pop    ebp
  40b1b2:	mov    ch,0xa
  40b1b4:	jl     0x40b1e4
  40b1b6:	lock push cs
  40b1b8:	jae    0x40b17e
  40b1ba:	popf   
  40b1bb:	clc    
  40b1bc:	shl    BYTE PTR [edx-0xb],1
  40b1bf:	stos   DWORD PTR es:[edi],eax
  40b1c0:	ins    BYTE PTR es:[edi],dx
  40b1c1:	imul   ebp,edx,0x1f
  40b1c4:	test   DWORD PTR [eax],edi
  40b1c6:	popf   
  40b1c7:	jnp    0x40b247
  40b1c9:	dec    ebp
  40b1ca:	int3   
  40b1cb:	xlat   BYTE PTR ds:[ebx]
  40b1cc:	call   0xcebf37c9
  40b1d1:	ret    0x5082
  40b1d4:	inc    eax
  40b1d5:	jecxz  0x40b177
  40b1d7:	in     al,0x34
  40b1d9:	fcom   st(7)
  40b1db:	sbb    BYTE PTR [ebx+0x2410ac77],bl
  40b1e1:	lds    ecx,FWORD PTR [eax]
  40b1e3:	in     al,dx
  40b1e4:	and    esp,ecx
  40b1e6:	imul   eax,edx,0x8d769f31
  40b1ec:	les    bx,DWORD PTR [eax-0x3a296a80]
  40b1f3:	lds    esp,FWORD PTR ds:0x577fb5e4
  40b1f9:	mov    dl,0x6c
  40b1fb:	jmp    0xf10c:0xdada780e
  40b202:	inc    eax
  40b203:	or     edx,edx
  40b205:	test   BYTE PTR [edx-0x7634dd4d],0x9e
  40b20c:	push   0x36fc3e02
  40b211:	xor    eax,0x4df18483
  40b216:	dec    DWORD PTR [ecx+0x21]
  40b219:	adc    eax,0x67632b9d
  40b21e:	sbb    eax,0xbaf874a6
  40b223:	es push cs
  40b225:	mov    ebx,DWORD PTR [esi+ebp*4+0x632f223c]
  40b22c:	pop    ebx
  40b22d:	xchg   esi,eax
  40b22e:	sbb    eax,0xf624af4a
  40b233:	jg     0x40b24c
  40b235:	lea    edi,[eax]
  40b237:	push   cs
  40b238:	xor    esp,DWORD PTR [ecx+0xeb2d791]
  40b23e:	push   edx
  40b23f:	mul    esi
  40b241:	sahf   
  40b242:	aaa    
  40b243:	sbb    BYTE PTR [edx+eiz*8+0x21017a5a],ch
  40b24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b24b:	pop    ss
  40b24c:	add    eax,DWORD PTR [ecx-0x439e7db3]
  40b252:	test   al,0x20
  40b254:	stc    
  40b255:	scas   eax,DWORD PTR es:[edi]
  40b256:	out    0x29,al
  40b258:	sub    BYTE PTR [eax],bl
  40b25a:	lods   al,BYTE PTR ds:[esi]
  40b25b:	hlt    
  40b25c:	or     edx,DWORD PTR [edi]
  40b25e:	mov    eax,ds:0x23498600
  40b263:	data16 sub BYTE PTR [ebp+0x12],bh
  40b267:	adc    DWORD PTR [edi-0x327710a4],eax
  40b26d:	aad    0xc
  40b26f:	icebp  
  40b270:	mov    al,0xa1
  40b272:	push   esp
  40b273:	pop    ebp
  40b274:	jo     0x40b272
  40b276:	sub    BYTE PTR [edx+0xdd3c43a],al
  40b27c:	xchg   edx,eax
  40b27d:	inc    esi
  40b27e:	jno    0x40b2c6
  40b280:	in     al,0xe2
  40b282:	mov    esi,0x145f809a
  40b287:	ja     0x40b2b5
  40b289:	iret   
  40b28a:	inc    edi
  40b28b:	jecxz  0x40b298
  40b28d:	gs push ebp
  40b28f:	scas   al,BYTE PTR es:[edi]
  40b290:	sbb    al,bl
  40b292:	mov    dh,0x2f
  40b294:	out    dx,eax
  40b295:	mov    ah,bh
  40b297:	fisub  WORD PTR cs:[ecx+0x34a67124]
  40b29e:	out    0x95,al
  40b2a0:	push   esi
  40b2a1:	daa    
  40b2a2:	div    esp
  40b2a4:	fcomp  DWORD PTR [edx-0x7d687f11]
  40b2aa:	xchg   ecx,eax
  40b2ab:	fisttp QWORD PTR [ebp-0x4f]
  40b2ae:	ins    DWORD PTR es:[edi],dx
  40b2af:	dec    eax
  40b2b0:	mov    dh,0xdd
  40b2b2:	mov    ds,edx
  40b2b4:	icebp  
  40b2b5:	jb     0x40b316
  40b2b7:	data16 into 
  40b2b9:	lds    esi,FWORD PTR [ebp+0x18d268a7]
  40b2bf:	push   edx
  40b2c0:	xchg   ebx,eax
  40b2c1:	jne    0x40b2bb
  40b2c3:	loopne 0x40b2c5
  40b2c5:	mov    edi,0xa9efdbcc
  40b2ca:	(bad)  
  40b2cb:	sbb    esi,0x77
  40b2ce:	and    DWORD PTR [ecx],esp
  40b2d0:	xor    eax,edi
  40b2d2:	xor    edx,edx
  40b2d4:	or     eax,edx
  40b2d6:	lea    eax,[ebp+eax*1-0x4]
  40b2da:	jmp    0x40b864
  40b2df:	dec    esp
  40b2e0:	outs   dx,DWORD PTR ds:[esi]
  40b2e1:	cdq    
  40b2e2:	js     0x40b27c
  40b2e4:	cmp    BYTE PTR [ebx+edx*1],ch
  40b2e7:	mov    ah,0x21
  40b2e9:	mov    al,0xae
  40b2eb:	mov    ecx,0xbaa84876
  40b2f0:	call   DWORD PTR [esi]
  40b2f2:	push   ss
  40b2f3:	cmp    eax,0xd1161604
  40b2f8:	push   edx
  40b2f9:	sbb    eax,0xbeea6d1f
  40b2fe:	arpl   bx,bp
  40b300:	adc    eax,0x17ce6ac2
  40b305:	mov    eax,0x158f93ec
  40b30a:	das    
  40b30b:	cld    
  40b30c:	imul   eax,DWORD PTR [eax-0x68],0x406ea81b
  40b313:	ja     0x40b2d5
  40b315:	lea    ebp,[ebx+ebp*2]
  40b318:	scas   al,BYTE PTR es:[edi]
  40b319:	out    0x92,eax
  40b31b:	mov    eax,ds:0x2b35c18b
  40b320:	in     eax,dx
  40b321:	test   DWORD PTR [ecx+0x52ca96bb],ebx
  40b327:	push   ecx
  40b328:	cmp    al,0xab
  40b32a:	out    dx,al
  40b32b:	mov    al,ds:0xd744fda7
  40b330:	jmp    0xf6443766
  40b335:	cmp    BYTE PTR [eax],dh
  40b337:	in     al,dx
  40b338:	pop    edx
  40b339:	sbb    dh,BYTE PTR [ebx+0x1ae2e53e]
  40b33f:	push   edi
  40b340:	shl    BYTE PTR [ebp+0x3968cea7],0x65
  40b347:	mov    esp,cs
  40b349:	bound  ecx,QWORD PTR ds:0xdd3dea99
  40b34f:	sar    DWORD PTR [eax+esi*2-0x7fd2565f],0x95
  40b357:	mov    cl,0xeb
  40b359:	and    ah,BYTE PTR [ebx]
  40b35b:	lods   eax,DWORD PTR ds:[esi]
  40b35c:	or     edi,DWORD PTR ds:0x4823651c
  40b362:	repz cwde 
  40b364:	jle    0x40b359
  40b366:	push   ds
  40b367:	(bad)  
  40b368:	sub    eax,0xa121977c
  40b36d:	(bad)  
  40b36e:	in     al,dx
  40b36f:	or     al,0x9a
  40b371:	dec    ebp
  40b372:	or     edx,DWORD PTR [ebp+0x46]
  40b375:	rcl    BYTE PTR [eax-0x60c1f511],0x7d
  40b37c:	pop    ds
  40b37d:	mov    eax,0xd0988d11
  40b382:	xor    eax,0xe6265fdc
  40b387:	jmp    0x2c4:0x3cd2e20f
  40b38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38f:	jb     0x40b316
  40b391:	(bad)  
  40b392:	dec    esp
  40b393:	lds    esp,FWORD PTR [edx+ebp*8+0x3ac73eb9]
  40b39a:	scas   al,BYTE PTR es:[edi]
  40b39b:	mov    ecx,0xdef7265e
  40b3a0:	ret    0x8004
  40b3a3:	mov    WORD PTR [esi-0x3f],fs
  40b3a6:	xor    eax,0x7c6fd02e
  40b3ab:	rcr    esp,1
  40b3ad:	in     eax,dx
  40b3ae:	jge    0x40b369
  40b3b0:	cmp    al,0x94
  40b3b2:	push   edi
  40b3b3:	stos   BYTE PTR es:[edi],al
  40b3b4:	or     BYTE PTR [edx-0x2b],bl
  40b3b7:	out    0x8,eax
  40b3b9:	xlat   BYTE PTR ds:[ebx]
  40b3ba:	or     dl,dh
  40b3bc:	loopne 0x40b3fb
  40b3be:	shl    BYTE PTR [ecx],0xb
  40b3c1:	repz xor ch,BYTE PTR [edi+0x17]
  40b3c5:	dec    edx
  40b3c6:	sbb    BYTE PTR [ebx+0x64788f29],dh
  40b3cc:	cs cmc 
  40b3ce:	lahf   
  40b3cf:	or     al,0xd
  40b3d1:	cli    
  40b3d2:	add    edi,DWORD PTR [ecx]
  40b3d4:	mov    ebx,0x53ffd7d4
  40b3d9:	adc    al,0xda
  40b3db:	data16 sbb dl,al
  40b3de:	add    BYTE PTR [ecx-0xf330a7a],al
  40b3e4:	push   0x48
  40b3e6:	js     0x40b3fb
  40b3e8:	adc    ch,dh
  40b3ea:	cmc    
  40b3eb:	outs   dx,DWORD PTR ds:[esi]
  40b3ec:	pop    ebp
  40b3ed:	mov    ebx,0xb0db3da4
  40b3f2:	test   BYTE PTR [ebx+edi*4+0x6cd8b0a7],cl
  40b3f9:	jl     0x40b44d
  40b3fb:	and    al,BYTE PTR [edx-0x173d806a]
  40b401:	and    cl,BYTE PTR [edx]
  40b403:	or     al,BYTE PTR [ecx]
  40b405:	aam    0x49
  40b407:	push   ebp
  40b408:	mov    ecx,0xcf0cbad3
  40b40d:	ret    
  40b40e:	push   esp
  40b40f:	scas   eax,DWORD PTR es:[edi]
  40b410:	rcl    BYTE PTR [eax-0x5ee447ba],cl
  40b416:	mov    esp,0x7ce14224
  40b41b:	jge    0x40b3a4
  40b41d:	push   edi
  40b41e:	ror    BYTE PTR [esi-0x6d452476],1
  40b424:	inc    esi
  40b425:	cmp    ebp,DWORD PTR [ecx]
  40b427:	retf   0x604e
  40b42a:	(bad)  
  40b42b:	jle    0x40b449
  40b42d:	sbb    bh,BYTE PTR [eax-0x36b266ab]
  40b433:	popf   
  40b434:	ins    BYTE PTR es:[edi],dx
  40b435:	xchg   ebx,eax
  40b436:	pop    edx
  40b437:	jb     0x40b494
  40b439:	sahf   
  40b43a:	call   0xd60e316f
  40b43f:	push   esi
  40b440:	inc    ebp
  40b441:	jmp    0x5aaa3323
  40b446:	pop    ss
  40b447:	mov    BYTE PTR [eax+0x48],cl
  40b44a:	mov    ebp,0xd30010aa
  40b44f:	sub    eax,0x90ced007
  40b454:	and    BYTE PTR [ecx-0x16],al
  40b457:	inc    ebx
  40b458:	jecxz  0x40b428
  40b45a:	xor    eax,0x44829c1f
  40b45f:	and    ah,dl
  40b461:	mov    DWORD PTR [eax],esi
  40b463:	aad    0x88
  40b465:	mov    ah,0x64
  40b467:	jnp    0x40b40f
  40b469:	gs push 0xc06c12d2
  40b46f:	je     0x40b424
  40b471:	jle    0x40b4a1
  40b473:	and    ecx,DWORD PTR [edx+edx*1]
  40b476:	xor    BYTE PTR [edi-0x6c3febb4],ch
  40b47c:	inc    esp
  40b47d:	or     eax,0x2b2ad58e
  40b482:	adc    DWORD PTR [ecx-0x74d8bec],ebx
  40b488:	mov    edx,0x3e438fc6
  40b48d:	cmc    
  40b48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b48f:	add    al,0xd9
  40b491:	scas   al,BYTE PTR es:[edi]
  40b492:	fisubr DWORD PTR [edx+eiz*2-0x1d]
  40b496:	and    esi,DWORD PTR [edi]
  40b498:	ja     0x40b45f
  40b49a:	jmp    0x40b447
  40b49c:	xchg   al,dh
  40b49e:	ror    BYTE PTR [ebx],0xa3
  40b4a1:	inc    ebx
  40b4a2:	enter  0xdd3e,0xf6
  40b4a6:	pop    ss
  40b4a7:	pop    ss
  40b4a8:	lods   eax,DWORD PTR ds:[esi]
  40b4a9:	jg     0x40b45b
  40b4ab:	xchg   edi,eax
  40b4ac:	daa    
  40b4ad:	rol    DWORD PTR ds:0xa645f0c0,0xfb
  40b4b4:	loop   0x40b504
  40b4b6:	popf   
  40b4b7:	jb     0x40b4a7
  40b4b9:	inc    esp
  40b4ba:	into   
  40b4bb:	aam    0x99
  40b4bd:	sbb    al,0x44
  40b4bf:	sbb    edi,DWORD PTR [eax]
  40b4c1:	js     0x40b503
  40b4c3:	or     DWORD PTR ds:0xf86f622e,ecx
  40b4c9:	jnp    0x40b521
  40b4cb:	pop    ebx
  40b4cc:	ss jo  0x40b4ee
  40b4cf:	test   al,0x83
  40b4d1:	xor    DWORD PTR [ecx-0x5ac8734f],edi
  40b4d7:	test   eax,0xd36cd1a4
  40b4dc:	jge    0x40b551
  40b4de:	(bad)  
  40b4df:	pop    edi
  40b4e0:	cli    
  40b4e1:	push   ecx
  40b4e2:	out    0x53,eax
  40b4e4:	pop    edi
  40b4e5:	pop    ecx
  40b4e6:	sub    al,0x5e
  40b4e8:	fadd   QWORD PTR [edx]
  40b4ea:	jnp    0x40b513
  40b4ec:	inc    eax
  40b4ed:	sbb    al,0x3
  40b4ef:	push   ds
  40b4f0:	int    0x16
  40b4f2:	cmc    
  40b4f3:	or     dh,dh
  40b4f5:	push   edi
  40b4f6:	mov    cl,0x1c
  40b4f8:	cmc    
  40b4f9:	ja     0x40b512
  40b4fb:	pop    edi
  40b4fc:	cs or  eax,edi
  40b4ff:	sbb    al,0x3a
  40b501:	outs   dx,DWORD PTR ds:[esi]
  40b502:	stos   DWORD PTR es:[edi],eax
  40b503:	xor    BYTE PTR [edi+0x28128139],0x9f
  40b50a:	adc    BYTE PTR [eax+0x2ed9bb9a],dh
  40b510:	xchg   DWORD PTR [edx+0x37],eax
  40b513:	inc    ebp
  40b514:	push   esi
  40b515:	adc    BYTE PTR [esi],bh
  40b517:	mov    bh,0xee
  40b519:	fidivr DWORD PTR [ecx+0x2253a71c]
  40b51f:	(bad)  
  40b520:	fisub  DWORD PTR [eax]
  40b522:	mov    bh,0x9f
  40b524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b525:	cli    
  40b526:	fild   QWORD PTR [ecx]
  40b528:	lods   eax,DWORD PTR ds:[esi]
  40b529:	into   
  40b52a:	cli    
  40b52b:	inc    esp
  40b52c:	dec    edx
  40b52d:	(bad)  
  40b52e:	(bad)  
  40b52f:	stc    
  40b530:	mov    edx,0xd2aaf288
  40b535:	xchg   ebp,eax
  40b537:	aas    
  40b538:	bound  esi,QWORD PTR [eax+ecx*8-0x4b]
  40b53c:	pop    edx
  40b53d:	cmp    eax,0xebb2ae46
  40b542:	cmp    cl,BYTE PTR [edi]
  40b544:	mov    bh,0x34
  40b546:	fxtract 
  40b548:	lds    ebx,FWORD PTR [edx]
  40b54a:	mov    DWORD PTR [ebx+0xfd2c962],esi
  40b550:	xor    ch,bh
  40b552:	cmp    DWORD PTR [ecx-0x4e5682b3],ebp
  40b558:	mov    ch,0x35
  40b55a:	mov    ecx,0x249da74e
  40b55f:	push   cs
  40b560:	int    0x72
  40b562:	xchg   esi,eax
  40b563:	mov    ds:0xd19fe78f,eax
  40b568:	pop    ecx
  40b569:	arpl   ax,bx
  40b56b:	jb     0x40b539
  40b56d:	gs shl DWORD PTR es:[edi],cl
  40b571:	xor    DWORD PTR [ebx],0xc66b8a74
  40b577:	mov    eax,ds:0x8fccb759
  40b57c:	(bad)  
  40b57d:	xchg   edi,eax
  40b57e:	(bad)  
  40b57f:	sub    eax,DWORD PTR [esi-0x6b8cda64]
  40b585:	or     eax,0xba6c926f
  40b58a:	jbe    0x40b53f
  40b58c:	stos   BYTE PTR es:[edi],al
  40b58d:	jnp    0x40b5cf
  40b58f:	dec    esp
  40b590:	add    eax,0xfa4db371
  40b595:	inc    edi
  40b596:	inc    BYTE PTR [ecx]
  40b598:	aaa    
  40b599:	cmp    BYTE PTR [ecx+0x3e],ch
  40b59c:	mov    ah,0x89
  40b59e:	jg     0x40b596
  40b5a0:	jmp    0x7752:0xb116d944
  40b5a7:	dec    eax
  40b5a8:	push   esp
  40b5a9:	test   eax,0x5f37b533
  40b5ae:	into   
  40b5af:	shl    BYTE PTR [edx],0xc
  40b5b2:	scas   eax,DWORD PTR es:[edi]
  40b5b3:	or     edi,DWORD PTR [ebx+eax*1+0x67]
  40b5b7:	out    dx,eax
  40b5b8:	je     0x40b5ce
  40b5ba:	xor    esi,DWORD PTR [esi]
  40b5bc:	lds    esi,FWORD PTR [ecx+0x31]
  40b5bf:	test   BYTE PTR [ebx+0x7e1f597a],0x4b
  40b5c6:	daa    
  40b5c7:	and    DWORD PTR [ebp-0x19e9a363],ebx
  40b5cd:	inc    edx
  40b5ce:	std    
  40b5cf:	pushf  
  40b5d0:	mov    ah,BYTE PTR [ebp+eax*2+0x47951fc6]
  40b5d7:	sub    eax,0xcad076c6
  40b5dc:	add    BYTE PTR [ecx],0x79
  40b5df:	mov    eax,ds:0x9514e63b
  40b5e4:	jbe    0x40b59d
  40b5e6:	pop    esi
  40b5e7:	jecxz  0x40b61c
  40b5e9:	stos   BYTE PTR es:[edi],al
  40b5ea:	ds nop
  40b5ec:	test   al,0x4f
  40b5ee:	sbb    cl,BYTE PTR [edx]
  40b5f0:	push   0xfb227d54
  40b5f5:	aam    0x20
  40b5f7:	jg     0x40b637
  40b5f9:	repnz xor dl,ah
  40b5fc:	out    0x24,al
  40b5fe:	dec    edx
  40b5ff:	sub    cl,ah
  40b601:	push   ebp
  40b602:	or     DWORD PTR [edi-0x51705f05],ecx
  40b608:	enter  0xc654,0x71
  40b60c:	xchg   edi,eax
  40b60d:	adc    edx,DWORD PTR [esi]
  40b60f:	gs inc edx
  40b611:	gs aas 
  40b613:	outs   dx,DWORD PTR ds:[esi]
  40b614:	stc    
  40b615:	adc    BYTE PTR cs:[esi],al
  40b618:	je     0x40b5ea
  40b61a:	sub    eax,0x9ddfd282
  40b61f:	mov    WORD PTR [ecx],es
  40b621:	sub    DWORD PTR [ebx-0x13],edi
  40b624:	leave  
  40b625:	(bad)  
  40b626:	in     eax,dx
  40b627:	adc    DWORD PTR [eax+0x3b3ef65a],esi
  40b62d:	push   ebx
  40b62e:	call   0x2275935d
  40b633:	fdivr  QWORD PTR [ecx-0x58]
  40b636:	sub    edx,esp
  40b638:	push   es
  40b639:	dec    ebx
  40b63a:	push   esp
  40b63c:	push   ss
  40b63d:	mov    esp,0x9ae12a65
  40b642:	ins    DWORD PTR es:[edi],dx
  40b643:	aam    0x4c
  40b645:	jmp    0x40b615
  40b647:	fsubr  DWORD PTR [ebx+0x3f]
  40b64a:	ret    
  40b64b:	clc    
  40b64c:	iret   
  40b64d:	and    cl,BYTE PTR [ebx]
  40b64f:	ret    0xbe42
  40b652:	add    ebp,DWORD PTR [eax-0x6a38a454]
  40b658:	cmp    al,0xda
  40b65a:	sbb    DWORD PTR [ebx-0x2921cd8b],0xc657968e
  40b664:	add    bh,cl
  40b666:	and    eax,0xd20f332e
  40b66b:	xchg   ecx,eax
  40b66c:	sub    BYTE PTR [edi],bh
  40b66e:	jb     0x40b669
  40b670:	xchg   ebx,eax
  40b671:	int    0x18
  40b673:	push   ebx
  40b674:	push   ds
  40b675:	pop    eax
  40b676:	push   cs
  40b677:	aad    0xe5
  40b679:	or     bh,BYTE PTR [ebp+0x4]
  40b67c:	xchg   DWORD PTR [ecx+0x89be00f],esp
  40b682:	pop    ss
  40b683:	xlat   BYTE PTR ds:[ebx]
  40b684:	daa    
  40b685:	and    eax,0xf68c821f
  40b68a:	test   ebx,0xaf856f8a
  40b690:	aam    0xe3
  40b692:	in     eax,dx
  40b693:	cmp    BYTE PTR [eax-0x4103a1db],ah
  40b699:	aas    
  40b69a:	xchg   bh,bh
  40b69c:	in     al,0xab
  40b69e:	mov    ss,WORD PTR [edx-0x4104cb5b]
  40b6a4:	or     DWORD PTR [eax-0x49],ebp
  40b6a7:	retf   0xdf8b
  40b6aa:	xor    WORD PTR [ecx+0x735431f7],dx
  40b6b1:	fs jmp 0x40b6d0
  40b6b4:	aaa    
  40b6b5:	lods   eax,DWORD PTR ds:[esi]
  40b6b6:	shr    BYTE PTR [edi-0x5],cl
  40b6b9:	add    al,0x66
  40b6bb:	lods   al,BYTE PTR ds:[esi]
  40b6bc:	stos   BYTE PTR es:[edi],al
  40b6bd:	mov    edx,0x647aaf22
  40b6c2:	mov    dl,0x1e
  40b6c4:	rol    DWORD PTR [edx],cl
  40b6c6:	jecxz  0x40b69f
  40b6c8:	mov    esi,0xd49f9d4
  40b6cd:	add    esi,DWORD PTR [edx]
  40b6cf:	inc    esp
  40b6d0:	mov    ebp,0xb2f7534a
  40b6d5:	mov    ?,WORD PTR [ebx]
  40b6d7:	xchg   ecx,eax
  40b6d8:	adc    dh,BYTE PTR [ecx]
  40b6da:	fstp   DWORD PTR [ebx]
  40b6dc:	imul   edx,DWORD PTR [edi],0xdeb27a87
  40b6e2:	emms   
  40b6e4:	mov    ah,0x64
  40b6e6:	cwde   
  40b6e7:	push   ebp
  40b6e8:	call   0x13494c94
  40b6ed:	mov    ch,0x52
  40b6ef:	jp     0x40b6f1
  40b6f1:	mov    BYTE PTR [ecx-0x8],dl
  40b6f4:	es jp  0x40b69a
  40b6f7:	rcl    DWORD PTR [ebx+0x5f],cl
  40b6fa:	aas    
  40b6fb:	xchg   edi,eax
  40b6fc:	add    bl,BYTE PTR [edx+0x3b]
  40b6ff:	mov    ds:0xd8c2614e,al
  40b704:	add    esp,DWORD PTR [eax-0x18ac4f2c]
  40b70a:	mov    esp,0x64354761
  40b70f:	sub    BYTE PTR [eax-0x5424d5e0],dh
  40b715:	push   esi
  40b716:	call   0x6ab8c9e
  40b71b:	jne    0x40b718
  40b71d:	(bad)  
  40b71f:	sub    bh,BYTE PTR [edx-0x3ae783fc]
  40b725:	pushf  
  40b726:	call   0x9e44efbe
  40b72b:	bound  ecx,QWORD PTR [edx]
  40b72d:	xchg   DWORD PTR [eax+0x619feb04],edi
  40b733:	mov    cl,0xaf
  40b735:	rcr    DWORD PTR [esi+eax*4+0x25],1
  40b739:	aas    
  40b73a:	test   DWORD PTR [esi+0x6c],esi
  40b73d:	sbb    BYTE PTR [ebx+0x25eab5da],dh
  40b743:	pushf  
  40b744:	pop    ecx
  40b745:	mov    bh,0xaf
  40b747:	dec    ebx
  40b748:	imul   ecx,DWORD PTR [esp+esi*4+0x36],0x160daa89
  40b750:	xlat   BYTE PTR ds:[ebx]
  40b751:	cld    
  40b752:	mov    dl,0x3c
  40b754:	xor    edx,edx
  40b756:	ds (bad) 
  40b758:	lock dec ecx
  40b75a:	shl    DWORD PTR [ecx-0xc],1
  40b75d:	sar    BYTE PTR [eax+0x6cebde13],0xd
  40b764:	pop    esp
  40b765:	pop    eax
  40b766:	out    dx,eax
  40b767:	pop    ds
  40b768:	pushf  
  40b769:	scas   eax,DWORD PTR es:[edi]
  40b76a:	jns    0x40b716
  40b76c:	mov    ?,WORD PTR [edx-0x540ca30]
  40b772:	mov    esi,DWORD PTR [ecx]
  40b774:	mov    ch,0x69
  40b776:	neg    eax
  40b778:	xchg   ebx,eax
  40b779:	and    al,0x99
  40b77b:	das    
  40b77c:	cmp    BYTE PTR [edx-0x61bd0854],al
  40b782:	mov    ebp,0x52811a72
  40b787:	pusha  
  40b788:	add    DWORD PTR [ecx+0x12],ebp
  40b78b:	adc    cl,bh
  40b78d:	sub    eax,0xd7812df0
  40b792:	and    al,0x6f
  40b794:	in     eax,0xf7
  40b796:	xchg   BYTE PTR ds:0x7138f4f7,bl
  40b79c:	out    dx,al
  40b79d:	sbb    BYTE PTR [eax+eax*4],bh
  40b7a0:	in     al,dx
  40b7a1:	mov    DWORD PTR [ecx],eax
  40b7a3:	mov    eax,0x9fe19299
  40b7a8:	pop    edx
  40b7a9:	jecxz  0x40b7ab
  40b7ab:	enter  0x60d5,0x7e
  40b7af:	(bad)  
  40b7b0:	cwde   
  40b7b1:	push   ds
  40b7b2:	mov    bl,0x2e
  40b7b4:	pop    esp
  40b7b5:	test   ah,dl
  40b7b7:	jmp    0x40b816
  40b7b9:	(bad)  
  40b7ba:	sub    eax,DWORD PTR [ecx]
  40b7bc:	pop    edi
  40b7bd:	mov    al,ds:0x1cf5cbf7
  40b7c2:	out    0x9,eax
  40b7c4:	sar    BYTE PTR [edx-0x7d12ef71],1
  40b7ca:	mov    dh,BYTE PTR [ebp+0x4f]
  40b7cd:	hlt    
  40b7ce:	pop    esi
  40b7cf:	mov    ds,WORD PTR [edi+0x61]
  40b7d2:	enter  0x9e60,0x56
  40b7d6:	int3   
  40b7d7:	mov    edx,0xc21c447
  40b7dc:	and    bl,BYTE PTR [eax]
  40b7de:	cmc    
  40b7df:	push   ecx
  40b7e0:	imul   BYTE PTR [edi-0x6411e385]
  40b7e6:	push   edx
  40b7e7:	dec    edx
  40b7e8:	pop    esp
  40b7e9:	adc    al,BYTE PTR [ecx]
  40b7eb:	clc    
  40b7ec:	lock inc edi
  40b7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ef:	push   0x57
  40b7f1:	(bad)  
  40b7f2:	pop    ss
  40b7f3:	shl    BYTE PTR ds:0x8ad1169a,1
  40b7f9:	mov    esi,DWORD PTR [eax]
  40b7fb:	arpl   WORD PTR [eax],ax
  40b7fd:	mov    edx,0xeb14b44a
  40b802:	jns    0x40b82a
  40b804:	ds lahf 
  40b806:	push   edx
  40b807:	xchg   esi,eax
  40b808:	aam    0x7b
  40b80a:	cmp    dl,dl
  40b80c:	adc    al,0x67
  40b80e:	pop    es
  40b80f:	imul   edi,DWORD PTR ds:0x93a1290b,0x56
  40b816:	cmc    
  40b817:	fwait
  40b818:	jb     0x40b856
  40b81a:	adc    BYTE PTR [eax-0x7],ch
  40b81d:	inc    ebx
  40b81e:	and    al,0xe0
  40b820:	scas   al,BYTE PTR es:[edi]
  40b821:	(bad)  
  40b822:	cmp    eax,0x9d26f033
  40b827:	jge    0x40b7ef
  40b829:	mov    ds:0xada305d2,eax
  40b82e:	inc    edi
  40b82f:	xchg   edx,eax
  40b830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b831:	fidivr WORD PTR [esi+0x15bd565f]
  40b837:	cmp    edi,edi
  40b839:	ds test al,0x9e
  40b83c:	test   al,0xc6
  40b83e:	rcr    DWORD PTR [ebx-0x48],0x8b
  40b842:	sbb    eax,0x50246c7c
  40b847:	and    eax,DWORD PTR [edx-0x12174373]
  40b84d:	stos   BYTE PTR es:[edi],al
  40b84e:	stc    
  40b84f:	push   esi
  40b850:	mov    ch,BYTE PTR [esi+0x5e1ddc6]
  40b856:	pop    ds
  40b857:	clc    
  40b858:	mov    dl,0xe1
  40b85a:	and    DWORD PTR [eax],ecx
  40b85c:	lds    edi,FWORD PTR ds:0xba5a51a0
  40b862:	imul   esi,ebx,0xffffff89
  40b865:	inc    ebp
  40b866:	int3   
  40b867:	mov    eax,DWORD PTR [ebp-0x60]
  40b86a:	shl    ecx,0x1e
  40b86d:	mov    ecx,DWORD PTR [ebp-0x5c]
  40b870:	jmp    0x40bdfa
  40b875:	retf   
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	cli    
  40b878:	jo     0x40b852
  40b87a:	sbb    BYTE PTR [eax],ah
  40b87c:	and    al,0xe8
  40b87e:	ins    BYTE PTR es:[edi],dx
  40b87f:	mov    ah,0x72
  40b881:	or     al,0xcd
  40b883:	mov    edx,0x16ebf0ae
  40b888:	push   ss
  40b889:	cmp    eax,0xe0161604
  40b88e:	(bad)  [ebx+0x2d]
  40b891:	inc    ebp
  40b892:	adc    eax,0x6d93d366
  40b897:	push   edi
  40b898:	xor    eax,0x991fa2b0
  40b89d:	add    al,0xd6
  40b89f:	sbb    BYTE PTR [ecx],ah
  40b8a1:	iret   
  40b8a2:	jl     0x40b833
  40b8a4:	adc    BYTE PTR [ebx+0x6f],dh
  40b8a7:	data16 ja 0x40b855
  40b8aa:	cwde   
  40b8ab:	idiv   ebx
  40b8ad:	dec    ecx
  40b8ae:	inc    ecx
  40b8af:	add    DWORD PTR [eax-0x165d7388],eax
  40b8b5:	sbb    eax,0xd5f72aba
  40b8ba:	mov    edi,0xa025f1b8
  40b8bf:	imul   edi,DWORD PTR [edx+0x67ddfc46],0xffffffb5
  40b8c6:	mov    ebx,0xd495e372
  40b8cb:	mov    bl,0x2a
  40b8cd:	mov    dl,cl
  40b8cf:	xor    eax,0xb5ebef3c
  40b8d4:	ja     0x40b8a3
  40b8d6:	or     eax,0x67b1d37b
  40b8db:	in     eax,dx
  40b8dc:	repz inc eax
  40b8de:	jb     0x40b8ac
  40b8e0:	mov    BYTE PTR [ecx-0x37fd932],dh
  40b8e6:	cld    
  40b8e7:	dec    edi
  40b8e8:	loopne 0x40b8ff
  40b8ea:	push   esp
  40b8eb:	aaa    
  40b8ec:	sbb    al,0x0
  40b8ee:	outs   dx,BYTE PTR ds:[esi]
  40b8ef:	mov    al,0x82
  40b8f1:	sbb    eax,0xd1a7fb3e
  40b8f6:	inc    ebp
  40b8f7:	and    eax,0x6e885998
  40b8fc:	adc    eax,0xa81bde73
  40b901:	push   es
  40b902:	push   ecx
  40b903:	cli    
  40b904:	push   eax
  40b905:	ja     0x40b8d5
  40b907:	xchg   ebp,eax
  40b908:	jmp    0x40b932
  40b90a:	ins    BYTE PTR es:[edi],dx
  40b90b:	mov    ds:0x4e6d20a2,eax
  40b910:	mov    edi,0xb6c3814a
  40b915:	(bad)  
  40b916:	imul   esp,ebx,0x372af48
  40b91c:	xor    WORD PTR [ebp-0x6a036d45],bx
  40b923:	dec    esp
  40b924:	dec    edi
  40b925:	sub    eax,0xa1358fd1
  40b92a:	mov    eax,ds:0xd58a6214
  40b92f:	out    dx,eax
  40b930:	lea    eax,fs:[ebp+0x45]
  40b934:	jno    0x40b911
  40b936:	jge    0x40b8de
  40b938:	sub    ah,0xfd
  40b93b:	rcr    ecx,1
  40b93d:	mov    edi,0xa6fcd7fe
  40b942:	out    dx,al
  40b943:	mov    cs,WORD PTR [edx]
  40b945:	mov    al,0xa3
  40b947:	rcl    bl,0x9c
  40b94a:	test   edx,ebp
  40b94c:	or     bl,BYTE PTR [esi]
  40b94e:	cmc    
  40b94f:	push   DWORD PTR [edx+0x66e19302]
  40b955:	es retf 0x8968
  40b959:	jl     0x40b8e4
  40b95b:	cmp    BYTE PTR [ebx-0x3efbb612],bh
  40b961:	jmp    0x9bf8:0x43bfb4e9
  40b968:	sub    cl,BYTE PTR [edx+0x72]
  40b96b:	fdivp  st(0),st
  40b96d:	lods   al,BYTE PTR ds:[esi]
  40b96e:	stos   BYTE PTR es:[edi],al
  40b96f:	add    DWORD PTR es:[eax-0x25c4046c],0xd8cbee78
  40b97a:	pop    es
  40b97b:	js     0x40b9ab
  40b97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b97e:	(bad)  
  40b97f:	mov    ecx,0x8f4242a7
  40b984:	ror    BYTE PTR [eax+0x46],cl
  40b987:	mov    edx,DWORD PTR [eax]
  40b989:	mov    bh,0x61
  40b98b:	gs xchg ebp,eax
  40b98d:	daa    
  40b98e:	cmp    eax,0xc8327c17
  40b993:	pushf  
  40b994:	sbb    cl,BYTE PTR [ecx]
  40b996:	lahf   
  40b997:	dec    ecx
  40b998:	adc    ah,al
  40b99a:	sub    DWORD PTR [edi+0x3719ce69],esi
  40b9a0:	mov    ds:0x584696d0,al
  40b9a5:	cli    
  40b9a6:	dec    ebx
  40b9a7:	dec    esi
  40b9a8:	aad    0x2
  40b9aa:	fisttp DWORD PTR [eax-0x58]
  40b9ae:	shr    BYTE PTR [esi],cl
  40b9b0:	aam    0x59
  40b9b2:	std    
  40b9b3:	rol    DWORD PTR [edx],cl
  40b9b5:	mov    bh,0x40
  40b9b7:	cdq    
  40b9b8:	pop    ds
  40b9b9:	jnp    0x40b99c
  40b9bb:	test   ah,bh
  40b9bd:	fist   WORD PTR [esi]
  40b9bf:	retf   
  40b9c0:	add    eax,0x6c5f5d90
  40b9c5:	adc    DWORD PTR [ebx+0x6807b183],0x92edc3d9
  40b9cf:	mov    bl,BYTE PTR [ecx+0x7e]
  40b9d2:	jge    0x40b99a
  40b9d4:	pop    edx
  40b9d5:	push   es
  40b9d6:	dec    eax
  40b9d7:	cli    
  40b9d8:	loope  0x40b970
  40b9da:	mov    al,ds:0xc687a0d8
  40b9df:	add    BYTE PTR gs:[ebp+0x1a],bl
  40b9e3:	popa   
  40b9e4:	xchg   edi,eax
  40b9e5:	jno    0x40b9eb
  40b9e7:	mov    eax,ds:0xc65a3499
  40b9ec:	mov    ch,BYTE PTR [ebx+esi*4]
  40b9ef:	xchg   ecx,eax
  40b9f0:	mov    ah,0x9
  40b9f2:	(bad)  
  40b9f3:	aaa    
  40b9f4:	repz pop ebp
  40b9f6:	push   ebp
  40b9f7:	mov    ch,0xa7
  40b9f9:	outs   dx,DWORD PTR ds:[esi]
  40b9fa:	shl    BYTE PTR [edx+esi*1-0x4c],0xaa
  40b9ff:	inc    edx
  40ba00:	int    0x6b
  40ba02:	test   al,0x91
  40ba04:	push   0x5f386a8c
  40ba09:	js     0x40ba7d
  40ba0b:	out    dx,al
  40ba0c:	stos   DWORD PTR es:[edi],eax
  40ba0d:	popa   
  40ba0e:	pop    ss
  40ba0f:	leave  
  40ba10:	jbe    0x40b9cf
  40ba12:	mov    ebp,0x6ecf3da9
  40ba17:	scas   eax,DWORD PTR es:[edi]
  40ba18:	pop    ds
  40ba19:	dec    edx
  40ba1a:	sbb    ebx,DWORD PTR [edx+0x13]
  40ba1d:	xor    ebp,DWORD PTR [ebp+0x27]
  40ba20:	daa    
  40ba21:	repz mov esi,0xe502c489
  40ba27:	xchg   edi,eax
  40ba28:	push   es
  40ba29:	cmp    BYTE PTR [edi+0x25],0xc0
  40ba2d:	push   edi
  40ba2e:	fisubr DWORD PTR [ebx-0x488df1ed]
  40ba34:	jbe    0x40b9d0
  40ba36:	bound  ebp,QWORD PTR [eax+0x557c9da5]
  40ba3c:	outs   dx,DWORD PTR ds:[esi]
  40ba3d:	in     eax,0x65
  40ba3f:	xchg   ebx,eax
  40ba40:	xchg   DWORD PTR [edx-0x614b1129],ecx
  40ba46:	lods   al,BYTE PTR ds:[esi]
  40ba47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba48:	jne    0x40ba7b
  40ba4a:	aaa    
  40ba4b:	adc    al,BYTE PTR [edx]
  40ba4d:	fcomp  st(4)
  40ba4f:	jge    0x40ba8a
  40ba51:	inc    edx
  40ba53:	aas    
  40ba54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba55:	push   cs
  40ba56:	jle    0x40ba1a
  40ba58:	outs   dx,DWORD PTR ds:[esi]
  40ba59:	adc    eax,0x41aab545
  40ba5e:	push   ebx
  40ba5f:	cmp    eax,0x8c8a05ee
  40ba64:	ja     0x40ba10
  40ba66:	icebp  
  40ba67:	mov    edi,0x11d3d66
  40ba6c:	mov    WORD PTR [ecx+edx*1],es
  40ba6f:	shr    ebx,0x47
  40ba72:	add    esi,edx
  40ba74:	and    eax,0x87af849c
  40ba79:	inc    ebp
  40ba7a:	es jae 0x40ba3e
  40ba7d:	jge    0x40ba4a
  40ba7f:	scas   al,BYTE PTR es:[edi]
  40ba80:	adc    dl,BYTE PTR [edx]
  40ba82:	push   esp
  40ba83:	xchg   esp,eax
  40ba84:	in     al,dx
  40ba85:	nop
  40ba86:	cmp    ah,BYTE PTR ds:0xb46a43fb
  40ba8c:	out    dx,eax
  40ba8d:	cwde   
  40ba8e:	mov    ch,0x4
  40ba90:	repnz lods eax,DWORD PTR ds:[esi]
  40ba92:	push   dx
  40ba94:	xchg   esi,eax
  40ba95:	add    cl,ah
  40ba97:	fcomp  DWORD PTR [esi]
  40ba99:	dec    bp
  40ba9b:	(bad)  
  40ba9c:	push   cs
  40ba9d:	cmp    al,0x9e
  40ba9f:	lock (bad) 
  40baa1:	jge    0x40bae3
  40baa3:	(bad)  
  40baa4:	imul   BYTE PTR [ebp+0x724f0c19]
  40baaa:	sub    ebx,esi
  40baac:	cdq    
  40baad:	(bad)  
  40baae:	jmp    0xf41d:0x6c9cd57f
  40bab5:	test   DWORD PTR [esi],0x91db162f
  40babb:	push   edx
  40babc:	add    eax,0xa75cf234
  40bac1:	jbe    0x40ba6e
  40bac3:	data16 scas al,BYTE PTR es:[edi]
  40bac5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40bac7:	add    BYTE PTR [esi-0x4b],ch
  40baca:	out    0x3c,al
  40bacc:	(bad)  
  40bace:	adc    al,bl
  40bad0:	push   ds
  40bad1:	xchg   edi,eax
  40bad2:	xchg   esi,eax
  40bad3:	mov    edi,0xf5b8c47c
  40bad8:	lods   eax,DWORD PTR ds:[esi]
  40bad9:	xor    ebp,edi
  40badb:	mov    dh,0xc3
  40badd:	jg     0x40bb25
  40badf:	arpl   WORD PTR [ebp+0x1021e10d],dx
  40bae5:	push   edi
  40bae6:	shl    DWORD PTR [ebx+eax*4-0x132bee08],cl
  40baed:	ds aam 0xfb
  40baf0:	mov    dl,0x96
  40baf2:	in     eax,0x3b
  40baf4:	jmp    0x40bad5
  40baf6:	cmp    eax,0x7a3ebc5a
  40bafb:	mov    eax,0x957be404
  40bb00:	(bad)  
  40bb01:	fwait
  40bb02:	mov    edi,0x2121096e
  40bb07:	les    eax,FWORD PTR [edi-0x13c51fd5]
  40bb0d:	add    DWORD PTR [esi-0x48],esp
  40bb10:	mov    esi,0xee1923e0
  40bb15:	stos   DWORD PTR es:[edi],eax
  40bb16:	mov    esi,0xa7b22e74
  40bb1b:	pop    esi
  40bb1c:	fwait
  40bb1d:	aam    0x40
  40bb1f:	mov    bl,BYTE PTR [ebp*8+0x16459445]
  40bb26:	push   edi
  40bb27:	sub    DWORD PTR [esi+ebp*4-0x43b2c65a],esp
  40bb2e:	push   es
  40bb2f:	ja     0x40bb0a
  40bb31:	out    0xf3,eax
  40bb33:	pop    eax
  40bb34:	inc    ebx
  40bb35:	pop    ds
  40bb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb37:	js     0x40bace
  40bb39:	dec    ebp
  40bb3a:	mov    cl,0x21
  40bb3c:	xor    edx,DWORD PTR [edx+0x18dc27a2]
  40bb42:	lds    ebp,FWORD PTR [edi]
  40bb44:	or     cl,BYTE PTR [ecx]
  40bb46:	lods   al,BYTE PTR ds:[esi]
  40bb47:	mov    ebp,0xd62fa2d5
  40bb4c:	aaa    
  40bb4d:	jne    0x40bba4
  40bb4f:	pop    esp
  40bb50:	jb     0x40bb1d
  40bb52:	imul   ecx,esp,0xb37e0c48
  40bb58:	ds push cs
  40bb5a:	test   DWORD PTR [esi+eax*8-0x1],ecx
  40bb5e:	pop    ebx
  40bb5f:	mul    DWORD PTR [ebx-0x78]
  40bb62:	mov    ?,WORD PTR [ebx+0x5daf1959]
  40bb68:	jg     0x40bb63
  40bb6a:	out    0x83,al
  40bb6c:	jmp    0x40bbdc
  40bb6e:	inc    eax
  40bb6f:	(bad)  
  40bb70:	imul   ecx,DWORD PTR [edi-0x40ac5173],0xffffffe8
  40bb77:	or     DWORD PTR [esi+0x7d932bde],esi
  40bb7d:	add    edx,edi
  40bb7f:	test   BYTE PTR [ecx+0x557d131d],dh
  40bb85:	outs   dx,DWORD PTR ds:[esi]
  40bb86:	mov    WORD PTR ds:0xc6bf8af2,ss
  40bb8c:	repnz outs dx,BYTE PTR es:[esi]
  40bb8f:	bound  ebp,QWORD PTR [edx-0x70]
  40bb92:	jo     0x40bb6e
  40bb94:	pop    ebp
  40bb96:	cli    
  40bb97:	ins    DWORD PTR es:[edi],dx
  40bb98:	sbb    dh,BYTE PTR [eax-0x14d26e3a]
  40bb9e:	mov    BYTE PTR [ebx],al
  40bba0:	mov    al,0xcf
  40bba2:	repz test edi,ebp
  40bba5:	sub    BYTE PTR [ebp-0x269794e8],bh
  40bbab:	mov    ds:0xda46f9d5,eax
  40bbb0:	sub    bl,BYTE PTR [esi]
  40bbb2:	mov    esp,0x2a244f8c
  40bbb7:	popf   
  40bbb8:	mov    bl,0x3f
  40bbba:	(bad)  
  40bbbb:	(bad)  
  40bbbd:	cmp    esp,ecx
  40bbbf:	fistp  DWORD PTR [eax-0x434ce9d9]
  40bbc5:	push   eax
  40bbc6:	jno    0x40bb54
  40bbc8:	sahf   
  40bbc9:	jno    0x40bc1c
  40bbcb:	rol    al,1
  40bbcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbce:	dec    esp
  40bbcf:	retf   
  40bbd0:	xchg   DWORD PTR [ebp-0x4f],ecx
  40bbd3:	lds    ebp,FWORD PTR ds:0xb947b10d
  40bbd9:	inc    edx
  40bbda:	push   ebp
  40bbdb:	or     bl,BYTE PTR [edx+ebp*1+0x4f130f7b]
  40bbe2:	(bad)  
  40bbe3:	scas   al,BYTE PTR es:[edi]
  40bbe4:	sub    al,0xdf
  40bbe6:	and    ch,bl
  40bbe8:	mov    ?,WORD PTR [esi]
  40bbea:	or     edi,DWORD PTR [eax+edx*1-0x7247cd7e]
  40bbf1:	imul   eax,DWORD PTR [esi-0x1c8606f7],0xa42765de
  40bbfb:	jnp    0x40bb90
  40bbfd:	inc    esp
  40bbfe:	sub    al,0xe0
  40bc00:	std    
  40bc01:	mov    ds:0xc2005df3,al
  40bc06:	test   al,0x90
  40bc08:	pop    esi
  40bc09:	int    0x24
  40bc0b:	and    eax,edx
  40bc0d:	xchg   DWORD PTR [ebx+0x4d],edx
  40bc10:	xchg   ebx,eax
  40bc11:	adc    al,0xf8
  40bc13:	dec    ebx
  40bc14:	bound  edx,QWORD PTR [ebx-0x66]
  40bc17:	test   BYTE PTR [ecx],bl
  40bc19:	addr16 mov bh,0x9b
  40bc1c:	rcl    DWORD PTR [edx-0x5250f18c],cl
  40bc22:	aad    0x92
  40bc24:	into   
  40bc25:	fidiv  DWORD PTR ds:0xae52c235
  40bc2b:	push   DWORD PTR [ebp+0xc408afc]
  40bc31:	call   0xa1b4:0xeb3cd29
  40bc38:	mov    edx,edi
  40bc3a:	ja     0x40bc13
  40bc3c:	sbb    esp,0x6f
  40bc3f:	add    edx,DWORD PTR [edx-0x7845419c]
  40bc45:	pusha  
  40bc46:	pop    ebp
  40bc47:	add    DWORD PTR [edi-0x3c],0xffffffcb
  40bc4b:	pusha  
  40bc4c:	mov    WORD PTR [ecx+0x31],ds
  40bc4f:	call   0x9fcf:0x46b2ae9c
  40bc56:	out    0x27,al
  40bc58:	push   esp
  40bc59:	imul   BYTE PTR [edx-0x415f0676]
  40bc5f:	(bad)  
  40bc60:	xlat   BYTE PTR ds:[ebx]
  40bc61:	je     0x40bc4e
  40bc63:	pop    ebp
  40bc64:	enter  0x4f0f,0xf4
  40bc68:	inc    esp
  40bc69:	push   ss
  40bc6a:	sbb    DWORD PTR [edi-0x19],0xffffff8b
  40bc6e:	std    
  40bc6f:	dec    edi
  40bc70:	test   DWORD PTR [ebx-0x579caac8],esi
  40bc76:	jo     0x40bc77
  40bc78:	push   esp
  40bc79:	adc    esi,DWORD PTR [ebp-0x1d025d48]
  40bc7f:	std    
  40bc80:	pusha  
  40bc81:	aaa    
  40bc82:	stc    
  40bc83:	and    DWORD PTR [edx+0x7f588af6],edx
  40bc89:	ins    DWORD PTR es:[edi],dx
  40bc8a:	mov    ds:0x5f143439,eax
  40bc8f:	dec    edi
  40bc90:	xchg   DWORD PTR [esi-0x6],ebp
  40bc93:	xchg   BYTE PTR [ecx],bh
  40bc95:	nop
  40bc96:	or     BYTE PTR [esi],cl
  40bc98:	data16 xor BYTE PTR [edi-0x40],0xbe
  40bc9d:	stc    
  40bc9e:	mov    si,0xa797
  40bca2:	fild   DWORD PTR [ebx+0x6299dd4d]
  40bca8:	ja     0x40bcb9
  40bcaa:	sub    bh,BYTE PTR [ecx+0x5]
  40bcad:	and    eax,DWORD PTR [edi-0xc]
  40bcb0:	xchg   DWORD PTR [edi+0x6a],ebx
  40bcb3:	rcl    BYTE PTR [ebp-0x367827bd],cl
  40bcb9:	int3   
  40bcba:	gs jb  0x40bcea
  40bcbd:	push   edi
  40bcbe:	stos   DWORD PTR es:[edi],eax
  40bcbf:	mov    esp,0xeb57ec8e
  40bcc4:	sub    eax,DWORD PTR [edi]
  40bcc6:	sti    
  40bcc7:	adc    di,si
  40bcca:	hlt    
  40bccb:	stos   BYTE PTR es:[edi],al
  40bccc:	iret   
  40bccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcce:	sub    BYTE PTR [edx],bh
  40bcd0:	add    ecx,0xb99e57da
  40bcd6:	xor    BYTE PTR [eax+0xc],ch
  40bcd9:	dec    ebx
  40bcda:	das    
  40bcdb:	dec    edi
  40bcdc:	mov    ebx,0x54581316
  40bce1:	add    BYTE PTR [ecx],ch
  40bce3:	pop    es
  40bce4:	mov    al,ds:0x14ab90d0
  40bce9:	sub    BYTE PTR [edx+eax*1+0x49866097],0x67
  40bcf1:	jno    0x40bd0c
  40bcf3:	sbb    BYTE PTR [eax-0x47b24486],ah
  40bcf9:	arpl   WORD PTR [edi+edx*2],sp
  40bcfc:	or     dh,bh
  40bcfe:	lods   eax,DWORD PTR ds:[esi]
  40bcff:	aaa    
  40bd00:	rcl    DWORD PTR [ebx-0x60f10a5e],cl
  40bd06:	clc    
  40bd07:	mov    esp,0xcb301175
  40bd0c:	pop    ss
  40bd0d:	mov    ebp,0xe01fee4e
  40bd12:	fsubrp st(4),st
  40bd14:	adc    eax,0xeb8dbe83
  40bd19:	(bad)  
  40bd1a:	push   es
  40bd1b:	ss lahf 
  40bd1d:	pop    ecx
  40bd1e:	push   edi
  40bd1f:	outs   dx,DWORD PTR ds:[esi]
  40bd20:	or     ch,dl
  40bd22:	jns    0x40bcc7
  40bd24:	mov    DWORD PTR [edi-0x2bc68229],0xe94a998c
  40bd2e:	dec    ebp
  40bd2f:	push   DWORD PTR [ebp-0x448b11ef]
  40bd35:	test   DWORD PTR [ecx-0x34],edx
  40bd38:	mov    esp,0xaa060e12
  40bd3d:	cdq    
  40bd3e:	cld    
  40bd3f:	mov    ebx,0x696b086b
  40bd44:	push   dx
  40bd46:	aaa    
  40bd47:	ret    
  40bd48:	ror    BYTE PTR [ebp+esi*1+0x48],cl
  40bd4c:	mov    ecx,0xfce66e65
  40bd51:	add    ebp,DWORD PTR [esi-0x1c]
  40bd54:	cli    
  40bd55:	adc    al,0x88
  40bd57:	imul   ebx,esi,0xf23a850a
  40bd5d:	mov    bl,0xd6
  40bd5f:	jne    0x40bd6e
  40bd61:	or     al,0xf8
  40bd63:	fwait
  40bd64:	xchg   esp,eax
  40bd65:	imul   eax,edi,0xdb3928db
  40bd6b:	mov    ch,0x34
  40bd6d:	scas   eax,DWORD PTR es:[edi]
  40bd6e:	jle    0x40bd6a
  40bd70:	or     al,al
  40bd72:	cld    
  40bd73:	mul    BYTE PTR ds:0x13fa07cc
  40bd79:	dec    edx
  40bd7a:	push   0xf1060652
  40bd7f:	hlt    
  40bd80:	ret    0x713f
  40bd83:	popf   
  40bd84:	adc    eax,0xf3233958
  40bd89:	jb     0x40bdaf
  40bd8b:	pop    esi
  40bd8c:	cmp    BYTE PTR [edx+0x75],bl
  40bd8f:	test   DWORD PTR [eax+0x45],0xfdf2fad8
  40bd96:	sbb    al,0x96
  40bd98:	(bad)  
  40bd9a:	inc    ebx
  40bd9b:	inc    eax
  40bd9c:	mov    ecx,0xc97e7463
  40bda1:	inc    ecx
  40bda2:	sub    ebx,DWORD PTR [edx]
  40bda4:	pop    eax
  40bda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bda6:	adc    DWORD PTR ds:0x34467625,0xffffff81
  40bdad:	xchg   esp,eax
  40bdae:	jnp    0x40bd8d
  40bdb0:	(bad)  
  40bdb1:	in     eax,dx
  40bdb2:	call   0x96e0:0xb05de8fc
  40bdb9:	rcr    ebx,0xe0
  40bdbc:	in     eax,dx
  40bdbd:	ins    DWORD PTR es:[edi],dx
  40bdbe:	ins    BYTE PTR es:[edi],dx
  40bdbf:	shl    BYTE PTR [edx+0x2],0x1e
  40bdc3:	adc    esi,DWORD PTR [esi]
  40bdc5:	dec    esi
  40bdc6:	scas   al,BYTE PTR es:[edi]
  40bdc7:	or     ecx,DWORD PTR [edi]
  40bdc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdca:	lahf   
  40bdcb:	and    dh,BYTE PTR [edx-0x79d2d729]
  40bdd1:	inc    esi
  40bdd2:	dec    ebp
  40bdd3:	retf   0xd02b
  40bdd6:	cmp    eax,0x659cd2c1
  40bddb:	jbe    0x40be09
  40bddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdde:	pop    esp
  40bddf:	inc    edi
  40bde0:	xchg   edx,eax
  40bde1:	(bad)  
  40bde2:	cmp    eax,0x8745d9c4
  40bde7:	dec    esp
  40bde8:	or     DWORD PTR [edx+edi*1-0x2056c1af],0x5e
  40bdf0:	inc    ecx
  40bdf1:	retf   0x41c3
  40bdf4:	pop    ebx
  40bdf5:	or     esi,DWORD PTR [edx+0xf01724a]
  40bdfb:	lods   al,BYTE PTR ds:[esi]
  40bdfc:	enter  0xc102,0xe9
  40be00:	add    cl,BYTE PTR [ebx-0x7a165fb3]
  40be06:	add    eax,0xfd7d0000
  40be0b:	or     BYTE PTR [edx+eax*4],0x79
  40be0f:	js     0x40be8d
  40be11:	xor    edi,DWORD PTR [edx-0x34]
  40be14:	outs   dx,BYTE PTR ds:[esi]
  40be15:	add    al,0xcd
  40be17:	bound  esi,QWORD PTR [edx+0x1f]
  40be1a:	call   0x47dd435
  40be1f:	push   ss
  40be20:	push   ss
  40be21:	sti    
  40be22:	fist   DWORD PTR [edx-0x2c5f011a]
  40be28:	loop   0x40be9c
  40be2a:	aaa    
  40be2b:	add    bh,BYTE PTR [edx-0x2482a33e]
  40be31:	bt     eax,esp
  40be34:	scas   eax,DWORD PTR es:[edi]
  40be35:	std    
  40be36:	xor    ebx,DWORD PTR [ebx]
  40be38:	xchg   ebx,eax
  40be39:	imul   DWORD PTR [ebp+0x75]
  40be3c:	pop    esi
  40be3d:	daa    
  40be3e:	imul   ebp,DWORD PTR [esi],0x3e
  40be41:	repz pop eax
  40be43:	and    DWORD PTR [ecx*2-0x13557e4c],esi
  40be4a:	push   ds
  40be4b:	loopne 0x40bec6
  40be4d:	or     BYTE PTR [ecx+0x443b8202],bl
  40be53:	xor    BYTE PTR [eax-0x4e],ah
  40be56:	push   0xffffffbd
  40be58:	mov    al,ds:0x17925d7e
  40be5d:	rol    DWORD PTR [edx+0x65cf838b],cl
  40be63:	aas    
  40be64:	pop    ss
  40be65:	(bad)  
  40be66:	aam    0xc6
  40be68:	addr16 nop
  40be6a:	jno    0x40be78
  40be6c:	sbb    si,dx
  40be6f:	xor    al,0x14
  40be71:	xor    esi,ebx
  40be73:	rcr    DWORD PTR [ebp-0x1],0x72
  40be77:	shl    BYTE PTR [esp+esi*4],1
  40be7a:	or     eax,0xda8ab25
  40be7f:	or     BYTE PTR [esi-0x22cb3da1],ah
  40be85:	jnp    0x40bee3
  40be87:	repnz inc ebp
  40be89:	les    ecx,FWORD PTR [edx]
  40be8b:	pop    edx
  40be8c:	dec    ecx
  40be8d:	mov    dl,0x6f
  40be8f:	jp     0x40be94
  40be91:	add    al,0xbb
  40be93:	imul   esi,DWORD PTR [edi-0x10f193d2],0x7931925
  40be9d:	and    ah,dl
  40be9f:	inc    edi
  40bea0:	mov    esp,0x71797c6b
  40bea5:	rcr    DWORD PTR [eax-0x1c],cl
  40bea8:	dec    esi
  40bea9:	fwait
  40beaa:	dec    esp
  40beab:	pop    esi
  40beac:	jge    0x40bec4
  40beae:	push   0xffffffca
  40beb0:	cmp    BYTE PTR [esi+ebp*8+0x5e],cl
  40beb4:	cmp    esi,DWORD PTR [eax+0x31a6d187]
  40beba:	inc    esp
  40bebb:	(bad)  [bx+si-0x6a2a]
  40bec0:	fdivrp st(2),st
  40bec2:	adc    eax,0x54591c1
  40bec7:	stos   DWORD PTR es:[edi],eax
  40bec8:	fsubp  st(6),st
  40beca:	adc    al,0xd4
  40becc:	repnz mov es,WORD PTR [ecx+0x0]
  40bed0:	and    al,0xeb
  40bed2:	sbb    bl,al
  40bed4:	in     eax,dx
  40bed5:	(bad)  
  40bed6:	mov    esp,0x89183dfe
  40bedb:	fisubr WORD PTR [ebx+0x5a]
  40bede:	sub    eax,0xb7867810
  40bee3:	stos   BYTE PTR es:[edi],al
  40bee4:	xchg   BYTE PTR [ecx+0x19],ah
  40bee7:	imul   edi,edi,0xffffff92
  40beea:	inc    esi
  40beeb:	xchg   DWORD PTR [edx-0xc],ebp
  40beee:	or     esp,DWORD PTR [ebx]
  40bef0:	les    edx,FWORD PTR ds:0xc89f7777
  40bef6:	lahf   
  40bef7:	call   0x14c4:0xaa722732
  40befe:	push   esp
  40beff:	neg    BYTE PTR [edi-0x6d37e16c]
  40bf05:	out    dx,eax
  40bf06:	jno    0x40becb
  40bf08:	cs icebp 
  40bf0a:	and    al,0x8f
  40bf0c:	jmp    0x3b59:0xb96246c
  40bf13:	and    ah,ah
  40bf15:	inc    ebp
  40bf16:	lds    ebp,FWORD PTR [edx]
  40bf18:	jne    0x40bf6d
  40bf1a:	sahf   
  40bf1b:	add    dl,BYTE PTR [eax]
  40bf1d:	mov    eax,0x476222c2
  40bf22:	pop    ds
  40bf23:	or     DWORD PTR [ecx],0xf31a51c2
  40bf29:	das    
  40bf2a:	sub    edx,eax
  40bf2c:	sub    esi,0x2ccdb77d
  40bf32:	and    ah,BYTE PTR [ebx+0x20]
  40bf35:	push   ds
  40bf36:	push   0x876a8370
  40bf3b:	inc    edx
  40bf3c:	xor    bl,dl
  40bf3e:	xlat   BYTE PTR ds:[ebx]
  40bf3f:	fist   WORD PTR ds:0x1327911b
  40bf45:	test   al,0x71
  40bf47:	add    eax,0x3a866d6a
  40bf4c:	mov    eax,0xad6f6473
  40bf51:	add    bl,ah
  40bf53:	pusha  
  40bf54:	dec    esp
  40bf55:	js     0x40bfca
  40bf57:	fwait
  40bf58:	loop   0x40bfc4
  40bf5a:	nop
  40bf5b:	test   eax,0x51598382
  40bf60:	aas    
  40bf61:	or     eax,0xf29ec48
  40bf66:	je     0x40bf4a
  40bf68:	fs pop ebx
  40bf6a:	xor    al,BYTE PTR [esi+0x6ac9bccf]
  40bf70:	add    eax,esp
  40bf72:	je     0x40bfbe
  40bf74:	pop    es
  40bf75:	jp     0x40bf64
  40bf77:	inc    ebx
  40bf78:	cs loop 0x40bfdd
  40bf7b:	aas    
  40bf7c:	mov    dh,0x99
  40bf7e:	or     ebx,ecx
  40bf80:	outs   dx,DWORD PTR ds:[esi]
  40bf81:	jo     0x40bfc0
  40bf83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf84:	mov    eax,ds:0x1dde2157
  40bf89:	lods   al,BYTE PTR ds:[esi]
  40bf8a:	call   esp
  40bf8c:	adc    eax,0xefcd8928
  40bf91:	(bad)  
  40bf93:	xchg   edx,eax
  40bf94:	popa   
  40bf95:	es mov ebx,0xd66e3f51
  40bf9b:	inc    esp
  40bf9c:	repnz out 0x53,eax
  40bf9f:	and    BYTE PTR [eax],cl
  40bfa1:	(bad)  
  40bfa3:	mov    WORD PTR [eax-0x26743997],?
  40bfa9:	xchg   DWORD PTR [ebx],edx
  40bfab:	in     eax,0xd7
  40bfad:	mov    edx,0x1b3bc5fd
  40bfb2:	call   0x4de11969
  40bfb7:	pushf  
  40bfb8:	sbb    bl,dl
  40bfba:	(bad)  
  40bfbb:	out    0xb1,eax
  40bfbd:	dec    ebx
  40bfbe:	push   ebx
  40bfbf:	shl    DWORD PTR [esi+0x7d],0x5a
  40bfc3:	or     eax,0x1c1a43c2
  40bfc8:	rol    BYTE PTR [esi+ebp*4+0x31ab9bf7],0x25
  40bfd0:	fnstcw WORD PTR [ecx+ebx*4+0x1b875805]
  40bfd7:	fstp   QWORD PTR [ecx+0x7]
  40bfda:	sbb    DWORD PTR [ebx+0x8cccb2],edi
  40bfe0:	jns    0x40bfac
  40bfe2:	aam    0xd0
  40bfe4:	inc    ebx
  40bfe5:	dec    ecx
  40bfe6:	cs mov ah,0x12
  40bfe9:	push   es
  40bfea:	cld    
  40bfeb:	cdq    
  40bfec:	jo     0x40c00d
  40bfee:	out    0x8f,al
  40bff0:	ror    edi,0x35
  40bff3:	or     DWORD PTR [ebp+0x45],ebx
  40bff6:	ret    0x15be
  40bff9:	dec    ebp
  40bffa:	xor    DWORD PTR [edi-0x8],ecx
  40bffd:	mov    ebx,0xce7257ae
  40c002:	and    DWORD PTR [ebp-0x6d28c194],esi
  40c008:	dec    edx
  40c009:	(bad)  
  40c00a:	es inc eax
  40c00c:	inc    ebx
  40c00d:	sbb    BYTE PTR [ebx-0x35],cl
  40c010:	stc    
  40c011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c012:	xchg   DWORD PTR [ebx-0x44dfd328],ebx
  40c018:	(bad)  
  40c019:	fnstsw WORD PTR [edi-0x65a3365d]
  40c01f:	mov    bh,0x16
  40c021:	push   edi
  40c022:	scas   al,BYTE PTR es:[edi]
  40c023:	pop    ebp
  40c024:	jns    0x40c075
  40c026:	popa   
  40c027:	out    0x59,eax
  40c029:	popf   
  40c02a:	or     edi,DWORD PTR ds:0x735e995b
  40c030:	gs adc eax,0xd510d6f5
  40c036:	jb     0x40bffc
  40c038:	xchg   BYTE PTR [ebx],ch
  40c03a:	cmp    DWORD PTR [edx],edx
  40c03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03d:	gs pusha 
  40c03f:	push   eax
  40c040:	mov    ds:0x1f43319e,al
  40c045:	fist   WORD PTR [edi+0x2]
  40c048:	in     eax,0x30
  40c04a:	xchg   edx,eax
  40c04b:	sbb    dl,BYTE PTR [ebx+0x58e81bc8]
  40c051:	jmp    0x95d2:0x391a0e35
  40c058:	or     DWORD PTR [edi],edx
  40c05a:	aaa    
  40c05b:	xor    eax,0xc53915e2
  40c060:	sbb    cl,0xfb
  40c063:	mov    ebx,DWORD PTR [esp+eax*4-0x7d14bf17]
  40c06a:	dec    esp
  40c06b:	push   eax
  40c06c:	sti    
  40c06d:	ins    DWORD PTR es:[edi],dx
  40c06e:	ja     0x40bff0
  40c070:	sub    eax,DWORD PTR [ecx+0x3d3b2b96]
  40c076:	pop    es
  40c077:	and    BYTE PTR [ecx-0x725b4793],ch
  40c07d:	jl     0x40c0df
  40c07f:	add    DWORD PTR [ecx-0x53],eax
  40c082:	test   esi,esi
  40c084:	dec    esp
  40c085:	adc    BYTE PTR [esi-0x2c],dl
  40c088:	pop    edx
  40c089:	cld    
  40c08a:	int3   
  40c08b:	sti    
  40c08c:	sbb    BYTE PTR [edx+edi*8+0x5e],0x9b
  40c091:	inc    ecx
  40c092:	xchg   ecx,eax
  40c093:	outs   dx,DWORD PTR ds:[esi]
  40c094:	dec    edi
  40c095:	xchg   esi,eax
  40c096:	xor    ebp,ebx
  40c098:	jo     0x40c0d8
  40c09a:	mov    bl,0x6d
  40c09c:	or     DWORD PTR [esi],edx
  40c09e:	test   BYTE PTR [ecx+eax*2+0x56],bl
  40c0a2:	add    DWORD PTR [edx-0x1e],esi
  40c0a5:	pop    ebx
  40c0a6:	mov    esp,0xebf0b205
  40c0ab:	xchg   esi,eax
  40c0ac:	dec    edx
  40c0ad:	xor    eax,0xb4392ff9
  40c0b2:	sub    eax,esi
  40c0b4:	inc    edi
  40c0b5:	mov    WORD PTR [edi-0x57],cs
  40c0b8:	js     0x40c0a1
  40c0ba:	xlat   BYTE PTR ds:[ebx]
  40c0bb:	fidivr WORD PTR fs:[ecx]
  40c0be:	adc    ebx,ecx
  40c0c0:	pop    ebx
  40c0c1:	dec    edi
  40c0c2:	mov    ds:0x5424dda3,al
  40c0c7:	ins    BYTE PTR es:[edi],dx
  40c0c8:	sahf   
  40c0c9:	ret    0x9bed
  40c0cc:	out    0xcf,al
  40c0ce:	es jmp 0xabddcce6
  40c0d4:	ins    BYTE PTR es:[edi],dx
  40c0d5:	sub    edi,0x50
  40c0d8:	jmp    0xb176:0x8892244c
  40c0df:	mov    ?,esp
  40c0e1:	xchg   esp,eax
  40c0e2:	jmp    0x89f0:0xdb53f8a8
  40c0e9:	(bad)  
  40c0ea:	sbb    al,BYTE PTR [ebx-0x14143f00]
  40c0f0:	push   esi
  40c0f1:	les    edx,FWORD PTR [ecx]
  40c0f3:	je     0x40c09a
  40c0f5:	push   0xf15e5060
  40c0fa:	add    al,0x72
  40c0fc:	or     ebp,0x8d5c6b73
  40c102:	jo     0x40c16b
  40c104:	adc    DWORD PTR ds:0xa5c21dc7,edx
  40c10a:	hlt    
  40c10b:	sbb    al,0x40
  40c10d:	jns    0x40c133
  40c10f:	sar    ebp,0x36
  40c112:	jnp    0x40c0b6
  40c114:	push   ebp
  40c115:	inc    edi
  40c116:	jns    0x40c10d
  40c118:	xchg   BYTE PTR [esi+0x5d],cl
  40c11b:	in     al,0xde
  40c11d:	pop    edi
  40c11e:	aaa    
  40c11f:	test   DWORD PTR [edx],ecx
  40c121:	push   edx
  40c122:	xchg   BYTE PTR [edi],al
  40c124:	sub    DWORD PTR [edx+eiz*8+0x18],ebx
  40c128:	out    0xa5,al
  40c12a:	or     ebx,DWORD PTR [ebx+0x302b3613]
  40c130:	xor    eax,0x192ce64e
  40c135:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c137:	out    dx,al
  40c138:	test   DWORD PTR [esi+0x15ec8a45],esi
  40c13e:	lods   al,BYTE PTR ds:[esi]
  40c13f:	rcr    DWORD PTR [ebp+ecx*2+0x5149ea29],cl
  40c146:	push   ss
  40c147:	mov    edi,0xcc70d318
  40c14c:	in     al,dx
  40c14d:	sahf   
  40c14e:	dec    esi
  40c14f:	rcr    BYTE PTR [edi-0x267ad085],cl
  40c155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c156:	jmp    0x986b:0xcacc89b8
  40c15d:	adc    ah,dl
  40c15f:	jae    0x40c0ef
  40c161:	repz ret 0x239c
  40c165:	jmp    0x40c159
  40c167:	xor    ebx,DWORD PTR [esi+0x7a6c7df4]
  40c16d:	stos   BYTE PTR es:[edi],al
  40c16e:	dec    ebx
  40c16f:	int    0x12
  40c171:	lods   eax,DWORD PTR ds:[esi]
  40c172:	pop    edi
  40c173:	jb     0x40c152
  40c175:	das    
  40c176:	mov    esp,0x3052f1d2
  40c17b:	xchg   esi,eax
  40c17c:	mov    ch,0x3d
  40c17e:	aaa    
  40c17f:	out    0x2a,eax
  40c181:	test   eax,0xa0a0efe
  40c186:	loopne 0x40c1db
  40c188:	leave  
  40c189:	xor    ecx,DWORD PTR [esi+edi*2-0x5c]
  40c18d:	add    ebx,edx
  40c18f:	jbe    0x40c137
  40c191:	push   esi
  40c192:	adc    bh,BYTE PTR [eax+ecx*1]
  40c195:	into   
  40c196:	sub    al,ah
  40c198:	or     al,0x32
  40c19a:	ins    DWORD PTR es:[edi],dx
  40c19b:	arpl   WORD PTR [edi+ebp*8],di
  40c19e:	lds    esi,FWORD PTR [ebp+0x2e]
  40c1a1:	jmp    0xce02:0x7d75fe8
  40c1a8:	jo     0x40c1c1
  40c1aa:	inc    ebp
  40c1ab:	out    0x4c,al
  40c1ad:	mov    ds:0x7415bb19,eax
  40c1b2:	ret    0x905f
  40c1b5:	cwde   
  40c1b6:	sbb    eax,0xc87d6f5a
  40c1bb:	test   eax,0x85a0bfb5
  40c1c0:	scas   al,BYTE PTR es:[edi]
  40c1c1:	int3   
  40c1c2:	mov    dh,0xaf
  40c1c4:	test   DWORD PTR [edx-0x5e],0xc60b1b7a
  40c1cb:	and    BYTE PTR ds:0x68347ef8,ah
  40c1d1:	push   DWORD PTR [edx]
  40c1d3:	sbb    esi,esi
  40c1d5:	cdq    
  40c1d6:	imul   edx,DWORD PTR [ebp+edi*4-0x66b47f17],0x6b
  40c1de:	ja     0x40c198
  40c1e0:	jmp    0xa715:0x6aec181a
  40c1e7:	out    0xfc,al
  40c1e9:	xchg   ebx,eax
  40c1ea:	fldenv [esi+0x43]
  40c1ed:	add    BYTE PTR [eax],0x3e
  40c1f0:	int    0x2d
  40c1f2:	sub    cl,al
  40c1f4:	outs   dx,DWORD PTR ds:[esi]
  40c1f5:	adc    ebx,ebx
  40c1f7:	nop
  40c1f8:	retf   
  40c1f9:	ss jbe 0x40c184
  40c1fc:	(bad)  
  40c1fd:	jg     0x40c23e
  40c1ff:	loop   0x40c1cf
  40c201:	div    DWORD PTR [ebx]
  40c203:	fs push cs
  40c205:	adc    eax,0x5e41a819
  40c20a:	inc    ebx
  40c20b:	jecxz  0x40c1dd
  40c20d:	inc    edx
  40c20e:	mov    esp,0x2ceaf49b
  40c213:	cmp    edi,DWORD PTR [ebx]
  40c215:	sbb    al,0x1d
  40c217:	cdq    
  40c218:	inc    esi
  40c219:	popa   
  40c21a:	fs jae 0x40c274
  40c21d:	repz cwde 
  40c21f:	sbb    bl,BYTE PTR [ebx]
  40c221:	push   cs
  40c222:	mov    DWORD PTR [edi+0x27],edx
  40c225:	in     eax,dx
  40c226:	pop    eax
  40c227:	fs popf 
  40c229:	ds dec esp
  40c22b:	jmp    0xb64eb804
  40c230:	sbb    al,0x50
  40c232:	mov    eax,ds:0xb960d0ef
  40c237:	inc    edx
  40c238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c239:	(bad)  
  40c23a:	mov    ds:0x8898acfa,eax
  40c23f:	div    DWORD PTR [eax+0x6c]
  40c242:	add    eax,0x13f6d4bf
  40c247:	xor    BYTE PTR [ecx-0x40],0x80
  40c24b:	mov    bl,BYTE PTR [eax]
  40c24d:	jb     0x40c2a1
  40c24f:	mov    DWORD PTR [edi+0x12],esi
  40c252:	mov    ecx,0x4ee6bb57
  40c257:	add    DWORD PTR [edi+0x28],esp
  40c25a:	pop    eax
  40c25b:	jg     0x40c2c3
  40c25d:	out    dx,al
  40c25e:	inc    ebp
  40c25f:	int    0xdc
  40c261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c262:	fwait
  40c263:	sbb    ebp,DWORD PTR [ebx+edi*8]
  40c266:	das    
  40c267:	dec    edi
  40c268:	test   BYTE PTR [eax-0x17],al
  40c26b:	adc    eax,0x63493dd0
  40c270:	push   DWORD PTR [eax-0x1b8b8d2e]
  40c276:	xchg   ebx,eax
  40c277:	loop   0x40c2cc
  40c279:	inc    edx
  40c27a:	out    0x48,al
  40c27c:	jecxz  0x40c20c
  40c27e:	sub    al,0xa4
  40c280:	push   cs
  40c281:	sbb    eax,0x16d53969
  40c286:	push   esi
  40c287:	sar    dh,0x7
  40c28a:	aaa    
  40c28b:	mov    dh,0xcf
  40c28d:	xchg   DWORD PTR cs:[ecx],edi
  40c290:	xor    BYTE PTR [edi+0x29],bl
  40c293:	pop    edx
  40c294:	out    0xe6,eax
  40c296:	mov    bh,0xca
  40c298:	pop    es
  40c299:	cmp    edx,DWORD PTR [ecx-0x1621625f]
  40c29f:	cli    
  40c2a0:	or     ebp,ebp
  40c2a2:	add    BYTE PTR [esi-0x59c6c830],bh
  40c2a8:	mov    al,ds:0x86abae85
  40c2ad:	or     BYTE PTR [edx-0xc],al
  40c2b0:	sub    ebp,ebp
  40c2b2:	out    0xd9,al
  40c2b4:	aas    
  40c2b5:	mov    ebx,0xece08d3b
  40c2ba:	ret    
  40c2bb:	clc    
  40c2bc:	fisttp WORD PTR [ebx+0x1ea8c9ef]
  40c2c2:	ror    DWORD PTR [edi-0x5bee0a68],cl
  40c2c8:	jmp    FWORD PTR [ebp-0x5b]
  40c2cb:	out    0x5,eax
  40c2cd:	scas   al,BYTE PTR es:[edi]
  40c2ce:	pop    esi
  40c2cf:	test   BYTE PTR [eax-0x6b],ah
  40c2d2:	push   edi
  40c2d3:	(bad)  
  40c2d4:	jmp    0x40c2ce
  40c2d6:	or     ebx,esi
  40c2d8:	jbe    0x40c28d
  40c2da:	int3   
  40c2db:	dec    edx
  40c2dc:	int    0xd0
  40c2de:	(bad)
  40c2e1:	sbb    eax,0x207da8f9
  40c2e6:	loope  0x40c2ab
  40c2e8:	pusha  
  40c2e9:	mov    edi,0x2e198c2b
  40c2ee:	mov    ds:0x63e9ebf0,eax
  40c2f3:	add    edx,DWORD PTR [edi]
  40c2f5:	outs   dx,BYTE PTR ds:[esi]
  40c2f6:	mov    BYTE PTR [edi+0x36135140],ah
  40c2fc:	jmp    0x40c28f
  40c2fe:	sbb    eax,0x74d61bc5
  40c303:	pop    ebx
  40c304:	(bad)  
  40c306:	imul   edi,DWORD PTR [ebp+0x5d],0xed5b3b8f
  40c30d:	loop   0x40c2da
  40c30f:	addr16 sahf 
  40c311:	sbb    ch,BYTE PTR [ebp+edi*1-0x40]
  40c315:	js     0x40c31b
  40c317:	push   edi
  40c318:	mov    al,ds:0x9fffd04f
  40c31d:	jo     0x40c373
  40c31f:	push   edi
  40c320:	jmp    0xcce0:0x57ab8518
  40c327:	in     al,dx
  40c328:	or     al,0xb0
  40c32a:	into   
  40c32b:	xor    ch,bh
  40c32d:	xor    al,0x63
  40c32f:	test   al,0x6a
  40c331:	sbb    ch,dl
  40c333:	(bad)  
  40c334:	push   esp
  40c335:	mov    al,0x3e
  40c337:	xor    DWORD PTR [ebx-0x62],edi
  40c33a:	int    0x9b
  40c33c:	mov    ds:0xa8fea99,eax
  40c341:	push   ebx
  40c342:	sar    DWORD PTR [bp+si-0x5a7b],1
  40c347:	in     eax,0x4d
  40c349:	xchg   edx,eax
  40c34a:	fidiv  WORD PTR [ecx]
  40c34c:	aas    
  40c34d:	dec    edi
  40c34e:	sub    al,0xca
  40c350:	inc    ecx
  40c351:	push   esp
  40c352:	cmp    eax,DWORD PTR [edx+0x2d33acea]
  40c358:	fucom  st(6)
  40c35a:	lahf   
  40c35b:	ja     0x40c3cb
  40c35d:	inc    ebp
  40c35e:	daa    
  40c35f:	lods   al,BYTE PTR ds:[esi]
  40c360:	or     eax,DWORD PTR [ebx]
  40c362:	cmp    BYTE PTR [esi-0x13],ah
  40c365:	pop    esi
  40c366:	xor    DWORD PTR [ecx-0x43865d3b],edx
  40c36c:	add    eax,eax
  40c36e:	loop   0x40c349
  40c370:	int    0xd4
  40c372:	sbb    al,0xc9
  40c374:	dec    esi
  40c376:	pop    esp
  40c377:	mov    bl,0x5d
  40c379:	jle    0x40c32f
  40c37b:	stos   BYTE PTR es:[edi],al
  40c37c:	sbb    DWORD PTR [ecx],ecx
  40c37e:	(bad)  
  40c37f:	push   ss
  40c380:	and    BYTE PTR [edi],ah
  40c382:	mov    edi,0x4e04337b
  40c387:	dec    ebx
  40c388:	mov    dl,0x9d
  40c38a:	push   edi
  40c38b:	xchg   edx,eax
  40c38c:	xor    cl,ah
  40c38e:	mov    edx,DWORD PTR [ebp-0x5c]
  40c391:	xor    eax,edi
  40c393:	xor    edx,edx
  40c395:	or     eax,edx
  40c397:	mov    edx,DWORD PTR [ebp+0x14]
  40c39a:	shl    ecx,0x1e
  40c39d:	jmp    0x40c927
  40c3a2:	sbb    esp,edi
  40c3a4:	adc    eax,0x1913193b
  40c3a9:	aad    0x32
  40c3ab:	into   
  40c3ac:	sti    
  40c3ad:	mov    ah,0xcf
  40c3af:	pop    eax
  40c3b0:	sti    
  40c3b1:	mov    ah,0x44
  40c3b3:	ficom  WORD PTR [esi]
  40c3b5:	push   ss
  40c3b6:	cmp    eax,0xf8161604
  40c3bb:	dec    edx
  40c3bc:	je     0x40c3a3
  40c3be:	cmp    sp,WORD PTR [ebp+0x3321e4b2]
  40c3c5:	icebp  
  40c3c6:	xor    DWORD PTR [esp+ecx*4+0x53],edi
  40c3ca:	jge    0x40c43c
  40c3cc:	push   ebx
  40c3cd:	add    edi,DWORD PTR [ecx]
  40c3cf:	(bad)  
  40c3d0:	imul   ebp,DWORD PTR [edx-0x7d],0x4a
  40c3d4:	xlat   BYTE PTR ds:[ebx]
  40c3d5:	ja     0x40c417
  40c3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d8:	jne    0x40c364
  40c3da:	xor    edi,DWORD PTR [ebx-0x11]
  40c3dd:	ret    
  40c3de:	or     dl,BYTE PTR [edi-0x20]
  40c3e1:	xor    cl,ch
  40c3e3:	cmp    DWORD PTR [edx],esi
  40c3e5:	push   ebx
  40c3e6:	in     al,0x26
  40c3e8:	mov    DWORD PTR [edx+0x50],esp
  40c3eb:	repz aam 0xf1
  40c3ee:	test   DWORD PTR [eax-0x3eec8f1b],edi
  40c3f4:	out    0xcc,al
  40c3f6:	fiadd  DWORD PTR [edi-0x63]
  40c3f9:	push   edi
  40c3fa:	fsub   QWORD PTR [eax+edi*4-0x1eb64d6a]
  40c401:	adc    dh,bl
  40c403:	shr    DWORD PTR ds:0xa5d7fc9a,cl
  40c409:	repz call 0x230a0f5b
  40c40f:	addr16 in al,0xa5
  40c412:	inc    esp
  40c413:	inc    edi
  40c414:	xchg   BYTE PTR [ebp-0xe7482c],ch
  40c41a:	jne    0x40c3ca
  40c41c:	cmp    BYTE PTR [edx],ch
  40c41e:	loope  0x40c43e
  40c420:	inc    edi
  40c421:	mov    ds:0xe0d61d5f,al
  40c426:	sub    cl,dl
  40c428:	stos   BYTE PTR es:[edi],al
  40c429:	nop
  40c42a:	test   BYTE PTR ds:[edi],cl
  40c42d:	sub    BYTE PTR [ecx],0x6f
  40c430:	push   eax
  40c431:	lahf   
  40c432:	push   eax
  40c433:	aad    0x9
  40c435:	fisub  DWORD PTR [eax]
  40c437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c438:	outs   dx,DWORD PTR ds:[esi]
  40c439:	aad    0xc4
  40c43b:	mov    ebx,0xc30a6a61
  40c440:	jo     0x40c4ae
  40c442:	(bad)  
  40c443:	jl     0x40c3f8
  40c445:	fdiv   DWORD PTR [edi+0x18d84a6d]
  40c44b:	(bad)  
  40c44d:	je     0x40c3f2
  40c44f:	ss mov cl,0xf9
  40c452:	aas    
  40c453:	lods   eax,DWORD PTR ds:[esi]
  40c454:	mov    bh,0x34
  40c456:	mov    bl,0xc1
  40c458:	jno    0x40c45b
  40c45a:	std    
  40c45b:	nop
  40c45c:	mov    cl,0x11
  40c45e:	jle    0x40c4d3
  40c460:	pop    ss
  40c461:	add    BYTE PTR [esi*1+0x54aec307],ch
  40c468:	mov    WORD PTR [edi],cs
  40c46a:	hlt    
  40c46b:	sar    ebx,cl
  40c46d:	xor    eax,0xaef043d4
  40c472:	xchg   ebp,eax
  40c473:	push   cs
  40c474:	mov    ebx,0x24e507b3
  40c479:	mov    ecx,0x9fda196f
  40c47e:	xor    DWORD PTR [ebp-0x79],edx
  40c481:	push   0x64
  40c483:	pop    esp
  40c484:	sbb    BYTE PTR [edx+0x31],dh
  40c487:	pop    esp
  40c488:	mov    ah,0xc9
  40c48a:	out    0xd9,al
  40c48c:	mov    WORD PTR [ebx-0x4c],?
  40c48f:	stos   DWORD PTR es:[edi],eax
  40c490:	ror    DWORD PTR [edx],1
  40c492:	pop    ds
  40c493:	je     0x40c4da
  40c495:	or     eax,0xf740fd99
  40c49a:	rcr    DWORD PTR [edi],cl
  40c49c:	int3   
  40c49d:	mov    ds:0x17cdf8db,al
  40c4a2:	ret    0x36dc
  40c4a5:	push   ds
  40c4a6:	hlt    
  40c4a7:	fstp   QWORD PTR [ecx+0x6c232f2a]
  40c4ad:	es int 0xb1
  40c4b0:	popa   
  40c4b1:	sbb    edi,DWORD PTR [ebp+0x71]
  40c4b4:	sub    esi,DWORD PTR [ecx]
  40c4b6:	sub    edx,DWORD PTR [esp+eiz*2-0x679f3a88]
  40c4bd:	and    eax,0xa288feff
  40c4c2:	fistp  DWORD PTR [ebx]
  40c4c4:	ins    BYTE PTR es:[edi],dx
  40c4c5:	std    
  40c4c6:	aaa    
  40c4c7:	data16 mov al,ds:0x2b4c6608
  40c4cd:	xor    esp,DWORD PTR [ebp-0x3d]
  40c4d0:	push   edx
  40c4d1:	inc    esp
  40c4d2:	and    eax,0x61237b88
  40c4d7:	or     DWORD PTR [ecx+eiz*1-0x587ed8e7],esi
  40c4de:	ins    BYTE PTR es:[edi],dx
  40c4df:	into   
  40c4e0:	jb     0x40c4f6
  40c4e2:	sbb    BYTE PTR [esi-0x3d],ch
  40c4e5:	bound  ebx,QWORD PTR [esi]
  40c4e7:	jp     0x40c4b7
  40c4e9:	mov    ds,esi
  40c4eb:	pop    edx
  40c4ec:	push   ecx
  40c4ed:	or     BYTE PTR [ecx-0x673e1cc6],0x55
  40c4f4:	cs jg  0x40c572
  40c4f7:	mov    WORD PTR [ecx+0x464e084f],fs
  40c4fd:	mov    bh,0xfb
  40c4ff:	cs push 0xa0f0a9f4
  40c505:	scas   al,BYTE PTR es:[edi]
  40c506:	stos   BYTE PTR es:[edi],al
  40c507:	gs cli 
  40c509:	jns    0x40c4c1
  40c50b:	outs   dx,DWORD PTR ds:[esi]
  40c50c:	jp     0x40c4f1
  40c50e:	mov    ah,0xe7
  40c510:	inc    edx
  40c511:	div    BYTE PTR [esi-0x7f]
  40c514:	(bad)  
  40c515:	mov    esi,0x235bbdd0
  40c51a:	push   edx
  40c51b:	mov    esi,0xc0222aee
  40c520:	jne    0x40c4f8
  40c522:	push   ds
  40c523:	mov    edi,0x88c1352f
  40c528:	not    BYTE PTR [edx-0x5f]
  40c52b:	enter  0xb783,0xa8
  40c52f:	test   edx,esi
  40c531:	pop    ebx
  40c532:	call   0x2a33ac42
  40c537:	sub    al,0xf1
  40c539:	pop    esi
  40c53a:	cmp    dl,BYTE PTR [ecx-0x75]
  40c53d:	sub    cl,al
  40c53f:	xor    eax,DWORD PTR ds:0x9a0df5f8
  40c545:	stc    
  40c546:	xchg   DWORD PTR [ebx],eax
  40c548:	inc    ecx
  40c549:	inc    esi
  40c54a:	jl     0x40c5ab
  40c54c:	jno    0x40c55e
  40c54e:	sub    cl,dh
  40c550:	add    esi,DWORD PTR [ebx+edx*4+0x211e6233]
  40c557:	push   ecx
  40c558:	addr16 gs pushf 
  40c55b:	jge    0x40c5d5
  40c55d:	xlat   BYTE PTR ds:[ebx]
  40c55e:	sbb    DWORD PTR [esi-0x6e],0x921c23fd
  40c565:	nop
  40c566:	arpl   WORD PTR [esi],cx
  40c568:	aaa    
  40c569:	xchg   DWORD PTR [eax-0x67],edi
  40c56c:	dec    esi
  40c56d:	ret    0x7447
  40c570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c571:	xchg   edx,eax
  40c572:	adc    eax,0xe61c1cb3
  40c577:	xchg   ecx,eax
  40c578:	mov    edi,0xa2407fa7
  40c57d:	mov    edi,eax
  40c57f:	pushf  
  40c580:	add    DWORD PTR [esi-0x30914d8a],edi
  40c586:	xchg   edi,eax
  40c587:	fadd   QWORD PTR [esi]
  40c589:	jecxz  0x40c582
  40c58b:	push   cs
  40c58c:	das    
  40c58d:	into   
  40c58e:	sub    BYTE PTR [eax],al
  40c590:	jmp    0x40c5ba
  40c592:	inc    ebx
  40c593:	sbb    dl,dh
  40c595:	inc    esp
  40c596:	cli    
  40c597:	jmp    0x40c5f9
  40c599:	out    0x6b,eax
  40c59b:	mov    edi,0x81a73af5
  40c5a0:	sbb    al,0xc5
  40c5a2:	scas   eax,DWORD PTR es:[edi]
  40c5a3:	retf   0xb1bd
  40c5a6:	adc    edx,DWORD PTR [edi-0x46]
  40c5a9:	push   edi
  40c5aa:	cli    
  40c5ab:	(bad)  
  40c5ac:	cdq    
  40c5ad:	mov    ch,0x6e
  40c5af:	ins    DWORD PTR es:[edi],dx
  40c5b0:	int3   
  40c5b1:	jbe    0x40c5f2
  40c5b3:	xchg   edi,eax
  40c5b4:	jl     0x40c5ac
  40c5b6:	inc    ebx
  40c5b7:	jg     0x40c636
  40c5b9:	sub    al,0x65
  40c5bb:	mov    eax,0xac0f538c
  40c5c0:	dec    DWORD PTR [edx+0x4c]
  40c5c3:	(bad)  
  40c5c5:	dec    esi
  40c5c6:	jmp    0x40c578
  40c5c8:	cwde   
  40c5c9:	dec    ecx
  40c5ca:	cli    
  40c5cb:	int3   
  40c5cc:	pop    edi
  40c5cd:	push   ebx
  40c5ce:	rcr    DWORD PTR [eax+0x6a217cc],0x4b
  40c5d5:	clc    
  40c5d6:	xor    al,0xf
  40c5d8:	mov    ?,WORD PTR [ecx+0x2963d803]
  40c5de:	je     0x40c645
  40c5e0:	jmp    0x8cfb:0x75bf17ff
  40c5e7:	pop    esi
  40c5e8:	mov    ah,0x47
  40c5ea:	repz gs enter 0x7976,0x8c
  40c5f0:	sub    eax,0xb4be4fcd
  40c5f5:	xchg   ecx,eax
  40c5f6:	in     eax,dx
  40c5f7:	fnstcw WORD PTR ds:0x6fae0290
  40c5fd:	sbb    bl,bl
  40c5ff:	jge    0x40c5c6
  40c601:	mov    DWORD PTR [ebx-0x4e],esp
  40c604:	mov    ebx,0xc8e03935
  40c609:	add    eax,0x7811b009
  40c60e:	in     eax,dx
  40c60f:	aaa    
  40c610:	xor    DWORD PTR [edx+0x7b],eax
  40c613:	add    ah,BYTE PTR [eax]
  40c615:	pop    edi
  40c616:	out    0xa1,eax
  40c618:	push   ecx
  40c619:	call   0x558f:0xa50707fa
  40c620:	test   al,0x50
  40c622:	out    0x79,al
  40c624:	cld    
  40c625:	pop    esi
  40c626:	ins    DWORD PTR es:[edi],dx
  40c627:	les    esi,FWORD PTR [ecx-0x20]
  40c62a:	push   ebx
  40c62b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c62c:	jns    0x40c638
  40c62e:	xchg   DWORD PTR [edi],ecx
  40c630:	outs   dx,BYTE PTR ds:[esi]
  40c631:	sbb    edi,esp
  40c633:	sub    DWORD PTR [edi-0x76],ebx
  40c636:	enter  0xa1e9,0x98
  40c63a:	repz xor eax,0xb6fe4fb4
  40c640:	sti    
  40c641:	jae    0x40c5dd
  40c643:	or     ah,0xce
  40c646:	rcl    BYTE PTR [edx-0x20],0xa6
  40c64a:	push   eax
  40c64b:	jns    0x40c67f
  40c64d:	mov    ?,WORD PTR [ecx-0x293b5d1c]
  40c653:	inc    ecx
  40c654:	adc    ch,BYTE PTR [ebp+0x59]
  40c657:	or     al,0x68
  40c659:	scas   eax,DWORD PTR es:[edi]
  40c65a:	scas   eax,DWORD PTR es:[edi]
  40c65b:	call   0x73df054f
  40c660:	in     al,dx
  40c661:	jecxz  0x40c66a
  40c663:	rol    esp,cl
  40c665:	lock mov ebx,0x18d0e35b
  40c66b:	xor    ecx,DWORD PTR [eax+0x13f546f]
  40c671:	fimul  WORD PTR [edx+0x1c]
  40c674:	lock mov ds:0xcaf63007,al
  40c67a:	ss ss jnp 0x40c6ec
  40c67e:	ret    
  40c67f:	lods   al,BYTE PTR ds:[esi]
  40c680:	test   eax,0x937e250c
  40c685:	inc    esp
  40c686:	psllq  mm5,mm4
  40c689:	push   esp
  40c68a:	or     DWORD PTR [ecx-0x5a6f8a03],0xffffffef
  40c691:	mov    esp,0xd7a9365d
  40c696:	hlt    
  40c697:	sahf   
  40c698:	pop    DWORD PTR [edi-0x56]
  40c69b:	sub    dl,BYTE PTR [ecx-0x996147e]
  40c6a1:	pop    edx
  40c6a2:	jp     0x40c64e
  40c6a4:	mov    WORD PTR [ebx-0x3c8ca65d],es
  40c6aa:	cmp    DWORD PTR [eax],edi
  40c6ac:	inc    ecx
  40c6ad:	mov    WORD PTR [edi+0x71],cs
  40c6b0:	cmp    DWORD PTR [edi+ebx*4],edx
  40c6b3:	and    eax,0x694c24ba
  40c6b8:	pop    ebx
  40c6b9:	adc    edi,DWORD PTR [ebx]
  40c6bb:	std    
  40c6bc:	outs   dx,BYTE PTR ds:[esi]
  40c6bd:	sahf   
  40c6be:	loopne 0x40c671
  40c6c0:	scas   eax,DWORD PTR es:[edi]
  40c6c1:	enter  0x6999,0xa7
  40c6c5:	pop    ds
  40c6c6:	ins    DWORD PTR es:[edi],dx
  40c6c7:	or     esp,ecx
  40c6c9:	or     eax,ebp
  40c6cb:	imul   eax
  40c6cd:	mov    al,ds:0x5f20c908
  40c6d2:	cmp    BYTE PTR [esp+edi*2-0x59],0xc
  40c6d7:	out    dx,eax
  40c6d8:	ins    DWORD PTR es:[edi],dx
  40c6d9:	and    cl,BYTE PTR [esi+0x6be9a957]
  40c6df:	sub    edi,DWORD PTR [ecx-0x2d]
  40c6e2:	cmp    ebx,DWORD PTR [edx-0x657a6075]
  40c6e8:	test   eax,0xca9a4124
  40c6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ee:	xor    eax,DWORD PTR [ebp-0x4ad5fd11]
  40c6f4:	sub    edi,DWORD PTR [esp+edx*8-0x8d4b950]
  40c6fb:	push   es
  40c6fc:	in     eax,0xbb
  40c6fe:	inc    esi
  40c6ff:	sbb    ecx,DWORD PTR [ebx]
  40c701:	xchg   ebp,eax
  40c702:	dec    eax
  40c703:	imul   DWORD PTR ds:0xf3f4bbd6
  40c709:	add    DWORD PTR [edi-0x2ac57848],edx
  40c70f:	and    ebp,DWORD PTR [ebp+0x2f]
  40c712:	(bad)  
  40c713:	jg     0x40c6ad
  40c715:	icebp  
  40c716:	sbb    al,0x4d
  40c718:	sub    dl,bh
  40c71a:	sub    esi,ebx
  40c71c:	inc    ebx
  40c71d:	in     al,dx
  40c71e:	imul   edi,DWORD PTR [ebx-0x3a],0x4bc5b2cb
  40c725:	fldenv [edi+edx*1-0x4c]
  40c729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c72a:	sub    edx,esi
  40c72c:	cld    
  40c72d:	lods   eax,DWORD PTR ds:[esi]
  40c72e:	leave  
  40c72f:	test   DWORD PTR [eax],edx
  40c731:	dec    edx
  40c732:	or     al,0xd4
  40c734:	lods   al,BYTE PTR ds:[esi]
  40c735:	fisttp WORD PTR [ebx-0x4b717ae9]
  40c73b:	jp     0x40c77e
  40c73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73e:	imul   BYTE PTR [esi]
  40c740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c741:	ja     0x40c780
  40c743:	jnp    0x40c7a3
  40c745:	mov    esp,0xfe9400ae
  40c74a:	ror    DWORD PTR ds:0x42c42d1d,1
  40c750:	or     al,0x3a
  40c752:	and    edi,DWORD PTR [edi-0x6ed7877f]
  40c758:	xor    DWORD PTR [eax+0x37],0x68
  40c75c:	in     al,dx
  40c75d:	mov    ds:0x11374026,eax
  40c762:	fwait
  40c763:	mov    ecx,0x3f37abd5
  40c768:	or     eax,0x4601ff63
  40c76d:	and    esi,esi
  40c76f:	fsub   DWORD PTR [ecx]
  40c771:	loop   0x40c703
  40c773:	pop    esp
  40c774:	sbb    eax,0xd03e5255
  40c779:	js     0x40c707
  40c77b:	jmp    0x40e0ba36
  40c780:	lods   al,BYTE PTR ds:[esi]
  40c781:	cs xor eax,0x97253b11
  40c787:	push   ecx
  40c788:	ret    
  40c789:	lods   al,BYTE PTR ds:[esi]
  40c78a:	repz cmp al,0x4b
  40c78d:	mov    ecx,DWORD PTR [ebx+0xc6fc669]
  40c793:	xor    ebx,esi
  40c795:	lahf   
  40c796:	and    ch,BYTE PTR [edi-0x77f68440]
  40c79c:	push   ecx
  40c79d:	inc    eax
  40c79e:	cmp    DWORD PTR [edi-0x79],esp
  40c7a1:	xchg   DWORD PTR [ebx+edi*1+0x2b27f680],edx
  40c7a8:	sub    ch,BYTE PTR [edx+0x4a]
  40c7ab:	push   edx
  40c7ac:	neg    DWORD PTR [esi-0x3c868df1]
  40c7b2:	pop    ds
  40c7b3:	lods   al,BYTE PTR ds:[esi]
  40c7b4:	mov    bl,0xc6
  40c7b6:	call   0x1800:0xacd221c8
  40c7bd:	dec    ebx
  40c7be:	mov    al,0xcc
  40c7c0:	pop    es
  40c7c1:	xchg   ebx,eax
  40c7c2:	mov    bh,0x79
  40c7c4:	fbstp  TBYTE PTR [edi+0x71]
  40c7c7:	sbb    al,0x5b
  40c7c9:	aas    
  40c7ca:	dec    ebp
  40c7cb:	loopne 0x40c839
  40c7cd:	loopne 0x40c77f
  40c7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7d0:	cdq    
  40c7d1:	cmp    eax,0xf42a545d
  40c7d6:	lods   eax,DWORD PTR ds:[esi]
  40c7d7:	outs   dx,BYTE PTR ds:[esi]
  40c7d8:	xlat   BYTE PTR ds:[ebx]
  40c7d9:	stos   DWORD PTR es:[edi],eax
  40c7da:	out    0x4,al
  40c7dc:	(bad)  
  40c7dd:	push   ds
  40c7de:	mov    ?,WORD PTR [ecx+ecx*4-0x35]
  40c7e2:	hlt    
  40c7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e4:	mov    fs,WORD PTR [edx-0x17833d54]
  40c7ea:	div    BYTE PTR [edx-0x37]
  40c7ed:	fucomip st,st(2)
  40c7ef:	mov    cs,WORD PTR [ebx-0x39]
  40c7f2:	jmp    0xafc7:0x4990a909
  40c7f9:	repnz push ds
  40c7fb:	push   0xffffffc4
  40c7fd:	mov    al,ds:0x19cdce2e
  40c802:	pop    eax
  40c803:	add    BYTE PTR es:[edx+edx*4-0x33c5dcd3],ah
  40c80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80c:	fwait
  40c80d:	mov    bl,0x66
  40c80f:	mov    cl,0x17
  40c811:	sub    al,0x67
  40c813:	jg     0x40c868
  40c815:	mul    DWORD PTR [ebx+edi*4]
  40c818:	mov    edi,0x342950af
  40c81d:	sbb    ah,BYTE PTR [ebp-0xa]
  40c820:	cs add eax,eax
  40c823:	call   0xe61c5e5
  40c828:	or     eax,0xb436e02f
  40c82d:	daa    
  40c82e:	mov    ds:0xfce335dc,al
  40c833:	gs jmp 0x40c7f0
  40c836:	xchg   edx,eax
  40c837:	lods   al,BYTE PTR ds:[esi]
  40c838:	in     al,dx
  40c839:	into   
  40c83a:	in     eax,dx
  40c83b:	(bad)  
  40c83c:	shl    cl,0x1
  40c83f:	fld    QWORD PTR [edx+0x4ce3b56c]
  40c845:	push   eax
  40c846:	stc    
  40c847:	and    DWORD PTR [ecx-0x69],eax
  40c84a:	jno    0x40c8c3
  40c84c:	xchg   ebp,eax
  40c84d:	inc    eax
  40c84e:	push   0xffffffde
  40c850:	push   ss
  40c851:	xor    eax,DWORD PTR [ecx+0x7a]
  40c854:	xchg   edx,eax
  40c855:	iret   
  40c856:	push   es
  40c857:	mov    edx,0x9933ccb5
  40c85c:	les    ebx,FWORD PTR [ecx-0x60]
  40c85f:	(bad)  
  40c860:	cmp    BYTE PTR [eax+0xe9034f0],0xd6
  40c867:	repnz add eax,0x913cd451
  40c86d:	xchg   esp,eax
  40c86e:	pushf  
  40c86f:	adc    al,0x2a
  40c871:	mov    ds:0xbf6e450,al
  40c876:	(bad)
  40c87a:	stos   DWORD PTR es:[edi],eax
  40c87b:	sub    BYTE PTR [ebx-0x3a276b94],al
  40c881:	mov    ecx,0x767e862
  40c886:	inc    esi
  40c887:	jae    0x40c80e
  40c889:	adc    al,0x3b
  40c88b:	cmp    DWORD PTR [edi-0x707b23be],edx
  40c891:	or     eax,0x8db497fb
  40c896:	pop    edi
  40c897:	push   esp
  40c898:	mov    DWORD PTR [ecx-0x13],ebx
  40c89b:	cmp    BYTE PTR [edx+0x60603981],0xfc
  40c8a2:	cmc    
  40c8a3:	lea    eax,[edx]
  40c8a5:	xor    al,0x10
  40c8a7:	pop    ecx
  40c8a8:	mov    bh,0x44
  40c8aa:	(bad)  
  40c8ab:	sbb    al,0xa7
  40c8ad:	(bad)  
  40c8ae:	dec    edx
  40c8af:	sub    bh,BYTE PTR ds:0x4e8c44d9
  40c8b5:	in     eax,dx
  40c8b6:	inc    esi
  40c8b7:	aam    0x2a
  40c8b9:	push   ebx
  40c8ba:	arpl   WORD PTR [ebx+ebp*1],sp
  40c8bd:	push   0x4c
  40c8bf:	or     DWORD PTR [ebx],eax
  40c8c1:	(bad)  
  40c8c2:	pop    ebp
  40c8c3:	icebp  
  40c8c4:	mov    DWORD PTR [edx],esi
  40c8c6:	adc    edi,esi
  40c8c8:	pop    ebp
  40c8c9:	push   ds
  40c8ca:	out    0xf8,eax
  40c8cc:	aad    0x9e
  40c8ce:	(bad)  
  40c8cf:	push   edi
  40c8d0:	in     al,0x43
  40c8d2:	mov    ebp,0xfb4bb07
  40c8d7:	xchg   edx,eax
  40c8d8:	icebp  
  40c8d9:	mov    eax,0x31c0a11c
  40c8de:	xor    al,0xea
  40c8e0:	and    eax,0xfce815f6
  40c8e5:	mov    BYTE PTR [esi-0x6f],bl
  40c8e8:	push   es
  40c8e9:	loopne 0x40c93e
  40c8eb:	clc    
  40c8ec:	pushf  
  40c8ed:	mov    esp,0x5a3ab0f5
  40c8f2:	adc    al,BYTE PTR ds:[eax-0x2e]
  40c8f6:	in     al,0xba
  40c8f8:	and    al,0xc5
  40c8fa:	jp     0x40c8eb
  40c8fc:	cli    
  40c8fd:	test   eax,0xd0fe7311
  40c902:	(bad)  
  40c903:	out    dx,eax
  40c904:	fild   DWORD PTR [ebp+0x119a123c]
  40c90a:	scas   al,BYTE PTR es:[edi]
  40c90b:	mov    eax,DWORD PTR [eax+0x24]
  40c90e:	aam    0xc4
  40c910:	pmulhuw mm0,QWORD PTR [edi]
  40c913:	jns    0x40c92f
  40c915:	push   es
  40c916:	out    0x15,eax
  40c918:	retf   
  40c919:	adc    eax,DWORD PTR [edi]
  40c91b:	(bad)  [esi]
  40c91d:	aad    0x40
  40c91f:	adc    al,0x95
  40c921:	cmp    ah,BYTE PTR [ebx+0x3c]
  40c924:	pop    es
  40c925:	scas   al,BYTE PTR es:[edi]
  40c926:	and    DWORD PTR [ebx+0xc8aec4d],ecx
  40c92c:	or     BYTE PTR [ebx+0x808cc45],cl
  40c932:	mov    eax,DWORD PTR [ebp+0x10]
  40c935:	mov    ecx,eax
  40c937:	jmp    0x40cec1
  40c93c:	and    DWORD PTR [edx],ebp
  40c93e:	sbb    cl,BYTE PTR ds:0x1a21fd20
  40c944:	in     al,dx
  40c945:	and    al,0xf9
  40c947:	push   0xaeba10bc
  40c94c:	jae    0x40c918
  40c94e:	push   ss
  40c94f:	push   ss
  40c950:	cmp    eax,0xa1161604
  40c955:	div    DWORD PTR [ebx+0x2d]
  40c958:	(bad)  
  40c959:	mov    ch,ah
  40c95b:	ss ret 0xb67c
  40c95f:	mov    BYTE PTR [ebx+0x73],0x23
  40c963:	jns    0x40c9d1
  40c965:	mov    ecx,0x3aa30d80
  40c96a:	mov    ebp,0xbed6512f
  40c96f:	jb     0x40c98a
  40c971:	in     al,0xca
  40c973:	xchg   esp,eax
  40c974:	mov    dh,0x38
  40c976:	add    ah,bh
  40c978:	and    al,0xbb
  40c97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c97b:	aas    
  40c97c:	in     al,dx
  40c97d:	mov    eax,ds:0x431a2790
  40c982:	cld    
  40c983:	loopne 0x40c9f9
  40c985:	mov    fs,WORD PTR [edx+0x6d]
  40c988:	pop    ebx
  40c989:	pop    eax
  40c98a:	mov    cl,0x1b
  40c98c:	adc    DWORD PTR ds:0x13ab1947,edi
  40c992:	fdivr  st,st(3)
  40c994:	push   ebp
  40c995:	in     eax,0x98
  40c997:	out    dx,eax
  40c998:	jle    0x40c992
  40c99a:	jg     0x40c9f9
  40c99c:	leave  
  40c99d:	cld    
  40c99e:	lds    esi,FWORD PTR [ebx]
  40c9a0:	xchg   ebx,eax
  40c9a1:	aad    0xc6
  40c9a3:	xor    al,0x4d
  40c9a5:	push   0xffffffd0
  40c9a7:	lock pusha 
  40c9a9:	cmp    ebp,DWORD PTR [ebp-0x2d90cb9b]
  40c9af:	dec    edi
  40c9b0:	jge    0x40c998
  40c9b2:	sti    
  40c9b3:	adc    ebp,DWORD PTR [ebx+0x2fc485c5]
  40c9b9:	mov    DWORD PTR [esp+edi*8-0x2000cd11],esi
  40c9c0:	shl    BYTE PTR [ecx+ecx*8],cl
  40c9c3:	dec    ebp
  40c9c4:	imul   DWORD PTR [ebx-0x3f]
  40c9c7:	jns    0x40c963
  40c9c9:	mov    bh,0xa1
  40c9cb:	inc    edx
  40c9cc:	push   ebp
  40c9cd:	push   ebx
  40c9ce:	jno    0x40ca35
  40c9d0:	(bad)  
  40c9d1:	sar    BYTE PTR [edx],1
  40c9d3:	mov    edi,0xd82e614b
  40c9d8:	mov    eax,ds:0xa94e483d
  40c9dd:	mov    BYTE PTR [ebp+0x4470c97a],ch
  40c9e3:	push   eax
  40c9e4:	popf   
  40c9e5:	pop    ebx
  40c9e6:	inc    edx
  40c9e7:	pop    es
  40c9e8:	mov    ecx,0x48fe8f02
  40c9ed:	inc    esi
  40c9ee:	sbb    ch,ch
  40c9f0:	stos   BYTE PTR es:[edi],al
  40c9f1:	jmp    0x40c9cf
  40c9f3:	add    edi,edx
  40c9f5:	in     al,0x8f
  40c9f7:	out    0xf3,eax
  40c9f9:	fmul   QWORD PTR [eax+0x3b]
  40c9fc:	push   ss
  40c9fd:	mov    ah,0xfd
  40c9ff:	inc    esp
  40ca00:	repnz neg DWORD PTR [edi-0x2d]
  40ca04:	xchg   ebx,eax
  40ca05:	ins    BYTE PTR es:[edi],dx
  40ca06:	sbb    al,0x2a
  40ca08:	es xchg ebp,eax
  40ca0a:	retf   0xd78c
  40ca0d:	es popa 
  40ca0f:	and    al,BYTE PTR [edx]
  40ca11:	sub    BYTE PTR [eax-0x6c],dh
  40ca14:	pop    eax
  40ca15:	jle    0x40ca08
  40ca17:	pop    ecx
  40ca18:	test   BYTE PTR [ebx],bh
  40ca1a:	enter  0x504b,0x8a
  40ca1e:	cs pop esp
  40ca21:	stos   BYTE PTR es:[edi],al
  40ca22:	mov    ah,0xb2
  40ca24:	and    al,0x5
  40ca26:	test   BYTE PTR [esi],0xca
  40ca29:	xchg   sp,ax
  40ca2b:	jno    0x40c9b3
  40ca2d:	fst    DWORD PTR [edi-0x43]
  40ca30:	test   al,0x3d
  40ca32:	adc    eax,0xa612d550
  40ca37:	test   ecx,edi
  40ca39:	cmp    ecx,ebp
  40ca3b:	xor    al,0x17
  40ca3d:	xor    eax,0x4faea491
  40ca42:	push   edx
  40ca43:	loope  0x40ca39
  40ca45:	outs   dx,BYTE PTR ds:[esi]
  40ca46:	jmp    0x40caaa
  40ca48:	pop    edi
  40ca49:	nop
  40ca4a:	inc    BYTE PTR [ecx-0x5d809af8]
  40ca50:	sbb    cl,BYTE PTR [eax-0x49ff771e]
  40ca56:	inc    ecx
  40ca57:	sub    DWORD PTR [edx-0x29],0x9bead861
  40ca5e:	ret    
  40ca5f:	pusha  
  40ca60:	out    0x9,al
  40ca62:	dec    esi
  40ca63:	js     0x40ca53
  40ca65:	clc    
  40ca66:	ss jecxz 0x40ca22
  40ca69:	jo     0x40ca83
  40ca6b:	dec    edi
  40ca6c:	mov    ds:0x90519558,al
  40ca71:	xchg   edi,eax
  40ca72:	into   
  40ca73:	imul   esp,DWORD PTR [ebx-0x7e5e8e],0xffffffa8
  40ca7a:	setno  BYTE PTR [edi]
  40ca7d:	and    al,0xda
  40ca7f:	xchg   ebp,eax
  40ca80:	sub    eax,0xe143ca05
  40ca85:	xlat   BYTE PTR ds:[ebx]
  40ca86:	dec    esi
  40ca87:	daa    
  40ca88:	shl    BYTE PTR [ebp+0x51],0x34
  40ca8c:	in     al,0x6c
  40ca8e:	cmp    eax,DWORD PTR [ecx-0x4e]
  40ca91:	xlat   BYTE PTR ds:[ebx]
  40ca92:	pop    esi
  40ca93:	push   ebp
  40ca94:	cli    
  40ca95:	sbb    eax,0xa82764f7
  40ca9a:	lods   eax,DWORD PTR ds:[esi]
  40ca9b:	jecxz  0x40ca24
  40ca9d:	das    
  40ca9e:	fst    QWORD PTR [ecx+esi*2]
  40caa1:	mov    dh,BYTE PTR [edi]
  40caa3:	push   0xea79b4fe
  40caa8:	pop    esi
  40caa9:	mov    eax,0x9268163f
  40caae:	add    eax,0x27ad1152
  40cab3:	rol    esp,cl
  40cab5:	xlat   BYTE PTR ds:[ebx]
  40cab6:	mov    al,0xbe
  40cab8:	test   eax,0xcfe036d2
  40cabd:	fsubr  DWORD PTR [ecx]
  40cabf:	xacquire xchg DWORD PTR [esp+eax*4+0x4d5b3efe],ecx
  40cac7:	dec    ecx
  40cac8:	addr16 mov al,0x69
  40cacb:	pop    ebx
  40cacc:	sti    
  40cacd:	lods   eax,DWORD PTR ds:[esi]
  40cace:	pop    ecx
  40cacf:	outs   dx,DWORD PTR ds:[esi]
  40cad0:	mov    bl,0x2
  40cad2:	retf   0x178b
  40cad5:	pop    ebp
  40cad6:	shr    cl,cl
  40cad8:	daa    
  40cad9:	lock adc al,0x9e
  40cadc:	loop   0x40ca81
  40cade:	pop    eax
  40cadf:	sub    ecx,esp
  40cae1:	fiadd  WORD PTR [eax]
  40cae3:	and    esi,DWORD PTR [edx-0x1a4c2202]
  40cae9:	es xchg ebp,eax
  40caeb:	push   0x5a563681
  40caf0:	call   0xcc77:0x2c0c3b7
  40caf7:	ja     0x40cab3
  40caf9:	std    
  40cafa:	xchg   DWORD PTR [edi-0x37],esi
  40cafd:	mov    eax,ds:0x7f509c7b
  40cb02:	stc    
  40cb03:	repz addr16 pop ebp
  40cb06:	and    eax,0xc2983fb2
  40cb0b:	xor    DWORD PTR [edi],ebp
  40cb0d:	xchg   ebp,eax
  40cb0e:	xlat   BYTE PTR ds:[ebx]
  40cb0f:	push   DWORD PTR [eax]
  40cb11:	arpl   WORD PTR [esi-0x5e],sp
  40cb14:	aaa    
  40cb15:	or     BYTE PTR [edx+eax*8],al
  40cb18:	add    ebx,DWORD PTR [ebp+0x727fc5db]
  40cb1e:	stos   BYTE PTR es:[edi],al
  40cb1f:	xor    BYTE PTR [ebx],0x92
  40cb22:	inc    ebx
  40cb23:	pusha  
  40cb24:	test   BYTE PTR [ebx],bl
  40cb26:	clc    
  40cb27:	or     edx,edi
  40cb29:	jbe    0x40cadf
  40cb2b:	jbe    0x40cb5b
  40cb2d:	das    
  40cb2e:	dec    eax
  40cb2f:	clc    
  40cb30:	jb     0x40cb39
  40cb32:	adc    DWORD PTR [edi-0x2c],ebp
  40cb35:	pop    edx
  40cb36:	add    al,0xb
  40cb38:	pop    eax
  40cb39:	cli    
  40cb3a:	push   0xcdadca06
  40cb3f:	and    BYTE PTR [eax],dl
  40cb41:	mov    eax,ds:0xfb0d10d2
  40cb46:	jne    0x40cb4b
  40cb48:	xlat   BYTE PTR ds:[ebx]
  40cb49:	cs push ebx
  40cb4b:	xor    al,0x75
  40cb4d:	(bad)  [eax+ebx*8]
  40cb50:	std    
  40cb51:	xor    ebx,DWORD PTR [edi+0x519ef2c9]
  40cb57:	in     eax,0x16
  40cb59:	outs   dx,DWORD PTR ds:[esi]
  40cb5a:	jmp    0x40cb1d
  40cb5c:	call   0xea90:0x52ecd635
  40cb63:	pop    ebx
  40cb64:	adc    eax,0x631a9dc0
  40cb69:	add    bl,BYTE PTR [ecx]
  40cb6b:	fisub  WORD PTR [esp+esi*1-0x23950b1a]
  40cb72:	lods   eax,DWORD PTR ds:[esi]
  40cb73:	xchg   ebp,eax
  40cb74:	mov    WORD PTR [edi+0x2e101d29],ds
  40cb7a:	push   0xca309f61
  40cb7f:	popf   
  40cb80:	xlat   BYTE PTR ds:[ebx]
  40cb81:	pop    eax
  40cb82:	int3   
  40cb83:	dec    eax
  40cb84:	lods   al,BYTE PTR ds:[esi]
  40cb85:	test   ecx,ecx
  40cb87:	xor    BYTE PTR ds:0x2ad236c7,al
  40cb8d:	lea    edx,[edx-0x4ed21c65]
  40cb93:	ret    0xcaeb
  40cb96:	mov    eax,0x737c6044
  40cb9b:	sti    
  40cb9c:	pop    ds
  40cb9d:	(bad)  
  40cb9e:	cmp    al,0xd2
  40cba0:	nop
  40cba1:	fsubr  DWORD PTR [edi+eiz*1]
  40cba4:	sti    
  40cba5:	call   0xd5dd:0x1ea5932b
  40cbac:	or     al,0x15
  40cbae:	cmp    eax,0xa1fe0cf
  40cbb3:	jl     0x40cb74
  40cbb5:	xor    ebp,DWORD PTR [eax-0x60]
  40cbb8:	and    BYTE PTR [ebp+0x1cb23415],bl
  40cbbe:	jmp    0x40cc05
  40cbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbc1:	out    0xba,eax
  40cbc3:	push   es
  40cbc4:	cmp    dh,bl
  40cbc6:	mov    dh,bl
  40cbc8:	adc    esp,esp
  40cbca:	add    DWORD PTR [edx+0x42],ebx
  40cbcd:	sbb    ch,bl
  40cbcf:	sub    bl,BYTE PTR [ecx+0x1cead647]
  40cbd5:	and    eax,0xf6d9c598
  40cbda:	jo     0x40cc54
  40cbdc:	js     0x40cbf9
  40cbde:	mov    ah,0x5
  40cbe0:	jbe    0x40cc5a
  40cbe2:	jae    0x40cbaa
  40cbe4:	push   ss
  40cbe5:	popf   
  40cbe6:	mov    bl,0x60
  40cbe8:	sbb    DWORD PTR [edx-0x20bf0733],edi
  40cbee:	stos   DWORD PTR es:[edi],eax
  40cbef:	(bad)  
  40cbf0:	cmp    esp,eax
  40cbf2:	loop   0x40cbf6
  40cbf4:	adc    eax,0x868933b9
  40cbf9:	jle    0x40cb97
  40cbfb:	(bad)  
  40cbfd:	mov    eax,esi
  40cbff:	ss out dx,al
  40cc01:	ror    BYTE PTR [ecx],cl
  40cc03:	call   0xbc07:0x71ae2d92
  40cc0a:	xor    edx,esi
  40cc0c:	repnz mov bl,0xc
  40cc0f:	cli    
  40cc10:	test   ax,0x8c35
  40cc14:	pop    ss
  40cc15:	pop    edx
  40cc16:	fdiv   DWORD PTR [esi+0x7a45a5a7]
  40cc1c:	sbb    eax,0x59e72bf9
  40cc21:	scas   al,BYTE PTR es:[edi]
  40cc22:	jb     0x40cc38
  40cc24:	loopne 0x40cc0e
  40cc26:	jae    0x40cc01
  40cc28:	sbb    BYTE PTR [edx+0x4d],dl
  40cc2b:	dec    ecx
  40cc2c:	dec    edx
  40cc2d:	cmp    DWORD PTR [eax],edi
  40cc2f:	push   0x63
  40cc31:	mov    eax,ds:0xd45e83f9
  40cc36:	nop
  40cc37:	fistp  WORD PTR [ebx-0x68]
  40cc3a:	adc    eax,0xa3bf3c76
  40cc3f:	ror    esi,cl
  40cc41:	(bad)  
  40cc42:	mov    ecx,0x4a23ad55
  40cc47:	xor    al,0x7d
  40cc49:	les    ebx,FWORD PTR [edi+0x51c3e899]
  40cc4f:	push   0x4ae52
  40cc54:	shl    BYTE PTR [edi],0xc1
  40cc57:	sbb    edi,ebx
  40cc59:	push   ecx
  40cc5a:	jmp    0x5f9b:0xc8bb28f5
  40cc61:	imul   BYTE PTR [ebx+edi*1]
  40cc64:	pop    ds
  40cc65:	jg     0x40cc36
  40cc67:	leave  
  40cc68:	div    BYTE PTR [ebx-0x42]
  40cc6b:	iret   
  40cc6c:	test   al,0x55
  40cc6e:	sub    al,0xa7
  40cc70:	aas    
  40cc71:	mov    edi,DWORD PTR [eax+0x37b04540]
  40cc77:	dec    esi
  40cc78:	mov    DWORD PTR [esp+edx*2-0x56],0x21632
  40cc80:	mov    BYTE PTR [eax+0x4fdc035f],0xb2
  40cc87:	idiv   BYTE PTR [esi+0x200b3c6f]
  40cc8d:	repnz dec esp
  40cc8f:	in     al,0xa3
  40cc91:	prefetch BYTE PTR [edi]
  40cc94:	push   es
  40cc95:	push   ebp
  40cc96:	cdq    
  40cc97:	retf   
  40cc98:	mov    eax,ds:0x2506f156
  40cc9d:	outs   dx,BYTE PTR ds:[esi]
  40cc9e:	inc    esi
  40cc9f:	mov    eax,0xc366a8a0
  40cca4:	cmp    bh,dh
  40cca6:	mov    ebx,0x34a78222
  40ccab:	sub    BYTE PTR [ebp+0x3e],bl
  40ccae:	inc    esp
  40ccaf:	data16 fxch st(3)
  40ccb2:	retf   
  40ccb3:	and    al,0x61
  40ccb5:	(bad)  
  40ccb6:	ror    DWORD PTR [ecx],cl
  40ccb8:	jmp    0xa317:0xad4761d1
  40ccbf:	jo     0x40cd29
  40ccc1:	pop    ss
  40ccc2:	sub    dh,BYTE PTR [esi-0x447643ad]
  40ccc8:	inc    ebp
  40ccc9:	lds    edx,FWORD PTR [edx]
  40cccb:	sub    edx,DWORD PTR [edx-0xe7eb35a]
  40ccd1:	repz out dx,eax
  40ccd3:	dec    edi
  40ccd4:	jae    0x40ccc3
  40ccd6:	and    DWORD PTR [eax+0x66],0x99720ae8
  40ccdd:	rol    bh,cl
  40ccdf:	fwait
  40cce0:	daa    
  40cce1:	sub    BYTE PTR [ebx+0x56],0x5c
  40cce5:	xchg   ebp,eax
  40cce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce7:	shl    DWORD PTR [edx-0x2441c258],1
  40cced:	jl     0x40cc87
  40ccef:	push   ds
  40ccf0:	or     BYTE PTR [edx+ecx*1+0x3d57b605],dl
  40ccf7:	inc    ebx
  40ccf8:	jne    0x40cd2a
  40ccfa:	sub    al,bl
  40ccfc:	repnz stc 
  40ccfe:	jno    0x40ccae
  40cd00:	pop    es
  40cd01:	(bad)  
  40cd02:	stc    
  40cd03:	gs dec esp
  40cd05:	call   0x8ced7224
  40cd0a:	fmul   QWORD PTR [ebx]
  40cd0c:	retf   
  40cd0d:	pop    ebx
  40cd0e:	sbb    BYTE PTR [edi-0x7f],0x78
  40cd12:	pushf  
  40cd13:	mov    esi,edi
  40cd15:	and    ebx,DWORD PTR [eax+0x600d125e]
  40cd1b:	mov    dh,0x8d
  40cd1d:	push   esi
  40cd1e:	fdivr  DWORD PTR [ebp-0x17]
  40cd21:	xor    ecx,ebx
  40cd23:	out    dx,eax
  40cd24:	and    edi,DWORD PTR [ebx-0x7c]
  40cd27:	test   ebp,ebp
  40cd29:	mov    WORD PTR [ecx-0x7631fabc],fs
  40cd2f:	and    al,0x2a
  40cd31:	(bad)  
  40cd32:	ins    BYTE PTR es:[edi],dx
  40cd33:	loop   0x40cd8c
  40cd35:	popa   
  40cd36:	inc    esp
  40cd37:	stc    
  40cd38:	pop    eax
  40cd39:	in     al,dx
  40cd3a:	mov    ebx,0xb96ef7d7
  40cd3f:	inc    ebx
  40cd40:	add    ch,bh
  40cd42:	enter  0x9bc5,0x81
  40cd46:	lahf   
  40cd47:	push   eax
  40cd48:	mov    esi,0xb35bfeb2
  40cd4d:	jmp    0x40cd84
  40cd4f:	or     eax,0x38ceeb
  40cd54:	mov    dh,dl
  40cd56:	popf   
  40cd57:	scas   al,BYTE PTR es:[edi]
  40cd58:	mov    ah,0x71
  40cd5a:	inc    ecx
  40cd5b:	iret   
  40cd5c:	pop    eax
  40cd5d:	or     DWORD PTR [edi-0x7c97849d],edx
  40cd63:	outs   dx,DWORD PTR ds:[esi]
  40cd64:	xor    eax,0x24c78215
  40cd69:	(bad)  
  40cd6a:	dec    esp
  40cd6b:	stos   DWORD PTR es:[edi],eax
  40cd6c:	cmp    bl,ah
  40cd6e:	test   eax,0x34757db3
  40cd73:	mov    cl,0xd8
  40cd75:	test   eax,0xcb44f2c
  40cd7a:	cmp    DWORD PTR ss:[edx-0x39cf6b98],eax
  40cd81:	inc    edi
  40cd82:	lea    ebx,ds:0x527c0da0
  40cd88:	(bad)  
  40cd89:	mov    esi,0x46006de
  40cd8e:	sbb    ah,BYTE PTR [edi+0x79]
  40cd91:	push   cs
  40cd92:	jno    0x40cd89
  40cd94:	push   esi
  40cd95:	and    edx,DWORD PTR [ecx]
  40cd97:	enter  0xfa27,0x12
  40cd9b:	dec    esi
  40cd9c:	sub    ecx,DWORD PTR [esi+eax*4]
  40cd9f:	sahf   
  40cda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda1:	lods   eax,DWORD PTR ds:[esi]
  40cda2:	pop    esi
  40cda3:	call   0x9d18ed41
  40cda8:	xor    ebp,0x34601fbc
  40cdae:	cdq    
  40cdaf:	adc    al,0x50
  40cdb1:	inc    esp
  40cdb2:	push   ebp
  40cdb3:	test   al,0x51
  40cdb5:	jb     0x40cd59
  40cdb7:	push   0x52d3a6fc
  40cdbc:	jecxz  0x40cda5
  40cdbe:	inc    ecx
  40cdbf:	and    eax,0xa5ae0cbf
  40cdc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc5:	or     edx,ebx
  40cdc7:	pop    edi
  40cdc8:	and    cl,cl
  40cdca:	or     al,0x1a
  40cdcc:	cmp    BYTE PTR [esi],al
  40cdce:	mov    esp,0x90c6ec33
  40cdd3:	adc    DWORD PTR [ebp-0x3],eax
  40cdd6:	icebp  
  40cdd7:	mul    ebx
  40cdd9:	int    0x84
  40cddb:	sti    
  40cddc:	adc    ebx,DWORD PTR [edx+0x35562015]
  40cde2:	mov    dl,0xb4
  40cde4:	sbb    edx,ebp
  40cde6:	fdivr  DWORD PTR [edx]
  40cde8:	xchg   ebp,eax
  40cde9:	aaa    
  40cdea:	mov    ecx,0x1c3c3db2
  40cdef:	(bad)  
  40cdf0:	mov    cl,0x36
  40cdf2:	mov    cl,BYTE PTR [eax]
  40cdf4:	push   ecx
  40cdf5:	mov    bh,0x85
  40cdf7:	ss aaa 
  40cdf9:	xchg   DWORD PTR [ecx],ebp
  40cdfb:	test   al,0xf5
  40cdfd:	mov    eax,ds:0xd1b18fc5
  40ce02:	into   
  40ce03:	sub    eax,0xe609a7c5
  40ce08:	or     dl,BYTE PTR [edi+0x45b9043c]
  40ce0e:	sub    edi,esi
  40ce10:	clc    
  40ce11:	pop    edi
  40ce12:	call   0xc5f2b6eb
  40ce17:	pop    ebp
  40ce18:	jno    0x40cdb0
  40ce1a:	xlat   BYTE PTR ds:[ebx]
  40ce1b:	or     ebp,DWORD PTR [esi+ebp*8+0x68]
  40ce1f:	hlt    
  40ce20:	jle    0x40cdf3
  40ce22:	xchg   ecx,eax
  40ce23:	or     BYTE PTR [edx+ebx*2],bh
  40ce26:	push   esp
  40ce27:	loop   0x40cddd
  40ce29:	jge    0x40cdb6
  40ce2b:	xor    DWORD PTR [esi-0x7],esi
  40ce2e:	retf   
  40ce2f:	inc    edx
  40ce30:	mov    ch,BYTE PTR [eax-0x72]
  40ce33:	lods   al,BYTE PTR ds:[esi]
  40ce34:	call   0xb3a20c51
  40ce39:	dec    edi
  40ce3a:	in     eax,dx
  40ce3b:	sti    
  40ce3c:	shl    dh,0xe6
  40ce3f:	fstp   TBYTE PTR [edi+0x43a5a0f7]
  40ce45:	nop
  40ce46:	and    al,0xdb
  40ce48:	dec    ecx
  40ce49:	mov    ebx,0xc3172943
  40ce4f:	jle    0x40ce14
  40ce51:	js     0x40cdf5
  40ce53:	adc    eax,0xb1bf7d5d
  40ce58:	(bad)  
  40ce59:	sub    eax,0x89e690b4
  40ce5e:	and    ecx,DWORD PTR [esi+0x1358ce81]
  40ce64:	xor    ecx,DWORD PTR [eax+edx*8+0x2f8f2c6b]
  40ce6b:	lss    ecx,FWORD PTR [eax+eax*8]
  40ce6f:	imul   BYTE PTR [esi+0x2f]
  40ce72:	(bad)  
  40ce74:	pop    edi
  40ce75:	or     WORD PTR [ecx+0x60],ax
  40ce79:	pusha  
  40ce7a:	hlt    
  40ce7b:	pop    ss
  40ce7c:	cmp    DWORD PTR [esi+0x41],ecx
  40ce7f:	xchg   ecx,eax
  40ce80:	outs   dx,BYTE PTR ds:[esi]
  40ce81:	fisub  DWORD PTR [ebp+eiz*4-0x3f]
  40ce85:	xchg   DWORD PTR [edx+0x73],esp
  40ce88:	push   0x94596a67
  40ce8d:	dec    ecx
  40ce8e:	hlt    
  40ce8f:	xchg   edx,eax
  40ce90:	jno    0x40ce75
  40ce92:	xchg   DWORD PTR [esi+edx*8+0x78609b3c],ebp
  40ce99:	add    dx,WORD PTR [eax+0x65]
  40ce9d:	std    
  40ce9e:	je     0x40ce75
  40cea0:	not    DWORD PTR [ebx-0x5c]
  40cea3:	xchg   BYTE PTR [edx],ah
  40cea5:	lds    esi,FWORD PTR [edx+edi*1]
  40cea8:	sub    DWORD PTR [esi],esi
  40ceaa:	sbb    al,0xb5
  40ceac:	and    al,0x14
  40ceae:	int    0x2
  40ceb0:	popf   
  40ceb1:	inc    edx
  40ceb2:	daa    
  40ceb3:	dec    esi
  40ceb4:	iret   
  40ceb5:	cmp    DWORD PTR [ecx],edx
  40ceb7:	ins    DWORD PTR es:[edi],dx
  40ceb8:	cmp    BYTE PTR [esi],0x89
  40cebb:	pop    ds
  40cebc:	fbld   TBYTE PTR [ebp+0x24]
  40cebf:	pop    ss
  40cec0:	pop    ss
  40cec1:	shrd   ecx,edx,0x2
  40cec5:	shl    eax,0x1e
  40cec8:	shr    edx,0x2
  40cecb:	mov    DWORD PTR [ebp+0x14],edx
  40cece:	mov    DWORD PTR [ebp+0x14],eax
  40ced1:	xor    edx,edx
  40ced3:	mov    eax,ecx
  40ced5:	xor    eax,edi
  40ced7:	or     eax,edx
  40ced9:	mov    edx,DWORD PTR [ebp-0x4]
  40cedc:	jmp    0x40d466
  40cee1:	lock jae 0x40cef2
  40cee4:	mov    ebp,0x13994155
  40cee9:	enter  0x8c7b,0x6e
  40ceed:	push   cs
  40ceee:	ret    
  40ceef:	sbb    BYTE PTR [eax+0x1616c8a8],ch
  40cef5:	cmp    eax,0xf9161604
  40cefa:	add    bl,bl
  40cefc:	pop    ds
  40cefd:	inc    ecx
  40cefe:	jo     0x40cef8
  40cf00:	fmul   QWORD PTR [esp+edi*4]
  40cf03:	outs   dx,DWORD PTR ds:[esi]
  40cf04:	aad    0x26
  40cf06:	and    esp,DWORD PTR [eax+ecx*1+0x34]
  40cf0a:	aam    0x92
  40cf0c:	out    0x2a,al
  40cf0e:	pusha  
  40cf0f:	ins    BYTE PTR es:[edi],dx
  40cf10:	xor    eax,0xcc2dac5c
  40cf15:	mov    ecx,0xd45e8420
  40cf1a:	or     edx,DWORD PTR [edx]
  40cf1c:	push   edi
  40cf1d:	loop   0x40ceb0
  40cf1f:	cs rcl edi,cl
  40cf22:	das    
  40cf23:	scas   al,BYTE PTR es:[edi]
  40cf24:	jmp    0xa81f:0x6faf51ea
  40cf2b:	push   ebp
  40cf2c:	test   BYTE PTR [ecx-0x3],bl
  40cf2f:	es sbb bh,al
  40cf32:	sar    BYTE PTR [esi+0x4bb22582],0x82
  40cf39:	adc    DWORD PTR [edi-0x4c85b525],ebp
  40cf3f:	into   
  40cf40:	jle    0x40cf1d
  40cf42:	mov    al,0x4f
  40cf44:	sahf   
  40cf45:	je     0x40cf78
  40cf47:	loope  0x40cf01
  40cf49:	or     al,0x4c
  40cf4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4c:	pop    ss
  40cf4d:	add    DWORD PTR [ebp+0x2fbe96e3],ebx
  40cf53:	sub    dh,bl
  40cf55:	push   0x81a89a29
  40cf5a:	lea    edx,[edx-0x5d24ea6b]
  40cf60:	dec    eax
  40cf61:	jge    0x40cfd4
  40cf63:	pusha  
  40cf64:	outs   dx,BYTE PTR ds:[esi]
  40cf65:	inc    ecx
  40cf66:	xor    al,0xa5
  40cf68:	cli    
  40cf69:	xor    bl,BYTE PTR [ecx+0x64]
  40cf6c:	jns    0x40cf92
  40cf6e:	pop    edx
  40cf6f:	pop    ds
  40cf70:	cmp    ebx,DWORD PTR [edi]
  40cf72:	jmp    0xe662535c
  40cf77:	xor    esi,edi
  40cf79:	xchg   esi,eax
  40cf7a:	dec    edx
  40cf7b:	hlt    
  40cf7c:	xchg   ebx,eax
  40cf7d:	xchg   ecx,eax
  40cf7e:	into   
  40cf7f:	int    0x13
  40cf81:	ins    BYTE PTR es:[edi],dx
  40cf82:	rcr    eax,0xd
  40cf85:	xchg   ebp,eax
  40cf86:	test   cl,ah
  40cf88:	dec    eax
  40cf89:	jb     0x40cfa0
  40cf8b:	push   0xd
  40cf8d:	out    dx,eax
  40cf8e:	sbb    al,0x59
  40cf91:	inc    ecx
  40cf92:	test   BYTE PTR [edx+0x2c45f9af],bl
  40cf98:	mov    dh,BYTE PTR [eax-0x699cfb15]
  40cf9e:	gs pop ds
  40cfa0:	pop    edx
  40cfa1:	add    BYTE PTR [edx-0x72e35488],ah
  40cfa7:	iret   
  40cfa8:	and    al,0x94
  40cfaa:	fild   QWORD PTR [edx]
  40cfac:	lahf   
  40cfad:	mov    ds:0x873538ef,al
  40cfb2:	dec    ebx
  40cfb3:	lock test eax,0xa1ecb4c5
  40cfb9:	inc    esp
  40cfba:	cmp    eax,0x93529f92
  40cfbf:	and    dh,BYTE PTR [ecx]
  40cfc1:	retf   0xb429
  40cfc4:	js     0x40cffa
  40cfc6:	push   eax
  40cfc7:	inc    esp
  40cfc8:	xor    ecx,DWORD PTR [ecx-0x18ff8493]
  40cfce:	sub    bl,BYTE PTR [ebx-0x73]
  40cfd1:	fstp   DWORD PTR [ecx+edi*1-0x4a]
  40cfd5:	cld    
  40cfd6:	add    BYTE PTR [ebp+edi*2-0x31],cl
  40cfda:	mov    esi,0x5c44b616
  40cfdf:	sbb    DWORD PTR [esi+0x49],eax
  40cfe2:	add    BYTE PTR [ebp-0x23],ah
  40cfe5:	imul   ecx,esp,0xb
  40cfe8:	loop   0x40cf74
  40cfea:	jmp    0x40cfde
  40cfec:	lahf   
  40cfed:	imul   ecx,edi,0xfffffff3
  40cff0:	mov    eax,0x57948a57
  40cff5:	cmp    BYTE PTR [ebx-0x5d0a438c],cl
  40cffb:	outs   dx,DWORD PTR ds:[esi]
  40cffc:	mov    ah,0xcb
  40cffe:	mov    cl,cl
  40d000:	das    
  40d001:	in     eax,0x81
  40d003:	xchg   ebx,eax
  40d004:	fcomp  QWORD PTR [ebx+0x7b]
  40d007:	retf   
  40d008:	dec    ecx
  40d009:	dec    al
  40d00b:	inc    esi
  40d00c:	sbb    BYTE PTR [esi+0x7],bh
  40d00f:	add    edx,edx
  40d011:	loop   0x40cffa
  40d013:	mov    ebx,0x4bdd5207
  40d018:	xor    al,0x82
  40d01a:	push   ebx
  40d01b:	and    bl,BYTE PTR [edx+0x62]
  40d01e:	je     0x40cfa2
  40d020:	push   ss
  40d021:	adc    eax,0xc84e9174
  40d026:	dec    ecx
  40d027:	das    
  40d028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d029:	in     al,dx
  40d02a:	jg     0x40d095
  40d02c:	arpl   WORD PTR [edx],ax
  40d02e:	cwde   
  40d02f:	mov    ebp,0x2d35f196
  40d034:	inc    edi
  40d035:	lds    edx,FWORD PTR [ebp-0x9]
  40d038:	mov    cl,0xf2
  40d03a:	stc    
  40d03b:	(bad)  
  40d03c:	fmulp  st(4),st
  40d03e:	sub    al,0x4a
  40d040:	in     eax,0x5
  40d042:	jp     0x40cfcb
  40d044:	mov    cl,0x48
  40d046:	adc    BYTE PTR [eax+0x1440eddf],dl
  40d04c:	fistp  QWORD PTR [esi-0xd02244e]
  40d052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d053:	shl    DWORD PTR [ecx-0x7d0b2429],cl
  40d059:	or     edx,DWORD PTR [eax]
  40d05b:	pop    ds
  40d05c:	popa   
  40d05d:	iret   
  40d05e:	dec    edi
  40d05f:	xchg   edi,eax
  40d060:	pop    esi
  40d061:	jp     0x40d09c
  40d063:	scas   al,BYTE PTR es:[edi]
  40d064:	xchg   edx,eax
  40d065:	pop    ebp
  40d066:	and    esp,DWORD PTR [edi+edx*2-0x3aed23d8]
  40d06d:	dec    ebp
  40d06e:	add    esi,esp
  40d070:	fdivr  QWORD PTR [edi-0x48]
  40d073:	stc    
  40d074:	or     BYTE PTR [ecx+eiz*8],cl
  40d077:	push   ss
  40d078:	push   ss
  40d079:	in     eax,dx
  40d07a:	mov    cl,0x1a
  40d07c:	inc    esp
  40d07d:	scas   al,BYTE PTR es:[edi]
  40d07e:	pushf  
  40d07f:	pop    ebp
  40d080:	push   esi
  40d081:	jecxz  0x40d0ed
  40d083:	inc    edx
  40d084:	xchg   DWORD PTR [ebp-0x640f53e8],ebp
  40d08a:	and    BYTE PTR ds:0xcd7da1eb,bh
  40d090:	add    al,0xdb
  40d092:	dec    esi
  40d093:	test   al,0x1
  40d095:	call   eax
  40d097:	data16 je 0x40d0cb
  40d09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d09b:	and    ebx,DWORD PTR [eax+0xd55e135]
  40d0a1:	test   al,0x14
  40d0a3:	and    BYTE PTR [ebx+0x45],0x1c
  40d0a7:	les    eax,FWORD PTR [edi+0x30f665c2]
  40d0ad:	out    dx,eax
  40d0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0af:	lea    esp,[esi+0x1f068c5f]
  40d0b5:	stos   DWORD PTR es:[edi],eax
  40d0b6:	in     al,0x98
  40d0b8:	ja     0x40d0c4
  40d0ba:	jmp    0x22d8ab56
  40d0bf:	pop    ds
  40d0c0:	adc    DWORD PTR [eax-0x643abe77],ecx
  40d0c6:	inc    ebx
  40d0c7:	and    BYTE PTR [edi+0x13],0xab
  40d0cb:	ss xor al,0x74
  40d0ce:	retf   
  40d0cf:	(bad)  
  40d0d0:	cmc    
  40d0d1:	mov    ebx,0xbd07ae6f
  40d0d7:	mov    edi,0xa7bbe458
  40d0dc:	scas   al,BYTE PTR es:[edi]
  40d0dd:	aaa    
  40d0de:	out    0xc3,eax
  40d0e0:	inc    edi
  40d0e1:	hlt    
  40d0e2:	sbb    eax,0xd48b6eb
  40d0e7:	in     al,0x4f
  40d0e9:	cmp    ebx,DWORD PTR [edi-0x57e7558c]
  40d0ef:	nop/reserved BYTE PTR [edi+0x50]
  40d0f3:	call   DWORD PTR [edx+0x325625a6]
  40d0f9:	retf   
  40d0fa:	addr16 popa 
  40d0fc:	sbb    BYTE PTR [edi],cl
  40d0fe:	or     eax,0x109d3729
  40d103:	cdq    
  40d104:	cs iret 
  40d106:	lods   eax,DWORD PTR ds:[esi]
  40d107:	xchg   esi,eax
  40d108:	ja     0x40d13b
  40d10a:	jno    0x40d0cc
  40d10c:	jae    0x40d0c0
  40d10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10f:	sbb    BYTE PTR [ebx+0x585ab0e7],al
  40d115:	mov    al,bl
  40d117:	fisubr DWORD PTR [eax+ebp*1]
  40d11a:	mov    esi,esi
  40d11c:	stc    
  40d11d:	and    al,0x71
  40d11f:	mul    BYTE PTR ds:0xc2a407a5
  40d125:	mov    ebx,0x442731eb
  40d12a:	mov    ch,bh
  40d12c:	retf   
  40d12d:	ficomp DWORD PTR [esi+0x6b3e8e64]
  40d133:	dec    esi
  40d134:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d136:	xchg   BYTE PTR [eax],dh
  40d138:	add    al,0x1e
  40d13a:	mov    ecx,0x65b5b199
  40d13f:	dec    edi
  40d140:	or     bh,BYTE PTR [edi-0x53]
  40d143:	in     eax,0x79
  40d145:	inc    esi
  40d146:	test   eax,0x466f7bac
  40d14b:	cdq    
  40d14c:	or     ch,BYTE PTR [edx+0x177d49b0]
  40d152:	loopne 0x40d19c
  40d154:	popa   
  40d155:	sub    eax,0xc2f34c0e
  40d15a:	jp     0x40d1a8
  40d15c:	mov    al,ds:0xac74cf68
  40d161:	mov    cl,0xdd
  40d163:	and    esp,DWORD PTR [esi-0x1be93017]
  40d169:	mov    ecx,0x91917a17
  40d16e:	std    
  40d16f:	sbb    DWORD PTR [edx],eax
  40d171:	aad    0x84
  40d173:	add    dh,bh
  40d175:	mov    al,0xd0
  40d177:	fcomip st,st(4)
  40d179:	pop    ss
  40d17a:	cmc    
  40d17b:	imul   edi,DWORD PTR [eax+ebx*1+0x5c],0x1b
  40d180:	inc    ecx
  40d181:	adc    al,0x31
  40d183:	and    dl,BYTE PTR [edi-0xd]
  40d186:	or     eax,0x9431ab56
  40d18b:	(bad)  
  40d18c:	jno    0x40d18b
  40d18e:	imul   edx,DWORD PTR [eax],0x8
  40d191:	neg    dl
  40d193:	pop    es
  40d194:	jge    0x40d1fa
  40d196:	mov    esp,0x29313fdc
  40d19b:	loopne 0x40d1e8
  40d19d:	push   0x6e306c88
  40d1a2:	mov    ebp,0x7876e8f9
  40d1a7:	sbb    bh,BYTE PTR ds:0x713d8ef0
  40d1ad:	in     al,0x9d
  40d1af:	mov    ebp,0xc9347c5
  40d1b4:	test   edi,0xf828ea8e
  40d1ba:	pop    esp
  40d1bb:	(bad)  
  40d1bc:	mov    al,0x6b
  40d1be:	sub    BYTE PTR [edx-0x79],bl
  40d1c1:	inc    ecx
  40d1c2:	fucomip st,st(7)
  40d1c4:	shr    BYTE PTR [ecx+esi*8-0x6f],cl
  40d1c8:	(bad)  
  40d1c9:	loopne 0x40d210
  40d1cb:	jbe    0x40d19e
  40d1cd:	add    al,0xd0
  40d1cf:	jl     0x40d1f3
  40d1d1:	push   ds
  40d1d2:	xchg   edx,eax
  40d1d3:	(bad)  
  40d1d4:	mov    bl,0xd1
  40d1d6:	push   ds
  40d1d7:	jl     0x40d226
  40d1d9:	jecxz  0x40d1af
  40d1db:	loope  0x40d254
  40d1dd:	cmc    
  40d1de:	inc    edi
  40d1df:	add    eax,0x4a99c91d
  40d1e4:	mov    dh,0x97
  40d1e6:	ja     0x40d213
  40d1e8:	adc    edx,ebx
  40d1ea:	sar    BYTE PTR [esi],1
  40d1ec:	call   0x30efff09
  40d1f1:	fsubr  DWORD PTR [ebp-0x6e]
  40d1f4:	inc    edx
  40d1f5:	xchg   DWORD PTR [edx-0x45],eax
  40d1f8:	dec    edi
  40d1f9:	push   esp
  40d1fa:	cmp    ecx,DWORD PTR [edx-0x1c]
  40d1fd:	xor    esp,eax
  40d1ff:	mov    al,0x2c
  40d201:	mov    al,0x23
  40d203:	into   
  40d204:	push   edx
  40d205:	retf   0x40c9
  40d208:	mov    ch,0x86
  40d20a:	mov    ch,BYTE PTR [esi]
  40d20c:	mov    ds:0xe1343bbd,eax
  40d211:	xchg   DWORD PTR [eax+edi*1-0x55abe9a3],eax
  40d218:	mov    DWORD PTR [ebx+0x6d],ecx
  40d21b:	jle    0x40d257
  40d21d:	lock mov eax,0x1eb2c0f1
  40d223:	xchg   DWORD PTR [eax+0x6c],eax
  40d226:	or     eax,0xea36da42
  40d22b:	adc    eax,0x5c774909
  40d230:	sti    
  40d231:	aad    0xac
  40d233:	pushf  
  40d234:	dec    esp
  40d235:	cmp    BYTE PTR [edi-0x75],cl
  40d238:	rcr    BYTE PTR [edx-0x78],1
  40d23b:	xchg   ebx,eax
  40d23c:	mov    esi,0x2c3a9b18
  40d241:	or     eax,0x89724ab8
  40d246:	adc    DWORD PTR [eax+0x2c0fc9fd],0xa0876f36
  40d250:	dec    esi
  40d251:	enter  0xfc78,0x8b
  40d255:	cmc    
  40d256:	push   edx
  40d257:	aas    
  40d258:	mov    dh,0xba
  40d25a:	mov    edi,0xf0ead27e
  40d25f:	mov    DWORD PTR [ebx],eax
  40d261:	or     al,0xcd
  40d263:	fnstcw WORD PTR [ecx+eiz*8-0x30]
  40d267:	jmp    0x40d206
  40d269:	bound  ebx,QWORD PTR [ebp-0x4c729fdd]
  40d26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d270:	or     BYTE PTR [edx+ecx*4+0x73],bl
  40d274:	arpl   WORD PTR [ebp+ebp*8+0x4e],dx
  40d278:	xchg   edi,eax
  40d279:	cdq    
  40d27a:	lahf   
  40d27b:	js     0x40d21a
  40d27d:	repz adc al,0xe5
  40d280:	test   DWORD PTR [esi+eax*2-0x20620b0a],esi
  40d287:	sub    DWORD PTR [esi-0x3fb187f7],0x3215ae91
  40d291:	push   esi
  40d292:	xchg   esp,eax
  40d293:	stos   BYTE PTR es:[edi],al
  40d294:	repz (bad) 
  40d297:	jo     0x40d28c
  40d299:	pusha  
  40d29a:	fbstp  TBYTE PTR [eax]
  40d29c:	pop    esi
  40d29d:	sub    BYTE PTR [esp+eiz*8+0x71],al
  40d2a1:	dec    ebx
  40d2a2:	std    
  40d2a3:	out    0x1d,al
  40d2a5:	fs call 0x7bd7:0x424f9664
  40d2ad:	mov    DWORD PTR [esi-0x15],ebx
  40d2b0:	pop    ecx
  40d2b1:	(bad)  
  40d2b3:	ret    0x688f
  40d2b6:	mov    al,BYTE PTR [edi-0x17]
  40d2b9:	inc    esi
  40d2ba:	pushf  
  40d2bb:	jns    0x40d322
  40d2bd:	mov    ds:0x28b6e835,al
  40d2c2:	scas   al,BYTE PTR es:[edi]
  40d2c3:	jmp    0x46b182a1
  40d2c8:	inc    esp
  40d2c9:	mov    ds:0x292a52b3,eax
  40d2ce:	in     eax,dx
  40d2cf:	hlt    
  40d2d0:	mov    esp,0x369d191f
  40d2d5:	(bad)  
  40d2d6:	sbb    al,0xc
  40d2d8:	pushf  
  40d2d9:	ins    DWORD PTR es:[edi],dx
  40d2da:	jbe    0x40d357
  40d2dc:	aaa    
  40d2dd:	scas   al,BYTE PTR es:[edi]
  40d2de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2df:	pop    eax
  40d2e0:	rcr    BYTE PTR [edi-0x1d],0x50
  40d2e4:	xor    eax,0xd9a8e86d
  40d2e9:	xchg   esp,eax
  40d2ea:	je     0x40d29a
  40d2ec:	(bad)  
  40d2ed:	cmp    ebx,esi
  40d2ef:	mov    WORD PTR [ebp-0x6558347a],ds
  40d2f5:	sbb    DWORD PTR [ecx],0x4fe8b648
  40d2fb:	add    DWORD PTR [ebx+0x54],edi
  40d2fe:	cld    
  40d2ff:	mov    BYTE PTR [esi-0x68135984],bl
  40d305:	mov    dh,0x8
  40d307:	inc    edx
  40d308:	mov    al,0xf8
  40d30a:	jb     0x40d35f
  40d30c:	ror    dh,cl
  40d30e:	test   BYTE PTR [ecx-0x60],ah
  40d311:	or     eax,0x1dab62db
  40d316:	clc    
  40d317:	pop    ebp
  40d318:	(bad)  [eax-0x4afb3707]
  40d31e:	imul   ecx,DWORD PTR [eax+eiz*2-0x496a74ef],0xffffffee
  40d326:	xchg   BYTE PTR [edx-0x7f],bl
  40d329:	into   
  40d32a:	jl     0x40d313
  40d32c:	pop    ebx
  40d32d:	cmp    DWORD PTR [edi],eax
  40d32f:	pop    ebx
  40d330:	repz mov ds:0x8c86ce39,eax
  40d336:	out    0x53,al
  40d338:	mov    dl,ch
  40d33a:	je     0x40d344
  40d33c:	repz lea eax,[edi+0x33]
  40d340:	xor    ebx,ecx
  40d342:	add    eax,0xe380ce35
  40d347:	push   ss
  40d348:	mov    cl,BYTE PTR [ebp+ebp*8-0x9]
  40d34c:	jle    0x40d3c4
  40d34e:	addr16 dec ecx
  40d350:	jae    0x40d38f
  40d352:	xor    edx,DWORD PTR [esi]
  40d354:	push   esp
  40d355:	fst    DWORD PTR ds:0x7086dcd1
  40d35b:	xchg   edi,eax
  40d35c:	lahf   
  40d35d:	shr    DWORD PTR [edx+0x60961e4e],0x1f
  40d364:	mov    BYTE PTR [ecx],ch
  40d366:	xlat   BYTE PTR ds:[ebx]
  40d367:	add    al,0x4b
  40d369:	out    0xb2,al
  40d36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d36c:	pop    ecx
  40d36d:	sub    eax,0x78eceba2
  40d372:	adc    al,0xc5
  40d374:	xchg   edx,eax
  40d375:	dec    edi
  40d376:	jg     0x40d3d7
  40d378:	inc    esp
  40d379:	dec    eax
  40d37a:	inc    DWORD PTR [edi-0x62]
  40d37d:	sbb    edx,DWORD PTR [edx+edi*2-0x5b]
  40d381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d382:	push   0x4383f292
  40d387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d388:	push   0x5a2533c8
  40d38d:	pop    esp
  40d38e:	dec    ecx
  40d38f:	sahf   
  40d390:	push   ss
  40d391:	mov    ss,WORD PTR [edi]
  40d393:	lods   eax,DWORD PTR ds:[esi]
  40d394:	adc    cl,BYTE PTR [ebx+0x58]
  40d397:	es iret 
  40d399:	and    BYTE PTR [ecx+esi*1],0xd7
  40d39d:	cmp    esi,0x17b2a0e1
  40d3a3:	and    DWORD PTR [edx+0x3c],esi
  40d3a6:	mov    al,ds:0x6dd623f1
  40d3ab:	jnp    0x40d358
  40d3ad:	pop    esi
  40d3ae:	and    BYTE PTR [ebp+0x23],ch
  40d3b1:	data16 daa 
  40d3b3:	ffree  st(2)
  40d3b5:	xchg   ebx,eax
  40d3b6:	(bad)  
  40d3b7:	jmp    0x40d37b
  40d3b9:	mov    BYTE PTR [edx-0x76c530bc],bh
  40d3bf:	dec    ecx
  40d3c0:	and    esi,DWORD PTR [ebx-0x31]
  40d3c3:	(bad)  [ebp-0x39]
  40d3c6:	add    al,0xd2
  40d3c8:	int3   
  40d3c9:	pusha  
  40d3ca:	leave  
  40d3cb:	call   FWORD PTR ds:[ebx+0x66]
  40d3cf:	cli    
  40d3d0:	and    dl,BYTE PTR ds:[ecx-0x5e]
  40d3d4:	mov    al,ds:0xddb6964e
  40d3d9:	pop    edi
  40d3da:	adc    DWORD PTR [esp+ebx*4-0x34],eax
  40d3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3df:	das    
  40d3e0:	cdq    
  40d3e1:	mov    ds:0x7a4bea0,al
  40d3e6:	imul   esi,DWORD PTR [ebx+0x72],0xc5175a7b
  40d3ed:	cmp    al,0xef
  40d3ef:	aad    0x1a
  40d3f1:	mov    al,ds:0xac66c232
  40d3f6:	scas   eax,DWORD PTR es:[edi]
  40d3f7:	jns    0x40d3de
  40d3f9:	mov    ch,0x3a
  40d3fb:	icebp  
  40d3fc:	push   ebp
  40d3fd:	es or  al,0x67
  40d400:	fsincos 
  40d402:	test   ch,dh
  40d404:	sahf   
  40d405:	dec    ebp
  40d406:	push   0x6306f069
  40d40b:	jb     0x40d46c
  40d40d:	ret    
  40d40e:	das    
  40d40f:	or     DWORD PTR [edx],esi
  40d411:	ins    DWORD PTR es:[edi],dx
  40d412:	mov    WORD PTR [edx-0x75eb206f],?
  40d418:	push   cs
  40d419:	mov    bl,0x2e
  40d41b:	out    dx,eax
  40d41c:	cld    
  40d41d:	imul   ebp,DWORD PTR [ebp-0x76],0x6f4f88
  40d424:	repnz das 
  40d426:	fwait
  40d427:	dec    ecx
  40d428:	clc    
  40d429:	mul    edx
  40d42b:	out    0x2c,eax
  40d42d:	inc    ecx
  40d42e:	or     ah,BYTE PTR ds:0x7c8f2b27
  40d434:	cmp    eax,0x91bd09f5
  40d439:	ffree  st(6)
  40d43b:	jmp    0xee9c:0xdba42a41
  40d442:	xor    DWORD PTR [ebp+0x71784b89],edx
  40d448:	(bad)  
  40d449:	lods   al,BYTE PTR ds:[esi]
  40d44a:	sbb    al,BYTE PTR [esi-0x3c012d68]
  40d450:	sub    DWORD PTR [ecx],0x3407deb4
  40d456:	push   DWORD PTR [ecx+0x32]
  40d459:	add    DWORD PTR [ecx-0x324bf73d],edi
  40d45f:	jne    0x40d426
  40d461:	dec    edi
  40d462:	pop    ss
  40d463:	sbb    eax,0xf748add1
  40d468:	shl    BYTE PTR [ebx],1
  40d46a:	ret    0xcf33
  40d46d:	mov    DWORD PTR [ebp-0x4],eax
  40d470:	jmp    0x40d9fa
  40d475:	mov    ds:0x60bf5ac5,eax
  40d47a:	sbb    BYTE PTR [edx],ah
  40d47c:	cdq    
  40d47d:	cmovbe edx,DWORD PTR [edx+esi*4-0xc]
  40d482:	add    dh,0xae
  40d485:	xlat   BYTE PTR ds:[ebx]
  40d486:	mov    ah,0x16
  40d488:	push   ss
  40d489:	cmp    eax,0xc0161604
  40d48e:	stos   BYTE PTR es:[edi],al
  40d48f:	test   DWORD PTR ds:0x6e4fa1c4,ebp
  40d495:	imul   esi,DWORD PTR [ebx+ecx*4],0x34885e7
  40d49c:	clc    
  40d49d:	icebp  
  40d49e:	push   0xe9676116
  40d4a3:	jl     0x40d488
  40d4a5:	mov    ds:0xd169e298,eax
  40d4aa:	fstp   QWORD PTR [eax+edx*4]
  40d4ad:	sbb    DWORD PTR [ebx],esi
  40d4af:	aaa    
  40d4b0:	jg     0x40d4ae
  40d4b2:	mov    ecx,0x1afa4c5a
  40d4b7:	addr16 jae 0x40d465
  40d4ba:	and    cl,BYTE PTR ds:0x12540f67
  40d4c0:	pop    esp
  40d4c1:	cs adc eax,0xd1798cd4
  40d4c7:	aaa    
  40d4c8:	frstor [edx+0x6eca3457]
  40d4ce:	aaa    
  40d4cf:	sub    ah,BYTE PTR [ebx+edi*2+0x2548f8b]
  40d4d6:	xchg   edi,eax
  40d4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4d8:	popa   
  40d4d9:	mov    edx,0x320ca0fa
  40d4de:	dec    eax
  40d4df:	retf   0x24c5
  40d4e2:	ins    BYTE PTR es:[edi],dx
  40d4e3:	pusha  
  40d4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e5:	jmp    0x10aa:0xc06ee71f
  40d4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ed:	inc    edi
  40d4ee:	ds dec ebx
  40d4f0:	pop    ebx
  40d4f1:	sub    bh,ch
  40d4f3:	dec    edi
  40d4f4:	loope  0x40d544
  40d4f6:	fild   QWORD PTR [esi+ebx*1+0x55a0bbe2]
  40d4fd:	ja     0x40d54d
  40d4ff:	cld    
  40d500:	fiadd  DWORD PTR [eax]
  40d502:	repnz (bad) 
  40d504:	sti    
  40d505:	xor    ebp,ebp
  40d507:	jo     0x40d4b0
  40d509:	fs enter 0x6939,0x91
  40d50e:	leave  
  40d50f:	mov    ds:0xbb8296b,al
  40d514:	cld    
  40d515:	mov    eax,ds:0xb52c893
  40d51a:	mov    al,0xee
  40d51c:	inc    esi
  40d51d:	dec    esp
  40d51e:	inc    ecx
  40d51f:	xlat   BYTE PTR ds:[ebx]
  40d520:	inc    ecx
  40d521:	mov    eax,0x25b8700b
  40d526:	mov    ecx,DWORD PTR ds:0x32ed60f7
  40d52c:	call   0x1ead6c67
  40d531:	pusha  
  40d532:	call   0x5496:0xcf91a2ac
  40d539:	ret    
  40d53a:	je     0x40d509
  40d53c:	mov    ds:0x79082b6,al
  40d541:	inc    ecx
  40d542:	in     eax,dx
  40d543:	inc    ecx
  40d544:	shr    edi,1
  40d546:	mov    ch,0x8f
  40d548:	retf   
  40d549:	je     0x40d526
  40d54b:	fsub   QWORD PTR [ebx]
  40d54d:	icebp  
  40d54e:	mov    cx,0x376
  40d552:	(bad)  
  40d554:	dec    ebp
  40d555:	pusha  
  40d556:	dec    ebx
  40d557:	(bad)  
  40d558:	lock ss (bad) 
  40d55b:	and    dh,al
  40d55d:	bound  ecx,QWORD PTR [ecx+eiz*8+0x7c751596]
  40d564:	(bad)  
  40d566:	mov    esi,0x4db0b1a
  40d56b:	clc    
  40d56c:	adc    bl,BYTE PTR [ecx+ebx*8+0x36]
  40d570:	inc    ebx
  40d571:	outs   dx,BYTE PTR ds:[esi]
  40d572:	push   ds
  40d573:	(bad)  
  40d574:	push   ds
  40d575:	icebp  
  40d576:	push   ecx
  40d577:	dec    edi
  40d578:	xchg   ebx,eax
  40d579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d57a:	push   0xd64aa3d5
  40d57f:	and    al,0x61
  40d582:	inc    edi
  40d583:	leave  
  40d584:	pop    esp
  40d585:	jnp    0x40d53e
  40d587:	jge    0x40d51e
  40d589:	dec    ebx
  40d58a:	shl    DWORD PTR [ebp-0x3],1
  40d58d:	add    edi,DWORD PTR [edi+0x6a]
  40d590:	jbe    0x40d60a
  40d592:	(bad)  
  40d593:	call   0x867a:0x357cd0d1
  40d59a:	data16 aaa 
  40d59c:	adc    al,0x4d
  40d59e:	popa   
  40d59f:	and    eax,0x876468ef
  40d5a4:	(bad)  
  40d5a5:	outs   dx,BYTE PTR ds:[esi]
  40d5a6:	inc    ebp
  40d5a7:	sub    eax,0x986021a0
  40d5ac:	in     eax,dx
  40d5ad:	call   0xa974:0x755d05e7
  40d5b4:	ret    
  40d5b5:	repz rep stos DWORD PTR es:[edi],eax
  40d5b8:	mov    dl,0xea
  40d5ba:	imul   BYTE PTR [eax-0x4898013c]
  40d5c0:	sub    edx,DWORD PTR [ecx+0xa3dc584]
  40d5c6:	dec    ebp
  40d5c7:	pop    ecx
  40d5c8:	ret    
  40d5c9:	fmul   QWORD PTR [ecx+eax*1-0x1e]
  40d5cd:	push   ebp
  40d5ce:	cmc    
  40d5cf:	js     0x40d589
  40d5d1:	push   ss
  40d5d2:	mov    ?,WORD PTR [ebx+0x20151db]
  40d5d8:	test   eax,0xb5541c43
  40d5dd:	in     eax,dx
  40d5de:	data16 jne 0x40d56b
  40d5e1:	cs in  al,dx
  40d5e3:	push   ebp
  40d5e4:	addr16 jo 0x40d58d
  40d5e7:	cs sub ecx,ecx
  40d5ea:	aad    0x74
  40d5ec:	hlt    
  40d5ed:	dec    ebp
  40d5ee:	stos   DWORD PTR es:[edi],eax
  40d5ef:	mov    edx,0x399f7db6
  40d5f4:	cmp    al,0xb2
  40d5f6:	mov    bh,0x42
  40d5f8:	adc    al,0x38
  40d5fa:	mul    BYTE PTR [eax]
  40d5fc:	bound  eax,QWORD PTR [edi]
  40d5fe:	in     al,0x96
  40d600:	int    0x8f
  40d602:	mov    ah,0x9d
  40d604:	pop    ecx
  40d605:	cmc    
  40d606:	mov    edx,0xbd0b9f0d
  40d60b:	int    0xfe
  40d60d:	mov    ds:0x51d1f893,al
  40d612:	xor    DWORD PTR [esi],esi
  40d614:	xor    edx,eax
  40d616:	pop    edx
  40d617:	inc    ebx
  40d618:	jb     0x49f0bb94
  40d61e:	out    dx,eax
  40d61f:	push   esi
  40d620:	enter  0xb6d9,0xb
  40d624:	in     eax,0xb1
  40d626:	jne    0x40d663
  40d628:	clc    
  40d629:	lock mov ch,0x64
  40d62c:	add    ch,BYTE PTR [eax-0x6c]
  40d62f:	aaa    
  40d630:	mov    dl,0x60
  40d632:	imul   ebx,DWORD PTR [edx],0x9adb7982
  40d638:	into   
  40d639:	mov    cl,0x5b
  40d63b:	mov    BYTE PTR [ebx],ch
  40d63d:	xor    DWORD PTR [ebx+0x78],0xd4958e7f
  40d644:	nop
  40d645:	dec    edx
  40d646:	mov    ah,0x14
  40d648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d649:	xor    esi,ecx
  40d64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d64c:	loopne 0x40d6aa
  40d64e:	les    edi,FWORD PTR [ebx]
  40d650:	push   0x7ad5f9c4
  40d655:	cmp    al,0x21
  40d657:	and    bl,BYTE PTR [ecx-0x31]
  40d65a:	mov    ecx,0x95302653
  40d65f:	xchg   esi,eax
  40d660:	inc    edx
  40d661:	cli    
  40d662:	nop
  40d663:	mov    dh,0xa6
  40d665:	push   ecx
  40d666:	push   esi
  40d667:	je     0x40d6d0
  40d669:	add    al,0xad
  40d66b:	aad    0x8e
  40d66d:	sbb    cl,BYTE PTR [edi-0x3c4873fe]
  40d673:	push   0xffffff8a
  40d675:	jmp    0x40d6f0
  40d677:	aaa    
  40d678:	sbb    BYTE PTR [eax-0x66c51d68],dl
  40d67e:	add    ebp,esi
  40d680:	outs   dx,BYTE PTR ds:[esi]
  40d681:	or     al,0x9b
  40d683:	pop    es
  40d684:	ja     0x40d64f
  40d686:	jno    0x40d673
  40d688:	mov    bl,0xd1
  40d68a:	loop   0x40d686
  40d68c:	xor    DWORD PTR [ebx-0x4def2cc],0x72a2acc4
  40d696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d697:	xchg   edi,eax
  40d698:	(bad)  
  40d699:	pop    ebp
  40d69a:	ins    DWORD PTR es:[edi],dx
  40d69b:	pop    ebx
  40d69c:	add    eax,0x59df7b2e
  40d6a1:	mov    ch,0x4b
  40d6a3:	out    0x88,eax
  40d6a5:	cdq    
  40d6a6:	inc    edx
  40d6a7:	rcr    dl,cl
  40d6a9:	adc    BYTE PTR [ebx+0x4e],ch
  40d6ac:	popf   
  40d6ad:	in     eax,dx
  40d6ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6af:	sti    
  40d6b0:	out    0x7f,eax
  40d6b2:	sti    
  40d6b3:	mov    ebx,edx
  40d6b5:	repz jns 0x40d66a
  40d6b8:	xchg   DWORD PTR [ecx-0x1d26bd22],ebx
  40d6be:	sub    dh,BYTE PTR [ecx+0x7cebd72b]
  40d6c4:	inc    ebp
  40d6c5:	lods   eax,DWORD PTR ds:[esi]
  40d6c6:	fwait
  40d6c7:	or     cl,BYTE PTR es:[edx]
  40d6ca:	sub    DWORD PTR [ecx+0x7a684cee],ebx
  40d6d0:	xchg   BYTE PTR [ecx+0x5f34772c],bh
  40d6d6:	out    dx,eax
  40d6d7:	loope  0x40d689
  40d6d9:	shr    bl,cl
  40d6db:	(bad)  
  40d6dc:	xchg   esi,eax
  40d6dd:	outs   dx,DWORD PTR ds:[esi]
  40d6de:	call   0x4d5b7ce0
  40d6e3:	out    0x9a,al
  40d6e5:	mov    ?,WORD PTR [eax-0x3c41b97]
  40d6eb:	cmp    al,0x71
  40d6ed:	and    dl,ch
  40d6ef:	adc    eax,0xbf45a554
  40d6f4:	add    BYTE PTR [ebp+0x26],bh
  40d6f7:	adc    eax,0x9582bca0
  40d6fc:	ret    
  40d6fd:	sbb    BYTE PTR [ecx],cl
  40d6ff:	xchg   ebx,eax
  40d700:	dec    BYTE PTR es:[ebx+0x1edf2ed0]
  40d707:	fidivr WORD PTR [ecx+esi*4-0x49]
  40d70b:	out    0xb4,eax
  40d70d:	and    al,0xc9
  40d70f:	fild   WORD PTR [ecx]
  40d711:	push   cs
  40d712:	or     al,0x3b
  40d714:	pop    ds
  40d715:	mov    ds:0x774506d2,al
  40d71a:	loopne 0x40d69f
  40d71c:	or     bh,ah
  40d71e:	idiv   BYTE PTR [esi+ecx*1+0x64]
  40d722:	push   ss
  40d723:	sub    esp,esp
  40d725:	aas    
  40d726:	sub    al,0xa5
  40d728:	inc    eax
  40d729:	ret    0x77de
  40d72c:	jecxz  0x40d6d7
  40d72e:	jmp    0x3fde:0x2d04491a
  40d735:	jle    0x40d6c6
  40d737:	or     esp,ecx
  40d739:	sbb    al,0x88
  40d73b:	leave  
  40d73c:	jl     0x40d79a
  40d73e:	mov    ebp,0xf991538c
  40d743:	add    BYTE PTR [ebp-0x71],cl
  40d746:	ret    0x9694
  40d749:	jge    0x40d717
  40d74b:	and    ebp,edi
  40d74d:	cwde   
  40d74e:	idiv   DWORD PTR [ebx+0x6c6269e3]
  40d754:	jne    0x40d77e
  40d756:	retf   
  40d757:	jmp    0xfac3:0x2e0b8a59
  40d75e:	cs dec eax
  40d760:	or     dl,cl
  40d762:	xlat   BYTE PTR ds:[ebx]
  40d763:	dec    esi
  40d764:	jl     0x40d7e0
  40d766:	sub    cl,BYTE PTR [edi+esi*4-0x40]
  40d76a:	jmp    0xfee9:0x436555fc
  40d771:	mov    al,ds:0x273cf472
  40d776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d777:	or     al,0x4c
  40d779:	jmp    0x40d72d
  40d77b:	add    BYTE PTR [edx],ah
  40d77d:	xchg   edx,eax
  40d77e:	lock xor al,0xf0
  40d781:	mov    bl,0x69
  40d783:	cs bnd jae 0x40d749
  40d787:	frstor [ecx-0x64004a69]
  40d78d:	fcmovb st,st(7)
  40d78f:	push   ds
  40d790:	add    ah,BYTE PTR [esi-0x4cd57a0e]
  40d796:	push   ss
  40d797:	mov    edx,0x3a4d105b
  40d79c:	aad    0x76
  40d79e:	jle    0x40d7f3
  40d7a0:	(bad)  
  40d7a3:	popf   
  40d7a4:	dec    edx
  40d7a5:	lods   eax,DWORD PTR ds:[esi]
  40d7a6:	mov    BYTE PTR [esi],bl
  40d7a8:	aas    
  40d7a9:	adc    eax,0x7ad0aaf3
  40d7ae:	stos   BYTE PTR es:[edi],al
  40d7af:	sbb    ah,cl
  40d7b1:	sub    DWORD PTR [esi],esi
  40d7b3:	stos   BYTE PTR es:[edi],al
  40d7b4:	sbb    dl,0x33
  40d7b7:	cdq    
  40d7b8:	pop    esp
  40d7b9:	xor    al,0x90
  40d7bb:	dec    eax
  40d7bc:	in     al,dx
  40d7bd:	jl     0x40d782
  40d7bf:	loop   0x40d749
  40d7c1:	shr    DWORD PTR [ecx],0xe8
  40d7c4:	mov    DWORD PTR [ebp-0x43],eax
  40d7c7:	sahf   
  40d7c8:	mov    cl,0xec
  40d7ca:	sbb    ebp,DWORD PTR [eax-0x11]
  40d7cd:	and    al,0xb
  40d7cf:	pop    edi
  40d7d0:	xchg   esp,eax
  40d7d1:	rol    DWORD PTR [ebx-0x24e63282],0x22
  40d7d8:	adc    bh,BYTE PTR [edx+0x67]
  40d7db:	sbb    BYTE PTR [eax],dh
  40d7dd:	jo     0x40d760
  40d7df:	xor    bh,BYTE PTR [ecx-0x3]
  40d7e2:	sbb    DWORD PTR [edx+edi*2],esp
  40d7e5:	pushf  
  40d7e6:	bound  esp,QWORD PTR ds:0x6a859cbe
  40d7ec:	mov    edx,DWORD PTR [esi-0x4c]
  40d7ef:	dec    ecx
  40d7f0:	stos   BYTE PTR es:[edi],al
  40d7f1:	jne    0x40d872
  40d7f3:	sbb    DWORD PTR [edi+esi*8-0x26],0x5f
  40d7f8:	scas   eax,DWORD PTR es:[edi]
  40d7f9:	cmp    bh,BYTE PTR [ebx-0x2c]
  40d7fc:	cli    
  40d7fd:	pop    ebp
  40d7fe:	ja     0x40d87b
  40d800:	mov    ah,0x87
  40d802:	push   ebp
  40d803:	retf   
  40d804:	or     cl,BYTE PTR [edi+0x48b68074]
  40d80a:	cs sahf 
  40d80c:	pushf  
  40d80d:	xchg   ebx,eax
  40d80e:	cmc    
  40d80f:	mov    eax,ds:0x666ee2c
  40d814:	xchg   esp,eax
  40d815:	sub    cl,al
  40d817:	stos   DWORD PTR es:[edi],eax
  40d818:	jecxz  0x40d813
  40d81a:	jmp    0xe74e:0x37139dce
  40d821:	jge    0x40d7ad
  40d823:	mov    ebx,0xbaff573d
  40d828:	push   ebp
  40d829:	inc    ecx
  40d82a:	push   cs
  40d82b:	jp     0x40d806
  40d82d:	cwde   
  40d82e:	pop    ebx
  40d82f:	or     ebx,DWORD PTR [edx-0x2a]
  40d832:	or     DWORD PTR [eax+edx*8+0x3],edx
  40d836:	xchg   esi,eax
  40d837:	sbb    DWORD PTR [esi-0x6d],0xffffff84
  40d83b:	das    
  40d83c:	xchg   BYTE PTR [edx-0x35],cl
  40d83f:	jle    0x40d88f
  40d841:	add    ebx,DWORD PTR [eax]
  40d843:	(bad)  
  40d844:	mov    ds:0x85d59122,eax
  40d849:	sbb    DWORD PTR [edi+0x20d59de5],esi
  40d84f:	outs   dx,BYTE PTR ds:[esi]
  40d850:	add    bl,al
  40d852:	push   edi
  40d853:	aas    
  40d854:	cmp    al,0x43
  40d856:	push   esi
  40d857:	fsubr  DWORD PTR [eax-0x24]
  40d85a:	mov    ebx,0xd7a87966
  40d85f:	out    0x62,eax
  40d861:	xchg   ecx,eax
  40d862:	lods   eax,DWORD PTR ds:[si]
  40d864:	sbb    DWORD PTR [esi+0x1d],edi
  40d867:	aad    0x46
  40d869:	ror    DWORD PTR [ebx+edx*8+0x77c0243a],0xd1
  40d871:	in     al,dx
  40d872:	mov    al,ds:0x742aa37
  40d877:	and    edx,DWORD PTR [edi+ecx*2]
  40d87a:	mov    WORD PTR [ebp+ecx*2-0x4cdfcdd3],cs
  40d881:	in     eax,0x1f
  40d883:	adc    eax,0x9dc63b9
  40d888:	int3   
  40d889:	out    dx,eax
  40d88a:	dec    BYTE PTR [edx-0x2dab4ea7]
  40d890:	adc    eax,0xe75489c9
  40d895:	es call 0xd53:0x5808755
  40d89d:	sub    al,0xd1
  40d89f:	cmc    
  40d8a0:	mov    bh,0x74
  40d8a2:	xchg   esp,eax
  40d8a3:	ret    
  40d8a4:	fwait
  40d8a5:	cmp    BYTE PTR [eax+0x6640ea51],ch
  40d8ab:	xor    BYTE PTR [edi],dh
  40d8ad:	dec    eax
  40d8ae:	fist   WORD PTR [ebx-0x5e6ac972]
  40d8b4:	inc    edi
  40d8b5:	push   ebx
  40d8b6:	mov    ecx,0xc9dbc4d
  40d8bb:	or     BYTE PTR [edx-0x24],bh
  40d8be:	stc    
  40d8bf:	adc    ecx,DWORD PTR [edi]
  40d8c1:	test   eax,0x91f8f4d
  40d8c6:	cdq    
  40d8c7:	test   BYTE PTR [edi],bl
  40d8c9:	and    esi,esp
  40d8cb:	or     DWORD PTR [eax-0x46],esp
  40d8ce:	ret    
  40d8cf:	mov    ah,0x7a
  40d8d1:	gs mov cl,0x54
  40d8d4:	int    0xa5
  40d8d6:	mov    al,ds:0x6f771000
  40d8db:	jno    0x40d89d
  40d8dd:	xor    dh,BYTE PTR [esi+0x1e5005c4]
  40d8e3:	fsub   st(5),st
  40d8e5:	push   ds
  40d8e6:	push   gs
  40d8e8:	lahf   
  40d8e9:	mov    ebx,0x6bcd32dc
  40d8ee:	mov    al,ds:0x69a2626c
  40d8f3:	inc    esp
  40d8f4:	cmp    BYTE PTR [edi+0x38],ch
  40d8f7:	mov    eax,0xacb1e86f
  40d8fc:	jecxz  0x40d8c9
  40d8fe:	mov    ss,WORD PTR fs:[eax]
  40d901:	jo     0x40d96c
  40d903:	sbb    bl,bl
  40d905:	adc    DWORD PTR [esp+ebx*2],0x8d418fb1
  40d90c:	(bad)  [eax-0x20ffd489]
  40d912:	mov    bh,0xc5
  40d914:	mov    al,0xe2
  40d916:	pop    es
  40d917:	fcomp  QWORD PTR [ecx-0x6a]
  40d91a:	dec    esp
  40d91b:	xchg   ebp,eax
  40d91c:	sub    al,0x6e
  40d91e:	jae    0x40d8d3
  40d920:	adc    esi,ebx
  40d922:	(bad)  
  40d923:	xchg   DWORD PTR [ecx-0x71],esp
  40d926:	ror    BYTE PTR [esi],1
  40d928:	retf   0x5bc6
  40d92b:	xor    esp,0xffffffbf
  40d92e:	pusha  
  40d92f:	or     edi,DWORD PTR [eax+0x4271b2fb]
  40d935:	xchg   BYTE PTR ss:[edx-0x75],dl
  40d939:	sbb    BYTE PTR [edi-0x3b],0x7e
  40d93d:	ja     0x40d913
  40d93f:	adc    ebp,DWORD PTR [edx]
  40d941:	xor    eax,esp
  40d943:	dec    ebp
  40d944:	pop    ebx
  40d945:	std    
  40d946:	cmp    DWORD PTR cs:[edx-0x3c],esp
  40d94a:	repz gs jb 0x40d8da
  40d94e:	xor    DWORD PTR [ecx+0x6d],ebp
  40d951:	adc    BYTE PTR [edx-0x74],dl
  40d954:	mov    DWORD PTR [edi],esi
  40d956:	and    eax,0xa8175edc
  40d95b:	enter  0x984f,0xfe
  40d95f:	out    dx,eax
  40d960:	pop    es
  40d961:	xchg   DWORD PTR [edx+0x1b],esi
  40d964:	mov    edi,0x42fb059f
  40d969:	pop    ebx
  40d96a:	jge    0x40d949
  40d96c:	cmp    eax,0x77d155e7
  40d971:	div    BYTE PTR [ecx]
  40d973:	sub    DWORD PTR [eax],ecx
  40d975:	fdivrp st(7),st
  40d977:	pop    es
  40d978:	jo     0x40d991
  40d97a:	(bad)
  40d97e:	test   al,0x6e
  40d980:	and    DWORD PTR [eax+edx*8],esi
  40d983:	mov    DWORD PTR [edi],ecx
  40d985:	sbb    al,BYTE PTR [edx-0x515ce4dd]
  40d98b:	pop    edx
  40d98c:	add    bh,cl
  40d98e:	neg    bh
  40d990:	repnz scas eax,DWORD PTR es:[edi]
  40d992:	dec    esp
  40d993:	add    al,ch
  40d995:	xor    esp,edx
  40d997:	ss fwait
  40d999:	mov    al,0xc4
  40d99b:	push   ebx
  40d99c:	stc    
  40d99d:	jge    0x40d93a
  40d99f:	jg     0x40da0e
  40d9a1:	pop    cx
  40d9a3:	adc    al,0x49
  40d9a5:	mov    bh,0xe7
  40d9a7:	mov    esi,0xbf797b59
  40d9ac:	test   eax,0x8f116e36
  40d9b1:	inc    esi
  40d9b2:	in     eax,0x4d
  40d9b4:	das    
  40d9b5:	mov    es,WORD PTR [ebp-0x2b3243d1]
  40d9bb:	es cmp esp,0x785fe59a
  40d9c2:	ror    ecx,0xb0
  40d9c5:	aad    0x63
  40d9c7:	pop    edi
  40d9c8:	fs rcr eax,cl
  40d9cb:	sbb    DWORD PTR [ebx+ecx*8-0x25a3f6d],0xec72ae9c
  40d9d6:	mov    ch,ah
  40d9d8:	add    al,0xc5
  40d9da:	and    cl,BYTE PTR [edi-0x4f]
  40d9dd:	repnz cmp DWORD PTR [edx-0x5a5fda80],ebp
  40d9e4:	sar    DWORD PTR [edx-0x39],cl
  40d9e7:	rcr    bh,0x26
  40d9ea:	fistp  DWORD PTR [ebp-0x56fc4fdb]
  40d9f0:	push   es
  40d9f1:	aam    0x10
  40d9f3:	aad    0x3d
  40d9f5:	repz pop ebp
  40d9f7:	(bad)  
  40d9f8:	jb     0x40da6c
  40d9fa:	mov    DWORD PTR [ebp+0x14],ecx
  40d9fd:	xor    eax,eax
  40d9ff:	or     DWORD PTR [ebp+0x14],eax
  40da02:	mov    eax,DWORD PTR [ebp-0x50]
  40da05:	mov    ecx,DWORD PTR [ebp-0x4c]
  40da08:	shrd   eax,ecx,0x2
  40da0c:	shr    ecx,0x2
  40da0f:	mov    cx,ax
  40da12:	mov    eax,DWORD PTR [ebp-0x50]
  40da15:	mov    edx,0x655c
  40da1a:	xor    cx,dx
  40da1d:	jmp    0x40dfa7
  40da22:	sbb    DWORD PTR [edx+ebx*1+0x623918bf],0x20
  40da2a:	das    
  40da2b:	je     0xde4e30e3
  40da31:	test   al,0xfd
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	push   ss
  40da35:	push   ss
  40da36:	cmp    eax,0xd9161604
  40da3b:	fsub   st(7),st
  40da3d:	adc    eax,0x362ee05b
  40da42:	pusha  
  40da43:	sbb    DWORD PTR [ebx-0x25dd63ee],ebp
  40da49:	cmp    esp,DWORD PTR fs:[eax-0x32]
  40da4d:	and    eax,0x2d6f8974
  40da52:	xlat   BYTE PTR ds:[ebx]
  40da53:	jns    0x40dabf
  40da55:	fistp  DWORD PTR [edi+0x6de8c7a8]
  40da5b:	pop    esi
  40da5c:	xchg   edi,eax
  40da5d:	mov    al,ds:0xacecfab3
  40da62:	sbb    edx,DWORD PTR [ebx+0xb]
  40da65:	jno    0x40da43
  40da67:	sub    edi,DWORD PTR [ecx+eiz*1+0x14e06ea2]
  40da6e:	xor    BYTE PTR [edi+0x2f1e61a],ch
  40da74:	mov    WORD PTR [edx],es
  40da76:	aas    
  40da77:	(bad)  
  40da79:	ins    DWORD PTR es:[edi],dx
  40da7a:	imul   esi,DWORD PTR [edi-0x5e],0xf03cdfb4
  40da81:	fisttp WORD PTR [ebx-0x7b]
  40da84:	pushf  
  40da85:	jbe    0x40da84
  40da87:	or     cl,BYTE PTR [ecx]
  40da89:	and    eax,0xc853e39a
  40da8e:	dec    esp
  40da8f:	in     eax,dx
  40da90:	or     ebx,esp
  40da92:	out    dx,al
  40da93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da94:	jmp    0x40db02
  40da96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da97:	int3   
  40da98:	popa   
  40da99:	pop    edi
  40da9a:	aas    
  40da9b:	mov    eax,gs:0xedfbeb2e
  40daa1:	sbb    edx,DWORD PTR [edx-0x32599699]
  40daa7:	jno    0x40dac2
  40daa9:	retf   0xc0df
  40daac:	lods   al,BYTE PTR ds:[esi]
  40daad:	mov    ch,0x8e
  40daaf:	dec    edx
  40dab0:	inc    esi
  40dab1:	shl    BYTE PTR [ebp-0x60],0x8e
  40dab5:	loope  0x40da6b
  40dab7:	mov    ecx,0xd6b33bc1
  40dabc:	xchg   esp,eax
  40dabd:	pop    edx
  40dabe:	jb     0x40da91
  40dac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac1:	mov    ch,0x18
  40dac3:	adc    DWORD PTR [eax],edi
  40dac5:	fisub  DWORD PTR [eax+0x1a]
  40dac8:	outs   dx,DWORD PTR ds:[esi]
  40dac9:	push   ss
  40daca:	(bad)  
  40dacb:	jp     0x40da58
  40dacd:	pop    esi
  40dace:	xlat   BYTE PTR ds:[ebx]
  40dacf:	leave  
  40dad0:	mov    WORD PTR [ecx],?
  40dad2:	pop    edx
  40dad3:	adc    eax,0x8067e6c0
  40dad8:	into   
  40dad9:	rol    ah,1
  40dadb:	pop    es
  40dadc:	pushf  
  40dadd:	inc    edi
  40dade:	ja     0x40db1d
  40dae0:	push   esp
  40dae1:	inc    ecx
  40dae2:	jecxz  0x40dae6
  40dae4:	cmp    DWORD PTR [eax+0xa4b5f1a],0xb6f060ef
  40daee:	outs   dx,DWORD PTR ds:[esi]
  40daef:	add    DWORD PTR [eax+eiz*1+0x72],esp
  40daf3:	retf   0x6c31
  40daf6:	xchg   ebx,eax
  40daf7:	fisttp DWORD PTR [ebx]
  40daf9:	xchg   DWORD PTR [edx-0x3c0a1c40],ebp
  40daff:	pop    ebp
  40db00:	cmp    eax,0xa0a33057
  40db05:	aam    0x26
  40db07:	mov    bh,0x6f
  40db09:	push   eax
  40db0a:	and    bh,BYTE PTR [ebp+0x45]
  40db0d:	jge    0x40dadb
  40db0f:	sub    BYTE PTR [ebx],ch
  40db11:	lock xlat BYTE PTR ds:[ebx]
  40db13:	inc    esi
  40db14:	mov    bh,0xe
  40db16:	mov    bl,BYTE PTR [ebx+0x8b31753]
  40db1c:	xchg   ecx,eax
  40db1d:	jno    0x40db78
  40db1f:	loopne 0x40db91
  40db21:	out    0xd1,eax
  40db23:	aaa    
  40db24:	ficomp DWORD PTR [edi+ecx*2]
  40db27:	jle    0x40db48
  40db29:	jmp    0x9e44:0xddbba51c
  40db30:	push   es
  40db31:	nop
  40db32:	cmp    eax,0xc2bd97ea
  40db37:	push   esi
  40db38:	jmp    0x1eb2b921
  40db3d:	mov    eax,ds:0x579f05a4
  40db42:	fwait
  40db43:	push   ecx
  40db44:	mov    dl,0xab
  40db46:	pop    ebp
  40db47:	stos   DWORD PTR es:[edi],eax
  40db48:	test   al,0x8a
  40db4a:	cmp    cl,bl
  40db4c:	cs and eax,0xc135e3c2
  40db52:	mov    ds:0x495ec46b,eax
  40db57:	cmp    al,BYTE PTR [ebx+0x732ba794]
  40db5d:	dec    edi
  40db5e:	mov    dl,BYTE PTR [edi+0x3f]
  40db61:	and    dh,BYTE PTR [edx-0x2c]
  40db64:	fnstsw WORD PTR ds:0x945eaaf2
  40db6a:	cdq    
  40db6b:	mov    ds:0x131b9e9f,al
  40db70:	jmp    0x6e7d:0x69aa0c51
  40db77:	cmp    ah,BYTE PTR [eax]
  40db79:	jecxz  0x40db2c
  40db7b:	lock inc BYTE PTR [ebp-0x59]
  40db7f:	push   ss
  40db80:	call   0x6597e1ad
  40db85:	mov    ah,0xbb
  40db87:	loopne 0x40dba3
  40db89:	push   cs
  40db8a:	imul   edi,DWORD PTR [ecx-0x3287f7de],0xffffffa1
  40db91:	je     0x40db8a
  40db93:	fisubr DWORD PTR [edi+0x2e]
  40db96:	mov    DWORD PTR [edi+0x57],eax
  40db99:	dec    esp
  40db9a:	cmc    
  40db9b:	fs fdiv st(6),st
  40db9e:	mov    DWORD PTR [ebx],edi
  40dba0:	je     0x40db62
  40dba2:	jns    0x40dbbf
  40dba4:	in     eax,dx
  40dba5:	ret    0xdcce
  40dba8:	xchg   esi,eax
  40dba9:	xchg   BYTE PTR [edi-0x2c],al
  40dbac:	xchg   esi,eax
  40dbad:	push   cs
  40dbae:	(bad)  
  40dbaf:	sbb    DWORD PTR [eax+0x10],ebp
  40dbb2:	adc    al,0x45
  40dbb4:	test   BYTE PTR [edi-0x54ec52a8],dl
  40dbba:	arpl   WORD PTR [ecx+0x4c],cx
  40dbbd:	mov    dh,0x10
  40dbbf:	sbb    DWORD PTR [edx+eax*2],eax
  40dbc2:	and    al,0x6b
  40dbc4:	mov    ds:0x7a219026,eax
  40dbc9:	sbb    bh,BYTE PTR [edx-0x62]
  40dbcc:	jle    0x40dbcb
  40dbce:	repz mov ecx,0x5d1f3d5f
  40dbd4:	or     bl,al
  40dbd6:	or     DWORD PTR [edx+0x2f],esp
  40dbd9:	mov    bh,0x17
  40dbdb:	mov    bh,0x2b
  40dbdd:	mov    ebx,0x65059426
  40dbe2:	adc    dl,BYTE PTR [ecx-0x51]
  40dbe5:	cmp    BYTE PTR [edi-0x2d],bh
  40dbe8:	push   ss
  40dbe9:	test   bl,dl
  40dbeb:	xchg   edi,eax
  40dbec:	or     bh,cl
  40dbee:	xchg   esi,eax
  40dbef:	and    DWORD PTR [ecx+0x6a],esi
  40dbf2:	(bad)  
  40dbf3:	mov    bh,0x6f
  40dbf5:	fwait
  40dbf6:	pushf  
  40dbf7:	scas   al,BYTE PTR es:[edi]
  40dbf8:	mov    esp,0x1318be05
  40dbfd:	xchg   DWORD PTR ds:0xc1087944,edi
  40dc03:	jp     0x40dbf3
  40dc05:	inc    ebp
  40dc06:	das    
  40dc07:	pop    esi
  40dc08:	shl    DWORD PTR [ecx],0xb2
  40dc0b:	cs xchg ebp,eax
  40dc0d:	add    al,0xec
  40dc0f:	mov    eax,0xdcb126f9
  40dc14:	imul   ebp,DWORD PTR [edi],0xd56118ca
  40dc1a:	mov    ds:0xca5a547d,eax
  40dc1f:	aaa    
  40dc20:	into   
  40dc21:	xchg   DWORD PTR [eax+0x4a],esp
  40dc24:	mov    eax,ds:0x40e24b20
  40dc29:	pushf  
  40dc2a:	fucomip st,st(7)
  40dc2c:	fwait
  40dc2d:	scas   eax,DWORD PTR es:[edi]
  40dc2e:	dec    ebp
  40dc2f:	sub    eax,DWORD PTR [edx+0x3c]
  40dc32:	mov    DWORD PTR [ebp+0x50],ecx
  40dc35:	fbstp  TBYTE PTR [eax+eax*1-0x11]
  40dc39:	xchg   ebx,eax
  40dc3a:	addr16 and eax,0xccd54015
  40dc40:	(bad)  [ebx-0x25e4b46c]
  40dc46:	xchg   esp,eax
  40dc47:	rcl    DWORD PTR [edx-0x5a],1
  40dc4a:	or     eax,0x5a4d5623
  40dc4f:	xor    BYTE PTR [ebp+0x51],bl
  40dc52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc53:	ja     0x40dc5d
  40dc55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc56:	(bad)  
  40dc57:	(bad)  
  40dc59:	retf   
  40dc5a:	into   
  40dc5b:	mov    cl,0x2a
  40dc5d:	xchg   ebp,eax
  40dc5e:	mov    cl,dh
  40dc60:	outs   dx,DWORD PTR ds:[esi]
  40dc61:	push   ss
  40dc62:	push   ss
  40dc63:	cli    
  40dc64:	push   eax
  40dc65:	pushf  
  40dc66:	add    al,0xe9
  40dc68:	popf   
  40dc69:	frstor [ecx+0x20]
  40dc6c:	ret    0x43ba
  40dc6f:	lock popf 
  40dc71:	push   esi
  40dc72:	mov    eax,ds:0x5395a76c
  40dc77:	outs   dx,DWORD PTR ds:[esi]
  40dc78:	xchg   DWORD PTR [ebp-0x41],ecx
  40dc7b:	cmc    
  40dc7c:	mov    ecx,0xe2aaa58d
  40dc81:	imul   ebp,DWORD PTR [ecx+0x3d2c2dec],0x46
  40dc88:	dec    ebp
  40dc89:	xor    eax,0xaf1a2f4c
  40dc8e:	jb     0x40dc64
  40dc90:	push   esp
  40dc91:	xor    ebp,DWORD PTR [eax+0x29]
  40dc94:	cmp    dl,dl
  40dc96:	imul   esp,DWORD PTR ss:[ecx+0x38],0xffffffd2
  40dc9b:	fsub   DWORD PTR [ecx+edx*1]
  40dc9e:	inc    ebx
  40dc9f:	push   0xe
  40dca1:	lods   eax,DWORD PTR ds:[esi]
  40dca2:	pop    eax
  40dca3:	arpl   WORD PTR [ebp+0x3],ax
  40dca6:	sbb    ecx,0x8e9f3a64
  40dcac:	lods   eax,DWORD PTR ds:[esi]
  40dcad:	gs mov bl,0xa5
  40dcb0:	int    0xe0
  40dcb2:	inc    ecx
  40dcb3:	das    
  40dcb4:	mov    DWORD PTR [esi],ecx
  40dcb6:	ins    DWORD PTR es:[edi],dx
  40dcb7:	(bad)  
  40dcb8:	jl     0x40dc7d
  40dcba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcbb:	mov    esi,0xb34d3d59
  40dcc0:	inc    eax
  40dcc1:	mov    eax,ds:0x74d5ebcd
  40dcc6:	mov    ch,0xa5
  40dcc8:	push   ss
  40dcc9:	je     0x40dd45
  40dccb:	pop    edx
  40dccc:	sbb    cl,al
  40dcce:	cmp    DWORD PTR [esi],esp
  40dcd0:	jge    0x40dcae
  40dcd2:	into   
  40dcd3:	jae    0x40dd4a
  40dcd5:	xor    ch,BYTE PTR [ebp+0x7ce12714]
  40dcdb:	and    ebx,eax
  40dcdd:	idiv   BYTE PTR [esi-0x56]
  40dce0:	(bad)  
  40dce1:	and    ecx,DWORD PTR [esi-0x1a]
  40dce4:	int3   
  40dce5:	jnp    0x40dcbb
  40dce7:	xor    ebp,edi
  40dce9:	pop    ebp
  40dcea:	(bad)  
  40dceb:	repz ret 
  40dced:	outs   dx,BYTE PTR ds:[esi]
  40dcee:	sub    ah,ah
  40dcf0:	mov    eax,0x888d7abd
  40dcf5:	pop    ecx
  40dcf6:	les    ebp,FWORD PTR [ebx-0x32]
  40dcf9:	add    esi,DWORD PTR [ecx+0x3f2d462f]
  40dcff:	jmp    0xb003:0xdce81b71
  40dd06:	xor    DWORD PTR [edi+edx*4-0x24e6ea9],edx
  40dd0d:	mov    dh,al
  40dd0f:	pop    es
  40dd10:	leave  
  40dd11:	mov    bh,0x65
  40dd13:	jle    0x40dceb
  40dd15:	push   ds
  40dd16:	in     al,dx
  40dd17:	mov    cl,0xd7
  40dd19:	ret    0x8f1
  40dd1c:	mov    al,0x9a
  40dd1e:	adc    al,al
  40dd20:	call   0x5426f429
  40dd25:	dec    edx
  40dd26:	push   edx
  40dd27:	xchg   esi,eax
  40dd28:	jo     0x40dd2b
  40dd2a:	push   cs
  40dd2b:	xor    DWORD PTR [edi+0x78],esp
  40dd2e:	pushf  
  40dd2f:	mov    bl,0x9
  40dd31:	push   ss
  40dd32:	xchg   BYTE PTR [edx],ah
  40dd34:	shr    bh,cl
  40dd36:	pop    ecx
  40dd37:	inc    esp
  40dd38:	inc    ecx
  40dd39:	lea    ecx,[esi-0x5ba29b62]
  40dd3f:	xor    eax,0x42d1556a
  40dd44:	push   eax
  40dd45:	sbb    DWORD PTR [eax],ebx
  40dd47:	outs   dx,DWORD PTR ds:[esi]
  40dd48:	add    al,0xda
  40dd4a:	das    
  40dd4b:	out    dx,al
  40dd4c:	hlt    
  40dd4d:	jge    0x40dcd9
  40dd4f:	ss cli 
  40dd51:	imul   DWORD PTR [ebp+0x7d]
  40dd54:	enter  0xa562,0xc
  40dd58:	and    ch,0xbc
  40dd5b:	outs   dx,BYTE PTR ds:[esi]
  40dd5c:	stos   DWORD PTR es:[edi],eax
  40dd5d:	mov    esp,0x45dcd40
  40dd62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd63:	mov    ecx,0x702fbe2c
  40dd68:	add    ch,bh
  40dd6a:	jp     0x40ddd9
  40dd6c:	int    0x2
  40dd6e:	cmc    
  40dd6f:	push   esp
  40dd70:	add    DWORD PTR [eax+ebp*4+0x52],ebx
  40dd74:	lahf   
  40dd75:	lea    edx,ds:0xceb8eb96
  40dd7b:	lods   al,BYTE PTR ds:[esi]
  40dd7c:	addr16 sub al,0x17
  40dd7f:	retf   0x43ba
  40dd82:	test   DWORD PTR [edx+0x65621a98],edi
  40dd88:	sub    esp,DWORD PTR [esi-0x614d41b5]
  40dd8e:	call   0xf9d6:0xb7eca929
  40dd95:	or     eax,0x106ef57a
  40dd9a:	repnz sub BYTE PTR [ebx+0x57398945],ah
  40dda1:	mov    dh,0xe7
  40dda3:	sti    
  40dda4:	pop    edx
  40dda5:	pop    esp
  40dda6:	xor    al,0xcb
  40dda8:	mov    ah,0xd7
  40ddaa:	cmp    ebx,esp
  40ddac:	imul   edx,DWORD PTR [edx-0x23000a34],0x1207aa17
  40ddb6:	jno    0x40dd4d
  40ddb8:	jle    0x40dd9f
  40ddba:	sub    DWORD PTR [edx+0x78],ecx
  40ddbd:	mov    al,ds:0x4709b5d9
  40ddc2:	adc    al,0xe4
  40ddc4:	pop    esi
  40ddc5:	pop    es
  40ddc6:	repz pop es
  40ddc8:	add    DWORD PTR [ebp+0x1d],eax
  40ddcb:	mov    edi,0x7f181677
  40ddd0:	mov    ds:0x8d45a47d,al
  40ddd5:	aam    0xe3
  40ddd7:	sbb    esi,edi
  40ddd9:	es or  ebp,eax
  40dddc:	mov    ebp,0x8bb60d34
  40dde1:	sbb    edx,DWORD PTR [esi-0x1c19313f]
  40dde7:	test   edx,esi
  40dde9:	icebp  
  40ddea:	aaa    
  40ddeb:	(bad)  
  40dded:	sbb    al,0xb3
  40ddef:	int3   
  40ddf0:	jbe    0x40de36
  40ddf2:	(bad)  
  40ddf3:	xor    ch,BYTE PTR [esi+0x4e]
  40ddf6:	mov    ecx,0xae92e472
  40ddfb:	shl    BYTE PTR [eax+eiz*2+0xfa847f4],cl
  40de02:	es mov ah,0x22
  40de05:	arpl   WORD PTR [edx-0x43],ax
  40de08:	jb     0x40ddbd
  40de0a:	or     bl,BYTE PTR [ebx]
  40de0c:	inc    ebp
  40de0d:	mov    DWORD PTR [ecx],edi
  40de0f:	lods   eax,DWORD PTR ds:[esi]
  40de10:	bound  ebp,QWORD PTR ds:0x51df21b0
  40de16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de17:	inc    edi
  40de18:	aam    0x1d
  40de1a:	fbstp  TBYTE PTR [ecx-0x42]
  40de1d:	jge    0x40de05
  40de1f:	sub    ah,0x26
  40de22:	rcr    BYTE PTR [edx+0x31],0xc4
  40de26:	mov    cl,0x71
  40de28:	leave  
  40de29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de2a:	jns    0x40de6d
  40de2c:	and    ebx,edi
  40de2e:	xlat   BYTE PTR ds:[ebx]
  40de2f:	lods   al,BYTE PTR ds:[esi]
  40de30:	inc    ebp
  40de31:	mov    BYTE PTR [eax+0x6ffdbc23],dh
  40de37:	jnp    0x40de54
  40de39:	test   BYTE PTR [edx],dl
  40de3b:	ja     0x40ddd5
  40de3d:	sub    eax,DWORD PTR [edi-0x5ecc9137]
  40de43:	out    0x1e,al
  40de45:	dec    edi
  40de46:	mov    eax,ds:0xe5e6a794
  40de4b:	xchg   edi,eax
  40de4c:	jp     0x40ddd8
  40de4e:	jmp    0x40dde1
  40de50:	jmp    0x40debc
  40de52:	outs   dx,DWORD PTR ds:[esi]
  40de53:	jp     0x40de79
  40de55:	pop    ebx
  40de56:	test   DWORD PTR [ecx],ebx
  40de58:	xchg   edi,eax
  40de59:	sti    
  40de5a:	and    eax,0xc5b963a3
  40de5f:	stc    
  40de60:	fisub  DWORD PTR [edx]
  40de62:	and    DWORD PTR [eax+0x77],eax
  40de65:	sbb    al,0x4c
  40de67:	sti    
  40de68:	and    eax,0xb27590a
  40de6d:	mov    eax,ds:0xd9ea684f
  40de72:	in     al,dx
  40de73:	push   ss
  40de74:	push   0x12
  40de76:	outs   dx,BYTE PTR ds:[esi]
  40de77:	sub    al,0x17
  40de79:	in     eax,0x2b
  40de7b:	cmc    
  40de7c:	(bad)  
  40de7d:	js     0x40de36
  40de7f:	popa   
  40de80:	dec    edi
  40de81:	adc    BYTE PTR [edx+0x1d],al
  40de84:	fdivr  QWORD PTR [ebx-0x6bd53e42]
  40de8a:	or     bh,bh
  40de8c:	jne    0x40de2a
  40de8e:	jg     0x40de5f
  40de90:	rcl    BYTE PTR [edx-0x7f],0xb7
  40de94:	lods   al,BYTE PTR ds:[esi]
  40de95:	dec    esp
  40de96:	mov    WORD PTR [ebx-0x1df5e3e9],?
  40de9c:	rcl    DWORD PTR [ebx+esi*1-0xc],1
  40dea0:	outs   dx,DWORD PTR ds:[esi]
  40dea1:	pop    DWORD PTR [edi+0xabfcc02]
  40dea7:	aam    0x6d
  40dea9:	adc    al,0x10
  40deab:	push   0xffffffcf
  40dead:	enter  0xdd38,0x51
  40deb1:	or     al,0xb6
  40deb3:	sub    eax,0x4e16431b
  40deb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb9:	das    
  40deba:	push   0x8c6d3552
  40debf:	sbb    al,0x60
  40dec1:	les    edx,FWORD PTR [edi+edi*1]
  40dec4:	mov    ecx,0xd2a2f1f9
  40dec9:	pop    ebx
  40deca:	pop    edx
  40decb:	int    0xe1
  40decd:	hlt    
  40dece:	sub    dl,dh
  40ded0:	jmp    0x83e5:0x44c9aef2
  40ded7:	jle    0x40df30
  40ded9:	aad    0x3f
  40dedb:	(bad)  
  40dedd:	cmp    al,0xcf
  40dedf:	push   0xf74e35c4
  40dee4:	or     BYTE PTR [ecx],cl
  40dee6:	and    al,0x87
  40dee8:	stc    
  40dee9:	ret    
  40deea:	mov    ah,0xe0
  40deec:	push   edx
  40deed:	sbb    DWORD PTR [edx+0x42c92585],esi
  40def3:	mov    edx,0xb2841bfb
  40def8:	dec    esp
  40def9:	loopne 0x40dec8
  40defb:	or     al,0xf1
  40defd:	dec    ebx
  40defe:	mov    eax,ds:0xdbf4b1da
  40df03:	daa    
  40df04:	addr16 add al,ah
  40df07:	lds    ebp,FWORD PTR [esi-0x24]
  40df0a:	push   edi
  40df0b:	hlt    
  40df0c:	inc    ecx
  40df0d:	scas   eax,DWORD PTR es:[edi]
  40df0e:	adc    ah,BYTE PTR [edi-0x30]
  40df11:	mov    esp,0x8f60ce5f
  40df16:	es test ecx,0xa328005f
  40df1d:	jmp    0x40dee2
  40df1f:	jmp    0x40dede
  40df21:	fs int3 
  40df23:	xor    eax,0x64ff5f9e
  40df28:	pop    ss
  40df29:	jns    0x40df77
  40df2b:	sub    eax,DWORD PTR [ecx+eiz*8]
  40df2e:	out    dx,al
  40df2f:	xor    ecx,DWORD PTR [ecx+0x1b]
  40df32:	sub    BYTE PTR [edi-0x6a191900],ah
  40df38:	and    eax,0x97dadc10
  40df3d:	push   es
  40df3e:	icebp  
  40df3f:	jo     0x40dee0
  40df41:	cmp    bl,BYTE PTR [ebx-0x559db561]
  40df47:	jecxz  0x40df44
  40df49:	push   eax
  40df4a:	dec    ebp
  40df4b:	jle    0x40dfb9
  40df4d:	inc    eax
  40df4e:	and    cl,dh
  40df50:	outs   dx,DWORD PTR ds:[esi]
  40df51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df52:	push   edi
  40df53:	inc    eax
  40df54:	mov    ecx,0x1aee18f6
  40df59:	in     al,0x0
  40df5b:	xor    eax,0x25838576
  40df60:	cmp    al,0x3f
  40df62:	mov    eax,0xf2210554
  40df67:	xor    esi,DWORD PTR [edx+eiz*2]
  40df6a:	clc    
  40df6b:	lea    edi,[esi-0x12f84e38]
  40df71:	xchg   edi,esp
  40df73:	(bad)  
  40df75:	out    0xec,eax
  40df77:	pop    ecx
  40df78:	fdivr  QWORD PTR [esi+ebp*1+0x5e]
  40df7c:	stos   BYTE PTR es:[edi],al
  40df7d:	arpl   sp,bp
  40df7f:	nop
  40df80:	loop   0x40dffe
  40df82:	add    DWORD PTR [edx-0x52],ebx
  40df85:	test   ah,bl
  40df87:	push   ss
  40df88:	je     0x40df30
  40df8a:	sub    ecx,DWORD PTR [ebx]
  40df8c:	test   al,0xd1
  40df8e:	mov    dh,0x7
  40df90:	or     edx,esp
  40df92:	outs   dx,DWORD PTR ds:[esi]
  40df93:	sar    DWORD PTR [edx-0x27],cl
  40df96:	jns    0x40df83
  40df98:	test   al,0x1d
  40df9a:	adc    ebp,DWORD PTR [ebx]
  40df9c:	xchg   ebp,eax
  40df9d:	fsubp  st(2),st
  40df9f:	rol    BYTE PTR [eax-0x71],cl
  40dfa2:	fnstsw WORD PTR [edx]
  40dfa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa5:	dec    edi
  40dfa6:	sbb    DWORD PTR [ebx-0x2dcc4bab],ecx
  40dfac:	shl    eax,0x1e
  40dfaf:	mov    ax,dx
  40dfb2:	or     ax,cx
  40dfb5:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfb8:	cmp    WORD PTR [ecx],ax
  40dfbb:	je     0x40eb64
  40dfc1:	mov    eax,DWORD PTR [ebp+0x14]
  40dfc4:	sub    DWORD PTR [ebp-0x4],eax
  40dfc7:	mov    eax,DWORD PTR [esi]
  40dfc9:	mov    ecx,DWORD PTR [esi+0x4]
  40dfcc:	mov    ecx,eax
  40dfce:	jmp    0x40e558
  40dfd3:	push   ebx
  40dfd4:	cli    
  40dfd5:	test   dh,ah
  40dfd7:	fs pop eax
  40dfd9:	pop    ecx
  40dfda:	jb     0x40df93
  40dfdc:	shr    DWORD PTR [esi+ebp*4+0x6e906792],1
  40dfe3:	sub    ch,BYTE PTR [eax+0x43d1616]
  40dfe9:	push   ss
  40dfea:	push   ss
  40dfeb:	inc    ebx
  40dfec:	push   ds
  40dfed:	inc    eax
  40dfee:	rcl    BYTE PTR ss:[ecx+0x50],cl
  40dff2:	push   0x23ed3377
  40dff7:	jbe    0x40dfc6
  40dff9:	pop    ebp
  40dffa:	outs   dx,BYTE PTR ds:[esi]
  40dffb:	push   eax
  40dffc:	adc    BYTE PTR [edi-0x6d],ah
  40dfff:	cmp    eax,0x45e34d60
  40e004:	or     BYTE PTR [edi-0x4a],dl
  40e007:	pop    ecx
  40e008:	ret    
  40e009:	retf   
  40e00a:	pop    ecx
  40e00b:	mov    al,ds:0xc214c159
  40e010:	add    DWORD PTR [esp+ecx*2+0x7d23c525],0xffffff9e
  40e018:	(bad)  
  40e019:	jge    0x40e081
  40e01b:	icebp  
  40e01c:	stc    
  40e01d:	inc    esi
  40e01e:	enter  0x8f9a,0x1
  40e022:	imul   esp,DWORD PTR [eax-0x6e],0xc5e14c36
  40e029:	mov    edi,0xa3a048a3
  40e02e:	pop    ss
  40e02f:	int3   
  40e030:	cmc    
  40e031:	es dec esp
  40e033:	and    al,0x9
  40e035:	mov    bh,BYTE PTR [edx+0x53]
  40e038:	jecxz  0x40e0a0
  40e03a:	fidivr WORD PTR [ebx]
  40e03c:	cmp    cl,bh
  40e03e:	xor    cl,al
  40e040:	pop    edx
  40e041:	add    DWORD PTR ds:0xb641f429,eax
  40e047:	xchg   DWORD PTR [esi+0xb],esp
  40e04a:	push   ebx
  40e04b:	mov    al,0xbf
  40e04d:	lods   eax,DWORD PTR ds:[esi]
  40e04e:	sbb    esp,DWORD PTR [esi-0x2d]
  40e051:	outs   dx,BYTE PTR ds:[esi]
  40e052:	mov    edx,0xcf4da5c5
  40e057:	xor    BYTE PTR [esi+0x5b],ah
  40e05a:	lods   al,BYTE PTR ds:[esi]
  40e05b:	dec    esi
  40e05c:	rep outs dx,DWORD PTR ds:[esi]
  40e05e:	add    BYTE PTR [esi+edi*2],cl
  40e061:	pop    edi
  40e062:	push   cs
  40e063:	dec    edi
  40e064:	lods   al,BYTE PTR ds:[esi]
  40e065:	sbb    DWORD PTR [eax],edx
  40e067:	mov    al,0xbb
  40e069:	sub    al,0x1e
  40e06b:	cdq    
  40e06c:	ret    
  40e06d:	xor    eax,0xd5a7e34d
  40e072:	jbe    0x40e09a
  40e074:	shl    bh,1
  40e076:	imul   eax,DWORD PTR [esi-0x4b],0xdb24763c
  40e07d:	cs mov ebx,0x8e599f48
  40e083:	adc    DWORD PTR cs:[edi+0x464e736f],ebp
  40e08a:	in     eax,0xa0
  40e08c:	inc    ebx
  40e08d:	ja     0x40e0de
  40e08f:	shl    bh,cl
  40e091:	outs   dx,BYTE PTR ds:[esi]
  40e092:	inc    ecx
  40e093:	jl     0x40e06b
  40e095:	call   DWORD PTR [ecx+ebx*1]
  40e098:	and    al,BYTE PTR [eax]
  40e09a:	sub    eax,0x24ee3699
  40e09f:	loopne 0x40e028
  40e0a1:	dec    eax
  40e0a2:	pop    ebp
  40e0a3:	mov    ah,0xd8
  40e0a5:	sub    dl,BYTE PTR [edx+0x64128829]
  40e0ab:	das    
  40e0ac:	ficomp WORD PTR [eax+0x7e]
  40e0af:	pop    edi
  40e0b0:	pop    ss
  40e0b1:	retf   0xab13
  40e0b4:	xchg   edx,eax
  40e0b5:	test   eax,0xaf8a537f
  40e0ba:	push   ds
  40e0bb:	jmp    0xa93d0acd
  40e0c0:	xor    bl,BYTE PTR [edx-0x1093ab66]
  40e0c6:	loopne 0x40e0a0
  40e0c8:	and    DWORD PTR [esi+0x7529d8d4],esi
  40e0ce:	sbb    ecx,eax
  40e0d0:	or     al,0x2b
  40e0d2:	mov    edi,0x6582e8c7
  40e0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d8:	shl    BYTE PTR ds:0xe150d8e7,1
  40e0de:	ins    BYTE PTR es:[edi],dx
  40e0df:	jb     0x40e08d
  40e0e1:	sbb    bl,cl
  40e0e3:	inc    ebp
  40e0e4:	in     eax,0x2a
  40e0e6:	sub    dl,BYTE PTR [ebp+0x513dd5ab]
  40e0ec:	pop    ebp
  40e0ed:	sub    esp,ebp
  40e0ef:	mov    eax,ds:0x8d699688
  40e0f4:	lods   al,BYTE PTR ds:[esi]
  40e0f5:	push   edi
  40e0f6:	xchg   ecx,eax
  40e0f7:	leave  
  40e0f8:	cmp    bh,bl
  40e0fa:	shl    BYTE PTR [esi-0x34df3c46],1
  40e100:	jg     0x40e0fb
  40e102:	sub    DWORD PTR [ebp+0x1cd939f9],ebp
  40e108:	mov    edi,0x29dc4145
  40e10d:	(bad)  
  40e10e:	push   edi
  40e10f:	repz sub al,0xb4
  40e112:	shl    DWORD PTR ds:0xb8f3964,cl
  40e118:	sbb    edx,esp
  40e11a:	jno    0x40e0d4
  40e11c:	mov    esi,0x1a29903f
  40e121:	outs   dx,DWORD PTR ds:[esi]
  40e122:	adc    al,0x96
  40e124:	xchg   BYTE PTR [ebx-0x3b],cl
  40e127:	fwait
  40e128:	(bad)  
  40e129:	adc    cl,BYTE PTR [ebx]
  40e12b:	(bad)  
  40e12c:	mov    ch,0xc2
  40e12e:	inc    edx
  40e12f:	xchg   ebx,eax
  40e130:	push   esi
  40e131:	xchg   eax,ecx
  40e133:	ins    DWORD PTR es:[edi],dx
  40e134:	in     eax,dx
  40e135:	or     cl,ah
  40e137:	mov    edx,0x71329e9a
  40e13c:	or     esp,esp
  40e13e:	js     0x40e197
  40e140:	pushf  
  40e141:	mov    esi,0x35d540d0
  40e146:	bound  ebx,QWORD PTR [esi-0x74]
  40e149:	sbb    eax,0x79da6278
  40e14e:	mov    esi,DWORD PTR [edi+0x7b97f227]
  40e154:	xchg   ecx,esi
  40e156:	fcmove st,st(1)
  40e158:	dec    esi
  40e159:	pop    DWORD PTR [ecx]
  40e15b:	cmp    edi,edx
  40e15d:	pop    edx
  40e15e:	call   0xae13266b
  40e163:	xchg   ebx,eax
  40e164:	mov    esp,edx
  40e166:	add    eax,0xc904cd19
  40e16b:	hlt    
  40e16c:	cdq    
  40e16d:	or     eax,0xd7bcdf5c
  40e172:	xchg   DWORD PTR [ebx+0x116ebf4],edi
  40e178:	sbb    DWORD PTR [edx],ebx
  40e17a:	call   0x31cfccd8
  40e17f:	pop    ss
  40e180:	jb     0x40e1c6
  40e182:	push   edi
  40e183:	sbb    eax,0xc504fe80
  40e188:	push   edi
  40e189:	adc    eax,0x91880ab0
  40e18e:	xchg   esi,eax
  40e18f:	mov    dl,0x5
  40e191:	fneni(8087 only) 
  40e193:	in     eax,0x41
  40e195:	test   DWORD PTR [edx-0x7ca3727],eax
  40e19b:	or     ebp,DWORD PTR [esp+eiz*2]
  40e19e:	jle    0x40e127
  40e1a0:	sub    eax,0xfb6602f
  40e1a5:	les    eax,FWORD PTR [ecx-0x6870483a]
  40e1ab:	fxch   st(5)
  40e1ad:	push   edi
  40e1ae:	add    BYTE PTR [eax-0x2f],cl
  40e1b1:	adc    BYTE PTR [esi+0x51],dh
  40e1b4:	ins    BYTE PTR es:[edi],dx
  40e1b5:	pop    ss
  40e1b6:	lahf   
  40e1b7:	fdivr  DWORD PTR [ecx+0x1399d30c]
  40e1bd:	push   eax
  40e1be:	mov    edi,0x490fb9d3
  40e1c3:	psllq  mm7,QWORD PTR [ebx-0x5e2c387d]
  40e1ca:	pop    edx
  40e1cb:	xchg   edx,eax
  40e1cc:	xchg   ebx,eax
  40e1cd:	gs test al,0x26
  40e1d0:	dec    esp
  40e1d1:	popa   
  40e1d2:	dec    eax
  40e1d3:	push   ebp
  40e1d4:	das    
  40e1d5:	outs   dx,BYTE PTR ds:[esi]
  40e1d6:	jp     0x40e1a6
  40e1d8:	cmp    bl,dh
  40e1da:	push   edx
  40e1db:	adc    esi,DWORD PTR [ecx+0x3b]
  40e1de:	leave  
  40e1df:	(bad)  
  40e1e0:	aad    0xf1
  40e1e2:	ins    DWORD PTR es:[edi],dx
  40e1e3:	push   edi
  40e1e4:	outs   dx,DWORD PTR ds:[esi]
  40e1e5:	fdivr  QWORD PTR [eax]
  40e1e7:	add    al,dl
  40e1e9:	loop   0x40e199
  40e1eb:	jo     0x40e24a
  40e1ed:	mov    ebp,0x18565683
  40e1f2:	and    eax,0x67c514c8
  40e1f7:	fcomi  st,st(4)
  40e1f9:	mov    bl,0x6e
  40e1fb:	jmp    0x40e1cd
  40e1fd:	les    edi,FWORD PTR [edx-0x18fab10d]
  40e203:	enter  0x4d04,0x74
  40e207:	jmp    0x40e26b
  40e209:	ins    BYTE PTR es:[edi],dx
  40e20a:	adc    eax,0x33a8789c
  40e20f:	jnp    0x40e254
  40e211:	outs   dx,BYTE PTR ds:[esi]
  40e212:	test   al,0x57
  40e214:	add    eax,0xefe1ca7d
  40e219:	xchg   esi,eax
  40e21a:	xchg   ecx,eax
  40e21b:	cmp    bl,BYTE PTR [ebp+0x6a]
  40e21e:	adc    al,0x2c
  40e220:	jecxz  0x40e1db
  40e222:	(bad)  
  40e223:	mov    ecx,0x474df358
  40e228:	xor    DWORD PTR [ecx+0xb],ebp
  40e22b:	push   ss
  40e22c:	mov    ch,0xaf
  40e22e:	jl     0x40e27f
  40e230:	scas   eax,DWORD PTR es:[edi]
  40e231:	retf   
  40e232:	mov    dl,BYTE PTR [edx-0x70]
  40e235:	xor    cl,BYTE PTR [ecx+0x1003fa9]
  40e23b:	pop    ebp
  40e23c:	push   ecx
  40e23d:	mov    bh,BYTE PTR [esi-0x2b681d39]
  40e243:	outs   dx,DWORD PTR ds:[esi]
  40e244:	hlt    
  40e245:	leave  
  40e246:	or     BYTE PTR [ebx-0x31],0x11
  40e24a:	cli    
  40e24b:	mov    esp,0xd6195a39
  40e250:	in     eax,dx
  40e251:	sti    
  40e252:	push   0xffffff8d
  40e254:	ins    DWORD PTR es:[edi],dx
  40e255:	xor    eax,0xbf397427
  40e25a:	test   esp,0x21c6d048
  40e260:	cli    
  40e261:	cmp    al,0xde
  40e263:	xor    BYTE PTR [edx-0x7bde672f],ch
  40e269:	adc    al,0x1b
  40e26b:	stos   BYTE PTR es:[edi],al
  40e26c:	xor    esi,edi
  40e26e:	out    0x32,al
  40e270:	sahf   
  40e271:	cmp    DWORD PTR [ebp-0x73],0x49
  40e275:	hlt    
  40e276:	pusha  
  40e277:	test   DWORD PTR [edi],edi
  40e279:	adc    eax,0x933cf99a
  40e27e:	data16 fcmovu st,st(6)
  40e281:	loope  0x40e2b5
  40e283:	jb     0x40e2cd
  40e285:	push   0x61883e5d
  40e28a:	cmp    al,BYTE PTR [edx+0x21]
  40e28d:	dec    ecx
  40e28e:	mov    bh,0x10
  40e290:	arpl   WORD PTR [ebx],cx
  40e292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e293:	stos   DWORD PTR es:[edi],eax
  40e294:	add    al,0x53
  40e296:	dec    ebp
  40e297:	dec    edi
  40e298:	lock jno 0x40e2c6
  40e29b:	push   ebx
  40e29c:	ins    BYTE PTR es:[edi],dx
  40e29d:	mov    esp,0xaa10d0ab
  40e2a2:	dec    esp
  40e2a3:	in     eax,0x62
  40e2a5:	sti    
  40e2a6:	add    DWORD PTR [esp+ecx*8-0x50],esp
  40e2aa:	jle    0x40e310
  40e2ac:	cs cld 
  40e2ae:	out    0xf8,al
  40e2b0:	int    0x61
  40e2b2:	inc    ebx
  40e2b3:	lds    esi,FWORD PTR [esi+0x3]
  40e2b6:	cmc    
  40e2b7:	cmp    al,0x5e
  40e2b9:	ret    
  40e2ba:	mov    eax,ds:0x67089241
  40e2bf:	sub    dl,BYTE PTR [ebp+0x70]
  40e2c2:	mov    ah,0x34
  40e2c4:	push   esp
  40e2c5:	xor    eax,0x32a25315
  40e2cb:	cli    
  40e2cc:	cmp    edx,DWORD PTR [ebx-0x1899060e]
  40e2d2:	jmp    0xbbdb:0xff3daeb2
  40e2d9:	dec    ecx
  40e2da:	lock popfw 
  40e2dd:	jge    0x40e285
  40e2df:	retf   0x2e3f
  40e2e2:	ja     0x40e325
  40e2e4:	call   0x3c3e9a56
  40e2e9:	pop    ds
  40e2ea:	(bad)  
  40e2eb:	dec    esp
  40e2ec:	bound  eax,QWORD PTR [edi]
  40e2ee:	jne    0x40e2c1
  40e2f0:	sbb    eax,0x47708efd
  40e2f5:	std    
  40e2f6:	fst    DWORD PTR [eax+edx*2-0x36]
  40e2fa:	and    eax,0x9a2b1e66
  40e2ff:	iret   
  40e300:	lock test BYTE PTR [ebp-0x7f106e9],dh
  40e307:	fmul   DWORD PTR [esi-0x14]
  40e30a:	arpl   bx,ax
  40e30c:	retf   
  40e30d:	cmp    eax,0xffd8c82b
  40e312:	add    ecx,edi
  40e314:	jp     0x40e33f
  40e316:	jle    0x40e321
  40e318:	mov    edx,0xd9e72cac
  40e31d:	shl    DWORD PTR ds:0xdf40b73b,0x99
  40e324:	mov    dh,0xe8
  40e326:	jae    0x40e351
  40e328:	daa    
  40e329:	shl    BYTE PTR [edi+0x18],0x3a
  40e32d:	xor    DWORD PTR [edi],ebx
  40e32f:	mov    eax,0xb40ddfa6
  40e334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e335:	addr16 inc eax
  40e337:	sbb    ebp,edx
  40e339:	stos   DWORD PTR es:[edi],eax
  40e33a:	sbb    al,0x65
  40e33c:	sbb    BYTE PTR [ebx+0x12],bl
  40e33f:	jo     0x40e3b1
  40e341:	sbb    BYTE PTR ds:0xc3f56615,dl
  40e347:	bound  esi,QWORD PTR [eax]
  40e349:	cmp    BYTE PTR [edx+0x73e21cf4],cl
  40e34f:	adc    ecx,edi
  40e351:	inc    ebx
  40e352:	pop    esp
  40e353:	cs and ah,al
  40e356:	mov    ds:0x7a92aa46,eax
  40e35b:	mov    ebx,0x65728bb2
  40e360:	xor    BYTE PTR [ebx],dh
  40e362:	or     bh,BYTE PTR [esi]
  40e364:	daa    
  40e365:	xor    dh,bh
  40e367:	arpl   WORD PTR [esi+0x6a67bd9f],bx
  40e36d:	les    esp,FWORD PTR [ebp-0x5]
  40e370:	fmul   QWORD PTR [edi-0x3d]
  40e373:	push   0x44
  40e375:	mov    bh,0xf5
  40e377:	inc    edi
  40e378:	mov    cs,WORD PTR [eax-0x7a0c85ac]
  40e37e:	(bad)  
  40e37f:	(bad)  
  40e380:	rcr    DWORD PTR [eax+0x7003fcc7],0x32
  40e387:	xchg   al,bl
  40e389:	and    dl,BYTE PTR [esi]
  40e38b:	lods   al,BYTE PTR ds:[esi]
  40e38c:	jg     0x40e401
  40e38e:	xlat   BYTE PTR ds:[ebx]
  40e38f:	pusha  
  40e390:	xchg   esp,eax
  40e391:	cmc    
  40e392:	xchg   esi,eax
  40e393:	jbe    0x40e40f
  40e395:	sub    al,0xe8
  40e397:	imul   eax,DWORD PTR [ebx+0x51049a0e],0xa5ab6f06
  40e3a1:	sbb    BYTE PTR [ecx+eax*1],ch
  40e3a4:	sti    
  40e3a5:	jo     0x40e3b6
  40e3a7:	pop    ebp
  40e3a8:	or     al,0x16
  40e3aa:	into   
  40e3ab:	jp     0x40e411
  40e3ad:	sub    eax,esi
  40e3af:	enter  0x9671,0x4
  40e3b3:	je     0x40e37d
  40e3b5:	inc    edx
  40e3b6:	shr    DWORD PTR [ebx],1
  40e3b8:	dec    ebx
  40e3b9:	xor    ch,BYTE PTR [ebx+0x22]
  40e3bc:	cwde   
  40e3bd:	(bad)  
  40e3be:	push   edx
  40e3c0:	pushf  
  40e3c1:	jg     0x40e3dc
  40e3c3:	dec    ecx
  40e3c4:	xchg   edi,eax
  40e3c5:	retf   0x2872
  40e3c8:	adc    al,0xb0
  40e3ca:	call   0x807c:0xd2f5c0a4
  40e3d1:	ins    BYTE PTR es:[edi],dx
  40e3d2:	sub    ebx,DWORD PTR [ebx+0x20]
  40e3d5:	in     al,dx
  40e3d6:	xor    DWORD PTR [edi+0xd26b6df],esi
  40e3dc:	cdq    
  40e3dd:	outs   dx,BYTE PTR ds:[esi]
  40e3de:	mov    bl,0x9e
  40e3e0:	push   ebp
  40e3e1:	jmp    0x4421:0xd0400e79
  40e3e8:	sti    
  40e3e9:	mov    al,0x6c
  40e3eb:	jecxz  0x40e3d3
  40e3ed:	sbb    eax,0x52f78b83
  40e3f2:	in     al,0x80
  40e3f4:	xor    eax,0x53749b2e
  40e3f9:	in     eax,0x64
  40e3fb:	or     eax,DWORD PTR ds:0xdf26c056
  40e401:	leave  
  40e402:	(bad)  [ecx-0x72]
  40e405:	sub    BYTE PTR [ecx-0x6],dh
  40e408:	mov    WORD PTR [ecx],gs
  40e40a:	(bad)  
  40e40b:	jle    0x40e46a
  40e40d:	daa    
  40e40e:	mov    eax,ebx
  40e410:	xor    BYTE PTR [ebx+0x6d1569ba],0xcd
  40e417:	aam    0x51
  40e419:	fdivr  DWORD PTR es:[ebx+0x72]
  40e41d:	sahf   
  40e41e:	cmp    al,bl
  40e420:	stc    
  40e421:	ret    
  40e422:	xor    al,0x68
  40e424:	or     dh,BYTE PTR [eax+0x53]
  40e427:	(bad)  
  40e428:	retf   0x1539
  40e42b:	and    eax,0x41989089
  40e430:	es push cs
  40e432:	push   cs
  40e433:	int3   
  40e434:	jmp    FWORD PTR [ebp+0x1d12b68c]
  40e43a:	pop    edi
  40e43b:	pop    eax
  40e43c:	pushf  
  40e43d:	in     al,dx
  40e43e:	or     esi,ecx
  40e440:	sti    
  40e441:	lds    ebp,FWORD PTR [eax+0x77]
  40e444:	out    0x6e,eax
  40e446:	sbb    ah,al
  40e448:	push   0x4c
  40e44a:	push   ebx
  40e44b:	inc    ebp
  40e44c:	cmp    al,0x2f
  40e44e:	fnstsw WORD PTR [ecx]
  40e450:	js     0x40e42c
  40e452:	or     eax,0x1d7bc900
  40e457:	jne    0x40e4b7
  40e459:	push   eax
  40e45a:	(bad)  [esi+edx*2]
  40e45d:	sub    eax,0x964af62a
  40e462:	push   edi
  40e463:	(bad)  
  40e464:	int    0x2d
  40e466:	pop    ebx
  40e467:	or     DWORD PTR [edi+eiz*1],edx
  40e46a:	out    0x0,eax
  40e46c:	rcl    DWORD PTR [ecx-0x18],0x36
  40e470:	loope  0x40e496
  40e472:	je     0x40e3f7
  40e474:	push   esi
  40e475:	test   DWORD PTR [eax+0x10465c6e],eax
  40e47b:	add    eax,0x4567e648
  40e480:	push   ecx
  40e481:	mov    WORD PTR [edx-0x18],fs
  40e484:	fiadd  DWORD PTR [ebx]
  40e486:	jmp    0x40e44a
  40e488:	sub    ebp,eax
  40e48a:	push   eax
  40e48b:	xor    eax,0x8e23c1ab
  40e490:	jmp    0x5979:0x630cc2d
  40e497:	dec    edx
  40e498:	xchg   edx,eax
  40e499:	fwait
  40e49a:	not    DWORD PTR [esi+0x3b6c795d]
  40e4a0:	xchg   DWORD PTR [edi+0x3e],esi
  40e4a3:	push   edx
  40e4a4:	push   esp
  40e4a5:	push   esi
  40e4a6:	mov    DWORD PTR ds:0x6af69cfe,ebp
  40e4ac:	pop    eax
  40e4ad:	(bad)  
  40e4ae:	mov    cl,0x3b
  40e4b0:	pop    edi
  40e4b1:	or     al,0x70
  40e4b3:	shl    esi,1
  40e4b5:	mov    BYTE PTR [ecx-0x7d],bl
  40e4b8:	sbb    BYTE PTR [ebx],ah
  40e4ba:	mov    cl,0xc4
  40e4bc:	shl    eax,0xa8
  40e4bf:	loop   0x40e4b7
  40e4c1:	in     al,dx
  40e4c2:	jns    0x40e511
  40e4c4:	cmp    edi,DWORD PTR [edx-0x6]
  40e4c7:	iret   
  40e4c8:	xor    al,0x37
  40e4ca:	and    DWORD PTR [edi-0x26],ebp
  40e4cd:	xor    al,0x82
  40e4cf:	(bad)  
  40e4d0:	and    ebx,esi
  40e4d2:	pmulhuw mm5,QWORD PTR [ecx-0x729443ab]
  40e4d9:	add    ch,dl
  40e4db:	xchg   esi,eax
  40e4dc:	jmp    0x9029:0xe319189c
  40e4e3:	xor    cl,BYTE PTR [ecx]
  40e4e5:	inc    esp
  40e4e6:	rcl    ebx,0x28
  40e4e9:	xchg   esp,eax
  40e4ea:	cmp    al,0x27
  40e4ec:	fwait
  40e4ed:	sub    ebp,DWORD PTR [ebp-0x425832f9]
  40e4f3:	ror    BYTE PTR [eax+0x76b355f7],cl
  40e4f9:	or     bh,ah
  40e4fb:	rcl    DWORD PTR [ebx+0x4790f78e],0x48
  40e502:	loope  0x40e488
  40e504:	or     al,0xf7
  40e506:	dec    eax
  40e507:	in     eax,dx
  40e508:	mov    dl,bh
  40e50a:	jno    0x40e526
  40e50c:	jp     0x40e497
  40e50e:	int    0x38
  40e510:	jg     0x40e4dd
  40e512:	pushf  
  40e513:	sbb    bl,BYTE PTR [edx+0x3f]
  40e516:	mov    esp,0x76187678
  40e51b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51d:	adc    BYTE PTR [ebx+0x257f6129],0x52
  40e524:	cmovb  edi,DWORD PTR [eax]
  40e527:	jge    0x40e4a9
  40e529:	(bad)  
  40e52a:	xor    ah,cl
  40e52c:	mov    eax,0x25e79408
  40e531:	sbb    bh,BYTE PTR [ecx+0x4321ad66]
  40e537:	pop    eax
  40e538:	fldenv ds:0xf53e4d0c
  40e53e:	xor    BYTE PTR [ecx+0x41d03c4e],0x95
  40e545:	aas    
  40e546:	mov    ds:0xf8e8e53f,al
  40e54b:	cmp    eax,0x40c75d94
  40e550:	jmp    0x40e527
  40e552:	sub    BYTE PTR [ebp+0x3da41960],ch
  40e558:	shl    ecx,0x1e
  40e55b:	xor    ecx,0xc0000000
  40e561:	mov    DWORD PTR [ebp-0x64],ecx
  40e564:	mov    ecx,DWORD PTR [esi]
  40e566:	mov    edx,DWORD PTR [esi+0x4]
  40e569:	xor    edx,0x9c0a89d8
  40e56f:	xor    ecx,0xba699573
  40e575:	shrd   ecx,edx,0x2
  40e579:	shr    edx,0x2
  40e57c:	or     edx,DWORD PTR [ebp-0x64]
  40e57f:	xor    eax,eax
  40e581:	or     ecx,eax
  40e583:	jmp    0x40eb0d
  40e588:	sahf   
  40e589:	or     ah,al
  40e58b:	jp     0x40e525
  40e58d:	cmp    bl,BYTE PTR [eax]
  40e58f:	sub    DWORD PTR [ebx+0x4a],ebp
  40e592:	mov    WORD PTR [esi-0xa],gs
  40e595:	fcomp  st(0)
  40e597:	test   al,0x61
  40e599:	xchg   esp,eax
  40e59a:	push   ss
  40e59b:	push   ss
  40e59c:	cmp    eax,0x58161604
  40e5a1:	dec    edx
  40e5a2:	out    0x15,al
  40e5a4:	dec    esi
  40e5a5:	fwait
  40e5a6:	push   0x4a3cd550
  40e5ab:	popa   
  40e5ac:	stos   DWORD PTR es:[edi],eax
  40e5ad:	pop    ecx
  40e5ae:	loop   0x40e53f
  40e5b0:	cwde   
  40e5b1:	lahf   
  40e5b2:	mov    esp,0x82eaafff
  40e5b7:	xchg   esp,eax
  40e5b8:	cmp    bh,BYTE PTR [edi+0x59]
  40e5bb:	inc    edx
  40e5bc:	scas   eax,DWORD PTR es:[edi]
  40e5bd:	outs   dx,DWORD PTR ds:[esi]
  40e5be:	jge    0x40e630
  40e5c0:	mov    ds,esi
  40e5c2:	int3   
  40e5c3:	rcl    al,cl
  40e5c5:	sbb    al,0x2c
  40e5c7:	mov    ebp,0xbb9b25a9
  40e5cc:	or     bh,0x82
  40e5cf:	repnz les esi,FWORD PTR [eax-0x1c]
  40e5d3:	repnz lods al,BYTE PTR ds:[esi]
  40e5d5:	(bad)
  40e5d8:	lahf   
  40e5d9:	push   0x9ebea769
  40e5de:	aaa    
  40e5df:	(bad)  
  40e5e0:	jmp    0xdd75:0x14667234
  40e5e7:	fs loope 0x40e585
  40e5ea:	fwait
  40e5eb:	push   0x3a
  40e5ed:	jp     0x40e5eb
  40e5ef:	jg     0x40e64e
  40e5f1:	push   ebx
  40e5f2:	scas   al,BYTE PTR es:[edi]
  40e5f3:	or     al,0xac
  40e5f5:	sbb    cl,BYTE PTR [edi]
  40e5f7:	cmp    eax,0x6ca96841
  40e5fc:	fistp  WORD PTR [edi+eiz*1+0x3c]
  40e600:	mov    ah,0x94
  40e602:	push   es
  40e603:	imul   edi,DWORD PTR [esi-0x3e296319],0xa149c967
  40e60d:	jo     0x40e62b
  40e60f:	and    ebx,esi
  40e611:	je     0x40e5af
  40e613:	inc    ebp
  40e614:	shl    DWORD PTR [ecx],cl
  40e616:	aaa    
  40e617:	bound  ecx,QWORD PTR [edx]
  40e619:	push   0x3e4e4304
  40e61e:	test   al,0x3e
  40e620:	jne    0x40e5b3
  40e622:	sbb    DWORD PTR [edx],0x7b300abf
  40e628:	pop    ebp
  40e629:	jge    0x40e61d
  40e62b:	jbe    0x40e658
  40e62d:	(bad)  
  40e62e:	(bad)  
  40e62f:	das    
  40e630:	fistp  WORD PTR [ebx]
  40e632:	dec    edi
  40e633:	and    al,0x14
  40e635:	jns    0x40e67b
  40e637:	aam    0xfb
  40e639:	mov    eax,ds:0xaad7f73a
  40e63e:	out    0x83,al
  40e640:	sbb    DWORD PTR [ebx+0x5c],eax
  40e643:	dec    eax
  40e644:	test   DWORD PTR [edx+0x74],edi
  40e647:	(bad)  
  40e649:	mov    esp,0xad83e159
  40e64e:	xlat   BYTE PTR ds:[ebx]
  40e64f:	das    
  40e650:	and    al,0xa4
  40e652:	loop   0x40e6d0
  40e654:	ror    DWORD PTR [ebp+0x6a566f07],0xa
  40e65b:	mov    edi,0x4b970469
  40e660:	cmp    DWORD PTR [edi],0x64
  40e663:	cmp    eax,0x71f09ecc
  40e668:	cmovp  eax,esp
  40e66b:	pop    ss
  40e66c:	mov    ebp,0x59963217
  40e671:	imul   edi,DWORD PTR [ebx+ebx*2-0x61d3a05e],0xffffffcb
  40e679:	pop    ds
  40e67a:	pop    esp
  40e67b:	cdq    
  40e67c:	sbb    BYTE PTR [edi+eiz*2-0x6b],cl
  40e680:	fwait
  40e681:	sbb    al,0x61
  40e683:	(bad)  
  40e684:	jle    0x40e692
  40e686:	and    BYTE PTR [eax],bh
  40e688:	repnz lahf 
  40e68a:	jo     0x40e6ef
  40e68c:	mov    dh,BYTE PTR [eax+0x3442823a]
  40e692:	ret    0xd68c
  40e695:	jae    0x40e704
  40e697:	push   ecx
  40e698:	and    DWORD PTR [ecx+0x6cbe8cae],ebp
  40e69e:	inc    eax
  40e69f:	add    BYTE PTR [eax-0x2d],ch
  40e6a2:	lahf   
  40e6a3:	dec    edi
  40e6a4:	test   DWORD PTR [edx+ebp*1-0x56e14f55],eax
  40e6ab:	daa    
  40e6ac:	aas    
  40e6ad:	mov    ebp,0xba2ef17a
  40e6b2:	xor    ebx,0xffffffa2
  40e6b5:	mov    ecx,0x9ebaaa54
  40e6ba:	lea    esi,[ecx]
  40e6bc:	xlat   BYTE PTR ds:[ebx]
  40e6bd:	ficomp DWORD PTR [ebx-0x6]
  40e6c0:	xlat   BYTE PTR ds:[ebx]
  40e6c1:	int    0xcf
  40e6c3:	enter  0x8feb,0x69
  40e6c7:	cli    
  40e6c8:	hlt    
  40e6c9:	out    0x52,eax
  40e6cb:	sbb    DWORD PTR [esi],edi
  40e6cd:	in     al,0x4b
  40e6cf:	stos   BYTE PTR es:[edi],al
  40e6d0:	das    
  40e6d1:	iret   
  40e6d2:	gs jae 0x40e6a7
  40e6d5:	pop    esi
  40e6d6:	fadd   DWORD PTR [esi+0x601e9726]
  40e6dc:	sti    
  40e6dd:	xchg   edi,eax
  40e6de:	adc    BYTE PTR [edi-0x1ad7f1af],dl
  40e6e4:	adc    bh,BYTE PTR [esi]
  40e6e6:	daa    
  40e6e7:	imul   edx,DWORD PTR [esi-0x6afc4bd4],0x14cabf4f
  40e6f1:	xchg   ebp,eax
  40e6f2:	xor    eax,0x781767b
  40e6f7:	jmp    0x50fd4332
  40e6fc:	xor    ah,al
  40e6fe:	stos   DWORD PTR es:[edi],eax
  40e6ff:	push   ebx
  40e700:	jecxz  0x40e75a
  40e702:	add    edx,DWORD PTR [ecx+0x36]
  40e705:	ret    0x906e
  40e708:	mov    bx,WORD PTR [ebx+0x15]
  40e70c:	xchg   esp,eax
  40e70d:	scas   eax,DWORD PTR es:[edi]
  40e70e:	push   esp
  40e70f:	sub    DWORD PTR [ebx],esp
  40e711:	bound  edi,QWORD PTR [ebp+0x35a18eca]
  40e717:	clc    
  40e718:	aam    0xc6
  40e71a:	jmp    0x59c6b9ae
  40e71f:	int    0xc6
  40e721:	pop    es
  40e722:	jmp    0x8a9d:0x634e8bea
  40e729:	repz dec ecx
  40e72b:	mov    edx,0x7907a128
  40e730:	in     eax,0x28
  40e732:	push   0x57b5bd98
  40e737:	repnz (bad) 
  40e739:	in     al,0xe2
  40e73b:	mov    ds:0xd91a768b,al
  40e740:	sub    edi,DWORD PTR [esi+0x21]
  40e743:	inc    esi
  40e744:	and    al,0x6e
  40e746:	ficom  DWORD PTR [esi-0x7f]
  40e749:	mov    dh,0xaa
  40e74b:	std    
  40e74c:	test   eax,0x3a268625
  40e751:	daa    
  40e752:	jp     0x40e73a
  40e754:	pop    es
  40e755:	stos   BYTE PTR es:[edi],al
  40e756:	xchg   esi,eax
  40e757:	pop    eax
  40e758:	sbb    DWORD PTR [ebp-0x28],0xbc6e7e84
  40e75f:	pusha  
  40e760:	xchg   ebp,eax
  40e761:	aad    0x9c
  40e763:	dec    esp
  40e764:	xchg   ecx,eax
  40e765:	jmp    0xee93f606
  40e76a:	retf   0xa906
  40e76d:	jge    0x40e7b4
  40e76f:	(bad)  
  40e770:	mov    ebx,0xfe4bf157
  40e775:	cmp    BYTE PTR [ebx+eiz*1],0x8c
  40e779:	sub    DWORD PTR [ebx],0x9
  40e77c:	cdq    
  40e77d:	pop    ebx
  40e77e:	sub    BYTE PTR [ebx],cl
  40e780:	dec    ecx
  40e781:	jl     0x40e718
  40e783:	add    al,0x0
  40e785:	retf   0x836a
  40e788:	inc    esp
  40e789:	sti    
  40e78a:	jbe    0x40e70d
  40e78c:	lea    eax,[ecx-0x8]
  40e78f:	xchg   ebx,eax
  40e790:	gs push 0x931a3754
  40e796:	mov    ?,WORD PTR [edi+esi*1+0x2b]
  40e79a:	(bad)  
  40e79b:	test   BYTE PTR [ecx+esi*1+0x1a],ah
  40e79f:	cli    
  40e7a0:	sub    edi,DWORD PTR [eax+0x284d96d7]
  40e7a6:	mov    DWORD PTR [edx-0x1e829aaa],ebp
  40e7ac:	js     0x40e785
  40e7ae:	rcl    BYTE PTR [ecx+0x53],1
  40e7b1:	cmp    edx,ecx
  40e7b3:	rcl    ecx,1
  40e7b5:	mov    al,ds:0x859e8f33
  40e7ba:	sti    
  40e7bb:	adc    ebp,esi
  40e7bd:	dec    ebx
  40e7be:	je     0x40e824
  40e7c0:	xor    ecx,DWORD PTR [ecx-0x3a]
  40e7c3:	rol    dh,1
  40e7c5:	out    0x11,eax
  40e7c7:	mov    DWORD PTR [edx],esp
  40e7c9:	jg     0x40e7b8
  40e7cb:	in     al,0xa5
  40e7cd:	out    dx,al
  40e7ce:	out    0xd9,eax
  40e7d0:	cld    
  40e7d1:	adc    BYTE PTR [edi],dh
  40e7d3:	inc    eax
  40e7d4:	loope  0x40e79d
  40e7d6:	dec    edx
  40e7d7:	pusha  
  40e7d8:	cmp    edi,DWORD PTR [esi+0xa708898]
  40e7de:	push   esi
  40e7df:	test   al,0xf4
  40e7e1:	jp     0x40e809
  40e7e3:	out    0xcc,eax
  40e7e5:	ins    BYTE PTR es:[edi],dx
  40e7e6:	sbb    eax,0x924e8449
  40e7eb:	sbb    BYTE PTR [ebx],bh
  40e7ed:	popf   
  40e7ee:	js     0x40e770
  40e7f0:	jno    0x40e7c8
  40e7f2:	je     0x40e85f
  40e7f4:	mov    esi,0x8c30ae22
  40e7f9:	mov    DWORD PTR [edi],ebx
  40e7fb:	test   ecx,esp
  40e7fd:	call   0x761b96c6
  40e802:	pop    es
  40e803:	loope  0x40e7fd
  40e805:	mov    bl,0x3a
  40e807:	leave  
  40e808:	mov    eax,ds:0xa0786204
  40e80d:	xchg   esi,eax
  40e80e:	outs   dx,BYTE PTR ds:[esi]
  40e80f:	cmp    DWORD PTR [ecx],edi
  40e811:	fnsave [edi]
  40e813:	mov    ds:0xab5c97fc,al
  40e818:	ret    0x1e45
  40e81b:	push   0xd2d0eaca
  40e820:	add    BYTE PTR [esi+0x15],bl
  40e823:	jnp    0x40e882
  40e825:	mov    cl,bl
  40e827:	pusha  
  40e828:	cmp    BYTE PTR [esi],bl
  40e82a:	mul    BYTE PTR [eax-0x6a]
  40e82d:	(bad)  
  40e82e:	xor    DWORD PTR [edi+eiz*4+0x7b],ebx
  40e832:	mov    ds:0x5ef6ad15,eax
  40e837:	inc    esi
  40e838:	stos   DWORD PTR es:[edi],eax
  40e839:	sbb    ebp,DWORD PTR [ecx+0x23cc1a8e]
  40e83f:	cmp    DWORD PTR [edi+0x19],esi
  40e842:	xchg   esp,eax
  40e843:	xor    eax,DWORD PTR ds:0x37915da7
  40e849:	pop    edx
  40e84a:	push   esp
  40e84b:	xor    BYTE PTR [esi+0x5e338058],dl
  40e851:	sbb    dh,BYTE PTR [edi]
  40e853:	je     0x40e834
  40e855:	cs out dx,eax
  40e857:	sbb    al,0x28
  40e859:	dec    esi
  40e85a:	sbb    DWORD PTR [esi+0x2d],0x2e
  40e85e:	jb     0x40e8da
  40e860:	push   edx
  40e861:	ret    
  40e862:	inc    ebp
  40e863:	xor    BYTE PTR [ebx+0x21d5c371],bh
  40e869:	add    edi,edi
  40e86b:	mov    ah,0x9
  40e86d:	repnz or DWORD PTR [ebx],ebx
  40e870:	lds    eax,FWORD PTR [esi]
  40e872:	xlat   BYTE PTR ds:[ebx]
  40e873:	ds in  eax,dx
  40e875:	push   cs
  40e876:	push   es
  40e877:	in     al,0xa
  40e879:	cmp    eax,0x2120ecb4
  40e87e:	xchg   edx,eax
  40e87f:	push   ds
  40e880:	sbb    BYTE PTR [ebp-0x31],dl
  40e883:	fwait
  40e884:	mov    edx,0x64bdbce3
  40e889:	sub    eax,0xd9341104
  40e88e:	scas   al,BYTE PTR es:[edi]
  40e88f:	inc    eax
  40e890:	je     0x40e87b
  40e892:	jecxz  0x40e8b3
  40e894:	out    0xce,al
  40e896:	push   edx
  40e897:	mov    eax,0x4ca91b99
  40e89c:	or     esp,eax
  40e89e:	test   BYTE PTR [edx+esi*4-0x5b],0x3d
  40e8a3:	leave  
  40e8a4:	and    al,BYTE PTR fs:[ecx]
  40e8a7:	pop    ebp
  40e8a8:	push   ss
  40e8a9:	cs popf 
  40e8ab:	pop    ebp
  40e8ac:	test   DWORD PTR [esi],ebx
  40e8ae:	(bad)  
  40e8af:	cld    
  40e8b0:	cmp    edi,edx
  40e8b2:	push   0x5a30cac4
  40e8b7:	fwait
  40e8b8:	lahf   
  40e8b9:	aaa    
  40e8ba:	gs stc 
  40e8bc:	cmp    eax,0xd07dcee1
  40e8c1:	adc    eax,0x505217c2
  40e8c6:	pop    ebx
  40e8c7:	fadd   QWORD PTR [ecx]
  40e8c9:	mov    eax,ds:0xbdd8a5ea
  40e8ce:	adc    BYTE PTR [ebp+0x5b],0xb9
  40e8d2:	movzx  esi,dh
  40e8d5:	repnz sub eax,0x9eaa7e67
  40e8db:	cmp    eax,0x260e7d5c
  40e8e0:	pop    esi
  40e8e1:	dec    esp
  40e8e2:	xchg   esp,eax
  40e8e3:	xor    bl,BYTE PTR [edx-0xba6fa03]
  40e8e9:	inc    edi
  40e8ea:	call   0x836ee678
  40e8ef:	pop    esi
  40e8f0:	loopne 0x40e88e
  40e8f2:	or     esi,DWORD PTR [edi]
  40e8f4:	popa   
  40e8f5:	call   FWORD PTR [ebp-0x6a]
  40e8f8:	or     ecx,DWORD PTR [esp+edi*4+0xba4cbe4]
  40e8ff:	add    edi,DWORD PTR [esi+eiz*8-0x66858ca7]
  40e906:	adc    DWORD PTR [edx-0x780fd9bb],eax
  40e90c:	jo     0x40e956
  40e90e:	scas   al,BYTE PTR es:[edi]
  40e90f:	je     0x40e8fe
  40e911:	fistp  WORD PTR [ebx]
  40e913:	jns    0x40e895
  40e915:	add    bl,BYTE PTR [ebx-0x24836e00]
  40e91b:	cmp    esp,edi
  40e91d:	das    
  40e91e:	jns    0x40e943
  40e920:	arpl   cx,sp
  40e922:	inc    eax
  40e923:	fidivr WORD PTR [eax+0x14ebcbeb]
  40e929:	icebp  
  40e92a:	mov    al,ds:0x833865dd
  40e92f:	push   cs
  40e930:	push   ebp
  40e931:	jmp    0x3fe1237f
  40e936:	lock jecxz 0x40e9ab
  40e939:	xchg   BYTE PTR [esi+esi*2],ch
  40e93c:	mov    ebx,0x9f86864b
  40e941:	fist   DWORD PTR [eax-0x2e]
  40e944:	xchg   edx,eax
  40e945:	jg     0x40e965
  40e947:	pop    ebp
  40e948:	sahf   
  40e949:	jno    0x40e997
  40e94b:	outs   dx,BYTE PTR ds:[esi]
  40e94c:	iret   
  40e94d:	inc    eax
  40e94e:	sbb    bh,BYTE PTR [edx-0xaae6eef]
  40e954:	sbb    al,BYTE PTR [ebx]
  40e956:	inc    ecx
  40e957:	mov    esp,DWORD PTR [ebp-0x44]
  40e95a:	mov    ecx,0xa2da1a45
  40e95f:	call   0xea22:0x868bcd4f
  40e966:	add    dl,BYTE PTR [eax+0x7b]
  40e969:	lods   al,BYTE PTR ds:[esi]
  40e96a:	or     BYTE PTR [ebx-0x25],ah
  40e96d:	fdivr  DWORD PTR [ecx]
  40e96f:	dec    ebp
  40e970:	inc    edi
  40e971:	fild   QWORD PTR ds:0xbc80aad9
  40e977:	sbb    DWORD PTR [eax-0x62414fef],ecx
  40e97d:	dec    esi
  40e97e:	sub    edi,DWORD PTR [eax]
  40e980:	clc    
  40e981:	pop    es
  40e982:	aaa    
  40e983:	mov    cs,WORD PTR [eax-0x68638fe6]
  40e989:	daa    
  40e98a:	cmp    ecx,DWORD PTR [ebx-0x5b08f106]
  40e990:	mov    cl,0x68
  40e992:	mov    ds:0x45a52c8,al
  40e997:	mov    ebp,0x6807dc2f
  40e99c:	adc    al,0xfd
  40e99e:	fsubrp st(0),st
  40e9a0:	push   esp
  40e9a1:	dec    edx
  40e9a2:	and    bl,BYTE PTR [eax]
  40e9a4:	jb     0x40e96c
  40e9a6:	sub    al,0x70
  40e9a8:	jno    0x40e9e6
  40e9aa:	pop    ebp
  40e9ab:	les    ebx,FWORD PTR [esi]
  40e9ad:	ins    DWORD PTR es:[edi],dx
  40e9ae:	not    edi
  40e9b0:	and    bl,BYTE PTR [eax+0x38cb6184]
  40e9b6:	imul   esi,DWORD PTR [edi-0x6807dda5],0xaef2622f
  40e9c0:	cmp    dl,BYTE PTR gs:[esi-0x3d290b9]
  40e9c7:	(bad)  
  40e9c8:	addps  xmm4,XMMWORD PTR [ecx-0xa]
  40e9cc:	pushw  0x7c00
  40e9d0:	(bad)  
  40e9d2:	inc    esi
  40e9d3:	cmp    edi,ebx
  40e9d5:	(bad)  
  40e9d6:	ds into 
  40e9d8:	sbb    ecx,DWORD PTR [ecx]
  40e9da:	mov    BYTE PTR [esi],bl
  40e9dc:	add    BYTE PTR [edx+0x31],0x5d
  40e9e0:	and    bl,BYTE PTR [ecx+0x39]
  40e9e3:	imul   edx,DWORD PTR [ecx-0x5],0x4c0a6187
  40e9ea:	jmp    0x66572d10
  40e9ef:	xchg   esp,eax
  40e9f0:	jmp    0x40ea2b
  40e9f2:	pop    ecx
  40e9f3:	js     0x40ea09
  40e9f5:	(bad)  
  40e9f6:	cmc    
  40e9f7:	mov    al,ds:0xbdfd7a9
  40e9fc:	push   ss
  40e9fd:	xchg   ecx,eax
  40e9fe:	aad    0x77
  40ea00:	rol    BYTE PTR [ebp+ebp*4-0x76e61e5b],1
  40ea07:	mov    edi,0x90c0eed
  40ea0c:	push   ecx
  40ea0d:	inc    esp
  40ea0e:	mov    cl,dh
  40ea10:	or     esi,esi
  40ea12:	jns    0x40ea57
  40ea14:	add    ebp,DWORD PTR [edx]
  40ea16:	lahf   
  40ea17:	test   BYTE PTR [esi],0xbc
  40ea1a:	xor    eax,0x8f52963c
  40ea1f:	cmp    ebp,DWORD PTR [esi]
  40ea21:	mov    edi,0xa8d43e55
  40ea26:	out    dx,al
  40ea27:	and    BYTE PTR [ebx+edx*8-0x6b],ah
  40ea2b:	mov    dh,ah
  40ea2d:	jnp    0x40ea78
  40ea2f:	pop    ecx
  40ea30:	ror    BYTE PTR [edi],0x70
  40ea33:	sbb    al,0x28
  40ea35:	mov    ah,0x1d
  40ea37:	xor    eax,0xfd96fba7
  40ea3c:	push   eax
  40ea3d:	mov    ds:0x39a78b7d,eax
  40ea42:	dec    edi
  40ea43:	add    eax,0x3071a5dc
  40ea48:	sub    eax,0x59bb71d7
  40ea4d:	push   ds
  40ea4e:	fisubr WORD PTR [esi]
  40ea50:	adc    edx,DWORD PTR [edx+esi*1+0x36141447]
  40ea57:	jb     0x40eac6
  40ea59:	mov    ds:0x6ef8d3f5,eax
  40ea5e:	xchg   edx,eax
  40ea5f:	dec    esp
  40ea60:	sub    BYTE PTR [ebp-0x6a0f0688],dh
  40ea66:	push   ebp
  40ea67:	repnz or DWORD PTR [edx+0x52],ebx
  40ea6b:	xchg   ecx,eax
  40ea6c:	cdq    
  40ea6d:	ja     0x40ea06
  40ea6f:	(bad)  
  40ea70:	ficom  WORD PTR [edi+edi*4-0x33]
  40ea74:	dec    BYTE PTR [ecx+edi*8+0x3703bb6c]
  40ea7b:	add    DWORD PTR [eax+0x5b65b054],ebp
  40ea81:	loopne 0x40ea40
  40ea83:	mov    dh,0x9b
  40ea85:	sub    bl,dh
  40ea87:	dec    esi
  40ea88:	xchg   DWORD PTR [ebp-0x2d704768],ecx
  40ea8e:	sbb    eax,0xba29d2af
  40ea93:	bound  eax,QWORD PTR [esi-0x2d]
  40ea96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea98:	or     eax,0x2c36977f
  40ea9d:	dec    ecx
  40ea9e:	scas   eax,DWORD PTR es:[edi]
  40ea9f:	push   ebx
  40eaa0:	sbb    esp,DWORD PTR [ebx-0x229b1ea1]
  40eaa6:	xor    ch,BYTE PTR [ebp-0x3c3a3d0c]
  40eaac:	xor    ecx,DWORD PTR gs:[esi+0x52]
  40eab0:	stc    
  40eab1:	sar    edx,0xfc
  40eab4:	inc    ebx
  40eab5:	or     eax,0x4bf7a1e1
  40eaba:	cli    
  40eabb:	pusha  
  40eabc:	and    BYTE PTR [ebp+eax*1-0x16],0x60
  40eac1:	or     bh,cl
  40eac3:	cmp    eax,DWORD PTR [eax+edx*8-0x3c]
  40eac7:	mov    ah,0xcf
  40eac9:	add    al,0x38
  40eacb:	sbb    bh,BYTE PTR [esi+eax*2+0x2f8a02b8]
  40ead2:	sbb    edi,DWORD PTR [eax-0x5e284de6]
  40ead8:	daa    
  40ead9:	adc    edi,DWORD PTR [esi-0x33046879]
  40eadf:	sub    edi,DWORD PTR [edi]
  40eae1:	test   DWORD PTR [edx+eax*1+0x4e],eax
  40eae5:	jo     0x40eb65
  40eae7:	mov    esi,edi
  40eae9:	rcl    bh,0xe
  40eaec:	mov    edi,0x9463c001
  40eaf1:	push   esp
  40eaf2:	repz clc 
  40eaf4:	(bad)  
  40eaf5:	xchg   ebx,eax
  40eaf6:	push   cs
  40eaf7:	mov    esi,eax
  40eaf9:	pop    ebp
  40eafa:	add    al,0x69
  40eafc:	sti    
  40eafd:	icebp  
  40eafe:	mov    dl,0xcb
  40eb00:	mov    edx,0x2bd6fb3e
  40eb05:	jbe    0x40ead4
  40eb07:	xor    BYTE PTR [ebx-0x5b],dh
  40eb0a:	mov    dh,0xd2
  40eb0c:	inc    esi
  40eb0d:	mov    eax,DWORD PTR [ebx]
  40eb0f:	mov    DWORD PTR [ebp-0x2c],edx
  40eb12:	mov    edx,DWORD PTR [ebx+0x4]
  40eb15:	mov    edx,eax
  40eb17:	xor    eax,eax
  40eb19:	shl    edx,0x1e
  40eb1c:	xor    edx,0xc0000000
  40eb22:	mov    DWORD PTR [ebp-0x70],eax
  40eb25:	mov    eax,DWORD PTR [ebx]
  40eb27:	mov    DWORD PTR [ebp-0x6c],edx
  40eb2a:	mov    edx,DWORD PTR [ebx+0x4]
  40eb2d:	xor    eax,0xba699573
  40eb32:	xor    edx,0x9c0a89d8
  40eb38:	shrd   eax,edx,0x2
  40eb3c:	or     eax,DWORD PTR [ebp-0x70]
  40eb3f:	shr    edx,0x2
  40eb42:	mov    DWORD PTR [ebp-0x38],eax
  40eb45:	mov    eax,edx
  40eb47:	or     eax,DWORD PTR [ebp-0x6c]
  40eb4a:	mov    DWORD PTR [ebp-0x5c],edx
  40eb4d:	cmp    ecx,DWORD PTR [ebp-0x38]
  40eb50:	jne    0x40da02
  40eb56:	cmp    DWORD PTR [ebp-0x2c],eax
  40eb59:	je     0x41a17f
  40eb5f:	jmp    0x40da02
  40eb64:	mov    eax,DWORD PTR [esi]
  40eb66:	mov    ecx,DWORD PTR [esi+0x4]
  40eb69:	mov    ecx,eax
  40eb6b:	shl    ecx,0x1e
  40eb6e:	xor    ecx,0xc0000000
  40eb74:	mov    DWORD PTR [ebp+0x14],ecx
  40eb77:	mov    ecx,DWORD PTR [esi]
  40eb79:	mov    edx,DWORD PTR [esi+0x4]
  40eb7c:	xor    ecx,0xba699573
  40eb82:	xor    edx,0x9c0a89d8
  40eb88:	shrd   ecx,edx,0x2
  40eb8c:	xor    eax,eax
  40eb8e:	or     ecx,eax
  40eb90:	mov    eax,DWORD PTR [ebx]
  40eb92:	mov    DWORD PTR [ebp-0x68],ecx
  40eb95:	mov    ecx,DWORD PTR [ebx+0x4]
  40eb98:	jmp    0x40f122
  40eb9d:	and    eax,0x9542a757
  40eba2:	adc    bl,BYTE PTR [eax]
  40eba4:	xor    BYTE PTR [eax],bl
  40eba6:	mov    al,ds:0xf185a805
  40ebab:	ss mov ah,0x8e
  40ebae:	mov    dl,BYTE PTR [esi]
  40ebb0:	push   ss
  40ebb1:	cmp    eax,0x1161604
  40ebb6:	jo     0x40eb87
  40ebb8:	out    dx,al
  40ebb9:	sahf   
  40ebba:	arpl   di,bx
  40ebbc:	arpl   WORD PTR [esi+0x1dcf8396],bp
  40ebc2:	lahf   
  40ebc3:	add    edi,DWORD PTR [ecx]
  40ebc5:	ret    
  40ebc6:	jmp    DWORD PTR [eax-0x347b2f05]
  40ebcc:	out    dx,eax
  40ebcd:	scas   al,BYTE PTR es:[edi]
  40ebce:	loopne 0x40ebc1
  40ebd0:	ficomp WORD PTR [edx-0x683deb5a]
  40ebd6:	mov    al,BYTE PTR [eax-0x360dd816]
  40ebdc:	jno    0x40ebef
  40ebde:	into   
  40ebdf:	sbb    eax,DWORD PTR [ebx+0xb]
  40ebe2:	stos   DWORD PTR es:[edi],eax
  40ebe3:	sar    DWORD PTR [edx+edx*1+0x415fbf17],cl
  40ebea:	sub    ebp,ecx
  40ebec:	popf   
  40ebed:	(bad)  
  40ebee:	adc    al,0x6c
  40ebf0:	mov    ebp,DWORD PTR [ecx-0x6d565bff]
  40ebf6:	mov    WORD PTR [eax],cs
  40ebf8:	xchg   esp,eax
  40ebf9:	and    DWORD PTR [eax-0x18c89a96],eax
  40ebff:	cmp    dl,dh
  40ec01:	leave  
  40ec02:	shr    DWORD PTR [ebp+0x7a],1
  40ec05:	and    ebx,DWORD PTR [edx-0x44]
  40ec08:	jge    0x40ec7f
  40ec0a:	pop    ebx
  40ec0b:	test   BYTE PTR [eax],dl
  40ec0d:	jno    0x40ec43
  40ec0f:	mov    bl,0xf
  40ec11:	(bad)  
  40ec12:	loopne 0x40ebd1
  40ec14:	mov    ecx,0x281b9559
  40ec19:	pop    esi
  40ec1a:	or     al,BYTE PTR [eax+0x52]
  40ec1d:	and    al,cl
  40ec1f:	cvttpd2pi mm1,xmm3
  40ec23:	aam    0xb0
  40ec25:	mov    ds:0xeacb30a,al
  40ec2a:	push   0xffffff8c
  40ec2c:	mov    es,edx
  40ec2e:	ja     0x40ebc1
  40ec30:	retf   0xe5cc
  40ec33:	aaa    
  40ec34:	xor    dl,0xb3
  40ec37:	mov    bh,0xa0
  40ec39:	test   DWORD PTR [ecx-0x24],esp
  40ec3c:	and    al,0x25
  40ec3e:	add    BYTE PTR [edi-0x27],dh
  40ec41:	ficomp WORD PTR [edx+0x5b]
  40ec44:	dec    ebx
  40ec45:	inc    ebp
  40ec46:	add    DWORD PTR [edi-0x6e],esp
  40ec49:	imul   eax,DWORD PTR [ebp+0xb],0x6fe4c7de
  40ec50:	xchg   edi,eax
  40ec51:	mov    ds:0x2d03c0a9,eax
  40ec56:	fdivr  QWORD PTR [edi-0x74ec49d1]
  40ec5c:	retf   
  40ec5d:	iret   
  40ec5e:	mov    al,ds:0x1077ed62
  40ec63:	aaa    
  40ec64:	in     al,dx
  40ec65:	fld    DWORD PTR [edx]
  40ec67:	ds xchg edi,eax
  40ec69:	pop    ebx
  40ec6a:	adc    al,0xaf
  40ec6c:	cmp    BYTE PTR [esi-0x2b],0xac
  40ec70:	xor    DWORD PTR [ebp+0x69],edx
  40ec73:	and    al,0x2
  40ec75:	cmp    esi,ecx
  40ec77:	aas    
  40ec78:	mov    ah,dl
  40ec7a:	or     eax,0xaa2f874a
  40ec7f:	fidiv  WORD PTR ds:0xe2c45e18
  40ec85:	aam    0xc2
  40ec87:	(bad)  
  40ec88:	jb     0x40eca8
  40ec8a:	sahf   
  40ec8b:	retf   
  40ec8c:	sub    bh,BYTE PTR [eax-0x29f4c2cd]
  40ec92:	(bad)  
  40ec93:	xor    bh,BYTE PTR [edx]
  40ec95:	and    BYTE PTR [edi+0x17],al
  40ec98:	ret    
  40ec99:	stos   BYTE PTR es:[di],al
  40ec9b:	add    edx,DWORD PTR [esi-0x7a]
  40ec9e:	js     0x40ecb2
  40eca0:	(bad)  
  40eca1:	nop
  40eca2:	or     dl,BYTE PTR [eax+0x3a]
  40eca5:	cwde   
  40eca6:	mov    ebx,0xed432d3a
  40ecab:	mov    DWORD PTR [ebx+0x7b],esp
  40ecae:	inc    eax
  40ecaf:	dec    esp
  40ecb0:	nop
  40ecb1:	bound  esi,QWORD PTR [eax]
  40ecb3:	adc    ecx,DWORD PTR [esi]
  40ecb5:	test   DWORD PTR [edx+0x17],esp
  40ecb8:	stos   DWORD PTR es:[edi],eax
  40ecb9:	mov    esp,0x21ba6135
  40ecbe:	retf   0xd36b
  40ecc1:	dec    esp
  40ecc2:	(bad)  
  40ecc3:	fdivr  st(0),st
  40ecc5:	fsub   DWORD PTR [edi-0x1251561b]
  40eccb:	cs iret 
  40eccd:	das    
  40ecce:	iret   
  40eccf:	ret    0xe202
  40ecd2:	pop    ebx
  40ecd3:	ins    BYTE PTR es:[edi],dx
  40ecd4:	jns    0x40ed3d
  40ecd6:	ret    0x31a8
  40ecd9:	and    eax,0xad092833
  40ecde:	and    edx,eax
  40ece0:	sbb    DWORD PTR [esi+0x61],esp
  40ece3:	mov    esp,0x47b89692
  40ece8:	adc    BYTE PTR [ebp+ebx*8+0x15cafd2a],al
  40ecef:	mov    edx,0x23d370be
  40ecf4:	cs pop esp
  40ecf6:	push   ebp
  40ecf7:	out    dx,eax
  40ecf8:	and    al,0x33
  40ecfa:	xchg   esp,eax
  40ecfb:	jg     0x40ecb9
  40ecfd:	xor    eax,0x525c8548
  40ed02:	arpl   WORD PTR [edi],cx
  40ed04:	lea    edx,[edi+0x7]
  40ed07:	cld    
  40ed08:	xor    DWORD PTR [edi+0x5c],esp
  40ed0b:	ss into 
  40ed0d:	cli    
  40ed0e:	dec    ecx
  40ed0f:	dec    eax
  40ed10:	cmp    cl,BYTE PTR ds:0xbfac11f7
  40ed16:	gs push ss
  40ed18:	sbb    BYTE PTR [eax],0x47
  40ed1b:	fninit 
  40ed1d:	and    eax,0x27c64768
  40ed22:	xor    ch,dh
  40ed24:	test   BYTE PTR [ecx+0x3e],0xe6
  40ed28:	push   edx
  40ed29:	xchg   edi,eax
  40ed2a:	add    al,0xc7
  40ed2c:	sub    BYTE PTR [ebp-0x5af56157],bl
  40ed32:	pop    ebp
  40ed33:	aad    0xa6
  40ed35:	test   DWORD PTR [eax+0x4b2aaeef],ebp
  40ed3b:	loope  0x40ecdc
  40ed3d:	out    dx,al
  40ed3e:	cld    
  40ed3f:	inc    esi
  40ed40:	or     BYTE PTR ds:0x2744e4f9,dl
  40ed46:	add    eax,0xde5028cf
  40ed4b:	cmp    di,WORD PTR [eax+0x6d]
  40ed4f:	rcr    DWORD PTR [ecx-0x60],1
  40ed52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed53:	push   0xc71cb9df
  40ed58:	xchg   esp,eax
  40ed59:	fisubr DWORD PTR [esi-0x2ec1c3e0]
  40ed5f:	xchg   ecx,eax
  40ed60:	push   ecx
  40ed61:	dec    ebx
  40ed62:	repnz pop ebp
  40ed64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed65:	in     eax,0xd9
  40ed67:	cmp    BYTE PTR [ebx],ch
  40ed69:	aaa    
  40ed6a:	adc    al,0x25
  40ed6c:	add    cl,BYTE PTR [edx+0x2ca5587d]
  40ed72:	mov    edi,0x2d199b00
  40ed77:	xor    ax,0xbc03
  40ed7b:	adc    al,0x19
  40ed7d:	fistp  DWORD PTR [edi+0x198bfee4]
  40ed83:	jmp    0x40ed3b
  40ed85:	retf   
  40ed86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed87:	dec    esp
  40ed88:	fwait
  40ed89:	sub    bh,BYTE PTR [ebp-0x62]
  40ed8c:	dec    edx
  40ed8d:	mov    ebx,0x6e27fb16
  40ed92:	add    BYTE PTR [eax+0x6b068cf0],ah
  40ed98:	sub    bh,dl
  40ed9a:	ja     0x40ed5d
  40ed9c:	add    dl,BYTE PTR [edx]
  40ed9e:	cmp    BYTE PTR [esp+ebp*4-0xf2691cd],dl
  40eda5:	jns    0x40edbd
  40eda7:	inc    esp
  40eda8:	jo     0x40ed6d
  40edaa:	das    
  40edab:	inc    esp
  40edac:	mov    ebx,0xd74d7c3e
  40edb2:	mov    edx,0x1b266b76
  40edb7:	rol    BYTE PTR [eax-0x42],0x51
  40edbb:	out    0x19,al
  40edbd:	xchg   edi,eax
  40edbe:	mov    ds:0xc72c4b41,eax
  40edc3:	xchg   ecx,eax
  40edc4:	adc    ecx,edx
  40edc6:	stos   BYTE PTR es:[edi],al
  40edc7:	clc    
  40edc8:	out    dx,eax
  40edc9:	rcr    BYTE PTR [edx-0x3fe71561],cl
  40edcf:	push   esi
  40edd0:	pop    ss
  40edd1:	sub    ah,BYTE PTR [eax+0x66]
  40edd4:	add    dh,BYTE PTR [ecx]
  40edd6:	mov    ds:0x1ae4b6d1,al
  40eddb:	stos   DWORD PTR es:[edi],eax
  40eddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edde:	jb     0x40edda
  40ede0:	cmp    ebp,ebx
  40ede2:	jno    0x40ed8f
  40ede4:	jo     0x40edfa
  40ede6:	push   0xfffffffe
  40ede8:	ret    0x2382
  40edeb:	mov    DWORD PTR [ecx+0x67],edx
  40edee:	fild   WORD PTR [edx-0x2467081a]
  40edf4:	xor    ch,BYTE PTR [ebp-0x787ec0bc]
  40edfa:	outs   dx,DWORD PTR ds:[esi]
  40edfb:	pop    edi
  40edfc:	aaa    
  40edfd:	push   ebp
  40edfe:	aad    0x87
  40ee00:	clc    
  40ee01:	lahf   
  40ee02:	cmp    DWORD PTR [ebp-0x21],edi
  40ee05:	das    
  40ee06:	dec    ebp
  40ee07:	test   al,0x4e
  40ee09:	dec    esi
  40ee0a:	pop    esi
  40ee0b:	mov    ecx,0x885a5b54
  40ee10:	or     DWORD PTR [edx],ecx
  40ee12:	repz data16 test BYTE PTR ds:0x9b88b85e,bh
  40ee1a:	lods   al,BYTE PTR ds:[esi]
  40ee1b:	adc    bl,BYTE PTR [esp+0x2aa4745a]
  40ee22:	repnz imul edx,DWORD PTR [ebp+0x5f],0xf9d86a3a
  40ee2a:	test   DWORD PTR [esi-0x7e],edi
  40ee2d:	mov    ds:0x8d7918d5,eax
  40ee32:	mov    ?,WORD PTR [edi-0x6c9113ea]
  40ee38:	(bad)  
  40ee39:	sub    cl,BYTE PTR [ebp-0x1204b377]
  40ee3f:	jnp    0x40ee78
  40ee41:	cmovge eax,eax
  40ee44:	sub    ebx,DWORD PTR [ebx-0x9]
  40ee47:	fist   WORD PTR [ebx-0x678cf2f0]
  40ee4d:	cmp    ecx,DWORD PTR gs:[eax]
  40ee50:	lods   eax,DWORD PTR ds:[esi]
  40ee51:	in     eax,0xa8
  40ee53:	leave  
  40ee54:	mov    edx,0xbcc2df3
  40ee59:	mov    bl,0xa3
  40ee5b:	(bad)  
  40ee5c:	out    0xdd,al
  40ee5e:	in     eax,0x3
  40ee60:	pushf  
  40ee61:	imul   esp,DWORD PTR [eax],0xc65b99cd
  40ee67:	sbb    dh,BYTE PTR [edi+0x3f]
  40ee6a:	fistp  WORD PTR [eax]
  40ee6c:	cwde   
  40ee6d:	mov    WORD PTR [ecx+0x28],fs
  40ee70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee71:	lods   al,BYTE PTR ds:[esi]
  40ee72:	sub    al,0xa8
  40ee74:	bound  edi,QWORD PTR [eax-0x21487b79]
  40ee7a:	pop    ecx
  40ee7b:	imul   ebp,DWORD PTR [edi],0xd5afe1de
  40ee81:	cmp    esp,DWORD PTR [esi]
  40ee83:	mov    ecx,0x49017bf9
  40ee88:	in     al,dx
  40ee89:	mov    bh,0x9
  40ee8b:	mov    dh,0xb5
  40ee8d:	jo     0x40ee7d
  40ee8f:	cwde   
  40ee90:	nop
  40ee91:	ins    DWORD PTR es:[edi],dx
  40ee92:	and    esi,DWORD PTR [edi+0x3862eec5]
  40ee98:	or     ch,ah
  40ee9a:	dec    edi
  40ee9b:	pop    es
  40ee9c:	add    BYTE PTR es:[eax],bh
  40ee9f:	ror    DWORD PTR [edi+0x3b],0x61
  40eea3:	adc    eax,0xad36f3d2
  40eea8:	cmc    
  40eea9:	outs   dx,DWORD PTR ds:[esi]
  40eeaa:	push   cs
  40eeab:	aaa    
  40eeac:	loopne 0x40ee47
  40eeae:	mov    dh,0x75
  40eeb0:	push   ebx
  40eeb1:	ficomp WORD PTR [ebx-0x7e7029ba]
  40eeb7:	outs   dx,DWORD PTR ds:[esi]
  40eeb8:	sbb    eax,0xcb37f7db
  40eebd:	dec    ebx
  40eebe:	xchg   esp,eax
  40eebf:	xchg   BYTE PTR ds:0xe19750d7,bh
  40eec5:	inc    ebp
  40eec6:	movd   mm1,DWORD PTR [edx+ebx*2]
  40eeca:	cmp    ebx,DWORD PTR [ebp+0x3c]
  40eecd:	(bad)  [ebx]
  40eecf:	fs dec esp
  40eed1:	mov    bl,BYTE PTR [edi]
  40eed3:	addr16 mov bh,0x31
  40eed6:	rcr    DWORD PTR ds:0x3b08fb04,0x73
  40eedd:	dec    ecx
  40eede:	lahf   
  40eedf:	or     eax,DWORD PTR [edi]
  40eee1:	fstp   st(4)
  40eee3:	push   es
  40eee4:	daa    
  40eee5:	pop    esi
  40eee6:	fnsave [ebx+edx*8-0x6229d639]
  40eeed:	stc    
  40eeee:	neg    BYTE PTR [ecx-0x69]
  40eef1:	shl    cl,1
  40eef3:	jb     0x40ee97
  40eef5:	add    ecx,DWORD PTR [ebp+0x1c]
  40eef8:	clc    
  40eef9:	add    dh,ch
  40eefb:	xor    edx,DWORD PTR [ecx]
  40eefd:	addr16 fs dec esp
  40ef00:	jo     0x40eed4
  40ef02:	outs   dx,DWORD PTR ds:[esi]
  40ef03:	xor    ch,BYTE PTR fs:[ecx+eiz*8-0x6402b23f]
  40ef0b:	inc    esi
  40ef0c:	jmp    0x40ef49
  40ef0e:	mov    edi,0xc1c853fb
  40ef13:	add    al,0x83
  40ef15:	fimul  WORD PTR [ebx-0x5e3852a]
  40ef1b:	leave  
  40ef1c:	and    ebp,DWORD PTR [ecx+0x6d]
  40ef1f:	mov    dh,0x70
  40ef21:	fdiv   st(5),st
  40ef23:	out    dx,eax
  40ef24:	cli    
  40ef25:	out    dx,al
  40ef26:	aad    0x48
  40ef28:	mov    bl,BYTE PTR [ebx]
  40ef2a:	inc    eax
  40ef2b:	frstor [esi+ecx*8+0x16]
  40ef2f:	icebp  
  40ef30:	mov    ebx,DWORD PTR [eax]
  40ef32:	add    DWORD PTR [ecx+0x38],ecx
  40ef35:	sub    eax,0x9568783
  40ef3a:	push   edx
  40ef3b:	add    bh,BYTE PTR [edi]
  40ef3d:	ficomp DWORD PTR [eax+0x4]
  40ef41:	lea    ecx,ds:0x532f96dd
  40ef47:	aad    0xc2
  40ef49:	and    al,0x2e
  40ef4b:	pushf  
  40ef4c:	pop    esi
  40ef4d:	sbb    al,dh
  40ef4f:	adc    eax,0x5e0c151f
  40ef54:	test   eax,0xa92beb53
  40ef59:	sub    BYTE PTR [ebx],0x12
  40ef5c:	lods   eax,DWORD PTR ds:[esi]
  40ef5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef5e:	add    ebp,edx
  40ef60:	lods   eax,DWORD PTR ds:[esi]
  40ef61:	mov    bh,dh
  40ef63:	mov    esp,0xf42d3905
  40ef68:	in     al,0x64
  40ef6a:	repnz push edi
  40ef6c:	(bad)  
  40ef6d:	not    DWORD PTR [ebx]
  40ef6f:	xchg   edx,eax
  40ef70:	js     0x40ef6a
  40ef72:	xchg   esi,eax
  40ef73:	imul   edi,DWORD PTR [edx],0x23
  40ef76:	int3   
  40ef77:	les    eax,FWORD PTR [eax+eiz*4]
  40ef7a:	inc    esi
  40ef7b:	xchg   BYTE PTR [ebx+ecx*1],dl
  40ef7e:	pop    esp
  40ef7f:	add    edi,DWORD PTR [esi-0x6e]
  40ef82:	imul   eax,DWORD PTR [ebx+0x6561a77c],0x5b849e80
  40ef8c:	push   ebp
  40ef8d:	ret    0x6131
  40ef90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef91:	scas   al,BYTE PTR es:[edi]
  40ef92:	mov    BYTE PTR [eax],dl
  40ef94:	cmp    DWORD PTR [eax+0x3ff6cf87],esp
  40ef9a:	popf   
  40ef9b:	add    eax,0x6aec5695
  40efa0:	cmp    DWORD PTR [ebp-0x1e50faca],edi
  40efa6:	jne    0x40efa6
  40efa8:	seto   BYTE PTR [eax-0x2c4fb092]
  40efaf:	aad    0x7f
  40efb1:	jmp    0x40efde
  40efb3:	mov    WORD PTR [esi],fs
  40efb5:	outs   dx,DWORD PTR ds:[esi]
  40efb6:	and    esi,edi
  40efb8:	ds call 0xdd66ea93
  40efbe:	inc    esi
  40efbf:	jle    0x40ef9a
  40efc1:	shl    DWORD PTR [ecx-0xa],cl
  40efc4:	addr16 jb 0x40efaa
  40efc7:	jg     0x40efed
  40efc9:	jg     0x40ef84
  40efcb:	push   ds
  40efcc:	push   ecx
  40efcd:	mov    esp,0x8b981aaf
  40efd2:	mov    cl,0xdb
  40efd4:	and    dl,BYTE PTR [edi+0x6a7f0c48]
  40efda:	cmp    ebx,DWORD PTR [ecx]
  40efdc:	jecxz  0x40efc7
  40efde:	push   esp
  40efdf:	pushf  
  40efe0:	add    al,0xc0
  40efe2:	dec    esp
  40efe3:	sbb    ebp,DWORD PTR [edi+0x6b7ba801]
  40efe9:	or     ecx,0x9fc86b0a
  40efef:	out    0x78,eax
  40eff1:	stos   DWORD PTR es:[edi],eax
  40eff2:	fisub  WORD PTR [eax-0x54]
  40eff5:	xchg   ebx,eax
  40eff6:	lahf   
  40eff7:	fcmove st,st(7)
  40eff9:	mov    edi,0x81dc0b3a
  40effe:	mov    cl,BYTE PTR [esi+0x66]
  40f001:	mov    ecx,0xa1d3490e
  40f006:	xchg   esp,eax
  40f007:	xchg   DWORD PTR [edx],edi
  40f009:	std    
  40f00a:	retf   0xbe7e
  40f00d:	and    DWORD PTR [edx-0x3d],eax
  40f010:	call   0x281e2648
  40f015:	mov    ah,0x80
  40f017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f018:	and    eax,0x64bbb85
  40f01d:	jbe    0x40effb
  40f01f:	jmp    0x54fb5a9d
  40f024:	mov    ebp,0x203c6553
  40f029:	ficomp WORD PTR [eax]
  40f02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02c:	dec    eax
  40f02d:	lods   al,BYTE PTR ds:[esi]
  40f02e:	jae    0x40f0a2
  40f030:	(bad)  
  40f031:	sub    DWORD PTR [bx+si],esp
  40f034:	mov    ds:0x948985b3,eax
  40f039:	fsub   st,st(4)
  40f03b:	mov    eax,0x642a386f
  40f040:	add    eax,0x8671ba14
  40f045:	sbb    DWORD PTR [esi],eax
  40f047:	add    ch,BYTE PTR [ebx-0x6]
  40f04a:	adc    eax,0xba85fc3b
  40f04f:	stc    
  40f050:	cwde   
  40f051:	arpl   WORD PTR [edi],dx
  40f053:	inc    esi
  40f054:	or     BYTE PTR [esi+0x70],cl
  40f057:	ret    
  40f058:	test   al,0x1e
  40f05a:	add    al,0xd7
  40f05c:	jae    0x40f07e
  40f05e:	ss aam 0xb9
  40f061:	iret   
  40f062:	jae    0x40f0b1
  40f064:	adc    al,0xc6
  40f066:	jge    0x40eff0
  40f068:	out    dx,al
  40f069:	jp     0x40f078
  40f06b:	pop    esi
  40f06c:	enter  0x7e00,0x70
  40f070:	test   BYTE PTR [edx+ecx*8-0x4b],ah
  40f074:	fidivr DWORD PTR [ecx+0x78]
  40f077:	and    al,0x0
  40f079:	outs   dx,BYTE PTR ds:[esi]
  40f07a:	push   cs
  40f07b:	adc    bl,BYTE PTR [ebp+0x61ca43f4]
  40f081:	(bad)
  40f085:	addr16 mov ds:0xbc,eax
  40f089:	inc    ecx
  40f08a:	xchg   ecx,eax
  40f08b:	data16 arpl dx,dx
  40f08e:	sbb    bh,BYTE PTR [eax+0x24b5ff64]
  40f094:	push   eax
  40f095:	push   0x2d3fabea
  40f09a:	inc    ebx
  40f09b:	inc    edx
  40f09c:	jle    0x40f042
  40f09e:	dec    ecx
  40f09f:	daa    
  40f0a0:	xor    al,cl
  40f0a2:	push   ebp
  40f0a3:	or     esi,ecx
  40f0a5:	sahf   
  40f0a6:	lds    edi,FWORD PTR [edi]
  40f0a8:	cmp    edi,DWORD PTR [edi+0x31e4e30f]
  40f0ae:	inc    ebx
  40f0af:	cmc    
  40f0b0:	jp     0x40f057
  40f0b2:	jle    0x40f0e4
  40f0b4:	ins    BYTE PTR es:[edi],dx
  40f0b5:	test   DWORD PTR [ecx+0x15],ebp
  40f0b8:	stos   BYTE PTR es:[edi],al
  40f0b9:	inc    ebp
  40f0ba:	jbe    0x40f115
  40f0bc:	and    BYTE PTR [ebx+0x174bdd07],bl
  40f0c2:	cmp    DWORD PTR [ebx-0x6f],esp
  40f0c5:	xor    dl,ch
  40f0c7:	ret    
  40f0c8:	repnz lahf 
  40f0ca:	mov    al,0xde
  40f0cc:	push   esi
  40f0cd:	ficomp DWORD PTR [ebp-0x35]
  40f0d0:	jle    0x40f104
  40f0d2:	ja     0x40f114
  40f0d4:	mov    eax,0x6e4103e6
  40f0d9:	jno    0x40f05d
  40f0db:	inc    ebp
  40f0dc:	or     eax,0xd287bac4
  40f0e1:	add    DWORD PTR [eax-0x43],esi
  40f0e4:	xor    al,0x35
  40f0e6:	pop    ds
  40f0e7:	sub    BYTE PTR [edx+edi*1+0x3e12ddac],0xc3
  40f0ef:	out    0x7,eax
  40f0f1:	or     ebx,DWORD PTR [eax]
  40f0f3:	xor    esi,ebx
  40f0f5:	into   
  40f0f6:	int    0xdf
  40f0f8:	xor    eax,0xedb46f99
  40f0fd:	push   ebx
  40f0fe:	push   edx
  40f0ff:	push   0x16
  40f101:	xlat   BYTE PTR ds:[ebx]
  40f102:	scas   al,BYTE PTR es:[edi]
  40f103:	jnp    0x40f11b
  40f105:	cdq    
  40f106:	cmp    DWORD PTR [ecx-0x4aac5464],ebp
  40f10c:	add    al,0xf3
  40f10e:	sahf   
  40f10f:	mov    eax,0x3fbced9e
  40f114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f115:	(bad)  
  40f116:	pop    esi
  40f117:	and    DWORD PTR [edi],ecx
  40f119:	outs   dx,BYTE PTR ds:[esi]
  40f11a:	aam    0x37
  40f11c:	int    0xb
  40f11e:	std    
  40f11f:	xchg   DWORD PTR ds:0x33c88b79,ebp
  40f125:	rol    cl,0xea
  40f128:	add    cl,BYTE PTR [ebx]
  40f12a:	push   ebp
  40f12b:	adc    al,0x89
  40f12d:	inc    ebp
  40f12e:	adc    BYTE PTR [ebx+0x1ee1c103],cl
  40f134:	xor    ecx,0xc0000000
  40f13a:	mov    DWORD PTR [ebp-0x64],edx
  40f13d:	mov    edx,DWORD PTR [ebx+0x4]
  40f140:	xor    eax,0xba699573
  40f145:	mov    DWORD PTR [ebp+0x14],ecx
  40f148:	mov    ecx,0x9c0a89d8
  40f14d:	xor    edx,ecx
  40f14f:	shrd   eax,edx,0x2
  40f153:	or     eax,DWORD PTR [ebp+0x10]
  40f156:	shr    edx,0x2
  40f159:	mov    DWORD PTR [ebp-0x70],eax
  40f15c:	mov    eax,edx
  40f15e:	or     eax,DWORD PTR [ebp+0x14]
  40f161:	mov    DWORD PTR [ebp-0x5c],edx
  40f164:	mov    DWORD PTR [ebp-0x6c],eax
  40f167:	mov    eax,DWORD PTR [ebp-0x70]
  40f16a:	cmp    DWORD PTR [ebp-0x68],eax
  40f16d:	jne    0x40f17f
  40f173:	mov    eax,DWORD PTR [ebp-0x6c]
  40f176:	cmp    DWORD PTR [ebp-0x64],eax
  40f179:	je     0x40fcce
  40f17f:	mov    eax,DWORD PTR [ebp+0x8]
  40f182:	mov    edx,DWORD PTR [ebp+0xc]
  40f185:	mov    edx,DWORD PTR [ebp-0x4]
  40f188:	mov    edx,DWORD PTR [edx+0x3c]
  40f18b:	lea    eax,[edx+eax*8+0x78]
  40f18f:	mov    edx,DWORD PTR [ebp-0x4]
  40f192:	mov    eax,DWORD PTR [edx+eax*1]
  40f195:	mov    DWORD PTR [ebp-0x24],eax
  40f198:	jmp    0x40f722
  40f19d:	mov    al,ds:0x187ff383
  40f1a2:	jle    0x40f1c4
  40f1a4:	sub    BYTE PTR [eax-0x4657b743],cl
  40f1aa:	xchg   ecx,eax
  40f1ab:	mov    edx,0x1686b5ae
  40f1b0:	push   ss
  40f1b1:	cmp    eax,0xd1161604
  40f1b6:	jmp    0x40f231
  40f1b8:	sub    eax,0xb58fd542
  40f1bd:	loope  0x40f179
  40f1bf:	xor    eax,0x40fcf8e3
  40f1c4:	(bad)  
  40f1c5:	inc    DWORD PTR [eax-0x56]
  40f1c8:	daa    
  40f1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ca:	mov    ah,0xd3
  40f1cc:	into   
  40f1cd:	jmp    0x6201:0xd635f251
  40f1d4:	dec    eax
  40f1d5:	add    edi,DWORD PTR [esi-0x18ebd88b]
  40f1db:	pop    ebp
  40f1dc:	cmc    
  40f1dd:	rdseed esp
  40f1e0:	nop
  40f1e1:	jnp    0x40f1b7
  40f1e3:	dec    esi
  40f1e4:	lock out dx,al
  40f1e6:	ins    DWORD PTR es:[edi],dx
  40f1e7:	cs xchg esp,eax
  40f1e9:	daa    
  40f1ea:	sbb    esp,edx
  40f1ec:	jmp    0x7524bcac
  40f1f1:	sar    BYTE PTR [edx],0x2
  40f1f4:	ins    BYTE PTR es:[edi],dx
  40f1f5:	sbb    al,0x29
  40f1f7:	stos   DWORD PTR es:[edi],eax
  40f1f8:	(bad)  
  40f1f9:	cli    
  40f1fa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40f1fc:	imul   ebx,DWORD PTR [edx],0x344a447f
  40f202:	mov    bl,0x30
  40f204:	lock jns 0x40f19f
  40f207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f208:	das    
  40f209:	stos   BYTE PTR es:[edi],al
  40f20a:	mov    dl,0x28
  40f20c:	adc    esi,edi
  40f20e:	push   edi
  40f20f:	sub    DWORD PTR [edx-0x66046326],ebp
  40f215:	add    edx,DWORD PTR [ecx]
  40f217:	inc    ebx
  40f218:	outs   dx,BYTE PTR ds:[esi]
  40f219:	add    DWORD PTR [esi+ebp*1],edi
  40f21c:	dec    edi
  40f21d:	cmp    esp,DWORD PTR [eax+0x51d86d6c]
  40f223:	hlt    
  40f224:	dec    eax
  40f225:	jnp    0x40f24b
  40f227:	push   0xffffffb1
  40f229:	popa   
  40f22a:	or     al,0x32
  40f22c:	jmp    0x40f23f
  40f22e:	adc    DWORD PTR [ebp-0x4f],esp
  40f231:	outs   dx,BYTE PTR ds:[esi]
  40f232:	jge    0x40f27d
  40f234:	test   al,0x29
  40f236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f237:	push   esp
  40f238:	cmp    BYTE PTR [edi+0x55],ch
  40f23b:	shl    DWORD PTR [ecx-0x2f3b7b5e],1
  40f241:	pop    es
  40f242:	jecxz  0x40f207
  40f244:	das    
  40f245:	imul   edi,DWORD PTR [ebp+0xa],0x28
  40f249:	adc    al,0xea
  40f24b:	ret    0x8613
  40f24e:	jecxz  0x40f1d6
  40f250:	push   ss
  40f251:	int    0xf7
  40f253:	mov    esp,0x3c8485c7
  40f258:	cmc    
  40f259:	sbb    al,0xe6
  40f25b:	push   edx
  40f25c:	cmp    esi,eax
  40f25e:	sbb    eax,0xacd4ab74
  40f263:	push   ecx
  40f264:	xchg   edx,eax
  40f265:	inc    ecx
  40f266:	ins    BYTE PTR es:[edi],dx
  40f267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f268:	stc    
  40f269:	outs   dx,BYTE PTR ds:[esi]
  40f26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f26b:	sbb    eax,DWORD PTR ds:0xad823469
  40f271:	push   edx
  40f272:	repz push esp
  40f274:	fs push ebp
  40f276:	adc    eax,0x868506aa
  40f27b:	shr    BYTE PTR [eax],1
  40f27d:	cwde   
  40f27e:	data16 fdiv st(5),st
  40f281:	sub    DWORD PTR [ebp-0x7cb5595a],edi
  40f287:	retf   0x74fb
  40f28a:	add    bl,dl
  40f28c:	shl    BYTE PTR [ebp+eax*1+0x2f],cl
  40f290:	icebp  
  40f291:	lea    ebp,[eax+0x25]
  40f294:	sti    
  40f295:	xor    DWORD PTR [esp+eiz*8],esp
  40f298:	mov    ss,ebx
  40f29a:	mov    ebp,0x54d740c8
  40f29f:	cmp    al,0xd5
  40f2a1:	xchg   ebp,eax
  40f2a2:	sbb    al,0x38
  40f2a4:	imul   esp,DWORD PTR [eax-0x22c20a8e],0x12fdde46
  40f2ae:	lods   al,BYTE PTR ds:[esi]
  40f2af:	loop   0x40f2f5
  40f2b1:	xor    DWORD PTR [esi+0x57],esp
  40f2b4:	cmp    eax,0x394c67ba
  40f2b9:	mov    bh,0x79
  40f2bb:	add    al,0x96
  40f2bd:	lds    ebx,FWORD PTR [edx]
  40f2bf:	icebp  
  40f2c0:	jg     0x40f285
  40f2c2:	dec    edx
  40f2c3:	fcmovu st,st(6)
  40f2c5:	push   0x9ba356a5
  40f2ca:	mov    dl,0xe7
  40f2cc:	and    ecx,ebx
  40f2ce:	out    dx,al
  40f2cf:	in     al,dx
  40f2d0:	int3   
  40f2d1:	xchg   DWORD PTR [ebx-0x3f90c3b5],esi
  40f2d7:	cmp    dh,BYTE PTR [edi+ecx*1]
  40f2da:	inc    ebp
  40f2db:	sub    eax,0x44c2e265
  40f2e0:	mov    dh,0xa9
  40f2e2:	sub    eax,0x68e924d8
  40f2e7:	gs in  eax,dx
  40f2e9:	das    
  40f2ea:	push   0xffffff86
  40f2ec:	mov    ebx,0xf831387
  40f2f1:	fcmove st,st(6)
  40f2f3:	iret   
  40f2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f5:	dec    edx
  40f2f6:	push   cs
  40f2f7:	or     eax,0xc45809a
  40f2fc:	sti    
  40f2fd:	aad    0xed
  40f2ff:	add    eax,0x6f047d0c
  40f304:	mov    DWORD PTR [edx],eax
  40f306:	inc    esi
  40f307:	add    DWORD PTR [esi],eax
  40f309:	xchg   ebx,eax
  40f30a:	mov    es:0xbe0b3479,eax
  40f310:	jo     0x40f360
  40f312:	(bad)  
  40f313:	fincstp 
  40f315:	fidivr DWORD PTR [esi+0x4d]
  40f318:	(bad)  
  40f319:	(bad)  
  40f31a:	or     al,al
  40f31c:	pushf  
  40f31d:	aam    0x1a
  40f31f:	inc    esi
  40f320:	inc    esp
  40f321:	mov    cl,0x2e
  40f323:	int    0x3a
  40f325:	jmp    0x11af:0x91813f67
  40f32c:	jne    0x40f390
  40f32e:	ret    0xe0a2
  40f331:	not    esp
  40f333:	aas    
  40f334:	mov    dh,0xac
  40f336:	cmc    
  40f337:	pop    ss
  40f338:	inc    eax
  40f339:	test   bh,cl
  40f33b:	and    dl,bl
  40f33d:	xlat   BYTE PTR ds:[ebx]
  40f33e:	lods   al,BYTE PTR ds:[esi]
  40f33f:	and    eax,0x51ff2e26
  40f344:	push   edi
  40f345:	fcmovb st,st(7)
  40f347:	daa    
  40f348:	and    ebp,DWORD PTR [edx-0x30]
  40f34b:	pop    edi
  40f34c:	adc    BYTE PTR [ecx],dh
  40f34e:	aad    0x56
  40f350:	jae    0x40f3c4
  40f352:	pop    eax
  40f353:	jle    0x40f340
  40f355:	cld    
  40f356:	jns    0x40f3aa
  40f358:	or     BYTE PTR [eax-0x2f0dc8f7],ch
  40f35e:	ror    ah,1
  40f360:	mov    ebp,0xd9893db6
  40f365:	les    ebp,FWORD PTR [ebp+0x37f0b0ec]
  40f36b:	mov    edx,0x26bee231
  40f370:	das    
  40f371:	shl    bl,0xa1
  40f374:	xor    al,0x40
  40f376:	sub    al,cl
  40f378:	push   ebp
  40f379:	and    edi,DWORD PTR [ebp+0x70]
  40f37c:	repz in al,0x6a
  40f37f:	jnp    0x40f3e7
  40f381:	pop    ds
  40f382:	mov    ch,0x5
  40f384:	xchg   esi,eax
  40f385:	(bad)  
  40f386:	adc    bl,BYTE PTR [ecx+0x7212756e]
  40f38c:	int    0x9a
  40f38e:	push   ecx
  40f38f:	and    BYTE PTR [ecx+0x1d],dl
  40f392:	cmp    BYTE PTR [edi],dl
  40f394:	jecxz  0x40f36f
  40f396:	xor    esp,DWORD PTR [edx]
  40f398:	xchg   ecx,eax
  40f399:	mov    edi,0x9008dd2f
  40f39e:	inc    edx
  40f39f:	sub    dl,bl
  40f3a1:	dec    eax
  40f3a2:	out    dx,al
  40f3a3:	jg     0x40f3ca
  40f3a5:	popa   
  40f3a6:	popf   
  40f3a7:	sbb    DWORD PTR [ebx],eax
  40f3a9:	bound  edi,QWORD PTR [ecx-0x3a]
  40f3ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ad:	pop    esp
  40f3ae:	imul   edi,DWORD PTR [esi],0x25
  40f3b1:	push   0xf8e6dba5
  40f3b6:	mov    al,0x2c
  40f3b8:	stos   BYTE PTR es:[edi],al
  40f3b9:	shl    BYTE PTR [ebx+ebp*2-0x6823d92c],0x1c
  40f3c1:	adc    bl,BYTE PTR [edx]
  40f3c3:	fwait
  40f3c4:	test   eax,0x6b358ecf
  40f3c9:	mov    ecx,0x9bea1747
  40f3ce:	aad    0x7d
  40f3d0:	mov    al,bh
  40f3d2:	mov    edi,DWORD PTR [ebx]
  40f3d4:	arpl   WORD PTR [eax],ax
  40f3d6:	out    0xbf,al
  40f3d8:	push   ss
  40f3d9:	mov    al,0xa4
  40f3db:	mov    ch,BYTE PTR [esi+0x5cd514b4]
  40f3e1:	pop    es
  40f3e2:	push   esi
  40f3e3:	retf   0x54cf
  40f3e6:	jae    0x40f3a4
  40f3e8:	mov    BYTE PTR [edx+0x4816d455],dl
  40f3ee:	cs push edx
  40f3f0:	lods   eax,DWORD PTR ds:[esi]
  40f3f1:	inc    ebp
  40f3f2:	(bad)  
  40f3f3:	cwde   
  40f3f4:	jmp    0x40f379
  40f3f6:	add    al,0xa5
  40f3f8:	jg     0x40f3bf
  40f3fa:	gs push es
  40f3fc:	mov    ds:0x6af3c42,al
  40f401:	pop    ebp
  40f402:	retf   0xc69
  40f405:	xor    al,0xa9
  40f407:	leave  
  40f408:	push   edx
  40f409:	lahf   
  40f40a:	mov    esp,0x7a285e4a
  40f40f:	call   0x36d0:0x7818c6cb
  40f416:	adc    BYTE PTR [ebp+0x32],al
  40f419:	ins    BYTE PTR es:[edi],dx
  40f41a:	sar    dh,cl
  40f41c:	dec    edi
  40f41d:	retf   
  40f41e:	adc    ch,BYTE PTR [ebx+0x6c]
  40f421:	rcl    dl,1
  40f423:	add    esi,edx
  40f425:	test   DWORD PTR [ebx+0x4083128e],edi
  40f42b:	pop    ss
  40f42c:	or     al,0x27
  40f42e:	inc    edx
  40f42f:	jb     0x40f3d5
  40f431:	adc    bl,bh
  40f433:	pop    fs
  40f435:	xchg   esi,eax
  40f436:	jle    0x40f402
  40f438:	rcl    esi,1
  40f43a:	cs mov al,0xbb
  40f43d:	rcl    DWORD PTR [ebx-0x72],cl
  40f440:	dec    edx
  40f441:	pop    es
  40f442:	lahf   
  40f443:	sbb    al,0xe1
  40f445:	hlt    
  40f446:	clc    
  40f447:	mov    ch,0x1c
  40f449:	sbb    eax,0xaa5bd98e
  40f44e:	sbb    eax,0x2af6d96f
  40f453:	lds    esi,FWORD PTR [edx-0x4]
  40f456:	xor    al,dl
  40f458:	xlat   BYTE PTR ds:[ebx]
  40f459:	pop    edx
  40f45a:	adc    BYTE PTR [eax],dl
  40f45c:	int3   
  40f45d:	or     dl,BYTE PTR [edx+0x5d]
  40f460:	imul   BYTE PTR [ebx+eiz*8]
  40f463:	cmp    al,0xab
  40f465:	ss sti 
  40f467:	in     eax,dx
  40f468:	into   
  40f469:	cs clc 
  40f46b:	enter  0x823a,0x71
  40f46f:	push   0x75846886
  40f474:	jb     0x40f48e
  40f476:	inc    edx
  40f477:	xor    DWORD PTR [esi-0x3a8edb1d],0xe4bac33a
  40f481:	inc    ebx
  40f482:	sbb    eax,0xa587dd34
  40f487:	int3   
  40f488:	in     eax,dx
  40f489:	jmp    0x40f473
  40f48b:	sub    eax,0x1229d68a
  40f490:	inc    esp
  40f491:	mov    esi,0x59a80e61
  40f496:	fldenv [ebp-0x74]
  40f499:	into   
  40f49a:	inc    ecx
  40f49b:	jns    0x40f508
  40f49d:	scas   eax,DWORD PTR es:[edi]
  40f49e:	int    0x7a
  40f4a0:	pop    ebp
  40f4a1:	test   DWORD PTR [edx+0x406fcd8f],edi
  40f4a7:	mov    bl,0x25
  40f4a9:	test   cl,ah
  40f4ab:	cmp    al,0xb5
  40f4ad:	fld    DWORD PTR [edx]
  40f4af:	test   al,0x3c
  40f4b1:	rcl    al,1
  40f4b3:	loope  0x40f488
  40f4b5:	dec    ebx
  40f4b6:	dec    esi
  40f4b7:	outs   dx,BYTE PTR ds:[esi]
  40f4b8:	or     eax,DWORD PTR [esi-0x1d33826a]
  40f4be:	add    DWORD PTR [edi+edx*2-0x499eb4b4],0x52f7d7f3
  40f4c9:	fs icebp 
  40f4cb:	xor    eax,0x7ef28ee
  40f4d0:	jmp    0x40f46d
  40f4d2:	jge    0x40f4ae
  40f4d4:	data16 (bad) 
  40f4d6:	cmp    ch,ch
  40f4d8:	sub    al,0x2c
  40f4da:	data16 popw es
  40f4dd:	out    dx,al
  40f4de:	dec    edx
  40f4df:	dec    edi
  40f4e0:	push   ds
  40f4e1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f4e3:	in     eax,dx
  40f4e4:	add    al,0x6d
  40f4e6:	xchg   edi,eax
  40f4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4e8:	inc    ebp
  40f4e9:	pop    ecx
  40f4ea:	outs   dx,BYTE PTR ds:[esi]
  40f4eb:	scas   al,BYTE PTR es:[edi]
  40f4ec:	cli    
  40f4ed:	stos   DWORD PTR es:[edi],eax
  40f4ee:	arpl   WORD PTR [edx],cx
  40f4f0:	sahf   
  40f4f1:	shr    al,1
  40f4f3:	ja     0x40f4be
  40f4f5:	sahf   
  40f4f6:	xchg   ebp,eax
  40f4f7:	into   
  40f4f8:	scas   al,BYTE PTR es:[edi]
  40f4f9:	mov    edx,0x1a18bf90
  40f4fe:	xchg   edi,eax
  40f4ff:	mov    cl,0x5c
  40f501:	mov    ds:0x237db9e6,eax
  40f506:	or     esi,DWORD PTR [esi+0x2240ad39]
  40f50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f50d:	(bad)  
  40f50f:	ins    DWORD PTR es:[edi],dx
  40f510:	test   al,0x72
  40f512:	sahf   
  40f513:	daa    
  40f514:	xchg   ebp,eax
  40f515:	push   ss
  40f516:	fdivrp st(4),st
  40f518:	adc    BYTE PTR [ebx-0x2deda836],ch
  40f51e:	jg     0x40f4d9
  40f520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f521:	and    al,BYTE PTR [edx+ebx*1-0x2a141698]
  40f528:	retf   
  40f529:	push   edx
  40f52a:	in     eax,0x9
  40f52c:	in     al,dx
  40f52d:	xor    bl,BYTE PTR [eax]
  40f52f:	repz icebp 
  40f531:	sbb    esp,esi
  40f533:	rcl    BYTE PTR ds:0xe165a64c,0x83
  40f53a:	add    BYTE PTR [eax-0x4a],ch
  40f53d:	add    eax,0x385b6dd6
  40f542:	mov    esi,0x802d5e7e
  40f547:	aas    
  40f548:	int3   
  40f549:	xchg   ecx,eax
  40f54a:	(bad)  
  40f54b:	or     BYTE PTR [edx-0x5c],cl
  40f54e:	das    
  40f54f:	je     0x40f554
  40f551:	jne    0x40f4ed
  40f553:	xchg   ecx,eax
  40f554:	das    
  40f555:	and    eax,0xd1ac0e67
  40f55a:	mov    DWORD PTR [edi-0xb],ebp
  40f55d:	hlt    
  40f55e:	sbb    DWORD PTR [edx],0x60
  40f561:	popf   
  40f562:	pop    ebp
  40f563:	mov    al,0x67
  40f565:	test   DWORD PTR [esi],ecx
  40f567:	call   0x853f:0x482d3222
  40f56e:	push   ds
  40f56f:	pushf  
  40f570:	outs   dx,BYTE PTR ds:[esi]
  40f571:	mov    eax,ds:0x37076a43
  40f576:	pop    es
  40f577:	dec    esi
  40f578:	pop    es
  40f579:	int3   
  40f57a:	dec    eax
  40f57b:	add    eax,0x80da97ab
  40f580:	and    al,0x5
  40f582:	sbb    ebx,ebp
  40f584:	icebp  
  40f585:	jp     0x40f513
  40f587:	jne    0x40f512
  40f589:	dec    eax
  40f58a:	xchg   DWORD PTR [esp+esi*1],ebp
  40f58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f58e:	cmp    ebx,esp
  40f590:	gs popa 
  40f592:	sbb    al,0xbd
  40f594:	push   0x32
  40f596:	out    0x46,eax
  40f598:	sub    esp,DWORD PTR [edx+0x5102d0e9]
  40f59e:	loopne 0x40f60a
  40f5a0:	stos   BYTE PTR es:[edi],al
  40f5a1:	sbb    esi,edx
  40f5a3:	pop    es
  40f5a4:	dec    edi
  40f5a5:	push   ss
  40f5a6:	(bad)  
  40f5a7:	cld    
  40f5a8:	inc    esp
  40f5a9:	add    BYTE PTR [eax-0x5b],bl
  40f5ac:	outs   dx,BYTE PTR ds:[esi]
  40f5ad:	idiv   ebx
  40f5af:	das    
  40f5b0:	sub    DWORD PTR [ebx+0x2e],ebp
  40f5b3:	sbb    DWORD PTR [ebp+0x4533c422],0xffffff94
  40f5ba:	cdq    
  40f5bb:	jmp    0x40f61a
  40f5bd:	cld    
  40f5be:	pop    ebx
  40f5bf:	sub    al,0xa9
  40f5c1:	addr16 call 0xc9862590
  40f5c7:	push   ss
  40f5c8:	dec    ebp
  40f5c9:	dec    ebp
  40f5ca:	ja     0x40f573
  40f5cc:	loop   0x40f5e0
  40f5ce:	sub    DWORD PTR ds:0x6a0bf09c,ecx
  40f5d4:	push   0x67c51904
  40f5d9:	sub    esi,DWORD PTR [ebx]
  40f5db:	jae    0x40f590
  40f5dd:	data16 mov ds:0x181de8ca,al
  40f5e3:	jg     0x40f5ec
  40f5e5:	shl    bl,0xf1
  40f5e8:	and    BYTE PTR ds:0x34701853,bl
  40f5ee:	mov    ?,WORD PTR [edi+0x69d4038e]
  40f5f4:	xor    al,0x24
  40f5f6:	in     al,dx
  40f5f7:	cwde   
  40f5f8:	xchg   ecx,eax
  40f5f9:	pop    edi
  40f5fa:	xchg   esi,eax
  40f5fb:	pusha  
  40f5fc:	pop    edx
  40f5fd:	arpl   WORD PTR [edi-0xf],ax
  40f600:	xor    ebp,edi
  40f602:	mov    ah,BYTE PTR [ebx+0x27c3012b]
  40f608:	and    esi,0x1fcfc132
  40f60e:	sbb    eax,0x177d64ed
  40f613:	into   
  40f614:	and    BYTE PTR [ebx+0x24],dl
  40f617:	outs   dx,BYTE PTR ds:[esi]
  40f618:	(bad)  
  40f619:	push   esi
  40f61a:	ss std 
  40f61c:	xchg   ebp,eax
  40f61d:	and    ebp,ebx
  40f61f:	jl     0x40f5eb
  40f621:	and    al,0xae
  40f623:	cmp    eax,ebp
  40f625:	out    dx,al
  40f626:	sbb    esp,DWORD PTR [edx+edi*4]
  40f629:	mov    esp,0x4db20b75
  40f62e:	icebp  
  40f62f:	call   0x6385:0x19da2663
  40f636:	pop    edi
  40f637:	pop    ebp
  40f638:	and    DWORD PTR [ebp-0x7f],0xffffffd0
  40f63c:	lods   al,BYTE PTR ds:[esi]
  40f63d:	dec    eax
  40f63e:	mov    esi,DWORD PTR [edi-0x77596665]
  40f644:	cmp    eax,0x78b9eaee
  40f649:	lds    edi,FWORD PTR [edx]
  40f64b:	test   eax,0x5d5b39f9
  40f650:	clc    
  40f651:	lds    eax,FWORD PTR [edx-0x7e10c31d]
  40f657:	pop    ebx
  40f658:	mov    BYTE PTR [ebx],ch
  40f65a:	pop    ds
  40f65b:	xor    eax,0xbc8fd6f0
  40f660:	jne    0x40f661
  40f662:	push   edi
  40f663:	data16 sahf 
  40f665:	mov    DWORD PTR [edx],edx
  40f667:	sub    al,0xa9
  40f669:	mov    esp,0xfa2b0b6
  40f66e:	dec    edx
  40f66f:	std    
  40f670:	test   BYTE PTR ds:0xb6768a1e,al
  40f676:	mov    al,ds:0x6c5d8a3a
  40f67b:	in     eax,dx
  40f67c:	jo     0x40f605
  40f67e:	push   edi
  40f67f:	fwait
  40f680:	xchg   esi,eax
  40f681:	ins    BYTE PTR es:[edi],dx
  40f682:	adc    ebp,DWORD PTR [esi]
  40f684:	or     eax,0x99fc8cde
  40f689:	add    eax,0x578a51c1
  40f68e:	loop   0x40f64c
  40f690:	adc    BYTE PTR [esi-0x75],0xd4
  40f694:	pop    DWORD PTR [ecx]
  40f696:	dec    ecx
  40f697:	pop    esi
  40f698:	loop   0x40f6fe
  40f69a:	pop    ebx
  40f69b:	nop
  40f69c:	and    BYTE PTR [esi+0x1493698a],bh
  40f6a2:	ret    0x47ce
  40f6a5:	stos   DWORD PTR es:[edi],eax
  40f6a6:	(bad)  
  40f6a8:	pop    ds
  40f6a9:	lahf   
  40f6aa:	pop    edi
  40f6ab:	clc    
  40f6ac:	lahf   
  40f6ad:	xor    ebx,DWORD PTR cs:[esi+0x5b]
  40f6b1:	mov    al,0x88
  40f6b3:	in     al,dx
  40f6b4:	or     DWORD PTR [esi+ebx*8],0xffffffec
  40f6b8:	push   ds
  40f6b9:	jmp    0x40f6cf
  40f6bb:	aaa    
  40f6bc:	add    DWORD PTR [eax+esi*1-0xd],edx
  40f6c0:	aam    0xcc
  40f6c2:	sahf   
  40f6c3:	lods   al,BYTE PTR ds:[esi]
  40f6c4:	lds    ebx,FWORD PTR [eax-0x3]
  40f6c7:	sbb    al,0x77
  40f6c9:	ja     0x40f65c
  40f6cb:	xchg   esi,eax
  40f6cc:	xchg   ebx,eax
  40f6cd:	(bad)  
  40f6ce:	out    dx,al
  40f6cf:	stc    
  40f6d0:	push   0xffffffa6
  40f6d2:	sbb    DWORD PTR [ebp+0x35],ebx
  40f6d5:	jp     0x40f727
  40f6d7:	out    dx,al
  40f6d8:	and    DWORD PTR [esp+esi*1+0x1ca3518f],ebp
  40f6df:	mov    BYTE PTR fs:[ecx-0x3],0xe3
  40f6e4:	sbb    al,0x44
  40f6e6:	adc    BYTE PTR ds:0xddebcf53,ah
  40f6ec:	cmp    ebp,DWORD PTR [ecx-0x4c]
  40f6ef:	stos   DWORD PTR es:[edi],eax
  40f6f0:	push   es
  40f6f1:	add    al,dl
  40f6f3:	call   0xa9f50280
  40f6f8:	mov    al,ds:0xbde788ac
  40f6fd:	or     DWORD PTR [ecx],esp
  40f6ff:	dec    DWORD PTR [eax]
  40f701:	or     ecx,edi
  40f703:	sub    eax,DWORD PTR [ebp+0x5d]
  40f706:	daa    
  40f707:	xor    esp,DWORD PTR ds:0xb58a7985
  40f70d:	adc    ebp,edx
  40f70f:	stos   DWORD PTR es:[edi],eax
  40f710:	jecxz  0x40f708
  40f712:	ja     0x40f6e3
  40f714:	adc    dh,BYTE PTR [eax]
  40f716:	add    DWORD PTR ds:0x130fb00e,0xc9c4bfe1
  40f720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f721:	jg     0x40f6ae
  40f723:	push   es
  40f724:	mov    edx,DWORD PTR [esi+0x4]
  40f727:	shrd   eax,edx,0x2
  40f72b:	mov    DWORD PTR [ebp+0x14],eax
  40f72e:	mov    eax,DWORD PTR [esi]
  40f730:	xor    DWORD PTR [ebp+0x14],edi
  40f733:	shr    edx,0x2
  40f736:	mov    edx,DWORD PTR [esi+0x4]
  40f739:	jmp    0x40fcc3
  40f73e:	inc    edx
  40f73f:	jecxz  0x40f7be
  40f741:	sbb    bl,BYTE PTR [eax+ebx*1]
  40f744:	sub    bl,dl
  40f746:	mov    esi,0xf2b40793
  40f74b:	pusha  
  40f74c:	jp     0x40f6fc
  40f74e:	loop   0x40f7c4
  40f750:	push   ss
  40f751:	push   ss
  40f752:	cmp    eax,0xc8161604
  40f757:	sub    dh,BYTE PTR [edi+esi*1+0x70]
  40f75b:	test   esp,ecx
  40f75d:	sbb    BYTE PTR [ebx+0x4f18467a],bl
  40f763:	jne    0x40f7b2
  40f765:	jae    0x40f6ef
  40f767:	inc    edi
  40f768:	dec    edi
  40f769:	push   0x4c
  40f76b:	pop    edx
  40f76c:	fst    DWORD PTR [ebx]
  40f76e:	int3   
  40f76f:	rcl    BYTE PTR [ecx],0x5d
  40f772:	in     al,0xef
  40f774:	or     BYTE PTR [esi],dh
  40f776:	test   DWORD PTR [ebp+0x10],edx
  40f779:	stc    
  40f77a:	dec    eax
  40f77b:	call   0x7c6e:0x59037722
  40f782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f783:	enter  0x58e2,0x3d
  40f787:	ja     0x40f804
  40f789:	test   eax,eax
  40f78b:	push   0x12
  40f78d:	mov    eax,ds:0x400d125a
  40f792:	jns    0x40f79f
  40f794:	add    DWORD PTR [esi-0x6aad0d8b],edx
  40f79a:	cmp    al,0x24
  40f79c:	adc    edi,eax
  40f79e:	sub    dl,BYTE PTR [edi-0x581e80b0]
  40f7a4:	pop    ss
  40f7a5:	std    
  40f7a6:	jns    0x1cd4b84d
  40f7ac:	cmp    BYTE PTR [ebx-0x53],al
  40f7af:	fwait
  40f7b0:	or     BYTE PTR [edi+0x47],ah
  40f7b3:	and    ch,BYTE PTR [ebx]
  40f7b5:	mov    ebp,0x94bf8b67
  40f7ba:	mov    ah,BYTE PTR [edx+edx*2-0xa]
  40f7be:	jge    0x40f7f9
  40f7c0:	rol    DWORD PTR [ecx-0x3e900315],cl
  40f7c6:	lock dec ecx
  40f7c8:	ds call 0xb048:0x712013d7
  40f7d0:	dec    eax
  40f7d1:	int    0x77
  40f7d3:	xchg   edx,eax
  40f7d4:	int    0xa7
  40f7d6:	imul   ebp,DWORD PTR [ebx],0xffffffb9
  40f7d9:	dec    edx
  40f7da:	cmp    al,0x1b
  40f7dc:	add    DWORD PTR [edi],0xffffffe7
  40f7df:	mov    esp,ebp
  40f7e1:	fs out 0x8d,eax
  40f7e4:	mov    cl,0xcd
  40f7e6:	pop    ds
  40f7e7:	ds jge 0x40f7cd
  40f7ea:	mov    al,ds:0x838e7437
  40f7ef:	xchg   esp,eax
  40f7f0:	call   0x53a6:0xc4f7a37b
  40f7f7:	lods   al,BYTE PTR ds:[esi]
  40f7f8:	push   ds
  40f7f9:	pop    ds
  40f7fa:	into   
  40f7fb:	test   BYTE PTR [esi+0x67c8e095],dl
  40f801:	dec    edi
  40f802:	jmp    0x40f80e
  40f804:	mov    ch,0x7c
  40f806:	push   0xa40df87a
  40f80b:	fstp   TBYTE PTR [edx-0x28]
  40f80e:	add    eax,0x90c7efe9
  40f813:	mov    ah,0xc9
  40f815:	fs xchg edi,eax
  40f817:	aas    
  40f818:	jecxz  0x40f7d6
  40f81a:	and    DWORD PTR [eax+ebx*8],eax
  40f81d:	cmc    
  40f81e:	xor    cl,dh
  40f820:	inc    esp
  40f821:	sub    DWORD PTR [eax+0x4b],edx
  40f824:	test   al,0x9b
  40f826:	dec    ebx
  40f827:	ds pop ebx
  40f829:	mov    edx,DWORD PTR [edx+0x3d22ea70]
  40f82f:	sbb    bl,BYTE PTR [eax+ecx*1-0x6f]
  40f833:	das    
  40f834:	loop   0x40f7c1
  40f836:	lods   al,BYTE PTR ds:[esi]
  40f837:	stos   DWORD PTR es:[edi],eax
  40f838:	pop    es
  40f839:	fadd   DWORD PTR [ecx]
  40f83b:	call   FWORD PTR [esp+ebx*2]
  40f83e:	in     eax,0xf8
  40f840:	jg     0x40f81f
  40f842:	out    0x84,al
  40f844:	dec    eax
  40f845:	dec    ebx
  40f846:	add    cl,dl
  40f848:	push   esi
  40f849:	xchg   esp,eax
  40f84a:	add    al,0x3c
  40f84c:	test   BYTE PTR [edi-0x3319e2b1],0x3b
  40f853:	mov    ds:0x5f52294a,al
  40f858:	mov    eax,ds:0xdefe6794
  40f85d:	dec    edx
  40f85e:	adc    edi,esi
  40f860:	push   eax
  40f861:	mov    al,0xc6
  40f863:	mov    al,ds:0x5c06130
  40f868:	sub    BYTE PTR [ebx+ecx*8-0x44],dl
  40f86c:	jmp    0x23ff04a8
  40f871:	inc    edi
  40f872:	sbb    esi,ecx
  40f874:	sub    BYTE PTR [ecx-0x53],0x26
  40f878:	add    eax,0x8e9a3ddb
  40f87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87e:	fwait
  40f87f:	loope  0x40f877
  40f881:	jmp    0xa909:0xb2090e1e
  40f888:	push   ecx
  40f889:	xlat   BYTE PTR ds:[ebx]
  40f88a:	or     DWORD PTR [ecx],esi
  40f88c:	stc    
  40f88d:	imul   edx,DWORD PTR [ebp+0x6e30b2cd],0x70
  40f894:	jecxz  0x40f85b
  40f896:	add    eax,0x8fd72f58
  40f89b:	pop    eax
  40f89c:	mov    ds:0xa5c921a,eax
  40f8a1:	xchg   BYTE PTR [ebx],bl
  40f8a3:	retf   
  40f8a4:	inc    ebx
  40f8a5:	mov    bh,0x56
  40f8a7:	stc    
  40f8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a9:	scas   al,BYTE PTR es:[edi]
  40f8aa:	inc    ecx
  40f8ab:	or     bl,BYTE PTR [ebx-0x6c]
  40f8ae:	or     ecx,DWORD PTR [eax]
  40f8b0:	lock mov ah,0xe5
  40f8b3:	mov    ebx,0x2e58c498
  40f8b8:	or     eax,0xe2f59b2e
  40f8bd:	(bad)  
  40f8be:	jp     0x40f856
  40f8c0:	clc    
  40f8c1:	add    edi,DWORD PTR ds:0xc02ab8fb
  40f8c7:	fnsave [ebp+0x45]
  40f8ca:	inc    ebp
  40f8cb:	jno    0x40f872
  40f8cd:	mov    esi,0x1e9d08e4
  40f8d2:	push   cs
  40f8d3:	xchg   esi,eax
  40f8d4:	sub    DWORD PTR [ecx],0x7a332d34
  40f8da:	inc    edi
  40f8db:	xchg   esi,eax
  40f8dc:	sahf   
  40f8dd:	dec    dh
  40f8df:	add    al,0x60
  40f8e1:	xchg   esp,eax
  40f8e2:	stos   BYTE PTR es:[edi],al
  40f8e3:	ins    BYTE PTR es:[edi],dx
  40f8e4:	jle    0x40f92b
  40f8e6:	inc    esi
  40f8e7:	cld    
  40f8e8:	adc    ebp,DWORD PTR [edx+0x503455b2]
  40f8ee:	int    0x9b
  40f8f0:	ins    BYTE PTR es:[edi],dx
  40f8f1:	sar    BYTE PTR [ecx+0x18cfc15b],cl
  40f8f7:	mov    eax,ds:0xdb637e9b
  40f8fc:	outs   dx,BYTE PTR ds:[esi]
  40f8fd:	arpl   WORD PTR [ebx],ax
  40f8ff:	rcl    DWORD PTR [ecx+ebx*2],1
  40f902:	xor    edx,DWORD PTR [edx-0x28]
  40f905:	out    0x81,eax
  40f907:	clc    
  40f908:	hlt    
  40f909:	(bad)  
  40f90a:	jle    0x40f936
  40f90c:	xchg   edx,eax
  40f90d:	jmp    0xcfe23c4
  40f912:	sbb    BYTE PTR [ebp-0x6e4b9b39],ah
  40f918:	in     eax,0xe6
  40f91a:	add    al,0x89
  40f91c:	jmp    0x40f95e
  40f91e:	lock and eax,0xb3f15102
  40f924:	call   0xcdc1:0x3fb4f03d
  40f92b:	push   eax
  40f92c:	hlt    
  40f92d:	mov    bh,0x86
  40f92f:	mov    al,0x9e
  40f931:	in     eax,dx
  40f932:	sub    al,0xd
  40f934:	mov    bl,0x12
  40f936:	imul   ebp,DWORD PTR [ebx-0x3d71e092],0xffffffbe
  40f93d:	std    
  40f93e:	push   cs
  40f93f:	push   ecx
  40f940:	out    dx,al
  40f941:	lahf   
  40f942:	inc    edi
  40f943:	aam    0xd9
  40f945:	out    dx,al
  40f946:	mov    ds:0xcacb0ddc,eax
  40f94b:	out    0x43,al
  40f94d:	inc    ebx
  40f94e:	pusha  
  40f94f:	mov    al,0x62
  40f951:	jns    0x40f8da
  40f953:	xchg   DWORD PTR [edi-0x204f4b68],ebx
  40f959:	add    bh,dh
  40f95b:	sub    ebp,DWORD PTR [esi-0x27bb59cb]
  40f961:	sbb    DWORD PTR ds:0x8bd48612,esi
  40f967:	daa    
  40f968:	std    
  40f969:	and    bl,0x4e
  40f96c:	pop    ss
  40f96d:	push   0xffffffa6
  40f96f:	adc    eax,0x59343c4
  40f974:	aas    
  40f975:	sbb    dh,BYTE PTR [edx-0x50]
  40f978:	idiv   edx
  40f97a:	sbb    DWORD PTR [esi+ebx*2],ebx
  40f97d:	push   esi
  40f97e:	shl    BYTE PTR [edx+esi*2],cl
  40f981:	clc    
  40f982:	cmc    
  40f983:	ret    0x8bdb
  40f986:	out    0x30,al
  40f988:	jb     0x40f961
  40f98a:	pop    ecx
  40f98b:	clc    
  40f98c:	add    al,0x93
  40f98e:	sysenter 
  40f990:	fwait
  40f991:	pushf  
  40f992:	(bad)  
  40f993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f994:	iret   
  40f995:	mov    ebx,ecx
  40f997:	xchg   BYTE PTR [ebp-0x7b],al
  40f99a:	fld    DWORD PTR [esi-0x765b2044]
  40f9a0:	out    dx,eax
  40f9a1:	xchg   edi,eax
  40f9a2:	mov    ah,0x58
  40f9a4:	dec    ebx
  40f9a5:	add    ch,BYTE PTR ds:0x5426455
  40f9ab:	adc    BYTE PTR [ebx+eax*8-0x4b6f9b7c],bh
  40f9b2:	inc    edi
  40f9b3:	mov    ebp,0xdb6c5e9e
  40f9b8:	clc    
  40f9b9:	cmp    ecx,DWORD PTR [edi+0x5f07cfb]
  40f9bf:	cmp    eax,0x7deb5797
  40f9c4:	jno    0x40f958
  40f9c6:	xor    eax,0x36831936
  40f9cb:	(bad)  
  40f9cc:	add    cl,BYTE PTR [edx+0x790fe52a]
  40f9d2:	out    dx,al
  40f9d3:	push   eax
  40f9d4:	inc    edi
  40f9d5:	repz rcl ebp,1
  40f9d8:	outs   dx,BYTE PTR ds:[esi]
  40f9d9:	mov    cl,dh
  40f9db:	inc    edx
  40f9dc:	inc    ecx
  40f9dd:	fucomp st(6)
  40f9df:	aas    
  40f9e0:	aas    
  40f9e1:	mul    BYTE PTR [esi+0x3287642f]
  40f9e7:	inc    esp
  40f9e8:	inc    eax
  40f9e9:	pop    es
  40f9ea:	cld    
  40f9eb:	mov    dh,0xc5
  40f9ed:	std    
  40f9ee:	dec    ebx
  40f9ef:	push   ecx
  40f9f0:	lahf   
  40f9f1:	or     eax,0x1d8fb503
  40f9f6:	adc    al,0x60
  40f9f8:	leave  
  40f9f9:	jns    0x40f9bf
  40f9fb:	fadd   st(3),st
  40f9fd:	pop    ebp
  40f9fe:	adc    eax,ebx
  40fa00:	repnz xor al,0x4
  40fa03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa04:	dec    eax
  40fa05:	xchg   ebp,eax
  40fa06:	pop    eax
  40fa07:	ins    BYTE PTR es:[edi],dx
  40fa08:	push   eax
  40fa09:	loopne 0x40f9c6
  40fa0b:	xor    BYTE PTR es:[ecx],al
  40fa0e:	mul    esi
  40fa10:	dec    esp
  40fa11:	add    DWORD PTR [eax],ebp
  40fa13:	mov    al,ds:0x6d177b82
  40fa18:	ret    0x1c42
  40fa1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa1c:	dec    edi
  40fa1d:	call   0x36bedd58
  40fa22:	mov    edx,0xabc558bb
  40fa27:	jns    0x40f9f6
  40fa29:	lahf   
  40fa2a:	pop    es
  40fa2b:	mov    ah,0x5e
  40fa2d:	push   0xfffffff6
  40fa2f:	push   edx
  40fa30:	add    BYTE PTR [edi+0x28975043],dl
  40fa36:	mov    eax,0x502fe445
  40fa3b:	mov    ah,0xa9
  40fa3d:	or     al,0xe3
  40fa3f:	mov    ecx,0x392d432
  40fa44:	mov    bl,0xea
  40fa46:	xor    BYTE PTR [esi-0x21],bl
  40fa49:	xlat   BYTE PTR ds:[ebx]
  40fa4a:	mov    edx,DWORD PTR [esi-0x6390d32f]
  40fa50:	sbb    dh,dh
  40fa52:	mov    ss,WORD PTR [esi+0x62]
  40fa55:	xor    ebp,DWORD PTR [edx]
  40fa57:	outs   dx,BYTE PTR ds:[esi]
  40fa58:	xchg   ebx,eax
  40fa59:	xor    DWORD PTR [ecx],eax
  40fa5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa5c:	mov    edi,0x9c778756
  40fa61:	aam    0x83
  40fa63:	icebp  
  40fa64:	sbb    bl,BYTE PTR [eax+0x68]
  40fa67:	jns    0x40facc
  40fa69:	xor    esi,esp
  40fa6b:	call   0xb26d:0x48e89b8b
  40fa72:	fidivr WORD PTR [edx+0x6b]
  40fa75:	adc    BYTE PTR ss:[ebx+0x29],0x40
  40fa7a:	stos   DWORD PTR es:[edi],eax
  40fa7b:	daa    
  40fa7c:	sbb    esi,eax
  40fa7e:	mov    esi,0x74fdbd3
  40fa83:	cs (bad) 
  40fa86:	cmp    DWORD PTR [ebx],ecx
  40fa88:	ins    BYTE PTR es:[edi],dx
  40fa89:	jnp    0x40fa1b
  40fa8b:	cmp    BYTE PTR [ebx+0x3a8bfffc],0x93
  40fa92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa93:	test   al,0x8a
  40fa95:	outs   dx,BYTE PTR ds:[esi]
  40fa96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa97:	inc    ebp
  40fa98:	xchg   ecx,eax
  40fa99:	daa    
  40fa9a:	mov    ecx,0x211c46b
  40fa9f:	pop    ebp
  40faa0:	mov    edx,0xb4b3a284
  40faa5:	ds ins DWORD PTR es:[edi],dx
  40faa7:	xor    edi,ecx
  40faa9:	cmp    ah,al
  40faab:	js     0x40fa93
  40faad:	in     eax,dx
  40faae:	pop    esi
  40faaf:	repz or DWORD PTR [eax-0x645dc96f],0x24
  40fab7:	ret    0x7da4
  40faba:	sub    BYTE PTR [edx+edx*2-0x3983018f],dl
  40fac1:	adc    DWORD PTR [esi],ebx
  40fac3:	or     DWORD PTR [edi],ecx
  40fac5:	mov    esp,0x45facf35
  40faca:	xchg   ebp,eax
  40facb:	addr16 cs adc edi,0xffffffe7
  40fad0:	sbb    DWORD PTR [ebx-0x5a],esp
  40fad3:	retf   0x922c
  40fad6:	mov    dh,BYTE PTR [edx-0x18]
  40fad9:	popf   
  40fada:	out    0xb8,al
  40fadc:	mov    WORD PTR [ebx],es
  40fade:	retf   
  40fadf:	frstor [ebx]
  40fae1:	int3   
  40fae2:	jecxz  0x40fa87
  40fae4:	popf   
  40fae5:	and    ah,dl
  40fae7:	jmp    0x40fb21
  40fae9:	mov    al,ds:0x905bd09f
  40faee:	scas   eax,DWORD PTR es:[edi]
  40faef:	pop    ebp
  40faf0:	cmp    esi,edi
  40faf2:	push   ds
  40faf3:	push   edx
  40faf4:	fistp  WORD PTR [ecx+0x23]
  40faf7:	jnp    0x40fb6a
  40faf9:	test   DWORD PTR [eax],ebx
  40fafb:	pop    ecx
  40fafc:	shl    BYTE PTR [eax-0x4d39d5f6],1
  40fb02:	loop   0x40fb13
  40fb04:	inc    eax
  40fb05:	out    dx,eax
  40fb06:	scas   eax,DWORD PTR es:[edi]
  40fb07:	rdseed ebp
  40fb0a:	aas    
  40fb0b:	out    dx,al
  40fb0c:	push   ebp
  40fb0d:	adc    BYTE PTR [ecx-0x6fb05bef],dh
  40fb13:	jle    0x40faa9
  40fb15:	xchg   esp,eax
  40fb16:	clc    
  40fb17:	add    ch,BYTE PTR [ecx+ebp*1-0x1b]
  40fb1b:	aad    0xd8
  40fb1d:	cli    
  40fb1e:	popa   
  40fb1f:	in     eax,dx
  40fb20:	lods   al,BYTE PTR ds:[esi]
  40fb21:	push   ss
  40fb22:	xchg   edx,eax
  40fb23:	adc    DWORD PTR [ebx+0x28],eax
  40fb26:	adc    DWORD PTR [ebx],0x19eea258
  40fb2c:	inc    eax
  40fb2d:	(bad)  
  40fb2e:	cmp    al,0xa2
  40fb30:	mov    ds:0x37979c6a,al
  40fb35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb36:	push   ebp
  40fb37:	cmp    esp,edx
  40fb39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb3a:	arpl   cx,si
  40fb3c:	(bad)  
  40fb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb3e:	xchg   edi,eax
  40fb3f:	jnp    0x40fb76
  40fb41:	jl     0x40faf5
  40fb43:	(bad)  
  40fb44:	out    0xf5,eax
  40fb46:	pop    edx
  40fb47:	or     al,0xcf
  40fb49:	dec    ebx
  40fb4a:	dec    esi
  40fb4b:	push   ss
  40fb4c:	lock mov ch,0x4
  40fb4f:	sub    al,0x56
  40fb51:	push   ebp
  40fb52:	inc    ebp
  40fb53:	jmp    0xfaa29874
  40fb58:	xor    eax,0x1ceb8185
  40fb5d:	not    edx
  40fb5f:	icebp  
  40fb60:	outs   dx,BYTE PTR ds:[esi]
  40fb61:	stos   DWORD PTR es:[edi],eax
  40fb62:	clc    
  40fb63:	rcr    dh,1
  40fb65:	xor    eax,0x9ad56b19
  40fb6a:	xor    edx,esp
  40fb6c:	pop    esi
  40fb6d:	xchg   edi,eax
  40fb6e:	(bad)  
  40fb6f:	jmp    0x40fb82
  40fb71:	pop    ecx
  40fb72:	push   ds
  40fb73:	push   0xffffffbb
  40fb75:	(bad)  
  40fb76:	adc    dl,BYTE PTR [edi-0x184bdc89]
  40fb7c:	cmp    BYTE PTR [ebx+0x7c],ch
  40fb7f:	aas    
  40fb80:	or     cl,BYTE PTR [eax+eiz*1+0x7b]
  40fb84:	fstp   QWORD PTR [ebp+0x766a7158]
  40fb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb8b:	in     al,0xe1
  40fb8d:	loop   0x40fb7f
  40fb8f:	mov    eax,ds:0x2fc003e4
  40fb94:	stc    
  40fb95:	or     DWORD PTR [edi+0x56],esi
  40fb98:	sbb    cl,al
  40fb9a:	out    0x4,eax
  40fb9c:	outs   dx,DWORD PTR ds:[esi]
  40fb9d:	mov    esp,0xd59fe81f
  40fba2:	sbb    al,0x1
  40fba4:	(bad)  
  40fba5:	je     0x40fbf7
  40fba7:	push   eax
  40fba8:	out    dx,al
  40fba9:	aad    0x43
  40fbab:	in     al,0x33
  40fbad:	mov    edi,0xaac2703d
  40fbb2:	jmp    0x40fbde
  40fbb4:	sub    edi,eax
  40fbb6:	push   cs
  40fbb7:	ret    0x5361
  40fbba:	mov    ch,0xe3
  40fbbc:	arpl   WORD PTR [ecx-0x5a407fe8],di
  40fbc2:	sbb    dh,dh
  40fbc4:	(bad)  [edi+0x5ff268b2]
  40fbca:	xchg   edi,eax
  40fbcb:	je     0x40fb9f
  40fbcd:	shl    DWORD PTR [esi+0x5],0xed
  40fbd1:	and    al,dl
  40fbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd4:	add    BYTE PTR [esi],al
  40fbd6:	cli    
  40fbd7:	mov    al,0xcf
  40fbd9:	sbb    DWORD PTR [esi+eiz*2-0x541b6b44],ecx
  40fbe0:	add    eax,0x74817eea
  40fbe5:	in     al,0x6f
  40fbe7:	loop   0x40fc68
  40fbe9:	arpl   WORD PTR [esi+0x34ae0c77],dx
  40fbef:	and    dh,BYTE PTR [eax-0x46]
  40fbf2:	repz das 
  40fbf4:	sub    BYTE PTR [esp+esi*1+0x57],bl
  40fbf8:	ds jle 0x40fbf6
  40fbfb:	cmp    eax,0xc5f7b8e2
  40fc00:	popf   
  40fc01:	sub    BYTE PTR [edi],0xd0
  40fc04:	nop
  40fc05:	icebp  
  40fc06:	mov    DWORD PTR [ecx],ebx
  40fc08:	nop
  40fc09:	(bad)  
  40fc0a:	std    
  40fc0b:	fs add dh,bl
  40fc0e:	pop    ds
  40fc0f:	jmp    0x40fc57
  40fc11:	fadd   st(6),st
  40fc13:	mov    edi,0x310ccf22
  40fc18:	push   eax
  40fc19:	jmp    0x6e51:0xf1d90295
  40fc20:	fidiv  WORD PTR [ebp-0x63152c77]
  40fc26:	mov    WORD PTR [bp+0x32],fs
  40fc2a:	gs xchg esp,eax
  40fc2c:	jmp    0x40fc0b
  40fc2e:	sahf   
  40fc2f:	ins    DWORD PTR es:[edi],dx
  40fc30:	mov    bh,0x8c
  40fc32:	or     bl,BYTE PTR [ecx-0x7]
  40fc35:	add    BYTE PTR [ecx],cl
  40fc37:	jo     0x40fc7a
  40fc39:	xor    eax,0xf6ff8c40
  40fc3e:	loopne 0x40fbfe
  40fc40:	pusha  
  40fc41:	sbb    BYTE PTR [ebx+0x17eb25f9],al
  40fc47:	stos   DWORD PTR es:[edi],eax
  40fc48:	jbe    0x40fc71
  40fc4a:	xchg   ebp,eax
  40fc4b:	cmc    
  40fc4c:	xor    BYTE PTR [esp+edx*1],bh
  40fc4f:	rcr    DWORD PTR [eax-0x5931df74],0xce
  40fc56:	dec    ecx
  40fc57:	push   0xffffffce
  40fc59:	ins    BYTE PTR es:[edi],dx
  40fc5a:	lea    esp,[edi+0x2d580d4e]
  40fc60:	inc    ecx
  40fc61:	and    al,0x38
  40fc63:	push   ss
  40fc64:	adc    eax,0x58bfc0f3
  40fc69:	mov    ecx,0x38d13d2b
  40fc6e:	mov    dh,0xd3
  40fc70:	test   DWORD PTR [esi+edi*1+0x61],0x8f8189d2
  40fc78:	aas    
  40fc79:	sbb    ch,BYTE PTR ds:0x77c7e66f
  40fc7f:	sub    eax,DWORD PTR [edx+edi*4-0x7d]
  40fc83:	or     DWORD PTR [esi-0x13598d28],eax
  40fc89:	bound  ebx,QWORD PTR [edi]
  40fc8b:	adc    DWORD PTR [edx],ecx
  40fc8d:	test   ch,dh
  40fc8f:	add    eax,0x9111d059
  40fc94:	pushf  
  40fc95:	xchg   ecx,eax
  40fc96:	arpl   WORD PTR [edi+0x7230aa15],dx
  40fc9c:	xchg   edi,esp
  40fc9e:	fst    DWORD PTR [esi+ebp*4+0x61]
  40fca2:	pop    esp
  40fca3:	push   0x2a
  40fca5:	retf   
  40fca6:	shl    BYTE PTR [edx+0x4d],cl
  40fca9:	outs   dx,BYTE PTR ds:[esi]
  40fcaa:	dec    esp
  40fcab:	push   edx
  40fcac:	and    al,bh
  40fcae:	lea    edi,ds:0xdfd62a39
  40fcb4:	pop    ss
  40fcb5:	adc    bl,BYTE PTR [ebx-0x70]
  40fcb8:	retf   
  40fcb9:	imul   ebx,DWORD PTR [eiz*2+0x158374b3],0x64
  40fcc1:	push   edi
  40fcc2:	xor    dh,BYTE PTR [ebx]
  40fcc4:	rol    cl,cl
  40fcc6:	loopne 0x40fce6
  40fcc8:	or     edx,DWORD PTR [ebp+0x14]
  40fccb:	mov    DWORD PTR [ebp-0x28],edx
  40fcce:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd1:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd4:	xor    edx,edx
  40fcd6:	shld   edx,eax,0x2
  40fcda:	xor    edx,ecx
  40fcdc:	mov    DWORD PTR [ebp+0xc],edx
  40fcdf:	mov    edx,DWORD PTR [esi]
  40fce1:	shl    eax,0x2
  40fce4:	mov    DWORD PTR [ebp+0x10],edx
  40fce7:	mov    edx,DWORD PTR [esi+0x4]
  40fcea:	xor    eax,0xba699573
  40fcef:	mov    DWORD PTR [ebp+0x14],edx
  40fcf2:	cmp    eax,DWORD PTR [ebp+0x10]
  40fcf5:	jne    0x41195a
  40fcfb:	jmp    0x410285
  40fd00:	shl    BYTE PTR [eax-0x5b],0xd6
  40fd04:	and    eax,0x48609832
  40fd09:	and    dl,ah
  40fd0b:	test   al,0xd3
  40fd0d:	lods   eax,DWORD PTR ds:[esi]
  40fd0e:	mov    al,0xae
  40fd10:	sbb    BYTE PTR [edx+0x16],ch
  40fd13:	push   ss
  40fd14:	cmp    eax,0x48161604
  40fd19:	pop    ebx
  40fd1a:	mov    ebx,0xc5b02d
  40fd1f:	scas   eax,DWORD PTR es:[edi]
  40fd20:	stos   DWORD PTR es:[edi],eax
  40fd21:	mov    ebx,0x3888acd
  40fd26:	imul   ecx,DWORD PTR [eax+0x5],0x6
  40fd2a:	add    bl,BYTE PTR [edi]
  40fd2c:	sub    BYTE PTR [eax+0x7a],al
  40fd2f:	xor    dl,ch
  40fd31:	inc    esi
  40fd32:	xchg   esp,eax
  40fd33:	jmp    0x72934386
  40fd38:	cvtps2pi mm6,QWORD PTR [esi-0x8db884e]
  40fd3f:	cli    
  40fd40:	js     0x40fcf3
  40fd42:	scas   al,BYTE PTR es:[edi]
  40fd43:	repz fdiv QWORD PTR [eax-0x34]
  40fd47:	fdivr  DWORD PTR [ebx]
  40fd49:	or     eax,ebp
  40fd4b:	shl    BYTE PTR [ebp+0x16a65e3d],0xb1
  40fd52:	stc    
  40fd53:	push   es
  40fd54:	xor    edx,DWORD PTR [esi-0x7b933f97]
  40fd5a:	sub    BYTE PTR [edx+edi*1+0x79],bl
  40fd5e:	pop    ss
  40fd5f:	loopne 0x40fce6
  40fd61:	pop    ebx
  40fd62:	cpuid  
  40fd64:	mov    ecx,0xcf531c1d
  40fd69:	add    edx,ebx
  40fd6b:	sbb    DWORD PTR [ebx],esp
  40fd6d:	push   esi
  40fd6e:	mov    esi,DWORD PTR [eax+0x63ebafe0]
  40fd74:	xchg   BYTE PTR [eax-0x24],cl
  40fd77:	pop    eax
  40fd78:	mov    esi,DWORD PTR [edx-0xf]
  40fd7b:	add    BYTE PTR [edx+0x1c],ch
  40fd7e:	adc    eax,0x1fefd48e
  40fd83:	mov    dl,0xda
  40fd85:	push   edi
  40fd86:	stc    
  40fd87:	sti    
  40fd88:	and    cl,BYTE PTR [edx-0x7f]
  40fd8b:	mov    dh,0xa4
  40fd8d:	inc    esi
  40fd8e:	or     al,0x62
  40fd90:	add    eax,0x39ec0758
  40fd95:	sahf   
  40fd96:	pop    ecx
  40fd97:	pop    esp
  40fd98:	add    eax,0x68b2aec6
  40fd9d:	imul   esi,DWORD PTR [eax-0x74c9b759],0x1b
  40fda4:	cmp    BYTE PTR [esi+0x10a2fa3f],al
  40fdaa:	push   ds
  40fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdac:	xchg   edi,eax
  40fdad:	mov    ah,0x1b
  40fdaf:	fist   WORD PTR [esi-0x63182446]
  40fdb5:	popa   
  40fdb6:	sub    BYTE PTR [ebx+0x66],bh
  40fdb9:	stos   DWORD PTR es:[edi],eax
  40fdba:	mov    ah,0x50
  40fdbc:	mov    eax,ds:0x7919fb6b
  40fdc1:	jle    0x40fe1c
  40fdc3:	sub    ebx,DWORD PTR ds:0x682bf285
  40fdc9:	ds push ebx
  40fdcb:	push   ecx
  40fdcc:	loope  0x40fdf2
  40fdce:	sbb    esi,DWORD PTR [edi+0x551d3885]
  40fdd4:	pop    es
  40fdd5:	mov    ss,WORD PTR [ebx]
  40fdd7:	aaa    
  40fdd8:	icebp  
  40fdd9:	xchg   ecx,eax
  40fdda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fddb:	stc    
  40fddc:	push   ebx
  40fddd:	fsubr  st,st(7)
  40fddf:	in     al,dx
  40fde0:	dec    ebx
  40fde1:	pusha  
  40fde2:	fcmove st,st(4)
  40fde4:	scas   al,BYTE PTR es:[edi]
  40fde5:	xor    BYTE PTR [eax+0x35],bl
  40fde8:	xor    ch,bh
  40fdea:	mov    dl,0x6e
  40fdec:	push   esp
  40fded:	jns    0x40fe60
  40fdef:	and    ch,bh
  40fdf1:	lds    ebp,FWORD PTR [ebx+edi*8]
  40fdf4:	ds inc edi
  40fdf6:	je     0x40fe15
  40fdf8:	mov    bh,0xef
  40fdfa:	pusha  
  40fdfb:	inc    ebx
  40fdfc:	dec    edi
  40fdfd:	inc    edi
  40fdfe:	inc    eax
  40fdff:	mov    edx,eax
  40fe01:	std    
  40fe02:	popa   
  40fe03:	stos   BYTE PTR es:[edi],al
  40fe04:	and    al,0xba
  40fe06:	arpl   WORD PTR [esi-0x67],sp
  40fe09:	(bad)  
  40fe0b:	out    dx,eax
  40fe0c:	test   eax,0x4a3b2e81
  40fe11:	dec    ebp
  40fe12:	push   ebp
  40fe13:	dec    ebp
  40fe14:	dec    edi
  40fe15:	outs   dx,BYTE PTR ds:[esi]
  40fe16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe17:	push   edi
  40fe18:	push   esi
  40fe19:	add    edi,edx
  40fe1b:	mov    ebp,0xa2cced57
  40fe20:	repz pop ds
  40fe22:	aaa    
  40fe23:	imul   esi,ecx,0x327257ca
  40fe29:	sbb    edx,edi
  40fe2b:	xor    al,0x32
  40fe2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe2e:	cmp    BYTE PTR [edx],ch
  40fe30:	fcom   DWORD PTR [edx-0x41]
  40fe33:	lock fsub DWORD PTR [esi+0x23]
  40fe37:	sbb    al,BYTE PTR [ebp+0x51555c29]
  40fe3d:	adc    eax,0xd8e6caeb
  40fe42:	add    eax,0x5af7a2b3
  40fe47:	mov    edx,DWORD PTR ds:0x65e95a96
  40fe4d:	jne    0x40fec7
  40fe4f:	(bad)  
  40fe50:	mov    ?,WORD PTR [esp+edi*2-0x61]
  40fe54:	push   0x98283d68
  40fe59:	push   0x882a217
  40fe5e:	push   eax
  40fe5f:	mov    al,BYTE PTR [esi-0x5a39ab2d]
  40fe65:	dec    edx
  40fe66:	ret    0x1915
  40fe69:	mov    edi,0xcfb0617a
  40fe6e:	jmp    0x155b:0x786b4fe5
  40fe75:	jmp    0x40fe94
  40fe77:	(bad)  
  40fe78:	aam    0x7e
  40fe7a:	or     dl,BYTE PTR [ecx-0x22]
  40fe7d:	loopne 0x40fef6
  40fe7f:	push   ss
  40fe80:	push   ss
  40fe81:	ins    BYTE PTR es:[edi],dx
  40fe82:	or     BYTE PTR [edi],ch
  40fe84:	aaa    
  40fe85:	test   al,0xfb
  40fe87:	mov    bl,0x4
  40fe89:	cmp    al,0x4a
  40fe8b:	push   esp
  40fe8c:	sub    BYTE PTR [esi-0x435dfc65],dl
  40fe92:	mov    al,0xf7
  40fe94:	hlt    
  40fe95:	push   esi
  40fe96:	fsubr  QWORD PTR [edi+0x1c]
  40fe99:	adc    ebx,esp
  40fe9b:	mov    eax,ds:0xbd6112ca
  40fea0:	in     al,dx
  40fea1:	icebp  
  40fea2:	mov    ecx,0x4308b4f5
  40fea7:	or     BYTE PTR [ecx],bh
  40fea9:	das    
  40feaa:	loopne 0x40ff23
  40feac:	jg     0x40ff00
  40feae:	adc    BYTE PTR [esi-0x67937e9a],bh
  40feb4:	aad    0xe7
  40feb6:	xor    eax,0x5ac573f7
  40febb:	stos   BYTE PTR es:[edi],al
  40febc:	out    dx,eax
  40febd:	cs mov ecx,0x6ddb107c
  40fec3:	out    dx,al
  40fec4:	mov    al,0xf0
  40fec6:	push   ss
  40fec7:	call   0x934c27e0
  40fecc:	aas    
  40fecd:	out    dx,eax
  40fece:	das    
  40fecf:	popa   
  40fed0:	ins    BYTE PTR es:[edi],dx
  40fed1:	je     0x40ff33
  40fed3:	pop    ebp
  40fed4:	jge    0x40fe7b
  40fed6:	iret   
  40fed7:	or     ebx,ecx
  40fed9:	out    dx,al
  40feda:	sub    eax,0x3e27dcc9
  40fedf:	in     al,dx
  40fee0:	and    dl,BYTE PTR [ecx-0x6ad37c43]
  40fee6:	iret   
  40fee7:	xor    DWORD PTR [eax],edi
  40fee9:	sahf   
  40feea:	cmp    dh,ah
  40feec:	inc    ebp
  40feed:	mov    dh,0x66
  40feef:	cs sti 
  40fef1:	cmp    al,0x66
  40fef3:	adc    ch,BYTE PTR [ebp-0x17]
  40fef6:	xchg   BYTE PTR [ebx-0x2deb9cb3],ah
  40fefc:	push   ss
  40fefd:	pushf  
  40fefe:	cld    
  40feff:	scas   al,BYTE PTR es:[edi]
  40ff00:	fimul  DWORD PTR [edi+ebp*8-0x30]
  40ff04:	push   ss
  40ff05:	ret    
  40ff06:	mul    bh
  40ff08:	cmp    BYTE PTR [ebx],al
  40ff0a:	push   ecx
  40ff0b:	frstor [edx+ebx*4+0x21]
  40ff0f:	call   FWORD PTR [si]
  40ff12:	add    BYTE PTR [ecx-0x7e],0xb0
  40ff16:	sub    ebp,esi
  40ff18:	jns    0x40feab
  40ff1a:	out    dx,eax
  40ff1b:	shr    BYTE PTR [edx+0x1d1afae7],1
  40ff21:	sub    al,0xeb
  40ff23:	es js  0x40ff84
  40ff26:	outs   dx,DWORD PTR gs:[esi]
  40ff28:	ss cmp eax,0xfa734055
  40ff2e:	rcr    esp,1
  40ff30:	lea    edi,[esi-0x1741a724]
  40ff36:	cmp    DWORD PTR [ebp+0x777e816e],ebp
  40ff3c:	inc    eax
  40ff3d:	iret   
  40ff3e:	aas    
  40ff3f:	aaa    
  40ff40:	mov    al,ds:0x599af98a
  40ff45:	push   es
  40ff46:	das    
  40ff47:	adc    dh,0x77
  40ff4a:	lods   al,BYTE PTR ds:[esi]
  40ff4b:	mov    dh,0x89
  40ff4d:	mov    dl,0xd7
  40ff4f:	push   0x0
  40ff51:	(bad)  
  40ff52:	jp     0x40ff8e
  40ff54:	xor    bh,BYTE PTR [eax-0x6d93fd23]
  40ff5a:	sub    ah,bh
  40ff5c:	sar    esp,1
  40ff5e:	push   esp
  40ff5f:	push   esi
  40ff60:	loopne 0x40ffa7
  40ff62:	lods   eax,DWORD PTR ds:[esi]
  40ff63:	out    0x6,eax
  40ff65:	out    dx,al
  40ff66:	hlt    
  40ff67:	mov    ah,0x26
  40ff69:	aam    0x21
  40ff6b:	ror    bl,0xf1
  40ff6e:	call   0x6bb1:0x2adbd896
  40ff75:	push   edx
  40ff76:	pop    esi
  40ff77:	add    ah,ah
  40ff79:	or     cl,ch
  40ff7b:	and    DWORD PTR [eax-0x3933ebbf],ecx
  40ff81:	push   cs
  40ff82:	and    al,0x40
  40ff84:	and    al,0xcc
  40ff86:	xor    BYTE PTR [ecx],al
  40ff88:	xchg   ebx,eax
  40ff89:	fistp  WORD PTR [edx+0x4b]
  40ff8c:	(bad)  
  40ff8d:	adc    ebx,DWORD PTR [edx+0x2c4f3fe2]
  40ff93:	js     0x410010
  40ff95:	xchg   ecx,eax
  40ff96:	loopne 0x40fff8
  40ff98:	push   esi
  40ff99:	jmp    0x40ff6e
  40ff9b:	gs repnz dec eax
  40ff9e:	(bad)  
  40ff9f:	cmp    al,0xa4
  40ffa1:	mov    edx,0xf1c41f6a
  40ffa6:	jg     0x40ffec
  40ffa8:	data16 and dl,BYTE PTR [edi]
  40ffab:	jae    0x40ffab
  40ffad:	or     eax,0x6d99fc0b
  40ffb2:	call   DWORD PTR [ebx+0x7]
  40ffb5:	sbb    ecx,eax
  40ffb7:	push   0xfffffff1
  40ffb9:	jne    0x40ffdb
  40ffbb:	sub    eax,0xf7951d3c
  40ffc0:	inc    esp
  40ffc1:	cld    
  40ffc2:	xchg   esp,eax
  40ffc3:	mov    fs,WORD PTR [esi-0x2d]
  40ffc6:	jae    0x40fff1
  40ffc8:	lahf   
  40ffc9:	gs pop edi
  40ffcb:	bound  edi,QWORD PTR [ebp-0x4851c2fe]
  40ffd1:	mov    ah,0x86
  40ffd3:	or     ebp,ecx
  40ffd5:	sbb    BYTE PTR [esi],cl
  40ffd7:	out    dx,eax
  40ffd8:	and    al,0x50
  40ffda:	and    DWORD PTR [edx+0x3d1d8837],ebx
  40ffe0:	sub    DWORD PTR [edi],ecx
  40ffe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe3:	mov    ah,0xf6
  40ffe5:	mov    esi,DWORD PTR [ebx]
  40ffe7:	retf   0xd6ce
  40ffea:	rcr    BYTE PTR ds:0x1b172d33,1
  40fff0:	push   ss
  40fff1:	adc    al,0xae
  40fff3:	das    
  40fff4:	jl     0x40ffe5
  40fff6:	ins    DWORD PTR es:[edi],dx
  40fff7:	mov    dl,0xb1
  40fff9:	xchg   edx,eax
  40fffa:	sbb    eax,0x4624eeb
  40ffff:	xchg   edx,eax
  410000:	dec    esp
  410001:	cs ins BYTE PTR es:[edi],dx
  410003:	sub    DWORD PTR [esp+eiz*4-0x40e09193],0xef4161f7
  41000e:	cld    
  41000f:	and    al,0xe4
  410011:	(bad)  
  410013:	fstp   TBYTE PTR [ecx+edi*2]
  410016:	adc    al,0x92
  410018:	fstp   DWORD PTR [ebp+edi*8-0x30d0e01e]
  41001f:	adc    al,0xeb
  410021:	retf   
  410022:	dec    edx
  410023:	and    eax,0xbc2fd864
  410028:	mov    ah,0xe8
  41002a:	dec    esi
  41002b:	adc    BYTE PTR [eax-0x38341492],al
  410031:	cmp    ebx,DWORD PTR [esi-0x6ecfa518]
  410037:	jo     0x41004a
  410039:	lods   eax,DWORD PTR ds:[esi]
  41003a:	test   BYTE PTR [ebp-0x67],ah
  41003d:	sub    BYTE PTR [esi-0x11],cl
  410040:	add    edi,DWORD PTR [edi+0x19d6545b]
  410046:	adc    DWORD PTR [ebp-0xa],0xfffffffd
  41004a:	pop    edi
  41004b:	xor    BYTE PTR [ebp+edi*1-0x52],ch
  41004f:	int    0xe8
  410051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410052:	fs shl dh,cl
  410055:	in     eax,0x49
  410057:	in     al,dx
  410058:	scas   eax,DWORD PTR es:[edi]
  410059:	out    0xb9,al
  41005b:	in     al,0x12
  41005d:	(bad)  
  41005f:	or     edx,0xd68d45b5
  410065:	aam    0x20
  410067:	cld    
  410068:	(bad)  
  410069:	mov    ebp,0xff661385
  41006e:	retf   
  41006f:	loopne 0x4100ce
  410071:	dec    esi
  410072:	cs into 
  410074:	ss ds jl 0x41000c
  410078:	or     DWORD PTR [eax-0x7e],ebx
  41007b:	gs xor ch,al
  41007e:	jnp    0x4100a5
  410080:	mov    bh,0xe3
  410082:	bound  edx,QWORD PTR [edx+edx*2]
  410085:	fnstsw WORD PTR [ebp-0x56]
  410088:	je     0x4100e2
  41008a:	rcr    BYTE PTR [edi+0x46],0xbb
  41008e:	cli    
  41008f:	call   0xb602:0xeed4c9a2
  410096:	mov    al,ds:0x4336de99
  41009b:	int    0xde
  41009d:	push   ebx
  41009e:	es call 0x316c4bf5
  4100a4:	cmc    
  4100a5:	push   ecx
  4100a6:	adc    edx,DWORD PTR [edi+0x3b]
  4100a9:	inc    esp
  4100aa:	mov    dl,0xed
  4100ac:	lds    edx,FWORD PTR ds:0x3b0d8281
  4100b2:	imul   ecx,DWORD PTR [ecx+0x43a93aa0],0xfffffff6
  4100b9:	popf   
  4100ba:	mov    edx,0x3690564d
  4100bf:	in     al,0xfc
  4100c1:	cmp    ebp,DWORD PTR [esi+0x13]
  4100c4:	and    eax,0x4cebc222
  4100c9:	cmp    DWORD PTR [ebx-0x65],esp
  4100cc:	dec    esp
  4100cd:	repz mov ebp,0x61f3d7c0
  4100d3:	aad    0x65
  4100d5:	adc    ecx,ecx
  4100d7:	sbb    ch,ah
  4100d9:	lea    edx,[edx]
  4100db:	(bad)  
  4100dc:	cmp    esi,DWORD PTR [edx]
  4100de:	aas    
  4100df:	outs   dx,DWORD PTR ds:[esi]
  4100e0:	call   0x9237:0x89adfb59
  4100e7:	rcr    DWORD PTR [esi+esi*4-0x4c],0x5
  4100ec:	stc    
  4100ed:	ins    BYTE PTR es:[edi],dx
  4100ee:	into   
  4100ef:	call   0x1b10eb99
  4100f4:	pop    esi
  4100f5:	adc    eax,0x7a1c0992
  4100fa:	sub    eax,0xa403549e
  4100ff:	jnp    0x410137
  410101:	sub    DWORD PTR [esi-0x80],edi
  410104:	sub    DWORD PTR [ebx+0x19c39cdf],eax
  41010a:	in     eax,0x5d
  41010c:	xchg   DWORD PTR [ebx-0x4a],edi
  41010f:	adc    ebp,DWORD PTR [esi]
  410111:	fcom   DWORD PTR [ebx+0x2d1e78af]
  410117:	(bad)  
  410118:	fdiv   DWORD PTR [ebx+0x53]
  41011b:	jge    0x41019c
  41011d:	enter  0x80de,0x2b
  410121:	push   ds
  410122:	rol    BYTE PTR [edi+0x17855fa8],0x51
  410129:	pop    esp
  41012a:	adc    al,0x8c
  41012c:	sub    bl,BYTE PTR [ecx-0x21ac1f5c]
  410132:	push   es
  410133:	jno    0x410105
  410135:	xor    eax,0xb6cab82a
  41013a:	push   cs
  41013b:	lahf   
  41013c:	aas    
  41013d:	stc    
  41013e:	inc    esp
  41013f:	jge    0x41012f
  410141:	mov    al,ds:0xdcd09170
  410146:	out    0xe3,al
  410148:	hlt    
  410149:	or     bh,cl
  41014b:	out    dx,al
  41014c:	adc    BYTE PTR [eax+0x7cfdb9c0],bh
  410152:	ins    DWORD PTR es:[edi],dx
  410153:	mov    ecx,0xbd038a15
  410158:	das    
  410159:	sub    BYTE PTR [edi-0x4142a632],cl
  41015f:	pop    ds
  410160:	mov    es,WORD PTR [edi+ecx*4]
  410163:	mov    edx,0x37687990
  410168:	push   cs
  410169:	dec    edi
  41016a:	adc    edi,DWORD PTR [edx-0x2c6c3c5d]
  410170:	cld    
  410171:	int3   
  410172:	scas   al,BYTE PTR es:[edi]
  410173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410174:	(bad)  
  410175:	clc    
  410176:	aas    
  410177:	cli    
  410178:	ja     0x410111
  41017a:	push   edi
  41017b:	adc    DWORD PTR [edx],edx
  41017d:	(bad)  
  41017f:	shl    dh,1
  410181:	(bad)  
  410182:	xchg   ebp,eax
  410183:	bound  edx,QWORD PTR [ecx-0xbeb93fe]
  410189:	jae    0x410131
  41018b:	aad    0x6e
  41018d:	fild   DWORD PTR [edi-0x7d]
  410190:	arpl   si,bp
  410192:	nop    DWORD PTR [edi-0x36e16b6a]
  410199:	repnz dec ebp
  41019b:	push   ebx
  41019c:	ss stc 
  41019e:	out    dx,al
  41019f:	scas   eax,DWORD PTR es:[edi]
  4101a0:	mov    ch,0x6b
  4101a2:	xor    al,0xde
  4101a4:	mov    bh,0x8f
  4101a6:	std    
  4101a7:	xchg   BYTE PTR [eax+edx*2-0x1e2f8560],cl
  4101ae:	mov    ecx,0xf4c93b3c
  4101b3:	lea    edx,[ebp+0x3a]
  4101b6:	mov    ?,WORD PTR [edi]
  4101b8:	ror    ecx,cl
  4101ba:	pop    ds
  4101bb:	int    0xe1
  4101bd:	jle    0x4101f6
  4101bf:	or     ebx,DWORD PTR [ecx]
  4101c1:	mov    dl,BYTE PTR [esi+0x70f57c1a]
  4101c7:	imul   ebx,DWORD PTR [ecx+0x70455be4],0xc39b4c0c
  4101d1:	mov    ebp,0xe940fb0c
  4101d6:	(bad)  
  4101d7:	jg     0x4101e5
  4101d9:	scas   al,BYTE PTR es:[edi]
  4101da:	push   ebx
  4101db:	imul   esi,DWORD PTR [ebp+0x7dd3f6ac],0x46
  4101e2:	ror    DWORD PTR [eax],1
  4101e4:	push   edx
  4101e5:	jecxz  0x4101a8
  4101e7:	jg     0x410210
  4101e9:	test   eax,0x6246acad
  4101ee:	shr    DWORD PTR [esp-0x49],1
  4101f2:	pop    edi
  4101f3:	push   esi
  4101f4:	push   ebx
  4101f5:	pop    ebp
  4101f6:	clc    
  4101f7:	je     0x410218
  4101f9:	leave  
  4101fa:	aas    
  4101fb:	and    al,0xd4
  4101fd:	inc    esi
  4101fe:	std    
  4101ff:	jl     0x4101a5
  410201:	dec    ebx
  410202:	stos   BYTE PTR es:[edi],al
  410203:	jmp    0xbb01ee7
  410208:	mov    eax,0xb611f3c1
  41020d:	pushf  
  41020e:	repz adc BYTE PTR [ecx-0x5fe6b0d2],al
  410215:	aad    0xf5
  410217:	xor    ebp,edi
  410219:	fs mov ebx,0x126fc539
  41021f:	pop    edi
  410220:	enter  0x8cdc,0xa
  410224:	lods   al,BYTE PTR ds:[esi]
  410225:	xchg   esi,eax
  410226:	ret    0xb4e0
  410229:	mov    DWORD PTR [edi],esi
  41022b:	ins    BYTE PTR es:[edi],dx
  41022c:	das    
  41022d:	(bad)  
  41022e:	dec    esp
  41022f:	(bad)  [ebx+0xa]
  410232:	(bad)  
  410233:	push   ebp
  410234:	cmp    BYTE PTR [ebx],0xbc
  410237:	mov    eax,ds:0xf806147f
  41023c:	mov    al,ds:0x332f7767
  410241:	jmp    0xf41c:0x3afa6c53
  410248:	pop    eax
  410249:	sbb    ebp,DWORD PTR [edi+ecx*1+0x7]
  41024d:	inc    ecx
  41024e:	pushf  
  41024f:	pop    ss
  410250:	(bad)  
  410251:	mov    eax,0x5309c5f5
  410256:	push   ecx
  410257:	cld    
  410258:	cmc    
  410259:	pop    ds
  41025a:	(bad)  
  41025b:	xchg   edx,eax
  41025c:	push   0x3e14d29f
  410261:	call   0x8d0758c9
  410266:	jb     0x410285
  410268:	jp     0x4101fe
  41026a:	fwait
  41026b:	and    ebp,DWORD PTR [ecx]
  41026d:	popf   
  41026e:	cwde   
  41026f:	sub    edi,ebx
  410271:	push   esi
  410272:	scas   eax,DWORD PTR es:[edi]
  410273:	mov    bl,BYTE PTR [ebx+0x57]
  410276:	xor    al,0x7b
  410278:	rcl    al,1
  41027a:	inc    ebx
  41027b:	xor    BYTE PTR [ebx-0x3b],0xc1
  41027f:	ror    DWORD PTR [esi-0x2a],0xd3
  410283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410284:	xchg   ebx,eax
  410285:	mov    eax,edx
  410287:	cmp    DWORD PTR [ebp+0xc],eax
  41028a:	jne    0x41195a
  410290:	mov    eax,DWORD PTR [esi]
  410292:	mov    edx,DWORD PTR [esi+0x4]
  410295:	mov    eax,DWORD PTR [esi]
  410297:	mov    edx,DWORD PTR [esi+0x4]
  41029a:	mov    edx,eax
  41029c:	jmp    0x410826
  4102a1:	shr    esi,cl
  4102a3:	ror    dh,cl
  4102a5:	shl    BYTE PTR [edx-0x1e636d6d],cl
  4102ab:	loopne 0x410321
  4102ad:	mov    ecx,0x47ae7c89
  4102b2:	pushw  ss
  4102b4:	push   ss
  4102b5:	cmp    eax,0xd1161604
  4102ba:	or     edx,DWORD PTR [eax+0x5b979a37]
  4102c0:	daa    
  4102c1:	gs inc esi
  4102c3:	push   ss
  4102c4:	jecxz  0x410277
  4102c6:	outs   dx,DWORD PTR ds:[esi]
  4102c7:	les    ebx,FWORD PTR [esi]
  4102c9:	shr    DWORD PTR [ebx+0x79],1
  4102cc:	mov    ebx,0xc13afb28
  4102d1:	pop    ecx
  4102d2:	call   0xaf13c520
  4102d7:	mov    ah,0x27
  4102d9:	ins    BYTE PTR es:[edi],dx
  4102da:	mov    dl,0xfc
  4102dc:	icebp  
  4102dd:	clc    
  4102de:	xor    al,0xda
  4102e0:	push   edi
  4102e1:	test   al,0x58
  4102e3:	mov    edi,ds
  4102e5:	jbe    0x410313
  4102e7:	jmp    0xab348ea0
  4102ec:	leave  
  4102ed:	jecxz  0x410349
  4102ef:	(bad)  
  4102f0:	jmp    0x9bbe:0xd880de3c
  4102f7:	std    
  4102f8:	mov    eax,0xfb58f6d9
  4102fd:	fnsave [ebp+0x6c3d8af1]
  410303:	mov    bh,0x25
  410305:	inc    esi
  410306:	aad    0x20
  410308:	loopne 0x410351
  41030a:	jno    0x410314
  41030c:	cdq    
  41030d:	stc    
  41030e:	jne    0x4102ba
  410310:	or     eax,0xdc69843a
  410315:	popa   
  410316:	jne    0x4102c2
  410318:	pop    eax
  410319:	mov    dl,0x41
  41031b:	rol    DWORD PTR [ecx+edx*1],cl
  41031e:	mov    eax,0x3cb1ae4f
  410323:	push   esp
  410324:	in     eax,dx
  410325:	sbb    DWORD PTR [edx-0x685b0cc3],0x2e
  41032c:	or     esi,0xed60b3bc
  410332:	mov    eax,0xa5690b7b
  410337:	and    DWORD PTR gs:[edx+edi*8+0x1be53270],ecx
  41033f:	sbb    eax,0x29ce3c6f
  410344:	jbe    0x4102f0
  410346:	(bad)  
  410347:	mov    edi,0xe69f542c
  41034c:	push   ebx
  41034d:	sub    al,0xd1
  41034f:	shl    DWORD PTR [ebp-0x73],0x3a
  410353:	jmp    0x410391
  410355:	hlt    
  410356:	xchg   dl,bh
  410358:	fsubr  DWORD PTR [edx-0x26b39534]
  41035e:	mov    al,ds:0x39596924
  410363:	cs add al,0x33
  410366:	out    0xd0,eax
  410368:	cmp    al,0x59
  41036a:	add    ebx,DWORD PTR [eax+0x9]
  41036d:	fild   DWORD PTR [ebx+0x24691ea9]
  410373:	dec    edx
  410374:	jne    0x4103c2
  410376:	jl     0x410313
  410378:	xchg   ecx,eax
  410379:	adc    BYTE PTR [eax+0x14dd834],dh
  41037f:	jno    0x4103c7
  410381:	ret    
  410382:	inc    edx
  410383:	hlt    
  410384:	out    dx,al
  410385:	pop    edi
  410386:	cs adc eax,0x2db8580e
  41038c:	sahf   
  41038d:	mov    esi,ecx
  41038f:	mov    WORD PTR [ebp+0x42],cs
  410392:	push   ss
  410393:	dec    ebx
  410394:	sahf   
  410395:	jns    0x4103f6
  410397:	push   eax
  410398:	outs   dx,DWORD PTR ds:[esi]
  410399:	xlat   BYTE PTR ds:[ebx]
  41039a:	rcr    ch,0xc0
  41039d:	in     eax,0x5
  41039f:	repz xor DWORD PTR [eax-0x472e2ca0],0x1d0b83ad
  4103aa:	sbb    eax,0x15893baf
  4103af:	mov    bh,al
  4103b1:	pop    ds
  4103b2:	jno    0x41041b
  4103b4:	ins    BYTE PTR es:[edi],dx
  4103b5:	mov    DWORD PTR [edx],edi
  4103b7:	pop    edx
  4103b8:	add    bl,al
  4103ba:	adc    bh,0xc1
  4103bd:	outs   dx,BYTE PTR ds:[esi]
  4103be:	push   eax
  4103bf:	mov    esi,0x2a34eadb
  4103c4:	icebp  
  4103c5:	jo     0x410379
  4103c7:	(bad)  
  4103c9:	scas   eax,DWORD PTR es:[edi]
  4103ca:	jle    0x410351
  4103cc:	push   es
  4103cd:	xor    DWORD PTR [esi-0x3163b28a],0x6e
  4103d4:	mov    eax,ds:0x61362dba
  4103d9:	lods   eax,DWORD PTR ds:[esi]
  4103da:	cmp    ebx,DWORD PTR [esp+esi*2+0xf9f09]
  4103e1:	(bad)
  4103e4:	mov    dl,0x8a
  4103e6:	push   0x6a0be695
  4103eb:	add    BYTE PTR [eax-0x632d4c9e],al
  4103f1:	mov    WORD PTR [edi-0x567c0a69],ds
  4103f7:	dec    ebx
  4103f8:	jmp    0xcc8ed23e
  4103fd:	dec    edx
  4103fe:	enter  0x339f,0x79
  410402:	scas   eax,DWORD PTR es:[edi]
  410403:	loopne 0x4103db
  410405:	cmp    BYTE PTR [edi-0x7e],bl
  410408:	adc    ebp,DWORD PTR [edx+0x1361034c]
  41040e:	test   eax,0x7671c473
  410413:	icebp  
  410414:	add    esp,ebx
  410416:	xor    BYTE PTR [esi+edi*8-0x61],0x41
  41041b:	cld    
  41041c:	(bad)  
  41041d:	dec    esi
  41041e:	not    cl
  410420:	dec    ebp
  410421:	test   DWORD PTR [edi],0x1c4b4f2f
  410427:	out    0x60,al
  410429:	cmp    bl,BYTE PTR [ecx]
  41042b:	hlt    
  41042c:	inc    edx
  41042d:	scas   al,BYTE PTR es:[edi]
  41042e:	xor    cl,BYTE PTR [ebp+0x5e]
  410431:	int3   
  410432:	popf   
  410433:	scas   eax,DWORD PTR es:[edi]
  410434:	pop    ecx
  410435:	sub    al,0xe9
  410437:	loop   0x410436
  410439:	xor    eax,0x5b8c46cf
  41043e:	push   eax
  41043f:	sub    ebx,ecx
  410441:	xchg   esp,eax
  410442:	cmp    BYTE PTR ds:0x3aba6fc2,dl
  410448:	fwait
  410449:	outs   dx,DWORD PTR ds:[esi]
  41044a:	mov    ss,WORD PTR [edi]
  41044c:	dec    ebp
  41044d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41044e:	leave  
  41044f:	jge    0x4104c5
  410451:	dec    esi
  410452:	das    
  410453:	xchg   esi,eax
  410454:	adc    DWORD PTR [ebx-0x2c238bff],esi
  41045a:	imul   edx,DWORD PTR [esi+eax*2+0x6e],0x47
  41045f:	out    0x8a,al
  410461:	fsubr  st,st(6)
  410463:	jae    0x410459
  410465:	mov    eax,ds:0xb73f105e
  41046a:	es push eax
  41046c:	ja     0x410449
  41046e:	js     0x410474
  410470:	in     al,dx
  410471:	jmp    0x41041a
  410473:	(bad)  
  410475:	fwait
  410476:	cmp    BYTE PTR [ebp-0x35],al
  410479:	test   eax,0xd9b68cc1
  41047e:	adc    ebx,DWORD PTR fs:[edx+0x169935a3]
  410485:	xchg   esp,eax
  410486:	xor    DWORD PTR [edi],ecx
  410488:	fisttp DWORD PTR [edi]
  41048a:	not    BYTE PTR [ebx-0x620e7657]
  410490:	adc    al,0xc3
  410492:	or     ebx,ecx
  410494:	outs   dx,DWORD PTR ds:[esi]
  410495:	arpl   WORD PTR [edx-0x4a],bp
  410498:	out    0x70,al
  41049a:	pop    ebp
  41049b:	jl     0x4104ef
  41049d:	test   BYTE PTR [ebx+esi*2+0x4fa823e1],0xdd
  4104a5:	or     BYTE PTR [eax+0xf612854],bl
  4104ab:	inc    eax
  4104ac:	xchg   esp,eax
  4104ad:	pushf  
  4104ae:	sbb    al,0x41
  4104b0:	out    0x3f,eax
  4104b2:	or     ebx,ebx
  4104b4:	add    al,0x46
  4104b6:	xor    BYTE PTR [eax+0x22fed65c],0xa0
  4104bd:	sbb    DWORD PTR [esi+0x6e215a19],0xbf06aa17
  4104c7:	lea    edx,[ecx-0x858b77c]
  4104cd:	stos   DWORD PTR es:[edi],eax
  4104ce:	xchg   ecx,eax
  4104cf:	xchg   DWORD PTR [edi],ebx
  4104d1:	inc    esi
  4104d2:	sbb    al,0xf
  4104d4:	jbe    0x4104c7
  4104d6:	loop   0x4104d9
  4104d8:	call   0xf768:0xd95c1e31
  4104df:	dec    eax
  4104e0:	jmp    0x57be:0xb15defc2
  4104e7:	pop    ss
  4104e8:	and    al,BYTE PTR [edx-0x63]
  4104eb:	ret    
  4104ec:	xchg   edx,eax
  4104ed:	push   cs
  4104ee:	(bad)  
  4104ef:	xchg   edx,eax
  4104f0:	mov    ebp,0xb867c959
  4104f5:	mov    ebx,0xf4ab2ad4
  4104fa:	sub    BYTE PTR [edi+0xd],dl
  4104fd:	inc    esi
  4104fe:	(bad)
  410501:	jmp    0x19e5:0x35ea31b0
  410508:	mov    edx,DWORD PTR [eax]
  41050a:	mov    esi,0x8d4c0644
  41050f:	inc    ecx
  410510:	xlat   BYTE PTR ds:[ebx]
  410511:	add    eax,0x722593e6
  410516:	dec    ebp
  410517:	dec    eax
  410518:	fbld   TBYTE PTR [esi]
  41051a:	jge    0x41053a
  41051c:	lods   eax,DWORD PTR ds:[esi]
  41051d:	pop    esp
  41051e:	sbb    al,0x9a
  410520:	lahf   
  410521:	sub    BYTE PTR [esi+ebx*1+0xd],dl
  410525:	leave  
  410526:	sbb    esi,esi
  410528:	pushf  
  410529:	mov    ds,WORD PTR [edx+0x4021ff75]
  41052f:	(bad)  
  410531:	push   es
  410532:	imul   ebp,DWORD PTR ds:0xe289ae21,0x6a
  410539:	sbb    cl,ah
  41053b:	add    al,0x43
  41053d:	adc    eax,0x6c695eb2
  410542:	js     0x41054b
  410544:	lea    esp,gs:[esi]
  410547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410548:	push   eax
  410549:	mov    ah,0x20
  41054b:	jp     0x410551
  41054d:	xor    ch,BYTE PTR [ebx+0x273c9387]
  410553:	aam    0x61
  410555:	test   DWORD PTR [eax-0x14],edx
  410558:	je     0x410554
  41055a:	out    dx,al
  41055b:	inc    eax
  41055c:	jns    0x410541
  41055e:	mov    edi,0x1e5d6e5f
  410563:	xchg   edi,eax
  410564:	mov    ebp,0x55e56dee
  410569:	iret   
  41056a:	adc    al,0xde
  41056c:	cwde   
  41056d:	push   0xeb598f1d
  410572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410573:	sahf   
  410574:	iret   
  410575:	jmp    0xab2ccf3
  41057a:	out    0x91,eax
  41057c:	push   edx
  41057d:	or     esi,0x2e
  410580:	les    eax,FWORD PTR [eax-0x70]
  410583:	les    ebx,FWORD PTR [edi-0x52b2823d]
  410589:	mov    BYTE PTR [ecx-0x77],al
  41058c:	and    BYTE PTR [esi+0x7a],cl
  41058f:	call   0x41587cd7
  410594:	sub    esp,edi
  410596:	pop    esi
  410597:	shl    BYTE PTR [ebp-0x66],cl
  41059a:	enter  0xe428,0x92
  41059e:	mov    eax,ds:0x8ea29c24
  4105a3:	xchg   edx,eax
  4105a4:	pop    ds
  4105a5:	invd   
  4105a7:	retf   
  4105a8:	loope  0x4105b7
  4105aa:	idiv   BYTE PTR es:[ebx+0x2f1b5c38]
  4105b1:	mov    ch,0xd9
  4105b3:	mov    eax,ds:0x5da795ca
  4105b8:	icebp  
  4105b9:	push   edi
  4105ba:	adc    BYTE PTR [ebx+0x50],0xd1
  4105be:	scas   eax,DWORD PTR es:[edi]
  4105bf:	jns    0x410625
  4105c1:	sub    ebx,DWORD PTR [esi]
  4105c3:	or     BYTE PTR [edi+0x5975edcc],ch
  4105c9:	xchg   BYTE PTR [edi],dh
  4105cb:	and    edi,ecx
  4105cd:	icebp  
  4105ce:	push   es
  4105cf:	inc    esp
  4105d0:	sub    edx,ebx
  4105d2:	leave  
  4105d3:	test   DWORD PTR [ebx-0x75],0xf617ce5b
  4105da:	fcom   QWORD PTR [ebx]
  4105dc:	add    eax,0x7c3e6e79
  4105e1:	cli    
  4105e2:	push   esi
  4105e3:	dec    ecx
  4105e4:	dec    esi
  4105e5:	jo     0x410629
  4105e7:	shr    DWORD PTR [esi+0x41],0xcd
  4105eb:	repnz or bl,BYTE PTR [ebx-0x3d60a6d6]
  4105f2:	xchg   esp,eax
  4105f3:	or     DWORD PTR [eiz*8-0x6dd25489],0x8decb047
  4105fe:	sbb    ch,BYTE PTR [ebx+0x53b9eba6]
  410604:	test   BYTE PTR [ebp-0x73],bh
  410607:	pop    es
  410608:	or     dl,BYTE PTR [ebp+0x74]
  41060b:	lea    edi,[edi]
  41060d:	jnp    0x4105b7
  41060f:	je     0x4105e5
  410611:	clts   
  410613:	dec    ebp
  410614:	jl     0x4105d7
  410616:	mov    al,ds:0x3e114241
  41061b:	sbb    al,0x99
  41061d:	arpl   WORD PTR [ecx-0x127c7320],bp
  410623:	jb     0x4105d2
  410625:	adc    DWORD PTR [esi-0x6ec35b85],eax
  41062b:	push   eax
  41062c:	sbb    BYTE PTR [ebp-0x2d],ah
  41062f:	mov    eax,gs:0x69ad9c97
  410635:	cmp    eax,0xc7e8ac38
  41063a:	gs jne 0x410637
  41063d:	push   ds
  41063e:	pusha  
  41063f:	inc    edi
  410641:	(bad)
  410645:	sti    
  410646:	fstp   DWORD PTR [esi+0x5064662e]
  41064c:	xchg   ebp,eax
  41064d:	ficom  WORD PTR [edi-0x5b84ca72]
  410653:	les    eax,FWORD PTR [ebx+0x58]
  410656:	iret   
  410657:	push   esi
  410658:	mov    ecx,0x1041a12f
  41065d:	mov    BYTE PTR [esi+0x4bb4f4e2],ah
  410663:	pop    esp
  410664:	dec    edi
  410665:	sub    eax,0x5c6e574a
  41066a:	sub    DWORD PTR [ecx+0x4],0xffffff88
  41066e:	je     0x410669
  410670:	jg     0x410669
  410672:	inc    eax
  410673:	test   al,0x79
  410675:	xor    al,0xc0
  410677:	inc    ebp
  410678:	xchg   esp,eax
  410679:	xor    BYTE PTR [ebp+eax*8+0x33],0xb5
  41067e:	and    BYTE PTR [edx-0x54f5191f],0xa
  410685:	mov    BYTE PTR [ebx+0x25e457ef],bl
  41068b:	sub    ecx,esp
  41068d:	rcl    BYTE PTR [esi],1
  41068f:	dec    ecx
  410690:	retf   
  410691:	call   0x35e900b9
  410696:	and    DWORD PTR [eax+edi*4],ebx
  410699:	xor    eax,0xa553858f
  41069e:	lock dec esp
  4106a0:	jge    0x410661
  4106a2:	ja     0x41071a
  4106a4:	loope  0x410671
  4106a6:	cmp    BYTE PTR [ecx],cl
  4106a8:	mov    ah,0xfb
  4106aa:	dec    esp
  4106ab:	mov    ebp,0x194ccf38
  4106b0:	call   0x6f6e:0x1b94e3b5
  4106b7:	sub    DWORD PTR [eax+0x679dd1cf],ebx
  4106bd:	or     al,0xcc
  4106bf:	cmovnp esp,DWORD PTR [esi-0x19]
  4106c3:	xchg   edx,eax
  4106c4:	adc    bl,BYTE PTR [esi+0x68ffc7e8]
  4106ca:	mov    eax,ds:0x8aec965e
  4106cf:	in     al,0x34
  4106d1:	adc    BYTE PTR [edi+0x74],dh
  4106d4:	sbb    bl,al
  4106d6:	adc    ecx,DWORD PTR [esi+0x21e88738]
  4106dc:	in     al,dx
  4106dd:	add    eax,0xdfe21911
  4106e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e3:	mov    edi,0xcf14c32a
  4106e8:	ret    0x5f94
  4106eb:	mov    ecx,0x1d052167
  4106f0:	xor    al,0x42
  4106f2:	inc    edx
  4106f3:	not    DWORD PTR [ecx-0x34db476d]
  4106f9:	lds    eax,FWORD PTR [eax-0x4c303536]
  4106ff:	mov    bh,0xf5
  410701:	ret    0x2e7f
  410704:	push   ecx
  410705:	add    BYTE PTR gs:[eax],0x90
  410709:	adc    edi,DWORD PTR [ebx+0xf786b19]
  41070f:	inc    edx
  410710:	dec    esi
  410711:	stos   BYTE PTR es:[edi],al
  410712:	imul   edi,DWORD PTR [ebx-0x4b],0xc2089c27
  410719:	add    ebp,DWORD PTR [edi-0x5f]
  41071c:	dec    esi
  41071d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41071e:	jp     0x4106b7
  410720:	push   eax
  410721:	jns    0x4106f9
  410723:	mov    WORD PTR [ecx],cs
  410725:	or     bh,BYTE PTR [esi]
  410727:	dec    edi
  410728:	sbb    BYTE PTR [ecx-0x6d],ah
  41072b:	js     0x41070f
  41072d:	mov    WORD PTR [ecx+0x71],?
  410730:	inc    eax
  410731:	xchg   edi,eax
  410732:	rcr    DWORD PTR [ebx+0x4a],cl
  410735:	shr    ebp,cl
  410737:	mov    eax,0x80466e0
  41073c:	pop    edi
  41073d:	into   
  41073e:	add    ch,0xd9
  410741:	sub    ecx,DWORD PTR [edx+edx*4+0x3e]
  410745:	push   esi
  410746:	cdq    
  410747:	outs   dx,BYTE PTR ds:[esi]
  410748:	xchg   ecx,eax
  410749:	sub    BYTE PTR [ebp-0x5eb92f23],cl
  41074f:	stos   BYTE PTR es:[edi],al
  410750:	gs mov ah,0x0
  410753:	loope  0x410709
  410755:	adc    eax,0x8abf0e12
  41075a:	fbstp  TBYTE PTR [edx+0x1d57b5c5]
  410760:	test   DWORD PTR [esi],ecx
  410762:	lods   eax,DWORD PTR ds:[esi]
  410763:	dec    edi
  410764:	jmp    0xeb6d:0x527ca00
  41076b:	inc    ecx
  41076c:	and    DWORD PTR [ebx-0x68635a2b],ecx
  410772:	mov    edx,DWORD PTR [eax]
  410774:	inc    BYTE PTR [esi]
  410776:	mov    al,ds:0xb6715a4f
  41077b:	imul   esp,DWORD PTR [esi+0x62216c3a],0x27839061
  410785:	and    BYTE PTR [ecx+edx*2+0x1467e551],bl
  41078c:	pop    ss
  41078d:	push   ss
  41078e:	fadd   QWORD PTR [esi-0x3e3b4c85]
  410794:	jge    0x4107ad
  410796:	xchg   ebx,eax
  410797:	scas   eax,DWORD PTR es:[edi]
  410798:	sub    edi,DWORD PTR [esi]
  41079a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079b:	out    dx,eax
  41079c:	cmp    ebp,eax
  41079e:	push   ebx
  41079f:	or     BYTE PTR [ebx-0x6f04afe3],al
  4107a5:	cmc    
  4107a6:	xchg   edi,eax
  4107a7:	add    al,0xb1
  4107a9:	sbb    BYTE PTR ds:0x234b8313,dh
  4107af:	fdivr  QWORD PTR [eax+0x15]
  4107b2:	test   eax,0x1928b1a6
  4107b7:	in     al,0x90
  4107b9:	mov    edx,0xcf8d9e07
  4107be:	inc    ebp
  4107bf:	jmp    0x410785
  4107c1:	iret   
  4107c2:	scas   al,BYTE PTR es:[edi]
  4107c3:	rol    DWORD PTR [edx-0x43297bb9],0xad
  4107ca:	mov    al,ds:0x44926111
  4107cf:	push   ss
  4107d0:	ss (bad) 
  4107d2:	icebp  
  4107d3:	sub    esp,DWORD PTR [edx-0x404227f4]
  4107d9:	mov    ds:0xe6d0259e,eax
  4107de:	jmp    0x4107a2
  4107e0:	lock stos BYTE PTR es:[edi],al
  4107e2:	lods   al,BYTE PTR ds:[esi]
  4107e3:	dec    ecx
  4107e4:	call   0xa023:0xb50a64ef
  4107eb:	test   DWORD PTR [ebp-0x5a21b6ff],edx
  4107f1:	mov    ah,0x59
  4107f3:	(bad)  
  4107f4:	scas   eax,DWORD PTR es:[edi]
  4107f5:	jne    0x4107f1
  4107f7:	test   BYTE PTR [ecx],0x38
  4107fa:	and    ch,BYTE PTR [ebx]
  4107fc:	pop    ss
  4107fd:	aaa    
  4107fe:	adc    DWORD PTR [edx-0x7a],0xffffffec
  410802:	stc    
  410803:	in     eax,dx
  410804:	repz sbb BYTE PTR ds:[eax+0x5c999a34],dl
  41080c:	jecxz  0x410814
  41080e:	js     0x4107ab
  410810:	fs dec eax
  410812:	stc    
  410813:	(bad)  
  410815:	ss cld 
  410817:	push   0x8b37b740
  41081c:	loope  0x41088e
  41081e:	cmp    al,0x41
  410820:	ins    BYTE PTR es:[edi],dx
  410821:	aaa    
  410822:	mov    ds:0x3320b486,eax
  410827:	rol    cl,0xe2
  41082a:	push   ds
  41082b:	mov    DWORD PTR [ebp+0x10],eax
  41082e:	jmp    0x410db8
  410833:	mov    DWORD PTR [edi],ebx
  410835:	adc    al,0xee
  410837:	sbb    ah,ah
  410839:	cmp    BYTE PTR [ecx],bl
  41083b:	jne    0x4107e5
  41083d:	es je  0x41083b
  410840:	dec    eax
  410841:	aam    0xa8
  410843:	ins    BYTE PTR es:[edi],dx
  410844:	push   esp
  410845:	push   ss
  410846:	push   ss
  410847:	cmp    eax,0xa8161604
  41084c:	push   ss
  41084d:	in     eax,dx
  41084e:	adc    eax,0xe55e8642
  410853:	stos   BYTE PTR es:[edi],al
  410854:	scas   eax,DWORD PTR es:[edi]
  410855:	cmp    DWORD PTR [edi-0x78],edx
  410858:	mov    ch,0xf8
  41085a:	cmp    bh,BYTE PTR [eax-0x76]
  41085d:	lods   al,BYTE PTR ds:[esi]
  41085e:	push   ebx
  41085f:	mov    al,ds:0xb292710d
  410864:	mov    ds:0x90c2fda3,eax
  410869:	ror    BYTE PTR [ebx-0x76d3a529],cl
  41086f:	adc    eax,0x6a9b333
  410874:	rol    DWORD PTR [ecx],1
  410876:	inc    eax
  410877:	repnz pop esp
  410879:	jmp    0x4108bd
  41087b:	add    DWORD PTR [ebx+esi*2],0x7d
  41087f:	mov    esp,0x19949eb1
  410884:	sub    eax,0xa2e8c6d4
  410889:	fcomip st,st(0)
  41088b:	xor    edi,DWORD PTR [edx+0x3c24b395]
  410891:	ret    
  410892:	jp     0x410891
  410894:	xchg   ebx,eax
  410895:	popf   
  410896:	sub    eax,0xa48add41
  41089b:	(bad)  
  41089c:	push   esp
  41089d:	ja     0x410911
  41089f:	test   DWORD PTR [ebp+edi*4+0x2c20d3e5],0x366e3b7
  4108aa:	cmp    DWORD PTR [esi],ebx
  4108ac:	lahf   
  4108ad:	(bad)  
  4108af:	mov    ds:0x5e6043de,eax
  4108b4:	pop    edi
  4108b5:	jge    0x4108a1
  4108b7:	adc    eax,0x7bdc5210
  4108bc:	cmp    BYTE PTR [edi+0x73f8d130],bh
  4108c2:	loop   0x410919
  4108c4:	mov    al,ds:0xe54ee756
  4108c9:	push   ecx
  4108ca:	enter  0x264,0xc6
  4108ce:	mov    al,ds:0x9c0c335e
  4108d3:	repz xor BYTE PTR [edi],0xea
  4108d7:	add    edi,DWORD PTR [ebx+0x69]
  4108da:	xor    bl,ch
  4108dc:	and    eax,0x11af1536
  4108e1:	sbb    BYTE PTR [ecx+eax*4-0x427fb2c7],cl
  4108e8:	mov    eax,ds:0xbc5c068a
  4108ed:	lahf   
  4108ee:	test   bh,ah
  4108f0:	addr16 pop ds
  4108f2:	mov    edx,0x69c9ca9a
  4108f7:	adc    ecx,DWORD PTR [eax]
  4108f9:	(bad)  
  4108fa:	arpl   WORD PTR [ebx],di
  4108fc:	pop    ss
  4108fd:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4108ff:	mov    al,0xd3
  410901:	ins    BYTE PTR es:[edi],dx
  410902:	mov    dh,0x63
  410904:	popa   
  410905:	mov    eax,ds:0xf532772a
  41090a:	inc    ebx
  41090b:	ret    0x2898
  41090e:	xchg   edi,eax
  41090f:	pop    ebx
  410910:	inc    esp
  410911:	fsubr  QWORD PTR [eax]
  410913:	mov    ds:0x877ce48a,al
  410918:	or     al,0x3f
  41091a:	call   0xaa4e:0x411286fb
  410921:	sub    edi,DWORD PTR [esi]
  410923:	push   ss
  410924:	mov    bl,0xe1
  410926:	sti    
  410927:	aad    0x6e
  410929:	mov    edi,0x6c9b6110
  41092e:	dec    si
  410930:	leave  
  410931:	jne    0x41093e
  410933:	retf   0xb80d
  410936:	int    0x4f
  410938:	push   esi
  410939:	lea    esi,[ebp-0x20]
  41093c:	(bad)  
  41093d:	sub    ch,bh
  41093f:	call   0x41d08346
  410944:	push   0x84dba40
  410949:	or     BYTE PTR [ecx-0x7804f7e1],dh
  41094f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410950:	loope  0x4109bb
  410952:	mov    ah,0xc9
  410954:	xchg   BYTE PTR ds:0xf6b845eb,dl
  41095a:	push   ecx
  41095b:	fs int 0x1f
  41095e:	inc    eax
  41095f:	and    eax,0x148a2462
  410964:	jns    0x410972
  410966:	pop    eax
  410967:	cs push edi
  410969:	add    DWORD PTR [ecx+0x3a],0x6d237134
  410970:	add    edi,DWORD PTR cs:[ecx]
  410973:	mov    edi,0x18d4b776
  410978:	jno    0x410929
  41097a:	mov    al,ds:0x53c29dcc
  41097f:	or     ah,0x15
  410982:	fistp  DWORD PTR [esi-0x7279ee4d]
  410988:	imul   DWORD PTR [ebp+0x2cb9d114]
  41098e:	cmp    BYTE PTR [esi+ecx*8],cl
  410991:	mov    BYTE PTR [eax],0x3c
  410994:	or     BYTE PTR [edi],dl
  410996:	cmp    bl,BYTE PTR [ebx+0x644c4ef1]
  41099c:	rcr    DWORD PTR [edi-0x6d889312],0xea
  4109a3:	add    cl,BYTE PTR [esi-0x27]
  4109a6:	mov    ah,0xd1
  4109a8:	push   0x6c34cb65
  4109ad:	xlat   BYTE PTR ds:[ebx]
  4109ae:	xor    eax,0x81bb2266
  4109b3:	jbe    0x41094e
  4109b5:	imul   esp,DWORD PTR [ebp+0x37da65bb],0xffffffe6
  4109bc:	xchg   BYTE PTR [eax],al
  4109be:	mov    edx,0xc2ce9518
  4109c3:	lods   al,BYTE PTR ds:[esi]
  4109c4:	jno    0x410a10
  4109c6:	retf   
  4109c7:	push   edi
  4109c8:	jne    0x410966
  4109ca:	icebp  
  4109cb:	cmp    DWORD PTR [edi],ecx
  4109cd:	in     eax,dx
  4109ce:	or     edx,edx
  4109d0:	cmp    edx,DWORD PTR [ebx+0x4dac10d2]
  4109d6:	sti    
  4109d7:	cmp    eax,0x8a00a0b5
  4109dc:	ror    BYTE PTR [edx],cl
  4109de:	in     al,0x53
  4109e0:	sub    BYTE PTR [esi],0x7e
  4109e3:	jp     0x410a28
  4109e5:	sbb    cl,BYTE PTR [esi-0x6e]
  4109e8:	imul   eax,DWORD PTR [edx],0x318e753c
  4109ee:	sbb    al,0xe9
  4109f0:	retf   0xc9d
  4109f3:	push   0x743c2011
  4109f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109f9:	jae    0x4109c5
  4109fb:	pop    ebp
  4109fc:	imul   edx,DWORD PTR [esi+0x78],0x28
  410a00:	jns    0x4109db
  410a02:	adc    bh,BYTE PTR [edx-0xfe6dfda]
  410a08:	fistp  QWORD PTR [edx+0x2208bded]
  410a0e:	sti    
  410a0f:	fst    DWORD PTR [ecx+0x2d]
  410a12:	sbb    DWORD PTR [ecx+0xc746faf],edi
  410a18:	imul   ebx
  410a1a:	dec    ebp
  410a1b:	push   ss
  410a1c:	xchg   ecx,eax
  410a1d:	inc    ecx
  410a1e:	mov    esi,0xe3feda41
  410a23:	mov    ebp,0xd082a20c
  410a28:	mov    ?,WORD PTR [edi+0x21bb8ad5]
  410a2e:	lods   al,BYTE PTR ds:[esi]
  410a2f:	jmp    0x272:0x249da244
  410a36:	push   ebx
  410a37:	ret    0x28fc
  410a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a3b:	mov    al,ch
  410a3d:	iret   
  410a3e:	xchg   ebx,eax
  410a3f:	aaa    
  410a40:	push   edx
  410a41:	pop    ds
  410a42:	dec    eax
  410a43:	mov    ebx,ebx
  410a45:	push   eax
  410a46:	add    cl,BYTE PTR [esi]
  410a48:	shl    DWORD PTR [ebp+0x5bb4015d],cl
  410a4e:	cmp    bl,BYTE PTR gs:[edi+0x5]
  410a52:	hlt    
  410a53:	add    DWORD PTR [ecx+0x262c1149],0x9
  410a5a:	dec    DWORD PTR [eax-0x67]
  410a5d:	xlat   BYTE PTR ds:[ebx]
  410a5e:	inc    ebx
  410a5f:	bound  edi,QWORD PTR [ebx]
  410a61:	div    BYTE PTR [edx+0x2163ddf7]
  410a67:	add    DWORD PTR [ebp-0x62eba0f7],esi
  410a6d:	fcom   DWORD PTR ds:[edi+eax*1-0x4]
  410a72:	inc    esi
  410a73:	pushf  
  410a74:	push   ds
  410a75:	mov    esp,0x23cf238d
  410a7a:	pop    ecx
  410a7b:	mov    ch,0x6c
  410a7d:	(bad)  
  410a7e:	fisub  WORD PTR [eax]
  410a80:	repnz add al,0x89
  410a83:	or     eax,DWORD PTR [ebx-0x5a]
  410a86:	jmp    0x753e:0xaaede63c
  410a8d:	shl    BYTE PTR [edx*2-0x51d2a243],1
  410a94:	inc    ecx
  410a95:	cwde   
  410a96:	lea    ebp,[ecx+0x12]
  410a99:	jb     0x410a99
  410a9b:	xor    ebp,esp
  410a9d:	and    BYTE PTR [eax+0x23],0x85
  410aa1:	mov    bh,0x52
  410aa3:	or     eax,0xfc327bb2
  410aa8:	ja     0x410af5
  410aaa:	xchg   edi,eax
  410aab:	mov    eax,ds:0xf38dee45
  410ab0:	pop    eax
  410ab1:	dec    BYTE PTR [edi+0x5b0a2ab4]
  410ab7:	xchg   esp,eax
  410ab8:	data16 and bl,0xbe
  410abc:	hlt    
  410abd:	xchg   esi,eax
  410abe:	nop
  410abf:	cmp    ecx,ecx
  410ac1:	stos   BYTE PTR es:[edi],al
  410ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ac3:	out    0xd9,eax
  410ac5:	scas   al,BYTE PTR es:[edi]
  410ac6:	sub    al,0xc
  410ac8:	xor    ebp,DWORD PTR [eax+eax*4+0x7e3dc07f]
  410acf:	push   ebx
  410ad0:	(bad)  
  410ad2:	loop   0x410ae0
  410ad4:	test   BYTE PTR ds:0xbcd9bb4a,bl
  410ada:	pop    edx
  410adb:	out    0x67,al
  410add:	xchg   ecx,eax
  410ade:	jnp    0x410a87
  410ae0:	pop    edi
  410ae1:	mov    esi,DWORD PTR [eax+0x62]
  410ae4:	xor    edi,DWORD PTR [edi-0x71]
  410ae7:	hlt    
  410ae8:	push   ebx
  410ae9:	pop    es
  410aea:	xor    DWORD PTR [edx-0x5b],esi
  410aed:	mov    edx,0x915632b3
  410af2:	push   ds
  410af3:	adc    al,0xbd
  410af5:	fcomp  QWORD PTR [ecx+0x11]
  410af8:	jmp    0x781:0xb8acb0a1
  410aff:	mov    ebp,0x89441221
  410b04:	push   ebp
  410b05:	sub    ecx,DWORD PTR [ecx+0x59]
  410b08:	pop    eax
  410b09:	in     al,dx
  410b0a:	sti    
  410b0b:	or     BYTE PTR [eax+0x5f655442],cl
  410b11:	mov    WORD PTR [ecx+0x7d218e49],gs
  410b17:	add    DWORD PTR [edi],0xffffff88
  410b1a:	imul   esi,DWORD PTR [ecx-0x5a1c1091],0x7
  410b21:	jno    0x410af4
  410b23:	pusha  
  410b24:	mov    ds:0xd8553524,al
  410b29:	dec    ebp
  410b2a:	xor    DWORD PTR [ecx-0x774b1665],ebx
  410b30:	dec    esi
  410b31:	jno    0x410b45
  410b33:	sbb    al,0x60
  410b35:	not    ecx
  410b37:	dec    edi
  410b38:	inc    esp
  410b39:	scas   al,BYTE PTR es:[edi]
  410b3a:	pop    ebx
  410b3b:	fcom   DWORD PTR [ecx+0x7a]
  410b3e:	mov    edi,0xa8eba779
  410b43:	sub    eax,0xebec7cec
  410b48:	add    esp,DWORD PTR [edx+0x24]
  410b4b:	outs   dx,BYTE PTR ds:[si]
  410b4d:	fwait
  410b4e:	pusha  
  410b4f:	sub    DWORD PTR [edi+ebp*4-0x30],ecx
  410b53:	cmp    DWORD PTR [eax-0x7a25d3a4],esp
  410b59:	cmp    eax,0x64d70e25
  410b5e:	push   ds
  410b5f:	or     al,0x9d
  410b61:	pop    es
  410b62:	(bad)  
  410b63:	mov    ?,WORD PTR [edi-0x3f]
  410b66:	add    bh,BYTE PTR [ebp-0x7e6b907d]
  410b6c:	call   0x4091eb5e
  410b71:	xor    dl,BYTE PTR [esi-0x1d]
  410b74:	jmp    0x410b33
  410b76:	inc    ebx
  410b77:	or     ecx,DWORD PTR [eax]
  410b79:	inc    ebp
  410b7a:	pop    esp
  410b7b:	test   al,0xed
  410b7d:	sbb    ah,BYTE PTR [edi-0x67c699f9]
  410b83:	inc    edx
  410b84:	ss inc ecx
  410b86:	jle    0x410b8d
  410b88:	retf   0x8dc6
  410b8b:	cmp    esi,ecx
  410b8d:	rcr    BYTE PTR ds:0x101f2f0c,1
  410b93:	jmp    0x9e97:0xd05f03c4
  410b9a:	jg     0x410b65
  410b9c:	out    0x43,eax
  410b9e:	aas    
  410b9f:	push   edi
  410ba0:	div    dh
  410ba2:	cdq    
  410ba3:	mov    BYTE PTR fs:[ebp-0x4c6ba3ce],dh
  410baa:	jge    0x410c12
  410bac:	cdq    
  410bad:	jmp    DWORD PTR [edi]
  410baf:	into   
  410bb0:	xor    al,0x4b
  410bb2:	fwait
  410bb3:	add    dl,BYTE PTR [eax-0x534d10ff]
  410bb9:	pop    ecx
  410bba:	push   ebp
  410bbb:	inc    edi
  410bbc:	stos   BYTE PTR es:[edi],al
  410bbd:	mov    edx,0x57d5dcb8
  410bc2:	and    eax,0xec7f60ef
  410bc7:	xor    bl,BYTE PTR [esp+esi*8-0x803ed21]
  410bce:	sub    al,0x31
  410bd0:	mov    esi,0xc5948a90
  410bd5:	add    BYTE PTR [ecx-0x2b],bl
  410bd8:	shl    BYTE PTR [esi-0x35],cl
  410bdb:	xchg   esp,eax
  410bdc:	pop    ebp
  410bdd:	mov    DWORD PTR [edi],edx
  410bdf:	xchg   ebp,eax
  410be0:	jmp    0x5a7d:0x57cc9f9d
  410be7:	adc    BYTE PTR ds:0x9292a861,ah
  410bed:	mov    es,WORD PTR [ecx-0x22e881c5]
  410bf3:	(bad)  
  410bf4:	sar    DWORD PTR [edi-0x637d5675],cl
  410bfa:	outs   dx,BYTE PTR ds:[esi]
  410bfb:	dec    edx
  410bfc:	and    al,BYTE PTR [ebx]
  410bfe:	stc    
  410bff:	push   esp
  410c00:	popa   
  410c01:	push   ebp
  410c02:	int    0xbd
  410c04:	aad    0x70
  410c06:	sub    ebp,esi
  410c08:	jle    0x410bb8
  410c0a:	cmc    
  410c0b:	bound  ebp,QWORD PTR [edx+0x53]
  410c0e:	xor    ah,BYTE PTR [ecx]
  410c10:	je     0x410c11
  410c12:	xchg   ebp,eax
  410c13:	fisttp QWORD PTR [esi+ebx*2]
  410c16:	mov    ch,0x8b
  410c18:	cwde   
  410c19:	adc    DWORD PTR [ebx],0xfffffffa
  410c1c:	or     BYTE PTR [esp+ecx*8-0x4c98beb4],0x78
  410c24:	dec    esp
  410c25:	mul    BYTE PTR [edi+edx*1]
  410c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c29:	cmp    edx,DWORD PTR [ebx+0x5f]
  410c2c:	fptan  
  410c2e:	mov    bh,0xf6
  410c30:	rol    di,1
  410c33:	push   ss
  410c34:	sub    al,0xf7
  410c36:	cmp    edi,DWORD PTR [eax+0x47]
  410c39:	mov    bl,0x1c
  410c3b:	test   DWORD PTR [eax],edi
  410c3d:	adc    BYTE PTR [ebp-0x65ea1f1e],bl
  410c43:	mov    al,0xb9
  410c45:	mov    bh,0xb2
  410c47:	cmp    eax,0xd7972caa
  410c4c:	jns    0x410c3c
  410c4e:	and    ah,BYTE PTR [edx+0x92148b5]
  410c54:	loope  0x410c82
  410c56:	jnp    0x410c5f
  410c58:	adc    BYTE PTR [edx+eax*2-0x17],ch
  410c5c:	xlat   BYTE PTR ds:[ebx]
  410c5d:	out    dx,eax
  410c5e:	jp     0x410c9b
  410c60:	sub    eax,0x8aa59a41
  410c65:	pusha  
  410c66:	add    eax,0xca466426
  410c6b:	or     eax,0xb42b9969
  410c70:	push   ebx
  410c71:	sbb    eax,0xc0c9087d
  410c76:	add    ecx,ecx
  410c78:	pop    edi
  410c79:	mov    ah,0xab
  410c7b:	dec    ecx
  410c7c:	ret    0x4f53
  410c7f:	inc    ebp
  410c80:	(bad)  
  410c81:	sbb    dh,bh
  410c83:	aas    
  410c84:	pop    ebp
  410c85:	(bad)  
  410c86:	sub    eax,0x1f87ab32
  410c8b:	push   dx
  410c8d:	test   BYTE PTR [edi+0x68b031de],ah
  410c93:	and    DWORD PTR [ebx],edi
  410c95:	pop    ebx
  410c96:	inc    ecx
  410c97:	scas   al,BYTE PTR es:[edi]
  410c98:	mov    eax,0xd58aea14
  410c9d:	pushf  
  410c9e:	pop    ebp
  410c9f:	add    al,0x4c
  410ca1:	pop    edx
  410ca2:	in     eax,dx
  410ca3:	into   
  410ca4:	nop
  410ca5:	jnp    0x410c7c
  410ca7:	adc    edx,DWORD PTR [ebp+0x6995018c]
  410cad:	stos   BYTE PTR es:[edi],al
  410cae:	xchg   edi,eax
  410caf:	jae    0x410cac
  410cb1:	in     eax,0x13
  410cb3:	pop    ss
  410cb4:	stos   BYTE PTR es:[edi],al
  410cb5:	pushf  
  410cb6:	fsub   st(6),st
  410cb8:	lods   al,BYTE PTR ds:[esi]
  410cb9:	xor    ecx,ecx
  410cbb:	jne    0x410cc4
  410cbd:	adc    esp,DWORD PTR [edx-0x51]
  410cc0:	shl    BYTE PTR [ebx],cl
  410cc2:	sbb    DWORD PTR [eax+ebx*2+0x20],eax
  410cc6:	jbe    0x410d30
  410cc8:	loope  0x410cdd
  410cca:	xor    ecx,DWORD PTR [ebp+0x24bd2e96]
  410cd0:	ss mov edx,0x24307254
  410cd6:	inc    edx
  410cd7:	mov    ch,0x6f
  410cd9:	jb     0x410d24
  410cdb:	add    cl,BYTE PTR [esi+edi*8-0x157b2a04]
  410ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce3:	stos   DWORD PTR es:[edi],eax
  410ce4:	stos   DWORD PTR es:[edi],eax
  410ce5:	cwde   
  410ce6:	add    ah,ch
  410ce8:	pop    edx
  410ce9:	sub    edx,edx
  410ceb:	jo     0x410d1d
  410ced:	xor    edi,esi
  410cef:	fst    QWORD PTR [edi+edi*8+0x589986d2]
  410cf6:	xor    BYTE PTR [ebx+0x55],cl
  410cf9:	adc    BYTE PTR [edi],al
  410cfb:	sub    BYTE PTR [esi-0x41],bh
  410cfe:	aaa    
  410cff:	mov    bh,BYTE PTR [ecx+0x5f]
  410d02:	test   al,0xbd
  410d04:	adc    ch,0x84
  410d07:	sahf   
  410d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d09:	adc    eax,0xaf876895
  410d0e:	inc    esp
  410d0f:	jle    0x410d3b
  410d11:	(bad)
  410d15:	rcr    BYTE PTR [edi-0x32e0f7d1],1
  410d1b:	and    BYTE PTR [ebx+edi*2],ch
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	push   cs
  410d20:	dec    edx
  410d21:	or     BYTE PTR [edx],ah
  410d23:	or     eax,0x916b7e61
  410d28:	mov    al,ds:0x649021d2
  410d2d:	shr    BYTE PTR [ebx+0x6c],cl
  410d30:	xchg   ebx,eax
  410d31:	lea    eax,[edi-0x12]
  410d34:	cmp    DWORD PTR [edi-0x63],ecx
  410d37:	seto   BYTE PTR [edi]
  410d3a:	pop    DWORD PTR [eax+ebp*8]
  410d3d:	xor    al,0x31
  410d3f:	fwait
  410d40:	pop    es
  410d41:	inc    edx
  410d42:	cmp    eax,esi
  410d44:	in     al,0xed
  410d46:	inc    esp
  410d47:	ret    
  410d48:	(bad)
  410d4c:	loope  0x410ce1
  410d4e:	cmp    BYTE PTR [ebx+0x65],0x9f
  410d52:	sahf   
  410d53:	icebp  
  410d54:	inc    DWORD PTR [esi-0x7]
  410d57:	std    
  410d58:	push   es
  410d59:	shl    BYTE PTR [ebp+0x1],0x6b
  410d5d:	bnd jle 0x410d64
  410d60:	es push ebx
  410d62:	cmp    dh,BYTE PTR [eax+0xa868379]
  410d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d69:	int3   
  410d6a:	lahf   
  410d6b:	inc    esi
  410d6c:	std    
  410d6d:	mov    dh,0x7c
  410d6f:	add    BYTE PTR [edx],dh
  410d71:	adc    dh,ch
  410d73:	push   es
  410d74:	jbe    0x410d9c
  410d76:	ins    DWORD PTR es:[edi],dx
  410d77:	popa   
  410d78:	popf   
  410d79:	dec    edx
  410d7a:	inc    esp
  410d7b:	push   0xffffffea
  410d7d:	xchg   edx,eax
  410d7e:	xchg   edx,eax
  410d7f:	stc    
  410d80:	lock or esp,DWORD PTR [ebx+0x2]
  410d84:	add    al,0x37
  410d86:	aas    
  410d87:	scas   eax,DWORD PTR es:[edi]
  410d88:	mov    eax,ds:0x5039ddca
  410d8d:	add    DWORD PTR [edi+0x69],ebp
  410d90:	cmp    al,0x5f
  410d92:	pop    ebp
  410d93:	lods   eax,DWORD PTR ds:[esi]
  410d94:	xchg   BYTE PTR [ecx],bl
  410d96:	lea    ecx,[ecx-0x59]
  410d99:	add    al,0xbd
  410d9b:	and    dh,BYTE PTR ds:[edx]
  410d9e:	or     edi,DWORD PTR [edi]
  410da0:	js     0x410d6e
  410da2:	out    dx,al
  410da3:	fs int3 
  410da5:	jmp    0x410d8c
  410da7:	sbb    al,BYTE PTR [ecx]
  410da9:	outs   dx,BYTE PTR ds:[esi]
  410daa:	ins    DWORD PTR es:[edi],dx
  410dab:	push   0xffffffb3
  410dad:	fdivr  QWORD PTR [ecx+0x67]
  410db0:	iret   
  410db1:	call   0x9921:0x9e003d57
  410db8:	mov    eax,DWORD PTR [esi]
  410dba:	xor    edx,0xc0000000
  410dc0:	mov    DWORD PTR [ebp+0x14],edx
  410dc3:	mov    edx,DWORD PTR [esi+0x4]
  410dc6:	xor    eax,0xba699573
  410dcb:	xor    ecx,edx
  410dcd:	shrd   eax,ecx,0x2
  410dd1:	or     eax,DWORD PTR [ebp+0x10]
  410dd4:	shr    ecx,0x2
  410dd7:	mov    DWORD PTR [ebp+0x8],eax
  410dda:	mov    eax,ecx
  410ddc:	or     eax,DWORD PTR [ebp+0x14]
  410ddf:	mov    ecx,DWORD PTR [ebx]
  410de1:	mov    edx,DWORD PTR [ebx+0x4]
  410de4:	push   eax
  410de5:	push   DWORD PTR [ebp+0x8]
  410de8:	push   edx
  410de9:	push   ecx
  410dea:	call   0x41df91
  410def:	mov    eax,DWORD PTR [esi]
  410df1:	mov    ecx,DWORD PTR [esi+0x4]
  410df4:	shrd   eax,ecx,0x2
  410df8:	shr    ecx,0x2
  410dfb:	shr    edx,0x1e
  410dfe:	jmp    0x411388
  410e03:	ret    0x707f
  410e06:	and    eax,0x58c21820
  410e0b:	cmp    DWORD PTR [ebx-0x70],ebp
  410e0e:	outs   dx,BYTE PTR ds:[esi]
  410e0f:	mov    ah,0xb3
  410e11:	adc    DWORD PTR [ebx+ebx*4+0x50],esi
  410e15:	push   ss
  410e16:	push   ss
  410e17:	cmp    eax,0xbb161604
  410e1c:	iret   
  410e1d:	cmp    ah,ah
  410e1f:	jae    0x410e88
  410e21:	xchg   ecx,eax
  410e22:	outs   dx,BYTE PTR ds:[esi]
  410e23:	(bad)  
  410e24:	jmp    0xa4678aaf
  410e29:	lahf   
  410e2a:	jb     0x410dfe
  410e2c:	pop    ecx
  410e2d:	jnp    0x410e48
  410e2f:	mov    al,ds:0xc0bdadf9
  410e34:	pop    ebp
  410e35:	ficom  DWORD PTR ds:0xf6cb325d
  410e3b:	mov    ds:0x15e2ec49,al
  410e40:	adc    DWORD PTR [edx-0x2d889b7c],ebx
  410e46:	nop
  410e47:	mov    ah,0x6d
  410e49:	jmp    0x410ea7
  410e4b:	mov    BYTE PTR gs:0xaf87c25,bh
  410e52:	rcr    BYTE PTR [ecx],cl
  410e54:	(bad)  
  410e55:	out    dx,al
  410e56:	je     0x410eb9
  410e58:	(bad)  
  410e59:	xchg   esi,eax
  410e5a:	out    dx,eax
  410e5b:	xor    DWORD PTR [ecx+0x78],ebx
  410e5e:	dec    eax
  410e5f:	fist   DWORD PTR [edi]
  410e61:	or     al,0x9e
  410e63:	(bad)  
  410e64:	fstp   TBYTE PTR [ebp+0x31]
  410e67:	call   0xd2cf24a2
  410e6c:	fwait
  410e6d:	not    esp
  410e6f:	adc    BYTE PTR [ecx-0x16],dh
  410e72:	stos   DWORD PTR es:[edi],eax
  410e73:	pop    ss
  410e74:	add    BYTE PTR [edx],dh
  410e76:	pop    eax
  410e77:	jne    0x410ea0
  410e79:	xlat   BYTE PTR ds:[ebx]
  410e7a:	sar    BYTE PTR [edx+0x12],cl
  410e7d:	xchg   eax,esp
  410e7f:	xchg   edx,eax
  410e80:	push   ss
  410e81:	and    DWORD PTR [ebx+edx*2],esi
  410e84:	add    eax,0x3433d816
  410e89:	fiadd  WORD PTR [edx]
  410e8b:	test   BYTE PTR [ecx-0x51],0x31
  410e8f:	outs   dx,BYTE PTR ds:[esi]
  410e91:	seta   BYTE PTR [ebp+esi*4-0x59]
  410e96:	cmp    DWORD PTR [ecx],edi
  410e98:	rcl    dh,cl
  410e9a:	sbb    cl,BYTE PTR [ebx+ecx*2-0x18]
  410e9e:	push   esp
  410e9f:	(bad)  
  410ea0:	and    esp,DWORD PTR [ecx]
  410ea2:	rol    DWORD PTR [esi-0x4970e0eb],1
  410ea8:	mov    ebx,0x43ff9c27
  410ead:	imul   ecx,esp,0x7
  410eb0:	push   esp
  410eb1:	mov    edi,0x7da84c0d
  410eb6:	adc    edx,DWORD PTR [edx]
  410eb8:	ret    0x250d
  410ebb:	dec    ecx
  410ebc:	lock xor al,0x7f
  410ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec0:	dec    ebx
  410ec1:	mov    al,ds:0x8231a9ea
  410ec6:	call   0x339552f6
  410ecb:	sub    BYTE PTR [edi+0x691dff8f],ah
  410ed1:	adc    BYTE PTR [esi-0x321d75e1],ch
  410ed7:	mov    ecx,0xd95ec49d
  410edc:	adc    eax,0x33829e54
  410ee1:	dec    eax
  410ee2:	sub    al,0xe6
  410ee4:	mov    ah,0x8
  410ee6:	xchg   ebx,eax
  410ee7:	out    0x84,al
  410ee9:	mov    ah,0x23
  410eeb:	jmp    0x410f6a
  410eed:	or     cl,BYTE PTR [edi+0x5ffa5548]
  410ef3:	(bad)  
  410ef4:	pushf  
  410ef5:	xor    BYTE PTR [eax-0x1f],cl
  410ef8:	sbb    al,0xe3
  410efa:	add    bh,BYTE PTR [ecx]
  410efc:	jge    0x410e9e
  410efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eff:	dec    edi
  410f00:	mov    dl,0x46
  410f02:	imul   DWORD PTR [edi+eax*4]
  410f05:	inc    ebp
  410f06:	and    DWORD PTR [eax+0x2e2dd68a],edx
  410f0c:	in     eax,dx
  410f0d:	and    esi,DWORD PTR [edi+0x3a]
  410f10:	jg     0x410f88
  410f12:	loopne 0x410f56
  410f14:	sub    DWORD PTR [ebx-0x14],esi
  410f17:	aaa    
  410f18:	inc    esp
  410f19:	ja     0x410eb4
  410f1b:	mov    cl,0x86
  410f1d:	or     ecx,esi
  410f1f:	sbb    al,0x9c
  410f21:	sbb    DWORD PTR [esi+0x1a9ad54c],edx
  410f27:	jbe    0x410f11
  410f29:	pop    ss
  410f2a:	stos   DWORD PTR es:[edi],eax
  410f2b:	pusha  
  410f2c:	pop    edi
  410f2d:	mov    BYTE PTR [ecx+0x37],dh
  410f30:	push   ebx
  410f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f32:	mov    ah,0xa8
  410f34:	mov    bl,0x9d
  410f36:	dec    edi
  410f37:	int3   
  410f38:	repnz push ebp
  410f3a:	outs   dx,DWORD PTR ds:[esi]
  410f3b:	dec    ebx
  410f3c:	push   esp
  410f3d:	sub    eax,0x38720786
  410f42:	sbb    eax,0x4354ed1c
  410f47:	inc    ecx
  410f48:	gs xchg edi,eax
  410f4a:	add    DWORD PTR [edi-0x58],esi
  410f4d:	cdq    
  410f4e:	mov    ebp,0x1ca700c7
  410f53:	push   esi
  410f54:	fwait
  410f55:	or     edx,esi
  410f57:	sub    al,0x42
  410f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5a:	push   ebx
  410f5b:	inc    edx
  410f5c:	inc    esp
  410f5d:	or     al,0xc9
  410f5f:	es fadd st(3),st
  410f62:	js     0x410f6f
  410f64:	jmp    0x410ef0
  410f66:	mov    ah,0xe7
  410f68:	iret   
  410f69:	arpl   ax,sp
  410f6b:	fst    DWORD PTR [ebp-0x38]
  410f6e:	call   0x68ac6181
  410f73:	pop    ebx
  410f74:	aas    
  410f75:	loope  0x410f6e
  410f77:	mov    DWORD PTR [ebp+0x5e],esp
  410f7a:	jns    0x410f61
  410f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7d:	scas   al,BYTE PTR es:[edi]
  410f7e:	mov    ecx,0xfcafdad2
  410f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f84:	xor    bh,ch
  410f86:	daa    
  410f87:	adc    bh,BYTE PTR [edi]
  410f89:	out    0xfa,eax
  410f8b:	daa    
  410f8c:	mov    al,al
  410f8e:	xchg   DWORD PTR [ebx-0x6e670ea6],ebx
  410f94:	or     BYTE PTR es:[ebx],dl
  410f97:	call   0x6b0:0x97e3a8ee
  410f9e:	iret   
  410f9f:	mov    WORD PTR [ecx-0x3e],ss
  410fa2:	fwait
  410fa3:	adc    al,0xf4
  410fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa6:	add    DWORD PTR [ecx],esi
  410fa8:	xchg   DWORD PTR [ebp+0x4ad2bb4],ecx
  410fae:	out    dx,al
  410faf:	push   ds
  410fb0:	cli    
  410fb1:	mov    al,0x3a
  410fb3:	jmp    0x6b7324d9
  410fb8:	ret    0xa983
  410fbb:	loopne 0x41103c
  410fbd:	lock les edx,FWORD PTR [edx+0x33]
  410fc1:	out    dx,al
  410fc2:	sub    BYTE PTR [ebx+0x3a],0xf5
  410fc6:	in     eax,0xc2
  410fc8:	outs   dx,DWORD PTR ds:[esi]
  410fc9:	dec    ecx
  410fca:	mov    ebx,0xb936372e
  410fcf:	outs   dx,DWORD PTR ds:[esi]
  410fd0:	mov    bl,0x1d
  410fd2:	pushf  
  410fd3:	pushf  
  410fd4:	rol    DWORD PTR [eax+ecx*1],cl
  410fd7:	ret    0x7656
  410fda:	ror    DWORD PTR [eax-0x62b08f92],cl
  410fe0:	push   ss
  410fe1:	mov    es:0xee9cf3dc,eax
  410fe7:	adc    edx,esp
  410fe9:	xchg   edx,eax
  410fea:	xchg   esi,eax
  410feb:	stos   DWORD PTR es:[edi],eax
  410fec:	push   0xffffffd3
  410fee:	pop    ebx
  410fef:	sahf   
  410ff0:	sbb    dl,ah
  410ff2:	cwde   
  410ff3:	push   dx
  410ff5:	pusha  
  410ff6:	neg    DWORD PTR [ebx+0x3e44f128]
  410ffc:	jp     0x411022
  410ffe:	xor    al,0xcc
  411000:	aad    0x48
  411002:	add    bl,BYTE PTR [esi]
  411004:	xlat   BYTE PTR ds:[ebx]
  411005:	push   ebx
  411006:	xchg   esp,eax
  411007:	add    al,0x70
  411009:	cli    
  41100a:	jmp    0x7be9:0x18b8ad41
  411011:	test   esi,eax
  411013:	addr16 push 0xffffff80
  411016:	mov    al,0x15
  411018:	mov    eax,0xf0ad5c00
  41101d:	les    esi,FWORD PTR [esi+ebx*8+0x41]
  411021:	jge    0x411043
  411023:	add    ecx,esp
  411025:	stos   DWORD PTR es:[edi],eax
  411026:	add    ebx,ebp
  411028:	ficomp WORD PTR [eax+0x55ecb39d]
  41102e:	fwait
  41102f:	test   al,0x65
  411031:	daa    
  411032:	fsubp  st(7),st
  411034:	pop    es
  411035:	xchg   BYTE PTR [esi+0x2864a82e],dl
  41103b:	ret    
  41103c:	xor    al,0x58
  41103e:	int3   
  41103f:	hlt    
  411040:	and    edx,ebx
  411042:	mov    cs,WORD PTR [ecx+0x40b67c90]
  411048:	pushf  
  411049:	(bad)  
  41104a:	js     0x4110a0
  41104c:	retf   
  41104d:	jl     0x410fe7
  41104f:	outs   dx,BYTE PTR ds:[esi]
  411050:	shl    DWORD PTR [ecx+0x911fec6],0x3b
  411057:	enter  0x83d3,0x4a
  41105b:	(bad)  [esi]
  41105d:	jb     0x411077
  41105f:	(bad)  
  411061:	push   ebp
  411062:	data16 (bad) 
  411064:	sti    
  411065:	xlat   BYTE PTR ds:[ebx]
  411066:	popf   
  411067:	icebp  
  411068:	cmova  esi,DWORD PTR [edi-0x698eed1d]
  41106f:	and    DWORD PTR [edi],ecx
  411071:	loop   0x411001
  411073:	popa   
  411074:	imul   esp,DWORD PTR [ecx-0x56b4dded],0x9f5893ae
  41107e:	lods   eax,DWORD PTR ds:[esi]
  41107f:	shl    DWORD PTR [ecx+edi*4+0x52bb5a6b],0x63
  411087:	mov    bh,0xcb
  411089:	(bad)  
  41108a:	add    eax,0x759bd584
  41108f:	or     eax,0xf0dfa791
  411094:	fmul   QWORD PTR [edi-0x4b283d72]
  41109a:	or     DWORD PTR [ecx-0x2a],esi
  41109d:	clc    
  41109e:	popf   
  41109f:	nop
  4110a0:	call   0x2bb6ac9a
  4110a5:	mov    cl,0x9e
  4110a7:	adc    eax,0x9259a110
  4110ac:	aas    
  4110ad:	fst    QWORD PTR [eax+0x8a5bf60]
  4110b3:	pop    ebp
  4110b4:	das    
  4110b5:	mov    ebx,DWORD PTR [edi+0x74824a2b]
  4110bb:	xor    ah,BYTE PTR [ebx+0x1f]
  4110be:	sub    cl,BYTE PTR [ebx-0x551b1842]
  4110c4:	pop    edi
  4110c5:	mov    fs,ebp
  4110c7:	cmp    al,0x6e
  4110c9:	les    edi,FWORD PTR [edx]
  4110cb:	dec    esi
  4110cc:	xor    dh,BYTE PTR [esi-0x1ca51cdd]
  4110d2:	lds    eax,FWORD PTR [edi]
  4110d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d5:	and    DWORD PTR [esi+edi*1+0x63b35c1b],ebx
  4110dc:	mov    al,BYTE PTR [edi]
  4110de:	pop    ds
  4110df:	lods   al,BYTE PTR ds:[esi]
  4110e0:	out    0x9c,al
  4110e2:	inc    ebp
  4110e3:	in     al,dx
  4110e4:	jg     0x411071
  4110e6:	dec    esp
  4110e7:	xor    edx,DWORD PTR [edx]
  4110e9:	add    dh,dl
  4110eb:	(bad)  
  4110ec:	das    
  4110ed:	es stc 
  4110ef:	jb     0x4110d1
  4110f1:	xor    ebx,DWORD PTR [edx+eax*1]
  4110f4:	aaa    
  4110f5:	push   es
  4110f6:	(bad)  
  4110f7:	jg     0x411159
  4110f9:	or     bh,BYTE PTR [esp+edx*1-0x6d]
  4110fd:	repnz pop ebx
  4110ff:	leave  
  411100:	jb     0x4110a5
  411102:	push   0x3
  411104:	imul   ebx,DWORD PTR ds:0x4bb954fc,0x3c2d83f6
  41110e:	cmp    BYTE PTR [eax],ch
  411110:	ja     0x4110f0
  411112:	repz sbb eax,edx
  411115:	inc    eax
  411116:	mov    dh,0x33
  411118:	outs   dx,BYTE PTR ds:[esi]
  411119:	xor    eax,0xc52955b
  41111e:	in     al,0x54
  411120:	icebp  
  411121:	das    
  411122:	xchg   edi,eax
  411123:	pop    ebp
  411124:	popf   
  411125:	inc    edx
  411126:	jns    0x4110c0
  411128:	inc    esi
  411129:	sbb    cl,BYTE PTR [esp+esi*2-0x2f7e70e5]
  411130:	arpl   WORD PTR [eax],di
  411132:	mov    ch,0xcc
  411134:	mov    esp,0x901ec1a3
  411139:	andps  xmm0,XMMWORD PTR [edi+0x38d5747c]
  411140:	std    
  411141:	add    eax,0x43e0d9ec
  411146:	fmul   QWORD PTR [edx+eax*2+0x3]
  41114a:	ret    0x4f19
  41114d:	xchg   edx,eax
  41114e:	lods   eax,DWORD PTR ds:[esi]
  41114f:	inc    edi
  411150:	cmp    eax,0x840d9052
  411155:	inc    ecx
  411156:	ror    esi,0x41
  411159:	or     eax,esi
  41115b:	jmp    0x18d1c55f
  411160:	into   
  411161:	pop    edx
  411162:	(bad)  
  411164:	jnp    0x4111b5
  411166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411167:	in     al,dx
  411168:	fucomp st(6)
  41116a:	mov    cl,0x14
  41116c:	sub    bl,BYTE PTR [edi]
  41116e:	and    al,0x86
  411170:	sub    al,0x54
  411172:	adc    DWORD PTR [ebx-0x1b521d61],esp
  411178:	jecxz  0x4111b0
  41117a:	inc    esi
  41117b:	and    BYTE PTR [ebp+eax*2-0x60],ch
  41117f:	inc    esp
  411180:	test   BYTE PTR [ecx-0x6],0xb4
  411184:	mov    ds:0xaec4021e,al
  411189:	add    esp,DWORD PTR ds:0xda8b28a0
  41118f:	in     al,dx
  411190:	pop    eax
  411191:	adc    DWORD PTR [esi-0x55657c4d],ecx
  411197:	(bad)  
  411198:	loop   0x41117e
  41119a:	out    dx,al
  41119b:	dec    eax
  41119c:	sbb    BYTE PTR [ecx],0x86
  41119f:	pop    ds
  4111a0:	cmp    DWORD PTR [ecx-0x46],esi
  4111a3:	jmp    DWORD PTR [esi+0x32]
  4111a6:	(bad)  
  4111a7:	push   esp
  4111a8:	or     DWORD PTR [edx],esp
  4111aa:	xor    bh,BYTE PTR [bx+si]
  4111ad:	mov    al,0x10
  4111af:	aas    
  4111b0:	xchg   bl,bh
  4111b2:	lds    eax,FWORD PTR [ebp+0x7fc1fbcf]
  4111b8:	imul   eax,DWORD PTR [ebx-0x25cb602f],0x36
  4111bf:	or     DWORD PTR [ebp-0x5d22e8b1],esp
  4111c5:	push   esi
  4111c6:	and    BYTE PTR [edi],al
  4111c8:	add    BYTE PTR [edi-0x6d852d89],ch
  4111ce:	rcl    DWORD PTR [esi+ebx*4],cl
  4111d1:	xor    BYTE PTR es:[ebp-0x4e],dl
  4111d5:	mov    dl,0x63
  4111d7:	(bad)
  4111db:	or     ebp,DWORD PTR ds:0x91b14098
  4111e1:	dec    ebx
  4111e2:	cmp    BYTE PTR [esi+0x35],0x28
  4111e6:	paddw  mm5,QWORD PTR [eax]
  4111e9:	mov    esi,edx
  4111eb:	daa    
  4111ec:	or     al,0x5d
  4111ee:	and    al,0x7e
  4111f0:	js     0x411232
  4111f2:	cld    
  4111f3:	stc    
  4111f4:	cdq    
  4111f5:	(bad)  
  4111f6:	into   
  4111f7:	mov    ebp,0x86bb37b2
  4111fc:	mov    WORD PTR [edi+esi*1-0x45b58020],fs
  411203:	xchg   esp,eax
  411204:	out    0x2e,al
  411206:	ins    DWORD PTR es:[edi],dx
  411207:	xchg   esp,eax
  411208:	lods   eax,DWORD PTR ds:[esi]
  411209:	cmp    BYTE PTR [eax-0x55],dl
  41120c:	mov    bl,dh
  41120e:	and    al,0x61
  411210:	push   ds
  411211:	mov    DWORD PTR [edi+0x205aa0a],ebx
  411217:	loope  0x4111ed
  411219:	jno    0x41123a
  41121b:	enter  0x299a,0x7c
  41121f:	xor    DWORD PTR [ecx-0x4ec8cf54],eax
  411225:	mov    ds:0x6caa6481,eax
  41122a:	jmp    DWORD PTR [ebp-0x21]
  41122d:	push   cs
  41122e:	sbb    edx,ebp
  411230:	jbe    0x411222
  411232:	mov    ebx,0xc8b4137c
  411237:	fnstenv [esi+0x2c6ca0a0]
  41123d:	jo     0x411221
  41123f:	dec    edx
  411240:	sbb    al,0x53
  411242:	sbb    al,ah
  411244:	cmp    bl,BYTE PTR [esi-0x1ec39028]
  41124a:	pop    edx
  41124b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41124c:	stc    
  41124d:	inc    edi
  41124e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124f:	retf   0xacf9
  411252:	inc    edi
  411253:	lea    ebx,[esi+0x2e04c4c4]
  411259:	pop    edi
  41125a:	fwait
  41125b:	mov    edx,0x7587560b
  411260:	pop    esi
  411261:	fdivr  QWORD PTR [edx-0x41]
  411264:	jg     0x411219
  411266:	cdq    
  411267:	dec    edi
  411268:	xchg   edx,eax
  411269:	pop    ebx
  41126a:	push   esp
  41126b:	add    DWORD PTR [esi+ebp*8-0x1d01d849],ebp
  411272:	cmp    ebp,DWORD PTR [edi]
  411274:	inc    eax
  411275:	sub    al,0xd9
  411277:	push   esi
  411278:	ror    BYTE PTR [edx-0x17],0x49
  41127c:	jp     0x41129c
  41127e:	jae    0x4112e0
  411280:	mov    esp,0x6d39a819
  411285:	dec    esi
  411286:	sub    al,0xe
  411288:	add    eax,DWORD PTR [edi]
  41128a:	push   0x3
  41128c:	nop
  41128d:	adc    BYTE PTR [ecx+0x5ea36892],0xe1
  411294:	ret    
  411295:	xchg   esi,eax
  411296:	(bad)  [eax-0x2d336d7f]
  41129c:	mov    ?,eax
  41129e:	jnp    0x411239
  4112a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a1:	out    0xad,eax
  4112a3:	pop    ebp
  4112a4:	popf   
  4112a5:	lods   al,BYTE PTR ds:[esi]
  4112a6:	and    BYTE PTR ds:0xc5b28584,0xa3
  4112ad:	shl    ebp,1
  4112af:	and    edx,DWORD PTR [ecx]
  4112b1:	xchg   esp,eax
  4112b2:	lahf   
  4112b3:	std    
  4112b4:	test   al,0xc3
  4112b6:	jl     0x411287
  4112b8:	and    al,0x71
  4112ba:	or     BYTE PTR [edi-0x69],al
  4112bd:	out    0x6,eax
  4112bf:	dec    eax
  4112c0:	fist   DWORD PTR [eax-0x10]
  4112c3:	jo     0x411312
  4112c5:	call   0x1fc5:0xa9acce98
  4112cc:	mov    ebx,DWORD PTR [esi]
  4112ce:	mov    cs,WORD PTR [ecx-0x390289d0]
  4112d4:	out    dx,al
  4112d5:	jg     0x4112b2
  4112d7:	mov    eax,ds:0xaeaa13e1
  4112dc:	nop
  4112dd:	sbb    BYTE PTR [edx-0x4b7bfc1e],ch
  4112e3:	nop
  4112e4:	(bad)  
  4112e5:	push   0xe2875520
  4112ea:	xchg   esp,eax
  4112eb:	xchg   ecx,eax
  4112ec:	xchg   ecx,eax
  4112ed:	xchg   edi,eax
  4112ee:	fs jb  0x411351
  4112f1:	or     al,0x7b
  4112f3:	out    dx,eax
  4112f4:	icebp  
  4112f5:	sbb    ebp,edi
  4112f7:	jp     0x411362
  4112f9:	mov    ds:0xe34fbf11,al
  4112fe:	test   al,0x2b
  411300:	jb     0x4112bd
  411302:	(bad)  
  411303:	or     bl,BYTE PTR [esi-0x7e]
  411306:	je     0x411385
  411308:	aad    0xa4
  41130a:	and    bh,BYTE PTR [ebp-0x17]
  41130d:	jo     0x411292
  41130f:	stos   DWORD PTR es:[edi],eax
  411310:	mov    ch,dh
  411312:	lea    esp,[edi+0x1c]
  411315:	xchg   edx,eax
  411316:	aaa    
  411317:	icebp  
  411318:	mov    esp,0x6ac9b728
  41131d:	jge    0x411309
  41131f:	daa    
  411320:	sub    edx,DWORD PTR [edx]
  411322:	rcl    DWORD PTR [ecx+0x5fd23f49],cl
  411328:	aaa    
  411329:	(bad)  
  41132b:	sbb    eax,0xe9e4ff2a
  411330:	push   esi
  411331:	dec    edi
  411332:	adc    ecx,ebx
  411334:	sub    edx,esi
  411336:	(bad)  
  411337:	mov    dl,0x6f
  411339:	fbstp  TBYTE PTR [edx]
  41133b:	fs stos DWORD PTR es:[edi],eax
  41133d:	mov    ds:0xbd0910c6,eax
  411342:	test   ch,dl
  411344:	js     0x411352
  411346:	dec    ebp
  411347:	xchg   edi,eax
  411348:	test   DWORD PTR [ebx],edi
  41134a:	jl     0x88b39814
  411350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411351:	jecxz  0x4112ee
  411353:	jnp    0x411383
  411355:	push   ecx
  411356:	dec    ebx
  411357:	mov    esp,0xf5068fde
  41135c:	in     eax,dx
  41135d:	dec    edx
  41135e:	mov    ch,0xbc
  411360:	cli    
  411361:	dec    ecx
  411362:	sub    DWORD PTR [ebx+ebp*4],ecx
  411365:	test   edx,edi
  411367:	ss push es
  411369:	mov    bh,0xc1
  41136b:	sub    eax,0x8784f3d5
  411370:	in     al,0x77
  411372:	mov    bh,0xc9
  411374:	or     bh,bh
  411376:	sbb    BYTE PTR [eax+ebp*4],ch
  411379:	repz gs push ebx
  41137c:	adc    DWORD PTR [ebp+0x4a],edx
  41137f:	int3   
  411380:	lods   al,BYTE PTR ds:[esi]
  411381:	sbb    cl,bh
  411383:	jg     0x41132b
  411385:	hlt    
  411386:	sbb    dh,cl
  411388:	xor    ecx,0xe702a276
  41138e:	push   ecx
  41138f:	xor    eax,edi
  411391:	mov    DWORD PTR [ebp+0x10],edx
  411394:	jmp    0x41191e
  411399:	jl     0x4113d8
  41139b:	mov    ds:0x1459a28b,eax
  4113a0:	inc    eax
  4113a1:	jmp    DWORD PTR [eax+0x3980b440]
  4113a7:	jl     0x411357
  4113a9:	rol    BYTE PTR [esi+0x16],1
  4113ac:	push   ss
  4113ad:	cmp    eax,0xb0161604
  4113b2:	int    0x90
  4113b4:	aaa    
  4113b5:	mov    eax,ds:0xf7a885f3
  4113ba:	lods   eax,DWORD PTR ds:[esi]
  4113bb:	and    edx,ebp
  4113bd:	mov    edx,0x20ceb9b6
  4113c2:	test   DWORD PTR [ebp+edi*2-0x58952f38],ecx
  4113c9:	and    ebx,DWORD PTR [esi+0x5]
  4113cc:	push   ebx
  4113cd:	jecxz  0x4113a7
  4113cf:	jecxz  0x4113a5
  4113d1:	leave  
  4113d2:	push   es
  4113d3:	into   
  4113d4:	int    0xe2
  4113d6:	jmp    0xd25:0x4ab0fa86
  4113dd:	push   ecx
  4113de:	in     al,dx
  4113df:	xchg   edi,eax
  4113e0:	sub    BYTE PTR [esi+0xb],bh
  4113e3:	or     DWORD PTR gs:[edi],0xffffffc7
  4113e7:	sti    
  4113e8:	xor    al,0x49
  4113ea:	lds    ebx,FWORD PTR [ebx+ebp*1+0x4165f55c]
  4113f1:	ja     0x411453
  4113f3:	pop    es
  4113f4:	repnz sub ch,BYTE PTR [ecx-0x5cb28eb6]
  4113fb:	xor    eax,0x4c7bd539
  411400:	mov    al,0xe7
  411402:	xlat   BYTE PTR ds:[ebx]
  411403:	inc    esp
  411404:	dec    ebp
  411405:	mov    ebp,0xdc3eed5b
  41140a:	xor    BYTE PTR [eax+0x31],cl
  41140d:	ja     0x41140a
  41140f:	mov    DWORD PTR [edi],edx
  411411:	sub    BYTE PTR [ecx-0x24],dh
  411414:	xchg   ecx,eax
  411415:	stos   BYTE PTR es:[edi],al
  411416:	(bad)
  411419:	add    BYTE PTR [esi],bl
  41141b:	adc    DWORD PTR [eax+0x74],0x5b
  41141f:	adc    eax,0x676199a2
  411424:	xchg   esp,eax
  411425:	call   0x1e3e:0xf5da762e
  41142c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41142d:	stos   BYTE PTR es:[edi],al
  41142e:	aad    0xcd
  411430:	(bad)  
  411431:	stc    
  411432:	cmp    al,0xe2
  411434:	mov    dh,0x2
  411436:	les    esi,FWORD PTR [eax-0x75785734]
  41143c:	mov    al,0xbe
  41143e:	(bad)  
  411440:	push   ecx
  411441:	xchg   DWORD PTR [edx-0x60],ebx
  411444:	jbe    0x4114c0
  411446:	sub    edi,DWORD PTR [ebp+0x15d6b0a3]
  41144c:	test   al,0x15
  41144e:	sbb    al,0x20
  411450:	nop
  411451:	jo     0x411401
  411453:	xchg   esp,eax
  411454:	loop   0x41148f
  411456:	fwait
  411457:	add    eax,DWORD PTR [edx]
  411459:	mov    ecx,0xde3e7678
  41145e:	sbb    DWORD PTR [ebp+0x21fd31ec],ebx
  411464:	scas   eax,DWORD PTR es:[edi]
  411465:	push   ds
  411466:	popa   
  411467:	aaa    
  411468:	and    bl,BYTE PTR [esi-0x1f]
  41146b:	in     eax,dx
  41146c:	cdq    
  41146d:	inc    ebx
  41146e:	xchg   esp,eax
  41146f:	mov    DWORD PTR [ebp+0x71],edx
  411472:	push   es
  411473:	into   
  411474:	xor    al,0x3a
  411476:	push   es
  411477:	sahf   
  411478:	xor    ah,BYTE PTR [esi+eax*4+0x6837e8a5]
  41147f:	cld    
  411480:	jl     0x41141b
  411482:	ds inc edi
  411484:	adc    al,0xb4
  411486:	mov    ebp,0xc22ee7c
  41148b:	dec    ebp
  41148c:	rol    BYTE PTR [eax],cl
  41148e:	enter  0x257d,0x7
  411492:	push   ds
  411493:	sub    DWORD PTR [esi],ecx
  411495:	or     edi,DWORD PTR [edx+0x25ed3ff3]
  41149b:	sub    DWORD PTR [ebp-0x1a],ecx
  41149e:	outs   dx,BYTE PTR ds:[esi]
  41149f:	inc    ebp
  4114a0:	lahf   
  4114a1:	pop    ebp
  4114a2:	lahf   
  4114a3:	add    DWORD PTR [eax],esi
  4114a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a6:	inc    ebx
  4114a7:	dec    edx
  4114a8:	xor    eax,DWORD PTR [esi+0x78eb0864]
  4114ae:	retf   0xff7c
  4114b1:	popa   
  4114b2:	add    ebp,ebx
  4114b4:	fdiv   st(4),st
  4114b6:	or     DWORD PTR [eax-0x31280bd9],edx
  4114bc:	das    
  4114bd:	push   ss
  4114be:	int3   
  4114bf:	jmp    0x411508
  4114c1:	add    al,0x82
  4114c3:	ja     0x4114d5
  4114c5:	(bad)  
  4114c6:	test   bl,cl
  4114c8:	sub    BYTE PTR [edx+ecx*1+0x49],0x1b
  4114cd:	(bad)  
  4114ce:	int    0x97
  4114d0:	push   esp
  4114d1:	mov    eax,0x4468baed
  4114d6:	gs mov esi,edi
  4114d9:	cmp    al,0xef
  4114db:	jmp    0xa0f6:0x2e81bd28
  4114e2:	inc    esp
  4114e3:	and    BYTE PTR [ebx+eiz*1],dl
  4114e6:	stos   DWORD PTR es:[edi],eax
  4114e7:	cmp    eax,0x53a4ac29
  4114ec:	sub    al,0x2b
  4114ee:	(bad)  
  4114ef:	out    dx,eax
  4114f0:	jno    0x4114c2
  4114f2:	sbb    bl,dh
  4114f4:	lea    eax,[esi+esi*2]
  4114f7:	sbb    eax,0xb89e2260
  4114fc:	pushf  
  4114fd:	jo     0x41150a
  4114ff:	pop    esp
  411500:	nop
  411501:	jo     0x411511
  411503:	aad    0x42
  411505:	outs   dx,DWORD PTR ds:[esi]
  411506:	mov    bl,0x85
  411508:	jne    0x411569
  41150a:	int3   
  41150b:	daa    
  41150c:	inc    ecx
  41150d:	mov    esp,0x60be110
  411512:	push   ss
  411513:	mov    edi,0xf4c74d56
  411518:	push   edx
  411519:	pusha  
  41151a:	jge    0x411571
  41151c:	cmp    BYTE PTR [esi],al
  41151e:	sub    DWORD PTR [ebx],0xfffffff8
  411521:	rcl    DWORD PTR [ecx-0x1d],1
  411524:	mov    BYTE PTR [ecx-0x51],dl
  411527:	add    BYTE PTR [edi+0x33f07f9b],dh
  41152d:	pop    eax
  41152e:	push   es
  41152f:	dec    esp
  411530:	mov    bl,0x41
  411532:	push   ecx
  411533:	sbb    al,0xe9
  411535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411536:	out    0xdb,eax
  411538:	das    
  411539:	sub    eax,0xd73ea67a
  41153e:	xchg   bl,dh
  411540:	std    
  411541:	inc    ebx
  411542:	imul   edx,DWORD PTR [ebp+0x73],0xffffff96
  411546:	mov    esp,0xee2e8bf0
  41154b:	out    0x7d,al
  41154d:	push   ss
  41154e:	mov    al,ds:0x8446a67
  411553:	retf   
  411554:	outs   dx,BYTE PTR ds:[esi]
  411555:	xor    BYTE PTR [esi+0x40],dh
  411558:	popa   
  411559:	mov    ah,0x6a
  41155b:	dec    esp
  41155c:	mov    ah,0x93
  41155e:	fldcw  WORD PTR [edx]
  411560:	jle    0x4114f6
  411562:	sub    dh,al
  411564:	(bad)  
  411565:	fadd   st(4),st
  411567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411568:	jo     0x411532
  41156a:	pop    edi
  41156b:	push   eax
  41156c:	sub    bh,cl
  41156e:	sbb    al,0x61
  411570:	pop    edi
  411571:	imul   esp,DWORD PTR [eiz*2-0x483e5633],0x23
  411579:	push   esp
  41157a:	dec    ecx
  41157b:	(bad)  
  41157c:	jmp    0xbb98:0x1fd6f9f8
  411583:	mov    esp,0x90697cde
  411588:	mov    bh,0x8
  41158a:	mov    DWORD PTR [esi+0x6d],ebx
  41158d:	ret    0x66fd
  411590:	push   edi
  411591:	xchg   BYTE PTR [edx],ch
  411593:	fimul  DWORD PTR [ebx-0x62]
  411596:	sub    DWORD PTR [ecx-0x1f],ecx
  411599:	push   0x3
  41159b:	ins    DWORD PTR es:[edi],dx
  41159c:	xchg   ecx,eax
  41159d:	test   DWORD PTR [esi+edi*8-0x1d6dcc5d],ebp
  4115a4:	jnp    0x411571
  4115a6:	je     0x4115ca
  4115a8:	add    eax,0x18a481f1
  4115ad:	popa   
  4115ae:	imul   esi,ebx,0x6c
  4115b1:	cmc    
  4115b2:	pop    ecx
  4115b3:	cmp    cl,BYTE PTR ds:0xc2e2d5a9
  4115b9:	jb     0x411607
  4115bb:	pop    ebp
  4115bc:	test   DWORD PTR [eax-0x22],ebp
  4115bf:	lock inc esi
  4115c1:	stc    
  4115c2:	dec    ebp
  4115c3:	ins    BYTE PTR es:[edi],dx
  4115c4:	fwait
  4115c5:	mov    ds:0x136b025b,eax
  4115ca:	or     DWORD PTR [edx-0x18],ebx
  4115cd:	ss pop ebx
  4115cf:	adc    DWORD PTR [edx],ecx
  4115d1:	pop    esp
  4115d2:	in     al,dx
  4115d3:	pop    eax
  4115d4:	cdq    
  4115d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d6:	xor    dl,BYTE PTR [edx]
  4115d8:	jge    0x4115af
  4115da:	and    al,0xb5
  4115dc:	and    ecx,ecx
  4115de:	push   0xffffffe8
  4115e0:	pushf  
  4115e1:	(bad)  
  4115e3:	and    al,0x7b
  4115e5:	push   eax
  4115e6:	imul   DWORD PTR [eax-0x313bfd38]
  4115ec:	add    al,0xa2
  4115ee:	sar    DWORD PTR [ebx+ebp*8-0x67],0x27
  4115f3:	rcr    DWORD PTR [ecx+0x6b],cl
  4115f6:	add    eax,0xa7ca2f97
  4115fb:	mov    esi,0xc7535a7
  411600:	mov    ebx,0x19b2678f
  411605:	scas   al,BYTE PTR es:[edi]
  411606:	pop    edi
  411607:	xlat   BYTE PTR ds:[ebx]
  411608:	push   ecx
  411609:	cs test dl,bh
  41160c:	stos   DWORD PTR es:[edi],eax
  41160d:	jge    0x411615
  41160f:	xchg   edi,ecx
  411611:	stc    
  411612:	jbe    0x411599
  411614:	mov    ds:0x2540bc1a,eax
  411619:	iret   
  41161a:	and    eax,0xe192aadc
  41161f:	mov    ds:0x84f8516d,al
  411624:	add    ah,dh
  411626:	loope  0x4115cb
  411628:	cli    
  411629:	cld    
  41162a:	and    BYTE PTR [esi+eiz*4+0x2d84c43a],al
  411631:	test   al,0xd5
  411633:	daa    
  411634:	sub    bl,BYTE PTR [ecx]
  411636:	dec    edi
  411637:	or     al,0x34
  411639:	ss daa 
  41163b:	addr16 mov dh,0x3b
  41163e:	dec    ecx
  41163f:	xor    edi,DWORD PTR [eax+0x6c]
  411642:	out    0x8d,al
  411644:	in     eax,dx
  411645:	(bad)  
  411647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411648:	push   eax
  411649:	test   DWORD PTR ds:0x119e3dab,ebp
  41164f:	mov    DWORD PTR [edi-0x3c2fde90],esp
  411655:	inc    edx
  411656:	fcomp  DWORD PTR [eax+0x2e11ed68]
  41165c:	fsubr  st(2),st
  41165e:	mov    al,ds:0xc49f96
  411663:	xor    dh,bl
  411665:	pop    esp
  411666:	or     ebx,DWORD PTR [ebx+0x14d5fb6]
  41166c:	add    al,0x9f
  41166e:	xchg   edi,eax
  41166f:	dec    edi
  411670:	lods   al,BYTE PTR ds:[esi]
  411671:	fsub   st,st(3)
  411673:	jg     0x41167f
  411675:	js     0x411603
  411677:	adc    edi,DWORD PTR [edi]
  411679:	call   0xbe83c31d
  41167e:	mov    ds:0x1fbd29b3,al
  411683:	mov    ds:0x6da6584e,al
  411688:	sub    ch,BYTE PTR [ebp+0x6e]
  41168b:	repz dec edi
  41168d:	mov    al,0xb7
  41168f:	dec    ecx
  411690:	and    al,0x2a
  411692:	cmp    al,0xc1
  411694:	in     eax,0x41
  411696:	jbe    0x4116d6
  411698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411699:	cmp    ebx,DWORD PTR [edx]
  41169b:	mov    ds:0x2cf8cc01,al
  4116a0:	or     ecx,DWORD PTR [edi]
  4116a2:	push   ss
  4116a3:	scas   eax,DWORD PTR es:[edi]
  4116a4:	jno    0x41165f
  4116a6:	mov    cs,WORD PTR [ebx-0xf5466f8]
  4116ac:	stos   BYTE PTR es:[edi],al
  4116ad:	sbb    cl,BYTE PTR [edx-0x6c17b259]
  4116b3:	sub    al,0xc9
  4116b5:	inc    esp
  4116b6:	dec    eax
  4116b7:	push   edx
  4116b8:	mov    esi,0xfcb2c8bb
  4116bd:	stos   DWORD PTR es:[edi],eax
  4116be:	add    ebp,DWORD PTR [ebp-0x66]
  4116c1:	retf   0xc958
  4116c4:	jmp    0xb2aa:0xde2a92bb
  4116cb:	add    BYTE PTR [ebx+0x49],cl
  4116ce:	cmp    DWORD PTR [ebx+0x4cdef7be],ebx
  4116d4:	add    ah,BYTE PTR [eax-0x4]
  4116d7:	mov    ebx,ecx
  4116d9:	inc    esi
  4116da:	out    dx,al
  4116db:	icebp  
  4116dc:	(bad)  [eax-0x8e52a39]
  4116e2:	or     eax,0x50424893
  4116e7:	outs   dx,DWORD PTR ds:[esi]
  4116e8:	test   DWORD PTR ds:0x92f72bb2,edi
  4116ee:	sub    BYTE PTR [edx+0x27e3812e],ch
  4116f4:	mov    ebp,0x9686317a
  4116f9:	jbe    0x4116aa
  4116fb:	arpl   WORD PTR [eax],sp
  4116fd:	out    dx,eax
  4116fe:	fs js  0x4116d0
  411701:	cmp    eax,0xb245b3b9
  411706:	fs into 
  411708:	push   cs
  411709:	out    dx,al
  41170a:	mov    ah,0x82
  41170c:	aas    
  41170d:	add    ecx,esp
  41170f:	pusha  
  411710:	(bad)  
  411711:	cmp    bh,BYTE PTR [edi-0x3e1dd9b1]
  411717:	adc    esp,ebx
  411719:	dec    edi
  41171a:	jne    0x41174b
  41171c:	adc    edx,DWORD PTR [esi-0x72]
  41171f:	imul   esp,ebx,0xffffffc8
  411722:	ret    0x7859
  411725:	mov    ah,0x91
  411727:	fs jg  0x4116eb
  41172a:	cmp    BYTE PTR [edi],0x8
  41172d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172e:	cmp    al,0x1d
  411730:	mov    edi,0x5e2094cf
  411735:	dec    eax
  411736:	inc    esi
  411737:	pop    eax
  411738:	mov    ebx,0x8758af61
  41173d:	std    
  41173e:	inc    edx
  41173f:	mov    bh,0xba
  411741:	int3   
  411742:	cs repz pop ds
  411745:	sbb    DWORD PTR [ebx-0x32f5af19],esi
  41174b:	inc    ebp
  41174c:	pop    ds
  41174d:	outs   dx,DWORD PTR ds:[esi]
  41174e:	mov    BYTE PTR [esi+eiz*2],0xe5
  411752:	adc    al,0x28
  411754:	fs push es
  411756:	dec    esi
  411757:	int    0x5a
  411759:	scas   eax,DWORD PTR es:[edi]
  41175a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175b:	inc    ebx
  41175c:	pop    eax
  41175d:	les    esp,FWORD PTR [edx+0x19]
  411760:	fsubr  DWORD PTR [ecx-0x5177b5ae]
  411766:	loope  0x41178f
  411768:	fidiv  WORD PTR [ecx]
  41176a:	mov    al,0xdf
  41176c:	out    dx,al
  41176d:	or     cl,dl
  41176f:	dec    edx
  411770:	adc    ah,cl
  411772:	int3   
  411773:	inc    edi
  411774:	jbe    0x411754
  411776:	ins    BYTE PTR es:[edi],dx
  411777:	fmul   DWORD PTR ds:[esi+0xd]
  41177b:	add    al,0xcc
  41177d:	mov    dh,0x6d
  41177f:	and    eax,0x55593f90
  411784:	outs   dx,DWORD PTR ds:[esi]
  411785:	xchg   DWORD PTR [ecx],ebp
  411787:	and    DWORD PTR [ebp-0x54],ecx
  41178a:	sti    
  41178b:	leave  
  41178c:	adc    DWORD PTR [edx-0xb9ddcb4],ecx
  411792:	add    eax,DWORD PTR [ecx-0x4a4cf8fe]
  411798:	out    0xd8,eax
  41179a:	jmp    0xc4f99d1b
  41179f:	in     eax,dx
  4117a0:	or     bl,dh
  4117a2:	js     0x4117db
  4117a4:	sti    
  4117a5:	pusha  
  4117a6:	(bad)  
  4117a7:	jo     0x41176e
  4117a9:	xchg   ebx,eax
  4117aa:	lods   eax,DWORD PTR ds:[esi]
  4117ab:	(bad)  
  4117ad:	xchg   ecx,eax
  4117ae:	aad    0x42
  4117b0:	mov    dl,0xe6
  4117b2:	pop    ebx
  4117b3:	xchg   ebx,ebp
  4117b5:	cdq    
  4117b6:	stos   BYTE PTR es:[edi],al
  4117b7:	cwde   
  4117b8:	sub    BYTE PTR [ecx+0x63148439],ah
  4117be:	int3   
  4117bf:	fwait
  4117c0:	lods   eax,DWORD PTR ds:[esi]
  4117c1:	adc    al,0x1b
  4117c3:	mov    ebp,0x9b91c735
  4117c8:	outs   dx,DWORD PTR ds:[esi]
  4117c9:	inc    ecx
  4117ca:	mov    eax,ds:0xb3eb9df9
  4117cf:	sbb    BYTE PTR [edi],ch
  4117d1:	outs   dx,DWORD PTR ds:[esi]
  4117d2:	pop    ebx
  4117d3:	sbb    BYTE PTR [edx+0x22],al
  4117d6:	dec    eax
  4117d7:	cmp    al,0xfb
  4117d9:	dec    esp
  4117da:	fisub  DWORD PTR [ebx+0x27]
  4117dd:	aam    0x22
  4117df:	mov    edx,0x5a54ba1a
  4117e4:	pop    esp
  4117e5:	sbb    eax,0x18107a5a
  4117ea:	jmp    0xfa23:0xaf871121
  4117f1:	push   ecx
  4117f2:	lods   al,BYTE PTR ds:[esi]
  4117f3:	popa   
  4117f4:	inc    esi
  4117f5:	dec    esp
  4117f6:	xchg   ebp,esi
  4117f8:	adc    DWORD PTR [ebx+0x7916ce3],0x4e754a72
  411802:	je     0x411855
  411804:	fwait
  411805:	imul   ecx,DWORD PTR [ebp+0x3ec1f3e8],0xffffff96
  41180c:	add    DWORD PTR [ebp-0x50cfc640],ebp
  411812:	sub    al,0xf8
  411814:	repnz in eax,dx
  411816:	int    0x6a
  411818:	enter  0x9939,0x70
  41181c:	jns    0x411852
  41181e:	test   BYTE PTR [eax+0xd],0x7
  411822:	loope  0x411849
  411824:	or     al,0xab
  411826:	daa    
  411827:	mov    DWORD PTR [ebx+esi*4-0x41a256e5],ecx
  41182e:	stos   DWORD PTR es:[edi],eax
  41182f:	pop    ss
  411830:	or     edx,DWORD PTR [ecx-0x28]
  411833:	nop
  411834:	shl    BYTE PTR [edi],cl
  411836:	fcomp  DWORD PTR [eax+0x497312cd]
  41183c:	in     eax,0x13
  41183e:	jo     0x41187c
  411840:	ss test al,0x84
  411843:	stos   DWORD PTR es:[edi],eax
  411844:	jno    0x4118b7
  411846:	es adc ecx,ebp
  411849:	pop    ss
  41184a:	mov    ebp,DWORD PTR [bx+di]
  41184d:	mov    bl,0x1f
  41184f:	clc    
  411850:	cmp    BYTE PTR [esi-0x1bb34b9e],0x8a
  411857:	or     DWORD PTR [edi],0x4d
  41185a:	(bad)  
  41185b:	(bad)  
  41185c:	outs   dx,DWORD PTR ds:[esi]
  41185d:	pop    esi
  41185e:	stos   BYTE PTR es:[edi],al
  41185f:	lock xchg ebx,eax
  411861:	pop    edi
  411862:	sub    al,0x5d
  411864:	push   ds
  411865:	aad    0x46
  411867:	xor    dl,dl
  411869:	mov    cl,bl
  41186b:	push   esp
  41186c:	jae    0x4118c0
  41186e:	hlt    
  41186f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411870:	(bad)  
  411872:	fimul  WORD PTR [edx]
  411874:	scas   eax,DWORD PTR es:[edi]
  411875:	jnp    0x41188f
  411877:	ds mov edi,0x15c14a55
  41187d:	int3   
  41187e:	xlat   BYTE PTR ds:[ebx]
  41187f:	cmc    
  411880:	or     eax,DWORD PTR [ebx+0x814d8f9]
  411886:	(bad)  
  411887:	pop    ebp
  411888:	dec    ebp
  411889:	mov    ah,0x5b
  41188b:	bound  ebp,QWORD PTR [edx+eiz*2]
  41188e:	das    
  41188f:	div    BYTE PTR [ebx]
  411891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411892:	push   edx
  411893:	shr    BYTE PTR [edx-0x3d],cl
  411896:	and    DWORD PTR [edi+0x49e1e9e3],edx
  41189c:	mov    al,0x81
  41189e:	sub    DWORD PTR [ebp+0x6e],esp
  4118a1:	xor    ebp,ebp
  4118a3:	out    dx,al
  4118a4:	shl    DWORD PTR [esi],1
  4118a6:	push   cs
  4118a7:	fcomp  DWORD PTR [ecx+ecx*8+0x31677083]
  4118ae:	fldcw  WORD PTR [eax-0x755dbe83]
  4118b4:	loope  0x411870
  4118b6:	inc    ebx
  4118b7:	fcomip st,st(3)
  4118b9:	lock aaa 
  4118bb:	jns    0x4118cc
  4118bd:	add    BYTE PTR [edi+0x43795064],0x79
  4118c4:	popa   
  4118c5:	outs   dx,BYTE PTR ss:[esi]
  4118c7:	sub    eax,0x88c559a3
  4118cc:	mov    dh,0x29
  4118ce:	push   0xffffff82
  4118d0:	dec    esp
  4118d1:	push   esp
  4118d2:	mov    bh,0xfd
  4118d4:	lds    edx,FWORD PTR [eax+ecx*8+0x1a]
  4118d8:	js     0x411932
  4118da:	dec    ebp
  4118db:	enter  0x5b9a,0x4d
  4118df:	ja     0x4118e4
  4118e1:	inc    edx
  4118e2:	ds or  al,0x80
  4118e5:	xlat   BYTE PTR ds:[ebx]
  4118e6:	in     al,0xe7
  4118e8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ea:	and    cl,BYTE PTR [esi-0x2f]
  4118ed:	sub    ch,BYTE PTR [esp+ebp*2]
  4118f0:	inc    esp
  4118f1:	and    esp,DWORD PTR [esi+0x5cc5875a]
  4118f7:	sbb    al,0x34
  4118f9:	rcr    BYTE PTR [eax],1
  4118fb:	cli    
  4118fc:	jo     0x4118c5
  4118fe:	jl     0x4118e8
  411900:	pop    ds
  411901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411902:	lods   al,BYTE PTR ds:[esi]
  411903:	sub    al,0x3
  411905:	mov    ecx,0x2e4eb326
  41190a:	cmp    BYTE PTR ds:0x27e7631f,ch
  411910:	je     0x41193c
  411912:	ins    BYTE PTR es:[edi],dx
  411913:	dec    edx
  411914:	mov    ah,0x35
  411916:	test   DWORD PTR [edi+0x3f],edi
  411919:	aaa    
  41191a:	mov    ch,al
  41191c:	cli    
  41191d:	or     ecx,DWORD PTR [ebx+0x47b8b13]
  411923:	push   eax
  411924:	push   edi
  411925:	push   edx
  411926:	call   0x41df91
  41192b:	shld   edx,eax,0x2
  41192f:	mov    ecx,edx
  411931:	xor    edx,edx
  411933:	or     ecx,edx
  411935:	mov    edx,DWORD PTR [esi]
  411937:	mov    edi,DWORD PTR [esi+0x4]
  41193a:	shl    eax,0x2
  41193d:	or     eax,DWORD PTR [ebp+0x10]
  411940:	xor    edi,ecx
  411942:	xor    edx,eax
  411944:	xor    edx,0xba699573
  41194a:	xor    edi,0x9c0a89d8
  411950:	mov    DWORD PTR [esi],edx
  411952:	mov    DWORD PTR [esi+0x4],edi
  411955:	jmp    0x418549
  41195a:	mov    eax,DWORD PTR [ebp-0x24]
  41195d:	add    eax,DWORD PTR [ebp-0x4]
  411960:	mov    DWORD PTR [ebp-0x28],eax
  411963:	mov    eax,DWORD PTR [ebp-0x28]
  411966:	mov    eax,DWORD PTR [ebp-0x4]
  411969:	mov    eax,DWORD PTR [ebp-0x28]
  41196c:	mov    eax,DWORD PTR [eax+0xc]
  41196f:	mov    edx,DWORD PTR [ebp-0x4]
  411972:	movzx  eax,WORD PTR [edx+eax*1]
  411976:	cdq    
  411977:	shld   edx,eax,0x2
  41197b:	xor    edx,ecx
  41197d:	mov    DWORD PTR [ebp+0xc],edx
  411980:	mov    edx,DWORD PTR [ebp-0x58]
  411983:	jmp    0x411f0d
  411988:	jle    0x411958
  41198a:	addr16 ss daa 
  41198d:	push   ds
  41198e:	ds sahf 
  411990:	dec    ebx
  411991:	clc    
  411992:	pushf  
  411993:	outs   dx,BYTE PTR ds:[esi]
  411994:	or     bh,BYTE PTR [ebp+0x32fe683e]
  41199a:	push   ss
  41199b:	push   ss
  41199c:	cmp    eax,0xe2161604
  4119a1:	fwait
  4119a2:	arpl   WORD PTR [esi],bx
  4119a4:	in     al,dx
  4119a5:	push   edx
  4119a6:	scas   al,BYTE PTR es:[edi]
  4119a7:	push   edi
  4119a8:	mov    cl,bl
  4119aa:	push   es
  4119ab:	stos   BYTE PTR es:[edi],al
  4119ac:	arpl   WORD PTR [edx-0x7566a2e7],cx
  4119b2:	test   edx,edi
  4119b4:	dec    edx
  4119b5:	inc    edx
  4119b6:	pop    eax
  4119b7:	xor    BYTE PTR [ebx+eax*2],ah
  4119ba:	sbb    al,0x52
  4119bc:	fcomp  st(0)
  4119be:	fwait
  4119bf:	cmp    al,0xb5
  4119c1:	fcom   QWORD PTR [ecx+0x6f]
  4119c4:	xlat   BYTE PTR ds:[ebx]
  4119c5:	mov    bh,0x29
  4119c7:	lock nop
  4119c9:	dec    bl
  4119cb:	gs out 0xc5,al
  4119ce:	aam    0x79
  4119d0:	fucomip st,st(5)
  4119d2:	jg     0x4119b4
  4119d4:	adc    DWORD PTR [esi],0x722a48c1
  4119da:	and    eax,0x861ab6c8
  4119df:	cld    
  4119e0:	loope  0x411a09
  4119e2:	mov    cl,0x88
  4119e4:	inc    ebx
  4119e5:	mov    ebp,DWORD PTR [edx-0x5e19b461]
  4119eb:	jg     0x4119ac
  4119ed:	lods   al,BYTE PTR ds:[esi]
  4119ee:	sbb    DWORD PTR [ecx+0x7577b7a],0xe0b99d24
  4119f8:	in     eax,0xd3
  4119fa:	mov    edi,0x127f9c11
  4119ff:	lea    eax,[edx+edi*2-0x681d7a3c]
  411a06:	out    dx,eax
  411a07:	mov    dl,BYTE PTR ds:0x3ce9dd0c
  411a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a0e:	sar    BYTE PTR [eax+0x8f1693e],1
  411a14:	das    
  411a15:	add    bh,cl
  411a17:	(bad)  
  411a18:	not    DWORD PTR [edx-0x74]
  411a1b:	fnstcw WORD PTR [edx-0x63]
  411a1e:	cmp    BYTE PTR ds:0x4d283b76,0xbd
  411a25:	aas    
  411a26:	jnp    0x4119cf
  411a28:	or     dl,BYTE PTR [edx+0x1b]
  411a2b:	js     0x411a03
  411a2d:	push   edi
  411a2e:	lods   eax,DWORD PTR ds:[esi]
  411a2f:	imul   ebp,ebx,0x79828a9d
  411a35:	push   es
  411a36:	int    0x9c
  411a38:	neg    BYTE PTR [eax]
  411a3a:	loop   0x4119f3
  411a3c:	hlt    
  411a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3e:	dec    esi
  411a3f:	cmp    al,0xd2
  411a41:	int3   
  411a42:	mov    DWORD PTR [ebx-0x43fbb7e5],ebp
  411a48:	ja     0x411a41
  411a4a:	loope  0x411a4e
  411a4c:	ins    BYTE PTR es:[edi],dx
  411a4d:	sbb    BYTE PTR [edi],bl
  411a4f:	jae    0x411a57
  411a51:	mov    al,0x92
  411a53:	and    BYTE PTR [ebp-0x79],ch
  411a56:	sbb    BYTE PTR [ebp-0x2011230a],0x10
  411a5d:	loop   0x411abf
  411a5f:	lods   eax,DWORD PTR ds:[esi]
  411a60:	xlat   BYTE PTR ds:[ebx]
  411a61:	cs stos DWORD PTR es:[edi],eax
  411a63:	push   es
  411a64:	lds    ebx,FWORD PTR [ebp-0xec27a79]
  411a6a:	jg     0x411a38
  411a6c:	pop    esi
  411a6d:	push   es
  411a6e:	in     al,0x3c
  411a70:	mov    esi,0xc5a73ead
  411a75:	jb     0x411a63
  411a77:	lods   al,BYTE PTR ds:[esi]
  411a78:	jl     0x411ac1
  411a7a:	lea    esp,[ecx+0x5009b85c]
  411a80:	addr16 (bad) 
  411a82:	push   es
  411a83:	fistp  DWORD PTR [esi-0x2b]
  411a86:	jne    0x411af2
  411a88:	adc    eax,0xda53b341
  411a8d:	js     0x411a14
  411a8f:	leave  
  411a90:	xchg   ebx,eax
  411a91:	xchg   ebp,eax
  411a92:	addr16 mov cl,cl
  411a95:	and    BYTE PTR [edi-0x13],bh
  411a98:	das    
  411a99:	or     dl,BYTE PTR [ebx-0x672f3dea]
  411a9f:	outs   dx,BYTE PTR ds:[esi]
  411aa0:	xchg   ebx,eax
  411aa1:	xor    cl,BYTE PTR [eax-0x60]
  411aa4:	adc    esp,DWORD PTR [ebx]
  411aa6:	pop    es
  411aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa8:	pmulhw mm7,QWORD PTR [edi+0x7f]
  411aac:	dec    eax
  411aad:	cli    
  411aae:	xlat   BYTE PTR ds:[ebx]
  411aaf:	mov    ds:0x5d102637,al
  411ab4:	ret    
  411ab5:	outs   dx,BYTE PTR ds:[esi]
  411ab6:	push   0x74beb2e6
  411abb:	push   0x83c76c81
  411ac0:	push   esi
  411ac1:	sbb    DWORD PTR [ebp-0x1f08336a],0x2c3e5e1e
  411acb:	daa    
  411acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411acd:	out    dx,eax
  411ace:	mov    ah,0x11
  411ad0:	jle    0x411a71
  411ad2:	xchg   ebp,eax
  411ad3:	(bad)  
  411ad4:	xor    eax,0xeea2cb2f
  411ad9:	sub    BYTE PTR [edi-0xbcd527d],dh
  411adf:	inc    esp
  411ae0:	push   esi
  411ae1:	cmp    edx,DWORD PTR [ebx-0xc]
  411ae4:	aas    
  411ae5:	sbb    DWORD PTR ds:0x896963f9,0x33
  411aec:	add    al,0x51
  411aee:	lods   al,BYTE PTR ds:[esi]
  411aef:	pop    ss
  411af0:	popf   
  411af1:	dec    esi
  411af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af3:	xchg   DWORD PTR [ebp+0x77d327cf],esp
  411af9:	ins    DWORD PTR es:[edi],dx
  411afa:	jnp    0x411b03
  411afc:	xlat   BYTE PTR ds:[ebx]
  411afd:	(bad)  [edx+0x46047b78]
  411b03:	nop
  411b04:	dec    edi
  411b06:	mov    eax,ds:0x890325ab
  411b0b:	ins    DWORD PTR es:[edi],dx
  411b0c:	(bad)  
  411b0d:	cmp    bl,BYTE PTR [eax+eax*4-0x4f]
  411b11:	push   ecx
  411b12:	mov    ebp,0x3a93b46d
  411b17:	sbb    al,0x94
  411b19:	fs call 0x2708:0xd428dd34
  411b21:	mov    edi,0x44e8019a
  411b26:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b28:	mov    ebx,ebx
  411b2a:	hlt    
  411b2b:	(bad)  
  411b2c:	or     al,0xd1
  411b2e:	in     eax,0x7d
  411b30:	mov    BYTE PTR [eax-0x56],bh
  411b33:	enter  0x55c6,0x48
  411b37:	jb     0x411b91
  411b39:	xchg   esp,eax
  411b3a:	stos   DWORD PTR es:[edi],eax
  411b3b:	test   eax,0xd2c29f3d
  411b40:	scas   eax,DWORD PTR es:[edi]
  411b41:	jmp    0x411af2
  411b43:	mov    edi,0x3729a847
  411b48:	jno    0x411aca
  411b4a:	sar    BYTE PTR [eax+0x2f6580fb],0xd7
  411b51:	ja     0x411b6d
  411b53:	in     eax,0xec
  411b55:	mov    DWORD PTR [edi],esi
  411b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b58:	stc    
  411b59:	sbb    BYTE PTR [ebp+0x263125dc],al
  411b5f:	sub    bl,BYTE PTR [edi]
  411b61:	xchg   edi,eax
  411b62:	fnstenv [esi+edx*4]
  411b65:	pop    edx
  411b66:	mov    dh,0x9f
  411b68:	mov    ds:0xd5c68b90,eax
  411b6d:	test   al,cl
  411b6f:	jmp    FWORD PTR [edi-0x5797bc8d]
  411b75:	xchg   ebx,eax
  411b76:	dec    edi
  411b77:	aad    0xe5
  411b79:	inc    ebx
  411b7a:	(bad)  
  411b7b:	out    dx,eax
  411b7c:	jns    0x411b23
  411b7e:	sub    dh,dh
  411b80:	fidivr DWORD PTR [ebx-0x61687962]
  411b86:	int3   
  411b87:	adc    BYTE PTR [edi+0x1d],dl
  411b8a:	jmp    0xe4d3892a
  411b8f:	mov    edx,0x63d6f6d2
  411b94:	fs xchg edx,eax
  411b96:	(bad)  [ebp+0x63]
  411b99:	inc    esp
  411b9a:	jge    0x411b99
  411b9c:	adc    eax,0x74bc42a9
  411ba1:	mov    al,0x21
  411ba3:	rcr    edi,0x6f
  411ba6:	jnp    0x411b33
  411ba8:	fisubr DWORD PTR [esi-0x24838fd]
  411bae:	xor    bl,bh
  411bb0:	push   eax
  411bb1:	dec    esp
  411bb2:	and    bh,dl
  411bb4:	jecxz  0x411bcf
  411bb6:	inc    ecx
  411bb7:	addr16 sti 
  411bb9:	shl    BYTE PTR [ebp+edi*8+0x70],0x27
  411bbe:	sar    edi,1
  411bc0:	inc    edx
  411bc1:	xchg   esp,eax
  411bc2:	popf   
  411bc3:	mov    eax,ds:0x1f241de9
  411bc8:	loopne 0x411bc5
  411bca:	idiv   bh
  411bcc:	mov    ch,0xc4
  411bce:	xor    eax,0xd8092255
  411bd3:	inc    esp
  411bd4:	aas    
  411bd5:	mov    ebp,0x3eff681a
  411bda:	mov    ds:0x7ea8ab30,al
  411bdf:	and    DWORD PTR [eax],edx
  411be1:	mov    al,0x9e
  411be3:	xor    ebp,DWORD PTR [eax+0x78fab4d]
  411be9:	pop    ds
  411bea:	add    DWORD PTR [edx-0x7e287a7c],eax
  411bf0:	pop    ecx
  411bf1:	loop   0x411b9b
  411bf3:	jg     0x411bcd
  411bf5:	push   esi
  411bf6:	fist   WORD PTR [esi]
  411bf8:	jge    0x411c23
  411bfa:	dec    esi
  411bfb:	pop    esp
  411bfc:	retf   0xf7be
  411bff:	cmp    BYTE PTR ds:0x640974e2,dl
  411c05:	jo     0x411b97
  411c07:	mov    esp,0xb6450707
  411c0c:	pop    ss
  411c0d:	adc    BYTE PTR [eax+0x15def974],0x61
  411c14:	js     0x411c8b
  411c16:	adc    eax,0x9c671320
  411c1b:	fndisi(8087 only) 
  411c1d:	pop    edx
  411c1e:	xor    al,0xc1
  411c20:	shr    BYTE PTR [ebx-0x34],cl
  411c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c24:	in     eax,dx
  411c25:	aam    0x90
  411c27:	lods   eax,DWORD PTR ds:[esi]
  411c28:	xor    BYTE PTR [ecx+0x4f],bh
  411c2b:	xchg   esp,eax
  411c2c:	scas   eax,DWORD PTR es:[edi]
  411c2d:	pop    esi
  411c2e:	xor    esi,DWORD PTR [ecx]
  411c30:	addr16 sub bl,dh
  411c33:	add    al,0x7d
  411c35:	jle    0x411bba
  411c37:	in     al,dx
  411c38:	lods   eax,DWORD PTR ds:[esi]
  411c39:	sbb    dl,ah
  411c3b:	xchg   BYTE PTR [ebx],al
  411c3d:	leave  
  411c3e:	xchg   ecx,eax
  411c3f:	jp     0x411bcc
  411c41:	cmp    al,0xdd
  411c43:	mov    eax,0x18e6ab17
  411c48:	dec    edi
  411c49:	push   esi
  411c4a:	vsubpd ymm5,ymm5,YMMWORD PTR [ebp+0x52dafa28]
  411c52:	mov    ebx,0x1820e9e9
  411c57:	xor    BYTE PTR [esi+edx*1-0x6df6ef3f],bh
  411c5e:	ja     0x411c08
  411c60:	jae    0x411cba
  411c62:	push   ss
  411c63:	cwde   
  411c64:	mov    ebx,0xa42ae8bc
  411c69:	mov    eax,ds:0x15da0fa
  411c6e:	adc    cl,ch
  411c70:	mov    ebx,0xde6c9b6c
  411c75:	jecxz  0x411cbc
  411c77:	lea    edi,[esi+0x2bdee45a]
  411c7d:	mov    ch,0x88
  411c7f:	pop    edx
  411c80:	cli    
  411c81:	push   esp
  411c82:	test   al,0x10
  411c84:	mov    cl,0x3d
  411c86:	mov    DWORD PTR [ecx+0x624d973f],edx
  411c8c:	scas   eax,DWORD PTR es:[edi]
  411c8d:	cmp    eax,0xf1fd710b
  411c92:	dec    ebp
  411c93:	nop
  411c94:	mov    dl,0x8c
  411c96:	loopne 0x411c66
  411c98:	imul   esp,eax,0xf887bcaf
  411c9e:	xor    esp,DWORD PTR [ebx+0x61]
  411ca1:	shl    esi,0xb3
  411ca4:	cmp    BYTE PTR [eax-0x54],bl
  411ca7:	and    ecx,DWORD PTR [ecx]
  411ca9:	shl    DWORD PTR [esi+ecx*2-0x54],1
  411cad:	fistp  DWORD PTR [esi]
  411caf:	out    0x79,eax
  411cb1:	adc    ah,bh
  411cb3:	mov    al,ds:0x80687a56
  411cb8:	ror    BYTE PTR [esi],0x82
  411cbb:	dec    edi
  411cbc:	dec    ecx
  411cbd:	xor    BYTE PTR [ecx+eax*4],0x7
  411cc1:	test   DWORD PTR [eax+0x19],edx
  411cc4:	imul   esi,DWORD PTR [esi+ebx*8+0x4c],0x29
  411cc9:	or     ah,BYTE PTR [ebx+0x7e896588]
  411ccf:	add    eax,0x6e801488
  411cd4:	mov    esi,0x7e0ee17
  411cd9:	xchg   edi,eax
  411cda:	test   BYTE PTR [esi+0xad56fcf],bl
  411ce0:	call   0xcb41:0x66d5b0bf
  411ce7:	or     ch,BYTE PTR fs:[ecx+0x7c]
  411ceb:	ret    0x6794
  411cee:	retf   
  411cef:	jnp    0x411ca2
  411cf1:	(bad)  
  411cf2:	call   0x877912ce
  411cf7:	lahf   
  411cf8:	and    ch,BYTE PTR [edi-0x922e115]
  411cfe:	rcl    BYTE PTR [ecx-0x1f],1
  411d01:	test   eax,0xee6d15ff
  411d06:	dec    edx
  411d07:	out    0x67,eax
  411d09:	xlat   BYTE PTR ds:[ebx]
  411d0a:	(bad)  
  411d0c:	cdq    
  411d0d:	pop    ebp
  411d0e:	repnz iret 
  411d10:	and    BYTE PTR [ebx-0x11],0xce
  411d14:	aam    0x4b
  411d16:	ror    DWORD PTR [ebx-0x490c111b],1
  411d1c:	pop    ebx
  411d1d:	in     eax,dx
  411d1e:	jb     0x411d1f
  411d20:	aaa    
  411d21:	adc    al,BYTE PTR [esi]
  411d23:	clc    
  411d24:	add    DWORD PTR [edi+ebx*4],esp
  411d27:	cmc    
  411d28:	pop    ebx
  411d29:	sub    edi,DWORD PTR [edx]
  411d2b:	inc    edx
  411d2c:	and    al,0x3d
  411d2e:	push   ecx
  411d2f:	std    
  411d30:	stc    
  411d31:	mov    ds:0x95a5a440,al
  411d36:	call   DWORD PTR [edi+0x38988c0b]
  411d3c:	lds    esp,FWORD PTR [ecx+0x28]
  411d3f:	fisttp WORD PTR [ebp+0x57]
  411d42:	mov    bh,BYTE PTR ds:[eax+eax*1-0x4c]
  411d47:	fwait
  411d48:	mov    esp,fs
  411d4a:	int3   
  411d4b:	sub    eax,0x6586e230
  411d50:	aam    0x34
  411d52:	add    DWORD PTR [ecx-0x5a],eax
  411d55:	add    BYTE PTR [eax+0x6],ah
  411d58:	adc    eax,0x239998aa
  411d5d:	jmp    0xf919c3db
  411d62:	cmp    ebx,DWORD PTR ds:0xeaf4c6e1
  411d68:	(bad)  
  411d69:	adc    BYTE PTR ds:0xb384bbf4,dh
  411d6f:	mov    cl,0xbf
  411d71:	adc    DWORD PTR [esi-0x209d7500],0x7a
  411d78:	fs mov ecx,0x7e53d51a
  411d7e:	fdiv   DWORD PTR [ebp+0xa35c815]
  411d84:	in     al,0x88
  411d86:	cmovle edx,DWORD PTR [edi-0x10a8daf9]
  411d8d:	sbb    DWORD PTR [edi-0x19ac9862],esi
  411d93:	sub    al,0xb8
  411d95:	mov    esp,0xc0bf6685
  411d9a:	xchg   DWORD PTR [esi],eax
  411d9c:	pop    ss
  411d9d:	sub    al,0x80
  411d9f:	xchg   edi,eax
  411da0:	dec    ecx
  411da1:	imul   esi,ebp,0xffffff97
  411da4:	xor    DWORD PTR [eax],edi
  411da6:	hlt    
  411da7:	jnp    0x411df2
  411da9:	cmp    DWORD PTR [ecx+ebx*1],ebp
  411dac:	aas    
  411dad:	out    0xb5,eax
  411daf:	inc    ebx
  411db0:	(bad)  
  411db1:	mov    ah,0xd
  411db3:	add    eax,0x707240c
  411db8:	arpl   bp,sp
  411dba:	pop    ds
  411dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dbc:	dec    ebp
  411dbd:	(bad)  
  411dbe:	lods   al,BYTE PTR ds:[esi]
  411dbf:	pushf  
  411dc0:	jmp    FWORD PTR [esp+ebx*1]
  411dc3:	in     eax,0x90
  411dc5:	stos   BYTE PTR es:[edi],al
  411dc6:	jo     0x411d6c
  411dc8:	add    eax,0x6a07db4f
  411dcd:	ja     0x411da3
  411dcf:	push   ecx
  411dd0:	xchg   edx,eax
  411dd1:	fld    TBYTE PTR [ebx]
  411dd3:	jge    0x411df1
  411dd5:	and    DWORD PTR [ebx-0x221c7c6e],0x632dc5f9
  411ddf:	sbb    BYTE PTR [edi+edx*1-0x6ece1444],al
  411de6:	repz or DWORD PTR [edi-0x5dcfa693],ebp
  411ded:	icebp  
  411dee:	sub    ecx,DWORD PTR [ebp-0x63]
  411df1:	xchg   ebx,eax
  411df2:	add    edx,DWORD PTR [ebp-0x5669c269]
  411df8:	loop   0x411e61
  411dfa:	aad    0xcb
  411dfc:	stc    
  411dfd:	jmp    0x411da7
  411dff:	inc    esp
  411e00:	fcom   DWORD PTR ds:0x7d4bbbd4
  411e06:	dec    edx
  411e07:	test   DWORD PTR [ecx-0x4],ebp
  411e0a:	adc    al,0x57
  411e0c:	push   es
  411e0d:	ja     0x411e16
  411e0f:	test   al,0xf0
  411e11:	cmc    
  411e12:	add    al,0xd9
  411e14:	arpl   WORD PTR [ebp-0xada105f],bp
  411e1a:	xor    ch,0xfa
  411e1d:	rcl    cl,0xee
  411e20:	es push ecx
  411e22:	inc    esp
  411e23:	add    ah,BYTE PTR [ebx+0x5f21ccc4]
  411e29:	lods   eax,DWORD PTR ds:[esi]
  411e2a:	pop    esp
  411e2b:	stos   DWORD PTR es:[edi],eax
  411e2c:	mov    ecx,0x523972ab
  411e31:	cmp    ch,BYTE PTR [edx+ecx*8+0x65]
  411e35:	pusha  
  411e36:	jecxz  0x411e2a
  411e38:	xlat   BYTE PTR ds:[ebx]
  411e39:	xor    BYTE PTR ds:0x688b254e,0xda
  411e40:	lods   al,BYTE PTR ds:[esi]
  411e41:	add    eax,0xbb24f0dd
  411e46:	mov    DWORD PTR [ebx],eax
  411e48:	inc    edx
  411e49:	cld    
  411e4a:	mov    dh,0xcd
  411e4c:	pushf  
  411e4d:	mov    cl,0x8a
  411e4f:	jnp    0x411e9b
  411e51:	fimul  WORD PTR [edi-0x73]
  411e54:	setne  dh
  411e57:	pop    ss
  411e58:	aaa    
  411e59:	xchg   esp,eax
  411e5a:	xchg   esi,eax
  411e5b:	pop    esp
  411e5c:	stos   DWORD PTR es:[edi],eax
  411e5d:	xchg   edx,eax
  411e5e:	loope  0x411de8
  411e60:	add    DWORD PTR [ebx+ebp*8-0x646189aa],esp
  411e67:	dec    ebp
  411e68:	inc    ebp
  411e69:	enter  0x2dc7,0x50
  411e6d:	cld    
  411e6e:	fwait
  411e6f:	sbb    eax,0x2eb71edc
  411e74:	push   es
  411e75:	out    dx,eax
  411e76:	shl    DWORD PTR [esi+0x5cd369a8],0x6b
  411e7d:	int    0xdf
  411e7f:	in     eax,dx
  411e80:	mov    edx,0xdd8a9b08
  411e85:	and    al,0xbd
  411e88:	xchg   edx,eax
  411e89:	div    DWORD PTR [eax]
  411e8b:	cmp    eax,ecx
  411e8d:	add    BYTE PTR [edx],dh
  411e8f:	leave  
  411e90:	ins    DWORD PTR es:[edi],dx
  411e91:	stos   BYTE PTR es:[edi],al
  411e92:	jns    0x411e49
  411e94:	mov    WORD PTR [esi],cs
  411e96:	hlt    
  411e97:	inc    eax
  411e98:	jae    0x411e5c
  411e9a:	xor    esi,DWORD PTR [ecx-0x137d67b2]
  411ea0:	shr    bl,1
  411ea2:	lahf   
  411ea3:	jge    0x411e54
  411ea5:	mov    dl,0x79
  411ea7:	imul   ecx,DWORD PTR [ebx+0x2566d41d],0xa2c06238
  411eb1:	out    dx,al
  411eb2:	cli    
  411eb3:	xchg   ebx,eax
  411eb4:	cmp    DWORD PTR [edi+0x19b01d90],edx
  411eba:	jg     0x411f22
  411ebc:	pop    edx
  411ebd:	lock xchg esp,eax
  411ebf:	or     eax,0x7fa491
  411ec4:	push   cs
  411ec5:	fsubr  QWORD PTR [ecx-0x47bfb6c4]
  411ecb:	sub    BYTE PTR es:[edx-0x1d],bh
  411ecf:	xor    ecx,esp
  411ed1:	iret   
  411ed2:	lahf   
  411ed3:	adc    dh,BYTE PTR [eax]
  411ed5:	into   
  411ed6:	push   ds
  411ed7:	aas    
  411ed8:	push   0x59909ef2
  411edd:	fadd   QWORD PTR [ebp+0x47]
  411ee0:	and    dl,ch
  411ee2:	scas   al,BYTE PTR es:[edi]
  411ee3:	xor    edx,esi
  411ee5:	jne    0x411e98
  411ee7:	jmp    0xbe911d59
  411eec:	xchg   esi,eax
  411eed:	pop    ecx
  411eee:	xor    BYTE PTR [eax+0x36ac0f36],dh
  411ef4:	mov    dl,0xe0
  411ef6:	dec    edi
  411ef7:	jno    0x411f6f
  411ef9:	cdq    
  411efa:	mov    ebx,0xa7f69b50
  411eff:	dec    ecx
  411f00:	sub    eax,0x4de763db
  411f05:	(bad)  
  411f06:	sbb    edi,DWORD PTR [ebx]
  411f08:	and    BYTE PTR [eax-0x3e8c5d61],0xe0
  411f0f:	add    cl,BYTE PTR [ecx+0x558b1055]
  411f15:	lods   al,BYTE PTR ds:[esi]
  411f16:	xor    eax,0xba699573
  411f1b:	mov    DWORD PTR [ebp+0x14],edx
  411f1e:	cmp    eax,DWORD PTR [ebp+0x10]
  411f21:	jne    0x416379
  411f27:	mov    eax,edx
  411f29:	cmp    DWORD PTR [ebp+0xc],eax
  411f2c:	jne    0x416379
  411f32:	mov    DWORD PTR [ebp+0x8],0xba699573
  411f39:	jmp    0x4124c3
  411f3e:	(bad)  
  411f3f:	repz mov al,ds:0x46199861
  411f45:	sbb    dh,cl
  411f47:	jmp    0x44bdcdc2
  411f4c:	stos   BYTE PTR es:[edi],al
  411f4d:	scas   al,BYTE PTR es:[edi]
  411f4e:	and    eax,0x3d161630
  411f53:	add    al,0x16
  411f55:	push   ss
  411f56:	mov    al,ds:0x932db5fc
  411f5b:	push   esp
  411f5c:	push   0xd8bb93b5
  411f61:	hlt    
  411f62:	or     dl,BYTE PTR [edx-0x4d44e5a4]
  411f68:	nop
  411f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f6a:	inc    edi
  411f6b:	(bad)  
  411f6d:	bound  eax,QWORD PTR [esi-0x186beed5]
  411f73:	mov    ecx,0x3822f0c2
  411f78:	popf   
  411f79:	out    0xa,eax
  411f7b:	dec    DWORD PTR [edi]
  411f7d:	popf   
  411f7e:	sub    bh,ch
  411f80:	std    
  411f81:	add    BYTE PTR [edx+0x5928ddb1],cl
  411f87:	scas   al,BYTE PTR es:[edi]
  411f88:	jae    0x411f22
  411f8a:	and    eax,0x7f0b6e79
  411f8f:	jns    0x411f27
  411f91:	test   DWORD PTR [esi+ecx*8],esp
  411f94:	mov    edi,DWORD PTR [edx+0x75d139ac]
  411f9a:	(bad)  
  411f9b:	xchg   ecx,eax
  411f9c:	scas   eax,DWORD PTR es:[edi]
  411f9d:	out    dx,al
  411f9e:	mov    WORD PTR [ebx],ss
  411fa0:	cmp    DWORD PTR [eax],eax
  411fa2:	outs   dx,DWORD PTR ds:[esi]
  411fa3:	inc    eax
  411fa4:	lea    esp,[edi]
  411fa6:	in     eax,dx
  411fa7:	push   esi
  411fa8:	adc    bl,BYTE PTR [edi+0x46]
  411fab:	mov    al,BYTE PTR [edi]
  411fad:	cs jmp 0x412011
  411fb0:	mov    ecx,DWORD PTR [ebx]
  411fb2:	ins    DWORD PTR es:[edi],dx
  411fb3:	push   ebp
  411fb4:	(bad)  
  411fb5:	not    DWORD PTR [edi+0x57]
  411fb8:	lahf   
  411fb9:	loop   0x411fae
  411fbb:	outs   dx,DWORD PTR ds:[esi]
  411fbc:	push   0xffffff98
  411fbe:	daa    
  411fbf:	add    dh,BYTE PTR [edi+0x384109fa]
  411fc5:	in     eax,0x68
  411fc7:	add    cl,BYTE PTR [ebp+0x25bb4f16]
  411fcd:	inc    edi
  411fce:	ins    BYTE PTR es:[edi],dx
  411fcf:	pop    eax
  411fd0:	dec    edi
  411fd1:	jg     0x411feb
  411fd3:	les    eax,FWORD PTR [eax+edi*2]
  411fd6:	jl     0x411fc1
  411fd8:	sbb    edx,DWORD PTR [esp+ebx*1+0x5ea54f73]
  411fdf:	adc    DWORD PTR [ebx],eax
  411fe1:	test   al,0x31
  411fe3:	jns    0x411f83
  411fe5:	loopne 0x411f74
  411fe7:	hlt    
  411fe8:	xchg   esp,eax
  411fe9:	pop    edi
  411fea:	and    eax,0xe404ae6d
  411fef:	icebp  
  411ff0:	loope  0x41201e
  411ff2:	jl     0x412053
  411ff4:	fcom   DWORD PTR [esi+0x5c5358ba]
  411ffa:	aaa    
  411ffb:	stc    
  411ffc:	sbb    ah,BYTE PTR [esi+eax*1-0x1b2adea6]
  412003:	out    0x36,al
  412005:	popa   
  412006:	pop    esi
  412007:	xor    eax,0x75faa3aa
  41200c:	in     al,0xe
  41200e:	jne    0x411ffe
  412010:	mov    ecx,0x8a21ac81
  412015:	lahf   
  412016:	test   edx,esi
  412018:	jmp    0x626a617d
  41201d:	xchg   esi,eax
  41201e:	inc    ebx
  41201f:	in     eax,0xe2
  412021:	xchg   edx,eax
  412022:	sbb    BYTE PTR [ecx-0x662beb93],ah
  412028:	cs loopne 0x41204a
  41202b:	mov    eax,ds:0x5d65acf6
  412030:	aaa    
  412031:	pop    ecx
  412032:	sub    dl,BYTE PTR [ebx]
  412034:	dec    esi
  412035:	sub    bh,al
  412037:	mov    ch,0x1e
  412039:	push   cs
  41203a:	sub    al,0xc9
  41203c:	mov    ah,BYTE PTR [ebp+esi*4-0xb1488b8]
  412043:	cs jmp 0x779f:0x22f87b60
  41204b:	push   es
  41204c:	cli    
  41204d:	inc    edi
  41204e:	push   cs
  41204f:	iret   
  412050:	mov    dl,0x92
  412052:	in     al,0xdd
  412054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412055:	jmp    0x41208f
  412057:	fld    TBYTE PTR [ecx+0x7e]
  41205a:	mov    ah,al
  41205c:	in     al,0x56
  41205e:	pop    ebx
  41205f:	out    0x19,eax
  412061:	test   DWORD PTR [ebx],esi
  412063:	sahf   
  412064:	xchg   DWORD PTR [ecx-0x22c92685],edi
  41206a:	int3   
  41206b:	sub    DWORD PTR [bx+di-0x152],esp
  412070:	mov    ch,0x6a
  412072:	sbb    eax,0x32d7add3
  412077:	call   0xeb53:0x1ff76ec
  41207e:	outs   dx,DWORD PTR ds:[esi]
  41207f:	test   eax,0x7dbb2dc0
  412084:	nop
  412085:	cmp    al,0x79
  412087:	mov    esp,0x764dc490
  41208c:	sub    BYTE PTR [eax-0x46],bl
  41208f:	pusha  
  412090:	jne    0x41210b
  412092:	push   es
  412093:	cmp    al,BYTE PTR [edi+0x1c58ea0d]
  412099:	xor    cl,BYTE PTR [eax]
  41209b:	mov    eax,0xdc395315
  4120a0:	mov    ecx,0x10809adf
  4120a5:	in     eax,dx
  4120a6:	mov    esi,0x1508a8e3
  4120ab:	ret    0x8663
  4120ae:	or     BYTE PTR [ebx+0x6c],bl
  4120b1:	add    al,0x64
  4120b3:	and    ecx,DWORD PTR [ebx-0x1379e730]
  4120b9:	int    0x1b
  4120bb:	cmc    
  4120bc:	inc    ebx
  4120bd:	test   DWORD PTR [edx+0x7d81200d],ecx
  4120c3:	push   esp
  4120c4:	test   BYTE PTR [ebp+eiz*8+0x71a5a68c],ah
  4120cb:	mov    dl,0x27
  4120cd:	xchg   esi,eax
  4120ce:	pop    esi
  4120cf:	cmp    eax,0xccf35786
  4120d4:	jmp    0x1bc6:0x666a6e52
  4120db:	jl     0x4120f1
  4120dd:	jg     0x412108
  4120df:	ret    
  4120e0:	stos   DWORD PTR es:[di],eax
  4120e2:	xor    bh,BYTE PTR [edi]
  4120e4:	test   BYTE PTR [edx-0x3e123ec3],0x71
  4120eb:	sub    bl,BYTE PTR [ebx+eax*4-0xfabd7c1]
  4120f2:	xor    BYTE PTR [esi+0x679b38cf],bl
  4120f8:	mov    dh,0xb3
  4120fa:	cdq    
  4120fb:	adc    al,0x3
  4120fd:	retf   0x615e
  412100:	pop    ss
  412101:	jge    0x412138
  412103:	push   ss
  412104:	(bad)  
  412105:	pop    es
  412106:	mov    esi,0xa6b4b784
  41210b:	xchg   edi,eax
  41210c:	or     al,0x22
  41210e:	mov    ch,0xb4
  412110:	pop    ds
  412111:	cmp    eax,0x74483652
  412116:	mov    esi,0x59a40d43
  41211b:	mov    ebp,0x6d932a40
  412120:	scas   al,BYTE PTR es:[edi]
  412121:	call   0x5f4b:0xf1201bf3
  412128:	inc    esp
  412129:	or     DWORD PTR [ebx],ebx
  41212b:	pop    esp
  41212c:	neg    ebp
  41212e:	lods   eax,DWORD PTR ds:[esi]
  41212f:	int    0x1f
  412131:	xor    BYTE PTR [edi-0x5c6c6dfd],dl
  412137:	push   ecx
  412138:	fs inc ebp
  41213a:	call   FWORD PTR [edi+eiz*1+0x28]
  41213e:	jp     0x41217d
  412140:	jnp    0x412102
  412142:	outs   dx,DWORD PTR ds:[esi]
  412143:	dec    eax
  412144:	ror    DWORD PTR [ebx+0x18],1
  412147:	gs pop esi
  412149:	xor    ecx,eax
  41214b:	bound  edi,QWORD PTR [ecx]
  41214d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41214e:	add    esp,DWORD PTR [esi+0x6931a8e7]
  412154:	arpl   WORD PTR [edi+0x1133f2a6],di
  41215a:	adc    DWORD PTR [ecx-0x774ec20d],edi
  412160:	and    ah,0xf1
  412163:	mov    dl,0xf7
  412165:	push   edi
  412166:	shl    DWORD PTR ds:[ebp-0x38031e20],1
  41216d:	adc    edx,DWORD PTR [ebx+0x35]
  412170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412171:	mov    bl,0xf1
  412173:	dec    ecx
  412174:	mov    edi,0x8a593ced
  412179:	xchg   edx,eax
  41217a:	xchg   BYTE PTR [edx],ah
  41217c:	jo     0x412131
  41217e:	push   ebp
  41217f:	nop
  412180:	mov    DWORD PTR [ebp+eax*1-0x25717891],ecx
  412187:	jae    0x412162
  412189:	mov    bl,0xd7
  41218b:	shl    BYTE PTR [ebx+0x3031e12a],cl
  412191:	add    eax,0x9dd2571d
  412196:	ds xor eax,0x21fe6313
  41219c:	inc    ecx
  41219d:	jno    0x412137
  41219f:	xor    ebp,DWORD PTR [edx]
  4121a1:	shl    DWORD PTR [eax+0x3d],1
  4121a4:	push   ecx
  4121a5:	ror    DWORD PTR [eax-0x6c],0xad
  4121a9:	sbb    DWORD PTR [ebp-0x18],0x491cac00
  4121b0:	xchg   esp,eax
  4121b1:	fwait
  4121b2:	int3   
  4121b3:	sahf   
  4121b4:	fidiv  WORD PTR [eax+edx*2+0x59c658c8]
  4121bb:	mov    ebp,0xbbca939a
  4121c0:	shl    DWORD PTR [edi-0x21],1
  4121c3:	aas    
  4121c4:	mov    eax,0x83bd2567
  4121c9:	lods   eax,DWORD PTR ds:[esi]
  4121ca:	nop    DWORD PTR [ebp-0x68816a82]
  4121d1:	cdq    
  4121d2:	(bad)  
  4121d3:	(bad)  [ebx+0x8]
  4121d6:	mov    eax,ds:0x63c7d598
  4121db:	mov    al,0x50
  4121dd:	arpl   WORD PTR [ecx],bx
  4121df:	mov    dl,0xf2
  4121e1:	sbb    ebp,DWORD PTR [edx-0x15]
  4121e4:	push   ecx
  4121e5:	and    eax,0xb361065f
  4121ea:	push   eax
  4121eb:	mov    ds:0x3040f9ac,eax
  4121f0:	pop    esi
  4121f1:	nop
  4121f2:	mov    bh,0x68
  4121f4:	sub    eax,0xeb1aa784
  4121f9:	push   ss
  4121fa:	fcomp  DWORD PTR [ebx]
  4121fc:	cdq    
  4121fd:	test   eax,0x62b59aeb
  412202:	xchg   edx,eax
  412203:	xchg   BYTE PTR [eax-0x70],ah
  412206:	iret   
  412207:	out    0x62,eax
  412209:	imul   esp,DWORD PTR [ebx],0xffffff8b
  41220c:	fistp  DWORD PTR [esi]
  41220e:	adc    DWORD PTR [edx-0x4],0xe269d4aa
  412215:	push   ds
  412216:	js     0x41228c
  412218:	test   DWORD PTR [ebx+eax*2+0xc],eax
  41221c:	and    eax,0x642c8087
  412221:	xchg   ebx,eax
  412222:	push   esi
  412223:	xchg   esi,eax
  412224:	dec    eax
  412225:	daa    
  412226:	mov    DWORD PTR [edi+0x53],eax
  412229:	xlat   BYTE PTR ds:[ebx]
  41222a:	int    0x89
  41222c:	jae    0x4121b5
  41222e:	mov    es,WORD PTR [eax]
  412230:	add    dl,bh
  412232:	push   ebx
  412233:	enter  0x7053,0x21
  412237:	dec    ecx
  412238:	cmp    dl,BYTE PTR [edx-0x651bb442]
  41223e:	pop    ss
  41223f:	aas    
  412240:	inc    ebp
  412241:	or     ah,dl
  412243:	in     eax,0x9d
  412245:	sbb    eax,ecx
  412247:	mov    ds:0x8e36f620,eax
  41224c:	scas   eax,DWORD PTR es:[edi]
  41224d:	outs   dx,DWORD PTR ds:[esi]
  41224e:	adc    eax,0x154f1aba
  412253:	int    0xe4
  412255:	sub    DWORD PTR [edx-0x41],eax
  412258:	xchg   DWORD PTR [edi],eax
  41225a:	mov    ch,0xb6
  41225c:	call   0x65ff4b6e
  412261:	jno    0x412225
  412263:	or     BYTE PTR fs:[esi-0x6],al
  412267:	and    ah,dl
  412269:	xchg   DWORD PTR [eax-0x1631dab7],edi
  41226f:	jne    0x412247
  412271:	adc    DWORD PTR [edx-0x21],ebx
  412274:	push   edi
  412275:	and    BYTE PTR [ecx-0x4c],al
  412278:	cdq    
  412279:	inc    ecx
  41227a:	fwait
  41227b:	call   0x383:0x1c911c11
  412282:	ret    0x627e
  412285:	cli    
  412286:	xchg   ebx,eax
  412287:	xchg   ebx,eax
  412288:	sub    DWORD PTR [edi],esi
  41228a:	cmc    
  41228b:	lock mov dl,0x43
  41228e:	(bad)  
  41228f:	das    
  412290:	scas   eax,DWORD PTR es:[edi]
  412291:	xor    DWORD PTR [edi+eax*4+0x7ea471b2],ecx
  412298:	sbb    dh,BYTE PTR [ebp+0x5b]
  41229b:	sbb    ebp,ebx
  41229d:	and    BYTE PTR [ecx],bl
  41229f:	fld    DWORD PTR [edi+0x126cc1e2]
  4122a5:	retf   0xdac1
  4122a8:	push   esp
  4122a9:	call   0x7193:0x14967dcc
  4122b0:	adc    al,0x15
  4122b2:	pop    ds
  4122b3:	xchg   DWORD PTR [edi],esp
  4122b5:	out    dx,al
  4122b6:	out    0xa0,al
  4122b8:	ror    DWORD PTR [eax*4-0x34a5dede],0xfc
  4122c0:	fild   WORD PTR [edx+0x1b]
  4122c3:	hlt    
  4122c4:	xlat   BYTE PTR ds:[ebx]
  4122c5:	mov    ds:0x92e42a87,al
  4122ca:	loop   0x412301
  4122cc:	xchg   edx,eax
  4122cd:	enter  0xe796,0xc7
  4122d1:	adc    eax,0xe1f4e347
  4122d6:	pop    edx
  4122d7:	xchg   ebp,eax
  4122d8:	mov    ecx,DWORD PTR [edx-0x64d3235e]
  4122de:	mov    ebx,0xac60bea3
  4122e3:	mov    ds:0x5c88a441,eax
  4122e8:	es addr16 jb 0x4122b4
  4122ec:	int    0xf4
  4122ee:	(bad)  
  4122ef:	in     eax,0xe7
  4122f1:	inc    edi
  4122f2:	dec    edx
  4122f3:	pop    eax
  4122f4:	je     0x4122ca
  4122f6:	int3   
  4122f7:	sbb    eax,0x48d221ab
  4122fc:	jge    0x41232c
  4122fe:	inc    edi
  4122ff:	push   esi
  412300:	xchg   esi,eax
  412301:	and    ecx,DWORD PTR [edi]
  412303:	sub    DWORD PTR [edi],0xa5b12c17
  412309:	out    dx,eax
  41230a:	inc    esi
  41230b:	jle    0x41231d
  41230d:	or     BYTE PTR [ecx-0x3a],cl
  412310:	std    
  412311:	stc    
  412312:	sar    BYTE PTR [edi-0x6353c9fb],cl
  412318:	cmp    al,0xb6
  41231a:	stos   DWORD PTR es:[edi],eax
  41231b:	fs and al,0x7a
  41231e:	(bad)  
  41231f:	sub    ch,al
  412321:	and    BYTE PTR [ebp+0x12c8bfa3],al
  412327:	mov    ch,0xe4
  412329:	adc    esp,DWORD PTR [ecx-0x63091e34]
  41232f:	pop    ss
  412330:	jle    0x4122ea
  412332:	mov    al,ds:0x2c1bc3f9
  412337:	add    DWORD PTR [ebx],0x6e
  41233a:	les    esp,FWORD PTR [esi-0x19]
  41233d:	pop    eax
  41233e:	fcomp  DWORD PTR [eax-0x1f]
  412341:	push   esi
  412342:	popf   
  412343:	cmp    al,0x50
  412345:	outs   dx,BYTE PTR ds:[esi]
  412346:	cld    
  412347:	or     DWORD PTR [ebx],edi
  412349:	and    al,0x9c
  41234b:	cmp    DWORD PTR [edx-0x1525b457],0xffffff9d
  412352:	xchg   esi,eax
  412353:	cmp    BYTE PTR [ecx-0xd2ebb67],0x71
  41235a:	jg     0x412307
  41235c:	loope  0x41233c
  41235e:	fsub   DWORD PTR [edi+0x3d]
  412361:	fs in  al,dx
  412363:	cmc    
  412364:	cmp    al,0x9d
  412366:	adc    DWORD PTR ds:0x502b4bb4,esp
  41236c:	xchg   edi,eax
  41236d:	xor    bl,ch
  41236f:	scas   al,BYTE PTR es:[edi]
  412370:	out    0x75,al
  412372:	in     al,dx
  412373:	cmp    bl,BYTE PTR [ebp+0x46]
  412376:	sbb    al,0x14
  412378:	loopne 0x4123ad
  41237a:	sbb    eax,0xd9d1a9ef
  41237f:	ja     0x412318
  412381:	sbb    al,0x94
  412383:	lds    eax,FWORD PTR [ecx+eax*2]
  412386:	aaa    
  412387:	inc    eax
  412388:	mov    edi,0x4e87f38b
  41238d:	mov    eax,0x7e2dd5d9
  412392:	(bad)  
  412393:	in     eax,0x52
  412395:	jae    0x412363
  412397:	into   
  412398:	mov    dh,0x3c
  41239a:	push   ss
  41239b:	cs je  0x412410
  41239e:	adc    DWORD PTR [edx+0x7f],0x18
  4123a2:	retf   0x3203
  4123a5:	addr16 ss jbe 0x4123cb
  4123a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123aa:	cmp    BYTE PTR [esi],al
  4123ac:	inc    ecx
  4123ad:	mov    esi,0x5d1ce491
  4123b2:	out    0x1b,al
  4123b4:	nop
  4123b5:	not    BYTE PTR [eax+0x114386a3]
  4123bb:	mov    ah,0xcb
  4123bd:	sub    bh,ch
  4123bf:	dec    edi
  4123c0:	or     edi,DWORD PTR [ecx-0x41aac837]
  4123c6:	adc    DWORD PTR [esi+eiz*2],edi
  4123c9:	sub    DWORD PTR [eax],0xffffffe4
  4123cc:	test   eax,0xb94da441
  4123d1:	gs retf 0x488f
  4123d5:	pusha  
  4123d6:	dec    edx
  4123d7:	push   edi
  4123d8:	lods   al,BYTE PTR ds:[esi]
  4123d9:	inc    edx
  4123da:	or     bh,ah
  4123dc:	pop    esp
  4123dd:	pop    edx
  4123de:	mov    edx,0x9bfe81d0
  4123e3:	sbb    al,0x7
  4123e5:	cs js  0x412443
  4123e8:	mov    ds:0xab4a690c,al
  4123ed:	in     eax,0x64
  4123ef:	rcr    DWORD PTR [edx],cl
  4123f1:	and    DWORD PTR [ecx+esi*1],ebx
  4123f4:	and    cl,0xef
  4123f7:	xor    bh,ch
  4123f9:	fs push edx
  4123fb:	push   ds
  4123fc:	and    BYTE PTR [esi],bl
  4123fe:	add    esi,ebx
  412400:	dec    edi
  412401:	mov    ch,0xa3
  412403:	lahf   
  412404:	fmul   st,st(3)
  412406:	sub    BYTE PTR [edx],ch
  412408:	mov    ds:0xf57b9828,eax
  41240d:	pop    ebp
  41240e:	cs loopne 0x412435
  412411:	inc    ebp
  412412:	imul   DWORD PTR [eax]
  412414:	pop    ss
  412415:	sbb    ch,BYTE PTR [ebp-0x28]
  412418:	or     ch,BYTE PTR [esi]
  41241a:	je     0x412423
  41241c:	scas   eax,DWORD PTR es:[edi]
  41241d:	rcpps  xmm6,XMMWORD PTR [ebp*4-0x509990d0]
  412425:	nop
  412426:	hlt    
  412427:	fstp   DWORD PTR ds:0xae3ffe30
  41242d:	(bad)  
  41242e:	push   esi
  41242f:	aad    0xbc
  412431:	sub    cl,BYTE PTR ds:0x1ef2acc9
  412437:	cmp    al,0x2
  412439:	xlat   BYTE PTR ds:[ebx]
  41243a:	bound  eax,QWORD PTR [ecx+0x7dfc4949]
  412440:	sub    ch,BYTE PTR [edx-0x71299769]
  412446:	cmp    al,0x1c
  412448:	pop    edi
  412449:	dec    edx
  41244a:	aad    0x67
  41244c:	sub    esi,DWORD PTR [esi]
  41244e:	mov    ah,0xbf
  412450:	mov    edi,0x1ff83c4d
  412455:	ja     0x412430
  412457:	adc    eax,DWORD PTR [ebx-0x31]
  41245a:	adc    al,0x20
  41245c:	addr16 repnz add eax,0xb1d74e9a
  412463:	cdq    
  412464:	xchg   edx,eax
  412465:	int3   
  412466:	mov    cl,0xb7
  412468:	popf   
  412469:	jl     0x41240b
  41246b:	xor    BYTE PTR [ebp+0x3],ch
  41246e:	ror    DWORD PTR [ebx-0x60],0x3
  412472:	mov    dh,0xcb
  412474:	mov    ecx,0xcb99c3d4
  412479:	sub    BYTE PTR ds:0x5198bab4,cl
  41247f:	stos   DWORD PTR es:[edi],eax
  412480:	sub    BYTE PTR [esi+0x30a42302],ch
  412486:	mov    DWORD PTR [eax+0x284da43],esi
  41248c:	xchg   edx,eax
  41248d:	lea    esp,[ecx+0x10]
  412490:	cmp    dl,BYTE PTR [ebx-0x1d]
  412493:	rol    DWORD PTR [edx],cl
  412495:	add    edx,DWORD PTR [esi+0x4]
  412498:	sub    edx,DWORD PTR [edx-0x3ebcb37e]
  41249e:	pop    cx
  4124a0:	pop    edx
  4124a1:	mov    esp,0xc9c6a562
  4124a6:	ja     0x4124c7
  4124a8:	and    eax,0xcba44f7e
  4124ad:	push   esp
  4124ae:	shl    BYTE PTR [esi+0x13],1
  4124b1:	in     al,dx
  4124b2:	dec    esp
  4124b3:	repz int 0x2d
  4124b6:	adc    al,0xf9
  4124b8:	fcom   QWORD PTR [ecx]
  4124ba:	les    edx,FWORD PTR [ebp-0x1af833bb]
  4124c0:	into   
  4124c1:	lahf   
  4124c2:	ror    BYTE PTR [ecx+0x45c70c4d],cl
  4124c8:	mov    al,ds:0xba699577
  4124cd:	mov    DWORD PTR [ebp-0x5c],ecx
  4124d0:	mov    DWORD PTR [ebp-0x48],0xba69957b
  4124d7:	mov    DWORD PTR [ebp-0x44],ecx
  4124da:	mov    DWORD PTR [ebp-0x38],0xba69957f
  4124e1:	mov    DWORD PTR [ebp-0x34],ecx
  4124e4:	jmp    0x412a6e
  4124e9:	xchg   edi,eax
  4124ea:	(bad)  
  4124eb:	jbe    0x412531
  4124ed:	pop    esi
  4124ee:	adc    al,0x25
  4124f0:	mov    ah,0xc9
  4124f2:	pop    es
  4124f3:	shr    BYTE PTR [eax-0x4d7bc089],cl
  4124f9:	push   edx
  4124fa:	es push ss
  4124fc:	push   ss
  4124fd:	cmp    eax,0x58161604
  412502:	mov    ecx,0x5e8fe730
  412507:	ror    DWORD PTR [edx+0x27d33fd5],1
  41250d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250e:	or     al,0x99
  412510:	shl    BYTE PTR [ecx],1
  412512:	sahf   
  412513:	ja     0x412572
  412515:	bnd jo 0x41251d
  412518:	test   DWORD PTR [esi+0x76c8190e],ebp
  41251e:	das    
  41251f:	mov    esp,DWORD PTR [esi+0x1b8c06ee]
  412525:	mov    esi,0xe3d263d
  41252a:	xchg   ebx,eax
  41252b:	add    edx,edx
  41252d:	push   es
  41252e:	sbb    bh,BYTE PTR ds:0xf53fb9c7
  412534:	repnz push ecx
  412536:	jge    0x4124d4
  412538:	in     al,dx
  412539:	ds call 0xfc93:0x1ba9738f
  412541:	lds    ebp,FWORD PTR [esi+0x47b0e97f]
  412547:	mov    esi,0x4c2a35b2
  41254c:	popa   
  41254d:	or     bh,al
  41254f:	mov    dl,0xf4
  412551:	push   ebp
  412552:	push   0xffffffd6
  412554:	push   es
  412555:	and    edi,ecx
  412557:	out    dx,eax
  412558:	cmp    ebp,DWORD PTR [edi+0x5d]
  41255b:	add    esp,DWORD PTR [ebx+0x7a]
  41255e:	push   edx
  41255f:	jl     0x4125b8
  412561:	cs ins DWORD PTR es:[edi],dx
  412563:	mov    esp,0xc7bb87a3
  412568:	inc    esi
  412569:	sub    eax,0x65986d33
  41256e:	jns    0x41254d
  412570:	stos   BYTE PTR es:[edi],al
  412571:	cmp    eax,0xfd95b7f8
  412576:	xchg   esi,eax
  412577:	mov    cl,0x67
  412579:	lods   eax,DWORD PTR ds:[esi]
  41257a:	iret   
  41257b:	jo     0x4125c9
  41257d:	in     eax,0xfc
  41257f:	(bad)  
  412580:	aad    0x6e
  412582:	popa   
  412583:	fcom   QWORD PTR [eax+0x1fec72fa]
  412589:	rol    DWORD PTR fs:[edx+0x114aefdf],cl
  412590:	mov    ebx,0x3a4fba82
  412595:	loope  0x412533
  412597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412598:	add    ah,cl
  41259a:	xor    DWORD PTR [ebp-0x6686c449],0x39d94444
  4125a4:	daa    
  4125a5:	push   0xc5aae512
  4125aa:	mov    DWORD PTR [ecx+0x6216d82],esp
  4125b0:	or     edx,DWORD PTR [ecx]
  4125b2:	adc    eax,0x31dcfdb3
  4125b7:	jecxz  0x412599
  4125b9:	xchg   esp,eax
  4125ba:	jns    0x41255d
  4125bc:	mov    ds:0xf938d0e5,al
  4125c1:	xor    BYTE PTR ds:0xd58b1bf2,0x9f
  4125c8:	cmp    esi,DWORD PTR [edx+0x761eee28]
  4125ce:	nop
  4125cf:	test   BYTE PTR [edx],dh
  4125d1:	cmp    al,0xf0
  4125d3:	(bad)  
  4125d5:	jecxz  0x41256d
  4125d7:	push   esi
  4125d8:	neg    DWORD PTR [ecx+ebp*1-0x744aa839]
  4125df:	lock push eax
  4125e1:	in     al,dx
  4125e2:	add    bh,BYTE PTR [esi+0x366557dd]
  4125e8:	cmp    al,0xc3
  4125ea:	mov    bl,0xe1
  4125ec:	add    eax,0xe89cf85e
  4125f1:	push   ebx
  4125f2:	jo     0x41257d
  4125f4:	out    0xc6,al
  4125f6:	imul   ebx,DWORD PTR [ecx+0x2f],0xffffffb7
  4125fa:	ja     0x412629
  4125fc:	pop    edx
  4125fd:	mov    bl,0xda
  4125ff:	das    
  412600:	cmp    cl,cl
  412602:	push   cs
  412603:	(bad)  
  412604:	push   eax
  412605:	xchg   ebp,eax
  412606:	jns    0x412589
  412608:	adc    bl,bl
  41260a:	add    al,BYTE PTR [esi*8+0x6417832d]
  412611:	cmc    
  412612:	sbb    al,0xcd
  412614:	fistp  QWORD PTR [edi+0xd7cb38a]
  41261a:	stc    
  41261b:	jg     0x4125bd
  41261d:	xchg   edx,ebp
  41261f:	mov    DWORD PTR [edi-0x1f3410c5],edi
  412625:	shl    DWORD PTR [ebx+0x74526550],cl
  41262b:	jb     0x41268b
  41262d:	es aas 
  41262f:	and    eax,0x59d065a9
  412634:	mov    esi,DWORD PTR [edi+eax*2]
  412637:	xchg   ebp,eax
  412638:	imul   esi,DWORD PTR [esi],0xffffff80
  41263b:	mov    bh,0xa7
  41263d:	scas   eax,DWORD PTR es:[edi]
  41263e:	adc    BYTE PTR [eax+0x7a12e7b0],ah
  412644:	lods   eax,DWORD PTR ds:[esi]
  412645:	fs aam 0x0
  412648:	mov    al,ds:0xef2902ea
  41264d:	adc    al,0x86
  41264f:	out    dx,al
  412650:	aad    0x84
  412652:	fwait
  412653:	inc    eax
  412654:	icebp  
  412655:	rcl    BYTE PTR [esi+0x52],0xd7
  412659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41265a:	fs mov cl,0xa1
  41265d:	and    al,0xeb
  41265f:	mov    esp,0x2641616
  412664:	pop    ss
  412665:	in     al,0xd8
  412667:	and    al,0x9b
  412669:	jnp    0x4126b8
  41266b:	nop
  41266c:	fld    DWORD PTR [ecx]
  41266e:	rcl    DWORD PTR [edx+0x7f4f3ea1],1
  412674:	cwde   
  412675:	not    al
  412677:	xchg   esp,eax
  412678:	popf   
  412679:	lods   eax,DWORD PTR ds:[esi]
  41267a:	dec    ebp
  41267b:	mov    esi,0xf00385fe
  412680:	(bad)  [ebx+0x104268ec]
  412686:	mov    dl,0x28
  412688:	fsubr  DWORD PTR [ecx]
  41268a:	mov    al,BYTE PTR [ecx+0x640e4887]
  412690:	clc    
  412691:	int    0x16
  412693:	sub    ebx,DWORD PTR [ecx+ecx*8-0x2a]
  412697:	sub    al,0x71
  412699:	dec    eax
  41269a:	xchg   ebx,eax
  41269b:	sbb    esi,DWORD PTR [esi-0x17ac7cfc]
  4126a1:	jae    0x41262a
  4126a3:	pop    ds
  4126a4:	imul   ebx,DWORD PTR [ebp-0x4ccd5ed5],0xd0b71d3c
  4126ae:	sub    DWORD PTR [esi+0x3e],eax
  4126b1:	popf   
  4126b2:	fidiv  WORD PTR [ebp-0x76f8cbea]
  4126b8:	or     eax,DWORD PTR [ebx]
  4126ba:	inc    ebx
  4126bb:	adc    BYTE PTR [edi+0x7f],ah
  4126be:	sbb    al,0xd8
  4126c0:	repz into 
  4126c2:	and    bl,bh
  4126c4:	sbb    edx,eax
  4126c6:	loope  0x4126ef
  4126c8:	mov    edi,0x633ca311
  4126cd:	dec    esi
  4126ce:	mov    dh,0x19
  4126d0:	out    0x90,al
  4126d2:	mov    ebp,0x55a61277
  4126d7:	or     dl,BYTE PTR [ecx+ebx*8-0x3cbaa2d7]
  4126de:	imul   ebp,edi,0xfffffffd
  4126e1:	jb     0x412747
  4126e3:	aad    0x48
  4126e5:	dec    ecx
  4126e6:	outs   dx,DWORD PTR ds:[esi]
  4126e7:	icebp  
  4126e8:	mov    ebx,0x4db2bbbf
  4126ed:	out    dx,al
  4126ee:	xchg   edx,eax
  4126ef:	daa    
  4126f0:	fisub  DWORD PTR [edi+edi*2+0x72983770]
  4126f7:	leave  
  4126f8:	loopne 0x412706
  4126fa:	sub    al,0x8a
  4126fc:	mov    ds:0x40e2f51e,al
  412701:	mov    bh,0xc
  412703:	leave  
  412704:	idiv   ah
  412706:	jae    0x4126b4
  412708:	lock fsubr QWORD PTR ds:0xd22ab3e9
  41270f:	dec    edx
  412710:	iret   
  412711:	xor    eax,0x73358336
  412716:	scas   al,BYTE PTR es:[edi]
  412717:	xchg   al,dh
  412719:	clc    
  41271a:	mov    bh,0xe9
  41271c:	rcr    BYTE PTR [edx+0x5b],0x3
  412720:	sub    DWORD PTR ds:0x40cdf2f0,0xffffffb8
  412727:	inc    ebx
  412728:	cld    
  412729:	inc    ebx
  41272a:	call   0xde85:0xc4adcb75
  412731:	popa   
  412732:	ret    
  412733:	jge    0x412777
  412735:	imul   edi,DWORD PTR [ebp+0x1a],0xc812038e
  41273c:	inc    esp
  41273d:	das    
  41273e:	cmc    
  41273f:	or     al,0xc
  412741:	in     al,dx
  412742:	push   ss
  412743:	test   DWORD PTR [ebx+0x4864cfc1],ecx
  412749:	scas   eax,DWORD PTR es:[edi]
  41274a:	das    
  41274b:	or     ah,0xfb
  41274e:	xchg   esp,eax
  41274f:	cli    
  412750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412751:	mov    al,ds:0xce93310c
  412756:	nop
  412757:	and    esi,edi
  412759:	push   edx
  41275a:	mov    ebx,0x2482f8ad
  41275f:	ja     0x4127df
  412761:	pop    edi
  412762:	dec    eax
  412763:	mov    eax,ds:0xde350b6a
  412768:	jle    0x412747
  41276a:	pop    eax
  41276b:	mov    ds:0xb8ed603a,eax
  412770:	retf   
  412771:	xlat   BYTE PTR ds:[ebx]
  412772:	jnp    0x41271a
  412774:	and    eax,0xe7b15ff
  412779:	adc    bh,BYTE PTR [ebx-0xa]
  41277c:	adc    al,0xf3
  41277e:	jmp    0xfdd7:0x7b0abe6c
  412785:	mov    dl,0x1f
  412787:	das    
  412788:	mov    esi,0xef01d443
  41278d:	repz aad 0xca
  412790:	mov    eax,ds:0x4657d028
  412795:	out    dx,eax
  412796:	inc    edi
  412797:	cli    
  412798:	(bad)  
  412799:	mov    dl,0xc0
  41279b:	pop    ebp
  41279c:	test   eax,0x6a93192b
  4127a1:	and    DWORD PTR [esi],eax
  4127a3:	xor    DWORD PTR [ebx+0x40092253],ebx
  4127a9:	sub    esp,esp
  4127ab:	mov    ds:0x41c6a261,al
  4127b0:	mov    esp,0xb452138a
  4127b5:	jmp    0x7d9b1c4b
  4127ba:	push   cs
  4127bb:	fs mov dl,0x64
  4127be:	push   ebx
  4127bf:	mov    esi,0xd86627e7
  4127c4:	adc    al,0xe0
  4127c6:	add    BYTE PTR [ecx-0x71],bh
  4127c9:	loope  0x41279b
  4127cb:	loop   0x412750
  4127cd:	out    dx,eax
  4127ce:	jo     0x412827
  4127d0:	(bad)  
  4127d1:	out    dx,al
  4127d2:	es xchg esi,esp
  4127d5:	into   
  4127d6:	dec    edi
  4127d7:	push   esp
  4127d8:	stos   BYTE PTR es:[edi],al
  4127d9:	xor    edx,DWORD PTR [esi+0xe]
  4127dc:	mov    dh,0xc6
  4127de:	gs aas 
  4127e0:	pushf  
  4127e1:	jae    0x4127c5
  4127e3:	clc    
  4127e4:	jg     0x412790
  4127e6:	out    0xf8,eax
  4127e8:	xchg   DWORD PTR [ebx+ebx*8],ecx
  4127eb:	jle    0x4127b7
  4127ed:	mov    ds:0xa3a90a28,al
  4127f2:	mov    ds:0x993ace26,al
  4127f7:	sbb    al,BYTE PTR [edi]
  4127f9:	mov    al,0x49
  4127fb:	and    BYTE PTR [esi+eiz*2],dl
  4127fe:	jmp    0x9b9a:0xa5a9ce88
  412805:	and    cl,BYTE PTR [edx+0x3b2be71]
  41280b:	and    eax,0xa379d2cf
  412810:	ret    0x6035
  412813:	nop
  412814:	jmp    FWORD PTR [ecx]
  412816:	pop    bx
  412818:	popa   
  412819:	add    cl,bl
  41281b:	push   ebx
  41281c:	push   ecx
  41281d:	out    dx,al
  41281e:	js     0x4127cc
  412820:	mov    al,ds:0x36e467b1
  412825:	add    al,0x5d
  412827:	pop    edi
  412828:	cld    
  412829:	sub    eax,DWORD PTR [ebp-0x5]
  41282c:	cmp    eax,0x9ff586a3
  412831:	pop    esp
  412832:	gs sbb al,0xb8
  412835:	mov    al,0x75
  412837:	hlt    
  412838:	repnz xchg edx,eax
  41283a:	cld    
  41283b:	js     0x412801
  41283d:	stos   BYTE PTR es:[edi],al
  41283e:	lods   eax,DWORD PTR ds:[esi]
  41283f:	fwait
  412840:	dec    esi
  412841:	neg    ebx
  412843:	or     bh,BYTE PTR ds:0x78b0fe31
  412849:	ret    
  41284a:	mov    dh,0xb9
  41284c:	ret    0xa3d8
  41284f:	cmp    bl,BYTE PTR [edx+ecx*4]
  412852:	xor    edi,esi
  412854:	ror    ch,cl
  412856:	mov    esp,0xdb63e36
  41285b:	mov    ecx,0xfc49bafe
  412860:	mov    eax,ds:0x25d9cfcb
  412865:	sbb    al,0x37
  412868:	jnp    0x41283f
  41286a:	push   0x69
  41286c:	pop    edi
  41286d:	(bad)  
  41286e:	imul   esi,DWORD PTR [ebx+esi*4],0xd905e23c
  412875:	or     DWORD PTR [ebp-0x8],ebp
  412878:	neg    DWORD PTR [ecx+edi*1-0x62f9a310]
  41287f:	rcr    DWORD PTR [ebp-0x7e],cl
  412882:	adc    dl,BYTE PTR [ecx]
  412884:	(bad)  
  412885:	jo     0x41286c
  412887:	and    dl,bl
  412889:	imul   esi,DWORD PTR [esi+ebx*1+0x656c2237],0xd
  412891:	imul   edi,edx,0x19a91283
  412897:	nop
  412898:	push   0x86cf35d
  41289d:	jb     0x4128dd
  41289f:	(bad)  
  4128a0:	out    0xdb,al
  4128a2:	add    BYTE PTR [esi+0x2b1d12c],dh
  4128a8:	and    DWORD PTR [eax+edx*2+0x20],0x5f
  4128ad:	jl     0x4128ba
  4128af:	ins    BYTE PTR es:[edi],dx
  4128b0:	and    BYTE PTR [ecx-0x40d1454a],dh
  4128b6:	and    BYTE PTR [eax],dl
  4128b8:	push   ss
  4128b9:	mov    al,0x6a
  4128bb:	jbe    0x41292a
  4128bd:	lds    ebx,FWORD PTR [esi]
  4128bf:	cmp    ecx,esp
  4128c1:	or     dh,ch
  4128c3:	jl     0x412879
  4128c5:	xor    BYTE PTR [esp+ecx*1-0x49],ah
  4128c9:	jno    0x412919
  4128cb:	mov    ch,0x18
  4128cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ce:	test   BYTE PTR [edi+0x64],bh
  4128d1:	mov    eax,0x570cc8cd
  4128d6:	mov    ebx,DWORD PTR [ebx+ebp*8+0xd1b3867]
  4128dd:	outs   dx,DWORD PTR ds:[esi]
  4128de:	in     eax,0x4
  4128e0:	test   DWORD PTR [ecx-0x36],ecx
  4128e3:	sub    al,0xec
  4128e5:	sub    BYTE PTR [esi+edi*2-0x2d],0x1b
  4128ea:	pop    esi
  4128eb:	lahf   
  4128ec:	push   esi
  4128ed:	popa   
  4128ee:	jno    0x4128b2
  4128f0:	loop   0x41290a
  4128f2:	dec    eax
  4128f3:	arpl   WORD PTR [eax+eax*8+0x3f4b1e20],bx
  4128fa:	jge    0x412889
  4128fc:	(bad)
  412900:	pop    es
  412901:	push   edx
  412902:	mov    bh,0x61
  412904:	loop   0x412930
  412906:	pop    ebp
  412907:	xor    BYTE PTR [ebx],0x13
  41290a:	jge    0x412892
  41290c:	push   0x154b1ea6
  412911:	in     al,0xf1
  412913:	mov    eax,ds:0x29f6e0d3
  412918:	mov    BYTE PTR [eax],dl
  41291a:	ret    
  41291b:	xchg   BYTE PTR [esi-0x1c40acb3],bl
  412921:	loop   0x412996
  412923:	imul   ebx,DWORD PTR [edx+0x45f95930],0xe
  41292a:	xchg   ebp,eax
  41292b:	jge    0x4128b7
  41292d:	fadd   DWORD PTR [eax+0x740ea21b]
  412933:	outs   dx,DWORD PTR ds:[esi]
  412934:	dec    eax
  412935:	popf   
  412936:	lds    ebp,FWORD PTR [ebp+0x9dac8d3]
  41293c:	xor    al,BYTE PTR [edi]
  41293e:	mov    cl,BYTE PTR [edi]
  412940:	mov    eax,ds:0x549a62e1
  412945:	jb     0x4128f2
  412947:	cmp    BYTE PTR [esi-0x7],bl
  41294a:	icebp  
  41294b:	cmp    al,0xc5
  41294d:	xchg   esi,eax
  41294e:	and    eax,0xea179e01
  412953:	sub    eax,0xc3045235
  412958:	cmp    DWORD PTR [esi-0x3577fcd2],ecx
  41295e:	into   
  41295f:	mov    bl,0xe0
  412961:	xchg   esi,eax
  412962:	(bad)  
  412963:	ds pop ebx
  412965:	arpl   WORD PTR [esi-0x4c67a13a],sp
  41296b:	rol    cl,0xc0
  41296e:	add    BYTE PTR [ecx+ebx*4],al
  412971:	cmp    ebx,edx
  412973:	mov    DWORD PTR [edi+ebp*4],esp
  412976:	aam    0xc0
  412978:	repz xchg esi,eax
  41297a:	int3   
  41297b:	pushw  ds
  41297d:	aam    0x5
  41297f:	push   cs
  412980:	lea    edx,[ebx+0x396e4615]
  412986:	cmp    BYTE PTR [eax-0x4f20fe92],bh
  41298c:	loope  0x4129bc
  41298e:	mov    WORD PTR [edi+0x1931e26f],ds
  412994:	fsub   DWORD PTR [edi-0x6ab7346f]
  41299a:	mov    edx,0x642374b2
  41299f:	ds dec edi
  4129a1:	pushf  
  4129a2:	xor    BYTE PTR [ebp+0xf46d6b7],0x29
  4129a9:	jo     0x412989
  4129ab:	imul   esi,DWORD PTR [edi],0x71
  4129ae:	cmp    DWORD PTR [ebp-0x77744b91],edi
  4129b4:	addr16 inc edx
  4129b6:	in     eax,0x68
  4129b8:	jno    0x4129cf
  4129ba:	adc    DWORD PTR [edi+0x54],esi
  4129bd:	and    eax,0xa9f761f7
  4129c2:	inc    eax
  4129c3:	sub    ecx,DWORD PTR [eax-0x6f525054]
  4129c9:	or     dh,BYTE PTR [eax+0x68]
  4129cc:	(bad)  
  4129ce:	or     al,0x2
  4129d0:	xor    DWORD PTR [ebp-0x4b14c08a],ebp
  4129d6:	sbb    BYTE PTR [edi+eiz*1-0x27],ah
  4129da:	cmp    dh,dh
  4129dc:	dec    ebx
  4129dd:	imul   ebx,DWORD PTR [edi+0xe4ade11],0xbfa3d9f9
  4129e7:	int    0xed
  4129e9:	shl    BYTE PTR [esi-0x42c93395],1
  4129ef:	mov    al,0xb0
  4129f1:	cmp    ch,BYTE PTR [esi]
  4129f3:	mov    DWORD PTR [esi],esp
  4129f5:	add    DWORD PTR [ebx],ecx
  4129f7:	xor    al,0xb9
  4129f9:	sahf   
  4129fa:	pop    ecx
  4129fb:	pusha  
  4129fc:	xchg   ecx,eax
  4129fd:	cmp    eax,0xe3a2c629
  412a02:	ret    0x3e74
  412a05:	jmp    0x48af:0x2b9c856d
  412a0c:	push   0xc82fbffa
  412a11:	jne    0x412a07
  412a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a14:	ret    0xbac1
  412a17:	mov    esi,0xca2c113a
  412a1c:	dec    esp
  412a1d:	fwait
  412a1e:	pop    es
  412a1f:	xchg   edi,eax
  412a20:	in     eax,0x28
  412a22:	or     ecx,DWORD PTR [esi+0x3877af24]
  412a28:	enter  0x8ade,0xbd
  412a2c:	fnstsw WORD PTR [ecx]
  412a2e:	dec    esp
  412a2f:	sbb    BYTE PTR ds:0x83e3cd74,al
  412a35:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a37:	xchg   esi,eax
  412a38:	sbb    BYTE PTR [ebx],cl
  412a3a:	pop    ebp
  412a3b:	rcr    BYTE PTR [ebp-0x25],cl
  412a3e:	dec    ebp
  412a3f:	jno    0x4129d8
  412a41:	test   BYTE PTR [edx+0x7e309812],bh
  412a47:	popa   
  412a48:	xor    eax,DWORD PTR [eax+0x5c]
  412a4b:	mov    ebp,0xc2dc2ec1
  412a50:	frstor [esi]
  412a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a53:	aas    
  412a54:	and    edi,0xc7ed544f
  412a5a:	mov    edx,0xb0edc08e
  412a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a60:	les    ebx,FWORD PTR [esp+ebp*2]
  412a63:	or     edi,DWORD PTR ds:0x678f03f8
  412a69:	dec    eax
  412a6a:	out    dx,eax
  412a6b:	lock (bad) 
  412a6e:	mov    eax,DWORD PTR [ebp+0x8]
  412a71:	mov    ecx,DWORD PTR [ebp+0xc]
  412a74:	shrd   eax,ecx,0x2
  412a78:	shr    ecx,0x2
  412a7b:	mov    ecx,DWORD PTR [ebp+0x8]
  412a7e:	mov    edx,DWORD PTR [ebp+0xc]
  412a81:	xor    eax,edi
  412a83:	shl    ecx,0x1e
  412a86:	xor    edx,edx
  412a88:	or     eax,edx
  412a8a:	add    eax,DWORD PTR ds:0x422298
  412a90:	mov    DWORD PTR [ebp+0x14],eax
  412a93:	mov    eax,DWORD PTR [ebp+0x8]
  412a96:	mov    ecx,DWORD PTR [ebp+0xc]
  412a99:	shrd   eax,ecx,0x2
  412a9d:	shr    ecx,0x2
  412aa0:	mov    ecx,DWORD PTR [ebp+0x8]
  412aa3:	mov    edx,DWORD PTR [ebp+0xc]
  412aa6:	xor    eax,edi
  412aa8:	shl    ecx,0x1e
  412aab:	xor    edx,edx
  412aad:	or     eax,edx
  412aaf:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  412ab3:	mov    eax,DWORD PTR [ebp+0x14]
  412ab6:	xor    BYTE PTR [eax],cl
  412ab8:	mov    eax,DWORD PTR [ebp-0x60]
  412abb:	mov    ecx,DWORD PTR [ebp-0x5c]
  412abe:	shrd   eax,ecx,0x2
  412ac2:	shr    ecx,0x2
  412ac5:	mov    ecx,DWORD PTR [ebp-0x60]
  412ac8:	mov    edx,DWORD PTR [ebp-0x5c]
  412acb:	xor    eax,edi
  412acd:	shl    ecx,0x1e
  412ad0:	xor    edx,edx
  412ad2:	or     eax,edx
  412ad4:	add    eax,DWORD PTR ds:0x422298
  412ada:	mov    DWORD PTR [ebp+0x14],eax
  412add:	mov    eax,DWORD PTR [ebp-0x60]
  412ae0:	mov    ecx,DWORD PTR [ebp-0x5c]
  412ae3:	shrd   eax,ecx,0x2
  412ae7:	shr    ecx,0x2
  412aea:	mov    ecx,DWORD PTR [ebp-0x60]
  412aed:	mov    edx,DWORD PTR [ebp-0x5c]
  412af0:	jmp    0x41307a
  412af5:	xchg   ebx,eax
  412af6:	retf   
  412af7:	cs (bad) 
  412af9:	push   ds
  412afa:	adc    dl,BYTE PTR [edx]
  412afc:	mov    ds:0x683e5c87,eax
  412b01:	jb     0x412b80
  412b03:	ret    0x89b2
  412b06:	adc    dl,BYTE PTR [esi]
  412b08:	push   ss
  412b09:	cmp    eax,0xc8161604
  412b0e:	pushf  
  412b0f:	sbb    ebp,ebx
  412b11:	rol    ecx,cl
  412b13:	or     DWORD PTR [esp+edi*1+0x135b6e1e],ecx
  412b1a:	test   DWORD PTR [esi-0x7553f846],edi
  412b20:	pop    ss
  412b21:	pop    es
  412b22:	ret    
  412b23:	fdivr  DWORD PTR [edi+0x635b555]
  412b29:	mov    al,ds:0x71b1621a
  412b2e:	or     eax,DWORD PTR ds:0xecdf021b
  412b34:	jae    0x412b11
  412b36:	enter  0x9ad2,0x25
  412b3a:	shl    BYTE PTR [ebp-0x574833ba],0xb0
  412b41:	push   es
  412b42:	(bad)  
  412b43:	scas   al,BYTE PTR es:[edi]
  412b44:	in     al,dx
  412b45:	jbe    0x412b2a
  412b47:	nop
  412b48:	dec    ebx
  412b49:	in     eax,dx
  412b4a:	daa    
  412b4b:	xchg   edx,eax
  412b4c:	add    eax,0xd66a5c99
  412b51:	xor    BYTE PTR [eax],dh
  412b53:	(bad)  
  412b54:	and    DWORD PTR [ebx+0x6d481ba9],eax
  412b5a:	mov    ds:0x9b83f7c2,eax
  412b5f:	je     0x412b5c
  412b61:	or     BYTE PTR [ebp-0x147c2989],bh
  412b67:	mov    ebp,0x456dd4c
  412b6c:	cld    
  412b6d:	mov    dl,0xd8
  412b6f:	pop    edi
  412b70:	sbb    eax,0xd95c5fd0
  412b75:	ficomp DWORD PTR [edi+0x62]
  412b78:	fldenv [edi+0x6b1582ba]
  412b7e:	aaa    
  412b7f:	or     DWORD PTR [ebp+0xe],esp
  412b82:	and    cl,ch
  412b84:	rcl    BYTE PTR [ebp+0x2c01ff84],1
  412b8a:	retf   0xd113
  412b8d:	xor    ch,BYTE PTR [ecx+ebp*4]
  412b90:	into   
  412b91:	loopne 0x412bae
  412b93:	std    
  412b94:	pop    ds
  412b95:	lahf   
  412b96:	or     cl,BYTE PTR [ebp+ecx*4-0x64]
  412b9a:	cmp    al,0xc3
  412b9c:	test   eax,0x6536889
  412ba1:	rol    DWORD PTR [ebx-0x57],0x7f
  412ba5:	and    dl,bl
  412ba7:	cs imul ebx
  412baa:	pop    es
  412bab:	jbe    0x412ba7
  412bad:	sbb    al,0x31
  412baf:	pop    ds
  412bb0:	outs   dx,DWORD PTR ds:[esi]
  412bb1:	out    dx,eax
  412bb2:	inc    edi
  412bb3:	jge    0x412be3
  412bb5:	mov    ebx,0x657b32e8
  412bba:	jno    0x412bca
  412bbc:	jmp    0x69c0562d
  412bc1:	xor    al,0xeb
  412bc3:	shl    BYTE PTR [ebx-0x7c90b7c8],1
  412bc9:	xchg   ebx,eax
  412bca:	xor    al,0xed
  412bcc:	push   ss
  412bcd:	fsub   QWORD PTR [esp+eax*8]
  412bd0:	(bad)  
  412bd1:	fs jo  0x412b77
  412bd4:	pop    eax
  412bd5:	loope  0x412b61
  412bd7:	sub    BYTE PTR [eax+ebp*1-0x601b664d],0x3c
  412bdf:	int    0xea
  412be1:	or     esi,DWORD PTR [edx+0x296ccd27]
  412be7:	loope  0x412c2d
  412be9:	sbb    DWORD PTR [edx+0xa],esp
  412bec:	jmp    0xaf17e5a7
  412bf1:	adc    BYTE PTR [eax+0x739af286],ch
  412bf7:	push   ecx
  412bf8:	mov    ebx,0xa47a0520
  412bfd:	leave  
  412bfe:	pop    ebp
  412bff:	or     al,dl
  412c01:	mov    cl,BYTE PTR [eax-0x33]
  412c04:	das    
  412c05:	push   0x669c3778
  412c0a:	mov    dl,0x5a
  412c0c:	repnz add al,0x27
  412c0f:	mov    eax,0xb6eba149
  412c14:	mov    ah,0x79
  412c16:	rcr    BYTE PTR [edi],1
  412c18:	out    0xb0,al
  412c1a:	mov    bl,0x7b
  412c1c:	mov    bl,0xed
  412c1e:	mov    ds:0xa469f9c0,al
  412c23:	lahf   
  412c24:	xor    dl,BYTE PTR [esi-0x7feb1013]
  412c2a:	xor    ch,0xf3
  412c2d:	inc    ebp
  412c2e:	dec    eax
  412c2f:	push   ss
  412c30:	fidiv  WORD PTR [ebx-0x1c]
  412c33:	lock sbb DWORD PTR [esi+0x43],ebp
  412c37:	xchg   ecx,eax
  412c38:	mov    ch,0x89
  412c3a:	das    
  412c3b:	push   eax
  412c3c:	cmp    eax,0xc6a872a9
  412c41:	fwait
  412c42:	cmp    ch,BYTE PTR [esi+0x52e56f91]
  412c48:	pop    es
  412c49:	ins    DWORD PTR es:[edi],dx
  412c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4b:	jl     0x412c4b
  412c4d:	sub    DWORD PTR [ecx+0x24bf48f5],eax
  412c53:	and    eax,0x52a269c2
  412c58:	sbb    edi,ecx
  412c5a:	test   eax,0x8c7c9334
  412c5f:	bound  edx,QWORD PTR [edi-0x4fa8aad7]
  412c65:	out    0x5c,al
  412c67:	outs   dx,BYTE PTR fs:[esi]
  412c69:	adc    eax,0x25036c8
  412c6e:	stc    
  412c6f:	dec    edi
  412c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c71:	imul   ah
  412c73:	mov    ds:0x16309460,eax
  412c78:	out    0x63,eax
  412c7a:	gs retf 
  412c7c:	dec    ebx
  412c7d:	ja     0x412c4f
  412c7f:	std    
  412c80:	mul    DWORD PTR [ecx+0x5f0c9c74]
  412c86:	sub    DWORD PTR [eax+0x73],ebp
  412c89:	mov    eax,ds:0x50aff594
  412c8e:	pop    eax
  412c8f:	stos   DWORD PTR es:[edi],eax
  412c90:	je     0x412c72
  412c92:	xchg   BYTE PTR [edi+0x65dcd728],dl
  412c98:	cmp    eax,0x314b2c79
  412c9d:	xor    BYTE PTR [edi+0x30b751bc],ah
  412ca3:	arpl   WORD PTR [ebp-0xb],sp
  412ca6:	dec    edi
  412ca7:	push   ebp
  412ca8:	inc    esp
  412ca9:	dec    edi
  412caa:	inc    ebp
  412cab:	out    0x41,eax
  412cad:	pop    ecx
  412cae:	and    esp,edx
  412cb0:	cmp    BYTE PTR [edi],dl
  412cb2:	push   ds
  412cb3:	dec    ebx
  412cb4:	das    
  412cb5:	mov    gs,WORD PTR [edi]
  412cb7:	or     BYTE PTR [ebp+0x2571e27f],0xdd
  412cbe:	scas   eax,DWORD PTR es:[edi]
  412cbf:	xor    BYTE PTR [ebx+ecx*2],dl
  412cc2:	daa    
  412cc3:	cmp    edi,DWORD PTR [edx]
  412cc5:	jge    0x412d34
  412cc7:	xchg   edi,eax
  412cc8:	inc    ebx
  412cc9:	add    ebx,DWORD PTR [ebx-0x1fd7f7f6]
  412ccf:	in     al,dx
  412cd0:	jb     0x412cb9
  412cd2:	inc    eax
  412cd3:	add    dl,BYTE PTR [esi+esi*8+0x6ca03fd7]
  412cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cdb:	sub    eax,0xabea1a2e
  412ce0:	out    0x59,al
  412ce2:	push   ecx
  412ce3:	or     esi,ebp
  412ce5:	(bad)  
  412ce6:	in     eax,dx
  412ce7:	pop    ebp
  412ce8:	xor    eax,0x164f24
  412ced:	inc    ebp
  412cee:	inc    esi
  412cef:	inc    ebp
  412cf0:	jmp    0x4ebe3e94
  412cf5:	test   BYTE PTR [edi+0x5b],dh
  412cf8:	fcom   DWORD PTR [ecx]
  412cfa:	mov    esi,0x2acc8ff0
  412cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d00:	xor    edi,ebp
  412d02:	mov    ds:0x6789e96c,al
  412d07:	neg    BYTE PTR [eax+edi*1+0x5c6e88fc]
  412d0e:	jp     0x412caf
  412d10:	jnp    0x412ccd
  412d12:	lock test BYTE PTR [eax+0x2d1e43e7],0xd6
  412d1a:	stos   DWORD PTR es:[edi],eax
  412d1b:	or     ebp,DWORD PTR [ebx]
  412d1d:	xor    dl,0x8f
  412d20:	test   eax,0x483f70ca
  412d25:	mov    al,0xb7
  412d27:	xchg   esp,eax
  412d28:	mov    edi,0xb1ec4160
  412d2d:	aaa    
  412d2e:	stos   BYTE PTR es:[edi],al
  412d2f:	jecxz  0x412d1f
  412d31:	inc    ebp
  412d32:	jg     0x412d16
  412d34:	jg     0x412d07
  412d36:	jg     0x412d1b
  412d38:	and    ax,0x2c92
  412d3c:	push   edi
  412d3d:	add    BYTE PTR [esi+0x5d],0x19
  412d41:	mov    esp,0x609222b
  412d46:	lahf   
  412d47:	nop
  412d48:	or     DWORD PTR [edi],0xffffffd8
  412d4b:	dec    ebp
  412d4c:	lahf   
  412d4d:	fcom   DWORD PTR [ebp-0x53bfad98]
  412d53:	sahf   
  412d54:	push   ecx
  412d55:	or     DWORD PTR [esi],edi
  412d57:	outs   dx,DWORD PTR ds:[esi]
  412d58:	mov    al,0x8a
  412d5a:	aaa    
  412d5b:	inc    esi
  412d5c:	mov    ds:0x4d20970d,eax
  412d61:	lahf   
  412d62:	aas    
  412d63:	jmp    0xa6a8948c
  412d68:	dec    ecx
  412d69:	fisub  DWORD PTR [edx+ebp*8-0xcdf7d8d]
  412d70:	push   edi
  412d71:	repnz mov eax,0x400930a4
  412d77:	xor    eax,0x18ad7d10
  412d7c:	push   0x8e518e9f
  412d81:	mov    ds:0xb7c0fc42,eax
  412d86:	mov    ds:0x2e1dd1ce,eax
  412d8b:	xor    bh,ch
  412d8d:	ret    
  412d8e:	sbb    edi,DWORD PTR [edi-0x1c]
  412d91:	imul   ecx,DWORD PTR [eax],0x68
  412d94:	jp     0x412dd4
  412d96:	xchg   ebx,eax
  412d97:	sbb    esi,DWORD PTR [ebx]
  412d99:	ins    BYTE PTR es:[edi],dx
  412d9a:	es push edi
  412d9c:	or     ebp,edx
  412d9e:	test   eax,0xfe91ac95
  412da3:	stos   DWORD PTR es:[edi],eax
  412da4:	inc    esp
  412da5:	adc    eax,0xf709b03b
  412daa:	fnstcw WORD PTR [ebx+0x35e2b5a8]
  412db0:	mov    ds:0x38f26b91,al
  412db5:	push   0xfffffffc
  412db7:	vpsubsw ymm0,ymm2,YMMWORD PTR [ebx+ecx*1]
  412dbc:	cli    
  412dbd:	out    0x52,al
  412dbf:	add    eax,0x856edd1
  412dc4:	jmp    0xe3b74123
  412dc9:	mov    ebx,fs
  412dcb:	ins    DWORD PTR es:[edi],dx
  412dcc:	lods   eax,DWORD PTR ds:[esi]
  412dcd:	dec    ebp
  412dce:	sub    ah,cl
  412dd0:	dec    edi
  412dd1:	mov    bl,0x9d
  412dd3:	jo     0x412e41
  412dd5:	add    dl,BYTE PTR [edx]
  412dd7:	das    
  412dd8:	jge    0x412d75
  412dda:	push   esi
  412ddb:	fld    TBYTE PTR [edx-0x7e]
  412dde:	bound  edx,QWORD PTR [ebp-0x2b17af3c]
  412de4:	jbe    0x412dcd
  412de6:	push   edx
  412de7:	(bad)  
  412de8:	or     DWORD PTR [esi],ebx
  412dea:	xchg   ebp,eax
  412deb:	aam    0xb2
  412ded:	retf   0xff13
  412df0:	data16 jne 0x412e43
  412df3:	test   BYTE PTR [edx+0x2b],bl
  412df6:	mov    al,0x99
  412df8:	rcl    ecx,1
  412dfa:	push   ss
  412dfb:	pusha  
  412dfc:	mov    ebx,0xab723c3a
  412e01:	dec    edx
  412e02:	or     al,0x9c
  412e04:	inc    esp
  412e05:	pop    ds
  412e06:	and    eax,0xffffff9e
  412e09:	or     BYTE PTR [edx-0x27],0x9c
  412e0d:	and    DWORD PTR [ecx],ebp
  412e0f:	mov    ah,0x46
  412e11:	ds push es
  412e13:	int3   
  412e14:	add    al,0x7a
  412e16:	enter  0x1ad6,0x19
  412e1a:	ins    BYTE PTR es:[edi],dx
  412e1b:	stos   BYTE PTR es:[edi],al
  412e1c:	daa    
  412e1d:	pusha  
  412e1e:	mov    dh,0x72
  412e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e21:	fsub   st,st(1)
  412e23:	repz imul eax,DWORD PTR [ebp+0x7f],0x9f9d6ab4
  412e2b:	mov    ebp,0x4249728
  412e30:	jbe    0x412ea8
  412e32:	mov    ch,0x1
  412e34:	xor    ch,BYTE PTR [esi-0x3501df1c]
  412e3a:	add    ecx,DWORD PTR [esi+0x1a]
  412e3d:	dec    ecx
  412e3e:	and    eax,0x2d368f2a
  412e43:	jo     0x412de3
  412e45:	mov    al,ds:0xef1b1ba1
  412e4a:	adc    edi,ecx
  412e4c:	mov    edi,0x5171c685
  412e51:	and    BYTE PTR [edi-0x3e],bh
  412e54:	pusha  
  412e55:	xor    ebp,edi
  412e57:	pop    edi
  412e58:	shl    BYTE PTR [esi+0x46],1
  412e5b:	(bad)  
  412e5c:	out    dx,al
  412e5d:	add    BYTE PTR [eax],0x17
  412e60:	fs mov ch,0xf8
  412e63:	xchg   ebx,eax
  412e64:	push   esi
  412e65:	data16 fimul WORD PTR [eax+0x3e]
  412e69:	add    DWORD PTR [ebx+0x38],ecx
  412e6c:	lock fsub st,st(2)
  412e6f:	mov    cl,0x9b
  412e71:	mov    bl,0xb7
  412e73:	sbb    eax,0x9538d403
  412e78:	mov    eax,0x1a1ffb1d
  412e7d:	pop    ss
  412e7e:	xor    al,0xaf
  412e80:	fcomp  DWORD PTR [edi]
  412e82:	push   ss
  412e83:	jl     0x412ea1
  412e85:	dec    ecx
  412e86:	dec    ecx
  412e87:	es xor eax,0x1b911ab8
  412e8d:	ret    0x3b3b
  412e90:	push   ebp
  412e91:	dec    ebx
  412e92:	dec    esi
  412e93:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412e95:	es lds ebp,FWORD PTR gs:[edi+0x5079c551]
  412e9d:	out    dx,eax
  412e9e:	pop    es
  412e9f:	aam    0xe4
  412ea1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412ea3:	and    DWORD PTR [edi-0x4662b939],eax
  412ea9:	jle    0x412e9a
  412eab:	sub    esi,ebx
  412ead:	addr16 inc ebp
  412eaf:	mov    ecx,0xa067e4eb
  412eb4:	mov    esi,0xf3d6ff99
  412eb9:	aam    0x38
  412ebb:	pop    ebp
  412ebc:	xchg   esi,eax
  412ebd:	cwde   
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	pop    ss
  412ec0:	sub    al,0x9
  412ec2:	mov    eax,gs
  412ec4:	sbb    edi,DWORD PTR [esi-0x13]
  412ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec8:	push   0x26423995
  412ecd:	(bad)  
  412ece:	call   0x4c89:0x58f08f43
  412ed5:	fdivr  QWORD PTR [edx+0x1d29b9bf]
  412edb:	or     bl,ah
  412edd:	or     DWORD PTR [esi],edx
  412edf:	xchg   edi,eax
  412ee0:	cmp    eax,0x55622345
  412ee5:	test   eax,0x42005d5f
  412eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eeb:	and    edx,DWORD PTR [edx+0x38]
  412eee:	test   BYTE PTR [eax-0x30b3c723],bh
  412ef4:	shld   eax,ebx,cl
  412ef7:	inc    esp
  412ef8:	pop    es
  412ef9:	or     esi,esp
  412efb:	push   ebx
  412efc:	jmp    0x412f42
  412efe:	sub    BYTE PTR ds:0xe37483ae,ah
  412f04:	xchg   ecx,eax
  412f05:	mov    cl,0xf4
  412f07:	push   eax
  412f08:	xchg   esp,eax
  412f09:	aam    0x5e
  412f0b:	xchg   edi,eax
  412f0c:	arpl   di,di
  412f0e:	mov    ah,0xf1
  412f10:	dec    ebp
  412f11:	mov    bh,0x47
  412f13:	adc    eax,0x9fbc9c8
  412f18:	pushf  
  412f19:	shr    BYTE PTR [eax+0x44],1
  412f1c:	xchg   esp,eax
  412f1d:	mov    ds:0x66f2ba29,al
  412f22:	cli    
  412f23:	fisttp WORD PTR [esp+edi*4+0x4e9ab3b3]
  412f2a:	jnp    0x412f01
  412f2c:	mov    ecx,edx
  412f2e:	mov    fs,WORD PTR [ecx-0x48]
  412f31:	cmp    al,BYTE PTR [edi+0x40]
  412f34:	xor    ch,BYTE PTR [edi+0x50]
  412f37:	fmul   DWORD PTR [edx+0xac1926f]
  412f3d:	fadd   st(7),st
  412f3f:	xchg   esi,eax
  412f40:	sbb    DWORD PTR [edi+edx*1-0x20],eax
  412f44:	arpl   dx,cx
  412f46:	push   0x5069dc7c
  412f4b:	addr16 popf 
  412f4d:	fucomi st,st(3)
  412f4f:	inc    edx
  412f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f51:	inc    esi
  412f52:	cld    
  412f53:	outs   dx,DWORD PTR ds:[esi]
  412f54:	pop    edx
  412f55:	out    0x59,al
  412f57:	mov    gs,WORD PTR [ebx+0x2d]
  412f5a:	nop
  412f5b:	out    dx,eax
  412f5c:	mov    ebx,0x7e7562f4
  412f61:	pop    ds
  412f62:	push   0x157590a9
  412f67:	ret    
  412f68:	xchg   ebx,eax
  412f69:	call   0x7a121dc6
  412f6e:	out    0x5e,eax
  412f70:	xchg   edx,eax
  412f71:	add    DWORD PTR [ecx+0x589883d1],0xffffff90
  412f78:	repz mov ds:0x7f74334c,al
  412f7e:	jmp    0x412f35
  412f80:	cmp    al,0xce
  412f82:	push   ebp
  412f83:	add    al,0x16
  412f85:	xchg   ecx,eax
  412f86:	stc    
  412f87:	leave  
  412f88:	pop    eax
  412f89:	popf   
  412f8a:	xchg   edi,eax
  412f8b:	and    BYTE PTR [ebx],0x12
  412f8e:	add    eax,0x7e40495
  412f93:	push   0x3f942bdd
  412f98:	mov    esi,0x694462de
  412f9d:	mov    eax,0xd225900d
  412fa2:	adc    ah,0xa2
  412fa5:	inc    ecx
  412fa6:	shl    DWORD PTR [ebp-0x3d],0x8e
  412faa:	fst    QWORD PTR [esi-0x54ef6cc1]
  412fb0:	retf   0x666a
  412fb3:	jle    0x412faf
  412fb5:	scas   al,BYTE PTR es:[edi]
  412fb6:	push   edi
  412fb7:	jmp    0x6ec1:0x571af115
  412fbe:	cmp    DWORD PTR [ecx],esi
  412fc0:	xor    ebx,DWORD PTR [ebx-0x6b]
  412fc3:	loop   0x412fde
  412fc5:	cmp    al,0x45
  412fc7:	stc    
  412fc8:	push   ss
  412fc9:	mov    eax,0xd2e50138
  412fce:	pop    eax
  412fcf:	cmc    
  412fd0:	jmp    0xa946:0xbb9f3b4
  412fd7:	adc    dh,BYTE PTR [edi-0x27]
  412fda:	sbb    ch,BYTE PTR [esi]
  412fdc:	xchg   esi,eax
  412fdd:	loopne 0x413005
  412fdf:	sbb    BYTE PTR [edi+0x1c41615a],bl
  412fe5:	inc    esi
  412fe6:	(bad)  
  412fe7:	fnstsw WORD PTR ds:0x11446778
  412fed:	std    
  412fee:	pop    ecx
  412fef:	imul   ebp,DWORD PTR [eax-0x7bbb49a0],0xffffff88
  412ff6:	addr16 mov eax,0x7789744a
  412ffc:	push   eax
  412ffd:	loop   0x412f9a
  412fff:	dec    ecx
  413000:	jno    0x412f83
  413002:	cmp    esi,DWORD PTR [eax+0x3a7bd3dd]
  413008:	and    dh,BYTE PTR [esi+0x5f]
  41300b:	neg    BYTE PTR [ebx+0x7c]
  41300e:	add    esp,eax
  413010:	push   esp
  413011:	or     dl,BYTE PTR [edi+0x2ba505cc]
  413017:	call   0xfa94756e
  41301c:	xor    BYTE PTR [ecx],ah
  41301e:	outs   dx,BYTE PTR ds:[esi]
  41301f:	out    0xb9,eax
  413021:	inc    ebp
  413022:	icebp  
  413023:	mov    edi,0xb9a73b0d
  413028:	adc    esp,DWORD PTR [esi]
  41302a:	mov    ds:0x1d74ed7f,eax
  41302f:	jmp    0x3af3:0xab91e7b
  413036:	pushf  
  413037:	(bad)  
  413038:	and    eax,0xd0d0d9b5
  41303d:	dec    esp
  41303e:	push   edx
  41303f:	add    bh,BYTE PTR [ecx-0x620bce7e]
  413045:	adc    DWORD PTR [ecx+0x67],ecx
  413048:	mov    esi,0x895dba5b
  41304d:	or     BYTE PTR ds:0x906f,0x68
  413053:	cdq    
  413054:	pop    ebx
  413055:	push   ecx
  413057:	adc    ah,ch
  413059:	sbb    DWORD PTR [edi],esi
  41305b:	pop    edx
  41305c:	push   es
  41305d:	outs   dx,BYTE PTR ds:[esi]
  41305e:	out    dx,eax
  41305f:	ja     0x41302d
  413061:	mov    eax,ds:0x4a6da3fe
  413066:	js     0x41302b
  413068:	mov    ebp,DWORD PTR [edi-0xb681778]
  41306e:	xchg   DWORD PTR [ebp-0x30],esp
  413071:	fmul   DWORD PTR [edx]
  413073:	pop    esp
  413074:	fdivrp st(7),st
  413076:	daa    
  413077:	dec    ecx
  413078:	fbld   TBYTE PTR [ebp+0x33]
  41307b:	mov    ecx,0xd2331ee1
  413081:	or     eax,edx
  413083:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413087:	mov    eax,DWORD PTR [ebp+0x14]
  41308a:	or     BYTE PTR [eax],cl
  41308c:	mov    eax,DWORD PTR [ebp-0x48]
  41308f:	mov    ecx,DWORD PTR [ebp-0x44]
  413092:	shrd   eax,ecx,0x2
  413096:	shr    ecx,0x2
  413099:	mov    ecx,DWORD PTR [ebp-0x48]
  41309c:	mov    edx,DWORD PTR [ebp-0x44]
  41309f:	xor    eax,edi
  4130a1:	xor    edx,edx
  4130a3:	or     eax,edx
  4130a5:	add    eax,DWORD PTR ds:0x422298
  4130ab:	shl    ecx,0x1e
  4130ae:	mov    DWORD PTR [ebp+0x14],eax
  4130b1:	jmp    0x41363b
  4130b6:	xchg   ebx,eax
  4130b7:	fadd   DWORD PTR [eax]
  4130b9:	mov    eax,ds:0xd89398c0
  4130be:	out    0x8d,al
  4130c0:	shr    BYTE PTR [eax+0x6e60e389],cl
  4130c6:	mov    dh,0x10
  4130c8:	or     al,0x16
  4130ca:	cmp    eax,0xb161604
  4130cf:	mov    bl,bh
  4130d1:	ss sti 
  4130d3:	jae    0x41313e
  4130d5:	xlat   BYTE PTR ds:[ebx]
  4130d6:	xchg   DWORD PTR [eax+0x30],eax
  4130d9:	vmwrite ebp,edx
  4130dc:	xchg   edx,eax
  4130dd:	mov    ecx,0xa19cefa3
  4130e2:	lea    edi,[edx-0x57]
  4130e5:	lock retf 0xe071
  4130e9:	sub    al,0x48
  4130ec:	sbb    ebx,DWORD PTR ds:0xb8523ba
  4130f2:	cmc    
  4130f3:	xor    dh,BYTE PTR [ebp+0x74]
  4130f6:	xor    eax,0x42ba7f1f
  4130fb:	sbb    BYTE PTR [edx+0x5c12a510],dl
  413101:	not    esi
  413103:	sahf   
  413104:	dec    esi
  413105:	in     al,dx
  413106:	fs in  al,0x51
  413109:	cmp    BYTE PTR [edx-0x1a],0x70
  41310d:	sbb    al,0xa4
  41310f:	std    
  413110:	scas   al,BYTE PTR es:[edi]
  413111:	inc    ecx
  413112:	rcr    DWORD PTR [eax+ebx*8],1
  413115:	test   DWORD PTR [esi-0x2d],esi
  413118:	or     dh,bl
  41311a:	inc    esp
  41311b:	scas   al,BYTE PTR es:[edi]
  41311c:	pop    es
  41311d:	xor    BYTE PTR [ebx-0x70],0x85
  413121:	ins    DWORD PTR es:[edi],dx
  413122:	jp     0x4130c4
  413124:	mov    ebp,0x46168ce0
  413129:	xor    ebp,ebp
  41312b:	sub    bl,BYTE PTR ds:0x21370c67
  413131:	cmp    dh,BYTE PTR [ebx+0x610e5982]
  413137:	mov    ch,0x24
  413139:	push   edx
  41313a:	retf   0x13d7
  41313d:	cmp    dh,ch
  41313f:	mov    ah,BYTE PTR [ebx-0x11]
  413142:	inc    ebp
  413143:	push   cs
  413144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413145:	imul   ebp,DWORD PTR [ecx-0x80],0x2926016e
  41314c:	and    al,0x5f
  41314e:	or     DWORD PTR [ebx],esi
  413150:	leave  
  413151:	push   ebp
  413152:	xchg   ecx,eax
  413153:	mov    ds:0xc6e135f5,al
  413158:	inc    esi
  413159:	pop    esp
  41315a:	cld    
  41315b:	test   al,0x57
  41315d:	hlt    
  41315e:	adc    DWORD PTR [ecx],esi
  413160:	femms  
  413162:	scas   eax,DWORD PTR es:[edi]
  413163:	pop    ds
  413164:	cdq    
  413165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413166:	or     BYTE PTR [esi-0x62],ch
  413169:	mov    esi,0x5d377325
  41316e:	push   edi
  41316f:	and    al,0x63
  413171:	leave  
  413172:	jle    0x413179
  413174:	mov    eax,0x840108d4
  413179:	xchg   edi,eax
  41317a:	(bad)  
  41317b:	leave  
  41317c:	div    bl
  41317e:	jae    0x413123
  413180:	stc    
  413181:	or     ebx,DWORD PTR [esi+0x7e5f16b1]
  413187:	and    eax,DWORD PTR [ebp+0x6d365a15]
  41318d:	xchg   eax,esp
  41318f:	adc    BYTE PTR [esi+0x4b167817],dh
  413195:	pop    ecx
  413196:	fsubrp st(7),st
  413198:	(bad)  
  413199:	int3   
  41319a:	mov    ?,WORD PTR [ebx-0x2b55f852]
  4131a0:	pop    ebx
  4131a1:	fcmovu st,st(1)
  4131a3:	push   eax
  4131a4:	ror    BYTE PTR [edx],cl
  4131a6:	xor    edi,edi
  4131a8:	mov    ds:0x61832aa6,eax
  4131ad:	jl     0x413220
  4131af:	fs mov cl,0x1f
  4131b2:	ins    DWORD PTR es:[edi],dx
  4131b3:	jbe    0x4131ef
  4131b5:	sbb    bh,cl
  4131b7:	xchg   esi,eax
  4131b8:	popa   
  4131b9:	(bad)  
  4131ba:	sbb    eax,0x5f144016
  4131bf:	ret    
  4131c0:	scas   eax,DWORD PTR es:[edi]
  4131c1:	dec    esp
  4131c2:	stc    
  4131c3:	xchg   DWORD PTR ds:0xef7b5f25,ecx
  4131c9:	fwait
  4131ca:	fwait
  4131cb:	xor    bl,BYTE PTR [edi+0x1d20ceef]
  4131d1:	sub    edi,edx
  4131d3:	repnz (bad)
  4131d6:	pop    edi
  4131d7:	cmp    ch,BYTE PTR [eax]
  4131d9:	jg     0x413213
  4131db:	xor    esi,DWORD PTR [eax+0x3215803b]
  4131e1:	jae    0x413236
  4131e3:	push   edi
  4131e4:	sub    DWORD PTR [esi+0x7a],0x4e
  4131e8:	and    DWORD PTR [edx],esp
  4131ea:	ja     0x4131a6
  4131ec:	mov    edi,ss
  4131ee:	jne    0x4131cc
  4131f0:	std    
  4131f1:	mov    bh,0xe6
  4131f3:	cmp    al,0xba
  4131f5:	out    dx,al
  4131f6:	loope  0x4131a3
  4131f8:	nop
  4131f9:	jl     0x413233
  4131fb:	adc    BYTE PTR [esp+esi*1+0x56c3c70d],cl
  413202:	dec    edx
  413203:	(bad)  
  413204:	ins    BYTE PTR es:[edi],dx
  413205:	adc    al,0x8f
  413207:	push   esp
  413208:	mov    al,0x6f
  41320a:	jb     0x4131b7
  41320c:	test   eax,0x2e94aa44
  413211:	std    
  413212:	hlt    
  413213:	sbb    eax,0x73875bbe
  413218:	xor    edi,DWORD PTR [edi+0x16]
  41321b:	or     DWORD PTR [eax+edi*2-0x26],ebp
  41321f:	fnsave [esp+ebp*2+0x19437b9]
  413226:	enter  0xf811,0x10
  41322a:	and    cl,BYTE PTR [ebx+0x628824e5]
  413230:	loop   0x413294
  413232:	jecxz  0x413294
  413234:	iret   
  413235:	lahf   
  413236:	lahf   
  413237:	xor    al,0xde
  413239:	fidivr WORD PTR [edx+0x43]
  41323c:	leave  
  41323d:	fmul   st,st(6)
  41323f:	adc    ch,BYTE PTR [ebp-0x5e]
  413242:	jbe    0x413282
  413244:	and    eax,0x98043264
  413249:	mov    al,ds:0xc84e8bdd
  41324e:	or     bh,BYTE PTR [edi-0x12]
  413251:	repnz push ss
  413253:	cmp    ch,al
  413255:	lock lods eax,DWORD PTR ds:[esi]
  413257:	mov    DWORD PTR [ebp+0x67],esp
  41325a:	and    bl,BYTE PTR [ecx-0x3b]
  41325d:	mov    bh,0xfa
  41325f:	jp     0x413288
  413261:	sbb    edx,DWORD PTR [ebx-0x7fe03c9]
  413267:	ficomp DWORD PTR [esi+ecx*1-0x7942f071]
  41326e:	idiv   dh
  413270:	test   al,0x32
  413272:	fdiv   st(0),st
  413274:	ret    
  413275:	repnz mov edi,fs
  413278:	int3   
  413279:	mov    ds:0xd30040c6,al
  41327e:	xchg   esp,eax
  41327f:	ss das 
  413281:	push   0x38
  413283:	jmp    0x40a1:0x7c6e6bf3
  41328a:	popa   
  41328b:	dec    BYTE PTR [eax+0x10]
  41328e:	jmp    0x2633:0x933bd157
  413295:	sbb    eax,0xa114e8c1
  41329a:	mov    esp,0x9a92335b
  41329f:	dec    edi
  4132a0:	adc    edi,DWORD PTR [ebx]
  4132a2:	add    DWORD PTR [ebp+0x382be1e6],esp
  4132a8:	xor    al,0x77
  4132aa:	adc    al,0xe
  4132ac:	xor    BYTE PTR [ebx+0x11],0xbb
  4132b0:	(bad)  
  4132b1:	cmp    bl,BYTE PTR ds:0xcffac9ed
  4132b7:	pop    es
  4132b8:	or     eax,0x400710be
  4132bd:	stos   DWORD PTR es:[edi],eax
  4132be:	dec    esi
  4132bf:	mov    gs,ebp
  4132c1:	data16 aad 0xdb
  4132c4:	sbb    BYTE PTR [ebx+edi*2],dl
  4132c7:	(bad)  
  4132c8:	fs iret 
  4132ca:	mov    bh,BYTE PTR [eax-0x52]
  4132cd:	sub    al,0xfc
  4132cf:	jno    0x4132e5
  4132d1:	and    bl,al
  4132d3:	jnp    0x41331d
  4132d5:	jmp    0x4eac:0x47f542d5
  4132dc:	inc    ebx
  4132dd:	call   FWORD PTR [eax-0x5c]
  4132e0:	inc    edx
  4132e1:	jne    0x4132a6
  4132e3:	pop    eax
  4132e4:	(bad)  
  4132e5:	enter  0xe948,0x0
  4132e9:	mov    ds:0x4b82962f,al
  4132ee:	xor    cl,BYTE PTR [ebx]
  4132f0:	(bad)  
  4132f1:	mov    dl,0x59
  4132f3:	cs and eax,0xf58a1464
  4132f9:	inc    edi
  4132fa:	int3   
  4132fb:	in     eax,0x4f
  4132fd:	out    0x1a,eax
  4132ff:	addr16 out 0x3e,eax
  413302:	push   ecx
  413303:	xchg   ebx,eax
  413304:	outs   dx,DWORD PTR ds:[esi]
  413305:	ins    BYTE PTR es:[edi],dx
  413306:	jmp    0x6b31d437
  41330b:	arpl   di,ax
  41330d:	leave  
  41330e:	mov    ecx,0x41e83e3a
  413313:	pop    esp
  413314:	int3   
  413315:	and    esi,eax
  413317:	hlt    
  413318:	fs cdq 
  41331a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41331c:	pop    esp
  41331d:	ss loopne 0x4132fa
  413320:	cmc    
  413321:	in     eax,0x18
  413323:	xor    BYTE PTR [edi+0x57],bh
  413326:	mov    dl,0xf4
  413328:	enter  0xa4f3,0xa4
  41332c:	daa    
  41332d:	mov    dh,0x23
  41332f:	xlat   BYTE PTR ds:[ebx]
  413330:	call   0x379bf798
  413335:	test   BYTE PTR [edi],ch
  413337:	ds or  bh,al
  41333a:	mov    esi,0x2b902853
  41333f:	rcl    BYTE PTR [ebx+0x7cb9749a],cl
  413345:	and    edx,esi
  413347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413348:	xchg   edx,eax
  413349:	jg     0x41332e
  41334b:	xlat   BYTE PTR ds:[ebx]
  41334c:	out    0x55,al
  41334e:	sbb    esp,DWORD PTR [ebx-0xde0b97e]
  413354:	fisttp DWORD PTR [ecx]
  413356:	(bad)  
  413357:	rol    bh,cl
  413359:	ficomp DWORD PTR ds:0xd00915ac
  41335f:	test   al,0x2e
  413361:	gs (bad) 
  413363:	iret   
  413364:	xchg   ebp,eax
  413365:	fmulp  st(1),st
  413367:	retf   
  413368:	stc    
  413369:	ja     0x413398
  41336b:	shr    ecx,0x63
  41336e:	mov    bl,0xad
  413370:	leave  
  413371:	pop    esp
  413372:	enter  0x1161,0xc6
  413376:	enter  0x2961,0xea
  41337a:	pop    edi
  41337b:	mov    edi,0x4658482b
  413380:	and    DWORD PTR [edx-0x26d61f],ecx
  413386:	frstor [edx-0x7cd6187]
  41338c:	jns    0x4133e1
  41338e:	arpl   WORD PTR [eax-0x54c261d7],di
  413394:	loopne 0x4133b0
  413396:	enter  0x22a2,0x53
  41339a:	scas   eax,DWORD PTR es:[edi]
  41339b:	and    ebp,edi
  41339d:	push   0xfb714230
  4133a2:	shl    DWORD PTR [ebx-0x342118e],1
  4133a8:	lods   al,BYTE PTR ds:[esi]
  4133a9:	pop    ds
  4133aa:	add    edx,DWORD PTR [ecx-0x63]
  4133ad:	call   0x690bbfe5
  4133b2:	pop    edi
  4133b3:	and    BYTE PTR [esp+edx*1-0x80],ah
  4133b7:	jae    0x41341b
  4133b9:	in     al,dx
  4133ba:	xchg   edx,eax
  4133bb:	retf   0x943e
  4133be:	fstp   QWORD PTR [ebp-0x1c]
  4133c1:	repnz sub edx,DWORD PTR es:[ecx-0x7d]
  4133c6:	cld    
  4133c7:	xchg   edi,eax
  4133c8:	arpl   dx,si
  4133ca:	or     esp,DWORD PTR [ecx-0x3e]
  4133cd:	ins    BYTE PTR es:[edi],dx
  4133ce:	jecxz  0x4133c9
  4133d0:	push   cs
  4133d1:	call   0x5a3e:0x2efdb98
  4133d8:	pop    ss
  4133d9:	repnz imul ecx,DWORD PTR [esi],0x5b2fe866
  4133e0:	daa    
  4133e1:	add    BYTE PTR [edi],dl
  4133e3:	je     0x4133c7
  4133e5:	cmp    esi,edx
  4133e7:	mov    ch,0x87
  4133e9:	rcr    esi,0x74
  4133ec:	scas   eax,DWORD PTR es:[edi]
  4133ed:	(bad)  
  4133ee:	in     eax,dx
  4133ef:	loope  0x4133a0
  4133f1:	mov    eax,0x31a0582f
  4133f6:	div    DWORD PTR [edi+0x3ceb4429]
  4133fc:	popf   
  4133fd:	pop    eax
  4133fe:	push   0xc660f5d7
  413403:	mov    bl,0xc4
  413405:	fdivr  st,st(5)
  413407:	jbe    0x413397
  413409:	mov    eax,ss:0x145ca74d
  41340f:	in     al,dx
  413410:	cmp    al,0xb0
  413412:	aaa    
  413413:	int3   
  413414:	sbb    DWORD PTR [eax],0x8
  413417:	push   cs
  413418:	pop    ds
  413419:	rcr    BYTE PTR [ecx-0x26],cl
  41341c:	retf   
  41341d:	push   edi
  41341e:	std    
  41341f:	loop   0x41345a
  413421:	inc    ecx
  413422:	mov    ch,0x9d
  413424:	pop    ss
  413425:	mov    esi,0xf887fef5
  41342a:	or     DWORD PTR ds:0x1f667019,edi
  413430:	push   esp
  413431:	cmp    BYTE PTR [esi-0x1a],ah
  413434:	xchg   esi,eax
  413435:	adc    BYTE PTR [esi-0x42],0xff
  413439:	jmp    0x413435
  41343b:	add    DWORD PTR [ebx-0x2b2d2c7f],eax
  413441:	data16 mov ds:0x964659f4,al
  413447:	mov    edi,0xfb7c32d2
  41344c:	icebp  
  41344d:	or     ah,BYTE PTR [eax+0x6ab36b42]
  413453:	lds    esp,FWORD PTR [eax]
  413455:	dec    edi
  413456:	popa   
  413457:	cld    
  413458:	sub    eax,0x1994a33d
  41345d:	mov    al,ds:0xc194331
  413462:	mov    bl,BYTE PTR [edi-0x6dc0273c]
  413468:	cdq    
  413469:	adc    edi,DWORD PTR [ebp+0x5ff298d6]
  41346f:	push   edi
  413470:	dec    ebx
  413471:	jbe    0x4134b8
  413473:	nop
  413474:	out    dx,eax
  413475:	jmp    0xb439cef8
  41347a:	mov    esp,0x23e35a1c
  41347f:	pop    ds
  413480:	jl     0x41347d
  413482:	or     edx,DWORD PTR [esp+edi*4-0x6c]
  413486:	sub    esi,ebp
  413488:	call   0x870c:0xdf74805d
  41348f:	mov    edx,0x6fb9ba24
  413494:	test   DWORD PTR [edi-0x4f],0x2b36e21a
  41349b:	out    0x93,al
  41349d:	in     al,dx
  41349e:	pop    ss
  41349f:	ret    
  4134a0:	inc    esi
  4134a1:	aam    0x83
  4134a3:	ins    DWORD PTR es:[edi],dx
  4134a4:	(bad)  
  4134a5:	fsubp  st(3),st
  4134a7:	js     0x41350c
  4134a9:	jne    0x41349a
  4134ab:	clc    
  4134ac:	mov    cl,0x3a
  4134ae:	push   ds
  4134af:	aad    0x31
  4134b1:	push   ebx
  4134b2:	aam    0xd5
  4134b4:	das    
  4134b5:	lds    esp,FWORD PTR [esi+edx*4]
  4134b8:	adc    al,0x67
  4134ba:	les    ebx,FWORD PTR ds:0x154b8d
  4134c0:	push   0xfffffff5
  4134c2:	jle    0x413486
  4134c4:	sar    BYTE PTR [eax-0x756cba00],1
  4134ca:	sbb    al,BYTE PTR [ecx+0x7d]
  4134cd:	(bad)  
  4134ce:	fucomip st,st(1)
  4134d0:	lahf   
  4134d1:	mov    ch,0x22
  4134d3:	inc    ecx
  4134d4:	pop    ds
  4134d5:	das    
  4134d6:	out    0x16,al
  4134d8:	adc    BYTE PTR [eax],cl
  4134da:	jecxz  0x413527
  4134dc:	rcr    BYTE PTR [ecx+0xeadc064],1
  4134e2:	lods   eax,DWORD PTR ds:[esi]
  4134e3:	xor    BYTE PTR [esi+0x5551fe99],bl
  4134e9:	push   esp
  4134ea:	ss dec esi
  4134ec:	test   eax,0xb0ee4fd4
  4134f1:	jmp    FWORD PTR [ebx+eiz*2]
  4134f4:	pop    ds
  4134f5:	shr    DWORD PTR [ecx+0x76],0x97
  4134f9:	adc    bl,0x57
  4134fc:	xor    eax,0xe0ff1cc3
  413501:	inc    ebp
  413502:	repz xor ch,cl
  413505:	and    ebp,DWORD PTR [edx]
  413507:	mov    WORD PTR [eax+ecx*8],fs
  41350a:	outs   dx,DWORD PTR ds:[esi]
  41350b:	je     0x41350a
  41350d:	fistp  QWORD PTR [ebx+ebx*1-0x6931497b]
  413514:	xor    BYTE PTR [eax+edi*8-0x6b],ah
  413518:	jge    0x4134a5
  41351a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41351b:	sbb    ebp,edi
  41351d:	and    ebp,ebx
  41351f:	ret    0x7658
  413522:	in     al,dx
  413523:	int    0x4d
  413525:	(bad)  
  413526:	jl     0x413583
  413528:	mul    BYTE PTR [ebx]
  41352a:	rcl    DWORD PTR [ecx+0x261e7ebe],1
  413530:	test   DWORD PTR [ecx],0xd900e5f1
  413536:	shl    DWORD PTR [ecx+0x1f],0xc3
  41353a:	push   es
  41353b:	jno    0x41359c
  41353d:	dec    ebx
  41353e:	jmp    0x4134e3
  413540:	mov    edi,0x9caa1bf3
  413545:	fxch   st(5)
  413547:	pop    es
  413548:	and    BYTE PTR [ebx+0x70],0xa
  41354c:	push   ds
  41354d:	in     eax,0x15
  41354f:	loop   0x41352d
  413551:	add    ecx,edx
  413553:	mov    esp,0xcac05469
  413558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413559:	pop    edx
  41355a:	sti    
  41355b:	inc    esi
  41355c:	fst    QWORD PTR [eax+0x6bd45124]
  413562:	sbb    eax,0x7d655290
  413567:	cld    
  413568:	scas   al,BYTE PTR es:[edi]
  413569:	sub    DWORD PTR [ebp+0x7b],ebx
  41356c:	cmp    edx,DWORD PTR [eax+0x1b]
  41356f:	sbb    eax,0x7c634958
  413574:	add    eax,0x9877f87a
  413579:	add    BYTE PTR [edi-0x57890a53],ah
  41357f:	xchg   edx,eax
  413580:	push   eax
  413581:	scas   al,BYTE PTR es:[edi]
  413582:	out    0x7d,eax
  413584:	loop   0x413595
  413586:	lea    ebp,[esi-0x78205c5a]
  41358c:	mov    ch,0xaa
  41358e:	sub    ebx,DWORD PTR [esi]
  413590:	add    DWORD PTR [esi+eiz*4],0x59
  413594:	xlat   BYTE PTR ds:[ebx]
  413595:	outs   dx,BYTE PTR ds:[esi]
  413596:	mov    ah,0x60
  413598:	cmp    bh,bh
  41359a:	lds    ebp,FWORD PTR [edi+0x5c18604c]
  4135a0:	or     BYTE PTR gs:[esp+ebx*2],dl
  4135a4:	inc    BYTE PTR [esp+ebx*1-0x79e7e69b]
  4135ab:	jmp    0x2670:0xe32b5842
  4135b2:	xchg   ecx,eax
  4135b3:	mov    ecx,0xffe4d54f
  4135b8:	dec    esp
  4135b9:	and    BYTE PTR [ecx-0x62605775],0x17
  4135c0:	dec    eax
  4135c1:	sbb    al,0xa8
  4135c3:	mov    dh,0x58
  4135c5:	jnp    0x41363c
  4135c7:	das    
  4135c8:	out    0xc7,eax
  4135ca:	mov    ebp,0xb6a4baf9
  4135cf:	mov    dh,0x54
  4135d1:	mov    al,ds:0xd07e0b3e
  4135d6:	xor    eax,0xbc20befe
  4135db:	push   ebp
  4135dc:	add    dl,bh
  4135de:	shl    esp,1
  4135e0:	dec    ebx
  4135e1:	jecxz  0x4135ad
  4135e3:	push   edi
  4135e4:	xor    DWORD PTR [edx+ebx*2+0x6e],esi
  4135e8:	retf   
  4135e9:	fwait
  4135ea:	retf   0x1ef8
  4135ed:	fsub   DWORD PTR [ebp-0x585f94ca]
  4135f3:	jp     0x413636
  4135f5:	outs   dx,BYTE PTR ds:[esi]
  4135f6:	push   ds
  4135f7:	shr    bh,1
  4135f9:	xchg   ebx,eax
  4135fa:	pushf  
  4135fb:	inc    ecx
  4135fc:	jecxz  0x4135dc
  4135fe:	popa   
  4135ff:	fbld   TBYTE PTR [esi+0x7b]
  413602:	std    
  413603:	xchg   ebx,eax
  413604:	lods   eax,DWORD PTR ds:[esi]
  413605:	popa   
  413606:	lahf   
  413607:	adc    dh,BYTE PTR [ebx+esi*1-0x431c4652]
  41360e:	inc    edi
  41360f:	jmp    DWORD PTR [edx-0x56]
  413612:	(bad)  
  413613:	lods   eax,DWORD PTR ds:[esi]
  413614:	cdq    
  413615:	mov    eax,0xb19771c1
  41361a:	inc    esi
  41361b:	mov    ds:0x5a49d4a7,eax
  413620:	xor    DWORD PTR [edi+eax*4-0x5ea49ef4],esi
  413627:	sahf   
  413628:	pop    ecx
  413629:	outs   dx,DWORD PTR ds:[esi]
  41362a:	in     al,0x57
  41362c:	sahf   
  41362d:	ret    0x185d
  413630:	fs repnz xchg esi,eax
  413633:	adc    DWORD PTR [ecx-0x5b],eax
  413636:	inc    ecx
  413637:	es aam 0x55
  41363a:	mov    eax,DWORD PTR ds:[ebp-0x48]
  41363e:	mov    ecx,DWORD PTR [ebp-0x44]
  413641:	shrd   eax,ecx,0x2
  413645:	shr    ecx,0x2
  413648:	mov    ecx,DWORD PTR [ebp-0x48]
  41364b:	mov    edx,DWORD PTR [ebp-0x44]
  41364e:	xor    eax,edi
  413650:	jmp    0x413bda
  413655:	jnp    0x413664
  413657:	les    edi,FWORD PTR [ebx+0x4c78b338]
  41365d:	jle    0x413689
  41365f:	nop
  413660:	outs   dx,BYTE PTR ds:[esi]
  413661:	repnz xor ah,BYTE PTR [esi]
  413664:	je     0x413643
  413666:	cld    
  413667:	or     al,0x16
  413669:	cmp    eax,0xc2161604
  41366e:	ret    
  41366f:	add    al,0xef
  413671:	mov    BYTE PTR [esi],cl
  413673:	xor    esp,DWORD PTR cs:[ebp+0x52]
  413677:	dec    esi
  413678:	mov    dl,0x9d
  41367a:	pop    edx
  41367b:	scas   eax,DWORD PTR es:[edi]
  41367c:	cmp    eax,0x4dac9761
  413681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413682:	enter  0x3859,0x52
  413686:	or     al,0x22
  413688:	ret    
  413689:	xchg   dl,al
  41368b:	xchg   esp,eax
  41368c:	scas   al,BYTE PTR es:[edi]
  41368d:	mov    ch,0xf4
  41368f:	loop   0x413699
  413691:	dec    ebx
  413692:	jbe    0x41366f
  413694:	mov    dh,0xeb
  413696:	aaa    
  413697:	das    
  413698:	shr    BYTE PTR [esi-0x77],cl
  41369b:	push   esp
  41369c:	xchg   BYTE PTR [esp+edx*8+0x42],dh
  4136a0:	jp     0x4136fa
  4136a2:	dec    edx
  4136a3:	mov    dl,BYTE PTR [esi]
  4136a5:	jecxz  0x413720
  4136a7:	sahf   
  4136a8:	jne    0x413665
  4136aa:	jle    0x413711
  4136ac:	dec    ecx
  4136ad:	fisub  WORD PTR [ecx+0x66]
  4136b0:	dec    DWORD PTR [edx-0x32]
  4136b3:	repnz dec esi
  4136b5:	das    
  4136b6:	pop    eax
  4136b7:	cwde   
  4136b8:	sub    DWORD PTR ds:0xa6c9c242,esi
  4136be:	xchg   esi,eax
  4136bf:	and    ah,BYTE PTR [ebx+edi*1-0x69]
  4136c3:	rcr    cl,cl
  4136c5:	cmc    
  4136c6:	jnp    0x413707
  4136c8:	lds    ebp,FWORD PTR [ebx-0x77]
  4136cb:	and    esi,DWORD PTR [esi]
  4136cd:	popa   
  4136ce:	jb     0x413712
  4136d0:	pop    es
  4136d1:	out    dx,al
  4136d2:	popf   
  4136d3:	adc    eax,0x14bc628f
  4136d8:	or     DWORD PTR [esp+edx*4],0xbb58f688
  4136df:	sahf   
  4136e0:	sub    DWORD PTR [edx+0x6d],esi
  4136e3:	push   esp
  4136e4:	loopne 0x4136d7
  4136e6:	pop    esp
  4136e7:	scas   eax,DWORD PTR es:[edi]
  4136e8:	lods   al,BYTE PTR ds:[esi]
  4136e9:	jns    0x4136e7
  4136eb:	les    esp,FWORD PTR [ebx+edx*2+0x10c67d7]
  4136f2:	outs   dx,BYTE PTR ds:[esi]
  4136f3:	and    eax,0xfe56dd74
  4136f8:	xchg   edi,eax
  4136f9:	mov    DWORD PTR [ebx],ecx
  4136fb:	je     0x4136dd
  4136fd:	jge    0x4136f9
  4136ff:	add    BYTE PTR [eax+ebx*1+0x78a7e8fe],al
  413706:	dec    esi
  413707:	fcomp  QWORD PTR [esi]
  413709:	enter  0x55f8,0x16
  41370d:	xchg   esi,eax
  41370e:	jbe    0x41369a
  413710:	ins    DWORD PTR es:[edi],dx
  413711:	mov    ecx,0x1663d9f4
  413716:	and    al,0x1e
  413718:	sub    al,0x7a
  41371a:	push   edi
  41371b:	dec    ebx
  41371c:	jno    0x41375c
  41371e:	or     BYTE PTR [ebp+0x1daf156d],cl
  413724:	cli    
  413725:	or     al,0xa5
  413727:	je     0x413788
  413729:	outs   dx,DWORD PTR ds:[esi]
  41372a:	outs   dx,BYTE PTR ds:[esi]
  41372b:	test   DWORD PTR [edi-0x33b8958],0x25068cdd
  413735:	push   ds
  413736:	cmp    al,0x21
  413738:	mov    DWORD PTR [ebp-0x6f],edi
  41373b:	lock into 
  41373d:	int3   
  41373e:	xchg   edi,eax
  41373f:	mov    ds:0xed5950d1,eax
  413744:	stos   BYTE PTR es:[edi],al
  413745:	mov    edx,0xed8d32bc
  41374a:	int    0xb9
  41374c:	cld    
  41374d:	mov    edi,0x12d81365
  413752:	clc    
  413753:	sar    DWORD PTR [ebp-0x12],0xb2
  413757:	jo     0x413717
  413759:	xchg   ecx,eax
  41375a:	and    edi,DWORD PTR [edi]
  41375c:	inc    ebp
  41375d:	mov    bh,0x28
  41375f:	mov    cl,0x91
  413761:	mov    BYTE PTR [ecx],bl
  413763:	fwait
  413764:	jne    0x41371b
  413766:	mov    ?,WORD PTR [ebx+0x4c]
  413769:	xor    ah,BYTE PTR [eax-0x43cce762]
  41376f:	pop    esp
  413770:	clc    
  413771:	cmp    edx,DWORD PTR [edx]
  413773:	es xchg sp,ax
  413776:	shl    DWORD PTR [ecx],0x8c
  413779:	xchg   esi,eax
  41377a:	stc    
  41377b:	fsubr  DWORD PTR [edx]
  41377d:	(bad)  
  41377f:	add    al,0x6b
  413781:	and    DWORD PTR [esi+ebp*1+0xb],0x7c
  413786:	xor    esi,DWORD PTR [eax+0x72]
  413789:	daa    
  41378a:	and    al,0x2f
  41378c:	je     0x4137af
  41378e:	jmp    0xf0ec:0xf30580c6
  413795:	xor    al,0x8b
  413797:	and    bh,BYTE PTR [eax+edx*8-0x80]
  41379b:	outs   dx,DWORD PTR ds:[esi]
  41379c:	xor    DWORD PTR [ebp-0x56],ecx
  41379f:	or     al,0xb1
  4137a1:	mov    bl,0x82
  4137a3:	repz in al,0x22
  4137a6:	loopne 0x413794
  4137a8:	adc    BYTE PTR [ebx],dl
  4137aa:	push   0xffffffcc
  4137ac:	verw   WORD PTR [edx+edi*2]
  4137b0:	push   edx
  4137b1:	adc    DWORD PTR ds:0xc14c20ce,eax
  4137b7:	sbb    DWORD PTR [eax-0xd45a717],0x27
  4137be:	addr16 mov al,0x1a
  4137c1:	ret    
  4137c2:	cmc    
  4137c3:	out    dx,eax
  4137c4:	push   ebx
  4137c5:	xchg   edi,eax
  4137c6:	and    esi,DWORD PTR [eax-0x5]
  4137c9:	pushf  
  4137ca:	arpl   WORD PTR [esi-0x757ffdd8],bp
  4137d0:	mov    eax,ds:0xecbe4116
  4137d5:	out    dx,al
  4137d6:	ret    0xdd9e
  4137d9:	jns    0x41375f
  4137db:	sub    al,0xbb
  4137dd:	pop    ebp
  4137de:	cwde   
  4137df:	xor    eax,0x6b5df1fd
  4137e4:	loope  0x41384a
  4137e6:	cmp    DWORD PTR [edx-0x49ac6fb3],eax
  4137ec:	dec    ebp
  4137ed:	mov    eax,ds:0xf0649bd0
  4137f2:	imul   esp,eax,0xffffffd6
  4137f5:	arpl   WORD PTR [eax-0x7f],ax
  4137f8:	jns    0x41386f
  4137fa:	cli    
  4137fb:	dec    eax
  4137fc:	push   edi
  4137fd:	mov    dl,0x2c
  4137ff:	ins    DWORD PTR es:[edi],dx
  413800:	loope  0x4137ae
  413802:	push   ss
  413803:	mov    edi,0x22812829
  413808:	repnz mov al,0x33
  41380b:	jle    0x413859
  41380d:	ret    0xd522
  413810:	neg    cl
  413812:	in     al,dx
  413813:	dec    edi
  413814:	mov    bh,0x23
  413816:	add    esi,DWORD PTR ds:0xba6ff60a
  41381c:	sbb    BYTE PTR [ebp-0x4f87bc65],dl
  413822:	cwde   
  413823:	jo     0x4137d6
  413825:	or     eax,0x7684b6a7
  41382a:	mov    edi,DWORD PTR [ecx+0x16fdb191]
  413830:	add    dl,BYTE PTR [eax+0x2a]
  413833:	retf   0xc7a
  413836:	ror    DWORD PTR [esi-0x39],0xe6
  41383a:	jnp    0x413866
  41383c:	jae    0x41382f
  41383e:	aam    0x40
  413840:	sbb    eax,0xebaa0af6
  413845:	cmp    bl,BYTE PTR [ecx-0x3b]
  413848:	mov    eax,0x28e793a4
  41384d:	mov    eax,0xe324152
  413852:	mov    esp,0xd667e031
  413857:	push   esi
  413858:	push   edx
  413859:	inc    esp
  41385a:	fstp   QWORD PTR [edi+0x3f498899]
  413860:	stos   BYTE PTR es:[edi],al
  413861:	push   ebp
  413862:	adc    al,0x58
  413864:	sbb    BYTE PTR [esi+edi*1-0x35],cl
  413868:	mov    ah,0x9
  41386a:	dec    edx
  41386b:	dec    esp
  41386c:	dec    esp
  41386d:	lods   al,BYTE PTR ds:[esi]
  41386e:	lods   eax,DWORD PTR ds:[esi]
  41386f:	sub    eax,0xd74021fc
  413874:	mov    ch,0x41
  413876:	lods   al,BYTE PTR ds:[esi]
  413877:	pop    esp
  413878:	(bad)  [ecx+0x13]
  41387b:	dec    DWORD PTR [esi+ebx*1+0xb]
  41387f:	sbb    DWORD PTR [esi+ebp*2],edx
  413882:	sbb    DWORD PTR [esi],0xb4cc2397
  413888:	pop    es
  413889:	mov    BYTE PTR ds:[edi-0x39],ah
  41388d:	pop    eax
  41388e:	dec    DWORD PTR [eax]
  413890:	scas   al,BYTE PTR es:[edi]
  413891:	dec    edx
  413892:	(bad)  
  413893:	ror    DWORD PTR [esi-0x121d7349],cl
  413899:	fsub   DWORD PTR [edx-0x57d18d66]
  41389f:	(bad)  
  4138a0:	sub    al,0x67
  4138a2:	jne    0x4138ff
  4138a4:	cmp    BYTE PTR [esi+eiz*8],bh
  4138a7:	les    esi,FWORD PTR [ebx+0x2cd08d4f]
  4138ad:	call   0x575b789f
  4138b2:	sbb    cl,BYTE PTR [eax+edi*4]
  4138b5:	jmp    0x86426c3a
  4138ba:	xchg   BYTE PTR [edi-0x6011e269],dh
  4138c0:	push   es
  4138c1:	ja     0x4138ac
  4138c3:	pushf  
  4138c4:	mov    WORD PTR [edx+0x35],?
  4138c7:	push   ebx
  4138c8:	clc    
  4138c9:	mov    ecx,0xb1b0c570
  4138ce:	pop    esp
  4138cf:	aas    
  4138d0:	sbb    DWORD PTR [ecx-0x6f84bc2f],0x2f37e83e
  4138da:	ret    
  4138db:	xchg   esp,eax
  4138dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dd:	push   ecx
  4138de:	mov    cl,0x5c
  4138e0:	mov    bh,0x65
  4138e2:	test   BYTE PTR [edi],0xbf
  4138e5:	loope  0x413867
  4138e7:	iret   
  4138e8:	pop    edi
  4138e9:	xchg   esi,eax
  4138ea:	sub    ebx,esi
  4138ec:	lea    ebp,[edi-0xf]
  4138ef:	rcr    BYTE PTR ds:0xb710bf8f,0xa6
  4138f6:	mov    bl,0xec
  4138f8:	xor    ecx,ebx
  4138fa:	retf   0x1fcb
  4138fd:	adc    ah,bl
  4138ff:	inc    edx
  413900:	mov    eax,ds:0xc56ca0
  413905:	cli    
  413906:	cmp    al,0x10
  413908:	inc    ebx
  413909:	(bad)  
  41390a:	mov    esi,0xa4073ebe
  41390f:	int    0x48
  413911:	push   ecx
  413912:	and    DWORD PTR [esi-0x13315b09],edi
  413918:	jecxz  0x41389b
  41391a:	test   BYTE PTR [eax+ebx*8],cl
  41391d:	aas    
  41391e:	jp     0x413979
  413920:	stos   DWORD PTR es:[edi],eax
  413921:	retf   
  413922:	pusha  
  413923:	stos   BYTE PTR es:[edi],al
  413924:	adc    BYTE PTR ds:0xc19af966,bh
  41392a:	xchg   ebp,eax
  41392b:	aam    0xe6
  41392d:	mov    bl,0x91
  41392f:	imul   eax,ecx,0xb8afdd96
  413935:	xlat   BYTE PTR ds:[ebx]
  413936:	mov    ebp,0x56a3e393
  41393b:	test   DWORD PTR [ecx-0x33cb6626],eax
  413941:	(bad)
  413945:	and    BYTE PTR [esi],dl
  413947:	paddw  mm7,QWORD PTR [eax]
  41394a:	jne    0x413935
  41394c:	not    BYTE PTR [edx+ebx*8+0x39e1d8fa]
  413953:	sub    eax,0x83bb221a
  413958:	test   DWORD PTR [eax+0xd],ebx
  41395b:	sub    eax,0x776933d7
  413960:	sub    ecx,DWORD PTR [ebx]
  413962:	outs   dx,BYTE PTR ds:[esi]
  413963:	in     al,0xdb
  413965:	(bad)  
  413966:	out    dx,al
  413967:	test   DWORD PTR [esi+edi*1+0x2e],eax
  41396b:	fldenv [edi-0x14]
  41396e:	(bad)  
  41396f:	stc    
  413970:	idiv   BYTE PTR [ebx+0x12]
  413973:	scas   eax,DWORD PTR es:[edi]
  413974:	les    esi,FWORD PTR [edx]
  413976:	inc    ecx
  413977:	jge    0x413949
  413979:	mov    ecx,0xe337b5e3
  41397e:	fmul   QWORD PTR [esi+0x27]
  413981:	inc    ebp
  413982:	popa   
  413983:	cli    
  413984:	or     DWORD PTR [edx+eax*1-0x28],ecx
  413988:	and    al,0x27
  41398a:	sahf   
  41398b:	es clc 
  41398d:	(bad)  
  41398e:	sbb    eax,0xe9318cf5
  413993:	pop    ds
  413994:	or     ebx,DWORD PTR [eax+0x15]
  413997:	pusha  
  413998:	pop    edi
  413999:	push   edx
  41399a:	loopne 0x4139a9
  41399c:	pop    edi
  41399d:	inc    eax
  41399e:	loope  0x41394e
  4139a0:	add    al,0x49
  4139a2:	gs xchg ecx,eax
  4139a4:	xor    eax,0xaf996c64
  4139a9:	loop   0x413a28
  4139ab:	jl     0x4139b4
  4139ad:	outs   dx,DWORD PTR ds:[esi]
  4139ae:	lods   al,BYTE PTR ds:[esi]
  4139af:	jnp    0x41397a
  4139b1:	push   esi
  4139b2:	fst    QWORD PTR [edi-0x136c23c2]
  4139b8:	fld    TBYTE PTR [ecx+0x2f]
  4139bb:	xchg   BYTE PTR [ebx],dl
  4139bd:	dec    eax
  4139be:	and    DWORD PTR [ecx],ebp
  4139c0:	pop    edx
  4139c1:	mov    ebp,0x31ba3882
  4139c6:	mov    esp,0x735a8caf
  4139cb:	inc    edi
  4139cc:	ds and dl,bh
  4139cf:	fs mov fs,ebp
  4139d2:	fmul   DWORD PTR [ebx+0x3c1abcbf]
  4139d8:	fsub   QWORD PTR [esi-0x79]
  4139db:	mov    dl,0xfa
  4139dd:	xlat   BYTE PTR ds:[ebx]
  4139de:	jecxz  0x413a2b
  4139e0:	pusha  
  4139e1:	and    esi,ecx
  4139e3:	test   dl,bh
  4139e5:	add    ebx,DWORD PTR [edx-0x51]
  4139e8:	sbb    al,0xa2
  4139ea:	(bad)
  4139ee:	fistp  QWORD PTR [bp+di]
  4139f1:	push   es
  4139f2:	leave  
  4139f3:	push   ss
  4139f4:	xor    DWORD PTR [ecx+0x1b],0xc9ad381c
  4139fb:	and    ebp,0x57
  4139fe:	ret    0xcf91
  413a01:	inc    edi
  413a02:	das    
  413a03:	jge    0x413a77
  413a05:	bound  esp,QWORD PTR [ecx]
  413a07:	and    DWORD PTR [ebp-0x5a],ebx
  413a0a:	call   0x74dffa5c
  413a0f:	out    dx,al
  413a10:	add    esp,edi
  413a12:	inc    ebx
  413a13:	dec    edx
  413a14:	(bad)  
  413a16:	jb     0x41399a
  413a18:	shl    BYTE PTR [edx-0x429140f1],cl
  413a1e:	cmp    dh,al
  413a20:	out    0xd5,eax
  413a22:	imul   ebx,DWORD PTR [eax-0x3f],0xfe3deb27
  413a29:	mov    bl,0x71
  413a2b:	inc    esi
  413a2c:	xchg   BYTE PTR [esi],ch
  413a2e:	retf   
  413a2f:	in     al,0x70
  413a31:	mov    ecx,0x37b4027
  413a36:	dec    ebp
  413a37:	pop    ebp
  413a38:	stc    
  413a39:	aad    0x55
  413a3b:	add    edx,esp
  413a3d:	and    BYTE PTR [esi+0x79be6063],al
  413a43:	and    eax,0xf9bd4928
  413a48:	cmc    
  413a49:	dec    eax
  413a4a:	xchg   ebx,eax
  413a4b:	sub    BYTE PTR [edx+0x74],al
  413a4e:	std    
  413a4f:	sbb    esi,eax
  413a51:	popa   
  413a52:	sbb    BYTE PTR [edx-0x927b0b],al
  413a58:	pop    edx
  413a59:	call   0xd7e8:0x6ec2bb83
  413a60:	enter  0x9d0b,0xa
  413a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a65:	jle    0x4139f3
  413a67:	fwait
  413a68:	mov    eax,0xe76090bf
  413a6d:	sbb    al,BYTE PTR [esi]
  413a6f:	xor    esp,ebx
  413a71:	pop    esp
  413a72:	push   cs
  413a73:	adc    DWORD PTR [eax],ebx
  413a75:	inc    ebx
  413a76:	outs   dx,DWORD PTR ds:[esi]
  413a77:	rol    BYTE PTR [eax-0x13bdbc2c],1
  413a7d:	aam    0x46
  413a7f:	jp     0x413aaf
  413a81:	outs   dx,BYTE PTR ds:[esi]
  413a82:	add    bh,BYTE PTR [eax]
  413a84:	push   edx
  413a85:	or     eax,0x997e6afb
  413a8a:	jmp    0x413a25
  413a8c:	pop    ds
  413a8d:	fisubr DWORD PTR [esi]
  413a8f:	sub    DWORD PTR [ebx],ecx
  413a91:	and    DWORD PTR [esp+ebp*4+0x2a],ecx
  413a95:	popa   
  413a96:	pop    ecx
  413a97:	loope  0x413ab6
  413a99:	sub    al,0xcf
  413a9b:	dec    eax
  413a9c:	retf   
  413a9d:	push   0xe8d5d67b
  413aa2:	lea    edi,[eax+ecx*8-0x59]
  413aa6:	ss pop ebp
  413aa8:	fiadd  DWORD PTR [ebx-0x24]
  413aab:	xor    al,0x57
  413aad:	mov    edx,0xf0c46684
  413ab2:	xchg   ecx,eax
  413ab3:	scas   eax,DWORD PTR es:[edi]
  413ab4:	jne    0x413af7
  413ab6:	sbb    esi,DWORD PTR [eax+edi*2+0x1b]
  413aba:	or     al,0xa
  413abc:	mov    esp,0x9c08ff04
  413ac1:	(bad)  
  413ac2:	cli    
  413ac3:	jp     0x413a80
  413ac5:	popf   
  413ac6:	cli    
  413ac7:	dec    eax
  413ac8:	pusha  
  413ac9:	into   
  413aca:	and    ebp,DWORD PTR [edx-0x720e9549]
  413ad0:	and    esp,ebx
  413ad2:	add    BYTE PTR [edi*4-0x35455141],dl
  413ad9:	ins    BYTE PTR es:[edi],dx
  413ada:	sti    
  413adb:	(bad)  
  413adc:	pop    esi
  413add:	in     al,0x15
  413adf:	xor    eax,0x8bfd1f86
  413ae4:	das    
  413ae5:	mov    DWORD PTR [ebx],eax
  413ae7:	rcl    BYTE PTR ds:0xd2bf4a02,0xb5
  413aee:	daa    
  413aef:	out    0xa3,al
  413af1:	pop    esp
  413af2:	inc    eax
  413af3:	rol    dl,cl
  413af5:	push   edx
  413af6:	mov    ecx,0x485f1123
  413afb:	test   BYTE PTR [esi-0x59],0x9f
  413aff:	retf   
  413b00:	mov    al,BYTE PTR [eax+ebp*8]
  413b03:	fdiv   st,st(2)
  413b05:	out    0xc8,al
  413b07:	setnp  BYTE PTR [edx+0x75715732]
  413b0e:	ja     0x413aed
  413b10:	xchg   DWORD PTR ds:0xa0d83825,ecx
  413b16:	rol    BYTE PTR [esi+0x29],1
  413b19:	dec    esi
  413b1a:	imul   esi,DWORD PTR [eax],0xffffff92
  413b1d:	push   edx
  413b1e:	push   esp
  413b1f:	(bad)  
  413b21:	aaa    
  413b22:	repnz sub bl,BYTE PTR [ecx]
  413b25:	xor    dh,BYTE PTR [ecx+0x701e2be4]
  413b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b2c:	dec    edx
  413b2d:	sbb    dh,ch
  413b2f:	mov    ds:0x92b8d5fc,al
  413b34:	xor    eax,0xa6fbea8e
  413b39:	call   DWORD PTR [ebx-0x44]
  413b3c:	sub    DWORD PTR ds:0x2f6cefa2,eax
  413b42:	sbb    bh,BYTE PTR [ebx+0xa30a2d3]
  413b48:	imul   ebx,DWORD PTR [ecx],0x6e
  413b4b:	inc    esp
  413b4c:	mov    ecx,0x7704c6e
  413b51:	icebp  
  413b52:	push   ebp
  413b53:	xchg   esi,eax
  413b54:	enter  0xd980,0xc8
  413b58:	adc    dh,BYTE PTR [ecx+0x69]
  413b5b:	add    ch,bl
  413b5d:	push   eax
  413b5e:	repnz or esp,DWORD PTR [edx]
  413b61:	or     BYTE PTR [ebx],dl
  413b63:	push   edx
  413b64:	inc    esp
  413b65:	pop    edx
  413b66:	mov    al,ds:0xcd87befa
  413b6b:	les    ebp,FWORD PTR [ebx]
  413b6d:	adc    al,0xff
  413b6f:	popa   
  413b70:	pushf  
  413b71:	pop    ebp
  413b72:	call   0xddd74cad
  413b77:	adc    BYTE PTR [edx],dh
  413b79:	es dec esp
  413b7b:	push   ss
  413b7c:	fimul  WORD PTR [edx+0x74]
  413b7f:	outs   dx,BYTE PTR ds:[esi]
  413b80:	xchg   ebx,eax
  413b81:	mov    dl,0xc1
  413b83:	pusha  
  413b84:	cdq    
  413b85:	dec    ecx
  413b86:	outs   dx,DWORD PTR ds:[esi]
  413b87:	out    0x67,eax
  413b89:	jl     0x413b41
  413b8b:	arpl   WORD PTR [ebx+0x57],dx
  413b8e:	push   esi
  413b8f:	ss dec edi
  413b91:	sub    DWORD PTR [eax+0x3e2cfa9d],edx
  413b97:	js     0x413b8d
  413b99:	add    BYTE PTR [edx-0x1847d9fe],bl
  413b9f:	or     dh,BYTE PTR [ebp-0x5e]
  413ba2:	stc    
  413ba3:	push   ebx
  413ba4:	aam    0x47
  413ba6:	and    bh,bl
  413ba8:	out    0x46,eax
  413baa:	cld    
  413bab:	sahf   
  413bac:	scas   eax,DWORD PTR es:[edi]
  413bad:	xor    bl,BYTE PTR [edi-0x550f411a]
  413bb3:	repnz stc 
  413bb5:	xchg   ebp,eax
  413bb6:	or     DWORD PTR [edx+0x55e0db95],0xffffffd9
  413bbd:	imul   ebx,edi,0xffffffb5
  413bc0:	int3   
  413bc1:	out    0xa8,al
  413bc3:	mov    ecx,0xecfe72c2
  413bc8:	mov    ch,0xd5
  413bca:	inc    eax
  413bcb:	dec    esp
  413bcc:	ret    
  413bcd:	jnp    0x413be6
  413bcf:	cmc    
  413bd0:	cld    
  413bd1:	fst    DWORD PTR [eax+0x74903bc1]
  413bd7:	push   ss
  413bd8:	dec    edx
  413bd9:	(bad)  
  413bdb:	loope  0x413bfb
  413bdd:	xor    edx,edx
  413bdf:	or     eax,edx
  413be1:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413be5:	mov    eax,DWORD PTR [ebp+0x14]
  413be8:	add    BYTE PTR [eax],cl
  413bea:	mov    eax,DWORD PTR [ebp-0x38]
  413bed:	mov    ecx,DWORD PTR [ebp-0x34]
  413bf0:	shrd   eax,ecx,0x2
  413bf4:	shr    ecx,0x2
  413bf7:	mov    ecx,DWORD PTR [ebp-0x38]
  413bfa:	mov    edx,DWORD PTR [ebp-0x34]
  413bfd:	xor    eax,edi
  413bff:	shl    ecx,0x1e
  413c02:	mov    ecx,DWORD PTR [ebp-0x38]
  413c05:	jmp    0x41418f
  413c0a:	sahf   
  413c0b:	(bad)  
  413c0c:	push   cs
  413c0d:	sub    esi,ebp
  413c0f:	sbb    BYTE PTR [eax],bl
  413c11:	inc    eax
  413c12:	adc    al,0xc8
  413c14:	sub    BYTE PTR [esi+0x68fff692],0xb
  413c1b:	repnz or al,0x16
  413c1e:	cmp    eax,0x43161604
  413c23:	pop    esi
  413c24:	bound  edx,QWORD PTR [ebp*2-0x19b9dfa1]
  413c2b:	and    cl,BYTE PTR [esi]
  413c2d:	mov    esi,0xdb06d839
  413c32:	sub    eax,0x59ad2d04
  413c37:	jmp    0x68d9:0x9ed812e
  413c3e:	jmp    0x413bf2
  413c40:	repz xchg ecx,eax
  413c42:	xor    edx,ebp
  413c44:	inc    esp
  413c45:	or     ecx,DWORD PTR [esi+0xe]
  413c48:	jmp    0x413c66
  413c4a:	sbb    ebp,ebp
  413c4c:	mov    dh,BYTE PTR [edi]
  413c4e:	fs mov edi,0x9251e8ae
  413c54:	mov    DWORD PTR [ebp+0x5d],ebp
  413c57:	cmp    DWORD PTR [ebx-0x577b7f2],ebp
  413c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5e:	xor    esp,DWORD PTR [ebx]
  413c60:	mov    ds:0x2e53709e,eax
  413c65:	fcmovb st,st(6)
  413c67:	mov    dh,0xca
  413c69:	push   ecx
  413c6a:	sub    BYTE PTR [eax-0x72f6ba9e],ch
  413c70:	idiv   DWORD PTR [ecx-0x26]
  413c73:	sub    DWORD PTR [ecx+0x2d230868],0xf511b290
  413c7d:	repz pop ds
  413c7f:	or     BYTE PTR [edx-0x4ee9ab72],al
  413c85:	int3   
  413c86:	paddw  mm0,QWORD PTR [ecx-0x20b08e1]
  413c8d:	into   
  413c8e:	out    0x36,eax
  413c90:	dec    edi
  413c91:	mov    ch,0x9d
  413c93:	and    al,0xb4
  413c95:	inc    esi
  413c96:	sbb    edi,ebp
  413c98:	test   DWORD PTR ds:0xc2423a84,0x1fddc2b8
  413ca2:	xchg   ecx,eax
  413ca3:	loop   0x413cea
  413ca5:	ret    
  413ca6:	repz jno 0x413c58
  413ca9:	call   FWORD PTR ds:0x5a31784b
  413caf:	shr    BYTE PTR [ebx],0xac
  413cb2:	push   esp
  413cb3:	fadd   DWORD PTR [ebx-0x43]
  413cb6:	mov    BYTE PTR [edx+0x36],ch
  413cb9:	shl    BYTE PTR [ebx+0x2f],0x4c
  413cbd:	or     bl,BYTE PTR [esi]
  413cbf:	call   0x600:0x9f6e1793
  413cc6:	mov    bl,0xbb
  413cc8:	xchg   DWORD PTR [esi+0x7a81a4b4],edx
  413cce:	out    0xe3,al
  413cd0:	pop    eax
  413cd1:	and    eax,0x13d018bf
  413cd6:	or     al,0xd3
  413cd8:	addr16 jnp 0x413c68
  413cdb:	push   ebx
  413cdc:	int    0x98
  413cde:	pop    esp
  413cdf:	pop    eax
  413ce0:	jb     0x413c78
  413ce2:	(bad)  
  413ce3:	into   
  413ce4:	idiv   BYTE PTR [eax]
  413ce6:	mov    ds:0x286566de,eax
  413ceb:	jmp    0x8f01:0x6eade56a
  413cf2:	test   BYTE PTR [ebx],0xfe
  413cf5:	lods   eax,DWORD PTR ds:[esi]
  413cf6:	(bad)
  413cf9:	jmp    0x413c94
  413cfb:	outs   dx,DWORD PTR ds:[esi]
  413cfc:	and    edx,ebp
  413cfe:	push   cs
  413cff:	bound  eax,QWORD PTR [ebp+ebx*2+0x36e091cd]
  413d06:	xchg   edx,eax
  413d08:	test   eax,0x10fac534
  413d0d:	cdq    
  413d0e:	jne    0x413c91
  413d10:	add    BYTE PTR [ecx-0x6215675f],ch
  413d16:	mov    dh,0x66
  413d18:	mov    eax,ds:0x71371c66
  413d1d:	mov    edx,0x7ad2320e
  413d22:	jo     0x413d87
  413d24:	shl    eax,0x35
  413d27:	hlt    
  413d28:	mov    bl,0x7f
  413d2a:	aaa    
  413d2b:	mov    esi,0x8bb060f5
  413d30:	repnz mov cl,0x54
  413d33:	xchg   DWORD PTR [ebx+0x4ead5d6b],eax
  413d39:	stos   BYTE PTR es:[edi],al
  413d3a:	cli    
  413d3b:	and    eax,0x5ae3cc96
  413d40:	retf   
  413d41:	cwde   
  413d42:	fwait
  413d43:	xor    eax,DWORD PTR [ebp+0x3d1f415]
  413d49:	mov    ds:0x5bd8c333,eax
  413d4e:	bound  esp,QWORD PTR [ebx-0xe9580fc]
  413d54:	add    al,0x51
  413d56:	xchg   ch,cl
  413d58:	push   ebp
  413d59:	pop    ds
  413d5a:	jae    0x413d54
  413d5c:	lods   al,BYTE PTR ds:[esi]
  413d5d:	pop    esp
  413d5e:	xor    DWORD PTR [edx+ebx*8+0x31941bbd],edx
  413d65:	or     eax,0x9a2cbff6
  413d6a:	jb     0x413d5a
  413d6c:	dec    edi
  413d6d:	test   BYTE PTR [ebx-0x46],ch
  413d70:	mov    cl,0x8a
  413d72:	xchg   ecx,eax
  413d73:	mov    fs,WORD PTR [ebx]
  413d75:	mov    eax,0x18375acd
  413d7a:	lods   al,BYTE PTR ds:[esi]
  413d7b:	cmp    al,0xa1
  413d7d:	xchg   edx,eax
  413d7e:	jle    0x413dfc
  413d80:	dec    edi
  413d81:	(bad)  
  413d82:	cmp    al,0xe5
  413d84:	mov    WORD PTR [esi],gs
  413d86:	xchg   ch,bl
  413d88:	jp     0x413dde
  413d8a:	mov    BYTE PTR [ebx],bl
  413d8c:	iret   
  413d8d:	test   DWORD PTR [eax-0x52],0xd97623af
  413d94:	scas   eax,DWORD PTR es:[di]
  413d96:	jae    0x413de9
  413d98:	(bad)  [eax+0x44900bc5]
  413d9e:	loop   0x413d4e
  413da0:	or     al,BYTE PTR [eax+edx*4-0x4f]
  413da4:	es clc 
  413da6:	push   edi
  413da7:	sahf   
  413da8:	cmp    ebx,DWORD PTR [esi+0x702a0216]
  413dae:	scas   al,BYTE PTR es:[edi]
  413daf:	jns    0x413d58
  413db1:	aaa    
  413db2:	add    al,0xdc
  413db4:	sahf   
  413db5:	fsubrp st(2),st
  413db7:	or     bh,BYTE PTR [edx+0x3f]
  413dba:	repnz push esi
  413dbc:	sbb    al,0xd6
  413dbe:	stos   BYTE PTR es:[edi],al
  413dbf:	mov    ebx,ebx
  413dc1:	inc    eax
  413dc2:	shr    BYTE PTR [edi+0x34],0x53
  413dc6:	sar    BYTE PTR cs:[ebx],1
  413dc9:	pop    ebp
  413dca:	cmp    eax,0x5c09ad91
  413dcf:	push   ebx
  413dd0:	mov    dl,0x63
  413dd2:	mov    edi,0xbec56e6a
  413dd7:	mov    ebx,0x684a00eb
  413ddc:	xor    dh,BYTE PTR ds:0xc54bb506
  413de2:	mov    ah,0x9a
  413de4:	sub    DWORD PTR [ebp-0x48],0x58e2e9a0
  413deb:	or     al,0x36
  413ded:	jbe    0x413dab
  413def:	ss add eax,0x159284de
  413df5:	mov    edi,0xff5743d3
  413dfa:	int3   
  413dfb:	or     al,0x48
  413dfd:	inc    ebx
  413dfe:	push   0xb71386fc
  413e03:	push   ebp
  413e04:	adc    edi,DWORD PTR [edx]
  413e06:	and    al,0x2a
  413e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e09:	pop    ecx
  413e0a:	ds jb  0x413ddd
  413e0d:	gs add al,0xd5
  413e10:	ret    
  413e11:	ret    
  413e12:	xchg   edi,eax
  413e13:	xor    DWORD PTR [edx+ebx*8],eax
  413e16:	and    eax,0x43a4dfa
  413e1b:	in     eax,dx
  413e1c:	es std 
  413e1e:	add    DWORD PTR [ecx+0x1186b841],ebx
  413e24:	fbld   TBYTE PTR [eax+edi*8+0x25cbbbc0]
  413e2b:	daa    
  413e2c:	hlt    
  413e2d:	fnstcw WORD PTR [ecx-0x5e4176bf]
  413e33:	dec    ebp
  413e34:	lds    esp,FWORD PTR [ecx-0x5a3f2cf7]
  413e3a:	stos   BYTE PTR es:[edi],al
  413e3b:	js     0x413de7
  413e3d:	adc    eax,0xd22e981f
  413e42:	and    DWORD PTR ds:0x73215884,ebx
  413e48:	int    0xfd
  413e4a:	xor    eax,0x54f7020c
  413e4f:	out    0x99,eax
  413e51:	inc    ebx
  413e52:	dec    edi
  413e53:	stos   DWORD PTR es:[edi],eax
  413e54:	aaa    
  413e55:	xor    BYTE PTR [edi+0x39a9838],al
  413e5b:	mov    ecx,0xf80e8767
  413e60:	inc    eax
  413e61:	or     bh,ch
  413e63:	pop    edi
  413e64:	out    0x79,al
  413e66:	repz mov bh,0x7c
  413e69:	dec    esi
  413e6a:	adc    BYTE PTR [esi-0x3d66b59],cl
  413e70:	out    dx,al
  413e71:	arpl   WORD PTR [eax],ax
  413e73:	add    al,0xed
  413e75:	pusha  
  413e76:	ficom  WORD PTR cs:[edx+0x73]
  413e7a:	push   ds
  413e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e7c:	push   ss
  413e7d:	sub    eax,0x915e2bf8
  413e82:	retf   
  413e83:	dec    ecx
  413e84:	push   es
  413e85:	xchg   ch,cl
  413e87:	std    
  413e88:	lahf   
  413e89:	fild   WORD PTR [esi-0x19]
  413e8c:	mov    al,ds:0xfb5866ab
  413e91:	shl    DWORD PTR [ebp-0x14600e42],cl
  413e97:	(bad)  
  413e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e99:	ret    
  413e9a:	and    DWORD PTR [eax+0x16],esi
  413e9d:	mov    DWORD PTR [ecx+0x4a],esp
  413ea0:	dec    ebp
  413ea1:	jp     0x413efc
  413ea3:	lahf   
  413ea4:	test   DWORD PTR [ebx+eiz*1+0x75],0xe28a1a3d
  413eac:	add    ebp,DWORD PTR [edi]
  413eae:	add    eax,0xf196c11d
  413eb3:	or     ecx,DWORD PTR [esp+esi*2-0x305a2b2c]
  413eba:	mov    ch,0xfc
  413ebc:	cmp    BYTE PTR [ecx-0x9],al
  413ebf:	jno    0x413e47
  413ec1:	stos   DWORD PTR es:[edi],eax
  413ec2:	rcl    DWORD PTR [edi],1
  413ec4:	inc    edx
  413ec5:	cmp    ecx,DWORD PTR [eax-0x20]
  413ec8:	fild   WORD PTR ds:0xf1d7b9bb
  413ece:	pop    ss
  413ecf:	or     ecx,DWORD PTR [ebp+esi*1-0x18378056]
  413ed6:	sbb    eax,0x3fd94d31
  413edb:	loope  0x413f27
  413edd:	sub    DWORD PTR [esp+edi*4],0xffffffb9
  413ee1:	(bad)  
  413ee3:	cmp    eax,0xefd1d979
  413ee8:	imul   ebx,DWORD PTR [ebx],0xffffffb1
  413eeb:	pop    esi
  413eec:	mov    ds:0xed831a63,eax
  413ef1:	icebp  
  413ef2:	add    al,0x2a
  413ef4:	inc    edx
  413ef5:	or     DWORD PTR [edx-0x245fc3a5],ecx
  413efb:	sub    eax,0xeb7f147a
  413f00:	popa   
  413f01:	dec    ebx
  413f02:	sbb    eax,0x3ec9da8c
  413f07:	(bad)  
  413f08:	mov    cl,0x2d
  413f0a:	ror    al,cl
  413f0c:	xor    BYTE PTR [eax+0x69a2f683],dh
  413f12:	into   
  413f13:	mov    dl,0xf
  413f15:	icebp  
  413f16:	xchg   ebx,eax
  413f17:	test   eax,0x6b2edda2
  413f1c:	je     0x413f4c
  413f1e:	out    0xbd,eax
  413f20:	and    dh,BYTE PTR [edi+ebx*1+0x3a]
  413f24:	and    eax,0x33591e5a
  413f29:	add    ah,bh
  413f2b:	mov    ch,0x26
  413f2d:	mov    ds:0x4d1b00b2,eax
  413f32:	sub    cl,ah
  413f34:	push   edx
  413f35:	inc    ebx
  413f36:	pop    esp
  413f37:	int    0xb0
  413f39:	push   0xe2d17674
  413f3e:	mov    dl,0x8a
  413f40:	ds push cs
  413f42:	mov    ds:0xed90eadf,al
  413f47:	mov    cl,0xb2
  413f49:	cmp    DWORD PTR [edx],ebp
  413f4b:	mov    al,0xcd
  413f4d:	(bad)
  413f50:	xchg   ecx,edi
  413f52:	mov    ecx,0x350f9cb8
  413f57:	or     ch,BYTE PTR [ecx+edi*4-0x7e]
  413f5b:	dec    edx
  413f5c:	bound  esi,QWORD PTR [esi+0x69]
  413f5f:	test   DWORD PTR [edi-0x63d4e93b],0xa81fd077
  413f69:	gs popf 
  413f6b:	dec    ebp
  413f6c:	je     0x413f8a
  413f6e:	lods   eax,DWORD PTR ds:[esi]
  413f6f:	rcr    BYTE PTR [ecx],cl
  413f71:	jae    0x413f7a
  413f73:	test   ebp,eax
  413f75:	push   ds
  413f76:	imul   esp,DWORD PTR [ebx+ebp*8],0xffffffb4
  413f7a:	jb     0x413f2a
  413f7c:	xor    ebx,esp
  413f7e:	xor    eax,0x6b49a1bf
  413f83:	push   ds
  413f84:	adc    esi,ebx
  413f86:	mov    edi,0x7737a175
  413f8b:	add    al,0xb
  413f8d:	(bad)  
  413f8e:	retf   
  413f8f:	pop    esp
  413f90:	mov    dh,0x51
  413f92:	add    al,ch
  413f94:	cmp    DWORD PTR [edi-0x15],eax
  413f97:	div    DWORD PTR [edi-0x283b0680]
  413f9d:	in     eax,0x7c
  413f9f:	dec    edx
  413fa0:	iret   
  413fa1:	cmp    DWORD PTR [edx+0x37],ebp
  413fa4:	pop    ebp
  413fa5:	mov    ah,0xb9
  413fa7:	sub    esp,DWORD PTR ds:[esi+esi*1-0x4cf54b93]
  413faf:	push   edx
  413fb0:	in     al,0x6f
  413fb2:	and    ecx,edi
  413fb4:	or     DWORD PTR [ecx-0x24c38809],ebp
  413fba:	(bad)  
  413fbb:	xchg   ebx,eax
  413fbc:	int    0x87
  413fbe:	lods   al,BYTE PTR ds:[esi]
  413fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc0:	cdq    
  413fc1:	cmp    cl,BYTE PTR [edx]
  413fc3:	jnp    0x414027
  413fc5:	lds    eax,FWORD PTR [edi+eax*4]
  413fc8:	cmp    al,0xad
  413fca:	sbb    bl,BYTE PTR [ebp-0x4e]
  413fcd:	call   0x3fdd:0x46ec1ea8
  413fd4:	nop
  413fd5:	shr    DWORD PTR [eax-0x48b305f6],cl
  413fdb:	pushf  
  413fdc:	icebp  
  413fdd:	das    
  413fde:	retf   
  413fdf:	lock pop ds
  413fe1:	fsubr  st,st(0)
  413fe3:	rcr    DWORD PTR [ecx+0x46f872cc],0x7
  413fea:	popa   
  413feb:	lds    ecx,FWORD PTR [esi-0x60]
  413fee:	leave  
  413fef:	jb     0x413f8c
  413ff1:	clc    
  413ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ff3:	fst    QWORD PTR [ecx-0x6]
  413ff6:	xchg   ecx,eax
  413ff7:	imul   edi,DWORD PTR [edi],0x1f9e1838
  413ffd:	nop
  413ffe:	rcl    cl,cl
  414000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414001:	leave  
  414002:	adc    dh,BYTE PTR [edi+0x40e6e378]
  414008:	aam    0x88
  41400a:	mov    al,ds:0xe0743e4e
  41400f:	int    0xa4
  414011:	sub    BYTE PTR [eax+edi*2],ch
  414014:	or     eax,DWORD PTR [ecx-0x7b]
  414017:	and    ch,ch
  414019:	add    eax,0x22fa7c1f
  41401e:	jle    0x41400c
  414020:	jb     0x413fa2
  414022:	or     DWORD PTR [ecx],esi
  414024:	repz sub cl,BYTE PTR [ebp-0x5da683d7]
  41402b:	in     al,0x61
  41402d:	add    esp,DWORD PTR ds:0xd62edeea
  414033:	sar    BYTE PTR [ecx+0x49],0x2b
  414037:	jne    0x413fce
  414039:	xlat   BYTE PTR ds:[ebx]
  41403a:	and    edi,DWORD PTR [esi-0x59]
  41403d:	inc    esi
  41403e:	pop    edx
  41403f:	xor    al,0x74
  414041:	fcom   QWORD PTR [eax-0x15f06406]
  414047:	mov    cl,0x4e
  414049:	adc    WORD PTR [ebx],0x61
  41404d:	gs out 0x83,eax
  414050:	fs ret 
  414052:	dec    ecx
  414053:	xor    cl,BYTE PTR [esi+0x3c226e67]
  414059:	adc    al,0xa
  41405b:	fs xchg esi,eax
  41405d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41405e:	(bad)  
  414060:	pop    edi
  414061:	std    
  414062:	or     ecx,DWORD PTR [ebp-0x21]
  414065:	gs pusha 
  414067:	daa    
  414068:	jecxz  0x414064
  41406a:	or     esp,DWORD PTR [ecx+eiz*4-0x26]
  41406e:	jl     0x41407e
  414070:	sbb    DWORD PTR [edx-0x4e1f48c3],edi
  414076:	dec    ebx
  414077:	pop    eax
  414078:	sbb    esp,DWORD PTR [ebp+0x6af2ceff]
  41407e:	xchg   dh,ah
  414080:	xlat   BYTE PTR ds:[ebx]
  414081:	add    eax,0x3542529a
  414086:	push   ebx
  414087:	int    0x35
  414089:	dec    eax
  41408a:	int    0x52
  41408c:	mov    dh,0x54
  41408e:	push   eax
  41408f:	jne    0x4140de
  414091:	xchg   edi,eax
  414092:	sbb    eax,0x199ed92c
  414098:	hlt    
  414099:	ja     0x4140e8
  41409b:	xor    al,0x6a
  41409d:	jle    0x4140f6
  41409f:	jnp    0x4140e3
  4140a1:	sub    al,0x1d
  4140a3:	adc    edi,DWORD PTR [ebx-0x14850747]
  4140a9:	ret    0xfa27
  4140ac:	call   0xeec2b6
  4140b1:	sub    BYTE PTR [edx],bh
  4140b3:	sar    DWORD PTR [ecx-0x1107d403],0x4c
  4140ba:	call   0xb4d15817
  4140bf:	inc    esp
  4140c0:	clc    
  4140c1:	inc    edx
  4140c2:	mov    al,ds:0xabc1447c
  4140c7:	mov    dl,0xa4
  4140c9:	mov    bl,0x9e
  4140cb:	sbb    bl,BYTE PTR [edi-0x2b]
  4140ce:	lods   eax,DWORD PTR ds:[esi]
  4140cf:	fwait
  4140d0:	dec    eax
  4140d1:	mov    edi,0xab97d5c6
  4140d6:	iret   
  4140d7:	fmul   st(0),st
  4140d9:	xchg   ebp,eax
  4140da:	ss cmp cl,dl
  4140dd:	pop    ebp
  4140de:	mov    bh,0x6
  4140e0:	push   cs
  4140e1:	pop    esp
  4140e2:	sbb    bl,bl
  4140e4:	out    dx,eax
  4140e5:	pushf  
  4140e6:	outs   dx,BYTE PTR ds:[esi]
  4140e7:	mov    edx,0x318969a2
  4140ec:	pop    ecx
  4140ed:	fimul  DWORD PTR [esi+0x48c0f36a]
  4140f3:	add    eax,0x9dbf7ad9
  4140f8:	call   0xa8d1:0x2327f90b
  4140ff:	dec    esp
  414100:	jmp    0xb82825c9
  414105:	inc    ebp
  414106:	arpl   WORD PTR ds:0x94c1297b,cx
  41410c:	or     al,BYTE PTR [ebx-0x40cfff20]
  414112:	ja     0x4140a9
  414114:	(bad)  
  414116:	ret    0xfe91
  414119:	push   0x37
  41411b:	imul   ebx,DWORD PTR [ebx+ebx*2+0x54],0x4
  414120:	fbstp  TBYTE PTR [esi]
  414122:	cmp    ebp,edx
  414124:	pop    edx
  414125:	jb     0x4140d5
  414127:	hlt    
  414128:	add    esp,ebx
  41412a:	mov    ds:0x446e307f,eax
  41412f:	(bad)  
  414130:	cli    
  414131:	clc    
  414132:	or     DWORD PTR [ebx+0x7c],ebx
  414135:	dec    edx
  414136:	sub    eax,0xf70ed684
  41413b:	mov    DWORD PTR [eax+0x6e],esi
  41413e:	mov    esi,0xcfff3f70
  414143:	push   edx
  414144:	sub    eax,DWORD PTR [ebx-0x7f1cea9a]
  41414a:	js     0x41416d
  41414c:	add    BYTE PTR [ebx-0x63c14885],ah
  414152:	jge    0x414197
  414154:	cmp    BYTE PTR [edi],ah
  414156:	dec    edi
  414157:	and    DWORD PTR [edx],0xfffffffd
  41415a:	add    DWORD PTR [edx],0x66444ce6
  414160:	test   eax,0xd3b5fb76
  414165:	call   0x17a5a509
  41416a:	int3   
  41416b:	loope  0x414192
  41416d:	lods   eax,DWORD PTR ds:[esi]
  41416e:	fs loope 0x41416d
  414171:	ins    BYTE PTR es:[edi],dx
  414172:	xor    eax,0xe0b9dc27
  414177:	(bad)  [eax]
  414179:	test   al,0xbf
  41417b:	push   0xffffffc1
  41417d:	add    DWORD PTR [ecx+ebx*1-0x1],ebp
  414181:	jbe    0x4141c7
  414183:	push   esi
  414184:	das    
  414185:	xchg   ebx,eax
  414186:	cmp    DWORD PTR [edx],eax
  414188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414189:	xor    ch,dl
  41418b:	sbb    dl,BYTE PTR [ecx-0x2dccc6e4]
  414191:	or     eax,edx
  414193:	mov    edx,DWORD PTR [ebp-0x34]
  414196:	add    eax,DWORD PTR ds:0x422298
  41419c:	shrd   ecx,edx,0x2
  4141a0:	xor    ecx,edi
  4141a2:	shr    edx,0x2
  4141a5:	mov    edx,DWORD PTR [ebp-0x38]
  4141a8:	mov    edi,DWORD PTR [ebp-0x34]
  4141ab:	xor    edi,edi
  4141ad:	jmp    0x414737
  4141b2:	jb     0x414219
  4141b4:	(bad)  
  4141b5:	jecxz  0x414157
  4141b7:	sub    BYTE PTR [edx],dl
  4141b9:	push   esp
  4141ba:	xchg   edx,eax
  4141bb:	das    
  4141bc:	mov    esp,0xb6c5b5ae
  4141c1:	scas   al,BYTE PTR es:[edi]
  4141c2:	inc    eax
  4141c3:	lock or al,0x16
  4141c6:	cmp    eax,0xc1161604
  4141cb:	cli    
  4141cc:	ret    
  4141cd:	sub    eax,0xd7917342
  4141d2:	jecxz  0x4141cb
  4141d4:	push   ecx
  4141d5:	xor    cl,BYTE PTR cs:[ecx+0x7d33c72b]
  4141dc:	xchg   DWORD PTR [esi+0x3b],eax
  4141df:	pop    eax
  4141e0:	shl    DWORD PTR ds:0x706d3ddf,1
  4141e6:	mov    eax,0x29812540
  4141eb:	(bad)  
  4141ec:	mov    eax,0xb224113d
  4141f1:	retf   0x7ee9
  4141f4:	repz loop 0x414204
  4141f7:	xor    dl,al
  4141f9:	call   0xf09b:0x9a4af305
  414200:	cwde   
  414201:	and    BYTE PTR [edx],0x31
  414204:	and    ebp,DWORD PTR [ebp+0x71d024fa]
  41420a:	out    0x2b,al
  41420c:	imul   esp,edi,0x5b3e0d43
  414212:	jae    0x4141d3
  414214:	sahf   
  414215:	in     al,0x46
  414217:	fwait
  414218:	cmp    bh,BYTE PTR ds:0xf8caaa5e
  41421e:	and    dl,cl
  414220:	or     BYTE PTR [ecx*8+0x7c881cca],bl
  414227:	(bad)  
  414228:	mov    ecx,0xef762ea0
  41422d:	fisub  DWORD PTR [ecx-0x7e]
  414230:	inc    ebp
  414231:	mov    ch,0xb0
  414233:	inc    esp
  414234:	cmc    
  414235:	das    
  414236:	stos   BYTE PTR es:[edi],al
  414237:	fimul  WORD PTR [ebx]
  414239:	aam    0x26
  41423b:	popa   
  41423c:	mov    ch,0x7f
  41423e:	(bad)  
  41423f:	jle    0x414293
  414241:	inc    ecx
  414242:	mov    al,ds:0xdd9875fb
  414247:	jb     0x4142bd
  414249:	scas   eax,DWORD PTR es:[edi]
  41424a:	add    edx,DWORD PTR [ebx+0x26]
  41424d:	or     esi,DWORD PTR [eax]
  41424f:	push   0x2e
  414251:	add    eax,0xb11e26a8
  414256:	jbe    0x41422f
  414258:	das    
  414259:	shr    BYTE PTR [ecx-0x6e237c9b],0xa9
  414260:	mov    cl,0x64
  414262:	pop    ds
  414263:	shl    edx,cl
  414265:	mov    es,esi
  414267:	(bad)  
  414268:	jg     0x414295
  41426a:	(bad)  
  41426c:	mov    ebx,0x14efc2
  414271:	jmp    0x87a5eba7
  414276:	loopne 0x4142c2
  414278:	icebp  
  414279:	cdq    
  41427a:	sbb    bl,ch
  41427c:	sub    DWORD PTR [edx],ecx
  41427e:	adc    al,0x28
  414280:	sub    al,0xd8
  414282:	mov    esp,0x95fa6c3
  414287:	mov    DWORD PTR [edi+0xd],ebx
  41428a:	popa   
  41428b:	cmp    al,0x1d
  41428d:	or     DWORD PTR [eax],0x555c7d44
  414293:	mov    ecx,0x7271d135
  414298:	pop    ebx
  414299:	in     eax,dx
  41429a:	add    dl,dh
  41429c:	push   ecx
  41429d:	frstor [ebp+0x7d65af3b]
  4142a3:	add    al,0xce
  4142a5:	mov    al,0xf6
  4142a7:	clc    
  4142a8:	cmp    al,0xb6
  4142aa:	outs   dx,BYTE PTR ds:[esi]
  4142ab:	push   ebp
  4142ac:	sbb    eax,0x3f1b6f2c
  4142b1:	jb     0x4142d2
  4142b3:	adc    BYTE PTR [ebp-0x16],al
  4142b6:	adc    bh,BYTE PTR [ebx-0x4927ec3d]
  4142bc:	or     al,cl
  4142be:	loope  0x414296
  4142c0:	xchg   esi,eax
  4142c1:	lds    eax,FWORD PTR [edi+0x39b314af]
  4142c7:	cmp    ebp,ecx
  4142c9:	std    
  4142ca:	fwait
  4142cb:	jnp    0x41427f
  4142cd:	push   esp
  4142ce:	pop    ebx
  4142cf:	in     al,dx
  4142d0:	push   0x737f175a
  4142d5:	add    DWORD PTR [edx+ecx*4-0x49],ecx
  4142d9:	(bad)  
  4142da:	mov    ds:0x9f02fdf7,eax
  4142df:	sub    al,0xf8
  4142e1:	je     0x41432b
  4142e3:	jo     0x4142c7
  4142e5:	aad    0xc3
  4142e7:	dec    esp
  4142e8:	mov    al,ds:0x79c5a5c9
  4142ed:	mov    dl,0x97
  4142ef:	ins    BYTE PTR es:[edi],dx
  4142f0:	dec    ebx
  4142f1:	dec    ax
  4142f3:	dec    edx
  4142f4:	retf   
  4142f5:	and    eax,0x1b5aec90
  4142fa:	aam    0xb
  4142fc:	out    dx,al
  4142fd:	enter  0x84e9,0x19
  414301:	lds    edx,FWORD PTR [ebx-0x21]
  414304:	lock xor ebx,ecx
  414307:	sub    DWORD PTR [eax],edi
  414309:	rcr    BYTE PTR [esi],cl
  41430b:	jnp    0x414295
  41430d:	stos   DWORD PTR es:[edi],eax
  41430e:	jbe    0x414330
  414310:	pop    ds
  414311:	add    BYTE PTR [esi-0xa],0x9c
  414315:	shl    esi,0x95
  414318:	fsub   QWORD PTR [ebx+edx*2-0x4f2f276f]
  41431f:	sub    DWORD PTR [ebp+0x62],esp
  414322:	ror    DWORD PTR [ebx+0x4b],cl
  414325:	jg     0x414348
  414327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414328:	dec    ecx
  414329:	popf   
  41432a:	je     0x41438e
  41432c:	push   edx
  41432d:	sbb    dh,0x5e
  414330:	rol    DWORD PTR [ebp+edx*4-0x87c6538],cl
  414337:	fstp   QWORD PTR [edx+0x51]
  41433a:	adc    eax,0xb180bdb8
  41433f:	pop    esi
  414340:	popa   
  414341:	fisttp DWORD PTR [ebx+0x2b3161c]
  414347:	arpl   WORD PTR [ebx+0x44],di
  41434a:	xor    DWORD PTR [edx],0xffffffb0
  41434d:	addr16 in eax,dx
  41434f:	mov    edx,0x63936926
  414354:	retf   0xe4ed
  414357:	js     0x414390
  414359:	bound  ecx,QWORD PTR [ebx+0x7658de3a]
  41435f:	mov    ah,0x78
  414361:	aad    0x48
  414363:	push   edx
  414364:	fist   WORD PTR [edx+0x407fa20e]
  41436a:	std    
  41436b:	mov    dl,0x20
  41436d:	jne    0x4142f0
  41436f:	jmp    0x414328
  414371:	mov    BYTE PTR [edx],bh
  414373:	sti    
  414374:	push   ds
  414375:	jl     0x414330
  414377:	cmp    DWORD PTR [ebx],0xb792c185
  41437d:	cld    
  41437e:	mov    ?,esi
  414380:	fwait
  414381:	sub    al,0x8e
  414383:	pusha  
  414384:	xor    ah,al
  414386:	pop    esi
  414387:	push   edx
  414388:	push   edx
  414389:	mov    eax,ds:0x2ff24ff0
  41438e:	out    0xad,al
  414390:	xchg   esi,eax
  414391:	sub    DWORD PTR [edi-0x273613c8],eax
  414397:	iret   
  414398:	mov    edx,0x41cc157c
  41439d:	jns    0x4143ef
  41439f:	and    BYTE PTR ds:0xb2a14cb0,0x50
  4143a6:	and    BYTE PTR [edx+eiz*8-0x3d],cl
  4143aa:	test   dh,ah
  4143ac:	mov    WORD PTR [esi+0x165ab34],gs
  4143b2:	jp     0x4143c6
  4143b4:	icebp  
  4143b5:	mov    cl,0x23
  4143b7:	stos   DWORD PTR es:[edi],eax
  4143b8:	inc    edx
  4143b9:	dec    BYTE PTR [edx+edi*1]
  4143bc:	jae    0x4143a4
  4143be:	and    ch,BYTE PTR [esi-0x6b767411]
  4143c4:	push   ecx
  4143c5:	sub    BYTE PTR [ecx-0x26],0x3b
  4143c9:	xlat   BYTE PTR ds:[ebx]
  4143ca:	por    mm5,QWORD PTR [eax+edx*4]
  4143ce:	fisttp QWORD PTR [ecx+0x30]
  4143d1:	shl    BYTE PTR [esi*8+0x583f1825],0x8f
  4143d9:	cmp    DWORD PTR [edx-0x2e861b62],esp
  4143df:	adc    eax,esp
  4143e1:	adc    al,0x13
  4143e3:	rcl    BYTE PTR [esi],0x20
  4143e6:	pop    es
  4143e7:	outs   dx,BYTE PTR ds:[esi]
  4143e8:	into   
  4143e9:	and    al,0xb9
  4143eb:	mov    ebx,0x5cf07b8
  4143f0:	je     0x41439d
  4143f2:	sub    DWORD PTR ds:0x3c760a0,edi
  4143f8:	retf   
  4143f9:	popf   
  4143fa:	stos   BYTE PTR es:[edi],al
  4143fb:	sbb    eax,0x24f88a68
  414400:	and    al,0x93
  414402:	ds xchg ebx,eax
  414404:	loop   0x4143c4
  414406:	dec    ecx
  414407:	mov    al,0xa2
  414409:	cdq    
  41440a:	adc    esi,edi
  41440c:	imul   BYTE PTR [esi-0x74]
  41440f:	push   eax
  414410:	dec    edx
  414411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414412:	fwait
  414413:	sbb    DWORD PTR [eax],0x11
  414416:	inc    ebx
  414417:	aam    0x7b
  414419:	jmp    0x1e020a4d
  41441e:	stos   BYTE PTR es:[edi],al
  41441f:	pop    ds
  414420:	pusha  
  414421:	mov    bl,0x1c
  414423:	mov    ds:0x829de6f6,eax
  414428:	loope  0x414436
  41442a:	mov    bh,0x22
  41442c:	push   ds
  41442d:	std    
  41442e:	push   edi
  41442f:	mov    dh,0xae
  414431:	leave  
  414432:	iret   
  414433:	lahf   
  414434:	dec    edx
  414435:	shr    BYTE PTR [edx-0x7b160010],cl
  41443b:	bnd ja 0x414426
  41443e:	bound  edx,QWORD PTR [edx-0x20]
  414441:	mov    al,ds:0x19479eb4
  414446:	rcr    BYTE PTR [esi-0x28],0x76
  41444a:	dec    edi
  41444b:	sub    ch,ch
  41444d:	jg     0x4143cf
  41444f:	cmc    
  414450:	rcl    BYTE PTR [ebx-0x5a],0x6f
  414454:	pop    es
  414455:	jp     0x4144cf
  414457:	sahf   
  414458:	popf   
  414459:	cmp    esp,DWORD PTR [edx]
  41445b:	push   0x81a4fd38
  414460:	cwde   
  414461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414462:	rdpmc  
  414464:	(bad)  
  414465:	loopne 0x414436
  414467:	mov    edi,0x6608c6ff
  41446c:	pop    DWORD PTR [edi+0x261cbd14]
  414472:	or     al,0xa2
  414474:	lahf   
  414475:	and    BYTE PTR [ecx],ah
  414477:	and    esi,0x47062e64
  41447d:	mov    al,BYTE PTR [edx-0x7c]
  414480:	pushf  
  414481:	mov    bh,0x77
  414483:	jmp    0x414406
  414485:	in     eax,dx
  414486:	(bad)  
  414487:	out    dx,al
  414488:	xchg   DWORD PTR [eax-0x10128938],edx
  41448e:	std    
  41448f:	and    eax,0x69d7c6c2
  414494:	and    BYTE PTR [edx+0x2a38c536],bl
  41449a:	mov    ah,0x19
  41449c:	enter  0xdb26,0x9e
  4144a0:	(bad)  
  4144a1:	xlat   BYTE PTR ds:[ebx]
  4144a2:	jge    0x41449a
  4144a4:	fstp   DWORD PTR [esi-0x13]
  4144a7:	xor    ebx,DWORD PTR [eax+ecx*1+0x5f7ad9db]
  4144ae:	pop    edi
  4144af:	mov    ds:0xd2d531d4,eax
  4144b4:	lea    eax,[esi+0x2f]
  4144b7:	bound  eax,QWORD PTR ds:0x64189499
  4144bd:	push   esi
  4144be:	aad    0xe
  4144c0:	pusha  
  4144c1:	(bad)  
  4144c2:	lahf   
  4144c3:	out    0x26,eax
  4144c5:	pop    esp
  4144c6:	cmp    ch,al
  4144c8:	aas    
  4144c9:	mov    dh,0x6c
  4144cb:	push   edi
  4144cc:	xchg   esi,eax
  4144cd:	adc    DWORD PTR [eax],ecx
  4144cf:	push   es
  4144d0:	pop    es
  4144d1:	pop    ebp
  4144d2:	add    BYTE PTR [eax-0x18],ch
  4144d5:	sti    
  4144d6:	mov    edi,0xe2d8c3e2
  4144db:	cmp    DWORD PTR [ebp+esi*8+0x13cec7bc],eax
  4144e2:	mul    BYTE PTR [ebx+0x39]
  4144e5:	jg     0x414527
  4144e7:	add    al,0xb
  4144e9:	sahf   
  4144ea:	inc    esi
  4144eb:	add    DWORD PTR [ebx],0x47ff5f2e
  4144f1:	add    bl,BYTE PTR [eax-0x4e]
  4144f4:	arpl   WORD PTR [eax-0x5a66de79],ax
  4144fa:	jmp    0x6e2b:0x7a890315
  414501:	mov    esi,0x4ce6cb65
  414506:	les    esp,FWORD PTR [ecx]
  414508:	add    esi,DWORD PTR [edx+0x30]
  41450b:	cs (bad) 
  41450e:	loopne 0x41451d
  414510:	xor    al,0xef
  414512:	adc    DWORD PTR [ebp-0x554a5e75],0x2fee587
  41451c:	inc    eax
  41451d:	jb     0x4144d1
  41451f:	int3   
  414520:	inc    ecx
  414521:	sbb    al,0xc
  414523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414524:	xor    DWORD PTR [ebx+0x2c],0xffffffb0
  414528:	mov    edx,0xf549e866
  41452d:	dec    esp
  41452e:	mov    edi,0x44760955
  414533:	push   edi
  414534:	(bad)  
  414535:	cmc    
  414536:	adc    DWORD PTR [esi-0x2cfe5cbe],ebx
  41453c:	mov    esi,es
  41453e:	sub    esi,esp
  414540:	or     eax,DWORD PTR [eax]
  414542:	mov    eax,ds:0xf7d2f0e6
  414547:	add    ebx,edx
  414549:	push   ds
  41454a:	mov    edx,0x397c2054
  41454f:	and    BYTE PTR [eax+0x3f],al
  414552:	pop    ecx
  414553:	xchg   ebp,eax
  414554:	dec    esp
  414555:	cmp    BYTE PTR [esi+ebp*2+0x11b88e39],dl
  41455c:	imul   ebx,DWORD PTR [eax+0x2bdcfe10],0x68
  414563:	sub    DWORD PTR [edx+0x2d29d1f1],ebx
  414569:	imul   esp,ebx,0x3491489e
  41456f:	cmp    BYTE PTR [ebx+0x3e],cl
  414572:	cmp    edx,DWORD PTR [ebp+0x6976e8b]
  414578:	aam    0xb1
  41457a:	jp     0x414508
  41457c:	or     DWORD PTR [eax-0x76],edx
  41457f:	push   edx
  414580:	add    BYTE PTR [ebx-0x274919d5],ah
  414586:	shl    BYTE PTR [ebx+0x60],0x8b
  41458a:	fdiv   QWORD PTR [ecx-0x74]
  41458d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458e:	or     eax,0x146363d5
  414593:	sbb    BYTE PTR [ebx],ah
  414595:	mov    dh,0x60
  414597:	jne    0x41453e
  414599:	sbb    BYTE PTR [edx-0x60],cl
  41459c:	sub    cl,dh
  41459e:	xchg   ebp,eax
  41459f:	aad    0xf4
  4145a1:	into   
  4145a2:	cmp    DWORD PTR [ebx-0x4e],edx
  4145a5:	retf   
  4145a6:	xchg   ebx,eax
  4145a7:	jecxz  0x414568
  4145a9:	mov    ebp,DWORD PTR [edi-0x2ee89271]
  4145af:	fiadd  WORD PTR [eax-0x455844bd]
  4145b5:	repnz pop esp
  4145b7:	(bad)  
  4145b8:	push   esp
  4145b9:	pavgb  mm3,QWORD PTR [ebx+0x6a]
  4145bd:	dec    esi
  4145be:	mov    ch,0xeb
  4145c0:	cmp    BYTE PTR [ecx-0x6a76d742],bl
  4145c6:	sahf   
  4145c7:	xlat   BYTE PTR ds:[ebx]
  4145c8:	xor    BYTE PTR [eax+ebp*8-0x41f32bd5],dh
  4145cf:	(bad)  [ecx]
  4145d1:	jle    0x414634
  4145d3:	xchg   ecx,eax
  4145d4:	inc    edi
  4145d5:	jmp    0x414590
  4145d7:	les    edi,FWORD PTR [ebx]
  4145d9:	repnz bnd js 0x414561
  4145dd:	jns    0x414593
  4145df:	mov    eax,ds:0x18b40502
  4145e4:	and    al,0xfb
  4145e6:	inc    ebx
  4145e7:	outs   dx,BYTE PTR ds:[esi]
  4145e8:	mov    ah,0xfe
  4145ea:	xchg   ebp,eax
  4145eb:	xor    BYTE PTR [ecx],dh
  4145ed:	shl    BYTE PTR [eax+0x776b8312],1
  4145f3:	adc    ebx,ecx
  4145f5:	pop    ds
  4145f6:	push   es
  4145f7:	or     edi,esi
  4145f9:	test   ch,bh
  4145fb:	shl    ecx,1
  4145fd:	or     DWORD PTR [ebx+0x6a],0xf999e9e5
  414604:	push   cs
  414605:	or     cl,BYTE PTR [eiz*8-0x27e050d3]
  41460c:	lahf   
  41460d:	xchg   esi,eax
  41460e:	add    esi,edx
  414610:	repnz sub eax,0xa5fefda6
  414616:	mov    ebp,0xd97c3876
  41461b:	test   DWORD PTR [edx+0x3fe627cf],edx
  414621:	cs scas al,BYTE PTR es:[edi]
  414623:	js     0x414672
  414625:	stos   BYTE PTR es:[edi],al
  414626:	pop    ebp
  414627:	mov    fs,WORD PTR [ebp-0x5]
  41462a:	and    BYTE PTR [edi+eiz*2],0xfc
  41462e:	(bad)  
  41462f:	lods   al,BYTE PTR ds:[esi]
  414630:	xchg   ebp,eax
  414631:	adc    ebp,DWORD PTR [edx-0xa69ec4a]
  414637:	mov    edi,0xc752e5fb
  41463c:	cmp    al,0x86
  41463e:	(bad)  
  41463f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414640:	or     BYTE PTR [ecx+0x5a8248d9],bl
  414646:	pop    ebp
  414647:	sbb    al,0x6c
  414649:	js     0x4145d9
  41464b:	pusha  
  41464c:	pop    es
  41464d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41464e:	sbb    BYTE PTR [esi],cl
  414650:	lds    esi,FWORD PTR [eax]
  414652:	mov    edx,0xeae502e4
  414657:	or     ebp,esp
  414659:	and    al,0xc
  41465b:	or     eax,0x222dbbf3
  414660:	ret    0xd4c6
  414663:	sub    esi,ebp
  414665:	jle    0x414649
  414667:	pushf  
  414668:	retf   0x221b
  41466b:	por    mm0,QWORD PTR [edi+0x15c62b00]
  414672:	dec    edi
  414673:	ins    DWORD PTR es:[edi],dx
  414674:	sub    bh,BYTE PTR [edi-0x92922d9]
  41467a:	(bad)  [esi]
  41467c:	rcr    BYTE PTR [edx-0x76],cl
  41467f:	fisttp WORD PTR [ebp-0x1d]
  414682:	sub    DWORD PTR [ecx-0x65339eb2],ebx
  414688:	inc    esi
  414689:	push   ss
  41468a:	or     dl,BYTE PTR [edx-0x4e1a0938]
  414690:	call   0xec6f:0x3cb81cbc
  414697:	jnp    0x414661
  414699:	adc    esi,ebp
  41469b:	adc    eax,0x8c624859
  4146a0:	enter  0x907b,0x68
  4146a4:	mov    ecx,0x2301c5c7
  4146a9:	sub    eax,0xee306587
  4146ae:	xchg   ebp,eax
  4146af:	inc    ecx
  4146b0:	or     eax,0xd8324449
  4146b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b6:	rcl    BYTE PTR [edi-0x2],0x46
  4146ba:	je     0x414659
  4146bc:	dec    edx
  4146bd:	call   0x917453da
  4146c2:	in     eax,dx
  4146c3:	scas   al,BYTE PTR es:[edi]
  4146c4:	push   edi
  4146c5:	(bad)  
  4146c6:	jecxz  0x4146b3
  4146c8:	ret    
  4146c9:	out    0xd0,eax
  4146cb:	jb     0x414657
  4146cd:	dec    esi
  4146ce:	xchg   ebx,eax
  4146cf:	mov    edi,0xb79e1d72
  4146d4:	arpl   WORD PTR [ecx],si
  4146d6:	inc    ebx
  4146d7:	jecxz  0x414733
  4146d9:	test   ch,bh
  4146db:	es sub eax,0x832f6b36
  4146e1:	and    eax,0xf06c9860
  4146e6:	aas    
  4146e7:	(bad)  
  4146e8:	rol    BYTE PTR [ebx+0x67],cl
  4146eb:	jns    0x4146aa
  4146ed:	js     0x4146cd
  4146ef:	jae    0x856096fa
  4146f5:	mov    bh,0x23
  4146f7:	cmp    al,0x3c
  4146f9:	test   al,0xff
  4146fb:	icebp  
  4146fc:	scas   al,BYTE PTR es:[edi]
  4146fd:	sub    BYTE PTR [edi-0x42],0xee
  414701:	in     eax,dx
  414702:	ret    
  414703:	dec    edx
  414704:	outs   dx,BYTE PTR ds:[esi]
  414705:	call   0xf14:0xa1109358
  41470c:	xlat   BYTE PTR ds:[ebx]
  41470d:	repz or ch,bh
  414710:	xchg   BYTE PTR [edi+0x4a3203a0],al
  414716:	or     edi,edi
  414718:	ss loope 0x41475e
  41471b:	(bad)  [ecx]
  41471d:	dec    esi
  41471e:	mov    edx,0x79043d50
  414723:	aad    0x18
  414725:	jns    0x414748
  414727:	xchg   ebp,eax
  414728:	jno    0x4146cf
  41472a:	cmp    ecx,DWORD PTR [edx-0x39e97837]
  414730:	and    ebx,DWORD PTR [ebp+0x429eb7e0]
  414736:	gs or  ecx,edi
  414739:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  41473d:	or     BYTE PTR [eax],cl
  41473f:	shl    edx,0x1e
  414742:	mov    edx,DWORD PTR [esi]
  414744:	mov    ecx,DWORD PTR [esi+0x4]
  414747:	jmp    0x414cd1
  41474c:	arpl   WORD PTR [edx-0x67eb5a1b],bx
  414752:	and    esp,DWORD PTR [eax]
  414754:	stos   DWORD PTR es:[edi],eax
  414755:	sub    eax,eax
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	sub    ebx,ebp
  41475a:	mov    ds:0xcdd6f72,al
  41475f:	push   ss
  414760:	cmp    eax,0x63161604
  414765:	and    BYTE PTR [ebx+0x8b07ddc],dl
  41476b:	xor    eax,0x9430b92e
  414770:	je     0x41477a
  414772:	sbb    BYTE PTR [esi-0x28],0xc2
  414776:	jbe    0x41475f
  414778:	adc    al,dh
  41477a:	push   es
  41477b:	sbb    esi,DWORD PTR [ebx]
  41477d:	or     al,0x83
  41477f:	jo     0x414796
  414781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414782:	xchg   esi,eax
  414783:	inc    esp
  414784:	pop    ebx
  414785:	std    
  414786:	lds    edx,FWORD PTR [ecx]
  414788:	push   ds
  414789:	cli    
  41478a:	sbb    BYTE PTR [edx],dh
  41478c:	cwde   
  41478d:	add    BYTE PTR [ebx+0x5d],0x65
  414791:	aas    
  414792:	data16 mov ds:0xc97b67c6,al
  414798:	ss pop ebp
  41479a:	xchg   ecx,eax
  41479b:	and    BYTE PTR [edi-0x60e01229],ch
  4147a1:	push   ecx
  4147a2:	push   es
  4147a3:	enter  0xea27,0x56
  4147a7:	mov    dl,bh
  4147a9:	fsub   st(2),st
  4147ab:	loopne 0x414746
  4147ad:	in     eax,dx
  4147ae:	arpl   WORD PTR [esi],dx
  4147b0:	bound  ebp,QWORD PTR [ebp-0xa]
  4147b3:	ret    0x7c3b
  4147b6:	bnd jo 0x4147a1
  4147b9:	add    ebp,DWORD PTR [eax]
  4147bb:	stos   BYTE PTR es:[edi],al
  4147bc:	adc    DWORD PTR [edx-0x57],ecx
  4147bf:	pop    ss
  4147c0:	pusha  
  4147c1:	jl     0x41478d
  4147c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c4:	(bad)  
  4147c5:	mov    eax,ds:0x348b9a6f
  4147ca:	shl    DWORD PTR [ebp+0x58a4f21],1
  4147d0:	cli    
  4147d1:	jns    0x414822
  4147d3:	outs   dx,DWORD PTR ds:[esi]
  4147d4:	sub    al,0x6f
  4147d6:	test   al,0xc8
  4147d8:	or     al,0x31
  4147da:	outs   dx,BYTE PTR ds:[esi]
  4147db:	pop    esp
  4147dc:	aad    0x89
  4147de:	into   
  4147df:	xchg   esi,eax
  4147e0:	aas    
  4147e1:	int3   
  4147e2:	je     0x4147e8
  4147e4:	push   0xffffffb9
  4147e6:	xchg   edx,eax
  4147e7:	dec    edi
  4147e8:	int    0xa7
  4147ea:	cmp    eax,0xba024cf6
  4147ef:	pop    edi
  4147f0:	in     al,dx
  4147f1:	dec    esp
  4147f2:	loopne 0x4147c7
  4147f4:	add    BYTE PTR [ebx-0x6a],bh
  4147f7:	stos   DWORD PTR es:[edi],eax
  4147f8:	retf   0x2a34
  4147fb:	sub    eax,0xa3022f45
  414800:	jmp    0x666d:0xef7bf45d
  414807:	and    al,0x46
  414809:	scas   al,BYTE PTR es:[edi]
  41480a:	pop    esp
  41480b:	jl     0x4147a7
  41480d:	sbb    cl,BYTE PTR [ebx-0x38]
  414810:	(bad)  
  414811:	jmp    0xc5cb:0xfcdc8279
  414818:	cmp    al,0x9f
  41481a:	div    BYTE PTR [ebx+0x11]
  41481d:	int    0xea
  41481f:	dec    ebp
  414820:	mov    eax,0x410f1ee9
  414825:	xor    eax,0xc0fb8dc2
  41482a:	jo     0x414898
  41482c:	in     al,dx
  41482d:	sub    BYTE PTR [edi],0x3f
  414830:	or     bl,bl
  414832:	dec    esp
  414833:	hlt    
  414834:	or     esi,DWORD PTR [esi+0x43417b34]
  41483a:	mov    ah,0x98
  41483c:	nop
  41483d:	push   ebp
  41483e:	daa    
  41483f:	inc    ebp
  414840:	sbb    al,al
  414842:	loop   0x41484a
  414844:	mov    ch,BYTE PTR [ecx-0xb]
  414847:	cmp    BYTE PTR [ecx],ch
  414849:	pop    esp
  41484a:	cmp    al,0x0
  41484c:	pop    esi
  41484d:	mov    eax,ds:0x1af6314a
  414852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414853:	mov    ch,0xee
  414855:	lock in eax,dx
  414857:	clc    
  414858:	pop    edx
  414859:	fsubr  st,st(1)
  41485b:	and    eax,0x5c6d242a
  414860:	inc    ebx
  414861:	dec    edx
  414862:	push   edx
  414863:	sbb    DWORD PTR [ebx+ebx*8],0xcd6a19b5
  41486a:	or     al,0xd9
  41486c:	enter  0xd51c,0xc3
  414870:	dec    ebp
  414871:	jmp    0x41480e
  414873:	retf   
  414874:	ds mov cl,0x94
  414877:	loop   0x4148bd
  414879:	inc    ebp
  41487a:	cdq    
  41487b:	idiv   BYTE PTR [ebp+0x747d0126]
  414881:	and    al,0x18
  414883:	mov    bh,BYTE PTR [ebx-0x75]
  414886:	push   ebx
  414887:	mov    dh,0x72
  414889:	pop    ebp
  41488a:	fistp  DWORD PTR [ebx-0x5f]
  41488d:	shl    DWORD PTR [edx-0x3],0x78
  414891:	test   ax,0x5bf9
  414895:	mov    WORD PTR [ecx],gs
  414897:	inc    ebx
  414898:	rcl    DWORD PTR [ecx-0x4dc4ec99],1
  41489e:	xchg   esp,eax
  41489f:	adc    edi,DWORD PTR [ecx+0x11]
  4148a2:	shl    ebp,cl
  4148a4:	cmp    eax,DWORD PTR [esi+ebp*8]
  4148a7:	(bad)  
  4148a8:	in     al,0x9e
  4148aa:	pop    ebx
  4148ab:	out    0x54,al
  4148ad:	iret   
  4148ae:	mov    ah,0x5c
  4148b0:	mov    bl,0xd9
  4148b2:	sbb    ch,ah
  4148b4:	mov    bl,0xca
  4148b6:	gs jle 0x4148e7
  4148b9:	xor    BYTE PTR [ecx+0xe0ea146],dh
  4148bf:	dec    ebp
  4148c0:	mov    esp,0xf11ece7a
  4148c5:	jmp    0x63e9:0xf291f2cb
  4148cc:	imul   BYTE PTR [eax+edx*1-0x4b7c5007]
  4148d3:	retf   0xdcb7
  4148d6:	push   ecx
  4148d7:	jno    0x41492b
  4148d9:	dec    dh
  4148db:	loopne 0x4148bd
  4148dd:	add    al,BYTE PTR [esi+0x5b937f7e]
  4148e3:	mov    ebx,0xed3e6dfe
  4148e8:	xor    al,0x3c
  4148ea:	adc    esi,esp
  4148ec:	loope  0x41496c
  4148ee:	int    0x20
  4148f0:	adc    bl,bh
  4148f2:	jge    0x41492e
  4148f4:	in     eax,dx
  4148f5:	lds    ebp,FWORD PTR [edi+0x6d5d6a6b]
  4148fb:	dec    ebp
  4148fc:	ret    
  4148fd:	sti    
  4148fe:	(bad)  
  4148ff:	jae    0x4148bf
  414901:	cli    
  414902:	jecxz  0x4148db
  414904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414905:	stos   DWORD PTR es:[edi],eax
  414906:	(bad)  
  414907:	push   0xffffffbf
  414909:	jl     0x4148ad
  41490b:	and    eax,0xe640163b
  414910:	arpl   WORD PTR [ebx+ebx*1+0xbe28952],bp
  414917:	cmp    edx,DWORD PTR [ecx+ebp*8-0x67]
  41491b:	cld    
  41491c:	ficomp DWORD PTR [esi-0x32f76bb]
  414922:	pop    esi
  414923:	ficom  DWORD PTR [eax-0x5]
  414926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414927:	push   ebx
  414928:	pop    edx
  414929:	inc    ebx
  41492a:	inc    ebx
  41492b:	mov    eax,ds:0xb2c0365
  414930:	xchg   esi,eax
  414931:	or     edi,DWORD PTR [ebx+esi*4+0x5c]
  414935:	inc    esp
  414936:	imul   edx,DWORD PTR [eax-0x2e4d540e],0xffffffd1
  41493d:	nop
  41493e:	fcomp  QWORD PTR [esi+0x55b343b1]
  414944:	jne    0x41491b
  414946:	loop   0x414986
  414948:	in     al,dx
  414949:	xor    ecx,edx
  41494b:	mov    dh,0x66
  41494d:	ficomp DWORD PTR [edx+0x11]
  414950:	sub    al,0x45
  414952:	(bad)  
  414954:	jns    0x4148d8
  414956:	retf   0x44a7
  414959:	mov    cl,0x79
  41495b:	stos   DWORD PTR es:[edi],eax
  41495c:	sub    ch,0x61
  41495f:	pushf  
  414960:	adc    ecx,DWORD PTR [edi]
  414962:	cmp    al,0x14
  414964:	loope  0x414918
  414966:	pop    esp
  414967:	aam    0xe8
  414969:	mov    edi,0x17001dfa
  41496e:	dec    ecx
  41496f:	sti    
  414970:	cmp    DWORD PTR [eax+0x4ba64315],0xffffffc3
  414977:	xchg   ebp,eax
  414978:	fsubr  QWORD PTR [edx+ebx*2+0x7c]
  41497c:	leave  
  41497d:	jmp    0x414916
  41497f:	adc    cl,BYTE PTR [edx+0x4937b304]
  414985:	movaps XMMWORD PTR [ecx+eiz*2-0x59d7ab80],xmm6
  41498d:	nop
  41498e:	xchg   ebp,eax
  41498f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414990:	stc    
  414991:	ret    
  414992:	sbb    ecx,ebx
  414994:	enter  0x8896,0xd2
  414998:	xor    edx,esi
  41499a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41499b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41499c:	add    ebx,ebp
  41499e:	test   dh,0xed
  4149a1:	xor    cl,dl
  4149a3:	pop    edx
  4149a4:	add    DWORD PTR ss:[edx],ebx
  4149a7:	int    0xc1
  4149a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149aa:	(bad)  
  4149ac:	mov    ecx,0x69a29073
  4149b1:	(bad)  
  4149b2:	fmul   st(1),st
  4149b4:	loop   0x414a2a
  4149b6:	cld    
  4149b7:	xor    bl,BYTE PTR [edx+ebx*1]
  4149ba:	inc    esi
  4149bb:	mov    dh,0xaf
  4149bd:	sti    
  4149be:	stos   BYTE PTR es:[edi],al
  4149bf:	int    0x96
  4149c1:	jmp    0x7103:0x361c84f4
  4149c8:	popf   
  4149c9:	mov    dl,0x23
  4149cb:	sbb    al,0xd7
  4149cd:	cli    
  4149ce:	lahf   
  4149cf:	add    dh,BYTE PTR [edi+0x5d262e1d]
  4149d5:	pop    ss
  4149d6:	inc    eax
  4149d7:	xchg   ebx,eax
  4149d8:	cmp    bl,BYTE PTR [ebx+esi*4]
  4149db:	mov    ebx,0xb672daa1
  4149e0:	outs   dx,BYTE PTR ds:[esi]
  4149e1:	test   eax,0x4bc88e1a
  4149e6:	aaa    
  4149e7:	push   cs
  4149e8:	pop    edx
  4149e9:	test   eax,0x26489f7d
  4149ee:	inc    eax
  4149ef:	test   al,0x15
  4149f1:	or     al,0xbc
  4149f3:	or     ebp,DWORD PTR [esi+0x35]
  4149f6:	mov    esp,DWORD PTR [ebp-0x58]
  4149f9:	cli    
  4149fa:	or     esp,DWORD PTR [ebp-0x5e36ca41]
  414a00:	cmp    al,0x5f
  414a02:	icebp  
  414a03:	sub    BYTE PTR [ebp-0x24],ch
  414a06:	mov    eax,0x716ddb5d
  414a0b:	mov    esi,0xf76525c6
  414a10:	adc    DWORD PTR [ecx+0x32365291],ebx
  414a16:	mul    BYTE PTR [ebx+0x3c5cb0d5]
  414a1c:	xchg   DWORD PTR [edi-0x66],esi
  414a1f:	sar    DWORD PTR [ebp+0x9ce2b9],1
  414a25:	int3   
  414a26:	repnz div DWORD PTR [ebp-0x7313754d]
  414a2d:	adc    eax,0x27fee0e8
  414a32:	aam    0xcb
  414a34:	ficomp WORD PTR [edx-0x24]
  414a37:	rcr    DWORD PTR [ecx+0x3a],cl
  414a3a:	(bad)  
  414a3b:	aaa    
  414a3c:	nop
  414a3d:	(bad)  
  414a3f:	jo     0x414a2e
  414a41:	xlat   BYTE PTR ds:[ebx]
  414a42:	sbb    DWORD PTR [edi],ecx
  414a44:	lods   al,BYTE PTR ds:[esi]
  414a45:	les    ebp,FWORD PTR [edi-0x54]
  414a48:	pop    esi
  414a49:	mov    eax,ds:0xe04599bb
  414a4e:	xchg   edx,eax
  414a4f:	stos   DWORD PTR es:[edi],eax
  414a50:	dec    ebx
  414a51:	xor    esi,DWORD PTR [esi-0x7e]
  414a54:	retf   
  414a55:	aas    
  414a56:	add    DWORD PTR [ebx-0x35c7ddc1],esp
  414a5c:	nop
  414a5d:	out    dx,al
  414a5e:	xchg   esp,eax
  414a5f:	fs pop edi
  414a61:	lods   al,BYTE PTR ds:[esi]
  414a62:	stos   BYTE PTR es:[edi],al
  414a63:	or     dh,0x3b
  414a66:	lea    eax,[edx-0x53969cf8]
  414a6c:	xchg   edi,eax
  414a6d:	inc    esi
  414a6e:	xchg   edx,eax
  414a6f:	jmp    0x3a68:0xb6269b85
  414a76:	fwait
  414a77:	dec    esp
  414a78:	lods   al,BYTE PTR ds:[esi]
  414a79:	fcomip st,st(4)
  414a7b:	repz xor ah,BYTE PTR [esi-0x13]
  414a7f:	cmp    al,0xe3
  414a81:	add    al,BYTE PTR [edx+0x28]
  414a84:	in     eax,0x73
  414a86:	neg    eax
  414a88:	fbstp  TBYTE PTR [ebp-0x26f1331b]
  414a8e:	dec    edi
  414a8f:	xchg   ecx,eax
  414a90:	shl    BYTE PTR [ecx+0x3],1
  414a93:	mov    esi,0x140ebb38
  414a98:	sbb    DWORD PTR [ecx+0x18fd4020],edx
  414a9e:	call   0x5ae8:0x4410b826
  414aa5:	clc    
  414aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa7:	mov    edi,0xd5ee4a80
  414aac:	sbb    BYTE PTR [eax-0x3b145171],bh
  414ab2:	dec    edx
  414ab3:	pop    ecx
  414ab4:	aam    0x23
  414ab6:	out    dx,al
  414ab7:	inc    ecx
  414ab8:	pusha  
  414ab9:	push   0x219ad79
  414abe:	sub    esp,DWORD PTR [edi+0xecfa03e]
  414ac4:	pop    esi
  414ac5:	mov    BYTE PTR [edi+ebp*8],dh
  414ac8:	ss pop edx
  414aca:	test   BYTE PTR [ebp-0x36],dl
  414acd:	and    ebx,ecx
  414acf:	mov    ch,0xb8
  414ad1:	bound  esi,QWORD PTR [edi]
  414ad3:	sbb    ebx,0xffffffba
  414ad6:	sbb    esi,ebp
  414ad8:	xor    al,0x32
  414ada:	mov    eax,DWORD PTR [edx+0x2f]
  414add:	shl    BYTE PTR [eax+0x6098059d],0x24
  414ae4:	add    eax,0x5cbde2db
  414ae9:	aas    
  414aea:	inc    esi
  414aeb:	xor    DWORD PTR [ebx+0x40f749bc],esi
  414af1:	cdq    
  414af2:	pop    es
  414af3:	ret    0x1fc5
  414af6:	sub    eax,0x9f5fe944
  414afb:	lahf   
  414afc:	mov    BYTE PTR [esp+edi*8-0x57],al
  414b00:	push   ss
  414b01:	push   esi
  414b02:	das    
  414b03:	fnstsw WORD PTR [esi-0x1635994e]
  414b09:	outs   dx,DWORD PTR ds:[esi]
  414b0a:	cld    
  414b0b:	lods   eax,DWORD PTR ds:[esi]
  414b0c:	inc    ebp
  414b0d:	aaa    
  414b0e:	cmp    DWORD PTR ds:0xbee7250e,eax
  414b14:	xchg   ah,dl
  414b16:	mov    eax,ds:0x10214f5e
  414b1b:	xchg   ebx,eax
  414b1c:	sbb    DWORD PTR [ebp-0x56],ebx
  414b1f:	dec    esp
  414b20:	mov    dl,0xdd
  414b22:	xchg   edx,eax
  414b23:	cmp    al,0xa5
  414b25:	inc    edi
  414b26:	sti    
  414b27:	int3   
  414b28:	dec    ebx
  414b29:	cmp    al,0xba
  414b2b:	mov    ah,0x45
  414b2d:	push   edi
  414b2e:	addr16 xchg sp,ax
  414b31:	jg     0x414b3b
  414b33:	or     esi,DWORD PTR ds:0xf69fea4f
  414b39:	test   DWORD PTR [edx-0x59],esi
  414b3c:	xchg   ebp,eax
  414b3d:	fmul   QWORD PTR [eax+ecx*2+0x2c2b704a]
  414b44:	mov    bl,0x2b
  414b46:	or     dl,ah
  414b48:	xor    DWORD PTR [esi+0x7a],eax
  414b4b:	push   edx
  414b4c:	lahf   
  414b4d:	dec    ebp
  414b4e:	sub    ebx,DWORD PTR [ecx+0x569639c1]
  414b54:	outs   dx,DWORD PTR ds:[esi]
  414b55:	cmp    cl,ah
  414b57:	push   DWORD PTR [eax-0x39]
  414b5a:	cdq    
  414b5b:	loope  0x414b89
  414b5d:	jg     0x414b20
  414b5f:	lods   al,BYTE PTR ds:[esi]
  414b60:	aas    
  414b61:	xchg   ebx,eax
  414b62:	and    DWORD PTR [ecx+0x5838b565],esi
  414b68:	jno    0x414b1e
  414b6a:	call   0x8e70d747
  414b6f:	rcl    BYTE PTR [ebp+0x42],cl
  414b72:	cwde   
  414b73:	(bad)  
  414b74:	cld    
  414b75:	push   0xffffffc4
  414b77:	jle    0x414bd9
  414b79:	pop    esi
  414b7a:	leave  
  414b7b:	fbld   TBYTE PTR [ecx]
  414b7d:	xor    eax,0x9ae14f70
  414b82:	jne    0x414bd0
  414b84:	cld    
  414b85:	add    BYTE PTR [ecx+edx*1+0x2b335f4d],dh
  414b8c:	sahf   
  414b8d:	xchg   edi,eax
  414b8e:	into   
  414b8f:	xchg   edi,eax
  414b90:	int3   
  414b91:	mov    ecx,0x8fee92cb
  414b96:	adc    dl,bh
  414b98:	inc    edx
  414b99:	push   cs
  414b9a:	push   cs
  414b9b:	sub    eax,0xdbee1471
  414ba0:	jbe    0x414baf
  414ba2:	push   ebp
  414ba3:	ins    DWORD PTR es:[edi],dx
  414ba4:	int    0x36
  414ba6:	adc    eax,0x3833aa22
  414bab:	xchg   esi,eax
  414bac:	int    0x7f
  414bae:	call   0x2149a0a6
  414bb3:	jne    0x414b43
  414bb5:	jmp    0xab3e815b
  414bba:	and    dl,BYTE PTR [esp+ebx*8-0x7]
  414bbe:	or     DWORD PTR ds:0xab4dfa74,esp
  414bc4:	push   cs
  414bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc6:	mov    edi,0xb2dbdcb1
  414bcb:	pusha  
  414bcc:	push   ebp
  414bcd:	or     DWORD PTR [edx-0x60],0x52
  414bd1:	inc    ch
  414bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd4:	sar    DWORD PTR [eax+0xed1b690],cl
  414bda:	int3   
  414bdb:	imul   esp,DWORD PTR [edx-0xf],0xffffffb6
  414bdf:	bound  edx,QWORD PTR [edi-0x18159d8]
  414be5:	add    ebp,DWORD PTR [edi+0x605754ed]
  414beb:	enter  0xee55,0x9b
  414bef:	(bad)  
  414bf0:	mov    ds:0x4499720d,eax
  414bf5:	dec    ecx
  414bf6:	test   BYTE PTR [esi],dh
  414bf8:	mov    ecx,0xff1eb3e2
  414bfd:	xchg   edi,eax
  414bfe:	mov    bh,0xcf
  414c00:	xchg   esp,eax
  414c01:	adc    edi,DWORD PTR [esi-0x5ca918d4]
  414c07:	out    dx,al
  414c08:	mov    al,0x25
  414c0a:	xchg   edx,eax
  414c0b:	mov    ebp,0x36a86b17
  414c10:	fisub  DWORD PTR [ecx-0x34]
  414c13:	mov    bh,0x84
  414c15:	jmp    0x3f72c5d5
  414c1a:	xchg   edi,eax
  414c1b:	xor    eax,0xccd2c36d
  414c20:	out    dx,eax
  414c21:	pop    esi
  414c22:	push   edx
  414c23:	sub    edx,DWORD PTR [edi-0x1a3ed61b]
  414c29:	pop    ecx
  414c2a:	outs   dx,BYTE PTR ds:[esi]
  414c2b:	or     al,0x56
  414c2d:	fstp   DWORD PTR ds:0x166c2e2b
  414c33:	int3   
  414c34:	mov    eax,ds:0x9eae0622
  414c39:	mov    al,ds:0xecc9ae3b
  414c3e:	pop    ecx
  414c3f:	js     0x414ca2
  414c41:	popa   
  414c42:	shr    ch,0x6a
  414c45:	jmp    0xf44a:0x38d9899a
  414c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c4d:	arpl   WORD PTR [eax+0x63a498e9],sp
  414c53:	loop   0x414cad
  414c55:	sbb    al,0xae
  414c57:	push   0xc800edfd
  414c5c:	and    BYTE PTR [eax-0x773179f4],al
  414c62:	inc    edi
  414c63:	(bad)  
  414c64:	call   0xae71:0xe37d97ec
  414c6b:	icebp  
  414c6c:	aad    0x2c
  414c6e:	push   ss
  414c6f:	cs ret 0xcd75
  414c73:	xchg   BYTE PTR [edx],bh
  414c75:	jo     0x414bff
  414c77:	lds    esi,FWORD PTR [eax+0x18267e3d]
  414c7d:	mov    ecx,0x2cc9b5e1
  414c82:	aas    
  414c83:	dec    ebx
  414c84:	push   ds
  414c85:	sbb    al,0x7e
  414c87:	rcl    DWORD PTR [esi+0x43620b49],cl
  414c8d:	dec    edi
  414c8e:	sub    al,0x8
  414c90:	bound  ebp,QWORD PTR [esi]
  414c92:	data16 aaa 
  414c94:	lods   al,BYTE PTR ds:[esi]
  414c95:	inc    ebx
  414c96:	inc    eax
  414c97:	dec    esi
  414c98:	pop    es
  414c99:	nop
  414c9a:	enter  0xadc8,0xd3
  414c9e:	cwde   
  414c9f:	popf   
  414ca0:	dec    esp
  414ca1:	xor    eax,0x78c2d6c4
  414ca6:	das    
  414ca7:	jae    0x414c48
  414ca9:	sbb    ebx,esp
  414cab:	aaa    
  414cac:	jae    0x414caa
  414cae:	sahf   
  414caf:	mov    bh,0x71
  414cb1:	fwait
  414cb2:	call   DWORD PTR [edx+0x68b7ce4]
  414cb8:	and    DWORD PTR [esi+0x31],0xffffffb8
  414cbc:	lods   eax,DWORD PTR ds:[esi]
  414cbd:	repnz loope 0x414c50
  414cc0:	pop    esp
  414cc1:	dec    edx
  414cc2:	dec    ebx
  414cc3:	sbb    ch,BYTE PTR [edx]
  414cc5:	in     eax,0x48
  414cc7:	fidiv  WORD PTR [edx]
  414cc9:	push   edi
  414cca:	fbstp  TBYTE PTR [edx+0x2f217acf]
  414cd0:	dec    edx
  414cd1:	shl    edx,0x1e
  414cd4:	jmp    0x41525e
  414cd9:	mov    ah,0xb5
  414cdb:	xor    al,0xf
  414cdd:	xor    al,0x8e
  414cdf:	xor    al,0xb5
  414ce1:	or     dh,BYTE PTR [edx+0x26]
  414ce4:	je     0x414d0f
  414ce6:	sub    al,0x98
  414ce8:	mov    dl,0x94
  414cea:	ror    DWORD PTR [esi+edx*1],cl
  414ced:	cmp    eax,0x91161604
  414cf2:	popa   
  414cf3:	fstp   st(5)
  414cf5:	outs   dx,DWORD PTR ds:[esi]
  414cf6:	std    
  414cf7:	cwde   
  414cf8:	in     al,0x96
  414cfa:	xchg   ebx,eax
  414cfb:	cmp    eax,0x87afa868
  414d00:	pop    ebx
  414d01:	mov    bh,0x75
  414d03:	sbb    eax,ecx
  414d05:	icebp  
  414d06:	clc    
  414d07:	push   esp
  414d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d09:	cmp    dl,0x0
  414d0c:	xor    eax,0xe0b15e3e
  414d11:	push   eax
  414d12:	ins    DWORD PTR es:[edi],dx
  414d13:	jbe    0x414cf6
  414d15:	push   eax
  414d16:	ss sti 
  414d18:	imul   esi,esi,0xf693ba53
  414d1e:	iret   
  414d1f:	hlt    
  414d20:	cmp    DWORD PTR [ebx+edx*8-0x19b7fddd],ecx
  414d27:	jge    0x414d08
  414d29:	rcl    edi,0xed
  414d2c:	js     0x414cc5
  414d2e:	inc    esi
  414d2f:	xchg   edx,eax
  414d30:	adc    esi,edx
  414d32:	jb     0x414d5f
  414d34:	xchg   dx,ax
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	adc    al,0xfa
  414d39:	ja     0x414d27
  414d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d3c:	or     DWORD PTR [edi+0x7f],eax
  414d3f:	xchg   edi,eax
  414d40:	dec    esp
  414d41:	in     al,0xe4
  414d43:	retf   
  414d44:	repnz (bad) 
  414d46:	ds js  0x414d71
  414d49:	sahf   
  414d4a:	out    dx,al
  414d4b:	(bad)  
  414d4c:	jno    0x414d5a
  414d4e:	sbb    DWORD PTR [eax-0x5f],esi
  414d51:	add    ch,BYTE PTR [eax]
  414d53:	xor    al,0x14
  414d55:	jecxz  0x414d8b
  414d57:	outs   dx,DWORD PTR ds:[esi]
  414d58:	mov    esp,0xd801cbf1
  414d5d:	mov    esi,0x7d4d726c
  414d62:	sub    BYTE PTR [esi+0x16f660c8],dl
  414d68:	sti    
  414d69:	sub    al,0xbe
  414d6b:	pop    edx
  414d6c:	sar    DWORD PTR [ebp-0x20f01a66],0xd6
  414d73:	scas   eax,DWORD PTR es:[edi]
  414d74:	fild   DWORD PTR [edx-0x37ad6c93]
  414d7a:	sub    al,0x8f
  414d7c:	push   0x63
  414d7e:	mov    ds:0xcfc29ddc,al
  414d83:	and    al,0x6a
  414d85:	ja     0x414d0a
  414d87:	push   ss
  414d88:	jmp    0x8800:0x3f4fafa8
  414d8f:	mov    ds,WORD PTR [ebx+0x7]
  414d92:	pop    edx
  414d93:	mov    edx,0xfe383a5
  414d98:	out    dx,eax
  414d99:	scas   eax,DWORD PTR es:[edi]
  414d9a:	cmp    DWORD PTR [ebx+0x7e],0x6864bc4e
  414da1:	lds    ebp,FWORD PTR [edi+edx*1-0x60679391]
  414da8:	jge    0x414d3c
  414daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dab:	sbb    al,0x6d
  414dad:	or     ebp,DWORD PTR [eax]
  414daf:	adc    ebp,0xffffffc8
  414db2:	sub    DWORD PTR [ebx-0x65],eax
  414db5:	mov    esi,0x61a4252b
  414dba:	push   edx
  414dbb:	ds jo  0x414d59
  414dbe:	dec    esp
  414dbf:	xor    al,0x5
  414dc1:	ret    
  414dc2:	les    edi,FWORD PTR [eax-0x3]
  414dc5:	mov    cl,0x6a
  414dc7:	mov    WORD PTR [edx+0x6891f736],es
  414dcd:	in     al,dx
  414dce:	inc    edx
  414dcf:	jnp    0xd3c2fedc
  414dd5:	gs into 
  414dd7:	inc    eax
  414dd8:	ror    BYTE PTR [edx+0x3f],1
  414ddb:	out    dx,al
  414ddc:	and    BYTE PTR [ebx+0x14],al
  414ddf:	mov    eax,0xfd094eff
  414de4:	ds stc 
  414de6:	(bad)  
  414de7:	lahf   
  414de8:	imul   esp,DWORD PTR [esi],0x79
  414deb:	mov    ecx,0x1c7fba1d
  414df0:	xchg   esi,eax
  414df1:	(bad)  
  414df2:	jo     0x414e3e
  414df4:	mov    eax,esp
  414df6:	lods   eax,DWORD PTR ds:[esi]
  414df7:	aas    
  414df8:	jnp    0x414dfa
  414dfa:	cdq    
  414dfb:	and    eax,0x9a9d53
  414e00:	in     al,0x30
  414e02:	pop    ss
  414e03:	push   ss
  414e04:	out    0x55,eax
  414e06:	xchg   edx,eax
  414e07:	sub    eax,0xed03a354
  414e0c:	sahf   
  414e0d:	(bad)  
  414e0e:	jmp    0x25e9:0x675475c8
  414e15:	into   
  414e16:	lea    esi,[ebx+0x78]
  414e19:	mov    es,WORD PTR [ebx+0x46794cd8]
  414e1f:	mov    eax,esp
  414e21:	test   edi,eax
  414e23:	jae    0x414dcc
  414e25:	ret    0x9336
  414e28:	inc    ebx
  414e29:	data16 and BYTE PTR [esi+eax*4],ch
  414e2d:	push   es
  414e2e:	inc    esp
  414e2f:	cmp    eax,0xf6340ea9
  414e34:	mov    bl,0x6c
  414e36:	jle    0x414e70
  414e38:	enter  0xde76,0x68
  414e3c:	push   ebp
  414e3d:	mov    dl,bl
  414e3f:	push   ebx
  414e40:	inc    ebx
  414e41:	mov    bl,0x69
  414e43:	idiv   BYTE PTR [ebx-0x6520f023]
  414e49:	jmp    0x25de:0x76e74c8c
  414e50:	lods   eax,DWORD PTR ds:[esi]
  414e51:	pop    esi
  414e52:	xchg   esp,eax
  414e53:	nop
  414e54:	inc    ecx
  414e55:	xchg   edx,eax
  414e56:	jae    0x414dee
  414e58:	cmp    bh,BYTE PTR [ebp-0x273aa5f6]
  414e5e:	inc    eax
  414e5f:	(bad)  
  414e60:	into   
  414e61:	add    al,bh
  414e63:	pop    edi
  414e64:	into   
  414e65:	shr    DWORD PTR [eax+0x7713f23b],cl
  414e6b:	and    dh,BYTE PTR [ebx+esi*4]
  414e6e:	mov    al,0xc6
  414e70:	cmp    al,0xf5
  414e72:	mul    DWORD PTR [eax-0x15bbd836]
  414e78:	test   al,0xda
  414e7a:	sub    dl,dh
  414e7c:	loop   0x414e19
  414e7e:	xor    BYTE PTR [eax+esi*2-0x49a9aa73],dl
  414e85:	pop    eax
  414e86:	mov    al,0x5c
  414e88:	bound  eax,QWORD PTR [edx+0x6348c81f]
  414e8e:	inc    ebx
  414e8f:	adc    eax,0x7b879dd0
  414e94:	lods   al,BYTE PTR ds:[esi]
  414e95:	fstp   DWORD PTR [edi+edx*8-0x1811ff41]
  414e9c:	inc    edx
  414e9e:	out    dx,al
  414e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ea0:	lea    ecx,[esi]
  414ea2:	ins    BYTE PTR es:[edi],dx
  414ea3:	sbb    esp,DWORD PTR [esi-0x1a7851ad]
  414ea9:	leave  
  414eaa:	dec    edi
  414eab:	dec    edx
  414eac:	push   ss
  414ead:	fbld   TBYTE PTR [edx]
  414eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb0:	mov    ch,0x52
  414eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eb3:	or     al,0x9d
  414eb5:	pop    edi
  414eb6:	inc    ebx
  414eb7:	jne    0x414eec
  414eb9:	add    bl,dl
  414ebb:	push   edi
  414ebc:	dec    esp
  414ebd:	push   0x869e5dfe
  414ec2:	or     al,0xe2
  414ec4:	test   DWORD PTR [edi+eiz*4-0x7a428eb8],esp
  414ecb:	or     dh,BYTE PTR [edx]
  414ecd:	mov    edx,0x68735722
  414ed2:	dec    ecx
  414ed3:	jge    0x414e61
  414ed5:	cmp    edi,DWORD PTR [ecx-0x3a10f324]
  414edb:	les    esp,FWORD PTR [di-0x4a5b]
  414ee0:	push   eax
  414ee2:	repnz and DWORD PTR [ebx+0x17],ebx
  414ee6:	jle    0x414eb3
  414ee8:	jmp    0xe5e35166
  414eed:	mov    ds:0xedb3b8,eax
  414ef2:	fidivr WORD PTR [ecx]
  414ef4:	mov    eax,ds:0x6b56c0fa
  414ef9:	xor    al,bh
  414efb:	jg     0x414f21
  414efd:	stos   DWORD PTR es:[edi],eax
  414efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eff:	add    al,0x27
  414f01:	push   ebx
  414f02:	adc    bh,dh
  414f04:	mov    dl,0x4
  414f06:	mov    ebp,0x73a55570
  414f0b:	sub    eax,0xb5301069
  414f10:	outs   dx,BYTE PTR ds:[esi]
  414f11:	adc    BYTE PTR [ecx-0x13],dl
  414f14:	fwait
  414f15:	push   edx
  414f16:	aad    0x36
  414f18:	out    dx,eax
  414f19:	cld    
  414f1a:	rcl    BYTE PTR [ebp-0x194fe1c9],0x27
  414f21:	sub    BYTE PTR [ebp+esi*2+0x534c9479],dh
  414f28:	mov    WORD PTR [edi],?
  414f2a:	gs (bad) 
  414f2c:	call   0xa958:0x277f6a50
  414f33:	mov    ds:0xa88598b,al
  414f38:	jl     0x414f75
  414f3a:	test   BYTE PTR [ebp+0x216e0501],0x70
  414f41:	test   BYTE PTR [ebp+0x3ad493c8],bh
  414f47:	pop    ebp
  414f48:	or     ah,BYTE PTR [ebx+0x5d00e98e]
  414f4e:	jge    0x414f66
  414f50:	add    esi,DWORD PTR [edx+0x55]
  414f53:	mov    ebp,0x11f01470
  414f58:	shr    DWORD PTR [ebp+0x6b],cl
  414f5b:	adc    dl,ch
  414f5d:	or     DWORD PTR [eax+esi*1+0x44],0x3
  414f62:	dec    edi
  414f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f64:	mov    ebx,0x920ba61b
  414f69:	je     0x414f71
  414f6b:	or     al,0xf6
  414f6d:	fimul  WORD PTR [ebp-0x75]
  414f70:	(bad)  
  414f71:	in     al,dx
  414f72:	shl    DWORD PTR [edx],1
  414f74:	add    DWORD PTR [edi+0x44],ecx
  414f77:	cmp    BYTE PTR [ecx-0x2624004],al
  414f7d:	dec    edx
  414f7e:	sub    edx,eax
  414f80:	jp     0x414f99
  414f82:	xchg   ebx,eax
  414f83:	xchg   ebp,eax
  414f84:	dec    eax
  414f85:	lods   eax,DWORD PTR ds:[esi]
  414f86:	daa    
  414f87:	xchg   BYTE PTR [edi+eax*8],dh
  414f8a:	or     ebp,edx
  414f8c:	add    dh,BYTE PTR [edi+0x38]
  414f8f:	push   eax
  414f90:	sahf   
  414f91:	jge    0x414fe3
  414f93:	imul   esp,ebp,0x5a
  414f96:	xchg   esp,eax
  414f97:	(bad)  
  414f98:	rcr    DWORD PTR [edi+0x59580798],0x1d
  414f9f:	ds test eax,0xacd4548c
  414fa5:	aas    
  414fa6:	sbb    DWORD PTR [ebp-0x532d4a8c],edi
  414fac:	inc    edi
  414fad:	push   eax
  414fae:	lahf   
  414faf:	outs   dx,BYTE PTR ds:[esi]
  414fb0:	lock mov edx,0xc5753f98
  414fb6:	jbe    0x414fc6
  414fb8:	mov    DWORD PTR [ecx],eax
  414fba:	xor    al,0xef
  414fbd:	mov    ebp,0xd6ca83f
  414fc2:	daa    
  414fc3:	(bad)  
  414fc4:	mov    ebx,0x6f84e520
  414fc9:	push   esp
  414fca:	sti    
  414fcb:	sbb    esp,DWORD PTR [ecx+esi*2]
  414fce:	ror    DWORD PTR [esi+0x7ce0321f],cl
  414fd4:	dec    ebx
  414fd5:	aad    0xaa
  414fd7:	dec    esp
  414fd8:	push   ebp
  414fd9:	leave  
  414fda:	jmp    0x80802787
  414fdf:	lds    esi,FWORD PTR ds:0x73caffd9
  414fe5:	push   eax
  414fe6:	mov    WORD PTR [edi],ds
  414fe8:	or     BYTE PTR [edx],al
  414fea:	psubw  mm5,mm5
  414fed:	dec    eax
  414fee:	mov    esp,0x36339350
  414ff3:	adc    eax,0x6537e539
  414ff8:	sbb    bl,0xf6
  414ffb:	dec    eax
  414ffc:	adc    al,0xfa
  414ffe:	mov    dh,0xc0
  415000:	dec    edi
  415001:	ret    
  415002:	adc    bh,cl
  415004:	mov    ecx,es
  415006:	inc    ebp
  415007:	pop    es
  415008:	push   esi
  415009:	popa   
  41500a:	add    ecx,DWORD PTR [ebx-0x5c6be778]
  415010:	inc    esp
  415011:	fxch   st(6)
  415013:	out    0x9e,eax
  415015:	in     eax,dx
  415016:	xchg   edx,eax
  415017:	lock dec esi
  415019:	mov    DWORD PTR [edi*4+0x45477adf],ebp
  415020:	adc    al,0x59
  415022:	std    
  415023:	push   edx
  415024:	fsub   QWORD PTR [esi+0x5f]
  415027:	outs   dx,DWORD PTR ds:[esi]
  415028:	mov    ?,WORD PTR [ebp-0x3835920d]
  41502e:	sbb    BYTE PTR [edi],ch
  415030:	fnstsw WORD PTR [edi-0x3192caf5]
  415036:	adc    dl,BYTE PTR [edx+0x39edbe0b]
  41503c:	mov    esp,0x33670260
  415041:	fistp  WORD PTR [edi]
  415043:	das    
  415044:	mov    al,0xbb
  415046:	mul    al
  415048:	xchg   BYTE PTR [eax-0x77],dh
  41504b:	outs   dx,DWORD PTR ds:[esi]
  41504c:	lock sbb eax,0xa17b8bfb
  415052:	jno    0x4150b5
  415054:	popa   
  415055:	dec    edi
  415056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415057:	clc    
  415058:	push   edi
  415059:	cmp    al,0x9d
  41505b:	ja     0x415035
  41505d:	imul   edx,DWORD PTR [eax-0x4],0xffffffc8
  415061:	or     ecx,edi
  415063:	loope  0x41508b
  415065:	pop    esi
  415066:	and    eax,DWORD PTR [ecx]
  415068:	aas    
  415069:	mov    DWORD PTR [eax],eax
  41506b:	cmp    dl,BYTE PTR [edx+0x4716ceb]
  415071:	loop   0x414fff
  415073:	pop    ss
  415074:	ds stos DWORD PTR es:[edi],eax
  415076:	das    
  415077:	and    BYTE PTR [ecx],ah
  415079:	stos   DWORD PTR es:[edi],eax
  41507a:	bound  ebp,QWORD PTR [ebp-0x514ddfe4]
  415080:	push   ds
  415081:	jl     0x4150d5
  415083:	pop    ebp
  415084:	cmp    eax,0xccc0f1f8
  415089:	xor    al,0x8f
  41508b:	sub    al,0x45
  41508d:	outs   dx,DWORD PTR ds:[esi]
  41508e:	sbb    cl,BYTE PTR [eax]
  415090:	cmp    al,0xdc
  415092:	ss inc esp
  415094:	out    0x9c,eax
  415096:	mov    dl,0x51
  415098:	xor    ch,BYTE PTR [ebp+0x3bbd4de5]
  41509e:	xchg   BYTE PTR [esi+0x3f],ah
  4150a1:	push   esi
  4150a2:	mov    ecx,0x6b4db7d8
  4150a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a8:	aaa    
  4150a9:	ret    0x9dba
  4150ac:	cmp    eax,0xcf63ebd6
  4150b1:	(bad)  
  4150b2:	push   ebp
  4150b3:	mov    ah,0x32
  4150b5:	mov    BYTE PTR [esi+0x3d84d2ce],bl
  4150bb:	test   DWORD PTR [esi+0x11],eax
  4150be:	das    
  4150bf:	aaa    
  4150c0:	popf   
  4150c1:	aad    0x11
  4150c3:	mov    edx,0xfb7722da
  4150c8:	sbb    al,0xc
  4150ca:	xchg   ebx,eax
  4150cb:	xchg   edx,eax
  4150cc:	xchg   esp,eax
  4150cd:	dec    ebx
  4150ce:	push   esp
  4150cf:	mov    ebp,0x1be77b92
  4150d4:	pop    edi
  4150d5:	xchg   ecx,eax
  4150d6:	push   ss
  4150d7:	dec    ecx
  4150d8:	push   ss
  4150d9:	or     esi,DWORD PTR [eax+0x6f]
  4150dc:	ss mov esp,0x82b597e2
  4150e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e3:	cmpxchg BYTE PTR [edi+0x53536820],dl
  4150ea:	hlt    
  4150eb:	out    dx,al
  4150ec:	xchg   edx,edx
  4150ee:	cmp    eax,0x1b18837b
  4150f3:	push   0x79f41604
  4150f8:	jecxz  0x4150f5
  4150fa:	stos   DWORD PTR es:[edi],eax
  4150fb:	dec    edi
  4150fc:	or     al,0x56
  4150fe:	mov    ch,0x8b
  415100:	sar    BYTE PTR [edx+0x77688022],0x20
  415107:	fsub   DWORD PTR [edx]
  415109:	in     eax,0xfb
  41510b:	jge    0x4150fd
  41510d:	int    0x8b
  41510f:	xchg   esp,eax
  415110:	push   edx
  415111:	add    BYTE PTR [eax+0xa095259],dh
  415117:	(bad)  
  415118:	sbb    ebp,edx
  41511a:	jmp    0xdd71:0x6455cd96
  415121:	xchg   ecx,eax
  415122:	push   edx
  415123:	cmp    DWORD PTR [ebp-0x7],edi
  415126:	mov    bh,BYTE PTR [ebp+0x3e6c49a9]
  41512c:	add    al,0xff
  41512e:	ins    DWORD PTR es:[edi],dx
  41512f:	loop   0x4150e1
  415131:	retf   
  415132:	push   edi
  415133:	or     al,0xc2
  415135:	and    bl,bl
  415137:	cmp    dh,BYTE PTR [edi+0x66bce651]
  41513d:	inc    eax
  41513e:	inc    eax
  41513f:	sar    DWORD PTR [ecx+0x51],1
  415142:	idiv   DWORD PTR [ebp+0x48]
  415145:	mov    BYTE PTR ds:0x57f87bf6,dl
  41514b:	dec    esp
  41514c:	mov    esi,0x61eee27d
  415151:	in     eax,dx
  415152:	adc    al,BYTE PTR [ebp-0x5252cb1a]
  415158:	rcr    eax,0xc6
  41515b:	(bad)  
  41515c:	jb     0x415140
  41515e:	jg     0x4151dc
  415160:	sbb    BYTE PTR [edi],al
  415162:	out    dx,eax
  415163:	leave  
  415164:	and    DWORD PTR [edx-0x22e6914a],esp
  41516a:	mov    al,0x55
  41516c:	add    eax,0xde448c1
  415171:	mov    esp,0x6f142e80
  415176:	ret    0xb25b
  415179:	xlat   BYTE PTR ds:[ebx]
  41517a:	stos   BYTE PTR es:[edi],al
  41517b:	jo     0x415122
  41517d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41517e:	push   ecx
  41517f:	shr    BYTE PTR [edi],cl
  415181:	xchg   BYTE PTR [edi+0x51],bl
  415184:	sub    al,0x2d
  415186:	push   esi
  415187:	aaa    
  415188:	rol    DWORD PTR [edx+0xf],cl
  41518b:	adc    al,0x72
  41518d:	adc    eax,0x5f750550
  415192:	sti    
  415193:	in     al,dx
  415194:	setb   BYTE PTR [edx]
  415197:	mov    es,WORD PTR [eax-0x29]
  41519a:	add    DWORD PTR [esi],ebp
  41519c:	jmp    0xf901213d
  4151a1:	loopne 0x4151db
  4151a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a4:	pop    ds
  4151a5:	jmp    0x415179
  4151a7:	test   ax,0xb409
  4151ab:	call   0x216b3ce0
  4151b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b1:	icebp  
  4151b2:	xor    al,0xd1
  4151b4:	loop   0x415161
  4151b6:	inc    edi
  4151b7:	adc    ch,al
  4151b9:	push   ds
  4151ba:	inc    ebx
  4151bb:	adc    ebp,DWORD PTR [eax+0x47b17feb]
  4151c1:	in     al,dx
  4151c2:	cli    
  4151c3:	mov    ebx,0x22861d57
  4151c8:	out    0x80,eax
  4151ca:	out    dx,al
  4151cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151cc:	push   esi
  4151cd:	sti    
  4151ce:	dec    edi
  4151cf:	mov    ebx,0xe777d1d5
  4151d4:	retf   0xb100
  4151d7:	mov    bh,0xe6
  4151d9:	ja     0x415239
  4151db:	fisttp QWORD PTR [ecx]
  4151dd:	xchg   ebx,eax
  4151de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151df:	stos   BYTE PTR es:[edi],al
  4151e0:	add    DWORD PTR [ecx],ecx
  4151e2:	mov    ch,0xfe
  4151e4:	icebp  
  4151e5:	repz test eax,edx
  4151e8:	sbb    BYTE PTR [edx-0x57621aae],ah
  4151ee:	push   0xffffffb9
  4151f0:	add    BYTE PTR [eax-0x46],ch
  4151f3:	or     edx,ebp
  4151f5:	mov    DWORD PTR [eax+0x2efdc66d],esp
  4151fb:	add    ebx,DWORD PTR [eax-0x46]
  4151fe:	inc    edx
  4151ff:	fmul   DWORD PTR [ecx]
  415201:	mov    edx,0xf1c120b1
  415206:	xchg   DWORD PTR [edi+0x2c],eax
  415209:	outs   dx,DWORD PTR ds:[esi]
  41520a:	xchg   ebx,eax
  41520b:	je     0x41526b
  41520d:	hlt    
  41520e:	cmp    BYTE PTR [edi-0x68],dl
  415211:	xchg   esi,eax
  415212:	fmul   QWORD PTR [edx+edx*4-0x76c6f409]
  415219:	cli    
  41521a:	aad    0xa1
  41521c:	sub    esp,ebp
  41521e:	xchg   DWORD PTR [edi+0x6043c620],ecx
  415224:	jl     0x415266
  415226:	jge    0x415291
  415228:	js     0x4151d7
  41522a:	xchg   DWORD PTR [ebx-0x7469eee6],eax
  415230:	sbb    dh,bl
  415232:	cs mov esp,0x6af1843f
  415238:	(bad)  
  415239:	and    eax,0x9ace7b29
  41523e:	into   
  41523f:	inc    esp
  415240:	int    0xca
  415242:	sub    DWORD PTR [edi],0xf7af4394
  415248:	cmp    dl,BYTE PTR [edx+edi*2+0x222fa137]
  41524f:	dec    esi
  415250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415251:	lods   al,BYTE PTR ds:[esi]
  415252:	xchg   ecx,eax
  415253:	rcr    BYTE PTR [edi+0x38],cl
  415256:	sahf   
  415257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415258:	stos   DWORD PTR es:[edi],eax
  415259:	xchg   esp,eax
  41525a:	fmul   DWORD PTR [edi-0x27]
  41525d:	sar    DWORD PTR [eax-0x40000000],1
  415263:	xor    edx,eax
  415265:	mov    DWORD PTR [ebp+0x14],edx
  415268:	mov    edx,DWORD PTR [esi]
  41526a:	mov    edi,DWORD PTR [esi+0x4]
  41526d:	xor    edi,0x9c0a89d8
  415273:	jmp    0x4157fd
  415278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415279:	(bad)  
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	test   DWORD PTR [ebp+0x24],esp
  41527e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527f:	ss das 
  415281:	sahf   
  415282:	cmp    BYTE PTR [eax+0x45],ch
  415285:	mov    ch,dh
  415287:	push   0x160ccfc3
  41528c:	cmp    eax,0xfa161604
  415291:	adc    DWORD PTR [esp+edx*1-0x6],ebp
  415295:	jne    0x41526b
  415297:	cmp    DWORD PTR [eax],esp
  415299:	mov    bl,0x9a
  41529b:	(bad)  
  41529c:	std    
  41529d:	lods   al,BYTE PTR ds:[esi]
  41529e:	pop    ebp
  41529f:	and    al,0x3d
  4152a1:	mov    ah,0x88
  4152a3:	xchg   ebx,eax
  4152a4:	lods   eax,DWORD PTR ds:[esi]
  4152a5:	loop   0x41522a
  4152a7:	in     eax,dx
  4152a8:	inc    ebp
  4152a9:	aas    
  4152aa:	enter  0xc098,0x29
  4152ae:	dec    eax
  4152af:	cmc    
  4152b0:	(bad)  
  4152b1:	xor    eax,0x4e5058c2
  4152b6:	neg    BYTE PTR [edi]
  4152b8:	inc    edx
  4152b9:	stos   DWORD PTR es:[edi],eax
  4152ba:	mov    cs,WORD PTR [esi+0x10c9c607]
  4152c0:	add    al,0xd4
  4152c2:	fld    QWORD PTR [edx]
  4152c4:	(bad)  
  4152c5:	push   0x6
  4152c7:	or     al,0x78
  4152c9:	cmp    ecx,DWORD PTR [ebx+0xae9fcbe]
  4152cf:	out    0x15,al
  4152d1:	fld    DWORD PTR [ecx]
  4152d3:	shr    DWORD PTR [ecx-0x42],0x49
  4152d7:	jno    0x4152e2
  4152d9:	ficom  WORD PTR [ebp+0x23]
  4152dc:	mov    esp,0x303abdc1
  4152e1:	mov    ds:0xd9d25731,eax
  4152e6:	shr    DWORD PTR [ecx-0x95e1f54],cl
  4152ec:	lds    eax,FWORD PTR [ebx]
  4152ee:	add    eax,0xb417d852
  4152f3:	rcr    BYTE PTR [edx],cl
  4152f5:	stos   DWORD PTR es:[edi],eax
  4152f6:	pop    ebx
  4152f7:	adc    al,0x10
  4152f9:	into   
  4152fa:	mov    ch,0x25
  4152fc:	jae    0x41529a
  4152fe:	test   al,0x68
  415300:	adc    DWORD PTR [esi-0x13c06cb7],ecx
  415306:	add    edi,edx
  415308:	adc    eax,0xfddcce63
  41530d:	or     ebx,DWORD PTR [ecx-0x6d528377]
  415313:	push   ebp
  415314:	scas   al,BYTE PTR es:[edi]
  415315:	xchg   ebp,eax
  415316:	jecxz  0x4152e8
  415318:	bound  dx,DWORD PTR [eax]
  41531b:	adc    BYTE PTR [ebx+0x5],dl
  41531e:	mov    edi,0x7c96b56b
  415323:	in     eax,dx
  415324:	mov    esp,edx
  415326:	out    0xac,al
  415328:	loop   0x415350
  41532a:	sub    ecx,DWORD PTR [ebp-0x56ecfdbd]
  415330:	stos   BYTE PTR es:[edi],al
  415331:	jns    0x4152b5
  415333:	(bad)  
  415335:	push   eax
  415336:	ret    0xa48a
  415339:	daa    
  41533a:	std    
  41533b:	imul   ebp,DWORD PTR [eax+0x59],0x62
  41533f:	sar    DWORD PTR [ebx+0x7110f41a],1
  415345:	xchg   ebp,eax
  415346:	test   edi,ebx
  415348:	cli    
  415349:	in     al,0x83
  41534b:	or     al,0xd8
  41534d:	xor    eax,0x60a70e0c
  415352:	shl    DWORD PTR [ecx+0x2],cl
  415355:	enter  0x2bf0,0xa1
  415359:	popa   
  41535a:	ret    
  41535b:	sbb    BYTE PTR [edx-0x70185b43],cl
  415361:	cld    
  415362:	sub    edx,DWORD PTR [edi*4+0x6e7b2190]
  415369:	add    al,0x7d
  41536b:	(bad)  
  41536d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41536e:	cdq    
  41536f:	push   0x856f0217
  415374:	cli    
  415375:	push   ss
  415376:	ret    0xd382
  415379:	ss cdq 
  41537b:	mov    al,ds:0x1953d740
  415380:	popf   
  415381:	test   edx,0x51411b2d
  415387:	cld    
  415388:	sbb    bl,BYTE PTR [ecx+0x7bc07349]
  41538e:	and    eax,0xd4f82f56
  415393:	retf   
  415394:	gs inc esi
  415396:	imul   esp,eax,0x2cdb7292
  41539c:	mov    eax,DWORD PTR [ebp+0x2e24b428]
  4153a2:	sbb    dl,BYTE PTR [esi+0x59]
  4153a5:	arpl   WORD PTR [ebx+0x11],cx
  4153a8:	rcl    DWORD PTR [edi+0x1],1
  4153ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ac:	mov    esp,0x7e9589a2
  4153b1:	outs   dx,BYTE PTR ds:[esi]
  4153b2:	enter  0xe955,0x3e
  4153b6:	sub    BYTE PTR [edi+0x57],0x74
  4153ba:	mov    edi,0xad80c5e1
  4153bf:	retf   0x5eae
  4153c2:	adc    ecx,esi
  4153c4:	jns    0x4153b9
  4153c6:	ins    BYTE PTR es:[edi],dx
  4153c7:	ret    0xa774
  4153ca:	mov    ah,BYTE PTR [edx]
  4153cc:	shl    edi,0x48
  4153cf:	add    eax,0x1d0e8fb6
  4153d4:	xor    al,0xa8
  4153d6:	aas    
  4153d7:	loop   0x4153f1
  4153d9:	(bad)  
  4153da:	in     eax,dx
  4153db:	pop    eax
  4153dc:	jl     0x4153ef
  4153de:	cs iret 
  4153e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e1:	pop    ebp
  4153e2:	aam    0xfe
  4153e4:	call   FWORD PTR [edx]
  4153e6:	leave  
  4153e7:	(bad)  
  4153e8:	bound  ebx,QWORD PTR [esi-0x7cd3904c]
  4153ee:	ja     0x415465
  4153f0:	sub    DWORD PTR [edx-0x76],0x4b
  4153f4:	push   ecx
  4153f5:	mov    ah,BYTE PTR [eax+0x5e]
  4153f8:	push   0x5f7981b8
  4153fd:	icebp  
  4153fe:	add    BYTE PTR [eax+0x1e],ch
  415401:	pop    ecx
  415402:	jns    0x4153b6
  415404:	std    
  415405:	cmp    BYTE PTR [edx+edi*8-0x6e],0x42
  41540a:	lahf   
  41540b:	inc    edx
  41540c:	fstp   TBYTE PTR [edi+0x648dfd53]
  415412:	ret    0xa4e8
  415415:	shl    BYTE PTR [edi+0x3a],cl
  415418:	cmp    DWORD PTR [esi-0x47],edi
  41541b:	xchg   edx,eax
  41541c:	mov    BYTE PTR [edx-0x3530ee04],cl
  415422:	je     0x415430
  415424:	add    DWORD PTR [edx],esi
  415426:	pop    ecx
  415427:	sti    
  415428:	loop   0x415445
  41542a:	mov    ecx,DWORD PTR [ecx]
  41542c:	mov    ds:0x7183aab3,al
  415431:	iret   
  415432:	push   esi
  415433:	xchg   ecx,eax
  415434:	xchg   edx,eax
  415435:	outs   dx,DWORD PTR ds:[esi]
  415436:	pop    esi
  415437:	or     DWORD PTR [ecx+0x73],0x4b76572a
  41543e:	stos   BYTE PTR es:[edi],al
  41543f:	hlt    
  415440:	outs   dx,BYTE PTR ds:[esi]
  415441:	sbb    al,al
  415443:	repnz sub bl,BYTE PTR [ecx-0x12]
  415447:	mov    esi,0xf210f0a1
  41544c:	or     al,0xc1
  41544e:	add    ebp,ebp
  415450:	push   es
  415451:	mov    al,0x3
  415453:	cmp    al,0xd6
  415455:	ret    
  415456:	pop    ss
  415457:	mov    eax,0xd49486a
  41545c:	or     DWORD PTR [esi],0x31c5a282
  415462:	test   bl,0xa2
  415465:	jbe    0x41546b
  415467:	inc    esi
  415468:	leave  
  415469:	and    BYTE PTR [esi+ecx*8-0x295d4e3d],ch
  415470:	xchg   edx,eax
  415471:	out    dx,eax
  415472:	bound  edi,QWORD PTR [edi+0x2220996]
  415478:	aad    0x74
  41547a:	iret   
  41547b:	push   ebx
  41547c:	push   0xd366edcd
  415481:	lods   eax,DWORD PTR ds:[esi]
  415482:	add    bh,ch
  415484:	cdq    
  415485:	(bad)  
  415486:	das    
  415487:	bound  ebp,QWORD PTR [eax+eax*8]
  41548a:	int3   
  41548b:	fwait
  41548c:	xchg   esi,eax
  41548d:	sbb    DWORD PTR [ebp-0x2067eb36],eax
  415493:	ds retf 
  415495:	arpl   WORD PTR [edx-0x4b],di
  415498:	jnp    0x4154dc
  41549a:	mov    cl,0xdb
  41549c:	bound  esi,QWORD PTR [ecx]
  41549e:	enter  0x68ec,0xdb
  4154a2:	adc    DWORD PTR ds:0xcedee2d1,ebx
  4154a8:	xor    dh,BYTE PTR [edi+0x1c]
  4154ab:	pop    ds
  4154ac:	mov    ebp,0x95ec6263
  4154b1:	push   0xffffff8a
  4154b3:	adc    al,0x1e
  4154b5:	shl    DWORD PTR [ecx-0x66],0x99
  4154b9:	into   
  4154ba:	arpl   bx,ax
  4154bc:	jno    0x415494
  4154be:	mov    dh,0x94
  4154c0:	sbb    ecx,DWORD PTR [ebx+0x7bbdcf50]
  4154c6:	mov    edi,0xcbac0e68
  4154cb:	ss mov dl,0x38
  4154ce:	out    0x7a,eax
  4154d0:	js     0x41548f
  4154d2:	inc    edx
  4154d3:	(bad)  
  4154d4:	in     eax,0xb1
  4154d6:	adc    esi,edi
  4154d8:	mov    cl,0xbc
  4154da:	lock mov esi,0x830e409
  4154e0:	jg     0x41546e
  4154e2:	into   
  4154e3:	ins    BYTE PTR es:[edi],dx
  4154e4:	jbe    0x415537
  4154e6:	jmp    0x4154c8
  4154e8:	nop
  4154e9:	sbb    esi,DWORD PTR [ecx-0x65]
  4154ec:	add    BYTE PTR [ebx+edx*8+0x37],dl
  4154f0:	adc    DWORD PTR [ebp+ebx*4-0x72],edi
  4154f4:	jne    0x4154a0
  4154f6:	cmp    ebp,ecx
  4154f8:	ret    0x462d
  4154fb:	mov    bx,0xe338
  4154ff:	(bad)  
  415500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415501:	loope  0x4154a6
  415503:	hlt    
  415504:	mov    esp,0x7b811831
  415509:	mov    ds:0x248c138e,eax
  41550e:	iret   
  41550f:	xor    eax,0xdaa271db
  415514:	jno    0x415504
  415516:	push   esi
  415517:	lods   al,BYTE PTR ds:[esi]
  415518:	jmp    0x3908fa87
  41551d:	mov    eax,ds:0xad4c09be
  415522:	imul   eax,DWORD PTR [eax+0x44242a22],0x1939ca92
  41552c:	sbb    ebp,DWORD PTR [edx]
  41552e:	push   es
  41552f:	push   ebp
  415530:	and    BYTE PTR [esi],ch
  415532:	jnp    0x415575
  415534:	or     eax,0x646ee8c5
  415539:	out    dx,eax
  41553a:	into   
  41553b:	ja     0x415579
  41553d:	retf   0x2670
  415540:	pop    edi
  415541:	add    DWORD PTR [edi+0x1e9ad0c2],esi
  415547:	jecxz  0x4154d4
  415549:	cmp    dl,al
  41554b:	imul   edx,DWORD PTR [ebp+0x181deb55],0x2f
  415552:	pop    esi
  415553:	xchg   DWORD PTR [eax+0x26],esp
  415556:	ret    0x7675
  415559:	call   0x997329d5
  41555e:	int3   
  41555f:	xchg   esi,eax
  415560:	icebp  
  415561:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415563:	lds    eax,FWORD PTR [edx-0x3]
  415566:	pop    esi
  415567:	xor    esi,ebx
  415569:	adc    dl,BYTE PTR [eax+eax*2]
  41556c:	add    ebx,edx
  41556e:	aad    0x7d
  415570:	mov    ds:0xf01f70cf,eax
  415575:	push   0x94f81ea5
  41557a:	out    0x66,eax
  41557c:	(bad)  
  41557d:	lds    ecx,FWORD PTR [esi]
  41557f:	xchg   edx,edx
  415581:	nop
  415582:	cmc    
  415583:	js     0x415522
  415585:	dec    esp
  415586:	push   edi
  415587:	push   edi
  415588:	loopne 0x4155aa
  41558a:	clc    
  41558b:	pop    es
  41558c:	mov    al,0x27
  41558e:	shl    DWORD PTR [eax+ebx*1-0x37c5caf1],cl
  415595:	xchg   edx,eax
  415596:	fisttp QWORD PTR [ecx+0x7f073ce9]
  41559c:	push   0x31
  41559e:	(bad)  
  41559f:	jg     0x41561f
  4155a1:	pop    ss
  4155a2:	neg    bh
  4155a4:	mov    esp,0x531b70ea
  4155a9:	dec    esi
  4155aa:	cmp    al,0xdd
  4155ac:	cmp    eax,eax
  4155ae:	add    eax,0x94ea43ec
  4155b3:	lods   al,BYTE PTR ds:[esi]
  4155b4:	test   esi,edx
  4155b6:	and    BYTE PTR [edx],0x9f
  4155b9:	je     0x41554f
  4155bb:	push   cs
  4155bc:	push   ss
  4155bd:	stos   BYTE PTR es:[edi],al
  4155be:	fstp   TBYTE PTR es:[bx+di+0x24b4]
  4155c4:	adc    al,BYTE PTR [ebx+0x5c]
  4155c7:	lock fild DWORD PTR [eax+ecx*4]
  4155cb:	jmp    0x4155da
  4155cd:	or     al,0xfa
  4155cf:	fisubr DWORD PTR [esi+0x73]
  4155d2:	and    al,0xfc
  4155d4:	push   es
  4155d5:	cmp    eax,0xfb139297
  4155da:	(bad)  
  4155db:	jge    0x415599
  4155dd:	popa   
  4155de:	push   cs
  4155df:	das    
  4155e0:	jne    0x41556f
  4155e2:	inc    ecx
  4155e3:	addr16 mov bh,0xdd
  4155e6:	jae    0x41558c
  4155e8:	push   ebp
  4155e9:	xcrypt-cfb (bad)
  4155ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ec:	aas    
  4155ed:	cmp    cl,0x3b
  4155f0:	sub    ecx,ecx
  4155f2:	test   BYTE PTR [edx-0x11],al
  4155f5:	div    DWORD PTR [eax]
  4155f7:	daa    
  4155f8:	das    
  4155f9:	cdq    
  4155fa:	add    eax,0xad6a273e
  4155ff:	xchg   esp,eax
  415600:	mov    DWORD PTR [ebp-0xa],esi
  415603:	lock mov cl,0x27
  415606:	or     al,0xf7
  415608:	or     eax,0xd6e2e304
  41560d:	mov    bl,0x6a
  41560f:	jp     0x4155cf
  415611:	push   ebp
  415612:	sub    al,0x9
  415614:	fst    st(6)
  415616:	push   es
  415617:	jae    0x415668
  415619:	sub    ch,BYTE PTR [edx-0x5ae5b6b5]
  41561f:	loopne 0x4155f0
  415621:	mov    bh,0x55
  415623:	lea    edx,[ecx]
  415625:	dec    eax
  415626:	sub    ebx,esp
  415628:	inc    eax
  415629:	mov    al,ds:0x8aa114c5
  41562e:	popa   
  41562f:	cs stos DWORD PTR es:[edi],eax
  415631:	lods   al,BYTE PTR ds:[esi]
  415632:	pop    edi
  415633:	adc    bl,ah
  415635:	mov    al,0x4f
  415637:	xchg   ebx,eax
  415638:	addr16 lahf 
  41563a:	xor    eax,0xf622ff4c
  41563f:	xchg   edi,eax
  415640:	jae    0x415698
  415642:	mov    dl,BYTE PTR [eax+0x27]
  415645:	push   ecx
  415646:	inc    ebx
  415647:	sbb    eax,0x369ef304
  41564c:	or     eax,eax
  41564e:	stc    
  41564f:	mov    es,ebx
  415651:	mov    ah,0xc1
  415653:	in     eax,0x42
  415655:	fsubr  QWORD PTR cs:[ebx-0x388e4c46]
  41565c:	outs   dx,DWORD PTR ds:[esi]
  41565d:	mov    eax,ds:0xaefdfc2e
  415662:	mov    BYTE PTR [ebp+0x3e7fbccc],bl
  415668:	loope  0x415609
  41566a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41566b:	(bad)  
  41566c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41566d:	test   al,0x12
  41566f:	jle    0x4156b8
  415671:	sbb    DWORD PTR [eax+0x12a2339e],ebp
  415677:	fnsave [ebx-0x62d22916]
  41567d:	in     eax,0x2f
  41567f:	jmp    0x415614
  415681:	adc    DWORD PTR [eax],ebx
  415683:	sub    DWORD PTR [edx-0x68f0d101],esi
  415689:	das    
  41568a:	sub    eax,0x1df0bffa
  41568f:	ds xchg esi,eax
  415691:	loopne 0x4156f1
  415693:	pop    eax
  415694:	adc    BYTE PTR ds:[eax-0x19d3d34b],0xee
  41569c:	out    0x7c,eax
  41569e:	adc    BYTE PTR [ecx-0x67f60b97],dh
  4156a4:	xchg   esi,eax
  4156a5:	out    0x2b,eax
  4156a7:	outs   dx,BYTE PTR ds:[esi]
  4156a8:	pop    ebx
  4156a9:	sub    al,0x22
  4156ab:	aam    0x7a
  4156ad:	push   ebp
  4156ae:	push   es
  4156af:	test   eax,0xf25cf0ba
  4156b4:	aad    0x8d
  4156b6:	inc    edi
  4156b7:	shl    BYTE PTR [ecx],cl
  4156b9:	or     ecx,esp
  4156bb:	out    0x30,eax
  4156bd:	std    
  4156be:	ret    0x4d4e
  4156c1:	cmp    ch,ah
  4156c3:	test   al,0x9d
  4156c5:	shl    BYTE PTR [ecx],cl
  4156c7:	les    esi,FWORD PTR [ecx]
  4156c9:	pop    ecx
  4156ca:	addr16 pop edi
  4156cc:	ja     0x415726
  4156ce:	adc    DWORD PTR [esi-0x24],edx
  4156d1:	sub    BYTE PTR [edi+esi*4-0x56f1dae1],0x5b
  4156d9:	mov    esi,ebp
  4156db:	xchg   ebx,eax
  4156dc:	and    eax,ebp
  4156de:	mov    ch,0xd0
  4156e0:	or     BYTE PTR [ebp+0x6c],0xc3
  4156e4:	sbb    eax,0x9f0d3b42
  4156e9:	dec    edi
  4156ea:	jno    0x4156e9
  4156ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ed:	cmp    cl,dl
  4156ef:	jae    0x4156cb
  4156f1:	int    0x94
  4156f3:	mov    WORD PTR [eax+eiz*1-0x2b9b570b],ds
  4156fa:	jnp    0x415724
  4156fc:	jns    0x415704
  4156fe:	pushf  
  4156ff:	pop    ebx
  415700:	adc    DWORD PTR [ecx+edx*8-0x73],esp
  415704:	fwait
  415705:	nop
  415706:	fdivr  DWORD PTR [edi-0x50]
  415709:	or     BYTE PTR [eax+0x31f6967f],ch
  41570f:	mov    fs,WORD PTR [edx+ebx*4-0x5e]
  415713:	sbb    BYTE PTR [ebp+0x116415f2],bh
  415719:	nop
  41571a:	add    ch,BYTE PTR gs:[ebx+esi*2-0x7]
  41571f:	mov    esp,0xfa4d550f
  415724:	call   FWORD PTR [ebp+0x49]
  415727:	fisttp WORD PTR [eax-0x1]
  41572a:	fsub   st(1),st
  41572c:	xchg   ebx,eax
  41572d:	dec    ebx
  41572e:	ss in  al,0x6f
  415731:	or     eax,0x202299c7
  415736:	aas    
  415737:	inc    eax
  415738:	mov    al,ds:0x937bf943
  41573d:	mov    gs,WORD PTR fs:[edx-0x21d22311]
  415744:	xchg   edx,eax
  415745:	xor    ecx,DWORD PTR [eax+0x1d345aec]
  41574b:	pop    eax
  41574c:	(bad)  
  41574d:	mov    BYTE PTR [edx-0x38],al
  415750:	sti    
  415751:	add    ecx,DWORD PTR [edi+0x68]
  415754:	shr    BYTE PTR [ebp-0x54],0x86
  415758:	and    bl,0x12
  41575b:	cmp    DWORD PTR [edi-0x6f],ecx
  41575e:	add    DWORD PTR [ebx+0x4f6dc80e],edi
  415764:	test   BYTE PTR [edi-0x4c],0x78
  415768:	xor    al,0x48
  41576a:	sbb    al,0x4b
  41576c:	popf   
  41576d:	(bad)  [edx+0x27]
  415770:	retf   
  415771:	clc    
  415772:	int    0x4b
  415774:	popf   
  415775:	test   DWORD PTR [esi],edi
  415777:	add    eax,0xbcd5432e
  41577c:	pop    edx
  41577d:	sahf   
  41577e:	cmp    al,0x50
  415780:	sub    BYTE PTR [esi],0x48
  415783:	pop    edx
  415784:	or     DWORD PTR [ebx+ebp*4+0x34],0x46
  415789:	jnp    0x415769
  41578b:	sbb    BYTE PTR [esi+0x628f5f2],ah
  415791:	add    DWORD PTR [ebx-0x5d9c5c36],0x4c9642ed
  41579b:	sub    ah,BYTE PTR [edx+0x38]
  41579e:	mov    BYTE PTR [eax-0x70],bl
  4157a1:	or     dh,ch
  4157a3:	xchg   esi,eax
  4157a4:	fild   WORD PTR [edi+0x355e27d9]
  4157aa:	(bad)  
  4157ac:	xchg   DWORD PTR [edi+0x56],eax
  4157af:	xor    al,0x37
  4157b1:	cmp    DWORD PTR [ebx],ebx
  4157b3:	jp     0x4157d1
  4157b5:	pop    esp
  4157b6:	nop
  4157b7:	out    dx,eax
  4157b8:	cld    
  4157b9:	mov    cl,0x40
  4157bb:	push   ds
  4157bc:	retf   0x76ec
  4157bf:	aad    0x2f
  4157c1:	adc    bh,bl
  4157c3:	inc    edx
  4157c4:	mov    ds:0xbe48c0cc,al
  4157c9:	and    eax,0x179344da
  4157ce:	inc    ebp
  4157cf:	jnp    0x415754
  4157d1:	cld    
  4157d2:	jmp    0x61287243
  4157d7:	or     dl,BYTE PTR [esi+0x3005da3]
  4157dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157de:	dec    ebp
  4157df:	adc    ebx,DWORD PTR [esi+0x3727552b]
  4157e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e6:	push   ebp
  4157e7:	push   0x6b
  4157e9:	daa    
  4157ea:	and    DWORD PTR [eax-0x64713db0],0x21
  4157f1:	hlt    
  4157f2:	ret    
  4157f3:	int3   
  4157f4:	gs pop edx
  4157f6:	and    esi,DWORD PTR [edi+0x548bc3a8]
  4157fc:	test   DWORD PTR [ecx+0x699573f2],0xfaac0fba
  415806:	add    al,cl
  415808:	out    dx,eax
  415809:	add    cl,BYTE PTR [ebx]
  41580b:	jge    0x415821
  41580d:	xor    ecx,ecx
  41580f:	or     edx,ecx
  415811:	mov    ecx,DWORD PTR [ebx]
  415813:	mov    DWORD PTR [ebp-0x64],edi
  415816:	mov    edi,DWORD PTR [ebx+0x4]
  415819:	mov    edi,ecx
  41581b:	xor    ecx,ecx
  41581d:	shl    edi,0x1e
  415820:	jmp    0x415daa
  415825:	scas   al,BYTE PTR es:[edi]
  415826:	rcr    BYTE PTR ds:[ebx+0x20],0x59
  41582b:	and    al,0x32
  41582d:	ja     0x41587c
  41582f:	lods   al,BYTE PTR ds:[esi]
  415830:	scas   al,BYTE PTR es:[edi]
  415831:	in     al,0x20
  415833:	js     0x4158a7
  415835:	stc    
  415836:	mov    ebp,0x43d160c
  41583b:	push   ss
  41583c:	push   ss
  41583d:	jp     0x415876
  41583f:	pop    esp
  415840:	out    0xfe,al
  415842:	adc    esi,DWORD PTR [ecx+0x4b32a1a9]
  415848:	adc    edi,esi
  41584a:	jle    0x415886
  41584c:	cdq    
  41584d:	or     eax,0x9cde04da
  415852:	add    BYTE PTR [esi-0x62],0xc7
  415856:	das    
  415857:	dec    eax
  415858:	jo     0x4158ca
  41585a:	jmp    0x4158d7
  41585c:	dec    ebp
  41585d:	sub    ch,BYTE PTR [esp+ecx*1-0x1d471bac]
  415864:	mov    edx,edi
  415866:	jb     0x4158ad
  415868:	sti    
  415869:	int    0xee
  41586b:	cmp    esi,esi
  41586d:	sub    edi,ecx
  41586f:	js     0x41588a
  415871:	ins    BYTE PTR es:[edi],dx
  415872:	loope  0x41587a
  415874:	xlat   BYTE PTR ds:[ebx]
  415875:	inc    edi
  415876:	stos   DWORD PTR es:[edi],eax
  415877:	enter  0xe6c3,0xe8
  41587b:	jecxz  0x415871
  41587d:	leave  
  41587e:	push   esi
  41587f:	test   al,0x44
  415881:	dec    ecx
  415882:	sbb    al,0xde
  415884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415885:	dec    eax
  415886:	sub    eax,0x6be3e237
  41588b:	ret    0x859b
  41588e:	loope  0x415830
  415890:	ins    DWORD PTR es:[edi],dx
  415891:	nop
  415892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415893:	cli    
  415894:	adc    BYTE PTR [esi],bh
  415896:	(bad)  
  415897:	jno    0x4158e9
  415899:	(bad)  
  41589a:	outs   dx,BYTE PTR ds:[si]
  41589c:	add    BYTE PTR [esi+0x78],0x40
  4158a0:	push   ss
  4158a1:	adc    esi,edi
  4158a3:	mov    bl,0xfa
  4158a5:	push   ebp
  4158a6:	sub    bl,BYTE PTR [edi]
  4158a8:	mov    esi,edi
  4158aa:	(bad)  
  4158ab:	pop    ebx
  4158ac:	mov    edx,0x1759da63
  4158b1:	setle  BYTE PTR [edx-0x6f94dc4b]
  4158b8:	popa   
  4158b9:	icebp  
  4158ba:	dec    esi
  4158bb:	add    eax,0xbe89364f
  4158c0:	mov    dh,0x12
  4158c2:	or     al,0x69
  4158c4:	jbe    0x41584b
  4158c6:	ja     0x415869
  4158c8:	in     al,dx
  4158c9:	popf   
  4158ca:	js     0x4158be
  4158cc:	aas    
  4158cd:	fistp  DWORD PTR [edi-0x5f6aadfb]
  4158d3:	pusha  
  4158d4:	mov    esp,0x9a034c93
  4158d9:	mov    ecx,ecx
  4158db:	ds mov ebx,0x1b5b19b0
  4158e1:	jge    0x415872
  4158e3:	rol    edi,1
  4158e5:	pusha  
  4158e6:	(bad)  
  4158e7:	mov    esp,0x7f1ab3ac
  4158ec:	daa    
  4158ed:	adc    BYTE PTR [ebp-0x524b70b0],ch
  4158f3:	mov    edx,0x18d0e5f1
  4158f8:	ds movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  4158fb:	push   edx
  4158fc:	dec    esp
  4158fd:	addr16 aas 
  4158ff:	call   0x53c7:0x1eb7f35
  415906:	xor    al,0xb9
  415908:	sbb    eax,0xf4e37ae1
  41590d:	sbb    DWORD PTR ds:0x13053c4a,esp
  415913:	(bad)  
  415914:	(bad)  
  415915:	sar    BYTE PTR [ecx+0x2e],cl
  415918:	mov    esp,0x6a2e4823
  41591d:	dec    eax
  41591e:	fsubr  DWORD PTR [edi]
  415920:	in     eax,0x0
  415922:	jo     0x415992
  415924:	add    bh,BYTE PTR [edx]
  415926:	or     BYTE PTR [esi+0x71f06bbf],al
  41592c:	xchg   BYTE PTR [ebp-0x19],cl
  41592f:	call   0xd33e6aa6
  415934:	jo     0x41595e
  415936:	dec    ebx
  415937:	inc    sp
  415939:	xor    DWORD PTR [eax-0x6775bcf2],ebx
  41593f:	push   ecx
  415940:	out    0x57,al
  415942:	xchg   ebx,eax
  415943:	xor    dh,BYTE PTR [edi-0x353cddc6]
  415949:	ja     0x415977
  41594b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594c:	xchg   esi,ebx
  41594e:	out    dx,al
  41594f:	xor    esp,DWORD PTR [ecx+0x669913a5]
  415955:	jp     0x41596f
  415957:	xor    eax,0xaf768618
  41595c:	xchg   BYTE PTR [ebx],dh
  41595e:	push   edx
  41595f:	nop
  415960:	xchg   BYTE PTR [edx+0x0],ch
  415963:	xchg   edx,eax
  415964:	mov    edi,0x3af2d331
  415969:	mov    edi,0xfe9d963c
  41596e:	ins    DWORD PTR es:[edi],dx
  41596f:	arpl   bp,di
  415971:	or     BYTE PTR [edi-0x7492f39f],cl
  415977:	mov    edx,0x277013ba
  41597c:	dec    ebx
  41597d:	xchg   BYTE PTR [esi],bh
  41597f:	push   ecx
  415980:	pop    esi
  415981:	hlt    
  415982:	ins    DWORD PTR es:[edi],dx
  415983:	add    al,0x4d
  415985:	ss stos BYTE PTR es:[edi],al
  415987:	jae    0x415952
  415989:	mul    DWORD PTR es:[edi+0x2ac28e61]
  415990:	or     ch,al
  415992:	popa   
  415993:	lds    ebx,FWORD PTR [eax+esi*4]
  415996:	jae    0x415984
  415998:	xchg   esi,eax
  415999:	stos   DWORD PTR es:[edi],eax
  41599a:	(bad)  
  41599b:	jns    0x4159cb
  41599d:	outs   dx,DWORD PTR ds:[esi]
  41599e:	lock aas 
  4159a0:	outs   dx,BYTE PTR ds:[esi]
  4159a1:	xor    ecx,DWORD PTR [edx]
  4159a3:	sub    DWORD PTR [edi+0x76],edi
  4159a6:	mov    fs,eax
  4159a8:	pusha  
  4159a9:	or     bh,BYTE PTR [edx]
  4159ab:	dec    ebx
  4159ac:	mov    DWORD PTR [eax-0x57156ac6],eax
  4159b2:	test   al,0x7f
  4159b4:	cmc    
  4159b5:	jp     0x41598b
  4159b7:	xor    bh,BYTE PTR [eax]
  4159b9:	lea    edi,[eax-0x7]
  4159bc:	scas   al,BYTE PTR es:[edi]
  4159bd:	sub    edx,DWORD PTR [edx-0x2b]
  4159c0:	jg     0x415a1a
  4159c2:	stc    
  4159c3:	pop    ebx
  4159c4:	mov    ds:0xb60d10f1,eax
  4159c9:	inc    eax
  4159ca:	(bad)  
  4159cb:	loope  0x415a48
  4159cd:	(bad)  
  4159ce:	daa    
  4159cf:	out    dx,eax
  4159d0:	xor    eax,0x61535640
  4159d5:	pop    es
  4159d6:	popa   
  4159d7:	mul    BYTE PTR [eax]
  4159d9:	inc    BYTE PTR [eax]
  4159db:	rol    DWORD PTR [edx],cl
  4159dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159de:	js     0x41597c
  4159e0:	push   cs
  4159e1:	in     al,0x2b
  4159e3:	sbb    eax,0xbf7ab466
  4159e8:	jo     0x415a05
  4159ea:	(bad)  [edi-0x7d]
  4159ed:	and    cl,BYTE PTR [edx]
  4159ef:	sbb    DWORD PTR [ecx-0x23],ecx
  4159f2:	nop
  4159f3:	mov    esi,0xa3d0b4df
  4159f8:	cmp    BYTE PTR [edx],ah
  4159fa:	mov    BYTE PTR [ebp+0x1f],ah
  4159fd:	xlat   BYTE PTR ds:[ebx]
  4159fe:	fadd   QWORD PTR [ebx-0x20]
  415a01:	je     0x4159ee
  415a03:	lods   al,BYTE PTR ds:[esi]
  415a04:	icebp  
  415a05:	and    al,0x8a
  415a07:	jnp    0x415a2b
  415a09:	scas   al,BYTE PTR es:[edi]
  415a0a:	sbb    BYTE PTR cs:[eax+0x8],dh
  415a0e:	and    dl,bl
  415a10:	loope  0x415a0b
  415a12:	adc    BYTE PTR [edi],ah
  415a14:	or     bl,BYTE PTR [edx+0x58]
  415a17:	bound  esi,QWORD PTR [edi]
  415a19:	aas    
  415a1a:	dec    edx
  415a1b:	fs es cwde 
  415a1e:	push   eax
  415a1f:	ret    
  415a20:	cdq    
  415a21:	pop    esi
  415a22:	bound  ecx,QWORD PTR [ebp+0x45]
  415a25:	(bad)  
  415a26:	nop
  415a27:	mov    edi,?
  415a29:	jl     0x415a29
  415a2b:	sub    DWORD PTR [esi+esi*8],edi
  415a2e:	jl     0x415a9a
  415a30:	mov    dl,0x78
  415a32:	push   ebx
  415a33:	sbb    BYTE PTR [ecx+0x54443b90],ch
  415a39:	xchg   esi,eax
  415a3a:	lods   eax,DWORD PTR ds:[esi]
  415a3b:	mov    eax,0xaa503fec
  415a40:	mov    dl,0x6e
  415a42:	daa    
  415a43:	rcr    ch,cl
  415a45:	pop    ebx
  415a46:	in     eax,dx
  415a47:	and    ah,BYTE PTR [edi+0x5c54ee11]
  415a4d:	fs xchg ebx,eax
  415a4f:	outs   dx,DWORD PTR ds:[esi]
  415a50:	jle    0x4159d5
  415a52:	sub    BYTE PTR [edi-0x32d4fd30],ch
  415a58:	stos   DWORD PTR es:[edi],eax
  415a59:	sbb    eax,0x1a2ca35b
  415a5e:	sbb    DWORD PTR [edx],edi
  415a60:	adc    eax,0x2784b33c
  415a65:	(bad)  
  415a66:	popf   
  415a67:	sar    DWORD PTR [esi-0x19266bd1],1
  415a6d:	push   ds
  415a6e:	stc    
  415a6f:	push   ds
  415a70:	(bad)  
  415a71:	(bad)  
  415a72:	mov    ebp,0x5f0bc8dc
  415a77:	inc    edx
  415a78:	and    BYTE PTR [ebp+eax*1-0x65],dh
  415a7c:	das    
  415a7d:	mov    edi,0xa019f539
  415a82:	shl    BYTE PTR [di+0x75],1
  415a86:	scas   eax,DWORD PTR es:[edi]
  415a87:	fs std 
  415a89:	bswap  ebx
  415a8b:	aaa    
  415a8c:	sub    al,0x5f
  415a8e:	cmp    al,0xb6
  415a90:	add    esp,DWORD PTR fs:[edx+0x42]
  415a94:	dec    ebx
  415a95:	or     dl,cl
  415a97:	mov    es,WORD PTR [ebx+0x22]
  415a9a:	rcr    BYTE PTR ds:0x8992dc8d,cl
  415aa0:	in     al,dx
  415aa1:	fild   DWORD PTR [esi-0x5e]
  415aa4:	fiadd  DWORD PTR [esi-0x74dc16ed]
  415aaa:	sbb    BYTE PTR [esi-0x7f],bh
  415aad:	mov    esp,edi
  415aaf:	iret   
  415ab0:	shl    BYTE PTR [edi],cl
  415ab2:	loop   0x415b04
  415ab4:	xchg   edi,eax
  415ab5:	xchg   ebx,eax
  415ab6:	inc    ebx
  415ab7:	bound  ebx,QWORD PTR [esi+0x176a7197]
  415abd:	cmp    eax,0x62383a53
  415ac2:	and    al,BYTE PTR [esi]
  415ac4:	sbb    edx,eax
  415ac6:	cmp    dl,ch
  415ac8:	add    al,0x35
  415aca:	and    bh,BYTE PTR [esi-0x56]
  415acd:	or     ah,bl
  415acf:	push   edx
  415ad0:	sub    eax,0x20299d79
  415ad5:	retf   0xca17
  415ad8:	push   es
  415ad9:	out    dx,eax
  415ada:	cmp    BYTE PTR [edi+0x4b585d83],0x97
  415ae1:	int    0x2a
  415ae3:	(bad)  
  415ae4:	gs daa 
  415ae6:	imul   edi,DWORD PTR [esi+0x4e2a23],0x4b2d9422
  415af0:	(bad)  
  415af1:	jnp    0x415b1c
  415af3:	dec    esi
  415af4:	xor    BYTE PTR [eax],al
  415af6:	int    0x38
  415af8:	adc    ebp,0xffffffda
  415afb:	pop    ss
  415afc:	jns    0x415af0
  415afe:	sbb    BYTE PTR [edx-0x27],ch
  415b01:	ins    DWORD PTR es:[edi],dx
  415b02:	imul   edi,DWORD PTR [eax+0x71],0x34aeec41
  415b09:	jnp    0x415ade
  415b0b:	jno    0x415b3a
  415b0d:	xor    BYTE PTR [eax+0x2],bh
  415b10:	adc    edi,ebp
  415b12:	xchg   ecx,eax
  415b13:	int3   
  415b14:	xchg   ebx,eax
  415b15:	inc    edx
  415b16:	sub    DWORD PTR [eax],eax
  415b18:	repnz cmp eax,0x9807cead
  415b1e:	mov    bh,0x20
  415b20:	call   0xecc1:0x7ef4db16
  415b27:	mov    ah,0xa8
  415b29:	es add al,0x77
  415b2c:	in     eax,0xac
  415b2e:	sbb    eax,0x3618f416
  415b33:	cs inc ebp
  415b35:	mov    ah,0x49
  415b37:	sti    
  415b38:	shld   DWORD PTR [ebx],esp,cl
  415b3b:	(bad)  
  415b3c:	mov    eax,ds:0x9d9257c4
  415b41:	inc    edi
  415b42:	jle    0x415b93
  415b44:	mov    ds:0xed21dbcd,al
  415b49:	xchg   edi,eax
  415b4a:	cmp    BYTE PTR cs:[ebp+0x18710202],cl
  415b51:	xchg   ebx,eax
  415b52:	leave  
  415b53:	neg    esi
  415b55:	push   cs
  415b56:	das    
  415b57:	test   eax,0x24f53b6b
  415b5c:	sbb    eax,DWORD PTR [edi+0x653c1093]
  415b62:	jmp    0xe5b2:0x50b3f4c6
  415b69:	int    0x12
  415b6b:	or     eax,0x56eff15a
  415b70:	dec    ebp
  415b71:	jne    0x415bbd
  415b73:	pop    ss
  415b74:	adc    eax,0xc4715ad
  415b79:	pop    edx
  415b7a:	cs call 0xa19d2574
  415b80:	lds    edx,FWORD PTR [ebp+eax*8-0x4a]
  415b84:	pop    eax
  415b85:	fbstp  TBYTE PTR [edi-0x6b]
  415b88:	or     esi,ebx
  415b8a:	fcomp  DWORD PTR [esi]
  415b8c:	and    ebp,eax
  415b8e:	pop    edi
  415b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b90:	lahf   
  415b91:	inc    edi
  415b92:	xor    al,0x13
  415b94:	scas   eax,DWORD PTR es:[edi]
  415b95:	adc    edx,DWORD PTR [esi-0x1a]
  415b98:	pop    es
  415b99:	lea    edx,[ecx-0x43cfc6a6]
  415b9f:	add    al,0x7d
  415ba1:	out    0x5,eax
  415ba3:	xor    ecx,DWORD PTR [edx]
  415ba5:	pop    ss
  415ba6:	loop   0x415b83
  415ba8:	xchg   BYTE PTR [edi+0x5593ac7],cl
  415bae:	push   ss
  415baf:	xchg   esi,eax
  415bb0:	inc    esp
  415bb1:	out    dx,al
  415bb2:	(bad)  
  415bb3:	out    0x29,eax
  415bb5:	iret   
  415bb6:	data16 mov al,ds:0xe4905530
  415bbc:	or     DWORD PTR [ebx+0x1ca83c37],esi
  415bc2:	fstp   TBYTE PTR [ebx+0x6c0c76aa]
  415bc8:	adc    bh,BYTE PTR [eax]
  415bca:	xchg   esi,eax
  415bcb:	rcl    BYTE PTR [esp+ebx*8+0x74],0x6b
  415bd0:	mov    dl,BYTE PTR [ecx-0x198a4cdf]
  415bd6:	imul   BYTE PTR [ebx+0x562650a0]
  415bdc:	test   al,0xf6
  415bde:	jo     0x415c12
  415be0:	stc    
  415be1:	nop
  415be2:	adc    ebp,eax
  415be4:	push   ebx
  415be5:	icebp  
  415be6:	in     eax,dx
  415be7:	in     eax,0xc6
  415be9:	jmp    0x415c49
  415beb:	or     al,cl
  415bed:	rcl    DWORD PTR [esi],0xa2
  415bf0:	fdiv   QWORD PTR [eax]
  415bf2:	push   ebx
  415bf3:	mov    BYTE PTR [edi],al
  415bf5:	cmp    al,0x16
  415bf7:	inc    esp
  415bf8:	mov    cl,0xe
  415bfa:	adc    BYTE PTR [ecx+0x60],dh
  415bfd:	(bad)  
  415bfe:	ins    BYTE PTR es:[edi],dx
  415bff:	mov    eax,0x4b8c4549
  415c04:	or     BYTE PTR [edi+0x1f],bl
  415c07:	(bad)  
  415c08:	lods   eax,DWORD PTR ds:[esi]
  415c09:	mov    cl,0x6f
  415c0b:	jo     0x415c01
  415c0d:	jne    0x415c4b
  415c0f:	arpl   WORD PTR [eax-0x80],bx
  415c12:	jmp    0x415ba9
  415c14:	inc    ebp
  415c15:	xor    bl,BYTE PTR [ecx+0x62]
  415c18:	stos   DWORD PTR es:[edi],eax
  415c19:	xchg   ecx,eax
  415c1a:	sahf   
  415c1b:	add    eax,0x5002ec5b
  415c20:	imul   eax,DWORD PTR [esi],0x5f350151
  415c26:	jmp    0x28a0fe6b
  415c2b:	cli    
  415c2c:	cdq    
  415c2d:	daa    
  415c2e:	lahf   
  415c2f:	mov    ch,0x1b
  415c31:	retf   0x4a13
  415c34:	aad    0xd8
  415c36:	(bad)  
  415c37:	mov    BYTE PTR [ebp-0x57],dh
  415c3a:	and    ebx,ebp
  415c3c:	aad    0x2f
  415c3e:	dec    ecx
  415c3f:	sbb    al,0xe7
  415c41:	mov    DWORD PTR [eax-0x7d],esp
  415c44:	xchg   ecx,eax
  415c45:	mov    cl,0x50
  415c47:	cwde   
  415c48:	push   ds
  415c49:	loope  0x415c32
  415c4b:	push   eax
  415c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c4d:	adc    al,dh
  415c4f:	mov    cl,0xe9
  415c51:	and    bl,BYTE PTR [ecx-0xc]
  415c54:	sub    eax,0x79b4a214
  415c59:	jp     0x415c42
  415c5b:	add    DWORD PTR [ebx],0x726124b2
  415c61:	push   ecx
  415c62:	and    BYTE PTR [ebp-0x65],0x93
  415c66:	lea    esi,ds:0xaee8fd1d
  415c6c:	outs   dx,DWORD PTR ds:[esi]
  415c6d:	lock (bad) [edi-0x8536690]
  415c74:	repz adc DWORD PTR [ebx+0x1],eax
  415c78:	jmp    0x415cd3
  415c7a:	ror    esp,1
  415c7c:	xor    bh,BYTE PTR [edi+0x19567886]
  415c82:	or     DWORD PTR [ebx+0x75],edx
  415c85:	arpl   bp,cx
  415c87:	xchg   ebx,eax
  415c88:	or     DWORD PTR [eax+0x7029b2a9],edx
  415c8e:	jns    0x415c44
  415c90:	mov    ecx,0x8fd9d496
  415c95:	jae    0x415ce7
  415c97:	jnp    0x415c86
  415c99:	(bad)  
  415c9a:	ja     0x415c78
  415c9c:	lock cmp ebx,eax
  415c9f:	cmp    bh,BYTE PTR [edi-0x6d]
  415ca2:	cmp    bh,BYTE PTR [eax+0x33b5b87c]
  415ca8:	stos   DWORD PTR es:[edi],eax
  415ca9:	xor    eax,0xfc7d622e
  415cae:	retf   
  415caf:	outs   dx,DWORD PTR ds:[esi]
  415cb0:	mov    ah,0xb7
  415cb2:	mov    fs,WORD PTR [ecx+0x558b9ac1]
  415cb8:	std    
  415cb9:	or     ah,al
  415cbb:	sbb    BYTE PTR [esi-0xe],ch
  415cbe:	lock not DWORD PTR [ebx]
  415cc1:	mov    DWORD PTR [ebp+ecx*8+0x2d234c56],ebp
  415cc8:	ss in  eax,0xb6
  415ccb:	in     al,0xd8
  415ccd:	dec    esp
  415cce:	cdq    
  415ccf:	test   eax,0x1097bbb3
  415cd4:	paddd  mm4,QWORD PTR [edi-0x60d35bb1]
  415cdb:	sbb    eax,0xb7e92603
  415ce0:	repnz xor ch,BYTE PTR [edi+0x22]
  415ce4:	mov    ecx,0x141c3fbd
  415ce9:	push   cs
  415cea:	dec    ebp
  415ceb:	stos   BYTE PTR es:[edi],al
  415cec:	and    ch,BYTE PTR [edi-0x47]
  415cef:	adc    dl,BYTE PTR [edi+0x3f4af6f5]
  415cf5:	dec    ebp
  415cf6:	mov    edi,0x9a425643
  415cfb:	mov    bl,0x7
  415cfd:	mov    es,WORD PTR [edi]
  415cff:	cli    
  415d00:	adc    edx,ebp
  415d02:	cs jae 0x415cd8
  415d05:	retf   0xabe1
  415d08:	xor    ebp,DWORD PTR [ecx]
  415d0a:	ss cmc 
  415d0c:	push   edx
  415d0d:	cmp    DWORD PTR [ebp+ecx*1-0xa],ebx
  415d11:	mov    dh,0x84
  415d13:	mov    edx,0x4e25ef57
  415d18:	ja     0x415d93
  415d1a:	in     al,dx
  415d1b:	in     eax,dx
  415d1c:	pop    eax
  415d1d:	mov    eax,0x88fdacc
  415d22:	dec    esp
  415d23:	call   0x97a2:0x21640d19
  415d2a:	add    al,0x14
  415d2c:	push   ss
  415d2d:	mov    ecx,DWORD PTR ds:0x89de9119
  415d33:	adc    BYTE PTR [eax-0x5c],0x30
  415d37:	dec    edx
  415d38:	out    dx,al
  415d39:	mov    ds:0x3842944f,al
  415d3e:	pop    ds
  415d3f:	cdq    
  415d40:	in     eax,dx
  415d41:	ins    BYTE PTR es:[edi],dx
  415d42:	call   0x3cd3:0x52b9e397
  415d49:	inc    eax
  415d4a:	cwde   
  415d4b:	mov    bl,0xfa
  415d4d:	lods   al,BYTE PTR ds:[esi]
  415d4e:	loope  0x415d5d
  415d50:	and    DWORD PTR [esi],ebx
  415d52:	fidiv  DWORD PTR [esi+0x8]
  415d55:	ds jo  0x415cff
  415d58:	vmread ebx,ebp
  415d5b:	and    eax,0x63d8a908
  415d60:	ret    0x3356
  415d63:	sbb    al,BYTE PTR [edx]
  415d65:	fxch   st(6)
  415d67:	in     al,dx
  415d68:	add    edx,DWORD PTR [edx-0x7]
  415d6b:	test   BYTE PTR [esi+0x4d101dc6],ah
  415d71:	in     al,dx
  415d72:	push   ss
  415d73:	mov    cl,0x92
  415d75:	js     0x415cfa
  415d77:	iret   
  415d78:	out    0x30,al
  415d7a:	mov    esi,0x1aa90109
  415d7f:	add    DWORD PTR [esi],esi
  415d81:	pusha  
  415d82:	mov    bh,bl
  415d84:	or     eax,0xf1fbfd1d
  415d89:	ror    DWORD PTR [eax],cl
  415d8b:	mov    ebx,es
  415d8d:	(bad)  [eax-0x7fae1ebf]
  415d93:	sub    ebx,DWORD PTR [ebp+edx*2-0x4ba3ff05]
  415d9a:	inc    edx
  415d9b:	mov    ch,0x62
  415d9d:	lea    edx,[edi]
  415d9f:	dec    eax
  415da0:	sub    DWORD PTR [edx+ecx*8+0xd],0x3c
  415da5:	fidiv  DWORD PTR ds:[eax]
  415da8:	mov    ecx,0x89f83346
  415dad:	dec    ebp
  415dae:	adc    cl,ch
  415db0:	test   DWORD PTR ds:0x8a400000,eax
  415db6:	dec    esp
  415db7:	cmp    edi,DWORD PTR [ecx+eax*2]
  415dba:	inc    eax
  415dbb:	nop
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	shl    eax,0x74
  415dc0:	inc    ecx
  415dc1:	in     eax,0x5e
  415dc3:	mov    dl,0x26
  415dc5:	mov    bl,0xc
  415dc7:	push   ss
  415dc8:	cmp    eax,0xb1161604
  415dcd:	and    dl,0xe7
  415dd0:	mov    dl,0x74
  415dd2:	dec    esi
  415dd3:	imul   ebp,ecx,0x75
  415dd6:	sbb    al,0x68
  415dd8:	pop    ecx
  415dd9:	dec    edi
  415dda:	pop    eax
  415ddb:	clc    
  415ddc:	push   ebp
  415ddd:	cmp    dl,dh
  415ddf:	mov    eax,DWORD PTR [edi+0x7]
  415de2:	mov    edx,0x40bb0e0f
  415de7:	mov    dl,BYTE PTR [edi-0x39da0149]
  415ded:	push   0x6fcca3e7
  415df2:	clc    
  415df3:	jb     0x415e1e
  415df5:	and    ebx,DWORD PTR [ebx]
  415df7:	mov    edx,0x2dedd99d
  415dfd:	popf   
  415dfe:	lods   eax,DWORD PTR ds:[esi]
  415dff:	imul   esi,ecx,0x5b3603a7
  415e05:	and    cl,BYTE PTR [ebp-0x54]
  415e08:	js     0x415de2
  415e0a:	pop    esi
  415e0b:	jl     0x415de5
  415e0d:	es jmp 0x26d13a5f
  415e13:	neg    DWORD PTR [ebx]
  415e15:	mov    ebp,0xbfe9876c
  415e1a:	push   edi
  415e1b:	imul   edi,ecx,0x39
  415e1e:	cmp    bl,dl
  415e20:	push   0x12
  415e22:	loop   0x415e3d
  415e24:	push   0xffffffc1
  415e26:	ins    DWORD PTR es:[edi],dx
  415e27:	test   al,0x3d
  415e29:	data16 loope 0x415ded
  415e2c:	lods   al,BYTE PTR ds:[esi]
  415e2d:	inc    ebp
  415e2e:	adc    BYTE PTR [edi-0x408d8881],bh
  415e34:	push   ebp
  415e35:	jge    0x415e81
  415e37:	stc    
  415e38:	jg     0x415e97
  415e3a:	jg     0x415e9d
  415e3c:	in     al,0x37
  415e3e:	cmp    al,0xa0
  415e40:	rcl    DWORD PTR [ebp+0x39741c7c],0xc8
  415e47:	pop    esp
  415e48:	int3   
  415e49:	cs loop 0x415e6e
  415e4c:	das    
  415e4d:	in     al,dx
  415e4e:	rol    DWORD PTR [edi],1
  415e50:	or     eax,0xed5cb7f0
  415e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e56:	inc    esi
  415e57:	das    
  415e58:	mov    ah,0x87
  415e5a:	int3   
  415e5b:	xchg   bh,al
  415e5d:	and    edx,DWORD PTR [ebp+0x70]
  415e60:	inc    ebp
  415e61:	daa    
  415e62:	mov    edi,0x419ae893
  415e67:	lea    esp,[ebx]
  415e69:	and    eax,0x37e5b9da
  415e6e:	cmp    DWORD PTR [esi-0x68],esp
  415e71:	dec    ebx
  415e72:	call   0x8342:0x124a4840
  415e79:	mov    edi,0xa2c22272
  415e7e:	adc    ch,BYTE PTR [edi-0x2c]
  415e81:	sbb    esp,DWORD PTR [ebx-0x2178c866]
  415e87:	xchg   ebp,eax
  415e88:	push   edx
  415e89:	les    esi,FWORD PTR cs:[edx-0x2b774252]
  415e90:	xchg   ecx,eax
  415e91:	retf   
  415e92:	ins    BYTE PTR es:[edi],dx
  415e93:	imul   esi,DWORD PTR [edx+0x2d],0x54261444
  415e9a:	push   0x7e9589fe
  415e9f:	(bad)  
  415ea0:	or     BYTE PTR [ecx+ebx*1],dh
  415ea3:	out    0x7e,eax
  415ea5:	jle    0x415f17
  415ea7:	mov    esp,0xfe54b632
  415eac:	pop    esi
  415ead:	fs mov cl,0x2e
  415eb0:	dec    esi
  415eb1:	mov    eax,ds:0x102eeb1d
  415eb6:	push   ds
  415eb7:	fcom   DWORD PTR [edx-0x55]
  415eba:	xor    DWORD PTR [ebx-0x16e03a13],ebp
  415ec0:	(bad)  
  415ec1:	ror    DWORD PTR [ebx+0x329cdc31],1
  415ec7:	jmp    0x415eea
  415ec9:	jge    0x415e71
  415ecb:	imul   BYTE PTR [eax+0x11]
  415ece:	pushf  
  415ecf:	push   esi
  415ed0:	adc    DWORD PTR [edx+edi*4+0x2cdc7bde],edi
  415ed7:	(bad)  
  415ed8:	push   edx
  415ed9:	dec    eax
  415eda:	call   0xb3ce3e5b
  415edf:	jbe    0x415ee0
  415ee1:	pushf  
  415ee2:	ret    
  415ee3:	xor    al,0xc9
  415ee5:	jl     0x415e9f
  415ee7:	test   ah,0x2b
  415eea:	lahf   
  415eeb:	inc    ecx
  415eec:	cmp    eax,0xdbcef910
  415ef1:	in     al,dx
  415ef2:	mov    WORD PTR ds:0x525257d5,ss
  415ef8:	cmp    ebp,DWORD PTR ds:[esi]
  415efb:	xor    esi,esi
  415efd:	jp     0x415e9e
  415eff:	lea    ebp,[ecx-0x6]
  415f02:	(bad)  
  415f03:	add    eax,0xe71ee655
  415f08:	loop   0x415f62
  415f0a:	or     eax,0x49b9c692
  415f0f:	fidivr DWORD PTR [eax-0x5d]
  415f12:	sub    ebx,DWORD PTR [ebx+ebx*4+0x4]
  415f16:	test   DWORD PTR [edx],edx
  415f18:	out    0xc4,al
  415f1a:	xchg   edx,eax
  415f1b:	lods   al,BYTE PTR ds:[esi]
  415f1c:	fiadd  WORD PTR [edi+ebx*2+0x24189174]
  415f23:	repnz pop ebp
  415f25:	cli    
  415f26:	sub    esp,DWORD PTR [ebp+0x20670498]
  415f2c:	call   FWORD PTR [esi-0x61]
  415f2f:	rcl    DWORD PTR [edx-0x1150d5f6],0x77
  415f36:	sbb    eax,0x3784498b
  415f3b:	ror    eax,0x1c
  415f3e:	mov    dh,0xc
  415f40:	xchg   edx,eax
  415f41:	outs   dx,DWORD PTR ds:[esi]
  415f42:	lds    ecx,FWORD PTR [ecx+0x6760ba14]
  415f48:	mov    WORD PTR [eax+0x7a842b54],cs
  415f4e:	(bad)  
  415f50:	stc    
  415f51:	adc    eax,0xe290a8a5
  415f56:	dec    ecx
  415f57:	je     0x415edd
  415f59:	out    0xc9,al
  415f5b:	in     al,0x7a
  415f5d:	(bad)  
  415f5e:	mov    al,0x5f
  415f60:	push   ebp
  415f61:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f63:	push   edx
  415f64:	loop   0x415f6d
  415f66:	pop    es
  415f67:	jnp    0x415fd6
  415f69:	push   ss
  415f6a:	test   BYTE PTR [eax+0x1cfb0405],0x4c
  415f71:	out    dx,al
  415f72:	mov    ecx,0x8a6d32a4
  415f77:	sbb    edx,esi
  415f79:	lock add DWORD PTR [ecx+ecx*4-0x5f2cf375],0xffffff80
  415f82:	sbb    al,0xa0
  415f84:	sub    DWORD PTR [ecx+0x46],edi
  415f87:	retf   0x1035
  415f8a:	fs sahf 
  415f8c:	dec    esp
  415f8d:	push   esi
  415f8e:	pop    esp
  415f8f:	imul   edx,DWORD PTR [ebx+0x30878917],0xfffffffb
  415f96:	push   ss
  415f97:	int    0x2a
  415f99:	or     DWORD PTR [esi],edx
  415f9b:	into   
  415f9c:	jno    0x415f76
  415f9e:	pop    es
  415f9f:	arpl   bx,bp
  415fa1:	dec    ebx
  415fa2:	push   ecx
  415fa3:	lods   al,BYTE PTR ds:[esi]
  415fa4:	inc    esi
  415fa5:	push   0x6eef0bb9
  415faa:	pop    esi
  415fab:	mov    ds:0xd5b280a4,eax
  415fb0:	push   ebp
  415fb1:	rcr    DWORD PTR [ebx],0xec
  415fb4:	emms   
  415fb6:	loope  0x415f65
  415fb8:	xchg   edx,eax
  415fb9:	and    ebp,ecx
  415fbb:	pop    edi
  415fbc:	inc    esp
  415fbd:	ja     0x416013
  415fbf:	sbb    eax,DWORD PTR [ebx+0x55]
  415fc2:	pop    esi
  415fc3:	mov    eax,ds:0xa35c5c25
  415fc8:	pop    es
  415fc9:	aas    
  415fca:	cmp    al,0xf7
  415fcc:	adc    ebx,DWORD PTR [edx-0x7d9655c3]
  415fd2:	lds    edx,FWORD PTR [ebx+ebp*8-0x44b9798f]
  415fd9:	jmp    0xc1bb:0xbc28ee53
  415fe0:	or     eax,0x380a5e6b
  415fe5:	retf   
  415fe6:	xor    DWORD PTR [ebx+ebp*2+0x64683710],esp
  415fed:	dec    edx
  415fee:	(bad)  
  415fef:	fwait
  415ff0:	pop    esi
  415ff1:	add    DWORD PTR [edi-0x1074ef4a],edi
  415ff7:	push   ds
  415ff8:	sub    edx,DWORD PTR [edx]
  415ffa:	pop    esi
  415ffb:	es cli 
  415ffd:	sti    
  415ffe:	test   BYTE PTR [esi+0x19],dl
  416001:	xor    al,ah
  416003:	add    eax,0x80fd542
  416008:	pop    edx
  416009:	ins    BYTE PTR es:[edi],dx
  41600a:	mov    edx,0xcbbeda7c
  41600f:	js     0x416082
  416011:	sub    al,0x3a
  416013:	push   edx
  416014:	pop    ebx
  416015:	shl    BYTE PTR [ebx-0x2e735320],cl
  41601b:	ret    
  41601c:	sbb    eax,DWORD PTR [eax+0x74]
  41601f:	cmp    BYTE PTR [edi+0x4e],al
  416022:	mov    al,0xb0
  416024:	push   0xedf3333d
  416029:	pop    esi
  41602a:	retf   0xd922
  41602d:	jne    0x41603e
  41602f:	imul   esp,DWORD PTR [edi+esi*4-0x32],0xffffffc1
  416034:	mov    eax,0xa5936f09
  416039:	(bad)
  41603d:	mov    dl,BYTE PTR [ecx+0x6be9f4e8]
  416043:	sub    al,0x4f
  416045:	xor    dl,BYTE PTR [edx-0x2c]
  416048:	jne    0x415fdf
  41604a:	mov    ds:0x5430ee7f,al
  41604f:	adc    bh,BYTE PTR [edi+0x66d3b7b0]
  416055:	je     0x415fe5
  416057:	mov    BYTE PTR [eax+0x336641a5],al
  41605d:	popf   
  41605e:	daa    
  41605f:	mov    ebx,0xa935ae8a
  416064:	sbb    edx,DWORD PTR [edi+0x27]
  416067:	cmp    esp,DWORD PTR [edi+ebx*8]
  41606a:	ror    ebx,1
  41606c:	aas    
  41606d:	inc    edx
  41606e:	mov    al,ds:0x470df5e2
  416073:	inc    edi
  416074:	mul    BYTE PTR [eax]
  416076:	ss scas al,BYTE PTR es:[edi]
  416078:	or     BYTE PTR [edx],dl
  41607a:	lods   al,BYTE PTR ds:[esi]
  41607b:	sub    BYTE PTR [esi],ah
  41607d:	xchg   edi,eax
  41607e:	xor    DWORD PTR [ecx+0x4e1f01fb],0xd5a7633b
  416088:	jmp    0x41608e
  41608a:	xor    al,0x78
  41608c:	shrd   DWORD PTR [ebx-0x21],ebp,0xab
  416091:	pop    eax
  416092:	(bad)  
  416093:	sbb    al,0x5e
  416095:	dec    esi
  416096:	jns    0x416018
  416098:	jle    0x416038
  41609a:	in     eax,dx
  41609b:	or     DWORD PTR ds:0x3a6e6a57,ebp
  4160a1:	out    dx,eax
  4160a2:	daa    
  4160a3:	or     cl,ch
  4160a5:	sbb    dh,BYTE PTR [edi]
  4160a7:	sbb    al,0x2f
  4160a9:	out    0xa2,al
  4160ab:	sub    BYTE PTR [esi],ch
  4160ad:	cmp    edi,DWORD PTR [edx-0x1729b25]
  4160b3:	aam    0xe3
  4160b5:	es mov edi,0x888de97a
  4160bb:	push   ds
  4160bc:	rcr    DWORD PTR [edx+0x460810],0xd2
  4160c3:	(bad)  
  4160c4:	inc    esi
  4160c5:	ror    DWORD PTR [edi+0xb735419],1
  4160cb:	or     DWORD PTR [esi+0xb],eax
  4160ce:	bndldx bnd3,[edx+0x10]
  4160d2:	fisttp QWORD PTR [eax+0x73]
  4160d5:	or     al,0x20
  4160d7:	es mov ebp,0x6ed8dec
  4160dd:	dec    esp
  4160de:	aas    
  4160df:	mov    edx,0xdf5e5e88
  4160e4:	clc    
  4160e5:	out    dx,eax
  4160e6:	push   es
  4160e7:	pop    ss
  4160e8:	sub    BYTE PTR [ecx+ebp*8-0x12],ch
  4160ec:	pop    esi
  4160ed:	mov    cs,eax
  4160ef:	out    dx,al
  4160f0:	test   BYTE PTR [ebx+ebx*8],0xb8
  4160f4:	xor    al,0x2d
  4160f6:	xor    eax,0xf017f705
  4160fb:	inc    ebp
  4160fc:	mov    ebp,0xeb440900
  416101:	mov    BYTE PTR gs:[esi+0x3d],ah
  416105:	mov    ds:0x29c02423,al
  41610a:	xchg   ebp,eax
  41610b:	mov    bh,0xa8
  41610d:	rcr    DWORD PTR [ecx+0x2c],0x34
  416111:	sbb    bl,0x2d
  416114:	mov    esi,0x8ce61144
  416119:	mov    eax,0xcb37c4a5
  41611e:	xchg   ecx,eax
  41611f:	int    0x98
  416121:	jb     0x41619d
  416123:	sub    eax,0x3e4f6db5
  416128:	in     al,0x4c
  41612a:	mov    esi,0xe97c3788
  41612f:	pop    es
  416130:	(bad)  
  416131:	push   edi
  416132:	hlt    
  416133:	add    BYTE PTR [ebp+0x6c],al
  416136:	xor    BYTE PTR [eax+0x1f],cl
  416139:	iret   
  41613a:	and    eax,ebx
  41613c:	lods   eax,DWORD PTR ds:[esi]
  41613d:	js     0x416169
  41613f:	or     DWORD PTR [ebp-0x7],edx
  416142:	popf   
  416143:	imul   edx,DWORD PTR [ecx],0x19882732
  416149:	cmp    ah,BYTE PTR [edx]
  41614b:	xchg   esp,eax
  41614c:	cdq    
  41614d:	sbb    al,0xbb
  41614f:	cmp    DWORD PTR [esi+esi*1-0x6c],edi
  416153:	int3   
  416154:	test   DWORD PTR [esi-0x32],esp
  416157:	outs   dx,DWORD PTR ds:[esi]
  416158:	adc    DWORD PTR [edi],esp
  41615a:	mov    BYTE PTR [ebp-0x618e4a43],bl
  416160:	test   DWORD PTR [edi],0x5e4e07a6
  416166:	pop    eax
  416167:	sub    bl,BYTE PTR [eax+0x4f]
  41616a:	cmp    eax,0x2dbe4b5f
  41616f:	mov    esp,0xb812e054
  416174:	retf   
  416175:	ins    BYTE PTR es:[edi],dx
  416176:	xchg   esp,eax
  416177:	cdq    
  416178:	mov    cs,WORD PTR [ebx-0x43503502]
  41617e:	inc    ebx
  41617f:	push   es
  416180:	je     0x416144
  416182:	sub    BYTE PTR [edx],bl
  416184:	in     al,0x4d
  416186:	scas   eax,DWORD PTR es:[edi]
  416187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416188:	xchg   al,dh
  41618a:	jmp    0x416179
  41618c:	neg    esi
  41618e:	mov    ecx,0xf9f02e03
  416193:	mov    ds,ecx
  416195:	call   0xce13:0xef4324a9
  41619c:	cs mov dh,0x33
  41619f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a0:	das    
  4161a1:	(bad)  [edi+0x23]
  4161a4:	and    al,0x81
  4161a6:	jbe    0x416147
  4161a8:	or     ecx,eax
  4161aa:	enter  0x2b98,0xc4
  4161ae:	add    BYTE PTR [edx+0x74019e21],dh
  4161b4:	jge    0x41620b
  4161b6:	mov    ebx,0xe80b96d5
  4161bb:	pop    ss
  4161bc:	inc    ecx
  4161bd:	fadd   DWORD PTR [edi+0x7c817ae9]
  4161c3:	cmp    eax,0xdd8b5fe8
  4161c8:	lds    esp,FWORD PTR [eax+0x4]
  4161cb:	sbb    ebx,DWORD PTR [eax+0xbe84019]
  4161d1:	ja     0x41617c
  4161d3:	cmp    BYTE PTR [ebx+0x74],0x22
  4161d7:	jae    0x416257
  4161d9:	mov    ebx,0xef5b43ba
  4161de:	dec    edx
  4161df:	jg     0x41623f
  4161e1:	gs push ds
  4161e3:	imul   ebp,DWORD PTR [edx+0x10538c2],0xed7b977b
  4161ed:	cli    
  4161ee:	imul   edi,esp,0x26a8dee
  4161f4:	lahf   
  4161f5:	pop    ds
  4161f6:	clc    
  4161f7:	imul   ecx,DWORD PTR [eax+0xa],0x1a
  4161fb:	push   ds
  4161fc:	scas   eax,DWORD PTR es:[edi]
  4161fd:	out    dx,al
  4161fe:	mov    ds:0xbcec738c,eax
  416203:	xchg   edi,eax
  416204:	mov    bl,0x2f
  416206:	add    BYTE PTR ds:0xdff65d5a,dl
  41620c:	(bad)  
  41620e:	sub    ebp,DWORD PTR [ecx+0x25af752e]
  416214:	dec    esp
  416215:	sbb    al,0xb2
  416217:	mov    esi,0x7d789bbb
  41621c:	pop    esp
  41621d:	out    dx,eax
  41621e:	mov    esi,0xe2fb2709
  416223:	sahf   
  416224:	repz lds edx,FWORD PTR [ebx]
  416227:	test   DWORD PTR [edi],ebx
  416229:	test   al,0x82
  41622b:	out    0xbd,al
  41622d:	in     eax,dx
  41622e:	arpl   sp,ax
  416230:	cwde   
  416231:	repnz or al,0xb9
  416234:	call   0xf9ef:0x90f5c757
  41623b:	push   ds
  41623c:	mov    cl,0x61
  41623e:	pop    ecx
  41623f:	dec    esp
  416240:	shl    DWORD PTR [ecx+edi*1+0x2f2d84d9],0xb8
  416248:	pop    ebx
  416249:	pop    ecx
  41624a:	lock dec esi
  41624c:	push   esi
  41624d:	call   0xb50b:0x56c59484
  416254:	outs   dx,BYTE PTR ds:[esi]
  416255:	sub    ebx,DWORD PTR ds:0x1d1da3ab
  41625b:	jns    0x4162ac
  41625d:	gs push 0x172d89ce
  416263:	ja     0x41629f
  416265:	jle    0x41629d
  416267:	jmp    0x4162ce
  416269:	dec    esp
  41626a:	hlt    
  41626b:	xchg   edx,eax
  41626c:	pushf  
  41626d:	xchg   edx,eax
  41626e:	mov    eax,0x4fb966de
  416273:	loopne 0x4162a8
  416275:	mov    ebx,ebp
  416277:	inc    ecx
  416278:	inc    ebx
  41627a:	lea    edi,[ecx+0x43]
  41627d:	std    
  41627e:	fwait
  41627f:	mov    eax,0x5a622f92
  416284:	and    DWORD PTR [di-0x6d],ebp
  416288:	in     eax,dx
  416289:	mov    ds:0x3ea0d83,al
  41628e:	sub    bh,BYTE PTR [ebx+0xa]
  416291:	stc    
  416292:	mov    bh,BYTE PTR [esi-0x5f]
  416295:	jae    0x416294
  416297:	adc    dh,al
  416299:	retf   0xdf4
  41629c:	scas   eax,DWORD PTR es:[edi]
  41629d:	cmp    DWORD PTR [edx+0x39],edx
  4162a0:	not    DWORD PTR [ecx+0x23]
  4162a3:	not    DWORD PTR [esi-0x12]
  4162a6:	sar    DWORD PTR [eax+0x523f6bdb],1
  4162ac:	dec    ecx
  4162ad:	fidiv  DWORD PTR [esi*8-0x32a1a279]
  4162b4:	inc    ecx
  4162b5:	adc    al,0x6
  4162b7:	loopne 0x416315
  4162b9:	test   DWORD PTR [ecx+0x2a038aae],eax
  4162bf:	xor    al,0xb5
  4162c1:	inc    eax
  4162c2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c5:	or     edx,DWORD PTR [edx]
  4162c7:	out    0xf,al
  4162c9:	into   
  4162ca:	pop    esp
  4162cb:	lds    esi,FWORD PTR [ecx]
  4162cd:	arpl   WORD PTR [esi],bx
  4162cf:	xlat   BYTE PTR ds:[ebx]
  4162d0:	pop    ebp
  4162d1:	pop    ebp
  4162d2:	out    dx,al
  4162d3:	push   edx
  4162d4:	fisubr WORD PTR [ebx]
  4162d6:	xor    bl,BYTE PTR [eax+0x3442f893]
  4162dc:	jl     0x41631d
  4162de:	dec    ebx
  4162df:	mov    esp,0x63f8a80
  4162e4:	ficomp DWORD PTR [ebx+0x15]
  4162e7:	push   es
  4162e8:	fadd   st,st(6)
  4162ea:	in     al,0xf1
  4162ec:	sub    eax,0x2ec0d78b
  4162f1:	jmp    0x1625c848
  4162f6:	xor    ebp,DWORD PTR [edx-0x7059254e]
  4162fc:	push   esi
  4162fd:	add    al,0x34
  4162ff:	fs adc eax,0xcdecc4aa
  416305:	in     eax,dx
  416306:	jmp    0xeb5d:0xe8c2f848
  41630d:	lock mov WORD PTR [edi],ss
  416310:	mov    bl,0x4c
  416312:	cmp    al,0xfb
  416314:	imul   esp,DWORD PTR [ebx-0x8fc1b40],0xfffffff9
  41631b:	cmc    
  41631c:	fbstp  TBYTE PTR [eax+0x3a]
  41631f:	cs jge 0x4162f7
  416322:	xchg   esi,eax
  416323:	push   ds
  416324:	xor    eax,0x31050c7a
  416329:	icebp  
  41632a:	leave  
  41632b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41632c:	dec    di
  41632e:	fdivp  st(4),st
  416330:	stos   DWORD PTR es:[edi],eax
  416331:	cli    
  416332:	push   ss
  416333:	sar    DWORD PTR [edx+0x32],cl
  416336:	mov    ch,0x50
  416338:	repz mov ecx,DWORD PTR [ebx]
  41633b:	mov    DWORD PTR [ebp+0x14],edi
  41633e:	mov    edi,DWORD PTR [ebx+0x4]
  416341:	xor    ecx,0xba699573
  416347:	xor    edi,0x9c0a89d8
  41634d:	shrd   ecx,edi,0x2
  416351:	or     ecx,DWORD PTR [ebp+0x10]
  416354:	shr    edi,0x2
  416357:	mov    DWORD PTR [ebp-0x70],ecx
  41635a:	mov    ecx,edi
  41635c:	or     ecx,DWORD PTR [ebp+0x14]
  41635f:	mov    DWORD PTR [ebp+0xc],edi
  416362:	cmp    edx,DWORD PTR [ebp-0x70]
  416365:	jne    0x41a17f
  41636b:	cmp    DWORD PTR [ebp-0x64],ecx
  41636e:	jne    0x41a17f
  416374:	jmp    0x41854e
  416379:	mov    eax,DWORD PTR [esi]
  41637b:	mov    edx,DWORD PTR [esi+0x4]
  41637e:	mov    eax,DWORD PTR [esi]
  416380:	mov    edx,DWORD PTR [esi+0x4]
  416383:	jmp    0x41690d
  416388:	and    DWORD PTR [ecx-0x37],ebp
  41638b:	mov    esp,0x68181cb9
  416390:	loopne 0x4163ad
  416392:	lods   al,BYTE PTR ds:[esi]
  416393:	scas   al,BYTE PTR es:[edi]
  416394:	clc    
  416395:	mov    eax,ds:0xaf4d7274
  41639a:	or     al,0x16
  41639c:	cmp    eax,0xca161604
  4163a1:	sub    ebp,DWORD PTR [edx-0x1a]
  4163a4:	xor    al,0x15
  4163a6:	mov    ebp,edx
  4163a8:	loop   0x41634b
  4163aa:	push   eax
  4163ab:	mov    ds:0x50a9e8dd,eax
  4163b0:	shl    BYTE PTR ds:0xde031459,0x56
  4163b7:	or     al,0xec
  4163b9:	int    0xf4
  4163bb:	cmp    DWORD PTR [edi],ebx
  4163bd:	leave  
  4163be:	imul   DWORD PTR [edx]
  4163c0:	pusha  
  4163c1:	(bad)  [ebx-0x716d5d86]
  4163c7:	xor    BYTE PTR [ebx-0x7d],al
  4163ca:	in     eax,dx
  4163cb:	or     DWORD PTR [esi],edx
  4163cd:	jb     0x4163c8
  4163cf:	rcl    BYTE PTR [eax+0x251935ac],0x24
  4163d6:	inc    ecx
  4163d7:	shr    edi,0xae
  4163da:	sub    ah,BYTE PTR [eax+0x14]
  4163dd:	jle    0x416386
  4163df:	mov    ds:0x2213542d,eax
  4163e4:	ret    0xa16e
  4163e7:	xor    al,0x4
  4163e9:	xor    dl,BYTE PTR [edi+ebp*8-0x69]
  4163ed:	push   edi
  4163ee:	bound  ebx,QWORD PTR [esi-0x7d1dc5c0]
  4163f4:	scas   al,BYTE PTR es:[edi]
  4163f5:	xor    al,0x46
  4163f7:	cmp    BYTE PTR [ecx+0x34fbb8ed],bh
  4163fd:	stc    
  4163fe:	loope  0x4163df
  416400:	test   eax,0x59b988ef
  416405:	std    
  416406:	rdtsc  
  416408:	xchg   esp,eax
  416409:	dec    ebx
  41640a:	ins    DWORD PTR es:[edi],dx
  41640b:	mov    ch,BYTE PTR [esi+0x19c63cbf]
  416411:	pop    es
  416412:	nop
  416413:	sub    cl,BYTE PTR [ebp-0x60ecd330]
  416419:	push   ss
  41641a:	aaa    
  41641b:	inc    ecx
  41641c:	ins    BYTE PTR es:[edi],dx
  41641d:	loop   0x416464
  41641f:	sub    al,0x71
  416421:	dec    ecx
  416422:	rcr    BYTE PTR [esi],0xf2
  416425:	push   es
  416426:	cld    
  416427:	jo     0x4163cc
  416429:	sti    
  41642a:	add    cl,ch
  41642c:	inc    edx
  41642d:	sub    eax,0xde70116f
  416432:	jns    0x416445
  416434:	ret    
  416435:	cdq    
  416436:	mov    ah,0x4c
  416438:	ins    BYTE PTR es:[edi],dx
  416439:	add    ch,BYTE PTR [esi+0x3f]
  41643c:	or     eax,0x94c3eab7
  416441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416442:	inc    edi
  416443:	pop    edi
  416444:	daa    
  416445:	sub    ebp,ecx
  416447:	(bad)  
  416448:	std    
  416449:	pushf  
  41644a:	sar    DWORD PTR [eax+0x7e],0x5f
  41644e:	out    0x32,eax
  416450:	xchg   edi,eax
  416451:	call   0xd6f855c6
  416456:	inc    eax
  416457:	fisubr WORD PTR [ecx]
  41645a:	add    ebp,DWORD PTR [ecx+0x3a394b55]
  416460:	mov    eax,0xbf069322
  416465:	jmp    0xc39f:0xcdad22b9
  41646c:	aam    0x57
  41646e:	jb     0x416442
  416470:	ret    
  416471:	in     eax,0x6d
  416473:	xchg   edx,eax
  416474:	pop    es
  416475:	sub    cl,dl
  416477:	xchg   edi,eax
  416478:	mov    ds:0xd362b2a1,al
  41647d:	dec    edx
  41647e:	sbb    BYTE PTR [ebx],bl
  416480:	loop   0x4164ea
  416482:	aad    0xc7
  416484:	int    0x90
  416486:	adc    al,0x66
  416488:	and    BYTE PTR [ecx-0x3f],0x46
  41648c:	fwait
  41648d:	in     eax,dx
  41648e:	cmc    
  41648f:	dec    ebx
  416490:	out    dx,eax
  416491:	add    esp,ebx
  416493:	pop    ss
  416494:	sub    dh,0xae
  416497:	xchg   ebp,eax
  416498:	outs   dx,DWORD PTR ds:[esi]
  416499:	cmp    edx,eax
  41649b:	xchg   BYTE PTR [ebx],al
  41649d:	aam    0xd
  41649f:	ficomp DWORD PTR [esi+0xa753723]
  4164a5:	and    edx,edx
  4164a7:	into   
  4164a8:	cmc    
  4164a9:	lahf   
  4164aa:	mov    ebp,0x8811da22
  4164af:	xchg   edx,eax
  4164b0:	imul   edi,esp,0x42
  4164b3:	in     al,0xb1
  4164b5:	nop
  4164b6:	inc    ebx
  4164b7:	mov    ss,esi
  4164b9:	out    dx,al
  4164ba:	out    dx,al
  4164bb:	pop    esp
  4164bc:	repnz stos BYTE PTR es:[edi],al
  4164be:	js     0x416478
  4164c0:	cwde   
  4164c1:	add    al,0x21
  4164c3:	gs push edi
  4164c5:	cld    
  4164c6:	fidiv  DWORD PTR [eax+0x284e2d4d]
  4164cc:	js     0x416510
  4164ce:	mov    cl,0x13
  4164d0:	test   BYTE PTR [edi+0x6aaa3611],0x40
  4164d7:	iret   
  4164d8:	aam    0xac
  4164da:	scas   al,BYTE PTR es:[edi]
  4164db:	jno    0x416484
  4164dd:	test   al,0xd9
  4164df:	sbb    ebp,ebx
  4164e1:	xchg   ecx,eax
  4164e2:	xchg   esi,eax
  4164e3:	std    
  4164e4:	aad    0xea
  4164e6:	(bad)  
  4164e8:	sbb    eax,0x42652292
  4164ed:	mov    ch,0x5a
  4164ef:	fisttp WORD PTR ds:0x117e04ef
  4164f5:	and    cl,BYTE PTR [esi+edi*1-0x28ebad27]
  4164fc:	hlt    
  4164fd:	jmp    0x4164c8
  4164ff:	jo     0x41649d
  416501:	(bad)  
  416503:	shl    BYTE PTR [ebx+0x67195afc],0xba
  41650a:	les    ebx,FWORD PTR [edi+0x69ac2576]
  416510:	mov    cl,0xf0
  416512:	lods   al,BYTE PTR ds:[esi]
  416513:	push   0x66bf6008
  416518:	mov    es,ecx
  41651a:	div    BYTE PTR [edi]
  41651c:	pop    esi
  41651d:	shl    BYTE PTR [ebx-0x48482460],cl
  416523:	push   esi
  416524:	stos   DWORD PTR es:[edi],eax
  416525:	sub    eax,0xf028d58e
  41652a:	jbe    0x416549
  41652c:	mov    cl,0xf
  41652e:	cmp    esi,DWORD PTR [edi+0x43ad8cfc]
  416534:	mov    eax,0x267736b3
  416539:	fcom   QWORD PTR [eax-0x7d44019f]
  41653f:	pop    ss
  416540:	rcr    BYTE PTR [eax-0x5e],0x18
  416544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416545:	cdq    
  416546:	mov    ebp,0x4327490
  41654b:	push   eax
  41654c:	sub    al,0x78
  41654e:	hlt    
  41654f:	(bad)  
  416550:	push   ecx
  416551:	pop    edx
  416552:	shr    BYTE PTR [eax-0x9cf52c4],cl
  416558:	inc    ebp
  416559:	daa    
  41655a:	in     eax,0xdd
  41655c:	call   0x796e:0x94b33ed2
  416563:	push   ds
  416564:	push   0x8e102d91
  416569:	sbb    DWORD PTR [esi],0xffffffea
  41656c:	push   ebp
  41656d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41656e:	push   esp
  41656f:	adc    al,0x16
  416571:	std    
  416572:	aas    
  416573:	dec    esp
  416574:	and    DWORD PTR [edx-0x72],ebx
  416577:	push   ecx
  416578:	sar    DWORD PTR [edi-0x5e],cl
  41657b:	dec    ebp
  41657c:	loope  0x416547
  41657e:	cs jae 0x41659a
  416581:	inc    ecx
  416582:	xchg   BYTE PTR ds:0x9c0422a4,bh
  416588:	jg     0x416541
  41658a:	mov    dh,0xa
  41658c:	cld    
  41658d:	sbb    DWORD PTR [edx+0x5f],0xffffffdc
  416591:	imul   ebx,ebx,0x3aa652b4
  416597:	call   FWORD PTR ds:0xf887584e
  41659d:	fldl2e 
  41659f:	mov    eax,ds:0x65aa5847
  4165a4:	mov    ah,0xfd
  4165a6:	and    al,BYTE PTR [edi-0x63b03a9e]
  4165ac:	mov    bl,0x3c
  4165ae:	cmp    al,0x6b
  4165b0:	mov    ds:0x8480d27c,eax
  4165b5:	and    al,BYTE PTR [ebx]
  4165b7:	sub    BYTE PTR [ebx-0x4ca583f7],0x74
  4165be:	push   es
  4165bf:	add    eax,0x7c195c66
  4165c4:	(bad)  [edi+esi*1]
  4165c7:	sti    
  4165c8:	jg     0x4165ee
  4165ca:	mov    bh,0x3
  4165cc:	enter  0x49cb,0x9a
  4165d0:	imul   eax,DWORD PTR [eax+0x619ab4ad],0xffffffb2
  4165d7:	xchg   edi,eax
  4165d8:	push   es
  4165d9:	mov    esi,0xd42ab6d3
  4165de:	in     eax,dx
  4165df:	je     0x4165ed
  4165e1:	repnz mov dl,0xb9
  4165e4:	stc    
  4165e5:	daa    
  4165e6:	out    dx,eax
  4165e7:	xchg   ebx,eax
  4165e8:	sahf   
  4165e9:	xor    eax,0xf482c04a
  4165ee:	jo     0x41665a
  4165f0:	and    esp,ebx
  4165f2:	out    dx,al
  4165f3:	pop    ebp
  4165f4:	push   0x685f9ca9
  4165f9:	das    
  4165fa:	adc    ebp,DWORD PTR [esi-0xb]
  4165fd:	es cmp eax,0x2f80e81e
  416603:	xor    DWORD PTR [edx-0x11d9bf5d],ebp
  416609:	aaa    
  41660a:	pop    edi
  41660b:	mov    eax,ds:0xafca28e2
  416610:	(bad)  
  416611:	retf   
  416612:	int    0x41
  416614:	jb     0x4165bd
  416616:	xchg   ebx,eax
  416617:	lds    ebx,FWORD PTR [ecx+0x6a]
  41661a:	mov    DWORD PTR [edx],ebp
  41661c:	sbb    ecx,DWORD PTR ds:0x9eff77da
  416622:	xor    ebp,ebx
  416624:	sub    ebp,DWORD PTR [eax+0xa]
  416627:	sbb    dl,ch
  416629:	cmc    
  41662a:	jae    0x41666f
  41662c:	inc    eax
  41662d:	rol    BYTE PTR ds:0x93d9a483,0x42
  416634:	xchg   BYTE PTR [edx+edx*2+0x4df1d763],cl
  41663b:	dec    ebx
  41663c:	push   0x4e55440c
  416641:	aam    0x31
  416643:	enter  0xa453,0xda
  416647:	daa    
  416648:	mov    ecx,0x9fb37bd9
  41664d:	or     al,0x2c
  41664f:	mov    al,ds:0xa3b9a9f4
  416654:	ret    0xb54d
  416657:	adc    bh,BYTE PTR [edx]
  416659:	inc    ebp
  41665a:	cwde   
  41665b:	xchg   edx,eax
  41665c:	pop    esp
  41665d:	and    al,0x79
  41665f:	xchg   esp,eax
  416660:	dec    edi
  416661:	or     ecx,DWORD PTR [esi-0x14de699d]
  416667:	or     edx,DWORD PTR [eax-0x3f9cb72b]
  41666d:	popa   
  41666e:	add    BYTE PTR [eax+edx*4+0x6a],bl
  416672:	and    al,0x8f
  416674:	xchg   ecx,eax
  416675:	out    dx,eax
  416676:	mov    esi,0xdad459f4
  41667b:	bound  edi,QWORD PTR [ebp-0x53e8eb97]
  416681:	in     al,0xd
  416683:	icebp  
  416684:	mov    edi,0xfce76be9
  416689:	mov    ds:0x8964ed86,eax
  41668e:	vunpckhpd xmm3,xmm6,XMMWORD PTR [eax]
  416692:	fadd   DWORD PTR ds:0x6091c25c
  416698:	daa    
  416699:	xchg   edx,eax
  41669a:	push   es
  41669b:	loopne 0x416680
  41669d:	xchg   edx,eax
  41669e:	mov    ebx,0x8ec369af
  4166a3:	aad    0xd5
  4166a5:	jo     0x4166ce
  4166a7:	ret    0xf0ee
  4166aa:	xor    edi,DWORD PTR [edi+edx*8+0x7f]
  4166ae:	and    DWORD PTR [edx-0x3a],0xffffffaa
  4166b2:	push   0x647294e4
  4166b7:	sub    eax,0xf2e94724
  4166bc:	test   DWORD PTR [ecx+eiz*2-0xf56789d],0xf834732
  4166c7:	fidivr WORD PTR [ebx]
  4166c9:	jmp    0x896d:0xcf71384b
  4166d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166d1:	popa   
  4166d2:	cmp    ebp,DWORD PTR [ebp-0x1bbdbb3f]
  4166d8:	iret   
  4166d9:	addr16 in eax,0x94
  4166dc:	mov    eax,ds:0x8c3566db
  4166e1:	aas    
  4166e2:	rcl    BYTE PTR [eax],1
  4166e4:	adc    BYTE PTR [esi+0x7bdb6302],ah
  4166ea:	out    dx,eax
  4166eb:	inc    ebp
  4166ec:	mov    ch,BYTE PTR [ebp-0x3e]
  4166ef:	ret    
  4166f0:	daa    
  4166f1:	iret   
  4166f2:	test   DWORD PTR [ecx+0x639179e5],ebx
  4166f8:	jno    0x4166ab
  4166fa:	test   BYTE PTR [esi],ch
  4166fc:	inc    edi
  4166fd:	and    cl,0xa0
  416700:	cmp    DWORD PTR [ebx+0x1],esp
  416703:	cmp    ah,al
  416705:	xchg   ebx,eax
  416706:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416708:	xchg   esp,eax
  416709:	mov    edi,0x89234081
  41670e:	jecxz  0x416772
  416710:	xor    dh,BYTE PTR [ecx+0x4df3ed33]
  416716:	mov    ch,0xbc
  416718:	inc    eax
  416719:	pop    edi
  41671a:	bound  ebx,QWORD PTR [ebp+edx*2-0x3e]
  41671e:	in     al,dx
  41671f:	in     eax,0x30
  416721:	mov    ds:0xa8d03069,eax
  416726:	bound  esi,QWORD PTR [edi]
  416728:	push   esp
  416729:	adc    eax,0x16efb9c7
  41672e:	fdivr  st,st(6)
  416730:	dec    ecx
  416731:	rcl    ah,1
  416733:	push   ds
  416734:	push   edx
  416735:	aas    
  416736:	lods   eax,DWORD PTR ds:[esi]
  416737:	pop    ecx
  416738:	test   eax,0x621d0206
  41673d:	fidivr DWORD PTR [ebx+ebx*4-0x58600b39]
  416744:	dec    eax
  416745:	mov    WORD PTR [ebx+0x56],ds
  416748:	(bad)  
  416749:	jmp    0x967e42f4
  41674e:	dec    ecx
  41674f:	xor    al,0x25
  416751:	sbb    al,0x66
  416753:	(bad)  
  416754:	in     al,0x7d
  416756:	xchg   edx,eax
  416757:	add    eax,0x7c03d627
  41675c:	mov    edx,0x6bfabbcc
  416761:	inc    ebp
  416762:	cmp    DWORD PTR [ecx],esi
  416764:	pop    esp
  416765:	pop    ecx
  416766:	mov    ds:0x5ba666c7,eax
  41676b:	loopne 0x416796
  41676d:	test   al,0x3
  41676f:	push   esi
  416770:	dec    esi
  416771:	lds    ecx,FWORD PTR [ebp+0x732f7d14]
  416777:	push   0xffffffc8
  416779:	test   DWORD PTR [esi-0x65],ebp
  41677c:	fstp   DWORD PTR [ecx]
  41677e:	xchg   edi,eax
  41677f:	repz mov ch,0x2
  416782:	in     eax,dx
  416783:	(bad)  
  416785:	mov    ebx,0xcff35975
  41678a:	mov    ah,0x49
  41678c:	jno    0x4167cd
  41678e:	adc    eax,0x6ddf0bee
  416793:	dec    ebp
  416794:	clc    
  416795:	adc    eax,DWORD PTR [ecx+0x5a]
  416798:	mov    bl,0x0
  41679a:	xor    DWORD PTR ds:0xa4b26ed9,esp
  4167a0:	das    
  4167a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a2:	out    dx,al
  4167a3:	mov    ebx,0xaaffc271
  4167a8:	xchg   ecx,eax
  4167a9:	std    
  4167aa:	jecxz  0x416797
  4167ac:	sbb    eax,0xf3d7be12
  4167b1:	dec    esi
  4167b2:	add    ecx,DWORD PTR [edx+0x4f]
  4167b5:	call   FWORD PTR [esi-0x42135587]
  4167bb:	jmp    0x59fc:0xc566257f
  4167c2:	pusha  
  4167c3:	pop    ebp
  4167c4:	outs   dx,DWORD PTR ds:[esi]
  4167c5:	mov    WORD PTR [ebx+0x414b2989],?
  4167cb:	test   DWORD PTR [edx+0x620dc599],ebx
  4167d1:	push   ss
  4167d2:	add    al,BYTE PTR [edx-0x1ba36a92]
  4167d8:	inc    esi
  4167d9:	push   0x2f0e5fc8
  4167de:	jp     0x4167f8
  4167e0:	mov    ch,0xa6
  4167e2:	jb     0x416817
  4167e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e5:	adc    BYTE PTR [esi],cl
  4167e7:	or     DWORD PTR [edx],0x8dc9ad18
  4167ed:	pusha  
  4167ee:	sbb    BYTE PTR [esi],ch
  4167f0:	sub    DWORD PTR [ebp-0x31],edx
  4167f3:	fmul   QWORD PTR [eax]
  4167f5:	adc    esp,ebx
  4167f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f8:	cmp    esp,esi
  4167fa:	clc    
  4167fb:	jp     0x4167d3
  4167fd:	aam    0xb1
  4167ff:	add    bl,BYTE PTR [edx+0x2b]
  416802:	pop    ds
  416803:	or     ch,dl
  416805:	out    0x42,eax
  416807:	sbb    DWORD PTR [ebx],ebx
  416809:	adc    ecx,DWORD PTR [ebp+0x52]
  41680c:	inc    edx
  41680d:	scas   eax,DWORD PTR es:[edi]
  41680e:	scas   eax,DWORD PTR es:[edi]
  41680f:	in     al,dx
  416810:	mov    eax,ds:0x62d44cbb
  416815:	pop    ss
  416816:	mov    dl,0xe8
  416818:	shr    DWORD PTR [esi+0x1711f6dd],1
  41681e:	sub    eax,0x96faf7c5
  416823:	mov    ds:0x5fd7932b,al
  416828:	adc    al,0xe7
  41682a:	pusha  
  41682b:	es adc al,0x3d
  41682e:	aad    0xe
  416830:	hlt    
  416831:	stos   DWORD PTR es:[edi],eax
  416832:	fidiv  DWORD PTR [ecx+0x7d11c7a9]
  416838:	push   0xffffffc2
  41683a:	repz hlt 
  41683c:	std    
  41683d:	pop    edx
  41683e:	mov    BYTE PTR [ebx],dl
  416840:	push   esi
  416841:	in     eax,dx
  416842:	jae    0x416831
  416844:	test   BYTE PTR [ecx],cl
  416846:	scas   al,BYTE PTR es:[edi]
  416847:	scas   eax,DWORD PTR es:[edi]
  416848:	out    dx,eax
  416849:	shl    BYTE PTR [edi],cl
  41684b:	cmp    edx,ecx
  41684d:	add    eax,0x1f52d57b
  416852:	ds push ebp
  416854:	inc    edi
  416855:	dec    edx
  416856:	ja     0x4168a7
  416858:	dec    ebp
  416859:	rcl    al,0x33
  41685c:	repnz iret 
  41685e:	das    
  41685f:	or     eax,0x81463f8a
  416864:	mov    al,0x49
  416866:	in     al,dx
  416867:	stc    
  416868:	test   BYTE PTR [eax-0x25],0x60
  41686c:	cmp    DWORD PTR [esi-0x52b997ad],esi
  416872:	in     al,dx
  416873:	or     cl,BYTE PTR [edx-0x544f2634]
  416879:	aad    0x4f
  41687b:	mov    esp,0xe647970b
  416880:	les    esp,FWORD PTR [eax]
  416882:	adc    eax,0x11a6eb95
  416887:	imul   esp,edi,0x4
  41688a:	inc    edx
  41688b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41688d:	pop    eax
  41688e:	repnz inc edx
  416890:	lea    ecx,[edi-0x30ede241]
  416896:	out    dx,al
  416897:	(bad)  
  416898:	scas   eax,DWORD PTR es:[edi]
  416899:	xchg   edi,eax
  41689a:	push   eax
  41689b:	mov    ecx,DWORD PTR [eax-0x25]
  41689e:	(bad)  
  41689f:	inc    esi
  4168a0:	inc    ecx
  4168a1:	das    
  4168a2:	mov    bh,0xa2
  4168a4:	int3   
  4168a5:	clc    
  4168a6:	sub    DWORD PTR [ecx+ebx*2],ecx
  4168a9:	push   ecx
  4168aa:	cmp    al,0x1d
  4168ac:	mov    ds:0x8b6d5fc7,eax
  4168b1:	fadd   DWORD PTR [ebx]
  4168b3:	dec    esi
  4168b4:	hlt    
  4168b5:	pop    ds
  4168b6:	pop    edx
  4168b7:	pushf  
  4168b8:	in     eax,0xeb
  4168ba:	mov    es,WORD PTR [esp+ebp*4]
  4168bd:	fiadd  DWORD PTR [edi-0x5b99a118]
  4168c3:	pop    ebx
  4168c4:	aad    0xe4
  4168c6:	retf   
  4168c7:	dec    eax
  4168c8:	xlat   BYTE PTR ds:[ebx]
  4168c9:	hlt    
  4168ca:	jp     0x416910
  4168cc:	or     eax,0x45677446
  4168d1:	arpl   WORD PTR [ebx-0x6],sp
  4168d4:	sbb    BYTE PTR [edi-0x6ebc6d44],al
  4168da:	sub    DWORD PTR [ecx-0x287ffd8c],edi
  4168e0:	or     ebp,0x7c
  4168e3:	imul   eax,DWORD PTR [ebx+0x3f89b98c],0xffffff85
  4168ea:	jmp    0xb37:0x3fdab7a9
  4168f1:	pop    ss
  4168f2:	push   ecx
  4168f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f4:	mov    ds:0xeaf5a8db,eax
  4168f9:	(bad)  
  4168fa:	pop    esp
  4168fb:	adc    eax,0xa0a92409
  416900:	dec    esp
  416901:	mov    eax,0xb2e0ef17
  416906:	jge    0x416924
  416908:	xchg   ebx,eax
  416909:	pusha  
  41690a:	jnp    0x41697c
  41690c:	fs mov edx,eax
  41690f:	xor    eax,eax
  416911:	shl    edx,0x1e
  416914:	mov    DWORD PTR [ebp+0x10],eax
  416917:	mov    eax,DWORD PTR [esi]
  416919:	xor    edx,0xc0000000
  41691f:	mov    DWORD PTR [ebp+0x14],edx
  416922:	mov    edx,DWORD PTR [esi+0x4]
  416925:	jmp    0x416eaf
  41692a:	or     BYTE PTR [edx+0x20a461f6],ch
  416930:	jns    0x416944
  416932:	stc    
  416933:	repz sbb BYTE PTR [eax-0x5139557a],ch
  41693a:	jp     0x4168d9
  41693c:	or     al,0x16
  41693e:	cmp    eax,0x98161604
  416943:	gs (bad) 
  416945:	sub    eax,0x421638ec
  41694a:	sar    dh,cl
  41694c:	dec    edx
  41694d:	maxps  xmm2,XMMWORD PTR [eax-0x3b]
  416951:	push   edi
  416952:	mov    bl,0x89
  416954:	cmp    al,0x30
  416956:	sbb    ebp,ebx
  416958:	cmc    
  416959:	add    eax,eax
  41695b:	inc    ebx
  41695c:	or     eax,0x39686c0e
  416961:	rcl    ebp,0x73
  416964:	hlt    
  416965:	int    0xbc
  416967:	fs sbb edi,edi
  41696a:	lock fdiv DWORD PTR [edi+0x77]
  41696e:	pop    ds
  41696f:	mov    al,ds:0x9ac365cd
  416974:	adc    ah,BYTE PTR [ecx-0x33]
  416977:	sbb    BYTE PTR [esi-0x388527ae],0x3c
  41697e:	imul   ebp,DWORD PTR [edx+0x2e],0xffffff90
  416982:	scas   al,BYTE PTR es:[edi]
  416983:	mov    esp,0x116f230f
  416988:	xor    ah,BYTE PTR [esi+0x74c36d15]
  41698e:	pop    esi
  41698f:	lea    esi,es:[esi+0x7f]
  416993:	and    eax,0x1f515386
  416998:	das    
  416999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41699a:	(bad)  
  41699b:	sbb    al,0x7f
  41699d:	push   ecx
  41699e:	pop    ds
  41699f:	mov    cl,0x2f
  4169a1:	xchg   esi,eax
  4169a2:	adc    ecx,0xffffffa2
  4169a5:	dec    ebx
  4169a6:	sbb    BYTE PTR [edx-0x69f0b6db],cl
  4169ac:	nop
  4169ad:	dec    ebp
  4169ae:	xchg   esp,eax
  4169af:	stc    
  4169b0:	xchg   ebp,eax
  4169b1:	into   
  4169b2:	test   BYTE PTR [ebx-0x4c],bh
  4169b5:	mov    ecx,0x3023e708
  4169ba:	stos   BYTE PTR es:[edi],al
  4169bb:	ret    0x1020
  4169be:	stos   BYTE PTR es:[edi],al
  4169bf:	ja     0x416a05
  4169c1:	jge    0x4169ee
  4169c3:	out    dx,eax
  4169c4:	fadd   QWORD PTR [ecx-0x75d51962]
  4169ca:	fild   WORD PTR [ebp-0x3d2ca12d]
  4169d0:	jle    0x416a40
  4169d2:	jmp    0x416a19
  4169d4:	cmp    bl,cl
  4169d6:	ja     0x4169a9
  4169d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169d9:	ror    bl,1
  4169db:	bound  esp,QWORD PTR [esi]
  4169dd:	dec    eax
  4169de:	mov    BYTE PTR [ebp+0x41],ch
  4169e1:	mov    edx,0x80e49172
  4169e6:	fucomi st,st(5)
  4169e8:	pop    esp
  4169e9:	or     BYTE PTR [esi-0x3418ee1a],dl
  4169ef:	pop    ecx
  4169f0:	sti    
  4169f1:	pop    edx
  4169f2:	fucomi st,st(7)
  4169f4:	or     eax,0x87c8682c
  4169f9:	dec    esi
  4169fa:	cs std 
  4169fc:	rcr    dh,0x31
  4169ff:	push   ebx
  416a00:	mov    BYTE PTR [ecx],ah
  416a02:	pop    es
  416a03:	mov    bh,BYTE PTR [eax]
  416a05:	add    BYTE PTR [ecx+0x4a],cl
  416a08:	sbb    al,0xdb
  416a0a:	and    BYTE PTR [esi+0x5c],bh
  416a0d:	mov    eax,0x9192f097
  416a12:	(bad)  
  416a14:	loop   0x4169f2
  416a16:	xor    eax,DWORD PTR [ebx+eax*1]
  416a19:	mov    ah,0x90
  416a1b:	adc    DWORD PTR [ebp-0x70ba850c],eax
  416a21:	add    BYTE PTR [ebx+0x4d],dh
  416a24:	cmp    eax,0xffb5df4
  416a29:	cs dec edx
  416a2b:	push   0x6e
  416a2d:	xchg   esi,eax
  416a2e:	mov    dh,0x96
  416a30:	mov    bh,0x9f
  416a32:	aad    0xb
  416a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a35:	xchg   ebx,eax
  416a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a37:	mov    cl,al
  416a39:	add    BYTE PTR [eax+ecx*1-0x3406bee8],cl
  416a40:	and    DWORD PTR [ebp+edi*4+0x37],0xffffffb2
  416a45:	ja     0x416a2b
  416a47:	add    eax,0xc3191026
  416a4c:	es popf 
  416a4e:	and    dl,BYTE PTR [edx-0x1d6a8f3]
  416a54:	retf   0x3b83
  416a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a58:	mov    bh,0x4d
  416a5a:	mov    al,BYTE PTR [edx+0x41]
  416a5d:	ins    DWORD PTR es:[edi],dx
  416a5e:	inc    ebp
  416a5f:	mov    dl,0x2
  416a61:	fmul   DWORD PTR [esi-0x69]
  416a64:	adc    dl,BYTE PTR [edx]
  416a66:	ds aas 
  416a68:	arpl   WORD PTR ds:[edi],si
  416a6b:	sub    BYTE PTR [ecx-0x1a],dh
  416a6e:	jg     0x416a49
  416a70:	mov    ah,dl
  416a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a73:	mov    WORD PTR [ebp+0x2da94ea5],gs
  416a79:	call   0x1e17:0x2a702c81
  416a80:	or     DWORD PTR [ebp+0x3e742f2c],edx
  416a86:	gs addr16 (bad) 
  416a89:	cli    
  416a8a:	sbb    DWORD PTR [esi+ebp*8],esi
  416a8d:	add    DWORD PTR [edi],ebx
  416a8f:	imul   ebp,DWORD PTR [ecx],0xffffffe4
  416a92:	sub    bl,BYTE PTR [eax+edx*4+0x4b]
  416a96:	jo     0x416a39
  416a98:	inc    ebp
  416a99:	rcl    esi,cl
  416a9b:	mov    ds:0xf9046e89,eax
  416aa0:	inc    ebx
  416aa1:	pop    es
  416aa2:	mov    ebp,0x12801a61
  416aa7:	jbe    0x416a2b
  416aa9:	lock mov ds:0x69a10514,eax
  416aaf:	sub    dh,BYTE PTR [edi+0x23]
  416ab2:	adc    dl,bh
  416ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab5:	call   0x8091124c
  416aba:	xchg   ecx,eax
  416abb:	adc    DWORD PTR [edx],esi
  416abd:	or     eax,0xe379a20c
  416ac2:	dec    ecx
  416ac3:	rcr    BYTE PTR [ebx-0x5549ae8d],0xf6
  416aca:	rcr    BYTE PTR ds:[ebx-0x2e],0xf8
  416acf:	xchg   ebp,eax
  416ad0:	pop    edi
  416ad1:	dec    ebp
  416ad2:	les    eax,FWORD PTR [edi+0x13]
  416ad5:	mov    edx,0x672222f7
  416ada:	nop
  416adb:	fwait
  416adc:	lock icebp 
  416ade:	lock cmp ecx,DWORD PTR [eax-0x1540d27f]
  416ae5:	addr16 mov esp,0x38c95bc7
  416aeb:	adc    esp,ecx
  416aed:	push   DWORD PTR [edx+0xc4b83a3]
  416af3:	stc    
  416af4:	dec    edi
  416af5:	not    BYTE PTR [ecx+0x751ce764]
  416afb:	inc    esi
  416afc:	(bad)  
  416afd:	sub    eax,0xa34392e4
  416b02:	mov    DWORD PTR [edx+0x4b207f11],edx
  416b08:	stc    
  416b09:	xlat   BYTE PTR ds:[ebx]
  416b0a:	loopne 0x416a8d
  416b0c:	cmc    
  416b0d:	and    bh,ah
  416b0f:	push   0x8
  416b11:	inc    eax
  416b12:	ss inc esi
  416b14:	push   eax
  416b15:	adc    eax,0xeddb4701
  416b1a:	arpl   WORD PTR [eax+eax*2-0x1e1a4c1d],bp
  416b21:	out    0xf7,eax
  416b23:	mov    ch,0xb9
  416b25:	inc    ebx
  416b26:	push   ss
  416b27:	into   
  416b28:	xor    BYTE PTR [ecx],0xbf
  416b2b:	xor    bh,ah
  416b2d:	retf   
  416b2e:	or     edi,edi
  416b30:	popf   
  416b31:	sbb    eax,0x50e759a2
  416b36:	fidiv  WORD PTR [ebx]
  416b38:	jmp    0x416bac
  416b3a:	mov    ebx,0x2af612e9
  416b3f:	pop    esp
  416b40:	pop    esi
  416b41:	jl     0x416b5e
  416b43:	imul   esi,DWORD PTR [ebx],0x14330756
  416b49:	jle    0x416b2d
  416b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b4c:	add    eax,0x86360a3c
  416b51:	inc    esp
  416b52:	in     eax,0xfa
  416b54:	cli    
  416b55:	fmul   DWORD PTR [ebx+0xb]
  416b58:	hlt    
  416b59:	cmc    
  416b5a:	adc    esi,DWORD PTR [ebx]
  416b5c:	mov    eax,ds:0xbe43e53b
  416b61:	inc    ebp
  416b62:	data16 cmp WORD PTR [edi+0x63dc502f],di
  416b6a:	dec    ebx
  416b6b:	dec    ebp
  416b6c:	add    eax,0x92ac4ae9
  416b71:	das    
  416b72:	mov    dl,0x75
  416b74:	pop    ebx
  416b75:	stos   BYTE PTR es:[edi],al
  416b76:	scas   eax,DWORD PTR es:[edi]
  416b77:	cwde   
  416b78:	xchg   ebp,eax
  416b79:	xchg   edx,eax
  416b7a:	jmp    0x416be0
  416b7c:	dec    edx
  416b7d:	sahf   
  416b7e:	push   ds
  416b7f:	daa    
  416b80:	jecxz  0x416bf4
  416b82:	loop   0x416b29
  416b84:	mov    esi,0xcee2677e
  416b89:	jg     0x416b0f
  416b8b:	sbb    al,0x97
  416b8d:	fdivr  QWORD PTR [esi+edx*8-0x1eb66a03]
  416b94:	xor    al,BYTE PTR [ecx+0x3d]
  416b97:	outs   dx,DWORD PTR ds:[esi]
  416b98:	daa    
  416b99:	in     al,0x2d
  416b9b:	add    ebx,ebx
  416b9d:	repz fild DWORD PTR [edi]
  416ba1:	add    bl,BYTE PTR [edi]
  416ba3:	jns    0x416c08
  416ba5:	xlat   BYTE PTR ds:[ebx]
  416ba6:	jbe    0x416bdc
  416ba8:	call   0x7615:0x3923d283
  416baf:	push   edx
  416bb0:	sbb    eax,0xc71c36bd
  416bb5:	xor    BYTE PTR [ebx],ah
  416bb7:	xor    edi,DWORD PTR [eax]
  416bb9:	add    dh,BYTE PTR [edx-0x67]
  416bbc:	cs push cs
  416bbe:	jo     0x416bef
  416bc0:	fistp  DWORD PTR ds:0x8bca4b61
  416bc6:	les    ebp,FWORD PTR [edi+0x74]
  416bc9:	pop    edx
  416bca:	inc    ebp
  416bcb:	(bad)  
  416bcd:	(bad)
  416bd0:	xor    edx,eax
  416bd2:	pop    ss
  416bd3:	(bad)  
  416bd5:	sbb    BYTE PTR [ecx],bh
  416bd7:	inc    ebp
  416bd8:	rcl    bh,0x50
  416bdb:	in     al,dx
  416bdc:	lods   al,BYTE PTR ds:[esi]
  416bdd:	inc    esi
  416bde:	push   ss
  416bdf:	pushf  
  416be0:	(bad)  
  416be1:	inc    esp
  416be2:	sar    BYTE PTR [ecx+eax*1],1
  416be5:	dec    edi
  416be6:	adc    al,0x27
  416be8:	inc    ecx
  416be9:	add    al,0x23
  416beb:	aam    0x73
  416bed:	and    eax,0x4f91d2e2
  416bf2:	inc    eax
  416bf3:	ret    0x31b1
  416bf6:	sub    ecx,esi
  416bf8:	inc    ecx
  416bf9:	popf   
  416bfa:	jns    0x416c0f
  416bfc:	outs   dx,BYTE PTR ds:[esi]
  416bfd:	out    0x21,eax
  416bff:	call   0x13828563
  416c04:	js     0x416c1e
  416c06:	mov    bl,0x19
  416c08:	call   0x1a239286
  416c0d:	push   esi
  416c0e:	push   esp
  416c0f:	aaa    
  416c10:	popa   
  416c11:	data16 cli 
  416c13:	mov    es,WORD PTR [eax-0x32]
  416c16:	in     eax,dx
  416c17:	gs inc esp
  416c19:	inc    edi
  416c1a:	loope  0x416c50
  416c1c:	div    BYTE PTR [ecx+0x21eb7b32]
  416c22:	adc    DWORD PTR [esi-0x7a],edx
  416c25:	push   ss
  416c26:	mov    ebp,0x3b2b9572
  416c2b:	arpl   dx,cx
  416c2d:	sti    
  416c2e:	scas   eax,DWORD PTR es:[edi]
  416c2f:	mov    BYTE PTR [ecx-0x3e7adc79],ah
  416c35:	cmc    
  416c36:	xchg   BYTE PTR [ebx],dl
  416c38:	rcr    DWORD PTR [ebp+0x30],cl
  416c3b:	out    dx,eax
  416c3c:	pop    ebp
  416c3d:	cmp    bh,BYTE PTR [esi+0x51]
  416c40:	loope  0x416bf1
  416c42:	int    0x4e
  416c44:	and    BYTE PTR [eax-0x5d344d22],ch
  416c4a:	add    al,0xd6
  416c4c:	pusha  
  416c4d:	imul   ebx,DWORD PTR ds:0x193e2633,0xc242cd30
  416c57:	test   al,0xe1
  416c59:	cmp    ebp,0xffffff96
  416c5c:	jl     0x416cda
  416c5e:	xchg   edx,eax
  416c5f:	inc    edi
  416c60:	iret   
  416c61:	xchg   esp,eax
  416c62:	and    esp,DWORD PTR [edi]
  416c64:	dec    esi
  416c65:	jecxz  0x416c34
  416c67:	std    
  416c68:	dec    edi
  416c69:	popf   
  416c6a:	clc    
  416c6b:	adc    DWORD PTR [esi-0x22],ebx
  416c6e:	mov    ecx,esi
  416c70:	(bad)  
  416c71:	or     DWORD PTR [eax],edi
  416c73:	and    esi,DWORD PTR [edx]
  416c75:	xchg   esp,eax
  416c76:	push   ds
  416c77:	cmc    
  416c78:	xor    dh,BYTE PTR [eax+0x6ce9a08a]
  416c7e:	dec    ebx
  416c7f:	and    eax,0x14055d23
  416c84:	mov    WORD PTR [eax+0x75068d9a],fs
  416c8a:	ja     0x416c3b
  416c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c8d:	sbb    eax,0xab77efbd
  416c92:	pop    esi
  416c93:	mov    dl,0x8f
  416c95:	inc    ebp
  416c96:	stos   BYTE PTR es:[edi],al
  416c97:	or     BYTE PTR [edx-0x1a],bl
  416c9a:	sub    eax,0xe267b6a7
  416c9f:	jmp    0xcc17f594
  416ca4:	xor    BYTE PTR [edi+0xe5acad5],ah
  416caa:	out    dx,eax
  416cab:	pushf  
  416cac:	outs   dx,BYTE PTR ds:[esi]
  416cad:	mov    WORD PTR [edx+0x41],es
  416cb0:	sti    
  416cb1:	mov    dh,bh
  416cb3:	bound  eax,QWORD PTR [ebp-0x5baaa0be]
  416cb9:	or     al,0xa4
  416cbb:	enter  0x49fc,0x59
  416cbf:	neg    BYTE PTR [edx+0x5003335]
  416cc5:	iret   
  416cc6:	sbb    eax,0x322ae65b
  416ccb:	imul   edi,DWORD PTR [ebp+0x3d6e1cb],0xffffff99
  416cd2:	out    dx,al
  416cd3:	jp     0x416ce6
  416cd5:	loopne 0x416c7d
  416cd7:	mov    bl,0x9e
  416cd9:	outs   dx,DWORD PTR ds:[esi]
  416cda:	jmp    0x416d2d
  416cdc:	or     edx,DWORD PTR [ebx-0x218b6d7c]
  416ce2:	fdiv   DWORD PTR [edi-0x1343fd9f]
  416ce8:	stos   DWORD PTR es:[edi],eax
  416ce9:	nop
  416cea:	cdq    
  416ceb:	mov    edi,0x5a37f22f
  416cf0:	xor    DWORD PTR [eax+0xe],eax
  416cf3:	inc    ebp
  416cf4:	xchg   DWORD PTR [ebx],eax
  416cf6:	inc    ecx
  416cf7:	mov    dl,0xee
  416cf9:	pop    edx
  416cfa:	loopne 0x416ceb
  416cfc:	push   ecx
  416cfd:	pusha  
  416cfe:	sbb    bh,BYTE PTR [ecx+0x7c]
  416d01:	(bad)  
  416d02:	fild   DWORD PTR [ebp-0x33]
  416d05:	and    al,0x6c
  416d07:	inc    edx
  416d08:	push   es
  416d09:	stos   DWORD PTR es:[edi],eax
  416d0a:	mov    eax,0x91d23f1f
  416d0f:	dec    ecx
  416d10:	scas   eax,DWORD PTR es:[edi]
  416d11:	out    0x7e,al
  416d13:	xchg   ecx,eax
  416d14:	mov    edi,DWORD PTR [ebp+0x3f8a238a]
  416d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1c:	repnz in al,dx
  416d1e:	repz and BYTE PTR [edx],al
  416d21:	mov    bh,0x58
  416d23:	test   eax,0xec1ce25f
  416d28:	dec    ebp
  416d29:	outs   dx,DWORD PTR ds:[esi]
  416d2a:	fadd   QWORD PTR [eax-0x7244284a]
  416d30:	outs   dx,BYTE PTR ds:[esi]
  416d31:	int3   
  416d32:	mov    edx,0x5627ffc4
  416d37:	mov    ecx,0x1476accf
  416d3c:	jge    0x416cda
  416d3e:	(bad)
  416d42:	dec    esi
  416d43:	or     dh,BYTE PTR [esi+0x68]
  416d46:	and    DWORD PTR [edx+ebx*2-0x63],0x39b55421
  416d4e:	xchg   dx,ax
  416d50:	sahf   
  416d51:	inc    ecx
  416d52:	call   0x2427:0x5962a085
  416d59:	pop    es
  416d5a:	addr16 inc ecx
  416d5c:	dec    ebx
  416d5d:	jg     0x416d98
  416d5f:	in     al,dx
  416d60:	ja     0x416d52
  416d62:	push   ss
  416d63:	mov    ds:0xb0a8271a,al
  416d68:	shr    DWORD PTR [ecx-0x172f95a9],1
  416d6e:	mov    dh,0xba
  416d70:	inc    BYTE PTR [edi+esi*4-0x4786850a]
  416d77:	add    cl,dl
  416d79:	ret    0x8dce
  416d7c:	lods   eax,DWORD PTR ds:[esi]
  416d7d:	pushf  
  416d7e:	jle    0x416d9d
  416d80:	(bad)  
  416d81:	fild   WORD PTR [ecx-0x45]
  416d84:	ins    BYTE PTR es:[edi],dx
  416d85:	push   es
  416d86:	dec    esi
  416d87:	fistp  QWORD PTR [edi+0x6a]
  416d8a:	pop    edx
  416d8b:	sbb    ebp,DWORD PTR [ebx+0x36e72f96]
  416d91:	jbe    0x416ddb
  416d93:	sub    DWORD PTR [eax+0x2a],esi
  416d96:	fst    QWORD PTR ds:0xc76089a4
  416d9c:	fwait
  416d9d:	lahf   
  416d9e:	xor    eax,0x3cd53462
  416da3:	dec    edx
  416da4:	lock rep stos DWORD PTR es:[edi],eax
  416da7:	jg     0x416da2
  416da9:	mov    edx,0x2bdf2b46
  416dae:	(bad)  
  416db0:	gs dec ebp
  416db2:	mov    bl,0xe1
  416db4:	dec    esp
  416db5:	dec    edi
  416db6:	aaa    
  416db7:	inc    BYTE PTR [edi-0x90c3879]
  416dbd:	pop    ecx
  416dbe:	fwait
  416dbf:	mov    ebx,0xf27ba253
  416dc4:	sahf   
  416dc5:	in     eax,0xcd
  416dc7:	jge    0x416dbe
  416dc9:	stos   DWORD PTR es:[edi],eax
  416dca:	ja     0x416e40
  416dcc:	leave  
  416dcd:	xor    al,0xf8
  416dcf:	dec    esi
  416dd0:	les    esi,FWORD PTR [edi-0x1b]
  416dd3:	add    dh,BYTE PTR [ecx-0x7a390c32]
  416dd9:	lss    edx,FWORD PTR [ebp-0x4f89a720]
  416de0:	pushf  
  416de1:	or     DWORD PTR [ebx],ecx
  416de3:	jmp    0x266cdd93
  416de8:	xlat   BYTE PTR ds:[ebx]
  416de9:	out    0x55,eax
  416deb:	pop    ebp
  416dec:	sti    
  416ded:	std    
  416dee:	std    
  416def:	pop    es
  416df0:	clc    
  416df1:	int3   
  416df2:	mov    esp,0x3da80f7f
  416df7:	leave  
  416df8:	fistp  WORD PTR [ebx-0x59]
  416dfb:	ds sbb edi,eax
  416dfe:	(bad)  
  416dff:	cmp    eax,0xf0132742
  416e04:	arpl   di,bp
  416e06:	xchg   ebp,ebx
  416e08:	jnp    0x416e85
  416e0a:	jns    0x416dce
  416e0c:	ins    BYTE PTR es:[edi],dx
  416e0d:	and    BYTE PTR [esi],0xf
  416e10:	or     eax,0x30041956
  416e15:	das    
  416e16:	outs   dx,BYTE PTR ds:[esi]
  416e17:	push   ss
  416e18:	and    eax,0x7e0d2970
  416e1d:	adc    ecx,DWORD PTR [ebx+ecx*8]
  416e20:	ss iret 
  416e22:	pop    edi
  416e23:	loop   0x416da8
  416e25:	out    dx,eax
  416e26:	adc    dl,dl
  416e28:	clc    
  416e29:	jl     0x416dde
  416e2b:	imul   dl
  416e2d:	rcr    ch,0xf5
  416e30:	out    dx,al
  416e31:	add    DWORD PTR [ebx-0x7c8a10d8],esi
  416e37:	inc    eax
  416e38:	jo     0x416e86
  416e3a:	dec    esi
  416e3b:	fsub   QWORD PTR [edi-0x1bb8ff40]
  416e41:	(bad)  
  416e42:	jle    0x416e22
  416e44:	xor    al,0x53
  416e46:	jmp    0x416e55
  416e48:	mov    bh,BYTE PTR [ebp+0x3]
  416e4b:	push   ecx
  416e4c:	pop    edx
  416e4d:	inc    edx
  416e4e:	pop    DWORD PTR [ecx-0x3e]
  416e51:	pop    ecx
  416e52:	cdq    
  416e53:	and    ah,bh
  416e55:	sub    bl,ch
  416e57:	and    eax,0x4d81cc05
  416e5c:	outs   dx,BYTE PTR ds:[esi]
  416e5d:	xchg   esi,eax
  416e5e:	xchg   ebp,eax
  416e5f:	xchg   BYTE PTR [ecx-0x47],ah
  416e62:	cmp    BYTE PTR [ebx-0x614c009b],bl
  416e68:	xchg   DWORD PTR [edx+0x17e0a576],edi
  416e6e:	jmp    0x2037:0xaf1b762c
  416e75:	mov    al,0x46
  416e77:	in     al,dx
  416e78:	fs gs into 
  416e7b:	inc    edx
  416e7c:	adc    al,0x46
  416e7e:	mov    edi,0x5fb004d5
  416e83:	inc    esp
  416e84:	push   ebp
  416e85:	lahf   
  416e86:	das    
  416e87:	js     0x416ece
  416e89:	mov    ds:0xdcbcd46b,al
  416e8e:	fadd   DWORD PTR [edi+0x1b49c558]
  416e94:	int    0x16
  416e96:	and    BYTE PTR [ebp-0x29],0xc3
  416e9a:	adc    edx,edi
  416e9c:	cmp    eax,DWORD PTR [ecx]
  416e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e9f:	call   0x1416:0x8c703a1b
  416ea6:	outs   dx,DWORD PTR ds:[esi]
  416ea7:	out    0xb1,al
  416ea9:	xor    al,0xc9
  416eab:	aas    
  416eac:	adc    al,0xbd
  416eae:	lods   al,BYTE PTR ds:[esi]
  416eaf:	xor    eax,0xba699573
  416eb4:	xor    ecx,edx
  416eb6:	shrd   eax,ecx,0x2
  416eba:	or     eax,DWORD PTR [ebp+0x10]
  416ebd:	shr    ecx,0x2
  416ec0:	mov    DWORD PTR [ebp+0x8],eax
  416ec3:	mov    eax,ecx
  416ec5:	or     eax,DWORD PTR [ebp+0x14]
  416ec8:	mov    ecx,DWORD PTR [ebx]
  416eca:	mov    edx,DWORD PTR [ebx+0x4]
  416ecd:	push   eax
  416ece:	push   DWORD PTR [ebp+0x8]
  416ed1:	jmp    0x41745b
  416ed6:	aaa    
  416ed7:	or     bl,BYTE PTR [ebp+0x2e982194]
  416edd:	js     0x416f43
  416edf:	stc    
  416ee0:	sub    al,0xb4
  416ee2:	mov    dl,0x7c
  416ee4:	and    BYTE PTR [ecx+esi*4-0x67],dh
  416ee8:	or     al,0x16
  416eea:	cmp    eax,0xc3161604
  416eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef0:	cld    
  416ef1:	out    dx,eax
  416ef2:	and    eax,0x2f2d1bbe
  416ef7:	fs inc ebp
  416ef9:	push   eax
  416efa:	retf   0xaaeb
  416efd:	enter  0x3d7b,0x85
  416f01:	test   edx,ebp
  416f03:	(bad)  
  416f04:	retf   
  416f05:	aas    
  416f06:	(bad)  
  416f07:	in     al,dx
  416f08:	out    dx,al
  416f09:	add    bh,ch
  416f0b:	les    eax,FWORD PTR [ebx]
  416f0d:	pop    ebx
  416f0e:	ins    DWORD PTR es:[edi],dx
  416f0f:	fnstsw WORD PTR [edi-0x47]
  416f12:	pop    ebx
  416f13:	fimul  WORD PTR [eax-0x7731f8c0]
  416f19:	xchg   edx,eax
  416f1a:	dec    edi
  416f1b:	xor    edi,ecx
  416f1d:	xor    eax,ebx
  416f1f:	dec    esp
  416f20:	pop    ss
  416f21:	arpl   ax,dx
  416f23:	repnz push eax
  416f25:	aas    
  416f26:	aad    0x81
  416f28:	shl    BYTE PTR [esi-0x24],cl
  416f2b:	push   esp
  416f2c:	dec    eax
  416f2d:	pop    eax
  416f2f:	sub    BYTE PTR ds:0x676f8027,bh
  416f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f36:	push   edi
  416f37:	xor    DWORD PTR [esi],0x4fb5186
  416f3d:	fidivr WORD PTR [esi-0x2b]
  416f40:	sbb    bl,BYTE PTR ds:0xe6df6c70
  416f46:	lock sbb eax,0xde48043a
  416f4c:	adc    DWORD PTR [edi+0x2],edi
  416f4f:	stc    
  416f50:	add    esi,esi
  416f52:	push   ds
  416f53:	pop    edi
  416f54:	jmp    0x416fcd
  416f56:	jns    0x416f36
  416f58:	test   ah,bl
  416f5a:	mov    eax,ds:0x30395289
  416f5f:	or     bh,0x94
  416f62:	sti    
  416f63:	ja     0x416fd3
  416f65:	jo     0x416fb3
  416f67:	addr16 push cs
  416f69:	xor    eax,0xb041dfb0
  416f6e:	jne    0x416f7a
  416f70:	(bad)  
  416f71:	cdq    
  416f72:	les    esi,FWORD PTR [ebx+0x4a]
  416f75:	xchg   esi,eax
  416f76:	test   al,0x26
  416f78:	xor    DWORD PTR [edi-0xab202e6],esi
  416f7e:	xchg   ebp,eax
  416f7f:	test   BYTE PTR [eax-0x6178278b],0xbd
  416f86:	cwde   
  416f87:	fwait
  416f88:	mov    edx,0xd2b8b807
  416f8d:	test   al,0xfc
  416f8f:	push   edx
  416f90:	imul   eax,DWORD PTR [edi],0x7d
  416f93:	(bad)  
  416f94:	jns    0x416fd4
  416f96:	push   ebx
  416f97:	(bad)  
  416f98:	loopne 0x416fbd
  416f9a:	or     al,0x34
  416f9c:	sub    DWORD PTR [ebx-0x5],0x93a8bf66
  416fa3:	icebp  
  416fa4:	cld    
  416fa5:	stos   DWORD PTR es:[edi],eax
  416fa6:	shl    DWORD PTR [ebx],0xb0
  416fa9:	cmp    BYTE PTR [ebx],bh
  416fab:	pop    ebx
  416fac:	or     DWORD PTR [eax+0x4c],ecx
  416faf:	fcmovnbe st,st(7)
  416fb1:	mov    dh,0x22
  416fb3:	aas    
  416fb4:	cwde   
  416fb5:	jg     0x416fee
  416fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb8:	cli    
  416fb9:	sub    ebp,DWORD PTR [edx*8-0x32b94f3a]
  416fc0:	cmc    
  416fc1:	dec    ebp
  416fc2:	idiv   edi
  416fc4:	frstor [eax+0x21]
  416fc7:	repz shr DWORD PTR [edx],1
  416fca:	pop    esi
  416fcb:	jbe    0x417010
  416fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fce:	outs   dx,BYTE PTR ds:[esi]
  416fcf:	adc    al,0xa4
  416fd1:	gs xchg edx,eax
  416fd3:	and    esp,ebp
  416fd5:	out    dx,al
  416fd6:	jp     0x416fc9
  416fd8:	sar    BYTE PTR [ecx-0x80],1
  416fdb:	stc    
  416fdc:	sbb    BYTE PTR [edx],0x31
  416fdf:	nop
  416fe0:	pop    edx
  416fe1:	fisub  WORD PTR [edi-0x76b140c6]
  416fe7:	shl    DWORD PTR [ebx+0x6b1e1c0f],cl
  416fed:	cmp    DWORD PTR [edi+0x138ef2e8],esp
  416ff3:	xchg   al,dl
  416ff5:	outs   dx,BYTE PTR ds:[esi]
  416ff6:	or     eax,0xf9286bfb
  416ffb:	push   edx
  416ffc:	mov    ebp,0xbbc8e395
  417001:	dec    edx
  417002:	or     al,0x7e
  417004:	ins    BYTE PTR es:[edi],dx
  417005:	aaa    
  417006:	fadd   DWORD PTR [esi-0x4d]
  417009:	xor    DWORD PTR ds:0xf9e6b541,esp
  41700f:	fsubp  st(0),st
  417011:	sti    
  417012:	out    0xa4,eax
  417014:	gs inc esi
  417016:	add    al,0xda
  417018:	sbb    dh,BYTE PTR [esi+0x46]
  41701b:	cmp    eax,0xba0e75de
  417020:	xchg   ecx,eax
  417021:	call   0xd17799aa
  417026:	and    bl,BYTE PTR [esi+0x4d4fc3a]
  41702c:	cmp    eax,0xb5cb9c02
  417031:	jg     0x417045
  417033:	sahf   
  417034:	sub    cl,ch
  417036:	sbb    dh,bh
  417038:	xor    eax,0x4e0041c8
  41703d:	sbb    ebx,edx
  41703f:	jmp    0x553b:0xbb05a515
  417046:	test   BYTE PTR [edx+0x3770c1d2],dl
  41704c:	jmp    0x2c0c:0x62b9bd23
  417053:	xchg   edi,eax
  417054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417055:	mov    dh,0x63
  417057:	jnp    0x417044
  417059:	sti    
  41705a:	cmp    BYTE PTR [edx],al
  41705c:	enter  0xf107,0xdd
  417060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417061:	jno    0x417071
  417063:	mov    ebx,0x56f4d579
  417068:	sbb    ecx,0xffffffca
  41706b:	gs retf 0xd65e
  41706f:	sub    eax,0xbebf5553
  417074:	mov    dl,0xc6
  417076:	lock or eax,0x7fe8377b
  41707c:	loope  0x417052
  41707e:	pop    ebx
  41707f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417080:	sahf   
  417081:	into   
  417082:	mov    ebx,0x8154470f
  417087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417088:	jno    0x417105
  41708a:	sbb    al,dh
  41708c:	add    BYTE PTR [ebp-0x54],dh
  41708f:	add    dl,ch
  417091:	fbld   TBYTE PTR [edi+0x3c]
  417094:	mov    DWORD PTR [ecx+0x502557a5],ebx
  41709a:	adc    al,0x7d
  41709c:	push   esp
  41709d:	(bad)  
  41709e:	push   edi
  41709f:	call   0x3c4c10d9
  4170a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170a5:	popa   
  4170a6:	pop    es
  4170a7:	in     al,dx
  4170a8:	into   
  4170a9:	es cmp ebp,ebx
  4170ac:	retf   
  4170ad:	and    DWORD PTR [eax+0x76201149],ebx
  4170b3:	les    edi,FWORD PTR [ebx]
  4170b5:	add    ecx,DWORD PTR [ebp-0xf80cfd4]
  4170bb:	(bad)  
  4170bd:	jns    0x417100
  4170bf:	or     al,0x3
  4170c1:	cmp    ebp,DWORD PTR [ebp+0x34]
  4170c4:	iret   
  4170c5:	mov    eax,ds:0xe26c1b44
  4170ca:	aad    0x6f
  4170cc:	push   es
  4170cd:	mov    bh,0x95
  4170cf:	outs   dx,BYTE PTR ds:[esi]
  4170d0:	ret    0x63f6
  4170d3:	sar    DWORD PTR [ebx],cl
  4170d5:	jmp    0x6acc:0xbd732ee8
  4170dc:	add    eax,0x495cff62
  4170e1:	call   0x6a85:0x865c67a1
  4170e8:	or     BYTE PTR [ecx+0xf039030],al
  4170ee:	push   es
  4170ef:	pusha  
  4170f0:	sbb    eax,0x30698f27
  4170f5:	aad    0xa5
  4170f7:	xchg   ebx,eax
  4170f8:	lahf   
  4170f9:	or     DWORD PTR [esi],ebx
  4170fb:	das    
  4170fc:	std    
  4170fd:	pop    eax
  4170fe:	shl    BYTE PTR [ecx],1
  417100:	gs loop 0x417148
  417103:	lahf   
  417104:	dec    ecx
  417105:	clc    
  417106:	imul   eax,DWORD PTR [eax],0x7d
  417109:	je     0x417146
  41710b:	xchg   ebx,eax
  41710c:	jl     0x4170b9
  41710e:	bound  esp,QWORD PTR [esi+0x698a1be9]
  417114:	lods   al,BYTE PTR ds:[esi]
  417115:	mov    esp,0xabaf8a1c
  41711a:	outs   dx,DWORD PTR ds:[esi]
  41711b:	and    al,0xa9
  41711d:	scas   al,BYTE PTR es:[edi]
  41711e:	mov    BYTE PTR ds:0xc3737242,ah
  417124:	mov    cl,BYTE PTR [eax+0x2f]
  417127:	add    eax,0x50562ea8
  41712c:	test   BYTE PTR [esi+0x31],cl
  41712f:	pushf  
  417130:	dec    esp
  417131:	lahf   
  417132:	cli    
  417133:	bound  ecx,QWORD PTR [edx+edx*1-0x3cb6e6a1]
  41713a:	in     al,0x3f
  41713c:	jmp    DWORD PTR [ebp+0x73]
  41713f:	enter  0xffc2,0xc4
  417143:	add    DWORD PTR [edi+0x1f9fd3e9],eax
  417149:	outs   dx,DWORD PTR ds:[esi]
  41714a:	imul   esi,DWORD PTR [edi],0xffffff85
  41714d:	xchg   ebx,eax
  41714e:	mov    cl,0x47
  417150:	cmp    DWORD PTR [edx+0x42c7fdcc],esi
  417156:	push   es
  417157:	dec    eax
  417158:	add    BYTE PTR [eiz*8+0x499a3794],0xef
  417160:	xchg   ebp,eax
  417161:	stos   DWORD PTR es:[edi],eax
  417162:	not    BYTE PTR [ebx-0x7b]
  417165:	inc    ebx
  417166:	js     0x4171d1
  417168:	cmp    BYTE PTR ds:0x95e1e15c,dh
  41716e:	jno    0x41712a
  417170:	sub    al,0x47
  417172:	(bad)  
  417173:	sti    
  417174:	sub    cl,BYTE PTR [ecx+0x7a4e590b]
  41717a:	xchg   esi,eax
  41717b:	push   cs
  41717c:	push   cs
  41717d:	(bad)
  417181:	xchg   edx,eax
  417182:	xchg   ebp,eax
  417183:	xor    DWORD PTR [eax+0x384fa958],ebp
  417189:	or     ebx,DWORD PTR [eax-0x69]
  41718c:	fdivp  st(5),st
  41718e:	movzx  edx,WORD PTR [ebp-0x59f58d22]
  417195:	imul   edx,DWORD PTR [ebp-0x64],0x63161bd0
  41719c:	xor    DWORD PTR [eax+0x770c0fad],0xffffffe1
  4171a3:	out    dx,al
  4171a4:	sub    BYTE PTR [ecx-0x582158e6],ch
  4171aa:	lea    edx,[edi+edi*8+0x3e0e926c]
  4171b1:	mov    esp,0xf2583566
  4171b6:	popf   
  4171b7:	mov    ecx,0x9028146e
  4171bc:	push   ebp
  4171bd:	out    dx,eax
  4171be:	pop    es
  4171bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c0:	inc    edi
  4171c1:	push   ecx
  4171c2:	fcmovu st,st(7)
  4171c4:	ret    0x2d6e
  4171c7:	enter  0xd65f,0xa2
  4171cb:	out    0x7d,al
  4171cd:	pop    ebp
  4171ce:	mov    ds:0x3934ea56,al
  4171d3:	add    BYTE PTR [ebp-0x5e],al
  4171d6:	push   ds
  4171d7:	add    ah,BYTE PTR [edi-0x2e]
  4171da:	bound  edi,QWORD PTR [esi+0x5f]
  4171dd:	mov    ebp,DWORD PTR [edi-0x57987834]
  4171e3:	cs inc ecx
  4171e5:	mov    dh,dh
  4171e7:	jmp    0x41719e
  4171e9:	sbb    eax,0x2dc31f47
  4171ee:	test   edx,edx
  4171f0:	mov    al,ds:0x90466728
  4171f5:	in     eax,0x4d
  4171f7:	sbb    ecx,DWORD PTR [ebx]
  4171f9:	test   al,0x88
  4171fb:	outs   dx,BYTE PTR ds:[esi]
  4171fc:	lds    edi,FWORD PTR [edx+0x32]
  4171ff:	aad    0x51
  417201:	mov    dl,0x92
  417203:	pop    esp
  417204:	loopne 0x4171f5
  417206:	sub    BYTE PTR [eax-0x14dc9ba6],dh
  41720c:	inc    esi
  41720d:	adc    al,0x14
  41720f:	xchg   edi,eax
  417210:	cli    
  417211:	push   edi
  417212:	hlt    
  417213:	dec    edx
  417214:	mov    ah,0x17
  417216:	mov    cl,0x9f
  417218:	cmp    DWORD PTR ds:0x3fa2960a,edi
  41721e:	(bad)  
  41721f:	fs add al,0x26
  417222:	inc    ebp
  417223:	and    cl,BYTE PTR [edi]
  417225:	pop    ss
  417226:	idiv   BYTE PTR [edx]
  417228:	ret    0x40
  41722b:	sub    al,0x4d
  41722d:	shl    BYTE PTR [esi],cl
  41722f:	inc    eax
  417230:	outs   dx,BYTE PTR ds:[esi]
  417231:	inc    edx
  417232:	mov    esp,0x3ec0c00d
  417237:	cmc    
  417238:	lds    ecx,FWORD PTR [ebx]
  41723a:	inc    esi
  41723b:	sbb    bl,BYTE PTR [ebp-0x4a294f14]
  417241:	(bad)  
  417242:	outs   dx,BYTE PTR ds:[esi]
  417243:	inc    ebx
  417244:	retf   
  417245:	fwait
  417246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417247:	test   eax,0x32ce7262
  41724c:	inc    edx
  41724d:	out    dx,eax
  41724e:	repnz add DWORD PTR [esi],ecx
  417251:	lods   eax,DWORD PTR ds:[esi]
  417252:	loopne 0x41724b
  417254:	xchg   ecx,eax
  417255:	xchg   edx,eax
  417256:	fcmovb st,st(5)
  417258:	int3   
  417259:	pop    eax
  41725a:	inc    eax
  41725b:	imul   ecx,DWORD PTR [edx],0xffffffa7
  41725e:	sub    DWORD PTR [eax+0x1e2a9366],esi
  417264:	ret    
  417265:	jl     0x417282
  417267:	push   es
  417268:	call   0xa6b12a2c
  41726d:	lahf   
  41726e:	push   edx
  41726f:	ret    
  417270:	popa   
  417271:	clc    
  417272:	xchg   ebx,eax
  417273:	jne    0x4172ed
  417275:	stos   DWORD PTR es:[edi],eax
  417276:	mov    cl,0xe6
  417278:	push   esi
  417279:	fcmovnu st,st(5)
  41727b:	leave  
  41727c:	jp     0x41720e
  41727e:	jmp    0x4172cb
  417280:	stos   BYTE PTR es:[edi],al
  417281:	add    eax,0x7f1300a
  417286:	push   eax
  417288:	push   0xe17d0c49
  41728d:	(bad)  
  41728e:	sahf   
  41728f:	jle    0x417304
  417291:	cwde   
  417292:	adc    eax,DWORD PTR [eax-0x1a]
  417295:	loope  0x4172f8
  417297:	push   ebx
  417298:	(bad)  
  417299:	das    
  41729a:	pop    eax
  41729b:	sbb    eax,0xe47d1852
  4172a0:	jmp    0x4172de
  4172a2:	out    dx,al
  4172a3:	jo     0x417324
  4172a5:	push   eax
  4172a6:	dec    ebx
  4172a7:	or     BYTE PTR [ecx+edi*8],dl
  4172aa:	cwde   
  4172ab:	xor    ebx,0x82425dc3
  4172b1:	sti    
  4172b2:	push   cs
  4172b3:	das    
  4172b4:	mov    DWORD PTR [edx-0x38],edi
  4172b7:	cmp    ch,BYTE PTR [esi-0x4f]
  4172ba:	pop    edx
  4172bb:	loope  0x41729f
  4172bd:	int    0xa
  4172bf:	(bad)  
  4172c0:	arpl   sp,ax
  4172c2:	or     al,BYTE PTR [edi+0x5b737546]
  4172c8:	xchg   dh,al
  4172ca:	pop    edi
  4172cb:	(bad)  
  4172cd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172cf:	lds    ebp,FWORD PTR [ebp-0x51]
  4172d2:	(bad)  
  4172d5:	mov    ss,esi
  4172d7:	mov    ch,0x6b
  4172d9:	ror    ch,cl
  4172db:	int    0x58
  4172dd:	mov    dl,0xbf
  4172df:	scas   eax,DWORD PTR es:[edi]
  4172e0:	call   0x1ebf3303
  4172e5:	add    al,0xa7
  4172e7:	mov    ecx,0x877d4017
  4172ec:	cwde   
  4172ed:	mov    ah,0xda
  4172ef:	and    dl,ch
  4172f1:	add    bh,ah
  4172f3:	mov    cl,0xa9
  4172f5:	mov    ebx,0xd1ddf948
  4172fa:	fild   WORD PTR ds:0xb3be30ac
  417300:	and    edi,ecx
  417302:	sub    al,BYTE PTR es:[eax]
  417305:	call   0x497a4805
  41730a:	inc    ebx
  41730b:	shl    BYTE PTR [edi-0x29010f20],cl
  417311:	cdq    
  417312:	jb     0x4172c0
  417314:	jbe    0x417330
  417316:	fwait
  417317:	(bad)  
  417318:	jle    0x417387
  41731a:	lea    edi,[ebx-0x6c]
  41731d:	inc    ebx
  41731e:	rol    DWORD PTR ds:0xec33e36f,1
  417324:	into   
  417325:	lods   al,BYTE PTR ds:[esi]
  417326:	rcr    DWORD PTR [esi+0x38],cl
  417329:	adc    eax,0xe188e951
  41732e:	pop    ebx
  41732f:	xor    DWORD PTR [ebx],ecx
  417331:	pop    ebx
  417332:	mov    bl,0xb7
  417334:	imul   ecx,DWORD PTR [esi+ebx*2+0x72916f8],0xd1d5fd6f
  41733f:	cmp    DWORD PTR [edx+0x36],ebx
  417342:	mov    eax,ds:0xd326ed19
  417347:	push   ds
  417348:	ins    BYTE PTR es:[edi],dx
  417349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734a:	fnstenv [ebx+eiz*8+0x5d]
  41734e:	and    eax,esi
  417350:	mov    DWORD PTR [edx-0x4615e891],edx
  417356:	cmc    
  417357:	clc    
  417358:	inc    ebp
  417359:	xchg   ecx,eax
  41735a:	push   ds
  41735b:	lock bound edx,QWORD PTR [esi+0x61]
  41735f:	jbe    0x4173b1
  417361:	add    DWORD PTR [edi+ebx*2-0x508100ba],0xffffffaa
  417369:	mov    esp,0x16b93d8a
  41736e:	mov    ds:0xae4617ff,al
  417373:	mul    DWORD PTR [esi-0x78]
  417376:	jge    0x4173c7
  417378:	mov    esi,0x306699e5
  41737d:	mov    al,0xb1
  41737f:	in     eax,dx
  417380:	jmp    0xdfac:0x37cbf7c3
  417387:	(bad)  
  417388:	cmp    ebx,DWORD PTR [eax+eax*4+0x1a956231]
  41738f:	loop   0x4173c6
  417391:	rcr    DWORD PTR [edx],cl
  417393:	jge    0x4173c4
  417395:	aas    
  417396:	rcl    BYTE PTR [esi+eiz*4-0x78],0xe2
  41739b:	sbb    al,0x1a
  41739d:	das    
  41739e:	icebp  
  41739f:	jg     0x41740e
  4173a1:	dec    edx
  4173a2:	loop   0x417407
  4173a4:	adc    dl,BYTE PTR [esi+0x45b6c45a]
  4173aa:	(bad)  
  4173ab:	lods   al,BYTE PTR ds:[esi]
  4173ac:	jg     0x41739b
  4173ae:	out    0x86,al
  4173b0:	mov    ecx,0x4cddb8b8
  4173b5:	in     eax,dx
  4173b6:	repz das 
  4173b8:	xor    DWORD PTR [ebp-0x61],ebx
  4173bb:	out    dx,eax
  4173bc:	mov    eax,ds:0x9ba312ff
  4173c1:	xor    edi,DWORD PTR [ecx]
  4173c3:	dec    ecx
  4173c4:	add    al,0xb0
  4173c6:	aas    
  4173c7:	push   eax
  4173c8:	in     eax,dx
  4173c9:	push   edi
  4173ca:	daa    
  4173cb:	out    0x2a,al
  4173cd:	outs   dx,DWORD PTR ds:[esi]
  4173ce:	lock push ebp
  4173d0:	xchg   ecx,eax
  4173d1:	ja     0x417424
  4173d3:	shr    DWORD PTR [esi-0x740d1745],0xe0
  4173da:	retf   0x8987
  4173dd:	call   0xeeaf:0x4e46b0fa
  4173e4:	or     BYTE PTR [ebp+0x62717111],ch
  4173ea:	retf   0xe9c1
  4173ed:	nop
  4173ee:	push   0x4c
  4173f0:	ins    BYTE PTR es:[edi],dx
  4173f1:	sub    BYTE PTR [esi+0x2a],bh
  4173f4:	fisubr WORD PTR [eax]
  4173f6:	xchg   esp,eax
  4173f7:	mov    ecx,0x1299b84b
  4173fc:	jns    0x417470
  4173fe:	mov    dh,0xcb
  417400:	test   eax,0xfcb8d0b8
  417405:	mov    ah,0xde
  417407:	dec    ebp
  417408:	lock popa 
  41740a:	add    BYTE PTR [edi-0x7ff08628],bl
  417410:	jle    0x4173c6
  417412:	inc    esp
  417413:	mov    ds,WORD PTR [ecx]
  417415:	and    DWORD PTR [eax+edx*2-0x4f],esi
  417419:	aas    
  41741a:	inc    edx
  41741b:	les    ecx,FWORD PTR ss:[edi+0x689c91cd]
  417422:	loopne 0x4173a7
  417424:	jg     0x417478
  417426:	mov    bl,dl
  417428:	js     0x41749b
  41742a:	scas   eax,DWORD PTR es:[edi]
  41742b:	(bad)  
  41742c:	iret   
  41742d:	enter  0x2b29,0x39
  417431:	idiv   BYTE PTR [eax]
  417433:	lods   eax,DWORD PTR ds:[esi]
  417434:	unpcklps xmm5,xmm1
  417437:	inc    eax
  417438:	iret   
  417439:	cmp    BYTE PTR ds:0xd6f6b987,cl
  41743f:	jae    0x4173fa
  417441:	push   ebp
  417442:	cmp    eax,0x522295e3
  417447:	mov    WORD PTR [ecx-0x5e],ds
  41744a:	and    eax,0x3e5efccb
  41744f:	jle    0x417453
  417451:	hlt    
  417452:	nop
  417453:	jge    0x41745a
  417455:	or     ecx,ecx
  417457:	jae    0x41742f
  417459:	dec    ecx
  41745a:	pop    ebp
  41745b:	push   edx
  41745c:	push   ecx
  41745d:	call   0x41df91
  417462:	mov    eax,DWORD PTR [esi]
  417464:	mov    ecx,DWORD PTR [esi+0x4]
  417467:	shrd   eax,ecx,0x2
  41746b:	shr    ecx,0x2
  41746e:	shr    edx,0x1e
  417471:	xor    ecx,0xe702a276
  417477:	jmp    0x417a01
  41747c:	repnz fadd DWORD PTR [eax-0xd9b9f7c]
  417483:	pop    eax
  417484:	loop   0x417458
  417486:	fsubr  DWORD PTR [eax+0x72a2cdf0]
  41748c:	fimul  WORD PTR [edi+0x43d160c]
  417492:	push   ss
  417493:	push   ss
  417494:	push   0xffffffdb
  417496:	xchg   ebx,eax
  417497:	fmul   QWORD PTR [ebp+0x3f]
  41749a:	pop    esp
  41749b:	fs std 
  41749d:	or     al,0x8b
  41749f:	test   DWORD PTR [esi+0x87f3bf5],0xe33da177
  4174a9:	dec    esp
  4174aa:	pop    ebp
  4174ab:	mov    ah,0x44
  4174ad:	dec    ebx
  4174ae:	xchg   DWORD PTR [ebx],edx
  4174b0:	dec    edx
  4174b1:	jb     0x417443
  4174b3:	dec    esp
  4174b4:	pop    ds
  4174b5:	jae    0x41746b
  4174b7:	arpl   WORD PTR [ebx+ebp*4-0x3bc6c8c9],si
  4174be:	sbb    DWORD PTR [ebx],esp
  4174c0:	retf   
  4174c1:	or     dl,dl
  4174c3:	cmp    ah,bl
  4174c5:	std    
  4174c6:	fcom   QWORD PTR [eax+ecx*8]
  4174c9:	shufps xmm4,XMMWORD PTR [edx+ebp*2-0x2c3171c1],0x92
  4174d2:	and    ecx,DWORD PTR [edi+0x43]
  4174d5:	cmc    
  4174d6:	or     BYTE PTR [eax],bl
  4174d8:	js     0x41753a
  4174da:	sub    ecx,eax
  4174dc:	mov    ecx,0x92835a17
  4174e1:	fst    st(0)
  4174e3:	sahf   
  4174e4:	jbe    0x417560
  4174e6:	mov    eax,ds:0x8fe39574
  4174eb:	sub    DWORD PTR [ebp+0x10],0xeca61da3
  4174f2:	aam    0x97
  4174f4:	pusha  
  4174f5:	in     al,dx
  4174f6:	jge    0x417506
  4174f8:	xchg   ebx,eax
  4174f9:	lea    eax,[edi+0x1d]
  4174fc:	push   eax
  4174fd:	mov    ebp,0x50c84daa
  417502:	pop    eax
  417503:	inc    esp
  417504:	mov    ds:0xacc95435,eax
  417509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750a:	(bad)  
  41750b:	cmp    DWORD PTR [esi-0x10],ecx
  41750e:	dec    eax
  41750f:	push   ds
  417510:	ror    BYTE PTR [edx],cl
  417512:	fstp   QWORD PTR [ecx-0x5a]
  417515:	xchg   esi,eax
  417516:	push   eax
  417517:	push   ecx
  417518:	dec    ecx
  417519:	sahf   
  41751a:	ret    0x7ccf
  41751d:	and    bl,BYTE PTR [esi]
  41751f:	ss inc ebp
  417521:	xchg   ebx,eax
  417522:	call   FWORD PTR [edx-0x8]
  417525:	or     bl,cl
  417527:	xor    ecx,ebx
  417529:	mov    bh,0x97
  41752b:	arpl   WORD PTR [ecx+ecx*8],dx
  41752e:	ja     0x417561
  417530:	sahf   
  417531:	out    0xb4,al
  417533:	add    esp,DWORD PTR [esi-0x5a298301]
  417539:	pop    edi
  41753a:	mov    eax,0x7ff8fe18
  41753f:	mov    BYTE PTR [esp+edi*1+0x61330baf],al
  417546:	into   
  417547:	xchg   ebx,eax
  417548:	or     BYTE PTR [edi+0x53],dh
  41754b:	add    eax,0x7240a1da
  417550:	(bad)  
  417551:	std    
  417552:	cmp    eax,0xcbbbbeb7
  417557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417558:	pusha  
  417559:	cmp    al,0x17
  41755b:	push   ecx
  41755c:	adc    edi,DWORD PTR [edi]
  41755e:	xor    eax,0x1f6d3cbc
  417563:	daa    
  417564:	cmp    bl,BYTE PTR [eax-0x6c]
  417567:	mov    ds:0xe6fde680,eax
  41756c:	adc    eax,0x913080b4
  417571:	mov    dh,0x52
  417573:	hlt    
  417574:	out    0xb,al
  417576:	cmp    al,0xff
  417578:	test   BYTE PTR [esi+esi*2+0x331eb2d6],al
  41757f:	out    0xa3,al
  417581:	sub    al,0x33
  417583:	xor    al,0xbf
  417585:	xor    bh,BYTE PTR ds:0x7e62dc7a
  41758b:	xchg   edx,eax
  41758c:	cmp    DWORD PTR [edi],ebp
  41758e:	jno    0x4175f5
  417590:	nop
  417591:	retf   0x67b0
  417594:	enter  0x36b9,0xf4
  417598:	(bad)
  41759c:	dec    cx
  41759e:	jns    0x41753d
  4175a0:	mov    ah,0x3b
  4175a2:	pop    edx
  4175a3:	cs pop edi
  4175a5:	push   esp
  4175a6:	cli    
  4175a7:	xor    al,0xe5
  4175a9:	repnz mov ebx,0xee162a8d
  4175af:	mov    bh,0xbb
  4175b1:	adc    DWORD PTR es:[ebx-0x25626015],ebp
  4175b8:	lock push ecx
  4175ba:	push   cs
  4175bb:	call   0xef35e38e
  4175c0:	xor    al,0x1e
  4175c2:	cmp    al,0x5c
  4175c4:	xchg   edi,eax
  4175c5:	adc    eax,0x4713837d
  4175ca:	in     al,dx
  4175cb:	daa    
  4175cc:	dec    ebp
  4175cd:	lds    eax,FWORD PTR ds:0x19cb995c
  4175d3:	mov    cl,0x37
  4175d5:	daa    
  4175d6:	aas    
  4175d7:	cmp    ah,BYTE PTR [eax]
  4175d9:	in     eax,0x5e
  4175db:	in     al,0x8f
  4175dd:	enter  0xbfec,0xaf
  4175e1:	adc    cl,BYTE PTR [ebp+eiz*4-0x3108157b]
  4175e8:	popf   
  4175e9:	loopne 0x4175e0
  4175eb:	hlt    
  4175ec:	add    al,0x5b
  4175ee:	ds inc ecx
  4175f0:	mov    edi,0x1d27a0e3
  4175f5:	mov    al,0x71
  4175f7:	test   al,0x49
  4175f9:	aaa    
  4175fa:	clc    
  4175fb:	mov    eax,0x58436c48
  417600:	or     eax,0xd6b1d779
  417605:	icebp  
  417606:	mov    WORD PTR [edx+0x214984a3],ds
  41760c:	fidivr DWORD PTR [edx-0x14]
  41760f:	xchg   edx,eax
  417610:	stc    
  417611:	call   0x55e0:0x5913b7cb
  417618:	int    0xe8
  41761a:	test   eax,0xfe218c13
  41761f:	out    0x11,al
  417621:	into   
  417622:	int    0xf5
  417624:	ror    DWORD PTR [ecx+eiz*4-0x579eec22],cl
  41762b:	sahf   
  41762c:	shl    BYTE PTR [ebx],cl
  41762e:	aaa    
  41762f:	inc    eax
  417630:	adc    eax,0x1804d3e0
  417635:	ins    DWORD PTR es:[edi],dx
  417636:	xor    eax,0x3e1b29ce
  41763b:	mov    dl,0xcf
  41763d:	std    
  41763e:	sub    BYTE PTR [ebp+0x6f557750],cl
  417644:	(bad)  
  417646:	pusha  
  417647:	inc    eax
  417648:	push   edi
  417649:	jo     0x4176a5
  41764b:	pusha  
  41764c:	inc    esp
  41764d:	mov    WORD PTR [eax],gs
  41764f:	dec    ebx
  417650:	or     DWORD PTR [edx+0x4ca353ab],0xffffffc3
  417657:	mov    ch,0xfb
  417659:	mov    dl,0x5a
  41765b:	mov    ds:0xca0661d3,al
  417660:	es std 
  417662:	jl     0xffda17ed
  417668:	repnz stos BYTE PTR es:[edi],al
  41766a:	dec    ebx
  41766b:	xchg   ebx,eax
  41766c:	xchg   ecx,eax
  41766d:	mov    DWORD PTR [ebx+0x2092bf48],0xefc69a8d
  417677:	daa    
  417678:	inc    esi
  417679:	mov    ds:0x8c00fe26,eax
  41767e:	enter  0xa27,0xb8
  417682:	cmp    esp,0xa8bb6731
  417688:	xchg   cl,bl
  41768a:	inc    eax
  41768b:	out    dx,al
  41768c:	pop    eax
  41768d:	jo     0x417618
  41768f:	pop    ebx
  417690:	add    dh,ch
  417692:	mov    al,ds:0xf8877dbf
  417697:	mov    esp,0x639177af
  41769c:	daa    
  41769d:	inc    ecx
  41769e:	retf   0x4e9f
  4176a1:	ret    
  4176a2:	xor    eax,DWORD PTR [ecx]
  4176a4:	xchg   esp,eax
  4176a5:	sbb    dl,cl
  4176a7:	in     al,0xab
  4176a9:	pop    ecx
  4176aa:	mov    eax,ds:0xe75b1928
  4176af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176b0:	lods   al,BYTE PTR cs:[esi]
  4176b2:	repz cmp al,0x1f
  4176b5:	mov    al,ds:0x44cfcaad
  4176ba:	adc    al,ch
  4176bc:	mov    esp,0x2adcd471
  4176c1:	clc    
  4176c2:	xor    edi,DWORD PTR [esi]
  4176c4:	jb     0x4176c1
  4176c6:	repnz and cl,ch
  4176c9:	add    dh,bh
  4176cb:	dec    ecx
  4176cc:	cmp    al,0xb3
  4176ce:	ins    BYTE PTR es:[edi],dx
  4176cf:	aaa    
  4176d0:	(bad)  
  4176d1:	sbb    ebp,esi
  4176d3:	and    BYTE PTR [edx-0x3442af6f],ch
  4176d9:	xchg   edx,eax
  4176da:	cmp    esi,ebp
  4176dc:	xor    DWORD PTR [edi-0x2b],esp
  4176df:	les    ebp,FWORD PTR [ecx+0x3e27b57e]
  4176e5:	stos   DWORD PTR es:[edi],eax
  4176e6:	shl    DWORD PTR [ebp-0x33],0xc3
  4176ea:	in     al,dx
  4176eb:	adc    al,bl
  4176ed:	or     edx,DWORD PTR [ecx+0x1559308d]
  4176f3:	icebp  
  4176f4:	dec    ebx
  4176f5:	sbb    al,0x20
  4176f7:	daa    
  4176f8:	std    
  4176f9:	mov    edx,0x73d3dfdf
  4176fe:	(bad)  
  4176ff:	mov    edx,0xf1629de2
  417704:	sbb    DWORD PTR [edi],ebp
  417706:	or     eax,0x9e012ccd
  41770b:	pop    ecx
  41770c:	in     al,0x9a
  41770e:	add    al,0xe
  417710:	test   DWORD PTR [ecx],edx
  417712:	jmp    0xbf028a70
  417717:	daa    
  417718:	lea    edi,[edx+ebp*2+0x1b]
  41771c:	lods   al,BYTE PTR ds:[esi]
  41771d:	mov    edx,0x4efff254
  417722:	adc    esi,0x4acd977d
  417728:	sbb    BYTE PTR [eax-0x7b7f980d],ah
  41772e:	enter  0xe533,0x74
  417732:	sub    esp,ebp
  417734:	add    BYTE PTR [edi-0x5a28e35c],cl
  41773a:	ret    
  41773b:	pop    esi
  41773c:	(bad)  
  41773d:	enter  0x30db,0xdf
  417741:	or     eax,0x7506defe
  417746:	jnp    0x417744
  417748:	in     al,dx
  417749:	adc    eax,0xa0210ae4
  41774e:	je     0x417742
  417750:	jae    0x4176ef
  417752:	jo     0x417713
  417754:	in     al,0x20
  417756:	int    0x40
  417758:	dec    ebx
  417759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775a:	sub    esp,DWORD PTR [ebx]
  41775c:	jnp    0x41773d
  41775e:	sbb    ebp,ebp
  417760:	pop    esp
  417761:	mov    cs,WORD PTR gs:[edi+eiz*4+0x57]
  417766:	mov    bh,0x54
  417768:	ins    BYTE PTR es:[edi],dx
  417769:	jo     0x4177a5
  41776b:	xor    DWORD PTR [ecx+ebp*1],eax
  41776e:	pop    ss
  41776f:	popf   
  417770:	mov    WORD PTR [esi+ebx*8+0x3e009b49],ss
  417777:	ror    BYTE PTR [edi],cl
  417779:	sub    ebx,DWORD PTR [esi+edx*4]
  41777c:	rol    DWORD PTR [ebx],cl
  41777e:	loop   0x417763
  417780:	cld    
  417781:	mov    ch,0x67
  417783:	loop   0x417761
  417785:	mov    al,0x5c
  417787:	sub    BYTE PTR [ebp+eiz*8-0x72],ah
  41778b:	add    al,0x51
  41778d:	hlt    
  41778e:	test   dh,ch
  417790:	inc    ecx
  417791:	popa   
  417792:	jne    0x4177f5
  417794:	fmul   QWORD PTR [eax+0x67]
  417797:	jns    0x41771f
  417799:	sbb    ch,al
  41779b:	inc    ecx
  41779c:	dec    esp
  41779d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41779e:	push   0x2c3134e5
  4177a3:	cmp    ecx,DWORD PTR gs:[edx*8+0x16fd84ca]
  4177ab:	xor    eax,0xef26fb2a
  4177b0:	push   0xffffffa0
  4177b2:	out    dx,eax
  4177b3:	sbb    eax,0xf180bfa0
  4177b8:	inc    DWORD PTR [edx-0x2c488984]
  4177be:	xchg   DWORD PTR [ebx+0x8],edx
  4177c1:	mov    esp,0xb338df83
  4177c6:	mov    ecx,DWORD PTR [ebx-0x238e8f35]
  4177cc:	dec    esp
  4177cd:	cmp    bl,BYTE PTR [ebx-0x45bd5203]
  4177d3:	jg     0x4177aa
  4177d5:	dec    ebp
  4177d6:	mov    BYTE PTR [eax-0x281c5ff6],al
  4177dc:	dec    edi
  4177dd:	inc    ebp
  4177de:	sub    eax,0x88ef7a98
  4177e3:	mov    ds:0xccb68552,eax
  4177e8:	inc    esi
  4177e9:	sti    
  4177ea:	ins    DWORD PTR es:[edi],dx
  4177eb:	push   ecx
  4177ec:	test   DWORD PTR [ecx],eax
  4177ee:	inc    eax
  4177ef:	push   0xe2e64232
  4177f4:	push   edi
  4177f5:	lock inc eax
  4177f7:	inc    edx
  4177f8:	enter  0x3896,0x12
  4177fc:	cdq    
  4177fd:	call   0x738f:0xfdb5cd12
  417804:	dec    edi
  417805:	jmp    0x417866
  417807:	out    dx,eax
  417808:	shl    DWORD PTR [ebx],0xe3
  41780b:	xchg   BYTE PTR [esi-0x2a2e6638],dh
  417811:	push   esi
  417812:	adc    DWORD PTR [eax+ebx*1+0x40],0xffffffe0
  417817:	ins    DWORD PTR es:[edi],dx
  417818:	call   0x2b76a6e6
  41781d:	jmp    0x417881
  41781f:	out    dx,eax
  417820:	xor    ch,al
  417822:	mov    edi,0xe78512f1
  417827:	iret   
  417828:	jecxz  0x417878
  41782a:	mov    DWORD PTR [edx],ecx
  41782c:	adc    al,ah
  41782e:	cmp    al,bh
  417830:	ins    BYTE PTR es:[edi],dx
  417831:	pop    ecx
  417832:	sbb    ecx,DWORD PTR [eax+0x42]
  417835:	ficom  WORD PTR [edx+0x77193eb0]
  41783b:	out    0x63,eax
  41783d:	lds    ebp,FWORD PTR [edx-0x26]
  417840:	test   al,0xb0
  417842:	lahf   
  417843:	mov    ebx,0x7fb099d7
  417848:	sbb    BYTE PTR [ebp+0x135ab7d3],dl
  41784e:	pop    esp
  41784f:	jle    0x41788f
  417851:	fsubr  DWORD PTR [eax+0x73]
  417854:	push   edx
  417855:	popa   
  417856:	mov    cl,0xe7
  417858:	loopne 0x417803
  41785a:	cld    
  41785b:	push   0x6d0c27cc
  417860:	in     al,0xf1
  417862:	jb     0x4177ef
  417864:	mov    al,ds:0xf2b565c
  417869:	inc    edx
  41786a:	jle    0x41787e
  41786c:	mov    bl,0x44
  41786e:	(bad)  
  41786f:	stc    
  417870:	adc    al,0xbf
  417872:	pop    edi
  417873:	inc    ebx
  417874:	loopne 0x417894
  417876:	xor    BYTE PTR [esi+0x6a406a10],0x3b
  41787d:	out    0xe,al
  41787f:	mov    dh,0xa3
  417881:	cmp    DWORD PTR [eax],ebx
  417883:	sub    cl,ch
  417885:	push   edx
  417886:	cwde   
  417887:	mov    bh,0xf6
  417889:	call   0x3e2accbf
  41788e:	retf   0x9239
  417891:	pop    esi
  417892:	sahf   
  417893:	sub    BYTE PTR [ebx+eiz*4+0x60dabd27],dh
  41789a:	inc    DWORD PTR [ecx]
  41789c:	mov    eax,0x7f2fd656
  4178a1:	jb     0x4178ef
  4178a3:	popa   
  4178a4:	arpl   WORD PTR [ebx],bx
  4178a6:	retf   
  4178a7:	and    cl,BYTE PTR [eax+0x72]
  4178aa:	push   edx
  4178ab:	iret   
  4178ac:	(bad)  [ebx]
  4178ae:	daa    
  4178af:	push   es
  4178b0:	mov    ebx,0xfe75e4e4
  4178b5:	sbb    BYTE PTR ds:0x411654bc,0xc4
  4178bc:	sub    ch,al
  4178be:	push   esi
  4178bf:	pop    ecx
  4178c0:	das    
  4178c1:	ror    DWORD PTR [ecx],0x43
  4178c4:	push   edx
  4178c5:	stos   DWORD PTR es:[edi],eax
  4178c6:	mov    bh,cl
  4178c8:	arpl   WORD PTR [edi+0x5],di
  4178cb:	jmp    0x10da:0x106595ca
  4178d2:	clc    
  4178d3:	mov    dl,0x83
  4178d5:	fstp   TBYTE PTR [esi+0x43a04456]
  4178db:	xor    dl,0xc4
  4178de:	ins    BYTE PTR es:[edi],dx
  4178df:	into   
  4178e0:	lea    esi,[edx-0x3d]
  4178e3:	mov    BYTE PTR [ebp-0x516b2f38],ah
  4178e9:	cmp    ebp,esp
  4178eb:	mov    dl,0xe1
  4178ed:	xchg   ebx,eax
  4178ee:	fisub  WORD PTR [ebx+0x5a591bbd]
  4178f4:	pop    eax
  4178f5:	pop    esi
  4178f6:	inc    ebx
  4178f7:	and    BYTE PTR [eax+ebp*2-0x7710d7aa],bh
  4178fe:	jns    0x41788e
  417900:	mov    DWORD PTR [edx-0x2a],0xdebfa6a9
  417907:	and    eax,0x7167ba86
  41790c:	mov    ebx,DWORD PTR [edi]
  41790e:	mov    ebx,DWORD PTR [ecx+0x60]
  417911:	xchg   edi,eax
  417912:	inc    ebp
  417913:	inc    eax
  417914:	sbb    eax,0x6264ff54
  417919:	ret    0x76ff
  41791c:	inc    edx
  41791d:	fbld   TBYTE PTR [eax]
  41791f:	or     edx,DWORD PTR [edx+ebp*2-0x738e42a2]
  417926:	mov    bl,BYTE PTR [ecx-0x3a]
  417929:	lds    edi,FWORD PTR [edi+eiz*4]
  41792c:	push   es
  41792d:	cmp    DWORD PTR [eax-0x6ed8f25],edi
  417933:	cld    
  417934:	push   edx
  417935:	jnp    0x4179ac
  417937:	pop    ecx
  417938:	cmp    cl,al
  41793a:	popa   
  41793b:	js     0x4178f2
  41793d:	cmp    bh,BYTE PTR [ebx]
  41793f:	fidiv  DWORD PTR [edx-0x4b47eace]
  417945:	mov    dh,0xe8
  417947:	xchg   edi,edx
  417949:	dec    edi
  41794a:	fcompp 
  41794c:	push   0x2c611758
  417951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417952:	adc    esi,DWORD PTR [esi-0x3b]
  417955:	xor    BYTE PTR [esp+ebx*8+0x37],bl
  417959:	call   0xe830:0x100d1d7b
  417960:	stc    
  417961:	fsub   QWORD PTR [ecx-0x4e]
  417964:	dec    esp
  417965:	inc    esp
  417966:	mov    bl,dh
  417968:	jp     0x41798f
  41796a:	stc    
  41796b:	jns    0x4179d2
  41796d:	std    
  41796e:	add    DWORD PTR [ebx+0x4de40ac3],ecx
  417974:	push   ecx
  417975:	xchg   ebx,eax
  417976:	cmp    BYTE PTR [esi],ah
  417978:	push   ebp
  417979:	adc    dl,BYTE PTR [edx+0xa816ee1]
  41797f:	mov    cl,dl
  417981:	mov    esp,0xcb29f155
  417986:	fcom   DWORD PTR [ebx]
  417988:	xor    ch,ah
  41798a:	xchg   eax,ebx
  41798c:	mov    dh,0x83
  41798e:	jg     0x4179c9
  417990:	hlt    
  417991:	sbb    DWORD PTR [ebp-0x6c],ebx
  417994:	lock aas 
  417996:	inc    eax
  417997:	xor    cl,BYTE PTR [ecx]
  417999:	adc    eax,0x53c89a08
  41799e:	in     eax,dx
  41799f:	mov    edx,0xc55ae573
  4179a4:	(bad)  
  4179a6:	pop    es
  4179a7:	adc    DWORD PTR [ebx],0xe3809c43
  4179ad:	fdiv   DWORD PTR [eax+0x71]
  4179b0:	sbb    al,0xbd
  4179b2:	lds    edx,FWORD PTR ss:[esi]
  4179b5:	dec    ecx
  4179b6:	inc    edi
  4179b7:	pop    ds
  4179b8:	jno    0x417a28
  4179ba:	(bad)  
  4179bb:	(bad)  
  4179bd:	test   eax,0xf2520479
  4179c2:	fiadd  WORD PTR [eax-0x9b0a17e]
  4179c8:	test   DWORD PTR [edi],eax
  4179ca:	or     eax,0x9251029b
  4179cf:	pop    edx
  4179d0:	or     eax,0x16e57bba
  4179d5:	mov    cl,0x9b
  4179d7:	push   0x55
  4179d9:	(bad)  
  4179da:	repz lds esi,FWORD PTR [ecx-0x2b]
  4179de:	xchg   ebp,eax
  4179df:	nop
  4179e0:	fs data16 daa 
  4179e3:	mov    cl,0xce
  4179e5:	push   ecx
  4179e6:	loop   0x417a2f
  4179e8:	inc    ebx
  4179e9:	ret    0xab0c
  4179ec:	push   ebx
  4179ed:	inc    esi
  4179ee:	ds adc dl,dl
  4179f1:	fisub  WORD PTR [edx+edx*8+0x1f]
  4179f5:	repnz mov ecx,0xf9d6e29c
  4179fb:	cmp    al,0x85
  4179fd:	ror    BYTE PTR [eax],cl
  4179ff:	jle    0x417a40
  417a01:	push   ecx
  417a02:	xor    eax,edi
  417a04:	mov    DWORD PTR [ebp+0x10],edx
  417a07:	mov    edx,DWORD PTR [ebx]
  417a09:	jmp    0x417f93
  417a0e:	in     al,dx
  417a0f:	and    cl,BYTE PTR [esi-0x3d]
  417a12:	dec    eax
  417a13:	mov    ds:0xcc442870,eax
  417a18:	xor    BYTE PTR [edx+0x740dceb0],0x4
  417a1f:	jnp    0x417a2d
  417a21:	push   ss
  417a22:	cmp    eax,0x6b161604
  417a27:	(bad)  
  417a28:	push   esi
  417a29:	in     al,0x6f
  417a2b:	pushf  
  417a2c:	cmp    DWORD PTR [ecx+0x6d],0x4877b202
  417a33:	jge    0x4179f6
  417a35:	xor    al,0xf9
  417a37:	dec    ebp
  417a38:	adc    BYTE PTR [esi-0x19],al
  417a3b:	test   al,0x62
  417a3d:	mov    DWORD PTR [ecx+0x7f6e4696],esi
  417a43:	mov    bl,0x37
  417a45:	inc    edx
  417a46:	sbb    BYTE PTR ds:0x39cf24c6,bl
  417a4c:	pop    esi
  417a4d:	mov    ebp,0x4c27b10e
  417a52:	aaa    
  417a53:	pop    edx
  417a54:	dec    eax
  417a55:	cs stos DWORD PTR es:[edi],eax
  417a57:	or     DWORD PTR [edi+0x22],esi
  417a5a:	rcl    BYTE PTR [eax+0x570c1464],cl
  417a60:	scas   eax,DWORD PTR es:[edi]
  417a61:	xlat   BYTE PTR es:[ebx]
  417a63:	push   ebx
  417a64:	mov    eax,0x6b02ceea
  417a69:	mov    cl,0xb8
  417a6b:	lahf   
  417a6c:	add    eax,0xc7e6e775
  417a71:	inc    edx
  417a72:	test   eax,0x77ba9894
  417a77:	fiadd  WORD PTR ds:0xacfa4091
  417a7d:	sub    al,0x97
  417a7f:	and    BYTE PTR [eax+0x19],ch
  417a82:	xor    al,0xcb
  417a84:	or     ebx,DWORD PTR [ebx]
  417a86:	jmp    0x146:0x3b60d47a
  417a8d:	sub    bl,BYTE PTR [ecx]
  417a8f:	cmp    BYTE PTR [edx],ah
  417a91:	fcomp  DWORD PTR [edi+0x56cda1ca]
  417a97:	mov    bh,0xc8
  417a99:	mov    ebp,0xac1d8e37
  417a9e:	cwde   
  417a9f:	inc    ebp
  417aa0:	jmp    0x43529ffc
  417aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa6:	rol    DWORD PTR [edi+0x46],0xc4
  417aaa:	push   0xf5436eb5
  417aaf:	test   eax,0x132c94ae
  417ab4:	jae    0x417a91
  417ab6:	add    DWORD PTR ds:0xeba35dea,ebp
  417abc:	push   esp
  417abd:	xor    ecx,DWORD PTR [edi+0x4839117]
  417ac3:	out    dx,eax
  417ac4:	fild   WORD PTR [edx+0x51]
  417ac7:	mov    dh,0x13
  417ac9:	xchg   edx,eax
  417aca:	lods   eax,DWORD PTR ds:[esi]
  417acb:	imul   esi,DWORD PTR [ecx],0xffffff84
  417ace:	fs push edx
  417ad0:	ret    0x5c56
  417ad3:	in     al,0x1c
  417ad5:	cs cdq 
  417ad7:	sar    DWORD PTR [bp+di],1
  417ada:	in     al,dx
  417adb:	lds    eax,FWORD PTR [edi-0x4ed336e7]
  417ae1:	mov    esp,0xa51a4a7e
  417ae6:	inc    ebx
  417ae7:	rcl    BYTE PTR ds:0x7798c30,cl
  417aed:	dec    ebx
  417aee:	xor    BYTE PTR [ebp+0x3d66567f],cl
  417af4:	inc    edx
  417af5:	xor    al,0x55
  417af7:	fcomp  QWORD PTR [edi-0x6f4518ce]
  417afd:	cmp    eax,0xa331733d
  417b02:	sub    edx,DWORD PTR [ebx]
  417b04:	pop    esp
  417b05:	adc    DWORD PTR [ebx],edi
  417b07:	cld    
  417b08:	sub    al,0x83
  417b0a:	rcl    BYTE PTR [ecx+0x30f9cb3],0x76
  417b11:	push   es
  417b12:	mov    WORD PTR [edi],es
  417b14:	stos   DWORD PTR es:[edi],eax
  417b15:	arpl   si,bx
  417b17:	jno    0x417ab4
  417b19:	ret    0x627b
  417b1c:	push   esi
  417b1d:	das    
  417b1e:	mov    edi,0x9148f5fc
  417b23:	rcr    BYTE PTR [edi-0x36],1
  417b26:	jne    0x417af0
  417b28:	aaa    
  417b29:	xchg   ebp,eax
  417b2a:	inc    ebp
  417b2b:	mov    ebx,0x9656fe19
  417b30:	stos   BYTE PTR es:[edi],al
  417b31:	dec    esp
  417b32:	sbb    al,0xcf
  417b34:	sub    al,0x7d
  417b36:	jne    0x417b64
  417b38:	pop    edi
  417b39:	xor    BYTE PTR [edi+0x26c22541],al
  417b3f:	pop    edi
  417b40:	lahf   
  417b41:	fstp   QWORD PTR ds:0x30feb0fd
  417b47:	(bad)  
  417b48:	or     esi,DWORD PTR [ebx-0x4225aa19]
  417b4e:	jae    0x417b63
  417b50:	inc    edx
  417b51:	(bad)  
  417b53:	pop    ecx
  417b54:	sbb    DWORD PTR ds:0x5fc9891a,esi
  417b5a:	ror    esi,cl
  417b5c:	pop    edi
  417b5d:	mov    ds:0xadcb2bc8,al
  417b62:	xor    dh,dh
  417b64:	pop    edx
  417b65:	sub    BYTE PTR [edx],0xa1
  417b68:	addr16 jae 0x417b51
  417b6b:	jbe    0x417b00
  417b6d:	stc    
  417b6e:	lods   al,BYTE PTR ds:[esi]
  417b6f:	dec    ecx
  417b70:	push   0x5b
  417b72:	call   0x9417ed13
  417b77:	sbb    ebp,DWORD PTR [ebp-0x2d]
  417b7a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7c:	(bad)  
  417b7d:	js     0x417bc8
  417b7f:	ret    
  417b80:	call   0x38a2f255
  417b85:	mov    ebx,0xaa6cfe65
  417b8a:	fiadd  WORD PTR [ebp+0x9f4c356]
  417b90:	nop
  417b91:	popf   
  417b92:	outs   dx,BYTE PTR ds:[esi]
  417b93:	cs jnp 0x417b86
  417b96:	dec    esi
  417b97:	(bad)  
  417b99:	push   bp
  417b9b:	sub    al,0x45
  417b9d:	add    ecx,DWORD PTR [esi]
  417b9f:	jle    0x417b9d
  417ba1:	mov    DWORD PTR [ebx-0x4a],ebp
  417ba4:	sub    bh,BYTE PTR [eax-0x2c159989]
  417baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bab:	pop    edx
  417bac:	mov    bl,0x68
  417bae:	dec    edi
  417baf:	sbb    BYTE PTR [edi-0x743b9531],ch
  417bb5:	int    0xcb
  417bb7:	sub    al,0x5a
  417bb9:	test   BYTE PTR [esi+0x72],ch
  417bbc:	pusha  
  417bbd:	add    BYTE PTR [edi+0x704c8424],bh
  417bc3:	add    DWORD PTR [ebp-0x5cb10161],eax
  417bc9:	push   edi
  417bca:	xchg   BYTE PTR [esi-0x11],bl
  417bcd:	fstp   QWORD PTR [ebx-0x7a7dcd52]
  417bd3:	fdivr  QWORD PTR ds:[ecx]
  417bd6:	jmp    0xf9dd3531
  417bdb:	fldenv [edi-0x4bb99f03]
  417be1:	jmp    0x81708dae
  417be6:	mov    al,ds:0xae409b1f
  417beb:	icebp  
  417bec:	mov    dh,0x8f
  417bee:	add    eax,0x140005d5
  417bf3:	call   0x7075:0xd11bb402
  417bfa:	jns    0x417ba2
  417bfc:	xchg   ebx,eax
  417bfd:	or     bl,BYTE PTR [ebx]
  417bff:	mov    ecx,0x3e758356
  417c04:	outs   dx,BYTE PTR ds:[esi]
  417c05:	lods   al,BYTE PTR ds:[esi]
  417c06:	dec    esp
  417c07:	sbb    BYTE PTR [edx],bh
  417c09:	jb     0x417c01
  417c0b:	inc    esi
  417c0c:	sub    BYTE PTR [edi+0x34],ah
  417c0f:	je     0x417bb1
  417c11:	mov    edi,0x5f09c203
  417c16:	int3   
  417c17:	sub    eax,0x3da73b49
  417c1c:	mov    esi,0x679f4732
  417c21:	sti    
  417c22:	(bad)  
  417c23:	mov    ecx,0x4bdc5ebc
  417c28:	sti    
  417c29:	mov    esp,0x9ec7a915
  417c2e:	jmp    0x726ffee2
  417c33:	ins    BYTE PTR es:[edi],dx
  417c34:	lea    ecx,[edi+0x2e]
  417c37:	enter  0x123e,0x88
  417c3b:	or     al,0x8f
  417c3d:	jo     0x417bcd
  417c3f:	unpckhps xmm4,XMMWORD PTR [ebx+0x35bf121a]
  417c46:	enter  0x5a47,0x4e
  417c4a:	daa    
  417c4b:	pop    ebx
  417c4c:	jns    0x417c49
  417c4e:	pop    ebp
  417c4f:	cwde   
  417c50:	sub    DWORD PTR ds:[ecx+0x11],ecx
  417c54:	mov    ?,edx
  417c56:	mov    WORD PTR [eax],gs
  417c58:	dec    ebp
  417c59:	lahf   
  417c5a:	into   
  417c5b:	cmovge ecx,DWORD PTR [esi-0x34a4ff4]
  417c62:	pop    ss
  417c63:	mov    bh,0x6d
  417c65:	test   eax,0xe072fdfb
  417c6a:	ss (bad) 
  417c6c:	sbb    al,al
  417c6e:	repz sub edi,DWORD PTR [esi]
  417c71:	and    eax,0x1aab9d1c
  417c76:	test   al,0xc6
  417c78:	in     al,0x88
  417c7a:	mov    esi,0x70c0df76
  417c7f:	mov    BYTE PTR [ecx],bh
  417c81:	lods   al,BYTE PTR ds:[esi]
  417c82:	or     eax,0x36ccb754
  417c87:	ret    
  417c88:	jecxz  0x417cd8
  417c8a:	sbb    DWORD PTR [ebx-0x227de1bd],esi
  417c90:	pop    eax
  417c91:	(bad)  
  417c93:	push   ecx
  417c94:	inc    esi
  417c95:	pop    edx
  417c96:	dec    edi
  417c97:	rol    esp,0x39
  417c9a:	push   0x2a
  417c9c:	mov    esi,0x8c5a418
  417ca1:	es jecxz 0x417c38
  417ca4:	push   ebp
  417ca5:	xchg   al,al
  417ca7:	push   es
  417ca8:	mov    bl,0xa1
  417caa:	out    dx,al
  417cab:	mov    al,ds:0x93b3c465
  417cb0:	jecxz  0x417c45
  417cb2:	add    esi,edx
  417cb4:	mov    ebp,0x4adddee7
  417cb9:	pop    esp
  417cba:	mov    esi,0xcc4aee23
  417cbf:	sbb    al,0x5a
  417cc1:	or     DWORD PTR [esi+eax*8+0x45d49ab5],eax
  417cc8:	dec    esp
  417cc9:	hlt    
  417cca:	xchg   esi,eax
  417ccb:	push   eax
  417ccc:	or     eax,0x823e1130
  417cd1:	lea    ebx,[eax]
  417cd3:	std    
  417cd4:	mov    ds:0xff6ab290,al
  417cd9:	pop    esi
  417cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cdb:	inc    ebp
  417cdc:	fwait
  417cdd:	cmp    eax,0x8712dae7
  417ce2:	fwait
  417ce3:	scas   eax,DWORD PTR es:[edi]
  417ce4:	inc    esi
  417ce5:	imul   ebx,DWORD PTR [esi-0x1]
  417ce9:	pushf  
  417cea:	adc    ecx,DWORD PTR [ebx]
  417cec:	idiv   BYTE PTR [esp+ecx*1+0x6d]
  417cf0:	lock (bad) 
  417cf2:	cmc    
  417cf3:	mov    ah,0x84
  417cf5:	retf   0xf00c
  417cf8:	in     eax,dx
  417cf9:	rol    BYTE PTR [ebx+0x574b55e5],cl
  417cff:	das    
  417d00:	js     0x417d17
  417d02:	ret    
  417d03:	loopne 0x417cee
  417d05:	pop    ds
  417d06:	mov    edx,0x9e8ac097
  417d0b:	repnz fdiv DWORD PTR [ebx+0x45]
  417d0f:	aad    0xec
  417d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d12:	enter  0xe122,0xd0
  417d16:	pop    ebx
  417d17:	mov    dh,0xbd
  417d19:	daa    
  417d1a:	and    BYTE PTR [ebx+0x26],bh
  417d1d:	adc    BYTE PTR [ebx],ah
  417d1f:	aaa    
  417d20:	jl     0x417d9f
  417d22:	mov    ebx,0xf4c2e60a
  417d27:	mov    al,ds:0x1b0446d4
  417d2c:	mov    WORD PTR [ebp-0x71],es
  417d2f:	ficomp WORD PTR [edx]
  417d31:	push   0xbaf1e452
  417d36:	and    eax,0xdb0ea94a
  417d3b:	and    DWORD PTR [edi],eax
  417d3d:	mov    ds:0xe422359,al
  417d42:	jbe    0x417ce6
  417d44:	enter  0xbd4b,0x33
  417d48:	out    dx,al
  417d49:	mov    BYTE PTR [ebp+0x6c],bh
  417d4c:	imul   esp,DWORD PTR [edi],0x108d84c9
  417d52:	popf   
  417d53:	pop    edi
  417d54:	inc    ecx
  417d55:	data16 mov bl,0x5d
  417d58:	in     al,0xd7
  417d5a:	out    dx,eax
  417d5b:	and    edi,0xe
  417d5e:	mov    ds:0xeebba6f2,al
  417d63:	js     0x417d2c
  417d65:	jnp    0x417cf3
  417d67:	jnp    0x417d1c
  417d69:	jns    0x417dc0
  417d6b:	cli    
  417d6c:	repz imul ecx,ebp,0x20
  417d70:	push   0xffffffae
  417d72:	and    dl,al
  417d74:	dec    edi
  417d75:	add    al,BYTE PTR [ecx+0x3debbd1b]
  417d7b:	and    edi,DWORD PTR [edi]
  417d7d:	out    dx,eax
  417d7e:	and    BYTE PTR [si+0x46],al
  417d82:	in     al,0x1e
  417d84:	in     eax,0x7c
  417d86:	out    0x9d,al
  417d88:	jle    0x417d15
  417d8a:	or     BYTE PTR [ebx+edi*1-0x6f2b6121],ch
  417d91:	cmp    ch,bl
  417d93:	dec    ecx
  417d94:	push   edi
  417d95:	test   BYTE PTR [edi],ah
  417d97:	inc    ecx
  417d98:	jnp    0x417dee
  417d9a:	adc    eax,0x49bba6ce
  417d9f:	call   0x46faf293
  417da4:	sub    al,BYTE PTR [esi-0x53]
  417da7:	popf   
  417da8:	xor    ecx,edx
  417daa:	add    DWORD PTR [ecx-0x571e2bf],0x5c
  417db1:	pop    ecx
  417db2:	mul    BYTE PTR [edx+0x32]
  417db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db6:	fnsave [eax-0x5153e98]
  417dbc:	jmp    0xa8d8080f
  417dc1:	mov    eax,ds:0x51e7a0e2
  417dc6:	xchg   edx,eax
  417dc7:	jg     0x417d7f
  417dc9:	fwait
  417dca:	inc    ebx
  417dcb:	pop    edx
  417dcc:	and    al,0xf5
  417dce:	pop    ds
  417dcf:	(bad)  
  417dd1:	push   ebx
  417dd2:	jo     0x417da0
  417dd4:	pop    ds
  417dd5:	push   edx
  417dd6:	cmp    BYTE PTR [edi],bl
  417dd8:	icebp  
  417dd9:	cmp    esp,DWORD PTR [edi]
  417ddb:	repz jg 0x417d71
  417dde:	into   
  417ddf:	outs   dx,DWORD PTR ds:[esi]
  417de0:	imul   ebp,DWORD PTR [esi],0x56
  417de3:	clc    
  417de4:	pop    es
  417de5:	sahf   
  417de6:	shl    DWORD PTR [ebx-0x4699043d],0x6e
  417ded:	lods   eax,DWORD PTR ds:[esi]
  417dee:	int    0xde
  417df0:	xchg   ecx,eax
  417df1:	xchg   ebx,eax
  417df2:	inc    ebp
  417df3:	aam    0x4f
  417df5:	push   edx
  417df6:	fadd   st(4),st
  417df8:	and    dl,BYTE PTR [ebp+0x1e]
  417dfb:	repnz cmp eax,0x1f7bb612
  417e01:	in     al,0x20
  417e03:	dec    edx
  417e04:	lock jne 0x417dbb
  417e07:	inc    edi
  417e08:	add    DWORD PTR [esi+0x24],edx
  417e0b:	or     eax,0xef3979da
  417e10:	push   0xcac5ac8b
  417e15:	mov    bl,0xf3
  417e17:	push   ebp
  417e18:	xchg   edx,eax
  417e19:	ret    0x226f
  417e1c:	bound  esp,QWORD PTR [ebx-0x5b]
  417e1f:	xor    DWORD PTR [esi],ebx
  417e21:	ds mov ebx,edi
  417e24:	std    
  417e25:	cs dec ecx
  417e27:	sbb    BYTE PTR [ecx],al
  417e29:	enter  0x871c,0x81
  417e2d:	mov    eax,ds:0x89022168
  417e32:	pop    esp
  417e33:	stos   BYTE PTR es:[edi],al
  417e34:	data16 je 0x417e05
  417e37:	cmp    eax,DWORD PTR [ebx+0x1aa49a30]
  417e3d:	fisubr DWORD PTR [esi-0x2f]
  417e40:	sub    al,0xc2
  417e42:	popf   
  417e43:	lods   eax,DWORD PTR ds:[esi]
  417e44:	test   al,0x27
  417e46:	imul   ecx,ecx,0x597dd1d7
  417e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e4d:	xor    DWORD PTR [ebp+0x2866d8ac],esi
  417e53:	adc    eax,0x551c3998
  417e58:	das    
  417e59:	adc    ecx,DWORD PTR [ebp-0x52]
  417e5c:	mov    bh,0x8d
  417e5e:	mul    DWORD PTR [esi-0x1f5b8dcd]
  417e64:	iret   
  417e65:	outs   dx,DWORD PTR ds:[esi]
  417e66:	fidiv  DWORD PTR [edx-0x4631ba80]
  417e6c:	pop    ss
  417e6d:	aaa    
  417e6e:	rol    DWORD PTR [edx+0x4ecf5874],0x39
  417e75:	sub    al,0xdf
  417e77:	xchg   BYTE PTR [edx-0x6f],ah
  417e7a:	xchg   edx,eax
  417e7b:	mov    dl,0x34
  417e7d:	ins    BYTE PTR es:[edi],dx
  417e7e:	jne    0x417eff
  417e80:	into   
  417e81:	cdq    
  417e82:	and    BYTE PTR [ecx-0x24],bl
  417e85:	push   0xffffff9a
  417e87:	dec    ebp
  417e88:	cs (bad) 
  417e8b:	mov    cl,0xd8
  417e8d:	cmp    DWORD PTR [eax+0x6d],ebx
  417e90:	fs adc ebx,esi
  417e93:	jae    0x417e72
  417e95:	das    
  417e96:	add    DWORD PTR [ebx+0x7e],0x4a840b4d
  417e9d:	jge    0x417eee
  417e9f:	pushf  
  417ea0:	mov    bh,0xb3
  417ea2:	xchg   ebx,eax
  417ea3:	jp     0x417e4d
  417ea5:	push   eax
  417ea6:	pop    ecx
  417ea7:	mov    ch,0xac
  417ea9:	pop    ebp
  417eaa:	jne    0x417e99
  417eac:	clc    
  417ead:	es cli 
  417eaf:	imul   ebx,DWORD PTR [esi],0xecde4196
  417eb5:	ja     0x417ef0
  417eb7:	mov    esp,edi
  417eb9:	mul    DWORD PTR [edi-0x250ef33e]
  417ebf:	and    BYTE PTR [esi+0x1784ab23],bl
  417ec5:	xchg   ebx,eax
  417ec6:	out    dx,al
  417ec7:	ja     0x417eb3
  417ec9:	jno    0x417f43
  417ecb:	mov    ebx,ebx
  417ecd:	mov    WORD PTR [ebx-0x26a31495],cs
  417ed3:	pusha  
  417ed4:	dec    esi
  417ed5:	je     0x417e99
  417ed7:	adc    eax,0xb58fdc6a
  417edc:	rcl    DWORD PTR [edx],1
  417ede:	arpl   WORD PTR ds:0xe0380eb4,bx
  417ee4:	push   edi
  417ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee6:	fld    TBYTE PTR [edx]
  417ee8:	pop    edi
  417ee9:	jle    0x417f1f
  417eeb:	nop
  417eec:	je     0x417ef9
  417eee:	xor    al,0xd1
  417ef0:	jmp    0x29c5bfb4
  417ef5:	push   ds
  417ef6:	fisubr DWORD PTR [esi]
  417ef8:	and    eax,0xfbd45c82
  417efd:	push   esi
  417efe:	fisub  WORD PTR [ecx]
  417f00:	mov    dl,0xb0
  417f02:	pop    edi
  417f03:	jmp    0x7ab1:0x5eedfcb3
  417f0a:	clc    
  417f0b:	int    0x5b
  417f0d:	icebp  
  417f0e:	fidivr WORD PTR [edi+esi*8+0x3b]
  417f12:	push   ds
  417f13:	stos   DWORD PTR es:[edi],eax
  417f14:	cwde   
  417f15:	popa   
  417f16:	lock ins DWORD PTR es:[edi],dx
  417f18:	mov    ?,WORD PTR [edi]
  417f1a:	or     esp,DWORD PTR [ecx+esi*4]
  417f1d:	and    al,0xf
  417f1f:	mov    BYTE PTR [edi+0x3d],0x3a
  417f23:	push   cs
  417f24:	adc    esi,DWORD PTR [eax+esi*1]
  417f27:	pop    edi
  417f28:	icebp  
  417f29:	pop    esi
  417f2a:	in     al,dx
  417f2b:	clc    
  417f2c:	dec    esp
  417f2d:	push   eax
  417f2e:	imul   ebx,DWORD PTR [ecx+eiz*8],0xffffffef
  417f32:	inc    esp
  417f33:	mov    gs,esp
  417f35:	hlt    
  417f36:	xchg   ebx,eax
  417f37:	test   BYTE PTR [edi+edx*2-0x70],ah
  417f3b:	dec    ebx
  417f3c:	xor    eax,0x4c983a69
  417f41:	pusha  
  417f42:	enter  0x3599,0xf4
  417f46:	out    dx,al
  417f47:	aas    
  417f48:	lock jns 0x417f0f
  417f4b:	adc    eax,0xd2d51a02
  417f50:	and    BYTE PTR [esp+ebp*8-0x3c],ah
  417f54:	div    esp
  417f56:	push   esp
  417f57:	push   es
  417f58:	hlt    
  417f59:	mov    edx,0xd580800a
  417f5e:	fidiv  DWORD PTR [esi+0x7fca8630]
  417f64:	sbb    al,0x87
  417f66:	push   cs
  417f67:	nop
  417f68:	das    
  417f69:	or     al,0x7d
  417f6b:	or     al,bl
  417f6d:	ror    BYTE PTR [ebp-0x39],cl
  417f70:	jg     0x417f71
  417f72:	movaps xmm6,XMMWORD PTR [ebx]
  417f75:	xor    DWORD PTR [ebx-0x200a486d],esp
  417f7b:	test   BYTE PTR [eax-0x5d],dh
  417f7e:	pop    esi
  417f7f:	sahf   
  417f80:	sbb    bh,BYTE PTR [ebp-0x30439cf4]
  417f86:	jnp    0x417f94
  417f88:	inc    ebx
  417f89:	jns    0x417f87
  417f8b:	adc    BYTE PTR [edx],cl
  417f8d:	(bad)  
  417f8e:	in     al,0xb3
  417f90:	lods   eax,DWORD PTR ds:[esi]
  417f91:	cmp    DWORD PTR [ebp-0x75],esi
  417f94:	jnp    0x417f9a
  417f96:	push   eax
  417f97:	push   edi
  417f98:	push   edx
  417f99:	call   0x41df91
  417f9e:	shld   edx,eax,0x2
  417fa2:	shl    eax,0x2
  417fa5:	jmp    0x41852f
  417faa:	lods   al,BYTE PTR ds:[esi]
  417fab:	jecxz  0x41802b
  417fad:	sar    BYTE PTR [eax],0x20
  417fb0:	sub    bl,dl
  417fb2:	hlt    
  417fb3:	gs push eax
  417fb5:	je     0x417f94
  417fb7:	jns    0x417f9b
  417fb9:	push   0x160c7933
  417fbe:	cmp    eax,0x1a161604
  417fc3:	retf   0x1498
  417fc6:	sbb    eax,0xea305fc2
  417fcb:	and    bl,bl
  417fcd:	mov    edi,0x6daed9fa
  417fd2:	daa    
  417fd3:	push   0x9e3c9d18
  417fd8:	mov    bh,0x35
  417fda:	div    BYTE PTR [edx+0x33cbfb9]
  417fe0:	jge    0x417f69
  417fe2:	imul   eax,DWORD PTR [ecx+0x1a9863],0xb14fdb21
  417fec:	in     al,0xe1
  417fee:	pop    ebx
  417fef:	dec    DWORD PTR [ebp+0x176d91cb]
  417ff5:	push   ecx
  417ff6:	jbe    0x418020
  417ff8:	sub    al,0x85
  417ffa:	jmp    0xa472:0x3c40921a
  418001:	sub    dl,BYTE PTR [ecx]
  418003:	cdq    
  418004:	call   0x795018ea
  418009:	mov    ds:0x8997c7b9,al
  41800e:	outs   dx,BYTE PTR ds:[esi]
  41800f:	(bad)  
  418010:	fadd   DWORD PTR [eax]
  418012:	pop    esp
  418013:	cli    
  418014:	pop    edi
  418015:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418017:	and    eax,0xa1653c2d
  41801c:	pop    ecx
  41801d:	cmp    al,0xc4
  41801f:	xor    BYTE PTR [esi+0xb11d3ea],dl
  418025:	repnz mov ebp,0xef218f45
  41802b:	xchg   BYTE PTR [ebp-0x1b],bl
  41802e:	jge    0x417fe5
  418030:	test   eax,0xb5ceb9ed
  418035:	mov    bl,0xa0
  418037:	lahf   
  418038:	jg     0x417fea
  41803a:	or     esi,0x70
  41803d:	mov    ebx,0xcdae8b6a
  418042:	scas   al,BYTE PTR es:[edi]
  418043:	push   esp
  418044:	imul   eax,DWORD PTR [ebx-0x62],0x1a
  418048:	or     eax,0x9dfef2d6
  41804d:	pop    es
  41804e:	fcomp  DWORD PTR [ebp-0x4c]
  418051:	fist   WORD PTR [eax-0x2037cf52]
  418057:	pop    ebp
  418058:	or     edx,DWORD PTR [eax]
  41805a:	mov    edx,edx
  41805c:	pusha  
  41805d:	cmp    esi,edx
  41805f:	sub    al,0x87
  418061:	push   cs
  418062:	sub    ch,ah
  418064:	add    edx,ebp
  418066:	sbb    cl,al
  418068:	or     bl,BYTE PTR [ecx]
  41806a:	pop    esi
  41806b:	inc    eax
  41806c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41806d:	mov    dl,bh
  41806f:	sub    eax,0x2c1c7caa
  418074:	jg     0x418023
  418076:	push   eax
  418077:	jmp    0x69c51649
  41807c:	jl     0x4180f2
  41807e:	or     al,0xfd
  418080:	frstor [eax]
  418082:	popa   
  418083:	push   ebx
  418084:	add    DWORD PTR [ebp+0x66],esi
  418087:	in     eax,0x7b
  418089:	xor    ah,BYTE PTR [eax]
  41808b:	out    0x3a,eax
  41808d:	sbb    al,0xfe
  41808f:	pop    eax
  418090:	dec    ebp
  418091:	(bad)  
  418092:	ins    BYTE PTR es:[edi],dx
  418093:	sub    DWORD PTR [eax+0x32],ebx
  418096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418097:	daa    
  418098:	dec    eax
  418099:	mov    cl,BYTE PTR [ecx+0x13]
  41809c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41809d:	jae    0x418083
  41809f:	stos   DWORD PTR es:[edi],eax
  4180a0:	jae    0x41803a
  4180a2:	int    0x23
  4180a4:	fnstcw WORD PTR [edi+0x4f4b657e]
  4180aa:	prefetch (bad)
  4180ab:	or     eax,0x541777f1
  4180b0:	xor    eax,DWORD PTR [ebx+esi*4]
  4180b3:	mov    ebp,0x1ddbd82f
  4180b8:	sar    eax,1
  4180ba:	lahf   
  4180bb:	shl    DWORD PTR cs:[ebp+ebx*8-0xd],cl
  4180c0:	cmp    ebp,edx
  4180c2:	scas   eax,DWORD PTR es:[edi]
  4180c3:	and    dh,BYTE PTR [ecx-0x19]
  4180c6:	popa   
  4180c7:	mov    esi,0x18150f6c
  4180cc:	xchg   edi,eax
  4180cd:	pop    eax
  4180ce:	gs or  al,0xdf
  4180d1:	sub    BYTE PTR [edx+0x36],dh
  4180d4:	arpl   WORD PTR [ebp-0x73],ax
  4180d7:	jb     0x4180ab
  4180d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180da:	jmp    0x2fd4:0xdaf1477
  4180e1:	hlt    
  4180e2:	cld    
  4180e3:	in     eax,0x9
  4180e5:	xchg   BYTE PTR [esi],cl
  4180e7:	jmp    0x966a:0x324ca162
  4180ee:	mov    esi,0x651162eb
  4180f3:	mov    BYTE PTR [edi+0x6a148f],al
  4180f9:	ins    DWORD PTR es:[edi],dx
  4180fa:	mov    ds:0x2621e8cb,al
  4180ff:	sub    DWORD PTR [edx+0x35],ebx
  418102:	out    0x6b,eax
  418104:	into   
  418105:	jae    0x41808b
  418107:	aas    
  418108:	mov    ?,WORD PTR [ebx-0x72cd43c2]
  41810e:	jae    0x4180a9
  418110:	adc    BYTE PTR [edi-0x66],cl
  418113:	cli    
  418114:	or     BYTE PTR [eax+0x33],cl
  418117:	aam    0xd2
  418119:	retf   0xd4d8
  41811c:	not    DWORD PTR [edi]
  41811e:	dec    ecx
  41811f:	out    dx,al
  418120:	add    al,0xf2
  418122:	add    DWORD PTR [edx-0x69e9e7c2],ecx
  418128:	push   ecx
  418129:	jno    0x4180dc
  41812b:	sub    bh,BYTE PTR [ebp-0x21bdefa9]
  418131:	in     eax,0x1a
  418133:	push   es
  418134:	aaa    
  418135:	imul   edx,DWORD PTR [edi],0xffffff96
  418138:	xlat   BYTE PTR ds:[ebx]
  418139:	mov    al,0xea
  41813b:	push   edx
  41813c:	shl    BYTE PTR [esi],0xe6
  41813f:	rcr    BYTE PTR ds:[edx-0x37],1
  418143:	sbb    dh,0xfc
  418146:	inc    eax
  418147:	sub    BYTE PTR [esi+0x3],dh
  41814a:	sub    cl,ah
  41814c:	lods   al,BYTE PTR ds:[esi]
  41814d:	pop    edi
  41814e:	xor    cl,bh
  418150:	jns    0x4180ec
  418152:	jge    0x41814c
  418154:	test   BYTE PTR [edi],dh
  418156:	outs   dx,BYTE PTR ds:[esi]
  418157:	test   eax,0x8c7d9b0b
  41815c:	inc    esi
  41815d:	iret   
  41815e:	dec    ebx
  41815f:	push   ecx
  418160:	aam    0x98
  418162:	mov    ds:0xb7de93b0,eax
  418167:	push   ecx
  418168:	pop    esi
  418169:	std    
  41816a:	mov    al,0x7f
  41816c:	pop    ss
  41816d:	mov    ebp,DWORD PTR [ebp+0x12]
  418170:	mov    WORD PTR [ecx+0x125a79a9],?
  418176:	and    BYTE PTR [edx-0xba91339],bl
  41817c:	sbb    DWORD PTR [eax+ebx*1],0x21
  418180:	rol    BYTE PTR [ecx-0xbadeac1],0x39
  418187:	aam    0x36
  418189:	fimul  WORD PTR [esi]
  41818b:	cmp    eax,0x2f3fe314
  418190:	inc    ebp
  418191:	(bad)  
  418192:	push   ds
  418193:	push   edx
  418194:	imul   eax,DWORD PTR [ecx+0x3d],0x41
  418198:	add    eax,0x5ac2c8a2
  41819d:	cli    
  41819e:	dec    edi
  41819f:	imul   DWORD PTR [eax]
  4181a1:	sbb    BYTE PTR [esp+ebp*1],al
  4181a4:	mov    cl,dh
  4181a6:	inc    edx
  4181a7:	jecxz  0x418180
  4181a9:	mov    ah,0xc8
  4181ab:	jmp    0xc52b3d3e
  4181b0:	jo     0x4181cb
  4181b2:	pop    edx
  4181b3:	mov    esi,0xd6eee0c9
  4181b8:	mov    ah,BYTE PTR [esi-0x6476d236]
  4181be:	sbb    al,0x86
  4181c0:	sbb    BYTE PTR [ebx+0x6827a897],bh
  4181c6:	sbb    dh,BYTE PTR [ebp-0x5bb0028b]
  4181cc:	(bad)  
  4181cd:	popf   
  4181ce:	test   BYTE PTR [eax-0x16ca56e7],0xc
  4181d5:	push   esp
  4181d6:	int3   
  4181d7:	fidiv  WORD PTR [ebp-0x57]
  4181da:	leave  
  4181db:	(bad)
  4181de:	pushf  
  4181df:	push   0x45
  4181e1:	push   es
  4181e2:	xor    eax,0x82daa6e2
  4181e7:	je     0x418242
  4181e9:	enter  0xa810,0xc2
  4181ed:	clc    
  4181ee:	iret   
  4181ef:	popf   
  4181f0:	(bad)  
  4181f1:	out    dx,al
  4181f2:	cmp    eax,0x51c86168
  4181f7:	jb     0x4181bf
  4181f9:	(bad)  
  4181fa:	in     al,0x6c
  4181fc:	mov    esp,0x36c59844
  418201:	sbb    edx,edx
  418203:	das    
  418204:	cld    
  418205:	sahf   
  418206:	cwde   
  418207:	pop    ss
  418208:	js     0x4181b5
  41820a:	outs   dx,BYTE PTR ds:[esi]
  41820b:	rol    DWORD PTR [eax+0x25],0xa4
  41820f:	xchg   esp,eax
  418210:	hlt    
  418211:	std    
  418212:	add    eax,0xa02cace4
  418217:	pop    ss
  418218:	adc    al,0x7a
  41821a:	pushf  
  41821b:	sar    BYTE PTR ds:0x243c451f,0x61
  418222:	and    ch,cl
  418224:	fld    QWORD PTR [ebx]
  418226:	call   0xc838:0x7a4d8f94
  41822d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41822e:	dec    esp
  41822f:	std    
  418230:	pop    ds
  418231:	ja     0x418290
  418233:	xchg   esp,eax
  418234:	xchg   ecx,eax
  418235:	cld    
  418236:	mov    al,0xa9
  418238:	enter  0x36bb,0xee
  41823c:	cli    
  41823d:	push   eax
  41823e:	mov    ebp,0x5b95c764
  418243:	xor    eax,0x1bd1db00
  418248:	push   edi
  418249:	jne    0x4181d5
  41824b:	aas    
  41824c:	add    ah,BYTE PTR [eax+edx*4]
  41824f:	dec    esi
  418250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418251:	push   ecx
  418252:	enter  0xf5db,0xca
  418256:	xor    esi,ecx
  418258:	mov    esp,0xde195bb
  41825d:	mov    WORD PTR [edi-0x6e28c1e4],ss
  418263:	push   ds
  418264:	and    ah,BYTE PTR [ebx-0x63]
  418267:	sbb    al,0x51
  418269:	retf   
  41826a:	add    ah,BYTE PTR [eax]
  41826c:	sbb    BYTE PTR [edi],bl
  41826e:	iret   
  41826f:	mov    edx,0xc9e48596
  418274:	xchg   edx,eax
  418275:	jle    0x418255
  418277:	daa    
  418278:	mov    ch,0x3f
  41827a:	fstp   DWORD PTR [ebx]
  41827c:	adc    al,0xeb
  41827e:	pop    ebp
  41827f:	pop    esp
  418280:	outs   dx,DWORD PTR ds:[esi]
  418281:	(bad)  
  418282:	pop    edi
  418283:	and    dl,BYTE PTR [esi]
  418285:	cmp    edi,DWORD PTR [ecx-0x57ab0cb3]
  41828b:	push   esp
  41828c:	aam    0xbe
  41828e:	imul   edi,esi,0xb34eae1f
  418294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418295:	cld    
  418296:	mov    bl,0xe6
  418298:	jae    0x418235
  41829a:	pushf  
  41829b:	xchg   esi,eax
  41829c:	out    dx,al
  41829d:	in     al,0xf2
  41829f:	and    eax,0x50b3093e
  4182a4:	ret    
  4182a5:	adc    al,0x2f
  4182a7:	int3   
  4182a8:	sti    
  4182a9:	mov    ebx,0x8865bf4d
  4182ae:	mov    ah,0x93
  4182b0:	pusha  
  4182b1:	cmp    eax,0x82c95d51
  4182b6:	jl     0x41828a
  4182b8:	cs xor eax,0x262285bb
  4182be:	std    
  4182bf:	pop    esi
  4182c0:	mov    ch,0xc6
  4182c2:	sub    esi,DWORD PTR ds:0xadcb609f
  4182c8:	mov    dh,0xa4
  4182ca:	aaa    
  4182cb:	lds    ebp,FWORD PTR [eax+0x2]
  4182ce:	sti    
  4182cf:	pop    esp
  4182d0:	outs   dx,DWORD PTR ds:[esi]
  4182d1:	in     eax,0x3a
  4182d3:	das    
  4182d4:	sub    edx,edx
  4182d6:	out    0x4c,eax
  4182d8:	retf   0x345
  4182db:	jl     0x4182ee
  4182dd:	imul   esp,DWORD PTR [edx+0x49b5d778],0xddf7bb35
  4182e7:	mov    edi,esi
  4182e9:	xchg   ebx,eax
  4182ea:	stc    
  4182eb:	mov    ch,0xa6
  4182ed:	push   eax
  4182ee:	jl     0x4182ed
  4182f0:	ficomp WORD PTR [edx+0x52d5fd77]
  4182f6:	cs aaa 
  4182f8:	mov    ch,BYTE PTR [eax-0x6aa1eb2f]
  4182fe:	lods   al,BYTE PTR ds:[esi]
  4182ff:	sub    esi,DWORD PTR [edx]
  418301:	jo     0x4182f9
  418303:	dec    ebp
  418304:	xchg   edi,eax
  418305:	repz test al,0x6d
  418308:	mov    eax,0xe74cc6c0
  41830d:	dec    edi
  41830e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41830f:	in     eax,dx
  418310:	pop    ebp
  418311:	pushf  
  418312:	mov    esp,fs
  418314:	nop
  418315:	mov    bh,0xdb
  418317:	ds cli 
  418319:	data16 icebp 
  41831b:	sbb    ecx,ebx
  41831d:	js     0x41834f
  41831f:	loop   0x4182b6
  418321:	inc    ecx
  418322:	ret    0xba56
  418325:	cmp    BYTE PTR [eax],bl
  418327:	add    cl,BYTE PTR [edi+0x6abf5b17]
  41832d:	outs   dx,DWORD PTR ds:[esi]
  41832e:	ret    0x3b37
  418331:	dec    edi
  418332:	add    DWORD PTR [esi-0x6b98156a],esp
  418338:	ds dec edi
  41833a:	xchg   edx,eax
  41833b:	cmc    
  41833c:	call   0x9ecc:0x88252c51
  418343:	ins    DWORD PTR es:[edi],dx
  418344:	inc    esp
  418345:	sub    eax,0x1b206355
  41834a:	push   ss
  41834b:	ret    
  41834c:	jecxz  0x418311
  41834e:	test   esi,eax
  418350:	jl     0x418301
  418352:	test   DWORD PTR [ecx-0x26],esp
  418355:	outs   dx,DWORD PTR ds:[esi]
  418356:	ret    
  418357:	pop    ds
  418358:	in     eax,0xb7
  41835a:	mov    dl,0xa3
  41835c:	dec    eax
  41835d:	outs   dx,DWORD PTR ds:[esi]
  41835e:	enter  0x80ef,0xc3
  418362:	sbb    BYTE PTR [esi],dh
  418364:	mov    ds,WORD PTR [ecx+0x1922084a]
  41836a:	dec    ebp
  41836b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41836c:	add    eax,0x28f95855
  418371:	popa   
  418372:	push   0x31
  418374:	loope  0x4182f8
  418376:	mov    dl,0x97
  418378:	into   
  418379:	pusha  
  41837a:	add    ecx,DWORD PTR [eax+edi*8-0x50a56890]
  418381:	cmp    eax,0x463f842f
  418386:	out    0x96,al
  418388:	sbb    dh,BYTE PTR [ebx]
  41838a:	pop    esi
  41838b:	push   ebx
  41838c:	pop    ss
  41838d:	clc    
  41838e:	dec    esi
  41838f:	adc    ch,bl
  418391:	in     eax,dx
  418392:	test   DWORD PTR [ecx-0x16],ecx
  418395:	sub    edx,DWORD PTR [edi-0x2cb76490]
  41839b:	cmp    BYTE PTR [eax-0x76],bh
  41839e:	clc    
  41839f:	test   al,0xa1
  4183a1:	mov    DWORD PTR [ebx+0x1f6b0890],esi
  4183a7:	out    0xdd,al
  4183a9:	sub    esp,esi
  4183ab:	in     al,0x99
  4183ad:	push   ebp
  4183ae:	stos   BYTE PTR es:[edi],al
  4183af:	ret    0x788e
  4183b2:	pusha  
  4183b3:	loopne 0x4183de
  4183b5:	mov    dh,0x5e
  4183b7:	pop    ebp
  4183b8:	sub    al,0x46
  4183ba:	cli    
  4183bb:	xchg   ebx,eax
  4183bc:	add    eax,0xdc33e8d7
  4183c1:	adc    eax,0xbfdabe0c
  4183c6:	add    esp,eax
  4183c8:	sub    ah,bl
  4183ca:	pop    ebp
  4183cb:	stc    
  4183cc:	ret    0x5f47
  4183cf:	(bad)
  4183d2:	cli    
  4183d3:	pop    ss
  4183d4:	and    al,0xf5
  4183d6:	jecxz  0x41839e
  4183d8:	mov    eax,0x49323987
  4183dd:	retf   0xd43e
  4183e0:	sub    al,0xa5
  4183e2:	jbe    0x418378
  4183e4:	arpl   WORD PTR [edi],bp
  4183e6:	pop    esp
  4183e7:	ins    BYTE PTR es:[edi],dx
  4183e8:	out    0xa0,al
  4183ea:	add    BYTE PTR [ecx+0x36],dh
  4183ed:	jl     0x418455
  4183ef:	cmp    BYTE PTR [bp+si],dh
  4183f2:	out    dx,eax
  4183f3:	ror    eax,1
  4183f5:	mov    al,0xf8
  4183f7:	repnz sub DWORD PTR [esi+0x2b66dfd2],edx
  4183fe:	mov    eax,ds:0x69ca5e61
  418403:	in     al,0xbc
  418405:	inc    esp
  418406:	sti    
  418407:	push   0xffffffb5
  418409:	dec    ebp
  41840a:	shl    BYTE PTR [edx+0x53bfbe52],cl
  418410:	sbb    al,0xfb
  418412:	mov    es,WORD PTR [ebx+0x9]
  418415:	mov    ch,0x96
  418417:	in     al,0x39
  418419:	dec    edi
  41841a:	xchg   esp,eax
  41841b:	(bad)  
  41841c:	xor    eax,0xcac4403
  418421:	inc    esp
  418422:	sub    ecx,edi
  418424:	jo     0x4184a1
  418426:	add    bl,ah
  418428:	(bad)  
  418429:	sahf   
  41842a:	inc    edi
  41842b:	scas   al,BYTE PTR es:[edi]
  41842c:	adc    DWORD PTR [edi-0x54d59671],edx
  418432:	cmp    al,BYTE PTR fs:[ecx-0x1d0a3a6f]
  418439:	sub    al,0xfb
  41843b:	push   0x86f26b7f
  418440:	pop    eax
  418441:	stc    
  418442:	(bad)  
  418443:	popa   
  418444:	scas   al,BYTE PTR es:[edi]
  418445:	pop    es
  418446:	enter  0x5725,0x9
  41844a:	jae    0x41849f
  41844c:	inc    edx
  41844d:	push   eax
  41844e:	fisubr DWORD PTR [esi-0x72]
  418451:	and    BYTE PTR [ebp-0x72b0a55e],0xf0
  418458:	xchg   edx,eax
  418459:	dec    ebx
  41845a:	lods   eax,DWORD PTR ds:[esi]
  41845b:	jmp    0x4bb5:0xd43bba30
  418462:	scas   eax,DWORD PTR es:[edi]
  418463:	mov    ds:0xc00dea0b,eax
  418468:	mov    edi,0x222d09b9
  41846d:	test   al,0x49
  41846f:	(bad)  
  418471:	out    0x65,al
  418473:	cmp    BYTE PTR [ebx-0x5158005e],dh
  418479:	test   DWORD PTR [esi],edi
  41847b:	sbb    esi,esp
  41847d:	pop    esp
  41847e:	push   0x29
  418480:	and    BYTE PTR [edx+eax*2+0x15f54970],cl
  418487:	test   eax,0xae0d359b
  41848c:	xchg   edx,eax
  41848d:	stos   BYTE PTR es:[edi],al
  41848e:	or     ch,cl
  418490:	dec    edi
  418491:	xchg   bl,al
  418493:	mov    bl,0x53
  418495:	sbb    al,0xa2
  418497:	into   
  418498:	jg     0x4184fa
  41849a:	cvtps2pi mm4,QWORD PTR [edi+edi*1]
  41849e:	mov    edx,0x266d96ae
  4184a3:	or     cl,BYTE PTR [esi]
  4184a5:	dec    edx
  4184a6:	inc    eax
  4184a7:	call   0xcea7633
  4184ac:	adc    BYTE PTR [ebp+0x14],bh
  4184af:	pop    edi
  4184b0:	push   esp
  4184b1:	or     al,0x74
  4184b3:	mov    eax,DWORD PTR [edi-0x56]
  4184b6:	clc    
  4184b7:	dec    DWORD PTR [edi-0x41]
  4184ba:	scas   eax,DWORD PTR es:[edi]
  4184bb:	(bad)  
  4184bd:	leave  
  4184be:	retf   0x9059
  4184c1:	xchg   ebp,eax
  4184c2:	and    eax,0x27297527
  4184c7:	sbb    edx,eax
  4184c9:	shl    DWORD PTR [eax-0x5],1
  4184cc:	add    BYTE PTR [ebx-0xdd707c0],bl
  4184d2:	jne    0x4184bb
  4184d4:	(bad)
  4184d7:	in     eax,dx
  4184d8:	jl     0x4184b3
  4184da:	add    al,0x76
  4184dc:	clc    
  4184dd:	pop    es
  4184de:	push   esi
  4184df:	add    eax,0x13d07deb
  4184e4:	and    DWORD PTR ds:0x5a7e0fc0,edx
  4184ea:	mov    eax,ds:0x9cf4f2f4
  4184ef:	cdq    
  4184f0:	aam    0xf6
  4184f2:	js     0x41853a
  4184f4:	fnstsw WORD PTR ds:0x59133813
  4184fa:	add    dh,BYTE PTR [ebx-0x55fdaaaf]
  418500:	aas    
  418501:	xchg   ecx,eax
  418502:	out    0x5a,al
  418504:	out    0x6e,al
  418506:	mov    ch,0xeb
  418508:	and    eax,0x2a2bce9b
  41850d:	cmp    eax,0xbb48bfc6
  418512:	sar    BYTE PTR [ebx+0x61ba5cd],1
  418518:	imul   ebp,edx,0xffffffc2
  41851b:	scas   al,BYTE PTR es:[edi]
  41851c:	stos   DWORD PTR es:[edi],eax
  41851d:	fcmovnbe st,st(4)
  41851f:	(bad)  
  418520:	cli    
  418521:	lods   al,BYTE PTR ds:[esi]
  418522:	mov    cl,0xd7
  418524:	lds    edx,FWORD PTR [ebx-0x1d]
  418527:	jecxz  0x418585
  418529:	push   esp
  41852a:	mov    esi,es
  41852c:	cmp    al,0xc2
  41852e:	mov    WORD PTR [ebx+0x104d0bc8],cs
  418534:	xor    eax,eax
  418536:	or     edx,eax
  418538:	xor    ecx,0xba699573
  41853e:	xor    edx,0x9c0a89d8
  418544:	mov    DWORD PTR [esi],ecx
  418546:	mov    DWORD PTR [esi+0x4],edx
  418549:	mov    eax,0xc0000000
  41854e:	mov    ecx,DWORD PTR [esi]
  418550:	mov    edx,DWORD PTR [esi+0x4]
  418553:	mov    edx,ecx
  418555:	shl    edx,0x1e
  418558:	xor    edx,eax
  41855a:	mov    DWORD PTR [ebp+0x14],edx
  41855d:	mov    edx,DWORD PTR [esi]
  41855f:	mov    edi,DWORD PTR [esi+0x4]
  418562:	xor    edi,0x9c0a89d8
  418568:	xor    edx,0xba699573
  41856e:	shrd   edx,edi,0x2
  418572:	shr    edi,0x2
  418575:	or     edi,DWORD PTR [ebp+0x14]
  418578:	xor    ecx,ecx
  41857a:	mov    DWORD PTR [ebp+0xc],edi
  41857d:	or     edx,ecx
  41857f:	mov    ecx,DWORD PTR [ebx]
  418581:	mov    edi,DWORD PTR [ebx+0x4]
  418584:	mov    edi,ecx
  418586:	shl    edi,0x1e
  418589:	xor    edi,eax
  41858b:	mov    eax,DWORD PTR [ebx]
  41858d:	mov    DWORD PTR [ebp+0x14],edi
  418590:	mov    edi,DWORD PTR [ebx+0x4]
  418593:	jmp    0x418b1d
  418598:	test   DWORD PTR [ebx+0x38127d46],0xa0bf58ac
  4185a2:	mov    edx,0xe09ca2ae
  4185a7:	je     0x418611
  4185a9:	outs   dx,DWORD PTR ds:[esi]
  4185aa:	or     al,0x16
  4185ac:	cmp    eax,0x83161604
  4185b1:	daa    
  4185b2:	pop    es
  4185b3:	in     al,0x18
  4185b5:	sub    al,0x15
  4185b7:	sahf   
  4185b8:	mov    ds:0xcf183e28,eax
  4185bd:	xchg   esi,eax
  4185be:	into   
  4185bf:	add    BYTE PTR [edi+0x26],dl
  4185c2:	test   al,0xc6
  4185c4:	sbb    DWORD PTR [edx+0x78],eax
  4185c7:	outs   dx,DWORD PTR ds:[esi]
  4185c8:	cli    
  4185c9:	mov    ah,0xb5
  4185cb:	ds ret 0x83fa
  4185cf:	jp     0x4185da
  4185d1:	xor    edx,esi
  4185d3:	lahf   
  4185d4:	and    eax,0xbb091df8
  4185d9:	ss mov ebp,0x185d2301
  4185df:	or     eax,0xd52dd2b2
  4185e4:	sub    al,dl
  4185e6:	add    esp,DWORD PTR [ebx-0x11]
  4185e9:	mov    BYTE PTR [edx],0xae
  4185ec:	jnp    0x4185c0
  4185ee:	jne    0x41863d
  4185f0:	iret   
  4185f1:	sub    DWORD PTR [ebx+0x2d],edx
  4185f4:	pop    esp
  4185f5:	adc    BYTE PTR [edi+0x4c48ac3f],al
  4185fb:	jmp    0x4185d9
  4185fd:	outs   dx,BYTE PTR ds:[esi]
  4185fe:	call   0x664b4b58
  418603:	adc    dl,BYTE PTR [ebx+0x3c]
  418606:	cld    
  418607:	in     al,dx
  418608:	and    BYTE PTR [esi],bl
  41860a:	lods   eax,DWORD PTR ds:[esi]
  41860b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860c:	mov    eax,ds:0xcbe705d0
  418611:	sti    
  418612:	adc    ecx,DWORD PTR [ecx+0x4e2e8161]
  418618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418619:	cmp    al,0xdc
  41861b:	pusha  
  41861c:	js     0x418617
  41861e:	xor    edx,DWORD PTR [esi-0x42]
  418621:	xchg   DWORD PTR [eax],ebx
  418623:	inc    edx
  418624:	xor    al,0xc9
  418626:	stos   DWORD PTR es:[edi],eax
  418627:	cmp    DWORD PTR [edx+0x78],esp
  41862a:	fstp   st(6)
  41862c:	lahf   
  41862d:	test   eax,0x65cb5ba2
  418632:	jmp    0x730d:0x3a71c646
  418639:	sub    DWORD PTR [ebx],0xffffffb5
  41863c:	push   0x52
  41863e:	js     0x4185d6
  418640:	retf   
  418641:	ins    BYTE PTR es:[edi],dx
  418642:	jmp    0x41864a
  418644:	sub    al,0x5
  418646:	(bad)  
  418647:	xchg   esp,eax
  418648:	sub    al,0xaa
  41864a:	sar    DWORD PTR [ebp-0x3c],1
  41864d:	fcmovnu st,st(3)
  41864f:	push   ecx
  418650:	jg     0x4186b2
  418652:	and    DWORD PTR [edx-0x829a3a2],ebp
  418658:	lods   al,BYTE PTR ds:[esi]
  418659:	inc    ebx
  41865a:	imul   ebx,DWORD PTR [edx-0x21f9626],0xffffffb8
  418661:	sbb    eax,0x5ff6ae95
  418666:	xchg   ebp,eax
  418667:	cwde   
  418668:	fdivr  QWORD PTR [ecx]
  41866a:	fnsave [ebp-0x5d]
  41866d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41866f:	inc    esp
  418670:	repz aaa 
  418672:	stos   DWORD PTR es:[edi],eax
  418673:	pop    es
  418674:	mov    bl,0x5c
  418676:	daa    
  418677:	or     BYTE PTR [edx-0x5f549005],al
  41867d:	adc    BYTE PTR [ebx],cl
  41867f:	pushf  
  418680:	xchg   edi,eax
  418681:	outs   dx,BYTE PTR ds:[esi]
  418682:	arpl   WORD PTR [eax+0x6fa56900],ax
  418688:	lock mov WORD PTR [ecx+0x4e],ds
  41868c:	arpl   di,sp
  41868e:	sti    
  41868f:	mov    ch,0x39
  418691:	sub    BYTE PTR [ecx+0x6f],cl
  418694:	in     eax,0x96
  418696:	in     al,dx
  418697:	in     eax,dx
  418698:	and    eax,0x729b27f4
  41869d:	(bad)  
  41869e:	xlat   BYTE PTR ds:[ebx]
  41869f:	icebp  
  4186a0:	lea    edx,[ebp+0x5b]
  4186a3:	fs or  al,0xfc
  4186a6:	ds push cs
  4186a8:	sbb    eax,0x601d6bf3
  4186ad:	test   BYTE PTR [eax*1+0x5e9c1f0f],al
  4186b4:	add    DWORD PTR [edi-0xa68c70e],edi
  4186ba:	dec    edx
  4186bb:	sub    DWORD PTR [esi-0x4a293118],0x9246dbd3
  4186c5:	xchg   esp,eax
  4186c6:	cld    
  4186c7:	imul   ebx,DWORD PTR ds:0xbf3c7fcd,0xffffffbe
  4186ce:	stc    
  4186cf:	or     DWORD PTR [edi-0x432aa2c4],ebp
  4186d5:	add    ecx,eax
  4186d7:	jle    0x418740
  4186d9:	pusha  
  4186da:	outs   dx,DWORD PTR ds:[esi]
  4186db:	daa    
  4186dc:	xor    eax,0x7406e219
  4186e1:	sbb    eax,0xe23675c6
  4186e6:	icebp  
  4186e7:	mov    ?,WORD PTR [eax+edi*2-0x70]
  4186eb:	inc    esp
  4186ec:	or     al,0xf2
  4186ee:	jbe    0x418684
  4186f0:	in     eax,dx
  4186f1:	es std 
  4186f3:	jmp    0x5b92:0xb8697fbc
  4186fa:	xor    eax,0x87fcd470
  4186ff:	jae    0x5dfb2756
  418705:	repnz cwde 
  418707:	sar    DWORD PTR [esi-0x46],1
  41870a:	lods   al,BYTE PTR ds:[esi]
  41870b:	test   al,0xf2
  41870d:	cmp    DWORD PTR [esi+0x1df2e79a],ecx
  418713:	push   ebp
  418714:	les    edi,FWORD PTR [eax]
  418716:	push   ds
  418717:	pop    esi
  418718:	xor    bl,BYTE PTR [ebp-0x63b00a41]
  41871e:	arpl   WORD PTR [eax-0x423c3893],bp
  418724:	aam    0x2c
  418726:	cmp    ebp,DWORD PTR [esi]
  418728:	cld    
  418729:	cmc    
  41872a:	fprem  
  41872c:	in     al,dx
  41872d:	push   0xffffff84
  41872f:	shl    DWORD PTR [edx*4-0x1fd1b0b2],0x5d
  418737:	rol    DWORD PTR [edi],cl
  418739:	mov    dl,0x5e
  41873b:	sahf   
  41873c:	dec    esp
  41873d:	bound  edx,QWORD PTR [ecx-0x26]
  418740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418741:	dec    eax
  418742:	cwde   
  418743:	shr    BYTE PTR [eax+0x671035ee],1
  418749:	mov    edx,0x40582d68
  41874e:	xchg   edx,eax
  41874f:	(bad)  
  418750:	mov    al,0xbb
  418752:	mov    eax,ds:0xb8f6a0ec
  418757:	push   es
  418758:	les    edx,FWORD PTR ds:0xf2702c1f
  41875e:	or     al,0x83
  418760:	adc    ebp,DWORD PTR [ecx+ebx*1-0x2d]
  418764:	or     ah,BYTE PTR [eax-0x3f]
  418767:	aaa    
  418768:	dec    DWORD PTR [edi+0x28]
  41876b:	mov    ah,0x94
  41876d:	or     ch,bl
  41876f:	pop    esi
  418770:	push   edx
  418771:	pop    ebx
  418772:	push   edx
  418773:	or     eax,DWORD PTR [esi]
  418775:	rcl    DWORD PTR [eax+edx*8+0x11],cl
  418779:	lds    esi,FWORD PTR [edx+0x6d]
  41877c:	xor    BYTE PTR [ebp+0x57653b67],0xac
  418783:	mov    ds:0xd9ecbd4b,al
  418788:	sub    BYTE PTR [ebp+0x3fa70afc],bh
  41878e:	in     eax,0x60
  418790:	stc    
  418791:	iret   
  418792:	and    esp,edx
  418794:	push   cs
  418795:	add    ebx,edi
  418797:	ins    BYTE PTR es:[edi],dx
  418798:	xchg   ebx,eax
  418799:	loopne 0x41874b
  41879b:	mov    dl,0x38
  41879d:	mov    ebp,0xde3677ad
  4187a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a3:	pop    eax
  4187a4:	inc    esp
  4187a5:	add    edi,edi
  4187a7:	xchg   DWORD PTR [ebx-0x41b990fe],ebp
  4187ad:	jbe    0x418769
  4187af:	stc    
  4187b0:	jne    0x41878b
  4187b2:	pop    ecx
  4187b3:	(bad)  [esi-0x61dee24c]
  4187b9:	into   
  4187ba:	xor    al,0x8
  4187bc:	out    0xb1,eax
  4187be:	sub    ebp,0x1c
  4187c1:	clc    
  4187c2:	mov    ah,0x2d
  4187c4:	or     dl,bh
  4187c6:	sbb    ebx,esi
  4187c8:	outs   dx,DWORD PTR ds:[esi]
  4187c9:	cmc    
  4187ca:	sbb    DWORD PTR [ecx+0x0],edx
  4187cd:	call   0x87ca:0x33fbb410
  4187d4:	in     al,0xb5
  4187d6:	loop   0x418781
  4187d8:	fistp  WORD PTR [eax+edx*2+0x42aaf5b4]
  4187df:	xor    dh,BYTE PTR [eax]
  4187e1:	(bad)  
  4187e2:	sti    
  4187e3:	push   ds
  4187e4:	out    0xcc,eax
  4187e6:	or     DWORD PTR [ebx+0x7b],esi
  4187e9:	(bad)  
  4187ea:	adc    BYTE PTR [ecx+0x35],bh
  4187ed:	adc    al,0xa5
  4187ef:	ss push ebp
  4187f1:	mov    ebp,0x2b503a27
  4187f6:	push   ebp
  4187f7:	sbb    eax,0x1fedda11
  4187fc:	test   BYTE PTR [ecx-0x5e863b72],ah
  418802:	imul   eax,DWORD PTR [ebx+0x234f8a0a],0x337376c1
  41880c:	pop    ebx
  41880d:	and    bh,BYTE PTR [edi+eax*8]
  418810:	loopne 0x418858
  418812:	mov    ecx,0x7e462462
  418817:	jmp    0x4187ab
  418819:	xchg   ebx,eax
  41881a:	push   0xffffffa4
  41881c:	pop    edi
  41881d:	dec    edx
  41881e:	adc    al,0x14
  418820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418821:	mov    bh,0xe5
  418823:	jmp    0xd7a5c135
  418828:	sar    bh,cl
  41882a:	jns    0x418869
  41882c:	dec    ebp
  41882d:	jp     0x418867
  41882f:	jno    0x41884a
  418831:	cmp    DWORD PTR [edx-0x352be4f4],edi
  418837:	lods   eax,DWORD PTR ds:[esi]
  418838:	icebp  
  418839:	fstp   QWORD PTR [esi+edi*4-0x59c1b282]
  418840:	add    DWORD PTR [edi+0x1ef2479b],edi
  418846:	mov    BYTE PTR [esi-0x62816d33],0x43
  41884d:	lock cwde 
  41884f:	hlt    
  418850:	and    ch,BYTE PTR [edi-0x7a990993]
  418856:	(bad)  
  418857:	adc    ebp,edi
  418859:	mov    al,0xdc
  41885b:	in     eax,0xe9
  41885d:	cmp    BYTE PTR [ebx-0x20],dh
  418860:	repz scas al,BYTE PTR es:[edi]
  418862:	dec    edx
  418863:	push   eax
  418864:	push   esp
  418865:	push   0xfffffff3
  418867:	push   ds
  418868:	out    dx,eax
  418869:	repz fwait
  41886b:	jg     0x4187f7
  41886d:	fs cli 
  41886f:	xchg   edx,eax
  418870:	leave  
  418871:	xchg   DWORD PTR [esi+0x6471fea7],esp
  418877:	ss pop ecx
  418879:	sub    eax,DWORD PTR [ebx]
  41887b:	hlt    
  41887c:	loop   0x41885d
  41887e:	(bad)  
  418880:	cmp    ebp,esi
  418882:	adc    eax,0x12349dbc
  418887:	pop    esp
  418888:	faddp  st(1),st
  41888a:	or     esp,0x1a
  41888d:	stos   BYTE PTR es:[edi],al
  41888e:	pop    ss
  41888f:	mov    edx,0xb7502b15
  418894:	mov    ah,0xef
  418896:	mov    eax,0xe49e67c6
  41889b:	lea    edx,[esi+0x46cb3151]
  4188a1:	(bad)  
  4188a2:	idiv   dl
  4188a4:	(bad)  
  4188a6:	shl    dl,cl
  4188a8:	add    eax,0x1e445332
  4188ad:	out    0x5e,eax
  4188af:	jmp    0x41883d
  4188b1:	inc    ecx
  4188b2:	outs   dx,DWORD PTR ds:[esi]
  4188b3:	pop    edi
  4188b4:	add    eax,0x4dace284
  4188b9:	adc    al,0xa2
  4188bb:	adc    BYTE PTR [edx+0x155a54ca],bh
  4188c1:	daa    
  4188c2:	and    DWORD PTR [edi],edx
  4188c4:	and    BYTE PTR [esi-0x53],bh
  4188c7:	push   0x67754534
  4188cc:	push   ebx
  4188cd:	mov    esi,0x9a4fc306
  4188d2:	cmp    al,BYTE PTR [ecx-0x26]
  4188d5:	or     al,0xd0
  4188d7:	outs   dx,BYTE PTR ds:[esi]
  4188d8:	and    BYTE PTR [esi],ah
  4188da:	inc    esp
  4188db:	inc    ebp
  4188dc:	xchg   edx,eax
  4188dd:	adc    ebx,DWORD PTR [esi+0xc]
  4188e0:	adc    BYTE PTR [ebx],dl
  4188e2:	or     eax,0x9ab3f077
  4188e7:	in     eax,0xe8
  4188e9:	push   0x77c3f492
  4188ee:	(bad)  
  4188ef:	adc    eax,0x3a94759e
  4188f4:	push   eax
  4188f5:	dec    edi
  4188f6:	test   eax,0x982099c8
  4188fb:	xlat   BYTE PTR ds:[ebx]
  4188fc:	mov    esp,0x9e311cc3
  418901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418902:	push   eax
  418903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418904:	mov    cl,0x5e
  418906:	cld    
  418907:	push   ebp
  418908:	push   ss
  418909:	mov    eax,0x4117db62
  41890e:	je     0x41898a
  418910:	sub    eax,0xf8669d0c
  418915:	out    0xf1,eax
  418917:	xor    BYTE PTR [ecx],bh
  418919:	sbb    BYTE PTR [ebx+0x1d913943],0x96
  418920:	lock arpl WORD PTR [esi+0x48fcbe62],ax
  418927:	sbb    BYTE PTR [ebx+0x74],ch
  41892a:	push   0x3d7c8eaf
  41892f:	lods   al,BYTE PTR ds:[esi]
  418930:	mov    bh,0x35
  418932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418933:	push   eax
  418934:	stos   BYTE PTR es:[edi],al
  418935:	es pop edi
  418937:	push   edi
  418938:	pop    ds
  418939:	mov    cl,0x68
  41893b:	das    
  41893c:	pushf  
  41893d:	xchg   DWORD PTR [ebx+0x5a],edi
  418940:	out    dx,eax
  418941:	les    ebp,FWORD PTR [eax]
  418943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418944:	mov    ecx,0x73b616bc
  418949:	gs stc 
  41894b:	pop    esi
  41894c:	out    dx,eax
  41894d:	xchg   BYTE PTR [esi+0x6f6be75a],cl
  418953:	sub    BYTE PTR [esi-0x34d0079d],dl
  418959:	push   ebx
  41895a:	sets   BYTE PTR [ebp+0x6f6162eb]
  418961:	je     0x418911
  418963:	leave  
  418964:	xchg   ecx,eax
  418965:	xor    eax,0x73dca8c8
  41896a:	pop    ebx
  41896b:	sbb    DWORD PTR [eax-0x72b851f4],esi
  418971:	cld    
  418972:	idiv   DWORD PTR [eax]
  418974:	cmp    esi,DWORD PTR [edx]
  418976:	outs   dx,DWORD PTR ds:[esi]
  418977:	sub    al,0xd2
  418979:	mov    ebx,0x36b52a84
  41897e:	inc    edx
  41897f:	outs   dx,DWORD PTR ds:[esi]
  418980:	retf   0x1c5c
  418983:	into   
  418984:	add    DWORD PTR [esi],ebx
  418986:	gs pop ds
  418988:	pushf  
  418989:	dec    ecx
  41898a:	and    bl,ch
  41898c:	ss inc ecx
  41898e:	dec    ebp
  41898f:	push   ds
  418990:	mov    dl,0x16
  418992:	ror    BYTE PTR [esi],cl
  418994:	xchg   ebx,eax
  418995:	aam    0x38
  418997:	fsubr  DWORD PTR [edi+0x4d859fa8]
  41899d:	shr    BYTE PTR [eax+edx*4-0x52],cl
  4189a1:	pop    es
  4189a2:	lea    edi,[esi-0x74]
  4189a5:	loopne 0x418980
  4189a7:	push   ebx
  4189a8:	test   BYTE PTR [esi+0x3],bh
  4189ab:	fwait
  4189ac:	dec    ecx
  4189ad:	and    ebx,DWORD PTR [edx+0x60f97f60]
  4189b3:	cs clc 
  4189b5:	push   ebx
  4189b6:	mov    eax,0x523e376d
  4189bb:	outs   dx,BYTE PTR ds:[esi]
  4189bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189bd:	mov    eax,ds:0xd5a998be
  4189c2:	cmc    
  4189c3:	mov    esp,0x2e7ad759
  4189c8:	sbb    al,0xd3
  4189ca:	pusha  
  4189cb:	cld    
  4189cc:	das    
  4189cd:	mov    ds:0x354a222b,eax
  4189d2:	scas   eax,DWORD PTR es:[edi]
  4189d3:	add    BYTE PTR [ebp+0x6c503667],0x56
  4189da:	push   cs
  4189db:	stos   DWORD PTR es:[edi],eax
  4189dc:	cmp    ah,dl
  4189de:	fbld   TBYTE PTR [eax-0x6137657a]
  4189e5:	or     ebx,esp
  4189e7:	adc    esi,DWORD PTR [eax-0x4e78ca6a]
  4189ed:	imul   ecx,eax,0xffffffc3
  4189f0:	mov    WORD PTR ds:0xab63065e,fs
  4189f6:	dec    esi
  4189f7:	int    0x48
  4189f9:	daa    
  4189fa:	rcl    DWORD PTR [ebx],0x46
  4189fd:	ds test al,0x54
  418a00:	or     BYTE PTR [ebx-0x51],bl
  418a03:	adc    dl,dl
  418a05:	jmp    0x7187f04b
  418a0a:	dec    esi
  418a0b:	iret   
  418a0c:	jbe    0x418a4b
  418a0e:	jmp    0x4b80273
  418a13:	xchg   ecx,eax
  418a14:	aad    0x41
  418a16:	shl    DWORD PTR [ecx-0x77619d11],1
  418a1c:	cmp    al,0x1c
  418a1e:	mov    ss,ebp
  418a20:	mov    al,ds:0xf8feb71c
  418a25:	arpl   WORD PTR [esp+eiz*8+0x96239ed],si
  418a2c:	cmc    
  418a2d:	jecxz  0x4189fb
  418a2f:	dec    ecx
  418a30:	repnz sub al,0x1b
  418a33:	jmp    FWORD PTR [ebp+0x47]
  418a36:	cmp    DWORD PTR [ecx+edi*8],eax
  418a39:	dec    ebp
  418a3a:	push   ds
  418a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a3c:	pop    eax
  418a3d:	sbb    DWORD PTR [eax+0x1a],esp
  418a40:	push   edi
  418a41:	dec    ebx
  418a42:	(bad)  
  418a45:	mov    al,0x3
  418a47:	and    eax,0xb9135e39
  418a4c:	mov    ecx,0x7cca546c
  418a51:	add    al,0xc2
  418a53:	or     bl,ah
  418a55:	fsub   QWORD PTR [ecx+ebx*8]
  418a58:	jae    0x4189fd
  418a5a:	jno    0x418a56
  418a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5d:	push   edi
  418a5e:	xor    eax,0xeb36e375
  418a63:	mov    ecx,0x704cdcfd
  418a68:	cmp    BYTE PTR [ecx+0x5234a7b8],dl
  418a6e:	jae    0x418a73
  418a70:	repnz mov ds:0xa0f005fa,eax
  418a76:	fdivr  st(2),st
  418a78:	pop    esp
  418a79:	xor    al,0x39
  418a7b:	and    al,0x9c
  418a7d:	(bad)  
  418a7e:	std    
  418a7f:	xor    DWORD PTR [esi],edx
  418a81:	mov    cr5,esi
  418a84:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418a86:	dec    esi
  418a87:	in     eax,dx
  418a88:	or     DWORD PTR [edi-0x9fd0056],ebx
  418a8e:	call   0xae04:0xda9f1b18
  418a95:	aaa    
  418a96:	shr    BYTE PTR [esi+0x6c37c3cb],0x9c
  418a9d:	sti    
  418a9e:	std    
  418a9f:	call   0x6c70:0xe82939dc
  418aa6:	dec    esi
  418aa7:	jbe    0x418a3d
  418aa9:	retf   
  418aaa:	ins    DWORD PTR es:[edi],dx
  418aab:	sbb    eax,0xbd743f2e
  418ab0:	pop    edx
  418ab1:	or     DWORD PTR [esi+0x4b],0x1f
  418ab5:	pop    esp
  418ab6:	bound  ebx,QWORD PTR [esi+0x70]
  418ab9:	daa    
  418aba:	or     DWORD PTR [ebx-0x36],ebp
  418abd:	out    0x23,al
  418abf:	mov    esi,0x795af9fa
  418ac5:	or     ch,BYTE PTR [edi+0x4c]
  418ac8:	pop    edx
  418ac9:	xor    BYTE PTR [edi+0x23],0x71
  418acd:	(bad)  
  418ace:	fnstcw WORD PTR [esi]
  418ad0:	push   es
  418ad1:	out    dx,al
  418ad2:	icebp  
  418ad3:	cmp    edx,DWORD PTR [ebx+ebp*4+0x7c1f9e39]
  418ada:	push   esp
  418adb:	lods   al,BYTE PTR ds:[esi]
  418adc:	mov    edi,0xc60951ef
  418ae1:	out    0x78,al
  418ae3:	repz fstp TBYTE PTR [eax]
  418ae6:	xor    eax,0x42a2d0da
  418aeb:	sbb    ch,al
  418aed:	dec    esi
  418aee:	arpl   WORD PTR [edx+0x307cd140],sp
  418af4:	in     al,dx
  418af5:	clc    
  418af6:	dec    edi
  418af7:	pusha  
  418af8:	sbb    al,0x2
  418afa:	xchg   edx,eax
  418afb:	jmp    0x6d787e8b
  418b00:	imul   ecx,eax,0x790f68de
  418b06:	xor    al,0x21
  418b08:	xchg   ebx,eax
  418b09:	jns    0x418b64
  418b0b:	stos   DWORD PTR es:[edi],eax
  418b0c:	stos   DWORD PTR es:[edi],eax
  418b0d:	fidivr DWORD PTR [ecx]
  418b0f:	push   esp
  418b10:	sar    BYTE PTR [ebp-0x415d3c96],1
  418b16:	outs   dx,DWORD PTR ds:[esi]
  418b17:	sub    al,0x97
  418b19:	mov    eax,0x81ded86b
  418b1e:	neg    eax
  418b20:	mov    DWORD PTR [edx],ecx
  418b22:	pushf  
  418b23:	xor    eax,0xba699573
  418b28:	shrd   eax,edi,0x2
  418b2c:	jmp    0x4190b6
  418b31:	xor    DWORD PTR [ecx],0xffffffd8
  418b34:	mov    eax,ds:0x19421898
  418b39:	and    ebp,DWORD PTR [ebx-0x66148d4c]
  418b3f:	cmp    BYTE PTR [eax-0x69],ch
  418b42:	pop    ebx
  418b43:	or     al,0x16
  418b45:	cmp    eax,0x62161604
  418b4a:	push   edi
  418b4b:	pop    ebx
  418b4c:	push   ds
  418b4d:	retf   0xf6
  418b50:	(bad)  
  418b51:	sti    
  418b52:	or     ebx,DWORD PTR [ebx+0x5e]
  418b55:	jle    0x418b07
  418b57:	sub    DWORD PTR [ebp-0x71067677],esp
  418b5d:	lahf   
  418b5e:	pop    ss
  418b5f:	fbld   TBYTE PTR [eax-0x78d3e9db]
  418b65:	outs   dx,BYTE PTR ds:[esi]
  418b66:	xchg   esp,eax
  418b67:	jle    0x418b4b
  418b69:	dec    edx
  418b6a:	outs   dx,BYTE PTR fs:[esi]
  418b6c:	and    edi,esi
  418b6e:	mov    esi,0x85c1dff9
  418b73:	cmc    
  418b74:	pop    edx
  418b75:	dec    esp
  418b76:	retf   
  418b77:	mov    eax,0x87d60f90
  418b7c:	stos   BYTE PTR es:[edi],al
  418b7d:	loope  0x418b9e
  418b7f:	cwde   
  418b80:	xchg   ecx,eax
  418b81:	push   0x14faecf0
  418b86:	popa   
  418b87:	nop
  418b88:	mov    bl,BYTE PTR [eax+0x47760303]
  418b8e:	stos   DWORD PTR es:[edi],eax
  418b8f:	mov    cl,0x8
  418b91:	int3   
  418b92:	dec    ebx
  418b93:	or     ah,BYTE PTR [esi+edx*2]
  418b96:	dec    edi
  418b97:	and    ebx,DWORD PTR [eax]
  418b99:	mov    edi,0xa03b95ba
  418b9e:	int    0x75
  418ba0:	je     0x418bbf
  418ba2:	repnz push esi
  418ba4:	lea    ecx,[edi+0x6a]
  418ba7:	xor    eax,0x95f4f44d
  418bac:	pusha  
  418bad:	add    BYTE PTR [ecx-0x23ae28],0x43
  418bb4:	inc    esi
  418bb5:	call   0x239:0x49a8c77e
  418bbc:	outs   dx,DWORD PTR ds:[esi]
  418bbd:	fwait
  418bbe:	test   BYTE PTR [ecx+0x7],ch
  418bc1:	dec    esi
  418bc2:	sbb    dl,BYTE PTR [ecx+0x4b]
  418bc5:	mov    bl,0x47
  418bc7:	sub    eax,0x511f761d
  418bcc:	lds    edx,FWORD PTR [ebp-0x49]
  418bcf:	imul   ebx,DWORD PTR [ebx],0x7f
  418bd2:	push   edi
  418bd3:	inc    edi
  418bd4:	ins    DWORD PTR es:[edi],dx
  418bd5:	fild   WORD PTR [edi+0x43]
  418bd8:	xchg   edx,eax
  418bd9:	outs   dx,BYTE PTR ds:[esi]
  418bda:	inc    esp
  418bdb:	cmp    dh,0x55
  418bde:	punpcklbw mm1,DWORD PTR [eax-0x58]
  418be2:	inc    ebp
  418be3:	fwait
  418be4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418be6:	sub    al,0x2d
  418be8:	ins    DWORD PTR es:[edi],dx
  418be9:	mov    dl,ah
  418beb:	add    eax,0x40e62a51
  418bf0:	and    ebp,DWORD PTR [esi-0x18531721]
  418bf6:	mov    BYTE PTR [eax],bh
  418bf8:	sbb    eax,0x8b0b9054
  418bfd:	push   eax
  418bfe:	inc    esp
  418bff:	mov    esp,0x9ad4ac55
  418c04:	xchg   ebx,eax
  418c05:	ret    0x7029
  418c08:	dec    esp
  418c09:	aam    0xa0
  418c0b:	mov    dh,0x1c
  418c0d:	mov    edi,0x512b5cb5
  418c12:	xor    al,0x36
  418c14:	das    
  418c15:	inc    esi
  418c16:	(bad)  
  418c17:	cmp    esp,DWORD PTR [esi-0x51]
  418c1a:	pop    ecx
  418c1b:	neg    BYTE PTR [ebp+0x6dd8fa25]
  418c21:	push   edi
  418c22:	mov    WORD PTR [edx-0x69eb6b88],gs
  418c28:	push   cs
  418c29:	jmp    0xe50f1055
  418c2e:	pop    ebx
  418c2f:	push   esp
  418c30:	imul   edx,DWORD PTR [edi],0xffffffc9
  418c33:	inc    ecx
  418c34:	aam    0xe7
  418c36:	ret    
  418c37:	test   eax,0x1f2dc370
  418c3c:	add    al,0x51
  418c3e:	xchg   esp,eax
  418c3f:	sub    BYTE PTR [edx+0x7],bl
  418c42:	in     al,0x61
  418c44:	je     0x418c27
  418c46:	clc    
  418c47:	jnp    0x418c44
  418c49:	jmp    0x418c54
  418c4b:	jle    0x418c02
  418c4d:	nop
  418c4e:	push   ebx
  418c4f:	popa   
  418c50:	mov    ds:0xa4a17ac8,al
  418c55:	jns    0x418c36
  418c57:	jp     0x418c3e
  418c59:	cmp    eax,DWORD PTR [edi-0x7b]
  418c5c:	shr    cl,cl
  418c5e:	jmp    0xdfb79fb3
  418c63:	(bad)  
  418c64:	out    dx,eax
  418c65:	sub    edx,edi
  418c67:	or     BYTE PTR [edi*8-0xd83eaa6],al
  418c6e:	sub    esp,DWORD PTR [ebp+0x37]
  418c71:	and    al,BYTE PTR [ebx+0x346e356]
  418c77:	out    0x57,eax
  418c79:	retf   0x683b
  418c7c:	mov    eax,0x3f21a1a0
  418c81:	daa    
  418c82:	mov    ah,0xcc
  418c84:	inc    esp
  418c85:	test   al,0x51
  418c87:	addr16 xchg ebp,eax
  418c89:	mov    ebp,0x815a6bfe
  418c8e:	aad    0x6e
  418c90:	ror    DWORD PTR [ebp+ecx*1+0x1cbb1e1d],cl
  418c97:	or     eax,0x9ac353b4
  418c9d:	cmp    esp,DWORD PTR [edx-0x7a]
  418ca0:	xlat   BYTE PTR ds:[ebx]
  418ca1:	or     eax,0xf602b22
  418ca6:	fist   DWORD PTR [edi+ebx*1+0x374591cd]
  418cad:	call   0x6f2b:0x10ce0267
  418cb4:	into   
  418cb5:	shl    DWORD PTR ds:0xdcd78738,0x27
  418cbc:	mov    eax,0xf6d99446
  418cc1:	xchg   ebx,eax
  418cc2:	sahf   
  418cc3:	test   BYTE PTR [eax+edi*4],cl
  418cc6:	test   cl,0x90
  418cc9:	daa    
  418cca:	pop    edx
  418ccb:	xchg   edi,eax
  418ccc:	je     0x418cf7
  418cce:	fiadd  WORD PTR [edi-0x7cbad0ad]
  418cd4:	jo     0x418d24
  418cd6:	mov    edi,0x10a42ac2
  418cdb:	ins    DWORD PTR es:[edi],dx
  418cdc:	fnstsw WORD PTR [ebx]
  418cde:	jbe    0x418c9f
  418ce0:	stos   BYTE PTR es:[edi],al
  418ce1:	scas   eax,DWORD PTR es:[edi]
  418ce2:	lock lods al,BYTE PTR ds:[esi]
  418ce4:	xchg   BYTE PTR [edi-0x1b0dac17],dl
  418cea:	iret   
  418ceb:	outs   dx,BYTE PTR ds:[esi]
  418cec:	dec    esi
  418ced:	adc    DWORD PTR [ecx*8+0x479d8b79],esp
  418cf4:	push   ecx
  418cf5:	mov    ch,0xde
  418cf7:	stos   DWORD PTR es:[edi],eax
  418cf8:	push   esi
  418cf9:	push   eax
  418cfa:	and    ch,BYTE PTR [edi-0x16e8bb4]
  418d00:	(bad)  
  418d01:	test   eax,0x2f7410f6
  418d06:	test   BYTE PTR [edi-0x7b],0xfb
  418d0a:	sub    DWORD PTR [edi],esi
  418d0c:	mov    ebp,0x6325ee00
  418d11:	divps  xmm4,XMMWORD PTR [ebx-0x290553e3]
  418d18:	push   esi
  418d19:	ret    
  418d1a:	iret   
  418d1b:	sbb    DWORD PTR [eax+ebp*1+0x3343da7a],edi
  418d22:	mov    dh,0xbb
  418d24:	adc    eax,0xb17da310
  418d29:	jnp    0x418d88
  418d2b:	lods   al,BYTE PTR ds:[esi]
  418d2c:	leave  
  418d2d:	sbb    al,0x4a
  418d2f:	idiv   DWORD PTR ds:0x5aefa18d
  418d35:	inc    esp
  418d36:	xor    eax,0x67434641
  418d3b:	sar    BYTE PTR ds:0x7821ced5,1
  418d41:	mov    edi,0x82462e9a
  418d46:	pop    ebp
  418d47:	fmul   st,st(6)
  418d49:	mov    dl,BYTE PTR [ecx]
  418d4b:	or     eax,0xd39e54da
  418d50:	lods   al,BYTE PTR ds:[esi]
  418d51:	std    
  418d52:	(bad)  
  418d53:	sub    edi,DWORD PTR [edx+eiz*2+0x6b2caa51]
  418d5a:	pusha  
  418d5b:	aam    0x26
  418d5d:	push   edi
  418d5e:	ficomp DWORD PTR [edi]
  418d60:	xchg   ebx,eax
  418d61:	jne    0x418cf2
  418d63:	and    DWORD PTR [ecx-0x2a],ebp
  418d66:	arpl   WORD PTR [ecx+0x1d24e914],sp
  418d6c:	cmp    cl,ah
  418d6e:	fldcw  WORD PTR [edx+0x27056e1b]
  418d74:	or     esp,DWORD PTR [ecx+0x72]
  418d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d78:	push   es
  418d79:	dec    edx
  418d7a:	test   eax,edx
  418d7c:	xor    eax,0x382bf1be
  418d81:	stc    
  418d82:	jns    0x418d50
  418d84:	xor    DWORD PTR [ecx+0x6e],ecx
  418d87:	xor    DWORD PTR ds:0x8df809dc,ecx
  418d8d:	mov    eax,0xc4e65095
  418d93:	add    eax,0xf15139f1
  418d98:	sub    ah,BYTE PTR [ebx+eiz*2+0x189e4116]
  418d9f:	mov    al,0xff
  418da1:	(bad)  
  418da2:	ficomp WORD PTR ds:0x8651a67
  418da8:	add    ecx,DWORD PTR [eax]
  418daa:	sub    DWORD PTR [ebp+0x749598f9],0xfffffff8
  418db1:	rcr    DWORD PTR [edx],1
  418db3:	and    eax,0x50e5ad18
  418db8:	rcr    BYTE PTR [edi-0x2672a12b],0x7f
  418dbf:	scas   eax,DWORD PTR es:[edi]
  418dc0:	ret    
  418dc1:	lods   al,BYTE PTR ds:[esi]
  418dc2:	out    dx,al
  418dc3:	xor    al,BYTE PTR [eax]
  418dc5:	(bad)  
  418dc7:	or     eax,0x1715b07f
  418dcc:	sub    al,0x67
  418dce:	fwait
  418dcf:	mov    ebx,0xaf19ec29
  418dd4:	add    ecx,esi
  418dd6:	xor    al,0x79
  418dd8:	sar    DWORD PTR [edi],0xdc
  418ddb:	push   0xfd1315fc
  418de0:	xchg   ecx,eax
  418de1:	pop    es
  418de2:	add    esp,edx
  418de4:	cld    
  418de5:	jecxz  0x418d96
  418de7:	xlat   BYTE PTR ds:[ebx]
  418de8:	xchg   ebx,edx
  418dea:	add    DWORD PTR [ecx-0x4],ebp
  418ded:	imul   ebp,DWORD PTR [eax+0x7addaf5d],0xfa92cd50
  418df7:	xchg   esi,eax
  418df8:	mov    ebx,0xebd714ae
  418dfd:	dec    sp
  418dff:	popf   
  418e00:	push   ss
  418e01:	jae    0x418e74
  418e03:	xor    eax,0x49737fad
  418e08:	push   ebp
  418e09:	push   ss
  418e0a:	inc    esp
  418e0b:	inc    ecx
  418e0c:	shl    BYTE PTR [esi],1
  418e0e:	out    0xf1,al
  418e10:	xor    bh,BYTE PTR ds:0x3d2f5e11
  418e16:	mov    bh,0x7
  418e18:	jo     0x418db5
  418e1a:	cdq    
  418e1b:	xchg   edi,eax
  418e1c:	fiadd  DWORD PTR es:[ebp-0x37]
  418e20:	cmovg  edx,DWORD PTR [esi-0x541937ab]
  418e27:	mov    WORD PTR [eax],ss
  418e29:	and    DWORD PTR [ebx],esp
  418e2b:	mov    ss,WORD PTR [edi]
  418e2d:	sub    esp,DWORD PTR [ebp+0x3e]
  418e30:	inc    BYTE PTR [edx+0x4eb6e157]
  418e36:	dec    esp
  418e37:	push   ebx
  418e38:	sar    DWORD PTR [edx-0x1a],1
  418e3b:	adc    BYTE PTR [ebx+0x4c],cl
  418e3e:	les    eax,FWORD PTR [ebp-0xf1d1273]
  418e44:	(bad)  
  418e45:	inc    DWORD PTR [ecx]
  418e47:	sub    bl,al
  418e49:	out    dx,al
  418e4a:	or     BYTE PTR [ebp-0x4a],bh
  418e4d:	add    DWORD PTR [esi],esp
  418e4f:	sub    bh,BYTE PTR [eax+0x63841f2e]
  418e55:	or     BYTE PTR [eax+0x6e0ecf4d],0xea
  418e5c:	leave  
  418e5d:	add    eax,edx
  418e5f:	popa   
  418e60:	push   ss
  418e61:	sub    al,0x95
  418e63:	mov    BYTE PTR [ebx+0x33],0xe6
  418e67:	sbb    ebp,esp
  418e69:	stos   DWORD PTR es:[edi],eax
  418e6a:	popa   
  418e6b:	cmp    eax,0xad8453c2
  418e70:	fst    st(2)
  418e72:	xchg   esp,eax
  418e73:	call   0xcff6:0x5e194df9
  418e7a:	loop   0x418ed2
  418e7c:	xchg   edx,eax
  418e7d:	jmp    0x4be0:0x1820b773
  418e84:	pusha  
  418e85:	in     al,dx
  418e86:	cwde   
  418e87:	hlt    
  418e88:	mov    ebp,0xb01f3d6b
  418e8d:	(bad)  
  418e8e:	xlat   BYTE PTR ds:[ebx]
  418e8f:	jno    0x418ef7
  418e91:	js     0x418e72
  418e93:	dec    esp
  418e94:	xchg   edi,eax
  418e95:	push   ebp
  418e96:	ja     0x418e81
  418e98:	sbb    ebp,0x4076f2fa
  418e9e:	gs ss or eax,0x41ce98e
  418ea5:	cmp    DWORD PTR [ecx],ecx
  418ea7:	sub    BYTE PTR [ebx-0xc],bl
  418eaa:	imul   esp,DWORD PTR [eax-0x63],0x10
  418eae:	mov    ah,0x8
  418eb0:	inc    esi
  418eb1:	jp     0x418e8f
  418eb3:	inc    ecx
  418eb4:	je     0x418f00
  418eb6:	sahf   
  418eb7:	jecxz  0x418e3d
  418eb9:	push   ebp
  418eba:	bound  ebx,QWORD PTR [edi-0x4b]
  418ebd:	imul   esp,DWORD PTR [edi-0x119a4f57],0x5b
  418ec4:	shl    DWORD PTR [ebx],0xb7
  418ec7:	push   eax
  418ec8:	xor    bl,BYTE PTR [ebx]
  418eca:	mov    edi,0xa067d60
  418ecf:	mov    ebp,0x81501d97
  418ed4:	mov    eax,0x310bf82f
  418ed9:	adc    DWORD PTR [edi+0x107158db],esi
  418edf:	mov    esp,0xf43ee844
  418ee4:	pop    ecx
  418ee5:	pop    ebx
  418ee6:	jmp    0xddddc4ff
  418eeb:	test   eax,0x4c13c9a0
  418ef0:	je     0x418ed9
  418ef2:	or     eax,DWORD PTR [ecx+0x236a1229]
  418ef8:	repnz adc edi,DWORD PTR [edx+0x5878ae19]
  418eff:	nop
  418f00:	xor    DWORD PTR [eax+0x41bfc68],esp
  418f06:	ret    
  418f07:	popa   
  418f08:	mov    bh,0xab
  418f0a:	xchg   edx,eax
  418f0b:	adc    al,0x51
  418f0d:	jo     0x418f10
  418f0f:	push   esp
  418f10:	mov    ds:0xc96f26ef,al
  418f15:	add    BYTE PTR [ebx+eiz*1+0xe],dl
  418f19:	int3   
  418f1a:	jle    0x418f2a
  418f1c:	xor    DWORD PTR ds:0x121a97f0,esi
  418f22:	sub    dl,0xc9
  418f25:	(bad)  
  418f26:	cwde   
  418f27:	stos   DWORD PTR es:[edi],eax
  418f28:	hlt    
  418f29:	call   esp
  418f2b:	jmp    0x9b254a9
  418f30:	push   ds
  418f31:	(bad)  
  418f32:	into   
  418f33:	cmp    eax,0x55fe747
  418f38:	push   eax
  418f39:	fcmovbe st,st(1)
  418f3b:	sbb    al,0x71
  418f3d:	mov    ah,0x9d
  418f3f:	pop    esi
  418f40:	adc    al,0xce
  418f42:	cmp    esi,DWORD PTR [eax]
  418f44:	retf   0x2cc3
  418f47:	mov    ch,0xc0
  418f49:	xor    BYTE PTR [ebx+0x43],bl
  418f4c:	retf   
  418f4d:	xchg   DWORD PTR [esi-0x85320],esi
  418f53:	cmp    dh,BYTE PTR [esi-0x40]
  418f56:	xor    ebx,DWORD PTR [esp+edx*8-0x4c]
  418f5a:	lea    edi,[edi-0x4c8a3715]
  418f60:	and    eax,0x2c29c8e4
  418f65:	push   ebp
  418f66:	and    DWORD PTR [esp+edx*1+0x353e8ae2],ebx
  418f6d:	cmp    esp,esp
  418f6f:	mov    al,0x2
  418f71:	mov    al,BYTE PTR [ebp+0x7]
  418f74:	inc    ecx
  418f75:	ss xchg esi,eax
  418f77:	into   
  418f78:	arpl   WORD PTR [edx+ebx*2+0x23f8c50d],si
  418f7f:	jp     0x418fb7
  418f81:	mov    bl,0x54
  418f83:	aaa    
  418f84:	lahf   
  418f85:	mov    esi,0xcc475fa6
  418f8a:	scas   eax,DWORD PTR es:[edi]
  418f8b:	cs sbb al,0xd3
  418f8e:	into   
  418f8f:	xchg   edx,eax
  418f90:	cmc    
  418f91:	jp     0x418f75
  418f93:	outs   dx,DWORD PTR ds:[esi]
  418f94:	or     ch,BYTE PTR gs:[eax]
  418f97:	inc    ebx
  418f98:	sub    edx,ecx
  418f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f9b:	jbe    0x418f63
  418f9d:	xchg   ebp,eax
  418f9e:	xor    edx,DWORD PTR [ebp+0x74]
  418fa1:	rcl    ebx,0x34
  418fa4:	aam    0x84
  418fa6:	dec    edx
  418fa7:	arpl   bp,bx
  418fa9:	scas   al,BYTE PTR es:[edi]
  418faa:	pop    edi
  418fab:	scas   eax,DWORD PTR es:[edi]
  418fac:	cs pop ss
  418fae:	xchg   ebx,eax
  418faf:	arpl   WORD PTR [ebp+ebp*4+0x74c3c175],di
  418fb6:	pop    eax
  418fb7:	cmp    esp,0xffffff8a
  418fba:	test   BYTE PTR [edi-0x71],0x9e
  418fbe:	inc    ebp
  418fbf:	xlat   BYTE PTR ds:[ebx]
  418fc0:	add    eax,0x183ee017
  418fc5:	es mov esp,0x7772a4e6
  418fcb:	adc    ebx,edx
  418fcd:	aam    0x2d
  418fcf:	loop   0x418fc9
  418fd1:	xor    al,0xb4
  418fd3:	mov    eax,ds:0xbc3376ea
  418fd8:	push   cs
  418fd9:	jne    0x418fc7
  418fdb:	mov    ds:0x730ba719,eax
  418fe0:	(bad)  
  418fe1:	rcr    DWORD PTR [ebx-0x76],cl
  418fe4:	enter  0xfd5d,0x7a
  418fe8:	jecxz  0x419030
  418fea:	or     DWORD PTR [eax],eax
  418fec:	mov    esp,ebx
  418fee:	stos   DWORD PTR es:[edi],eax
  418fef:	and    ebp,DWORD PTR [eax]
  418ff1:	jecxz  0x418fee
  418ff3:	(bad)  
  418ff4:	sub    al,0xbd
  418ff6:	(bad)  
  418ff7:	sbb    al,0x6b
  418ff9:	cmp    al,0x4b
  418ffb:	sbb    esp,DWORD PTR [eax]
  418ffd:	mov    ch,BYTE PTR [eax+0x15fc7da1]
  419003:	das    
  419004:	dec    eax
  419005:	mov    ah,0xbd
  419007:	cmp    eax,0x9ae170f0
  41900c:	xchg   DWORD PTR ds:0x6836424e,edx
  419012:	fadd   QWORD PTR [ecx+0x46]
  419015:	mov    ebp,0x779bef7f
  41901a:	mov    edi,0xb733f737
  41901f:	add    ebp,DWORD PTR [ebp+0x2f860e5b]
  419025:	loop   0x4190a3
  419027:	adc    BYTE PTR [ebx-0x57],cl
  41902a:	retf   0xd5f7
  41902d:	xor    al,0x9f
  41902f:	idiv   DWORD PTR [esi]
  419031:	arpl   WORD PTR [esi+0x76],cx
  419034:	or     dl,BYTE PTR [esi]
  419036:	jo     0x418fe7
  419038:	or     BYTE PTR [edi-0x5faa7d20],dh
  41903e:	mov    ds:0x7bba4513,al
  419043:	leave  
  419044:	adc    BYTE PTR [ebx+0x8edb2c4],ch
  41904a:	cmp    DWORD PTR [ebp-0x4b],esi
  41904d:	cmp    DWORD PTR [edx-0x18],0xffffffdb
  419051:	push   edx
  419052:	enter  0x1b8d,0x85
  419056:	out    dx,al
  419057:	test   BYTE PTR [eax-0x59],ch
  41905a:	adc    DWORD PTR [eax+0x26a13887],ebp
  419060:	jbe    0x4190c1
  419062:	add    dh,al
  419064:	adc    DWORD PTR [edi-0x758dedf9],edx
  41906a:	shr    DWORD PTR [edi+eax*8-0x74],0x6c
  41906f:	mov    ebp,0xbc1fa3c5
  419074:	jmp    esi
  419076:	xor    ecx,esp
  419078:	dec    eax
  419079:	cli    
  41907a:	jle    0x4190c0
  41907c:	in     al,0x88
  41907e:	repnz nop
  419080:	loope  0x4190ca
  419082:	pop    eax
  419083:	sub    bl,BYTE PTR [esi+esi*2]
  419086:	adc    esp,DWORD PTR [esp+eax*8+0x36]
  41908a:	jo     0x419073
  41908c:	xor    DWORD PTR [edi+0x2],esi
  41908f:	popf   
  419090:	loope  0x419045
  419092:	adc    DWORD PTR [edi-0x18],edi
  419095:	jmp    0x9d2ab851
  41909a:	das    
  41909b:	mov    al,0x69
  41909d:	mov    ecx,0xf716ada3
  4190a2:	lock sub edi,DWORD PTR [esi]
  4190a5:	test   eax,0xb29e3110
  4190aa:	dec    eax
  4190ab:	push   ebx
  4190ac:	ss jb  0x4190a4
  4190af:	lods   eax,DWORD PTR ds:[esi]
  4190b0:	lea    eax,gs:[edi]
  4190b3:	push   eax
  4190b4:	xchg   ch,ah
  4190b6:	xor    ecx,ecx
  4190b8:	shr    edi,0x2
  4190bb:	or     edi,DWORD PTR [ebp+0x14]
  4190be:	or     eax,ecx
  4190c0:	cmp    edx,eax
  4190c2:	jne    0x41965b
  4190c8:	cmp    DWORD PTR [ebp+0xc],edi
  4190cb:	jmp    0x419655
  4190d0:	arpl   WORD PTR [edi+0x1f],di
  4190d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d4:	adc    esp,DWORD PTR [esi+0x24f3262]
  4190da:	xchg   esi,eax
  4190db:	outs   dx,BYTE PTR ds:[esi]
  4190dc:	mov    edx,0xbc68e40a
  4190e1:	pop    ecx
  4190e2:	or     al,0x16
  4190e4:	cmp    eax,0xa3161604
  4190e9:	out    dx,eax
  4190ea:	stos   BYTE PTR es:[edi],al
  4190eb:	adc    al,0x6e
  4190ed:	and    bl,ch
  4190ef:	inc    eax
  4190f0:	sbb    eax,esp
  4190f2:	mov    BYTE PTR [ebp-0x7b9c3f28],ch
  4190f8:	(bad)  
  4190f9:	mov    ds,WORD PTR [edi]
  4190fb:	pop    esp
  4190fc:	adc    eax,0xa83029f3
  419101:	sbb    edx,esp
  419103:	mov    dh,0x5
  419105:	in     al,dx
  419106:	inc    eax
  419107:	popa   
  419108:	retf   0xebe3
  41910b:	jo     0x419114
  41910d:	dec    DWORD PTR ss:[ebp-0x65]
  419111:	dec    edi
  419112:	cmp    edi,esp
  419114:	mov    BYTE PTR [edx-0x72],ch
  419117:	iret   
  419118:	clc    
  419119:	mov    esp,0xa4560521
  41911e:	out    0x2,eax
  419120:	in     eax,dx
  419121:	and    eax,0x27c8bfb
  419126:	mov    eax,0x35150a84
  41912b:	xlat   BYTE PTR ds:[ebx]
  41912c:	call   0x613f5231
  419131:	jl     0x419150
  419133:	pusha  
  419134:	pushf  
  419135:	stos   BYTE PTR es:[edi],al
  419136:	pusha  
  419137:	push   cs
  419138:	std    
  419139:	(bad)  
  41913a:	xlat   BYTE PTR ds:[ebx]
  41913b:	mov    ch,0xb0
  41913d:	hlt    
  41913e:	jns    0x4191b1
  419140:	jmp    0x91d669ba
  419145:	mov    eax,0xa00b343
  41914a:	pop    edi
  41914b:	sahf   
  41914c:	xchg   bl,dh
  41914e:	imul   ebx,DWORD PTR [eax],0xffffffbd
  419151:	jb     0x419158
  419153:	sbb    eax,0x4140247a
  419158:	xor    ch,ah
  41915a:	adc    edi,DWORD PTR [eax+0x1]
  41915d:	inc    esp
  41915e:	push   cs
  41915f:	icebp  
  419160:	int    0x68
  419162:	sub    al,0xbb
  419164:	pop    ss
  419165:	mov    dl,0x73
  419167:	aaa    
  419168:	je     0x4191a0
  41916a:	call   0x24553728
  41916f:	sub    DWORD PTR [esi-0x3b],edx
  419172:	aad    0x9
  419174:	adc    DWORD PTR [edx+0x4c],ebx
  419177:	(bad)  
  419178:	and    ah,BYTE PTR [ecx+0x4ec3f23f]
  41917e:	inc    eax
  41917f:	cmp    DWORD PTR [edi],eax
  419181:	(bad)
  419184:	clc    
  419185:	dec    esi
  419186:	mov    esp,0xf05b9df0
  41918b:	or     BYTE PTR [edi-0x18],bh
  41918e:	pop    esp
  41918f:	dec    esp
  419190:	rcl    ecx,cl
  419192:	je     0x4191fc
  419194:	dec    esp
  419195:	pusha  
  419196:	out    0x9e,al
  419198:	fldcw  WORD PTR [edx+eax*8-0x7b]
  41919c:	call   0xcba0:0xaf29fb99
  4191a3:	xor    ebx,DWORD PTR [ecx]
  4191a5:	jmp    0x2c2:0xabb4e5a0
  4191ac:	and    bh,BYTE PTR [eax-0x13]
  4191af:	inc    edi
  4191b0:	ret    
  4191b1:	in     eax,dx
  4191b2:	and    BYTE PTR [ebp+0x7c],al
  4191b5:	ds ud2 
  4191b8:	sub    DWORD PTR [esi-0xa76321c],ebp
  4191be:	das    
  4191bf:	test   BYTE PTR [ecx+0x6f1c1c68],bh
  4191c5:	clc    
  4191c6:	and    al,0xc6
  4191c8:	pop    es
  4191c9:	sbb    BYTE PTR [ebp-0x3edf26c3],0xf7
  4191d0:	sub    al,0x8c
  4191d2:	cli    
  4191d3:	and    eax,eax
  4191d5:	pop    ss
  4191d6:	leave  
  4191d7:	inc    edi
  4191d8:	sub    al,0xd2
  4191da:	mov    ds:0xeebb66f9,al
  4191df:	add    DWORD PTR [ebx-0x548fab50],ebx
  4191e5:	inc    esp
  4191e6:	stos   DWORD PTR es:[edi],eax
  4191e7:	js     0x419211
  4191e9:	fidiv  DWORD PTR [ebp+0x5b488d81]
  4191ef:	inc    edx
  4191f0:	loop   0x41918b
  4191f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f3:	nop
  4191f4:	call   esp
  4191f6:	enter  0x363f,0x99
  4191fa:	xor    BYTE PTR [ebp+0x79],al
  4191fd:	jg     0x41924f
  4191ff:	nop
  419200:	call   0x176e4089
  419205:	out    0xfd,al
  419207:	cmp    DWORD PTR ds:0x66ccadd9,esi
  41920d:	sub    BYTE PTR [esi-0x33828734],cl
  419213:	cmp    al,0x64
  419215:	sbb    al,0xf4
  419217:	scas   eax,DWORD PTR es:[edi]
  419218:	push   0xfddbb62a
  41921d:	sti    
  41921e:	dec    esi
  41921f:	inc    esi
  419220:	je     0x41925a
  419222:	aaa    
  419223:	mov    eax,0x3654d308
  419228:	pop    esi
  419229:	ficomp DWORD PTR [ebp+0x44]
  41922c:	cwde   
  41922d:	gs ret 0x5f0b
  419231:	enter  0x5b57,0x47
  419235:	imul   DWORD PTR cs:[eax-0x3b]
  419239:	ins    DWORD PTR es:[edi],dx
  41923a:	sbb    BYTE PTR [ebx-0xc],cl
  41923d:	scas   eax,DWORD PTR es:[edi]
  41923e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41923f:	es jb  0x4191fb
  419242:	repnz pop edx
  419244:	mov    bh,0xb
  419246:	xchg   edx,eax
  419247:	les    ebp,FWORD PTR [ecx]
  419249:	adc    cl,BYTE PTR [ebp-0x20]
  41924c:	pop    ebx
  41924d:	cs sbb eax,0xcea4fb55
  419253:	add    WORD PTR [edx],bp
  419256:	dec    esi
  419257:	js     0x41922f
  419259:	adc    DWORD PTR [ebx+0x54d1f311],0xd18d0317
  419263:	sub    ebx,DWORD PTR [ecx]
  419265:	cmp    esp,eax
  419267:	dec    eax
  419268:	mov    eax,eax
  41926a:	add    BYTE PTR [si-0x790b],dl
  41926f:	and    eax,DWORD PTR [ebp+esi*8+0x26]
  419273:	gs xor al,0x94
  419276:	inc    edi
  419277:	mov    ecx,0x54bbd0fd
  41927c:	inc    edx
  41927d:	fld    DWORD PTR [eax+0x7dcffb78]
  419283:	push   eax
  419284:	cmp    eax,0xe223d4fc
  419289:	add    BYTE PTR [edi],al
  41928b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41928d:	ins    DWORD PTR es:[edi],dx
  41928e:	out    dx,al
  41928f:	popw   ss
  419291:	jnp    0x41921e
  419293:	and    ebp,DWORD PTR [ecx+0x2bfdc03a]
  419299:	cmp    al,BYTE PTR [edx+0x69c1e959]
  41929f:	mov    ?,WORD PTR [ebx-0x35015067]
  4192a5:	ss in  eax,0x4b
  4192a8:	pushf  
  4192a9:	ret    
  4192aa:	push   edi
  4192ab:	sbb    dh,dh
  4192ad:	push   0xe
  4192af:	jae    0x419253
  4192b1:	mov    WORD PTR [ebp+0x8],es
  4192b4:	loopne 0x41926b
  4192b6:	cmp    bl,al
  4192b8:	jne    0x41927f
  4192ba:	pop    ebp
  4192bb:	sar    BYTE PTR [ebp+0x3c],0x98
  4192bf:	push   esi
  4192c0:	dec    esi
  4192c1:	lods   eax,DWORD PTR ds:[esi]
  4192c2:	and    BYTE PTR [ebx+0x5],bl
  4192c5:	shl    DWORD PTR [ebp-0x31],0xa1
  4192c9:	or     dl,BYTE PTR [esp+ecx*8+0x58]
  4192cd:	test   DWORD PTR ds:[esi+0x65],0x5bca7591
  4192d5:	in     eax,0x58
  4192d7:	rol    BYTE PTR [ecx+ecx*8-0xf20e3db],1
  4192de:	sub    ecx,eax
  4192e0:	lahf   
  4192e1:	lahf   
  4192e2:	jae    0x4192e2
  4192e4:	push   ss
  4192e5:	std    
  4192e6:	inc    edi
  4192e7:	xchg   edx,eax
  4192e8:	outs   dx,BYTE PTR ds:[esi]
  4192e9:	and    dh,bh
  4192eb:	and    ebx,ecx
  4192ed:	mov    cl,0x7
  4192ef:	xchg   esp,eax
  4192f0:	test   DWORD PTR ds:0x914a0d81,edx
  4192f6:	retf   0x22f9
  4192f9:	rcr    BYTE PTR [ecx-0x66],cl
  4192fc:	mov    al,0xec
  4192fe:	sbb    ebp,ebp
  419300:	mov    al,0xa8
  419302:	fwait
  419303:	mov    al,ds:0x46ac31
  419308:	js     0x4192e8
  41930a:	arpl   WORD PTR [ebp-0x66],sp
  41930d:	out    0x18,eax
  41930f:	repz imul edi,DWORD PTR [edx],0xffffff97
  419313:	into   
  419314:	mov    dh,0xf2
  419316:	test   BYTE PTR [edx],bl
  419318:	inc    eax
  419319:	mov    bh,0x29
  41931b:	mov    al,0x83
  41931d:	mov    edi,0xc1bc495a
  419322:	cdq    
  419323:	out    0xd3,eax
  419325:	sub    edi,esp
  419327:	add    DWORD PTR [eax],esi
  419329:	jle    0x4192b3
  41932b:	ds jno 0x4192fb
  41932e:	shl    DWORD PTR [ecx-0x50],cl
  419331:	(bad)  
  419332:	stos   DWORD PTR es:[edi],eax
  419333:	scas   eax,DWORD PTR es:[edi]
  419334:	popf   
  419335:	mov    esi,0xef85cba2
  41933a:	dec    esi
  41933b:	push   edx
  41933c:	loop   0x419373
  41933e:	push   0xffffffd0
  419340:	(bad)  
  419341:	xchg   ecx,eax
  419342:	pop    ebx
  419343:	or     bh,ah
  419345:	scas   al,BYTE PTR es:[edi]
  419346:	mov    cl,0x95
  419348:	dec    ebx
  419349:	inc    esi
  41934a:	mov    cl,0xa9
  41934c:	iret   
  41934d:	bound  ebp,QWORD PTR [edi-0x75]
  419350:	in     al,dx
  419351:	cmp    dl,bh
  419353:	lock aam 0xf2
  419356:	jae    0x419314
  419358:	jo     0x419369
  41935a:	aad    0x18
  41935c:	imul   edx,DWORD PTR ds:0x7aa772db,0x1b
  419363:	jmp    0x62f061ec
  419368:	xor    BYTE PTR [edx],bl
  41936a:	je     0x419310
  41936c:	push   0xc62dad35
  419371:	dec    ebx
  419372:	and    dh,bh
  419374:	sti    
  419375:	push   ds
  419376:	mov    bl,0xe2
  419378:	aas    
  419379:	call   0xb6b02dae
  41937e:	gs dec eax
  419380:	cdq    
  419381:	pop    ss
  419382:	mov    dl,0x0
  419384:	mov    esp,0x94034fda
  419389:	std    
  41938a:	std    
  41938b:	rcr    bh,1
  41938d:	push   ecx
  41938e:	sbb    al,0x4b
  419390:	pop    esi
  419391:	cmp    DWORD PTR [ecx],ebp
  419393:	sub    dl,dh
  419395:	stc    
  419396:	iret   
  419397:	add    DWORD PTR [ebx+0x50],0xb02badfa
  41939e:	lods   al,BYTE PTR ds:[esi]
  41939f:	adc    DWORD PTR [ebp-0x7c89c4],ecx
  4193a5:	icebp  
  4193a6:	jge    0x419388
  4193a8:	add    ch,BYTE PTR [esi]
  4193aa:	jne    0x4193f5
  4193ac:	loop   0x4193ba
  4193ae:	popa   
  4193af:	mov    esi,0x3095802c
  4193b4:	cmp    al,ah
  4193b6:	es idiv cl
  4193b9:	retf   0x1375
  4193bc:	xor    DWORD PTR [edi],eax
  4193be:	icebp  
  4193bf:	mov    ch,0x9d
  4193c1:	dec    ecx
  4193c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c3:	test   eax,0x88f68899
  4193c8:	adc    eax,0xf1815e4f
  4193cd:	mov    eax,ss:0x7eac0393
  4193d3:	pop    esi
  4193d4:	(bad)  
  4193d5:	push   esi
  4193d6:	pop    ebp
  4193d7:	mov    ch,0xcb
  4193d9:	or     BYTE PTR [edx],bl
  4193db:	leave  
  4193dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193dd:	push   edx
  4193de:	lea    edx,[ebx]
  4193e0:	pop    ebp
  4193e1:	jge    0x419446
  4193e3:	ud0    eax,DWORD PTR ds:0xf6ec6088
  4193ea:	inc    ebx
  4193eb:	jp     0x4193f7
  4193ed:	or     ebx,DWORD PTR [eax+ebx*4]
  4193f0:	inc    ebx
  4193f1:	push   cs
  4193f2:	mov    bh,0xbc
  4193f4:	sti    
  4193f5:	xchg   BYTE PTR [ecx-0x5e],bl
  4193f8:	sub    al,0xd1
  4193fa:	sbb    eax,0xd68eff89
  4193ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419400:	mov    ebp,0x2f68b5fe
  419405:	(bad)  
  419406:	(bad)  
  419407:	mul    edx
  419409:	stc    
  41940a:	sub    al,0x81
  41940c:	and    DWORD PTR [edx],esi
  41940e:	jmp    0x525f:0x29efbbd5
  419415:	addr16 cld 
  419417:	shl    DWORD PTR [edi-0x3cbcccee],cl
  41941d:	jno    0x41942a
  41941f:	jmp    0x419483
  419421:	retf   
  419422:	(bad)  
  419425:	dec    edi
  419426:	or     dl,ah
  419428:	mov    DWORD PTR [ecx+edx*2+0x34a4abc1],ecx
  41942f:	inc    ecx
  419430:	add    eax,0xbcaec9d1
  419435:	ret    0x10e3
  419438:	dec    eax
  419439:	sahf   
  41943a:	dec    edi
  41943b:	xor    bl,ch
  41943d:	jbe    0x41943a
  41943f:	mov    esp,0xb8d9d238
  419444:	xor    ebp,DWORD PTR [ebx+edx*2]
  419447:	and    ah,BYTE PTR [edi]
  419449:	ss stos BYTE PTR es:[edi],al
  41944b:	fadd   QWORD PTR [esp+edx*8]
  41944e:	lods   al,BYTE PTR ds:[esi]
  41944f:	pushf  
  419450:	cmovp  ebx,DWORD PTR [eax-0x41]
  419454:	fs out dx,al
  419456:	cld    
  419457:	mov    bl,0x63
  419459:	inc    ebp
  41945a:	adc    edi,DWORD PTR [ebx-0x71555ab6]
  419460:	jge    0x41945c
  419462:	stc    
  419463:	jmp    0xca186a88
  419468:	or     DWORD PTR [ebx-0x2f087dce],ebx
  41946e:	fsub   st(6),st
  419470:	push   DWORD PTR [edi+0x7b814c40]
  419476:	js     0x4194bf
  419478:	aaa    
  419479:	jbe    0x419488
  41947b:	sub    cl,dl
  41947d:	inc    ebp
  41947e:	mov    edx,0x490d1e45
  419483:	or     eax,edi
  419485:	mov    WORD PTR [ebx+0x81a3ae5],?
  41948b:	push   ecx
  41948c:	and    DWORD PTR [eax+0x6faee420],0xffffffe4
  419493:	xchg   edx,eax
  419494:	pop    ebp
  419495:	sti    
  419496:	dec    BYTE PTR [ecx]
  419498:	mov    edi,0xfff4dc99
  41949d:	fimul  WORD PTR [edx]
  41949f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a0:	push   0x61
  4194a2:	xlat   BYTE PTR ds:[ebx]
  4194a3:	mov    al,0x13
  4194a5:	sar    DWORD PTR [ebp+eiz*2-0x26],1
  4194a9:	add    BYTE PTR [esi+esi*4+0x48],ch
  4194ad:	pop    ebp
  4194ae:	inc    edi
  4194af:	cmp    al,0x3b
  4194b1:	sahf   
  4194b2:	mov    ?,WORD PTR [edi-0x7a1b4496]
  4194b8:	pop    eax
  4194b9:	push   ecx
  4194ba:	jecxz  0x419522
  4194bc:	jp     0x419464
  4194be:	mov    ch,0xb9
  4194c0:	jg     0x4194f5
  4194c2:	xchg   esp,eax
  4194c3:	or     dh,0xc5
  4194c6:	ror    BYTE PTR [esp+edi*2-0x3caa7aa3],0xf3
  4194ce:	stos   BYTE PTR es:[edi],al
  4194cf:	cmp    cl,bl
  4194d1:	push   edx
  4194d2:	jo     0x419475
  4194d4:	pusha  
  4194d5:	lahf   
  4194d6:	loopne 0x4194b1
  4194d8:	dec    ebx
  4194d9:	xchg   edi,eax
  4194da:	sbb    ecx,DWORD PTR [eax-0x5ff8e7a1]
  4194e0:	lahf   
  4194e1:	ins    DWORD PTR es:[edi],dx
  4194e2:	sti    
  4194e3:	adc    bh,BYTE PTR [eax-0x6f9c7091]
  4194e9:	cld    
  4194ea:	fs mov bl,ah
  4194ed:	das    
  4194ee:	push   esi
  4194ef:	aaa    
  4194f0:	lock adc BYTE PTR [ebp+0x52],ah
  4194f4:	xchg   esp,eax
  4194f5:	std    
  4194f6:	add    eax,0xdefacb1a
  4194fb:	push   ecx
  4194fc:	daa    
  4194fd:	jle    0x41949b
  4194ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419500:	xor    esi,DWORD PTR [ecx+eax*2+0x4b8f8cfc]
  419507:	pop    ebx
  419508:	xor    BYTE PTR [eax-0x55],bh
  41950b:	mov    cl,0xe2
  41950d:	test   ebx,edi
  41950f:	adc    al,0x31
  419511:	outs   dx,BYTE PTR ds:[esi]
  419512:	mov    DWORD PTR [esi+0x55],ebx
  419515:	ficomp DWORD PTR [ecx+0x14a3d5cd]
  41951b:	add    dl,ah
  41951d:	in     al,0x1e
  41951f:	xchg   ecx,eax
  419520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419521:	sbb    ebp,esi
  419523:	imul   ebx,DWORD PTR gs:[edx+0x59],0xffffff95
  419528:	mov    ds:0x18a587ab,eax
  41952d:	and    BYTE PTR [ebx+0x32787181],0xd1
  419534:	xor    eax,0x7c446d33
  419539:	sub    al,0x7c
  41953b:	cmp    esp,edx
  41953d:	icebp  
  41953e:	and    BYTE PTR [edi+eiz*8-0x3d23ad20],dl
  419545:	xor    al,0x3a
  419547:	hlt    
  419548:	sub    eax,DWORD PTR [ebx-0x32c14387]
  41954e:	inc    ebx
  41954f:	ret    
  419550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419551:	sar    BYTE PTR [edi],0x93
  419554:	fs retf 
  419556:	rcr    BYTE PTR [eax],0xf4
  419559:	fwait
  41955a:	xor    al,0x38
  41955c:	ja     0x419536
  41955e:	pop    es
  41955f:	stos   DWORD PTR es:[edi],eax
  419560:	dec    edx
  419561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419562:	es cmp eax,0xd908df84
  419568:	xchg   edi,eax
  419569:	scas   eax,DWORD PTR es:[edi]
  41956a:	in     eax,0xa
  41956c:	lock mov cs,WORD PTR [edi]
  41956f:	xor    ch,bh
  419571:	cmp    DWORD PTR [ecx],ebx
  419573:	nop
  419574:	cmp    cl,0xd4
  419577:	xchg   ecx,eax
  419578:	icebp  
  419579:	stos   BYTE PTR es:[edi],al
  41957a:	out    0x40,al
  41957c:	into   
  41957d:	ss inc esi
  41957f:	repz std 
  419581:	pop    ss
  419582:	les    ecx,FWORD PTR [ecx-0x2eb07bce]
  419588:	lods   al,BYTE PTR ds:[esi]
  419589:	push   es
  41958a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41958b:	mov    DWORD PTR [edi],ebp
  41958d:	mov    ebx,ebp
  41958f:	(bad)  
  419590:	cmp    al,0x7d
  419592:	xor    esp,DWORD PTR [esi-0x5ffc7780]
  419598:	mov    ds:0x449129f9,al
  41959d:	fs stc 
  41959f:	push   ecx
  4195a0:	jns    0x419558
  4195a2:	neg    ah
  4195a4:	jg     0x4195df
  4195a6:	repz arpl ax,cx
  4195a9:	xchg   esp,eax
  4195aa:	add    al,dl
  4195ac:	and    bh,dl
  4195ae:	mov    dh,0x1d
  4195b0:	inc    eax
  4195b1:	lea    ecx,[edx]
  4195b3:	popf   
  4195b4:	mov    eax,0xeede9002
  4195b9:	or     BYTE PTR [eax-0x2a],0x8f
  4195bd:	fld    QWORD PTR [ecx-0x1e4198ce]
  4195c3:	jl     0x419616
  4195c5:	cmp    ah,dh
  4195c7:	das    
  4195c8:	lods   al,BYTE PTR ds:[esi]
  4195c9:	xlat   BYTE PTR ds:[ebx]
  4195ca:	xor    eax,0xb098226d
  4195cf:	add    BYTE PTR [ecx-0x2662e8c],bl
  4195d5:	adc    dl,ch
  4195d7:	or     BYTE PTR [ebp-0x251e4a8f],cl
  4195dd:	aas    
  4195de:	pop    edi
  4195df:	rcl    BYTE PTR ds:0x5a67b455,cl
  4195e5:	and    eax,0xabe6cc8a
  4195ea:	repnz arpl WORD PTR [esi-0x57],bx
  4195ee:	jle    0x4195a5
  4195f0:	int    0xd5
  4195f2:	rol    DWORD PTR [eax-0x26d886ce],0x7
  4195f9:	sti    
  4195fa:	sbb    BYTE PTR [edx],cl
  4195fc:	mov    al,ds:0xba569985
  419601:	jp     0x4195cf
  419603:	je     0x419602
  419605:	call   0xb08a75a4
  41960a:	loopne 0x4195c9
  41960c:	xor    ah,BYTE PTR [edi-0x18]
  41960f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419610:	push   cs
  419611:	test   eax,0x1b8ade67
  419616:	sahf   
  419617:	xor    DWORD PTR [edx+0x54d3ad33],0x86fee8f7
  419621:	or     eax,0x2d5213f
  419626:	xor    al,0x71
  419628:	stos   DWORD PTR es:[edi],eax
  419629:	aas    
  41962a:	cmp    al,0x66
  41962c:	inc    DWORD PTR [ecx+esi*8+0x20a231cb]
  419633:	call   DWORD PTR [eax+0x5d]
  419636:	adc    BYTE PTR [edi-0x666c442f],0xec
  41963d:	add    cl,ah
  41963f:	clc    
  419640:	jno    0x4195df
  419642:	cmc    
  419643:	neg    DWORD PTR [ebx]
  419645:	jp     0x41964f
  419647:	xchg   BYTE PTR [ecx+0x6c0057c6],bh
  41964d:	das    
  41964e:	dec    edi
  41964f:	and    eax,0xd77d0d13
  419654:	and    eax,0xb24840f
  419659:	add    BYTE PTR [eax],al
  41965b:	push   DWORD PTR [ebp+0x20]
  41965e:	push   DWORD PTR [ebp+0x1c]
  419661:	push   DWORD PTR [ebp+0x18]
  419664:	jmp    0x419bee
  419669:	mov    cl,bh
  41966b:	push   eax
  41966c:	inc    ax
  41966e:	push   ds
  41966f:	sbb    al,bl
  419671:	add    bl,BYTE PTR [esi-0x13]
  419674:	mov    ah,0x79
  419676:	pop    esp
  419677:	xchg   esp,eax
  419678:	mov    dl,0xea
  41967a:	inc    ebp
  41967b:	or     al,0x16
  41967d:	cmp    eax,0xd0161604
  419682:	and    ah,ch
  419684:	ffree  st(4)
  419686:	xor    al,0x51
  419688:	push   esp
  419689:	pop    esp
  41968a:	xchg   esi,eax
  41968b:	pop    es
  41968c:	repz add esp,DWORD PTR [ecx-0x10]
  419690:	stc    
  419691:	dec    esi
  419692:	xchg   ebp,eax
  419693:	fisub  DWORD PTR [eax-0x69a6cfda]
  419699:	and    ah,BYTE PTR [ecx+0x76]
  41969c:	add    al,0x20
  41969e:	mov    esp,0xca19f11c
  4196a3:	push   edi
  4196a4:	mov    esp,0x5b90e428
  4196a9:	(bad)
  4196ac:	gs xchg ebp,eax
  4196ae:	xor    BYTE PTR [esi+0x7788f8b3],al
  4196b4:	xchg   ebx,eax
  4196b5:	cmc    
  4196b6:	dec    edi
  4196b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b8:	mov    ds,ecx
  4196ba:	(bad)  
  4196bc:	add    al,0x8e
  4196be:	shl    BYTE PTR ds:[esi+ecx*1],1
  4196c2:	inc    edi
  4196c3:	aad    0x5a
  4196c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c6:	xor    dl,BYTE PTR [edx+0x702ac48f]
  4196cc:	push   esp
  4196cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ce:	mov    eax,0x1a4d1393
  4196d3:	jo     0x41966c
  4196d5:	ficomp WORD PTR [eax-0x2e905a4f]
  4196db:	inc    edx
  4196dc:	add    bl,ah
  4196de:	sti    
  4196df:	sar    BYTE PTR [eax+0x178c230c],1
  4196e5:	cld    
  4196e6:	pop    esp
  4196e7:	push   0xfffffff2
  4196e9:	push   es
  4196ea:	inc    esp
  4196eb:	lahf   
  4196ec:	pop    ss
  4196ed:	(bad)
  4196f0:	mov    bl,0x9b
  4196f2:	pop    edi
  4196f3:	cmp    al,0x85
  4196f5:	xor    BYTE PTR [edi-0x2e],ch
  4196f8:	shl    BYTE PTR [ecx-0x4b497956],1
  4196fe:	addr16 and cl,0x55
  419702:	(bad)  
  419703:	retf   0x7250
  419706:	lock inc eax
  419708:	rcr    BYTE PTR [eax-0x7],cl
  41970b:	mov    ebx,0x35920db3
  419710:	push   0xffffffce
  419712:	clc    
  419713:	or     ebp,0x153da53a
  419719:	int3   
  41971a:	pop    ss
  41971b:	dec    edx
  41971c:	jmp    0x41974c
  41971e:	lods   al,BYTE PTR ds:[esi]
  41971f:	jmp    0xc8f6decd
  419724:	(bad)  
  419725:	xchg   ecx,eax
  419726:	sub    eax,0x4b80939e
  41972b:	in     eax,dx
  41972c:	dec    ecx
  41972d:	loop   0x41976d
  41972f:	(bad)  [ecx+0x7c4fb256]
  419735:	mov    ebp,ecx
  419737:	iret   
  419738:	mov    bl,0x97
  41973a:	dec    esi
  41973b:	test   DWORD PTR [ecx-0xcc0b3f9],0xd4c08633
  419745:	cld    
  419746:	push   eax
  419747:	push   edx
  419748:	push   esp
  419749:	lock mov bl,0xac
  41974c:	mov    edi,0x6f63cd39
  419751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419752:	stos   DWORD PTR es:[edi],eax
  419753:	jo     0x2c6d2e57
  419759:	and    BYTE PTR [eax],ch
  41975b:	(bad)  
  41975c:	imul   DWORD PTR [edx+eax*1]
  41975f:	push   ebx
  419760:	adc    ebp,esi
  419762:	rcr    ebx,cl
  419764:	mov    bh,0xd6
  419766:	loop   0x419760
  419768:	mov    bl,0xcd
  41976a:	rcr    BYTE PTR [ecx-0xa],1
  41976d:	sbb    eax,0xcfbb1437
  419772:	or     BYTE PTR [ebx-0x58],ah
  419775:	push   ebx
  419776:	sbb    ah,BYTE PTR [esi+0x4506868e]
  41977c:	gs push edi
  41977e:	les    esi,FWORD PTR [esi]
  419780:	aas    
  419781:	adc    BYTE PTR [eax],cl
  419783:	cs cld 
  419785:	push   ds
  419786:	or     BYTE PTR cs:[edi+ecx*8],bl
  41978a:	adc    edx,DWORD PTR [ecx-0x17]
  41978d:	pop    ebx
  41978e:	lahf   
  41978f:	mov    edi,0xc93a80b0
  419794:	(bad)  
  419795:	(bad)  
  419796:	std    
  419797:	and    edi,DWORD PTR [ecx+edx*8]
  41979a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41979b:	pop    ds
  41979c:	hlt    
  41979d:	repnz loop 0x419787
  4197a0:	dec    eax
  4197a1:	adc    BYTE PTR [esi],al
  4197a3:	sbb    al,0xad
  4197a5:	mov    eax,0xc0393dfe
  4197aa:	mov    al,ds:0xda77a6b0
  4197af:	lods   al,BYTE PTR ds:[esi]
  4197b0:	push   ebp
  4197b1:	sar    DWORD PTR [eax],0xf7
  4197b4:	cli    
  4197b5:	sub    DWORD PTR ds:[ebx+0x57],ecx
  4197b9:	push   ebp
  4197ba:	je     0x4197ea
  4197bc:	(bad)  
  4197be:	and    eax,0x234671de
  4197c3:	sub    bh,BYTE PTR [esi+0x4a]
  4197c6:	or     edi,esi
  4197c8:	cmp    eax,DWORD PTR ds:0x5510c1f6
  4197ce:	lds    ebp,FWORD PTR [edi]
  4197d0:	mov    ah,0xe4
  4197d2:	sahf   
  4197d3:	lahf   
  4197d4:	int    0x48
  4197d6:	loopne 0x4197f8
  4197d8:	sahf   
  4197d9:	jbe    0x41975f
  4197db:	in     eax,dx
  4197dc:	sbb    DWORD PTR [esi],esi
  4197de:	lods   eax,DWORD PTR ds:[esi]
  4197df:	add    cl,ah
  4197e1:	imul   ebp,ecx,0x8d961def
  4197e7:	add    eax,0x4b43adf9
  4197ec:	icebp  
  4197ed:	mov    edi,edx
  4197ef:	sbb    al,0x40
  4197f1:	dec    esi
  4197f2:	lahf   
  4197f3:	pusha  
  4197f4:	cmp    ecx,edx
  4197f6:	out    dx,eax
  4197f7:	sti    
  4197f8:	xchg   edx,eax
  4197f9:	jmp    0xa617:0x6534e00e
  419800:	shl    DWORD PTR [edi+eiz*2-0x8],1
  419804:	or     DWORD PTR [edi-0x65],edx
  419807:	jnp    0x4197d2
  419809:	sbb    bl,BYTE PTR [edx-0x6ad3a069]
  41980f:	test   eax,eax
  419811:	push   edx
  419812:	stos   BYTE PTR es:[edi],al
  419813:	rol    DWORD PTR [edx+ecx*4+0x25d5c23c],0x72
  41981b:	shl    esi,1
  41981d:	lock pop ds
  41981f:	push   ss
  419820:	sub    eax,0xbf00fa49
  419825:	test   ecx,ebx
  419827:	sbb    DWORD PTR [eax+ecx*4],esi
  41982a:	dec    edx
  41982b:	es mov bl,0xfa
  41982e:	pop    eax
  41982f:	jmp    0x931be8cb
  419834:	gs mov ebx,0x7d81d428
  41983a:	je     0x419802
  41983c:	adc    ch,BYTE PTR [ebx-0x51e0b6c2]
  419842:	cld    
  419843:	dec    esp
  419844:	pop    esp
  419845:	or     DWORD PTR ds:0x25536bfe,ebx
  41984b:	cmp    edx,DWORD PTR [ebp+0x347933a5]
  419851:	mov    dh,0xe1
  419853:	fstp   QWORD PTR [ebx+eiz*2-0x8e0e540]
  41985a:	jo     0x4198d2
  41985c:	cdq    
  41985d:	shl    DWORD PTR [eax+esi*8-0x32],0xa8
  419862:	(bad)  
  419863:	(bad)  
  419864:	sub    eax,0x6748b740
  419869:	shl    BYTE PTR [ebp+0x0],0x83
  41986d:	jl     0x4198c3
  41986f:	lahf   
  419870:	add    ah,cl
  419872:	(bad)  
  419873:	mov    eax,DWORD PTR ds:0x38ad87eb
  419879:	rcl    DWORD PTR [edx+eiz*1-0x4b],1
  41987d:	mov    edx,0x6b3047de
  419882:	outs   dx,DWORD PTR ds:[esi]
  419883:	mov    ebx,0x34c655da
  419888:	xchg   ebx,eax
  419889:	mov    bl,BYTE PTR [ebx]
  41988b:	adc    BYTE PTR ds:0xc158214f,cl
  419892:	push   esi
  419893:	sub    al,ch
  419895:	jge    0x4198bf
  419897:	lahf   
  419898:	xchg   ebp,eax
  419899:	outs   dx,DWORD PTR ds:[esi]
  41989a:	mov    ch,0xbb
  41989c:	jb     0x419865
  41989e:	in     eax,dx
  41989f:	push   ds
  4198a0:	shl    bl,cl
  4198a2:	mov    ecx,0x5e531a65
  4198a7:	dec    ebp
  4198a8:	aad    0x25
  4198aa:	fist   WORD PTR [edi-0x5166ad44]
  4198b0:	aaa    
  4198b1:	in     al,dx
  4198b2:	inc    esp
  4198b3:	aad    0xc8
  4198b5:	pop    ebx
  4198b6:	stos   BYTE PTR es:[edi],al
  4198b7:	adc    eax,0x964414dc
  4198bc:	push   ecx
  4198bd:	jmp    0x41989e
  4198bf:	lock aad 0x76
  4198c2:	int3   
  4198c3:	mov    esp,es
  4198c5:	jecxz  0x419930
  4198c7:	(bad)  
  4198c9:	push   0x38
  4198cb:	aas    
  4198cc:	loopne 0x41991d
  4198ce:	dec    esi
  4198cf:	shl    DWORD PTR [ebx-0x55],cl
  4198d2:	cmp    BYTE PTR [edi-0x46d1f152],cl
  4198d8:	enter  0x42c5,0xf2
  4198dc:	add    al,0x24
  4198de:	bound  ebp,QWORD PTR [ecx+edi*1-0x24c2545e]
  4198e5:	das    
  4198e6:	mov    eax,0xc8f2c37e
  4198eb:	rcl    DWORD PTR [edi],0x2e
  4198ee:	test   al,0xd2
  4198f0:	add    BYTE PTR [eax+0x61],0xbe
  4198f4:	lock arpl cx,bx
  4198f7:	mov    bl,0xd3
  4198f9:	adc    bl,bl
  4198fb:	cwde   
  4198fc:	test   bl,bh
  4198fe:	addr16 xchg ebp,eax
  419900:	mov    esi,0x3435df75
  419905:	fs inc edi
  419907:	xchg   edi,eax
  419908:	(bad)  
  419909:	mov    dl,0x97
  41990b:	push   es
  41990c:	cmp    DWORD PTR [ebp-0x4f428307],ebp
  419912:	aad    0x34
  419914:	retf   
  419915:	xchg   ebp,eax
  419916:	push   esi
  419917:	repnz inc ebx
  419919:	jae    0x4198db
  41991b:	lea    esp,[esp+ebx*1-0x8]
  41991f:	icebp  
  419920:	pop    eax
  419921:	adc    BYTE PTR [edi-0x11],0xa2
  419925:	cmp    eax,0xeb424734
  41992a:	and    esp,DWORD PTR [ecx]
  41992c:	ret    0xa1f5
  41992f:	pop    esp
  419930:	pop    esp
  419931:	mov    esp,0xe7b8c064
  419936:	mov    DWORD PTR [esi+0x2ffd26c5],edi
  41993c:	jge    0x4198c9
  41993e:	push   ebx
  41993f:	in     al,dx
  419940:	je     0x41999d
  419942:	mov    dh,0x5c
  419944:	push   ebp
  419945:	stos   BYTE PTR es:[edi],al
  419946:	lds    edx,FWORD PTR [eax+0x4b]
  419949:	adc    eax,0x745266fb
  41994e:	jns    0x419981
  419950:	or     BYTE PTR [ebp+0x28c81651],al
  419956:	fsubp  st(2),st
  419958:	fmulp  st(3),st
  41995a:	fldenv [edx+0x214a128b]
  419960:	sub    DWORD PTR [ebx],0xffffff89
  419963:	mov    ecx,0x8f25dace
  419968:	pop    edx
  419969:	test   BYTE PTR [ecx-0x38],bh
  41996c:	mov    ds:0x8fe510cb,eax
  419971:	imul   ebx,esp,0x5f
  419974:	setle  BYTE PTR [edi]
  419977:	xor    al,BYTE PTR [ebp-0x4ade07bf]
  41997d:	pop    eax
  41997e:	mov    al,ds:0xcf3eb27a
  419983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419984:	inc    edx
  419985:	push   0x3d
  419987:	mov    ecx,0xa2ad8f51
  41998c:	ficomp DWORD PTR [ecx-0x7c]
  41998f:	out    0x4,eax
  419991:	clc    
  419992:	mov    bl,0x2b
  419994:	push   ecx
  419995:	nop
  419996:	aaa    
  419997:	jp     0x4199e5
  419999:	(bad)  
  41999a:	mov    DWORD PTR [ebx],ecx
  41999c:	mov    bl,0x34
  41999e:	rol    ecx,0xef
  4199a1:	aas    
  4199a2:	cmp    BYTE PTR [ecx],dh
  4199a4:	sbb    DWORD PTR [eax],esp
  4199a6:	pushf  
  4199a7:	sub    BYTE PTR [ebx-0x24],ch
  4199aa:	ss nop
  4199ac:	sbb    DWORD PTR [esi+0x33],ebp
  4199af:	ins    BYTE PTR es:[edi],dx
  4199b0:	add    BYTE PTR ds:0xe5a9a9bc,bl
  4199b6:	jg     0x41994a
  4199b8:	stos   BYTE PTR es:[edi],al
  4199b9:	out    0x56,al
  4199bb:	int    0x18
  4199bd:	faddp  st(1),st
  4199bf:	push   eax
  4199c0:	xchg   BYTE PTR [esi],ah
  4199c2:	stos   DWORD PTR es:[edi],eax
  4199c3:	out    dx,al
  4199c4:	ins    DWORD PTR es:[edi],dx
  4199c5:	cmp    ebp,DWORD PTR [ebp-0x6db597d6]
  4199cb:	clc    
  4199cc:	adc    esp,DWORD PTR ds:0x592f5a69
  4199d2:	inc    ecx
  4199d3:	add    al,0xc4
  4199d5:	cwde   
  4199d6:	loope  0x4199b1
  4199d8:	mov    bh,BYTE PTR ss:[edi-0x1c]
  4199dc:	cdq    
  4199dd:	scas   eax,DWORD PTR es:[edi]
  4199de:	daa    
  4199df:	loopne 0x419a5c
  4199e1:	pop    ds
  4199e2:	ja     0x419a19
  4199e4:	adc    edx,DWORD PTR [esp+ebx*2]
  4199e7:	or     al,0x67
  4199e9:	and    al,0x95
  4199eb:	(bad)  
  4199ec:	cmp    esi,DWORD PTR [edx-0x7a]
  4199ef:	jg     0x419989
  4199f1:	xchg   esp,eax
  4199f2:	inc    ecx
  4199f3:	(bad)  
  4199f4:	adc    ebx,eax
  4199f6:	or     al,0x73
  4199f8:	retf   
  4199f9:	and    BYTE PTR [edi],0xb1
  4199fc:	xchg   ebp,eax
  4199fd:	fwait
  4199fe:	xor    BYTE PTR [edx-0x5c],dl
  419a01:	push   ecx
  419a02:	jnp    0x419985
  419a04:	stc    
  419a05:	or     DWORD PTR ds:[ebx+edx*2+0xadac5b2],eax
  419a0d:	pop    ds
  419a0e:	mov    ds:0xc6138878,al
  419a13:	in     al,0xed
  419a15:	push   0x3c
  419a17:	repnz fadd DWORD PTR [ebx-0x5b]
  419a1b:	gs inc ecx
  419a1d:	mov    al,ds:0x52cf8dbd
  419a22:	push   ecx
  419a23:	push   edi
  419a24:	shl    DWORD PTR [edi+0x39855462],1
  419a2a:	cmp    ebp,edi
  419a2c:	or     BYTE PTR [ecx-0x31753142],cl
  419a32:	hlt    
  419a33:	lods   al,BYTE PTR ds:[esi]
  419a34:	and    BYTE PTR [ecx-0x24],0xd0
  419a38:	pop    ds
  419a39:	xchg   ebp,eax
  419a3a:	sahf   
  419a3b:	or     esp,esi
  419a3d:	push   ds
  419a3e:	aaa    
  419a3f:	jbe    0x4199fe
  419a41:	call   0x9026778b
  419a46:	pop    es
  419a47:	add    eax,0xd593d23
  419a4c:	mov    ebx,0x6fccf59e
  419a51:	xor    eax,0x83cf24b6
  419a56:	mov    ebp,0x69f0600d
  419a5b:	iret   
  419a5c:	lahf   
  419a5d:	leave  
  419a5e:	and    al,0x1e
  419a60:	gs inc esi
  419a62:	push   0xaa9d135a
  419a67:	ja     0x419ac6
  419a69:	(bad)  [edi]
  419a6b:	in     eax,dx
  419a6c:	cwde   
  419a6d:	mov    ebx,0x8702a26c
  419a72:	test   BYTE PTR [edi+0x11a7f973],dl
  419a78:	jg     0x419a79
  419a7a:	ror    ah,0xf3
  419a7d:	in     eax,dx
  419a7e:	jno    0x419a94
  419a80:	xchg   DWORD PTR [eax-0xe],edi
  419a83:	ret    0x8d83
  419a86:	std    
  419a87:	push   esi
  419a88:	lods   eax,DWORD PTR ds:[esi]
  419a89:	push   0xc1345588
  419a8e:	pop    esi
  419a8f:	pop    ebp
  419a90:	inc    edi
  419a91:	inc    edi
  419a92:	mov    al,0xab
  419a94:	out    0xa5,al
  419a96:	push   ecx
  419a97:	add    bh,BYTE PTR [edi-0x7d]
  419a9a:	hlt    
  419a9b:	xchg   ebp,eax
  419a9c:	sub    ch,BYTE PTR [ecx+0x41]
  419a9f:	jle    0x419a75
  419aa1:	test   eax,0x79a51523
  419aa6:	xchg   ebp,eax
  419aa7:	rcr    ebp,0x14
  419aaa:	sub    al,0xba
  419aac:	stos   BYTE PTR es:[edi],al
  419aad:	pop    ss
  419aae:	inc    ecx
  419aaf:	cmp    ebp,ebp
  419ab1:	xchg   ecx,eax
  419ab2:	pop    edi
  419ab3:	cmp    DWORD PTR [edi-0xa],esp
  419ab6:	rcl    esi,0xf6
  419ab9:	mov    bl,0x8d
  419abc:	fisubr WORD PTR ds:0xff82aee7
  419ac2:	mov    ds:0xd0386d57,eax
  419ac7:	call   0x5173c4b2
  419acc:	mov    edi,0x8dbc166
  419ad1:	sar    DWORD PTR [edx-0x73],1
  419ad4:	jge    0x419ae1
  419ad6:	lds    esp,FWORD PTR [ebx]
  419ad8:	retf   
  419ad9:	xchg   edi,eax
  419ada:	push   0x4d
  419adc:	(bad)  
  419ade:	mov    edi,0xa3e9b7ac
  419ae3:	gs (bad) 
  419ae5:	sbb    DWORD PTR [eax],esp
  419ae7:	mov    ds:0x2ea1927e,eax
  419aec:	and    dl,BYTE PTR ds:0xcf0d971b
  419af2:	sbb    BYTE PTR [ebx-0x11],bl
  419af5:	add    eax,0x4ee1f0ab
  419afa:	xor    eax,0x68f39bed
  419aff:	jge    0x419af7
  419b01:	dec    eax
  419b02:	lods   eax,DWORD PTR ds:[esi]
  419b03:	mov    WORD PTR [edi-0x23],ss
  419b06:	mov    al,ds:0xf8c4c815
  419b0b:	arpl   WORD PTR [edx],cx
  419b0d:	pop    ebx
  419b0e:	imul   ebp,DWORD PTR [edx],0xffffffc8
  419b11:	test   BYTE PTR [ebp+edi*1+0x943a0b2],cl
  419b18:	(bad)  
  419b19:	sub    al,0xa
  419b1b:	mov    ds:0xece25559,eax
  419b20:	shl    DWORD PTR [ecx],0xb9
  419b23:	aam    0x45
  419b25:	(bad)  
  419b26:	int    0xda
  419b28:	jnp    0x419b6b
  419b2a:	mov    ecx,0xcf176535
  419b2f:	inc    ebx
  419b30:	fnstcw WORD PTR [esi-0x53]
  419b33:	pop    esp
  419b34:	sbb    BYTE PTR [edx-0x25],dl
  419b37:	aaa    
  419b38:	outs   dx,BYTE PTR ds:[esi]
  419b39:	pop    DWORD PTR [ebx+ecx*1]
  419b3c:	popa   
  419b3d:	shl    DWORD PTR [eax],cl
  419b3f:	outs   dx,BYTE PTR ds:[esi]
  419b40:	xchg   esi,eax
  419b41:	arpl   cx,bx
  419b43:	scas   eax,DWORD PTR es:[edi]
  419b44:	push   ss
  419b45:	push   edx
  419b46:	outs   dx,BYTE PTR ds:[esi]
  419b47:	jl     0x419b1e
  419b49:	jecxz  0x419b13
  419b4b:	pop    edx
  419b4c:	xor    ah,BYTE PTR [ebx+0xb]
  419b4f:	jle    0x419b46
  419b51:	stc    
  419b52:	jge    0x419b08
  419b54:	push   edx
  419b55:	adc    eax,0xfb590459
  419b5a:	adc    BYTE PTR [esi+0x3092f3a9],cl
  419b60:	shr    ecx,1
  419b62:	push   0xffffffc6
  419b64:	js     0x419af4
  419b66:	add    BYTE PTR [esi+0x6e],ch
  419b69:	stc    
  419b6a:	outs   dx,DWORD PTR ds:[esi]
  419b6b:	and    eax,0x89a7e5d6
  419b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b71:	aam    0x4a
  419b73:	mov    ds:0xa8c1568b,eax
  419b78:	or     cl,BYTE PTR [ecx-0x32299834]
  419b7e:	pop    esi
  419b7f:	mov    ss,WORD PTR [ebp+0x5c]
  419b82:	data16 (bad) 
  419b84:	xor    DWORD PTR [esi-0x2f3d57b6],ecx
  419b8a:	mov    edx,ebp
  419b8c:	inc    ah
  419b8e:	scas   eax,DWORD PTR es:[edi]
  419b8f:	bound  ebx,QWORD PTR [edi]
  419b91:	adc    al,0xa
  419b93:	in     al,dx
  419b94:	push   ebx
  419b95:	xchg   DWORD PTR [edx-0x18114673],edx
  419b9b:	stos   BYTE PTR es:[edi],al
  419b9c:	fwait
  419b9d:	push   esp
  419b9e:	mov    ds:0xd8388fb6,eax
  419ba3:	jecxz  0x419baa
  419ba5:	push   esp
  419ba6:	mov    bh,0x67
  419ba8:	mov    eax,0x78e4cfcf
  419bad:	mov    cl,0x84
  419baf:	push   ss
  419bb0:	loopne 0x419baa
  419bb2:	jns    0x419bad
  419bb4:	out    0xbd,eax
  419bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb7:	push   esi
  419bb8:	jge    0x419b9b
  419bba:	scas   al,BYTE PTR es:[edi]
  419bbb:	test   DWORD PTR [ecx],esi
  419bbd:	and    DWORD PTR [ecx+0x1d],eax
  419bc0:	xchg   esi,eax
  419bc1:	xor    BYTE PTR [edx-0x366f134f],0x21
  419bc8:	les    esi,FWORD PTR [eax-0x5c]
  419bcb:	mov    edi,0x5000ff77
  419bd0:	sar    DWORD PTR [ebx-0x36417db5],cl
  419bd6:	jne    0x419c25
  419bd8:	jne    0x419bc2
  419bda:	cwde   
  419bdb:	(bad)  
  419bdd:	dec    edi
  419bde:	imul   eax,DWORD PTR [ebx+ecx*8-0x1],0xffffffa8
  419be3:	(bad)  
  419be4:	inc    bl
  419be6:	rol    dl,1
  419be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be9:	dec    esi
  419bea:	xchg   BYTE PTR [edi+0x5653b8dd],bl
  419bf0:	jmp    0x41a17a
  419bf5:	in     al,0xf8
  419bf7:	inc    esi
  419bf8:	scas   eax,DWORD PTR es:[edi]
  419bf9:	sbb    ch,BYTE PTR [eax]
  419bfb:	push   esp
  419bfc:	mov    eax,0x72b8fca1
  419c01:	add    eax,0x21682265
  419c06:	cmp    ecx,DWORD PTR [esi+edx*1]
  419c09:	cmp    eax,0xfb161604
  419c0e:	xchg   BYTE PTR [ecx+0x3078921e],bl
  419c14:	dec    edx
  419c15:	adc    esp,ebp
  419c17:	push   ecx
  419c18:	inc    edi
  419c19:	js     0x419c2c
  419c1b:	in     al,0x20
  419c1d:	jae    0x419bdc
  419c1f:	xchg   ecx,eax
  419c20:	lahf   
  419c21:	dec    edx
  419c22:	retf   0x420c
  419c25:	mov    ds:0x521b26f1,al
  419c2a:	jns    0x419bb5
  419c2c:	xor    dl,ah
  419c2e:	test   bl,ah
  419c30:	mov    ?,WORD PTR [edx-0x1219c687]
  419c36:	(bad)  
  419c37:	cmp    DWORD PTR [eax],edi
  419c39:	mov    dh,0x3d
  419c3b:	scas   eax,DWORD PTR es:[edi]
  419c3c:	aad    0x6d
  419c3e:	and    eax,0xcc5261fa
  419c43:	call   0x76da:0x6c75fb7d
  419c4a:	mov    ebx,0x1e63d33b
  419c4f:	int    0xbb
  419c51:	div    edi
  419c53:	sub    bh,BYTE PTR [edi]
  419c55:	int3   
  419c56:	out    dx,eax
  419c57:	test   eax,0xbed962fd
  419c5c:	fnstenv [ebx]
  419c5e:	nop
  419c5f:	neg    BYTE PTR ds:0x13f43991
  419c65:	cmova  esi,ebp
  419c68:	mov    al,ds:0xc5292696
  419c6d:	int    0x8d
  419c6f:	mov    cl,0x21
  419c71:	ja     0x419c24
  419c73:	nop
  419c74:	jmp    FWORD PTR [edi+0xe338931]
  419c7a:	out    dx,al
  419c7b:	pop    eax
  419c7c:	arpl   si,dx
  419c7e:	repz and eax,0xe0e1d0a1
  419c84:	aas    
  419c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c86:	pop    es
  419c87:	cmp    eax,0x73cf5de4
  419c8c:	mov    ah,BYTE PTR [ecx]
  419c8e:	add    BYTE PTR [ecx],dh
  419c90:	dec    esi
  419c91:	or     DWORD PTR [eax-0x4c8de289],eax
  419c97:	mov    eax,0xcd712473
  419c9c:	(bad)  
  419c9d:	dec    edi
  419c9e:	out    0x25,al
  419ca0:	fistp  DWORD PTR [esi]
  419ca2:	push   0xffffff94
  419ca4:	xchg   edx,eax
  419ca5:	pop    es
  419ca6:	iret   
  419ca7:	push   ds
  419ca8:	push   0xffffff9a
  419caa:	pop    ds
  419cab:	mov    ah,0x9e
  419cad:	aad    0x25
  419caf:	stos   DWORD PTR es:[edi],eax
  419cb0:	mov    ds:0x9c7979af,eax
  419cb5:	add    eax,0xfcbda991
  419cba:	push   0x719ffa35
  419cbf:	or     ch,bh
  419cc1:	adc    ah,cl
  419cc3:	mov    al,ds:0xb735dc34
  419cc8:	and    dl,dh
  419cca:	int    0x39
  419ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ccd:	fild   WORD PTR [edi+ecx*2]
  419cd0:	stos   DWORD PTR es:[edi],eax
  419cd1:	mov    ds:0x4328fe4b,eax
  419cd6:	imul   ebp,DWORD PTR [edx-0x56],0xdf70aed9
  419cdd:	push   es
  419cde:	jmp    DWORD PTR [esi]
  419ce0:	xchg   ebp,eax
  419ce1:	dec    esp
  419ce2:	add    DWORD PTR [edx-0x7],esp
  419ce5:	ror    BYTE PTR [ebp-0x1f603d70],cl
  419ceb:	cmp    esp,eax
  419ced:	xchg   ebx,eax
  419cee:	call   0xc3177f75
  419cf3:	mov    ds:0x84e01865,al
  419cf8:	sbb    ebx,DWORD PTR [ecx+0x2fb62405]
  419cfe:	ja     0x419d28
  419d00:	jp     0x419d61
  419d02:	shl    BYTE PTR [ebx-0x679c3e15],0xd8
  419d09:	mov    ebp,0xc3c8ba6f
  419d0e:	retf   
  419d0f:	in     eax,0xd3
  419d11:	inc    esp
  419d12:	sbb    DWORD PTR ss:[eax-0x64f934e2],eax
  419d19:	sbb    al,0xb7
  419d1b:	add    DWORD PTR [eax+0x71ad1513],esp
  419d21:	loopne 0x419ccb
  419d23:	pop    ebp
  419d24:	inc    dx
  419d26:	sbb    eax,0xbc6d485c
  419d2b:	out    0x53,al
  419d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d2e:	lock add edx,DWORD PTR [ebx+0x48]
  419d32:	fiadd  DWORD PTR [edx-0x7a]
  419d35:	jnp    0x419d35
  419d37:	sub    BYTE PTR [esi+0x39],bh
  419d3a:	in     al,0xd
  419d3c:	call   0xef21:0x3a4931a8
  419d43:	hlt    
  419d44:	add    ah,BYTE PTR ds:0x3cd12a98
  419d4a:	call   0x52131dea
  419d4f:	std    
  419d50:	sub    DWORD PTR [ebp+0x2f645866],esi
  419d56:	dec    ebx
  419d57:	loop   0x419d1c
  419d59:	xlat   BYTE PTR ds:[ebx]
  419d5a:	dec    eax
  419d5b:	mov    esp,0xfd273571
  419d60:	cmc    
  419d61:	jmp    0x62ebdf91
  419d66:	scas   eax,DWORD PTR es:[edi]
  419d67:	hlt    
  419d68:	iret   
  419d69:	mov    al,0xe5
  419d6b:	ins    DWORD PTR es:[edi],dx
  419d6c:	or     al,BYTE PTR [eax]
  419d6e:	push   ss
  419d6f:	dec    eax
  419d70:	or     eax,DWORD PTR [edi]
  419d72:	in     al,0xcf
  419d74:	mov    edi,0x24a90d30
  419d79:	xchg   ebp,eax
  419d7a:	mov    eax,ds:0x15f0aee2
  419d7f:	and    dh,al
  419d81:	rol    DWORD PTR [edi+ecx*1+0x77a4551a],1
  419d88:	jmp    0xc4c8:0x7b6f820e
  419d8f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419d91:	dec    ebx
  419d92:	iret   
  419d93:	and    dh,dl
  419d95:	and    eax,0x8e62c07f
  419d9a:	and    BYTE PTR [ecx-0x15],0x76
  419d9e:	jle    0x419dfa
  419da0:	test   BYTE PTR [esi],dh
  419da2:	mov    BYTE PTR [esi-0x593adfe6],dh
  419da8:	loop   0x419d9d
  419daa:	add    al,0xcb
  419dac:	mov    eax,0x67a012c3
  419db1:	mov    ebx,0xcdad6bce
  419db6:	adc    al,0xc2
  419db8:	add    DWORD PTR [edi+ebx*1],0xffffffae
  419dbc:	cmp    eax,esi
  419dbe:	out    0xcf,al
  419dc0:	adc    esi,DWORD PTR [esi]
  419dc2:	mov    bl,0x64
  419dc4:	jns    0x419e32
  419dc6:	xchg   edi,eax
  419dc7:	xlat   BYTE PTR ds:[ebx]
  419dc8:	mov    dh,BYTE PTR [ecx]
  419dca:	inc    edi
  419dcb:	popa   
  419dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcd:	mov    esi,0xae99b466
  419dd2:	sbb    eax,0xcb9d33e2
  419dd7:	sbb    BYTE PTR [ebp+ebx*4-0x6a],ch
  419ddb:	pop    ss
  419ddc:	add    al,0x46
  419dde:	mov    bh,0xeb
  419de0:	push   ss
  419de1:	icebp  
  419de2:	sbb    DWORD PTR ds:0x3f980655,ebp
  419de8:	add    al,dh
  419dea:	inc    di
  419dec:	out    0x58,eax
  419dee:	shl    DWORD PTR [ecx+0x60330cfe],0xb9
  419df5:	inc    edx
  419df6:	dec    edx
  419df7:	outs   dx,DWORD PTR ds:[esi]
  419df8:	xor    cl,BYTE PTR [esi]
  419dfa:	je     0x419e54
  419dfc:	sbb    DWORD PTR [ebp+0x18],edx
  419dff:	inc    ecx
  419e00:	arpl   WORD PTR [edi-0x1d],si
  419e03:	xchg   BYTE PTR [esi-0x62],ah
  419e06:	cmp    DWORD PTR ds:0xde7c9b9a,esp
  419e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e0d:	dec    eax
  419e0e:	mov    ebp,0x9d30ed67
  419e13:	pop    ds
  419e14:	inc    esi
  419e15:	fnstenv [ebx+eax*2]
  419e18:	sbb    bh,BYTE PTR [ecx]
  419e1a:	xrelease mov DWORD PTR [ebx],edi
  419e1d:	out    0x74,eax
  419e1f:	inc    edx
  419e20:	rcr    BYTE PTR [edx+eiz*8-0x24],cl
  419e24:	dec    esp
  419e25:	(bad)  
  419e26:	daa    
  419e27:	repz sar DWORD PTR [esi-0x33],cl
  419e2b:	call   0xeed1:0x8b303201
  419e32:	jmp    0x419e14
  419e34:	mov    cs,WORD PTR [edx+esi*4-0x45]
  419e38:	pop    es
  419e39:	dec    eax
  419e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e3b:	sub    eax,0x205d97ef
  419e40:	push   ss
  419e41:	das    
  419e42:	(bad)  
  419e43:	mov    BYTE PTR [esp+edi*2],al
  419e46:	jge    0x419e11
  419e48:	imul   ebx,DWORD PTR [ebp-0x42a2e29f],0x82be1998
  419e52:	xor    eax,0x7fa8d7c8
  419e57:	push   edi
  419e58:	add    BYTE PTR [edi+0x4120b9ad],ch
  419e5e:	aam    0x4a
  419e60:	push   eax
  419e61:	ins    DWORD PTR es:[edi],dx
  419e62:	aam    0xb1
  419e64:	lahf   
  419e65:	mov    esi,esi
  419e67:	and    al,cl
  419e69:	retf   0x67c5
  419e6c:	mov    dh,0x4b
  419e6e:	mov    dh,0x97
  419e70:	jg     0x419ea6
  419e72:	aad    0xb5
  419e74:	daa    
  419e75:	jno    0x419eca
  419e77:	ins    DWORD PTR es:[edi],dx
  419e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e79:	mov    edx,0x2df618f8
  419e7e:	jmp    0x419eb1
  419e80:	lea    ebp,[ebp-0x2f7819bb]
  419e86:	mov    dl,0x44
  419e88:	es (bad) 
  419e8a:	sti    
  419e8b:	mov    ds:0x93a6fa8f,eax
  419e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e91:	pop    eax
  419e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e93:	lds    esp,FWORD PTR [ebx-0x1a20c601]
  419e99:	in     al,dx
  419e9a:	lea    eax,[edi]
  419e9c:	loope  0x419f05
  419e9e:	mov    al,0x9e
  419ea0:	push   ds
  419ea1:	adc    al,0xf3
  419ea3:	lock adc bl,BYTE PTR [ebx-0x195678e6]
  419eaa:	pusha  
  419eab:	and    al,0x3b
  419ead:	pop    ebx
  419eae:	les    esp,FWORD PTR [ebp-0x4e993c57]
  419eb4:	push   edx
  419eb5:	mov    edx,0xecca3894
  419eba:	mov    WORD PTR ss:[edi+0x1a],?
  419ebe:	and    al,0x20
  419ec0:	sar    BYTE PTR [edx+ebx*8-0x14514925],cl
  419ec7:	aas    
  419ec8:	ret    0x4de8
  419ecb:	mov    ah,0xe3
  419ecd:	repnz xor ecx,DWORD PTR [edi]
  419ed0:	rol    edi,cl
  419ed2:	push   esp
  419ed3:	push   es
  419ed4:	(bad)  
  419ed6:	mov    al,ds:0x7f969ee4
  419edb:	and    DWORD PTR [ebx+0x65a84741],0xffffff82
  419ee2:	pop    ebx
  419ee3:	retf   0x78d1
  419ee6:	gs stos DWORD PTR es:[edi],eax
  419ee8:	sub    DWORD PTR [ecx+ecx*1-0x27],ebp
  419eec:	ret    0x6d18
  419eef:	jl     0x419f32
  419ef1:	fsub   st,st(6)
  419ef3:	jnp    0x419e76
  419ef5:	and    al,0xe7
  419ef7:	inc    esp
  419ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef9:	mov    ds:0x5461e05b,eax
  419efe:	out    0x62,al
  419f00:	sbb    ebx,DWORD PTR [esi+eiz*2+0x22]
  419f04:	xlat   BYTE PTR ds:[ebx]
  419f05:	std    
  419f06:	jecxz  0x419ea3
  419f08:	push   edx
  419f09:	repnz pop ss
  419f0b:	mov    ch,0xc2
  419f0d:	int3   
  419f0e:	mov    esp,0x296b9940
  419f13:	leave  
  419f14:	int3   
  419f15:	cmp    al,0x61
  419f17:	sbb    BYTE PTR [eax+0x69],bh
  419f1a:	cmp    esp,DWORD PTR es:[ebx+0x71b42869]
  419f21:	mov    ds:0x9cb194b3,al
  419f26:	xor    edi,edi
  419f28:	xor    al,0xf8
  419f2a:	jmp    FWORD PTR [ebp-0x491da265]
  419f30:	jo     0x419f1a
  419f32:	push   ebx
  419f33:	sub    al,BYTE PTR [ecx]
  419f35:	push   ds
  419f36:	and    al,0x51
  419f38:	or     DWORD PTR ss:0xf0975cfb,edx
  419f3f:	ja     0x419f47
  419f41:	dec    edi
  419f42:	pop    es
  419f43:	(bad)  
  419f44:	jae    0x419f5c
  419f46:	gs daa 
  419f48:	(bad)  
  419f49:	jbe    0x419f01
  419f4b:	popf   
  419f4c:	or     eax,0xede85522
  419f51:	arpl   WORD PTR [edx-0x4bfd7122],bx
  419f57:	pusha  
  419f58:	pushf  
  419f59:	shl    DWORD PTR [edi+0x629f0470],0x85
  419f60:	sub    DWORD PTR [esi+ebp*2+0x77],edi
  419f64:	shl    cl,1
  419f66:	cli    
  419f67:	std    
  419f68:	test   al,0xd5
  419f6a:	ins    BYTE PTR es:[edi],dx
  419f6b:	cmp    eax,0x265d804d
  419f70:	xor    eax,0x8a6fd356
  419f75:	not    BYTE PTR gs:[esi*2+0x61d3ca97]
  419f7d:	or     BYTE PTR [edx],bl
  419f7f:	xlat   BYTE PTR ds:[ebx]
  419f80:	pop    ds
  419f81:	jb     0x419ff2
  419f83:	add    eax,0xa8a040af
  419f88:	inc    edi
  419f89:	bound  edx,QWORD PTR [ecx-0x1a12d2ca]
  419f8f:	sbb    cl,BYTE PTR [ebp-0x70b82c8f]
  419f95:	inc    edx
  419f96:	outs   dx,DWORD PTR ds:[esi]
  419f97:	in     al,dx
  419f98:	test   BYTE PTR [edi+0x3a],bh
  419f9b:	push   eax
  419f9c:	cmc    
  419f9d:	xor    bh,BYTE PTR [esi-0x4a]
  419fa0:	sbb    DWORD PTR [edx+0x6d],edi
  419fa3:	add    BYTE PTR [edi-0x5cdee2de],dh
  419fa9:	inc    eax
  419faa:	jo     0x419f44
  419fac:	pop    ebp
  419fad:	jbe    0x41a00b
  419faf:	in     al,0x98
  419fb1:	pop    eax
  419fb2:	sbb    DWORD PTR ds:0x53f90f8d,ecx
  419fb8:	mov    ah,bl
  419fba:	sub    cl,BYTE PTR ss:[eax-0x67]
  419fbe:	sbb    al,0x7f
  419fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc1:	inc    ebp
  419fc2:	pop    ebp
  419fc3:	call   0x7607:0x7ddc85f8
  419fca:	sbb    al,0xf4
  419fcc:	dec    eax
  419fcd:	enter  0xab48,0x24
  419fd1:	mov    bx,WORD PTR ds:0x59b9656
  419fd8:	sbb    BYTE PTR [eax-0x75146102],0x24
  419fdf:	xchg   edx,eax
  419fe0:	ret    
  419fe1:	popf   
  419fe2:	loop   0x41a01a
  419fe4:	inc    esp
  419fe5:	pop    edi
  419fe6:	imul   edi,DWORD PTR [edx-0x7d],0xffffffce
  419fea:	out    0xe5,eax
  419fec:	bound  edx,QWORD PTR [edx+0x23]
  419fef:	inc    esi
  419ff0:	js     0x41a015
  419ff2:	mov    edx,DWORD PTR [ebx-0x4d616e98]
  419ff8:	mov    al,ds:0x24a84d89
  419ffd:	ins    DWORD PTR es:[edi],dx
  419ffe:	mov    cl,ch
  41a000:	mov    ds:0x1440a1d5,al
  41a005:	ins    BYTE PTR es:[edi],dx
  41a006:	cmp    edi,esi
  41a008:	div    BYTE PTR [ecx]
  41a00a:	mov    DWORD PTR [ecx+0x2e],edx
  41a00d:	and    edx,DWORD PTR [ecx-0x7c5c279c]
  41a013:	mov    edx,0x45c72864
  41a018:	pop    edi
  41a019:	mov    WORD PTR [ebx],ss
  41a01b:	pop    esi
  41a01c:	and    dl,cl
  41a01e:	sub    bl,BYTE PTR [esi]
  41a020:	repz cmp eax,0xc10b684b
  41a026:	inc    eax
  41a027:	or     bl,BYTE PTR [ebx+0x16bb7fc6]
  41a02d:	pop    ds
  41a02e:	nop
  41a02f:	pushf  
  41a030:	sbb    BYTE PTR [eax],dh
  41a032:	imul   esp,DWORD PTR [ebx-0x4885217e],0x8
  41a039:	add    esi,ebp
  41a03b:	(bad)  
  41a03c:	hlt    
  41a03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a03e:	call   0x144b:0xf002a84a
  41a045:	mov    esp,0x5f7759e
  41a04a:	mov    dh,0x3a
  41a04c:	or     al,0x95
  41a04e:	vxorps xmm7,xmm3,XMMWORD PTR [ebx-0x78]
  41a053:	and    al,0x43
  41a055:	jl     0x41a096
  41a057:	(bad)  
  41a058:	jge    0x41a037
  41a05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a05b:	add    al,bh
  41a05d:	push   ss
  41a05e:	test   eax,0x5ae31a88
  41a063:	loope  0x41a0ac
  41a065:	and    eax,0xb56d6062
  41a06a:	loopne 0x41a02a
  41a06c:	xchg   edi,eax
  41a06d:	mov    al,0x2c
  41a06f:	or     eax,0x830e6d28
  41a074:	(bad)  
  41a075:	pop    edi
  41a076:	fcmovnu st,st(3)
  41a078:	call   0xe6a2:0x34ec6012
  41a07f:	mul    DWORD PTR [ebx]
  41a081:	hlt    
  41a082:	pop    ebx
  41a083:	ins    BYTE PTR es:[edi],dx
  41a084:	push   esi
  41a085:	pop    ss
  41a086:	addr16 jae 0x41a0a5
  41a089:	jnp    0x41a025
  41a08b:	mov    al,ds:0x465015ed
  41a090:	xchg   edi,eax
  41a091:	loop   0x41a107
  41a093:	push   cs
  41a094:	sub    ah,dh
  41a096:	sbb    DWORD PTR [edx+eiz*4-0x2bde96e3],ebp
  41a09d:	or     eax,0xbb96d356
  41a0a2:	and    al,BYTE PTR [ebp+0x40]
  41a0a5:	ins    DWORD PTR es:[edi],dx
  41a0a6:	cld    
  41a0a7:	loop   0x41a0f4
  41a0a9:	sti    
  41a0aa:	push   cs
  41a0ab:	adc    al,0x32
  41a0ad:	adc    BYTE PTR [esi+esi*1+0x44],dh
  41a0b1:	aas    
  41a0b2:	pop    esi
  41a0b3:	(bad)
  41a0b6:	adc    BYTE PTR [ebx-0x6790da00],bl
  41a0bc:	mov    ebx,0x4131c92
  41a0c1:	add    eax,0xea9d7afa
  41a0c6:	ss adc esi,DWORD PTR ss:[eax-0x2b]
  41a0cb:	cmp    BYTE PTR ds:0x179a1a66,dl
  41a0d1:	or     ebp,0xffffffe1
  41a0d4:	stos   DWORD PTR es:[edi],eax
  41a0d5:	jmp    0xcac7:0x80f290eb
  41a0dc:	into   
  41a0dd:	stc    
  41a0de:	and    BYTE PTR [ebx+0x3aaa8fb8],0x42
  41a0e5:	cmp    eax,0x41df8056
  41a0ea:	dec    esi
  41a0eb:	mov    ecx,0xc78baa93
  41a0f0:	sahf   
  41a0f1:	pop    eax
  41a0f2:	pop    edx
  41a0f3:	push   es
  41a0f4:	mov    ebx,0x294ddf18
  41a0f9:	(bad)  
  41a0fa:	xor    al,0x4c
  41a0fc:	std    
  41a0fd:	pop    ds
  41a0fe:	addr16 das 
  41a100:	adc    DWORD PTR [edx-0x4b],edi
  41a103:	test   DWORD PTR [ebp+ebx*2+0x51029656],0xd4e6d212
  41a10e:	add    bh,ah
  41a110:	scas   al,BYTE PTR es:[edi]
  41a111:	sub    bh,BYTE PTR [ebx+0x6f]
  41a114:	pop    edi
  41a115:	mov    esp,0xa3be2044
  41a11a:	mov    ebx,0x8e8ca568
  41a11f:	psubsb mm2,QWORD PTR [eax-0x50694944]
  41a126:	mov    al,ds:0x3b2425f5
  41a12b:	data16 xor al,0x1d
  41a12e:	jmp    0x41a19a
  41a130:	cmp    ebp,DWORD PTR ds:0xd9fb7863
  41a136:	cwde   
  41a137:	dec    eax
  41a138:	fadd   DWORD PTR [ecx-0x4a]
  41a13b:	adc    DWORD PTR [edi-0x732e47b4],edi
  41a141:	aam    0xaf
  41a143:	test   eax,0xf52a19c7
  41a148:	mov    al,ds:0x69e17f88
  41a14d:	imul   ecx,DWORD PTR [ecx-0x6862a069],0xffffffde
  41a154:	cmp    BYTE PTR [edx],ah
  41a156:	lods   al,BYTE PTR ds:[esi]
  41a157:	mov    WORD PTR [edi-0x4f],gs
  41a15a:	enter  0xd914,0xbb
  41a15e:	inc    ebp
  41a15f:	mov    cl,0x75
  41a161:	repnz add BYTE PTR [ecx+0x6a4e87da],al
  41a168:	sbb    DWORD PTR [ebx-0x7b5d8f99],edx
  41a16e:	push   ecx
  41a16f:	jne    0x41a162
  41a171:	idiv   ecx
  41a173:	push   cs
  41a174:	push   es
  41a175:	push   cs
  41a176:	add    al,0x31
  41a178:	(bad)
  41a17c:	xor    BYTE PTR [eax],al
  41a17e:	add    BYTE PTR [edi-0x37],bl
  41a181:	ret    0x1c
  41a184:	mov    DWORD PTR ds:0x4228ae,0x3cc2
  41a18e:	cmp    cl,0x40
  41a191:	mov    DWORD PTR ds:0x4228f6,0x571c
  41a19b:	jae    0x41a710
  41a1a1:	mov    DWORD PTR ds:0x42289a,0x49b8
  41a1ab:	cmp    cl,0x20
  41a1ae:	mov    DWORD PTR ds:0x4228b6,0x4a57
  41a1b8:	jae    0x41a1ce
  41a1be:	shrd   eax,edx,cl
  41a1c1:	mov    DWORD PTR ds:0x4229c2,0x6fa1
  41a1cb:	shr    edx,cl
  41a1cd:	ret    
  41a1ce:	neg    eax
  41a1d0:	mov    eax,edx
  41a1d2:	jmp    0x41a708
  41a1d7:	fldenv [eax+edi*4]
  41a1da:	inc    edx
  41a1db:	cmp    BYTE PTR [edx],dl
  41a1dd:	pop    ecx
  41a1de:	adc    al,0xa6
  41a1e0:	inc    esp
  41a1e1:	xor    al,0x68
  41a1e3:	sbb    BYTE PTR [ebp+0x394eb252],al
  41a1e9:	or     al,0x16
  41a1eb:	in     eax,0x4
  41a1ed:	push   ss
  41a1ee:	push   ss
  41a1ef:	push   ecx
  41a1f0:	std    
  41a1f1:	fsub   st,st(7)
  41a1f3:	xor    ebp,DWORD PTR [ebx]
  41a1f5:	ffreep st(3)
  41a1f7:	jno    0x41a233
  41a1f9:	xor    ah,BYTE PTR gs:0x359f2675
  41a200:	xor    al,0x5d
  41a202:	stc    
  41a203:	aad    0xeb
  41a205:	mov    dh,0xea
  41a207:	add    eax,0x6dc41ac3
  41a20c:	cli    
  41a20d:	in     eax,dx
  41a20e:	ja     0x41a20e
  41a210:	inc    edi
  41a211:	jae    0x41a247
  41a213:	mov    ah,0xcd
  41a215:	cmp    eax,esi
  41a217:	fstp   TBYTE PTR [ebx-0x4e]
  41a21a:	adc    al,0xec
  41a21c:	(bad)  
  41a21d:	mov    cl,0xce
  41a21f:	lods   al,BYTE PTR ds:[esi]
  41a220:	xchg   BYTE PTR [edi],dl
  41a222:	pushf  
  41a223:	pop    ss
  41a224:	repz sub eax,DWORD PTR [ecx+ebp*8+0x1c102ea4]
  41a22c:	or     al,0x60
  41a22e:	jecxz  0x41a1be
  41a230:	jle    0x41a271
  41a232:	jmp    0x9fcd5fe9
  41a237:	fisttp WORD PTR [eax-0x71]
  41a23a:	jnp    0x41a2a3
  41a23c:	xchg   ecx,edi
  41a23e:	cmp    al,0xdf
  41a240:	mov    ch,0xcc
  41a242:	and    eax,0xf50f119e
  41a247:	retf   
  41a248:	push   0xffffffed
  41a24a:	bound  ebx,QWORD PTR [edx-0x447d435b]
  41a250:	or     eax,DWORD PTR [ebp+0x75b5752a]
  41a256:	lods   eax,DWORD PTR ds:[esi]
  41a257:	daa    
  41a258:	sbb    eax,0xa0505ac0
  41a25d:	pop    esi
  41a25e:	dec    edi
  41a25f:	repnz cmp ecx,edx
  41a262:	into   
  41a263:	call   0x1c839f6f
  41a268:	repnz repz into 
  41a26b:	push   ecx
  41a26c:	mov    al,ds:0x92a4d5c1
  41a271:	into   
  41a272:	xor    DWORD PTR [ebp-0x484fb1b9],0x607c5689
  41a27c:	scas   eax,DWORD PTR es:[edi]
  41a27d:	mov    eax,ds:0x5ba7c878
  41a282:	int3   
  41a283:	xchg   ebp,eax
  41a284:	jno    0x41a2a4
  41a286:	adc    DWORD PTR [ebp+0x777124e6],edi
  41a28c:	(bad)  
  41a28d:	inc    edx
  41a28e:	pop    esi
  41a28f:	dec    eax
  41a290:	cld    
  41a291:	loope  0x41a2fc
  41a293:	sub    cl,BYTE PTR [eax-0x3771d2b5]
  41a299:	mov    bh,0x71
  41a29b:	mov    WORD PTR [ecx],ds
  41a29d:	aaa    
  41a29e:	das    
  41a29f:	pushf  
  41a2a0:	adc    al,0x63
  41a2a2:	cmp    dl,bl
  41a2a4:	ja     0x41a281
  41a2a6:	ret    
  41a2a7:	ficomp WORD PTR [ebx]
  41a2a9:	cmp    eax,0x3878b738
  41a2ae:	push   esp
  41a2af:	leave  
  41a2b0:	imul   esp,DWORD PTR [ecx-0x46036059],0xffffffac
  41a2b7:	push   0xd3593c30
  41a2bc:	and    DWORD PTR [edx],esp
  41a2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2bf:	adc    eax,0xa2093f60
  41a2c4:	fmul   st(2),st
  41a2c6:	sar    BYTE PTR [ebp+ebp*4-0x5],cl
  41a2ca:	xor    ch,ah
  41a2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2cd:	jno    0x41a25c
  41a2cf:	fwait
  41a2d0:	mov    al,0xb
  41a2d2:	lock push ecx
  41a2d4:	stos   BYTE PTR es:[edi],al
  41a2d5:	push   ebp
  41a2d6:	dec    ecx
  41a2d7:	shl    DWORD PTR [edi+0x51],1
  41a2da:	mov    eax,0x5a43e3c5
  41a2df:	push   0xa56bbeef
  41a2e4:	jecxz  0x41a2c4
  41a2e6:	mov    BYTE PTR [edx-0xc],cl
  41a2e9:	test   DWORD PTR [ecx-0x3f],esp
  41a2ec:	cmp    BYTE PTR [ebp+ebp*4+0x1e],al
  41a2f0:	aas    
  41a2f1:	xchg   edx,eax
  41a2f2:	fld    QWORD PTR [edx]
  41a2f4:	pop    ecx
  41a2f5:	imul   eax,DWORD PTR [edi+ebx*2-0x74eb316a],0x6c5c7a16
  41a300:	rol    BYTE PTR [eax-0x3f21a2b9],cl
  41a306:	inc    BYTE PTR [edx+0x6938663f]
  41a30c:	mov    edx,0xed53e8d4
  41a311:	loopne 0x41a298
  41a313:	ror    BYTE PTR [ecx],0xf6
  41a316:	or     esi,DWORD PTR [ebp+0xa]
  41a319:	in     al,dx
  41a31a:	push   0x7a
  41a31c:	hlt    
  41a31d:	push   DWORD PTR [esi+0x381c5828]
  41a323:	sub    al,0x3b
  41a325:	xchg   ebp,eax
  41a326:	push   ecx
  41a327:	mov    al,ds:0xe1e8cfa1
  41a32c:	adc    al,0x98
  41a32e:	push   cs
  41a32f:	test   eax,0x78f230ac
  41a334:	push   edx
  41a335:	test   al,0xb9
  41a337:	inc    edx
  41a338:	adc    ah,BYTE PTR [ebx+0x4d]
  41a33b:	hlt    
  41a33c:	fidiv  WORD PTR [ebp-0x447dbe78]
  41a342:	div    DWORD PTR [esi]
  41a344:	xor    eax,edx
  41a346:	loop   0x41a32a
  41a348:	ins    DWORD PTR es:[edi],dx
  41a349:	mov    bl,0xd
  41a34b:	inc    esi
  41a34c:	lahf   
  41a34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34e:	shl    BYTE PTR [esi+0x2591441f],cl
  41a354:	aas    
  41a355:	inc    edi
  41a356:	jl     0x41a3ad
  41a358:	inc    esi
  41a359:	push   0x2b81a771
  41a35e:	fcomp  DWORD PTR [edi+0x3236690a]
  41a364:	jb     0x41a38c
  41a366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a367:	mov    WORD PTR [esi+0x159cd2f8],ds
  41a36d:	xor    al,0xe5
  41a36f:	or     esp,DWORD PTR [esi-0x6a]
  41a372:	aaa    
  41a373:	mov    dh,0xa3
  41a375:	inc    edx
  41a376:	popa   
  41a377:	mov    ds:0x3cbf198,eax
  41a37c:	out    dx,al
  41a37d:	out    0x12,eax
  41a37f:	push   es
  41a380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a381:	sub    BYTE PTR [ebx+0x26],dh
  41a384:	dec    edx
  41a385:	inc    edx
  41a386:	and    al,0xc2
  41a388:	nop
  41a389:	sub    al,0xc0
  41a38b:	xor    BYTE PTR [eax+0xa],ah
  41a38e:	fadd   DWORD PTR [ebx-0x33]
  41a391:	pop    DWORD PTR [eax-0x3eca2465]
  41a397:	ss mov ecx,0x4d13ea81
  41a39d:	mov    edx,0xf7beb54d
  41a3a2:	pop    eax
  41a3a3:	shl    BYTE PTR [edx-0x20],0x7
  41a3a7:	gs clc 
  41a3a9:	stos   DWORD PTR es:[edi],eax
  41a3aa:	cmp    BYTE PTR [ebp-0x3935f00b],0x83
  41a3b1:	sar    DWORD PTR [eax-0x2464f4d6],0xd1
  41a3b8:	jbe    0x41a386
  41a3ba:	in     al,0x7a
  41a3bc:	mov    ebx,0x6c8ef41a
  41a3c1:	dec    ebp
  41a3c2:	inc    ebx
  41a3c3:	push   0xed86de2d
  41a3c8:	add    esp,DWORD PTR [edx+0x50d38e54]
  41a3ce:	and    ecx,DWORD PTR [edx]
  41a3d0:	sti    
  41a3d1:	jno    0x41a425
  41a3d3:	mov    dl,0x14
  41a3d5:	xchg   ebx,eax
  41a3d6:	cs xor eax,0x2c745657
  41a3dc:	sbb    eax,0x2da6bcca
  41a3e1:	dec    ebp
  41a3e2:	aas    
  41a3e3:	les    esi,FWORD PTR [esi]
  41a3e5:	mov    ecx,0x99233ad6
  41a3ea:	shr    bh,1
  41a3ec:	adc    esi,edx
  41a3ee:	and    ebx,DWORD PTR [edi+0x52]
  41a3f1:	xchg   edi,ebx
  41a3f3:	aaa    
  41a3f4:	hlt    
  41a3f5:	add    al,0x2f
  41a3f7:	add    BYTE PTR [ecx+0x48],bh
  41a3fa:	cli    
  41a3fb:	xor    eax,0x7ef4facb
  41a400:	cmp    dl,BYTE PTR [esi-0x52dff813]
  41a406:	les    edi,FWORD PTR [ecx]
  41a408:	xchg   ebx,eax
  41a409:	lods   al,BYTE PTR ds:[esi]
  41a40a:	pop    esi
  41a40b:	outs   dx,BYTE PTR ds:[esi]
  41a40c:	dec    eax
  41a40d:	pop    ecx
  41a40e:	mov    al,ds:0xca491e91
  41a413:	shl    DWORD PTR [eax-0x14],0xf0
  41a417:	push   edx
  41a418:	cmp    eax,0xbaa4710d
  41a41d:	cli    
  41a41e:	nop
  41a41f:	in     al,0xec
  41a421:	inc    edx
  41a422:	cwde   
  41a423:	mov    WORD PTR [esi+0x59],?
  41a426:	or     BYTE PTR [edi+0x490e40b5],cl
  41a42c:	gs mov al,0xcd
  41a42f:	out    dx,eax
  41a430:	fistp  WORD PTR [edi+0x58]
  41a433:	xchg   ebx,eax
  41a434:	sar    BYTE PTR ds:0x83206bd1,0x5e
  41a43b:	mov    dh,al
  41a43d:	popa   
  41a43e:	inc    edx
  41a43f:	inc    ebx
  41a440:	aam    0xae
  41a442:	aam    0xdd
  41a444:	daa    
  41a445:	add    ch,BYTE PTR [edi]
  41a447:	dec    edx
  41a448:	nop
  41a449:	lds    ebp,FWORD PTR [eax-0x6e]
  41a44c:	sahf   
  41a44d:	mov    dl,0x56
  41a44f:	shl    BYTE PTR [eax+esi*8+0x1c],1
  41a453:	test   al,0x3e
  41a455:	leave  
  41a456:	addr16 xchg ebx,eax
  41a458:	loop   0x41a3e8
  41a45a:	lahf   
  41a45b:	adc    eax,0x85e2ee8a
  41a460:	leave  
  41a461:	std    
  41a462:	pop    es
  41a463:	adc    DWORD PTR [edi+ecx*2-0xded317c],ebx
  41a46a:	push   esi
  41a46b:	(bad)  
  41a46c:	push   ebx
  41a46d:	add    al,0xfc
  41a46f:	jae    0x41a459
  41a471:	mov    ecx,0x810da7e9
  41a476:	retf   0xd97d
  41a479:	cmp    BYTE PTR [ecx],dl
  41a47b:	xchg   ecx,eax
  41a47c:	add    edi,DWORD PTR [ebp+ecx*2-0x4e]
  41a480:	int3   
  41a481:	xchg   ecx,eax
  41a482:	jg     0x41a4e9
  41a484:	dec    ebx
  41a485:	pushf  
  41a486:	add    DWORD PTR [esi-0x62],ebp
  41a489:	mov    ebp,0x20ac88e1
  41a48e:	dec    esp
  41a48f:	ja     0x41a4a7
  41a491:	jne    0x41a496
  41a493:	jg     0x41a4f9
  41a495:	cmp    BYTE PTR [ebx],cl
  41a497:	push   esi
  41a498:	push   cs
  41a499:	mov    dl,0x88
  41a49b:	aas    
  41a49c:	and    ebp,0xffffff93
  41a49f:	in     al,0x14
  41a4a1:	dec    ecx
  41a4a2:	loope  0x41a4d7
  41a4a4:	call   0x55d2:0xb185ae6b
  41a4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ac:	inc    esp
  41a4ad:	sbb    eax,0xdeba66ee
  41a4b2:	pop    bx
  41a4b4:	jmp    0x41a4c2
  41a4b6:	push   ebx
  41a4b7:	into   
  41a4b8:	lea    esi,[ebx]
  41a4ba:	sub    bl,al
  41a4bc:	mov    eax,ds:0x8293e864
  41a4c1:	(bad)  
  41a4c2:	mov    BYTE PTR [esi],dl
  41a4c4:	xor    BYTE PTR [ecx+0x63],cl
  41a4c7:	and    DWORD PTR [esi-0x4f],edx
  41a4ca:	aaa    
  41a4cb:	sub    dl,BYTE PTR [ecx+0x70606dda]
  41a4d1:	pand   mm5,mm5
  41a4d4:	cmp    al,0xa0
  41a4d6:	fwait
  41a4d7:	mov    ch,0x9a
  41a4d9:	je     0x41a4c1
  41a4db:	lahf   
  41a4dc:	sbb    edx,ebp
  41a4de:	and    DWORD PTR [esi+0x653a8f24],eax
  41a4e4:	popa   
  41a4e5:	mov    DWORD PTR [esi],ebp
  41a4e7:	sub    DWORD PTR fs:[esi-0x24],esi
  41a4eb:	mov    al,ds:0x4c063536
  41a4f0:	cli    
  41a4f1:	int    0xe7
  41a4f3:	fst    DWORD PTR [ebx+0x42f2e36e]
  41a4f9:	mov    esi,0xe72fc70f
  41a4fe:	in     al,dx
  41a4ff:	jo     0x41a56c
  41a501:	fnsave [edx]
  41a503:	inc    eax
  41a504:	cmp    al,0xa7
  41a506:	aad    0x37
  41a508:	stos   DWORD PTR es:[edi],eax
  41a509:	daa    
  41a50a:	adc    ebx,DWORD PTR [esi]
  41a50c:	mov    DWORD PTR [edi+ebx*8-0x4eb882d1],edi
  41a513:	stos   DWORD PTR es:[edi],eax
  41a514:	repnz aas 
  41a516:	mov    ebx,0x15a2f555
  41a51b:	lods   al,BYTE PTR ds:[esi]
  41a51c:	xchg   ecx,eax
  41a51d:	xchg   ebp,eax
  41a51e:	and    DWORD PTR [esi],esi
  41a520:	lds    eax,FWORD PTR [ebx]
  41a522:	jmp    0x69dc96b4
  41a527:	enter  0x116f,0xf2
  41a52b:	inc    edi
  41a52c:	pop    es
  41a52d:	test   al,0x95
  41a52f:	push   eax
  41a530:	es daa 
  41a532:	shr    BYTE PTR [ecx+0x6f],0x4e
  41a536:	test   bh,dl
  41a538:	fs xchg ebp,eax
  41a53a:	dec    ebp
  41a53b:	dec    edi
  41a53c:	loopne 0x41a512
  41a53e:	sbb    BYTE PTR [esi],al
  41a540:	test   DWORD PTR [ebp+0x1b],edx
  41a543:	push   0x3525b7e3
  41a548:	lea    ebp,[ebp+0x2a04f5eb]
  41a54e:	loop   0x41a520
  41a550:	cs pop ebx
  41a552:	pop    esi
  41a553:	mov    bl,BYTE PTR [ebx+0x5b3eee7d]
  41a559:	je     0x41a5ae
  41a55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a55c:	sub    BYTE PTR ds:[eax],0x26
  41a560:	lock cmp cl,BYTE PTR [edx+0xd629db8]
  41a567:	mov    esp,0x1599a3f2
  41a56c:	inc    esp
  41a56d:	ror    eax,1
  41a56f:	aas    
  41a570:	fwait
  41a571:	mov    ds,esi
  41a573:	push   eax
  41a574:	mov    ecx,es
  41a576:	loopne 0x41a5ca
  41a578:	sahf   
  41a579:	dec    edi
  41a57a:	dec    eax
  41a57b:	repnz xchg edi,eax
  41a57e:	int3   
  41a57f:	int3   
  41a580:	(bad)  
  41a582:	xlat   BYTE PTR ds:[ebx]
  41a583:	push   es
  41a584:	pop    edi
  41a585:	jl     0x41a515
  41a587:	dec    ecx
  41a588:	arpl   WORD PTR [eax-0xb],ax
  41a58b:	stos   BYTE PTR es:[edi],al
  41a58c:	loop   0x41a54c
  41a58e:	fmul   DWORD PTR ds:0xb88c455f
  41a594:	sbb    ebx,DWORD PTR [eax]
  41a596:	mov    ds:0xa91a0d74,eax
  41a59b:	iret   
  41a59c:	fs pushw es
  41a59f:	push   ebp
  41a5a0:	add    bh,BYTE PTR [edx+0x5c0366a8]
  41a5a6:	cmp    esi,ebp
  41a5a8:	gs out 0xaa,eax
  41a5ab:	or     edi,ecx
  41a5ad:	das    
  41a5ae:	popa   
  41a5af:	dec    ebx
  41a5b0:	in     eax,0xad
  41a5b2:	dec    ebp
  41a5b3:	aad    0x9
  41a5b5:	data16 scas al,BYTE PTR es:[edi]
  41a5b7:	loope  0x41a599
  41a5b9:	in     al,0xf7
  41a5bb:	ret    
  41a5bc:	ins    DWORD PTR es:[edi],dx
  41a5bd:	pop    ds
  41a5be:	bound  edi,QWORD PTR [edx]
  41a5c0:	mov    esp,0x959427d9
  41a5c5:	cld    
  41a5c6:	lea    ebx,[edi]
  41a5c8:	lea    ecx,[edx+0x76f1d85b]
  41a5ce:	ja     0x41a5bf
  41a5d0:	sbb    al,0xc5
  41a5d2:	call   0x551:0xf5a931d5
  41a5d9:	pop    eax
  41a5da:	fld    DWORD PTR [esi+0x747f00a6]
  41a5e0:	scas   al,BYTE PTR es:[edi]
  41a5e1:	mov    edi,0x13de6daa
  41a5e6:	xchg   DWORD PTR [ecx],esi
  41a5e8:	jb     0x41a5a3
  41a5ea:	xchg   edx,eax
  41a5eb:	daa    
  41a5ec:	lods   eax,DWORD PTR ds:[esi]
  41a5ed:	int3   
  41a5ee:	add    DWORD PTR [edi-0x40],esp
  41a5f1:	mov    bh,0x26
  41a5f3:	loop   0x41a5aa
  41a5f5:	mov    BYTE PTR [ecx-0x6b],bh
  41a5f8:	mov    BYTE PTR [edi],0x79
  41a5fb:	ja     0x41a5ba
  41a5fd:	test   al,0x59
  41a5ff:	ss daa 
  41a601:	mov    esi,0xc1a75e42
  41a606:	cld    
  41a607:	jo     0x41a5e0
  41a609:	aam    0xcf
  41a60b:	pop    ebp
  41a60c:	cmp    ah,cl
  41a60e:	out    dx,eax
  41a60f:	iret   
  41a610:	shl    DWORD PTR [ebx],1
  41a612:	fwait
  41a613:	jb     0x41a5f7
  41a615:	pop    esi
  41a616:	cmp    ch,cl
  41a618:	mov    al,0x6f
  41a61a:	push   ebx
  41a61b:	leave  
  41a61c:	fidiv  WORD PTR [ecx]
  41a61e:	hlt    
  41a61f:	out    dx,eax
  41a620:	mov    esi,0x85be9f87
  41a625:	rcl    BYTE PTR [eax-0x74],cl
  41a628:	daa    
  41a629:	lods   al,BYTE PTR ds:[esi]
  41a62a:	add    eax,0x19b9221d
  41a62f:	jp     0x41a5dc
  41a631:	mov    eax,ds:0x9a93bcee
  41a636:	ins    BYTE PTR es:[di],dx
  41a638:	mov    ebx,0x4cafdbfe
  41a63d:	and    al,0x5b
  41a63f:	lods   eax,DWORD PTR ds:[esi]
  41a640:	ficomp WORD PTR [eax+eiz*1-0x47]
  41a644:	add    BYTE PTR [ecx+esi*4+0x66],0x12
  41a649:	rcl    edx,0xc0
  41a64c:	shr    DWORD PTR [esi+eiz*1+0x6],0x8f
  41a651:	int    0xfe
  41a653:	mov    BYTE PTR [eax-0x51],dh
  41a656:	pop    es
  41a657:	in     eax,0x9d
  41a659:	popf   
  41a65a:	test   DWORD PTR ds:0x1d76b40f,eax
  41a660:	dec    esp
  41a661:	pop    ecx
  41a662:	pusha  
  41a663:	jmp    0x98f9:0x1a90808b
  41a66a:	adc    DWORD PTR [ebx+0x50195bb1],eax
  41a670:	cmp    edx,DWORD PTR [eax+0x22]
  41a673:	xchg   ebp,eax
  41a674:	mov    bh,0xc7
  41a676:	and    esp,DWORD PTR [esi+0x94c019d]
  41a67c:	daa    
  41a67d:	pop    ebx
  41a67e:	das    
  41a67f:	mov    gs,ecx
  41a681:	jns    0x41a610
  41a683:	sub    DWORD PTR [esi],esi
  41a685:	push   ebp
  41a686:	xchg   ecx,esp
  41a688:	or     ch,al
  41a68a:	push   es
  41a68b:	sbb    edi,DWORD PTR [esi+0x15]
  41a68e:	(bad)  
  41a68f:	mov    bh,0x2f
  41a691:	push   0xd3ea4479
  41a696:	mov    ah,0xca
  41a698:	in     al,0xe3
  41a69a:	fnstsw WORD PTR [esi+0x9172b68]
  41a6a0:	rol    DWORD PTR [esi+0x473616b],cl
  41a6a6:	jb     0x41a64d
  41a6a8:	nop
  41a6a9:	jmp    0x2273:0x1c06d220
  41a6b0:	leave  
  41a6b1:	adc    DWORD PTR [ecx+0x6367f986],ebx
  41a6b7:	dec    edi
  41a6b8:	inc    ecx
  41a6b9:	or     BYTE PTR [edi],bl
  41a6bb:	cmp    DWORD PTR [ebx],esp
  41a6bd:	pop    ebp
  41a6be:	cdq    
  41a6bf:	push   edi
  41a6c0:	(bad)
  41a6c3:	lea    ebx,[esi]
  41a6c5:	scas   al,BYTE PTR es:[edi]
  41a6c6:	in     al,dx
  41a6c7:	jp     0x41a6b5
  41a6c9:	mov    ah,0x58
  41a6cb:	jns    0x41a703
  41a6cd:	jge    0x41a720
  41a6cf:	dec    DWORD PTR [edx-0x31befd3f]
  41a6d5:	inc    esi
  41a6d6:	ins    BYTE PTR es:[edi],dx
  41a6d7:	pop    ecx
  41a6d8:	pop    eax
  41a6d9:	shl    DWORD PTR [esi],1
  41a6db:	leave  
  41a6dc:	jecxz  0x41a738
  41a6de:	cmc    
  41a6df:	cmp    BYTE PTR [eax+0x4],dl
  41a6e2:	cld    
  41a6e3:	in     al,0x7
  41a6e5:	mov    WORD PTR [edx+0x3b],?
  41a6e8:	sti    
  41a6e9:	retf   0xe340
  41a6ec:	push   0x1b046c2c
  41a6f1:	jbe    0x41a762
  41a6f3:	jb     0x41a72d
  41a6f5:	arpl   WORD PTR [ebx+0x679f6368],di
  41a6fb:	cs loop 0x41a70e
  41a6fe:	test   eax,0xd28a7e39
  41a703:	push   0x22e35388
  41a708:	xor    edx,edx
  41a70a:	and    cl,0x1f
  41a70d:	shr    eax,cl
  41a70f:	ret    
  41a710:	xor    eax,eax
  41a712:	xor    edx,edx
  41a714:	ret    
  41a715:	push   ebp
  41a716:	mov    ebp,esp
  41a718:	sub    esp,0x40
  41a71b:	sub    ecx,ecx
  41a71d:	mov    DWORD PTR [ebp-0x18],0xba699573
  41a724:	xor    eax,ecx
  41a726:	mov    eax,0x9c0a89d8
  41a72b:	mov    edx,DWORD PTR ds:0x422976
  41a731:	sbb    DWORD PTR ds:0x42291a,edx
  41a737:	mov    DWORD PTR [ebp-0x14],eax
  41a73a:	mov    DWORD PTR [ebp-0x40],0xba699577
  41a741:	sub    edx,0x26e4
  41a747:	mov    DWORD PTR [ebp-0x3c],eax
  41a74a:	sbb    DWORD PTR ds:0x4228ba,edx
  41a750:	mov    DWORD PTR [ebp-0x28],0x644f
  41a757:	cmp    DWORD PTR ds:0x4228ae,0x0
  41a75e:	mov    ecx,DWORD PTR ds:0x4228fa
  41a764:	mov    DWORD PTR ds:0x42288a,edx
  41a76a:	mov    edx,DWORD PTR ds:0x42299e
  41a770:	jmp    0x41a7c9
  41a775:	mov    DWORD PTR ds:0x4229ce,ecx
  41a77b:	jbe    0x41a7ad
  41a781:	push   DWORD PTR [ebp-0x20]
  41a784:	call   DWORD PTR ds:0x42a028
  41a78a:	sub    DWORD PTR ds:0x42290a,0x27cb
  41a794:	movzx  ecx,BYTE PTR ds:0x422966
  41a79b:	and    ecx,DWORD PTR ds:0x4229d2
  41a7a1:	mov    DWORD PTR ds:0x422966,ecx
  41a7a7:	add    DWORD PTR ds:0x422972,edx
  41a7ad:	or     DWORD PTR ds:0x42296a,0x5f39
  41a7b7:	sbb    DWORD PTR ds:0x4229b6,edx
  41a7bd:	sbb    DWORD PTR ds:0x422932,edx
  41a7c3:	sub    edx,DWORD PTR ds:0x4228c2
  41a7c9:	mov    DWORD PTR [ebp-0x24],0x68c8
  41a7d0:	xor    eax,edx
  41a7d2:	mov    DWORD PTR [ebp-0x20],0x436a
  41a7d9:	cmp    DWORD PTR ds:0x4228aa,0x0
  41a7e0:	mov    edx,0x68cf
  41a7e5:	mov    DWORD PTR ds:0x422922,ebx
  41a7eb:	mov    edx,DWORD PTR ds:0x422936
  41a7f1:	jmp    0x41a823
  41a7f6:	mov    eax,ds:0x42292a
  41a7fb:	jne    0x41a818
  41a801:	push   0x4229b6
  41a806:	call   DWORD PTR ds:0x42a054
  41a80c:	adc    DWORD PTR ds:0x4229ba,ecx
  41a812:	sub    edx,DWORD PTR ds:0x4228aa
  41a818:	xor    DWORD PTR ds:0x4229ce,0x5de2
  41a822:	dec    ecx
  41a823:	mov    DWORD PTR [ebp-0x1c],0x58c6
  41a82a:	mov    DWORD PTR [ebp-0x10],0x7919
  41a831:	mov    DWORD PTR [ebp-0xc],0x6efc
  41a838:	mov    eax,DWORD PTR [ebp-0x10]
  41a83b:	sub    DWORD PTR ds:0x4228da,0x3418
  41a845:	mov    ecx,DWORD PTR [ebp-0xc]
  41a848:	jmp    0x41ac91
  41a84d:	mov    ?,WORD PTR [edx-0x20]
  41a850:	dec    ebx
  41a851:	fdiv   DWORD PTR [ecx]
  41a853:	adc    al,0x32
  41a855:	std    
  41a856:	cs aam 0xa8
  41a859:	adc    BYTE PTR [edi],ah
  41a85b:	bound  esi,QWORD PTR [edx+0x1c]
  41a85e:	das    
  41a85f:	or     al,0x16
  41a861:	(bad)  
  41a862:	push   cs
  41a863:	push   ss
  41a864:	push   ss
  41a865:	jmp    0x41a87a
  41a867:	cwde   
  41a868:	out    0x4,al
  41a86a:	push   edi
  41a86b:	and    eax,0x8d2d3505
  41a870:	dec    ecx
  41a871:	push   cs
  41a872:	jmp    0xed4:0x54791be0
  41a879:	lods   eax,DWORD PTR ds:[esi]
  41a87a:	lahf   
  41a87b:	xor    eax,0x876da9dd
  41a880:	mov    ecx,0x7bc78760
  41a885:	cmp    cl,BYTE PTR [edx-0x48541408]
  41a88b:	mov    eax,0xc2574d22
  41a890:	inc    esi
  41a891:	cmp    eax,0xbb87ce13
  41a896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a897:	adc    bl,dl
  41a899:	push   edx
  41a89a:	lea    ebp,[edi-0x61]
  41a89d:	aad    0x5d
  41a89f:	pop    es
  41a8a0:	add    edx,DWORD PTR [eiz*1-0x562b9271]
  41a8a7:	imul   edi,DWORD PTR [ebp+esi*4+0x1c9d0c6],0x19
  41a8af:	pusha  
  41a8b0:	lock popa 
  41a8b2:	or     ah,bl
  41a8b4:	scas   eax,DWORD PTR es:[edi]
  41a8b5:	jae    0x41a8db
  41a8b7:	or     ch,BYTE PTR [eax-0x5f1f5f2e]
  41a8bd:	mov    edx,0x6404ffe
  41a8c2:	mov    ebp,0xf8dc3336
  41a8c7:	jle    0x41a87c
  41a8c9:	lock stos DWORD PTR es:[edi],eax
  41a8cb:	mov    al,ds:0xe83c6c7f
  41a8d0:	sbb    si,WORD PTR [edi-0x12]
  41a8d4:	mov    esi,0xe97efa9d
  41a8d9:	fsubr  st,st(7)
  41a8db:	lea    edx,[eax+0x1f]
  41a8de:	sub    DWORD PTR [esi-0x7d9fab4a],0xffffffd8
  41a8e5:	aas    
  41a8e6:	dec    esi
  41a8e7:	mov    edi,0x5a66b517
  41a8ec:	imul   edx,DWORD PTR [edi-0x30],0x66
  41a8f0:	icebp  
  41a8f1:	mov    ch,BYTE PTR [esi-0x4a]
  41a8f4:	xor    dh,BYTE PTR [ebp-0x3e0a5e5d]
  41a8fa:	adc    al,0x30
  41a8fc:	into   
  41a8fd:	add    DWORD PTR [ecx],ebx
  41a8ff:	mov    esp,0x7d6a33d4
  41a904:	in     eax,0xb2
  41a906:	pop    edx
  41a907:	js     0x41a8e0
  41a909:	xchg   esi,eax
  41a90a:	push   cs
  41a90b:	aam    0xc0
  41a90d:	mov    ch,0xfd
  41a90f:	clc    
  41a910:	fisub  DWORD PTR [ecx+edi*1-0x741679fb]
  41a917:	mov    edi,0x47409d6a
  41a91c:	jle    0x3b3af4c8
  41a922:	rol    DWORD PTR [edi+edx*1],cl
  41a925:	add    al,0x30
  41a927:	test   eax,0x22d30845
  41a92c:	cmc    
  41a92d:	aas    
  41a92e:	push   0xffffffff
  41a930:	add    BYTE PTR [ebx+esi*8],bl
  41a933:	xchg   esp,eax
  41a935:	(bad)  
  41a936:	mov    esp,0x8b47ca6e
  41a93b:	vmaxpd xmm2,xmm0,XMMWORD PTR [ebx+eax*2+0x265d406e]
  41a944:	cld    
  41a945:	push   esi
  41a946:	dec    esi
  41a947:	leave  
  41a948:	scas   al,BYTE PTR es:[edi]
  41a949:	or     BYTE PTR [esi-0x7f],ah
  41a94c:	inc    eax
  41a94d:	sub    dh,cl
  41a94f:	and    eax,0xca1caab8
  41a954:	mov    edx,0xb028c110
  41a959:	mov    BYTE PTR [ebx],dl
  41a95b:	std    
  41a95c:	addr16 inc eax
  41a95e:	jno    0x41a8e0
  41a960:	outs   dx,DWORD PTR ds:[esi]
  41a961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a962:	fisttp DWORD PTR [eax]
  41a964:	inc    esi
  41a965:	push   esi
  41a966:	mov    WORD PTR [ebx+0x765d969a],cs
  41a96c:	push   esi
  41a96d:	call   0x74f1:0xf940a230
  41a974:	and    ebp,ecx
  41a976:	jl     0x41a9ad
  41a978:	sub    edx,edx
  41a97a:	dec    esp
  41a97b:	je     0x41a929
  41a97d:	enter  0x537,0x45
  41a981:	jmp    0xa299:0x4ae2105b
  41a988:	mov    ds:0x157bdae5,al
  41a98d:	hlt    
  41a98e:	pushf  
  41a98f:	jmp    FWORD PTR [ebx]
  41a991:	in     al,0x8d
  41a993:	sahf   
  41a994:	test   DWORD PTR ds:0x94641a3d,eax
  41a99a:	push   eax
  41a99b:	int    0x80
  41a99d:	outs   dx,BYTE PTR ds:[esi]
  41a99e:	dec    esp
  41a99f:	test   eax,0xf54b9a2d
  41a9a4:	inc    si
  41a9a6:	mov    ch,0xff
  41a9a8:	aas    
  41a9a9:	(bad)  
  41a9aa:	pop    edi
  41a9ab:	adc    DWORD PTR [edx],esi
  41a9ad:	into   
  41a9ae:	rol    BYTE PTR [eax],0x6a
  41a9b1:	fdiv   QWORD PTR [edx-0x4b]
  41a9b4:	fwait
  41a9b5:	inc    esp
  41a9b6:	sti    
  41a9b7:	push   esp
  41a9b8:	inc    esp
  41a9b9:	push   esp
  41a9ba:	mov    dl,0xd9
  41a9bc:	das    
  41a9bd:	pop    es
  41a9be:	xor    esp,edx
  41a9c0:	sahf   
  41a9c1:	outs   dx,BYTE PTR ds:[esi]
  41a9c2:	mov    bl,0xcb
  41a9c4:	fsub   QWORD PTR [ecx+0xd]
  41a9c7:	inc    edx
  41a9c8:	std    
  41a9c9:	cmc    
  41a9ca:	pusha  
  41a9cb:	mov    dl,0xb9
  41a9cd:	mov    dh,0xb
  41a9cf:	(bad)  
  41a9d0:	cli    
  41a9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d2:	aam    0x17
  41a9d4:	mov    ebx,0x4f098b4d
  41a9d9:	out    dx,al
  41a9da:	rcr    ebx,cl
  41a9dc:	div    DWORD PTR [ecx+0x6adbc1a3]
  41a9e2:	stos   DWORD PTR es:[edi],eax
  41a9e3:	cld    
  41a9e4:	rcl    BYTE PTR [edx+eax*4],1
  41a9e7:	int3   
  41a9e8:	sub    al,0xb
  41a9ea:	aam    0x2d
  41a9ec:	mov    al,0xcb
  41a9ee:	and    dh,0x1d
  41a9f1:	push   ss
  41a9f2:	or     edx,edx
  41a9f4:	add    al,0x6b
  41a9f6:	mov    eax,0x6d4c1d73
  41a9fb:	outs   dx,BYTE PTR ds:[esi]
  41a9fc:	add    DWORD PTR [ebx+0x4a8ef95a],0xffffffa0
  41aa03:	mov    eax,ds:0xaa1ab667
  41aa08:	retf   
  41aa09:	push   ecx
  41aa0a:	fcmovbe st,st(2)
  41aa0c:	jb     0x41aa03
  41aa0e:	repz sub BYTE PTR [edi],0x8a
  41aa12:	mov    eax,0xf6148769
  41aa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa18:	inc    edi
  41aa19:	sbb    al,0x48
  41aa1b:	fmul   DWORD PTR [ebp+0x1177104c]
  41aa21:	out    dx,al
  41aa22:	popa   
  41aa23:	mov    ebx,0x7d6b9275
  41aa28:	loope  0x41a9bd
  41aa2a:	in     al,dx
  41aa2b:	jne    0x41a9d6
  41aa2d:	inc    esp
  41aa2e:	cs lahf 
  41aa30:	ficomp WORD PTR [edi]
  41aa32:	pop    ecx
  41aa33:	mov    gs,WORD PTR [edx]
  41aa35:	imul   esp,DWORD PTR [edx+0x1c6cac71],0xffffffa2
  41aa3c:	stos   DWORD PTR es:[edi],eax
  41aa3d:	scas   al,BYTE PTR es:[edi]
  41aa3e:	aaa    
  41aa3f:	inc    esi
  41aa40:	sub    dh,BYTE PTR gs:[eax-0x3b7aad66]
  41aa47:	xor    dh,BYTE PTR [ecx-0x41138f33]
  41aa4d:	inc    esi
  41aa4e:	sahf   
  41aa4f:	out    dx,eax
  41aa50:	dec    edx
  41aa51:	cli    
  41aa52:	jb     0x41aa6b
  41aa54:	scas   al,BYTE PTR es:[edi]
  41aa55:	pusha  
  41aa56:	cld    
  41aa57:	aad    0xf5
  41aa59:	test   eax,0x5192a6e3
  41aa5e:	push   es
  41aa5f:	xor    eax,esp
  41aa61:	mov    eax,0xb2f6ada6
  41aa66:	js     0x41a9f1
  41aa68:	sub    DWORD PTR [edi],ecx
  41aa6a:	add    al,0xff
  41aa6c:	inc    ecx
  41aa6d:	call   0x2d72cda5
  41aa72:	mov    ah,0xd8
  41aa74:	xor    eax,0x2f157fee
  41aa79:	sbb    esp,DWORD PTR [ecx+0x1bf8b590]
  41aa7f:	push   eax
  41aa80:	test   al,0xec
  41aa82:	jg     0x41aaaf
  41aa84:	imul   esi,DWORD PTR [eax],0x35
  41aa87:	pop    ebx
  41aa88:	mov    al,ds:0x9081d672
  41aa8d:	mov    ebx,0x3778ebed
  41aa92:	mov    esi,0xa5be42d5
  41aa97:	iret   
  41aa98:	test   eax,0xee7a3baa
  41aa9d:	mov    dl,0xb0
  41aa9f:	pop    esi
  41aaa0:	xchg   dl,cl
  41aaa2:	int    0x50
  41aaa4:	xchg   ebx,eax
  41aaa5:	sbb    BYTE PTR [edi],cl
  41aaa7:	push   ecx
  41aaa8:	bound  cx,DWORD PTR [edi]
  41aaab:	rcr    BYTE PTR [edx+0x732f0458],0x72
  41aab2:	push   ds
  41aab3:	int3   
  41aab4:	add    ecx,0x1214812
  41aaba:	xor    DWORD PTR [edx+ecx*8+0x5afca1cb],edi
  41aac1:	leave  
  41aac2:	lods   al,BYTE PTR ds:[esi]
  41aac3:	stc    
  41aac4:	in     eax,dx
  41aac5:	mov    al,ds:0xe35e0751
  41aaca:	aas    
  41aacb:	jnp    0x41ab34
  41aacd:	imul   ebp,DWORD PTR [edx-0x4f68ad22],0x64
  41aad4:	call   0x4a34:0xec39caba
  41aadb:	jp     0x41aad7
  41aadd:	dec    edx
  41aade:	popa   
  41aadf:	jmp    0xd7e1:0xa505c83a
  41aae6:	es add cl,dh
  41aae9:	gs push es
  41aaeb:	fdivp  st(7),st
  41aaed:	push   eax
  41aaee:	retf   
  41aaef:	adc    al,0xab
  41aaf1:	pop    edi
  41aaf2:	mov    bh,0x80
  41aaf4:	or     dl,BYTE PTR [esi+0x561c0c89]
  41aafa:	mov    bl,0xe6
  41aafc:	sbb    al,0x86
  41aafe:	loopne 0x41aae8
  41ab00:	and    eax,0x3c6e391a
  41ab05:	push   ecx
  41ab06:	mov    edi,0x730eb16f
  41ab0b:	mov    ah,0xa5
  41ab0d:	inc    edx
  41ab0e:	xchg   ecx,eax
  41ab0f:	xor    dl,BYTE PTR [edi+0x480ea11d]
  41ab15:	sub    al,0x98
  41ab17:	jno    0x41ab5d
  41ab19:	nop
  41ab1a:	aam    0x69
  41ab1c:	fisttp WORD PTR [ebp+0x7f]
  41ab1f:	scas   al,BYTE PTR es:[edi]
  41ab20:	xlat   BYTE PTR ds:[ebx]
  41ab21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab22:	mov    edi,0x8bee80e1
  41ab27:	inc    eax
  41ab28:	jp     0x41aad7
  41ab2a:	xor    bh,BYTE PTR [ebx+0x1f228769]
  41ab30:	mov    ebp,ecx
  41ab32:	rcr    DWORD PTR [eax+0x777a7eda],0x65
  41ab39:	in     eax,dx
  41ab3a:	leave  
  41ab3b:	mov    ds:0xcc64a61a,eax
  41ab40:	int3   
  41ab41:	pop    ebp
  41ab42:	pop    ebp
  41ab43:	mov    cs,WORD PTR [ecx+0x736d9c4f]
  41ab49:	in     eax,0x12
  41ab4b:	cld    
  41ab4c:	cmp    eax,0xe5567931
  41ab51:	out    0x5d,eax
  41ab53:	dec    esi
  41ab54:	in     eax,dx
  41ab55:	pop    ds
  41ab56:	je     0x41ab9b
  41ab58:	jbe    0x41ab44
  41ab5a:	xor    BYTE PTR [ecx+0x71b70130],ah
  41ab60:	cmp    eax,0x9195802b
  41ab65:	cwde   
  41ab66:	cld    
  41ab67:	shl    BYTE PTR [edx],1
  41ab69:	ror    DWORD PTR [edi+ecx*2],0x13
  41ab6d:	std    
  41ab6e:	outs   dx,DWORD PTR ds:[esi]
  41ab6f:	inc    edx
  41ab70:	mov    ah,0x5a
  41ab72:	neg    DWORD PTR [edi+ecx*2+0x75337390]
  41ab79:	jns    0x41ab6f
  41ab7b:	pop    ss
  41ab7c:	sub    esi,DWORD PTR [eax-0x15]
  41ab7f:	clc    
  41ab80:	pop    esi
  41ab81:	cwde   
  41ab82:	add    al,0x9d
  41ab84:	arpl   si,si
  41ab86:	jmp    0x41abaf
  41ab88:	sub    edi,DWORD PTR [ecx-0x57]
  41ab8b:	push   ss
  41ab8c:	data16 ffree st(3)
  41ab8f:	mov    DWORD PTR [eax-0x3c],ecx
  41ab92:	and    dh,dh
  41ab94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab95:	imul   ecx,DWORD PTR [eax-0x3bc06a6e],0x15
  41ab9c:	cwde   
  41ab9d:	call   0x28d5:0x6d5d97b8
  41aba4:	(bad)  
  41aba5:	hlt    
  41aba6:	mov    edi,0x3b05f957
  41abab:	cmp    BYTE PTR [ebx+0x34],dl
  41abae:	pushf  
  41abaf:	ror    BYTE PTR [edx+0xff4804b],cl
  41abb5:	and    BYTE PTR [eax*1-0x774bbb4],ah
  41abbc:	fs jp  0x41abae
  41abbf:	popa   
  41abc0:	je     0x41ac19
  41abc2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41abc4:	popf   
  41abc5:	mov    ch,0x74
  41abc7:	int    0xe6
  41abc9:	js     0x41ab9b
  41abcb:	adc    BYTE PTR [ecx],ch
  41abcd:	outs   dx,BYTE PTR ds:[esi]
  41abce:	adc    dl,BYTE PTR [esp+eax*4+0x21]
  41abd2:	shr    BYTE PTR [ecx+ecx*2],0xb5
  41abd6:	repz popf 
  41abd8:	pusha  
  41abd9:	pop    ds
  41abda:	je     0x41ab94
  41abdc:	push   eax
  41abdd:	leave  
  41abde:	arpl   cx,cx
  41abe0:	imul   ebp,DWORD PTR [edx],0xffffffce
  41abe3:	pop    esp
  41abe4:	sbb    eax,0xdd401ae9
  41abe9:	sbb    al,0x15
  41abeb:	adc    al,BYTE PTR [ebp-0x2a]
  41abee:	aam    0x60
  41abf0:	xchg   ebp,eax
  41abf1:	sbb    BYTE PTR [edx+ecx*1-0x6f],al
  41abf5:	push   ebp
  41abf6:	pop    es
  41abf7:	test   DWORD PTR [eax-0x37e23d48],esi
  41abfd:	push   ds
  41abfe:	dec    edi
  41abff:	push   edi
  41ac00:	adc    BYTE PTR [ebx+0x50],ch
  41ac03:	cmp    ebp,DWORD PTR [edi+0x564f163]
  41ac09:	adc    bl,bh
  41ac0b:	or     edi,esp
  41ac0d:	daa    
  41ac0e:	retf   0x61fd
  41ac11:	fwait
  41ac12:	xlat   BYTE PTR ds:[ebx]
  41ac13:	es leave 
  41ac15:	adc    eax,0x2b6af511
  41ac1a:	lods   al,BYTE PTR ds:[esi]
  41ac1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac1c:	push   ebp
  41ac1d:	call   0x81a06251
  41ac22:	fcom   QWORD PTR [di-0x6b3e]
  41ac27:	(bad)  
  41ac28:	iret   
  41ac29:	into   
  41ac2a:	mov    ds:0x1e63bf3e,al
  41ac2f:	or     edx,ecx
  41ac31:	push   esi
  41ac32:	retf   0xfc7c
  41ac35:	ficomp WORD PTR [esi+0x7d]
  41ac38:	ret    
  41ac39:	test   ebp,esp
  41ac3b:	jl     0x41ac93
  41ac3d:	cmp    al,0xdd
  41ac3f:	xor    eax,DWORD PTR [edx]
  41ac41:	and    eax,0x70c4e015
  41ac46:	xor    ebx,DWORD PTR cs:[esi+0x2e3a1038]
  41ac4d:	sahf   
  41ac4e:	push   ds
  41ac4f:	add    BYTE PTR [ebx+0x1f],ch
  41ac52:	inc    eax
  41ac53:	data16 daa 
  41ac55:	outs   dx,BYTE PTR ds:[esi]
  41ac56:	in     eax,dx
  41ac57:	loopne 0x41accc
  41ac59:	mov    es,WORD PTR [esp+ebp*8]
  41ac5c:	xor    eax,0xf8db634e
  41ac61:	cmp    BYTE PTR [esi],dl
  41ac63:	xchg   ecx,eax
  41ac64:	inc    ebp
  41ac65:	gs fsubrp st(5),st
  41ac68:	sti    
  41ac69:	ret    0x26a0
  41ac6c:	mov    dl,0x56
  41ac6e:	mov    ecx,0x706bbe5c
  41ac73:	xchg   edi,eax
  41ac74:	(bad)  
  41ac75:	(bad)  
  41ac76:	cli    
  41ac77:	or     DWORD PTR [esi],esp
  41ac79:	and    DWORD PTR [ebx-0x2b],esi
  41ac7c:	jle    0x41ac9b
  41ac7e:	xor    edi,eax
  41ac80:	ret    
  41ac81:	pop    ebx
  41ac82:	pop    ebp
  41ac83:	xchg   esi,eax
  41ac84:	sbb    ebx,DWORD PTR [edi-0x15]
  41ac87:	shr    cl,0x4c
  41ac8a:	jne    0x41ac6b
  41ac8c:	rcr    DWORD PTR [eiz*8-0x4550b4],1
  41ac93:	and    DWORD PTR [eax],eax
  41ac95:	add    BYTE PTR [ecx+0x42294205],al
  41ac9b:	add    BYTE PTR [ebx+0x2b000042],dh
  41aca1:	shl    BYTE PTR [ecx+0x4228ea],1
  41aca7:	push   esi
  41aca8:	mov    eax,0xb49
  41acad:	sbb    eax,ecx
  41acaf:	cmp    DWORD PTR ds:0x422916,0x0
  41acb6:	mov    DWORD PTR ds:0x4229d2,ebx
  41acbc:	mov    DWORD PTR ds:0x42293a,ecx
  41acc2:	mov    DWORD PTR ds:0x422942,ecx
  41acc8:	jmp    0x41ad23
  41accd:	not    DWORD PTR ds:0x4228ce
  41acd3:	jge    0x41acf8
  41acd9:	push   0x7637
  41acde:	call   DWORD PTR ds:0x42a02c
  41ace4:	adc    ecx,DWORD PTR ds:0x42295a
  41acea:	xor    esi,esi
  41acec:	xor    esi,DWORD PTR ds:0x4228ea
  41acf2:	and    DWORD PTR ds:0x422952,esi
  41acf8:	sbb    DWORD PTR ds:0x422986,ebx
  41acfe:	mov    esi,DWORD PTR ds:0x422a9a
  41ad04:	mov    ecx,DWORD PTR ds:0x422afa
  41ad0a:	sub    ecx,esi
  41ad0c:	add    esi,DWORD PTR [esi+ecx*1]
  41ad0f:	xor    ecx,ecx
  41ad11:	xor    ecx,DWORD PTR ds:0x4228ae
  41ad17:	or     DWORD PTR ds:0x422896,ecx
  41ad1d:	sbb    ecx,DWORD PTR ds:0x422976
  41ad23:	mov    ecx,DWORD PTR [ebp-0x20]
  41ad26:	mov    esi,DWORD PTR [ebp-0x1c]
  41ad29:	jmp    0x41b172
  41ad2e:	test   BYTE PTR [eax+ecx*2+0x7c],ah
  41ad32:	sub    BYTE PTR [eax],ah
  41ad34:	cmp    BYTE PTR [ebp+eax*1-0x4e],dl
  41ad38:	cmc    
  41ad39:	push   0xa8d86f88
  41ad3e:	int    0x1d
  41ad40:	or     al,0x16
  41ad42:	(bad)  
  41ad43:	push   cs
  41ad44:	push   ss
  41ad45:	push   ss
  41ad46:	adc    DWORD PTR [eax+eiz*8+0x15],esi
  41ad4a:	push   ecx
  41ad4b:	jecxz  0x41adb1
  41ad4d:	ror    DWORD PTR ds:0x90b7384a,0x6a
  41ad54:	cmp    al,0x63
  41ad56:	aad    0x56
  41ad58:	js     0x41ad6f
  41ad5a:	push   cs
  41ad5b:	push   esp
  41ad5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad5d:	test   eax,0xa3ad852a
  41ad62:	mov    DWORD PTR [edx+0x22],ebp
  41ad65:	enter  0x48bb,0xba
  41ad69:	dec    esi
  41ad6a:	mov    BYTE PTR [eax-0x49],al
  41ad6d:	inc    edx
  41ad6e:	or     al,0x71
  41ad70:	add    ah,BYTE PTR [edi-0x241f735]
  41ad76:	xchg   ebx,eax
  41ad77:	shl    dh,1
  41ad79:	xchg   esi,eax
  41ad7a:	hlt    
  41ad7b:	ficom  WORD PTR [esi]
  41ad7d:	xor    eax,0x576df5e0
  41ad82:	jmp    0x41ae03
  41ad84:	sub    eax,esi
  41ad86:	inc    DWORD PTR [edx]
  41ad88:	sbb    al,0xab
  41ad8a:	or     BYTE PTR [ecx+0x33],dh
  41ad8d:	dec    esp
  41ad8e:	shr    bh,1
  41ad90:	inc    esi
  41ad91:	fstp   TBYTE PTR [esi]
  41ad93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad94:	pop    edi
  41ad95:	adc    bh,bl
  41ad97:	adc    BYTE PTR [edi],al
  41ad99:	call   0x312c:0xc3ff37d0
  41ada0:	jge    0x41ae17
  41ada2:	sahf   
  41ada3:	and    eax,edx
  41ada5:	inc    eax
  41ada6:	cmp    al,0xba
  41ada8:	pop    ebx
  41ada9:	jle    0x41ae26
  41adab:	inc    bh
  41adad:	or     ebx,ebx
  41adaf:	adc    eax,0x6d551f83
  41adb4:	pushf  
  41adb5:	mov    dl,0x95
  41adb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adb8:	stos   BYTE PTR es:[edi],al
  41adb9:	sbb    esi,DWORD PTR [ecx+0x2a]
  41adbc:	jg     0x41ad64
  41adbe:	sub    ecx,DWORD PTR [esi-0x46b46ae3]
  41adc4:	jge    0x41ae37
  41adc6:	test   BYTE PTR [esi-0x73],bh
  41adc9:	add    eax,0xbdd1052d
  41adce:	loop   0x41ae16
  41add0:	mov    cl,BYTE PTR [edi]
  41add2:	(bad)  
  41add3:	pop    eax
  41add4:	int    0xcc
  41add6:	or     al,0x58
  41add8:	inc    esi
  41add9:	add    BYTE PTR [ebx],ch
  41addb:	jae    0x41ae39
  41addd:	ins    BYTE PTR es:[edi],dx
  41adde:	arpl   di,bx
  41ade0:	ror    DWORD PTR [esi+edi*2-0x47f63f3],1
  41ade7:	fs push ecx
  41ade9:	cmp    al,0x62
  41adeb:	cmp    al,0x7e
  41aded:	mov    esp,0x7402db54
  41adf2:	push   cs
  41adf3:	popa   
  41adf4:	mov    bl,0x2c
  41adf6:	push   ecx
  41adf7:	xchg   ebp,eax
  41adf8:	fsubr  QWORD PTR [ecx+eax*2+0x12]
  41adfc:	adc    al,0x53
  41adfe:	pop    esi
  41adff:	jo     0x41ae1f
  41ae01:	sub    DWORD PTR [edi-0x49093ea6],ebp
  41ae07:	enter  0x4fce,0x66
  41ae0b:	lods   al,BYTE PTR ds:[esi]
  41ae0c:	cmp    al,0x2c
  41ae0e:	pop    esp
  41ae0f:	data16 jle 0x41ae3c
  41ae12:	mov    eax,ds:0x286e9103
  41ae17:	xchg   edx,eax
  41ae18:	or     DWORD PTR [ecx-0x613d47cd],edx
  41ae1e:	push   edi
  41ae1f:	cmp    eax,0x83e8a4be
  41ae24:	loope  0x41adb3
  41ae26:	daa    
  41ae27:	xor    BYTE PTR ds:0x93097e02,dl
  41ae2d:	jb     0x41ae5e
  41ae2f:	dec    eax
  41ae30:	fld    QWORD PTR [edi-0x63664b2]
  41ae36:	fchs   
  41ae38:	repz icebp 
  41ae3a:	pop    ecx
  41ae3b:	iret   
  41ae3c:	ret    0xae8b
  41ae3f:	cmc    
  41ae40:	out    dx,eax
  41ae41:	jge    0x41adec
  41ae43:	ffree  st(6)
  41ae45:	pusha  
  41ae46:	out    0x78,al
  41ae48:	dec    edx
  41ae49:	retf   
  41ae4a:	or     al,0x1e
  41ae4c:	jle    0x41aec3
  41ae4e:	bound  esp,QWORD PTR [edx+0x41]
  41ae51:	outs   dx,DWORD PTR ds:[esi]
  41ae52:	sub    eax,0x6a5ebf57
  41ae57:	jge    0x41aed2
  41ae59:	sub    bh,BYTE PTR [eax+0xb]
  41ae5c:	mov    fs,WORD PTR [ecx-0x22]
  41ae5f:	adc    al,0xe5
  41ae61:	jns    0x41adfc
  41ae63:	dec    edx
  41ae64:	add    BYTE PTR [ecx+0x8e44333],bl
  41ae6a:	adc    al,0x80
  41ae6c:	cmp    ch,ah
  41ae6e:	sub    al,0x8
  41ae70:	and    DWORD PTR [ebx-0x919d6fa],edi
  41ae76:	cmp    eax,0x8c5f27c7
  41ae7b:	inc    ebp
  41ae7c:	mov    eax,0x35f47d1d
  41ae81:	mov    edi,0x2874ce35
  41ae86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae87:	lahf   
  41ae88:	xchg   DWORD PTR [edi-0x1d],ebp
  41ae8b:	mov    esp,0x7189b3db
  41ae90:	mov    eax,ds:0x965a8f7f
  41ae95:	shl    BYTE PTR [ebp+0x5],cl
  41ae98:	cdq    
  41ae99:	popa   
  41ae9a:	cmp    al,0xec
  41ae9c:	pop    edx
  41ae9d:	pop    ss
  41ae9e:	out    dx,eax
  41ae9f:	add    BYTE PTR [eax+0x291ff589],0xef
  41aea6:	dec    esi
  41aea7:	popf   
  41aea8:	add    ch,BYTE PTR [eax]
  41aeaa:	xchg   edi,eax
  41aeab:	call   edi
  41aead:	jg     0x41ae6e
  41aeaf:	out    0x58,eax
  41aeb1:	addr16 loopne 0x41ae9f
  41aeb4:	jl     0x41ae75
  41aeb6:	std    
  41aeb7:	jmp    0xeabe54b2
  41aebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aebe:	in     al,0x75
  41aec0:	xchg   esp,eax
  41aec1:	lods   al,BYTE PTR ds:[esi]
  41aec2:	retf   0xa8c5
  41aec5:	(bad)  
  41aec6:	loope  0x41ae4c
  41aec8:	adc    DWORD PTR [edx],esp
  41aeca:	jnp    0x41ae8a
  41aecc:	fsub   QWORD PTR [ebp+0xfcd0009]
  41aed2:	ss fs (bad) 
  41aed5:	fisttp WORD PTR [edx-0x35de6985]
  41aedb:	lods   eax,DWORD PTR ds:[esi]
  41aedc:	je     0x41af05
  41aede:	xchg   ebx,eax
  41aedf:	and    DWORD PTR fs:[edi-0x2f8366f1],edx
  41aee6:	lods   al,BYTE PTR ds:[esi]
  41aee7:	daa    
  41aee8:	ins    BYTE PTR es:[edi],dx
  41aee9:	xchg   BYTE PTR [edx],dh
  41aeeb:	and    DWORD PTR [esi-0x40],ecx
  41aeee:	pop    ebx
  41aeef:	(bad)  
  41aef0:	rcr    BYTE PTR [ebx+0x51],1
  41aef3:	es cs inc ebp
  41aef6:	shl    BYTE PTR [edx+0x4e],0x30
  41aefa:	push   es
  41aefb:	es int3 
  41aefd:	adc    esi,esi
  41aeff:	adc    DWORD PTR [edi-0x37],esi
  41af02:	shr    DWORD PTR ds:[edx-0x1c7cfd2],0x3b
  41af0a:	popa   
  41af0b:	shr    eax,1
  41af0d:	sbb    edx,DWORD PTR [ebx+0x7088e39a]
  41af13:	xchg   edi,eax
  41af14:	je     0x41aefd
  41af16:	loop   0x41aea0
  41af18:	into   
  41af19:	das    
  41af1a:	(bad)  
  41af1b:	jge    0x41aebc
  41af1d:	aaa    
  41af1e:	inc    edx
  41af1f:	nop
  41af20:	sub    BYTE PTR [eax-0x47],dl
  41af23:	int    0x6e
  41af25:	inc    BYTE PTR [eax]
  41af27:	cmp    eax,DWORD PTR [ecx-0x532a5c61]
  41af2d:	jle    0x41aeb2
  41af2f:	sub    al,0x5f
  41af31:	test   BYTE PTR [edi-0x4d],cl
  41af34:	call   0xe587f053
  41af39:	jb     0x41aec4
  41af3b:	popf   
  41af3c:	adc    ecx,ebp
  41af3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af3f:	cwde   
  41af40:	adc    bl,BYTE PTR [ecx]
  41af42:	jae    0x41af23
  41af44:	mov    DWORD PTR [esi-0x5d8fc730],eax
  41af4a:	and    bh,al
  41af4c:	inc    esi
  41af4d:	push   ecx
  41af4e:	popf   
  41af4f:	loop   0x41af7b
  41af51:	inc    eax
  41af52:	retf   0x21a0
  41af55:	out    0xe4,al
  41af57:	sbb    eax,0xae0228ed
  41af5c:	sub    ah,al
  41af5e:	shl    BYTE PTR [esi+0xa],cl
  41af61:	test   eax,0x1691da1d
  41af66:	sbb    esi,DWORD PTR [esi+0x5b]
  41af69:	cs ret 
  41af6b:	ins    DWORD PTR es:[edi],dx
  41af6c:	lea    esi,[edx+0x12]
  41af6f:	and    DWORD PTR [ecx+0x402fd04a],0x85323bc
  41af79:	call   0xdedc6263
  41af7e:	fcom   DWORD PTR [ebx+ebp*1+0x42d8bdf8]
  41af85:	or     al,0xed
  41af87:	mov    esi,0x11b7cf2f
  41af8c:	call   FWORD PTR [edx]
  41af8e:	adc    eax,0xd7de805f
  41af93:	inc    edi
  41af94:	push   edx
  41af95:	mov    esi,0x8a6c2a15
  41af9a:	jmp    0x41af68
  41af9c:	push   ebp
  41af9d:	in     al,0x9a
  41af9f:	mov    esp,0xc79b052b
  41afa4:	adc    al,0x33
  41afa6:	sar    DWORD PTR [edi+eiz*8+0x7],cl
  41afaa:	and    esp,esp
  41afac:	cmp    bl,bh
  41afae:	mov    ds:0xf094f075,eax
  41afb3:	jo     0x41afc2
  41afb5:	xchg   ebx,eax
  41afb6:	sub    al,0x6f
  41afb8:	arpl   WORD PTR [ebp-0x68489389],dx
  41afbe:	xchg   esp,eax
  41afbf:	or     DWORD PTR [ebp-0x61],0x9
  41afc3:	mov    ds:0xce78066e,eax
  41afc8:	cdq    
  41afc9:	test   al,0x7c
  41afcb:	xlat   BYTE PTR ds:[ebx]
  41afcc:	jmp    0x2e4b50fc
  41afd1:	in     eax,dx
  41afd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd3:	idiv   BYTE PTR [eax+edx*4]
  41afd6:	pop    esi
  41afd7:	(bad)  
  41afd8:	jo     0x41afa8
  41afda:	jbe    0x41afa0
  41afdc:	or     DWORD PTR [edi],edi
  41afde:	dec    ebp
  41afdf:	cmp    ah,BYTE PTR ds:0x60913d07
  41afe5:	push   ss
  41afe6:	dec    edx
  41afe7:	mov    eax,ds:0x6c42c943
  41afec:	aas    
  41afed:	je     0x41af9e
  41afef:	mov    bh,0x38
  41aff1:	aam    0x2c
  41aff3:	jmp    0x41b00a
  41aff5:	xor    dh,BYTE PTR [ebx-0x14]
  41aff8:	pop    ebp
  41affa:	iret   
  41affb:	stos   DWORD PTR es:[edi],eax
  41affc:	mov    WORD PTR [eax+ecx*1-0x7151253d],fs
  41b003:	gs repz sub bh,dh
  41b007:	mov    ss,WORD PTR [eax+edx*2]
  41b00a:	pop    edi
  41b00b:	out    dx,al
  41b00c:	dec    eax
  41b00d:	xor    al,0x49
  41b00f:	and    al,0x37
  41b011:	xlat   BYTE PTR ds:[ebx]
  41b012:	cdq    
  41b013:	cmp    bh,bl
  41b015:	push   0x6f0891bf
  41b01a:	mov    DWORD PTR [esi-0x44730c54],0x2fa69
  41b024:	pop    es
  41b025:	xchg   edi,eax
  41b026:	inc    esi
  41b027:	test   BYTE PTR [ebx+ebx*1-0x756c897e],dl
  41b02e:	and    al,0x95
  41b030:	add    ecx,DWORD PTR [edx]
  41b032:	shl    bh,0xdf
  41b035:	jno    0x41b058
  41b037:	mov    cl,0x2
  41b039:	cmp    ah,ch
  41b03b:	imul   ebp,DWORD PTR [ecx],0xa298ff4c
  41b041:	add    ebx,esp
  41b043:	add    ebx,eax
  41b045:	xchg   edx,eax
  41b046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b047:	mov    bh,0xda
  41b049:	push   ebp
  41b04a:	fstp   DWORD PTR [ebx+0x3e]
  41b04d:	push   edi
  41b04e:	fdivr  QWORD PTR [ecx]
  41b050:	(bad)  
  41b051:	lahf   
  41b052:	xchg   ebx,eax
  41b053:	mov    edi,0x9ffe2b13
  41b058:	test   BYTE PTR ds:0x25b209f0,al
  41b05e:	cmp    DWORD PTR ds:0x240f08f2,ebp
  41b064:	inc    eax
  41b065:	lahf   
  41b066:	cwde   
  41b067:	dec    esi
  41b068:	and    BYTE PTR [eax-0x436899ec],bh
  41b06e:	xchg   ebx,esp
  41b070:	aaa    
  41b071:	sbb    BYTE PTR [ebx-0x24fbf51],dh
  41b077:	mov    al,ds:0x2a4564be
  41b07c:	mov    bh,BYTE PTR [eax]
  41b07e:	fisttp WORD PTR [ecx]
  41b080:	adc    cl,dl
  41b082:	aad    0x7b
  41b084:	(bad)  
  41b085:	sub    bl,dl
  41b087:	cmp    DWORD PTR [ebp-0x78],eax
  41b08a:	retf   
  41b08b:	jp     0x41b0ea
  41b08d:	out    dx,al
  41b08e:	out    0x22,eax
  41b090:	rcr    BYTE PTR [ecx],cl
  41b092:	jbe    0x41b034
  41b094:	(bad)  
  41b095:	adc    bl,BYTE PTR [ecx+0x4]
  41b098:	pop    ss
  41b099:	imul   ecx,ebx,0x1d
  41b09c:	dec    ebx
  41b09d:	je     0x41b0b0
  41b09f:	push   esp
  41b0a0:	sti    
  41b0a1:	int3   
  41b0a2:	jmp    0x41b0df
  41b0a4:	or     ebx,DWORD PTR [esi+0x52]
  41b0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0a8:	in     al,0x62
  41b0aa:	shl    DWORD PTR [eax+0x7cf930d2],cl
  41b0b0:	jl     0x41b0ab
  41b0b2:	cs scas al,BYTE PTR es:[edi]
  41b0b4:	cmp    si,WORD PTR [ecx+0x18]
  41b0b8:	inc    edi
  41b0b9:	daa    
  41b0ba:	jg     0x41b04f
  41b0bc:	mov    al,ds:0x2e6f45a7
  41b0c1:	xchg   esp,eax
  41b0c2:	fistp  DWORD PTR [ebp+0x407a7a2a]
  41b0c8:	and    eax,0x65d75110
  41b0cd:	fndisi(8087 only) 
  41b0cf:	cmp    DWORD PTR [ebp-0x15],eax
  41b0d2:	push   cs
  41b0d3:	cs mov bh,0x36
  41b0d6:	fnstenv [esi+eiz*8+0x12f238bb]
  41b0dd:	cmp    ecx,ebp
  41b0df:	mov    edx,0x1f02dc78
  41b0e4:	xlat   BYTE PTR ds:[ebx]
  41b0e5:	dec    edi
  41b0e6:	repz rcr ebx,cl
  41b0e9:	xchg   esi,eax
  41b0ea:	daa    
  41b0eb:	ret    
  41b0ec:	jae    0x41b148
  41b0ee:	pop    esi
  41b0ef:	mov    DWORD PTR [ebp+0xef31af3],edi
  41b0f5:	ins    DWORD PTR es:[edi],dx
  41b0f6:	add    dh,bl
  41b0f8:	dec    ebp
  41b0f9:	adc    DWORD PTR [ebx],ebp
  41b0fb:	xlat   BYTE PTR ds:[ebx]
  41b0fc:	mov    al,0xf5
  41b0fe:	jmp    0xd7bf843b
  41b103:	das    
  41b104:	add    eax,0x2ccc3562
  41b109:	fs cmp al,0x18
  41b10c:	xchg   ebx,eax
  41b10d:	push   ecx
  41b10e:	xor    ah,BYTE PTR [ebx-0x3a272a9]
  41b114:	test   al,0x92
  41b116:	mov    eax,0x94b738e7
  41b11b:	mov    cl,0x90
  41b11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b11e:	pop    edi
  41b11f:	mov    dh,0xca
  41b121:	lods   al,BYTE PTR ds:[esi]
  41b122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b123:	pop    esp
  41b124:	out    0x48,eax
  41b126:	pusha  
  41b127:	xlat   BYTE PTR ds:[ebx]
  41b128:	rol    DWORD PTR [edi-0x1f],1
  41b12b:	daa    
  41b12c:	mov    WORD PTR [edx+edx*1],cs
  41b12f:	fild   DWORD PTR [ebx+eax*2+0x16]
  41b133:	outs   dx,BYTE PTR ds:[esi]
  41b134:	(bad)  
  41b136:	push   cs
  41b137:	adc    BYTE PTR [esi+0x5e],cl
  41b13a:	pusha  
  41b13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b13c:	dec    edx
  41b13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b13e:	int3   
  41b13f:	pop    eax
  41b140:	fbstp  TBYTE PTR [ebp+0x74]
  41b143:	sub    al,0x56
  41b145:	mov    ebx,0x25fd19a8
  41b14a:	or     DWORD PTR [ecx+0x4b1703e0],ebp
  41b150:	mov    eax,0x6ae0c3a0
  41b155:	mov    eax,?
  41b157:	inc    esp
  41b158:	out    0xce,eax
  41b15a:	adc    DWORD PTR [ebx+ebx*2],eax
  41b15d:	jns    0x41b17d
  41b15f:	jns    0x41b198
  41b161:	jns    0x41b1ca
  41b163:	dec    ebx
  41b164:	and    eax,0x9e465cc0
  41b169:	icebp  
  41b16a:	sub    DWORD PTR [edi-0x51],0xffffffcb
  41b16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b16f:	add    eax,0x51561172
  41b174:	sub    DWORD PTR ds:0x4229c6,0x422892
  41b17e:	push   eax
  41b17f:	xor    DWORD PTR ds:0x4228e6,0x42296a
  41b189:	push   edx
  41b18a:	jmp    0x41b5d3
  41b18f:	xor    DWORD PTR [esi],ecx
  41b191:	inc    esi
  41b192:	or     ebx,DWORD PTR [eax]
  41b194:	xor    ah,BYTE PTR [ecx]
  41b196:	and    al,0xeb
  41b198:	fwait
  41b199:	ds push 0x68e8ccdd
  41b19f:	jge    0x41b1b6
  41b1a1:	or     al,0x16
  41b1a3:	(bad)  
  41b1a4:	push   cs
  41b1a5:	push   ss
  41b1a6:	push   ss
  41b1a7:	sbb    bl,bl
  41b1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1aa:	adc    al,0xe6
  41b1ac:	jo     0x41b1c3
  41b1ae:	fst    DWORD PTR [ebp-0x42]
  41b1b1:	mov    cl,0x15
  41b1b3:	out    dx,al
  41b1b4:	xchg   esi,eax
  41b1b5:	repz dec esp
  41b1b7:	mov    WORD PTR [ebx+esi*8-0x540ea2f9],es
  41b1be:	sub    al,0xe9
  41b1c0:	jmp    esp
  41b1c2:	das    
  41b1c3:	add    BYTE PTR [ebx],0xb1
  41b1c6:	outs   dx,BYTE PTR ds:[esi]
  41b1c7:	jae    0x41b23f
  41b1c9:	push   ebx
  41b1ca:	and    al,0x99
  41b1cc:	inc    ecx
  41b1cd:	xor    ch,ch
  41b1cf:	clc    
  41b1d0:	pop    ecx
  41b1d1:	xchg   edx,eax
  41b1d2:	stc    
  41b1d3:	arpl   WORD PTR [ebx+0x17931cea],dx
  41b1d9:	add    eax,0xe4ca7d7b
  41b1de:	xor    ah,BYTE PTR [esi-0x38e8e2ed]
  41b1e4:	jge    0x41b265
  41b1e6:	mov    ds:0x7563e629,eax
  41b1eb:	mov    al,ah
  41b1ed:	sub    al,0x82
  41b1ef:	xchg   BYTE PTR [esi+0x3dd64ad1],ah
  41b1f5:	inc    edx
  41b1f6:	in     eax,dx
  41b1f7:	add    BYTE PTR [esi-0x2c],al
  41b1fa:	sti    
  41b1fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fc:	mov    dh,0x3a
  41b1fe:	adc    BYTE PTR [ebx+ebp*2+0x38],al
  41b202:	pop    ss
  41b203:	add    al,dh
  41b205:	cli    
  41b206:	jae    0x41b21a
  41b208:	shl    BYTE PTR [eax-0x4f],0xb0
  41b20c:	jno    0x41b1c9
  41b20e:	adc    esi,DWORD PTR [ebx]
  41b210:	add    al,BYTE PTR ds:0xb6ba70ac
  41b216:	adc    al,0xb4
  41b218:	shr    BYTE PTR [edx-0x3ea32851],cl
  41b21e:	(bad)  
  41b21f:	jo     0x41b252
  41b221:	sub    al,0x8f
  41b223:	mov    ebx,0x8b056677
  41b228:	retf   
  41b229:	loop   0x41b1fd
  41b22b:	xchg   ebp,eax
  41b22c:	mov    ebp,0xf8d5e328
  41b231:	inc    eax
  41b232:	cmp    eax,0x523a746a
  41b237:	lahf   
  41b238:	jp     0x41b249
  41b23a:	mov    bh,0x12
  41b23c:	fild   QWORD PTR [eax+0x2f]
  41b23f:	cmp    edx,edx
  41b241:	and    DWORD PTR [edx-0x4d],ecx
  41b244:	lahf   
  41b245:	in     eax,0x27
  41b247:	cmp    BYTE PTR [ebp-0x41],0x8d
  41b24b:	xchg   ebx,eax
  41b24c:	clc    
  41b24d:	test   edx,ebx
  41b24f:	mov    ?,WORD PTR [edx]
  41b251:	mov    dl,ah
  41b253:	retf   0x84b5
  41b256:	cdq    
  41b257:	enter  0xdc4a,0x92
  41b25b:	or     ebp,esi
  41b25d:	sbb    ah,dh
  41b25f:	mov    ah,0x7c
  41b261:	fwait
  41b262:	mov    ebp,0x217d5a0a
  41b267:	fstp   DWORD PTR [ebx]
  41b269:	pop    DWORD PTR [ebx]
  41b26b:	leave  
  41b26c:	mov    ch,0x79
  41b26e:	and    edx,esi
  41b270:	add    al,0xbe
  41b272:	jne    0x41b280
  41b274:	(bad)  
  41b275:	add    DWORD PTR [edi],0x1d386945
  41b27b:	or     eax,0x87932eab
  41b280:	push   0x282b6f06
  41b285:	dec    edx
  41b287:	and    DWORD PTR [ecx-0x1],esi
  41b28a:	int3   
  41b28b:	loop   0x41b2ac
  41b28d:	fst    QWORD PTR [ebp-0x2]
  41b290:	add    BYTE PTR [di-0x243a],0xb8
  41b296:	(bad)  
  41b297:	sub    eax,0xd055c41b
  41b29c:	test   al,0x32
  41b29e:	or     DWORD PTR [esi-0x4cf915e6],eax
  41b2a4:	sbb    edi,DWORD PTR [edi]
  41b2a6:	sub    eax,0x2a74e095
  41b2ab:	fsub   QWORD PTR [esi+0x68]
  41b2ae:	push   es
  41b2af:	les    esp,FWORD PTR [edx-0x264c117a]
  41b2b5:	stc    
  41b2b6:	add    DWORD PTR [edx-0x44],ebp
  41b2b9:	xchg   ebp,eax
  41b2ba:	fiadd  DWORD PTR [ecx-0x6e]
  41b2bd:	popf   
  41b2be:	pop    si
  41b2c0:	cld    
  41b2c1:	out    dx,eax
  41b2c2:	adc    BYTE PTR [ecx+0x21],bl
  41b2c5:	push   DWORD PTR [edi+0x3a]
  41b2c8:	ret    
  41b2c9:	inc    esp
  41b2ca:	or     al,0x1
  41b2cc:	dec    esp
  41b2cd:	jne    0x41b255
  41b2cf:	fwait
  41b2d0:	cmp    al,0xb
  41b2d2:	outs   dx,DWORD PTR ds:[si]
  41b2d4:	mov    al,0xf0
  41b2d6:	pop    ebp
  41b2d7:	add    BYTE PTR [edx],dh
  41b2d9:	mov    eax,ds:0x2265745f
  41b2de:	ja     0x41b291
  41b2e0:	adc    dl,BYTE PTR [esi]
  41b2e2:	dec    ebx
  41b2e3:	imul   ebx,DWORD PTR [eiz*8+0x280c58f6],0x71
  41b2eb:	shl    DWORD PTR [ebp+0x18214b34],cl
  41b2f1:	inc    esi
  41b2f2:	adc    esi,DWORD PTR ds:0x62aaf982
  41b2f8:	inc    edi
  41b2f9:	xor    cl,BYTE PTR [esp+eiz*8-0x65746099]
  41b300:	ret    
  41b301:	jmp    0x41b2ee
  41b303:	aaa    
  41b304:	ror    BYTE PTR [ecx+0x68dbe2f0],0xb1
  41b30b:	mov    ecx,0xa16febe3
  41b310:	js     0x41b301
  41b312:	xor    DWORD PTR [eax+0x74a0fc78],edi
  41b318:	sti    
  41b319:	cmc    
  41b31a:	loop   0x41b346
  41b31c:	cmc    
  41b31d:	push   esi
  41b31e:	mul    DWORD PTR [esi+0x15]
  41b321:	mov    esp,0xc0d04b8b
  41b326:	lods   eax,DWORD PTR ds:[esi]
  41b327:	push   esi
  41b328:	xchg   BYTE PTR [esi+edx*2-0x1e],ah
  41b32c:	repz in eax,0x5f
  41b32f:	mov    BYTE PTR [ebp+0x6b1004e8],0xdf
  41b336:	and    esp,DWORD PTR [ebx+0x16]
  41b339:	and    ch,dh
  41b33b:	stc    
  41b33c:	xlat   BYTE PTR ds:[ebx]
  41b33d:	cmp    DWORD PTR [edx-0x6d49f26a],eax
  41b343:	sbb    eax,0x99b127fc
  41b348:	sti    
  41b349:	mov    ah,0x38
  41b34b:	(bad)  
  41b34c:	out    dx,eax
  41b34d:	enter  0x52c8,0x82
  41b351:	icebp  
  41b352:	lods   eax,DWORD PTR ds:[esi]
  41b353:	mov    esi,0x4207fac3
  41b358:	(bad)  
  41b359:	pop    ebx
  41b35a:	cli    
  41b35b:	mov    al,ds:0xe9ee96d5
  41b360:	inc    esp
  41b361:	out    0xac,al
  41b363:	cdq    
  41b364:	pop    edx
  41b365:	fucomip st,st(6)
  41b367:	pop    ebx
  41b368:	fnstcw WORD PTR [edx-0xa]
  41b36b:	mov    ?,WORD PTR [eax-0x1117f9d6]
  41b371:	pushf  
  41b372:	daa    
  41b373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b374:	add    al,0x1f
  41b376:	mov    eax,ds:0x3c743484
  41b37b:	stc    
  41b37c:	out    0xa8,eax
  41b37e:	mov    ebp,0x5770ef34
  41b383:	pop    es
  41b384:	xor    cl,BYTE PTR [edx+eax*8+0x29]
  41b388:	pop    edx
  41b389:	fadd   DWORD PTR [edx]
  41b38b:	xor    ch,bh
  41b38d:	pusha  
  41b38e:	cld    
  41b38f:	out    0x1c,eax
  41b391:	jnp    0x41b390
  41b393:	inc    esi
  41b394:	test   al,0x12
  41b396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b397:	cli    
  41b398:	enter  0xff7e,0x1e
  41b39c:	jmp    0x8f8c:0x24180e7
  41b3a3:	aas    
  41b3a4:	cli    
  41b3a5:	shl    dh,cl
  41b3a7:	imul   ebx,DWORD PTR [eax],0xffffffb2
  41b3aa:	repz call 0x2d38b591
  41b3b0:	push   0xffffff91
  41b3b2:	mov    esi,0x4b156d00
  41b3b7:	imul   edx,DWORD PTR [ebp-0xe5c5599],0x17
  41b3be:	jbe    0x41b37c
  41b3c0:	out    0xd,al
  41b3c2:	(bad)  
  41b3c3:	(bad)  [ecx-0x4e060faa]
  41b3c9:	sub    dh,cl
  41b3cb:	cmp    bl,BYTE PTR [edi-0x25cc518b]
  41b3d1:	retf   0xd9cb
  41b3d4:	test   DWORD PTR [ebx],0xb3fe04
  41b3da:	or     DWORD PTR [ebp+0x7],edx
  41b3dd:	ret    
  41b3de:	enter  0xd6f5,0xe3
  41b3e2:	leave  
  41b3e3:	mov    eax,ds:0xe3c065d4
  41b3e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e9:	mov    eax,0x81574fd9
  41b3ee:	push   ss
  41b3ef:	sti    
  41b3f0:	jecxz  0x41b422
  41b3f2:	cmp    DWORD PTR [ebx],0x21
  41b3f5:	ins    DWORD PTR es:[edi],dx
  41b3f6:	scas   al,BYTE PTR es:[edi]
  41b3f7:	arpl   WORD PTR [esi+0x40686f45],cx
  41b3fd:	inc    edx
  41b3fe:	aam    0x9e
  41b400:	xor    ebp,DWORD PTR [eax+ecx*1+0x79]
  41b404:	mov    dl,0x6
  41b406:	mov    al,ds:0x2f8e21aa
  41b40b:	repnz inc esp
  41b40d:	mov    ebx,DWORD PTR [eax]
  41b40f:	out    dx,eax
  41b410:	sbb    al,0x3e
  41b412:	jle    0x41b48a
  41b414:	out    dx,al
  41b415:	in     eax,0x9d
  41b417:	mov    al,ds:0x358f1737
  41b41c:	ret    
  41b41d:	or     eax,0x4cfff0a2
  41b422:	gs ss inc edi
  41b425:	outs   dx,DWORD PTR ds:[esi]
  41b426:	dec    esp
  41b427:	data16 test BYTE PTR [edx+eax*1+0x6d],ah
  41b42c:	stc    
  41b42d:	sti    
  41b42e:	cmp    DWORD PTR [eax+0x71],esi
  41b431:	in     eax,dx
  41b432:	cmp    DWORD PTR [edx-0x2b],edx
  41b435:	call   0x4dd1dae2
  41b43a:	sub    ebx,DWORD PTR [eax+0x48ae2696]
  41b440:	sub    eax,DWORD PTR [ebp+edi*4+0x1906bf4d]
  41b447:	mov    al,ds:0xe722a3cb
  41b44c:	pop    ecx
  41b44d:	daa    
  41b44e:	outs   dx,BYTE PTR ds:[esi]
  41b44f:	adc    BYTE PTR [ecx-0x74],bh
  41b452:	cmp    al,0x8c
  41b454:	jno    0x41b45b
  41b456:	jmp    0x41b49a
  41b458:	jl     0x41b434
  41b45a:	loope  0x41b466
  41b45c:	nop
  41b45d:	aad    0xc6
  41b45f:	leave  
  41b460:	(bad)  
  41b461:	aam    0x4e
  41b463:	xor    eax,0x220e179f
  41b468:	xchg   al,ah
  41b46a:	test   DWORD PTR [esi],0x796468b7
  41b470:	mov    al,0x49
  41b472:	sar    BYTE PTR [edx+0x5f9636b0],cl
  41b478:	inc    edi
  41b479:	lods   al,BYTE PTR ds:[esi]
  41b47a:	ins    BYTE PTR es:[edi],dx
  41b47b:	sar    BYTE PTR [eax-0x22],0xc9
  41b47f:	loopne 0x41b44b
  41b481:	test   al,0xe6
  41b483:	xchg   DWORD PTR es:[ebp-0x1be8b23c],ebx
  41b48a:	mov    bl,bh
  41b48c:	je     0x41b435
  41b48e:	pop    ss
  41b48f:	adc    dl,dl
  41b491:	shl    dl,1
  41b493:	mov    ah,0x84
  41b495:	(bad)  
  41b496:	int    0x83
  41b498:	jnp    0x41b498
  41b49a:	aas    
  41b49b:	rol    BYTE PTR [ecx],cl
  41b49d:	hlt    
  41b49e:	loopne 0x41b4ef
  41b4a0:	push   ebx
  41b4a1:	inc    edx
  41b4a2:	test   al,0x26
  41b4a4:	out    0x18,al
  41b4a6:	fcomp  QWORD PTR ds:0xf234a343
  41b4ac:	sbb    BYTE PTR [eax+0x51],bh
  41b4af:	rcr    DWORD PTR [ebp-0x7585f2cf],cl
  41b4b5:	push   esp
  41b4b6:	dec    esp
  41b4b7:	push   eax
  41b4b8:	jmp    0x41b456
  41b4ba:	ins    BYTE PTR es:[edi],dx
  41b4bb:	or     al,0x8c
  41b4bd:	jno    0x41b48f
  41b4bf:	hlt    
  41b4c0:	aad    0x27
  41b4c2:	retf   0x509
  41b4c5:	xchg   edi,eax
  41b4c6:	clc    
  41b4c7:	inc    eax
  41b4c8:	or     eax,0xa48a961b
  41b4cd:	sub    BYTE PTR [esi],0x5a
  41b4d0:	(bad)  
  41b4d1:	sar    DWORD PTR [ecx-0x17],cl
  41b4d4:	mov    dh,0xe7
  41b4d6:	mov    ds:0x352a2d56,al
  41b4db:	cmp    eax,0x81d5878c
  41b4e0:	push   ebp
  41b4e1:	sub    dh,al
  41b4e3:	test   al,ah
  41b4e5:	fidiv  DWORD PTR [edi-0x5ee1d064]
  41b4eb:	jno    0x41b525
  41b4ed:	sub    DWORD PTR [ebp+0x75],ebp
  41b4f0:	cmp    bh,BYTE PTR [ebp-0x75]
  41b4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f4:	scas   al,BYTE PTR es:[edi]
  41b4f5:	ret    0x4428
  41b4f8:	dec    ecx
  41b4f9:	cmp    DWORD PTR [edx],0x2dc4e76f
  41b4ff:	cmc    
  41b500:	xchg   dh,ch
  41b502:	bound  edx,QWORD PTR [eax+0x30]
  41b505:	add    ch,al
  41b507:	or     DWORD PTR [edi],esp
  41b509:	scas   eax,DWORD PTR es:[edi]
  41b50a:	mov    ebx,0xae797a2b
  41b50f:	jb     0x41b4cb
  41b511:	lahf   
  41b512:	lock push esp
  41b514:	test   eax,esi
  41b516:	xchg   DWORD PTR [esi+ecx*2-0x21bb812d],edx
  41b51d:	dec    ebx
  41b51e:	pop    ecx
  41b51f:	adc    esi,DWORD PTR [edi+0x9]
  41b522:	test   eax,0x161a4bf3
  41b527:	mov    ds:0x20b0eb12,al
  41b52c:	pop    es
  41b52d:	sbb    DWORD PTR [esi],esp
  41b52f:	retf   0x645d
  41b532:	ds inc edi
  41b534:	lods   al,BYTE PTR ds:[esi]
  41b535:	retf   
  41b536:	cli    
  41b537:	daa    
  41b538:	xchg   edi,eax
  41b539:	sahf   
  41b53a:	sbb    al,0xee
  41b53c:	popf   
  41b53d:	push   0x9b4571ad
  41b542:	mov    bh,0xe
  41b544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b545:	loopne 0x41b5ba
  41b547:	mov    al,al
  41b549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b54a:	xchg   ebp,eax
  41b54b:	pop    esp
  41b54c:	push   edi
  41b54d:	(bad)  
  41b54e:	mov    al,0x6c
  41b550:	adc    al,0x88
  41b552:	pop    edi
  41b553:	in     al,dx
  41b554:	clc    
  41b555:	jbe    0x41b530
  41b557:	pop    ebx
  41b558:	lods   al,BYTE PTR ds:[esi]
  41b559:	lods   eax,DWORD PTR ds:[esi]
  41b55a:	jo     0x41b5bb
  41b55c:	mov    gs,WORD PTR [ebp+ecx*1+0x4]
  41b560:	push   es
  41b561:	mov    edx,0x7c2f4dad
  41b566:	jae    0x41b5ca
  41b568:	xor    DWORD PTR [edx+0x76],ebp
  41b56b:	jbe    0x41b53a
  41b56d:	pop    edx
  41b56e:	retf   0xae85
  41b571:	iret   
  41b572:	inc    esi
  41b573:	pop    eax
  41b574:	data16 (bad) 
  41b576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b577:	and    DWORD PTR fs:[edx+0x45b74414],ebp
  41b57e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41b580:	inc    eax
  41b581:	jecxz  0x41b5bc
  41b583:	ret    0x7e2d
  41b586:	shr    BYTE PTR [edx+0x40709487],1
  41b58c:	outs   dx,BYTE PTR ds:[esi]
  41b58d:	out    dx,eax
  41b58e:	mov    ebp,0x7061bbcc
  41b593:	xchg   ebp,eax
  41b594:	repz rcr BYTE PTR [eax-0x79d4bc93],0x73
  41b59c:	cmp    al,BYTE PTR [esi+0x2e31b016]
  41b5a2:	es cmp DWORD PTR ds:[edi+edx*4],ebx
  41b5a7:	dec    ebp
  41b5a8:	add    al,0xad
  41b5aa:	xchg   ecx,eax
  41b5ab:	or     dl,BYTE PTR [eax]
  41b5ad:	sub    al,0xcb
  41b5af:	(bad)  
  41b5b0:	in     al,dx
  41b5b1:	stos   BYTE PTR es:[edi],al
  41b5b2:	das    
  41b5b3:	adc    BYTE PTR [ebp+0x40f2e347],0x4f
  41b5ba:	or     BYTE PTR [esi],0x6f
  41b5bd:	aaa    
  41b5be:	leave  
  41b5bf:	mov    esp,edx
  41b5c1:	jno    0x41b55e
  41b5c3:	or     al,0x97
  41b5c5:	jp     0x41b60a
  41b5c7:	jno    0x41b563
  41b5c9:	xor    edx,edx
  41b5cb:	jmp    0x86eb4ffb
  41b5d0:	loope  0x41b5d2
  41b5d2:	psubsb mm7,QWORD PTR [ecx-0x16ffffd7]
  41b5d9:	inc    esp
  41b5da:	add    al,0x0
  41b5dc:	add    BYTE PTR [esi],cl
  41b5de:	adc    BYTE PTR [esi+edi*8+0x58],0xd3
  41b5e3:	fs xor ch,0xf0
  41b5e7:	and    al,0x68
  41b5e9:	aam    0xef
  41b5eb:	or     eax,0xc0d2d74
  41b5f0:	push   ss
  41b5f1:	(bad)  
  41b5f2:	push   cs
  41b5f3:	push   ss
  41b5f4:	push   ss
  41b5f5:	cmp    bh,BYTE PTR [esi+0x56]
  41b5f8:	in     al,0x5e
  41b5fa:	add    BYTE PTR [ebx],cl
  41b5fc:	adc    ebx,DWORD PTR [ebp+0x71]
  41b5ff:	xor    DWORD PTR [ebx+0x277d2946],edi
  41b605:	or     al,0x52
  41b607:	test   al,0x1e
  41b609:	mov    ch,0x4b
  41b60b:	pop    eax
  41b60c:	pop    es
  41b60d:	aad    0xe1
  41b60f:	hlt    
  41b610:	sub    eax,0xfe1e3996
  41b615:	int3   
  41b616:	xchg   esi,eax
  41b617:	mov    ah,0x6c
  41b619:	popf   
  41b61a:	cld    
  41b61b:	leave  
  41b61c:	movlps xmm0,QWORD PTR [edi+0x6e812203]
  41b623:	call   0x5e4c:0x8a3b2a3
  41b62a:	cwde   
  41b62b:	push   edx
  41b62c:	jl     0x41b5ce
  41b62e:	cmp    eax,0x888a617
  41b633:	rol    DWORD PTR [edx+0x48001658],1
  41b639:	in     eax,dx
  41b63a:	mov    al,0x2f
  41b63c:	inc    ebp
  41b63d:	mov    bh,0x91
  41b63f:	cdq    
  41b640:	out    0xc3,al
  41b642:	pop    eax
  41b643:	retf   0xce34
  41b646:	call   0xaee7:0x5a9092b2
  41b64d:	add    al,0xb6
  41b64f:	add    ah,ch
  41b651:	xor    al,0x6e
  41b653:	or     ch,0x3a
  41b656:	outs   dx,BYTE PTR ds:[esi]
  41b657:	mov    ds:0x3f6e53c4,al
  41b65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b65d:	add    eax,0xe6fba995
  41b662:	xchg   esp,eax
  41b663:	ret    0xcfb0
  41b666:	arpl   WORD PTR [edx-0x16],bp
  41b669:	loope  0x41b66c
  41b66b:	mov    ah,0x91
  41b66d:	and    eax,0x37ce4c56
  41b672:	jmp    0x6e97:0xa98ba654
  41b679:	cmp    BYTE PTR [esi],dl
  41b67b:	and    al,0xf5
  41b67d:	fist   WORD PTR [ebx-0x69]
  41b680:	pop    eax
  41b681:	pop    ds
  41b682:	in     al,dx
  41b683:	je     0x41b67a
  41b685:	test   DWORD PTR [edx],ecx
  41b687:	stos   DWORD PTR es:[edi],eax
  41b688:	scas   eax,DWORD PTR es:[edi]
  41b689:	sar    ebx,cl
  41b68b:	test   DWORD PTR [eax+ecx*1-0x58],esi
  41b68f:	mov    WORD PTR [edx-0x7f],ds
  41b692:	fldenv [eax+0x586ba85c]
  41b698:	adc    DWORD PTR [ecx-0x4d1ff746],0xffc0eb2a
  41b6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a3:	xchg   BYTE PTR [edi+0x140741c],dl
  41b6a9:	(bad)  
  41b6aa:	shl    BYTE PTR [ebp+0x275c32a5],0xef
  41b6b1:	scas   al,BYTE PTR es:[edi]
  41b6b2:	int3   
  41b6b3:	(bad)  
  41b6b4:	pusha  
  41b6b5:	add    eax,0xba027a98
  41b6ba:	or     al,BYTE PTR [ecx]
  41b6bc:	or     edx,ebp
  41b6be:	rcr    BYTE PTR [esp+eiz*4-0x49e0ed99],cl
  41b6c5:	sub    bl,BYTE PTR [edx-0x6a]
  41b6c8:	imul   ebx,DWORD PTR [ebx],0xffffff83
  41b6cb:	lds    ebp,FWORD PTR [esi+0x7136a3d2]
  41b6d1:	fadd   DWORD PTR [esi]
  41b6d3:	pop    ebp
  41b6d4:	jnp    0x41b694
  41b6d6:	fld    DWORD PTR [ebp-0x5a3cfd6]
  41b6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6dd:	xor    eax,0xa6b820f8
  41b6e2:	in     al,dx
  41b6e3:	cmp    edi,DWORD PTR [edi]
  41b6e5:	push   ecx
  41b6e6:	in     al,dx
  41b6e7:	jmp    0xaf01:0x9a681307
  41b6ee:	mov    edi,0x282f576c
  41b6f3:	clc    
  41b6f4:	jno    0x41b676
  41b6f6:	test   al,0xd8
  41b6f8:	hlt    
  41b6f9:	es inc ebx
  41b6fb:	or     ebx,DWORD PTR [ecx-0xc9040f9]
  41b701:	mov    esi,0x6d6c2457
  41b706:	push   edx
  41b707:	xor    ebx,DWORD PTR ds:0x653ddc67
  41b70d:	in     eax,0xe8
  41b70f:	cmp    al,ah
  41b711:	jge    0x41b722
  41b713:	pop    ecx
  41b714:	(bad)  
  41b715:	loop   0x41b776
  41b717:	imul   ebx,DWORD PTR [eax-0x74],0x6cfce1d
  41b71e:	xor    DWORD PTR [ecx+0x29],edi
  41b721:	hlt    
  41b722:	std    
  41b723:	pop    es
  41b724:	dec    edi
  41b725:	mov    edx,DWORD PTR [ecx+0x58]
  41b728:	ret    0xdd7c
  41b72b:	call   0x1a4cb41e
  41b730:	cmc    
  41b731:	icebp  
  41b732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b733:	out    0x74,eax
  41b735:	dec    esi
  41b736:	push   0xffffffe7
  41b738:	mov    cl,0x6
  41b73a:	loop   0x41b70d
  41b73c:	mov    edx,0x281e50b1
  41b741:	adc    al,0x29
  41b743:	mov    ecx,0x11ed6309
  41b748:	push   ss
  41b749:	sbb    DWORD PTR [edx-0x17],esp
  41b74c:	mov    esp,0xe3299e81
  41b751:	stc    
  41b752:	xchg   ecx,eax
  41b753:	sahf   
  41b754:	pop    ss
  41b755:	into   
  41b756:	(bad)  
  41b759:	xor    BYTE PTR [ebx-0x1ea637e5],0x72
  41b760:	xor    bl,BYTE PTR [ecx+0x2a743fe2]
  41b766:	jne    0x41b736
  41b768:	popf   
  41b769:	das    
  41b76a:	clc    
  41b76b:	add    eax,0x6187790b
  41b770:	mov    cl,0xf0
  41b772:	mov    esp,0x88c24397
  41b777:	clc    
  41b778:	and    BYTE PTR ds:0x24ecf0f,ch
  41b77e:	std    
  41b77f:	out    0xd0,al
  41b781:	dec    ebx
  41b782:	iret   
  41b783:	out    0xc6,al
  41b785:	adc    al,0xfc
  41b787:	arpl   WORD PTR [ecx-0x45853ef],di
  41b78d:	xlat   BYTE PTR ds:[ebx]
  41b78e:	or     esi,DWORD PTR [ebx-0x4]
  41b791:	adc    al,0xd0
  41b793:	popf   
  41b794:	hlt    
  41b795:	push   ebx
  41b796:	mov    DWORD PTR [eax-0x28767ffe],esp
  41b79c:	imul   DWORD PTR [esi-0x57867f2e]
  41b7a2:	jp     0x41b79b
  41b7a4:	fs dec eax
  41b7a6:	stos   DWORD PTR es:[edi],eax
  41b7a7:	inc    esp
  41b7a8:	sub    eax,0x5c8f2afd
  41b7ad:	mov    esi,0x389008d4
  41b7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7b3:	pop    edi
  41b7b4:	fidiv  DWORD PTR [esi-0x33099cba]
  41b7ba:	out    dx,al
  41b7bb:	xchg   BYTE PTR [edx+0x5e],dl
  41b7be:	jg     0x41b7f1
  41b7c0:	inc    edi
  41b7c1:	pop    esp
  41b7c2:	loop   0x41b803
  41b7c4:	push   esp
  41b7c5:	sub    al,0x61
  41b7c7:	imul   esp,DWORD PTR [edi],0x6d
  41b7ca:	and    DWORD PTR [esi+edx*2-0x4de2ad15],0x34
  41b7d2:	or     eax,0x32cc4935
  41b7d7:	loope  0x41b84c
  41b7d9:	pop    edx
  41b7da:	dec    eax
  41b7db:	mov    bh,0xfa
  41b7dd:	int    0x73
  41b7df:	pop    ecx
  41b7e0:	mov    dh,0xee
  41b7e2:	in     eax,0x31
  41b7e4:	pusha  
  41b7e5:	push   esp
  41b7e6:	out    dx,eax
  41b7e7:	and    eax,0x8483df7a
  41b7ec:	jo     0x41b7c4
  41b7ee:	lahf   
  41b7ef:	pop    edx
  41b7f0:	lds    ecx,FWORD PTR [eax]
  41b7f2:	pusha  
  41b7f3:	push   ss
  41b7f4:	(bad)  
  41b7f5:	pop    ds
  41b7f6:	dec    ebx
  41b7f7:	mov    ecx,0x5ce15df7
  41b7fc:	in     eax,0xbe
  41b7fe:	and    al,0x7f
  41b800:	sub    ch,BYTE PTR [edx+0x228983f]
  41b806:	jns    0x41b7ad
  41b808:	arpl   WORD PTR [eax+ebx*4+0x525ed087],dx
  41b80f:	inc    eax
  41b810:	add    DWORD PTR ds:0x7b59a264,ecx
  41b816:	imul   esp,DWORD PTR [edx],0xf7362921
  41b81c:	into   
  41b81d:	test   eax,0xc60c5ef7
  41b822:	or     BYTE PTR [edx],0x91
  41b825:	(bad)  
  41b826:	int3   
  41b827:	push   cs
  41b828:	icebp  
  41b829:	test   DWORD PTR [eax],ecx
  41b82b:	sahf   
  41b82c:	adc    al,0x67
  41b82e:	dec    eax
  41b82f:	adc    DWORD PTR [ebx],0x1c515db9
  41b835:	pop    ecx
  41b836:	dec    ebx
  41b837:	pusha  
  41b838:	mov    eax,0x3bc61eb9
  41b83d:	dec    ebx
  41b83e:	pop    esp
  41b83f:	in     al,dx
  41b840:	and    DWORD PTR [ebx+0x1cfdedd8],eax
  41b846:	add    dh,BYTE PTR ds:0xf2becebf
  41b84c:	outs   dx,DWORD PTR ds:[esi]
  41b84d:	lods   al,BYTE PTR ds:[esi]
  41b84e:	pop    ebp
  41b84f:	fld    DWORD PTR [ebx-0x72c220e5]
  41b855:	mov    dl,0x4e
  41b857:	mov    dl,0x1
  41b859:	inc    esp
  41b85a:	fist   DWORD PTR [edx-0x5b]
  41b85d:	dec    ecx
  41b85e:	cli    
  41b85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b860:	ds imul edi,esp,0xffffff98
  41b864:	xor    bl,0x33
  41b867:	cmp    ebx,DWORD PTR [edi+0x4ee008fd]
  41b86d:	mov    DWORD PTR [eax],esi
  41b86f:	js     0x41b81e
  41b871:	pop    esi
  41b872:	mov    eax,0x8a152f56
  41b877:	in     al,dx
  41b878:	inc    ebx
  41b879:	sub    al,0x34
  41b87b:	aad    0x6b
  41b87d:	(bad)  
  41b87e:	push   0x88194ec4
  41b883:	push   0x5c1e9d04
  41b888:	bound  edx,QWORD PTR [ebp-0x12]
  41b88b:	pop    eax
  41b88c:	add    al,BYTE PTR [edi]
  41b88e:	int    0x60
  41b890:	lods   al,BYTE PTR ds:[esi]
  41b891:	cmp    DWORD PTR ds:0xf50d8577,eax
  41b897:	imul   edi,esp,0xaad2d222
  41b89d:	jns    0x41b8ad
  41b89f:	adc    DWORD PTR [ebx+eiz*1],ebx
  41b8a2:	test   eax,0x9c385b05
  41b8a7:	ins    BYTE PTR es:[edi],dx
  41b8a8:	fsub   DWORD PTR [ebx]
  41b8aa:	(bad)  
  41b8ab:	loope  0x41b86c
  41b8ad:	xchg   ebx,eax
  41b8ae:	mov    DWORD PTR [esi-0x3c],ecx
  41b8b1:	and    al,0xec
  41b8b3:	outs   dx,DWORD PTR ds:[esi]
  41b8b4:	cmp    BYTE PTR [esi+0x4f332088],0xd1
  41b8bb:	add    al,0xc
  41b8bd:	ins    BYTE PTR es:[edi],dx
  41b8be:	out    dx,eax
  41b8bf:	mov    cl,0xdc
  41b8c1:	in     eax,0x7f
  41b8c3:	sti    
  41b8c4:	sub    ch,dl
  41b8c6:	loope  0x41b90b
  41b8c8:	mov    cl,0xe
  41b8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8cb:	gs push ebx
  41b8cd:	push   0xffffffa9
  41b8cf:	fdivr  QWORD PTR [eax+0x59]
  41b8d2:	xchg   DWORD PTR [edi-0x62231f0f],ecx
  41b8d8:	js     0x41b85c
  41b8da:	cmp    BYTE PTR [edi],dl
  41b8dc:	and    eax,DWORD PTR [edi+0x4c6e01df]
  41b8e2:	mov    DWORD PTR [ebp+0x61],edx
  41b8e5:	sub    BYTE PTR [edi-0x72b3ff72],0xc8
  41b8ec:	aam    0x68
  41b8ee:	enter  0x3212,0x59
  41b8f2:	(bad)  [ecx-0x43a2cdf5]
  41b8f8:	xchg   ecx,eax
  41b8f9:	mov    ch,0xfe
  41b8fb:	leave  
  41b8fc:	out    dx,al
  41b8fd:	ja     0x41b969
  41b8ff:	fs gs int 0x1d
  41b903:	test   al,0xde
  41b905:	inc    ebp
  41b906:	aam    0x81
  41b908:	clc    
  41b909:	and    al,0xa4
  41b90b:	push   cs
  41b90c:	jo     0x41b936
  41b90e:	pop    ecx
  41b90f:	push   ds
  41b910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b911:	pop    esp
  41b912:	jbe    0x41b91c
  41b914:	sub    DWORD PTR [edi],0xe25b463d
  41b91a:	int    0x92
  41b91c:	ins    DWORD PTR es:[edi],dx
  41b91d:	xchg   ebp,eax
  41b91e:	in     eax,dx
  41b91f:	sbb    DWORD PTR [ebx-0x21],ecx
  41b922:	ja     0x41b924
  41b924:	cmp    ah,BYTE PTR [eax-0x7195dc98]
  41b92a:	xchg   esp,eax
  41b92b:	hlt    
  41b92c:	js     0x41b932
  41b92e:	jmp    0x41b963
  41b930:	push   edi
  41b931:	cli    
  41b932:	(bad)  
  41b933:	jns    0x41b906
  41b935:	pop    eax
  41b936:	sbb    BYTE PTR [edx],dl
  41b938:	rol    BYTE PTR [edx-0x6a6749a4],cl
  41b93e:	pop    ss
  41b93f:	add    al,0xd1
  41b941:	sub    ebx,esp
  41b943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b944:	(bad)  
  41b945:	mov    esp,0xa3f4a2d6
  41b94a:	xor    BYTE PTR [ebx],dl
  41b94c:	mov    ds:0x7d56cfd4,al
  41b951:	outs   dx,DWORD PTR ds:[esi]
  41b952:	adc    al,0x77
  41b954:	mov    eax,0x9a735a1a
  41b959:	cmp    eax,0x974f7f0b
  41b95e:	add    al,0xa5
  41b960:	ins    DWORD PTR es:[edi],dx
  41b961:	jg     0x41b960
  41b963:	mov    dl,0x57
  41b965:	add    esp,edx
  41b967:	daa    
  41b968:	jmp    0x1a57accc
  41b96d:	stc    
  41b96e:	cld    
  41b96f:	cmp    al,0x7b
  41b971:	or     al,0x2a
  41b973:	imul   edx,DWORD PTR [esi+0xe],0xb5d5363c
  41b97a:	data16 mov gs,WORD PTR [ebp+0x418b5e3b]
  41b981:	xor    eax,0xf6ad445b
  41b986:	xchg   edx,eax
  41b987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b988:	and    BYTE PTR [eax],0xa3
  41b98b:	clc    
  41b98c:	cld    
  41b98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b98e:	xor    eax,0x4464164f
  41b993:	lods   al,BYTE PTR ds:[esi]
  41b994:	clc    
  41b995:	and    BYTE PTR [edi-0x138a731f],ch
  41b99b:	ds push esi
  41b99d:	adc    al,0x22
  41b99f:	cli    
  41b9a0:	cli    
  41b9a1:	test   eax,0x76e16f1b
  41b9a6:	mov    DWORD PTR [esp+ecx*2+0x30bf768],edi
  41b9ad:	xor    al,0x20
  41b9b0:	add    ch,BYTE PTR [edx]
  41b9b2:	out    0xd1,al
  41b9b4:	dec    edx
  41b9b5:	xchg   ebx,eax
  41b9b6:	in     al,0x14
  41b9b8:	div    BYTE PTR [edi-0x4]
  41b9bb:	clc    
  41b9bc:	stos   DWORD PTR es:[edi],eax
  41b9bd:	inc    ecx
  41b9be:	cmp    eax,0xda68e4dc
  41b9c3:	fiadd  DWORD PTR [ebx+edi*8+0xe6f8bb]
  41b9ca:	add    bl,bh
  41b9cc:	mov    esp,ss
  41b9ce:	stos   BYTE PTR es:[edi],al
  41b9cf:	js     0x41ba2c
  41b9d1:	scas   eax,DWORD PTR es:[edi]
  41b9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9d3:	mov    cs,WORD PTR [edx]
  41b9d5:	enter  0x8789,0x33
  41b9d9:	dec    esp
  41b9da:	call   FWORD PTR [edi]
  41b9dc:	pop    eax
  41b9dd:	aaa    
  41b9de:	and    al,BYTE PTR [ebx+0x454fe0ec]
  41b9e4:	scas   eax,DWORD PTR es:[edi]
  41b9e5:	jl     0x41ba04
  41b9e7:	sub    bl,BYTE PTR [esi-0x10]
  41b9ea:	jne    0x41ba13
  41b9ec:	mov    cl,0xfa
  41b9ee:	ror    esi,0xc0
  41b9f1:	pop    esp
  41b9f2:	jne    0x41b9df
  41b9f4:	cmp    al,0x63
  41b9f6:	xchg   eax,ebx
  41b9f8:	lahf   
  41b9f9:	sbb    edi,DWORD PTR [ebp-0x254963c2]
  41b9ff:	nop
  41ba00:	mov    ebp,0xc1626d26
  41ba05:	nop
  41ba06:	fistp  WORD PTR [edi]
  41ba08:	add    bl,ch
  41ba0a:	adc    esp,DWORD PTR ds:0x56e4583b
  41ba10:	dec    ebp
  41ba11:	xor    bh,ch
  41ba13:	adc    DWORD PTR [ecx+0x4f],ecx
  41ba16:	sub    cl,BYTE PTR [edx+0x7d]
  41ba19:	pop    eax
  41ba1a:	cmp    eax,0x47dad7bc
  41ba1f:	jl     0x41ba90
  41ba21:	mov    ecx,DWORD PTR [ebp-0x28]
  41ba24:	adc    DWORD PTR ds:0x422976,0x422996
  41ba2e:	mov    esi,DWORD PTR [ebp-0x24]
  41ba31:	xor    eax,0x2340
  41ba36:	and    eax,ecx
  41ba38:	sbb    DWORD PTR ds:0x4228f6,0x422972
  41ba42:	xor    edx,0x452
  41ba48:	and    edx,esi
  41ba4a:	cmp    DWORD PTR ds:0x42298a,0x0
  41ba51:	mov    esi,DWORD PTR ds:0x4228da
  41ba57:	mov    esi,0x28ad
  41ba5c:	jmp    0x41ba97
  41ba61:	mov    DWORD PTR ds:0x422952,0x4940
  41ba6b:	ja     0x41ba89
  41ba71:	push   DWORD PTR [ebp-0x24]
  41ba74:	push   DWORD PTR [ebp-0x28]
  41ba77:	call   DWORD PTR ds:0x42a17c
  41ba7d:	sub    ecx,DWORD PTR ds:0x4228fa
  41ba83:	xor    DWORD PTR ds:0x4228ee,edi
  41ba89:	adc    DWORD PTR ds:0x4228fa,0x422972
  41ba93:	and    ecx,esi
  41ba95:	adc    ecx,esi
  41ba97:	and    eax,0x3741
  41ba9c:	mov    DWORD PTR [ebp-0x10],eax
  41ba9f:	and    edx,0x445b
  41baa5:	cmp    DWORD PTR ds:0x4229b6,0x0
  41baac:	mov    ecx,DWORD PTR ds:0x42293e
  41bab2:	mov    DWORD PTR ds:0x4229ce,ebx
  41bab8:	mov    esi,0x2c04
  41babd:	jmp    0x41bb16
  41bac2:	mov    DWORD PTR ds:0x42293a,edi
  41bac8:	jle    0x41bafe
  41bace:	push   0x3ca9
  41bad3:	call   DWORD PTR ds:0x42a058
  41bad9:	movzx  esi,WORD PTR ds:0x4228b2
  41bae0:	sbb    esi,DWORD PTR ds:0x4228fa
  41bae6:	mov    DWORD PTR ds:0x4228b2,esi
  41baec:	and    DWORD PTR ds:0x4228b2,0x689
  41baf6:	sub    ecx,esi
  41baf8:	sbb    DWORD PTR ds:0x4228de,edi
  41bafe:	sbb    DWORD PTR ds:0x4228f2,ecx
  41bb04:	mov    ecx,DWORD PTR ds:0x42295e
  41bb0a:	or     DWORD PTR ds:0x4228fe,ecx
  41bb10:	add    DWORD PTR ds:0x422992,ecx
  41bb16:	mov    DWORD PTR [ebp-0xc],edx
  41bb19:	mov    DWORD PTR [ebp-0x20],0x5770
  41bb20:	mov    eax,ds:0x422a7a
  41bb25:	mov    ecx,DWORD PTR ds:0x422b0e
  41bb2b:	sub    eax,ecx
  41bb2d:	and    eax,DWORD PTR [eax+ecx*1]
  41bb30:	mov    DWORD PTR [ebp-0x1c],0x18fc
  41bb37:	jmp    0x41bd55
  41bb3c:	mov    dh,0xdf
  41bb3e:	or     DWORD PTR [ecx-0x48],edx
  41bb41:	and    BYTE PTR [esi],ch
  41bb43:	pop    eax
  41bb44:	(bad)
  41bb48:	adc    ebx,DWORD PTR [edi+0x5dcae7c]
  41bb4e:	or     al,0x16
  41bb50:	adc    al,0xc
  41bb52:	push   ss
  41bb53:	push   ss
  41bb54:	dec    ecx
  41bb55:	cmp    DWORD PTR [edx+0x15164737],ecx
  41bb5b:	jl     0x41baed
  41bb5d:	pop    edx
  41bb5e:	and    BYTE PTR [ecx+esi*8-0x2760e914],dl
  41bb65:	xchg   ebp,eax
  41bb66:	pop    ebp
  41bb67:	rcr    DWORD PTR [esi-0x1987d96e],1
  41bb6d:	xchg   ecx,eax
  41bb6e:	pop    esi
  41bb6f:	add    al,0x51
  41bb71:	and    edx,ecx
  41bb73:	outs   dx,BYTE PTR ds:[esi]
  41bb74:	mov    eax,ds:0xea9ef96c
  41bb79:	mov    dh,0xa7
  41bb7b:	stc    
  41bb7c:	mov    eax,DWORD PTR [edi+0x3b]
  41bb7f:	jne    0x41bba6
  41bb81:	rcl    DWORD PTR [eax],1
  41bb83:	cdq    
  41bb84:	dec    esp
  41bb85:	frstor [eax]
  41bb87:	add    al,0x56
  41bb89:	xor    ebp,eax
  41bb8b:	pop    ecx
  41bb8c:	stos   DWORD PTR es:[edi],eax
  41bb8d:	cmp    eax,0x6b9a9622
  41bb92:	fidivr WORD PTR [edi]
  41bb94:	push   ebx
  41bb95:	xlat   BYTE PTR ds:[ebx]
  41bb96:	mov    esi,0xeac95850
  41bb9b:	push   0xfffffff2
  41bb9d:	(bad)  
  41bb9e:	inc    esp
  41bb9f:	push   ebx
  41bba0:	stc    
  41bba1:	mov    edx,esi
  41bba3:	clc    
  41bba4:	bound  ebx,QWORD PTR [ebx-0x40]
  41bba7:	test   eax,0x6f92749e
  41bbac:	xlat   BYTE PTR ds:[ebx]
  41bbad:	mov    al,0x2
  41bbaf:	ins    DWORD PTR es:[edi],dx
  41bbb0:	cmp    bh,dh
  41bbb2:	stos   DWORD PTR es:[edi],eax
  41bbb3:	push   ebp
  41bbb4:	dec    ecx
  41bbb5:	outs   dx,DWORD PTR ds:[esi]
  41bbb6:	push   esi
  41bbb7:	and    DWORD PTR ds:[eax-0x39],edx
  41bbbb:	jnp    0x41bba3
  41bbbd:	xor    DWORD PTR [ebx-0x23],ebx
  41bbc0:	mov    ah,0xe3
  41bbc2:	or     bh,BYTE PTR [edx]
  41bbc4:	stos   DWORD PTR es:[edi],eax
  41bbc5:	loope  0x41bb98
  41bbc7:	cmp    cl,BYTE PTR [edx+0x5f]
  41bbca:	lahf   
  41bbcb:	addr16 dec ebp
  41bbcd:	not    BYTE PTR [edx-0x6bb8d8c9]
  41bbd3:	lods   eax,DWORD PTR ds:[esi]
  41bbd4:	add    BYTE PTR [ecx],0xe6
  41bbd7:	lods   al,BYTE PTR ds:[esi]
  41bbd8:	ficom  DWORD PTR [ecx+edi*8+0x2]
  41bbdc:	int3   
  41bbdd:	mov    BYTE PTR [eax+0x6120be53],al
  41bbe3:	pop    esp
  41bbe4:	sub    DWORD PTR [ecx],ebp
  41bbe6:	adc    eax,0x7ffbfc6
  41bbeb:	add    BYTE PTR [eax-0x7f],dl
  41bbee:	ds inc ecx
  41bbf0:	mov    esi,0x3b8fe805
  41bbf5:	push   ecx
  41bbf6:	mov    ebx,0xb7f91896
  41bbfb:	add    DWORD PTR [eax-0x50491383],ebx
  41bc01:	dec    edx
  41bc02:	xchg   esi,eax
  41bc03:	add    al,0xe4
  41bc05:	lods   al,BYTE PTR ds:[esi]
  41bc06:	lds    esi,FWORD PTR [ebp-0x65]
  41bc09:	push   eax
  41bc0a:	dec    ebx
  41bc0b:	sub    al,0x3f
  41bc0d:	pop    eax
  41bc0e:	sbb    eax,0x75f4a702
  41bc13:	fimul  DWORD PTR ds:0x46888f4f
  41bc19:	stos   DWORD PTR es:[edi],eax
  41bc1a:	outs   dx,BYTE PTR ds:[esi]
  41bc1b:	mov    ds:0x174a0f51,al
  41bc20:	cmp    bh,dl
  41bc22:	add    eax,0x75c86b02
  41bc27:	ins    BYTE PTR es:[edi],dx
  41bc28:	lahf   
  41bc29:	push   0xb1468c55
  41bc2e:	outs   dx,BYTE PTR ds:[esi]
  41bc2f:	lds    edi,FWORD PTR [esi+0x12]
  41bc32:	jno    0x41bc36
  41bc34:	test   eax,0x1eecc591
  41bc39:	xchg   esp,eax
  41bc3a:	out    0x2f,eax
  41bc3c:	inc    eax
  41bc3d:	xchg   edi,eax
  41bc3e:	push   edi
  41bc3f:	dec    eax
  41bc40:	adc    DWORD PTR [esp+ecx*1-0x55f6035],ebx
  41bc47:	sti    
  41bc48:	cwde   
  41bc49:	pop    ebx
  41bc4a:	fistp  QWORD PTR ds:[eax-0x2b0cab9b]
  41bc51:	test   bl,dl
  41bc53:	dec    ecx
  41bc54:	xchg   ebx,eax
  41bc55:	mov    edi,0x93db5372
  41bc5a:	mov    bl,0xf5
  41bc5c:	or     eax,0x91298d89
  41bc61:	xchg   esp,eax
  41bc62:	jns    0x41bc23
  41bc64:	in     eax,0xc8
  41bc66:	sub    DWORD PTR [ebx],0xffffffc0
  41bc69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc6a:	fldenv [eax-0x4c]
  41bc6d:	mov    ecx,0xb59883ea
  41bc72:	mov    bl,0xbf
  41bc74:	sti    
  41bc75:	stos   BYTE PTR es:[edi],al
  41bc76:	arpl   WORD PTR [ecx-0x6de69b36],cx
  41bc7c:	xchg   edi,esp
  41bc7e:	loope  0x41bc81
  41bc80:	inc    DWORD PTR [ecx+0x7a]
  41bc83:	push   ss
  41bc84:	sub    edi,esi
  41bc86:	leave  
  41bc87:	aad    0xb5
  41bc89:	sti    
  41bc8a:	sbb    ah,bh
  41bc8c:	ret    0x83e4
  41bc8f:	mov    BYTE PTR [eax+0x7571c8ba],ch
  41bc95:	mov    ds:0xd5eb8a62,al
  41bc9a:	aaa    
  41bc9b:	mov    edx,0x1d1e8cda
  41bca0:	mov    eax,0x906eb41e
  41bca5:	fsub   DWORD PTR [edi+ebx*2-0x70]
  41bca9:	mov    ds:0xc5ae14f5,eax
  41bcae:	cmp    eax,DWORD PTR [ecx-0xc]
  41bcb1:	sub    DWORD PTR ds:0x70bf0922,0x7c8dae27
  41bcbb:	test   eax,0x893bf98d
  41bcc0:	xchg   ebp,eax
  41bcc1:	enter  0xb323,0xd6
  41bcc5:	push   esi
  41bcc6:	scas   al,BYTE PTR es:[edi]
  41bcc7:	lods   al,BYTE PTR cs:[esi]
  41bcc9:	lods   eax,DWORD PTR ds:[esi]
  41bcca:	sbb    eax,0x9ddabe0
  41bccf:	push   es
  41bcd0:	test   eax,0xd9ed7c4c
  41bcd6:	lsl    esp,si
  41bcd9:	and    ebp,edi
  41bcdb:	fwait
  41bcdc:	dec    esp
  41bcdd:	push   es
  41bcde:	and    al,BYTE PTR [edx+eiz*2-0x45]
  41bce2:	dec    esp
  41bce3:	sbb    al,BYTE PTR [eax-0x5b]
  41bce6:	test   al,0xdf
  41bce8:	xchg   edi,eax
  41bce9:	mov    dh,dl
  41bceb:	shl    DWORD PTR ds:0x5da840e6,cl
  41bcf1:	dec    eax
  41bcf2:	add    eax,edx
  41bcf4:	in     eax,0xda
  41bcf6:	and    BYTE PTR [esi+0x582372d],cl
  41bcfc:	jmp    0x41bd0b
  41bcfe:	jp     0x41bd3c
  41bd00:	dec    ecx
  41bd01:	mov    ah,0x4e
  41bd03:	in     eax,dx
  41bd04:	cmp    edx,edi
  41bd06:	add    eax,0xa996df2b
  41bd0b:	std    
  41bd0c:	jl     0x41bc92
  41bd0e:	sub    al,0x8e
  41bd10:	stos   BYTE PTR es:[edi],al
  41bd11:	out    0xe8,eax
  41bd13:	sub    bl,BYTE PTR [ecx]
  41bd15:	dec    esi
  41bd16:	scas   eax,DWORD PTR es:[edi]
  41bd17:	cs sbb BYTE PTR cs:[edi+0x1f],bh
  41bd1c:	aad    0x21
  41bd1e:	stc    
  41bd1f:	ret    0x566b
  41bd22:	push   ds
  41bd23:	iret   
  41bd24:	sahf   
  41bd25:	ins    DWORD PTR es:[edi],dx
  41bd26:	mov    dl,0x3e
  41bd28:	jge    0x41bce3
  41bd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd2b:	xchg   ecx,eax
  41bd2c:	outs   dx,BYTE PTR ds:[esi]
  41bd2d:	add    al,0xa9
  41bd2f:	dec    ebx
  41bd30:	mov    DWORD PTR [ebx+ecx*4],edx
  41bd33:	sub    al,0x2b
  41bd35:	inc    ebx
  41bd36:	int3   
  41bd37:	pop    edx
  41bd38:	sbb    DWORD PTR [esi-0x675103bc],eax
  41bd3e:	sub    DWORD PTR [esi-0x21],esi
  41bd41:	xlat   BYTE PTR ds:[ebx]
  41bd42:	push   0x23a0bbb3
  41bd47:	pop    esi
  41bd48:	sbb    eax,0x81d4973e
  41bd4d:	dec    ebp
  41bd4e:	imul   ebp,DWORD PTR [ecx],0xa46cc304
  41bd54:	inc    esi
  41bd55:	mov    DWORD PTR [ebp-0x28],0x151b
  41bd5c:	adc    ecx,edx
  41bd5e:	mov    DWORD PTR [ebp-0x24],0x1c21
  41bd65:	add    DWORD PTR ds:0x42293a,0x7032
  41bd6f:	mov    eax,DWORD PTR [ebp-0x28]
  41bd72:	mov    DWORD PTR ds:0x4228d6,0x3603
  41bd7c:	mov    ecx,DWORD PTR [ebp-0x24]
  41bd7f:	xor    edx,DWORD PTR ds:0x42295a
  41bd85:	mov    edx,DWORD PTR [ebp-0x20]
  41bd88:	and    esi,DWORD PTR ds:0x422932
  41bd8e:	mov    esi,DWORD PTR [ebp-0x1c]
  41bd91:	add    eax,0x12fa
  41bd96:	push   esi
  41bd97:	adc    ecx,0x31c
  41bd9d:	sbb    DWORD PTR ds:0x422992,0x422932
  41bda7:	push   edx
  41bda8:	neg    DWORD PTR ds:0x4228ae
  41bdae:	and    ecx,0x2420
  41bdb4:	or     DWORD PTR ds:0x422896,0x6744
  41bdbe:	and    eax,0x7f7f
  41bdc3:	sub    DWORD PTR ds:0x42292e,0x4229a6
  41bdcd:	push   ecx
  41bdce:	push   eax
  41bdcf:	or     DWORD PTR ds:0x422932,0x422986
  41bdd9:	call   0x41df91
  41bdde:	mov    DWORD PTR ds:0x4228d2,0x50ed
  41bde8:	mov    esi,DWORD PTR [ebp-0x10]
  41bdeb:	mov    ecx,0x61bf
  41bdf0:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdf3:	cmp    ecx,edx
  41bdf5:	ja     0x41c148
  41bdfb:	mov    DWORD PTR ds:0x4229aa,0x308e
  41be05:	jb     0x41be1d
  41be0b:	cmp    esi,eax
  41be0d:	mov    DWORD PTR ds:0x4228d2,0x64bb
  41be17:	jae    0x41c148
  41be1d:	adc    ecx,DWORD PTR ds:0x4229ce
  41be23:	mov    DWORD PTR [ebp-0x10],0x6155
  41be2a:	mov    DWORD PTR [ebp-0xc],0x201
  41be31:	sub    ecx,DWORD PTR ds:0x4228be
  41be37:	mov    DWORD PTR [ebp-0x20],0x44e0
  41be3e:	cmp    DWORD PTR ds:0x4228ca,0x0
  41be45:	mov    edx,0x767c
  41be4a:	not    esi
  41be4c:	jmp    0x41beb9
  41be51:	not    edx
  41be53:	jbe    0x41be94
  41be59:	push   DWORD PTR [ebp-0x18]
  41be5c:	push   0x8f12
  41be61:	push   DWORD PTR [ebp-0x28]
  41be64:	push   0x243c
  41be69:	push   0x73f8
  41be6e:	push   0x4227d9
  41be73:	push   0x400000
  41be78:	call   DWORD PTR ds:0x42a030
  41be7e:	sub    DWORD PTR ds:0x4228be,ebx
  41be84:	sub    ecx,DWORD PTR ds:0x422986
  41be8a:	sbb    DWORD PTR ds:0x42292e,0x3fb0
  41be94:	xor    DWORD PTR ds:0x4229c6,0x7a44
  41be9e:	add    DWORD PTR ds:0x4228de,0x618
  41bea8:	mov    edx,DWORD PTR ds:0x422aba
  41beae:	mov    esi,DWORD PTR ds:0x422b16
  41beb4:	sub    esi,edx
  41beb6:	add    edx,DWORD PTR [edx+esi*1]
  41beb9:	mov    DWORD PTR [ebp-0x1c],0x5ee2
  41bec0:	xor    eax,0x576f
  41bec5:	mov    DWORD PTR [ebp-0x28],0x1aff
  41becc:	mov    DWORD PTR [ebp-0x24],0xee6
  41bed3:	mov    eax,DWORD PTR [ebp-0x28]
  41bed6:	cmp    DWORD PTR ds:0x422982,0x0
  41bedd:	mov    DWORD PTR ds:0x42292e,0x189d
  41bee7:	mov    DWORD PTR ds:0x4229c6,edx
  41beed:	jmp    0x41bf37
  41bef2:	mov    DWORD PTR ds:0x4229d2,ebx
  41bef8:	mov    DWORD PTR ds:0x42294e,edx
  41befe:	jl     0x41bf1b
  41bf04:	push   0x3bbb
  41bf09:	call   DWORD PTR ds:0x42a034
  41bf0f:	sub    ecx,DWORD PTR ds:0x42293a
  41bf15:	sbb    DWORD PTR ds:0x4229b2,ebx
  41bf1b:	or     ecx,DWORD PTR ds:0x4229be
  41bf21:	and    DWORD PTR ds:0x4228ea,0x3818
  41bf2b:	sbb    DWORD PTR ds:0x42296e,0x49eb
  41bf35:	adc    ecx,ecx
  41bf37:	mov    ecx,DWORD PTR [ebp-0x24]
  41bf3a:	mov    edx,DWORD PTR [ebp-0x20]
  41bf3d:	mov    esi,DWORD PTR [ebp-0x1c]
  41bf40:	add    eax,edx
  41bf42:	mov    edx,DWORD PTR [ebp-0x10]
  41bf45:	adc    ecx,esi
  41bf47:	mov    esi,DWORD PTR [ebp-0xc]
  41bf4a:	or     ecx,0x142d
  41bf50:	or     eax,0x26da
  41bf55:	add    eax,0x4b35
  41bf5a:	adc    ecx,0x509e
  41bf60:	xor    eax,edx
  41bf62:	xor    ecx,esi
  41bf64:	add    eax,0x5ec6
  41bf69:	mov    DWORD PTR [ebp-0x40],eax
  41bf6c:	adc    ecx,0x3421
  41bf72:	mov    DWORD PTR [ebp-0x3c],ecx
  41bf75:	mov    DWORD PTR [ebp-0x38],0x4edc
  41bf7c:	mov    DWORD PTR [ebp-0x34],0x733f
  41bf83:	mov    DWORD PTR [ebp-0x30],0x58e
  41bf8a:	mov    DWORD PTR [ebp-0x2c],0x43b2
  41bf91:	mov    DWORD PTR [ebp-0x10],0x69531b9
  41bf98:	mov    DWORD PTR [ebp-0xc],0x0
  41bf9f:	mov    DWORD PTR [ebp-0x20],0x55d
  41bfa6:	mov    DWORD PTR [ebp-0x1c],0xa30
  41bfad:	mov    DWORD PTR [ebp-0x28],0x1f62
  41bfb4:	mov    DWORD PTR [ebp-0x24],0x677b
  41bfbb:	mov    eax,DWORD PTR [ebp-0x28]
  41bfbe:	mov    ecx,DWORD PTR [ebp-0x24]
  41bfc1:	mov    edx,DWORD PTR [ebp-0x20]
  41bfc4:	mov    esi,DWORD PTR [ebp-0x1c]
  41bfc7:	and    eax,edx
  41bfc9:	mov    edx,DWORD PTR [ebp-0x10]
  41bfcc:	and    ecx,esi
  41bfce:	mov    esi,DWORD PTR [ebp-0xc]
  41bfd1:	push   esi
  41bfd2:	push   edx
  41bfd3:	push   ecx
  41bfd4:	push   eax
  41bfd5:	call   0x421ad6
  41bfda:	push   0x353c
  41bfdf:	push   0x45cf
  41bfe4:	push   edx
  41bfe5:	push   eax
  41bfe6:	call   0x41df91
  41bfeb:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfee:	mov    esi,DWORD PTR [ebp-0x2c]
  41bff1:	add    eax,ecx
  41bff3:	mov    ecx,DWORD PTR [ebp-0x38]
  41bff6:	adc    edx,esi
  41bff8:	mov    esi,DWORD PTR [ebp-0x34]
  41bffb:	and    eax,ecx
  41bffd:	mov    ecx,DWORD PTR [ebp-0x40]
  41c000:	and    edx,esi
  41c002:	mov    esi,DWORD PTR [ebp-0x3c]
  41c005:	cmp    ecx,eax
  41c007:	jne    0x41c015
  41c00d:	cmp    esi,edx
  41c00f:	je     0x41c148
  41c015:	mov    DWORD PTR [ebp-0x40],0x5f3f50d6
  41c01c:	mov    DWORD PTR [ebp-0x3c],0x1
  41c023:	mov    eax,DWORD PTR [ebp-0x40]
  41c026:	mov    ecx,DWORD PTR [ebp-0x3c]
  41c029:	push   ecx
  41c02a:	push   eax
  41c02b:	push   0x7850
  41c030:	push   0x5329
  41c035:	call   0x421ad6
  41c03a:	xor    eax,0x100
  41c03f:	xor    edx,0x201
  41c045:	or     eax,0x76ef
  41c04a:	or     edx,0x5df4
  41c050:	mov    DWORD PTR [ebp-0x40],eax
  41c053:	mov    DWORD PTR [ebp-0x3c],edx
  41c056:	mov    eax,ds:0x42247c
  41c05b:	cmp    eax,0x7cd80819
  41c060:	jne    0x41c148
  41c066:	mov    eax,DWORD PTR [ebp-0x18]
  41c069:	mov    ecx,DWORD PTR [ebp-0x14]
  41c06c:	mov    edx,DWORD PTR [ebp-0x18]
  41c06f:	mov    esi,DWORD PTR [ebp-0x14]
  41c072:	shrd   eax,ecx,0x2
  41c076:	shl    edx,0x1e
  41c079:	mov    edx,DWORD PTR ds:0x422268
  41c07f:	mov    edx,DWORD PTR [edx+0x1a8]
  41c085:	xor    esi,esi
  41c087:	shr    ecx,0x2
  41c08a:	mov    ecx,0x2e9a655c
  41c08f:	xor    eax,ecx
  41c091:	or     eax,esi
  41c093:	mov    DWORD PTR [edx],eax
  41c095:	mov    eax,DWORD PTR [ebp-0x18]
  41c098:	mov    edx,DWORD PTR [ebp-0x14]
  41c09b:	shrd   eax,edx,0x2
  41c09f:	shr    edx,0x2
  41c0a2:	mov    edx,DWORD PTR [ebp-0x18]
  41c0a5:	mov    esi,DWORD PTR [ebp-0x14]
  41c0a8:	xor    eax,ecx
  41c0aa:	xor    esi,esi
  41c0ac:	or     eax,esi
  41c0ae:	mov    ds:0x42247c,eax
  41c0b3:	mov    BYTE PTR [ebp-0x6],0x87
  41c0b7:	mov    BYTE PTR [ebp-0x5],0x12
  41c0bb:	mov    BYTE PTR [ebp-0x4],0x2
  41c0bf:	mov    BYTE PTR [ebp-0x3],0x93
  41c0c3:	mov    BYTE PTR [ebp-0x2],0x23
  41c0c7:	mov    BYTE PTR [ebp-0x1],0x2
  41c0cb:	mov    al,BYTE PTR [ebp-0x1]
  41c0ce:	movzx  esi,al
  41c0d1:	mov    al,BYTE PTR [ebp-0x2]
  41c0d4:	movzx  eax,al
  41c0d7:	shl    edx,0x1e
  41c0da:	cdq    
  41c0db:	idiv   esi
  41c0dd:	mov    dl,BYTE PTR [ebp-0x3]
  41c0e0:	movzx  edx,dl
  41c0e3:	movzx  eax,al
  41c0e6:	or     eax,edx
  41c0e8:	mov    dl,BYTE PTR [ebp-0x4]
  41c0eb:	movzx  esi,dl
  41c0ee:	cdq    
  41c0ef:	idiv   esi
  41c0f1:	mov    dl,BYTE PTR [ebp-0x5]
  41c0f4:	movzx  esi,dl
  41c0f7:	movzx  eax,al
  41c0fa:	cdq    
  41c0fb:	idiv   esi
  41c0fd:	movzx  edx,BYTE PTR [ebp-0x6]
  41c101:	and    eax,edx
  41c103:	mov    BYTE PTR [ebp-0x4],al
  41c106:	mov    BYTE PTR [ebp-0x5],0x66
  41c10a:	mov    BYTE PTR [ebp-0x6],0xcb
  41c10e:	mov    al,BYTE PTR [ebp-0x6]
  41c111:	mov    dl,BYTE PTR [ebp-0x5]
  41c114:	add    al,dl
  41c116:	add    al,0x48
  41c118:	mov    dl,0xe8
  41c11a:	imul   dl
  41c11c:	mov    dl,BYTE PTR [ebp-0x4]
  41c11f:	cmp    dl,al
  41c121:	ja     0x41c148
  41c127:	mov    eax,DWORD PTR [ebp-0x18]
  41c12a:	mov    edx,DWORD PTR [ebp-0x14]
  41c12d:	shrd   eax,edx,0x2
  41c131:	xor    eax,ecx
  41c133:	mov    ecx,DWORD PTR [ebp-0x18]
  41c136:	shr    edx,0x2
  41c139:	mov    edx,DWORD PTR [ebp-0x14]
  41c13c:	xor    edx,edx
  41c13e:	shl    ecx,0x1e
  41c141:	or     eax,edx
  41c143:	mov    ds:0x422370,eax
  41c148:	pop    esi
  41c149:	leave  
  41c14a:	ret    
  41c14b:	push   ebp
  41c14c:	mov    ebp,esp
  41c14e:	sub    esp,0x28
  41c151:	push   ebx
  41c152:	push   esi
  41c153:	push   edi
  41c154:	mov    DWORD PTR [ebp-0x10],0x67e2
  41c15b:	mov    DWORD PTR [ebp-0x4],0x4726
  41c162:	mov    DWORD PTR [ebp-0x8],0x580
  41c169:	mov    DWORD PTR [ebp-0xc],0x5f3e
  41c170:	mov    DWORD PTR [ebp-0x28],0x3294
  41c177:	mov    DWORD PTR [ebp-0x24],0x643
  41c17e:	mov    DWORD PTR [ebp-0x20],0x2545
  41c185:	mov    DWORD PTR [ebp-0x1c],0x43ab
  41c18c:	xor    ebx,ebx
  41c18e:	inc    ebx
  41c18f:	mov    DWORD PTR [ebp-0x18],ebx
  41c192:	mov    DWORD PTR [ebp-0x14],0x76b1
  41c199:	mov    ecx,DWORD PTR [ebp-0x8]
  41c19c:	mov    eax,DWORD PTR [ebp-0x4]
  41c19f:	sub    ecx,eax
  41c1a1:	add    ecx,DWORD PTR [ebp-0xc]
  41c1a4:	add    ecx,DWORD PTR [ebp-0x10]
  41c1a7:	imul   ecx,ecx,0x1f80
  41c1ad:	add    ecx,0x727e
  41c1b3:	xor    ecx,0x106c92f2
  41c1b9:	mov    DWORD PTR [ebp-0x8],0x113c
  41c1c0:	mov    DWORD PTR [ebp-0xc],0x3d61
  41c1c7:	mov    DWORD PTR [ebp-0x10],0x16e9
  41c1ce:	mov    DWORD PTR [ebp-0x4],0x21aa
  41c1d5:	mov    eax,DWORD PTR [ebp-0x10]
  41c1d8:	or     eax,0x3611
  41c1dd:	add    eax,DWORD PTR [ebp-0xc]
  41c1e0:	mov    edx,DWORD PTR [ebp-0x8]
  41c1e3:	and    eax,edx
  41c1e5:	mov    edx,ecx
  41c1e7:	sub    edx,eax
  41c1e9:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ec:	mov    esi,DWORD PTR ds:0x422268
  41c1f2:	mov    esi,DWORD PTR [esi+0x1cc]
  41c1f8:	add    eax,0x6772
  41c1fd:	or     eax,0x1f24
  41c202:	sub    eax,0x7046
  41c207:	xor    eax,0x497a
  41c20c:	sub    esi,eax
  41c20e:	mov    eax,DWORD PTR [ebp+0x8]
  41c211:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  41c218:	mov    BYTE PTR [esi+ecx*1],al
  41c21b:	mov    eax,DWORD PTR [ebp-0x14]
  41c21e:	mov    esi,DWORD PTR [ebp-0x18]
  41c221:	and    eax,0x2389
  41c226:	xor    eax,0x695
  41c22b:	xor    edx,edx
  41c22d:	div    esi
  41c22f:	lea    ecx,[ecx+eax*1-0x2413]
  41c236:	mov    eax,DWORD PTR [ebp-0x1c]
  41c239:	add    eax,DWORD PTR [ebp-0x20]
  41c23c:	mov    edx,DWORD PTR [ebp-0x24]
  41c23f:	and    eax,edx
  41c241:	mov    edx,DWORD PTR [ebp-0x28]
  41c244:	imul   eax,edx
  41c247:	mov    edx,0xd0c8f
  41c24c:	sub    edx,eax
  41c24e:	cmp    ecx,edx
  41c250:	jbe    0x41c1b9
  41c256:	push   0x2
  41c258:	pop    eax
  41c259:	mov    DWORD PTR [ebp-0x1c],eax
  41c25c:	mov    DWORD PTR [ebp-0x20],ebx
  41c25f:	mov    DWORD PTR [ebp-0x24],0x5
  41c266:	mov    DWORD PTR [ebp-0x28],0x6686
  41c26d:	mov    DWORD PTR [ebp-0x8],0x7cf1
  41c274:	mov    DWORD PTR [ebp-0x4],eax
  41c277:	mov    DWORD PTR [ebp+0x8],0x739a
  41c27e:	mov    DWORD PTR [ebp-0xc],0xf3a
  41c285:	xor    edx,edx
  41c287:	mov    DWORD PTR [ebp-0x10],0x429
  41c28e:	mov    eax,DWORD PTR [ebp-0x28]
  41c291:	mov    ecx,DWORD PTR [ebp-0x24]
  41c294:	sub    eax,0x175c
  41c299:	div    ecx
  41c29b:	mov    ecx,DWORD PTR [ebp-0x20]
  41c29e:	xor    edx,edx
  41c2a0:	mov    edi,0x4db5
  41c2a5:	div    ecx
  41c2a7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c2aa:	xor    edx,edx
  41c2ac:	div    ecx
  41c2ae:	xor    edx,edx
  41c2b0:	mov    ecx,eax
  41c2b2:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b5:	imul   ecx,ecx,0x2e01
  41c2bb:	mov    esi,DWORD PTR [ebp-0x4]
  41c2be:	add    eax,edi
  41c2c0:	div    esi
  41c2c2:	mov    edx,DWORD PTR [ebp-0x8]
  41c2c5:	mov    esi,0x940a7
  41c2ca:	sub    ecx,0x16bea86
  41c2d0:	sub    eax,edx
  41c2d2:	xor    edx,edx
  41c2d4:	div    esi
  41c2d6:	mov    esi,0xdbd
  41c2db:	add    eax,esi
  41c2dd:	cmp    ecx,eax
  41c2df:	jae    0x41c3a0
  41c2e5:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  41c2ec:	mov    DWORD PTR [ebp-0x20],0x383e
  41c2f3:	mov    DWORD PTR [ebp-0x24],0x3a3a
  41c2fa:	mov    DWORD PTR [ebp-0x14],0x13cd
  41c301:	xor    edx,edx
  41c303:	mov    DWORD PTR [ebp-0x18],0x187
  41c30a:	mov    DWORD PTR [ebp-0x28],0x3224
  41c311:	mov    eax,DWORD PTR [ebp-0x28]
  41c314:	push   0x6
  41c316:	pop    ebx
  41c317:	div    ebx
  41c319:	mov    edx,eax
  41c31b:	mov    eax,ds:0x422268
  41c320:	mov    eax,DWORD PTR [eax+0x1d0]
  41c326:	sub    eax,edx
  41c328:	mov    edx,DWORD PTR [ebp-0x24]
  41c32b:	mov    ebx,DWORD PTR [ebp-0x20]
  41c32e:	imul   edx,ebx
  41c331:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c334:	xor    edx,ebx
  41c336:	sub    edx,0x26bd
  41c33c:	add    eax,ecx
  41c33e:	and    edx,0x7126
  41c344:	mov    ebx,ecx
  41c346:	sub    ebx,edx
  41c348:	mov    edx,DWORD PTR [ebp-0x18]
  41c34b:	sub    eax,edx
  41c34d:	mov    edx,DWORD PTR [ebp-0x14]
  41c350:	sub    eax,edx
  41c352:	mov    edx,DWORD PTR [ebp+0xc]
  41c355:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  41c35c:	mov    BYTE PTR [eax-0xbb5],dl
  41c362:	mov    eax,DWORD PTR [ebp-0x10]
  41c365:	xor    eax,0xffffe1ce
  41c36a:	add    eax,DWORD PTR [ebp-0xc]
  41c36d:	xor    edx,edx
  41c36f:	and    eax,0x6d33
  41c374:	lea    ecx,[ecx+eax*1-0x6520]
  41c37b:	mov    eax,DWORD PTR [ebp+0x8]
  41c37e:	mov    ebx,DWORD PTR [ebp-0x4]
  41c381:	add    eax,edi
  41c383:	div    ebx
  41c385:	mov    edx,DWORD PTR [ebp-0x8]
  41c388:	mov    ebx,0x940a7
  41c38d:	sub    eax,edx
  41c38f:	xor    edx,edx
  41c391:	div    ebx
  41c393:	add    eax,esi
  41c395:	cmp    ecx,eax
  41c397:	jb     0x41c2e5
  41c39d:	xor    ebx,ebx
  41c39f:	inc    ebx
  41c3a0:	mov    DWORD PTR [ebp+0xc],0x77bd
  41c3a7:	mov    DWORD PTR [ebp+0x8],0x4f2a
  41c3ae:	mov    DWORD PTR [ebp-0x8],0x4738
  41c3b5:	mov    DWORD PTR [ebp-0xc],0x6c4e
  41c3bc:	mov    DWORD PTR [ebp-0x10],0x7f0d
  41c3c3:	mov    DWORD PTR [ebp-0x14],0x64ec
  41c3ca:	mov    DWORD PTR [ebp-0x18],0x1984
  41c3d1:	mov    DWORD PTR [ebp-0x1c],0x293
  41c3d8:	mov    eax,DWORD PTR [ebp+0x8]
  41c3db:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3de:	add    eax,0x1ef2
  41c3e3:	and    eax,ecx
  41c3e5:	xor    eax,0x7240
  41c3ea:	mov    ecx,0x7aaa
  41c3ef:	sub    ecx,eax
  41c3f1:	mov    DWORD PTR [ebp+0xc],0x8d3
  41c3f8:	mov    DWORD PTR [ebp+0x8],0x2392
  41c3ff:	mov    DWORD PTR [ebp-0x20],ebx
  41c402:	mov    DWORD PTR [ebp-0x24],0x338f
  41c409:	mov    DWORD PTR [ebp-0x28],0x61c9
  41c410:	mov    eax,DWORD PTR [ebp+0x8]
  41c413:	mov    edx,DWORD PTR [ebp+0xc]
  41c416:	imul   eax,edx
  41c419:	xor    eax,0x40a0
  41c41e:	or     eax,0x1a48
  41c423:	xor    eax,0x139ddb0
  41c428:	mov    esi,ecx
  41c42a:	sub    esi,eax
  41c42c:	mov    eax,DWORD PTR [ebp-0x28]
  41c42f:	mov    edx,DWORD PTR [ebp-0x24]
  41c432:	mov    edi,DWORD PTR [ebp-0x20]
  41c435:	or     eax,0x1cc2
  41c43a:	sub    eax,edx
  41c43c:	xor    edx,edx
  41c43e:	div    edi
  41c440:	mov    edx,DWORD PTR ds:0x422268
  41c446:	mov    edx,DWORD PTR [edx+0x1d4]
  41c44c:	sub    edx,eax
  41c44e:	mov    eax,DWORD PTR [ebp+0x10]
  41c451:	mov    al,BYTE PTR [esi+eax*1]
  41c454:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  41c45b:	mov    eax,DWORD PTR [ebp-0x1c]
  41c45e:	mov    edx,DWORD PTR [ebp-0x18]
  41c461:	imul   eax,edx
  41c464:	mov    edx,DWORD PTR [ebp-0x14]
  41c467:	imul   eax,eax,0x262b
  41c46d:	or     eax,edx
  41c46f:	mov    edx,DWORD PTR [ebp-0x10]
  41c472:	or     eax,edx
  41c474:	xor    eax,0x59f6
  41c479:	lea    ecx,[ecx+eax*1+0x350559e6]
  41c480:	mov    eax,DWORD PTR [ebp-0xc]
  41c483:	and    eax,0xddc
  41c488:	add    eax,DWORD PTR [ebp-0x8]
  41c48b:	xor    eax,0x46e3
  41c490:	add    eax,0x50eb
  41c495:	cmp    ecx,eax
  41c497:	jne    0x41c3f1
  41c49d:	pop    edi
  41c49e:	pop    esi
  41c49f:	pop    ebx
  41c4a0:	leave  
  41c4a1:	ret    0xc
  41c4a4:	push   ebp
  41c4a5:	mov    ebp,esp
  41c4a7:	sub    esp,0xec
  41c4ad:	push   ebx
  41c4ae:	push   esi
  41c4af:	mov    DWORD PTR [ebp-0x8],0x548e
  41c4b6:	mov    DWORD PTR [ebp-0x4],0x61c2
  41c4bd:	mov    eax,DWORD PTR [ebp-0x4]
  41c4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41c4c3:	add    eax,0x1ca5
  41c4c8:	or     eax,ecx
  41c4ca:	mov    ecx,DWORD PTR ds:0x422268
  41c4d0:	lea    eax,[eax+ecx*1-0x7eef]
  41c4d7:	mov    DWORD PTR [ebp-0x5c],eax
  41c4da:	mov    DWORD PTR [ebp-0x4],0x8ea
  41c4e1:	mov    DWORD PTR [ebp-0x8],0x5759
  41c4e8:	mov    eax,DWORD PTR [ebp-0x8]
  41c4eb:	mov    ecx,DWORD PTR [ebp-0x4]
  41c4ee:	and    eax,0x27f6
  41c4f3:	xor    eax,ecx
  41c4f5:	mov    ecx,DWORD PTR ds:0x42239c
  41c4fb:	imul   eax,eax,0x18
  41c4fe:	xor    eax,0x17970
  41c503:	lea    eax,[ebp+eax*1-0x54]
  41c507:	mov    DWORD PTR [eax],ecx
  41c509:	mov    DWORD PTR [ebp-0x4],0x7584
  41c510:	mov    DWORD PTR [ebp-0x8],0x7c9f
  41c517:	mov    eax,DWORD PTR [ebp-0x8]
  41c51a:	xor    edx,edx
  41c51c:	push   0x3
  41c51e:	pop    ecx
  41c51f:	div    ecx
  41c521:	mov    ecx,DWORD PTR [ebp-0x4]
  41c524:	xor    edx,edx
  41c526:	push   0x2
  41c528:	add    eax,0x14d3
  41c52d:	and    eax,ecx
  41c52f:	mov    ecx,0x6404
  41c534:	sub    ecx,eax
  41c536:	mov    DWORD PTR [ebp-0x74],ecx
  41c539:	mov    DWORD PTR [ebp-0xc],0x13b5
  41c540:	mov    DWORD PTR [ebp-0x8],0x2e54
  41c547:	mov    DWORD PTR [ebp-0x4],0x2f11
  41c54e:	mov    eax,DWORD PTR [ebp-0x8]
  41c551:	mov    ecx,DWORD PTR [ebp-0x4]
  41c554:	lea    eax,[ecx+eax*1-0x65ec]
  41c55b:	mov    ecx,0x5e208
  41c560:	div    ecx
  41c562:	mov    ecx,DWORD PTR [ebp-0xc]
  41c565:	lea    eax,[eax+ecx*1+0x40c7]
  41c56c:	mov    DWORD PTR [ebp-0x24],eax
  41c56f:	mov    DWORD PTR [ebp-0x4],0x1bc6
  41c576:	mov    DWORD PTR [ebp-0x8],0x16ac
  41c57d:	mov    DWORD PTR [ebp-0xc],0x2185
  41c584:	mov    eax,DWORD PTR [ebp-0xc]
  41c587:	mov    ecx,DWORD PTR [ebp-0x8]
  41c58a:	xor    eax,0x1f75
  41c58f:	sub    eax,ecx
  41c591:	mov    ecx,DWORD PTR [ebp-0x4]
  41c594:	sub    eax,ecx
  41c596:	xor    eax,0xc3e
  41c59b:	mov    DWORD PTR [ebp-0x58],eax
  41c59e:	mov    DWORD PTR [ebp-0x14],0x66bd
  41c5a5:	pop    ecx
  41c5a6:	mov    DWORD PTR [ebp-0x4],ecx
  41c5a9:	mov    DWORD PTR [ebp-0x8],0x3374
  41c5b0:	mov    DWORD PTR [ebp-0xc],0x3c31
  41c5b7:	mov    eax,DWORD PTR [ebp-0xc]
  41c5ba:	mov    edx,DWORD PTR [ebp-0x8]
  41c5bd:	mov    esi,DWORD PTR [ebp-0x4]
  41c5c0:	xor    eax,edx
  41c5c2:	xor    edx,edx
  41c5c4:	div    esi
  41c5c6:	mov    edx,DWORD PTR [ebp-0x14]
  41c5c9:	and    eax,edx
  41c5cb:	sub    eax,0x680
  41c5d0:	mov    DWORD PTR [ebp-0x24],eax
  41c5d3:	mov    DWORD PTR [ebp-0x30],0x5f68
  41c5da:	mov    DWORD PTR [ebp-0x2c],0x398b
  41c5e1:	mov    DWORD PTR [ebp-0x4],0x5034
  41c5e8:	mov    DWORD PTR [ebp-0x8],0x7cbf
  41c5ef:	mov    DWORD PTR [ebp-0xc],0x4f6c
  41c5f6:	mov    DWORD PTR [ebp-0x14],0xee2
  41c5fd:	mov    eax,DWORD PTR [ebp-0x14]
  41c600:	add    eax,DWORD PTR [ebp-0xc]
  41c603:	mov    edx,DWORD PTR [ebp-0x8]
  41c606:	xor    eax,edx
  41c608:	mov    edx,DWORD PTR [ebp-0x4]
  41c60b:	or     eax,edx
  41c60d:	mov    edx,DWORD PTR [ebp-0x2c]
  41c610:	or     eax,edx
  41c612:	mov    edx,DWORD PTR [ebp-0x30]
  41c615:	and    eax,edx
  41c617:	mov    edx,0x5b68
  41c61c:	sub    edx,eax
  41c61e:	mov    DWORD PTR [ebp-0x24],edx
  41c621:	mov    DWORD PTR [ebp-0x48],0x3308
  41c628:	mov    DWORD PTR [ebp-0x44],0x59a4
  41c62f:	mov    DWORD PTR [ebp-0x38],0x2775
  41c636:	mov    DWORD PTR [ebp-0x34],0x4da
  41c63d:	mov    DWORD PTR [ebp-0x40],0x49d8
  41c644:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  41c64b:	mov    DWORD PTR [ebp-0x28],0x338c
  41c652:	mov    DWORD PTR [ebp-0x24],0x68ed
  41c659:	mov    DWORD PTR [ebp-0x20],0x2a7b
  41c660:	mov    DWORD PTR [ebp-0x1c],0x718f
  41c667:	mov    eax,DWORD PTR [ebp-0x20]
  41c66a:	mov    edx,DWORD PTR [ebp-0x1c]
  41c66d:	mov    esi,DWORD PTR [ebp-0x28]
  41c670:	mov    ebx,DWORD PTR [ebp-0x24]
  41c673:	add    eax,0xffffc948
  41c678:	adc    edx,0xffff87b0
  41c67e:	or     eax,esi
  41c680:	mov    esi,DWORD PTR [ebp-0x40]
  41c683:	or     eax,esi
  41c685:	or     edx,ebx
  41c687:	mov    ebx,DWORD PTR [ebp-0x3c]
  41c68a:	mov    esi,DWORD PTR [ebp-0x38]
  41c68d:	or     edx,ebx
  41c68f:	mov    ebx,DWORD PTR [ebp-0x34]
  41c692:	sub    eax,esi
  41c694:	mov    esi,DWORD PTR [ebp-0x48]
  41c697:	sbb    edx,ebx
  41c699:	mov    ebx,DWORD PTR [ebp-0x44]
  41c69c:	or     eax,esi
  41c69e:	or     edx,ebx
  41c6a0:	add    eax,0x89b
  41c6a5:	mov    DWORD PTR [ebp-0x20],eax
  41c6a8:	adc    edx,0x5a
  41c6ab:	mov    DWORD PTR [ebp-0x1c],edx
  41c6ae:	mov    DWORD PTR [ebp-0x80],0xfa4
  41c6b5:	mov    DWORD PTR [ebp-0x70],0x618e
  41c6bc:	mov    DWORD PTR [ebp-0x6c],0x811
  41c6c3:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  41c6cd:	mov    DWORD PTR [ebp-0x94],0xe82c1
  41c6d7:	mov    DWORD PTR [ebp-0x88],0x58ff
  41c6e1:	mov    DWORD PTR [ebp-0x84],0x7394
  41c6eb:	xor    eax,eax
  41c6ed:	inc    eax
  41c6ee:	mov    DWORD PTR [ebp-0x64],eax
  41c6f1:	mov    DWORD PTR [ebp-0x8],0x5f59
  41c6f8:	mov    DWORD PTR [ebp-0x4],0x652b
  41c6ff:	mov    DWORD PTR [ebp-0xc],0xf43
  41c706:	mov    DWORD PTR [ebp-0x14],0x22dc
  41c70d:	mov    DWORD PTR [ebp-0x2c],0x45d4
  41c714:	mov    DWORD PTR [ebp-0x30],0x28e1
  41c71b:	mov    DWORD PTR [ebp-0x7c],0x5e09
  41c722:	mov    DWORD PTR [ebp-0x50],0x3910
  41c729:	mov    DWORD PTR [ebp-0x3c],0x5c97
  41c730:	mov    DWORD PTR [ebp-0x24],0x6111
  41c737:	mov    DWORD PTR [ebp-0x78],ecx
  41c73a:	mov    DWORD PTR [ebp-0x34],ecx
  41c73d:	mov    DWORD PTR [ebp-0x44],0x207a
  41c744:	mov    DWORD PTR [ebp-0x60],eax
  41c747:	mov    DWORD PTR [ebp-0x8c],0x7840
  41c751:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  41c758:	mov    eax,DWORD PTR [ebp-0x30]
  41c75b:	or     eax,0x70c5
  41c760:	add    eax,DWORD PTR [ebp-0x2c]
  41c763:	mov    ecx,DWORD PTR [ebp-0x14]
  41c766:	or     eax,ecx
  41c768:	mov    ecx,0xce40
  41c76d:	sub    ecx,eax
  41c76f:	mov    eax,DWORD PTR [ebp-0xc]
  41c772:	sub    ecx,eax
  41c774:	imul   ecx,ecx,0x7480
  41c77a:	add    ecx,DWORD PTR [ebp-0x58]
  41c77d:	mov    eax,DWORD PTR [ebp-0x8]
  41c780:	push   ecx
  41c781:	mov    ecx,DWORD PTR [ebp-0x4]
  41c784:	lea    eax,[ecx+eax*1-0x1e6d]
  41c78b:	mov    ecx,DWORD PTR [ebp-0x64]
  41c78e:	xor    edx,edx
  41c790:	div    ecx
  41c792:	mov    ecx,DWORD PTR [ebp-0x74]
  41c795:	lea    eax,[eax+ecx*1-0xa617]
  41c79c:	push   eax
  41c79d:	mov    eax,DWORD PTR [ebp-0x88]
  41c7a3:	mov    ecx,DWORD PTR [ebp-0x84]
  41c7a9:	push   0x770a
  41c7ae:	push   0x2a0c
  41c7b3:	push   ecx
  41c7b4:	push   eax
  41c7b5:	call   0x41df91
  41c7ba:	mov    ecx,DWORD PTR [ebp-0x98]
  41c7c0:	mov    esi,DWORD PTR [ebp-0x94]
  41c7c6:	push   esi
  41c7c7:	push   ecx
  41c7c8:	or     edx,0x615d
  41c7ce:	or     eax,0x455c
  41c7d3:	push   edx
  41c7d4:	push   eax
  41c7d5:	call   0x421ad6
  41c7da:	mov    ecx,DWORD PTR [ebp-0x70]
  41c7dd:	mov    edx,DWORD PTR [ebp-0x6c]
  41c7e0:	xor    eax,ecx
  41c7e2:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7e5:	mov    edx,DWORD PTR [ebp-0x1c]
  41c7e8:	mov    esi,DWORD PTR [ebp-0x80]
  41c7eb:	and    eax,0xb49
  41c7f0:	add    esi,0x629b
  41c7f6:	lea    eax,[eax+ecx*1-0xfd]
  41c7fd:	xor    esi,0x4994
  41c803:	push   eax
  41c804:	lea    esi,[ebp+esi*1-0x3c93]
  41c80b:	call   0x41c9b7
  41c810:	mov    ecx,eax
  41c812:	mov    eax,DWORD PTR [ebp-0x50]
  41c815:	mov    edx,DWORD PTR [ebp-0x7c]
  41c818:	sub    eax,0x161
  41c81d:	xor    eax,edx
  41c81f:	imul   eax,eax,0x5151
  41c825:	add    eax,0x3901
  41c82a:	xor    eax,0x40c2
  41c82f:	xor    edx,edx
  41c831:	mov    esi,0x218f6c45
  41c836:	div    esi
  41c838:	cmp    ecx,eax
  41c83a:	jne    0x41c9a7
  41c840:	mov    ecx,DWORD PTR [ebp-0x78]
  41c843:	xor    edx,edx
  41c845:	mov    eax,0x209c
  41c84a:	div    ecx
  41c84c:	mov    ecx,DWORD PTR ds:0x422268
  41c852:	mov    ecx,DWORD PTR [ecx+0x1a8]
  41c858:	xor    edx,edx
  41c85a:	sub    ecx,eax
  41c85c:	mov    eax,DWORD PTR [ebp-0x4c]
  41c85f:	xor    eax,0x3daa
  41c864:	sub    eax,0x3375
  41c869:	or     eax,0x6931
  41c86e:	lea    eax,[ebp+eax*1-0x6c25]
  41c875:	push   eax
  41c876:	mov    eax,DWORD PTR [ebp-0x8c]
  41c87c:	push   0x18
  41c87e:	pop    esi
  41c87f:	div    esi
  41c881:	mov    esi,DWORD PTR [ebp-0x60]
  41c884:	xor    edx,edx
  41c886:	div    esi
  41c888:	mov    edx,DWORD PTR [ebp-0x44]
  41c88b:	mov    esi,DWORD PTR [ebp-0x34]
  41c88e:	xor    eax,edx
  41c890:	xor    edx,edx
  41c892:	div    esi
  41c894:	imul   eax,eax,0x7d2a
  41c89a:	sub    eax,0x928ded7
  41c89f:	push   eax
  41c8a0:	mov    eax,ds:0x422268
  41c8a5:	add    eax,0xaa
  41c8aa:	push   eax
  41c8ab:	mov    eax,DWORD PTR [ebp-0x3c]
  41c8ae:	sub    ecx,eax
  41c8b0:	mov    eax,DWORD PTR [ebp-0x24]
  41c8b3:	push   DWORD PTR [ecx+eax*1+0xbd4]
  41c8ba:	call   0x41f817
  41c8bf:	mov    DWORD PTR [ebp-0x4],eax
  41c8c2:	mov    ecx,DWORD PTR ds:0x422370
  41c8c8:	lea    eax,[ebp+0x4]
  41c8cb:	mov    DWORD PTR [ecx*4+0x422368],eax
  41c8d2:	inc    DWORD PTR ds:0x422370
  41c8d8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8db:	mov    eax,DWORD PTR [ebp-0x4]
  41c8de:	xor    edx,edx
  41c8e0:	shld   edx,eax,0x2
  41c8e4:	shl    eax,0x2
  41c8e7:	mov    ecx,0xba699573
  41c8ec:	mov    esi,0x9c0a89d8
  41c8f1:	xor    eax,ecx
  41c8f3:	xor    edx,esi
  41c8f5:	cmp    eax,ecx
  41c8f7:	jne    0x41c911
  41c8fd:	cmp    edx,esi
  41c8ff:	jne    0x41c911
  41c905:	mov    eax,0xba699577
  41c90a:	mov    edx,esi
  41c90c:	jmp    0x41c9b1
  41c911:	lea    eax,[ebp-0x10]
  41c914:	mov    DWORD PTR [ebp-0x9c],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x54]
  41c91d:	mov    DWORD PTR [ebp-0x10],eax
  41c920:	mov    eax,DWORD PTR [ebp-0x10]
  41c923:	mov    ecx,DWORD PTR [ebp-0x4]
  41c926:	sub    eax,ecx
  41c928:	mov    DWORD PTR [ebp-0x10],eax
  41c92b:	mov    eax,DWORD PTR [ebp-0x20]
  41c92e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c931:	sub    DWORD PTR [ebp-0x10],eax
  41c934:	mov    eax,DWORD PTR [ebp-0x4]
  41c937:	mov    DWORD PTR [eax],0x658776e9
  41c93d:	mov    DWORD PTR [eax+0x4],0xab756547
  41c944:	mov    eax,DWORD PTR [ebp-0x10]
  41c947:	mov    ecx,DWORD PTR [ebp-0x4]
  41c94a:	mov    DWORD PTR [ecx+0x1],eax
  41c94d:	mov    eax,ds:0x4220e4
  41c952:	push   DWORD PTR [eax]
  41c954:	push   DWORD PTR ds:0x422358
  41c95a:	push   DWORD PTR ds:0x4220ec
  41c960:	push   DWORD PTR ds:0x422338
  41c966:	push   DWORD PTR ds:0x4223ac
  41c96c:	push   0xa3e69a99
  41c971:	push   0xa3e69a9d
  41c976:	push   DWORD PTR [ebp-0x5c]
  41c979:	mov    eax,DWORD PTR [ebp-0x4]
  41c97c:	call   eax
  41c97e:	mov    eax,DWORD PTR [edi]
  41c980:	mov    eax,DWORD PTR [ebp+0x8]
  41c983:	push   DWORD PTR [eax]
  41c985:	call   0x41cba7
  41c98a:	mov    eax,ds:0x422268
  41c98f:	push   0x4
  41c991:	add    eax,0x1dc
  41c996:	push   eax
  41c997:	push   edi
  41c998:	call   0x41d2ea
  41c99d:	mov    eax,0xba69957b
  41c9a2:	jmp    0x41c90a
  41c9a7:	mov    eax,0xba699573
  41c9ac:	mov    edx,0x9c0a89d8
  41c9b1:	pop    esi
  41c9b2:	pop    ebx
  41c9b3:	leave  
  41c9b4:	ret    0x4
  41c9b7:	push   ebp
  41c9b8:	mov    ebp,esp
  41c9ba:	sub    esp,0x20
  41c9bd:	push   ebx
  41c9be:	push   edi
  41c9bf:	mov    DWORD PTR [ebp-0x8],0x522e
  41c9c6:	mov    DWORD PTR [ebp-0x4],0x3dbd
  41c9cd:	mov    DWORD PTR [ebp-0x10],0x53f1
  41c9d4:	mov    DWORD PTR [ebp-0xc],0x631b
  41c9db:	mov    DWORD PTR [ebp-0x18],0x524d
  41c9e2:	mov    DWORD PTR [ebp-0x14],0x1600
  41c9e9:	mov    eax,DWORD PTR [ebp-0x18]
  41c9ec:	mov    ecx,DWORD PTR [ebp-0x14]
  41c9ef:	mov    edx,DWORD PTR [ebp-0x10]
  41c9f2:	mov    edi,DWORD PTR [ebp-0xc]
  41c9f5:	push   edi
  41c9f6:	push   edx
  41c9f7:	push   ecx
  41c9f8:	push   eax
  41c9f9:	call   0x41df91
  41c9fe:	mov    ecx,DWORD PTR [ebp-0x8]
  41ca01:	mov    edi,DWORD PTR [ebp-0x4]
  41ca04:	add    eax,0x1dc8
  41ca09:	adc    edx,0x6fbf
  41ca0f:	and    edx,edi
  41ca11:	push   0x1061
  41ca16:	and    eax,ecx
  41ca18:	or     edx,0x23ff
  41ca1e:	push   0x4000022f
  41ca23:	or     eax,0x58c4
  41ca28:	xor    edx,0x7a7a
  41ca2e:	xor    eax,0x5278
  41ca33:	push   edx
  41ca34:	push   eax
  41ca35:	call   0x421ad6
  41ca3a:	mov    DWORD PTR [esi],eax
  41ca3c:	mov    DWORD PTR [ebp-0x20],0x3354
  41ca43:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  41ca4a:	mov    DWORD PTR [ebp-0x18],0x3d36
  41ca51:	mov    DWORD PTR [ebp-0x14],0x51ef
  41ca58:	xor    edi,edi
  41ca5a:	mov    DWORD PTR [ebp-0xc],0x3358
  41ca61:	push   0xc9f
  41ca66:	inc    edi
  41ca67:	mov    DWORD PTR [ebp-0x4],edi
  41ca6a:	mov    eax,DWORD PTR [ebp-0x18]
  41ca6d:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca70:	push   0x1c19
  41ca75:	push   ecx
  41ca76:	push   eax
  41ca77:	call   0x41df91
  41ca7c:	mov    ecx,DWORD PTR [ebp-0x20]
  41ca7f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41ca82:	or     eax,ecx
  41ca84:	or     edx,ebx
  41ca86:	push   0x20fa
  41ca8b:	add    eax,0x7fac
  41ca90:	push   0x1cd48ab
  41ca95:	adc    edx,0x133b
  41ca9b:	push   edx
  41ca9c:	push   eax
  41ca9d:	call   0x421ad6
  41caa2:	mov    ebx,DWORD PTR [ebp-0x4]
  41caa5:	lea    ecx,[eax-0x5d40]
  41caab:	xor    edx,edx
  41caad:	mov    eax,0x16c2
  41cab2:	div    ebx
  41cab4:	mov    edx,DWORD PTR [ebp-0xc]
  41cab7:	sub    eax,edx
  41cab9:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  41cac0:	mov    DWORD PTR [ebp-0x14],0x6af0
  41cac7:	mov    DWORD PTR [ebp-0x4],edi
  41caca:	mov    DWORD PTR [ebp-0xc],0x2c8a
  41cad1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cad4:	mov    eax,0x4401
  41cad9:	sub    eax,ecx
  41cadb:	mov    ecx,DWORD PTR [ebp-0x4]
  41cade:	xor    edx,edx
  41cae0:	div    ecx
  41cae2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cae5:	xor    eax,0xa80
  41caea:	or     eax,0x343b
  41caef:	or     eax,ecx
  41caf1:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf4:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  41cafb:	mov    DWORD PTR [ebp-0xc],0x327f
  41cb02:	mov    DWORD PTR [ebp-0x14],0x5215
  41cb09:	mov    DWORD PTR [ebp+0x8],0x2502
  41cb10:	mov    eax,DWORD PTR [ebp+0x8]
  41cb13:	add    eax,DWORD PTR [ebp-0x14]
  41cb16:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb19:	and    eax,0x2bab
  41cb1e:	lea    eax,[eax+ecx*1-0x557f]
  41cb25:	mov    ecx,DWORD PTR [ebp+0xc]
  41cb28:	mov    DWORD PTR [esi+eax*4],ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],edi
  41cb2e:	mov    DWORD PTR [ebp+0x8],0x5f40
  41cb35:	mov    DWORD PTR [ebp-0x14],0x6ba4
  41cb3c:	mov    DWORD PTR [ebp+0xc],0x7b17
  41cb43:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb46:	mov    eax,0x43d2
  41cb4b:	sub    eax,ecx
  41cb4d:	add    eax,DWORD PTR [ebp+0xc]
  41cb50:	xor    edx,edx
  41cb52:	add    eax,DWORD PTR [ebp-0x14]
  41cb55:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb58:	div    ecx
  41cb5a:	mov    ecx,DWORD PTR [ebp+0x10]
  41cb5d:	xor    edx,edx
  41cb5f:	pop    edi
  41cb60:	pop    ebx
  41cb61:	or     eax,0x67ad
  41cb66:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  41cb6d:	mov    DWORD PTR [ebp+0x10],0x517b
  41cb74:	mov    DWORD PTR [ebp+0xc],0x5d62
  41cb7b:	mov    DWORD PTR [ebp+0x8],0x41b0
  41cb82:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb85:	mov    eax,DWORD PTR [ebp+0xc]
  41cb88:	and    ecx,0x68c1
  41cb8e:	sub    ecx,0x6fd3
  41cb94:	or     ecx,eax
  41cb96:	mov    eax,DWORD PTR [ebp+0x10]
  41cb99:	imul   ecx,eax
  41cb9c:	mov    eax,0xf52840d5
  41cba1:	div    ecx
  41cba3:	leave  
  41cba4:	ret    0xc
  41cba7:	push   ebp
  41cba8:	mov    ebp,esp
  41cbaa:	sub    esp,0xc0
  41cbb0:	push   esi
  41cbb1:	mov    DWORD PTR [ebp-0x80],0x2f93
  41cbb8:	mov    DWORD PTR [ebp-0x7c],0x3321
  41cbbf:	mov    DWORD PTR [ebp-0x70],0x7d00
  41cbc6:	mov    DWORD PTR [ebp-0x6c],0xd87
  41cbcd:	mov    DWORD PTR [ebp-0x60],0x4197
  41cbd4:	mov    DWORD PTR [ebp-0x5c],0xa7d
  41cbdb:	mov    DWORD PTR [ebp-0x50],0x772d
  41cbe2:	mov    DWORD PTR [ebp-0x4c],0x37d8
  41cbe9:	mov    DWORD PTR [ebp-0x40],0x414a
  41cbf0:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41cbf7:	mov    DWORD PTR [ebp-0x30],0x136b
  41cbfe:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41cc05:	mov    DWORD PTR [ebp-0x20],0x32d8
  41cc0c:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41cc13:	mov    DWORD PTR [ebp-0xc],0x3956
  41cc1a:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41cc24:	mov    DWORD PTR [ebp-0x94],0x1
  41cc2e:	mov    DWORD PTR [ebp-0x14],0x17ab
  41cc35:	mov    DWORD PTR [ebp-0x64],0x7a3d
  41cc3c:	mov    DWORD PTR [ebp-0x54],0x378a
  41cc43:	mov    DWORD PTR [ebp-0x74],0x5a00
  41cc4a:	mov    DWORD PTR [ebp-0x24],0x1f3a
  41cc51:	mov    DWORD PTR [ebp-0x84],0x9a225
  41cc5b:	mov    DWORD PTR [ebp-0x44],0x31f8
  41cc62:	mov    DWORD PTR [ebp-0x34],0x3663
  41cc69:	mov    DWORD PTR [ebp-0xb4],0x3165
  41cc73:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  41cc7d:	mov    DWORD PTR [ebp-0xbc],0x43cc
  41cc87:	mov    DWORD PTR [ebp-0xb0],0x7564
  41cc91:	mov    DWORD PTR [ebp-0xac],0x18cf
  41cc9b:	mov    DWORD PTR [ebp-0xa0],0x3135
  41cca5:	mov    DWORD PTR [ebp-0x9c],0x568d
  41ccaf:	mov    DWORD PTR [ebp-0x90],0x11f2
  41ccb9:	mov    DWORD PTR [ebp-0x8c],0x63ea
  41ccc3:	mov    DWORD PTR [ebp-0x10],0x3066
  41ccca:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41ccd1:	push   0x7e1d
  41ccd6:	mov    DWORD PTR [ebp-0x4],0x30f4
  41ccdd:	mov    eax,DWORD PTR [ebp-0x20]
  41cce0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cce3:	push   0x5380
  41cce8:	push   ecx
  41cce9:	push   eax
  41ccea:	call   0x41df91
  41ccef:	mov    ecx,eax
  41ccf1:	mov    eax,DWORD PTR [ebp-0x30]
  41ccf4:	xor    ecx,eax
  41ccf6:	mov    esi,edx
  41ccf8:	mov    edx,DWORD PTR [ebp-0x2c]
  41ccfb:	mov    eax,DWORD PTR [ebp-0x40]
  41ccfe:	xor    esi,edx
  41cd00:	mov    edx,DWORD PTR [ebp-0x3c]
  41cd03:	xor    ecx,0xf3a
  41cd09:	or     ecx,eax
  41cd0b:	mov    eax,ds:0x422268
  41cd10:	mov    eax,DWORD PTR [eax+0x1d8]
  41cd16:	mov    eax,DWORD PTR [eax]
  41cd18:	xor    esi,0x6665
  41cd1e:	or     esi,edx
  41cd20:	add    ecx,0xef6a96a5
  41cd26:	cdq    
  41cd27:	adc    esi,0xc8b6a000
  41cd2d:	cmp    eax,ecx
  41cd2f:	jne    0x41cd3d
  41cd35:	cmp    edx,esi
  41cd37:	je     0x41cd9c
  41cd3d:	mov    eax,DWORD PTR [ebp-0x50]
  41cd40:	mov    ecx,DWORD PTR [ebp-0x4c]
  41cd43:	mov    edx,DWORD PTR [ebp-0x60]
  41cd46:	mov    esi,DWORD PTR [ebp-0x5c]
  41cd49:	add    eax,0x7818
  41cd4e:	adc    ecx,0x87
  41cd54:	or     eax,edx
  41cd56:	mov    edx,DWORD PTR [ebp-0x70]
  41cd59:	or     ecx,esi
  41cd5b:	mov    esi,DWORD PTR [ebp-0x6c]
  41cd5e:	push   esi
  41cd5f:	push   edx
  41cd60:	push   ecx
  41cd61:	push   eax
  41cd62:	call   0x41df91
  41cd67:	mov    ecx,DWORD PTR [ebp-0x80]
  41cd6a:	mov    esi,DWORD PTR [ebp-0x7c]
  41cd6d:	and    eax,ecx
  41cd6f:	mov    ecx,DWORD PTR ds:0x422268
  41cd75:	mov    ecx,DWORD PTR [ecx+0x1d0]
  41cd7b:	mov    ecx,DWORD PTR [ecx]
  41cd7d:	and    edx,esi
  41cd7f:	xor    eax,0x2b01
  41cd84:	xor    edx,0x2021
  41cd8a:	xor    esi,esi
  41cd8c:	cmp    ecx,eax
  41cd8e:	jne    0x41ceda
  41cd94:	cmp    esi,edx
  41cd96:	jne    0x41ceda
  41cd9c:	mov    eax,DWORD PTR [ebp-0xa4]
  41cda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41cda5:	add    eax,0x80ca
  41cdaa:	or     eax,ecx
  41cdac:	mov    ecx,DWORD PTR ds:0x422304
  41cdb2:	or     eax,0x686
  41cdb7:	xor    eax,0x3eec
  41cdbc:	lea    eax,[eax+ecx*1-0xc11b]
  41cdc3:	xor    DWORD PTR ds:0x4222fc,eax
  41cdc9:	mov    eax,DWORD PTR [ebp-0x64]
  41cdcc:	and    eax,0x4dff
  41cdd1:	add    eax,DWORD PTR [ebp-0x14]
  41cdd4:	mov    ecx,DWORD PTR [ebp-0x94]
  41cdda:	xor    eax,0x676c
  41cddf:	xor    edx,edx
  41cde1:	div    ecx
  41cde3:	mov    ecx,DWORD PTR [ebp-0x24]
  41cde6:	mov    edx,DWORD PTR [ebp-0x74]
  41cde9:	xor    ecx,0x6e1e
  41cdef:	imul   ecx,edx
  41cdf2:	mov    edx,DWORD PTR [ebp+0x8]
  41cdf5:	push   0x4
  41cdf7:	push   0xe4c37b20
  41cdfc:	xor    eax,0x3884
  41ce01:	mov    eax,DWORD PTR [eax+edx*1]
  41ce04:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  41ce0b:	mov    eax,DWORD PTR [ebp-0x34]
  41ce0e:	mov    edx,DWORD PTR [ebp-0xb4]
  41ce14:	lea    eax,[edx+eax*1-0x76d2]
  41ce1b:	mov    edx,DWORD PTR [ebp-0x44]
  41ce1e:	mov    esi,DWORD PTR [ebp-0x84]
  41ce24:	or     eax,edx
  41ce26:	xor    edx,edx
  41ce28:	div    esi
  41ce2a:	mov    edx,DWORD PTR [ebp-0x54]
  41ce2d:	add    eax,0x43d7
  41ce32:	xor    eax,0x5e6a
  41ce37:	add    eax,DWORD PTR [edx+ecx*1]
  41ce3a:	mov    ecx,DWORD PTR ds:0x4222fc
  41ce40:	add    DWORD PTR [eax],ecx
  41ce42:	mov    eax,DWORD PTR [ebp-0x90]
  41ce48:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ce4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41ce54:	mov    esi,DWORD PTR [ebp-0x9c]
  41ce5a:	sub    edx,eax
  41ce5c:	mov    eax,DWORD PTR [ebp-0xb0]
  41ce62:	sbb    esi,ecx
  41ce64:	mov    ecx,DWORD PTR [ebp-0xac]
  41ce6a:	xor    edx,eax
  41ce6c:	mov    eax,DWORD PTR [ebp-0xc0]
  41ce72:	xor    esi,ecx
  41ce74:	mov    ecx,DWORD PTR [ebp-0xbc]
  41ce7a:	add    edx,eax
  41ce7c:	adc    esi,ecx
  41ce7e:	add    edx,0x2313
  41ce84:	adc    esi,0x2a00
  41ce8a:	push   esi
  41ce8b:	push   edx
  41ce8c:	call   0x421ad6
  41ce91:	mov    ecx,0x1207
  41ce96:	sub    ecx,eax
  41ce98:	push   0x0
  41ce9a:	pop    eax
  41ce9b:	sbb    eax,edx
  41ce9d:	mov    edx,DWORD PTR ds:0x4222fc
  41cea3:	xor    esi,esi
  41cea5:	cmp    edx,ecx
  41cea7:	jne    0x41ceda
  41cead:	cmp    esi,eax
  41ceaf:	jne    0x41ceda
  41ceb5:	mov    eax,DWORD PTR [ebp-0x4]
  41ceb8:	mov    ecx,DWORD PTR [ebp-0x8]
  41cebb:	add    eax,0x4296
  41cec0:	shr    eax,0x2
  41cec3:	or     eax,ecx
  41cec5:	mov    ecx,DWORD PTR [ebp-0x10]
  41cec8:	xor    eax,ecx
  41ceca:	xor    eax,0x4e94
  41cecf:	add    eax,DWORD PTR ds:0x4222fc
  41ced5:	mov    ds:0x422304,eax
  41ceda:	pop    esi
  41cedb:	leave  
  41cedc:	ret    0x4
  41cedf:	push   ebp
  41cee0:	mov    ebp,esp
  41cee2:	sub    esp,0x58
  41cee5:	push   ebx
  41cee6:	push   esi
  41cee7:	push   edi
  41cee8:	mov    DWORD PTR [ebp-0x58],0x3082
  41ceef:	mov    DWORD PTR [ebp-0x54],0x37a2
  41cef6:	mov    DWORD PTR [ebp-0x50],0x49d6
  41cefd:	mov    DWORD PTR [ebp-0x4c],0x6390
  41cf04:	mov    DWORD PTR [ebp-0x48],0x40f2
  41cf0b:	mov    DWORD PTR [ebp-0x44],0x21d4
  41cf12:	mov    DWORD PTR [ebp-0x28],0x4726
  41cf19:	mov    DWORD PTR [ebp-0x24],0x221a
  41cf20:	mov    DWORD PTR [ebp-0x30],0x768c
  41cf27:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41cf2e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  41cf35:	mov    DWORD PTR [ebp-0x3c],0x94c
  41cf3c:	mov    DWORD PTR [ebp-0x38],0x4797
  41cf43:	mov    DWORD PTR [ebp-0x34],0x4439
  41cf4a:	mov    DWORD PTR [ebp-0x20],0x2531
  41cf51:	mov    esi,0x5a3e
  41cf56:	mov    DWORD PTR [ebp-0x1c],esi
  41cf59:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  41cf60:	mov    DWORD PTR [ebp-0x14],0x7
  41cf67:	mov    DWORD PTR [ebp-0x10],0xe3a
  41cf6e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  41cf75:	mov    DWORD PTR [ebp-0x8],0x6b99
  41cf7c:	mov    DWORD PTR [ebp-0x4],0x2acd
  41cf83:	mov    eax,DWORD PTR [ebp-0x10]
  41cf86:	mov    ecx,DWORD PTR [ebp-0xc]
  41cf89:	mov    eax,DWORD PTR [ebp-0x8]
  41cf8c:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf8f:	mov    eax,DWORD PTR [ebp-0x18]
  41cf92:	mov    ecx,DWORD PTR [ebp-0x14]
  41cf95:	mov    eax,DWORD PTR [ebp-0x8]
  41cf98:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf9b:	mov    edx,DWORD PTR [ebp-0x10]
  41cf9e:	mov    edi,DWORD PTR [ebp-0xc]
  41cfa1:	add    eax,edx
  41cfa3:	mov    edx,DWORD PTR [ebp-0x18]
  41cfa6:	adc    ecx,edi
  41cfa8:	mov    edi,DWORD PTR [ebp-0x14]
  41cfab:	push   edi
  41cfac:	push   edx
  41cfad:	or     ecx,0x6833
  41cfb3:	or     eax,0x6b80
  41cfb8:	push   ecx
  41cfb9:	push   eax
  41cfba:	call   0x421ad6
  41cfbf:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfc2:	mov    edi,DWORD PTR [ebp-0x1c]
  41cfc5:	and    eax,0x25cb
  41cfca:	or     eax,ecx
  41cfcc:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfcf:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cfd2:	and    edx,0x76f2
  41cfd8:	or     edx,edi
  41cfda:	xor    edx,esi
  41cfdc:	xor    eax,0x253b
  41cfe1:	shld   edx,eax,0x2
  41cfe5:	shl    eax,0x2
  41cfe8:	shr    ecx,0x1e
  41cfeb:	xor    esi,esi
  41cfed:	or     eax,ecx
  41cfef:	or     edx,esi
  41cff1:	mov    edi,0xba699573
  41cff6:	xor    eax,edi
  41cff8:	mov    DWORD PTR [ebp-0x20],eax
  41cffb:	mov    esi,0x9c0a89d8
  41d000:	xor    edx,esi
  41d002:	mov    DWORD PTR [ebp-0x1c],edx
  41d005:	mov    eax,DWORD PTR [ebp-0x38]
  41d008:	mov    ecx,DWORD PTR [ebp-0x34]
  41d00b:	mov    edx,DWORD PTR [ebp-0x40]
  41d00e:	mov    ebx,DWORD PTR [ebp-0x3c]
  41d011:	push   ebx
  41d012:	push   edx
  41d013:	push   ecx
  41d014:	push   eax
  41d015:	call   0x41df91
  41d01a:	add    eax,0x536a
  41d01f:	adc    edx,0x9573
  41d025:	push   0x12613
  41d02a:	push   0xae21daec
  41d02f:	push   edx
  41d030:	push   eax
  41d031:	call   0x421ad6
  41d036:	mov    ecx,eax
  41d038:	mov    eax,DWORD PTR [ebp-0x20]
  41d03b:	mov    ebx,DWORD PTR [ebp-0x1c]
  41d03e:	xor    ecx,0x1b8b
  41d044:	xor    edx,0x0
  41d047:	add    ecx,eax
  41d049:	mov    eax,DWORD PTR [ebp+0xc]
  41d04c:	adc    edx,ebx
  41d04e:	mov    DWORD PTR [eax],ecx
  41d050:	mov    DWORD PTR [eax+0x4],edx
  41d053:	mov    eax,DWORD PTR [ebp-0x30]
  41d056:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d059:	mov    edx,0xbdb2
  41d05e:	sub    edx,eax
  41d060:	mov    eax,DWORD PTR [ebp-0x28]
  41d063:	mov    ebx,0x4c02
  41d068:	sbb    ebx,ecx
  41d06a:	mov    ecx,DWORD PTR [ebp-0x24]
  41d06d:	sub    edx,eax
  41d06f:	mov    eax,DWORD PTR [ebp+0xc]
  41d072:	sbb    ebx,ecx
  41d074:	add    edx,DWORD PTR [eax]
  41d076:	mov    ecx,DWORD PTR [ebp-0x28]
  41d079:	adc    ebx,DWORD PTR [eax+0x4]
  41d07c:	push   0x2
  41d07e:	xor    ebx,esi
  41d080:	mov    esi,DWORD PTR [ebp-0x24]
  41d083:	pop    esi
  41d084:	sub    esi,ecx
  41d086:	mov    ecx,DWORD PTR [ebp-0x30]
  41d089:	sub    esi,ecx
  41d08b:	xor    edx,edi
  41d08d:	mov    edi,DWORD PTR [ebp-0x2c]
  41d090:	mov    ecx,DWORD PTR [ebp+0xc]
  41d093:	add    esi,DWORD PTR [ecx]
  41d095:	mov    eax,ebx
  41d097:	shrd   edx,eax,0x2
  41d09b:	xor    ecx,ecx
  41d09d:	shl    esi,0x1e
  41d0a0:	shr    eax,0x2
  41d0a3:	or     ecx,edx
  41d0a5:	xor    esi,0xc0000000
  41d0ab:	or     esi,eax
  41d0ad:	mov    DWORD PTR [ebp-0x40],ecx
  41d0b0:	push   0x0
  41d0b2:	mov    DWORD PTR [ebp-0x3c],esi
  41d0b5:	mov    eax,DWORD PTR [ebp-0x48]
  41d0b8:	mov    ecx,DWORD PTR [ebp-0x44]
  41d0bb:	push   0xae0404d3
  41d0c0:	push   ecx
  41d0c1:	push   eax
  41d0c2:	call   0x421ad6
  41d0c7:	mov    ecx,eax
  41d0c9:	mov    eax,DWORD PTR [ebp-0x50]
  41d0cc:	mov    esi,DWORD PTR [ebp-0x4c]
  41d0cf:	or     ecx,eax
  41d0d1:	mov    eax,DWORD PTR [ebp-0x40]
  41d0d4:	or     edx,esi
  41d0d6:	mov    esi,DWORD PTR [ebp-0x3c]
  41d0d9:	add    ecx,eax
  41d0db:	mov    eax,DWORD PTR [ebp-0x58]
  41d0de:	adc    edx,esi
  41d0e0:	mov    esi,DWORD PTR [ebp-0x54]
  41d0e3:	add    ecx,eax
  41d0e5:	mov    eax,DWORD PTR [ebp+0x8]
  41d0e8:	adc    edx,esi
  41d0ea:	add    ecx,0xffff55a8
  41d0f0:	pop    edi
  41d0f1:	adc    edx,0xffff64cd
  41d0f7:	pop    esi
  41d0f8:	mov    DWORD PTR [eax],ecx
  41d0fa:	mov    DWORD PTR [eax+0x4],edx
  41d0fd:	pop    ebx
  41d0fe:	leave  
  41d0ff:	ret    0x8
  41d102:	push   ebp
  41d103:	mov    ebp,esp
  41d105:	sub    esp,0x3c
  41d108:	mov    DWORD PTR [ebp-0x20],0x3510
  41d10f:	mov    DWORD PTR [ebp-0x1c],0x2104
  41d116:	mov    DWORD PTR [ebp-0x18],0x5d15
  41d11d:	mov    DWORD PTR [ebp-0x14],0x30cd
  41d124:	mov    DWORD PTR [ebp-0x10],0x1709
  41d12b:	mov    DWORD PTR [ebp-0xc],0x260b
  41d132:	mov    DWORD PTR [ebp-0x8],0x3204
  41d139:	mov    DWORD PTR [ebp-0x4],0x62ea
  41d140:	mov    DWORD PTR [ebp-0x38],0x58e9
  41d147:	mov    DWORD PTR [ebp-0x34],0x7f89
  41d14e:	mov    DWORD PTR [ebp-0x30],0x7fda
  41d155:	mov    DWORD PTR [ebp-0x2c],0x2889
  41d15c:	mov    DWORD PTR [ebp-0x28],0xf0f
  41d163:	mov    DWORD PTR [ebp-0x24],0x58e1
  41d16a:	mov    DWORD PTR [ebp-0x3c],0x69c
  41d171:	mov    eax,DWORD PTR [ebp-0x10]
  41d174:	mov    ecx,DWORD PTR [ebp-0x14]
  41d177:	and    al,0xb9
  41d179:	add    al,cl
  41d17b:	mov    ecx,DWORD PTR [ebp-0x18]
  41d17e:	and    al,cl
  41d180:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d183:	sub    al,0x11
  41d185:	and    al,cl
  41d187:	mov    ecx,DWORD PTR [ebp-0x20]
  41d18a:	mov    edx,DWORD PTR [ebp+0x8]
  41d18d:	imul   ecx,ecx,0x6008
  41d193:	add    ecx,0x1759dd6e
  41d199:	add    al,0x4d
  41d19b:	xor    ecx,0x2b4185ee
  41d1a1:	cmp    BYTE PTR [ecx+edx*1],al
  41d1a4:	jne    0x41d23e
  41d1aa:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ad:	mov    eax,0xffffeff8
  41d1b2:	mov    edx,eax
  41d1b4:	sub    edx,ecx
  41d1b6:	add    edx,DWORD PTR [ebp-0x8]
  41d1b9:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1bc:	or     edx,ecx
  41d1be:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1c1:	imul   edx,edx,0x85300
  41d1c7:	sub    eax,ecx
  41d1c9:	add    eax,DWORD PTR [ebp-0x8]
  41d1cc:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1cf:	or     eax,ecx
  41d1d1:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  41d1db:	add    eax,0x40e5
  41d1e0:	imul   eax,eax,0x214c
  41d1e6:	add    eax,ecx
  41d1e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1eb:	add    ecx,eax
  41d1ed:	mov    DWORD PTR [ebp+0x8],ecx
  41d1f0:	mov    eax,DWORD PTR [ebp-0x24]
  41d1f3:	mov    ecx,DWORD PTR [ebp-0x28]
  41d1f6:	and    eax,ecx
  41d1f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d1fb:	and    eax,ecx
  41d1fd:	mov    ecx,DWORD PTR [ebp-0x30]
  41d200:	imul   eax,ecx
  41d203:	mov    ecx,DWORD PTR [ebp-0x34]
  41d206:	or     eax,ecx
  41d208:	mov    ecx,DWORD PTR [ebp-0x38]
  41d20b:	imul   eax,ecx
  41d20e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d211:	sub    eax,0x777ea653
  41d216:	cmp    DWORD PTR [ecx+0x54],eax
  41d219:	je     0x41d227
  41d21f:	mov    eax,DWORD PTR [ebp+0x8]
  41d222:	jmp    0x41d26e
  41d227:	mov    eax,DWORD PTR [ebp-0x3c]
  41d22a:	sub    eax,0x5258
  41d22f:	xor    eax,0x49e9
  41d234:	add    eax,0x253
  41d239:	jmp    0x41d26e
  41d23e:	mov    DWORD PTR [ebp-0x3c],0x4177
  41d245:	mov    DWORD PTR [ebp+0x8],0x1405
  41d24c:	mov    eax,DWORD PTR [ebp+0x8]
  41d24f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d252:	imul   eax,eax,0x58cc
  41d258:	add    eax,0x3f39
  41d25d:	and    eax,ecx
  41d25f:	add    eax,0x3b90
  41d264:	or     eax,0x4b1c
  41d269:	sub    eax,0x7fdd
  41d26e:	leave  
  41d26f:	ret    0x4
  41d272:	push   ebp
  41d273:	mov    ebp,esp
  41d275:	and    esp,0xfffffff8
  41d278:	sub    esp,0x20
  41d27b:	push   ebx
  41d27c:	push   esi
  41d27d:	lea    eax,[esp+0x10]
  41d281:	mov    DWORD PTR [esp+0xc],eax
  41d285:	mov    eax,DWORD PTR [esp+0xc]
  41d289:	mov    ecx,DWORD PTR [esp+0x10]
  41d28d:	mov    edx,DWORD PTR [esp+0x14]
  41d291:	sub    DWORD PTR [eax],ecx
  41d293:	sbb    DWORD PTR [eax+0x4],edx
  41d296:	mov    eax,DWORD PTR [esp+0xc]
  41d29a:	or     DWORD PTR [eax],0xba6d9573
  41d2a0:	or     DWORD PTR [eax+0x4],0x9c0a89d8
  41d2a7:	lea    eax,[esp+0x18]
  41d2ab:	push   eax
  41d2ac:	lea    eax,[esp+0x24]
  41d2b0:	push   eax
  41d2b1:	call   0x41cedf
  41d2b6:	mov    eax,DWORD PTR [esp+0x18]
  41d2ba:	mov    ecx,DWORD PTR [esp+0x1c]
  41d2be:	push   DWORD PTR [ebp+0x18]
  41d2c1:	mov    ebx,DWORD PTR [ebp+0xc]
  41d2c4:	push   DWORD PTR [ebp+0x14]
  41d2c7:	mov    esi,DWORD PTR [ebp+0x8]
  41d2ca:	push   DWORD PTR [ebp+0x10]
  41d2cd:	push   DWORD PTR [esp+0x20]
  41d2d1:	push   DWORD PTR [esp+0x20]
  41d2d5:	push   DWORD PTR [esp+0x38]
  41d2d9:	push   DWORD PTR [esp+0x38]
  41d2dd:	call   0x401000
  41d2e2:	pop    esi
  41d2e3:	pop    ebx
  41d2e4:	mov    esp,ebp
  41d2e6:	pop    ebp
  41d2e7:	ret    0x14
  41d2ea:	push   ebp
  41d2eb:	mov    ebp,esp
  41d2ed:	sub    esp,0x28
  41d2f0:	push   ebx
  41d2f1:	push   esi
  41d2f2:	push   edi
  41d2f3:	mov    DWORD PTR [ebp-0x10],0x6b3
  41d2fa:	mov    DWORD PTR [ebp-0xc],0x816
  41d301:	mov    DWORD PTR [ebp-0x8],0x248f
  41d308:	mov    DWORD PTR [ebp-0x20],0x4ef0
  41d30f:	mov    DWORD PTR [ebp-0x1c],0x647f
  41d316:	mov    DWORD PTR [ebp-0x4],0x2
  41d31d:	mov    DWORD PTR [ebp-0x18],0x21b3
  41d324:	mov    DWORD PTR [ebp-0x14],0x7c
  41d32b:	mov    DWORD PTR [ebp-0x28],0x77e3
  41d332:	mov    DWORD PTR [ebp-0x24],0x2866
  41d339:	mov    ecx,DWORD PTR [ebp-0x4]
  41d33c:	xor    edx,edx
  41d33e:	mov    eax,0x723d
  41d343:	div    ecx
  41d345:	mov    esi,0xffff8748
  41d34a:	mov    edi,0x7929
  41d34f:	mov    ecx,eax
  41d351:	mov    eax,DWORD PTR [ebp-0x1c]
  41d354:	imul   ecx,eax
  41d357:	mov    eax,DWORD PTR [ebp-0x20]
  41d35a:	imul   ecx,ecx,0x758c
  41d360:	xor    ecx,0x3583
  41d366:	or     ecx,eax
  41d368:	mov    eax,DWORD PTR [ebp-0x8]
  41d36b:	mov    edx,DWORD PTR [ebp-0xc]
  41d36e:	xor    eax,edx
  41d370:	mov    edx,DWORD PTR [ebp-0x10]
  41d373:	and    eax,edx
  41d375:	sub    eax,0x2ff7
  41d37a:	xor    eax,0x53d2
  41d37f:	xor    edx,edx
  41d381:	add    ecx,0x5a905891
  41d387:	div    esi
  41d389:	mov    esi,0x564d
  41d38e:	jmp    0x41d41f
  41d393:	mov    DWORD PTR [ebp-0x4],0x3574
  41d39a:	mov    ebx,DWORD PTR [ebp+0xc]
  41d39d:	mov    DWORD PTR [ebp-0x1c],0x4b01
  41d3a4:	mov    DWORD PTR [ebp-0x20],0x7c1
  41d3ab:	mov    eax,DWORD PTR [ebp-0x20]
  41d3ae:	mov    edx,DWORD PTR [ebp-0x1c]
  41d3b1:	or     eax,0x4cf5
  41d3b6:	xor    eax,edx
  41d3b8:	mov    edx,DWORD PTR [ebp-0x4]
  41d3bb:	sub    eax,edx
  41d3bd:	xor    eax,0x2ec2
  41d3c2:	mov    edx,ecx
  41d3c4:	sub    edx,eax
  41d3c6:	sub    edx,0x564a
  41d3cc:	mov    DWORD PTR [ebp-0x4],edx
  41d3cf:	mov    eax,DWORD PTR [ebp-0x4]
  41d3d2:	mov    edx,DWORD PTR [ebp-0x4]
  41d3d5:	mov    dl,BYTE PTR [edx+ebx*1]
  41d3d8:	mov    ebx,DWORD PTR [ebp+0x8]
  41d3db:	mov    BYTE PTR [eax+ebx*1],dl
  41d3de:	mov    eax,DWORD PTR [ebp-0x24]
  41d3e1:	mov    edx,DWORD PTR [ebp-0x28]
  41d3e4:	imul   eax,edx
  41d3e7:	imul   eax,eax,0x24ef285a
  41d3ed:	sub    eax,0x1e23
  41d3f2:	imul   eax,eax,0x1ef9
  41d3f8:	xor    eax,0xb5479168
  41d3fd:	add    ecx,eax
  41d3ff:	mov    eax,DWORD PTR [ebp-0x8]
  41d402:	mov    edx,DWORD PTR [ebp-0xc]
  41d405:	xor    eax,edx
  41d407:	mov    edx,DWORD PTR [ebp-0x10]
  41d40a:	and    eax,edx
  41d40c:	sub    eax,0x2ff7
  41d411:	xor    eax,0x53d2
  41d416:	xor    edx,edx
  41d418:	mov    ebx,0xffff8748
  41d41d:	div    ebx
  41d41f:	mov    edx,DWORD PTR [ebp+0x10]
  41d422:	sub    edx,eax
  41d424:	mov    eax,DWORD PTR [ebp-0x14]
  41d427:	add    eax,0x38ab
  41d42c:	xor    eax,edi
  41d42e:	add    eax,DWORD PTR [ebp-0x18]
  41d431:	mov    ebx,ecx
  41d433:	xor    eax,esi
  41d435:	sub    ebx,eax
  41d437:	cmp    ebx,edx
  41d439:	jbe    0x41d393
  41d43f:	pop    edi
  41d440:	pop    esi
  41d441:	pop    ebx
  41d442:	leave  
  41d443:	ret    0xc
  41d446:	push   ebp
  41d447:	mov    ebp,esp
  41d449:	sub    esp,0x7c
  41d44c:	or     DWORD PTR ds:0x4229a6,ebx
  41d452:	push   ebx
  41d453:	sub    ebx,edx
  41d455:	push   esi
  41d456:	push   edi
  41d457:	movzx  ebx,BYTE PTR ds:0x4228ae
  41d45e:	and    DWORD PTR ds:0x422986,ebx
  41d464:	mov    eax,DWORD PTR [ebp+0x8]
  41d467:	mov    ecx,DWORD PTR [ebp+0xc]
  41d46a:	shrd   eax,ecx,0x2
  41d46e:	cmp    DWORD PTR ds:0x4229ce,0x0
  41d475:	mov    DWORD PTR ds:0x42298a,edx
  41d47b:	mov    esi,0x951
  41d480:	jmp    0x41d4db
  41d485:	movzx  ebx,BYTE PTR ds:0x42298a
  41d48c:	jbe    0x41d4be
  41d492:	push   0x47c6
  41d497:	push   DWORD PTR [ebp-0x28]
  41d49a:	call   DWORD PTR ds:0x42a038
  41d4a0:	and    esi,0x3e8f
  41d4a6:	mov    esi,DWORD PTR ds:0x4228e6
  41d4ac:	add    DWORD PTR ds:0x42291e,esi
  41d4b2:	sub    esi,edx
  41d4b4:	sub    DWORD PTR ds:0x42297e,0xf26
  41d4be:	adc    DWORD PTR ds:0x4228ee,0x541b
  41d4c8:	xor    esi,esi
  41d4ca:	or     esi,DWORD PTR ds:0x422a3a
  41d4d0:	mov    edi,DWORD PTR ds:0x422ae6
  41d4d6:	sub    edi,esi
  41d4d8:	add    esi,DWORD PTR [esi+edi*1]
  41d4db:	shr    ecx,0x2
  41d4de:	mov    ecx,DWORD PTR [ebp+0x8]
  41d4e1:	mov    edx,DWORD PTR [ebp+0xc]
  41d4e4:	inc    ebx
  41d4e5:	xor    edx,edx
  41d4e7:	cmp    DWORD PTR ds:0x4229a2,0x0
  41d4ee:	mov    ebx,DWORD PTR ds:0x422996
  41d4f4:	mov    DWORD PTR ds:0x422976,0x477d
  41d4fe:	mov    DWORD PTR ds:0x4228c2,ebx
  41d504:	mov    DWORD PTR ds:0x4228ae,0x7a5c
  41d50e:	jmp    0x41d551
  41d513:	mov    ebx,0x5fbd
  41d518:	je     0x41d54d
  41d51e:	push   DWORD PTR [ebp-0x28]
  41d521:	push   0x41f8
  41d526:	push   0x6fc1
  41d52b:	push   DWORD PTR [ebp-0x24]
  41d52e:	call   DWORD PTR ds:0x42a05c
  41d534:	and    DWORD PTR ds:0x42296a,edi
  41d53a:	sub    edi,esi
  41d53c:	mov    ebx,DWORD PTR ds:0x422a86
  41d542:	mov    esi,DWORD PTR ds:0x422a9a
  41d548:	sub    esi,ebx
  41d54a:	sub    ebx,DWORD PTR [ebx+esi*1]
  41d54d:	sbb    edi,esi
  41d54f:	not    esi
  41d551:	mov    esi,0x2e9a655c
  41d556:	xor    eax,esi
  41d558:	cmp    DWORD PTR ds:0x422946,0x0
  41d55f:	mov    DWORD PTR ds:0x4229aa,ecx
  41d565:	mov    DWORD PTR ds:0x422936,0x719b
  41d56f:	mov    DWORD PTR ds:0x42290a,0x79d9
  41d579:	mov    DWORD PTR ds:0x4229ba,ecx
  41d57f:	jmp    0x41d608
  41d584:	mov    DWORD PTR ds:0x4229b6,0x57de
  41d58e:	mov    DWORD PTR ds:0x42298e,0x236c
  41d598:	ja     0x41d5da
  41d59e:	push   0x3fc3
  41d5a3:	push   0x4225dc
  41d5a8:	call   DWORD PTR ds:0x42a060
  41d5ae:	sbb    ebx,DWORD PTR ds:0x42294a
  41d5b4:	mov    ebx,DWORD PTR ds:0x422892
  41d5ba:	adc    DWORD PTR ds:0x42289e,ebx
  41d5c0:	xor    ebx,ebx
  41d5c2:	or     ebx,DWORD PTR ds:0x422a7a
  41d5c8:	mov    ebx,DWORD PTR [ebx]
  41d5ca:	adc    DWORD PTR ds:0x4229d2,ebx
  41d5d0:	mov    DWORD PTR ds:0x4228ba,0x6b73
  41d5da:	and    ebx,edi
  41d5dc:	sub    edi,DWORD PTR ds:0x422972
  41d5e2:	adc    ebx,DWORD PTR ds:0x422922
  41d5e8:	movzx  ebx,BYTE PTR ds:0x422926
  41d5ef:	adc    DWORD PTR ds:0x42294e,ebx
  41d5f5:	mov    edi,DWORD PTR ds:0x4229da
  41d5fb:	xor    ebx,ebx
  41d5fd:	or     ebx,DWORD PTR ds:0x422a2e
  41d603:	sub    ebx,edi
  41d605:	or     edi,DWORD PTR [edi+ebx*1]
  41d608:	or     eax,edx
  41d60a:	mov    DWORD PTR ds:0x4228fe,0x3549
  41d614:	mov    DWORD PTR [ebp-0x28],eax
  41d617:	mov    eax,DWORD PTR [ebp+0x8]
  41d61a:	or     edx,0x76a
  41d620:	shl    ecx,0x1e
  41d623:	cmp    DWORD PTR ds:0x4229aa,0x0
  41d62a:	mov    DWORD PTR ds:0x42297e,ebx
  41d630:	mov    ecx,DWORD PTR ds:0x4229be
  41d636:	mov    DWORD PTR ds:0x422962,0x9fe
  41d640:	jmp    0x41d6ab
  41d645:	mov    DWORD PTR ds:0x4228de,edx
  41d64b:	mov    edx,DWORD PTR ds:0x4228ae
  41d651:	jae    0x41d690
  41d657:	push   DWORD PTR [ebp-0x18]
  41d65a:	push   DWORD PTR [ebp-0x18]
  41d65d:	call   DWORD PTR ds:0x42a064
  41d663:	mov    edx,DWORD PTR ds:0x422abe
  41d669:	mov    ecx,DWORD PTR ds:0x422ac6
  41d66f:	sub    edx,ecx
  41d671:	or     edx,DWORD PTR [edx+ecx*1]
  41d674:	mov    edi,DWORD PTR ds:0x4229ba
  41d67a:	sbb    edi,DWORD PTR ds:0x4228ba
  41d680:	mov    DWORD PTR ds:0x4229ba,edi
  41d686:	or     DWORD PTR ds:0x422966,0x5f8
  41d690:	adc    DWORD PTR ds:0x42298e,0x1669
  41d69a:	mov    ecx,DWORD PTR ds:0x422a52
  41d6a0:	mov    ebx,DWORD PTR ds:0x422ac2
  41d6a6:	sub    ebx,ecx
  41d6a8:	or     ecx,DWORD PTR [ecx+ebx*1]
  41d6ab:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6ae:	xor    edi,0x396f
  41d6b4:	shrd   eax,ecx,0x2
  41d6b8:	adc    DWORD PTR ds:0x42295a,edi
  41d6be:	xor    eax,esi
  41d6c0:	adc    ebx,edi
  41d6c2:	shr    ecx,0x2
  41d6c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d6c8:	inc    ebx
  41d6c9:	mov    edx,DWORD PTR [ebp+0xc]
  41d6cc:	xor    edx,edx
  41d6ce:	xor    ebx,DWORD PTR ds:0x42295a
  41d6d4:	or     eax,edx
  41d6d6:	sub    edx,0x59e2
  41d6dc:	mov    DWORD PTR [ebp-0x28],eax
  41d6df:	mov    eax,ds:0x4220e8
  41d6e4:	add    DWORD PTR ds:0x4228d2,edx
  41d6ea:	mov    eax,DWORD PTR [eax]
  41d6ec:	xor    DWORD PTR ds:0x42293a,0x4228c2
  41d6f6:	mov    DWORD PTR [ebp-0xc],eax
  41d6f9:	mov    eax,ds:0x422308
  41d6fe:	sub    ebx,0x7e01
  41d704:	mov    eax,DWORD PTR [eax]
  41d706:	mov    ebx,DWORD PTR ds:0x422a42
  41d70c:	xor    edi,edi
  41d70e:	xor    edi,DWORD PTR ds:0x422a9a
  41d714:	sub    edi,ebx
  41d716:	and    ebx,DWORD PTR [ebx+edi*1]
  41d719:	mov    DWORD PTR [ebp-0x10],eax
  41d71c:	cmp    DWORD PTR ds:0x4229c6,0x0
  41d723:	mov    DWORD PTR ds:0x42295a,ebx
  41d729:	mov    DWORD PTR ds:0x42297e,0x12ca
  41d733:	jmp    0x41d773
  41d738:	mov    DWORD PTR ds:0x4229c2,ebx
  41d73e:	jl     0x41d75b
  41d744:	push   0x4227af
  41d749:	call   DWORD PTR ds:0x42a180
  41d74f:	dec    DWORD PTR ds:0x4228de
  41d755:	or     edi,DWORD PTR ds:0x4229c6
  41d75b:	adc    DWORD PTR ds:0x422902,0x16ea
  41d765:	or     DWORD PTR ds:0x42291e,ecx
  41d76b:	neg    edi
  41d76d:	sbb    DWORD PTR ds:0x4228c6,edx
  41d773:	mov    eax,DWORD PTR [ebp-0xc]
  41d776:	or     eax,DWORD PTR ds:0x422936
  41d77c:	mov    eax,DWORD PTR [ebp-0xc]
  41d77f:	or     DWORD PTR ds:0x42297e,0xd91
  41d789:	shl    ecx,0x1e
  41d78c:	sub    DWORD PTR ds:0x4228da,0x4229c2
  41d796:	xor    ecx,ecx
  41d798:	adc    DWORD PTR ds:0x422972,ecx
  41d79e:	shld   ecx,eax,0x2
  41d7a2:	cmp    DWORD PTR ds:0x4229ba,0x0
  41d7a9:	movzx  ebx,BYTE PTR ds:0x422926
  41d7b0:	mov    DWORD PTR ds:0x4228fe,0x7bb6
  41d7ba:	mov    DWORD PTR ds:0x422922,edi
  41d7c0:	movzx  ebx,BYTE PTR ds:0x422966
  41d7c7:	jmp    0x41d840
  41d7cc:	mov    DWORD PTR ds:0x4229b6,0x5617
  41d7d6:	mov    DWORD PTR ds:0x4229ca,0x1a8d
  41d7e0:	je     0x41d815
  41d7e6:	push   0x4228c6
  41d7eb:	push   0x422906
  41d7f0:	push   0x148f
  41d7f5:	call   DWORD PTR ds:0x42a068
  41d7fb:	xor    ebx,ebx
  41d7fd:	add    ebx,DWORD PTR ds:0x422a8a
  41d803:	mov    edx,DWORD PTR ds:0x422ada
  41d809:	sub    ebx,edx
  41d80b:	xor    ebx,DWORD PTR [ebx+edx*1]
  41d80e:	add    ebx,DWORD PTR ds:0x422906
  41d814:	inc    ebx
  41d815:	movzx  edx,BYTE PTR ds:0x42291e
  41d81c:	or     edx,DWORD PTR ds:0x42290e
  41d822:	mov    DWORD PTR ds:0x42291e,edx
  41d828:	mov    DWORD PTR ds:0x4228be,0x3c15
  41d832:	xor    edi,edi
  41d834:	add    edi,DWORD PTR ds:0x42296a
  41d83a:	and    DWORD PTR ds:0x4229a2,edi
  41d840:	mov    edi,DWORD PTR [ebp+0x8]
  41d843:	mov    ebx,DWORD PTR [ebp+0xc]
  41d846:	shl    eax,0x2
  41d849:	and    edx,DWORD PTR ds:0x422996
  41d84f:	mov    DWORD PTR [ebp-0x34],ebx
  41d852:	or     edx,DWORD PTR ds:0x422942
  41d858:	xor    ebx,ebx
  41d85a:	or     edx,DWORD PTR ds:0x42297e
  41d860:	mov    edx,0x9c0a89d8
  41d865:	xor    DWORD PTR ds:0x42293e,0x38e7
  41d86f:	xor    eax,0xba699573
  41d874:	xor    ecx,edx
  41d876:	mov    DWORD PTR ds:0x422966,0x5827
  41d880:	inc    ebx
  41d881:	mov    DWORD PTR ds:0x42288e,0x1c53
  41d88b:	mov    DWORD PTR [ebp-0x1c],0xa3e69b9d
  41d892:	mov    DWORD PTR ds:0x42296a,0x3d21
  41d89c:	mov    DWORD PTR [ebp-0x18],0xa3e6929d
  41d8a3:	mov    DWORD PTR ds:0x4228d6,0x742f
  41d8ad:	cmp    eax,edi
  41d8af:	mov    DWORD PTR ds:0x42289e,0x5996
  41d8b9:	jne    0x41d8dc
  41d8bf:	mov    DWORD PTR ds:0x4228e2,0x7e38
  41d8c9:	cmp    ecx,DWORD PTR [ebp-0x34]
  41d8cc:	mov    DWORD PTR ds:0x422976,0x4e71
  41d8d6:	je     0x41de75
  41d8dc:	xor    edi,edi
  41d8de:	mov    eax,DWORD PTR [ebp-0x10]
  41d8e1:	mov    eax,DWORD PTR [ebp-0x10]
  41d8e4:	and    edi,0x18bc
  41d8ea:	xor    ecx,ecx
  41d8ec:	shld   ecx,eax,0x2
  41d8f0:	cmp    DWORD PTR ds:0x4228a6,0x0
  41d8f7:	not    edi
  41d8f9:	mov    DWORD PTR ds:0x422916,0x65a0
  41d903:	mov    edi,DWORD PTR ds:0x4229c6
  41d909:	jmp    0x41d963
  41d90e:	mov    DWORD PTR ds:0x42291e,0x42bf
  41d918:	jl     0x41d943
  41d91e:	push   DWORD PTR [ebp-0x18]
  41d921:	call   DWORD PTR ds:0x42a184
  41d927:	mov    edi,DWORD PTR ds:0x42292a
  41d92d:	xor    DWORD PTR ds:0x42297e,edi
  41d933:	add    edi,DWORD PTR ds:0x422926
  41d939:	and    DWORD PTR ds:0x42296e,0x3699
  41d943:	sub    DWORD PTR ds:0x4229d2,ecx
  41d949:	xor    DWORD PTR ds:0x42291a,0x37de
  41d953:	sbb    edi,0x14bf
  41d959:	sbb    DWORD PTR ds:0x422906,0x2f26
  41d963:	shl    eax,0x2
  41d966:	xor    ecx,edx
  41d968:	mov    edx,DWORD PTR [ebp+0x8]
  41d96b:	cmp    DWORD PTR ds:0x4228f6,0x0
  41d972:	mov    DWORD PTR ds:0x4229b2,0x11be
  41d97c:	mov    edi,DWORD PTR ds:0x42298a
  41d982:	mov    edi,0x436a
  41d987:	mov    edi,0x787d
  41d98c:	jmp    0x41d9f7
  41d991:	mov    DWORD PTR ds:0x42294e,ecx
  41d997:	jne    0x41d9ca
  41d99d:	push   0x58ed
  41d9a2:	push   DWORD PTR [ebp-0xc]
  41d9a5:	push   0x4fe0
  41d9aa:	call   DWORD PTR ds:0x42a188
  41d9b0:	sub    DWORD PTR ds:0x4228c2,0x42290a
  41d9ba:	inc    DWORD PTR ds:0x422916
  41d9c0:	sub    DWORD PTR ds:0x4228f2,0x2f59
  41d9ca:	movzx  edi,BYTE PTR ds:0x42295e
  41d9d1:	or     edi,DWORD PTR ds:0x4229b6
  41d9d7:	mov    DWORD PTR ds:0x42295e,edi
  41d9dd:	sub    DWORD PTR ds:0x4229c2,edx
  41d9e3:	adc    DWORD PTR ds:0x42299a,0x4229a2
  41d9ed:	and    DWORD PTR ds:0x4228be,0x217e
  41d9f7:	mov    edi,DWORD PTR [ebp+0xc]
  41d9fa:	xor    eax,0xba699573
  41d9ff:	mov    DWORD PTR ds:0x4229ae,0x94b
  41da09:	cmp    eax,edx
  41da0b:	mov    DWORD PTR ds:0x4229be,0x7ea4
  41da15:	jne    0x41da2d
  41da1b:	mov    DWORD PTR ds:0x4228ee,0x77f8
  41da25:	cmp    ecx,edi
  41da27:	je     0x41de75
  41da2d:	cmp    DWORD PTR ds:0x42292a,0x0
  41da34:	mov    DWORD PTR ds:0x4228e6,0x4ba6
  41da3e:	mov    DWORD PTR ds:0x42289e,0x1c76
  41da48:	jmp    0x41daab
  41da4d:	mov    ecx,DWORD PTR ds:0x422892
  41da53:	mov    DWORD PTR ds:0x422892,0x488a
  41da5d:	jg     0x41da92
  41da63:	push   0x42298a
  41da68:	push   DWORD PTR [ebp-0xc]
  41da6b:	push   0x422737
  41da70:	push   0x58d5
  41da75:	call   DWORD PTR ds:0x42a18c
  41da7b:	mov    ecx,DWORD PTR ds:0x42299a
  41da81:	sbb    DWORD PTR ds:0x4229aa,ecx
  41da87:	xor    DWORD PTR ds:0x422986,0x108
  41da91:	dec    ecx
  41da92:	sbb    ecx,DWORD PTR ds:0x4229c2
  41da98:	mov    ecx,DWORD PTR ds:0x422aa6
  41da9e:	xor    edi,edi
  41daa0:	xor    edi,DWORD PTR ds:0x422aee
  41daa6:	sub    ecx,edi
  41daa8:	add    ecx,DWORD PTR [ecx+edi*1]
  41daab:	mov    eax,DWORD PTR [ebp-0x18]
  41daae:	adc    DWORD PTR ds:0x422922,0x2ce9
  41dab8:	mov    ecx,DWORD PTR [ebp-0x18]
  41dabb:	neg    edi
  41dabd:	xor    ecx,ebx
  41dabf:	shl    ecx,0x1e
  41dac2:	sbb    DWORD PTR ds:0x4229b2,edx
  41dac8:	mov    edi,0xa3e69a9f
  41dacd:	xor    eax,edi
  41dacf:	shr    eax,0x2
  41dad2:	or     DWORD PTR ds:0x42298a,0x42289a
  41dadc:	or     eax,ecx
  41dade:	cmp    DWORD PTR ds:0x42299a,0x0
  41dae5:	movzx  ecx,WORD PTR ds:0x42293a
  41daec:	not    ecx
  41daee:	jmp    0x41db52
  41daf3:	mov    DWORD PTR ds:0x4229d2,0x1c9
  41dafd:	je     0x41db2c
  41db03:	push   0x1982
  41db08:	call   DWORD PTR ds:0x42a2a4
  41db0e:	sub    ecx,0x256c
  41db14:	sub    DWORD PTR ds:0x4229d2,edx
  41db1a:	mov    ecx,DWORD PTR ds:0x4229ca
  41db20:	or     DWORD PTR ds:0x42297a,ecx
  41db26:	add    DWORD PTR ds:0x42293e,edx
  41db2c:	xor    ecx,0x2a90
  41db32:	adc    ecx,DWORD PTR ds:0x4228e2
  41db38:	xor    DWORD PTR ds:0x4228c2,edx
  41db3e:	xor    ecx,ecx
  41db40:	or     ecx,DWORD PTR ds:0x4228e2
  41db46:	and    DWORD PTR ds:0x4228f6,ecx
  41db4c:	sbb    DWORD PTR ds:0x422932,edx
  41db52:	mov    DWORD PTR [ebp-0x34],eax
  41db55:	xor    ecx,0x70df
  41db5b:	mov    eax,ds:0x422268
  41db60:	mov    ecx,DWORD PTR ds:0x4228d2
  41db66:	adc    ecx,DWORD PTR ds:0x422976
  41db6c:	mov    DWORD PTR ds:0x4228d2,ecx
  41db72:	mov    DWORD PTR [ebp-0x34],eax
  41db75:	xor    eax,eax
  41db77:	xor    eax,DWORD PTR ds:0x4228a6
  41db7d:	sbb    DWORD PTR ds:0x42294a,eax
  41db83:	mov    eax,DWORD PTR [ebp-0xc]
  41db86:	cmp    DWORD PTR ds:0x4229c6,0x0
  41db8d:	mov    DWORD PTR ds:0x4228fe,0x1213
  41db97:	movzx  ecx,WORD PTR ds:0x4228b2
  41db9e:	jmp    0x41dc0b
  41dba3:	mov    DWORD PTR ds:0x42298a,0x52a1
  41dbad:	mov    DWORD PTR ds:0x422962,edx
  41dbb3:	jg     0x41dbe8
  41dbb9:	push   DWORD PTR [ebp-0x24]
  41dbbc:	push   0x4008
  41dbc1:	push   0x37a6
  41dbc6:	call   DWORD PTR ds:0x42a06c
  41dbcc:	and    ecx,DWORD PTR ds:0x422946
  41dbd2:	sub    DWORD PTR ds:0x42291a,ebx
  41dbd8:	adc    DWORD PTR ds:0x4228e6,edx
  41dbde:	xor    DWORD PTR ds:0x42290a,0x1acd
  41dbe8:	dec    ecx
  41dbe9:	add    DWORD PTR ds:0x42289a,0x219e
  41dbf3:	mov    ecx,DWORD PTR ds:0x4228fa
  41dbf9:	and    DWORD PTR ds:0x42291a,ecx
  41dbff:	mov    ecx,DWORD PTR ds:0x4228e6
  41dc05:	or     DWORD PTR ds:0x4228ae,ecx
  41dc0b:	mov    DWORD PTR [ebp-0x14],eax
  41dc0e:	cmp    DWORD PTR ds:0x42299a,0x0
  41dc15:	mov    DWORD PTR ds:0x4228f6,0x5b1a
  41dc1f:	mov    ecx,0x5f2a
  41dc24:	jmp    0x41dc57
  41dc29:	mov    DWORD PTR ds:0x422922,0x1bb2
  41dc33:	jg     0x41dc4a
  41dc39:	push   DWORD PTR [ebp-0x1c]
  41dc3c:	call   DWORD PTR ds:0x42a190
  41dc42:	or     ecx,ecx
  41dc44:	add    ecx,DWORD PTR ds:0x4228ba
  41dc4a:	xor    ecx,ecx
  41dc4c:	dec    ecx
  41dc4d:	or     DWORD PTR ds:0x4228de,0x336d
  41dc57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc5a:	push   0x4
  41dc5c:	pop    eax
  41dc5d:	sub    eax,ecx
  41dc5f:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc62:	add    ecx,eax
  41dc64:	mov    DWORD PTR [ebp-0x24],ecx
  41dc67:	lea    eax,[ebp-0x30]
  41dc6a:	mov    DWORD PTR [ebp-0x2c],eax
  41dc6d:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc70:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc73:	xor    eax,edi
  41dc75:	xor    ecx,ebx
  41dc77:	shr    eax,0x2
  41dc7a:	shl    ecx,0x1e
  41dc7d:	or     eax,ecx
  41dc7f:	mov    DWORD PTR [ebp-0x20],eax
  41dc82:	mov    DWORD PTR [ebp-0x8],0xa3e69a8d
  41dc89:	mov    eax,DWORD PTR [ebp-0x8]
  41dc8c:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc8f:	xor    eax,edi
  41dc91:	xor    ecx,ebx
  41dc93:	shr    eax,0x2
  41dc96:	shl    ecx,0x1e
  41dc99:	or     ecx,eax
  41dc9b:	push   ecx
  41dc9c:	lea    eax,[ebp-0x8]
  41dc9f:	push   eax
  41dca0:	lea    eax,[ebp-0x7c]
  41dca3:	push   eax
  41dca4:	call   0x41d2ea
  41dca9:	mov    eax,DWORD PTR [ebp-0x8]
  41dcac:	mov    ecx,DWORD PTR [ebp-0x8]
  41dcaf:	xor    eax,edi
  41dcb1:	xor    ecx,ebx
  41dcb3:	shr    eax,0x2
  41dcb6:	shl    ecx,0x1e
  41dcb9:	or     ecx,eax
  41dcbb:	push   ecx
  41dcbc:	lea    eax,[ebp-0x14]
  41dcbf:	push   eax
  41dcc0:	mov    eax,DWORD PTR [ebp+0x8]
  41dcc3:	mov    ecx,DWORD PTR [ebp+0xc]
  41dcc6:	shrd   eax,ecx,0x2
  41dcca:	shr    ecx,0x2
  41dccd:	mov    ecx,DWORD PTR [ebp+0x8]
  41dcd0:	mov    edx,DWORD PTR [ebp+0xc]
  41dcd3:	xor    eax,esi
  41dcd5:	xor    edx,edx
  41dcd7:	or     eax,edx
  41dcd9:	lea    eax,[ebp+eax*4-0x78]
  41dcdd:	push   eax
  41dcde:	shl    ecx,0x1e
  41dce1:	call   0x41d2ea
  41dce6:	mov    eax,DWORD PTR [ebp-0x8]
  41dce9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dcec:	xor    eax,edi
  41dcee:	xor    ecx,ebx
  41dcf0:	shr    eax,0x2
  41dcf3:	shl    ecx,0x1e
  41dcf6:	or     ecx,eax
  41dcf8:	push   ecx
  41dcf9:	lea    eax,[ebp-0x24]
  41dcfc:	push   eax
  41dcfd:	mov    eax,DWORD PTR [ebp+0x10]
  41dd00:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd03:	shrd   eax,ecx,0x2
  41dd07:	shr    ecx,0x2
  41dd0a:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd0d:	mov    edx,DWORD PTR [ebp+0x14]
  41dd10:	xor    eax,esi
  41dd12:	xor    edx,edx
  41dd14:	or     eax,edx
  41dd16:	lea    eax,[ebp+eax*4-0x78]
  41dd1a:	push   eax
  41dd1b:	shl    ecx,0x1e
  41dd1e:	call   0x41d2ea
  41dd23:	mov    eax,DWORD PTR [ebp-0x8]
  41dd26:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd29:	xor    ecx,ebx
  41dd2b:	xor    eax,edi
  41dd2d:	shl    ecx,0x1e
  41dd30:	shr    eax,0x2
  41dd33:	or     ecx,eax
  41dd35:	push   ecx
  41dd36:	lea    eax,[ebp-0x20]
  41dd39:	push   eax
  41dd3a:	mov    eax,DWORD PTR [ebp+0x10]
  41dd3d:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd40:	shrd   eax,ecx,0x2
  41dd44:	shr    ecx,0x2
  41dd47:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd4a:	mov    edx,DWORD PTR [ebp+0x14]
  41dd4d:	xor    edx,edx
  41dd4f:	xor    eax,esi
  41dd51:	or     eax,edx
  41dd53:	shl    ecx,0x1e
  41dd56:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd59:	mov    edx,DWORD PTR [ebp+0x14]
  41dd5c:	shrd   ecx,edx,0x2
  41dd60:	shr    edx,0x2
  41dd63:	mov    edx,DWORD PTR [ebp+0x10]
  41dd66:	mov    ebx,DWORD PTR [ebp+0x14]
  41dd69:	xor    ecx,esi
  41dd6b:	xor    ebx,ebx
  41dd6d:	or     ecx,ebx
  41dd6f:	add    eax,ecx
  41dd71:	lea    eax,[ebp+eax*4-0x78]
  41dd75:	push   eax
  41dd76:	shl    edx,0x1e
  41dd79:	call   0x41d2ea
  41dd7e:	mov    eax,DWORD PTR [ebp-0x8]
  41dd81:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd84:	xor    ecx,0x1
  41dd87:	shl    ecx,0x1e
  41dd8a:	xor    eax,edi
  41dd8c:	shr    eax,0x2
  41dd8f:	or     ecx,eax
  41dd91:	push   ecx
  41dd92:	lea    eax,[ebp-0x2c]
  41dd95:	push   eax
  41dd96:	mov    eax,DWORD PTR [ebp+0x10]
  41dd99:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd9c:	shrd   eax,ecx,0x2
  41dda0:	shr    ecx,0x2
  41dda3:	mov    ecx,DWORD PTR [ebp+0x10]
  41dda6:	mov    edx,DWORD PTR [ebp+0x14]
  41dda9:	xor    edx,edx
  41ddab:	shl    ecx,0x1e
  41ddae:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddb1:	xor    eax,esi
  41ddb3:	or     eax,edx
  41ddb5:	mov    edx,DWORD PTR [ebp+0x14]
  41ddb8:	shrd   ecx,edx,0x2
  41ddbc:	shr    edx,0x2
  41ddbf:	mov    edx,DWORD PTR [ebp+0x10]
  41ddc2:	mov    ebx,DWORD PTR [ebp+0x14]
  41ddc5:	xor    ecx,esi
  41ddc7:	xor    ebx,ebx
  41ddc9:	or     ecx,ebx
  41ddcb:	shl    edx,0x1e
  41ddce:	add    eax,ecx
  41ddd0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddd3:	mov    edx,DWORD PTR [ebp+0x14]
  41ddd6:	shrd   ecx,edx,0x2
  41ddda:	shr    edx,0x2
  41dddd:	mov    edx,DWORD PTR [ebp+0x10]
  41dde0:	mov    ebx,DWORD PTR [ebp+0x14]
  41dde3:	xor    ecx,esi
  41dde5:	xor    ebx,ebx
  41dde7:	or     ecx,ebx
  41dde9:	add    eax,ecx
  41ddeb:	lea    eax,[ebp+eax*4-0x78]
  41ddef:	push   eax
  41ddf0:	shl    edx,0x1e
  41ddf3:	call   0x41d2ea
  41ddf8:	mov    eax,DWORD PTR [ebp-0x7c]
  41ddfb:	mov    ecx,DWORD PTR [ebp-0x7c]
  41ddfe:	xor    eax,edi
  41de00:	shr    eax,0x2
  41de03:	inc    ebx
  41de04:	xor    ecx,ebx
  41de06:	shl    ecx,0x1e
  41de09:	or     ecx,eax
  41de0b:	mov    DWORD PTR [ebp-0x7c],ecx
  41de0e:	lea    eax,[ebp-0x7c]
  41de11:	push   eax
  41de12:	mov    eax,DWORD PTR [ebp+0x10]
  41de15:	mov    ecx,DWORD PTR [ebp+0x14]
  41de18:	shrd   eax,ecx,0x2
  41de1c:	shr    ecx,0x2
  41de1f:	mov    ecx,DWORD PTR [ebp+0x10]
  41de22:	mov    edx,DWORD PTR [ebp+0x14]
  41de25:	xor    eax,esi
  41de27:	xor    edx,edx
  41de29:	or     eax,edx
  41de2b:	push   eax
  41de2c:	mov    eax,ds:0x422298
  41de31:	mov    edi,0x4221de
  41de36:	push   edi
  41de37:	push   DWORD PTR [eax]
  41de39:	shl    ecx,0x1e
  41de3c:	call   0x41f817
  41de41:	lea    eax,[ebp-0x7c]
  41de44:	push   eax
  41de45:	mov    eax,DWORD PTR [ebp+0x10]
  41de48:	mov    ecx,DWORD PTR [ebp+0x14]
  41de4b:	shrd   eax,ecx,0x2
  41de4f:	shr    ecx,0x2
  41de52:	mov    ecx,DWORD PTR [ebp+0x10]
  41de55:	mov    edx,DWORD PTR [ebp+0x14]
  41de58:	xor    eax,esi
  41de5a:	xor    edx,edx
  41de5c:	or     eax,edx
  41de5e:	push   eax
  41de5f:	mov    eax,ds:0x422298
  41de64:	push   edi
  41de65:	push   DWORD PTR [eax]
  41de67:	shl    ecx,0x1e
  41de6a:	call   0x41f817
  41de6f:	mov    eax,DWORD PTR [ebp-0x30]
  41de72:	mov    eax,DWORD PTR [ebp-0x20]
  41de75:	mov    edi,DWORD PTR [ebp-0x14]
  41de78:	mov    eax,DWORD PTR [ebp-0x24]
  41de7b:	mov    ecx,edi
  41de7d:	mov    DWORD PTR [ebp-0x18],eax
  41de80:	rol    ecx,0x2
  41de83:	mov    eax,0xa3e69a9d
  41de88:	xor    ecx,eax
  41de8a:	cmp    ecx,eax
  41de8c:	je     0x41df6e
  41de92:	mov    DWORD PTR [ebp-0x1c],0x1001
  41de99:	mov    ecx,DWORD PTR [ebp-0x18]
  41de9c:	xor    eax,eax
  41de9e:	mov    DWORD PTR [ebp-0x34],ecx
  41dea1:	test   ecx,ecx
  41dea3:	je     0x41decf
  41dea9:	mov    cl,BYTE PTR [eax+edi*1]
  41deac:	mov    BYTE PTR [ebp-0x1],cl
  41deaf:	movzx  ecx,BYTE PTR [ebp-0x1]
  41deb3:	sub    ecx,0xea
  41deb9:	mov    BYTE PTR [ebp-0x1],cl
  41debc:	ror    BYTE PTR [ebp-0x1],1
  41debf:	mov    cl,BYTE PTR [ebp-0x1]
  41dec2:	mov    BYTE PTR [eax+edi*1],cl
  41dec5:	inc    eax
  41dec6:	cmp    eax,DWORD PTR [ebp-0x34]
  41dec9:	jb     0x41dea9
  41decf:	dec    DWORD PTR [ebp-0x1c]
  41ded2:	jne    0x41de99
  41ded8:	mov    eax,DWORD PTR [ebp+0x8]
  41dedb:	mov    ecx,DWORD PTR [ebp+0xc]
  41dede:	shrd   eax,ecx,0x2
  41dee2:	shr    ecx,0x2
  41dee5:	mov    ecx,DWORD PTR [ebp+0x8]
  41dee8:	mov    edx,DWORD PTR [ebp+0xc]
  41deeb:	xor    eax,esi
  41deed:	xor    edx,edx
  41deef:	or     eax,edx
  41def1:	push   ebx
  41def2:	add    eax,edi
  41def4:	push   eax
  41def5:	lea    eax,[ebp-0x2]
  41def8:	push   eax
  41def9:	shl    ecx,0x1e
  41defc:	call   0x41d2ea
  41df01:	mov    eax,DWORD PTR [ebp+0x10]
  41df04:	mov    ecx,DWORD PTR [ebp+0x14]
  41df07:	shrd   eax,ecx,0x2
  41df0b:	shr    ecx,0x2
  41df0e:	mov    ecx,DWORD PTR [ebp+0x10]
  41df11:	mov    edx,DWORD PTR [ebp+0x14]
  41df14:	xor    eax,esi
  41df16:	xor    edx,edx
  41df18:	or     eax,edx
  41df1a:	add    eax,edi
  41df1c:	push   ebx
  41df1d:	push   eax
  41df1e:	mov    eax,DWORD PTR [ebp+0x8]
  41df21:	shl    ecx,0x1e
  41df24:	mov    ecx,DWORD PTR [ebp+0xc]
  41df27:	shrd   eax,ecx,0x2
  41df2b:	shr    ecx,0x2
  41df2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41df31:	mov    edx,DWORD PTR [ebp+0xc]
  41df34:	xor    eax,esi
  41df36:	xor    edx,edx
  41df38:	or     eax,edx
  41df3a:	add    eax,edi
  41df3c:	push   eax
  41df3d:	shl    ecx,0x1e
  41df40:	call   0x41d2ea
  41df45:	push   ebx
  41df46:	lea    eax,[ebp-0x2]
  41df49:	push   eax
  41df4a:	mov    eax,DWORD PTR [ebp+0x10]
  41df4d:	mov    ecx,DWORD PTR [ebp+0x14]
  41df50:	shrd   eax,ecx,0x2
  41df54:	shr    ecx,0x2
  41df57:	mov    ecx,DWORD PTR [ebp+0x10]
  41df5a:	mov    edx,DWORD PTR [ebp+0x14]
  41df5d:	xor    eax,esi
  41df5f:	xor    edx,edx
  41df61:	or     eax,edx
  41df63:	add    eax,edi
  41df65:	push   eax
  41df66:	shl    ecx,0x1e
  41df69:	call   0x41d2ea
  41df6e:	mov    eax,DWORD PTR [ebp+0x10]
  41df71:	mov    ecx,DWORD PTR [ebp+0x14]
  41df74:	shrd   eax,ecx,0x2
  41df78:	shr    ecx,0x2
  41df7b:	mov    ecx,DWORD PTR [ebp+0x10]
  41df7e:	mov    edx,DWORD PTR [ebp+0x14]
  41df81:	pop    edi
  41df82:	xor    eax,esi
  41df84:	xor    edx,edx
  41df86:	pop    esi
  41df87:	shl    ecx,0x1e
  41df8a:	or     eax,edx
  41df8c:	pop    ebx
  41df8d:	leave  
  41df8e:	ret    0x10
  41df91:	mov    eax,DWORD PTR [esp+0x8]
  41df95:	mov    ecx,DWORD PTR [esp+0x10]
  41df99:	xor    DWORD PTR ds:0x4228ba,0x2ee8
  41dfa3:	or     ecx,eax
  41dfa5:	not    ecx
  41dfa7:	mov    ecx,DWORD PTR [esp+0xc]
  41dfab:	mov    DWORD PTR ds:0x422936,0x71b
  41dfb5:	jne    0x41e049
  41dfbb:	cmp    DWORD PTR ds:0x422936,0x0
  41dfc2:	not    DWORD PTR ds:0x42292a
  41dfc8:	mov    DWORD PTR ds:0x42291a,0x73d7
  41dfd2:	mov    DWORD PTR ds:0x4229ce,0x27c3
  41dfdc:	jmp    0x41e040
  41dfe1:	mov    eax,0x55fe
  41dfe6:	jge    0x41e030
  41dfec:	push   0x626f
  41dff1:	push   DWORD PTR [ebp-0x10]
  41dff4:	push   DWORD PTR [ebp-0x10]
  41dff7:	push   DWORD PTR [ebp-0x14]
  41dffa:	push   DWORD PTR [ebp-0x14]
  41dffd:	push   0x6abc
  41e002:	call   DWORD PTR ds:0x42a194
  41e008:	sbb    DWORD PTR ds:0x42295e,0x422926
  41e012:	xor    DWORD PTR ds:0x4228de,0x422996
  41e01c:	or     DWORD PTR ds:0x4229b2,0x422932
  41e026:	or     DWORD PTR ds:0x422906,0x42298e
  41e030:	or     DWORD PTR ds:0x4229a2,0x766e
  41e03a:	sbb    DWORD PTR ds:0x422996,ebx
  41e040:	mov    eax,DWORD PTR [esp+0x4]
  41e044:	mul    ecx
  41e046:	ret    0x10
  41e049:	push   ebx
  41e04a:	mul    ecx
  41e04c:	mov    ebx,eax
  41e04e:	mov    eax,DWORD PTR [esp+0x8]
  41e052:	mul    DWORD PTR [esp+0x14]
  41e056:	add    ebx,eax
  41e058:	mov    eax,DWORD PTR [esp+0x8]
  41e05c:	mul    ecx
  41e05e:	add    edx,ebx
  41e060:	pop    ebx
  41e061:	ret    0x10
  41e064:	push   ebp
  41e065:	mov    ebp,esp
  41e067:	sub    esp,0x30
  41e06a:	push   ebx
  41e06b:	push   esi
  41e06c:	push   edi
  41e06d:	mov    DWORD PTR [ebp-0xc],0x1d4c
  41e074:	mov    DWORD PTR [ebp-0x8],0x1c4a
  41e07b:	mov    DWORD PTR [ebp-0x4],0x73ba
  41e082:	mov    DWORD PTR [ebp-0x1c],0x7afa
  41e089:	mov    DWORD PTR [ebp-0x18],0x618d
  41e090:	mov    DWORD PTR [ebp-0x14],0x7b8c
  41e097:	mov    DWORD PTR [ebp-0x10],0x46ba
  41e09e:	mov    DWORD PTR [ebp-0x30],0x6996
  41e0a5:	mov    DWORD PTR [ebp-0x2c],0x3bbb
  41e0ac:	mov    DWORD PTR [ebp-0x28],0x571e
  41e0b3:	mov    DWORD PTR [ebp-0x24],0x46e5
  41e0ba:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0bd:	imul   ecx,ecx,0x7649
  41e0c3:	add    ecx,DWORD PTR [ebp-0x18]
  41e0c6:	xor    edx,edx
  41e0c8:	add    ecx,DWORD PTR [ebp-0x1c]
  41e0cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e0ce:	mov    esi,DWORD PTR [ebp-0x8]
  41e0d1:	sub    eax,0x3049
  41e0d6:	imul   eax,eax,0x585
  41e0dc:	add    eax,0x46ca
  41e0e1:	xor    ecx,0x3916a43d
  41e0e7:	div    esi
  41e0e9:	mov    edi,0x2a7c
  41e0ee:	mov    esi,0x2cea
  41e0f3:	jmp    0x41e18a
  41e0f8:	mov    DWORD PTR [ebp-0x20],0xeaf
  41e0ff:	mov    DWORD PTR [ebp-0x14],0x6627
  41e106:	mov    DWORD PTR [ebp-0x18],0x2899
  41e10d:	mov    DWORD PTR [ebp-0x1c],0x4f7d
  41e114:	mov    eax,DWORD PTR [ebp-0x1c]
  41e117:	mov    edx,DWORD PTR [ebp-0x18]
  41e11a:	or     eax,edx
  41e11c:	mov    edx,DWORD PTR [ebp-0x14]
  41e11f:	imul   eax,edx
  41e122:	add    eax,DWORD PTR [ebp-0x20]
  41e125:	xor    edx,edx
  41e127:	mov    ebx,0x5ceb
  41e12c:	div    ebx
  41e12e:	mov    ebx,DWORD PTR [ebp+0x8]
  41e131:	mov    edx,ecx
  41e133:	xor    eax,0x4050
  41e138:	sub    edx,eax
  41e13a:	mov    DWORD PTR [ebp-0x20],edx
  41e13d:	mov    eax,DWORD PTR [ebp-0x24]
  41e140:	mov    dl,BYTE PTR [ebp+0xc]
  41e143:	xor    al,0xd1
  41e145:	sub    dl,al
  41e147:	mov    eax,DWORD PTR [ebp-0x28]
  41e14a:	sub    dl,al
  41e14c:	mov    eax,DWORD PTR [ebp-0x20]
  41e14f:	add    dl,0x52
  41e152:	mov    BYTE PTR [eax+ebx*1],dl
  41e155:	mov    eax,DWORD PTR [ebp-0x2c]
  41e158:	sub    eax,0x421
  41e15d:	and    eax,0xd30
  41e162:	add    eax,DWORD PTR [ebp-0x30]
  41e165:	xor    edx,edx
  41e167:	mov    ebx,0x6ea6
  41e16c:	div    ebx
  41e16e:	xor    edx,edx
  41e170:	add    ecx,eax
  41e172:	mov    eax,DWORD PTR [ebp-0x4]
  41e175:	mov    ebx,DWORD PTR [ebp-0x8]
  41e178:	sub    eax,0x3049
  41e17d:	imul   eax,eax,0x585
  41e183:	add    eax,0x46ca
  41e188:	div    ebx
  41e18a:	mov    edx,DWORD PTR [ebp-0xc]
  41e18d:	xor    eax,edx
  41e18f:	mov    edx,0x1086
  41e194:	sub    edx,eax
  41e196:	mov    eax,DWORD PTR [ebp-0x10]
  41e199:	and    eax,0x4a00
  41e19e:	or     eax,0x20
  41e1a1:	sub    eax,edi
  41e1a3:	xor    eax,esi
  41e1a5:	mov    ebx,ecx
  41e1a7:	sub    ebx,eax
  41e1a9:	cmp    ebx,edx
  41e1ab:	jbe    0x41e0f8
  41e1b1:	pop    edi
  41e1b2:	pop    esi
  41e1b3:	pop    ebx
  41e1b4:	leave  
  41e1b5:	ret    0x8
  41e1b8:	push   ebp
  41e1b9:	mov    ebp,esp
  41e1bb:	and    esp,0xfffffff8
  41e1be:	sub    esp,0x8c
  41e1c4:	push   ebx
  41e1c5:	push   esi
  41e1c6:	push   edi
  41e1c7:	push   0xa
  41e1c9:	push   DWORD PTR ds:0x4220dc
  41e1cf:	push   DWORD PTR ds:0x4220dc
  41e1d5:	call   DWORD PTR ds:0x42a004
  41e1db:	test   eax,eax
  41e1dd:	jle    0x41e1ea
  41e1e3:	xor    eax,eax
  41e1e5:	jmp    0x41f80e
  41e1ea:	mov    DWORD PTR [esp+0x38],0x10b8
  41e1f2:	or     DWORD PTR ds:0x4229b6,edx
  41e1f8:	mov    DWORD PTR [esp+0x3c],0x31bb
  41e200:	adc    ecx,ecx
  41e202:	mov    DWORD PTR [esp+0x40],0x2114
  41e20a:	mov    DWORD PTR [esp+0x44],0xfe7
  41e212:	cmp    DWORD PTR ds:0x4229c6,0x0
  41e219:	mov    ecx,DWORD PTR ds:0x422996
  41e21f:	not    ecx
  41e221:	jmp    0x41e284
  41e226:	mov    eax,0x3d56
  41e22b:	jb     0x41e268
  41e231:	push   0x4229ce
  41e236:	push   0x3b50
  41e23b:	push   0x1b8c
  41e240:	push   DWORD PTR [ebp-0x10]
  41e243:	push   DWORD PTR [ebp-0x14]
  41e246:	push   0x153f
  41e24b:	push   DWORD PTR [ebp-0x24]
  41e24e:	call   DWORD PTR ds:0x42a070
  41e254:	not    ecx
  41e256:	add    ecx,ecx
  41e258:	sbb    DWORD PTR ds:0x4228aa,0x4228c2
  41e262:	or     DWORD PTR ds:0x42298a,ebx
  41e268:	add    ecx,ecx
  41e26a:	sbb    DWORD PTR ds:0x42289e,0x422946
  41e274:	xor    ecx,ecx
  41e276:	xor    ecx,ecx
  41e278:	or     ecx,DWORD PTR ds:0x42292e
  41e27e:	add    DWORD PTR ds:0x4229b2,ecx
  41e284:	mov    DWORD PTR [esp+0x18],0xac404108
  41e28c:	cmp    DWORD PTR ds:0x422922,0x0
  41e293:	mov    DWORD PTR ds:0x4229ce,0x2ada
  41e29d:	mov    DWORD PTR ds:0x42297a,edi
  41e2a3:	jmp    0x41e304
  41e2a8:	not    DWORD PTR ds:0x42290a
  41e2ae:	mov    DWORD PTR ds:0x42288a,0x279a
  41e2b8:	jbe    0x41e2ec
  41e2be:	push   0x4226b9
  41e2c3:	call   DWORD PTR ds:0x42a074
  41e2c9:	add    ecx,ecx
  41e2cb:	movzx  ecx,BYTE PTR ds:0x4229a6
  41e2d2:	and    DWORD PTR ds:0x42290e,ecx
  41e2d8:	and    DWORD PTR ds:0x42298e,edi
  41e2de:	xor    ecx,ecx
  41e2e0:	xor    ecx,DWORD PTR ds:0x422932
  41e2e6:	or     DWORD PTR ds:0x422992,ecx
  41e2ec:	add    ecx,DWORD PTR ds:0x4228aa
  41e2f2:	xor    ecx,0xa66
  41e2f8:	or     DWORD PTR ds:0x4228da,edi
  41e2fe:	sub    eax,DWORD PTR ds:0x4229ba
  41e304:	mov    DWORD PTR [esp+0x1c],0x1002
  41e30c:	or     eax,eax
  41e30e:	mov    DWORD PTR [esp+0x10],0x9aa
  41e316:	xor    eax,eax
  41e318:	xor    eax,DWORD PTR ds:0x4229e2
  41e31e:	mov    ecx,DWORD PTR ds:0x422abe
  41e324:	sub    ecx,eax
  41e326:	and    eax,DWORD PTR [eax+ecx*1]
  41e329:	push   0x61f6
  41e32e:	cmp    DWORD PTR ds:0x4228ee,0x0
  41e335:	mov    DWORD PTR ds:0x42295e,0x401d
  41e33f:	mov    DWORD PTR ds:0x422972,ebx
  41e345:	mov    ecx,0x5ee5
  41e34a:	jmp    0x41e3b2
  41e34f:	mov    DWORD PTR ds:0x4228ae,ebx
  41e355:	mov    DWORD PTR ds:0x4228f2,0x622c
  41e35f:	ja     0x41e396
  41e365:	push   0x67cd
  41e36a:	push   DWORD PTR [ebp-0x24]
  41e36d:	push   0x11c0
  41e372:	call   DWORD PTR ds:0x42a078
  41e378:	sub    DWORD PTR ds:0x4228e2,0x2f74
  41e382:	xor    ecx,ecx
  41e384:	add    ecx,DWORD PTR ds:0x422922
  41e38a:	xor    ecx,DWORD PTR ds:0x4228da
  41e390:	mov    DWORD PTR ds:0x422922,ecx
  41e396:	sub    ecx,0x1bd0
  41e39c:	mov    ecx,DWORD PTR ds:0x422986
  41e3a2:	adc    DWORD PTR ds:0x42288e,ecx
  41e3a8:	or     DWORD PTR ds:0x42294a,0xc71
  41e3b2:	mov    DWORD PTR [esp+0x18],0x747
  41e3ba:	mov    eax,DWORD PTR [esp+0x14]
  41e3be:	or     ecx,DWORD PTR ds:0x4228be
  41e3c4:	mov    ecx,DWORD PTR [esp+0x18]
  41e3c8:	push   0x1caf
  41e3cd:	sub    DWORD PTR ds:0x4228ae,0x2516
  41e3d7:	push   ecx
  41e3d8:	sub    DWORD PTR ds:0x422916,0x4228e6
  41e3e2:	push   eax
  41e3e3:	call   0x41df91
  41e3e8:	sbb    DWORD PTR ds:0x4228ce,0x6aff
  41e3f2:	mov    ecx,DWORD PTR [esp+0x18]
  41e3f6:	mov    esi,DWORD PTR ds:0x422946
  41e3fc:	sub    DWORD PTR ds:0x4228be,esi
  41e402:	mov    esi,DWORD PTR [esp+0x1c]
  41e406:	sbb    DWORD PTR ds:0x4229d2,0x42291a
  41e410:	push   esi
  41e411:	sbb    DWORD PTR ds:0x42299a,0x3dc6
  41e41b:	push   ecx
  41e41c:	add    DWORD PTR ds:0x4228a2,0x422972
  41e426:	push   edx
  41e427:	push   eax
  41e428:	sbb    DWORD PTR ds:0x4228de,0x749b
  41e432:	call   0x421ad6
  41e437:	mov    ecx,DWORD PTR [esp+0x40]
  41e43b:	sub    esi,DWORD PTR ds:0x42291a
  41e441:	mov    esi,DWORD PTR [esp+0x44]
  41e445:	sub    DWORD PTR ds:0x42288a,0x2899
  41e44f:	add    eax,ecx
  41e451:	mov    DWORD PTR ds:0x422956,0x3eb8
  41e45b:	mov    ecx,DWORD PTR [esp+0x38]
  41e45f:	adc    edx,esi
  41e461:	mov    esi,DWORD PTR [esp+0x3c]
  41e465:	sub    DWORD PTR ds:0x4228da,0x4228fa
  41e46f:	xor    eax,ecx
  41e471:	dec    DWORD PTR ds:0x4229c6
  41e477:	mov    DWORD PTR [esp+0x40],eax
  41e47b:	xor    edx,esi
  41e47d:	mov    DWORD PTR [esp+0x44],edx
  41e481:	or     DWORD PTR ds:0x42292e,ecx
  41e487:	mov    DWORD PTR [esp+0x18],0x6cd4
  41e48f:	mov    DWORD PTR [esp+0x1c],0x5497
  41e497:	mov    DWORD PTR [esp+0x10],0x36dd
  41e49f:	xor    ecx,DWORD PTR ds:0x42289a
  41e4a5:	mov    DWORD PTR [esp+0x14],0x78dd
  41e4ad:	cmp    DWORD PTR ds:0x422956,0x0
  41e4b4:	mov    DWORD PTR ds:0x422902,0x537a
  41e4be:	mov    DWORD PTR ds:0x42289a,ebx
  41e4c4:	not    ecx
  41e4c6:	jmp    0x41e526
  41e4cb:	mov    DWORD PTR ds:0x4229aa,0x24bb
  41e4d5:	mov    ecx,0x50b
  41e4da:	jle    0x41e510
  41e4e0:	push   0x40ba
  41e4e5:	push   0x4c3a
  41e4ea:	push   DWORD PTR [ebp-0x20]
  41e4ed:	push   0x19f6
  41e4f2:	push   DWORD PTR [ebp-0x28]
  41e4f5:	push   0x29a0
  41e4fa:	call   DWORD PTR ds:0x42a2a8
  41e500:	adc    DWORD PTR ds:0x4228fe,0x2e50
  41e50a:	or     DWORD PTR ds:0x4229b2,edx
  41e510:	sub    DWORD PTR ds:0x422956,edi
  41e516:	add    DWORD PTR ds:0x422926,0x2a5
  41e520:	or     DWORD PTR ds:0x422916,ebx
  41e526:	mov    DWORD PTR [esp+0x38],0x3985
  41e52e:	cmp    DWORD PTR ds:0x4228d6,0x0
  41e535:	mov    DWORD PTR ds:0x4228c2,ecx
  41e53b:	mov    ecx,DWORD PTR ds:0x4228a2
  41e541:	jmp    0x41e588
  41e546:	not    eax
  41e548:	je     0x41e570
  41e54e:	push   DWORD PTR [ebp-0x10]
  41e551:	push   0x8599
  41e556:	push   DWORD PTR [ebp-0x24]
  41e559:	push   0x24de
  41e55e:	call   DWORD PTR ds:0x42a2ac
  41e564:	sub    DWORD PTR ds:0x4228fe,ebx
  41e56a:	and    ecx,0x2884
  41e570:	and    ecx,0x5007
  41e576:	sub    DWORD PTR ds:0x422892,edi
  41e57c:	adc    DWORD PTR ds:0x42295e,ebx
  41e582:	neg    DWORD PTR ds:0x42296e
  41e588:	push   0x0
  41e58a:	not    eax
  41e58c:	mov    DWORD PTR [esp+0x40],0x1dd2
  41e594:	movzx  ecx,WORD PTR ds:0x422892
  41e59b:	and    ecx,DWORD PTR ds:0x4228e2
  41e5a1:	mov    DWORD PTR ds:0x422892,ecx
  41e5a7:	mov    eax,DWORD PTR [esp+0x3c]
  41e5ab:	or     DWORD PTR ds:0x42292a,ecx
  41e5b1:	mov    ecx,DWORD PTR [esp+0x40]
  41e5b5:	adc    DWORD PTR ds:0x4228a6,0x44d3
  41e5bf:	push   0x5af1c38e
  41e5c4:	push   ecx
  41e5c5:	neg    DWORD PTR ds:0x4228a2
  41e5cb:	push   eax
  41e5cc:	not    DWORD PTR ds:0x4228e2
  41e5d2:	call   0x421ad6
  41e5d7:	mov    ecx,DWORD PTR [esp+0x10]
  41e5db:	movzx  esi,BYTE PTR ds:0x4228fe
  41e5e2:	add    esi,DWORD PTR ds:0x4229aa
  41e5e8:	mov    DWORD PTR ds:0x4228fe,esi
  41e5ee:	mov    esi,DWORD PTR [esp+0x14]
  41e5f2:	sub    DWORD PTR ds:0x42293e,0x4228e6
  41e5fc:	push   esi
  41e5fd:	or     DWORD PTR ds:0x42290e,0x4229ba
  41e607:	push   ecx
  41e608:	adc    DWORD PTR ds:0x4229ce,0x4228a2
  41e612:	push   edx
  41e613:	add    DWORD PTR ds:0x422982,0x422926
  41e61d:	push   eax
  41e61e:	mov    DWORD PTR ds:0x422972,0x6150
  41e628:	call   0x41df91
  41e62d:	and    esi,DWORD PTR ds:0x4228e6
  41e633:	mov    ecx,DWORD PTR [esp+0x18]
  41e637:	cmp    DWORD PTR ds:0x4228d2,0x0
  41e63e:	mov    esi,0x2802
  41e643:	mov    esi,DWORD PTR ds:0x42290e
  41e649:	jmp    0x41e6c2
  41e64e:	mov    DWORD PTR ds:0x42292e,edx
  41e654:	mov    DWORD PTR ds:0x42298a,0x21bd
  41e65e:	ja     0x41e6af
  41e664:	push   0x422835
  41e669:	push   DWORD PTR [ebp-0x24]
  41e66c:	push   DWORD PTR [ebp-0x28]
  41e66f:	push   0x295c
  41e674:	push   0x31b0
  41e679:	call   DWORD PTR ds:0x42a2b0
  41e67f:	or     DWORD PTR ds:0x422936,0x4228ba
  41e689:	movzx  esi,WORD PTR ds:0x42292a
  41e690:	add    esi,DWORD PTR ds:0x4229aa
  41e696:	mov    DWORD PTR ds:0x42292a,esi
  41e69c:	movzx  esi,BYTE PTR ds:0x42290a
  41e6a3:	add    DWORD PTR ds:0x4229ba,esi
  41e6a9:	sub    DWORD PTR ds:0x422896,ecx
  41e6af:	movzx  esi,BYTE PTR ds:0x4228ea
  41e6b6:	sub    DWORD PTR ds:0x4229be,esi
  41e6bc:	adc    DWORD PTR ds:0x42295a,ecx
  41e6c2:	mov    esi,DWORD PTR [esp+0x1c]
  41e6c6:	xor    eax,ecx
  41e6c8:	add    DWORD PTR ds:0x4228ce,ecx
  41e6ce:	mov    ecx,DWORD PTR [esp+0x40]
  41e6d2:	or     DWORD PTR ds:0x4229c2,0x4228c2
  41e6dc:	xor    edx,esi
  41e6de:	xor    DWORD PTR ds:0x422946,ebx
  41e6e4:	mov    esi,DWORD PTR [esp+0x44]
  41e6e8:	sbb    DWORD PTR ds:0x4228d6,0x42295e
  41e6f2:	xor    eax,0x6e4d
  41e6f7:	adc    DWORD PTR ds:0x422966,0x4228c2
  41e701:	xor    edx,0x79dc
  41e707:	cmp    ecx,eax
  41e709:	jne    0x41eccc
  41e70f:	cmp    esi,edx
  41e711:	mov    DWORD PTR ds:0x422956,0x607f
  41e71b:	jne    0x41eccc
  41e721:	sbb    ecx,eax
  41e723:	mov    DWORD PTR [esp+0x40],0x7b6e
  41e72b:	and    DWORD PTR ds:0x422982,0x281d
  41e735:	mov    DWORD PTR [esp+0x18],0x1856
  41e73d:	dec    ecx
  41e73e:	mov    DWORD PTR [esp+0x10],0x6e3c
  41e746:	mov    eax,DWORD PTR [esp+0x10]
  41e74a:	inc    ecx
  41e74b:	imul   eax,eax,0x2801
  41e751:	mov    ecx,DWORD PTR ds:0x422a6a
  41e757:	mov    ecx,DWORD PTR [ecx]
  41e759:	and    DWORD PTR ds:0x422922,ecx
  41e75f:	xor    edx,edx
  41e761:	sbb    DWORD PTR ds:0x42289e,ebx
  41e767:	mov    ecx,0x5f48
  41e76c:	div    ecx
  41e76e:	push   DWORD PTR ds:0x3b8dcfc0
  41e774:	xor    edx,edx
  41e776:	adc    DWORD PTR ds:0x42290e,0x3f8e
  41e780:	and    eax,0x54fe
  41e785:	xor    eax,0x283cecf3
  41e78a:	cmp    DWORD PTR ds:0x4228a2,0x0
  41e791:	mov    ecx,0x4c91
  41e796:	mov    DWORD PTR ds:0x422972,0x3523
  41e7a0:	mov    ecx,DWORD PTR ds:0x42288e
  41e7a6:	jmp    0x41e814
  41e7ab:	mov    DWORD PTR ds:0x4229c2,0x3b0c
  41e7b5:	mov    DWORD PTR ds:0x4228de,0x3b7b
  41e7bf:	jbe    0x41e7f2
  41e7c5:	push   DWORD PTR [ebp-0x18]
  41e7c8:	push   0x2888
  41e7cd:	push   0x7bd5
  41e7d2:	push   0x6538
  41e7d7:	push   0x7c45
  41e7dc:	call   DWORD PTR ds:0x42a2b4
  41e7e2:	and    DWORD PTR ds:0x42295a,0x2f05
  41e7ec:	xor    ecx,0x75ac
  41e7f2:	or     ecx,DWORD PTR ds:0x42288e
  41e7f8:	sbb    DWORD PTR ds:0x42298a,ebx
  41e7fe:	mov    ecx,DWORD PTR ds:0x4228ba
  41e804:	sbb    DWORD PTR ds:0x422892,ecx
  41e80a:	sub    DWORD PTR ds:0x4229d2,0x2cc7
  41e814:	push   DWORD PTR [eax]
  41e816:	cmp    DWORD PTR ds:0x42288a,0x0
  41e81d:	mov    ecx,0x2a8f
  41e822:	mov    DWORD PTR ds:0x4228d2,0x62da
  41e82c:	mov    DWORD PTR ds:0x4228b2,0x461d
  41e836:	jmp    0x41e86e
  41e83b:	not    eax
  41e83d:	mov    eax,0x1aaa
  41e842:	jle    0x41e862
  41e848:	push   DWORD PTR [ebp-0x14]
  41e84b:	push   0x689c
  41e850:	call   DWORD PTR ds:0x42a2b8
  41e856:	and    ecx,DWORD PTR ds:0x4228ce
  41e85c:	add    DWORD PTR ds:0x4228c2,ecx
  41e862:	sbb    DWORD PTR ds:0x42299e,ecx
  41e868:	sbb    ecx,0xe30
  41e86e:	mov    eax,DWORD PTR [esp+0x20]
  41e872:	push   0xb
  41e874:	pop    ecx
  41e875:	div    ecx
  41e877:	sub    ecx,0x60ba
  41e87d:	mov    ecx,DWORD PTR [esp+0x48]
  41e881:	not    DWORD PTR ds:0x4228b6
  41e887:	sub    eax,ecx
  41e889:	adc    DWORD PTR ds:0x4229ca,0x4229b6
  41e893:	add    eax,0x4d1
  41e898:	sbb    DWORD PTR ds:0x422992,0x4228aa
  41e8a2:	imul   eax,eax,0xfffffb44
  41e8a8:	and    eax,0xd55
  41e8ad:	xor    eax,0xf6b6e30e
  41e8b2:	push   DWORD PTR [eax]
  41e8b4:	add    DWORD PTR ds:0x42293e,0x4401
  41e8be:	push   DWORD PTR ds:0x3747636f
  41e8c4:	push   DWORD PTR ds:0xc7c2f83b
  41e8ca:	or     DWORD PTR ds:0x422926,0x64ef
  41e8d4:	push   DWORD PTR ds:0xe8d8887e
  41e8da:	push   DWORD PTR ds:0x1e049617
  41e8e0:	xor    DWORD PTR ds:0x4228b2,0x4229ae
  41e8ea:	call   DWORD PTR ds:0x42a030
  41e8f0:	not    eax
  41e8f2:	mov    DWORD PTR [esp+0x18],0xac269
  41e8fa:	cmp    DWORD PTR ds:0x422992,0x0
  41e901:	mov    ecx,DWORD PTR ds:0x4228d2
  41e907:	mov    ecx,0x4e69
  41e90c:	not    ecx
  41e90e:	jmp    0x41e95e
  41e913:	not    DWORD PTR ds:0x4228d2
  41e919:	mov    DWORD PTR ds:0x4228ee,0x6c90
  41e923:	jb     0x41e958
  41e929:	push   0x7f87
  41e92e:	push   DWORD PTR [ebp-0x1c]
  41e931:	push   0x186c
  41e936:	push   DWORD PTR [ebp-0x10]
  41e939:	push   DWORD PTR [ebp-0x1c]
  41e93c:	call   DWORD PTR ds:0x42a07c
  41e942:	adc    DWORD PTR ds:0x422962,0x439a
  41e94c:	sbb    ecx,ecx
  41e94e:	or     DWORD PTR ds:0x4229b6,0x7fc4
  41e958:	sbb    ecx,ecx
  41e95a:	add    ecx,ecx
  41e95c:	or     ecx,ecx
  41e95e:	mov    DWORD PTR [esp+0x10],0x5886
  41e966:	mov    ecx,DWORD PTR [esp+0x10]
  41e96a:	sub    DWORD PTR ds:0x4228e6,ebx
  41e970:	mov    eax,0x2f60
  41e975:	xor    DWORD PTR ds:0x4228be,0x78d1
  41e97f:	sub    eax,ecx
  41e981:	movzx  ecx,BYTE PTR ds:0x422952
  41e988:	sbb    ecx,DWORD PTR ds:0x4228a6
  41e98e:	mov    DWORD PTR ds:0x422952,ecx
  41e994:	mov    ecx,DWORD PTR [esp+0x18]
  41e998:	xor    eax,0x4eb0
  41e99d:	xor    DWORD PTR ds:0x42293a,0x31dd
  41e9a7:	xor    edx,edx
  41e9a9:	or     DWORD PTR ds:0x422952,0x422962
  41e9b3:	div    ecx
  41e9b5:	imul   eax,eax,0x79e
  41e9bb:	inc    DWORD PTR ds:0x422956
  41e9c1:	xor    eax,0x7f8a
  41e9c6:	sbb    DWORD PTR ds:0x422906,0x77b7
  41e9d0:	push   DWORD PTR [eax+0x66d98445]
  41e9d6:	or     DWORD PTR ds:0x4228a6,0x1e7d
  41e9e0:	push   DWORD PTR ds:0x4af06c36
  41e9e6:	sbb    DWORD PTR ds:0x4228ae,0x4228be
  41e9f0:	call   DWORD PTR ds:0x42a33c
  41e9f6:	and    DWORD PTR ds:0x42294a,edi
  41e9fc:	mov    DWORD PTR [esp+0x10],0xd8e5515f
  41ea04:	cmp    DWORD PTR ds:0x4228ba,0x0
  41ea0b:	mov    ecx,0x55dc
  41ea10:	mov    DWORD PTR ds:0x42292a,0x378a
  41ea1a:	not    DWORD PTR ds:0x422892
  41ea20:	jmp    0x41ea95
  41ea25:	mov    DWORD PTR ds:0x4228fe,0x78ab
  41ea2f:	mov    DWORD PTR ds:0x4228ba,0x7a87
  41ea39:	jb     0x41ea67
  41ea3f:	push   DWORD PTR [ebp-0x10]
  41ea42:	push   0x211a
  41ea47:	push   DWORD PTR [ebp-0xc]
  41ea4a:	push   DWORD PTR [ebp-0x20]
  41ea4d:	call   DWORD PTR ds:0x42a080
  41ea53:	and    DWORD PTR ds:0x42295e,edx
  41ea59:	or     esi,ecx
  41ea5b:	or     esi,DWORD PTR ds:0x422906
  41ea61:	and    DWORD PTR ds:0x4229b6,edi
  41ea67:	adc    DWORD PTR ds:0x422956,0x422932
  41ea71:	xor    ecx,ecx
  41ea73:	xor    ecx,DWORD PTR ds:0x422a9e
  41ea79:	xor    esi,esi
  41ea7b:	xor    esi,DWORD PTR ds:0x422b16
  41ea81:	sub    ecx,esi
  41ea83:	add    ecx,DWORD PTR [ecx+esi*1]
  41ea86:	sub    ecx,ecx
  41ea88:	movzx  esi,WORD PTR ds:0x42290a
  41ea8f:	and    DWORD PTR ds:0x4228fe,esi
  41ea95:	mov    DWORD PTR [esp+0x14],0x0
  41ea9d:	cmp    DWORD PTR ds:0x4228f2,0x0
  41eaa4:	movzx  esi,BYTE PTR ds:0x4228fa
  41eaab:	not    esi
  41eaad:	mov    DWORD PTR ds:0x42290e,0x4dc8
  41eab7:	jmp    0x41eb20
  41eabc:	mov    esi,DWORD PTR ds:0x4228b2
  41eac2:	not    eax
  41eac4:	jg     0x41eb01
  41eaca:	push   0x0
  41eacc:	push   0x36d5
  41ead1:	push   0x10b0
  41ead6:	call   DWORD PTR ds:0x42a2bc
  41eadc:	and    edx,0x7f12
  41eae2:	dec    ecx
  41eae3:	mov    edx,DWORD PTR ds:0x42291a
  41eae9:	or     edx,DWORD PTR ds:0x4228a2
  41eaef:	mov    DWORD PTR ds:0x42291a,edx
  41eaf5:	mov    edx,DWORD PTR ds:0x4228e6
  41eafb:	or     DWORD PTR ds:0x4228a6,edx
  41eb01:	mov    edx,DWORD PTR ds:0x42296e
  41eb07:	add    DWORD PTR ds:0x4229c6,edx
  41eb0d:	movzx  edx,WORD PTR ds:0x42296a
  41eb14:	and    edx,DWORD PTR ds:0x422892
  41eb1a:	mov    DWORD PTR ds:0x42296a,edx
  41eb20:	mov    DWORD PTR [esp+0x38],0x9f7
  41eb28:	cmp    DWORD PTR ds:0x42292e,0x0
  41eb2f:	mov    DWORD PTR ds:0x4228c6,0x484a
  41eb39:	mov    DWORD PTR ds:0x42289a,edi
  41eb3f:	mov    esi,DWORD PTR ds:0x4228ce
  41eb45:	mov    DWORD PTR ds:0x42298e,ebx
  41eb4b:	jmp    0x41ebb6
  41eb50:	mov    DWORD PTR ds:0x422962,edi
  41eb56:	mov    DWORD PTR ds:0x4228f2,ebx
  41eb5c:	jb     0x41eb8b
  41eb62:	push   0x3714
  41eb67:	push   DWORD PTR [ebp-0x1c]
  41eb6a:	push   DWORD PTR [ebp-0x28]
  41eb6d:	push   0x3c2f
  41eb72:	call   DWORD PTR ds:0x42a2c0
  41eb78:	movzx  edx,BYTE PTR ds:0x422976
  41eb7f:	and    DWORD PTR ds:0x4228de,edx
  41eb85:	and    DWORD PTR ds:0x4228d2,ecx
  41eb8b:	mov    ecx,DWORD PTR ds:0x422aba
  41eb91:	mov    edx,DWORD PTR ds:0x422ac6
  41eb97:	sub    edx,ecx
  41eb99:	sub    ecx,DWORD PTR [ecx+edx*1]
  41eb9c:	adc    DWORD PTR ds:0x4228ea,ebx
  41eba2:	xor    ecx,ecx
  41eba4:	xor    ecx,DWORD PTR ds:0x422962
  41ebaa:	adc    DWORD PTR ds:0x4228ba,ecx
  41ebb0:	xor    ecx,DWORD PTR ds:0x42297a
  41ebb6:	mov    DWORD PTR [esp+0x3c],0x141c
  41ebbe:	add    esi,0x66a7
  41ebc4:	mov    eax,DWORD PTR [esp+0x38]
  41ebc8:	adc    DWORD PTR ds:0x4228d2,ecx
  41ebce:	mov    ecx,DWORD PTR [esp+0x3c]
  41ebd2:	mov    edx,DWORD PTR [esp+0x10]
  41ebd6:	adc    esi,0x6098
  41ebdc:	mov    esi,DWORD PTR [esp+0x14]
  41ebe0:	neg    DWORD PTR ds:0x42292e
  41ebe6:	push   esi
  41ebe7:	sub    DWORD PTR ds:0x42296e,0x5044
  41ebf1:	push   edx
  41ebf2:	xor    ecx,0x4611
  41ebf8:	xor    eax,0x43f8
  41ebfd:	push   ecx
  41ebfe:	push   eax
  41ebff:	call   0x421ad6
  41ec04:	add    DWORD PTR ds:0x42297e,0x76c7
  41ec0e:	add    eax,0x2c3
  41ec13:	mov    DWORD PTR [esp+0x48],eax
  41ec17:	adc    edx,0x3413
  41ec1d:	mov    DWORD PTR [esp+0x4c],edx
  41ec21:	adc    ebx,ebx
  41ec23:	mov    DWORD PTR [esp+0x48],0x53b7
  41ec2b:	mov    DWORD PTR [esp+0x4c],0x3d65
  41ec33:	cmp    DWORD PTR ds:0x422922,0x0
  41ec3a:	mov    ebx,DWORD PTR ds:0x4228ce
  41ec40:	mov    esi,0x4014
  41ec45:	jmp    0x41ecba
  41ec4a:	mov    DWORD PTR ds:0x42291a,ecx
  41ec50:	jle    0x41ec9d
  41ec56:	push   0x1943
  41ec5b:	push   DWORD PTR [ebp-0xc]
  41ec5e:	push   DWORD PTR [ebp-0x14]
  41ec61:	push   0x5e2e
  41ec66:	push   0x7771
  41ec6b:	push   0x1795
  41ec70:	push   DWORD PTR [ebp-0x24]
  41ec73:	push   0x7fcf
  41ec78:	push   DWORD PTR [ebp-0x10]
  41ec7b:	call   DWORD PTR ds:0x42a2c4
  41ec81:	and    DWORD PTR ds:0x4228f6,ebx
  41ec87:	xor    ebx,esi
  41ec89:	xor    ebx,ebx
  41ec8b:	xor    ebx,DWORD PTR ds:0x42295a
  41ec91:	or     ebx,DWORD PTR ds:0x4228d2
  41ec97:	mov    DWORD PTR ds:0x42295a,ebx
  41ec9d:	xor    esi,0x902
  41eca3:	dec    DWORD PTR ds:0x4228ca
  41eca9:	mov    ebx,DWORD PTR ds:0x4229fa
  41ecaf:	mov    esi,DWORD PTR ds:0x422a42
  41ecb5:	sub    ebx,esi
  41ecb7:	add    ebx,DWORD PTR [ebx+esi*1]
  41ecba:	mov    DWORD PTR [esp+0x48],0x3123
  41ecc2:	adc    ebx,esi
  41ecc4:	mov    DWORD PTR [esp+0x4c],0x4c23
  41eccc:	mov    DWORD PTR ds:0x4228b6,0x79fc
  41ecd6:	mov    ebx,0xba699573
  41ecdb:	xor    DWORD PTR ds:0x4229be,edi
  41ece1:	mov    DWORD PTR [esp+0x20],ebx
  41ece5:	xor    DWORD PTR ds:0x42295a,0x1cf0
  41ecef:	mov    esi,0x9c0a89d8
  41ecf4:	sbb    DWORD PTR ds:0x422896,0x240d
  41ecfe:	mov    DWORD PTR [esp+0x24],esi
  41ed02:	add    DWORD PTR ds:0x4228d2,0x7237
  41ed0c:	mov    DWORD PTR [esp+0x70],0xba699577
  41ed14:	and    DWORD PTR ds:0x4228ba,0x422966
  41ed1e:	mov    DWORD PTR [esp+0x74],esi
  41ed22:	call   0x41a715
  41ed27:	lea    eax,[esp+0x58]
  41ed2b:	xor    edx,edx
  41ed2d:	or     edx,DWORD PTR ds:0x422892
  41ed33:	sbb    DWORD PTR ds:0x4228de,edx
  41ed39:	mov    DWORD PTR [esp+0x10],eax
  41ed3d:	mov    edx,DWORD PTR ds:0x422a32
  41ed43:	mov    ecx,DWORD PTR ds:0x422a56
  41ed49:	sub    edx,ecx
  41ed4b:	and    edx,DWORD PTR [edx+ecx*1]
  41ed4e:	lea    eax,[esp+0x68]
  41ed52:	cmp    DWORD PTR ds:0x42292a,0x0
  41ed59:	mov    DWORD PTR ds:0x422992,0x1c86
  41ed63:	mov    ecx,0x3791
  41ed68:	jmp    0x41edca
  41ed6d:	mov    ecx,0x61d6
  41ed72:	mov    ecx,0xdc4
  41ed77:	jge    0x41edae
  41ed7d:	push   DWORD PTR [ebp-0x28]
  41ed80:	call   DWORD PTR ds:0x42a2c8
  41ed86:	and    DWORD PTR ds:0x4228fe,0x4228ea
  41ed90:	sbb    DWORD PTR ds:0x4228a6,edx
  41ed96:	mov    ecx,DWORD PTR ds:0x4228de
  41ed9c:	adc    ecx,DWORD PTR ds:0x4229aa
  41eda2:	mov    DWORD PTR ds:0x4228de,ecx
  41eda8:	inc    DWORD PTR ds:0x4228b2
  41edae:	adc    edx,0x372b
  41edb4:	and    DWORD PTR ds:0x4229be,edx
  41edba:	adc    DWORD PTR ds:0x4229ae,0x769d
  41edc4:	xor    DWORD PTR ds:0x422952,edx
  41edca:	mov    DWORD PTR [esp+0x18],eax
  41edce:	mov    eax,ds:0x422268
  41edd3:	and    DWORD PTR ds:0x422962,ecx
  41edd9:	mov    eax,DWORD PTR [eax+0x1d8]
  41eddf:	mov    eax,DWORD PTR [eax]
  41ede1:	sub    DWORD PTR ds:0x42293a,edx
  41ede7:	mov    ecx,eax
  41ede9:	cmp    DWORD PTR ds:0x422932,0x0
  41edf0:	mov    DWORD PTR ds:0x4229c2,0xfd6
  41edfa:	mov    DWORD PTR ds:0x4229a6,edx
  41ee00:	jmp    0x41ee46
  41ee05:	mov    DWORD PTR ds:0x422992,0x2118
  41ee0f:	jae    0x41ee30
  41ee15:	push   0x4228a6
  41ee1a:	push   0x66c0
  41ee1f:	call   DWORD PTR ds:0x42a084
  41ee25:	inc    edx
  41ee26:	sbb    DWORD PTR ds:0x4228d2,0x6891
  41ee30:	xor    edx,0x2613
  41ee36:	sbb    edx,0x7527
  41ee3c:	mov    DWORD PTR ds:0x4229d2,0x388f
  41ee46:	xor    ecx,0xa3e69a9f
  41ee4c:	xor    eax,0x1
  41ee4f:	shl    eax,0x1e
  41ee52:	mov    DWORD PTR ds:0x4229b6,0x7a6d
  41ee5c:	shr    ecx,0x2
  41ee5f:	xor    edx,edx
  41ee61:	xor    edx,DWORD PTR ds:0x42289a
  41ee67:	or     DWORD PTR ds:0x4229d2,edx
  41ee6d:	or     ecx,eax
  41ee6f:	mov    eax,DWORD PTR [esp+0x18]
  41ee73:	mov    edx,DWORD PTR ds:0x4228ce
  41ee79:	sbb    DWORD PTR ds:0x4228a6,edx
  41ee7f:	mov    DWORD PTR [eax],ecx
  41ee81:	cmp    DWORD PTR ds:0x4229a6,0x0
  41ee88:	mov    DWORD PTR ds:0x4229b6,0x1832
  41ee92:	mov    DWORD PTR ds:0x42296a,0x16b9
  41ee9c:	jmp    0x41ef02
  41eea1:	mov    DWORD PTR ds:0x42290a,0x4517
  41eeab:	mov    eax,ds:0x4229ca
  41eeb0:	jbe    0x41eede
  41eeb6:	push   DWORD PTR [ebp-0x10]
  41eeb9:	push   DWORD PTR [ebp-0x28]
  41eebc:	push   0x51cb
  41eec1:	push   DWORD PTR [ebp-0x10]
  41eec4:	call   DWORD PTR ds:0x42a2cc
  41eeca:	sbb    ecx,0x7972
  41eed0:	mov    edx,DWORD PTR ds:0x422952
  41eed6:	xor    DWORD PTR ds:0x4229a2,edx
  41eedc:	add    edx,edx
  41eede:	mov    edx,DWORD PTR ds:0x4229e2
  41eee4:	mov    edx,DWORD PTR [edx]
  41eee6:	adc    DWORD PTR ds:0x42296e,edx
  41eeec:	sub    DWORD PTR ds:0x422992,0x5992
  41eef6:	sbb    DWORD PTR ds:0x42294e,edi
  41eefc:	neg    DWORD PTR ds:0x4228c2
  41ef02:	lea    edi,[ebx-0x10]
  41ef05:	add    DWORD PTR ds:0x4229a6,0x146e
  41ef0f:	mov    DWORD PTR [esp+0x80],edi
  41ef16:	or     DWORD PTR ds:0x42297e,ecx
  41ef1c:	mov    DWORD PTR [esp+0x84],esi
  41ef23:	mov    eax,DWORD PTR [esp+0x80]
  41ef2a:	mov    ecx,DWORD PTR [esp+0x84]
  41ef31:	sub    edx,DWORD PTR ds:0x42289a
  41ef37:	shrd   eax,ecx,0x2
  41ef3b:	shr    ecx,0x2
  41ef3e:	mov    ecx,DWORD PTR [esp+0x80]
  41ef45:	adc    edx,DWORD PTR ds:0x4228d2
  41ef4b:	mov    edx,DWORD PTR [esp+0x84]
  41ef52:	adc    DWORD PTR ds:0x4228ea,0x422972
  41ef5c:	xor    eax,0x2e9a655c
  41ef61:	xor    edx,edx
  41ef63:	or     DWORD PTR ds:0x42297e,0x4228ea
  41ef6d:	or     edx,eax
  41ef6f:	mov    eax,ds:0x422268
  41ef74:	or     DWORD PTR ds:0x4229b2,0x2c69
  41ef7e:	push   edx
  41ef7f:	push   DWORD PTR [eax+0x19c]
  41ef85:	or     DWORD PTR ds:0x422922,0x4228d6
  41ef8f:	lea    eax,[esp+0x84]
  41ef96:	add    DWORD PTR ds:0x4228ca,0x6620
  41efa0:	push   eax
  41efa1:	shl    ecx,0x1e
  41efa4:	call   0x41d2ea
  41efa9:	lea    eax,[ebp+0x10]
  41efac:	xor    DWORD PTR ds:0x422946,0x45ca
  41efb6:	push   eax
  41efb7:	and    DWORD PTR ds:0x42292a,0x42289a
  41efc1:	mov    DWORD PTR [esp+0x4c],edi
  41efc5:	sbb    DWORD PTR ds:0x4228ea,0x4647
  41efcf:	mov    DWORD PTR [esp+0x50],esi
  41efd3:	lea    eax,[ebp+0xc]
  41efd6:	push   eax
  41efd7:	mov    DWORD PTR ds:0x4229a2,0x343e
  41efe1:	mov    DWORD PTR [esp+0x50],edi
  41efe5:	lea    eax,[ebp+0x8]
  41efe8:	sbb    DWORD PTR ds:0x4229a6,0x424a
  41eff2:	mov    DWORD PTR [esp+0x54],esi
  41eff6:	sub    DWORD PTR ds:0x4228de,0x42288e
  41f000:	mov    DWORD PTR [esp+0x50],edi
  41f004:	add    DWORD PTR ds:0x42298a,0x42297a
  41f00e:	mov    DWORD PTR [esp+0x54],esi
  41f012:	push   eax
  41f013:	not    DWORD PTR ds:0x422996
  41f019:	call   0x41c14b
  41f01e:	or     DWORD PTR ds:0x42299a,0x467c
  41f028:	push   0x4
  41f02a:	adc    DWORD PTR ds:0x422896,0x42298a
  41f034:	push   0x4220ec
  41f039:	or     DWORD PTR ds:0x4229a2,0x42297a
  41f043:	push   DWORD PTR [esp+0x18]
  41f047:	adc    DWORD PTR ds:0x422902,0x4228b2
  41f051:	call   0x41d2ea
  41f056:	mov    eax,DWORD PTR [esp+0x10]
  41f05a:	adc    DWORD PTR ds:0x42293e,edi
  41f060:	mov    ecx,DWORD PTR [esp+0x10]
  41f064:	add    edx,DWORD PTR ds:0x422962
  41f06a:	mov    eax,DWORD PTR [eax]
  41f06c:	cmp    DWORD PTR ds:0x422996,0x0
  41f073:	mov    DWORD PTR ds:0x422976,0x7903
  41f07d:	not    DWORD PTR ds:0x4228e2
  41f083:	jmp    0x41f0b7
  41f088:	mov    DWORD PTR ds:0x422942,edi
  41f08e:	jle    0x41f0ab
  41f094:	push   DWORD PTR [ebp-0x10]
  41f097:	call   DWORD PTR ds:0x42a088
  41f09d:	neg    edi
  41f09f:	sbb    edx,DWORD PTR ds:0x422936
  41f0a5:	not    DWORD PTR ds:0x42299a
  41f0ab:	not    edi
  41f0ad:	adc    DWORD PTR ds:0x42290e,0x107e
  41f0b7:	mov    ecx,DWORD PTR [ecx]
  41f0b9:	shr    eax,0x1e
  41f0bc:	shl    ecx,0x2
  41f0bf:	or     eax,ecx
  41f0c1:	mov    ecx,DWORD PTR [esp+0x10]
  41f0c5:	xor    eax,0xa3e69a9d
  41f0ca:	mov    DWORD PTR [ecx],eax
  41f0cc:	lea    eax,[esp+0x54]
  41f0d0:	mov    DWORD PTR [esp+0x94],eax
  41f0d7:	lea    eax,[esp+0x94]
  41f0de:	mov    DWORD PTR [esp+0x90],eax
  41f0e5:	mov    eax,DWORD PTR [esp+0x54]
  41f0e9:	sub    DWORD PTR [esp+0x54],eax
  41f0ed:	lea    eax,[ebp+0x4]
  41f0f0:	xor    DWORD PTR [esp+0x54],eax
  41f0f4:	mov    DWORD PTR [esp+0x10],0x5b3d
  41f0fc:	mov    DWORD PTR [esp+0x14],0x4445
  41f104:	mov    DWORD PTR [esp+0x38],0xa52
  41f10c:	mov    DWORD PTR [esp+0x3c],0x1c69
  41f114:	mov    eax,DWORD PTR [esp+0x38]
  41f118:	mov    ecx,DWORD PTR [esp+0x3c]
  41f11c:	mov    edx,DWORD PTR [esp+0x10]
  41f120:	mov    edi,DWORD PTR [esp+0x14]
  41f124:	add    eax,0xffffd1a5
  41f129:	adc    ecx,0xffffedf0
  41f12f:	xor    eax,edx
  41f131:	xor    ecx,edi
  41f133:	and    eax,0x325d
  41f138:	mov    DWORD PTR [esp+0x40],eax
  41f13c:	and    ecx,0x3544
  41f142:	mov    DWORD PTR [esp+0x44],ecx
  41f146:	mov    DWORD PTR [esp+0x18],0x1704
  41f14e:	mov    DWORD PTR [esp+0x1c],0x4a75
  41f156:	mov    DWORD PTR [esp+0x10],0x985
  41f15e:	mov    DWORD PTR [esp+0x14],0x341
  41f166:	mov    DWORD PTR [esp+0x38],0x5aa9
  41f16e:	mov    DWORD PTR [esp+0x3c],0x221a
  41f176:	mov    eax,DWORD PTR [esp+0x38]
  41f17a:	mov    ecx,DWORD PTR [esp+0x3c]
  41f17e:	mov    edx,DWORD PTR [esp+0x10]
  41f182:	mov    edi,DWORD PTR [esp+0x14]
  41f186:	push   edi
  41f187:	push   edx
  41f188:	or     ecx,0xc32
  41f18e:	or     eax,0x502a
  41f193:	push   ecx
  41f194:	push   eax
  41f195:	call   0x41df91
  41f19a:	mov    ecx,DWORD PTR [esp+0x18]
  41f19e:	mov    edi,DWORD PTR [esp+0x1c]
  41f1a2:	sub    eax,ecx
  41f1a4:	mov    ecx,DWORD PTR [esp+0x40]
  41f1a8:	sbb    edx,edi
  41f1aa:	mov    edi,DWORD PTR [esp+0x44]
  41f1ae:	cmp    ecx,eax
  41f1b0:	jne    0x41f1be
  41f1b6:	cmp    edi,edx
  41f1b8:	je     0x41f67d
  41f1be:	mov    DWORD PTR [esp+0x10],0x71ba
  41f1c6:	mov    DWORD PTR [esp+0x14],0x5f78
  41f1ce:	mov    DWORD PTR [esp+0x38],0x7b9c
  41f1d6:	mov    DWORD PTR [esp+0x3c],0x5622
  41f1de:	mov    eax,DWORD PTR [esp+0x38]
  41f1e2:	mov    ecx,DWORD PTR [esp+0x3c]
  41f1e6:	mov    edx,DWORD PTR [esp+0x10]
  41f1ea:	mov    edi,DWORD PTR [esp+0x14]
  41f1ee:	add    eax,0x3646
  41f1f3:	adc    ecx,0x7ace
  41f1f9:	xor    eax,0x3e2e
  41f1fe:	xor    ecx,0x4b71
  41f204:	and    eax,edx
  41f206:	mov    DWORD PTR [esp+0x48],eax
  41f20a:	and    ecx,edi
  41f20c:	mov    DWORD PTR [esp+0x4c],ecx
  41f210:	mov    DWORD PTR [esp+0x40],0x18d6
  41f218:	mov    DWORD PTR [esp+0x44],0x2bb4
  41f220:	mov    DWORD PTR [esp+0x18],0x14
  41f228:	mov    DWORD PTR [esp+0x1c],0x0
  41f230:	mov    DWORD PTR [esp+0x10],0x1
  41f238:	mov    DWORD PTR [esp+0x14],0x0
  41f240:	mov    DWORD PTR [esp+0x38],0xa87
  41f248:	mov    DWORD PTR [esp+0x3c],0x7fd9
  41f250:	mov    eax,DWORD PTR [esp+0x38]
  41f254:	mov    ecx,DWORD PTR [esp+0x3c]
  41f258:	push   0x2
  41f25a:	push   0x7f349462
  41f25f:	xor    ecx,0x3601
  41f265:	xor    eax,0x5491
  41f26a:	push   ecx
  41f26b:	push   eax
  41f26c:	call   0x421ad6
  41f271:	mov    ecx,DWORD PTR [esp+0x10]
  41f275:	mov    edi,DWORD PTR [esp+0x14]
  41f279:	push   edi
  41f27a:	push   ecx
  41f27b:	push   edx
  41f27c:	push   eax
  41f27d:	call   0x421ad6
  41f282:	mov    ecx,DWORD PTR [esp+0x18]
  41f286:	mov    edi,DWORD PTR [esp+0x1c]
  41f28a:	push   edi
  41f28b:	push   ecx
  41f28c:	push   edx
  41f28d:	push   eax
  41f28e:	call   0x421ad6
  41f293:	mov    ecx,DWORD PTR [esp+0x40]
  41f297:	mov    edi,DWORD PTR [esp+0x44]
  41f29b:	add    eax,ecx
  41f29d:	mov    ecx,DWORD PTR [esp+0x48]
  41f2a1:	adc    edx,edi
  41f2a3:	mov    edi,DWORD PTR [esp+0x4c]
  41f2a7:	cmp    ecx,eax
  41f2a9:	jne    0x41f2b7
  41f2af:	cmp    edi,edx
  41f2b1:	je     0x41f67d
  41f2b7:	mov    eax,DWORD PTR [esp+0x54]
  41f2bb:	mov    edx,DWORD PTR [esp+0x20]
  41f2bf:	mov    edi,DWORD PTR [esp+0x24]
  41f2c3:	xor    ecx,ecx
  41f2c5:	shld   ecx,eax,0x2
  41f2c9:	shl    eax,0x2
  41f2cc:	xor    eax,ebx
  41f2ce:	xor    ecx,esi
  41f2d0:	cmp    eax,edx
  41f2d2:	jne    0x41f2e0
  41f2d8:	cmp    ecx,edi
  41f2da:	je     0x41f67d
  41f2e0:	mov    eax,DWORD PTR [esp+0x58]
  41f2e4:	cmp    eax,0xa3e69a99
  41f2e9:	je     0x41f340
  41f2ef:	mov    eax,DWORD PTR [esp+0x20]
  41f2f3:	mov    ecx,DWORD PTR [esp+0x24]
  41f2f7:	mov    edx,DWORD PTR [esp+0x20]
  41f2fb:	mov    edi,DWORD PTR [esp+0x24]
  41f2ff:	xor    edi,esi
  41f301:	xor    edx,ebx
  41f303:	shrd   edx,edi,0x2
  41f307:	mov    ecx,eax
  41f309:	shr    edi,0x2
  41f30c:	xor    eax,eax
  41f30e:	mov    DWORD PTR [esp+0x10],edi
  41f312:	mov    edi,edx
  41f314:	or     edi,eax
  41f316:	mov    eax,DWORD PTR [esp+0x10]
  41f31a:	shl    ecx,0x1e
  41f31d:	xor    ecx,0xc0000000
  41f323:	or     eax,ecx
  41f325:	mov    DWORD PTR [esp+0x4c],eax
  41f329:	mov    eax,DWORD PTR [esp+0x68]
  41f32d:	cdq    
  41f32e:	cmp    edi,eax
  41f330:	jne    0x41f67d
  41f336:	cmp    DWORD PTR [esp+0x4c],edx
  41f33a:	jne    0x41f67d
  41f340:	mov    DWORD PTR [esp+0x64],0x422304
  41f348:	mov    DWORD PTR [esp+0x6c],0x4222fc
  41f350:	mov    eax,DWORD PTR [esp+0x7c]
  41f354:	mov    eax,DWORD PTR [esp+0x7c]
  41f358:	mov    edx,DWORD PTR [esp+0x20]
  41f35c:	mov    edi,DWORD PTR [esp+0x24]
  41f360:	xor    ecx,ecx
  41f362:	shld   ecx,eax,0x2
  41f366:	shl    eax,0x2
  41f369:	xor    eax,ebx
  41f36b:	xor    ecx,esi
  41f36d:	cmp    edx,eax
  41f36f:	jne    0x41f58d
  41f375:	cmp    edi,ecx
  41f377:	jne    0x41f58d
  41f37d:	mov    DWORD PTR [esp+0x10],0x42228c
  41f385:	mov    ecx,DWORD PTR [esp+0x20]
  41f389:	mov    eax,DWORD PTR [esp+0x24]
  41f38d:	shrd   ecx,eax,0x2
  41f391:	shr    eax,0x2
  41f394:	mov    eax,DWORD PTR [esp+0x20]
  41f398:	mov    edx,DWORD PTR [esp+0x24]
  41f39c:	shl    eax,0x1e
  41f39f:	mov    edi,0x2e9a655c
  41f3a4:	xor    ecx,edi
  41f3a6:	xor    eax,eax
  41f3a8:	or     eax,ecx
  41f3aa:	mov    ecx,DWORD PTR [esp+0x10]
  41f3ae:	mov    ecx,DWORD PTR [ecx+0xc]
  41f3b1:	cmp    eax,DWORD PTR [ecx]
  41f3b3:	jne    0x41f52c
  41f3b9:	mov    eax,0x65c7
  41f3be:	mov    WORD PTR [esp+0x40],ax
  41f3c3:	mov    eax,0x6062
  41f3c8:	mov    WORD PTR [esp+0x18],ax
  41f3cd:	mov    eax,0x125d
  41f3d2:	mov    WORD PTR [esp+0x10],ax
  41f3d7:	movzx  eax,WORD PTR [esp+0x10]
  41f3dc:	mov    ecx,0x2d0f
  41f3e1:	and    ax,cx
  41f3e4:	mov    cx,WORD PTR [esp+0x18]
  41f3e9:	or     ax,cx
  41f3ec:	mov    cx,WORD PTR [esp+0x40]
  41f3f1:	add    ax,cx
  41f3f4:	or     eax,0x3b22
  41f3f9:	mov    WORD PTR [esp+0x30],ax
  41f3fe:	mov    eax,0x57d4
  41f403:	mov    WORD PTR [esp+0x40],ax
  41f408:	mov    eax,0x3b21
  41f40d:	mov    WORD PTR [esp+0x2c],ax
  41f412:	mov    eax,0x52fd
  41f417:	mov    WORD PTR [esp+0x18],ax
  41f41c:	mov    eax,0x2ce0
  41f421:	mov    WORD PTR [esp+0x10],ax
  41f426:	mov    ax,WORD PTR [esp+0x10]
  41f42b:	mov    cx,WORD PTR [esp+0x18]
  41f430:	or     ax,cx
  41f433:	mov    ecx,0x21a4
  41f438:	or     ax,cx
  41f43b:	mov    cx,WORD PTR [esp+0x40]
  41f440:	sub    ax,cx
  41f443:	mov    cx,WORD PTR [esp+0x2c]
  41f448:	sub    ax,cx
  41f44b:	mov    cx,WORD PTR [esp+0x30]
  41f450:	cmp    cx,ax
  41f453:	jbe    0x41f52c
  41f459:	mov    eax,0x5008
  41f45e:	mov    WORD PTR [esp+0x18],ax
  41f463:	mov    eax,0x60ce
  41f468:	mov    WORD PTR [esp+0x10],ax
  41f46d:	movzx  eax,WORD PTR [esp+0x10]
  41f472:	mov    ecx,0x2095
  41f477:	or     ax,cx
  41f47a:	mov    cx,WORD PTR [esp+0x18]
  41f47f:	sub    ax,cx
  41f482:	mov    ecx,0x10de
  41f487:	or     eax,0x742f
  41f48c:	imul   eax,eax,0x30b2
  41f492:	mov    WORD PTR [esp+0x30],ax
  41f497:	mov    eax,0x6143
  41f49c:	mov    WORD PTR [esp+0x2c],ax
  41f4a1:	mov    eax,0x679f
  41f4a6:	mov    WORD PTR [esp+0x40],ax
  41f4ab:	mov    eax,0x1210
  41f4b0:	mov    WORD PTR [esp+0x18],ax
  41f4b5:	mov    eax,0x3308
  41f4ba:	mov    WORD PTR [esp+0x10],ax
  41f4bf:	mov    ax,WORD PTR [esp+0x10]
  41f4c4:	sub    ax,cx
  41f4c7:	mov    cx,WORD PTR [esp+0x18]
  41f4cc:	xor    ax,cx
  41f4cf:	mov    cx,WORD PTR [esp+0x40]
  41f4d4:	imul   ax,cx
  41f4d8:	mov    cx,WORD PTR [esp+0x2c]
  41f4dd:	and    ax,cx
  41f4e0:	mov    ecx,0x694c
  41f4e5:	and    ax,cx
  41f4e8:	mov    cx,WORD PTR [esp+0x30]
  41f4ed:	cmp    cx,ax
  41f4f0:	ja     0x41f52c
  41f4f6:	mov    eax,DWORD PTR [esp+0x20]
  41f4fa:	mov    ecx,DWORD PTR [esp+0x24]
  41f4fe:	shrd   eax,ecx,0x2
  41f502:	shr    ecx,0x2
  41f505:	mov    ecx,DWORD PTR [esp+0x20]
  41f509:	mov    edx,DWORD PTR [esp+0x24]
  41f50d:	xor    eax,edi
  41f50f:	xor    edx,edx
  41f511:	or     edx,eax
  41f513:	push   edx
  41f514:	push   esi
  41f515:	push   0xba699563
  41f51a:	lea    eax,[esp+0x7c]
  41f51e:	push   eax
  41f51f:	lea    eax,[esp+0x30]
  41f523:	push   eax
  41f524:	shl    ecx,0x1e
  41f527:	call   0x41d272
  41f52c:	push   DWORD PTR [esp+0x74]
  41f530:	push   DWORD PTR [esp+0x74]
  41f534:	push   DWORD PTR [esp+0x2c]
  41f538:	push   DWORD PTR [esp+0x2c]
  41f53c:	call   0x41d446
  41f541:	mov    ecx,DWORD PTR [esp+0x20]
  41f545:	mov    eax,DWORD PTR [esp+0x24]
  41f549:	shrd   ecx,eax,0x2
  41f54d:	shr    eax,0x2
  41f550:	mov    eax,DWORD PTR [esp+0x20]
  41f554:	mov    edx,DWORD PTR [esp+0x24]
  41f558:	shl    eax,0x1e
  41f55b:	xor    eax,eax
  41f55d:	xor    ecx,edi
  41f55f:	or     eax,ecx
  41f561:	mov    ecx,DWORD PTR [esp+0x64]
  41f565:	mov    DWORD PTR [ecx],eax
  41f567:	mov    ecx,DWORD PTR [esp+0x20]
  41f56b:	mov    eax,DWORD PTR [esp+0x24]
  41f56f:	shrd   ecx,eax,0x2
  41f573:	shr    eax,0x2
  41f576:	mov    eax,DWORD PTR [esp+0x20]
  41f57a:	mov    edx,DWORD PTR [esp+0x24]
  41f57e:	shl    eax,0x1e
  41f581:	xor    ecx,edi
  41f583:	xor    eax,eax
  41f585:	or     eax,ecx
  41f587:	mov    ecx,DWORD PTR [esp+0x6c]
  41f58b:	mov    DWORD PTR [ecx],eax
  41f58d:	mov    eax,DWORD PTR [esp+0x6c]
  41f591:	mov    ecx,DWORD PTR [esp+0x6c]
  41f595:	mov    eax,DWORD PTR [eax]
  41f597:	cmp    eax,DWORD PTR [ecx]
  41f599:	jne    0x41f661
  41f59f:	mov    eax,DWORD PTR [esp+0x64]
  41f5a3:	mov    ecx,DWORD PTR [esp+0x64]
  41f5a7:	mov    eax,DWORD PTR [eax]
  41f5a9:	cmp    eax,DWORD PTR [ecx]
  41f5ab:	jne    0x41f661
  41f5b1:	mov    BYTE PTR [esp+0x40],0x20
  41f5b6:	mov    BYTE PTR [esp+0x2c],0x3
  41f5bb:	mov    BYTE PTR [esp+0x30],0x6d
  41f5c0:	mov    BYTE PTR [esp+0x37],0x90
  41f5c5:	mov    al,BYTE PTR [esp+0x37]
  41f5c9:	mov    cl,BYTE PTR [esp+0x30]
  41f5cd:	or     al,0xdc
  41f5cf:	sub    al,cl
  41f5d1:	mov    cl,BYTE PTR [esp+0x2c]
  41f5d5:	sub    al,0x56
  41f5d7:	movzx  eax,al
  41f5da:	movzx  ecx,cl
  41f5dd:	cdq    
  41f5de:	idiv   ecx
  41f5e0:	movzx  ecx,BYTE PTR [esp+0x40]
  41f5e5:	or     eax,ecx
  41f5e7:	mov    BYTE PTR [esp+0x10],al
  41f5eb:	mov    BYTE PTR [esp+0x18],0x1
  41f5f0:	mov    BYTE PTR [esp+0x37],0xcf
  41f5f5:	mov    BYTE PTR [esp+0x30],0x6
  41f5fa:	mov    BYTE PTR [esp+0x2c],0x25
  41f5ff:	mov    BYTE PTR [esp+0x40],0xf8
  41f604:	mov    al,BYTE PTR [esp+0x40]
  41f608:	mov    cl,BYTE PTR [esp+0x2c]
  41f60c:	or     al,0xc4
  41f60e:	and    al,cl
  41f610:	mov    cl,BYTE PTR [esp+0x30]
  41f614:	imul   cl
  41f616:	mov    cl,BYTE PTR [esp+0x37]
  41f61a:	movzx  ecx,cl
  41f61d:	movzx  eax,al
  41f620:	and    eax,ecx
  41f622:	mov    cl,BYTE PTR [esp+0x18]
  41f626:	movzx  ecx,cl
  41f629:	cdq    
  41f62a:	idiv   ecx
  41f62c:	mov    cl,BYTE PTR [esp+0x10]
  41f630:	cmp    cl,al
  41f632:	je     0x41f67d
  41f638:	lea    eax,[esp+0x90]
  41f63f:	push   eax
  41f640:	lea    edi,[esp+0x90]
  41f647:	call   0x41c4a4
  41f64c:	cmp    eax,ebx
  41f64e:	jne    0x41f67d
  41f654:	cmp    edx,esi
  41f656:	jne    0x41f67d
  41f65c:	jmp    0x41e1e3
  41f661:	mov    eax,DWORD PTR [esp+0x70]
  41f665:	mov    ecx,DWORD PTR [esp+0x74]
  41f669:	mov    edx,DWORD PTR [esp+0x20]
  41f66d:	mov    edi,DWORD PTR [esp+0x24]
  41f671:	add    eax,edx
  41f673:	adc    ecx,edi
  41f675:	mov    DWORD PTR [esp+0x20],eax
  41f679:	mov    DWORD PTR [esp+0x24],ecx
  41f67d:	push   0x4
  41f67f:	push   0x422268
  41f684:	lea    eax,[esp+0x64]
  41f688:	push   eax
  41f689:	call   0x41d2ea
  41f68e:	mov    eax,DWORD PTR [esp+0x5c]
  41f692:	push   0x4
  41f694:	push   DWORD PTR [eax+0x1a4]
  41f69a:	lea    eax,[esp+0x68]
  41f69e:	push   eax
  41f69f:	call   0x41d2ea
  41f6a4:	mov    eax,DWORD PTR [esp+0x5c]
  41f6a8:	mov    eax,DWORD PTR [eax+0x1a4]
  41f6ae:	mov    eax,DWORD PTR [eax]
  41f6b0:	mov    ecx,DWORD PTR [esp+0x5c]
  41f6b4:	mov    eax,DWORD PTR [eax+0x3c]
  41f6b7:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41f6bd:	mov    ecx,DWORD PTR [ecx]
  41f6bf:	lea    eax,[ecx+eax*1+0x28]
  41f6c3:	mov    eax,DWORD PTR [eax]
  41f6c5:	add    DWORD PTR [esp+0x60],eax
  41f6c9:	mov    DWORD PTR [esp+0x18],0x127
  41f6d1:	mov    DWORD PTR [esp+0x10],0x421a
  41f6d9:	mov    eax,DWORD PTR [esp+0x10]
  41f6dd:	and    eax,0xffffc244
  41f6e2:	add    eax,DWORD PTR [esp+0x18]
  41f6e6:	and    eax,0xfffffe5a
  41f6eb:	sub    eax,0x2ae1
  41f6f0:	and    eax,0x6f90
  41f6f5:	mov    DWORD PTR [esp+0x18],eax
  41f6f9:	mov    DWORD PTR [esp+0x10],0x1515
  41f701:	mov    eax,DWORD PTR [esp+0x10]
  41f705:	mov    ecx,DWORD PTR [esp+0x18]
  41f709:	or     eax,0x7113
  41f70e:	add    eax,0x3d6a
  41f713:	cmp    ecx,eax
  41f715:	je     0x41f805
  41f71b:	mov    eax,DWORD PTR [esp+0x54]
  41f71f:	mov    edx,DWORD PTR [esp+0x20]
  41f723:	mov    edi,DWORD PTR [esp+0x24]
  41f727:	xor    ecx,ecx
  41f729:	shld   ecx,eax,0x2
  41f72d:	shl    eax,0x2
  41f730:	xor    eax,ebx
  41f732:	xor    ecx,esi
  41f734:	cmp    eax,edx
  41f736:	jne    0x41f744
  41f73c:	cmp    ecx,edi
  41f73e:	je     0x41f7be
  41f744:	mov    eax,DWORD PTR [esp+0x58]
  41f748:	mov    eax,DWORD PTR [esp+0x58]
  41f74c:	mov    eax,DWORD PTR [esp+0x58]
  41f750:	mov    ecx,DWORD PTR [esp+0x58]
  41f754:	xor    eax,0xa3e69a9f
  41f759:	xor    ecx,0x1
  41f75c:	shr    eax,0x2
  41f75f:	shl    ecx,0x1e
  41f762:	or     eax,ecx
  41f764:	xor    ecx,ecx
  41f766:	shld   ecx,eax,0x2
  41f76a:	shl    eax,0x2
  41f76d:	xor    eax,ebx
  41f76f:	xor    ecx,esi
  41f771:	cmp    eax,0xba699577
  41f776:	jne    0x41f784
  41f77c:	cmp    ecx,esi
  41f77e:	je     0x41f805
  41f784:	mov    eax,DWORD PTR [esp+0x68]
  41f788:	cdq    
  41f789:	mov    eax,DWORD PTR [esp+0x68]
  41f78d:	mov    ecx,edx
  41f78f:	cdq    
  41f790:	shld   edx,eax,0x2
  41f794:	shr    ecx,0x1e
  41f797:	xor    edi,edi
  41f799:	shl    eax,0x2
  41f79c:	or     eax,ecx
  41f79e:	or     edx,edi
  41f7a0:	mov    ecx,edx
  41f7a2:	mov    edx,DWORD PTR [esp+0x20]
  41f7a6:	xor    eax,ebx
  41f7a8:	xor    ecx,esi
  41f7aa:	mov    esi,DWORD PTR [esp+0x24]
  41f7ae:	cmp    edx,eax
  41f7b0:	jne    0x41f7be
  41f7b6:	cmp    esi,ecx
  41f7b8:	je     0x41f805
  41f7be:	push   DWORD PTR ds:0x422358
  41f7c4:	push   DWORD PTR ds:0x4220ec
  41f7ca:	mov    eax,ds:0x422268
  41f7cf:	mov    eax,DWORD PTR [eax+0x1a4]
  41f7d5:	push   DWORD PTR [eax]
  41f7d7:	mov    eax,DWORD PTR [esp+0x6c]
  41f7db:	call   eax
  41f7dd:	mov    ecx,DWORD PTR ds:0x422268
  41f7e3:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41f7e9:	mov    DWORD PTR [ecx],eax
  41f7eb:	mov    eax,ds:0x422268
  41f7f0:	push   0x4
  41f7f2:	add    eax,0x1dc
  41f7f7:	push   eax
  41f7f8:	lea    eax,[esp+0x94]
  41f7ff:	push   eax
  41f800:	call   0x41d2ea
  41f805:	mov    eax,DWORD PTR [esp+0x8c]
  41f80c:	mov    eax,DWORD PTR [eax]
  41f80e:	pop    edi
  41f80f:	pop    esi
  41f810:	pop    ebx
  41f811:	mov    esp,ebp
  41f813:	pop    ebp
  41f814:	ret    0xc
  41f817:	push   ebp
  41f818:	mov    ebp,esp
  41f81a:	sub    esp,0x23c
  41f820:	cmp    DWORD PTR ds:0x4228c2,0x0
  41f827:	mov    DWORD PTR ds:0x42297a,0x7f83
  41f831:	mov    DWORD PTR ds:0x4228d6,0x6307
  41f83b:	movzx  ecx,BYTE PTR ds:0x4228ba
  41f842:	jmp    0x41f8b8
  41f847:	mov    eax,0x73d2
  41f84c:	ja     0x41f898
  41f852:	push   0x7572
  41f857:	push   0x3356
  41f85c:	push   DWORD PTR [ebp-0x18]
  41f85f:	call   DWORD PTR ds:0x42a08c
  41f865:	movzx  ecx,WORD PTR ds:0x4228c6
  41f86c:	sub    DWORD PTR ds:0x42289e,ecx
  41f872:	add    DWORD PTR ds:0x42298a,0x51b4
  41f87c:	xor    DWORD PTR ds:0x4228ae,0x409b
  41f886:	mov    ecx,DWORD PTR ds:0x4229a2
  41f88c:	or     ecx,DWORD PTR ds:0x42293e
  41f892:	mov    DWORD PTR ds:0x4229a2,ecx
  41f898:	sbb    ecx,DWORD PTR ds:0x4229d2
  41f89e:	sbb    DWORD PTR ds:0x422926,0x11d6
  41f8a8:	mov    DWORD PTR ds:0x4228ca,0x27b8
  41f8b2:	sbb    DWORD PTR ds:0x422976,edi
  41f8b8:	push   ebx
  41f8b9:	and    eax,ecx
  41f8bb:	push   esi
  41f8bc:	movzx  ecx,WORD PTR ds:0x42293a
  41f8c3:	and    DWORD PTR ds:0x42292e,ecx
  41f8c9:	push   edi
  41f8ca:	xor    eax,eax
  41f8cc:	mov    DWORD PTR [ebp-0x50],0x1
  41f8d3:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41f8dd:	mov    DWORD PTR [ebp-0xb8],0x1
  41f8e7:	or     eax,0x7a0d
  41f8ec:	mov    ecx,DWORD PTR [ebp-0xb8]
  41f8f2:	cmp    DWORD PTR ds:0x4228aa,0x0
  41f8f9:	mov    DWORD PTR ds:0x4228ea,0x1a45
  41f903:	mov    DWORD PTR ds:0x422906,0x738a
  41f90d:	mov    DWORD PTR ds:0x42290a,edx
  41f913:	mov    DWORD PTR ds:0x42295a,0x6016
  41f91d:	jmp    0x41fa20
  41f922:	movzx  eax,BYTE PTR ds:0x422986
  41f929:	mov    DWORD PTR ds:0x422976,ecx
  41f92f:	jae    0x41f976
  41f935:	push   DWORD PTR [ebp-0x10]
  41f938:	push   0x88a2
  41f93d:	push   DWORD PTR [ebp-0x14]
  41f940:	push   0x19f9
  41f945:	push   DWORD PTR [ebp-0x10]
  41f948:	push   0x407d
  41f94d:	push   DWORD PTR [ebp-0x28]
  41f950:	push   0x5ee1
  41f955:	push   0x7b11
  41f95a:	push   DWORD PTR [ebp-0x20]
  41f95d:	push   DWORD PTR [ebp-0x24]
  41f960:	call   DWORD PTR ds:0x42a1b8
  41f966:	mov    DWORD PTR ds:0x4228ce,0x1a48
  41f970:	adc    DWORD PTR ds:0x42290a,ebx
  41f976:	adc    DWORD PTR ds:0x422956,0x4228f2
  41f980:	adc    DWORD PTR ds:0x42296a,0x42288e
  41f98a:	cmp    DWORD PTR ds:0x422996,0x0
  41f991:	mov    DWORD PTR ds:0x422926,0x4d3f
  41f99b:	mov    DWORD PTR ds:0x42299a,0x151a
  41f9a5:	mov    DWORD PTR ds:0x422896,0x407
  41f9af:	mov    DWORD PTR ds:0x422956,0x35c9
  41f9b9:	jmp    0x41fa20
  41f9be:	mov    eax,ds:0x42296e
  41f9c3:	jne    0x41f9fa
  41f9c9:	push   DWORD PTR [ebp-0x18]
  41f9cc:	call   DWORD PTR ds:0x42a1bc
  41f9d2:	xor    DWORD PTR ds:0x42292e,0x4228d2
  41f9dc:	xor    DWORD PTR ds:0x4229a6,0x7795
  41f9e6:	xor    DWORD PTR ds:0x42296e,0x5b89
  41f9f0:	add    DWORD PTR ds:0x4228a6,0x3dfd
  41f9fa:	sub    DWORD PTR ds:0x42298e,0x1198
  41fa04:	adc    DWORD PTR ds:0x4228ea,0x422902
  41fa0e:	add    DWORD PTR ds:0x4229c6,0x43e7
  41fa18:	xor    DWORD PTR ds:0x422902,ebx
  41fa1e:	neg    eax
  41fa20:	mov    eax,0x584
  41fa25:	sub    DWORD PTR ds:0x422976,0x422906
  41fa2f:	xor    edx,edx
  41fa31:	div    ecx
  41fa33:	cmp    DWORD PTR ds:0x42288a,0x0
  41fa3a:	mov    ecx,0x7438
  41fa3f:	mov    DWORD PTR ds:0x4229a6,0x7ff6
  41fa49:	mov    ecx,0x49e3
  41fa4e:	mov    DWORD PTR ds:0x42296e,0x37ce
  41fa58:	jmp    0x41faa6
  41fa5d:	mov    DWORD PTR ds:0x4228fa,0x7ac
  41fa67:	jb     0x41fa94
  41fa6d:	push   0x18bc
  41fa72:	call   DWORD PTR ds:0x42a090
  41fa78:	sbb    DWORD PTR ds:0x4228f2,0xcbd
  41fa82:	sbb    ecx,DWORD PTR ds:0x4228e2
  41fa88:	sub    DWORD PTR ds:0x42299e,ecx
  41fa8e:	and    ecx,DWORD PTR ds:0x4228a6
  41fa94:	or     ecx,0x1fe6
  41fa9a:	add    DWORD PTR ds:0x4228f6,ebx
  41faa0:	adc    ecx,0x2c1d
  41faa6:	imul   eax,eax,0x51d4
  41faac:	cmp    DWORD PTR ds:0x4228a6,0x0
  41fab3:	mov    DWORD PTR ds:0x4228da,ecx
  41fab9:	movzx  ecx,WORD PTR ds:0x42297e
  41fac0:	mov    DWORD PTR ds:0x422962,ebx
  41fac6:	jmp    0x41fb10
  41facb:	mov    DWORD PTR ds:0x4228e2,edx
  41fad1:	ja     0x41fafe
  41fad7:	push   0x4229a2
  41fadc:	push   DWORD PTR [ebp-0x28]
  41fadf:	push   DWORD PTR [ebp-0x20]
  41fae2:	call   DWORD PTR ds:0x42a094
  41fae8:	mov    DWORD PTR ds:0x4228a6,0x230b
  41faf2:	not    DWORD PTR ds:0x422976
  41faf8:	sub    DWORD PTR ds:0x422986,edi
  41fafe:	sub    ecx,DWORD PTR ds:0x422982
  41fb04:	adc    ecx,DWORD PTR ds:0x4229be
  41fb0a:	sub    ecx,DWORD PTR ds:0x4228fe
  41fb10:	mov    ecx,DWORD PTR [ebp-0xbc]
  41fb16:	xor    eax,ecx
  41fb18:	sbb    DWORD PTR ds:0x422892,ebx
  41fb1e:	and    eax,0x4c09
  41fb23:	mov    ecx,DWORD PTR [ebp-0x50]
  41fb26:	and    DWORD PTR ds:0x42296e,0x422982
  41fb30:	xor    edx,edx
  41fb32:	or     DWORD PTR ds:0x422956,0x4802
  41fb3c:	div    ecx
  41fb3e:	add    DWORD PTR ds:0x4229be,0x5f4b
  41fb48:	sub    eax,0x401
  41fb4d:	mov    ecx,DWORD PTR ds:0x4228de
  41fb53:	xor    DWORD PTR ds:0x422996,ecx
  41fb59:	mov    DWORD PTR [ebp-0x90],eax
  41fb5f:	cmp    DWORD PTR ds:0x4228b6,0x0
  41fb66:	mov    DWORD PTR ds:0x4228e6,edx
  41fb6c:	not    ecx
  41fb6e:	movzx  ecx,WORD PTR ds:0x4228d6
  41fb75:	jmp    0x41fba5
  41fb7a:	not    eax
  41fb7c:	jae    0x41fb93
  41fb82:	push   DWORD PTR [ebp-0x10]
  41fb85:	call   DWORD PTR ds:0x42a2d0
  41fb8b:	add    ecx,edx
  41fb8d:	and    edx,0x53dd
  41fb93:	add    DWORD PTR ds:0x42297e,0x1518
  41fb9d:	and    edx,edx
  41fb9f:	neg    DWORD PTR ds:0x422986
  41fba5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41fbaf:	or     eax,eax
  41fbb1:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41fbb8:	cmp    DWORD PTR ds:0x42298e,0x0
  41fbbf:	mov    DWORD PTR ds:0x422932,0x7de
  41fbc9:	mov    edx,0x2edc
  41fbce:	mov    DWORD PTR ds:0x422946,ebx
  41fbd4:	jmp    0x41fc3b
  41fbd9:	mov    DWORD PTR ds:0x4228b6,0xeb6
  41fbe3:	mov    ecx,DWORD PTR ds:0x422912
  41fbe9:	ja     0x41fc24
  41fbef:	push   0x8c9b
  41fbf4:	call   DWORD PTR ds:0x42a2d4
  41fbfa:	and    DWORD PTR ds:0x4228aa,0x7f6
  41fc04:	xor    edx,edx
  41fc06:	add    edx,DWORD PTR ds:0x422916
  41fc0c:	add    edx,DWORD PTR ds:0x422922
  41fc12:	mov    DWORD PTR ds:0x422916,edx
  41fc18:	mov    ecx,DWORD PTR ds:0x42297e
  41fc1e:	xor    DWORD PTR ds:0x42294a,ecx
  41fc24:	dec    edx
  41fc25:	sub    DWORD PTR ds:0x422946,0x422986
  41fc2f:	mov    edx,DWORD PTR ds:0x4228aa
  41fc35:	sub    DWORD PTR ds:0x422962,edx
  41fc3b:	mov    DWORD PTR [ebp-0xb4],0x3842
  41fc45:	mov    DWORD PTR ds:0x422906,0x649c
  41fc4f:	mov    eax,DWORD PTR [ebp-0x4c]
  41fc52:	adc    edx,0x487c
  41fc58:	add    eax,DWORD PTR [ebp-0xb4]
  41fc5e:	neg    edx
  41fc60:	xor    eax,0x2e02
  41fc65:	xor    edx,edx
  41fc67:	xor    eax,0x7294
  41fc6c:	dec    ecx
  41fc6d:	imul   eax,eax,0x68f3
  41fc73:	sub    edx,edx
  41fc75:	mov    ecx,DWORD PTR [ebp-0x8c]
  41fc7b:	and    eax,ecx
  41fc7d:	or     edx,0x18d0
  41fc83:	sub    eax,0x2818
  41fc88:	and    DWORD PTR ds:0x4229aa,0x187b
  41fc92:	mov    DWORD PTR [ebp-0xe8],eax
  41fc98:	mov    DWORD PTR [ebp-0x70],0x6f89
  41fc9f:	cmp    DWORD PTR ds:0x4229ce,0x0
  41fca6:	mov    DWORD PTR ds:0x4228d6,0x3c7
  41fcb0:	mov    DWORD PTR ds:0x422942,edi
  41fcb6:	movzx  edx,BYTE PTR ds:0x4228aa
  41fcbd:	jmp    0x41fd0b
  41fcc2:	mov    DWORD PTR ds:0x422966,ecx
  41fcc8:	jae    0x41fd01
  41fcce:	push   0x8302
  41fcd3:	push   0x7bd4
  41fcd8:	push   0x2714
  41fcdd:	push   DWORD PTR [ebp-0x28]
  41fce0:	push   0x400000
  41fce5:	call   DWORD PTR ds:0x42a2d8
  41fceb:	add    ecx,0x75a1
  41fcf1:	or     edx,DWORD PTR ds:0x42298e
  41fcf7:	xor    DWORD PTR ds:0x42289e,0x5495
  41fd01:	adc    ecx,edx
  41fd03:	sbb    ecx,DWORD PTR ds:0x422992
  41fd09:	not    edx
  41fd0b:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41fd15:	adc    DWORD PTR ds:0x4228da,0x189a
  41fd1f:	mov    DWORD PTR [ebp-0x120],0x3c77
  41fd29:	cmp    DWORD PTR ds:0x4229d2,0x0
  41fd30:	mov    DWORD PTR ds:0x422962,0x782b
  41fd3a:	mov    edx,0x3512
  41fd3f:	jmp    0x41fd82
  41fd44:	mov    DWORD PTR ds:0x422966,0x45e0
  41fd4e:	mov    DWORD PTR ds:0x42298a,ebx
  41fd54:	jle    0x41fd73
  41fd5a:	push   0x4f01
  41fd5f:	call   DWORD PTR ds:0x42a2dc
  41fd65:	or     edx,ecx
  41fd67:	adc    edx,DWORD PTR ds:0x4228fa
  41fd6d:	sub    DWORD PTR ds:0x422956,edi
  41fd73:	dec    ecx
  41fd74:	inc    DWORD PTR ds:0x4228c2
  41fd7a:	adc    ecx,ecx
  41fd7c:	sub    edx,0x2d38
  41fd82:	mov    DWORD PTR [ebp-0x2c],0x2129
  41fd89:	movzx  edx,WORD PTR ds:0x42290e
  41fd90:	sbb    edx,DWORD PTR ds:0x4229a6
  41fd96:	mov    DWORD PTR ds:0x42290e,edx
  41fd9c:	mov    eax,DWORD PTR [ebp-0x2c]
  41fd9f:	imul   eax,eax,0x1ada
  41fda5:	mov    ecx,DWORD PTR [ebp-0x120]
  41fdab:	and    DWORD PTR ds:0x422892,ebx
  41fdb1:	imul   ecx,ecx,0x53ae
  41fdb7:	sbb    edx,DWORD PTR ds:0x422982
  41fdbd:	imul   ecx,ecx,0x7447
  41fdc3:	mov    edx,DWORD PTR [ebp-0xd0]
  41fdc9:	inc    DWORD PTR ds:0x4228be
  41fdcf:	and    ecx,edx
  41fdd1:	sub    edx,DWORD PTR ds:0x4229a6
  41fdd7:	or     ecx,0x2a20
  41fddd:	cmp    DWORD PTR ds:0x4228ba,0x0
  41fde4:	mov    DWORD PTR ds:0x422906,edi
  41fdea:	mov    DWORD PTR ds:0x4229d2,edx
  41fdf0:	mov    DWORD PTR ds:0x4228be,edx
  41fdf6:	mov    edx,DWORD PTR ds:0x422956
  41fdfc:	jmp    0x41fe85
  41fe01:	mov    DWORD PTR ds:0x4228ba,0x5711
  41fe0b:	mov    DWORD PTR ds:0x4228ba,edi
  41fe11:	ja     0x41fe4b
  41fe17:	push   0x3098
  41fe1c:	push   0x4227d9
  41fe21:	push   0x4227af
  41fe26:	push   0x4227eb
  41fe2b:	call   DWORD PTR ds:0x42a1c0
  41fe31:	mov    edx,DWORD PTR ds:0x4229ae
  41fe37:	adc    edx,DWORD PTR ds:0x4228c6
  41fe3d:	mov    DWORD PTR ds:0x4229ae,edx
  41fe43:	not    edx
  41fe45:	xor    edx,DWORD PTR ds:0x422996
  41fe4b:	mov    edx,DWORD PTR ds:0x422af2
  41fe51:	mov    edx,DWORD PTR [edx]
  41fe53:	add    DWORD PTR ds:0x422936,edx
  41fe59:	mov    edx,DWORD PTR ds:0x422892
  41fe5f:	and    DWORD PTR ds:0x422976,edx
  41fe65:	movzx  edx,WORD PTR ds:0x4229ae
  41fe6c:	add    DWORD PTR ds:0x4229d2,edx
  41fe72:	movzx  edx,WORD PTR ds:0x4229aa
  41fe79:	xor    edx,DWORD PTR ds:0x42289a
  41fe7f:	mov    DWORD PTR ds:0x4229aa,edx
  41fe85:	mov    edx,DWORD PTR [ebp-0x70]
  41fe88:	xor    ecx,edx
  41fe8a:	add    DWORD PTR ds:0x4228ae,0x42293e
  41fe94:	mov    edx,DWORD PTR [ebp+0x14]
  41fe97:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41fe9e:	add    DWORD PTR ds:0x422986,0x422936
  41fea8:	lea    eax,[ecx+eax*1-0x45a1]
  41feaf:	sub    ecx,0x1147
  41feb5:	mov    DWORD PTR [ebp-0xb0],eax
  41febb:	mov    DWORD PTR [ebp-0x11c],0x303f
  41fec5:	mov    DWORD PTR [ebp-0x98],0x51a9
  41fecf:	and    DWORD PTR ds:0x4228ee,0x28c
  41fed9:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41fee3:	mov    eax,DWORD PTR [ebp-0xcc]
  41fee9:	xor    eax,0x6f65
  41feee:	movzx  ecx,WORD PTR ds:0x42296a
  41fef5:	or     DWORD PTR ds:0x422986,ecx
  41fefb:	mov    ecx,DWORD PTR [ebp-0x98]
  41ff01:	or     eax,ecx
  41ff03:	xor    DWORD PTR ds:0x422922,0x9d1
  41ff0d:	add    eax,0x161e
  41ff12:	mov    ecx,DWORD PTR [ebp-0x11c]
  41ff18:	add    DWORD PTR ds:0x422996,0x5a44
  41ff22:	or     eax,ecx
  41ff24:	and    DWORD PTR ds:0x422922,ebx
  41ff2a:	add    eax,0x1cca
  41ff2f:	cmp    DWORD PTR ds:0x422996,0x0
  41ff36:	movzx  ecx,WORD PTR ds:0x4229b6
  41ff3d:	mov    DWORD PTR ds:0x4228ca,ecx
  41ff43:	mov    ecx,0x6e0d
  41ff48:	jmp    0x41ffbc
  41ff4d:	mov    ecx,0x4420
  41ff52:	mov    DWORD PTR ds:0x4228d2,0xbd6
  41ff5c:	jb     0x41ffa6
  41ff62:	push   DWORD PTR [ebp-0x14]
  41ff65:	push   DWORD PTR [ebp-0x24]
  41ff68:	push   0x422797
  41ff6d:	push   0x81c6
  41ff72:	push   0x5863
  41ff77:	push   0x7a14
  41ff7c:	push   DWORD PTR [ebp-0x14]
  41ff7f:	push   0x36c1
  41ff84:	call   DWORD PTR ds:0x42a1c4
  41ff8a:	mov    ecx,DWORD PTR ds:0x4229b6
  41ff90:	add    DWORD PTR ds:0x4228da,ecx
  41ff96:	add    DWORD PTR ds:0x42288e,0x26c4
  41ffa0:	add    ecx,0x5f2e
  41ffa6:	sbb    DWORD PTR ds:0x422972,edi
  41ffac:	add    DWORD PTR ds:0x42289e,edx
  41ffb2:	sbb    DWORD PTR ds:0x4228a2,0x42293e
  41ffbc:	xor    eax,0x96c9
  41ffc1:	mov    DWORD PTR [ebp-0x38],eax
  41ffc4:	mov    DWORD PTR [ebp-0x118],0x6083
  41ffce:	sbb    ecx,0x49d9
  41ffd4:	mov    DWORD PTR [ebp-0x88],0x556
  41ffde:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41ffe8:	mov    eax,DWORD PTR [ebp-0x140]
  41ffee:	cmp    DWORD PTR ds:0x42297e,0x0
  41fff5:	mov    DWORD PTR ds:0x4229ba,0x1d24
  41ffff:	mov    ecx,DWORD PTR ds:0x42293e
  420005:	movzx  ecx,WORD PTR ds:0x422986
  42000c:	jmp    0x420048
  420011:	mov    DWORD PTR ds:0x4228be,0x28a1
  42001b:	je     0x42003c
  420021:	push   DWORD PTR [ebp-0x18]
  420024:	call   DWORD PTR ds:0x42a2e0
  42002a:	add    DWORD PTR ds:0x4228ce,edi
  420030:	and    DWORD PTR ds:0x4228ce,ebx
  420036:	add    ecx,0x4241
  42003c:	xor    ecx,0x765e
  420042:	sub    DWORD PTR ds:0x4229d2,edi
  420048:	add    eax,0x5af8
  42004d:	mov    ecx,DWORD PTR [ebp-0x88]
  420053:	xor    DWORD PTR ds:0x4229c2,0x1fa8
  42005d:	sub    eax,ecx
  42005f:	cmp    DWORD PTR ds:0x4229d2,0x0
  420066:	mov    ecx,0x1395
  42006b:	mov    ecx,DWORD PTR ds:0x4228e6
  420071:	mov    DWORD PTR ds:0x4228f2,ebx
  420077:	jmp    0x4200e1
  42007c:	mov    DWORD PTR ds:0x422972,0x6a84
  420086:	mov    DWORD PTR ds:0x4228ea,0x62f2
  420090:	jb     0x4200ba
  420096:	push   0x3346
  42009b:	call   DWORD PTR ds:0x42a1c8
  4200a1:	add    ecx,0x6b03
  4200a7:	movzx  ecx,WORD PTR ds:0x422912
  4200ae:	add    DWORD PTR ds:0x42288a,ecx
  4200b4:	and    ecx,DWORD PTR ds:0x42292e
  4200ba:	sub    DWORD PTR ds:0x422936,edi
  4200c0:	xor    ecx,ecx
  4200c2:	xor    ecx,DWORD PTR ds:0x422962
  4200c8:	add    ecx,DWORD PTR ds:0x422966
  4200ce:	mov    DWORD PTR ds:0x422962,ecx
  4200d4:	movzx  ecx,WORD PTR ds:0x42290e
  4200db:	or     DWORD PTR ds:0x42294a,ecx
  4200e1:	mov    ecx,DWORD PTR [ebp-0x118]
  4200e7:	xor    DWORD PTR ds:0x4228ca,0x60cf
  4200f1:	lea    eax,[eax+ecx*1+0x68dc]
  4200f8:	not    ecx
  4200fa:	or     eax,0x52f6
  4200ff:	xor    ecx,0x5502
  420105:	sub    eax,0x1dbfe
  42010a:	and    DWORD PTR ds:0x4228ee,0x5b35
  420114:	mov    DWORD PTR [ebp-0xac],eax
  42011a:	add    DWORD PTR ds:0x422976,0x4861
  420124:	mov    DWORD PTR [ebp-0x6c],0x4b56
  42012b:	mov    DWORD PTR [ebp-0x100],0x49f7
  420135:	mov    eax,DWORD PTR [ebp-0x100]
  42013b:	and    ecx,0x658f
  420141:	add    eax,0x7b60
  420146:	imul   eax,eax,0x5ea
  42014c:	mov    ecx,DWORD PTR [ebp-0x6c]
  42014f:	and    DWORD PTR ds:0x42292e,0x4229c6
  420159:	imul   eax,ecx
  42015c:	xor    edx,edx
  42015e:	and    DWORD PTR ds:0x42299a,ecx
  420164:	mov    ecx,0x3218d
  420169:	div    ecx
  42016b:	adc    DWORD PTR ds:0x42293a,0x4228f2
  420175:	sub    eax,0x24c1
  42017a:	cmp    DWORD PTR ds:0x42296e,0x0
  420181:	mov    DWORD PTR ds:0x4228f6,0x5f97
  42018b:	mov    ecx,DWORD PTR ds:0x422992
  420191:	jmp    0x4201dd
  420196:	mov    DWORD PTR ds:0x42290e,0x3c76
  4201a0:	not    DWORD PTR ds:0x4228ae
  4201a6:	jbe    0x4201cd
  4201ac:	push   0x3dff
  4201b1:	call   DWORD PTR ds:0x42a098
  4201b7:	not    ecx
  4201b9:	add    DWORD PTR ds:0x4229ca,0x7a9c
  4201c3:	and    DWORD PTR ds:0x422906,0x510
  4201cd:	xor    DWORD PTR ds:0x4228ae,ebx
  4201d3:	adc    DWORD PTR ds:0x422902,0x422986
  4201dd:	mov    DWORD PTR [ebp-0xa8],eax
  4201e3:	cmp    DWORD PTR ds:0x422916,0x0
  4201ea:	mov    ecx,0x7594
  4201ef:	mov    ecx,0x61a
  4201f4:	movzx  ecx,WORD PTR ds:0x4229c6
  4201fb:	jmp    0x420253
  420200:	mov    eax,ds:0x42294a
  420205:	mov    DWORD PTR ds:0x4228f6,edi
  42020b:	jbe    0x42023f
  420211:	push   0x1
  420213:	push   0x158d
  420218:	push   DWORD PTR [ebp-0x14]
  42021b:	push   0x1baf
  420220:	call   DWORD PTR ds:0x42a2e4
  420226:	add    ecx,0x4150
  42022c:	adc    ecx,0x4614
  420232:	movzx  ecx,BYTE PTR ds:0x422892
  420239:	and    DWORD PTR ds:0x4228a2,ecx
  42023f:	sub    ecx,ecx
  420241:	mov    ecx,DWORD PTR ds:0x42289e
  420247:	add    ecx,DWORD PTR ds:0x42298a
  42024d:	mov    DWORD PTR ds:0x42289e,ecx
  420253:	mov    DWORD PTR [ebp-0x84],0x2c40
  42025d:	mov    DWORD PTR [ebp-0x18],0x6013
  420264:	mov    DWORD PTR [ebp-0x80],0xc
  42026b:	xor    ecx,ecx
  42026d:	add    ecx,DWORD PTR ds:0x4228be
  420273:	add    DWORD PTR ds:0x4229ce,ecx
  420279:	mov    eax,DWORD PTR [ebp-0x18]
  42027c:	or     ecx,DWORD PTR ds:0x42296a
  420282:	mov    ecx,DWORD PTR [ebp-0x80]
  420285:	xor    DWORD PTR ds:0x422912,0x4229b6
  42028f:	xor    edx,edx
  420291:	div    ecx
  420293:	sub    ecx,DWORD PTR ds:0x42288a
  420299:	imul   eax,eax,0x4312
  42029f:	cmp    DWORD PTR ds:0x42290a,0x0
  4202a6:	mov    DWORD PTR ds:0x42289a,0x25f4
  4202b0:	mov    DWORD PTR ds:0x4228de,0x6ae8
  4202ba:	mov    DWORD PTR ds:0x422936,0x199e
  4202c4:	jmp    0x420397
  4202c9:	mov    DWORD PTR ds:0x4228e6,0x15fd
  4202d3:	jb     0x42030d
  4202d9:	push   0x42293a
  4202de:	push   0x1346
  4202e3:	push   DWORD PTR [ebp-0x18]
  4202e6:	push   0x747f
  4202eb:	call   DWORD PTR ds:0x42a1cc
  4202f1:	and    ecx,DWORD PTR ds:0x42299a
  4202f7:	mov    ecx,DWORD PTR ds:0x42288a
  4202fd:	xor    DWORD PTR ds:0x4229ca,ecx
  420303:	sbb    DWORD PTR ds:0x422926,0xf78
  42030d:	not    DWORD PTR ds:0x4228ca
  420313:	adc    DWORD PTR ds:0x422972,ebx
  420319:	cmp    DWORD PTR ds:0x4228f2,0x0
  420320:	mov    DWORD PTR ds:0x4229b2,0x21f7
  42032a:	mov    DWORD PTR ds:0x4229a6,ebx
  420330:	mov    DWORD PTR ds:0x4228aa,0x33dc
  42033a:	jmp    0x420397
  42033f:	mov    DWORD PTR ds:0x42288a,0x359f
  420349:	mov    DWORD PTR ds:0x42297a,0x36a8
  420353:	je     0x42037b
  420359:	call   DWORD PTR ds:0x42a2e8
  42035f:	or     ecx,0xc82
  420365:	adc    DWORD PTR ds:0x4229ce,0x7856
  42036f:	neg    DWORD PTR ds:0x4228e6
  420375:	sub    ecx,0x6a4f
  42037b:	or     ecx,DWORD PTR ds:0x42290e
  420381:	adc    ecx,DWORD PTR ds:0x422906
  420387:	xor    DWORD PTR ds:0x42290a,0x3a36
  420391:	adc    ecx,DWORD PTR ds:0x422972
  420397:	add    eax,0x5abe
  42039c:	dec    ecx
  42039d:	mov    ecx,DWORD PTR [ebp-0x84]
  4203a3:	sbb    DWORD PTR ds:0x4228ba,0x6729
  4203ad:	xor    eax,ecx
  4203af:	movzx  ecx,WORD PTR ds:0x42288e
  4203b6:	sub    ecx,DWORD PTR ds:0x4228ce
  4203bc:	mov    DWORD PTR ds:0x42288e,ecx
  4203c2:	xor    edx,edx
  4203c4:	mov    ecx,0x5ae
  4203c9:	div    ecx
  4203cb:	and    DWORD PTR ds:0x42289e,ebx
  4203d1:	xor    eax,0x5e8c
  4203d6:	mov    DWORD PTR [ebp-0x48],eax
  4203d9:	mov    DWORD PTR ds:0x4228ae,0x2632
  4203e3:	mov    DWORD PTR [ebp-0x13c],0x7b18
  4203ed:	and    eax,DWORD PTR ds:0x42291e
  4203f3:	mov    DWORD PTR [ebp-0x138],0x1169
  4203fd:	xor    eax,ecx
  4203ff:	mov    DWORD PTR [ebp-0x12c],0x1379
  420409:	mov    eax,DWORD PTR [ebp-0x12c]
  42040f:	mov    ecx,0x5856
  420414:	or     DWORD PTR ds:0x422922,0x661e
  42041e:	sub    ecx,eax
  420420:	dec    eax
  420421:	shr    ecx,0x2
  420424:	sub    ecx,0x5be6
  42042a:	cmp    DWORD PTR ds:0x42291e,0x0
  420431:	mov    DWORD PTR ds:0x422906,0x5702
  42043b:	mov    DWORD PTR ds:0x4228b2,0x24ef
  420445:	jmp    0x4204a4
  42044a:	mov    eax,ds:0x4228c6
  42044f:	not    DWORD PTR ds:0x42296e
  420455:	jl     0x420488
  42045b:	push   0x5bb1
  420460:	push   0x4228e2
  420465:	push   0x2dbc
  42046a:	call   DWORD PTR ds:0x42a09c
  420470:	add    DWORD PTR ds:0x422996,edx
  420476:	sub    DWORD PTR ds:0x4228d2,ecx
  42047c:	and    DWORD PTR ds:0x4228ae,ebx
  420482:	adc    DWORD PTR ds:0x42299e,edi
  420488:	adc    DWORD PTR ds:0x4229be,edi
  42048e:	add    DWORD PTR ds:0x42294a,edi
  420494:	add    DWORD PTR ds:0x4228da,0x3429
  42049e:	sub    DWORD PTR ds:0x42296e,ecx
  4204a4:	mov    eax,DWORD PTR [ebp-0x138]
  4204aa:	imul   ecx,eax
  4204ad:	xor    DWORD PTR ds:0x4229aa,ebx
  4204b3:	mov    eax,DWORD PTR [ebp-0x13c]
  4204b9:	xor    DWORD PTR ds:0x42298e,0x5901
  4204c3:	and    ecx,eax
  4204c5:	mov    eax,0x3b18
  4204ca:	and    DWORD PTR ds:0x4228b6,0x42293e
  4204d4:	sub    eax,ecx
  4204d6:	or     DWORD PTR ds:0x4228ee,0x4ab5
  4204e0:	mov    DWORD PTR [ebp-0xfc],eax
  4204e6:	mov    ecx,DWORD PTR ds:0x4228aa
  4204ec:	sbb    DWORD PTR ds:0x42288a,ecx
  4204f2:	mov    DWORD PTR [ebp-0x28],0x16d7
  4204f9:	xor    eax,eax
  4204fb:	mov    DWORD PTR [ebp-0x134],0x6b4
  420505:	xor    eax,eax
  420507:	mov    eax,DWORD PTR [ebp-0x134]
  42050d:	add    ecx,DWORD PTR ds:0x42289a
  420513:	or     eax,0x4f70
  420518:	mov    ecx,DWORD PTR [ebp-0x28]
  42051b:	sub    DWORD PTR ds:0x4229ca,0x4228aa
  420525:	or     eax,ecx
  420527:	and    DWORD PTR ds:0x4228ba,ebx
  42052d:	sub    eax,0x5ff7
  420532:	mov    ecx,DWORD PTR ds:0x422a82
  420538:	mov    ecx,DWORD PTR [ecx]
  42053a:	adc    DWORD PTR ds:0x42294e,ecx
  420540:	mov    DWORD PTR [ebp-0xc8],eax
  420546:	mov    DWORD PTR [ebp-0xe4],0x5f39
  420550:	mov    DWORD PTR [ebp-0xc4],0x6236
  42055a:	not    eax
  42055c:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  420563:	or     eax,DWORD PTR ds:0x42289a
  420569:	mov    DWORD PTR [ebp-0x128],0x7537
  420573:	mov    DWORD PTR [ebp-0x114],0x6985
  42057d:	mov    DWORD PTR [ebp-0x14],0x5627
  420584:	mov    DWORD PTR [ebp-0x64],0x72e7
  42058b:	not    DWORD PTR ds:0x42293a
  420591:	mov    eax,DWORD PTR [ebp-0x14]
  420594:	cmp    DWORD PTR ds:0x4228be,0x0
  42059b:	mov    DWORD PTR ds:0x4228c2,edx
  4205a1:	mov    DWORD PTR ds:0x42299e,0x4cb1
  4205ab:	movzx  ecx,WORD PTR ds:0x4228a2
  4205b2:	jmp    0x420662
  4205b7:	mov    DWORD PTR ds:0x4228e2,0x2b18
  4205c1:	jl     0x4205f2
  4205c7:	push   DWORD PTR [ebp-0x28]
  4205ca:	push   0x68d6
  4205cf:	push   0x1f9a
  4205d4:	push   0x3f36
  4205d9:	push   DWORD PTR [ebp-0x14]
  4205dc:	call   DWORD PTR ds:0x42a1d0
  4205e2:	and    DWORD PTR ds:0x422972,edi
  4205e8:	sub    DWORD PTR ds:0x4229a6,0x3838
  4205f2:	sub    DWORD PTR ds:0x422926,0x422946
  4205fc:	sub    DWORD PTR ds:0x42288e,edi
  420602:	inc    ecx
  420603:	cmp    DWORD PTR ds:0x4228da,0x0
  42060a:	mov    DWORD PTR ds:0x422916,edi
  420610:	mov    DWORD PTR ds:0x4228c2,0x3e4f
  42061a:	mov    ecx,0x124e
  42061f:	jmp    0x420662
  420624:	movzx  ecx,WORD PTR ds:0x4228fa
  42062b:	jg     0x420650
  420631:	push   0x110e
  420636:	call   DWORD PTR ds:0x42a1d4
  42063c:	mov    ecx,DWORD PTR ds:0x42292e
  420642:	sub    DWORD PTR ds:0x4229ba,ecx
  420648:	not    ecx
  42064a:	sub    ecx,0x3ff2
  420650:	sbb    DWORD PTR ds:0x4229b2,ecx
  420656:	mov    ecx,DWORD PTR ds:0x4229ba
  42065c:	or     DWORD PTR ds:0x422996,ecx
  420662:	add    eax,DWORD PTR [ebp-0x64]
  420665:	cmp    DWORD PTR ds:0x42296a,0x0
  42066c:	mov    DWORD PTR ds:0x4229b6,edx
  420672:	mov    DWORD PTR ds:0x4228ce,0x892
  42067c:	mov    DWORD PTR ds:0x42295a,0x70ff
  420686:	mov    DWORD PTR ds:0x42292e,edi
  42068c:	jmp    0x4206f1
  420691:	mov    DWORD PTR ds:0x4228ea,0x2b24
  42069b:	jge    0x4206cf
  4206a1:	call   DWORD PTR ds:0x42a2ec
  4206a7:	xor    DWORD PTR ds:0x4229ce,ebx
  4206ad:	mov    ecx,DWORD PTR ds:0x422902
  4206b3:	or     ecx,DWORD PTR ds:0x422976
  4206b9:	mov    DWORD PTR ds:0x422902,ecx
  4206bf:	and    ecx,DWORD PTR ds:0x42293e
  4206c5:	sub    DWORD PTR ds:0x4228fe,0x422922
  4206cf:	add    DWORD PTR ds:0x422952,ecx
  4206d5:	and    ecx,DWORD PTR ds:0x4228c6
  4206db:	adc    ecx,DWORD PTR ds:0x42290e
  4206e1:	sub    ecx,DWORD PTR ds:0x4228a2
  4206e7:	and    DWORD PTR ds:0x42295e,0x60c
  4206f1:	mov    ecx,DWORD PTR [ebp-0x114]
  4206f7:	sub    DWORD PTR ds:0x4229ba,0x175
  420701:	sub    eax,ecx
  420703:	mov    ecx,DWORD PTR [ebp-0x128]
  420709:	and    DWORD PTR ds:0x42288e,0x7a1c
  420713:	imul   eax,ecx
  420716:	imul   eax,eax,0xe4e
  42071c:	neg    ecx
  42071e:	mov    ecx,DWORD PTR [ebp-0x7c]
  420721:	and    DWORD PTR ds:0x42288e,0x4228ea
  42072b:	or     eax,ecx
  42072d:	mov    ecx,DWORD PTR [ebp+0x8]
  420730:	lea    eax,[ecx+eax*1+0x46210209]
  420737:	xor    DWORD PTR ds:0x42291a,0x563e
  420741:	push   eax
  420742:	sub    DWORD PTR ds:0x422926,0x42288e
  42074c:	call   0x41d102
  420751:	neg    ecx
  420753:	mov    ecx,eax
  420755:	mov    eax,DWORD PTR [ebp-0xc4]
  42075b:	sub    esi,0x184b
  420761:	imul   eax,eax,0x21b3
  420767:	and    esi,DWORD PTR ds:0x42297a
  42076d:	add    eax,DWORD PTR [ebp-0xe4]
  420773:	and    eax,0xd5c
  420778:	and    DWORD PTR ds:0x422952,0x302e
  420782:	sub    eax,0x2e81
  420787:	or     esi,DWORD PTR ds:0x4228ea
  42078d:	xor    edx,edx
  42078f:	mov    esi,0x2f1dc
  420794:	or     DWORD PTR ds:0x422942,0x422976
  42079e:	div    esi
  4207a0:	xor    eax,0x56ef
  4207a5:	cmp    DWORD PTR ds:0x422946,0x0
  4207ac:	mov    DWORD PTR ds:0x422916,edi
  4207b2:	mov    DWORD PTR ds:0x422966,0x662c
  4207bc:	mov    DWORD PTR ds:0x4229d2,edi
  4207c2:	jmp    0x4208e2
  4207c7:	mov    DWORD PTR ds:0x4229ce,0x4f06
  4207d1:	jg     0x4207ec
  4207d7:	push   DWORD PTR [ebp-0x20]
  4207da:	call   DWORD PTR ds:0x42a1d8
  4207e0:	sub    esi,DWORD PTR ds:0x42288e
  4207e6:	sub    DWORD PTR ds:0x4229ba,edx
  4207ec:	or     esi,esi
  4207ee:	add    edx,0x7894
  4207f4:	mov    esi,DWORD PTR ds:0x4229f6
  4207fa:	mov    edx,DWORD PTR ds:0x422a52
  420800:	sub    edx,esi
  420802:	imul   esi,DWORD PTR [esi+edx*1]
  420806:	xor    edx,DWORD PTR ds:0x422896
  42080c:	cmp    DWORD PTR ds:0x42295e,0x0
  420813:	mov    DWORD PTR ds:0x4228ea,0x1c26
  42081d:	mov    DWORD PTR ds:0x4229b2,edx
  420823:	jmp    0x4208e2
  420828:	mov    DWORD PTR ds:0x422962,0x1de8
  420832:	jb     0x420861
  420838:	push   DWORD PTR [ebp-0xc]
  42083b:	push   0x797e
  420840:	push   DWORD PTR [ebp-0x28]
  420843:	push   DWORD PTR [ebp-0x20]
  420846:	push   DWORD PTR [ebp-0x20]
  420849:	call   DWORD PTR ds:0x42a0a0
  42084f:	xor    edx,0x2ce5
  420855:	adc    DWORD PTR ds:0x422946,edi
  42085b:	sub    DWORD PTR ds:0x4229ca,edx
  420861:	xor    edx,esi
  420863:	and    esi,edx
  420865:	mov    edx,DWORD PTR ds:0x4229e2
  42086b:	mov    esi,DWORD PTR ds:0x422ab2
  420871:	sub    edx,esi
  420873:	xor    edx,DWORD PTR [edx+esi*1]
  420876:	cmp    DWORD PTR ds:0x42298a,0x0
  42087d:	mov    DWORD PTR ds:0x4228d6,edx
  420883:	movzx  edx,WORD PTR ds:0x422896
  42088a:	mov    edx,0x6c32
  42088f:	jmp    0x4208e2
  420894:	mov    DWORD PTR ds:0x422896,0x27d5
  42089e:	mov    DWORD PTR ds:0x4228a2,0x76ec
  4208a8:	jb     0x4208d0
  4208ae:	push   DWORD PTR [ebp-0x28]
  4208b1:	push   DWORD PTR [ebp-0x28]
  4208b4:	call   DWORD PTR ds:0x42a0a4
  4208ba:	adc    edx,0x3a8d
  4208c0:	and    DWORD PTR ds:0x422976,0x6cff
  4208ca:	or     DWORD PTR ds:0x422992,ebx
  4208d0:	xor    edx,DWORD PTR ds:0x42299a
  4208d6:	inc    DWORD PTR ds:0x4229ba
  4208dc:	and    DWORD PTR ds:0x422932,edx
  4208e2:	add    ecx,eax
  4208e4:	mov    DWORD PTR [ebp-0x90],ecx
  4208ea:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4208f4:	inc    esi
  4208f5:	mov    DWORD PTR [ebp-0x44],0x2514
  4208fc:	xor    eax,eax
  4208fe:	or     eax,DWORD PTR ds:0x4228ee
  420904:	xor    DWORD PTR ds:0x422932,eax
  42090a:	mov    DWORD PTR [ebp-0xdc],0x699c
  420914:	sbb    edx,ecx
  420916:	mov    DWORD PTR [ebp-0xd8],0x1
  420920:	mov    DWORD PTR [ebp-0x24],0x7901
  420927:	cmp    DWORD PTR ds:0x422976,0x0
  42092e:	not    edx
  420930:	mov    DWORD PTR ds:0x4228a2,0x569b
  42093a:	mov    DWORD PTR ds:0x4228a6,0x4d6f
  420944:	mov    DWORD PTR ds:0x42297e,edx
  42094a:	jmp    0x420999
  42094f:	mov    DWORD PTR ds:0x422976,edx
  420955:	mov    DWORD PTR ds:0x4228fa,ecx
  42095b:	je     0x42097d
  420961:	push   0x5aed
  420966:	push   0x6c8d
  42096b:	call   DWORD PTR ds:0x42a2f0
  420971:	xor    DWORD PTR ds:0x42293a,0x1a42
  42097b:	adc    esi,ecx
  42097d:	adc    edx,DWORD PTR ds:0x4228d6
  420983:	and    ecx,0x55be
  420989:	sbb    DWORD PTR ds:0x42290a,0x346b
  420993:	add    ecx,0x18f
  420999:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  4209a3:	mov    eax,ds:0x422ab6
  4209a8:	mov    eax,DWORD PTR [eax]
  4209aa:	sub    DWORD PTR ds:0x4228ce,eax
  4209b0:	mov    DWORD PTR [ebp-0x78],0x37f2
  4209b7:	or     DWORD PTR ds:0x4229b2,edx
  4209bd:	mov    DWORD PTR [ebp-0x10],0x62ba
  4209c4:	mov    DWORD PTR [ebp-0x94],0x561c
  4209ce:	adc    DWORD PTR ds:0x4228e6,0x1c9a
  4209d8:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209df:	xor    DWORD PTR ds:0x4228a2,edi
  4209e5:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209ec:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209f3:	or     esi,ecx
  4209f5:	mov    eax,DWORD PTR [ebp-0x34]
  4209f8:	adc    esi,DWORD PTR ds:0x422936
  4209fe:	mov    ecx,DWORD PTR [ebp-0x60]
  420a01:	mov    edx,DWORD PTR ds:0x4228ea
  420a07:	add    DWORD PTR ds:0x42292e,edx
  420a0d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a10:	xor    DWORD PTR ds:0x4228b2,ecx
  420a16:	and    edx,0x160e
  420a1c:	neg    esi
  420a1e:	sub    edx,ecx
  420a20:	sub    edx,0x29ad
  420a26:	or     esi,ecx
  420a28:	imul   edx,eax
  420a2b:	cmp    DWORD PTR ds:0x42292e,0x0
  420a32:	mov    ecx,DWORD PTR ds:0x4229c6
  420a38:	mov    DWORD PTR ds:0x4229c6,0x2cb4
  420a42:	mov    esi,0x7aa2
  420a47:	jmp    0x420a87
  420a4c:	mov    DWORD PTR ds:0x4228e2,edx
  420a52:	mov    eax,ds:0x422996
  420a57:	jb     0x420a7f
  420a5d:	push   DWORD PTR [ebp-0x10]
  420a60:	call   DWORD PTR ds:0x42a1dc
  420a66:	sbb    DWORD PTR ds:0x422986,edx
  420a6c:	xor    esi,esi
  420a6e:	add    esi,DWORD PTR ds:0x4229e6
  420a74:	mov    ecx,DWORD PTR ds:0x422a76
  420a7a:	sub    ecx,esi
  420a7c:	xor    esi,DWORD PTR [esi+ecx*1]
  420a7f:	and    ecx,esi
  420a81:	dec    DWORD PTR ds:0x42289a
  420a87:	mov    eax,DWORD PTR [ebp-0x90]
  420a8d:	lea    eax,[eax+edx*1+0x14f2e240]
  420a94:	sub    ecx,DWORD PTR ds:0x42296e
  420a9a:	mov    DWORD PTR [ebp-0x174],eax
  420aa0:	mov    eax,DWORD PTR [ebp-0x24]
  420aa3:	and    DWORD PTR ds:0x422896,0x422952
  420aad:	mov    ecx,DWORD PTR [ebp-0x94]
  420ab3:	mov    edx,DWORD PTR [ebp-0x10]
  420ab6:	xor    edx,ecx
  420ab8:	cmp    DWORD PTR ds:0x4228be,0x0
  420abf:	not    esi
  420ac1:	mov    DWORD PTR ds:0x422946,0x4c6a
  420acb:	jmp    0x420b2b
  420ad0:	mov    DWORD PTR ds:0x42293e,0x2e5b
  420ada:	not    DWORD PTR ds:0x4229ae
  420ae0:	jae    0x420b1b
  420ae6:	push   DWORD PTR [ebp-0xc]
  420ae9:	push   0x4ad9
  420aee:	push   0x541c
  420af3:	push   0x4226c9
  420af8:	push   0x8f89
  420afd:	call   DWORD PTR ds:0x42a2f4
  420b03:	sbb    esi,0x7b5f
  420b09:	or     DWORD PTR ds:0x4228f6,0x55a2
  420b13:	sbb    DWORD PTR ds:0x4228ee,ebx
  420b19:	neg    ecx
  420b1b:	xor    ecx,ecx
  420b1d:	add    esi,esi
  420b1f:	sub    esi,esi
  420b21:	or     DWORD PTR ds:0x42298e,0x3de5
  420b2b:	add    edx,DWORD PTR [ebp-0x78]
  420b2e:	adc    ecx,DWORD PTR ds:0x4228de
  420b34:	mov    ecx,DWORD PTR [ebp-0xc0]
  420b3a:	lea    ecx,[edx+ecx*1+0x6ac1]
  420b41:	and    ecx,eax
  420b43:	mov    eax,0x1101
  420b48:	cmp    DWORD PTR ds:0x42294e,0x0
  420b4f:	mov    DWORD PTR ds:0x4228fe,0x36ab
  420b59:	mov    esi,DWORD PTR ds:0x4228b6
  420b5f:	mov    edx,0x20e8
  420b64:	jmp    0x420bb6
  420b69:	mov    esi,DWORD PTR ds:0x42299a
  420b6f:	ja     0x420ba3
  420b75:	push   0x4228a2
  420b7a:	push   0x42299a
  420b7f:	push   0x42293a
  420b84:	call   DWORD PTR ds:0x42a0a8
  420b8a:	adc    edx,0x5974
  420b90:	movzx  esi,BYTE PTR ds:0x422952
  420b97:	xor    DWORD PTR ds:0x4228ce,esi
  420b9d:	or     DWORD PTR ds:0x422926,ecx
  420ba3:	or     edx,DWORD PTR ds:0x4228ce
  420ba9:	movzx  edx,WORD PTR ds:0x4229b6
  420bb0:	sub    DWORD PTR ds:0x42299e,edx
  420bb6:	sub    eax,ecx
  420bb8:	add    eax,DWORD PTR [ebp+0x8]
  420bbb:	mov    DWORD PTR [ebp-0x170],eax
  420bc1:	cmp    DWORD PTR ds:0x422952,0x0
  420bc8:	mov    DWORD PTR ds:0x42289a,0x4ae9
  420bd2:	mov    DWORD PTR ds:0x422896,0x6df4
  420bdc:	mov    DWORD PTR ds:0x422902,0x1097
  420be6:	mov    esi,0x562b
  420beb:	jmp    0x420c45
  420bf0:	not    eax
  420bf2:	mov    DWORD PTR ds:0x422896,ebx
  420bf8:	jae    0x420c35
  420bfe:	push   0x61a8
  420c03:	push   0x28f0
  420c08:	push   0x2a61
  420c0d:	push   0x1d7f
  420c12:	push   DWORD PTR [ebp-0xc]
  420c15:	push   DWORD PTR [ebp-0x24]
  420c18:	push   0x73d0
  420c1d:	call   DWORD PTR ds:0x42a1e0
  420c23:	adc    edx,0x4a39
  420c29:	xor    edx,esi
  420c2b:	or     DWORD PTR ds:0x422946,0x6558
  420c35:	sub    esi,0x4c5d
  420c3b:	xor    DWORD PTR ds:0x4228d2,0x124
  420c45:	mov    DWORD PTR [ebp-0x15c],0xba699573
  420c4f:	mov    DWORD PTR [ebp-0x158],0x9c0a89d8
  420c59:	mov    DWORD PTR [ebp-0x154],0xba699577
  420c63:	sbb    DWORD PTR ds:0x422956,edi
  420c69:	mov    DWORD PTR [ebp-0x150],0x9c0a89d8
  420c73:	or     esi,0x7211
  420c79:	mov    esi,DWORD PTR [ebp-0x174]
  420c7f:	mov    eax,DWORD PTR [ebp-0x154]
  420c85:	mov    edx,DWORD PTR [ebp-0x150]
  420c8b:	sbb    DWORD PTR ds:0x42292e,0x5043
  420c95:	xor    eax,0xba699573
  420c9a:	sub    DWORD PTR ds:0x4228fa,0x6217
  420ca4:	xor    edx,0x9c0a89d8
  420caa:	mov    cl,0x2
  420cac:	call   0x41a184
  420cb1:	cmp    DWORD PTR ds:0x4229aa,0x0
  420cb8:	mov    DWORD PTR ds:0x422936,0x7dfa
  420cc2:	mov    ebx,DWORD PTR ds:0x422896
  420cc8:	not    ebx
  420cca:	mov    ebx,0x627c
  420ccf:	jmp    0x420d23
  420cd4:	mov    DWORD PTR ds:0x422892,0x500b
  420cde:	mov    DWORD PTR ds:0x4229a6,0x12a3
  420ce8:	jle    0x420d14
  420cee:	push   DWORD PTR [ebp-0xc]
  420cf1:	push   0x7ce6
  420cf6:	push   DWORD PTR [ebp-0x28]
  420cf9:	call   DWORD PTR ds:0x42a2f8
  420cff:	add    ebx,0x3114
  420d05:	movzx  ebx,BYTE PTR ds:0x4229ae
  420d0c:	add    DWORD PTR ds:0x422922,ebx
  420d12:	and    ebx,ebx
  420d14:	inc    ebx
  420d15:	neg    ebx
  420d17:	xor    edi,DWORD PTR ds:0x422962
  420d1d:	xor    ebx,DWORD PTR ds:0x4228ba
  420d23:	mov    edi,eax
  420d25:	mov    ebx,edx
  420d27:	and    edx,DWORD PTR ds:0x422902
  420d2d:	mov    eax,DWORD PTR [ebp-0x154]
  420d33:	mov    edx,DWORD PTR [ebp-0x150]
  420d39:	xor    eax,0xba699573
  420d3e:	xor    edx,0x9c0a89d8
  420d44:	mov    cl,0x3e
  420d46:	adc    DWORD PTR ds:0x4228ea,0x4228ee
  420d50:	call   0x421c1d
  420d55:	or     edi,eax
  420d57:	or     ebx,edx
  420d59:	cmp    DWORD PTR ds:0x422912,0x0
  420d60:	mov    DWORD PTR ds:0x422992,ecx
  420d66:	mov    DWORD PTR ds:0x4228d2,edi
  420d6c:	not    edx
  420d6e:	mov    edx,0x3bde
  420d73:	jmp    0x420dc4
  420d78:	not    eax
  420d7a:	mov    eax,ds:0x422922
  420d7f:	jne    0x420db2
  420d85:	push   0x10a6
  420d8a:	call   DWORD PTR ds:0x42a0ac
  420d90:	xor    DWORD PTR ds:0x4228ea,0x6213
  420d9a:	mov    edx,DWORD PTR ds:0x422ad6
  420da0:	mov    edx,DWORD PTR [edx]
  420da2:	sub    DWORD PTR ds:0x4228ea,edx
  420da8:	adc    DWORD PTR ds:0x42297e,0x796e
  420db2:	sub    DWORD PTR ds:0x42291e,ebx
  420db8:	sbb    edx,0x242b
  420dbe:	sbb    edx,DWORD PTR ds:0x42291a
  420dc4:	mov    eax,DWORD PTR [ebp-0x15c]
  420dca:	neg    edx
  420dcc:	mov    edx,DWORD PTR [ebp-0x158]
  420dd2:	sub    DWORD PTR ds:0x4228b6,0x5dbf
  420ddc:	xor    eax,0xba699573
  420de1:	sbb    DWORD PTR ds:0x422942,0x2b75
  420deb:	xor    edx,0x9c0a89d8
  420df1:	mov    cl,0x2
  420df3:	adc    DWORD PTR ds:0x422966,0x1945
  420dfd:	call   0x41a184
  420e02:	mov    ecx,edx
  420e04:	mov    edx,DWORD PTR [ebp-0x15c]
  420e0a:	mov    DWORD PTR [ebp-0x218],esi
  420e10:	mov    esi,DWORD PTR [ebp-0x158]
  420e16:	xor    edx,0xba699573
  420e1c:	xor    esi,0x9c0a89d8
  420e22:	mov    DWORD PTR [ebp-0x21c],eax
  420e28:	mov    eax,edx
  420e2a:	mov    edx,esi
  420e2c:	mov    DWORD PTR [ebp-0x220],ecx
  420e32:	mov    cl,0x3e
  420e34:	call   0x421c1d
  420e39:	mov    esi,DWORD PTR [ebp-0x21c]
  420e3f:	or     esi,eax
  420e41:	mov    eax,DWORD PTR [ebp-0x220]
  420e47:	or     eax,edx
  420e49:	push   eax
  420e4a:	push   esi
  420e4b:	push   ebx
  420e4c:	push   edi
  420e4d:	call   0x41df91
  420e52:	mov    esi,DWORD PTR [ebp-0x218]
  420e58:	cmp    esi,eax
  420e5a:	jne    0x420f10
  420e60:	mov    eax,DWORD PTR [ebp-0x154]
  420e66:	mov    edx,DWORD PTR [ebp-0x150]
  420e6c:	xor    eax,0xba699573
  420e71:	xor    edx,0x9c0a89d8
  420e77:	mov    cl,0x2
  420e79:	call   0x41a184
  420e7e:	mov    esi,eax
  420e80:	mov    edi,edx
  420e82:	mov    eax,DWORD PTR [ebp-0x154]
  420e88:	mov    edx,DWORD PTR [ebp-0x150]
  420e8e:	xor    eax,0xba699573
  420e93:	xor    edx,0x9c0a89d8
  420e99:	mov    cl,0x3e
  420e9b:	call   0x421c1d
  420ea0:	or     esi,eax
  420ea2:	or     edi,edx
  420ea4:	mov    eax,DWORD PTR [ebp-0x15c]
  420eaa:	mov    edx,DWORD PTR [ebp-0x158]
  420eb0:	xor    eax,0xba699573
  420eb5:	xor    edx,0x9c0a89d8
  420ebb:	mov    cl,0x2
  420ebd:	call   0x41a184
  420ec2:	mov    ebx,eax
  420ec4:	mov    eax,edx
  420ec6:	mov    ecx,DWORD PTR [ebp-0x15c]
  420ecc:	mov    edx,DWORD PTR [ebp-0x158]
  420ed2:	xor    ecx,0xba699573
  420ed8:	xor    edx,0x9c0a89d8
  420ede:	mov    DWORD PTR [ebp-0x224],eax
  420ee4:	mov    eax,ecx
  420ee6:	mov    cl,0x3e
  420ee8:	call   0x421c1d
  420eed:	or     ebx,eax
  420eef:	mov    eax,DWORD PTR [ebp-0x224]
  420ef5:	or     eax,edx
  420ef7:	push   eax
  420ef8:	push   ebx
  420ef9:	push   edi
  420efa:	push   esi
  420efb:	call   0x41df91
  420f00:	mov    DWORD PTR [ebp-0x178],eax
  420f06:	jmp    0x4211d0
  420f0b:	jmp    0x421186
  420f10:	lea    eax,[ebp-0x168]
  420f16:	mov    DWORD PTR [ebp-0x164],eax
  420f1c:	mov    eax,DWORD PTR [ebp-0x164]
  420f22:	mov    DWORD PTR [eax],0xa3e69a9d
  420f28:	mov    eax,DWORD PTR [ebp-0x168]
  420f2e:	xor    eax,0xa3e69a9d
  420f33:	shr    eax,0x2
  420f36:	mov    ecx,DWORD PTR [ebp-0x168]
  420f3c:	xor    ecx,0xa3e69a9d
  420f42:	shl    ecx,0x1e
  420f45:	or     eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x174]
  420f4d:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  420f51:	mov    DWORD PTR [ebp-0x160],eax
  420f57:	mov    esi,DWORD PTR [ebp-0x160]
  420f5d:	mov    eax,DWORD PTR [ebp-0x154]
  420f63:	mov    edx,DWORD PTR [ebp-0x150]
  420f69:	xor    eax,0xba699573
  420f6e:	xor    edx,0x9c0a89d8
  420f74:	mov    cl,0x2
  420f76:	call   0x41a184
  420f7b:	mov    edi,eax
  420f7d:	mov    ebx,edx
  420f7f:	mov    eax,DWORD PTR [ebp-0x154]
  420f85:	mov    edx,DWORD PTR [ebp-0x150]
  420f8b:	xor    eax,0xba699573
  420f90:	xor    edx,0x9c0a89d8
  420f96:	mov    cl,0x3e
  420f98:	call   0x421c1d
  420f9d:	or     edi,eax
  420f9f:	or     ebx,edx
  420fa1:	mov    eax,DWORD PTR [ebp-0x15c]
  420fa7:	mov    edx,DWORD PTR [ebp-0x158]
  420fad:	xor    eax,0xba699573
  420fb2:	xor    edx,0x9c0a89d8
  420fb8:	mov    cl,0x2
  420fba:	call   0x41a184
  420fbf:	mov    ecx,edx
  420fc1:	mov    edx,DWORD PTR [ebp-0x15c]
  420fc7:	mov    DWORD PTR [ebp-0x228],esi
  420fcd:	mov    esi,DWORD PTR [ebp-0x158]
  420fd3:	xor    edx,0xba699573
  420fd9:	xor    esi,0x9c0a89d8
  420fdf:	mov    DWORD PTR [ebp-0x22c],eax
  420fe5:	mov    eax,edx
  420fe7:	mov    edx,esi
  420fe9:	mov    DWORD PTR [ebp-0x230],ecx
  420fef:	mov    cl,0x3e
  420ff1:	call   0x421c1d
  420ff6:	mov    esi,DWORD PTR [ebp-0x22c]
  420ffc:	or     esi,eax
  420ffe:	mov    eax,DWORD PTR [ebp-0x230]
  421004:	or     eax,edx
  421006:	push   eax
  421007:	push   esi
  421008:	push   ebx
  421009:	push   edi
  42100a:	call   0x41df91
  42100f:	mov    esi,DWORD PTR [ebp-0x228]
  421015:	cmp    esi,eax
  421017:	je     0x42108c
  42101d:	mov    eax,DWORD PTR [ebp-0x154]
  421023:	mov    edx,DWORD PTR [ebp-0x150]
  421029:	xor    eax,0xba699573
  42102e:	xor    edx,0x9c0a89d8
  421034:	mov    cl,0x2
  421036:	call   0x41a184
  42103b:	mov    esi,eax
  42103d:	mov    edi,edx
  42103f:	mov    eax,DWORD PTR [ebp-0x154]
  421045:	mov    edx,DWORD PTR [ebp-0x150]
  42104b:	xor    eax,0xba699573
  421050:	xor    edx,0x9c0a89d8
  421056:	mov    cl,0x3e
  421058:	call   0x421c1d
  42105d:	or     esi,eax
  42105f:	or     edi,edx
  421061:	mov    eax,DWORD PTR [ebp-0x160]
  421067:	imul   esi,eax
  42106a:	add    esi,DWORD PTR [ebp-0x170]
  421070:	mov    DWORD PTR [ebp-0x16c],esi
  421076:	mov    eax,DWORD PTR [ebp-0x16c]
  42107c:	mov    DWORD PTR [ebp-0x178],eax
  421082:	jmp    0x4211d0
  421087:	jmp    0x421137
  42108c:	mov    eax,DWORD PTR [ebp-0x154]
  421092:	mov    edx,DWORD PTR [ebp-0x150]
  421098:	xor    eax,0xba699573
  42109d:	xor    edx,0x9c0a89d8
  4210a3:	mov    cl,0x2
  4210a5:	call   0x41a184
  4210aa:	mov    esi,eax
  4210ac:	mov    edi,edx
  4210ae:	mov    eax,DWORD PTR [ebp-0x154]
  4210b4:	mov    edx,DWORD PTR [ebp-0x150]
  4210ba:	xor    eax,0xba699573
  4210bf:	xor    edx,0x9c0a89d8
  4210c5:	mov    cl,0x3e
  4210c7:	call   0x421c1d
  4210cc:	or     esi,eax
  4210ce:	or     edi,edx
  4210d0:	mov    eax,DWORD PTR [ebp-0x15c]
  4210d6:	mov    edx,DWORD PTR [ebp-0x158]
  4210dc:	xor    eax,0xba699573
  4210e1:	xor    edx,0x9c0a89d8
  4210e7:	mov    cl,0x2
  4210e9:	call   0x41a184
  4210ee:	mov    ebx,eax
  4210f0:	mov    eax,edx
  4210f2:	mov    ecx,DWORD PTR [ebp-0x15c]
  4210f8:	mov    edx,DWORD PTR [ebp-0x158]
  4210fe:	xor    ecx,0xba699573
  421104:	xor    edx,0x9c0a89d8
  42110a:	mov    DWORD PTR [ebp-0x234],eax
  421110:	mov    eax,ecx
  421112:	mov    cl,0x3e
  421114:	call   0x421c1d
  421119:	or     ebx,eax
  42111b:	mov    eax,DWORD PTR [ebp-0x234]
  421121:	or     eax,edx
  421123:	push   eax
  421124:	push   ebx
  421125:	push   edi
  421126:	push   esi
  421127:	call   0x41df91
  42112c:	mov    DWORD PTR [ebp-0x178],eax
  421132:	jmp    0x4211d0
  421137:	mov    eax,DWORD PTR [ebp-0x15c]
  42113d:	mov    edx,DWORD PTR [ebp-0x158]
  421143:	xor    eax,0xba699573
  421148:	xor    edx,0x9c0a89d8
  42114e:	mov    cl,0x2
  421150:	call   0x41a184
  421155:	mov    esi,eax
  421157:	mov    edi,edx
  421159:	mov    eax,DWORD PTR [ebp-0x15c]
  42115f:	mov    edx,DWORD PTR [ebp-0x158]
  421165:	xor    eax,0xba699573
  42116a:	xor    edx,0x9c0a89d8
  421170:	mov    cl,0x3e
  421172:	call   0x421c1d
  421177:	or     esi,eax
  421179:	or     edi,edx
  42117b:	mov    DWORD PTR [ebp-0x178],esi
  421181:	jmp    0x4211d0
  421186:	mov    eax,DWORD PTR [ebp-0x15c]
  42118c:	mov    edx,DWORD PTR [ebp-0x158]
  421192:	xor    eax,0xba699573
  421197:	xor    edx,0x9c0a89d8
  42119d:	mov    cl,0x2
  42119f:	call   0x41a184
  4211a4:	mov    esi,eax
  4211a6:	mov    edi,edx
  4211a8:	mov    eax,DWORD PTR [ebp-0x15c]
  4211ae:	mov    edx,DWORD PTR [ebp-0x158]
  4211b4:	xor    eax,0xba699573
  4211b9:	xor    edx,0x9c0a89d8
  4211bf:	mov    cl,0x3e
  4211c1:	call   0x421c1d
  4211c6:	or     esi,eax
  4211c8:	or     edi,edx
  4211ca:	mov    DWORD PTR [ebp-0x178],esi
  4211d0:	mov    ecx,DWORD PTR [ebp-0xd8]
  4211d6:	mov    eax,0x459a
  4211db:	xor    edx,edx
  4211dd:	div    ecx
  4211df:	mov    ecx,DWORD PTR [ebp-0xdc]
  4211e5:	and    eax,ecx
  4211e7:	add    eax,DWORD PTR [ebp-0x44]
  4211ea:	mov    ecx,DWORD PTR [ebp-0xe0]
  4211f0:	lea    eax,[eax+ecx*1+0x272f]
  4211f7:	xor    eax,0x1080c
  4211fc:	add    eax,DWORD PTR [ebp-0x178]
  421202:	mov    DWORD PTR [ebp-0xe8],eax
  421208:	mov    DWORD PTR [ebp-0xc],0x5950
  42120f:	mov    DWORD PTR [ebp-0xf8],0x4964
  421219:	mov    DWORD PTR [ebp-0x130],0x3
  421223:	mov    DWORD PTR [ebp-0x20],0x2df9
  42122a:	mov    DWORD PTR [ebp-0x8],0x4524
  421231:	mov    DWORD PTR [ebp-0xd4],0x637e
  42123b:	mov    DWORD PTR [ebp-0x110],0x38c8
  421245:	mov    DWORD PTR [ebp-0xa4],0x7118
  42124f:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421259:	mov    DWORD PTR [ebp-0x10c],0x3315
  421263:	mov    eax,DWORD PTR [ebp-0xf8]
  421269:	mov    ecx,DWORD PTR [ebp-0x130]
  42126f:	xor    edx,edx
  421271:	div    ecx
  421273:	add    eax,0x454e
  421278:	mov    ecx,DWORD PTR [ebp-0xc]
  42127b:	and    eax,ecx
  42127d:	xor    eax,0x5940
  421282:	add    eax,DWORD PTR [ebp+0x8]
  421285:	mov    ecx,DWORD PTR [ebp-0x110]
  42128b:	mov    edx,DWORD PTR [ebp-0xa4]
  421291:	sub    ecx,edx
  421293:	mov    edx,DWORD PTR [ebp-0xd4]
  421299:	or     ecx,edx
  42129b:	mov    edx,DWORD PTR [ebp-0x8]
  42129e:	and    ecx,edx
  4212a0:	mov    edx,DWORD PTR [ebp-0x20]
  4212a3:	xor    ecx,edx
  4212a5:	mov    edx,DWORD PTR [ebp-0x10c]
  4212ab:	mov    esi,0x180f
  4212b0:	sub    esi,edx
  4212b2:	mov    edx,DWORD PTR [ebp-0xa0]
  4212b8:	imul   esi,edx
  4212bb:	xor    esi,0x402b
  4212c1:	xor    esi,0xfed78c17
  4212c7:	mov    edx,DWORD PTR [ebp-0xe8]
  4212cd:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4212d4:	add    ecx,eax
  4212d6:	add    esi,ecx
  4212d8:	mov    DWORD PTR [ebp-0x38],esi
  4212db:	mov    DWORD PTR [ebp-0x4],0x59a8
  4212e2:	mov    DWORD PTR [ebp-0x30],0x7021
  4212e9:	mov    DWORD PTR [ebp-0xf4],0x6210
  4212f3:	mov    DWORD PTR [ebp-0x58],0x73d5
  4212fa:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421304:	mov    DWORD PTR [ebp-0x3c],0x3144
  42130b:	mov    eax,DWORD PTR [ebp-0x30]
  42130e:	xor    eax,0x75cb
  421313:	mov    ecx,DWORD PTR [ebp-0x4]
  421316:	imul   eax,ecx
  421319:	mov    ecx,DWORD PTR [ebp+0x8]
  42131c:	lea    ecx,[ecx+eax*1-0x2123b90]
  421323:	mov    eax,DWORD PTR [ebp-0xf4]
  421329:	and    eax,0x6b34
  42132e:	and    eax,0x658d
  421333:	xor    edx,edx
  421335:	push   0x6
  421337:	pop    esi
  421338:	div    esi
  42133a:	imul   eax,eax,0x3fb9
  421340:	mov    edx,DWORD PTR [ebp-0x3c]
  421343:	and    edx,0x58c7
  421349:	mov    esi,DWORD PTR [ebp-0x124]
  42134f:	or     edx,esi
  421351:	add    edx,0x7a25
  421357:	imul   edx,edx,0x28d2
  42135d:	mov    esi,DWORD PTR [ebp-0x58]
  421360:	xor    edx,esi
  421362:	xor    edx,0x1856f731
  421368:	mov    esi,DWORD PTR [ebp-0xe8]
  42136e:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421375:	add    eax,ecx
  421377:	add    edx,eax
  421379:	mov    DWORD PTR [ebp-0xac],edx
  42137f:	mov    DWORD PTR [ebp-0x54],0x1
  421386:	mov    DWORD PTR [ebp-0x40],0x1ee8
  42138d:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421394:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42139e:	mov    DWORD PTR [ebp-0x108],0x2eeb
  4213a8:	mov    DWORD PTR [ebp-0x104],0x2108
  4213b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4213b5:	xor    edx,edx
  4213b7:	push   0x3
  4213b9:	pop    ecx
  4213ba:	div    ecx
  4213bc:	mov    ecx,DWORD PTR [ebp-0x40]
  4213bf:	or     eax,ecx
  4213c1:	mov    ecx,DWORD PTR [ebp-0x54]
  4213c4:	xor    edx,edx
  4213c6:	div    ecx
  4213c8:	imul   eax,eax,0x7d53
  4213ce:	mov    ecx,DWORD PTR [ebp+0x8]
  4213d1:	lea    eax,[ecx+eax*1-0x1f534807]
  4213d8:	mov    ecx,DWORD PTR [ebp-0xf0]
  4213de:	and    ecx,0x4108
  4213e4:	and    ecx,0x40e7
  4213ea:	sub    ecx,0x1a54
  4213f0:	xor    ecx,0x25ac
  4213f6:	mov    edx,DWORD PTR [ebp-0x104]
  4213fc:	xor    edx,0x6dda
  421402:	mov    esi,DWORD PTR [ebp-0x108]
  421408:	and    edx,esi
  42140a:	and    edx,0xe0c
  421410:	or     edx,0x5b
  421413:	mov    esi,DWORD PTR [ebp-0xe8]
  421419:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42141d:	add    ecx,eax
  42141f:	lea    eax,[edx+ecx*1-0xc5b]
  421426:	mov    DWORD PTR [ebp-0xa8],eax
  42142c:	and    DWORD PTR [ebp-0x144],0x0
  421433:	jmp    0x421445
  421438:	mov    eax,DWORD PTR [ebp-0x144]
  42143e:	inc    eax
  42143f:	mov    DWORD PTR [ebp-0x144],eax
  421445:	mov    eax,DWORD PTR [ebp-0xe8]
  42144b:	mov    ecx,DWORD PTR [ebp-0x144]
  421451:	cmp    ecx,DWORD PTR [eax+0x18]
  421454:	je     0x421a0d
  42145a:	mov    eax,DWORD PTR [ebp-0x144]
  421460:	mov    ecx,DWORD PTR [ebp-0x38]
  421463:	mov    edx,DWORD PTR [ebp+0x8]
  421466:	add    edx,DWORD PTR [ecx+eax*4]
  421469:	mov    DWORD PTR [ebp-0x48],edx
  42146c:	mov    eax,DWORD PTR [ebp-0x48]
  42146f:	mov    DWORD PTR [ebp-0x210],eax
  421475:	mov    eax,DWORD PTR [ebp+0xc]
  421478:	mov    DWORD PTR [ebp-0x20c],eax
  42147e:	mov    DWORD PTR [ebp-0x1f0],0xba699573
  421488:	mov    DWORD PTR [ebp-0x1ec],0x9c0a89d8
  421492:	mov    DWORD PTR [ebp-0x1e0],0xba699577
  42149c:	mov    DWORD PTR [ebp-0x1dc],0x9c0a89d8
  4214a6:	lea    eax,[ebp-0x1e8]
  4214ac:	mov    DWORD PTR [ebp-0x1f4],eax
  4214b2:	mov    eax,DWORD PTR [ebp-0x20c]
  4214b8:	movzx  eax,WORD PTR [eax+0x20]
  4214bc:	xor    eax,0xa38b
  4214c1:	movzx  eax,ax
  4214c4:	sar    eax,1
  4214c6:	mov    ecx,DWORD PTR [ebp-0x20c]
  4214cc:	movzx  ecx,WORD PTR [ecx+0x20]
  4214d0:	xor    ecx,0xa38b
  4214d6:	movzx  ecx,cx
  4214d9:	shl    ecx,0xf
  4214dc:	or     eax,ecx
  4214de:	movzx  eax,ax
  4214e1:	mov    ecx,DWORD PTR [ebp-0x1f4]
  4214e7:	mov    DWORD PTR [ecx],eax
  4214e9:	mov    eax,DWORD PTR [ebp-0x1e0]
  4214ef:	mov    edx,DWORD PTR [ebp-0x1dc]
  4214f5:	xor    eax,0xba699573
  4214fa:	xor    edx,0x9c0a89d8
  421500:	mov    cl,0x2
  421502:	call   0x41a184
  421507:	mov    ebx,eax
  421509:	mov    esi,edx
  42150b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421511:	mov    edx,DWORD PTR [ebp-0x1dc]
  421517:	xor    eax,0xba699573
  42151c:	xor    edx,0x9c0a89d8
  421522:	mov    cl,0x3e
  421524:	call   0x421c1d
  421529:	or     ebx,eax
  42152b:	or     esi,edx
  42152d:	movzx  eax,bl
  421530:	push   eax
  421531:	lea    eax,[ebp-0x198]
  421537:	push   eax
  421538:	call   0x41e064
  42153d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421543:	mov    edx,DWORD PTR [ebp-0x1ec]
  421549:	xor    eax,0xba699573
  42154e:	xor    edx,0x9c0a89d8
  421554:	mov    cl,0x2
  421556:	call   0x41a184
  42155b:	mov    esi,eax
  42155d:	mov    edi,edx
  42155f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421565:	mov    edx,DWORD PTR [ebp-0x1ec]
  42156b:	xor    eax,0xba699573
  421570:	xor    edx,0x9c0a89d8
  421576:	mov    cl,0x3e
  421578:	call   0x421c1d
  42157d:	or     esi,eax
  42157f:	or     edi,edx
  421581:	mov    DWORD PTR [ebp-0x1f8],esi
  421587:	jmp    0x4215dc
  42158c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421592:	mov    edx,DWORD PTR [ebp-0x1dc]
  421598:	xor    eax,0xba699573
  42159d:	xor    edx,0x9c0a89d8
  4215a3:	mov    cl,0x2
  4215a5:	call   0x41a184
  4215aa:	mov    esi,eax
  4215ac:	mov    edi,edx
  4215ae:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215b4:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215ba:	xor    eax,0xba699573
  4215bf:	xor    edx,0x9c0a89d8
  4215c5:	mov    cl,0x3e
  4215c7:	call   0x421c1d
  4215cc:	or     esi,eax
  4215ce:	or     edi,edx
  4215d0:	add    esi,DWORD PTR [ebp-0x1f8]
  4215d6:	mov    DWORD PTR [ebp-0x1f8],esi
  4215dc:	mov    eax,DWORD PTR [ebp-0x1e8]
  4215e2:	cmp    DWORD PTR [ebp-0x1f8],eax
  4215e8:	je     0x42167b
  4215ee:	mov    eax,DWORD PTR [ebp-0x1f8]
  4215f4:	mov    ecx,DWORD PTR [ebp-0x20c]
  4215fa:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  4215ff:	xor    eax,0xa38b
  421604:	movzx  eax,ax
  421607:	sar    eax,1
  421609:	mov    ecx,DWORD PTR [ebp-0x1f8]
  42160f:	mov    edx,DWORD PTR [ebp-0x20c]
  421615:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  42161a:	xor    ecx,0xa38b
  421620:	movzx  ecx,cx
  421623:	shl    ecx,0xf
  421626:	or     eax,ecx
  421628:	movzx  eax,ax
  42162b:	mov    DWORD PTR [ebp-0x1fc],eax
  421631:	mov    eax,DWORD PTR [ebp-0x1f8]
  421637:	mov    ecx,DWORD PTR [ebp-0x20c]
  42163d:	movzx  eax,WORD PTR [ecx+eax*4]
  421641:	xor    eax,0xa38b
  421646:	movzx  eax,ax
  421649:	sar    eax,1
  42164b:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421651:	mov    edx,DWORD PTR [ebp-0x20c]
  421657:	movzx  ecx,WORD PTR [edx+ecx*4]
  42165b:	xor    ecx,0xa38b
  421661:	movzx  ecx,cx
  421664:	shl    ecx,0xf
  421667:	or     eax,ecx
  421669:	mov    ecx,DWORD PTR [ebp-0x1fc]
  42166f:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421676:	jmp    0x42158c
  42167b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421681:	mov    edx,DWORD PTR [ebp-0x1ec]
  421687:	xor    eax,0xba699573
  42168c:	xor    edx,0x9c0a89d8
  421692:	mov    cl,0x2
  421694:	call   0x41a184
  421699:	mov    esi,eax
  42169b:	mov    edi,edx
  42169d:	mov    eax,DWORD PTR [ebp-0x1f0]
  4216a3:	mov    edx,DWORD PTR [ebp-0x1ec]
  4216a9:	xor    eax,0xba699573
  4216ae:	xor    edx,0x9c0a89d8
  4216b4:	mov    cl,0x3e
  4216b6:	call   0x421c1d
  4216bb:	or     esi,eax
  4216bd:	or     edi,edx
  4216bf:	mov    DWORD PTR [ebp-0x1e4],esi
  4216c5:	mov    eax,DWORD PTR [ebp-0x1e0]
  4216cb:	mov    edx,DWORD PTR [ebp-0x1dc]
  4216d1:	xor    eax,0xba699573
  4216d6:	xor    edx,0x9c0a89d8
  4216dc:	mov    cl,0x2
  4216de:	call   0x41a184
  4216e3:	mov    esi,eax
  4216e5:	mov    edi,edx
  4216e7:	mov    eax,DWORD PTR [ebp-0x1e0]
  4216ed:	mov    edx,DWORD PTR [ebp-0x1dc]
  4216f3:	xor    eax,0xba699573
  4216f8:	xor    edx,0x9c0a89d8
  4216fe:	mov    cl,0x3e
  421700:	call   0x421c1d
  421705:	or     esi,eax
  421707:	or     edi,edx
  421709:	mov    DWORD PTR [ebp-0x23c],esi
  42170f:	mov    DWORD PTR [ebp-0x238],edi
  421715:	mov    eax,DWORD PTR [ebp-0x23c]
  42171b:	or     eax,DWORD PTR [ebp-0x238]
  421721:	je     0x421981
  421727:	lea    eax,[ebp-0x204]
  42172d:	mov    DWORD PTR [ebp-0x208],eax
  421733:	mov    eax,DWORD PTR [ebp-0x1e4]
  421739:	xor    edx,edx
  42173b:	mov    cl,0x2
  42173d:	call   0x421c1d
  421742:	mov    esi,eax
  421744:	mov    edi,edx
  421746:	mov    eax,DWORD PTR [ebp-0x1e4]
  42174c:	xor    edx,edx
  42174e:	mov    cl,0x3e
  421750:	call   0x41a184
  421755:	or     esi,eax
  421757:	or     edi,edx
  421759:	xor    esi,0xba699573
  42175f:	xor    edi,0x9c0a89d8
  421765:	mov    eax,DWORD PTR [ebp-0x208]
  42176b:	mov    DWORD PTR [eax],esi
  42176d:	mov    DWORD PTR [eax+0x4],edi
  421770:	mov    eax,DWORD PTR [ebp-0x1e4]
  421776:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  42177e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421784:	mov    edx,DWORD PTR [ebp-0x1dc]
  42178a:	xor    eax,0xba699573
  42178f:	xor    edx,0x9c0a89d8
  421795:	mov    cl,0x2
  421797:	call   0x41a184
  42179c:	mov    ebx,eax
  42179e:	mov    edi,edx
  4217a0:	mov    eax,DWORD PTR [ebp-0x1e0]
  4217a6:	mov    edx,DWORD PTR [ebp-0x1dc]
  4217ac:	xor    eax,0xba699573
  4217b1:	xor    edx,0x9c0a89d8
  4217b7:	mov    cl,0x3e
  4217b9:	call   0x421c1d
  4217be:	or     ebx,eax
  4217c0:	or     edi,edx
  4217c2:	movsx  eax,bl
  4217c5:	cmp    esi,eax
  4217c7:	je     0x421927
  4217cd:	mov    eax,DWORD PTR [ebp-0x1e4]
  4217d3:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  4217db:	mov    eax,DWORD PTR [ebp-0x204]
  4217e1:	mov    edx,DWORD PTR [ebp-0x200]
  4217e7:	xor    eax,0xba699573
  4217ec:	xor    edx,0x9c0a89d8
  4217f2:	mov    cl,0x2
  4217f4:	call   0x41a184
  4217f9:	mov    edi,eax
  4217fb:	mov    ebx,edx
  4217fd:	mov    eax,DWORD PTR [ebp-0x204]
  421803:	mov    edx,DWORD PTR [ebp-0x200]
  421809:	xor    eax,0xba699573
  42180e:	xor    edx,0x9c0a89d8
  421814:	mov    cl,0x3e
  421816:	call   0x421c1d
  42181b:	or     edi,eax
  42181d:	or     ebx,edx
  42181f:	mov    eax,DWORD PTR [ebp-0x210]
  421825:	movsx  eax,BYTE PTR [eax+edi*1]
  421829:	cmp    esi,eax
  42182b:	je     0x42183b
  421831:	jmp    0x421981
  421836:	jmp    0x421927
  42183b:	mov    eax,DWORD PTR [ebp-0x204]
  421841:	mov    edx,DWORD PTR [ebp-0x200]
  421847:	xor    eax,0xba699573
  42184c:	xor    edx,0x9c0a89d8
  421852:	mov    cl,0x2
  421854:	call   0x41a184
  421859:	mov    esi,eax
  42185b:	mov    edi,edx
  42185d:	mov    eax,DWORD PTR [ebp-0x204]
  421863:	mov    edx,DWORD PTR [ebp-0x200]
  421869:	xor    eax,0xba699573
  42186e:	xor    edx,0x9c0a89d8
  421874:	mov    cl,0x3e
  421876:	call   0x421c1d
  42187b:	or     esi,eax
  42187d:	or     edi,edx
  42187f:	mov    eax,DWORD PTR [ebp-0x210]
  421885:	movsx  esi,BYTE PTR [eax+esi*1]
  421889:	mov    eax,DWORD PTR [ebp-0x1f0]
  42188f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421895:	xor    eax,0xba699573
  42189a:	xor    edx,0x9c0a89d8
  4218a0:	mov    cl,0x2
  4218a2:	call   0x41a184
  4218a7:	mov    ebx,eax
  4218a9:	mov    edi,edx
  4218ab:	mov    eax,DWORD PTR [ebp-0x1f0]
  4218b1:	mov    edx,DWORD PTR [ebp-0x1ec]
  4218b7:	xor    eax,0xba699573
  4218bc:	xor    edx,0x9c0a89d8
  4218c2:	mov    cl,0x3e
  4218c4:	call   0x421c1d
  4218c9:	or     ebx,eax
  4218cb:	or     edi,edx
  4218cd:	movsx  eax,bl
  4218d0:	cmp    esi,eax
  4218d2:	jne    0x421927
  4218d8:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218de:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218e4:	xor    eax,0xba699573
  4218e9:	xor    edx,0x9c0a89d8
  4218ef:	mov    cl,0x2
  4218f1:	call   0x41a184
  4218f6:	mov    esi,eax
  4218f8:	mov    edi,edx
  4218fa:	mov    eax,DWORD PTR [ebp-0x1e0]
  421900:	mov    edx,DWORD PTR [ebp-0x1dc]
  421906:	xor    eax,0xba699573
  42190b:	xor    edx,0x9c0a89d8
  421911:	mov    cl,0x3e
  421913:	call   0x421c1d
  421918:	or     esi,eax
  42191a:	or     edi,edx
  42191c:	mov    DWORD PTR [ebp-0x214],esi
  421922:	jmp    0x4219cb
  421927:	mov    eax,DWORD PTR [ebp-0x1e0]
  42192d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421933:	xor    eax,0xba699573
  421938:	xor    edx,0x9c0a89d8
  42193e:	mov    cl,0x2
  421940:	call   0x41a184
  421945:	mov    esi,eax
  421947:	mov    edi,edx
  421949:	mov    eax,DWORD PTR [ebp-0x1e0]
  42194f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421955:	xor    eax,0xba699573
  42195a:	xor    edx,0x9c0a89d8
  421960:	mov    cl,0x3e
  421962:	call   0x421c1d
  421967:	or     esi,eax
  421969:	or     edi,edx
  42196b:	add    esi,DWORD PTR [ebp-0x1e4]
  421971:	mov    DWORD PTR [ebp-0x1e4],esi
  421977:	jmp    0x4216c5
  42197c:	jmp    0x4216c5
  421981:	mov    eax,DWORD PTR [ebp-0x1f0]
  421987:	mov    edx,DWORD PTR [ebp-0x1ec]
  42198d:	xor    eax,0xba699573
  421992:	xor    edx,0x9c0a89d8
  421998:	mov    cl,0x2
  42199a:	call   0x41a184
  42199f:	mov    esi,eax
  4219a1:	mov    edi,edx
  4219a3:	mov    eax,DWORD PTR [ebp-0x1f0]
  4219a9:	mov    edx,DWORD PTR [ebp-0x1ec]
  4219af:	xor    eax,0xba699573
  4219b4:	xor    edx,0x9c0a89d8
  4219ba:	mov    cl,0x3e
  4219bc:	call   0x421c1d
  4219c1:	or     esi,eax
  4219c3:	or     edi,edx
  4219c5:	mov    DWORD PTR [ebp-0x214],esi
  4219cb:	mov    eax,DWORD PTR [ebp-0x214]
  4219d1:	mov    DWORD PTR [ebp-0xc8],eax
  4219d7:	cmp    DWORD PTR [ebp-0xc8],0x0
  4219de:	je     0x421a08
  4219e4:	mov    eax,DWORD PTR [ebp-0x144]
  4219ea:	mov    ecx,DWORD PTR [ebp-0xac]
  4219f0:	movzx  eax,WORD PTR [ecx+eax*2]
  4219f4:	mov    ecx,DWORD PTR [ebp-0xa8]
  4219fa:	mov    eax,DWORD PTR [ecx+eax*4]
  4219fd:	mov    DWORD PTR [ebp-0xfc],eax
  421a03:	jmp    0x421a0d
  421a08:	jmp    0x421438
  421a0d:	cmp    DWORD PTR [ebp-0xfc],0x0
  421a14:	jne    0x421a21
  421a1a:	xor    eax,eax
  421a1c:	jmp    0x421c16
  421a21:	mov    eax,DWORD PTR [ebp+0x8]
  421a24:	add    eax,DWORD PTR [ebp-0xfc]
  421a2a:	mov    DWORD PTR [ebp-0xec],eax
  421a30:	mov    DWORD PTR [ebp-0x74],0x0
  421a37:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a3e:	je     0x421aba
  421a44:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a4b:	je     0x421aba
  421a51:	mov    eax,DWORD PTR [ebp-0xb0]
  421a57:	shl    eax,0x2
  421a5a:	mov    DWORD PTR [ebp-0x74],eax
  421a5d:	mov    DWORD PTR [ebp-0x14c],0x0
  421a67:	sub    esp,DWORD PTR [ebp-0x74]
  421a6a:	mov    DWORD PTR [ebp-0x14c],esp
  421a70:	mov    DWORD PTR [ebp-0x148],0x0
  421a7a:	mov    eax,DWORD PTR [ebp-0x148]
  421a80:	cmp    eax,DWORD PTR [ebp-0xb0]
  421a86:	je     0x421aba
  421a8c:	mov    eax,DWORD PTR [ebp-0x148]
  421a92:	mov    ecx,DWORD PTR [ebp-0x14c]
  421a98:	mov    edx,DWORD PTR [ebp-0x148]
  421a9e:	mov    esi,DWORD PTR [ebp+0x14]
  421aa1:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421aa5:	mov    DWORD PTR [ecx+eax*4],edx
  421aa8:	mov    eax,DWORD PTR [ebp-0x148]
  421aae:	inc    eax
  421aaf:	mov    DWORD PTR [ebp-0x148],eax
  421ab5:	jmp    0x421a7a
  421aba:	mov    DWORD PTR [ebp-0x9c],0x0
  421ac4:	push   0x421bdd
  421ac9:	jmp    DWORD PTR [ebp-0xec]
  421acf:	mov    eax,eax
  421ad1:	mov    ecx,esp
  421ad3:	ret    0x4
  421ad6:	sub    DWORD PTR ds:0x422972,ecx
  421adc:	push   ebx
  421add:	mov    eax,ds:0x422a36
  421ae2:	mov    eax,DWORD PTR [eax]
  421ae4:	add    DWORD PTR ds:0x4228be,eax
  421aea:	push   esi
  421aeb:	inc    eax
  421aec:	mov    eax,DWORD PTR [esp+0x18]
  421af0:	or     eax,eax
  421af2:	mov    DWORD PTR ds:0x422976,0x30f6
  421afc:	jne    0x421b4d
  421b02:	mov    ecx,DWORD PTR [esp+0x14]
  421b06:	xor    DWORD PTR ds:0x4228f6,0x4645
  421b10:	mov    eax,DWORD PTR [esp+0x10]
  421b14:	mov    ebx,DWORD PTR ds:0x422992
  421b1a:	add    ebx,DWORD PTR ds:0x42299e
  421b20:	mov    DWORD PTR ds:0x422992,ebx
  421b26:	xor    edx,edx
  421b28:	adc    DWORD PTR ds:0x422972,0x7727
  421b32:	div    ecx
  421b34:	mov    ebx,eax
  421b36:	mov    eax,DWORD PTR [esp+0xc]
  421b3a:	mov    DWORD PTR ds:0x4228aa,0xac4
  421b44:	div    ecx
  421b46:	mov    edx,ebx
  421b48:	jmp    0x421bd8
  421b4d:	mov    ecx,eax
  421b4f:	movzx  eax,WORD PTR ds:0x4228ca
  421b56:	or     eax,DWORD PTR ds:0x4229b2
  421b5c:	mov    ds:0x4228ca,eax
  421b61:	mov    ebx,DWORD PTR [esp+0x14]
  421b65:	adc    DWORD PTR ds:0x422922,ecx
  421b6b:	mov    edx,DWORD PTR [esp+0x10]
  421b6f:	mov    eax,DWORD PTR [esp+0xc]
  421b73:	sbb    DWORD PTR ds:0x42299a,0x1a98
  421b7d:	shr    ecx,1
  421b7f:	mov    DWORD PTR ds:0x42289e,0x38b9
  421b89:	rcr    ebx,1
  421b8b:	or     DWORD PTR ds:0x42296e,0x13a0
  421b95:	shr    edx,1
  421b97:	rcr    eax,1
  421b99:	or     ecx,ecx
  421b9b:	jne    0x421b73
  421ba1:	div    ebx
  421ba3:	mov    esi,eax
  421ba5:	mul    DWORD PTR [esp+0x18]
  421ba9:	mov    ecx,eax
  421bab:	mov    eax,DWORD PTR [esp+0x14]
  421baf:	mul    esi
  421bb1:	add    edx,ecx
  421bb3:	jb     0x421bd3
  421bb9:	cmp    edx,DWORD PTR [esp+0x10]
  421bbd:	ja     0x421bd3
  421bc3:	jb     0x421bd4
  421bc9:	cmp    eax,DWORD PTR [esp+0xc]
  421bcd:	jbe    0x421bd4
  421bd3:	dec    esi
  421bd4:	xor    edx,edx
  421bd6:	mov    eax,esi
  421bd8:	pop    esi
  421bd9:	pop    ebx
  421bda:	ret    0x10
  421bdd:	sub    DWORD PTR [ebp+0x10],0x1
  421be1:	mov    DWORD PTR ds:0x4228ce,0x220d
  421beb:	cmp    DWORD PTR [ebp+0x10],0x0
  421bef:	je     0x421bfe
  421bf5:	and    edi,DWORD PTR ds:0x4229ca
  421bfb:	add    esp,DWORD PTR [ebp-0x74]
  421bfe:	mov    edi,DWORD PTR ds:0x422896
  421c04:	mov    DWORD PTR [ebp-0x9c],eax
  421c0a:	mov    eax,DWORD PTR [ebp-0x9c]
  421c10:	mov    DWORD PTR ds:0x4228ee,edx
  421c16:	pop    edi
  421c17:	pop    esi
  421c18:	pop    ebx
  421c19:	leave  
  421c1a:	ret    0x10
  421c1d:	mov    DWORD PTR ds:0x42298e,0x1d18
  421c27:	cmp    cl,0x40
  421c2a:	jae    0x421c71
  421c30:	cmp    cl,0x20
  421c33:	mov    DWORD PTR ds:0x4228d6,0x5a1c
  421c3d:	jae    0x421c49
  421c43:	shld   edx,eax,cl
  421c46:	shl    eax,cl
  421c48:	ret    
  421c49:	and    DWORD PTR ds:0x42293e,0x7607
  421c53:	mov    edx,eax
  421c55:	sub    DWORD PTR ds:0x4228fa,0x422952
  421c5f:	xor    eax,eax
  421c61:	and    cl,0x1f
  421c64:	mov    DWORD PTR ds:0x42295e,0x73ce
  421c6e:	shl    edx,cl
  421c70:	ret    
  421c71:	xor    eax,eax
  421c73:	xor    edx,edx
  421c75:	ret    
