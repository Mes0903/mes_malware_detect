
cc25b08c54238d5d7c04eddeda156fcc41447afbf89230ed448dfe2ec1f04d3e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	jne    0x83c3cd12
  4018dd:	add    DWORD PTR [ebx-0x7c7ca1b5],0x28
  4018e4:	xor    DWORD PTR [esi],esp
  4018e6:	cmp    al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	pop    edi
  4018f0:	jno    0x401962
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	sbb    DWORD PTR [ecx+0x3c],ebx
  401989:	(bad)  
  40198a:	(bad)  
  40198b:	push   ss
  40198c:	pop    edi
  40198d:	pop    ebx
  40198e:	lock dec edi
  401990:	ins    DWORD PTR es:[edi],dx
  401991:	mov    bl,0x44
  401993:	sahf   
  401994:	jns    0x401997
  401996:	jnp    0x401a00
  401998:	scas   al,BYTE PTR es:[edi]
  401999:	(bad)  
  40199a:	int    0xa1
  40199c:	inc    esi
  40199d:	div    BYTE PTR [edx]
  40199f:	inc    esp
  4019a0:	add    esi,eax
  4019a2:	fs pop ss
  4019a4:	pop    edi
  4019a5:	push   eax
  4019a6:	stos   DWORD PTR es:[edi],eax
  4019a7:	jg     0x401959
  4019a9:	sub    ebp,DWORD PTR [ebp+0x7d]
  4019ac:	mov    ah,0xf2
  4019ae:	(bad)  
  4019af:	int    0x2e
  4019b1:	inc    edx
  4019b2:	adc    esp,DWORD PTR [edi]
  4019b4:	jb     0x4019f8
  4019b6:	pop    eax
  4019b7:	bndldx bnd2,[edx+0x2b32714f]
  4019be:	push   esi
  4019bf:	cmc    
  4019c0:	jb     0x40199e
  4019c2:	shr    DWORD PTR [edi],1
  4019c4:	sub    DWORD PTR [edx+esi*1],ebx
  4019c7:	inc    esp
  4019c8:	js     0x401a1c
  4019ca:	into   
  4019cb:	jbe    0x401972
  4019cd:	mov    DWORD PTR [edx-0x3b375fcd],esp
  4019d3:	lock or al,0x21
  4019d6:	add    DWORD PTR [esi-0x46],ebx
  4019d9:	mov    ah,BYTE PTR [ecx+0x73]
  4019dc:	xchg   edi,eax
  4019dd:	push   ecx
  4019de:	dec    ecx
  4019df:	fndisi(8087 only) 
  4019e1:	sub    ebx,ebx
  4019e3:	push   ds
  4019e4:	inc    edx
  4019e5:	jmp    0xc914:0x3cda7e94
  4019ec:	xchg   esp,eax
  4019ed:	cmp    eax,edx
  4019ef:	xchg   ebp,eax
  4019f0:	jno    0x4019bd
  4019f2:	arpl   WORD PTR [ecx],dx
  4019f4:	mov    dl,0x31
  4019f6:	sbb    DWORD PTR [edx-0x54d0ad7],edx
  4019fc:	imul   edi,DWORD PTR [esi+0x67e03569],0x76
  401a03:	xchg   esi,eax
  401a04:	fidivr DWORD PTR [ebp+0x75]
  401a07:	jg     0x401a7c
  401a09:	cmp    DWORD PTR [ebx+0x1f],esp
  401a0c:	inc    ebp
  401a0d:	(bad)  
  401a0e:	push   ebx
  401a0f:	jmp    0x4019f7
  401a11:	mov    esi,DWORD PTR [ebx]
  401a13:	scas   eax,DWORD PTR es:[edi]
  401a14:	adc    al,0x3b
  401a16:	jae    0x4019ba
  401a18:	scas   al,BYTE PTR es:[edi]
  401a19:	mov    eax,ds:0x144b2914
  401a1e:	and    al,bl
  401a20:	inc    edi
  401a21:	sub    al,0x9c
  401a23:	push   cs
  401a24:	push   ebp
  401a25:	sbb    BYTE PTR [edi],ah
  401a27:	push   cs
  401a28:	sub    ecx,DWORD PTR [ebx+0x10]
  401a2b:	js     0x401aa3
  401a2d:	xor    esp,edi
  401a2f:	icebp  
  401a30:	nop
  401a31:	cmp    BYTE PTR [edi],dh
  401a33:	mov    cl,0xe
  401a35:	sub    al,0xfc
  401a37:	stos   BYTE PTR es:[edi],al
  401a38:	(bad)  
  401a39:	jecxz  0x401a3f
  401a3b:	sub    al,0x83
  401a3d:	inc    edx
  401a3e:	in     eax,dx
  401a3f:	mov    gs,WORD PTR [ecx+esi*4]
  401a42:	mov    ebx,0x88f2c78c
  401a47:	cmp    eax,0x935d437b
  401a4c:	or     BYTE PTR ds:0x6e766b7f,0x41
  401a53:	test   eax,0x599af019
  401a58:	arpl   dx,cx
  401a5a:	mov    esi,0xa99d2c0b
  401a5f:	lea    edx,[esi-0x16b1b21f]
  401a65:	pop    ds
  401a66:	dec    ebx
  401a67:	inc    edx
  401a68:	rcr    bl,cl
  401a6a:	and    DWORD PTR ds:[edx-0x27],0x60
  401a6f:	in     al,0x71
  401a71:	shl    al,0xbf
  401a74:	retf   0x2c33
  401a77:	cmp    BYTE PTR [ebp-0x27f01bb3],0x45
  401a7e:	and    al,0x31
  401a80:	or     cl,BYTE PTR [edx-0x2f]
  401a83:	pushf  
  401a84:	inc    edx
  401a85:	push   cs
  401a86:	fmul   DWORD PTR [ecx]
  401a88:	ja     0x401abc
  401a8a:	push   edi
  401a8b:	rcr    BYTE PTR [edx],1
  401a8d:	das    
  401a8e:	aas    
  401a8f:	cli    
  401a90:	icebp  
  401a91:	fst    QWORD PTR [eax]
  401a93:	call   0xd6f10336
  401a98:	adc    BYTE PTR [edx+0x405e7ec5],cl
  401a9e:	inc    edi
  401a9f:	int    0x48
  401aa1:	fs test eax,0x4b096b1e
  401aa7:	ins    DWORD PTR es:[edi],dx
  401aa8:	and    BYTE PTR [ebx+0x21b74065],cl
  401aae:	mov    al,0x4f
  401ab0:	adc    edx,ecx
  401ab2:	in     al,dx
  401ab3:	out    dx,eax
  401ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab5:	fwait
  401ab6:	aam    0xab
  401ab8:	fdivr  st(6),st
  401aba:	leave  
  401abb:	sub    BYTE PTR [edi],dl
  401abd:	repnz lods al,BYTE PTR ds:[esi]
  401abf:	push   edx
  401ac0:	add    ebp,DWORD PTR [eax+0x7e]
  401ac3:	sbb    esi,eax
  401ac5:	shl    DWORD PTR [ecx],0x9b
  401ac8:	(bad)  
  401aca:	loope  0x401b12
  401acc:	pop    edi
  401acd:	lock sub DWORD PTR [esi-0x28],0xa7af1a91
  401ad5:	sbb    al,0xe8
  401ad7:	cwde   
  401ad8:	ins    DWORD PTR es:[edi],dx
  401ad9:	addr16 test eax,0xc52bab37
  401adf:	addr16 in al,dx
  401ae1:	and    eax,0xe7e661d7
  401ae6:	jmp    FWORD PTR [eax]
  401ae8:	cdq    
  401ae9:	hlt    
  401aea:	es retf 0x5eb2
  401aee:	test   al,0xbb
  401af0:	ins    BYTE PTR es:[edi],dx
  401af1:	imul   edx,DWORD PTR [edi+ebx*8-0x4dd1ba57],0xffffff92
  401af9:	scas   al,BYTE PTR es:[edi]
  401afa:	rcr    ah,1
  401afc:	(bad)
  401aff:	ror    BYTE PTR [ecx+0x6286eaa5],cl
  401b05:	push   ecx
  401b06:	mov    edx,0x1e743bc8
  401b0b:	rol    DWORD PTR [eax+0x5b056563],0xb4
  401b12:	sub    edi,ebx
  401b14:	cmp    edx,0xffffffb0
  401b17:	mov    bl,0x8f
  401b19:	popa   
  401b1a:	scas   eax,DWORD PTR es:[edi]
  401b1b:	xchg   edi,eax
  401b1c:	xor    al,0x99
  401b1e:	pop    ecx
  401b1f:	dec    eax
  401b20:	cmp    eax,0xed4655dd
  401b25:	cmc    
  401b26:	pop    es
  401b27:	fmul   st,st(1)
  401b29:	mov    ecx,0x42329c5f
  401b2e:	sbb    cl,BYTE PTR es:[eax]
  401b31:	inc    ebp
  401b32:	mov    ebx,0xae6769fe
  401b37:	scas   al,BYTE PTR es:[edi]
  401b38:	clc    
  401b39:	inc    edx
  401b3a:	xor    DWORD PTR [edi-0x4d],ecx
  401b3d:	xlat   BYTE PTR ds:[ebx]
  401b3e:	addr16 jb 0x401bb3
  401b41:	push   esi
  401b42:	fisubr WORD PTR [ebp+0x7b]
  401b46:	or     BYTE PTR [esi+0xe],cl
  401b49:	fisttp DWORD PTR [edi+0x2]
  401b4c:	xor    ebx,DWORD PTR [ebp-0x52ef6d3a]
  401b52:	outs   dx,DWORD PTR ds:[esi]
  401b53:	xor    BYTE PTR [edi],cl
  401b55:	push   esp
  401b56:	xchg   ecx,eax
  401b57:	and    al,0xf
  401b59:	jecxz  0x401bbc
  401b5b:	(bad)  [esi+0x4e]
  401b5e:	and    eax,0xae9f996f
  401b63:	int    0x0
  401b65:	add    al,0x71
  401b67:	pop    edi
  401b68:	stos   BYTE PTR es:[edi],al
  401b69:	retf   
  401b6a:	jle    0x401b6e
  401b6c:	stos   BYTE PTR es:[edi],al
  401b6d:	xor    BYTE PTR [edx],al
  401b6f:	push   es
  401b70:	les    ecx,FWORD PTR [edx]
  401b72:	rcr    bh,0xe1
  401b75:	mov    BYTE PTR [esp+ebx*1-0x59f53b84],ch
  401b7c:	ror    BYTE PTR [ebx],0x1d
  401b7f:	mov    ss,ebx
  401b81:	jo     0x401bdc
  401b83:	in     eax,0x5e
  401b85:	xchg   esp,eax
  401b86:	lea    edx,[edi+0x315cf4aa]
  401b8c:	in     al,dx
  401b8d:	outs   dx,BYTE PTR ds:[esi]
  401b8e:	jmp    0xb1c61c99
  401b93:	cmp    al,0x80
  401b95:	mov    eax,0xa7033742
  401b9a:	sbb    DWORD PTR ds:0x4ff88372,ebx
  401ba0:	popa   
  401ba1:	jno    0x401b4d
  401ba3:	aam    0xd
  401ba5:	pop    esi
  401ba6:	push   cs
  401ba7:	popf   
  401ba8:	mov    ebx,0xeb2733f3
  401bad:	pop    ecx
  401bae:	sub    DWORD PTR [eax-0x75],0x78cc6657
  401bb5:	mov    eax,ds:0x554ca4c3
  401bba:	sub    BYTE PTR [esi+eiz*8],dl
  401bbd:	(bad)  
  401bbe:	std    
  401bbf:	je     0x401c2d
  401bc1:	sub    al,0x1a
  401bc3:	xlat   BYTE PTR ds:[ebx]
  401bc4:	push   ebp
  401bc5:	mov    bl,0x50
  401bc7:	inc    esp
  401bc8:	add    al,0xf9
  401bca:	jns    0x401bd7
  401bcc:	or     eax,0x4d8dcfe7
  401bd1:	jg     0x401bd5
  401bd3:	fsubrp st(5),st
  401bd5:	adc    DWORD PTR [eax+0x17],0x7d
  401bd9:	xor    bl,BYTE PTR [ebx]
  401bdb:	mov    ?,WORD PTR [ecx]
  401bdd:	add    bl,dl
  401bdf:	fcomp  QWORD PTR [esi]
  401be1:	xchg   DWORD PTR gs:[edx],ebx
  401be4:	add    BYTE PTR [ebx],cl
  401be6:	xchg   DWORD PTR [ebx+0x3e],edi
  401be9:	scas   eax,DWORD PTR es:[edi]
  401bea:	mov    ecx,0x2324f6d1
  401bef:	sub    al,0xf4
  401bf1:	lock cdq 
  401bf3:	ds push 0xffffffa5
  401bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf7:	call   0x1c86489e
  401bfc:	cmp    ah,BYTE PTR [ebp+0x29]
  401bff:	and    DWORD PTR [ebx-0x5b],edx
  401c02:	sbb    al,0xc6
  401c04:	fild   WORD PTR [edi-0x20]
  401c07:	aas    
  401c08:	or     eax,0x56bcab91
  401c0d:	jb     0x401ba0
  401c0f:	dec    ebx
  401c10:	push   esp
  401c11:	add    al,0x5c
  401c13:	adc    al,0xe6
  401c15:	xchg   esi,eax
  401c16:	or     al,0xca
  401c18:	retf   0xdb43
  401c1b:	enter  0x9f61,0xa0
  401c1f:	mov    ds:0xc6fba1da,eax
  401c24:	jne    0x401bfb
  401c26:	cmp    DWORD PTR [edx-0x7779c4fd],0x31
  401c2d:	fwait
  401c2e:	sub    al,0x8e
  401c30:	imul   cx,WORD PTR [edx-0x3f1fd9ee],0xffb3
  401c38:	fcmovnb st,st(7)
  401c3a:	lahf   
  401c3b:	inc    esi
  401c3c:	je     0x401bd8
  401c3e:	shl    BYTE PTR fs:[ebx-0x40f1e5f4],0x1
  401c46:	into   
  401c47:	test   eax,0x694556d9
  401c4c:	pop    ds
  401c4d:	pop    ds
  401c4e:	outs   dx,DWORD PTR ds:[esi]
  401c4f:	mov    al,0xed
  401c51:	mov    ecx,0xd9bc8dcc
  401c56:	xchg   ecx,eax
  401c57:	sub    BYTE PTR [esi],al
  401c59:	dec    esi
  401c5a:	mov    ebx,0xd5733e98
  401c5f:	ret    
  401c60:	icebp  
  401c61:	imul   ecx,DWORD PTR gs:[edi-0x67],0xdd5c5433
  401c69:	imul   BYTE PTR [esi+ebp*2-0x64]
  401c6d:	ror    BYTE PTR [eax+0x37ea5675],1
  401c73:	loope  0x401cb3
  401c75:	push   ss
  401c76:	pop    ds
  401c77:	cdq    
  401c78:	xor    ch,BYTE PTR [ecx+0x6d]
  401c7b:	inc    ecx
  401c7c:	aas    
  401c7d:	jp     0x401c77
  401c7f:	or     dh,BYTE PTR [edx-0x78]
  401c82:	jo     0x401c9f
  401c84:	ficom  DWORD PTR [ebx]
  401c86:	clc    
  401c87:	push   eax
  401c88:	(bad)  
  401c89:	ja     0x401c20
  401c8b:	clc    
  401c8c:	lds    ebp,FWORD PTR [ecx-0x43e86e51]
  401c92:	aam    0x7c
  401c94:	sahf   
  401c95:	or     eax,ebx
  401c97:	enter  0x3d91,0x4
  401c9b:	dec    ebx
  401c9c:	fs mov cs,esi
  401c9f:	fwait
  401ca0:	dec    ebp
  401ca1:	mov    cl,0xbc
  401ca3:	dec    ebp
  401ca4:	ret    0xf69d
  401ca7:	jae    0x401c81
  401ca9:	push   cs
  401caa:	push   eax
  401cab:	gs pop ss
  401cad:	cli    
  401cae:	out    dx,eax
  401caf:	enter  0x6509,0xf4
  401cb3:	cmp    esi,DWORD PTR [esi]
  401cb5:	retf   
  401cb6:	cmp    al,0x89
  401cb8:	outs   dx,BYTE PTR ds:[esi]
  401cb9:	mov    DWORD PTR [esi+0x723a841],esp
  401cbf:	fs call 0x5908:0x5ed50945
  401cc7:	aam    0xbf
  401cc9:	js     0x401c95
  401ccb:	pusha  
  401ccc:	mov    DWORD PTR [esi],ebx
  401cce:	lahf   
  401ccf:	mov    ebp,0xf7f303ad
  401cd4:	loope  0x401c9f
  401cd6:	cmp    al,0xb8
  401cd8:	mov    ebx,0xa3e804dc
  401cdd:	xchg   edx,eax
  401cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cdf:	xchg   ebp,eax
  401ce0:	(bad)  
  401ce1:	cld    
  401ce2:	sbb    BYTE PTR [eax],cl
  401ce4:	(bad)  
  401ce5:	xor    ecx,edx
  401ce7:	or     BYTE PTR ds:0xcd9025eb,ch
  401ced:	jg     0x401d02
  401cef:	hlt    
  401cf0:	inc    esp
  401cf1:	test   BYTE PTR [edx-0x1ea01dfb],ch
  401cf7:	(bad)  
  401cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cfa:	lods   al,BYTE PTR ds:[esi]
  401cfb:	int3   
  401cfc:	iret   
  401cfd:	adc    edx,eax
  401cff:	stos   DWORD PTR es:[edi],eax
  401d00:	xor    DWORD PTR [edx+0x3c],0xe3c73fee
  401d07:	out    0x9,al
  401d09:	push   ebp
  401d0a:	add    eax,0x4d6b5c01
  401d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d10:	retf   0x3693
  401d13:	pop    es
  401d14:	lock jbe 0x401d43
  401d17:	sbb    al,BYTE PTR [esp+ebp*1+0x39]
  401d1b:	jl     0x401ca3
  401d1d:	pop    esp
  401d1e:	mov    edi,cs
  401d20:	push   ds
  401d21:	je     0x401d44
  401d23:	mov    ah,0x99
  401d25:	adc    BYTE PTR [edx],al
  401d27:	cdq    
  401d28:	das    
  401d29:	scas   eax,DWORD PTR es:[edi]
  401d2a:	xchg   DWORD PTR [edi],edx
  401d2c:	ja     0x401d28
  401d2e:	xor    eax,0x334559ec
  401d33:	daa    
  401d34:	sbb    al,0x43
  401d36:	xchg   ecx,eax
  401d37:	in     al,0x52
  401d39:	mov    dl,0xf3
  401d3b:	in     al,dx
  401d3c:	pop    ebp
  401d3d:	lea    ebx,[edx+ebx*4-0x78]
  401d41:	or     al,0xc5
  401d43:	push   ss
  401d44:	hlt    
  401d45:	xchg   edi,eax
  401d46:	mov    ebp,0x2562b382
  401d4b:	fisubr DWORD PTR [ebp-0x6753f709]
  401d51:	loope  0x401d8e
  401d53:	dec    esi
  401d54:	mov    ebp,0xd33b4e7d
  401d59:	sub    DWORD PTR [edx],ecx
  401d5b:	or     eax,0x11aebb0d
  401d60:	scas   eax,DWORD PTR es:[edi]
  401d61:	retf   0x8ca5
  401d64:	mov    DWORD PTR [eax+edi*2+0x53428e5a],eax
  401d6b:	sub    BYTE PTR [edx+0x5a562064],ch
  401d71:	xlat   BYTE PTR ds:[ebx]
  401d72:	iret   
  401d73:	rcl    BYTE PTR ds:0x9ee93838,1
  401d79:	(bad)  
  401d7a:	mov    ebp,0x795d5361
  401d7f:	push   0x76
  401d81:	les    esi,FWORD PTR [esp+ebp*8]
  401d84:	outs   dx,DWORD PTR ds:[esi]
  401d85:	cmp    eax,0x726936c0
  401d8a:	lds    eax,FWORD PTR [esi-0x40]
  401d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8e:	or     eax,0xaa3086e8
  401d93:	push   ds
  401d94:	popa   
  401d95:	je     0x401dd0
  401d97:	stos   BYTE PTR es:[edi],al
  401d98:	jg     0x401db0
  401d9a:	je     0x401d30
  401d9c:	inc    eax
  401d9d:	jne    0x401df3
  401d9f:	adc    dh,ah
  401da1:	div    BYTE PTR [esp+eiz*4+0xc238b24]
  401da8:	int    0x81
  401daa:	out    0xf1,eax
  401dac:	(bad)  
  401dad:	cmp    eax,0xdf3d6068
  401db2:	sub    DWORD PTR [ecx+0x5d],0x7f353b16
  401db9:	mov    ecx,0x3c6023aa
  401dbe:	test   eax,0x55974b1d
  401dc3:	or     ch,bl
  401dc5:	pop    edi
  401dc6:	in     al,dx
  401dc7:	rep stos DWORD PTR es:[edi],eax
  401dc9:	pusha  
  401dca:	out    0x78,al
  401dcc:	mov    esp,0x6273c67a
  401dd1:	jns    0x401d6d
  401dd3:	xor    al,0xff
  401dd5:	pushf  
  401dd6:	mov    dl,0xb7
  401dd8:	pop    ecx
  401dd9:	and    al,0x84
  401ddb:	add    eax,0xa659e708
  401de0:	fstp   TBYTE PTR es:[ebx]
  401de3:	(bad)  
  401de5:	push   ebx
  401de6:	mov    al,BYTE PTR [edi*8+0x1093cf70]
  401ded:	dec    esi
  401dee:	es inc edx
  401df0:	ins    DWORD PTR es:[edi],dx
  401df1:	xchg   ebx,eax
  401df2:	mov    ds:0xa3df8adb,al
  401df7:	push   edi
  401df8:	imul   ebp,DWORD PTR [edx-0x42d9db7a],0x20
  401dff:	xchg   DWORD PTR [ebp+0x6b],esp
  401e02:	fidivr WORD PTR [edi+edi*2+0xc520136]
  401e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0a:	je     0x401e4d
  401e0c:	cmp    bh,0x7d
  401e0f:	inc    ebp
  401e10:	cmp    edx,0xffffffc9
  401e13:	and    BYTE PTR [ecx-0x5dfe38c6],dl
  401e19:	std    
  401e1a:	(bad)  
  401e1b:	fbstp  TBYTE PTR [ebx+0xea77949]
  401e21:	pop    esi
  401e22:	lds    ebx,FWORD PTR [edx-0x10]
  401e25:	in     al,dx
  401e26:	outs   dx,BYTE PTR ds:[esi]
  401e27:	adc    BYTE PTR [ebp-0x44],0xec
  401e2b:	jp     0x401e92
  401e2d:	loope  0x401db5
  401e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e30:	fld    st(4)
  401e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e33:	and    al,0xeb
  401e35:	lods   eax,DWORD PTR ds:[esi]
  401e36:	inc    ebx
  401e37:	fsubr  DWORD PTR gs:[ecx]
  401e3a:	cmp    DWORD PTR [ebx+edx*1],esi
  401e3d:	and    al,0xdf
  401e3f:	cmp    ecx,ebx
  401e41:	imul   esi,eax,0xfda4d547
  401e47:	loop   0x401e1e
  401e49:	pop    ebx
  401e4a:	fimul  WORD PTR [ecx]
  401e4c:	lods   eax,DWORD PTR ds:[esi]
  401e4d:	imul   esi,DWORD PTR [edx+0x57],0x116f8229
  401e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e55:	outs   dx,BYTE PTR ds:[esi]
  401e56:	jg     0x401e9e
  401e58:	sbb    ah,BYTE PTR [eax]
  401e5a:	ja     0x401ec5
  401e5c:	inc    ebp
  401e5d:	jae    0x401e20
  401e5f:	ret    
  401e60:	mov    dl,0x25
  401e62:	sti    
  401e63:	and    eax,0xf4e4613
  401e68:	mov    bh,dh
  401e6a:	cs popf 
  401e6c:	mov    BYTE PTR fs:[ecx+0x2a],ah
  401e70:	out    0x7f,eax
  401e72:	fadd   DWORD PTR [eax]
  401e74:	in     al,dx
  401e75:	sub    DWORD PTR [ebp+0x5c8c2f2d],ebp
  401e7b:	mov    ds:0x57a683bc,al
  401e80:	(bad)  
  401e81:	fisubr DWORD PTR [eax-0x14]
  401e84:	cdq    
  401e85:	fs mov ch,0xf8
  401e88:	out    0xdc,al
  401e8a:	push   ebx
  401e8b:	pusha  
  401e8c:	pop    ebp
  401e8d:	lds    edi,FWORD PTR [ebx-0x256f0837]
  401e93:	outs   dx,BYTE PTR ds:[esi]
  401e94:	dec    esi
  401e95:	xor    al,0x15
  401e97:	outs   dx,DWORD PTR gs:[esi]
  401e99:	enter  0x9fbe,0x97
  401e9d:	jle    0x401f12
  401e9f:	mov    eax,ds:0x8e9c71bf
  401ea4:	out    dx,eax
  401ea5:	repz pop esp
  401ea7:	int    0x7c
  401ea9:	xor    DWORD PTR [ebx+eax*4-0x6bad8708],esp
  401eb0:	aas    
  401eb1:	mov    bl,0x56
  401eb3:	out    dx,eax
  401eb4:	lahf   
  401eb5:	push   es
  401eb6:	adc    bl,dl
  401eb8:	jle    0x401ef8
  401eba:	cmc    
  401ebb:	(bad)  
  401ebc:	(bad)  
  401ebd:	jae    0x401e5d
  401ebf:	or     al,0x92
  401ec1:	sbb    ebp,DWORD PTR [edx-0x49ea65ff]
  401ec7:	sti    
  401ec8:	pop    ecx
  401ec9:	inc    edx
  401eca:	xor    bh,bh
  401ecc:	mov    WORD PTR [ecx],fs
  401ece:	sbb    cl,BYTE PTR [edx]
  401ed0:	cmp    al,0xd4
  401ed2:	cld    
  401ed3:	sub    dl,ch
  401ed5:	add    ebp,DWORD PTR [esp+eax*2]
  401ed8:	out    dx,eax
  401ed9:	lods   eax,DWORD PTR ds:[esi]
  401eda:	cli    
  401edb:	test   edi,esi
  401edd:	iret   
  401ede:	sbb    ch,dh
  401ee0:	fbld   TBYTE PTR [ecx+0x1682ac36]
  401ee6:	sbb    BYTE PTR [eax],al
  401ee8:	data16 test al,0xd
  401eeb:	dec    edi
  401eec:	pop    es
  401eed:	int3   
  401eee:	adc    DWORD PTR [eax+eiz*8],esp
  401ef1:	dec    edx
  401ef2:	mov    ?,WORD PTR [edi+0x68dbe6de]
  401ef8:	xchg   esi,eax
  401ef9:	data16 jne 0x401f23
  401efc:	sub    BYTE PTR ds:0xa5ffec48,dl
  401f02:	mov    esp,0x4f4346
  401f07:	sti    
  401f08:	or     ah,cl
  401f0a:	or     DWORD PTR [edx+esi*8],esp
  401f0d:	lock mov ch,0x6a
  401f10:	dec    ebx
  401f11:	push   cs
  401f12:	push   es
  401f13:	scas   eax,DWORD PTR es:[edi]
  401f14:	mov    al,0xc1
  401f16:	das    
  401f17:	dec    ecx
  401f18:	and    eax,0x3f5bbf64
  401f1d:	in     eax,dx
  401f1e:	sbb    bl,BYTE PTR ds:0x45f4564f
  401f24:	inc    ebx
  401f25:	adc    eax,0xcf6106d7
  401f2a:	and    bl,BYTE PTR [ecx]
  401f2c:	cmp    al,0xb7
  401f2e:	push   ds
  401f2f:	test   BYTE PTR [ecx+0x52],ah
  401f32:	xchg   edx,eax
  401f33:	(bad)  
  401f34:	mov    ah,0xcf
  401f36:	shr    BYTE PTR [edi+0x6],1
  401f39:	or     eax,edi
  401f3b:	fdiv   st(2),st
  401f3d:	mov    dh,bh
  401f3f:	test   dh,dh
  401f41:	dec    esp
  401f42:	cdq    
  401f43:	push   es
  401f44:	inc    ebp
  401f45:	add    DWORD PTR [ecx+0x7d1251c6],eax
  401f4b:	pop    esi
  401f4c:	jnp    0x401f71
  401f4e:	inc    edx
  401f4f:	xor    ch,ch
  401f51:	je     0x401fa5
  401f53:	and    eax,0x307230b8
  401f58:	pusha  
  401f59:	lods   eax,DWORD PTR ds:[esi]
  401f5a:	popf   
  401f5b:	sbb    DWORD PTR [ebx-0x2bef9506],edx
  401f61:	jb     0x401fd7
  401f63:	pop    es
  401f64:	sub    esi,ebx
  401f66:	loop   0x401fb9
  401f68:	sti    
  401f69:	inc    ebx
  401f6a:	dec    edx
  401f6b:	pop    ss
  401f6c:	sti    
  401f6d:	cdq    
  401f6e:	mov    ah,0x44
  401f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f71:	fmul   QWORD PTR [eax-0x2f30c864]
  401f77:	fidivr WORD PTR [edi]
  401f79:	mov    ah,0x79
  401f7b:	cmc    
  401f7c:	or     DWORD PTR [esi+esi*4-0x42],ecx
  401f80:	clc    
  401f81:	mov    ecx,0xa8935731
  401f86:	jg     0x401f09
  401f88:	mov    bl,0x63
  401f8a:	cmp    ah,0x7c
  401f8d:	aad    0xe1
  401f8f:	in     al,dx
  401f90:	lods   al,BYTE PTR ds:[esi]
  401f91:	pushf  
  401f92:	dec    edx
  401f93:	xor    eax,0x15e58d43
  401f98:	cmp    BYTE PTR [ebx+0x16],dh
  401f9b:	clc    
  401f9c:	lahf   
  401f9d:	jg     0x402015
  401f9f:	cmp    cl,dl
  401fa1:	push   ds
  401fa2:	in     eax,dx
  401fa3:	loope  0x401f89
  401fa5:	jae    0x401f6b
  401fa7:	out    0x79,eax
  401fa9:	mov    esi,0x330651e7
  401fae:	pop    ds
  401faf:	push   ebp
  401fb0:	(bad)  
  401fb1:	jecxz  0x40201d
  401fb3:	push   ds
  401fb4:	jns    0x401fe3
  401fb6:	outs   dx,BYTE PTR ds:[esi]
  401fb7:	add    esp,DWORD PTR [edx+0x70f6295b]
  401fbd:	jbe    0x401f64
  401fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fc0:	lock xor BYTE PTR [esi],0x21
  401fc4:	es sbb al,0x6e
  401fc7:	inc    ebp
  401fc8:	enter  0x9d99,0x7a
  401fcc:	sldt   edi
  401fcf:	mov    ds,WORD PTR [edx+0x24]
  401fd2:	sahf   
  401fd3:	mov    dh,0x34
  401fd5:	push   edx
  401fd6:	xor    dh,dl
  401fd8:	(bad)  
  401fd9:	mov    esi,0x51cfc43f
  401fde:	adc    al,0xa2
  401fe0:	mov    ds:0x1ec0fa5b,eax
  401fe5:	fstp   DWORD PTR [ecx-0x2aa81167]
  401feb:	cmovbe ebp,DWORD PTR [ebp+0x574430c9]
  401ff2:	mov    ebp,0x88e9a857
  401ff7:	outs   dx,DWORD PTR ds:[esi]
  401ff8:	popa   
  401ff9:	cdq    
  401ffa:	mov    ebx,0xab69cb97
  401fff:	addr16 sar esp,1
  402002:	inc    ecx
  402003:	dec    esp
  402004:	retf   0x4bc9
  402007:	int3   
  402008:	ins    BYTE PTR es:[edi],dx
  402009:	xor    BYTE PTR [eax-0x7c],dl
  40200c:	add    DWORD PTR [ecx],0xffffffe3
  40200f:	fs add eax,0x3c75fe53
  402015:	adc    eax,0x78679b8
  40201a:	push   esi
  40201b:	sbb    edx,edi
  40201d:	mov    edi,0xbbff1a7d
  402022:	push   ebx
  402023:	or     esi,eax
  402025:	sbb    al,0xf1
  402027:	das    
  402028:	xchg   edi,eax
  402029:	or     ebp,edi
  40202b:	mov    eax,0xc9decedb
  402030:	sub    esi,ebx
  402032:	push   0x54d38c0
  402037:	jae    0x401fe6
  402039:	imul   ebx,DWORD PTR [ecx],0xfffffff6
  40203c:	cld    
  40203d:	pop    es
  40203e:	das    
  40203f:	popf   
  402040:	and    cl,BYTE PTR ds:0x62628e52
  402046:	js     0x402049
  402048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402049:	inc    ebp
  40204a:	sti    
  40204b:	mov    dh,BYTE PTR [edi]
  40204d:	daa    
  40204e:	or     bl,dh
  402050:	scas   al,BYTE PTR es:[edi]
  402051:	pop    esi
  402052:	ja     0x40201d
  402054:	sbb    edx,DWORD PTR [ebx-0x734bd23]
  40205a:	add    edx,DWORD PTR [eax+0x39]
  40205d:	push   edx
  40205e:	mov    al,ds:0xe83162eb
  402063:	dec    esi
  402064:	in     al,0xa0
  402066:	sbb    al,0x86
  402068:	hlt    
  402069:	(bad)  
  40206a:	or     al,0x45
  40206c:	cmp    ch,al
  40206e:	out    dx,al
  40206f:	stc    
  402070:	and    edx,DWORD PTR [ebp+0x62]
  402073:	inc    ecx
  402074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402075:	mov    eax,ds:0x5677e1de
  40207a:	fndisi(8087 only) 
  40207c:	outs   dx,BYTE PTR ds:[esi]
  40207d:	sub    al,0x8b
  40207f:	sub    ch,BYTE PTR [eax+ebp*8]
  402082:	xor    esp,DWORD PTR [ebx-0x20]
  402085:	mov    ds:0x28e04b90,eax
  40208a:	cmp    ebx,ebp
  40208c:	or     BYTE PTR [esi-0x66],bl
  40208f:	gs pop esi
  402091:	xor    edx,DWORD PTR [esi-0x27]
  402094:	addr16 in al,dx
  402096:	imul   BYTE PTR [edi]
  402098:	cmp    edi,DWORD PTR [edx]
  40209a:	mov    ecx,0xab038c9a
  40209f:	cmp    eax,0x509e4c6a
  4020a4:	sbb    DWORD PTR [ebp-0x5243aecf],0xfffffff7
  4020ab:	mov    edx,0x3c7cc1a1
  4020b0:	mov    esp,0xf83f251a
  4020b5:	push   es
  4020b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b7:	sahf   
  4020b8:	sbb    ebx,edx
  4020ba:	or     DWORD PTR [eax+0x244eaa6c],edi
  4020c0:	adc    BYTE PTR [ebp-0xe],al
  4020c3:	pop    es
  4020c4:	and    dh,BYTE PTR [ebx-0x21]
  4020c7:	ja     0x402069
  4020c9:	xor    DWORD PTR [esp+edx*8+0x3c],edi
  4020cd:	js     0x4020c6
  4020cf:	cmp    eax,0xbce852cc
  4020d4:	add    ebp,DWORD PTR [ebp-0x15]
  4020d7:	mov    eax,0x3816f087
  4020dc:	ja     0x40210f
  4020de:	sahf   
  4020df:	add    dh,ch
  4020e1:	(bad)  [esp+eax*1+0x26]
  4020e5:	xchg   edx,eax
  4020e6:	and    eax,0x1e08eb25
  4020eb:	out    dx,al
  4020ec:	push   0x51306328
  4020f1:	mov    ebp,0x5a52c58d
  4020f6:	imul   esp,DWORD PTR es:[edi],0xf6a7a3c2
  4020fd:	imul   esp,DWORD PTR [edi+ebx*2],0x74af3a4f
  402104:	loope  0x402171
  402106:	or     DWORD PTR [bx+di],edx
  402109:	outs   dx,BYTE PTR ds:[esi]
  40210a:	shl    BYTE PTR [ecx+ebx*2+0x2d],1
  40210e:	inc    esi
  40210f:	int3   
  402110:	pushf  
  402111:	push   0x73cdf9bb
  402116:	repz dec esp
  402118:	outs   dx,DWORD PTR ds:[esi]
  402119:	test   DWORD PTR [esi+0x6704df0f],eax
  40211f:	pop    ds
  402120:	mov    dl,0xf2
  402122:	xor    ebx,ebp
  402124:	or     BYTE PTR [eax],dl
  402126:	test   al,0x47
  402128:	cdq    
  402129:	lods   eax,DWORD PTR ds:[esi]
  40212a:	inc    ebp
  40212b:	mov    esi,DWORD PTR [ebx+0x5a]
  40212e:	mov    BYTE PTR [edx+0x36],bl
  402131:	xor    eax,0x70efa16b
  402136:	(bad)  
  402137:	xchg   ebp,eax
  402138:	xor    eax,0x2cb371ad
  40213d:	rcl    BYTE PTR ss:[eax+0x31],1
  402141:	popf   
  402142:	jge    0x402125
  402144:	int3   
  402145:	in     eax,dx
  402146:	xchg   edi,eax
  402147:	imul   eax,DWORD PTR [ebp+0x4b],0xffffff9a
  40214b:	(bad)  
  40214c:	aam    0x18
  40214e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40214f:	jle    0x4021c1
  402151:	dec    BYTE PTR [ecx+0x43]
  402154:	xchg   edi,eax
  402155:	mov    al,0xb4
  402157:	mov    ds:0x8763bfe2,al
  40215c:	mov    ds:0x9617fc38,eax
  402161:	and    al,0x78
  402163:	je     0x40212f
  402165:	mov    edx,0x5b60a4b7
  40216a:	lds    esp,FWORD PTR [edi+0x497efe98]
  402170:	mov    ds:0x6d599961,al
  402175:	enter  0xaf0a,0x9c
  402179:	mov    ch,0xa0
  40217b:	fsubr  st,st(0)
  40217d:	fwait
  40217e:	(bad)  
  40217f:	out    0xfa,eax
  402181:	xchg   ecx,eax
  402182:	xchg   DWORD PTR [ebp+0x27ba9486],esp
  402188:	inc    esp
  402189:	pushf  
  40218a:	(bad)  
  40218b:	int    0x5e
  40218d:	out    dx,eax
  40218e:	loopne 0x402119
  402190:	push   cs
  402191:	push   0x56fd241e
  402196:	aaa    
  402197:	adc    edi,DWORD PTR [esi]
  402199:	jp     0x40211f
  40219b:	fstp   DWORD PTR [bx+si-0x1046]
  4021a0:	sar    BYTE PTR [edi-0xb],cl
  4021a3:	or     DWORD PTR [esi+0x27],esp
  4021a6:	cwde   
  4021a7:	jbe    0x402159
  4021a9:	sub    dh,ah
  4021ab:	xor    DWORD PTR [ebp-0x25a8beb0],esi
  4021b1:	push   ss
  4021b2:	and    bh,BYTE PTR [edx]
  4021b4:	aas    
  4021b5:	outs   dx,DWORD PTR ds:[esi]
  4021b6:	and    al,0x2c
  4021b8:	inc    ecx
  4021b9:	push   edx
  4021ba:	cdq    
  4021bb:	pop    esi
  4021bc:	push   esi
  4021bd:	push   edx
  4021be:	cmp    al,0x77
  4021c0:	xor    al,0x70
  4021c2:	pop    ebx
  4021c3:	xor    ah,BYTE PTR [ebp+0x24]
  4021c6:	or     dl,BYTE PTR [edi]
  4021c8:	or     eax,0xa3f69b95
  4021cd:	fild   DWORD PTR [esi+0x55]
  4021d0:	dec    esp
  4021d1:	and    bl,bh
  4021d3:	out    0x5c,al
  4021d5:	pop    ebp
  4021d6:	dec    edi
  4021d7:	xchg   edx,ebx
  4021d9:	xchg   edx,eax
  4021da:	into   
  4021db:	sbb    edx,DWORD PTR [ecx-0x3e]
  4021de:	add    eax,0x4eb210e4
  4021e4:	xchg   ebx,eax
  4021e5:	cwde   
  4021e6:	dec    esp
  4021e7:	cmp    bl,dh
  4021e9:	scas   al,BYTE PTR es:[edi]
  4021ea:	scas   eax,DWORD PTR es:[edi]
  4021eb:	js     0x40226a
  4021ed:	add    eax,0xe59e4def
  4021f2:	(bad)  
  4021f3:	sbb    DWORD PTR [ebp-0x45],ebp
  4021f6:	fst    QWORD PTR [ebx]
  4021f8:	imul   ebx,DWORD PTR [ebx],0x2b652883
  4021fe:	jb     0x40222c
  402200:	test   DWORD PTR [edi],eax
  402202:	lahf   
  402203:	push   0x9c92c3a1
  402208:	xlat   BYTE PTR ds:[ebx]
  402209:	xchg   esp,eax
  40220a:	mov    DWORD PTR [eax],ebx
  40220c:	jb     0x402222
  40220e:	out    0x73,eax
  402210:	or     al,0x5f
  402212:	mov    esp,0xb9b9077b
  402217:	cdq    
  402218:	lds    edi,FWORD PTR [esi]
  40221a:	xor    al,0x1e
  40221c:	and    al,0xd0
  40221e:	stos   BYTE PTR es:[edi],al
  40221f:	push   ebx
  402220:	imul   ebp,DWORD PTR ds:0xacb28b6d,0x6a606479
  40222a:	pop    esp
  40222b:	dec    ecx
  40222c:	xchg   edi,eax
  40222d:	outs   dx,DWORD PTR ds:[esi]
  40222e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222f:	lods   eax,DWORD PTR ds:[esi]
  402230:	shl    BYTE PTR [edi-0x58],1
  402233:	hlt    
  402234:	popa   
  402235:	and    eax,0x70f9b11
  40223a:	adc    eax,ebp
  40223c:	pop    ebp
  40223d:	dec    edx
  40223e:	mov    al,ds:0x470fadfd
  402243:	inc    edx
  402244:	cdq    
  402245:	jb     0x402250
  402247:	push   0xffffffe4
  402249:	push   es
  40224a:	inc    ebp
  40224b:	push   es
  40224c:	sub    al,0x2
  40224e:	sbb    dl,BYTE PTR [edx]
  402250:	mov    ds:0xb857452d,eax
  402255:	cmp    al,0xf1
  402257:	clc    
  402258:	test   al,0xde
  40225a:	cld    
  40225b:	push   0xf
  40225d:	retf   
  40225e:	adc    BYTE PTR [edi-0x2],bl
  402261:	sbb    esp,ebx
  402263:	xchg   ecx,eax
  402264:	dec    eax
  402265:	sbb    al,0x8a
  402267:	ins    DWORD PTR es:[edi],dx
  402268:	jecxz  0x402242
  40226a:	sbb    DWORD PTR [esi+eiz*8-0x7b],edi
  40226e:	aam    0xbe
  402270:	mov    al,0x4
  402272:	pop    es
  402273:	adc    BYTE PTR [ebx+0x57],0x68
  402277:	sbb    edx,edx
  402279:	pop    esp
  40227a:	aas    
  40227b:	(bad)  
  40227c:	aam    0x0
  40227e:	nop
  40227f:	in     eax,dx
  402280:	sub    bl,al
  402282:	mov    DWORD PTR [edx-0x2498cae6],esp
  402288:	or     eax,0x727a8a8a
  40228d:	cmp    DWORD PTR [esi+0x7],edi
  402290:	cli    
  402291:	fs out dx,al
  402293:	jns    0x4022ae
  402295:	fwait
  402296:	pop    edx
  402297:	or     ch,BYTE PTR [esi+0x5c]
  40229a:	shl    BYTE PTR [edi],cl
  40229c:	mov    ebp,ecx
  40229e:	xor    DWORD PTR [edi-0x14f731d6],eax
  4022a4:	inc    ebp
  4022a5:	(bad)  
  4022a6:	sahf   
  4022a7:	dec    esi
  4022a8:	nop
  4022a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022aa:	sub    eax,0xd936ae81
  4022af:	ins    DWORD PTR es:[edi],dx
  4022b0:	fs test eax,0x2cf2bd3b
  4022b6:	sub    BYTE PTR [ebp+ebp*4+0x3e],ah
  4022ba:	stc    
  4022bb:	pop    ebp
  4022bc:	sbb    eax,0x7f68e956
  4022c1:	and    eax,0xfe48ae2
  4022c6:	sbb    BYTE PTR [edi],0xc1
  4022c9:	les    edi,FWORD PTR [eax+0x359a174d]
  4022cf:	shl    DWORD PTR [edi-0x6b8686ef],1
  4022d5:	pop    ebp
  4022d6:	mov    esp,0x2839cbcd
  4022db:	mov    cl,0x8b
  4022dd:	jg     0x4022c0
  4022df:	sbb    esp,esp
  4022e1:	mov    BYTE PTR [edi],bh
  4022e3:	sbb    al,0x3
  4022e5:	sbb    DWORD PTR [edi-0x6ac5426b],esp
  4022eb:	jae    0x40233d
  4022ed:	daa    
  4022ee:	scas   al,BYTE PTR es:[edi]
  4022ef:	push   cs
  4022f0:	cmp    ecx,DWORD PTR [ebx-0x55]
  4022f3:	fisttp WORD PTR [esi+0x6b]
  4022f6:	xchg   BYTE PTR [eax+0x64],al
  4022f9:	(bad)  
  4022fa:	mov    ecx,0xbec650b3
  4022ff:	cmc    
  402300:	add    eax,0x8a1d24cf
  402305:	add    eax,0x29455789
  40230a:	sub    DWORD PTR [ebx+0x43],ebp
  40230d:	test   al,0xcd
  40230f:	ja     0x4022d9
  402311:	std    
  402312:	jecxz  0x402330
  402314:	(bad)  
  402315:	sbb    eax,0xd5eb9d12
  40231a:	pop    ebx
  40231b:	jge    0x402336
  40231d:	ret    
  40231e:	mov    al,0xd0
  402320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402321:	fidivr DWORD PTR [esi]
  402323:	jg     0x4022f6
  402325:	retf   
  402326:	sbb    BYTE PTR [edi+0x6f],0x2
  40232a:	fmul   QWORD PTR [ecx-0x60]
  40232d:	pop    edi
  40232e:	inc    esp
  40232f:	stos   BYTE PTR es:[edi],al
  402330:	jmp    0x1cb3:0xc426d406
  402337:	xchg   ebx,eax
  402338:	sub    eax,0xb4ce7dd4
  40233d:	jecxz  0x4022eb
  40233f:	pop    es
  402340:	or     al,0xed
  402342:	push   0x7b944f5
  402347:	mov    dh,0x4b
  402349:	inc    ebx
  40234a:	pop    es
  40234b:	cld    
  40234c:	test   eax,0x87748d0d
  402351:	gs jp  0x402317
  402354:	outs   dx,DWORD PTR ds:[esi]
  402355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402356:	stc    
  402357:	fdivr  QWORD PTR [edi]
  402359:	test   BYTE PTR [esi-0x7],dl
  40235c:	cld    
  40235d:	sub    eax,0xe601059
  402362:	sti    
  402363:	int3   
  402364:	sbb    al,0x6f
  402366:	and    eax,0xe92bdcf9
  40236b:	and    BYTE PTR [ecx+eax*4],cl
  40236e:	cmp    BYTE PTR [ebp+0x72],ch
  402371:	retf   0x2866
  402374:	in     eax,0x1f
  402376:	icebp  
  402377:	mov    DWORD PTR [edi+0xba35299],ebx
  40237d:	lahf   
  40237e:	pusha  
  40237f:	(bad)
  402382:	shr    eax,0x49
  402385:	jno    0x4023c4
  402387:	xchg   edi,eax
  402388:	mov    ebp,0xf549cca7
  40238d:	ret    
  40238e:	mov    BYTE PTR [edi-0x7efc6643],ah
  402394:	push   ebp
  402395:	sub    ah,BYTE PTR [ecx+ebx*4]
  402398:	add    cl,0xa3
  40239b:	sbb    al,0xd2
  40239d:	js     0x4023f7
  40239f:	addr16 das 
  4023a1:	ins    BYTE PTR es:[edi],dx
  4023a2:	and    al,0xf1
  4023a4:	int    0xea
  4023a6:	int    0x8b
  4023a8:	stc    
  4023a9:	lds    edi,FWORD PTR [esp+eax*2+0x2d]
  4023ad:	jecxz  0x402367
  4023af:	push   ebx
  4023b0:	lods   eax,DWORD PTR ds:[esi]
  4023b1:	cli    
  4023b2:	pushf  
  4023b3:	cwde   
  4023b4:	scas   al,BYTE PTR es:[edi]
  4023b5:	mov    edx,0xbee2f9b
  4023ba:	add    al,0xc5
  4023bc:	cmc    
  4023bd:	cwde   
  4023be:	sub    DWORD PTR [ecx-0x186e2d93],0xffffff92
  4023c5:	outs   dx,BYTE PTR ds:[esi]
  4023c6:	and    ah,BYTE PTR ds:0xd4b9ae42
  4023cc:	mov    ds:0x96f35277,eax
  4023d1:	xor    dh,BYTE PTR [edi]
  4023d3:	xor    BYTE PTR [ecx-0xc],al
  4023d6:	(bad)  
  4023d7:	mov    dl,0x40
  4023d9:	fnstsw WORD PTR [esi+0xc]
  4023dc:	mov    esi,DWORD PTR [edi-0x7fdace21]
  4023e2:	pop    edi
  4023e3:	dec    eax
  4023e4:	daa    
  4023e5:	xchg   DWORD PTR [ebx+ecx*4+0x7e],esi
  4023e9:	stos   BYTE PTR es:[edi],al
  4023ea:	mov    eax,0x215bd9e3
  4023ef:	cmp    bl,BYTE PTR [ecx+0x82669a1]
  4023f5:	inc    ebx
  4023f6:	mov    BYTE PTR [ecx],bh
  4023f8:	cmp    bl,BYTE PTR [eax+ecx*8+0x251c48be]
  4023ff:	push   0x103b856e
  402404:	cmc    
  402405:	adc    bl,BYTE PTR [ecx+0x9f625f2]
  40240b:	sub    dl,BYTE PTR [edi+0x691a83c6]
  402411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402412:	ficom  DWORD PTR [ecx+0x5857bc31]
  402418:	sub    al,0x2
  40241a:	cmc    
  40241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40241c:	xchg   ebp,eax
  40241d:	(bad)  
  40241e:	xor    BYTE PTR [edx],dl
  402420:	push   eax
  402421:	jo     0x4023ca
  402423:	xchg   edi,eax
  402424:	imul   esi,DWORD PTR [ebx-0x2c90d11c],0xa09aabaa
  40242e:	shl    DWORD PTR [esi+0x39],cl
  402431:	cmp    al,0x25
  402433:	(bad)  
  402434:	arpl   WORD PTR [edi-0x92904c3],si
  40243a:	adc    eax,0x6297f1e7
  40243f:	rol    cl,1
  402441:	enter  0x1038,0x5a
  402445:	xchg   BYTE PTR [eax-0x7e],dl
  402448:	es dec eax
  40244a:	pop    es
  40244b:	enter  0x2ea6,0x72
  40244f:	adc    DWORD PTR [ebx+0x5a],edi
  402452:	inc    ecx
  402453:	dec    esp
  402454:	mov    eax,0x30b7ebce
  402459:	call   0x27007cb9
  40245e:	xchg   BYTE PTR [ebx-0x1e],dl
  402461:	jg     0x40249a
  402463:	(bad)  
  402464:	or     al,0x8d
  402466:	dec    edi
  402467:	jno    0x402406
  402469:	je     0x40245d
  40246b:	jae    0xa4ef1477
  402471:	ins    DWORD PTR es:[edi],dx
  402472:	imul   ebx,DWORD PTR [ebx+0x275fa9f8],0x535247e4
  40247c:	and    DWORD PTR [ecx+0x49151cd],esp
  402482:	test   ebp,edi
  402484:	pop    eax
  402485:	and    BYTE PTR [ebp+0x7d],dh
  402488:	fwait
  402489:	cmc    
  40248a:	leave  
  40248b:	and    DWORD PTR [ecx+eiz*1],0x285d88dd
  402492:	pushf  
  402493:	cmc    
  402494:	xchg   ebx,eax
  402495:	and    al,0x72
  402497:	mov    ebx,0x67709d3c
  40249c:	fisub  DWORD PTR [esi-0x64]
  40249f:	out    dx,eax
  4024a0:	xchg   edi,eax
  4024a1:	xchg   edx,eax
  4024a2:	jne    0x402463
  4024a4:	jbe    0x402454
  4024a6:	ror    DWORD PTR [ebx-0x158b50a9],0x99
  4024ad:	inc    eax
  4024ae:	out    0x12,eax
  4024b0:	(bad)  
  4024b1:	pop    ss
  4024b2:	mov    eax,0x75fd443c
  4024b7:	inc    ebp
  4024b8:	inc    edx
  4024b9:	xor    ch,dl
  4024bb:	inc    esp
  4024bc:	aam    0xd2
  4024be:	cmp    bh,bl
  4024c0:	mov    dl,0x53
  4024c2:	inc    ebx
  4024c3:	inc    ebp
  4024c4:	sbb    BYTE PTR [ebx+0x3a],cl
  4024c7:	push   ds
  4024c8:	jb     0x40249f
  4024ca:	imul   edx,DWORD PTR ds:0xc1bca141,0xaa23e31c
  4024d4:	bound  ecx,QWORD PTR [edi]
  4024d6:	ret    
  4024d7:	repz daa 
  4024d9:	push   cs
  4024da:	test   eax,0xad02b4e2
  4024df:	cmp    dl,BYTE PTR [eax-0x59]
  4024e2:	dec    esi
  4024e3:	loop   0x402525
  4024e5:	jnp    0x4024cc
  4024e7:	pop    ss
  4024e8:	fsubr  DWORD PTR [ecx]
  4024ea:	call   0x6b8b:0x1e854240
  4024f1:	fld    QWORD PTR [eax-0x66]
  4024f4:	pop    edi
  4024f5:	cmp    eax,DWORD PTR [eax-0x44]
  4024f8:	imul   ebp,eax,0xffffffea
  4024fb:	mov    eax,0xce90b797
  402500:	shl    BYTE PTR [ebx+0x6b3a3f80],0x80
  402507:	pop    es
  402508:	xchg   edi,eax
  402509:	push   es
  40250a:	dec    edi
  40250b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250c:	shr    DWORD PTR [eax],1
  40250e:	pop    eax
  40250f:	and    BYTE PTR [ebx+0x773fac07],ch
  402515:	cld    
  402516:	outs   dx,DWORD PTR ds:[esi]
  402517:	daa    
  402518:	pop    ss
  402519:	jmp    0x9206:0x582e6dd4
  402520:	fcom   DWORD PTR [esp+ebx*8]
  402523:	jbe    0x402505
  402525:	and    al,BYTE PTR [esi-0x74]
  402528:	ins    BYTE PTR es:[edi],dx
  402529:	mov    al,0x80
  40252b:	(bad)  
  40252c:	in     eax,0x8
  40252e:	mov    esi,0xccbebfa9
  402533:	call   0xe2dfc8dc
  402538:	or     eax,0x852dd554
  40253d:	xor    dl,BYTE PTR ds:0xc9c6f30e
  402543:	inc    eax
  402544:	sbb    ebp,DWORD PTR [esi-0x50]
  402547:	mov    eax,ds:0xbe76469d
  40254c:	retf   
  40254d:	rol    ecx,cl
  40254f:	push   edx
  402550:	mov    edx,0x86b9e23e
  402555:	in     eax,0xde
  402557:	sbb    dl,BYTE PTR [edi-0x3]
  40255a:	dec    eax
  40255b:	out    dx,al
  40255c:	ja     0x4024fe
  40255e:	mov    al,ds:0x4ee87e40
  402563:	dec    ebx
  402564:	iret   
  402565:	pop    esp
  402566:	mov    ah,0xba
  402568:	in     al,0x63
  40256a:	pop    esi
  40256b:	(bad)  
  40256c:	dec    edx
  40256d:	push   es
  40256e:	test   eax,0x3efbd262
  402573:	cwde   
  402574:	js     0x4025d1
  402576:	xchg   DWORD PTR [edx-0x52736fd4],esp
  40257c:	sub    DWORD PTR [eax-0x4e62a369],0x1ada5c87
  402586:	icebp  
  402587:	pushf  
  402588:	sbb    eax,DWORD PTR [edi+0x717764a4]
  40258e:	dec    edx
  40258f:	popa   
  402590:	int3   
  402591:	aam    0xda
  402593:	xchg   edi,eax
  402594:	xor    BYTE PTR [eax+0x70],dh
  402597:	in     al,0xe9
  402599:	mov    ecx,0xc0deef7
  40259e:	ss add ebp,esi
  4025a1:	int    0xc2
  4025a3:	cdq    
  4025a4:	cmp    BYTE PTR [ecx+eiz*1+0x6c],cl
  4025a8:	mov    ecx,esi
  4025aa:	stc    
  4025ab:	std    
  4025ac:	mov    DWORD PTR [ecx-0x3a009367],esi
  4025b2:	(bad)  
  4025b3:	cmp    eax,0x1785fdb7
  4025b8:	mov    WORD PTR [edi-0x2b8bae8],ds
  4025be:	idiv   BYTE PTR ds:0xc53db2d6
  4025c4:	inc    ebp
  4025c5:	jae    0x402549
  4025c7:	inc    esp
  4025c8:	inc    edx
  4025c9:	sub    ebx,DWORD PTR [ecx-0x6f]
  4025cc:	lock or al,0xe3
  4025cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025d0:	dec    ebx
  4025d1:	lock cmp DWORD PTR [esi+0x7168390a],esp
  4025d8:	or     eax,0x9f506d11
  4025dd:	cwde   
  4025de:	mov    dh,0xfb
  4025e0:	pop    ss
  4025e1:	std    
  4025e2:	sbb    DWORD PTR [esi-0x63],ecx
  4025e5:	jp     0x4025c1
  4025e7:	iret   
  4025e8:	enter  0xcd8b,0xfb
  4025ec:	clc    
  4025ed:	out    dx,al
  4025ee:	(bad)  
  4025ef:	xor    cl,bl
  4025f1:	jmp    0x4025bf
  4025f3:	call   0x1ed2:0x186b72e
  4025fa:	xchg   ecx,eax
  4025fb:	pop    esp
  4025fc:	ds lahf 
  4025fe:	in     eax,0x43
  402600:	inc    esi
  402601:	xchg   ecx,eax
  402602:	dec    ebx
  402603:	xor    ebx,ebp
  402605:	jno    0x402588
  402607:	stos   DWORD PTR es:[edi],eax
  402608:	fistp  DWORD PTR [edi+0x4f]
  40260b:	xchg   ebp,eax
  40260c:	jl     0x4025a8
  40260e:	mov    esp,0x1037e347
  402613:	sub    esi,ecx
  402615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402616:	aas    
  402617:	mov    ecx,0x947a8e3b
  40261c:	out    dx,al
  40261d:	dec    ebx
  40261e:	mov    WORD PTR [edi],?
  402620:	pushf  
  402621:	nop
  402622:	push   es
  402623:	dec    eax
  402624:	cmp    bl,BYTE PTR [edi]
  402626:	sahf   
  402627:	xchg   esi,eax
  402628:	and    esp,esp
  40262a:	mov    bl,0x9c
  40262c:	mov    eax,es
  40262e:	aaa    
  40262f:	aam    0xd1
  402631:	sbb    ah,0xf1
  402634:	(bad)  
  402635:	aas    
  402636:	adc    edx,DWORD PTR [ebp+ecx*2-0x38e68ad8]
  40263d:	stos   DWORD PTR es:[edi],eax
  40263e:	jns    0x4025d2
  402640:	mov    ecx,0x835e77d3
  402645:	sahf   
  402646:	pop    ds
  402647:	xchg   edi,eax
  402648:	shl    BYTE PTR [esi-0x3ba6f248],cl
  40264e:	por    mm7,QWORD PTR [eax]
  402651:	sub    DWORD PTR [edx-0x28b2b12f],ebp
  402657:	test   BYTE PTR [edi],bl
  402659:	or     al,0x40
  40265b:	repz adc al,0xaa
  40265e:	sbb    al,BYTE PTR [ecx]
  402660:	stos   BYTE PTR es:[edi],al
  402661:	dec    eax
  402662:	out    dx,al
  402663:	shr    BYTE PTR [edx],1
  402665:	sbb    al,0xaf
  402667:	mov    cl,0xe
  402669:	pusha  
  40266a:	xor    DWORD PTR [eax-0x70a0770d],0x81e78bc
  402674:	test   BYTE PTR [edi],cl
  402676:	ret    0x6bf4
  402679:	das    
  40267a:	outs   dx,DWORD PTR ds:[esi]
  40267b:	sub    esp,DWORD PTR [esi-0x58d82036]
  402681:	cmp    eax,0xae8ff7b8
  402686:	out    dx,al
  402687:	sbb    eax,0x730328b3
  40268c:	inc    ebp
  40268d:	or     DWORD PTR [edx-0x9c0ee1a],ecx
  402693:	mov    cl,0x1a
  402695:	scas   al,BYTE PTR es:[edi]
  402696:	sub    ebx,DWORD PTR [esi]
  402698:	cwde   
  402699:	sbb    DWORD PTR [ebx+0xc2f1a08],ecx
  40269f:	sub    eax,0xc5bf9f09
  4026a4:	adc    BYTE PTR [ecx],dl
  4026a6:	fst    QWORD PTR [eax+0x42]
  4026a9:	pop    edi
  4026aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026ab:	daa    
  4026ac:	fst    st(1)
  4026ae:	dec    ch
  4026b0:	test   al,0x2d
  4026b2:	dec    esi
  4026b3:	stos   BYTE PTR es:[edi],al
  4026b4:	into   
  4026b5:	push   ds
  4026b6:	inc    ebp
  4026b7:	das    
  4026b8:	xor    al,0xe0
  4026ba:	rcr    BYTE PTR [ebp-0x8],1
  4026bd:	cmc    
  4026be:	mov    gs,WORD PTR [edi+edx*8]
  4026c1:	fst    DWORD PTR [edi+0x76]
  4026c4:	mov    al,ds:0x32b8dcef
  4026c9:	pushf  
  4026ca:	inc    edx
  4026cb:	leave  
  4026cc:	icebp  
  4026cd:	push   es
  4026ce:	call   DWORD PTR gs:[ecx]
  4026d1:	or     bl,0x6f
  4026d4:	int3   
  4026d5:	fsubr  DWORD PTR [ebx+eiz*4+0x7754cf74]
  4026dc:	xlat   BYTE PTR ds:[ebx]
  4026dd:	repz enter 0x69ec,0x7b
  4026e2:	jmp    0xb8a3f46d
  4026e7:	pop    ds
  4026e8:	mov    esi,0xc1e328be
  4026ed:	mul    DWORD PTR [ebx+ebp*2]
  4026f0:	and    eax,0x95c2ae5e
  4026f5:	cmp    al,dl
  4026f7:	sub    al,0xfb
  4026f9:	jns    0x402751
  4026fb:	xor    bl,BYTE PTR [ebp-0x7b]
  4026fe:	sbb    BYTE PTR [ecx],bl
  402700:	ins    BYTE PTR es:[edi],dx
  402701:	rcr    BYTE PTR [esp+eax*1],0x1e
  402705:	push   esi
  402706:	or     ebp,DWORD PTR [ecx+edx*4+0x6de37e1d]
  40270d:	pop    ds
  40270e:	mov    bl,0xb
  402710:	bound  ebp,QWORD PTR [edx+0x15]
  402713:	cs dec ebx
  402715:	and    eax,0xcfe677cb
  40271a:	aaa    
  40271b:	adc    edx,ebx
  40271d:	jae    0x4026f9
  40271f:	cmp    ah,dh
  402721:	adc    al,0x5c
  402723:	jle    0x402793
  402725:	dec    ecx
  402726:	inc    ebp
  402727:	(bad)  
  402728:	or     eax,0xac33074a
  40272d:	retf   0x794c
  402730:	sti    
  402731:	ret    0x4b2
  402734:	daa    
  402735:	sub    eax,0x451ab926
  40273a:	push   ds
  40273b:	dec    eax
  40273c:	xchg   esi,eax
  40273d:	adc    eax,0x5a08759b
  402742:	xchg   ebx,eax
  402743:	xor    dl,BYTE PTR [ebx-0x1f9200b2]
  402749:	adc    al,0x4f
  40274b:	push   esp
  40274c:	push   edi
  40274d:	mov    al,BYTE PTR [esp+ebp*8]
  402750:	jb     0x40271e
  402752:	cmp    esi,esp
  402754:	and    dh,dl
  402756:	fmul   DWORD PTR [ebp-0x48]
  402759:	in     al,0xd7
  40275b:	dec    ebx
  40275c:	sub    bl,BYTE PTR [esi+0x3c]
  40275f:	pop    ecx
  402760:	push   ds
  402761:	(bad)  
  402762:	clc    
  402763:	mov    eax,ds:0xe82bc1f8
  402768:	or     eax,0xa707d051
  40276d:	lods   eax,DWORD PTR ds:[esi]
  40276e:	jecxz  0x40270a
  402770:	loopne 0x4026f9
  402772:	sbb    DWORD PTR [esi],ecx
  402774:	inc    edx
  402775:	adc    eax,0xc36dc4bf
  40277a:	repz dec ebp
  40277c:	dec    edx
  40277d:	push   es
  40277e:	mov    ecx,0x39586268
  402783:	repnz push eax
  402785:	xor    eax,DWORD PTR [ebx+edi*4+0x5]
  402789:	test   bl,ch
  40278b:	mov    edx,ss
  40278d:	xor    al,0x79
  40278f:	iret   
  402790:	xchg   edi,eax
  402791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402792:	push   esi
  402793:	pop    eax
  402794:	cmp    ecx,DWORD PTR [eax]
  402796:	retf   0xf2a3
  402799:	cmp    eax,ebp
  40279b:	or     al,dh
  40279d:	jmp    0xf5b44572
  4027a2:	adc    DWORD PTR [ecx+0x21],ecx
  4027a5:	cmp    DWORD PTR [edx-0x3e47b982],ebp
  4027ab:	lods   eax,DWORD PTR ds:[esi]
  4027ac:	push   cs
  4027ad:	lahf   
  4027ae:	add    DWORD PTR [ebx],edx
  4027b0:	test   BYTE PTR [edx+0x14],0xb5
  4027b4:	xchg   esi,eax
  4027b5:	mov    BYTE PTR ds:0x2540420b,bl
  4027bb:	(bad)  
  4027bc:	jne    0x402837
  4027be:	lock dec eax
  4027c0:	sub    al,0x8a
  4027c2:	xor    bl,BYTE PTR [esi+ebx*4]
  4027c5:	xor    al,0x61
  4027c7:	jb     0x4027f4
  4027c9:	dec    DWORD PTR ds:0x51c9260d
  4027d0:	int3   
  4027d1:	neg    DWORD PTR [ebp+0x4c14b5ba]
  4027d7:	lahf   
  4027d8:	cmp    BYTE PTR [edi+0x2],0x60
  4027dc:	push   esi
  4027dd:	iret   
  4027de:	call   0xde5f:0xd0a0bb66
  4027e5:	imul   ebx,edx,0xffffff90
  4027e8:	into   
  4027e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ea:	or     dl,BYTE PTR [eax+0x619000b8]
  4027f0:	outs   dx,BYTE PTR ds:[esi]
  4027f1:	pop    ss
  4027f2:	rcl    BYTE PTR [esp+ebp*2-0x5b],0x4
  4027f7:	pop    esp
  4027f8:	shl    DWORD PTR [ecx],cl
  4027fa:	inc    ecx
  4027fb:	or     BYTE PTR [ecx-0x42],al
  4027fe:	sbb    al,0x66
  402800:	(bad)  
  402802:	imul   edi,DWORD PTR [esi*1-0x21d90db0],0x16
  40280a:	adc    eax,0xa2fea38
  40280f:	mov    eax,0x72cecaeb
  402814:	push   es
  402815:	pop    esp
  402816:	test   al,ah
  402818:	not    BYTE PTR [edi+0x3]
  40281b:	je     0x4027d8
  40281d:	popa   
  40281e:	in     eax,dx
  40281f:	push   0xffffffcf
  402821:	adc    al,0x4
  402823:	lahf   
  402824:	adc    eax,0x1f763294
  402829:	out    dx,eax
  40282a:	sub    esi,esp
  40282c:	jno    0x40287d
  40282e:	ins    DWORD PTR es:[edi],dx
  40282f:	ficomp DWORD PTR [esi]
  402831:	stc    
  402832:	pop    eax
  402833:	or     DWORD PTR [eax],ecx
  402835:	inc    esi
  402836:	or     eax,0x814fb6f1
  40283b:	aad    0x10
  40283d:	add    al,0xfc
  40283f:	int3   
  402840:	fstp   QWORD PTR [ecx+ebp*4]
  402843:	pop    edx
  402844:	cld    
  402845:	mov    bl,0x1a
  402847:	arpl   dx,bx
  402849:	mov    ch,BYTE PTR [edx]
  40284b:	inc    edi
  40284c:	iret   
  40284d:	add    ebx,DWORD PTR [ebx-0x52]
  402850:	dec    esi
  402851:	cli    
  402852:	mov    ecx,DWORD PTR [esi-0x29]
  402855:	inc    esp
  402856:	adc    eax,0x19bd7ad8
  40285b:	mov    esp,fs
  40285d:	adc    DWORD PTR [ebp+0x76b75b72],ebp
  402863:	repz es aas 
  402866:	outs   dx,DWORD PTR ds:[esi]
  402867:	and    DWORD PTR [ecx-0x5387fcc6],0xe6f396ec
  402871:	adc    al,0xab
  402873:	ffree  st(1)
  402875:	dec    edx
  402876:	(bad)  
  402877:	dec    ebx
  402878:	push   cs
  402879:	sub    al,0x8f
  40287b:	cmp    dh,BYTE PTR [ecx+0x1eae30b1]
  402881:	inc    ebx
  402882:	stos   BYTE PTR es:[edi],al
  402883:	dec    esi
  402884:	xchg   DWORD PTR [ebp+0x68],eax
  402887:	fwait
  402888:	imul   esp,DWORD PTR [edx+0x21],0xffffffa3
  40288c:	out    0x8b,al
  40288e:	sub    eax,DWORD PTR [ecx]
  402890:	std    
  402891:	cdq    
  402892:	mov    esi,0x2001ea52
  402897:	stc    
  402898:	aas    
  402899:	adc    eax,0x4495f977
  40289e:	in     al,dx
  40289f:	ds jb  0x402866
  4028a2:	sbb    al,0xc8
  4028a4:	push   ss
  4028a5:	test   eax,0xc0389932
  4028aa:	jmp    0x5d29be04
  4028af:	loopne 0x4028f2
  4028b1:	and    DWORD PTR [ebx-0xf976e27],ebp
  4028b7:	loope  0x40289e
  4028b9:	pushf  
  4028ba:	stos   DWORD PTR es:[edi],eax
  4028bb:	int3   
  4028bc:	int3   
  4028bd:	ret    0xb882
  4028c0:	sbb    bh,BYTE PTR [ecx+0x3240ffc2]
  4028c6:	gs addr16 popa 
  4028c9:	mov    bh,0xc6
  4028cb:	out    dx,eax
  4028cc:	or     DWORD PTR [ebx-0xb],edi
  4028cf:	stos   BYTE PTR es:[edi],al
  4028d0:	xor    esp,DWORD PTR [edi]
  4028d2:	pop    eax
  4028d3:	les    ecx,FWORD PTR [ebp+0x5ae7d013]
  4028d9:	aad    0x8f
  4028db:	xchg   ebp,eax
  4028dc:	xchg   edx,eax
  4028dd:	pop    DWORD PTR [esi-0x26]
  4028e0:	jl     0x4028c1
  4028e2:	into   
  4028e3:	or     eax,0x67f7bee3
  4028e8:	es je  0x40288f
  4028eb:	aad    0xf4
  4028ed:	or     eax,0xe7622b74
  4028f2:	ins    DWORD PTR es:[edi],dx
  4028f3:	inc    eax
  4028f4:	into   
  4028f5:	(bad)  
  4028f7:	into   
  4028f8:	leave  
  4028f9:	mov    al,0x4
  4028fb:	scas   eax,DWORD PTR es:[edi]
  4028fc:	inc    ebp
  4028fd:	cmp    DWORD PTR [ecx+0x37495c30],0x63
  402904:	dec    ecx
  402905:	cmp    al,BYTE PTR [esi]
  402907:	sti    
  402908:	sahf   
  402909:	and    edi,DWORD PTR [ebx]
  40290b:	leave  
  40290c:	or     esi,ebx
  40290e:	xchg   esp,eax
  40290f:	xor    ch,BYTE PTR [edx-0x4e]
  402912:	xchg   DWORD PTR [edx],esi
  402914:	nop
  402915:	movhlps xmm3,xmm7
  402918:	fdiv   QWORD PTR [edx+0x49]
  40291b:	xchg   DWORD PTR [edi-0x69086496],ebx
  402921:	push   cs
  402922:	out    0x69,eax
  402924:	leave  
  402925:	push   ebp
  402926:	and    bh,ah
  402928:	cmp    eax,0xf24c4a25
  40292d:	das    
  40292e:	push   ebp
  40292f:	inc    esp
  402930:	scas   eax,DWORD PTR es:[edi]
  402931:	retf   
  402932:	stos   BYTE PTR es:[edi],al
  402933:	mov    dl,0x8c
  402935:	xchg   edx,eax
  402936:	pop    esi
  402937:	fidiv  DWORD PTR gs:[ecx+0x25]
  40293b:	stc    
  40293c:	cmp    DWORD PTR [eax+0x3b],ebx
  40293f:	fistp  DWORD PTR [ebx+0x3]
  402942:	ds scas ax,WORD PTR es:[edi]
  402945:	aad    0x28
  402947:	test   eax,0x9a678c25
  40294c:	xor    al,0xf6
  40294e:	mov    ecx,0xa0d4e0f6
  402953:	xchg   BYTE PTR [edi],cl
  402955:	jecxz  0x402924
  402957:	jecxz  0x4029a2
  402959:	adc    ah,ah
  40295b:	arpl   WORD PTR [edx],dx
  40295d:	sbb    DWORD PTR [ecx],ebx
  40295f:	bound  ebx,QWORD PTR [ebp-0x5f]
  402962:	ins    DWORD PTR es:[edi],dx
  402963:	sub    DWORD PTR [ebp+0x3c],ecx
  402966:	sub    cl,BYTE PTR [edx-0x3a]
  402969:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40296b:	fisttp DWORD PTR [edx+0x17]
  40296e:	ret    0xcd70
  402971:	(bad)  
  402973:	cmp    ebx,DWORD PTR [edx+edi*4-0x5f50cb60]
  40297a:	xchg   BYTE PTR [edi],al
  40297c:	dec    esi
  40297d:	lea    ebx,[edi]
  40297f:	mov    bh,0xd5
  402981:	mov    WORD PTR [ebx],0x1f2e
  402986:	rcr    BYTE PTR [ebp+eax*1-0xe],cl
  40298a:	pop    esi
  40298b:	cmp    bh,BYTE PTR [ebp+0x2932b154]
  402991:	out    0x2b,eax
  402993:	and    ah,BYTE PTR [ebx+0x3ba8c99e]
  402999:	scas   eax,DWORD PTR es:[edi]
  40299a:	push   ds
  40299b:	sub    al,0x85
  40299d:	mov    eax,DWORD PTR [esi]
  40299f:	mov    cl,0x32
  4029a1:	mov    WORD PTR [edx+0x1f],es
  4029a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a5:	xchg   edi,eax
  4029a6:	and    eax,DWORD PTR [ecx]
  4029a8:	xor    bh,BYTE PTR [eax-0x7d]
  4029ab:	push   cs
  4029ac:	in     al,0xe
  4029ae:	ret    0x62e8
  4029b1:	add    esi,DWORD PTR [ebx]
  4029b3:	(bad)  
  4029b4:	(bad)  
  4029b5:	fs pop esp
  4029b7:	aad    0x96
  4029b9:	xchg   esp,eax
  4029ba:	push   ds
  4029bb:	inc    edx
  4029bc:	add    eax,0xd7b26966
  4029c1:	adc    al,0xd1
  4029c3:	sub    cl,BYTE PTR [eax+0x3c]
  4029c6:	bound  esp,QWORD PTR [ebx]
  4029c8:	repz mov edi,DWORD PTR [esp+esi*4-0x79]
  4029cd:	scas   al,BYTE PTR es:[edi]
  4029ce:	jle    0x402a4f
  4029d0:	shr    BYTE PTR ds:0x33b447ac,cl
  4029d6:	popf   
  4029d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d8:	add    BYTE PTR [ebp+0x62],al
  4029db:	dec    eax
  4029dc:	push   0x3e
  4029de:	shl    cl,cl
  4029e0:	ja     0x402a05
  4029e2:	sub    eax,DWORD PTR ds:0xbf82f4c2
  4029e8:	adc    eax,0xd0c5ed20
  4029ed:	jbe    0x402a09
  4029ef:	into   
  4029f0:	and    BYTE PTR [ebx+0x3e],bh
  4029f3:	xlat   BYTE PTR ds:[ebx]
  4029f4:	clc    
  4029f5:	lds    eax,FWORD PTR [eax]
  4029f7:	fcomi  st,st(6)
  4029f9:	dec    ebx
  4029fa:	mov    bh,cl
  4029fc:	fwait
  4029fd:	(bad)  
  4029fe:	sbb    al,0xb5
  402a00:	rcr    ebp,cl
  402a02:	(bad)  
  402a03:	call   0x94a:0x5f1330ad
  402a0a:	jecxz  0x4029dc
  402a0c:	in     eax,dx
  402a0d:	aam    0x70
  402a0f:	clc    
  402a10:	popa   
  402a11:	int    0x5a
  402a13:	(bad)  
  402a14:	add    DWORD PTR [edi+0x62f78887],0x39ab08aa
  402a1e:	sahf   
  402a1f:	dec    ebp
  402a20:	or     edx,esp
  402a22:	inc    eax
  402a23:	inc    edx
  402a24:	push   edi
  402a25:	and    eax,0xfb459508
  402a2a:	or     ebx,DWORD PTR [edi-0x2a]
  402a2d:	jne    0x402a47
  402a2f:	jo     0x4029e9
  402a31:	in     al,dx
  402a32:	xchg   esp,eax
  402a33:	pushf  
  402a34:	jmp    0x8cff:0x400caf0f
  402a3b:	shr    DWORD PTR [ecx+0x5b],1
  402a3e:	mov    al,0xa6
  402a40:	add    BYTE PTR [eax],ah
  402a42:	imul   esp,DWORD PTR [ebp-0x53],0xd07b79bc
  402a49:	fidivr DWORD PTR [eax-0x25]
  402a4c:	cs mov ebx,0x9e40dfb5
  402a52:	adc    DWORD PTR [ebp-0xf],esp
  402a55:	jge    0x4029f7
  402a57:	xor    eax,0x559d4129
  402a5c:	aaa    
  402a5d:	lods   al,BYTE PTR ds:[esi]
  402a5e:	shl    DWORD PTR ds:0x5af4f8bf,0xa5
  402a65:	shl    BYTE PTR [ebx],0xef
  402a68:	into   
  402a69:	mov    ecx,0x68d101e4
  402a6e:	rol    DWORD PTR [edi-0x57],1
  402a71:	pushf  
  402a72:	shl    DWORD PTR [edx-0x58],1
  402a75:	mov    cl,0xf1
  402a77:	daa    
  402a78:	test   BYTE PTR ds:0xd1519952,ch
  402a7e:	mov    al,0x83
  402a80:	xchg   esi,eax
  402a81:	or     eax,0x20c70ee1
  402a86:	ds in  eax,0x27
  402a89:	sbb    eax,0x2af89eee
  402a8e:	loopne 0x402b06
  402a90:	sbb    cl,BYTE PTR [eax-0x6]
  402a93:	js     0x402a8a
  402a95:	js     0x402ac2
  402a97:	pop    eax
  402a98:	(bad)  
  402a99:	xor    eax,ebx
  402a9b:	xor    DWORD PTR [eax-0x25d74258],esi
  402aa1:	lock pushf 
  402aa3:	and    DWORD PTR [eax+0x2b],esp
  402aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aa7:	xor    al,0x5e
  402aa9:	inc    edi
  402aaa:	sti    
  402aab:	cmp    DWORD PTR [esi+0x6e9c1425],edi
  402ab1:	nop
  402ab2:	sub    edi,ebx
  402ab4:	hlt    
  402ab5:	mov    ah,0x5e
  402ab7:	adc    bl,bl
  402ab9:	jmp    0x402a56
  402abb:	adc    DWORD PTR [esi+eax*1-0x3975c7bd],edi
  402ac2:	and    al,0x11
  402ac4:	out    0xd5,al
  402ac6:	sbb    ah,BYTE PTR [esi-0x9]
  402ac9:	aaa    
  402aca:	pop    ebp
  402acb:	inc    esi
  402acc:	call   0x30775836
  402ad1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402ad3:	dec    esp
  402ad4:	ins    DWORD PTR es:[edi],dx
  402ad5:	cdq    
  402ad6:	dec    eax
  402ad7:	stos   DWORD PTR es:[edi],eax
  402ad8:	fistp  DWORD PTR [eax]
  402ada:	dec    edi
  402adb:	popa   
  402adc:	iret   
  402add:	sub    DWORD PTR [eax],esp
  402adf:	cld    
  402ae0:	mov    bl,al
  402ae2:	les    esp,FWORD PTR [edi]
  402ae4:	add    eax,0xc82f057e
  402ae9:	pop    ecx
  402aea:	es dec esp
  402aec:	and    al,0x7d
  402aee:	mov    ah,0x57
  402af0:	mov    ebx,0x8c0c7423
  402af5:	pop    edx
  402af6:	retf   0x7cea
  402af9:	cld    
  402afa:	int    0xd6
  402afc:	ret    0xad21
  402aff:	sar    DWORD PTR ds:0xa7f65ddb,1
  402b05:	xor    edx,DWORD PTR [edi-0x4f74b75b]
  402b0b:	adc    eax,0x8f1d960b
  402b10:	pop    es
  402b11:	int3   
  402b12:	iret   
  402b13:	aaa    
  402b14:	dec    edx
  402b15:	ss pushf 
  402b17:	sar    DWORD PTR [esi+0x36],0x8f
  402b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b1c:	ja     0x402ab8
  402b1e:	(bad)  [edi-0x66f76d12]
  402b24:	arpl   WORD PTR [edi],bp
  402b26:	dec    edx
  402b27:	dec    ecx
  402b28:	mov    ?,edx
  402b2a:	sbb    edx,DWORD PTR [ebx-0x70971fd6]
  402b30:	enter  0xf21c,0xc5
  402b34:	ins    BYTE PTR es:[edi],dx
  402b35:	or     ebp,ecx
  402b37:	xchg   esi,eax
  402b38:	test   eax,0xc8f647ad
  402b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b3e:	sub    al,ah
  402b40:	jb     0x402b04
  402b42:	jbe    0x402b3a
  402b44:	push   eax
  402b45:	pop    edx
  402b46:	push   ecx
  402b47:	xor    ah,BYTE PTR [ebx]
  402b49:	push   edi
  402b4a:	in     eax,0x68
  402b4c:	aaa    
  402b4d:	lods   eax,DWORD PTR ds:[esi]
  402b4e:	mov    dh,0x6c
  402b50:	adc    DWORD PTR es:0xfec8c9d8,0xffffffe6
  402b58:	retf   0x1161
  402b5b:	pop    edi
  402b5c:	int    0xf8
  402b5e:	jae    0x402afa
  402b60:	mov    dl,0x91
  402b62:	mov    WORD PTR [eax-0x197b3f48],gs
  402b68:	and    eax,0xd13a361c
  402b6d:	or     esi,esp
  402b6f:	pop    ebx
  402b70:	cmp    eax,0xe2ffbd56
  402b75:	outs   dx,BYTE PTR ds:[esi]
  402b76:	pop    esi
  402b77:	call   eax
  402b79:	les    ebp,FWORD PTR [ecx]
  402b7b:	or     eax,0xc4f7050c
  402b80:	icebp  
  402b81:	retf   0x276b
  402b84:	or     DWORD PTR [eax],eax
  402b86:	pop    ss
  402b87:	xchg   edx,eax
  402b88:	pop    eax
  402b89:	or     eax,0x233f02e
  402b8e:	sahf   
  402b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b90:	and    eax,0x55c66648
  402b95:	clc    
  402b96:	sub    eax,0x2d856dbe
  402b9b:	jg     0x402b2d
  402b9d:	and    al,0x26
  402b9f:	ds aam 0x44
  402ba2:	xchg   DWORD PTR [edx-0x2d],edi
  402ba5:	jns    0x402c13
  402ba7:	pop    ss
  402ba8:	gs popa 
  402baa:	cld    
  402bab:	ds mov esi,0xd8c7ea84
  402bb1:	pop    esi
  402bb2:	ret    0x9cc7
  402bb5:	loopne 0x402b71
  402bb7:	je     0x402c18
  402bb9:	mov    cl,0x8d
  402bbb:	dec    esi
  402bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bbd:	popf   
  402bbe:	(bad)  
  402bbf:	addr16 out 0xb9,eax
  402bc2:	or     BYTE PTR [esp],ch
  402bc5:	ins    DWORD PTR es:[edi],dx
  402bc6:	mov    ch,0x57
  402bc8:	cli    
  402bc9:	enter  0xceda,0x7c
  402bcd:	sub    esp,DWORD PTR [edi]
  402bcf:	push   0x945d45fe
  402bd4:	pop    ss
  402bd5:	xor    dh,BYTE PTR [ecx]
  402bd7:	test   BYTE PTR [edx+0x15ad4c4c],0x51
  402bde:	lds    edi,FWORD PTR [ebp+0x2df387f0]
  402be4:	hlt    
  402be5:	inc    ecx
  402be6:	pop    ds
  402be7:	test   BYTE PTR cs:[edx+0x5a],cl
  402beb:	fs retf 0xecf7
  402bef:	dec    ebp
  402bf0:	aam    0x8
  402bf2:	popf   
  402bf3:	arpl   WORD PTR [edx-0x7bc6257b],sp
  402bf9:	inc    ebx
  402bfa:	rcr    BYTE PTR ds:0xa08a2db3,0xfa
  402c01:	cmp    al,0xf
  402c03:	aam    0x7a
  402c05:	mov    ah,0x6c
  402c07:	or     dl,BYTE PTR [ebp-0x44]
  402c0a:	pop    esi
  402c0b:	cli    
  402c0c:	pop    edx
  402c0d:	je     0x402c21
  402c0f:	push   0xce594744
  402c14:	(bad)  [edi+0xe74d9de]
  402c1a:	jbe    0x402c15
  402c1c:	mov    ch,BYTE PTR [ebp+0x4290cde2]
  402c22:	stos   DWORD PTR es:[edi],eax
  402c23:	jno    0x402bba
  402c25:	ret    0x7997
  402c28:	or     DWORD PTR [ebx-0x43a16143],esi
  402c2e:	pop    esp
  402c2f:	rcr    ah,cl
  402c31:	in     al,dx
  402c32:	push   ecx
  402c33:	shr    DWORD PTR [ebp-0x2b],0xd0
  402c37:	xchg   esi,eax
  402c38:	sub    ebx,esp
  402c3a:	xchg   ecx,eax
  402c3b:	jmp    0xc98b43a0
  402c40:	popf   
  402c41:	retf   
  402c42:	int3   
  402c43:	mov    ebp,DWORD PTR [esi-0x6ec53a8d]
  402c49:	cmc    
  402c4a:	out    dx,eax
  402c4b:	push   edx
  402c4c:	pop    ds
  402c4d:	ja     0x402c05
  402c4f:	add    edi,DWORD PTR [edx]
  402c51:	push   0x73
  402c53:	push   ebx
  402c54:	dec    edx
  402c55:	xchg   ebx,eax
  402c56:	jb     0x402ca0
  402c58:	sub    BYTE PTR [ecx+edi*8],bl
  402c5b:	cmp    BYTE PTR [esi],ch
  402c5d:	call   0xffb1:0x6b248743
  402c64:	call   0x133b:0x521c4321
  402c6b:	jo     0x402c10
  402c6d:	push   es
  402c6e:	pop    esi
  402c6f:	stc    
  402c70:	fldcw  WORD PTR [eax-0x6c]
  402c73:	call   0x65c420fd
  402c78:	loop   0x402c21
  402c7a:	pop    edi
  402c7b:	or     esi,DWORD PTR [esp+edx*4-0x343c3164]
  402c82:	pop    ebp
  402c83:	loop   0x402c9f
  402c85:	jmp    0xbc5b:0xc26a4466
  402c8c:	mov    esp,DWORD PTR [edx]
  402c8e:	dec    esi
  402c8f:	push   0xdb53264e
  402c94:	and    dl,BYTE PTR [esi+0x41b00bda]
  402c9a:	shl    BYTE PTR [edi-0x6f],0x5f
  402c9e:	adc    edx,edx
  402ca0:	xor    al,0xc4
  402ca2:	and    BYTE PTR [ebp-0x39],dh
  402ca5:	fidiv  DWORD PTR [edx+ebp*4]
  402ca8:	xchg   ecx,eax
  402ca9:	sub    ebp,eax
  402cab:	sub    BYTE PTR ds:0x85330fef,dh
  402cb1:	imul   ebp,DWORD PTR [eax],0xfffffff6
  402cb4:	inc    ebx
  402cb5:	addr16 push ebp
  402cb7:	mov    dh,0xc4
  402cb9:	fmul   st(5),st
  402cbb:	sbb    BYTE PTR [eax+0x33],al
  402cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cbf:	adc    al,BYTE PTR [edx+0x14]
  402cc2:	mov    edi,0xfa340c4c
  402cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cc8:	adc    BYTE PTR [ebx+edx*1],0xb3
  402ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ccd:	add    bl,BYTE PTR [edi-0x73]
  402cd0:	rcr    DWORD PTR [edx-0x7b],1
  402cd3:	mov    esi,0xe864a012
  402cd8:	rcl    DWORD PTR [ecx+0xc9babf4],1
  402cde:	ins    BYTE PTR es:[edi],dx
  402cdf:	pop    ebx
  402ce0:	xor    BYTE PTR ds:0xd2e1e7c8,bl
  402ce6:	std    
  402ce7:	dec    eax
  402ce8:	std    
  402ce9:	cmc    
  402cea:	add    eax,0xe4efdec3
  402cef:	lds    di,DWORD PTR [ebx+0x30]
  402cf3:	cmp    eax,0xa0260add
  402cf8:	push   ss
  402cf9:	scas   eax,DWORD PTR es:[edi]
  402cfa:	ror    esp,cl
  402cfc:	pushf  
  402cfd:	adc    eax,0x4f26f6e1
  402d02:	(bad)  
  402d04:	addr16 cli 
  402d06:	mov    ecx,ss
  402d08:	mov    ebx,0xfc6f0b40
  402d0d:	lea    edx,[ecx+0x55]
  402d10:	lods   eax,DWORD PTR ds:[esi]
  402d11:	scas   al,BYTE PTR es:[edi]
  402d12:	out    dx,al
  402d13:	mov    DWORD PTR [ebx+0x2b295062],esi
  402d19:	adc    ebx,DWORD PTR [edx+ebx*2+0x77]
  402d1d:	jb     0x402d11
  402d1f:	cld    
  402d20:	cmp    edx,DWORD PTR ds:0x8ca8bfd2
  402d26:	imul   esp,DWORD PTR [ebx+0x75a23755],0x20183a1d
  402d30:	neg    esi
  402d32:	mov    ds:0xd1e5d74e,eax
  402d37:	cmp    esp,ebp
  402d39:	mov    ds:0x8562aacc,eax
  402d3e:	sub    cl,BYTE PTR [ebx+0x55367ea0]
  402d44:	ficomp DWORD PTR [esi+0x1386989c]
  402d4a:	push   ebx
  402d4b:	xor    DWORD PTR [ecx+eax*2-0x55754a6f],0x2e
  402d53:	cli    
  402d54:	sahf   
  402d55:	outs   dx,BYTE PTR ds:[esi]
  402d56:	into   
  402d57:	popf   
  402d58:	cld    
  402d59:	mov    dh,0x0
  402d5b:	lods   al,BYTE PTR ds:[esi]
  402d5c:	inc    ecx
  402d5d:	test   eax,0x105f09ee
  402d62:	pop    ebp
  402d63:	xor    eax,0x28e02658
  402d68:	and    cl,BYTE PTR [ebx]
  402d6a:	pop    eax
  402d6b:	dec    ecx
  402d6c:	dec    edi
  402d6d:	test   BYTE PTR [esi+0x29],ch
  402d70:	mov    ?,esi
  402d72:	jae    0x402d20
  402d74:	sbb    cl,BYTE PTR [esi+0x14]
  402d77:	push   0x59
  402d79:	xlat   BYTE PTR ds:[ebx]
  402d7a:	inc    edi
  402d7b:	in     eax,dx
  402d7c:	popf   
  402d7d:	cmp    al,0xe
  402d7f:	repz mov cl,0x92
  402d82:	mov    esi,DWORD PTR [ecx+0x71576ecf]
  402d88:	fs and eax,0x9b316053
  402d8e:	pusha  
  402d8f:	mov    ecx,0xb0f8cb9a
  402d94:	xor    BYTE PTR [ecx-0x5c],cl
  402d97:	std    
  402d98:	std    
  402d99:	mov    ds,esp
  402d9b:	fs cmp eax,0x777d4afd
  402da1:	jne    0x402d31
  402da3:	popa   
  402da4:	mov    bl,0xbc
  402da6:	call   0x98bc:0x62c66773
  402dad:	inc    esp
  402dae:	add    al,0xcc
  402db0:	xor    BYTE PTR [ebp-0x77f93364],dh
  402db6:	outs   dx,DWORD PTR ds:[esi]
  402db7:	mov    ecx,0xa7834b6f
  402dbc:	xchg   edx,eax
  402dbd:	push   esp
  402dbe:	cli    
  402dbf:	jnp    0x402d6e
  402dc1:	repnz mov dl,0x80
  402dc4:	pop    ebx
  402dc5:	xchg   ebx,eax
  402dc6:	jne    0x402e07
  402dc8:	jle    0x402e15
  402dca:	dec    ebp
  402dcb:	stc    
  402dcc:	(bad)  
  402dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd0:	dec    ebx
  402dd1:	js     0x402dfc
  402dd3:	loope  0x402e23
  402dd5:	loop   0x402d87
  402dd7:	xor    ebp,DWORD PTR [ecx-0x63]
  402dda:	outs   dx,BYTE PTR ds:[esi]
  402ddb:	mov    dl,0x11
  402ddd:	(bad)  
  402dde:	ins    BYTE PTR es:[edi],dx
  402ddf:	je     0x402de1
  402de1:	push   ecx
  402de2:	inc    ebp
  402de3:	shl    BYTE PTR [ecx-0x42],0x24
  402de7:	mov    BYTE PTR [edi+0x4a],bl
  402dea:	jbe    0x402e68
  402dec:	xchg   edi,eax
  402ded:	add    eax,0x5703a413
  402df2:	test   eax,0x7ec87887
  402df7:	or     al,0x4b
  402df9:	mov    fs,WORD PTR [eax+0x5f269c0e]
  402dff:	xchg   DWORD PTR [esi+edi*1+0x5ad98390],edi
  402e06:	xchg   esp,eax
  402e07:	jmp    0x14af76f0
  402e0c:	dec    esi
  402e0d:	in     eax,dx
  402e0e:	les    edi,FWORD PTR [ecx+0x2a7619e]
  402e14:	sbb    ah,BYTE PTR ds:[ebx]
  402e17:	inc    ebp
  402e18:	jae    0x402dbb
  402e1a:	pop    edi
  402e1b:	(bad)
  402e1e:	sub    al,al
  402e20:	sar    BYTE PTR [ecx+0x44ed532c],cl
  402e26:	mov    bh,0x40
  402e28:	fst    QWORD PTR [eax+0x880c55c]
  402e2e:	out    dx,eax
  402e2f:	leave  
  402e30:	sub    DWORD PTR [ebp-0x4a82dc4a],0xffffff8f
  402e37:	test   eax,0x8033413c
  402e3c:	cmp    eax,0x285e66fb
  402e41:	popa   
  402e42:	dec    ebp
  402e43:	aam    0xf4
  402e45:	nop
  402e46:	pop    edi
  402e47:	sar    BYTE PTR [ecx+0x8c210d4],0x3a
  402e4e:	mov    bh,0x2a
  402e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e51:	inc    edi
  402e52:	lahf   
  402e53:	test   BYTE PTR [ebp-0x2f4b3226],0x7f
  402e5a:	lods   eax,DWORD PTR ds:[esi]
  402e5b:	mov    bl,0xd4
  402e5d:	jmp    0x73b0e38
  402e62:	lods   eax,DWORD PTR ds:[esi]
  402e63:	mov    ch,0xa0
  402e65:	mov    sp,0x2bf7
  402e69:	(bad)  
  402e6a:	retf   0xcf05
  402e6d:	in     al,0xeb
  402e6f:	add    esi,ebp
  402e71:	aam    0xab
  402e73:	icebp  
  402e74:	xchg   esi,eax
  402e75:	xchg   esi,eax
  402e76:	push   edi
  402e77:	sbb    ebp,esp
  402e79:	fcmovnu st,st(5)
  402e7b:	scas   eax,DWORD PTR es:[edi]
  402e7c:	pop    ebp
  402e7d:	popa   
  402e7e:	sub    BYTE PTR [ecx+0x3ce9ae4b],0x42
  402e85:	cwde   
  402e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e87:	rcr    BYTE PTR [ecx-0x41],0x10
  402e8b:	mov    ebx,0x8a97f9c6
  402e90:	pop    DWORD PTR [ebx+0x77]
  402e93:	popa   
  402e94:	cli    
  402e95:	sbb    ah,ch
  402e97:	stos   DWORD PTR es:[edi],eax
  402e98:	cmp    BYTE PTR [ebp+0x55],0xa
  402e9c:	and    edx,0x47
  402e9f:	out    0x2c,al
  402ea1:	aam    0xc9
  402ea3:	add    DWORD PTR [edi-0x40],edx
  402ea6:	jmp    0x8fbc:0x32daa9ef
  402ead:	cmc    
  402eae:	iret   
  402eaf:	and    al,0x60
  402eb1:	pop    esi
  402eb2:	mov    ds:0x750cd97a,eax
  402eb7:	int3   
  402eb8:	xor    al,0xc6
  402eba:	inc    ebp
  402ebb:	mov    eax,es
  402ebd:	cdq    
  402ebe:	add    DWORD PTR [ecx],esp
  402ec0:	dec    eax
  402ec1:	out    0x78,al
  402ec3:	pop    ebp
  402ec4:	fsub   QWORD PTR [ebx]
  402ec6:	sub    ecx,ebx
  402ec8:	mov    al,0x45
  402eca:	stc    
  402ecb:	push   edx
  402ecc:	mov    BYTE PTR [ecx+0x66],cl
  402ecf:	dec    eax
  402ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed1:	enter  0x760f,0x8a
  402ed5:	ins    BYTE PTR es:[edi],dx
  402ed6:	bound  ebx,QWORD PTR [ecx-0x4a108955]
  402edc:	popa   
  402edd:	in     al,dx
  402ede:	sub    BYTE PTR [bp+di+0x4a],bl
  402ee2:	into   
  402ee3:	pop    eax
  402ee4:	das    
  402ee5:	stos   BYTE PTR es:[edi],al
  402ee6:	arpl   WORD PTR [eax-0x6356b951],si
  402eec:	fadd   st,st(5)
  402eee:	iret   
  402eef:	lock adc esi,DWORD PTR [esi+0x57]
  402ef3:	xchg   ecx,eax
  402ef4:	cmp    eax,0xdb4191e5
  402ef9:	mov    esi,0xd08d8326
  402efe:	or     al,0x84
  402f00:	in     al,dx
  402f01:	push   ss
  402f02:	and    eax,0xfae09a70
  402f07:	xor    al,BYTE PTR [ecx]
  402f09:	stos   BYTE PTR es:[edi],al
  402f0a:	mov    ds:0x5c110826,al
  402f0f:	cmp    ebx,DWORD PTR [esp+edx*4]
  402f12:	in     al,0xaa
  402f14:	xor    BYTE PTR [ecx-0x20],0xa0
  402f18:	in     al,0x9d
  402f1a:	jo     0x402eb4
  402f1c:	or     eax,0xc04cc309
  402f21:	push   esp
  402f22:	sub    al,BYTE PTR [edx-0x117f3]
  402f28:	in     eax,0x87
  402f2a:	inc    BYTE PTR [edx]
  402f2c:	mov    cs,WORD PTR [edx]
  402f2e:	sub    al,0x28
  402f30:	mov    esi,0x37b4b34b
  402f35:	ins    DWORD PTR es:[edi],dx
  402f36:	mov    ebp,0xe69982f9
  402f3b:	xchg   ebx,eax
  402f3c:	cmp    DWORD PTR [ecx],ecx
  402f3e:	and    eax,0xad990f60
  402f43:	mov    ch,0x9c
  402f45:	and    DWORD PTR [ebx-0x57],0x2e
  402f49:	inc    eax
  402f4a:	ret    0x2dca
  402f4d:	fidiv  DWORD PTR [ecx+0x5ec0c723]
  402f53:	push   ebx
  402f54:	sub    DWORD PTR [ecx+0xa],ebx
  402f57:	fsub   DWORD PTR [esi]
  402f59:	dec    ebx
  402f5a:	dec    edi
  402f5b:	dec    ebp
  402f5c:	test   BYTE PTR [esi],dh
  402f5e:	imul   edx,DWORD PTR [ecx+0x7f],0xd14f385f
  402f65:	cmp    al,0x31
  402f67:	xchg   edi,eax
  402f68:	mov    esp,0xbdab9dce
  402f6d:	cmp    esi,esp
  402f6f:	add    BYTE PTR [edx],0xc2
  402f72:	or     DWORD PTR [ecx+0x4a62bbd0],esi
  402f78:	into   
  402f79:	mov    ds:0xc104f90,eax
  402f7e:	xchg   esi,eax
  402f7f:	lods   al,BYTE PTR ds:[esi]
  402f80:	test   al,0xc0
  402f82:	scas   al,BYTE PTR es:[edi]
  402f83:	push   eax
  402f84:	ds aas 
  402f86:	xchg   esp,eax
  402f87:	lock jmp 0xddb9:0x24b4514c
  402f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f90:	xor    al,0x3b
  402f92:	xor    BYTE PTR [ebx+0x22dcebbf],al
  402f98:	fild   WORD PTR [edx+0x39e87f50]
  402f9e:	daa    
  402f9f:	mov    esp,0x73410473
  402fa5:	loope  0x402fe1
  402fa7:	test   BYTE PTR [edx-0x29b216ce],bl
  402fad:	fdivrp st(7),st
  402faf:	fistp  QWORD PTR [esi]
  402fb1:	xchg   ebp,eax
  402fb2:	and    al,0x73
  402fb4:	addr16 out 0x9,eax
  402fb7:	aad    0xa3
  402fb9:	mov    WORD PTR [ebx-0x4c698139],cs
  402fbf:	int    0x66
  402fc1:	and    al,0x36
  402fc3:	mov    edx,DWORD PTR [esi-0x4]
  402fc6:	and    esi,DWORD PTR [ebx-0xb16b08f]
  402fcc:	mov    al,0xa5
  402fce:	addr16 cli 
  402fd0:	fcomi  st,st(1)
  402fd2:	dec    ebx
  402fd3:	xor    cl,dl
  402fd5:	jmp    0xed12:0x7fbb36f4
  402fdc:	cwde   
  402fdd:	mov    bl,0x95
  402fdf:	out    0xda,al
  402fe1:	in     eax,0xc5
  402fe3:	sbb    dl,dl
  402fe5:	mov    dl,0x48
  402fe7:	dec    esp
  402fe8:	jge    0x402fde
  402fea:	add    DWORD PTR [eax+0x53622c9a],ecx
  402ff0:	jmp    0xe48d2950
  402ff5:	int3   
  402ff6:	sub    BYTE PTR [esi+0x21],cl
  402ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ffa:	out    dx,eax
  402ffb:	in     eax,dx
  402ffc:	mov    al,ds:0x4c705d26
  403001:	mov    eax,0x19a90825
  403006:	push   edi
  403007:	cwde   
  403008:	jbe    0x402fe5
  40300a:	je     0x403019
  40300c:	hlt    
  40300d:	fprem  
  40300f:	jge    0x402fc3
  403011:	popa   
  403012:	pop    ds
  403013:	mov    bh,0x71
  403015:	and    ebx,DWORD PTR [edi-0xb]
  403018:	xchg   bh,al
  40301a:	adc    al,0x79
  40301c:	push   es
  40301d:	dec    ebp
  40301e:	ret    
  40301f:	ret    
  403020:	cmp    eax,0x96bd9828
  403025:	sti    
  403026:	js     0x4030a7
  403028:	mov    al,ds:0x5ee99b4c
  40302d:	dec    esi
  40302e:	cmp    DWORD PTR [ebx+edx*2],0xffffffe4
  403032:	adc    ebx,edi
  403034:	xchg   ebx,eax
  403035:	test   al,0xa0
  403037:	sub    ecx,DWORD PTR [edi-0x15]
  40303a:	jbe    0x403050
  40303c:	ins    BYTE PTR es:[edi],dx
  40303d:	fiadd  WORD PTR [edi]
  40303f:	test   DWORD PTR [ecx-0x38],0x4f55d519
  403046:	pop    es
  403047:	jmp    0xfdc8:0xc8f665b7
  40304e:	sub    al,0xff
  403050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403051:	add    BYTE PTR [eax+0x772c1f19],al
  403057:	jmp    0x403000
  403059:	ss es and eax,0x1f019c
  403060:	sub    edi,DWORD PTR [eax]
  403062:	inc    eax
  403063:	xchg   edi,eax
  403064:	fucomp st(7)
  403066:	fist   WORD PTR [edi+eiz*8]
  403069:	pop    edx
  40306a:	nop
  40306b:	cdq    
  40306c:	xor    eax,0x140b2087
  403071:	les    ebp,FWORD PTR [ebx+0x7]
  403074:	adc    eax,0xe12d6998
  403079:	leave  
  40307a:	push   ebx
  40307b:	xor    DWORD PTR [eax+ebx*8],esp
  40307e:	jnp    0x403039
  403080:	ins    BYTE PTR es:[edi],dx
  403081:	cmc    
  403082:	jne    0x403009
  403084:	stos   BYTE PTR es:[edi],al
  403085:	pop    edx
  403086:	sbb    esp,ebp
  403088:	fadd   DWORD PTR [edi+0x35]
  40308b:	popa   
  40308c:	ins    DWORD PTR es:[edi],dx
  40308d:	sub    BYTE PTR [ebx],al
  40308f:	icebp  
  403090:	cmp    DWORD PTR [edx-0xdcdc0fd],eax
  403096:	aad    0xec
  403098:	adc    edx,ebx
  40309a:	push   ecx
  40309b:	pop    ecx
  40309c:	js     0x4030cb
  40309e:	pcmpeqw mm1,QWORD PTR [edx+ebp*2+0xa]
  4030a3:	push   eax
  4030a4:	jmp    0x403108
  4030a6:	cmp    eax,0xd0e5a26d
  4030ab:	adc    eax,0x733a0371
  4030b0:	test   BYTE PTR [ebp+0x6a2f3d03],ch
  4030b6:	loop   0x4030f0
  4030b8:	adc    al,0x7c
  4030ba:	dec    esp
  4030bb:	rcr    ah,1
  4030bd:	adc    DWORD PTR [ebx],0x3e
  4030c0:	ss retf 0x7d12
  4030c4:	push   0xffffff94
  4030c6:	loop   0x403105
  4030c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c9:	jb     0x4030a5
  4030cb:	out    0x8b,al
  4030cd:	adc    edx,DWORD PTR [ebp+0x3554e18c]
  4030d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030d4:	mov    ds:0x17d5a872,al
  4030d9:	jge    0x403114
  4030db:	mov    esp,0x5ccbce6c
  4030e0:	dec    esi
  4030e1:	scas   al,BYTE PTR es:[edi]
  4030e2:	push   edx
  4030e3:	xlat   BYTE PTR ds:[ebx]
  4030e4:	xor    eax,0xa8c40737
  4030e9:	add    eax,0xbb27e203
  4030ee:	shl    BYTE PTR [ebp+0x4d],0xc7
  4030f2:	ret    
  4030f3:	xor    al,0x4
  4030f5:	add    eax,0x9919977b
  4030fa:	xor    cl,BYTE PTR [edx+0x5bd5e435]
  403100:	inc    edx
  403101:	arpl   dx,dx
  403103:	mov    bl,0x80
  403105:	xchg   ebp,eax
  403106:	jb     0x403130
  403108:	clc    
  403109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310a:	js     0x40316b
  40310c:	fstp   st(3)
  40310e:	push   ebp
  40310f:	jg     0x403121
  403111:	stc    
  403112:	sub    BYTE PTR [ecx+0x36bf579f],dl
  403118:	aas    
  403119:	adc    BYTE PTR [ebp-0x8],ch
  40311c:	sub    dh,BYTE PTR [ebp-0x61]
  40311f:	sar    DWORD PTR ds:0xf6e4f2fe,1
  403125:	rcl    DWORD PTR [eax-0x47],1
  403128:	idiv   DWORD PTR [edi-0x18]
  40312b:	adc    bl,BYTE PTR [ebx+0x2bbf92fe]
  403131:	sbb    DWORD PTR [edi-0x6bba5b6],ebp
  403137:	into   
  403138:	push   eax
  403139:	int    0xb4
  40313b:	aaa    
  40313c:	and    al,0x11
  40313e:	push   0xffffff9a
  403140:	dec    ebx
  403141:	das    
  403142:	lods   al,BYTE PTR gs:[esi]
  403144:	(bad)  
  403145:	aas    
  403146:	push   edi
  403147:	dec    esp
  403148:	adc    edi,DWORD PTR [ecx-0x7e26b27f]
  40314e:	ins    DWORD PTR es:[edi],dx
  40314f:	fs push edi
  403151:	aad    0x94
  403153:	pop    ss
  403154:	out    dx,al
  403155:	push   eax
  403156:	push   eax
  403157:	push   ebx
  403158:	jmp    0xcf01:0x2eed354f
  40315f:	jbe    0x40312e
  403161:	jle    0x40312d
  403163:	push   ds
  403164:	pop    ebx
  403165:	data16 fwait
  403167:	or     al,0xe5
  403169:	mov    edi,0x9ee482ea
  40316e:	les    ebp,FWORD PTR [esi-0x34]
  403171:	pop    edi
  403172:	stos   BYTE PTR es:[edi],al
  403173:	mov    DWORD PTR [ecx-0x69],ebp
  403176:	imul   esi,DWORD PTR [edi-0x2d0e8709],0x1e
  40317d:	sbb    al,0xd0
  40317f:	push   es
  403180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403181:	or     BYTE PTR [edi+edi*1],0xad
  403185:	push   edx
  403186:	jae    0x403122
  403188:	test   BYTE PTR [ecx],bl
  40318a:	sahf   
  40318b:	rcr    BYTE PTR [edi-0x79cf74be],1
  403191:	daa    
  403192:	dec    eax
  403193:	test   eax,0x7fa18b7b
  403198:	leave  
  403199:	les    esi,FWORD PTR ds:0x49d4dd40
  40319f:	cmp    al,0x2d
  4031a1:	shl    edx,cl
  4031a3:	pop    edx
  4031a4:	(bad)  
  4031a5:	ja     0x403183
  4031a7:	hlt    
  4031a8:	xchg   esp,eax
  4031a9:	out    dx,al
  4031aa:	lea    esp,[edx]
  4031ac:	and    BYTE PTR [edx],bl
  4031ae:	pop    eax
  4031af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b0:	nop
  4031b1:	push   esi
  4031b2:	mov    ax,0x8363
  4031b6:	sub    DWORD PTR [edi-0x61],eax
  4031b9:	je     0x403147
  4031bb:	ins    BYTE PTR es:[edi],dx
  4031bc:	mov    al,bh
  4031be:	sub    DWORD PTR [ecx],0x7964ef68
  4031c4:	mov    ds:0x469d7466,eax
  4031c9:	fldenv [esi]
  4031cb:	popf   
  4031cc:	fimul  DWORD PTR [edx]
  4031ce:	dec    DWORD PTR [eax+0x3b]
  4031d1:	and    eax,0xb02ca56d
  4031d6:	ret    0x5bad
  4031d9:	mov    edx,0xe079b17b
  4031de:	sbb    esp,edi
  4031e0:	popf   
  4031e1:	call   ebp
  4031e3:	loop   0x4031d5
  4031e5:	call   0x924:0x76193f3b
  4031ec:	xchg   ebx,eax
  4031ed:	mov    eax,ds:0x849f6239
  4031f2:	xlat   BYTE PTR ds:[ebx]
  4031f3:	imul   esp,DWORD PTR [ecx],0x1ef894c
  4031f9:	aam    0x54
  4031fb:	leave  
  4031fc:	out    0x1,al
  4031fe:	int3   
  4031ff:	mov    eax,ds:0xf4c79cf
  403204:	fidivr WORD PTR [ebx+0x618b5131]
  40320a:	ret    0x2c69
  40320d:	cmc    
  40320e:	xor    eax,0xee3450cb
  403213:	lahf   
  403214:	imul   eax,DWORD PTR [edi+ebx*1-0xb],0x66
  403219:	mov    ebp,0x20de01d1
  40321e:	push   0x60c8aef9
  403223:	or     eax,DWORD PTR [ecx+0x34]
  403226:	mov    ebp,0x19c0b0ea
  40322b:	js     0x4031c7
  40322d:	mov    ebx,0x44365eea
  403232:	not    bh
  403234:	and    cl,BYTE PTR [edi]
  403236:	std    
  403237:	call   0x623fa6ee
  40323c:	mov    edx,0xccfc24e5
  403241:	xchg   ebp,eax
  403242:	int3   
  403243:	scas   al,BYTE PTR es:[edi]
  403244:	in     eax,0xda
  403246:	inc    eax
  403247:	aaa    
  403248:	loop   0x403226
  40324a:	test   eax,0xd68c6376
  40324f:	(bad)  
  403251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403252:	sub    al,dh
  403254:	int    0xc
  403256:	cld    
  403257:	cs das 
  403259:	jbe    0x403202
  40325b:	mov    eax,0xb7be92c
  403260:	loop   0x40326e
  403262:	addr16 lahf 
  403264:	push   ss
  403265:	push   edi
  403266:	dec    esp
  403267:	xor    bh,bl
  403269:	inc    esp
  40326a:	idiv   edi
  40326c:	dec    ebp
  40326d:	push   0x8f41c5a0
  403272:	pop    edi
  403273:	jae    0x403235
  403275:	push   esp
  403276:	mov    dl,0x10
  403278:	shr    ecx,cl
  40327a:	in     eax,0xe7
  40327c:	je     0x40325f
  40327e:	bound  edx,QWORD PTR ds:0xab554d21
  403284:	cmc    
  403285:	stc    
  403286:	js     0x40328a
  403288:	push   esi
  403289:	imul   esi,edx,0xa3ba84a1
  40328f:	stc    
  403290:	lods   eax,DWORD PTR ds:[esi]
  403291:	mov    ebx,0xfc33161c
  403296:	add    al,0xea
  403298:	(bad)  
  40329a:	fcmovne st,st(7)
  40329c:	adc    al,0xd3
  40329e:	shr    DWORD PTR [edi+0x1],0xfd
  4032a2:	nop
  4032a3:	mov    DWORD PTR [ebx+0x1c943d61],edi
  4032a9:	enter  0x9635,0x2c
  4032ad:	sub    DWORD PTR [eax-0x28],edi
  4032b0:	inc    esi
  4032b1:	xor    BYTE PTR ds:0x94ecb404,0xb6
  4032b8:	ret    0xf306
  4032bb:	shl    BYTE PTR [edi-0xd33e9e9],cl
  4032c1:	ret    
  4032c2:	cs (bad) 
  4032c4:	mov    esi,0x4e1b00db
  4032c9:	mov    esp,0xbef3d9a7
  4032ce:	jmp    0xc6767a60
  4032d3:	mov    ds:0xf1dcefea,eax
  4032d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d9:	inc    DWORD PTR [ebp-0x15]
  4032dc:	fsubr  DWORD PTR [eax+0x4a7f3747]
  4032e2:	inc    ebx
  4032e3:	dec    edi
  4032e4:	js     0x40329e
  4032e6:	mov    dl,0x25
  4032e8:	out    0xdd,al
  4032ea:	test   al,0x96
  4032ec:	mov    esp,0x6c478cf0
  4032f1:	aaa    
  4032f2:	dec    edx
  4032f3:	mov    esi,0xee6376b3
  4032f8:	aas    
  4032f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032fa:	xchg   edi,eax
  4032fb:	xchg   edi,eax
  4032fc:	xchg   edx,eax
  4032fd:	cmp    eax,0x60d22021
  403302:	mov    bh,0x89
  403305:	pop    es
  403306:	ret    0xddf0
  403309:	and    DWORD PTR [edi-0x70],0x18
  40330d:	jo     0x403298
  40330f:	sbb    edx,DWORD PTR ds:0xc301f924
  403315:	push   cs
  403316:	mov    WORD PTR [edi],gs
  403318:	shr    DWORD PTR [eax+edi*1],cl
  40331b:	icebp  
  40331c:	mov    al,0xb6
  40331e:	adc    dl,BYTE PTR gs:[ecx+esi*8-0x4abe9473]
  403326:	in     eax,0x7d
  403328:	paddusb mm2,mm3
  40332b:	xor    eax,0xbda4395b
  403330:	mov    dh,0xf
  403332:	shl    DWORD PTR [ecx-0x1],0x6c
  403336:	mov    al,0x69
  403338:	or     BYTE PTR fs:[ebx],ch
  40333b:	daa    
  40333c:	pop    edi
  40333d:	lods   eax,DWORD PTR ds:[esi]
  40333e:	mov    ecx,0x15c91dd9
  403343:	or     al,0xe6
  403345:	dec    esp
  403346:	sbb    al,BYTE PTR [edi]
  403348:	test   al,0x2b
  40334a:	xor    ecx,DWORD PTR [eax-0x3b]
  40334d:	loopne 0x40332e
  40334f:	add    al,0x46
  403351:	outs   dx,DWORD PTR ds:[esi]
  403352:	pop    es
  403353:	ins    BYTE PTR es:[edi],dx
  403354:	inc    edx
  403355:	sbb    eax,0x986d1014
  40335a:	leave  
  40335b:	addr16 jp 0x403373
  40335e:	mov    WORD PTR [eax+eiz*2+0x25],fs
  403362:	adc    edi,DWORD PTR [eax-0x59]
  403365:	sahf   
  403366:	ds or  cl,dl
  403369:	adc    esp,DWORD PTR [ecx+0x68fc77]
  40336f:	dec    ebx
  403370:	and    al,ah
  403372:	cmp    al,0x2f
  403374:	mov    bh,0xc9
  403376:	pop    esi
  403377:	mov    edi,0xaed0f7cb
  40337c:	mov    edi,0xe6795a86
  403381:	sbb    eax,0x1af6db31
  403386:	rol    BYTE PTR [edi+0x1],1
  403389:	fcmovnbe st,st(2)
  40338b:	xchg   edx,eax
  40338c:	ja     0x40331f
  40338e:	xor    DWORD PTR [ecx],edi
  403390:	pop    ss
  403391:	add    al,0x69
  403393:	shl    BYTE PTR [edx-0x70],cl
  403396:	out    dx,al
  403397:	fwait
  403398:	popa   
  403399:	inc    esp
  40339a:	cmovle ecx,DWORD PTR [ecx-0x19]
  40339e:	or     edi,esp
  4033a0:	push   ebx
  4033a1:	push   ss
  4033a2:	pop    edi
  4033a3:	push   edx
  4033a4:	std    
  4033a5:	or     eax,0xd3dc3dca
  4033aa:	xor    DWORD PTR [eax],edx
  4033ac:	loop   0x4033d6
  4033ae:	sahf   
  4033af:	dec    ecx
  4033b0:	lock adc cl,0xda
  4033b4:	fdiv   st,st(1)
  4033b6:	out    dx,al
  4033b7:	loope  0x4033ed
  4033b9:	sbb    cl,BYTE PTR [esi-0x60]
  4033bc:	ins    DWORD PTR es:[edi],dx
  4033bd:	shl    DWORD PTR [ebx-0x59],1
  4033c0:	or     DWORD PTR [ebx-0x51],0x13
  4033c4:	pushf  
  4033c5:	fdiv   QWORD PTR [esi-0x9516160]
  4033cb:	clc    
  4033cc:	cwde   
  4033cd:	sbb    DWORD PTR [edi+0x2f],esp
  4033d0:	aaa    
  4033d1:	or     al,0x8d
  4033d3:	scas   eax,DWORD PTR es:[edi]
  4033d4:	cmp    edi,DWORD PTR [esi]
  4033d6:	retf   0x27dc
  4033d9:	xor    al,0xab
  4033db:	push   edx
  4033dc:	int    0xb6
  4033de:	mov    dl,0x9c
  4033e0:	xor    BYTE PTR [edi+0x48],cl
  4033e3:	cdq    
  4033e4:	leave  
  4033e5:	(bad)  
  4033e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e8:	mov    ebp,0xdfde6024
  4033ed:	xlat   BYTE PTR ds:[ebx]
  4033ee:	cmp    eax,0xe495299c
  4033f3:	mov    edx,0xa3a4407f
  4033f8:	xchg   BYTE PTR ds:[eax+0x66],bh
  4033fc:	add    bl,BYTE PTR [esi-0x10]
  4033ff:	adc    BYTE PTR [esi-0x2e],al
  403402:	lds    ebx,FWORD PTR [ebx]
  403404:	dec    edi
  403405:	(bad)  
  403406:	jmp    0x29a88c6
  40340b:	call   0x84b7:0x8027e2ad
  403412:	mov    ds:0x172d1d1d,eax
  403417:	stc    
  403418:	cs push es
  40341a:	lahf   
  40341b:	cmp    dl,BYTE PTR [edx+0x25]
  40341e:	mov    ecx,0x790d1679
  403423:	es push cs
  403425:	loop   0x40349a
  403427:	in     eax,0x1b
  403429:	iret   
  40342a:	pop    edi
  40342b:	mov    esp,DWORD PTR [esp+ecx*1+0x2bbc9cb7]
  403432:	sbb    al,0x98
  403434:	mov    al,ds:0xf513d0d1
  403439:	ret    
  40343a:	or     DWORD PTR [ebp-0x79],esi
  40343d:	push   es
  40343e:	call   0xc850:0x756ac4f7
  403445:	call   0xdcf3:0xdc3c625
  40344c:	add    BYTE PTR [eax],bl
  40344e:	shr    ah,0xcb
  403451:	inc    ebp
  403452:	out    dx,eax
  403453:	xchg   esp,eax
  403454:	adc    BYTE PTR [edi+0x78],dh
  403457:	and    DWORD PTR [edi+0x134a9c8b],esp
  40345d:	jg     0x4034b3
  40345f:	jns    0x4033e5
  403461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403462:	std    
  403463:	fidivr WORD PTR [eax+0x672b13a4]
  403469:	mov    edi,0xb5a4274a
  40346e:	push   ecx
  40346f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403470:	pusha  
  403471:	loope  0x40348b
  403473:	xor    eax,0x86fedd7e
  403478:	mov    edx,?
  40347a:	sbb    edx,DWORD PTR [eax]
  40347c:	and    al,0x14
  40347e:	adc    BYTE PTR [eax+0x1f216073],0x56
  403485:	mov    ecx,0x46e02a6a
  40348a:	push   esi
  40348b:	mov    edx,0x10726e52
  403490:	jnp    0x403477
  403492:	push   esi
  403493:	hlt    
  403494:	jmp    0xf076a50a
  403499:	push   ecx
  40349a:	imul   ebx,DWORD PTR [ebp-0x77],0xaec62d58
  4034a1:	imul   ebp,esp,0x53811f0e
  4034a7:	call   0x30bb:0xe193a4dc
  4034ae:	faddp  st(3),st
  4034b0:	push   eax
  4034b1:	clc    
  4034b2:	jl     0x403505
  4034b4:	push   eax
  4034b5:	push   cs
  4034b6:	mov    edi,0x87030c5d
  4034bb:	cmc    
  4034bc:	in     eax,dx
  4034bd:	adc    DWORD PTR [edi+0x24a16af],esp
  4034c3:	outs   dx,BYTE PTR ds:[esi]
  4034c4:	sub    al,0x5a
  4034c6:	jge    0x403539
  4034c8:	cmp    BYTE PTR [eax],ch
  4034ca:	aam    0x46
  4034cc:	jno    0x4034c4
  4034ce:	out    0xaa,al
  4034d0:	cmp    esi,DWORD PTR [ecx]
  4034d2:	shl    BYTE PTR [eax-0x357b919c],0x41
  4034d9:	aam    0xbc
  4034db:	mov    WORD PTR [ebx],es
  4034dd:	dec    ecx
  4034de:	adc    ebx,ebx
  4034e0:	bound  ebx,QWORD PTR [edi]
  4034e2:	ja     0x403518
  4034e4:	ins    BYTE PTR es:[edi],dx
  4034e5:	mov    ch,bl
  4034e7:	fidivr WORD PTR [edi-0x27]
  4034ea:	leave  
  4034eb:	or     dl,BYTE PTR [ecx]
  4034ed:	mov    ds:0xff97c060,eax
  4034f2:	cli    
  4034f3:	jae    0x403504
  4034f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034f6:	adc    BYTE PTR [edi],ch
  4034f8:	inc    ecx
  4034f9:	add    ecx,ebp
  4034fb:	(bad)  
  4034fd:	addr16 add ebx,eax
  403500:	mov    ecx,0xe9bb2c9a
  403505:	mov    eax,0xeac3b59
  40350a:	push   ebx
  40350b:	mov    ecx,0xa0120e12
  403510:	add    BYTE PTR ds:0x9e46465c,ah
  403516:	(bad)  
  403517:	popa   
  403518:	fcomp  st(4)
  40351a:	xchg   ebp,eax
  40351b:	add    eax,DWORD PTR [esi+0x7f]
  40351e:	push   ebx
  40351f:	cmp    ecx,DWORD PTR [edx-0x7f]
  403522:	nop
  403523:	daa    
  403524:	and    al,0x77
  403526:	adc    ecx,ebx
  403528:	ja     0x4034c9
  40352a:	dec    eax
  40352b:	clc    
  40352c:	xchg   ecx,eax
  40352d:	mov    ecx,0x18b7f406
  403532:	dec    esi
  403533:	xchg   cl,bh
  403535:	fsub   st(2),st
  403537:	push   ss
  403538:	jp     0x40357b
  40353a:	mov    bh,0x25
  40353c:	aas    
  40353d:	rcr    BYTE PTR [ecx],0xb4
  403540:	pop    edi
  403541:	js     0x4035ab
  403543:	aas    
  403544:	or     DWORD PTR [ebp-0x62],edi
  403547:	scas   eax,DWORD PTR es:[edi]
  403548:	push   ds
  403549:	dec    esi
  40354a:	inc    esp
  40354b:	xlat   BYTE PTR ds:[ebx]
  40354c:	inc    esi
  40354d:	popa   
  40354e:	or     BYTE PTR [eax-0x50f1d9de],al
  403554:	dec    esi
  403555:	rcr    DWORD PTR [ecx],cl
  403557:	cmp    al,BYTE PTR [esi-0x21]
  40355a:	pop    ebp
  40355b:	push   0x70d3cd46
  403560:	xchg   ecx,eax
  403561:	adc    BYTE PTR [ebp+0x32],bl
  403564:	mov    ebx,0x97b74c7e
  403569:	not    BYTE PTR [ecx-0x340f0f3d]
  40356f:	clc    
  403570:	adc    bh,cl
  403572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403573:	(bad)  
  403574:	push   edx
  403575:	sub    DWORD PTR [ebp-0x11],0xffffff80
  403579:	rol    eax,0x73
  40357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40357d:	xchg   ecx,eax
  40357e:	pop    ds
  40357f:	mov    bl,0xe3
  403581:	xlat   BYTE PTR ds:[bx]
  403583:	sbb    bh,dl
  403585:	cmp    ah,cl
  403587:	mov    dh,0xcb
  403589:	in     al,dx
  40358a:	div    al
  40358c:	ret    
  40358d:	add    eax,0xdf3bd3ec
  403592:	out    0x67,al
  403594:	ss aad 0xdf
  403597:	and    DWORD PTR ds:0x2ea9333b,edi
  40359d:	jnp    0x403577
  40359f:	xchg   DWORD PTR [eax],eax
  4035a1:	out    dx,al
  4035a2:	(bad)
  4035a6:	lea    esp,[edi]
  4035a8:	pop    ebx
  4035a9:	dec    esp
  4035aa:	call   0xc95f5ef6
  4035af:	xor    eax,0x89558b35
  4035b4:	idiv   ecx
  4035b6:	pop    edx
  4035b7:	jae    0x4035cb
  4035b9:	jnp    0x403598
  4035bb:	pop    ebp
  4035bc:	push   0xffffffe2
  4035be:	lods   al,BYTE PTR ds:[esi]
  4035bf:	add    ebx,ebp
  4035c1:	std    
  4035c2:	add    BYTE PTR ds:0x51709d1b,cl
  4035c8:	hlt    
  4035c9:	(bad)  [eax+0x3de627e8]
  4035cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d0:	inc    esp
  4035d1:	jge    0x40356c
  4035d3:	or     eax,0x1b2b439a
  4035d8:	out    0x7,eax
  4035da:	int3   
  4035db:	pop    edx
  4035dc:	fisubr DWORD PTR [ebp-0xd0819a9]
  4035e2:	xor    al,0x6c
  4035e4:	xchg   ecx,eax
  4035e5:	mov    ch,0x15
  4035e7:	xlat   BYTE PTR ds:[ebx]
  4035e8:	xchg   ecx,eax
  4035e9:	fistp  DWORD PTR [ebp+0x6]
  4035ec:	pop    ss
  4035ed:	iret   
  4035ee:	out    0xff,eax
  4035f0:	cs pop si
  4035f3:	(bad)  [ecx-0x6d287194]
  4035f9:	mov    ecx,0x879d3e2
  4035fe:	inc    ebx
  4035ff:	jae    0x403610
  403601:	and    bl,BYTE PTR cs:[esi-0x770dc6f9]
  403608:	fstp   TBYTE PTR [eax]
  40360a:	push   ecx
  40360b:	or     eax,0xca23e7e7
  403610:	push   cs
  403611:	enter  0x8554,0xba
  403615:	dec    esp
  403616:	ss xchg esi,eax
  403618:	jp     0x40365b
  40361a:	sti    
  40361b:	arpl   bx,ax
  40361d:	sbb    edx,DWORD PTR [ecx-0x6b4d39db]
  403623:	cmp    eax,DWORD PTR [edx-0x30]
  403626:	div    bh
  403628:	and    eax,0x1fc7e8bf
  40362d:	push   es
  40362e:	hlt    
  40362f:	jmp    0xb49fe59
  403634:	clc    
  403635:	jp     0x403688
  403637:	(bad)  
  403638:	das    
  403639:	mov    edx,?
  40363b:	aad    0x8
  40363d:	jbe    0x6e89d122
  403643:	inc    esp
  403644:	cmp    BYTE PTR [edi-0x7],0x70
  403648:	clc    
  403649:	push   esp
  40364a:	mov    ecx,0x875fbae0
  40364f:	sub    DWORD PTR [ecx-0x67],ebx
  403652:	dec    esi
  403653:	xlat   BYTE PTR ds:[ebx]
  403654:	adc    al,0x61
  403656:	fild   QWORD PTR [ecx+edx*1]
  403659:	sar    DWORD PTR [esi],0xab
  40365c:	daa    
  40365d:	ret    0xf936
  403660:	pop    ebx
  403661:	xchg   ecx,eax
  403662:	push   ebp
  403663:	mov    al,ds:0x726827bc
  403668:	inc    esi
  403669:	xor    ch,dh
  40366b:	aam    0xd
  40366d:	imul   ebx,DWORD PTR [ecx],0x31741f78
  403673:	or     ecx,DWORD PTR [ecx+esi*2]
  403676:	cli    
  403677:	inc    ebp
  403678:	inc    ebp
  403679:	pop    ds
  40367a:	dec    esi
  40367b:	mov    esi,0x6aca6886
  403680:	ins    DWORD PTR es:[edi],dx
  403681:	cmp    al,0x81
  403683:	cmp    esi,DWORD PTR [ebx-0x17]
  403686:	test   bl,0xc7
  403689:	push   0xff7739db
  40368e:	cs scas eax,DWORD PTR es:[edi]
  403690:	xor    ebx,esi
  403692:	dec    edi
  403693:	frstor [ebp-0x4539d11b]
  403699:	pop    ss
  40369a:	push   esp
  40369b:	pop    edi
  40369c:	sub    DWORD PTR [edi-0x3e5ee68d],0xffffffe2
  4036a3:	cmp    BYTE PTR [esi],0xbe
  4036a6:	sahf   
  4036a7:	shl    DWORD PTR [eax+0x5abdb83d],cl
  4036ad:	out    dx,al
  4036ae:	js     0x4036a3
  4036b0:	out    0xaa,eax
  4036b2:	mov    bh,0x41
  4036b4:	push   ds
  4036b5:	(bad)  
  4036b6:	stc    
  4036b7:	lds    esp,FWORD PTR [edx-0x5a]
  4036ba:	outs   dx,BYTE PTR ds:[esi]
  4036bb:	and    bl,BYTE PTR [edi-0x7f09ddaf]
  4036c1:	inc    ecx
  4036c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036c3:	pop    esp
  4036c4:	std    
  4036c5:	push   ss
  4036c6:	sbb    ah,BYTE PTR [esi+esi*1]
  4036c9:	adc    dl,BYTE PTR [ecx+0x61]
  4036cc:	inc    esi
  4036cd:	jl     0x4036df
  4036cf:	xchg   edx,eax
  4036d0:	mov    ecx,0xf16db948
  4036d5:	mov    BYTE PTR [ebx-0x6aba45a8],ch
  4036db:	mov    ds:0xd86dd680,al
  4036e0:	test   esi,eax
  4036e2:	leave  
  4036e3:	int    0x4a
  4036e5:	mov    ebp,0xdbaca0b5
  4036ea:	xor    eax,0xb71e2075
  4036ef:	sub    eax,0xe8481f15
  4036f4:	aam    0x1
  4036f6:	retf   
  4036f7:	mov    ds:0xb7b5874a,eax
  4036fc:	push   ecx
  4036fd:	shr    ecx,cl
  4036ff:	es icebp 
  403701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403702:	dec    edx
  403703:	fs dec edi
  403705:	mov    dl,0xa4
  403707:	mov    esi,0x3152bd48
  40370c:	xlat   BYTE PTR ds:[ebx]
  40370d:	repnz aam 0x83
  403710:	loope  0x4036e4
  403712:	adc    DWORD PTR [ecx-0x67],esp
  403715:	daa    
  403716:	mov    BYTE PTR [ebx-0x56ec2aaf],ah
  40371c:	stc    
  40371d:	loope  0x4036de
  40371f:	pop    ss
  403720:	inc    edx
  403721:	add    eax,0x7f5c5771
  403726:	lods   eax,DWORD PTR ds:[esi]
  403727:	adc    edi,ebp
  403729:	jb     0x4036b3
  40372b:	inc    ecx
  40372c:	push   0xd8b3d1b3
  403731:	sbb    edx,DWORD PTR [edi]
  403733:	adc    DWORD PTR [edi+eax*2+0x605a3652],edi
  40373a:	lahf   
  40373b:	xor    al,0x8f
  40373d:	test   eax,0x814ba7ff
  403742:	shl    BYTE PTR [edi+0x4e],cl
  403745:	je     0x4037c1
  403747:	or     esp,esi
  403749:	mov    ds:0xb48f2dae,al
  40374e:	aam    0xf5
  403750:	sbb    DWORD PTR [ecx],ecx
  403752:	(bad)  
  403753:	push   ebx
  403754:	call   0xca36:0xd981cb53
  40375b:	pusha  
  40375c:	ja     0x403736
  40375e:	xchg   DWORD PTR [eax-0x2b7aaf24],ecx
  403764:	cld    
  403765:	xchg   ebp,eax
  403766:	into   
  403767:	mov    ds:0x1db64e6e,al
  40376c:	sbb    BYTE PTR [edx-0x60],cl
  40376f:	mov    bl,0x20
  403771:	ja     0x4037a7
  403773:	out    dx,eax
  403774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403775:	mov    ds:0x6c4b0a46,al
  40377a:	jae    0x4037ca
  40377c:	mov    BYTE PTR [ebx+0x52],dl
  40377f:	adc    DWORD PTR [ebx],ebp
  403781:	mul    bl
  403783:	xchg   edx,eax
  403784:	bound  edi,QWORD PTR [ebp-0x221726a6]
  40378a:	ss leave 
  40378c:	dec    edi
  40378d:	into   
  40378e:	es sub al,0x16
  403791:	pop    ecx
  403792:	pop    edi
  403793:	bound  edx,QWORD PTR [edi-0x4c1c21bf]
  403799:	pop    es
  40379a:	nop
  40379b:	js     0x40371e
  40379d:	add    bh,ah
  40379f:	ror    BYTE PTR [esi],cl
  4037a1:	cs xchg edi,eax
  4037a3:	inc    edi
  4037a4:	(bad)  
  4037a5:	hlt    
  4037a6:	(bad)  
  4037a8:	lock pop edi
  4037aa:	xchg   ebp,eax
  4037ab:	push   0x26
  4037ad:	push   edx
  4037ae:	ss repz mov ah,0xa5
  4037b2:	fmul   DWORD PTR [edx]
  4037b4:	push   ebx
  4037b5:	mov    al,0x71
  4037b7:	adc    BYTE PTR [edx-0x2b],ch
  4037ba:	dec    eax
  4037bb:	les    esi,FWORD PTR [ebp+0xb]
  4037be:	loope  0x4037fa
  4037c0:	and    ch,bh
  4037c2:	mov    ebp,0x37a3b97b
  4037c7:	std    
  4037c8:	mov    al,ds:0x359c3af9
  4037cd:	mov    ah,0x8b
  4037cf:	test   BYTE PTR [eax+ebx*1-0x74],cl
  4037d3:	shl    BYTE PTR [edi+edx*8],cl
  4037d6:	int3   
  4037d7:	sub    DWORD PTR [ebx+0x692f9351],ebx
  4037dd:	mov    ah,0x90
  4037df:	add    eax,0x2693efa2
  4037e4:	fisubr WORD PTR [ebx+0x12]
  4037e7:	dec    ebx
  4037e8:	or     eax,0x84d778a
  4037ed:	mov    ch,0x74
  4037ef:	scas   al,BYTE PTR es:[edi]
  4037f0:	das    
  4037f1:	int    0xba
  4037f3:	and    eax,0x535e9344
  4037f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f9:	push   ecx
  4037fa:	xor    DWORD PTR [eax+0x64],eax
  4037fd:	outs   dx,DWORD PTR ds:[esi]
  4037fe:	adc    dh,BYTE PTR [ecx-0x32]
  403801:	jecxz  0x40380a
  403803:	test   DWORD PTR [ecx+0x1b],ebp
  403806:	lods   eax,DWORD PTR ds:[esi]
  403807:	jo     0x403808
  403809:	pop    esi
  40380a:	ret    
  40380b:	jo     0x403843
  40380d:	lea    ebp,ds:0x94a06155
  403813:	fcmove st,st(6)
  403815:	in     al,0xb0
  403817:	mov    al,0x9d
  403819:	scas   al,BYTE PTR es:[edi]
  40381a:	and    BYTE PTR [ebx],al
  40381c:	inc    esi
  40381d:	lods   al,BYTE PTR ds:[esi]
  40381e:	sub    bh,BYTE PTR [bp+di]
  403821:	sahf   
  403822:	or     al,0x12
  403824:	mov    edx,DWORD PTR [edx+0x7e]
  403827:	add    ebx,DWORD PTR [ebx+0x2d971037]
  40382d:	jg     0x403855
  40382f:	outs   dx,BYTE PTR ds:[esi]
  403830:	mov    edx,0x60512daf
  403835:	sbb    ebp,edx
  403837:	clc    
  403838:	into   
  403839:	pushf  
  40383a:	cmp    BYTE PTR [edi-0x58],cl
  40383d:	xor    DWORD PTR [eax+0x5445b8f3],ebx
  403843:	bsf    esi,DWORD PTR ss:[eax+0x6ad9e9d9]
  40384b:	mov    esp,0x232a63eb
  403850:	push   ds
  403851:	stc    
  403852:	xor    BYTE PTR [edx-0x60ecd8f8],ah
  403858:	pop    esi
  403859:	retf   0x5831
  40385c:	push   edx
  40385d:	dec    ebp
  40385e:	sub    BYTE PTR [esp+esi*1],dl
  403861:	stc    
  403862:	xor    DWORD PTR [esi],ecx
  403864:	mov    ch,0x19
  403866:	and    eax,0x69e29f61
  40386b:	pop    ebp
  40386c:	mov    ebp,edi
  40386e:	mov    ebp,0x620d203b
  403873:	and    al,dl
  403875:	mov    dh,0xec
  403877:	push   esp
  403878:	sub    DWORD PTR [eax],edx
  40387a:	cmovne ebp,DWORD PTR [edi]
  40387d:	ins    BYTE PTR es:[edi],dx
  40387e:	lock jbe 0x4038b3
  403881:	call   0x4934:0x2cb96dfe
  403888:	sahf   
  403889:	pop    ecx
  40388a:	out    dx,al
  40388b:	xchg   esp,eax
  40388c:	dec    edi
  40388d:	sub    esp,DWORD PTR [ebp-0x61]
  403890:	arpl   WORD PTR [esi],di
  403892:	push   ebp
  403893:	mov    dl,0x3c
  403895:	(bad)  
  403896:	dec    ebp
  403897:	mov    es,WORD PTR [ebp+0x581fc8d1]
  40389d:	jge    0x403824
  40389f:	sbb    eax,0x21839812
  4038a4:	mov    ecx,0x63e0c667
  4038a9:	cmp    esp,DWORD PTR [ecx-0x47]
  4038ac:	fistp  DWORD PTR [esi-0x42b6f88d]
  4038b2:	pop    ebx
  4038b3:	ins    DWORD PTR es:[edi],dx
  4038b4:	out    dx,al
  4038b5:	retf   0xc21b
  4038b8:	ss enter 0xfa55,0x69
  4038bd:	inc    eax
  4038be:	and    eax,DWORD PTR [edi+ecx*2+0x15128edd]
  4038c5:	and    BYTE PTR [esi],ch
  4038c7:	and    DWORD PTR [ebp+ebx*1+0x1b2041a1],ebp
  4038ce:	sti    
  4038cf:	mov    al,0x8f
  4038d1:	pop    ebp
  4038d2:	push   es
  4038d3:	mov    ?,edx
  4038d5:	(bad)  [ecx+0x789dcbe0]
  4038db:	ins    BYTE PTR es:[edi],dx
  4038dc:	and    DWORD PTR ds:0xbae26947,ecx
  4038e2:	mov    ch,0x5a
  4038e4:	cmp    BYTE PTR [eax],dl
  4038e6:	or     bh,cl
  4038e8:	addr16 cmc 
  4038ea:	clc    
  4038eb:	pusha  
  4038ec:	xchg   DWORD PTR [ebx],esp
  4038ee:	dec    edi
  4038ef:	outs   dx,BYTE PTR ds:[esi]
  4038f0:	jbe    0x4038c4
  4038f2:	icebp  
  4038f3:	pop    ds
  4038f4:	in     eax,dx
  4038f5:	call   DWORD PTR [ebp+0x11c24f90]
  4038fb:	sar    DWORD PTR [edx+eiz*1+0x43aaeef],1
  403902:	pop    ebx
  403903:	sub    DWORD PTR [edi-0x4b5e4fdc],0xffffffcc
  40390a:	and    eax,0xc897f107
  40390f:	mov    edx,0x255836f0
  403914:	inc    ecx
  403915:	push   edi
  403916:	adc    esi,ecx
  403918:	mov    es,WORD PTR [ebx-0x6e]
  40391b:	xlat   BYTE PTR ds:[ebx]
  40391c:	jb     0x4038c2
  40391e:	enter  0x78dd,0x69
  403922:	les    ecx,FWORD PTR [ecx]
  403924:	push   cs
  403925:	add    BYTE PTR [ebp-0x20ec738d],ch
  40392b:	pop    eax
  40392c:	add    DWORD PTR [ecx+0x20070f3b],eax
  403932:	stos   DWORD PTR es:[edi],eax
  403933:	stos   DWORD PTR es:[edi],eax
  403934:	cmp    cl,BYTE PTR [esi-0x2e]
  403937:	ret    0x76ba
  40393a:	dec    eax
  40393b:	jecxz  0x4039b8
  40393d:	shl    BYTE PTR [ebx+0x23],1
  403940:	inc    ebx
  403941:	std    
  403942:	fld    st(3)
  403944:	stos   DWORD PTR es:[edi],eax
  403945:	pop    eax
  403946:	out    dx,eax
  403947:	pop    ebx
  403948:	fwait
  403949:	ret    
  40394a:	imul   edx,esi,0xedeb8f12
  403950:	sbb    al,0x7f
  403952:	push   0x2394eccf
  403957:	dec    eax
  403958:	xchg   edi,eax
  403959:	xchg   ebx,eax
  40395a:	and    dl,ch
  40395c:	xor    ah,BYTE PTR [eax]
  40395e:	xchg   BYTE PTR [esp+eiz*8],bl
  403961:	mov    al,ds:0x776d3d2c
  403966:	mov    eax,ds:0xa380181c
  40396b:	(bad)  
  40396c:	in     al,dx
  40396d:	mov    eax,0xa300f246
  403972:	aas    
  403973:	xor    BYTE PTR [eax-0xa150cda],dh
  403979:	scas   eax,DWORD PTR es:[edi]
  40397a:	mov    ah,0xaf
  40397c:	sub    eax,0xc745a838
  403981:	sub    al,0xf7
  403983:	adc    al,BYTE PTR [ebp-0x57173e56]
  403989:	fcomp  QWORD PTR [ebp+0xa44df1e]
  40398f:	or     eax,0xf756e3b
  403994:	out    dx,al
  403995:	pop    edi
  403996:	or     al,0xe7
  403998:	push   ecx
  403999:	in     eax,dx
  40399a:	add    DWORD PTR [ebp+ebx*4-0x4d],esp
  40399e:	dec    ecx
  40399f:	mov    BYTE PTR [ebx+esi*8-0x3b],al
  4039a3:	aad    0x51
  4039a5:	aam    0x83
  4039a7:	sub    DWORD PTR [edi+0x7b],ebx
  4039aa:	push   ss
  4039ab:	shl    DWORD PTR [edi],0xe
  4039ae:	mov    edi,0x33b5fe8c
  4039b3:	sti    
  4039b4:	xor    cl,BYTE PTR [edi+ebx*4]
  4039b7:	js     0x40396f
  4039b9:	cld    
  4039ba:	stos   BYTE PTR es:[edi],al
  4039bb:	stos   BYTE PTR es:[edi],al
  4039bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039bd:	pop    ebx
  4039be:	aam    0xb0
  4039c0:	imul   ebx,DWORD PTR [eax],0x82ff694a
  4039c6:	push   cs
  4039c7:	push   ss
  4039c8:	jmp    0x4039a5
  4039ca:	dec    ebp
  4039cb:	jo     0x4039e2
  4039cd:	xor    ebx,DWORD PTR [ebp-0x7e889a44]
  4039d3:	mov    ebp,0xf8d21631
  4039d8:	push   ebp
  4039d9:	in     eax,0xaa
  4039db:	leave  
  4039dc:	xor    DWORD PTR [eax-0x1f0832a2],esi
  4039e2:	cmp    ebp,esi
  4039e4:	adc    ah,BYTE PTR [esi]
  4039e6:	pop    ebp
  4039e7:	out    0x3a,eax
  4039e9:	cmp    al,0x33
  4039eb:	jp     0x4039a6
  4039ed:	sub    eax,0x80f639de
  4039f2:	test   DWORD PTR [edx],0x9447861f
  4039f8:	inc    edi
  4039f9:	call   0x1ee0d3ca
  4039fe:	scas   al,BYTE PTR es:[edi]
  4039ff:	xchg   esi,eax
  403a00:	lods   eax,DWORD PTR ds:[esi]
  403a01:	fnsave [edx+ecx*2+0x13]
  403a05:	std    
  403a06:	rol    BYTE PTR [eax],0x87
  403a09:	mov    esi,0x1509ae58
  403a0e:	pop    ecx
  403a0f:	test   DWORD PTR [ecx+0x73],0xc76ec7db
  403a16:	ins    DWORD PTR es:[edi],dx
  403a17:	(bad)  
  403a18:	cmp    al,0x99
  403a1a:	sar    cl,cl
  403a1c:	nop
  403a1d:	das    
  403a1e:	icebp  
  403a1f:	cmp    al,BYTE PTR [ebx-0x5eb55ee1]
  403a25:	mov    ebx,0xb0743353
  403a2a:	jle    0x403a18
  403a2c:	push   es
  403a2d:	pusha  
  403a2e:	stos   BYTE PTR es:[edi],al
  403a2f:	push   esp
  403a30:	jmp    0x8aafee82
  403a35:	sub    cl,BYTE PTR [eax+ecx*4]
  403a38:	xchg   BYTE PTR [ebp-0x5c],cl
  403a3b:	ret    0x2dd
  403a3e:	test   BYTE PTR [ecx],0x71
  403a41:	nop
  403a42:	add    bl,BYTE PTR [edi]
  403a44:	push   0xffffffe6
  403a46:	shr    DWORD PTR [edx+0x5ac01db],0x21
  403a4d:	sub    al,0x69
  403a4f:	loope  0x4039f5
  403a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a52:	ret    
  403a53:	(bad)  
  403a55:	add    dh,BYTE PTR [eax]
  403a57:	cmp    BYTE PTR [edx-0x502d8d0b],bl
  403a5d:	jle    0x403a86
  403a5f:	push   0xb2efc1cd
  403a64:	lea    esi,[esi+eiz*8+0x4e]
  403a68:	stos   DWORD PTR es:[edi],eax
  403a69:	aad    0x72
  403a6b:	adc    DWORD PTR [ebp-0x2795d42f],ecx
  403a71:	lds    esi,FWORD PTR [edi]
  403a73:	lods   al,BYTE PTR ds:[esi]
  403a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a75:	outs   dx,BYTE PTR ds:[esi]
  403a76:	or     eax,0xfe370094
  403a7b:	rcl    DWORD PTR [ebx+eax*1-0x3c],cl
  403a7f:	es mov esi,0xc5c9eae3
  403a85:	inc    eax
  403a86:	outs   dx,BYTE PTR ds:[esi]
  403a87:	jo     0x403a18
  403a89:	mov    cr1,ebx
  403a8c:	sti    
  403a8d:	mov    dl,0xe6
  403a8f:	xchg   esp,edx
  403a91:	das    
  403a92:	icebp  
  403a93:	out    0x60,al
  403a95:	int    0x3a
  403a97:	neg    BYTE PTR [edi+0x13c786c6]
  403a9d:	xchg   ebp,eax
  403a9e:	(bad)  
  403aa0:	pop    ds
  403aa1:	mov    al,0x2a
  403aa3:	or     eax,0x804215b7
  403aa8:	inc    ecx
  403aa9:	imul   ecx,DWORD PTR [edi],0xffffffc9
  403aac:	jno    0x403a76
  403aae:	ror    DWORD PTR gs:[ecx-0x7a748f5c],cl
  403ab5:	sbb    BYTE PTR [esi+eax*4-0x201ce1a2],bh
  403abc:	ds add al,0x52
  403abf:	push   cs
  403ac0:	scas   eax,DWORD PTR es:[edi]
  403ac1:	mov    ds:0x899a8e9a,al
  403ac6:	call   DWORD PTR [ebx+edx*2+0x3b449cdc]
  403acd:	call   0xc2cc:0xa115155
  403ad4:	lea    ebx,[ecx-0x16]
  403ad7:	gs pop ebp
  403ad9:	repnz mov WORD PTR [eax-0x13],fs
  403add:	loopne 0x403b16
  403adf:	stc    
  403ae0:	out    dx,al
  403ae1:	cs popa 
  403ae3:	mov    ah,0x3a
  403ae5:	push   es
  403ae6:	lea    esi,[ebx+0x15dead17]
  403aec:	and    bl,BYTE PTR [edx+edx*4+0x54daa0b]
  403af3:	mov    ebp,ecx
  403af5:	fdiv   DWORD PTR [esi-0x32fb9b2c]
  403afb:	cld    
  403afc:	jmp    0x403ae3
  403afe:	mov    esi,0x77d840b1
  403b03:	call   FWORD PTR [esi]
  403b05:	xchg   ebx,eax
  403b06:	bnd jne 0x403b1c
  403b09:	mov    esp,0xe2a0ec5a
  403b0e:	inc    ebp
  403b0f:	jmp    0x5f15:0x14af0a65
  403b16:	sbb    al,0x6b
  403b18:	xchg   BYTE PTR [ecx+0x29acd467],dl
  403b1e:	cmp    DWORD PTR [edi-0x7dff8037],ebx
  403b24:	ret    
  403b25:	xor    eax,0xc1f10f97
  403b2a:	mov    cl,0xb2
  403b2c:	dec    ecx
  403b2d:	and    eax,0xc79be9e4
  403b32:	test   al,0xf
  403b34:	adc    edi,esp
  403b36:	es xor al,0x68
  403b39:	xchg   BYTE PTR [edx],bh
  403b3b:	retf   
  403b3c:	out    dx,al
  403b3d:	std    
  403b3e:	retf   
  403b3f:	dec    esp
  403b40:	inc    ebp
  403b41:	frstor [edi-0x1bf83872]
  403b47:	push   eax
  403b48:	ret    0x6c36
  403b4b:	xchg   esp,eax
  403b4c:	js     0x403b5f
  403b4e:	xor    DWORD PTR [edi+ebp*1-0x34043a6d],esp
  403b55:	jae    0x403b30
  403b57:	loopne 0x403bd3
  403b59:	es xchg esp,eax
  403b5b:	dec    edx
  403b5c:	push   esi
  403b5d:	popa   
  403b5e:	mov    edi,0x1280dd2
  403b63:	out    dx,eax
  403b64:	sub    bh,BYTE PTR [edi-0x5b]
  403b67:	enter  0xbe83,0xd3
  403b6b:	inc    esp
  403b6c:	and    al,bh
  403b6e:	push   ecx
  403b6f:	push   edx
  403b70:	dec    edx
  403b71:	fs js  0x403b09
  403b74:	xchg   ebp,eax
  403b75:	jmp    0xe322:0x99deed59
  403b7c:	pop    ds
  403b7d:	enter  0x3e5e,0x71
  403b81:	ret    
  403b82:	cwde   
  403b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b84:	lods   al,BYTE PTR ds:[esi]
  403b85:	ins    BYTE PTR es:[edi],dx
  403b86:	(bad)  
  403b87:	ja     0x403b6f
  403b89:	sbb    eax,0xe0cf9d35
  403b8e:	dec    eax
  403b8f:	add    eax,0x3c9ac5e8
  403b94:	dec    esi
  403b95:	xchg   ebx,eax
  403b96:	mov    edx,0xca919be3
  403b9b:	aam    0x76
  403b9d:	cmc    
  403b9e:	fld    TBYTE PTR [ebx+ebx*4]
  403ba1:	and    DWORD PTR [edx],0x1a
  403ba4:	add    al,0x30
  403ba6:	iret   
  403ba7:	mov    ds:0x1110c1,al
  403bac:	stos   BYTE PTR es:[edi],al
  403bad:	jbe    0x403c07
  403baf:	test   al,0xda
  403bb1:	pusha  
  403bb2:	scas   eax,DWORD PTR es:[edi]
  403bb3:	dec    ebx
  403bb4:	test   DWORD PTR [edi+0x6c30d368],esi
  403bba:	sti    
  403bbb:	aam    0xc5
  403bbd:	pop    edi
  403bbe:	xchg   ebx,eax
  403bbf:	pop    edx
  403bc0:	jp     0x403c05
  403bc2:	repz or DWORD PTR [edx+0x18fb52b4],0xffffffb3
  403bca:	mov    ds:0xdfa47790,al
  403bcf:	add    ebx,DWORD PTR [esi]
  403bd1:	popf   
  403bd2:	dec    eax
  403bd3:	mov    ebp,0x7d03a6ad
  403bd8:	arpl   WORD PTR [edi-0x2b],ax
  403bdb:	das    
  403bdc:	xor    eax,0x2261452b
  403be1:	xchg   esi,eax
  403be2:	add    bl,BYTE PTR [edx]
  403be4:	mov    dl,0x51
  403be6:	inc    esp
  403be7:	cmp    al,0x62
  403be9:	arpl   bp,bp
  403beb:	push   ebp
  403bec:	adc    eax,0x96c50fee
  403bf1:	inc    ecx
  403bf2:	dec    eax
  403bf3:	and    edx,ecx
  403bf5:	or     dl,BYTE PTR ds:0xfd29d7c8
  403bfb:	lods   al,BYTE PTR ds:[esi]
  403bfc:	inc    esi
  403bfd:	rol    DWORD PTR gs:[ebx],0x14
  403c01:	sub    ecx,DWORD PTR [esi]
  403c03:	xchg   edi,eax
  403c04:	fld    DWORD PTR [eax+0x7b]
  403c07:	xchg   ebx,eax
  403c08:	dec    eax
  403c09:	adc    dh,BYTE PTR [eax+eiz*8+0x4093d86a]
  403c10:	fdivr  DWORD PTR [ebx-0x26ca3b98]
  403c16:	jbe    0x403bcb
  403c18:	je     0x403bae
  403c1a:	jmp    0x9c85:0xbcbc45c7
  403c21:	clc    
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x1fdd8915
  403dc4:	or     al,0x53
  403dc6:	aas    
  403dc7:	dec    ebx
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x35
  403dd0:	mov    cl,BYTE PTR [esi-0x38]
  403dd3:	cdq    
  403dd4:	xor    eax,ebx
  403dd6:	leave  
  403dd7:	in     eax,dx
  403dd8:	hlt    
  403dd9:	das    
  403dda:	dec    eax
  403ddb:	inc    esi
  403ddc:	lea    edx,[edx*4-0x4e88e61b]
  403de3:	cmp    eax,0x538e9eae
  403de8:	adc    eax,0x5e048b08
  403ded:	mov    edx,0xbf457f33
  403df2:	pushf  
  403df3:	xor    al,0x6
  403df5:	pop    edi
  403df6:	or     DWORD PTR [eax],ebx
  403df8:	stc    
  403df9:	adc    BYTE PTR fs:[ecx],0x45
  403dfd:	dec    ebp
  403dfe:	or     DWORD PTR [edx-0x49a64d81],ebp
  403e04:	lods   eax,DWORD PTR ds:[esi]
  403e05:	js     0x403d99
  403e07:	in     eax,dx
  403e08:	mov    bl,0x6e
  403e0a:	fild   WORD PTR [eax]
  403e0c:	neg    BYTE PTR [ebx+0x5d2a962d]
  403e12:	mov    BYTE PTR [ecx-0x17ad04c],ch
  403e18:	sub    BYTE PTR [ecx+0x61],bh
  403e1b:	in     eax,0xac
  403e1d:	jo     0x403e6a
  403e1f:	enter  0xbecf,0x38
  403e23:	mov    eax,eax
  403e25:	and    eax,0x4929b3e8
  403e2a:	pop    edx
  403e2b:	sub    DWORD PTR [edi-0x3f5cc0af],edi
  403e31:	jmp    0x33d0:0x6752ac
  403e38:	aas    
  403e39:	mov    ebx,0x48f0fa43
  403e3e:	ds or  eax,0xfa2406bf
  403e44:	xchg   ebx,eax
  403e45:	stos   BYTE PTR es:[edi],al
  403e46:	ficomp DWORD PTR [eax-0x41]
  403e49:	jbe    0x403deb
  403e4b:	cmp    eax,0xb82754ad
  403e50:	rol    BYTE PTR [ebx+0x46],1
  403e53:	xchg   esp,eax
  403e54:	xchg   esi,eax
  403e55:	rol    DWORD PTR [ebp+0x72d1e524],1
  403e5b:	not    BYTE PTR [ecx+0x22f37e0c]
  403e61:	js     0x403ea1
  403e63:	sar    esp,1
  403e65:	shl    DWORD PTR [edx-0x68],1
  403e68:	stc    
  403e69:	test   al,0x30
  403e6b:	popf   
  403e6c:	stos   BYTE PTR es:[edi],al
  403e6d:	xchg   edi,eax
  403e6e:	lods   al,BYTE PTR ds:[esi]
  403e6f:	dec    ecx
  403e70:	mov    al,ds:0xd9aed8ce
  403e75:	xchg   edx,eax
  403e76:	inc    esi
  403e77:	test   BYTE PTR [ecx+edx*4-0x5efa9712],bl
  403e7e:	scas   al,BYTE PTR es:[edi]
  403e7f:	(bad)  
  403e80:	leave  
  403e81:	dec    esp
  403e82:	dec    ecx
  403e83:	clc    
  403e84:	or     edx,DWORD PTR ds:0x57807cd5
  403e8a:	loope  0x403eaf
  403e8c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403e8e:	jecxz  0x403e3b
  403e90:	les    ebp,FWORD PTR [ecx+0x5419b8a2]
  403e96:	mov    al,ds:0xd299c63a
  403e9b:	aam    0x54
  403e9d:	mov    DWORD PTR [ebp+ebp*1-0x6ef33f87],0x89285ae7
  403ea8:	les    esp,FWORD PTR cs:[ebx-0x6c4c0e51]
  403eaf:	jl     0x403e92
  403eb1:	test   al,dh
  403eb3:	xor    cl,ch
  403eb5:	xor    BYTE PTR [eax],bh
  403eb7:	push   ss
  403eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eb9:	xor    al,0xd3
  403ebb:	push   es
  403ebc:	cwde   
  403ebd:	pop    ds
  403ebe:	pop    edx
  403ebf:	lea    ebp,[edi-0x2a58c75b]
  403ec5:	popf   
  403ec6:	sub    ecx,ebp
  403ec8:	jo     0x403efb
  403eca:	fdivr  QWORD PTR [edi-0x12ef540e]
  403ed0:	rol    DWORD PTR [edx+eiz*2],cl
  403ed3:	leave  
  403ed4:	jbe    0x403e87
  403ed6:	test   eax,0xa26ce8a7
  403edb:	push   ecx
  403edc:	dec    ebx
  403edd:	or     cl,BYTE PTR [eax-0x53]
  403ee0:	fs cwde 
  403ee2:	test   DWORD PTR [esi-0x36],ebx
  403ee5:	inc    ebx
  403ee6:	mov    esi,DWORD PTR [esi+0x34f9eb07]
  403eec:	rol    dh,1
  403eee:	adc    al,0x7c
  403ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef1:	xchg   BYTE PTR [ecx+ebp*1+0x6],ah
  403ef5:	xor    cl,BYTE PTR [ebx+0x146b06cf]
  403efb:	or     BYTE PTR [ecx+0x768aee3a],0xb8
  403f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f03:	outs   dx,DWORD PTR ds:[esi]
  403f04:	mov    eax,ds:0xfa7d238f
  403f09:	lods   eax,DWORD PTR ds:[esi]
  403f0a:	shl    BYTE PTR [edx],cl
  403f0c:	ror    BYTE PTR [eax-0x590e16a1],cl
  403f12:	xchg   ebp,eax
  403f13:	xchg   edx,eax
  403f14:	push   ebp
  403f15:	fisub  WORD PTR [ecx+0x1b4c9c4]
  403f1b:	mov    esi,ebx
  403f1d:	mov    cl,0x19
  403f1f:	rcr    ch,cl
  403f21:	fisttp WORD PTR [esi*1+0x6acf0ccd]
  403f28:	jle    0x403f3d
  403f2a:	pop    ds
  403f2b:	jnp    0x403ed1
  403f2d:	jbe    0x403f90
  403f2f:	sar    BYTE PTR [edx-0x6ca9575e],cl
  403f35:	push   cs
  403f36:	cld    
  403f37:	pop    edi
  403f38:	push   cs
  403f39:	push   eax
  403f3a:	punpckldq mm4,mm6
  403f3d:	pop    ecx
  403f3e:	add    ebp,DWORD PTR [esi+0x70357fb8]
  403f44:	push   ecx
  403f45:	jae    0x403f56
  403f47:	popf   
  403f48:	call   0x7652:0xf47c5360
  403f4f:	cmc    
  403f50:	lods   al,BYTE PTR ds:[esi]
  403f51:	push   esp
  403f52:	lds    eax,FWORD PTR [edi+ebp*2-0x56]
  403f56:	push   0xffffffcf
  403f58:	or     esi,DWORD PTR [edi+0x43d2b4ad]
  403f5e:	sbb    al,0x76
  403f60:	cmp    ecx,edi
  403f62:	mov    esi,?
  403f64:	ins    DWORD PTR es:[edi],dx
  403f65:	sbb    BYTE PTR [ebx+0x2b],bh
  403f68:	es mov eax,0x5821255
  403f6e:	das    
  403f6f:	das    
  403f70:	pop    ebx
  403f71:	seta   BYTE PTR [edi]
  403f74:	mov    dh,0x7a
  403f76:	push   esp
  403f77:	pop    eax
  403f78:	adc    eax,0xa085c57f
  403f7d:	dec    edx
  403f7e:	mov    bh,0xcb
  403f80:	cmp    DWORD PTR [esi-0x73],ebx
  403f83:	mov    ecx,0xb550f6d1
  403f88:	in     al,0x0
  403f8a:	xchg   ebx,eax
  403f8b:	sub    DWORD PTR [esi+0x7b906d15],0x10
  403f92:	jnp    0x403f71
  403f94:	pusha  
  403f95:	je     0x404016
  403f97:	int3   
  403f98:	pop    ds
  403f99:	or     eax,0xe6b0819c
  403f9e:	stos   BYTE PTR es:[edi],al
  403f9f:	pop    ebp
  403fa0:	jns    0x403f5d
  403fa2:	pusha  
  403fa3:	and    al,0x3a
  403fa5:	aad    0xd5
  403fa7:	mov    al,0xac
  403fa9:	rol    DWORD PTR [ebx-0x6eb00ba6],0xf
  403fb0:	dec    edx
  403fb1:	and    cl,ah
  403fb3:	jmp    0xf5c67f0d
  403fb8:	push   esp
  403fb9:	add    DWORD PTR [ebp-0x1e],edi
  403fbc:	lahf   
  403fbd:	xlat   BYTE PTR ds:[ebx]
  403fbe:	in     al,dx
  403fbf:	add    eax,DWORD PTR [esi+ecx*2]
  403fc2:	sbb    ebp,DWORD PTR [eax]
  403fc4:	gs clc 
  403fc6:	shr    DWORD PTR [esi+eax*4],0xad
  403fca:	pop    esi
  403fcb:	or     BYTE PTR [ebp-0x3b],bl
  403fce:	sub    BYTE PTR [eax-0x594d344e],dl
  403fd4:	sub    ecx,DWORD PTR [esi]
  403fd6:	ret    
  403fd7:	pop    ds
  403fd8:	dec    ecx
  403fd9:	xchg   edx,eax
  403fda:	lods   eax,DWORD PTR ds:[esi]
  403fdb:	push   esi
  403fdc:	loopne 0x404038
  403fde:	xor    eax,DWORD PTR [ebp+eax*2-0x66]
  403fe2:	outs   dx,DWORD PTR ds:[esi]
  403fe3:	data16 jo 0x404005
  403fe6:	xchg   ecx,eax
  403fe7:	jg     0x403f8e
  403fe9:	adc    cl,ch
  403feb:	ins    DWORD PTR es:[edi],dx
  403fec:	mov    ch,bh
  403fee:	aad    0x2e
  403ff0:	pop    edi
  403ff1:	jp     0x40401b
  403ff3:	mov    DWORD PTR [edi],0xfc298d23
  403ff9:	mov    ss,edi
  403ffb:	ret    0xd545
  403ffe:	cwde   
  403fff:	out    dx,al
  404000:	and    dh,BYTE PTR gs:0xa623b223
  404007:	jbe    0x404077
  404009:	and    ch,cl
  40400b:	stos   DWORD PTR es:[edi],eax
  40400c:	cmp    al,0x54
  40400e:	loop   0x403fff
  404010:	retf   
  404011:	push   ebx
  404012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404013:	pop    ss
  404014:	xor    al,0x75
  404016:	add    dl,bl
  404018:	jb     0x40403b
  40401a:	mov    esi,0x7f6609dc
  40401f:	mov    WORD PTR [ebx-0x8d36cab],?
  404025:	pop    ebx
  404026:	(bad)  
  404028:	or     eax,0x39efd053
  40402d:	not    BYTE PTR [eax+0xc9a56e3]
  404033:	xor    al,0xb1
  404035:	mov    al,0xb7
  404037:	repnz ins DWORD PTR es:[edi],dx
  404039:	sub    al,0xa4
  40403b:	scas   al,BYTE PTR es:[edi]
  40403c:	cdq    
  40403d:	pusha  
  40403e:	ror    BYTE PTR [edi+edi*2],1
  404041:	fwait
  404042:	inc    ebx
  404043:	outs   dx,DWORD PTR ds:[esi]
  404044:	xchg   esp,eax
  404045:	daa    
  404046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404047:	lea    esp,[edi]
  404049:	stc    
  40404a:	xchg   ecx,eax
  40404b:	loope  0x4040b3
  40404d:	sahf   
  40404e:	xchg   ah,dl
  404050:	dec    ecx
  404051:	push   es
  404052:	sub    cl,bh
  404054:	(bad)  
  404055:	dec    esi
  404056:	push   ebx
  404057:	fdivr  st(6),st
  404059:	xchg   esp,eax
  40405a:	mov    dh,0x49
  40405c:	sti    
  40405d:	jmp    0x40406d
  40405f:	pop    ecx
  404060:	(bad)  
  404061:	outs   dx,BYTE PTR ds:[esi]
  404062:	push   es
  404063:	(bad)  
  404064:	scas   al,BYTE PTR es:[edi]
  404065:	fisubr DWORD PTR [edx]
  404067:	dec    edx
  404068:	xchg   edx,eax
  404069:	add    esi,DWORD PTR [ebx]
  40406b:	pushf  
  40406c:	cli    
  40406d:	push   ss
  40406e:	push   eax
  40406f:	out    0x6e,eax
  404071:	jo     0x4040d3
  404073:	call   0x57b5:0xd915f20b
  40407a:	js     0x4040c8
  40407c:	xor    al,0xf7
  40407e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40407f:	dec    esi
  404080:	ins    BYTE PTR es:[edi],dx
  404081:	add    al,bh
  404083:	pop    ebp
  404084:	arpl   WORD PTR [eax+eax*4+0x3f],cx
  404088:	and    DWORD PTR [edx],0xc2aceb99
  40408e:	int    0xa9
  404090:	push   ebp
  404091:	adc    eax,0x59142db5
  404096:	scas   al,BYTE PTR es:[edi]
  404097:	ror    bl,cl
  404099:	or     BYTE PTR [ebp+eax*4-0x45],al
  40409d:	xor    eax,0x9a804fb2
  4040a2:	cmp    cl,dl
  4040a4:	jg     0x404083
  4040a6:	es inc edi
  4040a8:	cmp    dh,BYTE PTR [eax-0x77]
  4040ab:	pop    esi
  4040ac:	pop    ebp
  4040ad:	jp     0x40411d
  4040af:	and    DWORD PTR [edx],esp
  4040b1:	xchg   ebp,eax
  4040b2:	mov    ecx,0x1f5bd0bb
  4040b7:	add    ah,dh
  4040b9:	sbb    al,0x9d
  4040bb:	test   al,0x65
  4040bd:	xchg   ebp,eax
  4040be:	jge    0x4040f1
  4040c0:	sub    BYTE PTR [edx],bh
  4040c2:	jg     0x40410f
  4040c4:	pusha  
  4040c5:	retf   
  4040c6:	sbb    bl,BYTE PTR [edi]
  4040c8:	push   ss
  4040c9:	jb     0x40409b
  4040cb:	and    edi,DWORD PTR [edi-0x6e]
  4040ce:	jg     0x404080
  4040d0:	jne    0x404148
  4040d2:	dec    eax
  4040d3:	push   ecx
  4040d4:	sbb    esp,DWORD PTR [ecx]
  4040d6:	push   edx
  4040d7:	fwait
  4040d8:	xchg   DWORD PTR [ebp-0x15],eax
  4040db:	pop    ebx
  4040dc:	aaa    
  4040dd:	out    dx,al
  4040de:	int    0x2a
  4040e0:	xor    DWORD PTR [ebp-0x1c2a628c],ebx
  4040e6:	adc    dl,BYTE PTR [edx]
  4040e8:	sbb    BYTE PTR [edi],bh
  4040ea:	dec    esp
  4040eb:	xor    eax,0x22c2a2cf
  4040f0:	mov    bl,0xe0
  4040f2:	pop    ebp
  4040f3:	adc    eax,0xdc825bb0
  4040f8:	sub    dh,BYTE PTR [eax]
  4040fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040fb:	cmp    ebx,DWORD PTR [edx]
  4040fd:	shl    BYTE PTR [esp+eax*2+0x14],cl
  404101:	jo     0x4040b2
  404103:	in     eax,0x88
  404105:	rcr    DWORD PTR [edi-0x7a],0x2d
  404109:	retf   
  40410a:	dec    ecx
  40410b:	bound  ebp,QWORD PTR [edi]
  40410d:	jle    0x4040d4
  40410f:	adc    al,0x8a
  404111:	aas    
  404112:	aaa    
  404113:	cmc    
  404114:	mov    bh,0x8
  404116:	es mov edi,0x5ce53c83
  40411c:	and    eax,0xedd0210a
  404121:	adc    al,0x66
  404123:	and    esp,DWORD PTR [edx-0x78]
  404126:	inc    esp
  404127:	or     ecx,DWORD PTR [eax-0xa822ebb]
  40412d:	into   
  40412e:	pop    ds
  40412f:	stos   DWORD PTR es:[edi],eax
  404130:	cmp    DWORD PTR [esp+edi*8-0x21],edi
  404134:	fstp   st(6)
  404136:	into   
  404137:	add    al,0x1a
  404139:	adc    al,0x1d
  40413b:	xchg   ebp,eax
  40413c:	ja     0x4040e5
  40413e:	mov    cl,0x4c
  404140:	mov    ebx,DWORD PTR [esi-0x42]
  404143:	pop    eax
  404144:	jb     0x40416b
  404146:	push   edx
  404147:	retf   
  404148:	nop
  404149:	inc    ebx
  40414a:	imul   esp,DWORD PTR [esi-0x5a],0x6
  40414e:	mov    esi,0xa44a03c0
  404153:	fdivr  DWORD PTR [ecx]
  404155:	mov    WORD PTR [eax],ss
  404157:	inc    ecx
  404158:	dec    esp
  404159:	or     al,0x3f
  40415b:	xor    eax,0xc677e321
  404160:	loopne 0x404182
  404162:	xchg   ebp,eax
  404163:	add    eax,0x631517cb
  404168:	mov    dh,0xf6
  40416a:	adc    al,0xb4
  40416c:	in     eax,0x91
  40416e:	mov    bh,0x71
  404170:	dec    ebp
  404171:	jmp    0xd4fc091f
  404176:	mov    al,0xb1
  404178:	mov    ds:0x928ed892,eax
  40417d:	xchg   ebx,eax
  40417e:	sar    BYTE PTR [ecx+0x4d],0xde
  404182:	jle    0x4041ab
  404184:	int    0xaa
  404186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404187:	not    ecx
  404189:	sub    eax,0xf07350f5
  40418e:	jmp    0x3d06151c
  404193:	ja     0x40420a
  404195:	push   esp
  404196:	mov    edi,0x1d2f3767
  40419b:	(bad)  
  40419c:	popf   
  40419d:	jb     0x40420c
  40419f:	shl    BYTE PTR ds:[ecx+0x52],1
  4041a3:	stos   BYTE PTR es:[edi],al
  4041a4:	inc    esi
  4041a5:	mov    ah,0x52
  4041a7:	jl     0x404167
  4041a9:	in     al,dx
  4041aa:	mov    ecx,0x8f1735e4
  4041af:	test   BYTE PTR [eax-0x338ab388],dl
  4041b5:	outs   dx,BYTE PTR ds:[esi]
  4041b6:	popa   
  4041b7:	xor    BYTE PTR [edi],dh
  4041b9:	jno    0x4041ba
  4041bb:	jle    0x404146
  4041bd:	xor    edx,DWORD PTR [eax]
  4041bf:	push   esi
  4041c0:	(bad)  
  4041c2:	cmc    
  4041c3:	xchg   DWORD PTR [edx-0x67],ebx
  4041c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c7:	mov    edi,0x7258c5db
  4041cc:	inc    esi
  4041cd:	retf   
  4041ce:	ins    BYTE PTR es:[edi],dx
  4041cf:	mov    ah,0x95
  4041d1:	xor    BYTE PTR [ebx],0xec
  4041d4:	sbb    edi,DWORD PTR [ecx]
  4041d6:	lahf   
  4041d7:	test   al,0xd4
  4041d9:	rcr    DWORD PTR [ecx+0x7ca9c24b],1
  4041df:	test   BYTE PTR [ebp-0x164717a8],0xcc
  4041e6:	test   eax,0x7fcb6979
  4041eb:	mov    eax,0x2ae4f393
  4041f0:	repz xor al,0x2d
  4041f3:	inc    ebp
  4041f4:	fcom   DWORD PTR [esi-0x74]
  4041f7:	loop   0x404276
  4041f9:	jmp    0x404256
  4041fb:	shl    DWORD PTR [eax],cl
  4041fd:	shl    al,0x53
  404200:	cwde   
  404201:	lods   eax,DWORD PTR ds:[esi]
  404202:	inc    esp
  404203:	dec    eax
  404204:	xor    eax,0x18f9943a
  404209:	add    eax,0xf64d216b
  40420e:	and    ebp,eax
  404210:	sub    dh,0x87
  404213:	retf   0xaeed
  404216:	aam    0x66
  404218:	xor    DWORD PTR [ebx],edx
  40421a:	enter  0x1e9d,0x6c
  40421e:	ror    DWORD PTR [ebp+0x10],1
  404221:	mov    edi,0x70519d73
  404226:	adc    eax,0xa57b8378
  40422b:	xor    DWORD PTR [ecx],0xe4d9a92
  404231:	sub    DWORD PTR [edi],edi
  404233:	shl    DWORD PTR [edi+0x7f],0xe7
  404237:	sub    eax,0x40082cd
  40423c:	cld    
  40423d:	cmp    DWORD PTR [ecx+0x3c8b94bb],esp
  404243:	rcl    dh,1
  404245:	aaa    
  404246:	push   edi
  404247:	push   cs
  404248:	dec    eax
  404249:	ins    DWORD PTR es:[edi],dx
  40424a:	repz mov eax,ds:0x6cc0b14f
  404250:	cmp    ecx,DWORD PTR [esi]
  404252:	pusha  
  404253:	pop    eax
  404254:	inc    eax
  404255:	aaa    
  404256:	jmp    DWORD PTR [edi-0x6df8ddc7]
  40425c:	sahf   
  40425d:	(bad)  [ebx-0x11]
  404260:	and    bh,ah
  404262:	repz push ds
  404264:	sub    DWORD PTR [ecx+0x16c95a9],esp
  40426a:	test   al,0x25
  40426c:	mov    dh,BYTE PTR [ebx+esi*2]
  40426f:	mov    gs,WORD PTR [ebp-0x40]
  404272:	test   DWORD PTR [ecx-0x6a01e5bc],0xc127727e
  40427c:	push   esi
  40427d:	push   0xb0c49de3
  404282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404283:	pushf  
  404284:	aam    0xb
  404286:	mov    edx,0xfdcd0e66
  40428b:	pop    ecx
  40428c:	push   edx
  40428d:	out    0x13,eax
  40428f:	xor    eax,ebp
  404291:	nop
  404292:	outs   dx,DWORD PTR ds:[esi]
  404293:	outs   dx,BYTE PTR ds:[esi]
  404294:	das    
  404295:	xchg   esi,eax
  404296:	stos   DWORD PTR es:[edi],eax
  404297:	repz pop esp
  404299:	ins    DWORD PTR es:[edi],dx
  40429a:	jmp    0x1f6c0b77
  40429f:	mov    ds:0xe25f9d4,eax
  4042a4:	dec    edx
  4042a5:	cmp    ebx,ebp
  4042a7:	outs   dx,DWORD PTR ds:[esi]
  4042a8:	jecxz  0x404256
  4042aa:	or     edi,DWORD PTR [ecx-0x12]
  4042ad:	popa   
  4042ae:	jne    0x40430d
  4042b0:	in     eax,0x4a
  4042b2:	jb     0x404269
  4042b4:	rcr    esi,1
  4042b6:	test   eax,0x93a82d78
  4042bb:	mov    ebp,0xfe57e550
  4042c0:	mov    edx,0x2f6c4f2
  4042c5:	push   edx
  4042c6:	int    0x7e
  4042c8:	aaa    
  4042c9:	std    
  4042ca:	push   ds
  4042cb:	sub    edi,ecx
  4042cd:	push   0xfffffff9
  4042cf:	and    al,0xc8
  4042d1:	jnp    0x40433b
  4042d3:	scas   eax,DWORD PTR es:[edi]
  4042d4:	lods   al,BYTE PTR ds:[esi]
  4042d5:	mov    ecx,0x989c323f
  4042da:	adc    bh,al
  4042dc:	and    BYTE PTR [edi-0x7af80e2],bl
  4042e2:	ja     0x4042a8
  4042e4:	sbb    BYTE PTR [eax+0x73],ch
  4042e7:	leave  
  4042e8:	pop    eax
  4042e9:	cmp    dl,ch
  4042eb:	xchg   edi,edx
  4042ed:	test   eax,0xce159f66
  4042f2:	pop    esi
  4042f3:	mov    esi,DWORD PTR [edx]
  4042f5:	aad    0x83
  4042f7:	mov    DWORD PTR [ecx],ecx
  4042f9:	rcr    dh,0x37
  4042fc:	repnz add eax,0x45c3d02f
  404302:	sbb    ebx,ebx
  404304:	xor    al,0x95
  404306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404307:	mov    edi,0x3fa4b05
  40430c:	sbb    ah,BYTE PTR [ebp+0x22395348]
  404312:	and    al,0x6d
  404314:	test   al,0x5a
  404316:	jno    0x404395
  404318:	retf   0x326e
  40431b:	and    DWORD PTR [edi-0x6a7d0a35],ebp
  404321:	sub    BYTE PTR [ebp+0x39],dl
  404324:	loop   0x404349
  404326:	push   ss
  404327:	pop    ebx
  404328:	jmp    0x4042d0
  40432a:	mov    edi,0x536700fd
  40432f:	xor    dh,dh
  404331:	std    
  404332:	cmp    ebp,DWORD PTR [ebx+0x3f29cc91]
  404338:	push   0x2f
  40433a:	pusha  
  40433b:	aam    0xc9
  40433d:	test   al,0xb5
  40433f:	es (bad) 
  404341:	hlt    
  404342:	adc    edi,DWORD PTR [ebp-0x38]
  404345:	lds    ecx,FWORD PTR [ebx-0x20]
  404348:	test   DWORD PTR [edx+edx*1],eax
  40434b:	jge    0x404343
  40434d:	and    al,0xd1
  40434f:	mov    bh,0xbe
  404351:	fs cmp eax,0x21b11a19
  404357:	xor    ecx,DWORD PTR [edi+0x673874d9]
  40435d:	cmp    ebx,DWORD PTR [edi]
  40435f:	div    BYTE PTR [eax-0x19]
  404362:	dec    ebp
  404363:	inc    eax
  404364:	xchg   esp,eax
  404365:	cmp    eax,0xa2c76b1a
  40436a:	mov    cl,0x67
  40436c:	outs   dx,DWORD PTR ds:[esi]
  40436d:	lds    edi,FWORD PTR [esi+ecx*1-0x49dc2151]
  404374:	in     al,dx
  404375:	(bad)  
  404376:	lods   al,BYTE PTR ds:[esi]
  404377:	lock shl DWORD PTR [eax+0x39],cl
  40437b:	mov    ds:0x73bd3b4c,eax
  404380:	sti    
  404381:	mov    esp,es
  404383:	jg     0x40437e
  404385:	pop    ss
  404386:	dec    ecx
  404387:	sub    al,0xf
  404389:	clc    
  40438a:	pusha  
  40438b:	out    dx,eax
  40438c:	xor    esi,DWORD PTR [ecx+0x7]
  40438f:	or     eax,0xcafabdf7
  404394:	push   cs
  404395:	pop    esp
  404396:	scas   al,BYTE PTR es:[edi]
  404397:	hlt    
  404398:	xchg   ebx,eax
  404399:	mov    ds:0x6e5b7e50,al
  40439e:	xor    al,BYTE PTR [ebx-0x26]
  4043a1:	mov    bl,0xf8
  4043a3:	or     al,0x47
  4043a5:	jne    0x404350
  4043a7:	cdq    
  4043a8:	lods   al,BYTE PTR ds:[esi]
  4043a9:	shr    edi,0xf9
  4043ac:	call   0xf486569a
  4043b1:	mov    al,0x43
  4043b3:	adc    DWORD PTR [ecx-0x48],esi
  4043b6:	sub    DWORD PTR [edx+0x11d4c222],0x81bef165
  4043c0:	dec    edi
  4043c1:	jp     0x40434e
  4043c3:	outs   dx,BYTE PTR ds:[esi]
  4043c4:	push   ds
  4043c5:	add    DWORD PTR [edi+0x33],ebx
  4043c8:	(bad)  
  4043c9:	sahf   
  4043ca:	fild   WORD PTR [edx+eax*2-0x1396ef00]
  4043d1:	fimul  WORD PTR [ebp+0x435b3a50]
  4043d7:	iret   
  4043d8:	or     BYTE PTR [edx-0x32],0xcf
  4043dc:	aad    0x63
  4043de:	pusha  
  4043df:	cld    
  4043e0:	fistp  QWORD PTR [esi]
  4043e2:	adc    BYTE PTR [edx+0xcb32289],0x94
  4043e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ea:	jbe    0x404437
  4043ec:	sbb    al,0xa5
  4043ee:	aas    
  4043ef:	rcr    eax,cl
  4043f1:	xor    edx,0x80a98b34
  4043f7:	scas   eax,DWORD PTR es:[edi]
  4043f8:	add    al,al
  4043fa:	sbb    al,0x11
  4043fc:	sbb    edi,esi
  4043fe:	(bad)  [edx+0x18ae5b62]
  404404:	div    BYTE PTR [edx]
  404406:	aaa    
  404407:	test   DWORD PTR [ebp+0x61ce0eab],ebp
  40440d:	mov    eax,ds:0x1d3a05e8
  404412:	add    al,cl
  404414:	retf   
  404415:	bound  ebx,QWORD PTR [esi+0x4188d1c8]
  40441b:	iret   
  40441c:	jmp    0x3523710d
  404421:	mov    edi,0x4ece68a8
  404426:	lea    esi,[ebx]
  404428:	xlat   BYTE PTR ds:[ebx]
  404429:	mov    al,0xa9
  40442b:	(bad)
  40442e:	mov    edx,0xd6852d55
  404433:	mov    bh,0xf6
  404435:	adc    al,0x38
  404437:	jmp    0x170edba5
  40443c:	pop    edi
  40443d:	inc    edi
  40443e:	icebp  
  40443f:	add    DWORD PTR [eax],ecx
  404441:	jmp    0x8804f64e
  404446:	cmp    ah,BYTE PTR [ebx]
  404448:	xchg   ebp,eax
  404449:	sahf   
  40444a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444b:	(bad)  
  40444c:	in     eax,0xb1
  40444e:	cmp    ah,bh
  404450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404451:	xchg   ebx,eax
  404452:	fstp   QWORD PTR [ecx]
  404454:	imul   esp,esp,0xffffffce
  404457:	lea    esi,[ebx-0x48681d6d]
  40445d:	or     bl,BYTE PTR [ebp-0x54e7956f]
  404463:	mov    bl,0xf5
  404465:	xchg   ecx,eax
  404466:	jbe    0x4044a5
  404468:	cmp    edx,DWORD PTR [ebx-0x2f0b7fd1]
  40446e:	aam    0x32
  404470:	xchg   ebp,eax
  404471:	dec    edx
  404472:	(bad)  
  404473:	aad    0x59
  404475:	and    ah,BYTE PTR [ecx+0x6514b09]
  40447b:	inc    edi
  40447c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40447d:	ud0    eax,ecx
  404480:	jmp    0x2b4c:0x96e436b7
  404487:	jmp    0x4044de
  404489:	fld    QWORD PTR [ebp-0x50]
  40448c:	lds    esp,FWORD PTR [edi-0x4b]
  40448f:	dec    eax
  404490:	cmp    eax,0xc8744ac6
  404495:	mov    edi,0xe823da75
  40449a:	sahf   
  40449b:	out    0xc8,eax
  40449d:	leave  
  40449e:	adc    al,0xc5
  4044a0:	iret   
  4044a1:	mov    esi,0x7286125f
  4044a6:	leave  
  4044a7:	gs add cl,cl
  4044aa:	ror    DWORD PTR [ebx+0x12d6d957],cl
  4044b0:	mov    eax,0x2a4f2c1b
  4044b5:	out    0x9e,al
  4044b7:	sbb    al,0x1f
  4044b9:	int    0xf2
  4044bb:	cld    
  4044bc:	ds ja  0x404532
  4044bf:	test   al,0x82
  4044c1:	(bad)
  4044c4:	dec    ebx
  4044c5:	fmul   st(4),st
  4044c7:	cs into 
  4044c9:	call   0x7f79:0x9e340ce0
  4044d0:	mul    DWORD PTR [esi]
  4044d2:	pushf  
  4044d3:	xchg   ebx,eax
  4044d4:	or     esp,ecx
  4044d6:	pop    eax
  4044d7:	cmp    DWORD PTR [eax],ebp
  4044d9:	cli    
  4044da:	hlt    
  4044db:	mov    eax,0xeb59d50
  4044e0:	outs   dx,DWORD PTR ds:[esi]
  4044e1:	and    cl,ch
  4044e3:	lahf   
  4044e4:	loopne 0x40446c
  4044e6:	add    BYTE PTR [ebp-0x5256d518],dl
  4044ec:	stos   BYTE PTR es:[edi],al
  4044ed:	add    esi,DWORD PTR [ecx-0x61369140]
  4044f3:	sub    al,0xf0
  4044f5:	out    dx,al
  4044f6:	repnz or BYTE PTR [eax-0xe],ch
  4044fa:	push   es
  4044fb:	dec    ebp
  4044fc:	neg    edi
  4044fe:	leave  
  4044ff:	sub    eax,0xedcc49db
  404504:	popa   
  404505:	pop    edx
  404506:	cmp    bh,BYTE PTR [ebp-0x1d]
  404509:	fwait
  40450a:	and    ch,BYTE PTR [esi+0x65c9e718]
  404510:	pop    edi
  404511:	outs   dx,BYTE PTR ds:[esi]
  404512:	repnz xchg ebx,eax
  404514:	stc    
  404515:	test   edi,0x9ff693c5
  40451b:	mov    ch,BYTE PTR [edx+0x79250d94]
  404521:	dec    ebx
  404522:	sbb    DWORD PTR [esi],eax
  404524:	xor    eax,0xe7d67e3d
  404529:	or     esp,DWORD PTR [edx]
  40452b:	sahf   
  40452c:	pusha  
  40452d:	jmp    0x109c:0xf540c5c1
  404534:	test   al,0x9a
  404536:	repz inc ecx
  404538:	jmp    DWORD PTR [ecx]
  40453a:	(bad)  
  40453b:	mov    esp,0xfd4f5023
  404540:	mov    al,0xa9
  404542:	lahf   
  404543:	rdpmc  
  404545:	in     al,dx
  404546:	repnz cwde 
  404548:	pop    esp
  404549:	jbe    0x4045a4
  40454b:	push   esi
  40454c:	daa    
  40454d:	jmp    0x6a905160
  404552:	mov    cl,0x14
  404554:	hlt    
  404555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404556:	ret    
  404557:	(bad)  
  404558:	push   edx
  404559:	les    esp,FWORD PTR [ebx+eax*1]
  40455c:	push   0x5efa2a37
  404561:	push   ebp
  404562:	cs mov ecx,0x8223c1c3
  404568:	lea    edx,[esi-0x5f]
  40456b:	mov    ds:0xac1b7a85,eax
  404570:	out    0x2f,eax
  404572:	mov    bl,0xb3
  404574:	inc    ebx
  404575:	pop    ebx
  404576:	xchg   ecx,eax
  404577:	adc    eax,0x665b3629
  40457c:	cmp    cl,BYTE PTR [esi]
  40457e:	pop    esi
  40457f:	xchg   ebx,eax
  404580:	jno    0x404529
  404582:	or     BYTE PTR [ebp+0x349f6597],dh
  404588:	mov    ds:0x7b63db02,al
  40458d:	(bad)  
  40458e:	push   esi
  40458f:	pop    eax
  404590:	mov    dh,0x6d
  404592:	cld    
  404593:	or     ebp,DWORD PTR [ebx]
  404595:	cmp    al,BYTE PTR [edi]
  404597:	jge    0x40456e
  404599:	shr    bl,cl
  40459b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40459c:	call   0xde6a:0xcffd3845
  4045a3:	add    DWORD PTR [esi+0x2f198e50],edx
  4045a9:	xchg   ecx,eax
  4045aa:	retf   0x8cb1
  4045ad:	repnz sub ebp,DWORD PTR [eax+eiz*2+0x15]
  4045b2:	and    ch,BYTE PTR [edx+0x51]
  4045b5:	push   ebx
  4045b6:	mov    dh,0xf8
  4045b8:	bound  ebx,QWORD PTR [eax+eiz*1]
  4045bb:	cdq    
  4045bc:	jp     0x404569
  4045be:	(bad)  
  4045bf:	leave  
  4045c0:	xor    eax,0x2cb8913
  4045c5:	imul   ebp,DWORD PTR [edi],0x6e
  4045c8:	es xchg ecx,eax
  4045ca:	(bad)  
  4045cb:	sar    cl,cl
  4045cd:	jg     0x404566
  4045cf:	pop    ebp
  4045d0:	inc    eax
  4045d1:	xchg   ebx,eax
  4045d2:	dec    esp
  4045d3:	xor    ecx,DWORD PTR [ebx+0x586636a6]
  4045d9:	mov    dl,0xf6
  4045db:	cmp    eax,0x22cd8156
  4045e0:	stos   BYTE PTR es:[edi],al
  4045e1:	cld    
  4045e2:	int3   
  4045e3:	pop    esp
  4045e4:	adc    BYTE PTR [eax+0x6a],0x6f
  4045e8:	aam    0x5e
  4045ea:	out    dx,al
  4045eb:	jge    0x40463e
  4045ed:	(bad)  
  4045ee:	in     eax,dx
  4045ef:	push   ebx
  4045f0:	not    DWORD PTR [esp+edx*2+0x526468a7]
  4045f7:	pop    edi
  4045f8:	jg     0x404583
  4045fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fc:	xor    edi,DWORD PTR [ebp-0x1b2643a7]
  404602:	inc    edi
  404603:	xor    al,0xb
  404605:	stos   BYTE PTR es:[edi],al
  404606:	sbb    ah,BYTE PTR [ebp+0x475f977]
  40460c:	fisttp DWORD PTR [edi]
  40460e:	cmp    DWORD PTR [edi+0x4002bae],0x68ae119d
  404618:	out    0xf4,eax
  40461a:	mov    bh,0xa0
  40461c:	sbb    DWORD PTR [esi+0x54],esi
  40461f:	jbe    0x404687
  404621:	rol    BYTE PTR [ecx],cl
  404623:	stos   DWORD PTR es:[edi],eax
  404624:	sahf   
  404625:	mov    eax,0xeaed099e
  40462a:	xchg   bl,al
  40462c:	mov    edx,0xcf9fe418
  404631:	and    DWORD PTR [edi-0x5a],esp
  404634:	fmul   st,st(1)
  404636:	pop    es
  404637:	or     bl,BYTE PTR [edx+ebp*4+0x314f051c]
  40463e:	enterw 0x96ac,0x85
  404643:	mov    esp,0x89182d87
  404648:	mov    ebp,0x957d44c0
  40464d:	js     0x4046af
  40464f:	cli    
  404650:	sbb    cl,BYTE PTR [eax-0x4d]
  404653:	ror    DWORD PTR [ebp+edx*8-0x3e],1
  404657:	push   0x5a
  404659:	mov    edi,0x63423e28
  40465e:	adc    ebp,esp
  404660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404661:	into   
  404662:	sbb    BYTE PTR [ebx-0x2fef65d3],0x59
  404669:	test   ecx,esp
  40466b:	cli    
  40466c:	jmp    0x10f59563
  404671:	push   esp
  404672:	lock adc al,0xaf
  404675:	test   DWORD PTR [eax],ebp
  404677:	std    
  404678:	mov    al,0x35
  40467a:	ja     0x4046fb
  40467c:	pushf  
  40467d:	test   al,0xb5
  40467f:	mov    ebx,0xc501625c
  404684:	mov    WORD PTR [ebp+0xd],gs
  404687:	les    edx,FWORD PTR [ecx+0x6560611a]
  40468d:	icebp  
  40468e:	test   al,0x4f
  404690:	rol    BYTE PTR [ebx-0x1f8078e9],1
  404696:	xor    ebp,esp
  404698:	sbb    al,0xa8
  40469a:	dec    eax
  40469b:	or     DWORD PTR [ecx+0x54a8d193],edi
  4046a1:	stos   DWORD PTR es:[edi],eax
  4046a2:	and    DWORD PTR [ecx-0x3],edi
  4046a5:	dec    ebx
  4046a6:	jns    0x404696
  4046a8:	mov    cl,0xc2
  4046aa:	call   0xbf68:0xbd4140a0
  4046b1:	cwde   
  4046b2:	pop    ss
  4046b3:	or     eax,0x3c084342
  4046b8:	sub    BYTE PTR [ecx],al
  4046ba:	gs (bad) 
  4046bc:	sub    eax,0x30cf4b0e
  4046c1:	inc    edi
  4046c2:	das    
  4046c3:	sar    DWORD PTR [ecx-0x3f],0x91
  4046c7:	fnstsw WORD PTR [ebx]
  4046c9:	retf   0x38b7
  4046cc:	mov    ds:0x12cfe4a5,al
  4046d1:	or     eax,0x3f62c513
  4046d6:	jne    0x4046c0
  4046d8:	jno    0x404685
  4046da:	ins    BYTE PTR es:[edi],dx
  4046db:	push   esi
  4046dc:	and    esi,DWORD PTR [esi-0x19d9d74d]
  4046e2:	mov    ch,al
  4046e4:	test   eax,0x8fe5a433
  4046e9:	mov    DWORD PTR [ecx-0x7ba2a852],esi
  4046ef:	mov    al,ds:0xbafe9e52
  4046f4:	int    0x29
  4046f6:	inc    ecx
  4046f7:	mov    bh,0xa2
  4046f9:	jle    0x404762
  4046fb:	xchg   DWORD PTR [ecx-0x7ff119b9],ebp
  404701:	outs   dx,DWORD PTR ds:[esi]
  404702:	mov    ch,0xa9
  404704:	jae    0x404733
  404706:	ins    DWORD PTR es:[edi],dx
  404707:	sbb    al,0x1c
  404709:	nop    DWORD PTR [esi+eax*1]
  40470d:	mov    dh,0x8c
  40470f:	inc    ebp
  404710:	fstp   TBYTE PTR [ecx+0x29]
  404713:	fstp   DWORD PTR [esi+ebp*1-0x4d51684e]
  40471a:	jle    0x4046a1
  40471c:	push   0x26
  40471e:	push   ds
  40471f:	sub    bl,BYTE PTR [eax]
  404721:	mov    ah,BYTE PTR [eax+eiz*4-0x2d]
  404725:	repz inc esp
  404727:	sti    
  404728:	pop    esp
  404729:	xchg   esp,eax
  40472a:	xchg   ebx,eax
  40472b:	mul    DWORD PTR ds:0x55c16614
  404731:	(bad)  
  404732:	retf   
  404733:	fist   WORD PTR [esi+0x75]
  404736:	test   BYTE PTR [ebp+0x74],al
  404739:	aaa    
  40473a:	icebp  
  40473b:	jb     0x404776
  40473d:	test   ebp,0xe578b8bb
  404743:	push   ebx
  404744:	bound  ebp,QWORD PTR [edx-0x7bd41e4]
  40474a:	push   edx
  40474b:	push   edx
  40474c:	sub    dl,0x89
  40474f:	or     DWORD PTR [eax],esp
  404751:	sahf   
  404752:	mov    ds:0x9120139e,eax
  404757:	bound  esi,QWORD PTR [edi-0x22f89167]
  40475d:	inc    edi
  40475e:	lods   al,BYTE PTR ds:[esi]
  40475f:	add    ebx,DWORD PTR ds:0x4c4ecf5f
  404765:	or     dh,dl
  404767:	pop    ebx
  404768:	cmp    esi,edx
  40476a:	xor    BYTE PTR [edx-0x1648f982],dh
  404770:	cmp    DWORD PTR [eax+0x26],ecx
  404773:	push   esp
  404774:	fcom   DWORD PTR [esi+0x3e]
  404777:	lods   eax,DWORD PTR ds:[esi]
  404778:	imul   BYTE PTR [edi-0x33]
  40477b:	jecxz  0x40477f
  40477d:	out    0x76,eax
  40477f:	jp     0x40473f
  404781:	sbb    cl,cl
  404783:	ins    BYTE PTR es:[edi],dx
  404784:	inc    edx
  404785:	out    0x3c,eax
  404787:	call   0x61bc0e7e
  40478c:	cmp    cl,dh
  40478e:	add    BYTE PTR [ebx+eax*1],cl
  404791:	fcmove st,st(7)
  404793:	or     al,0xdc
  404795:	mov    esi,0x9c89afb3
  40479a:	pop    ebp
  40479b:	mov    esi,0x47982c10
  4047a0:	cmp    eax,0x8777ae6d
  4047a5:	mov    al,ds:0x750dc4a7
  4047aa:	push   0xde75ba51
  4047af:	sub    ch,ah
  4047b1:	pop    edx
  4047b2:	es popa 
  4047b4:	addr16 mov bl,0xaa
  4047b7:	mov    dl,0xe1
  4047b9:	sub    BYTE PTR [edi-0x60],bh
  4047bc:	cmp    edi,DWORD PTR [esi]
  4047be:	mov    ecx,0x1f78dfce
  4047c3:	int    0x71
  4047c5:	and    BYTE PTR [esp+ecx*4-0x537d913e],ch
  4047cc:	cdq    
  4047cd:	and    bh,cl
  4047cf:	add    edx,DWORD PTR cs:[ebp+0x38]
  4047d3:	ja     0x40480b
  4047d5:	lods   al,BYTE PTR ds:[esi]
  4047d6:	test   DWORD PTR ds:0x739bce9b,ebx
  4047dc:	xlat   BYTE PTR ds:[ebx]
  4047dd:	pop    ecx
  4047de:	jmp    0x59a6:0xb20063ac
  4047e5:	and    esi,ebp
  4047e7:	or     eax,DWORD PTR [esi-0x2c46f966]
  4047ed:	push   ds
  4047ee:	dec    esi
  4047ef:	mov    eax,ds:0x866c90b7
  4047f4:	dec    edi
  4047f5:	je     0x4047aa
  4047f7:	pop    es
  4047f8:	sub    eax,0x2683a2e5
  4047fd:	fisttp DWORD PTR [edi+0x66]
  404800:	(bad)  
  404801:	mov    cl,0xc9
  404803:	xchg   ebp,eax
  404804:	into   
  404805:	sub    ch,bh
  404807:	lods   eax,DWORD PTR ds:[esi]
  404808:	cmp    BYTE PTR [edx+0x79],ch
  40480b:	or     BYTE PTR [edi+0x7a73beb6],ah
  404811:	fnstsw WORD PTR [eax]
  404813:	adc    eax,0xf67c8c32
  404818:	xchg   ebx,eax
  404819:	popf   
  40481a:	pushf  
  40481b:	pushf  
  40481c:	dec    ecx
  40481d:	or     ch,dh
  40481f:	ja     0x40482a
  404821:	or     edx,DWORD PTR [ecx]
  404823:	fidivr DWORD PTR [ecx]
  404825:	pop    edx
  404826:	push   edx
  404827:	bound  ebp,QWORD PTR [edi-0x50656eb7]
  40482d:	pop    edx
  40482e:	dec    esi
  40482f:	les    ebx,FWORD PTR gs:[ebx]
  404832:	mov    al,ds:0x181c361
  404837:	fs pop ds
  404839:	fmul   QWORD PTR [esi+ebx*4]
  40483c:	dec    ecx
  40483d:	adc    esi,0xcd73960d
  404843:	adc    dl,cl
  404845:	mov    ah,0x97
  404847:	sbb    bh,BYTE PTR [ebx-0x1f]
  40484a:	clc    
  40484b:	and    eax,0x41c25195
  404850:	mov    ch,0x1
  404852:	mov    dl,0xae
  404854:	push   es
  404855:	pop    eax
  404856:	cmp    al,0x6b
  404858:	and    eax,0x400c2cdd
  40485d:	aad    0x0
  40485f:	test   DWORD PTR [ecx+0x75],edx
  404862:	fdiv   QWORD PTR es:[eax+0x4bfb85b5]
  404869:	mov    ch,0x2d
  40486b:	scas   al,BYTE PTR es:[edi]
  40486c:	jecxz  0x40488e
  40486e:	rol    dl,0x80
  404871:	imul   ecx,DWORD PTR [esi+0x27c9dfb1],0x6eafb4b2
  40487b:	mov    eax,0x96836c10
  404880:	and    ah,BYTE PTR [ecx]
  404882:	mov    ?,WORD PTR [edi]
  404884:	fdiv   st(4),st
  404886:	sahf   
  404887:	cmp    eax,0x8cde3083
  40488c:	jno    0x4048ed
  40488e:	jne    0x40484b
  404890:	(bad)  [edx+ecx*1+0x41]
  404894:	jb     0x404912
  404896:	jp     0x404883
  404898:	sbb    bl,BYTE PTR [edx]
  40489a:	mov    ah,0x11
  40489c:	xor    al,0xe2
  40489e:	jge    0x4048f4
  4048a0:	lods   eax,DWORD PTR ds:[esi]
  4048a1:	enter  0xd429,0x99
  4048a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a6:	mov    bh,0xe5
  4048a8:	or     eax,0x15db3a6f
  4048ad:	ja     0x4048f4
  4048af:	dec    ebp
  4048b0:	rcl    bh,0xf1
  4048b3:	push   edi
  4048b4:	repnz pop ebp
  4048b6:	sub    ecx,DWORD PTR [ebx+0x1a]
  4048b9:	jl     0x40487e
  4048bb:	xor    al,0x47
  4048bd:	xor    dh,bh
  4048bf:	inc    ebx
  4048c0:	ror    cl,1
  4048c2:	pop    eax
  4048c3:	mov    bh,0x8
  4048c5:	das    
  4048c6:	nop
  4048c7:	adc    DWORD PTR [eax+eax*1-0x336870fc],0x1cbd6cc4
  4048d2:	mov    dh,0xf8
  4048d4:	ss pusha 
  4048d6:	push   edi
  4048d7:	mov    eax,ds:0x1d8d5bd3
  4048dc:	jne    0x4048fc
  4048de:	mov    ah,bh
  4048e0:	jns    0x40493a
  4048e2:	cmp    edx,DWORD PTR ds:0x28187b66
  4048e8:	repz rcl BYTE PTR [edx+0x14],0x4
  4048ed:	add    ecx,DWORD PTR [esi+0x1c6d5284]
  4048f3:	cs dec ebp
  4048f5:	mov    ds:0xcec9e15,eax
  4048fa:	ins    DWORD PTR es:[edi],dx
  4048fb:	icebp  
  4048fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048fd:	cli    
  4048fe:	mov    ds:0x4a40a31c,eax
  404903:	mov    al,0x2c
  404905:	and    BYTE PTR [ebp-0x58fac0ec],0x4e
  40490c:	inc    ecx
  40490d:	dec    ecx
  40490e:	cmp    al,0xa2
  404910:	out    dx,eax
  404911:	stos   BYTE PTR es:[edi],al
  404912:	mov    DWORD PTR [ecx],edi
  404914:	mov    ?,WORD PTR es:[ebx-0x1e5df4d6]
  40491b:	jae    0x40496f
  40491d:	fwait
  40491e:	push   edi
  40491f:	fiadd  DWORD PTR [esi]
  404921:	xor    BYTE PTR [ebx],dh
  404923:	hlt    
  404924:	loop   0x404960
  404926:	in     eax,0xcc
  404928:	sub    al,0x3b
  40492a:	dec    ebx
  40492b:	call   0x2bb:0x7df25ee
  404932:	pop    es
  404933:	loop   0x404943
  404935:	icebp  
  404936:	scas   eax,DWORD PTR es:[edi]
  404937:	mov    ebx,0x324b8fa8
  40493c:	mov    ah,0x5d
  40493e:	addr16 cs inc eax
  404941:	push   esi
  404942:	cmp    ah,BYTE PTR [ebx-0x176ad9f1]
  404948:	test   al,0x48
  40494a:	sahf   
  40494b:	dec    edx
  40494c:	out    0x98,eax
  40494e:	jge    0x4049c4
  404950:	or     bl,BYTE PTR [ebx+0x34]
  404953:	mov    al,0x0
  404955:	aaa    
  404956:	xchg   BYTE PTR [edx-0x7d66c376],cl
  40495c:	mov    ds:0x3a14b5c6,al
  404961:	sbb    ebx,DWORD PTR [edx+0x1b647dac]
  404967:	inc    esp
  404968:	ret    
  404969:	inc    esi
  40496a:	jmp    0x4049c4
  40496c:	or     ah,BYTE PTR [edx+0x305377e0]
  404972:	and    ebp,ecx
  404974:	inc    ebp
  404975:	retf   
  404976:	cmp    al,0xd0
  404978:	test   ax,0xe525
  40497c:	(bad)  
  40497d:	xor    ch,ch
  40497f:	das    
  404980:	cmp    cl,BYTE PTR [eax+ebp*8-0x730415cb]
  404987:	bound  esp,QWORD PTR [esp+eiz*4-0x74]
  40498b:	test   eax,0x6d832ff3
  404990:	sbb    esp,DWORD PTR [edx]
  404992:	push   edx
  404993:	xchg   ebp,eax
  404994:	rol    bl,cl
  404996:	pop    es
  404997:	aad    0x17
  404999:	add    al,0x27
  40499b:	mov    cl,0x68
  40499d:	retf   
  40499e:	mov    cl,0xe0
  4049a0:	ds xchg edx,eax
  4049a2:	xlat   BYTE PTR ds:[ebx]
  4049a3:	xchg   edi,eax
  4049a4:	mov    edx,0x8e5c89c2
  4049a9:	mov    ebp,0x8d02b403
  4049ae:	pop    esi
  4049af:	in     al,0x17
  4049b1:	sbb    eax,0x650d4c52
  4049b6:	arpl   si,bx
  4049b8:	mov    al,ds:0x2add4d3b
  4049bd:	pop    edi
  4049be:	stos   BYTE PTR es:[edi],al
  4049bf:	lods   eax,DWORD PTR ds:[esi]
  4049c0:	jmp    0x3dba:0x3820bbd1
  4049c7:	js     0x404951
  4049c9:	inc    edx
  4049ca:	push   ecx
  4049cb:	xchg   BYTE PTR [ecx-0xd],bh
  4049ce:	ds cld 
  4049d0:	repnz out 0x17,eax
  4049d3:	jnp    0x404971
  4049d5:	add    BYTE PTR [ebp-0x790d1fe8],ch
  4049db:	jp     0x4049d5
  4049dd:	out    0xe0,al
  4049df:	cmp    al,0xe
  4049e1:	xor    ah,bh
  4049e3:	adc    eax,0x4d9196ef
  4049e8:	xchg   ecx,eax
  4049e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ea:	jle    0x404a5b
  4049ec:	popa   
  4049ed:	lds    edx,FWORD PTR [ebp+0x44]
  4049f0:	jg     0x404a5f
  4049f2:	jp     0x404a27
  4049f4:	cmp    ebx,DWORD PTR [edi]
  4049f6:	ds sar esp,1
  4049f9:	in     al,0xfd
  4049fb:	shl    cl,1
  4049fd:	push   es
  4049fe:	push   eax
  4049ff:	cmc    
  404a00:	cmp    DWORD PTR [ecx],ecx
  404a02:	dec    edi
  404a03:	(bad)  
  404a04:	leave  
  404a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a06:	cmc    
  404a07:	(bad)  
  404a08:	pushf  
  404a09:	out    0xc4,eax
  404a0b:	scas   eax,DWORD PTR es:[edi]
  404a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a0d:	xor    edi,DWORD PTR [eax-0x71956adf]
  404a13:	loope  0x4049aa
  404a15:	jo     0x4049f5
  404a17:	cdq    
  404a18:	inc    edx
  404a19:	repz xchg ebp,eax
  404a1b:	out    0x2c,al
  404a1d:	mov    esi,0x60ff7ac2
  404a22:	pop    ebp
  404a23:	out    dx,al
  404a24:	call   DWORD PTR [esi-0x2a0b4b3b]
  404a2a:	add    cl,bl
  404a2c:	pop    esi
  404a2d:	outs   dx,BYTE PTR ds:[esi]
  404a2e:	mov    esi,0xdaadb9ae
  404a33:	mov    eax,0x980bdef9
  404a38:	inc    edi
  404a39:	mov    cl,0x1
  404a3b:	cmp    dh,BYTE PTR [edi+eax*8+0x194a164e]
  404a42:	test   bh,al
  404a44:	push   ebp
  404a45:	loop   0x404a90
  404a47:	sub    al,0xb2
  404a49:	retf   
  404a4a:	sub    al,BYTE PTR [eax-0x59c05e14]
  404a50:	xchg   esp,eax
  404a51:	fbld   TBYTE PTR [ebp+0x2361bfe]
  404a57:	jmp    0x2d8f:0xa6f11665
  404a5e:	pusha  
  404a5f:	xor    DWORD PTR [eax],ebp
  404a61:	stos   DWORD PTR es:[edi],eax
  404a62:	adc    edx,eax
  404a64:	pop    edx
  404a65:	stos   BYTE PTR es:[edi],al
  404a66:	icebp  
  404a67:	mov    al,0xd9
  404a69:	outs   dx,DWORD PTR ds:[esi]
  404a6a:	xor    BYTE PTR [esi-0x7b],bh
  404a6d:	xchg   DWORD PTR [eax+0x5],ebx
  404a70:	mov    ah,BYTE PTR [ebx+0x3d]
  404a73:	jge    0x404a1f
  404a75:	xchg   esi,eax
  404a76:	cmp    eax,esi
  404a78:	loopne 0x404a3d
  404a7a:	add    al,0x16
  404a7c:	rcr    DWORD PTR [edi],1
  404a7e:	js     0x404a90
  404a80:	dec    esp
  404a81:	push   esi
  404a82:	mov    ebx,0xf719d52a
  404a87:	sub    eax,0xa29db74a
  404a8c:	push   esi
  404a8d:	ja     0x404ad1
  404a8f:	and    edi,DWORD PTR [eax-0x698295e1]
  404a95:	test   BYTE PTR [ecx-0x6816c325],cl
  404a9b:	shl    BYTE PTR [esi],0x99
  404a9e:	pop    edx
  404a9f:	add    al,0x20
  404aa1:	ins    BYTE PTR es:[edi],dx
  404aa2:	fidiv  DWORD PTR [eax+0xa]
  404aa5:	and    eax,0xc7b1888
  404aaa:	cs push es
  404aac:	add    BYTE PTR [esi-0x3262b0a],bl
  404ab2:	ins    DWORD PTR es:[edi],dx
  404ab3:	jmp    0x404a6f
  404ab5:	neg    BYTE PTR [edx+0x14]
  404ab8:	stos   BYTE PTR es:[edi],al
  404ab9:	xor    eax,0x61b098a2
  404abe:	ins    BYTE PTR es:[edi],dx
  404abf:	mov    al,ds:0x8be89c75
  404ac4:	mov    ch,0x3c
  404ac6:	mov    WORD PTR [esi],cs
  404ac8:	mov    eax,0x4b5b8009
  404acd:	dec    ebp
  404ace:	jnp    0x404b37
  404ad0:	dec    eax
  404ad1:	add    al,0xf8
  404ad3:	int    0xc3
  404ad5:	fist   WORD PTR [esi]
  404ad7:	ds sbb eax,esi
  404ada:	in     eax,dx
  404adb:	xchg   ecx,eax
  404adc:	fld    QWORD PTR [eax-0x768e2b89]
  404ae2:	cmp    BYTE PTR [eax-0x7666f531],ch
  404ae8:	mov    DWORD PTR [ebx],0x479e444a
  404aee:	sub    al,0x9b
  404af0:	imul   ecx,edi,0x1e
  404af3:	fisttp WORD PTR [edi+0x2d]
  404af6:	out    dx,eax
  404af7:	fwait
  404af8:	xchg   ecx,eax
  404af9:	xor    cl,0xe8
  404afc:	test   al,0x52
  404afe:	xor    esi,ebx
  404b00:	popa   
  404b01:	ja     0x404b69
  404b03:	(bad)  
  404b06:	pcmpeqd mm6,QWORD PTR [edx+eiz*2-0x14e900ed]
  404b0e:	scas   eax,DWORD PTR es:[edi]
  404b0f:	mov    BYTE PTR [edx-0x478f638],ah
  404b15:	and    eax,0x1d3fd0ff
  404b1a:	or     ah,cl
  404b1c:	inc    edi
  404b1d:	push   esp
  404b1e:	jne    0x404b96
  404b20:	cld    
  404b21:	xchg   esi,eax
  404b22:	mov    ebp,0xb44f05
  404b27:	sbb    edi,esp
  404b29:	sbb    edx,esp
  404b2b:	out    0xa5,eax
  404b2d:	xchg   edx,eax
  404b2e:	mov    ecx,DWORD PTR [ebx-0x44]
  404b31:	lea    ecx,[eax-0x3fd65b27]
  404b37:	das    
  404b38:	aam    0xa8
  404b3a:	mov    al,ds:0x1c246253
  404b3f:	mov    ecx,0x27fc7b24
  404b44:	add    cl,dl
  404b46:	pop    eax
  404b47:	ins    DWORD PTR es:[edi],dx
  404b48:	sbb    esi,DWORD PTR [ecx]
  404b4a:	add    esi,DWORD PTR [ecx+0x2d]
  404b4d:	sub    BYTE PTR [edx-0x6ddc52d6],dh
  404b53:	ins    BYTE PTR es:[edi],dx
  404b54:	and    al,0xda
  404b56:	(bad)  
  404b57:	lods   al,BYTE PTR ds:[esi]
  404b58:	js     0x404b47
  404b5a:	in     eax,0xe0
  404b5c:	push   ebx
  404b5d:	push   esp
  404b5e:	sbb    ebp,ebx
  404b60:	fld    TBYTE PTR gs:[edx]
  404b63:	add    esi,eax
  404b65:	adc    al,BYTE PTR [edx-0x46]
  404b68:	ins    BYTE PTR es:[edi],dx
  404b69:	shl    ah,1
  404b6b:	adc    BYTE PTR [ecx],dl
  404b6d:	xor    DWORD PTR [esi],esp
  404b6f:	xchg   ecx,eax
  404b70:	repz scas eax,DWORD PTR es:[edi]
  404b72:	in     al,0xe2
  404b74:	mov    dl,0xa2
  404b76:	fidiv  DWORD PTR [ebp-0x1e3f0fe9]
  404b7c:	sub    dh,ch
  404b7e:	outs   dx,BYTE PTR ds:[esi]
  404b7f:	loope  0x404ba2
  404b81:	call   DWORD PTR ds:0x38167b72
  404b87:	add    bl,BYTE PTR gs:[eax+0x5511b55f]
  404b8e:	pop    ss
  404b8f:	add    ebx,DWORD PTR [eax]
  404b91:	jl     0x404b75
  404b93:	retf   0x644e
  404b96:	aas    
  404b97:	xchg   esi,eax
  404b98:	pop    edi
  404b99:	mov    ebp,0xd6809e59
  404b9e:	div    BYTE PTR [ebp-0x55]
  404ba1:	sub    al,0xf9
  404ba3:	(bad)  
  404ba5:	(bad)  
  404ba6:	out    dx,al
  404ba7:	(bad)  
  404ba8:	xchg   esp,eax
  404ba9:	and    eax,0xcd989c32
  404bae:	sub    DWORD PTR [esi],ebx
  404bb0:	cmp    bh,BYTE PTR [ecx-0x55]
  404bb3:	mov    esp,0x630b36b0
  404bb8:	cmp    eax,0x473bf6e7
  404bbd:	xor    eax,0x3730e9f3
  404bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc3:	and    BYTE PTR [esi+0x61],cl
  404bc6:	fldcw  WORD PTR [edx+0x56]
  404bc9:	push   ds
  404bca:	jl     0x404be5
  404bcc:	in     eax,0x6d
  404bce:	daa    
  404bcf:	dec    eax
  404bd0:	rol    dl,0xb
  404bd3:	iret   
  404bd4:	inc    edx
  404bd5:	lea    edi,[ecx+0x5d]
  404bd8:	jle    0x404b66
  404bda:	div    DWORD PTR [eax+0x64cbfd8b]
  404be0:	bound  ecx,QWORD PTR ds:[eax-0x36970106]
  404be7:	ret    
  404be8:	or     al,0x63
  404bea:	inc    eax
  404beb:	cld    
  404bec:	pop    DWORD PTR [edx-0x12]
  404bef:	inc    edx
  404bf0:	push   ebx
  404bf1:	clc    
  404bf2:	pop    ds
  404bf3:	sub    BYTE PTR [esi+0x50],0x9d
  404bf7:	mov    ah,0x7f
  404bf9:	into   
  404bfa:	add    DWORD PTR [esi],edi
  404bfc:	adc    bl,BYTE PTR [edx+0x1a]
  404bff:	enter  0x8c40,0xc5
  404c03:	mov    ch,0xad
  404c05:	mov    ebp,gs
  404c07:	push   ss
  404c08:	sbb    al,0x88
  404c0a:	xor    al,0xf
  404c0c:	sbb    ebx,DWORD PTR [edi+edx*8]
  404c0f:	dec    BYTE PTR [ebx]
  404c11:	and    al,0x44
  404c13:	add    eax,0x66d49827
  404c18:	adc    BYTE PTR ds:0x754656a4,bh
  404c1e:	pusha  
  404c1f:	or     eax,0xf83fb1e2
  404c24:	stos   DWORD PTR es:[edi],eax
  404c25:	clc    
  404c26:	mov    cl,0xc5
  404c28:	jmp    0x6a91f710
  404c2d:	loope  0x404c48
  404c2f:	jne    0x404be4
  404c31:	pop    ebx
  404c32:	push   ss
  404c33:	in     eax,0x76
  404c35:	popf   
  404c36:	pop    ebp
  404c37:	add    BYTE PTR [ecx],0x59
  404c3a:	fcom   DWORD PTR [esi-0xe5fa8c7]
  404c40:	retf   
  404c41:	lahf   
  404c42:	xchg   BYTE PTR [edx],al
  404c44:	(bad)  
  404c45:	sbb    al,0xf4
  404c47:	jns    0x404be1
  404c49:	pop    edi
  404c4a:	icebp  
  404c4b:	pop    esp
  404c4c:	pop    eax
  404c4d:	imul   esi,DWORD PTR [ebx-0x718160a4],0x9ef766a5
  404c57:	mov    ecx,esi
  404c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c5a:	xchg   ebp,eax
  404c5b:	in     al,0xe3
  404c5d:	lahf   
  404c5e:	je     0x404c53
  404c60:	stc    
  404c61:	fldenv [eax]
  404c63:	arpl   WORD PTR [ebp-0x63],di
  404c66:	fist   DWORD PTR [edi+ecx*8-0x27cb1752]
  404c6d:	push   ss
  404c6e:	and    DWORD PTR [edi+0x1f52958d],ebp
  404c74:	scas   al,BYTE PTR es:[edi]
  404c75:	retf   0xec45
  404c78:	sub    dh,BYTE PTR [edi-0x30a1121]
  404c7e:	out    0xcb,eax
  404c80:	xor    eax,0x879643f5
  404c85:	popa   
  404c86:	mov    eax,0x3c7de0ea
  404c8b:	fdivr  DWORD PTR [edi+0x23e12374]
  404c91:	in     al,0x5e
  404c93:	add    al,0x34
  404c95:	repnz adc eax,0x147df22
  404c9b:	arpl   bx,si
  404c9d:	inc    esi
  404c9e:	sub    bh,BYTE PTR [ebx-0x3150b2bd]
  404ca4:	fcom   DWORD PTR [ebx]
  404ca6:	or     al,0x70
  404ca8:	clc    
  404ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404caa:	push   0x66beeb9
  404caf:	inc    ecx
  404cb0:	add    bl,0xe
  404cb3:	ins    BYTE PTR es:[edi],dx
  404cb4:	jns    0x404c36
  404cb6:	shr    WORD PTR [ebp+0x54db10d0],0x59
  404cbe:	cmp    ebp,DWORD PTR [ecx]
  404cc0:	dec    ecx
  404cc1:	jns    0x404c4b
  404cc3:	and    al,0x40
  404cc5:	out    dx,al
  404cc6:	lods   al,BYTE PTR ds:[esi]
  404cc7:	in     al,0x10
  404cc9:	fmul   DWORD PTR [ecx+ebx*1]
  404ccc:	xor    ebp,0x3ca88e5f
  404cd2:	jno    0x404c9b
  404cd4:	jecxz  0x404cfb
  404cd6:	and    esi,DWORD PTR [eax+0x33b9a6de]
  404cdc:	and    eax,0x4f7cf7ca
  404ce1:	push   ecx
  404ce2:	bound  ebx,QWORD PTR [esi-0x4c480bb2]
  404ce8:	cld    
  404ce9:	mov    cs,ebx
  404ceb:	dec    eax
  404cec:	push   ds
  404ced:	je     0x404ce8
  404cef:	mov    ch,0x3d
  404cf1:	aam    0x5
  404cf3:	jnp    0x404d57
  404cf5:	stos   BYTE PTR es:[edi],al
  404cf6:	sub    edx,ebx
  404cf8:	fwait
  404cf9:	lds    edi,FWORD PTR [ecx+edi*1+0x26]
  404cfd:	mov    esp,0xf0adbfcb
  404d02:	mov    dl,0xf0
  404d04:	or     DWORD PTR [eax+0x52b0ec73],ebx
  404d0a:	out    dx,al
  404d0b:	mov    al,0x21
  404d0d:	xchg   edi,eax
  404d0e:	leave  
  404d0f:	(bad)  
  404d10:	push   ebp
  404d11:	jb     0x404d74
  404d13:	mov    bl,al
  404d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d16:	push   ecx
  404d17:	push   ss
  404d18:	gs jge 0x404d61
  404d1b:	fild   DWORD PTR [ebp+0x2c588d08]
  404d21:	add    BYTE PTR [edi-0x2ce165ef],ah
  404d27:	daa    
  404d28:	mov    DWORD PTR [esi+0x492bd81f],esp
  404d2e:	in     al,dx
  404d2f:	push   es
  404d30:	mov    cl,0x43
  404d32:	adc    al,0x8
  404d34:	clc    
  404d35:	shr    DWORD PTR [ecx-0x37],cl
  404d38:	sbb    al,0x93
  404d3a:	je     0x404d0a
  404d3c:	mov    dh,0xc4
  404d3e:	cli    
  404d3f:	and    DWORD PTR [eax-0x40],edi
  404d42:	mov    ebp,0x9ee15a78
  404d47:	jo     0x404cd9
  404d49:	dec    esi
  404d4a:	xchg   BYTE PTR [edx],ch
  404d4c:	pusha  
  404d4d:	push   es
  404d4e:	jp     0x404d1c
  404d50:	push   esp
  404d51:	sti    
  404d52:	mov    ds:0xf1642e24,al
  404d57:	aam    0x72
  404d59:	push   eax
  404d5a:	cli    
  404d5b:	rcr    dh,1
  404d5d:	adc    esi,esp
  404d5f:	(bad)  
  404d60:	push   edi
  404d61:	mov    edx,cs
  404d63:	ins    BYTE PTR es:[edi],dx
  404d64:	setno  BYTE PTR [ebx+0x11]
  404d68:	std    
  404d69:	scas   al,BYTE PTR es:[edi]
  404d6a:	xchg   esp,eax
  404d6b:	sti    
  404d6c:	xor    ecx,ebx
  404d6e:	repz jns 0x404d4e
  404d71:	mov    edx,ecx
  404d73:	cmp    ecx,DWORD PTR [esi-0x6c]
  404d76:	aas    
  404d77:	retf   
  404d78:	mov    al,ds:0xc90595fd
  404d7d:	cmp    bh,ah
  404d7f:	out    dx,eax
  404d80:	in     eax,dx
  404d81:	jno    0x404d46
  404d83:	mov    fs,WORD PTR [ebp+0x29]
  404d86:	ss mov bl,0x46
  404d89:	neg    DWORD PTR ds:0xfaa3ec36
  404d8f:	sub    BYTE PTR [edx+0x7af4f43e],0x3
  404d96:	sbb    DWORD PTR [edi+edi*2+0x7d],ebp
  404d9a:	inc    edx
  404d9b:	ds mov ebp,edi
  404d9e:	push   ss
  404d9f:	mov    al,0x24
  404da1:	aad    0xcd
  404da3:	mov    ch,BYTE PTR [esi]
  404da5:	hlt    
  404da6:	outs   dx,DWORD PTR ds:[esi]
  404da7:	jno    0x404d82
  404da9:	adc    al,0xd8
  404dab:	imul   ebp,DWORD PTR ds:0x5d22bdeb,0x2b
  404db2:	mov    edx,0xda886fe3
  404db7:	mov    BYTE PTR [ecx+0x76],ah
  404dba:	cmp    BYTE PTR [eax],dl
  404dbc:	imul   esp,DWORD PTR [eax],0x7d04f82d
  404dc2:	jmp    0x404dc0
  404dc4:	call   0xe3d0828b
  404dc9:	xchg   ebp,eax
  404dca:	retf   
  404dcb:	or     DWORD PTR [edi-0x16f82853],esp
  404dd1:	mov    gs,WORD PTR [ecx]
  404dd3:	loopne 0x404daa
  404dd5:	cmp    eax,0x774a77c8
  404dda:	ret    
  404ddb:	pushf  
  404ddc:	adc    BYTE PTR [edx+0x45],cl
  404ddf:	jge    0x404df2
  404de1:	repz pushf 
  404de3:	gs xchg ebp,eax
  404de5:	cmc    
  404de6:	mov    ebp,0x3ae7d4e8
  404deb:	xchg   ecx,eax
  404dec:	or     ah,BYTE PTR [eax+edx*4]
  404def:	cmp    DWORD PTR [ebp+0xd78168c],edx
  404df5:	mov    DWORD PTR [ecx-0x31],esi
  404df8:	addr16 clc 
  404dfa:	jmp    0x404db0
  404dfc:	dec    ecx
  404dfd:	add    BYTE PTR [edx+0x40],bl
  404e00:	(bad)  
  404e01:	js     0x404e04
  404e03:	and    edi,DWORD PTR [edx+0x7d31f8c3]
  404e09:	push   es
  404e0a:	outs   dx,BYTE PTR ds:[esi]
  404e0b:	xchg   edx,esi
  404e0d:	pushf  
  404e0e:	ja     0x404e1e
  404e10:	jno    0x404e38
  404e12:	lods   eax,DWORD PTR ds:[esi]
  404e13:	adc    al,0x44
  404e15:	mov    ah,0x3a
  404e17:	ja     0x404db0
  404e19:	xor    eax,0x44ab4ab
  404e1e:	sti    
  404e1f:	fbstp  TBYTE PTR [ebp-0x30]
  404e22:	pop    ecx
  404e23:	loope  0x404e68
  404e25:	pop    ss
  404e26:	sti    
  404e27:	std    
  404e28:	cdq    
  404e29:	mov    ch,0xfd
  404e2b:	sar    dl,cl
  404e2d:	sub    al,BYTE PTR [eax-0x43]
  404e30:	loop   0x404de1
  404e32:	add    ebp,DWORD PTR [ebp+0x1d]
  404e35:	fld    QWORD PTR [ecx+0x4b8346e1]
  404e3b:	or     dl,cl
  404e3d:	add    eax,0x92e0a870
  404e42:	mov    ds:0xd98bb779,eax
  404e47:	pop    ds
  404e48:	or     edi,eax
  404e4a:	ror    DWORD PTR [ebx],1
  404e4c:	pop    edx
  404e4d:	add    ecx,DWORD PTR [edi-0x3ca57788]
  404e53:	pushf  
  404e54:	push   cs
  404e55:	mov    bh,0xa4
  404e57:	jo     0x404eaa
  404e59:	adc    ah,BYTE PTR [edi+0x30]
  404e5c:	mov    dl,0x85
  404e5e:	pop    edx
  404e5f:	and    BYTE PTR ss:[ebp-0x48],dh
  404e63:	test   BYTE PTR [edi-0x1b],dh
  404e66:	sbb    ch,BYTE PTR [edx-0xc]
  404e69:	loopne 0x404ea7
  404e6b:	pop    ecx
  404e6c:	xchg   ecx,eax
  404e6d:	(bad)  
  404e6e:	mov    BYTE PTR ds:0x1f7347d9,ah
  404e74:	xchg   edx,eax
  404e75:	adc    esi,ebx
  404e77:	cli    
  404e78:	rcl    BYTE PTR ds:[edi],cl
  404e7b:	mov    esi,0xb1f0d739
  404e80:	arpl   WORD PTR ds:0x566d81cf,sp
  404e86:	aad    0xa7
  404e88:	aam    0xad
  404e8a:	test   DWORD PTR [eax+edx*8],esi
  404e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e8e:	mov    ebp,0x60f241b7
  404e93:	xchg   ebp,eax
  404e94:	mov    edx,0x25913fa7
  404e99:	xchg   ebx,eax
  404e9a:	adc    dl,BYTE PTR [edi-0x32851efb]
  404ea0:	inc    edx
  404ea1:	test   dh,dl
  404ea3:	jge    0x404e7c
  404ea5:	add    eax,0x636d31e3
  404eaa:	xor    al,0x9
  404eac:	push   es
  404ead:	cs mov cs,eax
  404eb0:	dec    esi
  404eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb2:	stos   DWORD PTR es:[edi],eax
  404eb3:	in     al,dx
  404eb4:	dec    ecx
  404eb5:	cmp    al,0xf6
  404eb7:	push   esi
  404eb8:	and    BYTE PTR [edi-0x4e06b59d],0x29
  404ebf:	pop    esp
  404ec0:	mov    al,ds:0x6b2b413e
  404ec5:	pop    eax
  404ec6:	stos   BYTE PTR es:[edi],al
  404ec7:	inc    ebp
  404ec8:	fwait
  404ec9:	or     eax,DWORD PTR [ebp-0x2]
  404ecc:	into   
  404ecd:	pop    edx
  404ece:	outs   dx,DWORD PTR ds:[esi]
  404ecf:	imul   BYTE PTR [ecx]
  404ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ed2:	push   ecx
  404ed3:	mov    bl,0xc6
  404ed5:	cmp    DWORD PTR [ebx-0x13],0x11
  404ed9:	mov    ebp,?
  404edb:	push   edx
  404edc:	lock test al,0xc1
  404edf:	aam    0xc5
  404ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee2:	mov    bh,0x21
  404ee5:	add    ebx,DWORD PTR [ebp-0x7796c28d]
  404eeb:	call   0x8a0e11ba
  404ef0:	outs   dx,DWORD PTR ds:[esi]
  404ef1:	and    eax,0x40a99bf1
  404ef6:	xor    DWORD PTR [eax-0x55274dc2],esi
  404efc:	adc    ebx,DWORD PTR [eax]
  404efe:	iret   
  404eff:	mov    dl,0x9b
  404f01:	sub    cl,BYTE PTR [esi+0x22]
  404f04:	in     eax,dx
  404f05:	dec    eax
  404f06:	pop    ebp
  404f07:	lea    eax,[edi+0x5d2926b5]
  404f0d:	in     eax,0x1c
  404f0f:	xchg   ecx,eax
  404f10:	arpl   WORD PTR [eax],bp
  404f12:	in     eax,0x63
  404f14:	hlt    
  404f15:	cmp    dh,0x50
  404f18:	lea    esi,[edi-0x2c]
  404f1b:	add    BYTE PTR [edx+0x9],dh
  404f1e:	out    0xc6,al
  404f20:	adc    BYTE PTR [ecx+0x602151fc],ah
  404f26:	arpl   WORD PTR [ecx-0x41999ed2],bp
  404f2c:	(bad)  
  404f2d:	mov    DWORD PTR [esi+0x65],0x7a9aca54
  404f34:	and    al,0x39
  404f36:	mov    bl,0xc8
  404f38:	push   edx
  404f39:	retf   
  404f3a:	lods   eax,DWORD PTR ds:[esi]
  404f3b:	fiadd  DWORD PTR [edx+edi*1+0x5d50e8c0]
  404f42:	mov    dh,0xd
  404f44:	iret   
  404f45:	or     al,0xa5
  404f47:	cdq    
  404f48:	jl     0x404f86
  404f4a:	and    ebx,ecx
  404f4c:	cs popa 
  404f4e:	jo     0x404fcd
  404f50:	jmp    0xafd6a5ab
  404f55:	das    
  404f56:	lea    ebp,[esi]
  404f58:	mov    ds:0xa927265f,eax
  404f5d:	pop    ss
  404f5e:	nop
  404f5f:	mov    eax,ds:0x16e48a13
  404f64:	outs   dx,BYTE PTR ds:[esi]
  404f65:	js     0x404fb7
  404f67:	rcr    DWORD PTR [ecx+0xfa702ec],cl
  404f6d:	ins    DWORD PTR es:[edi],dx
  404f6e:	cmp    al,0xb1
  404f70:	pop    edx
  404f71:	js     0x404fa1
  404f73:	xchg   ecx,eax
  404f74:	push   ebx
  404f75:	icebp  
  404f76:	cdq    
  404f77:	sbb    cl,ch
  404f79:	int3   
  404f7a:	lgdtd  [edx]
  404f7d:	fs push ebp
  404f7f:	ins    DWORD PTR es:[edi],dx
  404f80:	jae    0x404fa5
  404f82:	and    eax,ebx
  404f84:	jb     0x404fc8
  404f86:	pop    eax
  404f87:	mov    eax,ds:0xdd15fa66
  404f8c:	mov    ?,WORD PTR [ecx]
  404f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f8f:	inc    esp
  404f90:	xchg   ebp,eax
  404f91:	cld    
  404f92:	pop    ebp
  404f93:	xchg   BYTE PTR [eax],bl
  404f95:	call   0x137d:0xff8d41fa
  404f9c:	lea    esi,[ebx]
  404f9e:	fcom   DWORD PTR [edx-0x7c]
  404fa1:	and    al,BYTE PTR [edi]
  404fa3:	xor    DWORD PTR [edx-0xd8a44ed],esi
  404fa9:	add    DWORD PTR [ebx+edi*8+0x34],eax
  404fad:	(bad)  
  404faf:	imul   edx,DWORD PTR [eax],0xffffffe3
  404fb2:	hlt    
  404fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb4:	push   ds
  404fb5:	mov    dh,0xa6
  404fb7:	pop    ebp
  404fb8:	sbb    BYTE PTR [edi+0x7c],cl
  404fbb:	mov    ss,WORD PTR [esi-0x15]
  404fbe:	fld    st(6)
  404fc0:	lods   eax,DWORD PTR ds:[esi]
  404fc1:	outs   dx,DWORD PTR ds:[esi]
  404fc2:	fsub   DWORD PTR [esp+edi*4]
  404fc5:	in     eax,dx
  404fc6:	mov    WORD PTR [ebp-0x70],?
  404fc9:	mov    al,ds:0xc4420422
  404fce:	retf   0x592b
  404fd1:	mov    ch,0x12
  404fd3:	sbb    BYTE PTR [esi],ch
  404fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd6:	outs   dx,BYTE PTR ds:[esi]
  404fd7:	inc    eax
  404fd8:	repz lahf 
  404fda:	inc    eax
  404fdb:	pop    esi
  404fdc:	scas   eax,DWORD PTR es:[edi]
  404fdd:	cs fld st(1)
  404fe0:	addr16 out 0xdd,eax
  404fe3:	pusha  
  404fe4:	(bad)  
  404fe5:	int3   
  404fe6:	imul   edi,DWORD PTR [ebp+0x49],0x23c67c9e
  404fed:	mov    esp,0xae9ccb1b
  404ff2:	cmp    esi,esi
  404ff4:	iret   
  404ff5:	pushf  
  404ff6:	dec    ebx
  404ff7:	cmp    eax,0x7ac0959d
  404ffc:	sbb    DWORD PTR [esp+edx*2-0x57d9da7c],0xf0fe4c80
  405007:	sahf   
  405008:	cli    
  405009:	pusha  
  40500a:	addr16 cmp bh,al
  40500d:	or     ebx,ecx
  40500f:	cdq    
  405010:	push   0x29
  405012:	sar    DWORD PTR [edx-0x730471e0],1
  405018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405019:	(bad)  
  40501a:	out    0xb0,al
  40501c:	loopne 0x405037
  40501e:	cmp    BYTE PTR [ecx+0x443e3f15],ch
  405024:	and    al,0x49
  405026:	pushf  
  405027:	mov    al,0x9c
  405029:	cwde   
  40502a:	rcr    BYTE PTR [esi+0xe5e078f],1
  405030:	adc    ch,0x16
  405033:	ins    DWORD PTR es:[edi],dx
  405034:	xchg   esp,eax
  405035:	mov    al,0x76
  405037:	loop   0x404ff9
  405039:	out    0xe,al
  40503b:	xchg   edi,eax
  40503c:	cs icebp 
  40503e:	fistp  WORD PTR [ecx-0x3395d5a1]
  405044:	je     0x405080
  405046:	ror    DWORD PTR [ebp+0x6b],1
  405049:	xchg   esp,eax
  40504a:	pop    esi
  40504b:	sub    BYTE PTR [ecx+0xc],cl
  40504e:	sub    edx,ebp
  405050:	rcr    DWORD PTR [ebp+ecx*4+0x68],cl
  405054:	js     0x405000
  405056:	cmp    al,0x59
  405058:	sbb    BYTE PTR [ecx+ecx*8-0x16],dl
  40505c:	out    dx,eax
  40505d:	adc    eax,0x89aff4c0
  405062:	sub    cl,BYTE PTR [edi-0x79803cd7]
  405068:	je     0x40501f
  40506a:	pop    ebp
  40506b:	daa    
  40506c:	lods   al,BYTE PTR ds:[esi]
  40506d:	enter  0xaf76,0x9e
  405071:	shl    BYTE PTR [edi],0x13
  405074:	(bad)  [eax]
  405076:	push   esp
  405077:	cdq    
  405078:	push   ds
  405079:	jp     0x4050a9
  40507b:	je     0x40507b
  40507d:	stos   BYTE PTR es:[edi],al
  40507e:	sbb    al,0xe0
  405080:	pop    es
  405081:	sbb    DWORD PTR [ecx*8-0xb570e35],esi
  405088:	or     eax,0x6120aefb
  40508d:	neg    DWORD PTR [eax+0x53336049]
  405093:	xor    DWORD PTR [esi-0x19],0xffffffbb
  405097:	mov    eax,esi
  405099:	cli    
  40509a:	or     al,0xea
  40509c:	ins    DWORD PTR es:[edi],dx
  40509d:	inc    esp
  40509e:	loope  0x405091
  4050a0:	sub    BYTE PTR [eax],ch
  4050a2:	lods   eax,DWORD PTR ds:[esi]
  4050a3:	and    ch,BYTE PTR [edx+0x68]
  4050a6:	inc    ebp
  4050a7:	pushf  
  4050a8:	sbb    BYTE PTR ds:0x9c9bc911,bl
  4050ae:	pop    edx
  4050af:	fsub   DWORD PTR cs:[esi+0x1d]
  4050b3:	jns    0x4050ba
  4050b5:	push   edx
  4050b6:	mov    cl,0x2c
  4050b8:	ja     0x4050f3
  4050ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050bb:	jle    0x405108
  4050bd:	repnz mov edi,0xc978a19f
  4050c3:	xchg   esp,eax
  4050c4:	xchg   esi,eax
  4050c5:	rol    BYTE PTR [esi+0x1e],cl
  4050c8:	out    dx,eax
  4050c9:	add    DWORD PTR [ebx-0x20],edx
  4050cc:	cdq    
  4050cd:	cmp    ecx,ebp
  4050cf:	fsub   QWORD PTR [esi+ebp*8-0x72d04904]
  4050d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050d7:	mov    ds:0x39b2f0d6,al
  4050dc:	inc    eax
  4050dd:	xor    eax,0xff110fab
  4050e2:	loope  0x40506f
  4050e4:	retf   
  4050e5:	(bad)  
  4050e6:	cmp    dl,al
  4050e8:	iret   
  4050e9:	mov    al,0xf5
  4050eb:	retf   
  4050ec:	ds ret 
  4050ee:	iret   
  4050ef:	fisub  WORD PTR [ebx-0x26]
  4050f2:	fidiv  WORD PTR [eax]
  4050f4:	xlat   BYTE PTR ds:[ebx]
  4050f5:	iret   
  4050f6:	(bad)  
  4050f7:	daa    
  4050f8:	call   0x5b5a:0x5190662c
  4050ff:	jno    0x405153
  405101:	xchg   ah,bh
  405103:	inc    edx
  405104:	shr    DWORD PTR [eax-0x3c0165eb],0xfe
  40510b:	xchg   ecx,eax
  40510c:	jmp    0x7d62cb39
  405111:	jae    0x4050a8
  405113:	xchg   bl,cl
  405115:	jbe    0x40517e
  405117:	push   0x5c
  405119:	jmp    DWORD PTR [eax+0x34]
  40511c:	or     DWORD PTR [ecx+ebx*8],0x6013366e
  405123:	adc    DWORD PTR [esi-0x1e],ebp
  405126:	out    0xfe,al
  405128:	shl    BYTE PTR [ebx],1
  40512a:	cs int 0xff
  40512d:	bound  edx,QWORD PTR [edx+0x19a3e67a]
  405133:	cmp    eax,0xb289c2fc
  405138:	inc    edi
  405139:	cs scas al,BYTE PTR es:[edi]
  40513b:	xchg   esi,eax
  40513c:	sub    DWORD PTR [edi+edi*2-0x35f2572c],0xd18e2e38
  405147:	sbb    cl,BYTE PTR [ebx]
  405149:	dec    esp
  40514a:	cmp    ecx,edx
  40514c:	bound  ecx,QWORD PTR [edi-0x57]
  40514f:	add    eax,0x3539bbde
  405154:	sar    BYTE PTR [edx+0x7d32d571],1
  40515a:	add    DWORD PTR [edx],ebx
  40515c:	icebp  
  40515d:	add    eax,0xdb9bc8ea
  405162:	shl    BYTE PTR [ebx-0x27],cl
  405165:	out    dx,al
  405166:	aaa    
  405167:	push   esi
  405168:	jnp    0x4050fc
  40516a:	out    0x30,al
  40516c:	icebp  
  40516d:	dec    ebp
  40516e:	pop    eax
  40516f:	sub    ebx,0x38
  405172:	push   edi
  405173:	xor    al,0x16
  405175:	jb     0x405130
  405177:	push   ss
  405178:	neg    DWORD PTR [ecx+0x21]
  40517b:	mov    dl,0x52
  40517d:	stos   DWORD PTR es:[edi],eax
  40517e:	aas    
  40517f:	outs   dx,BYTE PTR ds:[esi]
  405180:	test   DWORD PTR [ebp-0x14d5e306],edi
  405186:	ins    DWORD PTR es:[edi],dx
  405187:	stos   DWORD PTR es:[edi],eax
  405188:	inc    edi
  405189:	into   
  40518a:	es (bad) 
  40518c:	std    
  40518d:	cs mov ecx,0x8be66644
  405193:	(bad)  
  405194:	retf   
  405195:	cld    
  405196:	ret    
  405197:	stos   DWORD PTR es:[edi],eax
  405198:	out    0xcb,al
  40519a:	pop    edx
  40519b:	dec    ebx
  40519c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40519e:	mov    ds:0xaf357205,eax
  4051a3:	(bad)  
  4051a4:	lock out 0xe9,eax
  4051a7:	int    0xb9
  4051a9:	fsub   DWORD PTR [ecx+0x60177f8]
  4051af:	outs   dx,DWORD PTR ds:[esi]
  4051b0:	enter  0xc4e9,0x38
  4051b4:	push   ss
  4051b5:	(bad)  
  4051b6:	jmp    0x4051a5
  4051b8:	fnstsw WORD PTR [ebx-0x36780b06]
  4051be:	jg     0x405166
  4051c0:	lods   eax,DWORD PTR ds:[esi]
  4051c1:	sbb    dl,BYTE PTR [eax]
  4051c3:	inc    eax
  4051c4:	les    edx,FWORD PTR [edx+0x41]
  4051c7:	xlat   BYTE PTR ds:[ebx]
  4051c8:	and    eax,0xd6048955
  4051cd:	dec    esp
  4051ce:	jno    0x405234
  4051d0:	(bad)  
  4051d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d3:	xor    al,0xb3
  4051d5:	sub    al,0x72
  4051d7:	jo     0x40522f
  4051d9:	mov    BYTE PTR [eax-0x47577493],cl
  4051df:	mov    esi,es
  4051e1:	test   al,0x65
  4051e3:	and    al,0xa0
  4051e5:	and    ebx,esi
  4051e7:	mov    edi,DWORD PTR gs:[edx]
  4051ea:	not    BYTE PTR [esi+eiz*2]
  4051ed:	sbb    BYTE PTR [edi+0x6e],bh
  4051f0:	stos   DWORD PTR es:[edi],eax
  4051f1:	adc    eax,0x61a0dce1
  4051f6:	xor    dl,BYTE PTR [eax+0x177009b6]
  4051fc:	sbb    al,0x19
  4051fe:	inc    ebp
  4051ff:	jmp    0x94a4cf69
  405204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405205:	cmp    al,0xb6
  405207:	mov    edi,db4
  40520a:	int3   
  40520b:	sbb    dl,BYTE PTR [edx]
  40520d:	cmc    
  40520e:	pop    edx
  40520f:	mov    ah,0xb
  405211:	call   0x1650904b
  405216:	sub    al,0xd7
  405218:	neg    dl
  40521a:	push   edx
  40521b:	jne    0x405218
  40521d:	mov    ecx,0x591bed7e
  405222:	pop    edi
  405223:	dec    esi
  405224:	in     eax,dx
  405225:	out    0x8d,al
  405227:	data16 mov bl,0x50
  40522a:	sbb    cl,BYTE PTR [edi]
  40522c:	xor    dl,ch
  40522e:	das    
  40522f:	gs dec eax
  405231:	dec    esi
  405232:	or     al,0xfd
  405234:	jmp    0x40526d
  405236:	(bad)  [ecx]
  405238:	shr    BYTE PTR [ebx],0x40
  40523b:	fstp   DWORD PTR [eax]
  40523d:	and    DWORD PTR ds:0x1fc336ed,esi
  405244:	xor    bl,BYTE PTR [edx]
  405246:	popa   
  405247:	or     ch,BYTE PTR [ebp+0xcf4f766]
  40524d:	pushf  
  40524e:	clc    
  40524f:	mov    edx,0xd72dfc66
  405254:	adc    ecx,esp
  405256:	arpl   di,bp
  405258:	jbe    0x40525e
  40525a:	xchg   esp,eax
  40525b:	push   ebx
  40525c:	pop    edi
  40525d:	mov    al,ds:0xe4005219
  405262:	imul   edx,DWORD PTR [eax+0x41],0x6d0ffeaf
  405269:	fiadd  DWORD PTR [ebp-0xd]
  40526c:	stos   BYTE PTR es:[edi],al
  40526d:	fwait
  40526e:	xlat   BYTE PTR ds:[ebx]
  40526f:	call   0x33d0:0x768d9e20
  405276:	add    bl,BYTE PTR [edi-0x4e4e1ce4]
  40527c:	out    0x70,al
  40527e:	and    cl,BYTE PTR [ebp-0x2]
  405281:	lods   eax,DWORD PTR ds:[esi]
  405282:	daa    
  405283:	mov    dl,0xca
  405285:	loop   0x4052bc
  405287:	mov    WORD PTR [eax],cs
  405289:	bound  edx,QWORD PTR [eax]
  40528b:	mov    esp,0xd82868c8
  405290:	or     esp,DWORD PTR [esp+ebp*4]
  405293:	push   0xa45993ac
  405298:	in     al,0xbf
  40529a:	pop    ss
  40529b:	je     0x40529c
  40529d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40529e:	inc    ebp
  40529f:	cmp    edx,DWORD PTR [edi-0x4c]
  4052a2:	sbb    eax,0x9ed7fe4c
  4052a7:	jo     0x405233
  4052a9:	imul   esi,edi,0xa2fea1bc
  4052af:	pop    esp
  4052b0:	addr16 popf 
  4052b2:	retf   0xf5c8
  4052b5:	ins    BYTE PTR es:[edi],dx
  4052b6:	sbb    eax,0x81cda433
  4052bb:	cwde   
  4052bc:	jae    0x40527f
  4052be:	and    BYTE PTR [eax+0x657da557],dl
  4052c4:	sti    
  4052c5:	xchg   esi,eax
  4052c6:	(bad)  
  4052c7:	int3   
  4052c8:	pop    eax
  4052c9:	idiv   BYTE PTR [ebp-0x3b]
  4052cc:	inc    eax
  4052cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ce:	or     BYTE PTR [edi+0x2f],ah
  4052d1:	aaa    
  4052d2:	push   ecx
  4052d3:	cmp    ecx,ebx
  4052d5:	push   0x7e
  4052d7:	rcr    esp,cl
  4052d9:	mov    dh,0xe8
  4052db:	cmp    al,0x75
  4052dd:	fld    TBYTE PTR [eax+0x5a5c7c61]
  4052e3:	(bad)  
  4052e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052e5:	fcmovu st,st(5)
  4052e7:	mov    ah,0x87
  4052e9:	daa    
  4052ea:	add    eax,0x78cb8e2f
  4052ef:	ret    0xd4c4
  4052f2:	mov    edx,0x715c945a
  4052f7:	mov    bh,0xed
  4052f9:	mov    WORD PTR [esi+0x7b],cs
  4052fc:	xchg   DWORD PTR [esi],edx
  4052fe:	xchg   esi,eax
  4052ff:	mov    esi,DWORD PTR [ecx+0x65]
  405302:	or     ch,bl
  405304:	xchg   edi,eax
  405305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405306:	and    DWORD PTR [ebx-0x16],0xcc39b0d6
  40530d:	xchg   ebx,eax
  40530e:	jmp    0xe03a51c6
  405313:	(bad)  
  405314:	add    bl,BYTE PTR ds:0x86437bf5
  40531a:	push   ebp
  40531b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40531c:	xchg   esp,eax
  40531d:	mov    esi,0x447d5830
  405322:	fwait
  405323:	pusha  
  405324:	nop
  405325:	push   ds
  405326:	out    dx,al
  405327:	cdq    
  405328:	fsub   QWORD PTR [edx-0x6c061196]
  40532e:	ins    DWORD PTR es:[edi],dx
  40532f:	stos   BYTE PTR es:[edi],al
  405330:	sbb    BYTE PTR [ebx-0x7],ch
  405333:	mov    ch,0x81
  405335:	sub    al,0xb3
  405337:	cmp    al,0xd8
  405339:	adc    BYTE PTR [ebx],cl
  40533b:	ret    0x11b0
  40533e:	dec    ah
  405340:	pop    esp
  405341:	or     eax,0xa412df80
  405346:	inc    ecx
  405347:	into   
  405348:	cmp    al,0xba
  40534a:	in     eax,0x26
  40534c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534d:	sbb    dh,BYTE PTR [eax-0x1f]
  405350:	sbb    al,0xd1
  405352:	sbb    DWORD PTR [ecx],ebp
  405354:	xchg   ecx,eax
  405355:	dec    ebp
  405356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405357:	es jns 0x405319
  40535a:	stos   DWORD PTR es:[edi],eax
  40535b:	pop    ss
  40535c:	fcmovnb st,st(6)
  40535e:	xor    eax,0x651265ab
  405363:	mov    bh,0xaa
  405365:	nop
  405366:	pop    ds
  405367:	call   0x687c2620
  40536c:	bound  esi,QWORD PTR [eax+0x3b7fede3]
  405372:	ins    DWORD PTR es:[edi],dx
  405373:	(bad)  
  405374:	and    cl,BYTE PTR [esi]
  405376:	add    BYTE PTR [edx+0x78],cl
  405379:	inc    edi
  40537a:	jno    0x40534a
  40537c:	adc    al,0x74
  40537e:	mov    bh,0x4a
  405380:	push   esp
  405381:	sbb    DWORD PTR [eax-0x6c],0x15
  405385:	retf   0xf911
  405388:	sub    al,0x89
  40538a:	out    dx,eax
  40538b:	and    BYTE PTR [ebp-0x10],dl
  40538e:	xchg   ebx,eax
  40538f:	inc    esi
  405390:	out    dx,eax
  405391:	xchg   eax,edi
  405393:	jl     0x4053fc
  405395:	repnz pop ebp
  405397:	push   ecx
  405398:	inc    eax
  405399:	lods   al,BYTE PTR ds:[esi]
  40539a:	push   cs
  40539b:	sbb    eax,0xb0c331a6
  4053a0:	arpl   si,cx
  4053a2:	or     eax,0xeae904d
  4053a7:	cmp    DWORD PTR [eax+0x30b6464e],0xfffffffb
  4053ae:	retf   
  4053af:	xchg   BYTE PTR [ecx],bl
  4053b1:	jo     0x40536e
  4053b3:	push   ecx
  4053b4:	jle    0x405351
  4053b6:	push   eax
  4053b7:	sahf   
  4053b8:	outs   dx,BYTE PTR ds:[esi]
  4053b9:	lods   al,BYTE PTR ds:[esi]
  4053ba:	mov    WORD PTR [edi-0x397df015],ss
  4053c0:	lea    edi,[ecx+edx*2-0x8]
  4053c4:	jg     0x4053e9
  4053c6:	inc    ebx
  4053c7:	jge    0x40540a
  4053c9:	pop    ebx
  4053ca:	pop    ebp
  4053cb:	hlt    
  4053cc:	test   al,0x82
  4053ce:	cmc    
  4053cf:	jb     0x4053e3
  4053d1:	inc    edi
  4053d2:	dec    ebp
  4053d3:	inc    ebx
  4053d4:	dec    ecx
  4053d5:	xor    DWORD PTR [esi-0x47],edi
  4053d8:	pusha  
  4053d9:	dec    eax
  4053da:	mov    ebx,0x82e0f681
  4053df:	cmc    
  4053e0:	ret    
  4053e1:	in     al,0x2a
  4053e3:	cmp    esi,ebp
  4053e5:	dec    ebp
  4053e6:	mov    ah,0x9d
  4053e8:	cmp    eax,0x3dec0e36
  4053ed:	pop    esi
  4053ee:	or     ch,BYTE PTR [edi*8-0x262d5fef]
  4053f5:	fnstsw WORD PTR [ecx+edx*1+0x30e17e48]
  4053fc:	fcom   DWORD PTR [edi-0x178e45e4]
  405402:	dec    edx
  405403:	imul   ebp,DWORD PTR [ecx],0x27
  405406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405407:	out    0x4,al
  405409:	xor    BYTE PTR [ebx*2-0x7f62487b],bl
  405410:	xor    DWORD PTR [eax],ebp
  405412:	stc    
  405413:	xchg   ecx,eax
  405414:	mov    cl,dh
  405416:	ror    esp,1
  405418:	xchg   edi,eax
  405419:	cmp    BYTE PTR [esi-0x400e3e82],bh
  40541f:	mov    esp,0x860b00a3
  405424:	cmp    ebx,DWORD PTR [eax+0x6ec37414]
  40542a:	(bad)  
  40542b:	aas    
  40542c:	int3   
  40542d:	in     al,0x3f
  40542f:	(bad)  
  405430:	or     DWORD PTR [ebp+0x19],esp
  405433:	push   eax
  405434:	pop    edi
  405435:	clc    
  405436:	int3   
  405437:	shl    BYTE PTR [ebp+0x67b1c13a],1
  40543d:	xchg   ebx,eax
  40543e:	(bad)  
  40543f:	addr16 push cs
  405441:	push   0x43
  405443:	xchg   esp,eax
  405444:	test   ebp,edi
  405446:	scas   al,BYTE PTR es:[edi]
  405447:	and    BYTE PTR [eax+ebx*1+0x2235b512],dh
  40544e:	cli    
  40544f:	and    DWORD PTR [esi-0x4],ecx
  405452:	mov    eax,ds:0x47463c6e
  405457:	push   edx
  405458:	jg     0x405488
  40545a:	shl    BYTE PTR [edx+0x9],1
  40545d:	in     eax,dx
  40545e:	sbb    ch,BYTE PTR [esi+0x47601775]
  405464:	inc    ecx
  405465:	jle    0x4053eb
  405467:	ss nop
  405469:	int3   
  40546a:	stc    
  40546b:	sbb    bl,dl
  40546d:	mov    DWORD PTR [eax-0x7e],0x43191047
  405474:	mov    al,0x95
  405476:	jmp    0xd3931616
  40547b:	push   ebp
  40547c:	push   0xffffff8d
  40547e:	cmp    esi,DWORD PTR [edi-0x53104521]
  405484:	outs   dx,DWORD PTR ds:[esi]
  405485:	xlat   BYTE PTR ds:[ebx]
  405486:	adc    ecx,DWORD PTR [ebp*8+0x31ea1ff9]
  40548d:	mov    al,ds:0x755a41fb
  405492:	jns    0x405500
  405494:	pop    ecx
  405495:	jl     0x40542b
  405497:	jecxz  0x4054d1
  405499:	adc    cl,BYTE PTR [edi+0x4a]
  40549c:	iret   
  40549d:	sar    BYTE PTR [edi-0x73e623a7],1
  4054a3:	inc    ebx
  4054a4:	je     0x405464
  4054a6:	imul   ebp
  4054a8:	or     DWORD PTR [ecx-0x4b2d005d],ecx
  4054ae:	and    cl,BYTE PTR [esi-0x74]
  4054b1:	push   ecx
  4054b2:	xor    BYTE PTR [eax],bl
  4054b4:	dec    ebx
  4054b5:	mov    esi,0xe16d0681
  4054ba:	sub    BYTE PTR [edx],cl
  4054bc:	out    0x9d,eax
  4054be:	mov    al,ds:0x149623ba
  4054c3:	ficom  WORD PTR [ecx+ebx*8+0xd]
  4054c7:	cs dec eax
  4054c9:	adc    BYTE PTR [ecx+0x3a42360a],ah
  4054cf:	leave  
  4054d0:	xchg   edi,eax
  4054d1:	or     al,0xab
  4054d3:	and    eax,0xf130426b
  4054d8:	fdiv   QWORD PTR [edi-0x1e632496]
  4054de:	(bad)  
  4054df:	sbb    ecx,DWORD PTR [ebx]
  4054e1:	mov    ebp,0xa140d622
  4054e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e7:	sbb    al,0xf8
  4054e9:	test   BYTE PTR [ecx],0x40
  4054ec:	hlt    
  4054ed:	xchg   dl,al
  4054ef:	sub    al,0x98
  4054f1:	cmp    ch,BYTE PTR [esi]
  4054f3:	dec    ecx
  4054f4:	or     DWORD PTR [esi],eax
  4054f6:	push   esp
  4054f7:	aas    
  4054f8:	(bad)  
  4054fa:	push   edx
  4054fb:	daa    
  4054fc:	or     al,0xcb
  4054fe:	cli    
  4054ff:	dec    ecx
  405500:	cld    
  405501:	push   edi
  405502:	lea    eax,[ecx-0x46]
  405505:	pop    eax
  405506:	cld    
  405507:	inc    esp
  405508:	jno    0x4054d2
  40550a:	sar    BYTE PTR [esi],cl
  40550c:	pushf  
  40550d:	frstor [ebx-0x1d]
  405510:	xor    eax,0xd2d620ed
  405515:	inc    eax
  405516:	int3   
  405517:	ret    0xa968
  40551a:	aaa    
  40551b:	mov    eax,0xf20e5e09
  405520:	test   DWORD PTR [esi],ebp
  405522:	out    0x5a,eax
  405524:	aam    0x6d
  405526:	sub    cl,dh
  405528:	int3   
  405529:	lea    ebx,[ebp+0x187e7966]
  40552f:	push   esp
  405530:	adc    ebp,DWORD PTR [edx-0x1]
  405533:	lods   eax,DWORD PTR ds:[esi]
  405534:	adc    DWORD PTR [eax+0x57c93c97],0xfc153ce8
  40553e:	xor    edx,esi
  405540:	jp     0x405572
  405542:	push   es
  405543:	mov    esi,DWORD PTR [ecx+ecx*8]
  405546:	(bad)  
  405547:	jge    0x405597
  405549:	add    edx,DWORD PTR [ebp+0x7a]
  40554c:	idiv   DWORD PTR [ecx]
  40554e:	mov    ds:0xeb0051cf,eax
  405553:	jnp    0x405522
  405555:	mov    esi,0x40f20e1f
  40555a:	mov    eax,0x3bb46689
  40555f:	daa    
  405560:	bound  edi,QWORD PTR [ecx]
  405562:	rcr    DWORD PTR [eax-0x6e7f5c97],cl
  405568:	stos   DWORD PTR es:[edi],eax
  405569:	xor    al,0xa6
  40556b:	dec    ecx
  40556c:	loope  0x4055cf
  40556e:	sbb    DWORD PTR [edx],edi
  405570:	inc    ecx
  405571:	jnp    0x405598
  405573:	sub    BYTE PTR [edx-0x20],dh
  405576:	pop    esi
  405577:	xchg   ebp,eax
  405578:	mov    al,0x20
  40557a:	jnp    0x4055a0
  40557c:	and    BYTE PTR ds:0xa323cab8,dl
  405582:	mov    ah,0x10
  405584:	(bad)  
  405585:	(bad)  
  405586:	xor    eax,0x6bfc46ca
  40558b:	fadd   QWORD PTR [ebx+edx*8+0x43]
  40558f:	push   ss
  405590:	stos   BYTE PTR es:[edi],al
  405591:	cmp    DWORD PTR [edx-0x654f256a],esp
  405597:	or     DWORD PTR [ebx-0x7ca91bb8],esp
  40559d:	xchg   DWORD PTR ds:0xca7457da,ebp
  4055a3:	push   esp
  4055a4:	or     dh,BYTE PTR [eax+0x7]
  4055a7:	cmp    eax,0xb4e1f09c
  4055ac:	mov    edx,0xd5ab2a60
  4055b1:	sbb    al,0xac
  4055b3:	retf   0x3c63
  4055b6:	adc    eax,0x78bf7956
  4055bb:	cmp    eax,DWORD PTR [edi+0x5f]
  4055be:	push   eax
  4055bf:	mov    cl,0x98
  4055c1:	pop    ecx
  4055c2:	jl     0x4055e3
  4055c4:	push   edi
  4055c5:	loope  0x4055d5
  4055c7:	pop    esi
  4055c8:	xor    dh,ah
  4055ca:	mov    ebp,0xc58d6ed7
  4055cf:	sti    
  4055d0:	inc    esp
  4055d1:	stos   DWORD PTR es:[edi],eax
  4055d2:	push   eax
  4055d3:	inc    esp
  4055d4:	jmp    0x405630
  4055d6:	sar    DWORD PTR [edx+0x3a],cl
  4055d9:	(bad)  
  4055da:	xor    BYTE PTR [ebx],bl
  4055dc:	fcmovbe st,st(0)
  4055de:	shl    BYTE PTR [edi+0x77],0x2a
  4055e2:	cld    
  4055e3:	mov    ebx,0x628cb251
  4055e8:	add    al,0xee
  4055ea:	in     eax,0x3f
  4055ec:	add    esi,ebp
  4055ee:	jp     0x405587
  4055f0:	xchg   edx,eax
  4055f1:	cdq    
  4055f2:	out    dx,al
  4055f3:	xchg   edi,eax
  4055f4:	push   es
  4055f5:	cmp    dl,cl
  4055f7:	mov    al,ds:0xd1d97c
  4055fc:	(bad)  
  4055fd:	ins    BYTE PTR es:[edi],dx
  4055fe:	sbb    al,0x8d
  405600:	outs   dx,DWORD PTR ds:[esi]
  405601:	fisttp QWORD PTR [eax+ebp*1]
  405604:	aaa    
  405605:	mov    dl,0x20
  405607:	aaa    
  405608:	lahf   
  405609:	jp     0x4055db
  40560b:	push   0xcce6be43
  405610:	test   BYTE PTR [edx],al
  405612:	iret   
  405613:	jnp    0x4055e0
  405615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405616:	mov    esp,ebx
  405618:	cmp    BYTE PTR [ebp-0x3444e0b4],0xcd
  40561f:	call   0x43f5:0x76e7d78a
  405626:	and    BYTE PTR [eax+0x697ef343],bl
  40562c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40562e:	clc    
  40562f:	add    ecx,DWORD PTR [ebx]
  405631:	iret   
  405632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405633:	cmp    eax,0x944a976e
  405638:	enter  0xe9e4,0x1f
  40563c:	scas   eax,DWORD PTR es:[edi]
  40563d:	popa   
  40563e:	lods   eax,DWORD PTR ds:[esi]
  40563f:	fistp  QWORD PTR [edi-0x73]
  405642:	mov    eax,0xdee54ad1
  405647:	in     al,0xa
  405649:	test   DWORD PTR [edi+0x51b318bd],ebp
  40564f:	ja     0x40563c
  405651:	adc    dh,0xc1
  405654:	daa    
  405655:	add    al,0xb
  405657:	xchg   ecx,eax
  405658:	sub    ah,BYTE PTR [ecx+0x63]
  40565b:	and    al,0xdd
  40565d:	cmp    bl,BYTE PTR [esp+ebp*4+0x77c192b4]
  405664:	stc    
  405665:	inc    ebx
  405666:	adc    edx,DWORD PTR [ebp-0x12]
  405669:	int3   
  40566a:	aas    
  40566b:	retf   0xa089
  40566e:	pop    edx
  40566f:	outs   dx,DWORD PTR ds:[esi]
  405670:	(bad)  [esi-0x7c029b65]
  405676:	xchg   edi,eax
  405677:	cmp    al,0x97
  405679:	or     al,0xf3
  40567b:	js     0x4056f1
  40567d:	out    dx,al
  40567e:	jp     0x405601
  405680:	ins    DWORD PTR es:[edi],dx
  405681:	scas   al,BYTE PTR es:[edi]
  405682:	fnsave [ecx-0x48]
  405685:	fld    QWORD PTR [ebx]
  405687:	cmp    DWORD PTR [edi],0x6481cf5c
  40568d:	sahf   
  40568e:	sub    bl,BYTE PTR [esp+esi*2+0x6ec81d95]
  405695:	retf   
  405696:	sbb    ecx,DWORD PTR [ebx+0x39509c7a]
  40569c:	sub    eax,edi
  40569e:	les    edi,FWORD PTR [esi+0x52e68d1d]
  4056a4:	push   esi
  4056a5:	stos   DWORD PTR es:[edi],eax
  4056a6:	ss jg  0x4056ff
  4056a9:	pop    ebp
  4056aa:	into   
  4056ab:	(bad)  
  4056ac:	pop    ebx
  4056ad:	pop    ecx
  4056ae:	retf   
  4056af:	repz adc BYTE PTR [eax+0x45],0x2a
  4056b4:	adc    dl,0x87
  4056b7:	fsub   QWORD PTR [ebx+eiz*2+0x7b]
  4056bb:	push   edi
  4056bc:	fst    DWORD PTR [edi+0x53]
  4056bf:	and    BYTE PTR [edi],ch
  4056c1:	mov    al,0xe4
  4056c3:	mov    esp,0x36446622
  4056c8:	pop    esp
  4056c9:	das    
  4056ca:	inc    ebp
  4056cb:	clc    
  4056cc:	or     al,0x0
  4056ce:	push   si
  4056d0:	test   DWORD PTR [ecx],edi
  4056d2:	clc    
  4056d3:	and    al,0x76
  4056d5:	arpl   dx,di
  4056d7:	jns    0x405757
  4056d9:	retf   
  4056da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056db:	leave  
  4056dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056dd:	inc    esi
  4056de:	and    ebp,DWORD PTR [ebp-0x78]
  4056e1:	cmp    al,0xa7
  4056e3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4056e5:	cmp    eax,0x807d64e
  4056ea:	and    eax,0xafeec163
  4056ef:	pop    edx
  4056f0:	ins    DWORD PTR es:[edi],dx
  4056f1:	mov    cl,0xdc
  4056f3:	or     DWORD PTR [edx-0xf24a5e1],ebp
  4056f9:	and    eax,0x4cd16f1
  4056fe:	and    al,0x14
  405700:	ja     0x4056a1
  405702:	imul   edi,ebx,0x95b3c08
  405708:	xchg   edi,eax
  405709:	icebp  
  40570a:	ret    
  40570b:	es out dx,eax
  40570d:	ss xchg ebx,eax
  40570f:	les    edi,FWORD PTR [ecx]
  405711:	add    edx,DWORD PTR [ebp+0x59d62bc2]
  405717:	xchg   ch,dl
  405719:	lods   al,BYTE PTR ds:[esi]
  40571a:	loop   0x4056d1
  40571c:	inc    esi
  40571d:	pop    edi
  40571e:	nop
  40571f:	pop    ebx
  405720:	int    0xc
  405722:	in     al,dx
  405723:	and    esp,eax
  405725:	fild   DWORD PTR [eax]
  405727:	inc    BYTE PTR [ebx]
  405729:	rcr    eax,1
  40572b:	iret   
  40572c:	jb     0x4056ba
  40572e:	psubusb mm1,QWORD PTR [eax-0x35]
  405732:	loop   0x405772
  405734:	out    0x8,al
  405736:	xchg   ebx,eax
  405737:	into   
  405738:	ror    ah,cl
  40573a:	nop
  40573b:	repz lds ecx,FWORD PTR [edx-0x57ab3eb6]
  405742:	ja     0x4057a4
  405744:	sbb    al,0xcc
  405746:	mov    edi,DWORD PTR [eax+ebp*8-0x42]
  40574a:	xchg   BYTE PTR [ecx],dh
  40574c:	and    DWORD PTR [ecx+0x1a0f5e4a],eax
  405752:	lea    esi,[edx]
  405754:	clc    
  405755:	ins    DWORD PTR es:[di],dx
  405757:	ss scas al,BYTE PTR es:[edi]
  405759:	dec    eax
  40575a:	test   al,0x77
  40575c:	ins    BYTE PTR es:[edi],dx
  40575d:	dec    edx
  40575e:	mov    BYTE PTR [ecx],bl
  405760:	dec    esi
  405761:	or     eax,0x55a630e6
  405766:	inc    edi
  405767:	in     al,0x4d
  405769:	rcr    BYTE PTR ds:0x35b669c2,cl
  40576f:	mov    bh,al
  405771:	xchg   ebx,eax
  405772:	and    eax,0x937cf726
  405777:	outs   dx,BYTE PTR ds:[esi]
  405778:	lds    esi,FWORD PTR [ecx+0x3deb3a]
  40577e:	cmp    BYTE PTR [edx],dl
  405780:	rcr    ch,1
  405782:	mov    cl,0x18
  405784:	dec    ebx
  405785:	add    ah,dh
  405787:	xrelease mov DWORD PTR [eax+ebx*8+0x6e],0xb5b642fa
  405790:	fsub   QWORD PTR [edi]
  405792:	mov    dl,0x8b
  405794:	test   eax,0x9966c47c
  405799:	lea    esi,[esi-0x3d76edbc]
  40579f:	adc    esi,DWORD PTR [edi-0x6e746259]
  4057a5:	mov    bl,0x53
  4057a7:	xor    DWORD PTR [eax+0xd],eax
  4057aa:	mov    ds:0x138721b9,al
  4057af:	pop    eax
  4057b0:	adc    al,0xb3
  4057b2:	jmp    0x4057fb
  4057b4:	mov    dh,0x7
  4057b6:	imul   edi,esp,0x38
  4057b9:	jmp    0x40578b
  4057bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057bc:	pusha  
  4057bd:	sti    
  4057be:	or     eax,DWORD PTR [ebp+0x4]
  4057c1:	dec    esp
  4057c2:	push   edi
  4057c3:	mov    bl,0x44
  4057c5:	les    eax,FWORD PTR [ecx+0x46edd471]
  4057cb:	fsubr  DWORD PTR [ecx-0x641028b1]
  4057d1:	into   
  4057d2:	fisttp WORD PTR [ebx-0x6e]
  4057d5:	in     eax,dx
  4057d6:	push   edi
  4057d7:	sahf   
  4057d8:	rol    BYTE PTR [ebx-0x5d],0xd3
  4057dc:	stos   DWORD PTR es:[edi],eax
  4057dd:	pop    eax
  4057de:	pop    ebp
  4057df:	stos   BYTE PTR es:[edi],al
  4057e0:	out    0x9d,eax
  4057e2:	sub    ebx,DWORD PTR [eax+0xab70a7a]
  4057e8:	cmp    eax,0x4152ac12
  4057ed:	pop    esi
  4057ee:	aam    0x80
  4057f0:	push   eax
  4057f1:	repz cmp bh,al
  4057f4:	mov    esi,0xb91b14e2
  4057f9:	jge    0x405787
  4057fb:	mov    dh,0x2f
  4057fd:	lahf   
  4057fe:	push   0xe5ca3c05
  405803:	mov    ds:0xa78c34dc,al
  405808:	shr    BYTE PTR [edi-0x341fca54],1
  40580e:	sub    eax,0xbd11093d
  405813:	adc    dh,BYTE PTR [eax+ebx*4-0x4649aedd]
  40581a:	fidivr WORD PTR [ebp+0x65a1483a]
  405820:	and    eax,0x33224d9e
  405825:	jns    0x405865
  405827:	gs push 0x13961d9
  40582d:	call   0xfa5:0x4d09796d
  405834:	loop   0x405824
  405836:	loopne 0x405816
  405838:	push   ebp
  405839:	or     eax,0x2c8101b7
  40583e:	dec    esp
  40583f:	aad    0xff
  405841:	sar    DWORD PTR [ebx-0x72],0x40
  405845:	aad    0x50
  405847:	shl    BYTE PTR [ecx+0x4ace4731],0x57
  40584e:	out    0xcf,al
  405850:	loopne 0x40589e
  405852:	jns    0x4057eb
  405854:	pop    edx
  405855:	jg     0x40586f
  405857:	stos   BYTE PTR es:[edi],al
  405858:	shl    BYTE PTR [ebx-0x4],1
  40585b:	(bad)  
  40585c:	push   ecx
  40585d:	(bad)
  405861:	aad    0xc2
  405863:	imul   ecx,DWORD PTR [ebx-0x5],0x6
  405867:	retf   
  405868:	mov    BYTE PTR [ecx],cl
  40586a:	cmp    BYTE PTR [edx-0x60],cl
  40586d:	stos   BYTE PTR es:[edi],al
  40586e:	and    esi,DWORD PTR [ebp+0x44]
  405871:	iret   
  405872:	clc    
  405873:	imul   eax,DWORD PTR [ecx+0x39],0xfffffffe
  405877:	pop    ebp
  405878:	push   ebp
  405879:	pop    edx
  40587a:	sbb    bl,dh
  40587c:	cli    
  40587d:	mov    edx,0x2829d91e
  405882:	pop    ebp
  405883:	mul    BYTE PTR [ecx]
  405885:	xlat   BYTE PTR ds:[ebx]
  405886:	cmp    BYTE PTR [ecx+edi*8],al
  405889:	and    ch,0x2f
  40588c:	test   al,0x95
  40588e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40588f:	sbb    al,0x62
  405891:	retf   0xc302
  405894:	sbb    eax,0xae040d32
  405899:	int    0x16
  40589b:	jnp    0x405870
  40589d:	call   0x1caebd9d
  4058a2:	into   
  4058a3:	mov    al,BYTE PTR [edi+0x6a]
  4058a6:	enter  0xc4c0,0xa1
  4058aa:	adc    DWORD PTR [ebx-0x4],0x1fcffa29
  4058b1:	pop    ss
  4058b2:	dec    edx
  4058b3:	cmp    eax,0xf75b5d4e
  4058b8:	inc    edi
  4058b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ba:	mov    ebp,esi
  4058bc:	dec    ecx
  4058bd:	push   cs
  4058be:	mov    ah,0x2c
  4058c0:	mov    edx,0x6716b6eb
  4058c5:	repnz sbb BYTE PTR [ebx+eax*8],0x3e
  4058ca:	pop    ebp
  4058cb:	jo     0x4058da
  4058cd:	imul   bh
  4058cf:	xchg   esi,eax
  4058d1:	mov    edi,0x6e882a0c
  4058d6:	mov    BYTE PTR [ebp-0x5e],bh
  4058d9:	iret   
  4058da:	adc    eax,0x2c5dad4d
  4058df:	std    
  4058e0:	sbb    eax,0x91a0b569
  4058e5:	mov    ebp,0x78113d4c
  4058ea:	dec    edx
  4058eb:	sbb    ecx,ebp
  4058ed:	jmp    0x2dc:0x882175c0
  4058f4:	je     0x40590f
  4058f6:	jb     0x40590e
  4058f8:	pop    esi
  4058f9:	(bad)  
  4058fa:	sbb    DWORD PTR [edx+0x6a],ebx
  4058fd:	cmp    DWORD PTR ds:0x74f29722,0xa3a18f97
  405907:	dec    ecx
  405908:	sahf   
  405909:	inc    edx
  40590a:	pop    ebx
  40590b:	push   es
  40590c:	fs mov bl,al
  40590f:	mov    al,ds:0x4ff92208
  405914:	outs   dx,BYTE PTR ds:[esi]
  405915:	es cmp eax,ebp
  405918:	lea    esi,[edx+eiz*4]
  40591b:	and    ah,dh
  40591d:	fwait
  40591e:	popa   
  40591f:	in     eax,dx
  405920:	jecxz  0x405906
  405922:	mov    BYTE PTR [edi+0x21ae482a],ah
  405928:	xlat   BYTE PTR ds:[ebx]
  405929:	arpl   di,dx
  40592b:	dec    esi
  40592c:	pop    ecx
  40592d:	jnp    0x405992
  40592f:	jecxz  0x4058f4
  405931:	les    esp,FWORD PTR [ebp+0x68299f91]
  405937:	shr    BYTE PTR [edx-0x35661df],1
  40593d:	jne    0x4058ff
  40593f:	imul   BYTE PTR [edx]
  405941:	(bad)  
  405942:	mov    ch,0x37
  405944:	xchg   ebx,eax
  405945:	aas    
  405946:	xor    eax,DWORD PTR [esi+0x14]
  405949:	inc    eax
  40594a:	retf   0x541e
  40594d:	int3   
  40594e:	mov    eax,ds:0xfacbffcb
  405953:	loope  0x405991
  405955:	in     al,0x4c
  405957:	ja     0x4059c3
  405959:	(bad)  
  40595a:	xchg   ebx,eax
  40595b:	stos   BYTE PTR es:[edi],al
  40595c:	fucom  st(1)
  40595e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40595f:	stos   DWORD PTR es:[edi],eax
  405960:	dec    ecx
  405961:	mov    dl,0xbc
  405963:	mov    eax,0xda9a3444
  405968:	je     0x40592e
  40596a:	mov    eax,ds:0x62c9e67d
  40596f:	pop    ecx
  405970:	aaa    
  405971:	xchg   ecx,eax
  405972:	scas   al,BYTE PTR es:[edi]
  405973:	(bad)  
  405974:	popf   
  405975:	inc    eax
  405976:	sub    BYTE PTR [esi+0x76596e8a],0x56
  40597d:	xchg   ebx,eax
  40597e:	xchg   ebp,eax
  40597f:	mov    bh,0xf2
  405981:	je     0x4059c7
  405983:	sahf   
  405984:	lea    edi,[esi-0x6c51f098]
  40598a:	add    edi,DWORD PTR [ebx+0x44]
  40598d:	and    cl,BYTE PTR [esi+0x19027a0d]
  405993:	out    dx,eax
  405994:	setb   BYTE PTR [edi]
  405997:	das    
  405998:	and    dh,dh
  40599a:	dec    esp
  40599b:	xchg   ecx,eax
  40599c:	mov    bh,0xf4
  40599e:	loope  0x4059fc
  4059a0:	cli    
  4059a1:	(bad)  
  4059a2:	aaa    
  4059a3:	push   edx
  4059a4:	mov    bl,0xfe
  4059a6:	sub    eax,0xcb17b7a1
  4059ab:	cwde   
  4059ac:	cmp    al,0x27
  4059ae:	pop    edi
  4059af:	inc    ebp
  4059b0:	and    DWORD PTR [edx+0x16722f4b],ecx
  4059b6:	dec    ecx
  4059b7:	das    
  4059b8:	in     eax,0xf6
  4059ba:	or     eax,0x8070446a
  4059bf:	xchg   edx,eax
  4059c0:	ds inc edi
  4059c2:	ret    0xe2f3
  4059c5:	test   ebx,edx
  4059c7:	jge    0x4059f4
  4059c9:	and    al,dh
  4059cb:	mov    cs,WORD PTR [ebx+ebp*2+0x58]
  4059cf:	and    esi,eax
  4059d1:	xchg   edx,eax
  4059d2:	int    0xa8
  4059d4:	mov    edx,ecx
  4059d6:	mov    edi,edx
  4059d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d9:	xlat   BYTE PTR ds:[ebx]
  4059da:	call   0x2586a230
  4059df:	or     eax,0x92dc9f27
  4059e4:	xchg   edi,eax
  4059e5:	(bad)  
  4059e6:	nop
  4059e7:	or     al,0x3f
  4059e9:	retf   
  4059ea:	aad    0x4
  4059ec:	pop    ebx
  4059ed:	iret   
  4059ee:	data16 mov ah,0xe8
  4059f1:	test   dh,0xe
  4059f4:	cmp    al,0x98
  4059f6:	fwait
  4059f7:	lods   eax,DWORD PTR ds:[esi]
  4059f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f9:	pop    ss
  4059fa:	add    esp,DWORD PTR [edx]
  4059fc:	mov    bl,0x95
  4059fe:	sahf   
  4059ff:	loopne 0x4059da
  405a01:	outs   dx,BYTE PTR ds:[esi]
  405a02:	and    eax,0x33cbc77f
  405a07:	(bad)  
  405a08:	xor    DWORD PTR [ebp-0x2a],esi
  405a0b:	aam    0x20
  405a0d:	add    eax,0x2dc83c00
  405a12:	sub    DWORD PTR [esi+0x5e],esp
  405a15:	addr16 cwde 
  405a17:	jno    0x4059ca
  405a19:	cmp    edx,ebx
  405a1b:	frstor [edx]
  405a1d:	aas    
  405a1e:	and    al,0x49
  405a20:	in     eax,dx
  405a21:	(bad)  
  405a22:	int3   
  405a23:	sub    eax,0x3c66a27e
  405a28:	mov    ch,0xab
  405a2a:	shr    esp,cl
  405a2c:	adc    al,0x6f
  405a2e:	sbb    eax,0xd8c29743
  405a33:	cli    
  405a34:	dec    esp
  405a35:	xor    eax,0x5ccf9da6
  405a3a:	jae    0x4059ee
  405a3c:	pushf  
  405a3d:	fdiv   QWORD PTR [ebx-0x32c9e3d2]
  405a43:	mov    al,0x61
  405a45:	pop    esp
  405a46:	sahf   
  405a47:	arpl   WORD PTR [ecx+0x47e577b5],dx
  405a4d:	mov    bh,0x65
  405a4f:	dec    esi
  405a50:	push   ebp
  405a51:	sbb    eax,0x22a27692
  405a56:	lahf   
  405a57:	mul    DWORD PTR [esi]
  405a59:	jle    0x405a42
  405a5b:	pusha  
  405a5c:	stos   DWORD PTR es:[edi],eax
  405a5d:	mov    esp,0xc9179d5e
  405a62:	rcr    BYTE PTR ds:0xa3de470,0xe1
  405a69:	jae    0x405a2e
  405a6b:	mov    al,ds:0x639ce7f1
  405a70:	(bad)  
  405a71:	in     al,0x5a
  405a73:	adc    eax,0x807b5055
  405a78:	call   0xf63f:0x1b5127b2
  405a7f:	mov    ebx,0x3358020e
  405a84:	sbb    esp,DWORD PTR [esi]
  405a86:	add    eax,0x7ae4454a
  405a8b:	les    edx,FWORD PTR ds:0x15a4901f
  405a91:	mov    ebp,0xc26c1ac6
  405a96:	add    al,0x6f
  405a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a99:	int3   
  405a9a:	fldenv [edi-0x74b706ed]
  405aa0:	mov    eax,DWORD PTR [esi]
  405aa2:	stc    
  405aa3:	xor    ebx,DWORD PTR [esi]
  405aa5:	rcr    edi,1
  405aa7:	ret    0x826
  405aaa:	test   BYTE PTR [ebp+0x539058aa],bh
  405ab0:	and    DWORD PTR [eax-0x438ce5b3],ebx
  405ab6:	enter  0xc176,0x58
  405aba:	test   al,0xf1
  405abc:	shl    BYTE PTR [ebx+0x15],0xd
  405ac0:	std    
  405ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac2:	inc    ebp
  405ac3:	pop    ecx
  405ac4:	aam    0xda
  405ac6:	cmp    esi,DWORD PTR [eax]
  405ac8:	fwait
  405ac9:	cmp    al,0x73
  405acb:	or     DWORD PTR [eax-0x41bffc69],edi
  405ad1:	dec    edx
  405ad2:	ins    DWORD PTR es:[edi],dx
  405ad3:	retf   
  405ad4:	stos   BYTE PTR es:[edi],al
  405ad5:	adc    eax,0x239a9bad
  405ada:	mov    esp,0xdfc8b336
  405adf:	mov    ebp,0x2bd53e8c
  405ae4:	and    edx,edx
  405ae6:	out    0x68,al
  405ae8:	scas   al,BYTE PTR es:[edi]
  405ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aea:	imul   esp,DWORD PTR [esi+0x28],0x12349ea3
  405af1:	add    DWORD PTR [edx-0x14],esi
  405af4:	jle    0x405ad4
  405af6:	and    al,0xc4
  405af8:	outs   dx,DWORD PTR ds:[esi]
  405af9:	sahf   
  405afa:	jo     0x405b43
  405afc:	jl     0x405b39
  405afe:	imul   eax,DWORD PTR [eax+0x3fd645e7],0x23381ca9
  405b08:	daa    
  405b09:	jle    0x405ac0
  405b0b:	adc    al,0x59
  405b0d:	mov    eax,0x46efe779
  405b12:	int    0xaa
  405b14:	into   
  405b15:	dec    ecx
  405b16:	or     bh,BYTE PTR [ebx]
  405b18:	or     eax,0x28ded532
  405b1d:	pop    edi
  405b1e:	inc    DWORD PTR [esi+0x6b143db9]
  405b24:	mov    esi,0x1517c4ac
  405b29:	push   edx
  405b2a:	inc    esp
  405b2b:	mov    cl,BYTE PTR [eax+0x6b]
  405b2e:	or     cl,BYTE PTR [ecx+0x7914d302]
  405b34:	inc    ecx
  405b35:	loopne 0x405b18
  405b37:	(bad)
  405b3b:	test   al,0xec
  405b3d:	xchg   edi,ebx
  405b3f:	dec    esp
  405b40:	mov    ebx,0xdf1a6476
  405b45:	mov    esi,0x1e82361f
  405b4a:	(bad)  
  405b4c:	data16 jmp 0x405b72
  405b4f:	xor    DWORD PTR [eax-0x4230d8a5],0x201e1e0a
  405b59:	in     al,dx
  405b5a:	dec    esi
  405b5b:	outs   dx,DWORD PTR ds:[esi]
  405b5c:	sub    esp,DWORD PTR [edx-0x23f5806]
  405b62:	and    eax,0x69dfa845
  405b67:	or     DWORD PTR [ebx],edx
  405b69:	cmp    BYTE PTR [ebx+0x30093e21],0x59
  405b70:	inc    eax
  405b71:	fwait
  405b72:	inc    esp
  405b73:	xlat   BYTE PTR ds:[ebx]
  405b74:	dec    ebx
  405b75:	or     dh,dh
  405b77:	retf   0xf256
  405b7a:	cmp    al,0x4b
  405b7c:	stos   DWORD PTR es:[edi],eax
  405b7d:	repnz mov edi,0x7d7cd7fa
  405b83:	btc    esi,0x45
  405b87:	xchg   ebp,eax
  405b88:	mov    ds:0x9caad114,eax
  405b8d:	mov    al,0x10
  405b8f:	shl    edi,1
  405b91:	iret   
  405b92:	cs push es
  405b94:	xchg   esi,eax
  405b95:	(bad)  
  405b97:	sti    
  405b98:	mov    BYTE PTR [esi+0x2f],bl
  405b9b:	sti    
  405b9c:	mov    ah,0x73
  405b9e:	inc    ebx
  405b9f:	xchg   edi,eax
  405ba0:	mov    BYTE PTR [ebp+0x44],dl
  405ba3:	jmp    0x405c03
  405ba5:	(bad)  
  405ba6:	cli    
  405ba7:	mov    ebx,0x13a33fc6
  405bac:	jecxz  0x405bbf
  405bae:	mov    ebp,0x5468a1cb
  405bb3:	scas   al,BYTE PTR es:[edi]
  405bb4:	int    0xfa
  405bb6:	out    0x9b,al
  405bb8:	neg    ch
  405bba:	mov    cr0,ebp
  405bbd:	mov    al,ds:0x185f3112
  405bc2:	cmp    eax,0xd67e4f4a
  405bc7:	xchg   edi,eax
  405bc8:	stc    
  405bc9:	test   ah,bh
  405bcb:	inc    eax
  405bcc:	mov    ds:0x9b0f8326,eax
  405bd1:	fwait
  405bd2:	(bad)  
  405bd3:	rcr    BYTE PTR ds:0x7dcecea,0x9a
  405bda:	add    ebp,esp
  405bdc:	mov    dh,0x32
  405bde:	int3   
  405bdf:	(bad)  
  405be0:	mov    ah,0x67
  405be2:	jge    0x405b65
  405be4:	dec    ecx
  405be5:	mov    al,0x2f
  405be7:	in     eax,0x77
  405be9:	jo     0x405b6e
  405beb:	sub    DWORD PTR [ebp+0x27b0e07d],eax
  405bf1:	pop    ds
  405bf2:	pop    es
  405bf3:	fcom   DWORD PTR [edi+0x6b]
  405bf6:	ins    BYTE PTR es:[edi],dx
  405bf7:	mov    BYTE PTR [eax+ebx*1+0x7c44edcb],bl
  405bfe:	xchg   ebp,eax
  405bff:	dec    esp
  405c00:	enter  0x392c,0x53
  405c04:	sti    
  405c05:	jl     0x405c42
  405c07:	out    0xca,eax
  405c09:	dec    ecx
  405c0a:	loopne 0x405bd5
  405c0c:	jbe    0x405c0f
  405c0e:	jno    0x405b9f
  405c10:	jns    0x405c85
  405c12:	pop    edi
  405c13:	cmp    eax,0x875fc4c
  405c18:	repz dec ebx
  405c1a:	sbb    BYTE PTR [esi+ebp*2-0x42],al
  405c1e:	or     BYTE PTR [edx+ebp*8],0xd9
  405c22:	test   esp,esi
  405c24:	test   al,0x3
  405c26:	outs   dx,BYTE PTR ds:[esi]
  405c27:	sbb    eax,0x2c3c140c
  405c2c:	imul   ebp,DWORD PTR [edi],0xffffff99
  405c2f:	add    BYTE PTR [edi+0x42509667],dh
  405c35:	xor    ah,bh
  405c37:	mov    edi,0x889496f3
  405c3c:	ret    
  405c3d:	jg     0x405c0c
  405c3f:	adc    eax,0x1d9a9ef1
  405c44:	xbegin 0x3bfbb6a3
  405c4a:	es aam 0xeb
  405c4d:	ficomp DWORD PTR [ebp+0x4310bf98]
  405c53:	test   esp,edx
  405c55:	pop    ss
  405c56:	arpl   WORD PTR [ebx+0x50],bx
  405c59:	add    DWORD PTR [edx],esi
  405c5b:	push   ss
  405c5c:	xor    edx,DWORD PTR [edx+0x39]
  405c5f:	push   ecx
  405c60:	push   esi
  405c61:	enter  0xb32c,0x6c
  405c65:	xchg   DWORD PTR [ecx+eax*4+0x747a6336],edx
  405c6c:	imul   edx,ecx,0x946e7c58
  405c72:	cli    
  405c73:	inc    esp
  405c74:	xor    edi,eax
  405c76:	out    0xa4,eax
  405c78:	jo     0x405cf3
  405c7a:	pop    esp
  405c7b:	jns    0x405c2c
  405c7d:	jmp    0x405c9a
  405c7f:	fsubr  DWORD PTR [ecx+0x67fcbba3]
  405c85:	mov    eax,ds:0xa99e93f7
  405c8a:	test   DWORD PTR [esi-0x20],esi
  405c8d:	adc    edx,DWORD PTR [esi-0x3aa08e48]
  405c93:	out    dx,eax
  405c94:	sbb    BYTE PTR [ecx-0x60],dl
  405c97:	das    
  405c98:	call   0x2288:0xf47b9758
  405c9f:	sbb    ch,BYTE PTR [eax]
  405ca1:	xor    DWORD PTR [ecx+eax*2],0xffffffc9
  405ca5:	jnp    0x405c39
  405ca7:	fnstsw WORD PTR [ebx+0x48]
  405caa:	push   eax
  405cab:	ja     0x405d2c
  405cad:	jnp    0x405c30
  405caf:	and    al,0xd9
  405cb1:	sub    BYTE PTR [eax+0x7c],dl
  405cb4:	jns    0x405d1c
  405cb6:	sub    BYTE PTR [eax+0x471bf826],ah
  405cbc:	sbb    ebp,eax
  405cbe:	shl    BYTE PTR [eax+esi*8+0x1ba93fb9],0x9a
  405cc6:	xor    al,BYTE PTR [ecx+0x9]
  405cc9:	add    edi,DWORD PTR [eax]
  405ccb:	aad    0x8b
  405ccd:	sub    eax,0x485af9c6
  405cd2:	dec    ecx
  405cd3:	xlat   BYTE PTR ds:[ebx]
  405cd4:	inc    ebx
  405cd5:	retf   
  405cd6:	and    BYTE PTR [ebx+0x55],ah
  405cd9:	mov    ebx,0xc3ff18df
  405cde:	loope  0x405cf8
  405ce0:	ja     0x405ce8
  405ce2:	pushf  
  405ce3:	imul   edx,DWORD PTR [ebp+0x20],0x3a4993f5
  405cea:	dec    edi
  405ceb:	rol    BYTE PTR [ebx],0xf9
  405cee:	jg     0x405d22
  405cf0:	push   ecx
  405cf1:	scas   eax,DWORD PTR es:[edi]
  405cf2:	aad    0xfc
  405cf4:	xor    dh,BYTE PTR cs:[eax+edi*8-0x61d4f28e]
  405cfc:	mov    dh,0x98
  405cfe:	sub    dh,BYTE PTR [edx-0x6f5c284d]
  405d04:	add    BYTE PTR [edi],0x96
  405d07:	and    eax,0xfad21793
  405d0c:	mov    esp,0xf2d280d1
  405d11:	and    ah,BYTE PTR [ebx+0x15]
  405d14:	in     al,dx
  405d15:	push   0xf992295d
  405d1a:	dec    edx
  405d1b:	fnstsw WORD PTR [ebx]
  405d1d:	xchg   edi,eax
  405d1e:	mov    ch,0xae
  405d20:	ins    BYTE PTR es:[edi],dx
  405d21:	inc    esi
  405d22:	mov    edx,DWORD PTR [ebx+0x6460a9e5]
  405d28:	pop    DWORD PTR [edx]
  405d2a:	push   edx
  405d2b:	aad    0xc4
  405d2d:	and    bl,BYTE PTR [edi]
  405d2f:	pop    ebx
  405d30:	push   edi
  405d31:	jmp    0xb607ba15
  405d36:	outs   dx,DWORD PTR ds:[esi]
  405d37:	aas    
  405d38:	mov    BYTE PTR [ecx],0xc7
  405d3b:	lock adc al,0xb
  405d3e:	aam    0x7c
  405d40:	aas    
  405d41:	sub    ch,cl
  405d43:	jmp    0x405db2
  405d45:	aad    0xc8
  405d47:	(bad)  
  405d48:	push   edx
  405d49:	adc    eax,DWORD PTR ds:0xb2fd0a70
  405d4f:	in     al,dx
  405d50:	ja     0x405d81
  405d52:	mov    dl,BYTE PTR [ebp+0x4364b781]
  405d58:	mov    al,ds:0x34dd312c
  405d5d:	je     0x405d4d
  405d5f:	es pop edx
  405d61:	fistp  WORD PTR [edi]
  405d63:	pop    esi
  405d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d65:	hlt    
  405d66:	call   0xbcb4b78a
  405d6b:	xchg   ebx,eax
  405d6c:	add    ah,BYTE PTR [edx+0x592bd759]
  405d72:	cmp    al,0x25
  405d74:	or     BYTE PTR [eax],dh
  405d76:	cwde   
  405d77:	adc    ecx,eax
  405d79:	stos   BYTE PTR es:[edi],al
  405d7a:	jp     0x405d8b
  405d7c:	sub    bh,BYTE PTR [ecx-0x272711ac]
  405d82:	ficomp DWORD PTR [ebx-0x34]
  405d85:	pop    ebx
  405d86:	pop    ebp
  405d87:	retf   0xd030
  405d8a:	xchg   esp,eax
  405d8b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405d8d:	mov    ds:0x514738c3,al
  405d92:	sahf   
  405d93:	add    cl,BYTE PTR [edi-0xa]
  405d96:	sti    
  405d97:	pushf  
  405d98:	pusha  
  405d99:	sbb    eax,0x7d586e4a
  405d9e:	mov    esi,eax
  405da0:	jo     0x405d24
  405da2:	mov    ebp,DWORD PTR [ebx-0x68]
  405da5:	adc    BYTE PTR ds:0xcb4e3d7f,dl
  405dab:	pop    eax
  405dac:	cmc    
  405dad:	push   ebx
  405dae:	cmp    eax,0xdccfeb54
  405db3:	es test edx,edx
  405db6:	mov    bh,0xd5
  405db8:	cmp    ecx,DWORD PTR [eax+ebp*1]
  405dbb:	out    dx,eax
  405dbc:	xor    ah,BYTE PTR [ebx+eiz*2+0xdf671d9]
  405dc3:	(bad)  
  405dc4:	push   eax
  405dc5:	sbb    al,0x64
  405dc7:	or     eax,0x48a85533
  405dcc:	retf   0xf96b
  405dcf:	sbb    al,0xb6
  405dd1:	jo     0x405de7
  405dd3:	outs   dx,BYTE PTR ds:[esi]
  405dd4:	mov    ds:0x599e02a,eax
  405dd9:	test   DWORD PTR [ebx-0x3c],ecx
  405ddc:	push   esp
  405ddd:	add    eax,0xc4390a72
  405de2:	or     esp,DWORD PTR [ecx+0x7aa0552]
  405de8:	jg     0x405dc6
  405dea:	cmp    eax,0xd7e6a253
  405def:	pop    ss
  405df0:	xchg   edx,eax
  405df1:	jecxz  0x405de4
  405df3:	jbe    0x405d9a
  405df5:	stos   BYTE PTR es:[edi],al
  405df6:	(bad)  
  405df7:	jne    0x405e63
  405df9:	jnp    0x405d84
  405dfb:	in     al,dx
  405dfc:	outs   dx,BYTE PTR ds:[esi]
  405dfd:	and    DWORD PTR [ebx+ebp*1+0xe8b18d1],edi
  405e04:	fcomp  QWORD PTR [ebp-0x50bfda51]
  405e0a:	outs   dx,DWORD PTR ds:[esi]
  405e0b:	push   edx
  405e0c:	adc    al,0x72
  405e0e:	jmp    0x405dea
  405e10:	and    DWORD PTR [edi+0x5303102],eax
  405e16:	jecxz  0x405e8f
  405e18:	dec    eax
  405e19:	out    0x9f,eax
  405e1b:	daa    
  405e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e1d:	mov    cl,cl
  405e1f:	xor    esp,DWORD PTR [edx-0x66d476bd]
  405e25:	sub    al,0x39
  405e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e28:	das    
  405e29:	outs   dx,BYTE PTR ds:[esi]
  405e2a:	clc    
  405e2b:	push   esi
  405e2c:	push   ss
  405e2d:	js     0x405e1c
  405e2f:	jge    0x405e65
  405e31:	(bad)  
  405e32:	rol    BYTE PTR [ebp-0x49b6847e],cl
  405e38:	call   0xcbd4:0xac6f806c
  405e3f:	jecxz  0x405dc7
  405e41:	loope  0x405e12
  405e43:	xor    cl,BYTE PTR [esi]
  405e45:	xchg   edi,eax
  405e46:	inc    ecx
  405e47:	adc    al,0xdb
  405e49:	pop    ds
  405e4a:	or     ebx,DWORD PTR [edx+0x38]
  405e4d:	repz inc edi
  405e4f:	sahf   
  405e50:	stc    
  405e51:	add    ch,BYTE PTR [edx]
  405e53:	mov    ebx,0xf9c1a808
  405e58:	jns    0x405e65
  405e5a:	neg    DWORD PTR [edx-0x533735d]
  405e60:	jecxz  0x405eaa
  405e62:	or     eax,0xbf50e27d
  405e67:	adc    eax,0x2d7ad967
  405e6c:	mul    eax
  405e6e:	sbb    DWORD PTR [esp+eiz*4+0x60],eax
  405e72:	xchg   ebp,eax
  405e73:	retf   0x5e80
  405e76:	inc    ecx
  405e77:	fwait
  405e78:	dec    BYTE PTR [ebx-0x78]
  405e7b:	inc    ebx
  405e7c:	jecxz  0x405e2b
  405e7e:	add    ah,BYTE PTR [edi+0x6d]
  405e81:	mov    ds:0xdc4d9a69,eax
  405e86:	sti    
  405e87:	stos   DWORD PTR es:[edi],eax
  405e88:	outs   dx,DWORD PTR ds:[esi]
  405e89:	stos   BYTE PTR es:[edi],al
  405e8a:	aam    0xc
  405e8c:	hlt    
  405e8d:	ss push 0xaad680ba
  405e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e94:	aam    0x80
  405e96:	and    esp,DWORD PTR [edi]
  405e98:	hlt    
  405e99:	jmp    0xdbe05c4
  405e9e:	pushf  
  405e9f:	fist   DWORD PTR [ecx-0x7]
  405ea2:	pop    eax
  405ea3:	in     al,dx
  405ea4:	and    DWORD PTR [edx-0x4bb1ea26],esi
  405eaa:	mov    cl,BYTE PTR [ebp-0x70]
  405ead:	or     BYTE PTR [ebp-0x2e],al
  405eb0:	mov    esp,0x39a93380
  405eb5:	stos   BYTE PTR es:[edi],al
  405eb6:	and    ch,dh
  405eb8:	outs   dx,DWORD PTR cs:[esi]
  405eba:	cmp    esi,edi
  405ebc:	push   eax
  405ebd:	mov    esp,0x153cb8d6
  405ec2:	test   al,0xca
  405ec4:	mov    ebx,ds
  405ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec7:	jecxz  0x405e91
  405ec9:	ja     0x405f4a
  405ecb:	xchg   ebp,eax
  405ecc:	mov    DWORD PTR [eax],0x8419f782
  405ed2:	or     al,0x44
  405ed4:	adc    DWORD PTR [ebp+0x1f0ed9fc],0x18
  405edb:	mov    esi,0x1876a74
  405ee0:	inc    ebx
  405ee1:	xor    edi,DWORD PTR ds:0x8988089f
  405ee7:	fs ret 0x2ad
  405eeb:	fdiv   st,st(2)
  405eed:	mov    eax,ds:0x1d9ac5dc
  405ef2:	cmc    
  405ef3:	pusha  
  405ef4:	mov    ss,WORD PTR ds:0x9f2a3180
  405efa:	inc    eax
  405efb:	fst    QWORD PTR [edi-0x27e968f6]
  405f01:	jns    0x405ef8
  405f03:	int    0x8e
  405f05:	mov    al,ds:0x873be717
  405f0a:	add    ebx,edi
  405f0c:	adc    DWORD PTR [ebx+edi*8],edi
  405f0f:	aas    
  405f10:	sub    eax,0x6c51d3df
  405f15:	in     eax,dx
  405f16:	jecxz  0x405f8e
  405f18:	idiv   DWORD PTR [edi]
  405f1a:	dec    ebx
  405f1b:	xor    DWORD PTR [edx-0x42b0ccf5],ecx
  405f21:	std    
  405f22:	sub    DWORD PTR [edi+0x1c366d3a],esi
  405f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f29:	(bad)  
  405f2a:	icebp  
  405f2b:	ret    0xfca
  405f2e:	test   esp,ebp
  405f30:	cmp    esp,DWORD PTR [edx+0x25d770f]
  405f36:	jbe    0x405ee5
  405f38:	cmp    BYTE PTR [ebp-0x5a],dh
  405f3b:	mov    WORD PTR [edi-0x7b],gs
  405f3e:	enter  0x2721,0x9c
  405f42:	cli    
  405f43:	lods   eax,DWORD PTR ds:[esi]
  405f44:	loope  0x405fad
  405f46:	adc    BYTE PTR [eax-0x5bf61509],al
  405f4c:	mov    ecx,0x83989466
  405f51:	out    dx,eax
  405f52:	cwde   
  405f53:	pop    eax
  405f54:	mov    esi,0x7e31b7ed
  405f59:	sbb    BYTE PTR [eax-0x17cee49a],ch
  405f5f:	add    eax,0xc158cc63
  405f64:	retf   0xa45e
  405f67:	push   ebx
  405f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f69:	adc    eax,0x33064f55
  405f6e:	mov    eax,0xbb089539
  405f73:	xchg   dl,al
  405f75:	pop    es
  405f76:	mov    edi,DWORD PTR [eax-0x7c]
  405f79:	icebp  
  405f7a:	ins    BYTE PTR es:[edi],dx
  405f7b:	and    al,0xe9
  405f7d:	gs shr edx,1
  405f80:	mov    bl,0x5
  405f82:	icebp  
  405f83:	jecxz  0x405f8b
  405f85:	rcr    DWORD PTR [ebx+0x435cde3c],cl
  405f8b:	fild   DWORD PTR [edx-0x5848d47]
  405f91:	jmp    0x102:0xc2e6af21
  405f98:	push   ds
  405f99:	std    
  405f9a:	ins    DWORD PTR es:[edi],dx
  405f9b:	cmp    DWORD PTR [ebx+eiz*8-0x16],ebp
  405f9f:	std    
  405fa0:	add    eax,0xb49f92a3
  405fa5:	je     0x405f7c
  405fa7:	les    esp,FWORD PTR [ebx]
  405fa9:	and    al,0x18
  405fab:	xlat   BYTE PTR ds:[ebx]
  405fac:	pop    edi
  405fad:	das    
  405fae:	dec    ebx
  405faf:	outs   dx,BYTE PTR ds:[esi]
  405fb0:	sbb    BYTE PTR [esi],cl
  405fb2:	je     0x406007
  405fb4:	mov    ds:0x9e1cd103,al
  405fb9:	into   
  405fba:	jns    0x405fe2
  405fbc:	fnstenv [ebx]
  405fbe:	dec    eax
  405fbf:	dec    edx
  405fc0:	sbb    dh,ah
  405fc2:	cmp    bh,BYTE PTR [ebp-0x4b]
  405fc5:	ins    DWORD PTR es:[edi],dx
  405fc6:	push   edi
  405fc7:	rcl    al,0xdf
  405fca:	jb     0x405ff1
  405fcc:	fcomp  st(4)
  405fce:	stos   BYTE PTR es:[edi],al
  405fcf:	mov    dh,0x6
  405fd1:	add    eax,0x54d2f572
  405fd6:	pop    edx
  405fd7:	jns    0x405f9e
  405fd9:	outs   dx,DWORD PTR ds:[esi]
  405fda:	shl    al,cl
  405fdc:	xchg   esi,eax
  405fdd:	pop    ecx
  405fde:	std    
  405fdf:	inc    ebx
  405fe0:	cld    
  405fe1:	test   BYTE PTR [edx],0x2d
  405fe4:	and    eax,0x447862d1
  405fe9:	mov    ds:0x3f773dc7,eax
  405fee:	ficomp WORD PTR [eax-0x6b]
  405ff1:	les    eax,FWORD PTR [ecx]
  405ff3:	retf   
  405ff4:	sub    eax,0x5d3c5893
  405ff9:	leave  
  405ffa:	sbb    edi,DWORD PTR fs:[ebx]
  405ffd:	fist   DWORD PTR [ebx+ebp*1+0x3a]
  406001:	push   esp
  406002:	shl    BYTE PTR [ebp+0x38],cl
  406005:	ret    
  406006:	pop    esi
  406007:	jmp    0x405fe3
  406009:	inc    ecx
  40600a:	add    DWORD PTR [eax+ebp*8+0x77],0xffffffbb
  40600f:	add    dh,ch
  406011:	mov    ds:0xadd3e751,eax
  406016:	sbb    al,BYTE PTR [edi+0x220a45c0]
  40601c:	mov    ebp,0xac6668bb
  406021:	imul   esp,DWORD PTR [edx],0x4a
  406024:	push   eax
  406025:	cmp    ecx,esp
  406027:	pop    ds
  406028:	cwde   
  406029:	inc    edi
  40602a:	shl    DWORD PTR ds:0x7194a791,1
  406030:	add    DWORD PTR [ebp-0x2e],edx
  406033:	push   ecx
  406034:	stc    
  406035:	imul   esp,DWORD PTR [edi-0x9],0xc0a72fba
  40603c:	or     DWORD PTR [ebp+0x2],ecx
  40603f:	or     DWORD PTR [ecx-0x1970ddb8],esi
  406045:	fstp   DWORD PTR [esi]
  406047:	int    0xec
  406049:	push   edx
  40604a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40604b:	xor    eax,0x28cc57bd
  406050:	stos   BYTE PTR es:[edi],al
  406051:	mov    gs,WORD PTR [edi]
  406053:	mov    eax,0x7daaae33
  406058:	pop    ds
  406059:	enter  0x3cc0,0xd8
  40605d:	in     al,dx
  40605e:	out    0x7,eax
  406060:	mov    DWORD PTR [ecx],edx
  406062:	mul    BYTE PTR [eax]
  406064:	xor    bh,cl
  406066:	stos   DWORD PTR es:[edi],eax
  406067:	ja     0xff273a11
  40606d:	aam    0x8a
  40606f:	aaa    
  406070:	inc    eax
  406071:	je     0x406021
  406073:	mov    fs,WORD PTR [ecx+0x1970e770]
  406079:	dec    ecx
  40607a:	aas    
  40607b:	int    0xcb
  40607d:	gs push es
  40607f:	dec    eax
  406080:	cmp    al,0x9c
  406082:	jg     0x406101
  406084:	jp     0x406037
  406086:	push   0xc25ec593
  40608b:	sbb    eax,0x22d97324
  406090:	or     ecx,esi
  406092:	fadd   DWORD PTR [ebp-0x123c114b]
  406098:	pop    ecx
  406099:	rcr    BYTE PTR [ecx+0x20edff22],1
  40609f:	jno    0x40603b
  4060a1:	push   cs
  4060a2:	fisub  DWORD PTR [ecx]
  4060a4:	popf   
  4060a5:	fistp  QWORD PTR [edi+edx*8-0x41]
  4060a9:	call   DWORD PTR [ecx-0x4a]
  4060ac:	int    0x3d
  4060ae:	sahf   
  4060af:	pop    ss
  4060b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060b1:	mov    cs,WORD PTR [edx+0x5f5cdfe]
  4060b7:	adc    DWORD PTR [ebx],esp
  4060b9:	idiv   DWORD PTR [esi+0x42e6276a]
  4060bf:	rcr    edx,1
  4060c1:	add    ebp,edx
  4060c3:	add    edi,DWORD PTR [ecx-0x794e4845]
  4060c9:	nop    DWORD PTR [edx-0x20]
  4060cd:	jp     0x406057
  4060cf:	and    DWORD PTR [eax],0x48
  4060d2:	xor    eax,0x21492a91
  4060d7:	adc    al,0x81
  4060d9:	ror    DWORD PTR ds:0x1c03e322,0x40
  4060e0:	mov    ds:0xd8f13162,eax
  4060e5:	pop    esi
  4060e6:	mov    ebp,0xa842e1ec
  4060eb:	jmp    0x741610a7
  4060f0:	dec    esp
  4060f1:	add    al,0xd4
  4060f3:	cld    
  4060f4:	adc    ah,bl
  4060f6:	inc    edx
  4060f7:	mov    edi,esi
  4060f9:	clc    
  4060fa:	ret    0xf9
  4060fd:	icebp  
  4060fe:	cmp    DWORD PTR [edx],esi
  406100:	or     BYTE PTR [ebp+0x57],al
  406103:	or     al,0xe7
  406105:	jb     0x4060ab
  406107:	mov    BYTE PTR [edx+ebx*1],al
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	loop   0x4068ad
  40688e:	dec    esi
  40688f:	fst    QWORD PTR [ebx]
  406891:	cmp    eax,0x5e0c8383
  406896:	add    DWORD PTR [ebx-0x5d1936a3],0xfffffff8
  40689d:	inc    ebp
  40689e:	es jne 0x4068ea
  4068a1:	mov    ebx,0x1e2ca37e
  4068a6:	pop    ebp
  4068a7:	add    BYTE PTR [edx+0x2ae27e05],0x9f
  4068ae:	scas   al,BYTE PTR es:[edi]
  4068af:	cmc    
  4068b0:	xchg   esi,eax
  4068b1:	push   ebx
  4068b2:	lds    edx,FWORD PTR [ecx+eax*4+0x30ac0d8e]
  4068b9:	xchg   BYTE PTR [edi+0x36],bh
  4068bc:	xor    esp,esp
  4068be:	jmp    0x8b2089b9
  4068c3:	xor    cl,dl
  4068c5:	xor    dl,BYTE PTR [ebx+ebp*4+0x70e39816]
  4068cc:	or     DWORD PTR [ebx],ebp
  4068ce:	dec    esi
  4068cf:	cmp    al,0xa0
  4068d1:	int    0xf3
  4068d3:	inc    edi
  4068d4:	or     ah,BYTE PTR [edi-0x5ff2659d]
  4068da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068db:	mov    cl,BYTE PTR [ecx]
  4068dd:	push   0x11869e9
  4068e2:	and    al,0x4
  4068e4:	push   ecx
  4068e5:	jle    0x406944
  4068e7:	loope  0x406912
  4068e9:	inc    edi
  4068ea:	mov    BYTE PTR [edx-0x7f5dc1cd],dl
  4068f0:	data16 stc 
  4068f2:	add    al,0xf2
  4068f5:	outs   dx,BYTE PTR ds:[esi]
  4068f6:	cmp    al,0x43
  4068f8:	inc    ebx
  4068f9:	jle    0x406921
  4068fb:	das    
  4068fc:	imul   eax,DWORD PTR [ebx+edx*1+0x69],0xffffff81
  406901:	inc    edx
  406902:	xor    BYTE PTR [edx-0x40],ch
  406905:	div    DWORD PTR [edi]
  406907:	xor    cl,dh
  406909:	and    DWORD PTR [esi+0x7ed2e221],ebp
  40690f:	sbb    BYTE PTR [esi+ebx*8+0x4f13f104],0x8b
  406917:	cs mov ah,0x8e
  40691a:	mul    BYTE PTR [ebp-0x6bbd214e]
  406920:	push   es
  406921:	sub    eax,0xdb973d73
  406926:	mov    esi,0x15aa2bed
  40692b:	dec    edx
  40692c:	scas   al,BYTE PTR es:[edi]
  40692d:	adc    esp,DWORD PTR [ecx]
  40692f:	in     eax,dx
  406930:	xor    eax,0xc4057102
  406935:	in     al,dx
  406936:	ret    
  406937:	pop    es
  406938:	xchg   DWORD PTR [ecx-0x63],ebx
  40693b:	das    
  40693c:	dec    ecx
  40693d:	mov    bl,0xfc
  40693f:	es sub eax,0x247479bb
  406945:	sub    bh,bl
  406947:	das    
  406948:	(bad)
  40694b:	ss in  al,dx
  40694d:	test   BYTE PTR [ebx-0x46684902],dl
  406953:	aam    0xb0
  406955:	pop    ss
  406956:	push   esi
  406957:	dec    esi
  406958:	cli    
  406959:	add    DWORD PTR [edi],esp
  40695b:	or     DWORD PTR ds:0x27dde852,eax
  406961:	neg    ebp
  406963:	mov    al,0xc7
  406965:	in     eax,dx
  406966:	sub    eax,DWORD PTR [edi+0x20]
  406969:	cmp    al,0x1e
  40696b:	pop    ecx
  40696c:	or     BYTE PTR [eax+0x263909b1],0x3e
  406973:	pop    eax
  406974:	sbb    BYTE PTR [edx-0x74],bl
  406977:	es mov al,0xb8
  40697a:	pop    eax
  40697b:	or     eax,0xbcedf963
  406980:	xor    edi,edx
  406982:	inc    esp
  406983:	push   esp
  406984:	and    cl,BYTE PTR [esi-0x4]
  406987:	in     eax,0x25
  406989:	push   ss
  40698a:	pushf  
  40698b:	(bad)  
  40698c:	inc    edi
  40698d:	sub    eax,0x3572d517
  406992:	setl   bh
  406995:	inc    eax
  406996:	add    DWORD PTR [edi-0x37c9e2d2],0x633e1aa9
  4069a0:	and    esi,esi
  4069a2:	xchg   edi,eax
  4069a3:	pushf  
  4069a4:	outs   dx,BYTE PTR ds:[esi]
  4069a5:	pop    esp
  4069a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a7:	pushf  
  4069a8:	cmc    
  4069a9:	xor    al,0xb9
  4069ab:	or     DWORD PTR [eax-0x1f],ebx
  4069ae:	add    BYTE PTR [ecx-0x7e],0xe
  4069b2:	cmp    DWORD PTR [esi+0x1c],0x5c
  4069b6:	sub    ebp,esp
  4069b8:	cmc    
  4069b9:	xchg   edx,eax
  4069ba:	xchg   ebx,eax
  4069bb:	test   BYTE PTR ds:0xeaf2e51,0xfb
  4069c2:	and    edi,DWORD PTR [edx]
  4069c4:	dec    edx
  4069c5:	jg     0x4069d0
  4069c7:	inc    ecx
  4069c8:	jle    0x406998
  4069ca:	loope  0x4069c6
  4069cc:	mov    bl,0x89
  4069ce:	mov    ebx,esi
  4069d0:	mov    al,ds:0x35a6a2ad
  4069d5:	add    esi,edx
  4069d7:	lahf   
  4069d8:	jae    0x40698f
  4069da:	retf   
  4069db:	adc    esi,DWORD PTR [ebx]
  4069dd:	mov    ebx,0x5bd6efb9
  4069e2:	stc    
  4069e3:	scas   al,BYTE PTR es:[edi]
  4069e4:	inc    ebp
  4069e5:	xchg   esi,eax
  4069e6:	inc    eax
  4069e7:	inc    esi
  4069e8:	push   ebx
  4069e9:	dec    edi
  4069ea:	add    eax,0x86bd4b58
  4069ef:	add    al,0x22
  4069f1:	mov    eax,0xb41dd327
  4069f6:	cmp    eax,0x3cc2b389
  4069fb:	push   ecx
  4069fc:	pop    ecx
  4069fd:	mov    al,0x3e
  4069ff:	test   eax,0x59951d8c
  406a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a05:	cmp    bl,al
  406a07:	inc    esi
  406a08:	jecxz  0x406a11
  406a0a:	mov    esp,0x4f08a91c
  406a0f:	jno    0x4069ea
  406a11:	xor    ah,BYTE PTR [edx]
  406a13:	xchg   ebp,eax
  406a14:	xor    bl,BYTE PTR [edx-0x38]
  406a17:	add    cl,BYTE PTR [ebp-0x36]
  406a1a:	in     al,0xed
  406a1c:	outs   dx,DWORD PTR ds:[esi]
  406a1d:	inc    eax
  406a1e:	mov    edi,0xf3fc0be3
  406a23:	inc    ebx
  406a24:	jmp    0x406a3a
  406a26:	push   ecx
  406a27:	xor    eax,0x43432ebb
  406a2c:	ror    cl,cl
  406a2e:	jnp    0x406aad
  406a30:	xchg   ebp,eax
  406a31:	shl    ecx,1
  406a33:	pop    ebp
  406a34:	mov    ds:0x8567539f,al
  406a39:	adc    al,dh
  406a3b:	mov    esi,DWORD PTR [esi+0x61a284fe]
  406a41:	push   eax
  406a42:	imul   BYTE PTR [edx]
  406a44:	xor    al,0x51
  406a46:	mov    esi,0x33187301
  406a4b:	mov    esi,0x7a0ff6c6
  406a50:	xchg   esi,eax
  406a51:	dec    edi
  406a52:	pop    ebx
  406a53:	int3   
  406a54:	pop    esp
  406a55:	hlt    
  406a56:	mov    ch,0x6
  406a58:	inc    esp
  406a59:	mov    gs,WORD PTR [eax-0x2471e634]
  406a5f:	mov    edx,0x89634588
  406a64:	nop
  406a65:	ds fs jp 0x406a18
  406a69:	enter  0x64f4,0x83
  406a6d:	jno    0x406a46
  406a6f:	inc    esp
  406a70:	leave  
  406a71:	push   ebx
  406a72:	adc    BYTE PTR [ebx+ebp*2+0x73581686],bh
  406a79:	sub    edx,ecx
  406a7b:	or     DWORD PTR [ecx-0x4d],0xdf9baa86
  406a82:	xor    BYTE PTR [ecx+0x11],ch
  406a85:	sbb    eax,0xd3e5c50d
  406a8a:	scas   al,BYTE PTR es:[edi]
  406a8b:	xchg   ecx,eax
  406a8c:	outs   dx,DWORD PTR ds:[esi]
  406a8d:	cdq    
  406a8e:	dec    ebp
  406a8f:	xchg   ebp,eax
  406a90:	fldenv [esi-0x706a26c5]
  406a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a97:	loope  0x406add
  406a99:	adc    DWORD PTR [esi+ebp*1],esp
  406a9c:	fwait
  406a9d:	or     eax,0xfc31edc9
  406aa2:	xchg   edx,eax
  406aa3:	in     al,dx
  406aa4:	mov    ?,WORD PTR [ebx-0x31]
  406aa7:	fs dec ecx
  406aa9:	in     al,dx
  406aaa:	in     eax,dx
  406aab:	or     ax,0x5736
  406aaf:	jnp    0x406a91
  406ab1:	retf   
  406ab2:	dec    edx
  406ab3:	jo     0x406a92
  406ab5:	shl    ebx,1
  406ab7:	mov    esp,0xbe35bd82
  406abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406abd:	es clc 
  406abf:	fsubr  QWORD PTR [ebx-0x22b1e48a]
  406ac5:	xlat   BYTE PTR ds:[ebx]
  406ac6:	mov    esp,0x45acc6a7
  406acb:	jno    0x406b07
  406acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ace:	pop    ecx
  406acf:	stos   BYTE PTR es:[edi],al
  406ad0:	into   
  406ad1:	test   al,0x23
  406ad3:	push   ss
  406ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad5:	inc    ebp
  406ad6:	sbb    eax,0x5afe7b39
  406adb:	and    ecx,DWORD PTR [eax-0x80]
  406ade:	enter  0xa051,0x7d
  406ae2:	sbb    eax,0x9c1e5115
  406ae7:	push   cs
  406ae8:	mov    esi,0x8c018641
  406aed:	(bad)  
  406aee:	ins    BYTE PTR es:[edi],dx
  406aef:	(bad)  
  406af0:	mov    ebp,0x70970b9a
  406af5:	mov    ah,0x8b
  406af7:	popa   
  406af8:	pop    ebx
  406af9:	out    0x67,eax
  406afb:	jg     0x406b25
  406afd:	xor    al,BYTE PTR ds:0x31031b36
  406b03:	sbb    DWORD PTR [esi],0x77
  406b06:	scas   eax,DWORD PTR es:[edi]
  406b07:	(bad)  
  406b08:	icebp  
  406b09:	mov    eax,ds:0xc1fcb24f
  406b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b0f:	mov    esi,0x195a6c1b
  406b14:	(bad)  
  406b16:	cmp    DWORD PTR [ebx+0x1e],0x7c
  406b1a:	lock lods al,BYTE PTR ds:[esi]
  406b1c:	pop    ds
  406b1d:	push   0x6b
  406b1f:	dec    esi
  406b20:	and    edi,DWORD PTR [eax+0x20]
  406b23:	dec    eax
  406b24:	mov    esp,0x40693e0a
  406b29:	ss push 0xffffff90
  406b2c:	stc    
  406b2d:	mov    ds:0x8118e123,eax
  406b32:	dec    esi
  406b33:	adc    DWORD PTR [ecx-0x6fb96c66],esi
  406b39:	jo     0x406b73
  406b3b:	xor    eax,0x2c19cb4
  406b40:	jg     0x406b1d
  406b42:	shl    DWORD PTR [ecx-0x38c665af],0x47
  406b49:	xor    BYTE PTR [eax-0x2c],0x3e
  406b4d:	pop    ebx
  406b4e:	mov    eax,ds:0x71a46542
  406b53:	mov    bl,0xd7
  406b55:	test   DWORD PTR [eax-0x55],esp
  406b58:	fstp   QWORD PTR [edi]
  406b5a:	sbb    al,0xd5
  406b5c:	cdq    
  406b5d:	sti    
  406b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b5f:	sub    al,0xa1
  406b61:	mov    al,0xa3
  406b63:	cmc    
  406b64:	cmc    
  406b65:	jbe    0x406b0d
  406b67:	push   ss
  406b68:	fcomp  QWORD PTR [eax+0x7e295144]
  406b6e:	(bad)  
  406b6f:	scas   eax,DWORD PTR es:[edi]
  406b70:	pushf  
  406b71:	mov    eax,ds:0x43bae937
  406b76:	in     eax,dx
  406b77:	not    BYTE PTR [eax]
  406b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b7a:	dec    esi
  406b7b:	dec    ecx
  406b7c:	test   eax,0x48eea087
  406b81:	mov    cl,0xbb
  406b83:	mov    dl,0x4d
  406b85:	jo     0x406bc4
  406b87:	jb     0x406b80
  406b89:	jmp    0xc18077dc
  406b8e:	jecxz  0x406b32
  406b90:	lods   al,BYTE PTR ds:[esi]
  406b91:	xor    eax,0x19a08df
  406b96:	dec    ecx
  406b97:	outs   dx,BYTE PTR ds:[esi]
  406b98:	leave  
  406b99:	sbb    eax,0x3b92e05e
  406b9e:	fstp   QWORD PTR [ecx]
  406ba0:	mov    dl,0x14
  406ba2:	xchg   BYTE PTR ds:0x7d09f188,ah
  406ba8:	aas    
  406ba9:	xor    esi,esp
  406bab:	retf   
  406bac:	outs   dx,DWORD PTR ds:[esi]
  406bad:	shl    BYTE PTR [edx],0xe3
  406bb0:	xor    BYTE PTR [esi-0x7399fcbd],dh
  406bb6:	mov    ecx,0x6b7951be
  406bbb:	cmc    
  406bbc:	mov    dl,0x3
  406bbe:	mov    ds:0x8eb64dcc,eax
  406bc3:	xchg   edx,eax
  406bc4:	sti    
  406bc5:	inc    edx
  406bc6:	aam    0xde
  406bc8:	stos   BYTE PTR es:[edi],al
  406bc9:	fmulp  st(0),st
  406bcb:	xchg   edx,eax
  406bcc:	nop
  406bcd:	pop    ecx
  406bce:	in     al,dx
  406bcf:	shr    DWORD PTR [esi],1
  406bd1:	iret   
  406bd2:	(bad)  
  406bd3:	into   
  406bd4:	addr16 in al,0x34
  406bd7:	add    esi,DWORD PTR [ebp-0x74]
  406bda:	adc    esp,DWORD PTR fs:[eax-0x5]
  406bde:	fwait
  406bdf:	dec    ebx
  406be0:	ins    DWORD PTR es:[edi],dx
  406be1:	out    dx,al
  406be2:	pop    ecx
  406be3:	pusha  
  406be4:	out    dx,al
  406be5:	idiv   bh
  406be7:	jns    0x406c38
  406be9:	cs ret 0xa7bb
  406bed:	retf   0x721
  406bf0:	and    esi,DWORD PTR [esi-0x4a]
  406bf3:	ficom  DWORD PTR [eax+0x4]
  406bf6:	sub    ecx,ebx
  406bf8:	lea    ecx,[edi-0x3d]
  406bfb:	and    DWORD PTR [ebp-0x13],eax
  406bfe:	(bad)  
  406c02:	jno    0x406bfe
  406c04:	and    esp,ebp
  406c06:	data16 lods al,BYTE PTR ds:[esi]
  406c08:	lock cmp al,0x88
  406c0b:	mov    ecx,0xf86fc0cb
  406c10:	sbb    eax,0xa90dde20
  406c15:	dec    eax
  406c16:	ja     0x406c71
  406c18:	mov    ds:0x319495a2,al
  406c1d:	out    dx,al
  406c1e:	mov    DWORD PTR [eax-0x80],eax
  406c21:	lods   eax,DWORD PTR ds:[esi]
  406c22:	sbb    al,0xd8
  406c24:	xchg   edi,eax
  406c25:	inc    ebp
  406c26:	dec    esi
  406c27:	or     eax,0x7decc97c
  406c2c:	push   0x9365270f
  406c31:	adc    BYTE PTR [eax-0x5006c8d3],bl
  406c37:	inc    esp
  406c38:	jae    0x406c4e
  406c3a:	nop
  406c3b:	mov    esi,0x4003d31a
  406c40:	mov    dl,0xe2
  406c42:	outs   dx,DWORD PTR ds:[esi]
  406c43:	cmp    BYTE PTR [ecx-0x44],bl
  406c46:	fsub   st(1),st
  406c48:	repnz sub BYTE PTR [esi-0x72],bh
  406c4c:	dec    ebx
  406c4d:	xchg   ebp,eax
  406c4e:	mov    bh,0xac
  406c50:	pusha  
  406c51:	and    esi,DWORD PTR [eax-0x6]
  406c54:	cdq    
  406c55:	add    DWORD PTR [ebx+eiz*8],0x45
  406c59:	sub    edi,DWORD PTR es:[ecx]
  406c5c:	add    ebp,esp
  406c5e:	sub    DWORD PTR [esi-0x3a],edx
  406c61:	pop    esi
  406c62:	loope  0x406bfe
  406c64:	or     esp,DWORD PTR [edi-0x1f]
  406c67:	cmp    BYTE PTR [esp+ecx*8-0x5ac45483],0x6a
  406c6f:	sti    
  406c70:	dec    ecx
  406c71:	outs   dx,BYTE PTR ds:[esi]
  406c72:	lea    edx,[ecx+ebp*2-0x182e2634]
  406c79:	pop    ss
  406c7a:	mov    ah,0xb5
  406c7c:	(bad)  
  406c7d:	pop    esi
  406c7e:	adc    DWORD PTR [edx],eax
  406c80:	adc    ebx,DWORD PTR [edi+0x17]
  406c83:	popa   
  406c84:	pop    esi
  406c85:	lods   eax,DWORD PTR ds:[esi]
  406c86:	fnstsw WORD PTR [eax+0x24a7ed67]
  406c8c:	add    DWORD PTR [esi+edx*4],0xf
  406c90:	push   es
  406c91:	dec    ebx
  406c92:	push   esi
  406c93:	xor    eax,0xc7ad76cd
  406c98:	jle    0x406c53
  406c9a:	sbb    DWORD PTR [edx+0x6073273],ebp
  406ca0:	loope  0x406d0b
  406ca2:	shr    DWORD PTR [esi],0xe7
  406ca5:	dec    ecx
  406ca6:	punpckhbw mm0,QWORD PTR [esi+0x766328a1]
  406cad:	mov    eax,edx
  406caf:	outs   dx,BYTE PTR ds:[esi]
  406cb0:	add    BYTE PTR [eax],al
  406cb2:	jne    0x406cd6
  406cb4:	mov    ds:0x93761884,al
  406cb9:	and    esi,edi
  406cbb:	int3   
  406cbc:	xchg   ecx,eax
  406cbd:	mov    al,ds:0xfd99d5ff
  406cc2:	cs jbe 0x406d2c
  406cc5:	outs   dx,DWORD PTR ds:[esi]
  406cc6:	xor    ah,ch
  406cc8:	(bad)  
  406cc9:	xchg   ebp,eax
  406cca:	out    0x1e,al
  406ccc:	adc    DWORD PTR [edx-0x3a28822d],esp
  406cd2:	mov    ds:0x7a77197f,al
  406cd7:	popa   
  406cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd9:	outs   dx,BYTE PTR ds:[esi]
  406cda:	and    edi,DWORD PTR [ebx]
  406cdc:	cmp    al,0x9b
  406cde:	or     eax,0xa5571057
  406ce3:	inc    edi
  406ce4:	cmp    edi,edi
  406ce6:	stos   DWORD PTR es:[edi],eax
  406ce7:	ror    BYTE PTR ds:0xd3fc916,cl
  406ced:	mov    esp,0x6db3f8cd
  406cf2:	out    dx,eax
  406cf3:	pop    ebp
  406cf4:	test   BYTE PTR ds:0x5978418f,0xf0
  406cfb:	xchg   ecx,edi
  406cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cfe:	rcr    ah,0x60
  406d01:	push   0xb5762dc4
  406d06:	jp     0x406ca0
  406d08:	jo     0x406d3d
  406d0a:	in     eax,dx
  406d0b:	(bad)  
  406d0c:	std    
  406d0d:	(bad)  
  406d0e:	pusha  
  406d0f:	mov    dl,0x6b
  406d11:	xchg   esi,eax
  406d12:	into   
  406d13:	jl     0x406d40
  406d15:	test   al,0x31
  406d17:	rol    BYTE PTR [eax+0x63],cl
  406d1a:	push   esi
  406d1b:	jge    0x406d7a
  406d1d:	or     BYTE PTR [ecx+0x22],0x2
  406d21:	pop    esp
  406d22:	xchg   edx,eax
  406d23:	fmul   DWORD PTR [edi+0x55999f9]
  406d29:	sub    eax,0xd8648475
  406d2e:	(bad)  
  406d2f:	mov    ecx,0xda2e1fc8
  406d34:	and    DWORD PTR [ecx-0x7e249221],edx
  406d3a:	cdq    
  406d3b:	aas    
  406d3c:	adc    cl,BYTE PTR [ebx+0x39]
  406d3f:	loope  0x406d3b
  406d41:	xchg   ebp,eax
  406d42:	xchg   esi,eax
  406d43:	pop    es
  406d44:	pop    edx
  406d45:	add    al,0x9d
  406d47:	gs pop ebx
  406d4a:	inc    ebp
  406d4b:	adc    eax,0x715f4669
  406d50:	mov    ebx,0xde5f7501
  406d55:	inc    eax
  406d56:	or     esp,ecx
  406d58:	aad    0x10
  406d5a:	imul   esi,ebp,0x9d2cd0b9
  406d60:	cmp    ah,dh
  406d62:	lahf   
  406d63:	xchg   cl,dh
  406d65:	fisub  WORD PTR [di+0x2e11]
  406d6a:	cmc    
  406d6b:	inc    edx
  406d6c:	sbb    al,0x5f
  406d6e:	(bad)  
  406d6f:	mov    esi,0xb84014a8
  406d74:	test   BYTE PTR [edi],ah
  406d76:	bt     DWORD PTR [ebx],ecx
  406d79:	mov    esi,0xab96168b
  406d7e:	or     eax,0x9120f0c3
  406d83:	push   esi
  406d84:	in     eax,0xe6
  406d86:	nop
  406d87:	xchg   ebp,eax
  406d88:	jnp    0x406de8
  406d8a:	mov    ch,BYTE PTR [edx+0x5e]
  406d8d:	mov    ch,0x8d
  406d8f:	jb     0x406d84
  406d91:	adc    ch,BYTE PTR [ebx]
  406d93:	mov    cl,0xfa
  406d95:	jbe    0x406df5
  406d97:	cwde   
  406d98:	test   eax,0x862eae5f
  406d9d:	push   ss
  406d9e:	adc    eax,0x14e2f8
  406da3:	call   0xd1cd:0x7df73e00
  406daa:	mov    dl,BYTE PTR [ebx+0x726615dc]
  406db0:	dec    BYTE PTR [ebp+0x53db20dc]
  406db6:	shr    dl,0xac
  406db9:	ins    DWORD PTR es:[edi],dx
  406dba:	push   0xa517be14
  406dbf:	(bad)  
  406dc0:	ins    BYTE PTR es:[edi],dx
  406dc1:	push   ds
  406dc2:	push   ebx
  406dc3:	pushf  
  406dc4:	mov    cl,0xde
  406dc6:	mov    ebp,0xa58976f6
  406dcb:	data16 (bad) [ebx-0x70]
  406dcf:	sub    al,0x47
  406dd1:	or     bl,BYTE PTR [edi-0x43]
  406dd4:	pop    ecx
  406dd5:	ds (bad) 
  406dd7:	adc    eax,0x873bfac0
  406ddc:	and    eax,0x8432b33b
  406de1:	mov    edi,0x7b76d674
  406de6:	cmp    al,0x69
  406de8:	jnp    0x406dd9
  406dea:	clc    
  406deb:	sti    
  406dec:	(bad)  
  406ded:	in     al,0xcd
  406def:	jns    0x406e49
  406df1:	xor    eax,0xf589b50
  406df6:	adc    eax,esp
  406df8:	mov    ds:0x479c854d,al
  406dfd:	pop    ds
  406dfe:	push   ebx
  406dff:	pop    gs
  406e01:	stc    
  406e02:	outs   dx,BYTE PTR ds:[esi]
  406e03:	test   eax,0x362bb10c
  406e08:	gs loope 0x406e32
  406e0b:	mov    ebx,0x7c83caa1
  406e10:	jae    0x406e50
  406e12:	arpl   dx,di
  406e14:	inc    esi
  406e15:	aam    0x25
  406e17:	xchg   edi,eax
  406e18:	jmp    0x666a:0xad042b48
  406e1f:	loopne 0x406e9f
  406e21:	jno    0x406e61
  406e23:	sar    BYTE PTR [edi+0x28],cl
  406e26:	mov    al,0x11
  406e28:	pop    ecx
  406e29:	(bad)  
  406e2b:	inc    edi
  406e2c:	loop   0x406e23
  406e2e:	push   edi
  406e2f:	xchg   esp,eax
  406e30:	inc    ecx
  406e31:	test   BYTE PTR [edi],bl
  406e33:	rol    DWORD PTR [ecx-0x6e],1
  406e36:	xchg   ebx,eax
  406e37:	out    0xb7,eax
  406e39:	dec    eax
  406e3a:	adc    esp,0x3
  406e3d:	sub    edi,DWORD PTR [eax+0x22]
  406e40:	dec    esi
  406e41:	dec    ebx
  406e42:	mov    edi,0x5299b85d
  406e47:	iret   
  406e48:	jae    0x406e36
  406e4a:	std    
  406e4b:	gs into 
  406e4d:	adc    al,0xfb
  406e4f:	push   ecx
  406e50:	mov    ah,0xf2
  406e52:	std    
  406e53:	ret    
  406e54:	iret   
  406e55:	clc    
  406e56:	cdq    
  406e57:	inc    edx
  406e58:	(bad)  
  406e59:	sub    al,0x43
  406e5b:	mov    edi,DWORD PTR [edi-0x2ee8132]
  406e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e62:	aas    
  406e63:	jmp    0x98a42036
  406e68:	sub    ebx,DWORD PTR [esp-0x9]
  406e6c:	mov    bh,0x39
  406e6e:	mov    cs,esi
  406e70:	dec    eax
  406e71:	popa   
  406e72:	ja     0x406e6c
  406e74:	add    BYTE PTR [ebx-0x70f8374e],bl
  406e7a:	or     BYTE PTR [eax-0x4],ah
  406e7d:	adc    DWORD PTR [esi],ebp
  406e7f:	push   ds
  406e80:	test   bl,bh
  406e82:	shl    DWORD PTR [edi+0x5f],cl
  406e85:	push   ss
  406e86:	xchg   ecx,eax
  406e87:	pop    edx
  406e88:	adc    edi,DWORD PTR [ebp-0x2310f862]
  406e8e:	fs fwait
  406e90:	add    eax,DWORD PTR [ecx]
  406e92:	jbe    0x406eae
  406e94:	das    
  406e95:	sahf   
  406e96:	inc    eax
  406e97:	and    DWORD PTR [ebx],0xffffff89
  406e9a:	cmp    DWORD PTR [esi-0x6b99d90b],esi
  406ea0:	arpl   WORD PTR [edi-0x50],sp
  406ea3:	xlat   BYTE PTR ds:[ebx]
  406ea4:	rol    DWORD PTR [ecx+0x20],cl
  406ea7:	div    BYTE PTR [esi+ebx*4]
  406eaa:	lock cmp eax,0x5780b304
  406eb0:	push   0xfffffff4
  406eb2:	jmp    0x406e83
  406eb4:	inc    ebp
  406eb5:	inc    eax
  406eb6:	mov    esp,0x7c5f3f3c
  406ebb:	pop    ds
  406ebc:	xlat   BYTE PTR ds:[ebx]
  406ebd:	xchg   ebx,eax
  406ebe:	and    BYTE PTR ss:[ecx],dh
  406ec1:	enter  0x710f,0x7d
  406ec5:	push   ebp
  406ec6:	or     eax,0x2ff4d768
  406ecb:	xchg   ebx,eax
  406ecc:	mov    bl,0x9f
  406ece:	(bad)  
  406ed0:	pop    ebx
  406ed1:	pop    ss
  406ed2:	fidiv  DWORD PTR [ebx+0x2e]
  406ed5:	daa    
  406ed6:	mov    al,0xff
  406ed8:	jge    0x406e6e
  406eda:	fldcw  WORD PTR [ebp-0x4232a37a]
  406ee0:	sub    al,0xdf
  406ee2:	adc    DWORD PTR [ebx-0x4e],esp
  406ee5:	scas   eax,DWORD PTR es:[edi]
  406ee6:	mov    DWORD PTR [ebp+ebp*2+0x48],esi
  406eea:	clc    
  406eeb:	scas   eax,DWORD PTR es:[edi]
  406eec:	lods   eax,DWORD PTR ds:[esi]
  406eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eee:	adc    ecx,eax
  406ef0:	sub    DWORD PTR [ebx-0xb333e9b],0xffffffbb
  406ef7:	inc    ebp
  406ef8:	jmp    0x406f28
  406efa:	repnz rcr BYTE PTR [edx+0x24e2e8a6],0x80
  406f02:	fst    DWORD PTR [edx-0xdbd9e0e]
  406f08:	mov    dh,0xc5
  406f0a:	dec    DWORD PTR [ecx]
  406f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f0d:	xchg   edi,eax
  406f0e:	hlt    
  406f0f:	ins    BYTE PTR es:[edi],dx
  406f10:	retf   0xb4a4
  406f13:	push   ss
  406f14:	jo     0x406f05
  406f16:	shl    ah,cl
  406f18:	cmp    al,0x21
  406f1a:	push   ss
  406f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f1c:	stos   DWORD PTR es:[edi],eax
  406f1d:	imul   ebx,DWORD PTR [edx+0x70edf388],0x28
  406f24:	fsub   DWORD PTR [ecx+0x41ac479]
  406f2a:	cmp    edx,DWORD PTR [esp+esi*8-0x25]
  406f2e:	mov    DWORD PTR ds:0xf0d44421,esi
  406f34:	or     DWORD PTR [edi],ebp
  406f36:	add    ecx,DWORD PTR [ebx-0x7d]
  406f39:	mov    esi,0xecec5943
  406f3e:	jmp    0x406fbb
  406f40:	das    
  406f41:	jl     0x406fbf
  406f43:	aam    0xd1
  406f45:	and    BYTE PTR [ebp+0x13],ah
  406f48:	ja     0x406ee6
  406f4a:	pop    esi
  406f4b:	dec    ecx
  406f4c:	out    dx,eax
  406f4d:	int    0x30
  406f4f:	xchg   esi,eax
  406f50:	into   
  406f51:	push   ss
  406f52:	add    al,0xb0
  406f54:	int    0x84
  406f56:	xchg   ecx,eax
  406f57:	rcr    DWORD PTR [edi+0xa4b91e2],cl
  406f5d:	adc    edi,ebp
  406f5f:	xor    al,0x50
  406f61:	xchg   BYTE PTR [edx-0x18c45eaa],bh
  406f67:	pop    edi
  406f68:	xor    ah,BYTE PTR [ecx-0x4a]
  406f6b:	clc    
  406f6c:	sti    
  406f6d:	mov    cl,0xf3
  406f6f:	scas   eax,DWORD PTR es:[edi]
  406f70:	out    0xc0,eax
  406f72:	push   ss
  406f73:	fisub  DWORD PTR [ebx+ebp*4-0x48]
  406f77:	cmp    eax,0x6908410b
  406f7c:	test   al,0xae
  406f7e:	inc    ebx
  406f7f:	sbb    ebp,DWORD PTR [esi+0xb]
  406f82:	and    al,0xe4
  406f84:	sub    eax,0x5bc20d62
  406f89:	mov    edi,0xed297752
  406f8e:	jge    0x406ffb
  406f90:	sbb    ebx,esi
  406f92:	jns    0x406f50
  406f94:	test   DWORD PTR [esi-0x337419b4],esi
  406f9a:	dec    esp
  406f9b:	jne    0x406fea
  406f9d:	jae    0x406fe2
  406f9f:	jae    0x406ff1
  406fa1:	adc    BYTE PTR [ecx+0x7f204db0],ah
  406fa7:	cmp    ecx,DWORD PTR ds:0x8c9227
  406fad:	pop    eax
  406fae:	and    ch,BYTE PTR [esp+ebp*2+0x0]
  406fb2:	sub    esp,edi
  406fb4:	xor    DWORD PTR [ebx+0x74e912ea],ebx
  406fba:	xchg   esi,eax
  406fbb:	(bad)
  406fbf:	in     al,dx
  406fc0:	ja     0x407031
  406fc2:	and    BYTE PTR [ebp+edx*4+0x70a5e798],dl
  406fc9:	mov    ds:0x1033a37a,al
  406fce:	cmp    DWORD PTR [edi+esi*2-0x7],edx
  406fd2:	pop    esi
  406fd3:	mov    eax,DWORD PTR [eax-0x2f]
  406fd6:	call   0x6913:0xcd8feee4
  406fdd:	push   esp
  406fde:	jl     0x406f77
  406fe0:	sbb    dl,BYTE PTR [ebp+0x64]
  406fe3:	ss (bad) 
  406fe5:	into   
  406fe6:	xchg   esi,eax
  406fe7:	jmp    0x406f77
  406fe9:	dec    eax
  406fea:	cs dec ebx
  406fec:	jg     0x407043
  406fee:	js     0x406f7b
  406ff0:	jae    0x407062
  406ff2:	test   DWORD PTR [edx],ebp
  406ff4:	lahf   
  406ff5:	or     BYTE PTR [eax],bl
  406ff7:	mov    DWORD PTR [ecx+0x9],edi
  406ffa:	pop    ecx
  406ffb:	pushf  
  406ffc:	call   0x9825:0x5ae0c702
  407003:	imul   esp,DWORD PTR [edi+0x5b],0xfd210acb
  40700a:	mov    ecx,0x6605d974
  40700f:	and    al,0x59
  407011:	or     al,0x16
  407013:	daa    
  407014:	sbb    eax,0x9da444fa
  407019:	ss (bad) 
  40701b:	mov    ecx,0xb01825fb
  407020:	out    0xe4,al
  407022:	test   BYTE PTR [edi],ch
  407024:	cmp    BYTE PTR [ebx],ah
  407026:	xchg   esp,eax
  407027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407028:	movd   mm4,DWORD PTR cs:[eax]
  40702c:	adc    DWORD PTR [ebx+0x663ff8a1],esp
  407032:	mov    edx,ecx
  407034:	sbb    BYTE PTR [ebp+0x71],dh
  407037:	sbb    eax,0x665f1d81
  40703c:	xchg   ebx,eax
  40703d:	aam    0x38
  40703f:	std    
  407040:	ds out dx,al
  407042:	pop    ebp
  407043:	mov    eax,esi
  407045:	pop    esp
  407046:	loop   0x40700e
  407048:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40704a:	mov    ecx,0xa4a4d192
  40704f:	and    ebp,ecx
  407051:	aaa    
  407052:	xor    al,BYTE PTR [ebx-0x37a0b4c]
  407058:	fstp   DWORD PTR [esi-0x62958277]
  40705e:	rdseed eax
  407061:	jle    0x407055
  407063:	out    0x30,eax
  407065:	pop    esi
  407066:	sbb    BYTE PTR [edi],dh
  407068:	pop    ds
  407069:	sub    DWORD PTR [ebx],esi
  40706b:	cld    
  40706c:	mov    ds:0x94d72d7a,al
  407071:	or     ebx,edx
  407073:	loopne 0x407097
  407075:	in     al,dx
  407076:	jae    0x407008
  407078:	scas   eax,DWORD PTR es:[edi]
  407079:	fstp   QWORD PTR [esi-0x7c]
  40707c:	test   BYTE PTR [edi+eax*2],cl
  40707f:	adc    al,0xf5
  407081:	mov    al,ds:0x240f4124
  407086:	cmp    DWORD PTR [ebx],edx
  407088:	mov    BYTE PTR [eax-0x5c1d0839],cl
  40708e:	aaa    
  40708f:	mov    bl,0xda
  407091:	mov    esp,0x30a9f70d
  407096:	or     DWORD PTR [ebp-0x3bd78a94],esi
  40709c:	sub    DWORD PTR [ebx-0x31748082],ebp
  4070a2:	push   ebx
  4070a3:	outs   dx,BYTE PTR ds:[esi]
  4070a4:	ja     0x40707b
  4070a6:	add    eax,DWORD PTR [ebp+0x4a92e620]
  4070ac:	pop    esp
  4070ad:	cmp    al,0xff
  4070af:	mov    ebp,0x4cbfd6ca
  4070b4:	icebp  
  4070b5:	mov    esi,0x9b2f2f60
  4070ba:	daa    
  4070bb:	adc    ah,BYTE PTR [ecx-0x36a7ca6a]
  4070c1:	(bad)  
  4070c2:	cmp    ebx,eax
  4070c4:	fimul  DWORD PTR cs:[ecx+0xb]
  4070c8:	into   
  4070c9:	cs aad 0x7a
  4070cc:	scas   al,BYTE PTR es:[edi]
  4070cd:	sub    al,0x41
  4070cf:	inc    esp
  4070d0:	fcomp  DWORD PTR [esi]
  4070d2:	pop    ss
  4070d3:	rcr    ah,cl
  4070d5:	ss mov dh,0xdd
  4070d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d9:	fcom   DWORD PTR [esi+ebx*2]
  4070dc:	arpl   WORD PTR [ebx+ecx*8+0xe2fdcb7],cx
  4070e3:	dec    edx
  4070e4:	loopne 0x4070b0
  4070e6:	shr    DWORD PTR [esi-0x57],0x1
  4070ea:	xor    al,0xc1
  4070ec:	mov    al,bh
  4070ee:	add    ebp,DWORD PTR [eax+0x18b7f190]
  4070f4:	push   ss
  4070f5:	mov    dl,0xfa
  4070f7:	jno    0x4070f2
  4070f9:	outs   dx,DWORD PTR ds:[esi]
  4070fa:	mov    edx,0xeb645976
  4070ff:	xor    al,0x79
  407101:	in     eax,dx
  407102:	xchg   ebx,eax
  407103:	pop    ss
  407104:	adc    al,BYTE PTR [edi-0x1af37]
  40710a:	leave  
  40710b:	pop    esp
  40710c:	rcl    DWORD PTR [edi+edx*8+0x6cf65053],1
  407113:	push   ebx
  407114:	pop    es
  407115:	fiadd  DWORD PTR [ecx-0x4d]
  407118:	add    al,BYTE PTR [ecx+0x6e1a1ece]
  40711e:	leave  
  40711f:	mov    esi,0x5ac92665
  407124:	adc    eax,0xc4e02699
  407129:	pop    esi
  40712a:	imul   ebx,DWORD PTR [edx],0x72
  40712d:	loopne 0x40715e
  40712f:	adc    ecx,DWORD PTR [eax]
  407131:	cmp    eax,0xea61e43c
  407136:	pop    ecx
  407137:	xchg   ebx,eax
  407138:	stos   DWORD PTR es:[edi],eax
  407139:	retf   0x9ece
  40713c:	cmp    eax,0x6668c2e
  407141:	lods   al,BYTE PTR ds:[esi]
  407142:	mov    dh,0x28
  407144:	inc    edi
  407145:	and    BYTE PTR [eax-0x38c02034],dl
  40714b:	pop    ecx
  40714c:	and    eax,0xdd740332
  407151:	adc    eax,0xc3a4c0a4
  407156:	inc    edi
  407157:	mov    BYTE PTR [ebp-0x5558fde9],0xc5
  40715e:	ficom  WORD PTR [edi]
  407160:	std    
  407161:	das    
  407162:	das    
  407163:	or     al,0x3a
  407165:	inc    edx
  407166:	cmp    eax,DWORD PTR [edx+edx*4+0x3e]
  40716a:	cmp    BYTE PTR [esi+0x4d],cl
  40716d:	pushf  
  40716e:	imul   edx,DWORD PTR [eax],0xffffff85
  407171:	add    BYTE PTR [edx-0x6bcc7d9f],ch
  407177:	pop    ecx
  407178:	stc    
  407179:	xchg   ch,cl
  40717b:	js     0x4071d1
  40717d:	lahf   
  40717e:	mov    edi,0xebbbb37
  407183:	loope  0x4071bb
  407185:	lock sub bl,BYTE PTR ds:0x5a3ac0a4
  40718c:	mov    al,ds:0x3698614d
  407191:	jbe    0x407177
  407193:	jmp    0x407132
  407195:	dec    esi
  407196:	nop
  407197:	xor    ah,dh
  407199:	out    0x68,al
  40719b:	imul   ebx,DWORD PTR [ecx],0xf1b5a279
  4071a1:	or     BYTE PTR ds:0x5f64a0e1,dl
  4071a7:	in     eax,dx
  4071a8:	xlat   BYTE PTR ds:[ebx]
  4071a9:	retf   0xf4bc
  4071ac:	inc    esi
  4071ad:	out    dx,eax
  4071ae:	sub    eax,DWORD PTR [edx-0x2b]
  4071b1:	js     0x4071d0
  4071b3:	js     0x407203
  4071b5:	and    cl,ah
  4071b7:	cwde   
  4071b8:	(bad)  
  4071b9:	in     eax,0x1
  4071bb:	dec    ebx
  4071bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071bd:	(bad)  [edi+edi*4+0x32]
  4071c1:	jns    0x40723e
  4071c3:	jbe    0x40715f
  4071c5:	pop    edi
  4071c6:	inc    eax
  4071c7:	data16 xor dl,ch
  4071ca:	pop    edi
  4071cb:	loope  0x40716f
  4071cd:	jbe    0x40724a
  4071cf:	mov    al,0x99
  4071d1:	pop    ecx
  4071d2:	adc    BYTE PTR [ebx+ebx*4+0x71b8cfa9],ah
  4071d9:	cmp    DWORD PTR [esi+eiz*1+0x24],edx
  4071dd:	xor    ecx,DWORD PTR [edi-0x49]
  4071e0:	fild   QWORD PTR [ebx+0x50e71bec]
  4071e6:	cwde   
  4071e7:	inc    esi
  4071e8:	cmp    BYTE PTR [ecx+0x51],bl
  4071eb:	clc    
  4071ec:	mov    eax,0x9d9bba1b
  4071f1:	dec    esi
  4071f2:	repz mov eax,ds:0xc7ef879d
  4071f8:	mov    eax,ds:0x93ae001e
  4071fd:	ins    BYTE PTR es:[edi],dx
  4071fe:	push   ebx
  4071ff:	pop    eax
  407200:	jl     0x407216
  407202:	imul   ebp,ecx,0x987df06d
  407208:	les    edx,FWORD PTR [eax+0x78]
  40720b:	jp     0x4071a6
  40720d:	jae    0x407202
  40720f:	loop   0x4071e9
  407211:	inc    bp
  407213:	inc    esi
  407214:	sub    ch,bl
  407216:	pusha  
  407217:	loopne 0x407293
  407219:	rol    DWORD PTR [esi-0x676f21d],1
  40721f:	in     eax,dx
  407220:	test   al,0x39
  407222:	fdivr  DWORD PTR [ecx-0x44bae82]
  407228:	and    BYTE PTR [esp+edx*4-0x71f04c61],cl
  40722f:	jecxz  0x407244
  407231:	outs   dx,DWORD PTR ds:[esi]
  407232:	adc    esp,DWORD PTR [ebp+ecx*4-0x52da2faa]
  407239:	pop    ebx
  40723a:	sub    DWORD PTR [ecx],eax
  40723c:	inc    edi
  40723d:	pop    ebx
  40723e:	test   BYTE PTR [ebx+edi*1+0xd5440e5],bh
  407245:	add    dl,dl
  407247:	sub    edx,DWORD PTR ds:0x11504bee
  40724d:	sub    eax,0x3e95a86c
  407252:	fild   WORD PTR [eax]
  407254:	rcl    BYTE PTR [esi+ebp*4-0x28],0x33
  407259:	mov    al,ds:0xca426e40
  40725e:	call   0x68f21fd3
  407263:	dec    edi
  407264:	sar    BYTE PTR [eax+esi*4],1
  407267:	stos   BYTE PTR es:[edi],al
  407268:	test   esi,edx
  40726a:	cmp    DWORD PTR [ebp+0x5172feb3],esp
  407270:	xchg   ebx,eax
  407271:	cmp    DWORD PTR [ebp+ebx*2+0x77],eax
  407275:	add    BYTE PTR [eax],0xcd
  407278:	mov    eax,0x5d04e096
  40727d:	les    ebp,FWORD PTR [eax]
  40727f:	shl    BYTE PTR [ecx],1
  407281:	out    dx,eax
  407282:	popa   
  407283:	int3   
  407284:	imul   esi,DWORD PTR [ebp+0x9],0x3ee3b417
  40728b:	std    
  40728c:	scas   al,BYTE PTR es:[edi]
  40728d:	pop    esp
  40728e:	lds    esp,FWORD PTR [eax+0x1]
  407291:	arpl   WORD PTR fs:[ebp-0x6f9f93e3],ax
  407298:	int3   
  407299:	dec    edx
  40729a:	stos   BYTE PTR es:[edi],al
  40729b:	ret    
  40729c:	push   esp
  40729d:	xchg   ebp,eax
  40729e:	gs out 0xc9,al
  4072a1:	and    esi,0xd2f60152
  4072a7:	je     0x40731d
  4072a9:	das    
  4072aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ab:	xchg   esi,eax
  4072ac:	(bad)  
  4072ad:	(bad)  [esi+eax*8+0x50]
  4072b1:	adc    DWORD PTR [eax-0x398c1d03],ebx
  4072b7:	or     dh,ah
  4072b9:	cdq    
  4072ba:	fsubr  DWORD PTR [eax+0x59]
  4072bd:	xchg   edx,eax
  4072be:	std    
  4072bf:	out    dx,eax
  4072c0:	lea    ebx,[eax]
  4072c2:	jae    0x4072b3
  4072c4:	fmul   QWORD PTR [eax+0xe]
  4072c7:	test   al,0xea
  4072c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ca:	jmp    0x4072e8
  4072cc:	call   0x574:0xf4e2e2ef
  4072d3:	sahf   
  4072d4:	shl    DWORD PTR [edi+edi*2-0x3f],0x5b
  4072d9:	or     al,0xde
  4072db:	in     al,dx
  4072dc:	fmulp  st(5),st
  4072de:	in     eax,dx
  4072df:	sar    BYTE PTR [edi-0x1b68d3c3],0xa2
  4072e6:	jnp    0x4072df
  4072e8:	mov    edx,0x8a235327
  4072ed:	xor    DWORD PTR [eax-0x32],0x542b655e
  4072f4:	lods   eax,DWORD PTR ds:[esi]
  4072f5:	sbb    BYTE PTR ds:0x6d8c26b5,al
  4072fb:	jecxz  0x4072ec
  4072fd:	pop    edx
  4072fe:	in     eax,0xc5
  407300:	push   0xffffffd0
  407302:	xchg   ecx,eax
  407303:	fisub  DWORD PTR [eax-0x3cd3b5bb]
  407309:	pop    ecx
  40730a:	adc    bl,BYTE PTR [ebp+0x66]
  40730d:	xchg   edx,eax
  40730e:	retf   0x2fa2
  407311:	and    BYTE PTR [edx-0x7f349f22],al
  407317:	add    ebx,ebx
  407319:	ja     0x40736b
  40731b:	xchg   esi,eax
  40731c:	adc    eax,0x8f993c8f
  407321:	je     0x407379
  407323:	mov    ch,BYTE PTR [ecx-0x5d94c563]
  407329:	mov    es,WORD PTR [ecx+0x68]
  40732c:	jmp    0x40735c
  40732e:	sbb    ecx,DWORD PTR [ebp+0x451923ec]
  407334:	loopne 0x407394
  407336:	call   0xc6018c88
  40733b:	push   cs
  40733c:	out    dx,eax
  40733d:	adc    eax,0x84597224
  407342:	sbb    esp,eax
  407344:	cmp    ah,ch
  407346:	rcl    DWORD PTR [edx-0x71],cl
  407349:	gs out 0xa9,al
  40734c:	bound  ecx,QWORD PTR [edi-0x59]
  40734f:	cmp    DWORD PTR [ebx],0x49e35f93
  407355:	in     al,0x24
  407357:	jne    0x4072f9
  407359:	outs   dx,BYTE PTR ds:[esi]
  40735a:	inc    ebx
  40735b:	popa   
  40735c:	ins    BYTE PTR es:[edi],dx
  40735d:	mov    ds:0xeddfaa5a,al
  407362:	fsub   DWORD PTR [ecx]
  407364:	jle    0x407390
  407366:	sbb    cl,dl
  407368:	mov    ebp,0xe932d7a4
  40736d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736e:	jmp    0x40732c
  407370:	aaa    
  407371:	outs   dx,BYTE PTR ds:[esi]
  407372:	and    DWORD PTR [eax+0x47120201],esp
  407378:	hlt    
  407379:	jmp    0xda07:0x4b56e401
  407380:	jg     0x40734f
  407382:	loopne 0x4073b8
  407384:	ret    0x702f
  407387:	jae    0x40732b
  407389:	(bad)  
  40738a:	fidiv  DWORD PTR [ebx+esi*4-0x1f]
  40738e:	push   ds
  40738f:	std    
  407390:	lds    ebp,FWORD PTR [esi]
  407392:	dec    eax
  407393:	inc    eax
  407394:	xor    ebx,DWORD PTR [ebx+0x24bceaad]
  40739a:	daa    
  40739b:	push   edx
  40739c:	je     0x40740f
  40739e:	adc    DWORD PTR [edx+0x237f5678],ebx
  4073a4:	xchg   edx,eax
  4073a5:	ret    0x1592
  4073a8:	push   ecx
  4073a9:	sbb    dh,BYTE PTR [ebp+0xa]
  4073ac:	rol    DWORD PTR [edi+0x682b640a],0x71
  4073b3:	or     cl,BYTE PTR [ebx]
  4073b5:	(bad)  
  4073b6:	cs std 
  4073b8:	lods   al,BYTE PTR ds:[esi]
  4073b9:	ret    0x91cb
  4073bc:	outs   dx,DWORD PTR ds:[esi]
  4073bd:	lahf   
  4073be:	aad    0xe2
  4073c0:	xchg   edx,eax
  4073c1:	in     eax,dx
  4073c2:	rcr    ebx,cl
  4073c4:	loope  0x4073d6
  4073c6:	cmp    eax,0x59d2685
  4073cb:	sbb    al,0x8
  4073cd:	push   esp
  4073ce:	rol    DWORD PTR [ebp+0x6f],1
  4073d1:	jo     0x4073c7
  4073d3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4073d5:	test   DWORD PTR [edx-0x486855a0],edx
  4073db:	adc    BYTE PTR [ecx+0xc841463],ch
  4073e1:	leave  
  4073e2:	nop
  4073e3:	inc    esi
  4073e4:	fld    TBYTE PTR fs:0xb1a16e86
  4073eb:	cs out dx,al
  4073ed:	mov    al,0xc9
  4073ef:	and    BYTE PTR [ebx+0x61],dl
  4073f2:	mov    esi,ebp
  4073f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f5:	or     eax,0x458f9d98
  4073fa:	popf   
  4073fb:	or     al,0x73
  4073fd:	mov    ah,0x5
  4073ff:	push   ecx
  407400:	sub    DWORD PTR [eax-0x584021ab],ebx
  407406:	push   DWORD PTR [edx+0x1f]
  407409:	lea    edx,[ebp+0x37]
  40740c:	scas   al,BYTE PTR es:[edi]
  40740d:	add    BYTE PTR fs:[edi-0x4403db87],bh
  407414:	xchg   edx,eax
  407415:	mov    ds:0xf8644849,al
  40741a:	xor    eax,0x1912aa8c
  40741f:	sub    BYTE PTR [esi+0x341a0a51],0x69
  407426:	dec    ecx
  407427:	idiv   BYTE PTR [edi+0x3b]
  40742a:	xor    ebx,esp
  40742c:	pop    ss
  40742d:	xor    edx,DWORD PTR ds:0x20067827
  407433:	imul   ebx,DWORD PTR [eax-0x43a27497],0xbd34c4f2
  40743d:	mov    ebx,0x62e70924
  407442:	aam    0x24
  407444:	test   al,0xce
  407446:	sbb    dh,cl
  407448:	jns    0x407467
  40744a:	jo     0x40745f
  40744c:	jnp    0x4074bf
  40744e:	or     eax,0x3b0db294
  407453:	inc    esi
  407454:	paddd  mm0,QWORD PTR [esi-0x32c73f2]
  40745b:	xlat   BYTE PTR ds:[ebx]
  40745c:	sub    eax,0x9ad50823
  407461:	pop    es
  407462:	je     0x4073fc
  407464:	cmp    esp,edx
  407466:	shr    DWORD PTR [esi],cl
  407468:	repz dec eax
  40746a:	mov    ebx,0x60689c74
  40746f:	int3   
  407470:	jp     0x407400
  407472:	xchg   DWORD PTR [edi+0x194029e5],eax
  407478:	mov    ah,0x29
  40747a:	clc    
  40747b:	inc    ebp
  40747c:	mov    edi,0x2e97f6a
  407481:	rcl    ah,cl
  407483:	dec    esi
  407484:	cmp    BYTE PTR [ebx],ah
  407486:	call   0xde9ac4a3
  40748b:	pop    ebp
  40748c:	mov    edx,0xc131e954
  407491:	xchg   edx,eax
  407492:	mov    ds:0xf2945915,al
  407497:	jmp    0x8d44:0xef4d4288
  40749e:	mov    al,0xb8
  4074a0:	xor    al,0x62
  4074a2:	mov    ah,0x5e
  4074a4:	jg     0x4074b8
  4074a6:	lea    ebx,[ebx-0x7c]
  4074a9:	icebp  
  4074aa:	and    DWORD PTR fs:[esi+0x35],edi
  4074ae:	mov    DWORD PTR [ebp-0x3c],esi
  4074b1:	mov    al,ds:0xb9cfe521
  4074b6:	sbb    esp,DWORD PTR [edx+0x29]
  4074b9:	ficomp DWORD PTR [esi-0x28]
  4074bc:	push   0x44cd4fc7
  4074c1:	and    ah,BYTE PTR ss:[eax+edi*4]
  4074c5:	into   
  4074c6:	mov    cl,bh
  4074c8:	push   esi
  4074c9:	icebp  
  4074ca:	fsub   DWORD PTR ds:0x24c10311
  4074d0:	fdiv   DWORD PTR [edx+ecx*4+0x4bc31b00]
  4074d7:	mov    bl,0xee
  4074d9:	lahf   
  4074da:	bound  eax,QWORD PTR [ecx+0x7ee5cda6]
  4074e0:	dec    ecx
  4074e1:	sbb    eax,0x8be25710
  4074e6:	(bad)  
  4074e7:	repz and edi,DWORD PTR [edx]
  4074ea:	push   esp
  4074eb:	js     0x407519
  4074ed:	add    al,0x63
  4074ef:	jo     0x407519
  4074f1:	sub    bh,BYTE PTR [ebx+0x54e76d8d]
  4074f7:	push   edi
  4074f8:	sub    esp,DWORD PTR [esp+ebx*8]
  4074fb:	aad    0xcb
  4074fd:	xor    al,BYTE PTR [ebx]
  4074ff:	dec    edx
  407500:	fwait
  407501:	sbb    DWORD PTR [edx-0xb28c663],ecx
  407507:	sahf   
  407508:	mov    edx,0xaf03c386
  40750d:	es repz push 0xffffff90
  407511:	sti    
  407512:	hlt    
  407513:	retf   0xe028
  407516:	jge    0x407543
  407518:	mov    bl,0xd2
  40751a:	sub    eax,DWORD PTR [edx-0x51]
  40751d:	imul   esp
  40751f:	pushw  0x568d
  407523:	sbb    esi,esp
  407525:	xor    eax,0xb85cf46d
  40752a:	scas   al,BYTE PTR es:[edi]
  40752b:	sar    BYTE PTR [edi-0x5637b07d],cl
  407531:	cli    
  407532:	fsubr  DWORD PTR [edi+0x68]
  407535:	and    DWORD PTR [edi+0x329a81cc],edx
  40753b:	xor    DWORD PTR [esi],0xad979e81
  407541:	test   ebx,ebp
  407543:	lods   eax,DWORD PTR ds:[esi]
  407544:	mov    edi,0x7024dff
  407549:	adc    eax,0xec1c2aa4
  40754e:	push   esi
  40754f:	loop   0x407594
  407551:	lock or al,0xcf
  407554:	ror    DWORD PTR [edi+0x39],cl
  407557:	mov    edx,0x2d59f820
  40755c:	loopne 0x40758b
  40755e:	std    
  40755f:	xor    eax,0x5e51f7a8
  407564:	inc    ecx
  407565:	ins    BYTE PTR es:[edi],dx
  407566:	and    al,0xe1
  407568:	out    dx,eax
  407569:	shl    BYTE PTR [eax],0xe
  40756c:	adc    esi,DWORD PTR [edi-0x38bb88e0]
  407572:	mov    ah,0x8a
  407574:	xor    DWORD PTR [ecx-0x26faf081],eax
  40757a:	popf   
  40757b:	rcl    BYTE PTR [edx-0x17b74ab3],cl
  407581:	jl     0x4075b8
  407583:	push   0xffffffc2
  407585:	sub    dh,BYTE PTR [ebp-0x6c]
  407588:	hlt    
  407589:	xchg   ebp,eax
  40758a:	in     eax,dx
  40758b:	rcr    BYTE PTR [ebx],cl
  40758d:	mov    DWORD PTR [edi],ecx
  40758f:	xor    dl,BYTE PTR [eax]
  407591:	out    0x3e,al
  407593:	add    edx,ecx
  407595:	cmp    DWORD PTR [ebx],esp
  407597:	or     edx,esp
  407599:	xchg   ebp,eax
  40759a:	adc    DWORD PTR [ecx+esi*1+0x27],ecx
  40759e:	add    BYTE PTR [ebp+0x3],0x5b
  4075a2:	popa   
  4075a3:	loopne 0x407561
  4075a5:	push   edx
  4075a6:	push   di
  4075a8:	out    dx,al
  4075a9:	mov    edx,0x6f24920c
  4075ae:	int    0xfc
  4075b0:	loope  0x407536
  4075b2:	xchg   ecx,eax
  4075b3:	pop    ecx
  4075b4:	xchg   esp,eax
  4075b5:	ror    BYTE PTR [esi+0x4b19d472],0x75
  4075bc:	push   esi
  4075bd:	inc    ecx
  4075be:	lods   al,BYTE PTR ds:[esi]
  4075bf:	sub    al,0x5b
  4075c1:	ds ret 0x9fb3
  4075c5:	iret   
  4075c6:	inc    ebp
  4075c7:	loope  0x407610
  4075c9:	push   ecx
  4075ca:	in     eax,0x77
  4075cc:	add    DWORD PTR [ebp-0x5],edx
  4075cf:	and    ebx,esp
  4075d1:	adc    BYTE PTR [edi+0x3a7a77c8],ah
  4075d7:	jbe    0x407603
  4075d9:	push   0xffffffc4
  4075db:	xor    eax,0xaadd48bb
  4075e0:	retf   0x58ee
  4075e3:	adc    bh,bh
  4075e5:	test   al,0xf4
  4075e7:	shr    BYTE PTR [eax-0x51],cl
  4075ea:	addr16 pusha 
  4075ec:	sub    al,0x6b
  4075ee:	cli    
  4075ef:	daa    
  4075f0:	mov    es,WORD PTR [edx+0xb18373f]
  4075f6:	jl     0x407629
  4075f8:	mov    ah,0xe8
  4075fa:	imul   ebx,DWORD PTR [edi+eax*8+0x7b62009e],0xfffffff9
  407602:	xchg   esp,eax
  407603:	mov    ds,WORD PTR [esi-0x1c]
  407606:	in     al,0x71
  407608:	std    
  407609:	js     0x407618
  40760b:	pop    es
  40760c:	test   DWORD PTR gs:[edi+esi*8+0x1c],eax
  407611:	addr16 iret 
  407613:	(bad)  
  407614:	shl    DWORD PTR [eax-0x64],1
  407617:	daa    
  407618:	jae    0x40759d
  40761a:	pop    esp
  40761b:	sbb    al,0xc4
  40761d:	fs inc esp
  40761f:	out    0x53,eax
  407621:	cdq    
  407622:	xor    DWORD PTR [esi+ebp*1],ecx
  407625:	fimul  DWORD PTR [edx-0x61a71964]
  40762b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40762c:	js     0x407643
  40762e:	xchg   ecx,eax
  40762f:	xor    ebp,eax
  407631:	pop    edi
  407632:	in     al,dx
  407633:	dec    eax
  407634:	in     eax,dx
  407635:	and    ch,bl
  407637:	(bad)  
  407639:	mov    bh,0xe4
  40763b:	in     eax,0x91
  40763d:	test   BYTE PTR [ebx-0x54],bl
  407640:	xchg   edx,eax
  407641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407642:	push   ecx
  407643:	test   DWORD PTR [ebx],ebp
  407645:	aaa    
  407646:	leave  
  407647:	sub    eax,DWORD PTR [eax-0x79d95d59]
  40764d:	fidivr DWORD PTR [esi]
  40764f:	xor    al,BYTE PTR [ebx]
  407651:	inc    ecx
  407652:	cli    
  407653:	mov    ds,WORD PTR [ebx-0x48f76541]
  407659:	test   BYTE PTR [edi-0x34c87280],ah
  40765f:	add    esi,DWORD PTR ds:0xd5e6284a
  407665:	push   ss
  407666:	retf   
  407667:	leave  
  407668:	sahf   
  407669:	sbb    ecx,DWORD PTR [edx+0x5b]
  40766c:	push   0xffffff8c
  40766e:	stc    
  40766f:	sbb    BYTE PTR [ecx],dl
  407671:	popf   
  407672:	aad    0x9b
  407674:	adc    BYTE PTR [edx-0x288627d5],dh
  40767a:	xor    eax,0x655e12bf
  40767f:	sub    cl,dh
  407681:	bound  esp,QWORD PTR [ecx+0x7dc3b3e1]
  407687:	(bad)  
  407688:	or     eax,0x41b314a3
  40768d:	mov    al,0xc5
  40768f:	enter  0xb515,0xe8
  407693:	push   ebp
  407694:	fisubr DWORD PTR [edx]
  407696:	cs pop ds
  407698:	aas    
  407699:	jo     0x4076ba
  40769b:	xchg   edi,eax
  40769c:	arpl   WORD PTR [ebp-0x5452f2c7],di
  4076a2:	mov    edi,0xbc931b97
  4076a7:	sbb    eax,ecx
  4076a9:	sbb    DWORD PTR [esi-0x23],esi
  4076ac:	push   es
  4076ad:	xchg   BYTE PTR [edi+0x29],cl
  4076b0:	in     eax,dx
  4076b1:	int3   
  4076b2:	dec    ebx
  4076b3:	push   es
  4076b4:	leave  
  4076b5:	fdivr  QWORD PTR [eax-0xbb02745]
  4076bb:	or     eax,0x62491f9b
  4076c0:	ja     0x407715
  4076c2:	lods   al,BYTE PTR ds:[esi]
  4076c3:	ja     0x407656
  4076c5:	push   0xb0d87bcc
  4076ca:	pushf  
  4076cb:	jmp    0x9cce:0x5b0c5120
  4076d2:	mov    dl,0xb
  4076d4:	cdq    
  4076d5:	xchg   ecx,eax
  4076d6:	loop   0x4076f7
  4076d8:	inc    ebx
  4076d9:	xchg   ebp,eax
  4076da:	cmp    al,BYTE PTR [edi+ebx*4]
  4076dd:	out    dx,al
  4076de:	mov    esp,0xf53e119
  4076e3:	(bad)  [edi+0x28]
  4076e6:	push   ecx
  4076e7:	imul   edx,ebp,0xffffff85
  4076ea:	test   BYTE PTR [edi+esi*4-0x18b7af00],al
  4076f1:	pusha  
  4076f2:	bound  edx,QWORD PTR [edi+0x1f]
  4076f5:	mov    ds:0x8d963108,al
  4076fa:	sbb    esi,DWORD PTR [edx]
  4076fc:	fstp   st(0)
  4076fe:	jl     0x407689
  407700:	mov    ds:0xa9a63294,eax
  407705:	jmp    0x91a2fe4b
  40770a:	jmp    0x407783
  40770c:	lods   al,BYTE PTR ds:[esi]
  40770d:	aam    0x4c
  40770f:	std    
  407710:	or     al,0xdd
  407712:	ror    DWORD PTR [esi-0x78ef09bd],1
  407718:	in     al,0x45
  40771a:	adc    al,0x40
  40771c:	sti    
  40771d:	cmp    ebp,edi
  40771f:	lea    edi,[ebp-0x80]
  407722:	pop    ss
  407723:	ret    0x91e0
  407726:	repnz mov ebp,0xdeb52ca7
  40772c:	test   DWORD PTR [edi+0x12],esp
  40772f:	retf   
  407730:	iret   
  407731:	jl     0x407726
  407733:	pop    ecx
  407734:	pop    edx
  407735:	fidivr DWORD PTR [esi]
  407737:	push   0xd3109160
  40773c:	inc    edx
  40773d:	or     DWORD PTR [eax],eax
  40773f:	sbb    BYTE PTR [esi+0x31c457e],0x9c
  407746:	mov    eax,0xa8430feb
  40774b:	xchg   DWORD PTR [eax+0x41c03d1b],edx
  407751:	sbb    al,0x83
  407753:	sbb    eax,0x553299d8
  407758:	into   
  407759:	cmp    BYTE PTR [edx-0x5ea69801],bh
  40775f:	cld    
  407760:	test   BYTE PTR [ecx-0x302f82e3],0x61
  407767:	sbb    BYTE PTR [ecx+0x1673dd80],dh
  40776d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40776e:	xrelease mov BYTE PTR [ecx+0x16],ch
  407772:	and    al,0xb9
  407774:	or     al,0x6f
  407776:	sub    ecx,DWORD PTR [ebx+0x3a]
  407779:	ins    DWORD PTR es:[edi],dx
  40777a:	ins    BYTE PTR es:[edi],dx
  40777b:	enter  0x48a0,0x1e
  40777f:	aad    0x73
  407781:	shl    BYTE PTR [ebx],1
  407783:	mov    WORD PTR [edi],gs
  407785:	and    edi,ecx
  407787:	push   edx
  407788:	adc    al,0xbf
  40778a:	sbb    bh,bl
  40778c:	or     eax,0xf044bae3
  407791:	mov    dl,0x65
  407793:	push   ebx
  407794:	lock add DWORD PTR [esi+0x27fdc123],esi
  40779b:	dec    ebp
  40779c:	fwait
  40779d:	mov    esp,0x1e0483f8
  4077a2:	rcl    DWORD PTR [edi-0x3935d3a5],1
  4077a8:	in     eax,0x3e
  4077aa:	repz push es
  4077ac:	outs   dx,DWORD PTR ds:[esi]
  4077ad:	pop    edx
  4077ae:	scas   eax,DWORD PTR es:[edi]
  4077af:	fldcw  WORD PTR [ebx-0x3bd70f3a]
  4077b5:	ja     0x4077fa
  4077b7:	je     0x4077ca
  4077b9:	ins    BYTE PTR es:[edi],dx
  4077ba:	nop
  4077bb:	push   edx
  4077bc:	and    eax,0x7857296c
  4077c1:	std    
  4077c2:	dec    ebp
  4077c3:	sub    al,0xbd
  4077c5:	out    dx,al
  4077c6:	out    0x60,al
  4077c8:	lods   al,BYTE PTR ds:[esi]
  4077c9:	push   edx
  4077ca:	mov    bl,BYTE PTR [edi-0x30]
  4077cd:	jmp    0x261179df
  4077d2:	xchg   ebp,eax
  4077d3:	(bad)  
  4077d4:	push   esp
  4077d5:	jbe    0x407820
  4077d7:	push   0x6ea33de1
  4077dc:	sbb    al,0x73
  4077de:	lods   al,BYTE PTR ds:[esi]
  4077df:	les    ebx,FWORD PTR cs:[ecx]
  4077e2:	rol    DWORD PTR [edi+0x2b],1
  4077e5:	jnp    0x407866
  4077e7:	push   ebx
  4077e8:	ss cdq 
  4077ea:	(bad)  
  4077eb:	sub    DWORD PTR ds:0xaa8fab1d,edi
  4077f1:	in     al,dx
  4077f2:	inc    ecx
  4077f3:	push   edx
  4077f4:	ret    
  4077f5:	push   0xffffff96
  4077f7:	lahf   
  4077f8:	sbb    al,0x17
  4077fa:	dec    BYTE PTR [ebp+edx*1-0xc]
  4077fe:	push   es
  4077ff:	sub    DWORD PTR [edi+0x63f57a08],esi
  407805:	push   esi
  407806:	sub    eax,ecx
  407808:	mov    ds:0xdd5cd337,eax
  40780d:	add    al,0x2c
  40780f:	inc    esp
  407810:	out    0x4d,eax
  407812:	xchg   DWORD PTR [ebx+0x1c],ebx
  407815:	das    
  407816:	fwait
  407817:	sbb    BYTE PTR [edx-0xe],bl
  40781a:	inc    ebp
  40781b:	inc    ecx
  40781c:	dec    edi
  40781d:	xchg   edi,eax
  40781e:	enter  0x5b87,0x86
  407822:	dec    ecx
  407823:	inc    esp
  407824:	jmp    0x407876
  407826:	mov    BYTE PTR [edi],al
  407828:	adc    BYTE PTR [eax-0x6f1f11e9],0x0
  40782f:	add    BYTE PTR [edi+0x6d],al
  407832:	push   0xf
  407834:	push   0xd7e91472
  407839:	retf   
  40783a:	ja     0x407848
  40783c:	mov    edi,0x7e134444
  407841:	fistp  QWORD PTR [edi+0x1d4fb594]
  407847:	xor    esi,ecx
  407849:	push   es
  40784a:	fmul   DWORD PTR [edx-0x4b13f097]
  407850:	xchg   DWORD PTR [ebx],edi
  407852:	cmp    edi,0xfffffffd
  407855:	imul   esi,DWORD PTR [esi],0x79
  407858:	xchg   esi,eax
  407859:	inc    eax
  40785a:	adc    eax,0xcc1f17c7
  40785f:	repnz xchg ebp,eax
  407861:	sub    dl,BYTE PTR [edx-0x46]
  407864:	push   edi
  407865:	call   0xcf1d:0x4f0c2cc7
  40786c:	xchg   esi,eax
  40786d:	cdq    
  40786e:	jno    0x4078a2
  407870:	cmp    esi,DWORD PTR [ebx+0x6a993235]
  407876:	jne    0x4078ac
  407878:	or     al,0x43
  40787a:	addr16 pop edx
  40787c:	xchg   ebp,eax
  40787d:	pop    es
  40787e:	je     0x407840
  407880:	or     bh,BYTE PTR [ebp+0x36]
  407883:	pop    edi
  407884:	push   cs
  407885:	xlat   BYTE PTR ds:[ebx]
  407886:	mov    BYTE PTR [eax+0x1918e2fc],ch
  40788c:	jp     0x4078de
  40788e:	dec    esi
  40788f:	mov    ebx,0x390da89b
  407894:	and    bh,BYTE PTR [edi-0x1b9afe5b]
  40789a:	fld    TBYTE PTR [ebx-0x51a9f10e]
  4078a0:	test   DWORD PTR [eax-0x555c451d],ecx
  4078a6:	jnp    0x4078d0
  4078a8:	in     eax,dx
  4078a9:	inc    ebx
  4078aa:	or     BYTE PTR [ebx+0x51],dl
  4078ad:	cmc    
  4078ae:	aam    0xfb
  4078b0:	das    
  4078b1:	xchg   ecx,eax
  4078b2:	rcl    DWORD PTR [esi+eiz*8+0x178e6c0e],1
  4078b9:	mov    esi,0xb9e59e58
  4078be:	xchg   ebp,eax
  4078bf:	in     eax,dx
  4078c0:	retf   0xb3f1
  4078c3:	pop    ebx
  4078c4:	cdq    
  4078c5:	xchg   ecx,eax
  4078c6:	push   esi
  4078c7:	and    al,0xe1
  4078c9:	inc    esp
  4078ca:	fsub   QWORD PTR [edi+0x2c7b89f0]
  4078d0:	push   0x4a6fd395
  4078d5:	sub    BYTE PTR [ebx-0x76],ch
  4078d8:	rep ins DWORD PTR es:[edi],dx
  4078da:	xchg   esp,eax
  4078db:	outs   dx,BYTE PTR ds:[esi]
  4078dc:	outs   dx,BYTE PTR ds:[esi]
  4078dd:	jae    0x407901
  4078df:	mov    esp,0x1df6e640
  4078e4:	iret   
  4078e5:	sub    al,0xe2
  4078e7:	cmc    
  4078e8:	popa   
  4078e9:	loope  0x4078d1
  4078eb:	call   0x9d33:0x4d627d9
  4078f2:	in     al,dx
  4078f3:	cmp    eax,0x245242b0
  4078f8:	test   al,0x34
  4078fa:	sahf   
  4078fb:	add    al,BYTE PTR [esi]
  4078fd:	(bad)  
  4078fe:	imul   BYTE PTR [esi+edi*4+0x2e]
  407902:	jmp    0x319d:0x91d8d23d
  407909:	fst    QWORD PTR [esi-0x31]
  40790c:	ins    BYTE PTR es:[edi],dx
  40790d:	repz test eax,0x9ba49b43
  407913:	mov    ss,WORD PTR [ebx+ebx*4]
  407916:	les    ecx,FWORD PTR [esi]
  407918:	dec    ecx
  407919:	mov    dh,0xd1
  40791b:	mov    edi,0x90d04fc0
  407920:	fmul   st,st(7)
  407922:	clc    
  407923:	repz dec edx
  407925:	add    edx,DWORD PTR [ebx+ebp*2]
  407928:	fnstcw WORD PTR [ecx+0x9]
  40792b:	jns    0x407987
  40792d:	cmp    BYTE PTR [ecx-0x16a87d5b],0x25
  407934:	xor    ebp,DWORD PTR [edi-0x1766c514]
  40793a:	mov    esp,DWORD PTR [ebx+0x21ee6502]
  407940:	push   ss
  407941:	pop    ebp
  407942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407943:	pop    ebp
  407944:	das    
  407945:	mov    ecx,0x47489454
  40794a:	enter  0xc8ff,0xdf
  40794e:	das    
  40794f:	jp     0x4078ea
  407951:	and    al,0x91
  407953:	cmp    al,0xe4
  407955:	adc    BYTE PTR [esi+0x7f],dl
  407958:	imul   edx,DWORD PTR [edi-0x12fec181],0x3d07ca63
  407962:	inc    esi
  407963:	sub    eax,0x6e30da72
  407968:	fild   WORD PTR [eax-0x1c]
  40796b:	or     eax,0xb43b44d9
  407970:	pop    ss
  407971:	or     edi,edi
  407973:	repnz in al,dx
  407975:	icebp  
  407976:	push   esi
  407977:	xor    eax,0x831dd91f
  40797c:	jb     0x40797f
  40797e:	sbb    cl,0xa7
  407981:	push   edx
  407982:	lock std 
  407984:	nop
  407985:	repz sub DWORD PTR [ebp+esi*4+0x31],0x25ca11f4
  40798e:	add    al,0x72
  407990:	dec    ebp
  407991:	inc    esi
  407992:	bound  edi,QWORD PTR [edi+0xb19e368]
  407998:	sahf   
  407999:	sub    eax,0x5f6b107b
  40799e:	jne    0x4079aa
  4079a0:	adc    DWORD PTR [edx+0x5a],edi
  4079a3:	in     al,dx
  4079a4:	in     eax,0xb7
  4079a6:	scas   eax,DWORD PTR es:[edi]
  4079a7:	cmp    BYTE PTR [eax],dh
  4079a9:	mov    eax,DWORD PTR [ecx+0x39]
  4079ac:	outs   dx,DWORD PTR ds:[esi]
  4079ad:	mov    ah,0xba
  4079af:	and    eax,0x4e5b1ba3
  4079b4:	inc    ebp
  4079b5:	daa    
  4079b6:	lea    edx,ds:0x289d831
  4079bc:	cwde   
  4079bd:	shl    BYTE PTR [ebp-0x26],0x61
  4079c1:	or     ebp,edx
  4079c3:	push   ecx
  4079c4:	ffree  st(2)
  4079c6:	push   0xffffffbe
  4079c8:	test   DWORD PTR [edi+edi*1+0x62],eax
  4079cc:	retf   
  4079cd:	ret    
  4079ce:	push   ss
  4079cf:	pop    edi
  4079d0:	adc    edi,edi
  4079d2:	mov    eax,0x74f4acd4
  4079d7:	jmp    0xcbb3a6aa
  4079dc:	ficomp DWORD PTR [ecx+edi*1+0x29]
  4079e0:	sub    al,0xc6
  4079e2:	xor    eax,0x7f62395b
  4079e7:	mov    ebp,0x14e4a48f
  4079ec:	popa   
  4079ed:	add    eax,eax
  4079ef:	mov    BYTE PTR fs:[esp+edx*1-0x5],bl
  4079f4:	popf   
  4079f5:	fidiv  DWORD PTR [ebp-0x7c]
  4079f8:	and    DWORD PTR [ebp-0x54],eax
  4079fb:	dec    edi
  4079fc:	cmp    edx,DWORD PTR [eax+0x7645312c]
  407a02:	adc    BYTE PTR [ebx+0x5a],bl
  407a05:	ja     0x4079aa
  407a07:	test   DWORD PTR [ecx+0x1d],ebx
  407a0a:	repz idiv ebp
  407a0d:	dec    edi
  407a0e:	jnp    0x407a44
  407a10:	cmp    eax,0xaa071d4e
  407a15:	in     al,0x59
  407a17:	imul   ebx,DWORD PTR [edi-0x48],0x8d807dd3
  407a1e:	cmp    BYTE PTR [esi+0x60],al
  407a21:	and    DWORD PTR [esi+0x24],0x1f
  407a25:	add    al,0xc2
  407a27:	and    edi,esp
  407a29:	stos   DWORD PTR es:[edi],eax
  407a2a:	arpl   WORD PTR [esi+0x7e],ax
  407a2d:	xchg   BYTE PTR [eax],al
  407a2f:	or     edi,DWORD PTR [edx-0x508d507d]
  407a35:	idiv   DWORD PTR [ebx+0x5d]
  407a38:	sub    ah,BYTE PTR [ecx+0x4f80d0c]
  407a3e:	cmp    BYTE PTR [ebx],0x2f
  407a41:	in     eax,0x2
  407a43:	aaa    
  407a44:	sbb    al,0x2f
  407a46:	dec    eax
  407a47:	sti    
  407a48:	es (bad) 
  407a4a:	out    dx,eax
  407a4b:	xchg   esp,eax
  407a4c:	fbstp  TBYTE PTR [ecx-0x6f]
  407a4f:	ds mov al,0x2f
  407a52:	mov    dl,0xcc
  407a54:	cmc    
  407a55:	ret    0x6c02
  407a58:	add    BYTE PTR [edi+0x7b],bl
  407a5b:	les    edi,FWORD PTR ds:0x2199d2d9
  407a61:	addr16 sub al,0x57
  407a64:	cmc    
  407a65:	call   DWORD PTR [ebx-0x309e35ab]
  407a6b:	xor    bl,0xf1
  407a6e:	pusha  
  407a6f:	jecxz  0x407a4f
  407a71:	test   eax,0xa61452cd
  407a76:	fmul   QWORD PTR [edx+ebx*4-0x40]
  407a7a:	fsubrp st(3),st
  407a7c:	out    0xa9,al
  407a7e:	jmp    0xd74f:0x87f97875
  407a85:	fistp  WORD PTR ds:0x5f9869e2
  407a8b:	mov    BYTE PTR [ecx+eiz*4+0x1c28414b],ch
  407a92:	xchg   esp,eax
  407a93:	sbb    eax,0x84f8c8b7
  407a98:	mov    al,0x55
  407a9a:	jb     0x407a9d
  407a9c:	add    esi,0x26d932d
  407aa2:	cmp    BYTE PTR ds:0x1babb0dc,dh
  407aa8:	cwde   
  407aa9:	repnz test BYTE PTR ds:[ecx-0x11],cl
  407aae:	scas   eax,DWORD PTR es:[edi]
  407aaf:	outs   dx,DWORD PTR ds:[esi]
  407ab0:	(bad)  
  407ab1:	gs sbb eax,0x98d896d8
  407ab7:	scas   eax,DWORD PTR es:[edi]
  407ab8:	sub    DWORD PTR [ecx-0x78],eax
  407abb:	add    eax,0x4cbe801
  407ac0:	ss mov al,bh
  407ac3:	dec    ebx
  407ac4:	cwde   
  407ac5:	add    DWORD PTR [ebp+0x2d],esp
  407ac8:	(bad)  
  407ac9:	and    BYTE PTR fs:[ebx],0xba
  407acd:	jno    0x407b08
  407acf:	jge    0x407a77
  407ad1:	mov    ebx,0xc0334d1
  407ad6:	jns    0x407a5a
  407ad8:	cmp    al,0x2e
  407ada:	clc    
  407adb:	and    BYTE PTR [edx],bh
  407add:	ins    DWORD PTR es:[edi],dx
  407ade:	icebp  
  407adf:	push   ebx
  407ae0:	sbb    esp,ecx
  407ae2:	sbb    dl,BYTE PTR [esp+ebx*2]
  407ae5:	test   BYTE PTR [eax],ch
  407ae7:	mov    ?,WORD PTR [edi]
  407ae9:	rcl    DWORD PTR [ecx+0x739b9fb6],0xe3
  407af0:	mov    esp,0xbfd8463f
  407af5:	dec    esi
  407af6:	lds    esp,FWORD PTR [esi+edi*1]
  407af9:	gs popf 
  407afb:	inc    eax
  407afc:	cmc    
  407afd:	and    edx,esp
  407aff:	cdq    
  407b00:	add    BYTE PTR [ebp+0x2b],0xd2
  407b04:	and    eax,0x7878fbf5
  407b09:	std    
  407b0a:	push   ax
  407b0c:	dec    edi
  407b0d:	fisttp DWORD PTR [esi]
  407b0f:	scas   eax,DWORD PTR es:[edi]
  407b10:	leave  
  407b11:	sar    ebp,1
  407b13:	and    esp,DWORD PTR [edx]
  407b15:	cld    
  407b16:	dec    esp
  407b17:	out    0xe3,eax
  407b19:	mov    bh,BYTE PTR [esi+edx*8]
  407b1c:	xor    DWORD PTR [eax+ecx*8+0x35a1163f],esi
  407b23:	int    0x27
  407b25:	mov    edx,0xbe77fe80
  407b2a:	sti    
  407b2b:	ins    DWORD PTR es:[edi],dx
  407b2c:	scas   al,BYTE PTR es:[edi]
  407b2d:	jne    0x407b0a
  407b2f:	or     esp,edx
  407b31:	js     0x407b9f
  407b33:	xor    eax,0x59d58f34
  407b38:	(bad)  
  407b39:	push   ecx
  407b3a:	test   DWORD PTR [edx],ebx
  407b3c:	dec    ebx
  407b3d:	push   edi
  407b3e:	push   0xc2594d9d
  407b43:	in     al,0x1e
  407b45:	or     DWORD PTR [esi+0x57],eax
  407b48:	ss loopne 0x407ad3
  407b4b:	inc    ebx
  407b4c:	mov    edx,eax
  407b4e:	jns    0x407b45
  407b50:	xor    ch,BYTE PTR [ebx]
  407b52:	add    eax,DWORD PTR [ecx]
  407b54:	cmp    esi,ebx
  407b56:	in     eax,dx
  407b57:	push   ecx
  407b58:	dec    esp
  407b59:	pop    di
  407b5b:	push   edx
  407b5c:	adc    DWORD PTR [edx+0x68],esp
  407b5f:	into   
  407b60:	ss lahf 
  407b62:	addr16 xchg esp,eax
  407b64:	inc    esp
  407b66:	(bad)  
  407b68:	ins    DWORD PTR es:[edi],dx
  407b69:	pop    ss
  407b6a:	nop
  407b6b:	push   ecx
  407b6c:	adc    al,0x6d
  407b6e:	adc    DWORD PTR [esi-0x73ca40f3],esi
  407b74:	arpl   WORD PTR [ebp+0x6a205946],sp
  407b7a:	pushf  
  407b7b:	pop    ds
  407b7c:	mov    cs,WORD PTR [edx]
  407b7e:	daa    
  407b7f:	and    al,0x83
  407b81:	popf   
  407b82:	retf   
  407b83:	outs   dx,BYTE PTR ds:[esi]
  407b84:	retf   0xe267
  407b87:	shr    BYTE PTR [esi+0x56],0x94
  407b8b:	adc    DWORD PTR ds:0x81babd3d,ebx
  407b91:	jmp    0x407b55
  407b93:	dec    eax
  407b94:	mov    eax,ds:0x1f1460e8
  407b99:	inc    ebp
  407b9a:	arpl   WORD PTR [ecx],cx
  407b9c:	xchg   ebx,eax
  407b9d:	pop    esi
  407b9e:	cwde   
  407b9f:	cmp    al,0xf1
  407ba1:	sbb    ah,BYTE PTR [ebx]
  407ba3:	or     eax,ebp
  407ba5:	aas    
  407ba6:	inc    ebp
  407ba7:	and    eax,0x99dddd1e
  407bac:	sti    
  407bad:	arpl   bp,bp
  407baf:	adc    BYTE PTR [eax+0x9],0xf4
  407bb3:	mov    esi,0x6e18f345
  407bb8:	xor    BYTE PTR [edx+0x63],ch
  407bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bbc:	ins    BYTE PTR es:[edi],dx
  407bbd:	outs   dx,DWORD PTR ds:[esi]
  407bbe:	jnp    0x407bf9
  407bc0:	xor    dh,BYTE PTR [edi]
  407bc2:	and    edx,DWORD PTR [edx-0x4b78fd68]
  407bc8:	sub    al,0x0
  407bca:	ds scas al,BYTE PTR es:[edi]
  407bcc:	jp     0x407bd0
  407bce:	ret    0x234c
  407bd1:	dec    edi
  407bd2:	push   ds
  407bd3:	jne    0x407b68
  407bd5:	sbb    bh,BYTE PTR [edi]
  407bd7:	cmp    eax,0x2e6ee50e
  407bdc:	and    esp,DWORD PTR [eax+0xb6a64a8]
  407be2:	loopne 0x407bed
  407be4:	out    dx,eax
  407be5:	pop    eax
  407be6:	and    bl,BYTE PTR [ebx]
  407be8:	mov    bh,BYTE PTR [esp+ebp*8-0x29]
  407bec:	xor    eax,0xdfa2c3e5
  407bf1:	jge    0x407bf5
  407bf3:	pop    ecx
  407bf4:	lods   al,BYTE PTR ds:[esi]
  407bf5:	cld    
  407bf6:	outs   dx,DWORD PTR ds:[esi]
  407bf7:	mov    ecx,DWORD PTR ds:0xad8e2737
  407bfd:	loopne 0x407c67
  407bff:	ret    
  407c00:	pusha  
  407c01:	mov    ecx,0x8bbe1eb3
  407c06:	cdq    
  407c07:	ss (bad) 
  407c09:	call   0x51d6c269
  407c0e:	dec    esi
  407c0f:	ds leave 
  407c11:	loopne 0x407ba5
  407c13:	cmp    BYTE PTR [ebx+0x6d24250d],0xcb
  407c1a:	push   ebp
  407c1b:	mov    al,0xdb
  407c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c1e:	outs   dx,DWORD PTR ds:[esi]
  407c1f:	jmp    0x407bb1
  407c21:	push   ss
  407c22:	hlt    
  407c23:	test   DWORD PTR [esi],eax
  407c25:	js     0x407c78
  407c27:	cmp    al,0x3b
  407c29:	sub    al,0x6a
  407c2b:	push   ds
  407c2c:	shl    DWORD PTR [esi],0x27
  407c2f:	jno    0x407bba
  407c31:	inc    esp
  407c32:	mov    edx,0x1664f87a
  407c37:	ds call 0x8775:0xf9d3235b
  407c3f:	ror    dh,cl
  407c41:	mov    ch,0x8b
  407c43:	push   0xffffff9e
  407c45:	enter  0x4c1,0x80
  407c49:	fst    DWORD PTR [edx]
  407c4b:	test   al,0xf0
  407c4d:	rcr    DWORD PTR [ebx+eiz*2],1
  407c50:	outs   dx,DWORD PTR ds:[esi]
  407c51:	fwait
  407c52:	and    BYTE PTR [edi],dh
  407c54:	popa   
  407c55:	clc    
  407c56:	ja     0x407be9
  407c58:	cwde   
  407c59:	sbb    BYTE PTR [edi+0x502d7a1],cl
  407c5f:	ds and eax,0x714fd2a3
  407c65:	mov    ah,0xe0
  407c67:	ret    
  407c68:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c6a:	div    cl
  407c6c:	adc    ebp,ebx
  407c6e:	out    dx,eax
  407c6f:	aas    
  407c70:	jmp    0x40a7be43
  407c75:	sub    edi,0x27
  407c78:	push   edx
  407c79:	imul   esi,DWORD PTR [edi+0x538cc33c],0x5e
  407c80:	ret    0x5216
  407c83:	mov    eax,0x95bb881f
  407c88:	pop    edi
  407c89:	aam    0x5f
  407c8b:	(bad)  
  407c8c:	stc    
  407c8d:	lahf   
  407c8e:	mov    dh,0xd0
  407c90:	mov    eax,0xe20427c8
  407c95:	or     eax,0xf2ad6b1
  407c9a:	(bad)  
  407c9b:	stos   BYTE PTR es:[edi],al
  407c9c:	xchg   ecx,eax
  407c9d:	add    eax,0xf49143fc
  407ca2:	setp   bh
  407ca5:	pop    ds
  407ca6:	pop    edi
  407ca7:	mov    ebp,0xdcd25732
  407cac:	sub    al,0x47
  407cae:	outs   dx,DWORD PTR ds:[esi]
  407caf:	cmp    al,0x19
  407cb1:	cmp    al,0x8c
  407cb3:	mov    eax,ebx
  407cb5:	sub    BYTE PTR [ebp+0x51],dh
  407cb8:	sub    al,0x33
  407cba:	sbb    DWORD PTR [ebp+0x5225e4cd],esi
  407cc0:	mov    esp,0x5e45995c
  407cc5:	pop    ebp
  407cc6:	jp     0x407c93
  407cc8:	idiv   DWORD PTR [esi]
  407cca:	out    0x74,al
  407ccc:	mov    ebx,0x4ee7d422
  407cd1:	repz mov WORD PTR [ebp-0xb4c0ccf],gs
  407cd8:	nop
  407cd9:	cmc    
  407cda:	inc    esp
  407cdb:	call   0x5b8a8623
  407ce0:	(bad)  
  407ce1:	pop    eax
  407ce2:	adc    dl,BYTE PTR [ebx]
  407ce4:	rol    BYTE PTR [esi+0x1b0c0583],cl
  407cea:	dec    edx
  407ceb:	fsub   DWORD PTR [edi]
  407ced:	int    0x54
  407cef:	stos   BYTE PTR es:[edi],al
  407cf0:	call   0xecd4:0xd368e0d6
  407cf7:	inc    eax
  407cf8:	out    0x2f,al
  407cfa:	pop    edi
  407cfb:	sub    eax,0xb8b8b35a
  407d00:	dec    ebp
  407d01:	or     DWORD PTR [ecx],edx
  407d03:	dec    eax
  407d04:	push   edi
  407d05:	adc    eax,0x560da1fa
  407d0a:	inc    edi
  407d0b:	test   DWORD PTR [ebx+0x4e],ebp
  407d0e:	fistp  WORD PTR [ebp-0x15515436]
  407d14:	xor    eax,0x27c090d6
  407d19:	sub    eax,0xb4cdf240
  407d1e:	test   BYTE PTR [ebp+0x7c],cl
  407d21:	shl    DWORD PTR [ebp-0x5bcc8117],cl
  407d27:	pop    ds
  407d28:	lds    ebx,FWORD PTR [eax]
  407d2a:	(bad)  
  407d2b:	(bad)  [eax-0x2e]
  407d2e:	scas   eax,DWORD PTR es:[edi]
  407d2f:	out    dx,eax
  407d30:	aas    
  407d31:	dec    esi
  407d32:	imul   ecx,DWORD PTR [edi],0x25
  407d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d36:	adc    BYTE PTR [edi+edx*8-0x28],0x3e
  407d3b:	iret   
  407d3c:	fcmovb st,st(0)
  407d3e:	pushf  
  407d3f:	sub    esp,eax
  407d41:	cmp    al,0x59
  407d43:	dec    ecx
  407d44:	(bad)  
  407d45:	jmp    0x407d1f
  407d47:	inc    edx
  407d48:	sbb    BYTE PTR [bx+si],dl
  407d4b:	fwait
  407d4c:	in     al,0xce
  407d4e:	mov    al,ds:0x2a700e40
  407d53:	adc    bl,ah
  407d55:	push   ss
  407d56:	mov    bl,0x8b
  407d58:	and    edx,ecx
  407d5a:	jp     0x407dae
  407d5c:	out    0xd6,eax
  407d5e:	mov    dl,0x9d
  407d60:	adc    bh,0xbf
  407d63:	dec    ebp
  407d64:	inc    esi
  407d65:	jno    0x407d45
  407d67:	xchg   esp,eax
  407d68:	out    dx,al
  407d69:	xchg   BYTE PTR [ebp-0x52],dl
  407d6c:	mov    dh,0xbb
  407d6e:	mov    dl,0x3c
  407d70:	push   ss
  407d71:	jno    0x407dcc
  407d73:	lods   al,BYTE PTR ds:[esi]
  407d74:	or     edx,DWORD PTR [ecx+0x18]
  407d77:	mov    dl,0xa3
  407d79:	lsl    edi,sp
  407d7c:	cmc    
  407d7d:	ficomp WORD PTR [ebp+0x6245770]
  407d83:	add    eax,DWORD PTR [ecx-0x78]
  407d86:	mov    esp,0x9b92e558
  407d8b:	inc    esi
  407d8c:	push   edx
  407d8d:	sub    al,0xcf
  407d8f:	jbe    0x407d68
  407d91:	push   esi
  407d92:	aad    0x40
  407d94:	scas   eax,DWORD PTR es:[edi]
  407d95:	call   0x3d51:0xe0b0433
  407d9c:	jbe    0x407d70
  407d9e:	jne    0x407d6a
  407da0:	je     0x407d30
  407da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da3:	(bad)  
  407da4:	or     BYTE PTR [ecx+0x13],dl
  407da7:	ret    
  407da8:	iret   
  407da9:	mov    WORD PTR [ebp+0x1d],gs
  407dac:	jle    0x407dc7
  407dae:	cmp    DWORD PTR [ebx],ebx
  407db0:	mov    ss,esp
  407db2:	xlat   BYTE PTR ds:[ebx]
  407db3:	hlt    
  407db4:	test   BYTE PTR ds:0xffbb8a02,dl
  407dba:	fisubr DWORD PTR [edx]
  407dbc:	outs   dx,BYTE PTR ds:[esi]
  407dbd:	cmp    esi,DWORD PTR [esi+0x4f]
  407dc0:	mov    ah,0x17
  407dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc3:	ror    BYTE PTR [eax+0x4c],cl
  407dc6:	push   eax
  407dc7:	imul   esp,DWORD PTR [eax*2-0x32cb0f85],0x5
  407dcf:	pop    ds
  407dd0:	jmp    0x810:0xc830fae5
  407dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd8:	xlat   BYTE PTR ds:[ebx]
  407dd9:	push   esp
  407dda:	pop    edi
  407ddb:	test   eax,0xc5b618d4
  407de0:	mov    esi,0xe4b6a0a0
  407de5:	(bad)  
  407de6:	stc    
  407de7:	stc    
  407de8:	fdiv   DWORD PTR [ecx-0x17]
  407deb:	aad    0x54
  407ded:	jnp    0x407dd9
  407def:	sbb    ebp,0xffffffd4
  407df2:	mov    dh,0xb9
  407df4:	ins    BYTE PTR es:[edi],dx
  407df5:	fwait
  407df6:	in     al,dx
  407df7:	sbb    ebx,DWORD PTR [esi-0x49c130be]
  407dfd:	int    0x4b
  407dff:	test   ecx,edx
  407e01:	(bad)  
  407e02:	mov    ds:0xe1b0be02,al
  407e07:	push   cs
  407e08:	loop   0x407e70
  407e0a:	ins    BYTE PTR es:[edi],dx
  407e0b:	cld    
  407e0c:	or     al,0x81
  407e0e:	mov    dl,0x34
  407e10:	out    dx,eax
  407e11:	and    edx,edi
  407e13:	adc    cx,WORD PTR [ecx-0x24d835c9]
  407e1a:	push   ds
  407e1b:	imul   esp,DWORD PTR [edx-0x2b],0x3fe45006
  407e22:	ins    DWORD PTR es:[edi],dx
  407e23:	inc    esp
  407e24:	mov    ah,0x7d
  407e26:	loop   0x407e53
  407e28:	xlat   BYTE PTR ds:[ebx]
  407e29:	dec    ebp
  407e2a:	loope  0x407e3d
  407e2c:	cmp    DWORD PTR [esi],0x6b
  407e2f:	pop    ecx
  407e30:	ja     0x407dfd
  407e32:	data16 jno 0x407e47
  407e35:	mov    bh,BYTE PTR [ebx-0x4e732eb1]
  407e3b:	jns    0x407e02
  407e3d:	fabs   
  407e3f:	scas   eax,DWORD PTR es:[edi]
  407e40:	and    edx,DWORD PTR ds:0xbb2b9f0d
  407e46:	dec    ebx
  407e47:	ja     0x407e4e
  407e49:	les    ecx,FWORD PTR [esi+0x43eeff06]
  407e4f:	fs scas eax,DWORD PTR es:[edi]
  407e51:	pop    es
  407e52:	add    eax,DWORD PTR [eax]
  407e54:	cld    
  407e55:	sbb    BYTE PTR [edx+eiz*8+0x4d054e12],ah
  407e5c:	(bad)  [ebx]
  407e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e5f:	sbb    eax,0x202f1924
  407e64:	stos   DWORD PTR es:[edi],eax
  407e65:	adc    ah,0x34
  407e68:	mov    esp,0x9c5a14a5
  407e6d:	pushf  
  407e6e:	pop    es
  407e6f:	adc    al,0x55
  407e71:	enter  0x668,0x57
  407e75:	xlat   BYTE PTR ds:[ebx]
  407e76:	dec    ecx
  407e77:	mov    al,0xfd
  407e79:	imul   ebx,DWORD PTR [eax],0x367060b4
  407e7f:	ret    
  407e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e81:	cvtdq2ps xmm6,xmm6
  407e84:	push   cs
  407e85:	jnp    0x407e86
  407e87:	sbb    DWORD PTR [ecx],ebx
  407e89:	mov    bh,0xb8
  407e8b:	bound  ebp,QWORD PTR [ebp+0x6bebba50]
  407e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e92:	mov    cl,0x6
  407e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e95:	inc    ebx
  407e96:	mov    ebx,0x70cd95a6
  407e9b:	inc    ebp
  407e9c:	pop    ebx
  407e9d:	nop
  407e9e:	out    dx,eax
  407e9f:	sub    al,0x79
  407ea1:	mov    esp,0xf8b126c0
  407ea6:	sbb    cl,BYTE PTR [ebx]
  407ea8:	mov    bh,0x48
  407eaa:	adc    BYTE PTR [esi],bl
  407eac:	mov    esp,0xc905395a
  407eb1:	sbb    BYTE PTR [ebx+0x65],bh
  407eb4:	out    0x72,eax
  407eb6:	aad    0x84
  407eb8:	add    BYTE PTR [esi],0x3e
  407ebb:	mov    edx,0x29030722
  407ec0:	pop    esp
  407ec1:	push   edi
  407ec2:	mov    al,ds:0x289c4190
  407ec7:	and    ch,BYTE PTR [eax-0x617c90f2]
  407ecd:	pop    ss
  407ece:	retf   
  407ecf:	pop    esp
  407ed0:	aam    0x42
  407ed2:	and    cl,BYTE PTR [esi]
  407ed4:	cmp    esi,DWORD PTR [esi-0x95eac97]
  407eda:	(bad)  
  407edb:	mov    ebp,0x9793fede
  407ee0:	out    dx,al
  407ee1:	ret    
  407ee2:	imul   edi
  407ee4:	aam    0x9e
  407ee6:	xchg   edi,eax
  407ee7:	fdiv   st(5),st
  407ee9:	dec    esi
  407eea:	mov    edi,0xdcefd5bd
  407eef:	shl    BYTE PTR [ebp-0xaacff3c],0x40
  407ef6:	jno    0x407f1a
  407ef8:	and    cl,BYTE PTR [edx-0x7b126d95]
  407efe:	xor    eax,0x94616134
  407f03:	repnz inc eax
  407f05:	mov    esp,0xb170b51a
  407f0a:	inc    ebx
  407f0b:	jmp    0x7003:0xc633a5e9
  407f12:	xchg   esi,eax
  407f13:	frstor [eax]
  407f15:	inc    edx
  407f16:	inc    edx
  407f17:	sbb    ebp,esi
  407f19:	fnsave [edx+0x56bb371a]
  407f1f:	dec    eax
  407f20:	dec    esp
  407f21:	adc    al,BYTE PTR ds:0xe274a5d5
  407f27:	into   
  407f28:	ins    BYTE PTR es:[edi],dx
  407f29:	jp     0x407eb3
  407f2b:	adc    al,0xdf
  407f2d:	push   0x1b
  407f2f:	lods   al,BYTE PTR ds:[esi]
  407f30:	pop    es
  407f31:	sub    al,BYTE PTR [ecx+ebx*2+0x44188627]
  407f38:	add    eax,0x32dd6dee
  407f3d:	add    esi,DWORD PTR [eax]
  407f3f:	cdq    
  407f40:	les    ecx,FWORD PTR [eax+0x2e10d9bf]
  407f46:	pop    ss
  407f47:	addr16 mov edx,0xb1279bd2
  407f4d:	dec    eax
  407f4e:	ja     0x407f7f
  407f50:	icebp  
  407f51:	cmp    al,0x62
  407f53:	cdq    
  407f54:	loop   0x407eee
  407f56:	loope  0x407fc4
  407f58:	and    edi,DWORD PTR [edx+0x60]
  407f5b:	xchg   ecx,eax
  407f5c:	aas    
  407f5d:	xchg   esi,eax
  407f5e:	pop    ebp
  407f5f:	dec    edi
  407f60:	jp     0x407f27
  407f62:	lods   eax,DWORD PTR ds:[esi]
  407f63:	mov    bh,0x34
  407f65:	stc    
  407f66:	shr    DWORD PTR [ecx-0x26f391bd],0xb8
  407f6d:	push   edx
  407f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6f:	cmc    
  407f70:	cs mov esp,0x1531c99d
  407f76:	fistp  DWORD PTR [ebx]
  407f78:	punpcklwd mm5,DWORD PTR [ebp+0x35]
  407f7c:	stc    
  407f7d:	cmp    al,0x5d
  407f7f:	mul    cl
  407f81:	jl     0x407f77
  407f83:	pop    es
  407f84:	inc    esp
  407f85:	sahf   
  407f86:	sar    BYTE PTR [eax+0x43b0a213],cl
  407f8c:	jae    0x407f66
  407f8e:	sub    al,0xf7
  407f90:	sub    BYTE PTR [esi-0x4198af10],bh
  407f96:	mov    esp,0x2ac04255
  407f9b:	shr    DWORD PTR [esi-0x3f],cl
  407f9e:	jmp    0x407f58
  407fa0:	cmc    
  407fa1:	mov    ds:0xa2e3193d,al
  407fa6:	mov    esi,0xe9d12b86
  407fab:	sub    ebp,ecx
  407fad:	add    edx,DWORD PTR [eax+0x7e107590]
  407fb3:	je     0x407fa0
  407fb5:	dec    esi
  407fb6:	push   0x13
  407fb8:	mov    ecx,0x9ec0f88a
  407fbd:	pop    edx
  407fbe:	stos   BYTE PTR es:[edi],al
  407fbf:	push   0xffffffb0
  407fc1:	mov    eax,ss:0x71f12bef
  407fc7:	pop    esp
  407fc8:	out    dx,al
  407fc9:	push   0xffffffe0
  407fcb:	dec    ecx
  407fcc:	or     eax,0x22040450
  407fd1:	sbb    dh,BYTE PTR [edi+0x3bae14b2]
  407fd7:	fidivr WORD PTR [edx+eax*1+0x7fc3d7c1]
  407fde:	ss push ecx
  407fe0:	(bad)  
  407fe1:	jmp    DWORD PTR [ebx]
  407fe3:	sar    edx,1
  407fe5:	cs push es
  407fe7:	(bad)  
  407fe8:	scas   eax,DWORD PTR es:[edi]
  407fe9:	or     dl,BYTE PTR es:[edi]
  407fec:	add    BYTE PTR [esi-0x214f68d7],al
  407ff2:	xor    al,0x62
  407ff4:	push   ds
  407ff5:	or     ah,BYTE PTR [edx+edi*8]
  407ff8:	mov    edi,0x28461e41
  407ffd:	iret   
  407ffe:	mov    edi,0xdfba2655
  408003:	mov    ds:0x7ace70db,al
  408008:	cdq    
  408009:	pop    edx
  40800a:	clc    
  40800b:	in     eax,dx
  40800c:	dec    ah
  40800e:	sbb    edi,DWORD PTR [ecx+0x2310222]
  408014:	jbe    0x407ff4
  408016:	dec    edx
  408017:	jb     0x408012
  408019:	pop    ecx
  40801a:	mov    ebp,0xecb9efde
  40801f:	pop    ebx
  408020:	mov    ch,0x68
  408022:	inc    ecx
  408023:	nop
  408024:	push   edx
  408025:	jo     0x407fd5
  408027:	mov    dl,0x29
  408029:	sti    
  40802a:	cwde   
  40802b:	loope  0x407fd5
  40802d:	mov    edi,0xa688d619
  408032:	push   ss
  408033:	enter  0xa5e0,0xc4
  408037:	mov    eax,0x67cd6fba
  40803c:	in     al,0x83
  40803e:	xor    al,0x30
  408040:	popf   
  408041:	sbb    eax,0x116146e5
  408046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408047:	arpl   WORD PTR cs:[ebp-0x64d5c5a7],bx
  40804e:	dec    esp
  40804f:	jb     0x40801f
  408051:	xor    cl,BYTE PTR [edi-0x5c]
  408054:	xlat   BYTE PTR ds:[ebx]
  408055:	mov    bl,0xe5
  408057:	jge    0x40803f
  408059:	xchg   esi,ebp
  40805b:	jbe    0x4080ba
  40805d:	xchg   edi,eax
  40805e:	fsub   st,st(1)
  408060:	out    0x1a,eax
  408062:	cmp    eax,0x1d4a2ce2
  408067:	or     ebp,esp
  408069:	ja     0x40800f
  40806b:	sbb    BYTE PTR [ebx*1+0x966bf8c],bh
  408072:	sti    
  408073:	or     BYTE PTR [esi-0x7daf5bc5],bh
  408079:	mov    esi,0xc949eeb1
  40807e:	(bad)  
  40807f:	sbb    dl,dl
  408081:	popa   
  408082:	daa    
  408083:	add    al,0xe7
  408085:	xchg   ah,bl
  408087:	push   ss
  408088:	and    BYTE PTR [eax-0x17ef16e3],dl
  40808e:	pop    eax
  40808f:	jl     0x408062
  408091:	in     al,0x66
  408093:	jbe    0x40803f
  408095:	mov    ds:0x92324750,eax
  40809a:	nop
  40809b:	mov    edi,0x854d3e31
  4080a0:	adc    BYTE PTR [esp+esi*8+0x12],cl
  4080a4:	daa    
  4080a5:	jecxz  0x40811a
  4080a7:	jge    0x408072
  4080a9:	jno    0x408033
  4080ab:	fs test al,0xec
  4080ae:	mov    ch,0xd
  4080b0:	or     BYTE PTR [bx+di+0x3],ah
  4080b4:	repz push edi
  4080b6:	(bad)  
  4080b7:	xchg   ecx,eax
  4080b8:	sub    DWORD PTR [ebp+0x681a2590],0x72
  4080bf:	xor    BYTE PTR [esi],0xc9
  4080c2:	shl    BYTE PTR [edx+0x33],1
  4080c5:	(bad)  
  4080c6:	mov    ebx,0xc466089a
  4080cb:	ret    
  4080cc:	sti    
  4080cd:	push   edx
  4080ce:	cld    
  4080cf:	mov    esi,0x267a858c
  4080d4:	in     eax,dx
  4080d5:	lods   eax,DWORD PTR ds:[esi]
  4080d6:	out    dx,eax
  4080d7:	mov    bh,dh
  4080d9:	adc    BYTE PTR [edx],0x4f
  4080dc:	mov    eax,ds:0x295f520e
  4080e1:	jp     0x4080f3
  4080e3:	repnz fnstcw WORD PTR [esi+0x1]
  4080e7:	xor    eax,0xe529aa6f
  4080ec:	inc    edi
  4080ed:	outs   dx,DWORD PTR ds:[esi]
  4080ee:	push   0x11
  4080f0:	inc    BYTE PTR [edi+0x16790817]
  4080f6:	jp     0x4080df
  4080f8:	pop    ss
  4080f9:	mov    ch,0x6
  4080fb:	inc    esi
  4080fc:	inc    edx
  4080fd:	cmp    ah,BYTE PTR [eax]
  4080ff:	fmul   DWORD PTR [ecx]
  408101:	adc    al,0x4e
  408103:	fistp  WORD PTR [ebx]
  408105:	scas   eax,DWORD PTR es:[edi]
  408106:	dec    edi
  408107:	ret    0x26be
  40810a:	dec    ebx
  40810b:	adc    BYTE PTR [ecx+edx*1-0x562f1b07],0xff
  408113:	sahf   
  408114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408115:	adc    dh,BYTE PTR [esi+0x6a5d9ca3]
  40811b:	xchg   esi,eax
  40811c:	inc    esp
  40811d:	icebp  
  40811e:	aaa    
  40811f:	push   es
  408120:	aad    0x1b
  408122:	xchg   esp,eax
  408123:	push   cs
  408124:	daa    
  408125:	mov    edx,0xe4abd831
  40812a:	jae    0x4080f9
  40812c:	lods   eax,DWORD PTR ds:[esi]
  40812d:	mov    edx,0x1c8a5434
  408132:	or     bh,BYTE PTR [edi-0x70bfe7ac]
  408138:	loop   0x408168
  40813a:	xchg   esi,eax
  40813b:	mov    ah,BYTE PTR [ebx-0x32]
  40813e:	cmp    BYTE PTR [ecx],cl
  408140:	jmp    0x9324:0x5435c429
  408147:	or     al,0xab
  408149:	loopne 0x4080fc
  40814b:	imul   eax,DWORD PTR [ebp-0x1bb20265],0x1a
  408152:	lahf   
  408153:	mov    DWORD PTR [edi+0x7c9c68c7],eax
  408159:	mov    cl,0xd2
  40815b:	adc    DWORD PTR [edx-0x2161b193],0x77
  408162:	dec    edx
  408163:	mul    BYTE PTR [ebp+0x50f0aa3a]
  408169:	pushf  
  40816a:	call   DWORD PTR [ebp+0x7c2cb684]
  408170:	mov    ds:0x450b8f87,eax
  408175:	pop    ebp
  408176:	mov    esi,0xe549b67c
  40817c:	les    ebx,FWORD PTR [ecx+0x4d43030f]
  408182:	inc    ebp
  408183:	and    eax,0xb9688ef6
  408188:	jecxz  0x4081ec
  40818a:	push   ebp
  40818b:	inc    esi
  40818c:	sar    esi,cl
  40818e:	jge    0x4081e2
  408190:	pop    esp
  408191:	imul   ebp,DWORD PTR [edx],0x27
  408194:	loope  0x408179
  408196:	fldcw  WORD PTR [edx-0x278f6996]
  40819c:	(bad)  [edx-0x16]
  40819f:	and    al,0x2e
  4081a1:	pop    ebx
  4081a2:	popf   
  4081a3:	lods   al,BYTE PTR ds:[esi]
  4081a4:	push   ds
  4081a5:	popf   
  4081a6:	shr    BYTE PTR [eax+0x3ab29513],0x9e
  4081ad:	sub    BYTE PTR [eax+edi*2-0x6729fe9a],bh
  4081b4:	mov    esp,0x73d5528b
  4081b9:	add    al,0xef
  4081bb:	mov    eax,ds:0xbf4a589c
  4081c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c1:	out    dx,eax
  4081c2:	sub    al,0x9a
  4081c4:	cdq    
  4081c5:	retf   0x86cf
  4081c8:	inc    esi
  4081c9:	inc    ecx
  4081ca:	mov    ebp,0xb45bbfe4
  4081cf:	adc    eax,edi
  4081d1:	and    eax,0xb0ad4cea
  4081d6:	jmp    0x3ce9:0xad830816
  4081dd:	jl     0x4081c8
  4081df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081e0:	out    dx,eax
  4081e1:	sub    BYTE PTR [eax],0x16
  4081e4:	fisttp QWORD PTR [edx]
  4081e6:	xchg   DWORD PTR [ecx+0x44edd327],eax
  4081ec:	mov    ch,0x5
  4081ee:	sub    edi,DWORD PTR [ebp-0x65]
  4081f1:	iret   
  4081f2:	push   esp
  4081f3:	adc    BYTE PTR [edx+0x1f],ch
  4081f6:	mov    ds:0x510e75bd,eax
  4081fb:	int    0x85
  4081fd:	or     al,0xad
  4081ff:	mov    ss,WORD PTR [edi+0x27d60fa5]
  408205:	icebp  
  408206:	pop    ds
  408207:	add    al,0xad
  408209:	sub    dl,BYTE PTR [ebp-0x450e2551]
  40820f:	sub    BYTE PTR [ecx-0x5f696c53],dl
  408215:	push   0x681b6aeb
  40821a:	mov    ebx,DWORD PTR [eax-0x37]
  40821d:	clc    
  40821e:	loop   0x40825b
  408220:	inc    esi
  408221:	xchg   ebp,ebx
  408223:	or     dl,cl
  408225:	xor    eax,0x7789106a
  40822a:	xchg   BYTE PTR [ecx+eiz*8],al
  40822d:	mov    edi,0x48f0d0fd
  408232:	push   cs
  408233:	(bad)  
  408235:	(bad)  
  408236:	cmc    
  408237:	ins    DWORD PTR es:[edi],dx
  408238:	setnp  BYTE PTR [ebp+0x51]
  40823c:	scas   eax,DWORD PTR es:[edi]
  40823d:	out    0x3b,eax
  40823f:	jle    0x40827c
  408241:	test   DWORD PTR [edx+edi*2-0x39],edi
  408245:	mov    dl,0x8b
  408247:	int3   
  408248:	inc    eax
  408249:	out    dx,al
  40824a:	jnp    0x4082ad
  40824c:	cmp    ebx,edx
  40824e:	stc    
  40824f:	jecxz  0x4081e8
  408251:	outs   dx,DWORD PTR ds:[esi]
  408252:	jae    0x4081f7
  408254:	std    
  408255:	mov    DWORD PTR [ecx+eax*4],edi
  408258:	adc    al,0xda
  40825a:	mul    DWORD PTR [ebx-0x6d504ba0]
  408260:	ds ror eax,0xc6
  408264:	inc    esp
  408265:	cmp    DWORD PTR [esp+ebp*8],edi
  408268:	loop   0x408249
  40826a:	cld    
  40826b:	sub    eax,0xaaa123c2
  408270:	cmp    cl,BYTE PTR [edi-0x7e9f84b5]
  408276:	push   ecx
  408277:	lea    eax,[ebx+0x62]
  40827a:	adc    eax,0x4143efa0
  40827f:	fwait
  408280:	dec    esi
  408281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408282:	(bad)  
  408283:	mov    edi,0x87fa71b4
  408288:	jmp    0x4082ea
  40828a:	cs imul eax,edi,0x5052246
  408291:	sub    ecx,DWORD PTR [ebx+0x589cc533]
  408297:	popf   
  408298:	or     eax,edi
  40829a:	jmp    0x705a4e7
  40829f:	lea    ebp,[edi+0x28f57a9e]
  4082a5:	mov    ds:0xae3bca3b,eax
  4082aa:	inc    esi
  4082ab:	enter  0x1907,0xfe
  4082af:	test   BYTE PTR [edi],0xb4
  4082b2:	push   es
  4082b3:	mov    ecx,DWORD PTR [edx+0x11ee07cb]
  4082b9:	jo     0x40823e
  4082bb:	ret    
  4082bc:	mov    dl,bh
  4082be:	ins    DWORD PTR es:[edi],dx
  4082bf:	imul   ecx,DWORD PTR [eax+0x5ef41e94],0xffffff9e
  4082c6:	lods   al,BYTE PTR ds:[esi]
  4082c7:	inc    ebx
  4082c8:	adc    eax,0x56b468f5
  4082cd:	lea    ebx,[ebx]
  4082cf:	shl    BYTE PTR [esi-0x2c868e2f],1
  4082d5:	xchg   ebx,eax
  4082d6:	xchg   ecx,eax
  4082d7:	(bad)  
  4082d9:	mov    al,ds:0xb99e47b5
  4082de:	mov    dl,0xf5
  4082e0:	push   esi
  4082e1:	cs dec esp
  4082e3:	jmp    0x9738a977
  4082e8:	xor    al,0x49
  4082ea:	mov    edx,esi
  4082ec:	int    0x4d
  4082ee:	mov    ecx,0xdc15d66e
  4082f3:	adc    BYTE PTR [eax+ecx*2-0x23],al
  4082f7:	lahf   
  4082f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082f9:	add    BYTE PTR [ebx+0x6e4ca7],0xbb
  408300:	mov    ds:0x2acc093c,eax
  408305:	ins    DWORD PTR es:[edi],dx
  408306:	mov    al,0x9c
  408308:	mov    BYTE PTR [eax],bl
  40830a:	xor    eax,0xa86a1769
  40830f:	cdq    
  408310:	dec    edx
  408311:	and    eax,0x6ccd031a
  408316:	push   eax
  408317:	sbb    eax,ebx
  408319:	cwde   
  40831a:	test   DWORD PTR [ebx+eax*2],eax
  40831d:	mov    WORD PTR [ebx-0x11],es
  408320:	rol    DWORD PTR [ecx+0x4a],1
  408323:	stc    
  408324:	(bad)  ds:0xb81d439a
  40832a:	fnstsw WORD PTR [ecx-0x2065738b]
  408330:	jge    0x40834e
  408332:	pop    edi
  408333:	jae    0x408358
  408335:	aam    0x25
  408337:	jle    0x40831f
  408339:	in     al,dx
  40833a:	or     al,0xc9
  40833c:	mov    ds:0x6977ae95,al
  408341:	(bad)  
  408342:	fiadd  WORD PTR [ebp+0x47485fa7]
  408348:	popa   
  408349:	out    0x94,al
  40834b:	mov    al,0x3d
  40834d:	inc    esi
  40834e:	imul   BYTE PTR [edi-0x1de19a52]
  408354:	and    eax,0x2ab49fe1
  408359:	dec    esi
  40835a:	xchg   ecx,eax
  40835b:	mov    esp,0x842d1a00
  408360:	inc    DWORD PTR [edi-0x4e16bc31]
  408366:	xchg   esp,eax
  408367:	cld    
  408368:	scas   eax,DWORD PTR es:[edi]
  408369:	push   ecx
  40836a:	and    cl,cl
  40836c:	sahf   
  40836d:	retf   0x95
  408370:	mov    esp,0x481ab01c
  408375:	cmp    BYTE PTR [ecx+ebx*2+0x6de42d9e],bh
  40837c:	sbb    esp,DWORD PTR [edi+eiz*4+0x7da367df]
  408383:	test   edi,0x5c9062eb
  408389:	(bad)  
  40838b:	pop    ebx
  40838c:	push   edx
  40838d:	mov    ch,0x4e
  40838f:	xchg   edi,eax
  408390:	scas   eax,DWORD PTR es:[edi]
  408391:	inc    esi
  408392:	mov    dl,0x40
  408394:	(bad)  
  408395:	scas   al,BYTE PTR es:[edi]
  408396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408397:	inc    edx
  408398:	neg    edi
  40839a:	or     al,0x1d
  40839c:	pop    eax
  40839d:	ss (bad) 
  4083a0:	stos   DWORD PTR es:[edi],eax
  4083a1:	pop    ecx
  4083a2:	and    ecx,ebp
  4083a4:	jge    0x40836d
  4083a6:	in     al,0x59
  4083a8:	mov    BYTE PTR [esp+edx*1+0x43],dl
  4083ac:	daa    
  4083ad:	mov    ebp,0x20b68dcf
  4083b2:	in     al,dx
  4083b3:	stc    
  4083b4:	mov    eax,0xa0251c45
  4083b9:	out    0xf8,al
  4083bb:	test   ebp,edi
  4083bd:	stos   DWORD PTR es:[edi],eax
  4083be:	push   ds
  4083bf:	es inc edx
  4083c1:	sbb    DWORD PTR [ecx],ebp
  4083c3:	adc    DWORD PTR [edx],edx
  4083c5:	shl    BYTE PTR [eax+0x47],1
  4083c8:	sbb    BYTE PTR [edi],0xe1
  4083cb:	adc    dh,BYTE PTR [ecx]
  4083cd:	cld    
  4083ce:	lock pusha 
  4083d0:	(bad)  
  4083d1:	jecxz  0x408368
  4083d3:	stos   DWORD PTR es:[edi],eax
  4083d4:	loop   0x40837a
  4083d6:	ror    cl,1
  4083d8:	add    al,0x9e
  4083da:	push   edi
  4083db:	adc    al,0xe7
  4083dd:	(bad)  
  4083de:	mov    bl,0xcb
  4083e0:	mov    ah,0x96
  4083e2:	add    ah,dh
  4083e4:	and    cl,BYTE PTR [ebx]
  4083e6:	mov    WORD PTR [esi+eiz*2],?
  4083e9:	es (bad) 
  4083ec:	std    
  4083ed:	scas   eax,DWORD PTR es:[edi]
  4083ee:	pop    eax
  4083ef:	or     eax,0x8f061cf1
  4083f4:	push   ebx
  4083f5:	pop    es
  4083f6:	inc    esp
  4083f7:	and    dl,BYTE PTR [edx-0x7c]
  4083fa:	cwde   
  4083fb:	pop    ebp
  4083fc:	sbb    edx,esp
  4083fe:	mov    eax,ds:0xda989840
  408403:	popf   
  408404:	add    BYTE PTR ds:0xee46344e,bl
  40840a:	sub    al,0x36
  40840c:	cmp    BYTE PTR [ecx-0x4be94222],0x3e
  408413:	(bad)  
  408414:	call   0x5802782a
  408419:	push   0x41
  40841b:	push   ecx
  40841c:	dec    ebp
  40841d:	loopne 0x40848b
  40841f:	push   ebp
  408420:	scas   al,BYTE PTR es:[edi]
  408421:	je     0x408459
  408423:	aas    
  408424:	jge    0x40843f
  408426:	mov    cl,0x90
  408428:	arpl   WORD PTR [eax-0x1b],si
  40842b:	mov    esi,ebp
  40842d:	xchg   edx,eax
  40842e:	stos   DWORD PTR es:[edi],eax
  40842f:	into   
  408430:	jmp    esi
  408432:	jno    0x4083f0
  408434:	push   edx
  408435:	push   ebp
  408436:	scas   eax,DWORD PTR es:[edi]
  408437:	mov    WORD PTR [ebx-0xf],cs
  40843a:	cmc    
  40843b:	pop    edx
  40843c:	jbe    0x4084bb
  40843e:	add    ah,BYTE PTR [ebx+ebx*4+0x4e0c7a86]
  408445:	mov    ebp,0x6105d392
  40844a:	or     eax,0x399cc371
  40844f:	xlat   BYTE PTR ds:[ebx]
  408450:	aad    0xc9
  408452:	rcl    ah,0x7b
  408455:	pop    eax
  408456:	shr    DWORD PTR [edi],0xdf
  408459:	enter  0xcbd5,0x88
  40845d:	or     al,0x74
  40845f:	add    BYTE PTR [eax-0x4b3061e4],ch
  408465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408466:	cs push edi
  408468:	das    
  408469:	imul   ecx,DWORD PTR [ebp-0x49],0x36
  40846d:	std    
  40846e:	mov    DWORD PTR [esi-0xd],ecx
  408471:	mov    esi,0x4c952392
  408476:	aam    0xe0
  408478:	mov    eax,0xa22d39e4
  40847d:	retf   
  40847e:	enter  0x1462,0x65
  408482:	(bad)  
  408483:	fldcw  WORD PTR [ebx]
  408485:	or     eax,DWORD PTR [edx-0x6f]
  408488:	or     BYTE PTR [ecx+0x4a],0xc2
  40848c:	mov    ebx,0x34cd5bcc
  408492:	cmp    bh,al
  408494:	leave  
  408495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408496:	xchg   ebp,eax
  408497:	loop   0x408455
  408499:	mov    ebx,0xfe4df0de
  40849e:	push   0xffffff95
  4084a0:	fnstsw WORD PTR [ebp+0x7391875e]
  4084a6:	cdq    
  4084a7:	fdivr  DWORD PTR [esi+0x4dc4f56]
  4084ad:	dec    edx
  4084ae:	loope  0x4084ae
  4084b0:	add    ebx,DWORD PTR [ecx+ebx*4+0x7d7b2180]
  4084b7:	and    eax,0x4fabeb70
  4084bc:	fsubr  st,st(0)
  4084be:	shl    DWORD PTR [edi],cl
  4084c0:	div    bl
  4084c2:	retf   
  4084c3:	pop    ds
  4084c4:	pop    ebx
  4084c5:	fdivr  QWORD PTR [ebp+0x5989c128]
  4084cb:	(bad)  
  4084cc:	loop   0x4084c0
  4084ce:	push   ecx
  4084cf:	les    ecx,FWORD PTR [edx-0x5]
  4084d2:	cmp    BYTE PTR [esi+0x55556115],cl
  4084d8:	and    DWORD PTR [edx-0x78],ebp
  4084db:	imul   ecx,ebx,0x9fa8e34f
  4084e1:	loop   0x40855c
  4084e3:	mov    ds:0x6b7c0f06,al
  4084e9:	sbb    edi,esi
  4084eb:	ins    BYTE PTR es:[edi],dx
  4084ec:	lea    esi,[ebp+0x547a3e89]
  4084f2:	sti    
  4084f3:	or     di,WORD PTR [eax+0x53a5464e]
  4084fa:	mov    ecx,0x1daaf61
  4084ff:	dec    edx
  408500:	mov    dh,0x47
  408502:	and    ch,ch
  408504:	ror    DWORD PTR [ebp+0x28],0xff
  408508:	enter  0xa09b,0xfe
  40850c:	call   0x8dc5:0x26070e9
  408513:	clc    
  408514:	jmp    0x95f143c6
  408519:	inc    esp
  40851a:	lahf   
  40851b:	adc    eax,DWORD PTR [ebp+0x5e]
  40851e:	mov    WORD PTR [ecx-0x15],?
  408521:	xchg   DWORD PTR [esi-0x503855fc],esp
  408527:	mov    ds:0xc2ffc0bc,al
  40852c:	inc    edi
  40852d:	retf   0xef0
  408530:	ror    BYTE PTR ds:0x7ad799be,1
  408536:	and    BYTE PTR [ecx+0x78],0x67
  40853a:	xor    ebp,ebp
  40853c:	(bad)  [eax]
  40853e:	fdivr  QWORD PTR [eax-0x7171fe14]
  408544:	cmp    DWORD PTR [eax+0xcaeec30],0xc5db2878
  40854e:	mov    bl,0x76
  408550:	icebp  
  408551:	(bad)  
  408552:	repnz add BYTE PTR [ecx+0x636a6086],dh
  408559:	fisub  WORD PTR [eax+0x649fb76]
  40855f:	add    BYTE PTR [ebx-0xc],0xb3
  408563:	jno    0x57267f9
  408569:	popf   
  40856a:	retf   
  40856b:	call   DWORD PTR [esi-0x7139fad3]
  408571:	inc    ecx
  408572:	jnp    0x408539
  408574:	inc    ebp
  408575:	xchg   ecx,eax
  408576:	fcmovnu st,st(1)
  408578:	ror    bl,1
  40857a:	mov    ecx,es
  40857c:	xor    edi,DWORD PTR [ecx+esi*2]
  40857f:	test   BYTE PTR [eax+0x521976fe],0xde
  408586:	test   al,0xbd
  408588:	push   0xd3afe411
  40858d:	(bad)  
  40858e:	mov    eax,0x196b61e8
  408593:	hlt    
  408594:	(bad)  
  408595:	imul   ebp,DWORD PTR [ecx+0x6d],0x44e79026
  40859c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40859d:	sub    al,0xc2
  40859f:	sbb    cl,BYTE PTR [ebp+0x663c29c8]
  4085a5:	clc    
  4085a6:	enter  0xdd7b,0x3d
  4085aa:	lock imul esi,DWORD PTR [edx+0x17],0x6813d21f
  4085b2:	jne    0x4085b2
  4085b4:	add    al,0xa2
  4085b6:	dec    edi
  4085b7:	or     BYTE PTR [ecx],dl
  4085b9:	dec    eax
  4085ba:	fstp   DWORD PTR [edx+0x6d]
  4085bd:	mov    ebx,0x281d7836
  4085c2:	std    
  4085c3:	mov    esp,0x593ae6b5
  4085c8:	jo     0x4085fc
  4085ca:	add    ebp,DWORD PTR ds:0x7891baa0
  4085d0:	mov    esi,0xf7cebcf3
  4085d5:	pop    eax
  4085d6:	jb     0x408586
  4085d8:	cmc    
  4085d9:	pop    edx
  4085da:	cwde   
  4085db:	pop    ebx
  4085dc:	je     0x4085f2
  4085de:	push   esp
  4085df:	pop    eax
  4085e0:	arpl   WORD PTR [ecx],cx
  4085e2:	(bad)
  4085e5:	jp     0x4085e2
  4085e7:	dec    esp
  4085e8:	add    eax,DWORD PTR [ecx]
  4085ea:	xchg   ebx,eax
  4085eb:	adc    bh,BYTE PTR ds:0x78867d3d
  4085f1:	push   ebx
  4085f2:	push   esi
  4085f3:	test   edi,ebx
  4085f5:	les    ecx,FWORD PTR [esi]
  4085f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f8:	cwde   
  4085f9:	cs xchg bl,bh
  4085fc:	fdivr  QWORD PTR [edx]
  4085fe:	inc    ebx
  4085ff:	sub    al,0x86
  408601:	adc    BYTE PTR ds:0x64afadf2,cl
  408607:	dec    ebp
  408608:	ret    0xd58c
  40860b:	xchg   esp,eax
  40860c:	(bad)  
  40860e:	inc    esp
  40860f:	pop    ds
  408610:	loop   0x4085a9
  408612:	mov    bh,0xa
  408614:	bound  esp,QWORD PTR [ecx+0x157ef4e9]
  40861a:	pop    ecx
  40861b:	stc    
  40861c:	mov    gs,WORD PTR [edi-0x6a26e3a5]
  408622:	or     bh,BYTE PTR [edi]
  408624:	xchg   DWORD PTR [ebx+0x26],ebp
  408627:	pop    edi
  408628:	add    BYTE PTR [ecx+eax*2-0x5688e988],ch
  40862f:	dec    ecx
  408630:	jmp    0xfbff:0x8ea600bb
  408637:	imul   edi,DWORD PTR [eax],0x5e
  40863a:	xchg   esp,eax
  40863b:	pushf  
  40863c:	mov    eax,ds:0xac8d4d2d
  408641:	fadd   DWORD PTR [edi-0x7540880e]
  408647:	test   DWORD PTR [eax+edi*4],ebx
  40864a:	jne    0x408610
  40864c:	clc    
  40864d:	ret    0xf331
  408650:	in     al,dx
  408651:	mov    ebp,0xa8261c4a
  408656:	retf   0xc2c9
  408659:	cwde   
  40865a:	fwait
  40865b:	jb     0x40865e
  40865d:	sbb    al,0x2f
  40865f:	xchg   DWORD PTR [eax+0x2a193289],edi
  408665:	lds    edx,FWORD PTR [edx+ecx*2+0x62]
  408669:	sti    
  40866a:	dec    ebx
  40866b:	aam    0x21
  40866d:	push   edi
  40866e:	(bad)  
  40866f:	jge    0x408661
  408671:	push   ecx
  408672:	in     eax,0xee
  408674:	mov    ds:0xa9a2a823,al
  408679:	cli    
  40867a:	sub    dl,0x73
  40867d:	sti    
  40867e:	sti    
  40867f:	mov    BYTE PTR [ebp+0x31d41174],ah
  408685:	mov    eax,ds:0x71c9dc8e
  40868a:	xor    DWORD PTR [esi+0x171bed33],ebp
  408690:	jbe    0x408617
  408692:	(bad)
  408695:	sub    eax,0x51667314
  40869a:	cmp    DWORD PTR [ecx+0x28],ebp
  40869d:	out    0x71,al
  40869f:	stos   BYTE PTR es:[edi],al
  4086a0:	xlat   BYTE PTR ds:[ebx]
  4086a1:	mov    dl,0xb4
  4086a3:	push   edx
  4086a4:	cmp    eax,0xda34a7fb
  4086a9:	aad    0xa9
  4086ab:	push   cs
  4086ac:	pop    eax
  4086ad:	push   ecx
  4086ae:	and    cl,BYTE PTR [eax-0x59021aab]
  4086b4:	nop
  4086b5:	xor    DWORD PTR [ebp+0x795479e8],ebx
  4086bb:	pop    edx
  4086bc:	and    eax,0xeb4e5676
  4086c1:	bound  ecx,QWORD PTR [edx]
  4086c3:	js     0x4086e9
  4086c5:	sbb    al,0xf6
  4086c7:	and    eax,0x2f2ad5b4
  4086cc:	push   0xffffff88
  4086ce:	pop    esp
  4086cf:	cmp    BYTE PTR [ebp-0xc],ch
  4086d2:	xchg   esi,eax
  4086d3:	lahf   
  4086d4:	xchg   ebp,eax
  4086d5:	aaa    
  4086d6:	popa   
  4086d7:	dec    ebx
  4086d8:	sub    edx,ebx
  4086da:	mov    ds:0xe93133ba,al
  4086df:	push   cs
  4086e0:	ror    DWORD PTR [eax-0x53],1
  4086e3:	add    cl,BYTE PTR [esi-0xcdcb175]
  4086e9:	push   ecx
  4086ea:	add    al,0x6c
  4086ec:	fmul   DWORD PTR [esi-0x3f]
  4086ef:	mov    ds:0xb5e0da6c,al
  4086f4:	sub    eax,0x6610117c
  4086f9:	sbb    BYTE PTR [esi],0x86
  4086fc:	push   ebx
  4086fd:	js     0x4086fb
  4086ff:	in     eax,dx
  408700:	lods   al,BYTE PTR ds:[esi]
  408701:	test   BYTE PTR [esi],al
  408703:	jne    0x408728
  408705:	dec    esp
  408706:	jno    0x408772
  408708:	sar    DWORD PTR [esi+0x7c],0x2b
  40870c:	jmp    0x4086ce
  40870e:	in     eax,dx
  40870f:	dec    ebx
  408710:	ins    BYTE PTR es:[edi],dx
  408711:	and    BYTE PTR [ebx],dh
  408713:	sub    eax,0xd23dc320
  408718:	fldenv fs:[esi]
  40871b:	mov    edx,0xe03df6d7
  408720:	push   esp
  408721:	add    al,0x8
  408723:	out    0x1d,eax
  408725:	sbb    ch,BYTE PTR [ebp+0x44]
  408728:	dec    ecx
  408729:	pop    eax
  40872a:	(bad)  
  40872b:	adc    BYTE PTR [ecx],cl
  40872d:	cmp    BYTE PTR [esi],dl
  40872f:	xchg   ecx,eax
  408730:	or     DWORD PTR [edx+0x630732ea],edx
  408736:	push   eax
  408737:	fcomp  st(7)
  408739:	add    al,0xe0
  40873b:	lds    esi,FWORD PTR [ebp+0x34160448]
  408741:	push   ds
  408742:	inc    eax
  408743:	sub    esp,edx
  408745:	imul   eax,DWORD PTR [esi+0x6f],0x97623230
  40874c:	out    dx,al
  40874d:	popa   
  40874e:	in     al,dx
  40874f:	imul   ecx,DWORD PTR [ebx],0xffffff99
  408752:	in     eax,0x52
  408754:	add    eax,0xf6ba3596
  408759:	popf   
  40875a:	jg     0x4087ba
  40875c:	jmp    0x408762
  40875e:	(bad)  
  40875f:	push   esi
  408760:	xchg   ebp,eax
  408761:	(bad)  
  408762:	jnp    0x4087a4
  408764:	rcr    BYTE PTR [edx],1
  408766:	push   ebp
  408767:	dec    edi
  408768:	inc    eax
  408769:	aas    
  40876a:	call   DWORD PTR [ebp+0x2de48ac]
  408770:	ror    DWORD PTR [ebp-0x43ae6543],cl
  408776:	mov    dl,0xf3
  408778:	or     BYTE PTR [edi+0x24],bh
  40877b:	mov    WORD PTR [ecx],gs
  40877d:	adc    DWORD PTR [ecx+0x2e],edx
  408780:	fistp  WORD PTR [ecx]
  408782:	pop    ebx
  408783:	inc    edi
  408784:	fs adc dh,dl
  408787:	es sub al,0xa1
  40878a:	addr16 dec ebx
  40878c:	add    dl,bh
  40878e:	and    BYTE PTR [ecx-0x64],ah
  408791:	(bad)  
  408792:	out    0xd3,al
  408794:	cmp    eax,0x297b4049
  408799:	nop
  40879a:	dec    ebp
  40879b:	scas   eax,DWORD PTR es:[edi]
  40879c:	pop    ebp
  40879d:	and    BYTE PTR [ebp+eax*8+0x66],bl
  4087a1:	test   eax,0x4e385f3
  4087a6:	rcl    DWORD PTR [esi],cl
  4087a8:	and    ecx,DWORD PTR [esi+0x59aa1b4d]
  4087ae:	sbb    DWORD PTR [edx-0x1f1627dd],0xffffff87
  4087b5:	push   edx
  4087b6:	call   0xf2c2870b
  4087bb:	imul   eax,DWORD PTR [eax],0x987d594c
  4087c1:	ret    
  4087c2:	in     eax,0x88
  4087c4:	clc    
  4087c5:	xchg   ebx,eax
  4087c6:	push   esi
  4087c7:	enter  0x591d,0xd4
  4087cb:	fdiv   QWORD PTR [eax]
  4087cd:	les    ebx,FWORD PTR [ecx]
  4087cf:	dec    ebx
  4087d0:	cdq    
  4087d1:	test   al,0x4e
  4087d3:	adc    DWORD PTR [eax+0x44aaff7e],esp
  4087d9:	push   esi
  4087da:	je     0x408791
  4087dc:	and    BYTE PTR [ecx+0x21],dh
  4087df:	cmp    esi,DWORD PTR [edx+0x74]
  4087e2:	lds    ebx,FWORD PTR [eax]
  4087e4:	xlat   BYTE PTR ds:[ebx]
  4087e5:	out    0x9c,al
  4087e7:	push   ebp
  4087e8:	imul   DWORD PTR [edi+0x491c7645]
  4087ee:	push   esp
  4087ef:	ret    
  4087f0:	or     ah,BYTE PTR [eax]
  4087f2:	in     al,0xa7
  4087f4:	sti    
  4087f5:	retf   0x186b
  4087f8:	push   ds
  4087f9:	or     BYTE PTR [eax],dh
  4087fb:	or     DWORD PTR [edx-0x52],0x2c
  4087ff:	and    dl,BYTE PTR [ebx]
  408801:	dec    BYTE PTR [ecx+0x3ae2d24]
  408807:	pop    edx
  408808:	mov    eax,0x2591947
  40880d:	loope  0x408803
  40880f:	ret    0x4f66
  408812:	lods   al,BYTE PTR ds:[esi]
  408813:	aas    
  408814:	pop    esp
  408815:	out    dx,eax
  408816:	in     eax,dx
  408817:	adc    eax,0x667b72b4
  40881c:	fmul   QWORD PTR [esi-0x1e25a0d7]
  408822:	sbb    al,0xe1
  408824:	test   esi,ebp
  408826:	scas   eax,DWORD PTR es:[edi]
  408827:	call   0xdad3:0xa31688b4
  40882e:	mov    eax,ds:0xb89c7f62
  408833:	cmp    ebp,ebx
  408835:	(bad)
  40883a:	adc    BYTE PTR [esi-0x39f4b771],bl
  408840:	dec    ecx
  408841:	mov    WORD PTR [ecx],fs
  408843:	mov    ecx,0xd3852347
  408848:	inc    ebp
  408849:	pusha  
  40884a:	jno    0x408858
  40884c:	loope  0x4087ff
  40884e:	mov    ebx,0x24651b2f
  408853:	pusha  
  408854:	push   cs
  408855:	sub    eax,0xd8b27bb9
  40885a:	mov    ebx,0x512c1d95
  40885f:	jmp    0x4088a7
  408861:	sub    eax,0x57849917
  408866:	cmp    al,0xa7
  408868:	aad    0xe
  40886a:	fisttp WORD PTR [esi+0x23]
  40886d:	int    0xea
  40886f:	in     eax,0xfb
  408871:	pop    es
  408872:	repz das 
  408874:	mov    bl,0x18
  408876:	pop    esi
  408877:	iret   
  408878:	test   BYTE PTR [esi+0x33ab54f3],ch
  40887e:	jb     0x40885e
  408880:	lea    edx,[edx]
  408882:	sub    eax,0xe1e66bf0
  408887:	inc    esi
  408888:	or     BYTE PTR [ebx-0x752ae505],ah
  40888e:	pushf  
  40888f:	test   BYTE PTR [ebp+0x15aeb01f],cl
  408895:	cld    
  408896:	jae    0x408859
  408898:	xlat   BYTE PTR ds:[ebx]
  408899:	ja     0x4088ea
  40889b:	std    
  40889c:	jmp    0x408872
  40889e:	aas    
  40889f:	ss out dx,al
  4088a1:	pop    ss
  4088a2:	xchg   ecx,eax
  4088a3:	sar    DWORD PTR [ecx-0xfda553c],cl
  4088a9:	das    
  4088aa:	push   esi
  4088ab:	push   esi
  4088ac:	pop    eax
  4088ad:	xor    ebx,edi
  4088af:	xchg   ebx,eax
  4088b0:	(bad)  
  4088b2:	mov    ch,0x7c
  4088b4:	jae    0x4088da
  4088b6:	repnz mov ?,WORD PTR [edi+0x10]
  4088ba:	lods   eax,DWORD PTR ds:[esi]
  4088bb:	not    DWORD PTR [ebx-0x76953bbc]
  4088c1:	(bad)  
  4088c2:	push   ss
  4088c3:	jmp    0x48c61d35
  4088c8:	inc    edi
  4088c9:	sbb    BYTE PTR [edx+0x62a6a1f],bl
  4088cf:	ret    
  4088d0:	out    dx,eax
  4088d1:	jl     0x40886b
  4088d3:	dec    edi
  4088d4:	pop    ecx
  4088d5:	fdivr  QWORD PTR [ebx-0x11]
  4088d8:	outs   dx,DWORD PTR ds:[esi]
  4088d9:	es push cs
  4088db:	ss repz xor edx,0xaecd40eb
  4088e3:	push   edi
  4088e4:	repnz in al,0x2e
  4088e7:	sbb    DWORD PTR [ebx-0xef9d770],ebx
  4088ed:	xchg   ebx,eax
  4088ee:	pop    esp
  4088ef:	out    dx,eax
  4088f0:	bound  ecx,QWORD PTR [ebx+0x6eec4f20]
  4088f6:	idiv   BYTE PTR gs:[ecx]
  4088f9:	(bad)  
  4088fa:	mov    cl,0xb6
  4088fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088fd:	retf   
  4088fe:	shl    DWORD PTR [eax+0x270d133c],0x9e
  408905:	xor    ebx,DWORD PTR [ebx]
  408907:	shr    DWORD PTR [ecx],0xb
  40890a:	adc    esp,DWORD PTR [eax+0x43e9f40b]
  408910:	(bad)  
  408911:	jmp    0xa0794477
  408916:	and    esp,DWORD PTR [ecx+0x58e78a8f]
  40891c:	cmp    al,dl
  40891e:	dec    ebx
  40891f:	pop    ebx
  408920:	sub    BYTE PTR [ebx-0x3e2eb362],bh
  408926:	out    0x14,al
  408928:	dec    edx
  408929:	jno    0x408964
  40892b:	fcomp  st(3)
  40892d:	shl    bl,cl
  40892f:	test   eax,0x414918d
  408934:	and    bl,BYTE PTR [ecx-0x67711af4]
  40893a:	and    edi,DWORD PTR [ebx+edx*1]
  40893d:	pop    ebx
  40893e:	leave  
  40893f:	sub    dh,ah
  408941:	push   esi
  408942:	sub    BYTE PTR [ebx+0x77],bh
  408945:	cwde   
  408946:	sub    al,BYTE PTR [ebp-0x13]
  408949:	pushf  
  40894a:	test   bl,ch
  40894c:	lds    edi,FWORD PTR [edx]
  40894e:	push   esp
  40894f:	nop
  408950:	fbstp  TBYTE PTR [ebx+0x7e39161f]
  408956:	jge    0x4089a6
  408958:	popa   
  408959:	xchg   ebx,eax
  40895a:	xor    esp,DWORD PTR [edx+0x4d]
  40895d:	add    al,0x30
  40895f:	out    0xdd,eax
  408961:	int3   
  408962:	cmp    ch,BYTE PTR [ecx-0x761bdce2]
  408968:	sub    esp,DWORD PTR [ebp+0x7f]
  40896b:	scas   al,BYTE PTR es:[edi]
  40896c:	add    esi,DWORD PTR [edx+0xd]
  40896f:	jns    0x4089be
  408971:	or     edx,DWORD PTR [edx-0x66]
  408974:	and    BYTE PTR [edx],0xa3
  408977:	xor    DWORD PTR [ebp+0xc],0x25ad4bc9
  40897e:	mov    edi,0xd20c79e
  408983:	shl    BYTE PTR ds:0x41435fca,cl
  408989:	cmp    DWORD PTR [esi],eax
  40898b:	ins    DWORD PTR es:[edi],dx
  40898c:	imul   ebx,DWORD PTR [edx-0x30785f8f],0xffffffb7
  408993:	mov    ebp,0x82fad307
  408998:	repnz lahf 
  40899a:	loope  0x408964
  40899c:	(bad)  
  40899d:	jb     0x40893e
  40899f:	scas   al,BYTE PTR es:[edi]
  4089a0:	lods   eax,DWORD PTR ds:[esi]
  4089a1:	in     eax,0xd8
  4089a3:	mov    eax,ds:0xc61e7c7a
  4089a8:	pop    edi
  4089a9:	call   0x1dd3:0x2c2e330f
  4089b0:	mov    ds:0xefb67142,al
  4089b5:	out    dx,eax
  4089b6:	mov    esi,0xe32fd877
  4089bb:	ds dec eax
  4089bd:	inc    edi
  4089be:	inc    esp
  4089bf:	out    dx,eax
  4089c0:	out    0x5,al
  4089c2:	adc    ecx,ebp
  4089c4:	jne    0x4089db
  4089c6:	icebp  
  4089c7:	cmovns eax,DWORD PTR [edi+0x2bb9aed7]
  4089ce:	cmp    ebp,DWORD PTR [esi-0x3a092c66]
  4089d4:	mov    dl,0xfa
  4089d6:	in     al,dx
  4089d7:	xchg   ebx,eax
  4089d8:	shr    BYTE PTR [edx],0xc6
  4089db:	bound  ecx,QWORD PTR [ecx+0x35]
  4089de:	xchg   ebp,eax
  4089df:	in     al,dx
  4089e0:	(bad)  
  4089e1:	xchg   ebp,eax
  4089e2:	enter  0x5c61,0x6e
  4089e6:	test   edi,ebp
  4089e8:	mov    DWORD PTR [esi],edx
  4089ea:	jnp    0x408a4c
  4089ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ed:	loope  0x408981
  4089ef:	xchg   edx,eax
  4089f0:	or     eax,0x42e51a93
  4089f5:	xor    eax,0xccf87bcb
  4089fa:	push   ebp
  4089fb:	sub    DWORD PTR [edi],edi
  4089fd:	pop    es
  4089fe:	adc    al,0x7a
  408a00:	outs   dx,DWORD PTR ds:[esi]
  408a01:	arpl   sp,bx
  408a03:	jns    0x408a65
  408a05:	jle    0x408a52
  408a07:	or     BYTE PTR [eax+eiz*8],cl
  408a0a:	jne    0x408a58
  408a0c:	jecxz  0x4089c9
  408a0e:	shl    BYTE PTR [edi-0x7a444cf5],0xa6
  408a15:	gs mov al,0x9f
  408a18:	into   
  408a19:	fistp  DWORD PTR [edx+eax*8]
  408a1c:	out    0xe5,eax
  408a1e:	jbe    0x4089fb
  408a20:	gs dec eax
  408a22:	popf   
  408a23:	fdiv   DWORD PTR [esi]
  408a25:	mov    al,0xaa
  408a27:	in     al,dx
  408a28:	js     0x408a43
  408a2a:	inc    ebp
  408a2b:	and    edx,DWORD PTR [ecx]
  408a2d:	xchg   edi,eax
  408a2e:	dec    esp
  408a2f:	push   esp
  408a30:	pop    es
  408a31:	in     eax,0x60
  408a33:	xor    BYTE PTR [ebx],0x56
  408a36:	sbb    al,0xfe
  408a38:	(bad)  
  408a39:	je     0x408a4c
  408a3b:	sbb    DWORD PTR [esi+0x5a07e85],ebp
  408a41:	test   BYTE PTR ds:0x4c00f4a2,dh
  408a47:	jbe    0x408a58
  408a49:	mov    dl,0x87
  408a4b:	retf   0x62c9
  408a4e:	and    BYTE PTR [ebx+0x6ae1c929],ch
  408a54:	call   0x3e5c:0xde4ca779
  408a5b:	out    0xbc,al
  408a5d:	push   ds
  408a5e:	dec    esi
  408a5f:	cmp    al,0x32
  408a61:	gs jl  0x408aa7
  408a64:	outs   dx,BYTE PTR ds:[esi]
  408a65:	jecxz  0x4089ea
  408a67:	and    DWORD PTR [eax+0x47938f5b],0xffffffc4
  408a6e:	dec    ebx
  408a6f:	test   BYTE PTR [edx-0x2f],0x9f
  408a73:	les    esi,FWORD PTR ds:0xbd9afa9
  408a79:	push   ebp
  408a7a:	mov    bl,0x78
  408a7c:	mov    cl,0xd5
  408a7e:	sbb    al,0x54
  408a80:	sbb    al,0x64
  408a82:	jecxz  0x408ad2
  408a84:	add    BYTE PTR ds:0x9e45eabd,bh
  408a8a:	adc    ebp,DWORD PTR [edx+0x36]
  408a8d:	dec    esp
  408a8e:	inc    eax
  408a8f:	fsubr  QWORD PTR [ecx-0x4971f09e]
  408a95:	test   eax,0x9cbce318
  408a9a:	cmp    al,0x59
  408a9c:	dec    eax
  408a9d:	in     al,0x78
  408a9f:	shl    BYTE PTR [ebx+ebp*8-0x3b40d6eb],cl
  408aa6:	ror    DWORD PTR [eax-0x1f25920c],0x49
  408aad:	pop    esp
  408aae:	fild   DWORD PTR [edi]
  408ab0:	nop
  408ab1:	rol    BYTE PTR [eax+0x29c930d8],1
  408ab7:	sub    al,0xa1
  408ab9:	sub    ch,ch
  408abb:	xor    al,BYTE PTR [edx]
  408abd:	dec    esp
  408abe:	into   
  408abf:	clc    
  408ac0:	ins    BYTE PTR es:[edi],dx
  408ac1:	dec    esi
  408ac2:	mov    ecx,0x6739bd12
  408ac7:	jmp    DWORD PTR [ebp-0x4]
  408aca:	fcom   DWORD PTR [esi+0x9]
  408acd:	mov    ds,WORD PTR [ebx-0x17c8f38e]
  408ad3:	jns    0x408b26
  408ad5:	push   cs
  408ad6:	iret   
  408ad7:	out    dx,al
  408ad8:	pop    edi
  408ad9:	jne    0x408b09
  408adb:	(bad)  [eax]
  408add:	in     al,dx
  408ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408adf:	xchg   ecx,eax
  408ae0:	push   edx
  408ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ae2:	mov    dh,0x25
  408ae4:	sub    DWORD PTR [edi-0x56],esi
  408ae7:	inc    esp
  408ae8:	mov    al,BYTE PTR [esi+0x66]
  408aeb:	dec    eax
  408aec:	cld    
  408aed:	daa    
  408aee:	jg     0x408afc
  408af0:	or     al,0xa4
  408af2:	and    eax,0xc6801a61
  408af7:	mov    WORD PTR [ebp+0x74f8f231],?
  408afd:	push   ebx
  408afe:	jp     0x408b0b
  408b00:	push   ds
  408b01:	xchg   esi,eax
  408b02:	adc    dl,cl
  408b04:	sbb    dh,dh
  408b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b07:	jle    0x408ad3
  408b09:	or     al,0x89
  408b0b:	lods   eax,DWORD PTR ds:[esi]
  408b0c:	test   al,0x43
  408b0e:	into   
  408b0f:	xor    ebp,DWORD PTR ds:0x12386186
  408b15:	add    eax,0xed76f89d
  408b1a:	js     0x408b47
  408b1c:	push   edx
  408b1d:	mov    esi,0x296ca09e
  408b22:	sar    cl,cl
  408b24:	loopne 0x408ae6
  408b26:	std    
  408b27:	pop    ecx
  408b28:	mov    BYTE PTR [ecx],ch
  408b2a:	out    0x7e,eax
  408b2c:	mov    ah,0x5f
  408b2e:	cmp    cl,ch
  408b30:	pop    edi
  408b31:	push   ebp
  408b32:	pop    eax
  408b33:	pop    edx
  408b34:	and    ecx,DWORD PTR [esi]
  408b36:	jmp    DWORD PTR [edx+0x11]
  408b39:	xchg   ecx,eax
  408b3a:	or     eax,0x15e2116b
  408b3f:	dec    esi
  408b40:	lock mov eax,ds:0x4202b746
  408b46:	adc    al,0x15
  408b48:	dec    esp
  408b49:	aam    0x7
  408b4b:	js     0x408b3b
  408b4d:	adc    ah,BYTE PTR [ebp+0x275e25e4]
  408b53:	loope  0x408bba
  408b55:	sbb    ch,BYTE PTR [ecx+0x3daf43d1]
  408b5b:	repz clc 
  408b5d:	stc    
  408b5e:	push   cs
  408b5f:	imul   ebp,DWORD PTR [ebx],0xb0d9f153
  408b65:	call   0x18700b2a
  408b6a:	repz pop ecx
  408b6c:	sub    BYTE PTR [ecx],ch
  408b6e:	(bad)  
  408b6f:	shl    bh,cl
  408b71:	ficom  DWORD PTR [esi]
  408b73:	sbb    al,0xbf
  408b75:	mov    bh,0xb5
  408b77:	mov    ds:0xf238bc8e,al
  408b7c:	push   eax
  408b7d:	daa    
  408b7e:	ret    
  408b7f:	sub    edi,esi
  408b81:	xchg   edx,eax
  408b82:	xchg   esp,eax
  408b83:	lea    ecx,[esi-0x37a2916a]
  408b89:	sbb    al,0x68
  408b8b:	sti    
  408b8c:	adc    eax,0x4adb3d16
  408b91:	lock xor eax,0xf1e808c
  408b97:	lods   eax,DWORD PTR ds:[esi]
  408b98:	les    ebp,FWORD PTR [esi+0x61bd0c27]
  408b9e:	loop   0x408bc4
  408ba0:	ret    0xe6c8
  408ba3:	cwde   
  408ba4:	(bad)  [ebx+eiz*1]
  408ba7:	dec    ecx
  408ba8:	inc    edx
  408ba9:	into   
  408baa:	clc    
  408bab:	or     BYTE PTR [edx-0xc],dh
  408bae:	mov    ebp,0x4e0e1997
  408bb3:	lds    ebp,FWORD PTR [esi]
  408bb5:	push   ds
  408bb6:	push   ss
  408bb7:	imul   ebp,DWORD PTR [esi+edi*8],0xffffffed
  408bbb:	nop
  408bbc:	ret    0xb612
  408bbf:	dec    ebp
  408bc0:	push   esi
  408bc1:	add    eax,0x698b78d
  408bc6:	in     eax,dx
  408bc7:	jmp    0x834d0e81
  408bcc:	xchg   esp,eax
  408bcd:	push   ebx
  408bce:	adc    ch,ah
  408bd0:	(bad)  
  408bd1:	cs into 
  408bd3:	or     ebp,edi
  408bd5:	out    dx,al
  408bd6:	stos   BYTE PTR es:[edi],al
  408bd7:	clc    
  408bd8:	jno    0x408bc9
  408bda:	pop    DWORD PTR [esi]
  408bdc:	add    al,0xc9
  408bde:	test   al,0x3f
  408be0:	jle    0x408bb7
  408be2:	mov    BYTE PTR [ecx],dl
  408be4:	iret   
  408be5:	(bad)  
  408be6:	mov    WORD PTR [ebx+0x1974420],?
  408bec:	js     0x408c09
  408bee:	retf   
  408bef:	dec    ebx
  408bf0:	xchg   ebx,eax
  408bf1:	pusha  
  408bf2:	mov    DWORD PTR [ebx+edi*4-0x671e399d],ebx
  408bf9:	shr    DWORD PTR [edi],cl
  408bfb:	adc    BYTE PTR [esi-0xe00fc14],al
  408c01:	xor    al,0xf8
  408c03:	sbb    BYTE PTR [esi],0xa
  408c06:	add    bh,BYTE PTR [ecx]
  408c08:	jnp    0x408be0
  408c0a:	sbb    ecx,eax
  408c0c:	dec    ebp
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xd307002a
  408c4f:	cmc    
  408c50:	pushf  
  408c51:	sbb    BYTE PTR [ebx-0x7ca1f37d],al
  408c57:	sbb    DWORD PTR [esi-0x1c],0xffffff9a
  408c5b:	test   DWORD PTR [ecx-0x44],edx
  408c5e:	dec    edi
  408c5f:	dec    eax
  408c60:	retf   0x8912
  408c63:	addr16 pop ebx
  408c65:	or     DWORD PTR [edi],edx
  408c67:	cmp    DWORD PTR [ecx+0x5ab25e51],0x866f875d
  408c71:	lea    ebx,[ebx-0x50]
  408c74:	test   al,0x7d
  408c76:	lea    esp,[eax-0x79e71907]
  408c7c:	loop   0x408c0a
  408c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c7f:	inc    ebx
  408c80:	mov    bh,0xfc
  408c82:	movzx  esi,WORD PTR [edx]
  408c85:	jae    0x408c33
  408c87:	mov    WORD PTR [ecx+0x15],ds
  408c8a:	sbb    al,0xe1
  408c8c:	fwait
  408c8d:	cwde   
  408c8e:	data16 jno 0x408c61
  408c91:	jl     0x408c50
  408c93:	sub    eax,0x50fa073f
  408c98:	xor    al,0x66
  408c9a:	pusha  
  408c9b:	mov    bh,0xcf
  408c9d:	in     eax,0xff
  408c9f:	repz xchg edi,eax
  408ca1:	pop    es
  408ca2:	pop    ds
  408ca3:	xor    al,0x88
  408ca5:	ror    BYTE PTR [esi-0x558710b1],1
  408cab:	push   edi
  408cac:	(bad)
  408cb1:	xchg   edx,eax
  408cb2:	dec    ebx
  408cb3:	stc    
  408cb4:	or     al,0x53
  408cb6:	sbb    BYTE PTR [esi+0x7778c20a],ch
  408cbc:	and    eax,0xff2508da
  408cc1:	sbb    ah,BYTE PTR ds:0x777b4dd5
  408cc7:	ret    0xfc08
  408cca:	sub    eax,0xfe5cae19
  408ccf:	mov    esi,0x4eb0cdc5
  408cd4:	sub    al,0x10
  408cd6:	dec    edi
  408cd7:	out    0xf5,eax
  408cd9:	ja     0x408c95
  408cdb:	jmp    DWORD PTR [edx]
  408cdd:	xor    DWORD PTR [ebx],ebx
  408cdf:	xor    BYTE PTR [edi+0x2e],bh
  408ce2:	icebp  
  408ce3:	gs xor eax,0x149460c7
  408ce9:	xor    cl,BYTE PTR ss:[esp+eiz*2]
  408ced:	(bad)
  408cf0:	cmc    
  408cf1:	cmp    eax,0xc67b1e11
  408cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf7:	pop    eax
  408cf8:	dec    eax
  408cf9:	mov    ecx,0xd0f4aa93
  408cfe:	lods   al,BYTE PTR ds:[esi]
  408cff:	in     al,0xba
  408d01:	stc    
  408d02:	test   BYTE PTR ds:0x30b1a872,dh
  408d08:	mov    ecx,0xf7f65f4
  408d0d:	push   esi
  408d0e:	push   esp
  408d0f:	in     eax,0xc8
  408d11:	lods   eax,DWORD PTR ds:[esi]
  408d12:	sahf   
  408d13:	sahf   
  408d14:	push   ds
  408d15:	mov    al,0x17
  408d17:	mov    bh,0x74
  408d19:	push   esp
  408d1a:	and    BYTE PTR [esi],dl
  408d1c:	inc    eax
  408d1d:	stc    
  408d1e:	push   eax
  408d1f:	scas   al,BYTE PTR es:[edi]
  408d20:	pop    ecx
  408d21:	js     0x408d0d
  408d23:	xchg   esp,eax
  408d24:	mul    BYTE PTR [esi-0x297b243]
  408d2a:	mov    ecx,0xd5e6b35f
  408d2f:	xlat   BYTE PTR ds:[ebx]
  408d30:	push   ds
  408d31:	scas   eax,DWORD PTR es:[edi]
  408d32:	sahf   
  408d33:	mov    ah,0x3
  408d35:	sub    DWORD PTR [edi+0xd],ecx
  408d38:	jns    0x408d43
  408d3a:	add    BYTE PTR [eax],0x9a
  408d3d:	jne    0x408cfe
  408d3f:	xchg   BYTE PTR [edx-0x623718b8],dh
  408d45:	mov    DWORD PTR [esi],ebp
  408d47:	or     eax,0xaac21620
  408d4c:	dec    ebp
  408d4d:	sbb    bh,BYTE PTR [ecx-0x57]
  408d50:	dec    ecx
  408d51:	jb     0x408d8a
  408d53:	sbb    eax,DWORD PTR [edi+0x2cacb390]
  408d59:	jb     0x408d33
  408d5b:	pop    ss
  408d5c:	mov    ebx,esi
  408d5e:	cs fs push esp
  408d61:	int    0xb0
  408d63:	jmp    0x408d66
  408d65:	xor    al,0x72
  408d67:	push   es
  408d68:	xchg   BYTE PTR [ebp+0x3f],dl
  408d6b:	aad    0xc
  408d6d:	mov    DWORD PTR [ebx-0x74f844ca],edx
  408d73:	pop    eax
  408d74:	pop    esi
  408d75:	push   edi
  408d76:	pop    ecx
  408d77:	paddd  mm1,QWORD PTR [edx]
  408d7a:	inc    esi
  408d7b:	test   eax,0x8e22f73
  408d80:	aam    0xa
  408d82:	mov    dh,0x7
  408d84:	int    0xfc
  408d86:	out    dx,eax
  408d87:	in     al,dx
  408d88:	(bad)  
  408d89:	repz inc edi
  408d8b:	add    eax,0x8be3714f
  408d90:	mov    BYTE PTR [ecx-0x3c8b8780],bh
  408d96:	nop
  408d97:	mov    dl,0x75
  408d99:	scas   al,BYTE PTR es:[edi]
  408d9a:	jge    0x408d6d
  408d9c:	cmp    ch,BYTE PTR es:[ebx]
  408d9f:	push   edi
  408da0:	sub    al,0xfd
  408da2:	mov    esi,0x8d1bf7d0
  408da7:	(bad)  
  408da8:	sub    ah,BYTE PTR [esi-0x67]
  408dab:	lods   al,BYTE PTR ds:[esi]
  408dac:	xor    al,0xea
  408dae:	and    bl,ah
  408db0:	jl     0x408da5
  408db2:	inc    ebx
  408db3:	lock hlt 
  408db5:	das    
  408db6:	jae    0x408e1f
  408db8:	test   BYTE PTR [ecx-0x538ff74f],dh
  408dbe:	or     al,0xd2
  408dc0:	mov    edi,0x53bf74fc
  408dc5:	fimul  DWORD PTR [ebx+edx*4+0x49]
  408dc9:	push   esi
  408dca:	push   esp
  408dcb:	or     cl,BYTE PTR [edi+0x2dd880b5]
  408dd1:	sbb    al,0x61
  408dd3:	mov    dl,0xd4
  408dd5:	addr16 jbe 0x408de6
  408dd8:	scas   al,BYTE PTR es:[edi]
  408dd9:	retf   
  408dda:	mov    ecx,0x5a49b395
  408ddf:	iret   
  408de0:	(bad)  
  408de1:	aaa    
  408de2:	sbb    edx,DWORD PTR [ebx]
  408de4:	mov    al,0xb1
  408de6:	rcl    ch,0x9a
  408de9:	stos   DWORD PTR es:[edi],eax
  408dea:	mov    BYTE PTR [esi-0x9be8a46],bl
  408df0:	push   eax
  408df1:	lods   al,BYTE PTR ds:[esi]
  408df2:	ins    BYTE PTR es:[edi],dx
  408df3:	push   edx
  408df4:	sbb    ebp,DWORD PTR [eax-0x6a]
  408df7:	inc    ecx
  408df8:	int    0xab
  408dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfb:	sbb    al,0x6e
  408dfd:	rcr    BYTE PTR [edi+0x41],cl
  408e00:	imul   ecx,ecx,0x60ca62af
  408e06:	sub    dl,BYTE PTR [edi+0x29]
  408e09:	sahf   
  408e0a:	sbb    bh,BYTE PTR ds:0x867f40d
  408e10:	cmp    bh,BYTE PTR [edx+0x44]
  408e13:	scas   eax,DWORD PTR es:[edi]
  408e14:	xchg   ebp,eax
  408e15:	mov    ecx,0xa58060f7
  408e1a:	call   0x1750:0x66bf9426
  408e21:	(bad)  
  408e22:	pop    DWORD PTR ds:0xbfd55f12
  408e28:	lods   eax,DWORD PTR ds:[esi]
  408e29:	ror    BYTE PTR [edx-0x4abe3524],cl
  408e2f:	dec    esi
  408e30:	inc    ecx
  408e31:	ret    
  408e32:	xor    eax,DWORD PTR [edx]
  408e34:	pop    ecx
  408e35:	jmp    0x54b1:0xb695114e
  408e3c:	inc    eax
  408e3d:	pop    edx
  408e3e:	adc    DWORD PTR [ecx+0x5a],ebx
  408e41:	lock jo 0x408e8f
  408e44:	pop    edx
  408e45:	xchg   ebp,eax
  408e46:	jmp    0xfa666f97
  408e4b:	inc    DWORD PTR [ecx-0x738d73b0]
  408e51:	ret    
  408e52:	sbb    BYTE PTR [esi+0x68],dl
  408e55:	sbb    eax,0x14952c0b
  408e5a:	arpl   cx,ax
  408e5c:	xchg   ebp,eax
  408e5d:	inc    ecx
  408e5e:	mov    eax,0x8600c306
  408e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e64:	sahf   
  408e65:	stc    
  408e66:	jmp    0x4de310a9
  408e6b:	sub    al,0x56
  408e6d:	jae    0x408e6f
  408e6f:	ret    0xf62e
  408e72:	mov    ebx,0x19fe663b
  408e77:	not    edi
  408e79:	lock into 
  408e7b:	fiadd  DWORD PTR [ebx-0x5f3d01d6]
  408e81:	pop    ebp
  408e82:	test   DWORD PTR [edi+0x617cb7a4],ebx
  408e88:	dec    esi
  408e89:	mov    ss,WORD PTR [ebp+0x66]
  408e8c:	daa    
  408e8d:	pop    edx
  408e8e:	int    0x44
  408e90:	adc    BYTE PTR [edi],dl
  408e92:	xchg   bh,al
  408e94:	aad    0xd0
  408e96:	hlt    
  408e97:	repz inc ecx
  408e99:	fmul   st,st(6)
  408e9b:	gs jmp 0x1c972b36
  408ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea2:	mov    ds:0x5e8dfe0e,eax
  408ea7:	leave  
  408ea8:	and    al,0xb6
  408eaa:	ror    BYTE PTR [eax+0x1d0e940b],1
  408eb0:	mov    al,0x94
  408eb2:	push   0x43
  408eb4:	or     ah,BYTE PTR [edi+0x2f72b3d0]
  408eba:	test   al,0x87
  408ebc:	addr16 jl 0x408e90
  408ebf:	shl    eax,1
  408ec1:	ret    0xa0f9
  408ec4:	mov    ecx,0xcd2cae82
  408ec9:	cmp    eax,0xc591767b
  408ece:	sub    BYTE PTR [eax],0x70
  408ed1:	pop    eax
  408ed2:	mov    ebp,0xb921297f
  408ed7:	dec    edi
  408ed8:	js     0x408e75
  408eda:	test   BYTE PTR [ebx-0x73],bl
  408edd:	add    BYTE PTR [edx-0xd902b8c],bh
  408ee3:	xor    al,0x1e
  408ee5:	inc    esi
  408ee6:	jae    0x408e79
  408ee8:	retf   0xa03d
  408eeb:	popf   
  408eec:	out    0x62,eax
  408eee:	push   edi
  408eef:	sbb    DWORD PTR [esi+0x5fec3041],edx
  408ef5:	xor    eax,0xa6251f1b
  408efa:	xchg   DWORD PTR [esi-0x2b826d58],esi
  408f00:	sbb    ebx,DWORD PTR ds:0xf5e5509f
  408f06:	sbb    ebx,ebx
  408f08:	shr    BYTE PTR [edi+0x69],cl
  408f0b:	out    0xb5,eax
  408f0d:	or     eax,0x3d5f52bb
  408f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f13:	aad    0x2d
  408f15:	fnstcw WORD PTR ds:0x6faf368b
  408f1b:	outs   dx,DWORD PTR ds:[esi]
  408f1c:	aas    
  408f1d:	ja     0x408f1b
  408f1f:	cmp    al,0xd6
  408f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f22:	ficom  WORD PTR [ecx+esi*1]
  408f25:	rcl    DWORD PTR [eax],cl
  408f27:	repnz or BYTE PTR [esi+edx*8],bh
  408f2b:	bound  ecx,QWORD PTR [edx-0x1d]
  408f2e:	jmp    0xd01d73aa
  408f33:	push   edx
  408f34:	es cmp al,0x12
  408f37:	mov    ah,0x49
  408f39:	mov    eax,0x641e454a
  408f3e:	ja     0x408ed5
  408f40:	add    esi,DWORD PTR [ebx-0x2b]
  408f43:	aad    0xab
  408f45:	cwde   
  408f46:	pop    esp
  408f47:	jnp    0x408f68
  408f49:	enter  0xcaf5,0xa0
  408f4d:	sub    al,0xd5
  408f4f:	dec    eax
  408f50:	or     bl,dh
  408f52:	sub    esp,DWORD PTR ds:0x5058ebce
  408f58:	js     0x408f7a
  408f5a:	popf   
  408f5b:	adc    ebx,esi
  408f5d:	fld    QWORD PTR [ecx+0x7b94b718]
  408f63:	lods   eax,DWORD PTR ds:[esi]
  408f64:	sbb    edi,DWORD PTR [ebp+0x4f22293e]
  408f6a:	imul   eax,edx,0x4a23eeba
  408f70:	loopne 0x408f82
  408f72:	dec    edi
  408f73:	add    BYTE PTR [esi+0x64],0xef
  408f77:	ins    DWORD PTR es:[edi],dx
  408f78:	scas   al,BYTE PTR es:[edi]
  408f79:	outs   dx,DWORD PTR ds:[esi]
  408f7a:	xchg   esi,eax
  408f7b:	jle    0x408f7b
  408f7d:	or     DWORD PTR [esi-0x5cc42a14],ebx
  408f83:	stos   BYTE PTR es:[edi],al
  408f84:	fisttp WORD PTR [ebp-0x2638f8bb]
  408f8a:	stos   DWORD PTR es:[edi],eax
  408f8b:	pusha  
  408f8c:	nop
  408f8d:	aaa    
  408f8e:	scas   al,BYTE PTR es:[edi]
  408f8f:	add    al,0x27
  408f91:	inc    edx
  408f92:	pop    ebx
  408f93:	mov    dh,BYTE PTR [esi]
  408f95:	test   esp,0xccb9e2d2
  408f9b:	jge    0x408f95
  408f9d:	push   edi
  408f9e:	or     bl,BYTE PTR [ebx+0x31ffabae]
  408fa4:	xlat   BYTE PTR ds:[ebx]
  408fa5:	sbb    eax,0x3c15e406
  408faa:	mov    bl,0x7e
  408fac:	add    eax,0xe7acd3b1
  408fb1:	dec    ebp
  408fb2:	test   eax,0xb20a0589
  408fb7:	and    cl,BYTE PTR [ebx+edx*4-0x3c935e6a]
  408fbe:	dec    eax
  408fbf:	addr16 int3 
  408fc1:	(bad)  
  408fc3:	sbb    bh,ch
  408fc5:	shr    ch,cl
  408fc7:	test   BYTE PTR [edx],bl
  408fc9:	mov    al,0x5d
  408fcb:	sbb    DWORD PTR [edx+0x53618b81],esi
  408fd1:	mov    cl,0xf7
  408fd3:	jo     0x408fbb
  408fd5:	push   0x6fcccfaf
  408fda:	push   cs
  408fdb:	sbb    DWORD PTR [edx+0x32cf4065],ecx
  408fe1:	jns    0x408f63
  408fe3:	cmp    dl,BYTE PTR [esp+ebp*2+0x18]
  408fe7:	mov    ds:0x86163d8,eax
  408fec:	cmp    esp,ecx
  408fee:	xchg   esi,eax
  408fef:	xor    DWORD PTR [ecx+eax*8+0x1c48b274],eax
  408ff6:	add    al,0x98
  408ff8:	stos   BYTE PTR es:[edi],al
  408ff9:	add    ecx,ebp
  408ffb:	adc    eax,0xa0415d7d
  409000:	dec    edx
  409001:	xor    ebp,DWORD PTR [ebx-0xa]
  409004:	push   esi
  409005:	xchg   DWORD PTR [ecx-0x5b],ecx
  409008:	(bad)  
  409009:	int3   
  40900a:	mov    ebp,0x9070cb2b
  40900f:	enter  0x8b7b,0x49
  409013:	nop
  409014:	popa   
  409015:	jge    0x408fad
  409017:	data16 xor bl,BYTE PTR [ebx+ebx*8-0x765b8e2f]
  40901f:	rcl    BYTE PTR [edi+0x2d],1
  409022:	fild   WORD PTR ds:0x3ab1fb32
  409028:	mov    eax,0x924622a
  40902d:	into   
  40902e:	gs pop ss
  409030:	cmp    DWORD PTR [edx-0x30],ebx
  409033:	sub    edx,edi
  409035:	sar    DWORD PTR [edx+0x1a9295fa],1
  40903b:	adc    eax,0xfcd27a8d
  409040:	or     ch,BYTE PTR [ebx+0x5fd9c4b2]
  409046:	pop    edx
  409047:	aaa    
  409048:	cmp    ebx,ecx
  40904a:	mov    esp,0x21b79062
  40904f:	pop    esp
  409050:	and    eax,0x15f7bd69
  409055:	ror    BYTE PTR [ebx],cl
  409057:	or     esi,ecx
  409059:	and    BYTE PTR [edi],ah
  40905b:	mov    ebx,0x235ff7f6
  409060:	mov    eax,ds:0x37947469
  409065:	pop    edx
  409066:	pop    esp
  409067:	enter  0xc3f5,0x1a
  40906b:	and    BYTE PTR [esi-0x5023be63],ah
  409071:	in     al,0x6d
  409073:	pop    edx
  409074:	pop    edi
  409075:	enter  0x8e62,0x47
  409079:	xchg   ebp,eax
  40907a:	out    dx,eax
  40907b:	retf   
  40907c:	fnstenv [ebp-0x58]
  40907f:	add    BYTE PTR [edx],dl
  409081:	dec    ecx
  409082:	js     0x40905c
  409084:	pop    ebx
  409085:	sti    
  409086:	inc    ecx
  409087:	out    dx,eax
  409088:	mov    BYTE PTR [edx],bh
  40908a:	add    ebp,DWORD PTR [ebp+0x1c]
  40908d:	jl     0x4090e6
  40908f:	adc    esp,DWORD PTR [ebx+0x10fc7ee3]
  409095:	loope  0x4090e3
  409097:	int3   
  409098:	pop    edi
  409099:	add    edi,DWORD PTR [eax-0x7e]
  40909c:	push   0xffffffa8
  40909e:	imul   eax,DWORD PTR [edi+0x47],0x27
  4090a2:	or     dh,BYTE PTR [edx-0x32]
  4090a5:	push   esi
  4090a6:	jae    0x409070
  4090a8:	jno    0x40903e
  4090aa:	push   esp
  4090ab:	or     BYTE PTR [ecx-0x4d],cl
  4090ae:	add    DWORD PTR [edi-0x26],esi
  4090b1:	pop    ebp
  4090b2:	cdq    
  4090b3:	clc    
  4090b4:	mov    ds:0x3ca2d103,eax
  4090b9:	and    dh,BYTE PTR [esi+0x656589a0]
  4090bf:	dec    ebp
  4090c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c1:	rol    DWORD PTR ds:0xbf0a6df0,1
  4090c7:	jne    0x4090bf
  4090c9:	inc    ebp
  4090ca:	test   DWORD PTR [edx+eax*4],0x6b699772
  4090d1:	xchg   ecx,eax
  4090d2:	xchg   edx,eax
  4090d3:	nop
  4090d4:	adc    cl,dh
  4090d6:	mov    WORD PTR [ebx+ecx*2],?
  4090d9:	fild   WORD PTR [edx-0x7aac94d4]
  4090df:	cmc    
  4090e0:	loop   0x409105
  4090e2:	mov    dl,0x45
  4090e4:	push   0x0
  4090e6:	retf   
  4090e7:	fwait
  4090e8:	jns    0x409168
  4090ea:	inc    eax
  4090eb:	xchg   edi,eax
  4090ec:	xchg   esp,eax
  4090ed:	push   cs
  4090ee:	popa   
  4090ef:	mov    edx,0xbbe1c4cd
  4090f4:	clc    
  4090f5:	jb     0x409126
  4090f7:	push   eax
  4090f8:	xchg   DWORD PTR [ecx],esi
  4090fa:	cli    
  4090fb:	mov    al,0x64
  4090fd:	mov    ecx,0xab2bb07a
  409102:	out    0x61,eax
  409104:	pop    ebp
  409105:	lahf   
  409106:	retf   0x1574
  409109:	mov    esi,0x123fc3d9
  40910e:	imul   ebx,edx,0xfffffff9
  409111:	je     0x4090f1
  409113:	outs   dx,DWORD PTR ds:[esi]
  409114:	test   DWORD PTR [ebx+0x7d0dea28],ebx
  40911a:	popf   
  40911b:	out    dx,eax
  40911c:	out    0xeb,eax
  40911e:	fnstenv [ebp+0x526180ff]
  409124:	push   esi
  409125:	mov    ds:0x2fabc77a,eax
  40912a:	outs   dx,BYTE PTR ds:[esi]
  40912b:	mov    esi,0x659234bf
  409130:	dec    edi
  409131:	mov    bl,0x5e
  409133:	lahf   
  409134:	aad    0x32
  409136:	repnz pop ss
  409138:	mov    bl,BYTE PTR [ebp+0x13]
  40913b:	push   eax
  40913c:	xchg   edx,eax
  40913d:	das    
  40913e:	pop    edi
  40913f:	pop    esi
  409140:	neg    esi
  409142:	adc    bh,BYTE PTR [ecx]
  409144:	es cmp eax,0xf4aa8486
  40914a:	push   cs
  40914b:	aam    0x97
  40914d:	aam    0xfb
  40914f:	mov    dl,0x8c
  409151:	pop    ds
  409152:	out    dx,eax
  409153:	mov    ah,0x37
  409155:	lds    ebp,FWORD PTR [edi-0x53f95560]
  40915b:	lods   eax,DWORD PTR ds:[esi]
  40915c:	idiv   DWORD PTR [edi-0x23af5aaf]
  409162:	in     al,0xad
  409164:	sbb    ebx,DWORD PTR [ebp-0x284d2711]
  40916a:	cmp    edi,edi
  40916c:	cwde   
  40916d:	mov    bl,0x9e
  40916f:	aad    0xb7
  409171:	pusha  
  409172:	popa   
  409173:	xor    BYTE PTR [eax+0x411a5e7b],0x55
  40917a:	or     BYTE PTR [edx-0x2a],bh
  40917d:	ins    DWORD PTR es:[edi],dx
  40917e:	jo     0x409147
  409180:	ds xchg esp,eax
  409182:	pop    esi
  409183:	dec    ebp
  409184:	adc    eax,0x68087161
  409189:	cmc    
  40918a:	rol    al,0x4d
  40918d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40918e:	mov    bh,0xd2
  409190:	(bad)  
  409192:	add    BYTE PTR [ecx],ch
  409194:	in     al,dx
  409195:	popa   
  409196:	xchg   ecx,eax
  409197:	bnd jbe 0x4091f7
  40919a:	jmp    0x409190
  40919c:	and    al,BYTE PTR [eax]
  40919e:	and    eax,esp
  4091a0:	stc    
  4091a1:	push   esp
  4091a2:	loop   0x4091af
  4091a4:	sbb    ecx,0xb82578bd
  4091aa:	inc    ebp
  4091ab:	or     al,0xab
  4091ad:	xchg   ecx,eax
  4091ae:	dec    edi
  4091af:	loopne 0x4091a1
  4091b1:	loop   0x40918f
  4091b3:	push   0x9478c41f
  4091b8:	push   edx
  4091b9:	or     BYTE PTR [ebx],ah
  4091bb:	or     al,0x24
  4091bd:	gs xor al,0xf7
  4091c0:	pop    edx
  4091c1:	xchg   edi,eax
  4091c2:	sub    eax,0x9b0ba63f
  4091c7:	mov    bl,0xd2
  4091c9:	repz loop 0x40923a
  4091cc:	add    al,0xd3
  4091ce:	les    esp,FWORD PTR [edx]
  4091d0:	or     eax,0x1877980b
  4091d5:	adc    DWORD PTR [esi+0x5d18ad31],edi
  4091db:	je     0x4091de
  4091dd:	xor    BYTE PTR [eax+eax*1-0x13],al
  4091e1:	mov    WORD PTR [edi-0x6974e249],?
  4091e7:	adc    bh,BYTE PTR [eax+0x36]
  4091ea:	int    0x18
  4091ec:	dec    ebp
  4091ed:	or     dh,dl
  4091ef:	or     eax,DWORD PTR [ecx+ecx*4-0x56]
  4091f3:	lods   eax,DWORD PTR ds:[esi]
  4091f4:	test   BYTE PTR [edx-0x16],dl
  4091f7:	rcr    ch,1
  4091f9:	pop    eax
  4091fa:	loope  0x40921a
  4091fc:	sbb    al,ah
  4091fe:	xchg   DWORD PTR [esi-0x17],ebx
  409201:	xchg   DWORD PTR [edi-0xb5dc41b],ecx
  409207:	mov    edx,0xd662383f
  40920c:	mov    al,0x73
  40920e:	xor    al,0x12
  409210:	mov    BYTE PTR [edx-0x780a910c],bl
  409216:	pop    ebp
  409217:	repz push ebx
  409219:	ds push esp
  40921b:	and    eax,0xf531278f
  409220:	mov    ah,0x28
  409222:	sbb    eax,0xce78945d
  409227:	dec    esi
  409228:	retf   
  409229:	push   edx
  40922a:	inc    esp
  40922b:	cdq    
  40922c:	pop    ebp
  40922d:	cdq    
  40922e:	(bad)  
  40922f:	mov    edx,0xd59b3176
  409234:	fdivrp st(7),st
  409236:	lds    esp,FWORD PTR [ebp-0x20]
  409239:	mov    bh,0xca
  40923b:	sub    al,0x2e
  40923d:	(bad)  
  40923e:	jae    0x40923f
  409240:	inc    edx
  409241:	push   edi
  409242:	les    ecx,FWORD PTR [ebx]
  409244:	(bad)
  409247:	rcl    BYTE PTR [esi+0x1b],0x9f
  40924b:	cld    
  40924c:	(bad)  [ebx+0x77d6847b]
  409252:	mov    esi,ecx
  409254:	leave  
  409255:	and    eax,0xeab2edbb
  40925a:	jo     0x4091f7
  40925c:	imul   edx,DWORD PTR [edi],0x1a62f6dc
  409262:	xchg   esi,eax
  409263:	shr    DWORD PTR [ebx],cl
  409265:	xor    DWORD PTR [edi],edx
  409267:	or     eax,0xe4b0a0a8
  40926c:	inc    edi
  40926d:	jge    0x40928c
  40926f:	daa    
  409270:	mov    ebx,0x9c6a47b8
  409275:	(bad)
  40927a:	xchg   edi,eax
  40927b:	sahf   
  40927c:	xchg   esi,eax
  40927d:	ja     0x409231
  40927f:	stos   BYTE PTR es:[edi],al
  409280:	repnz shl edx,1
  409283:	or     cl,cl
  409285:	outs   dx,DWORD PTR ds:[esi]
  409286:	mov    bh,0x6a
  409288:	cli    
  409289:	and    esi,ecx
  40928b:	leave  
  40928c:	dec    esp
  40928d:	ret    
  40928e:	aad    0xc2
  409290:	pop    eax
  409291:	retf   0xc2f2
  409294:	mov    DWORD PTR [esi],0x378687a3
  40929a:	push   es
  40929b:	fwait
  40929c:	std    
  40929d:	fcomp  DWORD PTR [ebx+0x26018962]
  4092a3:	xchg   edx,eax
  4092a4:	popa   
  4092a5:	xchg   edx,eax
  4092a6:	sub    DWORD PTR [edi+0x44],edx
  4092a9:	sbb    ah,bh
  4092ab:	and    DWORD PTR [ebx],ebx
  4092ad:	mov    ds:0x27766883,eax
  4092b2:	ja     0x409312
  4092b4:	mov    ebx,DWORD PTR [esi+0x187318e7]
  4092ba:	outs   dx,DWORD PTR ds:[esi]
  4092bb:	xor    eax,0xbe6098e
  4092c0:	inc    ecx
  4092c1:	xor    eax,0xe5cc1194
  4092c6:	stos   BYTE PTR es:[edi],al
  4092c7:	out    dx,eax
  4092c8:	outs   dx,DWORD PTR ds:[esi]
  4092c9:	xor    DWORD PTR [ebx-0x6c],ebp
  4092cc:	push   ebx
  4092cd:	shl    DWORD PTR [edx+0x7a22152c],1
  4092d3:	lock mov ebx,0xde605547
  4092d9:	movzx  ebx,WORD PTR [eax]
  4092dc:	out    dx,al
  4092dd:	test   BYTE PTR [ebp+esi*4+0x35],0x21
  4092e2:	test   al,0xf
  4092e4:	cmc    
  4092e5:	rol    DWORD PTR [ebx+edi*4+0x5efdeeeb],cl
  4092ec:	das    
  4092ed:	out    0xf2,eax
  4092ef:	aad    0x2f
  4092f1:	ins    DWORD PTR es:[edi],dx
  4092f2:	jns    0x4092b9
  4092f4:	leave  
  4092f5:	push   cs
  4092f6:	sub    BYTE PTR [ecx-0x3d],dh
  4092f9:	push   edx
  4092fa:	icebp  
  4092fb:	xchg   edi,eax
  4092fc:	push   es
  4092fd:	inc    edx
  4092fe:	push   cs
  4092ff:	(bad)  
  409300:	imul   ebx,DWORD PTR [ebx-0x40c53d24],0x27
  409307:	add    DWORD PTR [eax+0x585852c2],esi
  40930d:	sar    DWORD PTR [esi+0x18],cl
  409310:	mov    ebx,0xe642295e
  409315:	mov    edi,0xd0689b3a
  40931a:	mov    al,BYTE PTR [edx-0x12]
  40931d:	je     0x4092ab
  40931f:	push   edi
  409320:	sub    DWORD PTR [ecx+edx*2],eax
  409323:	stc    
  409324:	fidivr DWORD PTR [ebx]
  409326:	fld    DWORD PTR [ebp+0x3f]
  409329:	sbb    al,0x5f
  40932b:	add    bh,BYTE PTR [ecx+0x3e7f1c38]
  409331:	pop    es
  409332:	add    al,0xbd
  409334:	jg     0x409385
  409336:	jbe    0x40936d
  409338:	(bad)  
  409339:	stos   DWORD PTR es:[edi],eax
  40933a:	xchg   BYTE PTR [eax],cl
  40933c:	mov    bh,0x9f
  40933e:	xchg   esi,edx
  409340:	jae    0x4092fd
  409342:	repz pop ds
  409344:	mov    dh,0xfe
  409346:	sub    DWORD PTR [edi+ecx*4-0x1e8d744c],esp
  40934d:	mov    esi,DWORD PTR [esi]
  40934f:	xor    BYTE PTR ds:0xb93a6b9f,al
  409355:	xor    DWORD PTR [edi+0x4f],esi
  409358:	sbb    edx,edx
  40935a:	xchg   edx,esp
  40935c:	imul   bl
  40935e:	dec    ebx
  40935f:	xchg   edi,eax
  409360:	fistp  DWORD PTR [ecx+esi*2-0x75d01dcb]
  409367:	pushf  
  409368:	pop    ss
  409369:	or     eax,0x28b5400f
  40936e:	out    dx,al
  40936f:	scas   al,BYTE PTR es:[edi]
  409370:	ins    BYTE PTR es:[edi],dx
  409371:	mov    ch,0x57
  409373:	mov    edx,0xd5999f4d
  409378:	fsincos 
  40937a:	add    edx,ecx
  40937c:	and    ebp,esi
  40937e:	xchg   ebp,edx
  409380:	popf   
  409381:	in     al,0xa3
  409383:	jp     0x4093da
  409385:	repnz bound edi,QWORD PTR [edi+eiz*4]
  409389:	mov    dh,0x4b
  40938b:	sbb    eax,ebx
  40938d:	cs std 
  40938f:	or     dh,ah
  409391:	test   DWORD PTR [ebp+0x59c5f33e],ebx
  409397:	mov    WORD PTR [ebp-0x5c736084],fs
  40939d:	je     0x4093f2
  40939f:	sub    al,0x25
  4093a1:	jbe    0x409394
  4093a3:	add    al,0xce
  4093a5:	mov    bl,0x38
  4093a7:	xchg   esp,eax
  4093a8:	mov    ?,WORD PTR [eax+0x78ad4d4]
  4093ae:	loopne 0x40940e
  4093b0:	jle    0x409417
  4093b2:	jbe    0x4093ce
  4093b4:	ds sbb al,0xc6
  4093b7:	or     cl,ch
  4093b9:	jno    0x40941e
  4093bb:	imul   eax,DWORD PTR [edx],0xf1a7adea
  4093c1:	stos   BYTE PTR es:[edi],al
  4093c2:	pop    ebx
  4093c3:	adc    al,BYTE PTR [edx]
  4093c5:	mov    BYTE PTR [edx+0x3a],ah
  4093c8:	lods   eax,DWORD PTR ds:[esi]
  4093c9:	pusha  
  4093ca:	std    
  4093cb:	push   0xcf35f1
  4093d0:	sbb    BYTE PTR [esi],0x11
  4093d3:	inc    ebp
  4093d4:	sbb    BYTE PTR [ebx+0x2cb74476],0x59
  4093db:	push   edi
  4093dc:	iret   
  4093dd:	mov    eax,0x78c6422a
  4093e2:	inc    ecx
  4093e3:	and    al,0x46
  4093e5:	jae    0x40942f
  4093e7:	mov    BYTE PTR ds:0x20872430,ch
  4093ed:	ins    BYTE PTR es:[edi],dx
  4093ee:	xchg   esi,eax
  4093ef:	adc    al,0x2a
  4093f1:	push   esi
  4093f2:	es xchg esi,eax
  4093f4:	arpl   WORD PTR [ebx-0x4a],bp
  4093f7:	cli    
  4093f8:	push   esi
  4093f9:	pop    es
  4093fa:	or     eax,0x6e2e4cda
  4093ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409400:	dec    ebx
  409401:	ins    DWORD PTR es:[edi],dx
  409402:	xchg   BYTE PTR ds:0x9e56578f,ch
  409408:	cld    
  409409:	in     al,0xb9
  40940b:	ret    0x63da
  40940e:	xor    ebx,DWORD PTR [edx-0x72]
  409411:	imul   ecx,esi,0xae661fc0
  409417:	mov    ds:0x57ba3150,al
  40941c:	lea    ebx,[edi+0x1fa11d87]
  409422:	ins    BYTE PTR es:[edi],dx
  409423:	cmp    eax,0x60c7ae16
  409428:	hlt    
  409429:	sub    ebx,edi
  40942b:	inc    ebx
  40942c:	mov    WORD PTR [ebx+ebp*4+0x7f5c0db4],?
  409433:	sub    BYTE PTR ds:0x58686a3b,0x1b
  40943a:	rcl    bh,1
  40943c:	pop    edi
  40943d:	xchg   ecx,eax
  40943e:	and    eax,0x1909c506
  409443:	jae    0x4093c8
  409445:	sub    DWORD PTR [ebx+eax*8+0x76d84e95],esi
  40944c:	mov    al,0xee
  40944e:	dec    eax
  40944f:	sub    eax,0xa3dc5b5
  409454:	pop    esi
  409455:	inc    esi
  409456:	cmp    ebp,0x211d6511
  40945c:	inc    edx
  40945d:	test   eax,0x55fb30e4
  409462:	fwait
  409463:	xor    eax,0xf02ed0b1
  409468:	mov    esp,0xbec9ce
  40946d:	sub    ah,dl
  40946f:	inc    ebx
  409470:	mov    ebp,0x32a8ced5
  409475:	cmp    DWORD PTR [ecx-0x702c59db],ecx
  40947b:	loop   0x4094f1
  40947d:	dec    esi
  40947e:	sti    
  40947f:	and    dh,ch
  409481:	cmc    
  409482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409483:	mov    al,ds:0x96eeb4cb
  409488:	pop    eax
  409489:	out    dx,eax
  40948a:	sbb    DWORD PTR [ebp-0x16],esi
  40948d:	loope  0x40946e
  40948f:	mov    eax,0x454a5f6f
  409494:	adc    DWORD PTR [eax+ebx*8+0x1c],ebx
  409498:	add    cl,BYTE PTR [esi+0x6]
  40949b:	cli    
  40949c:	mov    cl,0x3
  40949e:	and    DWORD PTR [esi-0x6f],ebx
  4094a1:	ins    BYTE PTR es:[edi],dx
  4094a2:	mov    ebp,0xd72d5929
  4094a7:	push   0xffffffe1
  4094a9:	inc    dx
  4094ab:	push   0x59
  4094ad:	inc    ecx
  4094ae:	push   esp
  4094af:	and    al,BYTE PTR [edx]
  4094b1:	not    BYTE PTR [ebx+0x3f]
  4094b4:	je     0x40948b
  4094b6:	mov    ds:0x8dfac0b1,eax
  4094bb:	dec    edx
  4094bc:	loopne 0x40946d
  4094be:	push   esi
  4094bf:	sahf   
  4094c0:	mov    ebx,0x375fca87
  4094c5:	mov    dh,0x22
  4094c7:	in     eax,dx
  4094c8:	fcomp  QWORD PTR ds:[ecx-0x6fa9bee8]
  4094cf:	retf   
  4094d0:	jmp    DWORD PTR [edi+0x4d]
  4094d3:	outs   dx,BYTE PTR ds:[esi]
  4094d4:	das    
  4094d5:	jmp    0x5c3cae6e
  4094da:	js     0x409544
  4094dc:	jl     0x4094b4
  4094de:	(bad)  
  4094df:	aad    0x3c
  4094e1:	bound  ecx,QWORD PTR [esi+edi*2+0x3e]
  4094e5:	push   ecx
  4094e6:	pop    esi
  4094e7:	add    al,0x2c
  4094e9:	sbb    al,0x9d
  4094eb:	push   ebx
  4094ec:	in     eax,0x8e
  4094ee:	or     dh,BYTE PTR [edi-0x21]
  4094f1:	pop    ecx
  4094f2:	mov    fs,ebx
  4094f4:	and    eax,edi
  4094f6:	jmp    0x4094e4
  4094f8:	cs xchg esp,eax
  4094fa:	jl     0x4094fa
  4094fc:	pop    es
  4094fd:	mov    ds:0xf407b290,al
  409502:	aad    0x9f
  409504:	aad    0x14
  409506:	xor    edi,DWORD PTR [ebx]
  409508:	repz fstp TBYTE PTR [ebx+eiz*2]
  40950c:	mov    ebp,0x9a306bf1
  409511:	repnz dec ebp
  409513:	sub    bh,BYTE PTR [ebp+0x1b]
  409516:	mov    bh,0x36
  409518:	cmp    ah,BYTE PTR [ebx]
  40951a:	ret    0x1277
  40951d:	and    BYTE PTR [eax],0x44
  409520:	xor    DWORD PTR [ebx-0x1],ebp
  409523:	in     al,0x62
  409525:	(bad)  [eax+edi*4-0x56aa27ea]
  40952c:	push   ebp
  40952d:	jnp    0x409533
  40952f:	out    0x1f,eax
  409531:	xchg   edi,eax
  409532:	clc    
  409533:	cs pop esp
  409535:	add    edx,ebx
  409537:	sub    DWORD PTR [ebx],esi
  409539:	cs sahf 
  40953b:	out    dx,eax
  40953c:	pusha  
  40953d:	aad    0xff
  40953f:	sbb    al,BYTE PTR ds:0xfada9fb6
  409545:	fcmovu st,st(7)
  409547:	sbb    eax,0x6ff6e049
  40954c:	es gs push es
  40954f:	inc    edx
  409550:	xchg   ebx,eax
  409551:	fdiv   DWORD PTR ds:0x5a11e0a
  409557:	inc    ebx
  409558:	shr    DWORD PTR [esi+0x417235c9],cl
  40955e:	in     al,0x24
  409560:	and    eax,0x60318102
  409565:	xor    al,0x63
  409567:	lea    ebp,[esi]
  409569:	xchg   DWORD PTR [edx],ebp
  40956b:	hlt    
  40956c:	mov    cl,0x29
  40956e:	dec    edi
  40956f:	mov    ecx,0xc82cefa3
  409574:	sub    eax,0x8316b680
  409579:	xchg   ecx,eax
  40957a:	xchg   edx,eax
  40957b:	sbb    edx,0x1d4ee189
  409581:	data16 sub dl,ch
  409584:	adc    al,0x62
  409586:	ficom  DWORD PTR [esi]
  409588:	popa   
  409589:	sbb    cl,BYTE PTR [ecx-0x4fd6ccd]
  40958f:	jle    0x40958a
  409591:	lahf   
  409592:	xor    eax,0x2d0f11df
  409597:	mov    BYTE PTR [ecx-0x37],cl
  40959a:	popf   
  40959b:	dec    eax
  40959c:	sub    esi,esi
  40959e:	lds    ecx,FWORD PTR [ebx]
  4095a0:	int    0x42
  4095a2:	das    
  4095a3:	(bad)  
  4095a4:	lock jl 0x40953d
  4095a7:	or     edx,ecx
  4095a9:	and    BYTE PTR [eax+0x16eb59b2],ch
  4095af:	jmp    0x8671:0x947e250e
  4095b6:	lahf   
  4095b7:	imul   edi,esp,0x7790a2f3
  4095bd:	and    BYTE PTR [ecx+0x1ab80a63],al
  4095c3:	or     edi,DWORD PTR [edx]
  4095c5:	push   es
  4095c6:	dec    ebx
  4095c7:	repnz or BYTE PTR [bx+0x6cd8],cl
  4095cd:	lds    ebp,FWORD PTR [edx-0x78]
  4095d0:	out    0xf2,al
  4095d2:	cwde   
  4095d3:	pop    eax
  4095d4:	loope  0x4095ee
  4095d6:	push   0x6c
  4095d8:	out    dx,al
  4095d9:	push   esp
  4095da:	and    esp,edx
  4095dc:	div    ch
  4095de:	ds push es
  4095e0:	sbb    ebp,0x19285661
  4095e6:	cmp    DWORD PTR [eax-0x6f],0x6c0ca7ad
  4095ed:	xchg   edx,eax
  4095ee:	mov    ebx,0x8ee65231
  4095f3:	cld    
  4095f4:	inc    esp
  4095f5:	fiadd  DWORD PTR [ebp+0x40c855f2]
  4095fb:	call   0xecf4:0x922b62a5
  409602:	shl    DWORD PTR [ebp+edi*4-0x7a],cl
  409606:	push   edx
  409607:	sbb    al,BYTE PTR [ecx]
  409609:	shl    DWORD PTR [ebp-0x6ce963ac],1
  40960f:	xchg   BYTE PTR [eax+0x1e6ddefa],bh
  409615:	mov    al,0xea
  409617:	lods   al,BYTE PTR ds:[esi]
  409618:	mov    al,ds:0x97116bd3
  40961d:	ficom  WORD PTR [ebx-0x6711fc91]
  409623:	xchg   ebx,eax
  409624:	adc    ebx,ebx
  409626:	mov    al,0x4f
  409628:	xchg   eax,esi
  40962a:	out    dx,al
  40962b:	aad    0x29
  40962d:	pop    esi
  40962e:	and    bl,BYTE PTR [ecx-0x63a8ab85]
  409634:	lods   al,BYTE PTR ds:[esi]
  409635:	in     al,0xd0
  409637:	cdq    
  409638:	pusha  
  409639:	aam    0xdb
  40963b:	xchg   DWORD PTR [ebx+edi*4+0x4b],edx
  40963f:	fisubr DWORD PTR [ebx-0x47e2df3a]
  409645:	push   edi
  409646:	sub    DWORD PTR [edx],eax
  409648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409649:	pop    ecx
  40964a:	shl    BYTE PTR [ecx-0x30],0x71
  40964e:	hlt    
  40964f:	mov    esp,0x42a25aab
  409654:	ret    
  409655:	test   al,0x17
  409657:	int3   
  409658:	inc    eax
  409659:	xlat   BYTE PTR ds:[ebx]
  40965a:	mov    dl,0xec
  40965c:	dec    edi
  40965d:	std    
  40965e:	and    edx,ebx
  409660:	je     0x40965d
  409662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409663:	and    eax,0x8575ec08
  409668:	push   ebp
  409669:	mov    ebp,0x2b8dfbff
  40966e:	jmp    0x4096c0
  409670:	shr    edi,cl
  409672:	cmp    edi,esp
  409674:	xchg   edi,eax
  409675:	in     eax,dx
  409676:	pop    ds
  409677:	or     DWORD PTR [edx+esi*4+0x62b22c01],ebx
  40967e:	cli    
  40967f:	enter  0x6031,0xe8
  409683:	jnp    0x4096cc
  409685:	mov    esi,0x772580ee
  40968a:	cmp    BYTE PTR [edi+0x5928d50],bl
  409690:	(bad)  
  409691:	xlat   BYTE PTR ds:[ebx]
  409692:	or     al,0x96
  409694:	sbb    esp,DWORD PTR [ebx]
  409696:	adc    bl,BYTE PTR [esi-0x13]
  409699:	lods   eax,DWORD PTR ds:[esi]
  40969a:	xor    DWORD PTR [esi+0x1a41cfa8],ebp
  4096a0:	jb     0x409644
  4096a2:	mov    es,esi
  4096a4:	xchg   ax,ax
  4096a6:	mov    al,0x20
  4096a8:	mov    edi,0xe6eede95
  4096ad:	inc    ebx
  4096ae:	and    al,0x7a
  4096b0:	or     bh,0x7e
  4096b3:	xor    al,0x58
  4096b5:	pop    edi
  4096b6:	ds mov edi,0xbd5a4f0
  4096bc:	outs   dx,DWORD PTR ds:[esi]
  4096bd:	jb     0x409730
  4096bf:	retf   
  4096c0:	pop    ebx
  4096c1:	not    DWORD PTR [ebx-0x3b]
  4096c4:	jecxz  0x4096fc
  4096c6:	pop    ss
  4096c7:	stc    
  4096c8:	adc    BYTE PTR [ebx],dh
  4096ca:	loop   0x409655
  4096cc:	frstor [ebx+0xcc61bef]
  4096d2:	pop    edx
  4096d3:	mov    edx,0x21dd81f8
  4096d8:	dec    esp
  4096d9:	out    0xcd,al
  4096db:	call   0xc5a58ac7
  4096e0:	mov    fs,WORD PTR [ebp+eax*2+0x6c]
  4096e4:	call   0xe263a693
  4096e9:	dec    ebp
  4096ea:	pop    eax
  4096eb:	mov    ds:0x21eda16,eax
  4096f0:	sbb    DWORD PTR [ebx+0x5f],ebx
  4096f3:	jnp    0x40975a
  4096f5:	add    di,cx
  4096f8:	bound  edx,QWORD PTR [edi+esi*2-0x7f66f0a0]
  4096ff:	or     al,0xbb
  409701:	lahf   
  409702:	mov    eax,0x78f55d83
  409707:	sbb    eax,0x5a0dd1b0
  40970c:	jmp    0x9d53:0xed52c9c2
  409713:	mov    dl,0xf2
  409715:	or     BYTE PTR [edx],bh
  409717:	push   0x8c6c6a9a
  40971c:	and    esi,ecx
  40971e:	fiadd  DWORD PTR [esi+0x73]
  409721:	sahf   
  409722:	pop    es
  409723:	enter  0xfdf1,0xbf
  409727:	dec    ebp
  409728:	aad    0x4d
  40972a:	xor    eax,0x2eb63e1a
  40972f:	cmp    bh,BYTE PTR [esp+edx*2+0x6d]
  409733:	in     eax,0x61
  409735:	and    BYTE PTR [ebx-0x585b1a03],ah
  40973b:	mov    bh,0xaa
  40973d:	push   edx
  40973e:	loopne 0x409713
  409740:	loop   0x4097a3
  409742:	sbb    cl,BYTE PTR [esi+0x3d]
  409745:	mov    eax,ds:0xc6d85a29
  40974a:	dec    edi
  40974b:	fcmove st,st(2)
  40974d:	lds    ecx,FWORD PTR [esi]
  40974f:	addr16 jg 0x40973a
  409752:	add    DWORD PTR [ebp+0x67],ebp
  409755:	dec    edi
  409756:	push   esi
  409757:	add    bl,BYTE PTR [ebx-0x70d3a32a]
  40975d:	pop    ss
  40975e:	xor    esi,DWORD PTR [esi+ebp*8+0x3d56fc43]
  409765:	das    
  409766:	loop   0x4097a7
  409768:	inc    ecx
  409769:	retf   
  40976a:	int    0xc4
  40976c:	inc    ebx
  40976d:	or     ebx,DWORD PTR [ecx-0x6d5f229e]
  409773:	in     al,0xc2
  409775:	inc    esi
  409776:	(bad)  [esi+0x30b7c138]
  40977c:	sbb    dh,ah
  40977e:	mov    eax,ds:0xf1ae0015
  409783:	dec    esi
  409784:	adc    esp,ebx
  409786:	cdq    
  409787:	pushf  
  409788:	dec    ecx
  409789:	push   edi
  40978a:	push   ebx
  40978b:	call   0x2091:0xc4dcecb4
  409792:	sbb    DWORD PTR [ebp-0x760e5351],eax
  409798:	lods   al,BYTE PTR ds:[esi]
  409799:	movlps xmm5,QWORD PTR [ebx+0x11]
  40979d:	or     BYTE PTR [ebx],bl
  40979f:	ss je  0x40978f
  4097a2:	sar    BYTE PTR [edi+ebx*1],1
  4097a5:	in     al,dx
  4097a6:	into   
  4097a7:	mov    bh,0x7e
  4097a9:	cmp    dl,bl
  4097ab:	(bad)  
  4097ac:	xchg   cx,ax
  4097ae:	inc    ebp
  4097af:	add    eax,ebx
  4097b1:	xlat   BYTE PTR ds:[ebx]
  4097b2:	std    
  4097b3:	inc    ecx
  4097b4:	shl    BYTE PTR ds:0x3dcd05e1,0xd0
  4097bb:	int    0x37
  4097bd:	aad    0x27
  4097bf:	jns    0x409800
  4097c1:	pop    ebp
  4097c2:	hlt    
  4097c3:	mov    ?,WORD PTR [ebp+0x299ba62c]
  4097c9:	add    eax,0x13cad9d3
  4097ce:	pop    ecx
  4097cf:	add    eax,0xc5c19f5e
  4097d4:	fldcw  WORD PTR [esi+0x4d258fdb]
  4097da:	rol    bh,0x80
  4097dd:	pop    edi
  4097de:	add    eax,0x37f80db
  4097e3:	fmul   DWORD PTR [eax]
  4097e5:	std    
  4097e6:	add    ebp,DWORD PTR [ebx+0x1f]
  4097e9:	push   ebx
  4097ea:	test   BYTE PTR [esi+0x5],al
  4097ed:	cmp    DWORD PTR ds:0xa6b89e2f,0x59f48d2b
  4097f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f8:	int3   
  4097f9:	repz pushf 
  4097fb:	jae    0x409823
  4097fd:	(bad)  
  4097fe:	icebp  
  4097ff:	lahf   
  409800:	push   ebx
  409801:	jmp    0xe8a7:0x300f3a58
  409808:	shl    esi,0xdd
  40980b:	xchg   edi,eax
  40980c:	mov    ch,0x21
  40980e:	loop   0x409887
  409810:	mov    dh,0x1a
  409812:	xor    al,0xc0
  409814:	shl    BYTE PTR ds:0x184452de,cl
  40981a:	daa    
  40981b:	scas   eax,DWORD PTR es:[edi]
  40981c:	in     al,dx
  40981d:	sbb    DWORD PTR [ebx-0xf169bc7],esi
  409823:	mov    ebp,0xa9862b58
  409828:	jl     0x40981f
  40982a:	xchg   esi,eax
  40982b:	xor    eax,ebx
  40982d:	rcl    BYTE PTR [esi],0x82
  409830:	xor    al,0x83
  409832:	adc    edx,DWORD PTR ds:0xf0d8d716
  409838:	jbe    0x4097de
  40983a:	ror    BYTE PTR [ecx],cl
  40983c:	xlat   BYTE PTR ds:[ebx]
  40983d:	lods   al,BYTE PTR ds:[esi]
  40983e:	inc    ebp
  40983f:	ins    BYTE PTR es:[edi],dx
  409840:	cdq    
  409841:	ror    BYTE PTR [eax],0xa
  409844:	sub    al,0x38
  409846:	sub    ebp,DWORD PTR ds:0xc9ea4112
  40984c:	dec    edx
  40984d:	or     al,0x16
  40984f:	ja     0x409838
  409851:	cwde   
  409852:	sub    ebp,DWORD PTR [ecx+0x46]
  409855:	jae    0x409803
  409857:	cmc    
  409858:	and    eax,0xefc03d39
  40985d:	xchg   ecx,eax
  40985e:	and    DWORD PTR ds:0xba35e594,0x63
  409865:	cmp    al,BYTE PTR [esi+0x569134ea]
  40986b:	pop    ebp
  40986c:	outs   dx,DWORD PTR ds:[esi]
  40986d:	sub    eax,DWORD PTR [ecx]
  40986f:	sbb    al,0xa9
  409871:	dec    ebx
  409872:	pusha  
  409873:	ins    DWORD PTR es:[edi],dx
  409874:	add    al,0xb3
  409876:	mov    bh,0x48
  409878:	and    eax,0x1fd0c4bf
  40987d:	xor    BYTE PTR [ebx+0x23],bh
  409880:	mov    ds:0x9af0770,eax
  409885:	mov    ch,0x9c
  409887:	fwait
  409888:	gs in  eax,0xf4
  40988b:	adc    edi,DWORD PTR [ebx+0x6f]
  40988e:	dec    esp
  40988f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409890:	inc    ebx
  409891:	mov    esi,0x5c0841f8
  409896:	inc    edx
  409897:	jp     0x4098ce
  409899:	push   ds
  40989a:	mov    ah,0x4c
  40989c:	mov    ebx,0x1803719b
  4098a1:	fcomp  QWORD PTR [ebp-0x6bd9840c]
  4098a7:	js     0x4098c9
  4098a9:	xchg   edx,eax
  4098aa:	addr16 inc ecx
  4098ac:	aam    0xc5
  4098ae:	push   eax
  4098af:	mov    bh,ah
  4098b1:	pop    edi
  4098b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b3:	loop   0x4098be
  4098b5:	jbe    0x4098cc
  4098b7:	cmp    DWORD PTR gs:[ebx-0x57471acc],edx
  4098be:	cmp    DWORD PTR [ecx-0x74716bdd],0x20ba44ff
  4098c8:	add    al,0x1c
  4098ca:	mov    ds:0xbb68464b,eax
  4098cf:	mov    esp,0x4a5eb805
  4098d4:	mov    edi,0xeb5be29b
  4098d9:	ret    
  4098da:	dec    ecx
  4098db:	sbb    BYTE PTR [ecx],dl
  4098dd:	mov    ds:0x6019bdc,eax
  4098e2:	and    eax,0xa48e28f0
  4098e7:	repnz in al,0x62
  4098ea:	cmp    esp,ecx
  4098ec:	sub    ebp,edx
  4098ee:	loop   0x409908
  4098f0:	mov    ecx,0x46f3c16
  4098f5:	not    DWORD PTR [esi-0x65e72c75]
  4098fb:	xor    bh,0xc6
  4098fe:	ret    0xe9cc
  409901:	call   0x901:0x8a17e3cd
  409908:	(bad)  
  409909:	cld    
  40990a:	loop   0x409948
  40990c:	call   0xbd2d:0xd8d7cd3c
  409913:	sbb    eax,0xd8fcb8ab
  409918:	sub    BYTE PTR [ecx],0x45
  40991b:	in     eax,0xed
  40991d:	inc    ecx
  40991e:	add    DWORD PTR [edi-0x25],0x59
  409922:	out    dx,eax
  409923:	es sbb eax,0x411443b6
  409929:	and    esi,DWORD PTR [edx+0x68]
  40992c:	rcr    ecx,cl
  40992e:	jmp    0xbeab1cae
  409933:	cmp    esi,eax
  409935:	ficom  DWORD PTR [edx-0x9]
  409938:	(bad)  
  409939:	jnp    0x409923
  40993b:	sbb    al,0xfc
  40993d:	sti    
  40993e:	in     eax,0x8f
  409940:	call   DWORD PTR [ecx]
  409942:	aaa    
  409943:	mov    ebp,0x1843a7a5
  409948:	and    al,ch
  40994a:	dec    eax
  40994b:	shr    DWORD PTR [edx+0x1d],0x4d
  40994f:	pop    edx
  409950:	add    eax,0x9bef4812
  409955:	cmp    DWORD PTR ds:0x6d59c6d3,0x57
  40995c:	or     bl,cl
  40995e:	jo     0x40997a
  409960:	adc    eax,DWORD PTR [edx-0x3c]
  409963:	push   edi
  409964:	aad    0xe9
  409966:	cdq    
  409967:	sub    DWORD PTR [esi-0x79],eax
  40996a:	pushf  
  40996b:	jmp    0x3bd15937
  409970:	and    DWORD PTR [eax-0x3274af0a],eax
  409976:	mov    bl,0x44
  409978:	sub    cl,bl
  40997a:	aaa    
  40997b:	icebp  
  40997c:	les    ebx,FWORD PTR [ecx]
  40997e:	cmc    
  40997f:	mov    esp,0x982ae89c
  409984:	sub    DWORD PTR [esi-0x18],0xfffffff6
  409988:	es jp  0x409933
  40998b:	mov    eax,0x5d31bbf0
  409990:	push   edi
  409991:	sbb    dh,bh
  409993:	fisubr WORD PTR [esi]
  409995:	push   gs
  409997:	lds    ebp,FWORD PTR [eax]
  409999:	push   ebx
  40999a:	mov    ebp,0xa081b689
  40999f:	mov    ds:0x48a6ec8b,al
  4099a4:	xchg   edx,eax
  4099a5:	sub    eax,0xe0169d0c
  4099aa:	jge    0x409982
  4099ac:	mov    ah,0x91
  4099ae:	pop    edi
  4099af:	leave  
  4099b0:	icebp  
  4099b1:	or     DWORD PTR [ebx-0x15],esi
  4099b4:	sahf   
  4099b5:	lods   eax,DWORD PTR ds:[esi]
  4099b6:	imul   ebp,eax,0xc3935080
  4099bc:	dec    eax
  4099bd:	inc    ecx
  4099be:	or     edi,edi
  4099c0:	scas   al,BYTE PTR es:[edi]
  4099c1:	pop    ss
  4099c2:	sub    BYTE PTR [esi],bl
  4099c4:	cwde   
  4099c5:	fdivr  QWORD PTR [eax-0x2823065]
  4099cb:	inc    ebp
  4099cc:	xchg   edx,eax
  4099cd:	cwde   
  4099ce:	jp     0x409a0c
  4099d0:	push   0x9f8c73f2
  4099d5:	lds    esp,FWORD PTR [esp+eiz*4]
  4099d8:	test   BYTE PTR [ecx+0x65],bl
  4099db:	inc    edx
  4099dc:	xchg   esp,eax
  4099dd:	repz fstp DWORD PTR [esi+0x4262709]
  4099e4:	ins    BYTE PTR es:[edi],dx
  4099e5:	dec    eax
  4099e6:	popf   
  4099e7:	mov    ebx,DWORD PTR [esi+ebp*2+0x1a45c0ed]
  4099ee:	dec    edi
  4099ef:	ss mov ebx,0xde909b7a
  4099f5:	fwait
  4099f6:	push   ss
  4099f7:	loope  0x40997e
  4099f9:	aad    0x17
  4099fb:	and    DWORD PTR [edx+0x51685232],ecx
  409a01:	stc    
  409a02:	jae    0x4099e5
  409a04:	add    ebx,DWORD PTR [eax+0x52147fae]
  409a0a:	jnp    0x4099e4
  409a0c:	pshufw mm4,QWORD PTR [esi+0x72],0x1c
  409a11:	or     BYTE PTR [ebp-0x58],dl
  409a14:	pop    esi
  409a15:	out    0x67,eax
  409a17:	jp     0x409a31
  409a19:	call   0x1aa0:0x9c5a7e83
  409a20:	mov    cl,0xc2
  409a22:	jl     0x409a3c
  409a24:	lock mov esp,cs
  409a27:	jg     0x4099e3
  409a29:	mov    eax,ds:0xf8e99198
  409a2e:	loope  0x409a5e
  409a30:	aam    0xb1
  409a32:	sub    esp,DWORD PTR [ebx-0x7f62eeae]
  409a38:	mov    cl,0xca
  409a3a:	addr16 jo 0xae0e006e
  409a41:	popf   
  409a42:	je     0x409a46
  409a44:	in     eax,0x2c
  409a46:	(bad)  [esi+0x75]
  409a49:	ins    DWORD PTR es:[edi],dx
  409a4a:	mov    esi,0xcfbc96fd
  409a4f:	mov    eax,0xd34e789
  409a54:	bound  ebp,QWORD PTR [ebx-0x46fc8c3d]
  409a5a:	xchg   ebp,eax
  409a5b:	dec    eax
  409a5c:	fldenv [edi+0x3abb6348]
  409a62:	mov    ds,WORD PTR [ebx-0x50f54ac0]
  409a68:	sub    dl,BYTE PTR [ebx-0xf91c246]
  409a6e:	ds ss das 
  409a71:	adc    DWORD PTR [ebx-0x6d],esi
  409a74:	mov    esp,0xd56ca558
  409a79:	push   ebp
  409a7a:	mov    WORD PTR [ebp-0x2a],gs
  409a7d:	out    dx,eax
  409a7e:	or     eax,0x464becd
  409a83:	add    al,0x56
  409a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a86:	mov    ds:0x7ed4d5b2,al
  409a8b:	retf   0x80a3
  409a8e:	into   
  409a8f:	push   esi
  409a90:	or     esp,DWORD PTR [ebp+0x29a19390]
  409a96:	inc    edi
  409a97:	repz pop ebp
  409a99:	call   0x81ba7d65
  409a9e:	and    cl,BYTE PTR [edi-0x7]
  409aa1:	sub    BYTE PTR fs:[edx],ch
  409aa4:	cli    
  409aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa6:	or     ebx,DWORD PTR [ebx]
  409aa8:	je     0x409a73
  409aaa:	(bad)  
  409aab:	xchg   esi,eax
  409aac:	inc    esi
  409aad:	mov    ebp,0x845ae082
  409ab2:	mov    dh,0x4e
  409ab4:	mov    ds:0xf8b804b5,eax
  409ab9:	adc    ch,ah
  409abb:	add    BYTE PTR [ecx+0x75],cl
  409abe:	iret   
  409abf:	test   eax,0x75582cc2
  409ac4:	daa    
  409ac5:	div    DWORD PTR [ebx]
  409ac7:	pop    eax
  409ac8:	jg     0x409a70
  409aca:	(bad)  
  409acb:	cld    
  409acc:	fcmovnb st,st(4)
  409acf:	mov    dh,0xc0
  409ad1:	in     al,dx
  409ad2:	jp     0x409aaa
  409ad4:	and    al,0xd1
  409ad6:	outs   dx,BYTE PTR ds:[esi]
  409ad7:	jp     0x409ab2
  409ad9:	push   edx
  409ada:	nop
  409adb:	jp     0x409aef
  409add:	pop    ss
  409ade:	lods   al,BYTE PTR ds:[esi]
  409adf:	pushf  
  409ae0:	mov    eax,0xeaed92d3
  409ae5:	pop    edx
  409ae6:	out    0x2b,eax
  409ae8:	cli    
  409ae9:	xchg   esp,eax
  409aea:	loopne 0x409b0e
  409aec:	cld    
  409aed:	or     dl,ah
  409aef:	push   eax
  409af0:	or     BYTE PTR [edi+0x61584f84],ch
  409af6:	jne    0x409b1a
  409af8:	push   esi
  409af9:	push   eax
  409afa:	imul   esp,DWORD PTR [esi+0x74d15411],0x4c207c71
  409b04:	jmp    0x409b72
  409b06:	push   ss
  409b07:	pop    esp
  409b08:	mov    cl,0x5b
  409b0a:	xchg   ecx,eax
  409b0b:	jle    0x409b4f
  409b0d:	sbb    eax,DWORD PTR [edx-0x6d7357a2]
  409b13:	mov    eax,DWORD PTR [ebp-0x7e]
  409b16:	add    DWORD PTR [edi-0x3a],esi
  409b19:	inc    ebp
  409b1a:	jmp    0xc0212ac0
  409b1f:	inc    eax
  409b20:	das    
  409b21:	loopne 0x409b4a
  409b23:	mov    dh,BYTE PTR [ecx]
  409b25:	pushf  
  409b26:	in     al,dx
  409b27:	es push ebp
  409b29:	add    BYTE PTR [edx],dl
  409b2b:	sub    ebp,DWORD PTR [eax+0x69]
  409b2e:	dec    dh
  409b30:	sbb    DWORD PTR [ebp+0x6a],esi
  409b33:	add    BYTE PTR [edx],bl
  409b35:	jl     0x409b8c
  409b37:	fstp   TBYTE PTR [edx+0x47669a68]
  409b3d:	mov    al,BYTE PTR [eax+0x2fd0ce68]
  409b43:	aad    0x60
  409b45:	mov    eax,0x4d902359
  409b4a:	sub    ebp,ebp
  409b4c:	xor    ebp,DWORD PTR [esi-0x2491d952]
  409b52:	int    0xfb
  409b54:	mov    ebp,0xf7edc4cd
  409b59:	mov    gs,WORD PTR fs:[ebx-0x21c92c4e]
  409b60:	mov    ebp,0xaf3cce34
  409b65:	xlat   BYTE PTR ds:[ebx]
  409b66:	jns    0x409be2
  409b68:	scas   al,BYTE PTR es:[edi]
  409b69:	jno    0x409b76
  409b6b:	mov    ch,0x5d
  409b6d:	jns    0x409b6a
  409b6f:	or     esi,esi
  409b71:	in     eax,0x47
  409b73:	mov    eax,ds:0x439d5bd
  409b78:	push   esi
  409b79:	push   edx
  409b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b7c:	cmp    dh,BYTE PTR ds:0xa8558856
  409b82:	and    al,0xc0
  409b84:	or     DWORD PTR [ebx+0x6478a170],ebx
  409b8a:	call   0x160a:0x7dc6d01
  409b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b92:	addr16 cmp eax,0x46ab6e16
  409b98:	pop    edi
  409b99:	sahf   
  409b9a:	xor    edi,DWORD PTR [ecx+0x1741e92b]
  409ba0:	repz pop ebx
  409ba2:	lea    edi,[ebx-0x31]
  409ba5:	pop    DWORD PTR [edx]
  409ba7:	inc    ebp
  409ba8:	xchg   edi,eax
  409ba9:	addr16 nop
  409bab:	cdq    
  409bac:	fdivr  st,st(1)
  409bae:	xchg   edi,eax
  409baf:	adc    al,0xa2
  409bb1:	fist   DWORD PTR [ebp+0x31]
  409bb4:	jecxz  0x409bc2
  409bb6:	mov    ds:0x79d92946,eax
  409bbb:	or     bh,ch
  409bbd:	rcr    BYTE PTR [ebp-0x75],cl
  409bc0:	ret    0x409b
  409bc3:	ds aas 
  409bc5:	ins    BYTE PTR es:[edi],dx
  409bc6:	dec    ebx
  409bc7:	out    0x45,eax
  409bc9:	mov    dl,0x6f
  409bcb:	sub    DWORD PTR [edi-0x4a],edi
  409bce:	das    
  409bcf:	mov    ds:0x41d56d04,al
  409bd4:	pop    esp
  409bd5:	add    al,0xc4
  409bd7:	ss mov edi,0x9d31898b
  409bdd:	daa    
  409bde:	or     DWORD PTR [ecx],edi
  409be0:	loop   0x409c07
  409be2:	mov    ds:0xfe0322e3,eax
  409be7:	sub    DWORD PTR [edx+ebp*8+0x5b03931c],ebx
  409bee:	clc    
  409bef:	xchg   edx,eax
  409bf0:	loopne 0x409b9b
  409bf2:	and    BYTE PTR [ebx-0x68],0x10
  409bf6:	lods   al,BYTE PTR ds:[esi]
  409bf7:	push   edi
  409bf8:	in     eax,dx
  409bf9:	stos   BYTE PTR es:[edi],al
  409bfa:	rcr    ch,0x90
  409bfd:	mov    edx,DWORD PTR [eax]
  409bff:	sbb    cl,0xfc
  409c02:	imul   esi,DWORD PTR [ebp+0x18],0x89f19102
  409c09:	fsubr  DWORD PTR [ebp-0x36]
  409c0c:	rcpps  xmm5,XMMWORD PTR [ebp+0x30685724]
  409c13:	inc    esi
  409c14:	sti    
  409c15:	sbb    al,0x4a
  409c17:	sbb    edi,DWORD PTR [edx-0x769cab0a]
  409c1d:	les    esi,FWORD PTR [ecx+0x25]
  409c20:	in     al,dx
  409c21:	jp     0x409c2b
  409c23:	ins    BYTE PTR es:[edi],dx
  409c24:	jmp    0xdaa4:0xbc56f796
  409c2b:	and    eax,0xde4cda49
  409c30:	cdq    
  409c31:	adc    DWORD PTR [edx],ebx
  409c33:	jno    0x409c06
  409c35:	test   DWORD PTR [ecx+edi*4-0x64],esp
  409c39:	jmp    DWORD PTR [ebx-0x3]
  409c3c:	pop    ecx
  409c3d:	mov    esi,0x908f8e1
  409c42:	mov    esi,0xb32ca1d4
  409c47:	add    eax,eax
  409c49:	and    eax,0xc891f1a9
  409c4e:	adc    al,bh
  409c50:	loope  0x409bf4
  409c52:	jo     0x409c19
  409c54:	daa    
  409c55:	xchg   ebx,eax
  409c56:	push   edx
  409c57:	xchg   ebp,eax
  409c58:	imul   esi,DWORD PTR [esi+0x52],0x2
  409c5c:	stos   BYTE PTR es:[edi],al
  409c5d:	xor    eax,0x2a94e3e2
  409c62:	arpl   WORD PTR [edi+eax*4-0x5c],dx
  409c66:	sbb    eax,0x65cc5438
  409c6b:	push   ebp
  409c6c:	aaa    
  409c6d:	fs retf 0xa29c
  409c71:	(bad)  
  409c72:	iret   
  409c73:	(bad)  
  409c75:	in     al,0x1a
  409c77:	xchg   ebp,eax
  409c78:	fmul   QWORD PTR [edi+0x19c93348]
  409c7e:	rcr    BYTE PTR [edx+0x6038a9b4],0x6a
  409c85:	push   0x6052467e
  409c8a:	push   eax
  409c8b:	popa   
  409c8c:	call   0x9500:0x45dd0d55
  409c93:	or     cl,BYTE PTR [eax]
  409c95:	jle    0x409c66
  409c97:	xchg   edx,eax
  409c98:	pop    ecx
  409c99:	fist   DWORD PTR [edi+0x68]
  409c9c:	fisubr WORD PTR ds:0xd71145e4
  409ca2:	repnz retf 0xc56d
  409ca6:	sub    BYTE PTR [esi],bl
  409ca8:	or     eax,0x6616f2c
  409cad:	(bad)  
  409cae:	out    0xe3,al
  409cb0:	inc    ebp
  409cb1:	out    dx,eax
  409cb2:	es es cmp eax,0x82dedba6
  409cb9:	(bad)  
  409cbb:	stos   DWORD PTR es:[edi],eax
  409cbc:	lahf   
  409cbd:	push   es
  409cbe:	xchg   edi,eax
  409cbf:	pop    esp
  409cc0:	cmp    al,0x36
  409cc2:	and    BYTE PTR [edx],cl
  409cc4:	nop
  409cc5:	inc    eax
  409cc6:	adc    BYTE PTR [edi+0x25],dh
  409cc9:	mov    ?,WORD PTR ds:0x41241af8
  409ccf:	add    esi,DWORD PTR [esi+eiz*4]
  409cd2:	add    edi,edi
  409cd4:	sub    edi,DWORD PTR [eax+ecx*1-0x46]
  409cd8:	loopne 0x409d58
  409cda:	in     eax,dx
  409cdb:	mov    DWORD PTR [ecx+esi*1+0x4],0x9695990
  409ce3:	addr16 mov ebx,0x1203ba96
  409ce9:	xchg   edi,eax
  409cea:	jne    0x409c6d
  409cec:	xor    BYTE PTR [edi],al
  409cee:	hlt    
  409cef:	enter  0xc26c,0x21
  409cf3:	shl    cl,1
  409cf5:	imul   ebp,ebp,0xffffffbc
  409cf8:	popa   
  409cf9:	jne    0x409cb4
  409cfb:	inc    eax
  409cfc:	adc    al,0xed
  409cfe:	out    0x98,al
  409d00:	add    edx,DWORD PTR [ebx+0x4d]
  409d03:	rcl    DWORD PTR [edx-0x41],0xef
  409d07:	xchg   ebx,eax
  409d08:	dec    eax
  409d09:	repnz push edx
  409d0b:	out    dx,eax
  409d0c:	iret   
  409d0d:	adc    eax,0x76f47518
  409d12:	imul   esp,DWORD PTR [ecx+0x4b3f59cd],0xb445efd7
  409d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d1d:	sar    BYTE PTR [esi-0x3035d132],cl
  409d23:	retf   0xd841
  409d26:	add    DWORD PTR [ebx],esi
  409d28:	icebp  
  409d29:	sar    BYTE PTR [eax-0x7ed0184d],cl
  409d2f:	and    ch,BYTE PTR [eax-0x75]
  409d32:	out    0x49,eax
  409d34:	(bad)  
  409d35:	shr    BYTE PTR [eax-0x111b77dd],1
  409d3b:	dec    eax
  409d3c:	mov    ebp,0x93f26b40
  409d41:	fincstp 
  409d43:	shl    BYTE PTR [eax],0x3f
  409d46:	or     eax,0x817d89e
  409d4b:	lea    eax,[esi+0x4fd92f8b]
  409d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d52:	mov    bl,0xcc
  409d54:	sbb    al,0xe4
  409d56:	sbb    edi,edi
  409d58:	repz jmp 0xd86e:0xce963111
  409d60:	fldcw  WORD PTR [edi-0x5f8ea73f]
  409d66:	sub    eax,DWORD PTR [edx+0x76]
  409d69:	enter  0xf4db,0xc9
  409d6d:	mov    BYTE PTR [ebp+eiz*4+0x7db3fdc0],al
  409d74:	sub    bl,BYTE PTR [eax]
  409d76:	mov    esp,0xdcd2b648
  409d7b:	xchg   ebx,eax
  409d7c:	and    al,0x46
  409d7e:	mov    edx,0xebacbbe5
  409d83:	sub    al,0x9
  409d85:	sbb    DWORD PTR [edx+eiz*4],esi
  409d88:	ret    0x1de6
  409d8b:	cs xchg ebx,eax
  409d8d:	je     0x409d22
  409d8f:	pop    ebp
  409d90:	scas   eax,DWORD PTR es:[edi]
  409d91:	inc    edi
  409d92:	xlat   BYTE PTR ds:[ebx]
  409d93:	loope  0x409d67
  409d95:	not    DWORD PTR [ebx]
  409d97:	outs   dx,DWORD PTR ds:[esi]
  409d98:	push   ebp
  409d99:	mov    al,0x74
  409d9b:	push   ss
  409d9c:	xchg   ebx,eax
  409d9d:	out    0x88,al
  409d9f:	std    
  409da0:	aam    0x7e
  409da2:	ret    
  409da3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409da4:	retf   0x4785
  409da7:	add    al,ah
  409da9:	js     0x409d45
  409dab:	outs   dx,BYTE PTR ds:[esi]
  409dac:	dec    ebx
  409dad:	(bad)  
  409dae:	in     al,dx
  409daf:	retf   0x6c31
  409db2:	data16 jae 0x409dad
  409db5:	fdivrp st(3),st
  409db7:	mov    esi,DWORD PTR ds:0xae3e89cb
  409dbd:	adc    eax,0xf5fe15a4
  409dc2:	sub    al,0xff
  409dc4:	add    ecx,DWORD PTR [edx]
  409dc6:	inc    eax
  409dc7:	push   ecx
  409dc8:	int3   
  409dc9:	cmp    bl,ch
  409dcb:	jg     0x409dc0
  409dcd:	loopne 0x409dc3
  409dcf:	sbb    DWORD PTR [esi],ebx
  409dd1:	sbb    DWORD PTR [ebp+0x38be6631],0x22
  409dd8:	fimul  WORD PTR [ebx-0x3e25e56f]
  409dde:	mov    ebx,0x46d99765
  409de3:	cs pop esp
  409de5:	inc    esp
  409de6:	sub    eax,0xdb0fe211
  409deb:	dec    eax
  409dec:	loop   0x409e24
  409dee:	mov    ch,0x63
  409df0:	add    al,0x98
  409df2:	aad    0x1c
  409df4:	mov    bl,0x5b
  409df6:	push   ebp
  409df7:	push   ss
  409df8:	inc    esi
  409df9:	arpl   WORD PTR [edx-0x1],si
  409dfc:	and    dh,BYTE PTR [edx-0x77]
  409dff:	(bad)  
  409e00:	sub    bh,bl
  409e02:	or     al,0x3d
  409e04:	push   edx
  409e05:	jnp    0x409e18
  409e07:	ror    esp,1
  409e09:	xor    al,0x89
  409e0b:	mov    gs,WORD PTR ds:0x9be3635a
  409e11:	cs in  eax,dx
  409e13:	into   
  409e14:	ins    DWORD PTR es:[edi],dx
  409e15:	pop    eax
  409e16:	inc    ecx
  409e17:	inc    ecx
  409e18:	or     DWORD PTR [esi+edx*4],ecx
  409e1b:	ds out 0x59,al
  409e1e:	icebp  
  409e1f:	aad    0xf6
  409e21:	mov    esp,0x3b0f9035
  409e26:	mov    es,WORD PTR [ebp+0x2deeada5]
  409e2c:	sub    esp,eax
  409e2e:	in     eax,dx
  409e2f:	inc    esi
  409e30:	scas   eax,DWORD PTR es:[edi]
  409e31:	lahf   
  409e32:	stos   DWORD PTR es:[edi],eax
  409e33:	sti    
  409e34:	fsub   QWORD PTR [esp+eax*4+0x6d487d3d]
  409e3b:	inc    ebx
  409e3c:	jp     0x409de4
  409e3e:	fnstenv [ebp-0x47]
  409e41:	(bad)  
  409e42:	cdq    
  409e43:	icebp  
  409e44:	stc    
  409e45:	or     DWORD PTR [edi+0x7],ecx
  409e48:	jnp    0x409ded
  409e4a:	xchg   ecx,eax
  409e4b:	cmp    eax,0x10736b7a
  409e50:	pop    esi
  409e51:	inc    ecx
  409e52:	pop    ss
  409e53:	jbe    0x409deb
  409e55:	xchg   ebx,eax
  409e56:	test   al,0xf9
  409e58:	or     bl,BYTE PTR [ebx+0x3a400ad]
  409e5e:	sub    BYTE PTR [esi-0x2a8b5c16],ch
  409e64:	jl     0x409e5b
  409e66:	dec    edi
  409e67:	in     al,0x1e
  409e69:	cmp    eax,0x876d375b
  409e6e:	mov    edi,DWORD PTR [ebp+eiz*2+0x32]
  409e72:	adc    esp,DWORD PTR [ebx+eax*2+0x5f]
  409e76:	in     eax,dx
  409e77:	nop
  409e78:	sub    esi,DWORD PTR [eax+0x17]
  409e7b:	inc    eax
  409e7c:	jmp    0x409ed1
  409e7e:	or     edx,DWORD PTR [ebx]
  409e80:	xlat   BYTE PTR ds:[ebx]
  409e81:	mov    WORD PTR [edi+0x37],?
  409e84:	mov    ebp,0xb88cd367
  409e89:	xlat   BYTE PTR ds:[ebx]
  409e8a:	les    edi,FWORD PTR [esi+0x73]
  409e8d:	scas   al,BYTE PTR es:[edi]
  409e8e:	ins    DWORD PTR es:[edi],dx
  409e8f:	stos   BYTE PTR es:[edi],al
  409e90:	(bad)  [ebp+0x49]
  409e93:	scas   al,BYTE PTR es:[edi]
  409e94:	add    al,0xbd
  409e96:	xchg   esi,eax
  409e97:	and    al,0xee
  409e99:	lods   al,BYTE PTR ds:[esi]
  409e9a:	cdq    
  409e9b:	(bad)  
  409e9c:	mov    edi,0xd837e1bb
  409ea1:	js     0x409e59
  409ea3:	lock mov dl,0xde
  409ea6:	inc    ebx
  409ea7:	mov    ?,WORD PTR [edx+ecx*2]
  409eaa:	adc    eax,0xc57bee3
  409eaf:	push   es
  409eb0:	adc    eax,0xadf713dc
  409eb5:	call   0x2b61:0x74a9a9b0
  409ebc:	or     eax,0x8020281a
  409ec1:	mov    esi,0x6436a03d
  409ec6:	push   ebp
  409ec7:	pop    eax
  409ec8:	ret    0x5b32
  409ecb:	fidiv  WORD PTR [ebp-0x56]
  409ece:	inc    esp
  409ecf:	sar    BYTE PTR [edx+ebp*4],1
  409ed2:	push   eax
  409ed3:	ss fs fs neg edx
  409ed8:	sahf   
  409ed9:	and    BYTE PTR [ebx-0x78],ch
  409edc:	mov    bl,0x5b
  409ede:	out    0x65,al
  409ee0:	push   ebp
  409ee1:	test   BYTE PTR [edx],0xae
  409ee4:	dec    ebp
  409ee5:	cmp    esi,DWORD PTR [eax+0x6d]
  409ee8:	nop
  409ee9:	xchg   esi,eax
  409eea:	inc    ecx
  409eeb:	(bad)  
  409eec:	(bad)  
  409eed:	nop
  409eee:	push   esi
  409eef:	xchg   esp,eax
  409ef0:	sbb    DWORD PTR [ebx-0x26],esi
  409ef3:	add    al,0x9d
  409ef5:	in     al,0x4c
  409ef7:	not    DWORD PTR [edx]
  409ef9:	dec    edx
  409efa:	jmp    0xa8d9f400
  409eff:	cmc    
  409f00:	mov    dh,0xa7
  409f02:	adc    ecx,ebx
  409f04:	xchg   esi,eax
  409f05:	pusha  
  409f06:	test   eax,0x73232e8d
  409f0b:	jp     0x409f29
  409f0d:	push   ebx
  409f0e:	adc    eax,0x1fd5473
  409f13:	retf   
  409f14:	adc    ch,dl
  409f16:	adc    eax,0x6d42e76f
  409f1b:	xor    dl,ah
  409f1d:	jmp    0xbdf0d288
  409f22:	cs pushf 
  409f24:	mov    cl,0xed
  409f26:	mov    ebp,ebx
  409f28:	mov    esp,0x16d65e40
  409f2d:	(bad)  
  409f2e:	add    eax,0xae191e50
  409f33:	xlat   BYTE PTR ds:[ebx]
  409f34:	lds    ebx,FWORD PTR ds:0x956694cf
  409f3a:	mov    edi,DWORD PTR [edx]
  409f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f3d:	fimul  DWORD PTR [esi+0x16ca55e2]
  409f43:	or     edx,DWORD PTR [ecx-0x3a197a97]
  409f49:	fcomp  QWORD PTR [esi+0x63264f7a]
  409f4f:	add    ebx,DWORD PTR [ebp-0xe0b72f1]
  409f55:	scas   eax,DWORD PTR es:[edi]
  409f56:	iret   
  409f57:	retf   
  409f58:	ins    DWORD PTR es:[edi],dx
  409f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f5a:	ss jns 0x409fc0
  409f5d:	xor    BYTE PTR [edx-0xe1182f7],ah
  409f63:	mov    esi,ebp
  409f65:	test   dh,0x89
  409f68:	jp     0x409f7d
  409f6a:	xchg   esi,eax
  409f6b:	sbb    DWORD PTR [edi-0x5e6b7a65],edi
  409f71:	xlat   BYTE PTR ds:[ebx]
  409f72:	mov    ebp,0xc23e0503
  409f77:	fnstsw WORD PTR [edx-0x20]
  409f7a:	pop    esi
  409f7b:	dec    esp
  409f7c:	test   BYTE PTR [esi+0x76171ef3],cl
  409f82:	cmp    eax,0xe0d5f594
  409f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f88:	popf   
  409f89:	sub    eax,0x32b817ba
  409f8e:	xlat   BYTE PTR ds:[ebx]
  409f8f:	sahf   
  409f90:	arpl   WORD PTR [edx-0x4a9e69a3],si
  409f96:	dec    ebp
  409f97:	pop    ebx
  409f98:	lods   al,BYTE PTR ds:[esi]
  409f99:	nop
  409f9a:	and    al,0x57
  409f9c:	cmc    
  409f9d:	arpl   ax,bx
  409f9f:	cdq    
  409fa0:	mov    edi,0x12209916
  409fa5:	or     eax,0xfc84c37b
  409faa:	call   0xe733:0x1076db74
  409fb1:	pop    edi
  409fb2:	jmp    0xf9c6b784
  409fb7:	out    0x83,al
  409fb9:	call   0xc8e36640
  409fbe:	lock xor eax,ecx
  409fc1:	in     al,0x8d
  409fc3:	jno    0x409fe4
  409fc5:	dec    ebx
  409fc6:	pop    ss
  409fc7:	and    al,0x97
  409fc9:	push   0xffffffd6
  409fcb:	dec    ebx
  409fcc:	scas   eax,DWORD PTR es:[edi]
  409fcd:	cmp    BYTE PTR [esi],bh
  409fcf:	push   edx
  409fd0:	shr    DWORD PTR [ecx-0x67],1
  409fd3:	push   edi
  409fd4:	xor    dh,BYTE PTR [ebx-0x4efe81a9]
  409fda:	add    ah,BYTE PTR [ebx-0xa]
  409fdd:	(bad)  [eax+0x7c1a041]
  409fe3:	add    eax,0x83f1810e
  409fe8:	ret    0xf573
  409feb:	jle    0x409ff6
  409fed:	rcr    bh,1
  409fef:	inc    esp
  409ff0:	add    eax,0x877bcb2e
  409ff5:	into   
  409ff6:	jg     0x409fe2
  409ff8:	push   cs
  409ff9:	push   0x43
  409ffb:	push   es
  409ffc:	fs (bad) 
  409fff:	xlat   BYTE PTR ds:[ebx]
  40a000:	scas   eax,DWORD PTR es:[edi]
  40a001:	arpl   di,cx
  40a003:	mov    esi,0x2f451c21
  40a008:	inc    esp
  40a009:	push   esp
  40a00a:	or     cl,ch
  40a00c:	ins    DWORD PTR es:[edi],dx
  40a00d:	push   edx
  40a00e:	arpl   WORD PTR [esi-0x5a],bp
  40a011:	jns    0x409fd8
  40a013:	push   ebx
  40a014:	pop    ebp
  40a015:	inc    esp
  40a016:	pop    esi
  40a017:	push   0x1
  40a019:	or     edx,DWORD PTR [esp+edx*4]
  40a01c:	pop    ecx
  40a01d:	and    BYTE PTR [edi-0x49],bh
  40a020:	mov    al,BYTE PTR [ebx+0x0]
  40a023:	sbb    edi,DWORD PTR [edx-0x2dbd272c]
  40a029:	sub    eax,0xaeb1bebf
  40a02e:	lds    ebx,FWORD PTR [ebx]
  40a030:	out    0x38,eax
  40a032:	ins    BYTE PTR es:[edi],dx
  40a033:	out    dx,eax
  40a034:	ins    BYTE PTR es:[edi],dx
  40a035:	mov    esp,0x966ab1aa
  40a03a:	inc    edx
  40a03b:	lock push esp
  40a03d:	push   0xffffff9f
  40a03f:	jle    0x409fc2
  40a041:	outs   dx,BYTE PTR ds:[esi]
  40a042:	or     al,0xa4
  40a044:	mov    DWORD PTR [esi-0x55],ecx
  40a047:	std    
  40a048:	enter  0x15b0,0xc0
  40a04c:	fidivr WORD PTR [esi]
  40a04e:	xor    al,0xfe
  40a050:	mov    ds:0xc184a586,al
  40a055:	add    DWORD PTR [ebp-0xf388acb],edi
  40a05b:	lahf   
  40a05c:	sub    al,0x46
  40a05e:	jmp    0xee70:0xf0d2d52a
  40a065:	sub    bh,BYTE PTR [ebx+0x13]
  40a068:	pop    ebx
  40a069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a06a:	jne    0x40a07f
  40a06c:	xor    dl,0x93
  40a06f:	dec    esi
  40a070:	xchg   esp,eax
  40a071:	outs   dx,DWORD PTR ds:[esi]
  40a072:	add    al,0x76
  40a074:	loopne 0x40a034
  40a076:	mov    esi,0xe9e511f7
  40a07b:	jo     0x40a0f8
  40a07d:	pop    ecx
  40a07e:	test   eax,0x30fbcb9d
  40a083:	prefetch BYTE PTR [esi+ebp*1]
  40a087:	dec    esi
  40a088:	es pop ebp
  40a08a:	push   ebp
  40a08b:	lds    edx,FWORD PTR fs:[ebx-0x6fb36431]
  40a092:	mov    esi,0x470ff557
  40a097:	icebp  
  40a098:	call   0x95fa:0x8578d480
  40a09f:	xor    DWORD PTR [eax],eax
  40a0a1:	ret    0x85d1
  40a0a4:	(bad)  
  40a0a5:	fdivr  st,st(7)
  40a0a7:	sbb    edi,DWORD PTR [ebx]
  40a0a9:	pop    ss
  40a0aa:	in     al,dx
  40a0ab:	pop    eax
  40a0ac:	scas   eax,DWORD PTR es:[edi]
  40a0ad:	adc    DWORD PTR [ebx+0x57498ffc],ebx
  40a0b3:	sub    eax,0xc8942a56
  40a0b8:	fwait
  40a0b9:	stos   DWORD PTR es:[edi],eax
  40a0ba:	xchg   dl,cl
  40a0bc:	mov    edi,0x4bdca513
  40a0c1:	cmp    edi,DWORD PTR [ebp+0x32c86cb3]
  40a0c7:	or     DWORD PTR [esi-0x3a1f1858],0x2b219c5e
  40a0d1:	mov    edi,gs
  40a0d3:	mov    al,0x1a
  40a0d5:	xlat   BYTE PTR ds:[ebx]
  40a0d6:	adc    DWORD PTR [edi-0x2a],ebx
  40a0d9:	mov    eax,0xcbeebc1b
  40a0de:	je     0x40a0e9
  40a0e0:	cld    
  40a0e1:	outs   dx,BYTE PTR ds:[esi]
  40a0e2:	(bad)  
  40a0e3:	aad    0xf6
  40a0e5:	mov    al,gs:0x3b5cb51c
  40a0eb:	pop    esp
  40a0ec:	inc    BYTE PTR [ebp-0x52]
  40a0ef:	rcl    BYTE PTR ds:[ecx],0x8e
  40a0f3:	das    
  40a0f4:	xchg   ebp,eax
  40a0f5:	jp     0x40a113
  40a0f7:	sub    ecx,edi
  40a0f9:	retf   
  40a0fa:	cmc    
  40a0fb:	add    al,0xf
  40a0fd:	(bad)  
  40a0fe:	jmp    0x40a16f
  40a100:	pop    ds
  40a101:	jbe    0x40a0f0
  40a103:	call   0x22f7:0xc6c1932f
  40a10a:	imul   edi,edi,0x3c
  40a10d:	(bad)  
  40a10e:	ror    DWORD PTR cs:[eax+0x313743b9],1
  40a115:	and    ecx,DWORD PTR [ebx]
  40a117:	lahf   
  40a118:	sub    esi,esi
  40a11a:	cmp    BYTE PTR [ecx+edx*2-0xf],ah
  40a11e:	jo     0x40a0ba
  40a120:	psrlq  mm6,QWORD PTR [eax+0x61]
  40a124:	ins    DWORD PTR es:[edi],dx
  40a125:	lods   eax,DWORD PTR ds:[esi]
  40a126:	and    DWORD PTR [esp+esi*8-0x37],edi
  40a12a:	mov    ebx,ecx
  40a12c:	call   0xdcf5:0x79f4dc6b
  40a133:	cmp    DWORD PTR [esi],eax
  40a135:	int3   
  40a136:	pop    es
  40a137:	jno    0x40a0bd
  40a139:	sub    edx,ebp
  40a13b:	or     bl,bl
  40a13d:	ss mov dh,0x7c
  40a140:	and    ah,0xa4
  40a143:	xlat   BYTE PTR ds:[ebx]
  40a144:	int    0xaf
  40a146:	inc    esi
  40a148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a149:	adc    eax,DWORD PTR [edx+0x4e]
  40a14c:	and    al,0xef
  40a14e:	xchg   esp,eax
  40a14f:	nop
  40a150:	pop    eax
  40a151:	leave  
  40a152:	pushf  
  40a153:	adc    bl,BYTE PTR [eax-0x2d]
  40a156:	dec    eax
  40a157:	jbe    0x40a15c
  40a159:	mov    al,ch
  40a15b:	ret    0x4d21
  40a15e:	dec    ebp
  40a15f:	lods   eax,DWORD PTR ds:[esi]
  40a160:	adc    eax,0x72ae6918
  40a165:	push   esi
  40a166:	cmc    
  40a167:	fdivr  st,st(3)
  40a169:	hlt    
  40a16a:	icebp  
  40a16b:	mov    ebp,0xff342163
  40a170:	mov    ebp,0xe6388b66
  40a175:	xchg   bh,al
  40a177:	aas    
  40a178:	loope  0x40a141
  40a17a:	shl    dh,cl
  40a17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a17d:	in     al,dx
  40a17e:	sub    eax,0x24a6b86
  40a183:	push   ebp
  40a184:	imul   ecx,ecx,0x5c6daf0c
  40a18a:	jb     0x40a1e8
  40a18c:	xor    BYTE PTR [edx+0x7],ch
  40a18f:	xor    DWORD PTR es:[ecx],edx
  40a192:	sbb    ebp,DWORD PTR [edi+0xa]
  40a195:	adc    DWORD PTR [edi],esp
  40a197:	xchg   ecx,eax
  40a198:	mov    esp,DWORD PTR [edx+0x31]
  40a19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a19c:	(bad)  
  40a19d:	fsubr  DWORD PTR [ebp-0x67]
  40a1a0:	scas   al,BYTE PTR es:[edi]
  40a1a1:	mov    al,ds:0xb2e6b262
  40a1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1a7:	xor    DWORD PTR [ebp-0x4aaff2e],edx
  40a1ad:	xchg   ebx,eax
  40a1ae:	mov    esp,0x92e91488
  40a1b3:	sbb    cl,BYTE PTR [edx+edx*8-0x64]
  40a1b7:	inc    eax
  40a1b8:	mov    al,0x64
  40a1ba:	cdq    
  40a1bb:	mov    bl,BYTE PTR [ecx-0x2282cf2e]
  40a1c1:	inc    eax
  40a1c2:	fild   QWORD PTR [edx+0x20]
  40a1c5:	mov    al,BYTE PTR ds:0x1f47d4b6
  40a1cb:	mov    al,0x4a
  40a1cd:	xor    eax,0x3f5600c1
  40a1d2:	and    DWORD PTR [ecx-0x3021b65a],0xffffffa3
  40a1d9:	jo     0x40a1c8
  40a1db:	mov    ds:0xb5041bca,al
  40a1e0:	hlt    
  40a1e1:	aas    
  40a1e2:	ins    BYTE PTR es:[edi],dx
  40a1e3:	neg    DWORD PTR [esi+0x7b]
  40a1e6:	mov    ds:0x76a18a0b,al
  40a1eb:	aas    
  40a1ec:	jno    0x40a183
  40a1ee:	add    al,0x29
  40a1f0:	ins    DWORD PTR es:[edi],dx
  40a1f1:	aas    
  40a1f2:	retf   0x21da
  40a1f5:	cmc    
  40a1f6:	add    BYTE PTR [eax],ah
  40a1f8:	ret    0xfd15
  40a1fb:	adc    DWORD PTR [ecx-0x26],ebp
  40a1fe:	or     ch,BYTE PTR [ebx]
  40a200:	ins    BYTE PTR es:[edi],dx
  40a201:	iret   
  40a202:	and    ebx,edi
  40a204:	test   bl,ah
  40a206:	mov    esp,0x645a3461
  40a20b:	ds shl dh,cl
  40a20e:	iret   
  40a20f:	pop    ss
  40a210:	lods   eax,DWORD PTR ds:[esi]
  40a211:	ds and esp,esp
  40a214:	xor    DWORD PTR [ebp-0x7779abb],eax
  40a21a:	cmp    ebx,DWORD PTR [esi]
  40a21c:	sub    DWORD PTR [ebx],ebp
  40a21e:	mov    ds:0xd7d75244,eax
  40a223:	jle    0x40a1bc
  40a225:	jo     0x40a1ce
  40a227:	dec    esp
  40a228:	call   0xeadf:0x3b61b4de
  40a22f:	add    ecx,edx
  40a231:	xor    dl,BYTE PTR [ebp+0x44]
  40a234:	ja     0x40a213
  40a236:	xchg   ebp,eax
  40a237:	mov    edi,0x2361bb4a
  40a23c:	adc    BYTE PTR [eax+edi*2+0x3b],ah
  40a240:	in     al,dx
  40a241:	retf   
  40a242:	dec    ebx
  40a243:	xor    al,0x3e
  40a245:	nop/reserved BYTE PTR [ebx+0x58]
  40a249:	push   esi
  40a24a:	or     al,0x99
  40a24c:	adc    esi,DWORD PTR [ecx+0x1de2c1aa]
  40a252:	inc    ah
  40a254:	push   ss
  40a255:	cmp    DWORD PTR [eax],ebx
  40a257:	pop    edx
  40a258:	fld    st(3)
  40a25a:	cmp    cl,0xb0
  40a25d:	sub    ah,BYTE PTR [ebx+0x16ca5ce5]
  40a263:	and    al,0x9c
  40a265:	(bad)  
  40a266:	fsub   st,st(6)
  40a268:	or     eax,0x37081054
  40a26d:	xchg   BYTE PTR [esi],dh
  40a26f:	ror    BYTE PTR [edi-0x3f],1
  40a272:	mov    esp,0x33d2966
  40a277:	fwait
  40a278:	adc    DWORD PTR [ecx+0x32],esi
  40a27b:	pop    ss
  40a27c:	jo     0x40a2a3
  40a27e:	sub    DWORD PTR [ecx],ebx
  40a280:	(bad)  
  40a281:	mov    edx,0x38d60c3b
  40a286:	into   
  40a287:	mov    ds:0xf43be04a,al
  40a28c:	call   0x4ca3:0x814e9d08
  40a293:	fwait
  40a294:	bound  eax,QWORD PTR [ebp+0x37]
  40a297:	and    ecx,esi
  40a299:	sbb    dh,BYTE PTR [eax-0x35198295]
  40a29f:	icebp  
  40a2a0:	popa   
  40a2a1:	mov    gs,WORD PTR [ecx+0x33bd1bc9]
  40a2a7:	test   eax,0xdb8c5350
  40a2ac:	mov    eax,0x5e4f7b2e
  40a2b1:	pop    eax
  40a2b2:	sbb    BYTE PTR [edi-0x56],al
  40a2b5:	aad    0x55
  40a2b7:	mov    eax,ds:0x186f679e
  40a2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bd:	push   0x55
  40a2bf:	enter  0xc96e,0x92
  40a2c3:	cs pop ecx
  40a2c5:	pushf  
  40a2c6:	sub    esi,ebp
  40a2c8:	ds ins BYTE PTR es:[edi],dx
  40a2ca:	stc    
  40a2cb:	sbb    DWORD PTR [edx+0x2e],ebx
  40a2ce:	cld    
  40a2cf:	sbb    al,0xdb
  40a2d1:	fistp  WORD PTR [edi+0x6e6e1356]
  40a2d7:	xchg   DWORD PTR [edx+0x19],edx
  40a2da:	sbb    al,0x32
  40a2dc:	mov    DWORD PTR [edi],ecx
  40a2de:	shl    BYTE PTR [edi],0xb7
  40a2e1:	mov    cl,0xe6
  40a2e3:	pop    ecx
  40a2e4:	(bad)  
  40a2e5:	and    bh,dl
  40a2e7:	enter  0xff9e,0x39
  40a2eb:	and    BYTE PTR [ebp+0x77],0xc6
  40a2ef:	pop    eax
  40a2f0:	add    dl,bl
  40a2f2:	nop
  40a2f3:	shr    BYTE PTR [eax],0x2e
  40a2f6:	call   0xbbce:0xa239e10e
  40a2fd:	cli    
  40a2fe:	inc    esp
  40a2ff:	(bad)  
  40a300:	jb     0x40a318
  40a302:	xor    ebx,DWORD PTR [edx+0x5eb09a5d]
  40a308:	sub    eax,0x65045a95
  40a30d:	arpl   WORD PTR [ecx-0x7dabf33e],sp
  40a313:	lahf   
  40a314:	dec    esi
  40a315:	test   DWORD PTR [eax+0x35d5413c],edi
  40a31b:	cli    
  40a31c:	inc    edi
  40a31d:	gs inc ebp
  40a31f:	xor    al,0xf5
  40a321:	cs test al,0x3c
  40a324:	pop    ebp
  40a325:	mov    ds:0x531e6be4,al
  40a32a:	and    DWORD PTR [ecx-0x49351f01],esp
  40a330:	stos   BYTE PTR es:[edi],al
  40a331:	adc    eax,0x110392a4
  40a336:	sub    cl,bh
  40a338:	sbb    al,BYTE PTR [esi]
  40a33a:	mov    ebp,0x3682c77
  40a33f:	das    
  40a340:	cmp    al,BYTE PTR ds:0xfda05b2e
  40a346:	dec    edi
  40a347:	dec    esi
  40a348:	aas    
  40a349:	xlat   BYTE PTR ds:[ebx]
  40a34a:	out    dx,eax
  40a34b:	jae    0x40a308
  40a34d:	arpl   WORD PTR [ebp-0x11],bp
  40a350:	inc    eax
  40a351:	jae    0x40a2db
  40a353:	sub    DWORD PTR [ecx-0x3b],0x3
  40a357:	icebp  
  40a358:	sahf   
  40a359:	sbb    BYTE PTR [esi],cl
  40a35b:	int3   
  40a35c:	ins    DWORD PTR es:[edi],dx
  40a35d:	iret   
  40a35e:	push   ecx
  40a35f:	xchg   esi,eax
  40a360:	retf   0xf2bf
  40a363:	sti    
  40a364:	inc    ecx
  40a365:	inc    ebp
  40a366:	and    eax,0x55a64f99
  40a36b:	sahf   
  40a36c:	add    al,0x1d
  40a36e:	sti    
  40a36f:	cmp    ah,BYTE PTR [ebx]
  40a371:	lea    esp,ds:0x40ee47e8
  40a377:	test   edi,esi
  40a379:	push   ebp
  40a37a:	mov    ah,0x8c
  40a37c:	stos   DWORD PTR es:[edi],eax
  40a37d:	mov    edi,0xe982a90
  40a382:	jno    0x40a37b
  40a384:	mov    bl,BYTE PTR [edx-0x3]
  40a387:	test   BYTE PTR [ecx],dh
  40a389:	xchg   DWORD PTR [esi*2-0x432e034d],ecx
  40a390:	js     0x40a3eb
  40a392:	scas   al,BYTE PTR es:[edi]
  40a393:	cmp    DWORD PTR [edx],ebp
  40a395:	push   ebx
  40a396:	jbe    0x40a3e1
  40a398:	push   ss
  40a399:	xlat   BYTE PTR ds:[ebx]
  40a39a:	out    dx,eax
  40a39b:	cld    
  40a39c:	xor    al,0x53
  40a39e:	stos   DWORD PTR es:[edi],eax
  40a39f:	(bad)  
  40a3a0:	mov    ecx,0xbc5826c9
  40a3a5:	xchg   edx,eax
  40a3a6:	cdq    
  40a3a7:	cmp    DWORD PTR [ebx],ebp
  40a3a9:	ja     0x40a3d3
  40a3ab:	jmp    0x40a380
  40a3ad:	pop    esi
  40a3ae:	bound  ecx,QWORD PTR [eax+0x28]
  40a3b1:	ja     0x40a3b7
  40a3b3:	gs mov eax,0xc06298c3
  40a3b9:	dec    eax
  40a3ba:	lea    eax,[edi-0x584d5370]
  40a3c0:	ins    BYTE PTR es:[edi],dx
  40a3c1:	inc    edi
  40a3c2:	cmp    al,0x48
  40a3c4:	int    0x4f
  40a3c6:	test   DWORD PTR [edx+edx*4-0x1a],ecx
  40a3ca:	clc    
  40a3cb:	inc    eax
  40a3cc:	jne    0x40a424
  40a3ce:	fimul  WORD PTR [eax-0x5861b42b]
  40a3d4:	in     al,dx
  40a3d5:	in     al,0xe5
  40a3d7:	loop   0x40a3b8
  40a3d9:	les    ecx,FWORD PTR [edi]
  40a3db:	push   esi
  40a3dc:	mov    edi,0xae75b878
  40a3e1:	xor    DWORD PTR [edi+0x356ea808],eax
  40a3e7:	jmp    0x9142:0xb768520e
  40a3ee:	xchg   edx,eax
  40a3ef:	loopne 0x40a461
  40a3f1:	inc    ecx
  40a3f2:	sub    DWORD PTR [ebx],ebp
  40a3f4:	cmp    ebx,DWORD PTR [esi-0x7b]
  40a3f7:	adc    BYTE PTR [ecx+ecx*4],bl
  40a3fa:	pop    es
  40a3fb:	(bad)  
  40a3fc:	enter  0x14b1,0xc2
  40a400:	jne    0x40a38d
  40a402:	ss dec esi
  40a404:	adc    bl,dh
  40a406:	inc    esi
  40a407:	loopne 0x40a420
  40a409:	add    eax,ebp
  40a40b:	idiv   DWORD PTR [ebp+0x3]
  40a40e:	data16 fiadd DWORD PTR es:0xe39ff09e
  40a416:	pop    ss
  40a417:	jmp    DWORD PTR [edx+0x118e04f8]
  40a41d:	setge  BYTE PTR [edx]
  40a420:	dec    eax
  40a421:	and    bh,BYTE PTR [ebp-0x1a2c796b]
  40a427:	mov    bh,0x43
  40a429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42a:	xchg   ebx,eax
  40a42b:	xchg   ecx,eax
  40a42c:	pop    esp
  40a42d:	jnp    0x40a3d0
  40a42f:	sbb    bl,BYTE PTR [eax+0x60]
  40a432:	jbe    0x40a3e0
  40a434:	arpl   WORD PTR [bx+di+0x725e],dx
  40a439:	cmp    eax,0x21fddc2
  40a43e:	cwde   
  40a43f:	into   
  40a440:	stc    
  40a441:	(bad)
  40a444:	push   eax
  40a445:	imul   ebx,DWORD PTR ds:0x53dba1df,0x5979f506
  40a44f:	mov    edi,tr3
  40a452:	or     edx,edi
  40a454:	fwait
  40a455:	lods   al,BYTE PTR ds:[esi]
  40a456:	pusha  
  40a457:	dec    ebp
  40a458:	int    0x90
  40a45a:	xchg   esp,eax
  40a45b:	cmp    BYTE PTR [edi],cl
  40a45d:	rcl    DWORD PTR [edi+eax*8-0x72],0x4a
  40a462:	pop    ebp
  40a463:	and    eax,0xc258d3d5
  40a468:	mov    eax,ds:0x1a737e36
  40a46d:	(bad)  
  40a46f:	int3   
  40a470:	sub    al,0x1d
  40a472:	iret   
  40a473:	scas   eax,DWORD PTR es:[edi]
  40a474:	rcr    BYTE PTR [ecx+0x6359d049],1
  40a47a:	mov    eax,ds:0xc49df147
  40a47f:	mov    edx,esp
  40a481:	(bad)  
  40a483:	(bad)  
  40a484:	and    al,0xe7
  40a486:	jmp    DWORD PTR es:[ebp+0x48]
  40a48a:	jmp    0x3659:0xb8bef0f9
  40a491:	pop    ebp
  40a492:	cmp    bh,ch
  40a494:	loop   0x40a493
  40a496:	ret    0xee6d
  40a499:	sbb    al,0xe9
  40a49b:	lods   al,BYTE PTR ds:[esi]
  40a49c:	in     al,0x5d
  40a49e:	add    DWORD PTR [edx+0x169a3972],esi
  40a4a4:	loopne 0x40a517
  40a4a6:	sub    BYTE PTR [eax],dh
  40a4a8:	cmp    al,0x99
  40a4aa:	mov    edi,0x3574a9cb
  40a4af:	ja     0x40a4a4
  40a4b1:	push   ecx
  40a4b2:	dec    eax
  40a4b3:	(bad)  
  40a4b4:	pop    ecx
  40a4b5:	jl     0x40a50a
  40a4b7:	lods   eax,DWORD PTR ds:[esi]
  40a4b8:	mov    ch,0x42
  40a4ba:	pushf  
  40a4bb:	and    bh,bh
  40a4bd:	inc    ecx
  40a4be:	sub    al,0xcf
  40a4c0:	mov    edi,ecx
  40a4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c3:	dec    ebx
  40a4c4:	jne    0x40a48b
  40a4c6:	bnd je 0x40a504
  40a4c9:	loope  0x40a4ad
  40a4cb:	imul   eax,DWORD PTR [ecx],0x1e51fb5b
  40a4d1:	and    al,0xaa
  40a4d3:	push   ebp
  40a4d4:	dec    edx
  40a4d5:	loopne 0x40a51a
  40a4d7:	imul   ebx,DWORD PTR [ecx],0x4a01930d
  40a4dd:	(bad)  
  40a4de:	in     al,dx
  40a4df:	xchg   edi,eax
  40a4e0:	jp     0x40a4aa
  40a4e2:	dec    ecx
  40a4e3:	push   cs
  40a4e4:	pop    ds
  40a4e5:	outs   dx,DWORD PTR ds:[esi]
  40a4e6:	dec    eax
  40a4e7:	pushf  
  40a4e8:	rcl    DWORD PTR ds:0x468e8348,0xc9
  40a4ef:	mov    WORD PTR [esi-0x2556682c],ds
  40a4f5:	and    BYTE PTR [ebp+0x7],bh
  40a4f8:	clc    
  40a4f9:	cld    
  40a4fa:	pop    ebx
  40a4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4fc:	fmul   QWORD PTR [edi+0x31]
  40a4ff:	jmp    0x936c:0x1a80b261
  40a506:	or     eax,0x50906fa0
  40a50b:	test   eax,0x6520e15a
  40a510:	ret    0x9507
  40a513:	test   dh,0x45
  40a516:	cwde   
  40a517:	mov    DWORD PTR [eax],eax
  40a519:	js     0x40a4ef
  40a51b:	mov    DWORD PTR [edx+0x6b845552],edx
  40a521:	lock dec eax
  40a523:	and    eax,0x7e34361a
  40a528:	push   es
  40a529:	loop   0x40a539
  40a52b:	fidiv  DWORD PTR ds:0xe9e51c77
  40a531:	adc    eax,0x925bb53d
  40a536:	lods   eax,DWORD PTR ds:[esi]
  40a537:	stos   BYTE PTR es:[edi],al
  40a538:	pop    eax
  40a539:	jle    0x40a507
  40a53b:	mov    eax,ds:0x753c3024
  40a540:	xor    ah,BYTE PTR [edx-0x1b3536f]
  40a546:	shl    DWORD PTR [ecx+0x6c],cl
  40a549:	mov    dl,0x6d
  40a54b:	call   0xa179:0x3eeece24
  40a552:	push   esi
  40a553:	out    0x3f,eax
  40a555:	popf   
  40a556:	mov    ebp,DWORD PTR [ebx]
  40a558:	scas   al,BYTE PTR es:[edi]
  40a559:	scas   al,BYTE PTR es:[edi]
  40a55a:	dec    edx
  40a55b:	jno    0x40a532
  40a55d:	push   esi
  40a55e:	jo     0x40a56a
  40a560:	jb     0x40a58a
  40a562:	push   esi
  40a563:	sbb    ebp,DWORD PTR [esi]
  40a565:	pop    ebp
  40a566:	jns    0x40a5bd
  40a568:	jno    0x40a502
  40a56a:	pushf  
  40a56b:	push   edi
  40a56c:	mov    dh,0xa4
  40a56e:	mov    esp,0xa227bf62
  40a573:	rol    ch,1
  40a575:	xchg   BYTE PTR [esp+ebp*2+0x81b04d3],dl
  40a57c:	jmp    0x3414:0xfb317e9e
  40a583:	pop    ecx
  40a584:	nop
  40a585:	push   esp
  40a586:	clc    
  40a587:	rcl    DWORD PTR ds:0x3951,0xfd
  40a58d:	bound  edi,QWORD PTR [ebx]
  40a58f:	dec    esi
  40a590:	xor    ebp,edi
  40a592:	in     al,dx
  40a593:	lods   al,BYTE PTR ds:[esi]
  40a594:	sub    eax,DWORD PTR [ebp-0x5a]
  40a597:	xor    eax,0xd4f44884
  40a59c:	enter  0x819b,0xe1
  40a5a0:	or     BYTE PTR [ebp+0x36],ch
  40a5a3:	out    0xde,eax
  40a5a5:	ror    BYTE PTR [eax-0x68],0xd1
  40a5a9:	aaa    
  40a5aa:	sub    DWORD PTR [bx],ebp
  40a5ad:	mov    eax,ds:0xa75bc897
  40a5b2:	aas    
  40a5b3:	sti    
  40a5b4:	fidiv  WORD PTR [eax-0x33d4b1f7]
  40a5ba:	dec    eax
  40a5bb:	das    
  40a5bc:	and    eax,0x9ecb8b0a
  40a5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c2:	lods   al,BYTE PTR ds:[esi]
  40a5c3:	pop    ds
  40a5c4:	push   ss
  40a5c5:	mov    ch,0xc4
  40a5c7:	inc    esi
  40a5c8:	pop    esp
  40a5c9:	nop
  40a5ca:	pop    esi
  40a5cb:	lea    edx,[edx+0x4f03418a]
  40a5d1:	jnp    0x40a649
  40a5d3:	ret    
  40a5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5d5:	cs inc edi
  40a5d7:	daa    
  40a5d8:	scas   al,BYTE PTR es:[edi]
  40a5d9:	sub    ebp,DWORD PTR es:[edx+eax*2+0x7a]
  40a5de:	aas    
  40a5df:	sti    
  40a5e0:	call   0xba9e:0x2a021a92
  40a5e7:	clc    
  40a5e8:	add    al,0x94
  40a5ea:	sub    ecx,DWORD PTR [edx-0x45]
  40a5ed:	popa   
  40a5ee:	or     al,0x4
  40a5f0:	adc    ch,ch
  40a5f2:	ffreep st(7)
  40a5f4:	cdq    
  40a5f5:	xor    DWORD PTR [edx-0x37],ecx
  40a5f8:	and    eax,0xaa3b14ee
  40a5fd:	mov    cl,0xe1
  40a5ff:	and    BYTE PTR [ebp+0x2d],al
  40a602:	sar    BYTE PTR [ecx-0x3a],cl
  40a605:	ins    BYTE PTR es:[edi],dx
  40a606:	cdq    
  40a607:	adc    al,0xf2
  40a609:	mov    esp,0xf47d2059
  40a60e:	push   ebp
  40a60f:	enter  0x29ca,0xf8
  40a613:	dec    edx
  40a614:	in     al,dx
  40a615:	cs dec ecx
  40a617:	aas    
  40a618:	xchg   edx,eax
  40a619:	ss mov esi,0x7b167f7e
  40a61f:	jbe    0x40a60f
  40a621:	fcomp  DWORD PTR [edx+0x64]
  40a624:	sbb    esi,ebx
  40a626:	mov    cl,0xfd
  40a628:	in     al,dx
  40a629:	sar    BYTE PTR ds:0x35cdbf8f,cl
  40a62f:	bswap  esp
  40a631:	sub    eax,0x563bba56
  40a636:	mov    eax,ds:0xe84ddb2c
  40a63b:	adc    DWORD PTR [edx+edi*1],ecx
  40a63e:	adc    eax,0xf25fe62f
  40a643:	pop    edi
  40a644:	sub    al,0x4e
  40a646:	inc    ebp
  40a647:	iret   
  40a648:	lds    eax,FWORD PTR [edx+0x5711e334]
  40a64e:	shl    dl,cl
  40a650:	aam    0x2
  40a652:	pop    ebp
  40a653:	pop    edi
  40a654:	jecxz  0x40a611
  40a656:	daa    
  40a657:	xlat   BYTE PTR ds:[ebx]
  40a658:	in     eax,0xc8
  40a65a:	enter  0x1ec7,0xe5
  40a65e:	(bad)  
  40a660:	mov    al,ds:0xac9e7911
  40a665:	sbb    al,0x6b
  40a667:	sbb    BYTE PTR [ebp+0x5c],ah
  40a66a:	jecxz  0x40a624
  40a66c:	xor    DWORD PTR [esi-0x3],esp
  40a66f:	mov    bl,0x52
  40a671:	mov    ah,BYTE PTR [ebp-0x4d]
  40a674:	jmp    0xbf0d9ce6
  40a679:	pop    ecx
  40a67a:	jecxz  0x40a65f
  40a67c:	mov    ds:0x596c20a7,eax
  40a681:	pusha  
  40a682:	imul   DWORD PTR [esi]
  40a684:	mov    esi,0xfa2026a7
  40a689:	pusha  
  40a68a:	push   esi
  40a68b:	aas    
  40a68c:	rcr    DWORD PTR [ebp-0x5af6bdd],0x2e
  40a693:	sbb    al,0x37
  40a695:	aad    0xa2
  40a697:	(bad)  
  40a698:	mov    al,0xfc
  40a69a:	or     BYTE PTR [eax+0x5a933672],al
  40a6a0:	cdq    
  40a6a1:	fdivr  st,st(4)
  40a6a3:	fs call 0xd534:0x9240f46f
  40a6ab:	(bad)  
  40a6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ae:	cmp    DWORD PTR [ecx-0x7a],esp
  40a6b1:	or     DWORD PTR [edi+0x5b3caea9],edx
  40a6b7:	sbb    bl,BYTE PTR [eax-0x51931ae6]
  40a6bd:	repz loop 0x40a65a
  40a6c0:	xor    eax,0xb27f4470
  40a6c5:	call   0x8a0a926a
  40a6ca:	mov    esp,0xb775d030
  40a6cf:	rcl    DWORD PTR [esi-0x1a62b8f5],0x5d
  40a6d6:	push   edi
  40a6d7:	scas   al,BYTE PTR es:[edi]
  40a6d8:	adc    dh,BYTE PTR ds:[ecx+ebx*1]
  40a6dc:	adc    eax,0x3974f4a1
  40a6e1:	daa    
  40a6e2:	lods   eax,DWORD PTR ds:[esi]
  40a6e3:	xor    al,0x4c
  40a6e5:	(bad)  
  40a6e6:	clc    
  40a6e7:	fs sub eax,0x8fe0e9d2
  40a6ed:	pop    ebx
  40a6ee:	xor    eax,0x3d3e0f1c
  40a6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6f4:	dec    ebx
  40a6f5:	dec    ecx
  40a6f6:	out    dx,al
  40a6f7:	cmc    
  40a6f8:	inc    ecx
  40a6f9:	jmp    0xaf5cbf92
  40a6fe:	addr16 aad 0x46
  40a701:	sub    BYTE PTR [esi+0x1b],dh
  40a704:	mov    es,WORD PTR [esi-0x3afa5dfb]
  40a70a:	test   al,0xcb
  40a70c:	xor    cl,cl
  40a70e:	std    
  40a70f:	inc    DWORD PTR [edx]
  40a711:	fmul   DWORD PTR [eax+0x6cec1949]
  40a717:	(bad)  
  40a718:	jmp    0x92b9581d
  40a71d:	not    cl
  40a71f:	pushf  
  40a720:	sub    al,0x5e
  40a722:	cmp    cl,BYTE PTR [ecx+esi*8+0x5]
  40a726:	aaa    
  40a727:	dec    ecx
  40a728:	rcl    BYTE PTR [ebx+esi*2],0x2
  40a72c:	stc    
  40a72d:	push   edx
  40a72e:	xor    BYTE PTR [esi+0x50],cl
  40a731:	push   0xffffffd4
  40a733:	xor    ecx,eax
  40a735:	in     al,dx
  40a736:	mov    cs,WORD PTR [esi-0x4007d99a]
  40a73c:	sub    al,0x79
  40a73e:	mov    ds:0xd7f7917f,al
  40a743:	aam    0xcf
  40a745:	retf   
  40a746:	popa   
  40a747:	inc    ebx
  40a748:	mov    eax,ds:0xfe611f6
  40a74d:	fwait
  40a74e:	push   esi
  40a74f:	add    ah,bl
  40a751:	jp     0x40a77e
  40a753:	and    eax,0x8c4a39e
  40a758:	cmp    al,0xa8
  40a75a:	test   ah,ah
  40a75c:	xor    edi,ebp
  40a75e:	sbb    bl,BYTE PTR [ebx+0x634f2812]
  40a764:	jno    0x40a7ab
  40a766:	in     eax,0x5
  40a768:	or     eax,0xb13a7c4b
  40a76d:	mov    BYTE PTR [ebx+0x75a54974],cl
  40a773:	mov    eax,ds:0x76816d3c
  40a778:	repnz dec ebx
  40a77a:	icebp  
  40a77b:	mov    esi,0x4086573d
  40a780:	fnsave [edi-0x78]
  40a783:	xchg   esi,eax
  40a784:	or     eax,0xbd0e3957
  40a789:	jne    0x40a793
  40a78b:	outs   dx,BYTE PTR ds:[esi]
  40a78c:	xchg   esi,eax
  40a78d:	out    0xd4,eax
  40a78f:	adc    al,0x3a
  40a791:	pop    ecx
  40a792:	mov    dl,0xfd
  40a794:	iret   
  40a795:	or     ch,BYTE PTR [ebx]
  40a797:	std    
  40a798:	ja     0x40a754
  40a79a:	fld    QWORD PTR cs:0x345d7e54
  40a7a1:	pop    ebp
  40a7a2:	out    dx,al
  40a7a3:	mov    eax,ds:0x8123a14c
  40a7a8:	pop    esp
  40a7a9:	sbb    BYTE PTR [eax+0x7a8ac77d],bh
  40a7af:	nop
  40a7b0:	add    esp,edi
  40a7b2:	lock (bad) 
  40a7b4:	aad    0xb4
  40a7b6:	in     al,dx
  40a7b7:	imul   esi,DWORD PTR [ecx],0xb3cf3d1c
  40a7bd:	jge    0x40a75b
  40a7bf:	stc    
  40a7c0:	popf   
  40a7c1:	dec    ecx
  40a7c2:	nop
  40a7c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c4:	xchg   ecx,eax
  40a7c5:	xor    al,dh
  40a7c7:	and    eax,0xa4b87e30
  40a7cc:	ds sbb eax,0x76b7290
  40a7d2:	jp     0x40a760
  40a7d4:	fmul   DWORD PTR [ebx]
  40a7d6:	or     DWORD PTR [esi-0x7c],ebp
  40a7d9:	jg     0x40a77e
  40a7db:	ins    DWORD PTR es:[edi],dx
  40a7dc:	mov    bl,0x3d
  40a7de:	jp     0x40a836
  40a7e0:	dec    ebp
  40a7e1:	ins    BYTE PTR es:[edi],dx
  40a7e2:	out    0x3a,eax
  40a7e4:	leave  
  40a7e5:	xor    ecx,ecx
  40a7e7:	bound  eax,QWORD PTR [ebx-0x4f]
  40a7ea:	fbstp  TBYTE PTR [ecx]
  40a7ec:	xchg   ecx,edi
  40a7ee:	out    0xd7,al
  40a7f0:	push   edx
  40a7f1:	ss mov ecx,0x14ff73
  40a7f7:	pop    esp
  40a7f8:	ret    
  40a7f9:	ja     0x40a877
  40a7fb:	adc    dl,bh
  40a7fd:	rol    ecx,1
  40a7ff:	ds cld 
  40a801:	and    DWORD PTR [ebx],edx
  40a803:	adc    esp,esi
  40a805:	push   es
  40a806:	arpl   bx,ax
  40a808:	or     DWORD PTR [ebx],esp
  40a80a:	stos   DWORD PTR es:[edi],eax
  40a80b:	or     esp,DWORD PTR [edx+edx*1]
  40a80e:	mov    dl,0x25
  40a810:	int    0x70
  40a812:	pusha  
  40a813:	nop
  40a814:	stc    
  40a815:	mov    edi,edi
  40a817:	mov    al,es:0x273ce919
  40a81d:	mov    WORD PTR [ebx-0x19eedce1],fs
  40a823:	sub    DWORD PTR [esi+0x47],esp
  40a826:	call   0xe908:0x15b01acb
  40a82d:	shl    BYTE PTR [ebp+0x4a],0xcf
  40a831:	repz mov bl,0x4
  40a834:	inc    edx
  40a835:	call   0xb908:0x7c56fd7d
  40a83c:	retf   0x496
  40a83f:	push   edi
  40a840:	(bad)  
  40a841:	ja     0x40a857
  40a843:	dec    edi
  40a844:	call   DWORD PTR [esi+0x3e]
  40a847:	or     DWORD PTR [ecx-0x2b],esi
  40a84a:	sbb    DWORD PTR [edx],esi
  40a84c:	mov    ebp,DWORD PTR [edi+0xb]
  40a84f:	dec    ecx
  40a850:	repz xchg ecx,eax
  40a852:	add    dl,ch
  40a854:	sbb    bh,BYTE PTR [edi]
  40a856:	jmp    0x40a817
  40a858:	in     al,0x22
  40a85a:	sub    dh,ah
  40a85c:	(bad)  
  40a85d:	(bad)  
  40a85e:	in     al,0xf3
  40a860:	loopne 0x40a880
  40a862:	mov    eax,ds:0x735b69f6
  40a867:	pop    ebx
  40a868:	push   ebp
  40a869:	outs   dx,DWORD PTR ds:[esi]
  40a86a:	push   0xffffff94
  40a86c:	adc    DWORD PTR ds:0x42862577,0x631bc2c7
  40a877:	cld    
  40a878:	push   ds
  40a879:	out    0xd4,eax
  40a87b:	les    edi,FWORD PTR [edi+edi*4]
  40a87e:	dec    edx
  40a87f:	and    eax,0x2a954d2c
  40a884:	shr    BYTE PTR [esi],0xfc
  40a887:	sub    cl,dl
  40a889:	push   ss
  40a88a:	icebp  
  40a88b:	shl    BYTE PTR [ebp-0x7b49078e],1
  40a891:	push   es
  40a892:	xchg   DWORD PTR [eax],ebp
  40a894:	mov    ebx,DWORD PTR ds:0x8038a572
  40a89a:	cmp    al,0x5d
  40a89c:	leave  
  40a89d:	call   0x2248:0x507b5944
  40a8a4:	fmul   DWORD PTR [esi]
  40a8a6:	hlt    
  40a8a7:	aam    0xac
  40a8a9:	push   es
  40a8aa:	and    DWORD PTR [edx],edx
  40a8ac:	ins    DWORD PTR es:[edi],dx
  40a8ad:	push   0x65
  40a8af:	dec    eax
  40a8b0:	cld    
  40a8b1:	mov    bl,0xad
  40a8b3:	fmul   DWORD PTR [edx+0x2d]
  40a8b6:	xor    al,0x32
  40a8b8:	aaa    
  40a8b9:	ja     0x40a85b
  40a8bb:	mov    al,ds:0xa997a5e8
  40a8c0:	fimul  DWORD PTR ds:0xe6b25bd7
  40a8c6:	jle    0x40a85c
  40a8c8:	ja     0x40a8c7
  40a8ca:	sbb    eax,0xdb7f08ad
  40a8cf:	mov    eax,ds:0xba6185da
  40a8d4:	scas   eax,DWORD PTR es:[edi]
  40a8d5:	arpl   WORD PTR [ebp+0x70caee0],dx
  40a8db:	jnp    0x40a945
  40a8dd:	fldl2e 
  40a8df:	ja     0x40a907
  40a8e1:	jl     0x40a8c0
  40a8e3:	dec    ecx
  40a8e4:	xor    eax,edx
  40a8e6:	inc    ebp
  40a8e7:	leave  
  40a8e8:	retf   
  40a8e9:	or     eax,0x13cdcfc0
  40a8ee:	les    esi,FWORD PTR [edx+edx*1]
  40a8f1:	(bad)  [ebx]
  40a8f3:	repnz adc bh,BYTE PTR ds:0xb2481a3c
  40a8fa:	je     0x40a8d6
  40a8fc:	jecxz  0x40a904
  40a8fe:	mov    al,BYTE PTR [ecx-0x45]
  40a901:	out    dx,eax
  40a902:	lahf   
  40a903:	(bad)  
  40a904:	ss test eax,0x7c1bae8a
  40a90a:	aaa    
  40a90b:	out    0x3d,eax
  40a90d:	aaa    
  40a90e:	stos   BYTE PTR es:[edi],al
  40a90f:	and    eax,0x31328c72
  40a914:	adc    dl,ah
  40a916:	mov    eax,ds:0x506ec34b
  40a91b:	test   al,0xc
  40a91d:	dec    esi
  40a91e:	in     al,dx
  40a91f:	ja     0x40a8b4
  40a921:	mov    ebx,0x66305845
  40a926:	stc    
  40a927:	mov    ch,0x90
  40a929:	and    BYTE PTR [esp+ecx*8-0x65673b24],0x9
  40a931:	mov    edx,0xe01bf510
  40a936:	sti    
  40a937:	mov    bh,0x97
  40a939:	aam    0x56
  40a93b:	retf   
  40a93c:	stos   DWORD PTR es:[edi],eax
  40a93d:	and    dl,BYTE PTR [edi]
  40a93f:	ffreep st(2)
  40a941:	fdiv   QWORD PTR [esi]
  40a943:	inc    esi
  40a944:	jo     0x40a8d2
  40a946:	sbb    eax,ebp
  40a948:	mov    edx,0xd3e3419b
  40a94d:	or     eax,0x309f43e7
  40a952:	je     0x40a940
  40a954:	pop    ecx
  40a955:	imul   BYTE PTR [edx]
  40a957:	fstp   st(3)
  40a959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95a:	xchg   esp,eax
  40a95b:	test   al,0xb0
  40a95d:	(bad)  
  40a95e:	repnz pop esi
  40a960:	out    0x41,eax
  40a962:	jns    0x40a93b
  40a964:	repz dec edx
  40a966:	push   esp
  40a967:	fbld   TBYTE PTR [eax]
  40a969:	push   es
  40a96a:	scas   al,BYTE PTR es:[edi]
  40a96b:	and    cl,BYTE PTR [edi+0x61]
  40a96e:	cmp    al,0xb2
  40a970:	lock add DWORD PTR [eax],esp
  40a973:	jecxz  0x40a9a5
  40a975:	add    eax,DWORD PTR [ebx]
  40a977:	ins    BYTE PTR es:[edi],dx
  40a978:	mov    eax,esi
  40a97a:	sub    ch,BYTE PTR [esi]
  40a97c:	and    ebx,ebp
  40a97e:	xchg   cx,ax
  40a980:	shr    BYTE PTR [ecx],1
  40a982:	ss das 
  40a984:	cmp    al,0x51
  40a986:	add    dl,cl
  40a988:	sub    cl,BYTE PTR [esi+0x4655382]
  40a98e:	push   0xffffffa9
  40a990:	test   DWORD PTR [ecx-0x199bf64a],ecx
  40a996:	rcr    DWORD PTR [esi],cl
  40a998:	sub    esp,edx
  40a99a:	mov    esi,DWORD PTR [edi+0x5a7a547e]
  40a9a0:	adc    BYTE PTR [ecx],bl
  40a9a2:	cld    
  40a9a3:	ja     0x40a950
  40a9a5:	dec    esp
  40a9a6:	dec    eax
  40a9a7:	mov    ebx,0x35a9028d
  40a9ac:	and    BYTE PTR [esi],0xd1
  40a9af:	push   ecx
  40a9b0:	add    esi,DWORD PTR [esi]
  40a9b2:	pop    esp
  40a9b3:	out    dx,al
  40a9b4:	imul   ebx,DWORD PTR [ebp-0x7c],0xba6ddfc4
  40a9bb:	add    edx,DWORD PTR [ebx-0x16]
  40a9be:	mov    ecx,0x6dcdb3dd
  40a9c3:	loop   0x40a9cf
  40a9c5:	inc    esp
  40a9c6:	in     eax,0xc3
  40a9c8:	ds jne 0x40a977
  40a9cb:	pop    ecx
  40a9cc:	jl     0x40a997
  40a9ce:	(bad)  
  40a9cf:	pop    ecx
  40a9d0:	mov    ch,0x81
  40a9d2:	cmp    al,0x91
  40a9d4:	inc    ebp
  40a9d5:	xor    ch,al
  40a9d7:	shr    BYTE PTR [ebx+0x3943ab3f],0x2a
  40a9de:	add    BYTE PTR [esi],dl
  40a9e0:	mul    BYTE PTR [ebx]
  40a9e2:	jne    0x40a9ab
  40a9e4:	jle    0x40a982
  40a9e6:	push   ecx
  40a9e7:	xchg   ecx,eax
  40a9e8:	inc    edi
  40a9e9:	dec    ebx
  40a9ea:	(bad)  
  40a9ec:	jae    0x40aa01
  40a9ee:	pop    esi
  40a9ef:	mov    eax,0xdbaae32d
  40a9f4:	lea    ebx,[esi+0x1eecf1ee]
  40a9fa:	jo     0x40a9e5
  40a9fc:	sub    DWORD PTR [bp+di],ebx
  40a9ff:	jmp    0xa919:0xbe22e591
  40aa06:	cdq    
  40aa07:	mov    ch,0xeb
  40aa09:	push   ebx
  40aa0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa0c:	sub    cl,bh
  40aa0e:	fstp   DWORD PTR [edx-0x7091feec]
  40aa14:	pop    ecx
  40aa15:	mov    WORD PTR [esi-0xe3c3078],?
  40aa1b:	push   ebp
  40aa1c:	cdq    
  40aa1d:	cmp    DWORD PTR [ebx+0x24],eax
  40aa20:	and    BYTE PTR [esp+esi*8],0xed
  40aa24:	pop    edx
  40aa25:	jg     0x40a9ac
  40aa27:	pop    ds
  40aa28:	jns    0x40a9c1
  40aa2a:	cmp    BYTE PTR [ecx],dh
  40aa2c:	push   esp
  40aa2d:	lock bnd je 0x40aa4d
  40aa31:	mov    ebx,0xcf5cfe7d
  40aa36:	xchg   edi,eax
  40aa37:	or     al,0x83
  40aa39:	repnz repz cmp ah,dl
  40aa3d:	pop    ss
  40aa3e:	scas   al,BYTE PTR es:[edi]
  40aa3f:	gs add dh,dl
  40aa42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa43:	pop    ebx
  40aa44:	(bad)  [esi-0x80]
  40aa47:	lahf   
  40aa48:	cmp    eax,0x4596966b
  40aa4d:	out    0x7f,eax
  40aa4f:	out    dx,eax
  40aa50:	or     eax,0x5eeb15a
  40aa55:	in     al,0x40
  40aa57:	dec    edi
  40aa58:	or     eax,0x48844ec8
  40aa5d:	push   es
  40aa5e:	retf   0xca93
  40aa61:	mov    edx,es
  40aa63:	enter  0x12a7,0xa6
  40aa67:	stc    
  40aa68:	cdq    
  40aa69:	cmp    bl,BYTE PTR [ebx]
  40aa6b:	ds push eax
  40aa6d:	mov    edi,0x9411fa61
  40aa72:	fild   WORD PTR ds:0xd09577f5
  40aa78:	pop    eax
  40aa79:	out    0xe9,al
  40aa7b:	adc    eax,DWORD PTR ds:0x8817624e
  40aa81:	mov    ds,WORD PTR [ebp+0x4079d50a]
  40aa87:	adc    bl,0xbd
  40aa8a:	dec    ecx
  40aa8b:	not    BYTE PTR [ebp-0x5c412c7]
  40aa91:	aam    0x85
  40aa93:	push   ss
  40aa94:	dec    ebx
  40aa95:	fst    st(2)
  40aa97:	add    ebp,ebx
  40aa99:	cmp    eax,0xb938339b
  40aa9e:	fisttp WORD PTR [ebx]
  40aaa0:	stos   DWORD PTR es:[edi],eax
  40aaa1:	add    eax,DWORD PTR [esi+0x4]
  40aaa4:	sub    dh,bh
  40aaa6:	(bad)  
  40aaa7:	mov    edi,0x8e938dc4
  40aaac:	aam    0xaf
  40aaae:	dec    edx
  40aaaf:	sbb    eax,0xaae38f86
  40aab4:	mov    edx,0x435def38
  40aab9:	sub    edx,DWORD PTR [edx-0x752397f4]
  40aabf:	pop    esp
  40aac0:	(bad)  
  40aac2:	inc    edx
  40aac3:	in     eax,0x5e
  40aac5:	outs   dx,DWORD PTR ds:[esi]
  40aac6:	int3   
  40aac7:	fdiv   st(1),st
  40aac9:	test   eax,0xfb90f71f
  40aace:	rol    DWORD PTR [esi-0x53],1
  40aad1:	jbe    0x40aacb
  40aad3:	call   0x8ed9e1d
  40aad8:	xchg   esp,eax
  40aad9:	adc    ch,cl
  40aadb:	pop    esi
  40aadc:	fisttp QWORD PTR [edi]
  40aade:	sbb    DWORD PTR [edx],esp
  40aae0:	inc    eax
  40aae1:	aas    
  40aae2:	icebp  
  40aae3:	test   al,0x2
  40aae5:	pop    esp
  40aae6:	enter  0x5de2,0x4c
  40aaea:	cmp    al,BYTE PTR [ecx]
  40aaec:	lds    ecx,FWORD PTR [edi-0x67d3ef11]
  40aaf2:	enter  0x6b7f,0x1a
  40aaf6:	cmp    DWORD PTR [edi-0x6d],ebp
  40aaf9:	pop    esp
  40aafa:	and    DWORD PTR [edx+0x2c2ec84],edi
  40ab00:	xor    esp,DWORD PTR [esi+0x38]
  40ab03:	jge    0x40ab34
  40ab05:	cwde   
  40ab06:	fnsave [ebx+0x518452e0]
  40ab0c:	clc    
  40ab0d:	sahf   
  40ab0e:	sbb    DWORD PTR [ebp+0x59],0xffffffec
  40ab12:	lods   al,BYTE PTR ds:[esi]
  40ab13:	mov    ecx,0x4714e93a
  40ab18:	retf   0xfcd0
  40ab1b:	sbb    al,0xad
  40ab1d:	lods   al,BYTE PTR ds:[esi]
  40ab1e:	sti    
  40ab1f:	mov    bh,0xb1
  40ab21:	jge    0x40ab7f
  40ab23:	outs   dx,BYTE PTR ds:[esi]
  40ab24:	pop    ds
  40ab25:	sar    DWORD PTR [edi-0x3a1c638f],1
  40ab2b:	add    ebx,esi
  40ab2d:	pop    ds
  40ab2e:	cdq    
  40ab2f:	int3   
  40ab30:	out    dx,eax
  40ab31:	stos   BYTE PTR es:[edi],al
  40ab32:	pusha  
  40ab33:	mov    ah,0x4a
  40ab35:	ficomp WORD PTR [eax]
  40ab37:	jno    0x40ab34
  40ab39:	out    0x84,eax
  40ab3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3c:	les    edx,FWORD PTR [esi]
  40ab3e:	xchg   ebx,eax
  40ab3f:	scas   al,BYTE PTR es:[edi]
  40ab40:	int    0x5f
  40ab42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab43:	lds    ebx,FWORD PTR [ebx-0x17]
  40ab46:	mov    esi,0x6698c53f
  40ab4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab4c:	dec    edi
  40ab4d:	and    DWORD PTR [edi+0x4d],0xdb14c8a7
  40ab54:	xchg   edi,eax
  40ab55:	cli    
  40ab56:	pushf  
  40ab57:	mov    esp,DWORD PTR [esi-0x4d2ae3e4]
  40ab5d:	fistp  QWORD PTR [edx+0x15a7c659]
  40ab63:	loop   0x40abb6
  40ab65:	jb     0x40abb2
  40ab67:	jl     0x40abd3
  40ab69:	pop    eax
  40ab6a:	cli    
  40ab6b:	hlt    
  40ab6c:	adc    BYTE PTR [ebx+esi*4+0x490018c6],bh
  40ab73:	sahf   
  40ab74:	mov    al,0x49
  40ab76:	sar    BYTE PTR [ecx+ebx*2-0x22d34e4a],1
  40ab7d:	mov    eax,ds:0x1ef6d519
  40ab82:	xchg   bh,ah
  40ab84:	dec    ebp
  40ab85:	pop    ecx
  40ab86:	into   
  40ab87:	add    dx,WORD PTR [edi-0x3d]
  40ab8b:	shr    DWORD PTR [eax],1
  40ab8d:	push   0x8e25a18e
  40ab92:	out    dx,al
  40ab93:	inc    edx
  40ab94:	clc    
  40ab95:	cli    
  40ab96:	inc    eax
  40ab97:	aaa    
  40ab98:	mov    ebx,0x178f503f
  40ab9d:	add    eax,0x4b896140
  40aba2:	repz jb 0x40ab76
  40aba5:	aam    0x41
  40aba7:	dec    eax
  40aba8:	jge    0x40ac0e
  40abaa:	dec    ebp
  40abab:	inc    eax
  40abac:	cmp    al,0x37
  40abae:	add    al,0x7c
  40abb0:	push   edx
  40abb1:	sub    eax,0xff965066
  40abb6:	mov    ebx,0x9e74aa9c
  40abbb:	shl    ebp,0xdc
  40abbe:	stos   BYTE PTR es:[edi],al
  40abbf:	arpl   WORD PTR [edi+0x68],ax
  40abc2:	cmp    BYTE PTR [ebx-0x41424d18],ch
  40abc8:	adc    eax,DWORD PTR [ebp+0x6331b7d7]
  40abce:	aaa    
  40abcf:	xchg   ecx,eax
  40abd0:	pop    esi
  40abd1:	imul   ebp,DWORD PTR [eax],0xfffffffe
  40abd4:	dec    esi
  40abd5:	sub    eax,0xf41dd780
  40abda:	mov    dh,0x72
  40abdc:	aad    0x87
  40abde:	lea    esi,[ecx-0xc]
  40abe1:	lods   al,BYTE PTR ds:[esi]
  40abe2:	aas    
  40abe3:	inc    ebp
  40abe4:	push   ebx
  40abe5:	fcom   QWORD PTR [ebp+0x45]
  40abe8:	repz addr16 in al,dx
  40abeb:	xchg   edx,eax
  40abec:	and    eax,0xfb68943d
  40abf1:	adc    DWORD PTR [edi],0x9581a60f
  40abf7:	hlt    
  40abf8:	and    cl,dl
  40abfa:	out    0x24,eax
  40abfc:	stc    
  40abfd:	in     eax,dx
  40abfe:	dec    edx
  40abff:	mov    edi,0xad186cff
  40ac04:	push   edi
  40ac05:	in     eax,0x71
  40ac07:	pop    eax
  40ac08:	hlt    
  40ac09:	mov    cl,0xe1
  40ac0b:	mov    ebx,0x9d5e7df8
  40ac10:	enter  0xeb1b,0x61
  40ac14:	mov    ds:0x749fd2ca,eax
  40ac19:	out    dx,eax
  40ac1a:	and    BYTE PTR [eax+0xb],dh
  40ac1d:	jo     0x40abf5
  40ac1f:	push   esi
  40ac20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac21:	mov    ecx,0xda78b7f5
  40ac26:	pop    ebp
  40ac27:	and    al,0x12
  40ac29:	cli    
  40ac2a:	aad    0xf5
  40ac2c:	sub    ah,0x8a
  40ac2f:	fcmovnu st,st(3)
  40ac31:	sbb    eax,0xc8bde4af
  40ac36:	mov    dh,0x4
  40ac38:	ins    BYTE PTR es:[edi],dx
  40ac39:	pop    es
  40ac3a:	dec    edi
  40ac3b:	iret   
  40ac3c:	add    DWORD PTR [ebx+0x357a4e1d],eax
  40ac42:	(bad)  
  40ac44:	or     al,0x98
  40ac46:	sub    edi,DWORD PTR [edi]
  40ac48:	cs adc eax,0x6c020c8d
  40ac4e:	jae    0x40ac81
  40ac50:	ss enter 0x352a,0x36
  40ac55:	fstp   DWORD PTR [edx+0x74f67d1e]
  40ac5b:	rcr    DWORD PTR [ebx+0x34ecede2],1
  40ac61:	fstp   DWORD PTR [edx]
  40ac63:	call   0x22f9:0x1987c2b5
  40ac6a:	ja     0x40ac3e
  40ac6c:	stc    
  40ac6d:	test   BYTE PTR [edi-0x28f30255],bl
  40ac73:	or     ah,BYTE PTR [esi]
  40ac75:	jmp    0x8ce2d5c
  40ac7a:	cmc    
  40ac7b:	mov    ebx,0x65395072
  40ac80:	imul   eax,DWORD PTR [ecx+0x620d47f2],0x2a
  40ac87:	jp     0x40acb2
  40ac89:	jle    0x40aca0
  40ac8b:	mov    eax,0x4071de1d
  40ac90:	push   0xf878577a
  40ac95:	cwde   
  40ac96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac97:	mov    esi,0x2a264f7d
  40ac9c:	arpl   si,dx
  40ac9e:	cwde   
  40ac9f:	rcl    DWORD PTR [edi],1
  40aca1:	push   ebx
  40aca2:	cmp    BYTE PTR [eax+0x77038ef7],0x2d
  40aca9:	inc    edx
  40acaa:	sbb    ecx,eax
  40acac:	lock inc edx
  40acae:	cmp    ebx,ecx
  40acb0:	movsx  edi,WORD PTR ds:0xef5cbff7
  40acb7:	(bad)
  40acba:	push   esi
  40acbb:	or     eax,0xab6244ac
  40acc0:	inc    edi
  40acc1:	mov    WORD PTR [ebp+0x7dfc53fc],ds
  40acc7:	setbe  BYTE PTR [esi-0x2c63a8e4]
  40acce:	adc    ch,ch
  40acd0:	jae    0x40ad02
  40acd2:	sub    DWORD PTR [eax-0x2b055a67],esi
  40acd8:	lahf   
  40acd9:	add    dh,BYTE PTR [edi+edi*2-0xd]
  40acdd:	sahf   
  40acde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acdf:	pop    eax
  40ace0:	sbb    DWORD PTR [edx-0x1e],edi
  40ace3:	push   ebp
  40ace4:	mov    dl,ah
  40ace6:	dec    edx
  40ace7:	mov    ch,0x82
  40ace9:	xlat   BYTE PTR ds:[ebx]
  40acea:	jle    0x40ad1e
  40acec:	mov    dh,0x9f
  40acee:	cmp    eax,ebp
  40acf0:	dec    edi
  40acf1:	es push 0x10b1c4fc
  40acf7:	outs   dx,BYTE PTR ds:[esi]
  40acf8:	jae    0x40ace1
  40acfa:	dec    eax
  40acfb:	in     eax,0xba
  40acfd:	lods   al,BYTE PTR ds:[esi]
  40acfe:	shl    dh,0x19
  40ad01:	fcmovb st,st(1)
  40ad03:	sub    ah,BYTE PTR [esi+0x62]
  40ad06:	pop    edi
  40ad07:	xor    eax,0x1b6cad08
  40ad0c:	push   es
  40ad0d:	jae    0x40ad78
  40ad0f:	(bad)  
  40ad10:	in     eax,dx
  40ad11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad12:	adc    dh,dh
  40ad14:	cmc    
  40ad15:	retf   
  40ad16:	push   esp
  40ad17:	and    bl,BYTE PTR [esi+0x70]
  40ad1a:	jecxz  0x40ad74
  40ad1c:	test   eax,0x42daadae
  40ad21:	fsubr  QWORD PTR [edi]
  40ad23:	sub    al,0xe7
  40ad25:	fistp  DWORD PTR [edx+0x39]
  40ad28:	mov    ebx,0x82acae6a
  40ad2d:	cmp    ch,0xfd
  40ad30:	xchg   esi,eax
  40ad31:	jl     0x40ad68
  40ad33:	xchg   edx,eax
  40ad34:	jns    0x40adac
  40ad36:	jne    0x40adb4
  40ad38:	sub    cl,bl
  40ad3a:	ret    
  40ad3b:	sar    esi,0x73
  40ad3e:	add    eax,0xdd734df1
  40ad43:	jnp    0x40ad35
  40ad45:	outs   dx,BYTE PTR ds:[esi]
  40ad46:	and    eax,0x385628d0
  40ad4b:	push   edx
  40ad4c:	push   esp
  40ad4d:	shr    BYTE PTR [ecx+0x38],1
  40ad50:	loope  0x40adb4
  40ad52:	shl    ebx,cl
  40ad54:	xchg   ebx,eax
  40ad55:	inc    ecx
  40ad56:	ret    
  40ad57:	add    cl,BYTE PTR [edi-0x31]
  40ad5a:	jne    0x40ad13
  40ad5c:	xchg   BYTE PTR [esi+0x30],dl
  40ad5f:	xchg   ebp,eax
  40ad60:	test   BYTE PTR [eax-0xc],dl
  40ad63:	fld    TBYTE PTR [edi+0x51]
  40ad66:	gs jmp 0x4df5:0x35f587d4
  40ad6e:	stos   BYTE PTR es:[edi],al
  40ad6f:	cwde   
  40ad70:	outs   dx,BYTE PTR ds:[esi]
  40ad71:	gs or  ah,ah
  40ad74:	xor    esi,ebp
  40ad76:	inc    esi
  40ad77:	fild   QWORD PTR [ecx]
  40ad79:	je     0x40ad18
  40ad7b:	xor    eax,0xff355334
  40ad80:	dec    ebp
  40ad81:	cs clc 
  40ad83:	xchg   edx,eax
  40ad84:	neg    DWORD PTR [eax+0x68]
  40ad87:	fcomp  DWORD PTR [ecx+0x46]
  40ad8a:	jae    0x40ad52
  40ad8c:	ins    DWORD PTR es:[edi],dx
  40ad8d:	out    0xb8,al
  40ad8f:	pusha  
  40ad90:	jo     0x40ad9e
  40ad92:	outs   dx,DWORD PTR ds:[esi]
  40ad93:	cwde   
  40ad94:	xor    esi,DWORD PTR [ebx]
  40ad96:	mov    ds:0xe772469e,al
  40ad9b:	push   edi
  40ad9c:	jo     0x40ad90
  40ad9e:	adc    eax,0xf90fcf66
  40ada3:	dec    BYTE PTR [ebx]
  40ada5:	push   es
  40ada6:	push   eax
  40ada7:	pop    ecx
  40ada8:	ins    DWORD PTR es:[edi],dx
  40ada9:	repnz dec ebp
  40adab:	adc    ebx,DWORD PTR [eax+0x1c]
  40adae:	dec    eax
  40adaf:	jo     0x40adb3
  40adb1:	sahf   
  40adb2:	sub    ah,dl
  40adb4:	je     0x40ada1
  40adb6:	sbb    DWORD PTR [ecx-0xdb5b724],edi
  40adbc:	mov    ebp,eax
  40adbe:	push   esi
  40adbf:	and    DWORD PTR [esi-0x63],esi
  40adc2:	sbb    al,BYTE PTR [eax-0x263edbe]
  40adc8:	sub    eax,0x7dfc969c
  40adcd:	mov    BYTE PTR [ecx-0x47],bl
  40add0:	and    al,0x8
  40add2:	inc    eax
  40add3:	sub    al,0x30
  40add5:	ins    DWORD PTR es:[edi],dx
  40add6:	dec    esi
  40add7:	fldcw  WORD PTR [ebp+edi*4+0x7e]
  40addb:	mov    dh,0x2c
  40addd:	mov    ecx,0x7b03fa17
  40ade2:	cmp    cl,BYTE PTR [edi-0xda8ae2]
  40ade8:	xor    BYTE PTR [ecx],dl
  40adea:	xor    DWORD PTR [ecx],eax
  40adec:	xor    al,BYTE PTR [ebx-0x16b7cec1]
  40adf2:	or     al,0x64
  40adf4:	loope  0x40ae02
  40adf6:	inc    ebp
  40adf7:	arpl   cx,dx
  40adf9:	rcr    DWORD PTR [esi+eax*4-0xe],1
  40adfd:	push   ebx
  40adfe:	push   esi
  40adff:	ss inc esi
  40ae01:	pop    eax
  40ae02:	mov    bh,0x8b
  40ae04:	cmp    cl,ah
  40ae06:	mov    esi,edi
  40ae08:	shr    esp,cl
  40ae0a:	(bad)  
  40ae0b:	jmp    0xb3a4:0x21c75a75
  40ae12:	mov    eax,0x2c2eb843
  40ae17:	mov    edx,DWORD PTR [ebx+0x67f7411e]
  40ae1d:	std    
  40ae1e:	or     ah,ah
  40ae20:	mov    al,ds:0x5d7ad8b4
  40ae25:	sub    esp,0xfffffff6
  40ae28:	jb     0x40ae97
  40ae2a:	xchg   BYTE PTR [edi+0x10e2334],cl
  40ae30:	push   esp
  40ae31:	sub    edx,DWORD PTR [edi-0x4c]
  40ae34:	fwait
  40ae35:	scas   eax,DWORD PTR es:[edi]
  40ae36:	xchg   esp,eax
  40ae37:	mov    dl,0xe2
  40ae39:	pop    edx
  40ae3a:	imul   ebx,DWORD PTR [edi+0x4f],0xffffff9d
  40ae3e:	pop    eax
  40ae3f:	popa   
  40ae40:	repz cmp eax,0x1f1b4bc9
  40ae46:	ss push es
  40ae48:	jmp    0xb548b22f
  40ae4d:	dec    ebp
  40ae4e:	scas   eax,DWORD PTR es:[edi]
  40ae4f:	ins    BYTE PTR es:[edi],dx
  40ae50:	dec    edi
  40ae51:	int    0x1b
  40ae53:	leave  
  40ae54:	and    al,0x6e
  40ae56:	popf   
  40ae57:	rol    DWORD PTR [edi],0x3a
  40ae5a:	das    
  40ae5b:	mov    ebx,0x666df814
  40ae60:	cli    
  40ae61:	out    dx,eax
  40ae62:	stos   BYTE PTR es:[edi],al
  40ae63:	imul   BYTE PTR [ebx+0x606a58b6]
  40ae69:	xchg   edx,eax
  40ae6a:	loope  0x40aebc
  40ae6c:	out    dx,al
  40ae6d:	addr16 pop eax
  40ae70:	or     DWORD PTR ds:0xcdc0b6bb,esi
  40ae76:	xlat   BYTE PTR ds:[ebx]
  40ae77:	cmp    esi,esp
  40ae79:	mov    ebx,0xd2067ea5
  40ae7e:	test   DWORD PTR [esi+ebx*4],esp
  40ae81:	inc    esp
  40ae82:	lods   eax,DWORD PTR ds:[esi]
  40ae83:	sub    DWORD PTR [edx+edi*4],eax
  40ae86:	ret    
  40ae87:	sub    esp,eax
  40ae89:	dec    edx
  40ae8a:	aaa    
  40ae8b:	into   
  40ae8c:	cld    
  40ae8d:	fdivr  DWORD PTR [edi]
  40ae90:	imul   edi,edi,0xffffffaa
  40ae93:	call   0x3fc7:0x4ee6c741
  40ae9a:	(bad)  
  40ae9b:	aad    0x41
  40ae9d:	popa   
  40ae9e:	mov    WORD PTR [edx+0x13],gs
  40aea1:	cmp    BYTE PTR [ebp+0x51],0xfc
  40aea5:	xchg   edx,eax
  40aea6:	cwde   
  40aea7:	xor    DWORD PTR [edx+0x42ba6f02],edx
  40aead:	jl     0x40af08
  40aeaf:	mov    dl,0x9f
  40aeb1:	or     DWORD PTR [edi],ebp
  40aeb3:	ffree  st(1)
  40aeb5:	or     cl,ch
  40aeb7:	gs mov ebx,0x154765a
  40aebd:	outs   dx,DWORD PTR ds:[esi]
  40aebe:	gs js  0x40ae4d
  40aec1:	jnp    0x40aebb
  40aec3:	fnstsw WORD PTR [esi-0x57954f2]
  40aec9:	dec    esi
  40aeca:	int    0x5d
  40aecc:	jb     0x40aebf
  40aece:	stos   BYTE PTR es:[edi],al
  40aecf:	adc    DWORD PTR [ebx+0x67a7ca6],edi
  40aed5:	sbb    BYTE PTR [esi-0x4a],dl
  40aed8:	cmp    bh,BYTE PTR [esi]
  40aeda:	loopne 0x40aeec
  40aedc:	pop    ebp
  40aedd:	xor    eax,0xe386a281
  40aee2:	(bad)  
  40aee3:	xchg   esi,eax
  40aee4:	inc    esi
  40aee5:	pop    edi
  40aee6:	sbb    DWORD PTR [edi-0x7a],eax
  40aee9:	out    0xb8,eax
  40aeeb:	ret    
  40aeec:	nop
  40aeed:	movnti DWORD PTR [esi+0x1e],eax
  40aef1:	mov    esi,0xe1d15682
  40aef6:	pop    ebx
  40aef7:	mov    edx,0x63b4143d
  40aefc:	das    
  40aefd:	sub    BYTE PTR [eax-0x751517a2],bh
  40af03:	lds    edx,FWORD PTR ds:0x3f497ca5
  40af09:	test   BYTE PTR [ebx-0x5f669246],dl
  40af0f:	mov    eax,ds:0x30549fd0
  40af14:	(bad)  
  40af15:	jb     0x40af17
  40af17:	push   esi
  40af18:	and    BYTE PTR [ebx],bh
  40af1a:	addr16 lock stc 
  40af1d:	push   es
  40af1e:	cvtps2pd xmm3,QWORD PTR [esi+edi*1]
  40af22:	sub    cl,BYTE PTR [edi+0x4]
  40af25:	icebp  
  40af26:	aas    
  40af27:	popa   
  40af28:	daa    
  40af29:	xor    ah,BYTE PTR [ebx+ebp*8-0x5bf41892]
  40af30:	outs   dx,BYTE PTR ds:[esi]
  40af31:	loopne 0x40aef1
  40af33:	lods   eax,DWORD PTR ds:[esi]
  40af34:	push   ebx
  40af35:	pop    eax
  40af36:	jp     0x40af8b
  40af38:	adc    BYTE PTR [edx-0x58],cl
  40af3b:	data16 ins BYTE PTR es:[edi],dx
  40af3d:	inc    esi
  40af3e:	add    ecx,DWORD PTR [esp+edi*1]
  40af41:	push   ebp
  40af42:	xor    BYTE PTR [ebx-0x32e508e9],ch
  40af48:	adc    al,0xad
  40af4a:	mov    eax,0xc2c840e3
  40af4f:	or     DWORD PTR ds:0x63117de9,edi
  40af55:	add    DWORD PTR [esi+0x9c7f489],esp
  40af5b:	sub    al,0x9
  40af5d:	dec    esp
  40af5e:	xchg   DWORD PTR [edi-0x312942f3],ecx
  40af64:	enter  0xf490,0x3e
  40af68:	outs   dx,DWORD PTR ds:[esi]
  40af69:	and    eax,0x950dd5a
  40af6e:	mov    al,ds:0x4c313ce5
  40af73:	out    0xfd,al
  40af75:	mov    WORD PTR [ecx+0x12],gs
  40af78:	mov    esi,0xc75a9c89
  40af7d:	pop    esi
  40af7e:	dec    esp
  40af7f:	or     eax,DWORD PTR [ebp-0xd9235a2]
  40af85:	into   
  40af86:	dec    esi
  40af87:	add    bl,BYTE PTR [ebx-0x4c86fad9]
  40af8d:	cmp    DWORD PTR [edi-0x1b60fe83],esp
  40af93:	imul   ecx
  40af95:	ss fwait
  40af97:	dec    edx
  40af98:	cli    
  40af99:	jae    0x40aff1
  40af9b:	jecxz  0x40afc5
  40af9d:	addr16 xchg edx,eax
  40af9f:	sbb    edi,DWORD PTR [esi+0x36e4d8e6]
  40afa5:	cmp    ebx,DWORD PTR [edx]
  40afa7:	aaa    
  40afa8:	mov    esp,0x90799c37
  40afad:	mov    bl,0x46
  40afaf:	(bad)  
  40afb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb1:	mov    cl,BYTE PTR [esi]
  40afb3:	sub    DWORD PTR [ebx-0x6cf12189],edi
  40afb9:	std    
  40afba:	xchg   ecx,eax
  40afbb:	jg     0x40af6a
  40afbd:	push   cs
  40afbe:	jecxz  0x40afa3
  40afc0:	adc    ecx,0xec297ff2
  40afc6:	jae    0x40affd
  40afc8:	fdivr  st,st(3)
  40afca:	jb     0x40af93
  40afcc:	mov    ax,WORD PTR [ebp-0x4]
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0x129b0d0,0x2d
  40afff:	in     eax,dx
  40b000:	and    ch,BYTE PTR [ecx]
  40b002:	hlt    
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffcd
  40b00a:	repz dec esi
  40b00c:	mov    al,ds:0x1354107d
  40b011:	sub    ebx,DWORD PTR [eax+0x763a1cf7]
  40b017:	out    0xfb,eax
  40b019:	add    ecx,ecx
  40b01b:	ds mov bl,0x85
  40b01e:	or     esp,esp
  40b020:	mov    ds:0x80741753,eax
  40b025:	jno    0x40afe8
  40b027:	mov    eax,ds:0xef38cc80
  40b02c:	ds pop edx
  40b02e:	dec    BYTE PTR [ebp-0x73c796b2]
  40b034:	lods   al,BYTE PTR ds:[esi]
  40b035:	daa    
  40b036:	lahf   
  40b037:	push   ebx
  40b038:	add    DWORD PTR [ebx-0x5e5607b9],ecx
  40b03e:	pop    es
  40b03f:	dec    ecx
  40b040:	(bad)  
  40b041:	lock (bad) 
  40b043:	mov    bl,0x12
  40b045:	into   
  40b046:	js     0x40b05d
  40b048:	push   esi
  40b049:	jae    0x40b059
  40b04b:	jmp    0x9c47fa3e
  40b050:	bound  esp,QWORD PTR [edi]
  40b052:	xchg   ebp,eax
  40b053:	cld    
  40b054:	jb     0x40b0d3
  40b056:	mov    ds:0xa3d9ef27,al
  40b05b:	rcr    DWORD PTR [ebx+0x19806054],cl
  40b061:	jp     0x40b00a
  40b063:	sub    eax,0xefd58e4
  40b068:	hlt    
  40b069:	int    0x7a
  40b06b:	in     al,0x8f
  40b06d:	mov    ds:0xc1b92b58,eax
  40b072:	xor    eax,0x89f8f962
  40b077:	(bad)  
  40b078:	xadd   BYTE PTR [edx],dl
  40b07b:	mov    ch,0x67
  40b07d:	test   al,0x2b
  40b07f:	jl     0x40b00c
  40b081:	mov    al,ds:0xb38aa968
  40b086:	fisttp WORD PTR [esi-0x4355c99b]
  40b08c:	push   cs
  40b08d:	mov    ecx,0x9b8b1455
  40b092:	sub    ah,BYTE PTR [ebp+0x59]
  40b095:	js     0x40b095
  40b097:	add    esp,DWORD PTR [ecx+0x30]
  40b09a:	loopne 0x40b085
  40b09c:	pop    esp
  40b09d:	ds add al,0xc2
  40b0a0:	js     0x40b081
  40b0a2:	sbb    ebx,DWORD PTR [eax]
  40b0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0a5:	popf   
  40b0a6:	mov    bl,0x17
  40b0a8:	out    dx,al
  40b0a9:	ret    
  40b0aa:	mov    esi,0xe751e98a
  40b0af:	mov    ecx,0xec772905
  40b0b4:	sahf   
  40b0b5:	(bad)  
  40b0b6:	jp     0x40b0f0
  40b0b8:	xchg   ebx,eax
  40b0b9:	(bad)  
  40b0ba:	sub    eax,0x61f319ef
  40b0bf:	imul   ebp,DWORD PTR [ecx+0x59],0x118032c
  40b0c6:	repnz mov eax,0xde81ebcd
  40b0cc:	add    DWORD PTR [eax-0xc844978],ebx
  40b0d2:	dec    ebp
  40b0d3:	jae    0x40b081
  40b0d5:	loop   0x40b104
  40b0d7:	inc    ebp
  40b0d8:	or     dh,0xb7
  40b0db:	push   es
  40b0dc:	push   eax
  40b0dd:	jg     0x40b150
  40b0df:	mov    gs,WORD PTR [edi-0x40ae7b4a]
  40b0e5:	add    BYTE PTR [esi-0x53],bh
  40b0e8:	mov    ds,ebx
  40b0ea:	or     BYTE PTR [edi-0x5df22371],ch
  40b0f0:	mov    bh,0x94
  40b0f2:	jb     0x40b0ce
  40b0f4:	and    esi,DWORD PTR [eax+eax*1-0x7d]
  40b0f8:	inc    ecx
  40b0f9:	push   0x2
  40b0fb:	xor    ebx,DWORD PTR [edx-0x75bc98aa]
  40b101:	xor    al,0x9e
  40b103:	push   eax
  40b104:	xor    ah,BYTE PTR [ebp-0x2c]
  40b107:	and    DWORD PTR [edx+0x78],eax
  40b10a:	outs   dx,BYTE PTR ds:[esi]
  40b10b:	mov    dh,ah
  40b10d:	adc    dh,BYTE PTR [ebx]
  40b10f:	out    dx,al
  40b110:	sub    edi,DWORD PTR [eax]
  40b112:	fist   WORD PTR [ebx+0x13]
  40b115:	paddb  mm3,QWORD PTR [esi-0x19]
  40b119:	in     al,0x85
  40b11b:	pop    edx
  40b11c:	mov    dl,0x2b
  40b11e:	sbb    al,0x34
  40b120:	inc    esi
  40b121:	xchg   DWORD PTR [ecx],esi
  40b123:	inc    edx
  40b124:	hlt    
  40b125:	es out 0xd1,eax
  40b128:	push   cs
  40b129:	or     cl,BYTE PTR [ebp-0x6a]
  40b12c:	or     BYTE PTR ds:0x9255448d,bh
  40b132:	test   DWORD PTR ds:0x151a47f3,0xd308a42b
  40b13c:	das    
  40b13d:	push   ds
  40b13e:	std    
  40b13f:	add    al,0x92
  40b141:	mov    esp,0xe2e2451a
  40b146:	mov    al,0xdb
  40b148:	xor    ch,BYTE PTR [ecx-0x26612bdd]
  40b14e:	or     ecx,ecx
  40b150:	ret    0xeb52
  40b153:	mov    DWORD PTR [edi-0x27],ecx
  40b156:	inc    ecx
  40b157:	push   ebp
  40b158:	xchg   ecx,eax
  40b159:	int3   
  40b15a:	xor    esi,eax
  40b15c:	push   es
  40b15d:	mov    WORD PTR [edi+0x70fbc310],fs
  40b163:	lea    edi,[ebp+0x5b82053c]
  40b169:	pushf  
  40b16a:	ret    0xf70d
  40b16d:	mov    ebp,0x7f3dc25b
  40b172:	add    edx,eax
  40b174:	out    0xc1,al
  40b176:	shl    BYTE PTR [edx-0x25],0x48
  40b17a:	adc    eax,0xeecd176f
  40b17f:	imul   BYTE PTR [esi]
  40b181:	add    esi,DWORD PTR [ecx]
  40b183:	inc    edx
  40b184:	jl     0x40b1a2
  40b186:	or     eax,0xa48a6ded
  40b18b:	into   
  40b18c:	fcom   DWORD PTR [ebx]
  40b18e:	or     bh,dh
  40b190:	mov    WORD PTR [esi],ds
  40b192:	fsub   QWORD PTR [edi-0x41]
  40b195:	addr16 ret 0xf7cf
  40b199:	jge    0x40b157
  40b19b:	stos   BYTE PTR es:[edi],al
  40b19c:	(bad)  
  40b19e:	test   BYTE PTR [eax],bl
  40b1a0:	jae    0x40b157
  40b1a2:	dec    esi
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	aaa    
  40b1a5:	(bad)  
  40b1a6:	(bad)  
  40b1a7:	lods   al,BYTE PTR ds:[esi]
  40b1a8:	inc    ecx
  40b1a9:	jne    0x40b207
  40b1ab:	rcl    BYTE PTR [esi],cl
  40b1ad:	dec    esi
  40b1ae:	xor    al,0x5b
  40b1b0:	mov    BYTE PTR [ebx],bh
  40b1b2:	gs jbe 0x40b153
  40b1b5:	outs   dx,BYTE PTR ds:[esi]
  40b1b6:	sub    dh,dh
  40b1b8:	clc    
  40b1b9:	cmp    al,0xf2
  40b1bb:	jns    0x40b18a
  40b1bd:	aaa    
  40b1be:	int    0xa6
  40b1c0:	daa    
  40b1c1:	cwde   
  40b1c2:	xor    ch,bl
  40b1c4:	repnz push ebp
  40b1c6:	xchg   ebp,eax
  40b1c7:	jbe    0x40b18a
  40b1c9:	and    cl,bh
  40b1cb:	fiadd  DWORD PTR [ebx+eiz*2]
  40b1ce:	test   BYTE PTR [esi-0xc90a1d],0xd2
  40b1d5:	jb     0x40b1f8
  40b1d7:	push   ebp
  40b1d8:	add    esi,DWORD PTR [eax+0x5d9da282]
  40b1de:	fld    TBYTE PTR [edi-0x3413d224]
  40b1e4:	cmp    ch,BYTE PTR [eax+0x696e9eaf]
  40b1ea:	jbe    0x40b1ce
  40b1ec:	(bad)  
  40b1ed:	je     0x40b1db
  40b1ef:	cmp    BYTE PTR [ecx],dl
  40b1f1:	into   
  40b1f2:	sub    DWORD PTR [ecx+0x756b23b1],0xa4c27243
  40b1fc:	outs   dx,DWORD PTR ds:[esi]
  40b1fd:	push   cs
  40b1fe:	xchg   esp,eax
  40b1ff:	jb     0x40b1e9
  40b201:	addr16 add al,0xc6
  40b204:	shl    BYTE PTR [ebp+0x3d],1
  40b207:	ja     0x40b210
  40b209:	es daa 
  40b20b:	ins    BYTE PTR es:[edi],dx
  40b20c:	jg     0x40b1c0
  40b20e:	mov    dh,BYTE PTR ds:0x7cb2a4c3
  40b214:	mov    dl,0x42
  40b216:	push   eax
  40b217:	mov    ?,WORD PTR [edx]
  40b219:	jl     0x40b288
  40b21b:	xor    al,BYTE PTR [ebx+0x1bda2d4c]
  40b221:	xor    DWORD PTR [eax-0x7c552bc7],edx
  40b227:	mov    ds:0x83635ed3,eax
  40b22c:	(bad)  
  40b22d:	stc    
  40b22e:	out    0x22,eax
  40b230:	das    
  40b231:	cmp    DWORD PTR [eax+0x58d2a40d],ebp
  40b237:	mov    esi,0xf1c1e5a7
  40b23c:	jl     0x40b254
  40b23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b240:	add    al,0x82
  40b242:	fnstenv [ecx]
  40b244:	clc    
  40b245:	clc    
  40b246:	sbb    DWORD PTR [eax+0x30],0xffffff96
  40b24a:	cmp    DWORD PTR [esi+0x79255ae0],ecx
  40b250:	xchg   DWORD PTR [edi+eax*4],ecx
  40b253:	add    eax,0xad037281
  40b258:	rol    DWORD PTR [ebx+ebp*4],0x5b
  40b25c:	out    0xad,eax
  40b25e:	mov    ah,0x54
  40b260:	sub    DWORD PTR [edx+eiz*2+0x3a],ebp
  40b264:	mov    esp,0xe528230a
  40b269:	adc    BYTE PTR [edi-0x2d],dh
  40b26c:	xchg   esp,eax
  40b26d:	cdq    
  40b26e:	push   edi
  40b26f:	xchg   ebx,eax
  40b270:	xor    eax,0x4c7faab5
  40b275:	mov    eax,ds:0x3745fff0
  40b27a:	cmp    DWORD PTR [edx],edx
  40b27c:	fnstsw WORD PTR [esp+eiz*8+0x23]
  40b280:	cmp    esi,edi
  40b282:	and    al,0x78
  40b284:	pop    ebx
  40b285:	or     ah,BYTE PTR [edi-0x54]
  40b288:	push   edx
  40b289:	jae    0x40b2b9
  40b28b:	(bad)  
  40b28c:	(bad)  
  40b28d:	iret   
  40b28e:	inc    ecx
  40b28f:	xor    al,BYTE PTR [edx+0x5e8e171b]
  40b295:	repnz mov ecx,0x40ff7016
  40b29b:	(bad)  
  40b29c:	lods   al,BYTE PTR ds:[esi]
  40b29d:	pop    esi
  40b29e:	cmc    
  40b29f:	jmp    0x7e11:0x66346f3a
  40b2a6:	pop    edi
  40b2a7:	pop    edx
  40b2a8:	jge    0x40b25a
  40b2aa:	inc    ecx
  40b2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ac:	jo     0x40b29d
  40b2ae:	lods   al,BYTE PTR ds:[esi]
  40b2af:	das    
  40b2b0:	lea    ebp,[edx-0x3b67a133]
  40b2b6:	icebp  
  40b2b7:	cld    
  40b2b8:	mov    eax,0x50a6703
  40b2bd:	cmp    esp,edx
  40b2bf:	cdq    
  40b2c0:	shl    esi,cl
  40b2c2:	stos   DWORD PTR es:[edi],eax
  40b2c3:	(bad)  
  40b2c4:	in     eax,0x4a
  40b2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2c7:	pop    ebp
  40b2c8:	mov    ecx,0xbd1b751d
  40b2cd:	xor    ebp,ecx
  40b2cf:	cmp    eax,0x9b02d757
  40b2d4:	fimul  DWORD PTR [eax+0x10]
  40b2d7:	retf   
  40b2d8:	mov    edi,DWORD PTR [ebx-0x34]
  40b2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2dc:	loope  0x40b27e
  40b2de:	sbb    BYTE PTR [ebp-0x57],dh
  40b2e1:	pop    ebp
  40b2e2:	out    0xa4,al
  40b2e4:	mov    ds:0x1e584a20,eax
  40b2e9:	not    DWORD PTR [esi+0x2f812af]
  40b2ef:	inc    ebp
  40b2f0:	mov    bl,0x66
  40b2f2:	stos   BYTE PTR es:[edi],al
  40b2f3:	scas   al,BYTE PTR es:[edi]
  40b2f4:	cmp    eax,0xa0767e4c
  40b2f9:	enter  0x6c30,0x36
  40b2fd:	sbb    al,BYTE PTR [esp+ebp*4-0x34ace1]
  40b304:	adc    ecx,edi
  40b306:	sbb    eax,0x83e203b7
  40b30b:	iret   
  40b30c:	and    DWORD PTR [eax+0x46],esp
  40b30f:	leave  
  40b310:	clc    
  40b311:	pop    ds
  40b312:	lods   eax,DWORD PTR ds:[esi]
  40b313:	cmp    ch,BYTE PTR [ebx]
  40b315:	push   ebp
  40b316:	and    dl,BYTE PTR [eax+0x16]
  40b319:	dec    edx
  40b31a:	xor    cl,BYTE PTR [edx+0x59d6c6bd]
  40b320:	ror    BYTE PTR [ebp-0x78],0x5e
  40b324:	cli    
  40b325:	(bad)  
  40b326:	push   ebx
  40b327:	inc    ebp
  40b328:	int    0x7d
  40b32a:	pop    ecx
  40b32b:	jo     0x40b31d
  40b32d:	pop    ecx
  40b32e:	js     0x40b326
  40b330:	je     0x40b2c0
  40b332:	xchg   DWORD PTR [ecx],esp
  40b334:	adc    BYTE PTR [edx],cl
  40b336:	outs   dx,BYTE PTR ss:[esi]
  40b338:	fst    QWORD PTR [esp+esi*8+0x6df5dd22]
  40b33f:	cmp    eax,DWORD PTR [esi+0xb]
  40b342:	retf   0x19b9
  40b345:	mov    cl,0x34
  40b347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b348:	push   ds
  40b349:	sbb    al,0x8c
  40b34b:	addr16 mov bl,0x99
  40b34e:	adc    edx,eax
  40b350:	daa    
  40b351:	test   al,0x19
  40b353:	push   ecx
  40b354:	cmp    BYTE PTR [ecx+eiz*1],ch
  40b357:	addr16 sub al,0x56
  40b35a:	dec    esp
  40b35b:	adc    al,0x3f
  40b35d:	xchg   edx,eax
  40b35e:	sub    eax,0xf7f9deb3
  40b363:	jg     0x40b33b
  40b365:	push   edx
  40b366:	(bad)  
  40b367:	cdq    
  40b368:	test   eax,0xef47d3c8
  40b36d:	loop   0x40b31a
  40b36f:	retf   
  40b370:	outs   dx,DWORD PTR ds:[esi]
  40b371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b372:	int    0x80
  40b374:	jae    0x40b300
  40b376:	inc    ecx
  40b377:	xor    DWORD PTR [esi+edi*4],edi
  40b37a:	xor    eax,0xc54fa5d3
  40b37f:	xchg   DWORD PTR [ecx-0x7b4c4c7],esi
  40b385:	mov    dh,0xc8
  40b387:	mov    esp,0xc2fffa31
  40b38c:	jl     0x40b409
  40b38e:	pop    ecx
  40b38f:	lock jmp 0x390:0x671039e
  40b397:	sbb    DWORD PTR [eax],edi
  40b399:	push   ds
  40b39a:	in     al,0x5a
  40b39c:	dec    ebp
  40b39d:	cmp    esi,DWORD PTR [ebp+0xae7622e]
  40b3a3:	int    0xeb
  40b3a5:	pusha  
  40b3a6:	jmp    0xb96adb68
  40b3ab:	popf   
  40b3ac:	sub    al,al
  40b3ae:	jbe    0x40b382
  40b3b0:	ror    DWORD PTR [edx],1
  40b3b2:	rcl    ah,0xb0
  40b3b5:	imul   esp,DWORD PTR [esi+0x7],0x76
  40b3b9:	pop    edi
  40b3ba:	and    ecx,esp
  40b3bc:	cmc    
  40b3bd:	dec    eax
  40b3be:	test   al,0x23
  40b3c0:	lds    esi,FWORD PTR [eax+0x71]
  40b3c3:	or     bl,BYTE PTR [esi-0x5f]
  40b3c6:	mov    ds:0x68bef8be,al
  40b3cb:	repz or ebp,esi
  40b3ce:	mov    dh,0x6e
  40b3d0:	push   es
  40b3d1:	shr    BYTE PTR [esi+0x73],1
  40b3d4:	std    
  40b3d5:	cs sti 
  40b3d7:	jno    0x40b403
  40b3d9:	jl     0x40b416
  40b3db:	sahf   
  40b3dc:	(bad)  
  40b3dd:	std    
  40b3de:	shl    DWORD PTR [ecx],0x61
  40b3e1:	pop    esp
  40b3e2:	xchg   esp,eax
  40b3e3:	push   ecx
  40b3e4:	and    edi,DWORD PTR [edi]
  40b3e6:	push   ebp
  40b3e7:	pop    esp
  40b3e8:	ins    BYTE PTR es:[edi],dx
  40b3e9:	lock xor edx,DWORD PTR [esi+0x20]
  40b3ed:	fcos   
  40b3ef:	imul   ebp,DWORD PTR [edx+esi*8-0xfd40ef1],0x6b
  40b3f7:	mov    edi,0xe53347af
  40b3fc:	dec    BYTE PTR [edi-0xe0d5e62]
  40b402:	xchg   edi,ebx
  40b404:	aam    0xd
  40b406:	or     BYTE PTR [ecx-0x55e510de],dl
  40b40c:	cli    
  40b40d:	int    0x3f
  40b40f:	dec    ecx
  40b410:	sub    al,0xab
  40b412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b413:	imul   BYTE PTR [edx+0x52f6b242]
  40b419:	pushf  
  40b41a:	(bad)  [ebp-0x25]
  40b41d:	inc    eax
  40b41e:	sub    DWORD PTR [ebx+edi*4-0x3a],edx
  40b422:	in     eax,dx
  40b423:	into   
  40b424:	lods   eax,DWORD PTR ds:[esi]
  40b425:	add    eax,0x9e282d8d
  40b42a:	or     al,0x64
  40b42c:	mov    dh,0xd1
  40b42e:	rol    esi,0x40
  40b431:	lods   eax,DWORD PTR ds:[esi]
  40b432:	loopne 0x40b44b
  40b434:	jp     0x40b4b2
  40b436:	dec    ebx
  40b437:	mov    esi,0xe19fe64d
  40b43c:	fist   WORD PTR ds:0xe4e0654a
  40b442:	loope  0x40b3fc
  40b444:	fiadd  DWORD PTR [edx]
  40b446:	mov    dh,0x3f
  40b448:	div    eax
  40b44a:	neg    DWORD PTR [ebp-0x301ced11]
  40b450:	xchg   ecx,ebp
  40b452:	pop    esi
  40b453:	mov    bl,0x33
  40b455:	int    0xaa
  40b457:	cmp    bh,BYTE PTR [ebx-0x4adbec5c]
  40b45d:	push   esi
  40b45e:	mov    cl,0x44
  40b460:	mov    gs,eax
  40b462:	inc    eax
  40b463:	adc    DWORD PTR [eax],ecx
  40b465:	add    eax,0x58b96e3b
  40b46a:	repz ss push cs
  40b46d:	lods   al,BYTE PTR ds:[esi]
  40b46e:	stos   DWORD PTR es:[edi],eax
  40b46f:	inc    eax
  40b470:	mov    esi,0x37ed3e8
  40b475:	xchg   esi,eax
  40b476:	pop    edx
  40b477:	(bad)  
  40b479:	test   ebx,esi
  40b47b:	mov    ds:0x3b2a866f,al
  40b480:	dec    ecx
  40b481:	dec    esi
  40b482:	fadd   DWORD PTR [ecx]
  40b484:	clc    
  40b485:	call   0x52cc:0xb486aa48
  40b48c:	jp     0x40b4c5
  40b48e:	sub    DWORD PTR [edx-0x6e3279ac],ebx
  40b494:	out    dx,eax
  40b495:	xchg   edi,eax
  40b496:	(bad)  
  40b497:	fst    QWORD PTR [edx]
  40b499:	retf   0x10df
  40b49c:	mov    esp,0x6568c44d
  40b4a1:	ret    0xb43f
  40b4a4:	pusha  
  40b4a5:	mov    ch,BYTE PTR [ecx+ebx*8+0x76493ddb]
  40b4ac:	das    
  40b4ad:	mov    DWORD PTR [ebx+0x672214e3],esi
  40b4b3:	jmp    0xe7f2:0x31102767
  40b4ba:	inc    esi
  40b4bb:	sub    al,0xa1
  40b4bd:	call   0x130edcb0
  40b4c2:	clc    
  40b4c3:	imul   edx,DWORD PTR [edx],0x45
  40b4c6:	aas    
  40b4c7:	xlat   BYTE PTR ds:[ebx]
  40b4c8:	add    eax,0xf0946d57
  40b4cd:	loope  0x40b4eb
  40b4cf:	aam    0x3a
  40b4d1:	mov    edx,0xacdbe30d
  40b4d6:	mov    BYTE PTR [ebx+0x3fe326bf],bh
  40b4dc:	leave  
  40b4dd:	pop    ebx
  40b4de:	mov    edx,0x988fdecd
  40b4e3:	(bad)  [edx+0x2eba3b24]
  40b4e9:	fsub   QWORD PTR [ebp-0x1f]
  40b4ec:	in     eax,0xf6
  40b4ee:	or     DWORD PTR [esi],eax
  40b4f0:	adc    eax,0x95a946d4
  40b4f5:	mov    esi,0x2d34ae8a
  40b4fa:	in     eax,0x95
  40b4fc:	dec    ecx
  40b4fd:	shr    DWORD PTR [eax-0x486eaf49],1
  40b503:	stc    
  40b504:	xor    esi,DWORD PTR [eax]
  40b506:	fwait
  40b507:	dec    esi
  40b508:	or     edx,edx
  40b50a:	xor    al,0xcc
  40b50c:	and    BYTE PTR [ebx],bl
  40b50e:	push   eax
  40b50f:	pop    es
  40b510:	aad    0x98
  40b512:	push   0xffffffdb
  40b514:	cdq    
  40b515:	in     al,dx
  40b516:	mov    edi,0xe1cf68df
  40b51b:	jmp    0x7cd9:0x9f5eeb3f
  40b522:	call   0xfe7db38a
  40b527:	xor    eax,0x57923a68
  40b52c:	js     0x40b59a
  40b52e:	jp     0x40b57e
  40b530:	addr16 inc edx
  40b532:	dec    esi
  40b533:	jnp    0x40b4b6
  40b535:	std    
  40b536:	push   es
  40b537:	lahf   
  40b538:	mov    eax,ds:0x9a31de76
  40b53d:	sub    esi,eax
  40b53f:	mov    ch,0x38
  40b541:	inc    esp
  40b542:	lock push edi
  40b544:	es jae 0x40b5ad
  40b547:	jae    0x40b547
  40b549:	in     al,0xbb
  40b54b:	add    eax,DWORD PTR [ebx+edx*4+0x3bbb72ef]
  40b552:	mov    ds:0x70948947,al
  40b557:	in     eax,dx
  40b558:	lods   eax,DWORD PTR ds:[esi]
  40b559:	mov    ebp,0xb742364a
  40b55e:	aas    
  40b55f:	bound  ebx,QWORD PTR [ebp*4+0x5e3adbe5]
  40b566:	or     edx,esp
  40b568:	mov    BYTE PTR [edi+eax*2],bl
  40b56b:	push   ds
  40b56c:	jne    0x40b5a5
  40b56e:	ja     0x40b54d
  40b570:	jmp    0xeafa:0x3298e082
  40b577:	cmp    al,0x2d
  40b579:	mov    eax,ds:0x89290ead
  40b57e:	push   cs
  40b57f:	jo     0x40b507
  40b581:	inc    esi
  40b582:	pop    esp
  40b583:	xchg   ebx,eax
  40b584:	inc    ebp
  40b585:	out    dx,al
  40b586:	repz cmp al,0xcc
  40b589:	push   0x26f8c81
  40b58e:	(bad)  
  40b58f:	div    BYTE PTR [ecx-0x3b]
  40b592:	xor    esi,edx
  40b594:	iret   
  40b595:	add    eax,0x7a
  40b598:	int    0x56
  40b59a:	jb     0x40b5bf
  40b59c:	jg     0x40b5b5
  40b59e:	cmp    edi,DWORD PTR ds:0xe706df79
  40b5a4:	dec    ebp
  40b5a5:	(bad)  
  40b5a6:	jecxz  0x40b5ab
  40b5a8:	scas   al,BYTE PTR es:[edi]
  40b5a9:	add    DWORD PTR [edi+0x56edea1c],ecx
  40b5af:	xor    ebp,DWORD PTR gs:[edx-0x29]
  40b5b3:	cmp    al,0x18
  40b5b5:	and    al,0x5e
  40b5b7:	mov    ebx,0x86a27e95
  40b5bc:	pop    ds
  40b5bd:	not    BYTE PTR [edx-0x2db24429]
  40b5c3:	rcr    DWORD PTR [ebx+0x7f63831d],1
  40b5c9:	mov    ds:0xd267d227,eax
  40b5ce:	test   al,0x2e
  40b5d0:	mov    ebp,0xaab27eb0
  40b5d5:	leave  
  40b5d6:	arpl   WORD PTR [esi-0x731b7b2c],cx
  40b5dc:	inc    edi
  40b5dd:	test   eax,0xb0c70614
  40b5e2:	pusha  
  40b5e3:	add    ch,bl
  40b5e5:	and    al,0x18
  40b5e7:	xor    DWORD PTR [esi+0x11],ebx
  40b5ea:	shl    esi,0xd0
  40b5ed:	add    edx,ecx
  40b5ef:	lea    edx,[ecx+eax*4-0xe54dd1e]
  40b5f6:	fld    st(0)
  40b5f8:	lods   al,BYTE PTR ds:[esi]
  40b5f9:	scas   al,BYTE PTR es:[edi]
  40b5fa:	addr16 into 
  40b5fc:	jnp    0x40b63b
  40b5fe:	pop    edi
  40b5ff:	jl     0x40b5d3
  40b601:	pop    esi
  40b602:	call   0x7bc6:0xe7956329
  40b609:	push   cs
  40b60a:	(bad)  
  40b60b:	lods   eax,DWORD PTR ds:[esi]
  40b60c:	sub    BYTE PTR [ecx+0xb52c423],cl
  40b612:	je     0x40b5f2
  40b614:	adc    eax,0x4d0d97ef
  40b619:	pop    esi
  40b61a:	add    DWORD PTR [ecx+0x620738cd],0x6954f9ed
  40b624:	rol    BYTE PTR [ecx+0x33],cl
  40b627:	scas   al,BYTE PTR es:[edi]
  40b628:	sti    
  40b629:	push   ds
  40b62a:	mov    bh,dh
  40b62c:	mov    eax,0xe101a8fe
  40b631:	scas   al,BYTE PTR es:[edi]
  40b632:	lods   eax,DWORD PTR ds:[esi]
  40b633:	or     DWORD PTR [esi],eax
  40b635:	popa   
  40b636:	dec    BYTE PTR [edi]
  40b638:	xor    al,dh
  40b63a:	dec    edi
  40b63b:	int3   
  40b63c:	test   al,0xdb
  40b63e:	clc    
  40b63f:	xchg   BYTE PTR [ecx+edx*8+0x6d],al
  40b643:	bound  ebx,QWORD PTR [ebx]
  40b645:	dec    esi
  40b646:	cmp    ebx,ebp
  40b648:	xchg   BYTE PTR [esi],cl
  40b64a:	and    cl,0x90
  40b64d:	repz mov eax,0x1b9033a0
  40b653:	sub    DWORD PTR [ebx],esi
  40b655:	cmp    DWORD PTR [edx+esi*8-0x758ec110],0xdf0ebade
  40b660:	jmp    0x445f9227
  40b665:	xchg   edx,eax
  40b666:	rol    esp,1
  40b668:	imul   ecx,DWORD PTR ds:0xe09105b8,0xffffffca
  40b66f:	xor    bh,BYTE PTR [ecx]
  40b671:	ss adc al,0x4b
  40b674:	rcl    BYTE PTR [edi-0x3280068f],0x49
  40b67b:	jmp    0x40b6ed
  40b67d:	push   0x804fbe13
  40b682:	daa    
  40b683:	dec    ebx
  40b684:	inc    esp
  40b685:	into   
  40b686:	xchg   BYTE PTR [ebx],ah
  40b688:	cmp    BYTE PTR es:[eax+0x2c989b73],cl
  40b68f:	cs jne 0x40b6a6
  40b692:	repz (bad) 
  40b694:	mov    DWORD PTR [edi],edx
  40b696:	xchg   DWORD PTR [ecx-0x34],esp
  40b699:	ss mov al,0x7
  40b69c:	outs   dx,DWORD PTR ds:[esi]
  40b69d:	inc    esp
  40b69e:	mov    bh,0xaa
  40b6a0:	aam    0x51
  40b6a2:	and    eax,0x7b515b3c
  40b6a7:	aam    0xb1
  40b6a9:	iret   
  40b6aa:	hlt    
  40b6ab:	shl    BYTE PTR [ecx-0x545ffea2],1
  40b6b1:	mov    dh,0x1f
  40b6b3:	enter  0xbf42,0xc8
  40b6b7:	mov    edx,0x70ebdd0
  40b6bc:	jae    0x40b676
  40b6be:	(bad)  
  40b6bf:	call   0xb631:0xe03abdb6
  40b6c6:	push   ebx
  40b6c7:	sub    bh,BYTE PTR [esi]
  40b6c9:	mov    ah,0x3c
  40b6cb:	and    BYTE PTR [esi+0x7b],cl
  40b6ce:	mov    edx,0x9e43f88b
  40b6d3:	xor    dl,0x75
  40b6d6:	shl    ebx,0xb8
  40b6d9:	mov    DWORD PTR [ebp+0x1d],esi
  40b6dc:	jmp    0x40b72d
  40b6de:	cmp    bh,BYTE PTR [ecx]
  40b6e0:	or     al,0xd7
  40b6e2:	or     BYTE PTR cs:[edi],0x64
  40b6e6:	ret    
  40b6e7:	scas   al,BYTE PTR es:[edi]
  40b6e8:	fnstenv ds:0xe2a8bab4
  40b6ee:	icebp  
  40b6ef:	call   0x6742:0x19b2d551
  40b6f6:	ja     0x40b686
  40b6f8:	mov    gs,esp
  40b6fa:	pop    esi
  40b6fb:	sbb    al,0x1
  40b6fd:	in     al,0xbe
  40b6ff:	push   0xffffffe0
  40b701:	retf   0xa20e
  40b704:	test   eax,0x13fb42ee
  40b709:	int3   
  40b70a:	lods   eax,DWORD PTR ds:[esi]
  40b70b:	pop    es
  40b70c:	inc    ecx
  40b70d:	ja     0x40b6c1
  40b70f:	or     eax,0xb9172655
  40b714:	cmp    BYTE PTR [edi],al
  40b716:	push   ebp
  40b717:	(bad)  
  40b718:	sbb    BYTE PTR [ebx+0x63],bh
  40b71b:	and    dl,BYTE PTR [esp+ecx*8-0x60125b63]
  40b722:	ss test al,0xcb
  40b725:	jb     0x40b793
  40b727:	retf   0x55cf
  40b72a:	cs popa 
  40b72c:	cwde   
  40b72d:	cmp    eax,0xf8af138f
  40b732:	mov    eax,ds:0x3ec88552
  40b737:	adc    BYTE PTR [ecx],bh
  40b739:	sbb    BYTE PTR [eax+0x52],ah
  40b73c:	ds scas eax,DWORD PTR es:[edi]
  40b73e:	dec    eax
  40b73f:	jb     0x40b75f
  40b741:	mov    dh,BYTE PTR [ecx+edx*2]
  40b744:	add    eax,0xf620c89f
  40b74a:	mov    ah,0x0
  40b74c:	add    al,bh
  40b74e:	sub    DWORD PTR [esp+eax*8-0x3d842a4d],edi
  40b755:	mov    BYTE PTR [ecx],cl
  40b757:	ins    BYTE PTR es:[edi],dx
  40b758:	pop    ebx
  40b759:	(bad)  
  40b75b:	dec    ebp
  40b75c:	out    0x4c,al
  40b75e:	or     edi,DWORD PTR [esi+0x64]
  40b761:	sbb    eax,0xa8a94a99
  40b766:	push   0xffffffe6
  40b768:	js     0x40b786
  40b76a:	loopne 0x40b6f4
  40b76c:	adc    eax,0xf5a3ccb0
  40b771:	cli    
  40b772:	push   ds
  40b773:	inc    eax
  40b774:	(bad)  
  40b775:	adc    eax,0xc8c951be
  40b77a:	daa    
  40b77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b77c:	rcr    DWORD PTR [ebx+0x59],1
  40b77f:	mov    ch,bl
  40b781:	jno    0x40b72a
  40b783:	dec    esi
  40b784:	jecxz  0x40b7d9
  40b786:	and    al,0x77
  40b788:	or     al,0xa
  40b78a:	lds    esi,FWORD PTR [esi-0x33]
  40b78d:	push   edx
  40b78e:	dec    eax
  40b78f:	mov    cl,0xf4
  40b791:	jl     0x40b78e
  40b793:	or     al,0x7b
  40b795:	jge    0x40b752
  40b797:	fidiv  WORD PTR [ebx+0x78e461bc]
  40b79d:	xchg   edx,eax
  40b79e:	mov    dh,0xbf
  40b7a0:	and    BYTE PTR [eax-0x68],ah
  40b7a3:	lods   eax,DWORD PTR ds:[esi]
  40b7a4:	fwait
  40b7a5:	test   BYTE PTR [ebp-0x3f7084fb],0x77
  40b7ac:	lods   eax,DWORD PTR ds:[esi]
  40b7ad:	leave  
  40b7ae:	cmc    
  40b7af:	aaa    
  40b7b0:	dec    edi
  40b7b1:	lea    esi,[esi-0x7cfc82d]
  40b7b7:	adc    ah,BYTE PTR [ebp-0x478e7907]
  40b7bd:	pop    ss
  40b7be:	push   edi
  40b7bf:	inc    ebx
  40b7c0:	stos   BYTE PTR es:[edi],al
  40b7c1:	mov    edi,0x9396b4d6
  40b7c6:	in     al,dx
  40b7c7:	sti    
  40b7c8:	sub    ch,dl
  40b7ca:	arpl   WORD PTR ds:0xef8284c2,ax
  40b7d0:	(bad)  
  40b7d1:	sti    
  40b7d2:	scas   eax,DWORD PTR es:[edi]
  40b7d3:	sub    al,0x0
  40b7d5:	jb     0x40b7cf
  40b7d7:	xor    cl,BYTE PTR [esp+ebx*2]
  40b7da:	bound  eax,QWORD PTR [edi-0x39d2c3a9]
  40b7e0:	cli    
  40b7e1:	xlat   BYTE PTR ds:[ebx]
  40b7e2:	and    eax,0xebd50cad
  40b7e7:	pop    ebp
  40b7e8:	loope  0x40b7b6
  40b7ea:	retf   0xc61f
  40b7ed:	stos   BYTE PTR es:[edi],al
  40b7ee:	dec    edx
  40b7ef:	push   ds
  40b7f0:	dec    eax
  40b7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f2:	push   edi
  40b7f3:	push   edi
  40b7f4:	inc    edi
  40b7f5:	add    DWORD PTR [ebx-0x75aa8939],edx
  40b7fb:	lods   eax,DWORD PTR ds:[esi]
  40b7fc:	daa    
  40b7fd:	shl    edi,1
  40b7ff:	popf   
  40b800:	out    0x21,eax
  40b802:	push   edi
  40b803:	mov    ecx,DWORD PTR [esi-0x5c]
  40b806:	(bad)  
  40b807:	out    0xb9,al
  40b809:	mov    ebx,DWORD PTR [edi]
  40b80b:	mov    esi,0x4ce7efa0
  40b810:	stc    
  40b811:	adc    ebx,DWORD PTR [ebx+0x1cc41942]
  40b817:	shr    DWORD PTR [eax],cl
  40b819:	or     eax,0xbcc62d23
  40b81e:	and    edx,DWORD PTR [esi+ebp*4-0x6f]
  40b822:	pop    edi
  40b823:	jg     0x40b7c2
  40b825:	sbb    BYTE PTR [ecx],cl
  40b827:	push   cs
  40b828:	mov    ebx,0xbf7e4109
  40b82d:	loopne 0x40b7c5
  40b82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b830:	inc    ebx
  40b831:	retf   
  40b832:	gs int3 
  40b834:	mov    DWORD PTR fs:[edi],ecx
  40b837:	addr16 cli 
  40b839:	xchg   edx,eax
  40b83a:	mov    al,ds:0x8c72c2cb
  40b83f:	xchg   esi,eax
  40b840:	int    0xf9
  40b842:	test   BYTE PTR ds:0x654c2011,al
  40b848:	mov    al,ds:0x6360fc31
  40b84d:	mov    cl,BYTE PTR [esi+edi*2]
  40b850:	aam    0x2f
  40b852:	call   0x1b925494
  40b857:	inc    ecx
  40b858:	push   es
  40b859:	sub    ebp,DWORD PTR [esi+0xe5f8d30]
  40b85f:	mov    dh,0x1
  40b861:	ds jp  0x40b8a3
  40b864:	iret   
  40b865:	or     DWORD PTR [ecx-0x2d],esi
  40b868:	loopne 0x40b86c
  40b86a:	jmp    0x40b7ed
  40b86c:	mov    al,ds:0x903a030d
  40b871:	repz adc al,0xe0
  40b874:	mov    cl,0xe3
  40b876:	xchg   ebx,eax
  40b877:	pop    esp
  40b878:	adc    ecx,DWORD PTR [ecx-0x77]
  40b87b:	mov    DWORD PTR [esi-0xa],ecx
  40b87e:	dec    eax
  40b87f:	inc    ecx
  40b880:	mov    ecx,0xf0780546
  40b885:	mov    dl,BYTE PTR [ebx-0x65627955]
  40b88b:	lahf   
  40b88c:	lds    esp,FWORD PTR [ecx]
  40b88e:	in     al,0x8
  40b890:	pop    edx
  40b891:	aas    
  40b892:	push   0xc128e04c
  40b897:	push   ecx
  40b898:	lea    bx,[ecx+0x26]
  40b89c:	test   edx,ecx
  40b89e:	mov    esp,DWORD PTR [ebx+ebx*2-0x67]
  40b8a2:	push   edx
  40b8a3:	shr    DWORD PTR [ebx+0x41],0xb7
  40b8a7:	dec    eax
  40b8a8:	call   0xe9b5:0x1423c28a
  40b8af:	cld    
  40b8b0:	mov    al,ds:0xff04250b
  40b8b5:	jns    0x40b8ac
  40b8b7:	mov    ecx,0x6427e91d
  40b8bc:	mov    cl,0x45
  40b8be:	jae    0x40b88b
  40b8c0:	add    DWORD PTR [edi],ecx
  40b8c2:	inc    esp
  40b8c3:	and    al,0x3d
  40b8c5:	mov    ecx,0xde5441f6
  40b8ca:	jp     0x40b879
  40b8cc:	leave  
  40b8cd:	scas   eax,DWORD PTR es:[edi]
  40b8ce:	sub    al,0x50
  40b8d0:	adc    eax,0xadf1752
  40b8d5:	jmp    DWORD PTR [edx-0x29]
  40b8d8:	enter  0x9eee,0x99
  40b8dc:	jo     0x40b89a
  40b8de:	xchg   esi,eax
  40b8df:	mov    edx,0x3dfbfc4c
  40b8e4:	dec    ebx
  40b8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e6:	adc    al,al
  40b8e8:	(bad)  
  40b8e9:	cli    
  40b8ea:	sub    eax,0x24282c12
  40b8ef:	add    edi,DWORD PTR [ebx-0x23]
  40b8f2:	xchg   BYTE PTR [edi],al
  40b8f4:	into   
  40b8f5:	cmp    eax,0x1fa4aff7
  40b8fa:	int3   
  40b8fb:	cwde   
  40b8fc:	jnp    0x40b934
  40b8fe:	aam    0x49
  40b900:	sbb    BYTE PTR [ecx],dl
  40b902:	xor    al,0xde
  40b904:	or     BYTE PTR [eax+0x6a],bh
  40b907:	xor    eax,0x74e6980
  40b90c:	(bad)  
  40b90d:	fcomp  DWORD PTR [edx+0x79]
  40b910:	outs   dx,DWORD PTR ds:[esi]
  40b911:	adc    al,0xc
  40b913:	jbe    0x40b98c
  40b915:	lods   eax,DWORD PTR ds:[esi]
  40b916:	test   eax,0xb13f873e
  40b91b:	mov    ah,0x53
  40b91d:	mov    BYTE PTR [eax],dl
  40b91f:	mov    al,0x92
  40b921:	pop    esp
  40b922:	inc    eax
  40b923:	or     dl,al
  40b925:	lea    esp,[ecx+0x29]
  40b928:	sbb    eax,0x255ed98e
  40b92d:	or     al,0x75
  40b92f:	pop    esi
  40b930:	lods   al,BYTE PTR ds:[esi]
  40b931:	xchg   ebx,eax
  40b932:	pushf  
  40b933:	mov    ch,0x66
  40b935:	daa    
  40b936:	mov    dl,0x51
  40b938:	stos   BYTE PTR es:[edi],al
  40b939:	cs ret 0x16b3
  40b93d:	mul    BYTE PTR [ebx+0xa]
  40b940:	pop    es
  40b941:	(bad)  
  40b942:	lods   eax,DWORD PTR ds:[esi]
  40b943:	mov    eax,0x8b1a375e
  40b948:	dec    ebx
  40b949:	add    DWORD PTR [edx+0xc],0xffffffef
  40b94d:	mov    cl,0xe1
  40b94f:	ins    BYTE PTR es:[edi],dx
  40b950:	sbb    eax,0xcbaffec8
  40b955:	loopne 0x40b9a9
  40b957:	sbb    BYTE PTR [ebp+0x6fac9b59],bh
  40b95d:	aas    
  40b95e:	pop    ds
  40b95f:	pop    es
  40b960:	in     eax,0x8d
  40b962:	cmp    al,0x15
  40b964:	push   edi
  40b965:	sub    DWORD PTR [esi],0xfffffffa
  40b968:	fst    DWORD PTR [eax+edi*2+0x52]
  40b96c:	aam    0x6
  40b96e:	or     ch,dl
  40b970:	mov    bl,0x38
  40b972:	pusha  
  40b973:	pop    eax
  40b974:	mov    dl,0x1f
  40b976:	lea    esp,[edi-0x1e]
  40b979:	inc    DWORD PTR [ebx]
  40b97b:	or     DWORD PTR [ebp+0x781e1cb1],0x12
  40b982:	mov    dh,0x31
  40b984:	push   ecx
  40b985:	add    eax,0x5a342397
  40b98a:	scas   al,BYTE PTR es:[edi]
  40b98b:	mov    esi,0x8439b7ad
  40b990:	pop    eax
  40b991:	xor    ebx,DWORD PTR [edx]
  40b993:	or     BYTE PTR [ebp+0xff4200e],bh
  40b999:	out    0x89,al
  40b99b:	push   esi
  40b99c:	std    
  40b99d:	mov    ch,0x72
  40b99f:	inc    edx
  40b9a0:	call   0xee27:0x1dcbe60a
  40b9a7:	adc    cl,BYTE PTR [ebp+0x7c87c21d]
  40b9ad:	sbb    al,0xf
  40b9af:	les    esp,FWORD PTR [eax+0x34]
  40b9b2:	cwde   
  40b9b3:	cld    
  40b9b4:	stc    
  40b9b5:	add    DWORD PTR [ebp+0x4f18d2ad],esp
  40b9bb:	or     al,0x40
  40b9bd:	test   DWORD PTR [ecx],edx
  40b9bf:	adc    BYTE PTR [edx+eax*2+0x5a8f1257],ch
  40b9c6:	cli    
  40b9c7:	jmp    0x161f:0x8396181b
  40b9ce:	hlt    
  40b9cf:	test   DWORD PTR [ebx],esi
  40b9d1:	add    eax,0x83c18018
  40b9d6:	addr16 (bad) 
  40b9d8:	int    0xf1
  40b9da:	repnz mov edx,0x3b293106
  40b9e0:	xchg   ebp,eax
  40b9e1:	xlat   BYTE PTR ds:[ebx]
  40b9e2:	add    BYTE PTR [esi-0x71744087],0x94
  40b9e9:	loope  0x40b9e7
  40b9eb:	cmp    DWORD PTR [esi-0x15],ebp
  40b9ee:	inc    edx
  40b9ef:	call   0x2602eb69
  40b9f4:	push   edi
  40b9f5:	sub    BYTE PTR [ebp+0x65],0xe3
  40b9f9:	mov    esp,0x48ccb332
  40b9fe:	mov    dh,0x9e
  40ba00:	icebp  
  40ba01:	push   ss
  40ba02:	enter  0x46b5,0x62
  40ba06:	adc    al,bh
  40ba08:	ins    BYTE PTR es:[edi],dx
  40ba09:	in     al,dx
  40ba0a:	cmc    
  40ba0b:	cwde   
  40ba0c:	ja     0x40b9b2
  40ba0e:	push   esi
  40ba0f:	mov    BYTE PTR [ebx],ah
  40ba11:	scas   al,BYTE PTR es:[edi]
  40ba12:	shr    DWORD PTR gs:[ecx-0xea427c],1
  40ba19:	mov    ds:0x55003da2,al
  40ba1e:	nop    DWORD PTR [ebp+0xc17e610]
  40ba25:	lahf   
  40ba26:	inc    edi
  40ba27:	sub    BYTE PTR [edi+0x2144d2af],al
  40ba2d:	hlt    
  40ba2e:	and    al,0x14
  40ba30:	les    esp,FWORD PTR [ebp-0xe]
  40ba33:	xor    esi,DWORD PTR [esi]
  40ba35:	shl    BYTE PTR [edx-0x4e43654a],1
  40ba3b:	in     eax,dx
  40ba3c:	mov    ch,0xa
  40ba3e:	adc    eax,0xf9de0020
  40ba43:	fld    QWORD PTR [edi]
  40ba45:	std    
  40ba46:	sub    al,0x3
  40ba48:	int3   
  40ba49:	add    bl,BYTE PTR [eax]
  40ba4b:	or     BYTE PTR [edx],0x46
  40ba4e:	ins    DWORD PTR es:[edi],dx
  40ba4f:	imul   esi,DWORD PTR fs:[ebx+edi*1],0x3762c28e
  40ba57:	(bad)  [edx+0x42]
  40ba5a:	adc    BYTE PTR [ebx],bh
  40ba5c:	lea    esi,[esi-0x17]
  40ba5f:	mov    ebx,0x4c40f78b
  40ba64:	fimul  WORD PTR [esi+0x56cd6fea]
  40ba6a:	mov    ah,0x12
  40ba6c:	mov    dl,0x1c
  40ba6e:	xor    edi,DWORD PTR [eax-0x3551825]
  40ba74:	mov    ah,BYTE PTR [esi+0x1d08c111]
  40ba7a:	mov    BYTE PTR [ecx+0x731f2ede],cl
  40ba80:	and    BYTE PTR [edx+0xac9a88],cl
  40ba86:	xchg   DWORD PTR [ebp-0x9],esp
  40ba89:	inc    ebp
  40ba8a:	inc    edx
  40ba8b:	add    esi,DWORD PTR [ecx+edi*1]
  40ba8e:	fist   WORD PTR [ecx+0x52]
  40ba91:	das    
  40ba92:	scas   eax,DWORD PTR es:[edi]
  40ba93:	in     al,0x35
  40ba95:	sub    DWORD PTR [esp+eiz*2+0x2bec37d7],0x92b015f2
  40baa0:	sbb    ebp,DWORD PTR [eax+0x5d]
  40baa3:	push   0x4
  40baa5:	jge    0x40ba8c
  40baa7:	cmp    BYTE PTR [edi-0x19],dl
  40baaa:	lds    ebp,FWORD PTR [ebp+ecx*1+0x4136637a]
  40bab1:	fwait
  40bab2:	pop    ss
  40bab3:	and    ah,BYTE PTR [ecx]
  40bab5:	sar    DWORD PTR [edi+esi*2+0x59],1
  40bab9:	push   0xffffffaf
  40babb:	sub    esi,DWORD PTR [ecx+0x3d]
  40babe:	sub    ch,dh
  40bac0:	js     0x40ba7c
  40bac2:	out    dx,al
  40bac3:	xchg   ebp,eax
  40bac4:	sbb    ecx,DWORD PTR [edx-0x7c205a97]
  40baca:	mov    ch,0x63
  40bacc:	in     eax,dx
  40bacd:	inc    edx
  40bace:	fs push 0xffffffd1
  40bad1:	sub    bl,dh
  40bad3:	pushf  
  40bad4:	ds sub eax,0x99713c2a
  40bada:	cmp    al,0x2e
  40badc:	outs   dx,DWORD PTR ds:[esi]
  40badd:	test   al,0x33
  40badf:	inc    edi
  40bae0:	mov    esi,0xc3c0f520
  40bae6:	loopne 0x40bb51
  40bae8:	xor    BYTE PTR [ebp+0x4a],dl
  40baeb:	sub    ch,bh
  40baed:	jmp    DWORD PTR [ebx]
  40baef:	cmp    BYTE PTR [esi],0xde
  40baf2:	loope  0x40bb2f
  40baf4:	dec    DWORD PTR [esi-0x7697e48d]
  40bafa:	push   ds
  40bafb:	neg    BYTE PTR [esi+0x778c5347]
  40bb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb02:	je     0x40bb66
  40bb04:	daa    
  40bb05:	sub    dl,BYTE PTR [esp+eiz*4+0x76]
  40bb09:	xchg   esp,eax
  40bb0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb0b:	movq   mm0,QWORD PTR [ebx-0x33]
  40bb0f:	dec    ecx
  40bb10:	int    0x18
  40bb12:	pop    edi
  40bb13:	(bad)
  40bb17:	mov    ebx,0x235c0163
  40bb1c:	imul   esp,DWORD PTR [ecx],0xfffffffa
  40bb1f:	jae    0x40bab0
  40bb21:	scas   eax,DWORD PTR es:[edi]
  40bb22:	add    ecx,esp
  40bb24:	mov    esp,0xb7b4ad46
  40bb29:	mov    al,0xa3
  40bb2b:	ret    
  40bb2c:	xchg   esi,eax
  40bb2d:	scas   al,BYTE PTR es:[edi]
  40bb2e:	in     al,dx
  40bb2f:	jmp    0x40bac1
  40bb31:	js     0x40bac2
  40bb33:	lods   al,BYTE PTR ds:[esi]
  40bb34:	or     al,0x13
  40bb36:	jmp    0xa342:0x5c23f636
  40bb3d:	fisttp DWORD PTR [ecx-0x27e98392]
  40bb43:	lods   al,BYTE PTR ds:[esi]
  40bb44:	push   0xffffffa2
  40bb46:	cli    
  40bb47:	xchg   edi,eax
  40bb48:	ficomp WORD PTR [ebx+0x6c8c5315]
  40bb4e:	test   eax,0x76d836ef
  40bb53:	cmp    al,0x69
  40bb55:	int3   
  40bb56:	stos   BYTE PTR es:[edi],al
  40bb57:	inc    ebx
  40bb58:	pop    ds
  40bb59:	jne    0x40bbcd
  40bb5b:	and    cl,bh
  40bb5d:	std    
  40bb5e:	hlt    
  40bb5f:	shl    DWORD PTR [ecx],cl
  40bb61:	ins    DWORD PTR es:[edi],dx
  40bb62:	push   ss
  40bb63:	test   DWORD PTR [esp+ecx*4],eax
  40bb66:	xchg   ebp,eax
  40bb67:	jp     0x40bbd4
  40bb69:	repnz (bad) 
  40bb6b:	adc    ch,cl
  40bb6d:	pop    ss
  40bb6e:	cs in  al,0x6c
  40bb71:	jb     0x40bb23
  40bb73:	xor    bl,BYTE PTR [ecx]
  40bb75:	ss addr16 call 0xd3008eff
  40bb7c:	push   ebx
  40bb7d:	fs adc ecx,edi
  40bb80:	sbb    eax,0xad3bc664
  40bb85:	adc    BYTE PTR ds:0xea5ef55a,cl
  40bb8b:	and    eax,0xbb1dfed9
  40bb90:	shl    DWORD PTR [eax-0x48c30f6c],cl
  40bb96:	dec    edi
  40bb97:	stos   BYTE PTR es:[edi],al
  40bb98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb99:	xor    BYTE PTR [ebx+0xf],0x7
  40bb9d:	sbb    ah,dh
  40bb9f:	imul   ebx,DWORD PTR gs:[edx],0x5c702291
  40bba6:	retf   
  40bba7:	cld    
  40bba8:	loopne 0x40bbd4
  40bbaa:	push   es
  40bbab:	fucomp st(2)
  40bbad:	out    0xce,eax
  40bbaf:	mov    al,0xba
  40bbb1:	aas    
  40bbb2:	inc    ebp
  40bbb3:	push   0xffffffab
  40bbb5:	imul   ebx,esi,0x14
  40bbb8:	and    ch,BYTE PTR [ebx]
  40bbba:	inc    eax
  40bbbb:	xchg   ebp,eax
  40bbbc:	dec    esi
  40bbbd:	rol    DWORD PTR [eax+ebp*2+0x5c],0x5f
  40bbc2:	fnstsw WORD PTR ds:0xf1adf2f6
  40bbc8:	inc    esp
  40bbc9:	mov    eax,0x999fa393
  40bbce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbcf:	and    al,0x8d
  40bbd1:	push   0xb7431674
  40bbd6:	scas   al,BYTE PTR es:[edi]
  40bbd7:	sbb    ah,BYTE PTR [eax+0x6db7145]
  40bbdd:	ss (bad) 
  40bbdf:	shl    bl,0x37
  40bbe2:	xchg   BYTE PTR [esi-0x78db2d91],cl
  40bbe8:	pop    ecx
  40bbe9:	pop    eax
  40bbea:	ja     0x40bc4b
  40bbec:	push   ebx
  40bbed:	in     eax,0x69
  40bbef:	ret    
  40bbf0:	push   ebx
  40bbf1:	cmp    dl,bl
  40bbf3:	push   ebx
  40bbf4:	scas   eax,DWORD PTR es:[edi]
  40bbf5:	(bad)  
  40bbf7:	xor    BYTE PTR [ebp+0x1f],0xfe
  40bbfb:	lods   eax,DWORD PTR ds:[esi]
  40bbfc:	icebp  
  40bbfd:	inc    edi
  40bbfe:	sbb    eax,0x9d198bd0
  40bc03:	mov    dh,0x39
  40bc05:	fwait
  40bc06:	xor    DWORD PTR [eax-0x32],edi
  40bc09:	bound  edi,QWORD PTR [ebx]
  40bc0b:	ds fwait
  40bc0d:	in     eax,0x61
  40bc0f:	nop
  40bc10:	or     al,0xad
  40bc12:	fnstenv [eax+0x33]
  40bc15:	xchg   edx,eax
  40bc16:	in     eax,dx
  40bc17:	jecxz  0x40bc32
  40bc19:	call   0x91357295
  40bc1e:	lods   al,BYTE PTR ds:[esi]
  40bc1f:	inc    eax
  40bc20:	psubq  mm6,mm6
  40bc23:	or     BYTE PTR [edx+0xb3aa118],dl
  40bc29:	sbb    al,0x18
  40bc2b:	enter  0x41e,0xdc
  40bc2f:	leave  
  40bc30:	fld    QWORD PTR [ecx+0x2c]
  40bc33:	add    ecx,DWORD PTR [esp+edx*1+0x1251f200]
  40bc3a:	ret    
  40bc3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc3c:	in     eax,dx
  40bc3d:	pushf  
  40bc3e:	mov    eax,fs
  40bc40:	or     eax,0xff8d63e6
  40bc45:	mov    bh,0xa1
  40bc47:	or     cl,BYTE PTR [ecx+edx*4]
  40bc4a:	xchg   ebp,eax
  40bc4b:	shr    edx,1
  40bc4d:	mov    dl,dl
  40bc4f:	lock xchg esi,eax
  40bc51:	mov    cl,0x9f
  40bc53:	xchg   ecx,eax
  40bc54:	xchg   DWORD PTR [eax],ebp
  40bc56:	xchg   edi,eax
  40bc57:	dec    edi
  40bc58:	sbb    al,ch
  40bc5a:	out    dx,eax
  40bc5b:	xchg   esp,eax
  40bc5c:	mov    ecx,0x8bd382ee
  40bc61:	adc    al,0xe7
  40bc63:	aas    
  40bc64:	in     eax,dx
  40bc65:	sbb    edx,ebx
  40bc67:	mov    bl,0x3d
  40bc69:	and    bh,BYTE PTR ss:[edx+0x34]
  40bc6d:	ins    BYTE PTR es:[edi],dx
  40bc6e:	mov    ebp,0x9ad646db
  40bc73:	ret    
  40bc74:	inc    edx
  40bc75:	and    ebx,DWORD PTR [edi-0x5d8d8b07]
  40bc7b:	das    
  40bc7c:	add    al,BYTE PTR [edi]
  40bc7e:	es pusha 
  40bc80:	dec    ecx
  40bc81:	xchg   ecx,eax
  40bc82:	ss dec ecx
  40bc84:	scas   eax,DWORD PTR es:[edi]
  40bc85:	shr    BYTE PTR [ebx],cl
  40bc87:	xchg   ebp,eax
  40bc88:	dec    ecx
  40bc89:	xchg   ebx,eax
  40bc8a:	mov    bl,0x9c
  40bc8c:	sub    edx,DWORD PTR [edx-0x24]
  40bc8f:	sti    
  40bc90:	sub    eax,0x59be11f5
  40bc95:	popa   
  40bc96:	fisttp WORD PTR [esi-0x4ec8cc6d]
  40bc9c:	cli    
  40bc9d:	retf   0x69f8
  40bca0:	in     eax,0xa2
  40bca2:	sbb    al,0xf4
  40bca4:	push   cs
  40bca5:	cld    
  40bca6:	out    dx,eax
  40bca7:	xchg   edx,eax
  40bca8:	mov    bl,0x5d
  40bcaa:	xor    edx,ecx
  40bcac:	jb     0x304c8372
  40bcb2:	adc    ah,dl
  40bcb4:	adc    al,0xa
  40bcb6:	mov    dh,ah
  40bcb8:	les    esi,FWORD PTR [ecx]
  40bcba:	mov    eax,ds:0x86b5a1d
  40bcbf:	lea    esi,[eax-0x33]
  40bcc2:	adc    al,0x55
  40bcc4:	adc    BYTE PTR [ebx-0x6d9447d4],dl
  40bcca:	xchg   ebp,eax
  40bccb:	cmp    al,BYTE PTR [edi+ebx*1]
  40bcce:	shr    ah,0x1
  40bcd1:	cmp    esi,DWORD PTR [esi+0x2eec0312]
  40bcd7:	std    
  40bcd8:	jns    0x40bd21
  40bcda:	(bad)  
  40bcdb:	pop    esp
  40bcdc:	cmp    al,0xcc
  40bcde:	mov    ebp,ebx
  40bce0:	mov    ebx,0xeea711af
  40bce5:	add    ch,BYTE PTR [esi-0x27f5930e]
  40bceb:	mov    ebp,0xdfe3c0cb
  40bcf0:	ss adc al,0x6d
  40bcf3:	outs   dx,BYTE PTR ds:[esi]
  40bcf4:	push   esp
  40bcf5:	add    cl,BYTE PTR [edx+0x40e9fdb0]
  40bcfb:	mov    ebp,0x8abfdbd7
  40bd00:	mov    bl,0x50
  40bd02:	arpl   WORD PTR [edi+0x0],dx
  40bd05:	adc    eax,0x140cf412
  40bd0a:	bound  edi,QWORD PTR [ecx]
  40bd0c:	xor    al,0x9f
  40bd0e:	push   ebp
  40bd0f:	sbb    DWORD PTR [ebx],edi
  40bd11:	ror    ebx,cl
  40bd13:	add    esp,ebx
  40bd15:	jp     0x40bd6e
  40bd17:	cmp    eax,DWORD PTR [ebp-0x962eb2e]
  40bd1d:	pop    ss
  40bd1e:	(bad)  
  40bd1f:	xor    bh,BYTE PTR [edi+esi*2]
  40bd22:	fcomip st,st(1)
  40bd24:	out    dx,eax
  40bd25:	sbb    al,0xa5
  40bd27:	add    eax,0xa6171136
  40bd2c:	stos   DWORD PTR es:[edi],eax
  40bd2d:	hlt    
  40bd2e:	jge    0x40bcb7
  40bd30:	iret   
  40bd31:	or     eax,0x6fe01a46
  40bd36:	add    al,0x4f
  40bd38:	cmp    al,0x31
  40bd3a:	adc    DWORD PTR [eax-0xf9a69ad],esi
  40bd40:	xchg   edx,eax
  40bd41:	lock stos DWORD PTR es:[edi],eax
  40bd43:	xchg   esi,eax
  40bd44:	iret   
  40bd45:	aas    
  40bd46:	punpckhdq mm4,QWORD PTR [edx-0x5f]
  40bd4a:	cmp    cl,al
  40bd4c:	cmp    ch,ch
  40bd4e:	or     ebx,DWORD PTR [edx-0x70]
  40bd51:	inc    esp
  40bd52:	push   eax
  40bd53:	lea    edi,[edx+0x5c]
  40bd56:	and    cl,0x64
  40bd59:	retf   0xd49b
  40bd5c:	movzx  edi,BYTE PTR [esi+esi*8+0x375fabe2]
  40bd64:	xchg   esi,eax
  40bd65:	in     eax,dx
  40bd66:	jns    0x40bde3
  40bd68:	cld    
  40bd69:	fild   DWORD PTR [esi]
  40bd6b:	fistp  WORD PTR [edi]
  40bd6d:	leave  
  40bd6e:	out    0xf5,eax
  40bd70:	rcr    BYTE PTR [edi],1
  40bd72:	cmp    al,0xd4
  40bd74:	les    eax,FWORD PTR [ecx-0x39]
  40bd77:	mov    dh,0xb0
  40bd79:	jno    0x40bd33
  40bd7b:	push   ecx
  40bd7c:	sub    DWORD PTR [esi-0xd],0x1349c3a9
  40bd83:	push   ecx
  40bd84:	pop    ds
  40bd85:	inc    ebp
  40bd86:	hlt    
  40bd87:	sbb    eax,0x5e72872b
  40bd8c:	mov    al,ds:0x9eb3f7e6
  40bd91:	add    BYTE PTR [edx-0x4b95038c],ch
  40bd97:	test   DWORD PTR [ecx+0x21],ebp
  40bd9a:	jae    0x40be11
  40bd9c:	push   es
  40bd9d:	shl    BYTE PTR [esi+esi*8-0x1],1
  40bda1:	lods   al,BYTE PTR ds:[esi]
  40bda2:	pop    ebx
  40bda3:	mov    al,0x32
  40bda5:	mov    bh,0x35
  40bda7:	adc    ch,BYTE PTR [esi+edi*8]
  40bdaa:	push   ss
  40bdab:	mov    ebx,0x44378592
  40bdb0:	icebp  
  40bdb1:	ins    BYTE PTR es:[edi],dx
  40bdb2:	jne    0x40bdef
  40bdb4:	jns    0x40bdf5
  40bdb6:	and    ebp,ecx
  40bdb8:	xchg   DWORD PTR [ecx+ebp*1-0x57e9a4bb],esi
  40bdbf:	pusha  
  40bdc0:	rcl    edx,cl
  40bdc2:	cwde   
  40bdc3:	ds rcl bl,1
  40bdc6:	(bad)  
  40bdc7:	adc    eax,0x7740e76
  40bdcc:	out    0xcb,eax
  40bdce:	pop    ds
  40bdcf:	xchg   ecx,eax
  40bdd0:	dec    edi
  40bdd1:	das    
  40bdd2:	call   0xbe13:0x4d87334b
  40bdd9:	loop   0x40be43
  40bddb:	xor    dl,bh
  40bddd:	sar    dh,cl
  40bddf:	les    ecx,FWORD PTR [ebx-0x668d3825]
  40bde5:	pop    bx
  40bde7:	ret    0xd383
  40bdea:	mov    edx,0xd75db2f5
  40bdef:	mov    al,ds:0x44612b1
  40bdf4:	and    cl,BYTE PTR [esi]
  40bdf6:	sti    
  40bdf7:	dec    esi
  40bdf8:	lods   eax,DWORD PTR ds:[esi]
  40bdf9:	sbb    BYTE PTR ds:0xf5dcc2b5,al
  40bdff:	push   es
  40be00:	jno    0x40bdf0
  40be02:	test   al,0x5c
  40be04:	rcl    BYTE PTR [ebp+0x5851b31b],1
  40be0a:	add    edi,ebx
  40be0c:	ins    BYTE PTR es:[edi],dx
  40be0d:	mov    bh,0x9f
  40be0f:	stc    
  40be10:	mov    eax,ds:0xaf9e36e9
  40be15:	out    dx,eax
  40be16:	call   0x332c16e3
  40be1b:	lods   al,BYTE PTR ds:[esi]
  40be1c:	pop    esp
  40be1d:	add    edx,0xffffff83
  40be20:	mov    bl,BYTE PTR [esi]
  40be22:	pop    edx
  40be23:	mov    cs,WORD PTR [eax-0x18279312]
  40be29:	lock sub DWORD PTR [eax-0x1b],eax
  40be2d:	push   edx
  40be2e:	test   eax,0x819a0a90
  40be33:	xchg   DWORD PTR [edx+0x15],esi
  40be36:	pop    ds
  40be37:	aad    0xa0
  40be39:	inc    edi
  40be3a:	pop    esi
  40be3b:	xchg   ebx,eax
  40be3c:	addr16 jae 0x40be9a
  40be3f:	imul   esp,DWORD PTR [ecx-0x7f],0x7c010c59
  40be46:	out    dx,eax
  40be47:	cmp    al,0xb4
  40be49:	ret    0xccf1
  40be4c:	mov    ss,ebx
  40be4e:	loopne 0x40bea7
  40be50:	mov    ebx,0x840a47b5
  40be55:	cmp    bl,BYTE PTR [ecx-0x5]
  40be58:	inc    esi
  40be59:	retf   0xd7c8
  40be5c:	pop    es
  40be5d:	mov    fs,WORD PTR [edx-0x28]
  40be60:	jmp    0x40be2a
  40be62:	and    ah,al
  40be64:	sti    
  40be65:	jb     0x40be42
  40be67:	xlat   BYTE PTR ds:[ebx]
  40be68:	sub    edx,DWORD PTR [ebp+edi*4-0x231ba882]
  40be6f:	scas   eax,DWORD PTR es:[edi]
  40be70:	arpl   si,sp
  40be72:	dec    edi
  40be73:	addr16 addr16 jno 0x40be42
  40be77:	shl    BYTE PTR [esi],1
  40be79:	pop    ds
  40be7a:	scas   eax,DWORD PTR es:[edi]
  40be7b:	(bad)  
  40be7c:	ja     0x40becf
  40be7e:	and    ch,BYTE PTR [eax-0xe7a8833]
  40be84:	sub    al,BYTE PTR [ebx+0x6ea68b1b]
  40be8a:	cdq    
  40be8b:	push   ebx
  40be8c:	jo     0x40be15
  40be8e:	dec    BYTE PTR [esi+0x36]
  40be91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be92:	iret   
  40be93:	sub    al,0xc7
  40be95:	xchg   edx,eax
  40be96:	popf   
  40be97:	and    edi,ebx
  40be99:	or     esp,DWORD PTR [esi]
  40be9b:	ss mov ebx,0x86391fb7
  40bea1:	gs push esp
  40bea3:	in     eax,dx
  40bea4:	and    cl,BYTE PTR [esi+0x71a3fa7f]
  40beaa:	outs   dx,DWORD PTR ds:[esi]
  40beab:	outs   dx,DWORD PTR ds:[esi]
  40beac:	pop    es
  40bead:	sbb    al,0x11
  40beaf:	xchg   ecx,eax
  40beb0:	popa   
  40beb1:	or     BYTE PTR [edx+0x616a9f1c],cl
  40beb7:	add    bl,BYTE PTR [esi+0x1e]
  40beba:	outs   dx,DWORD PTR ds:[esi]
  40bebb:	adc    BYTE PTR [ebx-0x61],al
  40bebe:	scas   al,BYTE PTR es:[edi]
  40bebf:	sub    DWORD PTR [edi+esi*4+0x36],ebx
  40bec3:	sbb    eax,0x713bd178
  40bec8:	jbe    0x40bf0c
  40beca:	leave  
  40becb:	push   ecx
  40becc:	jbe    0x40bec3
  40bece:	sub    DWORD PTR [ecx-0x1f81f298],eax
  40bed4:	idiv   BYTE PTR [eax]
  40bed6:	pop    esi
  40bed7:	sbb    edx,DWORD PTR [edx]
  40bed9:	jecxz  0x40be81
  40bedb:	btr    DWORD PTR [edx+0x1f],esi
  40bedf:	push   esi
  40bee0:	gs pop es
  40bee2:	lahf   
  40bee3:	mov    ch,0x50
  40bee5:	xor    edi,DWORD PTR [edi+0x20364d91]
  40beeb:	xor    DWORD PTR [ecx+0x45116a89],esp
  40bef1:	and    eax,0xa2a013fd
  40bef6:	xchg   DWORD PTR [eax-0x2e703312],eax
  40befc:	push   0xffffffaa
  40befe:	jnp    0x40bf23
  40bf00:	sub    ebp,DWORD PTR [edi]
  40bf02:	lahf   
  40bf03:	push   ebp
  40bf04:	data16 in al,0x89
  40bf07:	adc    edi,DWORD PTR ds:0x74bbe19d
  40bf0d:	fsubr  st(3),st
  40bf0f:	cmp    al,0x87
  40bf11:	adc    DWORD PTR [eax],0xf4147e49
  40bf17:	or     BYTE PTR [ecx],dh
  40bf19:	adc    al,BYTE PTR [ebx]
  40bf1b:	jle    0x40bf72
  40bf1d:	(bad)  
  40bf1e:	fsub   QWORD PTR ds:0x278e4d86
  40bf24:	shl    DWORD PTR [ecx+0x283b5ceb],1
  40bf2a:	in     eax,dx
  40bf2b:	stc    
  40bf2c:	retf   
  40bf2d:	mov    ch,0xe2
  40bf2f:	call   0x9fdb91e3
  40bf34:	mov    esi,0x2b7b5fdd
  40bf39:	sub    BYTE PTR [ebp+0xae8719a],dl
  40bf3f:	add    DWORD PTR [ecx+0x3cf4a3e2],esi
  40bf45:	and    al,0x8e
  40bf47:	mov    esi,0x66a1bffd
  40bf4c:	in     al,dx
  40bf4d:	push   ebx
  40bf4e:	mov    ds:0x8336e057,eax
  40bf53:	cli    
  40bf54:	(bad)  
  40bf55:	es xchg edx,eax
  40bf57:	outs   dx,BYTE PTR ds:[esi]
  40bf58:	ret    0x61d1
  40bf5b:	xor    ah,BYTE PTR [edx]
  40bf5d:	retf   0x3f75
  40bf60:	scas   eax,DWORD PTR es:[edi]
  40bf61:	mov    ?,WORD PTR [ebx-0x4312d1ef]
  40bf67:	mov    ecx,0x210d5628
  40bf6c:	stc    
  40bf6d:	dec    ecx
  40bf6e:	mov    edx,0x3d9b2f90
  40bf73:	ror    BYTE PTR [esi-0x6b],0xe2
  40bf77:	jle    0x40bf4f
  40bf79:	test   bl,bl
  40bf7b:	push   edx
  40bf7c:	push   ds
  40bf7d:	inc    eax
  40bf7e:	pushf  
  40bf7f:	mov    eax,ds:0xcd13a53c
  40bf84:	mov    bl,0xe7
  40bf86:	add    ecx,ebp
  40bf88:	sbb    bh,BYTE PTR [ebp-0x2a]
  40bf8b:	xchg   edi,eax
  40bf8c:	jecxz  0x40bf3b
  40bf8e:	cli    
  40bf8f:	je     0x40bf27
  40bf91:	ins    BYTE PTR es:[edi],dx
  40bf92:	push   eax
  40bf93:	repnz fild QWORD PTR [edi-0x4c]
  40bf97:	rcl    ecx,1
  40bf99:	cs xchg ebp,eax
  40bf9b:	xor    al,0x71
  40bf9d:	test   BYTE PTR [eax+0x16574b9c],0x45
  40bfa4:	xlat   BYTE PTR ds:[ebx]
  40bfa5:	mov    DWORD PTR [edx+0x7f94be31],eax
  40bfab:	retf   0x5b18
  40bfae:	jmp    0x75dac77d
  40bfb3:	sar    BYTE PTR [ebp+eax*2+0x41],cl
  40bfb7:	dec    edx
  40bfb8:	sti    
  40bfb9:	jl     0x40bf98
  40bfbb:	loopne 0x40bf6c
  40bfbd:	inc    ecx
  40bfbe:	scas   eax,DWORD PTR es:[edi]
  40bfbf:	mov    al,0x8d
  40bfc1:	dec    edx
  40bfc2:	and    eax,0x1bf75783
  40bfc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfc8:	data16 sbb BYTE PTR [ebp+esi*1-0x51b95b19],ch
  40bfd0:	sub    dl,BYTE PTR ds:0x970e38c9
  40bfd6:	xchg   edx,eax
  40bfd7:	(bad)  
  40bfd8:	je     0x40bfae
  40bfda:	out    0x17,eax
  40bfdc:	mov    dh,0xf5
  40bfde:	repnz in eax,dx
  40bfe0:	loope  0x40bfa4
  40bfe2:	push   ebp
  40bfe3:	outs   dx,DWORD PTR ds:[esi]
  40bfe4:	cmp    DWORD PTR [edx-0x1ee7b3ae],eax
  40bfea:	test   DWORD PTR [ebp+0x7a],edx
  40bfed:	inc    ebx
  40bfee:	test   DWORD PTR [eax-0x10],edi
  40bff1:	xchg   DWORD PTR [esi],ecx
  40bff3:	imul   edx,DWORD PTR [eax+0x603a16dc],0xd5a4d4a9
  40bffd:	jg     0x40bfb0
  40bfff:	add    DWORD PTR [esi-0x48713ded],eax
  40c005:	add    edi,ecx
  40c007:	jg     0x40bff4
  40c009:	add    al,0xf4
  40c00b:	ficom  WORD PTR [ecx]
  40c00d:	es out 0x83,al
  40c010:	inc    ebx
  40c011:	pop    ds
  40c012:	fidivr WORD PTR [ebx+0x16e0a67e]
  40c018:	iret   
  40c019:	and    DWORD PTR [edx+0x2f],ebp
  40c01c:	aad    0xf0
  40c01e:	add    BYTE PTR [ebx],cl
  40c020:	xchg   BYTE PTR [edi-0xb5d8364],ch
  40c026:	mov    ds:0x5d2a1c8f,eax
  40c02b:	jns    0x40c073
  40c02d:	(bad)  
  40c02e:	data16 fcomp QWORD PTR [edi]
  40c031:	xchg   BYTE PTR [eax],dh
  40c033:	in     eax,0x76
  40c035:	rcl    dh,0x2b
  40c038:	dec    ebp
  40c039:	enter  0x365e,0x0
  40c03d:	inc    esp
  40c03e:	xchg   edx,eax
  40c03f:	mov    ebx,0xab158d86
  40c044:	mov    al,ds:0x8588aa2f
  40c049:	test   DWORD PTR [eax],0xb695bf6b
  40c04f:	int3   
  40c050:	xor    al,BYTE PTR [eax-0x2]
  40c053:	popf   
  40c054:	jno    0x40c002
  40c056:	leave  
  40c057:	test   al,0x8b
  40c059:	loop   0x40c070
  40c05b:	mov    esp,?
  40c05d:	test   al,ch
  40c05f:	cwde   
  40c060:	xchg   edx,eax
  40c061:	jmp    0x431f6bd
  40c066:	fidiv  DWORD PTR [esp+ebp*8-0x4a]
  40c06a:	xchg   ebx,eax
  40c06b:	xchg   esi,eax
  40c06c:	mov    ?,WORD PTR [ecx+ebp*4+0x10b4b7d3]
  40c073:	out    0xe7,eax
  40c075:	cli    
  40c076:	and    eax,0x1296bc91
  40c07b:	scas   al,BYTE PTR es:[edi]
  40c07c:	mov    ebp,0x2302e7dd
  40c081:	xchg   edx,edx
  40c083:	mov    dh,0xe3
  40c085:	push   ds
  40c086:	push   esi
  40c087:	fstp   DWORD PTR [esi]
  40c089:	push   ds
  40c08a:	xlat   BYTE PTR ds:[ebx]
  40c08b:	cvtpi2ps xmm2,QWORD PTR [edx-0x28c46f24]
  40c092:	enter  0xa84e,0x6
  40c096:	xchg   edx,eax
  40c097:	call   0x7113:0xf814117b
  40c09e:	leave  
  40c09f:	push   ebx
  40c0a0:	icebp  
  40c0a1:	jnp    0x40c0a0
  40c0a3:	rol    BYTE PTR [edi+0x61],0xe8
  40c0a7:	and    edi,DWORD PTR [edi]
  40c0a9:	dec    esi
  40c0aa:	jae    0x40c0a2
  40c0ac:	mov    BYTE PTR [edx-0x7c845644],0x4a
  40c0b3:	xor    al,0x58
  40c0b5:	add    DWORD PTR [ebx-0xf],edi
  40c0b8:	cmc    
  40c0b9:	inc    esp
  40c0ba:	pop    edi
  40c0bb:	mov    bl,0xd
  40c0bd:	xor    eax,0x7ddd5721
  40c0c2:	in     eax,dx
  40c0c3:	xchg   esi,eax
  40c0c4:	dec    edi
  40c0c6:	dec    ebp
  40c0c7:	mov    al,0xfc
  40c0c9:	fnstenv [esi+0x6905fe71]
  40c0cf:	aaa    
  40c0d0:	mov    ebx,0xdccc8f1c
  40c0d5:	pusha  
  40c0d6:	loope  0x40c0a3
  40c0d8:	std    
  40c0d9:	xchg   BYTE PTR [ecx],bh
  40c0db:	and    al,0x25
  40c0dd:	cmp    BYTE PTR [ecx+0x2b],bh
  40c0e0:	call   0x83ca89f2
  40c0e5:	pop    es
  40c0e6:	jmp    0x40c09b
  40c0e8:	xchg   BYTE PTR [eax+ebp*2+0x6eab10ac],bl
  40c0ef:	fsub   QWORD PTR [edx+0x32ec9033]
  40c0f5:	test   eax,0x247f9217
  40c0fa:	xchg   esp,eax
  40c0fb:	xchg   DWORD PTR [ebx+0x273b7ff6],esp
  40c101:	push   ecx
  40c102:	mov    bl,0x22
  40c104:	test   BYTE PTR [edx],ch
  40c106:	adc    al,0xf8
  40c108:	aam    0xe6
  40c10a:	jp     0x40c0f4
  40c10c:	mov    ss,WORD PTR [esi]
  40c10e:	jnp    0x40c0fa
  40c110:	ret    0xffec
  40c113:	dec    ebp
  40c114:	nop
  40c115:	ret    0x981b
  40c118:	outs   dx,BYTE PTR ds:[esi]
  40c119:	xchg   ebp,eax
  40c11a:	test   BYTE PTR [ebp+0x7f],ah
  40c11d:	adc    BYTE PTR [ebx+0x54],ah
  40c120:	aam    0x15
  40c122:	or     al,0xcf
  40c124:	stos   BYTE PTR es:[edi],al
  40c125:	push   ss
  40c126:	sbb    dh,BYTE PTR ds:0xa0c20f60
  40c12c:	xor    ecx,DWORD PTR [edx+0x79]
  40c12f:	(bad)  
  40c130:	rcl    eax,cl
  40c132:	mov    eax,0x4c72ef63
  40c137:	rcl    BYTE PTR [ebp+0x15f6497f],1
  40c13d:	jb     0x40c133
  40c13f:	mov    bh,0x6f
  40c141:	into   
  40c142:	rcr    dl,0x23
  40c145:	and    eax,0xce6bbaab
  40c14a:	cmp    al,0x77
  40c14c:	imul   ecx,DWORD PTR [eax],0x35
  40c14f:	dec    ebx
  40c150:	stc    
  40c151:	stos   DWORD PTR es:[edi],eax
  40c152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c153:	xor    ebp,DWORD PTR [edi+0x7e]
  40c156:	jae    0x40c133
  40c158:	sbb    eax,0xd3733119
  40c15d:	or     edx,0xfd03037c
  40c163:	js     0x40c116
  40c165:	pop    ecx
  40c166:	inc    ecx
  40c167:	mov    ah,0x66
  40c169:	pop    ebx
  40c16a:	fs (bad) 
  40c16c:	dec    ecx
  40c16d:	repz imul dx,WORD PTR [bp+si-0x746c],0x6a04
  40c176:	push   ebp
  40c177:	add    edi,ebx
  40c179:	mov    ds:0xfd388230,eax
  40c17e:	loope  0x40c11f
  40c180:	xor    edx,DWORD PTR [edi-0x6e9870c1]
  40c186:	or     eax,0x9d885f4c
  40c18b:	xchg   ecx,eax
  40c18c:	jnp    0x40c125
  40c18e:	sbb    edi,edx
  40c190:	push   ss
  40c191:	mov    ah,0x25
  40c193:	sar    DWORD PTR [edi+0x499da1aa],0x1e
  40c19a:	sar    esp,0x96
  40c19d:	ret    0xac8d
  40c1a0:	push   es
  40c1a1:	xchg   ebx,eax
  40c1a2:	popa   
  40c1a3:	fldenv [edx]
  40c1a5:	jl     0x40c17b
  40c1a7:	iret   
  40c1a8:	mov    al,ds:0x5981d409
  40c1ad:	das    
  40c1ae:	fwait
  40c1af:	push   ss
  40c1b0:	or     BYTE PTR [esi-0x7e048ecd],0x7a
  40c1b7:	jg     0x40c1e4
  40c1b9:	int3   
  40c1ba:	mov    al,ds:0x821f87f8
  40c1bf:	inc    ebx
  40c1c0:	imul   ecx,DWORD PTR [eax+0x2539b200],0x65
  40c1c7:	int    0xf8
  40c1c9:	inc    esp
  40c1ca:	mov    cl,0x92
  40c1cc:	pop    esp
  40c1cd:	imul   edx,ebp,0xffffff84
  40c1d0:	dec    edx
  40c1d1:	ins    DWORD PTR es:[edi],dx
  40c1d2:	inc    ecx
  40c1d3:	sub    dl,bl
  40c1d5:	in     eax,0x1c
  40c1d7:	std    
  40c1d8:	iret   
  40c1d9:	push   esp
  40c1da:	pop    esi
  40c1db:	bswap  esi
  40c1dd:	sub    eax,0xc1eaf7c7
  40c1e2:	sbb    BYTE PTR [eax+0x3baf1115],ah
  40c1e8:	sahf   
  40c1e9:	sub    DWORD PTR [ebx-0x1f],esp
  40c1ec:	mov    BYTE PTR [esi],ah
  40c1ee:	xchg   edi,eax
  40c1ef:	jmp    0x510d:0xd24c99ff
  40c1f6:	jle    0x40c266
  40c1f8:	rcr    DWORD PTR [ecx],0x3f
  40c1fb:	fisubr DWORD PTR [ecx]
  40c1fd:	(bad)
  40c201:	les    ebp,FWORD PTR [ecx]
  40c203:	hlt    
  40c204:	cmp    bl,bh
  40c206:	popa   
  40c207:	mov    bh,0xc3
  40c209:	int    0xbd
  40c20b:	loopne 0x40c20d
  40c20d:	mov    al,0x2d
  40c20f:	add    esp,esp
  40c211:	ror    DWORD PTR [esi],1
  40c213:	mov    dh,0xcb
  40c215:	daa    
  40c216:	mov    dh,BYTE PTR [eax+0x7d]
  40c219:	lods   eax,DWORD PTR ds:[esi]
  40c21a:	mov    edx,DWORD PTR [ecx]
  40c21c:	inc    ecx
  40c21d:	inc    esp
  40c21e:	jle    0x40c22f
  40c220:	cmp    esp,DWORD PTR [ebx]
  40c222:	retf   
  40c223:	test   ah,0x90
  40c226:	sub    bh,cl
  40c228:	add    DWORD PTR [eax+0x67764d97],ebp
  40c22e:	xchg   ebx,eax
  40c22f:	clc    
  40c230:	not    DWORD PTR [edi]
  40c232:	loop   0x40c1d4
  40c234:	pop    es
  40c235:	cmp    DWORD PTR [edx-0x48],ebx
  40c238:	xchg   ecx,eax
  40c239:	pop    eax
  40c23a:	fisub  WORD PTR [ebx-0xcb88a89]
  40c240:	ss xchg ebx,eax
  40c242:	inc    esp
  40c243:	lahf   
  40c244:	jnp    0x40c2b8
  40c246:	mov    dl,BYTE PTR [ebx]
  40c248:	add    dl,BYTE PTR [edx+0x31]
  40c24b:	repz and BYTE PTR [eax+0x3d381d14],ah
  40c252:	cwde   
  40c253:	lods   al,BYTE PTR ds:[esi]
  40c254:	je     0x40c2ac
  40c256:	stos   DWORD PTR es:[edi],eax
  40c257:	inc    edi
  40c258:	push   esi
  40c259:	mov    eax,0xbc537b5
  40c25e:	inc    esi
  40c25f:	cmp    eax,0x21afb3f5
  40c264:	call   0x7e84:0x55a247b2
  40c26b:	sbb    DWORD PTR [edi+0xd],eax
  40c26e:	sbb    al,0xd2
  40c270:	daa    
  40c271:	mov    bl,0x2c
  40c273:	jno    0x40c293
  40c275:	cmp    ch,cl
  40c277:	inc    ebx
  40c278:	sti    
  40c279:	fnsave [ecx]
  40c27b:	adc    al,0x58
  40c27d:	loope  0x40c24a
  40c27f:	data16 cld 
  40c281:	xchg   DWORD PTR [ecx+0x73],esp
  40c284:	(bad)  
  40c285:	leave  
  40c286:	bound  esi,QWORD PTR [ebx+0x44]
  40c289:	add    eax,0xdb9960ed
  40c28e:	and    esi,DWORD PTR [edx+0x2f0cc4da]
  40c294:	cmp    DWORD PTR [esi],ebx
  40c296:	push   ss
  40c297:	icebp  
  40c298:	mul    BYTE PTR [ebx+edi*1-0xd]
  40c29c:	ret    
  40c29d:	xchg   ebp,eax
  40c29e:	outs   dx,DWORD PTR ds:[esi]
  40c29f:	aam    0xbd
  40c2a1:	je     0x40c2a9
  40c2a3:	mov    ebx,0x49318dd9
  40c2a8:	retf   0x4a1e
  40c2ab:	mov    ah,0x89
  40c2ad:	call   0xc6ae3f3f
  40c2b2:	jmp    0x40c314
  40c2b4:	shl    DWORD PTR [ebx],1
  40c2b6:	addr16 jbe 0x40c2ed
  40c2b9:	fsub   st(6),st
  40c2bb:	in     eax,dx
  40c2bc:	pushf  
  40c2bd:	enter  0x4728,0xcc
  40c2c1:	pop    es
  40c2c2:	bound  ebx,QWORD PTR [edx-0x29]
  40c2c5:	xchg   ebx,eax
  40c2c6:	jge    0x40c24d
  40c2c8:	mov    eax,0x1a24776b
  40c2cd:	mov    dh,BYTE PTR [ebp+0x4887c4c4]
  40c2d3:	sub    al,0x85
  40c2d5:	outs   dx,DWORD PTR ds:[esi]
  40c2d6:	hlt    
  40c2d7:	cmp    al,bh
  40c2d9:	mov    bl,0x29
  40c2db:	mov    al,BYTE PTR [eax-0x5d]
  40c2de:	inc    esi
  40c2df:	popf   
  40c2e0:	jle    0x40c282
  40c2e2:	push   esi
  40c2e3:	fdivr  QWORD PTR [esp+eax*8]
  40c2e6:	mov    DWORD PTR [edi-0x570b1b53],edi
  40c2ec:	cmp    DWORD PTR [edi],0xffffffde
  40c2ef:	jne    0x40c2fd
  40c2f1:	push   eax
  40c2f2:	lahf   
  40c2f3:	push   esp
  40c2f4:	cmp    BYTE PTR [esi],al
  40c2f6:	arpl   WORD PTR [ebp+0x5a0296f9],si
  40c2fc:	das    
  40c2fd:	cmp    DWORD PTR ds:0x57d05efc,edx
  40c303:	pop    ebp
  40c304:	jmp    0x40c2c6
  40c306:	loopne 0x40c32b
  40c308:	out    0x9a,eax
  40c30a:	sub    BYTE PTR [eax+0x8997863],dl
  40c310:	div    DWORD PTR [edx+0x75]
  40c313:	mov    bl,0x80
  40c315:	add    eax,0xe02db722
  40c31a:	push   ebx
  40c31b:	sub    eax,0xf1189922
  40c320:	ds and edx,esi
  40c323:	mov    ds:0x29091f2c,eax
  40c328:	push   0x96f1ab90
  40c32d:	cs loop 0x40c2c1
  40c330:	push   ecx
  40c331:	(bad)  
  40c332:	pop    ss
  40c333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c334:	inc    eax
  40c335:	daa    
  40c336:	inc    edi
  40c337:	pushf  
  40c338:	lods   eax,DWORD PTR ds:[esi]
  40c339:	jl     0x40c333
  40c33b:	mov    esi,0xf174b9fc
  40c340:	call   0x24f627e4
  40c345:	outs   dx,BYTE PTR ds:[esi]
  40c346:	lods   al,BYTE PTR ds:[esi]
  40c347:	or     BYTE PTR [esp+edx*4],dh
  40c34a:	dec    esp
  40c34b:	pop    esi
  40c34c:	push   ebx
  40c34d:	mov    bl,BYTE PTR [edi]
  40c34f:	inc    esp
  40c350:	pop    esp
  40c351:	adc    bh,ah
  40c353:	(bad)  
  40c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c355:	lahf   
  40c356:	out    dx,eax
  40c357:	ds jbe 0x40c3cf
  40c35a:	jno    0x40c373
  40c35c:	test   DWORD PTR [ebx],edx
  40c35e:	shr    dl,0x51
  40c361:	scas   eax,DWORD PTR es:[edi]
  40c362:	test   al,0x9
  40c364:	int    0xd8
  40c366:	mov    ebp,0xbdafc35c
  40c36b:	push   esp
  40c36c:	pop    ss
  40c36d:	out    0xc5,al
  40c36f:	pop    edi
  40c370:	cmp    al,0x25
  40c372:	sub    DWORD PTR [ebx-0x4c9cd561],0x76945a9c
  40c37c:	xchg   esi,eax
  40c37d:	retf   0x7f27
  40c380:	or     ecx,DWORD PTR [edx]
  40c382:	iret   
  40c383:	repz push esi
  40c385:	adc    bl,al
  40c387:	push   edx
  40c388:	inc    esp
  40c389:	dec    eax
  40c38a:	fidiv  WORD PTR [ebp-0x6c]
  40c38d:	data16 ins BYTE PTR es:[edi],dx
  40c38f:	dec    ecx
  40c390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c391:	adc    al,0x7
  40c393:	lods   al,BYTE PTR ds:[esi]
  40c394:	fld    QWORD PTR [edi]
  40c396:	icebp  
  40c397:	or     dh,BYTE PTR [edx+0x6b]
  40c39a:	jns    0x40c350
  40c39c:	sbb    dl,BYTE PTR [edx-0x4a]
  40c39f:	js     0x40c355
  40c3a1:	push   0x15c3ff4b
  40c3a6:	(bad)  [edi+0x6d]
  40c3a9:	fs dec ebx
  40c3ab:	call   0xdcfc:0xf11e86d3
  40c3b2:	inc    edi
  40c3b3:	es jb  0x40c40f
  40c3b6:	xchg   edx,eax
  40c3b7:	xchg   ebp,eax
  40c3b8:	cmp    bl,BYTE PTR [ecx-0x4f6ce77f]
  40c3be:	in     eax,0x1
  40c3c0:	shl    esp,1
  40c3c2:	or     DWORD PTR ds:0xee9d92db,esi
  40c3c8:	inc    eax
  40c3c9:	mov    ch,0xa4
  40c3cb:	out    dx,al
  40c3cc:	xor    al,0x50
  40c3ce:	pop    esi
  40c3cf:	ret    
  40c3d0:	push   edx
  40c3d1:	adc    bh,BYTE PTR [edi+0x6a]
  40c3d4:	inc    edx
  40c3d5:	mov    ch,0xc1
  40c3d7:	mov    edx,0x17ef7938
  40c3dc:	xor    ch,BYTE PTR [ecx-0x106b61eb]
  40c3e2:	xchg   ecx,eax
  40c3e3:	jg     0x40c3af
  40c3e5:	pop    DWORD PTR [esi+0x7e5e050]
  40c3eb:	xchg   ebp,eax
  40c3ec:	inc    edx
  40c3ed:	jecxz  0x40c40b
  40c3ef:	cli    
  40c3f0:	jp     0x40c457
  40c3f2:	out    dx,eax
  40c3f3:	mov    cl,BYTE PTR [esi+0x2760e879]
  40c3f9:	jo     0x40c441
  40c3fb:	or     BYTE PTR ds:0xf94d87f,dh
  40c401:	out    0x86,eax
  40c403:	sub    eax,0xeb2885d1
  40c408:	pop    ecx
  40c409:	dec    ecx
  40c40a:	adc    ecx,DWORD PTR [edi-0x2b2cfb07]
  40c410:	mov    dl,0x42
  40c412:	jbe    0x40c3e2
  40c414:	pop    ecx
  40c415:	pop    ecx
  40c416:	fcom   DWORD PTR [edi-0x37b4a155]
  40c41c:	mov    ebx,0x313a0c70
  40c421:	out    0xa6,al
  40c423:	push   ds
  40c424:	push   cs
  40c425:	test   DWORD PTR [edi+0x17],0x1d733331
  40c42c:	mov    bl,0xa7
  40c42e:	sbb    dh,0xfb
  40c431:	(bad)  [eax+ebp*4-0x5e2854af]
  40c438:	cmp    eax,0x2912a03f
  40c43d:	add    al,0x9d
  40c43f:	jnp    0x40c449
  40c441:	aad    0x24
  40c443:	jnp    0x40c3e3
  40c445:	into   
  40c446:	pop    ecx
  40c447:	mov    ebp,cr2
  40c44a:	aad    0x8
  40c44c:	scas   eax,DWORD PTR es:[di]
  40c44e:	mov    ebp,0x348cf4b0
  40c453:	push   0xfe7257de
  40c458:	push   0xffffffa8
  40c45a:	imul   esi,esp,0xde920653
  40c460:	sub    al,0x4e
  40c462:	jle    0x40c452
  40c464:	aad    0x8a
  40c466:	loopne 0x40c434
  40c468:	mov    bl,0x6a
  40c46a:	pop    ebx
  40c46b:	mov    al,ds:0x3dca0500
  40c470:	jnp    0x40c4bb
  40c472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c473:	jge    0x40c49b
  40c475:	call   0x9e3d:0x50ea2930
  40c47c:	pop    ebx
  40c47d:	mov    WORD PTR [edi+ecx*1],ds
  40c480:	repz sub al,0xb1
  40c483:	cmp    BYTE PTR [edx],ah
  40c485:	dec    edx
  40c486:	test   eax,0x11f5c081
  40c48b:	sbb    DWORD PTR [ebp-0x35dc5500],0xec1cac94
  40c495:	pop    ebx
  40c496:	repnz shl BYTE PTR [eax-0x4bbd38ba],1
  40c49d:	adc    dh,dl
  40c49f:	test   BYTE PTR [esi-0xe],bl
  40c4a2:	outs   dx,DWORD PTR ds:[esi]
  40c4a3:	jecxz  0x40c482
  40c4a5:	hlt    
  40c4a6:	cwde   
  40c4a7:	xchg   ebp,eax
  40c4a8:	test   DWORD PTR [edx+0x1654aa05],ebx
  40c4ae:	ss mov esi,0x1bf9b762
  40c4b4:	xchg   esi,eax
  40c4b5:	retf   0xbe7
  40c4b8:	int    0x81
  40c4ba:	jl     0x40c4b3
  40c4bc:	push   esp
  40c4bd:	imul   esp,DWORD PTR [bx+di],0x32afd863
  40c4c4:	loope  0x40c4fb
  40c4c6:	fldenv [edi+esi*8-0x31]
  40c4ca:	xchg   ebx,edx
  40c4cc:	mov    dl,0xef
  40c4ce:	into   
  40c4cf:	das    
  40c4d0:	push   esi
  40c4d1:	or     ebx,DWORD PTR [ebx-0x77276c98]
  40c4d7:	xchg   esi,eax
  40c4d8:	fs into 
  40c4da:	repz daa 
  40c4dc:	mov    esp,0x31e04561
  40c4e1:	icebp  
  40c4e2:	push   ss
  40c4e3:	sbb    DWORD PTR [ebx+0x6a],edi
  40c4e6:	dec    ebp
  40c4e7:	sub    al,0x24
  40c4e9:	xchg   ebx,eax
  40c4ea:	loop   0x40c4c2
  40c4ec:	push   es
  40c4ed:	pushf  
  40c4ee:	jae    0x40c56f
  40c4f0:	fisttp WORD PTR [edx]
  40c4f2:	mov    ecx,0xd0240343
  40c4f7:	adc    ch,BYTE PTR [ecx]
  40c4f9:	hlt    
  40c4fa:	ins    DWORD PTR es:[edi],dx
  40c4fb:	ficom  WORD PTR [edi+0x791adf04]
  40c501:	fidivr WORD PTR [edx-0x252329b3]
  40c507:	or     BYTE PTR [eax-0x34],0xec
  40c50b:	ja     0x40c4a3
  40c50d:	xchg   edi,eax
  40c50e:	inc    esi
  40c50f:	frstor [ebp+0xc]
  40c512:	(bad)  
  40c513:	push   eax
  40c514:	stc    
  40c515:	out    dx,al
  40c516:	mov    eax,0x125a46d0
  40c51b:	and    DWORD PTR [ecx+0x6e],0x17
  40c51f:	(bad)  
  40c520:	jmp    0x68cb724b
  40c525:	loop   0x40c4ee
  40c527:	cdq    
  40c528:	cld    
  40c529:	jb     0x40c4ec
  40c52b:	call   0x194a:0x4d3f9941
  40c532:	sub    ebp,DWORD PTR [ecx]
  40c534:	jmp    0x55b75c31
  40c539:	push   es
  40c53a:	sub    esi,DWORD PTR [edi-0x1b6138d6]
  40c540:	pusha  
  40c541:	loope  0x40c549
  40c543:	rol    BYTE PTR [edi+0x11694b81],1
  40c549:	push   eax
  40c54a:	add    bl,BYTE PTR [edx-0x7389045e]
  40c550:	cmp    DWORD PTR [ecx+0x23c2933c],ecx
  40c556:	data16 sbb al,0x73
  40c559:	cwde   
  40c55a:	jg     0x40c59f
  40c55c:	fcomip st,st(0)
  40c55e:	jne    0x40c545
  40c560:	add    cl,BYTE PTR [esi+0x1f2e34dd]
  40c566:	popa   
  40c567:	popa   
  40c568:	mov    BYTE PTR [edi],0xad
  40c56b:	out    dx,al
  40c56c:	jmp    0xb02d:0x7f5d76fe
  40c573:	call   0xd1c6:0xf777b350
  40c57a:	ins    BYTE PTR es:[edi],dx
  40c57b:	pop    esp
  40c57c:	dec    esp
  40c57d:	ds cwde 
  40c57f:	cmc    
  40c580:	mov    ebx,0x3d8006b1
  40c585:	xor    dl,BYTE PTR ds:0xf69e6405
  40c58b:	dec    ecx
  40c58c:	outs   dx,DWORD PTR ds:[esi]
  40c58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c58e:	dec    esp
  40c58f:	loopne 0x40c5dd
  40c591:	iret   
  40c592:	js     0x40c57b
  40c594:	pop    ebx
  40c595:	gs call 0xbb9b69d2
  40c59b:	dec    esi
  40c59c:	push   edi
  40c59d:	fs inc ecx
  40c59f:	leave  
  40c5a0:	jnp    0x40c5ed
  40c5a2:	cmp    esp,esp
  40c5a4:	jne    0x40c587
  40c5a6:	or     DWORD PTR [ebp+eax*4-0x692a8d6b],0x7
  40c5ae:	mov    DWORD PTR [ebx+eax*8],esp
  40c5b1:	adc    eax,0x6669024c
  40c5b6:	jmp    0x40c621
  40c5b8:	enter  0xddcb,0x6b
  40c5bc:	mov    eax,ds:0x120846e1
  40c5c1:	das    
  40c5c2:	loopne 0x40c62e
  40c5c4:	inc    esi
  40c5c5:	mov    bl,0x3
  40c5c7:	and    BYTE PTR [eax+0x17],bh
  40c5ca:	sub    BYTE PTR [ebx],0xe5
  40c5cd:	lds    edi,FWORD PTR [ebx]
  40c5cf:	mov    esp,0x607e89a5
  40c5d4:	inc    ebp
  40c5d5:	push   eax
  40c5d6:	xchg   ecx,eax
  40c5d7:	shl    bh,0xbc
  40c5da:	mov    bl,0x9b
  40c5dc:	femms  
  40c5de:	cld    
  40c5df:	xor    BYTE PTR [esi-0x72],ch
  40c5e2:	loope  0x40c5fe
  40c5e4:	setbe  BYTE PTR [edi-0x101ce98d]
  40c5eb:	and    al,0x35
  40c5ed:	cmc    
  40c5ee:	sbb    BYTE PTR [eax-0x4774741a],ah
  40c5f4:	sbb    eax,0x97702efb
  40c5f9:	dec    esi
  40c5fa:	ret    
  40c5fb:	pop    ds
  40c5fc:	mov    al,ch
  40c5fe:	loop   0x40c5e0
  40c600:	scas   eax,DWORD PTR es:[edi]
  40c601:	cdq    
  40c602:	mov    ebx,0x4e8aafa5
  40c607:	push   es
  40c608:	outs   dx,DWORD PTR ds:[esi]
  40c609:	mov    WORD PTR [eax+0x1],?
  40c60c:	cli    
  40c60d:	retf   
  40c60e:	scas   eax,DWORD PTR es:[edi]
  40c60f:	outs   dx,BYTE PTR ds:[esi]
  40c610:	loop   0x40c5d9
  40c612:	xor    dh,dh
  40c614:	dec    esi
  40c615:	daa    
  40c616:	xchg   esp,eax
  40c617:	pop    es
  40c618:	mov    bh,0x40
  40c61a:	and    cl,BYTE PTR [ecx-0x29ac8a62]
  40c620:	adc    eax,0x29793a71
  40c625:	mov    ch,0x7f
  40c627:	fsub   QWORD PTR [ebp*2-0x1b173f7]
  40c62e:	shr    edx,0xc5
  40c631:	pop    edi
  40c632:	or     al,0xb2
  40c634:	sub    ebp,eax
  40c636:	lods   al,BYTE PTR ds:[esi]
  40c637:	push   ecx
  40c638:	push   eax
  40c639:	inc    ebx
  40c63a:	sub    BYTE PTR [eax+0x30a6a131],ah
  40c640:	jne    0x40c69d
  40c642:	sbb    DWORD PTR [edi+0x74a0780c],ecx
  40c648:	lahf   
  40c649:	pushf  
  40c64a:	dec    edx
  40c64b:	scas   eax,DWORD PTR es:[edi]
  40c64c:	fwait
  40c64d:	push   ds
  40c64e:	rcr    BYTE PTR [esi],cl
  40c650:	adc    dl,ah
  40c652:	pop    ds
  40c653:	adc    edx,DWORD PTR [ebp-0x3]
  40c656:	sahf   
  40c657:	out    dx,eax
  40c658:	push   cs
  40c659:	xchg   ebx,eax
  40c65a:	ror    BYTE PTR [ebx],0x5d
  40c65d:	mov    ebx,0x84f71f19
  40c662:	clc    
  40c663:	push   0xffffffc9
  40c665:	fs ret 0x8dbb
  40c669:	jbe    0x40c670
  40c66b:	cmp    BYTE PTR [eax],bl
  40c66d:	scas   al,BYTE PTR es:[edi]
  40c66e:	rol    BYTE PTR [edi-0x41],0x34
  40c672:	popa   
  40c673:	loope  0x40c66e
  40c675:	neg    BYTE PTR [ebx]
  40c677:	push   ebx
  40c678:	jmp    0x371a:0x3eb5b6ea
  40c67f:	ss icebp 
  40c681:	dec    ebp
  40c682:	mov    ebp,0xfd8e4c56
  40c687:	pop    edx
  40c688:	ret    0x3de8
  40c68b:	ret    0xf304
  40c68e:	out    dx,al
  40c68f:	retf   0xbe76
  40c692:	xor    ecx,DWORD PTR [edx]
  40c694:	add    DWORD PTR [edx],ebx
  40c696:	mov    ds:0xb2493843,al
  40c69b:	and    eax,0x128e2714
  40c6a0:	sbb    eax,0x90f8b71e
  40c6a5:	adc    DWORD PTR [ebp-0x1d24df12],edi
  40c6ab:	mov    WORD PTR [ebp+0x28],es
  40c6ae:	mov    ebx,DWORD PTR [edi]
  40c6b0:	stc    
  40c6b1:	loope  0x40c72c
  40c6b3:	ja     0x40c63e
  40c6b5:	mov    eax,ds:0x7a0bdbe4
  40c6ba:	pop    eax
  40c6bb:	rol    BYTE PTR [esi+0x7],1
  40c6be:	cmp    eax,eax
  40c6c0:	test   eax,0xd185c7b9
  40c6c5:	add    dl,ch
  40c6c7:	test   DWORD PTR [edx-0x1c2644ce],esp
  40c6cd:	and    BYTE PTR [ecx+0x14821d72],dl
  40c6d3:	rol    DWORD PTR [edx+0x3c],0xae
  40c6d7:	mov    eax,DWORD PTR [edx-0x13f2cad7]
  40c6dd:	ds call 0x3b0e145
  40c6e3:	xor    ecx,DWORD PTR [ebp+0x449998dc]
  40c6e9:	dec    esi
  40c6ea:	nop
  40c6eb:	scas   al,BYTE PTR es:[edi]
  40c6ec:	arpl   WORD PTR [esi+0x40],dx
  40c6ef:	ficom  WORD PTR [eax]
  40c6f1:	stos   DWORD PTR es:[edi],eax
  40c6f2:	imul   ebx,DWORD PTR [edx+0x2c],0x258311f7
  40c6f9:	cbw    
  40c6fb:	rcr    BYTE PTR gs:[eax],0x6
  40c6ff:	push   ds
  40c700:	inc    edx
  40c701:	mov    al,ds:0x224efeb0
  40c706:	imul   DWORD PTR [ebx]
  40c708:	jne    0x40c75d
  40c70a:	xor    bl,dl
  40c70c:	mov    esp,0xb85af8db
  40c711:	inc    esi
  40c712:	mov    ebx,0x83a8d0c5
  40c717:	push   edx
  40c718:	test   BYTE PTR [edx],dh
  40c71a:	clc    
  40c71b:	jo     0x40c6f9
  40c71d:	test   eax,0xfa3e3155
  40c722:	xchg   edi,eax
  40c723:	shl    BYTE PTR [edx],cl
  40c725:	xchg   ebx,eax
  40c726:	in     eax,0xd6
  40c728:	xchg   edx,eax
  40c729:	push   ss
  40c72a:	in     eax,dx
  40c72b:	add    al,0x53
  40c72d:	pushf  
  40c72e:	sub    al,0xe1
  40c730:	cmp    al,0x8
  40c732:	gs jl  0x40c7b2
  40c735:	dec    edx
  40c736:	call   0xe7fd:0xf2489816
  40c73d:	push   ss
  40c73e:	in     eax,0x95
  40c740:	xchg   esp,eax
  40c741:	pop    ebx
  40c742:	pop    ebp
  40c743:	dec    edi
  40c744:	imul   esi,ecx,0x8fda659e
  40c74a:	nop
  40c74b:	adc    BYTE PTR [edi+0x66],cl
  40c74e:	push   es
  40c74f:	leave  
  40c750:	push   esi
  40c751:	stos   DWORD PTR es:[edi],eax
  40c752:	inc    ecx
  40c753:	test   DWORD PTR [ebx+0x39],edx
  40c756:	neg    DWORD PTR [ebx]
  40c758:	dec    ebx
  40c759:	je     0x40c738
  40c75b:	jbe    0x40c6f3
  40c75d:	les    ebp,FWORD PTR [eax-0x29]
  40c760:	les    esp,FWORD PTR [esi+ebp*2-0x1c7bc66e]
  40c767:	mov    edi,0x9de5e72a
  40c76c:	gs mov cl,0x21
  40c76f:	les    edi,FWORD PTR [eax]
  40c771:	mov    ds:0x5896e5bf,eax
  40c776:	(bad)  
  40c778:	jae    0x40c7c0
  40c77a:	lods   al,BYTE PTR ds:[esi]
  40c77b:	je     0x40c75e
  40c77d:	fsubr  st(1),st
  40c77f:	inc    ebp
  40c780:	add    eax,0xa9b1788
  40c785:	repz std 
  40c787:	fisub  WORD PTR [esi+0x1f]
  40c78a:	xchg   edi,eax
  40c78b:	out    dx,al
  40c78c:	xchg   ecx,eax
  40c78d:	mov    BYTE PTR [edx],bh
  40c78f:	push   0x8c6ba6ff
  40c794:	rol    DWORD PTR [ebx-0x2b637e7e],cl
  40c79a:	push   eax
  40c79b:	and    eax,0x6ebf586a
  40c7a0:	sbb    eax,0xdb4f5b3c
  40c7a5:	jo     0x40c7d0
  40c7a7:	fisttp WORD PTR ss:[ebx]
  40c7aa:	mul    BYTE PTR ds:0xc15793d3
  40c7b0:	ja     0x40c792
  40c7b2:	(bad)  
  40c7b3:	out    0x17,eax
  40c7b5:	fldcw  WORD PTR [edi-0x7c]
  40c7b8:	imul   edx,DWORD PTR [eax-0x2f79ff61],0xb574e845
  40c7c2:	(bad)  
  40c7c4:	(bad)  
  40c7c5:	out    dx,al
  40c7c6:	stc    
  40c7c7:	dec    ebx
  40c7c8:	push   edi
  40c7c9:	cld    
  40c7ca:	stos   BYTE PTR es:[edi],al
  40c7cb:	ds out dx,al
  40c7cd:	mov    ebp,0x4c213dd7
  40c7d2:	in     al,0xdf
  40c7d4:	mov    ch,0x67
  40c7d6:	mov    eax,0x1fb09668
  40c7db:	mov    esp,0x2144ed1d
  40c7e0:	jmp    0x93b84a73
  40c7e5:	push   0xfd587060
  40c7ea:	sub    BYTE PTR [ecx+0x0],al
  40c7ed:	jge    0x40c845
  40c7ef:	xchg   esi,eax
  40c7f0:	or     ebx,0x18
  40c7f3:	hlt    
  40c7f4:	ins    BYTE PTR es:[edi],dx
  40c7f5:	push   esp
  40c7f6:	sbb    eax,0x84fbc7ba
  40c7fb:	(bad)  
  40c7fc:	xchg   edi,eax
  40c7fd:	fild   WORD PTR [eax+edx*8]
  40c800:	retf   
  40c801:	mov    ebx,0xda6d0c13
  40c806:	mov    edi,0x10d2f119
  40c80b:	outs   dx,DWORD PTR ds:[esi]
  40c80c:	jns    0x40c816
  40c80e:	aam    0xa6
  40c810:	lods   eax,DWORD PTR ds:[esi]
  40c811:	xor    ch,BYTE PTR [esi+edx*4-0x3c]
  40c815:	push   eax
  40c816:	mov    esp,0xf9266e8e
  40c81b:	push   esp
  40c81c:	cmp    esi,DWORD PTR [ecx-0x78]
  40c81f:	pop    edx
  40c820:	mov    ds,WORD PTR [esi+edx*4+0xb]
  40c824:	push   0xffffffb8
  40c826:	xchg   esp,eax
  40c827:	mov    bl,0x3c
  40c829:	cmp    eax,0x5f40a85
  40c82e:	xor    bh,BYTE PTR [edi-0x80]
  40c831:	es mov dl,al
  40c834:	add    DWORD PTR ds:0x68fb4846,eax
  40c83a:	ss or  eax,0x864e57f9
  40c840:	retf   
  40c841:	lock push 0xc8739d7b
  40c847:	xor    DWORD PTR [ecx],ecx
  40c849:	xchg   edx,eax
  40c84a:	add    DWORD PTR [edx-0x46],edx
  40c84d:	(bad)  
  40c84e:	jno    0x40c81f
  40c850:	outs   dx,BYTE PTR ds:[esi]
  40c851:	loop   0x40c86d
  40c853:	mov    al,ds:0x2abf9ba0
  40c858:	mov    BYTE PTR [ebx+ebp*1],bh
  40c85b:	(bad)  
  40c85c:	repnz repz loopne 0x40c7e0
  40c860:	out    dx,eax
  40c861:	pop    es
  40c862:	cmp    al,0xc7
  40c864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c865:	outs   dx,BYTE PTR ds:[esi]
  40c866:	mov    bh,dh
  40c868:	addr16 push edx
  40c86a:	sahf   
  40c86b:	push   esp
  40c86c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c86d:	out    dx,eax
  40c86e:	test   eax,0x47fba8fc
  40c873:	add    al,0xf6
  40c875:	fwait
  40c876:	and    ebx,DWORD PTR [edx-0x360845d6]
  40c87c:	mov    esi,0x99a57842
  40c881:	int    0x9d
  40c883:	push   esp
  40c884:	jns    0x40c80a
  40c886:	in     eax,0x8b
  40c888:	jae    0x40c87a
  40c88a:	dec    ecx
  40c88b:	adc    DWORD PTR [ecx-0x3b7365c3],ecx
  40c891:	sub    bl,cl
  40c893:	loope  0x40c843
  40c895:	imul   edx,esp,0xffffffd7
  40c898:	adc    eax,0xdab131e9
  40c89d:	data16 ss mov ah,0x59
  40c8a1:	cmp    dh,BYTE PTR [eax-0x5a266e06]
  40c8a7:	inc    ebx
  40c8a8:	sub    al,0x9
  40c8aa:	ins    BYTE PTR es:[edi],dx
  40c8ab:	push   ebp
  40c8ac:	xor    al,0x6a
  40c8ae:	jmp    0xd14cf8ac
  40c8b3:	xchg   edi,eax
  40c8b4:	inc    esi
  40c8b5:	jp     0x40c846
  40c8b7:	ret    
  40c8b8:	aaa    
  40c8b9:	mov    ch,0xc1
  40c8bb:	mov    esp,0xbd9b6c75
  40c8c0:	or     DWORD PTR [edx+ebx*4+0x127bb85f],0xb273135e
  40c8cb:	rol    BYTE PTR [ecx],1
  40c8cd:	sbb    edx,DWORD PTR [edx+0x48]
  40c8d0:	fst    st(6)
  40c8d2:	fcomp  DWORD PTR [esi]
  40c8d4:	cmp    edi,edx
  40c8d6:	fiadd  DWORD PTR [ebx-0x60]
  40c8d9:	inc    eax
  40c8da:	dec    edi
  40c8db:	sbb    dl,BYTE PTR [edi-0x188d44f1]
  40c8e1:	jns    0x40c8e7
  40c8e3:	dec    ebx
  40c8e4:	cmp    BYTE PTR [eax],0x8
  40c8e7:	pop    ecx
  40c8e8:	stos   BYTE PTR es:[edi],al
  40c8e9:	sbb    bh,dl
  40c8eb:	dec    esp
  40c8ec:	dec    eax
  40c8ed:	or     eax,0x2d8b663c
  40c8f2:	inc    edi
  40c8f3:	push   es
  40c8f4:	jne    0x40c892
  40c8f6:	setbe  BYTE PTR [eax-0x7c9817df]
  40c8fd:	jbe    0x40c97c
  40c8ff:	cmp    DWORD PTR [esi-0x30512fcf],ecx
  40c905:	cmp    DWORD PTR [esi+0x75],eax
  40c908:	out    0xea,al
  40c90a:	lea    esp,[edi+0x28a60448]
  40c910:	mov    ds:0x7955a247,eax
  40c915:	das    
  40c916:	ret    0x6fd
  40c919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c91a:	push   esp
  40c91b:	ss inc edx
  40c91d:	push   ebp
  40c91e:	sub    eax,0x3414df5c
  40c923:	jne    0x40c95b
  40c925:	xchg   ebp,eax
  40c926:	out    dx,al
  40c927:	mov    ch,0x3f
  40c929:	mov    dl,0x28
  40c92b:	into   
  40c92c:	test   BYTE PTR [ebx-0x3a098582],dl
  40c932:	dec    esp
  40c933:	(bad)
  40c937:	and    bh,BYTE PTR [ebp-0x29]
  40c93a:	sub    al,0x8e
  40c93c:	push   esi
  40c93d:	mov    ecx,0xf1607b03
  40c942:	in     al,dx
  40c943:	ins    BYTE PTR es:[edi],dx
  40c944:	(bad)  
  40c945:	aad    0x3a
  40c947:	sub    eax,0xf159f873
  40c94c:	lock adc DWORD PTR [edx],0x7f
  40c950:	mov    edi,DWORD PTR [ebx]
  40c952:	stos   DWORD PTR es:[edi],eax
  40c953:	scas   eax,DWORD PTR es:[edi]
  40c954:	test   DWORD PTR [ebx],eax
  40c956:	jge    0x40c9b4
  40c958:	jl     0x40c97a
  40c95a:	and    DWORD PTR [esi-0x21],edi
  40c95d:	shr    DWORD PTR [edx],1
  40c95f:	div    DWORD PTR [ecx+edx*1]
  40c962:	rol    ebp,1
  40c964:	sbb    DWORD PTR [ebx+0x5ccf2a4b],esi
  40c96a:	push   ss
  40c96b:	push   esp
  40c96c:	ds jle 0x40c910
  40c96f:	pop    ebx
  40c970:	aad    0x41
  40c972:	pop    eax
  40c973:	push   ecx
  40c974:	push   0x58560788
  40c979:	inc    edx
  40c97a:	in     al,dx
  40c97b:	sti    
  40c97c:	adc    BYTE PTR [ecx],dl
  40c97e:	ins    BYTE PTR es:[edi],dx
  40c97f:	dec    edi
  40c980:	xor    eax,0x3c6305ad
  40c985:	xor    al,0xaa
  40c987:	inc    edx
  40c988:	out    0xdd,eax
  40c98a:	ret    
  40c98b:	ins    DWORD PTR es:[edi],dx
  40c98c:	test   DWORD PTR [ecx+0x4c],esp
  40c98f:	inc    ecx
  40c990:	xchg   esi,eax
  40c991:	lds    edi,FWORD PTR [esi]
  40c993:	adc    eax,0x4b55e642
  40c998:	cs pop esp
  40c99a:	sub    al,0x50
  40c99c:	iret   
  40c99d:	xchg   esp,eax
  40c99e:	in     eax,dx
  40c99f:	xor    DWORD PTR [edx+0x34],esi
  40c9a2:	cmc    
  40c9a3:	pop    ss
  40c9a4:	sbb    DWORD PTR [ebx+0x72064577],eax
  40c9aa:	adc    edx,DWORD PTR [edx+ecx*4+0xdb2992f]
  40c9b1:	push   eax
  40c9b2:	push   ebp
  40c9b3:	(bad)  
  40c9b4:	mov    dl,0x8a
  40c9b6:	xor    DWORD PTR [ebp-0x80],esi
  40c9b9:	call   0x953b:0xa2a03246
  40c9c0:	inc    eax
  40c9c1:	fdiv   DWORD PTR [ecx-0x73]
  40c9c4:	outs   dx,BYTE PTR ds:[esi]
  40c9c5:	stos   BYTE PTR es:[edi],al
  40c9c6:	or     DWORD PTR [edi],eax
  40c9c8:	lds    ecx,FWORD PTR [ebx+0xf]
  40c9cb:	and    cl,0x8
  40c9ce:	mov    WORD PTR [ebp-0x2fdc47b0],ss
  40c9d4:	stos   BYTE PTR es:[edi],al
  40c9d5:	hlt    
  40c9d6:	clc    
  40c9d7:	(bad)  
  40c9d9:	cdq    
  40c9da:	in     eax,0x99
  40c9dc:	push   ebp
  40c9dd:	(bad)  
  40c9de:	mov    bh,0x2b
  40c9e0:	imul   edx,eax,0xfffffff3
  40c9e3:	imul   esi
  40c9e5:	retf   
  40c9e6:	mov    ah,0x66
  40c9e8:	repnz retf 0x793e
  40c9ec:	mov    al,0x46
  40c9ee:	outs   dx,BYTE PTR ds:[esi]
  40c9ef:	xchg   ebp,eax
  40c9f0:	repz pop esp
  40c9f2:	pop    ebx
  40c9f3:	xor    DWORD PTR [edx+0x7541b2bd],edx
  40c9f9:	inc    DWORD PTR [ebx]
  40c9fb:	(bad)  
  40c9fc:	xlat   BYTE PTR ds:[ebx]
  40c9fd:	mov    eax,ds:0xd78d9423
  40ca02:	lods   eax,DWORD PTR ds:[esi]
  40ca03:	std    
  40ca04:	fst    DWORD PTR [esi-0xc]
  40ca07:	int3   
  40ca08:	adc    DWORD PTR [ecx+0x37],0xdb04de7a
  40ca0f:	push   ds
  40ca10:	in     eax,0xfd
  40ca12:	push   ecx
  40ca13:	inc    edx
  40ca14:	jae    0x40ca7f
  40ca16:	sub    DWORD PTR [eax+0x43],0xffffffdc
  40ca1a:	inc    eax
  40ca1b:	adc    DWORD PTR [ecx-0x24],esp
  40ca1e:	mov    ebp,ebx
  40ca20:	mov    dh,0x31
  40ca22:	mov    al,0xbf
  40ca24:	je     0x40c9ec
  40ca26:	jbe    0x40ca37
  40ca28:	into   
  40ca29:	sub    al,0x0
  40ca2b:	std    
  40ca2c:	ja     0x40ca96
  40ca2e:	add    al,0x9f
  40ca30:	jge    0x40ca27
  40ca32:	inc    edx
  40ca33:	mov    ch,0x47
  40ca35:	mov    ecx,DWORD PTR [edi-0x51]
  40ca38:	or     eax,0xb95d5a30
  40ca3d:	in     eax,0x20
  40ca3f:	scas   al,BYTE PTR es:[edi]
  40ca40:	mov    DWORD PTR [ecx],ecx
  40ca42:	addr16 aaa 
  40ca44:	mov    WORD PTR [eax+0x2c92d4c3],fs
  40ca4a:	xchg   edx,eax
  40ca4b:	call   0x32c1:0xb53114cc
  40ca52:	jbe    0x40cac6
  40ca54:	or     BYTE PTR [ebx-0x41b9a317],cl
  40ca5a:	retf   
  40ca5b:	xchg   ebx,eax
  40ca5c:	(bad)  
  40ca5d:	push   ebx
  40ca5e:	or     al,0x91
  40ca60:	adc    al,0x6f
  40ca62:	mov    ?,WORD PTR [edx-0x28]
  40ca65:	add    ebp,DWORD PTR [edi+eax*8]
  40ca68:	push   cs
  40ca69:	jmp    0x40ca01
  40ca6b:	xchg   esp,eax
  40ca6c:	and    al,0x86
  40ca6e:	iret   
  40ca6f:	mov    BYTE PTR [edx],dl
  40ca71:	mov    dl,0xd2
  40ca73:	jecxz  0x40ca36
  40ca75:	adc    ch,0x47
  40ca78:	stc    
  40ca79:	mov    bl,0x2b
  40ca7b:	cli    
  40ca7c:	fisubr DWORD PTR [ebp+0x2e]
  40ca7f:	mov    ebx,0xb1813fd4
  40ca84:	ficom  WORD PTR [eax]
  40ca86:	neg    DWORD PTR [ecx-0x23347a1]
  40ca8c:	push   edi
  40ca8d:	xchg   edx,eax
  40ca8e:	mov    ds:0xbfba6428,al
  40ca93:	ins    DWORD PTR es:[edi],dx
  40ca94:	xor    ah,BYTE PTR [edi-0x60]
  40ca97:	hlt    
  40ca98:	dec    edi
  40ca99:	mov    edi,DWORD PTR [ebx]
  40ca9b:	mov    eax,ds:0x83602f97
  40caa0:	sbb    DWORD PTR [ecx-0x33fff67d],ebx
  40caa6:	mov    edi,fs
  40caa8:	push   ebx
  40caa9:	es sti 
  40caab:	int3   
  40caac:	sub    BYTE PTR [edx+0x51],dh
  40caaf:	gs clc 
  40cab1:	mov    esp,0xcd62cc46
  40cab6:	shl    DWORD PTR [eax+0x1b1cdd57],1
  40cabc:	jb     0x40ca84
  40cabe:	push   ecx
  40cabf:	mov    BYTE PTR [edx-0x6b],ah
  40cac2:	pop    ebp
  40cac3:	pusha  
  40cac4:	retf   
  40cac5:	test   BYTE PTR [ebx+0xb517f86],bl
  40cacb:	sbb    esi,0x67
  40cace:	pop    eax
  40cacf:	cmc    
  40cad0:	and    cl,BYTE PTR [eax+0x65]
  40cad3:	loopne 0x40cad1
  40cad5:	mov    esi,ds
  40cad7:	idiv   DWORD PTR [edx]
  40cad9:	pop    ebp
  40cada:	and    DWORD PTR [esi+0x611f4625],eax
  40cae0:	lods   al,BYTE PTR ds:[esi]
  40cae1:	mov    ?,WORD PTR [esi-0x48520a23]
  40cae7:	imul   DWORD PTR [edi-0x5c468a0c]
  40caed:	shl    dl,1
  40caef:	cmc    
  40caf0:	jle    0x40caea
  40caf2:	jle    0x40ca89
  40caf4:	imul   eax,DWORD PTR [esi],0xdb135e1a
  40cafa:	popf   
  40cafb:	jno    0x40ca96
  40cafd:	dec    edi
  40cafe:	jmp    0x54c4:0x71b42d7d
  40cb05:	out    0xb,eax
  40cb07:	(bad)  
  40cb08:	pusha  
  40cb09:	xor    bl,BYTE PTR [ebx-0x40e0c1c7]
  40cb0f:	shl    BYTE PTR [eax],cl
  40cb11:	in     al,0xf7
  40cb13:	aad    0x29
  40cb15:	idiv   BYTE PTR [edx-0x62]
  40cb18:	xchg   DWORD PTR [esi+0x61],ebp
  40cb1b:	pop    ds
  40cb1c:	cli    
  40cb1d:	adc    eax,0x5670685
  40cb22:	cmp    DWORD PTR [ecx],esp
  40cb24:	cmp    al,0xab
  40cb26:	pop    ebp
  40cb27:	fisub  DWORD PTR [esi+0x1a]
  40cb2a:	dec    esi
  40cb2b:	ds scas al,BYTE PTR es:[edi]
  40cb2d:	retf   
  40cb2e:	mov    ebx,DWORD PTR [edi]
  40cb30:	(bad)  
  40cb31:	sahf   
  40cb32:	ds in  eax,dx
  40cb34:	mov    eax,0xfa0706d9
  40cb39:	cmp    eax,0x306c946d
  40cb3e:	push   edi
  40cb3f:	jmp    0xa4b7b885
  40cb44:	shl    DWORD PTR ds:[eax+ecx*8-0x35],0xd5
  40cb4a:	outs   dx,BYTE PTR ds:[esi]
  40cb4b:	inc    esp
  40cb4c:	add    DWORD PTR [ebp-0x14],ebx
  40cb4f:	daa    
  40cb50:	jp     0x40cb2b
  40cb52:	adc    eax,0x3b86ad69
  40cb57:	out    0x33,al
  40cb59:	adc    al,0x7f
  40cb5b:	sub    eax,0x6c5b694b
  40cb60:	dec    eax
  40cb61:	xchg   esi,eax
  40cb62:	ret    
  40cb63:	cmp    ah,BYTE PTR [esi]
  40cb65:	adc    edx,DWORD PTR ds:0x2cf7116
  40cb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb6c:	into   
  40cb6d:	ds ret 0x1120
  40cb71:	cli    
  40cb72:	inc    ecx
  40cb73:	imul   ecx,eax,0x6c
  40cb76:	xchg   ebx,eax
  40cb77:	jmp    esp
  40cb79:	mov    bh,0xeb
  40cb7b:	xchg   ebp,eax
  40cb7c:	ins    BYTE PTR es:[edi],dx
  40cb7d:	ja     0x40cb99
  40cb7f:	add    eax,DWORD PTR [esi-0x4d498ec]
  40cb85:	pushf  
  40cb86:	mul    BYTE PTR [edx]
  40cb88:	aad    0xcd
  40cb8a:	(bad)  
  40cb8b:	xchg   edi,eax
  40cb8c:	int    0xeb
  40cb8e:	mov    edi,0x1bdff4b6
  40cb93:	cmp    BYTE PTR [esi],dl
  40cb95:	jp     0x40cb45
  40cb97:	arpl   WORD PTR [ebp+0x4c],bp
  40cb9a:	das    
  40cb9b:	dec    ecx
  40cb9c:	bound  esi,QWORD PTR [ebx+0x380c8ea2]
  40cba2:	lods   eax,DWORD PTR ds:[esi]
  40cba3:	xchg   ecx,eax
  40cba4:	aam    0x4f
  40cba6:	xor    DWORD PTR ds:0x4ddd5446,esp
  40cbac:	add    al,0x34
  40cbae:	adc    esp,edi
  40cbb0:	xchg   esp,eax
  40cbb1:	rcr    BYTE PTR [edi-0x73f8d39b],1
  40cbb7:	pop    esi
  40cbb8:	iret   
  40cbb9:	cmc    
  40cbba:	leave  
  40cbbb:	push   ecx
  40cbbc:	jne    0x40cbf4
  40cbbe:	push   esp
  40cbbf:	jne    0x40cb73
  40cbc1:	push   cs
  40cbc2:	add    BYTE PTR [eax],bl
  40cbc4:	mov    ebp,0x487da9e1
  40cbc9:	in     al,0x6e
  40cbcb:	xlat   BYTE PTR ds:[ebx]
  40cbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbcd:	call   0xce421466
  40cbd2:	adc    BYTE PTR ds:0xcd13e9ab,0x80
  40cbd9:	inc    esp
  40cbda:	ficomp DWORD PTR [ebp+0x2f]
  40cbdd:	jnp    0x40cc43
  40cbdf:	push   esp
  40cbe0:	leave  
  40cbe1:	out    0x8a,eax
  40cbe3:	dec    edx
  40cbe4:	push   ds
  40cbe5:	dec    ebx
  40cbe6:	fbld   TBYTE PTR [esi+0x7b]
  40cbe9:	das    
  40cbea:	test   al,0xce
  40cbec:	xor    eax,0xcd4fe6c7
  40cbf1:	test   al,0xf
  40cbf3:	ror    BYTE PTR [esi-0x51e63846],1
  40cbf9:	inc    ebp
  40cbfa:	cld    
  40cbfb:	mov    esi,0x36f8571a
  40cc00:	aaa    
  40cc01:	(bad)  
  40cc02:	and    eax,ecx
  40cc04:	xchg   ecx,eax
  40cc05:	push   esp
  40cc06:	and    bh,BYTE PTR [ecx]
  40cc08:	icebp  
  40cc09:	jp     0x40cc15
  40cc0b:	mov    ah,0x4
  40cc0d:	add    edx,esi
  40cc0f:	jmp    0x15cd:0x6eae84f7
  40cc16:	inc    ecx
  40cc17:	and    eax,0x473c9a8
  40cc1c:	pop    esi
  40cc1d:	cmp    DWORD PTR [esi-0x14],esi
  40cc20:	scas   al,BYTE PTR es:[edi]
  40cc21:	or     DWORD PTR [esi+0x9],ecx
  40cc24:	cmp    DWORD PTR [edx+ecx*8+0x5cf315ee],edi
  40cc2b:	xchg   BYTE PTR [edx-0x50],bh
  40cc2e:	pop    es
  40cc2f:	loope  0x40cc7e
  40cc31:	mov    dh,dl
  40cc33:	stos   DWORD PTR es:[edi],eax
  40cc34:	es push es
  40cc36:	add    cl,bh
  40cc38:	sub    esp,eax
  40cc3a:	add    ebp,DWORD PTR [ecx]
  40cc3c:	push   cs
  40cc3d:	mov    al,ds:0x32d03baf
  40cc42:	push   es
  40cc43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc44:	pop    esi
  40cc45:	(bad)  
  40cc47:	retf   
  40cc48:	inc    esp
  40cc49:	mov    eax,ds:0x2017d81b
  40cc4e:	xchg   edx,eax
  40cc4f:	leave  
  40cc50:	mov    ds:0x539c0577,al
  40cc55:	jl     0x191fdb14
  40cc5b:	adc    ebx,edi
  40cc5d:	into   
  40cc5e:	sub    esp,ebx
  40cc60:	xchg   DWORD PTR [edi-0x20],eax
  40cc63:	idiv   BYTE PTR [esi]
  40cc65:	retf   
  40cc66:	jns    0x40cc4f
  40cc68:	push   cs
  40cc69:	add    eax,0x10eccd93
  40cc6e:	into   
  40cc6f:	sbb    ch,BYTE PTR [ebx+0x4e7c5256]
  40cc75:	es lock inc eax
  40cc78:	mov    DWORD PTR [edi],esi
  40cc7a:	lock cmp bl,BYTE PTR [ebx-0x787758b0]
  40cc81:	outs   dx,DWORD PTR ds:[esi]
  40cc82:	dec    BYTE PTR ds:0xb8c9c930
  40cc88:	out    0x94,eax
  40cc8a:	fdiv   QWORD PTR [edx+esi*8-0x2b0bbcd0]
  40cc91:	int    0x92
  40cc93:	sahf   
  40cc94:	stos   BYTE PTR es:[edi],al
  40cc95:	jbe    0x40cc2b
  40cc97:	aam    0x7e
  40cc99:	sub    eax,0x855334f1
  40cc9e:	je     0x40cce7
  40cca0:	push   cs
  40cca1:	int    0xa7
  40cca3:	ja     0x40cc97
  40cca5:	(bad)  
  40cca6:	mov    edi,0xdad7b07b
  40ccab:	pop    edi
  40ccac:	sbb    BYTE PTR [ecx],dl
  40ccae:	mov    dh,0x31
  40ccb0:	retf   
  40ccb1:	xchg   ebp,eax
  40ccb2:	int3   
  40ccb3:	xor    dl,al
  40ccb5:	push   ds
  40ccb6:	daa    
  40ccb7:	sbb    eax,0x6a4ac04f
  40ccbc:	dec    ecx
  40ccbd:	in     eax,dx
  40ccbe:	add    BYTE PTR [edx],ah
  40ccc0:	rol    BYTE PTR [ebx],1
  40ccc2:	dec    ebp
  40ccc3:	fcmovu st,st(1)
  40ccc5:	ins    DWORD PTR es:[edi],dx
  40ccc6:	pushf  
  40ccc7:	and    dh,dh
  40ccc9:	xor    BYTE PTR [ebx-0x42ecc292],ah
  40cccf:	rcl    BYTE PTR [eax-0x7c],1
  40ccd2:	test   al,0x11
  40ccd4:	sbb    eax,esp
  40ccd6:	imul   edx,esi
  40ccd9:	cmp    ah,al
  40ccdb:	lock add DWORD PTR [ecx],edi
  40ccde:	cmp    eax,0x1b535ec0
  40cce3:	cmc    
  40cce4:	idiv   DWORD PTR [ebx+0xc219828]
  40ccea:	adc    eax,0xe7c006c3
  40ccef:	call   edx
  40ccf1:	jbe    0x40cd69
  40ccf3:	fsub   DWORD PTR [ebx+edi*4+0x505de035]
  40ccfa:	popa   
  40ccfb:	xor    eax,0xc9a800e7
  40cd00:	jge    0x40cd78
  40cd02:	fisubr DWORD PTR [esi+0xac61ce7]
  40cd08:	dec    esp
  40cd09:	mov    cl,0xfc
  40cd0b:	daa    
  40cd0c:	mov    ah,0x55
  40cd0e:	mov    al,0xc4
  40cd10:	loope  0x40cd35
  40cd12:	stos   DWORD PTR es:[edi],eax
  40cd13:	mov    ebp,0xadc877b7
  40cd18:	mov    ah,al
  40cd1a:	mov    esp,0x27b358e0
  40cd1f:	mov    ah,BYTE PTR ds:[eax]
  40cd22:	cmp    DWORD PTR [esi+0x47f0c2f4],ebp
  40cd28:	fadd   st,st(2)
  40cd2a:	ss fwait
  40cd2c:	leave  
  40cd2d:	mov    al,0x37
  40cd2f:	out    0xfe,al
  40cd31:	sbb    esp,0xffffffac
  40cd34:	inc    edx
  40cd35:	stc    
  40cd36:	inc    ebx
  40cd37:	and    DWORD PTR [esi],esi
  40cd39:	inc    esp
  40cd3a:	in     al,0x4c
  40cd3c:	inc    edi
  40cd3d:	jo     0x40cd6f
  40cd3f:	or     esi,DWORD PTR [ebx+0x57]
  40cd42:	sbb    DWORD PTR [ebp-0x57],ebp
  40cd45:	mov    esp,0x95836d0a
  40cd4a:	jns    0x40cd96
  40cd4c:	push   ebx
  40cd4d:	xchg   ebx,eax
  40cd4e:	jecxz  0x40cd18
  40cd50:	jmp    0xf8da:0x16d00a4
  40cd57:	inc    ecx
  40cd58:	push   ds
  40cd59:	push   ebp
  40cd5a:	repz fnstcw WORD PTR [edx-0x79fb9433]
  40cd61:	outs   dx,DWORD PTR ds:[esi]
  40cd62:	lahf   
  40cd63:	cli    
  40cd64:	sbb    eax,0xaa56b284
  40cd69:	es sbb al,0x77
  40cd6c:	jb     0x40cd11
  40cd6e:	cmp    al,BYTE PTR [eax+0x8f1de8f]
  40cd74:	int3   
  40cd75:	ins    DWORD PTR es:[edi],dx
  40cd76:	and    DWORD PTR [ecx-0x578e3d4a],esi
  40cd7c:	or     DWORD PTR [esp+edx*2],0x73da912d
  40cd83:	jmp    0x40cd8b
  40cd85:	inc    esp
  40cd86:	push   ss
  40cd87:	inc    bl
  40cd89:	inc    ebp
  40cd8a:	dec    esp
  40cd8b:	pusha  
  40cd8c:	mov    esp,0x1e6cd1b2
  40cd91:	pop    ecx
  40cd92:	inc    edi
  40cd93:	xor    DWORD PTR [edx],esi
  40cd95:	pop    esp
  40cd96:	out    dx,eax
  40cd97:	inc    ebx
  40cd98:	out    dx,al
  40cd99:	mov    al,ds:0x9439e1ec
  40cd9e:	enter  0x5049,0x65
  40cda2:	imul   edx,DWORD PTR [esi+esi*2-0x16f93476],0x70
  40cdaa:	ins    BYTE PTR es:[edi],dx
  40cdab:	lods   al,BYTE PTR ds:[esi]
  40cdac:	dec    edi
  40cdad:	dec    ebp
  40cdae:	inc    eax
  40cdaf:	mov    ebp,0x4a8d6b4f
  40cdb4:	lods   eax,DWORD PTR ds:[esi]
  40cdb5:	pop    ebp
  40cdb6:	in     al,0xf7
  40cdb8:	jp     0x40cd94
  40cdba:	jnp    0x40cda2
  40cdbc:	jecxz  0x40cdab
  40cdbe:	fild   DWORD PTR [eax+0x665df61e]
  40cdc4:	xchg   ebp,eax
  40cdc5:	sahf   
  40cdc6:	pop    esi
  40cdc7:	(bad)  
  40cdc8:	sub    DWORD PTR [ecx+0x3cd926af],eax
  40cdce:	outs   dx,BYTE PTR ds:[esi]
  40cdcf:	pushf  
  40cdd0:	scas   eax,DWORD PTR es:[edi]
  40cdd1:	or     eax,DWORD PTR ss:[esi]
  40cdd4:	pop    ss
  40cdd5:	inc    eax
  40cdd6:	sbb    eax,esi
  40cdd8:	push   ebx
  40cdd9:	xchg   ecx,eax
  40cdda:	hlt    
  40cddb:	scas   al,BYTE PTR es:[edi]
  40cddc:	ficomp WORD PTR [edi]
  40cdde:	call   0x6f90a20b
  40cde3:	xor    esp,DWORD PTR [edx]
  40cde5:	jmp    DWORD PTR ds:0x3762f746
  40cdeb:	jg     0x40cdd0
  40cded:	cld    
  40cdee:	out    dx,eax
  40cdef:	jne    0x40cd96
  40cdf1:	das    
  40cdf2:	ret    0x7949
  40cdf5:	pop    ebp
  40cdf6:	mov    ss,WORD PTR [esi-0x59473db7]
  40cdfc:	xchg   ebp,eax
  40cdfd:	shr    BYTE PTR [edi+ecx*4],0xfc
  40ce01:	ss mov ebp,0xd8441
  40ce07:	in     eax,0x5d
  40ce09:	adc    BYTE PTR es:[ecx+0x55edd906],cl
  40ce10:	sti    
  40ce11:	adc    ah,ah
  40ce13:	in     al,0x2f
  40ce15:	dec    edx
  40ce16:	lods   eax,DWORD PTR ds:[esi]
  40ce17:	cmp    DWORD PTR [esi],edi
  40ce19:	or     DWORD PTR [ecx-0x310f3b07],edx
  40ce1f:	cld    
  40ce20:	mov    bl,0x34
  40ce22:	(bad)  
  40ce23:	cwde   
  40ce24:	shl    DWORD PTR [eax],1
  40ce26:	retf   
  40ce27:	ds nop
  40ce29:	jmp    0xb70c:0x8e56b2ac
  40ce30:	and    DWORD PTR [edi-0x42bf5db4],ebx
  40ce36:	and    eax,0xcf4fe67b
  40ce3b:	out    dx,eax
  40ce3c:	jne    0x40cdc2
  40ce3e:	adc    edi,esp
  40ce40:	dec    ebp
  40ce41:	fucom  st(1)
  40ce43:	cmp    bl,0x48
  40ce46:	and    DWORD PTR [eax-0x7c3d09d9],ebx
  40ce4c:	push   eax
  40ce4d:	adc    ebp,ecx
  40ce4f:	imul   esp,eax,0x971d906a
  40ce55:	xchg   edx,eax
  40ce56:	mov    al,ds:0x4a95ddd9
  40ce5b:	cmp    eax,0xb5a1dd75
  40ce60:	or     ebx,DWORD PTR [ecx+0x71aa1dfc]
  40ce66:	push   es
  40ce67:	mov    ebx,0x805325c6
  40ce6c:	or     DWORD PTR [eax+0x16abdb17],ecx
  40ce72:	add    al,0x2d
  40ce74:	int3   
  40ce75:	inc    edi
  40ce76:	push   ss
  40ce77:	pop    ebx
  40ce78:	je     0x40ce24
  40ce7a:	and    BYTE PTR [eax+0x29f29be],cl
  40ce80:	sbb    eax,0x62da1b3b
  40ce85:	(bad)  [ebp-0x7096dbb4]
  40ce8b:	push   edi
  40ce8c:	out    dx,eax
  40ce8d:	push   esp
  40ce8e:	jge    0x40ce34
  40ce90:	and    al,0xe3
  40ce92:	mov    al,0xfd
  40ce94:	dec    eax
  40ce95:	add    bh,BYTE PTR [edx+0x5652627]
  40ce9b:	xor    eax,0xa0e98639
  40cea0:	cld    
  40cea1:	mov    WORD PTR [eax],ss
  40cea3:	daa    
  40cea4:	or     bl,BYTE PTR [ecx+edi*2-0x40]
  40cea8:	sar    cl,cl
  40ceaa:	adc    eax,0x28e239c6
  40ceaf:	fs inc ebp
  40ceb1:	xchg   edx,eax
  40ceb2:	fadd   DWORD PTR [eax+0x71]
  40ceb5:	push   cs
  40ceb6:	sub    BYTE PTR [ebx],bh
  40ceb8:	stc    
  40ceb9:	das    
  40ceba:	and    eax,0xe6c19c36
  40cebf:	shl    DWORD PTR [edx+0xad50f00],1
  40cec5:	cmp    ch,BYTE PTR [ebx-0x1e]
  40cec8:	cmp    eax,esi
  40ceca:	je     0x40cef4
  40cecc:	sbb    eax,0x5128b719
  40ced1:	push   ebp
  40ced2:	stos   DWORD PTR es:[edi],eax
  40ced3:	push   ebx
  40ced4:	mov    ebx,0xe5800c08
  40ced9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceda:	adc    ebx,DWORD PTR [edx]
  40cedc:	stos   DWORD PTR es:[edi],eax
  40cedd:	pop    esi
  40cede:	adc    eax,0x4c075c95
  40cee3:	pop    edi
  40cee4:	call   0x67d5:0x18747f3a
  40ceeb:	dec    eax
  40ceec:	pushf  
  40ceed:	inc    edx
  40ceee:	pop    ebp
  40ceef:	xor    DWORD PTR [ebp-0xb085e59],eax
  40cef5:	test   eax,0xc11e6ca9
  40cefa:	or     eax,0x64d8632d
  40ceff:	sub    eax,0xbffb6a21
  40cf04:	ror    BYTE PTR [eax+0xecac970],1
  40cf0a:	xchg   esi,eax
  40cf0b:	sub    al,0x5f
  40cf0d:	mov    bh,0x33
  40cf0f:	adc    al,0x84
  40cf11:	adc    esi,DWORD PTR [ecx+edi*2+0x975923f]
  40cf18:	mov    eax,ds:0xd8db368a
  40cf1d:	dec    ecx
  40cf1e:	loope  0x40cf06
  40cf20:	std    
  40cf21:	jae    0x40cf7d
  40cf23:	dec    edx
  40cf24:	adc    eax,DWORD PTR [ecx+0x195eeedf]
  40cf2a:	push   DWORD PTR [ebx+0x161fe192]
  40cf30:	clc    
  40cf31:	jmp    0x538c5fe7
  40cf36:	pop    edi
  40cf37:	out    0xee,eax
  40cf39:	sub    BYTE PTR [ecx+eiz*8+0x75ab8c60],al
  40cf40:	mov    edi,0x1f562cdd
  40cf45:	xchg   ecx,eax
  40cf46:	lahf   
  40cf47:	xor    al,0x7c
  40cf49:	js     0x40cf69
  40cf4b:	jg     0x40cf4f
  40cf4d:	mov    esp,0x8a10f10b
  40cf52:	mov    edx,ebp
  40cf54:	ror    BYTE PTR ds:0x7042d558,1
  40cf5a:	xor    DWORD PTR ds:0x5c2ed6bc,esp
  40cf60:	ret    
  40cf61:	pop    esp
  40cf62:	test   BYTE PTR [ecx+0x75],ah
  40cf65:	test   BYTE PTR [eax+0x63],bh
  40cf68:	jl     0xae565b23
  40cf6e:	mov    ah,0x73
  40cf70:	out    dx,al
  40cf71:	xor    BYTE PTR [esi+0x25],ch
  40cf74:	xchg   ebp,eax
  40cf75:	and    BYTE PTR [ecx+edi*8+0x1ac2d3b2],bl
  40cf7c:	dec    edi
  40cf7d:	push   edx
  40cf7e:	loopne 0x40cfdb
  40cf80:	dec    eax
  40cf81:	push   0xf1d007af
  40cf86:	ins    BYTE PTR es:[edi],dx
  40cf87:	shl    BYTE PTR ds:0x9df19cbd,1
  40cf8d:	imul   edi,DWORD PTR [ecx],0xc372f658
  40cf93:	pop    esi
  40cf94:	out    dx,al
  40cf95:	jne    0x40cf2a
  40cf97:	mov    esi,0xbd458000
  40cf9c:	jle    0x40d001
  40cf9e:	pusha  
  40cf9f:	cmp    edi,ebx
  40cfa1:	xchg   ebp,edx
  40cfa3:	dec    eax
  40cfa4:	jo     0x40cf39
  40cfa6:	sub    ah,bl
  40cfa8:	xchg   ecx,eax
  40cfa9:	ds loopne 0x40cf83
  40cfac:	add    eax,0xe16cf6bc
  40cfb1:	cmp    eax,0xacd35e86
  40cfb6:	js     0x40cf96
  40cfb8:	cmp    eax,0x4f662b42
  40cfbd:	push   esp
  40cfbe:	hlt    
  40cfbf:	idiv   BYTE PTR [ebx]
  40cfc1:	cli    
  40cfc2:	test   eax,0x9b8295a1
  40cfc7:	dec    ebp
  40cfc8:	pop    edi
  40cfc9:	cmp    edx,DWORD PTR [edi]
  40cfcb:	cli    
  40cfcc:	mov    eax,ds:0xb6caad6b
  40cfd1:	sub    DWORD PTR [ecx+eax*8+0x10c0cf21],0x1c
  40cfd9:	daa    
  40cfda:	add    esi,DWORD PTR [eax]
  40cfdc:	out    dx,al
  40cfdd:	and    eax,0x89361b5b
  40cfe2:	loopne 0x40cfc6
  40cfe4:	imul   esp,DWORD PTR [edx+edi*4+0xe],0x47
  40cfe9:	jmp    0x40d000
  40cfeb:	adc    DWORD PTR [ebp-0x26641a28],0x5b3c5fb6
  40cff5:	call   0x77f987ff
  40cffa:	sbb    al,0x10
  40cffc:	cld    
  40cffd:	mov    DWORD PTR [ebx-0x1be9f00a],ebp
  40d003:	push   ds
  40d004:	out    dx,eax
  40d005:	and    bl,BYTE PTR [eax+edi*8]
  40d008:	jbe    0x40d054
  40d00a:	jnp    0x40cfa4
  40d00c:	test   eax,0xca97d04
  40d011:	push   ss
  40d012:	dec    edi
  40d013:	fdivrp st(1),st
  40d015:	sbb    eax,0x4337b07f
  40d01a:	imul   edx,DWORD PTR ds:0xe9d5b19b,0x5a9d0033
  40d024:	gs jbe 0x40d058
  40d027:	sbb    eax,0xc982fc46
  40d02c:	not    DWORD PTR [eax+0x39]
  40d02f:	imul   ebx,DWORD PTR [edx-0x61958ada],0x611c09ea
  40d039:	xchg   esi,eax
  40d03a:	cdq    
  40d03b:	adc    DWORD PTR [edi-0x31],esp
  40d03e:	push   ebx
  40d03f:	push   edx
  40d040:	push   ecx
  40d041:	lock stos BYTE PTR es:[edi],al
  40d043:	mov    ds:0xdaf3fa47,eax
  40d048:	loop   0x40d065
  40d04a:	mov    BYTE PTR [ecx],cl
  40d04c:	xchg   esi,eax
  40d04d:	not    BYTE PTR [eax-0x5625d8c2]
  40d053:	jecxz  0x40d084
  40d055:	cmp    eax,ebx
  40d057:	mov    ebx,0x540ff759
  40d05c:	ins    BYTE PTR es:[edi],dx
  40d05d:	add    esi,ecx
  40d05f:	(bad)  
  40d060:	aas    
  40d061:	call   0xba5cc19
  40d066:	add    dh,BYTE PTR [esi-0x7b]
  40d069:	dec    ebp
  40d06a:	push   edi
  40d06b:	inc    esp
  40d06c:	in     al,0xcc
  40d06e:	sbb    eax,0x4fa59111
  40d073:	inc    edx
  40d074:	inc    esp
  40d075:	xor    al,0x41
  40d077:	pop    es
  40d078:	dec    ebx
  40d079:	dec    BYTE PTR [ebp+0x52989170]
  40d07f:	leave  
  40d080:	mov    ebp,0x5f10ed3a
  40d085:	sbb    DWORD PTR [eax-0x42],0x60
  40d089:	cs or  al,0x59
  40d08c:	(bad)  
  40d08e:	loop   0x40d0f1
  40d090:	retf   
  40d091:	push   esi
  40d092:	dec    edx
  40d093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d094:	xor    esp,esp
  40d096:	jecxz  0x40d092
  40d098:	pop    esi
  40d099:	outs   dx,DWORD PTR ds:[esi]
  40d09a:	sahf   
  40d09b:	bound  ebp,QWORD PTR [edi]
  40d09d:	jo     0x40d029
  40d09f:	cmp    eax,edx
  40d0a1:	sti    
  40d0a2:	(bad)  [edi]
  40d0a4:	out    dx,al
  40d0a5:	jno    0x40d043
  40d0a7:	int    0xeb
  40d0a9:	lods   eax,DWORD PTR ds:[esi]
  40d0aa:	adc    al,0x34
  40d0ac:	or     al,0x9c
  40d0ae:	int    0x7a
  40d0b0:	loope  0x40d0b5
  40d0b2:	jl     0x40d10b
  40d0b4:	outs   dx,BYTE PTR ds:[esi]
  40d0b5:	push   eax
  40d0b6:	sub    al,0x6e
  40d0b8:	xor    BYTE PTR [edi+0x5bbcff80],bh
  40d0be:	fwait
  40d0bf:	pop    eax
  40d0c0:	mov    WORD PTR [edx],cs
  40d0c2:	das    
  40d0c3:	bound  ebx,QWORD PTR [esi+edi*2+0x461874f7]
  40d0ca:	jne    0x40d0af
  40d0cc:	xchg   ebx,eax
  40d0cd:	pop    ss
  40d0ce:	in     al,0xef
  40d0d0:	sbb    ah,BYTE PTR [edi+0x29159921]
  40d0d6:	ret    
  40d0d7:	lock retf 
  40d0d9:	jo     0x40d07d
  40d0db:	bound  si,DWORD PTR [ebx+edi*1-0x41]
  40d0e0:	loope  0x40d0ea
  40d0e2:	cmp    eax,0x91a5ce
  40d0e7:	mov    esi,0xf3ec78f6
  40d0ec:	nop
  40d0ed:	fisttp WORD PTR [esi-0x13536e37]
  40d0f3:	fistp  QWORD PTR [edi+0x18]
  40d0f6:	dec    ecx
  40d0f7:	push   ds
  40d0f8:	(bad)  
  40d0fa:	mov    ebx,0x77eef61d
  40d0ff:	imul   eax,DWORD PTR [ebx+0xa9b4ab6],0x9966fb47
  40d109:	push   edi
  40d10a:	cmp    DWORD PTR [ecx],0x1e15b35
  40d110:	add    BYTE PTR [edx-0x4172c08e],bl
  40d116:	cmp    al,BYTE PTR [ecx+0x5527dfc5]
  40d11c:	dec    edi
  40d11d:	shr    DWORD PTR [edi],cl
  40d11f:	adc    BYTE PTR [edx+0x650a361d],bh
  40d125:	js     0x40d13e
  40d127:	daa    
  40d128:	sahf   
  40d129:	sbb    bh,BYTE PTR [esi]
  40d12b:	jg     0x40d0fd
  40d12d:	xor    BYTE PTR [edi-0x66efe861],al
  40d133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d134:	sub    DWORD PTR [ebp+0x77],edi
  40d137:	ficom  WORD PTR [esp+esi*4-0x3ccb09a]
  40d13e:	(bad)  
  40d13f:	push   ss
  40d140:	sub    esp,esi
  40d142:	in     al,0xe6
  40d144:	mov    ?,WORD PTR [ecx-0xe]
  40d147:	cli    
  40d148:	leave  
  40d149:	dec    edi
  40d14a:	jmp    0x40d113
  40d14c:	and    DWORD PTR [edi+0x5ce898e],edx
  40d152:	mov    edi,0xebc53bf2
  40d157:	jno    0x40d10c
  40d159:	or     eax,0xa743610
  40d15e:	adc    ebp,DWORD PTR [ebx-0x1c65acca]
  40d164:	ins    BYTE PTR es:[edi],dx
  40d165:	shl    DWORD PTR [ecx+0x1b],1
  40d168:	popf   
  40d169:	mov    al,ds:0x4e408b29
  40d16e:	add    edi,DWORD PTR [ebp+eax*4-0x19]
  40d172:	mov    dl,0x11
  40d174:	dec    ebx
  40d175:	cmp    eax,0x60be5e5a
  40d17a:	dec    edi
  40d17b:	inc    esi
  40d17c:	inc    ebx
  40d17d:	arpl   WORD PTR ds:[eax-0x15],dx
  40d181:	mov    WORD PTR [edi-0x74],es
  40d184:	dec    ecx
  40d185:	mov    bh,0x4
  40d187:	push   ebp
  40d188:	call   DWORD PTR [eax-0x73]
  40d18b:	fistp  WORD PTR [esi]
  40d18d:	jecxz  0x40d1a0
  40d18f:	aad    0xa4
  40d191:	pop    esi
  40d192:	xchg   edi,eax
  40d193:	and    esp,eax
  40d195:	out    dx,al
  40d196:	loopne 0x40d216
  40d198:	add    al,0x45
  40d19a:	fsub   QWORD PTR [edi-0x28389d21]
  40d1a0:	fcom   QWORD PTR [ebp-0x4]
  40d1a3:	jae    0x40d1ec
  40d1a5:	pop    edx
  40d1a6:	inc    ebx
  40d1a7:	pop    edx
  40d1a8:	or     BYTE PTR ds:0x4cd33abe,al
  40d1ae:	dec    esp
  40d1af:	fisub  WORD PTR [edi]
  40d1b1:	xchg   ebp,eax
  40d1b2:	jnp    0x40d1a7
  40d1b4:	mov    esp,0x7ce2f36b
  40d1b9:	dec    esp
  40d1ba:	ja     0x40d1fe
  40d1bc:	sbb    al,0x98
  40d1be:	icebp  
  40d1bf:	jmp    0x40d181
  40d1c1:	mov    dl,0xb6
  40d1c3:	shl    BYTE PTR [edi-0x18],cl
  40d1c6:	test   BYTE PTR [ebp-0xd],al
  40d1c9:	gs dec ebx
  40d1cb:	aas    
  40d1cc:	xchg   esp,eax
  40d1cd:	scas   al,BYTE PTR es:[di]
  40d1cf:	je     0x40d1c5
  40d1d1:	push   cs
  40d1d2:	test   eax,0x7161a78d
  40d1d7:	neg    bh
  40d1d9:	sbb    dl,bl
  40d1db:	jmp    0x40d213
  40d1dd:	push   ecx
  40d1de:	fdivr  st(6),st
  40d1e0:	mov    ds:0x7b10bbb7,eax
  40d1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e6:	mov    ch,0x4e
  40d1e8:	in     al,dx
  40d1e9:	jmp    0xf0fb:0x4ffe6bff
  40d1f0:	or     al,cl
  40d1f2:	fwait
  40d1f3:	dec    ebx
  40d1f4:	aas    
  40d1f5:	in     al,dx
  40d1f6:	push   ss
  40d1f7:	inc    edx
  40d1f8:	out    0x0,al
  40d1fa:	and    edx,DWORD PTR [ebx+0x3]
  40d1fd:	dec    eax
  40d1fe:	add    ebx,0xb530c106
  40d204:	mov    edi,0xf3c14050
  40d209:	jo     0x40d208
  40d20b:	mov    ah,0x13
  40d20d:	fwait
  40d20e:	addr16 out dx,eax
  40d210:	or     ah,0x1b
  40d213:	lock and dl,BYTE PTR [edi]
  40d216:	sbb    al,0x6a
  40d218:	pop    esi
  40d219:	xor    dh,ah
  40d21b:	adc    ebp,DWORD PTR [eax-0xff3c8a6]
  40d221:	pop    ss
  40d222:	(bad)  [edx+0x7c730829]
  40d228:	xor    dl,BYTE PTR ss:[eax]
  40d22b:	sub    BYTE PTR [edx],0xdb
  40d22e:	adc    eax,0x1fce46b9
  40d233:	jbe    0x40d209
  40d235:	je     0x40d1cd
  40d237:	ret    
  40d238:	dec    ebp
  40d239:	push   DWORD PTR [eax+0x2ec861c1]
  40d23f:	sub    esi,edx
  40d241:	jp     0x40d2a1
  40d243:	and    edx,DWORD PTR [esi]
  40d245:	loopne 0x40d206
  40d247:	arpl   WORD PTR [ebx+0x42e57d20],ax
  40d24d:	inc    eax
  40d24e:	mov    ebx,0x448b6cbf
  40d253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d254:	xchg   ecx,eax
  40d255:	jns    0x40d256
  40d257:	pushf  
  40d258:	dec    edi
  40d259:	push   0x1cec3eec
  40d25e:	push   ebp
  40d25f:	mov    dh,0x57
  40d261:	add    ebp,esi
  40d263:	sub    edx,DWORD PTR [ebx-0x57]
  40d266:	arpl   sp,cx
  40d268:	cmc    
  40d269:	inc    ecx
  40d26b:	leave  
  40d26c:	test   dl,ah
  40d26e:	xchg   esi,eax
  40d26f:	stos   DWORD PTR es:[edi],eax
  40d270:	data16 add bh,bl
  40d273:	repz cmp DWORD PTR [ebp+0x30],0x408b5bd4
  40d27b:	out    0x5b,eax
  40d27d:	pop    ebp
  40d27e:	and    dh,bh
  40d280:	std    
  40d281:	xor    BYTE PTR [ebx],cl
  40d283:	addr16 call 0xdd7fd04d
  40d289:	js     0x40d2e0
  40d28b:	mov    BYTE PTR [edi+0x9],al
  40d28e:	es daa 
  40d290:	loope  0x40d2e6
  40d292:	imul   edx,DWORD PTR [edx],0xc61ed169
  40d298:	ficom  WORD PTR [eax-0xf]
  40d29b:	daa    
  40d29c:	push   0x44078bce
  40d2a1:	jge    0x40d2b2
  40d2a3:	dec    ecx
  40d2a4:	out    dx,eax
  40d2a5:	mov    dh,0x24
  40d2a7:	inc    esp
  40d2a8:	aaa    
  40d2a9:	push   ds
  40d2aa:	adc    dh,BYTE PTR [esi+0x19b1090c]
  40d2b0:	rcr    BYTE PTR [esi-0x41],0x80
  40d2b4:	sar    BYTE PTR [esi-0x62],0x17
  40d2b8:	clc    
  40d2b9:	dec    edi
  40d2ba:	mov    al,ds:0xe076debc
  40d2bf:	(bad)  
  40d2c0:	xchg   ebp,eax
  40d2c1:	xor    dl,BYTE PTR [edi+0x5b7aa175]
  40d2c7:	ins    DWORD PTR es:[edi],dx
  40d2c8:	nop
  40d2c9:	sar    ebp,1
  40d2cb:	arpl   WORD PTR [ebx+0x5d],bx
  40d2ce:	push   ebx
  40d2cf:	inc    ebp
  40d2d0:	in     al,0xb6
  40d2d2:	adc    DWORD PTR [esi-0xd51466a],eax
  40d2d8:	xchg   edi,eax
  40d2d9:	pushf  
  40d2da:	repz pop edx
  40d2dc:	jecxz  0x40d2eb
  40d2de:	scas   eax,DWORD PTR es:[edi]
  40d2df:	pop    edx
  40d2e0:	adc    al,0xd
  40d2e2:	sub    DWORD PTR [esi-0xc],ebp
  40d2e5:	push   esp
  40d2e6:	aaa    
  40d2e7:	out    0xf1,eax
  40d2e9:	xchg   esp,eax
  40d2ea:	push   ebx
  40d2eb:	xor    eax,0x991efa2f
  40d2f0:	ret    0x5955
  40d2f3:	or     esp,DWORD PTR [eax-0x64bb9b75]
  40d2f9:	dec    esp
  40d2fa:	pop    eax
  40d2fb:	and    al,BYTE PTR [esi+ebp*2-0x4e]
  40d2ff:	(bad)  
  40d300:	xor    DWORD PTR [edi-0x61],ebp
  40d303:	cld    
  40d304:	dec    eax
  40d305:	pop    eax
  40d306:	test   al,0x3c
  40d308:	add    cl,0x6e
  40d30b:	sbb    BYTE PTR [ebp+edx*1-0x30],cl
  40d30f:	push   0x59
  40d311:	dec    esi
  40d312:	mov    ds:0x6a558639,eax
  40d317:	std    
  40d318:	mov    ds:0x5cb8ff10,al
  40d31d:	test   ah,0xc9
  40d320:	shl    edx,cl
  40d322:	jge    0x40d2a8
  40d324:	xchg   ebx,eax
  40d325:	retf   0x3a44
  40d328:	push   eax
  40d329:	mov    WORD PTR [esi+0x6fbbd2a8],fs
  40d32f:	lods   eax,DWORD PTR ds:[esi]
  40d330:	retf   0x1a81
  40d333:	push   0x37
  40d335:	adc    BYTE PTR [ebx],ah
  40d337:	lahf   
  40d338:	adc    cl,dl
  40d33a:	nop
  40d33b:	add    ah,BYTE PTR [eax*8-0xd7968c9]
  40d342:	shl    ah,1
  40d344:	pop    eax
  40d345:	sub    ah,BYTE PTR [ecx+0x69e8996f]
  40d34b:	adc    BYTE PTR [edi+0x3a],ch
  40d34e:	fwait
  40d34f:	out    dx,al
  40d350:	lock add DWORD PTR [ebx],ebx
  40d353:	pop    ss
  40d354:	jmp    0xb09fc538
  40d359:	in     al,0xea
  40d35b:	pop    esp
  40d35c:	clc    
  40d35d:	inc    edx
  40d35e:	sbb    edx,esp
  40d360:	sbb    edi,DWORD PTR [edx]
  40d362:	or     eax,0x228b5be9
  40d367:	push   ecx
  40d368:	mov    bh,0xcd
  40d36a:	inc    ebp
  40d36b:	ror    dl,cl
  40d36d:	mov    bh,0x3c
  40d36f:	dec    eax
  40d370:	sub    eax,0x7bfb5287
  40d375:	into   
  40d376:	lods   eax,DWORD PTR ds:[esi]
  40d377:	pop    es
  40d378:	mov    ebx,0xed514756
  40d37d:	adc    eax,0x1002c381
  40d382:	add    BYTE PTR [eax],al
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	out    dx,eax
  40d3d1:	pop    ebx
  40d3d2:	inc    esp
  40d3d3:	mov    eax,ds:0x8383d3b2
  40d3d8:	or     al,0x5e
  40d3da:	add    DWORD PTR [ebx+0xcbf29d2],0xfffffff3
  40d3e1:	into   
  40d3e2:	dec    esp
  40d3e3:	xchg   DWORD PTR [ebx-0x2194d51e],edx
  40d3e9:	sbb    eax,0x9cb6138e
  40d3ee:	mov    WORD PTR [ebx+edx*4+0x6f],?
  40d3f2:	test   eax,0x375d1953
  40d3f7:	sbb    edx,DWORD PTR [edi]
  40d3f9:	loopne 0x40d391
  40d3fb:	js     0x40d3ab
  40d3fd:	out    dx,al
  40d3fe:	hlt    
  40d3ff:	jmp    0xb9223eed
  40d404:	mov    DWORD PTR [esi+0x54],esi
  40d407:	dec    ecx
  40d408:	dec    ecx
  40d409:	jmp    0x40d408
  40d40b:	add    eax,DWORD PTR [edx+0x55dcfbac]
  40d411:	not    BYTE PTR [ecx]
  40d413:	or     ch,BYTE PTR [ebx]
  40d415:	cld    
  40d416:	jl     0x40d497
  40d418:	aam    0x81
  40d41a:	shr    ecx,0x8c
  40d41d:	xor    ebx,DWORD PTR [ebx]
  40d41f:	mov    al,0xe8
  40d421:	repz cmp eax,0xed88dd6b
  40d427:	push   ss
  40d428:	test   DWORD PTR [eax-0x7d5d8b05],eax
  40d42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d42f:	push   eax
  40d430:	retf   
  40d431:	fwait
  40d432:	ins    BYTE PTR es:[edi],dx
  40d433:	loopne 0x40d46d
  40d435:	pop    edi
  40d436:	cmc    
  40d437:	ins    BYTE PTR es:[edi],dx
  40d438:	sub    ch,BYTE PTR [eax+0xf]
  40d43b:	adc    esp,ebp
  40d43d:	in     eax,dx
  40d43e:	js     0x40d442
  40d440:	sbb    BYTE PTR [ecx],dh
  40d442:	add    al,0xbe
  40d444:	sub    DWORD PTR [edi+eiz*2],ebx
  40d447:	mov    BYTE PTR [eax+0x471bd02d],ah
  40d44d:	or     dh,BYTE PTR [eax]
  40d44f:	rol    DWORD PTR [eax+edi*1],1
  40d452:	mov    edx,0xd6c0dc6d
  40d457:	enter  0x1517,0x10
  40d45b:	cwde   
  40d45c:	into   
  40d45d:	add    DWORD PTR ds:0x614113c,edi
  40d463:	cmc    
  40d464:	dec    ecx
  40d465:	sub    ecx,ecx
  40d467:	hlt    
  40d468:	aas    
  40d469:	sbb    bh,BYTE PTR [edi]
  40d46b:	lods   al,BYTE PTR ds:[esi]
  40d46c:	int    0x2d
  40d46e:	clc    
  40d46f:	inc    edi
  40d470:	out    0x40,al
  40d472:	dec    edx
  40d473:	sbb    DWORD PTR [eax+ebp*2],0x7db1924d
  40d47a:	int3   
  40d47b:	sub    BYTE PTR [ebp+0x59843ac7],dl
  40d481:	or     BYTE PTR ds:0x5fdbbf64,dh
  40d487:	enter  0xfca1,0x1f
  40d48b:	loope  0x40d41f
  40d48d:	call   0xc44d92a
  40d492:	in     al,0x7c
  40d494:	xchg   ebp,eax
  40d495:	fsub   st,st(4)
  40d497:	and    cl,BYTE PTR [ecx+0x1347ffee]
  40d49d:	out    0x70,eax
  40d49f:	mov    cs,WORD PTR [ecx]
  40d4a1:	aam    0xf4
  40d4a3:	pop    ecx
  40d4a4:	scas   al,BYTE PTR es:[edi]
  40d4a5:	push   0xa96059
  40d4aa:	dec    edx
  40d4ab:	(bad)
  40d4ae:	mov    bl,0x95
  40d4b0:	inc    ecx
  40d4b1:	push   es
  40d4b2:	jae    0x40d4ca
  40d4b4:	and    eax,0xba4d725d
  40d4b9:	or     al,0xc0
  40d4bb:	int    0xef
  40d4bd:	ror    DWORD PTR [ebp+0x503c3533],0x8d
  40d4c4:	outs   dx,DWORD PTR ds:[esi]
  40d4c5:	sub    BYTE PTR [edx],cl
  40d4c7:	test   al,0xbd
  40d4c9:	mov    edi,0x78886650
  40d4ce:	push   0xffffffba
  40d4d0:	out    0x4a,al
  40d4d2:	cmp    bh,bl
  40d4d4:	add    dl,BYTE PTR [edx+0x6a2e0214]
  40d4da:	in     al,dx
  40d4db:	cmp    ebp,DWORD PTR [ecx]
  40d4dd:	jge    0x40d4bb
  40d4df:	mov    dl,0x26
  40d4e1:	fs data16 jg 0x40d4ed
  40d4e5:	jecxz  0x40d554
  40d4e7:	mov    eax,0x12f9f9f2
  40d4ec:	(bad)  
  40d4ed:	and    bh,cl
  40d4ef:	cwde   
  40d4f0:	nop
  40d4f1:	pop    edx
  40d4f2:	add    al,0xd
  40d4f4:	(bad)  
  40d4f5:	in     al,dx
  40d4f6:	out    dx,al
  40d4f7:	fdivr  QWORD PTR [ebp-0x29]
  40d4fa:	(bad)  
  40d4fb:	test   eax,0xc8810a1e
  40d500:	jnp    0x40d4d7
  40d502:	loop   0x40d485
  40d504:	and    bh,0x43
  40d507:	mov    cs,WORD PTR [ebx+eiz*1-0x27]
  40d50b:	(bad)  
  40d50c:	lds    ebp,FWORD PTR [edx+edi*4-0x49ca05b7]
  40d513:	mov    dl,0x94
  40d515:	dec    edi
  40d516:	and    DWORD PTR [eax+0xc],ecx
  40d519:	inc    eax
  40d51a:	cdq    
  40d51b:	stos   BYTE PTR es:[edi],al
  40d51c:	mov    eax,ds:0x67f4864e
  40d521:	iret   
  40d522:	js     0x40d51d
  40d524:	push   esi
  40d525:	push   edx
  40d526:	(bad)  
  40d527:	(bad)  
  40d528:	gs outs dx,DWORD PTR ds:[esi]
  40d52b:	mov    WORD PTR [esi-0x58],es
  40d52e:	and    bh,bh
  40d530:	and    al,0xe6
  40d532:	pop    ecx
  40d533:	jno    0x40d594
  40d535:	retf   
  40d536:	retf   0xcb73
  40d539:	les    ebp,FWORD PTR [edi-0x1048c2c3]
  40d53f:	outs   dx,BYTE PTR ds:[esi]
  40d540:	out    0x94,eax
  40d542:	pop    esp
  40d543:	lods   al,BYTE PTR ds:[esi]
  40d544:	ret    0x9a90
  40d547:	out    0x1f,al
  40d549:	mov    esp,0x7aed0b82
  40d54e:	repz mov ch,0xa5
  40d551:	mov    BYTE PTR [eax+0x18],cl
  40d554:	pop    es
  40d555:	dec    eax
  40d556:	scas   eax,DWORD PTR es:[edi]
  40d557:	and    ebp,DWORD PTR es:[eax-0x44]
  40d55b:	pop    ecx
  40d55c:	jp     0x40d4e2
  40d55e:	stos   DWORD PTR es:[edi],eax
  40d55f:	clc    
  40d560:	lods   al,BYTE PTR ds:[esi]
  40d561:	(bad)  
  40d563:	nop
  40d564:	inc    ebp
  40d565:	mov    WORD PTR ds:0x2a12e3e2,?
  40d56b:	jg     0x40d566
  40d56d:	adc    al,0x24
  40d56f:	xor    edx,esi
  40d571:	adc    ebp,DWORD PTR [edi-0xaa92f1b]
  40d577:	(bad)  
  40d578:	inc    ebx
  40d579:	push   eax
  40d57a:	lods   eax,DWORD PTR ds:[esi]
  40d57b:	xchg   BYTE PTR [edx+0x36],al
  40d57e:	mov    ds:0x8b29dffd,eax
  40d583:	sbb    ebx,esp
  40d585:	ds xchg ebx,eax
  40d587:	into   
  40d588:	sbb    eax,0xdf73a59e
  40d58d:	in     eax,dx
  40d58e:	mov    ah,0xcd
  40d590:	pop    edi
  40d591:	xor    eax,0x265e31db
  40d596:	sub    ah,bl
  40d598:	popa   
  40d599:	jge    0x40d5f8
  40d59b:	faddp  st(3),st
  40d59d:	push   ecx
  40d59e:	rol    BYTE PTR [esi+0x767412ce],0xe
  40d5a5:	dec    ebp
  40d5a6:	test   eax,0xf6d0c41a
  40d5ab:	in     eax,dx
  40d5ac:	adc    al,0x0
  40d5ae:	in     al,dx
  40d5af:	ss hlt 
  40d5b1:	sbb    BYTE PTR [edi],al
  40d5b3:	icebp  
  40d5b4:	idiv   BYTE PTR [esi]
  40d5b6:	aas    
  40d5b7:	and    al,0x61
  40d5b9:	mov    esp,0xad74cd34
  40d5be:	outs   dx,BYTE PTR ds:[esi]
  40d5bf:	jno    0x40d5d2
  40d5c1:	adc    DWORD PTR ds:0xd92317d2,ebx
  40d5c7:	fnstsw WORD PTR [edi-0x7f]
  40d5ca:	les    ecx,FWORD PTR [ecx]
  40d5cc:	mov    DWORD PTR [ebx-0x19],edx
  40d5cf:	sbb    eax,0x6a321b26
  40d5d4:	arpl   di,cx
  40d5d6:	fidiv  DWORD PTR [ecx+0x70]
  40d5d9:	cs push 0x24
  40d5dc:	call   DWORD PTR [edi-0x97d2a1b]
  40d5e2:	out    dx,eax
  40d5e3:	adc    al,0x32
  40d5e5:	push   esi
  40d5e6:	sub    edx,esi
  40d5e8:	loope  0x40d59f
  40d5ea:	loopne 0x40d600
  40d5ec:	add    BYTE PTR [ebp+0x6cb61c92],al
  40d5f2:	sub    eax,0x88bc0dce
  40d5f7:	add    edx,DWORD PTR [esi+0x3]
  40d5fa:	cmc    
  40d5fb:	jge    0x40d5b8
  40d5fd:	nop
  40d5fe:	pop    edi
  40d5ff:	loopne 0x40d64b
  40d601:	pop    edx
  40d602:	xor    dh,dl
  40d604:	jb     0x40d637
  40d606:	mov    al,0x30
  40d608:	mov    cl,0xef
  40d60a:	icebp  
  40d60b:	xor    al,0x4
  40d60d:	repnz icebp 
  40d60f:	retf   0xc349
  40d612:	shl    BYTE PTR [edi-0x23],1
  40d615:	loope  0x40d5a7
  40d617:	and    eax,0x88173829
  40d61c:	cmc    
  40d61d:	and    al,0xdb
  40d61f:	mov    eax,ds:0x969bb43e
  40d624:	inc    esi
  40d625:	xor    cl,BYTE PTR [eax-0x80]
  40d628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d629:	lock test BYTE PTR [esi-0x365d02d5],cl
  40d630:	fbld   TBYTE PTR [edx]
  40d632:	push   ebp
  40d633:	(bad)  
  40d634:	push   eax
  40d635:	or     bl,cl
  40d637:	dec    ecx
  40d638:	out    0xa7,al
  40d63a:	and    BYTE PTR [edi],dh
  40d63c:	and    edx,esi
  40d63e:	xor    eax,0xd6cbc856
  40d643:	inc    eax
  40d644:	sbb    bh,BYTE PTR [ebx-0x35fc3473]
  40d64a:	adc    eax,DWORD PTR [ebp+0x1d]
  40d64d:	and    al,0x5d
  40d64f:	cmc    
  40d650:	add    dh,ah
  40d652:	xlat   BYTE PTR ds:[ebx]
  40d653:	into   
  40d654:	xchg   edi,eax
  40d655:	mov    ds:0x8609922c,al
  40d65a:	jecxz  0x40d66d
  40d65c:	jge    0x40d62e
  40d65e:	mov    esi,0x65ad58eb
  40d663:	rcl    ah,1
  40d665:	jge    0x40d69a
  40d667:	push   eax
  40d668:	mov    al,ds:0xae3741b9
  40d66d:	hlt    
  40d66e:	call   DWORD PTR [ecx]
  40d670:	lds    ebx,FWORD PTR [edi+ebx*2-0x5ba5490]
  40d677:	mov    eax,0xb174c308
  40d67c:	jle    0x40d632
  40d67e:	les    ecx,FWORD PTR [esi+0x42]
  40d681:	push   ss
  40d682:	jnp    0x40d6ba
  40d684:	shr    dh,1
  40d686:	jnp    0x40d684
  40d688:	xor    eax,0xa7ad9141
  40d68d:	test   edi,esi
  40d68f:	shl    ecx,cl
  40d691:	sti    
  40d692:	retf   0x4c7a
  40d695:	inc    eax
  40d696:	xchg   ebx,eax
  40d697:	mov    dh,0x7f
  40d699:	aas    
  40d69a:	inc    ebp
  40d69b:	retf   0x1604
  40d69e:	ss or  al,0x0
  40d6a1:	add    ch,bh
  40d6a3:	and    al,0xc7
  40d6a5:	xchg   ecx,eax
  40d6a6:	mov    al,0x5
  40d6a8:	xor    BYTE PTR [eax+ecx*2],bh
  40d6ab:	test   BYTE PTR gs:[ecx-0x2c],0xde
  40d6b0:	and    ecx,edx
  40d6b2:	ins    DWORD PTR es:[edi],dx
  40d6b3:	push   0x67
  40d6b5:	ret    
  40d6b6:	clc    
  40d6b7:	jb     0x40d717
  40d6b9:	mov    fs,WORD PTR [edx]
  40d6bb:	adc    dl,BYTE PTR [ecx+0x14]
  40d6be:	(bad)  
  40d6bf:	push   esi
  40d6c0:	je     0x40d6ff
  40d6c2:	out    dx,eax
  40d6c3:	xor    bh,BYTE PTR [ecx+0x1f]
  40d6c6:	data16 sti 
  40d6c8:	icebp  
  40d6c9:	and    esi,DWORD PTR [eax]
  40d6cb:	into   
  40d6cc:	xchg   ebp,eax
  40d6cd:	fmul   QWORD PTR [ecx+eiz*8+0x4745f6ad]
  40d6d4:	sbb    dl,BYTE PTR [ebx-0x1b]
  40d6d7:	sbb    BYTE PTR [esi-0x6b],ah
  40d6da:	cmp    cl,BYTE PTR [edx]
  40d6dc:	test   eax,0x8f0c3119
  40d6e1:	cli    
  40d6e2:	loop   0x40d6c3
  40d6e4:	adc    edx,DWORD PTR [ebp+0x57ac754a]
  40d6ea:	out    0x36,eax
  40d6ec:	or     DWORD PTR [esi],esp
  40d6ee:	mov    bl,0x39
  40d6f0:	sub    al,ch
  40d6f2:	mov    edi,0x1d563922
  40d6f7:	test   al,0x1d
  40d6f9:	jo     0x40d6d3
  40d6fb:	inc    ebx
  40d6fc:	mov    edx,0x2c02dca1
  40d701:	mov    cl,0x4f
  40d703:	jae    0x40d6fe
  40d705:	add    al,0x8b
  40d707:	enter  0xaa1e,0x79
  40d70b:	cli    
  40d70c:	lahf   
  40d70d:	dec    edi
  40d70e:	pushf  
  40d70f:	pop    eax
  40d710:	out    dx,al
  40d711:	je     0x40d767
  40d713:	sub    eax,DWORD PTR [ebp+0x669b254b]
  40d719:	js     0x40d767
  40d71b:	into   
  40d71c:	into   
  40d71d:	hlt    
  40d71e:	add    ebx,DWORD PTR [esi+ebp*8-0x1a]
  40d722:	cld    
  40d723:	xchg   esp,eax
  40d724:	test   DWORD PTR [esi],edi
  40d726:	pop    ds
  40d727:	xor    eax,0x21899eb3
  40d72c:	test   al,0xf4
  40d72e:	das    
  40d72f:	out    dx,eax
  40d730:	fdivr  QWORD PTR [ebx-0x37be8452]
  40d736:	imul   esi,DWORD PTR [edx],0xffffff83
  40d739:	retf   
  40d73a:	jbe    0x40d6e6
  40d73c:	lods   eax,DWORD PTR ds:[esi]
  40d73d:	or     BYTE PTR [edx+0x5d595c50],al
  40d743:	xor    bl,BYTE PTR [edi]
  40d745:	xchg   edi,eax
  40d746:	fsubr  st,st(2)
  40d748:	pop    esp
  40d749:	out    0xe9,al
  40d74b:	cld    
  40d74c:	dec    ecx
  40d74d:	mov    ?,eax
  40d74f:	mov    eax,ds:0x97ce0098
  40d754:	mov    esi,0x58abfa27
  40d759:	in     al,0xf5
  40d75b:	xlat   BYTE PTR es:[ebx]
  40d75d:	mov    bl,0xb7
  40d75f:	gs inc edx
  40d761:	sbb    dl,dh
  40d763:	or     al,0xea
  40d765:	xchg   edi,eax
  40d766:	dec    ebx
  40d767:	and    edi,DWORD PTR [edx+0x65]
  40d76a:	push   ss
  40d76b:	jmp    0x40d7b3
  40d76d:	jns    0x40d7e7
  40d76f:	(bad)  
  40d770:	mov    ds:0x33e2bd8,eax
  40d775:	mov    eax,ds:0xdd2a1043
  40d77a:	stos   BYTE PTR es:[edi],al
  40d77b:	inc    ebp
  40d77c:	ss push cs
  40d77e:	icebp  
  40d77f:	popa   
  40d780:	sub    BYTE PTR [ebx],bh
  40d782:	adc    edx,ebx
  40d784:	push   ss
  40d785:	mov    bh,0x42
  40d787:	mov    es,esi
  40d789:	out    dx,eax
  40d78a:	dec    ecx
  40d78b:	pop    sp
  40d78d:	ret    
  40d78e:	ja     0x40d785
  40d790:	int3   
  40d791:	jno    0x40d7d8
  40d793:	jae    0x40d80d
  40d795:	fldenv [edx]
  40d797:	cwde   
  40d798:	mov    al,ds:0x46e91319
  40d79d:	bnd jmp 0x14e3fea2
  40d7a3:	hlt    
  40d7a4:	daa    
  40d7a5:	mov    ch,0xf
  40d7a7:	loop   0x40d7d9
  40d7a9:	add    BYTE PTR [ecx],ch
  40d7ab:	test   BYTE PTR [ebx],bh
  40d7ad:	add    eax,DWORD PTR [eax+0x2e]
  40d7b0:	(bad)  
  40d7b1:	clc    
  40d7b2:	dec    ebx
  40d7b3:	push   0xd06324c5
  40d7b8:	mov    ?,edi
  40d7ba:	jae    0x40d819
  40d7bc:	pop    ebx
  40d7bd:	and    eax,0xd0cb994
  40d7c2:	ins    DWORD PTR es:[edi],dx
  40d7c3:	push   esp
  40d7c4:	jp     0x40d7e1
  40d7c6:	ret    
  40d7c7:	ss out dx,eax
  40d7c9:	repz leave 
  40d7cb:	ja     0x40d782
  40d7cd:	mov    BYTE PTR [edi+ebp*4+0x1b],bh
  40d7d1:	ins    BYTE PTR es:[edi],dx
  40d7d2:	shl    esi,0x82
  40d7d5:	scas   al,BYTE PTR es:[edi]
  40d7d6:	and    al,0x18
  40d7d8:	xchg   bp,ax
  40d7da:	fwait
  40d7db:	jne    0x40d805
  40d7dd:	xchg   esi,eax
  40d7de:	inc    ebp
  40d7df:	std    
  40d7e0:	icebp  
  40d7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e2:	adc    DWORD PTR [esi+0x5c],0x82de9423
  40d7e9:	push   0xffffff8c
  40d7eb:	fbld   TBYTE PTR [ecx+0x20]
  40d7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ef:	mov    ch,0x2f
  40d7f1:	xor    eax,0xe794ccf3
  40d7f6:	cmp    cl,BYTE PTR [esi-0x78]
  40d7f9:	xchg   ebx,eax
  40d7fa:	and    esp,DWORD PTR [ebp+edi*2-0x4449e166]
  40d801:	and    DWORD PTR [eax-0x45808053],0x54
  40d808:	dec    ecx
  40d809:	and    BYTE PTR [edi],0x5b
  40d80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d80d:	fbld   TBYTE PTR [edx]
  40d80f:	dec    edi
  40d810:	jns    0x40d877
  40d812:	imul   DWORD PTR [esp+ebp*1]
  40d815:	push   edi
  40d816:	pop    es
  40d817:	sub    DWORD PTR ds:0xa42900e9,esp
  40d81d:	mov    esi,0x1806b947
  40d822:	mov    dl,0xe0
  40d824:	and    BYTE PTR [ecx+0x46],0x16
  40d828:	push   ds
  40d829:	cmc    
  40d82a:	popa   
  40d82b:	mov    ecx,0xf10feb32
  40d830:	lea    edi,[ebx+0x51]
  40d833:	iret   
  40d834:	fcom   DWORD PTR [ebp+0x4878055]
  40d83a:	xchg   ecx,eax
  40d83b:	cmp    ecx,esi
  40d83d:	mov    esi,0xd29fa76f
  40d842:	cld    
  40d843:	stc    
  40d844:	retf   
  40d845:	test   al,0xce
  40d847:	shr    BYTE PTR [edx-0x49e10758],cl
  40d84d:	pop    esi
  40d84e:	and    BYTE PTR [edx+0x65],dl
  40d851:	xor    edi,edx
  40d853:	cmp    eax,0xc6ae4ca3
  40d858:	xor    al,0x9
  40d85a:	std    
  40d85b:	or     eax,0xbe2da2f2
  40d860:	jnp    0x40d8b4
  40d862:	or     al,0x74
  40d864:	sub    dh,al
  40d866:	ja     0x40d822
  40d868:	add    al,BYTE PTR [esi]
  40d86a:	mov    edi,0xb43f2097
  40d86f:	sbb    BYTE PTR [edx-0x3bfecd6b],ch
  40d875:	mov    ebx,fs
  40d877:	sub    al,0x39
  40d879:	jns    0x40d890
  40d87b:	cli    
  40d87c:	push   edx
  40d87d:	lock xchg esp,eax
  40d87f:	pop    edx
  40d880:	nop
  40d881:	loope  0x40d806
  40d883:	xchg   edx,eax
  40d884:	pop    ds
  40d885:	sub    eax,esp
  40d887:	add    eax,0x95b609d8
  40d88c:	shr    BYTE PTR [esi],0xe6
  40d88f:	(bad)  
  40d890:	test   eax,0x89927a88
  40d895:	xchg   esi,eax
  40d896:	jecxz  0x40d8a7
  40d898:	les    edx,FWORD PTR [esi+0xe7f30a1]
  40d89e:	sbb    eax,0xd0f8ccdf
  40d8a3:	mov    ch,0x13
  40d8a5:	(bad)
  40d8a8:	mov    dl,BYTE PTR [ecx]
  40d8aa:	dec    ebx
  40d8ab:	out    0x91,al
  40d8ad:	out    dx,eax
  40d8ae:	sub    edx,0x5b4295cc
  40d8b4:	in     al,0x88
  40d8b6:	pop    es
  40d8b7:	xor    cl,0xb6
  40d8ba:	xchg   edx,eax
  40d8bb:	or     al,0xbf
  40d8bd:	xchg   esi,eax
  40d8be:	xchg   esi,eax
  40d8bf:	retf   0x67c0
  40d8c2:	cmp    edx,DWORD PTR [ebx]
  40d8c4:	pop    ss
  40d8c5:	and    eax,0xbf55ec6
  40d8ca:	ja     0x40d906
  40d8cc:	fwait
  40d8cd:	xchg   edi,eax
  40d8ce:	dec    ecx
  40d8cf:	ins    BYTE PTR es:[edi],dx
  40d8d0:	push   ecx
  40d8d1:	mov    dl,0x5c
  40d8d3:	mov    edi,DWORD PTR [esp+edi*8-0x9]
  40d8d7:	jg     0x40d886
  40d8d9:	xor    ch,BYTE PTR [edi]
  40d8db:	(bad)  
  40d8dc:	sub    esp,ebp
  40d8de:	pusha  
  40d8df:	mov    dl,0xfb
  40d8e1:	mov    WORD PTR [esp+ebx*2+0x3519bd2b],?
  40d8e8:	mov    DWORD PTR [eax+0x32],0xef72929c
  40d8ef:	sbb    ebx,ecx
  40d8f1:	add    cl,BYTE PTR [esi+0x2e]
  40d8f4:	add    bl,BYTE PTR [edi+eax*1-0x28]
  40d8f8:	loop   0x40d89b
  40d8fa:	cmp    ecx,edi
  40d8fc:	xor    BYTE PTR [edi+0x6fb2c03e],dl
  40d902:	xor    eax,0xae520392
  40d907:	ror    ebp,cl
  40d909:	in     eax,dx
  40d90a:	jo     0x40d91a
  40d90c:	inc    edi
  40d90d:	retf   0xbd7c
  40d910:	div    BYTE PTR [ecx]
  40d912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d913:	int    0xb1
  40d915:	daa    
  40d916:	not    BYTE PTR [ecx]
  40d918:	inc    ebx
  40d919:	push   esi
  40d91a:	std    
  40d91b:	ins    DWORD PTR es:[edi],dx
  40d91c:	mov    al,ds:0xcd4666d8
  40d921:	daa    
  40d922:	inc    edx
  40d923:	int    0xf4
  40d925:	mov    bl,ah
  40d927:	push   ecx
  40d928:	retf   
  40d929:	dec    ebx
  40d92a:	and    eax,0x1010879d
  40d92f:	fbld   TBYTE PTR [esi+0x54]
  40d932:	scas   eax,DWORD PTR es:[edi]
  40d933:	rcr    DWORD PTR [edi],1
  40d935:	adc    al,0xb5
  40d937:	add    DWORD PTR ds:0xc49b0a29,edi
  40d93d:	in     al,dx
  40d93e:	ror    DWORD PTR [edi],0x5c
  40d941:	into   
  40d942:	shl    ah,cl
  40d944:	lahf   
  40d945:	push   ebp
  40d946:	addr16 das 
  40d948:	(bad)  
  40d94b:	shl    BYTE PTR [eax-0x66c92db8],0x93
  40d952:	jae    0x40d902
  40d954:	xchg   ebx,eax
  40d955:	call   0x509d:0x4af64edb
  40d95c:	std    
  40d95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d95e:	sbb    eax,0x9de2a8ea
  40d963:	mov    ecx,0x165610d7
  40d968:	inc    eax
  40d969:	and    al,BYTE PTR [edi]
  40d96b:	mov    WORD PTR [esi],es
  40d96d:	scas   eax,DWORD PTR es:[edi]
  40d96e:	jecxz  0x40d992
  40d970:	repnz repnz imul edx,DWORD PTR [esp+esi*8+0x38a2018c],0xcabb26fb
  40d97d:	pusha  
  40d97e:	add    bl,BYTE PTR [esi]
  40d980:	shl    esp,cl
  40d982:	xlat   BYTE PTR ds:[ebx]
  40d983:	imul   ecx,DWORD PTR [ebp+ebx*8+0x24b98f78],0xfffffffb
  40d98b:	iret   
  40d98c:	jb     0x40d917
  40d98e:	jno    0x40d937
  40d990:	(bad)  
  40d991:	xchg   edi,eax
  40d992:	test   al,0x4
  40d994:	fsub   st,st(6)
  40d996:	cmp    dl,BYTE PTR [edi]
  40d998:	dec    edi
  40d999:	sbb    DWORD PTR es:[ecx],esi
  40d99c:	and    BYTE PTR [edx+0x44],cl
  40d99f:	inc    esp
  40d9a0:	inc    esp
  40d9a1:	nop
  40d9a2:	repz jmp 0x297b:0xdfa440f7
  40d9aa:	adc    eax,0x3a2128fc
  40d9af:	add    edi,DWORD PTR [eax+esi*4-0x34]
  40d9b3:	cmp    esp,DWORD PTR [ebx+0x4da6e780]
  40d9b9:	ja     0x40d9ce
  40d9bb:	(bad)  [eax+ebp*1+0x55]
  40d9bf:	repnz dec ecx
  40d9c1:	mov    ds:0xf9c9ae4e,al
  40d9c6:	ss cld 
  40d9c8:	inc    ebp
  40d9c9:	and    eax,0xe4e1c123
  40d9ce:	xor    bl,BYTE PTR [edi]
  40d9d0:	push   eax
  40d9d1:	jns    0x40d983
  40d9d3:	int    0xe
  40d9d5:	xor    dl,BYTE PTR [eax-0x58]
  40d9d8:	dec    ebx
  40d9d9:	dec    ebp
  40d9da:	lods   eax,DWORD PTR ds:[esi]
  40d9db:	xchg   esi,eax
  40d9dc:	pop    ebx
  40d9dd:	mov    bl,0xd7
  40d9df:	mov    bh,BYTE PTR [ebp+0x7d3b3aaf]
  40d9e5:	dec    edi
  40d9e6:	test   al,0x7a
  40d9e8:	mov    ebx,0xee7e79d0
  40d9ed:	xchg   esp,eax
  40d9ee:	add    dl,BYTE PTR [ebp-0x6198f2c0]
  40d9f4:	push   edx
  40d9f5:	inc    ebx
  40d9f6:	xchg   DWORD PTR [edi+0x68919924],edi
  40d9fc:	aaa    
  40d9fd:	loopne 0x40da4f
  40d9ff:	test   eax,0x7c3ada91
  40da04:	and    al,0x99
  40da06:	sub    cl,BYTE PTR [esp+eax*1]
  40da09:	aaa    
  40da0a:	addr16 mov ds:0x90d7,eax
  40da0e:	push   edi
  40da0f:	sub    bh,al
  40da11:	rol    DWORD PTR [ebx],cl
  40da13:	cmp    BYTE PTR [edi+0x444fc93b],dh
  40da19:	xchg   edx,eax
  40da1a:	dec    edx
  40da1b:	call   0xc665:0xa26437eb
  40da22:	(bad)  
  40da23:	push   ebx
  40da24:	dec    eax
  40da25:	(bad)  
  40da26:	(bad)  
  40da27:	loopne 0x40da5c
  40da29:	jns    0x40da51
  40da2b:	stc    
  40da2c:	pop    edi
  40da2d:	xchg   ecx,eax
  40da2e:	adc    eax,0x49db1cc7
  40da33:	cs dec esp
  40da35:	xchg   esi,eax
  40da36:	(bad)  
  40da37:	fidivr WORD PTR [ecx-0x19]
  40da3a:	fld    TBYTE PTR [eax+0x77]
  40da3d:	mov    dl,0x8e
  40da3f:	addr16 mov al,0x53
  40da42:	aad    0x61
  40da44:	sub    al,dh
  40da46:	int3   
  40da47:	lahf   
  40da48:	js     0x40daab
  40da4a:	add    bl,BYTE PTR [edi]
  40da4c:	mov    ah,0x64
  40da4e:	icebp  
  40da4f:	into   
  40da50:	xor    esi,edx
  40da52:	xchg   DWORD PTR [ecx-0x5c54e69a],ebp
  40da58:	sbb    BYTE PTR [edi+0x43f63464],dl
  40da5e:	ins    DWORD PTR es:[edi],dx
  40da5f:	and    eax,0x71445c43
  40da64:	lds    esi,FWORD PTR [eax+0x2d74ea07]
  40da6a:	aas    
  40da6b:	cli    
  40da6c:	xor    edi,ecx
  40da6e:	pop    esp
  40da6f:	in     eax,0x59
  40da71:	add    dl,BYTE PTR [eax]
  40da73:	test   eax,0x9d021fe2
  40da78:	ja     0x40da87
  40da7a:	and    al,0x83
  40da7c:	(bad)  
  40da7d:	ja     0x40dae1
  40da7f:	in     al,0xa7
  40da81:	dec    DWORD PTR [eax+0xf8dda18]
  40da87:	(bad)  
  40da88:	out    0x9a,eax
  40da8a:	call   0x1b2903dc
  40da8f:	pop    esp
  40da90:	push   ss
  40da91:	enter  0x6411,0x92
  40da95:	gs jg  0x40da2a
  40da98:	imul   edi,DWORD PTR [ebx],0x886e9a5f
  40da9e:	mov    ecx,0x925ee87a
  40daa3:	xor    eax,0xda450341
  40daa8:	add    eax,0x1aba93e3
  40daad:	inc    edx
  40daae:	ror    DWORD PTR [ebx],1
  40dab0:	sub    ebx,edi
  40dab2:	push   0x52
  40dab4:	retf   0x97bc
  40dab7:	or     BYTE PTR [esi],bh
  40dab9:	sar    BYTE PTR [edx+0x60],0x29
  40dabd:	lods   al,BYTE PTR ds:[esi]
  40dabe:	fs push ebp
  40dac0:	sub    DWORD PTR [ecx],ebx
  40dac2:	add    eax,DWORD PTR [edx+0x38]
  40dac5:	jae    0x40da93
  40dac7:	jmp    0x40da96
  40dac9:	mov    fs,WORD PTR [eax-0x5eca047]
  40dacf:	xor    ah,BYTE PTR [ebx+0x2d]
  40dad2:	sub    DWORD PTR [edi+0x1e],edx
  40dad5:	sub    eax,0xeb53c46f
  40dada:	rcl    bl,0xf2
  40dadd:	call   0xb5eaed7e
  40dae2:	xlat   BYTE PTR ds:[ebx]
  40dae3:	repz or dh,BYTE PTR ds:0x3dd4a27a
  40daea:	cmp    edx,edi
  40daec:	pop    ecx
  40daed:	stc    
  40daee:	push   0x7f427ae7
  40daf3:	daa    
  40daf4:	adc    al,0x2d
  40daf6:	add    ch,BYTE PTR [edi-0x5d]
  40daf9:	lock das 
  40dafb:	fistp  QWORD PTR [edi+0x59]
  40dafe:	popa   
  40daff:	cmp    ch,0x4c
  40db02:	adc    al,BYTE PTR [edi+0x2a578886]
  40db08:	dec    edi
  40db09:	scas   al,BYTE PTR es:[edi]
  40db0a:	mov    ah,0x77
  40db0c:	iret   
  40db0d:	call   0x726b9b79
  40db12:	jbe    0x40db0d
  40db14:	(bad)  
  40db15:	out    0xce,eax
  40db17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db18:	inc    esi
  40db19:	pop    ebx
  40db1a:	pop    edi
  40db1b:	in     eax,0x41
  40db1d:	xor    bh,BYTE PTR [edi]
  40db1f:	call   0x7ced:0xff73f9e1
  40db26:	dec    ebp
  40db27:	cmp    ebx,DWORD PTR [ebp-0x23865960]
  40db2d:	(bad)  
  40db2e:	ja     0x40db03
  40db30:	add    eax,0xe4b502eb
  40db35:	xchg   esp,eax
  40db36:	sbb    DWORD PTR [edx+edx*1+0x677bbfa7],esi
  40db3d:	shr    BYTE PTR [eax+0x7b],cl
  40db40:	scas   eax,DWORD PTR es:[edi]
  40db41:	scas   al,BYTE PTR es:[edi]
  40db42:	xchg   BYTE PTR ds:0xad43f67f,bl
  40db48:	test   BYTE PTR [ecx-0x5982d765],cl
  40db4e:	sahf   
  40db4f:	inc    ebp
  40db50:	add    eax,0xd274ea13
  40db55:	popf   
  40db56:	jl     0x40db27
  40db58:	inc    ebx
  40db59:	mov    bl,0xdb
  40db5b:	dec    ebx
  40db5c:	imul   esp,DWORD PTR [edx+0x195b404f],0x8307084c
  40db66:	jo     0x40db62
  40db68:	pusha  
  40db69:	pop    eax
  40db6a:	sbb    esi,esi
  40db6c:	fs loope 0x40dbd6
  40db6f:	gs daa 
  40db71:	xchg   ebx,eax
  40db72:	or     ch,BYTE PTR ds:[ebx+0x56a46ce4]
  40db79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db7a:	out    0xbe,al
  40db7c:	and    BYTE PTR [ebx],0x10
  40db7f:	stos   DWORD PTR es:[edi],eax
  40db80:	cs push es
  40db82:	sbb    dl,dh
  40db84:	aaa    
  40db85:	call   FWORD PTR [ebp+ecx*2+0xfd370ca]
  40db8c:	shl    bl,1
  40db8e:	fidivr WORD PTR [edx+edi*4]
  40db91:	and    esp,DWORD PTR [esp+eax*8]
  40db94:	inc    ebx
  40db95:	sbb    bh,BYTE PTR [esi-0x3e56deea]
  40db9b:	test   BYTE PTR [ebp+0xf445afe],dh
  40dba1:	jno    0x40dbef
  40dba3:	popf   
  40dba4:	aam    0xa1
  40dba6:	(bad)  
  40dba7:	lods   al,BYTE PTR ds:[esi]
  40dba8:	pusha  
  40dba9:	aad    0x99
  40dbab:	push   0xad0c7e25
  40dbb0:	mov    eax,gs:0xf3a18784
  40dbb6:	pop    esi
  40dbb7:	jnp    0x40dc1a
  40dbb9:	iret   
  40dbba:	pop    esi
  40dbbb:	or     al,0x78
  40dbbd:	adc    esp,ecx
  40dbbf:	inc    ebx
  40dbc0:	jle    0x40db93
  40dbc2:	mov    dh,0x39
  40dbc4:	push   cs
  40dbc5:	iret   
  40dbc6:	std    
  40dbc7:	add    BYTE PTR [edx-0x30],bl
  40dbca:	dec    ebx
  40dbcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbcc:	push   esi
  40dbcd:	adc    BYTE PTR [ebp+0x46],dl
  40dbd0:	mov    ?,WORD PTR [ebx-0x9]
  40dbd3:	add    bh,BYTE PTR es:[eax]
  40dbd6:	add    eax,0x805af5ef
  40dbdb:	arpl   WORD PTR [esi+0x6022bdd1],di
  40dbe1:	lods   al,BYTE PTR ds:[esi]
  40dbe2:	imul   eax
  40dbe4:	mov    esp,0x2d0ffb0e
  40dbe9:	jmp    0xc0ff:0xf439168
  40dbf0:	or     BYTE PTR [edx-0x4ac80b8d],0xdf
  40dbf7:	push   edx
  40dbf8:	adc    eax,0x59be6833
  40dbfe:	je     0x40dbf4
  40dc00:	enter  0x17bd,0x2
  40dc04:	mov    DWORD PTR [ecx-0x22ce3312],esi
  40dc0a:	sbb    DWORD PTR [edi-0x5cfc0441],eax
  40dc10:	fistp  DWORD PTR [esi-0x5ca4ab89]
  40dc16:	(bad)  
  40dc17:	test   DWORD PTR cs:[ecx+0x5d],0x29119912
  40dc1f:	and    eax,edi
  40dc21:	push   0xffffffd4
  40dc23:	sbb    al,0x2c
  40dc25:	sbb    eax,0x84b08af5
  40dc2a:	xor    ebx,DWORD PTR [ebx]
  40dc2c:	retf   
  40dc2d:	push   esp
  40dc2e:	pop    esi
  40dc2f:	(bad)  
  40dc31:	pop    ss
  40dc32:	push   edx
  40dc33:	dec    ebp
  40dc34:	inc    ecx
  40dc35:	push   0x8a9d418e
  40dc3a:	sbb    BYTE PTR [edi+edx*1-0x56cb25f4],bh
  40dc41:	mov    esi,0x3d15a7c1
  40dc46:	add    eax,0x5a92d5bc
  40dc4b:	enter  0x4932,0x46
  40dc4f:	in     eax,0x1b
  40dc51:	jae    0x40dc49
  40dc53:	frstor [esi]
  40dc55:	in     eax,dx
  40dc56:	and    al,0xa7
  40dc58:	mov    cl,0x18
  40dc5a:	sbb    BYTE PTR [eax],ch
  40dc5c:	popa   
  40dc5d:	in     eax,dx
  40dc5e:	(bad)  
  40dc5f:	test   eax,0xce3a7816
  40dc64:	adc    eax,0x69e0c2e4
  40dc69:	aam    0xc7
  40dc6b:	clc    
  40dc6c:	jl     0x40dbfe
  40dc6e:	dec    edx
  40dc6f:	push   ebp
  40dc70:	fwait
  40dc71:	push   0x5e0c99b1
  40dc76:	ret    0x9b62
  40dc79:	xchg   ecx,eax
  40dc7a:	push   cs
  40dc7b:	gs sbb eax,0xe0c54e19
  40dc81:	xor    bh,BYTE PTR [edi-0x5]
  40dc84:	mov    ebx,0xc702456d
  40dc89:	aas    
  40dc8a:	(bad)  
  40dc8b:	jo     0x40dcf7
  40dc8d:	or     DWORD PTR [ebp-0x6a01c9b0],ebx
  40dc93:	mov    bh,0x27
  40dc95:	pop    ss
  40dc96:	ds inc esp
  40dc98:	int3   
  40dc99:	and    DWORD PTR [edi],ecx
  40dc9b:	xchg   edx,eax
  40dc9c:	pop    edi
  40dc9d:	out    dx,eax
  40dc9e:	sub    BYTE PTR ds:0xe51c8fe7,0x36
  40dca5:	mov    ch,0xc
  40dca7:	dec    esp
  40dca8:	fsincos 
  40dcaa:	mov    esp,0x3f1c9db1
  40dcaf:	cmp    dh,BYTE PTR [esi+0x40]
  40dcb2:	(bad)  
  40dcb3:	jmp    0x72d4:0xeba1a330
  40dcba:	(bad)  
  40dcbc:	bound  edi,QWORD PTR [eax+ecx*1-0x1]
  40dcc0:	(bad)  
  40dcc3:	fistp  QWORD PTR [ecx+0xc]
  40dcc6:	mov    ecx,0xc5a8d3d6
  40dccb:	adc    DWORD PTR [edi+0x1b],ebp
  40dcce:	xchg   esi,eax
  40dccf:	fmul   DWORD PTR [edi]
  40dcd1:	pop    edx
  40dcd2:	hlt    
  40dcd3:	mov    ds:0x50a8d140,al
  40dcd8:	xchg   ecx,eax
  40dcd9:	sbb    esi,esi
  40dcdb:	jb     0x40dc92
  40dcdd:	(bad)  
  40dcde:	adc    ch,BYTE PTR fs:[edx+0x15]
  40dce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce3:	ret    
  40dce4:	xchg   ecx,eax
  40dce5:	mov    BYTE PTR [eax],bh
  40dce7:	enter  0xcd64,0xec
  40dceb:	jnp    0x40dcc0
  40dced:	lahf   
  40dcee:	sub    edi,DWORD PTR [ebx-0x30b07aae]
  40dcf4:	aaa    
  40dcf5:	push   ebp
  40dcf6:	in     al,0x32
  40dcf8:	and    esp,DWORD PTR ds:0x11246fe8
  40dcfe:	jmp    0x40dd52
  40dd00:	adc    edx,DWORD PTR [ecx+0x2d02f3ef]
  40dd06:	inc    ebp
  40dd07:	inc    ebp
  40dd08:	mov    bh,0xf0
  40dd0a:	sti    
  40dd0b:	aaa    
  40dd0c:	pop    edi
  40dd0d:	sbb    BYTE PTR [eax-0x68349d75],0xd
  40dd14:	enter  0xb5f7,0xd5
  40dd18:	push   cs
  40dd19:	(bad)
  40dd1c:	sub    eax,DWORD PTR ds:0x2c067778
  40dd22:	sbb    al,0x78
  40dd24:	jmp    0x582aa88a
  40dd29:	rsqrtps xmm3,xmm5
  40dd2c:	(bad)  
  40dd2e:	in     eax,dx
  40dd2f:	shr    DWORD PTR [esi-0x73],0x41
  40dd33:	leave  
  40dd34:	retf   
  40dd35:	ins    DWORD PTR es:[edi],dx
  40dd36:	xchg   ebp,eax
  40dd37:	test   BYTE PTR [eax+esi*4+0x31a96c04],ch
  40dd3e:	out    dx,eax
  40dd3f:	pop    ebx
  40dd40:	je     0x40dda0
  40dd42:	ret    
  40dd43:	jae    0x40dd7f
  40dd45:	stc    
  40dd46:	jne    0x40dd26
  40dd48:	dec    ebp
  40dd49:	mov    edx,DWORD PTR [ebp+0x1e368db0]
  40dd4f:	xor    DWORD PTR [eax+0x627dd3b],esi
  40dd55:	ret    0x96c0
  40dd58:	ret    0x8138
  40dd5b:	mov    ebp,DWORD PTR [edi+0x2fbbefbb]
  40dd61:	pusha  
  40dd62:	repnz adc DWORD PTR [esi+0x434d3b9c],ecx
  40dd69:	pop    ebp
  40dd6a:	imul   ebx,eax,0x7273b237
  40dd70:	(bad)  
  40dd71:	push   ebx
  40dd72:	add    ah,ch
  40dd74:	dec    ebp
  40dd75:	xor    BYTE PTR [esi-0x75],dl
  40dd78:	fwait
  40dd79:	pop    ss
  40dd7a:	cmpxchg DWORD PTR [edi-0x73],eax
  40dd7e:	push   cs
  40dd7f:	ja     0x40dd3c
  40dd81:	adc    eax,0xa3ed1ac2
  40dd86:	xor    al,BYTE PTR [esi+edx*2-0x65ac48c1]
  40dd8d:	sub    BYTE PTR [esi+0x77d7167a],dl
  40dd93:	and    ebp,ebx
  40dd95:	adc    DWORD PTR [edi+0x40],ebp
  40dd98:	fisttp WORD PTR [eax]
  40dd9a:	nop
  40dd9b:	(bad)  
  40dd9c:	mov    eax,0x66d2754
  40dda1:	adc    BYTE PTR [eax],ch
  40dda3:	inc    edx
  40dda4:	mov    ebp,0x7a36c29c
  40dda9:	repz mov eax,ds:0x8fabfe44
  40ddaf:	xchg   esp,eax
  40ddb0:	dec    esi
  40ddb1:	into   
  40ddb2:	or     al,0x38
  40ddb4:	or     al,0xfc
  40ddb6:	jl     0x40ddc6
  40ddb8:	push   es
  40ddb9:	push   edi
  40ddba:	popf   
  40ddbb:	inc    edx
  40ddbc:	mov    esi,cr1
  40ddbf:	rcl    DWORD PTR [ecx+0x7c6528b0],cl
  40ddc5:	xlat   BYTE PTR fs:[ebx]
  40ddc7:	shl    edx,1
  40ddc9:	xor    cl,BYTE PTR [esi+0x4504fb4a]
  40ddcf:	cld    
  40ddd0:	test   al,0xae
  40ddd2:	sub    eax,0xcb4bc106
  40ddd7:	jge    0x40dd99
  40ddd9:	stos   BYTE PTR es:[edi],al
  40ddda:	push   ebp
  40dddb:	aad    0xf9
  40dddd:	cmp    al,0xc
  40dddf:	div    eax
  40dde1:	xor    ebx,ecx
  40dde3:	int3   
  40dde4:	jo     0x40de4b
  40dde6:	aam    0xdc
  40dde8:	repz fsub DWORD PTR [esi+0x2d032319]
  40ddef:	jle    0x40ddee
  40ddf1:	mov    edx,0x4986cb0b
  40ddf6:	gs in  eax,0x9b
  40ddf9:	or     BYTE PTR gs:[edx],0xfd
  40ddfd:	adc    ebx,DWORD PTR [ebp-0x4c5e98f7]
  40de03:	in     eax,dx
  40de04:	mov    ebp,0xc2b4e7a7
  40de09:	popa   
  40de0a:	mov    esp,DWORD PTR [edx+edx*1+0x8]
  40de0e:	in     eax,dx
  40de0f:	jne    0x40de75
  40de11:	inc    ebx
  40de12:	xchg   ecx,eax
  40de13:	mov    al,ds:0x9591b53f
  40de18:	or     DWORD PTR [esi],edx
  40de1a:	pusha  
  40de1b:	inc    ecx
  40de1c:	push   ds
  40de1d:	and    eax,0xd258ed35
  40de22:	xor    al,0xe3
  40de24:	test   DWORD PTR [ecx+0x4e],0x478d9160
  40de2b:	int3   
  40de2c:	arpl   WORD PTR [edx],si
  40de2e:	stos   DWORD PTR es:[edi],eax
  40de2f:	fidiv  DWORD PTR [esi]
  40de31:	inc    esi
  40de32:	int3   
  40de33:	out    dx,al
  40de34:	les    esi,FWORD PTR [esi-0xa2aebd1]
  40de3a:	mov    esi,0x5bf8ee88
  40de3f:	pushf  
  40de40:	mov    bl,0x91
  40de42:	lahf   
  40de43:	cmc    
  40de44:	pop    ebx
  40de45:	into   
  40de46:	cdq    
  40de47:	test   eax,0xcfd2e3e6
  40de4c:	gs retfw 
  40de4f:	mov    BYTE PTR [ebx],ch
  40de51:	adc    DWORD PTR [esi],0x3d111d83
  40de57:	out    0x8b,eax
  40de59:	sbb    dh,BYTE PTR [ebx]
  40de5b:	mov    DWORD PTR [esi+0x5b],0x34841f1b
  40de62:	xchg   esi,eax
  40de63:	test   DWORD PTR [ebp-0x7e26c519],esp
  40de69:	je     0x40de48
  40de6b:	jmp    FWORD PTR [ebp-0xb]
  40de6e:	out    dx,eax
  40de6f:	retf   
  40de70:	add    bl,dl
  40de72:	xchg   edi,eax
  40de73:	cmc    
  40de74:	jle    0x40de22
  40de76:	jb     0x40de21
  40de78:	add    BYTE PTR [esi+0xf],bl
  40de7b:	cmp    esp,DWORD PTR [edx-0x52]
  40de7e:	sbb    al,BYTE PTR [edi+0x3ff03d59]
  40de84:	loope  0x40de43
  40de86:	add    dh,bl
  40de88:	test   DWORD PTR ds:0x86df7bd5,edx
  40de8e:	sub    eax,0x5dace917
  40de93:	outs   dx,DWORD PTR ds:[esi]
  40de94:	fsub   QWORD PTR [edx]
  40de96:	add    al,0x55
  40de98:	sbb    ah,ah
  40de9a:	jnp    0x40de87
  40de9c:	inc    esp
  40de9d:	mov    DWORD PTR [ebp-0x1ce9484e],0xa8cdcb30
  40dea7:	sbb    eax,0x47533144
  40deac:	mov    ch,0x99
  40deae:	cld    
  40deaf:	sub    BYTE PTR [ecx-0x2a65c95c],dh
  40deb5:	xor    DWORD PTR [esi+0x4d],edi
  40deb8:	inc    edi
  40deb9:	mov    cl,0xa4
  40debb:	ror    DWORD PTR [edi+0x49b74b80],1
  40dec1:	stc    
  40dec2:	mov    eax,ds:0x1120c99e
  40dec7:	imul   esi,DWORD PTR [ecx-0x72fe2c08],0x9a4e7d31
  40ded1:	ret    0xdacd
  40ded4:	lods   al,BYTE PTR ds:[esi]
  40ded5:	mov    DWORD PTR [edx],ebp
  40ded7:	jmp    0x15fd:0x4db4f36
  40dede:	push   cs
  40dedf:	mov    ah,0x20
  40dee1:	jnp    0x40deda
  40dee3:	(bad)
  40dee7:	xor    BYTE PTR [ecx],0xc0
  40deea:	test   eax,0xde743f67
  40deef:	pushf  
  40def0:	push   ss
  40def1:	or     edi,eax
  40def3:	adc    bl,BYTE PTR [ecx-0x7a]
  40def6:	leave  
  40def7:	pop    es
  40def8:	mov    esp,0xa3871a5a
  40defe:	test   ecx,0xb007af7d
  40df04:	dec    edx
  40df05:	add    al,0xd4
  40df07:	cmp    bl,cl
  40df09:	enter  0xbb63,0x2a
  40df0d:	inc    ebx
  40df0e:	ss in  al,0x2d
  40df11:	pop    edx
  40df12:	jecxz  0x40df46
  40df14:	dec    ecx
  40df15:	mov    ebx,0xc561d5c
  40df1a:	test   eax,0x29678b0b
  40df1f:	int    0x23
  40df21:	inc    BYTE PTR [edx]
  40df23:	add    ah,BYTE PTR [edx]
  40df25:	dec    edi
  40df26:	bound  esi,QWORD PTR [eax+ebx*4]
  40df29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df2a:	mov    ch,0x41
  40df2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df2d:	loopne 0x40df7e
  40df2f:	(bad)  
  40df30:	jb     0x40dee9
  40df32:	not    ebp
  40df34:	xchg   ebp,eax
  40df35:	adc    al,0x1a
  40df37:	cld    
  40df38:	stos   DWORD PTR es:[edi],eax
  40df39:	fdivp  st(5),st
  40df3b:	stc    
  40df3c:	mov    ds:0x43bcf8a3,al
  40df41:	mov    DWORD PTR [ebp+0x52],ecx
  40df44:	sbb    al,bl
  40df46:	xchg   BYTE PTR fs:[esi-0x468674f5],bl
  40df4d:	sub    DWORD PTR [edi-0x7895d803],0xd51531aa
  40df57:	xchg   esp,eax
  40df58:	sub    DWORD PTR [edi],ebx
  40df5a:	add    DWORD PTR [ebx],0x75
  40df5d:	or     al,0x96
  40df5f:	std    
  40df60:	mov    ds:0x59e79f44,al
  40df65:	je     0x40dfdb
  40df67:	sub    ch,cl
  40df69:	xchg   BYTE PTR [edx-0x50],cl
  40df6c:	adc    BYTE PTR ds:[ecx-0x60454c3a],dl
  40df73:	aaa    
  40df74:	pop    ss
  40df75:	ficomp WORD PTR [ebx-0x6]
  40df78:	stos   DWORD PTR es:[edi],eax
  40df79:	add    edi,DWORD PTR [ebx]
  40df7b:	inc    esi
  40df7c:	into   
  40df7d:	in     al,dx
  40df7e:	push   ds
  40df7f:	pop    ds
  40df80:	pop    es
  40df81:	pop    ebp
  40df82:	inc    ecx
  40df83:	hlt    
  40df84:	dec    eax
  40df85:	loopne 0x40dfbf
  40df87:	(bad)  
  40df88:	aam    0xe8
  40df8a:	adc    al,0x40
  40df8c:	je     0x40df5f
  40df8e:	xchg   edi,esi
  40df90:	mov    dl,0x7d
  40df92:	cmp    DWORD PTR [eax-0x694b983d],edi
  40df98:	pop    eax
  40df99:	(bad)  
  40df9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df9c:	mov    WORD PTR [eax-0x6b32431a],gs
  40dfa2:	popa   
  40dfa3:	sub    dh,ch
  40dfa5:	in     eax,dx
  40dfa6:	xchg   edx,eax
  40dfa7:	imul   edi,DWORD PTR [ecx+0x38],0xffffff91
  40dfab:	mov    eax,ds:0x80a65575
  40dfb0:	xor    BYTE PTR [ecx+0x77],al
  40dfb3:	jb     0x40dfa3
  40dfb5:	jecxz  0x40df58
  40dfb7:	cmp    DWORD PTR [ebx],eax
  40dfb9:	push   edx
  40dfba:	std    
  40dfbb:	or     eax,0x67622d71
  40dfc0:	clc    
  40dfc1:	in     eax,dx
  40dfc2:	adc    al,0x47
  40dfc4:	movq   mm6,mm4
  40dfc7:	loope  0x40e03c
  40dfc9:	mov    esp,0x53c171df
  40dfce:	nop
  40dfcf:	xlat   BYTE PTR ds:[ebx]
  40dfd0:	test   DWORD PTR [edx+eiz*1-0x36],0x3dc63e9f
  40dfd8:	mov    bl,0x3e
  40dfda:	ja     0x40dfc5
  40dfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfdd:	scas   eax,DWORD PTR es:[edi]
  40dfde:	cmp    dh,BYTE PTR [edx]
  40dfe0:	ret    
  40dfe1:	gs xchg ecx,eax
  40dfe3:	push   0x54
  40dfe5:	push   ebp
  40dfe6:	jle    0x40df97
  40dfe8:	push   eax
  40dfe9:	and    eax,0x7e19e
  40dfee:	test   al,0x5a
  40dff0:	mov    ecx,0x21a7678
  40dff5:	repz in al,dx
  40dff7:	mov    dh,0x34
  40dff9:	adc    dh,al
  40dffb:	pop    es
  40dffc:	cmp    esi,DWORD PTR [edi-0x3cb699b8]
  40e002:	ins    DWORD PTR es:[edi],dx
  40e003:	xchg   ebp,eax
  40e004:	mov    ecx,0x3abbde8c
  40e009:	rol    BYTE PTR [ebp-0x1d3865dc],0x94
  40e010:	fsubr  QWORD PTR [edx+eiz*2]
  40e013:	cmp    al,BYTE PTR [edx+ebx*8+0x59]
  40e017:	xchg   ecx,eax
  40e018:	fmul   DWORD PTR [eax-0xe686e26]
  40e01e:	ficomp DWORD PTR [edx+ebx*8+0x74]
  40e022:	mov    esi,0xec6a5980
  40e027:	pushf  
  40e028:	dec    edx
  40e029:	push   edx
  40e02a:	sbb    DWORD PTR ds:0x10132f29,esp
  40e030:	pop    ecx
  40e031:	sub    DWORD PTR [ecx+eiz*4-0x1e],0xfffffff1
  40e036:	cmp    DWORD PTR [edx-0x68],edx
  40e039:	pop    ds
  40e03a:	cmp    al,0x2a
  40e03d:	jl     0x40e079
  40e03f:	jbe    0x40dfc4
  40e041:	add    DWORD PTR [esi-0x59],esp
  40e044:	mov    ch,BYTE PTR [ecx-0x1b]
  40e047:	test   BYTE PTR [esi+edx*2],0xe7
  40e04b:	sub    ebx,DWORD PTR ss:[edx]
  40e04e:	loope  0x40dfdb
  40e050:	mov    esp,0x1ed00f52
  40e055:	pop    esi
  40e056:	sbb    DWORD PTR ds:0x4eeabf95,ebx
  40e05c:	mov    DWORD PTR [esi],esi
  40e05e:	mov    ecx,0xb02cc5f0
  40e063:	adc    BYTE PTR [eax],0xa8
  40e066:	mov    dl,0x75
  40e068:	loope  0x40e0a9
  40e06a:	dec    eax
  40e06b:	icebp  
  40e06c:	pushf  
  40e06d:	pushf  
  40e06e:	test   edi,ecx
  40e070:	pop    esp
  40e071:	ss mov ah,0x7b
  40e074:	dec    eax
  40e075:	loop   0x40e066
  40e077:	xchg   ecx,eax
  40e078:	fsub   QWORD PTR [edi+0x6079a093]
  40e07e:	aas    
  40e07f:	ss mov eax,0x8013a997
  40e085:	das    
  40e086:	jae    0x40e035
  40e088:	sub    dh,BYTE PTR [edx-0x1f]
  40e08b:	sbb    al,0x1a
  40e08d:	retf   0x43a5
  40e090:	out    0x1e,eax
  40e092:	inc    edx
  40e093:	ins    BYTE PTR es:[edi],dx
  40e094:	xor    ebx,esp
  40e096:	sbb    al,0x7c
  40e098:	sub    al,0x26
  40e09a:	jne    0x40e0e7
  40e09c:	daa    
  40e09d:	icebp  
  40e09e:	mov    es,WORD PTR [eax+0x37dae4f3]
  40e0a4:	sti    
  40e0a5:	loop   0x40e0df
  40e0a7:	scas   al,BYTE PTR es:[edi]
  40e0a8:	xor    eax,0xb81511e8
  40e0ad:	arpl   WORD PTR [edx-0x6c],dx
  40e0b0:	cmp    esp,ecx
  40e0b2:	jno    0x40e0ac
  40e0b4:	sub    al,0x70
  40e0b6:	aad    0x18
  40e0b8:	ja     0x40e107
  40e0ba:	sti    
  40e0bb:	int3   
  40e0bc:	sbb    eax,0x159e4349
  40e0c1:	icebp  
  40e0c2:	xchg   edx,eax
  40e0c3:	push   es
  40e0c4:	imul   edx,DWORD PTR [ecx+0x27],0x3286b375
  40e0cb:	inc    ecx
  40e0cc:	jno    0x40e06c
  40e0ce:	pushf  
  40e0cf:	outs   dx,BYTE PTR ds:[esi]
  40e0d0:	out    0xad,eax
  40e0d2:	mov    edx,esi
  40e0d4:	push   ss
  40e0d5:	mov    dh,0xb6
  40e0d7:	push   ds
  40e0d8:	mov    ecx,ecx
  40e0da:	push   ss
  40e0db:	add    DWORD PTR [edi],ebp
  40e0dd:	push   cs
  40e0de:	in     al,dx
  40e0df:	jl     0x40e13d
  40e0e1:	cmc    
  40e0e2:	push   edx
  40e0e3:	in     eax,dx
  40e0e4:	enter  0xdf25,0xba
  40e0e8:	out    dx,al
  40e0e9:	xor    esp,DWORD PTR [ecx+0x29]
  40e0ec:	xor    esp,edx
  40e0ee:	mov    eax,ds:0xa12f0cf8
  40e0f3:	add    al,0x0
  40e0f5:	pop    ds
  40e0f6:	push   ecx
  40e0f7:	cs (bad) 
  40e0f9:	nop
  40e0fa:	js     0x40e0ea
  40e0fc:	jl     0x40e11b
  40e0fe:	pop    ebp
  40e0ff:	and    al,0x97
  40e101:	and    eax,DWORD PTR [ebp+0x18736f86]
  40e107:	sbb    eax,0x1c47c401
  40e10c:	ret    0x3e1
  40e10f:	mov    dl,BYTE PTR [ebx]
  40e111:	stos   BYTE PTR es:[edi],al
  40e112:	xchg   edx,eax
  40e113:	fidivr DWORD PTR [ecx-0x3976ac0e]
  40e119:	xchg   esi,eax
  40e11a:	pop    edi
  40e11b:	xchg   esp,eax
  40e11c:	int3   
  40e11d:	jb     0x40e0af
  40e11f:	dec    edi
  40e120:	sahf   
  40e121:	push   0x67fe578a
  40e126:	(bad)  
  40e127:	retf   
  40e128:	lds    eax,FWORD PTR [ebp+0x2faa326]
  40e12e:	mov    al,ds:0xc1acae8e
  40e133:	mov    ds:0xab31429,eax
  40e138:	data16 sbb al,0xa4
  40e13b:	std    
  40e13c:	fist   DWORD PTR [edi]
  40e13e:	arpl   WORD PTR [ebx-0x7b83f2b8],sp
  40e144:	cmp    BYTE PTR [eax-0x45],0xc7
  40e148:	cdq    
  40e149:	lock aad 0xa7
  40e14c:	jnp    0x40e17b
  40e14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e14f:	dec    edi
  40e150:	ret    
  40e151:	outs   dx,BYTE PTR ds:[esi]
  40e152:	jns    0x40e0dd
  40e154:	pop    ebx
  40e155:	cwde   
  40e156:	loope  0x40e151
  40e158:	jb     0x40e1d9
  40e15a:	jb     0x40e1db
  40e15c:	xor    bl,BYTE PTR [eax]
  40e15e:	push   ebx
  40e15f:	je     0x40e132
  40e161:	enter  0xe6e6,0x7e
  40e165:	sub    al,0x7c
  40e167:	ds and al,0x6e
  40e16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e16c:	or     eax,0x956a33f7
  40e171:	jp     0x40e1dd
  40e173:	fidiv  WORD PTR [ebp+eax*8-0x78]
  40e177:	and    eax,0xe0fd8573
  40e17c:	jae    0x40e0ff
  40e17e:	ins    DWORD PTR es:[edi],dx
  40e17f:	cmp    eax,0xa3a918c5
  40e184:	push   edx
  40e185:	add    al,0x1e
  40e187:	cdq    
  40e188:	mov    bh,0xb0
  40e18a:	sahf   
  40e18b:	inc    ebx
  40e18c:	stos   BYTE PTR es:[edi],al
  40e18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e18e:	repz push 0x9ef4b958
  40e194:	scas   al,BYTE PTR es:[edi]
  40e195:	repz aam 0x82
  40e198:	add    eax,0x89c387a8
  40e19d:	loopne 0x40e1ab
  40e19f:	inc    ecx
  40e1a0:	inc    ebp
  40e1a1:	loope  0x40e151
  40e1a3:	xchg   ecx,eax
  40e1a4:	push   edx
  40e1a5:	cmp    dh,BYTE PTR [edx+eax*8-0x28f70a55]
  40e1ac:	fwait
  40e1ad:	xor    esp,DWORD PTR [eax]
  40e1af:	xchg   DWORD PTR [ebx-0x5a38b24c],esi
  40e1b5:	push   ebx
  40e1b6:	js     0x40e1ae
  40e1b8:	xchg   edx,eax
  40e1b9:	xchg   ebp,eax
  40e1ba:	xchg   edx,eax
  40e1bc:	retf   
  40e1bd:	pusha  
  40e1be:	mov    eax,0xcb67f52b
  40e1c3:	adc    ecx,esp
  40e1c5:	sbb    eax,0x4faf11e2
  40e1ca:	int    0xaa
  40e1cc:	popa   
  40e1cd:	adc    edi,DWORD PTR [edx-0xf93a22]
  40e1d3:	call   0x517ada9c
  40e1d8:	imul   eax,ebp,0x72
  40e1db:	cmp    dh,ch
  40e1dd:	or     DWORD PTR [esi],esp
  40e1df:	out    dx,al
  40e1e0:	push   0x4c7b9cdb
  40e1e5:	and    dh,cl
  40e1e7:	mov    cl,BYTE PTR [esi+0x37]
  40e1ea:	dec    ecx
  40e1eb:	inc    ecx
  40e1ec:	adc    BYTE PTR [ecx+0x2],bh
  40e1ef:	cmp    eax,0xfce2fae7
  40e1f4:	jnp    0x40e1aa
  40e1f6:	fiadd  WORD PTR [esi-0x7a]
  40e1f9:	cmp    ebx,eax
  40e1fb:	imul   eax,edx,0xea63f576
  40e201:	idiv   BYTE PTR [edi]
  40e203:	sbb    eax,0x73979ccd
  40e208:	mov    esi,DWORD PTR [esp+edi*8-0x36a6af2a]
  40e20f:	sub    eax,ecx
  40e211:	jae    0x40e242
  40e213:	jecxz  0x40e242
  40e215:	mov    bh,cl
  40e217:	dec    ebx
  40e218:	jg     0x40e234
  40e21a:	inc    ebx
  40e21b:	xlat   BYTE PTR ds:[ebx]
  40e21c:	dec    esp
  40e21d:	scas   eax,DWORD PTR es:[edi]
  40e21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e21f:	inc    ecx
  40e220:	gs mov bl,0xaa
  40e223:	fs mov esp,esp
  40e226:	sbb    BYTE PTR [edx+0x5225681a],bh
  40e22c:	pop    esi
  40e22d:	add    dh,BYTE PTR [eax-0x47fdc063]
  40e233:	push   eax
  40e234:	fwait
  40e235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e236:	into   
  40e237:	jmp    0xddde:0x77599657
  40e23e:	nop
  40e23f:	pop    edi
  40e240:	adc    bh,BYTE PTR [ebx+0x49]
  40e243:	cmp    DWORD PTR [esi],0xffffffad
  40e246:	dec    eax
  40e247:	int3   
  40e248:	mov    esp,0xf467f3a6
  40e24d:	rcr    bh,0xf0
  40e250:	mov    ebx,0x8ba4872f
  40e255:	sub    ch,ch
  40e257:	mov    ds:0xc84629b9,al
  40e25c:	das    
  40e25d:	and    BYTE PTR [ecx+ebx*1],ch
  40e260:	cmp    edi,esp
  40e262:	arpl   WORD PTR fs:[esi+0x65],bp
  40e266:	gs xchg edi,ebx
  40e269:	mov    al,0x13
  40e26b:	push   edi
  40e26c:	aaa    
  40e26d:	jb     0x40e2a3
  40e26f:	aad    0x26
  40e271:	adc    dl,BYTE PTR [ecx]
  40e273:	fwait
  40e274:	mov    ah,0x64
  40e276:	push   ds
  40e277:	test   al,0x94
  40e279:	cs loop 0x40e2e3
  40e27c:	pop    ebx
  40e27d:	pop    edi
  40e27e:	mov    bh,0x95
  40e280:	add    ebp,esp
  40e282:	(bad)  
  40e283:	cmp    bl,ch
  40e285:	push   esi
  40e286:	xchg   esp,eax
  40e287:	fs aad 0x91
  40e28a:	push   ecx
  40e28b:	push   edx
  40e28c:	xchg   ah,bh
  40e28e:	(bad)  
  40e28f:	and    al,0x68
  40e291:	push   ecx
  40e292:	xchg   esp,eax
  40e293:	imul   eax,ebp,0x5b
  40e296:	cld    
  40e297:	mov    ecx,0xac71a2aa
  40e29c:	js     0x40e256
  40e29e:	inc    eax
  40e29f:	and    eax,edi
  40e2a1:	cmp    BYTE PTR ds:0x449d8630,ch
  40e2a7:	sbb    BYTE PTR [esi-0x69],bh
  40e2aa:	icebp  
  40e2ab:	dec    ebp
  40e2ac:	mov    cl,0xd4
  40e2ae:	or     DWORD PTR [edi-0x3475a186],edi
  40e2b4:	mov    ebp,0x52c367a
  40e2b9:	ins    DWORD PTR es:[edi],dx
  40e2ba:	popa   
  40e2bb:	and    al,0x99
  40e2bd:	xchg   ebp,eax
  40e2be:	in     eax,0x23
  40e2c0:	retf   0xee5f
  40e2c3:	sbb    DWORD PTR [ebp+0x1e],edi
  40e2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c7:	xchg   al,ah
  40e2c9:	dec    BYTE PTR [ecx-0x7e]
  40e2cc:	mov    ebx,0x7ed70e36
  40e2d1:	in     al,0xc8
  40e2d3:	pop    es
  40e2d4:	cli    
  40e2d5:	push   es
  40e2d6:	and    eax,0x420e0e30
  40e2db:	jle    0x40e2e8
  40e2dd:	int3   
  40e2de:	stc    
  40e2df:	aaa    
  40e2e0:	jp     0x40e2c5
  40e2e2:	fcmovb st,st(1)
  40e2e4:	test   eax,0x25719fd6
  40e2e9:	icebp  
  40e2ea:	leave  
  40e2eb:	adc    DWORD PTR [eax],0xffffff8b
  40e2ee:	shl    DWORD PTR [ebx+0x33],0xf4
  40e2f2:	es mov esi,0x8d40732e
  40e2f8:	in     eax,0x70
  40e2fa:	repnz retf 0xd2fd
  40e2fe:	(bad)  
  40e2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e300:	mov    dh,0x4
  40e302:	push   edx
  40e303:	in     al,0xa9
  40e305:	and    eax,0xdc0f9197
  40e30a:	(bad)  
  40e30b:	aaa    
  40e30c:	cli    
  40e30d:	mov    ds:0x2ae4f93,eax
  40e312:	popa   
  40e313:	hlt    
  40e314:	out    dx,al
  40e315:	psrad  mm0,QWORD PTR [eax-0x12ed5a7f]
  40e31c:	(bad)  
  40e31d:	imul   esp,DWORD PTR [eax-0x2f],0x0
  40e321:	mov    ecx,edi
  40e323:	cld    
  40e324:	or     ecx,edi
  40e326:	test   ch,0xa1
  40e329:	dec    esi
  40e32a:	cmp    DWORD PTR [esp+eax*8-0x15109964],edi
  40e331:	and    esi,eax
  40e333:	out    0x8e,eax
  40e335:	jle    0x40e2cf
  40e337:	pushf  
  40e338:	mov    ah,bl
  40e33a:	test   BYTE PTR [eax-0x55be0b1c],0xfb
  40e341:	xor    eax,0x203c833c
  40e346:	xchg   ecx,eax
  40e347:	js     0x40e2d2
  40e349:	xor    al,0xf8
  40e34b:	rcr    DWORD PTR ss:[ebx],cl
  40e34e:	imul   esp,edi,0xf4bc4fe9
  40e354:	call   FWORD PTR [esi+0x28]
  40e357:	std    
  40e358:	fst    QWORD PTR [edx+0x6c0700fe]
  40e35e:	call   0x15f9:0x641a60c9
  40e365:	jmp    0xe7dbe125
  40e36a:	je     0x40e39f
  40e36c:	pushf  
  40e36d:	iret   
  40e36e:	push   es
  40e36f:	xor    DWORD PTR [eax+0x61],ebp
  40e372:	mov    ch,0xc6
  40e374:	jmp    0x9349:0xed637a1e
  40e37b:	jae    0x40e3e9
  40e37d:	(bad)  
  40e37e:	fild   WORD PTR [ecx+0x382655e0]
  40e384:	mov    BYTE PTR [edx+0x45],bh
  40e387:	into   
  40e388:	sub    DWORD PTR [eax-0x1d2101d8],edx
  40e38e:	int3   
  40e38f:	outs   dx,BYTE PTR ds:[esi]
  40e390:	loope  0x40e37e
  40e392:	outs   dx,BYTE PTR ds:[esi]
  40e393:	mov    dh,0x54
  40e395:	call   0x6edda927
  40e39a:	scas   al,BYTE PTR es:[edi]
  40e39b:	xor    ch,bh
  40e39d:	mov    dh,0x41
  40e39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3a0:	adc    al,BYTE PTR [edx]
  40e3a2:	out    dx,al
  40e3a3:	add    al,0x55
  40e3a5:	mov    ds:0x6ea2d1d2,al
  40e3aa:	cld    
  40e3ab:	mov    BYTE PTR [esi-0x55],ah
  40e3ae:	mov    dl,0x92
  40e3b0:	out    dx,eax
  40e3b1:	jae    0x40e3b2
  40e3b3:	mov    ecx,0xfe563599
  40e3b8:	pop    ebp
  40e3b9:	push   esi
  40e3ba:	xchg   ecx,eax
  40e3bb:	outs   dx,BYTE PTR ds:[esi]
  40e3bc:	push   es
  40e3bd:	xchg   esp,eax
  40e3be:	out    0x83,al
  40e3c0:	inc    esi
  40e3c1:	pusha  
  40e3c2:	add    eax,0xf1aa130
  40e3c7:	mov    dl,0x6a
  40e3c9:	pop    edx
  40e3ca:	test   edi,0xa3eaede8
  40e3d0:	or     DWORD PTR [ecx+0x33ed88ec],esi
  40e3d6:	stos   BYTE PTR es:[edi],al
  40e3d7:	daa    
  40e3d8:	lods   eax,DWORD PTR ds:[esi]
  40e3d9:	adc    esp,DWORD PTR [edi-0x7be1efab]
  40e3df:	push   esi
  40e3e0:	inc    eax
  40e3e1:	cmc    
  40e3e2:	pushf  
  40e3e3:	pop    eax
  40e3e4:	rol    BYTE PTR [ebx-0x7d],0xb1
  40e3e8:	sbb    dh,BYTE PTR [ebp+0x31]
  40e3eb:	or     BYTE PTR [eax],0x69
  40e3ee:	or     bh,BYTE PTR [esi+0x67337f50]
  40e3f4:	movsx  ecx,bh
  40e3f7:	ror    DWORD PTR [esi+edi*8-0x7afefcb1],0x76
  40e3ff:	sub    DWORD PTR [ebp-0x8],esp
  40e402:	into   
  40e403:	bound  ebx,QWORD PTR [ecx-0x4b]
  40e406:	mov    DWORD PTR [ebp-0x70572906],eax
  40e40c:	push   ss
  40e40d:	sbb    al,0x9f
  40e40f:	push   0x74770fdb
  40e414:	in     eax,0xd7
  40e416:	push   es
  40e417:	leave  
  40e418:	adc    ch,BYTE PTR [esi-0x774ed36f]
  40e41e:	sahf   
  40e41f:	adc    eax,0x947e49d8
  40e424:	addr16 lock pusha 
  40e427:	test   DWORD PTR [ebp-0x4d917f7a],esi
  40e42d:	push   0xffffffbd
  40e42f:	cmp    BYTE PTR [edx-0x626b4f51],dh
  40e435:	adc    al,0xe
  40e437:	mov    ebp,0x64c92eab
  40e43c:	sub    edx,0xffffffbd
  40e43f:	jl     0x40e457
  40e441:	adc    al,0xf8
  40e443:	out    dx,eax
  40e444:	sahf   
  40e445:	sbb    BYTE PTR [ecx],dl
  40e447:	push   eax
  40e448:	inc    ebp
  40e449:	mov    esp,0x54ca12a1
  40e44e:	stos   DWORD PTR es:[edi],eax
  40e44f:	jae    0x40e417
  40e451:	dec    ebp
  40e452:	mov    ah,0x9e
  40e454:	icebp  
  40e455:	(bad)  
  40e456:	dec    edi
  40e457:	mov    bh,0x7
  40e459:	xchg   edx,eax
  40e45a:	and    dl,BYTE PTR [eax]
  40e45c:	jns    0x40e475
  40e45e:	add    esi,0xffffffa1
  40e461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e462:	mov    cl,cl
  40e464:	fwait
  40e465:	jnp    0x40e4d6
  40e467:	aad    0xa5
  40e469:	mov    DWORD PTR [ecx-0x73],eax
  40e46c:	jno    0x40e440
  40e46e:	push   eax
  40e46f:	mov    bh,0x95
  40e471:	fsub   st,st(2)
  40e473:	or     dh,BYTE PTR [ebp+0x56]
  40e476:	pusha  
  40e477:	retf   
  40e478:	hlt    
  40e479:	xor    DWORD PTR [ecx+eiz*1-0x1527e472],esp
  40e480:	int    0x44
  40e482:	sub    esi,DWORD PTR [ebx+0x54]
  40e485:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40e487:	sub    ecx,0xd81f8387
  40e48d:	cld    
  40e48e:	ss stos DWORD PTR es:[edi],eax
  40e490:	adc    DWORD PTR [eax],0xd
  40e493:	add    eax,0xc95f42c1
  40e498:	push   esp
  40e499:	rcl    BYTE PTR [edx+0x681be60e],cl
  40e49f:	cli    
  40e4a0:	mov    bl,0x94
  40e4a2:	push   ss
  40e4a3:	mov    bl,0x7d
  40e4a5:	rol    BYTE PTR [ebp-0x1aba3c4e],0x52
  40e4ac:	lea    edi,[esi+0x17]
  40e4af:	add    al,BYTE PTR [esi]
  40e4b1:	repnz add eax,0xd7a058c4
  40e4b7:	retf   0x3368
  40e4ba:	aad    0xe6
  40e4bc:	pop    ds
  40e4bd:	push   ds
  40e4be:	clc    
  40e4bf:	mov    WORD PTR [ecx],?
  40e4c1:	jg     0x40e520
  40e4c3:	js     0x40e4ad
  40e4c5:	adc    esp,ebp
  40e4c7:	push   ebx
  40e4c8:	psubb  mm5,QWORD PTR [edx]
  40e4cb:	mov    WORD PTR [ebp-0x5183347],?
  40e4d1:	jp     0x40e51d
  40e4d3:	in     eax,0x41
  40e4d5:	push   esi
  40e4d6:	push   0xbcfccbec
  40e4db:	mov    ebx,0xa41cf885
  40e4e0:	aad    0xd3
  40e4e2:	jns    0x40e4d0
  40e4e4:	jg     0x40e47f
  40e4e6:	or     BYTE PTR [ebx+0x31da31e],ch
  40e4ec:	leave  
  40e4ed:	mov    edi,0xbdc51c41
  40e4f2:	retf   0x6cb8
  40e4f5:	mov    edx,0x422cbdad
  40e4fa:	xchg   esi,eax
  40e4fb:	ds cld 
  40e4fd:	int    0x6b
  40e4ff:	inc    esp
  40e500:	mov    bl,0xb7
  40e502:	adc    dl,BYTE PTR [edi]
  40e504:	jno    0x40e558
  40e506:	lods   eax,DWORD PTR ds:[esi]
  40e507:	test   BYTE PTR [ecx+edi*8],0x24
  40e50b:	ret    
  40e50c:	add    BYTE PTR [edx-0x235bea6b],ch
  40e512:	repnz cmp ebp,DWORD PTR [ecx+0x22]
  40e516:	xor    eax,0xbd6d9d95
  40e51b:	jmp    0x66880d4b
  40e520:	(bad)  
  40e521:	call   0x8187:0x2939fd11
  40e528:	or     eax,0xe16eefeb
  40e52d:	cmp    dh,dh
  40e52f:	push   cs
  40e530:	enter  0x1958,0x2a
  40e534:	(bad)  
  40e535:	loop   0x40e4ca
  40e537:	lahf   
  40e538:	pusha  
  40e539:	mov    eax,ds:0x603e0b89
  40e53e:	xor    BYTE PTR [esi],al
  40e540:	mov    dl,0xb7
  40e542:	inc    ecx
  40e543:	pushf  
  40e544:	jno    0x40e561
  40e546:	pop    edx
  40e547:	xchg   edi,eax
  40e548:	push   ebp
  40e549:	mov    edx,0xcf90e0b9
  40e54e:	cli    
  40e54f:	(bad)  [ecx-0x1]
  40e552:	jno    0x40e57c
  40e554:	push   eax
  40e555:	fld    QWORD PTR [eax+0x48]
  40e558:	mov    al,ds:0x3ec41ab6
  40e55d:	sbb    BYTE PTR [ebp-0x77],dh
  40e560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e561:	push   ebp
  40e562:	ja     0x40e51f
  40e564:	cdq    
  40e565:	and    DWORD PTR [ebx],eax
  40e567:	dec    ebp
  40e568:	and    DWORD PTR [eax],ebx
  40e56a:	outs   dx,BYTE PTR ds:[esi]
  40e56b:	and    eax,0xc7a14ea1
  40e570:	pop    ds
  40e571:	cwde   
  40e572:	stos   BYTE PTR es:[edi],al
  40e573:	fabs   
  40e575:	in     eax,0x28
  40e577:	inc    esp
  40e578:	fst    QWORD PTR cs:[ecx]
  40e57b:	mov    esp,0xa050864f
  40e580:	lods   al,BYTE PTR ds:[esi]
  40e581:	les    ebp,FWORD PTR [ecx+0x2a]
  40e584:	push   ecx
  40e585:	add    al,0xdd
  40e587:	(bad)  
  40e589:	addr16 xor dl,cl
  40e58c:	loopne 0x40e5a4
  40e58e:	mov    eax,0x7faf667b
  40e593:	mov    esp,0x83b563a8
  40e598:	inc    ebp
  40e599:	test   BYTE PTR [edx+edx*8-0x1d],al
  40e59d:	sbb    DWORD PTR [edi-0x37],ebp
  40e5a0:	mov    dh,BYTE PTR [esi]
  40e5a2:	push   ds
  40e5a3:	in     al,dx
  40e5a4:	stos   DWORD PTR es:[edi],eax
  40e5a5:	dec    ebp
  40e5a6:	out    dx,eax
  40e5a7:	int    0xf4
  40e5a9:	iret   
  40e5aa:	xor    edx,0x6a
  40e5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ae:	xchg   edi,eax
  40e5af:	pop    DWORD PTR [esi+0x26]
  40e5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b3:	mov    ecx,0x5b0a712
  40e5b8:	mov    al,0x37
  40e5ba:	jo     0x40e5ae
  40e5bc:	inc    edx
  40e5bd:	mov    DWORD PTR [ebx-0x5],ecx
  40e5c0:	pop    DWORD PTR [eax]
  40e5c2:	inc    edi
  40e5c3:	pushf  
  40e5c4:	dec    BYTE PTR [esi]
  40e5c6:	stos   BYTE PTR es:[edi],al
  40e5c7:	ffreep st(5)
  40e5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ca:	adc    edx,DWORD PTR [eax+0x3fe80f5b]
  40e5d0:	jg     0x40e5a5
  40e5d2:	int    0xbf
  40e5d4:	lods   eax,DWORD PTR ds:[esi]
  40e5d5:	xchg   edi,eax
  40e5d6:	push   ecx
  40e5d7:	stos   BYTE PTR es:[edi],al
  40e5d8:	out    dx,eax
  40e5d9:	mov    edi,0xbed73888
  40e5de:	sbb    eax,DWORD PTR [ebp+0xcf6e985]
  40e5e4:	mov    cl,0xb9
  40e5e6:	mov    WORD PTR [edi],ss
  40e5e8:	popa   
  40e5e9:	mov    bh,BYTE PTR [ebx+ebx*2+0x99491b6]
  40e5f0:	in     al,dx
  40e5f1:	addr16 cmp al,0x5d
  40e5f4:	sbb    DWORD PTR [ebp-0x38ab39d7],edi
  40e5fa:	add    eax,DWORD PTR [esi]
  40e5fc:	pop    edi
  40e5fd:	adc    edx,DWORD PTR [ebx+0x56a41e10]
  40e603:	loope  0x40e5e5
  40e605:	dec    ebp
  40e606:	test   dl,ch
  40e608:	sub    DWORD PTR [esi+esi*1],esi
  40e60b:	lahf   
  40e60c:	push   eax
  40e60d:	scas   al,BYTE PTR es:[edi]
  40e60e:	(bad)  
  40e60f:	push   ebx
  40e610:	mov    ebx,ebp
  40e612:	into   
  40e613:	sahf   
  40e614:	test   DWORD PTR [esi-0x332149ad],edi
  40e61a:	cmc    
  40e61b:	test   BYTE PTR [eax-0x1],0x1f
  40e61f:	neg    edi
  40e621:	stos   BYTE PTR es:[edi],al
  40e622:	mul    BYTE PTR [eax+0x44e58eeb]
  40e628:	or     dh,BYTE PTR es:[eax]
  40e62b:	xchg   esp,eax
  40e62c:	int3   
  40e62d:	xor    DWORD PTR [ecx-0x5197c7af],ebp
  40e633:	cwde   
  40e634:	jmp    0x2f64ca4
  40e639:	hlt    
  40e63a:	addr16 jle 0x40e5dc
  40e63d:	(bad)  
  40e63f:	pop    ss
  40e640:	sahf   
  40e641:	int3   
  40e642:	pop    esp
  40e643:	jmp    0x6f9f:0xb30d209a
  40e64a:	out    0xaa,eax
  40e64c:	inc    ebp
  40e64d:	push   cs
  40e64e:	cmp    ebx,ecx
  40e650:	inc    ecx
  40e651:	sbb    eax,0xead2ab85
  40e656:	test   eax,0x8bafca99
  40e65b:	ins    BYTE PTR es:[edi],dx
  40e65c:	cli    
  40e65d:	out    dx,eax
  40e65e:	xchg   esp,eax
  40e65f:	test   ah,cl
  40e661:	xchg   esi,eax
  40e662:	add    ebx,DWORD PTR [ecx-0x30c7d5d3]
  40e668:	gs ror esp,1
  40e66b:	loop   0x40e6c6
  40e66d:	aad    0xf0
  40e66f:	das    
  40e670:	aam    0xfb
  40e672:	and    ch,BYTE PTR [edi]
  40e674:	nop
  40e675:	addr16 and al,0x2
  40e678:	xchg   ecx,eax
  40e679:	aas    
  40e67a:	cmp    al,0x58
  40e67c:	mov    eax,0x888e3d90
  40e681:	fadd   DWORD PTR [eax-0x2eca33dd]
  40e687:	clc    
  40e688:	(bad)  [ecx+edi*4+0x1d]
  40e68c:	xor    BYTE PTR [edi+0x2c],dh
  40e68f:	outs   dx,DWORD PTR ds:[esi]
  40e690:	dec    ecx
  40e691:	xor    BYTE PTR [ebx],0xd3
  40e694:	cmc    
  40e695:	(bad)  
  40e696:	sti    
  40e697:	jae    0x40e714
  40e699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e69a:	xchg   ecx,eax
  40e69b:	arpl   dx,ax
  40e69d:	pop    ecx
  40e69e:	repnz loop 0x40e62d
  40e6a1:	push   edx
  40e6a2:	push   0x945ea390
  40e6a7:	inc    ebp
  40e6a8:	or     BYTE PTR [ebp-0x3b7d6fa4],ch
  40e6ae:	push   ebp
  40e6af:	dec    ecx
  40e6b0:	mov    ch,0x73
  40e6b2:	rol    DWORD PTR [ebx-0x145cff01],cl
  40e6b8:	and    al,0xaf
  40e6ba:	out    dx,al
  40e6bb:	adc    BYTE PTR [ecx],dh
  40e6bd:	push   es
  40e6be:	enter  0xb3b6,0x5c
  40e6c2:	sub    al,0xc
  40e6c4:	loop   0x40e6a7
  40e6c6:	xor    BYTE PTR [ecx-0x2b],ch
  40e6c9:	leave  
  40e6ca:	imul   esi,DWORD PTR [esi],0x8864c71e
  40e6d0:	dec    esi
  40e6d1:	cmp    eax,0xd963f449
  40e6d6:	mov    dh,0x92
  40e6d8:	sbb    ebx,0xfcb1afd2
  40e6de:	aaa    
  40e6df:	sahf   
  40e6e0:	inc    ecx
  40e6e1:	ret    
  40e6e2:	shl    cl,cl
  40e6e4:	je     0x40e760
  40e6e6:	sbb    bl,BYTE PTR [edi+0x35e6ccc]
  40e6ec:	ror    DWORD PTR [edi-0x52],1
  40e6ef:	sub    esi,esp
  40e6f1:	inc    al
  40e6f3:	push   0xd06ed55
  40e6f8:	dec    ebp
  40e6f9:	mov    ebx,0x2c0551b4
  40e6fe:	repnz mov edi,0xc975d498
  40e704:	ss add eax,0xe2920437
  40e70a:	sub    eax,0x7c4728d1
  40e70f:	repnz xor DWORD PTR [ebx],0x9
  40e713:	sar    BYTE PTR [ecx+0x45],0x32
  40e717:	cdq    
  40e718:	in     eax,dx
  40e719:	or     BYTE PTR [ebx+eiz*8+0x6e],dl
  40e71d:	(bad)  
  40e71e:	push   0xffffff9e
  40e720:	xchg   esp,eax
  40e721:	lea    ebx,[esi]
  40e723:	xor    al,0x36
  40e725:	pusha  
  40e726:	pushf  
  40e727:	cs stos DWORD PTR es:[edi],eax
  40e729:	add    BYTE PTR [ebx],cl
  40e72b:	jae    0x40e6ad
  40e72d:	jmp    DWORD PTR [ecx-0x31e20d4c]
  40e733:	add    eax,0x922324a5
  40e738:	imul   esi,ecx,0xffffff80
  40e73b:	xlat   BYTE PTR ds:[ebx]
  40e73c:	sub    eax,eax
  40e73e:	jg     0x40e7be
  40e740:	cli    
  40e741:	ja     0x40e733
  40e743:	sbb    al,0x4e
  40e745:	sbb    esi,edi
  40e747:	sbb    DWORD PTR [edi-0xc6d5fe3],ecx
  40e74d:	pop    esi
  40e74e:	dec    esi
  40e74f:	imul   edx,DWORD PTR [ecx],0xffffffc5
  40e752:	adc    eax,0xc38551f8
  40e757:	enter  0x20c9,0x18
  40e75b:	mov    ch,0xb6
  40e75d:	test   BYTE PTR [ebx-0x7c9223e3],al
  40e763:	adc    dl,BYTE PTR [ecx+0x23]
  40e766:	ss sub eax,0x8e41aa4f
  40e76c:	and    ch,BYTE PTR [esi+0x3c5991b3]
  40e772:	lods   al,BYTE PTR ds:[si]
  40e774:	pop    es
  40e775:	loop   0x40e755
  40e777:	dec    edi
  40e778:	dec    esp
  40e779:	sub    ebp,edi
  40e77b:	cld    
  40e77c:	dec    ebp
  40e77d:	and    edx,eax
  40e77f:	mov    ds:0x9f3bc52,eax
  40e784:	test   BYTE PTR [esi+0x1fb62511],dl
  40e78a:	inc    ebp
  40e78b:	xchg   edx,eax
  40e78c:	push   ebp
  40e78d:	test   BYTE PTR [ebx-0x73],cl
  40e790:	iret   
  40e791:	fst    QWORD PTR [ecx]
  40e793:	sbb    dh,bl
  40e795:	adc    DWORD PTR [esi+0x52],edx
  40e798:	mov    al,ds:0x2ea0011
  40e79d:	inc    eax
  40e79e:	push   ebp
  40e79f:	mov    ebp,0x1d1a6930
  40e7a4:	cld    
  40e7a5:	jno    0x40e80d
  40e7a7:	or     al,0x79
  40e7a9:	ret    
  40e7aa:	bndstx [ecx-0x25],bnd1
  40e7ae:	sbb    BYTE PTR [ecx],al
  40e7b0:	es sbb al,0x81
  40e7b3:	clc    
  40e7b4:	jae    0x40e755
  40e7b6:	add    dl,cl
  40e7b8:	xchg   ebx,eax
  40e7b9:	in     al,0x8d
  40e7bb:	jmp    0xa3de:0xac0241cd
  40e7c2:	inc    ecx
  40e7c3:	mov    ecx,ecx
  40e7c5:	and    al,0xa4
  40e7c7:	pop    eax
  40e7c8:	cwde   
  40e7c9:	(bad)  
  40e7ca:	pop    esi
  40e7cb:	loopne 0x40e7ed
  40e7cd:	push   edi
  40e7ce:	(bad)
  40e7d1:	popf   
  40e7d2:	xchg   DWORD PTR [ebx],esp
  40e7d4:	jnp    0x40e775
  40e7d6:	jbe    0x40e7f0
  40e7d8:	inc    ecx
  40e7d9:	jg     0x40e80d
  40e7db:	fbstp  TBYTE PTR [ebp+edi*2-0x549f1f16]
  40e7e2:	iret   
  40e7e3:	ins    BYTE PTR es:[edi],dx
  40e7e4:	jge    0x40e7b7
  40e7e6:	scas   al,BYTE PTR es:[edi]
  40e7e7:	fucomi st,st(7)
  40e7e9:	je     0x40e809
  40e7eb:	call   0x3fe0:0xe3134137
  40e7f2:	mov    dh,0x20
  40e7f4:	add    edx,eax
  40e7f6:	mov    edx,0x6ae5d052
  40e7fb:	data16 ins BYTE PTR es:[edi],dx
  40e7fd:	fld    QWORD PTR [edi]
  40e7ff:	mov    bl,0xe5
  40e801:	push   0x42
  40e803:	cmp    ah,0x3d
  40e806:	or     eax,DWORD PTR [edx]
  40e808:	lahf   
  40e809:	xchg   edx,eax
  40e80a:	and    DWORD PTR [edi+0x5168d7],0xffffffd0
  40e811:	pop    esp
  40e812:	popf   
  40e813:	sbb    edx,edx
  40e815:	das    
  40e816:	jl     0x40e81b
  40e818:	adc    ebp,DWORD PTR [ebp+0x58]
  40e81b:	sar    cl,1
  40e81d:	dec    ebp
  40e81e:	xor    BYTE PTR [ebx],ch
  40e820:	or     al,0xd4
  40e822:	imul   esi,DWORD PTR [edi-0x7e89dbca],0x8a259b5c
  40e82c:	ret    0xeb8e
  40e82f:	hlt    
  40e830:	(bad)  
  40e831:	mov    bh,0xd4
  40e833:	div    bh
  40e835:	xor    DWORD PTR [eax+0x1c41339e],ebp
  40e83b:	(bad)  
  40e83c:	add    ebx,eax
  40e83e:	push   ss
  40e83f:	adc    bh,BYTE PTR [eax]
  40e841:	out    dx,al
  40e842:	sbb    bh,BYTE PTR [ecx-0x38]
  40e845:	inc    ecx
  40e846:	mov    ecx,0x9e6f7804
  40e84b:	mov    BYTE PTR [ebx],0x8a
  40e84e:	adc    eax,0xa09a3c8c
  40e853:	out    0xf0,eax
  40e855:	xlat   BYTE PTR ds:[ebx]
  40e856:	add    ch,dh
  40e858:	dec    ebx
  40e859:	or     al,0xc6
  40e85b:	xchg   edi,eax
  40e85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e85d:	test   al,0x7c
  40e85f:	(bad)  
  40e861:	enter  0x5d09,0xe0
  40e865:	aaa    
  40e866:	push   ebp
  40e867:	xor    al,bl
  40e869:	inc    eax
  40e86a:	add    ecx,DWORD PTR [ebp+eiz*8+0x52]
  40e86e:	call   0x2f08bd96
  40e873:	das    
  40e874:	call   0x549e8b98
  40e879:	push   0x20
  40e87b:	jno    0x40e829
  40e87d:	int    0xa0
  40e87f:	sbb    eax,0xea2d2bd9
  40e884:	addr16 std 
  40e886:	sub    ebp,DWORD PTR [edx]
  40e888:	mov    esp,0x178805a7
  40e88d:	xchg   esp,eax
  40e88e:	pushf  
  40e88f:	(bad)  
  40e890:	jmp    0xaadedc47
  40e895:	call   0x1c6d:0x61ce6bb7
  40e89c:	push   edi
  40e89d:	imul   ebp,DWORD PTR [edi],0xffffffca
  40e8a0:	test   DWORD PTR [edx+0x6e],esi
  40e8a3:	ja     0x40e88b
  40e8a5:	dec    ebx
  40e8a6:	jecxz  0x40e898
  40e8a8:	enter  0x1a5e,0x59
  40e8ac:	sbb    eax,0x3dfecf3a
  40e8b1:	fwait
  40e8b2:	lods   eax,DWORD PTR ds:[esi]
  40e8b3:	in     al,dx
  40e8b4:	stos   BYTE PTR es:[edi],al
  40e8b5:	or     eax,0x6a46a7e2
  40e8ba:	pop    ecx
  40e8bb:	mov    BYTE PTR cs:[ebx+0x1c],bl
  40e8bf:	mov    edx,0xe7224ebe
  40e8c4:	dec    ebp
  40e8c5:	aaa    
  40e8c6:	xchg   edi,eax
  40e8c7:	cmp    eax,0x3a194620
  40e8cc:	push   0xffffffc3
  40e8ce:	das    
  40e8cf:	lds    edx,FWORD PTR [edx]
  40e8d1:	jno    0x40e8a5
  40e8d3:	(bad)  
  40e8d4:	outs   dx,DWORD PTR ds:[esi]
  40e8d5:	les    sp,DWORD PTR [edx+0x2b056fa5]
  40e8dc:	iret   
  40e8dd:	and    dl,BYTE PTR [eax+edx*2+0x6f1be802]
  40e8e4:	retf   0x6606
  40e8e7:	mov    cl,0x83
  40e8e9:	add    eax,0xead8fae9
  40e8ee:	xchg   esp,eax
  40e8ef:	xchg   ecx,eax
  40e8f0:	mov    ebx,0x41e3fa48
  40e8f5:	cmp    DWORD PTR [esi+eax*4],ecx
  40e8f8:	cmp    dh,bh
  40e8fa:	hlt    
  40e8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8fc:	dec    eax
  40e8fd:	mov    ebx,0x84a36d6c
  40e902:	ins    DWORD PTR es:[edi],dx
  40e903:	jp     0x40e89f
  40e905:	mov    cl,0x0
  40e907:	xor    eax,0xccbb261c
  40e90c:	and    BYTE PTR [ecx-0x7f],cl
  40e90f:	mov    edi,0x41857132
  40e914:	jnp    0x40e89d
  40e916:	div    BYTE PTR [esi-0x5ce30658]
  40e91c:	mov    ds:0xf9290db5,eax
  40e921:	add    al,al
  40e923:	nop
  40e924:	or     DWORD PTR [edx+0x32e8a125],edi
  40e92a:	inc    edi
  40e92b:	xlat   BYTE PTR ds:[ebx]
  40e92c:	jg     0x40e952
  40e92e:	jle    0x40e960
  40e930:	push   eax
  40e931:	push   0x68
  40e933:	cmc    
  40e934:	sbb    eax,DWORD PTR [ebx-0x6641230]
  40e93a:	mov    BYTE PTR [ebp+0x495c4059],dl
  40e940:	in     al,dx
  40e941:	rcr    BYTE PTR [esi],1
  40e943:	pop    edi
  40e944:	pop    ebx
  40e945:	pop    ecx
  40e946:	inc    eax
  40e947:	xchg   ebp,eax
  40e948:	xchg   ebx,eax
  40e949:	mov    edx,DWORD PTR [esi-0x4e939eb9]
  40e94f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e950:	pushf  
  40e951:	mul    ebp
  40e953:	popa   
  40e954:	shl    DWORD PTR [edi-0x6a],cl
  40e957:	shl    BYTE PTR [edi],cl
  40e959:	scas   al,BYTE PTR es:[edi]
  40e95a:	sti    
  40e95b:	cld    
  40e95c:	inc    edi
  40e95d:	jnp    0x40e900
  40e95f:	mov    ch,0x2
  40e961:	stos   DWORD PTR es:[edi],eax
  40e962:	fmul   QWORD PTR [ebx]
  40e964:	xchg   edx,eax
  40e965:	bound  eax,QWORD PTR [di+0x76]
  40e969:	das    
  40e96a:	in     al,0x5f
  40e96c:	sbb    edi,DWORD PTR [ebx-0x7a]
  40e96f:	ror    BYTE PTR [eax+0xa99691d],cl
  40e975:	lods   al,BYTE PTR ds:[esi]
  40e976:	mov    ds:0x46f1f89,al
  40e97b:	mov    al,ds:0xc439ba28
  40e980:	jb     0x40e939
  40e982:	xor    BYTE PTR [ecx+0x75],ch
  40e985:	in     eax,0xba
  40e987:	and    al,0xfa
  40e989:	cmp    bh,ah
  40e98b:	lds    edi,FWORD PTR ds:0xa07e7452
  40e991:	dec    ecx
  40e992:	mov    edi,0xbdeb9140
  40e997:	lea    ebx,[esi+0x42f918af]
  40e99d:	fdiv   DWORD PTR [ecx+eax*1-0x59]
  40e9a1:	mov    ecx,DWORD PTR [ebx+eiz*1+0x688ccf16]
  40e9a8:	inc    ecx
  40e9a9:	aas    
  40e9aa:	pop    esi
  40e9ab:	jp     0x40ea1b
  40e9ad:	or     ah,BYTE PTR ds:0xcd24e598
  40e9b3:	(bad)  
  40e9b4:	cli    
  40e9b5:	call   FWORD PTR [ebx-0x70b6bd28]
  40e9bb:	xchg   ebp,eax
  40e9bc:	add    esi,ecx
  40e9be:	and    esp,ebp
  40e9c0:	jne    0x40e9e5
  40e9c2:	out    0xe5,eax
  40e9c4:	xchg   ebx,eax
  40e9c5:	jns    0x40e9ba
  40e9c7:	repnz mov ebx,0x5c6dd96c
  40e9cd:	jle    0x40e995
  40e9cf:	loop   0x40e994
  40e9d1:	int3   
  40e9d2:	inc    esp
  40e9d3:	push   es
  40e9d4:	dec    esp
  40e9d5:	xchg   ecx,eax
  40e9d6:	and    DWORD PTR [edi+0x7f5cbbf4],edx
  40e9dc:	or     bh,BYTE PTR [edi-0x78]
  40e9df:	pushf  
  40e9e0:	js     0x40e9bd
  40e9e2:	xchg   DWORD PTR [esi],ebx
  40e9e4:	pusha  
  40e9e5:	jle    0x40e9a4
  40e9e7:	inc    eax
  40e9e8:	adc    edx,DWORD PTR [ebp+esi*4+0x364c000c]
  40e9ef:	nop
  40e9f0:	pop    edi
  40e9f1:	jp     0x40ea2d
  40e9f3:	out    dx,eax
  40e9f4:	sub    DWORD PTR [edx-0x3d],ecx
  40e9f7:	add    al,0xad
  40e9f9:	sbb    al,bh
  40e9fb:	push   edi
  40e9fc:	jne    0x40ea25
  40e9fe:	(bad)  
  40e9ff:	aas    
  40ea00:	or     eax,0xc8edd9eb
  40ea05:	mov    BYTE PTR [ebx-0x3f],dh
  40ea08:	mov    ch,0x52
  40ea0a:	ins    DWORD PTR es:[edi],dx
  40ea0b:	(bad)  
  40ea0c:	enter  0x7d15,0xdb
  40ea10:	lea    ebx,[esi+0x2]
  40ea13:	jnp    0x40ea06
  40ea15:	and    esi,ebx
  40ea17:	stos   BYTE PTR es:[edi],al
  40ea18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea19:	call   0x4bb4:0x1327337a
  40ea20:	and    al,0xd5
  40ea22:	test   al,0x1b
  40ea24:	sti    
  40ea25:	(bad)  
  40ea28:	cmp    eax,0xdd393839
  40ea2d:	loopne 0x40ea6d
  40ea2f:	inc    edx
  40ea30:	and    al,0xd8
  40ea32:	clc    
  40ea33:	jl     0x40e9d0
  40ea35:	test   BYTE PTR [edx-0x13d03abe],ah
  40ea3b:	pop    ecx
  40ea3c:	pmullw mm5,QWORD PTR [ebx-0x39ea1ca6]
  40ea43:	sub    cl,BYTE PTR es:[ebp+0x76]
  40ea47:	adc    al,0x5b
  40ea49:	mov    ecx,0xd518f0ed
  40ea4e:	test   eax,0xf67cd41a
  40ea53:	pushf  
  40ea54:	or     ebp,edx
  40ea56:	xchg   DWORD PTR [edi],eax
  40ea58:	fnstenv [edx-0x8]
  40ea5b:	push   0x264a8c0f
  40ea60:	in     al,0x63
  40ea62:	or     bl,BYTE PTR [ebp-0xd]
  40ea65:	fimul  DWORD PTR [ebp+0x41]
  40ea68:	icebp  
  40ea69:	nop
  40ea6a:	cmc    
  40ea6b:	adc    BYTE PTR [ecx+0x42],cl
  40ea6e:	inc    edx
  40ea6f:	sbb    al,0xa2
  40ea71:	(bad)  
  40ea72:	in     eax,dx
  40ea73:	nop
  40ea74:	pop    ecx
  40ea75:	pop    ds
  40ea76:	jmp    0xcf3f:0x42ef4c10
  40ea7d:	fwait
  40ea7e:	add    ax,0x785c
  40ea82:	adc    BYTE PTR [eax+0x3c],0x73
  40ea86:	sahf   
  40ea87:	mov    ebp,0xd70ac5e1
  40ea8c:	sub    eax,0x1d1da02f
  40ea91:	cld    
  40ea92:	and    al,0xce
  40ea94:	mov    ch,0x1d
  40ea96:	repz xor eax,0x82b2d6ec
  40ea9c:	call   0x570bcf57
  40eaa1:	out    dx,eax
  40eaa2:	pop    ds
  40eaa3:	sub    DWORD PTR [edx],edi
  40eaa5:	xchg   al,ch
  40eaa7:	shr    BYTE PTR [eax-0x48],1
  40eaaa:	test   eax,0xca2d410c
  40eaaf:	sar    BYTE PTR [edx+0x28],cl
  40eab2:	cmp    esi,edi
  40eab4:	imul   ecx,DWORD PTR [ebx+0x587cd8b3],0xffffffe5
  40eabb:	fdiv   QWORD PTR [eax]
  40eabe:	jg     0x40eb36
  40eac0:	sar    bl,1
  40eac2:	and    ebp,eax
  40eac4:	cmp    DWORD PTR [edi-0x6444be4c],0x39204172
  40eace:	scas   eax,DWORD PTR es:[edi]
  40eacf:	jns    0x40ea65
  40ead1:	xor    edi,DWORD PTR [ebx]
  40ead3:	pop    ecx
  40ead4:	inc    edi
  40ead5:	sbb    BYTE PTR [esi],bh
  40ead7:	mov    dh,0x70
  40ead9:	mov    edi,0x9ee57bfe
  40eade:	int3   
  40eadf:	add    eax,0xb6908487
  40eae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae5:	popa   
  40eae6:	sub    eax,0x907c3c9c
  40eaeb:	loope  0x40ea7e
  40eaed:	cld    
  40eaee:	mov    eax,ebp
  40eaf0:	push   ss
  40eaf1:	inc    esp
  40eaf2:	icebp  
  40eaf3:	fisub  WORD PTR [esi]
  40eaf5:	loop   0x40eae1
  40eaf7:	jge    0x40eb35
  40eaf9:	push   ebx
  40eafa:	pop    ebx
  40eafb:	pushw  ss
  40eafd:	jne    0x40ead9
  40eaff:	sub    edx,DWORD PTR [ebp+ebp*1-0x7e]
  40eb03:	aas    
  40eb04:	adc    eax,0x6d6ebcaf
  40eb09:	sub    BYTE PTR [ecx+edx*1],al
  40eb0c:	icebp  
  40eb0d:	mov    al,ds:0xc8d9a7aa
  40eb12:	shr    dh,0xa4
  40eb15:	ror    BYTE PTR [eax-0x31],cl
  40eb18:	(bad)  
  40eb19:	jo     0x40eae3
  40eb1b:	adc    BYTE PTR [ebp+0xf],ah
  40eb1e:	(bad)  
  40eb1f:	rcl    DWORD PTR [edx-0x3acc16ac],cl
  40eb25:	pop    edi
  40eb26:	sar    DWORD PTR [esi+0x40c41888],1
  40eb2c:	mov    ch,0x8a
  40eb2e:	adc    al,0x23
  40eb30:	test   eax,0xeed7c741
  40eb35:	mov    WORD PTR [ebx+0x2324777a],?
  40eb3b:	ds sbb al,0x2f
  40eb3e:	dec    ebp
  40eb3f:	les    esi,FWORD PTR [esi]
  40eb41:	les    ebx,FWORD PTR [ecx-0x26]
  40eb44:	stc    
  40eb45:	and    BYTE PTR [edx-0x7c0a74f6],0xd9
  40eb4c:	lahf   
  40eb4d:	neg    BYTE PTR [ecx+0x4ebbd2f0]
  40eb53:	(bad)  
  40eb54:	fistp  QWORD PTR [edx]
  40eb56:	or     BYTE PTR [edx+0x57d3900f],0x77
  40eb5d:	xor    eax,0xc1224d16
  40eb62:	retf   0x3bed
  40eb65:	pop    ecx
  40eb66:	push   esp
  40eb67:	call   0xd856520d
  40eb6c:	push   eax
  40eb6d:	repnz push cs
  40eb6f:	retf   0xe8aa
  40eb72:	pop    ds
  40eb73:	shl    BYTE PTR [edx-0x1c05e569],1
  40eb79:	xchg   DWORD PTR [ecx],ebx
  40eb7b:	repz jmp 0x40eb4a
  40eb7e:	out    0xf4,al
  40eb80:	adc    DWORD PTR [ecx+0x7f],eax
  40eb83:	jp     0x40eb6d
  40eb85:	aam    0x69
  40eb87:	loope  0x40eb33
  40eb89:	not    DWORD PTR [eax+0x63]
  40eb8c:	inc    edi
  40eb8d:	xchg   esp,eax
  40eb8e:	jmp    0xe33eb64
  40eb93:	sahf   
  40eb94:	and    BYTE PTR [esi-0x6c64cd11],dl
  40eb9a:	into   
  40eb9b:	addr16 sbb eax,0xa2450010
  40eba1:	push   es
  40eba2:	(bad)  [ebp+0x33ac7d3e]
  40eba8:	inc    ecx
  40eba9:	jae    0x40eb3f
  40ebab:	retf   
  40ebac:	xchg   edi,eax
  40ebad:	cmp    DWORD PTR [edx-0xf],esi
  40ebb0:	sbb    ch,BYTE PTR [esi+0x3d]
  40ebb3:	inc    esp
  40ebb4:	xor    eax,0x9fa5eda4
  40ebb9:	xor    BYTE PTR [ecx],al
  40ebbb:	mov    esi,0x5336e446
  40ebc0:	xchg   di,ax
  40ebc2:	mov    cs,WORD PTR [ebx-0x58]
  40ebc5:	pop    ss
  40ebc6:	push   ebp
  40ebc7:	(bad)  
  40ebc8:	in     al,dx
  40ebc9:	xor    bh,bh
  40ebcb:	dec    esp
  40ebcc:	fnstcw WORD PTR [eax-0x5ae47dff]
  40ebd2:	ja     0x40ebbe
  40ebd4:	imul   DWORD PTR [edx+ebp*2]
  40ebd7:	int    0xd3
  40ebd9:	(bad)  
  40ebdb:	pop    esp
  40ebdc:	and    ebp,DWORD PTR [edi-0x46]
  40ebdf:	iret   
  40ebe0:	cmp    cl,BYTE PTR ds:0xcf3c325a
  40ebe6:	arpl   WORD PTR [esi-0x1e1c2540],bx
  40ebec:	dec    ebp
  40ebed:	xchg   ebp,eax
  40ebee:	mov    eax,ds:0xcf4eb813
  40ebf3:	xor    eax,0xdb9e9a9c
  40ebf8:	jmp    0x7e47afde
  40ebfd:	jmp    0x252e72f
  40ec02:	mov    fs,WORD PTR [edi+0x4f14a3e5]
  40ec08:	cmp    al,0xed
  40ec0a:	and    eax,0x7a865f8
  40ec0f:	push   cs
  40ec10:	clc    
  40ec11:	stos   DWORD PTR es:[di],eax
  40ec13:	push   0x78c8fac5
  40ec18:	inc    eax
  40ec19:	mov    ebx,0x890125f8
  40ec1e:	adc    eax,0xee38e45b
  40ec23:	jnp    0x40ec0d
  40ec25:	pop    ebx
  40ec26:	test   al,0xf9
  40ec28:	mov    al,0x96
  40ec2a:	mov    edi,0xf20d90f4
  40ec2f:	push   eax
  40ec30:	int    0xdc
  40ec32:	in     eax,dx
  40ec33:	out    0x45,al
  40ec35:	imul   esi,DWORD PTR [ebp+0x35],0xffffffaa
  40ec39:	or     esi,DWORD PTR [edx+0x56]
  40ec3c:	pop    ss
  40ec3d:	ins    BYTE PTR es:[edi],dx
  40ec3e:	adc    DWORD PTR [esi-0x40],edi
  40ec41:	jno    0x40ec55
  40ec43:	pop    eax
  40ec44:	ret    
  40ec45:	mov    ss:0xc96f8e8b,al
  40ec4b:	ss stos BYTE PTR es:[edi],al
  40ec4d:	stc    
  40ec4e:	push   esi
  40ec4f:	dec    ebp
  40ec50:	sub    eax,0x13e5ad68
  40ec55:	loope  0x40ec3a
  40ec57:	jge    0x40ec15
  40ec59:	xor    BYTE PTR [ecx],ah
  40ec5b:	enter  0x3858,0x2f
  40ec5f:	mov    eax,ds:0xf55f8f86
  40ec64:	mov    eax,0x42ff394c
  40ec69:	clc    
  40ec6a:	cmp    edx,eax
  40ec6c:	aam    0x80
  40ec6e:	pop    edx
  40ec6f:	rcr    DWORD PTR [eax],0x70
  40ec72:	sub    ebx,esp
  40ec74:	xchg   DWORD PTR [esi],esi
  40ec76:	sbb    al,0x62
  40ec78:	je     0x40ec0f
  40ec7a:	jbe    0x40ecf1
  40ec7c:	je     0x40ecb1
  40ec7e:	jb     0x40ecc3
  40ec80:	dec    esi
  40ec81:	mul    bl
  40ec83:	push   ss
  40ec84:	in     al,dx
  40ec85:	mov    eax,0x3a5e9177
  40ec8a:	popa   
  40ec8b:	ins    DWORD PTR es:[edi],dx
  40ec8c:	inc    edi
  40ec8d:	and    esp,DWORD PTR [ebx-0x1]
  40ec90:	or     bl,BYTE PTR [edx]
  40ec92:	int    0x8e
  40ec94:	add    dl,ch
  40ec96:	xor    esi,ebx
  40ec98:	push   ebp
  40ec99:	imul   eax,DWORD PTR [ebp-0x2950c315],0x33
  40eca0:	retf   
  40eca1:	cmp    al,0x1e
  40eca3:	pop    ds
  40eca4:	cmp    esp,DWORD PTR [ecx+0x56]
  40eca7:	mov    ah,0x99
  40eca9:	rol    BYTE PTR [eax],cl
  40ecab:	or     dh,dl
  40ecad:	imul   esi,edi,0x8efd94d
  40ecb3:	mov    dl,0xcb
  40ecb5:	outs   dx,BYTE PTR ds:[esi]
  40ecb6:	sbb    ebp,0x22
  40ecb9:	jae    0x40eca9
  40ecbb:	shl    BYTE PTR [ebp-0x58],cl
  40ecbe:	(bad)  
  40ecbf:	push   ebx
  40ecc0:	iret   
  40ecc1:	aam    0x77
  40ecc3:	xor    ah,BYTE PTR [edi]
  40ecc5:	js     0x40ec84
  40ecc7:	out    0x77,al
  40ecc9:	adc    BYTE PTR [esi],dh
  40eccb:	cmp    cl,BYTE PTR [edx]
  40eccd:	inc    edi
  40ecce:	pop    esi
  40eccf:	dec    ebx
  40ecd0:	sub    edi,0x4989913b
  40ecd6:	out    0x4d,al
  40ecd8:	jno    0x40ec7b
  40ecda:	call   0xdb70063d
  40ecdf:	xchg   BYTE PTR [eax-0x10],dl
  40ece2:	push   0xffffffc2
  40ece4:	mov    edx,0x3efc4f9c
  40ece9:	pop    esp
  40ecea:	pop    es
  40eceb:	inc    esp
  40ecec:	sti    
  40eced:	sub    al,0xd9
  40ecef:	pop    edx
  40ecf0:	or     al,0x2a
  40ecf2:	xchg   esp,eax
  40ecf3:	data16 mov bl,0x0
  40ecf6:	mov    BYTE PTR [ecx+0x24],dl
  40ecf9:	add    ebx,DWORD PTR [esi]
  40ecfb:	mov    ebx,0xcdde321d
  40ed00:	sub    eax,0xd04efbf1
  40ed05:	dec    edi
  40ed06:	stos   DWORD PTR es:[edi],eax
  40ed07:	mov    ch,0x75
  40ed09:	out    dx,eax
  40ed0a:	add    ah,al
  40ed0c:	into   
  40ed0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed0e:	mov    edx,ebx
  40ed10:	ja     0x40ed57
  40ed12:	std    
  40ed13:	aad    0xe7
  40ed15:	adc    DWORD PTR [edi],0x616c5f76
  40ed1b:	pop    es
  40ed1c:	iret   
  40ed1d:	and    al,0x98
  40ed1f:	mov    ebp,0x26c13ce0
  40ed24:	push   esp
  40ed25:	pop    edi
  40ed26:	rcl    DWORD PTR [ebp+0x46554b77],1
  40ed2c:	xlat   BYTE PTR ds:[ebx]
  40ed2d:	inc    esp
  40ed2e:	dec    edx
  40ed2f:	mov    edi,0x48833296
  40ed34:	in     eax,dx
  40ed35:	mov    bh,0x60
  40ed37:	aad    0x23
  40ed39:	bound  esp,QWORD PTR [ecx]
  40ed3b:	jae    0x40ece7
  40ed3d:	repz inc edx
  40ed3f:	push   0x56
  40ed41:	jle    0x40ed06
  40ed43:	out    0xee,al
  40ed45:	mov    fs,WORD PTR cs:[esi+0x7a]
  40ed49:	xchg   DWORD PTR [ecx+0x4],ecx
  40ed4c:	push   edi
  40ed4d:	pop    eax
  40ed4e:	inc    eax
  40ed4f:	retf   
  40ed50:	push   eax
  40ed51:	xchg   edi,eax
  40ed52:	mov    ch,0x92
  40ed54:	cmp    DWORD PTR [edx+ebx*2-0x56a8537a],ecx
  40ed5b:	mov    fs,ecx
  40ed5d:	loop   0x40ed7d
  40ed5f:	add    eax,0xdc622c20
  40ed64:	sbb    edx,0x2f
  40ed67:	std    
  40ed68:	jne    0x40edbe
  40ed6a:	call   0x9c18:0x37e82731
  40ed71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed72:	pop    DWORD PTR [ebx-0x5533706d]
  40ed78:	std    
  40ed79:	pop    DWORD PTR [ecx-0x2c41ceaa]
  40ed7f:	xchg   edi,eax
  40ed80:	jecxz  0x40ed56
  40ed82:	ffree  st(2)
  40ed84:	les    edx,FWORD PTR [ecx+0x180f3e81]
  40ed8a:	ins    DWORD PTR es:[edi],dx
  40ed8b:	mov    ebx,0x21a381ca
  40ed90:	icebp  
  40ed91:	or     ebp,DWORD PTR [ebp+0x45]
  40ed94:	loopne 0x40edd7
  40ed96:	out    dx,al
  40ed97:	inc    eax
  40ed98:	aas    
  40ed99:	mov    ds:0x577aab79,al
  40ed9e:	dec    edx
  40ed9f:	stos   BYTE PTR es:[edi],al
  40eda0:	ret    
  40eda1:	xor    ebx,edx
  40eda3:	pop    es
  40eda4:	adc    BYTE PTR [esi-0x25637eaf],0x3f
  40edab:	mov    ch,al
  40edad:	retf   
  40edae:	mov    ebx,DWORD PTR [ecx+0x559ada3e]
  40edb4:	leave  
  40edb5:	fisubr DWORD PTR [ebp-0x7]
  40edb8:	mov    bh,0x94
  40edba:	sbb    eax,0x4b3d1a91
  40edbf:	shr    al,cl
  40edc1:	fsubr  DWORD PTR [eax+0x3a]
  40edc4:	push   eax
  40edc5:	into   
  40edc6:	arpl   WORD PTR [edi+0x199b46f3],di
  40edcc:	jns    0xacc4d477
  40edd2:	push   ebx
  40edd3:	sbb    esp,eax
  40edd5:	sar    BYTE PTR [edx],0xb7
  40edd8:	sbb    eax,0xd834124a
  40eddd:	rcr    BYTE PTR [ebp+0x8],1
  40ede0:	ins    BYTE PTR es:[edi],dx
  40ede1:	std    
  40ede2:	xchg   ecx,eax
  40ede3:	mov    dl,0xa0
  40ede5:	cdq    
  40ede6:	inc    eax
  40ede7:	jp     0x40edb8
  40ede9:	push   es
  40edea:	dec    ebp
  40edeb:	pusha  
  40edec:	or     ebx,DWORD PTR [esi-0x3c808b37]
  40edf2:	or     al,0x69
  40edf4:	sub    BYTE PTR [edx+ecx*4-0x23],al
  40edf8:	and    eax,0xbeebb522
  40edfd:	cmp    eax,0x58e5e406
  40ee02:	scas   al,BYTE PTR es:[edi]
  40ee03:	pusha  
  40ee04:	fwait
  40ee05:	ins    DWORD PTR es:[edi],dx
  40ee06:	push   esi
  40ee07:	sar    BYTE PTR [edi-0x2a3a0ecd],0x4b
  40ee0e:	pop    es
  40ee0f:	call   0x832ea56c
  40ee14:	imul   ah
  40ee16:	mov    bh,0xee
  40ee18:	xor    BYTE PTR ds:[ecx-0x54],cl
  40ee1c:	mov    ebx,DWORD PTR [ebx-0x67]
  40ee1f:	fistp  QWORD PTR [edx+0x66]
  40ee22:	push   ebx
  40ee23:	and    al,0xa5
  40ee25:	sar    BYTE PTR [esi+0x57581850],0x1e
  40ee2c:	and    eax,0xf57ab105
  40ee31:	mov    eax,0x634b8fca
  40ee36:	push   ecx
  40ee37:	mov    WORD PTR [ecx+0x391fdef9],gs
  40ee3d:	popa   
  40ee3e:	fadd   QWORD PTR [eax+0x52]
  40ee41:	pop    ebp
  40ee42:	int3   
  40ee43:	add    DWORD PTR [esi+0x1521f3c7],ebp
  40ee49:	pop    ss
  40ee4a:	rol    BYTE PTR [ebx+0x7a],1
  40ee4d:	and    al,0x3a
  40ee4f:	in     al,0xb8
  40ee51:	pop    edx
  40ee52:	(bad)  
  40ee53:	jmp    0xbd67:0x4ed41697
  40ee5a:	jle    0x40ee72
  40ee5c:	scas   al,BYTE PTR es:[edi]
  40ee5d:	cmp    bl,BYTE PTR [edi-0x55]
  40ee60:	enter  0xba47,0xff
  40ee64:	cmp    esi,DWORD PTR [ecx-0x64]
  40ee67:	in     al,dx
  40ee68:	jg     0x40ee8e
  40ee6a:	ror    cl,1
  40ee6c:	cmp    esp,DWORD PTR [edx]
  40ee6e:	xor    dl,dl
  40ee70:	sbb    eax,0x91e14488
  40ee75:	lods   al,BYTE PTR ds:[esi]
  40ee76:	fisubr DWORD PTR [eax+0x45]
  40ee79:	xchg   ebp,eax
  40ee7a:	mov    cl,0xe7
  40ee7c:	and    bl,BYTE PTR [esi+ebx*4-0x5b]
  40ee80:	in     eax,dx
  40ee81:	ret    
  40ee82:	ficom  DWORD PTR [esi+0x5b]
  40ee85:	jne    0x40eec8
  40ee87:	add    eax,0x471e1e5f
  40ee8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8d:	dec    esi
  40ee8e:	sbb    edi,DWORD PTR [eax]
  40ee90:	(bad)  
  40ee91:	and    dl,al
  40ee93:	ss clc 
  40ee95:	fs jg  0x40ee9a
  40ee98:	daa    
  40ee99:	jb     0x40ee7d
  40ee9b:	or     esi,ebp
  40ee9d:	xor    al,0xd7
  40ee9f:	jae    0x40ee66
  40eea1:	test   eax,0xe871b3dd
  40eea6:	lahf   
  40eea7:	std    
  40eea8:	ret    0xcb19
  40eeab:	ffreep st(4)
  40eead:	lods   al,BYTE PTR ds:[esi]
  40eeae:	jge    0x40eedf
  40eeb0:	and    ch,BYTE PTR [ebp+0x5b]
  40eeb3:	push   0xefb19a65
  40eeb8:	into   
  40eeb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeba:	out    dx,al
  40eebb:	adc    BYTE PTR [edi+0x27],cl
  40eebe:	jns    0x40ef38
  40eec0:	je     0x40ef3a
  40eec2:	jns    0x40ef0a
  40eec4:	jle    0x40ef17
  40eec6:	mov    eax,ebp
  40eec8:	out    dx,eax
  40eec9:	xor    eax,0xb2dd9893
  40eece:	stc    
  40eecf:	xchg   ebx,eax
  40eed0:	(bad)  
  40eed1:	mov    edi,0xde3c0a3b
  40eed6:	int3   
  40eed7:	jmp    0xd6efd716
  40eedc:	scas   eax,DWORD PTR es:[edi]
  40eedd:	mov    esp,0x52c5d995
  40eee2:	push   es
  40eee3:	das    
  40eee4:	xor    eax,DWORD PTR [esi-0x58718c45]
  40eeea:	pushf  
  40eeeb:	shl    BYTE PTR [esi-0x10],1
  40eeee:	mov    edx,0x2f266848
  40eef3:	test   eax,0x63b672b7
  40eef8:	fild   QWORD PTR [eax+0x186b7eec]
  40eefe:	push   0x99fcf3db
  40ef03:	jnp    0x40ee96
  40ef05:	inc    ebp
  40ef06:	push   ecx
  40ef07:	scas   al,BYTE PTR es:[edi]
  40ef08:	mov    edx,0x7c8809c2
  40ef0e:	imul   ebp,ebx,0xffffffcb
  40ef11:	aad    0x17
  40ef13:	push   ebx
  40ef14:	fdivr  QWORD PTR [ebp+0xa]
  40ef17:	(bad)  
  40ef18:	xor    ch,ah
  40ef1a:	(bad)  
  40ef1b:	mov    ch,0x5c
  40ef1d:	and    edi,DWORD PTR [edx-0x5b149eb8]
  40ef23:	jne    0x40ef69
  40ef25:	int3   
  40ef26:	fwait
  40ef27:	push   ss
  40ef28:	add    eax,0x106831b4
  40ef2d:	xor    DWORD PTR [ecx-0x13],ebp
  40ef30:	mov    ds:0xcc39108e,eax
  40ef35:	mov    esi,DWORD PTR [eax-0x27447576]
  40ef3b:	inc    eax
  40ef3c:	add    al,BYTE PTR [ebx+0x61e71164]
  40ef42:	daa    
  40ef43:	fdiv   DWORD PTR ds:0xd26e230d
  40ef49:	stc    
  40ef4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef4b:	cmc    
  40ef4c:	in     eax,0x69
  40ef4e:	dec    edx
  40ef4f:	cli    
  40ef50:	stos   BYTE PTR es:[edi],al
  40ef51:	jle    0x40efd2
  40ef53:	add    eax,0x316175bb
  40ef58:	jo     0x40ef11
  40ef5a:	rcr    DWORD PTR [ebp+0x7a3e153d],1
  40ef60:	shl    DWORD PTR [edi],cl
  40ef62:	cmp    DWORD PTR [esi+0x56],ebp
  40ef65:	cmp    BYTE PTR [ebp-0x20788637],ch
  40ef6b:	sar    eax,cl
  40ef6d:	lods   eax,DWORD PTR ds:[esi]
  40ef6e:	leave  
  40ef6f:	push   ecx
  40ef70:	cmp    BYTE PTR [esi-0x43],ah
  40ef73:	ins    BYTE PTR es:[edi],dx
  40ef74:	cmp    eax,esp
  40ef76:	out    dx,eax
  40ef77:	cmp    al,0x4c
  40ef79:	shl    DWORD PTR [ebx],1
  40ef7b:	imul   ecx,DWORD PTR [esi+0x51],0x6c
  40ef7f:	add    dh,bh
  40ef81:	shr    BYTE PTR [ecx-0x482ca390],1
  40ef87:	sar    DWORD PTR [edx-0x6ec162cd],1
  40ef8d:	out    dx,eax
  40ef8e:	sbb    dl,bh
  40ef90:	cli    
  40ef91:	repz adc eax,0x29e9f421
  40ef97:	es jecxz 0x40ef9e
  40ef9a:	ins    DWORD PTR es:[edi],dx
  40ef9b:	xchg   DWORD PTR [ebx-0x38],ecx
  40ef9e:	mov    ecx,0xce194685
  40efa3:	lock lahf 
  40efa5:	push   es
  40efa6:	adc    cl,0x14
  40efa9:	jno    0x40ef5e
  40efab:	in     al,dx
  40efac:	cmp    DWORD PTR [ebx+0x1e371c68],edx
  40efb2:	shl    DWORD PTR fs:[ecx-0x3e],1
  40efb6:	call   0x154:0xf0d524b2
  40efbd:	xlat   BYTE PTR ds:[ebx]
  40efbe:	jns    0x40efc9
  40efc0:	jg     0x40efb6
  40efc2:	mov    ch,0x4a
  40efc4:	adc    DWORD PTR [eax+0x7f0e4dab],ebp
  40efca:	mov    eax,ds:0x155e1012
  40efcf:	inc    ecx
  40efd0:	xchg   ebx,eax
  40efd1:	pop    ecx
  40efd2:	enter  0x6c49,0xbc
  40efd6:	or     al,0xc7
  40efd8:	xchg   edx,eax
  40efd9:	push   es
  40efda:	popa   
  40efdb:	das    
  40efdc:	fisttp QWORD PTR [eax-0x26]
  40efdf:	stos   DWORD PTR es:[edi],eax
  40efe0:	out    dx,eax
  40efe1:	cld    
  40efe2:	push   0x41
  40efe4:	sbb    eax,0xa873b60
  40efe9:	sub    bh,dh
  40efeb:	aaa    
  40efec:	sbb    eax,0x496e1d15
  40eff1:	xor    al,0xaa
  40eff3:	fwait
  40eff4:	jp     0x40f021
  40eff6:	ss push esp
  40eff8:	in     al,dx
  40eff9:	lahf   
  40effa:	daa    
  40effb:	bound  esi,QWORD PTR [edi]
  40effd:	sbb    dl,BYTE PTR ds:0x8e014309
  40f003:	clc    
  40f004:	loopne 0x40efd2
  40f006:	daa    
  40f007:	out    0x73,al
  40f009:	es pop ecx
  40f00b:	push   ds
  40f00c:	xor    ecx,DWORD PTR [ebx+0x1a]
  40f00f:	in     eax,0x6e
  40f011:	sbb    eax,0xc41ffbd6
  40f016:	hlt    
  40f017:	out    dx,al
  40f018:	cmp    ebp,0xfffffffd
  40f01b:	mov    ebx,0x1c97c91b
  40f020:	or     edi,DWORD PTR [edi]
  40f022:	mov    cl,BYTE PTR [eax+ebp*1-0x35]
  40f026:	shl    cl,0xa6
  40f029:	add    al,0x81
  40f02b:	pop    ebp
  40f02c:	sub    DWORD PTR [ecx+0xf],esp
  40f02f:	pop    ebp
  40f030:	sahf   
  40f031:	mov    ds:0x5d3ed74e,al
  40f036:	adc    bh,BYTE PTR [eax]
  40f038:	(bad)  
  40f039:	xchg   ebp,eax
  40f03a:	push   edx
  40f03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03c:	mov    esp,DWORD PTR [ecx]
  40f03e:	and    al,0xa2
  40f040:	jne    0x40f046
  40f042:	enter  0xf601,0xe2
  40f046:	rol    DWORD PTR [ebx-0x3c4fd38c],cl
  40f04c:	aaa    
  40f04d:	(bad)  
  40f04e:	lock adc al,0x4c
  40f051:	retf   0x91b0
  40f054:	inc    ecx
  40f055:	xchg   ecx,eax
  40f056:	mov    al,0xe7
  40f058:	scas   eax,DWORD PTR es:[edi]
  40f059:	in     al,dx
  40f05a:	inc    esi
  40f05b:	sbb    eax,0x6a54fe92
  40f060:	push   cs
  40f061:	add    DWORD PTR [ebp-0x6651fff0],edx
  40f067:	mov    ah,0x3d
  40f069:	(bad)  
  40f06a:	lods   eax,DWORD PTR ds:[esi]
  40f06b:	sub    al,0x3c
  40f06d:	sub    al,BYTE PTR [ebp+0x66d533d4]
  40f073:	lock push es
  40f075:	inc    esi
  40f076:	das    
  40f077:	aas    
  40f078:	mov    dl,0x9c
  40f07a:	arpl   WORD PTR [eax+0x3c],bx
  40f07d:	xor    eax,0xfaf53e88
  40f082:	dec    ebp
  40f083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f084:	aas    
  40f085:	jle    0x40f0d9
  40f087:	mov    ebx,0xf4b05fb6
  40f08c:	(bad)  
  40f08d:	jns    0x40f0d0
  40f08f:	jae    0x40f0ab
  40f091:	dec    cx
  40f093:	cmp    bl,dh
  40f095:	and    eax,0xd62162ef
  40f09a:	mov    al,ds:0xb94d40ad
  40f09f:	shr    DWORD PTR [esp+edx*1-0x26],0x2
  40f0a4:	jns    0x40f116
  40f0a6:	js     0x40f06f
  40f0a8:	dec    ecx
  40f0a9:	jbe    0x40f0e8
  40f0ab:	(bad)  
  40f0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ad:	add    edx,DWORD PTR [ebx-0x688814b3]
  40f0b3:	cmp    DWORD PTR [ebp+0x57a5ec63],edx
  40f0b9:	cmp    eax,0x7422925b
  40f0be:	cmp    DWORD PTR [edi+0xd],edx
  40f0c1:	xchg   DWORD PTR [edi-0xa],edx
  40f0c4:	jo     0x40f0f3
  40f0c6:	adc    BYTE PTR [edi-0x70480932],0x85
  40f0cd:	mov    al,0x87
  40f0cf:	retf   0xf590
  40f0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d3:	loop   0x40f080
  40f0d5:	push   cs
  40f0d6:	sbb    bl,BYTE PTR [esi-0x3]
  40f0d9:	in     al,dx
  40f0da:	jmp    0x40f09a
  40f0dc:	push   ecx
  40f0dd:	add    eax,0x79453eca
  40f0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e3:	or     eax,0xa57c1dab
  40f0e8:	icebp  
  40f0e9:	inc    DWORD PTR [edx]
  40f0eb:	aam    0xe7
  40f0ed:	xchg   ecx,eax
  40f0ee:	pop    ebp
  40f0ef:	jg     0x40f0f9
  40f0f1:	or     al,0x88
  40f0f3:	sub    eax,0x96afbacc
  40f0f8:	adc    al,0xb1
  40f0fa:	stc    
  40f0fb:	pop    esi
  40f0fc:	mov    ds,WORD PTR [ebx+0x35]
  40f0ff:	iret   
  40f100:	sub    bh,BYTE PTR [esi-0x47da26d6]
  40f106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f107:	dec    esp
  40f108:	jae    0x40f169
  40f10a:	sar    BYTE PTR [eax+0x7f7d3a87],0x3e
  40f111:	ja     0x40f0b6
  40f113:	scas   al,BYTE PTR es:[edi]
  40f114:	add    eax,0x85d370f2
  40f119:	mov    al,ds:0xc02eed26
  40f11e:	jge    0x40f15b
  40f120:	push   ecx
  40f121:	ja     0x40f162
  40f123:	test   BYTE PTR [eax],0x3b
  40f126:	mov    WORD PTR [edi-0x56e7210a],fs
  40f12c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12e:	xchg   ecx,eax
  40f12f:	fcomp  st(7)
  40f131:	and    ecx,DWORD PTR [ebx+0x44]
  40f134:	fwait
  40f135:	in     al,0xbc
  40f137:	push   es
  40f138:	mov    cl,bh
  40f13a:	cmp    DWORD PTR [ebx+0x1e831f56],eax
  40f140:	push   ebp
  40f141:	aas    
  40f142:	jle    0x40f138
  40f144:	fist   DWORD PTR [eax+0x7f845e70]
  40f14a:	fidivr DWORD PTR [ebp+0x6c]
  40f14d:	test   al,0xa2
  40f14f:	and    eax,0x47517991
  40f154:	data16 jp 0x40f112
  40f157:	ret    0x369f
  40f15a:	test   al,0x8d
  40f15c:	das    
  40f15d:	enter  0x394e,0x36
  40f161:	shl    bl,1
  40f163:	sbb    al,0xff
  40f165:	test   DWORD PTR [ecx+0x5a],edi
  40f168:	mov    dl,0xc1
  40f16a:	pop    es
  40f16b:	dec    ecx
  40f16c:	loope  0x40f190
  40f16e:	cwde   
  40f16f:	push   0x36
  40f171:	xor    ebx,esi
  40f173:	ss inc eax
  40f175:	cdq    
  40f176:	jns    0x40f16b
  40f178:	and    BYTE PTR [edx+0x9807091],ah
  40f17e:	test   DWORD PTR [ebx+edi*2],edx
  40f181:	cld    
  40f182:	loope  0x40f122
  40f184:	sub    DWORD PTR [eax+ecx*1],esi
  40f187:	popa   
  40f188:	jbe    0x40f1d5
  40f18a:	mov    fs,WORD PTR [eax]
  40f18c:	(bad)  
  40f18d:	repnz and edi,edi
  40f190:	jmp    0x72b2e33a
  40f195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f196:	gs or  al,0x76
  40f199:	lahf   
  40f19a:	test   eax,0xda646132
  40f19f:	loop   0x40f15e
  40f1a1:	inc    eax
  40f1a2:	ja     0x40f138
  40f1a4:	and    al,0xe9
  40f1a6:	jne    0x40f12d
  40f1a8:	mov    bh,0xf8
  40f1aa:	add    esi,DWORD PTR [edx]
  40f1ac:	pop    edx
  40f1ad:	ret    0x43c7
  40f1b0:	arpl   WORD PTR [edi+0x67],bx
  40f1b3:	out    dx,al
  40f1b4:	xchg   dh,dh
  40f1b6:	sbb    DWORD PTR [eax-0x33],ebx
  40f1b9:	xor    DWORD PTR ds:0x877df120,0x69
  40f1c0:	pop    esi
  40f1c1:	add    BYTE PTR [edi+0x11476292],bh
  40f1c7:	popa   
  40f1c8:	push   ss
  40f1c9:	ror    al,cl
  40f1cb:	fcmovnbe st,st(2)
  40f1cd:	mov    al,0x10
  40f1d0:	es mov bl,0x62
  40f1d3:	sub    eax,0xed2240e0
  40f1d8:	rsqrtps xmm4,XMMWORD PTR ds:0x920a6df6
  40f1df:	or     al,0xdd
  40f1e1:	rcl    DWORD PTR [ebp+0x2e04f218],0xe
  40f1e8:	sbb    ebp,ecx
  40f1ea:	inc    esi
  40f1eb:	push   es
  40f1ec:	xchg   ebp,eax
  40f1ed:	rcl    BYTE PTR [ecx+0x69],cl
  40f1f0:	clc    
  40f1f1:	cli    
  40f1f2:	mov    bh,0xe1
  40f1f4:	sub    al,0xdd
  40f1f6:	push   eax
  40f1f7:	xchg   edx,eax
  40f1f8:	push   ss
  40f1f9:	add    eax,DWORD PTR [ebp-0x5f]
  40f1fc:	daa    
  40f1fd:	jge    0x40f25c
  40f1ff:	sub    ebp,0xf3902e6f
  40f205:	icebp  
  40f206:	leave  
  40f207:	cmp    BYTE PTR [ebx-0x10],al
  40f20a:	dec    esp
  40f20b:	imul   esi,DWORD PTR [edx+0x6287f210],0xfffffffe
  40f212:	sub    dl,BYTE PTR [edi]
  40f214:	ds mov esp,0xc6db0eaa
  40f21a:	ret    
  40f21b:	outs   dx,BYTE PTR ds:[esi]
  40f21c:	jo     0x40f276
  40f21e:	inc    ebp
  40f21f:	jp     0x40f281
  40f221:	jne    0x40f1c9
  40f223:	cmc    
  40f224:	test   eax,0xe5c351a7
  40f229:	push   esi
  40f22a:	xchg   edi,eax
  40f22b:	mov    ebx,0x519a94d3
  40f230:	jp     0x40f1bb
  40f232:	dec    edi
  40f233:	mov    eax,DWORD PTR [edi]
  40f235:	dec    edi
  40f237:	sar    ebx,0xd3
  40f23a:	dec    ecx
  40f23b:	add    DWORD PTR [esi],ebp
  40f23d:	ja     0x40f2b0
  40f23f:	pop    es
  40f240:	outs   dx,BYTE PTR ds:[esi]
  40f241:	mov    dh,al
  40f243:	mov    esp,0x6626cf11
  40f248:	outs   dx,BYTE PTR ds:[esi]
  40f249:	jne    0x40f245
  40f24b:	imul   DWORD PTR [edx]
  40f24d:	cmp    esp,esp
  40f24f:	jmp    0xc2a517e0
  40f254:	mov    al,ds:0x52049165
  40f259:	sahf   
  40f25a:	repz sti 
  40f25c:	aam    0x73
  40f25e:	loopne 0x40f213
  40f260:	mov    ah,0xc
  40f262:	adc    al,0x66
  40f264:	mov    ds:0x3b6ac2a0,al
  40f269:	in     eax,dx
  40f26a:	pop    esi
  40f26b:	cld    
  40f26c:	or     ah,BYTE PTR [esi]
  40f26e:	int    0x8d
  40f270:	bound  eax,QWORD PTR [ecx-0xd]
  40f273:	scas   al,BYTE PTR es:[edi]
  40f274:	add    DWORD PTR [eax+0x59],0x743bce57
  40f27b:	pusha  
  40f27c:	call   0x5b2ee6c7
  40f281:	jg     0x40f2b0
  40f283:	cld    
  40f284:	inc    ebp
  40f285:	jle    0x40f2a9
  40f287:	aam    0x9a
  40f289:	jle    0x40f27f
  40f28b:	cli    
  40f28c:	std    
  40f28d:	mov    ch,0x4d
  40f28f:	inc    edi
  40f290:	loop   0x40f22d
  40f292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f293:	mov    DWORD PTR [ecx-0x38],edx
  40f296:	xor    al,0xa5
  40f298:	(bad)  [ebx-0x18]
  40f29b:	aaa    
  40f29c:	popa   
  40f29d:	cdq    
  40f29e:	add    dh,BYTE PTR [edi+0x5281e2fa]
  40f2a4:	out    dx,eax
  40f2a5:	jmp    0x7913ee3a
  40f2aa:	lea    ecx,[ecx-0x5b]
  40f2ad:	dec    ecx
  40f2ae:	cmc    
  40f2af:	icebp  
  40f2b0:	cmp    bh,dh
  40f2b2:	mov    al,0xf3
  40f2b4:	xor    ebx,DWORD PTR [esi]
  40f2b6:	jae    0x40f25e
  40f2b8:	jge    0x40f24e
  40f2ba:	and    edi,eax
  40f2bc:	jb     0x40f246
  40f2be:	das    
  40f2bf:	dec    ebp
  40f2c0:	dec    edi
  40f2c1:	mov    al,0x38
  40f2c3:	mov    eax,0x1cf66ed0
  40f2c8:	into   
  40f2c9:	sahf   
  40f2ca:	ret    0x9a78
  40f2cd:	shr    BYTE PTR [edi],1
  40f2cf:	cdq    
  40f2d0:	stc    
  40f2d1:	push   ebx
  40f2d2:	loope  0x40f324
  40f2d4:	xor    WORD PTR [ebp+0x38d5d74d],bp
  40f2db:	adc    eax,0xa68a51e7
  40f2e0:	lahf   
  40f2e1:	arpl   WORD PTR [ecx+0x79],bp
  40f2e4:	xor    dh,0x35
  40f2e7:	(bad)  
  40f2e8:	xor    DWORD PTR [edi],eax
  40f2ea:	mov    ecx,DWORD PTR [edx+0x20]
  40f2ed:	push   ss
  40f2ee:	and    eax,0x131d18cf
  40f2f3:	push   0x51
  40f2f5:	fwait
  40f2f6:	inc    ebp
  40f2f7:	ss jmp 0xee36f33e
  40f2fd:	call   0x95e0:0x21dd46ab
  40f304:	and    ecx,DWORD PTR [esi+edi*8+0x18]
  40f308:	fwait
  40f309:	mov    ch,0xcf
  40f30b:	in     eax,0xf3
  40f30d:	push   0xffffffc2
  40f30f:	je     0x40f30c
  40f311:	(bad)  
  40f312:	iret   
  40f313:	in     eax,0x9e
  40f315:	shr    BYTE PTR [eax-0xb],1
  40f318:	xor    BYTE PTR [ecx+0x74],dh
  40f31b:	xor    eax,0xc1412e3e
  40f320:	sub    eax,0xb1fdde26
  40f325:	lea    edx,[eax+ebx*8]
  40f328:	clc    
  40f329:	xlat   BYTE PTR ds:[ebx]
  40f32a:	pop    ebp
  40f32b:	lods   al,BYTE PTR ds:[esi]
  40f32c:	aaa    
  40f32d:	cld    
  40f32e:	jo     0x40f38d
  40f330:	xchg   edi,eax
  40f331:	inc    ecx
  40f332:	jmp    0x24d6988
  40f337:	outs   dx,DWORD PTR ds:[esi]
  40f338:	jl     0x40f39f
  40f33a:	pop    ebx
  40f33b:	test   BYTE PTR [edi+0x33e11ea2],0x85
  40f342:	inc    ebp
  40f343:	sti    
  40f344:	push   eax
  40f345:	fdivr  st(5),st
  40f347:	call   0xfdea:0xcc04b94f
  40f34e:	mov    eax,DWORD PTR [ebp-0x533623f2]
  40f354:	loop   0x40f350
  40f356:	sub    al,0xeb
  40f358:	jecxz  0x40f369
  40f35a:	sbb    DWORD PTR [esi+esi*8],ebx
  40f35d:	cmp    DWORD PTR [ebp+0x55],ebp
  40f360:	jae    0x40f385
  40f362:	mov    esi,0x2eb15263
  40f367:	and    edi,DWORD PTR [edi]
  40f369:	in     eax,0x6
  40f36b:	out    0x5e,al
  40f36d:	adc    al,0xb8
  40f36f:	xchg   ecx,eax
  40f370:	mov    ds:0xdbf561ba,eax
  40f375:	imul   ecx,eax,0xe63f4b9d
  40f37b:	(bad)  
  40f37c:	sub    ecx,DWORD PTR [edx-0x2]
  40f37f:	or     ah,ah
  40f381:	cs push ds
  40f383:	jb     0x40f3fd
  40f385:	scas   al,BYTE PTR es:[edi]
  40f386:	shl    BYTE PTR [ebx*4+0x5300b786],1
  40f38d:	jl     0x40f353
  40f38f:	mov    BYTE PTR [ecx-0x80],ch
  40f392:	inc    ebp
  40f393:	pop    esp
  40f394:	outs   dx,DWORD PTR ds:[esi]
  40f395:	push   esp
  40f396:	xchg   ebx,eax
  40f397:	sbb    DWORD PTR [edx-0xf30176d],eax
  40f39d:	sub    esp,DWORD PTR [eax+0x590d2cd]
  40f3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3a4:	xchg   DWORD PTR [edx+ebx*4],ecx
  40f3a7:	ds push edx
  40f3a9:	ds jle 0x40f334
  40f3ac:	xor    BYTE PTR [ecx-0x5f9010e0],dl
  40f3b2:	sub    dl,BYTE PTR [edx]
  40f3b4:	pop    ss
  40f3b5:	pop    esp
  40f3b6:	sub    eax,0x8d3ed56a
  40f3bb:	(bad)  
  40f3bc:	jp     0x40f40e
  40f3be:	jb     0x40f3e8
  40f3c0:	xlat   BYTE PTR ds:[ebx]
  40f3c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3c2:	or     edx,DWORD PTR [esi]
  40f3c4:	in     al,0xdc
  40f3c6:	xor    al,0x22
  40f3c8:	mov    ds:0xcedae807,eax
  40f3cd:	fs pushf 
  40f3cf:	cld    
  40f3d0:	cmp    dh,BYTE PTR [ecx]
  40f3d2:	lods   al,BYTE PTR ds:[esi]
  40f3d3:	or     edi,esi
  40f3d5:	jmp    0x760e9ebe
  40f3da:	gs test eax,0x4dd0b349
  40f3e0:	test   eax,0x8454b579
  40f3e5:	ficomp WORD PTR [ebx]
  40f3e7:	lahf   
  40f3e8:	cdq    
  40f3e9:	aas    
  40f3ea:	lea    eax,[ebx-0x4d7bef45]
  40f3f0:	out    0x92,eax
  40f3f2:	mov    ch,0x9c
  40f3f4:	call   0x1e01ee0c
  40f3f9:	pop    esp
  40f3fa:	add    BYTE PTR [esi+0x26],0x81
  40f3fe:	jbe    0x40f3c8
  40f400:	push   ebp
  40f401:	mov    ecx,DWORD PTR [ecx+esi*1]
  40f404:	loope  0x40f41c
  40f406:	sti    
  40f407:	mov    ebx,0x9924f44f
  40f40c:	jne    0x40f391
  40f40e:	retf   0x60e
  40f411:	retf   
  40f412:	loopne 0x40f48f
  40f414:	not    DWORD PTR [esi]
  40f416:	dec    ecx
  40f417:	retf   
  40f418:	mov    ds:0x16eba4d4,eax
  40f41d:	and    ebx,edx
  40f41f:	add    BYTE PTR [edx+esi*4],bl
  40f422:	test   al,0xea
  40f425:	outs   dx,DWORD PTR ds:[esi]
  40f426:	sub    edi,edi
  40f428:	int3   
  40f429:	and    ebp,eax
  40f42b:	jge    0x40f3b7
  40f42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f42e:	int    0xd5
  40f430:	(bad)  
  40f431:	mov    DWORD PTR [edi-0x10c233ab],eax
  40f437:	rcr    DWORD PTR [esi-0x76cadb80],0xd5
  40f43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f43f:	repnz bound eax,QWORD PTR [ebx+0x392384e5]
  40f446:	push   edi
  40f447:	xor    ebp,eax
  40f449:	mov    al,ds:0x561f77bf
  40f44e:	or     ecx,esp
  40f450:	adc    bh,bl
  40f452:	cld    
  40f453:	xchg   ebp,eax
  40f454:	imul   eax,DWORD PTR [esi+0x5f47d928],0x42
  40f45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45c:	popa   
  40f45d:	adc    cl,BYTE PTR [ebx]
  40f45f:	retf   
  40f460:	and    BYTE PTR ds:0xe492727b,bh
  40f466:	retf   0x2269
  40f469:	jg     0x40f3f2
  40f46b:	mov    eax,0xc57e16f2
  40f470:	push   eax
  40f471:	cwde   
  40f472:	cmp    ebp,DWORD PTR [ebx-0x3cace458]
  40f478:	adc    dl,BYTE PTR [eax-0x45]
  40f47b:	mov    edi,0xda897a2
  40f480:	data16 shl ch,cl
  40f483:	sbb    BYTE PTR [edi],ah
  40f485:	fcom   DWORD PTR [edx]
  40f487:	or     al,0x28
  40f489:	cmp    al,0x44
  40f48b:	dec    eax
  40f48c:	mov    cl,0xc2
  40f48e:	lods   al,BYTE PTR fs:[esi]
  40f490:	xlat   BYTE PTR ds:[ebx]
  40f491:	or     DWORD PTR [esi+eax*2],esi
  40f494:	push   ebp
  40f495:	test   bh,cl
  40f497:	ja     0x40f4f1
  40f499:	mov    dl,0xde
  40f49b:	test   BYTE PTR [edx+0x5e],bl
  40f49e:	shl    DWORD PTR [ebx-0x7a],1
  40f4a1:	mov    ?,WORD PTR [ecx+0x128c62c9]
  40f4a7:	jb     0x40f4df
  40f4a9:	cmp    ebx,DWORD PTR es:[ecx]
  40f4ac:	add    al,0xc6
  40f4ae:	mov    cl,0x97
  40f4b0:	hlt    
  40f4b1:	inc    edi
  40f4b2:	sub    eax,0xb78dda27
  40f4b7:	pop    ebx
  40f4b8:	dec    ecx
  40f4b9:	cwde   
  40f4ba:	push   0x7a2a0c02
  40f4bf:	mov    ch,0xf8
  40f4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4c2:	pop    eax
  40f4c3:	cmp    eax,0xc65bd2fe
  40f4c8:	out    0x9a,al
  40f4ca:	cdq    
  40f4cb:	stos   DWORD PTR es:[edi],eax
  40f4cc:	xor    DWORD PTR [eax],edi
  40f4ce:	xchg   esp,eax
  40f4cf:	add    DWORD PTR [ecx],edi
  40f4d1:	dec    esp
  40f4d2:	jns    0x40f519
  40f4d4:	addr16 cld 
  40f4d6:	out    dx,eax
  40f4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4da:	cmp    ecx,esi
  40f4dc:	push   ebp
  40f4dd:	or     ebp,DWORD PTR [ecx+0x1c]
  40f4e0:	xchg   BYTE PTR [esi],bh
  40f4e2:	test   DWORD PTR [eax+0x4e7e20c4],ebx
  40f4e8:	add    ebp,DWORD PTR gs:[ebx+0x6b5444a0]
  40f4ef:	test   DWORD PTR [ecx],ecx
  40f4f1:	call   0x18f7:0x61e1a657
  40f4f8:	in     al,dx
  40f4f9:	(bad)  [ebp-0x268b15ba]
  40f500:	and    edi,DWORD PTR [ecx-0x3352b1f8]
  40f506:	jmp    0xc7099f03
  40f50b:	lahf   
  40f50c:	stc    
  40f50d:	iret   
  40f50e:	sbb    DWORD PTR [edx-0x522d816d],esi
  40f514:	pop    esi
  40f515:	out    dx,al
  40f516:	or     dh,BYTE PTR [esi-0x6a97a089]
  40f51c:	outs   dx,BYTE PTR ds:[esi]
  40f51d:	rcr    dl,0xae
  40f520:	out    0xb8,al
  40f522:	call   0xc942:0xf43ce7bf
  40f529:	repnz mov ah,0x5b
  40f52c:	dec    esp
  40f52d:	ds movsx esp,bp
  40f531:	adc    DWORD PTR [esi+eax*2+0x3c],0x1abb92d2
  40f539:	sub    eax,0x1e15fcaf
  40f53e:	pop    es
  40f53f:	mov    ecx,DWORD PTR ds:0xf49cf200
  40f545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f546:	and    bh,BYTE PTR [edi+0x6a016977]
  40f54c:	add    eax,0x8c740275
  40f551:	cli    
  40f552:	add    eax,0xabe8840e
  40f557:	rol    ebx,cl
  40f559:	adc    DWORD PTR [ebx-0xa],edx
  40f55c:	pop    ebx
  40f55d:	es mov esi,0xb5d6fb8f
  40f563:	or     eax,0xb12e9f38
  40f568:	hlt    
  40f569:	cmp    eax,0xba5a481a
  40f56e:	fcomp  st(3)
  40f570:	test   al,0x84
  40f572:	cld    
  40f573:	jns    0x40f5b5
  40f575:	and    eax,0xdf589e32
  40f57a:	ficomp WORD PTR [esi-0x50]
  40f57d:	mov    BYTE PTR [eax+0x3e2a527],cl
  40f583:	cmp    al,0xff
  40f585:	outs   dx,DWORD PTR ds:[esi]
  40f586:	rol    DWORD PTR [ebp-0x15ee7998],1
  40f58c:	xchg   ebx,eax
  40f58d:	sar    bh,1
  40f58f:	clc    
  40f590:	dec    ecx
  40f591:	jmp    0x3407a2c8
  40f596:	pop    esi
  40f597:	and    dl,BYTE PTR [edx+ecx*2]
  40f59a:	sbb    ebx,ecx
  40f59c:	nop
  40f59d:	mov    es:0x35b7fac0,al
  40f5a3:	sub    BYTE PTR [edi+0x53],0x8d
  40f5a7:	push   ebx
  40f5a8:	or     DWORD PTR [eax-0x3a],eax
  40f5ab:	lahf   
  40f5ac:	mov    cl,0x7f
  40f5ae:	shl    bl,cl
  40f5b0:	imul   esi,edx,0xffffffe8
  40f5b3:	xor    BYTE PTR [edi+0x5fb107df],ah
  40f5b9:	sub    ecx,DWORD PTR [edi+0x2]
  40f5bc:	cli    
  40f5bd:	dec    ebx
  40f5be:	addr16 mov bh,0xa4
  40f5c1:	mov    eax,ds:0x13dc9d28
  40f5c6:	dec    ebp
  40f5c7:	lahf   
  40f5c8:	bound  eax,QWORD PTR [ebx+esi*4-0x472091bb]
  40f5cf:	jecxz  0x40f5d0
  40f5d1:	push   cs
  40f5d2:	scas   al,BYTE PTR es:[edi]
  40f5d3:	outs   dx,BYTE PTR ds:[esi]
  40f5d4:	inc    ebx
  40f5d5:	out    dx,al
  40f5d6:	jb     0x40f59d
  40f5d8:	fldcw  WORD PTR [edi+0x5e]
  40f5db:	retf   
  40f5dc:	push   0xfd7ba6b4
  40f5e1:	imul   ecx,DWORD PTR [ecx+0x90d04e3],0x6c
  40f5e8:	(bad)  
  40f5e9:	mov    dl,0x5c
  40f5eb:	lds    esp,FWORD PTR fs:[ebx]
  40f5ee:	push   eax
  40f5ef:	mov    BYTE PTR [edx+0x5174c29e],bl
  40f5f5:	ja     0x40f637
  40f5f7:	dec    ecx
  40f5f8:	in     al,0xa9
  40f5fa:	cmp    eax,0x443a331
  40f5ff:	or     ah,bh
  40f601:	mov    esp,edx
  40f603:	rcr    BYTE PTR [eax+0x60],1
  40f606:	sahf   
  40f607:	ins    BYTE PTR es:[edi],dx
  40f608:	addr16 xor al,bl
  40f60b:	outs   dx,DWORD PTR ds:[esi]
  40f60c:	addr16 mov fs,ebx
  40f60f:	pop    es
  40f610:	sub    ebp,DWORD PTR [esi+0x37a76fc6]
  40f616:	mov    eax,0xaf027ae3
  40f61b:	rcl    dh,cl
  40f61d:	int    0x23
  40f61f:	dec    eax
  40f620:	jno    0x40f61d
  40f622:	pop    es
  40f623:	xlat   BYTE PTR ds:[ebx]
  40f624:	mov    eax,es:0x56d2435b
  40f62a:	popf   
  40f62b:	loop   0x40f664
  40f62d:	test   BYTE PTR [esi+0x2166cc70],ah
  40f633:	lods   al,BYTE PTR ds:[esi]
  40f634:	push   esp
  40f635:	lds    edi,FWORD PTR [edx]
  40f637:	add    ebp,0x5f
  40f63a:	pop    esi
  40f63b:	or     BYTE PTR [eax+edi*8],bl
  40f63e:	pop    ebx
  40f63f:	xchg   esp,eax
  40f640:	aad    0xcd
  40f642:	jmp    0x40f695
  40f644:	adc    al,0xba
  40f646:	dec    esp
  40f647:	sub    eax,0xc18c3b93
  40f64c:	xor    al,BYTE PTR [eax]
  40f64e:	xchg   edx,eax
  40f64f:	xlat   BYTE PTR ds:[ebx]
  40f650:	jge    0x40f6b4
  40f652:	jl     0x40f6ca
  40f654:	loopne 0x40f5e7
  40f656:	(bad)  
  40f657:	mov    edx,0xd7d10f83
  40f65c:	inc    edi
  40f65d:	sahf   
  40f65e:	sub    eax,0x725b55be
  40f663:	shl    ebx,1
  40f665:	(bad)  
  40f666:	xor    cl,BYTE PTR ds:0x34c66356
  40f66c:	push   0x821a8bb3
  40f671:	cmp    dh,al
  40f673:	xchg   eax,eax
  40f675:	loopne 0x40f6d5
  40f677:	out    0xa5,al
  40f679:	fadd   DWORD PTR [edi]
  40f67b:	fucomp st(3)
  40f67d:	sub    al,0xc0
  40f67f:	xchg   esi,eax
  40f680:	jmp    0x1272:0x5b170e11
  40f687:	mov    es,WORD PTR [edi-0x60]
  40f68a:	add    DWORD PTR [eax],edi
  40f68c:	fldenv [ecx+0x2]
  40f68f:	jmp    DWORD PTR [esi+0x46291c6a]
  40f695:	dec    ecx
  40f696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f697:	xor    bh,BYTE PTR [ecx+0x38]
  40f69a:	ins    BYTE PTR es:[edi],dx
  40f69b:	jne    0x40f70f
  40f69d:	fst    QWORD PTR [edi-0x17034889]
  40f6a3:	cmp    esi,DWORD PTR [esi+0x43]
  40f6a6:	ss pusha 
  40f6a8:	daa    
  40f6a9:	xchg   ebx,eax
  40f6aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ab:	sti    
  40f6ac:	mov    ds:0x48577195,al
  40f6b1:	fcom   QWORD PTR [eax+eiz*4+0x44]
  40f6b5:	xchg   edx,eax
  40f6b6:	mov    ds:0xe94ad9d1,al
  40f6bb:	sub    al,ch
  40f6bd:	cmc    
  40f6be:	mov    ch,cl
  40f6c0:	dec    ecx
  40f6c1:	into   
  40f6c2:	int3   
  40f6c3:	cmp    al,0xad
  40f6c5:	jmp    0x40f68d
  40f6c7:	sbb    al,0x47
  40f6c9:	cmp    eax,0xcd5bba1
  40f6ce:	out    dx,eax
  40f6cf:	scas   al,BYTE PTR es:[edi]
  40f6d0:	ror    DWORD PTR [edi+0x22a62869],1
  40f6d6:	and    al,0x5d
  40f6d8:	(bad)  
  40f6d9:	div    BYTE PTR [edx-0x7c]
  40f6dc:	pop    eax
  40f6dd:	mov    bl,0x63
  40f6df:	push   ecx
  40f6e0:	inc    edx
  40f6e1:	add    al,0xbe
  40f6e3:	test   DWORD PTR [edi],esi
  40f6e5:	lods   al,BYTE PTR ds:[esi]
  40f6e6:	push   0x71708109
  40f6eb:	jg     0x40f68c
  40f6ed:	pop    ecx
  40f6ee:	sub    ecx,DWORD PTR [edx+0x4a]
  40f6f1:	aaa    
  40f6f2:	add    eax,0x48aa3842
  40f6f7:	add    bl,al
  40f6f9:	xchg   BYTE PTR [esi+0x4d308c01],bh
  40f6ff:	cmp    ecx,DWORD PTR [ebx+0x5c7bf13d]
  40f705:	sub    ch,BYTE PTR [ebx+0x7f]
  40f708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f709:	aad    0xb5
  40f70b:	push   0x40
  40f70d:	cmp    edx,DWORD PTR [esi]
  40f70f:	outs   dx,BYTE PTR ds:[esi]
  40f710:	sbb    BYTE PTR [ecx+0x54],cl
  40f713:	xchg   edi,eax
  40f714:	push   es
  40f715:	(bad)  
  40f716:	or     al,0xdb
  40f718:	xlat   BYTE PTR ds:[ebx]
  40f719:	(bad)  
  40f71b:	test   eax,0x9caecbb9
  40f720:	mov    ch,0x80
  40f722:	ret    0x9bbf
  40f725:	or     BYTE PTR ds:0x6a313ed9,al
  40f72b:	add    eax,DWORD PTR [ecx]
  40f72d:	or     BYTE PTR [edx],ah
  40f72f:	adc    esi,ecx
  40f731:	int3   
  40f732:	sbb    BYTE PTR ds:0xb01fe9ff,dl
  40f738:	fst    st(4)
  40f73a:	ins    BYTE PTR es:[edi],dx
  40f73b:	sub    al,0xfe
  40f73d:	mov    DWORD PTR [eax],0x5ee4d88c
  40f743:	enter  0xa62e,0xd9
  40f747:	mov    bl,BYTE PTR [ebx-0x48]
  40f74a:	test   eax,0xa81b58aa
  40f74f:	pop    esp
  40f750:	and    DWORD PTR [ebx],eax
  40f752:	loopne 0x40f6e6
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0x2909
  41000c:	out    0x28,al
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0xffffff81
  410017:	jge    0x40ffd9
  410019:	mov    edi,0xe8ff5dd6
  41001e:	push   ebx
  41001f:	icebp  
  410020:	add    DWORD PTR [ecx],esi
  410022:	shl    DWORD PTR [edx-0x40296f72],1
  410028:	jbe    0x410049
  41002a:	mov    cl,0xc4
  41002c:	call   0xcc0e:0xa19b4017
  410033:	outs   dx,BYTE PTR ds:[esi]
  410034:	dec    esp
  410035:	pop    edi
  410036:	into   
  410037:	pop    esp
  410038:	rol    DWORD PTR [ebx],1
  41003a:	inc    esp
  41003b:	xchg   esi,eax
  41003c:	pop    ss
  41003d:	push   ds
  41003e:	or     DWORD PTR [edx*4-0x3cbd7cf4],ebx
  410045:	(bad)  
  410046:	imul   edx,DWORD PTR [esi],0xd2f3293e
  41004c:	dec    ebx
  41004d:	stc    
  41004e:	(bad)  
  41004f:	sbb    esi,DWORD PTR [edi-0x5a]
  410052:	fild   WORD PTR [ecx-0x26]
  410055:	enter  0x3502,0xa4
  410059:	cmp    dl,al
  41005b:	outs   dx,BYTE PTR ds:[esi]
  41005c:	sbb    eax,0x955f5ca0
  410061:	sub    BYTE PTR [esi+0x18],cl
  410064:	daa    
  410065:	fdiv   st(0),st
  410067:	ja     0x41000b
  410069:	icebp  
  41006a:	mov    esi,0x4b850427
  41006f:	jg     0x41003a
  410071:	jo     0x410016
  410073:	pop    ebx
  410074:	dec    edx
  410075:	cli    
  410076:	mov    al,0x83
  410078:	dec    eax
  410079:	inc    ecx
  41007a:	std    
  41007b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41007c:	inc    ecx
  41007d:	jp     0x4100cb
  41007f:	lods   eax,DWORD PTR cs:[esi]
  410081:	jns    0x410098
  410083:	(bad)  
  410085:	cmp    eax,0x96a2f220
  41008a:	xchg   BYTE PTR [ebp-0x4b],bh
  41008d:	imul   ebx,esi,0xa419ccc4
  410093:	push   eax
  410094:	ds (bad) 
  410096:	jno    0x410051
  410098:	sub    dh,bl
  41009a:	loop   0x4100b4
  41009c:	mov    DWORD PTR [esp+ecx*4],ebx
  41009f:	and    cl,cl
  4100a1:	mov    eax,ds:0xe34c3515
  4100a6:	mov    ch,0xbc
  4100a8:	dec    ebp
  4100a9:	push   ss
  4100aa:	mov    ch,0x70
  4100ac:	addr16 push ecx
  4100ae:	imul   esp,DWORD PTR [eax-0x4e],0x64
  4100b2:	or     bl,ch
  4100b4:	add    esi,DWORD PTR [eax+0x7b08ab35]
  4100ba:	cmp    eax,0xad06e254
  4100bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c0:	(bad)  
  4100c1:	sbb    BYTE PTR [edi+esi*1+0x3540f427],bh
  4100c8:	outs   dx,DWORD PTR ds:[esi]
  4100c9:	mov    esp,edx
  4100cb:	(bad)  
  4100cc:	icebp  
  4100cd:	(bad)  
  4100ce:	cmp    eax,0x89f8ad49
  4100d3:	fdivr  QWORD PTR [esi]
  4100d5:	dec    ebx
  4100d6:	add    eax,0x9c374e2a
  4100db:	lods   al,BYTE PTR ds:[esi]
  4100dc:	push   ss
  4100dd:	ds mov cl,0xbb
  4100e0:	fcomi  st,st(1)
  4100e2:	pop    ds
  4100e3:	stos   DWORD PTR es:[edi],eax
  4100e4:	sbb    bl,BYTE PTR [esi]
  4100e6:	mov    ebx,DWORD PTR fs:[eax+0x3f]
  4100ea:	dec    ebp
  4100eb:	cli    
  4100ec:	sub    ax,0xd572
  4100f0:	dec    ebp
  4100f1:	pop    edi
  4100f2:	xor    esi,eax
  4100f4:	scas   al,BYTE PTR es:[edi]
  4100f5:	push   ss
  4100f6:	js     0x410110
  4100f8:	xor    DWORD PTR cs:[ebx+0x0],ebx
  4100fc:	xchg   ecx,eax
  4100fd:	jle    0x4100d5
  4100ff:	test   al,0x2b
  410101:	sbb    DWORD PTR [edx],ebp
  410103:	repz mov dh,BYTE PTR [ecx-0x37481037]
  41010a:	mov    edi,0x5e725048
  41010f:	ja     0x41016a
  410111:	cld    
  410112:	xor    eax,esi
  410114:	scas   eax,DWORD PTR es:[edi]
  410115:	int3   
  410116:	loopne 0x4100ba
  410118:	dec    ebp
  410119:	mov    esi,0xa617d342
  41011e:	icebp  
  41011f:	xchg   BYTE PTR [eax-0x130729a],bh
  410125:	aaa    
  410126:	jae    0x410159
  410128:	sub    esp,DWORD PTR [ebx-0x1a]
  41012b:	ins    BYTE PTR es:[edi],dx
  41012c:	jecxz  0x410190
  41012e:	ja     0x41017b
  410130:	(bad)  
  410132:	fnstsw WORD PTR [ebx+0x4804bc50]
  410138:	push   cs
  410139:	mov    bl,0x35
  41013b:	push   ss
  41013c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41013d:	(bad)  
  41013e:	pop    ebp
  41013f:	test   BYTE PTR [ebp+0x598d2c01],al
  410145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410146:	adc    ebx,edx
  410148:	dec    eax
  410149:	jmp    0xffe1ee53
  41014e:	add    ebx,DWORD PTR [edx+0x23f7341e]
  410154:	fiadd  DWORD PTR [edi+0x367f0fa5]
  41015a:	loop   0x41010f
  41015c:	pop    ebp
  41015d:	ret    0xf1ed
  410160:	or     eax,0xc98742da
  410165:	addr16 cmp esi,edx
  410168:	xor    cl,BYTE PTR [ecx-0x69]
  41016b:	mov    al,0x6c
  41016d:	mov    dl,0xa1
  41016f:	mov    dl,0x79
  410171:	mov    ?,WORD PTR [ebp-0x5d]
  410174:	sbb    dh,BYTE PTR [edx-0x723cbf69]
  41017a:	stos   BYTE PTR es:[edi],al
  41017b:	in     al,0x2f
  41017d:	cmp    DWORD PTR [eax],ebp
  41017f:	pop    ebx
  410180:	sbb    DWORD PTR [ebx-0x11],esi
  410183:	mov    DWORD PTR [esi-0x449ce266],ecx
  410189:	ds popf 
  41018b:	jp     0x41016d
  41018d:	jp     0x4101d0
  41018f:	adc    bh,BYTE PTR [ecx-0x39]
  410192:	rol    BYTE PTR [ebx],1
  410194:	inc    ecx
  410195:	push   esi
  410196:	dec    edi
  410197:	gs inc edi
  410199:	not    dl
  41019b:	mov    gs,edx
  41019d:	push   eax
  41019e:	sub    ebx,eax
  4101a0:	pop    ebx
  4101a1:	mov    fs,WORD PTR [esp+eiz*8-0x8]
  4101a5:	jae    0x410151
  4101a7:	dec    ecx
  4101a8:	jp     0x4101ed
  4101aa:	addr16 jmp 0xd6424ee5
  4101b0:	sub    al,0x5b
  4101b2:	jnp    0x410153
  4101b4:	sbb    eax,0x2c5d982a
  4101b9:	push   ecx
  4101ba:	or     si,WORD PTR [eax+0x3d412fab]
  4101c1:	adc    bl,BYTE PTR [eax]
  4101c3:	les    esi,FWORD PTR [ecx*4+0xe055d3f]
  4101ca:	jle    0x4101b0
  4101cc:	jne    0x410164
  4101ce:	leave  
  4101cf:	test   al,0x20
  4101d1:	inc    ebp
  4101d2:	in     al,dx
  4101d3:	shl    BYTE PTR [ecx-0x63],1
  4101d6:	les    ebp,FWORD PTR [ebp-0x10]
  4101d9:	dec    esp
  4101da:	cmp    esp,DWORD PTR [ebx]
  4101dc:	gs add ecx,eax
  4101df:	add    ebp,0x62
  4101e2:	mov    cl,0xf6
  4101e4:	aaa    
  4101e5:	xor    eax,0x6f146d0e
  4101ea:	scas   al,BYTE PTR es:[edi]
  4101eb:	or     esp,esp
  4101ed:	xchg   esi,eax
  4101ee:	or     edi,DWORD PTR [edi+esi*8]
  4101f1:	xor    DWORD PTR [edi-0x64eaeaef],ebp
  4101f7:	xchg   ebp,eax
  4101f8:	mov    ecx,esp
  4101fa:	xor    ah,BYTE PTR [edi-0x6f]
  4101fd:	jnp    0x410252
  4101ff:	popf   
  410200:	(bad)  
  410201:	cmp    BYTE PTR [eax-0x76],ah
  410204:	push   es
  410205:	call   0x51b8:0x552618c8
  41020c:	mov    esi,DWORD PTR [ebp-0x6f01a1d8]
  410212:	add    esi,DWORD PTR [ebp+0x72]
  410215:	adc    edi,DWORD PTR [ebx-0x65511e4a]
  41021b:	loopne 0x410281
  41021d:	xlat   BYTE PTR ds:[ebx]
  41021e:	out    0x5f,eax
  410220:	mov    BYTE PTR [esi+0x5b94d8b4],ch
  410226:	loopne 0x4101e0
  410228:	xor    ah,cl
  41022a:	fisub  DWORD PTR [esi+0x1c]
  41022d:	jp     0x410222
  41022f:	ins    BYTE PTR es:[edi],dx
  410230:	scas   eax,DWORD PTR es:[edi]
  410231:	das    
  410232:	in     al,0xba
  410234:	mov    al,0x3b
  410236:	addr16 inc eax
  410238:	imul   edx,DWORD PTR [edi-0x7f5f954b],0x3d
  41023f:	or     DWORD PTR [ebx+0x1bfaf792],0x56d22da8
  410249:	ret    0xa98e
  41024c:	sub    al,0x40
  41024e:	rcr    DWORD PTR [eax-0x4c0375ce],0xb3
  410255:	inc    esp
  410256:	dec    edx
  410257:	mov    ds:0xd8d38cc,al
  41025c:	pop    ecx
  41025d:	pop    ebp
  41025e:	int3   
  41025f:	and    DWORD PTR [edi+0x78],ebx
  410262:	nop
  410263:	adc    BYTE PTR [edi-0x7a],al
  410266:	enter  0xbac5,0x39
  41026a:	jle    0x41024f
  41026c:	jmp    0x410293
  41026e:	cmp    edx,edx
  410270:	and    ebx,ebx
  410272:	cmp    eax,0xd3c04f9d
  410277:	sahf   
  410278:	icebp  
  410279:	add    BYTE PTR [ebx-0x6b],ah
  41027c:	cmp    DWORD PTR [edx],eax
  41027e:	sbb    BYTE PTR [esi+eax*8],0x2
  410282:	xor    bh,al
  410284:	mov    bl,0x8b
  410286:	push   0xffffffc6
  410288:	jl     0x41026d
  41028a:	or     al,0xea
  41028c:	xor    esi,DWORD PTR cs:[eax]
  41028f:	pop    ebx
  410290:	or     ebx,ebx
  410292:	mov    ecx,0xa2b42c85
  410297:	xchg   ebx,eax
  410298:	mov    edi,0x2f6339e8
  41029d:	neg    cl
  41029f:	jecxz  0x41026a
  4102a1:	test   BYTE PTR [ebp+0x13],bh
  4102a4:	xor    cl,BYTE PTR [esi-0x4e]
  4102a7:	add    bh,BYTE PTR [ecx]
  4102a9:	dec    edx
  4102aa:	(bad)  
  4102ad:	rcpps  xmm4,XMMWORD PTR ds:0x48fa2274
  4102b4:	pop    esp
  4102b5:	repz sub edi,esi
  4102b8:	shl    DWORD PTR [ecx],0xc5
  4102bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102bc:	push   0xdf321de7
  4102c1:	(bad)  
  4102c2:	jmp    0x41c:0x280450f4
  4102c9:	(bad)  
  4102ca:	inc    ebp
  4102cb:	xchg   edx,eax
  4102cc:	xchg   esp,eax
  4102cd:	mov    ebx,DWORD PTR [edi+ecx*4+0x6312c72d]
  4102d4:	mov    gs,WORD PTR [ebx-0x395b09fb]
  4102da:	mov    dh,0x35
  4102dc:	test   eax,0x8f22391a
  4102e1:	push   cs
  4102e2:	enter  0xe83d,0xec
  4102e6:	in     eax,dx
  4102e7:	adc    BYTE PTR [esi+0x4a8b3c19],0xdc
  4102ee:	or     ah,BYTE PTR fs:[ebp-0x6baa16f0]
  4102f5:	sbb    BYTE PTR [esp+eiz*2-0x61e8cc46],0xa3
  4102fd:	mov    BYTE PTR [esi],dh
  4102ff:	sub    ah,BYTE PTR [edi+0x3]
  410302:	jb     0x4102cc
  410304:	mov    edx,0x58ea877d
  410309:	repnz adc eax,0xa8352eb5
  41030f:	jg     0x410295
  410311:	jbe    0x410348
  410313:	adc    al,0xea
  410315:	repz rcl edx,cl
  410318:	cdq    
  410319:	ret    
  41031a:	popf   
  41031b:	loope  0x4102f6
  41031d:	and    edx,eax
  41031f:	sbb    al,0x8f
  410321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410322:	xchg   BYTE PTR [edi],ah
  410324:	call   0x887b:0x7fe434d4
  41032b:	mov    ?,WORD PTR [ebx-0x7636b48a]
  410331:	jo     0x4102f4
  410333:	xchg   esp,eax
  410334:	rol    BYTE PTR [ecx],1
  410336:	stos   BYTE PTR es:[edi],al
  410337:	scas   eax,DWORD PTR es:[edi]
  410338:	enter  0xce83,0xf
  41033c:	je     0x48712898
  410342:	jl     0x410367
  410344:	in     eax,0x8c
  410346:	sar    BYTE PTR ds:0xabc378f,1
  41034c:	inc    eax
  41034d:	fadd   QWORD PTR [edx-0x51]
  410350:	mov    es,WORD PTR [eax]
  410352:	rcl    DWORD PTR [ebp-0x25],0x16
  410356:	mov    al,0x99
  410358:	jnp    0x410398
  41035a:	lock and edi,DWORD PTR [bx+si+0x64]
  41035f:	ret    0x9fbd
  410362:	out    dx,al
  410363:	jg     0x410309
  410365:	jb     0x4103cc
  410367:	jmp    0x1ec11c06
  41036c:	xchg   edx,eax
  41036d:	adc    dh,BYTE PTR [edi+esi*2]
  410370:	adc    ebp,DWORD PTR [edi-0x56]
  410373:	in     al,dx
  410374:	shr    BYTE PTR [eax-0x6203ad7],0x59
  41037b:	bswap  ebx
  41037d:	fwait
  41037e:	adc    BYTE PTR [edx+0x41],0x72
  410382:	lahf   
  410383:	jnp    0x41036e
  410385:	mov    edx,0x33e734a0
  41038a:	ins    DWORD PTR es:[edi],dx
  41038b:	push   ecx
  41038c:	xchg   edi,eax
  41038d:	jle    0x4103af
  41038f:	ret    0x6e39
  410392:	fdivr  DWORD PTR [ecx]
  410394:	fstp   QWORD PTR [eax]
  410396:	call   0x82b321ff
  41039b:	aaa    
  41039c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039d:	loope  0x4103d6
  41039f:	test   DWORD PTR [edx],esi
  4103a1:	mov    esp,0x308f290f
  4103a6:	loop   0x41040c
  4103a8:	pushf  
  4103a9:	loopne 0x4103ee
  4103ab:	add    al,0x46
  4103ad:	stos   BYTE PTR es:[edi],al
  4103ae:	inc    edx
  4103af:	adc    al,0xd1
  4103b1:	scas   eax,DWORD PTR es:[edi]
  4103b2:	dec    ecx
  4103b3:	outs   dx,BYTE PTR ds:[esi]
  4103b4:	repnz mov esi,0x4bf547a1
  4103ba:	daa    
  4103bb:	std    
  4103bc:	cmp    bh,dl
  4103be:	inc    esp
  4103bf:	mov    ah,0x36
  4103c1:	cwde   
  4103c2:	ins    BYTE PTR es:[edi],dx
  4103c3:	or     eax,0xdee568c3
  4103c8:	js     0x410411
  4103ca:	hlt    
  4103cb:	bound  ebp,QWORD PTR [ebx+0x38ae391d]
  4103d1:	in     al,0x86
  4103d3:	push   ecx
  4103d4:	adc    eax,0xef3ec292
  4103d9:	inc    ebp
  4103da:	jge    0x410367
  4103dc:	jecxz  0x410388
  4103de:	inc    ebp
  4103df:	lds    ebx,FWORD PTR [eax]
  4103e1:	adc    BYTE PTR [edi-0x6119dea1],al
  4103e7:	ins    DWORD PTR es:[edi],dx
  4103e8:	mov    al,0x8e
  4103ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103eb:	jb     0x41040a
  4103ed:	ja     0x4103ba
  4103ef:	push   ebp
  4103f0:	dec    ebx
  4103f1:	mov    bl,0xd
  4103f3:	mov    ah,0x3c
  4103f5:	push   0x27
  4103f7:	(bad)  
  4103f8:	pop    edi
  4103f9:	int    0x9
  4103fb:	dec    ebx
  4103fc:	sbb    ch,BYTE PTR [esi]
  4103fe:	adc    eax,0x953bb4d6
  410403:	jne    0x410454
  410405:	ins    BYTE PTR es:[edi],dx
  410406:	adc    BYTE PTR [ebp+esi*8-0x75],0xb4
  41040b:	xchg   BYTE PTR [esi],ah
  41040d:	mov    esi,0xfad30a06
  410412:	pop    esp
  410413:	iret   
  410414:	clc    
  410415:	and    BYTE PTR [ecx+eax*1+0x20b02b56],ch
  41041c:	mov    ds:0x31eef3aa,al
  410421:	jb     0x41043a
  410423:	cwde   
  410424:	push   cs
  410425:	mov    ch,0x6f
  410427:	ds ins DWORD PTR es:[edi],dx
  410429:	test   ebp,ebp
  41042b:	mov    edi,ebp
  41042d:	jnp    0x4103f3
  41042f:	call   0xeebe:0xf214176d
  410436:	mov    ds:0xfc8eece3,eax
  41043b:	mov    ds:0xffce9f6a,eax
  410440:	push   edx
  410441:	mov    BYTE PTR [esi+0x3f],dl
  410444:	or     DWORD PTR [ecx-0x17],eax
  410447:	pop    ebx
  410448:	inc    ebx
  410449:	cwde   
  41044a:	pop    ebp
  41044b:	dec    esp
  41044c:	add    BYTE PTR [edx],al
  41044e:	mov    bh,0x9
  410450:	inc    edx
  410451:	sub    BYTE PTR [ebp-0x3829c72a],dh
  410457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410458:	aad    0xb1
  41045a:	loopne 0x4103eb
  41045c:	xchg   edi,eax
  41045d:	jo     0x41045f
  41045f:	dec    ebp
  410460:	jb     0x4103f0
  410462:	cdq    
  410463:	and    ebx,edi
  410465:	(bad)  
  410466:	jle    0x410422
  410468:	mov    esi,0xaead6478
  41046d:	or     eax,0x8e98d5f3
  410472:	cdq    
  410473:	pop    eax
  410474:	ja     0x41042d
  410476:	adc    dh,BYTE PTR [esp+eiz*4-0xc]
  41047a:	jge    0x4104b8
  41047c:	dec    ecx
  41047d:	mov    ebp,0x837b524c
  410482:	and    eax,0x54cad066
  410487:	or     BYTE PTR [edi+0x3],0x86
  41048b:	lods   al,BYTE PTR es:[esi]
  41048d:	and    dh,BYTE PTR [eax-0x4f]
  410490:	push   ds
  410491:	or     al,BYTE PTR [edx-0x6a]
  410494:	sbb    esi,esi
  410496:	ja     0x4104d6
  410498:	and    esi,DWORD PTR [ecx+0x16c83126]
  41049e:	jecxz  0x410440
  4104a0:	mov    ch,0xcd
  4104a2:	or     dh,BYTE PTR [ecx+0x5f]
  4104a5:	xlat   BYTE PTR ds:[ebx]
  4104a6:	ds jge 0x4104b3
  4104a9:	psrlq  mm2,0x79
  4104ad:	cmp    al,0x95
  4104af:	add    eax,0x17be40b9
  4104b4:	retf   
  4104b5:	in     eax,0x16
  4104b7:	inc    ebp
  4104b8:	dec    ecx
  4104b9:	xchg   esp,eax
  4104ba:	inc    ebp
  4104bb:	or     esi,DWORD PTR [esi+0x55]
  4104be:	push   ss
  4104bf:	jnp    0x410469
  4104c1:	jecxz  0x410461
  4104c3:	lock inc esp
  4104c5:	aad    0x18
  4104c7:	cld    
  4104c8:	and    eax,ebx
  4104ca:	test   BYTE PTR [esi+0x47800ef3],ch
  4104d0:	loope  0x410523
  4104d2:	xchg   esi,eax
  4104d3:	shr    DWORD PTR [edi+0x7a],0x14
  4104d7:	cmp    edi,edx
  4104d9:	add    eax,esp
  4104db:	bound  esi,QWORD PTR [edi-0x2e]
  4104de:	loope  0x4104e6
  4104e0:	add    edx,esi
  4104e2:	mov    bh,0x6
  4104e4:	pop    es
  4104e5:	cmp    al,BYTE PTR ds:0x86fc6a14
  4104eb:	mov    bl,0x15
  4104ed:	sub    edx,DWORD PTR [ecx-0x18]
  4104f0:	(bad)  [edx+0x11b3f460]
  4104f6:	stos   BYTE PTR es:[edi],al
  4104f7:	sbb    eax,0x7a95011
  4104fc:	fwait
  4104fd:	sti    
  4104fe:	mov    edi,ebp
  410500:	nop
  410501:	sar    DWORD PTR [edx-0x397fb794],1
  410507:	and    BYTE PTR [ecx],dl
  410509:	xchg   edx,eax
  41050a:	sti    
  41050b:	repnz mov ds,ecx
  41050e:	cmp    al,0x5f
  410510:	mov    al,ds:0x6b1824b3
  410515:	mov    cl,0x33
  410517:	or     dl,al
  410519:	daa    
  41051a:	nop
  41051b:	mov    eax,0x78c7ea14
  410520:	push   edx
  410521:	xchg   DWORD PTR [ebp-0x3fa0acf8],ebp
  410527:	and    esp,ebx
  410529:	xchg   esi,eax
  41052a:	and    BYTE PTR [ebx+edx*8+0x3b],cl
  41052e:	int    0x30
  410530:	mov    al,0x80
  410532:	inc    edi
  410533:	inc    ebp
  410534:	inc    edi
  410535:	xor    al,0x43
  410537:	mov    ecx,0x8a1c1cad
  41053c:	or     al,0xb0
  41053e:	(bad)  
  41053f:	in     al,dx
  410540:	shl    DWORD PTR [ebp-0x1e0c2aa5],1
  410546:	ja     0x4105b6
  410548:	fadd   QWORD PTR [edx]
  41054a:	jns    0x4105aa
  41054c:	scas   al,BYTE PTR es:[edi]
  41054d:	push   ss
  41054e:	dec    eax
  41054f:	pop    edi
  410550:	stos   BYTE PTR es:[edi],al
  410551:	test   al,0x23
  410553:	inc    esi
  410554:	imul   ebx,DWORD PTR gs:[ecx-0x59],0x8
  410559:	icebp  
  41055a:	pop    esi
  41055b:	leave  
  41055c:	add    eax,0x1bc5a497
  410561:	fidiv  DWORD PTR [edx-0x504cb258]
  410567:	push   ss
  410568:	js     0x410542
  41056a:	les    edi,FWORD PTR [ecx+0x22]
  41056d:	push   edx
  41056e:	ss sub edx,ebx
  410571:	xor    DWORD PTR [ebx],esp
  410573:	mov    fs,WORD PTR [ecx-0x68]
  410576:	iret   
  410577:	mov    dl,0xf6
  410579:	xchg   esp,eax
  41057a:	pop    ss
  41057b:	lods   eax,DWORD PTR ds:[esi]
  41057c:	mov    cl,0xba
  41057e:	das    
  41057f:	in     eax,0x8e
  410581:	sahf   
  410582:	add    al,0x14
  410584:	(bad)  
  410585:	call   0x7185:0x28d4a70b
  41058c:	pop    es
  41058d:	fcomp  QWORD PTR [ecx]
  41058f:	push   ss
  410590:	ja     0x410546
  410592:	imul   ecx,DWORD PTR [ebx+0x3982c7e4],0xdc28926b
  41059c:	jae    0x410608
  41059e:	xor    al,0xad
  4105a0:	cdq    
  4105a1:	fcomi  st,st(3)
  4105a3:	cld    
  4105a4:	push   ebp
  4105a5:	mov    bh,BYTE PTR [eax-0xa]
  4105a8:	fld    TBYTE PTR [esi-0x1]
  4105ab:	(bad)  
  4105ac:	xlat   BYTE PTR ds:[ebx]
  4105ad:	ins    BYTE PTR es:[edi],dx
  4105ae:	es fs fnsetpm(287 only) 
  4105b2:	sbb    eax,0x4841c43b
  4105b7:	rcl    BYTE PTR [edx-0x39],1
  4105ba:	push   ecx
  4105bb:	std    
  4105bc:	dec    eax
  4105bd:	or     cl,BYTE PTR [eiz*1-0x420f82f9]
  4105c4:	loope  0x4105e9
  4105c6:	(bad)  [edi+0x48f7e53]
  4105cc:	stos   DWORD PTR es:[edi],eax
  4105cd:	loopne 0x410634
  4105cf:	jmp    0x410578
  4105d1:	xor    BYTE PTR [eax],ch
  4105d3:	fnstsw WORD PTR [esi-0x607da7e2]
  4105d9:	sub    dl,BYTE PTR [ebx-0x4e]
  4105dc:	retf   
  4105dd:	sbb    eax,0x4edb6f72
  4105e2:	out    dx,eax
  4105e3:	jecxz  0x41063d
  4105e5:	ss jnp 0x41056b
  4105e8:	mov    ah,0xc6
  4105ea:	mov    ch,0x7a
  4105ec:	dec    ecx
  4105ed:	jg     0x410635
  4105ef:	mov    dl,0x3
  4105f1:	fwait
  4105f2:	mov    ds:0xa2068ab1,al
  4105f7:	out    0x3,al
  4105f9:	xor    DWORD PTR [edi],esi
  4105fb:	cdq    
  4105fc:	cwde   
  4105fd:	mov    ds:0x3418ddf1,al
  410602:	xor    eax,0x2bbc61a3
  410607:	mov    ebp,0xadc8033b
  41060c:	lods   al,BYTE PTR ds:[esi]
  41060d:	test   al,0x2a
  41060f:	mov    ecx,0x74df8de0
  410614:	xchg   ecx,eax
  410615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410616:	stos   BYTE PTR es:[edi],al
  410617:	push   ebx
  410618:	mov    ch,0xe
  41061a:	(bad)  
  41061b:	sbb    eax,0x66bb431c
  410620:	ret    
  410621:	cwde   
  410622:	stc    
  410623:	sub    edi,DWORD PTR [esi-0xe85c8c5]
  410629:	(bad)  
  41062a:	inc    ecx
  41062b:	dec    esp
  41062c:	aad    0x5e
  41062e:	enter  0xa000,0xe0
  410632:	xchg   edi,eax
  410633:	pop    ss
  410634:	mov    bh,0x79
  410636:	sub    ecx,edx
  410638:	ror    BYTE PTR [edi],1
  41063a:	cmpxchg DWORD PTR [eax],edi
  41063d:	or     BYTE PTR [esi-0x5280521],bh
  410643:	scas   al,BYTE PTR es:[edi]
  410644:	sti    
  410645:	xchg   ebp,eax
  410646:	shl    BYTE PTR [ecx*4-0x8d00554],cl
  41064d:	iret   
  41064e:	dec    ebx
  41064f:	sub    eax,0x7ed8c568
  410654:	sub    bl,BYTE PTR [ecx-0x7]
  410657:	test   eax,0xcc7ef004
  41065c:	out    dx,al
  41065d:	and    BYTE PTR [eax+0x78],0x15
  410661:	aas    
  410662:	dec    eax
  410663:	fsub   DWORD PTR [esi]
  410665:	ror    ecx,cl
  410667:	stos   DWORD PTR es:[edi],eax
  410668:	nop
  410669:	lock add esp,DWORD PTR [edi-0x7f8d63d]
  410670:	mov    cl,0x8b
  410672:	(bad)  
  410673:	into   
  410674:	push   ecx
  410675:	cmp    BYTE PTR [ebx-0x1cf764ec],cl
  41067b:	fist   WORD PTR [eax]
  41067d:	pusha  
  41067e:	mov    edi,0x32e66390
  410683:	jo     0x4106f7
  410685:	xor    ebx,DWORD PTR [esi-0x10]
  410688:	into   
  410689:	(bad)  
  41068b:	xchg   esi,eax
  41068c:	mov    al,0xcd
  41068e:	jne    0x4106cd
  410690:	in     eax,dx
  410691:	mov    ecx,0x94871feb
  410696:	adc    DWORD PTR [ebx],edx
  410698:	aas    
  410699:	fucomi st,st(2)
  41069b:	adc    eax,0xf242f304
  4106a0:	mov    edx,DWORD PTR [edx]
  4106a2:	imul   edx,DWORD PTR [ebx],0x64
  4106a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a6:	jbe    0x410644
  4106a8:	pop    ecx
  4106a9:	ss test eax,0x9b435232
  4106af:	and    cl,BYTE PTR [ecx-0x6910c448]
  4106b5:	mov    ebx,0xa2e0b614
  4106ba:	and    eax,0x2cce3461
  4106bf:	mov    eax,ds:0x3504c006
  4106c4:	or     BYTE PTR [esi],bh
  4106c6:	cmp    BYTE PTR [ebp-0x2bf8ef20],bl
  4106cc:	daa    
  4106cd:	clc    
  4106ce:	fild   QWORD PTR [edi-0x1343968f]
  4106d4:	icebp  
  4106d5:	and    ah,BYTE PTR [eax]
  4106d7:	sub    al,0xf
  4106d9:	shl    cl,cl
  4106db:	push   ecx
  4106dc:	jge    0x410755
  4106de:	cmp    bl,BYTE PTR fs:[esi]
  4106e1:	push   eax
  4106e2:	arpl   di,sp
  4106e4:	or     ch,BYTE PTR [edi-0x4267bd86]
  4106ea:	adc    BYTE PTR [ecx],0xef
  4106ed:	gs ins BYTE PTR es:[edi],dx
  4106ef:	test   BYTE PTR [edi+esi*1],al
  4106f2:	push   ecx
  4106f3:	test   BYTE PTR [ebx],bh
  4106f5:	or     DWORD PTR [edx-0x4e],edi
  4106f8:	das    
  4106f9:	imul   ebp,DWORD PTR [ebx+0x46435b42],0xa0b59c2f
  410703:	inc    ebx
  410704:	xchg   DWORD PTR [edi-0x17],ecx
  410707:	fdivr  QWORD PTR [ebx-0x67]
  41070a:	push   eax
  41070b:	and    al,0x14
  41070d:	mov    ebx,0x22122324
  410712:	sub    al,0x48
  410714:	dec    edi
  410715:	mov    dl,0x1d
  410717:	in     al,0x7
  410719:	xchg   edi,eax
  41071a:	(bad)  
  41071c:	cmp    esp,ebx
  41071e:	(bad)  
  41071f:	(bad)  
  410720:	and    BYTE PTR [edx+0x78adfddf],dl
  410726:	(bad)  
  410727:	sti    
  410728:	add    BYTE PTR [eax],dh
  41072a:	xchg   edx,eax
  41072b:	mov    ecx,0xc2029b70
  410730:	xor    ch,BYTE PTR [ebp-0x69c82d23]
  410736:	xchg   edi,eax
  410737:	mov    DWORD PTR [ecx],eax
  410739:	pop    ds
  41073a:	push   edx
  41073b:	pusha  
  41073c:	ds aam 0xc9
  41073f:	imul   edi,DWORD PTR [ebp+0x20],0x37
  410743:	ftst   
  410745:	mov    bh,0x51
  410747:	pop    edx
  410748:	or     cl,BYTE PTR [edi]
  41074a:	or     ebp,0xb26d97ab
  410750:	or     BYTE PTR [ecx+0x40],dh
  410753:	jmp    0x41079b
  410755:	pushf  
  410756:	inc    ecx
  410757:	leave  
  410758:	inc    edx
  410759:	loope  0x4107a0
  41075b:	xchg   ebx,eax
  41075c:	aas    
  41075d:	pusha  
  41075e:	dec    eax
  41075f:	iret   
  410760:	push   ebp
  410761:	cmp    ebx,DWORD PTR ds:0x197c6c3a
  410767:	push   cs
  410768:	mov    eax,DWORD PTR [esp+ebp*4]
  41076b:	icebp  
  41076c:	sub    BYTE PTR [edx+ebp*8+0x40],dh
  410770:	(bad)  
  410771:	lahf   
  410772:	jmp    0x4f38:0x4159897
  410779:	dec    esp
  41077a:	sub    DWORD PTR [esi+0x1b],edi
  41077d:	push   edx
  41077e:	popa   
  41077f:	icebp  
  410780:	jecxz  0x4107e1
  410782:	das    
  410783:	mov    ds:0xfcfe4b65,eax
  410788:	mov    ebx,0x80ca36cb
  41078d:	cmp    eax,0x9950fdb7
  410792:	push   ebp
  410793:	aad    0x5c
  410795:	fisub  WORD PTR [eax-0x73]
  410798:	mov    bh,BYTE PTR cs:[esi]
  41079b:	dec    esp
  41079c:	xchg   edx,eax
  41079d:	cmp    eax,0xd824a7f1
  4107a2:	lods   al,BYTE PTR ds:[esi]
  4107a3:	test   eax,0x864db53e
  4107a8:	and    al,0x73
  4107aa:	fidiv  WORD PTR [esi-0x2a]
  4107ad:	jp     0x410806
  4107af:	stos   DWORD PTR es:[edi],eax
  4107b0:	lds    esi,FWORD PTR [edx+0x7a]
  4107b3:	not    BYTE PTR [ebx+esi*4]
  4107b6:	add    esi,DWORD PTR [esi-0x6d0532a0]
  4107bc:	(bad)  
  4107bd:	mov    WORD PTR [edx-0x4100b0c8],cs
  4107c3:	sar    BYTE PTR [ecx],0x68
  4107c6:	adc    DWORD PTR [ebx+0x2],ebx
  4107c9:	push   es
  4107ca:	pop    edi
  4107cb:	sub    DWORD PTR [ebx+eax*1-0x11],eax
  4107cf:	test   DWORD PTR [edx],esi
  4107d1:	(bad)  
  4107d2:	fsubr  DWORD PTR gs:[ecx]
  4107d5:	xor    DWORD PTR [ebp-0x191bd348],edi
  4107db:	cmc    
  4107dc:	and    esp,DWORD PTR [bp+di]
  4107df:	test   bh,dh
  4107e1:	retf   0xffb9
  4107e4:	and    edx,esi
  4107e6:	xor    DWORD PTR [edx],ebp
  4107e8:	pop    ss
  4107e9:	aas    
  4107ea:	sbb    al,0xeb
  4107ec:	fwait
  4107ed:	je     0x410867
  4107ef:	mov    ecx,0x3ae7e20e
  4107f4:	xchg   ecx,eax
  4107f5:	stc    
  4107f6:	sub    eax,ebp
  4107f8:	or     DWORD PTR [ebx+0x8],0xffffff93
  4107fc:	lods   eax,DWORD PTR ds:[esi]
  4107fd:	loop   0x4107cb
  4107ff:	push   esi
  410800:	hlt    
  410801:	or     DWORD PTR [esi+0x6c],eax
  410804:	mov    BYTE PTR [ebx],dl
  410806:	lods   al,BYTE PTR ds:[esi]
  410807:	xor    al,0x9b
  410809:	clc    
  41080a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080b:	lea    esp,[ebx+0x2dcfdff9]
  410811:	test   eax,0x37154bc8
  410816:	ins    BYTE PTR es:[edi],dx
  410817:	inc    eax
  410818:	ins    DWORD PTR es:[edi],dx
  410819:	daa    
  41081a:	sbb    eax,0xbbe6f1e9
  41081f:	sbb    DWORD PTR [esi],ebx
  410821:	sub    BYTE PTR [ebx+eax*4+0x11],al
  410825:	pop    ss
  410826:	jbe    0x4107ca
  410828:	scas   al,BYTE PTR es:[edi]
  410829:	and    DWORD PTR [edx],0x34
  41082c:	cld    
  41082d:	aad    0xc5
  41082f:	pop    ss
  410830:	(bad)  
  410831:	sbb    DWORD PTR [edi+0x2ce8f803],esp
  410837:	lods   al,BYTE PTR ds:[esi]
  410838:	test   DWORD PTR [edi+0x8],ebx
  41083b:	push   ebp
  41083c:	jne    0x410802
  41083e:	sti    
  41083f:	adc    BYTE PTR [ecx+0x22aaa4d8],ah
  410845:	pop    ebp
  410846:	lods   eax,DWORD PTR ds:[esi]
  410847:	mov    es,WORD PTR [eax]
  410849:	mov    esi,DWORD PTR [ebx+0x446fdab6]
  41084f:	out    dx,eax
  410850:	(bad)  
  410851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410852:	mov    WORD PTR ds:0x5e1bae75,cs
  410858:	jge    0x4107e8
  41085a:	bswap  eax
  41085c:	loope  0x4108d3
  41085e:	std    
  41085f:	adc    BYTE PTR [edx-0x6917ed5c],ch
  410865:	les    ebx,FWORD PTR [edi-0x77]
  410868:	jne    0x4108a0
  41086a:	or     DWORD PTR ds:0x938e4cc3,esi
  410870:	arpl   WORD PTR [bp+di-0x42],cx
  410874:	popf   
  410875:	ins    DWORD PTR es:[edi],dx
  410876:	jno    0x410863
  410878:	sub    al,0xc5
  41087a:	data16 fldcw WORD PTR [eax-0x4e]
  41087e:	int    0xa3
  410880:	xlat   BYTE PTR ds:[ebx]
  410881:	bound  esi,QWORD PTR [ecx]
  410883:	mov    ecx,0x210af246
  410888:	addr16 mov ecx,0x58cbb348
  41088e:	dec    esp
  41088f:	fmulp  st(5),st
  410891:	daa    
  410892:	dec    edx
  410893:	sbb    al,BYTE PTR gs:[ecx+ebp*2+0x1e397ca7]
  41089b:	sbb    eax,0xa8c7b712
  4108a0:	(bad)  
  4108a1:	aad    0x95
  4108a3:	(bad)  
  4108a4:	rcr    DWORD PTR [edi+0x2d2f094e],1
  4108aa:	inc    eax
  4108ab:	fidiv  WORD PTR [edi+0xfd28bf5]
  4108b1:	loop   0x410843
  4108b3:	clc    
  4108b4:	icebp  
  4108b5:	std    
  4108b6:	mov    bl,0x7b
  4108b8:	out    0xdf,al
  4108ba:	mov    al,ds:0x2d8eedb6
  4108bf:	sti    
  4108c0:	lahf   
  4108c1:	fadd   DWORD PTR [ebx]
  4108c3:	xor    bh,dh
  4108c5:	shl    DWORD PTR [edx+eiz*1],0x42
  4108c9:	fwait
  4108ca:	inc    ebp
  4108cb:	cmp    BYTE PTR [edx+0xb],dh
  4108ce:	pop    esp
  4108cf:	push   cs
  4108d0:	dec    ebp
  4108d1:	xchg   esi,eax
  4108d2:	mov    dh,0x44
  4108d4:	iret   
  4108d5:	jp     0x41090c
  4108d7:	mov    al,0x6b
  4108d9:	clc    
  4108da:	lahf   
  4108db:	in     eax,dx
  4108dc:	js     0x410946
  4108de:	pop    ebx
  4108df:	or     al,0x6f
  4108e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e2:	fnsave [ebx]
  4108e4:	stos   BYTE PTR es:[edi],al
  4108e5:	test   BYTE PTR [ebx-0xacf7ad4],ch
  4108eb:	test   BYTE PTR [ecx+0x55],0xa0
  4108ef:	mov    ?,WORD PTR [ebx+edi*4-0x2b8a684d]
  4108f6:	test   DWORD PTR ds:0xe4ca3ed5,0xfb7cfb27
  410900:	xor    eax,0x7ec08e31
  410905:	pop    edx
  410906:	and    eax,0x136f7189
  41090b:	retf   
  41090c:	jns    0x41092f
  41090e:	xor    edi,esi
  410910:	dec    DWORD PTR ds:0x6dfa7450
  410916:	int3   
  410917:	dec    esi
  410918:	lea    edi,[edi-0x7fdb6b48]
  41091e:	sub    DWORD PTR [esi],esi
  410920:	pop    ss
  410921:	popf   
  410922:	retf   0xa9ea
  410925:	retf   0x74ee
  410928:	mov    dl,0xca
  41092a:	int    0x78
  41092c:	fisttp DWORD PTR [esi+0x30]
  41092f:	clc    
  410930:	sbb    BYTE PTR [ecx],ah
  410932:	inc    ecx
  410933:	inc    ebx
  410934:	imul   edi,DWORD PTR [eax-0x5948fb11],0xffffffb4
  41093b:	jb     0x4108d3
  41093d:	mov    edx,0x189f982c
  410942:	pop    ebx
  410943:	call   0x559d:0xdf6cad2e
  41094a:	xor    eax,0x8bb2e756
  41094f:	or     BYTE PTR fs:[ecx],bl
  410952:	loope  0x4108d9
  410954:	out    dx,eax
  410955:	(bad)  
  410956:	mov    cl,0xb8
  410958:	into   
  410959:	out    dx,al
  41095a:	aaa    
  41095b:	mov    ebp,0x21bc41bf
  410960:	es xchg ebx,eax
  410962:	inc    edx
  410963:	cmp    eax,0x1a44453f
  410968:	and    BYTE PTR [edx],ch
  41096a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41096b:	ins    DWORD PTR es:[edi],dx
  41096c:	dec    ecx
  41096d:	inc    ecx
  41096e:	mov    cl,0xc5
  410970:	stc    
  410971:	jmp    0x75fd:0x3126e850
  410978:	mov    ah,0x40
  41097a:	dec    esp
  41097b:	mov    ecx,esi
  41097d:	pop    ebp
  41097e:	fild   DWORD PTR [eax+0x5]
  410981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410982:	pop    ds
  410983:	ja     0x4109fc
  410985:	push   0x73
  410987:	stc    
  410988:	fs (bad) 
  41098a:	fnstcw WORD PTR [ecx+0x31]
  41098d:	pop    ebx
  41098e:	or     dh,BYTE PTR [edi-0x14]
  410991:	mov    esp,0xea802556
  410996:	outs   dx,BYTE PTR ds:[esi]
  410997:	mov    bh,dh
  410999:	aad    0x9
  41099b:	addr16 jb 0x410930
  41099e:	pop    edi
  41099f:	repz xchg edx,eax
  4109a1:	js     0x4109d7
  4109a3:	mov    ecx,0x5fd29881
  4109a8:	loop   0x41095a
  4109aa:	ret    
  4109ab:	add    al,0x16
  4109ad:	mov    ebx,0x3f8aa203
  4109b2:	outs   dx,DWORD PTR ds:[esi]
  4109b3:	xor    al,0xca
  4109b5:	not    edx
  4109b7:	mov    ds:0xed7146b8,al
  4109bc:	dec    esp
  4109bd:	rcr    BYTE PTR [esi],1
  4109bf:	sahf   
  4109c0:	xor    BYTE PTR [ebp+0x33],bl
  4109c3:	mov    ch,dl
  4109c5:	imul   DWORD PTR [edx-0x6e]
  4109c8:	pop    edi
  4109c9:	inc    esi
  4109ca:	sub    BYTE PTR [edx+0x7f936d28],bh
  4109d0:	mov    esi,DWORD PTR [ebx+ebp*2-0xf]
  4109d4:	clc    
  4109d5:	add    eax,0xd86b3759
  4109da:	xchg   ebx,eax
  4109db:	jno    0x410a09
  4109dd:	adc    ah,BYTE PTR [edi-0x30365d61]
  4109e3:	mov    ds:0xc6e132e0,eax
  4109e8:	jmp    0xbe4e2e2d
  4109ed:	rcl    BYTE PTR [esi*2+0x62a3be75],cl
  4109f4:	sar    BYTE PTR gs:[ebp-0x7f],0x6e
  4109f9:	and    ebx,DWORD PTR [ebx+0x663b5795]
  4109ff:	(bad)  
  410a00:	add    DWORD PTR fs:[bp+si],esi
  410a04:	xor    al,0x5f
  410a06:	and    eax,0xbe7d063
  410a0b:	push   ss
  410a0c:	cld    
  410a0d:	xor    al,0x3f
  410a0f:	rol    DWORD PTR cs:[ebx-0x3d],1
  410a13:	adc    al,0x74
  410a15:	add    eax,0x3ff2f6a7
  410a1a:	ds inc ebp
  410a1c:	sub    esi,0x21
  410a1f:	push   ss
  410a20:	mov    bh,0xb7
  410a22:	loope  0x410a1c
  410a24:	dec    edi
  410a25:	je     0x410aa1
  410a27:	loopne 0x4109e7
  410a29:	push   edx
  410a2a:	dec    edx
  410a2b:	cmp    eax,0x13003664
  410a30:	mov    al,0x17
  410a32:	leave  
  410a33:	(bad)  
  410a34:	sti    
  410a35:	sbb    ebx,ebx
  410a37:	sub    ecx,0xffffffa2
  410a3a:	ret    
  410a3b:	pop    eax
  410a3c:	arpl   WORD PTR [ebp-0xa],ax
  410a3f:	nop
  410a40:	mov    bh,0xa6
  410a42:	push   ebp
  410a43:	scas   eax,DWORD PTR es:[edi]
  410a44:	test   eax,0x68660803
  410a49:	jp     0x410a66
  410a4b:	mov    es,WORD PTR [ebp+0x47]
  410a4e:	xchg   ebx,eax
  410a4f:	in     eax,dx
  410a50:	sbb    al,BYTE PTR [ecx+0x37]
  410a53:	mov    esp,0x61f2e52b
  410a58:	test   al,0x7e
  410a5a:	cdq    
  410a5b:	mov    eax,0xc45537ce
  410a60:	sub    edi,edi
  410a62:	mov    esp,0x11382b8e
  410a67:	lock mov eax,ds:0x3e2edbcb
  410a6d:	dec    DWORD PTR [ecx]
  410a6f:	push   cs
  410a70:	in     eax,dx
  410a71:	in     al,0x35
  410a73:	mov    edx,edi
  410a75:	loopne 0x410a4c
  410a77:	in     eax,dx
  410a78:	and    eax,0xb3758576
  410a7d:	jb     0x410a6d
  410a7f:	aas    
  410a80:	out    dx,eax
  410a81:	mov    eax,0x25ac2716
  410a86:	mov    eax,ds:0x1273008f
  410a8b:	mov    edx,0x57e5d23c
  410a90:	sahf   
  410a91:	rol    DWORD PTR [ebx],0xab
  410a94:	adc    DWORD PTR [ebx-0x76],0x66a11357
  410a9b:	push   0xffffffc9
  410a9d:	pop    esi
  410a9e:	imul   edi,DWORD PTR [eax],0xfffffff6
  410aa1:	adc    ecx,DWORD PTR [edx+eiz*8-0x177814dc]
  410aa8:	cmp    eax,0x2a860614
  410aad:	rcr    DWORD PTR [edi],cl
  410aaf:	adc    BYTE PTR [ebx+0x108406b3],ah
  410ab5:	push   ecx
  410ab6:	mov    dh,0xd2
  410ab8:	pop    ecx
  410ab9:	retf   0xc55f
  410abc:	dec    ebx
  410abd:	hlt    
  410abe:	shl    DWORD PTR [edi],1
  410ac0:	mov    ebp,0x567a85de
  410ac5:	sub    ah,BYTE PTR [esi+0x54d3d8f7]
  410acb:	add    eax,0x3061a1e2
  410ad0:	out    0x89,eax
  410ad2:	repnz fs sub eax,0xe62613b2
  410ad9:	xchg   ebx,eax
  410ada:	pop    ss
  410adb:	sbb    BYTE PTR [edx-0x40660ed0],ah
  410ae1:	or     ebx,DWORD PTR [edx]
  410ae3:	pop    ebp
  410ae4:	das    
  410ae5:	xlat   BYTE PTR ds:[ebx]
  410ae6:	cs dec esi
  410ae8:	adc    esi,esi
  410aea:	adc    dl,BYTE PTR [edi+eax*1-0x4a]
  410aee:	test   dl,cl
  410af0:	mov    bh,0x56
  410af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af3:	xchg   edi,eax
  410af4:	and    ecx,DWORD PTR [edx-0x1c]
  410af7:	inc    edx
  410af8:	xchg   ebp,eax
  410af9:	js     0x410ab0
  410afb:	xchg   esi,eax
  410afc:	imul   ecx,DWORD PTR [eax+0x340d1a95],0xffffff88
  410b03:	shr    BYTE PTR [eax+0xc],cl
  410b06:	fwait
  410b07:	shl    DWORD PTR ds:0x8f395a34,cl
  410b0d:	popa   
  410b0e:	dec    esi
  410b0f:	xchg   ebx,eax
  410b10:	aad    0x6b
  410b12:	stos   BYTE PTR es:[edi],al
  410b13:	sbb    cl,BYTE PTR gs:[ebx+0x5b630f92]
  410b1a:	das    
  410b1b:	pop    ebp
  410b1c:	outs   dx,BYTE PTR ds:[esi]
  410b1d:	pop    edx
  410b1e:	sbb    BYTE PTR [ecx],ah
  410b20:	xor    BYTE PTR [esi+ecx*2],bl
  410b23:	add    eax,0x426b3d32
  410b28:	bound  ecx,QWORD PTR [edx+0x504039c2]
  410b2e:	mov    edx,esi
  410b30:	mov    ebp,esp
  410b32:	mov    bh,0x88
  410b34:	sbb    eax,0xc44b3df8
  410b39:	xchg   ebx,eax
  410b3a:	mov    ebp,0x489ee90c
  410b3f:	push   0x72
  410b41:	inc    edx
  410b42:	mov    al,ds:0xf3afd191
  410b47:	mov    esi,0xb0105d77
  410b4c:	mov    al,0x57
  410b4e:	ss retf 
  410b50:	mov    eax,ds:0x8dac5dfc
  410b55:	imul   ecx,ebp,0xffffffe0
  410b58:	sub    al,0x6b
  410b5a:	xchg   edx,eax
  410b5b:	jl     0x410b3b
  410b5d:	xchg   BYTE PTR [ebx],dh
  410b5f:	je     0x410bcb
  410b61:	mov    ecx,es
  410b63:	retf   
  410b64:	loope  0x410ba1
  410b66:	adc    esp,DWORD PTR [ebx]
  410b68:	or     ebx,DWORD PTR [esi+0x1d143a92]
  410b6e:	inc    esi
  410b6f:	pinsrw mm5,WORD PTR [ebx],0xca
  410b73:	dec    esp
  410b74:	fcmovne st,st(7)
  410b76:	cmp    edi,DWORD PTR [ebx+0xa]
  410b79:	add    al,BYTE PTR [esp+eiz*4+0x4b]
  410b7d:	push   ecx
  410b7e:	jge    0x410bc7
  410b80:	pushf  
  410b81:	or     al,0xa7
  410b83:	adc    al,0xb9
  410b85:	sar    DWORD PTR [esi-0x401f8534],1
  410b8b:	inc    ecx
  410b8c:	add    eax,0x71354f3d
  410b91:	xchg   ebp,eax
  410b92:	jle    0x410b75
  410b94:	mov    eax,0xed4b150f
  410b99:	into   
  410b9a:	sbb    eax,0x2f946d5c
  410b9f:	retf   0xb3b4
  410ba2:	addr16 inc ebp
  410ba4:	push   ecx
  410ba5:	push   es
  410ba6:	retf   0x662e
  410ba9:	cmp    ch,BYTE PTR [ecx+0x43499150]
  410baf:	mov    esp,0xfd73584e
  410bb4:	int3   
  410bb5:	(bad)  
  410bb6:	ins    BYTE PTR es:[edi],dx
  410bb7:	sbb    al,0x9d
  410bb9:	scas   eax,DWORD PTR es:[edi]
  410bba:	dec    edi
  410bbb:	dec    ecx
  410bbc:	xchg   ebp,eax
  410bbd:	sub    cl,BYTE PTR [ebp-0x77]
  410bc0:	jne    0x410c20
  410bc2:	test   al,0x5a
  410bc4:	test   DWORD PTR [edi],edx
  410bc6:	fstp   DWORD PTR [edi+esi*2+0x60]
  410bca:	inc    ebx
  410bcb:	out    0x82,eax
  410bcd:	sub    DWORD PTR [edx+ecx*4-0x65],eax
  410bd1:	pop    ebp
  410bd2:	lods   al,BYTE PTR ds:[esi]
  410bd3:	(bad)
  410bd6:	pop    esi
  410bd7:	jecxz  0x410b5d
  410bd9:	mov    edx,0xbd44cbe7
  410bde:	jo     0x410c54
  410be0:	push   eax
  410be1:	xchg   DWORD PTR [esi+0x45],ebx
  410be4:	scas   eax,DWORD PTR es:[edi]
  410be5:	mov    BYTE PTR [esp+ecx*2+0x512833d6],dl
  410bec:	sub    ch,BYTE PTR es:[esi]
  410bef:	mov    eax,0x3bcba98c
  410bf4:	mov    edx,0xfcd43f53
  410bf9:	cmovl  edi,DWORD PTR [edx-0x6c]
  410bfd:	lahf   
  410bfe:	xchg   ecx,eax
  410bff:	jp     0x410c7f
  410c01:	mov    BYTE PTR [edi-0x9],bh
  410c04:	aam    0xed
  410c06:	inc    esi
  410c07:	std    
  410c08:	and    ebp,DWORD PTR es:[eax-0xad091c6]
  410c0f:	jae    0x410bee
  410c11:	jle    0x410c47
  410c13:	call   0x2c268345
  410c18:	repnz inc edi
  410c1a:	fs pop es
  410c1c:	popf   
  410c1d:	enter  0x762b,0x48
  410c21:	pop    ss
  410c22:	(bad)  
  410c23:	(bad)  
  410c24:	cwde   
  410c25:	sub    BYTE PTR [edi-0x4d],al
  410c28:	jno    0x410ca9
  410c2a:	aad    0x38
  410c2c:	jno    0x410c9f
  410c2e:	xor    eax,0xd763e322
  410c33:	push   eax
  410c34:	cmp    ecx,esp
  410c36:	rol    BYTE PTR [edx],1
  410c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c39:	in     eax,0x1b
  410c3b:	adc    dl,ah
  410c3d:	test   al,0x7e
  410c3f:	jb     0x410c0c
  410c41:	iret   
  410c42:	ror    BYTE PTR [ebp-0x2e958104],0xbd
  410c49:	xor    ch,bl
  410c4b:	and    eax,0xc74b0194
  410c50:	jmp    0x410c04
  410c52:	daa    
  410c53:	mov    dl,0x63
  410c55:	sbb    BYTE PTR [edx],cl
  410c57:	pop    es
  410c58:	pushf  
  410c59:	sub    esp,DWORD PTR cs:[esi-0x27]
  410c5d:	data16 int 0xa2
  410c60:	scas   al,BYTE PTR es:[edi]
  410c61:	mov    al,0x5e
  410c63:	mov    dl,0x23
  410c65:	leave  
  410c66:	into   
  410c67:	retf   
  410c68:	cmp    ecx,DWORD PTR [ecx]
  410c6a:	sbb    eax,0xa8153f1a
  410c6f:	pusha  
  410c70:	daa    
  410c71:	stc    
  410c72:	bound  edi,QWORD PTR [ebx-0x37]
  410c75:	dec    esp
  410c76:	int3   
  410c77:	out    0xe7,eax
  410c79:	mov    bl,0x4a
  410c7b:	xchg   ebp,eax
  410c7c:	push   cs
  410c7d:	jne    0x410cf3
  410c7f:	rcr    bh,cl
  410c81:	jnp    0x410c36
  410c83:	(bad)  
  410c84:	jge    0x410cf4
  410c86:	bnd jae 0x410c3a
  410c89:	or     ch,dl
  410c8b:	adc    al,0x38
  410c8d:	rol    edi,cl
  410c8f:	cwde   
  410c90:	fiadd  DWORD PTR [edx-0x3d]
  410c93:	arpl   WORD PTR [ebx],cx
  410c95:	push   ds
  410c96:	or     al,0x3a
  410c98:	scas   eax,DWORD PTR es:[edi]
  410c99:	mov    al,0x20
  410c9b:	fwait
  410c9c:	push   0x8eac7131
  410ca1:	sbb    edi,DWORD PTR [edx-0x72]
  410ca4:	(bad)  
  410ca5:	or     esp,DWORD PTR [ecx-0x128d9e47]
  410cab:	sub    esp,ebx
  410cad:	push   edx
  410cae:	sbb    BYTE PTR [esi],ah
  410cb0:	(bad)  
  410cb2:	sbb    dh,0xcf
  410cb5:	daa    
  410cb6:	sti    
  410cb7:	adc    al,0x1d
  410cb9:	jmp    0x410c66
  410cbb:	or     al,0x22
  410cbd:	das    
  410cbe:	or     eax,0x4546af29
  410cc3:	xchg   esi,eax
  410cc4:	ss pop eax
  410cc6:	adc    al,bh
  410cc8:	inc    ecx
  410cc9:	cdq    
  410cca:	call   0xac01:0xbd0e537b
  410cd1:	fcomp  DWORD PTR [ecx+0x35]
  410cd4:	adc    al,0x9d
  410cd6:	mov    edx,ecx
  410cd8:	imul   eax,DWORD PTR [ebx-0x1ba1d94a],0x69831f83
  410ce2:	mov    edx,0xc40f5eac
  410ce7:	imul   esi,edi,0xffffffcb
  410cea:	xchg   edx,eax
  410ceb:	push   esi
  410cec:	ins    DWORD PTR es:[edi],dx
  410ced:	(bad)  
  410cee:	fisubr DWORD PTR [ebp-0x2fd54f7c]
  410cf4:	(bad)  
  410cf5:	add    esp,esp
  410cf7:	hlt    
  410cf8:	adc    eax,0x47c2d600
  410cfd:	inc    edi
  410cfe:	xor    ch,al
  410d00:	test   eax,0xfa5b4ced
  410d05:	scas   al,BYTE PTR es:[edi]
  410d06:	jmp    0xcecad0e3
  410d0b:	add    ebp,DWORD PTR [eax-0x65]
  410d0e:	popf   
  410d0f:	icebp  
  410d10:	enter  0xb34f,0x8b
  410d14:	shl    DWORD PTR cs:[eax+0x36],1
  410d18:	mov    esi,DWORD PTR [eax-0x4b]
  410d1b:	mov    cl,0x3c
  410d1d:	dec    esp
  410d1e:	or     eax,ecx
  410d20:	or     BYTE PTR [eax],dl
  410d22:	rcl    DWORD PTR ds:0x6c0afca5,0x80
  410d29:	(bad)  
  410d2a:	icebp  
  410d2b:	mov    eax,ds:0x73c08236
  410d30:	sbb    esi,DWORD PTR [esi-0x66]
  410d33:	loopne 0x410d76
  410d35:	or     ah,ch
  410d37:	dec    ebx
  410d38:	icebp  
  410d39:	mov    al,0xa8
  410d3b:	pop    esp
  410d3c:	call   0x208251c9
  410d41:	int3   
  410d42:	mov    edi,0x568631d
  410d47:	stos   DWORD PTR es:[edi],eax
  410d48:	in     eax,dx
  410d49:	psubusb mm3,QWORD PTR [ecx-0xf8abc15]
  410d50:	sbb    dh,BYTE PTR [ebx+0x542d0f30]
  410d56:	adc    ah,BYTE PTR ds:0x7290e95c
  410d5c:	sub    BYTE PTR [eax+0x19122738],al
  410d62:	inc    esp
  410d63:	aas    
  410d64:	fisttp QWORD PTR [eax-0x2cc26e33]
  410d6a:	fldenv [ecx+0x2b703f2b]
  410d70:	inc    ebp
  410d71:	imul   eax,ecx,0xffffffea
  410d74:	sub    BYTE PTR [esi+0x2a429dc],dh
  410d7a:	lods   al,BYTE PTR ds:[esi]
  410d7b:	push   ss
  410d7c:	ss inc edi
  410d7e:	fs mov edi,0x6ca08068
  410d84:	xchg   dl,cl
  410d86:	inc    ecx
  410d87:	push   edi
  410d88:	inc    esi
  410d89:	adc    DWORD PTR cs:[ecx+esi*2+0x441ca602],ebp
  410d91:	aam    0xbb
  410d93:	mov    ah,0xae
  410d95:	enter  0x6fe8,0x6
  410d99:	and    BYTE PTR [ebx+0x3b],ch
  410d9c:	popf   
  410d9d:	mov    bh,0x97
  410d9f:	popf   
  410da0:	or     al,0x2
  410da2:	lds    ecx,FWORD PTR [ebp-0x3a7aeea8]
  410da8:	sbb    esi,eax
  410daa:	pop    ecx
  410dab:	sub    al,BYTE PTR [ebp+0x65701fce]
  410db1:	or     DWORD PTR [ecx-0x2b5e9bd9],esp
  410db7:	xchg   BYTE PTR [si-0x32],cl
  410dbb:	sbb    cl,BYTE PTR [ebx-0x74]
  410dbe:	jnp    0x410e35
  410dc0:	lock dec edx
  410dc2:	sbb    al,BYTE PTR [edx]
  410dc4:	push   edx
  410dc5:	mov    dl,0x11
  410dc7:	jmp    0x26b:0x43188cd1
  410dce:	dec    ecx
  410dcf:	arpl   WORD PTR [esi],di
  410dd1:	adc    eax,0x206e728d
  410dd6:	icebp  
  410dd7:	xor    eax,0xe8c74ec
  410ddc:	sbb    eax,DWORD PTR [esi]
  410dde:	nop
  410ddf:	jmp    0xa5d116df
  410de4:	sub    cl,BYTE PTR [esi-0x4bfb224]
  410dea:	sub    bl,0xa0
  410ded:	fcmovbe st,st(7)
  410def:	call   0xc4964b9e
  410df4:	stos   BYTE PTR es:[edi],al
  410df5:	inc    esp
  410df6:	and    DWORD PTR [edi],esi
  410df8:	sub    eax,0x5b9979f9
  410dfd:	sub    ebp,DWORD PTR ds:0xa669651a
  410e03:	in     al,dx
  410e04:	push   0xfffffff7
  410e06:	int3   
  410e07:	loope  0x410de4
  410e09:	push   es
  410e0a:	adc    ch,bh
  410e0c:	and    eax,esi
  410e0e:	stos   BYTE PTR es:[edi],al
  410e0f:	mov    ch,0xc1
  410e11:	push   ecx
  410e12:	add    ecx,ecx
  410e14:	gs mov bl,0x85
  410e17:	mov    dl,0x4
  410e19:	gs ins BYTE PTR es:[edi],dx
  410e1b:	fstp   DWORD PTR [ecx+0x727cb499]
  410e21:	push   ecx
  410e22:	outs   dx,DWORD PTR ds:[esi]
  410e23:	and    DWORD PTR [edx+0x16],0x1f
  410e27:	test   DWORD PTR [ecx+0x52],0x384bdeb1
  410e2e:	xor    edx,edx
  410e30:	mov    eax,0x59ba86f6
  410e35:	aaa    
  410e36:	inc    edi
  410e37:	fcomp  DWORD PTR [edx-0x74c081dc]
  410e3d:	inc    ebx
  410e3e:	jo     0x410e9e
  410e40:	stos   DWORD PTR es:[edi],eax
  410e41:	cli    
  410e42:	jp     0x410e6f
  410e44:	js     0x410df7
  410e46:	xlat   BYTE PTR ds:[ebx]
  410e47:	ja     0x410dd0
  410e49:	jp     0x410de6
  410e4b:	imul   ecx,DWORD PTR [eax+0x32aa199d],0x47
  410e52:	in     al,dx
  410e53:	aas    
  410e54:	test   DWORD PTR [ecx+0x24],ebp
  410e57:	push   cs
  410e58:	add    DWORD PTR [ecx+0x70],eax
  410e5b:	push   ecx
  410e5c:	push   ds
  410e5d:	cdq    
  410e5e:	fbstp  TBYTE PTR [esp+edi*1-0x3dc370ab]
  410e65:	pop    ebp
  410e66:	sbb    dh,BYTE PTR [eax+eiz*1-0x668acb1d]
  410e6d:	sbb    al,0x3c
  410e6f:	les    edi,FWORD PTR [esi+0x1336e747]
  410e75:	test   eax,0x61c18226
  410e7a:	inc    eax
  410e7b:	mov    eax,0x55c74bb7
  410e80:	je     0x410ed6
  410e82:	jno    0x410edd
  410e84:	push   edx
  410e85:	fadd   DWORD PTR [eax]
  410e87:	push   ebx
  410e88:	ret    
  410e89:	adc    eax,0xea17c10
  410e8e:	push   ss
  410e8f:	xchg   ecx,eax
  410e90:	out    0xbd,eax
  410e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e93:	dec    edx
  410e94:	adc    eax,0x9284a749
  410e99:	dec    eax
  410e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e9b:	loope  0x410eac
  410e9d:	mov    bh,0xdf
  410e9f:	mov    bl,ch
  410ea1:	jbe    0x410ed3
  410ea3:	inc    esp
  410ea4:	jmp    0xd619:0x1edee01
  410eab:	sbb    DWORD PTR [ecx],ebx
  410ead:	adc    esi,DWORD PTR [ebp+0x57cbdf3d]
  410eb3:	push   ss
  410eb4:	outs   dx,DWORD PTR ds:[esi]
  410eb5:	pusha  
  410eb6:	popf   
  410eb7:	ins    BYTE PTR es:[edi],dx
  410eb8:	inc    ebx
  410eb9:	jmp    0xfcab02f4
  410ebe:	lock sbb ah,BYTE PTR [edi+0x74]
  410ec2:	fcos   
  410ec4:	push   edi
  410ec5:	sub    BYTE PTR [edi-0x3c],0x5c
  410ec9:	ror    DWORD PTR [eax],cl
  410ecb:	dec    ebx
  410ecc:	push   eax
  410ecd:	std    
  410ece:	loop   0x410f34
  410ed0:	jecxz  0x410eb1
  410ed2:	scas   al,BYTE PTR es:[edi]
  410ed3:	mov    ebp,0x845c6ef0
  410ed8:	jns    0x410e79
  410eda:	(bad)  [ecx-0x71]
  410edd:	les    ebp,FWORD PTR [edx]
  410edf:	cdq    
  410ee0:	or     BYTE PTR [eax],0x70
  410ee3:	cli    
  410ee4:	jne    0x410ee9
  410ee6:	jg     0x410e94
  410ee8:	fcom   DWORD PTR [esi-0x75]
  410eeb:	sbb    al,0x61
  410eed:	pop    es
  410eee:	sub    eax,0x57de69ea
  410ef3:	popf   
  410ef4:	cmp    dl,al
  410ef6:	add    dh,BYTE PTR [esi]
  410ef8:	jle    0x410ece
  410efa:	dec    eax
  410efb:	push   es
  410efc:	add    al,0xf9
  410efe:	mov    ecx,0x486bae5a
  410f03:	mov    al,ds:0xeb103697
  410f08:	fisub  DWORD PTR [edi+0x9]
  410f0b:	mov    bh,0x60
  410f0d:	sub    ebx,esp
  410f0f:	mov    al,ds:0xe2f2d145
  410f14:	mov    esi,0xb5c6ea30
  410f19:	scas   eax,DWORD PTR es:[edi]
  410f1a:	sub    BYTE PTR [ebx],bh
  410f1c:	jmp    0x6607:0xc2e74c73
  410f23:	jno    0x410f71
  410f25:	clc    
  410f26:	add    bl,BYTE PTR [ebx]
  410f28:	out    0x19,eax
  410f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2b:	xchg   ebp,eax
  410f2c:	or     al,0x71
  410f2e:	sub    edx,DWORD PTR [ebx-0x24]
  410f31:	enter  0x3cec,0xa8
  410f35:	xchg   ebp,eax
  410f36:	push   ebp
  410f37:	add    eax,0xd76fdf07
  410f3c:	inc    eax
  410f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f3e:	lahf   
  410f3f:	sti    
  410f40:	xchg   DWORD PTR [ebx-0x304dc231],ebx
  410f46:	xchg   DWORD PTR [esp+eiz*2+0x23],eax
  410f4a:	and    eax,0xaf7df4ec
  410f4f:	inc    ebx
  410f50:	add    dl,ch
  410f52:	jo     0x410f41
  410f54:	js     0x410fc4
  410f56:	sub    DWORD PTR [edi],ebp
  410f58:	mov    edx,0x778f2628
  410f5d:	push   edi
  410f5e:	test   BYTE PTR [edx-0x72987f6],ch
  410f64:	add    BYTE PTR [ecx],0x4c
  410f67:	nop
  410f68:	into   
  410f69:	and    BYTE PTR [esi+eax*4-0x26],dh
  410f6d:	mov    esp,0xae2f053b
  410f72:	jmp    0x410f38
  410f74:	data16 ins BYTE PTR es:[edi],dx
  410f76:	or     eax,0x3e553150
  410f7b:	push   ss
  410f7c:	stos   DWORD PTR es:[edi],eax
  410f7d:	and    eax,0xd501f0f9
  410f82:	fnstcw WORD PTR [edx]
  410f84:	adc    esi,ebx
  410f86:	sbb    al,BYTE PTR [ebp+0x40]
  410f89:	(bad)  
  410f8a:	dec    edx
  410f8b:	rol    BYTE PTR [esi],0xc1
  410f8e:	xor    DWORD PTR [eax],0xffffffa9
  410f91:	ret    0xd906
  410f94:	mov    bl,0x86
  410f96:	mov    ch,0xb5
  410f98:	scas   eax,DWORD PTR es:[edi]
  410f99:	out    dx,al
  410f9a:	cmc    
  410f9b:	push   esi
  410f9c:	mov    al,0xc
  410f9e:	mov    al,0x19
  410fa0:	cs pop ecx
  410fa2:	sbb    eax,DWORD PTR [ebp+0x4b]
  410fa5:	icebp  
  410fa6:	imul   esp,DWORD PTR [ebp-0x28],0x97bff329
  410fad:	adc    edx,ecx
  410faf:	sub    ebx,DWORD PTR [eax-0x49a481f1]
  410fb5:	out    dx,eax
  410fb6:	mov    BYTE PTR [ebx+0x20],dl
  410fb9:	rcr    BYTE PTR [esi],cl
  410fbb:	arpl   WORD PTR ds:0x3beb15fb,sp
  410fc1:	or     ah,al
  410fc3:	out    0xe9,eax
  410fc5:	call   0xad5c:0x9e56cb71
  410fcc:	daa    
  410fcd:	loopne 0x410f82
  410fcf:	out    0xc,al
  410fd1:	push   esp
  410fd2:	xor    eax,0xcc03a2d7
  410fd7:	hlt    
  410fd8:	shl    BYTE PTR [esi+0x48],0x19
  410fdc:	add    al,0x9
  410fde:	scas   al,BYTE PTR es:[edi]
  410fdf:	aas    
  410fe0:	sbb    al,0xfe
  410fe2:	xchg   BYTE PTR [edi+edi*8-0x11c439c8],al
  410fe9:	or     BYTE PTR [esi-0x80],ah
  410fec:	ds daa 
  410fee:	inc    esi
  410fef:	lea    ecx,[edx+eiz*2+0x4a]
  410ff3:	ins    BYTE PTR es:[edi],dx
  410ff4:	mov    eax,ds:0x428a6a21
  410ff9:	adc    ah,ah
  410ffb:	into   
  410ffc:	nop
  410ffd:	mov    ch,0x48
  410fff:	mov    ecx,0x30981eda
  411004:	stc    
  411005:	dec    esp
  411006:	mov    edx,0x794b14d0
  41100b:	sbb    eax,0x26c7d131
  411010:	sbb    eax,0xc1c73be5
  411015:	test   BYTE PTR [esi+0x1ea0648d],ah
  41101b:	mov    BYTE PTR [esp+edi*2],dl
  41101e:	lods   al,BYTE PTR ds:[esi]
  41101f:	jnp    0x411026
  411021:	rcl    BYTE PTR [eax+0x5433575e],1
  411027:	pusha  
  411028:	cli    
  411029:	(bad)  
  41102b:	call   0x6658:0xda17e66b
  411032:	cs (bad) 
  411034:	mov    cl,0x87
  411036:	call   0x9f05ae7e
  41103b:	pop    edi
  41103c:	pushf  
  41103d:	mov    esi,0x5fdee059
  411042:	aas    
  411043:	mov    edi,0x62baf0bd
  411048:	mov    edx,0x45de589d
  41104d:	jne    0x411020
  41104f:	push   ebx
  411050:	mov    ah,0xe6
  411052:	fsub   DWORD PTR [edi+0x23]
  411055:	pop    es
  411056:	sbb    DWORD PTR [ebx],esi
  411058:	mov    dl,0xba
  41105a:	retf   0x56cf
  41105d:	jl     0x4110bf
  41105f:	cld    
  411060:	xchg   ecx,eax
  411061:	pop    DWORD PTR [edi+ecx*1-0x49bd7b0b]
  411068:	ret    0x9fe4
  41106b:	sub    DWORD PTR [ecx],0x5e
  41106e:	pop    ebx
  41106f:	daa    
  411070:	(bad)  [ebp-0x33bcce3]
  411076:	gs das 
  411078:	push   edx
  411079:	and    edi,DWORD PTR [ebx+ebp*2+0x37]
  41107d:	fcom   QWORD PTR [esi+0x605991da]
  411083:	mov    esp,0x10297b41
  411088:	int    0x80
  41108a:	cmc    
  41108b:	(bad)  
  41108c:	(bad)  
  41108e:	xor    al,0x2f
  411090:	pop    ecx
  411091:	push   edi
  411092:	outs   dx,DWORD PTR ds:[esi]
  411093:	adc    ebp,ebp
  411095:	fchs   
  411097:	sub    DWORD PTR [ebp-0x57],0xa65402dd
  41109e:	push   ss
  41109f:	nop
  4110a0:	dec    ebx
  4110a1:	push   0x4d61e0b
  4110a6:	sub    BYTE PTR [ebx],dh
  4110a8:	cli    
  4110a9:	add    ebp,DWORD PTR [edx]
  4110ab:	fild   WORD PTR [ebx+0x77]
  4110ae:	in     eax,0x28
  4110b0:	xor    esp,ecx
  4110b2:	repnz pop ds
  4110b4:	in     al,dx
  4110b5:	add    dl,BYTE PTR [esi]
  4110b7:	adc    DWORD PTR [edx],eax
  4110b9:	xor    al,0x6e
  4110bb:	and    ebx,edx
  4110bd:	mov    bh,0xd0
  4110bf:	adc    dl,al
  4110c1:	loope  0x411142
  4110c3:	mov    ebx,DWORD PTR [eax]
  4110c5:	inc    edi
  4110c6:	retf   
  4110c7:	push   esp
  4110c8:	add    DWORD PTR [ebp+0x66],eax
  4110cb:	inc    esp
  4110cc:	je     0x411092
  4110ce:	int3   
  4110cf:	mov    bl,0xf0
  4110d1:	jne    0x4110b6
  4110d3:	xchg   ebp,eax
  4110d4:	jecxz  0x411102
  4110d6:	adc    al,0x93
  4110d8:	inc    edx
  4110d9:	popf   
  4110da:	iret   
  4110db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110dc:	mov    ebp,0xbcdde27d
  4110e1:	pushf  
  4110e2:	call   0x38f8c99b
  4110e7:	mov    ebp,0xa3d5a7b
  4110ec:	lods   eax,DWORD PTR ds:[esi]
  4110ed:	in     al,0x7
  4110ef:	mov    ds:0xeae4e60c,eax
  4110f4:	jb     0x411077
  4110f6:	sub    al,0x96
  4110f8:	mov    eax,es:0xf739f48c
  4110fe:	mov    al,ds:0x4031d4f4
  411103:	outs   dx,BYTE PTR ds:[esi]
  411104:	std    
  411105:	lods   al,BYTE PTR ds:[esi]
  411106:	jl     0x4110c1
  411108:	add    ebp,ecx
  41110a:	aaa    
  41110b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41110c:	pop    ss
  41110d:	jle    0x4110a6
  41110f:	(bad)  
  411110:	ins    BYTE PTR es:[edi],dx
  411111:	cmp    eax,0xffed2711
  411116:	mulps  xmm0,XMMWORD PTR [eax-0x76]
  41111a:	dec    edx
  41111b:	pop    ebx
  41111c:	sbb    esi,esi
  41111e:	loop   0x4110bf
  411120:	dec    ebx
  411121:	xor    al,0x90
  411123:	mov    WORD PTR [esi],?
  411125:	dec    ecx
  411126:	scas   al,BYTE PTR es:[edi]
  411127:	sti    
  411128:	mov    ds:0xa0aa2c09,eax
  41112d:	dec    edi
  41112e:	xlat   BYTE PTR ds:[ebx]
  41112f:	jg     0x4110b2
  411131:	lds    eax,FWORD PTR [esi+0x26]
  411134:	pop    esp
  411135:	mov    esi,0xb61f8825
  41113a:	mov    bl,0x1a
  41113c:	(bad)  
  41113e:	data16 stos BYTE PTR es:[edi],al
  411140:	mov    edi,0xab5d96e3
  411145:	push   edi
  411146:	ss clc 
  411148:	dec    eax
  411149:	pop    ecx
  41114a:	lods   al,BYTE PTR ds:[esi]
  41114b:	mov    ss,WORD PTR [edx-0x30380280]
  411151:	inc    edx
  411152:	and    cl,al
  411154:	sub    edx,DWORD PTR [ebx-0x4b79e33d]
  41115a:	xor    ebx,DWORD PTR [edx]
  41115c:	push   esi
  41115d:	int    0x54
  41115f:	xchg   edi,eax
  411160:	jmp    0x763816bf
  411165:	sbb    edi,DWORD PTR es:[ecx]
  411168:	aaa    
  411169:	sahf   
  41116a:	fisttp WORD PTR [esi-0x36932c99]
  411170:	jnp    0x4111dc
  411172:	xchg   ecx,eax
  411173:	mov    esi,0xa4278d64
  411178:	rol    cl,cl
  41117a:	cmc    
  41117b:	jecxz  0x4111a6
  41117d:	(bad)  
  41117f:	adc    edx,edx
  411181:	out    0xf2,al
  411183:	not    ch
  411185:	add    DWORD PTR [ecx*1-0x6d1406d0],esp
  41118c:	xor    al,0x69
  41118e:	adc    DWORD PTR [esi+0x54],ecx
  411191:	and    ebx,ebx
  411193:	or     DWORD PTR [edi+0x61],ecx
  411196:	aad    0xac
  411198:	rcr    DWORD PTR [edx+0x67],1
  41119b:	test   BYTE PTR [ebp-0x11e8f6ff],bh
  4111a1:	retf   
  4111a2:	dec    eax
  4111a3:	mov    ds:0x51af52bc,al
  4111a8:	sahf   
  4111a9:	aaa    
  4111aa:	std    
  4111ab:	xchg   esi,eax
  4111ac:	stc    
  4111ad:	rol    BYTE PTR [edx],1
  4111af:	dec    edx
  4111b0:	and    al,0x2c
  4111b2:	rcr    DWORD PTR [edi+0x75],cl
  4111b5:	mov    ebx,0x2bb92f96
  4111ba:	jmp    0x8f0b:0x6f6b6370
  4111c1:	outs   dx,DWORD PTR ds:[esi]
  4111c2:	xchg   al,bh
  4111c4:	stos   BYTE PTR es:[edi],al
  4111c5:	pop    esp
  4111c6:	push   0xd54c27c4
  4111cb:	test   BYTE PTR [ecx],0xde
  4111ce:	pop    esp
  4111cf:	cwde   
  4111d0:	loope  0x411155
  4111d2:	in     eax,0x7a
  4111d4:	mov    al,ds:0x47057025
  4111d9:	xlat   BYTE PTR ds:[ebx]
  4111da:	shl    DWORD PTR [eax],0x16
  4111dd:	dec    edx
  4111de:	inc    esi
  4111df:	mov    ah,0x62
  4111e1:	nop
  4111e2:	and    ecx,esp
  4111e4:	mov    BYTE PTR [ebx-0x4b],bh
  4111e7:	jmp    0x1305:0xdc3ed40
  4111ee:	in     al,dx
  4111ef:	cwde   
  4111f0:	imul   ecx,esp,0xffffffc0
  4111f3:	cmp    ebx,DWORD PTR [ecx-0xd]
  4111f6:	inc    edi
  4111f7:	in     eax,0x18
  4111f9:	push   edi
  4111fa:	out    0xe3,al
  4111fc:	jae    0x4111c7
  4111fe:	lods   al,BYTE PTR ds:[esi]
  4111ff:	and    al,0x93
  411201:	push   esp
  411202:	arpl   sp,dx
  411204:	pop    edx
  411205:	pop    esi
  411206:	sub    eax,0x50c72d12
  41120b:	and    eax,0xf8cf5f45
  411210:	ror    DWORD PTR [esi],cl
  411212:	inc    ecx
  411213:	inc    esp
  411214:	inc    esi
  411215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411216:	cmp    eax,0x48f1869b
  41121b:	in     al,0xeb
  41121d:	in     al,dx
  41121e:	mov    al,ds:0x69dfb1fe
  411223:	call   eax
  411225:	pop    esp
  411226:	cld    
  411227:	test   BYTE PTR [eax-0x5f],0x97
  41122b:	test   DWORD PTR [ecx+eax*2+0x600cdc83],edx
  411232:	jne    0x41121f
  411234:	or     al,BYTE PTR [ebx]
  411236:	repnz dec ecx
  411238:	pop    edi
  411239:	popa   
  41123a:	icebp  
  41123b:	(bad)  
  41123c:	int3   
  41123d:	cmp    dh,al
  41123f:	fdiv   st,st(6)
  411241:	imul   DWORD PTR [edx]
  411243:	enter  0x1cfc,0xc0
  411247:	pop    esp
  411248:	fsubr  QWORD PTR [edi+ecx*4]
  41124b:	xchg   ebp,eax
  41124c:	jle    0x411225
  41124e:	pop    esi
  41124f:	(bad)  
  411250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411251:	out    0xd7,al
  411253:	sub    al,BYTE PTR [eax+0x6587d3d0]
  411259:	push   eax
  41125a:	or     DWORD PTR [esi-0x44],esi
  41125d:	adc    al,0x98
  41125f:	xor    eax,0x89a58c1e
  411264:	xor    bl,BYTE PTR [edi]
  411266:	imul   ecx,DWORD PTR fs:[ebx+0x3d4e4a2a],0xf7c6c7bd
  411271:	fs dec edi
  411273:	cld    
  411274:	lea    eax,[edi]
  411276:	push   ebx
  411277:	ins    DWORD PTR es:[edi],dx
  411278:	hlt    
  411279:	in     eax,0x4
  41127b:	pop    eax
  41127c:	jg     0x4112e8
  41127e:	sbb    ch,BYTE PTR [edi+eiz*2]
  411281:	and    dh,BYTE PTR [ebx-0x3f]
  411284:	sub    cl,ah
  411286:	push   cs
  411287:	mov    ebx,0x8c5f49dd
  41128c:	mov    cs,WORD PTR [ecx+0x7aa14bce]
  411292:	mov    ds:0x601a6ade,eax
  411297:	lods   eax,DWORD PTR ds:[esi]
  411298:	test   DWORD PTR [ecx+0x9491e79],ecx
  41129e:	push   eax
  41129f:	mov    bh,0x31
  4112a1:	repnz xor al,0x5b
  4112a4:	mov    cs,WORD PTR [edi-0x13]
  4112a7:	sub    esi,ecx
  4112a9:	test   BYTE PTR [esp+ebx*1-0x61],dh
  4112ad:	or     al,0x6a
  4112af:	je     0x411305
  4112b1:	xchg   ebp,eax
  4112b2:	sub    al,BYTE PTR [ebx-0x5b8fa724]
  4112b8:	xor    DWORD PTR [edx+0x2db1242d],ebx
  4112be:	or     al,ch
  4112c0:	(bad)  
  4112c1:	stos   BYTE PTR es:[edi],al
  4112c2:	or     al,0xd9
  4112c4:	sti    
  4112c5:	fsub   DWORD PTR [ecx+0x2509b137]
  4112cb:	xchg   BYTE PTR ds:0x9abc9f64,bh
  4112d1:	aaa    
  4112d2:	adc    al,0x20
  4112d4:	mov    ds:0xc856dcee,eax
  4112d9:	mov    BYTE PTR [esi+edx*1+0x5d],ch
  4112dd:	test   DWORD PTR [edi],esp
  4112df:	not    DWORD PTR [ebx-0x35]
  4112e2:	or     DWORD PTR [ebx+ecx*1+0x1],esp
  4112e6:	pop    ecx
  4112e7:	mov    edx,0xca55e453
  4112ec:	pop    esp
  4112ed:	inc    DWORD PTR [edi+0x1a]
  4112f0:	lds    edi,FWORD PTR [esi]
  4112f2:	xchg   edx,eax
  4112f3:	xor    BYTE PTR [esi+edi*2+0x15],0x1d
  4112f8:	or     BYTE PTR [eax+ebp*1+0x76],bl
  4112fc:	or     esi,0x3
  4112ff:	mov    ebp,0x819982c8
  411304:	popf   
  411305:	push   esi
  411306:	sti    
  411307:	repnz cmp cl,BYTE PTR [esi+0x424e4307]
  41130e:	xor    DWORD PTR [ebp-0x767d8e5d],ecx
  411314:	push   edx
  411315:	cmp    BYTE PTR [esi-0x6d88936c],0x80
  41131c:	ins    DWORD PTR es:[edi],dx
  41131d:	or     al,ch
  41131f:	xchg   esp,eax
  411320:	rol    bl,0xfa
  411323:	daa    
  411324:	idiv   DWORD PTR [ebx-0x55148464]
  41132a:	mov    ecx,0x14768563
  41132f:	cld    
  411330:	imul   edx,eax,0x852cda4d
  411336:	jg     0x41135a
  411338:	cmp    BYTE PTR [ebx],bh
  41133a:	in     eax,0xad
  41133c:	hlt    
  41133d:	nop
  41133e:	dec    esi
  41133f:	stc    
  411340:	ins    DWORD PTR es:[edi],dx
  411341:	sbb    dl,dl
  411343:	jecxz  0x4112d5
  411345:	out    dx,al
  411346:	adc    DWORD PTR [edx],0x4808f3b8
  41134c:	inc    eax
  41134d:	int3   
  41134e:	lods   eax,DWORD PTR ds:[esi]
  41134f:	mov    ecx,0x9cc892aa
  411354:	ins    DWORD PTR es:[edi],dx
  411355:	fsubr  DWORD PTR ds:0xdd5af9da
  41135b:	mov    DWORD PTR [eax-0x3d],ebx
  41135e:	xor    eax,DWORD PTR [ecx+0x4e82529d]
  411364:	cmp    esi,DWORD PTR [esp+edx*4+0x1b0270a]
  41136b:	push   esp
  41136c:	add    ebx,DWORD PTR [ebx]
  41136e:	jns    0x41134d
  411370:	div    BYTE PTR [ebx+0x6a]
  411373:	or     bh,BYTE PTR fs:[eax-0x11]
  411377:	xchg   ebp,eax
  411378:	xchg   DWORD PTR [eax],ebx
  41137a:	push   esp
  41137b:	cmp    edi,esi
  41137d:	aas    
  41137e:	or     eax,0xcfc933b2
  411383:	fadd   DWORD PTR [ebx]
  411385:	xchg   ebp,eax
  411386:	cs push eax
  411388:	cmp    eax,DWORD PTR [esp+edx*1-0x4173c98b]
  41138f:	stc    
  411390:	fst    DWORD PTR [edi+0x70]
  411393:	pop    esi
  411394:	out    0x30,al
  411396:	ror    BYTE PTR ds:0x6f06dac,1
  41139c:	or     DWORD PTR [eax+eax*1+0x6d],ebp
  4113a0:	cmp    DWORD PTR [esi+0xd],eax
  4113a3:	pushf  
  4113a4:	add    al,0x4b
  4113a6:	jp     0x411400
  4113a8:	pop    edi
  4113a9:	sub    edi,DWORD PTR [ebp+0x73]
  4113ac:	and    al,0x77
  4113ae:	adc    BYTE PTR [eax+eax*1-0x3f],dh
  4113b2:	mov    WORD PTR [esi],?
  4113b4:	mov    eax,0xc28da02b
  4113b9:	jg     0x4113e7
  4113bb:	test   DWORD PTR [esi],esi
  4113bd:	stos   BYTE PTR es:[edi],al
  4113be:	sahf   
  4113bf:	and    BYTE PTR [edi],al
  4113c1:	sub    dh,BYTE PTR [eax-0x12]
  4113c4:	xchg   BYTE PTR [esi],bl
  4113c6:	jbe    0x4113a4
  4113c8:	mov    ebp,0x92a5800d
  4113cd:	sar    BYTE PTR [ebx+ecx*8],1
  4113d0:	push   ds
  4113d1:	xchg   BYTE PTR es:[esp+edx*8-0x68],al
  4113d6:	add    al,0xae
  4113d8:	(bad)  
  4113d9:	sar    DWORD PTR [esi],0xa4
  4113dc:	aas    
  4113dd:	(bad)  
  4113de:	scas   al,BYTE PTR es:[edi]
  4113df:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e1:	dec    eax
  4113e2:	xchg   ecx,eax
  4113e3:	outs   dx,BYTE PTR ds:[esi]
  4113e4:	frstor [esp+eax*2]
  4113e7:	jl     0x41139b
  4113e9:	xor    eax,0xd8ce3037
  4113ee:	loopne 0x4113e9
  4113f0:	dec    ebp
  4113f1:	into   
  4113f2:	push   edi
  4113f3:	mov    bh,0xf9
  4113f5:	lods   eax,DWORD PTR ds:[esi]
  4113f6:	xchg   al,dh
  4113f8:	jnp    0x411431
  4113fa:	mov    eax,ds:0x71f2980f
  4113ff:	xchg   ebp,eax
  411400:	loopne 0x411445
  411402:	not    BYTE PTR [edx+eax*8-0x5a]
  411406:	imul   ebx,DWORD PTR [ebx],0xcd2458ca
  41140c:	xchg   esi,eax
  41140d:	pop    ds
  41140e:	not    BYTE PTR [esp+eax*4-0x67221575]
  411415:	or     eax,0x14f35c87
  41141a:	gs out dx,al
  41141c:	add    dl,BYTE PTR [ecx+0x7e]
  41141f:	or     DWORD PTR [ebp+0x65c2f231],ebx
  411425:	sub    dh,BYTE PTR [ebp-0x77]
  411428:	mov    esp,0x44d4899c
  41142d:	inc    edx
  41142e:	mov    dl,0x95
  411430:	dec    eax
  411431:	inc    DWORD PTR [esi+esi*2+0xc60a17b]
  411438:	inc    ebx
  411439:	stos   DWORD PTR es:[edi],eax
  41143a:	in     eax,0x23
  41143c:	dec    ebx
  41143d:	lock add eax,0x39ac54c3
  411443:	dec    edx
  411444:	cwde   
  411445:	or     ecx,DWORD PTR ds:0xa0f15b38
  41144b:	and    eax,0x5e5fe49e
  411450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411451:	xchg   esp,eax
  411452:	or     al,0x37
  411454:	sbb    ah,BYTE PTR [esi+0x79]
  411457:	hlt    
  411458:	or     BYTE PTR [edx-0x24],ch
  41145b:	pop    es
  41145c:	adc    edi,DWORD PTR ds:0xfc91
  411461:	lods   eax,DWORD PTR ds:[esi]
  411462:	fnstcw WORD PTR [edx+edi*8-0x6b2e19b0]
  411469:	adc    cl,ah
  41146b:	in     al,dx
  41146c:	fld    TBYTE PTR [edx]
  41146e:	jg     0x4114d6
  411470:	int    0xea
  411472:	sub    ebp,edx
  411474:	pushf  
  411475:	mov    eax,0x602dd1f1
  41147a:	mov    bl,0x9a
  41147c:	inc    edx
  41147d:	ins    BYTE PTR es:[edi],dx
  41147e:	dec    edi
  41147f:	jmp    0xb940afcc
  411484:	mov    ecx,0xcda6e549
  411489:	jbe    0x4114f1
  41148b:	push   ss
  41148c:	push   eax
  41148d:	lods   eax,DWORD PTR ds:[esi]
  41148e:	pusha  
  41148f:	xlat   BYTE PTR ds:[ebx]
  411490:	xchg   edi,eax
  411491:	xlat   BYTE PTR ds:[ebx]
  411492:	pop    edi
  411493:	loope  0x4114d6
  411495:	pop    esp
  411496:	test   eax,0x3f78f887
  41149b:	popa   
  41149c:	jae    0x4114e1
  41149e:	mov    dh,0xe7
  4114a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114a1:	jns    0x411451
  4114a3:	hlt    
  4114a4:	lahf   
  4114a5:	push   edx
  4114a6:	ret    
  4114a7:	mov    ebx,0xc71fbe04
  4114ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ad:	int3   
  4114ae:	adc    al,0x5
  4114b0:	fwait
  4114b1:	cmp    al,al
  4114b3:	out    dx,eax
  4114b4:	les    edi,FWORD PTR ds:0x80eb4014
  4114ba:	jno    0xe29c2254
  4114c0:	xchg   ebp,eax
  4114c1:	dec    edx
  4114c2:	xchg   esp,eax
  4114c3:	dec    ebx
  4114c4:	add    esp,edx
  4114c6:	shr    ebp,1
  4114c8:	scas   eax,DWORD PTR es:[edi]
  4114c9:	push   ecx
  4114ca:	add    al,0x3d
  4114cc:	push   ebp
  4114cd:	out    0xf4,al
  4114cf:	dec    ebx
  4114d0:	shl    BYTE PTR [ebx-0x17c9dfa8],cl
  4114d6:	xor    bl,dl
  4114d8:	and    BYTE PTR [eax-0x5f],ah
  4114db:	xor    eax,0x6c67ab30
  4114e0:	gs push esp
  4114e2:	adc    esi,DWORD PTR [eax-0x73099ec3]
  4114e8:	out    0xf1,eax
  4114ea:	int    0xe2
  4114ec:	jmp    0x5bae2820
  4114f1:	and    bl,BYTE PTR [edx-0x57]
  4114f4:	nop
  4114f5:	cmp    al,BYTE PTR [ebx+0x6b8e96a6]
  4114fb:	jbe    0x4114d5
  4114fd:	xor    DWORD PTR [eax+0x3ff9017b],ecx
  411503:	pop    ebp
  411504:	push   ebp
  411505:	sub    edi,0x911522a
  41150b:	fdiv   st(6),st
  41150d:	dec    eax
  41150e:	ins    DWORD PTR es:[edi],dx
  41150f:	xchg   DWORD PTR [ebp+0x1bfdaf5d],eax
  411515:	stc    
  411516:	aad    0xf3
  411518:	xchg   ebx,eax
  411519:	cmp    DWORD PTR [ebx],ecx
  41151b:	pop    ebx
  41151c:	xor    BYTE PTR [ecx-0x57],bl
  41151f:	repz shl BYTE PTR [edi],cl
  411522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411523:	sub    eax,0xe890ac37
  411528:	fs aad 0x92
  41152b:	pop    ss
  41152c:	lods   eax,DWORD PTR ds:[esi]
  41152d:	dec    ecx
  41152e:	mov    ah,0x55
  411530:	js     0x4115a4
  411532:	mov    dl,0x82
  411534:	repz sub BYTE PTR [edi+0x43],cl
  411538:	rcl    DWORD PTR [ebx+ebp*8-0x2e],1
  41153c:	jmp    0xbebd:0x4283faf2
  411543:	sahf   
  411544:	orps   xmm2,xmm0
  411547:	xchg   edi,eax
  411548:	(bad)  
  411549:	imul   esi,DWORD PTR [ecx],0xc1b1c3bc
  41154f:	lods   eax,DWORD PTR ds:[esi]
  411550:	add    bh,BYTE PTR [ebx-0x18]
  411553:	xchg   ebp,eax
  411554:	adc    al,0x6c
  411556:	xlat   BYTE PTR ds:[ebx]
  411557:	mov    eax,0xf7c18091
  41155c:	dec    eax
  41155d:	xchg   edi,eax
  41155e:	jg     0x411583
  411560:	xor    ebx,ebp
  411562:	aas    
  411563:	xor    edx,ebx
  411565:	jmp    0x41159d
  411567:	enter  0x684c,0x94
  41156b:	adc    ax,0x36e6
  41156f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411570:	loop   0x411552
  411572:	es dec esi
  411574:	jns    0x41153d
  411576:	cmp    al,0xa0
  411578:	inc    ecx
  411579:	sar    BYTE PTR [esi+0x743a1912],0xea
  411580:	dec    ecx
  411581:	xchg   BYTE PTR [esi],bl
  411583:	xor    DWORD PTR [ecx+0x52],edi
  411586:	xor    ch,ch
  411588:	rcl    DWORD PTR [esi-0x5e5097d5],cl
  41158e:	add    DWORD PTR [edi],0xffffffe8
  411591:	retf   
  411592:	outs   dx,BYTE PTR ds:[esi]
  411593:	out    0xaa,eax
  411595:	jecxz  0x411553
  411597:	in     eax,0xbe
  411599:	scas   al,BYTE PTR es:[edi]
  41159a:	outs   dx,BYTE PTR ds:[esi]
  41159b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41159c:	test   BYTE PTR [esi],dh
  41159e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41159f:	xor    al,0x5c
  4115a1:	std    
  4115a2:	dec    DWORD PTR [edx-0x2cf8a356]
  4115a8:	xchg   edx,eax
  4115a9:	dec    DWORD PTR [edx-0x28]
  4115ac:	sub    BYTE PTR [esi],al
  4115ae:	bound  ebx,QWORD PTR [esi+0x2299a597]
  4115b4:	fsubr  st(3),st
  4115b6:	dec    esp
  4115b7:	sahf   
  4115b8:	push   ds
  4115b9:	gs imul edi,esi,0xd6603861
  4115c0:	setae  BYTE PTR [edx-0x52]
  4115c4:	fwait
  4115c5:	aas    
  4115c6:	mov    bh,0x0
  4115c8:	in     eax,0xfd
  4115ca:	xor    bh,0x52
  4115cd:	es xchg esp,eax
  4115cf:	loope  0x41160e
  4115d1:	in     eax,dx
  4115d2:	js     0x411564
  4115d4:	cdq    
  4115d5:	bound  esp,QWORD PTR [ebx+ebp*4+0x137ad083]
  4115dc:	xor    DWORD PTR [bx+si-0x2a9],esi
  4115e1:	mov    esi,0x9d80d8fd
  4115e6:	xlat   BYTE PTR ds:[ebx]
  4115e7:	icebp  
  4115e8:	not    DWORD PTR [esi]
  4115ea:	in     eax,0x10
  4115ec:	dec    edi
  4115ed:	jns    0x41163d
  4115ef:	aas    
  4115f0:	stos   BYTE PTR es:[edi],al
  4115f1:	adc    al,0x36
  4115f3:	(bad)  
  4115f4:	js     0x411655
  4115f6:	inc    edx
  4115f7:	push   ds
  4115f8:	bound  ecx,QWORD PTR [edi+0x9]
  4115fb:	xchg   ebp,eax
  4115fc:	mov    ?,WORD PTR [ebp*2-0x6c495645]
  411603:	jmp    0x87c5b67c
  411608:	cmp    ah,BYTE PTR [edi-0x30]
  41160b:	sar    DWORD PTR [esi-0x2f],1
  41160e:	or     al,0x7a
  411610:	test   al,0xdb
  411612:	(bad)  
  411613:	jp     0x411625
  411615:	inc    esi
  411616:	cmp    edx,DWORD PTR [edi+0x1fc18e59]
  41161c:	arpl   WORD PTR [edx+0x2f],ax
  41161f:	stos   DWORD PTR es:[edi],eax
  411620:	aaa    
  411621:	dec    esp
  411622:	addr16 in al,0x56
  411625:	repz not BYTE PTR [esi+0x7]
  411629:	xor    BYTE PTR [esi],0x46
  41162c:	test   al,0x7c
  41162e:	mov    ds:0x58700e0c,al
  411633:	and    ebp,edi
  411635:	xchg   esi,eax
  411636:	xor    al,0x5a
  411638:	outs   dx,DWORD PTR ds:[esi]
  411639:	mov    al,0xbb
  41163b:	mov    eax,0xd5326a26
  411640:	out    0x83,al
  411642:	sti    
  411643:	mov    BYTE PTR [ecx+ebp*2-0x47],cl
  411647:	jl     0x4115e5
  411649:	dec    ebx
  41164a:	jle    0x4116a9
  41164c:	dec    edx
  41164d:	shl    DWORD PTR [ebx+esi*4+0x73e82684],1
  411654:	and    ecx,esp
  411656:	or     ecx,0x61
  411659:	xlat   BYTE PTR ds:[ebx]
  41165a:	fisubr DWORD PTR [edx-0x1227da54]
  411660:	lock and DWORD PTR [esi+0x2620e8b4],edi
  411667:	lahf   
  411668:	adc    edx,DWORD PTR [esp+eiz*2+0xe7e9f3e]
  41166f:	fcomp  st(0)
  411671:	pop    eax
  411672:	shl    ecx,cl
  411674:	inc    edi
  411675:	test   eax,0x389724cb
  41167a:	xlat   BYTE PTR ds:[ebx]
  41167b:	(bad)  
  41167c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167d:	inc    esi
  41167e:	lods   al,BYTE PTR ds:[esi]
  41167f:	mov    dl,0x76
  411681:	jns    0x411605
  411683:	push   edx
  411684:	in     al,0xe3
  411686:	in     eax,0xf7
  411688:	xchg   edi,eax
  411689:	jbe    0x411686
  41168b:	jmp    0x4116db
  41168d:	sti    
  41168e:	mov    bl,0xd8
  411690:	cdq    
  411691:	scas   eax,DWORD PTR es:[edi]
  411692:	or     eax,0xe2218ac4
  411697:	and    dh,al
  411699:	jo     0x41162d
  41169b:	(bad)  
  41169c:	pop    ss
  41169d:	(bad)  
  41169f:	std    
  4116a0:	mov    eax,0x9047b28e
  4116a5:	and    ecx,DWORD PTR [esi-0x13802ce1]
  4116ab:	dec    esi
  4116ac:	inc    esp
  4116ad:	or     ebx,ebp
  4116af:	test   eax,0x7da1bd65
  4116b4:	mov    ecx,0xe307f287
  4116b9:	(bad)  
  4116ba:	test   al,0xdc
  4116bc:	mov    ah,BYTE PTR [ecx]
  4116be:	and    DWORD PTR [ecx],edx
  4116c0:	fadd   st(6),st
  4116c2:	adc    BYTE PTR [edx],cl
  4116c4:	pop    esp
  4116c5:	in     al,0xd
  4116c7:	or     eax,0x2127079f
  4116cc:	mov    ds:0xef9c3253,al
  4116d1:	sub    BYTE PTR [ecx+0x37],dh
  4116d4:	and    eax,0xd778a6de
  4116d9:	shr    BYTE PTR [edi-0x59],0xee
  4116dd:	sub    bh,BYTE PTR [eax-0x39]
  4116e0:	inc    eax
  4116e1:	push   edi
  4116e2:	push   eax
  4116e3:	xchg   ebx,edx
  4116e5:	dec    edi
  4116e6:	inc    ebx
  4116e7:	pop    es
  4116e8:	adc    bl,BYTE PTR [ecx]
  4116ea:	xchg   esp,eax
  4116eb:	push   esp
  4116ec:	fisub  WORD PTR [ebx]
  4116ee:	js     0x411686
  4116f0:	in     eax,0x20
  4116f2:	lods   al,BYTE PTR ds:[esi]
  4116f3:	mov    esi,0x17065d8a
  4116f8:	repnz mov al,0xa7
  4116fb:	mov    cl,0xc7
  4116fd:	dec    ecx
  4116fe:	mov    edx,0x3253a8fa
  411703:	xor    eax,0xdf697d3
  411708:	mov    ds:0xbd7ea967,al
  41170d:	jl     0x411774
  41170f:	(bad)  [edx+0x3d]
  411712:	call   0xce858567
  411717:	jecxz  0x411700
  411719:	or     ebx,DWORD PTR [edx-0x4b]
  41171c:	nop
  41171d:	das    
  41171e:	popf   
  41171f:	push   ebx
  411720:	lahf   
  411721:	xor    ebx,esi
  411723:	jmp    0xb60914c2
  411728:	pusha  
  411729:	fucomi st,st(0)
  41172b:	xor    al,BYTE PTR [eax]
  41172d:	(bad)  
  41172e:	fld    TBYTE PTR [ebx-0x4c]
  411731:	int    0x80
  411733:	sbb    eax,0xfe8d286a
  411738:	dec    ebx
  411739:	jnp    0x411729
  41173b:	pop    ss
  41173c:	neg    BYTE PTR [edi+0x60]
  41173f:	sahf   
  411740:	in     eax,dx
  411741:	dec    ebx
  411742:	jp     0x41172c
  411744:	mov    BYTE PTR [esi-0x3f4238c7],ch
  41174a:	push   ebx
  41174b:	pop    ebp
  41174c:	dec    ebx
  41174d:	outs   dx,BYTE PTR ds:[esi]
  41174e:	pusha  
  41174f:	xlat   BYTE PTR ds:[ebx]
  411750:	mov    bh,0x15
  411752:	and    eax,0x5552dabd
  411757:	mov    ah,0xfe
  411759:	jp     0x4117d7
  41175b:	xor    cl,ch
  41175d:	dec    esp
  41175e:	scas   eax,DWORD PTR es:[edi]
  41175f:	or     eax,0xf028743c
  411764:	xchg   edx,eax
  411765:	fwait
  411766:	push   es
  411767:	push   0x7055afd6
  41176c:	cli    
  41176d:	call   0x4531c7fd
  411772:	aaa    
  411773:	or     bh,BYTE PTR [ebp-0x570109f4]
  411779:	test   DWORD PTR [ecx+eiz*1-0x4021c5d1],esp
  411780:	mov    ebx,0x2f9a1c91
  411785:	jns    0x4117c2
  411787:	nop
  411788:	sub    eax,0x88b168c6
  41178d:	or     edx,DWORD PTR [edi+edx*8]
  411790:	add    eax,0xa759ff9a
  411795:	out    dx,eax
  411796:	or     eax,0x3afce236
  41179b:	xchg   esi,eax
  41179c:	ja     0x41176c
  41179e:	iret   
  41179f:	cmp    bl,BYTE PTR [ebx]
  4117a1:	sub    al,0xd4
  4117a3:	or     dl,ah
  4117a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a6:	int3   
  4117a7:	test   al,0xa0
  4117a9:	dec    ebx
  4117aa:	or     ebx,esi
  4117ac:	dec    edi
  4117ad:	cmc    
  4117ae:	loop   0x4117c0
  4117b0:	inc    esi
  4117b1:	mov    ebx,0x98f9431b
  4117b6:	stc    
  4117b7:	xor    cl,BYTE PTR [edx+0x17123907]
  4117bd:	fldcw  WORD PTR [esi-0x4b]
  4117c0:	or     dh,dl
  4117c2:	add    eax,0xb505852e
  4117c7:	lods   eax,DWORD PTR ds:[esi]
  4117c8:	ficomp DWORD PTR [ebp+ecx*4-0x2b]
  4117cc:	dec    esi
  4117cd:	fnstsw WORD PTR [esi+0x76d024a4]
  4117d3:	jle    0x41184e
  4117d5:	pop    edi
  4117d6:	mov    ebp,0x8d53f6ac
  4117db:	rol    BYTE PTR [eax-0x2a33191a],1
  4117e1:	mov    dh,0xa5
  4117e3:	gs push edx
  4117e5:	cmc    
  4117e6:	jmp    0x411801
  4117e8:	add    cl,BYTE PTR [ebx-0x1a]
  4117eb:	stos   DWORD PTR es:[edi],eax
  4117ec:	ss test esi,ebp
  4117ef:	mov    dh,0xba
  4117f1:	push   es
  4117f2:	push   eax
  4117f3:	pop    ds
  4117f4:	and    eax,0x2f412dab
  4117f9:	adc    ebx,edi
  4117fb:	imul   eax,ebx,0x2f59c2a8
  411801:	out    0xdd,al
  411803:	imul   DWORD PTR [eax+0x53cd091d]
  411809:	sub    al,0xf0
  41180b:	jle    0x41184e
  41180d:	(bad)  
  41180e:	mov    edi,0xca5f9106
  411813:	sub    ecx,eax
  411815:	ret    
  411816:	and    BYTE PTR [ecx+eax*4-0x14],bl
  41181a:	fisubr DWORD PTR [ebp+0x32]
  41181d:	clc    
  41181e:	int    0xe6
  411820:	call   0x150e:0xb80398cf
  411827:	cmp    DWORD PTR [edi],edx
  411829:	xchg   esp,eax
  41182a:	xchg   edi,eax
  41182b:	lds    edx,FWORD PTR [eax-0xa]
  41182e:	pop    ds
  41182f:	sbb    eax,0x19a85715
  411834:	enter  0xa070,0xa1
  411838:	dec    ebx
  411839:	jmp    0x41182d
  41183b:	in     al,0x18
  41183d:	pop    esp
  41183e:	mov    esp,0x41306cdc
  411843:	std    
  411844:	push   0x20
  411846:	xchg   BYTE PTR [ecx+0x70],dh
  411849:	(bad)
  41184c:	xor    WORD PTR [eax],0xffcf
  411850:	ror    DWORD PTR [ebx+0x3e],0xd5
  411854:	push   ss
  411855:	pusha  
  411856:	aam    0x45
  411858:	aad    0xf0
  41185a:	lods   eax,DWORD PTR ds:[esi]
  41185b:	jmp    0x411850
  41185d:	mov    bh,dh
  41185f:	clc    
  411860:	cld    
  411861:	inc    edx
  411862:	sbb    BYTE PTR ds:0x9ba8639a,bl
  411868:	adc    al,0x96
  41186a:	xor    eax,DWORD PTR [eax+0x3862c88]
  411870:	out    dx,eax
  411871:	pushf  
  411872:	mov    ecx,0x5f1ca30d
  411877:	mov    bl,ah
  411879:	sub    bl,BYTE PTR [edi]
  41187b:	add    DWORD PTR [edi],ecx
  41187d:	adc    al,0x38
  41187f:	sub    BYTE PTR [edi],dl
  411881:	mov    dl,0xac
  411883:	mov    bl,BYTE PTR [edx]
  411885:	pusha  
  411886:	and    al,0xe
  411888:	push   0xf32545f9
  41188d:	sti    
  41188e:	inc    ebp
  41188f:	inc    esp
  411890:	dec    esp
  411891:	mov    ds:0x3fc2682a,al
  411896:	rcl    DWORD PTR [ebp-0x72fff627],1
  41189c:	jb     0x411879
  41189e:	je     0x411904
  4118a0:	fisttp QWORD PTR [edx+esi*4-0x42]
  4118a4:	rol    BYTE PTR [ecx-0x4d],1
  4118a7:	fdiv   st,st(2)
  4118a9:	popa   
  4118aa:	inc    edi
  4118ab:	dec    ecx
  4118ac:	cmp    ecx,DWORD PTR [ecx]
  4118ae:	xor    eax,0x71a1cf5b
  4118b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b4:	dec    esp
  4118b5:	inc    esp
  4118b6:	and    DWORD PTR [ecx-0x5f44f5fc],ebp
  4118bc:	lea    esi,[eax]
  4118be:	jne    0x4118ad
  4118c0:	scas   eax,DWORD PTR es:[edi]
  4118c1:	push   esp
  4118c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118c3:	out    0x4a,al
  4118c5:	mov    ebx,0xbff9fbd8
  4118ca:	inc    ecx
  4118cb:	jge    0x41187a
  4118cd:	lock fadd DWORD PTR [ebx+eiz*2-0x6daa128c]
  4118d5:	add    DWORD PTR [eax-0x3b],ebx
  4118d8:	add    DWORD PTR [esi],0xe5225231
  4118de:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e0:	pop    ss
  4118e1:	out    0xb0,eax
  4118e3:	out    0xce,eax
  4118e5:	adc    DWORD PTR [esi],ebp
  4118e7:	add    eax,0x5d5dd06e
  4118ec:	mov    esi,0x2de8bd3
  4118f1:	jge    0x411953
  4118f3:	sbb    DWORD PTR [ebp+0x51],ebx
  4118f6:	shl    DWORD PTR [edi],1
  4118f8:	out    0xd2,al
  4118fa:	or     al,0x3
  4118fc:	lds    eax,FWORD PTR [esi-0x5b]
  4118ff:	and    cl,BYTE PTR [esi]
  411901:	adc    DWORD PTR [ecx-0x7a],eax
  411904:	sub    eax,0x9c0c570d
  411909:	call   0xf3a5:0x7403418b
  411910:	cdq    
  411911:	sub    al,0x50
  411913:	or     ah,BYTE PTR [ebp-0x4]
  411916:	xchg   esi,eax
  411917:	into   
  411918:	test   BYTE PTR [eax],bl
  41191a:	(bad)  
  41191b:	jmp    0xd83f:0x6d985dde
  411922:	into   
  411923:	lods   eax,DWORD PTR ds:[esi]
  411924:	xor    BYTE PTR [ebx],ch
  411926:	fsub   DWORD PTR [esi-0x7e27441d]
  41192c:	jmp    0x29a23976
  411931:	sbb    DWORD PTR [edx+0x18],eax
  411934:	or     eax,0x647aa7c0
  411939:	nop
  41193a:	idiv   cl
  41193c:	cmp    al,BYTE PTR [ebp-0xa2f8e57]
  411942:	pshufw mm0,QWORD PTR [edx],0xcd
  411946:	dec    ecx
  411947:	sub    BYTE PTR [esi+eax*2+0x6bacf2c0],bl
  41194e:	lahf   
  41194f:	push   eax
  411950:	les    ebp,FWORD PTR [ecx-0x776a50e5]
  411956:	stc    
  411957:	es jae 0x411919
  41195a:	jmp    0x12b68985
  41195f:	push   ds
  411960:	jno    0x4119c1
  411962:	pop    ecx
  411963:	push   ecx
  411964:	in     al,0x10
  411966:	xchg   esp,eax
  411967:	sub    ebx,DWORD PTR [ebx]
  411969:	pop    es
  41196a:	mov    al,ds:0x82ccf973
  41196f:	mov    BYTE PTR [eax-0x734e1f29],bh
  411975:	ins    DWORD PTR es:[edi],dx
  411976:	sbb    al,ah
  411978:	mov    BYTE PTR [ecx-0x54],bh
  41197b:	push   ecx
  41197c:	cmp    BYTE PTR [eax+esi*1],dh
  41197f:	ficomp DWORD PTR [eax+0x9]
  411982:	inc    eax
  411983:	push   ss
  411984:	stos   DWORD PTR es:[edi],eax
  411985:	ins    BYTE PTR es:[edi],dx
  411986:	sub    ecx,ebx
  411988:	and    DWORD PTR [esi],edi
  41198a:	popa   
  41198b:	mov    al,ds:0x9fe63f0b
  411990:	mov    ds:0x730644f7,eax
  411995:	mov    ebp,0xa3ccc4f6
  41199a:	sbb    BYTE PTR [ecx+0x35],bl
  41199d:	inc    ebp
  41199e:	pop    ds
  41199f:	sub    BYTE PTR [edi],dl
  4119a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a2:	push   0x64ec8cfb
  4119a7:	jae    0x411965
  4119a9:	push   ebp
  4119aa:	stos   DWORD PTR es:[edi],eax
  4119ab:	ret    0x8804
  4119ae:	aas    
  4119af:	jne    0x41195f
  4119b1:	stc    
  4119b2:	inc    ebp
  4119b3:	sub    al,0xa7
  4119b5:	ins    BYTE PTR es:[edi],dx
  4119b6:	out    0x15,al
  4119b8:	mov    WORD PTR [edx-0x41],ds
  4119bb:	jo     0x411975
  4119bd:	in     eax,0x95
  4119bf:	push   cs
  4119c0:	jb     0x4119f6
  4119c2:	jl     0x411a27
  4119c4:	retf   0x865
  4119c7:	dec    ebx
  4119c8:	push   ecx
  4119c9:	cli    
  4119ca:	jnp    0x41198a
  4119cc:	xchg   ah,dl
  4119ce:	push   ebp
  4119cf:	jo     0x4119ab
  4119d1:	retf   0x1ba0
  4119d4:	push   ebx
  4119d5:	sbb    al,al
  4119d7:	adc    dl,ah
  4119d9:	adc    al,0x2f
  4119db:	jns    0x411a0e
  4119dd:	jp     0x4119e8
  4119df:	outs   dx,DWORD PTR ds:[esi]
  4119e0:	cmp    bh,ah
  4119e2:	pushaw 
  4119e4:	push   esp
  4119e5:	das    
  4119e6:	pusha  
  4119e7:	or     eax,0x30c12b8a
  4119ec:	shl    BYTE PTR [ebx+eiz*4+0x55696d26],1
  4119f3:	push   ss
  4119f4:	ins    DWORD PTR es:[edi],dx
  4119f5:	bound  esp,QWORD PTR [ebx-0x51]
  4119f8:	or     edx,DWORD PTR [esi+0x68537394]
  4119fe:	push   ebx
  4119ff:	dec    ebx
  411a00:	stos   DWORD PTR es:[edi],eax
  411a01:	or     DWORD PTR [ebx],esi
  411a03:	pop    edi
  411a04:	jle    0x411a3c
  411a06:	push   bp
  411a08:	loopne 0x411a6b
  411a0a:	inc    edx
  411a0b:	fisub  DWORD PTR ds:0x6c2e0b9d
  411a11:	cld    
  411a12:	pop    ebx
  411a13:	lea    esi,[ebx]
  411a15:	push   ecx
  411a16:	sahf   
  411a17:	or     al,0x22
  411a19:	popf   
  411a1a:	fmul   QWORD PTR [ebx-0x26f9ba59]
  411a20:	push   0x614729ca
  411a25:	in     al,dx
  411a26:	lds    esi,FWORD PTR [ebx+0x748c958f]
  411a2c:	pop    ds
  411a2d:	inc    edx
  411a2e:	gs mov al,0x99
  411a31:	aaa    
  411a32:	xor    eax,0x9f32cebc
  411a37:	(bad)  
  411a38:	in     al,dx
  411a39:	aam    0xa5
  411a3b:	jns    0x4119dc
  411a3d:	inc    edi
  411a3e:	jae    0x411a29
  411a40:	cs daa 
  411a42:	and    eax,edx
  411a44:	aad    0xfe
  411a46:	adc    ah,BYTE PTR [ecx-0x281194ab]
  411a4c:	mov    al,ds:0xd10ee979
  411a51:	mov    esi,0x160e346
  411a56:	dec    ebx
  411a57:	sbb    BYTE PTR [ebp-0x259b51ba],dl
  411a5d:	sar    BYTE PTR [edi],cl
  411a5f:	sbb    al,0x52
  411a61:	call   0xe46e:0x4353ad8e
  411a68:	jl     0x411a21
  411a6a:	nop
  411a6b:	xchg   bl,cl
  411a6d:	ss mov dl,0x2b
  411a70:	push   cs
  411a71:	sub    BYTE PTR [ecx],bl
  411a73:	jns    0x411ae8
  411a75:	daa    
  411a76:	mov    ch,0x21
  411a78:	adc    DWORD PTR [eax+0x215d9deb],ecx
  411a7e:	adc    BYTE PTR [edx],0x40
  411a81:	mov    BYTE PTR [edx-0x3f],ah
  411a84:	push   ss
  411a85:	out    0x29,al
  411a87:	xchg   ebp,eax
  411a88:	adc    al,0xa5
  411a8a:	push   ds
  411a8b:	and    eax,0x416d5a57
  411a90:	fwait
  411a91:	xchg   DWORD PTR [eax],ebp
  411a93:	push   esp
  411a94:	enter  0xaf2a,0xd5
  411a98:	stos   BYTE PTR es:[edi],al
  411a99:	jmp    0x928a:0x4379ba6b
  411aa0:	cwde   
  411aa1:	jne    0x411aea
  411aa3:	retf   
  411aa4:	or     ch,BYTE PTR [ebp-0x54]
  411aa7:	mov    ah,0x1b
  411aa9:	pop    ebp
  411aaa:	test   DWORD PTR [ebx],0xa468d4
  411ab0:	xchg   esi,eax
  411ab1:	popa   
  411ab2:	jle    0x411a50
  411ab4:	lds    esi,FWORD PTR [edi+0x4daba4ec]
  411aba:	inc    ecx
  411abb:	mov    ebp,ecx
  411abd:	pop    edx
  411abe:	mov    cl,0x56
  411ac0:	push   ebp
  411ac1:	inc    eax
  411ac2:	jl     0x411afe
  411ac4:	cs push esp
  411ac6:	imul   edi,DWORD PTR [eax+0x6d],0x8b6e1d01
  411acd:	out    0x31,eax
  411acf:	test   eax,0xcbd90ae3
  411ad4:	mov    al,BYTE PTR [esi-0x25231546]
  411ada:	inc    eax
  411adb:	sub    BYTE PTR [edi+0x294ccdec],ah
  411ae1:	dec    ebp
  411ae2:	inc    edi
  411ae3:	push   esp
  411ae4:	lods   al,BYTE PTR ds:[esi]
  411ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae6:	add    bl,BYTE PTR [esi]
  411ae8:	pusha  
  411ae9:	xor    eax,0x5a4de59e
  411aee:	clc    
  411aef:	sbb    esi,edi
  411af1:	mov    cl,0x63
  411af3:	fisubr DWORD PTR [esi+0x2e]
  411af6:	and    DWORD PTR [ebx+0x10],ebx
  411af9:	adc    DWORD PTR [eax],eax
  411afb:	mov    ebx,0x61f593d6
  411b00:	jns    0x411a93
  411b02:	stos   DWORD PTR es:[edi],eax
  411b03:	(bad)  
  411b04:	jo     0x411b24
  411b06:	pop    ecx
  411b07:	repz rcl eax,1
  411b0a:	arpl   WORD PTR [ebp-0x11d9d6fa],bp
  411b10:	popa   
  411b11:	pop    esp
  411b12:	cwde   
  411b13:	aas    
  411b14:	fbld   TBYTE PTR [edi+0x57ef0142]
  411b1a:	les    ebx,FWORD PTR [ebp+0x11ba0007]
  411b20:	adc    bl,BYTE PTR [esi]
  411b22:	and    BYTE PTR [esi-0x199f6495],0x59
  411b29:	xor    al,0x7d
  411b2b:	(bad)  
  411b2c:	popf   
  411b2d:	retf   
  411b2e:	mov    eax,0x12a4dd3e
  411b33:	mov    dh,0x87
  411b35:	push   ss
  411b36:	imul   ecx,DWORD PTR [edx],0xffffffa3
  411b39:	jmp    0x2e62:0xb226f6e2
  411b40:	adc    esp,DWORD PTR [ebp+0x483b079e]
  411b46:	mov    bl,0xf5
  411b48:	xchg   DWORD PTR [edx+eax*4+0x2c],esp
  411b4c:	icebp  
  411b4d:	mov    al,0xf
  411b4f:	test   al,0xc7
  411b51:	es add ch,dh
  411b54:	jle    0x411ba1
  411b56:	mov    bh,bh
  411b58:	jne    0x411bbd
  411b5a:	test   BYTE PTR [esi-0x4b7617d6],cl
  411b60:	jns    0x411b51
  411b62:	and    dh,BYTE PTR ds:0x28bb82a6
  411b68:	enter  0xe5c9,0xb0
  411b6c:	retf   
  411b6d:	ror    DWORD PTR [ecx+0x15623f03],1
  411b73:	sub    DWORD PTR [ebp-0x156005ab],esi
  411b79:	pop    esi
  411b7a:	jge    0x411b7d
  411b7c:	mov    ecx,0xc07893f1
  411b81:	(bad)  
  411b82:	xor    DWORD PTR [ecx],edi
  411b84:	push   cs
  411b85:	xchg   BYTE PTR ds:0xdb4556f6,ch
  411b8b:	out    0x54,al
  411b8d:	mov    dl,0x81
  411b8f:	jmp    0xe344:0x421154ce
  411b96:	ror    ch,0x96
  411b99:	pop    ebp
  411b9a:	outs   dx,DWORD PTR ds:[esi]
  411b9b:	mov    dl,0x4a
  411b9d:	(bad)  
  411b9e:	sub    DWORD PTR [ebp-0x32],esp
  411ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba2:	inc    edi
  411ba3:	cmp    cl,BYTE PTR [edi+0x1a8135f0]
  411ba9:	lds    ebp,FWORD PTR [ebx+0x7210b24]
  411baf:	xchg   ebp,eax
  411bb0:	aam    0xbc
  411bb2:	mov    al,ds:0x816f6b3c
  411bb7:	dec    eax
  411bb8:	pop    es
  411bb9:	aaa    
  411bba:	cdq    
  411bbb:	bndstx [ebp+0x5c],(bad)
  411bbf:	cmp    BYTE PTR [eax-0x6e],0x14
  411bc3:	mov    al,ds:0xbdb3d450
  411bc8:	cmc    
  411bc9:	cmp    ch,BYTE PTR [ebx-0x3d]
  411bcc:	cmp    BYTE PTR [ebx+0x15691071],dl
  411bd2:	pop    esi
  411bd3:	push   cs
  411bd4:	jmp    DWORD PTR [ebx+eiz*8-0x3b]
  411bd8:	std    
  411bd9:	mov    eax,0xd6e2f8df
  411bde:	jns    0x411b84
  411be0:	cdq    
  411be1:	add    al,0xe7
  411be3:	fs ins DWORD PTR es:[edi],dx
  411be5:	pop    ebx
  411be6:	xchg   edx,eax
  411be7:	dec    ebp
  411be8:	xor    BYTE PTR [edx-0x15],0xed
  411bec:	int    0x6
  411bee:	sub    DWORD PTR [ebx],esi
  411bf0:	addr16 or esp,edi
  411bf3:	and    edx,DWORD PTR [eax+0x783e1e4f]
  411bf9:	aad    0x68
  411bfb:	in     eax,dx
  411bfc:	sbb    bl,BYTE PTR [edx-0x7f4a903e]
  411c02:	mov    esp,0x3abb710e
  411c07:	(bad)  
  411c08:	cld    
  411c09:	pop    ebp
  411c0a:	xor    BYTE PTR [eax+0x33],0xd1
  411c0e:	or     eax,0xf6327055
  411c13:	push   eax
  411c14:	mov    bl,0x8c
  411c16:	xor    dl,ah
  411c18:	xchg   ecx,eax
  411c19:	and    DWORD PTR [edi-0x5a],esp
  411c1c:	retf   
  411c1d:	or     edi,DWORD PTR [ebp-0x21e9b239]
  411c23:	jl     0x411c43
  411c25:	mov    al,ds:0x72b2928a
  411c2a:	fimul  WORD PTR [eax-0x401c44e0]
  411c30:	fild   QWORD PTR [ebx]
  411c32:	xchg   ebx,eax
  411c33:	or     eax,0x9ede1e47
  411c38:	iret   
  411c39:	shl    DWORD PTR [eax+edi*1-0x34],cl
  411c3d:	cmp    BYTE PTR [ebp+0x5cedc786],cl
  411c43:	sbb    BYTE PTR [edx],0x7a
  411c46:	and    BYTE PTR [edx+0x73],bh
  411c49:	dec    esi
  411c4a:	fsub   DWORD PTR [esi]
  411c4c:	sar    ah,1
  411c4e:	mov    bl,0xb3
  411c50:	out    dx,eax
  411c51:	mov    esi,0x5c4f40bf
  411c56:	jnp    0x411cbe
  411c58:	repnz fs xor al,0xf5
  411c5c:	aas    
  411c5d:	(bad)  
  411c5e:	pop    ebp
  411c5f:	mov    ebx,0x848a20ff
  411c64:	outs   dx,DWORD PTR ds:[esi]
  411c65:	jb     0x411c1f
  411c67:	jb     0x411cba
  411c69:	jae    0x411c6c
  411c6b:	cld    
  411c6c:	fbld   TBYTE PTR [ebp+0x74c31586]
  411c72:	mov    bh,0xda
  411c74:	std    
  411c75:	outs   dx,BYTE PTR ds:[esi]
  411c76:	sub    DWORD PTR [esp+eax*1],esi
  411c79:	pop    eax
  411c7a:	xchg   ebx,eax
  411c7b:	sbb    cl,BYTE PTR [ebx+0x3e4cc4a5]
  411c81:	cmp    bl,BYTE PTR ds:0xcec3f572
  411c87:	dec    edi
  411c88:	push   0xffffffb2
  411c8a:	pop    edx
  411c8b:	daa    
  411c8c:	jo     0x411cc4
  411c8e:	sar    BYTE PTR [edx+0x2c],0x74
  411c92:	inc    eax
  411c93:	lea    edi,ds:0xd24903b4
  411c99:	jne    0x411ccd
  411c9b:	dec    ecx
  411c9c:	retf   
  411c9d:	adc    al,0x89
  411c9f:	stc    
  411ca0:	jle    0x411c95
  411ca2:	xchg   DWORD PTR [edx+0x5dfe2e3],edx
  411ca8:	scas   al,BYTE PTR es:[edi]
  411ca9:	out    dx,al
  411caa:	dec    eax
  411cab:	call   0xb265:0x7bff8ca0
  411cb2:	das    
  411cb3:	adc    eax,0xe4780116
  411cb8:	sbb    edi,DWORD PTR [eax-0x4d]
  411cbb:	stos   DWORD PTR es:[edi],eax
  411cbc:	dec    esi
  411cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cbe:	cmp    eax,0xe5122e95
  411cc3:	stos   BYTE PTR es:[edi],al
  411cc4:	and    dh,BYTE PTR [ebx]
  411cc6:	jne    0x411cd2
  411cc8:	or     al,0x61
  411cca:	adc    al,BYTE PTR [ecx]
  411ccc:	inc    edi
  411ccd:	(bad)  
  411cce:	lahf   
  411ccf:	jno    0x411cb9
  411cd1:	test   al,0xb5
  411cd3:	iret   
  411cd4:	xchg   ecx,eax
  411cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd6:	(bad)  
  411cd8:	jge    0x411cc0
  411cda:	inc    ecx
  411cdb:	sub    edi,DWORD PTR ds:0xb4ba243
  411ce1:	xchg   esp,eax
  411ce2:	jmp    0x411cbd
  411ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce5:	cmp    BYTE PTR [edi-0x63],0xd3
  411ce9:	jb     0x411d19
  411ceb:	dec    ebx
  411cec:	push   0x81021750
  411cf1:	mov    dl,ah
  411cf3:	mov    eax,0x50e4ff13
  411cf8:	pusha  
  411cf9:	test   eax,0xbe8f3693
  411cfe:	mov    edi,0x79661f27
  411d03:	xchg   esi,eax
  411d04:	add    al,0x98
  411d06:	in     eax,dx
  411d07:	jle    0x411d43
  411d09:	pop    ebx
  411d0a:	bnd jmp 0x8017b64
  411d10:	mov    esi,0x95747776
  411d15:	mov    WORD PTR [ecx+edx*4],cs
  411d18:	add    al,0xa3
  411d1a:	fwait
  411d1b:	std    
  411d1c:	fisub  DWORD PTR [ecx-0x7429df83]
  411d22:	je     0x411d49
  411d24:	push   0x5ccfe691
  411d29:	mov    ecx,0x6affef9f
  411d2e:	js     0x411cf9
  411d30:	or     ah,0x9e
  411d33:	mov    ebx,0x93b91626
  411d38:	fsub   DWORD PTR [esi+0x3e5918ac]
  411d3e:	das    
  411d3f:	stos   BYTE PTR es:[edi],al
  411d40:	inc    esp
  411d41:	sti    
  411d42:	or     BYTE PTR [edx-0x1eb6edb],dh
  411d48:	mov    eax,ds:0xee3afe77
  411d4d:	es xor al,0x8a
  411d50:	int3   
  411d51:	loopne 0x411cff
  411d53:	add    ecx,DWORD PTR [ecx]
  411d55:	xchg   ebp,eax
  411d56:	jb     0x411d99
  411d58:	and    BYTE PTR [esi],bl
  411d5a:	dec    ebx
  411d5b:	jmp    0xe418f842
  411d60:	inc    ebx
  411d61:	push   0xfffffffe
  411d63:	push   eax
  411d64:	hlt    
  411d65:	mov    ah,0x3f
  411d67:	ficomp WORD PTR [esi+ecx*1]
  411d6a:	mul    DWORD PTR [eax*8+0x180b955f]
  411d71:	outs   dx,BYTE PTR ds:[esi]
  411d72:	ja     0x411d96
  411d74:	push   ss
  411d75:	fcmovb st,st(6)
  411d77:	mov    dl,0xc1
  411d79:	add    al,0xf5
  411d7b:	fadd   st,st(1)
  411d7d:	ins    DWORD PTR es:[edi],dx
  411d7e:	mov    edx,0x918c7bd
  411d83:	xor    dh,BYTE PTR [edi-0x3c]
  411d86:	les    ebx,FWORD PTR [eax]
  411d88:	daa    
  411d89:	bound  eax,QWORD PTR [edi+0x38]
  411d8c:	cdq    
  411d8d:	stc    
  411d8e:	cwde   
  411d8f:	push   0xffffff95
  411d91:	gs jno 0x411d6e
  411d94:	pop    esp
  411d95:	jmp    0xcc88b379
  411d9a:	mov    dh,0x33
  411d9c:	and    al,0x85
  411d9e:	adc    BYTE PTR [edi],bl
  411da0:	aam    0x58
  411da2:	fsub   QWORD PTR [esi]
  411da4:	pop    edx
  411da5:	jp     0x411daa
  411da7:	loop   0x411d95
  411da9:	imul   edx,DWORD PTR [esi+0x9],0xef3d6d7f
  411db0:	sbb    al,0x93
  411db2:	jns    0x411da6
  411db4:	fs std 
  411db6:	sar    BYTE PTR [edx],0xce
  411db9:	mov    dh,0xc1
  411dbb:	cmp    DWORD PTR [ebx-0x65364a3b],0xffffffd0
  411dc2:	pusha  
  411dc3:	inc    edi
  411dc4:	add    DWORD PTR [ecx+0x21],edi
  411dc7:	jmp    0x411d4b
  411dc9:	ror    DWORD PTR [ebp+0x12d76adc],1
  411dcf:	idiv   DWORD PTR [edx+0x27]
  411dd2:	push   cs
  411dd3:	pop    ecx
  411dd4:	or     al,BYTE PTR [ecx+0x4d00da9d]
  411dda:	jmp    0x678b:0xecf32993
  411de1:	repnz and esi,ecx
  411de4:	inc    eax
  411de5:	ficomp DWORD PTR [edx+ebx*8+0x1fc88f6f]
  411dec:	adc    eax,0xd13bba82
  411df1:	in     al,dx
  411df2:	push   eax
  411df3:	aas    
  411df4:	pop    ss
  411df5:	daa    
  411df6:	sub    al,0x19
  411df8:	or     bl,BYTE PTR [edx+0x1979ff88]
  411dfe:	dec    esi
  411dff:	cs push ss
  411e01:	cmp    al,dl
  411e03:	repz shl DWORD PTR [esi-0x33],1
  411e07:	mov    esi,0xf5ac5ed4
  411e0c:	in     eax,0xc3
  411e0e:	xchg   ebp,eax
  411e0f:	pop    esp
  411e10:	mov    ah,0xe2
  411e12:	jno    0x411e7d
  411e14:	jp     0x411d9d
  411e16:	hlt    
  411e17:	adc    ebp,DWORD PTR [ebx-0x7f76ee9a]
  411e1d:	(bad)  
  411e1f:	shl    bl,1
  411e21:	xchg   ebp,eax
  411e22:	(bad)  
  411e24:	jae    0x411e53
  411e26:	inc    edx
  411e28:	ins    BYTE PTR es:[edi],dx
  411e29:	(bad)  
  411e2a:	rcr    ebp,1
  411e2c:	mov    dl,0xc9
  411e2e:	inc    esi
  411e2f:	dec    ecx
  411e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e31:	mov    eax,0x77059789
  411e36:	xor    eax,DWORD PTR [esi]
  411e38:	lea    edi,[ebp-0x38]
  411e3b:	popa   
  411e3c:	test   BYTE PTR [edi],0x9f
  411e3f:	ficomp DWORD PTR [eax+0x5e]
  411e42:	xlat   BYTE PTR ds:[ebx]
  411e43:	push   eax
  411e44:	pop    edx
  411e45:	add    eax,0xb0cb4bb8
  411e4a:	or     edi,DWORD PTR [ebp+0x331a6753]
  411e50:	mov    ecx,0xef582150
  411e55:	xchg   edi,eax
  411e56:	mov    dh,0x6d
  411e58:	dec    edx
  411e59:	add    eax,DWORD PTR ss:[edi-0x81d02ba]
  411e60:	push   ds
  411e61:	mov    edx,0x3fe64608
  411e66:	sar    BYTE PTR [edi+0x346416d4],cl
  411e6c:	xchg   edi,eax
  411e6d:	or     DWORD PTR [ebp+0x1f97811a],esi
  411e73:	jne    0x411e0a
  411e75:	cmp    eax,0xd7702c61
  411e7a:	lds    edi,FWORD PTR [esi]
  411e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e7d:	cwde   
  411e7e:	mov    DWORD PTR [ecx+0x56f6c48a],edx
  411e84:	aaa    
  411e85:	rcr    DWORD PTR [edi+edi*2],1
  411e88:	and    BYTE PTR [eiz*4+0x5c07c9],dl
  411e8f:	jge    0x411f0c
  411e91:	or     ebp,DWORD PTR [edi+0x37]
  411e94:	cmp    DWORD PTR [ebx-0xb2303cc],0xb120958
  411e9e:	xchg   esi,eax
  411e9f:	inc    esp
  411ea0:	aam    0x46
  411ea2:	into   
  411ea3:	lods   al,BYTE PTR ds:[esi]
  411ea4:	rol    bl,1
  411ea6:	pop    esi
  411ea7:	mov    ds:0x9cd239cd,eax
  411eac:	in     eax,dx
  411ead:	jmp    0x411e72
  411eaf:	fistp  DWORD PTR [eax]
  411eb1:	loopne 0x411e3e
  411eb3:	(bad)  
  411eb4:	fstp   TBYTE PTR [edi]
  411eb6:	pop    es
  411eb7:	sahf   
  411eb8:	push   esi
  411eb9:	inc    edx
  411eba:	shl    DWORD PTR [edx-0x12432737],0x3e
  411ec1:	in     eax,0x3f
  411ec3:	push   ds
  411ec4:	mov    BYTE PTR [edx+0x682ee5e0],dl
  411eca:	xor    eax,0x85f50244
  411ecf:	jbe    0x411f50
  411ed1:	adc    eax,0xb790f5a0
  411ed6:	sub    BYTE PTR [edi+eiz*2-0x1f9aadf3],cl
  411edd:	test   BYTE PTR [edi-0x34801560],bl
  411ee3:	lods   al,BYTE PTR ds:[esi]
  411ee4:	ins    DWORD PTR es:[edi],dx
  411ee5:	cmp    dh,BYTE PTR [edi+0x68b9cf6a]
  411eeb:	(bad)  
  411eec:	jg     0x411f64
  411eee:	sbb    esi,DWORD PTR [ebx-0x1e]
  411ef1:	inc    ecx
  411ef2:	add    cl,BYTE PTR [ebx+0x39]
  411ef5:	mov    esi,0x3c11c0d2
  411efa:	ja     0x411ea7
  411efc:	inc    edx
  411efd:	add    eax,eax
  411eff:	popf   
  411f00:	inc    eax
  411f01:	push   cs
  411f02:	aad    0x6a
  411f04:	mov    edx,0x74e90a0a
  411f09:	add    bl,dh
  411f0b:	add    al,0xa9
  411f0d:	imul   eax,DWORD PTR [ebx-0x3248334f],0x93d3baee
  411f17:	mov    bl,dl
  411f19:	jo     0x411f8f
  411f1b:	inc    eax
  411f1c:	cli    
  411f1d:	jl     0x411f21
  411f1f:	aad    0x10
  411f21:	stos   DWORD PTR es:[edi],eax
  411f22:	add    al,0xcc
  411f24:	aas    
  411f25:	popa   
  411f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f27:	outs   dx,DWORD PTR ds:[si]
  411f29:	xor    BYTE PTR [esi+ecx*1-0x28],dl
  411f2d:	vpcomud xmm10,xmm5,XMMWORD PTR [eax],0x51
  411f33:	mov    DWORD PTR [ebp-0x67],edx
  411f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f37:	jmp    0x8b00:0x595a6732
  411f3e:	xor    al,0x18
  411f40:	jmp    0xd35c7efb
  411f45:	pop    es
  411f46:	imul   ecx,DWORD PTR [eax-0x62],0xc3ea47a0
  411f4d:	fbstp  TBYTE PTR [ebx+0x752c3c8]
  411f53:	(bad)  [edi-0x7a3f0d8f]
  411f59:	jo     0x411ee4
  411f5b:	sbb    eax,0x13f323aa
  411f60:	dec    ebp
  411f61:	ins    DWORD PTR es:[edi],dx
  411f62:	mov    DWORD PTR [edx*1+0x1c33f052],ebp
  411f69:	in     al,dx
  411f6a:	add    eax,0x3e07a545
  411f6f:	and    DWORD PTR [ebx+edx*2+0x7a],edx
  411f73:	dec    eax
  411f74:	add    DWORD PTR [edx+0x65],esp
  411f77:	pop    esi
  411f78:	push   0x20
  411f7a:	jmp    0x5635e0e7
  411f7f:	mov    BYTE PTR ds:0x673bddc7,bl
  411f85:	dec    ebx
  411f86:	int3   
  411f87:	call   0x85c144ba
  411f8c:	fistp  WORD PTR [edx-0x39]
  411f8f:	std    
  411f90:	(bad)  
  411f92:	ret    
  411f93:	jmp    0x411fa2
  411f95:	stos   BYTE PTR es:[edi],al
  411f96:	scas   eax,DWORD PTR es:[edi]
  411f97:	push   edx
  411f98:	pop    esp
  411f99:	or     ecx,DWORD PTR [edx+ebp*8+0x657ac5d4]
  411fa0:	aaa    
  411fa1:	pop    esp
  411fa2:	cs out dx,al
  411fa4:	inc    ecx
  411fa5:	mov    esp,0xff234239
  411faa:	aaa    
  411fab:	pop    ebp
  411fac:	cmp    al,0xbc
  411fae:	sahf   
  411faf:	xor    DWORD PTR [ecx],0xd0e2d5d5
  411fb5:	pop    ebx
  411fb6:	fs and eax,0x17d115d
  411fbc:	sbb    ecx,ecx
  411fbe:	push   edi
  411fbf:	test   BYTE PTR [edx-0x7e5ae828],ch
  411fc5:	jecxz  0x411f6c
  411fc7:	ret    0x7c7f
  411fca:	sub    al,0xd2
  411fcc:	push   cs
  411fcd:	mov    ch,0xd7
  411fcf:	sbb    eax,0x4389a755
  411fd4:	jae    0x411ff8
  411fd6:	or     al,0x1b
  411fd8:	pop    ecx
  411fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fda:	fild   QWORD PTR [esp+ebp*4]
  411fdd:	push   esp
  411fde:	xor    ebx,DWORD PTR [eax+ecx*1]
  411fe1:	pop    edi
  411fe2:	push   cs
  411fe3:	mov    esi,0xb6863b26
  411fe8:	jnp    0x411f8c
  411fea:	ret    
  411feb:	inc    edx
  411fec:	add    edi,DWORD PTR [eax]
  411fee:	jmp    0xa56316f
  411ff3:	cwde   
  411ff4:	repnz scas al,BYTE PTR es:[edi]
  411ff6:	lods   al,BYTE PTR ds:[esi]
  411ff7:	push   esi
  411ff8:	mov    ebx,0x4fc725c
  411ffd:	jmp    0xbed51a45
  412002:	les    esi,FWORD PTR [eax+eax*2]
  412005:	sbb    BYTE PTR [edi-0x7e],0x2d
  412009:	retf   0xdc7c
  41200c:	dec    edx
  41200d:	push   cs
  41200e:	xchg   edi,eax
  41200f:	out    dx,eax
  412010:	and    cl,BYTE PTR [edi+ebp*2+0x3a]
  412014:	sbb    eax,0x179e700b
  412019:	sub    BYTE PTR [edi],bl
  41201b:	sti    
  41201c:	pop    edi
  41201d:	cli    
  41201e:	fcmovbe st,st(3)
  412020:	add    edx,DWORD PTR [ebx-0x2c]
  412023:	repz jbe 0x41201b
  412026:	inc    ebp
  412027:	jne    0x412045
  412029:	push   esi
  41202a:	jnp    0x41202d
  41202c:	xchg   edx,eax
  41202d:	push   cs
  41202e:	fs push eax
  412030:	std    
  412031:	leave  
  412032:	mov    esp,DWORD PTR ds:0x9c6457c8
  412038:	inc    edi
  412039:	ins    BYTE PTR es:[edi],dx
  41203a:	pusha  
  41203b:	push   0xffffffc2
  41203d:	out    0x97,al
  41203f:	fs dec ecx
  412041:	and    eax,0xcc3b08b5
  412046:	ret    
  412047:	repz or BYTE PTR [ecx-0x48e081c6],dl
  41204e:	jecxz  0x412051
  412050:	push   ds
  412051:	mov    al,ds:0x7103fb1a
  412056:	mov    ch,0xaa
  412058:	mov    WORD PTR [edi],?
  41205a:	jmp    0xc82f1851
  41205f:	ds stos DWORD PTR es:[edi],eax
  412061:	push   edi
  412062:	test   eax,0x4ffe1fa0
  412067:	mov    ecx,0xc811cbf
  41206c:	dec    eax
  41206d:	jmp    0xb49a:0x31b728b0
  412074:	mov    cl,0xd3
  412076:	fstp   QWORD PTR [ecx+0x56]
  412079:	xchg   ecx,eax
  41207a:	fistp  WORD PTR [edi+0x24]
  41207d:	fwait
  41207e:	sub    DWORD PTR [edx+0x94f4859],0xffffffaf
  412085:	scas   eax,DWORD PTR es:[edi]
  412086:	cld    
  412087:	sbb    DWORD PTR [edi],ecx
  412089:	jae    0x41202a
  41208b:	mov    ebp,0x271b7a37
  412090:	pop    edx
  412091:	imul   ebp,eax,0x9f4adcf1
  412097:	call   0x1d1ff6e5
  41209c:	xchg   BYTE PTR [ebx-0x2bfd7f22],cl
  4120a2:	popa   
  4120a3:	dec    ecx
  4120a4:	shl    DWORD PTR [edi+0x237bce3c],1
  4120aa:	mov    dl,0xdb
  4120ac:	inc    edx
  4120ad:	push   cs
  4120ae:	cdq    
  4120af:	in     eax,0xd3
  4120b1:	or     al,ah
  4120b3:	push   0x406b1713
  4120b8:	idiv   BYTE PTR [eax+edi*2+0x70]
  4120bc:	pop    ecx
  4120bd:	jnp    0x4120c0
  4120bf:	retf   
  4120c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c1:	mov    ah,cl
  4120c3:	jno    0x4120c2
  4120c5:	jnp    0x4120ce
  4120c7:	popa   
  4120c8:	push   edi
  4120c9:	popf   
  4120ca:	or     esi,ebp
  4120cc:	mov    esp,0x93dee9c9
  4120d1:	xchg   BYTE PTR [edi+0x2478d9fb],ah
  4120d7:	pop    ss
  4120d8:	dec    esp
  4120d9:	and    al,BYTE PTR [ecx+0x59]
  4120dc:	mov    ebx,0x3233e48
  4120e1:	push   ds
  4120e2:	test   al,0x7a
  4120e4:	icebp  
  4120e5:	and    al,BYTE PTR [edx-0x142b016e]
  4120eb:	pop    eax
  4120ec:	stos   BYTE PTR es:[edi],al
  4120ed:	lahf   
  4120ee:	fimul  DWORD PTR [ecx*2+0x70775f27]
  4120f5:	(bad)  
  4120f6:	in     al,dx
  4120f7:	enter  0x59ba,0x5b
  4120fb:	arpl   WORD PTR [ebp-0xcd823d7],sp
  412101:	mov    al,0xca
  412103:	jae    0x4120c9
  412105:	in     eax,0xbb
  412107:	or     BYTE PTR [edi],ch
  412109:	(bad)  
  41210a:	sbb    ebx,DWORD PTR [ebx+0x5ac9272a]
  412110:	(bad)  
  412111:	aas    
  412112:	addr16 pop ds
  412114:	out    0x86,al
  412116:	jp     0x4120a6
  412118:	fisubr DWORD PTR [edx+0x6c8c6e8f]
  41211e:	jmp    0x31426714
  412123:	pop    edx
  412124:	cdq    
  412125:	jg     0x412161
  412127:	ffree  st(3)
  412129:	jle    0x4120b8
  41212b:	jle    0x4120d9
  41212d:	or     ebx,ecx
  41212f:	sbb    eax,0x6b73daa1
  412134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412135:	ds or  eax,0xe9f8bf67
  41213b:	mov    cl,0x99
  41213d:	add    ah,BYTE PTR [eax]
  41213f:	cli    
  412140:	js     0x4120ef
  412142:	scas   eax,DWORD PTR es:[edi]
  412143:	push   edi
  412144:	or     dl,bl
  412146:	das    
  412147:	(bad)  
  412148:	out    dx,al
  412149:	(bad)  
  41214a:	push   ss
  41214b:	cmp    cl,ah
  41214d:	fcom   DWORD PTR [ecx]
  41214f:	icebp  
  412150:	mul    BYTE PTR [edx+0x1928a444]
  412156:	ror    BYTE PTR [ebx+0x4],cl
  412159:	int    0x45
  41215b:	mov    DWORD PTR [ecx+ebx*1],ecx
  41215e:	xchg   ebp,eax
  41215f:	pop    ss
  412160:	sub    eax,ecx
  412162:	fs pop edx
  412164:	and    bl,ch
  412166:	dec    ebx
  412167:	lock ffreep st(3)
  41216a:	sbb    BYTE PTR [edi],ch
  41216c:	repz fsub QWORD PTR [esp+edx*1-0x40]
  412171:	inc    ebx
  412172:	or     al,0x56
  412174:	push   edi
  412175:	or     BYTE PTR [ecx+ecx*1-0x39],bh
  412179:	outs   dx,DWORD PTR es:[esi]
  41217b:	rol    DWORD PTR [esp+edi*1],1
  41217e:	(bad)  
  41217f:	repnz popf 
  412181:	loopne 0x412170
  412183:	mov    cl,0xd5
  412185:	jns    0x41212b
  412187:	hlt    
  412188:	test   DWORD PTR [ecx],ebp
  41218a:	pop    esi
  41218b:	fcmovu st,st(0)
  41218d:	sti    
  41218e:	mov    BYTE PTR [edx],ah
  412190:	hlt    
  412191:	cmp    ch,BYTE PTR [eax-0x4bc6d61c]
  412197:	in     eax,dx
  412198:	jp     0x412201
  41219a:	(bad)  
  41219c:	les    edx,FWORD PTR [esi+esi*2-0x23ed5ae4]
  4121a3:	pop    ds
  4121a4:	repz rcr DWORD PTR gs:[edi+0x63d7230c],1
  4121ac:	aas    
  4121ad:	jmp    DWORD PTR [ecx+0x77]
  4121b0:	aad    0xe0
  4121b2:	pop    ss
  4121b3:	inc    esp
  4121b4:	mov    ch,0x1e
  4121b6:	add    DWORD PTR [esp+eiz*4],ecx
  4121b9:	inc    edi
  4121ba:	addr16 fcmovnu st,st(2)
  4121bd:	or     BYTE PTR [edx+edx*1+0x6c8ef63b],ah
  4121c4:	inc    edi
  4121c5:	icebp  
  4121c6:	pop    ebp
  4121c7:	add    edx,ebx
  4121c9:	mov    eax,0x29a5d0ff
  4121ce:	adc    al,0xd6
  4121d0:	mov    eax,ds:0x4d6b351b
  4121d5:	gs jae 0x412185
  4121d8:	cmc    
  4121d9:	or     BYTE PTR [eax+0x458fdfd9],0x77
  4121e0:	push   edx
  4121e1:	adc    eax,0xad44137b
  4121e6:	jo     0x4121c5
  4121e8:	dec    esp
  4121e9:	push   esi
  4121ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121eb:	or     DWORD PTR [ebx],0xffffff88
  4121ee:	cmp    dl,BYTE PTR [edx+ebx*8+0x392b9a29]
  4121f5:	adc    eax,0x6df86567
  4121fa:	pusha  
  4121fb:	aad    0x31
  4121fd:	mov    ebx,0x50f0288d
  412202:	fidiv  WORD PTR [edx-0x3722a0c1]
  412208:	dec    ebx
  412209:	loopne 0x4121ba
  41220b:	sub    eax,0xed82ea30
  412210:	in     al,0xbd
  412212:	jno    0x412241
  412214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412215:	mov    eax,DWORD PTR ds:0xbbe6f596
  41221b:	aad    0x9c
  41221d:	daa    
  41221e:	fwait
  41221f:	sbb    ch,BYTE PTR [eax]
  412221:	pop    esp
  412222:	jns    0x4121a5
  412224:	out    dx,eax
  412225:	push   ss
  412226:	adc    edx,DWORD PTR [edi]
  412228:	or     DWORD PTR [esi-0x60f8c926],edx
  41222e:	xlat   BYTE PTR ds:[ebx]
  41222f:	jmp    0x9fcb6cbf
  412234:	and    ebx,DWORD PTR ds:0xfb7783a1
  41223a:	xchg   ecx,eax
  41223b:	cmp    DWORD PTR [eax+0x1f4e2f60],esp
  412241:	add    BYTE PTR [eax-0x6c],al
  412244:	jle    0x4121cd
  412246:	mov    ch,0xaf
  412248:	lods   al,BYTE PTR ds:[esi]
  412249:	aam    0x13
  41224b:	jmp    0x17b7:0xa1e5086a
  412252:	lock mov ch,0xbb
  412255:	arpl   WORD PTR [eax+0x4e],sp
  412258:	adc    eax,0x57566a49
  41225d:	pop    ebp
  41225e:	int    0xb2
  412260:	push   edx
  412261:	imul   eax,DWORD PTR [edi+0x5072943a],0x23
  412268:	push   0x51
  41226a:	cld    
  41226b:	imul   esp,DWORD PTR [edx+0x62],0xa2f9e5a0
  412272:	xor    al,0x8
  412274:	sub    DWORD PTR [ecx+0x42055011],ebp
  41227a:	stos   BYTE PTR es:[edi],al
  41227b:	je     0x41224d
  41227d:	sbb    ecx,DWORD PTR [eax+0x77]
  412280:	push   ebp
  412281:	and    al,0xa2
  412283:	ret    
  412284:	fs popa 
  412286:	popf   
  412287:	retf   
  412288:	sub    dl,al
  41228a:	and    bh,BYTE PTR [ebx+0x56944645]
  412290:	pop    es
  412291:	inc    esi
  412292:	xchg   ecx,eax
  412293:	imul   esi,DWORD PTR ss:[edx],0x8e3efaaa
  41229a:	into   
  41229b:	push   0xfffffff6
  41229d:	xor    eax,0x7a21db8e
  4122a2:	push   0x88758bca
  4122a7:	ss into 
  4122a9:	imul   eax,edx,0xb18a7f83
  4122af:	pop    esp
  4122b0:	add    dl,BYTE PTR [ecx]
  4122b2:	cmp    eax,0xcb86b99e
  4122b7:	sbb    esp,DWORD PTR [esi+0x4e]
  4122ba:	int3   
  4122bb:	adc    BYTE PTR [ebp-0x724dc393],0x31
  4122c2:	pop    edi
  4122c3:	sti    
  4122c4:	xchg   DWORD PTR [ebp-0x787bdbe4],edx
  4122ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122cb:	xchg   ebp,eax
  4122cc:	rcr    BYTE PTR ds:0xfa1e00f6,0xa4
  4122d3:	add    eax,0xbb4e59df
  4122d8:	lock push cs
  4122da:	into   
  4122db:	push   eax
  4122dc:	jne    0x4122ee
  4122de:	ins    DWORD PTR es:[edi],dx
  4122df:	mov    esp,0x5627635
  4122e4:	rol    DWORD PTR cs:[ecx-0x4feae0ef],1
  4122eb:	jle    0x412351
  4122ed:	stos   DWORD PTR es:[edi],eax
  4122ee:	sbb    ch,bh
  4122f0:	push   edx
  4122f1:	mov    esi,0x8c3f35cc
  4122f6:	mov    edx,0x4560f1b6
  4122fb:	loope  0x4122fc
  4122fd:	jae    0x4122e1
  4122ff:	mov    ah,BYTE PTR [ebp-0x40]
  412302:	or     al,BYTE PTR [ebx+0x4b285d0f]
  412308:	call   DWORD PTR [ebp-0x3ce7b6bd]
  41230e:	inc    edx
  41230f:	sbb    dl,al
  412311:	fiadd  WORD PTR [ecx+0x390792a]
  412317:	cmc    
  412318:	daa    
  412319:	(bad)  
  41231a:	imul   eax,DWORD PTR [ebx],0x8
  41231d:	mov    ss,edi
  41231f:	arpl   sp,si
  412321:	std    
  412322:	xor    DWORD PTR [eax-0x12840da1],esp
  412328:	mov    ecx,0xc99a2805
  41232d:	inc    esp
  41232e:	push   0x95085f2c
  412333:	inc    esi
  412334:	pop    eax
  412335:	stc    
  412336:	mov    ds:0xc60ac1bf,eax
  41233b:	or     DWORD PTR [ebx+0x608ce232],esp
  412341:	adc    BYTE PTR [esi+0x5d],0xed
  412345:	in     al,0x6b
  412347:	jb     0x412394
  412349:	mov    ch,bh
  41234b:	jnp    0x4122f0
  41234d:	inc    ecx
  41234e:	mov    edx,0xb462d69e
  412353:	inc    ebx
  412354:	and    BYTE PTR [eax+0x2],cl
  412357:	mov    cl,BYTE PTR [ecx]
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	idiv   BYTE PTR [eax+edx*2]
  412568:	mov    dh,0x1a
  41256a:	cli    
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	xor    DWORD PTR ds:0xb7eabdad,0x70
  412578:	outs   dx,BYTE PTR ds:[esi]
  412579:	sub    DWORD PTR [edx-0x692312ef],0xffffffbb
  412580:	xor    esp,DWORD PTR [eax]
  412582:	lds    esp,FWORD PTR [edi]
  412584:	jo     0x412524
  412586:	in     al,0x64
  412588:	es jle 0x412529
  41258b:	xor    eax,0x58d79278
  412590:	call   0x202f:0x35b0fc24
  412597:	jg     0x4125ce
  412599:	fnstcw WORD PTR [eax]
  41259b:	out    0xfb,al
  41259d:	add    eax,0xab20ad7
  4125a2:	jmp    0x83ee8e3e
  4125a7:	dec    edi
  4125a8:	push   eax
  4125a9:	je     0x4125a4
  4125ab:	ds (bad) 
  4125ad:	out    dx,al
  4125ae:	ja     0x41260e
  4125b0:	in     al,0xde
  4125b2:	call   0x81af:0xe9893c2d
  4125b9:	dec    eax
  4125ba:	lahf   
  4125bb:	adc    DWORD PTR [edx+0x38],eax
  4125be:	add    BYTE PTR [ecx],cl
  4125c0:	loop   0x4125bf
  4125c2:	push   esp
  4125c3:	dec    edi
  4125c4:	rcr    BYTE PTR [ebp-0x18597e74],cl
  4125ca:	ins    BYTE PTR es:[edi],dx
  4125cb:	sbb    esi,ecx
  4125cd:	or     dh,BYTE PTR [edi+0x1d]
  4125d0:	cmp    DWORD PTR [eax],esp
  4125d2:	fld    DWORD PTR [eax+edi*1+0x61]
  4125d6:	fst    st(0)
  4125d8:	pop    ebx
  4125d9:	add    ch,BYTE PTR [ecx]
  4125db:	fst    QWORD PTR [esi]
  4125dd:	popa   
  4125de:	icebp  
  4125df:	adc    cl,bl
  4125e1:	sub    bl,dl
  4125e3:	xor    DWORD PTR ds:0xef92433c,eax
  4125e9:	xchg   esp,eax
  4125ea:	cmp    ah,BYTE PTR [eax+0x1]
  4125ed:	xchg   edx,eax
  4125ee:	cmp    eax,0x3d24dd6d
  4125f3:	xor    esi,DWORD PTR [edi-0x36]
  4125f6:	push   es
  4125f7:	inc    ecx
  4125f8:	cli    
  4125f9:	inc    esi
  4125fa:	xor    eax,0xfcd10bd3
  4125ff:	mov    ah,0xf7
  412601:	mov    edx,eax
  412603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412604:	cdq    
  412605:	pusha  
  412606:	daa    
  412607:	loopne 0x4125d4
  412609:	jge    0x4125a6
  41260b:	add    al,0xf
  41260d:	retf   0xa94e
  412610:	mov    esp,0xcee5b71d
  412615:	fsub   st,st(0)
  412617:	inc    esp
  412618:	push   ds
  412619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41261a:	aad    0x40
  41261c:	stc    
  41261d:	mov    al,ds:0xa8b83f93
  412622:	fild   WORD PTR [edx+0x569fe705]
  412628:	outs   dx,BYTE PTR ds:[esi]
  412629:	(bad)  [edi-0x5ed731d7]
  41262f:	sti    
  412630:	into   
  412631:	arpl   bx,sp
  412633:	jnp    0x412656
  412635:	adc    ebx,DWORD PTR ds:0x5bb169d3
  41263b:	rol    BYTE PTR ds:0xe020afbe,0x2
  412642:	mov    ebx,0x46552880
  412647:	mov    dh,dl
  412649:	dec    ecx
  41264a:	xchg   dh,bl
  41264c:	jbe    0x41261f
  41264e:	pop    edx
  41264f:	jge    0x41269a
  412651:	sbb    BYTE PTR [ebp-0x42],ah
  412654:	xchg   esp,eax
  412655:	dec    esp
  412656:	and    dh,BYTE PTR [edx]
  412658:	repnz stos BYTE PTR es:[edi],al
  41265a:	mov    dl,BYTE PTR [edi]
  41265c:	(bad)  
  41265d:	(bad)  [eax-0x637f353f]
  412663:	jns    0x412696
  412665:	push   0x0
  412667:	mov    eax,0xc33c76db
  41266c:	pop    esp
  41266d:	imul   esi,DWORD PTR [ebp+0x53],0xd1e04017
  412674:	pop    esi
  412675:	dec    esi
  412676:	std    
  412677:	scas   al,BYTE PTR es:[edi]
  412678:	jnp    0x5b98fcc
  41267e:	sti    
  41267f:	cdq    
  412680:	outs   dx,BYTE PTR ds:[esi]
  412681:	xor    eax,0xb7581376
  412686:	jl     0x412675
  412688:	xchg   ecx,eax
  412689:	in     eax,dx
  41268a:	pop    esi
  41268b:	nop
  41268c:	and    eax,0x21391fe6
  412691:	(bad)  
  412693:	jnp    0x41266d
  412695:	pushf  
  412696:	sub    esp,edi
  412698:	sbb    DWORD PTR [eax+0x7fd0c700],eax
  41269e:	repz push edx
  4126a0:	push   0xffffffe2
  4126a2:	icebp  
  4126a3:	nop
  4126a4:	cwde   
  4126a5:	sahf   
  4126a6:	inc    ebx
  4126a7:	das    
  4126a8:	aad    0x31
  4126aa:	inc    edx
  4126ab:	xor    ecx,DWORD PTR [ecx]
  4126ad:	lods   eax,DWORD PTR ds:[esi]
  4126ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126af:	jne    0x41265a
  4126b1:	dec    edx
  4126b2:	jp     0x4126a0
  4126b4:	sbb    al,0x7f
  4126b6:	data16 stc 
  4126b8:	push   ebx
  4126b9:	xchg   ecx,eax
  4126ba:	cmp    ecx,eax
  4126bc:	stos   DWORD PTR es:[edi],eax
  4126bd:	cld    
  4126be:	or     ah,BYTE PTR [eax]
  4126c0:	lods   eax,DWORD PTR ds:[esi]
  4126c1:	nop
  4126c2:	adc    DWORD PTR [esi+0x5b],esi
  4126c5:	cdq    
  4126c6:	sub    al,0x71
  4126c8:	sub    al,0x2e
  4126ca:	adc    cl,bh
  4126cc:	jo     0x4126e1
  4126ce:	mov    ds:0xae6d835a,eax
  4126d3:	ror    BYTE PTR [edx+edi*4],1
  4126d6:	add    BYTE PTR [eax-0x30],dh
  4126d9:	push   ss
  4126da:	push   es
  4126db:	inc    esi
  4126dc:	mov    DWORD PTR [ecx-0x79],ecx
  4126df:	pop    eax
  4126e0:	bound  esi,QWORD PTR [ecx+0x16]
  4126e3:	and    BYTE PTR [edx+0x1],bl
  4126e6:	pop    DWORD PTR [eax]
  4126e8:	mov    ecx,0xd3122628
  4126ed:	jl     0x41272a
  4126ef:	fwait
  4126f0:	xchg   ebp,eax
  4126f1:	mov    BYTE PTR [ebx+0x7b690c43],cl
  4126f7:	and    eax,0x820ba15b
  4126fc:	stos   DWORD PTR es:[edi],eax
  4126fd:	inc    esi
  4126fe:	inc    ebx
  4126ff:	shl    BYTE PTR [edi+ecx*8+0x15],0xf8
  412704:	fdivr  QWORD PTR [ebp-0x59]
  412707:	cmp    bl,BYTE PTR [ebx+0x7a]
  41270a:	inc    ebp
  41270b:	sahf   
  41270c:	mov    ch,0x7c
  41270e:	mov    ah,0x9c
  412710:	das    
  412711:	xchg   ecx,eax
  412712:	les    ebp,FWORD PTR [edx-0x24f768b6]
  412718:	loopne 0x41273b
  41271a:	sub    bh,bl
  41271c:	test   BYTE PTR [ecx+0x33],dh
  41271f:	das    
  412720:	aaa    
  412721:	jb     0x412784
  412723:	cmp    edx,DWORD PTR [eax+0x3f]
  412726:	test   al,0x56
  412728:	xor    DWORD PTR [ebp+0x53b16db],eax
  41272e:	stc    
  41272f:	inc    ebx
  412730:	inc    ebx
  412731:	js     0x412727
  412733:	cs out 0x64,al
  412736:	popf   
  412737:	faddp  st(3),st
  412739:	push   ds
  41273a:	xchg   ebp,ebx
  41273c:	push   esp
  41273d:	add    DWORD PTR [ebx+0x2e242620],edi
  412743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412744:	sub    DWORD PTR [ecx],edi
  412746:	imul   edx,DWORD PTR [edi+0x66],0x74
  41274a:	scas   eax,DWORD PTR es:[edi]
  41274b:	sbb    bh,BYTE PTR [eax-0x4c]
  41274e:	out    dx,eax
  41274f:	(bad)  
  412750:	aam    0x2f
  412752:	repz shl DWORD PTR [edi],0xf9
  412756:	out    0x9e,eax
  412758:	and    eax,0xa102ab56
  41275d:	jle    0x4126e8
  41275f:	ins    DWORD PTR es:[edi],dx
  412760:	icebp  
  412761:	into   
  412762:	mov    al,0x95
  412764:	(bad)  
  412765:	jns    0x4127d6
  412767:	pop    es
  412768:	cs cwde 
  41276a:	mov    edx,0xe9e5467b
  41276f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412770:	xchg   ebp,eax
  412771:	mov    ds:0x79df67b5,al
  412776:	xor    al,0x3
  412778:	das    
  412779:	push   eax
  41277a:	std    
  41277b:	stc    
  41277c:	mov    cl,0x6
  41277e:	xchg   DWORD PTR [ebp+0x5f],esp
  412781:	bound  esi,QWORD PTR [edx]
  412783:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  412785:	mov    ebp,0xb5dae867
  41278a:	xchg   edx,eax
  41278b:	pop    ebp
  41278c:	cmp    dh,al
  41278e:	(bad)  
  41278f:	std    
  412790:	inc    ebp
  412791:	jns    0x412797
  412793:	ror    BYTE PTR [edx+edx*1+0x4],cl
  412797:	fisubr WORD PTR [ebp+0x29]
  41279a:	and    al,0x6b
  41279c:	xchg   esp,eax
  41279d:	rcr    DWORD PTR [esi],0x35
  4127a0:	test   eax,0xadb44677
  4127a5:	jae    0x4127f1
  4127a7:	mov    dh,0x48
  4127a9:	loop   0x412748
  4127ab:	mov    eax,ds:0x29904d6c
  4127b0:	fs repnz pop edx
  4127b3:	and    al,0x1f
  4127b5:	(bad)  
  4127b6:	push   esp
  4127b7:	mov    dl,0xd5
  4127b9:	xor    al,0x75
  4127bb:	mov    esp,DWORD PTR [ebx]
  4127bd:	push   edx
  4127be:	or     ah,BYTE PTR [edi]
  4127c0:	pop    ecx
  4127c1:	sbb    al,0xbb
  4127c3:	inc    ebx
  4127c4:	dec    ebx
  4127c5:	mov    ebp,0x5ba6cb9e
  4127ca:	loopne 0x4127cb
  4127cc:	in     eax,dx
  4127cd:	in     eax,dx
  4127ce:	sar    DWORD PTR [ebx],0x8a
  4127d1:	(bad)  
  4127d2:	fs and eax,0xe466ab0b
  4127d8:	int    0xcb
  4127da:	pop    eax
  4127db:	pop    eax
  4127dc:	xor    al,BYTE PTR [ebp+edi*4-0x61]
  4127e0:	test   eax,0x650709b9
  4127e5:	leave  
  4127e6:	outs   dx,BYTE PTR ds:[esi]
  4127e7:	push   esi
  4127e8:	outs   dx,DWORD PTR ds:[esi]
  4127e9:	pop    esp
  4127ea:	arpl   WORD PTR [ebx],ax
  4127ec:	dec    esp
  4127ed:	(bad)  
  4127ee:	stos   BYTE PTR es:[edi],al
  4127ef:	or     BYTE PTR [edx+edi*2-0x284a6f12],dl
  4127f6:	sbb    esi,eax
  4127f8:	fucomi st,st(0)
  4127fa:	ins    DWORD PTR es:[edi],dx
  4127fb:	xor    eax,DWORD PTR [eax+0x1d80d79d]
  412801:	push   ecx
  412802:	cmp    ebp,DWORD PTR [ebx+0x2bf8094]
  412808:	pop    ss
  412809:	out    0x13,eax
  41280b:	sub    bh,BYTE PTR [ebp+0x4]
  41280e:	iret   
  41280f:	(bad)  
  412812:	retf   0x7a8
  412815:	retf   0x130d
  412818:	shl    dh,0x27
  41281b:	fisubr WORD PTR [eax-0x46]
  41281e:	pusha  
  41281f:	lahf   
  412820:	and    al,0x36
  412822:	js     0x4127da
  412824:	xor    DWORD PTR [eax],0x6bd89348
  41282a:	xor    dl,0xf5
  41282d:	pop    eax
  41282e:	or     eax,0x5a0998b9
  412833:	push   ss
  412834:	cwde   
  412835:	int    0x63
  412837:	inc    ecx
  412838:	ins    DWORD PTR es:[edi],dx
  412839:	cmp    ch,bl
  41283b:	ins    BYTE PTR es:[edi],dx
  41283c:	test   dh,dl
  41283e:	clc    
  41283f:	je     0x412825
  412841:	mov    ds:0x974c6aeb,eax
  412846:	or     DWORD PTR [eax+eiz*1+0x54],ecx
  41284a:	dec    ebx
  41284b:	mov    ebx,0x5a7131f5
  412850:	sbb    al,0x44
  412852:	pop    eax
  412853:	xor    bh,BYTE PTR [edx]
  412855:	imul   esi,edx,0x40
  412858:	cpuid  
  41285a:	jbe    0x412828
  41285c:	sar    DWORD PTR [ebx+0x3b392d74],0x49
  412863:	shr    DWORD PTR [ebp-0x68],cl
  412866:	and    DWORD PTR [ebp+eiz*2+0x20],ebx
  41286a:	clc    
  41286b:	jmp    0xead9d70e
  412870:	and    BYTE PTR [eax-0x432aab17],ch
  412876:	or     ecx,ebx
  412878:	into   
  412879:	shr    BYTE PTR [edi+0x6ffedf63],cl
  41287f:	nop
  412880:	and    esi,DWORD PTR [edi+0x5b]
  412883:	test   al,0xa2
  412885:	xchg   esp,eax
  412886:	je     0x41289e
  412888:	out    dx,eax
  412889:	mov    ah,0xaf
  41288b:	pop    ecx
  41288c:	jae    0x412823
  41288e:	jae    0x4128a8
  412890:	in     al,0xcd
  412892:	fmul   QWORD PTR ds:0x70a7e64f
  412898:	jecxz  0x41283a
  41289a:	in     eax,0x9f
  41289c:	xchg   ebp,eax
  41289d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41289f:	sti    
  4128a0:	scas   al,BYTE PTR es:[edi]
  4128a1:	xchg   edx,eax
  4128a2:	(bad)  
  4128a3:	(bad)  
  4128a4:	dec    ebx
  4128a5:	sub    DWORD PTR [edx-0x19],ebp
  4128a8:	pop    es
  4128a9:	aam    0x8b
  4128ab:	jo     0x412922
  4128ad:	adc    DWORD PTR [ecx+0x62],0x29e56fd2
  4128b4:	dec    esp
  4128b5:	nop
  4128b6:	int3   
  4128b7:	sar    BYTE PTR [eax+0x7161164e],0xb
  4128be:	mov    cl,0x4f
  4128c0:	adc    BYTE PTR [edi-0x5e628f61],ah
  4128c6:	mov    ch,0xc5
  4128c8:	mov    cs,WORD PTR [esi]
  4128ca:	add    BYTE PTR [edi],0x3f
  4128cd:	sti    
  4128ce:	loop   0x412939
  4128d0:	push   edx
  4128d1:	outs   dx,DWORD PTR ds:[esi]
  4128d2:	mov    edx,0x5c91b03b
  4128d7:	mov    edx,0x5fdb6996
  4128dc:	add    eax,0x84bcc83f
  4128e1:	xchg   edx,eax
  4128e2:	sub    ch,ah
  4128e4:	imul   ecx,DWORD PTR ds:0xd3fc08b4,0x2037524d
  4128ee:	(bad)  
  4128ef:	std    
  4128f0:	mov    ch,0x90
  4128f2:	jge    0x41295c
  4128f4:	adc    DWORD PTR [ebp-0x2],ebx
  4128f7:	xor    bh,BYTE PTR ds:0x7e1d88c8
  4128fd:	sar    DWORD PTR [edx],0x17
  412900:	int3   
  412901:	lahf   
  412902:	int    0x59
  412904:	jmp    0xbfe89d9a
  412909:	out    0x65,al
  41290b:	push   esp
  41290c:	cmp    esp,DWORD PTR [eax-0x17]
  41290f:	ja     0x4128fa
  412911:	cmp    al,0xb1
  412913:	popa   
  412914:	addr16 sbb eax,0x8f673200
  41291a:	icebp  
  41291b:	mov    bl,bl
  41291d:	jae    0x4128f5
  41291f:	rol    DWORD PTR [edx],0x3d
  412922:	adc    al,0xb5
  412924:	ins    BYTE PTR es:[edi],dx
  412925:	push   dx
  412927:	pop    eax
  412928:	mov    al,0xf7
  41292a:	add    eax,0x2292c211
  41292f:	outs   dx,BYTE PTR ds:[esi]
  412930:	sbb    al,0x6
  412932:	into   
  412933:	shr    DWORD PTR [edx-0x6b],0x1a
  412937:	call   0xa52adcf1
  41293c:	sub    bh,0x1
  41293f:	gs fs cwde 
  412942:	sub    al,0x26
  412944:	push   edx
  412945:	jo     0x4128e4
  412947:	or     BYTE PTR ds:0x7f679b80,ch
  41294d:	jg     0x412913
  41294f:	xor    eax,DWORD PTR [esi-0x34b03b3f]
  412955:	sbb    BYTE PTR [ecx+0xb],ch
  412958:	inc    eax
  412959:	xlat   BYTE PTR ds:[ebx]
  41295a:	dec    ebx
  41295b:	jne    0x412905
  41295d:	lahf   
  41295e:	jmp    0x607fa27c
  412963:	mov    bl,0x75
  412965:	ins    BYTE PTR es:[edi],dx
  412966:	ret    
  412967:	scas   al,BYTE PTR es:[edi]
  412968:	stos   DWORD PTR es:[edi],eax
  412969:	mov    WORD PTR [edi],gs
  41296b:	lods   eax,DWORD PTR ds:[esi]
  41296c:	push   cs
  41296d:	dec    ebx
  41296e:	xchg   ebx,eax
  41296f:	cmp    eax,0x63
  412972:	mov    al,fs:0xb9431108
  412978:	stos   BYTE PTR es:[edi],al
  412979:	lods   al,BYTE PTR ds:[esi]
  41297a:	sbb    al,0xcb
  41297c:	ins    DWORD PTR es:[edi],dx
  41297d:	dec    edi
  41297e:	sti    
  41297f:	(bad)  
  412981:	cdq    
  412982:	inc    edx
  412983:	inc    esi
  412984:	add    DWORD PTR [eax+0x3],edx
  412987:	inc    esi
  412988:	jmp    0x3f96:0x2c5f4268
  41298f:	sar    BYTE PTR [ebx-0x39],0x38
  412993:	or     DWORD PTR [eax-0x2ed3db2b],ebp
  412999:	mov    ds:0x4ef48c7b,eax
  41299e:	fmulp  st(6),st
  4129a0:	stos   DWORD PTR es:[edi],eax
  4129a1:	xor    BYTE PTR [eax-0x50],dl
  4129a4:	mov    eax,ds:0x1acad64
  4129a9:	sbb    BYTE PTR [edi],dh
  4129ab:	fst    DWORD PTR [ebp+ecx*1-0x10cc0a93]
  4129b2:	jp     0x412a13
  4129b4:	mov    ebx,0x5cbb1ea5
  4129b9:	outs   dx,DWORD PTR ds:[esi]
  4129ba:	mov    ds:0x15466b9e,eax
  4129bf:	add    esp,DWORD PTR [esi+0x32]
  4129c2:	hlt    
  4129c3:	inc    ebx
  4129c4:	stos   DWORD PTR es:[edi],eax
  4129c5:	jecxz  0x4129d1
  4129c7:	and    al,BYTE PTR [edi+ebx*4-0x26]
  4129cb:	data16 add dh,bl
  4129ce:	push   ds
  4129cf:	inc    esp
  4129d0:	cmp    esi,DWORD PTR [eax+0x5]
  4129d3:	xchg   ebx,eax
  4129d4:	jno    0x412a18
  4129d6:	dec    edx
  4129d7:	sub    BYTE PTR [ebp+0x6e044fe0],0xc3
  4129de:	xchg   ecx,eax
  4129df:	imul   esp,DWORD PTR [esi-0x57],0xffffffe8
  4129e3:	ror    DWORD PTR [eax],cl
  4129e5:	cmp    BYTE PTR ds:0x27d28682,al
  4129eb:	sub    al,0xb9
  4129ed:	hlt    
  4129ee:	mov    cl,0xe7
  4129f0:	mov    al,0xe8
  4129f2:	jg     0x41297e
  4129f4:	jb     0x4129e7
  4129f6:	xchg   esi,eax
  4129f7:	xchg   ebp,eax
  4129f8:	jl     0x4129b1
  4129fa:	fdivrp st(2),st
  4129fc:	ror    BYTE PTR ds:0x1d9cb09,0x1a
  412a03:	pop    ebx
  412a04:	cmp    BYTE PTR [ebx-0x58],0x37
  412a08:	push   ebp
  412a09:	sub    dl,BYTE PTR [edx-0x79a802e9]
  412a0f:	push   ebp
  412a10:	sub    BYTE PTR [eax-0x2d8e24c3],dh
  412a16:	jo     0x4129fb
  412a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a19:	fwait
  412a1a:	jo     0x41299d
  412a1c:	mov    ebp,ss
  412a1e:	sub    BYTE PTR [esi+eiz*8-0x3b3dcbc],0x3c
  412a26:	dec    ecx
  412a27:	popa   
  412a28:	mov    BYTE PTR [edi+0x7fae1f13],bh
  412a2e:	xchg   ebp,eax
  412a2f:	and    dh,ah
  412a31:	test   cl,0x13
  412a34:	clc    
  412a35:	jle    0x412a57
  412a37:	sub    DWORD PTR [esi-0x3d3c897],esi
  412a3d:	out    dx,eax
  412a3e:	js     0x412a8d
  412a40:	cmp    edx,DWORD PTR [edi+0x7a]
  412a43:	xor    eax,0xa727872f
  412a48:	or     al,0x7b
  412a4a:	xchg   ecx,eax
  412a4b:	and    eax,0x965e12a0
  412a50:	ja     0x412aa1
  412a52:	and    edx,DWORD PTR [edx+0x77ed0763]
  412a58:	icebp  
  412a59:	sbb    eax,0x727c4fc8
  412a5e:	and    al,0x3d
  412a60:	aam    0x5d
  412a62:	jmp    0x412abf
  412a64:	dec    esi
  412a65:	daa    
  412a66:	or     al,0xeb
  412a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a69:	sbb    eax,0xcaa3807d
  412a6e:	hlt    
  412a6f:	lock addr16 dec ebp
  412a72:	sub    eax,0x76bdec24
  412a77:	ja     0x412a24
  412a79:	sbb    DWORD PTR [ecx],ebp
  412a7b:	cld    
  412a7c:	test   eax,0x16ee2c86
  412a81:	push   edx
  412a82:	wrmsr  
  412a84:	sbb    DWORD PTR [ebp+0xf509d3b],ebp
  412a8a:	out    dx,eax
  412a8b:	(bad)
  412a8f:	imul   bp,WORD PTR [esi+0x49],0xffcd
  412a94:	call   0x9434b8b9
  412a99:	push   0x68e9ff90
  412a9e:	ins    BYTE PTR es:[edi],dx
  412a9f:	aas    
  412aa0:	inc    ebx
  412aa1:	rol    bl,0x9f
  412aa4:	push   edi
  412aa5:	aad    0x73
  412aa7:	mov    ebp,0x1083bb68
  412aac:	cmp    al,0xab
  412aae:	mov    bh,BYTE PTR [eax-0x6c234057]
  412ab4:	in     eax,0x9e
  412ab6:	inc    ecx
  412ab7:	hlt    
  412ab8:	lds    esi,FWORD PTR [ebp-0x3ccedf16]
  412abe:	imul   ebx,DWORD PTR [esi],0x13
  412ac1:	pop    ss
  412ac2:	jno    0x412a7c
  412ac4:	test   al,0xeb
  412ac6:	mov    ch,0xca
  412ac8:	scas   eax,DWORD PTR es:[edi]
  412ac9:	aas    
  412aca:	cmp    ebx,esp
  412acc:	daa    
  412acd:	or     eax,0x5d05d00
  412ad2:	xor    DWORD PTR [edi],edx
  412ad4:	leave  
  412ad5:	pop    ebp
  412ad6:	loop   0x412b25
  412ad8:	inc    eax
  412ad9:	fcomp  QWORD PTR [ebx-0xe]
  412adc:	xchg   esp,eax
  412add:	out    dx,eax
  412ade:	test   eax,0x721463c9
  412ae3:	pop    eax
  412ae4:	mov    cl,0xe9
  412ae6:	in     eax,0xaf
  412ae8:	fisubr DWORD PTR [edx+0x5a]
  412aeb:	push   0x5c
  412aed:	inc    esp
  412aee:	xchg   DWORD PTR [ebp-0x7674881],edi
  412af4:	(bad)  
  412af5:	(bad)  
  412af6:	nop
  412af7:	adc    edx,DWORD PTR [edi]
  412af9:	cmp    ch,ah
  412afb:	fldcw  WORD PTR [esi-0x18]
  412afe:	aam    0xfc
  412b00:	outs   dx,DWORD PTR ss:[esi]
  412b02:	arpl   WORD PTR [esi-0x7e],si
  412b05:	dec    edi
  412b06:	push   ss
  412b07:	pop    ebp
  412b08:	das    
  412b09:	mov    ah,0x7c
  412b0b:	xor    bl,BYTE PTR [esi-0x6e]
  412b0e:	cs enter 0x43b5,0x8e
  412b13:	lock inc eax
  412b15:	xchg   ecx,edi
  412b17:	or     esp,ebx
  412b19:	jp     0x412b24
  412b1b:	gs aaa 
  412b1d:	pextrw esp,(bad),0xc5
  412b1f:	and    esi,DWORD PTR [ebp+0x5e]
  412b22:	push   edx
  412b23:	cmp    eax,0x8b9f0f6f
  412b28:	test   BYTE PTR [eax-0x647a43c9],0x75
  412b2f:	push   ebp
  412b30:	jmp    0x2a85:0x3a9c274f
  412b37:	clc    
  412b38:	js     0x412ba5
  412b3a:	in     eax,dx
  412b3b:	cmp    eax,0xb2ebd636
  412b40:	and    al,0x78
  412b42:	arpl   WORD PTR [edx],si
  412b44:	xor    eax,0xe351a425
  412b49:	ins    DWORD PTR es:[edi],dx
  412b4a:	(bad)  
  412b4b:	cli    
  412b4c:	bound  edx,QWORD PTR [esi]
  412b4e:	pop    es
  412b4f:	test   eax,0x3cdec0cc
  412b54:	cmp    al,0xe5
  412b56:	cwde   
  412b57:	sub    al,dh
  412b59:	cmp    eax,0x862538fa
  412b5e:	xor    DWORD PTR [esi-0x6a],ecx
  412b61:	rcr    DWORD PTR [edx+0x71],cl
  412b64:	ret    0x4b8
  412b67:	jge    0x412b67
  412b69:	mov    WORD PTR [edi-0x4fc980af],es
  412b6f:	and    al,0xaa
  412b71:	mov    ds:0xe86b7ae,al
  412b76:	inc    edx
  412b77:	mov    ecx,0x378db0be
  412b7c:	data16 mov dl,BYTE PTR [edx]
  412b7f:	fmul   DWORD PTR [esi+0x565b2b6d]
  412b85:	push   0x61d2e69f
  412b8a:	inc    ebx
  412b8b:	jo     0x412b38
  412b8d:	jg     0x412be1
  412b8f:	jecxz  0x412bde
  412b91:	pop    ds
  412b92:	cli    
  412b93:	aaa    
  412b94:	(bad)  
  412b95:	push   edx
  412b96:	aad    0xa4
  412b98:	into   
  412b99:	push   edx
  412b9a:	add    ecx,ecx
  412b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9d:	scas   al,BYTE PTR es:[edi]
  412b9e:	lahf   
  412b9f:	mov    dl,0xd
  412ba1:	dec    edi
  412ba2:	sub    BYTE PTR [ecx-0x24],al
  412ba5:	fisub  WORD PTR [edi-0x5c9a1151]
  412bab:	mov    ebp,0xa152a182
  412bb0:	call   FWORD PTR [ecx+eax*2]
  412bb3:	jns    0x412b72
  412bb5:	ffreep st(4)
  412bb7:	mov    es,edx
  412bb9:	adc    dh,BYTE PTR [ecx-0x54e3ac59]
  412bbf:	jge    0x412c2a
  412bc1:	iret   
  412bc2:	std    
  412bc3:	jmp    FWORD PTR fs:[ebx+0x7bade1d7]
  412bca:	aam    0x72
  412bcc:	arpl   WORD PTR [ebp-0x500b32d6],ax
  412bd2:	shl    DWORD PTR [ebx],cl
  412bd4:	add    ah,BYTE PTR [eax]
  412bd6:	hlt    
  412bd7:	pushf  
  412bd8:	cmp    ecx,0x2e9f567c
  412bde:	call   0x859b5005
  412be3:	retf   0xf04f
  412be6:	gs (bad) 
  412be8:	sbb    dl,al
  412bea:	movaps XMMWORD PTR [edi],xmm6
  412bed:	xor    DWORD PTR [edi+0x4fb2efed],edx
  412bf3:	jmp    0x1e6ab735
  412bf8:	sahf   
  412bf9:	lahf   
  412bfa:	imul   ebx,DWORD PTR [edx+0x4567733],0x4c0aec51
  412c04:	pop    es
  412c05:	imul   eax,DWORD PTR [esp+eax*2-0x61ed5500],0xcd56b7a3
  412c10:	xor    al,0x75
  412c12:	pop    esi
  412c13:	jge    0x412c1a
  412c15:	(bad)  
  412c16:	jb     0x412c37
  412c18:	leave  
  412c19:	xchg   ebp,eax
  412c1a:	in     eax,0x6
  412c1c:	fwait
  412c1d:	push   0x88c866c4
  412c22:	pop    eax
  412c23:	(bad)  
  412c24:	mov    dh,0x87
  412c26:	jns    0x412baa
  412c28:	sbb    eax,0xa070ba6f
  412c2d:	pop    ds
  412c2e:	std    
  412c2f:	out    dx,eax
  412c30:	xchg   ebx,eax
  412c31:	mov    esi,0x8259c03
  412c36:	xchg   esp,eax
  412c37:	and    dh,0x11
  412c3a:	call   0x6f24a903
  412c3f:	jae    0x412bcc
  412c41:	cld    
  412c42:	lds    ebp,FWORD PTR [edi-0x66]
  412c45:	adc    al,0x8b
  412c47:	xor    BYTE PTR [esi-0x1d08c32f],bl
  412c4d:	cld    
  412c4e:	retf   
  412c4f:	adc    BYTE PTR [edx],bh
  412c51:	int3   
  412c52:	shl    BYTE PTR [ebx+esi*1],1
  412c55:	xchg   ecx,eax
  412c56:	stc    
  412c57:	(bad)  
  412c59:	mov    eax,ecx
  412c5b:	rcl    BYTE PTR [edi*4-0x189017bd],cl
  412c62:	enter  0x9033,0xf8
  412c66:	jae    0x412c6a
  412c68:	hlt    
  412c69:	add    eax,0x92073dd1
  412c6e:	sub    BYTE PTR [ebp+0x6dcda471],0x47
  412c75:	or     ah,BYTE PTR [edi+0xf]
  412c78:	adc    eax,0xeb3854ca
  412c7d:	mov    bl,0xfd
  412c7f:	popf   
  412c80:	and    bh,ah
  412c82:	jmp    0xbf70:0x252c5bf3
  412c89:	mov    dl,0x86
  412c8b:	repz mov eax,0x35d7e27b
  412c91:	inc    edi
  412c92:	jno    0x412cbe
  412c94:	and    dh,BYTE PTR [edi+0x75d900f7]
  412c9a:	add    ebx,DWORD PTR [ecx-0xc]
  412c9d:	adc    al,0xb
  412c9f:	dec    ebp
  412ca0:	je     0x412c41
  412ca2:	xor    DWORD PTR [ebx-0x12],edx
  412ca5:	setae  BYTE PTR [ecx+0x6eef040c]
  412cac:	dec    ebx
  412cad:	mov    dl,0x67
  412caf:	sub    ch,BYTE PTR [ebx+0x2526abae]
  412cb5:	dec    edx
  412cb6:	mov    gs,WORD PTR [ebx]
  412cb8:	cmp    DWORD PTR [ecx-0x5b],0xbf370fda
  412cbf:	shl    BYTE PTR [edx-0xc],cl
  412cc2:	mov    DWORD PTR [eax-0x3a],eax
  412cc5:	imul   esp,DWORD PTR [esi],0x2b
  412cc8:	mov    cl,0x4c
  412cca:	and    bl,BYTE PTR [ecx+0x32]
  412ccd:	add    eax,0xbc1ba057
  412cd2:	es sbb al,0x60
  412cd5:	cmp    BYTE PTR [ebx],dl
  412cd7:	sbb    DWORD PTR [edx-0x36],edx
  412cda:	sub    eax,0xe5f68206
  412cdf:	mov    eax,0xd9015571
  412ce4:	mov    ecx,0x5f6b6075
  412ce9:	xor    ah,ch
  412ceb:	out    0x6e,eax
  412ced:	div    DWORD PTR [ebx+0x35]
  412cf0:	mov    es,WORD PTR es:[ebx]
  412cf3:	in     al,dx
  412cf4:	inc    ebp
  412cf5:	(bad)  
  412cf6:	jl     0x412cbd
  412cf8:	mov    ebx,0x241ba6ee
  412cfd:	ins    BYTE PTR es:[edi],dx
  412cfe:	je     0x412cc9
  412d00:	xlat   BYTE PTR ds:[ebx]
  412d01:	mov    bh,0x55
  412d03:	js     0x412ca0
  412d05:	scas   al,BYTE PTR es:[edi]
  412d06:	mov    ebx,0x933b2ea6
  412d0b:	mov    DWORD PTR [esi],ecx
  412d0d:	lods   eax,DWORD PTR ds:[esi]
  412d0e:	xchg   ebp,eax
  412d0f:	and    DWORD PTR ds:0x32e6e57c,ecx
  412d15:	push   0xfffffff6
  412d17:	cld    
  412d18:	dec    edi
  412d19:	mov    dl,0x1f
  412d1b:	dec    esi
  412d1c:	push   esi
  412d1d:	jge    0x412d9b
  412d1f:	lahf   
  412d20:	cdq    
  412d21:	inc    esi
  412d22:	and    DWORD PTR [ebp-0x19],eax
  412d25:	sub    edx,DWORD PTR [di+0x99d]
  412d2a:	call   0xb7dd:0x327ee6f
  412d31:	sub    DWORD PTR [esi],ebp
  412d33:	push   cs
  412d34:	pop    eax
  412d35:	push   ecx
  412d36:	sub    al,0xa6
  412d38:	ffreep st(0)
  412d3a:	lea    esi,[ecx+edi*2]
  412d3d:	xlat   BYTE PTR ds:[ebx]
  412d3e:	mov    ebx,0x16e2f217
  412d43:	mov    al,ds:0x76f4416e
  412d48:	push   0x50
  412d4a:	pop    esi
  412d4b:	mov    dh,0x68
  412d4d:	pop    edi
  412d4e:	jne    0x412d13
  412d50:	jmp    0x412d09
  412d52:	imul   ecx,edi,0xe168e983
  412d58:	sbb    DWORD PTR [ebp-0x17],0xa8247306
  412d5f:	lods   al,BYTE PTR ds:[esi]
  412d60:	sbb    al,0x70
  412d62:	xor    DWORD PTR [eax+0x1d],0x3a
  412d66:	mov    eax,ds:0xba99bdbb
  412d6b:	pop    ebx
  412d6c:	cmp    al,0xd7
  412d6e:	jb     0x412dec
  412d70:	ret    
  412d71:	xor    ebp,edi
  412d73:	mov    ch,BYTE PTR ds:[edi+0x47]
  412d77:	adc    al,0xf1
  412d79:	ret    0x8447
  412d7c:	retf   0x9254
  412d7f:	gs pop ecx
  412d81:	jp     0x412dce
  412d83:	sub    ebp,edi
  412d85:	push   edi
  412d86:	cld    
  412d87:	push   ecx
  412d88:	nop    DWORD PTR [ecx-0x30031ace]
  412d8f:	dec    ebx
  412d90:	ror    DWORD PTR [ebx-0x70a78f12],0x4b
  412d97:	ins    DWORD PTR es:[edi],dx
  412d98:	fisubr DWORD PTR [eax+0x66eba92f]
  412d9e:	outs   dx,BYTE PTR ds:[esi]
  412d9f:	mov    ds:0xb14b72c3,al
  412da4:	sbb    eax,0x959bdc44
  412da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412daa:	aaa    
  412dab:	jb     0x412df6
  412dad:	sub    bh,dh
  412daf:	sub    eax,0xd1e3f50d
  412db4:	add    DWORD PTR [ecx-0xa],eax
  412db7:	lds    edx,FWORD PTR [edx]
  412db9:	ins    BYTE PTR es:[edi],dx
  412dba:	lds    ecx,FWORD PTR [esp+ebx*2]
  412dbd:	mov    esi,0x2bf755f9
  412dc2:	cmp    al,0x41
  412dc4:	add    eax,edx
  412dc6:	mov    eax,0xa5c1f3d6
  412dcb:	mov    edx,0xa6ee1553
  412dd0:	dec    BYTE PTR [edx+ebp*2+0x77]
  412dd4:	push   ds
  412dd5:	adc    DWORD PTR [eax-0x60270554],edi
  412ddb:	mov    ds:0x54185b24,eax
  412de0:	cmp    eax,0x2baa56f6
  412de5:	fild   WORD PTR [esi+0x7b6c4687]
  412deb:	fild   DWORD PTR [eax]
  412ded:	jnp    0x412dda
  412def:	cmp    eax,0x6a9ee8ce
  412df4:	xchg   edx,eax
  412df5:	cmp    BYTE PTR [edi],0x5e
  412df8:	lods   eax,DWORD PTR ds:[esi]
  412df9:	cmp    eax,0x7ee27488
  412dfe:	adc    ah,dl
  412e00:	(bad)  
  412e01:	xchg   edi,eax
  412e02:	mov    bh,0x17
  412e04:	ins    BYTE PTR es:[edi],dx
  412e05:	mov    ebp,0x9b4548f2
  412e0a:	sbb    eax,0x921e125b
  412e0f:	test   al,0x7
  412e11:	cmp    ebx,DWORD PTR [esi]
  412e13:	push   0xffffffe5
  412e15:	mov    eax,ds:0xf135c10c
  412e1a:	inc    esi
  412e1b:	fild   QWORD PTR [eax+0x39]
  412e1e:	and    BYTE PTR [eax+0xc],al
  412e21:	leave  
  412e22:	mov    edi,edx
  412e24:	ficomp DWORD PTR [edx+0x6e802acd]
  412e2a:	das    
  412e2b:	push   edx
  412e2c:	and    eax,0x5ee268e5
  412e31:	aad    0x43
  412e33:	inc    ebp
  412e34:	pop    esi
  412e35:	or     BYTE PTR [edx+0x3f983d7e],dl
  412e3b:	and    BYTE PTR [ecx+0x782d2f7a],ch
  412e41:	in     al,0x2e
  412e43:	test   eax,0xf5885fa4
  412e48:	xor    DWORD PTR [eax-0x1f],ecx
  412e4b:	mov    cl,0x3e
  412e4d:	push   esi
  412e4e:	push   edi
  412e4f:	add    dl,al
  412e51:	mov    eax,ds:0xb38e4334
  412e56:	add    al,0x72
  412e58:	add    DWORD PTR [eax+0x10],0xbd72d770
  412e5f:	sti    
  412e60:	push   ss
  412e61:	xchg   ebp,eax
  412e62:	mov    ah,0xc4
  412e64:	inc    ebx
  412e66:	push   es
  412e67:	retf   
  412e68:	inc    eax
  412e69:	and    cl,BYTE PTR [esi-0xa]
  412e6c:	or     al,BYTE PTR [ecx+0x489f10d6]
  412e72:	mov    ecx,DWORD PTR [ebx-0x3c]
  412e75:	dec    edx
  412e76:	imul   edi,DWORD PTR [ebp-0x781c8056],0xc7c8d22f
  412e80:	shl    BYTE PTR [edx],0x5d
  412e83:	jb     0x412e91
  412e85:	adc    edi,esi
  412e87:	stos   BYTE PTR es:[edi],al
  412e88:	iret   
  412e89:	mov    bl,0xa6
  412e8b:	push   ecx
  412e8c:	sbb    dh,BYTE PTR [esi-0x28]
  412e8f:	xchg   ebx,eax
  412e90:	xor    al,0x64
  412e92:	mov    ds:0x1b9afcf,eax
  412e97:	loope  0x412e8a
  412e99:	pop    ebp
  412e9a:	pusha  
  412e9b:	adc    ebx,DWORD PTR [ebp-0x1e391238]
  412ea1:	call   0x6de3b88a
  412ea6:	pop    ds
  412ea7:	xor    al,ch
  412ea9:	lahf   
  412eaa:	mov    ah,0xd8
  412eac:	xchg   ecx,edx
  412eae:	push   0x53551af0
  412eb3:	and    eax,0xe3bc3c9f
  412eb8:	lahf   
  412eb9:	mov    fs,esp
  412ebb:	shl    DWORD PTR [ebp+0x0],cl
  412ebe:	and    al,0x59
  412ec0:	cdq    
  412ec1:	jmp    0xa7b284aa
  412ec6:	bsf    edx,edi
  412ec9:	aad    0x9
  412ecb:	mov    DWORD PTR [esi+edx*1],0x1d35d6bf
  412ed2:	out    dx,al
  412ed3:	or     eax,0x5b248f7f
  412ed8:	push   eax
  412ed9:	mov    al,0x31
  412edb:	push   0x68
  412edd:	jp     0x412f10
  412edf:	dec    esp
  412ee0:	call   0x2654:0x859e0cf4
  412ee7:	jo     0x412f24
  412ee9:	(bad)  
  412eea:	scas   al,BYTE PTR es:[edi]
  412eeb:	div    DWORD PTR [edi+ebp*8-0x13]
  412eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef0:	rcr    esi,0x78
  412ef3:	lahf   
  412ef4:	rcl    edi,cl
  412ef6:	xor    al,0xbc
  412ef8:	fld    TBYTE PTR [esi]
  412efa:	pop    edx
  412efb:	scas   eax,DWORD PTR es:[edi]
  412efc:	(bad)  
  412efd:	jg     0x412eaf
  412eff:	iret   
  412f00:	and    bl,cl
  412f02:	sbb    al,0xe3
  412f04:	mov    ebp,DWORD PTR [edi-0x610a23bc]
  412f0a:	push   edi
  412f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0c:	cdq    
  412f0d:	push   esp
  412f0e:	push   esi
  412f0f:	lock mov ecx,0x5cf0fddd
  412f15:	rcl    BYTE PTR [edx-0x24],cl
  412f18:	(bad)  
  412f19:	(bad)  
  412f1b:	out    dx,eax
  412f1c:	stc    
  412f1d:	jmp    0x412ebc
  412f1f:	adc    BYTE PTR ds:0xced519a0,dh
  412f25:	inc    esi
  412f26:	mov    ebx,0x86f0cab9
  412f2b:	xor    al,0xfd
  412f2d:	xlat   BYTE PTR ds:[ebx]
  412f2e:	push   esi
  412f2f:	cld    
  412f30:	push   es
  412f31:	mov    eax,ds:0x1167c87b
  412f36:	retf   
  412f37:	test   BYTE PTR [eax+ebp*2],dl
  412f3a:	push   edx
  412f3b:	add    al,0xfe
  412f3d:	mov    ds:0xb0c2557e,eax
  412f42:	mov    edx,0x3ffe7fc6
  412f47:	mov    ds:0xf134c66c,al
  412f4c:	xchg   DWORD PTR [ecx+0x7a],edi
  412f4f:	sub    dh,BYTE PTR [ebx-0x935ace2]
  412f55:	mov    eax,ds:0xc235a775
  412f5a:	arpl   WORD PTR [edx+0x6250a96f],bp
  412f60:	mov    ds:0x3f9a6b06,al
  412f65:	inc    edx
  412f66:	ins    DWORD PTR es:[edi],dx
  412f67:	mov    eax,0x6d4cc505
  412f6c:	and    DWORD PTR [esi],0x5b162e90
  412f72:	(bad)  
  412f75:	mov    ebp,0x711ecf63
  412f7a:	repz mov bh,0x23
  412f7d:	or     BYTE PTR [ecx+0x279ff69d],cl
  412f83:	push   ss
  412f84:	out    dx,eax
  412f85:	add    edx,DWORD PTR [eax-0x65]
  412f88:	lea    edi,[esi]
  412f8a:	leave  
  412f8b:	xchg   ecx,eax
  412f8c:	leave  
  412f8d:	and    al,0xeb
  412f8f:	mov    edx,DWORD PTR [esi+0x17d37221]
  412f95:	xchg   BYTE PTR [esp+edx*2],bl
  412f98:	sahf   
  412f99:	cdq    
  412f9a:	sahf   
  412f9b:	mov    ah,ah
  412f9d:	gs mov ch,0xc5
  412fa0:	jg     0x412f78
  412fa2:	adc    eax,0x3a8a4650
  412fa7:	into   
  412fa8:	jo     0x412f8b
  412faa:	xchg   edx,eax
  412fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fac:	xchg   edx,eax
  412fad:	xchg   BYTE PTR [esi+0x67],ch
  412fb0:	cdq    
  412fb1:	imul   eax,DWORD PTR [ebx+edx*1+0xb],0xffffffa5
  412fb6:	rol    BYTE PTR [edx+0x53f2eade],cl
  412fbc:	sbb    al,0xf
  412fbe:	inc    ebx
  412fbf:	retf   
  412fc0:	push   cs
  412fc1:	aam    0xae
  412fc3:	dec    esi
  412fc4:	shr    BYTE PTR [ebp-0x5d],0x65
  412fc8:	in     al,dx
  412fc9:	(bad)  
  412fca:	in     eax,dx
  412fcb:	dec    edx
  412fcc:	outs   dx,DWORD PTR ds:[esi]
  412fcd:	sub    eax,0xbd732f37
  412fd2:	std    
  412fd3:	mov    ch,0x5
  412fd5:	sub    ecx,DWORD PTR [ebx]
  412fd7:	imul   esi,DWORD PTR [esp+esi*2-0x781b9e06],0x5c28397e
  412fe2:	xchg   ecx,eax
  412fe3:	mov    bl,0x3
  412fe5:	mov    al,ds:0x86c8a942
  412fea:	mov    esp,0x71a465ad
  412fef:	pop    es
  412ff0:	rcr    ebp,1
  412ff2:	push   esi
  412ff3:	rcr    BYTE PTR [ebx+0x3924ac4f],1
  412ff9:	pop    es
  412ffa:	bound  ebx,QWORD PTR [ebx-0x434747db]
  413000:	xor    esi,DWORD PTR [eax]
  413002:	push   ss
  413003:	mov    DWORD PTR [ebx],eax
  413005:	nop
  413006:	push   ebx
  413007:	js     0x412fd0
  413009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300a:	mov    al,0x6e
  41300c:	pop    ebx
  41300d:	cdq    
  41300e:	(bad)  
  413010:	xor    al,0x7a
  413012:	xor    al,0x25
  413014:	or     eax,eax
  413016:	out    0x41,eax
  413018:	add    eax,0x98516ed5
  41301d:	mov    bl,0x29
  41301f:	mov    al,ah
  413021:	std    
  413022:	add    esi,DWORD PTR [ecx]
  413024:	fisttp DWORD PTR [ebp-0x22]
  413027:	push   ebx
  413028:	lahf   
  413029:	fdivr  DWORD PTR [ecx-0x63]
  41302c:	or     eax,0x2f620fdf
  413031:	test   eax,0x8b93376c
  413036:	mov    ds:0xd27c46d5,al
  41303b:	scas   al,BYTE PTR es:[edi]
  41303c:	adc    BYTE PTR [ebp+ebx*8-0x4e2c36],ah
  413043:	dec    edx
  413044:	mov    ecx,0x96d6ef6d
  413049:	cmp    DWORD PTR [ebp+0x31],ecx
  41304c:	mov    bl,0x2f
  41304e:	sbb    dh,BYTE PTR [edx-0x2c5f6638]
  413054:	dec    edi
  413055:	xchg   edi,eax
  413056:	lds    esp,FWORD PTR [ebp-0x1825cc9f]
  41305c:	jo     0x4130c9
  41305e:	repz imul ecx,DWORD PTR [ebx+0x7b],0xe63e4b9e
  413066:	mov    eax,ds:0x7172c8c
  41306b:	mov    esp,0x437722c6
  413070:	lods   eax,DWORD PTR ds:[esi]
  413071:	lods   al,BYTE PTR ds:[esi]
  413072:	mov    ds:0x97dc4e38,al
  413077:	and    eax,0x9e9a45bf
  41307c:	sub    DWORD PTR [ecx],edx
  41307e:	cmc    
  41307f:	mov    bl,0xcb
  413081:	xor    DWORD PTR [edx+0x3bddf958],ecx
  413087:	mov    edx,0x27e6b1ec
  41308c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308e:	cmp    BYTE PTR [ebx],dh
  413090:	repnz sub DWORD PTR [esi],ecx
  413093:	sahf   
  413094:	mov    edx,DWORD PTR fs:[edi]
  413097:	ins    DWORD PTR es:[edi],dx
  413098:	mov    ecx,0xc502aa2b
  41309d:	or     DWORD PTR [ebx+0x3],esi
  4130a0:	xor    al,al
  4130a2:	sbb    BYTE PTR [esi-0x7372888d],ah
  4130a8:	xchg   ebp,eax
  4130a9:	pop    eax
  4130ab:	jl     0x4130dd
  4130ad:	(bad)  
  4130af:	shl    BYTE PTR [ecx+0x524bec33],cl
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	clc    
  4130b7:	sub    al,0xfd
  4130b9:	fist   WORD PTR [esi+ebx*2-0x6b048f24]
  4130c0:	into   
  4130c1:	arpl   WORD PTR [eax+ecx*2-0x585d99fa],dx
  4130c8:	shr    al,0x80
  4130cb:	pop    eax
  4130cc:	xlat   BYTE PTR ds:[ebx]
  4130cd:	and    al,0xc2
  4130cf:	sbb    BYTE PTR [edi+0x3f],bh
  4130d2:	and    eax,0x35c571b9
  4130d7:	push   ecx
  4130d8:	mov    BYTE PTR [ecx+0x37],cl
  4130db:	xor    DWORD PTR [ecx],0xffffffa5
  4130de:	sub    ecx,ebp
  4130e0:	xchg   ebp,eax
  4130e1:	rcr    edi,1
  4130e3:	xchg   esp,eax
  4130e4:	adc    al,0x37
  4130e6:	in     eax,dx
  4130e7:	out    dx,eax
  4130e8:	adc    esp,eax
  4130ea:	enter  0x3656,0xdb
  4130ee:	sub    bh,bl
  4130f0:	mov    ds:0xcb519a84,eax
  4130f5:	cmp    BYTE PTR [esi+0x59],cl
  4130f8:	dec    ebp
  4130f9:	mov    ds:0x936c769f,al
  4130fe:	fstp   st(7)
  413100:	fbstp  TBYTE PTR [ecx]
  413102:	adc    bh,BYTE PTR [ecx]
  413104:	jbe    0x413109
  413106:	pop    es
  413107:	mov    ah,ch
  413109:	xlat   BYTE PTR ds:[ebx]
  41310a:	cmc    
  41310b:	pop    ebp
  41310c:	mov    ds:0x779607da,al
  413111:	pop    esi
  413112:	std    
  413113:	cmp    al,0x21
  413115:	ror    BYTE PTR [edx+ecx*8+0x54],cl
  413119:	inc    eax
  41311a:	sbb    DWORD PTR [ecx-0x19f376e8],eax
  413120:	sbb    DWORD PTR [ebx+eiz*8+0x58],esp
  413124:	or     al,0xad
  413126:	mov    bh,0x1c
  413128:	stos   BYTE PTR es:[edi],al
  413129:	ins    BYTE PTR es:[edi],dx
  41312a:	pop    eax
  41312b:	dec    ebx
  41312c:	repz test eax,0xa0e5ef8e
  413132:	fdiv   DWORD PTR [esi-0x527f3e12]
  413138:	sahf   
  413139:	cdq    
  41313a:	adc    DWORD PTR [edx],ecx
  41313c:	xchg   DWORD PTR [edx-0x1fa76f6b],ecx
  413142:	jo     0x41315c
  413144:	pop    edi
  413145:	jns    0x413119
  413147:	pusha  
  413148:	sub    al,0x4a
  41314a:	jge    0x4130f0
  41314c:	or     DWORD PTR [edx],ebp
  41314e:	xor    dh,BYTE PTR [edi]
  413150:	jne    0x4130dd
  413152:	xchg   ebx,eax
  413153:	and    BYTE PTR [eax+0x71],bh
  413156:	aam    0x6d
  413158:	test   al,0xc8
  41315a:	jmp    0xc958bcdc
  41315f:	cdq    
  413160:	loopne 0x41314b
  413162:	jge    0x4131c9
  413164:	imul   edi,DWORD PTR [ecx],0x2aa350b2
  41316a:	fdivr  DWORD PTR [ebp+0x19]
  41316d:	mov    bl,0x30
  41316f:	rol    BYTE PTR [eax+0x493f8b23],cl
  413175:	inc    esp
  413176:	xor    eax,0x9dddac05
  41317b:	mov    ds:0x2715440e,al
  413180:	xchg   edx,eax
  413181:	adc    eax,0xe895e6db
  413186:	fidivr WORD PTR [edi+0xd]
  413189:	sbb    BYTE PTR [eax+0x23],ah
  41318c:	push   ebp
  41318d:	or     BYTE PTR [edi+0x5255e7a1],al
  413193:	pushf  
  413194:	lahf   
  413195:	int3   
  413196:	pop    esi
  413197:	rcl    ch,1
  413199:	lahf   
  41319a:	push   eax
  41319b:	mov    esi,0x4e3ccd71
  4131a0:	pushf  
  4131a1:	ret    
  4131a2:	mov    cl,0x2e
  4131a4:	add    ah,BYTE PTR [eax]
  4131a6:	jle    0x4131ff
  4131a8:	dec    edi
  4131a9:	(bad)  
  4131aa:	ins    DWORD PTR es:[edi],dx
  4131ab:	js     0x4131ec
  4131ad:	arpl   dx,bp
  4131af:	in     al,0x8
  4131b1:	dec    ecx
  4131b2:	pushf  
  4131b3:	lods   al,BYTE PTR ds:[esi]
  4131b4:	pushf  
  4131b5:	mov    esi,0x1c5e6b13
  4131ba:	cmp    eax,0x3f66401f
  4131bf:	sub    al,BYTE PTR [edi]
  4131c1:	xchg   ebx,eax
  4131c2:	pop    es
  4131c3:	mov    cl,0x6
  4131c5:	push   ecx
  4131c6:	ins    DWORD PTR es:[edi],dx
  4131c7:	das    
  4131c8:	loope  0x4131b3
  4131ca:	adc    DWORD PTR [esi],esp
  4131cc:	addr16 je 0x41320b
  4131cf:	adc    ecx,0x65
  4131d2:	xor    BYTE PTR [edx+ecx*8+0x20762a58],al
  4131d9:	push   edi
  4131da:	enter  0xf341,0xcc
  4131de:	pop    esi
  4131df:	dec    eax
  4131e0:	test   DWORD PTR [edi],ebp
  4131e2:	adc    BYTE PTR [ecx],cl
  4131e4:	nop
  4131e5:	cmp    eax,0xb11be202
  4131ea:	xchg   BYTE PTR [edi+0xf],dh
  4131ed:	ins    BYTE PTR es:[edi],dx
  4131ee:	inc    ecx
  4131ef:	stos   DWORD PTR es:[edi],eax
  4131f0:	xchg   edi,eax
  4131f1:	sub    cl,BYTE PTR [edi]
  4131f3:	loop   0x41325e
  4131f5:	jmp    0x7ff4fc30
  4131fa:	ficomp DWORD PTR [esi+eiz*8+0x5a47f25c]
  413201:	ja     0x4131f7
  413203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413204:	call   0xa1a16a8e
  413209:	imul   edi,DWORD PTR [edx+eiz*2-0x4f],0xffffffef
  41320e:	mov    ah,0x7a
  413210:	loope  0x413237
  413212:	call   0xcaebdb1f
  413217:	mov    ?,WORD PTR [edi]
  413219:	loope  0x41319f
  41321b:	add    DWORD PTR [esi-0x76],esi
  41321e:	jp     0x4131ce
  413220:	sahf   
  413221:	cmp    al,cl
  413223:	adc    eax,0xb65c5f35
  413228:	les    ebx,FWORD PTR ds:0x6d6cc81
  41322e:	inc    ebx
  41322f:	pop    edi
  413230:	fisubr WORD PTR [ecx-0x4238fc39]
  413236:	(bad)  [edx-0x28d04b15]
  41323c:	cs mov ah,0x66
  41323f:	cmp    BYTE PTR [esi],cl
  413241:	lods   al,BYTE PTR ds:[esi]
  413242:	test   al,dl
  413244:	pop    edx
  413245:	cld    
  413246:	xchg   esp,esp
  413248:	sub    BYTE PTR [ebx],dl
  41324a:	push   0xffffff8b
  41324c:	jecxz  0x41327e
  41324e:	aaa    
  41324f:	dec    ebx
  413250:	and    eax,0x3115fcd7
  413255:	cmp    edi,esi
  413257:	(bad)
  41325a:	mov    cl,0x7e
  41325c:	sub    DWORD PTR [esi+ecx*8+0x40],edx
  413260:	in     al,dx
  413261:	jns    0x4131ef
  413263:	fimul  WORD PTR [edx-0x4e]
  413266:	mov    ds:0xe4e8e972,al
  41326b:	sub    BYTE PTR [edx],al
  41326d:	or     BYTE PTR [ebx-0x7d],bl
  413270:	sub    DWORD PTR [edx-0x60523f83],ebp
  413276:	xchg   DWORD PTR [eax+ebp*2],ebx
  413279:	outs   dx,BYTE PTR ds:[esi]
  41327a:	les    ebx,FWORD PTR ds:0xd198e925
  413280:	mov    ds:0x75e28c43,eax
  413285:	out    dx,al
  413286:	jns    0x413240
  413288:	xchg   edi,eax
  413289:	push   ebx
  41328a:	mov    eax,0xefbaa63e
  41328f:	jb     0x413288
  413291:	mov    al,ds:0x15ffe76c
  413296:	jo     0x4132f7
  413298:	fs out dx,al
  41329a:	aam    0x8f
  41329c:	push   eax
  41329d:	out    dx,al
  41329e:	xchg   edx,eax
  41329f:	xor    BYTE PTR [esi],ah
  4132a1:	and    BYTE PTR [esi-0x58],bh
  4132a4:	imul   ecx,DWORD PTR [esi],0x648a9afb
  4132aa:	loop   0x4132a3
  4132ac:	sub    bh,BYTE PTR [edi-0x63cd8254]
  4132b2:	or     BYTE PTR [edi+0x2b],0xf
  4132b6:	pop    esi
  4132b7:	jl     0x4132df
  4132b9:	xchg   ebp,eax
  4132ba:	and    ch,BYTE PTR [edi-0x5a3f5abc]
  4132c0:	pop    esp
  4132c1:	and    DWORD PTR [eax+ebx*4],ebx
  4132c4:	push   esi
  4132c5:	xor    BYTE PTR [edi-0x2ff3b7de],bl
  4132cb:	gs push edi
  4132cd:	sub    cl,BYTE PTR [ebx]
  4132cf:	aaa    
  4132d0:	into   
  4132d1:	cmp    DWORD PTR [eax+0x11],eax
  4132d4:	test   DWORD PTR [ebx],0x12da9ce
  4132da:	fisubr WORD PTR [edx-0x4b]
  4132dd:	sbb    eax,0xb07b3986
  4132e2:	jl     0x41334c
  4132e4:	bound  esp,QWORD PTR [esi+0x70]
  4132e7:	and    al,0xac
  4132e9:	sar    BYTE PTR [eax],0xe5
  4132ec:	xchg   esi,eax
  4132ed:	les    edx,FWORD PTR [eax+0x36422bc2]
  4132f3:	ret    0xb86c
  4132f6:	icebp  
  4132f7:	dec    edi
  4132f8:	xchg   ebx,eax
  4132f9:	mov    WORD PTR [ecx-0x9e06f7f],ss
  4132ff:	dec    esp
  413300:	push   ebx
  413301:	lds    edi,FWORD PTR [edx+0x71]
  413304:	inc    ebx
  413305:	daa    
  413306:	push   esi
  413307:	adc    ah,BYTE PTR [edx+0x1e]
  41330a:	fist   DWORD PTR [edx+0x73]
  41330d:	popf   
  41330e:	jmp    DWORD PTR [eax-0x728e2729]
  413314:	or     cl,BYTE PTR [ebx+0x664169f7]
  41331a:	xchg   ebp,eax
  41331b:	cdq    
  41331c:	jb     0x4132df
  41331e:	jne    0x4132d6
  413320:	mov    edx,0xe3d1430a
  413325:	ja     0x4132f2
  413327:	js     0x4133a0
  413329:	jno    0x4133a8
  41332b:	cmp    eax,0x5b8aad34
  413330:	or     eax,0x64daa4e2
  413335:	inc    esp
  413336:	cmp    eax,0xb1626c88
  41333b:	adc    al,0x7d
  41333d:	cmp    dh,bh
  41333f:	mov    dl,0xad
  413341:	lock and edi,DWORD PTR [ebx]
  413344:	aam    0xca
  413346:	cmp    ch,BYTE PTR [ebx+0x1f448214]
  41334c:	or     eax,0xc32d762b
  413351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413352:	pusha  
  413353:	dec    eax
  413354:	jmp    0x413388
  413356:	jge    0x413302
  413358:	inc    ebp
  413359:	repnz pop ebx
  41335b:	enter  0xa77d,0x36
  41335f:	sub    al,0x6c
  413361:	pop    edx
  413363:	push   ecx
  413364:	xchg   ecx,eax
  413365:	sub    ah,dl
  413367:	retf   
  413368:	adc    al,0xd1
  41336a:	mov    ebx,0xcc82f995
  41336f:	call   0x304b:0x7a0ff807
  413376:	sub    DWORD PTR [ebx-0x1166b422],eax
  41337c:	fcmovu st,st(4)
  41337e:	inc    edx
  41337f:	push   ebp
  413380:	imul   edi,DWORD PTR [eax-0x5dc9d681],0xd78a4254
  41338a:	popf   
  41338b:	or     eax,DWORD PTR [esi+0x7e]
  41338e:	push   di
  413390:	and    eax,0x4b51c006
  413395:	mov    dh,ah
  413397:	outs   dx,DWORD PTR ds:[esi]
  413398:	ins    DWORD PTR es:[edi],dx
  413399:	repz fidivr DWORD PTR [edx]
  41339c:	mov    ds:0x29bc515f,eax
  4133a1:	int    0x75
  4133a3:	mov    dh,0x42
  4133a5:	or     eax,DWORD PTR [ebx+0x2026efcd]
  4133ab:	fdivr  DWORD PTR [esi+0x56862d17]
  4133b1:	push   0x8f3cf38a
  4133b6:	daa    
  4133b7:	pop    ds
  4133b8:	ror    dh,1
  4133ba:	shl    BYTE PTR [edi+eiz*8+0x46],0x6c
  4133bf:	jmp    0x9d6c:0x91a00803
  4133c6:	push   edx
  4133c7:	dec    edi
  4133c8:	mov    BYTE PTR es:[ebp-0x544089f2],bh
  4133cf:	in     al,0xc6
  4133d1:	pop    ecx
  4133d2:	adc    al,0x33
  4133d4:	sub    cl,ch
  4133d6:	call   0xe75d:0x134e7d07
  4133dd:	push   ebp
  4133de:	mov    eax,0x70dc1c9
  4133e3:	stc    
  4133e4:	scas   al,BYTE PTR es:[edi]
  4133e5:	stc    
  4133e6:	dec    ecx
  4133e7:	(bad)  
  4133e8:	jo     0x413392
  4133ea:	adc    eax,0xad5dc77f
  4133ef:	das    
  4133f0:	mov    al,0x30
  4133f2:	inc    eax
  4133f3:	xor    al,ah
  4133f5:	stos   BYTE PTR es:[edi],al
  4133f6:	mov    BYTE PTR [ecx-0x56855255],dh
  4133fc:	xor    ch,BYTE PTR [edi+0x42c05618]
  413402:	cmp    DWORD PTR [esi-0x1e66d104],esi
  413408:	or     esp,DWORD PTR [edx+0x1e]
  41340b:	rcr    BYTE PTR [edx+0x5f0904d2],0xc9
  413412:	fs jae 0x413438
  413415:	jmp    0xb77641ad
  41341a:	sahf   
  41341b:	aam    0xb6
  41341d:	cmp    eax,0xd59fc838
  413422:	imul   eax,DWORD PTR [edx+0x5e64a66e],0xe10c786e
  41342c:	and    DWORD PTR [eax+0x22a3ab15],edi
  413432:	push   ebp
  413433:	stos   BYTE PTR es:[edi],al
  413434:	sub    eax,0xe9fc2571
  413439:	and    eax,0xc35d8283
  41343e:	sti    
  41343f:	int3   
  413440:	(bad)  
  413441:	dec    ebx
  413442:	mov    BYTE PTR [esi+0x28b8b237],dh
  413448:	inc    esi
  413449:	jge    0x413443
  41344b:	js     0x413420
  41344d:	xchg   edx,eax
  41344e:	push   edx
  41344f:	add    al,0xf0
  413451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413452:	dec    eax
  413453:	popf   
  413454:	or     DWORD PTR ds:0x76268553,esi
  41345a:	retf   0x18ce
  41345d:	rcl    BYTE PTR [ebp+0x45c0770f],cl
  413463:	and    ch,dl
  413465:	add    bh,BYTE PTR [edi]
  413467:	or     DWORD PTR [edx-0x64ded364],esi
  41346d:	sti    
  41346e:	xor    eax,0x1f75e98c
  413473:	jp     0x4134cc
  413475:	or     DWORD PTR [ebp-0x38],ecx
  413478:	jb     0x413413
  41347a:	fild   DWORD PTR [edi+ebx*2]
  41347d:	jnp    0x4134e1
  41347f:	lahf   
  413480:	cmp    bl,BYTE PTR [edi+eax*4-0xd]
  413484:	out    dx,eax
  413485:	sbb    DWORD PTR [esi-0x4e19e987],0x15
  41348c:	sti    
  41348d:	jnp    0x4134f1
  41348f:	in     al,0x84
  413491:	popa   
  413492:	jge    0x41342c
  413494:	xor    ebp,DWORD PTR [edx]
  413496:	fild   QWORD PTR ds:0xc5864d1c
  41349c:	mov    bh,0x5e
  41349e:	and    al,0xea
  4134a0:	or     bh,bh
  4134a2:	rol    edi,cl
  4134a4:	and    bh,cl
  4134a6:	mov    ebp,0x96a10181
  4134ab:	js     0x4134ec
  4134ad:	fs call 0xaa1e:0x4d774a40
  4134b5:	sub    eax,0x7f2a1a0d
  4134ba:	test   BYTE PTR [edx-0x2f],0x5
  4134be:	jl     0x4134e1
  4134c0:	shl    DWORD PTR [eax+eax*2+0xf],cl
  4134c4:	pop    es
  4134c5:	test   BYTE PTR [edi],dl
  4134c7:	mov    DWORD PTR ds:0xabe67f81,ebx
  4134cd:	cwde   
  4134ce:	sbb    ebx,0xc745fe3e
  4134d4:	jae    0x413505
  4134d6:	sub    eax,esp
  4134d8:	add    al,0x2
  4134da:	jmp    0x2aef00be
  4134df:	ins    DWORD PTR es:[edi],dx
  4134e0:	call   0x2773:0xbb16ab9d
  4134e7:	dec    ecx
  4134e8:	jle    0x4134bb
  4134ea:	jmp    0x1407593e
  4134ef:	(bad)  
  4134f0:	jg     0x413475
  4134f2:	sbb    eax,0xdc36b3ab
  4134f7:	dec    ebx
  4134f8:	aam    0xe
  4134fa:	mov    dh,0xe7
  4134fc:	push   es
  4134fd:	push   ecx
  4134fe:	pop    ecx
  4134ff:	sub    esi,DWORD PTR [esi+edi*4-0xe]
  413503:	sbb    eax,0xc1f90171
  413508:	pop    ds
  413509:	adc    esp,DWORD PTR [esi]
  41350b:	jbe    0x41354c
  41350d:	and    eax,DWORD PTR [edi+ecx*8-0x13856913]
  413514:	fadd   QWORD PTR [edx+0x38]
  413517:	rcl    eax,1
  413519:	inc    ebx
  41351a:	sub    eax,0xbf40a96f
  41351f:	jb     0x413576
  413521:	pop    ss
  413522:	push   ebx
  413523:	mov    al,0xc0
  413525:	push   cs
  413526:	mov    DWORD PTR [edx+0x3eeb1e5f],edx
  41352c:	sbb    al,0x22
  41352e:	or     DWORD PTR [edx-0x77f7339b],ecx
  413534:	bound  esi,QWORD PTR [ebx]
  413536:	imul   ebx,DWORD PTR [ebx],0xffffffc7
  413539:	sbb    al,0xd6
  41353b:	mov    al,0x3d
  41353d:	pop    esi
  41353e:	xor    al,0x69
  413540:	fsub   st(0),st
  413542:	push   cs
  413543:	jnp    0x413566
  413545:	in     al,0xfd
  413547:	and    DWORD PTR [esi+0x6ff1d8a6],esp
  41354d:	div    DWORD PTR [edx]
  41354f:	pop    ds
  413550:	and    ah,BYTE PTR [edi-0x5f]
  413553:	xchg   ecx,eax
  413554:	cwde   
  413555:	xchg   ecx,eax
  413556:	cld    
  413557:	test   al,0xde
  413559:	pop    edx
  41355a:	js     0x41354c
  41355c:	and    al,0xaf
  41355e:	push   ebp
  41355f:	clc    
  413560:	mov    ax,0x7f86
  413564:	sbb    al,0x67
  413566:	cdq    
  413567:	stos   DWORD PTR es:[edi],eax
  413568:	xchg   bl,dl
  41356a:	pop    DWORD PTR [ebx+0x41]
  41356d:	aaa    
  41356e:	cmp    ebp,DWORD PTR [ebp+0x54674b8a]
  413574:	jb     0x4135c1
  413576:	adc    ecx,ecx
  413578:	xor    DWORD PTR [eax],0xffffffd6
  41357b:	dec    esi
  41357c:	add    edx,esp
  41357e:	call   0xfd36f4a6
  413583:	xor    dh,al
  413585:	hlt    
  413586:	test   DWORD PTR [ebx+ebp*4-0x11],esp
  41358a:	mov    ecx,ebp
  41358c:	sub    cl,ah
  41358e:	and    DWORD PTR [eax+0x5d],ebp
  413591:	jne    0x41356a
  413593:	not    DWORD PTR [eax-0x68]
  413596:	and    DWORD PTR [eax+esi*4-0x1d],0x8bb0dbc8
  41359e:	inc    ebp
  41359f:	in     eax,dx
  4135a0:	add    DWORD PTR [ecx],0xd2bd3fe7
  4135a6:	add    BYTE PTR [eax+0x4c0b1146],cl
  4135ac:	fmul   DWORD PTR ds:0x3755f50b
  4135b2:	jbe    0x41356b
  4135b4:	lahf   
  4135b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b6:	inc    esi
  4135b7:	pusha  
  4135b8:	or     eax,0xc399826a
  4135bd:	mov    dl,0x4d
  4135bf:	xchg   edi,eax
  4135c0:	fcom   DWORD PTR [edi]
  4135c2:	push   ds
  4135c3:	fcom   QWORD PTR [ecx+0x53edb4c2]
  4135c9:	cmp    bl,ch
  4135cb:	in     eax,dx
  4135cc:	xor    ch,bl
  4135ce:	mov    dl,0x3d
  4135d0:	xor    BYTE PTR [ecx+0x5a],dh
  4135d3:	jp     0x413633
  4135d5:	sub    eax,0x2201e268
  4135da:	lods   al,BYTE PTR ds:[esi]
  4135db:	loopne 0x413642
  4135dd:	pop    esi
  4135de:	xchg   ebp,eax
  4135df:	scas   al,BYTE PTR es:[edi]
  4135e0:	mov    ds:0x19b8a67e,eax
  4135e5:	test   eax,0x905adda4
  4135ea:	sub    al,0x7c
  4135ec:	clc    
  4135ed:	or     DWORD PTR [ecx],0x39
  4135f0:	pop    esp
  4135f1:	jnp    0x4135e0
  4135f3:	sbb    DWORD PTR [esi+0x757de92c],ebx
  4135f9:	ret    0x90bb
  4135fc:	mov    ds:0xded06ef7,al
  413601:	(bad)  [eax+0x1b66e392]
  413607:	mov    bh,0x66
  413609:	dec    edi
  41360a:	jge    0x413624
  41360c:	sbb    al,BYTE PTR [eax+0x57]
  41360f:	push   ebp
  413610:	inc    ebx
  413611:	bound  edi,QWORD PTR [edx+0x6cb99158]
  413617:	xchg   DWORD PTR [edx],ebx
  413619:	and    BYTE PTR [eax-0x5],dl
  41361c:	mov    bh,0x94
  41361e:	mov    eax,ds:0xb8837fc1
  413623:	push   ss
  413624:	popf   
  413625:	inc    eax
  413626:	aad    0x16
  413628:	jb     0x4135ec
  41362a:	adc    DWORD PTR [esp+esi*1],eax
  41362d:	xchg   ecx,eax
  41362e:	sbb    esp,DWORD PTR [eax+0x77]
  413631:	sub    esi,ebx
  413633:	daa    
  413634:	add    bl,ah
  413636:	gs jmp 0x6d9a:0x9ec476ca
  41363e:	int3   
  41363f:	cli    
  413640:	inc    ebx
  413641:	jl     0x4136a7
  413643:	neg    DWORD PTR [ecx+ecx*8]
  413646:	cmp    eax,0x9480ea5
  41364b:	pusha  
  41364c:	nop
  41364d:	dec    edi
  41364e:	xchg   eax,esi
  413650:	bound  edi,QWORD PTR [esi+edx*8-0x581ef9e6]
  413657:	mov    DWORD PTR [esp+eiz*2-0x6dec5ed2],ebp
  41365e:	adc    eax,DWORD PTR [esp+edi*8]
  413661:	ret    
  413662:	lahf   
  413663:	push   0x242e5e4a
  413668:	loope  0x413685
  41366a:	jl     0x4136e2
  41366c:	push   esi
  41366d:	or     DWORD PTR [edi+0x2f],0xb9756972
  413674:	ds pop ds
  413676:	mov    edi,0x57c1f528
  41367b:	rcl    DWORD PTR [ebp-0x40],0x4d
  41367f:	inc    ebp
  413680:	jb     0x413671
  413682:	gs jne 0x4136e1
  413685:	outs   dx,BYTE PTR ds:[esi]
  413686:	mov    al,ds:0xcc7c92f4
  41368b:	scas   eax,DWORD PTR es:[edi]
  41368c:	lahf   
  41368d:	ret    
  41368e:	repnz xchg ebp,eax
  413690:	push   ebp
  413691:	dec    eax
  413692:	mov    esi,0x5cfb1db1
  413697:	pop    eax
  413698:	mov    esi,eax
  41369a:	push   0x2
  41369c:	xchg   edx,eax
  41369d:	mov    ch,0x43
  41369f:	cmp    bh,BYTE PTR [edi-0x63a0688f]
  4136a5:	aaa    
  4136a6:	fcmovnu st,st(7)
  4136a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a9:	push   ss
  4136aa:	out    dx,al
  4136ab:	push   eax
  4136ac:	adc    al,0x11
  4136ae:	loop   0x413710
  4136b0:	add    al,0xc0
  4136b2:	ss out dx,al
  4136b4:	fstp   QWORD PTR [esp+esi*2+0x31]
  4136b8:	lock out dx,eax
  4136ba:	lods   al,BYTE PTR ds:[esi]
  4136bb:	jmp    0x217f89cd
  4136c0:	or     DWORD PTR [edx+eax*4+0xe],0x4a
  4136c5:	mov    WORD PTR [edx+ebx*8+0x2a],?
  4136c9:	push   esp
  4136ca:	test   BYTE PTR [esi-0x7],0x8b
  4136ce:	fcmovu st,st(4)
  4136d0:	xrelease mov DWORD PTR [ecx],esi
  4136d3:	sbb    BYTE PTR [eax+0x5246ea2c],bl
  4136d9:	jae    0x4136e7
  4136db:	popa   
  4136dc:	out    dx,al
  4136dd:	out    dx,eax
  4136de:	adc    eax,0x8b90779d
  4136e3:	sub    esi,DWORD PTR [ebx-0x3be631ba]
  4136e9:	enter  0x49d2,0x9e
  4136ed:	cli    
  4136ee:	xchg   ecx,eax
  4136ef:	retf   0x1a49
  4136f2:	mov    bl,0x26
  4136f4:	mov    ds:0xf926e9fa,eax
  4136f9:	jne    0x41375e
  4136fb:	pop    esp
  4136fc:	sahf   
  4136fd:	xchg   edx,eax
  4136fe:	aas    
  4136ff:	shl    BYTE PTR [edx+eiz*8-0x4],1
  413703:	jnp    0x413747
  413705:	sbb    eax,0x5f62740f
  41370a:	sub    DWORD PTR [ebp+0x55],0xe7375c0d
  413711:	jge    0x4136e2
  413713:	xchg   esi,esi
  413715:	or     dh,BYTE PTR [ebx]
  413717:	cmp    al,0x86
  413719:	lds    esp,FWORD PTR [ecx]
  41371b:	loope  0x413738
  41371d:	enter  0xb2a5,0xf
  413721:	pop    edx
  413722:	jmp    0x41372f
  413724:	scas   al,BYTE PTR es:[edi]
  413725:	je     0x4136e9
  413727:	pusha  
  413728:	aam    0x69
  41372a:	sub    DWORD PTR [edx-0xa],0x57
  41372e:	xor    DWORD PTR [eax],esp
  413730:	add    BYTE PTR [ebx-0x54fab997],0xc6
  413737:	pop    ebp
  413738:	and    al,0x6d
  41373a:	add    eax,0xae375000
  41373f:	inc    ebx
  413740:	cdq    
  413741:	out    dx,al
  413742:	jmp    0x979:0x51a05674
  413749:	and    dh,BYTE PTR [edx]
  41374b:	call   0xa4ab:0x3f0f1313
  413752:	iret   
  413753:	xor    BYTE PTR [edx+edx*8],cl
  413756:	xor    BYTE PTR [edi],al
  413758:	scas   al,BYTE PTR es:[edi]
  413759:	xchg   esp,eax
  41375a:	lods   eax,DWORD PTR ds:[esi]
  41375b:	fiadd  DWORD PTR [eax]
  41375d:	mov    bh,0xa5
  41375f:	das    
  413760:	and    dl,BYTE PTR [edi-0x7a]
  413763:	(bad)  
  413764:	cli    
  413765:	mov    bl,0x1c
  413767:	xchg   ebp,eax
  413768:	scas   eax,DWORD PTR es:[edi]
  413769:	fist   WORD PTR [ebx-0xd]
  41376c:	aas    
  41376d:	lods   eax,DWORD PTR ds:[esi]
  41376e:	adc    bl,bh
  413770:	inc    edx
  413771:	popw   ss
  413773:	daa    
  413774:	adc    al,dl
  413776:	xchg   esp,eax
  413777:	shl    DWORD PTR [eax-0x23e023d6],0x6f
  41377e:	(bad)  
  413780:	lds    edx,FWORD PTR cs:[esi+0x43]
  413784:	push   ebp
  413785:	mov    ds:0x524ed0b6,al
  41378a:	stos   DWORD PTR es:[edi],eax
  41378b:	mov    ds:0x96d99ae5,eax
  413790:	inc    edi
  413791:	mov    ebx,0x349a039d
  413796:	pop    esp
  413797:	mov    bh,0x24
  413799:	call   0x7d96:0x25f20a6b
  4137a0:	adc    esp,DWORD PTR [esi+0x43]
  4137a3:	add    al,0x4e
  4137a5:	push   0x7a
  4137a7:	iret   
  4137a8:	out    0x76,al
  4137aa:	(bad)  
  4137ab:	ins    BYTE PTR es:[edi],dx
  4137ac:	jmp    0x4137ec
  4137ae:	mov    edx,0xdb2abe14
  4137b3:	icebp  
  4137b4:	and    DWORD PTR [ecx-0x38],0xffffffa7
  4137b8:	cmp    ch,BYTE PTR [ebx+0x38]
  4137bb:	jl     0x4137ff
  4137bd:	xchg   eax,esp
  4137bf:	or     BYTE PTR [eax],dh
  4137c1:	fpatan 
  4137c3:	and    esi,DWORD PTR [eax-0x6c]
  4137c6:	inc    ebx
  4137c7:	test   eax,0x8eaaa993
  4137cc:	add    bh,BYTE PTR [esi-0x2b]
  4137cf:	aas    
  4137d0:	jns    0x4137c5
  4137d2:	clc    
  4137d3:	loope  0x4137b0
  4137d5:	fstp   QWORD PTR [ebx-0x2002b1]
  4137db:	sahf   
  4137dc:	loope  0x4137f2
  4137de:	(bad)  
  4137e0:	daa    
  4137e1:	imul   esp,DWORD PTR [ebx-0x7a282a44],0x927cf24b
  4137eb:	or     esi,DWORD PTR [edx-0x21]
  4137ee:	popa   
  4137ef:	jmp    0x8fc6:0xfe2aaef2
  4137f6:	je     0x413846
  4137f8:	nop
  4137f9:	jb     0x4137f1
  4137fb:	pop    esp
  4137fc:	out    dx,al
  4137fd:	cmc    
  4137fe:	enter  0x9e8c,0x70
  413802:	push   ebx
  413803:	repnz adc eax,0xd06c6cfa
  413809:	jae    0x41379e
  41380b:	in     al,dx
  41380c:	dec    esi
  41380d:	aam    0xc1
  41380f:	test   BYTE PTR [eax+edx*4-0x50775a0a],0x1b
  413817:	in     eax,dx
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381a:	clc    
  41381b:	jo     0x4137c4
  41381d:	pop    ecx
  41381e:	shr    DWORD PTR [ebx],0x6
  413821:	or     eax,0x88459b4
  413826:	jl     0x413876
  413828:	dec    edx
  413829:	in     al,0x30
  41382b:	ins    DWORD PTR es:[edi],dx
  41382c:	nop
  41382d:	pop    eax
  41382e:	repnz mov bh,0x47
  413831:	clc    
  413832:	cwde   
  413833:	sub    al,0x97
  413835:	enter  0xb5f5,0x55
  413839:	int    0x85
  41383b:	xchg   BYTE PTR [ebp+0x6d],ah
  41383e:	gs into 
  413840:	out    0x16,eax
  413842:	rcr    BYTE PTR [esi+edi*1-0x20],1
  413846:	xchg   ebp,eax
  413847:	fucom  st(5)
  413849:	stc    
  41384a:	and    BYTE PTR [edi],0x6e
  41384d:	adc    BYTE PTR [ebx+eax*4],ah
  413850:	or     edx,DWORD PTR [edx-0x6f]
  413853:	sub    BYTE PTR [ebx+0x40f57404],cl
  413859:	nop
  41385a:	mov    ds:0xaf9c4ede,al
  41385f:	mov    al,0x33
  413861:	sub    al,0x20
  413863:	stc    
  413864:	ffree  st(5)
  413866:	add    eax,0xc681b651
  41386b:	dec    esp
  41386c:	(bad)  
  41386d:	jecxz  0x41385d
  41386f:	stos   BYTE PTR es:[edi],al
  413870:	xlat   BYTE PTR ds:[ebx]
  413871:	push   0x3b878e75
  413876:	jecxz  0x413874
  413878:	std    
  413879:	mov    al,0xed
  41387b:	call   0x7523:0xe2872e96
  413882:	jge    0x4138eb
  413884:	bound  ecx,QWORD PTR [edi+0x78]
  413887:	stc    
  413888:	ficomp WORD PTR [ebx+0x7ea9383]
  41388e:	fcmovne st,st(7)
  413890:	xchg   ch,cl
  413892:	mov    bh,BYTE PTR [ecx-0x44c8f93f]
  413898:	fstp   QWORD PTR [ecx]
  41389a:	mov    dl,ah
  41389c:	and    esi,DWORD PTR [ecx-0x134e52e5]
  4138a2:	hlt    
  4138a3:	pop    eax
  4138a4:	iret   
  4138a5:	loop   0x4138d4
  4138a7:	xlat   BYTE PTR ds:[ebx]
  4138a8:	rol    BYTE PTR [edx+0x2a],0x2e
  4138ac:	retf   0xdda5
  4138af:	adc    al,0xe1
  4138b1:	and    bl,al
  4138b3:	inc    edx
  4138b4:	lock imul ecx,DWORD PTR [edx-0x61],0xffffffcd
  4138b9:	fs sub al,0xb8
  4138bc:	mov    ebp,0xe4f72908
  4138c1:	mov    ds:0x1b8b2b9a,al
  4138c6:	sahf   
  4138c7:	mov    ebp,0xc9633f61
  4138cc:	mov    ch,0x65
  4138ce:	aas    
  4138cf:	mov    dl,0xb
  4138d1:	jnp    0x4138be
  4138d3:	jo     0x4138b1
  4138d5:	sub    bh,dh
  4138d7:	push   edx
  4138d8:	jp     0x413879
  4138da:	jbe    0x41391c
  4138dc:	mov    ds:0x83c3ee43,eax
  4138e1:	jmp    0x4138c5
  4138e3:	clc    
  4138e4:	test   eax,0x9e272d87
  4138e9:	daa    
  4138ea:	out    dx,eax
  4138eb:	ins    BYTE PTR es:[edi],dx
  4138ec:	int3   
  4138ed:	inc    ebp
  4138ee:	inc    ebp
  4138ef:	(bad)  [ebx-0x73]
  4138f2:	lds    ecx,FWORD PTR [ebx+0x695f899c]
  4138f8:	int3   
  4138f9:	mov    DWORD PTR [ecx+0x708c0893],esp
  4138ff:	xchg   ecx,eax
  413900:	fidivr WORD PTR [esi]
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	sbb    esp,0x91318961
  413909:	nop
  41390a:	cmp    bl,BYTE PTR es:[eax+0x9]
  41390e:	inc    DWORD PTR [ebp+0x0]
  413911:	dec    ebx
  413912:	sub    al,0x7d
  413914:	pop    edx
  413915:	adc    DWORD PTR [ebx-0x38],esp
  413918:	fmul   QWORD PTR ds:0x92eeab19
  41391e:	push   ebp
  41391f:	stos   DWORD PTR es:[edi],eax
  413920:	and    eax,0x769732b0
  413925:	sar    BYTE PTR [esi+0x29],1
  413928:	sbb    al,0xb2
  41392a:	cmp    BYTE PTR [eax],cl
  41392c:	aas    
  41392d:	call   0xcfd:0x4f804a4
  413934:	inc    edx
  413935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413936:	pop    edx
  413937:	mov    edi,0x70ae4ed0
  41393c:	fwait
  41393d:	pop    esp
  41393e:	or     DWORD PTR [edx-0x60fd3de7],0xc500f0a3
  413948:	xor    al,0x21
  41394a:	push   cs
  41394b:	sbb    bl,ah
  41394d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41394e:	mov    ds:0xb979a60d,al
  413953:	jns    0x41392a
  413955:	push   edx
  413956:	push   0xe9ec7f17
  41395b:	sub    al,0x47
  41395d:	xor    DWORD PTR [ebp-0x51],esi
  413960:	push   ebx
  413961:	sub    eax,0x635f883a
  413966:	push   cs
  413967:	test   DWORD PTR [ebp+0x37],ecx
  41396a:	je     0x41394c
  41396c:	mov    es:0x57be0bc6,al
  413972:	mov    ah,0xb4
  413974:	mov    BYTE PTR [ebp-0x5083c543],ah
  41397a:	dec    edx
  41397b:	cld    
  41397c:	mov    dl,0xf8
  41397e:	cmp    eax,0xf96067d6
  413983:	xchg   esp,eax
  413984:	push   ss
  413985:	imul   esp,DWORD PTR [edi+0x727c508a],0x4f
  41398c:	inc    edi
  41398d:	push   ebx
  41398e:	mov    esi,0xb5af6c0a
  413993:	sbb    cl,bh
  413995:	das    
  413996:	sub    esi,eax
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	jecxz  0x41392c
  41399b:	inc    ebx
  41399c:	in     eax,dx
  41399d:	les    eax,FWORD PTR [edx-0x1ab205c1]
  4139a3:	icebp  
  4139a4:	ss int 0x9
  4139a7:	shl    BYTE PTR [eax],1
  4139a9:	sub    eax,0x7ee406f7
  4139ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139af:	test   DWORD PTR [edi-0x3c7d12b9],edi
  4139b5:	ret    0xf196
  4139b8:	rcl    BYTE PTR [ecx+0x141facba],1
  4139be:	xchg   edi,eax
  4139bf:	test   BYTE PTR [esi+0x76935403],dl
  4139c5:	xchg   ebx,eax
  4139c6:	jb     0x4139e1
  4139c8:	iret   
  4139c9:	mov    dl,0xb
  4139cb:	mov    dl,0xbb
  4139cd:	arpl   WORD PTR [edi],si
  4139cf:	std    
  4139d0:	fsin   
  4139d2:	jne    0x41399a
  4139d4:	xchg   esp,eax
  4139d5:	popa   
  4139d6:	imul   ecx,DWORD PTR [ebp+ebx*2-0x1f],0x4a93672e
  4139de:	mov    ss,WORD PTR [eax+eax*2-0x36]
  4139e2:	pop    ss
  4139e3:	addr16 mov ebp,0x522ea0f0
  4139e9:	hlt    
  4139ea:	(bad)  
  4139eb:	int3   
  4139ec:	or     esp,DWORD PTR [edx+esi*1]
  4139ef:	or     BYTE PTR [edi+ebx*1-0x1c],0x17
  4139f4:	push   esp
  4139f5:	mov    esi,0xac085d50
  4139fa:	sbb    ecx,eax
  4139fc:	loope  0x413a1b
  4139fe:	repz mov al,0xc8
  413a01:	imul   esi,edi,0x55
  413a04:	jns    0x413a2c
  413a06:	mov    eax,esi
  413a08:	clc    
  413a09:	std    
  413a0a:	ins    DWORD PTR es:[edi],dx
  413a0b:	xchg   esi,eax
  413a0c:	pop    es
  413a0d:	hlt    
  413a0e:	or     eax,DWORD PTR [esi]
  413a10:	xchg   edi,eax
  413a11:	or     dh,BYTE PTR [ebx+0x73325a12]
  413a17:	jbe    0x4139b5
  413a19:	repz push 0xffffff84
  413a1c:	ja     0x413a56
  413a1e:	(bad)  
  413a1f:	push   0xfffffffd
  413a21:	popf   
  413a22:	aam    0xfa
  413a24:	and    DWORD PTR [ecx],ecx
  413a26:	or     DWORD PTR [eax],0x5d
  413a29:	loopne 0x4139cf
  413a2b:	test   eax,0x4a07ba9
  413a30:	or     BYTE PTR [eax],bl
  413a32:	aam    0x8b
  413a34:	mov    ebx,DWORD PTR [eax+eax*2]
  413a37:	push   0x7f
  413a39:	popa   
  413a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a3b:	xor    al,0x17
  413a3d:	int3   
  413a3e:	(bad)  
  413a40:	into   
  413a41:	mov    WORD PTR [esi],cs
  413a43:	cmc    
  413a44:	ret    
  413a45:	jae    0x413a51
  413a47:	sub    al,0x91
  413a49:	ja     0x413a59
  413a4b:	lahf   
  413a4c:	mov    ds:0x47a0f68,eax
  413a51:	and    ch,ah
  413a53:	pop    ecx
  413a54:	addr16 xor eax,0x200e458d
  413a5a:	adc    edi,DWORD PTR [edx]
  413a5c:	ds sub DWORD PTR es:[ebp-0x65],ebx
  413a61:	push   edx
  413a62:	cmp    al,0xfb
  413a64:	rcr    DWORD PTR ds:0x5c56c53c,0x28
  413a6b:	push   0x5fa8f07e
  413a70:	push   0x6723563b
  413a75:	sahf   
  413a76:	fdiv   DWORD PTR [esi]
  413a78:	inc    ecx
  413a79:	mov    esi,ecx
  413a7b:	push   ebp
  413a7c:	sub    bl,cl
  413a7e:	mov    dh,0xde
  413a80:	xor    DWORD PTR [ebp+0x14c5c71],ebx
  413a86:	mov    ds:0x2789cf8,eax
  413a8b:	add    al,0x56
  413a8d:	sub    al,ah
  413a8f:	fisub  WORD PTR [esi]
  413a91:	xchg   esp,eax
  413a92:	sahf   
  413a93:	addr16 or eax,0x4f6b1ece
  413a99:	imul   esi,DWORD PTR [edx-0x79],0xd4252b81
  413aa0:	jns    0x413a40
  413aa2:	into   
  413aa3:	adc    DWORD PTR [edx-0x5a],0xffffffc5
  413aa7:	sub    BYTE PTR [ecx-0x19],ch
  413aaa:	fidiv  WORD PTR [esi+ebx*1+0x38]
  413aae:	shr    BYTE PTR [edi+0x4bc1344c],0x48
  413ab5:	pop    esp
  413ab6:	arpl   WORD PTR [edi+edi*8-0xd],cx
  413aba:	fucomi st,st(4)
  413abc:	inc    edx
  413abd:	xchg   ecx,eax
  413abe:	cmp    cl,BYTE PTR [ecx+0x775cf08f]
  413ac4:	je     0x413a59
  413ac6:	ins    DWORD PTR es:[edi],dx
  413ac7:	push   edi
  413ac8:	jae    0x413aa9
  413aca:	inc    eax
  413acb:	daa    
  413acc:	xchg   esi,eax
  413acd:	popa   
  413ace:	xchg   esi,eax
  413acf:	pop    ds
  413ad0:	(bad)  
  413ad1:	mov    BYTE PTR ds:0x828bcd07,0xda
  413ad8:	aad    0x45
  413ada:	aas    
  413adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413adc:	or     eax,0xdddc1128
  413ae1:	les    esp,FWORD PTR [edx+0x558d4cc5]
  413ae7:	into   
  413ae8:	call   0xa9522730
  413aed:	call   0x308f:0xe6d6148
  413af4:	or     DWORD PTR [ecx-0x7c2e99bb],ebx
  413afa:	pop    ss
  413afb:	xchg   ebx,eax
  413afc:	xor    ecx,ecx
  413afe:	jb     0x413a91
  413b00:	mov    dh,0xb3
  413b02:	push   es
  413b03:	ror    DWORD PTR [ecx],1
  413b05:	aam    0x8
  413b07:	adc    ch,bl
  413b09:	push   0xad363861
  413b0e:	pop    ds
  413b0f:	mul    BYTE PTR [ecx-0x38]
  413b12:	mov    ds:0xd0ee42fc,eax
  413b17:	nop
  413b18:	jmp    0xae5b751
  413b1d:	js     0x413ae0
  413b1f:	pop    edx
  413b20:	sbb    al,0xc3
  413b22:	mov    WORD PTR [esi],fs
  413b24:	xchg   DWORD PTR [ecx-0x2eaf7be8],ebp
  413b2a:	(bad)  
  413b2b:	(bad)  
  413b2c:	pop    eax
  413b2d:	jo     0x413ba9
  413b2f:	or     eax,0x2af5a7d9
  413b34:	and    DWORD PTR [edi-0x6c7c750],ebp
  413b3a:	js     0x413b49
  413b3c:	stc    
  413b3d:	test   al,0x34
  413b3f:	inc    esp
  413b40:	(bad)  
  413b41:	gs jno 0x413af7
  413b44:	fmul   QWORD PTR [eax+edi*8-0x17]
  413b48:	cmp    dh,BYTE PTR [edi+0x10]
  413b4b:	and    esi,DWORD PTR [edi+0x7c9832e4]
  413b51:	outs   dx,DWORD PTR ds:[esi]
  413b52:	in     al,0x91
  413b54:	in     eax,dx
  413b55:	pusha  
  413b56:	test   al,0x7
  413b58:	sub    BYTE PTR [edx-0x1e],ah
  413b5b:	inc    edi
  413b5c:	icebp  
  413b5d:	add    ecx,DWORD PTR [edx]
  413b5f:	clc    
  413b60:	and    al,0x70
  413b62:	xchg   esp,eax
  413b63:	retf   0x8251
  413b66:	imul   ebp,DWORD PTR [ebx+0x40],0xaf5a8dac
  413b6d:	(bad)  
  413b6e:	in     eax,0x33
  413b70:	jae    0x413b4d
  413b72:	mov    al,0x1e
  413b74:	sub    eax,0x989d5937
  413b79:	out    dx,eax
  413b7a:	jle    0x413b98
  413b7c:	repz rcl DWORD PTR [edi+0x27048689],0x2
  413b84:	add    BYTE PTR [esp+eax*2+0x7a895add],al
  413b8b:	retf   
  413b8c:	(bad)  
  413b8d:	and    ah,BYTE PTR [ebp+0x400f108f]
  413b93:	add    esi,esp
  413b95:	not    DWORD PTR [ebx+0x2e2f7566]
  413b9b:	out    dx,eax
  413b9c:	inc    esi
  413b9e:	mov    esp,0x5c9be4cc
  413ba3:	aad    0x95
  413ba5:	pop    ss
  413ba6:	outs   dx,BYTE PTR ds:[esi]
  413ba7:	ds xor eax,0xe73c2b3b
  413bad:	int    0x53
  413baf:	pop    esi
  413bb0:	mov    ds:0x2a5fe39b,eax
  413bb5:	dec    edx
  413bb6:	inc    esi
  413bb7:	jecxz  0x413c02
  413bb9:	cmp    BYTE PTR [ebp-0x6a60d582],dl
  413bbf:	sbb    dh,ah
  413bc1:	daa    
  413bc2:	loope  0x413c1e
  413bc4:	out    0x6d,eax
  413bc6:	add    ebx,ecx
  413bc8:	dec    edx
  413bc9:	pop    ebx
  413bca:	push   esp
  413bcb:	pop    ds
  413bcc:	jno    0x413bae
  413bce:	jne    0x413c37
  413bd0:	fbld   TBYTE PTR [eax+0x415d0563]
  413bd6:	xor    dl,al
  413bd8:	sub    eax,0x54ba1223
  413bdd:	aam    0x0
  413bdf:	push   ebp
  413be0:	add    cl,BYTE PTR [ebx-0x485ccd22]
  413be6:	(bad)  
  413be7:	push   0xd9fdef43
  413bec:	sbb    esi,eax
  413bee:	pop    ebp
  413bef:	and    dh,BYTE PTR [esi-0x2b]
  413bf2:	ds pop es
  413bf4:	out    0x3,al
  413bf6:	xor    eax,0xbef93e2e
  413bfb:	add    DWORD PTR [eax],edx
  413bfd:	fdivr  QWORD PTR [ecx+0x5202bd81]
  413c03:	mov    BYTE PTR [ebp-0x7f],bh
  413c06:	inc    edx
  413c07:	jbe    0x413c13
  413c09:	mov    eax,ds:0xe6ba6ab
  413c0e:	out    0xa7,eax
  413c10:	and    eax,0x9c38916f
  413c15:	pop    edx
  413c16:	call   0x7e4c:0xfca880a2
  413c1d:	mov    ah,0x79
  413c1f:	xchg   ebx,eax
  413c20:	loope  0x413ba4
  413c22:	and    eax,0xa2fdfdfd
  413c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c28:	push   ebp
  413c29:	xlat   BYTE PTR ds:[ebx]
  413c2a:	cwde   
  413c2b:	leave  
  413c2c:	pop    edx
  413c2d:	mov    edi,0xf38db384
  413c32:	(bad)  
  413c33:	mov    ebp,0x30d9208c
  413c38:	repnz pushf 
  413c3a:	outs   dx,DWORD PTR ds:[esi]
  413c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c3c:	xor    eax,0x5ac501e5
  413c41:	retf   
  413c42:	sbb    BYTE PTR [edi-0x61],ah
  413c45:	lahf   
  413c46:	imul   esp,DWORD PTR [ebx],0x2e475dad
  413c4c:	add    BYTE PTR [esi-0x795112e3],dh
  413c52:	aam    0x27
  413c54:	lods   al,BYTE PTR ds:[esi]
  413c55:	data16 or al,0x1
  413c58:	mov    bh,0x4f
  413c5a:	fsub   QWORD PTR [ebx-0x3c6f7370]
  413c60:	loopne 0x413c1c
  413c62:	dec    esi
  413c63:	xor    al,0x9c
  413c65:	mov    dh,0xbd
  413c67:	mov    esi,DWORD PTR [esi+0x33]
  413c6a:	xchg   ecx,eax
  413c6b:	stos   BYTE PTR es:[edi],al
  413c6c:	sub    dl,BYTE PTR [ecx-0x33]
  413c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c70:	lods   al,BYTE PTR ds:[esi]
  413c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c72:	mov    fs:0xba76008f,eax
  413c78:	mov    eax,ds:0xd39e6429
  413c7d:	out    0x62,eax
  413c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c80:	int    0x55
  413c82:	int3   
  413c83:	adc    ch,BYTE PTR [ebp-0x57]
  413c86:	not    DWORD PTR ds:0xe61262b3
  413c8c:	daa    
  413c8d:	jmp    0xe3cc:0x8c822e3b
  413c94:	outs   dx,BYTE PTR ds:[esi]
  413c95:	(bad)  
  413c96:	cdq    
  413c97:	fisubr WORD PTR ds:[ebp-0xff08f2f]
  413c9e:	ret    
  413c9f:	mov    edi,0xda75a9bf
  413ca4:	pop    ds
  413ca5:	repz push ds
  413ca7:	pushf  
  413ca8:	sbb    BYTE PTR [edx+0x2b60b78c],0xaa
  413caf:	jg     0x413d26
  413cb1:	fmul   st,st(5)
  413cb3:	lds    edi,FWORD PTR [eax-0x487f3b83]
  413cb9:	and    bl,dh
  413cbb:	pop    edi
  413cbc:	hlt    
  413cbd:	loope  0x413c6f
  413cbf:	cs push 0x69
  413cc2:	cwde   
  413cc3:	sub    esi,DWORD PTR ds:0x1aa3ef55
  413cc9:	push   edi
  413cca:	push   ebp
  413ccb:	and    dl,BYTE PTR [ebx+eax*8-0x15918801]
  413cd2:	or     esi,DWORD PTR ds:[edx]
  413cd5:	(bad)  
  413cd7:	ins    BYTE PTR es:[edi],dx
  413cd8:	cmp    ah,0xb1
  413cdb:	inc    edi
  413cdc:	aam    0xfa
  413cde:	repz mov eax,ds:0x5c8dba0e
  413ce4:	mov    es,ecx
  413ce6:	lds    ebx,FWORD PTR ds:0xc1fba9eb
  413cec:	les    ecx,FWORD PTR [ecx+0x669d032]
  413cf2:	xchg   ebx,eax
  413cf3:	lea    edx,[edx]
  413cf5:	mov    ebp,0xfc3c01c8
  413cfa:	pop    ds
  413cfb:	push   ds
  413cfc:	cmovb  eax,DWORD PTR [ecx]
  413cff:	aas    
  413d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d01:	mov    dh,bh
  413d03:	adc    cl,BYTE PTR [ebx-0x1b]
  413d06:	cmp    DWORD PTR [edi+0x38],0x5a
  413d0a:	sub    eax,0x718c9371
  413d0f:	cli    
  413d10:	push   ebx
  413d11:	and    eax,DWORD PTR [esi]
  413d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d14:	sub    al,BYTE PTR [edx+eiz*4]
  413d17:	arpl   WORD PTR [esi],bp
  413d19:	cmp    bl,BYTE PTR [ebx+0x40]
  413d1c:	test   BYTE PTR ds:0x7233723,bl
  413d22:	scas   al,BYTE PTR es:[edi]
  413d23:	jmp    0x413d4a
  413d25:	ja     0x413cc1
  413d27:	and    BYTE PTR [ecx+0x1c],ah
  413d2a:	adc    esp,eax
  413d2c:	stc    
  413d2d:	mov    ebp,0xf2e5686e
  413d32:	cmp    eax,0xeaa2f577
  413d37:	into   
  413d38:	dec    esi
  413d39:	ss scas eax,DWORD PTR es:[edi]
  413d3b:	ds mov ebx,0x2409c0b
  413d41:	sub    BYTE PTR [eax],0x9f
  413d44:	sbb    eax,0xb7954058
  413d49:	out    dx,eax
  413d4a:	rcl    BYTE PTR [ecx-0x7a],0x5f
  413d4e:	cld    
  413d4f:	pop    eax
  413d50:	fst    DWORD PTR [eax+0x47b9df9]
  413d56:	dec    esp
  413d57:	jge    0x413ce8
  413d59:	adc    al,0xcb
  413d5b:	cmc    
  413d5c:	mov    dl,0xbf
  413d5e:	jmp    DWORD PTR [eax-0x55]
  413d61:	mul    BYTE PTR [edi-0x75]
  413d64:	shl    cl,1
  413d66:	pop    edx
  413d67:	repnz in eax,0x16
  413d6a:	lods   al,BYTE PTR ds:[esi]
  413d6b:	and    al,0xef
  413d6d:	sbb    eax,0xacb85829
  413d72:	test   ebp,edi
  413d74:	pop    esp
  413d75:	cmc    
  413d76:	mov    eax,ds:0x12f4f45d
  413d7b:	xchg   ebx,edx
  413d7d:	mov    ebp,eax
  413d7f:	scas   al,BYTE PTR es:[edi]
  413d80:	int3   
  413d81:	add    DWORD PTR [esi-0x1fefd037],esp
  413d87:	rcr    eax,cl
  413d89:	sub    BYTE PTR [edi+0x3b8755d9],dl
  413d8f:	mov    ebx,DWORD PTR [edi-0x36]
  413d92:	pop    edx
  413d93:	or     dl,ah
  413d95:	adc    al,BYTE PTR [ebp+0x71ff4b16]
  413d9b:	scas   eax,DWORD PTR es:[edi]
  413d9c:	push   ss
  413d9d:	iret   
  413d9e:	pop    edx
  413d9f:	fs and eax,0xfc27b34e
  413da5:	adc    DWORD PTR [ebx],ebx
  413da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413da8:	mov    dl,0xf5
  413daa:	mov    edi,0xfe0ae69e
  413daf:	cwde   
  413db0:	and    BYTE PTR [eax],dl
  413db2:	and    edx,DWORD PTR [ecx+0x3e]
  413db5:	les    edi,FWORD PTR [edi-0x70]
  413db8:	add    DWORD PTR [edx-0x7ca14321],ebp
  413dbe:	dec    eax
  413dbf:	pop    eax
  413dc0:	dec    edx
  413dc1:	jg     0x413e32
  413dc3:	sahf   
  413dc4:	sbb    al,0x53
  413dc6:	xchg   ecx,eax
  413dc7:	in     eax,0xb7
  413dc9:	jle    0x413d81
  413dcb:	add    BYTE PTR [ebp+0x5f5ae9f2],0x64
  413dd2:	(bad)  
  413dd3:	neg    BYTE PTR [edi]
  413dd5:	or     eax,0x2c1e8e4e
  413dda:	mov    eax,ds:0xfed6fa62
  413ddf:	call   0x39ba:0x20b2d29b
  413de6:	aam    0x95
  413de8:	cmp    eax,DWORD PTR ds:[eax+0x52886192]
  413def:	retf   0xc1c0
  413df2:	xor    ecx,DWORD PTR [edx-0x6b886baf]
  413df8:	inc    ecx
  413df9:	and    BYTE PTR [ecx],0x44
  413dfc:	outs   dx,BYTE PTR ds:[esi]
  413dfd:	and    edi,edi
  413dff:	rcr    esp,0xd7
  413e02:	and    DWORD PTR [esi+0x3b62fa81],edx
  413e08:	imul   ebx,DWORD PTR [edi+0x20],0x2940cf89
  413e0f:	mov    al,0x50
  413e11:	jmp    0x5105:0x67465a51
  413e18:	cdq    
  413e19:	fist   WORD PTR [ebx]
  413e1b:	cmp    BYTE PTR [edi],ah
  413e1d:	mov    esi,0xc0b8ce24
  413e22:	pop    edx
  413e23:	aaa    
  413e24:	dec    esp
  413e25:	or     DWORD PTR [edi-0x5bce449f],ebx
  413e2b:	call   DWORD PTR [esi+edi*4+0x18]
  413e2f:	orps   xmm0,XMMWORD PTR [ebx]
  413e32:	add    eax,0x60bf5978
  413e37:	dec    eax
  413e38:	outs   dx,BYTE PTR ds:[esi]
  413e39:	pusha  
  413e3a:	rol    edx,0x87
  413e3d:	(bad)  
  413e3f:	ds pop esi
  413e41:	xchg   edx,eax
  413e42:	pop    ss
  413e43:	sbb    al,0xa3
  413e45:	xchg   ebp,eax
  413e46:	fisttp DWORD PTR [ecx+0x74]
  413e49:	shl    DWORD PTR [edx-0x31],cl
  413e4c:	lea    edi,[esi-0x6c86e84b]
  413e52:	inc    ebp
  413e53:	mov    ch,BYTE PTR [eax-0x4]
  413e56:	mov    ?,WORD PTR [eax]
  413e58:	add    eax,0x53addad
  413e5d:	out    0xb7,eax
  413e5f:	fwait
  413e60:	jae    0x413e53
  413e62:	std    
  413e63:	xchg   ebx,eax
  413e64:	ror    cl,0x62
  413e67:	inc    ebp
  413e68:	sub    eax,0xeb2db637
  413e6d:	ror    dl,0xe8
  413e70:	(bad)  
  413e71:	mov    DWORD PTR [edx],esi
  413e73:	aaa    
  413e74:	push   DWORD PTR [ebx-0x31b12efc]
  413e7a:	and    ebx,ebp
  413e7c:	pop    eax
  413e7d:	cli    
  413e7e:	std    
  413e7f:	call   0x4f88:0x748854ba
  413e86:	pusha  
  413e87:	xchg   BYTE PTR [esi+0x1d],ch
  413e8a:	mov    ds:0x8a451d50,al
  413e8f:	psrlq  mm4,QWORD PTR [ebx]
  413e92:	push   0xffffffb1
  413e94:	sar    DWORD PTR [ecx+edi*8+0x1d05c032],cl
  413e9b:	fist   WORD PTR [ebx+esi*8-0x6e]
  413e9f:	not    BYTE PTR ds:0x2808008b
  413ea5:	int    0xd3
  413ea7:	in     eax,0xc6
  413ea9:	gs mov esp,0x8d962d3f
  413eaf:	jmp    0x413e3e
  413eb1:	jp     0x413ea1
  413eb3:	or     DWORD PTR [esi-0x3dc49b50],esi
  413eb9:	mov    dl,0x0
  413ebb:	call   0x29699f75
  413ec0:	jb     0x413f04
  413ec2:	push   cs
  413ec3:	cdq    
  413ec4:	pop    ebp
  413ec5:	sbb    eax,0xbf49b1c7
  413eca:	fcmovnu st,st(2)
  413ecc:	and    al,0x8f
  413ece:	or     DWORD PTR [ecx-0x796e8317],edx
  413ed4:	sub    ebx,DWORD PTR [edi+0x18e97980]
  413eda:	jns    0x413ec9
  413edc:	icebp  
  413edd:	adc    al,0x9d
  413edf:	and    dh,0x90
  413ee2:	adc    ah,BYTE PTR [edx+0x258a5b7]
  413ee8:	std    
  413ee9:	hlt    
  413eea:	je     0x413f43
  413eec:	jbe    0x413e8c
  413eee:	imul   eax,DWORD PTR [esi+0x21],0x50
  413ef2:	sub    ah,BYTE PTR [eax+0x6ed34004]
  413ef8:	in     al,0xc3
  413efa:	mov    DWORD PTR [edi+0x8],esp
  413efd:	mov    ax,0xc944
  413f01:	call   0xecfb84da
  413f06:	jnp    0x413ec0
  413f08:	add    ecx,DWORD PTR [edi+0x5c]
  413f0b:	inc    edi
  413f0c:	test   DWORD PTR [ebx+0x78],esp
  413f0f:	inc    ebp
  413f10:	pushf  
  413f11:	popa   
  413f12:	jb     0x413f11
  413f14:	inc    eax
  413f15:	in     al,dx
  413f16:	leave  
  413f17:	ja     0x413ee5
  413f19:	test   DWORD PTR [ebx-0x7d5eda44],ebx
  413f1f:	sub    bh,BYTE PTR [ebp+0xfc17a7a]
  413f25:	(bad)  
  413f26:	cmp    BYTE PTR [ebp+0x6e],ch
  413f29:	sub    ebp,DWORD PTR ds:0xc237ae79
  413f2f:	pusha  
  413f30:	and    BYTE PTR [ebp+0x3975659b],bl
  413f36:	sbb    edi,DWORD PTR [edi+eiz*1]
  413f39:	inc    edi
  413f3a:	scas   al,BYTE PTR es:[edi]
  413f3b:	mov    ecx,0x8ba67d0
  413f40:	es out dx,eax
  413f42:	(bad)
  413f45:	out    0x56,eax
  413f47:	push   esp
  413f48:	rcr    edx,1
  413f4a:	clc    
  413f4b:	addr16 clc 
  413f4d:	pop    ds
  413f4e:	mov    BYTE PTR [edx+0x64],ch
  413f51:	push   ecx
  413f52:	push   eax
  413f53:	mov    cs,ecx
  413f55:	ins    DWORD PTR es:[edi],dx
  413f56:	fcomp  DWORD PTR [eax+edi*8-0x47]
  413f5a:	imul   ecx,edx,0x5039b19b
  413f60:	add    bh,ch
  413f62:	dec    edx
  413f63:	test   eax,0x6aa97631
  413f68:	dec    esi
  413f69:	js     0x413f03
  413f6b:	xlat   BYTE PTR ds:[ebx]
  413f6c:	fisubr WORD PTR [eax+0x5364c6d5]
  413f72:	mov    dl,0x57
  413f74:	or     DWORD PTR [esi+0x1d37ab22],esp
  413f7a:	sbb    DWORD PTR [ebp-0x4009e411],ebx
  413f80:	cwde   
  413f81:	add    DWORD PTR [ebx-0x363b1533],esp
  413f87:	adc    BYTE PTR [esi-0x4a17667],0x3c
  413f8e:	and    ebp,0xdc26c634
  413f94:	inc    ebp
  413f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f96:	mov    ah,0xe7
  413f98:	and    BYTE PTR [edi-0x652edfaa],dl
  413f9e:	aad    0x23
  413fa0:	cwde   
  413fa1:	jl     0x413f9a
  413fa3:	cmc    
  413fa4:	cmp    BYTE PTR [ecx],ah
  413fa6:	loop   0x413f36
  413fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa9:	(bad)  
  413faa:	or     DWORD PTR [ecx-0x32400afe],edi
  413fb0:	pop    edi
  413fb1:	fild   QWORD PTR [ecx]
  413fb3:	cmp    DWORD PTR [edi],ecx
  413fb5:	pop    ds
  413fb6:	test   BYTE PTR [eax-0x20c0d80e],bh
  413fbc:	pop    esp
  413fbd:	data16 and ch,BYTE PTR [eax]
  413fc0:	dec    esp
  413fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc2:	xor    DWORD PTR [edx-0x10],ebp
  413fc5:	xchg   ebx,eax
  413fc6:	xchg   ebx,eax
  413fc7:	sbb    ecx,DWORD PTR [ecx+ebx*1]
  413fca:	sub    BYTE PTR [ebp+0x6965bc00],ah
  413fd0:	xor    edi,DWORD PTR [ebx+edi*8]
  413fd3:	mov    al,ds:0xe33431ad
  413fd8:	push   0x723fabc3
  413fdd:	pusha  
  413fde:	jbe    0x413fe7
  413fe0:	and    cl,cl
  413fe2:	retf   0x4e84
  413fe5:	xor    eax,0x77ee4bb5
  413fea:	imul   eax,DWORD PTR [edx-0x407af88a],0x37
  413ff1:	jmp    0x19011d9e
  413ff6:	cmp    BYTE PTR [eax],bl
  413ff8:	sub    cl,BYTE PTR [edi+eax*8+0x75e129a2]
  413fff:	dec    esi
  414000:	ja     0x413fd0
  414002:	mov    cl,0x9
  414004:	sub    DWORD PTR [edx+0x53],ebp
  414007:	fild   QWORD PTR [edi-0x48]
  41400a:	pop    eax
  41400b:	inc    edx
  41400c:	xchg   BYTE PTR [eax],bh
  41400e:	jle    0x413fbf
  414010:	retf   0x1585
  414013:	sbb    BYTE PTR [edi-0x4df76bbe],ah
  414019:	adc    ebx,ecx
  41401b:	mov    bl,0x69
  41401d:	out    dx,eax
  41401e:	push   edi
  41401f:	(bad)  [ebx+0x543d19cf]
  414025:	sbb    eax,0x6c4d966c
  41402a:	mov    DWORD PTR [ebx+0x1b],esp
  41402d:	test   BYTE PTR [ebx],al
  41402f:	and    ch,BYTE PTR [ebp+0x4ba63598]
  414035:	mov    ch,0x73
  414037:	jle    0x413fc3
  414039:	cmc    
  41403a:	ret    
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	mov    DWORD PTR [eiz*8-0x1e8bcae8],eax
  414043:	mov    edi,0x27f1fb20
  414048:	add    DWORD PTR [edi+0x6e],eax
  41404b:	mov    ch,0xe7
  41404d:	in     al,dx
  41404e:	je     0x414053
  414050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414051:	jge    0x41406e
  414053:	aas    
  414054:	bound  esi,QWORD PTR [eax+0x19c421b6]
  41405a:	jb     0x41403e
  41405c:	js     0x4140c2
  41405e:	nop
  41405f:	les    esp,FWORD PTR [ebp-0xe]
  414062:	out    dx,al
  414063:	fldenv [edi+0x2e73566b]
  414069:	push   es
  41406a:	or     BYTE PTR [ecx],bl
  41406c:	in     eax,0xf9
  41406e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41406f:	sahf   
  414070:	neg    DWORD PTR [edi+0x46205b9f]
  414076:	dec    esp
  414077:	gs xchg bl,bl
  41407a:	dec    esp
  41407b:	jl     0x4140c6
  41407d:	adc    al,0xa9
  41407f:	mov    eax,0x5d61ce8a
  414084:	leave  
  414085:	scas   eax,DWORD PTR es:[edi]
  414086:	sub    DWORD PTR [eax+esi*1],0x3a
  41408a:	rcr    BYTE PTR [edx+0x58110cb9],cl
  414090:	adc    DWORD PTR [esi+ebx*1],esi
  414093:	ds push edi
  414095:	into   
  414096:	nop
  414097:	xchg   ebx,eax
  414098:	xor    edx,ebx
  41409a:	adc    esi,DWORD PTR [ecx-0x6beeca8a]
  4140a0:	add    DWORD PTR [esi+0x6c],0xffffffdf
  4140a4:	xor    BYTE PTR [eax+ebx*8-0x3],dh
  4140a8:	push   es
  4140a9:	add    bh,BYTE PTR [eax+eiz*2-0x2d8657c6]
  4140b0:	mov    cl,0xd9
  4140b2:	ins    DWORD PTR es:[edi],dx
  4140b3:	test   eax,0xdaf329f3
  4140b8:	pop    ss
  4140b9:	xchg   esi,eax
  4140ba:	xchg   DWORD PTR [edi-0x7b],esi
  4140bd:	pop    esp
  4140be:	inc    ecx
  4140bf:	les    ebp,FWORD PTR [ebp+0x49b46361]
  4140c5:	cld    
  4140c6:	fisttp WORD PTR [ebx+0x60c22361]
  4140cc:	xchg   eax,ecx
  4140ce:	mov    esi,0xbcb2ebec
  4140d3:	dec    esp
  4140d4:	gs addr16 and eax,0x95ddf8f7
  4140db:	mov    ds:0x45c4ce81,eax
  4140e0:	leave  
  4140e1:	dec    ecx
  4140e2:	sbb    BYTE PTR [eax],dl
  4140e4:	push   edx
  4140e5:	xlat   BYTE PTR ds:[ebx]
  4140e6:	xchg   BYTE PTR [ecx],dl
  4140e8:	in     eax,dx
  4140e9:	pop    ebp
  4140ea:	dec    ebx
  4140eb:	mov    dl,0xd2
  4140ed:	add    BYTE PTR [esi-0x32],bl
  4140f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140f1:	mov    cs,WORD PTR ds:0xf12d7283
  4140f7:	shr    DWORD PTR [edx],0xb1
  4140fa:	mov    dh,0xc4
  4140fc:	neg    ecx
  4140fe:	fnstcw WORD PTR [edi-0x47]
  414101:	pop    ds
  414102:	adc    ecx,DWORD PTR [eax-0x5431c4a1]
  414108:	push   edx
  414109:	lods   al,BYTE PTR ds:[esi]
  41410a:	cwde   
  41410b:	jnp    0x4140ba
  41410d:	sbb    BYTE PTR [edx],0x79
  414110:	mov    DWORD PTR [eax+ecx*1+0x6a489ed5],esi
  414117:	and    DWORD PTR [edi],ebx
  414119:	leave  
  41411a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41411b:	mov    edi,DWORD PTR [edi+0x73]
  41411e:	push   ds
  41411f:	out    dx,al
  414120:	xor    eax,0xbb733bc0
  414125:	xor    ebx,ebp
  414127:	jmp    0xa9d0acc4
  41412c:	test   BYTE PTR [edi-0x5bc2925f],bl
  414132:	lods   al,BYTE PTR ds:[esi]
  414133:	std    
  414134:	xchg   BYTE PTR [esi],ah
  414136:	jmp    0x86c9bb0b
  41413b:	hlt    
  41413c:	arpl   di,bp
  41413e:	and    al,0x17
  414140:	sbb    eax,0xa9b70e53
  414145:	retf   
  414146:	fisubr WORD PTR [ebx-0x6d3337ba]
  41414c:	inc    ebp
  41414d:	sub    BYTE PTR [ebx-0x1d],bh
  414150:	and    BYTE PTR [edi],dl
  414152:	imul   esp,ecx,0xffffffbd
  414155:	fbstp  TBYTE PTR [ecx+eiz*8-0x2c]
  414159:	inc    ecx
  41415a:	test   al,0xd8
  41415c:	push   eax
  41415d:	daa    
  41415e:	add    bh,BYTE PTR [ebp-0x10b04f6c]
  414164:	lea    ecx,[ebp-0x4f]
  414167:	lods   al,BYTE PTR ds:[esi]
  414168:	bound  ecx,QWORD PTR [esi-0x515effb7]
  41416e:	and    ah,ah
  414170:	jo     0x4140f7
  414172:	cmp    eax,0x56456b6b
  414177:	mov    ebp,0x7ad90f24
  41417c:	cdq    
  41417d:	lahf   
  41417e:	push   cs
  41417f:	mov    ch,ah
  414181:	inc    edx
  414182:	(bad)  
  414183:	fs test al,0xd0
  414186:	in     eax,dx
  414187:	cmc    
  414188:	adc    ch,BYTE PTR [ebx-0x2df1cced]
  41418e:	popf   
  41418f:	test   BYTE PTR [esi+0x18356d1b],dh
  414195:	xor    DWORD PTR [edx+0x60c9517a],0x13
  41419c:	ja     0x4141db
  41419e:	cmp    DWORD PTR [ebx+0x47f5c8ab],esi
  4141a4:	cmp    DWORD PTR [edi+0x7e47432c],edx
  4141aa:	outs   dx,DWORD PTR ds:[esi]
  4141ab:	or     edi,DWORD PTR [ecx+edi*4]
  4141ae:	dec    edx
  4141af:	lea    ebx,[eax]
  4141b1:	inc    ebp
  4141b2:	cmc    
  4141b3:	push   esi
  4141b4:	call   0x6e37:0xeaf2200e
  4141bb:	shl    DWORD PTR ds:0xcfca485f,0x7c
  4141c2:	loopne 0x4141e6
  4141c4:	clc    
  4141c5:	push   ds
  4141c6:	adc    ebp,0x1d3f9290
  4141cc:	mov    edx,0xb1f454a4
  4141d1:	pop    ebx
  4141d2:	ja     0x414229
  4141d4:	xchg   ecx,eax
  4141d5:	cli    
  4141d6:	add    DWORD PTR [esp+eiz*2],eax
  4141d9:	mov    bh,BYTE PTR [ebx+0x24c538be]
  4141df:	ins    BYTE PTR es:[edi],dx
  4141e0:	xor    bl,BYTE PTR [eax-0x40]
  4141e3:	jo     0x414168
  4141e5:	jae    0x4141b4
  4141e7:	push   ss
  4141e8:	jb     0x414173
  4141ea:	sub    eax,eax
  4141ec:	imul   esi,DWORD PTR [esi+ebx*1-0x38],0xd
  4141f1:	not    ah
  4141f3:	jo     0x41425e
  4141f5:	imul   ebp,edi,0x1c
  4141f8:	fisttp DWORD PTR [ebx-0x10]
  4141fb:	dec    ebx
  4141fc:	sbb    BYTE PTR [edx],al
  4141fe:	aas    
  4141ff:	in     al,0x39
  414201:	cmp    eax,0x2445ee5d
  414206:	add    al,0xcc
  414208:	cmp    al,0x17
  41420a:	add    al,0xaa
  41420c:	jle    0x4141d6
  41420e:	test   eax,0xb9e7bb48
  414213:	(bad)  
  414214:	out    0x18,eax
  414216:	retf   
  414217:	xchg   edi,eax
  414218:	xor    BYTE PTR [esi+0x71648928],ch
  41421e:	and    dl,BYTE PTR [edi-0x1d]
  414221:	imul   edx,DWORD PTR [edi-0x23e8b8e],0xa8da9d8e
  41422b:	arpl   WORD PTR [eax],ax
  41422d:	iret   
  41422e:	or     al,0x65
  414230:	and    al,0xf2
  414232:	xor    BYTE PTR [esi-0x3ac7449b],0x5f
  414239:	inc    edx
  41423a:	test   bh,dh
  41423c:	or     ch,bl
  41423e:	dec    ecx
  41423f:	aas    
  414240:	add    cl,dl
  414242:	mov    edi,0xe70d341b
  414247:	cmc    
  414248:	(bad)  
  41424a:	test   DWORD PTR [esi-0x4f7c7ae4],esi
  414250:	ficom  WORD PTR [ebx-0x23]
  414253:	pop    ds
  414254:	mov    al,0xb0
  414256:	mov    DWORD PTR [esi+0x4a98bc1b],edi
  41425c:	push   edx
  41425d:	mov    esp,0x36597bc0
  414262:	dec    eax
  414263:	loope  0x4142db
  414265:	mov    bh,0xad
  414267:	add    DWORD PTR [edi],0x78
  41426a:	sub    eax,0x795a4222
  41426f:	in     eax,0xb1
  414271:	repnz push eax
  414273:	int3   
  414274:	retf   0x8284
  414277:	cmp    ah,BYTE PTR [esi+eax*8+0x403e92b8]
  41427e:	dec    edx
  41427f:	or     DWORD PTR [ecx-0x73],edi
  414282:	push   ds
  414283:	dec    ebx
  414284:	sbb    esp,ebx
  414286:	push   ebx
  414287:	jp     0x41423b
  414289:	jp     0x414218
  41428b:	mov    ds:0xd71612ec,al
  414290:	loop   0x4142ea
  414292:	jecxz  0x4142dd
  414294:	add    DWORD PTR [ebp-0x69],eax
  414297:	add    eax,DWORD PTR [ecx-0x4ea250f9]
  41429d:	pop    edx
  41429e:	or     DWORD PTR [edx],edx
  4142a0:	jmp    0x41431b
  4142a2:	fwait
  4142a3:	into   
  4142a4:	inc    eax
  4142a5:	cmp    DWORD PTR [ebx],esi
  4142a7:	push   ds
  4142a8:	(bad)  
  4142a9:	mov    esp,0x603937ea
  4142ae:	sbb    BYTE PTR [edx+edx*8],cl
  4142b1:	lea    ecx,[esi+0x332c1689]
  4142b7:	lods   al,BYTE PTR ds:[esi]
  4142b8:	jbe    0x414241
  4142ba:	mov    dl,0x6a
  4142bc:	vphaddbq ymm14,XMMWORD PTR [ebx]
  4142c1:	mov    ecx,0x43b7f621
  4142c6:	out    dx,eax
  4142c7:	out    dx,eax
  4142c8:	or     al,0x75
  4142ca:	sub    BYTE PTR [esi-0x2],ah
  4142cd:	in     al,0xcd
  4142cf:	arpl   WORD PTR [eax-0xc],ax
  4142d2:	dec    edx
  4142d3:	mul    BYTE PTR [esi+0x5d]
  4142d6:	dec    edi
  4142d7:	jb     0x4142f3
  4142d9:	lods   al,BYTE PTR ds:[esi]
  4142da:	sub    eax,0xb3420b2a
  4142df:	jle    0x41434c
  4142e1:	ret    0xfddb
  4142e4:	mov    cl,0xb
  4142e6:	fsubr  QWORD PTR cs:[eax-0x56ddddd6]
  4142ed:	call   0xe10f1b4e
  4142f2:	push   esi
  4142f3:	push   edi
  4142f4:	dec    esp
  4142f5:	leave  
  4142f6:	(bad)  
  4142f7:	jl     0x414376
  4142f9:	popa   
  4142fa:	(bad)  
  4142fb:	adc    al,dh
  4142fd:	and    ebx,DWORD PTR [edi-0x59]
  414300:	fwait
  414301:	repnz test DWORD PTR [eax],eax
  414304:	in     eax,dx
  414305:	mov    ebp,0x36ee1d01
  41430a:	inc    ecx
  41430b:	xchg   esp,eax
  41430c:	pop    ebp
  41430d:	pop    edx
  41430e:	mov    esp,0xe372cf38
  414313:	inc    edx
  414314:	ja     0x41432e
  414316:	mov    ?,WORD PTR [edx]
  414318:	add    BYTE PTR [edx-0x6e],cl
  41431b:	cmp    BYTE PTR [eax],ch
  41431d:	std    
  41431e:	(bad)  
  41431f:	fcomp  QWORD PTR [ebx]
  414321:	icebp  
  414322:	pop    ebp
  414323:	or     ebp,ecx
  414325:	jle    0x4142e1
  414327:	pop    esi
  414328:	mov    ah,BYTE PTR [esi+ebp*8+0x30c7e782]
  41432f:	fisub  WORD PTR [esi]
  414331:	fsub   DWORD PTR [edi-0x214e0cb2]
  414337:	outs   dx,BYTE PTR ds:[esi]
  414338:	scas   al,BYTE PTR es:[edi]
  414339:	inc    esi
  41433a:	jmp    0x7458:0xe0df6a5d
  414341:	leave  
  414342:	loope  0x414332
  414344:	data16 jbe 0x4143a9
  414347:	xlat   BYTE PTR ds:[ebx]
  414348:	lods   al,BYTE PTR ds:[esi]
  414349:	inc    esi
  41434a:	or     BYTE PTR gs:[ebx],ch
  41434d:	mov    ds:0x8375240f,al
  414352:	xchg   edi,eax
  414353:	popf   
  414354:	or     al,bh
  414356:	lods   al,BYTE PTR ds:[esi]
  414357:	jmp    DWORD PTR [ebx-0x3050ca15]
  41435d:	jmp    0x414363
  41435f:	(bad)  
  414360:	pop    ecx
  414361:	rcl    DWORD PTR [edx],0x38
  414364:	(bad)  
  414366:	imul   edi,DWORD PTR [edi+0x17],0x40
  41436a:	cmp    DWORD PTR fs:[ebx+0x607f0611],0xf6be16fe
  414375:	lahf   
  414376:	pusha  
  414377:	xor    esp,DWORD PTR [edx-0x32]
  41437a:	fiadd  WORD PTR [edi+ecx*1]
  41437d:	adc    DWORD PTR [eax+0x14],edx
  414380:	stos   BYTE PTR es:[edi],al
  414381:	add    eax,0x29180e5a
  414386:	pop    edi
  414387:	leave  
  414388:	mov    edx,0x5a015c1a
  41438d:	fwait
  41438e:	hlt    
  41438f:	mov    ecx,0x7b57a9f0
  414394:	je     0x4143b5
  414396:	lahf   
  414397:	sub    BYTE PTR [edi],0x90
  41439a:	repz fwait
  41439c:	mov    es,WORD PTR [ecx]
  41439e:	sub    BYTE PTR [ebx-0x6f],ah
  4143a1:	mov    dl,0xc
  4143a3:	xchg   edi,eax
  4143a4:	das    
  4143a5:	lods   al,BYTE PTR ds:[esi]
  4143a6:	push   0x46df0bc3
  4143ab:	xor    eax,DWORD PTR [ebp+0x5a2eea8a]
  4143b1:	mov    esi,DWORD PTR [ebx]
  4143b3:	(bad)  
  4143b4:	cmp    esi,DWORD PTR [edi-0x14]
  4143b7:	test   BYTE PTR [eax-0x6177f5ec],ah
  4143bd:	pop    edx
  4143be:	or     edi,DWORD PTR [ebx+0x2a]
  4143c1:	fwait
  4143c2:	(bad)  
  4143c4:	std    
  4143c5:	rcl    DWORD PTR [esi],1
  4143c7:	jno    0x4143f7
  4143c9:	jae    0x414352
  4143cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143cc:	xor    al,bh
  4143ce:	and    cl,al
  4143d0:	push   esp
  4143d1:	pop    es
  4143d2:	ret    0xacf0
  4143d5:	pop    es
  4143d6:	(bad)  
  4143d7:	or     al,0xe5
  4143d9:	dec    eax
  4143da:	mov    edi,0x39d9e6a6
  4143df:	imul   esi,eax,0x92f7d948
  4143e5:	pop    esi
  4143e6:	call   0xd39:0x5ab234ae
  4143ed:	add    BYTE PTR [edx+eiz*4+0x7c],0x76
  4143f2:	imul   ebp,DWORD PTR [esi+ebp*1+0x5b],0xffffffaa
  4143f7:	dec    edx
  4143f8:	sub    edx,DWORD PTR [ecx-0x22]
  4143fb:	ds sti 
  4143fd:	das    
  4143fe:	jl     0x41446e
  414400:	xchg   edi,eax
  414401:	rcl    esi,cl
  414403:	mov    ch,0xc4
  414405:	sbb    ebx,ebx
  414407:	mov    al,ds:0xcd178d4a
  41440c:	push   ss
  41440d:	(bad)  
  41440e:	jno    0x414412
  414410:	fidiv  DWORD PTR [esi-0x5e]
  414413:	xor    al,BYTE PTR [ebp-0x117acddb]
  414419:	aad    0x5f
  41441b:	cdq    
  41441c:	push   ebx
  41441d:	mov    al,0x3b
  41441f:	stc    
  414420:	sub    DWORD PTR [eax],edi
  414422:	xor    BYTE PTR [edx],bl
  414424:	pop    ecx
  414425:	or     al,0x7
  414427:	xchg   edx,eax
  414428:	std    
  414429:	mov    al,0xd0
  41442b:	es push ebx
  41442d:	pop    esp
  41442e:	icebp  
  41442f:	(bad)  
  414430:	test   al,0x8f
  414432:	xor    eax,0x18977c2
  414437:	aaa    
  414438:	mov    BYTE PTR [eax],0xfa
  41443b:	sub    BYTE PTR [ecx+0x6c],al
  41443e:	pop    edx
  41443f:	stos   BYTE PTR es:[edi],al
  414440:	sub    BYTE PTR [eax+0x7f],ah
  414443:	add    BYTE PTR [edi-0x1f],ah
  414446:	xchg   esi,eax
  414447:	mov    dh,BYTE PTR [edi-0x3b2d9807]
  41444d:	or     DWORD PTR [ebx-0x79],edx
  414450:	loop   0x414419
  414452:	not    DWORD PTR [esi-0x669e8b8f]
  414458:	sbb    ch,BYTE PTR [eax+0x45]
  41445b:	push   ecx
  41445c:	imul   ebp,DWORD PTR [eax],0x6
  41445f:	and    al,0x12
  414461:	mov    ah,0x3a
  414463:	cld    
  414464:	dec    edi
  414465:	push   esp
  414466:	xchg   edx,eax
  414467:	push   cs
  414468:	fst    QWORD PTR [ebx-0x48]
  41446b:	ss jl  0x414473
  41446e:	xor    DWORD PTR [eax+0x72],ecx
  414471:	pop    ss
  414472:	cld    
  414473:	enter  0xb492,0x95
  414477:	mov    ah,0x52
  414479:	mov    ecx,0xc23454a9
  41447e:	push   eax
  41447f:	mov    ecx,esi
  414481:	sbb    eax,0xafb7d111
  414486:	push   esi
  414487:	jb     0x41449c
  414489:	sar    BYTE PTR [ebp+0x278922c6],cl
  41448f:	shr    BYTE PTR [ebx+0x34b8d598],1
  414495:	jge    0x4144ad
  414497:	std    
  414498:	stos   DWORD PTR es:[edi],eax
  414499:	in     al,dx
  41449a:	sbb    eax,DWORD PTR [eax+edx*1+0x74]
  41449e:	ja     0x414506
  4144a0:	inc    edi
  4144a1:	xchg   ecx,eax
  4144a2:	push   edx
  4144a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144a4:	jmp    0x9522:0xf96cd7a7
  4144ab:	imul   eax,DWORD PTR [ebx+0x314d4adb],0xa7fb647f
  4144b5:	push   0x65
  4144b7:	ret    0xfdfa
  4144ba:	push   ds
  4144bb:	shl    esi,cl
  4144bd:	mov    cl,0xd0
  4144bf:	jg     0x41451b
  4144c1:	cdq    
  4144c2:	adc    ebp,DWORD PTR [esp+esi*2+0x5171ba09]
  4144c9:	stos   DWORD PTR es:[edi],eax
  4144ca:	in     al,dx
  4144cb:	mov    al,0x0
  4144cd:	cli    
  4144ce:	(bad)  
  4144cf:	or     bl,cl
  4144d1:	dec    ebp
  4144d2:	inc    ebx
  4144d3:	jb     0x41452f
  4144d5:	push   ecx
  4144d6:	or     al,0xce
  4144d8:	and    edx,0xbaae6a41
  4144de:	jmp    0x54207271
  4144e3:	jge    0x41448b
  4144e5:	mov    dl,BYTE PTR [ecx+0x6]
  4144e8:	push   cs
  4144e9:	clc    
  4144ea:	or     DWORD PTR [edi],ecx
  4144ec:	pusha  
  4144ed:	daa    
  4144ee:	iret   
  4144ef:	sub    eax,0x480c4f69
  4144f4:	cli    
  4144f5:	push   eax
  4144f6:	mov    ebx,0x3b7a4303
  4144fb:	cmp    BYTE PTR [eax+0x6cb3f3d9],0x73
  414502:	leave  
  414503:	jle    0x41451e
  414505:	jae    0x41456a
  414507:	cwde   
  414508:	jnp    0x414490
  41450a:	xchg   esi,eax
  41450b:	dec    ebp
  41450c:	fld    TBYTE PTR [eax+0x4a3a4ace]
  414512:	push   0x73f073e0
  414517:	mov    esp,0x562cf973
  41451c:	clc    
  41451d:	jmp    0x47e7:0x24e47417
  414524:	(bad)  
  414525:	push   ds
  414526:	xor    al,0x11
  414528:	mov    ebp,0xc17e4358
  41452d:	and    cl,cl
  41452f:	(bad)  
  414530:	fisttp QWORD PTR [esp+ecx*1-0x2e]
  414534:	in     eax,dx
  414535:	jmp    0x43d84a77
  41453a:	fisub  WORD PTR [eax+esi*1-0xe]
  41453e:	mov    ch,0x16
  414540:	and    bl,ch
  414542:	popa   
  414543:	jae    0x414525
  414545:	shr    ecx,0x4c
  414548:	and    al,0xc6
  41454a:	(bad)  
  41454b:	xor    BYTE PTR cs:[edx+0x7c],0x34
  414550:	ficomp WORD PTR [ebx]
  414552:	push   eax
  414553:	cmp    DWORD PTR [ebp-0x6013812d],0x4265f2a
  41455d:	mov    dl,0xa7
  41455f:	cmp    eax,edx
  414561:	scas   eax,DWORD PTR es:[edi]
  414562:	loope  0x414527
  414564:	jnp    0x414505
  414566:	mov    ebp,0x80ead269
  41456b:	lock mov al,ds:0x31ebb47f
  414571:	xchg   ebx,eax
  414572:	add    DWORD PTR [eax-0x48],esi
  414575:	jb     0x4145f5
  414577:	mov    al,0x2e
  414579:	sbb    bl,dh
  41457b:	shl    edx,cl
  41457d:	int3   
  41457e:	(bad)  
  41457f:	mov    cl,0x52
  414581:	dec    edx
  414582:	cli    
  414583:	or     DWORD PTR [eax+edi*4],edi
  414586:	xchg   ebx,eax
  414587:	js     0x4145a5
  414589:	push   es
  41458a:	sti    
  41458b:	inc    eax
  41458c:	or     ch,cl
  41458e:	pop    esp
  41458f:	mov    WORD PTR [eax+0x2b],?
  414592:	call   FWORD PTR [ebx+edx*1]
  414595:	stos   BYTE PTR es:[edi],al
  414596:	sub    ecx,0xffffffcb
  414599:	add    eax,0x98aae55f
  41459e:	sub    bl,dl
  4145a0:	dec    BYTE PTR [edx*2+0x6f0ce10a]
  4145a7:	sub    eax,0x2a40077
  4145ac:	into   
  4145ad:	(bad)  
  4145ae:	in     al,0xe
  4145b0:	adc    bh,ah
  4145b2:	adc    DWORD PTR [edi+0x3d],esi
  4145b5:	push   ebx
  4145b6:	mov    esi,0x6d7d0707
  4145bb:	cmp    edx,edx
  4145bd:	aad    0xfe
  4145bf:	mov    ah,0x22
  4145c1:	std    
  4145c2:	out    dx,eax
  4145c3:	std    
  4145c4:	pop    es
  4145c5:	cmp    al,0xc3
  4145c7:	sub    al,0x19
  4145c9:	adc    dl,BYTE PTR [esi-0x6be9b7d6]
  4145cf:	pop    esi
  4145d0:	(bad)  
  4145d1:	hlt    
  4145d2:	inc    esp
  4145d3:	mov    esp,0x22ba145d
  4145d8:	ror    BYTE PTR [ecx+0x17],cl
  4145db:	pop    esp
  4145dc:	jmp    0x414590
  4145de:	aam    0xd8
  4145e0:	dec    ebx
  4145e1:	and    bh,dl
  4145e3:	sbb    eax,0x68f42137
  4145e8:	(bad)  
  4145e9:	aad    0x4c
  4145eb:	push   esp
  4145ec:	sub    eax,0xe8223270
  4145f1:	lahf   
  4145f2:	arpl   WORD PTR [eax-0x6c],bx
  4145f5:	jmp    0x4145ee
  4145f7:	and    edx,edx
  4145f9:	scas   al,BYTE PTR es:[edi]
  4145fa:	inc    edi
  4145fb:	fsub   QWORD PTR [edx-0x37]
  4145fe:	inc    eax
  4145ff:	imul   edx,DWORD PTR [ebx-0x5],0xffffffd2
  414603:	mov    ch,0xd3
  414605:	mov    ch,BYTE PTR [edx+eiz*2-0xfb76f1b]
  41460c:	mov    dh,0xf7
  41460e:	sbb    al,0xb1
  414610:	retf   0x1161
  414613:	mov    ah,0x4b
  414615:	mov    al,0x39
  414617:	push   ss
  414618:	dec    eax
  414619:	inc    eax
  41461a:	mov    dl,BYTE PTR [edx]
  41461c:	ror    BYTE PTR [edx-0x38063f6e],1
  414622:	mov    ecx,0x44308d65
  414627:	or     esi,DWORD PTR ss:[edi-0x37]
  41462b:	outs   dx,DWORD PTR ds:[esi]
  41462c:	xor    ch,al
  41462e:	pop    ecx
  41462f:	mov    ebx,0x7d57c1d5
  414634:	call   DWORD PTR [ebp-0x3a4bf44b]
  41463a:	leave  
  41463b:	cmp    ch,BYTE PTR [eax]
  41463d:	inc    esi
  41463e:	nop
  41463f:	ret    0xea67
  414642:	dec    edx
  414643:	mov    WORD PTR [eax+ebx*4],es
  414646:	sub    DWORD PTR [esi],ebx
  414648:	fisttp QWORD PTR [ebx-0x43]
  41464b:	outs   dx,DWORD PTR ds:[esi]
  41464c:	stos   DWORD PTR es:[edi],eax
  41464d:	sbb    BYTE PTR ds:[bx+0x2ce0],al
  414653:	fstp   QWORD PTR [esi-0x6fd8e055]
  414659:	cmc    
  41465a:	rol    BYTE PTR [ebp-0x46],cl
  41465d:	dec    edi
  41465e:	dec    eax
  41465f:	push   esi
  414660:	daa    
  414661:	sti    
  414662:	mov    dl,0xbd
  414664:	xor    al,0xce
  414666:	cmp    eax,ecx
  414668:	cld    
  414669:	jae    0x4146d9
  41466b:	and    ah,BYTE PTR [eax-0x5d]
  41466e:	lods   al,BYTE PTR ds:[esi]
  41466f:	jg     0x4146a5
  414671:	push   ebx
  414672:	pop    ebp
  414673:	shl    ebp,0x44
  414676:	dec    ebx
  414677:	jo     0x4146c6
  414679:	stc    
  41467a:	cdq    
  41467b:	loope  0x414664
  41467d:	popf   
  41467e:	mov    ds:0x1d774bd7,eax
  414683:	mov    ah,0x77
  414685:	push   edi
  414686:	push   edi
  414687:	aas    
  414688:	mov    al,0xe7
  41468a:	sbb    ebx,DWORD PTR [ecx+edi*1]
  41468d:	div    BYTE PTR [edi+0x5031985c]
  414693:	mov    ds:0x2c7fc451,al
  414698:	ss jg  0x414681
  41469b:	push   esi
  41469c:	jns    0x414658
  41469e:	fdivr  DWORD PTR ds:0x22e70683
  4146a4:	and    DWORD PTR [ecx+0x3a],0x49
  4146a8:	jo     0x4146c4
  4146aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ab:	hlt    
  4146ac:	leave  
  4146ad:	stos   DWORD PTR es:[edi],eax
  4146ae:	test   al,0x87
  4146b0:	add    ecx,ebp
  4146b2:	mov    eax,ds:0x42d14941
  4146b7:	jb     0x4146a2
  4146b9:	inc    ecx
  4146ba:	stos   DWORD PTR es:[edi],eax
  4146bb:	pop    ebx
  4146bc:	into   
  4146bd:	(bad)  
  4146be:	or     edx,ebp
  4146c0:	out    dx,al
  4146c1:	mov    DWORD PTR [ebx-0x7e],edx
  4146c4:	sub    DWORD PTR [esi],esp
  4146c6:	add    al,0xc4
  4146c8:	ss xlat BYTE PTR gs:[ebx]
  4146cb:	or     DWORD PTR [eax],0xacb05dbe
  4146d1:	rol    DWORD PTR [ecx],1
  4146d3:	push   ebp
  4146d4:	sar    DWORD PTR [edi+ebx*2+0x42e07748],cl
  4146db:	pushf  
  4146dc:	aad    0xc8
  4146de:	add    bl,BYTE PTR [eax+0x689e8239]
  4146e4:	mov    ebx,ebx
  4146e6:	jecxz  0x41468b
  4146e8:	xlat   BYTE PTR ss:[ebx]
  4146ea:	stos   BYTE PTR es:[edi],al
  4146eb:	mov    cl,cl
  4146ed:	cmp    BYTE PTR [ebp-0x17],0xda
  4146f1:	pop    ds
  4146f2:	or     bl,dh
  4146f4:	pop    ecx
  4146f5:	jp     0x4146a3
  4146f7:	pusha  
  4146f8:	and    al,0x4c
  4146fa:	or     BYTE PTR [edi+0x16],al
  4146fd:	and    al,0xbc
  4146ff:	push   edi
  414700:	mov    ds:0x4df4c6e7,al
  414705:	outs   dx,BYTE PTR ds:[esi]
  414706:	mov    ds:0x952f376d,al
  41470b:	add    dh,ah
  41470d:	cli    
  41470e:	pop    esi
  41470f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414710:	and    eax,0xb34e11cc
  414715:	(bad)  
  414716:	not    BYTE PTR [eax]
  414718:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41471a:	dec    eax
  41471b:	jae    0x4146a5
  41471d:	pushf  
  41471e:	and    ebx,DWORD PTR [ecx]
  414720:	out    dx,eax
  414721:	mov    ch,0x96
  414723:	hlt    
  414724:	shl    DWORD PTR [eax-0xb75f910],0x4e
  41472b:	xchg   esp,eax
  41472c:	scas   eax,DWORD PTR es:[edi]
  41472d:	shl    BYTE PTR [edi],0x9a
  414730:	dec    ecx
  414731:	jo     0x4146f0
  414733:	push   edx
  414734:	sbb    ecx,DWORD PTR [edi]
  414736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414737:	xor    BYTE PTR [ebp-0x612b4db8],cl
  41473d:	jbe    0x41475b
  41473f:	rcl    bh,1
  414741:	add    DWORD PTR [esi-0x1a],edi
  414744:	retf   0x34a
  414747:	sar    esp,cl
  414749:	in     eax,dx
  41474a:	jnp    0x414721
  41474c:	dec    esi
  41474d:	mov    bl,BYTE PTR [ebp+0x27]
  414750:	stos   BYTE PTR es:[edi],al
  414751:	lahf   
  414752:	sub    edx,DWORD PTR [esi+0x4b9f28ff]
  414758:	mov    ecx,0x1321414c
  41475d:	push   esi
  41475e:	test   al,0xba
  414760:	pop    ss
  414761:	repnz addr16 mov eax,0xfbfe0a9c
  414768:	xor    eax,0xe631676e
  41476d:	cld    
  41476e:	stc    
  41476f:	inc    ebp
  414770:	in     al,dx
  414771:	hlt    
  414772:	mov    bh,0xbc
  414774:	lods   al,BYTE PTR ds:[esi]
  414775:	push   cs
  414776:	ret    
  414777:	sbb    eax,0x20d88a73
  41477c:	(bad)
  414780:	sbb    BYTE PTR [edi+edi*8+0x13],ch
  414784:	js     0x41473b
  414786:	xor    ebp,DWORD PTR [eax+0x46]
  414789:	test   edi,ebp
  41478b:	lods   al,BYTE PTR ds:[esi]
  41478c:	jne    0x4147ca
  41478e:	cmp    DWORD PTR [esi+0x4e],eax
  414791:	xchg   ecx,eax
  414792:	adc    ebx,DWORD PTR [ebp+eax*8+0x61]
  414796:	or     esp,DWORD PTR [eax]
  414798:	sbb    ebp,ebp
  41479a:	xchg   ebx,eax
  41479b:	pushf  
  41479c:	or     ch,BYTE PTR [esi+0x4c72fabf]
  4147a2:	ror    BYTE PTR [eax],cl
  4147a4:	sub    DWORD PTR [ebx],0xffffffb1
  4147a7:	jp     0x414771
  4147a9:	cld    
  4147aa:	inc    ebx
  4147ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ac:	jecxz  0x4147ab
  4147ae:	inc    edx
  4147af:	fisubr DWORD PTR [esi+ebp*1-0x3339c6e6]
  4147b6:	sbb    cl,0xd
  4147b9:	mov    bl,0xd2
  4147bb:	arpl   di,ax
  4147bd:	pop    ss
  4147be:	xor    eax,0x38d91d76
  4147c3:	(bad)  
  4147c4:	xor    eax,0x2a5922c8
  4147c9:	ja     0x4147b7
  4147cb:	mov    DWORD PTR [edx+esi*1],edx
  4147ce:	pop    esi
  4147cf:	mov    BYTE PTR [ebx+esi*2-0x4e00dbf6],cl
  4147d6:	fsubr  QWORD PTR [eax]
  4147d8:	cmp    al,0xa2
  4147da:	ja     0x414818
  4147dc:	mov    bl,0x29
  4147de:	ret    
  4147df:	inc    esp
  4147e0:	sub    bh,BYTE PTR [ebp+0x75]
  4147e3:	aaa    
  4147e4:	mov    bl,0x7a
  4147e6:	and    ecx,ecx
  4147e8:	aas    
  4147e9:	jno    0x4147ed
  4147eb:	mov    esp,0xaf35bba1
  4147f0:	add    cl,ch
  4147f2:	sbb    bl,BYTE PTR [eax*1+0x5a8af173]
  4147f9:	xchg   ebp,eax
  4147fa:	test   BYTE PTR [ecx+eiz*1],ch
  4147fd:	xlat   BYTE PTR ds:[ebx]
  4147fe:	lock xor eax,DWORD PTR [edi+0x3b]
  414802:	cmp    al,0x15
  414804:	int    0xec
  414806:	cdq    
  414807:	iret   
  414808:	fdiv   st(0),st
  41480a:	aas    
  41480b:	dec    ecx
  41480c:	push   esp
  41480d:	dec    esi
  41480e:	dec    esi
  41480f:	fwait
  414810:	outs   dx,DWORD PTR ds:[esi]
  414811:	push   ds
  414812:	or     BYTE PTR [esp+eax*8-0xa00be2e],al
  414819:	gs mov ebx,0xe45c1f7
  41481f:	lods   eax,DWORD PTR ds:[esi]
  414820:	push   0x64c503f4
  414825:	or     BYTE PTR [esi-0x5f115788],dl
  41482b:	sbb    cx,ax
  41482e:	test   eax,0x3d82dea1
  414833:	sbb    DWORD PTR [ebx+0x6d],ebp
  414836:	mov    bh,0x3a
  414838:	xchg   ecx,eax
  414839:	mov    ebx,0x34db0534
  41483e:	mov    bl,0x4d
  414840:	mov    ecx,0xe2f6311a
  414845:	push   edx
  414846:	or     al,0x22
  414848:	sub    al,BYTE PTR [ecx-0x49]
  41484b:	inc    edx
  41484c:	cmc    
  41484d:	inc    eax
  41484e:	jg     0x414808
  414850:	jmp    0xdf47b8a5
  414855:	push   ss
  414856:	and    al,0x23
  414858:	je     0x4148a6
  41485a:	mov    bh,ah
  41485c:	inc    ecx
  41485d:	jl     0x4147fa
  41485f:	sub    ch,dl
  414861:	fisttp QWORD PTR [edi+ebp*4-0x6e051295]
  414868:	not    DWORD PTR [ecx+0x7f]
  41486b:	and    BYTE PTR [ecx-0x67],0x79
  41486f:	cmp    esp,ecx
  414871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414872:	dec    ebp
  414873:	mov    gs,WORD PTR [edx]
  414875:	or     eax,0x84957d9f
  41487a:	cmp    BYTE PTR [ebx],cl
  41487c:	or     ebp,edx
  41487e:	ror    DWORD PTR [edx-0x7bfb731a],0x7
  414885:	cdq    
  414886:	cli    
  414887:	fild   DWORD PTR [ecx+0x4ce36df0]
  41488d:	pop    ecx
  41488e:	sbb    bh,BYTE PTR [edi+0x2597d5e7]
  414894:	push   es
  414895:	fs jno 0x4148f2
  414898:	adc    dl,BYTE PTR [ebp-0x16]
  41489b:	pop    ebp
  41489c:	out    0xef,al
  41489e:	pop    es
  41489f:	jp     0x4148a5
  4148a1:	dec    ecx
  4148a2:	bnd jnp 0x414910
  4148a5:	sub    esp,ecx
  4148a7:	xchg   esp,eax
  4148a8:	fld    DWORD PTR [ebx+0x3]
  4148ab:	xlat   BYTE PTR ds:[ebx]
  4148ac:	popa   
  4148ad:	fwait
  4148ae:	popa   
  4148af:	imul   BYTE PTR [edx+0x40]
  4148b2:	add    eax,0x558bf693
  4148b7:	or     BYTE PTR [ebx],dh
  4148b9:	rol    BYTE PTR [ebx],1
  4148bb:	(bad)  
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x7031d137
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x49c1fa25],0xfffffff3
  414952:	mov    ch,0xd5
  414954:	mov    bh,0xb4
  414956:	xchg   DWORD PTR [eax+0x5e],eax
  414959:	fisttp WORD PTR [eax]
  41495b:	icebp  
  41495c:	or     al,0xf9
  41495e:	jo     0x4148e0
  414960:	outs   dx,DWORD PTR ds:[esi]
  414961:	cmc    
  414962:	or     dh,dh
  414964:	or     esi,DWORD PTR [edi]
  414966:	push   ebp
  414967:	push   cs
  414968:	add    eax,0x8626e1c2
  41496d:	xchg   ebp,eax
  41496e:	ss mov edx,0x6aad520e
  414974:	addr16 idiv bl
  414977:	xor    al,0xac
  414979:	lock and al,0x58
  41497c:	push   esi
  41497e:	and    bh,bl
  414980:	xchg   edx,eax
  414981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414982:	mov    bl,0x12
  414984:	mov    ebx,0xf06af04a
  414989:	fidiv  WORD PTR [esi+0x28c3859f]
  41498f:	ins    BYTE PTR es:[edi],dx
  414990:	out    dx,eax
  414991:	shl    ecx,0xd6
  414994:	inc    edi
  414995:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414997:	(bad)  
  414998:	(bad)  
  41499a:	cmp    DWORD PTR [edx],ebx
  41499c:	inc    esp
  41499d:	push   esp
  41499e:	push   DWORD PTR cs:[edi]
  4149a1:	push   cs
  4149a2:	jg     0x4149c3
  4149a4:	rcr    ch,1
  4149a6:	pop    ecx
  4149a7:	jl     0x41496f
  4149a9:	cwde   
  4149aa:	pop    ecx
  4149ab:	and    dl,BYTE PTR [eax]
  4149ad:	fs dec ebx
  4149af:	pop    esp
  4149b0:	popf   
  4149b1:	jno    0x414a22
  4149b3:	(bad)  
  4149b4:	xor    al,0xec
  4149b6:	fld    TBYTE PTR [ecx-0x2b]
  4149b9:	pusha  
  4149ba:	into   
  4149bb:	mov    eax,ds:0xb0ea5e2
  4149c0:	addr16 mov edi,0xc569b347
  4149c6:	mov    eax,ds:0x4904b233
  4149cb:	gs jg  0x4149bf
  4149ce:	xchg   edi,eax
  4149cf:	sub    edx,0xc88b4f9c
  4149d5:	rcl    DWORD PTR [esi+ebp*8],0xcb
  4149d9:	pop    ebx
  4149da:	lahf   
  4149db:	dec    BYTE PTR [edx-0x3434d911]
  4149e1:	fisubr DWORD PTR [ebp+ecx*4-0x24]
  4149e5:	mov    es,WORD PTR ds:[ebp-0x40]
  4149e9:	jmp    0xe51:0x749c8bef
  4149f0:	xor    BYTE PTR [edi+0x7b6f65e6],dh
  4149f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f7:	mov    DWORD PTR [esi+edi*1],edi
  4149fa:	leave  
  4149fb:	dec    esp
  4149fc:	jno    0x414a76
  4149fe:	pop    eax
  4149ff:	outs   dx,BYTE PTR ds:[esi]
  414a00:	mov    DWORD PTR [ecx],0x373fa983
  414a06:	jae    0x4149e6
  414a08:	and    esp,esp
  414a0a:	sbb    eax,0x994f8b59
  414a0f:	or     eax,0x4517f9b1
  414a14:	std    
  414a15:	(bad)  
  414a16:	adc    dl,dl
  414a18:	inc    ebx
  414a19:	adc    BYTE PTR [eax+eax*1],dh
  414a1c:	xchg   ah,bl
  414a1e:	popf   
  414a1f:	stos   BYTE PTR es:[edi],al
  414a20:	ja     0x4149bb
  414a22:	loop   0x4149e0
  414a24:	cs dec ecx
  414a26:	mov    eax,ds:0xe03979bc
  414a2b:	into   
  414a2c:	fidivr WORD PTR fs:[ebx]
  414a2f:	fcomi  st,st(0)
  414a31:	(bad)  
  414a32:	jae    0x414a58
  414a34:	iret   
  414a35:	mov    ah,dh
  414a37:	mov    bh,0x58
  414a39:	cs pop ss
  414a3b:	jb     0x414a24
  414a3d:	(bad)  
  414a3e:	(bad)  
  414a40:	out    dx,al
  414a41:	mov    ebp,0xf27f87cb
  414a46:	xchg   ebp,eax
  414a47:	mov    esp,0x5a4094ba
  414a4c:	out    dx,eax
  414a4d:	aas    
  414a4e:	dec    eax
  414a4f:	xor    eax,0xfa57948
  414a54:	iret   
  414a55:	repnz inc ebp
  414a57:	xchg   ecx,eax
  414a58:	inc    edi
  414a59:	std    
  414a5a:	adc    DWORD PTR ds:0xa5ba545b,esi
  414a60:	adc    eax,0x48d47a29
  414a65:	or     BYTE PTR ds:0x8725e292,bh
  414a6b:	dec    edx
  414a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a6d:	aam    0xd9
  414a6f:	in     eax,0xf8
  414a71:	je     0x414a8f
  414a73:	out    dx,al
  414a74:	add    eax,edi
  414a76:	adc    cl,BYTE PTR [edi]
  414a78:	int3   
  414a79:	inc    ebx
  414a7a:	sbb    al,0x99
  414a7c:	out    0x18,al
  414a7e:	aam    0xfa
  414a80:	call   0x911:0x2f11ce4a
  414a87:	fild   WORD PTR fs:[ecx]
  414a8a:	ss jbe 0x414a65
  414a8d:	out    dx,eax
  414a8e:	cdq    
  414a8f:	xor    esp,ecx
  414a91:	push   ecx
  414a92:	repz arpl WORD PTR [esi],si
  414a95:	bnd jmp 0x414ad9
  414a98:	or     BYTE PTR [edi+esi*1-0x24],dl
  414a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9d:	bound  eax,QWORD PTR [edi-0x357dba0e]
  414aa3:	scas   eax,DWORD PTR es:[edi]
  414aa4:	xchg   DWORD PTR [eax-0x23a27fbc],ecx
  414aaa:	add    dh,dh
  414aac:	in     al,0xc
  414aae:	xchg   ecx,eax
  414aaf:	adc    al,0x5a
  414ab1:	(bad)  
  414ab2:	scas   al,BYTE PTR es:[edi]
  414ab3:	inc    ebp
  414ab4:	fcomp  DWORD PTR [esi]
  414ab6:	inc    esi
  414ab7:	cmp    ebp,DWORD PTR [esi]
  414ab9:	out    dx,eax
  414aba:	inc    esi
  414abb:	arpl   cx,bx
  414abd:	scas   al,BYTE PTR es:[edi]
  414abe:	ins    BYTE PTR es:[edi],dx
  414abf:	xor    dh,BYTE PTR [esi]
  414ac1:	(bad)  
  414ac2:	je     0x414b39
  414ac4:	fdiv   DWORD PTR [ecx+ebp*4-0x7bff6759]
  414acb:	push   eax
  414acc:	fadd   QWORD PTR [edi+0x1]
  414acf:	push   es
  414ad0:	jno    0x414ae0
  414ad2:	imul   dh
  414ad4:	push   ds
  414ad5:	pop    esi
  414ad6:	leave  
  414ad7:	mov    ch,bh
  414ad9:	mov    bl,0x3c
  414adb:	jne    0x414ad7
  414add:	sbb    DWORD PTR [edx-0x10047ec3],eax
  414ae3:	pop    ebx
  414ae4:	fistp  WORD PTR [eax-0x54]
  414ae7:	xchg   esp,eax
  414ae8:	sub    eax,DWORD PTR [edi]
  414aea:	xor    al,0x2b
  414aec:	push   ds
  414aed:	xchg   edi,eax
  414aee:	dec    ebx
  414aef:	sti    
  414af0:	scas   eax,DWORD PTR es:[edi]
  414af1:	loope  0x414a8e
  414af3:	push   edi
  414af4:	push   esi
  414af5:	and    DWORD PTR ds:[esi+ebp*1-0x19],ebx
  414afa:	pusha  
  414afb:	jns    0x414b4a
  414afd:	ss jg  0x414b51
  414b00:	and    ecx,0x2b26e781
  414b06:	test   eax,0x370630c2
  414b0b:	icebp  
  414b0c:	xor    eax,ecx
  414b0e:	jle    0x414b28
  414b10:	jae    0x414b4c
  414b12:	mov    ecx,0xdba1619a
  414b17:	inc    esi
  414b18:	xchg   edx,eax
  414b19:	push   ebp
  414b1a:	cli    
  414b1b:	leave  
  414b1c:	xchg   esi,eax
  414b1d:	stc    
  414b1e:	jne    0x414b5d
  414b20:	aaa    
  414b21:	pop    ss
  414b22:	xchg   esi,eax
  414b23:	xchg   DWORD PTR [edi],esp
  414b25:	sbb    eax,ebp
  414b27:	sub    edx,DWORD PTR [eax+0x6773d0c9]
  414b2d:	into   
  414b2e:	xchg   esi,eax
  414b2f:	xor    DWORD PTR [ecx+0x923e3d2],0x26f3f
  414b39:	int    0x3e
  414b3b:	repz xchg ebx,eax
  414b3d:	xor    cl,BYTE PTR [esp+ecx*1]
  414b40:	dec    edi
  414b41:	arpl   WORD PTR [ebp+0x474d1ac],bx
  414b47:	and    al,BYTE PTR [ebp+0x30]
  414b4a:	ds cwde 
  414b4c:	ins    DWORD PTR es:[edi],dx
  414b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b4e:	scas   eax,DWORD PTR es:[edi]
  414b4f:	mov    ch,0xc8
  414b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b52:	ins    BYTE PTR es:[edi],dx
  414b53:	sahf   
  414b54:	jmp    0x414b66
  414b56:	xchg   BYTE PTR [ebx+edi*2+0x60],bl
  414b5a:	repz jo 0x414b7f
  414b5d:	std    
  414b5e:	push   edx
  414b5f:	retf   
  414b60:	cs mov esp,0xcd65a0d0
  414b66:	or     eax,0x716712ca
  414b6b:	cld    
  414b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6d:	stc    
  414b6e:	(bad)  
  414b6f:	je     0x414ba6
  414b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b72:	test   al,0xcc
  414b74:	jmp    0x5e670632
  414b79:	pop    esp
  414b7a:	(bad)  
  414b7b:	bound  ecx,QWORD PTR [eax+0x33]
  414b7e:	jb     0x414bf3
  414b80:	icebp  
  414b81:	or     al,0x32
  414b83:	jns    0x414b97
  414b85:	outs   dx,BYTE PTR ds:[esi]
  414b86:	cmp    ebx,esp
  414b88:	(bad)  
  414b89:	sbb    esp,DWORD PTR [edi+eax*1]
  414b8c:	aam    0x79
  414b8e:	mov    BYTE PTR [edi+0x3f1f300b],dl
  414b94:	dec    esp
  414b95:	nop
  414b96:	outs   dx,BYTE PTR ds:[esi]
  414b97:	jle    0x414b8a
  414b99:	sub    BYTE PTR ds:0x3e05b230,ch
  414b9f:	dec    ecx
  414ba0:	xor    ebx,DWORD PTR [ebx-0x3f]
  414ba3:	sahf   
  414ba4:	mov    edx,0x59d14a1c
  414ba9:	retf   
  414baa:	(bad)  
  414bab:	jb     0x414bf9
  414bad:	fwait
  414bae:	pop    es
  414baf:	push   ecx
  414bb0:	pop    es
  414bb1:	test   DWORD PTR [esi+0x24],0x8de90e64
  414bb8:	push   edi
  414bb9:	stos   BYTE PTR es:[edi],al
  414bba:	mov    dh,0x68
  414bbc:	lock loopne 0x414be3
  414bbf:	xchg   ebp,eax
  414bc0:	clc    
  414bc1:	inc    edx
  414bc2:	mov    bh,0xe4
  414bc4:	into   
  414bc5:	pop    edx
  414bc6:	loope  0x414b56
  414bc8:	jle    0x414bd2
  414bca:	dec    ecx
  414bcb:	lods   al,BYTE PTR ds:[esi]
  414bcc:	clc    
  414bcd:	shl    DWORD PTR [edx],1
  414bcf:	in     eax,0x57
  414bd1:	push   ecx
  414bd2:	stos   BYTE PTR es:[edi],al
  414bd3:	fs mov dh,0x6b
  414bd6:	(bad)  
  414bd8:	inc    eax
  414bd9:	add    BYTE PTR [edx],dl
  414bdb:	mov    dh,BYTE PTR [ebp+0x4]
  414bde:	arpl   WORD PTR [edx],di
  414be0:	les    edi,FWORD PTR [esi+ebp*4+0x4de75f5e]
  414be7:	sbb    al,0xb9
  414be9:	sbb    eax,0xdf2f334a
  414bee:	and    ecx,DWORD PTR [esi]
  414bf0:	sub    BYTE PTR [eax-0xde4b140],al
  414bf6:	popf   
  414bf7:	mov    esi,0x50d16682
  414bfc:	in     al,dx
  414bfd:	xchg   DWORD PTR [esp+ebx*4-0x73],ebx
  414c01:	in     al,dx
  414c02:	adc    eax,0x75a3736e
  414c07:	sbb    BYTE PTR [esi-0x748f632d],ch
  414c0d:	js     0x414c71
  414c0f:	push   ebx
  414c10:	jg     0x414c8c
  414c12:	loopne 0x414c2e
  414c14:	sub    esi,DWORD PTR [edi+0x21]
  414c17:	add    BYTE PTR [ebx-0x68],cl
  414c1a:	(bad)  
  414c1b:	pop    ss
  414c1c:	xchg   edi,eax
  414c1d:	adc    DWORD PTR [ebp-0x2d181400],0x25
  414c24:	or     edi,0x10
  414c27:	mov    edx,0xbe7a46fd
  414c2c:	and    BYTE PTR [ebx+eiz*2],bl
  414c2f:	ror    DWORD PTR [esi+0x2e],1
  414c32:	adc    eax,0xe2e90b5
  414c37:	test   al,0x80
  414c39:	sub    eax,0x4f4b5543
  414c3e:	into   
  414c3f:	push   es
  414c40:	out    dx,al
  414c41:	inc    ebp
  414c42:	in     al,0xc9
  414c44:	add    ah,BYTE PTR [edx-0x65cc1715]
  414c4a:	and    bh,bl
  414c4c:	pop    eax
  414c4d:	push   es
  414c4e:	inc    edi
  414c4f:	jg     0x414c84
  414c51:	popa   
  414c52:	ror    BYTE PTR [ebp-0x30],1
  414c55:	jle    0x414cb2
  414c57:	or     eax,0x289efca8
  414c5c:	(bad)  
  414c5d:	in     al,dx
  414c5e:	in     eax,0x4b
  414c60:	push   edx
  414c61:	in     eax,dx
  414c62:	test   bl,cl
  414c64:	adc    ebx,DWORD PTR [edx+0x428af7f4]
  414c6a:	test   DWORD PTR ds:0xf3742c89,0x3d0d416c
  414c74:	loope  0x414c53
  414c76:	rol    BYTE PTR [edx-0x294d1e6a],1
  414c7c:	mov    ebx,0x642f5b4c
  414c81:	cdq    
  414c82:	jp     0x414cba
  414c84:	mov    al,ds:0xc74b2c91
  414c89:	aad    0xff
  414c8b:	add    al,0xcb
  414c8d:	mov    BYTE PTR [ecx],ch
  414c8f:	jge    0x414cef
  414c91:	sbb    dh,BYTE PTR [edi+0x7a4e0d69]
  414c97:	mov    al,ds:0x4b60b37f
  414c9c:	cmp    BYTE PTR [edi+eiz*8-0x7a82c0e4],ah
  414ca3:	and    DWORD PTR cs:[esi-0x4f12896c],eax
  414caa:	loope  0x414d1f
  414cac:	addr16 xor al,0xdd
  414caf:	dec    edx
  414cb0:	pop    es
  414cb1:	mov    esp,0x95a7ffba
  414cb6:	jne    0x414c3f
  414cb8:	lahf   
  414cb9:	push   0x2d0330af
  414cbe:	sbb    bh,dh
  414cc0:	push   cs
  414cc1:	xchg   esp,eax
  414cc2:	mov    ch,0xfb
  414cc4:	(bad)  
  414cc5:	or     al,0x26
  414cc7:	jo     0x414cc8
  414cc9:	mov    ch,0xc7
  414ccb:	cli    
  414ccc:	cmc    
  414ccd:	xor    bl,bh
  414ccf:	dec    edx
  414cd0:	iret   
  414cd1:	adc    ecx,DWORD PTR [ecx+0x6c271aae]
  414cd7:	xor    al,BYTE PTR [ecx+0x74e033a0]
  414cdd:	sub    ah,BYTE PTR [edx]
  414cdf:	(bad)  
  414ce0:	xchg   edx,eax
  414ce1:	jno    0x414d5c
  414ce3:	adc    DWORD PTR [ebx+0x664eb34f],esp
  414ce9:	fimul  DWORD PTR [edx]
  414ceb:	adc    al,0xae
  414ced:	btr    edx,0x92
  414cf1:	aam    0x0
  414cf3:	icebp  
  414cf4:	add    eax,0xb34052a0
  414cf9:	dec    edx
  414cfa:	ss sub al,0x40
  414cfd:	and    BYTE PTR [ecx],0x3c
  414d00:	out    0x58,eax
  414d02:	xchg   al,bl
  414d04:	in     al,dx
  414d05:	pop    ebp
  414d06:	cmc    
  414d07:	cmp    al,0xf4
  414d0a:	retf   0xc352
  414d0d:	in     al,dx
  414d0e:	jnp    0x414d6f
  414d10:	mov    bh,BYTE PTR [edi-0xfb67db]
  414d16:	mov    DWORD PTR [edx+0x75591ef4],ebp
  414d1c:	add    dl,bh
  414d1e:	pop    ecx
  414d1f:	add    ah,bh
  414d21:	dec    esp
  414d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d23:	or     dh,BYTE PTR [edi]
  414d25:	and    eax,ebp
  414d27:	mov    dh,0xa9
  414d29:	cmp    eax,esi
  414d2b:	loop   0x414cf0
  414d2d:	sub    DWORD PTR [esi+0x5736e0ba],edx
  414d33:	or     BYTE PTR [ebx],0x3b
  414d36:	jge    0x414d51
  414d38:	pop    ebp
  414d39:	sbb    eax,0xc87a3731
  414d3e:	(bad)  
  414d40:	jb     0x414d13
  414d42:	popf   
  414d43:	pop    ss
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	xchg   ebx,eax
  414d46:	adc    al,0x5d
  414d48:	dec    esp
  414d49:	sbb    al,0xc7
  414d4b:	enter  0xd18b,0x85
  414d4f:	pusha  
  414d50:	cdq    
  414d51:	push   0x10
  414d53:	outs   dx,DWORD PTR ds:[esi]
  414d54:	in     al,0x24
  414d56:	inc    edx
  414d57:	call   0xaf4559b8
  414d5c:	push   ds
  414d5d:	dec    esp
  414d5e:	and    eax,0x580cc83
  414d63:	pop    eax
  414d64:	jl     0x414cff
  414d66:	(bad)  
  414d67:	fsubr  DWORD PTR [ebp-0x30]
  414d6a:	sub    eax,0x3ab11388
  414d6f:	xor    ebx,DWORD PTR [edi]
  414d71:	sbb    ebx,DWORD PTR [eax+0x50]
  414d74:	call   0x1fb:0x7fc8eb04
  414d7b:	out    dx,al
  414d7c:	sar    DWORD PTR [edx+0x68],cl
  414d7f:	cwde   
  414d80:	jmp    FWORD PTR [ecx+esi*1+0x406775b4]
  414d87:	jmp    0x414d38
  414d89:	xchg   esp,eax
  414d8a:	and    al,0x52
  414d8c:	pop    ecx
  414d8d:	jb     0x414d3b
  414d8f:	outs   dx,BYTE PTR ds:[esi]
  414d90:	xchg   BYTE PTR [ebx],dh
  414d92:	ror    DWORD PTR [edi],cl
  414d94:	ret    
  414d95:	shl    DWORD PTR [ebx+0x307af113],cl
  414d9b:	outs   dx,DWORD PTR ds:[esi]
  414d9c:	cmp    cl,dl
  414d9e:	adc    BYTE PTR [ebx],bh
  414da0:	icebp  
  414da1:	ja     0x414d32
  414da3:	popa   
  414da4:	jl     0x414d5e
  414da6:	rcr    DWORD PTR [ebp+0x6887d905],cl
  414dac:	in     eax,0xf1
  414dae:	mov    dl,0x22
  414db0:	push   ecx
  414db1:	retf   
  414db2:	mov    ebp,0xaabc52c6
  414db7:	dec    ah
  414db9:	int3   
  414dba:	loope  0x414d7a
  414dbc:	shl    dh,1
  414dbe:	add    ch,BYTE PTR [ebp-0x26]
  414dc1:	pusha  
  414dc2:	add    eax,0x2835660
  414dc7:	lods   al,BYTE PTR ds:[esi]
  414dc8:	repnz cmp DWORD PTR [eax+0x59],0xffffff88
  414dcd:	sbb    al,0x34
  414dcf:	icebp  
  414dd0:	(bad)  [ecx+0x27]
  414dd3:	xchg   ebx,eax
  414dd4:	fist   DWORD PTR [esi-0x58]
  414dd7:	int    0x8e
  414dd9:	sbb    DWORD PTR [eax],esi
  414ddb:	mov    ecx,0xf2558294
  414de0:	push   eax
  414de1:	xchg   edx,eax
  414de2:	mov    ds:0x11d63bc1,al
  414de7:	fadd   DWORD PTR [eax+0x3714d6c7]
  414ded:	pop    es
  414dee:	sti    
  414def:	xchg   edi,eax
  414df0:	push   ds
  414df1:	cdq    
  414df2:	jns    0x414d90
  414df4:	loopne 0x414d8c
  414df6:	ret    0x32f3
  414df9:	(bad)  
  414dfa:	enter  0x41ea,0x24
  414dfe:	dec    DWORD PTR [ecx-0x716cb9e0]
  414e04:	cwde   
  414e05:	aaa    
  414e06:	in     al,dx
  414e07:	mov    edx,0xb072026f
  414e0c:	add    al,0xa6
  414e0e:	aaa    
  414e0f:	push   ds
  414e10:	add    BYTE PTR [ebx],0x16
  414e13:	mov    ecx,DWORD PTR [eax-0x34]
  414e16:	inc    esi
  414e17:	(bad)
  414e1a:	pop    ebx
  414e1b:	out    0xa,eax
  414e1d:	cmp    dl,BYTE PTR [eax+ebx*1+0x63]
  414e21:	fisub  DWORD PTR ds:0xcc3fd3ad
  414e27:	jmp    0xc8cb:0x4294c3c0
  414e2e:	ss and eax,0xdfcaa590
  414e34:	cmp    bh,cl
  414e36:	pushf  
  414e37:	pushf  
  414e38:	aaa    
  414e39:	iret   
  414e3a:	push   0x4281549e
  414e3f:	jbe    0x414e06
  414e41:	and    bh,ch
  414e43:	mov    ecx,0x451dd8ab
  414e48:	xchg   ecx,eax
  414e49:	mov    dh,0xda
  414e4b:	mov    esi,0xb471455f
  414e50:	js     0x414e92
  414e52:	neg    ebx
  414e54:	fiadd  DWORD PTR [edi+0x3e3b07b]
  414e5a:	jp     0x414ec3
  414e5c:	into   
  414e5d:	cli    
  414e5e:	push   cs
  414e5f:	retf   0x73f4
  414e62:	hlt    
  414e63:	xor    BYTE PTR [eax-0x251e3591],bh
  414e69:	je     0x414e22
  414e6b:	dec    ecx
  414e6c:	jle    0x414e59
  414e6e:	push   eax
  414e6f:	xchg   ecx,eax
  414e70:	scas   eax,DWORD PTR es:[edi]
  414e71:	jno    0x414ee7
  414e73:	jb     0x414e5c
  414e75:	mov    ecx,0xe3f29a77
  414e7a:	adc    dh,BYTE PTR [eax]
  414e7c:	sahf   
  414e7d:	cwde   
  414e7e:	ret    
  414e7f:	add    bl,bl
  414e81:	and    dh,dh
  414e83:	(bad)  
  414e84:	mov    bh,0xcd
  414e86:	repnz dec eax
  414e88:	xor    ebp,eax
  414e8a:	push   ebx
  414e8b:	repz inc edi
  414e8d:	dec    edx
  414e8e:	xchg   ebp,eax
  414e8f:	jle    0x414e87
  414e91:	add    al,0xb4
  414e93:	pop    edi
  414e94:	push   edi
  414e95:	jns    0x414e77
  414e97:	mov    esp,0xbb7f0f96
  414e9c:	dec    esi
  414e9d:	popf   
  414e9e:	stos   BYTE PTR es:[edi],al
  414e9f:	test   BYTE PTR [esp+ebx*2+0x1f],dl
  414ea3:	aam    0xb1
  414ea5:	inc    eax
  414ea6:	ret    
  414ea7:	lods   al,BYTE PTR ds:[esi]
  414ea8:	push   esi
  414ea9:	add    bl,BYTE PTR [ebp+0x21]
  414eac:	imul   ecx,ecx,0xdfdcdc71
  414eb2:	dec    BYTE PTR [edi+0x2]
  414eb5:	inc    esi
  414eb6:	rcr    BYTE PTR [edi+0x31860f36],0x81
  414ebd:	adc    eax,0x285e8ff2
  414ec2:	xor    al,0x97
  414ec4:	jg     0x414f0a
  414ec6:	inc    ebp
  414ec7:	inc    ebp
  414ec8:	js     0x414e97
  414eca:	mov    ah,0x69
  414ecc:	out    dx,al
  414ecd:	pxor   mm1,QWORD PTR [edx]
  414ed0:	pop    ecx
  414ed1:	xchg   ebx,eax
  414ed2:	retf   
  414ed3:	mov    BYTE PTR [ecx-0x2542dfff],0x2f
  414eda:	repz popf 
  414edc:	sahf   
  414edd:	xor    ecx,DWORD PTR [edx+0x3c]
  414ee0:	sti    
  414ee1:	(bad)  
  414ee2:	sbb    ebp,DWORD PTR [eax]
  414ee4:	(bad)  
  414ee5:	push   ebp
  414ee6:	sub    al,BYTE PTR [eax+0x28]
  414ee9:	pushf  
  414eea:	cdq    
  414eeb:	cdq    
  414eec:	clc    
  414eed:	mov    ch,0xb6
  414eef:	mov    al,0xdc
  414ef1:	mov    ds:0x90f02e42,al
  414ef6:	repnz xchg ecx,eax
  414ef8:	xchg   ecx,eax
  414ef9:	jle    0x414eec
  414efb:	jne    0x414edb
  414efd:	pop    ebp
  414efe:	push   ebp
  414eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f00:	addr16 (bad) 
  414f02:	(bad)  
  414f03:	jl     0x414f36
  414f05:	push   es
  414f06:	enter  0x9504,0xa2
  414f0a:	inc    eax
  414f0b:	mov    dl,0x8b
  414f0d:	dec    ebp
  414f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0f:	mov    edx,0x700e52ea
  414f14:	not    BYTE PTR [eax-0x4]
  414f17:	out    0xd9,eax
  414f19:	outs   dx,DWORD PTR ds:[esi]
  414f1a:	popf   
  414f1b:	mov    eax,ds:0x3ff67e0c
  414f20:	or     ecx,DWORD PTR [edx+esi*2]
  414f23:	or     al,0x2a
  414f25:	cs (bad) 
  414f27:	mov    eax,0x1c9a1c78
  414f2c:	scas   al,BYTE PTR es:[edi]
  414f2d:	lods   eax,DWORD PTR ds:[esi]
  414f2e:	bound  edx,QWORD PTR [esi+0x5bcbb54b]
  414f34:	xchg   esi,eax
  414f35:	xchg   ecx,eax
  414f36:	mov    eax,0x772b9787
  414f3b:	push   cs
  414f3c:	(bad)  
  414f3d:	mov    DWORD PTR [eax-0x1d],0xb9701924
  414f44:	stos   DWORD PTR es:[edi],eax
  414f45:	test   DWORD PTR ds:0x5ef371d5,eax
  414f4b:	scas   al,BYTE PTR es:[edi]
  414f4c:	push   cs
  414f4d:	sub    DWORD PTR [ecx*2+0x1a4d3ecd],eax
  414f54:	int    0xcc
  414f56:	and    DWORD PTR [ebx+0x778995f1],ebp
  414f5c:	jne    0x414f41
  414f5e:	loop   0x414f4f
  414f60:	(bad)  
  414f62:	mov    ds:0xefca0040,eax
  414f67:	dec    edi
  414f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f6a:	ror    DWORD PTR [edi+0x24],0xa2
  414f6e:	xor    DWORD PTR [eax-0x74],esi
  414f71:	nop
  414f72:	sub    al,BYTE PTR [eax-0x13]
  414f75:	cmc    
  414f76:	mov    edx,0x84dd0b31
  414f7b:	adc    DWORD PTR [ebx-0x34],ebp
  414f7e:	push   cs
  414f7f:	lea    edx,[ebx+eiz*1]
  414f82:	inc    esi
  414f83:	fmul   DWORD PTR [edx+edi*8-0x1b9ab333]
  414f8a:	mov    fs,edi
  414f8c:	inc    esi
  414f8d:	cld    
  414f8e:	xlat   BYTE PTR ds:[ebx]
  414f8f:	xor    al,0x8e
  414f91:	addr16 std 
  414f93:	push   ebx
  414f94:	imul   esp,DWORD PTR [edi+edx*8],0x991d5fc1
  414f9b:	ins    BYTE PTR es:[edi],dx
  414f9c:	or     dh,cl
  414f9e:	or     eax,0xd4fc3453
  414fa3:	stc    
  414fa4:	aaa    
  414fa5:	xor    BYTE PTR [edi],ah
  414fa7:	inc    esp
  414fa8:	dec    ebp
  414fa9:	scas   al,BYTE PTR es:[edi]
  414faa:	or     al,0xff
  414fac:	loop   0x414f8b
  414fae:	add    ebx,0x2f49fff5
  414fb4:	(bad)  
  414fb6:	stc    
  414fb7:	aas    
  414fb8:	lahf   
  414fb9:	ins    DWORD PTR es:[edi],dx
  414fba:	in     al,dx
  414fbb:	cs jo  0x414fb2
  414fbe:	inc    edx
  414fbf:	mov    esi,0xcda2afec
  414fc4:	mov    dl,0xa0
  414fc6:	cmp    BYTE PTR [edi-0x28d20e99],0xf3
  414fcd:	push   edi
  414fce:	dec    ebp
  414fcf:	jb     0x414fff
  414fd1:	xchg   esi,eax
  414fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd3:	jg     0x415004
  414fd5:	es scas al,BYTE PTR es:[edi]
  414fd7:	scas   al,BYTE PTR es:[edi]
  414fd8:	in     al,0xad
  414fda:	pop    ebp
  414fdb:	fadd   DWORD PTR [eax]
  414fdd:	mov    ebp,0x7c049411
  414fe2:	sub    BYTE PTR [eax+0x61],bl
  414fe5:	push   esp
  414fe6:	or     al,0x17
  414fe8:	mov    cl,0x91
  414fea:	or     bl,BYTE PTR [edi]
  414fec:	imul   edx,DWORD PTR [ebx-0x6a1423fd],0xffffffc9
  414ff3:	sbb    al,0xf6
  414ff5:	mov    DWORD PTR [ecx],esi
  414ff7:	(bad)  
  414ff8:	fcom   DWORD PTR [edi-0x60c33165]
  414ffe:	sbb    bl,ch
  415000:	jg     0x414fa2
  415002:	cli    
  415003:	cld    
  415004:	mulps  xmm2,XMMWORD PTR [eax-0x12]
  415008:	lea    ecx,[edi+0x576c4b1]
  41500e:	out    0x25,eax
  415010:	inc    esi
  415011:	(bad)  
  415012:	(bad)  
  415013:	ins    DWORD PTR es:[edi],dx
  415014:	push   cs
  415015:	add    al,BYTE PTR [ebp*4+0xf1c8704]
  41501c:	fistp  DWORD PTR [ebx]
  41501e:	bound  eax,QWORD PTR fs:[edi]
  415021:	sub    ch,dh
  415023:	cmp    ebp,DWORD PTR [eax-0xb0f6903]
  415029:	push   0x1e
  41502b:	cmp    edx,DWORD PTR [edi+0x168e1acf]
  415031:	or     DWORD PTR [esi+0x3f773ea0],ecx
  415037:	pop    edi
  415038:	mov    al,bh
  41503a:	adc    al,0x7
  41503c:	into   
  41503d:	pop    edi
  41503e:	pop    ecx
  41503f:	xor    al,0xc2
  415041:	dec    edx
  415042:	adc    eax,0x867d9f57
  415047:	pop    ebx
  415048:	jno    0x415005
  41504a:	dec    eax
  41504b:	pop    es
  41504c:	add    eax,0xd052c228
  415051:	das    
  415052:	loopne 0x415058
  415054:	adc    bh,ah
  415056:	xchg   esi,eax
  415057:	outs   dx,BYTE PTR ds:[esi]
  415058:	mov    bl,0xe
  41505a:	inc    DWORD PTR [ebp+0x35ac2a83]
  415060:	aas    
  415061:	pop    ecx
  415062:	data16 or al,0x37
  415065:	pop    ds
  415066:	scas   al,BYTE PTR es:[edi]
  415067:	fstp   DWORD PTR [ecx]
  415069:	or     al,dl
  41506b:	js     0x4150a8
  41506d:	adc    ecx,DWORD PTR ds:0x6f115e47
  415073:	or     al,0x5e
  415075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415076:	xlat   BYTE PTR ds:[ebx]
  415077:	sub    eax,0x76171dcb
  41507c:	shr    BYTE PTR [eax],1
  41507e:	fwait
  41507f:	mov    dh,0xfd
  415081:	sti    
  415082:	(bad)  
  415083:	frstor [edi]
  415085:	xor    eax,0xa101f8eb
  41508a:	and    eax,0x6e9b8dc9
  41508f:	xor    dl,dh
  415091:	push   ebp
  415092:	daa    
  415093:	loop   0x415066
  415095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415096:	mov    edx,0x26fe1df9
  41509b:	and    BYTE PTR [esi],bh
  41509d:	mov    bl,0x63
  41509f:	je     0x41506c
  4150a1:	ror    BYTE PTR [esi],0x79
  4150a4:	mov    ecx,0x472acef5
  4150a9:	mov    ah,0x75
  4150ab:	pushf  
  4150ac:	fcom   QWORD PTR [ebp-0x6ebf1490]
  4150b2:	scas   al,BYTE PTR es:[edi]
  4150b3:	push   ds
  4150b4:	cli    
  4150b5:	adc    DWORD PTR [eax],edi
  4150b7:	rcl    edi,1
  4150b9:	fsub   QWORD PTR [esi+0x67f16576]
  4150bf:	cmp    ecx,edi
  4150c1:	sahf   
  4150c2:	scas   al,BYTE PTR es:[edi]
  4150c3:	das    
  4150c4:	pushf  
  4150c5:	jge    0x41507f
  4150c7:	xchg   ebp,ecx
  4150c9:	add    ecx,DWORD PTR [eax+0x345fdfab]
  4150cf:	cmp    eax,0x718ec6b4
  4150d4:	scas   al,BYTE PTR es:[edi]
  4150d5:	retf   0xf030
  4150d8:	in     eax,dx
  4150d9:	cmp    bh,BYTE PTR [eax]
  4150db:	ds loopne 0x415064
  4150de:	mov    BYTE PTR [ecx+0x29c8cdad],dh
  4150e4:	dec    esp
  4150e5:	dec    edi
  4150e6:	xor    BYTE PTR [edx-0x79b8f069],al
  4150ec:	popa   
  4150ed:	lods   al,BYTE PTR ds:[esi]
  4150ee:	and    eax,0xc1d10a88
  4150f3:	enter  0xd3e9,0x3c
  4150f7:	frstor [edx+0x6d4ccead]
  4150fd:	mov    ebp,0xa52f3eda
  415102:	cmp    bl,ch
  415104:	mov    ds:0x56d51a3b,eax
  415109:	or     BYTE PTR [eax+0x33ec15f5],0x37
  415110:	leave  
  415111:	test   ax,0xcd74
  415115:	daa    
  415116:	jns    0x4150e8
  415118:	inc    edx
  415119:	enter  0xea2,0x25
  41511d:	inc    esi
  41511e:	dec    ebp
  41511f:	pop    es
  415120:	lea    ebx,[ebp+0x55556912]
  415126:	cli    
  415127:	lds    ebx,FWORD PTR [ebx]
  415129:	cmp    BYTE PTR [ebx-0x7a],ah
  41512c:	xor    eax,0xa8c56001
  415131:	(bad)  
  415132:	fsub   DWORD PTR [ebx+0x3571833a]
  415138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415139:	xchg   ebx,eax
  41513a:	mov    ebp,0xcdc1a629
  41513f:	outs   dx,DWORD PTR ds:[esi]
  415140:	pop    esp
  415141:	cmc    
  415142:	jae    0x4150ca
  415144:	or     eax,0xec96e740
  415149:	dec    ebx
  41514a:	cmp    eax,0xd377b1f4
  41514f:	and    BYTE PTR [edi+0x70],al
  415152:	data16 loope 0x415172
  415155:	add    al,0x96
  415157:	xor    BYTE PTR [esi],bh
  415159:	pop    ss
  41515a:	and    BYTE PTR ss:[ecx+0x7a],dh
  41515e:	pusha  
  41515f:	jle    0x415142
  415161:	sar    BYTE PTR [ebx-0x4b912d1],0x79
  415168:	xlat   BYTE PTR ss:[ebx]
  41516a:	xlat   BYTE PTR ds:[ebx]
  41516b:	bound  edi,QWORD PTR [ebx]
  41516d:	shl    DWORD PTR [esi],1
  41516f:	fcom   DWORD PTR [ebx-0x7d]
  415172:	mov    esi,0x61ff7cb6
  415177:	push   edi
  415178:	test   al,0xcd
  41517a:	xor    eax,0xa2466942
  41517f:	jbe    0x4151eb
  415181:	add    BYTE PTR [ebp-0x25a497e3],0x9b
  415188:	sbb    BYTE PTR [edi+0x22001c2],ch
  41518e:	lahf   
  41518f:	jmp    0x4151ee
  415191:	inc    edx
  415192:	jecxz  0x4151be
  415194:	adc    ebx,eax
  415196:	bound  esp,QWORD PTR [ecx+0x63f71be9]
  41519c:	jmp    FWORD PTR [ebx-0x240b8f0]
  4151a2:	add    dh,BYTE PTR [esi+0x62]
  4151a5:	or     DWORD PTR [esi+0x14f64d8d],0x6
  4151ac:	mov    edx,0xb83655b9
  4151b1:	mov    esp,0xf10fd409
  4151b6:	jo     0x415190
  4151b8:	add    bh,BYTE PTR [ecx+edi*8+0x5]
  4151bc:	(bad)  
  4151bd:	cmp    cl,BYTE PTR [edi+esi*1]
  4151c0:	inc    esi
  4151c1:	jno    0x4151aa
  4151c3:	inc    eax
  4151c4:	cmp    eax,0xd05228d5
  4151c9:	mov    edi,0xb1fe2595
  4151ce:	ins    BYTE PTR es:[edi],dx
  4151cf:	cmc    
  4151d0:	popa   
  4151d1:	mov    dl,0x56
  4151d3:	jle    0x4151c7
  4151d5:	out    0xd2,al
  4151d7:	test   ah,0xb2
  4151da:	push   edx
  4151db:	pop    ebx
  4151dc:	cs sar bh,0xa
  4151e0:	loop   0x415189
  4151e2:	mov    esp,DWORD PTR [eax-0x53a71a1c]
  4151e8:	arpl   dx,ax
  4151ea:	push   cs
  4151eb:	push   ebx
  4151ed:	xchg   ecx,eax
  4151ee:	mov    ecx,0x1edd07f7
  4151f3:	or     DWORD PTR [esi-0x430c7031],ebx
  4151f9:	scas   al,BYTE PTR es:[edi]
  4151fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151fb:	dec    ebx
  4151fc:	mov    ch,0x39
  4151fe:	jnp    0x415186
  415200:	mov    DWORD PTR [ecx+ebp*1],esi
  415203:	in     al,dx
  415204:	sbb    DWORD PTR [eax],edx
  415206:	add    bh,BYTE PTR [ebx-0x5f2725b7]
  41520c:	loopne 0x415282
  41520e:	lea    ebp,[esi+0x73]
  415211:	add    al,0xf6
  415213:	out    0x2d,al
  415215:	ins    DWORD PTR es:[edi],dx
  415216:	pop    eax
  415217:	(bad)  
  415219:	cli    
  41521a:	sbb    DWORD PTR [ebx+0x67],edi
  41521d:	cs pop ecx
  41521f:	dec    ebp
  415220:	xchg   edi,eax
  415221:	in     al,0x9e
  415223:	inc    DWORD PTR ds:0x532cc3da
  415229:	data16 jge 0x4151f7
  41522c:	sub    BYTE PTR [edx+edi*4-0xb279d7f],0xa6
  415234:	inc    ecx
  415235:	scas   eax,DWORD PTR es:[edi]
  415236:	add    DWORD PTR [esi],ecx
  415238:	inc    esp
  415239:	lods   eax,DWORD PTR ds:[esi]
  41523a:	dec    DWORD PTR [ecx-0x45]
  41523d:	out    dx,al
  41523e:	jno    0x4152b0
  415240:	sub    eax,0xc61d8d70
  415245:	jge    0x41525a
  415247:	icebp  
  415248:	shl    BYTE PTR [ebx+0x52],cl
  41524b:	dec    esi
  41524c:	in     eax,0x84
  41524e:	hlt    
  41524f:	in     eax,dx
  415250:	push   edx
  415251:	xor    eax,0xb1e713a9
  415256:	shl    esi,1
  415258:	test   al,0x25
  41525a:	or     esi,edx
  41525c:	sbb    ebp,edx
  41525e:	and    BYTE PTR [ecx-0x6a],ah
  415261:	test   al,0xdf
  415263:	and    ah,BYTE PTR [ecx+0x32]
  415266:	xor    esi,esi
  415268:	xchg   BYTE PTR [edi],ah
  41526a:	jmp    0x532:0xdd716a76
  415271:	fisub  WORD PTR [eax+0x4836aa7e]
  415277:	retf   0x466a
  41527a:	cmp    BYTE PTR [eax],ch
  41527c:	mov    cl,0xc5
  41527e:	jp     0x41528a
  415280:	int    0xa6
  415282:	push   cs
  415283:	pop    esp
  415284:	jl     0x415300
  415286:	mov    esp,0xd7f5946e
  41528b:	jae    0x415265
  41528d:	sahf   
  41528e:	xor    ch,BYTE PTR [edx]
  415290:	cmp    ebp,DWORD PTR [edi-0x4b9f8967]
  415296:	fist   DWORD PTR [edi+0x1a8c9299]
  41529c:	(bad)  
  41529d:	enter  0xcdc2,0x9c
  4152a1:	fdiv   QWORD PTR [ecx+0x0]
  4152a4:	push   0xffffff9e
  4152a6:	cs pop eax
  4152a8:	cmp    DWORD PTR [ecx],esi
  4152aa:	sbb    DWORD PTR [eax+0x21],0x13623b60
  4152b1:	inc    esi
  4152b2:	mov    eax,0xc8313196
  4152b7:	push   ss
  4152b8:	enter  0xd30b,0xc1
  4152bc:	pop    edi
  4152bd:	shl    BYTE PTR [edx-0x32],0xeb
  4152c1:	mov    edx,?
  4152c3:	add    al,0x36
  4152c5:	popa   
  4152c6:	sub    al,0x88
  4152c8:	mov    DWORD PTR [ebp+0x71],ecx
  4152cb:	fidiv  DWORD PTR [edi-0x3]
  4152ce:	cmp    al,0xae
  4152d0:	sbb    BYTE PTR [esi+0x151f1ade],cl
  4152d6:	inc    esi
  4152d7:	push   edx
  4152d8:	loope  0x41527e
  4152da:	adc    DWORD PTR [ebx-0x56],esp
  4152dd:	lods   eax,DWORD PTR ds:[si]
  4152df:	mov    ecx,0x34d2435d
  4152e4:	mov    eax,0xa3ec6d23
  4152e9:	push   ds
  4152ea:	xor    eax,0xe2289430
  4152ef:	sbb    cl,BYTE PTR [edx]
  4152f1:	into   
  4152f2:	outs   dx,DWORD PTR ds:[esi]
  4152f3:	pop    esp
  4152f4:	mov    al,ds:0x9872392e
  4152f9:	test   BYTE PTR [edx-0x1078ce43],ch
  4152ff:	push   cs
  415300:	adc    ah,BYTE PTR [edi-0x61db0460]
  415306:	dec    ecx
  415307:	pop    ebx
  415308:	fsin   
  41530a:	es inc esp
  41530c:	jg     0x4152a7
  41530e:	fld    QWORD PTR [ebx]
  415310:	cwde   
  415311:	add    DWORD PTR [ebx+edi*2-0x54c21b1b],esi
  415318:	into   
  415319:	add    BYTE PTR [eax+0x2b],ah
  41531c:	sbb    DWORD PTR [ebx-0x17],0xfdb41fb8
  415323:	mov    dh,BYTE PTR [edx+edi*2]
  415326:	jo     0x4153a6
  415328:	cs xor al,0x58
  41532b:	dec    edx
  41532c:	jne    0x415386
  41532e:	stos   DWORD PTR es:[edi],eax
  41532f:	ins    BYTE PTR es:[edi],dx
  415330:	xchg   esi,eax
  415331:	push   eax
  415332:	add    eax,0xee3ebf88
  415337:	stos   DWORD PTR es:[edi],eax
  415338:	rcl    DWORD PTR [eax],0x52
  41533b:	out    dx,eax
  41533c:	mov    esp,DWORD PTR [eax]
  41533e:	or     al,0x64
  415340:	sbb    al,0x70
  415342:	xchg   edx,eax
  415343:	sbb    al,0x9e
  415345:	or     BYTE PTR ss:[esi],bl
  415348:	sbb    BYTE PTR [edx-0x16],dl
  41534b:	and    BYTE PTR [ecx-0x5de5736c],ah
  415351:	pop    ebp
  415352:	cs inc ebx
  415354:	repz imul esi,DWORD PTR [edi+0x4a56cdd9],0x818fc556
  41535f:	cdq    
  415360:	mov    ch,0xcb
  415362:	push   edi
  415363:	or     dl,BYTE PTR [esi+0x60]
  415366:	dec    ecx
  415367:	adc    ch,BYTE PTR [ebp-0x71f9eb96]
  41536d:	xchg   ebx,eax
  41536e:	pop    es
  41536f:	mov    BYTE PTR [edi-0x15000aa9],0x97
  415376:	pop    ds
  415377:	or     eax,DWORD PTR [ecx+0x62]
  41537a:	add    bl,BYTE PTR [edi]
  41537c:	cmp    al,0x68
  41537e:	(bad)  
  415380:	pusha  
  415381:	(bad)  
  415382:	gs jecxz 0x41536f
  415385:	xor    eax,0xda175d18
  41538a:	icebp  
  41538b:	inc    ebx
  41538c:	and    al,0x5c
  41538e:	xchg   esp,eax
  41538f:	test   DWORD PTR [ebx+edx*4],edx
  415392:	and    BYTE PTR [ebx+0x6f],cl
  415395:	pop    ebp
  415396:	(bad)  
  415398:	je     0x415416
  41539a:	sbb    dl,BYTE PTR [edi+0xa88a5c9]
  4153a0:	ds nop
  4153a2:	dec    ah
  4153a4:	mov    ss,esi
  4153a6:	jae    0x41539a
  4153a8:	xor    eax,0x25f34f2d
  4153ad:	push   ss
  4153ae:	test   al,0x9f
  4153b0:	xor    BYTE PTR [ebx],bl
  4153b2:	out    0x59,al
  4153b4:	popa   
  4153b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b6:	push   0xfe92f76e
  4153bb:	pop    ebx
  4153bc:	outs   dx,BYTE PTR ds:[esi]
  4153bd:	push   esi
  4153be:	in     al,0xaa
  4153c0:	imul   ebx,esp,0x35068327
  4153c6:	push   ss
  4153c7:	fs call 0x9bc4b759
  4153cd:	pop    ss
  4153ce:	xor    dh,bh
  4153d0:	add    BYTE PTR [ecx-0x45dc30fe],0x90
  4153d7:	mov    DWORD PTR [ebp+edx*8-0x56b9e60b],edx
  4153de:	cwde   
  4153df:	pop    ss
  4153e0:	inc    ecx
  4153e1:	int3   
  4153e2:	shl    DWORD PTR [ebp-0x60],0xd6
  4153e6:	cmp    al,BYTE PTR ds:0x11d0d18c
  4153ec:	pop    ebp
  4153ed:	ret    
  4153ee:	fadd   DWORD PTR [esi]
  4153f0:	nop
  4153f1:	xor    DWORD PTR [esi+0x69],0xffffff92
  4153f5:	sub    BYTE PTR [edi],0x82
  4153f8:	test   al,0x2c
  4153fa:	push   eax
  4153fb:	test   eax,0xf05e3e1e
  415400:	add    ebx,DWORD PTR ds:0x57ca9383
  415406:	mov    al,ds:0xb91cdabf
  41540b:	imul   BYTE PTR [ebp+0x474176a7]
  415411:	add    eax,0x99b32bb0
  415416:	lock dec eax
  415418:	leave  
  415419:	or     al,0x54
  41541b:	push   ebp
  41541c:	(bad)  
  41541d:	mov    edi,0x31f11130
  415422:	stos   BYTE PTR es:[edi],al
  415423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415424:	mov    edx,0x7813dfe9
  415429:	addr16 mov ds:0xc25d,al
  41542d:	push   ebx
  41542e:	push   esp
  41542f:	push   ds
  415430:	dec    esi
  415431:	xor    al,0x46
  415433:	dec    eax
  415434:	push   edx
  415435:	imul   ebp,esi,0x3926bad4
  41543b:	inc    ecx
  41543c:	js     0x4154bd
  41543e:	xor    DWORD PTR [eax+0x68d21422],edx
  415444:	out    0x7a,eax
  415446:	adc    al,0xf9
  415448:	mov    edx,0xee393ad8
  41544d:	xor    bl,BYTE PTR [ebx+esi*8+0x13]
  415451:	mov    bh,0x3e
  415453:	fisttp QWORD PTR [esi-0x57]
  415456:	ficomp DWORD PTR [edx+0x6b]
  415459:	stos   DWORD PTR es:[edi],eax
  41545a:	mov    bh,BYTE PTR [eax-0x18adee93]
  415460:	int    0xfb
  415462:	jo     0x4153e9
  415464:	jns    0x4153f7
  415466:	mov    ?,WORD PTR [esi+0x10d56641]
  41546c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41546d:	out    dx,al
  41546e:	mov    al,ds:0x626f0f5f
  415473:	sub    al,BYTE PTR [eax-0x5f]
  415476:	fcom   QWORD PTR [edi+ebx*8]
  415479:	add    al,0x43
  41547b:	pop    edx
  41547c:	adc    ecx,esi
  41547e:	sbb    eax,0x72395432
  415483:	pop    ss
  415484:	std    
  415485:	clc    
  415486:	in     eax,0xcd
  415488:	loop   0x4154c4
  41548a:	jmp    0x7ba1:0xe9144d77
  415491:	leave  
  415492:	stos   BYTE PTR es:[edi],al
  415493:	addr16 xchg ebx,eax
  415495:	aad    0x5
  415497:	jl     0x4154a6
  415499:	test   eax,0xdd2500f8
  41549e:	mov    ch,0xc6
  4154a0:	mov    dl,0xcd
  4154a2:	test   BYTE PTR [ecx-0x25ace71b],ch
  4154a8:	mov    ebp,0xa0ea4275
  4154ad:	ss and ebx,0xb631447
  4154b4:	mov    ds:0xbe8fb965,al
  4154b9:	or     BYTE PTR [ebx+0x77c9ff58],ah
  4154bf:	pop    esp
  4154c0:	mov    bh,BYTE PTR [edi-0x34]
  4154c3:	stos   BYTE PTR es:[edi],al
  4154c4:	mov    ah,0x4e
  4154c6:	dec    ecx
  4154c7:	iret   
  4154c8:	inc    eax
  4154c9:	ret    0x9218
  4154cc:	daa    
  4154cd:	push   ss
  4154ce:	push   ebx
  4154cf:	gs je  0x4154d7
  4154d2:	or     al,0x58
  4154d4:	push   ebx
  4154d5:	dec    ebp
  4154d6:	int    0x9a
  4154d8:	inc    ebp
  4154d9:	stos   DWORD PTR es:[edi],eax
  4154da:	fsubr  DWORD PTR [edx-0x6c83f3f0]
  4154e0:	sbb    eax,0x75e991e4
  4154e5:	out    0x3,eax
  4154e7:	dec    ecx
  4154e8:	call   0x31d71df3
  4154ed:	mov    ebp,0x8e010845
  4154f2:	gs pop ecx
  4154f4:	mov    eax,ds:0xf98b9711
  4154f9:	inc    edx
  4154fa:	sahf   
  4154fb:	mov    bl,0xde
  4154fd:	inc    ebp
  4154fe:	xchg   ebp,eax
  4154ff:	push   cs
  415500:	jecxz  0x415538
  415502:	jne    0x41557c
  415504:	(bad)  
  415505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415506:	ror    DWORD PTR [edi+0x6f26ed98],1
  41550c:	inc    eax
  41550d:	adc    esi,DWORD PTR [esp+esi*4]
  415510:	cmp    BYTE PTR [edi+edx*2-0x6e],dh
  415514:	inc    edi
  415515:	sub    eax,0x4e18c9ee
  41551a:	xor    BYTE PTR [edx-0x4df33a60],dl
  415520:	daa    
  415521:	stos   DWORD PTR es:[edi],eax
  415522:	push   ds
  415523:	mov    WORD PTR [edi+0x79],es
  415526:	mov    cl,0x3a
  415528:	scas   al,BYTE PTR es:[edi]
  415529:	nop
  41552a:	sub    al,0x7e
  41552c:	(bad)  
  41552d:	push   ebx
  41552e:	xlat   BYTE PTR ds:[ebx]
  41552f:	imul   ebx,DWORD PTR [ebx-0x608c4d1d],0x4241c18
  415539:	sub    DWORD PTR [eax],eax
  41553b:	hlt    
  41553c:	shl    DWORD PTR [edi+0x259d581c],1
  415542:	lods   al,BYTE PTR ds:[esi]
  415543:	loop   0x415532
  415545:	push   ss
  415546:	adc    al,0x7d
  415548:	clc    
  415549:	xchg   ecx,eax
  41554a:	pop    ecx
  41554b:	cmp    cl,BYTE PTR [edx-0x29]
  41554e:	cmp    eax,0xa48ec32
  415553:	adc    DWORD PTR ds:0xc0c1b330,ebp
  415559:	jecxz  0x41550a
  41555b:	inc    ebx
  41555c:	sub    al,0xe2
  41555e:	mov    ?,WORD PTR [edx-0xb]
  415561:	push   edi
  415562:	push   esi
  415563:	sub    cl,BYTE PTR [eax+0x3a]
  415566:	pop    edx
  415567:	call   0x987c21c2
  41556c:	cmc    
  41556d:	rcl    esp,0x4c
  415570:	jno    0x4155f0
  415572:	add    DWORD PTR [edx-0x51],0x5d400d46
  415579:	sub    dh,dh
  41557b:	cmp    eax,0xd79cbeaa
  415580:	cdq    
  415581:	repnz push esp
  415583:	scas   al,BYTE PTR es:[edi]
  415584:	(bad)  
  415586:	sahf   
  415587:	cmp    DWORD PTR [edx-0x34],eax
  41558a:	stos   BYTE PTR es:[edi],al
  41558b:	jg     0x41554b
  41558d:	loopne 0x415591
  41558f:	inc    ebp
  415590:	jmp    0x5f4c:0x7fe8ea8f
  415597:	sbb    al,0xec
  415599:	or     al,0x70
  41559b:	jl     0x4155c6
  41559d:	mov    esi,0xb9dc474d
  4155a2:	mov    esi,0x393a0c59
  4155a7:	adc    esi,DWORD PTR [edi+0x5]
  4155aa:	mul    BYTE PTR [edi-0x28]
  4155ad:	xor    DWORD PTR [edi+ecx*2+0x622c7690],eax
  4155b4:	push   ebx
  4155b5:	xchg   edx,eax
  4155b6:	dec    BYTE PTR [esi-0xd]
  4155b9:	iret   
  4155ba:	or     eax,0x140ead8f
  4155bf:	mov    dl,0x38
  4155c1:	push   ds
  4155c2:	pop    edx
  4155c3:	push   0xc8d5ba6c
  4155c8:	push   0x34
  4155ca:	push   eax
  4155cb:	imul   esp,DWORD PTR [eax-0x7754555a],0x57
  4155d2:	pop    edx
  4155d3:	cmp    ebp,DWORD PTR [esi-0x651c8477]
  4155d9:	and    ah,ch
  4155db:	and    al,0x3e
  4155dd:	mov    ebx,0xf89fe97a
  4155e2:	lahf   
  4155e3:	inc    eax
  4155e4:	retf   0x36c3
  4155e7:	ret    0xde11
  4155ea:	inc    eax
  4155eb:	jp     0x41565b
  4155ed:	in     eax,dx
  4155ee:	jbe    0x41565f
  4155f0:	idiv   DWORD PTR [ebp+0x7ee7323c]
  4155f6:	int3   
  4155f7:	cmp    bh,BYTE PTR ss:[edx-0x54fc2564]
  4155fe:	test   al,0x54
  415600:	int    0x2a
  415602:	ror    BYTE PTR [ebp+0x6cfcf2be],1
  415608:	dec    ebp
  415609:	or     BYTE PTR [edx],0xeb
  41560c:	mov    DWORD PTR [ecx+esi*8+0x6a365637],eax
  415613:	ins    DWORD PTR es:[edi],dx
  415614:	repz mov al,0x29
  415617:	xchg   edi,eax
  415618:	mov    ebx,0x841a71b8
  41561d:	lea    eax,[ecx]
  41561f:	leave  
  415620:	test   BYTE PTR [ebx+0x43],0x86
  415624:	mov    ebx,0x963f6ab4
  415629:	rcr    BYTE PTR [ecx+0x70],cl
  41562c:	and    cl,BYTE PTR [esi+0x71fb36f]
  415632:	out    dx,eax
  415633:	jo     0x41567e
  415635:	outs   dx,BYTE PTR ds:[esi]
  415636:	adc    ecx,ebx
  415638:	push   esp
  415639:	(bad)  
  41563a:	and    al,0xf1
  41563c:	jo     0x4155ca
  41563e:	xchg   esp,eax
  41563f:	es addr16 ja 0x4156b5
  415643:	mov    bh,0x9
  415645:	xor    eax,0xad0cdd26
  41564a:	jb     0x4155f2
  41564c:	out    dx,eax
  41564d:	xchg   ebx,eax
  41564e:	inc    edx
  41564f:	(bad)  
  415650:	fucom  st(2)
  415652:	call   0xdd19:0x983bd00e
  415659:	pop    ebp
  41565a:	cmp    bh,BYTE PTR [esi]
  41565c:	test   eax,0xd49e83ef
  415661:	imul   BYTE PTR [ecx+esi*2+0x6c21a67d]
  415668:	jae    0x4156bc
  41566a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41566b:	xor    DWORD PTR [eax],esi
  41566d:	mov    ds:0xcbe9ca18,eax
  415672:	xor    al,0x50
  415674:	add    al,0x8e
  415676:	jge    0x4156d3
  415678:	jns    0x415631
  41567a:	mov    bl,0x1b
  41567c:	and    cl,BYTE PTR [edi+eiz*4-0x4]
  415680:	outs   dx,BYTE PTR ds:[esi]
  415681:	push   ebx
  415682:	and    bl,BYTE PTR [ebp-0x46]
  415685:	xor    ebp,DWORD PTR [eax-0x7f]
  415688:	jo     0x4156ff
  41568a:	pop    esi
  41568b:	jo     0x415616
  41568d:	sbb    BYTE PTR [ebx+0x24],cl
  415690:	sbb    eax,0x7f33a6e2
  415695:	ret    0xbea0
  415698:	sub    BYTE PTR [edx-0x747be9e9],cl
  41569e:	jge    0x41563b
  4156a0:	jge    0x415676
  4156a2:	add    eax,0x8ee408f3
  4156a7:	test   eax,0x1bb54c77
  4156ac:	dec    eax
  4156ad:	lea    ecx,[edx-0x1b171192]
  4156b3:	bound  edi,QWORD PTR [esi-0x5898ff8d]
  4156b9:	arpl   WORD PTR [eax-0x7edff66b],dx
  4156bf:	cs xchg edx,eax
  4156c1:	(bad)  
  4156c2:	pushf  
  4156c3:	pop    esp
  4156c4:	sbb    al,0x4f
  4156c6:	cmp    eax,DWORD PTR [ebx-0x4]
  4156c9:	outs   dx,DWORD PTR ds:[esi]
  4156ca:	pop    edi
  4156cb:	fisttp QWORD PTR [edi]
  4156cd:	aas    
  4156ce:	adc    cl,dl
  4156d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d1:	and    BYTE PTR [eax-0x7512844c],dh
  4156d7:	das    
  4156d8:	xor    ch,ah
  4156da:	and    BYTE PTR [edi-0x5b804198],bl
  4156e0:	jl     0x4156b8
  4156e2:	test   eax,0xc0a66697
  4156e7:	dec    ecx
  4156e8:	xchg   ecx,eax
  4156e9:	mov    bl,0x67
  4156eb:	cmp    esi,DWORD PTR [edi]
  4156ed:	fadd   QWORD PTR [edi]
  4156ef:	inc    ebp
  4156f0:	and    DWORD PTR [ebx-0x6b],eax
  4156f3:	mov    bh,BYTE PTR [eax+0x10773999]
  4156f9:	sbb    al,0xbe
  4156fb:	jecxz  0x415689
  4156fd:	jge    0x41572e
  4156ff:	int    0x4e
  415701:	jne    0x415711
  415703:	dec    edi
  415704:	sbb    dh,BYTE PTR [ebp-0x7383dd3c]
  41570a:	dec    edx
  41570b:	or     ebx,DWORD PTR [edx+0x6ce29182]
  415711:	js     0x41570b
  415713:	push   edi
  415714:	xor    esp,ecx
  415716:	cmp    DWORD PTR [edi-0x156abce9],0xc6198e86
  415720:	clc    
  415721:	jne    0x415799
  415723:	sub    eax,0xc16635b2
  415728:	sub    ah,BYTE PTR [edx+0x6053d540]
  41572e:	inc    eax
  41572f:	cwde   
  415730:	shl    BYTE PTR [edi+0x71],cl
  415733:	sub    esi,DWORD PTR [eax-0x475bb6f1]
  415739:	lods   al,BYTE PTR ds:[esi]
  41573a:	(bad)  
  41573b:	and    bh,BYTE PTR [esi+0x95acd2a]
  415741:	pop    ebx
  415742:	(bad)  
  415743:	std    
  415744:	dec    eax
  415745:	fisub  WORD PTR [ebx+esi*4]
  415748:	and    BYTE PTR [eax],0xfa
  41574b:	xlat   BYTE PTR ds:[ebx]
  41574c:	hlt    
  41574d:	mov    al,0xce
  41574f:	das    
  415750:	jecxz  0x4156eb
  415752:	pop    eax
  415753:	imul   ebp,ebp,0xfc95d6c6
  415759:	(bad)  
  41575b:	ret    
  41575c:	cmp    BYTE PTR [esi+0x30e46c82],dl
  415762:	xor    ah,al
  415764:	clc    
  415765:	jb     0x41575e
  415767:	pop    ss
  415768:	iret   
  415769:	and    al,0x88
  41576b:	pop    es
  41576c:	mov    al,ds:0xcba81a05
  415771:	mov    ebx,0xbd538be9
  415776:	sbb    ecx,DWORD PTR [eax]
  415778:	aaa    
  415779:	jge    0x4157da
  41577b:	scas   al,BYTE PTR es:[edi]
  41577c:	fxch   st(3)
  41577e:	hlt    
  41577f:	and    eax,0xe3009592
  415784:	test   al,0xc
  415786:	dec    edx
  415787:	in     al,dx
  415788:	fucom  st(0)
  41578a:	outs   dx,BYTE PTR ds:[esi]
  41578b:	push   ebp
  41578c:	inc    ecx
  41578d:	cli    
  41578e:	add    DWORD PTR [edi-0x678cc2c4],ecx
  415794:	out    0xa7,eax
  415796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415797:	jmp    0x7ed7:0xce5eeae2
  41579e:	pop    ss
  41579f:	push   ecx
  4157a0:	and    eax,0x7d60932e
  4157a5:	xor    eax,0xa82bf709
  4157aa:	pop    es
  4157ab:	daa    
  4157ac:	jbe    0x41579c
  4157ae:	mov    BYTE PTR [eax],dh
  4157b0:	(bad)  [ebx]
  4157b2:	addr16 dec ebx
  4157b4:	scas   al,BYTE PTR es:[edi]
  4157b5:	ficomp DWORD PTR [eax]
  4157b7:	aaa    
  4157b8:	cmc    
  4157b9:	or     bl,bh
  4157bb:	int3   
  4157bc:	mov    ch,0xf
  4157be:	add    bh,BYTE PTR [eax]
  4157c0:	aam    0x60
  4157c2:	daa    
  4157c3:	inc    esi
  4157c4:	stc    
  4157c5:	ret    
  4157c6:	mov    edx,0x73c97319
  4157cb:	mov    eax,0x865c6f94
  4157d0:	xor    ah,BYTE PTR [edi-0x24]
  4157d3:	sub    eax,0x4d56e921
  4157d8:	add    DWORD PTR [eax],esp
  4157da:	xlat   BYTE PTR ds:[ebx]
  4157db:	mov    DWORD PTR [eax+0x14b9c675],ecx
  4157e1:	fisttp WORD PTR [esi+0x29399828]
  4157e7:	xchg   esi,eax
  4157e8:	xchg   edi,eax
  4157e9:	mov    esi,0x8a5f13af
  4157ee:	and    al,0xdf
  4157f0:	rol    DWORD PTR [esp+edx*8],cl
  4157f3:	adc    DWORD PTR [ebx+0x63a32083],ecx
  4157f9:	dec    ebx
  4157fa:	fist   DWORD PTR [ebx+eax*8+0x4fea747d]
  415801:	dec    ebx
  415802:	out    0x27,ax
  415805:	push   ebp
  415806:	sub    BYTE PTR [esi-0x6e],0x84
  41580a:	push   ebp
  41580b:	mov    ecx,0x49234a21
  415810:	in     al,0x9
  415812:	imul   esp,DWORD PTR [ebx+0x7bf87fb7],0xffffffb5
  415819:	jmp    0xd295edfc
  41581e:	daa    
  41581f:	or     ch,BYTE PTR [esi+0x45]
  415822:	adc    DWORD PTR [ecx+0x567b915],esp
  415828:	or     bh,BYTE PTR [eax+0x3681a186]
  41582e:	daa    
  41582f:	gs xchg esp,eax
  415831:	mov    dh,0x21
  415833:	data16 xor dl,ah
  415836:	cwde   
  415837:	sub    edi,DWORD PTR ds:0xd086501b
  41583d:	loopne 0x41581f
  41583f:	mov    ch,0xc5
  415841:	cmp    bl,cl
  415843:	repz mov bh,0xc0
  415846:	add    eax,0x2739039c
  41584b:	or     dh,bh
  41584d:	dec    eax
  41584e:	inc    ebp
  41584f:	arpl   WORD PTR ds:0x565145b,dx
  415855:	mov    ds:0x96be7c01,al
  41585a:	std    
  41585b:	(bad)
  41585f:	sbb    DWORD PTR [edi],ebx
  415861:	adc    eax,0x86a58f31
  415866:	xchg   ecx,eax
  415867:	xor    BYTE PTR [esi+eiz*1],cl
  41586a:	mov    ecx,0xe3cc1f44
  415870:	jecxz  0x415814
  415872:	xchg   edi,eax
  415873:	fidivr DWORD PTR [esi-0x25]
  415876:	rcr    BYTE PTR [edi+0x6b],1
  415879:	jno    0x415887
  41587b:	fs jns 0x415837
  41587e:	test   DWORD PTR [ebx-0x6c974186],esi
  415884:	xlat   BYTE PTR ds:[ebx]
  415885:	fld    QWORD PTR [ecx]
  415887:	repnz test BYTE PTR [edx],cl
  41588a:	in     eax,dx
  41588b:	or     eax,0x5e96c775
  415890:	lods   al,BYTE PTR ds:[esi]
  415891:	in     eax,dx
  415892:	fldcw  WORD PTR [edx]
  415894:	jnp    0x41583b
  415896:	sbb    dl,BYTE PTR [edx-0x803cdb3]
  41589c:	(bad)  
  41589d:	xor    bl,BYTE PTR [ebp-0x6c83d998]
  4158a3:	femms  
  4158a5:	jo     0x4158b0
  4158a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a8:	inc    esp
  4158a9:	lahf   
  4158aa:	and    BYTE PTR [eax-0x35100cd],bh
  4158b0:	pop    ss
  4158b1:	pop    edi
  4158b2:	outs   dx,BYTE PTR ds:[esi]
  4158b3:	ret    
  4158b4:	test   eax,0x70ef3f08
  4158b9:	add    cl,bl
  4158bb:	(bad)  
  4158bc:	call   0xbd58:0x3c3c91b3
  4158c3:	mov    edi,0x8a5ae307
  4158c8:	pop    es
  4158c9:	sahf   
  4158ca:	frstor [esi+0x4e]
  4158cd:	daa    
  4158ce:	add    edi,DWORD PTR [ebx]
  4158d0:	adc    eax,0x264ed8ed
  4158d5:	inc    esi
  4158d6:	and    eax,0xa9009d01
  4158db:	and    DWORD PTR [eax],eax
  4158dd:	hlt    
  4158de:	push   cs
  4158df:	xor    edx,DWORD PTR [ebx+0x31]
  4158e2:	neg    DWORD PTR [esi-0x2d2b4600]
  4158e8:	lea    esi,[ebx+0x29d2db28]
  4158ee:	lods   eax,DWORD PTR ds:[esi]
  4158ef:	jns    0x41592b
  4158f1:	or     eax,0xce5e56c4
  4158f6:	ins    BYTE PTR es:[edi],dx
  4158f7:	xchg   edi,eax
  4158f8:	nop
  4158f9:	inc    eax
  4158fa:	inc    ebp
  4158fb:	xor    al,0xef
  4158fd:	inc    eax
  4158fe:	enter  0x1cdb,0x2c
  415902:	pop    ss
  415903:	nop
  415904:	and    al,0x93
  415906:	jmp    FWORD PTR [eax-0x4269d16d]
  41590c:	enter  0x33c5,0x8c
  415910:	lock adc al,0x89
  415913:	dec    eax
  415914:	push   ss
  415915:	xchg   DWORD PTR [ebx+ebx*2-0x17154af9],esi
  41591c:	mov    al,BYTE PTR [ebx-0x190ccd3a]
  415922:	cld    
  415923:	cdq    
  415924:	out    dx,al
  415925:	loop   0x41597c
  415927:	or     dl,bl
  415929:	nop
  41592a:	enter  0x5882,0xd8
  41592e:	xor    dh,al
  415930:	mov    ah,0xe
  415932:	pop    ds
  415933:	sahf   
  415934:	mov    ch,0x94
  415936:	sahf   
  415937:	gs pop si
  41593a:	fisttp QWORD PTR [edi+0xd8dd26c]
  415940:	fcmovbe st,st(7)
  415942:	out    0x99,al
  415944:	xor    al,0xf3
  415946:	jae    0x4159ac
  415948:	iret   
  415949:	ss pop ebp
  41594b:	adc    DWORD PTR [edx-0x63],esi
  41594e:	scas   eax,DWORD PTR es:[edi]
  41594f:	cmp    al,0xca
  415951:	inc    esi
  415952:	clc    
  415953:	mov    ds:0xf1f9ba06,al
  415958:	lahf   
  415959:	imul   esp,DWORD PTR [esi],0xffffffa2
  41595c:	imul   eax,DWORD PTR [edi],0x73
  41595f:	sub    DWORD PTR [edx],ecx
  415961:	push   edx
  415962:	sbb    al,0xec
  415964:	inc    ebp
  415965:	dec    eax
  415966:	cmp    BYTE PTR [esi],0xee
  415969:	nop
  41596a:	inc    ecx
  41596b:	clc    
  41596c:	adc    bl,BYTE PTR [edx-0x76]
  41596f:	mov    dh,0x5
  415971:	loope  0x4158f9
  415973:	add    dl,al
  415975:	mov    ds:0xca45ed97,al
  41597a:	mov    bl,bl
  41597c:	sbb    BYTE PTR [edx-0x18afce1e],ch
  415982:	jo     0x41594b
  415984:	repnz aaa 
  415986:	add    eax,0xef848b39
  41598b:	xor    edi,DWORD PTR [ebx-0x2a]
  41598e:	sete   BYTE PTR [eax]
  415991:	mov    al,ds:0x59a607ed
  415996:	inc    ebx
  415997:	xchg   edi,eax
  415998:	dec    edx
  415999:	mov    cs,WORD PTR [edi-0x1cd31ac8]
  41599f:	sub    bh,BYTE PTR [ebx+0x62]
  4159a2:	jecxz  0x4159e4
  4159a4:	mov    eax,ds:0xb0f6ca7
  4159a9:	loop   0x415943
  4159ab:	adc    eax,0xd7a4526c
  4159b0:	bound  esi,QWORD PTR [ebx+eiz*2]
  4159b3:	mov    bh,0xed
  4159b5:	jmp    0x415a28
  4159b7:	cdq    
  4159b8:	fnstsw WORD PTR [edx-0x527401a7]
  4159be:	jl     0x415a27
  4159c0:	add    edi,DWORD PTR [ecx]
  4159c2:	mov    cl,0x54
  4159c4:	aam    0x6a
  4159c6:	aaa    
  4159c7:	rcr    DWORD PTR [ebx],0xd8
  4159ca:	in     eax,0xb5
  4159cc:	mov    edi,0x60e5c6eb
  4159d1:	or     eax,0x3f0936ce
  4159d6:	out    dx,al
  4159d7:	adc    al,BYTE PTR [eax-0x234f3aed]
  4159dd:	mov    DWORD PTR [eax+eiz*2+0x5722831e],esi
  4159e4:	xchg   ebx,eax
  4159e5:	push   edi
  4159e6:	and    BYTE PTR [edi+edx*8-0x687d39cc],ah
  4159ed:	outs   dx,DWORD PTR ds:[esi]
  4159ee:	cmp    eax,0x16304130
  4159f3:	sar    dl,0x1e
  4159f6:	retf   
  4159f7:	test   al,0x17
  4159f9:	jmp    0x6a336990
  4159fe:	mov    cl,0x4e
  415a00:	jle    0x415a0b
  415a02:	fwait
  415a03:	or     DWORD PTR [ebp-0x5c],0x57
  415a07:	pusha  
  415a08:	pop    ecx
  415a09:	and    DWORD PTR [edx+0x2959b44],ecx
  415a0f:	add    dh,BYTE PTR [edx-0x44]
  415a12:	mov    cl,0x8a
  415a14:	xchg   edx,eax
  415a15:	dec    ecx
  415a16:	cmp    ebp,DWORD PTR [esi]
  415a18:	ret    0x1239
  415a1b:	mov    ah,0x9c
  415a1d:	je     0x415a43
  415a1f:	int3   
  415a20:	mov    esp,0x728e0b17
  415a25:	jmp    0x415aa3
  415a27:	fnstcw WORD PTR [esi]
  415a29:	xchg   esi,eax
  415a2a:	mov    al,ds:0xa46b6a1f
  415a2f:	out    dx,al
  415a30:	sbb    eax,0x20353114
  415a35:	inc    edx
  415a36:	sub    al,0x0
  415a38:	mov    ah,0xdf
  415a3a:	loope  0x415a3f
  415a3c:	push   0xc4470a1
  415a41:	repnz cmp eax,0x73ae7926
  415a47:	mov    dl,0xec
  415a49:	sbb    ch,BYTE PTR [edi+esi*8+0xa]
  415a4d:	scas   al,BYTE PTR es:[edi]
  415a4e:	stos   DWORD PTR es:[edi],eax
  415a4f:	and    ecx,edi
  415a51:	mov    ds:0xc54acbc1,eax
  415a56:	dec    ebp
  415a57:	ret    
  415a58:	adc    ecx,DWORD PTR [edi]
  415a5a:	loop   0x415adb
  415a5c:	lahf   
  415a5d:	mov    bh,0x95
  415a5f:	pop    ebp
  415a60:	and    ecx,0xdfe1597a
  415a66:	call   0xb843cbc0
  415a6b:	sbb    al,0x7a
  415a6d:	test   DWORD PTR [ecx-0x6a40f242],edx
  415a73:	shr    BYTE PTR [esi+0x74],cl
  415a76:	jbe    0x415af6
  415a78:	xchg   edx,eax
  415a79:	pop    es
  415a7a:	dec    ebx
  415a7b:	(bad)  
  415a7c:	push   cx
  415a7e:	addr16 int3 
  415a80:	xor    DWORD PTR [ebx-0x22],0xf59c601
  415a87:	loopne 0x415a5b
  415a89:	icebp  
  415a8a:	push   ds
  415a8b:	(bad)  
  415a8c:	hlt    
  415a8d:	enter  0x603c,0xc6
  415a91:	mov    ch,0x86
  415a93:	inc    edx
  415a94:	leave  
  415a95:	ds out 0xcd,eax
  415a98:	cmp    DWORD PTR [edi-0x5f122c98],esp
  415a9e:	mov    eax,0x9d47f7a9
  415aa3:	scas   eax,DWORD PTR es:[edi]
  415aa4:	mov    bl,0xf7
  415aa6:	jae    0x415acb
  415aa8:	jl     0x415a4b
  415aaa:	adc    eax,0xc43a9b79
  415aaf:	pop    ss
  415ab0:	mov    bl,0xdb
  415ab2:	xchg   esp,eax
  415ab3:	or     BYTE PTR [ebx],ah
  415ab5:	jo     0x415a90
  415ab7:	outs   dx,DWORD PTR ds:[esi]
  415ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab9:	inc    esp
  415aba:	pop    esi
  415abb:	shr    DWORD PTR [edx-0x39],0x68
  415abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac0:	adc    DWORD PTR [eax+ecx*2+0x6c7e0d9a],ecx
  415ac7:	or     bh,bh
  415ac9:	ds call 0x5b853f30
  415acf:	fnstsw WORD PTR [edi-0x6a]
  415ad2:	adc    al,0x81
  415ad4:	xchg   esi,eax
  415ad5:	inc    edi
  415ad6:	addr16 das 
  415ad8:	das    
  415ad9:	shr    DWORD PTR [eax],cl
  415adb:	and    cl,BYTE PTR [ecx-0x1267cfe6]
  415ae1:	cmp    bh,BYTE PTR [esp+edi*8]
  415ae4:	xchg   BYTE PTR [ebx-0x2],ch
  415ae7:	ja     0x415a75
  415ae9:	out    0x61,al
  415aeb:	adc    edx,DWORD PTR [edx+0x4c4a5b5c]
  415af1:	pop    edi
  415af2:	jle    0x415ac7
  415af4:	ds test al,0x83
  415af7:	jb     0x415a9e
  415af9:	call   0x481553af
  415afe:	add    edx,DWORD PTR [eax]
  415b00:	push   ebx
  415b01:	inc    edx
  415b02:	aam    0x11
  415b04:	leave  
  415b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b06:	mov    dh,0x18
  415b08:	les    ecx,FWORD PTR [edx+0x1c7ad915]
  415b0e:	shl    BYTE PTR [eax-0x68f73444],cl
  415b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b15:	add    al,0x9e
  415b17:	ja     0x415ab5
  415b19:	in     eax,dx
  415b1a:	loop   0x415ae2
  415b1c:	lods   al,BYTE PTR ds:[esi]
  415b1d:	lds    ecx,FWORD PTR [ebx]
  415b1f:	mov    ecx,0x64d50a13
  415b24:	add    eax,0x7bdcf23a
  415b29:	dec    ebx
  415b2a:	pop    es
  415b2b:	cmp    DWORD PTR ds:0x6c6e8183,0xa768bb10
  415b35:	popf   
  415b36:	inc    esp
  415b37:	push   DWORD PTR [edi]
  415b39:	loope  0x415b3a
  415b3b:	jo     0x415af3
  415b3d:	or     eax,0x4c560f4b
  415b42:	aaa    
  415b43:	aad    0x0
  415b45:	push   ebp
  415b46:	ret    
  415b47:	xchg   DWORD PTR [ebx+eiz*1],edx
  415b4a:	inc    ebp
  415b4b:	rcr    DWORD PTR [esi+eiz*4-0x55af86a],cl
  415b52:	arpl   ax,di
  415b54:	pop    ds
  415b55:	test   DWORD PTR ss:[ebx],ecx
  415b58:	sbb    al,0xaf
  415b5a:	inc    ebx
  415b5b:	push   ss
  415b5c:	into   
  415b5d:	inc    ecx
  415b5e:	int3   
  415b5f:	sub    edx,DWORD PTR [edi-0x5e]
  415b62:	dec    ebp
  415b63:	xchg   eax,ebx
  415b65:	jns    0x415b14
  415b67:	or     ebx,esp
  415b69:	js     0x415b95
  415b6b:	adc    al,0x95
  415b6d:	xchg   edi,eax
  415b6e:	ret    
  415b6f:	or     ebx,DWORD PTR [ebp+0x5365c3dd]
  415b75:	cmp    DWORD PTR [ecx],edi
  415b77:	sub    al,0xe4
  415b79:	call   0xe9124597
  415b7e:	dec    ebx
  415b7f:	and    BYTE PTR [esi],cl
  415b81:	aas    
  415b82:	jne    0x415c03
  415b84:	repnz add eax,0x2f4e16e0
  415b8a:	adc    DWORD PTR [ebx-0x3e0730e2],esp
  415b90:	ds mov dh,0x8a
  415b93:	mov    eax,ds:0x9a8e585f
  415b98:	aad    0xe0
  415b9a:	sbb    DWORD PTR [edx],ebp
  415b9c:	test   DWORD PTR ds:0x6827c250,ecx
  415ba2:	cmp    ebp,DWORD PTR ss:[edx-0x25a7a890]
  415ba9:	retf   
  415baa:	inc    ebx
  415bab:	in     eax,dx
  415bac:	mov    dh,0x4f
  415bae:	test   al,0x83
  415bb0:	push   edi
  415bb1:	and    al,BYTE PTR [esi+0x2fadf1ab]
  415bb7:	jb     0x415bb2
  415bb9:	imul   ebp,DWORD PTR [ebx-0x7f],0x36840ac8
  415bc0:	mov    eax,ds:0x1b970891
  415bc5:	mov    ecx,0x4d227326
  415bca:	xchg   edi,eax
  415bcb:	aaa    
  415bcc:	pop    ss
  415bcd:	mov    WORD PTR [ebx],?
  415bcf:	dec    edi
  415bd0:	test   al,0xd3
  415bd2:	(bad)  
  415bd4:	dec    esp
  415bd5:	gs test eax,0xc9185d76
  415bdb:	cli    
  415bdc:	aaa    
  415bdd:	std    
  415bde:	inc    ebp
  415bdf:	or     dl,ah
  415be1:	ds mov ecx,0xadab0e0f
  415be7:	imul   ecx,DWORD PTR [esi],0x16c15580
  415bed:	dec    ebx
  415bee:	jmp    0xfd1264e3
  415bf3:	test   BYTE PTR [eax-0x19],0x1a
  415bf7:	sbb    al,0xaf
  415bf9:	fmul   st(2),st
  415bfb:	xchg   esp,eax
  415bfc:	mov    dl,0x5b
  415bfe:	mov    BYTE PTR [edi],ch
  415c00:	pushf  
  415c01:	mov    al,es:0xa3f4b23c
  415c07:	mov    al,0x2e
  415c09:	or     al,0x3a
  415c0b:	and    ebp,DWORD PTR [eax]
  415c0d:	test   ah,ah
  415c0f:	adc    al,0xa0
  415c11:	imul   esp,DWORD PTR [edi],0x6c92c7f7
  415c17:	sub    edi,edi
  415c19:	mov    ch,0x31
  415c1b:	pop    ebx
  415c1c:	mov    al,0x40
  415c1e:	imul   edx,DWORD PTR [edi],0x4ca425ee
  415c24:	mov    al,0xd
  415c26:	lds    ebp,FWORD PTR [edx-0x3c]
  415c29:	hlt    
  415c2a:	sub    ebp,DWORD PTR [eax+0x109a465f]
  415c30:	push   cs
  415c31:	xchg   ecx,eax
  415c32:	or     DWORD PTR [edi-0x15],esi
  415c35:	repnz fwait
  415c37:	ins    BYTE PTR es:[edi],dx
  415c38:	std    
  415c39:	fdivr  DWORD PTR [esi+eax*2]
  415c3c:	test   eax,0x6c775851
  415c41:	mov    DWORD PTR [esi-0x65],eax
  415c44:	sbb    dh,ah
  415c46:	ins    BYTE PTR es:[edi],dx
  415c47:	test   BYTE PTR [ebp-0x1370a31e],bh
  415c4d:	shl    BYTE PTR [ebx],cl
  415c4f:	pop    ds
  415c50:	and    BYTE PTR [esi+edi*2-0x4029e191],ch
  415c57:	in     eax,0x9a
  415c59:	das    
  415c5a:	shr    cl,0x9e
  415c5d:	push   es
  415c5e:	ret    0x3f1a
  415c61:	adc    eax,esp
  415c63:	stos   BYTE PTR es:[edi],al
  415c64:	cmp    ebx,ebx
  415c66:	(bad)  
  415c68:	ins    DWORD PTR es:[edi],dx
  415c69:	push   ebp
  415c6a:	sbb    esi,DWORD PTR [edx+0x22c6534a]
  415c70:	mov    dh,BYTE PTR [ecx-0x7b4bc23a]
  415c76:	aaa    
  415c77:	or     eax,0x174e2db7
  415c7c:	outs   dx,BYTE PTR ds:[esi]
  415c7d:	inc    ebx
  415c7e:	sub    eax,0xae234459
  415c83:	sub    al,0x66
  415c85:	jmp    0x415c32
  415c87:	jg     0x415c94
  415c89:	jmp    0xb69db57a
  415c8e:	out    0x78,al
  415c90:	or     ebp,DWORD PTR [esi-0x5df6c3e2]
  415c96:	cmp    DWORD PTR [ebp+0x9],ebx
  415c99:	retf   
  415c9a:	sti    
  415c9b:	fwait
  415c9c:	repnz and ah,ah
  415c9f:	jb     0x415ca2
  415ca1:	jge    0x415d08
  415ca3:	dec    edx
  415ca4:	gs aaa 
  415ca6:	test   DWORD PTR [edx+0x1b],esi
  415ca9:	jae    0x415d1d
  415cab:	lods   al,BYTE PTR ds:[esi]
  415cac:	mov    al,0x86
  415cae:	sub    BYTE PTR [edx],al
  415cb0:	clc    
  415cb1:	ror    BYTE PTR [esi+0x16],1
  415cb4:	loope  0x415c98
  415cb6:	ror    BYTE PTR ds:0xdacec6c5,1
  415cbc:	sbb    al,0x45
  415cbe:	jbe    0x415cb5
  415cc0:	jecxz  0x415ca4
  415cc2:	push   esp
  415cc3:	cmp    ebp,esp
  415cc5:	xchg   dl,cl
  415cc7:	gs dec ebp
  415cc9:	push   esp
  415cca:	and    al,0xd0
  415ccc:	shr    edx,1
  415cce:	jmp    0x415d25
  415cd0:	stos   DWORD PTR es:[edi],eax
  415cd1:	addr16 pop ecx
  415cd3:	lea    esp,[ecx+ecx*8+0x33]
  415cd7:	mov    eax,0x4be8c3c6
  415cdc:	imul   DWORD PTR [eax]
  415cde:	aas    
  415cdf:	jecxz  0x415d15
  415ce1:	cmc    
  415ce2:	xor    DWORD PTR [ebp+0x3ff7f1a2],edx
  415ce8:	retf   
  415ce9:	cmc    
  415cea:	stos   BYTE PTR es:[edi],al
  415ceb:	mov    esi,0x6f5a3260
  415cf0:	pop    ds
  415cf1:	test   DWORD PTR [bp+di],ecx
  415cf4:	test   DWORD PTR [edi+0x6b9cbc82],0x3f8c7217
  415cfe:	ret    0x9d8c
  415d01:	mov    al,ds:0x7260ea85
  415d06:	sub    DWORD PTR [ecx+0x3e],ecx
  415d09:	cmp    ch,BYTE PTR [ecx-0x49ba798f]
  415d0f:	lods   eax,DWORD PTR ds:[esi]
  415d10:	push   ss
  415d11:	push   ecx
  415d12:	jbe    0x415d3d
  415d14:	pop    esp
  415d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d16:	jb     0x415d58
  415d18:	(bad)  
  415d19:	leave  
  415d1a:	xchg   esi,eax
  415d1b:	sbb    al,0x55
  415d1d:	(bad)  
  415d1f:	sbb    eax,DWORD PTR [ebp-0x5750c77]
  415d25:	imul   ecx,esi,0xffffff90
  415d28:	add    edi,0xffffff9d
  415d2b:	out    0x4a,eax
  415d2d:	jae    0x415cbb
  415d2f:	sub    eax,0x64160732
  415d34:	fldcw  WORD PTR [edi]
  415d36:	cmp    DWORD PTR [eax-0xc],edx
  415d39:	push   0xfffffffe
  415d3b:	mov    al,BYTE PTR [eax+0x40d2c9e]
  415d41:	(bad)  
  415d42:	arpl   WORD PTR [esi+0x54008268],cx
  415d48:	sti    
  415d49:	ret    
  415d4a:	dec    esi
  415d4b:	lds    esi,FWORD PTR [ebx]
  415d4d:	jnp    0x415d13
  415d4f:	sbb    bh,BYTE PTR [eax+0xf785053]
  415d55:	out    0xb1,eax
  415d57:	imul   ecx,DWORD PTR [ebx+0x4e7d0adb],0x4bb1997f
  415d61:	(bad)  [eax+esi*4+0x68]
  415d65:	xchg   esi,eax
  415d66:	cmp    dh,BYTE PTR [edi+ecx*1]
  415d69:	pop    eax
  415d6a:	jmp    0x7da00f50
  415d6f:	mov    ebp,0xaeb59372
  415d74:	mov    dl,0xeb
  415d76:	fiadd  DWORD PTR [ecx-0x4e37c095]
  415d7c:	jb     0x415d0d
  415d7e:	lock mov ah,0x25
  415d81:	cs mov ah,0xfe
  415d84:	sbb    DWORD PTR ds:0x92ade37,esi
  415d8a:	jae    0x415d12
  415d8c:	mov    eax,0xa0cf5127
  415d91:	punpcklbw mm3,mm0
  415d94:	imul   ebp,edx,0xffffff8c
  415d97:	into   
  415d98:	addr16 je 0x415d99
  415d9b:	nop
  415d9c:	(bad)  
  415d9d:	in     al,dx
  415d9e:	popa   
  415d9f:	repnz daa 
  415da1:	mov    ch,0xcf
  415da3:	dec    edx
  415da4:	aam    0xbe
  415da6:	mov    ebx,0x70af526f
  415dab:	push   edi
  415dac:	fcmovnbe st,st(2)
  415dae:	aad    0x12
  415db0:	loope  0x415d95
  415db2:	push   0x5a
  415db4:	dec    ebx
  415db5:	inc    esi
  415db6:	push   es
  415db7:	iret   
  415db8:	mov    al,0x37
  415dba:	or     BYTE PTR [edi-0x7f],cl
  415dbd:	push   cs
  415dbe:	dec    ecx
  415dbf:	pop    ss
  415dc0:	loopne 0x415de0
  415dc2:	inc    edx
  415dc3:	aam    0x68
  415dc5:	aas    
  415dc6:	pop    es
  415dc7:	mov    dl,0x6
  415dc9:	cwde   
  415dca:	cld    
  415dcb:	xor    DWORD PTR [eax-0x6716df27],ebx
  415dd1:	neg    cl
  415dd3:	imul   ebp,DWORD PTR [edx],0xffffff91
  415dd6:	push   edi
  415dd7:	jae    0x415da8
  415dd9:	(bad)  
  415dda:	sub    eax,0xeaaad1e4
  415ddf:	mov    ebx,0xbe33e6a
  415de4:	les    edi,FWORD PTR [edi+0x3291fd54]
  415dea:	push   ebx
  415deb:	xchg   esi,eax
  415dec:	outs   dx,DWORD PTR ds:[esi]
  415ded:	sub    eax,0x7ab329b1
  415df2:	fdiv   QWORD PTR [eax-0x95a76d3]
  415df8:	sbb    ebp,esi
  415dfa:	retf   
  415dfb:	mov    edx,0xe0cc1ed7
  415e00:	lahf   
  415e01:	pusha  
  415e02:	add    DWORD PTR [edi-0x2f],ebp
  415e05:	retf   
  415e06:	iret   
  415e07:	mov    ecx,DWORD PTR [esi]
  415e09:	je     0x415e1b
  415e0b:	xchg   esi,eax
  415e0c:	pushf  
  415e0d:	inc    ebp
  415e0e:	stos   DWORD PTR es:[edi],eax
  415e0f:	ret    
  415e10:	sbb    dl,ch
  415e12:	mov    ?,WORD PTR [edx-0x78203dc2]
  415e18:	mov    edx,0xa639734e
  415e1d:	clc    
  415e1e:	add    BYTE PTR [ebp-0x636b713c],cl
  415e24:	jne    0x415dbe
  415e26:	jle    0x415e99
  415e28:	in     eax,dx
  415e29:	dec    ebp
  415e2a:	jnp    0x415e41
  415e2c:	icebp  
  415e2d:	fist   WORD PTR [ecx+ecx*2]
  415e30:	popf   
  415e31:	lock jb 0x415e28
  415e34:	inc    ebp
  415e35:	imul   DWORD PTR [edi-0x70]
  415e38:	data16 test BYTE PTR [ebx-0x736b1a2e],bh
  415e3f:	pushf  
  415e40:	mov    ds:0xddf384a6,eax
  415e45:	pop    eax
  415e46:	jnp    0x415e56
  415e48:	fs adc eax,0xda576860
  415e4e:	add    bl,BYTE PTR [edx-0x27c28605]
  415e54:	ror    al,cl
  415e56:	or     eax,0x4a096bf2
  415e5b:	xchg   BYTE PTR [esi],bh
  415e5d:	mov    bl,0x81
  415e5f:	and    cl,ah
  415e61:	mov    bh,0x2e
  415e63:	dec    esi
  415e64:	push   es
  415e65:	jp     0x415dec
  415e67:	icebp  
  415e68:	adc    BYTE PTR [ebp-0x6d],bh
  415e6b:	dec    ecx
  415e6c:	inc    ecx
  415e6d:	pop    ecx
  415e6e:	push   ecx
  415e6f:	enter  0xe2a6,0x9a
  415e73:	jmp    0x859647a1
  415e78:	cmp    DWORD PTR [ebx+0x5b4aba01],edx
  415e7e:	test   BYTE PTR [eax],bh
  415e80:	or     DWORD PTR [ebp+0x74248b05],ebx
  415e86:	fisub  DWORD PTR [eax]
  415e88:	fdiv   QWORD PTR ds:0x5d11dda2
  415e8e:	pop    edx
  415e8f:	(bad)  
  415e90:	mov    eax,0x320d5ee4
  415e95:	cs test eax,0xb5a03454
  415e9b:	cmp    eax,0x31567764
  415ea0:	inc    ecx
  415ea1:	sub    dl,ah
  415ea3:	fchs   
  415ea5:	sbb    BYTE PTR [eax+ebp*2-0x3818fa92],0x16
  415ead:	es sub ecx,esi
  415eb0:	addr16 dec eax
  415eb2:	dec    ecx
  415eb3:	popa   
  415eb4:	dec    edx
  415eb5:	push   ds
  415eb6:	les    edx,FWORD PTR [ecx]
  415eb8:	enter  0xff69,0x4
  415ebc:	adc    DWORD PTR [edi],esi
  415ebe:	loope  0x415ec8
  415ec0:	gs dec ecx
  415ec2:	jne    0x415f25
  415ec4:	xchg   ebp,eax
  415ec5:	mul    DWORD PTR [ebx-0x6b981736]
  415ecb:	jg     0x415efa
  415ecd:	xchg   ecx,eax
  415ece:	dec    edi
  415ecf:	mov    al,ds:0x6e455c79
  415ed4:	cmp    DWORD PTR [esp+esi*4+0x65ade586],ecx
  415edb:	ror    BYTE PTR gs:[eax-0x3748d3db],1
  415ee2:	dec    ecx
  415ee3:	aad    0x2
  415ee5:	lahf   
  415ee6:	add    ebx,DWORD PTR [eax-0x4684401c]
  415eec:	sbb    BYTE PTR [edx+0x2b],dh
  415eef:	push   es
  415ef0:	fisttp WORD PTR [esi+0x56420458]
  415ef6:	jg     0x415ebc
  415ef8:	xor    dh,BYTE PTR ds:0xc0f1c2f5
  415efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eff:	jo     0x415f11
  415f01:	sub    esp,DWORD PTR [edx-0x7de99e06]
  415f07:	cmp    eax,0x4b4268c6
  415f0c:	dec    edx
  415f0d:	push   ebp
  415f0e:	sbb    BYTE PTR [eax],ch
  415f10:	icebp  
  415f11:	inc    eax
  415f12:	jg     0x415f48
  415f14:	hlt    
  415f15:	jbe    0x415edd
  415f17:	loope  0x415ea9
  415f19:	cwde   
  415f1a:	aaa    
  415f1b:	add    cl,BYTE PTR [ebx-0x51]
  415f1e:	push   esp
  415f1f:	arpl   WORD PTR [esi+0x6fec2f6e],ax
  415f25:	and    ah,BYTE PTR ds:0x21cd95f9
  415f2b:	mov    ah,0x37
  415f2d:	js     0x415f69
  415f2f:	(bad)  
  415f30:	mov    edi,0xe332f623
  415f35:	jg     0x415f29
  415f37:	sti    
  415f38:	les    eax,FWORD PTR [edx+0x45]
  415f3b:	outs   dx,DWORD PTR ds:[esi]
  415f3c:	xchg   DWORD PTR [ecx-0xf9e36b4],ebx
  415f42:	arpl   WORD PTR [edx],cx
  415f44:	and    BYTE PTR [edx+0x38],bl
  415f47:	xchg   BYTE PTR [esi-0x27],ch
  415f4a:	pop    ebp
  415f4b:	cld    
  415f4c:	cmp    al,0x33
  415f4e:	dec    esp
  415f4f:	shr    DWORD PTR [eax+0x55bc96b1],0x93
  415f56:	imul   ebp,DWORD PTR [ebp-0x20],0x62aabcf
  415f5d:	cmp    al,0xda
  415f5f:	cmp    edx,edx
  415f61:	lds    esi,FWORD PTR [ebp-0x5c2ddd0d]
  415f67:	es xchg ch,ah
  415f6a:	sbb    eax,0xa06205b2
  415f6f:	jle    0x415ef9
  415f71:	sbb    eax,0x70947666
  415f76:	test   DWORD PTR [ebp+eiz*4+0x2e4c1b6a],ecx
  415f7d:	inc    ebp
  415f7e:	cmp    al,0x33
  415f80:	jns    0x415f2e
  415f82:	data16 ins BYTE PTR es:[edi],dx
  415f84:	mov    DWORD PTR [ebx+0x5d],esp
  415f87:	bnd jno 0x415f51
  415f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8b:	adc    BYTE PTR [edi+0x598a86b8],bl
  415f91:	cmp    BYTE PTR [ebx+0x39],0x72
  415f95:	leave  
  415f96:	mov    BYTE PTR [edi-0x18],bl
  415f99:	jns    0x415ff1
  415f9b:	add    al,0x74
  415f9d:	mov    fs:0xe844494d,al
  415fa3:	jbe    0x416022
  415fa5:	add    ah,BYTE PTR [ecx-0x1159a570]
  415fab:	aam    0xe0
  415fad:	or     bh,BYTE PTR [edx-0x63]
  415fb0:	lds    ebp,FWORD PTR [esi+ebp*4]
  415fb3:	arpl   WORD PTR [edi],cx
  415fb5:	add    edi,esi
  415fb7:	inc    esp
  415fb8:	add    al,0xc3
  415fba:	je     0x415fc7
  415fbc:	pop    edi
  415fbd:	lds    esi,FWORD PTR [eax-0x561ee4e6]
  415fc3:	es into 
  415fc5:	pop    esp
  415fc6:	ja     0x415fbc
  415fc8:	sbb    ecx,DWORD PTR [ecx+eiz*8+0x2650c9e1]
  415fcf:	sbb    ebp,esp
  415fd1:	jae    0x41602d
  415fd3:	mov    ah,0x62
  415fd6:	cmp    eax,DWORD PTR [ebx-0x38b0ea9f]
  415fdc:	mov    bh,0xa0
  415fde:	pusha  
  415fdf:	inc    esi
  415fe0:	int3   
  415fe1:	or     ebx,esi
  415fe3:	sbb    dl,BYTE PTR [ebp+0x10968675]
  415fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fea:	adc    edx,0xffffffaa
  415fed:	push   0x345d098d
  415ff2:	rcr    ebx,0x6b
  415ff5:	or     eax,0x8e15f1bf
  415ffa:	std    
  415ffb:	jb     0x416053
  415ffd:	cdq    
  415ffe:	clc    
  415fff:	add    esp,DWORD PTR [edx-0x46]
  416002:	into   
  416003:	fcmovbe st,st(3)
  416005:	inc    eax
  416006:	jne    0x415fc3
  416008:	mov    al,0xfc
  41600a:	push   eax
  41600b:	mov    ah,0x92
  41600d:	pop    ebx
  41600e:	and    dl,bl
  416010:	jge    0x415ffe
  416012:	icebp  
  416013:	cmp    ch,BYTE PTR [ecx-0x3a1e124]
  416019:	pop    edx
  41601a:	test   al,0xdb
  41601c:	cld    
  41601d:	lods   eax,DWORD PTR ds:[esi]
  41601e:	pop    ebx
  41601f:	(bad)  
  416020:	cmc    
  416021:	sbb    eax,0x70b50ab0
  416026:	adc    eax,DWORD PTR [edi+0x52]
  416029:	das    
  41602a:	cld    
  41602b:	into   
  41602c:	dec    esi
  41602d:	bound  esi,QWORD PTR [eax]
  41602f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416030:	xor    ebp,DWORD PTR [esp+ecx*4-0x69]
  416034:	jno    0x415fca
  416036:	daa    
  416037:	aad    0x60
  416039:	push   edi
  41603a:	push   cs
  41603b:	les    edx,FWORD PTR [ebx-0x61179c6a]
  416041:	jle    0x4160be
  416043:	je     0x415ff0
  416045:	sub    al,0xe2
  416047:	outs   dx,DWORD PTR ds:[esi]
  416048:	push   cs
  416049:	ds jne 0x41608c
  41604c:	adc    al,0x3b
  41604e:	jl     0x41609b
  416050:	cmp    al,0x64
  416052:	inc    eax
  416053:	(bad)
  416058:	nop
  416059:	sbb    al,0xbf
  41605c:	fmul   QWORD PTR [eax-0x44abb296]
  416062:	ret    
  416063:	push   ebp
  416064:	rcl    DWORD PTR [edx],0xc3
  416067:	jae    0x415fee
  416069:	sub    al,0xf2
  41606b:	dec    ecx
  41606c:	pop    edi
  41606d:	stos   BYTE PTR es:[edi],al
  41606e:	sahf   
  41606f:	jae    0x416012
  416071:	dec    edx
  416072:	mov    ebp,DWORD PTR [esi]
  416074:	(bad)  
  416076:	test   DWORD PTR ds:0x8f42fa4c,ebx
  41607c:	sbb    BYTE PTR [esi+0x42102c24],bl
  416082:	jecxz  0x416098
  416084:	fidiv  WORD PTR [esi]
  416086:	les    edx,FWORD PTR [ecx-0x41a63aa1]
  41608c:	stc    
  41608d:	add    eax,0x826a294f
  416092:	dec    esp
  416093:	add    dl,BYTE PTR [edi+0x5323caee]
  416099:	verr   WORD PTR [eax]
  41609c:	cli    
  41609d:	jp     0x4160d4
  41609f:	out    0x23,eax
  4160a1:	test   al,0xd6
  4160a3:	mov    ds:0xb30f32ba,eax
  4160a8:	data16 mov ds:0x708063e9,al
  4160ae:	cmp    ah,cl
  4160b0:	jmp    0x41611c
  4160b2:	mov    bh,0x72
  4160b4:	mov    esp,0x4310ca10
  4160b9:	bswap  esp
  4160bb:	mov    ecx,0xcc28528a
  4160c0:	and    dl,al
  4160c2:	or     DWORD PTR [ecx+0x21ca5dfc],eax
  4160c8:	(bad)  
  4160c9:	jmp    0xb0b99e95
  4160ce:	pop    esp
  4160cf:	inc    esi
  4160d0:	fmulp  st(4),st
  4160d2:	mov    es,ebx
  4160d4:	dec    edx
  4160d5:	fcomp  DWORD PTR [ebx]
  4160d7:	lods   eax,DWORD PTR ds:[esi]
  4160d8:	shl    DWORD PTR [ebx+eiz*4],1
  4160db:	dec    ecx
  4160dc:	(bad)  
  4160dd:	pop    eax
  4160de:	data16 rcl BYTE PTR [ebp+0x7c42f084],1
  4160e5:	add    bh,BYTE PTR [ecx+0x48656a43]
  4160eb:	cs ds add ebp,edx
  4160ef:	repnz xchg ebp,eax
  4160f1:	sbb    al,0xd7
  4160f3:	push   0x9
  4160f5:	xchg   DWORD PTR [esi],eax
  4160f7:	mov    bl,BYTE PTR [eax-0x42ebefd6]
  4160fd:	xchg   ecx,eax
  4160fe:	push   ds
  4160ff:	mov    bl,0x7d
  416101:	mov    esp,0x1d9cc192
  416106:	repnz pop edx
  416108:	loope  0x4160ee
  41610a:	push   ds
  41610b:	mov    ah,0xea
  41610d:	pop    ds
  41610e:	enter  0xb546,0xe3
  416112:	pop    ebx
  416113:	das    
  416114:	sub    dl,dl
  416116:	cmp    BYTE PTR [edx+edx*1+0x42],ah
  41611a:	ret    
  41611b:	xchg   edx,eax
  41611c:	mov    ch,0xa8
  41611e:	sbb    BYTE PTR [ecx],bl
  416120:	xor    eax,0xbd43f94a
  416125:	sbb    DWORD PTR [ecx+eiz*8+0x693ecdcb],ebx
  41612c:	ins    BYTE PTR es:[edi],dx
  41612d:	xor    eax,0x58867499
  416132:	inc    ecx
  416133:	ds daa 
  416135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416136:	xor    DWORD PTR [edi+eiz*1+0x6],edx
  41613a:	je     0x416156
  41613c:	stos   DWORD PTR es:[edi],eax
  41613d:	mov    edi,DWORD PTR [edx-0x4f]
  416140:	or     eax,0x77d2802c
  416145:	repnz in al,0xe6
  416148:	jmp    0x416126
  41614a:	shl    dh,1
  41614c:	stos   DWORD PTR es:[edi],eax
  41614d:	add    DWORD PTR [ebp+0x1385ddf0],0x351c9aef
  416157:	out    dx,eax
  416158:	out    0x41,al
  41615a:	pop    ds
  41615b:	les    ebp,FWORD PTR [ebx-0x7f]
  41615e:	mov    bl,0xae
  416160:	adc    dh,dh
  416162:	lahf   
  416163:	mov    edx,0xb65d6fb2
  416168:	lds    edx,FWORD PTR [ecx+0x76]
  41616b:	sar    DWORD PTR [ecx],cl
  41616d:	sbb    BYTE PTR [ebx+0x6],ch
  416170:	cwde   
  416171:	in     al,dx
  416172:	test   eax,0x7a494498
  416177:	jmp    0x41615e
  416179:	dec    edi
  41617a:	mov    bh,BYTE PTR [bx-0x19cd]
  41617f:	cmp    BYTE PTR [ebp+0x2e],0x22
  416183:	push   0x7b
  416185:	mov    al,ds:0xf4f7c981
  41618a:	inc    eax
  41618b:	sbb    BYTE PTR [esi-0x4b],dl
  41618e:	mov    BYTE PTR [ebx+0x7f],0xd2
  416192:	test   BYTE PTR [esi-0x63cdfb52],dh
  416198:	fs xchg eax,eax
  41619b:	(bad)
  41619e:	inc    edx
  41619f:	rol    BYTE PTR [ebp-0x6db88c32],0xb9
  4161a6:	icebp  
  4161a7:	push   cs
  4161a8:	and    BYTE PTR [edi-0x1249ddab],bh
  4161ae:	std    
  4161af:	add    dh,ah
  4161b1:	cmp    esp,DWORD PTR [edi]
  4161b3:	cmp    ebx,DWORD PTR [edi+esi*8-0x1c299a4f]
  4161ba:	repz mov dl,BYTE PTR [edi+0x75]
  4161be:	ins    BYTE PTR es:[edi],dx
  4161bf:	push   ebx
  4161c0:	prefetch BYTE PTR [ebp+0x39]
  4161c4:	rol    BYTE PTR [ebp+0x12f2042e],1
  4161ca:	sub    al,BYTE PTR [ecx+esi*1-0x354bab1a]
  4161d1:	push   ebx
  4161d2:	test   eax,0xfe88db92
  4161d7:	lea    ebp,[ecx-0x202863b7]
  4161dd:	popa   
  4161de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161df:	sub    BYTE PTR [ecx+0x54],ch
  4161e2:	mov    cl,0x29
  4161e4:	dec    ecx
  4161e5:	dec    edx
  4161e6:	pop    es
  4161e7:	adc    al,0x9a
  4161e9:	(bad)  
  4161ea:	dec    ebp
  4161eb:	push   esi
  4161ec:	fld    QWORD PTR [eax]
  4161ee:	mov    DWORD PTR [ecx-0x36290d04],esp
  4161f4:	dec    edx
  4161f5:	adc    eax,0x92749f9b
  4161fa:	xor    dh,BYTE PTR [eax-0x36bc3006]
  416200:	mov    ebp,0xab7fe079
  416205:	loop   0x41623e
  416207:	addr16 push cs
  416209:	outs   dx,BYTE PTR ds:[esi]
  41620a:	leave  
  41620b:	xor    eax,0x53539901
  416210:	shl    BYTE PTR [ecx],cl
  416212:	popf   
  416213:	stos   DWORD PTR es:[edi],eax
  416214:	and    al,0x59
  416216:	imul   esp,DWORD PTR [eax],0x42
  416219:	leave  
  41621a:	mov    ecx,DWORD PTR [edx-0x5070e86d]
  416220:	xadd   DWORD PTR [esi],ebx
  416223:	mov    bh,0x26
  416225:	aaa    
  416226:	and    ebx,DWORD PTR [ebx]
  416228:	inc    edx
  416229:	mov    dl,0x38
  41622b:	out    0x54,al
  41622d:	out    0xbb,eax
  41622f:	adc    esp,DWORD PTR [ebp-0x28]
  416232:	or     al,0xf7
  416234:	(bad)  
  416235:	int3   
  416236:	mov    dh,0x81
  416238:	pop    esi
  416239:	push   ebp
  41623a:	cmp    al,0x55
  41623c:	push   ecx
  41623d:	shr    bl,0x19
  416240:	pop    esp
  416241:	(bad)  
  416242:	jae    0x41623f
  416244:	mov    edi,0xb47e6c70
  416249:	repz (bad) 
  41624b:	shl    BYTE PTR [edx+0x3e3a66ab],cl
  416251:	pop    esi
  416252:	fs sub eax,0x31e69b3f
  416258:	aad    0xf
  41625a:	retf   0x73aa
  41625d:	lahf   
  41625e:	aad    0xf8
  416260:	rcr    BYTE PTR [esi-0xce3d686],1
  416266:	lock and cl,BYTE PTR [edi+0x63026a6d]
  41626d:	jge    0x41627b
  41626f:	inc    ebp
  416270:	es das 
  416272:	ja     0x416260
  416274:	dec    ebp
  416275:	mov    eax,ds:0x898d06d8
  41627a:	bound  ebx,QWORD PTR [eax]
  41627c:	pop    ebx
  41627d:	popa   
  41627e:	jmp    0xa2d1:0x2d32383d
  416285:	shl    DWORD PTR [ebp+0x116021bf],0xfe
  41628c:	aam    0x70
  41628e:	(bad)  
  41628f:	push   ds
  416290:	icebp  
  416291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416292:	lods   eax,DWORD PTR ds:[esi]
  416293:	dec    di
  416295:	rol    BYTE PTR [ebp+0x3dcbd227],0x60
  41629c:	mov    ebp,0x1ff22676
  4162a1:	jne    0x4162b4
  4162a3:	fild   WORD PTR [esi-0x4c2456c9]
  4162a9:	data16 shl BYTE PTR [si-0x38],cl
  4162ae:	popa   
  4162af:	add    bl,BYTE PTR [edx+0x3f78dcd4]
  4162b5:	repnz stc 
  4162b7:	fldenv [esi+0x3e]
  4162ba:	xchg   DWORD PTR [edx],edx
  4162bc:	cmp    DWORD PTR [eax],esi
  4162be:	inc    eax
  4162bf:	out    dx,eax
  4162c0:	js     0x41629d
  4162c2:	xor    al,0x4c
  4162c4:	mov    bl,0x10
  4162c6:	jge    0x4162bd
  4162c8:	(bad)  
  4162c9:	nop
  4162ca:	inc    edi
  4162cb:	leave  
  4162cc:	add    al,0x82
  4162ce:	jmp    0x575ca19c
  4162d3:	add    al,0xab
  4162d5:	rcl    al,0xce
  4162d8:	xor    eax,0xfc6d674f
  4162dd:	(bad)  
  4162de:	pusha  
  4162df:	jne    0x4162b5
  4162e1:	xor    cl,0xca
  4162e4:	jne    0x416275
  4162e6:	sar    BYTE PTR [edi],cl
  4162e8:	test   al,0xb1
  4162ea:	add    al,0x1
  4162ec:	adc    DWORD PTR [bx+di],0x7a
  4162f0:	sub    al,0xfd
  4162f2:	dec    ecx
  4162f3:	xchg   ebx,eax
  4162f4:	rol    BYTE PTR [edx-0x6e6c1f7f],cl
  4162fa:	or     al,BYTE PTR [edx+0x66]
  4162fd:	retf   
  4162fe:	mov    edx,0x8b45f4f1
  416303:	stos   BYTE PTR es:[edi],al
  416304:	fcom   QWORD PTR [ebx+edi*4]
  416307:	jmp    DWORD PTR [edi+0x78]
  41630a:	sar    edi,1
  41630c:	sbb    BYTE PTR [ebp-0x80],ch
  41630f:	ds stos DWORD PTR es:[edi],eax
  416311:	xor    BYTE PTR [ebx],dl
  416313:	(bad)  
  416314:	mov    WORD PTR [eax+esi*4+0x5e2aed4d],cs
  41631b:	cld    
  41631c:	ins    DWORD PTR es:[di],dx
  41631e:	scas   eax,DWORD PTR es:[edi]
  41631f:	add    ebx,DWORD PTR [ecx+esi*2]
  416322:	retf   0x28e2
  416325:	or     al,0x59
  416327:	int3   
  416328:	jle    0x41633c
  41632a:	add    al,0x22
  41632c:	(bad)  
  41632d:	shl    DWORD PTR [ecx],1
  41632f:	and    al,BYTE PTR [edi+0x66eddc8a]
  416335:	nop
  416336:	sub    edx,ecx
  416338:	shl    esp,0x8c
  41633b:	leave  
  41633c:	imul   ebx,DWORD PTR [ebp+0x3b],0x66c3de3f
  416343:	xchg   esi,eax
  416344:	adc    eax,0x31fbcc7f
  416349:	push   edi
  41634a:	mov    bl,0x94
  41634c:	mov    dl,0x73
  41634e:	adc    eax,0x80824ae8
  416353:	sub    al,0x96
  416355:	and    BYTE PTR [edi+0x40c24b],bl
  41635b:	(bad)  
  41635c:	xor    eax,0xaa74ff9c
  416361:	mov    dl,0x48
  416363:	inc    esp
  416364:	jns    0x41638c
  416366:	int    0x17
  416368:	pop    edx
  416369:	outs   dx,BYTE PTR ds:[esi]
  41636a:	sub    BYTE PTR cs:[eax+0x6eb40433],ch
  416371:	adc    bh,BYTE PTR [edi+eiz*2-0x6]
  416375:	xor    DWORD PTR [edx],0xffffff83
  416378:	call   0xfcb7fd83
  41637d:	call   0x4c72b0a8
  416382:	in     eax,0xf1
  416384:	data16 stos BYTE PTR es:[edi],al
  416386:	mov    cl,0xcf
  416388:	cli    
  416389:	mov    ds:0x72d838d9,eax
  41638e:	inc    ebx
  41638f:	pop    ebx
  416390:	mov    eax,ds:0x70a708d2
  416395:	sub    ebp,DWORD PTR [ebx-0x80]
  416398:	jge    0x416370
  41639a:	(bad)  
  41639b:	pop    ds
  41639c:	cdq    
  41639d:	into   
  41639e:	rcl    DWORD PTR [ecx+ecx*2+0x19],cl
  4163a2:	shl    BYTE PTR [ecx+0x830b298],cl
  4163a8:	mov    WORD PTR [eax+0xb681d46],fs
  4163ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163af:	dec    edi
  4163b0:	inc    esi
  4163b1:	ins    BYTE PTR es:[edi],dx
  4163b2:	rcr    DWORD PTR [ebp-0x71ec6f81],0x92
  4163b9:	pop    edi
  4163ba:	in     al,dx
  4163bb:	ret    0x4118
  4163be:	or     eax,0x3188339a
  4163c3:	sub    dh,al
  4163c5:	push   eax
  4163c6:	retf   
  4163c7:	push   esp
  4163c8:	stc    
  4163c9:	loopne 0x4163dc
  4163cb:	fs out 0x6a,eax
  4163ce:	dec    esp
  4163cf:	cmp    al,0x90
  4163d1:	dec    ebp
  4163d2:	sbb    al,BYTE PTR [eax-0x34]
  4163d5:	stc    
  4163d6:	repnz (bad) 
  4163d8:	push   ecx
  4163d9:	adc    esp,esp
  4163db:	push   edi
  4163dc:	push   eax
  4163dd:	inc    eax
  4163de:	es jae 0x41640e
  4163e1:	add    eax,0x98ffd59f
  4163e6:	aam    0xea
  4163e8:	iret   
  4163e9:	jns    0x4163f3
  4163eb:	rol    DWORD PTR [edx+ebx*2],0x80
  4163ef:	dec    esi
  4163f0:	xchg   edx,eax
  4163f1:	pop    ebp
  4163f2:	sar    DWORD PTR [ebx-0x256a126c],cl
  4163f8:	or     BYTE PTR [ecx-0x1119d74e],bl
  4163fe:	ror    dl,cl
  416400:	sahf   
  416401:	lahf   
  416402:	mov    DWORD PTR [ebx-0x6bda0854],ebp
  416408:	sbb    ebx,edi
  41640a:	pop    ds
  41640b:	jl     0x4163ba
  41640d:	cmp    DWORD PTR [esi],edi
  41640f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416410:	or     bh,BYTE PTR [ebp+0x25]
  416413:	add    ebx,esi
  416415:	xor    bh,ch
  416417:	sbb    BYTE PTR [edi],ah
  416419:	(bad)  
  41641b:	shl    DWORD PTR [eax+esi*2-0x392653b1],1
  416422:	jb     0x416424
  416424:	mov    bl,0x7b
  416426:	cmp    dl,BYTE PTR [edi]
  416428:	je     0x4163e5
  41642a:	sub    dl,BYTE PTR [edx+0x5b]
  41642d:	out    dx,al
  41642e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642f:	add    eax,0xb1309508
  416434:	ror    DWORD PTR [eax],1
  416436:	test   esp,edi
  416438:	pop    esp
  416439:	or     BYTE PTR [edx],ch
  41643b:	xchg   BYTE PTR [edx],cl
  41643d:	pop    esi
  41643e:	fs fs ins BYTE PTR es:[edi],dx
  416441:	aaa    
  416442:	aas    
  416443:	jge    0x4164a0
  416445:	mov    dh,0x46
  416447:	xchg   ebx,eax
  416448:	sar    BYTE PTR [esi],1
  41644a:	rcr    bh,cl
  41644c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41644d:	imul   eax,DWORD PTR [edi+eax*4+0x68],0xffffff87
  416452:	sub    edx,0x5d
  416455:	test   BYTE PTR [ebp+ebp*8-0x758d66fc],0xd5
  41645d:	cmp    ebp,DWORD PTR [edi-0x1b86efb4]
  416463:	(bad)  
  416464:	adc    al,0xf3
  416466:	dec    ecx
  416467:	adc    esi,esp
  416469:	in     eax,0xa5
  41646b:	xor    DWORD PTR [ebx-0x5ee80dcd],edx
  416471:	out    0x10,eax
  416473:	test   al,0xfb
  416475:	imul   esp,DWORD PTR [edx+esi*2+0x7dda23a8],0x6f
  41647d:	clc    
  41647e:	fiadd  DWORD PTR [edx-0x60]
  416481:	pop    ebp
  416482:	dec    eax
  416483:	retf   0x1809
  416486:	jno    0x41649c
  416488:	or     esi,DWORD PTR [esp+eax*1]
  41648b:	fcmovnb st,st(5)
  41648d:	jno    0x41643e
  41648f:	jle    0x416493
  416491:	je     0x41644a
  416493:	push   ds
  416494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416495:	enter  0x3008,0xd7
  416499:	ret    0x5f1f
  41649c:	pop    eax
  41649d:	in     al,0xb7
  41649f:	dec    esi
  4164a0:	dec    edi
  4164a1:	or     bh,BYTE PTR [eax+0x7f]
  4164a4:	sbb    cl,BYTE PTR [ecx+0x7146d229]
  4164aa:	scas   eax,DWORD PTR es:[edi]
  4164ab:	sar    DWORD PTR [esi+ebx*4-0x2e361ca2],0x92
  4164b3:	das    
  4164b4:	mov    edi,0xeb5e4160
  4164b9:	mov    edx,0x3122cc07
  4164be:	sbb    ebp,DWORD PTR [ecx]
  4164c0:	push   eax
  4164c1:	shl    DWORD PTR [esi-0x5dd33c17],cl
  4164c7:	xor    eax,0xf8fe7544
  4164cc:	mov    ebx,0x8d721fba
  4164d1:	sbb    bl,BYTE PTR [edx+0x65]
  4164d4:	jnp    0x416521
  4164d6:	(bad)  
  4164d8:	sub    ebx,ebx
  4164da:	jno    0x4164f2
  4164dc:	scas   al,BYTE PTR es:[edi]
  4164dd:	or     DWORD PTR [esi],ebp
  4164df:	jb     0x4164cb
  4164e1:	aaa    
  4164e2:	fwait
  4164e3:	(bad)  
  4164e5:	push   0xd67559ca
  4164ea:	sbb    DWORD PTR [ebx],ebp
  4164ec:	(bad)  
  4164ed:	lock inc ecx
  4164ef:	and    BYTE PTR [ebx+0x6a6d36a7],bh
  4164f5:	mov    ds:0xcbc5b2ba,al
  4164fa:	add    al,0x8d
  4164fc:	outs   dx,DWORD PTR ds:[esi]
  4164fd:	sub    BYTE PTR [ebx+0x547b0f25],bh
  416503:	inc    edi
  416504:	les    ebx,FWORD PTR [eax+0x1b89bfd6]
  41650a:	les    eax,FWORD PTR [eax+ebx*4-0x3c]
  41650e:	add    ecx,DWORD PTR [ebx+0x66]
  416511:	pop    edx
  416512:	imul   BYTE PTR [eax]
  416514:	inc    ecx
  416515:	into   
  416516:	xchg   esp,eax
  416517:	add    ebx,DWORD PTR [edi+0x77eaa912]
  41651d:	jmp    FWORD PTR [esi+esi*1+0x47aa5709]
  416524:	cwde   
  416525:	iret   
  416526:	dec    edx
  416527:	fisub  WORD PTR [esi-0xad43d7e]
  41652d:	rcr    BYTE PTR [ecx],1
  41652f:	mov    bl,0x24
  416531:	retf   
  416532:	cs or  eax,0xcea82f7c
  416538:	std    
  416539:	fs push 0xffffffa6
  41653c:	fnstsw WORD PTR [ebx-0x789f8f5b]
  416542:	jo     0x416530
  416544:	sub    al,0xbe
  416546:	push   esp
  416547:	iret   
  416548:	int3   
  416549:	not    DWORD PTR [esi+ebp*4+0x15]
  41654d:	fs cwde 
  41654f:	and    BYTE PTR [edi+0x4e],ah
  416552:	or     al,0xe0
  416554:	push   esp
  416555:	ja     0x4165c6
  416557:	jle    0x4165aa
  416559:	jnp    0x4164eb
  41655b:	scas   al,BYTE PTR es:[edi]
  41655c:	div    BYTE PTR [ebx]
  41655e:	sub    ch,BYTE PTR [eax-0x42c918e0]
  416564:	mov    bh,0x54
  416566:	xchg   ebp,eax
  416567:	dec    ebp
  416568:	icebp  
  416569:	dec    BYTE PTR [ecx+0x69]
  41656c:	test   BYTE PTR [edx-0x13f8ab96],dl
  416572:	pop    ecx
  416573:	in     al,dx
  416574:	cwde   
  416575:	popf   
  416576:	pop    ss
  416577:	adc    ebp,DWORD PTR [ecx-0x1b]
  41657a:	cli    
  41657b:	inc    eax
  41657c:	sbb    BYTE PTR [esi+0x2a332b8],ah
  416582:	cmp    dl,BYTE PTR [ebx-0x5be730ae]
  416588:	xchg   ebp,eax
  416589:	adc    eax,0xe5b330c0
  41658e:	ins    BYTE PTR es:[edi],dx
  41658f:	fs sub al,0xc1
  416592:	pop    es
  416593:	(bad)  
  416594:	pop    ebp
  416595:	cmp    eax,0x882cd6e9
  41659a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41659b:	fist   DWORD PTR [ebp+0x6b]
  41659e:	push   esp
  41659f:	cmp    ebp,DWORD PTR [esi+esi*2]
  4165a2:	bound  edi,QWORD PTR [ecx]
  4165a4:	jmp    FWORD PTR [edi]
  4165a6:	push   0x63
  4165a8:	lds    ebx,FWORD PTR [esi+0x1a]
  4165ab:	push   ecx
  4165ac:	push   esi
  4165ad:	arpl   WORD PTR [ebx+ecx*2-0x54cf4e3e],bx
  4165b4:	push   eax
  4165b5:	jbe    0x4165b5
  4165b7:	bound  ecx,QWORD PTR cs:[eax+0x5284c05b]
  4165be:	inc    edi
  4165bf:	push   0x77
  4165c1:	ror    BYTE PTR [ebp-0x66],1
  4165c4:	sub    DWORD PTR [bp-0x5998],ebp
  4165c9:	or     al,0x18
  4165cb:	(bad)  
  4165cc:	xor    BYTE PTR [eax+0x6c137376],al
  4165d2:	out    dx,al
  4165d3:	mov    dh,0x9f
  4165d5:	(bad)  
  4165d6:	mov    bh,0xf3
  4165d8:	(bad)  
  4165d9:	jbe    0x4165d0
  4165db:	sbb    eax,0x2e06df24
  4165e0:	adc    eax,0x426652c2
  4165e5:	add    dh,BYTE PTR [edi]
  4165e7:	je     0x4165d3
  4165e9:	xor    al,0x7d
  4165eb:	div    DWORD PTR [edi]
  4165ed:	mov    eax,0x23d0bfaf
  4165f2:	xlat   BYTE PTR ds:[ebx]
  4165f3:	inc    esp
  4165f4:	sub    eax,0xe01c6a65
  4165f9:	into   
  4165fa:	mov    ds:0x74535c6,al
  4165ff:	mov    ch,BYTE PTR [eax-0x1e]
  416602:	fidiv  DWORD PTR [ecx+0x1d]
  416605:	jne    0x4165f2
  416607:	or     eax,ecx
  416609:	push   es
  41660a:	jp     0x41661b
  41660c:	int3   
  41660d:	push   edx
  41660e:	js     0x41661e
  416610:	das    
  416611:	ds mov edx,0x4c990b4e
  416617:	sub    eax,0x3089726f
  41661c:	dec    ebp
  41661d:	pushf  
  41661e:	ins    DWORD PTR es:[edi],dx
  41661f:	fwait
  416620:	rol    BYTE PTR [eax-0x5091568e],0xac
  416627:	lods   al,BYTE PTR ds:[esi]
  416628:	pop    ds
  416629:	call   0x5e59cda7
  41662e:	sbb    al,0xdd
  416630:	out    0xa8,al
  416632:	das    
  416633:	cli    
  416634:	test   ecx,0x429d621a
  41663a:	xlat   BYTE PTR ds:[ebx]
  41663b:	or     al,0xf
  41663d:	scas   eax,DWORD PTR es:[edi]
  41663e:	xchg   ebx,eax
  41663f:	jbe    0x416648
  416641:	pop    ebx
  416642:	(bad)  
  416643:	retf   0xc88b
  416646:	xor    ecx,DWORD PTR [edx]
  416648:	mov    ch,0xb5
  41664a:	fldcw  WORD PTR [esi]
  41664c:	mov    ecx,0x161c6a12
  416651:	(bad)  
  416652:	dec    ebp
  416653:	icebp  
  416654:	jbe    0x416611
  416656:	ins    DWORD PTR es:[edi],dx
  416657:	retf   
  416658:	and    DWORD PTR [eax+0x37],esp
  41665b:	(bad)  
  41665c:	mov    ds:0x9e7e7fa5,eax
  416661:	test   DWORD PTR [eax-0x553ce8f],edi
  416667:	fldcw  WORD PTR [esi+0xc624ff4]
  41666d:	sub    al,0x70
  41666f:	dec    edx
  416670:	arpl   WORD PTR [ebp+0x5a726219],bp
  416676:	xor    al,0x49
  416678:	shl    BYTE PTR [edi],cl
  41667a:	add    BYTE PTR [edi],bh
  41667c:	pop    edx
  41667d:	add    eax,0x560d1d02
  416682:	jns    0x416650
  416684:	jmp    0x416675
  416686:	mov    ecx,0xfd6ecd5f
  41668b:	retf   0xa2d6
  41668e:	retf   
  41668f:	adc    DWORD PTR [eax+0x2d185ba1],eax
  416695:	adc    al,0xa7
  416697:	jmp    0x416664
  416699:	mov    dh,0xbd
  41669b:	in     eax,dx
  41669c:	scas   al,BYTE PTR es:[edi]
  41669d:	loope  0x4166c7
  41669f:	mov    bl,0xb5
  4166a1:	inc    ecx
  4166a2:	(bad)  
  4166a3:	push   ebx
  4166a4:	xlat   BYTE PTR ds:[ebx]
  4166a5:	stos   DWORD PTR es:[edi],eax
  4166a6:	cdq    
  4166a7:	cmp    BYTE PTR ds:0xecbb5007,al
  4166ad:	inc    eax
  4166ae:	pop    ebp
  4166af:	adc    eax,0x920fcc0d
  4166b4:	mov    dh,0xb5
  4166b6:	or     bh,cl
  4166b8:	adc    eax,0xc9c57c98
  4166bd:	or     eax,0x6036440
  4166c2:	sbb    ecx,DWORD PTR [ebp+0x39bc5f88]
  4166c8:	inc    esi
  4166c9:	cmp    eax,0xb686c686
  4166ce:	pusha  
  4166cf:	and    ebp,DWORD PTR cs:[esi+edi*1-0x29]
  4166d4:	jae    0x416698
  4166d6:	mov    eax,ds:0x750ed0f5
  4166dc:	mov    esi,0x1e3c9237
  4166e1:	mov    ecx,0xb255216a
  4166e6:	mov    edx,0x1dacca3a
  4166eb:	scas   eax,DWORD PTR es:[edi]
  4166ec:	inc    edi
  4166ed:	xor    DWORD PTR [edx],esp
  4166ef:	mov    ah,0x8
  4166f1:	retf   
  4166f2:	and    eax,0x296bf3c3
  4166f7:	xchg   dl,dl
  4166f9:	jle    0x4166eb
  4166fb:	or     DWORD PTR [ecx+0x78],edx
  4166fe:	ficom  DWORD PTR [ebx-0x2b]
  416701:	test   DWORD PTR [ebx-0x55],esp
  416704:	mov    bh,0x2c
  416706:	daa    
  416707:	clc    
  416708:	sbb    al,BYTE PTR [eax-0x3c]
  41670b:	mov    bh,0x9e
  41670d:	cmp    esp,DWORD PTR [ebx-0x6e]
  416710:	pop    ecx
  416711:	mov    DWORD PTR [edx+0x3c],esp
  416714:	inc    esp
  416715:	pushf  
  416716:	aaa    
  416717:	mov    ds:0x5d54a214,al
  41671c:	push   ebp
  41671d:	je     0x416746
  41671f:	lods   al,BYTE PTR ds:[esi]
  416720:	dec    esi
  416721:	push   esi
  416722:	(bad)  
  416723:	iret   
  416724:	xchg   esi,eax
  416725:	stos   DWORD PTR es:[edi],eax
  416726:	push   ebx
  416727:	sbb    ebp,ebx
  416729:	mov    cl,0x66
  41672b:	aas    
  41672c:	mul    DWORD PTR [ecx*1+0x1b15fc97]
  416733:	stos   BYTE PTR es:[edi],al
  416734:	sub    eax,0x716b6021
  416739:	out    0xfc,eax
  41673b:	rcl    DWORD PTR [edi+0x58e5fe5d],1
  416741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416742:	shl    DWORD PTR [esi],cl
  416744:	jb     0x416750
  416746:	mov    ebx,0x389ff617
  41674b:	mov    esp,0x80e6ff15
  416750:	pop    edx
  416751:	ss js  0x416752
  416754:	popf   
  416755:	(bad)  
  416757:	loope  0x416705
  416759:	jmp    0x5339:0x27ff119f
  416760:	cmp    DWORD PTR [ecx-0x76e7d0aa],esi
  416766:	lock mov al,ds:0xec22f363
  41676c:	int3   
  41676d:	adc    DWORD PTR [edi+0x5555bd4f],0xeff886cc
  416777:	and    DWORD PTR [ecx],edx
  416779:	inc    edi
  41677a:	fidiv  WORD PTR [ecx-0x43b1147f]
  416780:	jae    0x4167aa
  416782:	jae    0x4167ca
  416784:	lea    esp,[ebx]
  416786:	test   al,0xe3
  416788:	mov    WORD PTR [edi+eax*1+0x562bf024],ss
  41678f:	mov    DWORD PTR [ecx+0x234c51ac],eax
  416795:	adc    BYTE PTR [edi],bl
  416797:	cmp    BYTE PTR [esp+ecx*4],al
  41679a:	retf   
  41679b:	mov    ebx,0x2c0d59fd
  4167a0:	cs dec ebx
  4167a2:	adc    dl,dh
  4167a4:	add    bh,dl
  4167a6:	or     eax,0xc87de3f0
  4167ab:	repnz pop esp
  4167ad:	mov    al,ds:0x99dbb379
  4167b2:	cli    
  4167b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b4:	int    0x64
  4167b6:	xchg   edx,eax
  4167b7:	inc    ecx
  4167b8:	aam    0x94
  4167ba:	fsubr  st(4),st
  4167bc:	std    
  4167bd:	js     0x416804
  4167bf:	(bad)  
  4167c0:	arpl   sp,ax
  4167c2:	mov    ebp,0xe1bd0ca0
  4167c7:	call   DWORD PTR [eax]
  4167c9:	scas   al,BYTE PTR es:[edi]
  4167ca:	lea    esi,[edx+0x1f07f535]
  4167d0:	xchg   ebp,eax
  4167d1:	cmc    
  4167d2:	mov    bl,0xeb
  4167d4:	rcr    BYTE PTR [eax-0x22],cl
  4167d7:	mov    dh,dl
  4167d9:	mov    bl,0x63
  4167db:	add    BYTE PTR [esi+0x18e6abfd],ch
  4167e1:	xor    BYTE PTR [ebp-0x6059aed3],al
  4167e7:	jnp    0x4167a5
  4167e9:	call   0x2df0:0x4f18e4fe
  4167f0:	mov    eax,0x11ff4986
  4167f5:	sub    bh,ah
  4167f7:	xchg   ecx,eax
  4167f8:	imul   edi,DWORD PTR [ecx],0x2be56408
  4167fe:	aas    
  4167ff:	in     eax,dx
  416800:	sbb    bh,BYTE PTR [ebx-0x6d01c624]
  416806:	retf   
  416807:	popa   
  416808:	mov    BYTE PTR [edx+0x49915b30],0xb6
  41680f:	jl     0x4167ea
  416811:	inc    edx
  416812:	pop    ebx
  416813:	mov    eax,0x2ac6fb87
  416818:	dec    ebp
  416819:	bound  esi,QWORD PTR [eax+0xf]
  41681c:	sub    ah,BYTE PTR [eax+0x6d]
  41681f:	leave  
  416820:	out    dx,eax
  416821:	cs cld 
  416823:	sub    DWORD PTR [esi+0x36],edx
  416826:	popf   
  416827:	dec    edi
  416828:	loopne 0x416813
  41682a:	dec    ebp
  41682b:	mov    ah,0x65
  41682d:	clc    
  41682e:	cmp    ecx,DWORD PTR [edi]
  416830:	fild   DWORD PTR [esi+0x74]
  416833:	mov    cl,0x75
  416835:	jne    0x4167d0
  416837:	rcr    esi,cl
  416839:	(bad)  
  41683a:	xchg   edx,eax
  41683b:	cmp    DWORD PTR [ebp-0x8],eax
  41683e:	aam    0x28
  416840:	xor    al,0x58
  416842:	or     cl,0x2e
  416845:	mov    ?,WORD PTR [esi]
  416847:	mov    ebp,0x95492b5e
  41684c:	lea    eax,[esi+0x3b]
  41684f:	or     eax,0x913abe38
  416854:	jae    0x41682a
  416856:	inc    edx
  416857:	fsubr  QWORD PTR [ebx+eiz*8+0x53]
  41685b:	xor    eax,0xa96033da
  416860:	dec    eax
  416861:	sbb    ebx,0x7c
  416864:	xor    DWORD PTR [edi-0x46],ebp
  416867:	popa   
  416868:	xchg   edi,eax
  416869:	and    BYTE PTR [eax],0xe3
  41686c:	jecxz  0x4168cc
  41686e:	cmp    BYTE PTR [edx-0x586e941c],dh
  416874:	xor    ch,BYTE PTR [ebp+edi*2+0x5e]
  416878:	jb     0x4168a1
  41687a:	jo     0x416835
  41687c:	out    dx,al
  41687d:	push   esi
  41687e:	xchg   esi,eax
  41687f:	retf   0x300
  416882:	jmp    0x41689e
  416884:	mov    al,ds:0x1a615cb2
  416889:	pop    edx
  41688a:	xchg   ebp,eax
  41688b:	dec    eax
  41688c:	inc    eax
  41688d:	pusha  
  41688e:	retf   0x231e
  416891:	mul    al
  416893:	dec    esi
  416894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416895:	push   ss
  416896:	lds    esp,FWORD PTR [eax-0x5b]
  416899:	enter  0x9f62,0x0
  41689d:	pop    ebx
  41689e:	(bad)  
  41689f:	dec    edi
  4168a0:	lea    ecx,[esi+ebp*8]
  4168a3:	lahf   
  4168a4:	jb     0x416831
  4168a6:	inc    eax
  4168a7:	inc    esp
  4168a8:	sbb    esp,DWORD PTR [eax]
  4168aa:	clc    
  4168ab:	es mov esp,ss
  4168ae:	shr    DWORD PTR [esi-0x5b86425f],0x79
  4168b5:	and    dh,BYTE PTR [ebp-0x29f5b012]
  4168bb:	or     esi,DWORD PTR [edx-0x5924ade]
  4168c1:	jae    0x416938
  4168c3:	jmp    0x51895b7e
  4168c8:	shl    BYTE PTR [edi],cl
  4168ca:	pop    DWORD PTR [ecx-0x5044cc58]
  4168d0:	or     dh,BYTE PTR [edx+0x18]
  4168d3:	inc    esp
  4168d4:	repz inc esi
  4168d6:	pop    ebx
  4168d7:	cld    
  4168d8:	je     0x41691b
  4168da:	popf   
  4168db:	mov    bl,0x91
  4168dd:	dec    ebp
  4168de:	ins    BYTE PTR es:[edi],dx
  4168df:	add    al,0x3d
  4168e1:	xchg   edi,eax
  4168e2:	out    dx,eax
  4168e3:	sub    esi,ebx
  4168e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e6:	lock lods eax,DWORD PTR ds:[esi]
  4168e8:	jecxz  0x416906
  4168ea:	ret    
  4168eb:	jge    0x41688c
  4168ed:	(bad)  
  4168ee:	std    
  4168ef:	jb     0x41693e
  4168f1:	add    cl,al
  4168f3:	call   0xde5a:0x2aaf316a
  4168fa:	mov    ebp,0x15a10e7b
  4168ff:	push   ecx
  416900:	xor    BYTE PTR [eax-0x7ba87550],dl
  416906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416907:	bound  esp,QWORD PTR [edx-0x3161e7f5]
  41690d:	cmp    ebp,ebp
  41690f:	and    ah,BYTE PTR [ecx-0x23]
  416912:	imul   edx,DWORD PTR [esi+0x6215479c],0x41
  416919:	cli    
  41691a:	xor    dh,al
  41691c:	sbb    BYTE PTR [esi+0xb35c8b8],dh
  416922:	dec    ebx
  416923:	arpl   WORD PTR [ebp-0x1b1006a7],di
  416929:	push   esi
  41692a:	pop    ebx
  41692b:	adc    esp,DWORD PTR [eax+0x3a903b0a]
  416931:	pop    ds
  416932:	push   ebx
  416933:	xchg   ebx,eax
  416934:	mov    ds:0xe88f7e08,eax
  416939:	or     esi,ebx
  41693b:	xchg   ebp,eax
  41693c:	jb     0x41692f
  41693e:	sbb    DWORD PTR [ecx*1+0x635b9ebb],0x9595343
  416949:	and    DWORD PTR [ebx+0x46484276],0xfffffff4
  416950:	sbb    DWORD PTR [edx],eax
  416952:	stc    
  416953:	jae    0x4168d6
  416955:	mov    al,ds:0xd5f912cd
  41695a:	push   ds
  41695b:	jo     0x416992
  41695d:	outs   dx,BYTE PTR ds:[esi]
  41695e:	imul   ebp,DWORD PTR [ecx],0xa8b2f546
  416964:	fcomp  QWORD PTR [esi+0x1a351e7f]
  41696a:	mov    bh,0xf0
  41696c:	xchg   edx,eax
  41696d:	sahf   
  41696e:	dec    edi
  41696f:	mov    esp,0x3bfc0a34
  416975:	mov    al,ds:0xfed8c58c
  41697a:	push   edi
  41697b:	scas   al,BYTE PTR es:[edi]
  41697c:	into   
  41697d:	or     BYTE PTR [ecx+0x43],bh
  416980:	aas    
  416981:	(bad)  
  416983:	mov    edx,0x9118204b
  416988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416989:	pop    esp
  41698a:	and    BYTE PTR [ebx],dl
  41698c:	push   ss
  41698d:	push   0xffffffed
  41698f:	xchg   esi,eax
  416990:	mov    ah,0x9
  416992:	lds    ebp,FWORD PTR [esi]
  416994:	or     BYTE PTR ds:0x52a70a18,0x15
  41699b:	shl    BYTE PTR [edi+0x3b],1
  41699e:	das    
  41699f:	lods   eax,DWORD PTR ds:[esi]
  4169a0:	jo     0x41699c
  4169a2:	push   ebp
  4169a3:	pop    edi
  4169a4:	lahf   
  4169a5:	lods   eax,DWORD PTR ds:[esi]
  4169a6:	(bad)  
  4169a7:	mov    bh,0x6d
  4169a9:	push   cs
  4169aa:	and    eax,0xbd7bf30d
  4169af:	fwait
  4169b0:	and    eax,DWORD PTR cs:0xa7ecdaab
  4169b7:	push   cs
  4169b8:	ret    0xeca
  4169bb:	je     0x416960
  4169bd:	fidiv  WORD PTR [edx-0x50deffdf]
  4169c3:	jno    0x416a3c
  4169c5:	jb     0x416a2c
  4169c7:	int    0xd0
  4169c9:	inc    edi
  4169ca:	cmc    
  4169cb:	push   ebp
  4169cc:	inc    esp
  4169cd:	fs cmovb esp,edx
  4169d1:	add    eax,0x208188db
  4169d6:	xchg   ebp,eax
  4169d7:	scas   al,BYTE PTR es:[edi]
  4169d8:	(bad)
  4169db:	sbb    esi,eax
  4169dd:	fwait
  4169de:	mov    ecx,0xbc7ddd4c
  4169e3:	add    BYTE PTR [esi+0x49feed34],ch
  4169e9:	ins    DWORD PTR es:[edi],dx
  4169ea:	mov    esi,gs
  4169ec:	ds lock xchg esi,eax
  4169ef:	stos   DWORD PTR es:[edi],eax
  4169f0:	ds scas al,BYTE PTR es:[edi]
  4169f2:	dec    ecx
  4169f3:	das    
  4169f4:	or     edx,eax
  4169f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169f7:	mov    bh,0x19
  4169f9:	js     0x4169cc
  4169fb:	mov    ebp,DWORD PTR [esp+edx*2+0x5fe836bb]
  416a02:	lds    eax,FWORD PTR [ebx-0x490e5f2c]
  416a08:	mov    bh,al
  416a0a:	clc    
  416a0b:	call   0x398d:0x33efd810
  416a12:	int3   
  416a13:	das    
  416a14:	aad    0x5e
  416a16:	sbb    BYTE PTR [eax],bh
  416a18:	clc    
  416a19:	sub    al,0x6b
  416a1b:	jmp    0x45600cbe
  416a20:	es inc eax
  416a22:	pop    ebx
  416a23:	clc    
  416a24:	data16 mov ds:0xe0ded91c,al
  416a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a2b:	pop    eax
  416a2c:	mov    bh,0x91
  416a2e:	mov    esp,0x4ff67aa8
  416a33:	in     eax,0xf
  416a35:	mov    dl,0x74
  416a37:	mov    ebx,0x5973ea6c
  416a3c:	xchg   ebp,eax
  416a3d:	ret    
  416a3e:	stc    
  416a3f:	or     bl,al
  416a41:	push   0xd5d1a230
  416a46:	mov    edi,ecx
  416a48:	ja     0x416a26
  416a4a:	lds    ebp,FWORD PTR [edi-0x668e4cfa]
  416a50:	das    
  416a51:	fwait
  416a52:	pop    ebp
  416a53:	fidiv  WORD PTR [esi+0x7d463ce2]
  416a59:	adc    eax,0x6b4ddc75
  416a5e:	mov    WORD PTR [edi],?
  416a60:	push   edi
  416a61:	cs pop es
  416a63:	in     al,0xde
  416a65:	rcl    esi,cl
  416a67:	repz lock imul ebx,ecx,0xc946e2ba
  416a6f:	out    dx,eax
  416a70:	pop    esp
  416a71:	dec    eax
  416a72:	or     dh,ah
  416a74:	iret   
  416a75:	jae    0x416a37
  416a77:	loop   0x416a00
  416a79:	popf   
  416a7a:	outs   dx,DWORD PTR ds:[esi]
  416a7b:	mov    ch,0xba
  416a7d:	jb     0x416a89
  416a7f:	dec    ebp
  416a80:	ror    BYTE PTR [edx+0x3a],0x7d
  416a84:	and    DWORD PTR [esi],ebx
  416a86:	xchg   edi,eax
  416a87:	call   0xb3216ccf
  416a8c:	sbb    eax,0xc643d682
  416a91:	ja     0x416ac8
  416a93:	push   0x397023aa
  416a98:	mov    ds,WORD PTR [ebx+eax*8+0x1e]
  416a9c:	(bad)  [esi]
  416a9e:	cmc    
  416a9f:	aam    0xba
  416aa1:	aaa    
  416aa2:	push   ebp
  416aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa4:	mov    WORD PTR [eax],fs
  416aa6:	data16 jle 0x416af9
  416aa9:	dec    edx
  416aaa:	mov    cl,0xdf
  416aac:	jge    0x416b2c
  416aae:	mov    BYTE PTR [edi+0x17],ah
  416ab1:	push   edi
  416ab2:	add    ah,BYTE PTR [eax+0x33fc2a7]
  416ab8:	shr    BYTE PTR [ebx-0x7e0f57b2],1
  416abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416abf:	js     0x416a53
  416ac1:	fidivr DWORD PTR [eax]
  416ac3:	inc    ebp
  416ac4:	ins    BYTE PTR es:[edi],dx
  416ac5:	in     al,dx
  416ac6:	or     edx,DWORD PTR [ebx+0x16]
  416ac9:	add    BYTE PTR [eax],0x3c
  416acc:	sub    eax,edi
  416ace:	das    
  416acf:	arpl   WORD PTR [edx],ax
  416ad1:	stos   BYTE PTR es:[edi],al
  416ad2:	imul   ebp,DWORD PTR [ecx-0x24],0x53d58b3d
  416ad9:	sahf   
  416ada:	xchg   ebx,eax
  416adb:	mov    ebx,fs
  416add:	xchg   esi,eax
  416ade:	in     al,dx
  416adf:	cmp    DWORD PTR [edi],0x6e
  416ae2:	cmp    esi,DWORD PTR [ecx+ebx*8-0x4e97ec16]
  416ae9:	xchg   BYTE PTR [ebx+0x31],bh
  416aec:	mov    al,0x15
  416aee:	lods   eax,DWORD PTR ds:[esi]
  416aef:	adc    ebx,eax
  416af1:	mov    ah,0xa7
  416af3:	loope  0x416a84
  416af5:	outs   dx,DWORD PTR ds:[esi]
  416af6:	stos   DWORD PTR es:[edi],eax
  416af7:	xchg   DWORD PTR [esi],ebp
  416af9:	mov    cs,WORD PTR es:[edi-0x7e]
  416afd:	sub    al,0x9d
  416aff:	or     ecx,DWORD PTR [edx+0x2]
  416b02:	push   ecx
  416b03:	inc    esp
  416b04:	arpl   WORD PTR [eax-0x1a],bx
  416b07:	dec    esp
  416b08:	(bad)  
  416b0a:	xchg   ebx,eax
  416b0b:	push   edi
  416b0c:	xchg   ebx,eax
  416b0d:	sbb    bl,BYTE PTR [edi-0x22]
  416b10:	inc    ebp
  416b11:	fisub  DWORD PTR [esi-0xae0262a]
  416b17:	cmc    
  416b18:	jb     0x416b0d
  416b1a:	(bad)  
  416b1b:	es fmul st,st(7)
  416b1e:	mul    ch
  416b20:	scas   eax,DWORD PTR es:[edi]
  416b21:	jbe    0x416acd
  416b23:	mov    ds:0x1b5f0b40,eax
  416b28:	mov    ds:0xef29db19,al
  416b2d:	int3   
  416b2e:	sti    
  416b2f:	sub    al,0xbb
  416b31:	(bad)  ds:0x470077ac
  416b37:	sbb    esi,edi
  416b39:	add    eax,0x86005cbd
  416b3e:	adc    al,0xc6
  416b40:	sahf   
  416b41:	ret    0x92b6
  416b44:	icebp  
  416b45:	jge    0x416afd
  416b47:	scas   al,BYTE PTR es:[edi]
  416b48:	cmp    esp,esi
  416b4a:	xor    al,0x49
  416b4c:	jmp    0x416b96
  416b4e:	sub    edi,DWORD PTR [ebx-0x2c1f63af]
  416b54:	adc    dl,bh
  416b56:	sub    eax,0x195f2c7f
  416b5b:	and    edx,DWORD PTR [ebp+0x2b67282a]
  416b61:	add    BYTE PTR [edx+0x15],bh
  416b64:	into   
  416b65:	mov    esi,0xe0682969
  416b6a:	clc    
  416b6b:	or     esi,DWORD PTR [ebx]
  416b6d:	test   BYTE PTR [esi-0x4cade5bb],0x6c
  416b74:	add    DWORD PTR [esi],ecx
  416b76:	outs   dx,BYTE PTR ds:[esi]
  416b77:	retf   0xb818
  416b7a:	ds sub eax,0x1b621bc0
  416b80:	fisubr DWORD PTR [edx]
  416b82:	int    0xda
  416b84:	cmp    al,0x74
  416b86:	add    BYTE PTR [esi],ah
  416b88:	lahf   
  416b89:	scas   eax,DWORD PTR es:[edi]
  416b8a:	mov    bl,0x85
  416b8c:	cdq    
  416b8d:	adc    BYTE PTR [ecx-0x199f19e5],0xf5
  416b94:	jge    0x416b83
  416b96:	cmp    al,0x47
  416b98:	mov    cl,0xa7
  416b9a:	or     eax,DWORD PTR [edx]
  416b9c:	jae    0x416c15
  416b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b9f:	scas   al,BYTE PTR es:[edi]
  416ba0:	rcl    BYTE PTR [ebp+0x5776fa0d],0xfa
  416ba7:	rcl    BYTE PTR [ebp+0x10],cl
  416baa:	jae    0x416bfb
  416bac:	mov    al,ds:0xa41a725c
  416bb1:	xchg   ebp,eax
  416bb2:	stc    
  416bb3:	push   ss
  416bb4:	inc    esi
  416bb5:	in     eax,dx
  416bb6:	jmp    0x416b6f
  416bb8:	cmp    dl,0xc9
  416bbb:	cmp    eax,0xc7fb37f
  416bc0:	cmc    
  416bc1:	fstp   TBYTE PTR ds:0x37dd99ff
  416bc7:	fsubr  QWORD PTR [ebp+0x4908592a]
  416bcd:	and    dl,bl
  416bcf:	mov    edi,0xd0312740
  416bd4:	jmp    0xe786c67c
  416bd9:	and    al,0x27
  416bdb:	push   es
  416bdc:	fist   DWORD PTR [edi]
  416bde:	je     0x416bda
  416be0:	or     al,0x5a
  416be2:	xchg   esi,eax
  416be3:	call   0x1e6e:0xa1b6155
  416bea:	xor    al,bh
  416bec:	add    cl,BYTE PTR [ecx+0x82b0912]
  416bf2:	or     esi,DWORD PTR [esi]
  416bf4:	inc    esp
  416bf5:	cmp    eax,0x5a79aba3
  416bfa:	xchg   ebx,eax
  416bfb:	pop    ecx
  416bfc:	xor    BYTE PTR [edx-0x5cfdbed6],dl
  416c02:	push   ebp
  416c03:	outs   dx,BYTE PTR ds:[esi]
  416c04:	mov    ecx,0xd4ff1bba
  416c09:	leave  
  416c0a:	ret    0xe8df
  416c0d:	jb     0x416c53
  416c0f:	imul   ebx,DWORD PTR [ebx+0x45],0xffffffd8
  416c13:	sub    bh,BYTE PTR [edi]
  416c15:	inc    edx
  416c16:	pop    ebx
  416c17:	outs   dx,DWORD PTR ds:[esi]
  416c18:	push   es
  416c19:	push   0x22
  416c1b:	pop    eax
  416c1c:	and    BYTE PTR [esi-0x69],dl
  416c1f:	sub    DWORD PTR [edx],edx
  416c21:	push   0xffffffbb
  416c23:	inc    edi
  416c24:	mov    WORD PTR [ebx],gs
  416c26:	fsub   st(6),st
  416c28:	cmp    ch,BYTE PTR [ebx+0x5156d5b0]
  416c2e:	inc    eax
  416c2f:	loope  0x416c12
  416c31:	jecxz  0x416bc8
  416c33:	mov    eax,cs
  416c35:	mov    ebp,0xa0aa905
  416c3a:	out    0xa1,eax
  416c3c:	in     al,0xae
  416c3e:	gs xor eax,0xf12734e1
  416c44:	das    
  416c45:	pop    ecx
  416c46:	sbb    BYTE PTR [ebp-0x6969ee53],cl
  416c4c:	(bad)  
  416c4e:	mov    ch,0xfd
  416c50:	mov    edx,0xd7a516f4
  416c55:	dec    DWORD PTR fs:[eax+0x22]
  416c59:	jmp    0x416c3c
  416c5b:	adc    bl,dh
  416c5d:	or     edx,DWORD PTR [ecx]
  416c5f:	call   0xd0632f67
  416c64:	jge    0x416caa
  416c66:	mov    eax,ds:0x685bda5
  416c6b:	sub    dh,BYTE PTR [eax]
  416c6d:	dec    esp
  416c6e:	inc    ecx
  416c6f:	mov    ds:0x96f58935,al
  416c74:	push   cs
  416c75:	push   esp
  416c76:	mov    esi,0x3234c4cf
  416c7b:	inc    edi
  416c7c:	bound  esp,QWORD PTR [esi]
  416c7e:	cdq    
  416c7f:	in     al,0xc4
  416c81:	pavgb  mm6,QWORD PTR ds:0x360a2cd8
  416c88:	xor    DWORD PTR [eax+edi*1-0x60],ebx
  416c8c:	xlat   BYTE PTR ds:[ebx]
  416c8d:	sar    BYTE PTR [edi-0x7a2747c],1
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [eax+0x740a743d],dl
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0xe6
  416e00:	in     al,dx
  416e01:	jb     0x416df6
  416e03:	xchg   ebx,eax
  416e04:	popf   
  416e05:	mov    esi,0xf54c8301
  416e0a:	push   0x7b
  416e0c:	push   cs
  416e0d:	mov    ds:0xfefc5a14,eax
  416e12:	fist   WORD PTR [esi]
  416e14:	fsub   st(3),st
  416e16:	dec    ebp
  416e17:	push   ds
  416e18:	push   es
  416e19:	dec    ecx
  416e1a:	xor    DWORD PTR fs:[esi-0x75b4d077],0x30b6be36
  416e25:	push   ebx
  416e26:	inc    esi
  416e27:	ficomp DWORD PTR [eax-0x7d]
  416e2a:	xor    BYTE PTR [ebp+ebp*2-0x4a63763],ch
  416e31:	inc    ebp
  416e32:	in     al,0xaa
  416e34:	push   ss
  416e35:	jge    0x416e2b
  416e37:	int3   
  416e38:	push   ebx
  416e39:	cmp    al,0x38
  416e3b:	pushf  
  416e3c:	push   0xb108d678
  416e41:	push   edx
  416e42:	push   0x76
  416e44:	fsub   QWORD PTR fs:[eax]
  416e47:	push   ecx
  416e48:	(bad)  
  416e49:	push   cs
  416e4a:	mov    ds:0xd702b7be,eax
  416e4f:	inc    esi
  416e50:	retf   
  416e51:	lahf   
  416e52:	call   0x35bd:0xc44daef6
  416e59:	push   0xffffffec
  416e5b:	(bad)  
  416e5c:	fcmove st,st(6)
  416e5e:	icebp  
  416e5f:	and    BYTE PTR [esi+0x12],cl
  416e62:	mov    cl,0x5b
  416e64:	(bad)  
  416e65:	mov    ebx,0x9b0ad4ac
  416e6a:	lods   al,BYTE PTR ds:[esi]
  416e6b:	sbb    ah,0xb9
  416e6e:	mov    edx,DWORD PTR [ebx-0x12]
  416e71:	out    0xa6,eax
  416e73:	call   0xac98af1b
  416e78:	jmp    0x416eaf
  416e7a:	mov    BYTE PTR [eax+ecx*4+0x50],0x99
  416e7f:	inc    edx
  416e80:	in     al,0x30
  416e82:	sub    BYTE PTR [eax-0x21b513d5],dl
  416e88:	jle    0x416ecc
  416e8a:	xchg   ecx,eax
  416e8b:	xor    eax,0xc784ed69
  416e90:	in     eax,dx
  416e91:	aas    
  416e92:	shl    cl,0xf0
  416e95:	lea    eax,[edx]
  416e97:	push   ds
  416e98:	cld    
  416e99:	dec    ebx
  416e9a:	test   cl,ch
  416e9c:	add    al,0x84
  416e9e:	lods   eax,DWORD PTR ds:[esi]
  416e9f:	push   ebp
  416ea0:	or     ecx,DWORD PTR [edi+0x64dc5248]
  416ea6:	es push edi
  416ea8:	imul   ebx,DWORD PTR [edx+0x4ed98eba],0x14a41cbd
  416eb2:	add    eax,0x7f55ee8e
  416eb7:	jg     0x416eca
  416eb9:	inc    edx
  416eba:	or     bh,ah
  416ebc:	stos   DWORD PTR es:[edi],eax
  416ebd:	xor    al,0x7
  416ebf:	adc    eax,0x8bbdbb
  416ec4:	out    dx,al
  416ec5:	scas   eax,DWORD PTR es:[edi]
  416ec6:	xchg   esi,eax
  416ec7:	lea    esi,[ebp+0x3ea63891]
  416ecd:	and    BYTE PTR [edx+0x7d8d742b],bh
  416ed3:	adc    eax,0xa302f4b1
  416ed8:	pop    esp
  416ed9:	retf   0x6268
  416edc:	outs   dx,DWORD PTR ds:[esi]
  416edd:	dec    edx
  416ede:	popf   
  416edf:	jbe    0x416f17
  416ee1:	inc    edi
  416ee2:	ss retf 
  416ee4:	ss pop esp
  416ee6:	int3   
  416ee7:	lock dec esp
  416ee9:	sahf   
  416eea:	and    bl,ah
  416eec:	arpl   bp,bp
  416eee:	lods   eax,DWORD PTR ds:[esi]
  416eef:	mov    BYTE PTR [esi],al
  416ef1:	push   0x435d7271
  416ef6:	push   edi
  416ef7:	std    
  416ef8:	mov    eax,0xc6f29b8a
  416efd:	cld    
  416efe:	mov    ebx,0x3e58b71b
  416f03:	cli    
  416f04:	jbe    0x416e9d
  416f06:	jno    0x416f11
  416f08:	mov    esp,0x61f94a2f
  416f0d:	xchg   edx,eax
  416f0e:	aad    0x3a
  416f10:	retf   0x3d0a
  416f13:	(bad)  
  416f14:	sti    
  416f15:	inc    esi
  416f16:	and    al,BYTE PTR [esi+esi*4]
  416f19:	daa    
  416f1a:	pushf  
  416f1b:	shr    BYTE PTR [esi+0x636d4d51],cl
  416f21:	lahf   
  416f22:	out    dx,eax
  416f23:	dec    eax
  416f24:	neg    DWORD PTR [edx+0x3d20982f]
  416f2a:	call   FWORD PTR [esi-0x62]
  416f2d:	jb     0x416f3e
  416f2f:	loopne 0x416f12
  416f31:	daa    
  416f32:	mov    cl,0xa4
  416f34:	and    DWORD PTR [edi],0x7c7ddbd7
  416f3a:	pop    eax
  416f3b:	(bad)  
  416f3c:	jl     0x416fb9
  416f3e:	pop    ecx
  416f3f:	mov    eax,0x48c93c41
  416f44:	loop   0x416f34
  416f46:	xlat   BYTE PTR ds:[ebx]
  416f47:	dec    edi
  416f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f49:	push   eax
  416f4a:	test   DWORD PTR [ecx],ebp
  416f4c:	sbb    eax,0xe85259d4
  416f51:	mov    dl,0x3b
  416f53:	call   0xbec8:0x4e09384c
  416f5a:	es xchg bh,cl
  416f5d:	sbb    eax,0x987d369a
  416f62:	outs   dx,BYTE PTR ds:[esi]
  416f63:	dec    eax
  416f64:	mov    ebx,eax
  416f66:	add    ebp,DWORD PTR [ebx-0x3bafca58]
  416f6c:	jmp    0x39b8:0x7bcf0822
  416f73:	sbb    cl,dh
  416f75:	or     edx,esp
  416f77:	fwait
  416f78:	in     eax,dx
  416f79:	cwde   
  416f7a:	add    BYTE PTR fs:[eax],ah
  416f7d:	and    DWORD PTR [edx+ebx*2-0x3e],edx
  416f81:	and    BYTE PTR [esi],bh
  416f83:	je     0x416f68
  416f85:	push   cs
  416f86:	outs   dx,BYTE PTR ds:[esi]
  416f87:	and    edx,DWORD PTR [edx-0x43]
  416f8a:	sti    
  416f8b:	xor    BYTE PTR [ebx+0x5c],bh
  416f8e:	mov    bh,0xa6
  416f90:	dec    eax
  416f91:	xchg   edx,eax
  416f92:	stc    
  416f93:	xchg   ebx,eax
  416f94:	jecxz  0x416fb6
  416f96:	lock xor al,BYTE PTR [edi]
  416f99:	mov    ecx,0x9231a6f3
  416f9e:	sub    eax,0x8219ff57
  416fa3:	cdq    
  416fa4:	fisttp DWORD PTR [ebx-0x5abaf8a8]
  416faa:	mov    eax,ds:0x2000c05e
  416faf:	jno    0x416f91
  416fb1:	shr    BYTE PTR [eax+edi*1+0x58],0x43
  416fb6:	sub    DWORD PTR [eax],0xfffffffb
  416fb9:	adc    DWORD PTR [ecx],edx
  416fbb:	xlat   BYTE PTR ds:[ebx]
  416fbc:	int3   
  416fbd:	sbb    ah,BYTE PTR [esi]
  416fbf:	sub    BYTE PTR [edx],0x69
  416fc2:	cmp    ah,cl
  416fc4:	pop    esi
  416fc5:	add    eax,0x69e17425
  416fca:	cld    
  416fcb:	pop    ebp
  416fcc:	ret    
  416fcd:	sub    DWORD PTR [esi],ecx
  416fcf:	rol    BYTE PTR [esi],cl
  416fd1:	(bad)  
  416fd2:	xchg   esp,eax
  416fd3:	pop    ecx
  416fd4:	out    dx,al
  416fd5:	in     eax,dx
  416fd6:	inc    eax
  416fd7:	fs inc ebp
  416fd9:	(bad)  
  416fda:	mov    ebp,0xd15a92ef
  416fdf:	fld    TBYTE PTR [esi-0x4ac1f148]
  416fe5:	inc    esi
  416fe6:	out    0x79,eax
  416fe8:	xchg   ecx,eax
  416fe9:	test   edx,esp
  416feb:	jno    0x416fbd
  416fed:	cmp    eax,0xaae0bbf5
  416ff2:	cdq    
  416ff3:	xchg   ebx,eax
  416ff4:	lock ins DWORD PTR es:[edi],dx
  416ff6:	xchg   BYTE PTR [edi*1-0xc3e9170],cl
  416ffd:	in     eax,dx
  416ffe:	into   
  416fff:	retf   
  417000:	mov    eax,0x20f6cee8
  417005:	(bad)  
  417006:	in     eax,dx
  417007:	dec    edi
  417008:	sti    
  417009:	inc    edx
  41700a:	mov    DWORD PTR [esi+0x11bf617c],0xe2f75d19
  417014:	jmp    0x287f:0xb8deb257
  41701b:	(bad)  
  41701c:	arpl   WORD PTR [eax-0x18],ax
  41701f:	push   eax
  417020:	dec    edi
  417021:	daa    
  417022:	pop    esi
  417023:	dec    esp
  417024:	aad    0x1
  417026:	not    DWORD PTR [ecx+esi*2]
  417029:	faddp  st(1),st
  41702b:	in     eax,0x40
  41702d:	or     al,0xb7
  41702f:	adc    eax,0xed0b348b
  417034:	add    edi,DWORD PTR [ebx+0x1e]
  417037:	xchg   edi,eax
  417038:	pop    ebx
  417039:	push   ds
  41703a:	shr    BYTE PTR [ebx],cl
  41703c:	add    BYTE PTR [ebx-0x70],bh
  41703f:	retf   0xc43b
  417042:	test   BYTE PTR [ebx+0x1b],al
  417045:	inc    ecx
  417046:	pop    ebx
  417047:	sub    eax,0x9e54d728
  41704c:	sar    bh,0x18
  41704f:	jl     0x4170cd
  417051:	pop    eax
  417052:	aaa    
  417053:	aam    0xe3
  417055:	popa   
  417056:	cmp    ecx,DWORD PTR [bx]
  417059:	dec    eax
  41705a:	add    ch,BYTE PTR [esp+ebp*4-0x72]
  41705e:	cmp    eax,0xb9757bf1
  417063:	or     DWORD PTR [edx-0x3965f84f],edi
  417069:	(bad)
  41706d:	or     al,cl
  41706f:	mov    dl,0xf9
  417071:	push   ebp
  417072:	mov    ch,ah
  417074:	jl     0x417036
  417076:	sbb    cl,0x44
  417079:	add    ebx,0xab0c8c72
  41707f:	popf   
  417080:	mov    ebx,0x994309a
  417085:	mov    cl,0xfa
  417087:	jae    0x417075
  417089:	mov    ch,0x1c
  41708b:	add    DWORD PTR [eax+0x29],esi
  41708e:	iret   
  41708f:	pop    edx
  417090:	xor    DWORD PTR [esp+eax*4],ebp
  417093:	std    
  417094:	add    DWORD PTR [esp+edx*8+0x22],0x50d62824
  41709c:	jnp    0x4170ba
  41709e:	rol    DWORD PTR [ecx-0x3f],1
  4170a1:	xchg   ebx,eax
  4170a2:	xlat   BYTE PTR ds:[ebx]
  4170a3:	fdiv   DWORD PTR [edx]
  4170a5:	mov    al,ds:0x657288b
  4170aa:	fstp   DWORD PTR [ebx+0x46b347a6]
  4170b0:	pushf  
  4170b1:	jg     0x417110
  4170b3:	mov    edi,0xad2af10d
  4170b8:	in     al,dx
  4170b9:	fdiv   DWORD PTR [ecx]
  4170bb:	sbb    DWORD PTR [ecx-0x3],esp
  4170be:	pop    ebx
  4170bf:	enter  0xc815,0xf1
  4170c3:	dec    DWORD PTR [ecx+0x7d]
  4170c6:	lods   eax,DWORD PTR ds:[esi]
  4170c7:	xchg   esp,ecx
  4170c9:	pop    edx
  4170ca:	out    0x88,al
  4170cc:	sub    DWORD PTR [eax],0xffffffde
  4170cf:	mov    WORD PTR [ebp+0x44],fs
  4170d2:	cmc    
  4170d3:	push   cs
  4170d4:	adc    dh,BYTE PTR [ebp+0x7d]
  4170d7:	jge    0x41714b
  4170d9:	jb     0x417119
  4170db:	push   cs
  4170dc:	(bad)  
  4170dd:	imul   edx,ecx,0xffffff94
  4170e0:	xchg   ebx,eax
  4170e1:	mov    bh,BYTE PTR [edi]
  4170e3:	push   edi
  4170e4:	leave  
  4170e5:	pop    esp
  4170e6:	push   0x5e
  4170e8:	add    DWORD PTR ds:0xd24c2ea6,edx
  4170ee:	mov    ebx,0xefa8a82f
  4170f3:	add    ebp,edx
  4170f5:	cpuid  
  4170f7:	fimul  WORD PTR [edx-0x6d]
  4170fa:	cmp    BYTE PTR [esi+ebx*8+0x1ea98932],0xdb
  417102:	xchg   BYTE PTR [edi+0x647dec16],dl
  417108:	sub    al,0x2e
  41710a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41710c:	inc    eax
  41710d:	pop    ebx
  41710e:	popf   
  41710f:	push   ss
  417110:	add    eax,0x386bdce5
  417115:	sti    
  417116:	pop    ss
  417117:	adc    al,0xb8
  417119:	popf   
  41711a:	cmp    edi,DWORD PTR [eax-0x26]
  41711d:	ins    DWORD PTR es:[edi],dx
  41711e:	int3   
  41711f:	dec    esp
  417120:	xchg   ebx,eax
  417121:	dec    edx
  417122:	mov    edx,0x3f43215d
  417127:	test   DWORD PTR [ebx-0x5ac4066f],edi
  41712d:	mov    cl,0x23
  41712f:	xchg   esi,eax
  417130:	cmp    eax,0xd3a64174
  417135:	fcomp  QWORD PTR [edi-0x3d707abb]
  41713b:	mov    eax,0x2b36b532
  417140:	cmp    ebx,DWORD PTR [edi-0x79]
  417143:	jle    0x417171
  417145:	jecxz  0x4170e3
  417147:	rcl    BYTE PTR [edi-0xf01d758],cl
  41714d:	outs   dx,BYTE PTR ds:[esi]
  41714e:	repnz scas eax,DWORD PTR es:[edi]
  417150:	jl     0x417158
  417152:	inc    ebx
  417153:	cs pop esi
  417155:	sub    dh,dl
  417157:	shl    DWORD PTR [eax],1
  417159:	sbb    bl,BYTE PTR [edx]
  41715b:	xor    DWORD PTR es:[eax],edx
  41715e:	test   eax,0xfc260d7e
  417163:	mov    BYTE PTR [edi+0x2f65f139],dh
  417169:	mov    ecx,0x203fafb3
  41716e:	and    ecx,DWORD PTR [ebp+edi*8+0x29]
  417172:	dec    eax
  417173:	int    0x3b
  417175:	pop    eax
  417176:	mov    dl,0x5d
  417178:	pushf  
  417179:	xchg   esp,eax
  41717a:	sbb    eax,0xf82b11c9
  41717f:	call   0x13a13747
  417184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417185:	xchg   ecx,eax
  417186:	jmp    0x41712b
  417188:	lock lea ebp,[ebp-0x260be1c4]
  41718f:	and    eax,0xba403ab4
  417194:	rcl    DWORD PTR [ebx+0x1783cd96],cl
  41719a:	ror    DWORD PTR [eax-0x2382fbc0],cl
  4171a0:	shl    BYTE PTR [bp-0x30],0xe9
  4171a5:	adc    ch,BYTE PTR [esi+eiz*8-0x40]
  4171a9:	pushf  
  4171aa:	mov    edi,0x58bd16c
  4171af:	rcr    BYTE PTR [edx-0x60],0x33
  4171b3:	mov    ecx,DWORD PTR [ebx]
  4171b5:	wrmsr  
  4171b7:	add    al,0xe7
  4171b9:	pop    es
  4171ba:	sub    ebp,DWORD PTR [ebx-0x13]
  4171bd:	mov    cl,0x2b
  4171bf:	mov    ds,WORD PTR [ebx]
  4171c1:	xchg   edi,eax
  4171c2:	pop    es
  4171c3:	imul   edi,DWORD PTR [edi+0x40],0xc6ba2fd2
  4171ca:	or     ah,BYTE PTR ds:0x68c8cab4
  4171d0:	stos   DWORD PTR es:[edi],eax
  4171d1:	push   0x5a59440b
  4171d6:	cld    
  4171d7:	(bad)  
  4171d8:	fadd   QWORD PTR [edx+0x6b3dc8f3]
  4171de:	add    BYTE PTR [ebx],al
  4171e0:	neg    BYTE PTR [edi]
  4171e2:	cmp    cx,0xffdd
  4171e6:	adc    al,0x6
  4171e8:	cmc    
  4171e9:	pushf  
  4171ea:	fwait
  4171eb:	das    
  4171ec:	sar    BYTE PTR [ebx],1
  4171ee:	fcmovnu st,st(1)
  4171f0:	xlat   BYTE PTR ds:[ebx]
  4171f1:	xor    edi,DWORD PTR [ebx+esi*8]
  4171f4:	inc    ebp
  4171f5:	xlat   BYTE PTR ds:[ebx]
  4171f6:	sub    eax,0x3c4b27ab
  4171fb:	and    BYTE PTR [edx],ah
  4171fd:	push   ecx
  4171fe:	dec    edi
  4171ff:	mov    dh,0x6e
  417201:	jl     0x41719e
  417203:	dec    ebp
  417204:	out    dx,al
  417205:	mov    eax,ds:0x1b8f696d
  41720b:	pop    ebx
  41720c:	out    dx,al
  41720d:	lods   eax,DWORD PTR ds:[esi]
  41720e:	push   0x51482b0d
  417213:	sbb    esp,ebp
  417215:	jbe    0x417276
  417217:	adc    eax,0x21670406
  41721c:	int    0xdf
  41721e:	jne    0x4171d6
  417220:	dec    ecx
  417221:	in     eax,dx
  417222:	sub    ah,BYTE PTR [esi-0x471f86e4]
  417228:	cdq    
  417229:	ret    
  41722a:	adc    BYTE PTR [ebx+0x1d47593c],0xe4
  417231:	repnz cs icebp 
  417234:	retf   0xef7d
  417237:	aaa    
  417238:	retf   0x3b7e
  41723b:	and    al,0xe1
  41723d:	lods   al,BYTE PTR ds:[esi]
  41723e:	mov    WORD PTR [edx],?
  417240:	(bad)  
  417241:	push   ebx
  417242:	leave  
  417243:	inc    ebx
  417244:	dec    ebx
  417245:	adc    edi,ecx
  417247:	out    dx,al
  417248:	adc    BYTE PTR [eax-0x22fe22a1],bl
  41724e:	or     DWORD PTR ds:0xfbdd0a7c,0x5e0cd190
  417258:	jp     0x4172bd
  41725a:	push   0x21
  41725c:	iret   
  41725d:	and    al,BYTE PTR [ebp+0x5d]
  417260:	push   edx
  417261:	pusha  
  417262:	repz mov ecx,0xeb3c748
  417268:	(bad)  
  417269:	(bad)  
  41726a:	jmp    0x41724f
  41726c:	add    al,0x76
  41726e:	je     0x4171f2
  417270:	xchg   BYTE PTR [edi-0x74],dh
  417273:	ret    
  417274:	pop    ecx
  417276:	mov    esp,0xa1b1235e
  41727b:	jnp    0x417221
  41727d:	das    
  41727e:	mov    dl,0x8e
  417280:	call   0x3127:0x7b088274
  417287:	test   BYTE PTR [ecx-0x5],0x50
  41728b:	cmp    bh,al
  41728d:	retf   
  41728e:	shr    bh,0x1e
  417291:	cmp    bl,bh
  417293:	jmp    0xee48105b
  417298:	cmp    eax,0xd56af12b
  41729d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729e:	xchg   esi,eax
  41729f:	dec    eax
  4172a0:	dec    edx
  4172a1:	push   0xffffffca
  4172a3:	xlat   BYTE PTR ds:[ebx]
  4172a4:	icebp  
  4172a5:	sbb    ebp,edi
  4172a7:	push   es
  4172a8:	jns    0x417250
  4172aa:	jae    0x417286
  4172ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ad:	push   ebp
  4172ae:	inc    ecx
  4172af:	jmp    0x417244
  4172b1:	(bad)  
  4172b2:	sar    edi,1
  4172b4:	mov    al,0x23
  4172b6:	xor    eax,0xf580adc
  4172bb:	arpl   di,si
  4172bd:	retf   
  4172be:	xchg   ecx,eax
  4172bf:	jbe    0x417325
  4172c1:	leave  
  4172c2:	xchg   BYTE PTR [ecx+0x4b],ch
  4172c5:	mov    ss,WORD PTR [eax]
  4172c7:	fiadd  WORD PTR ds:0x32a2176c
  4172cd:	aad    0xfc
  4172cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d0:	jmp    0x1ec1:0x5b55319f
  4172d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172d8:	test   edi,ebx
  4172da:	in     al,0x9b
  4172dc:	sbb    ebx,eax
  4172de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172df:	mov    cl,0xba
  4172e1:	popa   
  4172e2:	cmp    eax,0xe7965068
  4172e7:	inc    esi
  4172e8:	and    BYTE PTR [ebp-0x70161e0],bl
  4172ee:	nop
  4172ef:	mov    bh,0x4c
  4172f1:	dec    ecx
  4172f2:	lds    edi,FWORD PTR [ebp-0x68]
  4172f5:	or     DWORD PTR [esi+0x37],eax
  4172f8:	mov    edi,0x4e364477
  4172fd:	ja     0x41737e
  4172ff:	pop    ebp
  417300:	push   esp
  417301:	push   ebx
  417302:	addr16 out dx,eax
  417304:	pop    esi
  417305:	xchg   edi,esi
  417307:	jl     0x4172d5
  417309:	in     eax,dx
  41730a:	mov    dl,0x1c
  41730c:	imul   edi,DWORD PTR [esi+0x17a92626],0xffffff9d
  417313:	xor    ch,BYTE PTR [eax+ebx*4]
  417316:	not    DWORD PTR [ebp+0x57ef8545]
  41731c:	add    edi,DWORD PTR [edx+0x45]
  41731f:	fcom   QWORD PTR [ecx+0xe]
  417322:	nop
  417323:	adc    ah,BYTE PTR [edx+0x63]
  417326:	and    eax,0x866bf574
  41732b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41732c:	and    BYTE PTR [ebp+0x3dfc9c90],ch
  417332:	data16 jbe 0x4172ea
  417335:	hlt    
  417336:	ds add ax,0xc578
  41733b:	stos   BYTE PTR es:[edi],al
  41733c:	mov    BYTE PTR [ebx],dh
  41733e:	out    dx,al
  41733f:	je     0x41731a
  417341:	(bad)  
  417343:	arpl   WORD PTR [esi],sp
  417345:	ds inc edi
  417347:	dec    esp
  417348:	dec    esi
  417349:	fmul   QWORD PTR [edi+ecx*1]
  41734c:	add    dh,ah
  41734e:	push   ebx
  41734f:	mov    ebx,0x5c55efb6
  417354:	lds    eax,FWORD PTR cs:[eax-0xa7c3129]
  41735b:	scas   al,BYTE PTR es:[edi]
  41735c:	popa   
  41735d:	xor    eax,DWORD PTR [ebp+0x3b7195bc]
  417363:	pop    ds
  417364:	shl    BYTE PTR [ebx-0xe28f1f1],cl
  41736a:	cmp    ebx,ebx
  41736c:	test   BYTE PTR [edi+0x4a078f6d],dl
  417372:	push   ebp
  417373:	jmp    0xfbda:0xddc7eead
  41737a:	push   ds
  41737b:	enter  0xb3a2,0xa
  41737f:	mov    ss,WORD PTR [esp+ebx*1+0x4a9e4d0e]
  417386:	sbb    al,0x65
  417388:	(bad)  
  417389:	xchg   cl,dl
  41738b:	in     al,dx
  41738c:	adc    al,BYTE PTR [edi+0x28]
  41738f:	sub    BYTE PTR [edx+edi*2-0x58],0x26
  417394:	cs and dl,dh
  417397:	ins    BYTE PTR es:[edi],dx
  417398:	sub    DWORD PTR [edi],0x299e2d90
  41739e:	bound  esp,QWORD PTR [ebp+0x8]
  4173a1:	add    ch,BYTE PTR [ebx-0x78]
  4173a4:	lods   al,BYTE PTR ds:[esi]
  4173a5:	fadd   QWORD PTR [esi+0x24d85dfa]
  4173ab:	xchg   ecx,eax
  4173ac:	mov    ah,0x50
  4173ae:	xchg   ebx,eax
  4173af:	arpl   WORD PTR [eax-0x46c0c404],si
  4173b5:	cdq    
  4173b6:	adc    cl,BYTE PTR [ebx]
  4173b8:	push   0xffffff89
  4173ba:	mov    dh,0x7e
  4173bc:	xchg   ecx,eax
  4173bd:	fldenv [eax-0x681a104]
  4173c3:	and    eax,0xb1eeb856
  4173c8:	push   esp
  4173c9:	xor    bl,ch
  4173cb:	enter  0x6542,0xf2
  4173cf:	xor    al,0x1e
  4173d1:	sti    
  4173d2:	in     al,dx
  4173d3:	pop    esi
  4173d4:	xor    BYTE PTR [ecx+0x61],al
  4173d7:	or     al,dl
  4173d9:	daa    
  4173da:	push   ds
  4173db:	(bad)  
  4173dc:	(bad)  
  4173dd:	xchg   ebp,eax
  4173de:	in     eax,0x79
  4173e0:	(bad)
  4173e4:	fadd   QWORD PTR [eax-0x58dd0a80]
  4173ea:	mov    bh,0x58
  4173ec:	mov    ecx,0x87129cb7
  4173f1:	sbb    edi,DWORD PTR [ecx]
  4173f3:	xchg   ebx,eax
  4173f4:	and    ah,BYTE PTR [ebx]
  4173f6:	out    dx,al
  4173f7:	sahf   
  4173f8:	outs   dx,DWORD PTR ds:[esi]
  4173f9:	dec    esi
  4173fa:	mov    esi,0x3202021c
  4173ff:	leave  
  417400:	or     eax,0xad35f4d1
  417405:	push   ecx
  417406:	sbb    dl,BYTE PTR [esi-0x65f349b3]
  41740c:	lock push edi
  41740e:	cwde   
  41740f:	mov    cl,0xb1
  417411:	int    0xc0
  417413:	adc    BYTE PTR [ecx],bl
  417415:	inc    ebx
  417416:	out    dx,al
  417417:	adc    eax,0x9b4b87a4
  41741c:	push   ds
  41741d:	(bad)  
  41741f:	adc    eax,0x2f
  417422:	add    edi,edx
  417424:	call   0x5ee2:0x709a7de
  41742b:	(bad)  
  41742c:	in     eax,dx
  41742d:	mov    al,ds:0x34f664a0
  417432:	repnz aas 
  417434:	xchg   edi,eax
  417435:	in     eax,0x8b
  417437:	add    DWORD PTR [edx],eax
  417439:	test   eax,0x9f5612f
  41743e:	fadd   QWORD PTR [edx]
  417440:	pop    es
  417441:	pop    edx
  417442:	loope  0x417497
  417444:	mov    al,0x4
  417446:	mov    bl,0x99
  417448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417449:	clc    
  41744a:	adc    eax,0xb8dc4b
  41744f:	(bad)  
  417450:	jmp    0xe294c467
  417455:	push   eax
  417456:	pop    edx
  417457:	and    al,0x52
  417459:	rol    DWORD PTR [ebp+0x3f31de0d],0x90
  417460:	in     al,0x4d
  417462:	(bad)  
  417463:	pop    ecx
  417464:	out    0x1e,eax
  417466:	inc    ecx
  417467:	loopne 0x4174d9
  417469:	imul   eax,edi,0x95b8bab2
  41746f:	xor    eax,ecx
  417471:	push   ebp
  417472:	mov    ebx,0xaf11a07b
  417477:	add    bl,BYTE PTR [edi-0x10]
  41747a:	add    edi,DWORD PTR [edx+0x23a124f0]
  417480:	aas    
  417481:	cmp    ecx,DWORD PTR [esi-0x7a2f5d83]
  417487:	jle    0x417481
  417489:	stc    
  41748a:	jae    0x4174f2
  41748c:	xor    edx,0x13594672
  417492:	pop    eax
  417493:	dec    esp
  417494:	ss sbb al,0xfd
  417497:	pop    esp
  417498:	ffree  st(7)
  41749a:	and    eax,0x538de75e
  41749f:	retf   0x8557
  4174a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174a3:	cmp    BYTE PTR [esi+0x11],0x10
  4174a7:	add    eax,0xaf3580de
  4174ac:	lds    ebx,FWORD PTR [eax]
  4174ae:	add    BYTE PTR [ebp-0x2af704ca],al
  4174b4:	push   0x73
  4174b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b7:	push   eax
  4174b8:	aam    0xa1
  4174ba:	daa    
  4174bb:	ss es mov dl,0xe1
  4174bf:	dec    eax
  4174c0:	cmc    
  4174c1:	adc    eax,0xce691204
  4174c6:	pop    ds
  4174c7:	(bad)  
  4174c8:	mov    eax,ds:0x8a4c79a0
  4174cd:	cld    
  4174ce:	call   0x4d84:0xb5484f29
  4174d5:	xchg   esi,eax
  4174d6:	pop    esi
  4174d7:	adc    BYTE PTR [ebp+0x524f9316],ah
  4174dd:	xor    DWORD PTR [ecx+0x13358444],ebp
  4174e3:	xor    BYTE PTR [eax-0x11],ch
  4174e6:	push   0xfffffffb
  4174e8:	xor    DWORD PTR [esi-0x8],ecx
  4174eb:	push   ecx
  4174ec:	add    al,0x47
  4174ee:	push   0x5f
  4174f0:	push   0xb1d6d94
  4174f5:	mov    edi,0xc9c60b20
  4174fa:	div    bh
  4174fc:	lds    esi,FWORD PTR [edx-0x1274f1b7]
  417502:	xchg   edx,eax
  417503:	jge    0x4174f0
  417505:	inc    esi
  417506:	add    al,0xb9
  417508:	or     eax,0xec4e33d5
  41750d:	sahf   
  41750e:	ins    DWORD PTR es:[edi],dx
  41750f:	loope  0x4174d9
  417511:	popa   
  417512:	jmp    0xb2729138
  417517:	ins    BYTE PTR es:[edi],dx
  417518:	in     al,dx
  417519:	xchg   BYTE PTR gs:[ebx+0x63728cc1],dl
  417520:	dec    edi
  417521:	mov    DWORD PTR [esi-0x200e81ac],0xe2edc24a
  41752b:	cmc    
  41752c:	cmp    ebx,DWORD PTR [edx+0x2b]
  41752f:	repz mov edx,0x6d0a292c
  417535:	push   es
  417536:	les    esi,FWORD PTR [eax+ebx*4+0x7e]
  41753a:	(bad)  
  41753b:	mov    dl,0xef
  41753d:	xor    DWORD PTR [esi-0x10],ebx
  417540:	call   FWORD PTR [ebx-0x36c8f0ab]
  417546:	dec    edi
  417547:	daa    
  417548:	(bad)  
  417549:	jle    0x417546
  41754b:	aas    
  41754c:	xchg   esi,eax
  41754d:	loope  0x417506
  41754f:	test   DWORD PTR [edx-0x739059a0],edi
  417555:	(bad)  
  417556:	aas    
  417557:	or     esi,0xd6b94f6d
  41755d:	test   eax,0x44fc46a7
  417562:	jle    0x417580
  417564:	or     al,0x23
  417566:	dec    eax
  417567:	inc    esi
  417568:	adc    DWORD PTR [eax+0x55],ebp
  41756b:	pop    es
  41756c:	mov    ebp,0x30d8c806
  417571:	mov    bl,BYTE PTR [eax-0x5197d9bd]
  417577:	and    BYTE PTR [eax],0x89
  41757a:	inc    esp
  41757b:	imul   DWORD PTR [ecx-0x70]
  41757e:	repz dec esp
  417580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417581:	mov    BYTE PTR gs:[ecx+0x7d],cl
  417585:	mov    ah,0xd7
  417587:	mov    ebp,0x23e9e482
  41758c:	and    al,0x5c
  41758e:	aas    
  41758f:	imul   ebp,DWORD PTR [eax-0x1e736d55],0x14d4c63a
  417599:	lods   eax,DWORD PTR ds:[esi]
  41759a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41759b:	mov    esp,0xca0b63ba
  4175a0:	es test eax,0x43160765
  4175a6:	xor    al,0x43
  4175a8:	leave  
  4175a9:	cld    
  4175aa:	mov    al,BYTE PTR [ebx+0x18]
  4175ad:	daa    
  4175ae:	push   0xf6ee1d9
  4175b3:	push   cs
  4175b4:	inc    eax
  4175b5:	popf   
  4175b6:	hlt    
  4175b7:	inc    ecx
  4175b8:	scas   eax,DWORD PTR es:[edi]
  4175b9:	leave  
  4175ba:	iret   
  4175bb:	pop    esp
  4175bc:	add    cl,bh
  4175be:	add    dh,bl
  4175c0:	xor    dl,dh
  4175c2:	popa   
  4175c3:	jmp    0x417634
  4175c5:	mov    edi,0x17c6c972
  4175ca:	pop    es
  4175cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175cc:	loop   0x4175a9
  4175ce:	scas   eax,DWORD PTR es:[edi]
  4175cf:	shr    BYTE PTR [ecx+ecx*1],cl
  4175d2:	ret    
  4175d3:	out    dx,eax
  4175d4:	push   edi
  4175d5:	(bad)  
  4175d6:	add    al,0xd4
  4175d8:	sbb    eax,0x5d42a3c5
  4175dd:	pop    edi
  4175de:	cmc    
  4175df:	fmul   DWORD PTR [esi+0x38]
  4175e2:	sbb    al,0x54
  4175e4:	aam    0x7e
  4175e6:	push   ds
  4175e7:	xchg   esp,eax
  4175e8:	xor    cl,BYTE PTR [esp-0x573119bf]
  4175ef:	mov    ah,0x95
  4175f1:	sub    DWORD PTR [esi+0x4a74abac],edx
  4175f7:	push   0x9b3e2433
  4175fc:	sbb    BYTE PTR cs:[edi],ch
  4175ff:	sub    DWORD PTR [ecx-0x3c],esp
  417602:	adc    DWORD PTR [ebx+esi*4-0x58],esi
  417606:	inc    edi
  417607:	pop    es
  417608:	dec    edx
  417609:	jae    0x417620
  41760b:	vmread DWORD PTR [edi],edi
  41760e:	push   0x39d50210
  417613:	repnz lahf 
  417615:	ins    BYTE PTR es:[edi],dx
  417616:	xchg   BYTE PTR [esi+eiz*2],ah
  417619:	xchg   bx,ax
  41761b:	pop    edi
  41761c:	dec    edi
  41761d:	fwait
  41761e:	cmp    esp,DWORD PTR [esi]
  417620:	ret    
  417621:	(bad)  
  417622:	out    0x2,eax
  417624:	fwait
  417625:	cmp    al,BYTE PTR [ebp-0x5]
  417628:	xchg   esp,eax
  417629:	or     esi,DWORD PTR [ebx+0x4f]
  41762c:	repnz xor ebp,DWORD PTR [ecx+0x4d92641]
  417633:	dec    esi
  417634:	push   ss
  417635:	jns    0x417697
  417637:	jo     0x4175f3
  417639:	adc    al,0x3
  41763b:	jmp    0x8cdf:0xf2fcb9bf
  417642:	mov    ecx,0x95140310
  417647:	hlt    
  417648:	mov    DWORD PTR [eax],0x7663d87e
  41764e:	xchg   ecx,eax
  41764f:	adc    ah,BYTE PTR [eax-0x14]
  417652:	cmp    edx,DWORD PTR [eax+ebp*1+0x21]
  417656:	inc    esi
  417657:	adc    al,0x31
  417659:	mov    esi,0xf6408b42
  41765e:	fs inc ebx
  417660:	rcr    BYTE PTR es:[ebp-0x4b],0xb5
  417665:	mov    ds,WORD PTR [ebx]
  417667:	fld    QWORD PTR [eax-0x4f]
  41766a:	sub    dl,ch
  41766c:	dec    ebx
  41766d:	mov    dl,0xf8
  41766f:	lds    eax,FWORD PTR [eax-0x7d5bd525]
  417675:	xchg   edi,esi
  417677:	push   eax
  417678:	jg     0x4176a9
  41767a:	adc    al,0x54
  41767c:	jl     0x4176dd
  41767e:	xchg   esi,eax
  41767f:	(bad)  
  417680:	ja     0x417633
  417682:	out    dx,al
  417683:	fiadd  WORD PTR [edi-0x4a]
  417686:	sbb    al,0x4e
  417688:	repnz ss inc esp
  41768b:	(bad)  
  41768c:	mov    al,0x29
  41768e:	xchg   ebp,eax
  41768f:	pop    ebx
  417690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417691:	adc    DWORD PTR [esi-0x9fa6e2b],edx
  417697:	xor    DWORD PTR [ebx-0x21],edi
  41769a:	test   eax,0xa578d3e9
  41769f:	jo     0x41763e
  4176a1:	mov    dl,0x4a
  4176a3:	jge    0x4176de
  4176a5:	sahf   
  4176a6:	push   ebp
  4176a7:	int    0x5b
  4176a9:	(bad)  
  4176aa:	data16 sub al,0x2
  4176ad:	les    eax,FWORD PTR [eax]
  4176af:	mov    eax,0x53a0f7c5
  4176b4:	into   
  4176b5:	dec    ecx
  4176b6:	inc    edi
  4176b7:	sub    DWORD PTR [ebp+0x7c],edi
  4176ba:	fcom   DWORD PTR [ebx+ecx*2+0xc]
  4176be:	or     ch,BYTE PTR [ecx]
  4176c0:	mov    al,ds:0x684c3bda
  4176c5:	or     ah,al
  4176c7:	push   ecx
  4176c8:	mov    bh,0x4c
  4176ca:	xchg   edx,eax
  4176cb:	div    DWORD PTR [ebp-0x7ae91f49]
  4176d1:	cwde   
  4176d2:	test   ebp,0x82bb8655
  4176d8:	dec    esp
  4176d9:	shl    ecx,cl
  4176db:	hlt    
  4176dc:	ret    
  4176dd:	stos   BYTE PTR es:[edi],al
  4176de:	push   esp
  4176df:	ins    DWORD PTR es:[edi],dx
  4176e0:	mov    bl,0xc6
  4176e2:	mov    ebp,0xf8de2697
  4176e7:	jns    0x4176ba
  4176e9:	mov    DWORD PTR [edx-0x84108df],eax
  4176ef:	js     0x417703
  4176f1:	push   esi
  4176f2:	outs   dx,BYTE PTR ds:[esi]
  4176f3:	dec    esi
  4176f4:	pusha  
  4176f5:	and    ebp,DWORD PTR [edi+0x23dce306]
  4176fb:	stos   BYTE PTR es:[edi],al
  4176fc:	(bad)  
  4176fd:	cmc    
  4176fe:	data16 add bl,BYTE PTR [ecx+eiz*2-0x48ba68f6]
  417706:	inc    esp
  417707:	lahf   
  417708:	in     eax,0x2c
  41770a:	pop    edi
  41770b:	jmp    0x43a1:0x67ef895c
  417712:	jg     0x4176ba
  417714:	popa   
  417715:	xchg   DWORD PTR [edi-0x28555540],edx
  41771b:	mov    esp,0x3118b7f1
  417720:	scas   eax,DWORD PTR es:[edi]
  417721:	dec    edi
  417722:	clc    
  417723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417724:	xor    BYTE PTR [esi-0x4919523c],al
  41772a:	mov    ah,BYTE PTR [edi]
  41772c:	fldenv [ebx+0x7a]
  41772f:	(bad)  
  417730:	outs   dx,BYTE PTR ds:[esi]
  417731:	xchg   ecx,eax
  417732:	mov    DWORD PTR [ebx+0x7fd71ea3],edx
  417738:	xchg   edi,eax
  417739:	ja     0x41770b
  41773b:	jbe    0x41772b
  41773d:	and    eax,esi
  41773f:	jg     0x4176d4
  417741:	push   eax
  417742:	xchg   edi,eax
  417743:	loopne 0x417723
  417745:	test   DWORD PTR [esp+ecx*8],edi
  417748:	aaa    
  417749:	push   es
  41774a:	sbb    BYTE PTR [esp+edx*4+0x33],bl
  41774e:	js     0x41773e
  417750:	mov    eax,0x19f0cd80
  417755:	cmp    bl,bl
  417757:	mov    ebp,edi
  417759:	fdiv   DWORD PTR [edi-0x40]
  41775c:	sbb    bh,ah
  41775e:	add    bl,bh
  417760:	(bad)  
  417761:	std    
  417762:	popa   
  417763:	mov    edi,0x83a2f309
  417768:	cmp    edx,edx
  41776a:	and    eax,0xb8511e89
  41776f:	inc    eax
  417770:	push   0xe28bd0f6
  417775:	xor    al,0x5
  417777:	mov    ebx,0xfcf57b
  41777c:	add    al,0x1
  41777e:	in     eax,dx
  41777f:	fstp   QWORD PTR [edi-0x6d]
  417782:	out    0x1b,al
  417784:	ja     0x417730
  417786:	sub    bh,BYTE PTR [ebx-0x77]
  417789:	adc    al,0x10
  41778b:	mov    cl,0xaa
  41778d:	adc    eax,0x45c3589b
  417792:	and    al,0x40
  417794:	pop    ebx
  417795:	add    al,0x9b
  417797:	test   al,0x28
  417799:	gs push esi
  41779b:	mov    al,ds:0xe9b096d3
  4177a0:	int    0xa
  4177a2:	bound  ebp,QWORD PTR [esp+esi*1]
  4177a5:	xor    DWORD PTR [edx],esp
  4177a7:	loop   0x41778f
  4177a9:	lods   eax,DWORD PTR ds:[esi]
  4177aa:	and    eax,0xb28a0e73
  4177af:	add    al,0x3b
  4177b1:	fsubr  st(1),st
  4177b3:	cmp    al,0xf8
  4177b5:	sbb    dl,al
  4177b7:	push   edx
  4177b8:	aad    0x18
  4177ba:	push   ebp
  4177bb:	mov    WORD PTR [edi],?
  4177bd:	iret   
  4177be:	shl    cl,0x9f
  4177c1:	xchg   edx,eax
  4177c2:	daa    
  4177c3:	test   DWORD PTR [edx-0x1],esp
  4177c6:	mov    ecx,0xfaa518ad
  4177cb:	xchg   ebx,eax
  4177cc:	outs   dx,DWORD PTR ds:[esi]
  4177cd:	mov    bh,0xef
  4177cf:	arpl   WORD PTR [edx+0x5e],bx
  4177d2:	inc    edi
  4177d3:	add    eax,0x4998a679
  4177d8:	sbb    esp,DWORD PTR [edi]
  4177da:	mov    esi,0x20792c9c
  4177df:	addr16 (bad) 
  4177e1:	adc    edx,ecx
  4177e3:	and    ecx,DWORD PTR [ebx-0x645c4724]
  4177e9:	aaa    
  4177ea:	or     BYTE PTR [eax-0x2e],dl
  4177ed:	mov    ecx,gs
  4177ef:	mov    cl,0xbc
  4177f1:	call   0xb7f28617
  4177f6:	mov    esi,0xb008860e
  4177fb:	or     BYTE PTR [ebx],ah
  4177fd:	add    eax,0x66c0c859
  417802:	in     al,0x12
  417804:	mov    esi,0xd373e1fa
  417809:	rcl    ch,cl
  41780b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41780c:	cld    
  41780d:	mov    BYTE PTR [edi],bl
  41780f:	sar    bh,0x43
  417812:	pop    esi
  417813:	jmp    0x417874
  417815:	ja     0x4177c2
  417817:	inc    ebx
  417818:	cmp    eax,DWORD PTR [ebp+0x7e7d37f3]
  41781e:	jne    0x417837
  417820:	sub    BYTE PTR [esi+eax*1],dl
  417823:	sbb    eax,0x122812f6
  417828:	ins    BYTE PTR es:[edi],dx
  417829:	cmp    DWORD PTR [eax-0x8],eax
  41782c:	shl    BYTE PTR [eax-0x4dec4435],0x34
  417833:	mov    edi,0x88c783b0
  417838:	sbb    eax,0xe83148bb
  41783d:	jns    0x417867
  41783f:	xchg   ebp,eax
  417840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417841:	nop
  417842:	xchg   ebx,eax
  417843:	div    edx
  417845:	sub    esi,edi
  417847:	test   BYTE PTR ds:0xe862023f,bl
  41784d:	in     al,dx
  41784e:	xchg   edx,eax
  41784f:	int    0x44
  417851:	adc    esp,DWORD PTR [eax-0x498659d4]
  417857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417858:	mov    eax,ds:0xcd9dd7e2
  41785d:	xchg   ebp,eax
  41785e:	icebp  
  41785f:	lods   al,BYTE PTR ds:[si]
  417861:	ss aaa 
  417863:	mov    eax,ds:0x9f8f99e6
  417868:	sub    BYTE PTR [edi+0x44],bh
  41786b:	(bad)  
  41786c:	xchg   esp,eax
  41786d:	sbb    al,BYTE PTR [eax+0x14365d76]
  417873:	lock sbb DWORD PTR [ecx],ebp
  417876:	js     0x417843
  417878:	inc    esi
  41787a:	stos   BYTE PTR es:[edi],al
  41787b:	or     BYTE PTR [esi+0x9ad9ea9],cl
  417881:	(bad)  
  417882:	and    al,0xe
  417884:	jmp    0x417855
  417886:	pop    esi
  417887:	pcmpgtb mm5,mm5
  41788a:	mov    esp,0x56126ce4
  41788f:	push   esp
  417890:	inc    esi
  417891:	ins    BYTE PTR es:[edi],dx
  417892:	stos   DWORD PTR es:[edi],eax
  417893:	inc    ebx
  417894:	mov    al,ds:0x38282dc4
  417899:	in     eax,dx
  41789a:	inc    edx
  41789b:	inc    edx
  41789c:	push   esp
  41789d:	push   edi
  41789e:	lahf   
  41789f:	and    eax,0x625dc87b
  4178a4:	xchg   ebp,eax
  4178a5:	div    DWORD PTR [edx-0x5f]
  4178a8:	sti    
  4178a9:	xchg   ebp,eax
  4178aa:	lahf   
  4178ab:	or     dh,BYTE PTR [edi]
  4178ad:	mov    ds,WORD PTR [edi]
  4178af:	lahf   
  4178b0:	inc    eax
  4178b1:	rcl    BYTE PTR [eax+0x2e],0x53
  4178b5:	stos   DWORD PTR es:[edi],eax
  4178b6:	fsub   QWORD PTR [ecx-0xedd1684]
  4178bc:	push   ecx
  4178bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178be:	mov    edx,0x768d3092
  4178c3:	sahf   
  4178c4:	pop    ss
  4178c5:	jnp    0x417941
  4178c7:	sub    dl,BYTE PTR [ebx-0x411ad052]
  4178cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ce:	mov    ebx,0x15e73152
  4178d3:	cmp    BYTE PTR [ebx+0x4f0b4a15],bh
  4178d9:	cmp    ecx,DWORD PTR es:[ebx-0x1fcbea5f]
  4178e0:	mov    esp,0xe099e873
  4178e5:	mov    ecx,0x50e524a8
  4178ea:	sub    DWORD PTR [esi-0x49],ecx
  4178ed:	es cld 
  4178ef:	test   al,0x6f
  4178f1:	pop    eax
  4178f2:	ja     0x417947
  4178f4:	call   0xbc7fd36c
  4178f9:	popa   
  4178fa:	inc    ebx
  4178fb:	fwait
  4178fc:	test   eax,0x21bca3db
  417901:	dec    ebx
  417902:	push   ss
  417903:	jb     0x417955
  417905:	jbe    0x4178c3
  417907:	ins    DWORD PTR es:[edi],dx
  417908:	pop    ebx
  417909:	xchg   ebp,eax
  41790a:	jbe    0x417957
  41790c:	in     eax,0x91
  41790e:	repnz dec edi
  417910:	mov    WORD PTR [edi+0x739f1a8b],fs
  417916:	mov    dl,0xd0
  417918:	push   0x5d
  41791a:	scas   eax,DWORD PTR es:[edi]
  41791b:	je     0x41797d
  41791d:	daa    
  41791e:	retf   0x64eb
  417921:	inc    edx
  417922:	jo     0x417946
  417924:	test   eax,0xa9d532c3
  417929:	rol    DWORD PTR ds:0xb56da4ca,cl
  41792f:	jbe    0x41793d
  417931:	test   edi,esp
  417933:	outs   dx,DWORD PTR ds:[esi]
  417934:	aaa    
  417935:	xchg   esp,eax
  417936:	xor    al,0xbe
  417938:	aam    0xa9
  41793a:	and    dl,ah
  41793c:	inc    esp
  41793d:	std    
  41793e:	(bad)  
  41793f:	lds    edi,FWORD PTR [edx+esi*8+0x36b09e32]
  417946:	fist   WORD PTR [edx-0x5656bc32]
  41794c:	inc    esi
  41794d:	sub    ecx,0xa41820aa
  417953:	test   al,0xcd
  417955:	aaa    
  417956:	sub    eax,0xa5d62d89
  41795b:	test   cl,cl
  41795d:	jmp    0xdbe7:0xe8a67067
  417964:	(bad)  
  417965:	fst    QWORD PTR [esi]
  417967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417968:	jbe    0x4178fc
  41796a:	addr16 out 0x79,eax
  41796d:	or     bl,BYTE PTR [edi-0x46]
  417970:	in     al,0x7a
  417972:	call   0x5a1552cc
  417977:	mov    ds:0x5f450153,al
  41797c:	mov    ebp,0x16f54fbb
  417981:	fwait
  417982:	test   eax,0xd46daee2
  417987:	hlt    
  417988:	stc    
  417989:	inc    ebx
  41798a:	sahf   
  41798b:	push   edi
  41798c:	test   al,0xd9
  41798e:	inc    eax
  41798f:	lock pusha 
  417991:	adc    eax,0x42b0a19
  417996:	imul   ebp,DWORD PTR [ecx],0x5
  417999:	fisub  DWORD PTR [edx+0x6]
  41799c:	iret   
  41799d:	out    dx,al
  41799e:	jno    0x41798e
  4179a0:	je     0x4179eb
  4179a2:	ret    0xa8d3
  4179a5:	mov    WORD PTR [ecx+0x3b],cs
  4179a8:	mov    eax,ds:0x4a36cba7
  4179ad:	lahf   
  4179ae:	es sbb dl,ch
  4179b1:	sbb    BYTE PTR [ebp-0x40],dh
  4179b4:	loop   0x417a15
  4179b6:	sub    ah,BYTE PTR [eax]
  4179b8:	sti    
  4179b9:	and    al,0x4
  4179bb:	xor    DWORD PTR [edi-0x18da39b4],eax
  4179c1:	aad    0x18
  4179c3:	int3   
  4179c4:	std    
  4179c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c6:	dec    ebp
  4179c7:	test   eax,0xd079ec52
  4179cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179cd:	jnp    0x4179d4
  4179cf:	ror    DWORD PTR [esi+0x776aec73],1
  4179d5:	or     BYTE PTR [esi+eiz*2-0x2e],bh
  4179d9:	push   edi
  4179da:	adc    eax,DWORD PTR [ecx]
  4179dc:	test   BYTE PTR ds:0x98a8dcc7,al
  4179e2:	dec    ecx
  4179e3:	es ja  0x417a55
  4179e6:	loop   0x4179af
  4179e8:	test   DWORD PTR [esi+ebx*4+0x3c0f060b],eax
  4179ef:	hlt    
  4179f0:	inc    eax
  4179f1:	test   dl,cl
  4179f3:	adc    cl,BYTE PTR [ebx]
  4179f5:	mov    ch,0xbf
  4179f7:	sub    DWORD PTR [ebp-0x3abac40d],0xffffffd7
  4179fe:	sub    sp,0xffe4
  417a02:	test   DWORD PTR [edi+0xc],ecx
  417a05:	test   DWORD PTR [eax+ebx*8],ecx
  417a08:	jmp    0xb3af309a
  417a0d:	adc    eax,0x74b4674d
  417a12:	push   ebp
  417a13:	dec    edx
  417a14:	jmp    0x4179fc
  417a16:	dec    edx
  417a17:	cdq    
  417a18:	inc    esi
  417a19:	bound  eax,QWORD PTR [esi+0x1e4e8a3]
  417a1f:	fistp  DWORD PTR [si]
  417a22:	lahf   
  417a23:	pushf  
  417a24:	xor    dl,BYTE PTR [edi]
  417a26:	imul   ecx,DWORD PTR [ecx-0x4d],0xffffffa8
  417a2a:	repnz inc eax
  417a2c:	push   ds
  417a2d:	push   edx
  417a2e:	repnz mov ds:0xc8530e5,eax
  417a34:	mov    ebp,0x626533c
  417a39:	inc    eax
  417a3a:	dec    edx
  417a3b:	scas   al,BYTE PTR es:[edi]
  417a3c:	sbb    BYTE PTR [edx+edx*8],cl
  417a3f:	mov    dl,0xd5
  417a41:	call   0x1ce8c121
  417a46:	imul   ecx,esi,0x863e6342
  417a4c:	adc    al,0xb7
  417a4e:	add    ah,BYTE PTR [ebx-0x44]
  417a51:	icebp  
  417a52:	daa    
  417a53:	jge    0x417a0b
  417a55:	test   DWORD PTR [edi*2+0x3fd1308d],ebp
  417a5c:	cli    
  417a5d:	in     al,dx
  417a5e:	cmp    al,0x8b
  417a60:	push   0xffffff89
  417a62:	xor    ch,BYTE PTR [eax-0x23]
  417a65:	loopne 0x417a15
  417a67:	inc    edx
  417a68:	fimul  WORD PTR [esi-0x48]
  417a6b:	inc    ecx
  417a6c:	call   FWORD PTR [edi+0x10]
  417a6f:	xchg   BYTE PTR [ecx],al
  417a71:	ret    
  417a72:	mov    eax,ds:0x29fa3294
  417a77:	xchg   esi,eax
  417a78:	sub    eax,0x2ec76a10
  417a7d:	(bad)  
  417a7f:	pop    ecx
  417a80:	dec    DWORD PTR [eax+edx*2]
  417a83:	mov    dl,0xd7
  417a85:	fidivr WORD PTR [edx+edx*2-0x69935992]
  417a8c:	jne    0x417a63
  417a8e:	shr    eax,1
  417a90:	xlat   BYTE PTR ds:[ebx]
  417a91:	sbb    esi,DWORD PTR [ecx-0x2e]
  417a94:	int    0x5f
  417a96:	mov    bl,0x38
  417a98:	inc    ecx
  417a99:	add    esp,esi
  417a9b:	and    eax,0x82edb834
  417aa0:	mov    cl,0xda
  417aa2:	fimul  WORD PTR [esi-0x50a521fd]
  417aa8:	popa   
  417aa9:	(bad)  
  417aaa:	loop   0x417a30
  417aac:	xchg   DWORD PTR [edx],ecx
  417aae:	mov    dh,0x65
  417ab0:	in     eax,0x13
  417ab2:	xchg   edx,eax
  417ab3:	push   ebx
  417ab4:	lahf   
  417ab5:	and    eax,0xfb2c7011
  417aba:	lds    edi,FWORD PTR [ebx-0x78]
  417abd:	mov    edx,0x2058a7d4
  417ac2:	(bad)  
  417ac4:	mov    edi,0x9a449336
  417ac9:	imul   ebp,DWORD PTR [edi+0x541d945d],0x64dbbc06
  417ad3:	fwait
  417ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ad5:	xchg   BYTE PTR [eax-0x6d],bl
  417ad8:	xor    edi,DWORD PTR [ebx+0x5491983e]
  417ade:	mov    BYTE PTR [eax],ch
  417ae0:	add    edi,DWORD PTR [edx+0x5e91443d]
  417ae6:	inc    edx
  417ae7:	xor    eax,0x79862e7c
  417aec:	leave  
  417aed:	retf   
  417aee:	imul   esi,ecx,0x15d92580
  417af4:	call   0xb66e:0x7ae50f08
  417afb:	gs jmp 0x53d4:0x16fcb560
  417b03:	std    
  417b04:	dec    ecx
  417b05:	jnp    0x417b4f
  417b07:	mov    ch,0xf0
  417b09:	outs   dx,BYTE PTR ds:[esi]
  417b0a:	pop    edx
  417b0b:	popa   
  417b0c:	dec    ebx
  417b0d:	int3   
  417b0e:	test   ecx,0xa564ff16
  417b14:	mov    ch,0x58
  417b16:	sbb    al,0xd5
  417b18:	jge    0x417b63
  417b1a:	das    
  417b1b:	and    al,0xe6
  417b1d:	add    al,0x90
  417b1f:	sti    
  417b20:	push   ds
  417b21:	in     eax,dx
  417b22:	cli    
  417b23:	mov    al,ds:0x9889dff0
  417b28:	leave  
  417b29:	cli    
  417b2a:	mov    dl,0xff
  417b2c:	rol    DWORD PTR [edx+ecx*1],0xa1
  417b30:	mov    WORD PTR [ecx+0x17],es
  417b33:	clc    
  417b34:	in     eax,dx
  417b35:	xchg   ah,ah
  417b37:	lock rcr DWORD PTR [ebx+0x7651ce62],1
  417b3e:	dec    ebx
  417b3f:	sub    eax,0xabdfb07e
  417b44:	into   
  417b45:	popa   
  417b46:	xchg   esi,eax
  417b47:	or     al,0xb2
  417b49:	stos   DWORD PTR es:[edi],eax
  417b4a:	and    DWORD PTR [edi+0x5a034d0],edx
  417b50:	je     0x417b73
  417b52:	cmp    ecx,DWORD PTR [ebx]
  417b54:	fdivr  DWORD PTR [edi]
  417b56:	push   ebp
  417b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b58:	loopne 0x417b31
  417b5a:	mov    al,ds:0x2f4e6a2e
  417b5f:	xchg   edi,eax
  417b60:	jae    0x417b54
  417b62:	and    esi,DWORD PTR [ecx+0x743c18e6]
  417b68:	push   ebp
  417b69:	mov    eax,0x748d9d58
  417b6e:	and    al,0xd
  417b70:	dec    ecx
  417b71:	jl     0x417b97
  417b73:	mov    ch,0x3
  417b75:	mov    al,0x5f
  417b77:	push   esp
  417b78:	lods   al,BYTE PTR ds:[esi]
  417b79:	ret    
  417b7a:	mov    ds:0x47269a34,al
  417b7f:	and    cl,ch
  417b81:	mov    WORD PTR [ebx],cs
  417b83:	in     al,0xe2
  417b85:	(bad)  [ebx]
  417b87:	clc    
  417b88:	aaa    
  417b89:	out    0x50,eax
  417b8b:	ret    
  417b8c:	ins    BYTE PTR es:[edi],dx
  417b8d:	push   esp
  417b8e:	das    
  417b8f:	cmp    eax,DWORD PTR [ebp-0x77]
  417b92:	cli    
  417b93:	sbb    eax,0x20466186
  417b98:	pop    es
  417b99:	test   eax,0xe836a79d
  417b9e:	inc    eax
  417b9f:	out    dx,eax
  417ba0:	adc    DWORD PTR [eax+0x3b0bbc2b],eax
  417ba6:	push   ebx
  417ba7:	repnz ins DWORD PTR es:[edi],dx
  417ba9:	sub    esi,DWORD PTR [ebp-0x3]
  417bac:	mov    ah,cl
  417bae:	sahf   
  417baf:	fadd   DWORD PTR [ebp+edx*8-0x1f196d51]
  417bb6:	test   al,0x7d
  417bb8:	lods   al,BYTE PTR ds:[esi]
  417bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bba:	inc    BYTE PTR [esi-0x108a195c]
  417bc0:	ror    DWORD PTR ds:0x6aa3a088,1
  417bc6:	cmp    eax,0x8c3c2b2e
  417bcb:	inc    esp
  417bcc:	and    eax,0x25889d8a
  417bd1:	pop    ds
  417bd2:	add    BYTE PTR [ebp-0x5525b7c2],dh
  417bd8:	and    ebp,DWORD PTR [edx+eax*2+0x2b60a0b7]
  417bdf:	pop    ecx
  417be0:	xor    bl,BYTE PTR [edi-0x7]
  417be3:	fs sbb al,0xb4
  417be6:	add    DWORD PTR [esi-0x6b49c418],edi
  417bec:	lds    eax,FWORD PTR [edi+edi*1+0x54afe3b2]
  417bf3:	pop    ebp
  417bf4:	jnp    0x417c0c
  417bf6:	inc    sp
  417bf8:	or     ah,ch
  417bfa:	enter  0x4d18,0x88
  417bfe:	cld    
  417bff:	mov    bp,0x68e
  417c03:	stos   BYTE PTR es:[edi],al
  417c04:	jg     0x417c76
  417c06:	popa   
  417c07:	mov    eax,ds:0xcd7c79a2
  417c0c:	sub    al,0x7d
  417c0e:	jg     0x417c1f
  417c10:	lods   eax,DWORD PTR ds:[esi]
  417c11:	push   0x7bf06119
  417c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c17:	sub    bl,BYTE PTR [ecx]
  417c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c1a:	in     eax,0xb6
  417c1c:	push   esp
  417c1d:	adc    DWORD PTR [edi-0x42],0x9589e28d
  417c24:	mov    ecx,0xe688276a
  417c29:	jno    0x417c2c
  417c2b:	pop    ebp
  417c2c:	and    edx,edx
  417c2e:	sub    BYTE PTR [edi+0x3a],dh
  417c31:	add    eax,0x11e3fecf
  417c36:	adc    eax,0xb3254cf
  417c3b:	mov    eax,0xc39611dd
  417c40:	test   WORD PTR [ebx],si
  417c43:	and    BYTE PTR [ebp+0x15],0x98
  417c47:	outs   dx,DWORD PTR ds:[esi]
  417c48:	jno    0x417bdf
  417c4a:	out    0xe3,al
  417c4c:	adc    cl,bh
  417c4e:	shr    WORD PTR [ecx],cl
  417c51:	in     eax,dx
  417c52:	repz in eax,dx
  417c54:	cld    
  417c55:	stos   DWORD PTR es:[edi],eax
  417c56:	inc    ecx
  417c57:	xor    al,0xca
  417c59:	dec    esp
  417c5a:	push   esi
  417c5b:	jl     0x417c09
  417c5d:	lea    esp,[esi]
  417c5f:	sbb    eax,0x8265a2d5
  417c64:	test   eax,0x8a1d4570
  417c69:	lahf   
  417c6a:	hlt    
  417c6b:	adc    eax,0x7085f30b
  417c70:	leave  
  417c71:	xchg   ecx,eax
  417c72:	cmp    BYTE PTR [edx-0x737e0b58],0x52
  417c79:	jmp    0xacfb2b7a
  417c7e:	xchg   edi,eax
  417c7f:	adc    al,bh
  417c81:	(bad)  
  417c83:	cli    
  417c84:	lahf   
  417c85:	aad    0x1
  417c87:	mov    esi,0x3a469346
  417c8c:	dec    ebx
  417c8d:	rol    BYTE PTR [ebx+0x4e],cl
  417c90:	out    dx,eax
  417c91:	xlat   BYTE PTR ds:[ebx]
  417c92:	sub    al,0xf3
  417c94:	int    0x90
  417c96:	loop   0x417c3e
  417c98:	xchg   ebx,eax
  417c99:	fstp   QWORD PTR [ebx+ebx*2+0x31bf863c]
  417ca0:	inc    esi
  417ca1:	pop    edx
  417ca2:	test   edx,ebx
  417ca4:	std    
  417ca5:	es inc esi
  417ca7:	jge    0x417cb9
  417ca9:	fdiv   st(5),st
  417cab:	mov    ecx,0xaa439422
  417cb0:	adc    DWORD PTR [ebp-0x69b08189],edx
  417cb6:	dec    esp
  417cb7:	mov    al,0xd9
  417cba:	enter  0x7a4e,0x44
  417cbe:	push   es
  417cbf:	scas   al,BYTE PTR es:[edi]
  417cc0:	cs jne 0x417cc4
  417cc3:	es sub eax,0x74eb329a
  417cc9:	out    dx,eax
  417cca:	push   es
  417ccb:	mov    WORD PTR [ebp-0x7e],cs
  417cce:	xchg   BYTE PTR [eax-0x63],al
  417cd1:	enter  0x4d7b,0x26
  417cd5:	pop    ebp
  417cd6:	dec    edi
  417cd7:	(bad)  
  417cd8:	loopne 0x417cdf
  417cda:	fldenv [eax-0x9]
  417cdd:	(bad)  [edi+0x72]
  417ce0:	adc    al,0xe5
  417ce2:	jecxz  0x417cd6
  417ce4:	jno    0x417ccd
  417ce6:	inc    edi
  417ce7:	xor    ebp,DWORD PTR [ebx+0xa]
  417cea:	call   0x9beb2113
  417cef:	jmp    DWORD PTR [esi+0x1240a1f1]
  417cf5:	in     al,dx
  417cf6:	cmp    al,0xcd
  417cf8:	cmp    edx,DWORD PTR [eax-0x36]
  417cfb:	pop    ss
  417cfc:	lods   al,BYTE PTR ds:[esi]
  417cfd:	stc    
  417cfe:	rcr    DWORD PTR [edi+0x5c8f62b5],cl
  417d04:	push   ds
  417d05:	fiadd  DWORD PTR [edx]
  417d07:	test   eax,0xe8a16195
  417d0c:	jle    0x417cfc
  417d0e:	push   ebx
  417d0f:	mov    DWORD PTR [esi],esi
  417d11:	jno    0x417d6e
  417d13:	mov    eax,0x102a388f
  417d18:	out    0xca,eax
  417d1a:	xchg   DWORD PTR [eax-0x255c8730],edx
  417d20:	int3   
  417d21:	lea    esi,[ecx]
  417d23:	repz pop ebx
  417d25:	dec    ebx
  417d26:	mov    ebx,0x9e08b631
  417d2b:	les    ebp,FWORD PTR [edi-0x5e8af877]
  417d31:	sub    ebp,DWORD PTR [eax+ecx*1+0xb]
  417d35:	push   es
  417d36:	mov    eax,0x10be634c
  417d3b:	inc    edi
  417d3c:	shl    DWORD PTR [edx+0xf],cl
  417d3f:	in     eax,0xb7
  417d41:	inc    eax
  417d42:	cwde   
  417d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d44:	js     0x417d62
  417d46:	jp     0x417cfd
  417d48:	sub    bh,bh
  417d4a:	push   ss
  417d4b:	in     eax,dx
  417d4c:	mov    ds:0xdbe17cf2,eax
  417d51:	xchg   ebp,eax
  417d52:	lock sbb edi,ebx
  417d55:	cld    
  417d56:	popf   
  417d57:	bound  ecx,QWORD PTR [ebx+0x1e]
  417d5a:	dec    ebp
  417d5b:	and    dh,BYTE PTR [esi+0x57]
  417d5e:	push   ebx
  417d5f:	and    cl,BYTE PTR [esi]
  417d61:	xchg   esi,eax
  417d62:	rcl    DWORD PTR ds:0xc7a9b272,0x15
  417d69:	jns    0x417d01
  417d6b:	retf   
  417d6c:	aam    0xfc
  417d6e:	xchg   ebp,eax
  417d6f:	ret    
  417d70:	add    edi,DWORD PTR [ecx-0x2ffe1793]
  417d76:	rcl    DWORD PTR ds:0xcbbf515d,cl
  417d7c:	jle    0x417d3b
  417d7e:	pop    ebp
  417d7f:	mov    cl,0x26
  417d81:	fs (bad) 
  417d83:	jle    0x417d9c
  417d85:	mov    eax,0x96cdd52e
  417d8a:	push   edi
  417d8b:	inc    BYTE PTR [edi+0x3070ac19]
  417d91:	outs   dx,BYTE PTR ds:[esi]
  417d92:	rcl    DWORD PTR [eax-0x5d],1
  417d95:	xchg   ecx,eax
  417d96:	fisttp QWORD PTR [esi+0x2c1f6719]
  417d9c:	jno    0x417df1
  417d9e:	sub    al,0x28
  417da0:	retf   0x8d00
  417da3:	xchg   esp,eax
  417da4:	scas   al,BYTE PTR es:[edi]
  417da5:	mov    cl,0xa7
  417da7:	fidivr WORD PTR [esi+0x30]
  417daa:	mov    esp,0x911023e
  417daf:	mov    ch,0xb5
  417db1:	loope  0x417d39
  417db3:	or     edi,DWORD PTR [edi-0x3731e594]
  417db9:	cli    
  417dba:	mov    edi,0xab4f8242
  417dbf:	das    
  417dc0:	aad    0x91
  417dc2:	push   cs
  417dc3:	ficom  DWORD PTR [eax]
  417dc5:	push   0xffffffc1
  417dc7:	call   0xe99b:0xb2160b68
  417dce:	cwde   
  417dcf:	pop    ss
  417dd0:	push   ds
  417dd1:	mov    edi,0xa0f1dcbf
  417dd6:	inc    ebx
  417dd7:	and    bl,BYTE PTR [esi-0x44945d9]
  417ddd:	push   ds
  417dde:	jmp    0x6b210cfe
  417de3:	pop    esi
  417de4:	and    DWORD PTR [ecx+ebx*8+0x8ce8f50],0x2409f409
  417def:	and    al,0xb6
  417df1:	iret   
  417df2:	fnsave [esi+0x70]
  417df5:	mov    al,0xad
  417df7:	lds    esi,FWORD PTR [edx-0x8]
  417dfa:	mov    edx,0xbb99aadc
  417dff:	bound  edx,QWORD PTR [eax+0x1f]
  417e02:	xchg   DWORD PTR [ebx+edi*8],edi
  417e05:	dec    edi
  417e06:	mov    ebp,0xc7ff582a
  417e0b:	xchg   esi,eax
  417e0c:	fmul   QWORD PTR [esi+eax*8]
  417e0f:	sub    BYTE PTR gs:[eax],cl
  417e12:	adc    eax,0x8196f6ea
  417e17:	mov    ebp,0x99d15d3
  417e1c:	pushf  
  417e1d:	jnp    0x417e93
  417e1f:	mov    edi,0x74ce229
  417e24:	pushf  
  417e25:	leave  
  417e26:	push   ss
  417e27:	jg     0x417db1
  417e29:	lea    ebp,[edx-0x6790722e]
  417e2f:	dec    edi
  417e30:	jmp    0xe010:0x20ffde1b
  417e37:	rcl    BYTE PTR [esi],0x55
  417e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3b:	and    BYTE PTR [edx+0x7e7c9eb2],0xfa
  417e42:	test   eax,0x7e70f2f
  417e47:	imul   edi,DWORD PTR [ebx+ebx*8],0x69
  417e4b:	stos   DWORD PTR es:[edi],eax
  417e4c:	loopne 0x417e6f
  417e4e:	dec    edx
  417e4f:	popf   
  417e50:	jg     0x417e93
  417e52:	ins    DWORD PTR es:[edi],dx
  417e53:	xchg   edx,eax
  417e54:	cld    
  417e55:	(bad)  [ecx+0x5a2c0cab]
  417e5b:	icebp  
  417e5c:	aad    0x92
  417e5e:	inc    esp
  417e5f:	fwait
  417e60:	out    dx,al
  417e61:	sahf   
  417e62:	aam    0x8b
  417e64:	sub    cl,BYTE PTR [esi]
  417e66:	jmp    0x2a10:0x738a00e9
  417e6d:	(bad)  
  417e6e:	cmp    edi,ebx
  417e70:	lods   eax,DWORD PTR ds:[esi]
  417e71:	rcr    DWORD PTR [eax],0x18
  417e74:	dec    eax
  417e75:	add    BYTE PTR [esi+0x3f1cc7ad],ch
  417e7b:	stos   BYTE PTR es:[edi],al
  417e7c:	sub    bh,BYTE PTR [esi-0xb7c9e8b]
  417e82:	xchg   BYTE PTR [edi-0x6a236ab9],bh
  417e88:	cmp    ecx,DWORD PTR [edi]
  417e8a:	xor    eax,0x8cdc6aba
  417e8f:	xor    esi,ebx
  417e91:	cmp    ebx,DWORD PTR [esi-0x547fc784]
  417e97:	aaa    
  417e98:	push   eax
  417e99:	jb     0x417e20
  417e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e9c:	push   edx
  417e9d:	in     al,dx
  417e9e:	xchg   esi,eax
  417e9f:	jp     0x417ea7
  417ea1:	jp     0x417e25
  417ea3:	push   0xffffffde
  417ea5:	fnstcw WORD PTR [ecx-0x2a1ed576]
  417eab:	bound  eax,QWORD PTR [edi+edx*2+0x31]
  417eaf:	or     DWORD PTR [esi],ebx
  417eb1:	pop    ebx
  417eb2:	out    dx,al
  417eb3:	call   0x62e8:0xe0b412ba
  417eba:	out    0x87,eax
  417ebc:	or     bl,BYTE PTR [eax-0x1d641e7a]
  417ec2:	outs   dx,BYTE PTR ds:[esi]
  417ec3:	dec    ecx
  417ec4:	repz inc esp
  417ec6:	rcl    edi,0x11
  417ec9:	mov    ds:0x17c789e7,eax
  417ece:	dec    esp
  417ecf:	rol    BYTE PTR [ecx+0x58fd8ed8],0xc6
  417ed6:	push   ebp
  417ed7:	rcr    BYTE PTR fs:[ecx+0x3],1
  417edb:	call   0xfea5:0xfa5bf522
  417ee2:	inc    edi
  417ee3:	ds pop ss
  417ee5:	mov    dl,0x62
  417ee7:	es lock repnz sub eax,0x31a96898
  417eef:	jp     0x417ee0
  417ef1:	adc    ebp,esp
  417ef3:	retf   
  417ef4:	popf   
  417ef5:	call   0xce82:0x2b3e094
  417efc:	or     DWORD PTR [ebp+0x49],eax
  417eff:	je     0x417f30
  417f01:	jno    0x417e8c
  417f03:	in     al,dx
  417f04:	push   ebx
  417f05:	dec    edx
  417f06:	jno    0x417e92
  417f08:	xchg   ecx,eax
  417f09:	sub    eax,0xa52e6129
  417f0e:	sbb    DWORD PTR [ecx],0xffffffcc
  417f11:	sub    DWORD PTR [eax],esi
  417f13:	jne    0x417ec1
  417f15:	and    ebp,edx
  417f17:	push   0xffffff85
  417f19:	iret   
  417f1a:	push   0x30aa72cf
  417f1f:	jne    0x417ebf
  417f21:	(bad)  
  417f23:	add    eax,0x8e6c94fc
  417f28:	stos   BYTE PTR es:[edi],al
  417f29:	sbb    eax,0x57cd9c6c
  417f2e:	loope  0x417f2c
  417f30:	push   es
  417f31:	cdq    
  417f32:	retf   
  417f33:	sbb    eax,0xc08f8d29
  417f38:	jp     0x417f7f
  417f3a:	fwait
  417f3b:	out    dx,al
  417f3c:	rol    BYTE PTR [ebp-0x610fd4f8],cl
  417f42:	push   eax
  417f43:	fcomp  DWORD PTR [edx-0x121a0a23]
  417f49:	jecxz  0x417f79
  417f4b:	(bad)  
  417f4c:	test   eax,0xd1266082
  417f51:	jle    0x417ed7
  417f53:	rcr    BYTE PTR ds:0x73d96bee,1
  417f59:	push   esi
  417f5a:	std    
  417f5b:	and    ah,BYTE PTR [edx-0x2]
  417f5e:	ins    DWORD PTR es:[edi],dx
  417f5f:	pop    edi
  417f60:	std    
  417f61:	xchg   DWORD PTR [ecx+edi*4+0x204aee6a],ebx
  417f68:	fdivr  QWORD PTR [edi-0x28]
  417f6b:	push   edx
  417f6c:	in     eax,0x10
  417f6e:	fcmovu st,st(2)
  417f70:	xchg   BYTE PTR [edx-0x17],ch
  417f73:	cdq    
  417f74:	add    al,0x46
  417f76:	pop    ss
  417f77:	inc    ebp
  417f78:	mov    dh,0x5c
  417f7a:	mov    eax,ds:0x2ed3ee87
  417f7f:	lods   eax,DWORD PTR ds:[esi]
  417f80:	jge    0x417fa1
  417f82:	pop    edi
  417f83:	or     bh,BYTE PTR [ebx-0x4cb85abd]
  417f89:	retf   
  417f8a:	(bad)  
  417f8c:	push   cs
  417f8d:	repz fdivp st(4),st
  417f90:	mov    ebx,0x7da3a3d1
  417f95:	jecxz  0x417f36
  417f97:	loopne 0x418004
  417f99:	lock movups XMMWORD PTR [esi-0x43],xmm7
  417f9e:	xchg   edi,eax
  417f9f:	pusha  
  417fa0:	jl     0x417f63
  417fa2:	rol    ecx,1
  417fa4:	xor    ch,BYTE PTR [esi]
  417fa6:	pop    ebp
  417fa7:	and    DWORD PTR [ebx+0x1e],esp
  417faa:	push   0x3c
  417fac:	repz and ebx,edx
  417faf:	and    eax,0x6bbbd907
  417fb4:	pop    ss
  417fb5:	js     0x417f76
  417fb7:	inc    ecx
  417fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fb9:	sbb    ebx,edi
  417fbb:	cmc    
  417fbc:	xchg   edx,eax
  417fbd:	jecxz  0x41801b
  417fbf:	inc    ebx
  417fc0:	lods   al,BYTE PTR ds:[esi]
  417fc1:	mov    ch,BYTE PTR [eax+0x10]
  417fc4:	outs   dx,DWORD PTR ds:[esi]
  417fc5:	jge    0x417f7d
  417fc7:	pop    ss
  417fc8:	xchg   BYTE PTR [eax],bh
  417fca:	outs   dx,DWORD PTR ds:[esi]
  417fcb:	push   esp
  417fcc:	adc    eax,0x945ab034
  417fd1:	das    
  417fd2:	cli    
  417fd3:	sbb    esp,DWORD PTR [edi-0x7f]
  417fd6:	jmp    0x8eca:0xec2d36c3
  417fdd:	mov    eax,ds:0xe1e38093
  417fe2:	push   ss
  417fe3:	cmp    BYTE PTR [ebp+ebp*1-0x31],al
  417fe7:	lea    edx,[esi+0x28a3d10]
  417fed:	cmc    
  417fee:	sub    BYTE PTR [ecx+0x4c],dl
  417ff1:	into   
  417ff2:	adc    BYTE PTR [ebx+0x1a],dl
  417ff5:	inc    ebx
  417ff6:	xchg   edx,eax
  417ff7:	sub    al,0xfe
  417ff9:	pop    ebx
  417ffa:	pop    esp
  417ffb:	mov    ds:0xa3a5591d,al
  418000:	mov    esi,0xebbc6b45
  418005:	retf   0x5744
  418008:	hlt    
  418009:	pop    ecx
  41800a:	ja     0x417f8e
  41800c:	xor    al,0x91
  41800e:	pop    eax
  41800f:	mov    DWORD PTR [eax],ebp
  418011:	enter  0x1e3a,0x78
  418015:	sti    
  418016:	test   eax,0xdbf3a899
  41801b:	aad    0x1d
  41801d:	sub    dh,BYTE PTR [esi-0x1e3f5890]
  418023:	jns    0x418027
  418025:	call   FWORD PTR [ebx+0x6f580e01]
  41802b:	dec    esi
  41802c:	adc    eax,0x667f9d56
  418031:	jecxz  0x4180a2
  418033:	pop    eax
  418034:	cld    
  418035:	mov    ecx,?
  418037:	add    BYTE PTR [ecx+0x2e],cl
  41803a:	or     ebp,DWORD PTR [eax]
  41803c:	fwait
  41803d:	jge    0x418071
  41803f:	adc    al,0xa6
  418041:	je     0x417fc5
  418043:	push   ecx
  418044:	and    DWORD PTR [ecx],esp
  418046:	into   
  418047:	mov    esp,edx
  418049:	adc    dh,BYTE PTR [esi+0x73]
  41804c:	cmp    al,0xd8
  41804e:	push   ebx
  41804f:	not    BYTE PTR ds:[esi-0xa1fb1ec]
  418056:	mov    ds:0xf9fcfa59,al
  41805b:	gs push ds
  41805d:	dec    eax
  41805e:	adc    esp,DWORD PTR [ebx+ebx*4-0x32]
  418062:	mov    ebx,0xaf3d3260
  418067:	in     eax,0xaf
  418069:	in     al,dx
  41806a:	pop    eax
  41806b:	int3   
  41806c:	sub    eax,0xbb541ce0
  418071:	push   ecx
  418072:	mov    WORD PTR [ebx+0x5f0ff8b9],cs
  418078:	lock xor al,0xca
  41807b:	lock pop edx
  41807d:	cmp    ebp,ebp
  41807f:	cmc    
  418080:	loopne 0x418061
  418082:	fnstenv [edx-0x7ced391a]
  418088:	stos   DWORD PTR es:[edi],eax
  418089:	mov    ds:0xd8ee9177,eax
  41808e:	mov    al,ds:0xfd69ce3b
  418093:	dec    esp
  418094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418095:	(bad)  
  418096:	aam    0x62
  418098:	adc    BYTE PTR ds:0x5fcaafbb,cl
  41809e:	ins    DWORD PTR es:[edi],dx
  41809f:	adc    DWORD PTR [ecx+0x5c3f07d8],ebx
  4180a5:	sub    eax,0x54179e98
  4180aa:	cmp    ecx,DWORD PTR [edx-0x19c0f863]
  4180b0:	adc    BYTE PTR [edx-0x2b],0x99
  4180b4:	data16 jl 0x418056
  4180b7:	arpl   WORD PTR [ebp+0x63b4ef3c],bp
  4180bd:	sub    eax,0x155d83da
  4180c2:	out    dx,al
  4180c3:	inc    ecx
  4180c4:	push   edi
  4180c5:	ins    BYTE PTR es:[edi],dx
  4180c6:	loop   0x41813d
  4180c8:	in     eax,dx
  4180c9:	test   BYTE PTR [eax-0x43],ah
  4180cc:	inc    esi
  4180cd:	inc    edi
  4180ce:	push   es
  4180cf:	mov    esi,0xe11fa5f1
  4180d4:	sub    dh,BYTE PTR [ecx+0x5b04cc20]
  4180da:	xchg   ebx,eax
  4180db:	sub    bh,BYTE PTR [edi+0x19]
  4180de:	out    0x30,eax
  4180e0:	aaa    
  4180e1:	mov    ah,0x46
  4180e3:	aaa    
  4180e4:	fistp  QWORD PTR [esi-0x4f9dc9d]
  4180ea:	(bad)  
  4180eb:	sub    BYTE PTR [ebx+0x7e5e397d],al
  4180f1:	push   ebp
  4180f2:	and    al,0xe8
  4180f4:	sub    DWORD PTR [ebx+0x25],esp
  4180f7:	push   edx
  4180f8:	in     eax,0x8e
  4180fa:	adc    al,0xc0
  4180fc:	cli    
  4180fd:	pop    eax
  4180fe:	cmp    BYTE PTR [eax+0x36],bh
  418101:	dec    esi
  418102:	pop    edx
  418103:	mov    ch,ah
  418105:	aaa    
  418106:	sbb    DWORD PTR [edx*2-0x78174e5b],edi
  41810d:	xor    al,0xc0
  41810f:	inc    esp
  418110:	inc    esi
  418111:	aaa    
  418112:	cs push esp
  418114:	or     bh,BYTE PTR [ebx+ebx*1+0x48]
  418118:	jb     0x418131
  41811a:	mov    ebp,0x9ce0b2b2
  41811f:	outs   dx,DWORD PTR ds:[esi]
  418120:	or     BYTE PTR [ecx+ebp*4],0xfa
  418124:	mov    gs,edi
  418126:	retf   0x36c9
  418129:	cmp    dl,ch
  41812b:	push   eax
  41812c:	pop    ecx
  41812d:	imul   ebx,DWORD PTR [esi-0x78ae0c9f],0xba7eb7bc
  418137:	inc    cx
  418139:	aaa    
  41813a:	mov    ebp,0x6534b0e
  41813f:	mov    bh,BYTE PTR [edi-0x32]
  418142:	fsub   QWORD PTR [ecx-0x23]
  418145:	ins    BYTE PTR es:[edi],dx
  418146:	dec    ebp
  418147:	mov    DWORD PTR [ebx],ebp
  418149:	inc    edx
  41814a:	mov    eax,0x510020f0
  41814f:	aam    0x7f
  418151:	sbb    eax,DWORD PTR [ecx]
  418153:	mov    al,BYTE PTR [esi-0x55f6578e]
  418159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41815a:	lock and al,0x65
  41815d:	test   al,0x65
  41815f:	sbb    BYTE PTR [edx-0x35],cl
  418162:	push   ebp
  418163:	cmp    ebp,esi
  418165:	inc    edi
  418166:	hlt    
  418167:	inc    ebp
  418168:	push   ss
  418169:	fcomp  QWORD PTR [edi-0x52]
  41816d:	dec    esi
  41816e:	inc    ebp
  41816f:	js     0x418157
  418171:	int3   
  418172:	enter  0xea1c,0x55
  418176:	mov    cl,0x4d
  418178:	dec    edi
  418179:	dec    esp
  41817a:	xchg   edi,eax
  41817b:	xchg   edx,eax
  41817c:	or     ah,dl
  41817e:	add    ah,BYTE PTR [ebp-0x7c1fbc38]
  418184:	jbe    0x418158
  418186:	mov    bl,0x14
  418188:	out    0xeb,al
  41818a:	sar    dh,0xeb
  41818d:	and    BYTE PTR [edx-0x5b],0xff
  418191:	fcompp 
  418193:	pop    edx
  418194:	mov    ah,cl
  418196:	fld    st(6)
  418198:	sbb    DWORD PTR [esi],esi
  41819a:	jo     0x41816f
  41819c:	lds    esp,FWORD PTR [ebx-0x1f869b19]
  4181a2:	in     eax,0xf4
  4181a4:	push   esi
  4181a5:	xor    al,0xbb
  4181a7:	mov    al,ds:0xe73316d6
  4181ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ad:	call   0xb2fa6ff4
  4181b2:	adc    BYTE PTR [eax-0x62],ch
  4181b5:	(bad)  
  4181b6:	fimul  DWORD PTR [ebp+0x41]
  4181b9:	jmp    0x4181cc
  4181bb:	push   ebx
  4181bc:	pop    eax
  4181bd:	add    DWORD PTR [eax-0x277dec2],esi
  4181c3:	dec    ebx
  4181c4:	dec    ebx
  4181c5:	iret   
  4181c6:	cmp    bh,BYTE PTR [ebx]
  4181c8:	add    bl,BYTE PTR [esi]
  4181ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181cb:	pop    ds
  4181cc:	cdq    
  4181cd:	cli    
  4181ce:	lds    eax,FWORD PTR [edi+ebx*8]
  4181d1:	mov    bl,0x95
  4181d3:	jbe    0x4181fb
  4181d5:	xor    eax,DWORD PTR [eax]
  4181d7:	fs jae 0x41822b
  4181da:	rol    bh,1
  4181dc:	lods   eax,DWORD PTR ds:[esi]
  4181dd:	jo     0x418201
  4181df:	loop   0x41817b
  4181e1:	fstp   st(0)
  4181e3:	push   edx
  4181e4:	fmulp  st(3),st
  4181e6:	dec    ecx
  4181e7:	pop    DWORD PTR [edi+0x68f64218]
  4181ed:	mov    ecx,0x38b6aec2
  4181f2:	pop    ss
  4181f3:	daa    
  4181f4:	jns    0x418180
  4181f6:	mov    eax,0xcd5c1566
  4181fb:	sbb    bh,BYTE PTR [edi+ebp*8-0x17]
  4181ff:	add    al,0x4b
  418201:	iret   
  418202:	inc    ebp
  418203:	xchg   esp,eax
  418204:	repnz mov ebx,DWORD PTR [ebx]
  418207:	xchg   edx,eax
  418208:	cmp    ah,dh
  41820a:	mov    ?,WORD PTR [edi]
  41820c:	iret   
  41820d:	in     eax,0x31
  41820f:	mov    al,0xe3
  418211:	lahf   
  418212:	jbe    0x4181db
  418214:	lds    eax,FWORD PTR [ebx]
  418216:	mov    BYTE PTR [ecx-0x2ee55943],bl
  41821c:	ret    
  41821d:	dec    esi
  41821e:	pop    esp
  41821f:	sbb    eax,0xad2e7002
  418224:	scas   eax,DWORD PTR es:[edi]
  418225:	or     esi,eax
  418227:	and    al,0x7c
  418229:	imul   edi,DWORD PTR ds:0x85a90cb4,0x44
  418230:	dec    ecx
  418231:	jae    0x4181ec
  418233:	adc    DWORD PTR [edx+0x30f76ccc],0x2cf82d72
  41823d:	mov    al,0xdb
  41823f:	and    edi,DWORD PTR [edi]
  418241:	dec    ebx
  418242:	shl    cl,1
  418244:	dec    edx
  418245:	mov    al,0xf
  418247:	and    eax,0xa22b1b34
  41824c:	mul    esi
  41824e:	in     al,dx
  41824f:	test   eax,0xdabcecfa
  418254:	xchg   esp,eax
  418255:	mov    al,0xb6
  418257:	call   DWORD PTR [ebp+0x346e0f42]
  41825d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825e:	adc    ch,dl
  418260:	add    esp,esi
  418262:	lock push 0x4743d862
  418268:	outs   dx,BYTE PTR ds:[esi]
  418269:	push   ebp
  41826a:	fist   WORD PTR ds:0xe03890a7
  418270:	push   esp
  418271:	into   
  418272:	int    0xd7
  418274:	mov    al,ds:0x9c6a5233
  418279:	cmp    edx,DWORD PTR [edi+eiz*4+0x4a]
  41827d:	sbb    BYTE PTR [ecx-0xd5b3ca9],ch
  418283:	rcl    BYTE PTR [eax-0x3],0xfa
  418287:	je     0x418262
  418289:	retf   
  41828a:	mov    eax,ds:0x3fb1cab8
  41828f:	cmp    ecx,DWORD PTR [edi-0x1b938611]
  418295:	jae    0x418279
  418297:	push   es
  418298:	push   esp
  418299:	lock dec ebp
  41829b:	jle    0x418318
  41829d:	scas   eax,DWORD PTR es:[edi]
  41829e:	jnp    0x41829b
  4182a0:	retf   0xd002
  4182a3:	stos   DWORD PTR es:[edi],eax
  4182a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a5:	fwait
  4182a6:	add    eax,0x584c0bde
  4182ab:	adc    DWORD PTR [edi],0x18fa3a05
  4182b1:	aas    
  4182b2:	adc    DWORD PTR [edx-0x16979f68],edx
  4182b8:	cmp    eax,0x17ad0ffe
  4182bd:	imul   ebx,DWORD PTR [esi-0x7f0215a3],0xffffffef
  4182c4:	sbb    DWORD PTR [esi],eax
  4182c6:	and    ebx,esp
  4182c8:	scas   al,BYTE PTR es:[edi]
  4182c9:	inc    ecx
  4182ca:	dec    ebx
  4182cb:	ins    DWORD PTR es:[edi],dx
  4182cc:	mov    esp,0x1c102a7e
  4182d1:	popa   
  4182d2:	inc    edi
  4182d3:	mov    edx,0x33c2e6a3
  4182d8:	inc    edi
  4182d9:	mov    bl,0x7b
  4182db:	dec    ecx
  4182dc:	dec    ebx
  4182dd:	pop    esi
  4182de:	dec    esi
  4182df:	xor    ebx,DWORD PTR [ecx-0x27]
  4182e2:	pop    eax
  4182e3:	inc    eax
  4182e4:	ret    
  4182e5:	imul   ebx,esi,0xf21601df
  4182eb:	cwde   
  4182ec:	push   esi
  4182ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ee:	cmp    DWORD PTR [ecx-0x691024dd],esp
  4182f4:	in     eax,0xa6
  4182f6:	imul   BYTE PTR [edx]
  4182f8:	pop    ebp
  4182f9:	inc    esp
  4182fa:	les    edi,FWORD PTR [edx-0x6570326e]
  418300:	mov    esi,0xf0db5ef6
  418305:	adc    BYTE PTR [ebx+0x1f],dh
  418308:	add    al,BYTE PTR [ebx+0x69]
  41830b:	ret    0xaad4
  41830e:	xor    al,0xbd
  418310:	shl    DWORD PTR [ebx-0x6ede5e7a],0xac
  418317:	xchg   esi,eax
  418318:	fwait
  418319:	add    eax,0x3f0cd10
  41831e:	out    0xbb,al
  418320:	rol    BYTE PTR [edx+ebx*8],1
  418323:	dec    ecx
  418324:	lea    edi,[edx-0x64]
  418327:	cmc    
  418328:	mov    dh,BYTE PTR [esi+0x5da5e324]
  41832e:	retf   0xe563
  418331:	repz sub esi,edi
  418334:	mov    edi,0x127ffe2e
  418339:	mov    esp,0x99aabde0
  41833e:	es retf 0xe2b4
  418342:	xchg   esi,eax
  418343:	mov    esp,0x737c6819
  418348:	iret   
  418349:	jg     0x41839c
  41834b:	push   0xffffffdf
  41834d:	rcr    cl,1
  41834f:	adc    BYTE PTR [esi*1-0x621705ac],ch
  418356:	(bad)  
  418357:	rol    DWORD PTR [esi+0x22],1
  41835a:	mov    eax,ds:0x9e7afd9a
  41835f:	jg     0x4183c1
  418361:	(bad)  
  418362:	jnp    0x41835f
  418364:	jo     0x4183be
  418366:	pop    ebp
  418367:	or     BYTE PTR [eax],bh
  418369:	test   eax,0x6f3d20f7
  41836e:	adc    cl,dh
  418370:	xor    BYTE PTR [ecx+0x567d214f],cl
  418376:	mov    BYTE PTR [esi],ah
  418378:	mov    dl,0xeb
  41837a:	(bad)  
  41837b:	or     ebp,DWORD PTR [ecx+esi*2-0x6f6971dc]
  418382:	dec    eax
  418383:	lea    esi,ds:0xc8213a08
  418389:	mov    al,ds:0xe36efe57
  41838e:	fldcw  WORD PTR [eax+ecx*8+0x7c]
  418392:	cmp    dl,BYTE PTR [ecx]
  418394:	sahf   
  418395:	(bad)  
  418396:	dec    edx
  418398:	mov    dh,BYTE PTR [ebx-0x47]
  41839b:	jg     0x4183ae
  41839d:	sbb    eax,0x63d894f6
  4183a2:	xor    dh,ch
  4183a4:	adc    BYTE PTR [ecx+0x3b],cl
  4183a7:	out    0xfc,eax
  4183a9:	and    ch,BYTE PTR [edx+0x3a8e91e6]
  4183af:	(bad)  
  4183b0:	jle    0x41838b
  4183b2:	out    0xc4,eax
  4183b4:	cwde   
  4183b5:	fcom   DWORD PTR [eax+0x2a548562]
  4183bb:	jg     0x41836d
  4183bd:	xchg   ebp,eax
  4183be:	jecxz  0x418424
  4183c0:	test   DWORD PTR [esi+0x6ead90e8],esi
  4183c6:	cmp    eax,0x6c5cf047
  4183cb:	and    eax,0xf4c581e8
  4183d0:	cmp    BYTE PTR [ecx-0x66],dl
  4183d3:	dec    ebx
  4183d4:	push   ebp
  4183d5:	mov    eax,0x58cd6da
  4183da:	outs   dx,DWORD PTR ds:[esi]
  4183db:	adc    DWORD PTR [edx],eax
  4183dd:	das    
  4183de:	rcl    BYTE PTR [eax+0xe461421],1
  4183e4:	push   0x4e5e93b3
  4183e9:	rol    bh,0x2f
  4183ec:	test   BYTE PTR es:[eax],0x39
  4183f0:	fidiv  WORD PTR [edx+0x1166c988]
  4183f6:	shl    BYTE PTR [ebx],cl
  4183f8:	test   BYTE PTR [ebp-0x3a],0x24
  4183fc:	push   0xffffffa4
  4183fe:	rcl    ebx,cl
  418400:	inc    BYTE PTR [ebx]
  418402:	push   edi
  418403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418404:	ins    DWORD PTR es:[edi],dx
  418405:	and    eax,0x9b37788e
  41840a:	call   0xb9e26eaa
  41840f:	data16 ja 0x418401
  418412:	sahf   
  418413:	rcr    dl,1
  418415:	mul    BYTE PTR [ecx+eax*8]
  418418:	cli    
  418419:	lods   al,BYTE PTR ds:[esi]
  41841a:	xor    BYTE PTR [ebp+0x3d304e60],dh
  418420:	mov    BYTE PTR [ebx+0x44123d08],bl
  418426:	xor    BYTE PTR [ebx],dh
  418428:	adc    esi,DWORD PTR [eax-0x49bda9e0]
  41842e:	jmp    0xa6638175
  418433:	loope  0x418481
  418435:	xchg   DWORD PTR [ebx+0x14c58f93],ecx
  41843b:	lods   eax,DWORD PTR gs:[esi]
  41843d:	adc    BYTE PTR [ecx+0x33],0x34
  418441:	add    BYTE PTR [eax+0x1ce962f9],ch
  418447:	mov    al,0x6a
  418449:	mov    DWORD PTR [ebx+0x19901e11],ebp
  41844f:	js     0x41849b
  418451:	inc    esi
  418452:	or     DWORD PTR [esi-0x758034f3],ebx
  418458:	mov    ebp,0x62f04535
  41845d:	push   ebp
  41845e:	mov    DWORD PTR [esi],ebx
  418460:	popf   
  418461:	int    0xc1
  418463:	push   ds
  418464:	in     eax,0x13
  418466:	sahf   
  418467:	rol    DWORD PTR ds:[edx+0x59],cl
  41846b:	jnp    0x4184dc
  41846d:	jp     0x41843a
  41846f:	repz mov esp,0x2f4e78ca
  418475:	lods   al,BYTE PTR ds:[esi]
  418476:	lods   al,BYTE PTR ds:[esi]
  418477:	and    DWORD PTR ds:0xc904fa3e,edx
  41847d:	or     cl,BYTE PTR [esi-0x2648a014]
  418483:	lods   eax,DWORD PTR ds:[si]
  418485:	dec    esp
  418486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418487:	pop    ds
  418488:	dec    edi
  418489:	adc    al,0xd4
  41848b:	cmp    cl,BYTE PTR [edi+0x11]
  41848e:	inc    eax
  41848f:	mov    al,0xa8
  418491:	sbb    ecx,DWORD PTR [edi+ecx*4+0x6198e5fd]
  418498:	jg     0x4184a8
  41849a:	adc    DWORD PTR [eax],ebx
  41849c:	fdivr  QWORD PTR [ebx+esi*1-0x4c]
  4184a0:	mov    dh,0x57
  4184a2:	sub    ecx,DWORD PTR [eax]
  4184a4:	mov    DWORD PTR [esi],eax
  4184a6:	in     al,dx
  4184a7:	add    bl,bl
  4184a9:	repz cli 
  4184ab:	jns    0x418516
  4184ad:	icebp  
  4184ae:	add    eax,esp
  4184b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b1:	fild   QWORD PTR es:[edi-0x33]
  4184b5:	mov    cl,0xb5
  4184b7:	adc    dl,0xe7
  4184ba:	stc    
  4184bb:	adc    ebx,0xc6486c67
  4184c1:	shl    DWORD PTR [ecx],cl
  4184c3:	retf   
  4184c4:	xchg   esp,eax
  4184c5:	dec    eax
  4184c6:	dec    edi
  4184c7:	inc    ebp
  4184c8:	dec    edx
  4184c9:	pop    es
  4184ca:	add    al,BYTE PTR [edi-0x4d]
  4184cd:	aas    
  4184ce:	cwde   
  4184cf:	or     DWORD PTR [ecx],0xffffffe8
  4184d2:	add    DWORD PTR [ebp-0x62780367],ecx
  4184d8:	and    BYTE PTR [edx],al
  4184da:	cmp    bl,bl
  4184dc:	mov    dl,0x6b
  4184de:	pop    ebx
  4184df:	mov    eax,ds:0x6648fc58
  4184e4:	sub    ebp,0x4f
  4184e7:	bound  ebx,QWORD PTR [edi+ecx*1+0x22]
  4184eb:	mov    eax,ds:0x2f02bad2
  4184f0:	popa   
  4184f1:	push   ss
  4184f2:	iret   
  4184f3:	retf   
  4184f4:	fsubr  QWORD PTR [eax+0x7a9c79b7]
  4184fa:	pop    ebx
  4184fb:	hlt    
  4184fc:	mov    ch,0xc5
  4184fe:	push   esi
  4184ff:	jbe    0x41855a
  418501:	retf   
  418502:	fdecstp 
  418504:	pop    edx
  418505:	je     0x418546
  418507:	mov    ds:0xfb24d34e,eax
  41850c:	push   cs
  41850d:	sub    eax,0xd25ab4d5
  418512:	xchg   BYTE PTR [ecx-0x6b],al
  418515:	mov    DWORD PTR [ebx+ecx*2-0x2f5b6fd3],edi
  41851c:	(bad)  
  41851d:	(bad)  
  41851f:	dec    esi
  418520:	test   al,0x75
  418522:	dec    edx
  418523:	sbb    cl,dh
  418525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418526:	push   es
  418527:	popa   
  418528:	aam    0x50
  41852a:	adc    DWORD PTR [eax-0x66],0x1834d30b
  418531:	in     al,0xd2
  418533:	fmul   st(1),st
  418535:	cwde   
  418536:	inc    ecx
  418537:	neg    BYTE PTR [edx]
  418539:	adc    BYTE PTR [esi+0x25],bh
  41853c:	daa    
  41853d:	mov    dh,BYTE PTR [eax-0x10]
  418540:	pop    edi
  418541:	sbb    BYTE PTR [edx+0x63],0xb
  418545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418546:	mov    WORD PTR [edx-0x55],ds
  418549:	adc    al,0xdd
  41854b:	dec    ecx
  41854c:	xchg   edi,eax
  41854d:	push   ebp
  41854e:	dec    edi
  41854f:	adc    eax,0xa8519293
  418554:	sar    BYTE PTR [edx+esi*4+0x12],1
  418558:	sti    
  418559:	adc    BYTE PTR [ecx-0x16],al
  41855c:	scas   eax,DWORD PTR es:[edi]
  41855d:	das    
  41855e:	in     eax,0xe3
  418560:	adc    edx,esi
  418562:	inc    eax
  418563:	sbb    esi,ebx
  418565:	popf   
  418566:	shl    DWORD PTR [eax],cl
  418568:	mov    bh,0x26
  41856a:	out    0x9b,eax
  41856c:	outs   dx,DWORD PTR ds:[esi]
  41856d:	and    dl,al
  41856f:	loopne 0x4185d2
  418571:	lods   eax,DWORD PTR ds:[esi]
  418572:	adc    al,0x5d
  418574:	xchg   ebx,eax
  418575:	or     al,0x92
  418577:	mov    al,BYTE PTR [edi]
  418579:	pop    ebp
  41857a:	sbb    BYTE PTR [eax],0xcb
  41857d:	leave  
  41857e:	jns    0x41852b
  418580:	cdq    
  418581:	xor    eax,0x457b0d9a
  418586:	push   0xffffffc5
  418588:	shl    DWORD PTR [ecx-0x59],1
  41858b:	or     al,0xd5
  41858d:	imul   edx,DWORD PTR [ebx+0x22],0x59bc8e1
  418594:	(bad)  
  418595:	adc    eax,0x1f923986
  41859a:	xor    BYTE PTR [ebx-0x7c92ada6],ch
  4185a0:	or     eax,0x411387e4
  4185a5:	lea    esp,ds:0x830252d4
  4185ab:	pop    esi
  4185ac:	mov    dl,0x7
  4185ae:	xchg   esi,eax
  4185af:	stc    
  4185b0:	imul   ecx,edi,0x1757588d
  4185b6:	retf   
  4185b7:	adc    esi,DWORD PTR [edi]
  4185b9:	in     al,0x92
  4185bb:	pop    edi
  4185bc:	mov    edi,0xbd61f050
  4185c1:	mov    edi,0x499d5d3a
  4185c6:	or     al,BYTE PTR [esi-0x70]
  4185c9:	push   edx
  4185ca:	fbstp  TBYTE PTR [ebx+ecx*2]
  4185cd:	xor    eax,0x17f928c9
  4185d2:	push   ds
  4185d3:	loop   0x418560
  4185d5:	push   cs
  4185d6:	bound  edx,QWORD PTR [eax+0x1]
  4185d9:	push   eax
  4185da:	fsub   QWORD PTR [esi]
  4185dc:	ftst   
  4185de:	sbb    ch,0x4
  4185e1:	stos   DWORD PTR es:[edi],eax
  4185e2:	jecxz  0x41856b
  4185e4:	pop    es
  4185e5:	inc    ecx
  4185e6:	adc    al,0x3d
  4185e8:	(bad)  [ebp+0x32]
  4185eb:	jl     0x418640
  4185ed:	jno    0x418605
  4185ef:	cmp    al,0x21
  4185f1:	sbb    al,0x12
  4185f3:	dec    ebx
  4185f4:	fild   QWORD PTR [esi]
  4185f6:	sbb    eax,edx
  4185f8:	xchg   cl,cl
  4185fa:	ss (bad) 
  4185fd:	fwait
  4185fe:	in     al,dx
  4185ff:	jecxz  0x4185da
  418601:	mov    edi,0x273adabb
  418606:	repnz mov ecx,0x208cdb30
  41860c:	cmp    eax,DWORD PTR [edi]
  41860e:	xchg   ebp,eax
  41860f:	fsubr  QWORD PTR [ecx+0x58]
  418612:	jno    0x4185d5
  418614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418615:	int3   
  418616:	jnp    0x418647
  418618:	pop    ss
  418619:	jb     0x418691
  41861b:	add    DWORD PTR [eax],ecx
  41861d:	rcl    DWORD PTR [esi+0x5d],1
  418620:	push   ebx
  418621:	rol    DWORD PTR [edx+eiz*8-0x1d],0x74
  418626:	fmul   DWORD PTR [eax-0x7f]
  418629:	cmp    BYTE PTR [edx-0x4b9746cb],dl
  41862f:	xchg   BYTE PTR [edi-0x4e],ah
  418632:	pop    edx
  418633:	scas   eax,DWORD PTR es:[edi]
  418634:	sbb    eax,0x678acd0a
  418639:	inc    ebx
  41863a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41863b:	adc    eax,0x4b25adff
  418640:	pcmpeqd mm1,QWORD PTR [edi+0x338d9b4f]
  418647:	popf   
  418648:	out    0xd5,eax
  41864a:	scas   al,BYTE PTR es:[edi]
  41864b:	mov    edi,DWORD PTR [eax+0x59]
  41864e:	(bad)
  418651:	daa    
  418652:	in     al,dx
  418653:	cmp    BYTE PTR [ebp-0x6318f2a],dh
  418659:	xlat   BYTE PTR ds:[ebx]
  41865a:	push   esi
  41865b:	sar    DWORD PTR [esi-0x5eb6f1ab],0x95
  418662:	pop    ebp
  418663:	adc    al,0x75
  418665:	cld    
  418666:	adc    ah,BYTE PTR [esi]
  418668:	mov    ds:0x58821069,al
  41866d:	push   ebx
  41866e:	test   eax,0x3a94fa05
  418673:	sbb    esp,DWORD PTR [edi+0x4f6d92da]
  418679:	in     eax,0x78
  41867b:	push   ds
  41867c:	xor    si,WORD PTR [eax+0x61]
  418680:	pop    edi
  418681:	mov    DWORD PTR ds:0x69fee86e,ecx
  418687:	arpl   WORD PTR [eax+0x20],ax
  41868a:	xor    BYTE PTR [ebp-0x2e45fa69],dl
  418690:	lods   al,BYTE PTR ds:[esi]
  418691:	pop    edx
  418692:	jge    0x4186aa
  418694:	cmp    al,0xd1
  418696:	mov    edi,0x94a1586f
  41869b:	sbb    BYTE PTR [edi+eiz*1],dl
  41869e:	lea    edi,[eax+0x17]
  4186a1:	(bad)  
  4186a2:	push   ss
  4186a3:	ret    0xe3d3
  4186a6:	push   edi
  4186a7:	int    0x88
  4186a9:	ret    0x5075
  4186ac:	cmc    
  4186ad:	outs   dx,BYTE PTR ds:[esi]
  4186ae:	imul   esi,DWORD PTR [esi-0x487dc596],0xd4e9acaf
  4186b8:	lea    ecx,[edi+0x6c]
  4186bb:	push   ss
  4186bc:	cmp    BYTE PTR [esi-0x6db1bcdd],ch
  4186c2:	mov    ch,0xf
  4186c4:	xchg   esp,eax
  4186c5:	pop    ds
  4186c6:	add    cl,BYTE PTR [esi+0x4dc97e6d]
  4186cc:	test   al,0xc3
  4186ce:	mov    BYTE PTR [edx],ch
  4186d0:	rcr    DWORD PTR [esi],1
  4186d2:	bound  eax,QWORD PTR [esi-0x1beada2a]
  4186d8:	call   0x87da:0xb5ad6301
  4186df:	mov    eax,ds:0x9fa17e71
  4186e4:	aaa    
  4186e5:	mov    ds:0x4a8fa25c,eax
  4186ea:	js     0x418730
  4186ec:	sbb    eax,DWORD PTR [ebp+0x24]
  4186ef:	loopne 0x4186f3
  4186f1:	and    DWORD PTR [edi-0x20],ecx
  4186f4:	aas    
  4186f5:	scas   eax,DWORD PTR es:[edi]
  4186f6:	daa    
  4186f7:	push   ecx
  4186f8:	push   ds
  4186f9:	cmp    eax,0xcc2ed637
  4186fe:	jmp    0x5ccd:0xad94bf19
  418705:	(bad)  
  418706:	mov    bl,0xc0
  418708:	fucom  st(2)
  41870a:	out    dx,al
  41870b:	xor    cl,0x9e
  41870e:	sub    cl,BYTE PTR [edi+ebp*8+0x5593c6b7]
  418715:	(bad)  
  418717:	sbb    eax,0xb49b5dc6
  41871c:	nop
  41871d:	mov    ecx,?
  41871f:	xor    dh,ah
  418721:	(bad)  
  418723:	xchg   BYTE PTR [esi+0x66],ch
  418726:	daa    
  418727:	xor    al,0x95
  418729:	xchg   edi,eax
  41872a:	adc    BYTE PTR [edi+0x7064e14c],ah
  418730:	push   edx
  418731:	in     al,dx
  418732:	push   esi
  418733:	arpl   WORD PTR [edi],bx
  418735:	and    BYTE PTR [ecx],al
  418737:	jmp    0x5d6f87a2
  41873c:	mov    eax,ds:0xb5700f3a
  418741:	cwde   
  418742:	cmp    ecx,DWORD PTR [ecx-0x5d]
  418745:	jmp    0x4186ca
  418747:	add    al,0xb2
  418749:	(bad)  
  41874a:	outs   dx,DWORD PTR ds:[esi]
  41874b:	adc    esp,DWORD PTR [ecx-0x37]
  41874e:	pop    ecx
  41874f:	sbb    BYTE PTR [ecx+eiz*8+0x17],0x59
  418754:	push   ebx
  418755:	adc    ebx,esi
  418757:	aaa    
  418758:	jg     0x41877b
  41875a:	imul   esi,DWORD PTR [edx+ebp*2-0xb7da352]
  418762:	icebp  
  418763:	push   esi
  418764:	fdiv   DWORD PTR [edx-0x4e98893e]
  41876a:	lods   al,BYTE PTR ds:[esi]
  41876b:	sub    BYTE PTR [esi+0x3a],0xd5
  41876f:	dec    esp
  418770:	fisubr DWORD PTR ds:0xf7c838a4
  418776:	popf   
  418777:	adc    bl,ch
  418779:	popa   
  41877a:	adc    eax,0xd7aedbf6
  41877f:	mov    ds:0xabe1a83b,eax
  418784:	xlat   BYTE PTR ds:[ebx]
  418785:	adc    ch,BYTE PTR [ebx-0x7f]
  418788:	mov    eax,0xc5cf58ad
  41878d:	ss loopne 0x4187ee
  418790:	(bad)  
  418792:	adc    bl,0xd1
  418795:	xchg   BYTE PTR [esi+0x4ebee0a9],cl
  41879b:	adc    BYTE PTR [ebp-0x4b],dh
  41879e:	jle    0x4187bb
  4187a0:	test   BYTE PTR [esi],bl
  4187a2:	in     eax,dx
  4187a3:	push   0x54
  4187a5:	hlt    
  4187a6:	mov    esi,0x6f8d7f7
  4187ab:	xchg   esi,eax
  4187ac:	xchg   esi,eax
  4187ad:	mov    ah,cl
  4187af:	std    
  4187b0:	mov    al,0x65
  4187b2:	popa   
  4187b3:	or     edi,esi
  4187b5:	mov    ecx,0xd95c39cd
  4187ba:	scas   eax,DWORD PTR es:[edi]
  4187bb:	shl    BYTE PTR [ecx],0x55
  4187be:	mov    bh,0x25
  4187c0:	dec    edi
  4187c1:	pushf  
  4187c2:	xchg   BYTE PTR [eax+0x9397461],ch
  4187c8:	out    0x7d,al
  4187ca:	daa    
  4187cb:	push   es
  4187cc:	aas    
  4187cd:	dec    ebp
  4187ce:	loope  0x41876a
  4187d0:	pop    esi
  4187d1:	out    0x30,al
  4187d3:	mov    ebp,0x163bfbe2
  4187d8:	and    esi,DWORD PTR [eax+0x43]
  4187db:	es (bad) 
  4187dd:	cmp    DWORD PTR [ebx-0x57695a7c],edx
  4187e3:	imul   ecx,DWORD PTR [esi+0x56],0x3b
  4187e7:	popa   
  4187e8:	dec    esp
  4187e9:	repz adc ebx,esp
  4187ec:	icebp  
  4187ed:	icebp  
  4187ee:	pushf  
  4187ef:	shl    DWORD PTR [ebp+ecx*4+0x4697121f],cl
  4187f6:	mov    cl,0xfd
  4187f8:	mov    ebx,0x6109669c
  4187fd:	pop    edi
  4187fe:	cli    
  4187ff:	inc    esi
  418800:	mov    cl,BYTE PTR [eax+0x53]
  418803:	int3   
  418804:	push   ebx
  418805:	xchg   esi,eax
  418806:	and    edx,DWORD PTR [esi+0x6eca9042]
  41880c:	inc    esp
  41880d:	data16 mov dh,0xbe
  418810:	add    bl,ch
  418812:	rcl    DWORD PTR [edi+0x7b],1
  418815:	xchg   esi,eax
  418816:	int    0xd4
  418818:	xchg   edi,eax
  418819:	test   eax,0x9c7714cf
  41881e:	add    cl,BYTE PTR es:[eax+ecx*4-0x55]
  418823:	mov    ds:0x6d60ac1,eax
  418828:	adc    BYTE PTR [esi-0x3a],ch
  41882b:	pop    ecx
  41882c:	dec    ebx
  41882d:	pusha  
  41882e:	push   edi
  41882f:	jno    0x41885f
  418831:	mov    cs,WORD PTR [ecx]
  418833:	loope  0x41884f
  418835:	xchg   BYTE PTR [ebp-0xa],dh
  418838:	ret    0xcb69
  41883b:	and    ebp,DWORD PTR [edx+esi*2]
  41883e:	in     eax,dx
  41883f:	cmp    eax,0xa0270a58
  418844:	ss and eax,0x4d1ed070
  41884a:	cmp    dl,BYTE PTR [esi+0x3d]
  41884d:	push   ebp
  41884e:	push   cs
  41884f:	(bad)  
  418850:	enter  0xbb99,0x78
  418854:	dec    esp
  418855:	es push 0xf29b5e95
  41885b:	stos   BYTE PTR es:[edi],al
  41885c:	push   ebp
  41885d:	pop    es
  41885e:	es pop ds
  418860:	cdq    
  418861:	sub    DWORD PTR [esi],ecx
  418863:	popa   
  418864:	dec    edx
  418865:	outs   dx,BYTE PTR ds:[esi]
  418866:	add    edi,DWORD PTR [edx+0x228c1843]
  41886c:	and    DWORD PTR [esi],0x77d13719
  418872:	cmp    dh,0x44
  418875:	(bad)  
  418876:	in     al,0x90
  418878:	(bad)  [edx+0x61]
  41887b:	mov    al,ds:0x73729e51
  418880:	push   0xe79a80ca
  418885:	test   ecx,edx
  418887:	scas   al,BYTE PTR es:[edi]
  418888:	repz scas al,BYTE PTR es:[edi]
  41888a:	cmp    DWORD PTR [edx-0x38],0xffffffdc
  41888e:	popa   
  41888f:	cmp    edx,DWORD PTR [ebp-0x6157786b]
  418895:	aas    
  418896:	push   ecx
  418897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418898:	sub    DWORD PTR [eax+ebx*4-0x6c],esi
  41889c:	mov    ecx,0x85aab429
  4188a1:	xor    eax,0xef343e1b
  4188a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a7:	jp     0x418881
  4188a9:	daa    
  4188aa:	cli    
  4188ab:	les    ebx,FWORD PTR [edi-0x577c380d]
  4188b1:	into   
  4188b2:	js     0x41892b
  4188b4:	(bad)  
  4188b5:	mov    ebp,0xa5569307
  4188ba:	aaa    
  4188bb:	xor    dl,dh
  4188bd:	pop    esp
  4188be:	es push edi
  4188c0:	stos   DWORD PTR es:[edi],eax
  4188c1:	mov    ch,0x74
  4188c3:	int    0x39
  4188c5:	stos   BYTE PTR es:[edi],al
  4188c6:	rol    BYTE PTR [edi-0x7f],1
  4188c9:	jecxz  0x418937
  4188cb:	mov    dh,0x25
  4188cd:	add    BYTE PTR [ebx+0x1029ab97],al
  4188d3:	mov    ebx,cr6
  4188d6:	dec    esi
  4188d7:	dec    eax
  4188d9:	out    0xeb,eax
  4188db:	ins    DWORD PTR es:[edi],dx
  4188dc:	sar    BYTE PTR [edi+0xd],1
  4188df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e0:	fwait
  4188e1:	loop   0x4188f8
  4188e3:	repz push edx
  4188e5:	mov    edi,0xd0eb7f50
  4188ea:	inc    eax
  4188eb:	pop    eax
  4188ec:	fadd   st,st(3)
  4188ee:	jb     0x418889
  4188f0:	sbb    al,dl
  4188f2:	mov    ds:0x4b621d07,eax
  4188f7:	push   cs
  4188f8:	test   al,0x16
  4188fa:	mov    esp,0x7311f24d
  4188ff:	cmp    DWORD PTR [esi-0x9c46ea8],0x355bcc21
  418909:	mov    eax,0xff2829f7
  41890e:	xor    eax,ebx
  418910:	sbb    DWORD PTR [eax],edx
  418912:	ss add eax,0xb9496bce
  418918:	daa    
  418919:	push   ebp
  41891a:	nop
  41891b:	adc    edx,DWORD PTR [edx+0x56281467]
  418921:	xchg   edx,eax
  418922:	or     esp,DWORD PTR [eax-0x53]
  418925:	inc    ebp
  418926:	fucomp st(3)
  418928:	sar    DWORD PTR [esi+0x2ec936a0],1
  41892e:	sbb    al,0x76
  418930:	test   ah,al
  418932:	lock jle 0x41892e
  418935:	pop    es
  418936:	rcr    edi,0x2b
  418939:	les    esp,FWORD PTR [esi+0x36]
  41893c:	data16 je 0x41891e
  41893f:	lods   eax,DWORD PTR ds:[esi]
  418940:	sbb    cl,dl
  418942:	pusha  
  418943:	scas   al,BYTE PTR es:[edi]
  418944:	aam    0xc7
  418946:	xchg   ebx,eax
  418947:	cmc    
  418948:	sbb    dl,0x1d
  41894b:	fmul   st(1),st
  41894d:	pxor   mm0,mm2
  418950:	(bad)  
  418951:	xor    ecx,eax
  418953:	xor    ebp,esi
  418955:	arpl   WORD PTR [edi-0x7c],cx
  418958:	pop    es
  418959:	stc    
  41895a:	sbb    al,0x8b
  41895c:	adc    ebx,0xe625b517
  418962:	scas   al,BYTE PTR es:[edi]
  418963:	(bad)  
  418964:	ins    DWORD PTR es:[edi],dx
  418965:	fmul   QWORD PTR [esi+eax*8]
  418968:	sbb    ch,bh
  41896a:	cwde   
  41896b:	dec    ebp
  41896c:	jp     0x41890b
  41896e:	pop    ebp
  41896f:	mov    ds:0x6afcdf89,al
  418974:	outs   dx,BYTE PTR ds:[esi]
  418975:	jmp    0x4401:0x9cdfd06a
  41897c:	(bad)  
  41897e:	or     esi,edx
  418980:	test   BYTE PTR [ebx+0xc9a9eb8],dh
  418986:	nop
  418987:	jne    0x41893a
  418989:	shl    DWORD PTR [ebx],0xa1
  41898c:	jae    0x4189eb
  41898e:	outs   dx,DWORD PTR ds:[esi]
  41898f:	jmp    0x8f627f9c
  418994:	fsub   QWORD PTR [esi-0x76]
  418997:	adc    edx,DWORD PTR [edi]
  418999:	sbb    BYTE PTR [ecx-0x2e3812f5],0x3d
  4189a0:	push   esi
  4189a1:	inc    esp
  4189a2:	dec    ecx
  4189a3:	out    0x78,eax
  4189a5:	push   0xa6de44cb
  4189aa:	cmp    edi,esp
  4189ac:	cdq    
  4189ad:	gs test esp,edx
  4189b0:	and    DWORD PTR [edi+0x2b159ce6],ebp
  4189b6:	aaa    
  4189b7:	mov    edi,0xcf0e188d
  4189bc:	inc    edi
  4189bd:	xchg   esp,eax
  4189be:	shr    DWORD PTR [ebx],cl
  4189c0:	dec    ebp
  4189c1:	cs lahf 
  4189c3:	fwait
  4189c4:	mov    dh,0x31
  4189c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c7:	xor    BYTE PTR [ebp+ebp*1-0x2f],bh
  4189cb:	add    BYTE PTR [edi-0x6f],bh
  4189ce:	aad    0xba
  4189d0:	and    eax,0x7cd3ea01
  4189d5:	mul    DWORD PTR [esi]
  4189d7:	not    esi
  4189d9:	or     BYTE PTR [eax+0x47c68748],al
  4189df:	div    DWORD PTR [ebp-0x2f]
  4189e2:	icebp  
  4189e3:	cld    
  4189e4:	pinsrw mm2,esi,0x6c
  4189e8:	push   edi
  4189e9:	pop    ebx
  4189ea:	jl     0x41899b
  4189ec:	dec    ebp
  4189ed:	cmp    esi,DWORD PTR [ebx]
  4189ef:	cli    
  4189f0:	pop    eax
  4189f1:	rcl    DWORD PTR [esp+edx*2+0x67],cl
  4189f5:	add    eax,0xec9ccecd
  4189fa:	pusha  
  4189fb:	ins    BYTE PTR es:[edi],dx
  4189fc:	repnz pop esp
  4189fe:	inc    edi
  4189ff:	ror    DWORD PTR [ebp-0x2e],1
  418a02:	mov    DWORD PTR [ecx+esi*1],0x492ba53a
  418a09:	push   ebp
  418a0a:	loope  0x4189be
  418a0c:	jnp    0x4189c7
  418a0e:	mov    eax,0x3d500e7e
  418a13:	jp     0x418a1e
  418a15:	jne    0x4189fb
  418a17:	add    DWORD PTR [eax+0x7c72b862],ebx
  418a1d:	in     eax,0xf2
  418a1f:	cs (bad) 
  418a21:	call   0xa9de:0xd39381e3
  418a28:	xchg   edi,eax
  418a29:	cld    
  418a2a:	xchg   esp,eax
  418a2b:	ins    BYTE PTR es:[edi],dx
  418a2c:	jp     0x4189de
  418a2e:	inc    ebp
  418a2f:	jle    0x4189d9
  418a31:	rol    DWORD PTR [eax-0x2b],1
  418a34:	sub    ebp,ebp
  418a36:	push   esi
  418a37:	jl     0x4189db
  418a39:	jno    0x418a8a
  418a3b:	mov    gs,WORD PTR [ebx]
  418a3d:	mov    edi,ebx
  418a3f:	out    0x69,eax
  418a41:	int    0x91
  418a43:	mov    edi,0xd08bb5a2
  418a48:	mov    BYTE PTR [esi+0x4bfbcfc3],dh
  418a4e:	mov    bl,0x9c
  418a50:	js     0x418a69
  418a52:	jns    0x418a14
  418a54:	dec    eax
  418a55:	ja     0x418a05
  418a57:	mov    cl,0xc2
  418a59:	sbb    eax,DWORD PTR [edx-0x473681c4]
  418a5f:	dec    edi
  418a60:	jge    0x418a7e
  418a62:	mov    ah,0xed
  418a64:	xor    DWORD PTR [ecx+0x8],0xb695789d
  418a6b:	or     ch,ch
  418a6d:	sbb    BYTE PTR [ebp+eax*1+0x6ce49eb4],bl
  418a74:	mov    WORD PTR [ebx],?
  418a76:	push   DWORD PTR [ebx]
  418a78:	mov    edx,0x8c761ba9
  418a7d:	test   al,0x45
  418a7f:	stos   DWORD PTR es:[edi],eax
  418a80:	sar    DWORD PTR [edx+0x2e351806],0xf0
  418a87:	jge    0x418abe
  418a89:	cmp    al,0xab
  418a8b:	les    edx,FWORD PTR [edi-0x3c]
  418a8e:	xor    bl,BYTE PTR [edi+0x19]
  418a91:	dec    ebp
  418a92:	cli    
  418a93:	mov    eax,ds:0xfabe5a36
  418a98:	sub    ebp,ecx
  418a9a:	sub    ch,BYTE PTR [edx+0x6c]
  418a9d:	adc    DWORD PTR [ebx-0x14],ebp
  418aa0:	fsub   QWORD PTR [eax]
  418aa2:	jecxz  0x418a48
  418aa4:	add    eax,0x1f6bcf01
  418aa9:	jb     0x418af4
  418aab:	push   ebp
  418aac:	pop    es
  418aad:	push   cs
  418aae:	mov    ds:0x4faa7762,al
  418ab3:	lods   al,BYTE PTR ds:[esi]
  418ab4:	jns    0x418af1
  418ab6:	add    DWORD PTR [eax+0x4d],esi
  418ab9:	fwait
  418aba:	lods   al,BYTE PTR ds:[esi]
  418abb:	pop    edx
  418abc:	mov    dh,0x28
  418abe:	fisttp QWORD PTR [edi]
  418ac0:	mov    esp,0xf24a8490
  418ac5:	rol    BYTE PTR [eax],0x99
  418ac8:	cmp    eax,0xd75e9456
  418acd:	ss fstp st(4)
  418ad0:	out    0x17,al
  418ad2:	mov    bl,0x7a
  418ad4:	in     eax,dx
  418ad5:	jne    0x418a97
  418ad7:	dec    ecx
  418ad8:	cs retf 0xc9d9
  418adc:	push   ebx
  418add:	arpl   WORD PTR [edx+0x42b7ce95],dx
  418ae3:	mov    eax,0x7ada7341
  418ae8:	(bad)  
  418ae9:	pop    edx
  418aea:	nop
  418aeb:	xchg   BYTE PTR [edx-0x782433bb],bl
  418af1:	jmp    0x3471013b
  418af6:	fnstsw WORD PTR [ecx]
  418af8:	jecxz  0x418b11
  418afa:	mov    ecx,ds
  418afc:	pop    ds
  418afd:	mov    DWORD PTR [ebp+0x2c4d2bd1],edx
  418b03:	inc    edi
  418b04:	aad    0xb9
  418b06:	mov    edx,ecx
  418b08:	cmp    al,ah
  418b0a:	sbb    eax,0x1c4db9fd
  418b0f:	popf   
  418b10:	add    DWORD PTR [ebp-0x4c1ecf0d],esp
  418b16:	ret    0xdb34
  418b19:	ja     0x418b0f
  418b1b:	mov    cl,BYTE PTR ds:0x38a79aa1
  418b21:	ss pop es
  418b23:	adc    ebp,DWORD PTR [edi+0x4b87097c]
  418b29:	das    
  418b2a:	ret    
  418b2b:	adc    eax,0x4c87fb2f
  418b30:	call   0xdb48:0x5f946966
  418b37:	or     edi,eax
  418b39:	xchg   DWORD PTR [esi+0x4c],eax
  418b3c:	imul   esi,DWORD PTR [edx+0x1c79b644],0x59
  418b43:	mov    esi,0x1e39fefd
  418b48:	cdq    
  418b49:	call   0xb46:0x7e63feb
  418b50:	inc    esi
  418b51:	mov    ebp,0x5fc7c488
  418b56:	add    eax,0x5a6ff2e2
  418b5b:	mov    BYTE PTR [ebp-0x3caab188],ah
  418b61:	lds    ebx,FWORD PTR [edx+0x78]
  418b64:	mov    al,0x10
  418b66:	test   eax,0x5d69397
  418b6b:	aam    0x39
  418b6d:	outs   dx,BYTE PTR ds:[esi]
  418b6e:	adc    eax,0xc7443f23
  418b73:	jmp    0x418b64
  418b75:	cmp    BYTE PTR [esp+edi*2-0x11],ah
  418b79:	cmp    al,0x3
  418b7b:	aas    
  418b7c:	js     0x418bc2
  418b7e:	test   eax,0xab7abc64
  418b83:	cmp    ebp,DWORD PTR [ebp+0x35]
  418b86:	mov    ds:0x686fe631,eax
  418b8b:	(bad)  
  418b8c:	sar    BYTE PTR [ecx-0x24d0f53b],1
  418b92:	idiv   BYTE PTR [edi-0x2cf8f396]
  418b98:	mov    al,0xd6
  418b9a:	(bad)  
  418b9b:	into   
  418b9c:	ins    DWORD PTR es:[edi],dx
  418b9d:	arpl   cx,bp
  418b9f:	xchg   BYTE PTR [esi],bh
  418ba1:	jo     0x418bf9
  418ba3:	scas   eax,DWORD PTR es:[edi]
  418ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba5:	jbe    0x418c21
  418ba7:	inc    ebx
  418ba8:	call   0x7ece:0x6bf92bcd
  418baf:	mov    edi,0xe83929c8
  418bb4:	and    BYTE PTR [edi],dl
  418bb6:	repnz inc esp
  418bb8:	clc    
  418bb9:	enter  0x8018,0x78
  418bbd:	add    BYTE PTR [esi-0x36],0x8c
  418bc1:	xor    al,0xd9
  418bc3:	mov    esp,0x7fd9754c
  418bc8:	pop    ss
  418bc9:	ins    DWORD PTR es:[edi],dx
  418bca:	stos   BYTE PTR es:[edi],al
  418bcb:	ror    dl,cl
  418bcd:	mov    BYTE PTR ds:[ecx-0x4ecb8364],bh
  418bd4:	xchg   esi,eax
  418bd5:	cmp    eax,ebx
  418bd7:	sub    DWORD PTR [esi],eax
  418bd9:	ins    BYTE PTR es:[edi],dx
  418bda:	pop    ds
  418bdb:	les    edi,FWORD PTR [ebx+ebx*1-0x11]
  418bdf:	adc    eax,DWORD PTR [eax+edi*1]
  418be2:	mov    bh,0x2f
  418be4:	adc    DWORD PTR [ebp+0x588a4065],ebx
  418bea:	test   al,0xe9
  418bec:	push   ss
  418bed:	test   al,0x29
  418bef:	retf   
  418bf0:	mov    ecx,DWORD PTR [esp+edi*1]
  418bf3:	jge    0x418b75
  418bf5:	mov    esi,ebp
  418bf7:	dec    ebp
  418bf8:	sub    cl,BYTE PTR [esi-0x1e]
  418bfb:	test   al,0x69
  418bfd:	add    ebp,ecx
  418bff:	add    al,0xc5
  418c01:	int    0x34
  418c03:	push   edx
  418c04:	mov    al,0x25
  418c06:	ror    DWORD PTR ds:0xfaaaa3d5,cl
  418c0c:	gs jne 0x418bc2
  418c0f:	retf   0x5e6d
  418c12:	rol    BYTE PTR [ecx],0xe5
  418c15:	xchg   ebp,eax
  418c16:	jl     0x418c54
  418c18:	push   esp
  418c19:	mov    ebx,0x21b50f59
  418c1e:	jecxz  0x418c44
  418c20:	aad    0xc0
  418c22:	pop    esp
  418c23:	sti    
  418c24:	add    ecx,DWORD PTR [ebx]
  418c26:	scas   al,BYTE PTR es:[edi]
  418c27:	rol    BYTE PTR [eax],0x58
  418c2a:	and    eax,DWORD PTR [edx+ecx*4]
  418c2d:	popa   
  418c2e:	jo     0x418c45
  418c30:	inc    edx
  418c31:	test   BYTE PTR [ebx],al
  418c33:	sub    DWORD PTR [eax+0x2e],ebx
  418c36:	mov    cl,0xcd
  418c38:	inc    edx
  418c39:	ja     0x418bd3
  418c3b:	(bad)  [edi+esi*1-0x7c]
  418c3f:	ss iret 
  418c41:	xlat   BYTE PTR ds:[ebx]
  418c42:	out    dx,al
  418c43:	sub    DWORD PTR [esi+0x64],0x33
  418c47:	(bad)  
  418c48:	lods   al,BYTE PTR ds:[esi]
  418c49:	push   ss
  418c4a:	and    DWORD PTR [esi],0x1c1cadbf
  418c50:	enter  0xa8da,0xdd
  418c54:	retf   0xb26b
  418c57:	xchg   esi,eax
  418c58:	jns    0x418ccd
  418c5a:	inc    ebx
  418c5b:	cmp    BYTE PTR [ebx-0x7c797862],dl
  418c61:	stc    
  418c62:	aaa    
  418c63:	inc    ebp
  418c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c66:	bound  eax,QWORD PTR [esi+0x7c25a7d2]
  418c6c:	ret    0xc611
  418c6f:	test   DWORD PTR [ecx],eax
  418c71:	gs cwde 
  418c73:	jno    0x418cb5
  418c75:	(bad)  
  418c76:	loope  0x418c55
  418c78:	into   
  418c79:	mov    dl,0x60
  418c7b:	cdq    
  418c7c:	(bad)  
  418c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c7e:	and    BYTE PTR [ecx+0x2f],cl
  418c81:	into   
  418c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c83:	cmp    eax,0x62700848
  418c88:	loope  0x418c13
  418c8a:	push   0xa0ba02c2
  418c8f:	adc    DWORD PTR [edx+0x7f],eax
  418c92:	popa   
  418c93:	and    al,0x22
  418c95:	dec    ebx
  418c96:	or     BYTE PTR [ebx-0x244d73fa],bh
  418c9c:	add    ebx,DWORD PTR [ecx+0x70647984]
  418ca2:	push   esp
  418ca3:	pop    ss
  418ca4:	cli    
  418ca5:	mov    eax,ds:0xa5d48a79
  418caa:	not    ecx
  418cac:	aad    0x7f
  418cae:	leave  
  418caf:	jecxz  0x418d05
  418cb1:	cs xchg edx,eax
  418cb3:	dec    ebp
  418cb4:	xor    DWORD PTR [edx],ecx
  418cb6:	(bad)  
  418cb7:	out    dx,al
  418cb8:	sbb    DWORD PTR [edx-0x2],ecx
  418cbb:	popf   
  418cbc:	gs push edx
  418cbe:	es xchg ecx,eax
  418cc0:	xchg   esp,eax
  418cc1:	or     bl,BYTE PTR [eax-0x512e0339]
  418cc7:	aaa    
  418cc8:	dec    esp
  418cc9:	push   eax
  418cca:	lea    eax,[eax-0x53]
  418ccd:	jle    0x418d06
  418ccf:	ins    BYTE PTR es:[edi],dx
  418cd0:	fcmovb st,st(4)
  418cd2:	sub    ah,BYTE PTR [edx+0x7e]
  418cd5:	in     eax,dx
  418cd6:	int3   
  418cd7:	and    ecx,ebx
  418cd9:	xor    DWORD PTR [eax+ebx*2-0x5d],esi
  418cdd:	das    
  418cde:	fild   QWORD PTR [esi]
  418ce0:	popf   
  418ce1:	push   ds
  418ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ce3:	xor    dh,ch
  418ce5:	ds pop eax
  418ce7:	dec    ebp
  418ce8:	push   ebp
  418ce9:	jmp    0x63fe6371
  418cee:	cmp    BYTE PTR [ebx],cl
  418cf0:	cwde   
  418cf1:	push   ebx
  418cf2:	pop    ss
  418cf3:	xor    ebx,DWORD PTR [edi]
  418cf5:	mov    esi,0x39af4026
  418cfa:	xchg   edi,eax
  418cfb:	xchg   DWORD PTR [edi],esp
  418cfd:	lea    ebp,[ecx-0x1e8fc286]
  418d03:	pop    edx
  418d04:	or     al,0x2
  418d06:	add    ah,BYTE PTR [ebx-0x422721fe]
  418d0c:	pop    es
  418d0d:	neg    BYTE PTR [ecx+0x68]
  418d10:	or     al,0x2b
  418d12:	es mov eax,0xe7736929
  418d18:	jge    0x418d2b
  418d1a:	rcl    BYTE PTR [ecx],cl
  418d1c:	scas   al,BYTE PTR es:[edi]
  418d1d:	vpsrld xmm2,xmm7,XMMWORD PTR [ebp+0x9]
  418d22:	aaa    
  418d23:	mov    esi,0x2458fe74
  418d28:	sub    dl,BYTE PTR [ebp-0x2a1848]
  418d2e:	push   esi
  418d2f:	and    DWORD PTR [ebx],0x0
  418d32:	in     al,dx
  418d33:	(bad)  
  418d34:	jne    0x418cda
  418d36:	push   ebp
  418d37:	adc    bl,ch
  418d39:	in     eax,dx
  418d3a:	lds    ebx,FWORD PTR ds:0xc0826a21
  418d40:	shl    BYTE PTR [esi+0x4daebec],1
  418d46:	call   0xa7ab:0xf896c270
  418d4d:	test   DWORD PTR [ebx+0x4289698d],esp
  418d53:	xor    edx,DWORD PTR [ecx+edi*2-0x3d01fea0]
  418d5a:	fdivr  st,st(0)
  418d5c:	leave  
  418d5d:	jne    0x418d10
  418d5f:	adc    BYTE PTR [eax-0x35],dh
  418d62:	jns    0x418d5a
  418d64:	sub    DWORD PTR [eax+0x496ad5b],ebx
  418d6a:	mov    ebp,0x5aacdb09
  418d6f:	outs   dx,BYTE PTR ds:[esi]
  418d70:	fcom   DWORD PTR gs:0x13bf1cc5
  418d77:	mov    dl,0x4f
  418d79:	sbb    eax,ebp
  418d7b:	jg     0x418dda
  418d7d:	sub    eax,0x59febd7b
  418d82:	xor    dh,0xb7
  418d85:	dec    edi
  418d86:	inc    ecx
  418d87:	push   cs
  418d88:	scas   eax,DWORD PTR es:[edi]
  418d89:	popf   
  418d8a:	mov    BYTE PTR [edx+ebp*8+0x76],bh
  418d8e:	jo     0x418d2a
  418d90:	loope  0x418d89
  418d92:	xchg   ecx,eax
  418d93:	dec    esi
  418d94:	in     al,0xb3
  418d96:	retf   0x62f9
  418d99:	dec    DWORD PTR [edi-0x34cb8250]
  418d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da1:	or     ah,BYTE PTR [ebp-0x47edd25f]
  418da7:	sbb    edi,esi
  418da9:	mov    esp,0xcd600071
  418dae:	push   0xd66ea88c
  418db3:	int3   
  418db4:	xchg   edx,eax
  418db5:	push   ebx
  418db6:	jnp    0x418dc5
  418db8:	imul   edi,DWORD PTR [ecx+0x1f7aabb6],0xf3a5b4ee
  418dc2:	adc    al,dl
  418dc4:	fcomp  DWORD PTR [esi+0x207a0f88]
  418dca:	(bad)  [ebx]
  418dcc:	out    dx,al
  418dcd:	stc    
  418dce:	jg     0x418dc9
  418dd0:	test   BYTE PTR [ebx+0x13],cl
  418dd3:	popa   
  418dd4:	test   al,0x4e
  418dd6:	push   ss
  418dd7:	aas    
  418dd8:	aad    0x29
  418dda:	push   cs
  418ddb:	jmp    0x418e00
  418ddd:	or     eax,DWORD PTR [esi-0xc]
  418de0:	rol    DWORD PTR [ebx+ecx*4+0x35cb1afb],0x62
  418de8:	clc    
  418de9:	mov    al,cl
  418deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dec:	inc    eax
  418ded:	scas   al,BYTE PTR es:[edi]
  418dee:	js     0x418e6d
  418df0:	stc    
  418df1:	push   0x8a0f9f58
  418df6:	into   
  418df7:	cmp    BYTE PTR [eax],0x69
  418dfa:	or     edi,DWORD PTR [eax]
  418dfc:	jb     0x418e71
  418dfe:	jp     0x418e43
  418e00:	xor    ecx,DWORD PTR es:[edx-0x44]
  418e04:	(bad)  
  418e07:	fiadd  WORD PTR [ecx]
  418e09:	or     ebp,DWORD PTR ds:0x5eda971
  418e0f:	xchg   edx,eax
  418e10:	mov    ch,bh
  418e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e13:	mov    ebx,0x77c01071
  418e18:	ret    
  418e19:	mov    es,WORD PTR [ecx-0x2b]
  418e1c:	xor    eax,0xbc7f7387
  418e21:	mov    eax,ds:0xdc101a18
  418e26:	xchg   esp,eax
  418e27:	sbb    DWORD PTR [ebp+0x7e30a3aa],0x237f931b
  418e31:	js     0x418e82
  418e33:	mov    eax,ds:0xed9c07fa
  418e38:	mov    bh,0x3b
  418e3a:	mov    ebx,0x1723b692
  418e3f:	sbb    al,0x7d
  418e41:	sti    
  418e42:	push   esp
  418e43:	sub    al,0x4
  418e45:	in     al,0x40
  418e47:	adc    BYTE PTR [edx],bl
  418e49:	jg     0x418e79
  418e4b:	dec    ebp
  418e4c:	mov    edx,0x4da21e56
  418e51:	cmp    edx,ecx
  418e53:	cli    
  418e54:	sub    DWORD PTR ds:0xf29caea1,esi
  418e5a:	push   esi
  418e5b:	xchg   edx,eax
  418e5c:	mov    dl,0x60
  418e5e:	ret    
  418e5f:	(bad)  
  418e61:	bound  ebx,QWORD PTR [ecx+0x55a030b2]
  418e67:	xchg   ecx,eax
  418e68:	mov    esi,0xed476811
  418e6d:	mov    bh,0xbf
  418e6f:	xor    ebx,edi
  418e71:	arpl   bp,di
  418e73:	les    ecx,FWORD PTR [edi]
  418e75:	(bad)  
  418e76:	jmp    0xa1840fb2
  418e7b:	pop    ss
  418e7c:	xchg   dh,al
  418e7e:	add    cl,BYTE PTR [eax-0x2cdc3646]
  418e84:	mov    ch,BYTE PTR [edx+0x6]
  418e87:	rcl    edx,0x42
  418e8a:	les    esp,FWORD PTR [esi-0x66950062]
  418e90:	popa   
  418e91:	retf   
  418e92:	inc    edx
  418e93:	mov    ch,0x70
  418e95:	xchg   edx,eax
  418e96:	pop    eax
  418e97:	adc    eax,0x53170b7a
  418e9c:	pusha  
  418e9d:	sbb    BYTE PTR [edi-0x54c3a0ef],0xb9
  418ea4:	test   BYTE PTR [edi-0x29574b8e],dh
  418eaa:	add    bl,BYTE PTR [eax]
  418eac:	or     DWORD PTR [eax+0x7e],0xffffffa2
  418eb0:	dec    edi
  418eb1:	cs repz mov ebp,0x5b38a80d
  418eb8:	xor    ch,BYTE PTR [ebx+0x77510ce5]
  418ebe:	iret   
  418ebf:	clc    
  418ec0:	ins    BYTE PTR es:[edi],dx
  418ec1:	sbb    eax,0xf727f40f
  418ec6:	cmp    BYTE PTR [ecx+0x5e],al
  418ec9:	je     0x418ef2
  418ecb:	mov    eax,ds:0x2834d4b6
  418ed0:	jg     0x418f3b
  418ed2:	pushf  
  418ed3:	push   edi
  418ed4:	imul   ebp,edi,0xffffffb7
  418ed7:	popa   
  418ed8:	jns    0x418e93
  418eda:	imul   ebx,DWORD PTR [esi+0x43876253],0x79
  418ee1:	sbb    bl,bl
  418ee3:	stos   DWORD PTR es:[edi],eax
  418ee4:	jmp    0x418ea0
  418ee6:	pop    esi
  418ee7:	popf   
  418ee8:	mov    DWORD PTR [esi+0x2e660d08],0x76548159
  418ef2:	cs mov ebx,0x34376c5
  418ef8:	clc    
  418ef9:	fbstp  TBYTE PTR [edi+0x2f]
  418efc:	xchg   ebx,eax
  418efd:	xchg   DWORD PTR [edi+esi*4-0x7f],esi
  418f01:	mov    cl,0x5
  418f03:	mov    dh,0x95
  418f05:	or     dl,BYTE PTR [edx+0x6c]
  418f08:	stc    
  418f09:	dec    esp
  418f0a:	fdivr  DWORD PTR [edi+0x46dd755e]
  418f10:	push   esp
  418f11:	test   al,0xe4
  418f13:	cmp    al,0x9e
  418f15:	pushf  
  418f16:	dec    ecx
  418f17:	int3   
  418f18:	xchg   ebx,eax
  418f19:	mov    ds:0x5ade5cda,al
  418f1e:	mov    ebx,0x8d7b04b3
  418f23:	xchg   ebx,eax
  418f24:	cs xor eax,0xd56d4702
  418f2a:	imul   dl
  418f2c:	pop    ebx
  418f2d:	fcomp  QWORD PTR [ecx+0x56245376]
  418f33:	and    al,0x1f
  418f35:	fwait
  418f36:	rcr    DWORD PTR [edi+0x11688cbb],1
  418f3c:	outs   dx,BYTE PTR ds:[esi]
  418f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f3e:	xor    eax,0x7273b31e
  418f43:	test   BYTE PTR [esi+0x38],dl
  418f46:	imul   ecx
  418f48:	(bad)  
  418f4a:	out    dx,eax
  418f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f4c:	or     eax,0xe249c6da
  418f51:	push   ecx
  418f52:	push   0x71
  418f54:	sub    edi,ebx
  418f56:	loopne 0x418f29
  418f58:	scas   eax,DWORD PTR es:[edi]
  418f59:	gs aas 
  418f5b:	stos   DWORD PTR es:[edi],eax
  418f5c:	and    eax,0x2164dac4
  418f61:	jecxz  0x418f87
  418f63:	cmp    DWORD PTR [esi+esi*1-0xf],edi
  418f67:	in     eax,0x87
  418f69:	mov    dh,0x9
  418f6b:	and    bl,BYTE PTR [ecx-0x23e9f2bf]
  418f71:	imul   edx,edx,0xffffffee
  418f74:	inc    ebp
  418f75:	hlt    
  418f76:	gs leave 
  418f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f79:	and    al,0x52
  418f7b:	sbb    esp,DWORD PTR ds:0xe3642100
  418f81:	out    dx,al
  418f82:	jno    0x418f4b
  418f84:	jbe    0x418fc7
  418f86:	sbb    DWORD PTR [edx+0x74df459f],ebx
  418f8c:	dec    ecx
  418f8d:	leave  
  418f8e:	fsub   QWORD PTR [ebp+0x24]
  418f91:	stos   BYTE PTR es:[edi],al
  418f92:	inc    esp
  418f93:	lahf   
  418f94:	rcr    DWORD PTR ds:0x23db948d,0xcf
  418f9b:	lods   al,BYTE PTR ds:[esi]
  418f9c:	cli    
  418f9d:	(bad)  
  418f9e:	stos   BYTE PTR es:[edi],al
  418f9f:	cmp    DWORD PTR [ecx+ecx*4-0x15bfc6dc],ebx
  418fa6:	shl    ebp,0xb
  418fa9:	xor    dh,BYTE PTR [edi]
  418fab:	mov    esi,0x4f94031c
  418fb0:	mov    gs,WORD PTR [ebx]
  418fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb3:	mov    dh,BYTE PTR [eax+0x7e45992d]
  418fb9:	push   ebx
  418fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fbb:	mov    edi,0x45f6525
  418fc0:	aaa    
  418fc1:	add    edx,esp
  418fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc4:	fdivr  QWORD PTR [ebp+0x2491a6fd]
  418fca:	int    0x2e
  418fcc:	pop    es
  418fcd:	cmp    DWORD PTR [edi],esi
  418fcf:	aad    0xc3
  418fd1:	pop    edx
  418fd2:	stc    
  418fd3:	jb     0x418f69
  418fd5:	lea    edi,[edi]
  418fd7:	mov    eax,0x25fca248
  418fdc:	cwde   
  418fdd:	sub    BYTE PTR [eax],0x5d
  418fe0:	mov    esp,ebp
  418fe2:	imul   ecx,DWORD PTR [edx],0xa3e93c8b
  418fe8:	mov    ds:0x88ff7e5c,eax
  418fed:	es xchg esi,eax
  418fef:	and    esi,esp
  418ff1:	mov    DWORD PTR [ecx+0x7e],esp
  418ff4:	fbld   TBYTE PTR [edi-0x607a6beb]
  418ffa:	imul   BYTE PTR [edx]
  418ffc:	lahf   
  418ffd:	fnsave ds:0x1cadc3b1
  419003:	dec    edx
  419004:	mov    al,ds:0x2538c3fb
  419009:	fcomp  st(5)
  41900b:	push   ebp
  41900c:	(bad)  
  41900d:	aad    0x6d
  41900f:	sub    al,0x4d
  419011:	in     eax,dx
  419012:	(bad)  
  419013:	test   eax,0x31ae9a71
  419018:	in     eax,0x4f
  41901a:	and    al,0x0
  41901c:	mov    ah,0xe3
  41901e:	loope  0x418fb2
  419020:	mov    DWORD PTR [ebx],edi
  419022:	add    ch,BYTE PTR [eax-0x12]
  419025:	repnz cmp al,0x6c
  419028:	or     edx,DWORD PTR [edx+0x46542b42]
  41902e:	call   0xa911:0xfba77df7
  419035:	or     esi,ebx
  419037:	cdq    
  419038:	jg     0x41905f
  41903a:	inc    ebp
  41903b:	xor    sp,di
  41903e:	inc    ecx
  41903f:	add    al,0x5e
  419041:	inc    ecx
  419042:	mov    eax,ds:0xd29f04fe
  419047:	outs   dx,BYTE PTR ds:[esi]
  419048:	stc    
  419049:	out    dx,al
  41904a:	or     bl,cl
  41904c:	add    al,0xe3
  41904e:	sti    
  41904f:	push   ebp
  419050:	push   cs
  419051:	mov    dl,0xa5
  419053:	das    
  419054:	xchg   cl,bh
  419056:	pshufw mm1,mm2,0xc7
  41905a:	jne    0x419069
  41905c:	jmp    edi
  41905e:	push   ecx
  41905f:	imul   esi,DWORD PTR [ebx],0x5bb88750
  419065:	popa   
  419066:	sub    BYTE PTR [ebx+0xc],bh
  419069:	stos   BYTE PTR es:[edi],al
  41906a:	cmp    esi,esi
  41906c:	and    ah,dh
  41906e:	shl    DWORD PTR [ecx*8+0x27330300],cl
  419075:	int3   
  419076:	sysexit 
  419078:	add    eax,0x19a26433
  41907d:	or     al,0x4b
  41907f:	mov    WORD PTR [edi-0x46baab12],?
  419085:	lahf   
  419086:	(bad)  
  419087:	dec    ecx
  419088:	and    esi,DWORD PTR [edx]
  41908a:	or     DWORD PTR [ebx+0x2a],0xffffff8d
  41908e:	jmp    0xc019:0xb85972a8
  419095:	adc    edx,DWORD PTR [ecx]
  419097:	mov    dl,0x49
  419099:	sbb    esi,esp
  41909b:	scas   al,BYTE PTR es:[edi]
  41909c:	and    al,0xd3
  41909e:	popa   
  41909f:	imul   ecx,ebp,0x912978f8
  4190a5:	(bad)  
  4190a6:	mov    edi,0x5a69064b
  4190ab:	in     eax,0x47
  4190ad:	sbb    eax,0x3c06fb68
  4190b2:	lock add al,BYTE PTR [ecx]
  4190b5:	cld    
  4190b6:	mov    edi,0x81a5673c
  4190bb:	(bad)  
  4190bc:	and    al,0x6d
  4190be:	or     DWORD PTR [ebp-0x3fa16ba4],esp
  4190c4:	or     al,0x51
  4190c6:	shl    esi,1
  4190c8:	jmp    0xfa9bec7a
  4190cd:	mov    edx,0x8181bcc2
  4190d2:	pop    ecx
  4190d3:	mov    ecx,DWORD PTR [eax]
  4190d5:	jl     0x419068
  4190d7:	out    dx,eax
  4190d8:	cmp    al,0x5d
  4190da:	jb     0x4190fb
  4190dc:	mov    edi,0x1daee98f
  4190e1:	sub    ebx,ebp
  4190e3:	xor    cl,bl
  4190e5:	cwde   
  4190e6:	mov    esp,0x2dbeb605
  4190eb:	stc    
  4190ec:	popf   
  4190ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ee:	mov    edi,0xd8ea55ee
  4190f3:	pop    eax
  4190f4:	push   esi
  4190f5:	(bad)  
  4190f6:	int3   
  4190f7:	das    
  4190f8:	mov    dh,0x40
  4190fa:	mul    ecx
  4190fc:	lods   eax,DWORD PTR ds:[esi]
  4190fd:	mov    dl,0x7b
  4190ff:	push   0x26
  419101:	call   0xa68dc91
  419106:	xchg   ebp,eax
  419107:	ds stos DWORD PTR es:[edi],eax
  419109:	outs   dx,DWORD PTR ds:[esi]
  41910a:	int    0x33
  41910c:	pop    ebx
  41910d:	sbb    eax,0x11b7f1d9
  419112:	addr16 mov ecx,0xc1850b48
  419118:	pop    es
  419119:	sbb    eax,0xbb46cbb8
  41911e:	sbb    eax,0xbb315641
  419123:	nop
  419124:	sbb    BYTE PTR [edx-0x10],0x23
  419128:	push   cs
  419129:	cmp    ch,bl
  41912b:	xlat   BYTE PTR ds:[ebx]
  41912c:	sbb    eax,0x33b6ddd0
  419131:	jmp    0xa1f78c7b
  419136:	push   ecx
  419138:	pop    esi
  419139:	hlt    
  41913a:	jmp    0x41919a
  41913c:	jp     0x419162
  41913e:	pop    es
  41913f:	rol    DWORD PTR [ebp-0x4faa7608],0x8b
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0x5408d874]
  419207:	sub    esp,ebp
  419209:	shl    BYTE PTR [ebx],1
  41920b:	and    BYTE PTR [eax-0x7ca1c17d],al
  419211:	adc    esp,0xffffffa9
  419214:	in     eax,0x36
  419216:	push   esp
  419217:	add    BYTE PTR [edi+0x57d6ad42],0xcc
  41921e:	xchg   ebp,eax
  41921f:	fsubp  st(0),st
  419221:	aad    0x94
  419223:	or     BYTE PTR [ebx],cl
  419225:	jmp    0x5cec:0x815b5972
  41922c:	and    al,0xf
  41922e:	mov    ds:0x50ba9f61,eax
  419233:	(bad)  
  419234:	shr    BYTE PTR [edi],1
  419236:	sub    eax,DWORD PTR [ecx-0x7a88a2f9]
  41923c:	adc    DWORD PTR [eax+0x33],ebx
  41923f:	push   edi
  419240:	retf   
  419241:	enter  0xb8a9,0x16
  419245:	sbb    cl,0xf8
  419248:	sar    esp,cl
  41924a:	jae    0x4191d7
  41924c:	cdq    
  41924d:	aad    0xdf
  41924f:	hlt    
  419250:	jnp    0x419261
  419252:	pop    ecx
  419253:	pusha  
  419254:	mov    ebx,DWORD PTR [ebx+ebp*2+0x46]
  419258:	(bad)  
  419259:	(bad)  
  41925b:	adc    al,ah
  41925d:	lahf   
  41925e:	js     0x4192a5
  419260:	in     eax,0x54
  419262:	add    edx,ebx
  419264:	and    eax,DWORD PTR [edx-0x1a]
  419267:	test   eax,0x123f8e12
  41926c:	jge    0x4192ac
  41926e:	mov    cl,0xfd
  419270:	popa   
  419271:	dec    eax
  419272:	push   esp
  419273:	add    DWORD PTR [edx],esp
  419275:	sub    DWORD PTR [ecx+ebp*1],0xa8c05b70
  41927c:	es call 0x9e45:0xdf4eb1
  419284:	jno    0x419232
  419286:	test   al,0x64
  419288:	or     dl,ah
  41928a:	fnsave [edi-0x6a]
  41928d:	pop    esp
  41928e:	das    
  41928f:	mov    esi,0xcee3892c
  419294:	push   cs
  419295:	out    0x1b,al
  419297:	or     eax,0x9d66f9a8
  41929c:	cmc    
  41929d:	ds stc 
  41929f:	jmp    0x46e3:0x7def7fba
  4192a6:	stc    
  4192a7:	cmp    ebp,DWORD PTR [ecx+0xad9dbd2]
  4192ad:	ins    BYTE PTR es:[edi],dx
  4192ae:	ret    0xfe4b
  4192b1:	push   esi
  4192b2:	test   BYTE PTR [edi-0x264f9dc4],ch
  4192b8:	mov    WORD PTR [ebp+edx*1-0x2c2c90da],gs
  4192bf:	fist   DWORD PTR [ebx+eax*4+0x2bc24d0f]
  4192c6:	pop    ds
  4192c7:	hlt    
  4192c8:	add    eax,0xe6e89cce
  4192cd:	ins    BYTE PTR es:[edi],dx
  4192ce:	loope  0x4192db
  4192d0:	std    
  4192d1:	jo     0x419276
  4192d3:	fcmovne st,st(0)
  4192d5:	call   0xd4d5:0x128eb5d1
  4192dc:	mov    ah,BYTE PTR [ecx]
  4192de:	rol    BYTE PTR [ebx],cl
  4192e0:	pop    ecx
  4192e1:	cmp    al,0x22
  4192e3:	mov    eax,ds:0x465b223d
  4192e8:	mov    ebx,0x6457940e
  4192ed:	ss leave 
  4192ef:	shr    ebx,0x88
  4192f2:	test   BYTE PTR ds:0x6d29a93,bh
  4192f8:	fnstenv [ebx+0x52b6c0d7]
  4192fe:	jl     0x4192ec
  419300:	outs   dx,BYTE PTR ds:[esi]
  419301:	adc    dh,BYTE PTR [ecx+ecx*1]
  419304:	lods   al,BYTE PTR ds:[esi]
  419305:	gs ret 
  419307:	xchg   edi,eax
  419308:	out    dx,al
  419309:	push   0xffffffc0
  41930b:	cmp    BYTE PTR [edx+0x55],al
  41930e:	xchg   esp,eax
  41930f:	imul   BYTE PTR [ebx+0x69151e03]
  419315:	mov    eax,ds:0xb971830a
  41931a:	push   es
  41931b:	cmp    al,0x5
  41931d:	cs push edi
  41931f:	sahf   
  419320:	jo     0x419351
  419322:	sub    eax,edx
  419324:	ficomp DWORD PTR [ebp-0x1aa26a12]
  41932a:	cmc    
  41932b:	inc    ecx
  41932c:	lods   eax,DWORD PTR ds:[esi]
  41932d:	fist   DWORD PTR [eax]
  41932f:	ret    0xcd9f
  419332:	stos   DWORD PTR es:[edi],eax
  419333:	lahf   
  419334:	pop    ds
  419335:	push   0x16268e0b
  41933a:	leave  
  41933b:	shl    BYTE PTR [ecx+ecx*8+0x7dec4be6],0xbc
  419343:	cwde   
  419344:	jns    0x4192c6
  419346:	in     al,dx
  419347:	pushf  
  419348:	add    al,0xba
  41934a:	jl     0x419363
  41934c:	jmp    0x8d8812ef
  419351:	das    
  419352:	mov    ch,0x4a
  419354:	outs   dx,DWORD PTR ds:[esi]
  419355:	adc    BYTE PTR [esi+0x5c694fb2],bl
  41935b:	and    eax,0xcbcda892
  419360:	xlat   BYTE PTR ds:[ebx]
  419361:	mov    eax,0xa429990b
  419366:	(bad)  
  419367:	mov    ebp,0x5db186de
  41936c:	mov    dl,0x96
  41936e:	dec    edx
  41936f:	pop    ds
  419370:	aaa    
  419371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419372:	or     DWORD PTR [ebx-0x1d],0x8851b866
  419379:	int3   
  41937a:	lods   eax,DWORD PTR ds:[esi]
  41937b:	loop   0x419321
  41937d:	mov    ch,0x86
  41937f:	and    al,0x97
  419382:	lods   eax,DWORD PTR ds:[esi]
  419383:	jp     0x419357
  419385:	inc    esp
  419386:	lds    eax,FWORD PTR [esi]
  419388:	inc    esi
  419389:	or     BYTE PTR [ebx+ebx*4+0x515f480d],0x13
  419391:	imul   ebp,edi,0xffffffcd
  419394:	jge    0x4193f3
  419396:	rcl    BYTE PTR [esi-0x69],1
  419399:	mov    al,0xda
  41939b:	out    0xe,al
  41939d:	ins    DWORD PTR es:[edi],dx
  41939e:	fsub   DWORD PTR [edx-0x7ea20df2]
  4193a4:	cmp    esi,DWORD PTR [edx+eax*8+0x71520ac0]
  4193ab:	es (bad) 
  4193ad:	iret   
  4193ae:	loop   0x4193b0
  4193b0:	ins    DWORD PTR es:[edi],dx
  4193b1:	fidivr DWORD PTR [esi+eax*1+0x48]
  4193b5:	and    dl,BYTE PTR [esi+0x51]
  4193b8:	dec    ecx
  4193b9:	mov    edx,esi
  4193bb:	dec    ebx
  4193bc:	xchg   esp,eax
  4193bd:	jmp    0xceca42d9
  4193c2:	xchg   esi,eax
  4193c3:	pop    ebp
  4193c4:	dec    edi
  4193c5:	popa   
  4193c6:	sub    DWORD PTR [esi+0x6c631d09],edi
  4193cc:	mov    ?,ebx
  4193ce:	dec    eax
  4193cf:	xor    ebp,esi
  4193d1:	xchg   ebx,eax
  4193d2:	cmp    DWORD PTR [edx],0x294ef03f
  4193d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193d9:	inc    ebp
  4193da:	and    eax,0xe1b7399c
  4193df:	(bad)  
  4193e0:	dec    esi
  4193e1:	add    eax,0x6ec31202
  4193e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193e7:	mov    eax,0x515f928a
  4193ec:	imul   edi,DWORD PTR [eax+0x65],0x50
  4193f0:	mov    WORD PTR [ebp-0x36847880],?
  4193f6:	loop   0x4193f7
  4193f8:	nop
  4193f9:	out    0xe,al
  4193fb:	loope  0x41941c
  4193fd:	pushf  
  4193fe:	add    ch,dh
  419400:	sub    DWORD PTR [edi-0x26],ebx
  419403:	shl    DWORD PTR [ecx],cl
  419405:	or     bl,BYTE PTR [edx-0x216adbb5]
  41940b:	or     DWORD PTR [esi-0x352829ae],eax
  419411:	cmp    DWORD PTR [ebp-0x7a69138f],0xbbc466b
  41941b:	outs   dx,DWORD PTR ds:[esi]
  41941c:	xor    DWORD PTR [ebx+0x25],edi
  41941f:	sub    BYTE PTR [eax],al
  419421:	and    al,0x7
  419423:	pop    es
  419424:	add    DWORD PTR [ebp-0xc],ebx
  419427:	adc    dh,BYTE PTR [ebx+0x13]
  41942a:	mov    cl,0x39
  41942c:	push   ebx
  41942d:	test   al,0x78
  41942f:	fdivr  st,st(1)
  419431:	dec    eax
  419432:	jecxz  0x419447
  419434:	adc    al,0x4f
  419436:	and    ah,BYTE PTR [eax-0x9]
  419439:	adc    bl,BYTE PTR [ecx+edi*1-0x46a1119c]
  419440:	cld    
  419441:	dec    ebp
  419442:	xchg   ecx,eax
  419443:	pop    edx
  419444:	js     0x4194a2
  419446:	mov    bh,0x6e
  419448:	xchg   edx,eax
  419449:	lods   eax,DWORD PTR ds:[esi]
  41944a:	sub    BYTE PTR [edi],al
  41944c:	or     al,0x47
  41944e:	inc    ecx
  41944f:	pusha  
  419450:	xchg   DWORD PTR [esi],edx
  419452:	in     al,0x99
  419454:	push   0x27
  419456:	aaa    
  419457:	dec    ebp
  419458:	xor    al,0x9
  41945a:	and    ch,BYTE PTR [ebx+0x15]
  41945d:	outs   dx,BYTE PTR ds:[esi]
  41945e:	add    edi,ebp
  419460:	xchg   esi,eax
  419461:	aad    0xb0
  419463:	sbb    ch,bl
  419465:	scas   al,BYTE PTR es:[edi]
  419466:	or     dl,bl
  419468:	wbinvd 
  41946a:	mov    edx,0x270ac6b5
  41946f:	mov    bl,ah
  419471:	add    ebp,DWORD PTR [ebp+0x19]
  419474:	mov    edi,0x11c5b544
  419479:	sbb    ebp,ebp
  41947b:	adc    cl,ch
  41947d:	push   0xfd6d10c2
  419482:	retf   0xefb4
  419485:	sar    DWORD PTR [ecx-0x2c2f6ff],0x59
  41948c:	aas    
  41948d:	jb     0x419438
  41948f:	int3   
  419490:	sar    BYTE PTR [ecx-0x1e],1
  419493:	popa   
  419494:	fsub   QWORD PTR [ebp+edx*1-0x21fd9b08]
  41949b:	std    
  41949c:	inc    esp
  41949d:	mul    BYTE PTR [eax-0x10ed75de]
  4194a3:	mov    edx,0xca194bc4
  4194a8:	lods   eax,DWORD PTR es:[esi]
  4194aa:	hlt    
  4194ab:	dec    ebp
  4194ac:	cdq    
  4194ad:	pop    edx
  4194ae:	cmp    ebx,ebx
  4194b0:	adc    al,0xaf
  4194b2:	cwde   
  4194b3:	lods   eax,DWORD PTR ds:[esi]
  4194b4:	lea    esi,[ebx]
  4194b6:	call   0xada10075
  4194bb:	mov    al,0x80
  4194bd:	stc    
  4194be:	retf   
  4194bf:	mov    esp,0x73315cbd
  4194c4:	icebp  
  4194c5:	add    esi,eax
  4194c7:	into   
  4194c8:	cdq    
  4194c9:	jl     0x4194d3
  4194cb:	mov    dh,0x1c
  4194cd:	ins    DWORD PTR es:[edi],dx
  4194ce:	mov    al,ds:0xe1d335ac
  4194d3:	mov    edx,DWORD PTR [ebx-0x4e]
  4194d6:	test   BYTE PTR [edx-0x50],bh
  4194d9:	in     eax,0x36
  4194db:	xor    BYTE PTR [ebp+0x7e52877f],bh
  4194e1:	arpl   WORD PTR [esi-0x456bea55],sp
  4194e7:	xchg   esp,eax
  4194e8:	mov    al,0xfd
  4194ea:	or     al,ch
  4194ec:	mov    ch,0xbe
  4194ee:	adc    eax,0x438e9ab4
  4194f3:	lea    edx,fs:[ebp-0x59]
  4194f7:	pushf  
  4194f8:	mov    dl,0xad
  4194fa:	adc    DWORD PTR [ebp+eax*4+0x4392ac5c],ebx
  419501:	rcl    BYTE PTR [esi+0x0],cl
  419504:	add    DWORD PTR [esi],esp
  419506:	xchg   ebp,eax
  419507:	ror    BYTE PTR [ebx],0xfb
  41950a:	lahf   
  41950b:	sbb    eax,DWORD PTR [ebp+0x26]
  41950e:	out    dx,al
  41950f:	ja     0x4194e8
  419511:	or     cl,BYTE PTR [ebx+0x7427cd4]
  419517:	ds jbe 0x41951e
  41951a:	xchg   ebx,eax
  41951b:	cli    
  41951c:	repz std 
  41951e:	jge    0x4194c8
  419520:	xchg   esi,eax
  419521:	push   eax
  419522:	(bad)  
  419523:	pusha  
  419524:	aas    
  419525:	xor    ebx,DWORD PTR [edx]
  419527:	dec    ebp
  419528:	jl     0x4194c1
  41952a:	push   ss
  41952b:	mov    ch,0xd1
  41952d:	xor    eax,0xf8c1c8e8
  419532:	xor    dl,bl
  419534:	mov    al,0x76
  419536:	nop
  419537:	retf   0xc223
  41953a:	jp     0x4195b1
  41953c:	pop    ebp
  41953d:	imul   edx,ebp,0xffffff81
  419540:	sub    eax,0xe3d65dbf
  419545:	inc    ebx
  419546:	dec    edx
  419547:	pop    ds
  419548:	pop    ss
  419549:	fs pop ds
  41954b:	and    al,dl
  41954d:	test   BYTE PTR [edi+0x4b],al
  419550:	ror    ch,1
  419552:	sar    ah,1
  419554:	xor    ch,BYTE PTR [edi]
  419556:	xchg   esp,eax
  419557:	mov    ds:0x493ab9db,al
  41955c:	xor    dh,BYTE PTR [edx-0x36]
  41955f:	cs pop ebx
  419561:	repnz add ecx,eax
  419564:	adc    BYTE PTR [ebp-0x7171ddd4],0x64
  41956b:	xlat   BYTE PTR ds:[ebx]
  41956c:	add    DWORD PTR [ebp-0x2ee4c28],0x76
  419573:	enter  0xc3c9,0x22
  419577:	inc    ebx
  419578:	jbe    0x4195f3
  41957a:	(bad)  
  41957b:	and    DWORD PTR ds:0xccfbaa9b,esp
  419581:	mov    bh,0x41
  419583:	retf   0xe75f
  419586:	mov    esp,DWORD PTR [ecx+esi*8-0x3dde5e42]
  41958d:	add    eax,0x23561ac
  419592:	imul   ebp,edi,0x7a
  419595:	mov    ds:0xe18d2cfd,al
  41959a:	and    dl,BYTE PTR [edi+0x4]
  41959d:	dec    ebx
  41959e:	or     esi,esp
  4195a0:	mov    cl,0xa9
  4195a2:	addr16 arpl di,cx
  4195a5:	mov    al,ds:0xde37f292
  4195aa:	(bad)  
  4195ab:	shr    DWORD PTR [eax-0x168d4e8],1
  4195b1:	jno    0x41955f
  4195b3:	jecxz  0x41961f
  4195b5:	inc    ebp
  4195b6:	movsx  esp,BYTE PTR [esi]
  4195b9:	lahf   
  4195ba:	jne    0x419622
  4195bc:	pop    ebx
  4195bd:	jmp    0xb2413fa8
  4195c2:	adc    edi,DWORD PTR [edx-0x560111cc]
  4195c8:	inc    esi
  4195c9:	scas   eax,DWORD PTR es:[edi]
  4195ca:	(bad)  
  4195cb:	or     eax,0xc6a39eae
  4195d0:	inc    ebx
  4195d1:	or     esi,esp
  4195d3:	sbb    al,0x69
  4195d5:	lahf   
  4195d6:	scas   al,BYTE PTR es:[edi]
  4195d7:	push   cs
  4195d8:	nop
  4195d9:	mov    eax,DWORD PTR [ecx+0x35dca7bf]
  4195df:	xchg   esp,eax
  4195e0:	jbe    0x4195ab
  4195e2:	add    ebp,edx
  4195e4:	jmp    0x41962e
  4195e6:	dec    esp
  4195e7:	aam    0x60
  4195e9:	and    ch,0x96
  4195ec:	jl     0x419612
  4195ee:	std    
  4195ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f0:	inc    edi
  4195f1:	into   
  4195f2:	pop    edx
  4195f3:	push   es
  4195f4:	dec    edx
  4195f5:	mov    cl,0xb6
  4195f7:	in     al,0x1a
  4195f9:	mov    WORD PTR [eax-0x62],ds
  4195fc:	push   edi
  4195fd:	rcr    BYTE PTR [ebp+0x3b],cl
  419600:	test   BYTE PTR [ebx+0x4f],0x9d
  419604:	jp     0x419637
  419606:	sub    BYTE PTR [edx+0x38],cl
  419609:	repz jmp FWORD PTR [edx+0x76e9d35e]
  419610:	inc    esp
  419611:	daa    
  419612:	sahf   
  419613:	jg     0x419654
  419615:	jae    0x419663
  419617:	(bad)  
  419618:	pusha  
  419619:	sbb    DWORD PTR [ebx+ebp*8],eax
  41961c:	inc    ecx
  41961d:	lods   al,BYTE PTR ds:[esi]
  41961e:	std    
  41961f:	sub    dh,BYTE PTR [edi-0x7ced5fe2]
  419625:	xor    al,0x34
  419627:	cwde   
  419628:	(bad)  
  419629:	call   0xd4b52b20
  41962e:	cwde   
  41962f:	dec    eax
  419630:	popf   
  419631:	imul   al
  419633:	cld    
  419634:	mov    DWORD PTR ds:0x8ad33be9,esi
  41963a:	(bad)  
  41963b:	xchg   ebp,eax
  41963c:	rcl    BYTE PTR [eax-0x7f],0xc6
  419640:	or     BYTE PTR [ecx],cl
  419642:	dec    edi
  419643:	int    0x4b
  419645:	rcl    DWORD PTR [ecx+0x24],1
  419648:	ds xchg edi,eax
  41964a:	mov    DWORD PTR [edi+0x317a6094],edx
  419650:	arpl   ax,si
  419652:	xor    BYTE PTR [esi-0x70b54069],0x2b
  419659:	fimul  WORD PTR [eax]
  41965b:	mov    ebp,0x9d9c400e
  419660:	fisttp WORD PTR ds:0x8c8aaed
  419666:	dec    ebx
  419667:	mov    eax,DWORD PTR [ebx-0x318b3c8e]
  41966d:	fs dec ebx
  41966f:	ds gs ins BYTE PTR es:[edi],dx
  419672:	lea    edx,[eax+0x35]
  419675:	pop    eax
  419676:	push   esp
  419677:	mov    DWORD PTR [edx+0x512d2aa6],ebp
  41967d:	dec    esi
  41967e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41967f:	std    
  419680:	inc    edx
  419681:	sahf   
  419682:	out    dx,al
  419683:	scas   al,BYTE PTR es:[edi]
  419684:	mov    edx,0xb81076ed
  419689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968a:	mov    DWORD PTR [ecx],esp
  41968c:	adc    eax,0xcbd16cde
  419691:	es push esp
  419693:	outs   dx,BYTE PTR ds:[esi]
  419694:	sti    
  419695:	xlat   BYTE PTR ds:[ebx]
  419696:	imul   esp,edi,0x6c8a497
  41969c:	int3   
  41969d:	fldenv [eax+0x79bac137]
  4196a3:	test   eax,0xba2f5cc5
  4196a8:	jbe    0x419680
  4196aa:	xor    al,dl
  4196ac:	xchg   DWORD PTR [esi],esp
  4196ae:	xchg   ebp,eax
  4196af:	jmp    0x4196e5
  4196b1:	and    bh,BYTE PTR [ecx+0x27]
  4196b4:	push   esp
  4196b5:	imul   edx,DWORD PTR [edx+eiz*2-0xe],0x333bd865
  4196bd:	jno    0x41964d
  4196bf:	adc    eax,0xad43e620
  4196c4:	pop    esi
  4196c5:	cmp    eax,DWORD PTR [ecx-0x7e85f057]
  4196cb:	outs   dx,DWORD PTR ds:[esi]
  4196cc:	inc    edx
  4196cd:	mov    edi,0x3c0fc6be
  4196d2:	aad    0x8c
  4196d4:	push   ebx
  4196d5:	xor    bh,BYTE PTR [ebp+0x53]
  4196d8:	pop    ebx
  4196d9:	cmp    DWORD PTR [ebx+edi*8+0x4b],edx
  4196dd:	in     al,0x19
  4196df:	push   0xaaeeff66
  4196e4:	mov    eax,ds:0x624f3ee
  4196e9:	push   ds
  4196ea:	inc    eax
  4196eb:	mov    ebp,DWORD PTR [esi]
  4196ed:	pop    ebx
  4196ee:	out    0x99,eax
  4196f0:	and    BYTE PTR [esi-0x1d],bl
  4196f3:	pop    edx
  4196f4:	or     esp,ebx
  4196f6:	out    dx,eax
  4196f7:	mov    dl,0x65
  4196f9:	push   cs
  4196fa:	imul   ecx,esp,0x3ff1411
  419700:	xchg   esi,eax
  419701:	fist   DWORD PTR [edx-0x58eef2a3]
  419707:	pop    edi
  419708:	sti    
  419709:	loope  0x4196e0
  41970b:	mov    edi,0xf31a693e
  419710:	loop   0x419763
  419712:	jns    0x419728
  419714:	dec    edi
  419715:	jne    0x41977a
  419717:	jp     0x4196ac
  419719:	adc    eax,0x3bcd8877
  41971e:	mov    ebx,0xd837bd9f
  419723:	sub    DWORD PTR ds:0xbdbe08f8,ecx
  419729:	cmp    BYTE PTR [ecx],cl
  41972b:	inc    edi
  41972c:	cmp    al,0xfe
  41972e:	inc    esi
  41972f:	pop    di
  419731:	dec    ecx
  419732:	pop    ds
  419733:	loop   0x41978e
  419735:	inc    ebx
  419736:	test   BYTE PTR [ebx-0x95a462a],dh
  41973c:	popf   
  41973d:	pop    edx
  41973e:	imul   esp,DWORD PTR [esi+0x15322e20],0xadd0f16c
  419748:	aad    0xd1
  41974a:	cmc    
  41974b:	pop    ds
  41974c:	and    bh,BYTE PTR [eax+0x7]
  41974f:	dec    ebx
  419750:	bound  edi,QWORD PTR [ecx]
  419752:	xchg   DWORD PTR [edx],esp
  419754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419755:	int    0xc8
  419757:	fwait
  419758:	imul   ebx,DWORD PTR [eax],0x15e3997c
  41975e:	jo     0x4197be
  419760:	sub    al,0x9
  419762:	add    DWORD PTR [edi],esp
  419764:	jns    0x419700
  419766:	pop    ss
  419767:	adc    eax,0x6eaa2527
  41976c:	mov    esp,0x22a29364
  419771:	in     eax,0xfd
  419773:	jmp    0xc8a9:0xc7840ea4
  41977a:	push   edx
  41977b:	fwait
  41977c:	push   ebx
  41977d:	shl    BYTE PTR [eax],1
  41977f:	fs jno 0x41971b
  419782:	popa   
  419783:	push   edx
  419784:	xlat   BYTE PTR ds:[ebx]
  419785:	and    edi,DWORD PTR [esi-0x2f40f6aa]
  41978b:	imul   esi,DWORD PTR [ecx+0x3ba3594c],0xffffffe1
  419792:	call   0xd42:0x46ff9287
  419799:	sahf   
  41979a:	(bad)  
  41979b:	adc    bh,BYTE PTR [ecx]
  41979d:	dec    ebx
  41979e:	(bad)  
  41979f:	test   DWORD PTR [eax],0x40861f06
  4197a5:	ret    0x53
  4197a8:	inc    ebp
  4197a9:	nop
  4197aa:	mov    WORD PTR [edx+0x7ce191e5],cs
  4197b0:	fneni(8087 only) 
  4197b2:	mov    DWORD PTR [eax],ebx
  4197b4:	pop    es
  4197b5:	dec    edi
  4197b6:	cwde   
  4197b7:	push   ss
  4197b8:	inc    edx
  4197b9:	adc    edx,DWORD PTR [edi-0x53]
  4197bc:	cld    
  4197bd:	mov    dl,0xb
  4197bf:	(bad)
  4197c2:	mov    bl,0x87
  4197c4:	dec    eax
  4197c5:	jmp    0x501acb48
  4197ca:	mov    eax,0x71387515
  4197cf:	sahf   
  4197d0:	repnz cmc 
  4197d2:	fadd   DWORD PTR [ebx]
  4197d4:	dec    esi
  4197d5:	mov    edi,0x2960e67
  4197da:	push   eax
  4197db:	int3   
  4197dc:	xchg   BYTE PTR [eax],ah
  4197de:	or     ecx,DWORD PTR [ebp-0x17d72241]
  4197e4:	add    cl,bl
  4197e6:	cmp    al,0x9
  4197e8:	call   0x1121:0x835734e3
  4197ef:	add    edi,DWORD PTR [edx-0x6c]
  4197f2:	jbe    0x41982f
  4197f4:	mov    ch,0xd6
  4197f6:	cld    
  4197f7:	push   ecx
  4197f8:	xlat   BYTE PTR ds:[ebx]
  4197f9:	arpl   bp,bp
  4197fb:	scas   al,BYTE PTR es:[edi]
  4197fc:	or     DWORD PTR [ecx-0x51f7a1ae],eax
  419802:	cs ja  0x419883
  419805:	sar    BYTE PTR [esi-0x52dbf026],0x11
  41980c:	hlt    
  41980d:	add    ah,BYTE PTR [eax+edx*8-0x69]
  419811:	cld    
  419812:	mov    al,ds:0x72dc41f7
  419817:	inc    ecx
  419818:	in     al,0xf0
  41981a:	div    DWORD PTR [ecx]
  41981c:	cmp    ah,dh
  41981e:	inc    eax
  41981f:	cwde   
  419820:	jno    0x41983c
  419822:	mov    WORD PTR [bp-0x69],?
  419826:	xlat   BYTE PTR ds:[ebx]
  419827:	retf   0x90c8
  41982a:	dec    eax
  41982b:	test   BYTE PTR [edx],bh
  41982d:	adc    cl,BYTE PTR [edi-0x192556bb]
  419833:	jmp    0x41986f
  419835:	pop    edx
  419836:	shl    DWORD PTR [ecx+0xe],cl
  419839:	aad    0x61
  41983b:	js     0x41987d
  41983d:	scas   eax,DWORD PTR es:[edi]
  41983e:	add    DWORD PTR [eax+0x3d],0xa6fa3553
  419845:	push   ebx
  419846:	(bad)  
  419847:	js     0x419889
  419849:	cmc    
  41984a:	pusha  
  41984b:	mov    dh,0x2d
  41984d:	cli    
  41984e:	mov    ds:0x7395d959,al
  419853:	push   eax
  419854:	lods   al,BYTE PTR ds:[esi]
  419855:	cld    
  419856:	sub    BYTE PTR [edi-0x2541cb0b],0x21
  41985d:	inc    edi
  41985e:	aaa    
  41985f:	pushf  
  419860:	adc    esi,ebp
  419862:	sub    edi,DWORD PTR [ebx+ebx*2]
  419865:	ins    DWORD PTR es:[edi],dx
  419866:	pusha  
  419867:	fs ret 
  419869:	popf   
  41986a:	inc    eax
  41986b:	xchg   ecx,eax
  41986c:	popa   
  41986d:	gs xchg ebp,eax
  41986f:	cdq    
  419870:	inc    esi
  419871:	and    BYTE PTR [edx],ah
  419873:	push   ss
  419874:	mov    ebx,ebx
  419876:	sbb    BYTE PTR [ecx+0x186a4a41],ah
  41987c:	jno    0x41984f
  41987e:	sbb    DWORD PTR [edx+esi*8-0x5772f0ee],ecx
  419885:	xor    eax,0x3cc5d8e3
  41988a:	and    eax,0x474921a9
  41988f:	xor    ebp,esp
  419891:	sbb    dl,BYTE PTR [ebx+0x33]
  419894:	inc    ebp
  419895:	adc    BYTE PTR ds:0xf6e26b76,0x59
  41989c:	push   eax
  41989d:	jo     0x419909
  41989f:	std    
  4198a0:	loopne 0x41987e
  4198a2:	jno    0x419876
  4198a4:	or     eax,0x2fcb9ed
  4198a9:	bound  eax,QWORD PTR [edx-0x702be809]
  4198af:	sti    
  4198b0:	inc    esp
  4198b1:	mov    ecx,0x947d596a
  4198b6:	cmp    dl,BYTE PTR [edi-0x33]
  4198b9:	jmp    0xce4a:0x8acdaa6e
  4198c0:	sub    edi,0x3ac3c18f
  4198c6:	in     eax,dx
  4198c7:	sub    BYTE PTR [eax-0x73],0xf9
  4198cb:	or     al,0x55
  4198cd:	jb     0x419920
  4198cf:	jo     0x4198d7
  4198d1:	inc    BYTE PTR [ebx+edx*2-0x5d3ac7bf]
  4198d8:	cmp    al,0x6
  4198da:	dec    esp
  4198db:	jl     0x419867
  4198dd:	push   fs
  4198df:	(bad)  
  4198e0:	aad    0x5d
  4198e2:	adc    al,0x9a
  4198e4:	scas   eax,DWORD PTR es:[edi]
  4198e5:	gs fadd st,st(7)
  4198e8:	js     0x41991e
  4198ea:	adc    BYTE PTR [ecx+edi*1+0xb148cf4],dl
  4198f1:	cmc    
  4198f2:	fistp  DWORD PTR [esi-0x8]
  4198f5:	mov    cx,0x182f
  4198f9:	dec    ecx
  4198fa:	scas   eax,DWORD PTR es:[edi]
  4198fb:	mov    ebp,DWORD PTR [ebx+0x4f4ac3d]
  419901:	mov    edi,0x5b8c70ee
  419906:	ret    0xfdd8
  419909:	xchg   ebp,esi
  41990b:	push   ecx
  41990c:	mov    bh,0xef
  41990e:	mov    ecx,esi
  419910:	sub    DWORD PTR [esi+0x42963d9f],0x7a
  419917:	and    cl,BYTE PTR [ebx+0x9c69312]
  41991d:	or     al,0xfc
  41991f:	fidivr WORD PTR [edx]
  419921:	mov    ds:0xc467ce2e,eax
  419926:	push   cs
  419927:	(bad)  
  419928:	js     0x419998
  41992a:	imul   DWORD PTR [edi]
  41992c:	fs sbb eax,0x870a4323
  419932:	sub    DWORD PTR ds:0x4180f019,ecx
  419938:	data16 daa 
  41993a:	mov    DWORD PTR [esi+edi*8-0x49],ebp
  41993e:	data16 sub al,dl
  419941:	mov    WORD PTR [ecx],fs
  419943:	xor    esp,DWORD PTR [edi+eax*2-0x3a653c22]
  41994a:	xor    cl,dh
  41994c:	fbld   TBYTE PTR [esi]
  41994e:	pop    DWORD PTR [esi]
  419950:	push   edx
  419951:	fmul   st(5),st
  419953:	int3   
  419954:	ja     0x4198e2
  419956:	jnp    0x419938
  419958:	and    DWORD PTR [edi],eax
  41995a:	pop    esi
  41995b:	lds    ebx,FWORD PTR [edi+0x5238190]
  419961:	jmp    0xbe7e5664
  419966:	sti    
  419967:	cs mov ch,0xef
  41996a:	arpl   si,ax
  41996c:	sub    DWORD PTR [edi-0xe430a2],ecx
  419972:	mov    bl,0xe0
  419974:	xchg   esp,eax
  419975:	in     eax,0x7e
  419977:	adc    esp,esi
  419979:	(bad)
  41997c:	add    esp,edx
  41997e:	mov    ds:0xa230cb55,al
  419983:	data16 das 
  419985:	stos   DWORD PTR es:[edi],eax
  419986:	sbb    ebx,edi
  419988:	fldcw  WORD PTR [eax]
  41998a:	into   
  41998b:	push   es
  41998c:	adc    DWORD PTR [edi-0xf],0xb2e52dcf
  419993:	add    ah,ch
  419995:	or     al,0x6e
  419997:	mov    ah,0x6d
  419999:	cmp    BYTE PTR ds:0xaecbf796,0x36
  4199a0:	out    0x1,al
  4199a2:	leave  
  4199a3:	or     DWORD PTR [edx+0x6c],esp
  4199a6:	outs   dx,BYTE PTR ds:[esi]
  4199a7:	ds pop edi
  4199a9:	scas   al,BYTE PTR es:[edi]
  4199aa:	dec    edi
  4199ab:	das    
  4199ac:	arpl   WORD PTR [eax],di
  4199ae:	xchg   ecx,eax
  4199af:	xor    bl,al
  4199b1:	gs loop 0x419a13
  4199b4:	stos   BYTE PTR es:[edi],al
  4199b5:	add    al,0x8b
  4199b7:	mov    dl,0x43
  4199b9:	dec    eax
  4199ba:	retf   0xe415
  4199bd:	jmp    0x419950
  4199bf:	retf   0x51d8
  4199c2:	fisub  WORD PTR [esi]
  4199c4:	test   al,0xd0
  4199c6:	and    al,0x1b
  4199c8:	mov    BYTE PTR [edx+edx*2-0x5de9c15],cl
  4199cf:	fsubr  QWORD PTR [edx-0x46fde935]
  4199d5:	repz int3 
  4199d7:	(bad)  
  4199db:	mov    dl,0x65
  4199dd:	mov    ds:0x70344ac5,al
  4199e2:	and    ecx,ecx
  4199e4:	mov    ch,0x75
  4199e6:	fidivr WORD PTR [edi-0x59]
  4199e9:	mov    edi,0x241c4132
  4199ee:	adc    BYTE PTR [edi],cl
  4199f0:	jmp    0xc301c138
  4199f5:	stc    
  4199f6:	sbb    al,0xb5
  4199f8:	sbb    BYTE PTR [edx+edi*8-0x5d],al
  4199fc:	cs int3 
  4199fe:	dec    eax
  4199ff:	rcl    DWORD PTR [ebx+0x2576a13d],cl
  419a05:	and    al,0xcf
  419a07:	mov    bh,0x8c
  419a09:	inc    edi
  419a0a:	xor    eax,0xa2b748d9
  419a0f:	stos   DWORD PTR es:[edi],eax
  419a10:	pop    ebx
  419a11:	push   es
  419a12:	call   0xacab600b
  419a17:	cmp    eax,ecx
  419a19:	ds mov al,0x75
  419a1c:	sub    eax,0xc4f1490f
  419a21:	adc    DWORD PTR [edi],ecx
  419a23:	add    esp,edi
  419a25:	add    eax,0xc11f4c14
  419a2a:	mov    edx,0x40329321
  419a2f:	adc    DWORD PTR [esp+ecx*4],ebx
  419a32:	jbe    0x419a86
  419a34:	xchg   ebx,eax
  419a35:	pop    esi
  419a36:	mov    esp,0xba5c410c
  419a3b:	mov    cs,esi
  419a3d:	int    0xab
  419a3f:	and    BYTE PTR [edi-0x6e],al
  419a42:	retf   
  419a43:	jl     0x4199cc
  419a45:	mov    ah,0xae
  419a47:	(bad)  
  419a48:	iret   
  419a49:	frstor [ebx-0x5b7eabc3]
  419a4f:	out    0xaa,eax
  419a51:	inc    esp
  419a52:	aas    
  419a53:	dec    esi
  419a54:	loopne 0x419a25
  419a56:	int3   
  419a57:	pop    ebp
  419a58:	dec    esi
  419a59:	inc    ecx
  419a5a:	sub    ebp,eax
  419a5c:	aaa    
  419a5d:	push   ss
  419a5e:	xor    eax,0xabc61d31
  419a63:	in     al,0xe5
  419a65:	inc    eax
  419a66:	ficomp DWORD PTR [eax-0x6c]
  419a69:	je     0x419a67
  419a6b:	inc    esp
  419a6c:	shl    cl,1
  419a6e:	(bad)  [ecx+ecx*2]
  419a71:	test   bh,0x4
  419a74:	dec    ecx
  419a75:	pop    es
  419a76:	mov    ebx,0x2386b0d6
  419a7b:	pcmpeqd mm4,QWORD PTR [ecx+0x359ce3d1]
  419a82:	inc    ebp
  419a83:	sbb    al,0x3f
  419a85:	sub    eax,0x6fd66cd0
  419a8a:	sbb    esp,DWORD PTR [eax-0x10]
  419a8d:	sub    eax,0x56d1e1f
  419a92:	mov    edi,0x80c5df72
  419a97:	pop    ebx
  419a98:	and    BYTE PTR [esi+0x13],cl
  419a9b:	les    ebx,FWORD PTR [esi-0x47]
  419a9e:	mov    eax,0xb5ddb04a
  419aa3:	inc    esp
  419aa4:	retf   
  419aa5:	stos   DWORD PTR es:[edi],eax
  419aa6:	retf   
  419aa7:	sbb    al,BYTE PTR [eax-0x29409e8d]
  419aad:	lock ret 0x49a4
  419ab1:	cmp    edi,edi
  419ab3:	jle    0x419ac2
  419ab5:	bound  esp,QWORD PTR [edi]
  419ab7:	out    0x51,eax
  419ab9:	sahf   
  419aba:	xor    eax,0xb1273d4c
  419abf:	pop    edx
  419ac0:	push   ecx
  419ac1:	pop    eax
  419ac2:	clc    
  419ac3:	mov    edi,0xbfc89372
  419ac8:	nop
  419ac9:	pusha  
  419aca:	pop    ebp
  419acb:	mov    ah,dl
  419acd:	push   edx
  419ace:	(bad)  
  419acf:	push   DWORD PTR ds:0x67eeecf2
  419ad5:	sub    ebx,ebx
  419ad7:	outs   dx,BYTE PTR ds:[esi]
  419ad8:	or     DWORD PTR [eax-0xa44f5da],eax
  419ade:	loope  0x419b4a
  419ae0:	cli    
  419ae1:	sub    ebx,DWORD PTR [edx]
  419ae3:	pop    edi
  419ae4:	sbb    ebx,DWORD PTR [ebp+ebp*2+0x32604a1b]
  419aeb:	or     BYTE PTR [ebx+0xfa48bc9],0x63
  419af2:	addr16 pop ecx
  419af4:	test   ch,0x3d
  419af7:	sub    dh,bh
  419af9:	dec    ebx
  419afa:	ret    
  419afb:	fwait
  419afc:	out    dx,al
  419afd:	jnp    0x419b2c
  419aff:	mov    ecx,DWORD PTR [esi+esi*4-0x11a87546]
  419b06:	aad    0x49
  419b08:	ret    
  419b09:	mov    ds:0xd1e09548,al
  419b0e:	jecxz  0x419b33
  419b10:	push   ds
  419b11:	add    DWORD PTR [edx-0x7b],edx
  419b14:	scas   eax,DWORD PTR es:[edi]
  419b15:	add    eax,0xbf300e70
  419b1a:	inc    eax
  419b1b:	pop    esi
  419b1c:	push   cs
  419b1d:	dec    edx
  419b1e:	pop    ds
  419b1f:	lods   al,BYTE PTR ds:[esi]
  419b20:	and    ch,BYTE PTR [esp+edi*1+0x4a]
  419b24:	dec    ebx
  419b25:	inc    ebp
  419b26:	mov    bh,0x2
  419b28:	jle    0x419b10
  419b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2b:	push   ecx
  419b2c:	add    eax,0x9bf7eb3b
  419b31:	sub    DWORD PTR [edx+0x6a],ebx
  419b34:	dec    edi
  419b35:	mov    ah,0x40
  419b37:	inc    eax
  419b38:	push   ebp
  419b39:	rcl    ch,0x83
  419b3c:	sub    dh,BYTE PTR [ebx+ebx*8]
  419b3f:	lock pop es
  419b41:	and    BYTE PTR [ecx+0x8],al
  419b44:	adc    al,BYTE PTR [ecx-0x7f]
  419b47:	xor    BYTE PTR [ecx+0x53],cl
  419b4a:	add    bl,ch
  419b4c:	je     0x419b0d
  419b4e:	test   al,0x81
  419b50:	loope  0x419b87
  419b52:	dec    eax
  419b53:	fnstsw WORD PTR [edx]
  419b55:	aam    0x71
  419b57:	sahf   
  419b58:	mov    dh,0x1c
  419b5a:	int    0x1d
  419b5c:	into   
  419b5d:	ja     0x419b35
  419b5f:	cmp    BYTE PTR [eax-0x48255e42],al
  419b65:	rcl    BYTE PTR [eax],cl
  419b67:	cli    
  419b68:	adc    ebp,DWORD PTR [edi+0x17aa3417]
  419b6e:	fsub   DWORD PTR [edi]
  419b70:	je     0x419b6d
  419b72:	out    dx,eax
  419b73:	in     al,0xcf
  419b75:	pushf  
  419b76:	sbb    dl,al
  419b78:	adc    eax,0x9389b43
  419b7d:	sub    eax,0xf73a8212
  419b82:	dec    edi
  419b83:	std    
  419b84:	addr16 aas 
  419b86:	clc    
  419b87:	mov    ds:0x15281dd9,eax
  419b8c:	in     eax,0x33
  419b8e:	jge    0x419b94
  419b90:	fdivr  DWORD PTR [eax+0x7d]
  419b93:	inc    ecx
  419b94:	out    0x32,al
  419b96:	and    DWORD PTR [ecx+ebp*1],0x2768951b
  419b9d:	jno    0x419c00
  419b9f:	add    BYTE PTR [edi],ch
  419ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ba2:	push   edi
  419ba3:	mov    WORD PTR [edx-0x75],ds
  419ba6:	xchg   esp,eax
  419ba7:	cmp    BYTE PTR [edi+0x53],cl
  419baa:	jbe    0x419b7e
  419bac:	adc    al,0xee
  419bae:	mov    ecx,0xd0967c6b
  419bb3:	(bad)  
  419bb5:	mov    eax,ds:0xfe32a4c8
  419bba:	cli    
  419bbb:	cmp    edx,ecx
  419bbd:	add    al,BYTE PTR [eax]
  419bbf:	pop    ds
  419bc0:	lahf   
  419bc1:	cmp    eax,0x1211abf7
  419bc6:	shl    DWORD PTR [esi-0x2d],cl
  419bc9:	les    cx,DWORD PTR [edx-0x31]
  419bcd:	fidiv  DWORD PTR [ecx+0x31]
  419bd0:	out    dx,al
  419bd1:	xchg   esi,eax
  419bd2:	and    al,0xf0
  419bd4:	adc    al,0xeb
  419bd6:	js     0x419b82
  419bd8:	cdq    
  419bd9:	xchg   ebx,eax
  419bda:	fwait
  419bdb:	jne    0x419bd7
  419bdd:	fdivr  st(1),st
  419bdf:	mov    ds:0x620f8c49,eax
  419be4:	cmp    DWORD PTR [edx+0x2bcdeee3],esi
  419bea:	js     0x419c0a
  419bec:	cmc    
  419bed:	inc    edx
  419bee:	pop    ss
  419bef:	ret    
  419bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf1:	pop    ebp
  419bf2:	lea    ecx,[edx]
  419bf4:	pop    esp
  419bf5:	stos   BYTE PTR es:[edi],al
  419bf6:	jne    0x419b95
  419bf8:	into   
  419bf9:	push   es
  419bfa:	xchg   ebx,eax
  419bfb:	(bad)  
  419bfc:	rcl    BYTE PTR [eax+0x215621e7],cl
  419c02:	add    ebp,DWORD PTR [eax+0x41]
  419c05:	test   eax,0xd23a2ab5
  419c0a:	hlt    
  419c0b:	mov    ebp,esp
  419c0d:	jl     0x419ba3
  419c0f:	call   0x69be:0xbd163e7b
  419c16:	ret    
  419c17:	dec    edi
  419c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c19:	adc    edx,DWORD PTR [ecx+0x13]
  419c1c:	mov    eax,0x64fc334d
  419c21:	fimul  WORD PTR [ebx+0x5b1d58ac]
  419c27:	(bad)  
  419c28:	sub    BYTE PTR [edx],bl
  419c2a:	sbb    al,0xaa
  419c2c:	call   0x8c47e346
  419c31:	jecxz  0x419c09
  419c33:	sahf   
  419c34:	sbb    al,0x47
  419c36:	adc    ecx,DWORD PTR [ebx]
  419c38:	imul   esp,esp,0x1f
  419c3b:	aam    0x72
  419c3d:	pop    ebp
  419c3e:	lock adc BYTE PTR [edi+0x6354ffb8],bl
  419c45:	mov    al,0x5c
  419c47:	(bad)  
  419c48:	adc    DWORD PTR [esi+0x68d68a57],ebx
  419c4e:	jl     0x419c39
  419c50:	or     bh,BYTE PTR [esi]
  419c52:	fwait
  419c53:	sub    al,0x46
  419c55:	jns    0x419c40
  419c57:	sbb    BYTE PTR [esi-0x12df6bee],cl
  419c5d:	sub    DWORD PTR [ecx],edi
  419c5f:	jbe    0x419ca7
  419c61:	sub    bl,BYTE PTR ds:0x791bd4d1
  419c67:	mov    ds:0x9e5637e7,eax
  419c6c:	mov    eax,0xb091e78d
  419c71:	std    
  419c72:	xor    ah,dl
  419c74:	shr    BYTE PTR [edi+0x40],0xef
  419c78:	pop    eax
  419c79:	push   eax
  419c7a:	inc    DWORD PTR [esp+ebp*2-0x614fd001]
  419c81:	stos   DWORD PTR es:[edi],eax
  419c82:	dec    eax
  419c83:	sbb    esi,0x49bb4750
  419c89:	jno    0x419ce0
  419c8b:	fmul   QWORD PTR [ebp-0x741cb9d6]
  419c91:	mov    bl,0xde
  419c93:	lahf   
  419c94:	jnp    0x419cda
  419c96:	xor    bl,BYTE PTR [ebp+ebp*8-0x7f87195e]
  419c9d:	xor    BYTE PTR [ecx-0x22],bh
  419ca0:	xchg   ecx,eax
  419ca1:	or     cl,dh
  419ca3:	xchg   edi,eax
  419ca4:	in     eax,0x6e
  419ca6:	int    0x5e
  419ca8:	xchg   esi,eax
  419ca9:	push   ecx
  419caa:	fbstp  TBYTE PTR [esi-0x61a6db4c]
  419cb0:	loopne 0x419cda
  419cb2:	das    
  419cb3:	sbb    eax,DWORD PTR [ebp-0x5ad247e5]
  419cb9:	xor    al,0x68
  419cbb:	push   ss
  419cbc:	sub    ah,BYTE PTR [ecx]
  419cbe:	es in  al,0xde
  419cc1:	sar    ebx,1
  419cc3:	cmp    BYTE PTR [ebx-0x7ebf7217],0x46
  419cca:	loope  0x419d04
  419ccc:	test   eax,0xed6feef8
  419cd1:	fdiv   DWORD PTR gs:[edx+0x74]
  419cd5:	xchg   ecx,eax
  419cd6:	pop    es
  419cd7:	clc    
  419cd8:	int    0xb7
  419cda:	outs   dx,BYTE PTR ds:[esi]
  419cdb:	push   ecx
  419cdc:	jno    0x419cec
  419cde:	xor    dl,bh
  419ce0:	aad    0x4e
  419ce2:	inc    ebx
  419ce3:	sbb    DWORD PTR [edx+eax*1-0x7a],ecx
  419ce7:	scas   eax,DWORD PTR es:[edi]
  419ce8:	push   0xffffffa8
  419cea:	dec    edi
  419ceb:	mov    ebp,0x5e9a311d
  419cf0:	mov    esp,0x5cca9ab2
  419cf5:	and    ebx,ebx
  419cf7:	xchg   esi,eax
  419cf8:	pop    esi
  419cf9:	jecxz  0x419d5b
  419cfb:	sub    DWORD PTR [esi-0x79e295b7],edx
  419d01:	sbb    dl,bl
  419d03:	sub    dl,BYTE PTR [esi]
  419d05:	int3   
  419d06:	xor    ebp,DWORD PTR [eax]
  419d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d0a:	je     0x419cfb
  419d0c:	js     0x419ca2
  419d0e:	rol    ah,cl
  419d10:	mov    WORD PTR [edi],cs
  419d12:	inc    DWORD PTR [ebp-0x3e]
  419d15:	inc    edx
  419d16:	stos   DWORD PTR es:[edi],eax
  419d17:	cmp    al,0x42
  419d19:	div    BYTE PTR [ecx]
  419d1b:	mov    ds:0xd4f00949,al
  419d20:	ret    
  419d21:	pop    ecx
  419d22:	sub    edi,DWORD PTR [edi-0x70f5bd8d]
  419d28:	stos   DWORD PTR es:[edi],eax
  419d29:	or     BYTE PTR [edx+edi*2+0x4cc43e06],al
  419d30:	adc    edx,DWORD PTR [ecx-0xf]
  419d33:	add    BYTE PTR [ebp-0x2ac84ce4],dl
  419d39:	add    esi,ebx
  419d3b:	fdivr  QWORD PTR [eax+edx*2-0x1882b91]
  419d42:	sbb    BYTE PTR [esi+esi*4+0x23b45adf],bl
  419d49:	inc    ebp
  419d4a:	clc    
  419d4b:	pop    esp
  419d4c:	push   edi
  419d4d:	sbb    eax,0x5888d496
  419d52:	xchg   edx,eax
  419d53:	add    DWORD PTR [edx-0x2170cb8a],edx
  419d59:	aaa    
  419d5a:	sbb    dl,bl
  419d5c:	aam    0xf7
  419d5e:	dec    ebx
  419d5f:	iret   
  419d60:	addr16 aam 0xc
  419d63:	outs   dx,DWORD PTR ds:[esi]
  419d64:	cmp    DWORD PTR [ecx+0xc],esp
  419d67:	fld    TBYTE PTR [edi]
  419d69:	sbb    ch,BYTE PTR [esi+0x53c27105]
  419d6f:	aam    0x93
  419d71:	push   es
  419d72:	fimul  WORD PTR [ebp+ebp*2-0x25]
  419d76:	adc    edx,DWORD PTR [ecx-0x7f]
  419d79:	stos   DWORD PTR es:[edi],eax
  419d7a:	mov    al,0x48
  419d7c:	cli    
  419d7d:	xchg   edx,eax
  419d7f:	mov    ?,WORD PTR [eax+ebp*2+0x3f0ba160]
  419d86:	js     0x419dee
  419d88:	test   al,0xb7
  419d8a:	pop    esp
  419d8b:	out    0x94,al
  419d8d:	(bad)  [eax+0x424fe77a]
  419d93:	cmp    bl,BYTE PTR [edi-0xbb279fd]
  419d99:	or     eax,0xa58a4d9d
  419d9e:	(bad)  
  419d9f:	es leave 
  419da1:	sub    eax,0x438b75ef
  419da6:	pop    eax
  419da7:	push   eax
  419da8:	call   0x847c1a64
  419dad:	mov    ebx,edi
  419daf:	mov    ah,0x1c
  419db1:	in     eax,dx
  419db2:	xor    BYTE PTR [edi-0x20],dl
  419db5:	push   0x46c06082
  419dba:	imul   ebx,DWORD PTR es:[esi-0x4685f941],0xffffffaa
  419dc2:	in     al,dx
  419dc3:	jae    0x419def
  419dc5:	jae    0x419dbe
  419dc7:	out    0x54,eax
  419dc9:	stos   BYTE PTR es:[edi],al
  419dca:	hlt    
  419dcb:	mov    BYTE PTR [ebx+0x76],bh
  419dce:	adc    esi,esp
  419dd0:	into   
  419dd1:	call   0x25bce0a5
  419dd6:	loopne 0x419dff
  419dd8:	jle    0x419da9
  419dda:	xchg   esi,eax
  419ddb:	push   cs
  419ddc:	mov    WORD PTR [ebx],fs
  419dde:	jb     0x419d6c
  419de0:	inc    edi
  419de1:	sti    
  419de2:	(bad)  
  419de3:	mov    eax,0xfdfb7894
  419de8:	sbb    al,0xfa
  419dea:	jno    0x419e29
  419dec:	test   eax,0xdc3d3b2
  419df1:	mov    eax,0x2cebd43
  419df6:	mov    dl,bh
  419df8:	out    0xb9,al
  419dfa:	fld    QWORD PTR [ebx+0x3]
  419dfd:	pushf  
  419dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dff:	js     0x419e12
  419e01:	push   esp
  419e02:	cld    
  419e03:	and    DWORD PTR [edi-0x1c],0xfffffff4
  419e07:	sbb    ebx,ebx
  419e09:	sbb    DWORD PTR [esi],edx
  419e0b:	arpl   ax,bx
  419e0d:	xchg   edx,eax
  419e0e:	jecxz  0x419ddd
  419e10:	or     BYTE PTR [edx+0xf],ah
  419e13:	push   ss
  419e14:	dec    esi
  419e15:	addr16 in eax,0xe3
  419e18:	push   ebp
  419e19:	dec    esp
  419e1a:	mov    ebp,0x840a93f
  419e1f:	retf   
  419e20:	push   es
  419e21:	jb     0x419df6
  419e23:	lahf   
  419e24:	xchg   esp,eax
  419e25:	dec    esi
  419e26:	in     al,dx
  419e27:	cmp    BYTE PTR [eax+ecx*2],bh
  419e2a:	push   cs
  419e2b:	lds    ebx,FWORD PTR [eax-0x45e161f6]
  419e31:	aaa    
  419e32:	fidiv  WORD PTR [edi+0x4cf83d43]
  419e38:	mov    DWORD PTR [esi+ebx*8+0x6d],esp
  419e3c:	shl    DWORD PTR [ebx-0x4f],1
  419e3f:	test   BYTE PTR [edi-0x2b],ah
  419e42:	push   esp
  419e43:	dec    edx
  419e44:	lods   al,BYTE PTR ds:[esi]
  419e45:	mov    bl,0x2d
  419e47:	or     dl,BYTE PTR ds:0xbeb35360
  419e4d:	or     edx,DWORD PTR [ebp-0x763f8cd3]
  419e53:	pop    edx
  419e54:	(bad)  
  419e55:	hlt    
  419e56:	daa    
  419e57:	fxtract 
  419e59:	add    DWORD PTR [ebp+0x3e],ebp
  419e5c:	dec    ebx
  419e5d:	inc    esi
  419e5e:	stos   BYTE PTR es:[edi],al
  419e5f:	add    DWORD PTR [ebx-0x35],edi
  419e62:	xor    al,0xb0
  419e64:	dec    esp
  419e65:	inc    ecx
  419e66:	fwait
  419e67:	pop    edi
  419e68:	scas   eax,DWORD PTR es:[edi]
  419e69:	xor    BYTE PTR [edx-0x73],0xb7
  419e6d:	xchg   esp,eax
  419e6e:	imul   ebx,DWORD PTR [ebx-0x43],0x20
  419e72:	xchg   ebx,eax
  419e73:	cmp    al,0xb1
  419e75:	(bad)  
  419e76:	xchg   esp,eax
  419e77:	cmp    DWORD PTR [esi+0x28607aab],esi
  419e7d:	inc    edx
  419e7e:	(bad)  
  419e7f:	xchg   esi,eax
  419e80:	sbb    DWORD PTR [esi+0x12833bd],esp
  419e86:	mov    ds:0x112ccf91,al
  419e8b:	lahf   
  419e8c:	xor    al,0x73
  419e8e:	cs jg  0x419e48
  419e91:	data16 sahf 
  419e93:	stos   DWORD PTR es:[edi],eax
  419e94:	adc    BYTE PTR ds:0xe6cbd905,al
  419e9a:	dec    ebx
  419e9b:	push   ebx
  419e9c:	stc    
  419e9d:	mov    dl,0x2c
  419e9f:	in     al,0xe5
  419ea1:	adc    al,cl
  419ea3:	andnps xmm2,XMMWORD PTR [esi-0x6b]
  419ea7:	mov    dl,0xa3
  419ea9:	ret    
  419eaa:	data16 ins BYTE PTR es:[edi],dx
  419eac:	scas   al,BYTE PTR es:[edi]
  419ead:	in     eax,dx
  419eae:	in     eax,dx
  419eaf:	retf   
  419eb0:	div    DWORD PTR [edx+eiz*8+0x3f7049c8]
  419eb7:	hlt    
  419eb8:	pop    edx
  419eb9:	dec    ecx
  419eba:	pop    ds
  419ebb:	loope  0x419e6d
  419ebd:	out    dx,al
  419ebe:	int    0xe5
  419ec0:	jmp    0x419e44
  419ec2:	jmp    0x419e85
  419ec4:	cs cmc 
  419ec6:	enter  0x1082,0x1c
  419eca:	dec    esp
  419ecb:	aad    0x38
  419ecd:	or     eax,0x4c4d8ca5
  419ed2:	outs   dx,BYTE PTR ds:[esi]
  419ed3:	pop    es
  419ed4:	sbb    BYTE PTR [ebp+0x1d13b1ef],bl
  419eda:	lea    edi,fs:[edi]
  419edd:	pop    ss
  419ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419edf:	pusha  
  419ee0:	nop
  419ee1:	mov    eax,ds:0x6e1d8e21
  419ee6:	or     eax,0x4a639174
  419eeb:	enter  0x5771,0x27
  419eef:	ja     0x419ef4
  419ef1:	pusha  
  419ef2:	sub    ah,al
  419ef4:	fisttp WORD PTR [ecx]
  419ef6:	sti    
  419ef7:	ins    DWORD PTR es:[edi],dx
  419ef8:	fs cmp cl,bl
  419efb:	adc    esi,DWORD PTR [esi+0x5a7ffa50]
  419f01:	add    eax,0xfccf454a
  419f06:	cmp    bh,al
  419f08:	mov    esi,0xe60e49fa
  419f0d:	sbb    ch,al
  419f0f:	bound  eax,QWORD PTR [edx+0x7a7024c7]
  419f15:	dec    ecx
  419f16:	mov    eax,ds:0x97813f43
  419f1b:	inc    esp
  419f1c:	sub    DWORD PTR [ebp+0x50],esi
  419f1f:	repz ret 0xe2d0
  419f23:	int    0xa8
  419f25:	icebp  
  419f26:	jae    0x419ee2
  419f28:	jb     0x419eac
  419f2a:	fs dec edx
  419f2c:	mov    cl,0x6a
  419f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2f:	sub    cl,BYTE PTR [ebp-0x58]
  419f32:	push   esp
  419f33:	xchg   edi,eax
  419f34:	inc    edx
  419f35:	imul   esp,DWORD PTR [esi+esi*8+0x46e65181],0xffffffa2
  419f3d:	mov    DWORD PTR ds:0xe0648c5b,ebp
  419f43:	inc    eax
  419f44:	fcom   QWORD PTR [eax+edx*2-0x73244c68]
  419f4b:	ret    0xa32c
  419f4e:	call   0x55403aad
  419f53:	sbb    al,0x8a
  419f55:	dec    edx
  419f56:	mov    ebx,0xbec5532a
  419f5b:	scas   al,BYTE PTR es:[edi]
  419f5c:	and    DWORD PTR [edx+edx*2-0x13783108],0xfdffc33a
  419f67:	jle    0x419fba
  419f69:	or     ch,dl
  419f6b:	loopne 0x419fdc
  419f6d:	sub    eax,0x6e89620f
  419f72:	push   edi
  419f73:	stc    
  419f74:	mov    ecx,0x7d613a00
  419f79:	pusha  
  419f7a:	fild   QWORD PTR [eax]
  419f7c:	jmp    0x7f98:0x57d76f39
  419f83:	lahf   
  419f84:	rcl    dl,1
  419f86:	and    dh,BYTE PTR [eax+eiz*8+0x7624d310]
  419f8d:	enter  0x7c0,0xd3
  419f91:	adc    al,0x4d
  419f93:	inc    ecx
  419f94:	ret    0x9b3f
  419f97:	mov    cl,BYTE PTR [ebx]
  419f99:	rcr    BYTE PTR [edi+0x1],cl
  419f9c:	mov    eax,ds:0x992101e5
  419fa1:	or     al,0x3d
  419fa3:	sahf   
  419fa4:	push   esp
  419fa5:	(bad)  
  419fa6:	dec    ebp
  419fa7:	inc    ebp
  419fa8:	mov    BYTE PTR ds:[eax],ah
  419fab:	xor    DWORD PTR [ecx+0x5c],esi
  419fae:	imul   ebp,DWORD PTR ds:0x162852fd,0xc0a515a6
  419fb8:	dec    esi
  419fb9:	xchg   edx,eax
  419fba:	jmp    0xac34b98b
  419fbf:	sbb    BYTE PTR [esi-0x42],dh
  419fc2:	adc    DWORD PTR [edx+0xa],ebp
  419fc5:	mov    ah,0x78
  419fc7:	sub    eax,0x5b4e9fa8
  419fcc:	xchg   edx,eax
  419fcd:	jecxz  0x419f7b
  419fcf:	outs   dx,DWORD PTR ds:[esi]
  419fd0:	and    DWORD PTR [ebp-0x219b88a7],eax
  419fd6:	jbe    0x419fcb
  419fd8:	rol    BYTE PTR [eax+0x3770b41d],1
  419fde:	xor    al,0xa
  419fe0:	adc    BYTE PTR [esi+ecx*4-0x4a],0xa1
  419fe5:	mov    ebp,0xfd90457f
  419fea:	jg     0x41a001
  419fec:	imul   eax,DWORD PTR [edx-0x13],0xffffffb2
  419ff0:	enter  0x7433,0x62
  419ff4:	or     ch,BYTE PTR [edi]
  419ff6:	push   0x1
  419ff8:	mov    dh,0x42
  419ffa:	(bad)  
  419ffb:	pop    ss
  419ffc:	fwait
  419ffd:	inc    edx
  419ffe:	push   0x6f7a6e47
  41a003:	sbb    cl,ah
  41a005:	fwait
  41a006:	add    DWORD PTR [esi-0x2deabbf9],eax
  41a00c:	outs   dx,DWORD PTR ds:[esi]
  41a00d:	jecxz  0x419fb2
  41a00f:	push   eax
  41a010:	pop    eax
  41a011:	pop    ebx
  41a012:	push   ss
  41a013:	push   ebp
  41a014:	mov    dh,0x3
  41a016:	and    ebp,DWORD PTR [eax+0x7fd045aa]
  41a01c:	jnp    0x41a089
  41a01e:	lea    si,[eax+0x6ca959df]
  41a025:	and    al,0xa6
  41a027:	(bad)  
  41a028:	xchg   ebx,eax
  41a029:	mov    cl,BYTE PTR [ebx+eiz*2]
  41a02c:	icebp  
  41a02d:	mov    cl,0x53
  41a02f:	jle    0x419ffe
  41a031:	test   eax,0xe3824b86
  41a036:	mov    ecx,0xa96b6105
  41a03b:	inc    ebp
  41a03c:	jmp    0x41a04f
  41a03e:	out    0x13,al
  41a040:	(bad)  
  41a041:	nop
  41a042:	out    dx,al
  41a043:	fdivr  DWORD PTR [ecx-0xc998afb]
  41a049:	xlat   BYTE PTR ds:[ebx]
  41a04a:	(bad)  [edi]
  41a04c:	add    cl,BYTE PTR [ebx-0x78]
  41a04f:	adc    ah,dl
  41a051:	dec    ebp
  41a052:	push   0xffffffbc
  41a054:	loopne 0x41a013
  41a056:	inc    edi
  41a057:	pop    ds
  41a058:	nop
  41a059:	push   ebx
  41a05a:	or     eax,0x263b812
  41a05f:	mov    edi,0x2e9c1923
  41a064:	dec    ecx
  41a065:	push   es
  41a066:	or     eax,0x5acbd5eb
  41a06b:	adc    ch,dl
  41a06d:	xchg   ebp,eax
  41a06e:	iret   
  41a06f:	enter  0x3875,0xd1
  41a073:	popa   
  41a074:	call   FWORD PTR ds:0x50bd1c63
  41a07a:	or     DWORD PTR ds:0x3fa72c8e,edx
  41a080:	test   DWORD PTR [ecx+ecx*8],0x3bdeb184
  41a087:	out    dx,al
  41a088:	jb     0x41a022
  41a08a:	dec    ebx
  41a08b:	and    ch,BYTE PTR [esi+0x1f842429]
  41a091:	or     edx,DWORD PTR [ebx-0x357055ca]
  41a097:	inc    esi
  41a098:	jmp    0x562bb82e
  41a09d:	cmp    ch,bl
  41a09f:	sub    bl,al
  41a0a1:	pushf  
  41a0a2:	mov    al,ds:0xad018eed
  41a0a7:	loopne 0x41a04a
  41a0a9:	lods   eax,DWORD PTR ds:[esi]
  41a0aa:	test   BYTE PTR [esi-0x4cadcfd4],dh
  41a0b0:	xchg   edx,eax
  41a0b1:	pushf  
  41a0b2:	adc    ch,BYTE PTR [ecx+eiz*4-0x15]
  41a0b6:	ins    DWORD PTR es:[edi],dx
  41a0b7:	jo     0x41a0e8
  41a0b9:	cdq    
  41a0ba:	icebp  
  41a0bb:	sahf   
  41a0bc:	call   0xcde97907
  41a0c1:	or     esi,ecx
  41a0c3:	add    eax,0xb035412d
  41a0c8:	shl    BYTE PTR [edi+eax*4],1
  41a0cb:	dec    edx
  41a0cc:	add    esi,0xffffff95
  41a0cf:	int    0xa2
  41a0d1:	adc    ah,bh
  41a0d3:	ficomp DWORD PTR [ebx+0x32]
  41a0d6:	mov    edi,0x13541444
  41a0db:	sbb    BYTE PTR [edi],al
  41a0dd:	xchg   ebp,eax
  41a0de:	or     eax,0xa632b7b3
  41a0e3:	pop    ecx
  41a0e4:	mov    bh,bh
  41a0e6:	jge    0x41a14e
  41a0e8:	cli    
  41a0e9:	clc    
  41a0ea:	jbe    0x41a0a2
  41a0ec:	fbstp  TBYTE PTR [esi]
  41a0ee:	dec    eax
  41a0ef:	(bad)  
  41a0f0:	xchg   edi,eax
  41a0f1:	mov    al,BYTE PTR [esi+0x40c7fbcc]
  41a0f7:	pop    ss
  41a0f8:	mov    eax,ds:0x33cd040c
  41a0fd:	sub    ecx,DWORD PTR [ecx]
  41a0ff:	ss inc eax
  41a101:	pusha  
  41a102:	stc    
  41a103:	les    esp,FWORD PTR [esi+edi*8-0x5002a666]
  41a10a:	scas   al,BYTE PTR es:[edi]
  41a10b:	lock cmp eax,0xf255755e
  41a111:	jmp    0xad7a:0x205a56f1
  41a118:	data16 jle 0x41a12f
  41a11b:	inc    ebp
  41a11c:	in     al,0x5c
  41a11e:	sbb    DWORD PTR [edx+ecx*1-0x4b],edi
  41a122:	call   0x9c69:0x231a11a
  41a129:	jmp    FWORD PTR [ebx+0x2bdb327]
  41a12f:	mov    ds,WORD PTR [ebx+edi*4+0x1c5b4c9]
  41a136:	dec    eax
  41a137:	jo     0x41a0f7
  41a139:	mov    ebx,0xcf513f5d
  41a13e:	in     al,0x81
  41a140:	adc    eax,esi
  41a142:	cmc    
  41a143:	fmul   QWORD PTR [ebp+eiz*4-0x44]
  41a147:	jmp    0x41a163
  41a149:	(bad)  
  41a14a:	cs daa 
  41a14c:	inc    ebx
  41a14d:	or     bl,ch
  41a14f:	pop    edx
  41a150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a151:	mov    ecx,esi
  41a153:	sbb    DWORD PTR [edx+ebp*2+0x76d1e464],eax
  41a15a:	dec    ecx
  41a15b:	pop    esi
  41a15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a15d:	xor    DWORD PTR [eax],ebp
  41a15f:	mov    dh,0x24
  41a161:	jnp    0x41a16f
  41a163:	retf   
  41a164:	cmp    DWORD PTR [ebx+0x68],0xffffffa5
  41a168:	lea    esp,[edx]
  41a16a:	fbstp  TBYTE PTR [ebx+0x69fc2cff]
  41a170:	xchg   edi,eax
  41a171:	stos   BYTE PTR es:[edi],al
  41a172:	sub    DWORD PTR [ecx-0x26],0x2e1a5ed0
  41a179:	pop    es
  41a17a:	and    dl,dl
  41a17c:	sub    DWORD PTR [edx+0xb0a9914],edx
  41a182:	jmp    0x41a1cd
  41a184:	or     DWORD PTR [edi-0x15ff77f8],ecx
  41a18a:	mov    bl,0xf3
  41a18c:	mov    ebp,fs
  41a18e:	lahf   
  41a18f:	repnz push es
  41a191:	and    ecx,DWORD PTR [ebp-0x61dd4fc7]
  41a197:	test   ch,al
  41a199:	push   ebp
  41a19a:	not    BYTE PTR [esi]
  41a19c:	idiv   BYTE PTR [esi]
  41a19e:	adc    bl,BYTE PTR [ebx+0xe]
  41a1a1:	call   FWORD PTR [ecx-0x7f]
  41a1a4:	jno    0x41a143
  41a1a6:	mov    eax,ebx
  41a1a8:	jbe    0x41a21c
  41a1aa:	addr16 cwde 
  41a1ac:	push   ebx
  41a1ad:	stos   DWORD PTR es:[edi],eax
  41a1ae:	in     al,0xe6
  41a1b0:	mov    esp,0xc40debb7
  41a1b5:	loopne 0x41a230
  41a1b7:	add    BYTE PTR [ebp-0x35db6bff],cl
  41a1bd:	or     cl,0xfb
  41a1c0:	loop   0x41a183
  41a1c2:	mov    eax,ds:0x5bf1a761
  41a1c7:	sbb    ch,BYTE PTR [ebp+0x558af77b]
  41a1cd:	inc    edx
  41a1ce:	push   0x4937b2cb
  41a1d3:	imul   edi,DWORD PTR [eax+0x6d2d6b6],0xffffffac
  41a1da:	fisubr DWORD PTR [edi]
  41a1dc:	pop    ds
  41a1dd:	in     al,dx
  41a1de:	add    BYTE PTR [ebx+0x1afbadd6],bl
  41a1e4:	shl    DWORD PTR [ebx],1
  41a1e6:	ins    DWORD PTR es:[edi],dx
  41a1e7:	cli    
  41a1e8:	jbe    0x41a25f
  41a1ea:	sub    ah,BYTE PTR [esp+esi*2-0x8c6f049]
  41a1f1:	mov    edx,ebp
  41a1f3:	popf   
  41a1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1f5:	push   cs
  41a1f6:	xchg   ecx,eax
  41a1f7:	dec    edx
  41a1f8:	ins    DWORD PTR es:[edi],dx
  41a1f9:	je     0x41a1fd
  41a1fb:	mov    esp,0x52320340
  41a200:	or     edx,DWORD PTR [edx+ecx*1-0x55df7670]
  41a207:	inc    edi
  41a208:	sub    esi,ebx
  41a20a:	pop    esi
  41a20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a20c:	mov    ah,0x97
  41a20e:	pushf  
  41a20f:	pop    ss
  41a210:	call   0xa115:0x9d2c8394
  41a217:	mov    esp,fs
  41a219:	outs   dx,DWORD PTR ds:[esi]
  41a21a:	call   0xc156a4a4
  41a21f:	jl     0x41a208
  41a221:	adc    bl,BYTE PTR [edx+0x67]
  41a224:	inc    esp
  41a225:	pop    ebx
  41a226:	jmp    ebx
  41a228:	pop    ds
  41a229:	ins    DWORD PTR es:[edi],dx
  41a22a:	das    
  41a22b:	mov    bh,0xbc
  41a22d:	mov    ds:0xfe5d5fc,eax
  41a232:	cmp    ebp,DWORD PTR [ebx+ecx*4+0x2e1ccbfe]
  41a239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a23a:	outs   dx,DWORD PTR ds:[esi]
  41a23b:	add    eax,0xfff65fd
  41a240:	fnstcw WORD PTR [esi-0x1e]
  41a243:	fwait
  41a244:	mov    eax,0xa06c5958
  41a249:	cmp    eax,0xa8290fd7
  41a24e:	add    DWORD PTR [esi+esi*2-0x1080964b],edx
  41a255:	or     eax,0x6b942ff7
  41a25a:	fld    TBYTE PTR [esi+0x1e]
  41a25d:	and    al,0x76
  41a25f:	rcr    ah,0x9e
  41a262:	jle    0x41a258
  41a264:	into   
  41a265:	jns    0x41a28b
  41a267:	int3   
  41a268:	pusha  
  41a269:	icebp  
  41a26a:	cdq    
  41a26b:	add    DWORD PTR [ebp+0x43],0xffffffaf
  41a26f:	sub    DWORD PTR [ebx-0x7d],edi
  41a272:	call   0x3df6:0xf8e9de5a
  41a279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a27a:	lock test BYTE PTR [eax],bl
  41a27d:	cmp    BYTE PTR [edi-0x6fa6299],al
  41a283:	sub    al,0x65
  41a285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a286:	fwait
  41a287:	ror    bl,cl
  41a289:	push   es
  41a28a:	or     ebx,DWORD PTR [eax+0x26]
  41a28d:	in     al,0xfb
  41a28f:	rol    al,cl
  41a291:	mov    eax,0xa689b1ab
  41a296:	cmp    DWORD PTR [edx],eax
  41a298:	ja     0x41a313
  41a29a:	dec    ecx
  41a29b:	jecxz  0x41a2c5
  41a29d:	(bad)
  41a2a0:	pop    edi
  41a2a1:	push   ebp
  41a2a2:	scas   eax,DWORD PTR es:[edi]
  41a2a3:	jg     0x41a273
  41a2a5:	sbb    BYTE PTR es:[ebp+0x6f635e8b],ah
  41a2ac:	shl    DWORD PTR gs:[ecx+0x46264051],0x3a
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	ja     0x41a2ff
  41a2b7:	mov    bh,0xfa
  41a2b9:	fstp   QWORD PTR [ecx]
  41a2bb:	mov    eax,ds:0x349e8f51
  41a2c0:	retf   
  41a2c1:	cmp    eax,0x1a0b5f9d
  41a2c6:	sbb    bl,bl
  41a2c8:	and    BYTE PTR [edx-0x57bc8c7a],bl
  41a2ce:	mov    dh,BYTE PTR [ebx+0x28]
  41a2d1:	lods   al,BYTE PTR ds:[esi]
  41a2d2:	(bad)  [edx]
  41a2d4:	popf   
  41a2d5:	inc    eax
  41a2d6:	shl    DWORD PTR [eax-0x25415f90],cl
  41a2dc:	sub    DWORD PTR [eax+0xb601ad6],ecx
  41a2e2:	pop    ecx
  41a2e3:	cwde   
  41a2e4:	pop    edi
  41a2e5:	inc    BYTE PTR [ecx+0xb]
  41a2e8:	adc    BYTE PTR [ebx-0x16],bl
  41a2eb:	ret    0x513e
  41a2ee:	or     eax,0xd841657
  41a2f3:	cmp    BYTE PTR [ebx],0xfe
  41a2f6:	mov    esp,0xf271a6f6
  41a2fb:	mov    cl,0x4
  41a2fd:	add    cl,BYTE PTR [eax+0x16]
  41a300:	ja     0x41a32f
  41a302:	dec    ecx
  41a303:	iret   
  41a304:	cld    
  41a305:	mov    dl,0xa0
  41a307:	adc    DWORD PTR [edx-0x59d76e18],0x80ae52b7
  41a311:	cmp    esi,DWORD PTR [ebp+0x4c]
  41a314:	xchg   ebp,eax
  41a315:	ins    DWORD PTR es:[edi],dx
  41a316:	fidiv  WORD PTR [edi]
  41a318:	dec    esp
  41a319:	(bad)  
  41a31a:	pop    ss
  41a31b:	xor    eax,0x760d6bad
  41a320:	sub    BYTE PTR [edi+0x7e8056ae],ah
  41a326:	sbb    BYTE PTR [edx+0xad5b17e],al
  41a32c:	push   0xf8a90140
  41a331:	(bad)  
  41a333:	mov    ecx,0x47d67c48
  41a338:	sub    al,0xd4
  41a33a:	int    0x24
  41a33c:	or     DWORD PTR [edi],ebp
  41a33e:	leave  
  41a33f:	out    0x83,al
  41a341:	outs   dx,BYTE PTR ds:[esi]
  41a342:	gs dec ebp
  41a344:	sti    
  41a345:	repnz mov ebp,0xaaf8db28
  41a34b:	rcr    ebp,0xe1
  41a34e:	mov    DWORD PTR [edx],0x94b5ba37
  41a354:	(bad)  
  41a355:	jl     0x41a341
  41a357:	sbb    dl,bh
  41a359:	aaa    
  41a35a:	pop    ebx
  41a35b:	push   ebp
  41a35c:	rcr    BYTE PTR [ecx-0x52],0x87
  41a360:	fisub  WORD PTR [edi-0x4c23869b]
  41a366:	sahf   
  41a367:	test   eax,0xe44e49c7
  41a36c:	ret    
  41a36d:	dec    esp
  41a36e:	fbld   TBYTE PTR [ecx-0x25]
  41a371:	xchg   ecx,eax
  41a372:	js     0x41a375
  41a374:	cmp    esp,edi
  41a376:	imul   esi,DWORD PTR [eax+0x378cf19e],0x3c
  41a37d:	inc    DWORD PTR [edi+0x77]
  41a380:	push   es
  41a381:	cmp    DWORD PTR [ecx+0x4ab6d200],esi
  41a387:	mov    esp,esi
  41a389:	pop    ecx
  41a38a:	push   edi
  41a38b:	adc    BYTE PTR [eax+ebx*8],al
  41a38e:	push   edx
  41a38f:	retf   
  41a390:	inc    esi
  41a391:	dec    esp
  41a392:	popa   
  41a393:	(bad)  
  41a394:	xchg   edx,eax
  41a395:	xor    cl,bh
  41a397:	push   esp
  41a398:	sti    
  41a399:	in     eax,dx
  41a39a:	aam    0x3f
  41a39c:	dec    ecx
  41a39d:	xor    al,0x74
  41a39f:	sar    BYTE PTR [edi],1
  41a3a1:	xchg   BYTE PTR [esi+0x7f558f1e],ch
  41a3a7:	jmp    0x41a3bb
  41a3a9:	xchg   esp,eax
  41a3aa:	xchg   DWORD PTR [ebx-0x60],edi
  41a3ad:	xchg   DWORD PTR [ecx],edx
  41a3af:	enter  0x29bc,0x21
  41a3b3:	mov    edi,0xf29ebec0
  41a3b8:	jp     0x41a42a
  41a3ba:	inc    esp
  41a3bb:	clc    
  41a3bc:	js     0x41a3e1
  41a3be:	inc    esp
  41a3bf:	dec    BYTE PTR [edi+0x1fb86c0f]
  41a3c5:	jae    0x41a385
  41a3c7:	retf   
  41a3c8:	inc    ebp
  41a3c9:	add    bh,BYTE PTR [ecx-0x5c72c342]
  41a3cf:	pop    es
  41a3d0:	mov    ebx,0xac14ea1a
  41a3d5:	jg     0x41a364
  41a3d7:	jmp    0x8298d273
  41a3dc:	mov    ah,0x92
  41a3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3df:	imul   edx,DWORD PTR [ebp-0x508418c5],0xffffffe4
  41a3e6:	sbb    cl,BYTE PTR [ebp-0x53]
  41a3e9:	jb     0x41a3eb
  41a3eb:	(bad)  
  41a3ec:	loope  0x41a405
  41a3ee:	jnp    0x41a407
  41a3f0:	mov    dl,0x11
  41a3f2:	xchg   esp,eax
  41a3f3:	jbe    0x41a397
  41a3f5:	add    BYTE PTR [ebx],cl
  41a3f7:	inc    eax
  41a3f8:	(bad)  
  41a3f9:	neg    DWORD PTR [eax+0x58f68e21]
  41a3ff:	cld    
  41a400:	popf   
  41a401:	dec    edi
  41a402:	add    eax,0xfa5b8d0c
  41a407:	shl    ch,0xa
  41a40a:	fisub  DWORD PTR [ecx-0x71ac4ce]
  41a410:	iret   
  41a411:	jge    0x41a3ea
  41a413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a414:	stos   DWORD PTR es:[edi],eax
  41a415:	icebp  
  41a416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a417:	push   ds
  41a418:	mov    esi,ebx
  41a41a:	fisub  WORD PTR [ebx]
  41a41c:	leave  
  41a41d:	lods   eax,DWORD PTR ds:[esi]
  41a41e:	jge    0x41a432
  41a420:	push   cs
  41a421:	popf   
  41a422:	pushf  
  41a423:	inc    ecx
  41a424:	or     al,0x4
  41a426:	dec    ebx
  41a427:	and    BYTE PTR [edx+0x52],0xee
  41a42b:	(bad)  
  41a42d:	cmp    eax,0x6ab75824
  41a432:	fisttp DWORD PTR [ecx]
  41a434:	inc    ecx
  41a435:	pop    edi
  41a436:	(bad)  
  41a437:	hlt    
  41a438:	xchg   esi,eax
  41a439:	push   0x33
  41a43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a43c:	push   0x6dfb67ca
  41a441:	lea    ecx,[esi]
  41a443:	mov    ds:0x875b2d82,eax
  41a448:	or     cl,cl
  41a44a:	fisttp DWORD PTR [ebx+0x18]
  41a44d:	ins    BYTE PTR es:[edi],dx
  41a44e:	mov    al,0x1b
  41a450:	(bad)  
  41a452:	lds    ebp,FWORD PTR [edi-0xe]
  41a455:	dec    ebp
  41a456:	jle    0x41a4b5
  41a458:	shl    BYTE PTR [edx],1
  41a45a:	test   DWORD PTR [ebx+edi*2+0x159fdb31],esi
  41a461:	mov    ah,0x8d
  41a463:	ins    DWORD PTR es:[edi],dx
  41a464:	loope  0x41a4a4
  41a466:	xchg   edi,eax
  41a467:	mov    ch,0xd5
  41a469:	push   esp
  41a46a:	add    edx,DWORD PTR [eax-0x6cdbfc09]
  41a470:	add    DWORD PTR [edi+0x14],0x5d0dc8c2
  41a477:	fld    DWORD PTR [ebx+ebx*1+0x6d]
  41a47b:	xor    edi,eax
  41a47d:	aas    
  41a47e:	out    dx,al
  41a47f:	mov    ecx,0x6cab3091
  41a484:	pop    ds
  41a485:	rcl    al,1
  41a487:	cs clc 
  41a489:	jno    0x41a493
  41a48b:	cmc    
  41a48c:	out    0xf7,eax
  41a48e:	rcr    DWORD PTR ds:0x9262ee58,0x97
  41a495:	leave  
  41a496:	(bad)  
  41a497:	test   al,0xac
  41a499:	push   esp
  41a49a:	jns    0x41a43a
  41a49c:	lea    ecx,[eax+ecx*1+0x5e5b9465]
  41a4a3:	leave  
  41a4a4:	sub    dl,bh
  41a4a6:	pop    es
  41a4a7:	clc    
  41a4a8:	sbb    eax,0xc621202a
  41a4ad:	call   DWORD PTR [eax-0x63]
  41a4b0:	fidivr DWORD PTR [eax+0x0]
  41a4b3:	ret    0xf82c
  41a4b6:	jmp    FWORD PTR ss:[esi-0x39]
  41a4ba:	lahf   
  41a4bb:	sti    
  41a4bc:	imul   ebp,DWORD PTR [ebx],0xfffffff0
  41a4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c0:	add    ebp,DWORD PTR [edx]
  41a4c2:	mov    ch,0xa7
  41a4c4:	dec    edi
  41a4c5:	xchg   BYTE PTR [edi],cl
  41a4c7:	sub    eax,0x4e4e6d88
  41a4cc:	aas    
  41a4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ce:	adc    DWORD PTR [eax+0x4bbcbbed],esp
  41a4d4:	hlt    
  41a4d5:	fs in  eax,dx
  41a4d7:	leave  
  41a4d8:	or     ebx,DWORD PTR [eax]
  41a4da:	cli    
  41a4db:	jbe    0x41a4d4
  41a4dd:	mov    eax,0xe2d097b9
  41a4e2:	fmul   st,st(2)
  41a4e4:	lods   eax,DWORD PTR ds:[esi]
  41a4e5:	inc    edi
  41a4e6:	je     0x41a4ea
  41a4e8:	cmp    al,0x8
  41a4ea:	data16 jmp 0x41a49d
  41a4ed:	loop   0x41a4a8
  41a4ef:	adc    dh,BYTE PTR [ecx+0x7903d63]
  41a4f5:	inc    ebp
  41a4f6:	adc    al,0x34
  41a4f8:	dec    esp
  41a4f9:	(bad)  
  41a4fa:	daa    
  41a4fb:	jmp    0x1ec:0x9d1a7afe
  41a502:	aad    0x9f
  41a504:	jb     0x41a57a
  41a506:	mov    dh,BYTE PTR [esi-0x1595139e]
  41a50c:	jmp    0x5343:0xce5386c2
  41a513:	mov    BYTE PTR [ebx-0x74e79242],dh
  41a519:	xor    dh,ch
  41a51b:	sbb    DWORD PTR [eax],edi
  41a51d:	add    BYTE PTR [ebp+0x27],0x89
  41a521:	loopne 0x41a4b3
  41a523:	(bad)  
  41a524:	lods   al,BYTE PTR ds:[esi]
  41a525:	test   al,0x62
  41a527:	je     0xfe695a7b
  41a52d:	and    eax,0x8298f700
  41a532:	bound  esi,QWORD PTR [ecx]
  41a534:	ds cwde 
  41a536:	lds    edx,FWORD PTR [edx+0x2af159c7]
  41a53c:	retf   0x7d1b
  41a53f:	loope  0x41a537
  41a541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a542:	out    0xef,eax
  41a544:	mov    edx,0x844ebdd1
  41a549:	mov    dh,0x94
  41a54b:	shl    DWORD PTR [ebx-0x74],cl
  41a54e:	xchg   eax,esp
  41a550:	popa   
  41a551:	shl    ah,1
  41a553:	dec    ebp
  41a554:	push   esi
  41a555:	ror    DWORD PTR [edx-0xc3c8d4c],cl
  41a55b:	adc    eax,0x561ff867
  41a560:	xadd   BYTE PTR [ebx-0x3023e1de],ch
  41a567:	push   eax
  41a568:	adc    al,0xae
  41a56a:	pop    edx
  41a56b:	arpl   WORD PTR [edi-0x67a7c3a7],si
  41a571:	fwait
  41a572:	ds cs sahf 
  41a575:	std    
  41a576:	xor    eax,0x3133e5aa
  41a57b:	mov    eax,0x85b00433
  41a580:	clc    
  41a581:	xchg   esp,eax
  41a582:	dec    ebx
  41a583:	rol    DWORD PTR [ebp+0x6a],cl
  41a586:	ss inc ebx
  41a588:	enter  0x1573,0x78
  41a58c:	dec    ecx
  41a58d:	sub    BYTE PTR [edx-0x21a86bf8],al
  41a593:	push   0xb13ab9d1
  41a598:	sub    eax,0x8856e7d3
  41a59d:	ss jne 0x41a571
  41a5a0:	dec    eax
  41a5a1:	fadd   DWORD PTR [edx+eiz*2-0x5d]
  41a5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a6:	push   es
  41a5a7:	mov    bl,0x3
  41a5a9:	(bad)  
  41a5aa:	nop
  41a5ab:	sahf   
  41a5ac:	popf   
  41a5ad:	ins    DWORD PTR es:[edi],dx
  41a5ae:	and    al,0x50
  41a5b0:	jae    0x41a545
  41a5b2:	jl     0x41a5c8
  41a5b4:	adc    ebp,DWORD PTR [ebx+0x610ff1b0]
  41a5ba:	push   esp
  41a5bb:	enter  0x76e9,0x76
  41a5bf:	inc    BYTE PTR [esp+eax*4]
  41a5c2:	mov    edx,?
  41a5c4:	(bad)  
  41a5c5:	inc    BYTE PTR [ecx-0x6271039b]
  41a5cb:	sub    bh,bl
  41a5cd:	les    esp,FWORD PTR [ecx+0x6adb5694]
  41a5d3:	sbb    ch,BYTE PTR [esi+0x1f]
  41a5d6:	stos   BYTE PTR es:[edi],al
  41a5d7:	daa    
  41a5d8:	repnz dec esi
  41a5da:	add    eax,ebx
  41a5dc:	add    eax,DWORD PTR [esi-0x24fef2e3]
  41a5e2:	sub    eax,0xd6321682
  41a5e7:	jle    0x41a5ec
  41a5e9:	aad    0x5b
  41a5eb:	fs cwde 
  41a5ed:	loope  0x41a5ef
  41a5ef:	enter  0xa15c,0x5
  41a5f3:	and    eax,eax
  41a5f5:	sti    
  41a5f6:	sub    BYTE PTR ds:0x16c7723d,ah
  41a5fc:	or     DWORD PTR [ebp-0x556770a],esp
  41a602:	mul    BYTE PTR [eax+0x50]
  41a605:	cmp    al,0x40
  41a607:	or     edi,eax
  41a609:	jbe    0x41a669
  41a60b:	fst    QWORD PTR [edx-0x15]
  41a60e:	fsubrp st(5),st
  41a610:	xchg   BYTE PTR [edx-0x40bba18d],dl
  41a616:	cdq    
  41a617:	cmp    ebx,ebx
  41a619:	inc    ecx
  41a61a:	imul   esp,edx,0x3f
  41a61d:	ret    0xaf60
  41a620:	mov    dl,0xaf
  41a622:	loop   0x41a5d7
  41a624:	into   
  41a625:	xchg   ch,dh
  41a627:	and    al,0x4b
  41a629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a62a:	mov    cx,0x64c7
  41a62e:	sub    esi,DWORD PTR [edx+0x3b]
  41a631:	mov    eax,0xd5e7ecc0
  41a636:	leave  
  41a637:	push   edi
  41a638:	cmp    al,0x4e
  41a63a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a63c:	cmp    edi,DWORD PTR [ecx+0x5a]
  41a63f:	stos   BYTE PTR es:[edi],al
  41a640:	jecxz  0x41a5c4
  41a642:	neg    cl
  41a644:	and    BYTE PTR [ebp+0x44],0x3f
  41a648:	jle    0x41a62d
  41a64a:	adc    dl,BYTE PTR [ecx+0x84baf7e]
  41a650:	pusha  
  41a651:	fnstenv fs:[edx-0x66]
  41a655:	shr    BYTE PTR [eax-0x547ce728],cl
  41a65b:	push   esi
  41a65c:	mov    ebx,0xae42a57a
  41a661:	mov    ebx,0xe240230f
  41a666:	jp     0x41a6a4
  41a668:	dec    esp
  41a669:	add    eax,0x1f80fb79
  41a66e:	emms   
  41a670:	in     eax,dx
  41a671:	or     BYTE PTR [ebx+ebp*2],0x59
  41a675:	xchg   edi,eax
  41a676:	gs add eax,esp
  41a679:	sub    BYTE PTR ds:0xf9888a71,ch
  41a67f:	es jne 0x41a62e
  41a682:	sub    dh,BYTE PTR [ebx]
  41a684:	sub    eax,0x293a2fe5
  41a689:	inc    esp
  41a68a:	test   eax,0xf979e8db
  41a68f:	ss daa 
  41a691:	adc    ecx,DWORD PTR [ecx+edx*4]
  41a694:	push   edx
  41a695:	jnp    0x41a6a2
  41a697:	jo     0x41a714
  41a699:	(bad)  
  41a69a:	adc    DWORD PTR [ebx-0x271e2a15],esp
  41a6a0:	jnp    0x41a71e
  41a6a2:	mov    ch,0x1a
  41a6a4:	sub    DWORD PTR ds:[edi+0x63b0dfe4],ebp
  41a6ab:	ret    0x12e5
  41a6ae:	push   eax
  41a6af:	lods   eax,DWORD PTR ds:[esi]
  41a6b0:	sbb    edx,DWORD PTR [ebx]
  41a6b2:	ret    0xcd46
  41a6b5:	aas    
  41a6b6:	mov    dh,0xc9
  41a6b8:	xchg   ecx,eax
  41a6b9:	inc    edi
  41a6ba:	(bad)
  41a6bd:	and    eax,0x171dce01
  41a6c2:	pop    edx
  41a6c3:	ja     0x41a680
  41a6c5:	pusha  
  41a6c6:	stc    
  41a6c7:	adc    DWORD PTR [esi+eax*1-0x9baf63c],edx
  41a6ce:	imul   eax,DWORD PTR [edx-0x4],0x34
  41a6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d3:	jmp    0x41a6c0
  41a6d5:	adc    eax,0x259d9708
  41a6da:	dec    dl
  41a6dc:	mov    esp,DWORD PTR [ecx-0x23]
  41a6df:	mov    ds:0xab236306,al
  41a6e4:	push   0x74
  41a6e6:	test   BYTE PTR [ecx+0x65],al
  41a6e9:	mov    ah,bl
  41a6eb:	scas   eax,DWORD PTR es:[edi]
  41a6ec:	mov    eax,0xc6e5755e
  41a6f1:	int3   
  41a6f2:	les    eax,FWORD PTR [eax-0x28]
  41a6f5:	(bad)  
  41a6f6:	sbb    bh,BYTE PTR [eax]
  41a6f8:	(bad)  
  41a6f9:	jae    0x41a765
  41a6fb:	xor    bl,BYTE PTR [edx-0x58]
  41a6fe:	daa    
  41a6ff:	mov    BYTE PTR [edi-0x1f],dh
  41a702:	pusha  
  41a703:	nop
  41a704:	retf   0x5904
  41a707:	add    al,0x83
  41a709:	test   eax,0x49359926
  41a70e:	mov    bh,0x63
  41a710:	cli    
  41a711:	dec    ebp
  41a712:	pop    ebx
  41a713:	push   esi
  41a714:	stos   BYTE PTR es:[edi],al
  41a715:	push   edx
  41a716:	aam    0xc1
  41a718:	mov    ds:0xeec8ed63,al
  41a71d:	dec    edi
  41a71e:	cmc    
  41a71f:	sbb    dh,cl
  41a721:	mov    ch,BYTE PTR [ebx]
  41a723:	sub    eax,DWORD PTR [eax+ecx*1+0xbec03f0]
  41a72a:	ret    0xd4e0
  41a72d:	push   ecx
  41a72e:	ja     0x41a72c
  41a730:	jg     0x41a710
  41a732:	mov    dl,bh
  41a734:	jmp    0x4a65:0x5a95b7d8
  41a73b:	scas   al,BYTE PTR es:[edi]
  41a73c:	sbb    BYTE PTR [ebx],dl
  41a73e:	(bad)  
  41a740:	xor    bl,dl
  41a742:	int3   
  41a743:	int3   
  41a744:	ja     0x41a79e
  41a746:	outs   dx,BYTE PTR ds:[esi]
  41a747:	pop    DWORD PTR [esi-0x1c094cba]
  41a74d:	dec    ebp
  41a74e:	(bad)  
  41a74f:	fadd   st(0),st
  41a751:	repnz add eax,edx
  41a754:	xor    ch,BYTE PTR [esi]
  41a756:	sbb    esp,DWORD PTR [ebx]
  41a758:	ror    BYTE PTR [ecx-0x18fe66ac],0x14
  41a75f:	jnp    0x41a6ec
  41a761:	fwait
  41a762:	inc    ebp
  41a763:	fs fs ret 
  41a766:	dec    edx
  41a767:	test   al,0x73
  41a769:	fdiv   QWORD PTR [eax+0x9]
  41a76c:	daa    
  41a76d:	xchg   esi,eax
  41a76e:	cmc    
  41a76f:	out    dx,al
  41a770:	ficomp WORD PTR [edi]
  41a772:	pusha  
  41a773:	fadd   st(6),st
  41a775:	jae    0x41a77c
  41a777:	not    DWORD PTR [edi-0x6da46402]
  41a77d:	mov    edi,0x35b5c8a4
  41a782:	dec    edx
  41a783:	retf   0xae30
  41a786:	jl     0x41a74a
  41a788:	int3   
  41a789:	arpl   WORD PTR [eax-0x516aeb14],cx
  41a78f:	ret    0xa96
  41a792:	cli    
  41a793:	scas   eax,DWORD PTR es:[edi]
  41a794:	push   ecx
  41a795:	and    al,0x75
  41a797:	cli    
  41a798:	inc    ecx
  41a799:	in     al,0x5a
  41a79b:	test   eax,0x3f12d995
  41a7a0:	or     BYTE PTR [ebp+edx*4+0x4c8efcd2],dh
  41a7a7:	das    
  41a7a8:	ret    
  41a7a9:	push   ecx
  41a7aa:	push   ebp
  41a7ab:	push   eax
  41a7ac:	aaa    
  41a7ad:	dec    esi
  41a7ae:	test   eax,0x6394c18d
  41a7b3:	mov    BYTE PTR [ebx],dl
  41a7b5:	inc    esp
  41a7b6:	je     0x41a788
  41a7b8:	dec    ebx
  41a7b9:	mov    ds:0x51977e07,eax
  41a7be:	(bad)  
  41a7bf:	sub    DWORD PTR [ebp+0x670fe342],esi
  41a7c5:	jb     0x41a83a
  41a7c7:	or     al,0xc9
  41a7c9:	xor    dl,bl
  41a7cb:	lds    ebp,FWORD PTR [ecx+0xd]
  41a7ce:	in     al,0xea
  41a7d0:	repz xor ebp,edx
  41a7d3:	xchg   ecx,eax
  41a7d4:	adc    BYTE PTR [esp+eax*2+0x29db53aa],cl
  41a7db:	mov    al,0x8f
  41a7dd:	xchg   ebp,ebx
  41a7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e0:	inc    ecx
  41a7e1:	inc    edi
  41a7e2:	lods   eax,DWORD PTR ds:[esi]
  41a7e3:	sub    ah,BYTE PTR [edx+0x58]
  41a7e6:	adc    BYTE PTR [eax],ch
  41a7e8:	cdq    
  41a7e9:	out    dx,al
  41a7ea:	int    0x18
  41a7ec:	push   edi
  41a7ed:	mov    cl,0x77
  41a7ef:	mov    bh,0x46
  41a7f1:	sahf   
  41a7f2:	cmp    DWORD PTR [eax-0x56b5e49c],0xffffffd1
  41a7f9:	(bad)  
  41a7fb:	cmc    
  41a7fc:	mov    cl,0x1d
  41a7fe:	sbb    eax,0x7506413e
  41a803:	xchg   BYTE PTR ds:0x688b72d9,ah
  41a809:	jecxz  0x41a7e0
  41a80b:	jno    0x41a868
  41a80d:	dec    ebp
  41a80e:	stos   BYTE PTR es:[edi],al
  41a80f:	pop    esp
  41a810:	lds    ebp,FWORD PTR [eax+0x7a]
  41a813:	inc    edi
  41a814:	sbb    al,0xef
  41a816:	and    cl,BYTE PTR cs:[edi]
  41a819:	aaa    
  41a81a:	sbb    DWORD PTR [ebp+0x1311e614],ebx
  41a820:	gs int3 
  41a822:	sub    edi,edx
  41a824:	popa   
  41a825:	xchg   ecx,eax
  41a826:	jno    0x41a804
  41a828:	jne    0x41a8a2
  41a82a:	cmp    BYTE PTR [esi-0x4d],al
  41a82d:	inc    DWORD PTR [edi]
  41a82f:	adc    DWORD PTR [ebp+ebp*8+0x2c],0x7a96c5dc
  41a837:	inc    ebx
  41a838:	addr16 sbb eax,0xcf0356e9
  41a83e:	mov    BYTE PTR [ecx-0xd6c5e1f],bl
  41a844:	cld    
  41a845:	ret    0x7fa4
  41a848:	mov    edx,0x6c4c4280
  41a84d:	xor    bl,0x37
  41a850:	stos   DWORD PTR es:[edi],eax
  41a851:	pop    ebp
  41a852:	out    0xae,al
  41a854:	push   0xdfa3b88f
  41a859:	(bad)  
  41a85a:	xor    ah,BYTE PTR [ebx+0x57]
  41a85d:	adc    DWORD PTR [esi],eax
  41a85f:	popf   
  41a860:	or     ebp,DWORD PTR [edi]
  41a862:	and    DWORD PTR [edx-0x11],edi
  41a865:	push   ebp
  41a866:	xor    eax,0xf0030a9e
  41a86b:	out    0xc7,al
  41a86d:	push   edi
  41a86e:	mov    esp,0x662bee0b
  41a873:	int    0xe2
  41a875:	jg     0x41a80d
  41a877:	mov    ebp,0xdf13020c
  41a87c:	out    dx,al
  41a87d:	ficom  WORD PTR [edi]
  41a87f:	sub    DWORD PTR [esp+ebp*1-0x29],ebp
  41a883:	mul    BYTE PTR [esp+ebp*2]
  41a886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a887:	adc    BYTE PTR [esi-0x1296d365],dl
  41a88d:	mov    ebp,0xbb46307c
  41a892:	outs   dx,BYTE PTR ds:[esi]
  41a893:	jg     0x41a858
  41a895:	cmp    bl,BYTE PTR [edi+0x3bc01724]
  41a89b:	or     DWORD PTR [esi-0x7d],esp
  41a89e:	cmp    eax,ecx
  41a8a0:	push   ecx
  41a8a1:	or     DWORD PTR [edi-0x78],edx
  41a8a4:	and    BYTE PTR [eax+0x37],dh
  41a8a7:	or     DWORD PTR [edx-0x1dd46efb],ebx
  41a8ad:	sbb    esp,DWORD PTR ds:0x89e88b8d
  41a8b3:	mov    ds:0x2390a560,al
  41a8b8:	adc    BYTE PTR [edi+0x2e02fe10],ah
  41a8be:	adc    DWORD PTR ds:0x976f7772,ebx
  41a8c4:	leave  
  41a8c5:	dec    edi
  41a8c6:	and    eax,0xb0a0567
  41a8cb:	pop    ebp
  41a8cc:	mov    ds:0xaeeffe9f,eax
  41a8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d2:	mov    al,0x8a
  41a8d5:	retf   0x9020
  41a8d8:	out    0x1c,eax
  41a8da:	leave  
  41a8db:	ds push es
  41a8dd:	mov    WORD PTR [esi-0x51],ss
  41a8e0:	rcr    DWORD PTR [eax+ebx*8],1
  41a8e3:	(bad)  
  41a8e5:	and    eax,0xd3793fbb
  41a8ea:	mov    ecx,0xd0124bce
  41a8ef:	enter  0xa505,0x5a
  41a8f3:	mov    eax,0xe1c0982
  41a8f8:	fsubr  DWORD PTR [edx]
  41a8fa:	jl     0x41a966
  41a8fc:	push   eax
  41a8fd:	pop    esi
  41a8fe:	int    0xe6
  41a900:	lods   al,BYTE PTR ds:[esi]
  41a901:	mov    dh,0xdc
  41a903:	outs   dx,DWORD PTR ds:[esi]
  41a904:	(bad)  
  41a905:	sar    DWORD PTR [ecx+0x1b],cl
  41a908:	es daa 
  41a90a:	sahf   
  41a90b:	adc    BYTE PTR ds:0x8bee4633,ch
  41a911:	in     al,dx
  41a912:	repz rcr DWORD PTR [ecx],cl
  41a915:	gs inc ebp
  41a917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a918:	enter  0x98f5,0x6b
  41a91c:	xchg   edx,eax
  41a91d:	out    dx,al
  41a91e:	or     al,0xcf
  41a920:	xor    BYTE PTR [edi+0x22072576],dl
  41a926:	mov    dl,0xe8
  41a928:	push   cs
  41a929:	call   0xb300:0x4dcc8784
  41a930:	adc    bl,ah
  41a932:	or     al,0x46
  41a934:	hlt    
  41a935:	pop    es
  41a936:	cdq    
  41a937:	sbb    bl,BYTE PTR [ecx]
  41a939:	test   dh,dh
  41a93b:	cdq    
  41a93c:	imul   ecx,DWORD PTR [eax+0x44],0xe22321cb
  41a943:	xor    eax,0x648b9c1e
  41a948:	or     cl,bl
  41a94a:	pop    eax
  41a94b:	add    ebx,DWORD PTR [ecx-0x1e]
  41a94e:	xchg   edi,eax
  41a94f:	in     eax,0xf7
  41a951:	push   eax
  41a952:	mov    WORD PTR [ecx+0x67],cs
  41a955:	outs   dx,BYTE PTR ds:[esi]
  41a956:	sub    ch,BYTE PTR [edx+0x2e0af6b4]
  41a95c:	add    BYTE PTR [ecx],bl
  41a95e:	cmp    al,0xaf
  41a960:	lods   eax,DWORD PTR ds:[esi]
  41a961:	aam    0x22
  41a963:	ror    BYTE PTR [esi+0x6a],1
  41a966:	pop    esp
  41a967:	pop    es
  41a968:	fldcw  WORD PTR [esi+0x9]
  41a96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a96c:	(bad)  
  41a96e:	mov    ebx,0xa88e5e81
  41a973:	push   edi
  41a974:	push   0x3e
  41a976:	std    
  41a977:	dec    BYTE PTR [ebp+0x4f8f0de6]
  41a97d:	dec    dl
  41a97f:	fsubr  QWORD PTR [ecx-0x22595b35]
  41a985:	adc    eax,0x59995e3c
  41a98a:	xor    esp,ebx
  41a98c:	test   DWORD PTR ds:0x7d6e23d5,eax
  41a992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a993:	push   cs
  41a994:	fnstenv [ecx+edx*1]
  41a997:	jb     0x41a9bd
  41a999:	je     0x41a9b3
  41a99b:	stc    
  41a99c:	out    0x11,al
  41a99e:	xchg   ebp,eax
  41a99f:	pop    ebx
  41a9a0:	xchg   ebx,eax
  41a9a1:	cwde   
  41a9a2:	leave  
  41a9a3:	(bad)  
  41a9a4:	in     eax,0xcd
  41a9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a7:	push   edi
  41a9a8:	mov    BYTE PTR [ebx],ah
  41a9aa:	jl     0x41a964
  41a9ac:	aas    
  41a9ad:	jle    0x41a9a3
  41a9af:	ss and ah,cl
  41a9b2:	fisttp DWORD PTR [ebx+0x2e665a2]
  41a9b8:	xchg   ebp,eax
  41a9b9:	out    dx,eax
  41a9ba:	in     al,0x73
  41a9bc:	scas   al,BYTE PTR es:[edi]
  41a9bd:	test   al,0xba
  41a9bf:	and    DWORD PTR [ecx],esi
  41a9c1:	mov    bh,BYTE PTR [edi+0x299cd608]
  41a9c7:	mov    cl,BYTE PTR [ebx-0x74e3002e]
  41a9cd:	outs   dx,BYTE PTR ds:[esi]
  41a9ce:	sub    BYTE PTR ds:0x3a266038,bh
  41a9d4:	xor    bh,dl
  41a9d6:	lds    edi,FWORD PTR [ecx-0x1e]
  41a9d9:	mov    ds:0xfe0e390f,al
  41a9de:	jmp    0x533d:0x940f03c2
  41a9e5:	fidiv  DWORD PTR [ecx+ecx*2+0x1f]
  41a9e9:	sbb    bh,BYTE PTR [ecx]
  41a9eb:	fcomp  QWORD PTR [edi-0xc]
  41a9ee:	icebp  
  41a9ef:	(bad)  
  41a9f0:	aad    0x38
  41a9f2:	ja     0x41aa68
  41a9f4:	dec    esp
  41a9f5:	or     ebx,ecx
  41a9f7:	out    0xf0,eax
  41a9f9:	mov    dl,0x5b
  41a9fb:	inc    ecx
  41a9fc:	push   es
  41a9fd:	mov    al,ds:0x52926474
  41aa02:	retf   
  41aa03:	bound  ebx,QWORD PTR [ecx+0x2ac07617]
  41aa09:	test   DWORD PTR [ecx+0x2762d2ea],ebp
  41aa0f:	ins    DWORD PTR es:[edi],dx
  41aa10:	pushf  
  41aa11:	imul   ecx,DWORD PTR [eax+0x46],0xffffff9b
  41aa15:	mov    dl,0x1
  41aa17:	mov    eax,0x5fb8816d
  41aa1c:	adc    DWORD PTR [edi+0x7a],edx
  41aa1f:	cmp    eax,0x6ab3c994
  41aa24:	xor    BYTE PTR [eax],al
  41aa26:	pop    edi
  41aa27:	sti    
  41aa28:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41aa2a:	pop    edx
  41aa2b:	fwait
  41aa2c:	imul   DWORD PTR [edi+0x2f]
  41aa2f:	std    
  41aa30:	sbb    DWORD PTR [ebx-0x4b],ebx
  41aa33:	cmp    al,0x18
  41aa35:	mov    WORD PTR [edx+0x59],?
  41aa38:	jge    0x41aa9c
  41aa3a:	popf   
  41aa3b:	inc    esi
  41aa3c:	loop   0x41aa1e
  41aa3e:	and    al,0x6b
  41aa40:	icebp  
  41aa41:	nop
  41aa42:	mov    ebx,0xbec131b6
  41aa47:	lds    eax,FWORD PTR [esi]
  41aa49:	test   ebx,ebp
  41aa4b:	or     eax,0xfc43aadb
  41aa50:	lods   al,BYTE PTR ds:[esi]
  41aa51:	mov    bl,0x91
  41aa53:	lock and eax,0x3ccdef7d
  41aa59:	jns    0x41aa26
  41aa5b:	inc    eax
  41aa5c:	mov    eax,0xd3a5f738
  41aa61:	sbb    al,0x25
  41aa63:	cli    
  41aa64:	nop
  41aa65:	outs   dx,BYTE PTR ds:[esi]
  41aa66:	(bad)  
  41aa67:	fsubr  QWORD PTR [ebx]
  41aa69:	fbld   TBYTE PTR [ebx]
  41aa6b:	ss popf 
  41aa6d:	or     eax,0xb6a1d74e
  41aa72:	inc    edx
  41aa73:	mov    cs,edx
  41aa75:	(bad)  
  41aa76:	push   ecx
  41aa77:	and    edi,esi
  41aa79:	(bad)  
  41aa7a:	shl    ah,1
  41aa7c:	mov    BYTE PTR [ecx-0x2e],ah
  41aa7f:	jnp    0x41aab2
  41aa81:	popf   
  41aa82:	retf   0x2c0f
  41aa85:	js     0x41aa82
  41aa87:	aas    
  41aa88:	dec    ebp
  41aa89:	xor    eax,DWORD PTR [ebx+edi*1+0x6d]
  41aa8d:	mov    eax,0xe0fabcfc
  41aa92:	rcl    DWORD PTR [esi],cl
  41aa94:	mov    WORD PTR [edx],cs
  41aa96:	mov    DWORD PTR [ebx-0x7d],esi
  41aa99:	dec    eax
  41aa9a:	std    
  41aa9b:	push   esp
  41aa9c:	scas   eax,DWORD PTR es:[edi]
  41aa9d:	and    ebx,eax
  41aa9f:	pop    ebp
  41aaa0:	imul   ecx,DWORD PTR [ebp+edi*8+0x3a417177],0x32
  41aaa8:	and    eax,0xb9a1aeec
  41aaad:	push   edx
  41aaae:	aaa    
  41aaaf:	(bad)  [ecx+0x17]
  41aab2:	sbb    al,0xb
  41aab4:	shr    DWORD PTR [ebp-0x7ccdc53c],0x31
  41aabb:	xchg   edi,ecx
  41aabd:	inc    ecx
  41aabe:	mov    al,0xa3
  41aac0:	jg     0x41ab1a
  41aac2:	std    
  41aac3:	or     edx,DWORD PTR [ecx-0xca867c2]
  41aac9:	cmp    al,0x4a
  41aacb:	mov    es,WORD PTR [ecx-0x221594cc]
  41aad1:	(bad)  
  41aad2:	xchg   ebx,eax
  41aad3:	sbb    dl,ah
  41aad5:	aas    
  41aad6:	lods   al,BYTE PTR ds:[esi]
  41aad7:	stos   BYTE PTR es:[edi],al
  41aad8:	mov    eax,ds:0x8fd55160
  41aadd:	sub    dl,bl
  41aadf:	pop    ss
  41aae0:	popf   
  41aae1:	fcmovb st,st(3)
  41aae3:	std    
  41aae4:	aas    
  41aae5:	mov    ds:0xbdc70428,eax
  41aaea:	not    DWORD PTR [ebx-0x7b6960ae]
  41aaf0:	xchg   BYTE PTR [edx-0x19634509],cl
  41aaf6:	cs mov ds,ecx
  41aaf9:	push   ecx
  41aafa:	in     eax,0xa1
  41aafc:	inc    edx
  41aafd:	pop    edi
  41aafe:	jne    0x41aade
  41ab00:	and    esp,DWORD PTR [eax+eax*4]
  41ab03:	std    
  41ab04:	sbb    esp,DWORD PTR [eax+esi*4-0x50]
  41ab08:	scas   al,BYTE PTR es:[edi]
  41ab09:	add    BYTE PTR [ebx+0x591a55be],ch
  41ab0f:	dec    edi
  41ab10:	arpl   si,si
  41ab12:	sti    
  41ab13:	out    dx,al
  41ab14:	jge    0x41aaad
  41ab16:	xchg   edx,eax
  41ab17:	(bad)
  41ab1b:	call   0x8871fb83
  41ab20:	mov    ah,0xed
  41ab22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab23:	fbld   TBYTE PTR [esi+ebx*1-0x14e0fc80]
  41ab2a:	call   DWORD PTR [ebp-0x69fc180d]
  41ab30:	inc    ecx
  41ab31:	jg     0x41aacc
  41ab33:	rol    esi,1
  41ab35:	leave  
  41ab36:	(bad)
  41ab3a:	hlt    
  41ab3b:	arpl   WORD PTR [ebx-0x1aeb498b],ax
  41ab41:	je     0x41ab84
  41ab43:	sbb    al,0x73
  41ab45:	mov    esi,0x5334bc8d
  41ab4a:	call   0xcd0a:0x8a638eba
  41ab51:	mov    dh,0x1c
  41ab53:	aas    
  41ab54:	aam    0x2a
  41ab56:	hlt    
  41ab57:	sub    BYTE PTR [edx-0x75],bh
  41ab5a:	jo     0x41aba7
  41ab5c:	xchg   edi,eax
  41ab5d:	sti    
  41ab5e:	cs (bad) 
  41ab60:	leave  
  41ab61:	dec    esi
  41ab62:	jo     0x41ab56
  41ab64:	dec    ebx
  41ab65:	out    dx,al
  41ab66:	and    bl,0xe5
  41ab69:	adc    BYTE PTR [ebx-0x20ff103c],0xb6
  41ab70:	add    bl,ah
  41ab72:	pop    eax
  41ab73:	mov    fs,WORD PTR [eax-0x7768d469]
  41ab79:	aas    
  41ab7a:	enter  0x5d3a,0xcd
  41ab7e:	rol    BYTE PTR [edi+0x74f07599],0x54
  41ab85:	xor    DWORD PTR [ecx-0x6a],ecx
  41ab88:	(bad)  
  41ab89:	jo     0x41ab21
  41ab8b:	sub    al,0x22
  41ab8d:	into   
  41ab8e:	mov    ebx,0x4dfedf29
  41ab93:	adc    BYTE PTR [ebp+0xf065a49],0x5
  41ab9a:	dec    edx
  41ab9b:	call   0x6b2d:0x41b474c9
  41aba2:	pop    ss
  41aba3:	jo     0x41ab63
  41aba5:	data16 loopne 0x41ab8c
  41aba8:	ds jns 0x41abf5
  41abab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abac:	mov    eax,0x72c8093e
  41abb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb2:	add    eax,0xc49bceb5
  41abb7:	mov    DWORD PTR [ebx],ecx
  41abb9:	(bad)  [edi]
  41abbb:	jmp    0x67c018e8
  41abc0:	loope  0x41ab84
  41abc2:	xlat   BYTE PTR ds:[ebx]
  41abc3:	mov    esi,0xd12ca925
  41abc8:	pop    eax
  41abc9:	daa    
  41abca:	and    ecx,DWORD PTR [ebp-0x65]
  41abcd:	xchg   ecx,eax
  41abce:	pop    ebp
  41abcf:	test   eax,0xbbbeb59c
  41abd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd5:	push   0xee33d797
  41abda:	cs jne 0x41aba5
  41abdd:	ss and eax,0x6efcea66
  41abe3:	dec    ebp
  41abe4:	push   esp
  41abe5:	or     eax,DWORD PTR [eax+eax*2-0x3dc3e74a]
  41abec:	add    eax,0x28e11ced
  41abf1:	cld    
  41abf2:	adc    eax,0xc5b2928f
  41abf7:	jge    0x41ac59
  41abf9:	data16 and al,0x62
  41abfc:	cmp    eax,0x9fd1693e
  41ac01:	repz inc esi
  41ac03:	jle    0x41ac38
  41ac05:	dec    ebx
  41ac06:	inc    DWORD PTR [esp+edx*1-0x5c]
  41ac0a:	cmp    DWORD PTR [edi],0xffffff86
  41ac0d:	pcmpeqb mm6,mm3
  41ac10:	mov    edx,0xd772b1f
  41ac15:	cmp    eax,0x8dc28758
  41ac1a:	mov    cl,0x4e
  41ac1c:	mov    esp,0xf07883e6
  41ac21:	push   0xffffff94
  41ac23:	mov    edx,0x3446b606
  41ac28:	fisubr DWORD PTR [ecx+eiz*2+0x3]
  41ac2c:	sbb    al,0xec
  41ac2e:	jbe    0x41abcc
  41ac30:	dec    ebp
  41ac31:	xor    DWORD PTR [esp+ecx*4],ecx
  41ac34:	popf   
  41ac35:	push   es
  41ac36:	mov    ebx,0x7a65bd6c
  41ac3b:	fwait
  41ac3c:	xchg   esp,eax
  41ac3d:	fidiv  WORD PTR ds:0x54f41562
  41ac43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac44:	xchg   edi,eax
  41ac45:	jmp    0xcf7f:0xc687ef30
  41ac4c:	mov    eax,ds:0xc54eeaea
  41ac51:	cmp    DWORD PTR [ebp-0x685612c8],0xffffffbe
  41ac58:	(bad)  
  41ac59:	mov    al,0x3f
  41ac5b:	inc    ebp
  41ac5c:	adc    ecx,ebx
  41ac5e:	pusha  
  41ac5f:	ins    DWORD PTR es:[edi],dx
  41ac60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac61:	cmc    
  41ac62:	mov    esi,0x1ae3321e
  41ac67:	cmp    cl,BYTE PTR [esi+ebp*4]
  41ac6a:	push   esp
  41ac6b:	xchg   bh,cl
  41ac6d:	std    
  41ac6e:	retf   
  41ac6f:	call   FWORD PTR [eax+edx*2+0x41]
  41ac73:	add    eax,DWORD PTR [eax-0x7bee31da]
  41ac79:	enter  0x3da5,0x98
  41ac7d:	or     ch,ah
  41ac7f:	mov    cs,WORD PTR [ebx+0x1f5a57c1]
  41ac85:	mov    ecx,ebx
  41ac87:	cmp    eax,0x4a4e8e31
  41ac8c:	cmp    bl,BYTE PTR [esi+0x506edb95]
  41ac92:	ret    
  41ac93:	pop    edi
  41ac94:	hlt    
  41ac95:	pop    edi
  41ac96:	mov    es,edx
  41ac98:	xlat   BYTE PTR ds:[ebx]
  41ac99:	pop    ss
  41ac9a:	ds imul esi,ebx,0x41
  41ac9e:	mov    ebp,0xd2ac1378
  41aca3:	(bad)
  41aca7:	xchg   ebp,eax
  41aca8:	sub    BYTE PTR [edi+0x3789edfc],cl
  41acae:	or     eax,0x11319af1
  41acb3:	out    dx,eax
  41acb4:	(bad)  [ebp+0x38]
  41acb7:	cmp    edx,DWORD PTR [eax-0x7c5e6f43]
  41acbd:	jmp    0x41acbe
  41acbf:	inc    esi
  41acc0:	sar    BYTE PTR [edi-0x41cc0d4],0xd9
  41acc7:	test   BYTE PTR [ecx],ch
  41acc9:	jmp    0x2967a524
  41acce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41accf:	dec    eax
  41acd0:	outs   dx,BYTE PTR ds:[esi]
  41acd1:	pop    edi
  41acd2:	and    BYTE PTR [edx],ah
  41acd4:	push   edi
  41acd5:	lds    esp,FWORD PTR [ebp+edx*1-0x53]
  41acd9:	popf   
  41acda:	xchg   edx,eax
  41acdb:	sub    dl,0x23
  41acde:	or     al,0x26
  41ace0:	(bad)  
  41ace1:	leave  
  41ace2:	aaa    
  41ace3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace4:	xor    eax,0xb5f4fbfd
  41ace9:	outs   dx,DWORD PTR ds:[esi]
  41acea:	imul   ebx,DWORD PTR [esi+ebx*8],0xe8a06066
  41acf1:	ins    DWORD PTR es:[edi],dx
  41acf2:	jmp    0x41ad21
  41acf4:	and    al,0x93
  41acf6:	faddp  st(3),st
  41acf8:	mov    dl,0x7a
  41acfa:	int    0xcf
  41acfc:	adc    cl,ah
  41acfe:	(bad)
  41ad01:	jae    0x41ac86
  41ad03:	sbb    ah,ch
  41ad05:	imul   eax,edx,0x5d
  41ad08:	pop    edx
  41ad09:	or     al,BYTE PTR [edx*2-0x757f6574]
  41ad10:	push   edx
  41ad11:	and    al,0x2b
  41ad13:	test   eax,0xbb194528
  41ad18:	stos   BYTE PTR es:[edi],al
  41ad19:	jo     0x41ad18
  41ad1b:	pop    es
  41ad1c:	xor    al,BYTE PTR [edx+0x2f7dfa3f]
  41ad22:	xchg   edx,eax
  41ad23:	xchg   ecx,eax
  41ad24:	pop    ebx
  41ad25:	(bad)  
  41ad27:	mov    BYTE PTR [ebx+ebx*1],ch
  41ad2a:	mov    eax,ds:0x1b9dffda
  41ad2f:	lods   eax,DWORD PTR ds:[esi]
  41ad30:	adc    DWORD PTR ds:0x1bfbabc2,0x2cc2ef3a
  41ad3a:	lock mov al,0x45
  41ad3d:	mov    edi,0xc495c20c
  41ad42:	or     al,0x0
  41ad44:	xor    BYTE PTR [eax+0xf],cl
  41ad47:	mov    DWORD PTR [ebp+0x5d],ecx
  41ad4a:	add    DWORD PTR [esi+0x8],ebp
  41ad4d:	ins    DWORD PTR es:[edi],dx
  41ad4e:	aas    
  41ad4f:	adc    al,0xb8
  41ad51:	push   eax
  41ad52:	ins    DWORD PTR es:[edi],dx
  41ad53:	into   
  41ad54:	js     0x41ad05
  41ad56:	cmp    ebx,ebp
  41ad58:	push   edx
  41ad59:	add    bh,dh
  41ad5b:	std    
  41ad5c:	adc    DWORD PTR ds:0x2cd30b2c,0xbee0044c
  41ad66:	add    bh,ah
  41ad68:	jns    0x41ad14
  41ad6a:	mov    bl,0x30
  41ad6c:	dec    esp
  41ad6d:	imul   ebx,edi,0xafa66a9f
  41ad73:	loop   0x41ad40
  41ad75:	pop    ds
  41ad76:	and    ebx,0x71
  41ad79:	(bad)  
  41ad7a:	cld    
  41ad7b:	and    al,0x4b
  41ad7d:	inc    edx
  41ad7e:	in     al,dx
  41ad7f:	jb     0x41ad8f
  41ad81:	(bad)  
  41ad82:	push   ebp
  41ad83:	scas   al,BYTE PTR es:[edi]
  41ad84:	out    dx,eax
  41ad85:	and    dh,al
  41ad87:	xor    DWORD PTR [eax-0x54],ebx
  41ad8a:	dec    esi
  41ad8b:	in     al,dx
  41ad8c:	idiv   DWORD PTR [ebp+0x8b177fe]
  41ad92:	mov    ?,WORD PTR [ebp+0x69]
  41ad95:	pop    ss
  41ad96:	cmp    al,0x17
  41ad98:	into   
  41ad99:	das    
  41ad9a:	mov    esi,0x6f0b5524
  41ad9f:	lds    edi,FWORD PTR [eax]
  41ada1:	dec    ebx
  41ada2:	arpl   dx,ax
  41ada4:	cmp    al,0xc1
  41ada6:	xor    dh,0x41
  41ada9:	sbb    BYTE PTR [edx],bh
  41adab:	enter  0x4b62,0x6f
  41adaf:	or     al,0xde
  41adb1:	fwait
  41adb2:	jecxz  0x41ae1a
  41adb4:	xchg   DWORD PTR [ebx+0x3e],ecx
  41adb7:	or     edx,DWORD PTR [ebx+edi*1]
  41adba:	stos   BYTE PTR es:[edi],al
  41adbb:	and    BYTE PTR [ebp+0x26],ch
  41adbe:	xor    eax,0xfa2921b6
  41adc3:	sbb    bl,BYTE PTR [ebx]
  41adc5:	inc    ebp
  41adc6:	ficomp DWORD PTR [edi]
  41adc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adc9:	add    eax,0xfc42daa6
  41adce:	ret    0x1568
  41add1:	mov    ah,0xb3
  41add3:	sbb    edi,esp
  41add5:	xor    al,0x64
  41add7:	sar    DWORD PTR [ecx+0x62],1
  41adda:	stos   DWORD PTR es:[edi],eax
  41addb:	dec    edx
  41addc:	mov    ss,WORD PTR [esi-0x57dc558f]
  41ade2:	cli    
  41ade3:	push   cs
  41ade4:	or     BYTE PTR [ebx+ebx*8+0x7aa46410],ah
  41adeb:	xlat   BYTE PTR ds:[ebx]
  41adec:	xor    DWORD PTR [eax],esi
  41adee:	mov    edi,0x86953a2b
  41adf3:	loope  0x41ad8c
  41adf5:	sub    BYTE PTR [ebx+ebp*8],0xf1
  41adf9:	scas   al,BYTE PTR es:[edi]
  41adfa:	stc    
  41adfb:	xchg   edi,eax
  41adfc:	pop    edx
  41adfd:	js     0x41ae5f
  41adff:	aas    
  41ae00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae01:	jl     0x41ae0e
  41ae03:	push   esi
  41ae04:	sahf   
  41ae05:	adc    BYTE PTR [esp+ebx*2],dl
  41ae08:	mov    WORD PTR [eax],es
  41ae0a:	cmc    
  41ae0b:	test   eax,0x8861281c
  41ae10:	sub    edi,DWORD PTR [ecx]
  41ae12:	cs push es
  41ae14:	into   
  41ae15:	mov    ecx,0xaab534c5
  41ae1a:	jnp    0x41ae8b
  41ae1c:	int    0xf9
  41ae1e:	jne    0x41ae01
  41ae20:	push   es
  41ae21:	pop    edx
  41ae22:	gs xchg esp,eax
  41ae24:	dec    ebp
  41ae25:	add    ah,dh
  41ae27:	add    DWORD PTR [edi-0x97072b5],ebx
  41ae2d:	cli    
  41ae2e:	adc    BYTE PTR [esi+0x65814ada],0xde
  41ae35:	dec    ebp
  41ae36:	dec    edi
  41ae37:	xchg   esi,eax
  41ae38:	push   ebx
  41ae39:	sbb    BYTE PTR [ebp+0x72],bh
  41ae3c:	xor    BYTE PTR [edx+0x2ffe63f7],al
  41ae42:	sub    dl,BYTE PTR [eax-0xd310bba]
  41ae48:	xor    DWORD PTR ds:0x17ed1d2e,edi
  41ae4e:	dec    edi
  41ae4f:	mov    ebp,0xfc1080b4
  41ae54:	and    dl,ah
  41ae56:	sub    DWORD PTR es:[ecx+0x69],0x64d44c1
  41ae5e:	pop    eax
  41ae5f:	shr    BYTE PTR [eax],1
  41ae61:	fcmovu st,st(3)
  41ae63:	mov    ds:0x315988aa,al
  41ae68:	nop
  41ae69:	or     eax,0x34e04e02
  41ae6e:	data16 ja 0x41ae3e
  41ae71:	test   eax,eax
  41ae73:	xchg   DWORD PTR [ecx-0x3a39c7ab],edx
  41ae79:	popf   
  41ae7a:	into   
  41ae7b:	dec    edi
  41ae7c:	mov    ebp,0xddde2c26
  41ae81:	lds    esi,FWORD PTR [eax-0x2c0cc329]
  41ae87:	jp     0x41ae8b
  41ae89:	sti    
  41ae8a:	cmc    
  41ae8b:	push   0x3a77de45
  41ae90:	leave  
  41ae91:	push   cs
  41ae92:	and    BYTE PTR [ecx],ch
  41ae94:	cmp    DWORD PTR [edi+0x5e8bf8ed],ecx
  41ae9a:	out    0x7c,al
  41ae9c:	jo     0x41ae7c
  41ae9e:	xor    BYTE PTR [edx+0x34b5d2d9],al
  41aea4:	in     eax,0x44
  41aea6:	shl    ebp,0x92
  41aea9:	sahf   
  41aeaa:	mov    bh,0xa8
  41aead:	xchg   ecx,eax
  41aeae:	xor    eax,0x1415d84b
  41aeb3:	inc    ebx
  41aeb4:	pop    edx
  41aeb5:	or     BYTE PTR [esi-0x26],ah
  41aeb8:	xor    dl,BYTE PTR [eax+0x5657c46]
  41aebe:	loope  0x41aec8
  41aec0:	mov    edi,0xfca595e9
  41aec5:	fbld   TBYTE PTR [eax+0x5ee03e75]
  41aecb:	or     esi,esp
  41aecd:	int3   
  41aece:	xor    edx,DWORD PTR [ebx+ecx*4-0x35]
  41aed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aed3:	pusha  
  41aed4:	in     eax,dx
  41aed5:	ficom  DWORD PTR [edx]
  41aed7:	and    eax,0xd7d305f2
  41aedc:	lahf   
  41aedd:	mov    bl,0xa5
  41aedf:	pushf  
  41aee0:	daa    
  41aee1:	adc    eax,0x88cab14
  41aee6:	sbb    dh,dh
  41aee8:	xor    BYTE PTR [ebp-0x40300a50],dl
  41aeee:	jb     0x41af08
  41aef0:	jno    0x41aec2
  41aef2:	sub    al,0x1d
  41aef4:	fbld   TBYTE PTR [esi+edi*1]
  41aef7:	out    0xbc,al
  41aef9:	mov    bl,BYTE PTR [edx-0x77]
  41aefc:	sbb    esp,ebx
  41aefe:	lock das 
  41af00:	inc    ecx
  41af01:	out    dx,eax
  41af02:	dec    esi
  41af03:	js     0x41aeca
  41af05:	repnz cmp eax,0xfbfac459
  41af0b:	loop   0x41aeb5
  41af0d:	xor    BYTE PTR [ebx+eiz*2],ah
  41af10:	sbb    ebx,DWORD PTR [ebp+0x60]
  41af13:	add    al,0x4c
  41af15:	fst    QWORD PTR [eax-0x4e]
  41af18:	mov    DWORD PTR [esi],0xea5e3cbf
  41af1e:	in     eax,0x9b
  41af20:	push   edx
  41af21:	je     0x41aeb4
  41af23:	xlat   BYTE PTR ds:[ebx]
  41af24:	jae    0x41aef8
  41af26:	loop   0x41af3f
  41af28:	stos   BYTE PTR es:[edi],al
  41af29:	xchg   ecx,eax
  41af2a:	ret    
  41af2b:	pop    esi
  41af2c:	bound  ebp,QWORD PTR [edx-0x2d9f44ad]
  41af32:	sbb    DWORD PTR [edi+ebp*2],ebx
  41af35:	push   esi
  41af36:	push   esp
  41af37:	(bad)  
  41af39:	stos   DWORD PTR es:[edi],eax
  41af3a:	dec    ebp
  41af3b:	in     eax,0x7
  41af3d:	xlat   BYTE PTR ds:[ebx]
  41af3e:	jp     0x41afba
  41af40:	cmp    eax,0xc2ff3c39
  41af45:	hlt    
  41af46:	xchg   esi,eax
  41af47:	xchg   ebp,eax
  41af48:	iret   
  41af49:	pop    ecx
  41af4a:	fisttp WORD PTR [ebp+0x43]
  41af4d:	int3   
  41af4e:	rol    BYTE PTR [ecx+0x6b],cl
  41af51:	jp     0x41afad
  41af53:	mov    al,ds:0xbd3aad9e
  41af58:	fdiv   st,st(1)
  41af5a:	mov    DWORD PTR [eax-0x48],0xb8e1c5a7
  41af61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af62:	add    dl,ch
  41af64:	iret   
  41af65:	in     al,dx
  41af66:	sub    ah,BYTE PTR [eax+0x3e]
  41af69:	leave  
  41af6a:	repz adc al,0x1d
  41af6d:	jns    0x41af43
  41af6f:	inc    eax
  41af70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af71:	jmp    0x3db1c43a
  41af76:	push   es
  41af77:	xor    DWORD PTR [eax+0x6e],ecx
  41af7a:	jo     0x41af16
  41af7c:	pop    es
  41af7d:	push   esi
  41af7e:	pop    ss
  41af7f:	dec    edx
  41af80:	popf   
  41af81:	cmc    
  41af82:	and    eax,0x8daeeb64
  41af87:	sub    al,0x37
  41af89:	and    ecx,DWORD PTR [eax+0x2d]
  41af8c:	add    eax,0xf7a218a8
  41af91:	push   es
  41af92:	mov    bh,0xc
  41af94:	(bad)  
  41af96:	fwait
  41af97:	scas   eax,DWORD PTR es:[edi]
  41af98:	test   al,0xd
  41af9a:	or     dl,BYTE PTR [ecx-0x19dbcaf6]
  41afa0:	push   ecx
  41afa1:	das    
  41afa2:	push   esp
  41afa3:	push   ds
  41afa4:	cld    
  41afa5:	(bad)  
  41afa6:	ja     0x41afe7
  41afa8:	mov    al,0x88
  41afaa:	imul   esp,DWORD PTR [edi+0x18],0x49
  41afae:	in     eax,0xa8
  41afb0:	outs   dx,BYTE PTR ds:[esi]
  41afb1:	lds    ecx,FWORD PTR [ecx]
  41afb3:	and    BYTE PTR [esp+eax*2],bl
  41afb6:	and    DWORD PTR [eax-0x593b976],ebx
  41afbc:	add    eax,0x8814370c
  41afc1:	and    DWORD PTR [edi-0x27],0xffffffab
  41afc5:	pop    es
  41afc6:	(bad)  
  41afc7:	inc    eax
  41afc8:	retf   0xa5c6
  41afcb:	cdq    
  41afcc:	mov    eax,ds:0x876f5173
  41afd1:	cli    
  41afd2:	xor    ebx,edx
  41afd4:	lods   al,BYTE PTR ds:[esi]
  41afd5:	cwde   
  41afd6:	xchg   edi,eax
  41afd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd8:	(bad)
  41afdb:	mov    DWORD PTR [ecx+eax*4+0x10],0x5fc0bf11
  41afe3:	sti    
  41afe4:	inc    ebx
  41afe5:	ja     0x41b04e
  41afe7:	xor    bh,BYTE PTR [ecx+ebp*1+0x5d17e833]
  41afee:	mov    ds:0x7b58100b,al
  41aff3:	add    BYTE PTR [edx-0x4dd418f5],ah
  41aff9:	fnstsw ax
  41affb:	jmp    0x41b018
  41affd:	mov    bh,0x5e
  41afff:	add    ebx,ebp
  41b001:	add    DWORD PTR [esi+0x27],edx
  41b004:	cwde   
  41b005:	aad    0xa9
  41b007:	pop    ebx
  41b008:	jb     0x41afbe
  41b00a:	aad    0xd4
  41b00c:	std    
  41b00d:	mov    dl,0x84
  41b00f:	push   ecx
  41b010:	pop    es
  41b011:	xlat   BYTE PTR ds:[ebx]
  41b012:	push   esp
  41b013:	imul   edx,DWORD PTR [ecx-0x5c986cb1],0xffffffc4
  41b01a:	ds addr16 pop ecx
  41b01d:	xchg   edi,eax
  41b01e:	push   edi
  41b01f:	cdq    
  41b020:	sbb    BYTE PTR [ebp+0x4b17e663],al
  41b026:	jecxz  0x41b008
  41b028:	test   DWORD PTR [edx+0x2ea5f33f],esp
  41b02e:	dec    esi
  41b02f:	es jb  0x41b09c
  41b032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b033:	jge    0x41b010
  41b035:	adc    edx,DWORD PTR [ebx-0x4d]
  41b038:	scas   al,BYTE PTR es:[edi]
  41b039:	fiadd  DWORD PTR [edi]
  41b03b:	jle    0x41b06d
  41b03d:	inc    esp
  41b03e:	push   edi
  41b03f:	and    eax,0xa2105f2c
  41b044:	gs sti 
  41b046:	fld    QWORD PTR [ecx]
  41b048:	(bad)  
  41b049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b04a:	push   ebx
  41b04b:	sbb    dl,BYTE PTR [ebx]
  41b04d:	call   0xf366:0x5f419e4a
  41b054:	outs   dx,DWORD PTR ds:[esi]
  41b055:	es in  eax,dx
  41b057:	or     DWORD PTR [ebx-0x4e],esi
  41b05a:	xor    DWORD PTR [esi-0x65e0dad],ebp
  41b060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b061:	cmp    al,0x1d
  41b063:	popf   
  41b064:	jg     0x41b073
  41b066:	popw   es
  41b068:	loope  0x41b059
  41b06a:	repnz push es
  41b06c:	xchg   BYTE PTR [eax],ah
  41b06e:	cmc    
  41b06f:	int3   
  41b070:	jge    0x41b06a
  41b072:	sub    al,0xb4
  41b074:	inc    eax
  41b075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b076:	push   eax
  41b077:	or     DWORD PTR [ecx-0x7b],ebp
  41b07a:	(bad)  
  41b07b:	jae    0x41b06e
  41b07d:	shr    DWORD PTR [esi+0x50192195],1
  41b083:	mov    ds:0xdfce0d0b,al
  41b088:	pop    ecx
  41b089:	jae    0x41b077
  41b08b:	mov    edx,0x21484db4
  41b090:	dec    edi
  41b091:	daa    
  41b092:	ins    BYTE PTR es:[edi],dx
  41b093:	mov    WORD PTR [eax-0x722fb187],ss
  41b099:	mov    edx,0x7b49a37d
  41b09e:	(bad)
  41b0a2:	paddsb mm3,mm7
  41b0a5:	dec    eax
  41b0a6:	xchg   edx,eax
  41b0a7:	dec    esi
  41b0a8:	lods   eax,DWORD PTR ds:[esi]
  41b0a9:	push   ecx
  41b0aa:	mov    ?,ebx
  41b0ac:	mov    ds:0x61c4c0f3,eax
  41b0b1:	add    eax,0xbd5fb474
  41b0b6:	mov    ecx,0x52454d47
  41b0bb:	movups xmm2,XMMWORD PTR [eax-0xcf94833]
  41b0c2:	out    dx,eax
  41b0c3:	ret    
  41b0c4:	add    al,0x73
  41b0c6:	stos   BYTE PTR es:[edi],al
  41b0c7:	in     eax,0x66
  41b0c9:	lods   al,BYTE PTR ds:[esi]
  41b0ca:	stos   DWORD PTR es:[edi],eax
  41b0cb:	int    0x8e
  41b0cd:	mov    esi,0x870702b0
  41b0d2:	icebp  
  41b0d3:	inc    esi
  41b0d4:	cdq    
  41b0d5:	push   ebp
  41b0d6:	mov    dl,0xea
  41b0d8:	and    BYTE PTR [edi-0x2f],bl
  41b0db:	push   es
  41b0dc:	gs mov ebx,0xc9b6e1fd
  41b0e2:	mov    ebp,0x4fc72d5b
  41b0e7:	call   0x18b3:0x52af0c33
  41b0ee:	outs   dx,BYTE PTR es:[esi]
  41b0f0:	pop    ds
  41b0f1:	out    dx,eax
  41b0f2:	xor    al,0x6e
  41b0f4:	stos   DWORD PTR es:[edi],eax
  41b0f5:	pop    ebx
  41b0f6:	sub    ch,BYTE PTR [eax]
  41b0f8:	jmp    0x571d2981
  41b0fd:	mov    dh,BYTE PTR [eax]
  41b0ff:	inc    esp
  41b100:	aaa    
  41b101:	xchg   edi,eax
  41b102:	add    DWORD PTR [eax],esp
  41b104:	repnz inc DWORD PTR [eax-0x53]
  41b108:	lea    eax,[ebx]
  41b10a:	outs   dx,BYTE PTR ds:[esi]
  41b10b:	mov    ebx,0x64f2092a
  41b110:	mov    ah,0x1f
  41b112:	push   0x1df9f344
  41b117:	or     BYTE PTR [esi-0x79769f8b],0x57
  41b11e:	or     eax,DWORD PTR [eax+0x124a57a5]
  41b124:	cmp    BYTE PTR [edi+0x23],0xde
  41b128:	push   esi
  41b129:	jle    0x41b0f4
  41b12b:	shl    ch,cl
  41b12d:	jae    0x41b146
  41b12f:	int    0xae
  41b131:	bound  esi,QWORD PTR [ebx+0x5b926274]
  41b137:	(bad)  
  41b138:	jle    0x41b190
  41b13a:	jecxz  0x41b1b9
  41b13c:	imul   edx,ebx,0xf4c0c8f1
  41b142:	inc    esp
  41b143:	sbb    BYTE PTR [ebx+esi*1-0x2f],ch
  41b147:	sub    DWORD PTR [eax-0x2],edi
  41b14a:	jge    0x41b1c4
  41b14c:	pop    esi
  41b14d:	pop    ebx
  41b14e:	clc    
  41b14f:	sub    edi,eax
  41b151:	repnz fsubr st,st(2)
  41b154:	and    al,0x26
  41b156:	push   edi
  41b157:	inc    edx
  41b158:	xchg   edi,eax
  41b159:	inc    edx
  41b15a:	iret   
  41b15b:	mov    al,ds:0xbe2c425c
  41b160:	ror    BYTE PTR [ebx],0x86
  41b163:	(bad)  
  41b164:	sbb    esi,ecx
  41b166:	ins    BYTE PTR es:[edi],dx
  41b167:	fwait
  41b168:	pop    esp
  41b169:	imul   edi,DWORD PTR [ecx],0x17
  41b16c:	fs xchg esi,eax
  41b16e:	push   DWORD PTR ds:0x97c8b327
  41b174:	xchg   esi,eax
  41b175:	and    dh,BYTE PTR [ebx-0x4121c328]
  41b17b:	sahf   
  41b17c:	pop    esp
  41b17d:	in     eax,dx
  41b17e:	sub    BYTE PTR [edi-0x299986b1],ch
  41b184:	aas    
  41b185:	std    
  41b186:	mov    ch,0xa8
  41b188:	sbb    al,BYTE PTR [esi+eax*4-0x1b]
  41b18c:	and    DWORD PTR [ebx+edi*8+0x1c],edi
  41b190:	jp     0x41b143
  41b192:	and    al,ch
  41b194:	cdq    
  41b195:	cmp    ch,BYTE PTR [ebp+0x771f080d]
  41b19b:	imul   esi,ecx,0xbd83aa0f
  41b1a1:	div    DWORD PTR [eax-0x6d77b2ac]
  41b1a7:	mov    dl,BYTE PTR [edi-0x12]
  41b1aa:	push   0x7c79625f
  41b1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b0:	out    0xe7,eax
  41b1b2:	mov    al,0x89
  41b1b4:	std    
  41b1b5:	loopne 0x41b1a8
  41b1b7:	push   0x36173b66
  41b1bc:	ins    DWORD PTR es:[edi],dx
  41b1bd:	mov    cl,0x6e
  41b1bf:	cld    
  41b1c0:	jl     0x41b16b
  41b1c2:	mov    DWORD PTR [ecx],esp
  41b1c4:	mov    ebx,0xcaee486a
  41b1c9:	(bad)  
  41b1ca:	(bad)  
  41b1cb:	pop    esp
  41b1cc:	in     eax,dx
  41b1cd:	sub    bh,0x5
  41b1d0:	cdq    
  41b1d1:	out    0xd7,eax
  41b1d3:	sti    
  41b1d4:	lea    edi,[edx]
  41b1d6:	mov    ds:0x86096cfb,eax
  41b1db:	jp     0x41b1d2
  41b1dd:	adc    al,0xd2
  41b1df:	test   DWORD PTR [esi+0x4975c5cc],0x7bf655ee
  41b1e9:	mov    esp,0xa8dfcaf
  41b1ee:	es dec edi
  41b1f0:	sar    DWORD PTR [esi-0x3c],cl
  41b1f3:	xchg   edx,eax
  41b1f4:	call   0x3a060f04
  41b1f9:	lds    esp,FWORD PTR [edi-0x3ee53941]
  41b1ff:	inc    edi
  41b200:	add    al,0x1e
  41b202:	stc    
  41b203:	and    eax,0x26e5ecab
  41b208:	mov    cl,dl
  41b20a:	shl    BYTE PTR [esi+0x1a],cl
  41b20d:	adc    al,0x86
  41b20f:	adc    eax,0x959024ce
  41b214:	or     BYTE PTR [ecx+edx*8+0x24],0xc5
  41b219:	(bad)  
  41b21a:	ja     0x41b1fa
  41b21c:	push   ebp
  41b21d:	test   DWORD PTR [edi-0x326a4098],esp
  41b223:	sahf   
  41b224:	cmp    ah,BYTE PTR [eax]
  41b226:	inc    ebx
  41b227:	sti    
  41b228:	push   0x779adc73
  41b22d:	nop
  41b22e:	sub    al,BYTE PTR [ecx]
  41b230:	shl    DWORD PTR [esi+0x71],0xa8
  41b234:	gs inc edi
  41b236:	dec    ecx
  41b237:	stos   BYTE PTR es:[edi],al
  41b238:	and    edi,DWORD PTR [ebp+0x566c6d67]
  41b23e:	(bad)  
  41b23f:	mov    cl,0xa1
  41b241:	ds fs stos DWORD PTR es:[edi],eax
  41b244:	push   0x4a
  41b246:	rcr    BYTE PTR [eax],0x90
  41b249:	stc    
  41b24a:	xchg   ebx,eax
  41b24b:	push   0xffffffb9
  41b24d:	push   0xc68c4aa1
  41b252:	mov    eax,DWORD PTR [ebp-0x5c]
  41b255:	icebp  
  41b256:	mov    edi,DWORD PTR ds:0x94d39152
  41b25c:	mov    fs,WORD PTR [ebx]
  41b25e:	stc    
  41b25f:	xor    edx,DWORD PTR [esp+edi*2]
  41b262:	adc    cl,BYTE PTR [edx]
  41b264:	inc    edx
  41b265:	inc    edx
  41b266:	call   0xb11cb8d1
  41b26b:	dec    esp
  41b26c:	xor    al,0x1d
  41b26e:	pop    ss
  41b26f:	xor    DWORD PTR [edi-0x58],eax
  41b272:	push   esi
  41b273:	mov    al,0xec
  41b275:	xchg   ebx,eax
  41b276:	ss adc bl,cl
  41b279:	xor    DWORD PTR [esi+0x2dbce9e8],ebp
  41b27f:	xchg   esi,eax
  41b280:	out    dx,al
  41b281:	dec    ebp
  41b282:	inc    DWORD PTR [ebx+0xb]
  41b285:	push   ds
  41b286:	push   0x3b2ea1d7
  41b28b:	lock pop edi
  41b28d:	inc    esi
  41b28e:	and    DWORD PTR [edi],0xffffffad
  41b291:	pop    ds
  41b292:	test   DWORD PTR [eax-0x70],esp
  41b295:	rcl    DWORD PTR [ecx],0xfc
  41b298:	jae    0x41b278
  41b29a:	xchg   edx,eax
  41b29b:	sub    al,0x5c
  41b29d:	mov    ch,0x50
  41b29f:	mov    ah,0xc1
  41b2a1:	and    eax,0xc0098c0b
  41b2a6:	std    
  41b2a7:	daa    
  41b2a8:	arpl   sp,ax
  41b2aa:	pop    ds
  41b2ab:	stos   DWORD PTR es:[edi],eax
  41b2ac:	mov    ah,0xae
  41b2ae:	sub    ah,cl
  41b2b0:	sub    eax,0xdc5bf252
  41b2b5:	cdq    
  41b2b6:	pop    ebx
  41b2b7:	or     BYTE PTR [edi+0x6b],ah
  41b2ba:	(bad)  
  41b2bc:	push   esp
  41b2bd:	loope  0x41b32c
  41b2bf:	mov    ah,BYTE PTR [edi-0x70]
  41b2c2:	mov    cl,0x4f
  41b2c4:	adc    ecx,DWORD PTR [ebx]
  41b2c6:	xchg   esi,eax
  41b2c7:	jmp    0x150f4ea1
  41b2cc:	push   eax
  41b2cd:	nop
  41b2ce:	pop    esp
  41b2cf:	mov    dh,0x38
  41b2d1:	jp     0x41b273
  41b2d3:	popf   
  41b2d4:	or     al,0x75
  41b2d6:	dec    ebp
  41b2d7:	std    
  41b2d8:	push   esi
  41b2d9:	sbb    eax,ebx
  41b2db:	jo     0x41b2b8
  41b2dd:	jp     0x41b321
  41b2df:	fcomip st,st(0)
  41b2e1:	gs push es
  41b2e3:	retf   
  41b2e4:	lahf   
  41b2e5:	test   DWORD PTR [ecx+0x3c],0x778585ee
  41b2ec:	sub    al,BYTE PTR [esi+0x32]
  41b2ef:	(bad)  
  41b2f0:	in     eax,0x3e
  41b2f2:	dec    edx
  41b2f3:	int3   
  41b2f4:	add    ebp,DWORD PTR [edi+0x6a2a697c]
  41b2fa:	jnp    0x41b34f
  41b2fc:	push   es
  41b2fd:	mov    eax,ds:0x4e114a9a
  41b302:	mov    ebp,0xfe92f2e9
  41b307:	cmp    esi,ebp
  41b309:	add    edx,eax
  41b30b:	mov    es,WORD PTR [eax+eax*4+0x23ef75e3]
  41b312:	inc    esp
  41b313:	xchg   ebx,eax
  41b314:	sbb    eax,DWORD PTR [edx+0x1e]
  41b317:	inc    esi
  41b318:	jle    0x41b2d0
  41b31a:	or     BYTE PTR [ecx+esi*8+0x4f14f673],dh
  41b321:	jne    0x41b380
  41b323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b324:	ja     0x41b2ee
  41b326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b327:	mov    ds:0x76ed2549,al
  41b32c:	push   ebp
  41b32d:	(bad)  
  41b32e:	jmp    0x418b:0x5589a5ee
  41b335:	push   ebp
  41b336:	fnstsw WORD PTR [esi+0x2aa7a370]
  41b33c:	mov    ebx,DWORD PTR [esi+0x6f7eef2d]
  41b342:	mov    bl,dl
  41b344:	push   eax
  41b345:	shr    BYTE PTR [ebx+0x4f9840c2],1
  41b34b:	inc    eax
  41b34c:	add    BYTE PTR [edx-0xc37c418],dh
  41b352:	ss pop ecx
  41b354:	mov    bh,0x6f
  41b356:	jecxz  0x41b36a
  41b358:	pop    ds
  41b359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35a:	and    DWORD PTR [eax],eax
  41b35c:	jmp    0x2819:0x5734a781
  41b363:	aam    0x26
  41b365:	mov    ah,0x61
  41b367:	std    
  41b368:	push   ebx
  41b369:	dec    edx
  41b36a:	movsx  esi,BYTE PTR [ebx-0x366c66]
  41b371:	inc    ebx
  41b372:	jb     0x41b356
  41b374:	(bad)  
  41b375:	mov    dl,0x80
  41b377:	popa   
  41b378:	sti    
  41b379:	pop    edx
  41b37a:	ret    
  41b37b:	fwait
  41b37c:	rcr    DWORD PTR [ebx+edx*8+0x7a4adcf8],0xe0
  41b384:	mov    ds:0x9ab64f80,al
  41b389:	and    ecx,ebp
  41b38b:	inc    esi
  41b38c:	mov    esi,0x91add060
  41b391:	loope  0x41b3ba
  41b393:	sub    edx,DWORD PTR [ecx]
  41b395:	mov    esp,0x885b7503
  41b39a:	loopne 0x41b359
  41b39c:	lea    ebx,[ecx-0x51]
  41b39f:	stos   DWORD PTR es:[edi],eax
  41b3a0:	push   es
  41b3a1:	mov    bl,0x79
  41b3a3:	push   ecx
  41b3a4:	and    dh,bl
  41b3a6:	mov    edx,0x35d378f8
  41b3ab:	push   eax
  41b3ac:	inc    esp
  41b3ad:	mov    cs:0xbfb01142,eax
  41b3b3:	sub    al,0x5d
  41b3b5:	addr16 xchg edx,eax
  41b3b7:	outs   dx,DWORD PTR ds:[esi]
  41b3b8:	or     eax,0x18130411
  41b3bd:	shl    ebp,cl
  41b3bf:	push   ss
  41b3c0:	fxch   st(0)
  41b3c2:	ret    0xabc6
  41b3c5:	scas   al,BYTE PTR es:[edi]
  41b3c6:	pop    es
  41b3c7:	(bad)  
  41b3c8:	and    DWORD PTR [ebx+0x4f],edi
  41b3cb:	xchg   ebp,eax
  41b3cc:	stos   BYTE PTR es:[edi],al
  41b3cd:	mov    ecx,0xfa97afd4
  41b3d2:	sub    ebp,DWORD PTR [edx+0x1]
  41b3d5:	popf   
  41b3d6:	and    DWORD PTR [edi+0x3f],eax
  41b3d9:	add    al,0x50
  41b3db:	shl    DWORD PTR [esi+0x43486f52],1
  41b3e1:	(bad)  
  41b3e2:	xor    al,0x36
  41b3e4:	pop    ecx
  41b3e5:	leave  
  41b3e6:	sub    cl,bl
  41b3e8:	mov    bl,0x2e
  41b3ea:	mov    dl,0xaf
  41b3ec:	out    0x49,al
  41b3ee:	mov    esp,0x17648984
  41b3f3:	or     dh,BYTE PTR [ebx]
  41b3f5:	add    edx,DWORD PTR [edx]
  41b3f7:	and    al,0x5a
  41b3f9:	loopne 0x41b389
  41b3fb:	adc    al,0x4a
  41b3fd:	xchg   edi,eax
  41b3fe:	add    DWORD PTR [edi+0x457095ce],0x38478d13
  41b408:	pop    ss
  41b409:	cmp    ah,BYTE PTR [ebp+0x1b39f03a]
  41b40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b410:	call   0x93c5:0x5e7305aa
  41b417:	or     BYTE PTR [esp+ecx*8+0x1498a04b],dl
  41b41e:	jecxz  0x41b3cc
  41b420:	pop    es
  41b421:	add    ch,BYTE PTR [esi-0x74b6d48]
  41b427:	and    eax,0x168f7af
  41b42c:	sub    dl,bl
  41b42e:	cmp    eax,DWORD PTR [esi]
  41b430:	adc    BYTE PTR [ebp-0x31],0x63
  41b434:	add    ch,al
  41b436:	ds mov edi,0xb8820427
  41b43c:	lahf   
  41b43d:	jno    0x41b3cb
  41b43f:	xor    ecx,DWORD PTR [esi+ecx*4+0x34]
  41b443:	xor    eax,0x19e01a87
  41b448:	inc    esp
  41b449:	mov    cl,0xf5
  41b44b:	fistp  QWORD PTR [ebx-0x6a]
  41b44e:	mov    edx,0xeff16d71
  41b453:	or     DWORD PTR [edi],eax
  41b455:	inc    esp
  41b456:	jo     0x41b4cb
  41b458:	push   ebp
  41b459:	daa    
  41b45a:	cwde   
  41b45b:	gs xor edx,ebx
  41b45e:	adc    eax,0x42befd2a
  41b463:	push   0x17
  41b465:	sub    edi,DWORD PTR [esi]
  41b467:	push   esi
  41b468:	test   al,0x60
  41b46a:	sbb    DWORD PTR [esi+0x3d7851c5],edi
  41b470:	test   eax,0xe55987d4
  41b475:	dec    ebx
  41b476:	test   ebx,esp
  41b478:	scas   al,BYTE PTR es:[edi]
  41b479:	outs   dx,DWORD PTR ds:[esi]
  41b47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47b:	fcmovnbe st,st(5)
  41b47d:	jno    0x41b4de
  41b47f:	push   edx
  41b480:	cmp    eax,0x5589e448
  41b485:	xchg   esi,eax
  41b486:	inc    edi
  41b487:	je     0x41b40d
  41b489:	add    edx,esi
  41b48b:	xchg   ecx,eax
  41b48c:	adc    eax,0xf6f4bd62
  41b491:	mov    ebx,0xfd09cd7a
  41b496:	jle    0x41b475
  41b498:	cs stos BYTE PTR es:[edi],al
  41b49a:	test   DWORD PTR ss:[edi-0x631601ca],esp
  41b4a1:	or     ah,bl
  41b4a3:	out    dx,al
  41b4a4:	int    0xa4
  41b4a6:	out    dx,al
  41b4a7:	aaa    
  41b4a8:	or     esp,DWORD PTR [ebx]
  41b4aa:	and    edi,DWORD PTR [ebp+ebp*4-0xd114201]
  41b4b1:	push   ss
  41b4b2:	cwde   
  41b4b3:	repnz out dx,eax
  41b4b5:	mov    DWORD PTR [edx-0x3e],0x6b0e6af8
  41b4bc:	inc    ebp
  41b4bd:	jbe    0x41b534
  41b4bf:	or     dl,BYTE PTR [esi+0x5b4680c9]
  41b4c5:	imul   ebp,DWORD PTR [edi],0x665947a
  41b4cb:	arpl   WORD PTR [ecx],dx
  41b4cd:	push   es
  41b4ce:	xchg   ebx,eax
  41b4cf:	enter  0xf65a,0xd3
  41b4d3:	sbb    edi,DWORD PTR [ecx-0x366a943]
  41b4d9:	add    eax,0xed420336
  41b4de:	xor    DWORD PTR [ebp-0x4f],ebp
  41b4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4e2:	adc    DWORD PTR [edi],ecx
  41b4e4:	fsub   QWORD PTR [edx+0x132ffae4]
  41b4ea:	mov    dh,0x96
  41b4ec:	in     al,dx
  41b4ed:	and    eax,0x7f083141
  41b4f2:	rcl    DWORD PTR [edi],1
  41b4f4:	inc    edi
  41b4f5:	jno    0x41b484
  41b4f7:	imul   edx,esp,0xb997dc25
  41b4fd:	jno    0x41b510
  41b4ff:	pop    esp
  41b500:	adc    DWORD PTR [edx-0x4482921c],0x79fd278a
  41b50a:	pop    ebp
  41b50b:	ins    DWORD PTR es:[edi],dx
  41b50c:	and    ebx,DWORD PTR ds:0xc09d3b7b
  41b512:	dec    esp
  41b513:	xchg   DWORD PTR [ebp+0xc],edx
  41b516:	retf   0x22cb
  41b519:	pop    ecx
  41b51a:	in     al,dx
  41b51b:	pusha  
  41b51c:	jmp    0x9509f089
  41b521:	mov    ds:0xcdf581ce,al
  41b526:	jmp    0x36b3:0x590041bd
  41b52d:	fst    DWORD PTR [edx+0x4]
  41b530:	xchg   ecx,eax
  41b531:	sub    al,0x76
  41b533:	and    eax,0x122cc96a
  41b538:	sbb    DWORD PTR [edi+0x33],eax
  41b53b:	mov    edx,0x6027f6f3
  41b540:	lock call 0x7823:0xeb52e4a5
  41b548:	xchg   ebp,eax
  41b549:	jecxz  0x41b58a
  41b54b:	add    BYTE PTR [esi+ebx*4],al
  41b54e:	lds    ebx,FWORD PTR [ebx]
  41b550:	in     eax,dx
  41b551:	enter  0x8647,0xde
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	push   esi
  41b871:	out    dx,eax
  41b872:	ss jecxz 0x41b863
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	sbb    DWORD PTR [ecx+0x33],0xffffffdb
  41b87f:	cmp    BYTE PTR [ebx-0x3c3dd4bc],0x80
  41b886:	pop    esp
  41b887:	bound  eax,QWORD PTR [esi-0x55b99c7b]
  41b88d:	out    dx,eax
  41b88e:	add    eax,0x65fb48cb
  41b893:	(bad)  
  41b894:	iret   
  41b895:	outs   dx,BYTE PTR ds:[esi]
  41b896:	inc    eax
  41b897:	cmp    bl,bl
  41b899:	push   ds
  41b89a:	jmp    0x41b85e
  41b89c:	test   BYTE PTR [edx+0x2c6cbd0b],bh
  41b8a2:	mov    BYTE PTR [edx],bh
  41b8a4:	adc    ah,cl
  41b8a6:	adc    al,0xa7
  41b8a8:	cmp    dh,BYTE PTR [edx]
  41b8aa:	mov    ecx,0x23e84f4e
  41b8af:	or     DWORD PTR [eax],0xffffffb5
  41b8b2:	inc    esp
  41b8b3:	test   DWORD PTR [ebx-0x70],0x575a872e
  41b8ba:	out    0x78,al
  41b8bc:	mov    al,bh
  41b8be:	push   edi
  41b8bf:	out    dx,al
  41b8c0:	mov    ch,bh
  41b8c2:	dec    ecx
  41b8c3:	(bad)  
  41b8c4:	rcr    BYTE PTR [ebp+0x27],0xbb
  41b8c8:	(bad)  
  41b8c9:	mov    bl,0xa4
  41b8cb:	rol    DWORD PTR [edx-0x27],cl
  41b8ce:	(bad)  
  41b8cf:	jl     0x41b917
  41b8d1:	bound  edi,QWORD PTR [esp+ecx*4+0x61]
  41b8d5:	mov    al,0xa0
  41b8d7:	mov    ch,BYTE PTR [edx+0x20]
  41b8da:	inc    esi
  41b8db:	push   ebp
  41b8dc:	mov    dh,0x98
  41b8de:	jge    0x41b8c0
  41b8e0:	fisubr DWORD PTR [esi+0x14bab70e]
  41b8e6:	cmp    DWORD PTR [ebx+0x26581e33],esi
  41b8ec:	sbb    edx,DWORD PTR [edi+ecx*8]
  41b8ef:	jp     0x41b890
  41b8f1:	xchg   esi,eax
  41b8f2:	inc    ecx
  41b8f3:	cdq    
  41b8f4:	mov    al,BYTE PTR [ebx-0x6b96626b]
  41b8fa:	rcl    DWORD PTR [edx-0x7cd9aa0],cl
  41b900:	or     eax,0xd4f8ca98
  41b905:	sbb    BYTE PTR [edi+0x4611295b],bl
  41b90b:	fdivr  DWORD PTR [edx-0x64]
  41b90e:	rcr    BYTE PTR [eax+0x23],1
  41b911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b912:	lock stc 
  41b914:	lea    ebp,[edx]
  41b916:	mov    ss,WORD PTR [ecx-0x45a5be87]
  41b91c:	or     ebp,edx
  41b91e:	inc    eax
  41b91f:	jecxz  0x41b8d8
  41b921:	stos   DWORD PTR es:[edi],eax
  41b922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b923:	push   ds
  41b924:	and    DWORD PTR [eax-0xf],ebp
  41b927:	jno    0x41b90e
  41b929:	lods   eax,DWORD PTR ds:[esi]
  41b92a:	jno    0x41b950
  41b92c:	hlt    
  41b92d:	out    0x81,al
  41b92f:	ds cmc 
  41b931:	inc    esi
  41b932:	scas   al,BYTE PTR es:[edi]
  41b933:	es in  eax,0x34
  41b936:	cmp    BYTE PTR [edi],dh
  41b938:	pop    ebp
  41b939:	fidivr DWORD PTR [esi+0x6de61d08]
  41b93f:	pop    ds
  41b940:	lds    ebx,FWORD PTR [ebx+0x6ee769f9]
  41b946:	daa    
  41b947:	mov    esi,0x8076595c
  41b94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b94d:	add    DWORD PTR [ebp-0x74],edx
  41b950:	in     eax,0xfd
  41b952:	repnz push edx
  41b954:	jg     0x41b91b
  41b956:	cld    
  41b957:	pushf  
  41b958:	add    DWORD PTR [eax],edx
  41b95a:	add    ecx,DWORD PTR [edx+esi*1]
  41b95d:	and    ecx,ecx
  41b95f:	shr    dl,1
  41b961:	(bad)  
  41b962:	(bad)  
  41b964:	scas   al,BYTE PTR es:[edi]
  41b965:	sbb    BYTE PTR [edx-0x10],dh
  41b968:	push   edx
  41b969:	sbb    al,0xdc
  41b96b:	fadd   DWORD PTR [eax+0x6ae8de11]
  41b971:	fs jecxz 0x41b961
  41b974:	jo     0x41b939
  41b976:	and    DWORD PTR [ebx+0x23abf8ce],0x4d448b7e
  41b980:	cld    
  41b981:	sub    eax,0xa4b6b53c
  41b986:	call   0xbd4a364d
  41b98b:	(bad)  
  41b98c:	arpl   WORD PTR [edi-0x241b5d5e],bx
  41b992:	mov    al,0x77
  41b994:	and    DWORD PTR [eax+0x6d9e6a09],eax
  41b99a:	arpl   WORD PTR [ebp-0x20a7610c],sp
  41b9a0:	xor    bh,BYTE PTR [esi-0x3a]
  41b9a3:	cmp    eax,0x6149306
  41b9a8:	xchg   ebp,eax
  41b9a9:	dec    esp
  41b9aa:	and    al,BYTE PTR [edx]
  41b9ac:	mov    ebx,0xda1e8283
  41b9b1:	mov    edi,0x814fac86
  41b9b6:	sbb    ch,BYTE PTR fs:[ebx-0x650d81ab]
  41b9bd:	repz adc ecx,DWORD PTR [ebx-0x52]
  41b9c1:	xchg   ecx,eax
  41b9c2:	xor    BYTE PTR ds:0x7f27f309,0x19
  41b9c9:	sub    edx,DWORD PTR [ebp-0x454d64aa]
  41b9cf:	fld    QWORD PTR [edx]
  41b9d1:	pushf  
  41b9d2:	cmp    eax,0x27c1aa64
  41b9d7:	fistp  WORD PTR [esi-0x69]
  41b9da:	lods   al,BYTE PTR ds:[esi]
  41b9db:	ins    DWORD PTR es:[edi],dx
  41b9dc:	push   es
  41b9dd:	ss xchg esp,eax
  41b9df:	mov    bh,BYTE PTR [edx+0x76]
  41b9e2:	jae    0x41ba1b
  41b9e4:	pop    edx
  41b9e5:	outs   dx,DWORD PTR ds:[esi]
  41b9e6:	lds    edx,FWORD PTR [ebx]
  41b9e8:	xchg   ebp,eax
  41b9e9:	mov    ch,0x9b
  41b9eb:	popf   
  41b9ec:	repnz mov eax,ds:0x5e053eb7
  41b9f2:	test   DWORD PTR [ebx+0x248f2dd3],eax
  41b9f8:	inc    edi
  41b9f9:	(bad)  
  41b9fb:	call   0xd619:0x9f3cd6
  41ba02:	into   
  41ba03:	and    eax,0xb39df923
  41ba08:	mov    edx,0x3d53b1c
  41ba0d:	mov    edi,0xb6b8aa55
  41ba12:	out    0x22,eax
  41ba14:	push   ebp
  41ba15:	and    ecx,DWORD PTR [ebx-0xdee24f7]
  41ba1b:	(bad)  
  41ba1c:	mov    ebx,0x914f76f6
  41ba21:	mov    DWORD PTR [ebp-0x2b828e52],eax
  41ba27:	xchg   DWORD PTR [ecx-0x2bef4232],ecx
  41ba2d:	mov    ah,0x3a
  41ba2f:	repz addr16 ret 0x3d2a
  41ba34:	bound  eax,QWORD PTR [ecx]
  41ba36:	ret    0x1096
  41ba39:	dec    eax
  41ba3a:	scas   al,BYTE PTR es:[edi]
  41ba3b:	jl     0x41baba
  41ba3d:	dec    eax
  41ba3e:	sbb    eax,0x974c4268
  41ba43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba44:	fnstcw WORD PTR [edx+0x3c]
  41ba47:	sti    
  41ba48:	daa    
  41ba49:	jle    0x41ba3b
  41ba4b:	jb     0x41baa5
  41ba4d:	mov    al,0xc8
  41ba4f:	xchg   esi,eax
  41ba50:	cmp    edi,edi
  41ba52:	or     eax,0x62f91cf0
  41ba57:	popf   
  41ba58:	pop    ebx
  41ba59:	add    al,0x16
  41ba5b:	pop    edi
  41ba5c:	mov    BYTE PTR [ebp-0x31],cl
  41ba5f:	cmp    al,0xad
  41ba61:	dec    ebx
  41ba62:	loopne 0x41bab0
  41ba64:	sub    al,0x25
  41ba66:	fcmovnbe st,st(5)
  41ba68:	pop    esi
  41ba69:	(bad)  
  41ba6a:	rcl    DWORD PTR [esi+ecx*4],1
  41ba6d:	lahf   
  41ba6e:	cmp    ebp,DWORD PTR [ecx+0x6d]
  41ba71:	imul   ebp,DWORD PTR [eax+0x48941b2b],0x31
  41ba78:	add    eax,0x6063e6e8
  41ba7d:	cmp    eax,0x9b85d72f
  41ba82:	fcom   QWORD PTR [eax]
  41ba84:	scas   al,BYTE PTR es:[edi]
  41ba85:	push   0xffffff92
  41ba87:	xchg   si,ax
  41ba89:	mov    dl,BYTE PTR [edi+0x2f]
  41ba8c:	fld    DWORD PTR [ecx+0x53]
  41ba8f:	mov    cl,0x1d
  41ba91:	fiadd  DWORD PTR [edi-0x7c337dc7]
  41ba97:	mov    al,ds:0x7baf292b
  41ba9c:	pop    edx
  41ba9d:	clc    
  41ba9e:	xor    dh,ah
  41baa0:	push   ss
  41baa1:	and    BYTE PTR [ecx],bl
  41baa3:	cli    
  41baa4:	retf   
  41baa5:	enter  0xf7db,0x21
  41baa9:	and    BYTE PTR [ebx-0x2048997a],ah
  41baaf:	aaa    
  41bab0:	sbb    dl,bl
  41bab2:	ss sbb bl,ch
  41bab5:	inc    eax
  41bab6:	add    DWORD PTR [edx+0x2377fb9e],eax
  41babc:	nop
  41babd:	pop    ebx
  41babe:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41bac0:	mov    ch,0xbc
  41bac2:	frndint 
  41bac4:	clc    
  41bac5:	cli    
  41bac6:	push   ebx
  41bac7:	mov    edi,0x636c97b2
  41bacc:	ins    DWORD PTR es:[edi],dx
  41bacd:	jae    0x41baea
  41bacf:	out    0xb8,al
  41bad1:	loop   0x41ba6e
  41bad3:	retf   
  41bad4:	leave  
  41bad5:	test   al,0x5d
  41bad7:	xchg   ebx,eax
  41bad8:	dec    edi
  41bad9:	add    DWORD PTR [eax],esp
  41badb:	mov    edx,0x51d32c1d
  41bae0:	xor    eax,0xbaf5eded
  41bae5:	outs   dx,BYTE PTR ds:[esi]
  41bae6:	(bad)  
  41bae8:	adc    al,0x90
  41baea:	pop    ebp
  41baeb:	pop    es
  41baec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baed:	inc    edi
  41baee:	add    BYTE PTR [edi-0x25],bl
  41baf1:	imul   ebp
  41baf3:	or     DWORD PTR [edi],eax
  41baf5:	sbb    eax,0x6b622fc0
  41bafa:	fwait
  41bafb:	lock push 0x40
  41bafe:	idiv   DWORD PTR [edx-0x2b322c54]
  41bb04:	sub    ebx,ebx
  41bb06:	call   0xec07647a
  41bb0b:	and    al,0x90
  41bb0d:	loop   0x41bb2e
  41bb0f:	xor    BYTE PTR [eax],0x24
  41bb12:	sbb    esi,DWORD PTR [edi]
  41bb14:	xchg   esp,esi
  41bb16:	loopne 0x41bb43
  41bb18:	inc    ecx
  41bb19:	(bad)  
  41bb1a:	fs cs xor al,0x9a
  41bb1e:	(bad)  [eax]
  41bb20:	xchg   BYTE PTR [esi+0x282fe1a8],bl
  41bb26:	jno    0x41bb31
  41bb28:	gs inc edx
  41bb2a:	jl     0x41bbaa
  41bb2c:	in     al,0x8e
  41bb2e:	lods   eax,DWORD PTR ds:[esi]
  41bb2f:	pushf  
  41bb30:	cmp    BYTE PTR [esi-0x21],al
  41bb33:	int3   
  41bb34:	mov    al,ah
  41bb36:	cmp    ecx,DWORD PTR [eax+0x49a7f1de]
  41bb3c:	loop   0x41bb0e
  41bb3e:	mov    eax,0x8cfd9cac
  41bb43:	(bad)  
  41bb44:	xchg   ecx,eax
  41bb45:	dec    ebx
  41bb46:	add    BYTE PTR [edx],0xab
  41bb49:	fldl2e 
  41bb4b:	dec    ebx
  41bb4c:	add    edx,ecx
  41bb4e:	in     eax,dx
  41bb4f:	aam    0x1c
  41bb51:	mov    edi,0xa6a2aeef
  41bb56:	sbb    ch,dh
  41bb58:	out    0xa6,al
  41bb5a:	test   al,0xc8
  41bb5c:	out    dx,al
  41bb5d:	stos   DWORD PTR es:[edi],eax
  41bb5e:	mov    ebx,0x32049cd
  41bb63:	inc    edi
  41bb64:	xor    eax,0x100b563c
  41bb69:	clc    
  41bb6a:	mov    ebp,0x9b9090e
  41bb6f:	ret    
  41bb70:	lea    ebx,[esi-0x125c0f7]
  41bb76:	lahf   
  41bb77:	sub    BYTE PTR [ebp+eiz*4+0x1188cc2b],ah
  41bb7e:	mov    esi,0x298904b1
  41bb83:	div    edi
  41bb85:	xchg   edx,eax
  41bb86:	xchg   esi,eax
  41bb87:	std    
  41bb88:	mov    esi,0x85be4d12
  41bb8d:	loopne 0x41bbfa
  41bb8f:	ret    0xb178
  41bb92:	xchg   esp,eax
  41bb93:	adc    eax,0x41fc05e0
  41bb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb99:	ja     0x41bb1f
  41bb9b:	xchg   bh,cl
  41bb9d:	pop    edi
  41bb9e:	push   cs
  41bb9f:	loop   0x41bb56
  41bba1:	adc    al,0x3c
  41bba3:	dec    ecx
  41bba4:	sub    BYTE PTR [ecx+ecx*2+0x1b25197b],dl
  41bbab:	repnz arpl WORD PTR [ebp+edx*4+0x67],sp
  41bbb0:	mov    eax,DWORD PTR [eax-0x4e]
  41bbb3:	inc    esp
  41bbb4:	fild   WORD PTR [esi]
  41bbb6:	in     al,dx
  41bbb7:	mov    cl,0x69
  41bbb9:	pop    edi
  41bbba:	add    ecx,edx
  41bbbc:	jp     0x41bb57
  41bbbe:	xchg   esi,eax
  41bbbf:	aaa    
  41bbc0:	and    al,BYTE PTR [ebx+0x73]
  41bbc3:	or     al,0x8e
  41bbc5:	gs adc eax,0x110dad55
  41bbcb:	cdq    
  41bbcc:	test   eax,0xf9d23cba
  41bbd1:	mov    ebp,0xe73685cc
  41bbd6:	push   0xbbe8c0e3
  41bbdb:	retf   
  41bbdc:	add    ecx,DWORD PTR [esp+ecx*2-0x51ffb6a7]
  41bbe3:	in     al,dx
  41bbe4:	cmp    al,0xfa
  41bbe6:	and    DWORD PTR [eax],0x33
  41bbe9:	cli    
  41bbea:	add    eax,0xf5f2d562
  41bbef:	sbb    DWORD PTR [edi+0x53785b04],0x6330f5ce
  41bbf9:	(bad)  
  41bbfa:	inc    DWORD PTR ds:0xa58fde91
  41bc00:	mov    bh,0xb9
  41bc02:	loop   0x41bbc2
  41bc04:	cwde   
  41bc05:	push   ebx
  41bc06:	scas   eax,DWORD PTR es:[edi]
  41bc07:	in     eax,dx
  41bc08:	les    edx,FWORD PTR [eax-0x11]
  41bc0b:	inc    eax
  41bc0c:	and    BYTE PTR [edi],dh
  41bc0e:	int    0x3
  41bc10:	push   edi
  41bc11:	aad    0x91
  41bc13:	not    DWORD PTR [ecx]
  41bc15:	xchg   ebx,eax
  41bc16:	ror    BYTE PTR [edi+0x7a],0x6c
  41bc1a:	enter  0x9f00,0xa3
  41bc1e:	and    bh,BYTE PTR [edi+ecx*8-0x3a7f486b]
  41bc25:	sub    DWORD PTR [ebp+0x61499385],esi
  41bc2b:	sti    
  41bc2c:	rol    DWORD PTR [ebx+0x4afafc23],0xc7
  41bc33:	aad    0x66
  41bc35:	xchg   esi,eax
  41bc36:	in     al,dx
  41bc37:	push   eax
  41bc38:	inc    esp
  41bc39:	mov    edx,0x599b41aa
  41bc3e:	ins    BYTE PTR es:[edi],dx
  41bc3f:	mov    edi,DWORD PTR [ebx]
  41bc41:	rsm    
  41bc43:	shl    BYTE PTR [edx],1
  41bc45:	mov    al,gs:0x70101823
  41bc4b:	(bad)  
  41bc4c:	in     eax,dx
  41bc4d:	mov    dl,0x94
  41bc4f:	repz dec ebp
  41bc51:	xor    bl,BYTE PTR [ebx-0x4d]
  41bc54:	int    0x9f
  41bc56:	xchg   ecx,eax
  41bc57:	inc    eax
  41bc58:	mov    BYTE PTR [edx-0x3e],bl
  41bc5b:	xor    ecx,edi
  41bc5d:	stos   DWORD PTR es:[edi],eax
  41bc5e:	xchg   esi,eax
  41bc5f:	inc    edx
  41bc60:	mov    ecx,0xa71764d2
  41bc65:	pop    esi
  41bc66:	call   0x920:0xdb515946
  41bc6d:	addr16 mov dh,0xad
  41bc70:	sub    ch,BYTE PTR [edx-0x3aa89961]
  41bc76:	(bad)  
  41bc77:	fldenv [edx+edi*8+0x31]
  41bc7b:	mov    dl,0xe8
  41bc7d:	loopne 0x41bc6b
  41bc7f:	sbb    esp,ebx
  41bc81:	sub    al,0xf
  41bc83:	outs   dx,DWORD PTR ds:[esi]
  41bc84:	in     eax,0x75
  41bc86:	inc    ebx
  41bc87:	adc    al,0x14
  41bc89:	jbe    0x41bc6d
  41bc8b:	fld    QWORD PTR [ebx]
  41bc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc8e:	lahf   
  41bc8f:	push   ecx
  41bc90:	iret   
  41bc91:	retf   0xcce0
  41bc94:	test   BYTE PTR [ecx+edx*8-0x4533109],dh
  41bc9b:	je     0x41bc5f
  41bc9d:	call   0x59cd:0x3dd9061e
  41bca4:	mov    dl,0x27
  41bca6:	gs pusha 
  41bca8:	mov    esi,0xbafb78fe
  41bcad:	sbb    eax,0x62454b9d
  41bcb2:	sbb    al,0xa5
  41bcb4:	mov    edx,0xf59cc1ea
  41bcb9:	(bad)  
  41bcba:	dec    ebp
  41bcbb:	bound  eax,QWORD PTR [esp+edx*1]
  41bcbe:	les    ebx,FWORD PTR [ebx+0x28da65c4]
  41bcc4:	aad    0x9d
  41bcc6:	sub    ebp,DWORD PTR ds:[ebx]
  41bcc9:	push   es
  41bcca:	mov    edi,0x2eda420
  41bccf:	sub    eax,0x19d96330
  41bcd4:	mov    ah,0xf1
  41bcd6:	jmp    FWORD PTR [eax]
  41bcd8:	sbb    ebp,esp
  41bcda:	mov    ds:0x171d23bd,eax
  41bcdf:	pop    edi
  41bce0:	out    0x7a,al
  41bce2:	sbb    eax,0xbf933a19
  41bce7:	sahf   
  41bce8:	test   BYTE PTR [ecx+0x38],0x3a
  41bcec:	call   0x7770:0xa18b976a
  41bcf3:	xor    bl,bh
  41bcf5:	cwde   
  41bcf6:	xorps  xmm5,XMMWORD PTR [edi]
  41bcf9:	ins    DWORD PTR es:[edi],dx
  41bcfa:	loopne 0x41bc9c
  41bcfc:	mov    dl,0xa3
  41bcfe:	ja     0x41bcf8
  41bd00:	mov    al,ds:0xcdcb3a66
  41bd05:	in     al,dx
  41bd06:	shl    BYTE PTR [ebp-0xaf9ce42],1
  41bd0c:	jb     0x41bcd8
  41bd0e:	test   BYTE PTR [edi-0x53622e5],0x14
  41bd15:	cmp    cl,BYTE PTR [ebx+0x73667ce9]
  41bd1b:	(bad)  
  41bd1c:	ins    BYTE PTR es:[edi],dx
  41bd1d:	inc    edx
  41bd1e:	jg     0x41bd27
  41bd20:	outs   dx,DWORD PTR ds:[esi]
  41bd21:	stos   BYTE PTR es:[edi],al
  41bd22:	loope  0x41bd67
  41bd24:	sar    BYTE PTR [esi-0xd],0x71
  41bd28:	rsm    
  41bd2a:	or     al,0xe8
  41bd2c:	lock in al,0x76
  41bd2f:	xor    eax,0xd3f56734
  41bd34:	mov    bl,0x17
  41bd36:	hlt    
  41bd37:	xlat   BYTE PTR ds:[ebx]
  41bd38:	pushf  
  41bd39:	pushf  
  41bd3a:	js     0x41bcd0
  41bd3c:	push   esp
  41bd3d:	jecxz  0x41bd41
  41bd3f:	sbb    bh,dh
  41bd41:	mov    ch,0xb2
  41bd43:	cdq    
  41bd44:	cmp    BYTE PTR [eax],bh
  41bd46:	cmp    al,0xb7
  41bd48:	cld    
  41bd49:	repnz or edi,DWORD PTR [eax-0x5de65953]
  41bd50:	retf   
  41bd51:	jmp    0x63f9:0x4456f625
  41bd58:	test   ah,0x1b
  41bd5b:	mov    edi,0x6c5994ee
  41bd60:	sub    DWORD PTR [ebx+0x47d8ef3b],edx
  41bd66:	or     eax,0x38240600
  41bd6b:	into   
  41bd6c:	cmp    ecx,0xe3137415
  41bd72:	mov    edx,0xe02110bf
  41bd77:	(bad)  
  41bd78:	mov    edi,0xdf6dcb80
  41bd7d:	test   al,0xf5
  41bd7f:	jb     0x41bd92
  41bd81:	add    eax,0x82b48ca8
  41bd86:	xchg   ebp,eax
  41bd87:	test   BYTE PTR [edi-0xb],al
  41bd8a:	out    0xb0,al
  41bd8c:	inc    esp
  41bd8d:	retf   
  41bd8e:	retf   
  41bd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd90:	les    edx,FWORD PTR [ecx-0x23db50ca]
  41bd96:	icebp  
  41bd97:	push   es
  41bd98:	fisttp DWORD PTR [ecx-0x3bbddef1]
  41bd9e:	pop    ss
  41bd9f:	xor    BYTE PTR [edx+0x26a866d7],bl
  41bda5:	adc    eax,0x17d8577e
  41bdaa:	sbb    eax,0xa891e053
  41bdaf:	enter  0x66d2,0x2c
  41bdb3:	dec    esp
  41bdb4:	dec    esi
  41bdb5:	pop    ss
  41bdb6:	dec    edi
  41bdb7:	popa   
  41bdb8:	call   0x3b6b0dc3
  41bdbd:	fnstcw WORD PTR [eax-0x26805393]
  41bdc3:	add    bl,BYTE PTR [edx-0x733d0a2a]
  41bdc9:	imul   ecx,DWORD PTR [esi-0x47],0xf9c4332
  41bdd0:	mov    eax,0xd9f0693c
  41bdd5:	jno    0x41bd72
  41bdd7:	rol    DWORD PTR [edi],1
  41bdd9:	xor    al,0x15
  41bddb:	into   
  41bddc:	push   0x9993abdc
  41bde1:	or     bl,BYTE PTR [ebp-0x67]
  41bde4:	mov    eax,ds:0xf1739807
  41bde9:	fst    QWORD PTR [esp+edx*2+0x573d92ad]
  41bdf0:	mov    eax,ds:0x164cd22
  41bdf5:	(bad)  
  41bdf6:	out    dx,eax
  41bdf7:	and    eax,0xc15744d2
  41bdfc:	(bad)  
  41bdfd:	shl    bl,0xa6
  41be00:	jno    0x41be51
  41be02:	push   ss
  41be03:	sbb    dl,ch
  41be05:	inc    esi
  41be06:	and    esi,edi
  41be08:	daa    
  41be09:	dec    esp
  41be0a:	les    eax,FWORD PTR [ecx]
  41be0c:	(bad)  
  41be0e:	lds    ebp,FWORD PTR [esi]
  41be10:	jne    0x41bdd7
  41be12:	loope  0x41bd95
  41be14:	mov    ebx,0xfe194867
  41be19:	(bad)  
  41be1a:	fisttp WORD PTR [ebx-0x43548a89]
  41be20:	rol    DWORD PTR [di],1
  41be23:	pop    ecx
  41be24:	jb     0x41bda8
  41be26:	add    DWORD PTR [ebp-0x7],esi
  41be29:	add    BYTE PTR [eax+0x2f],cl
  41be2c:	sbb    dh,BYTE PTR [esi-0x20]
  41be2f:	cmp    al,0x1d
  41be31:	icebp  
  41be32:	mov    bl,0x90
  41be34:	(bad)  
  41be36:	(bad)  
  41be37:	ds stos BYTE PTR es:[edi],al
  41be39:	fisubr DWORD PTR [eax-0x6ae9b90e]
  41be3f:	cmp    al,0xea
  41be41:	mov    eax,ebx
  41be43:	lock push ss
  41be45:	mov    ds:0x708cd2bf,al
  41be4a:	fidiv  WORD PTR [ecx-0x7d]
  41be4d:	aas    
  41be4e:	adc    al,0x83
  41be50:	push   edx
  41be51:	mov    bh,0x96
  41be53:	mov    dl,BYTE PTR [edi+0x46]
  41be56:	pop    ds
  41be57:	cmp    al,0x25
  41be59:	or     DWORD PTR [edx+0x43],eax
  41be5c:	or     edx,DWORD PTR [edi]
  41be5e:	xchg   ebp,eax
  41be5f:	dec    edi
  41be60:	out    0x1b,eax
  41be62:	sti    
  41be63:	ror    BYTE PTR [edi+eax*8],1
  41be66:	inc    esi
  41be67:	fimul  DWORD PTR [edi-0x3ced486e]
  41be6d:	push   0x3daed155
  41be72:	cmc    
  41be73:	inc    esp
  41be74:	mov    al,ds:0xea792829
  41be79:	(bad)  
  41be7a:	(bad)  
  41be7b:	and    ebx,DWORD PTR [eax-0x88ed3c]
  41be81:	fistp  QWORD PTR fs:[edi+eiz*1-0x3898c252]
  41be89:	xchg   ebp,eax
  41be8a:	stos   DWORD PTR es:[edi],eax
  41be8b:	push   edx
  41be8c:	jg     0x41be9e
  41be8e:	retf   0xe1db
  41be91:	sub    esi,DWORD PTR [ebp-0x2ac7d163]
  41be97:	fsubr  st,st(3)
  41be99:	adc    al,0x2a
  41be9b:	addr16 (bad) 
  41be9d:	or     cl,BYTE PTR [edi+0x215e36ba]
  41bea3:	aam    0x76
  41bea5:	inc    ecx
  41bea6:	add    DWORD PTR [edx+0x302ebd77],edx
  41beac:	sbb    al,dl
  41beae:	or     ecx,esi
  41beb0:	pop    eax
  41beb1:	sbb    cl,0x7f
  41beb4:	jns    0x41beee
  41beb6:	shl    DWORD PTR [ebx],0x8a
  41beb9:	xor    al,BYTE PTR [ecx+0x5dd03e7d]
  41bebf:	inc    ebp
  41bec0:	imul   ecx,edx,0xe31aea69
  41bec6:	retf   
  41bec7:	mov    al,ds:0xe7e0d823
  41becc:	popf   
  41becd:	xlat   BYTE PTR ds:[ebx]
  41bece:	sbb    ah,ah
  41bed0:	sbb    BYTE PTR [ecx+0x6f55a251],0x3
  41bed7:	cmp    bl,BYTE PTR [edi-0x44eebe83]
  41bedd:	das    
  41bede:	jmp    DWORD PTR [ecx-0x74997295]
  41bee4:	fs cdq 
  41bee6:	loopne 0x41becf
  41bee8:	ret    0xf07
  41beeb:	jp     0x41bef9
  41beed:	popa   
  41beee:	in     al,dx
  41beef:	or     eax,0xd472cdb8
  41bef4:	mov    dl,0x89
  41bef6:	adc    eax,0x5edcbb17
  41befb:	cmp    al,0x89
  41befd:	sub    eax,0xc49144b5
  41bf02:	sbb    BYTE PTR [edx+0x32],dl
  41bf05:	push   cs
  41bf06:	ss adc al,0x9e
  41bf09:	lock pop sp
  41bf0c:	push   esi
  41bf0d:	push   ss
  41bf0e:	jno    0x41bf41
  41bf10:	pop    edi
  41bf11:	ror    BYTE PTR gs:[ecx],0x9b
  41bf15:	or     al,BYTE PTR [edx+0x62440e24]
  41bf1b:	xor    edi,DWORD PTR [eax]
  41bf1d:	jo     0x41bf6e
  41bf1f:	ins    BYTE PTR es:[edi],dx
  41bf20:	mov    edx,0xe20dcd76
  41bf25:	jmp    0x41bed0
  41bf27:	jg     0x41bf14
  41bf29:	sbb    al,0x2b
  41bf2b:	push   es
  41bf2c:	push   ecx
  41bf2d:	sub    eax,0x2aebbae0
  41bf32:	js     0x41bf9e
  41bf34:	in     al,0xe4
  41bf36:	cld    
  41bf37:	mov    ch,0x82
  41bf39:	aad    0x0
  41bf3b:	fs push es
  41bf3d:	xchg   esi,eax
  41bf3e:	cld    
  41bf3f:	dec    esp
  41bf40:	adc    edx,DWORD PTR ss:[eax-0x6d]
  41bf44:	sar    DWORD PTR [edi-0x34],1
  41bf47:	stos   DWORD PTR es:[edi],eax
  41bf48:	dec    ebx
  41bf49:	inc    ebp
  41bf4a:	mov    ch,0xf5
  41bf4c:	fsub   QWORD PTR [edi-0x2d7c67fb]
  41bf52:	loopne 0x41bfd2
  41bf54:	loope  0x41bf6d
  41bf56:	inc    ecx
  41bf57:	in     eax,0x6
  41bf59:	jecxz  0x41bfac
  41bf5b:	dec    ebp
  41bf5c:	data16 and al,0xd2
  41bf5f:	ins    BYTE PTR es:[edi],dx
  41bf60:	test   eax,0xf3df0ac2
  41bf65:	ds jne 0x41bf07
  41bf68:	push   cs
  41bf69:	arpl   bp,ax
  41bf6b:	mov    cl,0xcf
  41bf6d:	daa    
  41bf6e:	pop    ebp
  41bf6f:	les    ecx,FWORD PTR [eax+0x1f5cf845]
  41bf75:	or     al,0xae
  41bf77:	out    dx,al
  41bf78:	or     ah,dl
  41bf7a:	loopne 0x41bf99
  41bf7c:	inc    edx
  41bf7d:	fsubr  DWORD PTR [edi+ebp*8-0x7359711a]
  41bf84:	and    dh,bh
  41bf86:	mov    edi,DWORD PTR [edi+0x1fb98713]
  41bf8c:	add    ebp,ebx
  41bf8e:	dec    BYTE PTR ds:0x1dab28e1
  41bf94:	jns    0x41bfc3
  41bf96:	inc    ebx
  41bf97:	nop
  41bf98:	cmp    cl,BYTE PTR [ebx]
  41bf9a:	mov    esi,0x93045d65
  41bf9f:	inc    eax
  41bfa0:	mov    BYTE PTR [eax-0x2838f02b],ch
  41bfa6:	jl     0x41bfe5
  41bfa8:	jge    0x41bf9a
  41bfaa:	adc    ah,BYTE PTR [ebx+0x5527fd7]
  41bfb0:	shl    BYTE PTR [edi],0x1
  41bfb3:	mov    dl,0xad
  41bfb5:	inc    edx
  41bfb6:	cdq    
  41bfb7:	cwde   
  41bfb8:	cmp    eax,0x36998066
  41bfbd:	sbb    bh,dl
  41bfbf:	add    esi,DWORD PTR [ecx]
  41bfc1:	add    eax,0xabf2a15f
  41bfc6:	inc    esi
  41bfc7:	cli    
  41bfc8:	hlt    
  41bfc9:	dec    edx
  41bfca:	xchg   DWORD PTR [ecx],ebp
  41bfcc:	mov    edx,0x2a705a23
  41bfd1:	(bad)  
  41bfd2:	loopne 0x41c006
  41bfd4:	shl    BYTE PTR [edx],cl
  41bfd6:	or     eax,DWORD PTR [ecx-0x2f]
  41bfd9:	sbb    esp,ecx
  41bfdb:	add    eax,0x3169a3f2
  41bfe0:	fld    QWORD PTR [edx+0x3f]
  41bfe3:	daa    
  41bfe4:	and    eax,0xdd27e36b
  41bfe9:	nop
  41bfea:	sub    eax,0x75d6cbac
  41bfef:	mov    cl,0x7e
  41bff1:	imul   esp,DWORD PTR [esi+0x70],0x2e
  41bff5:	push   esp
  41bff6:	cmp    DWORD PTR [ecx-0x3b],ebp
  41bff9:	adc    DWORD PTR [ebx+0x7b],ecx
  41bffc:	loop   0x41c036
  41bffe:	stc    
  41bfff:	xchg   ebx,eax
  41c000:	mov    cl,0x22
  41c002:	fadd   DWORD PTR [ebx-0x7]
  41c005:	fisttp DWORD PTR [ebx]
  41c007:	clc    
  41c008:	adc    al,0xc9
  41c00a:	(bad)  
  41c00b:	bound  esi,QWORD PTR [edi+ebp*1]
  41c00e:	xor    edi,0xde7943c3
  41c014:	lock iret 
  41c016:	loope  0x41c044
  41c018:	sub    BYTE PTR es:0xf90fb914,bl
  41c01f:	test   al,0x26
  41c021:	xchg   ecx,eax
  41c022:	xchg   DWORD PTR [ebx],edx
  41c024:	xor    eax,0x17b7b8e1
  41c029:	push   edi
  41c02a:	adc    al,0x1e
  41c02c:	cmc    
  41c02d:	(bad)  
  41c02e:	lds    eax,FWORD PTR [edx+0xa8309ed]
  41c034:	repnz push ebp
  41c036:	xor    al,0x5
  41c038:	jnp    0x41bfe6
  41c03a:	jns    0x41c096
  41c03c:	xchg   edi,eax
  41c03d:	mov    ch,0xf
  41c03f:	and    BYTE PTR [esi],0x52
  41c042:	cmp    eax,0xc07d86fb
  41c047:	cdq    
  41c048:	aaa    
  41c049:	les    ebp,FWORD PTR [ebp+0x67d75370]
  41c04f:	pop    es
  41c050:	test   al,0xe6
  41c052:	cdq    
  41c053:	mov    ecx,0x9162c671
  41c058:	test   al,0x86
  41c05a:	mov    ah,0xa3
  41c05c:	lds    esi,FWORD PTR [edx]
  41c05e:	mov    ch,0x62
  41c060:	fnsave [edi+0x13]
  41c063:	cmp    eax,0x13ede3c3
  41c068:	mov    ds:0xa9984808,eax
  41c06d:	fst    QWORD PTR [ebx-0x7bdecee8]
  41c073:	nop
  41c074:	and    ch,BYTE PTR [esi-0xb883696]
  41c07a:	add    BYTE PTR [ecx],cl
  41c07c:	and    DWORD PTR [ebx],esp
  41c07e:	ror    DWORD PTR [eax+0x7d],1
  41c081:	mov    edx,0xbd374dd3
  41c086:	cmp    eax,0x632b428e
  41c08b:	retf   
  41c08c:	sub    al,0x5a
  41c08e:	lea    ebx,ds:0x4e7c06a
  41c094:	test   ebp,eax
  41c096:	push   esp
  41c097:	or     bh,ch
  41c099:	ins    DWORD PTR es:[edi],dx
  41c09a:	sbb    eax,DWORD PTR [edx-0x6f]
  41c09d:	popf   
  41c09e:	out    dx,al
  41c09f:	cmp    DWORD PTR [eax+0x49507c8a],ebp
  41c0a5:	push   0xc79bb146
  41c0aa:	adc    al,0x38
  41c0ac:	xchg   esp,eax
  41c0ad:	adc    al,0xaf
  41c0af:	jmp    0x41c0de
  41c0b1:	(bad)  
  41c0b2:	cmp    eax,0x71919162
  41c0b7:	ins    BYTE PTR es:[edi],dx
  41c0b8:	fcom   QWORD PTR [ecx-0x2]
  41c0bb:	stc    
  41c0bc:	pop    ss
  41c0bd:	mov    ch,0x4e
  41c0bf:	test   BYTE PTR [ebx],al
  41c0c1:	dec    esp
  41c0c2:	xor    esp,DWORD PTR [edx-0x3ac6caa4]
  41c0c8:	xchg   ebx,eax
  41c0c9:	leave  
  41c0ca:	cli    
  41c0cb:	ja     0x41c06b
  41c0cd:	pop    esp
  41c0ce:	mov    esi,0x4b32c05a
  41c0d3:	int3   
  41c0d4:	jne    0x41c0a2
  41c0d6:	ds jns 0x41c07d
  41c0d9:	lods   al,BYTE PTR ds:[esi]
  41c0da:	pushf  
  41c0db:	sub    eax,0xbd9ed3d1
  41c0e0:	jle    0x41c118
  41c0e2:	xlat   BYTE PTR ds:[ebx]
  41c0e3:	neg    BYTE PTR [ebx-0x78]
  41c0e6:	(bad)  
  41c0e7:	inc    edi
  41c0e8:	pop    esi
  41c0e9:	mov    edx,0xde204412
  41c0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ef:	add    esp,ecx
  41c0f1:	sub    DWORD PTR [edi+eax*4],edi
  41c0f4:	je     0x41c15a
  41c0f6:	clc    
  41c0f7:	nop
  41c0f8:	or     DWORD PTR [ecx],esi
  41c0fa:	ss ret 0xa5bd
  41c0fe:	lods   eax,DWORD PTR ds:[esi]
  41c0ff:	cmp    eax,0x1b065763
  41c104:	xor    DWORD PTR [ebx+0x1e],edx
  41c107:	jne    0x41c0d2
  41c109:	imul   ebx,ecx,0xc9b5fa5c
  41c10f:	mov    ebx,0xec19f206
  41c114:	dec    edi
  41c115:	and    al,0xdb
  41c117:	fcmovnu st,st(0)
  41c119:	ds jl  0x41c145
  41c11c:	imul   BYTE PTR [ecx-0x64]
  41c11f:	addr16 (bad) 
  41c122:	(bad)  
  41c123:	retf   0x2625
  41c126:	hlt    
  41c127:	dec    DWORD PTR [esi+0x39]
  41c12a:	enterw 0x94a0,0x47
  41c12f:	sbb    esp,DWORD PTR [edi]
  41c131:	dec    ecx
  41c132:	sub    ah,BYTE PTR [edx-0x421efea2]
  41c138:	fnstcw WORD PTR [ebx-0x38]
  41c13b:	push   ss
  41c13c:	cmp    DWORD PTR [ebp+0x55],ecx
  41c13f:	test   BYTE PTR [eax+0x30],al
  41c142:	mov    ch,0x2
  41c144:	mov    esi,0x7b9831
  41c149:	push   ds
  41c14a:	sub    eax,esp
  41c14c:	pop    esp
  41c14d:	or     edi,DWORD PTR [ebp+0x59]
  41c150:	cli    
  41c151:	sub    cl,BYTE PTR [eax]
  41c153:	or     bl,BYTE PTR [eax]
  41c155:	ins    BYTE PTR es:[edi],dx
  41c156:	(bad)  
  41c157:	sub    DWORD PTR [ebp+0x7c74c933],esp
  41c15d:	in     eax,0xc6
  41c15f:	test   BYTE PTR [edx],al
  41c161:	pop    ecx
  41c162:	push   ebp
  41c163:	sub    ebp,eax
  41c165:	xor    dl,BYTE PTR [si]
  41c168:	mov    ebx,0x1a83b204
  41c16d:	popa   
  41c16e:	sub    esi,DWORD PTR [ecx]
  41c170:	enter  0x74ad,0x24
  41c174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c175:	test   BYTE PTR [ecx],al
  41c177:	inc    edi
  41c178:	xchg   ebp,eax
  41c179:	add    ecx,ecx
  41c17b:	sti    
  41c17c:	outs   dx,BYTE PTR ds:[esi]
  41c17e:	cdq    
  41c17f:	aaa    
  41c180:	jle    0x41c18a
  41c182:	jnp    0x41c19c
  41c184:	daa    
  41c185:	mov    eax,0xa66dd2c3
  41c18a:	mov    edi,?
  41c18c:	adc    DWORD PTR [ebx-0x25],edi
  41c18f:	inc    ebx
  41c190:	adc    ecx,DWORD PTR [eax+0x4161cf3b]
  41c196:	mov    edx,0x9ebd4b9b
  41c19b:	ror    ebx,cl
  41c19d:	icebp  
  41c19e:	xor    eax,0xa332ca6e
  41c1a3:	test   DWORD PTR [edx],esp
  41c1a5:	aad    0x9f
  41c1a7:	add    al,0x79
  41c1a9:	in     al,dx
  41c1aa:	popf   
  41c1ab:	xor    edi,ecx
  41c1ad:	test   eax,0xd742427d
  41c1b2:	(bad)  [eax-0x247a6166]
  41c1b8:	loopne 0x41c19f
  41c1ba:	mov    dh,0x47
  41c1bc:	je     0x41c234
  41c1be:	mov    ax,0xc7d1
  41c1c2:	mov    cl,ah
  41c1c4:	add    ecx,0xc
  41c1c7:	cwde   
  41c1c8:	or     BYTE PTR gs:[ebp+esi*8-0x3763ee10],dl
  41c1d0:	test   al,0xd4
  41c1d2:	out    0x3c,al
  41c1d4:	jns    0x41c166
  41c1d6:	shl    DWORD PTR [edx-0x1e],cl
  41c1d9:	out    dx,eax
  41c1da:	adc    al,0xb4
  41c1dc:	retf   0x96dc
  41c1df:	test   al,0xdc
  41c1e1:	push   ebx
  41c1e2:	daa    
  41c1e3:	and    esp,ecx
  41c1e5:	in     eax,dx
  41c1e6:	mov    DWORD PTR [esi],eax
  41c1e8:	mov    ds:0x20ce33a,eax
  41c1ed:	sub    cl,ch
  41c1ef:	lods   al,BYTE PTR ds:[esi]
  41c1f0:	push   ebp
  41c1f1:	xor    al,ch
  41c1f3:	cmp    BYTE PTR [ebx+0x3abe0d34],dh
  41c1f9:	enter  0x7f2a,0x91
  41c1fd:	arpl   WORD PTR [edx],sp
  41c1ff:	and    al,0x1
  41c201:	stc    
  41c202:	lahf   
  41c203:	(bad)  
  41c204:	pushf  
  41c205:	(bad)
  41c209:	mov    al,ds:0xae76962e
  41c20e:	mov    cl,0xc
  41c210:	xchg   ebx,ebx
  41c212:	adc    dl,BYTE PTR [edi+ebp*8]
  41c215:	ror    BYTE PTR [ebp+0x2b],0xd3
  41c219:	mov    dl,ch
  41c21b:	clc    
  41c21c:	in     al,0x60
  41c21e:	sbb    BYTE PTR [esi-0x4c],bl
  41c221:	aam    0x75
  41c223:	fwait
  41c224:	leave  
  41c225:	pop    es
  41c226:	in     al,dx
  41c227:	pop    edx
  41c228:	pop    ebx
  41c229:	pop    ecx
  41c22a:	inc    ebx
  41c22b:	daa    
  41c22c:	pop    edx
  41c22d:	popf   
  41c22e:	imul   esp,DWORD PTR [edi],0xb60467aa
  41c234:	jno    0x77014cc0
  41c23a:	fimul  WORD PTR [esi-0x4c2627d0]
  41c240:	retf   0xbc45
  41c243:	cli    
  41c244:	popf   
  41c245:	pop    eax
  41c246:	sbb    esp,eax
  41c248:	or     BYTE PTR [esi+0x66],bh
  41c24b:	out    dx,eax
  41c24c:	push   0x1139f363
  41c251:	mov    esi,0xc8ce5c51
  41c256:	popa   
  41c257:	ins    BYTE PTR es:[edi],dx
  41c258:	mov    al,dl
  41c25a:	xchg   esi,eax
  41c25b:	(bad)  
  41c25c:	int3   
  41c25d:	(bad)  
  41c25f:	not    BYTE PTR ds:0x457b7a42
  41c265:	push   0x12f544db
  41c26a:	mov    ds:0x17fc53c,al
  41c26f:	cli    
  41c270:	sub    BYTE PTR [edx],dl
  41c272:	gs aas 
  41c274:	loopne 0x41c200
  41c276:	xchg   ebp,eax
  41c277:	xor    esp,ebp
  41c279:	sub    edi,0x56747053
  41c27f:	lds    eax,FWORD PTR [esp+0x4ae266f6]
  41c286:	in     eax,0x66
  41c288:	mov    edx,ecx
  41c28a:	pop    eax
  41c28b:	push   es
  41c28c:	sbb    eax,0x11926e87
  41c291:	retf   
  41c292:	lock shl BYTE PTR [ebp+0x6f],cl
  41c296:	xor    dl,dl
  41c298:	aam    0x38
  41c29a:	jae    0x41c2bf
  41c29c:	ret    
  41c29d:	and    BYTE PTR [ebp+0x43ed8c77],dl
  41c2a3:	leave  
  41c2a4:	or     ecx,DWORD PTR [esi+edx*1+0x63]
  41c2a8:	push   esi
  41c2a9:	je     0x41c2a8
  41c2ab:	adc    BYTE PTR [esi-0x37],cl
  41c2ae:	push   ds
  41c2af:	clc    
  41c2b0:	or     al,0x84
  41c2b2:	retw   0x7dce
  41c2b6:	std    
  41c2b7:	test   eax,0xf126c6b3
  41c2bc:	scas   eax,DWORD PTR es:[edi]
  41c2bd:	(bad)  
  41c2be:	ins    DWORD PTR es:[edi],dx
  41c2bf:	stc    
  41c2c0:	mov    ah,BYTE PTR [ecx+0x29]
  41c2c3:	out    dx,al
  41c2c4:	mov    edi,0xe03041df
  41c2c9:	mov    cl,BYTE PTR [ebp-0x55]
  41c2cc:	loope  0x41c293
  41c2ce:	fstp   QWORD PTR [edx]
  41c2d0:	je     0x41c308
  41c2d2:	adc    BYTE PTR [edi-0x15],bh
  41c2d5:	pop    ecx
  41c2d6:	test   eax,0xb4f66670
  41c2db:	(bad)  
  41c2dc:	sti    
  41c2dd:	push   ebx
  41c2de:	(bad)  
  41c2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e1:	cs stc 
  41c2e3:	shl    eax,1
  41c2e5:	call   0x917:0xccd1d05f
  41c2ec:	aad    0x1b
  41c2ee:	in     al,dx
  41c2ef:	bound  ecx,QWORD PTR cs:[edx+0x29d75c0c]
  41c2f6:	mov    bh,0x73
  41c2f8:	shr    DWORD PTR [edi+0x57],cl
  41c2fb:	scas   al,BYTE PTR es:[edi]
  41c2fc:	ins    DWORD PTR es:[edi],dx
  41c2fd:	push   es
  41c2fe:	or     eax,0x6f925236
  41c303:	xchg   edx,eax
  41c304:	pop    eax
  41c305:	aas    
  41c306:	sbb    BYTE PTR [ebx],ch
  41c308:	shr    DWORD PTR [ebx+ebp*4],cl
  41c30b:	in     al,dx
  41c30c:	cmp    BYTE PTR [ebx-0x2a],ch
  41c30f:	in     eax,0x8
  41c311:	int    0x74
  41c313:	mov    ?,WORD PTR [ebx+0x8]
  41c316:	hlt    
  41c317:	scas   al,BYTE PTR es:[edi]
  41c318:	jmp    0x41c343
  41c31a:	data16 ficomp DWORD PTR [eax]
  41c31d:	out    0xe0,eax
  41c31f:	mov    DWORD PTR [edx],esi
  41c321:	or     BYTE PTR [edx-0x7f0b8ee1],bh
  41c327:	popa   
  41c328:	mov    ah,0xb4
  41c32a:	jo     0x41c2ce
  41c32c:	xor    BYTE PTR ds:0x5faf5a4d,dl
  41c332:	push   edi
  41c333:	jbe    0x41c313
  41c335:	out    0xe7,al
  41c337:	shr    BYTE PTR [eax+0x609d2aaa],0x90
  41c33e:	gs out 0xc2,al
  41c341:	cmp    BYTE PTR [ebx],bl
  41c343:	fild   WORD PTR [ebp+0x74]
  41c346:	jbe    0x41c393
  41c348:	adc    al,0x1c
  41c34a:	pop    ds
  41c34b:	jmp    0x41c354
  41c34d:	dec    ecx
  41c34e:	ins    BYTE PTR es:[edi],dx
  41c34f:	cmp    BYTE PTR [edi-0xba7baa5],dl
  41c355:	ret    
  41c356:	mov    DWORD PTR [ebp-0x6f],0x69e51043
  41c35d:	jno    0x41c307
  41c35f:	add    al,0xbb
  41c361:	rcl    bl,cl
  41c363:	mov    edx,0x9267eb5c
  41c368:	aas    
  41c369:	mov    esi,esp
  41c36b:	sub    DWORD PTR [ebx],0x58
  41c36e:	xchg   esi,eax
  41c36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c370:	neg    BYTE PTR [ebp+0x2e9a6ec]
  41c376:	dec    edx
  41c377:	fdivr  st,st(7)
  41c379:	and    ebx,DWORD PTR [edi-0x70]
  41c37c:	cs pop edi
  41c37e:	daa    
  41c37f:	and    ebp,DWORD PTR [edx]
  41c381:	jge    0x41c3ea
  41c383:	shl    BYTE PTR [ebp-0x3a4ee5b6],1
  41c389:	mov    al,ds:0x5aa157e4
  41c38e:	loop   0x41c36c
  41c390:	push   eax
  41c391:	cs pop edx
  41c393:	stos   DWORD PTR es:[edi],eax
  41c394:	lods   eax,DWORD PTR ds:[esi]
  41c395:	add    BYTE PTR [eax-0x7bcb862e],bl
  41c39b:	sub    DWORD PTR [esi+0x29f2ae51],0x1a
  41c3a2:	pop    esi
  41c3a3:	xor    edx,eax
  41c3a5:	sub    DWORD PTR [ecx+eax*1+0x76289677],0x42ac5de4
  41c3b0:	stos   BYTE PTR es:[edi],al
  41c3b1:	(bad)  
  41c3b2:	data16 jp 0x41c411
  41c3b5:	push   ebx
  41c3b6:	pop    esp
  41c3b7:	stc    
  41c3b8:	int    0x91
  41c3ba:	in     al,dx
  41c3bb:	xchg   esp,eax
  41c3bc:	inc    edi
  41c3bd:	cmp    BYTE PTR [ecx],cl
  41c3bf:	clc    
  41c3c0:	out    dx,eax
  41c3c1:	add    al,0x3
  41c3c3:	cli    
  41c3c4:	mov    al,0xd8
  41c3c6:	dec    edi
  41c3c7:	sar    BYTE PTR [ebp-0x1c030a39],1
  41c3cd:	inc    edx
  41c3ce:	mov    ebx,0x75fe8050
  41c3d3:	jmp    0x41c385
  41c3d5:	rcl    DWORD PTR [ecx-0xa2b7aad],0x87
  41c3dc:	adc    dl,BYTE PTR [eax+edx*4-0x5aec3cd0]
  41c3e3:	mov    DWORD PTR [esi+0xeca2021],edx
  41c3e9:	test   DWORD PTR [ebx-0x2e],ebp
  41c3ec:	lock lea eax,[esp+ebp*4+0x20]
  41c3f1:	in     eax,0xe9
  41c3f3:	iret   
  41c3f4:	outs   dx,BYTE PTR ds:[esi]
  41c3f5:	dec    esi
  41c3f6:	mov    edx,0x39cfc1e0
  41c3fb:	icebp  
  41c3fc:	and    esp,edi
  41c3fe:	neg    BYTE PTR [esi]
  41c400:	(bad)  
  41c401:	cld    
  41c402:	popa   
  41c403:	mov    esi,0x9652f459
  41c408:	or     al,0xba
  41c40a:	mov    eax,0x7590d378
  41c40f:	xchg   esp,eax
  41c410:	dec    eax
  41c411:	inc    ebx
  41c412:	mov    ds:0x11c07bd3,eax
  41c417:	sub    esp,esi
  41c419:	mov    ecx,0xabfb96ad
  41c41e:	and    BYTE PTR [ebx-0x10],cl
  41c421:	xor    dl,BYTE PTR [esi+0x300b15d6]
  41c427:	pusha  
  41c428:	dec    ebp
  41c429:	or     al,0x1a
  41c42b:	xchg   DWORD PTR [edx+ebx*8+0x1],ebp
  41c42f:	retf   0xf208
  41c432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c433:	push   edi
  41c434:	add    BYTE PTR [edi],cl
  41c436:	shr    DWORD PTR [esi-0x5d],cl
  41c439:	ss out dx,al
  41c43b:	imul   edx,DWORD PTR gs:[edx+0x60b557c0],0x60523fe8
  41c446:	daa    
  41c447:	jo     0x41c410
  41c449:	aad    0xc8
  41c44b:	loopne 0x41c46a
  41c44d:	dec    ebp
  41c44e:	push   0xffffff9c
  41c450:	iret   
  41c451:	inc    edx
  41c452:	out    dx,al
  41c453:	mov    ds:0x8da4f4d,eax
  41c458:	test   al,0x46
  41c45a:	ret    
  41c45b:	imul   esi,edx,0xd8a688ef
  41c461:	fstp   TBYTE PTR [edi+0xa]
  41c464:	xchg   ebx,eax
  41c465:	int3   
  41c466:	lahf   
  41c467:	dec    ecx
  41c468:	add    eax,0x694edb8e
  41c46d:	ret    
  41c46e:	dec    ebx
  41c46f:	pop    es
  41c470:	push   eax
  41c471:	pop    ds
  41c472:	cmp    ecx,ebp
  41c474:	iret   
  41c475:	xchg   edx,eax
  41c476:	sub    eax,eax
  41c478:	lahf   
  41c479:	and    al,0xce
  41c47b:	cs popa 
  41c47d:	dec    ecx
  41c47e:	adc    BYTE PTR [edi],ah
  41c480:	jae    0x41c500
  41c482:	fcomp  DWORD PTR [eax+0x3c]
  41c485:	mov    BYTE PTR [esi-0x54],ch
  41c488:	fs push edi
  41c48a:	jmp    FWORD PTR [esi]
  41c48c:	popf   
  41c48d:	mov    esp,0xc6fd15f6
  41c492:	jbe    0x41c493
  41c494:	sub    eax,0xec638bf6
  41c499:	xchg   ebp,eax
  41c49a:	xor    eax,0x1ee2c31c
  41c49f:	or     DWORD PTR [edx-0x23924906],edx
  41c4a5:	cmp    al,0x40
  41c4a7:	daa    
  41c4a8:	jo     0x41c447
  41c4aa:	sub    BYTE PTR [edx],dl
  41c4ac:	test   esp,edi
  41c4ae:	sahf   
  41c4af:	call   0xc21d:0xb7a34770
  41c4b6:	retf   
  41c4b7:	clc    
  41c4b8:	movzx  ebx,WORD PTR [ecx-0x67]
  41c4bc:	fnstenv [edi+0x51]
  41c4bf:	shr    DWORD PTR [edx],1
  41c4c1:	pop    edx
  41c4c2:	sub    DWORD PTR [ebx-0x49],ebx
  41c4c5:	push   ebx
  41c4c6:	dec    edi
  41c4c7:	jno    0x41c496
  41c4c9:	mov    es,edi
  41c4cb:	jo     0x41c452
  41c4cd:	mov    cl,0x7e
  41c4cf:	imul   eax,edi,0xbcf1b8
  41c4d5:	or     eax,0xd6dc7a71
  41c4da:	pop    ecx
  41c4db:	xchg   edi,eax
  41c4dc:	pop    ds
  41c4dd:	pop    ds
  41c4de:	cld    
  41c4df:	jbe    0x41c497
  41c4e1:	sbb    al,0x14
  41c4e3:	jp     0x41c544
  41c4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e6:	push   edi
  41c4e7:	jo     0x41c486
  41c4e9:	dec    ebp
  41c4ea:	pop    esi
  41c4eb:	lock dec ebp
  41c4ed:	daa    
  41c4ee:	push   edi
  41c4ef:	popa   
  41c4f0:	sub    esp,ebp
  41c4f2:	int    0xfa
  41c4f4:	fwait
  41c4f5:	and    al,BYTE PTR [ecx+0x40]
  41c4f8:	dec    edi
  41c4f9:	and    BYTE PTR [edi],bh
  41c4fb:	xchg   BYTE PTR [ecx],cl
  41c4fd:	jecxz  0x41c559
  41c4ff:	fwait
  41c500:	dec    edx
  41c501:	ret    
  41c502:	mov    ds:0xcc330bdb,al
  41c507:	add    dl,BYTE PTR [eax-0x80]
  41c50a:	cdq    
  41c50b:	pop    edi
  41c50c:	lea    ebx,[eax]
  41c50e:	mov    cl,0xc4
  41c510:	or     bl,BYTE PTR [eax]
  41c512:	sbb    DWORD PTR [esi+0x462ce535],ebp
  41c518:	aam    0xe9
  41c51a:	mov    ebp,0x7e14fdc4
  41c51f:	xchg   al,dh
  41c521:	mov    ds:0xb9405998,eax
  41c526:	imul   edi,DWORD PTR [esi-0x1f],0x3
  41c52a:	(bad)  
  41c52b:	xor    BYTE PTR [eax+eiz*1],ah
  41c52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c52f:	cwde   
  41c530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c531:	addr16 ss push esp
  41c534:	ja     0x41c4b8
  41c536:	in     al,dx
  41c537:	(bad)  
  41c538:	sub    al,0x1c
  41c53a:	push   eax
  41c53b:	inc    BYTE PTR [ebx+0x185f7962]
  41c541:	xor    bh,cl
  41c543:	add    ebx,eax
  41c545:	add    BYTE PTR [bp+si+0x61],dl
  41c549:	mov    BYTE PTR [ebp+0x1434c88a],al
  41c54f:	shl    esp,1
  41c551:	dec    esp
  41c552:	shl    edx,0xf9
  41c555:	dec    edx
  41c556:	fwait
  41c557:	dec    edi
  41c558:	sbb    ah,bl
  41c55a:	pop    ecx
  41c55b:	sub    al,0x7c
  41c55d:	icebp  
  41c55e:	pushf  
  41c55f:	jns    0x41c5d1
  41c561:	dec    ebp
  41c562:	stc    
  41c563:	add    dl,BYTE PTR ds:0x313fc599
  41c569:	jg     0x41c540
  41c56b:	sbb    eax,0x3f9074ac
  41c570:	mov    bh,0x99
  41c572:	push   esp
  41c573:	or     edx,DWORD PTR [ebx-0x3d]
  41c576:	mov    dl,0x8d
  41c578:	jbe    0x41c5a8
  41c57a:	jno    0x41c5d5
  41c57c:	jg     0x41c5c5
  41c57e:	cmp    dh,BYTE PTR [esi-0x6d]
  41c581:	jecxz  0x41c58c
  41c583:	pop    ebp
  41c584:	scas   eax,DWORD PTR es:[edi]
  41c585:	push   0xf1cf8e50
  41c58a:	lds    esp,FWORD PTR [eax]
  41c58c:	in     al,0x95
  41c58e:	pop    edx
  41c58f:	xchg   edx,eax
  41c590:	xor    ebx,DWORD PTR [edx-0x10]
  41c593:	sbb    ebp,DWORD PTR [esi+ecx*2-0x1a21ee65]
  41c59a:	scas   eax,DWORD PTR es:[edi]
  41c59b:	test   BYTE PTR [edx+ebx*4-0x50a2a586],ah
  41c5a2:	xchg   edi,eax
  41c5a3:	out    dx,eax
  41c5a4:	add    al,0x5d
  41c5a6:	ins    DWORD PTR es:[edi],dx
  41c5a7:	imul   esi,DWORD PTR [ebp-0x39],0x6629d7a5
  41c5ae:	aad    0xb
  41c5b0:	add    dh,BYTE PTR [ecx-0x52]
  41c5b3:	or     BYTE PTR [ecx+0x7fa6bb6],ch
  41c5b9:	xchg   edi,eax
  41c5ba:	adc    ah,ch
  41c5bc:	(bad)  
  41c5bd:	out    dx,eax
  41c5be:	or     ebp,edi
  41c5c0:	jb     0x41c56a
  41c5c2:	dec    esi
  41c5c3:	inc    eax
  41c5c4:	xchg   ebx,eax
  41c5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c6:	std    
  41c5c7:	push   edi
  41c5c8:	call   0x3213:0x37589c04
  41c5cf:	add    eax,0xacd979ce
  41c5d4:	push   ebx
  41c5d5:	dec    ebp
  41c5d6:	or     eax,esi
  41c5d8:	mov    esp,0x74dc065d
  41c5dd:	push   ecx
  41c5de:	mov    cl,0xd1
  41c5e0:	fidivr DWORD PTR [eax]
  41c5e2:	xchg   ch,dh
  41c5e4:	in     al,0xee
  41c5e6:	push   0x723c0d1c
  41c5eb:	mov    ebx,DWORD PTR [eax+0x77]
  41c5ee:	dec    edi
  41c5ef:	dec    edi
  41c5f0:	idiv   BYTE PTR [esi-0x14fddde2]
  41c5f6:	imul   ebp,eax,0x5457908f
  41c5fc:	mov    bl,0xc4
  41c5fe:	pop    esp
  41c5ff:	and    ecx,DWORD PTR [ebx+0x52]
  41c602:	inc    esi
  41c603:	or     esi,DWORD PTR [esi-0x6c]
  41c606:	and    dh,BYTE PTR [edi]
  41c608:	int3   
  41c609:	dec    ebx
  41c60a:	imul   edx,DWORD PTR [edi-0x46bce981],0x74
  41c611:	call   0x88bcc4ff
  41c616:	xor    BYTE PTR [ecx],dh
  41c618:	cmp    BYTE PTR [edi-0x1b7657f0],bl
  41c61e:	dec    ebx
  41c61f:	int    0xf8
  41c621:	xchg   edx,eax
  41c622:	aam    0x48
  41c624:	jmp    0xde4d:0x76224f7a
  41c62b:	repnz icebp 
  41c62d:	frstor ds:0xa0f56b3f
  41c633:	int3   
  41c634:	or     al,0x42
  41c636:	mov    edx,0x59c7d148
  41c63b:	mov    esp,0xbb6eddaf
  41c640:	nop
  41c641:	fld    TBYTE PTR [ecx]
  41c643:	(bad)  
  41c644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c645:	hlt    
  41c646:	call   0x1483e772
  41c64b:	dec    esi
  41c64c:	hlt    
  41c64d:	adc    esi,DWORD PTR gs:[ebp-0x477e06b7]
  41c654:	mov    cl,0x8
  41c656:	jne    0x41c6b0
  41c658:	scas   al,BYTE PTR es:[edi]
  41c659:	inc    edi
  41c65a:	test   BYTE PTR [edi],dl
  41c65c:	retf   
  41c65d:	popf   
  41c65e:	inc    ecx
  41c65f:	dec    edi
  41c660:	push   edi
  41c661:	jbe    0x41c664
  41c663:	ins    DWORD PTR es:[edi],dx
  41c664:	sbb    ch,BYTE PTR [esi-0x66]
  41c667:	shl    DWORD PTR [ecx-0x25],cl
  41c66a:	lahf   
  41c66b:	adc    cl,0x6b
  41c66e:	popf   
  41c66f:	and    eax,0xb5bbe792
  41c674:	push   edx
  41c675:	mov    eax,0xbdcfe2b9
  41c67a:	add    eax,DWORD PTR [eax+0x1]
  41c67d:	sbb    edx,ebp
  41c67f:	out    dx,al
  41c680:	cmc    
  41c681:	fptan  
  41c683:	popa   
  41c684:	push   0x9807bf12
  41c689:	call   0x106ad3fa
  41c68e:	ficomp WORD PTR [esi-0x49431e55]
  41c694:	sub    al,0xcc
  41c696:	and    edi,DWORD PTR [edi]
  41c698:	lods   eax,DWORD PTR ds:[esi]
  41c699:	dec    ebx
  41c69a:	nop
  41c69b:	mov    ecx,0xabc6278a
  41c6a0:	inc    esp
  41c6a1:	or     al,0x32
  41c6a3:	gs in  al,0x2c
  41c6a6:	jo     0x41c66a
  41c6a8:	in     al,0x3a
  41c6aa:	mov    ebp,0x52575fb1
  41c6af:	aam    0x15
  41c6b1:	lds    ebp,FWORD PTR [eax-0x17]
  41c6b4:	dec    esp
  41c6b5:	shl    ebx,cl
  41c6b7:	bound  ecx,QWORD PTR [ecx]
  41c6b9:	rcr    BYTE PTR [ecx-0x34],1
  41c6bc:	or     bh,bl
  41c6be:	inc    ecx
  41c6bf:	pop    eax
  41c6c0:	or     ah,BYTE PTR cs:[edi-0x45fbc078]
  41c6c7:	fimul  DWORD PTR [edi+0x69]
  41c6ca:	push   esp
  41c6cb:	inc    ecx
  41c6cc:	dec    esp
  41c6cd:	inc    edx
  41c6ce:	fwait
  41c6cf:	lea    ebp,[eax-0x22f8e234]
  41c6d5:	scas   eax,DWORD PTR es:[edi]
  41c6d6:	dec    edx
  41c6d7:	jp     0x41c683
  41c6d9:	mov    ecx,0xf5ee27f5
  41c6de:	inc    ebx
  41c6df:	icebp  
  41c6e0:	xchg   ecx,eax
  41c6e1:	dec    esp
  41c6e2:	inc    ebx
  41c6e3:	(bad)  
  41c6e4:	mov    ds:0xc81d8a9,al
  41c6e9:	cmp    BYTE PTR es:[esi-0x46dace77],dh
  41c6f0:	pop    esp
  41c6f1:	frstor [edi]
  41c6f3:	jo     0x41c713
  41c6f5:	(bad)  
  41c6f6:	inc    ebp
  41c6f7:	loope  0x41c745
  41c6f9:	mov    cl,0xe4
  41c6fb:	adc    edi,DWORD PTR ds:[eax-0x77198c41]
  41c702:	int3   
  41c703:	mov    gs,edi
  41c705:	dec    eax
  41c706:	sub    al,0x76
  41c708:	sbb    esp,edx
  41c70a:	mov    ecx,eax
  41c70c:	pop    edx
  41c70d:	mov    ch,0x83
  41c70f:	jge    0x41c6a7
  41c711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c712:	stc    
  41c713:	outs   dx,BYTE PTR ds:[esi]
  41c714:	lods   al,BYTE PTR ds:[esi]
  41c715:	or     BYTE PTR [edx],cl
  41c717:	cmp    DWORD PTR [ebx+0x6],0x8ce46367
  41c71e:	repz xchg ebx,eax
  41c720:	into   
  41c721:	add    BYTE PTR [edx],0x6a
  41c724:	fcom   DWORD PTR [ecx+edx*2]
  41c727:	out    dx,al
  41c728:	mov    al,ds:0xcec2e6f7
  41c72d:	mov    BYTE PTR gs:[esi],bh
  41c730:	lahf   
  41c731:	cdq    
  41c732:	push   0x47504a9e
  41c737:	xor    eax,0xc8eb7f82
  41c73c:	dec    esi
  41c73d:	lea    esp,[ecx-0x5627cb82]
  41c743:	in     eax,dx
  41c744:	pop    eax
  41c745:	das    
  41c746:	fistp  WORD PTR [esi]
  41c748:	out    dx,al
  41c749:	or     al,dh
  41c74b:	adc    eax,0xf352781c
  41c750:	adc    DWORD PTR [eax+0x10],edi
  41c753:	aad    0xa
  41c755:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c757:	popf   
  41c758:	and    edi,DWORD PTR [edx-0x4f]
  41c75b:	and    ebx,DWORD PTR [ecx]
  41c75d:	packuswb mm7,mm6
  41c760:	mov    eax,0x172ff093
  41c765:	fst    st(2)
  41c768:	lahf   
  41c769:	mov    dh,0x33
  41c76b:	arpl   bx,bp
  41c76d:	pop    edx
  41c76e:	pop    ss
  41c76f:	lods   eax,DWORD PTR ds:[esi]
  41c770:	jne    0x41c75f
  41c772:	or     ah,BYTE PTR [edx+0x6]
  41c775:	outs   dx,BYTE PTR ds:[esi]
  41c776:	or     DWORD PTR [ebp-0x2dbe7b10],edx
  41c77c:	push   0x448395bd
  41c781:	xor    esp,DWORD PTR ds:0x8f21d94f
  41c787:	cld    
  41c788:	aas    
  41c789:	xor    al,BYTE PTR [edi-0x19]
  41c78c:	jnp    0x41c806
  41c78e:	out    0x42,al
  41c790:	cwde   
  41c791:	adc    bl,BYTE PTR [eax]
  41c793:	push   ds
  41c794:	mov    fs,esp
  41c796:	fs pop ecx
  41c798:	ficomp DWORD PTR [edx]
  41c79a:	mov    cl,0x7f
  41c79c:	push   cs
  41c79d:	les    ecx,FWORD PTR [eax+ebx*8+0x4f5c0ea4]
  41c7a4:	add    bh,BYTE PTR [ecx+ebp*1-0x66]
  41c7a8:	aad    0xf8
  41c7aa:	(bad)  
  41c7ac:	sahf   
  41c7ad:	(bad)  
  41c7ae:	lea    eax,ss:[eax-0x5b]
  41c7b2:	pop    edi
  41c7b3:	mov    al,0xb4
  41c7b5:	lods   eax,DWORD PTR ds:[esi]
  41c7b6:	sub    bl,BYTE PTR [esi-0xcc607e1]
  41c7bc:	lea    esi,[edx+0x1]
  41c7bf:	pshufw mm6,mm2,0xe7
  41c7c3:	int3   
  41c7c4:	and    al,ah
  41c7c6:	cmp    DWORD PTR [edi-0x2228731],edx
  41c7cc:	xchg   edx,eax
  41c7cd:	sub    al,0xad
  41c7cf:	inc    esi
  41c7d0:	mov    dh,0x66
  41c7d2:	popf   
  41c7d3:	cmp    dh,BYTE PTR [ebx+ecx*1-0x69]
  41c7d7:	pop    ebx
  41c7d8:	int    0x3d
  41c7da:	call   0xe6240aea
  41c7df:	xor    al,0x50
  41c7e1:	sbb    al,0xd0
  41c7e3:	pop    edi
  41c7e4:	mov    bh,0x5b
  41c7e6:	(bad)  
  41c7e7:	(bad)  
  41c7e8:	xor    al,0xd3
  41c7ea:	dec    eax
  41c7eb:	fsubr  QWORD PTR [edi-0x4fba3f4e]
  41c7f1:	lods   eax,DWORD PTR ds:[esi]
  41c7f2:	lock sbb ch,BYTE PTR [eax+0x630b916f]
  41c7f9:	mov    ebx,0x8d1743de
  41c7fe:	hlt    
  41c7ff:	push   eax
  41c800:	lds    edi,FWORD PTR [edi+0x79]
  41c803:	dec    ebp
  41c804:	dec    edx
  41c805:	retf   0x45f7
  41c808:	pushf  
  41c809:	push   ecx
  41c80a:	pusha  
  41c80b:	or     esp,DWORD PTR [esi+0x53]
  41c80e:	pop    ebp
  41c80f:	adc    eax,DWORD PTR [edx+0x65]
  41c812:	clc    
  41c813:	pop    ss
  41c814:	adc    esi,DWORD PTR [edx+0x1265ec5b]
  41c81a:	retf   0x16bd
  41c81d:	sti    
  41c81e:	jg     0x41c840
  41c820:	mov    WORD PTR [esi+0x68],?
  41c823:	xor    BYTE PTR [edx+0x5a171916],ah
  41c829:	pop    esp
  41c82a:	or     al,0xb4
  41c82c:	adc    al,0xcf
  41c82e:	sbb    ebx,esp
  41c830:	xlat   BYTE PTR ds:[ebx]
  41c831:	in     al,0xc6
  41c833:	pop    edi
  41c834:	dec    eax
  41c835:	and    DWORD PTR [edx],edi
  41c837:	jge    0x41c818
  41c839:	mov    WORD PTR [ecx-0xd],gs
  41c83c:	mov    ebx,0xd2230cb1
  41c841:	pushf  
  41c842:	scas   al,BYTE PTR es:[edi]
  41c843:	push   ds
  41c844:	test   DWORD PTR [esi+0x1f961da],eax
  41c84a:	push   ecx
  41c84b:	mov    ds:0xc45c2ec8,al
  41c850:	sbb    BYTE PTR ds:0x703aed88,dh
  41c856:	scas   eax,DWORD PTR es:[edi]
  41c857:	push   0x9f60c721
  41c85c:	jle    0x41c87e
  41c85e:	test   eax,0xab4f32f7
  41c863:	dec    eax
  41c864:	shl    DWORD PTR [eax],cl
  41c866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c867:	(bad)  
  41c868:	out    0xe3,al
  41c86a:	adc    ecx,DWORD PTR [edi-0x14]
  41c86d:	jo     0x41c82e
  41c86f:	add    ch,ah
  41c871:	jae    0x41c8f1
  41c873:	or     DWORD PTR [ebx-0x2a15184a],edi
  41c879:	(bad)  
  41c87a:	jmp    0x44ecc7ce
  41c87f:	mov    ebx,0x996b28bc
  41c884:	mov    eax,0xaf3fa133
  41c889:	hlt    
  41c88a:	pop    ebx
  41c88b:	dec    ebp
  41c88c:	inc    esp
  41c88d:	leave  
  41c88e:	in     al,0xe7
  41c890:	in     eax,dx
  41c891:	add    ebx,ebp
  41c893:	cwde   
  41c894:	or     eax,0xe2354b7e
  41c899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c89b:	pop    ebx
  41c89c:	sbb    eax,DWORD PTR [esi]
  41c89e:	test   eax,0x214ccafa
  41c8a3:	fwait
  41c8a4:	loope  0x41c8da
  41c8a6:	pusha  
  41c8a7:	fnstsw WORD PTR [edx+0x27c4781b]
  41c8ad:	in     eax,dx
  41c8ae:	ret    
  41c8af:	mov    eax,ds:0x8949fb30
  41c8b4:	jbe    0x41c8cf
  41c8b6:	out    dx,al
  41c8b7:	mov    edx,0xbdea7a11
  41c8bc:	mov    ds,WORD PTR [ebx-0x7971b18]
  41c8c2:	ja     0x41c899
  41c8c4:	hlt    
  41c8c5:	fmul   DWORD PTR [ebp+0x4d]
  41c8c8:	mov    al,ds:0x519131af
  41c8cd:	repnz push edi
  41c8cf:	repz mov al,0xbf
  41c8d2:	test   al,0xbc
  41c8d4:	test   al,0x1d
  41c8d6:	or     BYTE PTR [esi+0x3f],ah
  41c8d9:	push   edi
  41c8da:	imul   eax
  41c8dc:	xchg   esi,eax
  41c8dd:	mov    ebx,0x837f47a2
  41c8e2:	jg     0x41c8b0
  41c8e4:	cli    
  41c8e5:	mov    al,ds:0xf1411ea8
  41c8ea:	and    eax,0x3f899dc2
  41c8ef:	and    eax,0x16eef9d0
  41c8f4:	adc    al,0x2c
  41c8f6:	mov    edx,0x994cdf96
  41c8fb:	or     BYTE PTR [ecx-0x4b],dl
  41c8fe:	std    
  41c8ff:	sbb    BYTE PTR [edi+0x711e7e9c],0xac
  41c906:	and    al,0xb2
  41c908:	inc    ecx
  41c909:	xchg   edx,eax
  41c90a:	adc    BYTE PTR [ebx+0x6f],dl
  41c90d:	adc    DWORD PTR ds:0xb86a0eb,0x4f6b28
  41c917:	push   ebx
  41c918:	jp     0x41c922
  41c91a:	sar    BYTE PTR [edx-0x2],1
  41c91d:	dec    esi
  41c91e:	jae    0x41c8f3
  41c920:	push   eax
  41c921:	add    ebp,DWORD PTR [esi-0x7d239eef]
  41c927:	push   esp
  41c928:	aaa    
  41c929:	fimul  DWORD PTR [edi+0x43a3701b]
  41c92f:	pop    ss
  41c930:	pop    ecx
  41c931:	mov    al,0x10
  41c933:	pop    es
  41c934:	xor    eax,0xfcc0b626
  41c939:	retf   0xdf14
  41c93c:	sbb    al,dh
  41c93e:	imul   ebp,DWORD PTR [ecx],0x9336aae7
  41c944:	retf   0x773d
  41c947:	fadd   DWORD PTR [ecx-0x6b]
  41c94a:	inc    edi
  41c94b:	jno    0x41c95a
  41c94d:	add    DWORD PTR [ebp-0x953e1ee],eax
  41c953:	test   eax,0x56b0197
  41c958:	pushf  
  41c959:	iret   
  41c95a:	bound  ecx,QWORD PTR [edi]
  41c95c:	scas   al,BYTE PTR es:[edi]
  41c95d:	jmp    0xc6945d90
  41c962:	inc    edx
  41c963:	scas   al,BYTE PTR es:[edi]
  41c964:	shl    DWORD PTR [ecx+edi*2-0x3e504351],0xc0
  41c96c:	jnp    0x41c984
  41c96e:	adc    eax,DWORD PTR [edx]
  41c970:	jo     0x41c991
  41c972:	retf   0x95dc
  41c975:	gs dec ebp
  41c977:	ss retf 
  41c979:	test   eax,0x465091a1
  41c97e:	mov    ecx,0x6be97431
  41c983:	sbb    DWORD PTR [ecx],0x56
  41c986:	stos   DWORD PTR es:[edi],eax
  41c987:	dec    edx
  41c988:	rcr    DWORD PTR [eax+edx*4+0x54],cl
  41c98c:	int3   
  41c98d:	and    dh,BYTE PTR [edx-0x72]
  41c990:	lahf   
  41c991:	imul   eax,edx,0xf079e82b
  41c997:	jg     0x41c9a7
  41c999:	popf   
  41c99a:	xor    DWORD PTR [ebx-0x2eb263c2],ebx
  41c9a0:	mov    ch,0x7a
  41c9a2:	sahf   
  41c9a3:	mov    ds:0x3f4048bd,eax
  41c9a8:	les    ecx,FWORD PTR [edx-0x5d]
  41c9ab:	and    bl,BYTE PTR [eax]
  41c9ad:	lock pop ecx
  41c9af:	mov    WORD PTR [eax+eiz*4+0x56],?
  41c9b3:	dec    esp
  41c9b4:	adc    DWORD PTR [ecx-0x2a],edx
  41c9b7:	jb     0x41ca29
  41c9b9:	ss cmp dl,dh
  41c9bc:	popa   
  41c9bd:	push   esi
  41c9be:	cmp    eax,0xacb884ff
  41c9c3:	ins    BYTE PTR es:[edi],dx
  41c9c4:	enter  0xb0f,0xef
  41c9c8:	xchg   edi,eax
  41c9c9:	jmp    0xd82c:0xbc629d06
  41c9d0:	push   eax
  41c9d1:	mov    esi,0xfe0616d2
  41c9d6:	call   0x33b2f263
  41c9db:	and    ah,BYTE PTR fs:[edi+0x7aa0f8ce]
  41c9e2:	push   ecx
  41c9e3:	shl    DWORD PTR [ebx+0x1734529],cl
  41c9e9:	jle    0x41c9fa
  41c9eb:	pop    edi
  41c9ec:	repnz fmulp st(4),st
  41c9ef:	dec    ebp
  41c9f0:	push   es
  41c9f1:	jmp    0x41c9a3
  41c9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f4:	dec    edx
  41c9f5:	addr16 inc dx
  41c9f8:	aaa    
  41c9f9:	inc    eax
  41c9fa:	test   DWORD PTR [ebp+edx*8+0x72],esp
  41c9fe:	mov    esi,0x1e4305fd
  41ca03:	(bad)  
  41ca04:	mov    ds:0x2b1fbaed,eax
  41ca09:	mov    eax,ds:0x841313ce
  41ca0e:	dec    esp
  41ca0f:	jl     0x41c9b4
  41ca11:	sub    al,0x80
  41ca13:	into   
  41ca14:	mov    dh,0xb2
  41ca16:	add    BYTE PTR [esi+ebx*4-0xb],dl
  41ca1a:	cmp    BYTE PTR [edi],0xce
  41ca1d:	test   al,0xd1
  41ca1f:	loop   0x41ca5f
  41ca21:	or     al,BYTE PTR [edi-0x79bd71f9]
  41ca27:	lds    edi,FWORD PTR [eax-0x63]
  41ca2a:	and    cl,BYTE PTR [ebp-0x7a]
  41ca2d:	mov    ebx,0xec3840cb
  41ca32:	test   al,ch
  41ca34:	scas   eax,DWORD PTR es:[edi]
  41ca35:	xchg   BYTE PTR [ecx],dh
  41ca37:	ret    
  41ca38:	fcom   QWORD PTR [esi+0x42]
  41ca3b:	mov    esi,esi
  41ca3d:	inc    edi
  41ca3e:	jbe    0x41ca2c
  41ca40:	sar    DWORD PTR [eax+0x1e],0x19
  41ca44:	stos   BYTE PTR es:[edi],al
  41ca45:	fisttp DWORD PTR [edx]
  41ca47:	mov    WORD PTR [esi+ebx*2-0x16],?
  41ca4b:	retf   
  41ca4c:	pop    ebp
  41ca4d:	jmp    0x7bce:0x77ccfab3
  41ca54:	fmul   st,st(7)
  41ca56:	adc    eax,0x231ffdb1
  41ca5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5c:	adc    ebp,ebp
  41ca5e:	in     eax,dx
  41ca5f:	xor    DWORD PTR [edx],ecx
  41ca61:	mov    cl,BYTE PTR [ecx-0x64]
  41ca64:	int    0x33
  41ca66:	inc    eax
  41ca67:	jno    0x41cab3
  41ca69:	sub    al,0xa1
  41ca6b:	aad    0x71
  41ca6d:	mov    al,BYTE PTR [edx+0x4eeb834a]
  41ca73:	(bad)  
  41ca74:	xor    al,0x8a
  41ca76:	add    ebx,DWORD PTR [esi+0x675c202f]
  41ca7c:	ds mov al,0x3b
  41ca7f:	ins    DWORD PTR es:[edi],dx
  41ca80:	dec    edx
  41ca81:	aam    0xe2
  41ca83:	mov    ecx,0xe213167
  41ca88:	ins    BYTE PTR es:[edi],dx
  41ca89:	sar    BYTE PTR [esi],0x16
  41ca8c:	iret   
  41ca8d:	add    DWORD PTR [ebp-0x4e],ecx
  41ca90:	ret    0x633
  41ca93:	(bad)  
  41ca95:	cmp    al,0x2a
  41ca97:	xlat   BYTE PTR ds:[ebx]
  41ca98:	dec    ebp
  41ca99:	loop   0x41ca72
  41ca9b:	mov    ebp,DWORD PTR [ecx]
  41ca9d:	pop    ecx
  41ca9e:	lods   eax,DWORD PTR ds:[esi]
  41ca9f:	push   edi
  41caa0:	test   eax,0xa92cf1eb
  41caa5:	mov    ebx,ebx
  41caa7:	inc    ebp
  41caa8:	ins    DWORD PTR es:[edi],dx
  41caa9:	sub    DWORD PTR [ebx],ecx
  41caab:	fld    DWORD PTR [esi+ebx*8-0x534eda2a]
  41cab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cab3:	pop    ecx
  41cab4:	in     al,0xf9
  41cab6:	sbb    BYTE PTR [esi-0x503998fa],ch
  41cabc:	out    dx,al
  41cabd:	enter  0x463,0x99
  41cac1:	add    ah,ch
  41cac3:	jbe    0x41cab9
  41cac5:	loop   0x41ca6c
  41cac7:	mov    WORD PTR [edi+eax*4-0x7],ss
  41cacb:	int    0x72
  41cacd:	add    al,0x2a
  41cacf:	in     eax,dx
  41cad0:	cmp    cl,BYTE PTR [edi+0x4f]
  41cad3:	(bad)  
  41cad4:	sub    DWORD PTR [ebx],ebp
  41cad6:	aas    
  41cad7:	or     al,0xed
  41cad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cada:	cmc    
  41cadb:	mov    ds:0xd586d0c,al
  41cae0:	or     DWORD PTR [edi],esp
  41cae2:	out    dx,eax
  41cae3:	jg     0x41ca69
  41cae5:	stos   DWORD PTR es:[edi],eax
  41cae6:	adc    BYTE PTR [ecx],al
  41cae8:	push   eax
  41cae9:	js     0x41ca89
  41caeb:	into   
  41caec:	dec    edi
  41caed:	jb     0x41cb18
  41caef:	pop    ecx
  41caf0:	pusha  
  41caf1:	out    0x22,eax
  41caf3:	mov    bl,0x8d
  41caf5:	adc    ebx,DWORD PTR [ecx]
  41caf7:	cmovns ebx,DWORD PTR [ebx]
  41cafa:	add    cl,BYTE PTR [ebx]
  41cafc:	(bad)  
  41cafd:	add    edx,ebx
  41caff:	lahf   
  41cb00:	(bad)  
  41cb01:	cdq    
  41cb02:	(bad)  
  41cb03:	les    ebp,FWORD PTR [esp+edx*4+0x5c]
  41cb07:	jge    0x41ca9b
  41cb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb0a:	or     eax,0xf92684cd
  41cb0f:	mov    bl,0xe8
  41cb11:	dec    esi
  41cb12:	repz jbe 0x41cade
  41cb15:	pop    es
  41cb16:	adc    eax,0x6ee259cc
  41cb1b:	jb     0x41cb10
  41cb1d:	and    BYTE PTR [ecx-0x9],ch
  41cb20:	sbb    DWORD PTR [edi],ebx
  41cb22:	jmp    0xec6a:0x32e6f2ab
  41cb29:	inc    esi
  41cb2a:	mov    bh,0x28
  41cb2c:	or     DWORD PTR [ebp*1-0x551531ab],0xffffff84
  41cb34:	cdq    
  41cb35:	leave  
  41cb36:	cmp    dl,bh
  41cb38:	mov    BYTE PTR [ecx-0xd15ca0],0xf4
  41cb3f:	retf   0x1751
  41cb42:	stos   DWORD PTR es:[edi],eax
  41cb43:	mov    ebx,0xdbd0a6c3
  41cb48:	pop    esi
  41cb49:	aam    0x3e
  41cb4b:	xchg   esp,esp
  41cb4d:	push   es
  41cb4e:	xor    DWORD PTR [ebp+0x7f8fefd],0x6551524
  41cb58:	in     eax,dx
  41cb59:	fscale 
  41cb5b:	fisubr WORD PTR [esi-0x1d]
  41cb5e:	xchg   ebp,eax
  41cb5f:	in     eax,0xe3
  41cb61:	in     eax,dx
  41cb62:	pusha  
  41cb63:	jecxz  0x41cb7f
  41cb65:	pop    eax
  41cb66:	frstor [ebx]
  41cb68:	shrd   DWORD PTR [ebx],esi,0x9
  41cb6c:	gs xor al,0xf1
  41cb6f:	adc    al,BYTE PTR [eax+ebx*4-0x7f67ac6c]
  41cb76:	lods   eax,DWORD PTR ds:[esi]
  41cb77:	js     0x41cba2
  41cb79:	jecxz  0x41cbe8
  41cb7b:	ins    BYTE PTR es:[edi],dx
  41cb7c:	jge    0x41cb62
  41cb7e:	in     al,0x6f
  41cb80:	cwde   
  41cb81:	xchg   edx,ebx
  41cb83:	leave  
  41cb84:	cmp    dl,cl
  41cb86:	adc    DWORD PTR [ecx],eax
  41cb88:	repnz retf 0x1881
  41cb8c:	and    BYTE PTR [edx],dl
  41cb8e:	add    eax,DWORD PTR [edx]
  41cb90:	cs icebp 
  41cb92:	dec    eax
  41cb93:	leave  
  41cb94:	jp     0x41cb2f
  41cb96:	inc    edx
  41cb97:	or     eax,0x9716555c
  41cb9c:	retf   
  41cb9d:	pop    edi
  41cb9e:	push   ss
  41cb9f:	cld    
  41cba0:	lods   eax,DWORD PTR ds:[esi]
  41cba1:	inc    eax
  41cba2:	shr    DWORD PTR [esi-0x4ca35fe2],0x4e
  41cba9:	shl    BYTE PTR [edi],cl
  41cbab:	adc    esi,edi
  41cbad:	lock fisubr WORD PTR [edx-0xa]
  41cbb1:	or     al,0x8a
  41cbb3:	jae    0x41cb7f
  41cbb5:	popa   
  41cbb6:	pop    eax
  41cbb7:	sbb    BYTE PTR [ecx],bl
  41cbb9:	aad    0x76
  41cbbb:	xor    ebx,DWORD PTR [esi+edi*4]
  41cbbe:	scas   eax,DWORD PTR es:[edi]
  41cbbf:	lds    edx,FWORD PTR ds:0x9df2fca8
  41cbc5:	xor    al,0x48
  41cbc7:	loope  0x41cb5c
  41cbc9:	sbb    eax,0x4f65601
  41cbce:	push   edx
  41cbcf:	arpl   WORD PTR ds:0x5ead13ee,di
  41cbd5:	test   al,0xd8
  41cbd7:	and    al,0xba
  41cbd9:	lock or al,0x62
  41cbdc:	(bad)  
  41cbdd:	jmp    0xe565:0xe142225f
  41cbe4:	jl     0x41cc61
  41cbe6:	push   0x5377a667
  41cbeb:	add    eax,0xfc077e0d
  41cbf0:	adc    dl,BYTE PTR es:[ebx+0x5af86dad]
  41cbf7:	rcl    edx,cl
  41cbf9:	popa   
  41cbfa:	leave  
  41cbfb:	clc    
  41cbfc:	dec    eax
  41cbfd:	jmp    0x23c0:0xc6b80c6d
  41cc04:	dec    esi
  41cc05:	(bad)  
  41cc06:	mov    bl,0xa9
  41cc08:	jno    0x41cbc1
  41cc0a:	cwde   
  41cc0b:	mov    edi,0x35d040b9
  41cc10:	sub    eax,0x7bd66c66
  41cc15:	pop    edx
  41cc16:	test   eax,0x461b2eb9
  41cc1b:	clc    
  41cc1c:	xlat   BYTE PTR ds:[ebx]
  41cc1d:	out    dx,al
  41cc1e:	push   ebp
  41cc1f:	and    al,0x5e
  41cc21:	cli    
  41cc22:	or     al,0x67
  41cc24:	clc    
  41cc25:	scas   eax,DWORD PTR es:[edi]
  41cc26:	mov    edx,DWORD PTR [ecx-0x272de82f]
  41cc2c:	add    ecx,0xb36e884d
  41cc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc33:	push   eax
  41cc34:	jns    0x41cc6a
  41cc36:	lods   al,BYTE PTR ds:[esi]
  41cc37:	arpl   WORD PTR [ebx-0x52],bp
  41cc3a:	popa   
  41cc3b:	jne    0x41cbf9
  41cc3d:	and    eax,esi
  41cc3f:	adc    ebx,DWORD PTR [edi]
  41cc41:	cli    
  41cc42:	hlt    
  41cc43:	mov    dh,0x97
  41cc45:	mov    eax,ds:0x74777f9c
  41cc4a:	pop    eax
  41cc4b:	neg    ecx
  41cc4d:	mov    ebx,es
  41cc4f:	imul   ecx,DWORD PTR [edi+0x2ab266ea],0x569f3cc2
  41cc59:	repnz out dx,eax
  41cc5b:	cmc    
  41cc5c:	cmp    al,0x10
  41cc5e:	mov    bh,0xc2
  41cc60:	clc    
  41cc61:	pop    ecx
  41cc62:	dec    edi
  41cc63:	scas   al,BYTE PTR es:[edi]
  41cc64:	jecxz  0x41cca1
  41cc66:	sbb    DWORD PTR [ecx-0x346b8025],ebp
  41cc6c:	jbe    0x41cbf1
  41cc6e:	(bad)  
  41cc6f:	fild   DWORD PTR [ecx-0x3d33f694]
  41cc75:	les    ecx,FWORD PTR [ebp-0x2b]
  41cc78:	jge    0x41cc6a
  41cc7a:	loop   0x41cc62
  41cc7c:	push   ecx
  41cc7d:	xchg   esi,eax
  41cc7e:	dec    edx
  41cc7f:	adc    BYTE PTR [edi+edi*8+0x75],dh
  41cc83:	cmc    
  41cc84:	in     eax,dx
  41cc85:	int3   
  41cc86:	mov    dl,0xeb
  41cc88:	jns    0x41cc95
  41cc8a:	pop    ebx
  41cc8b:	scas   eax,DWORD PTR es:[edi]
  41cc8c:	das    
  41cc8d:	stos   BYTE PTR es:[edi],al
  41cc8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc8f:	addr16 xchg ebx,eax
  41cc91:	ds adc cl,cl
  41cc94:	out    dx,eax
  41cc95:	or     DWORD PTR [edx-0x35],eax
  41cc98:	outs   dx,BYTE PTR ds:[esi]
  41cc99:	inc    ecx
  41cc9a:	arpl   WORD PTR [eax],ax
  41cc9c:	jbe    0x41cd02
  41cc9e:	jp     0x41cd03
  41cca0:	test   BYTE PTR [eax+ecx*1],bl
  41cca3:	adc    ebp,DWORD PTR [eax+esi*2-0x64c91ad9]
  41ccaa:	sbb    DWORD PTR [edx],0xdb9b324c
  41ccb0:	inc    eax
  41ccb1:	mov    dl,0xce
  41ccb3:	or     DWORD PTR [edi],ecx
  41ccb5:	push   0xfffffff2
  41ccb7:	sti    
  41ccb8:	or     al,0x3f
  41ccba:	arpl   WORD PTR [eax],si
  41ccbc:	lock push 0x63
  41ccbf:	clc    
  41ccc0:	jnp    0x41cc9d
  41ccc2:	xor    al,BYTE PTR [edx]
  41ccc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc5:	jecxz  0x41cc67
  41ccc7:	mov    esp,DWORD PTR [ebx]
  41ccc9:	es xchg edi,eax
  41cccb:	pop    esp
  41cccc:	arpl   WORD PTR [ebp*2+0x45c3321],dx
  41ccd3:	adc    cl,BYTE PTR [eax+eax*4+0x0]
  41ccd7:	icebp  
  41ccd8:	xor    ecx,esp
  41ccda:	fs push es
  41ccdc:	aam    0xd8
  41ccde:	test   BYTE PTR [edi-0x7b5df281],dl
  41cce4:	xor    dl,BYTE PTR [edx+eiz*2-0x3ad9c182]
  41cceb:	ds jp  0x41cd03
  41ccee:	fcmovbe st,st(7)
  41ccf0:	ins    BYTE PTR es:[edi],dx
  41ccf1:	cmp    al,0x1a
  41ccf3:	xchg   esp,eax
  41ccf4:	adc    al,0xf8
  41ccf6:	imul   edx,DWORD PTR [esp+eax*4],0x35
  41ccfa:	out    0x31,al
  41ccfc:	fcmovbe st,st(1)
  41ccfe:	lods   al,BYTE PTR ds:[esi]
  41ccff:	sub    al,BYTE PTR [ecx-0x2b7c1188]
  41cd05:	adc    bl,al
  41cd07:	stos   BYTE PTR es:[edi],al
  41cd08:	je     0x41cc8f
  41cd0a:	shr    BYTE PTR ds:0xd2a31881,cl
  41cd10:	rcr    DWORD PTR [esi-0x4f],1
  41cd13:	dec    ebx
  41cd14:	mov    DWORD PTR [ecx+0x22],esp
  41cd17:	aaa    
  41cd18:	scas   al,BYTE PTR es:[edi]
  41cd19:	js     0x41cca3
  41cd1b:	xchg   esi,eax
  41cd1c:	shr    ch,1
  41cd1e:	push   0xffffffa6
  41cd20:	push   edi
  41cd21:	je     0x41cd55
  41cd23:	cs retf 
  41cd25:	retf   
  41cd26:	(bad)  
  41cd27:	or     eax,0xfada8f76
  41cd2c:	fyl2x  
  41cd2e:	test   DWORD PTR [esi],0x8ce802ca
  41cd34:	mov    ecx,edx
  41cd36:	lahf   
  41cd37:	lahf   
  41cd38:	scas   eax,DWORD PTR es:[edi]
  41cd39:	cwde   
  41cd3a:	jg     0x41ccc8
  41cd3c:	retf   0xad85
  41cd3f:	jg     0x41cda0
  41cd41:	mov    ebp,DWORD PTR [edi+0x19]
  41cd44:	cmc    
  41cd45:	and    eax,0x33792a6f
  41cd4a:	and    dl,BYTE PTR [edx-0x8]
  41cd4d:	mov    cl,0xf9
  41cd4f:	fcom   QWORD PTR [edi]
  41cd51:	cdq    
  41cd52:	xchg   esp,eax
  41cd53:	paddq  mm7,QWORD PTR [edi-0x2b]
  41cd57:	mov    ds:0xd4cfaa67,al
  41cd5c:	adc    DWORD PTR [ebx+0x47219b43],eax
  41cd62:	ja     0x41cd9a
  41cd64:	icebp  
  41cd65:	mov    ebp,0xd918d90e
  41cd6a:	pop    ecx
  41cd6b:	and    DWORD PTR [edx],0x92a5f145
  41cd71:	pop    esi
  41cd72:	stos   BYTE PTR es:[edi],al
  41cd73:	repz popf 
  41cd75:	xchg   ebx,eax
  41cd76:	fisttp QWORD PTR [esi-0x6a92d0cb]
  41cd7c:	jne    0x41cda2
  41cd7e:	xchg   esp,eax
  41cd7f:	arpl   WORD PTR [edi],si
  41cd81:	stos   DWORD PTR es:[edi],eax
  41cd82:	lods   al,BYTE PTR ds:[esi]
  41cd83:	jl     0x41cd3f
  41cd85:	xor    dh,BYTE PTR [ebx+0x320fba2c]
  41cd8b:	push   cs
  41cd8c:	xchg   ecx,eax
  41cd8d:	adc    BYTE PTR [ebp-0x25],ah
  41cd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd91:	xchg   ecx,eax
  41cd92:	popf   
  41cd93:	mov    BYTE PTR [edi+0x2],cl
  41cd96:	int3   
  41cd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd98:	rol    DWORD PTR fs:[ecx+0x712ee2bd],1
  41cd9f:	xchg   BYTE PTR [edi-0x1dcf468c],cl
  41cda5:	nop
  41cda6:	loope  0x41cdca
  41cda8:	cmp    BYTE PTR [ecx],dl
  41cdaa:	fnstsw WORD PTR [edx+0x8]
  41cdad:	outs   dx,BYTE PTR ds:[esi]
  41cdae:	aaa    
  41cdaf:	sbb    edx,ebx
  41cdb1:	fbstp  TBYTE PTR ds:0x1d180212
  41cdb7:	mov    eax,0x9ed56f6e
  41cdbc:	fbld   TBYTE PTR [eax]
  41cdbe:	pop    edi
  41cdbf:	cmp    ah,0x5c
  41cdc2:	jae    0x41cda9
  41cdc4:	test   DWORD PTR [ebx-0x77924534],ebx
  41cdca:	(bad)  
  41cdcb:	rcr    BYTE PTR [edx],cl
  41cdcd:	and    DWORD PTR [edx],eax
  41cdcf:	pop    eax
  41cdd0:	cmc    
  41cdd1:	jmp    0x58bda75c
  41cdd6:	mov    edi,0x70746b3
  41cddb:	cs aaa 
  41cddd:	push   edx
  41cdde:	rcr    BYTE PTR [ecx],cl
  41cde0:	fst    st(7)
  41cde2:	adc    esp,ecx
  41cde4:	mov    eax,fs:0xbc297d63
  41cdea:	cli    
  41cdeb:	gs pop ebp
  41cded:	or     eax,0x9d6fa0eb
  41cdf2:	mov    ds:0x801c7981,al
  41cdf7:	aas    
  41cdf8:	jae    0x41ce4e
  41cdfa:	jne    0x41ce25
  41cdfc:	sub    BYTE PTR [esi-0x52],dl
  41cdff:	pop    ebp
  41ce00:	dec    esp
  41ce01:	shl    ah,0x18
  41ce04:	push   edi
  41ce05:	sub    DWORD PTR [ebp+0x25],0xffffff89
  41ce09:	inc    eax
  41ce0a:	fadd   DWORD PTR [edx+0x51846595]
  41ce10:	and    dl,BYTE PTR [edx-0x7b]
  41ce13:	or     al,0xf4
  41ce15:	or     DWORD PTR [edi-0x1a],0xc8b68fdd
  41ce1c:	push   ebp
  41ce1d:	scas   al,BYTE PTR es:[edi]
  41ce1e:	fbstp  TBYTE PTR [edx]
  41ce20:	daa    
  41ce21:	add    al,0x81
  41ce23:	shl    DWORD PTR [esi+ebx*8+0x50],0xb2
  41ce28:	imul   ecx,DWORD PTR [edx-0x75],0x72
  41ce2c:	add    al,0xf
  41ce2e:	adc    al,0x9b
  41ce30:	lsl    ecx,dx
  41ce33:	sbb    BYTE PTR ds:0x7972efeb,0xf9
  41ce3a:	enter  0xcd98,0xe8
  41ce3e:	xchg   ecx,eax
  41ce3f:	cmp    al,0xbb
  41ce41:	mov    eax,ds:0xe4f8eab9
  41ce46:	sub    edx,DWORD PTR [esi+0x7c]
  41ce49:	or     DWORD PTR [esi-0x4f868f14],edx
  41ce4f:	mov    DWORD PTR [edi],esi
  41ce51:	xor    al,0x55
  41ce53:	mov    esp,0xf6ed8d18
  41ce58:	test   al,0x77
  41ce5a:	loopne 0x41ceaa
  41ce5c:	out    dx,eax
  41ce5d:	retf   
  41ce5e:	(bad)  
  41ce5f:	(bad)  
  41ce60:	inc    esi
  41ce61:	pusha  
  41ce62:	dec    esi
  41ce63:	inc    esp
  41ce65:	and    ch,dl
  41ce67:	lahf   
  41ce68:	pop    edx
  41ce69:	pop    ebx
  41ce6a:	mov    al,0xf2
  41ce6c:	mov    dh,0x84
  41ce6e:	clc    
  41ce6f:	and    eax,0x96ec707e
  41ce74:	test   BYTE PTR [edi+0x77],ch
  41ce77:	jbe    0x41ce74
  41ce79:	xor    al,0xb1
  41ce7b:	pop    ecx
  41ce7c:	pop    ds
  41ce7d:	retf   0xce45
  41ce80:	lds    edx,FWORD PTR [ebx]
  41ce82:	cmc    
  41ce83:	xchg   ecx,eax
  41ce84:	pop    ecx
  41ce85:	js     0x41ce1c
  41ce87:	push   cs
  41ce88:	jge    0x41ce31
  41ce8a:	imul   esi,ebx,0xffffffd0
  41ce8d:	jbe    0x41ce39
  41ce8f:	push   ecx
  41ce90:	fld    st(7)
  41ce92:	data16 and dl,ch
  41ce95:	loope  0x41ce85
  41ce97:	push   ecx
  41ce98:	inc    esi
  41ce99:	jbe    0x41ce22
  41ce9b:	scas   al,BYTE PTR es:[edi]
  41ce9c:	add    BYTE PTR [ecx-0x50],ch
  41ce9f:	out    0xc1,eax
  41cea1:	or     al,0xa4
  41cea3:	int    0x84
  41cea5:	shl    dh,1
  41cea7:	inc    ebx
  41cea8:	jno    0x41ce43
  41ceaa:	shr    BYTE PTR [edi],1
  41ceac:	cdq    
  41cead:	imul   esi,DWORD PTR [edi+0x33],0x3fdea6d8
  41ceb4:	idiv   BYTE PTR ds:0x504ff35c
  41ceba:	ds retf 0x49b9
  41cebe:	mov    ecx,0x5967a13d
  41cec3:	lods   al,BYTE PTR ds:[esi]
  41cec4:	imul   BYTE PTR [edi+edx*8]
  41cec7:	loop   0x41ce84
  41cec9:	scas   al,BYTE PTR es:[edi]
  41ceca:	test   BYTE PTR [ecx],0x31
  41cecd:	mov    cl,0xfa
  41cecf:	in     al,0xeb
  41ced1:	test   BYTE PTR [ebx],cl
  41ced3:	push   es
  41ced4:	or     bh,BYTE PTR [edi+0x6777992]
  41ceda:	jae    0x41ce85
  41cedc:	fucomi st,st(3)
  41cede:	imul   esi,DWORD PTR [edi-0x2c],0x1
  41cee2:	push   es
  41cee3:	loopne 0x41cf25
  41cee5:	fnstsw WORD PTR [ebp+0x7c]
  41cee8:	std    
  41cee9:	daa    
  41ceea:	shl    BYTE PTR [ebx-0x48],1
  41ceed:	fs hlt 
  41ceef:	fstp   QWORD PTR [ebx]
  41cef1:	ins    DWORD PTR es:[edi],dx
  41cef2:	sub    BYTE PTR [esi*2+0x24acee14],ah
  41cef9:	ins    DWORD PTR es:[edi],dx
  41cefa:	jp     0x41ce8f
  41cefc:	adc    eax,DWORD PTR [ebx-0x49]
  41ceff:	call   0x33446ce5
  41cf04:	and    eax,0x4b0aa1c5
  41cf09:	inc    ebp
  41cf0a:	outs   dx,DWORD PTR ds:[esi]
  41cf0b:	mov    bl,0x46
  41cf0d:	popf   
  41cf0e:	cmp    dh,BYTE PTR [ebp-0x5c]
  41cf11:	push   edx
  41cf12:	xchg   edi,eax
  41cf13:	inc    edi
  41cf14:	and    esp,edx
  41cf16:	and    DWORD PTR [ebx],0x6b
  41cf19:	(bad)  
  41cf1a:	arpl   WORD PTR [edi+0x7d],ax
  41cf1d:	retf   
  41cf1e:	ret    0x47fa
  41cf21:	add    al,0x79
  41cf23:	xchg   esp,eax
  41cf24:	arpl   WORD PTR [edx],bx
  41cf26:	clc    
  41cf27:	in     eax,dx
  41cf28:	sub    esi,edx
  41cf2a:	jo     0x41cfaa
  41cf2c:	loope  0x41cf37
  41cf2e:	xor    al,0xd7
  41cf30:	outs   dx,DWORD PTR ds:[esi]
  41cf31:	dec    ebp
  41cf32:	call   0x5bde:0x83319516
  41cf39:	sub    eax,0x8b4593b2
  41cf3e:	add    DWORD PTR [eax+0x69dc12b9],ebp
  41cf44:	mov    ds:0xdfb8d672,al
  41cf49:	fimul  DWORD PTR [edx+eax*8+0x41]
  41cf4d:	mov    esp,0x167d9546
  41cf52:	add    al,0xd
  41cf54:	bnd jle 0x41cf00
  41cf57:	sbb    eax,0x75dad923
  41cf5c:	popa   
  41cf5d:	sub    ebx,DWORD PTR [edx+0x42]
  41cf60:	push   ss
  41cf61:	jge    0x41cf47
  41cf63:	jecxz  0x41cf8a
  41cf65:	wbinvd 
  41cf67:	imul   esi,esi,0xffffffd8
  41cf6a:	jp     0x41cf57
  41cf6c:	sub    BYTE PTR [edi-0x1f],al
  41cf6f:	mov    ah,0x42
  41cf71:	popa   
  41cf72:	in     eax,dx
  41cf73:	mov    ecx,DWORD PTR ds:0xf95775c2
  41cf79:	push   esp
  41cf7a:	fcmovbe st,st(4)
  41cf7c:	sbb    al,0x76
  41cf7e:	xor    eax,0xab3c192
  41cf83:	xchg   edx,ecx
  41cf85:	sbb    al,0x29
  41cf87:	xchg   edx,eax
  41cf88:	sbb    DWORD PTR [edx-0x982cfae],esi
  41cf8e:	(bad)  
  41cf8f:	mov    cl,0x74
  41cf91:	mov    ds:0x1c66bb3a,al
  41cf96:	sbb    ecx,ebp
  41cf98:	push   ss
  41cf99:	cwde   
  41cf9a:	mul    BYTE PTR [eax-0x74]
  41cf9d:	ret    0xb88e
  41cfa0:	mov    ah,0x4
  41cfa2:	jmp    0x41cfaa
  41cfa4:	mov    ?,WORD PTR gs:[esi+0x6bac94d1]
  41cfab:	push   ecx
  41cfac:	pop    ecx
  41cfad:	ret    0xa1fe
  41cfb0:	imul   ebp,DWORD PTR [ebp+esi*2-0x40385b9e],0xffffffdd
  41cfb8:	stos   DWORD PTR es:[edi],eax
  41cfb9:	fimul  DWORD PTR [ecx+0x70]
  41cfbc:	mov    bh,0x73
  41cfbe:	pop    esp
  41cfbf:	pop    ebx
  41cfc0:	xor    DWORD PTR [edi-0x37451430],ebx
  41cfc6:	inc    esi
  41cfc7:	sbb    DWORD PTR [esi+0x6],0xffffff9b
  41cfcb:	dec    esp
  41cfcc:	rcl    BYTE PTR [ecx+0x17ae329f],1
  41cfd2:	mov    ebp,0x6a7902b5
  41cfd7:	mov    eax,ds:0x65e1788f
  41cfdc:	or     BYTE PTR [edi+0xefd5992],dh
  41cfe2:	jne    0x41cfdb
  41cfe4:	outs   dx,DWORD PTR ds:[esi]
  41cfe5:	push   cs
  41cfe6:	and    al,0xa2
  41cfe8:	mov    dh,0x31
  41cfea:	in     al,0xfd
  41cfec:	ds retf 
  41cfee:	pop    ebx
  41cfef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff0:	mov    dh,0xb7
  41cff2:	inc    ebp
  41cff3:	adc    BYTE PTR [edx+0x29bd07bc],0xdc
  41cffa:	and    al,BYTE PTR [esi]
  41cffc:	stos   DWORD PTR es:[edi],eax
  41cffd:	gs test al,0x14
  41d000:	out    0x63,al
  41d002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d003:	jbe    0x41d03a
  41d005:	pop    ss
  41d006:	xor    esi,DWORD PTR [esp+edi*2+0xd7a757c]
  41d00d:	test   DWORD PTR [ebp-0x41],0xfd22f4e9
  41d014:	dec    ebx
  41d015:	xchg   ebx,eax
  41d016:	pop    esi
  41d017:	adc    BYTE PTR [ecx+0x12],dl
  41d01a:	gs daa 
  41d01c:	cmp    eax,0x50f52f5a
  41d021:	push   esp
  41d022:	xor    eax,0x4b1a3815
  41d027:	and    ebp,edx
  41d029:	jb     0x41cfc5
  41d02b:	outs   dx,DWORD PTR ds:[esi]
  41d02c:	pop    ebp
  41d02d:	call   0x260cef64
  41d032:	and    bh,al
  41d034:	xchg   esp,eax
  41d035:	jbe    0x41d062
  41d037:	jae    0x41d085
  41d039:	mov    ds:0x9565bdd,eax
  41d03e:	loope  0x41d01f
  41d040:	out    dx,eax
  41d041:	cld    
  41d042:	call   0xe704:0xeeee9e9e
  41d049:	xchg   ecx,eax
  41d04a:	ret    
  41d04b:	add    dl,BYTE PTR ss:[esi+0x5d]
  41d04f:	loopne 0x41d096
  41d051:	in     al,dx
  41d052:	fisttp QWORD PTR ds:[ebp+0x5a5b11c]
  41d059:	cmp    DWORD PTR [ecx-0x27],esi
  41d05c:	dec    eax
  41d05d:	sub    BYTE PTR [esp+ebx*8],dl
  41d060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d061:	fldcw  WORD PTR [esi+ebp*2-0x23]
  41d065:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d067:	push   eax
  41d068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d069:	sbb    bh,BYTE PTR [eax]
  41d06b:	fsub   st(4),st
  41d06d:	mov    esp,0xe9cc8485
  41d072:	ja     0x41d044
  41d074:	xchg   ebp,edi
  41d076:	mov    al,ds:0x4a9aa94
  41d07b:	pop    es
  41d07c:	cmp    DWORD PTR [edi+0x26],0xa
  41d080:	or     ah,ch
  41d082:	test   al,0xcf
  41d084:	inc    edi
  41d085:	bound  eax,QWORD PTR [edx-0x7c]
  41d088:	adc    al,0x8
  41d08a:	pusha  
  41d08b:	out    dx,eax
  41d08c:	arpl   WORD PTR [esi+0x72fe0ee3],dx
  41d092:	mov    DWORD PTR [ecx-0x61006c60],esi
  41d098:	lods   al,BYTE PTR ds:[esi]
  41d099:	imul   eax,DWORD PTR [esi-0x73],0xffffff82
  41d09d:	mov    cl,0x7b
  41d09f:	push   ebx
  41d0a0:	xchg   esi,eax
  41d0a1:	add    al,0x4c
  41d0a3:	or     eax,0xc2486e69
  41d0a8:	jmp    0x231b2376
  41d0ad:	gs lahf 
  41d0af:	xor    eax,0xb306268c
  41d0b4:	push   edx
  41d0b5:	clc    
  41d0b6:	dec    esi
  41d0b7:	arpl   WORD PTR [eax+0x374f1fe0],ax
  41d0bd:	jnp    0x41d0fe
  41d0bf:	pop    esp
  41d0c0:	and    edx,DWORD PTR [edi-0x1c]
  41d0c3:	ds ss loope 0x41d0c6
  41d0c7:	mov    ds:0x1a16210e,eax
  41d0cc:	mov    edx,0xb7ff85b9
  41d0d1:	or     eax,0xea59a36e
  41d0d6:	xchg   ebx,eax
  41d0d7:	xchg   edx,eax
  41d0d8:	xchg   ecx,eax
  41d0d9:	iret   
  41d0da:	mov    ebx,ecx
  41d0dc:	and    esp,DWORD PTR [esi+0x56]
  41d0df:	mov    ecx,0x1bdf4888
  41d0e4:	loopne 0x41d09b
  41d0e6:	sahf   
  41d0e7:	push   edx
  41d0e8:	pop    es
  41d0e9:	mov    ecx,0x5ed157e1
  41d0ee:	inc    ebp
  41d0ef:	out    dx,al
  41d0f0:	je     0x41d0a4
  41d0f2:	imul   ebp,DWORD PTR [eax],0xffffffe0
  41d0f5:	jb     0x41d0e9
  41d0f7:	stos   BYTE PTR es:[edi],al
  41d0f8:	inc    ebx
  41d0f9:	loop   0x41d0f1
  41d0fb:	test   al,0x37
  41d0fd:	xchg   DWORD PTR [ebp+0x5],edx
  41d100:	enter  0x6549,0x4f
  41d104:	retf   0xe3ca
  41d107:	imul   ebp,esi,0x16
  41d10a:	repz push 0x943f3531
  41d110:	and    eax,0x3bd816eb
  41d115:	in     eax,dx
  41d116:	mov    BYTE PTR [bp+si-0x5330],bh
  41d11b:	loopne 0x41d0d7
  41d11d:	cmp    eax,0x2ce9ba1c
  41d122:	xlat   BYTE PTR ds:[ebx]
  41d123:	jecxz  0x41d0e8
  41d125:	inc    edx
  41d126:	mov    BYTE PTR [edx+0x727a236d],dl
  41d12c:	sub    al,0x20
  41d12e:	cmc    
  41d12f:	or     ecx,edx
  41d131:	div    DWORD PTR [eax-0x2f6bbb8]
  41d137:	cmp    eax,0xbe947643
  41d13c:	adc    BYTE PTR [ebp+0x102faf7a],dh
  41d142:	leave  
  41d143:	mov    ebp,0x94d9353
  41d148:	je     0x41d0e3
  41d14a:	push   esi
  41d14b:	adc    eax,0x8ab3ce21
  41d150:	pop    ds
  41d151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d152:	xor    ecx,DWORD PTR [ecx-0x13]
  41d155:	in     al,0xb3
  41d157:	iret   
  41d158:	pop    ss
  41d159:	test   eax,0x6f0a0e2b
  41d15e:	inc    edi
  41d15f:	push   esp
  41d160:	mov    al,ds:0x5f11c351
  41d165:	xchg   ebx,eax
  41d166:	hlt    
  41d167:	xor    eax,0xed162b02
  41d16c:	cs addr16 mov ebx,0xb09cf96b
  41d173:	fnstsw WORD PTR [esi-0x6f4f8a1f]
  41d179:	je     0x41d1c7
  41d17b:	mov    bx,0x4442
  41d17f:	adc    DWORD PTR [esi-0x2a],0x7e0f9c3b
  41d186:	mov    ecx,0xccf41a91
  41d18b:	pop    es
  41d18c:	enter  0x419a,0x8
  41d190:	cmp    ebx,DWORD PTR [ecx-0x13e64d7a]
  41d196:	cli    
  41d197:	or     cl,BYTE PTR [esi]
  41d199:	dec    ebp
  41d19a:	je     0x41d215
  41d19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d19d:	mov    esi,0xada1ec55
  41d1a2:	pop    edi
  41d1a3:	and    eax,0xa8bcb0ba
  41d1a8:	(bad)
  41d1ac:	cdq    
  41d1ad:	xchg   esp,esp
  41d1af:	jmp    0x64286a50
  41d1b4:	test   BYTE PTR [ebp+0x7a],0xd9
  41d1b8:	ret    0xd54a
  41d1bb:	pop    esi
  41d1bc:	mov    ch,0x14
  41d1be:	xor    eax,0x38d0580c
  41d1c3:	dec    ebx
  41d1c4:	fs push esi
  41d1c6:	mov    dl,0xdc
  41d1c8:	ja     0x41d14b
  41d1ca:	adc    BYTE PTR [edx-0x2c],dh
  41d1cd:	xchg   edx,eax
  41d1ce:	retf   
  41d1cf:	cli    
  41d1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1d1:	daa    
  41d1d2:	data16 add al,0xf0
  41d1d5:	iret   
  41d1d6:	jmp    0x41d224
  41d1d8:	mov    BYTE PTR [edi+0x4b],bl
  41d1db:	aad    0xc0
  41d1dd:	jl     0x41d1dc
  41d1df:	xlat   BYTE PTR ds:[ebx]
  41d1e0:	fwait
  41d1e1:	mov    bh,0x4
  41d1e3:	(bad)  
  41d1e4:	cmp    ecx,ecx
  41d1e6:	sbb    DWORD PTR [ebx+0x5ac19fb1],ecx
  41d1ec:	jbe    0x41d1f7
  41d1ee:	into   
  41d1ef:	cdq    
  41d1f0:	repnz or esi,edi
  41d1f3:	inc    esi
  41d1f4:	xchg   DWORD PTR ds:0xd1e8a7ca,esp
  41d1fa:	sub    BYTE PTR [esp+ebx*4-0x79],0x38
  41d1ff:	dec    edi
  41d200:	shr    BYTE PTR [edx],1
  41d202:	add    edx,DWORD PTR [ebp-0x4]
  41d205:	dec    ebp
  41d206:	xor    al,0x7f
  41d208:	lahf   
  41d209:	fisubr WORD PTR [edi-0x4]
  41d20c:	jmp    0xb42c:0x2c7c32aa
  41d213:	shr    bh,0x6c
  41d216:	or     BYTE PTR [ebp+0x64],bh
  41d219:	(bad)  
  41d21a:	aad    0x22
  41d21c:	mov    esi,eax
  41d21e:	push   ebp
  41d21f:	cmc    
  41d220:	xchg   ecx,eax
  41d221:	add    ch,cl
  41d223:	push   0xe0df8dd7
  41d228:	loope  0x41d1b2
  41d22a:	ds inc edx
  41d22c:	adc    al,BYTE PTR [edi*1-0x72ee28e1]
  41d233:	jnp    0x41d273
  41d235:	mov    edi,esp
  41d237:	cld    
  41d238:	cmp    DWORD PTR [eax],eax
  41d23a:	mov    bh,0x85
  41d23c:	cmp    ecx,DWORD PTR [esi-0x6ffec0d7]
  41d242:	ror    BYTE PTR [esi],cl
  41d244:	add    ch,BYTE PTR [esi-0x4eb30fee]
  41d24a:	adc    ecx,DWORD PTR [ebp-0x6c521f4f]
  41d250:	xchg   ebp,eax
  41d251:	cli    
  41d252:	repz gs jb 0x3242faed
  41d25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d25b:	pushf  
  41d25c:	lods   al,BYTE PTR ds:[esi]
  41d25d:	fsubr  DWORD PTR [ebx+0x2dc34954]
  41d263:	push   cs
  41d264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d265:	lock cmp DWORD PTR [ecx+0x398b3b47],esp
  41d26c:	jae    0x41d269
  41d26e:	xor    DWORD PTR ds:0xb8619909,esp
  41d274:	in     eax,dx
  41d275:	xor    ecx,eax
  41d277:	add    al,0xbf
  41d279:	jae    0x41d269
  41d27b:	xchg   DWORD PTR [esi],ecx
  41d27d:	jbe    0x41d29c
  41d27f:	dec    ecx
  41d280:	and    ebp,edx
  41d282:	jnp    0x41d208
  41d284:	ror    BYTE PTR [ecx*4-0x2e9e8ea1],0xa1
  41d28c:	out    0xcd,al
  41d28e:	mov    esp,0xb31d7962
  41d293:	sub    DWORD PTR [ebx+0x7344de61],edx
  41d299:	out    0x4,eax
  41d29b:	push   edx
  41d29c:	xchg   edi,eax
  41d29d:	clc    
  41d29e:	ret    
  41d29f:	pop    ecx
  41d2a0:	imul   edx,DWORD PTR [ecx+0x34],0x14
  41d2a4:	push   ebx
  41d2a5:	jl     0x41d227
  41d2a7:	sub    BYTE PTR [edi+0x2890eb16],al
  41d2ad:	fdiv   st,st(1)
  41d2af:	add    BYTE PTR [eax],cl
  41d2b1:	fwait
  41d2b2:	mov    ecx,ebx
  41d2b4:	cmp    esp,DWORD PTR [edi-0x3783447f]
  41d2ba:	adc    BYTE PTR [ebp-0x54],al
  41d2bd:	(bad)  
  41d2be:	cmp    BYTE PTR [ebx+0x57],bl
  41d2c1:	add    ah,BYTE PTR [ecx]
  41d2c3:	scas   eax,DWORD PTR es:[edi]
  41d2c4:	mov    ah,0xfb
  41d2c6:	inc    eax
  41d2c7:	push   ebx
  41d2c8:	push   ds
  41d2c9:	jmp    0x4e8:0x10178976
  41d2d0:	jno    0x41d2be
  41d2d2:	retf   0x3b1f
  41d2d5:	jge    0x41d27f
  41d2d7:	shr    DWORD PTR [edi-0x68bc3f48],1
  41d2dd:	cli    
  41d2de:	(bad)  
  41d2df:	test   eax,0xaf3817f1
  41d2e4:	dec    eax
  41d2e5:	or     dh,dh
  41d2e7:	dec    dh
  41d2e9:	add    DWORD PTR [si+0xe],edx
  41d2ed:	inc    esp
  41d2ee:	cdq    
  41d2ef:	cmp    BYTE PTR [eax],0x69
  41d2f2:	leave  
  41d2f3:	cwde   
  41d2f4:	xchg   edx,eax
  41d2f5:	pop    ebx
  41d2f6:	push   edx
  41d2f7:	test   eax,0x18b6d55c
  41d2fc:	scas   al,BYTE PTR es:[edi]
  41d2fd:	ret    0x427b
  41d300:	pop    ds
  41d301:	xor    cl,ch
  41d303:	jecxz  0x41d338
  41d305:	mov    fs,WORD PTR [edi+eiz*2+0x2908a383]
  41d30c:	mov    al,0xd6
  41d30e:	mov    bh,0xb3
  41d310:	test   BYTE PTR [ebx+esi*4-0x75],al
  41d314:	rol    al,1
  41d316:	test   eax,0xf376800d
  41d31b:	mov    ds:0x4c59248c,al
  41d320:	(bad)  
  41d321:	fnstsw WORD PTR [eax+0x34]
  41d324:	mov    dl,0xb9
  41d326:	shl    BYTE PTR [eax+0x7389f051],1
  41d32c:	enter  0x1579,0x5b
  41d330:	ret    
  41d331:	idiv   DWORD PTR [ecx+edx*2-0x25d3699d]
  41d338:	inc    esp
  41d339:	jecxz  0x41d3b5
  41d33b:	sub    al,0x2
  41d33d:	add    eax,0x73bb80f3
  41d342:	stc    
  41d343:	imul   eax,DWORD PTR [esi-0x1a3ab78f],0xba5abbb3
  41d34d:	ret    
  41d34e:	int    0x3b
  41d350:	leave  
  41d351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d352:	mov    ebp,0x5812817a
  41d357:	jae    0x41d39f
  41d359:	bound  edi,QWORD PTR [bx+0x5254]
  41d35e:	push   edx
  41d35f:	xchg   DWORD PTR [edx+0x5693331d],ebp
  41d365:	dec    ecx
  41d366:	lds    ebp,FWORD PTR [ebp-0x19c10e60]
  41d36c:	xchg   ecx,eax
  41d36d:	iret   
  41d36e:	fmul   DWORD PTR [ecx-0x6]
  41d371:	iret   
  41d372:	cdq    
  41d373:	xor    BYTE PTR [esi+0x6990ca8],bh
  41d379:	not    DWORD PTR [edx+0x2435a5d7]
  41d37f:	inc    edi
  41d380:	inc    ecx
  41d381:	dec    eax
  41d382:	dec    ebp
  41d383:	add    dl,bl
  41d385:	xor    DWORD PTR [eax],esi
  41d387:	lods   eax,DWORD PTR ds:[esi]
  41d388:	push   edi
  41d389:	icebp  
  41d38a:	mov    bh,0x24
  41d38c:	cwde   
  41d38d:	adc    al,0xa
  41d38f:	adc    esp,0x1f5477ec
  41d395:	pop    ss
  41d396:	xchg   ebp,eax
  41d397:	loopne 0x41d3e5
  41d399:	lods   eax,DWORD PTR ds:[esi]
  41d39a:	stos   DWORD PTR es:[edi],eax
  41d39b:	or     ebp,edi
  41d39d:	test   DWORD PTR [esi-0x18],0x2d7b9c62
  41d3a4:	hlt    
  41d3a5:	aam    0xe1
  41d3a7:	(bad)  
  41d3a8:	fldenv [eax]
  41d3aa:	scas   al,BYTE PTR es:[edi]
  41d3ab:	das    
  41d3ac:	mov    BYTE PTR [eax-0x206dbb12],ch
  41d3b2:	popa   
  41d3b3:	fnstsw WORD PTR ds:0x5a3cd346
  41d3b9:	mov    dh,0x29
  41d3bb:	shl    DWORD PTR [esi],1
  41d3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3be:	je     0x41d3ce
  41d3c0:	and    al,0xf7
  41d3c2:	and    eax,0xe60424dc
  41d3c7:	lahf   
  41d3c8:	mov    ch,0xd
  41d3ca:	dec    ebx
  41d3cb:	pushw  ss
  41d3cd:	xlat   BYTE PTR fs:[ebx]
  41d3cf:	jae    0x41d3ad
  41d3d1:	(bad)  
  41d3d2:	enter  0x72e9,0x4e
  41d3d6:	and    DWORD PTR [esi+0x3ca359a],eax
  41d3dc:	sbb    BYTE PTR [ecx+esi*4],dl
  41d3df:	sub    eax,0xa2ddbf76
  41d3e4:	inc    esp
  41d3e5:	mov    edx,DWORD PTR [eax+0x1c]
  41d3e8:	mov    al,ds:0x541127e0
  41d3ed:	test   al,0xfa
  41d3ef:	sbb    BYTE PTR [esi+0x5d],bl
  41d3f2:	or     ch,BYTE PTR [edx+0x5757fdd0]
  41d3f8:	sbb    edx,DWORD PTR [esi+0x4a32dd6c]
  41d3fe:	mov    ch,0x75
  41d400:	xchg   esi,eax
  41d401:	lods   eax,DWORD PTR ds:[esi]
  41d402:	and    al,0x6
  41d404:	sub    ebp,DWORD PTR [ebx+0x691d4dc6]
  41d40a:	cmp    eax,0xa65b2b37
  41d40f:	xchg   esi,eax
  41d410:	ss scas al,BYTE PTR es:[edi]
  41d412:	adc    BYTE PTR [ebp-0x73],bl
  41d415:	push   ds
  41d416:	push   ebp
  41d417:	nop
  41d418:	adc    DWORD PTR [ecx+esi*4-0x34],edi
  41d41c:	call   0x4469:0x9602e255
  41d423:	xor    al,0xe1
  41d425:	bound  edi,QWORD PTR [esp+eiz*2+0x7ffc450a]
  41d42c:	jnp    0x41d3f0
  41d42e:	and    eax,DWORD PTR [esp+edx*8-0x1c]
  41d432:	pop    ecx
  41d433:	lock clc 
  41d435:	(bad)  
  41d436:	xchg   esi,eax
  41d437:	ficomp WORD PTR [esi]
  41d439:	push   esi
  41d43a:	cmp    edx,DWORD PTR [ecx]
  41d43c:	cmp    esp,esi
  41d43e:	push   esp
  41d43f:	shl    BYTE PTR [eax+ebp*8+0x58],cl
  41d443:	ret    
  41d444:	iret   
  41d445:	pop    es
  41d446:	call   0xe14defd2
  41d44b:	cwde   
  41d44c:	adc    eax,0x5ad4e1a1
  41d451:	popa   
  41d452:	or     eax,0x7b77945e
  41d457:	push   cs
  41d458:	leave  
  41d459:	jno    0x41d4ac
  41d45b:	add    ecx,DWORD PTR [ebp-0x17]
  41d45e:	shr    DWORD PTR [edi+0x61],0xf3
  41d462:	jne    0x41d424
  41d464:	test   ch,dl
  41d466:	test   eax,0xf0e63e56
  41d46b:	sbb    DWORD PTR [edi+0x29925d56],0x41b92d33
  41d475:	outs   dx,DWORD PTR ds:[esi]
  41d476:	int3   
  41d477:	aam    0xf8
  41d479:	(bad)  
  41d47a:	in     al,dx
  41d47b:	xrelease xchg DWORD PTR [ebp+0x3],eax
  41d47f:	cmp    DWORD PTR [ebx+ebp*8-0x55],edx
  41d483:	mov    BYTE PTR [edi+0x17],al
  41d486:	ret    0x4678
  41d489:	xchg   DWORD PTR es:[ecx-0x4a],ebx
  41d48d:	mov    cl,0x1f
  41d48f:	clc    
  41d490:	sbb    eax,0x880437a5
  41d495:	add    DWORD PTR [ecx+0x22],esi
  41d498:	mov    DWORD PTR [edx+0x1e],eax
  41d49b:	push   ds
  41d49c:	cdq    
  41d49d:	(bad)  [edx+ebp*1+0xfc6276f]
  41d4a4:	and    eax,0x9f96a8c6
  41d4a9:	nop
  41d4aa:	neg    BYTE PTR [edx+0x1a2f271]
  41d4b0:	out    0x31,al
  41d4b2:	sub    ecx,edx
  41d4b4:	add    ebx,DWORD PTR [eax+0x7bad5f00]
  41d4ba:	cld    
  41d4bb:	and    bl,BYTE PTR [eax-0x2c]
  41d4be:	push   0x41522ec
  41d4c3:	xchg   DWORD PTR [edi+ebp*8],edx
  41d4c6:	jmp    0x41d4f8
  41d4c8:	mov    ds:0xe5dde680,al
  41d4cd:	ss inc esp
  41d4cf:	out    dx,eax
  41d4d0:	out    0xba,eax
  41d4d2:	cmc    
  41d4d3:	mov    ecx,0xc7ce9852
  41d4d8:	fcomp  QWORD PTR [ebx+0x55]
  41d4db:	mov    ah,0xef
  41d4dd:	sub    dl,BYTE PTR [edx]
  41d4df:	mov    al,0x75
  41d4e1:	sbb    eax,0x98c08afe
  41d4e6:	pop    ebp
  41d4e7:	repz es cmp al,0x13
  41d4eb:	mov    edx,0xf8424c36
  41d4f0:	in     al,0x71
  41d4f2:	mov    bl,0x4b
  41d4f4:	cmp    cl,ah
  41d4f6:	pop    ds
  41d4f7:	test   DWORD PTR [ecx+0x52],edi
  41d4fa:	mov    al,ds:0xf847d205
  41d4ff:	repnz sti 
  41d501:	mov    BYTE PTR [edx],0x3c
  41d504:	lods   al,BYTE PTR ds:[esi]
  41d505:	jge    0x41d4e9
  41d507:	(bad)  
  41d508:	and    dh,BYTE PTR [ebx+0x2a09a3bd]
  41d50e:	sbb    ecx,DWORD PTR ds:[edx-0x39a250ec]
  41d515:	mov    al,ds:0xcc65fb9d
  41d51a:	inc    ecx
  41d51b:	scas   al,BYTE PTR es:[edi]
  41d51c:	xchg   esp,eax
  41d51d:	pop    esi
  41d51e:	loopne 0x41d54e
  41d520:	shl    DWORD PTR [ebx],0x19
  41d523:	scas   eax,DWORD PTR es:[edi]
  41d524:	mov    ch,0x50
  41d526:	push   edx
  41d527:	rcr    DWORD PTR [edx],1
  41d529:	cli    
  41d52a:	outs   dx,DWORD PTR ds:[esi]
  41d52b:	bound  eax,QWORD PTR [esi+eax*1]
  41d52e:	adc    al,0x1d
  41d530:	fstp   TBYTE PTR [edi-0x5e2aa097]
  41d536:	inc    ecx
  41d537:	pusha  
  41d538:	ins    BYTE PTR es:[edi],dx
  41d539:	aas    
  41d53a:	pop    ecx
  41d53b:	out    dx,al
  41d53c:	pushf  
  41d53d:	mov    cl,0x3e
  41d53f:	mov    bl,0x37
  41d541:	add    ch,dl
  41d543:	mov    dl,0x27
  41d545:	adc    ecx,DWORD PTR [ebx-0x76f0ea62]
  41d54b:	xor    DWORD PTR [ecx+0x62],ecx
  41d54e:	loop   0x41d526
  41d550:	cmc    
  41d551:	in     eax,0x46
  41d553:	mov    bl,0xad
  41d555:	inc    esp
  41d556:	push   es
  41d557:	and    ebx,DWORD PTR [eax]
  41d559:	xchg   edi,eax
  41d55a:	jno    0x41d517
  41d55c:	lock stos BYTE PTR es:[edi],al
  41d55e:	in     eax,dx
  41d55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d560:	js     0x41d5e1
  41d562:	or     al,0xab
  41d564:	jle    0x41d50a
  41d566:	jge    0x41d577
  41d568:	inc    edx
  41d569:	mov    cl,0xd9
  41d56b:	(bad)  
  41d56c:	aad    0x1d
  41d56e:	gs lock xchg edx,eax
  41d571:	sbb    al,0x6a
  41d573:	mov    DWORD PTR [edx+ecx*8],esi
  41d576:	or     ecx,DWORD PTR [edi+0x49]
  41d579:	pop    edx
  41d57a:	sar    DWORD PTR [esi],1
  41d57c:	xor    bl,BYTE PTR [ecx]
  41d57e:	scas   al,BYTE PTR es:[edi]
  41d57f:	shr    DWORD PTR [edi-0x31],0x62
  41d583:	retf   
  41d584:	mov    dl,0xa4
  41d586:	test   al,0xdc
  41d588:	add    DWORD PTR ds:0x2a93485,esp
  41d58e:	push   edx
  41d58f:	xor    edi,eax
  41d591:	(bad)  
  41d592:	inc    esi
  41d593:	ret    
  41d594:	push   ecx
  41d595:	js     0x41d5de
  41d597:	jne    0x41d54a
  41d599:	pop    esp
  41d59a:	cmp    eax,DWORD PTR [edx]
  41d59c:	push   edi
  41d59d:	in     al,dx
  41d59e:	dec    esi
  41d59f:	inc    edi
  41d5a0:	(bad)  
  41d5a1:	xchg   edx,eax
  41d5a2:	lods   al,BYTE PTR ds:[esi]
  41d5a3:	inc    esi
  41d5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a5:	int3   
  41d5a6:	jl     0x41d57f
  41d5a8:	out    dx,eax
  41d5a9:	mov    ah,0x5c
  41d5ab:	in     al,0x5a
  41d5ad:	fld1   
  41d5af:	push   ebp
  41d5b0:	int3   
  41d5b1:	dec    esi
  41d5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b3:	cmp    bl,bh
  41d5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5b6:	shr    BYTE PTR [eax-0x765be94e],1
  41d5bc:	and    eax,0xd20ada39
  41d5c1:	repz pushfw 
  41d5c4:	out    dx,eax
  41d5c5:	neg    DWORD PTR [edi+0x19]
  41d5c8:	add    edi,DWORD PTR [ebx-0x6861e8fa]
  41d5ce:	cmc    
  41d5cf:	inc    ecx
  41d5d0:	pop    ebp
  41d5d1:	cmp    eax,0xa41bc264
  41d5d6:	xor    DWORD PTR [eax+0x32],0x74
  41d5da:	lods   al,BYTE PTR ds:[esi]
  41d5db:	push   edx
  41d5dc:	(bad)  
  41d5dd:	in     al,dx
  41d5de:	lods   eax,DWORD PTR ds:[esi]
  41d5df:	and    al,0xc0
  41d5e1:	xchg   ebx,eax
  41d5e2:	data16 ins BYTE PTR es:[edi],dx
  41d5e4:	mov    ah,0xb4
  41d5e6:	out    dx,eax
  41d5e7:	push   ecx
  41d5e8:	sbb    eax,0xcedd0951
  41d5ed:	(bad)  
  41d5ee:	repnz inc eax
  41d5f0:	adc    ebx,DWORD PTR [eax+0x11]
  41d5f3:	pop    edi
  41d5f4:	dec    esp
  41d5f5:	fidivr WORD PTR [esi+0x6c19dd29]
  41d5fb:	mov    esp,DWORD PTR ds:0xfd1fc2ce
  41d601:	dec    ecx
  41d602:	mov    ebx,0x53977df6
  41d608:	fisubr WORD PTR [esi]
  41d60a:	jmp    0x41d619
  41d60c:	xchg   edx,eax
  41d60d:	int3   
  41d60e:	ds cli 
  41d610:	and    al,0x76
  41d612:	mov    edx,0xe4f51360
  41d617:	jns    0x41d697
  41d619:	sahf   
  41d61a:	cmp    dl,BYTE PTR [ebx]
  41d61c:	push   edi
  41d61d:	inc    ebx
  41d61e:	test   BYTE PTR [ebx-0x7a],0x3
  41d622:	sbb    al,0x62
  41d624:	pop    eax
  41d625:	or     al,0xed
  41d627:	int3   
  41d628:	sbb    eax,0xa9719aa
  41d62d:	lahf   
  41d62e:	pop    edx
  41d62f:	xor    ch,BYTE PTR [ecx+0x24]
  41d632:	cs push ebx
  41d634:	sbb    DWORD PTR [eax],eax
  41d636:	adc    DWORD PTR [eax-0x7435669e],esi
  41d63c:	mov    ch,0x7c
  41d63e:	push   esi
  41d63f:	sbb    BYTE PTR [esi-0x77718556],0x21
  41d646:	pop    ebp
  41d647:	mov    ds:0xfc0a8750,eax
  41d64c:	ins    BYTE PTR es:[edi],dx
  41d64d:	ret    
  41d64e:	mov    ah,0xc4
  41d650:	imul   ebx,DWORD PTR [esi+0x5d3730e5],0xffffffa9
  41d657:	mov    eax,ds:0xa598e99
  41d65c:	sub    al,0x66
  41d65e:	hlt    
  41d65f:	div    BYTE PTR [eax]
  41d661:	mov    ecx,0x9c290854
  41d666:	dec    eax
  41d667:	mov    WORD PTR [edi],gs
  41d669:	sti    
  41d66a:	jp     0x41d630
  41d66c:	sub    ch,al
  41d66e:	mov    esp,0x516c96d2
  41d673:	push   ecx
  41d674:	sub    edx,DWORD PTR [ebx]
  41d676:	cmp    al,0x19
  41d678:	xchg   ecx,eax
  41d679:	pop    es
  41d67a:	dec    ecx
  41d67b:	mov    WORD PTR [eax+0x76],fs
  41d67e:	in     al,0x61
  41d680:	lods   al,BYTE PTR ds:[esi]
  41d681:	ror    BYTE PTR [ebp+0x7f],0xab
  41d685:	aad    0xd0
  41d687:	xor    dh,dh
  41d689:	jge    0x41d6c4
  41d68b:	mov    dh,0x53
  41d68d:	(bad)  
  41d68e:	cmp    edi,DWORD PTR [ebx]
  41d690:	adc    eax,0x5cb92b65
  41d695:	and    eax,0x2071b472
  41d69a:	mov    ss,WORD PTR [ecx]
  41d69c:	or     eax,0xb6b3f209
  41d6a1:	in     al,0x36
  41d6a3:	and    esp,DWORD PTR [edi+0x40]
  41d6a6:	dec    ebp
  41d6a7:	or     al,BYTE PTR [eax]
  41d6a9:	xor    BYTE PTR [esi+0x31],bh
  41d6ac:	loope  0x41d65e
  41d6ae:	sysexit 
  41d6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b1:	es loopne 0x41d6f7
  41d6b4:	into   
  41d6b5:	scas   al,BYTE PTR es:[edi]
  41d6b6:	sbb    eax,0xf55ad5b
  41d6bb:	jecxz  0x41d64b
  41d6bd:	loopne 0x41d6b9
  41d6bf:	push   edi
  41d6c0:	dec    esp
  41d6c1:	pop    esp
  41d6c2:	inc    ebx
  41d6c3:	mov    esp,0x676ceb8e
  41d6c8:	xor    DWORD PTR [eiz*1-0xe876fea],eax
  41d6cf:	cmp    al,0xd1
  41d6d1:	adc    bl,dl
  41d6d3:	add    DWORD PTR [eax],esi
  41d6d5:	sbb    eax,0x13d19407
  41d6da:	mov    ah,0x3d
  41d6dc:	into   
  41d6dd:	sub    BYTE PTR [esi],ch
  41d6df:	(bad)  
  41d6e0:	loopne 0x41d6b0
  41d6e2:	adc    eax,0xcfb350b5
  41d6e7:	(bad)  
  41d6e8:	outs   dx,DWORD PTR ds:[esi]
  41d6e9:	pop    ebx
  41d6ea:	xchg   ebp,eax
  41d6eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ec:	icebp  
  41d6ed:	mov    cl,0xbc
  41d6ef:	push   0x5fe319fa
  41d6f4:	jmp    0xf04b:0x55915d7c
  41d6fb:	es mov eax,0xb4b2e40
  41d701:	add    ebp,DWORD PTR ds:0xb888aa0b
  41d707:	push   edi
  41d708:	jb     0x41d734
  41d70a:	lods   eax,DWORD PTR ds:[esi]
  41d70b:	xchg   edx,eax
  41d70c:	(bad)  
  41d70d:	push   ss
  41d70e:	pop    esp
  41d70f:	rcl    DWORD PTR [edx],0x16
  41d712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d713:	mov    DWORD PTR [ebx-0x65],0xb70e030a
  41d71a:	mov    dh,0xa5
  41d71c:	dec    ebx
  41d71d:	jo     0x41d6d4
  41d71f:	xor    BYTE PTR [eax],0xea
  41d722:	cmp    eax,0x8e7b9efd
  41d727:	enter  0x55a,0x85
  41d72b:	add    ebx,esi
  41d72d:	mov    ch,BYTE PTR [esi+0x6e]
  41d730:	dec    ebp
  41d731:	mov    edx,0x1a54fa80
  41d736:	ss (bad) 
  41d739:	ss pop edx
  41d73b:	xor    DWORD PTR [edx],eax
  41d73d:	adc    dl,0x3a
  41d740:	push   es
  41d741:	(bad)  
  41d743:	mov    bl,0x26
  41d745:	lods   eax,DWORD PTR ds:[esi]
  41d746:	jnp    0x41d6f3
  41d748:	sahf   
  41d749:	xlat   BYTE PTR ds:[ebx]
  41d74a:	mov    al,ds:0xb7940e50
  41d74f:	dec    esi
  41d750:	scas   al,BYTE PTR es:[edi]
  41d751:	push   edx
  41d752:	inc    ebp
  41d753:	mov    eax,ds:0xf2ed5312
  41d758:	cmp    bh,BYTE PTR [edx+0x8]
  41d75b:	in     eax,dx
  41d75c:	loope  0x41d749
  41d75e:	xchg   esi,eax
  41d75f:	dec    edx
  41d760:	call   0x46ae:0x325f0d26
  41d767:	addr16 mov esi,0x9e2dbca7
  41d76d:	pusha  
  41d76e:	enter  0xd3f8,0xf3
  41d772:	xchg   ebp,eax
  41d773:	repnz sar DWORD PTR [ebp-0x7e608806],cl
  41d77a:	push   0x4fb158f0
  41d77f:	rcr    edx,cl
  41d781:	ror    DWORD PTR [esi],1
  41d783:	sub    esp,DWORD PTR [edi-0x3d5e7ab4]
  41d789:	dec    ecx
  41d78a:	sahf   
  41d78b:	cmp    bh,al
  41d78d:	imul   ebp,DWORD PTR [ebp+0x14],0x97edc06
  41d794:	dec    esp
  41d795:	std    
  41d796:	mov    ebp,0x8210095a
  41d79b:	cmp    BYTE PTR [edi+ebx*2-0x36],dh
  41d79f:	push   eax
  41d7a0:	dec    esp
  41d7a1:	or     edx,ecx
  41d7a3:	and    eax,0xb2720d8a
  41d7a8:	bound  esp,QWORD PTR [ecx+0x38]
  41d7ab:	mov    ah,0xc7
  41d7ad:	xchg   ecx,eax
  41d7ae:	xlat   BYTE PTR ds:[ebx]
  41d7af:	test   al,0x46
  41d7b1:	or     eax,0x4029fdf9
  41d7b6:	push   edx
  41d7b7:	fdiv   DWORD PTR [edi-0x4f708abb]
  41d7bd:	xor    BYTE PTR ds:0xd0ea17c0,dh
  41d7c3:	stos   DWORD PTR es:[edi],eax
  41d7c4:	inc    esi
  41d7c5:	xchg   ebx,eax
  41d7c6:	fwait
  41d7c7:	sahf   
  41d7c8:	test   DWORD PTR [ecx+0x4eb09aa4],ecx
  41d7ce:	mov    cl,0x74
  41d7d0:	jne    0x41d780
  41d7d2:	sub    eax,0xc5eb3e7d
  41d7d7:	xchg   BYTE PTR [ebx+0x4e],bh
  41d7da:	ins    BYTE PTR es:[edi],dx
  41d7db:	lock retf 
  41d7dd:	scas   al,BYTE PTR es:[edi]
  41d7de:	jo     0x41d85d
  41d7e0:	sbb    ebx,ecx
  41d7e2:	pop    esp
  41d7e3:	retf   0xb8f7
  41d7e6:	jge    0x41d7f0
  41d7e8:	adc    BYTE PTR [esi],ch
  41d7ea:	push   es
  41d7eb:	mov    eax,ds:0x485f8481
  41d7f0:	int    0xd6
  41d7f2:	clc    
  41d7f3:	mov    ah,BYTE PTR ds:0xd4478736
  41d7f9:	dec    ebx
  41d7fa:	iret   
  41d7fb:	and    eax,0xb9821758
  41d800:	cmp    ah,bl
  41d802:	fs and eax,ebp
  41d805:	mov    edx,0x3c485bad
  41d80a:	jmp    0x4d1:0x75271446
  41d811:	pop    ss
  41d812:	mov    ecx,0x807567f2
  41d817:	inc    ecx
  41d818:	aam    0x57
  41d81a:	xor    bh,0x35
  41d81d:	sar    BYTE PTR [esi],0x6c
  41d820:	push   ss
  41d821:	mov    al,ds:0xb72af6f9
  41d826:	adc    eax,0x19c5c546
  41d82b:	mov    ebx,edi
  41d82d:	jle    0x41d7db
  41d82f:	sbb    DWORD PTR [ecx-0x20d7afe4],esp
  41d835:	inc    esp
  41d836:	and    al,ch
  41d838:	or     eax,0x87605dd2
  41d83d:	test   BYTE PTR [ebx-0x68707e62],dl
  41d843:	inc    eax
  41d844:	test   eax,0x326ab941
  41d849:	nop
  41d84a:	inc    esp
  41d84b:	pusha  
  41d84c:	(bad)  
  41d84d:	repz mov dl,0x5c
  41d850:	sbb    bh,BYTE PTR [edi+eiz*1]
  41d853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d854:	pop    edi
  41d855:	jg     0x41d894
  41d857:	pop    edx
  41d858:	mov    WORD PTR [ecx+edx*8+0x53],fs
  41d85c:	enter  0x356a,0x25
  41d860:	cmp    dl,bl
  41d862:	mov    BYTE PTR [ebx-0x3eabcc13],bl
  41d868:	test   DWORD PTR [ebx+0x5f608115],eax
  41d86e:	add    al,0x60
  41d870:	lahf   
  41d871:	(bad)  
  41d872:	pusha  
  41d873:	mov    edx,0x3f5ea5e9
  41d878:	mov    ah,BYTE PTR [ebx]
  41d87a:	cmp    bh,cl
  41d87c:	lods   eax,DWORD PTR ds:[esi]
  41d87d:	and    BYTE PTR ds:0xfa49161b,0xe9
  41d884:	pop    ds
  41d885:	pop    ss
  41d886:	push   cs
  41d887:	xchg   DWORD PTR [eax+eiz*2+0x1d],edi
  41d88b:	jmp    0x41d8e4
  41d88d:	stos   BYTE PTR es:[edi],al
  41d88e:	pop    edi
  41d88f:	dec    edx
  41d890:	inc    DWORD PTR [bx+0x12]
  41d894:	xchg   ebx,eax
  41d895:	sbb    al,0x4e
  41d897:	ret    
  41d898:	pop    ss
  41d899:	outs   dx,BYTE PTR ds:[esi]
  41d89a:	adc    al,0x5f
  41d89c:	lods   al,BYTE PTR ds:[esi]
  41d89d:	ins    BYTE PTR es:[edi],dx
  41d89e:	dec    edi
  41d89f:	fist   WORD PTR [edx+0x575edddd]
  41d8a5:	inc    ebx
  41d8a6:	call   0x280906b0
  41d8ab:	mov    eax,0x56fdd588
  41d8b0:	mov    edi,0x4a25c057
  41d8b5:	dec    edi
  41d8b6:	lods   al,BYTE PTR ds:[esi]
  41d8b7:	pop    edx
  41d8b8:	inc    edx
  41d8b9:	pop    esp
  41d8ba:	mov    edx,0x117f791
  41d8bf:	xor    cl,BYTE PTR [edi-0x73b888ce]
  41d8c5:	xor    eax,0x8fc338d9
  41d8ca:	or     DWORD PTR [edi],ecx
  41d8cc:	fs adc eax,0xcc57d38b
  41d8d2:	push   es
  41d8d3:	call   DWORD PTR [ecx-0x7c9d75a9]
  41d8d9:	mov    bh,0x80
  41d8db:	inc    edi
  41d8dc:	cmp    bh,cl
  41d8de:	enter  0x8df2,0xa2
  41d8e2:	jbe    0x41d8a4
  41d8e4:	lods   al,BYTE PTR ds:[esi]
  41d8e5:	add    DWORD PTR [edx],0xd846a84e
  41d8eb:	test   DWORD PTR [ebx],eax
  41d8ed:	jae    0x41d963
  41d8ef:	mov    dh,BYTE PTR [edi+0x728e99e2]
  41d8f5:	jge    0x41d917
  41d8f7:	loopne 0x41d8c8
  41d8f9:	pusha  
  41d8fa:	je     0x41d8ab
  41d8fc:	mov    eax,0x26c4cfd0
  41d901:	je     0x41d969
  41d903:	loope  0x41d923
  41d905:	push   0xa33533e4
  41d90a:	stos   DWORD PTR es:[edi],eax
  41d90b:	sub    al,0xbc
  41d90d:	cdq    
  41d90e:	mov    BYTE PTR ds:0xab301764,ch
  41d914:	add    BYTE PTR ds:0x4530637a,cl
  41d91a:	mov    ss,WORD PTR [esp]
  41d91d:	leave  
  41d91e:	call   0xd19a:0x94e40b12
  41d925:	pusha  
  41d926:	dec    BYTE PTR [eax+0x10ba3667]
  41d92c:	inc    eax
  41d92d:	and    ecx,DWORD PTR [esi-0x310695c6]
  41d933:	adc    ebx,DWORD PTR [ebp+edx*4-0x5421bd96]
  41d93a:	out    dx,eax
  41d93b:	cs cwde 
  41d93d:	popa   
  41d93e:	(bad)  
  41d93f:	int    0xd7
  41d941:	imul   edx,DWORD PTR [ecx+edx*4+0x768bc1a0],0xffffffdf
  41d949:	cmp    BYTE PTR [esi-0x673fc47b],al
  41d94f:	mov    esp,0xf895a039
  41d954:	xchg   ebp,eax
  41d955:	cmp    BYTE PTR [edx-0x32],bh
  41d958:	mov    al,ds:0xb534ecef
  41d95d:	jo     0x41d915
  41d95f:	cmp    BYTE PTR [ebx],bh
  41d961:	mov    dl,0xa8
  41d963:	jp     0x41d9cf
  41d965:	loopne 0x41d9a2
  41d967:	pop    ebx
  41d968:	jmp    0x41d8ea
  41d96a:	jmp    0xd49664ed
  41d96f:	(bad)  
  41d970:	mov    eax,ds:0x207df062
  41d975:	or     eax,0xcd83ab47
  41d97a:	(bad)  
  41d97c:	sbb    eax,0x7b07056f
  41d981:	icebp  
  41d982:	sbb    edx,DWORD PTR [ecx]
  41d984:	cmc    
  41d985:	ficom  DWORD PTR [esi]
  41d987:	push   ecx
  41d988:	pop    ebp
  41d989:	lock cmp esp,DWORD PTR [ebp+0x46]
  41d98d:	inc    edi
  41d98e:	inc    esi
  41d98f:	mov    ebp,ecx
  41d991:	cmp    al,0x28
  41d993:	xchg   BYTE PTR [ecx-0x4b],cl
  41d996:	add    esp,DWORD PTR [ecx-0x36f9e76a]
  41d99c:	sbb    edx,DWORD PTR [ebx+0x4012af62]
  41d9a2:	jnp    0x41da20
  41d9a4:	retf   
  41d9a5:	or     al,0x2d
  41d9a7:	push   esi
  41d9a8:	sbb    al,0x7
  41d9aa:	lea    esi,[edi+0x25146dd4]
  41d9b0:	iret   
  41d9b1:	cwde   
  41d9b2:	outs   dx,BYTE PTR ds:[esi]
  41d9b3:	data16 ins BYTE PTR es:[edi],dx
  41d9b5:	ds and al,0x52
  41d9b8:	jecxz  0x41d96c
  41d9ba:	outs   dx,BYTE PTR ds:[esi]
  41d9bb:	mov    bl,0xd
  41d9bd:	pop    ebx
  41d9be:	cld    
  41d9bf:	pop    eax
  41d9c0:	fs addr16 push ds
  41d9c3:	or     al,0x37
  41d9c5:	loope  0x41d957
  41d9c7:	sbb    bh,dl
  41d9c9:	inc    esp
  41d9ca:	pop    edx
  41d9cb:	call   0xc6bf6bc9
  41d9d0:	ret    0x897c
  41d9d3:	mov    eax,0x1fee1c22
  41d9d8:	inc    edx
  41d9d9:	enter  0x8e5c,0x55
  41d9dd:	ret    0x8851
  41d9e0:	aas    
  41d9e1:	cld    
  41d9e2:	int    0x58
  41d9e4:	xor    BYTE PTR [ecx+0x45],ah
  41d9e7:	xor    esp,DWORD PTR ds:0x598b33f2
  41d9ed:	mov    BYTE PTR [edx+0x19],ch
  41d9f0:	imul   ebx,DWORD PTR [eax-0x109239d7],0xffffffef
  41d9f7:	sub    DWORD PTR [ebp+ecx*8+0x4d44f905],esi
  41d9fe:	out    0x9,eax
  41da00:	std    
  41da01:	adc    eax,0xe288e6e9
  41da06:	mov    edx,0x2cbad37
  41da0b:	icebp  
  41da0c:	cmp    ecx,DWORD PTR [edx]
  41da0e:	and    BYTE PTR [edx],0xe0
  41da11:	cmp    DWORD PTR [eax-0x7e],edi
  41da14:	arpl   WORD PTR [edi+0x3d],bp
  41da17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da18:	mov    ebp,0xcc67dc1f
  41da1d:	or     ch,BYTE PTR [esi+edx*2-0x36]
  41da21:	mov    bh,0xdc
  41da23:	les    esp,FWORD PTR [ebp-0x67025cd2]
  41da29:	jns    0x41d9b1
  41da2b:	loope  0x41da6f
  41da2d:	pop    esi
  41da2e:	sbb    DWORD PTR [edx+0x685a8c8],ecx
  41da34:	inc    ecx
  41da35:	bound  edx,QWORD PTR [ecx]
  41da37:	jmp    0x41da3f
  41da39:	fwait
  41da3a:	mov    ebx,0x33694eb2
  41da3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da40:	adc    BYTE PTR [ebx+0xd],bh
  41da43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da44:	sub    dh,BYTE PTR [eax-0x65]
  41da47:	sub    BYTE PTR [ebp-0x4b],cl
  41da4a:	xor    ch,ah
  41da4c:	int3   
  41da4d:	push   es
  41da4e:	(bad)  
  41da4f:	mov    al,ds:0xd917f749
  41da54:	mov    esi,DWORD PTR [edi]
  41da56:	dec    esp
  41da57:	test   bl,ah
  41da59:	not    DWORD PTR [ebx-0x7cbdec98]
  41da5f:	clc    
  41da60:	mov    al,ds:0xe9e85390
  41da65:	and    BYTE PTR [edi],dh
  41da67:	sub    eax,DWORD PTR [edi+eiz*2-0x4cb8b7ab]
  41da6e:	mov    eax,ds:0xba9b11eb
  41da73:	les    esi,FWORD PTR [esi]
  41da75:	xchg   edx,eax
  41da76:	push   edx
  41da77:	xchg   ebp,eax
  41da78:	jbe    0x41da1c
  41da7a:	mov    eax,DWORD PTR [edx-0x2e60d4a4]
  41da80:	gs ret 
  41da82:	ret    
  41da83:	sahf   
  41da84:	aam    0xe2
  41da86:	retf   
  41da87:	jno    0x41da0f
  41da89:	cmp    BYTE PTR [ebx],ah
  41da8b:	arpl   bp,bp
  41da8d:	in     eax,0x74
  41da8f:	pop    esp
  41da90:	xor    eax,ebp
  41da92:	push   ds
  41da93:	(bad)  
  41da94:	xchg   ebp,eax
  41da95:	out    dx,al
  41da96:	enter  0xf314,0xe9
  41da9a:	jmp    0xc4c2:0xb6a55cc
  41daa1:	das    
  41daa2:	das    
  41daa3:	adc    bl,BYTE PTR [ebp+0x24]
  41daa6:	dec    ebx
  41daa7:	xchg   ebp,eax
  41daa8:	inc    ebp
  41daa9:	sbb    cl,bl
  41daab:	leave  
  41daac:	jno    0x41db02
  41daae:	xor    eax,0xc84e227d
  41dab3:	fdiv   QWORD PTR [ebp-0x3f]
  41dab6:	mov    ebx,0x658d9891
  41dabb:	test   DWORD PTR [edi],0x7cb6fbd3
  41dac1:	pop    esi
  41dac2:	fidiv  WORD PTR [edx-0x5e]
  41dac5:	stc    
  41dac6:	sub    ebx,DWORD PTR [esi-0xb]
  41dac9:	jp     0x41daf5
  41dacb:	xchg   esi,eax
  41dacc:	stc    
  41dacd:	inc    eax
  41dace:	dec    eax
  41dacf:	inc    bx
  41dad1:	pop    ebx
  41dad2:	out    dx,eax
  41dad3:	push   ds
  41dad4:	ds cmc 
  41dad6:	imul   ebx,DWORD PTR [eax+0x727f5c01],0xfffffff9
  41dadd:	push   es
  41dade:	inc    ecx
  41dadf:	push   es
  41dae0:	outs   dx,BYTE PTR ds:[esi]
  41dae1:	sbb    ebx,DWORD PTR [ecx-0x22121bb3]
  41dae7:	ja     0x41db51
  41dae9:	pop    esp
  41daea:	push   0x32b0417a
  41daef:	aaa    
  41daf0:	lods   eax,DWORD PTR ds:[esi]
  41daf1:	test   bl,ah
  41daf3:	cdq    
  41daf4:	popf   
  41daf5:	gs add ah,dh
  41daf8:	adc    DWORD PTR ds:0xd5679725,ebp
  41dafe:	in     al,0x75
  41db00:	cmc    
  41db01:	cmp    eax,DWORD PTR fs:[esi]
  41db04:	jo     0x41db39
  41db06:	dec    esp
  41db07:	and    eax,0xac642ffb
  41db0c:	mov    ds:0x853aae13,al
  41db11:	std    
  41db12:	sbb    BYTE PTR [ebp-0xe],0xa4
  41db16:	loope  0x41db2b
  41db18:	jl     0x41dad0
  41db1a:	in     eax,0xff
  41db1c:	jbe    0x41db14
  41db1e:	push   edi
  41db1f:	xchg   DWORD PTR [esi+0x37],ecx
  41db22:	mov    cl,0x8
  41db24:	lea    edx,[ecx+0x7c]
  41db27:	in     eax,0xee
  41db29:	aaa    
  41db2a:	xchg   esp,eax
  41db2b:	sub    eax,0x3559b15e
  41db30:	or     eax,DWORD PTR [ebx+0x4f4450c]
  41db36:	ss (bad) 
  41db38:	jae    0x41db30
  41db3a:	dec    eax
  41db3b:	icebp  
  41db3c:	shr    DWORD PTR [eax],0xce
  41db3f:	rcl    BYTE PTR [edi-0x1a],1
  41db42:	sub    esi,DWORD PTR [edi-0x7d291fa]
  41db48:	sahf   
  41db49:	into   
  41db4a:	into   
  41db4b:	mov    dl,al
  41db4d:	nop
  41db4e:	mov    esi,0xcf7d8d4d
  41db53:	out    0x2e,eax
  41db55:	pop    ecx
  41db56:	test   eax,0xc1fc7c6a
  41db5b:	pop    edx
  41db5c:	mov    ds:0xc56c987,eax
  41db61:	(bad)
  41db64:	push   ebx
  41db65:	jl     0x41dbe6
  41db67:	jle    0x41dbe0
  41db69:	(bad)  
  41db6a:	mov    bh,0x6f
  41db6c:	pop    ds
  41db6d:	mov    al,0xe1
  41db6f:	push   ds
  41db70:	and    bl,bh
  41db72:	xchg   esi,eax
  41db73:	xchg   DWORD PTR [eax],edx
  41db75:	inc    ecx
  41db76:	or     ebp,DWORD PTR [ecx-0x7d]
  41db79:	rcl    DWORD PTR [ecx+0x41329109],cl
  41db7f:	pop    ecx
  41db80:	rcr    edi,1
  41db82:	lea    edx,[eax]
  41db84:	js     0x41dbf3
  41db86:	and    eax,0x66cd54b
  41db8b:	or     al,0x1d
  41db8d:	cmp    ebx,edx
  41db8f:	and    BYTE PTR [ebx],bh
  41db91:	pop    es
  41db92:	mov    ebx,0x39a4fb77
  41db97:	jg     0x41dbbb
  41db99:	daa    
  41db9a:	daa    
  41db9b:	(bad)  
  41db9c:	jle    0x41dbed
  41db9e:	mov    ebp,DWORD PTR ds:0x4e7d120b
  41dba4:	or     al,0x92
  41dba6:	sub    ch,BYTE PTR [edi+0x6f11e06e]
  41dbac:	loopne 0x41db40
  41dbae:	ss mov ebx,ebp
  41dbb1:	pop    edi
  41dbb2:	shl    ebx,0xc8
  41dbb5:	lock push ebp
  41dbb7:	jle    0x41dbc8
  41dbb9:	rcl    BYTE PTR [ecx-0x7e],0x2a
  41dbbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbbe:	inc    edi
  41dbbf:	and    ecx,DWORD PTR [esi-0x51]
  41dbc2:	std    
  41dbc3:	add    al,0xc7
  41dbc5:	leave  
  41dbc6:	das    
  41dbc7:	adc    ecx,DWORD PTR [edx]
  41dbc9:	dec    ebx
  41dbca:	mov    DWORD PTR [ebp-0x62f81e0e],edx
  41dbd0:	mov    eax,ds:0xa435f0a6
  41dbd5:	mov    cl,BYTE PTR [esi]
  41dbd7:	mov    bh,0x5d
  41dbd9:	stc    
  41dbda:	push   0x166d6e79
  41dbdf:	ret    
  41dbe0:	and    eax,0x47501f50
  41dbe5:	loope  0x41db6e
  41dbe7:	lods   al,BYTE PTR ds:[esi]
  41dbe8:	mov    ah,0xb
  41dbea:	gs sub ah,ch
  41dbed:	iret   
  41dbee:	push   edx
  41dbef:	push   es
  41dbf0:	mov    DWORD PTR [ebp-0x10],eax
  41dbf3:	mov    ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs jbe 0x41dc46
  41dc7c:	adc    al,0x42
  41dc7e:	jp     0x41dc5b
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0xf0
  41dc87:	shl    BYTE PTR [esi+edi*8+0x539e412d],0xfe
  41dc8f:	mov    ?,edx
  41dc91:	gs cmp al,0x69
  41dc94:	dec    ecx
  41dc95:	mov    WORD PTR [ebp-0x75],?
  41dc98:	sbb    al,0xcc
  41dc9a:	add    eax,0x43203022
  41dc9f:	xor    BYTE PTR [esi],bh
  41dca1:	sub    al,0x9e
  41dca3:	das    
  41dca4:	test   DWORD PTR [edi*8+0x8599e1e],ecx
  41dcab:	nop
  41dcac:	xor    eax,0x9bc1a4a9
  41dcb1:	cs xchg ebx,eax
  41dcb3:	mov    edi,0x589c10e5
  41dcb8:	in     eax,0xbd
  41dcba:	cli    
  41dcbb:	aas    
  41dcbc:	arpl   bx,bp
  41dcbe:	inc    esp
  41dcbf:	mov    ah,0xf5
  41dcc1:	jle    0x41dc4d
  41dcc3:	or     edi,DWORD PTR [ecx+0x2490e3e0]
  41dcc9:	inc    edx
  41dcca:	fadd   DWORD PTR [edi]
  41dccc:	rcr    BYTE PTR [ebp-0x3eb89af4],0xa8
  41dcd3:	pop    edi
  41dcd4:	imul   edx,DWORD PTR [ebp+0x6d],0x62
  41dcd8:	adc    al,0x5c
  41dcda:	cmp    BYTE PTR [edi+0x6a],bh
  41dcdd:	mov    edi,0x80ac043f
  41dce2:	ss rol bl,1
  41dce5:	imul   esp,DWORD PTR [ecx+ebp*2],0xffffffd4
  41dce9:	cmp    eax,0x9b30a122
  41dcee:	jne    0x41dcd0
  41dcf0:	loop   0x41dd47
  41dcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf3:	pop    eax
  41dcf4:	mov    edi,0xda54b53a
  41dcf9:	mov    bl,0x37
  41dcfb:	cdq    
  41dcfc:	adc    dh,bh
  41dcfe:	aam    0x47
  41dd00:	setno  BYTE PTR [ebp-0x5631a2c8]
  41dd07:	push   di
  41dd09:	and    BYTE PTR [edi-0x6],bh
  41dd0c:	daa    
  41dd0d:	xchg   edx,eax
  41dd0e:	stc    
  41dd0f:	call   0xaa80c4ff
  41dd14:	inc    esi
  41dd15:	call   0x6863:0x20812b4a
  41dd1c:	cmp    esp,DWORD PTR [edi]
  41dd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd1f:	clc    
  41dd20:	ins    DWORD PTR es:[edi],dx
  41dd21:	aam    0x75
  41dd23:	fwait
  41dd24:	ret    0xfb29
  41dd27:	jmp    0xf2c4:0x9113288f
  41dd2e:	jg     0x41dcc6
  41dd30:	lds    ecx,FWORD PTR [edx-0x61]
  41dd33:	sub    DWORD PTR [edx-0x776d84a],esp
  41dd39:	pop    ebx
  41dd3a:	ret    0x12dd
  41dd3d:	mov    edx,0xcadcdba1
  41dd42:	cmc    
  41dd43:	adc    eax,eax
  41dd45:	add    ebp,DWORD PTR [ecx-0x2e]
  41dd48:	scas   eax,DWORD PTR es:[edi]
  41dd49:	xchg   edx,eax
  41dd4b:	leave  
  41dd4c:	fild   DWORD PTR [eax+0x40602948]
  41dd52:	loopne 0x41dd5d
  41dd54:	aad    0x77
  41dd56:	and    eax,0xf9ccd084
  41dd5b:	in     eax,0x51
  41dd5d:	jl     0x41dd3c
  41dd5f:	inc    ebx
  41dd60:	or     dl,BYTE PTR [ecx]
  41dd62:	mov    al,0xb4
  41dd64:	pop    edx
  41dd65:	jle    0x41dd1e
  41dd67:	pop    esp
  41dd68:	inc    eax
  41dd69:	jbe    0x41dde3
  41dd6b:	inc    edi
  41dd6c:	imul   eax,DWORD PTR [ecx-0x20c2fe85],0x3bb87f82
  41dd76:	retf   0x9f89
  41dd79:	hlt    
  41dd7a:	mov    al,0xb9
  41dd7c:	popa   
  41dd7d:	jmp    0x15d3b7f4
  41dd82:	cmp    BYTE PTR [ebx+0x392d510d],0xe2
  41dd89:	mov    eax,0x26126712
  41dd8e:	and    eax,0xd0fe23dd
  41dd93:	jo     0x41dd2b
  41dd95:	aas    
  41dd96:	inc    esp
  41dd97:	adc    edx,DWORD PTR [ebx-0x659c725]
  41dd9d:	fidiv  DWORD PTR [ebx]
  41dd9f:	ins    DWORD PTR es:[edi],dx
  41dda0:	pop    edx
  41dda1:	hlt    
  41dda2:	or     al,0x6
  41dda4:	cmc    
  41dda5:	cmp    eax,0x90d3d412
  41ddaa:	pop    edi
  41ddab:	fcomp  st(5)
  41ddad:	fs mov bh,0x47
  41ddb0:	int    0xb8
  41ddb2:	mov    edx,0x8c4ebbe8
  41ddb7:	mov    ch,0x94
  41ddb9:	imul   BYTE PTR [ecx+0x3c27ab92]
  41ddbf:	sbb    bl,BYTE PTR [ebp+0x42]
  41ddc2:	addr16 retf 
  41ddc4:	div    DWORD PTR [edx]
  41ddc6:	enter  0x1304,0x69
  41ddca:	cmp    eax,0xdd1cb6aa
  41ddcf:	sbb    ah,cl
  41ddd1:	jmp    0xbe959c76
  41ddd6:	aaa    
  41ddd7:	stc    
  41ddd8:	aad    0xcd
  41ddda:	push   ebp
  41dddb:	push   edx
  41dddc:	mov    ds:0x37ba8756,al
  41dde1:	div    esp
  41dde3:	popf   
  41dde4:	js     0x41de4a
  41dde6:	add    ebx,DWORD PTR [eax-0x40]
  41dde9:	iret   
  41ddea:	xchg   esp,eax
  41ddeb:	mov    gs,WORD PTR [ebp+0x4497bfda]
  41ddf1:	gs mov dh,0x93
  41ddf4:	and    al,0x73
  41ddf6:	jl     0x41de22
  41ddf8:	or     DWORD PTR [edi],esi
  41ddfa:	and    al,0x78
  41ddfc:	jnp    0x41dd85
  41ddfe:	nop
  41ddff:	mov    ah,0x52
  41de01:	sbb    eax,0xfce6cc31
  41de06:	or     eax,0x82a97ab3
  41de0b:	xor    al,0x39
  41de0d:	or     ah,bl
  41de0f:	mul    DWORD PTR [ecx+0x4ab947df]
  41de15:	mov    ah,0xc9
  41de17:	mov    al,ds:0xf4568149
  41de1c:	add    DWORD PTR [edi],ebp
  41de1e:	push   0x51
  41de20:	lahf   
  41de21:	aaa    
  41de22:	clc    
  41de23:	cmp    eax,ebp
  41de25:	cmp    al,0x95
  41de27:	sbb    DWORD PTR [ebx+edi*8+0x39],esp
  41de2b:	out    dx,eax
  41de2c:	jge    0x41ddc1
  41de2e:	push   0x54b38920
  41de33:	mov    WORD PTR [ebp+0x6c],ds
  41de36:	sti    
  41de37:	mov    eax,ds:0x84a7fd73
  41de3c:	test   eax,0x8465ea50
  41de41:	hlt    
  41de42:	jmp    0x8a9255a7
  41de47:	mov    bl,0xcb
  41de49:	cmp    al,0xf2
  41de4b:	add    eax,DWORD PTR [ebx+eax*4-0x15fcdee7]
  41de52:	mov    dh,0x5c
  41de54:	lock inc ebx
  41de56:	std    
  41de57:	rol    BYTE PTR [ebx+0x4e],0x86
  41de5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de5c:	or     al,0xb0
  41de5e:	inc    ecx
  41de5f:	dec    edi
  41de60:	std    
  41de61:	adc    dl,dh
  41de63:	mov    eax,0x6adcb9e
  41de68:	imul   edx,DWORD PTR [esi-0x2c],0xffffffbf
  41de6c:	inc    edx
  41de6d:	inc    DWORD PTR [eax+0x70]
  41de70:	mov    al,0x77
  41de72:	test   DWORD PTR [ebp+esi*2+0x2c],edx
  41de76:	jle    0x41de1b
  41de78:	idiv   DWORD PTR [eax]
  41de7a:	push   ds
  41de7b:	mov    es,WORD PTR [esi]
  41de7d:	hlt    
  41de7e:	test   DWORD PTR [ebx],0xaa040afa
  41de84:	mov    ebp,ecx
  41de86:	cs aam 0xe0
  41de89:	xor    eax,0x90209888
  41de8e:	sahf   
  41de8f:	test   BYTE PTR [edi],0x35
  41de92:	jne    0x41de81
  41de94:	loopne 0x41deae
  41de96:	pushf  
  41de97:	daa    
  41de98:	sbb    al,0xfc
  41de9a:	jb     0x41deba
  41de9c:	or     al,0xfe
  41de9e:	sub    BYTE PTR [esi+0x66e25575],al
  41dea4:	sar    cl,1
  41dea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea7:	out    dx,al
  41dea8:	and    DWORD PTR [edx-0x43],ebx
  41deab:	adc    edi,DWORD PTR [ebp-0x7a9002c4]
  41deb1:	pop    esi
  41deb2:	daa    
  41deb3:	pop    eax
  41deb4:	push   ebx
  41deb5:	push   0xffffffd3
  41deb7:	sbb    DWORD PTR [edi],ebp
  41deb9:	pop    ss
  41deba:	sbb    al,0x2e
  41debd:	cld    
  41debe:	cmp    ebx,ebp
  41dec0:	or     BYTE PTR ds:0x6efe1d6a,al
  41dec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec7:	push   esp
  41dec8:	shl    BYTE PTR [edi-0x9],0x55
  41decc:	cli    
  41decd:	(bad)  
  41decf:	ror    BYTE PTR [edx+0x4931549f],1
  41ded5:	cmp    eax,0x5f4e1033
  41deda:	fist   WORD PTR [eax]
  41dedc:	cwde   
  41dedd:	ss cmp cl,dl
  41dee0:	push   esp
  41dee1:	imul   DWORD PTR [eax+edx*1]
  41dee4:	jp     0x41df2c
  41dee6:	inc    edi
  41dee7:	xchg   DWORD PTR [edx+0x59],ebx
  41deea:	ret    0x22fe
  41deed:	cmp    DWORD PTR ds:0x14618206,ebx
  41def3:	mov    bl,0xb
  41def5:	out    dx,eax
  41def6:	iret   
  41def7:	push   esi
  41def8:	jle    0x41de7e
  41defa:	add    DWORD PTR [esi],esi
  41defc:	xor    edi,ebx
  41defe:	lods   eax,DWORD PTR ds:[esi]
  41deff:	jmp    0x3754:0xe178bde3
  41df06:	add    eax,0xe7744db7
  41df0b:	xor    BYTE PTR [ebx],ch
  41df0d:	dec    ecx
  41df0e:	call   0xdf7e:0xa6890e9a
  41df15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df16:	mov    dh,0xa2
  41df18:	pusha  
  41df19:	in     al,dx
  41df1a:	ds ins DWORD PTR es:[edi],dx
  41df1c:	enter  0x87c4,0x18
  41df20:	inc    esi
  41df21:	enter  0x8f96,0xaf
  41df25:	iret   
  41df26:	jl     0x41df5c
  41df28:	inc    esp
  41df29:	xchg   di,ax
  41df2b:	and    al,0xba
  41df2d:	sbb    esi,ecx
  41df2f:	xchg   ecx,eax
  41df30:	dec    ecx
  41df31:	and    bl,BYTE PTR [esi]
  41df33:	push   ss
  41df34:	mov    al,0x14
  41df36:	js     0x41df47
  41df38:	into   
  41df39:	mov    ch,0x6
  41df3b:	and    ebp,eax
  41df3d:	xor    BYTE PTR [esi+0x34],cl
  41df40:	mov    eax,ds:0xf2cdf02
  41df45:	hlt    
  41df46:	add    DWORD PTR [ebx],esi
  41df48:	out    0xc5,eax
  41df4a:	imul   eax,ecx,0x316fc901
  41df50:	pop    ds
  41df51:	mov    eax,0x80c9a5d5
  41df56:	stos   DWORD PTR es:[edi],eax
  41df57:	jl     0x41df14
  41df59:	test   ecx,0x6dbaba85
  41df5f:	pop    ss
  41df60:	ds aaa 
  41df62:	adc    edx,DWORD PTR ds:0x93212ed0
  41df68:	mov    ch,0xeb
  41df6a:	sahf   
  41df6b:	arpl   di,si
  41df6d:	push   eax
  41df6e:	es daa 
  41df70:	es iret 
  41df72:	cs pop edx
  41df74:	ret    0x44c6
  41df77:	and    DWORD PTR [ebx+0x5d],edx
  41df7a:	fild   DWORD PTR [ecx+0x7b6fc112]
  41df80:	not    BYTE PTR [edi+edx*8+0xe7f5d29]
  41df87:	lods   eax,DWORD PTR ds:[esi]
  41df88:	cmp    DWORD PTR [edi-0x1d],ebx
  41df8b:	in     eax,0x73
  41df8d:	daa    
  41df8e:	dec    ecx
  41df8f:	fdivr  DWORD PTR [edx]
  41df91:	in     al,dx
  41df92:	rol    BYTE PTR [eax+0x51],cl
  41df95:	ins    BYTE PTR es:[edi],dx
  41df96:	das    
  41df97:	or     sp,WORD PTR [esp+eax*1-0x60d9d182]
  41df9f:	push   edx
  41dfa0:	repnz push eax
  41dfa2:	(bad)  [eax+0x10517ff9]
  41dfa8:	ret    0x4fa4
  41dfab:	in     eax,dx
  41dfac:	xchg   edi,eax
  41dfad:	sub    BYTE PTR [ebx+0x2de560e],ch
  41dfb3:	addr16 push ecx
  41dfb5:	bound  ecx,QWORD PTR [esi]
  41dfb7:	mov    esi,0x4df826fe
  41dfbc:	add    al,dl
  41dfbe:	(bad)
  41dfc1:	xchg   edx,eax
  41dfc2:	retf   0xce4a
  41dfc5:	pop    es
  41dfc6:	sbb    esp,ebx
  41dfc8:	ja     0x41dfd7
  41dfca:	mov    edi,0x99af11e5
  41dfcf:	cmp    bh,ch
  41dfd1:	mov    WORD PTR [edx-0x20],cs
  41dfd4:	scas   eax,DWORD PTR es:[edi]
  41dfd5:	dec    ecx
  41dfd6:	push   ecx
  41dfd7:	lods   eax,DWORD PTR ds:[esi]
  41dfd8:	pop    edi
  41dfd9:	cs repnz daa 
  41dfdc:	sub    dh,cl
  41dfde:	ficom  WORD PTR [edx+edi*2]
  41dfe1:	add    BYTE PTR [ebp-0x75],bl
  41dfe4:	mov    dl,0x18
  41dfe6:	inc    ebx
  41dfe7:	add    edi,edi
  41dfe9:	(bad)  
  41dfea:	int3   
  41dfeb:	mov    BYTE PTR [ebp-0x1f],cl
  41dfee:	test   eax,0xb49b92a4
  41dff3:	jle    0x41e057
  41dff5:	add    al,0x28
  41dff7:	and    edi,esp
  41dff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dffa:	pop    ecx
  41dffb:	test   eax,0x8868d11a
  41e000:	fisub  WORD PTR [ebp+0x5a14c758]
  41e006:	xchg   esp,esi
  41e008:	jb     0x41dfac
  41e00a:	push   ecx
  41e00b:	(bad)  
  41e00c:	adc    DWORD PTR [edx+0x1b2e988],edi
  41e012:	cmp    BYTE PTR [ebp+ebp*8-0x4d],dl
  41e016:	loopne 0x41e008
  41e018:	xchg   edx,eax
  41e019:	sub    al,0xa7
  41e01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01c:	pop    edx
  41e01d:	sbb    DWORD PTR ds:0x223e70d2,ebx
  41e023:	xor    bl,BYTE PTR [edi+0x2f]
  41e026:	and    eax,esp
  41e028:	dec    eax
  41e029:	xchg   cx,ax
  41e02b:	pop    es
  41e02c:	adc    ch,BYTE PTR [ebp-0x68265104]
  41e032:	xor    eax,esi
  41e034:	pop    esp
  41e035:	mov    edx,0x9bf422d9
  41e03a:	push   0x33199645
  41e03f:	add    cl,cl
  41e041:	test   al,0xfa
  41e043:	xchg   edx,eax
  41e044:	(bad)
  41e047:	or     edi,DWORD PTR [esi-0x7a]
  41e04a:	stc    
  41e04b:	lea    edi,[edi+ebx*2+0x4fc0cec8]
  41e052:	xchg   esp,eax
  41e053:	in     eax,dx
  41e054:	int    0x99
  41e056:	add    dh,bl
  41e058:	xor    al,0x80
  41e05a:	cwde   
  41e05b:	fcmovnbe st,st(5)
  41e05d:	in     eax,dx
  41e05e:	xchg   DWORD PTR [eax+0x74f25754],ecx
  41e064:	inc    ebp
  41e065:	iret   
  41e066:	mov    bl,BYTE PTR [edx-0x94ebbdd]
  41e06c:	hlt    
  41e06d:	push   0x61da8c08
  41e072:	mov    dl,0x7d
  41e074:	cmp    eax,DWORD PTR [esi]
  41e076:	jmp    0xafbf:0x6d7fd873
  41e07d:	scas   al,BYTE PTR es:[edi]
  41e07e:	cmp    al,0xc9
  41e080:	and    DWORD PTR [esi],edx
  41e082:	xchg   esi,eax
  41e083:	mov    ah,ah
  41e085:	arpl   WORD PTR [edi-0x312d8857],ax
  41e08b:	or     al,0x79
  41e08d:	dec    esi
  41e08e:	jo     0x41e0d6
  41e090:	sub    eax,0xa8dccbb4
  41e095:	mov    WORD PTR [edi+0x5f492f33],es
  41e09b:	stos   DWORD PTR es:[edi],eax
  41e09c:	xlat   BYTE PTR ds:[ebx]
  41e09d:	dec    edi
  41e09e:	(bad)  
  41e09f:	pop    ebx
  41e0a0:	dec    BYTE PTR [ebp+0x74]
  41e0a3:	aad    0x24
  41e0a5:	sbb    esi,DWORD PTR [ecx+0x70]
  41e0a8:	cli    
  41e0a9:	fimul  DWORD PTR ss:[ebx-0x613b4d61]
  41e0b0:	sub    dh,BYTE PTR [ecx-0x19]
  41e0b3:	sbb    eax,0xdcc8af24
  41e0b8:	sbb    ebx,DWORD PTR ds:0x64e180d0
  41e0be:	xchg   DWORD PTR [ecx-0x189d17d9],edx
  41e0c4:	pop    edi
  41e0c5:	int    0x36
  41e0c7:	mov    cl,0x5c
  41e0c9:	push   ss
  41e0ca:	and    DWORD PTR [esi],0xffffffb4
  41e0cd:	push   0x93ecebad
  41e0d2:	lea    ebx,[edi+0x217f7fe7]
  41e0d8:	out    dx,al
  41e0d9:	pop    edi
  41e0da:	sub    al,0x72
  41e0dc:	std    
  41e0dd:	push   ebp
  41e0de:	mov    edi,0x6d912e84
  41e0e3:	xor    BYTE PTR [ecx],ah
  41e0e5:	call   0xff305e92
  41e0ea:	cmp    esi,eax
  41e0ec:	jl     0x41e11a
  41e0ee:	lock sub DWORD PTR [ecx],0xffffff88
  41e0f2:	push   ds
  41e0f3:	ds xchg ebx,eax
  41e0f5:	fcomp  QWORD PTR [ebx+esi*1-0x4ec4974a]
  41e0fc:	dec    edi
  41e0fd:	(bad)  
  41e0fe:	cmp    al,0xcd
  41e100:	xlat   BYTE PTR ds:[ebx]
  41e101:	sub    al,dl
  41e103:	inc    ecx
  41e104:	cmp    DWORD PTR [edi],edi
  41e106:	xchg   edi,eax
  41e107:	pushf  
  41e108:	xor    ah,BYTE PTR [ebx+0x496ca407]
  41e10e:	loopne 0x41e151
  41e110:	inc    ebx
  41e111:	xchg   ebx,eax
  41e112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e113:	icebp  
  41e114:	add    BYTE PTR [ebx],al
  41e116:	push   esp
  41e117:	(bad)  
  41e118:	mov    ebp,0x2f0240f0
  41e11d:	loopne 0x41e18b
  41e11f:	push   ebp
  41e120:	ret    
  41e121:	lods   al,BYTE PTR ds:[esi]
  41e122:	pop    edi
  41e123:	sahf   
  41e124:	stos   DWORD PTR es:[edi],eax
  41e125:	popa   
  41e126:	adc    al,BYTE PTR [ebx]
  41e128:	sub    al,0x5a
  41e12a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e12b:	jl     0x41e184
  41e12d:	arpl   bx,di
  41e12f:	jb     0x41e19a
  41e131:	jbe    0x41e110
  41e133:	dec    edx
  41e134:	mov    ah,0x42
  41e136:	cli    
  41e137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e138:	(bad)  
  41e139:	out    0x6,eax
  41e13b:	into   
  41e13c:	xor    bh,BYTE PTR [edi-0x411b6933]
  41e142:	fs pop es
  41e144:	(bad)  
  41e145:	pop    esp
  41e146:	mov    esi,0x95104dca
  41e14b:	test   al,0x8b
  41e14d:	xor    eax,0xe5b36f0a
  41e152:	retf   0x5d06
  41e155:	mov    esi,0x5937b2b3
  41e15a:	out    0xf,eax
  41e15c:	lods   eax,DWORD PTR ds:[esi]
  41e15d:	not    DWORD PTR [edi+eiz*2+0x9]
  41e161:	push   ecx
  41e162:	sub    DWORD PTR [edi+0x68],ecx
  41e165:	sar    BYTE PTR [esi+0x2f432071],cl
  41e16b:	lahf   
  41e16c:	int    0xe9
  41e16e:	clc    
  41e16f:	aaa    
  41e170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e171:	mov    DWORD PTR [ecx-0x4e],ebx
  41e174:	push   ds
  41e175:	xor    eax,0x2291408c
  41e17a:	es int 0x6
  41e17d:	sub    al,0x4a
  41e17f:	loop   0x41e178
  41e181:	or     al,BYTE PTR [edi-0x520a597b]
  41e187:	cmp    DWORD PTR [ebp-0x1b],0x9c3877d3
  41e18e:	call   0x7050:0x760b2fd3
  41e195:	mov    ds:0xd4273697,eax
  41e19a:	mov    ch,0x2a
  41e19c:	aaa    
  41e19d:	in     eax,dx
  41e19e:	call   0x95ed:0xa21326a3
  41e1a5:	push   ss
  41e1a6:	dec    ecx
  41e1a7:	mov    BYTE PTR [ebx],al
  41e1a9:	sub    DWORD PTR [edx-0xb],edi
  41e1ac:	test   DWORD PTR [edi-0x1433df0b],edi
  41e1b2:	push   ebp
  41e1b3:	inc    esi
  41e1b4:	es mov edx,0x6e38da2
  41e1ba:	push   ds
  41e1bb:	int    0xf3
  41e1bd:	shl    DWORD PTR [ebx+0x7],cl
  41e1c0:	mov    esp,0xf740c6fa
  41e1c5:	jbe    0x41e153
  41e1c7:	jge    0x41e23e
  41e1c9:	inc    ebp
  41e1ca:	fadd   DWORD PTR [ebx+0x162f0a26]
  41e1d0:	inc    edx
  41e1d1:	xchg   esp,eax
  41e1d2:	ins    DWORD PTR es:[edi],dx
  41e1d3:	mov    ecx,0xb1afefec
  41e1d8:	mov    ch,0xdd
  41e1da:	sbb    eax,0x292f3fdf
  41e1df:	sub    ah,dh
  41e1e1:	stc    
  41e1e2:	addr16 push cs
  41e1e4:	test   ch,cl
  41e1e6:	retf   0xdbd6
  41e1e9:	sub    al,0xdb
  41e1eb:	xchg   ebx,eax
  41e1ec:	out    dx,eax
  41e1ed:	outs   dx,DWORD PTR ds:[esi]
  41e1ee:	test   al,0x18
  41e1f0:	push   es
  41e1f1:	mov    edx,0x76eb9a01
  41e1f6:	jge    0x41e190
  41e1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f9:	mul    BYTE PTR [edx+0x3a1f12fc]
  41e1ff:	ret    
  41e200:	(bad)  
  41e201:	shl    DWORD PTR [ecx+0x525c33b1],cl
  41e207:	int    0x5f
  41e209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e20a:	out    dx,al
  41e20b:	sbb    eax,0x6d368778
  41e210:	in     al,0x74
  41e212:	std    
  41e213:	sbb    ebp,DWORD PTR [esp+esi*4+0x7dbf0340]
  41e21a:	icebp  
  41e21b:	test   DWORD PTR [ebx+0x4c4be1c5],0x6abf7341
  41e225:	lods   eax,DWORD PTR ds:[esi]
  41e226:	cmp    al,0x7b
  41e228:	les    edi,FWORD PTR [edi+0x7aae5150]
  41e22e:	cwde   
  41e22f:	mov    ebx,0x67f2a06
  41e234:	pop    ecx
  41e235:	or     DWORD PTR [ebx-0x34],eax
  41e238:	sbb    eax,0xc9e914c7
  41e23d:	xor    DWORD PTR [esi-0xdfe0e12],edx
  41e243:	jmp    0x41e24c
  41e245:	mov    bl,0x12
  41e247:	xchg   esi,eax
  41e248:	out    dx,al
  41e249:	stos   BYTE PTR es:[edi],al
  41e24a:	out    dx,al
  41e24b:	mov    esp,0x1062ce0f
  41e250:	dec    esi
  41e251:	and    BYTE PTR [ebx-0xa],bh
  41e254:	daa    
  41e255:	repnz out 0xb7,eax
  41e258:	jg     0x41e271
  41e25a:	ss call 0x226982a8
  41e260:	jg     0x41e2cd
  41e262:	jl     0x41e29f
  41e264:	inc    eax
  41e265:	push   0xf206c8b0
  41e26a:	mov    ds:0x610a327f,eax
  41e26f:	shl    BYTE PTR [esi+eiz*2-0x7844db2],0x77
  41e277:	rcr    al,0x65
  41e27a:	push   ds
  41e27b:	or     bh,BYTE PTR [edx]
  41e27d:	sbb    dh,ah
  41e27f:	pop    eax
  41e280:	sbb    BYTE PTR [ebp+0x36d3ee46],ch
  41e286:	bound  edx,QWORD PTR [esi+0x2d]
  41e289:	(bad)  
  41e28a:	in     al,dx
  41e28b:	adc    ebx,DWORD PTR [esi-0x69]
  41e28e:	mov    dh,0xd6
  41e290:	gs das 
  41e292:	leave  
  41e293:	loop   0x41e2a5
  41e295:	mov    edx,0xd92b6573
  41e29a:	push   edi
  41e29b:	fnstcw WORD PTR [ebx-0x3d]
  41e29e:	in     eax,dx
  41e29f:	or     al,0xac
  41e2a1:	add    eax,0x5c835ba0
  41e2a6:	rcr    BYTE PTR [ebx],cl
  41e2a8:	retf   
  41e2a9:	aam    0x9b
  41e2ab:	fxsave ds:0xa0a009d2
  41e2b2:	mov    dl,0x55
  41e2b4:	lock retf 
  41e2b6:	clc    
  41e2b7:	in     al,dx
  41e2b8:	xchg   esi,eax
  41e2b9:	gs or  al,0xe
  41e2bc:	push   cs
  41e2bd:	inc    ecx
  41e2be:	(bad)  [esi+0x1139ae51]
  41e2c4:	mov    eax,0x81799071
  41e2c9:	add    DWORD PTR [ebp-0x72f53a8b],0x2e775e80
  41e2d3:	mov    ch,0xe5
  41e2d5:	cld    
  41e2d6:	loopne 0x41e352
  41e2d8:	mov    esi,0xe540636e
  41e2dd:	int3   
  41e2de:	inc    eax
  41e2df:	shr    BYTE PTR [esi],1
  41e2e1:	pop    ebp
  41e2e2:	or     edi,DWORD PTR [eax]
  41e2e4:	clc    
  41e2e5:	scas   al,BYTE PTR es:[edi]
  41e2e6:	xchg   ecx,eax
  41e2e7:	ror    DWORD PTR [eax+0x2efca471],cl
  41e2ed:	mov    bl,0xc3
  41e2ef:	clc    
  41e2f0:	sub    BYTE PTR [edx+0x44],ah
  41e2f3:	inc    eax
  41e2f4:	jnp    0x41e27c
  41e2f6:	mov    al,ds:0x6fe41f48
  41e2fb:	ret    
  41e2fc:	in     eax,dx
  41e2fd:	(bad)  
  41e2fe:	ins    DWORD PTR es:[edi],dx
  41e2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e300:	push   esp
  41e301:	cmp    esp,DWORD PTR [edx-0x4a]
  41e304:	sub    DWORD PTR [esi-0x7650a82e],ebx
  41e30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e30b:	je     0x41e334
  41e30d:	pop    es
  41e30e:	inc    esp
  41e30f:	xor    BYTE PTR [edx+ebp*4],0xb9
  41e313:	inc    ebp
  41e314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e315:	sub    DWORD PTR [ebp+0x63d22d2a],eax
  41e31b:	mov    bh,0x59
  41e31d:	or     eax,0x526eab35
  41e322:	pop    ds
  41e323:	fmul   DWORD PTR [esi+0x2d575cbf]
  41e329:	pop    ebx
  41e32a:	push   esi
  41e32b:	lock adc eax,0xe808bdf5
  41e331:	sbb    DWORD PTR ds:[esp+edx*2-0x7e],esp
  41e336:	sub    al,BYTE PTR [edi+0x4447457]
  41e33c:	jmp    0x41e38d
  41e33e:	call   0x7d1702ea
  41e343:	aas    
  41e344:	sbb    al,0x64
  41e346:	loope  0x41e31f
  41e348:	leave  
  41e349:	call   0xa48779b0
  41e34e:	(bad)  
  41e34f:	jmp    0x2dbd0885
  41e354:	js     0x41e32a
  41e356:	fiadd  DWORD PTR [edx]
  41e358:	xchg   BYTE PTR [edx+0x41],dl
  41e35b:	repnz sub al,0xf5
  41e35e:	sbb    al,0xf
  41e360:	dec    BYTE PTR [edx+0x6a872ef3]
  41e366:	ficom  DWORD PTR [edx+ecx*1]
  41e369:	popa   
  41e36a:	jae    0x41e38b
  41e36c:	jl     0x41e313
  41e36e:	ja     0x41e32c
  41e370:	lods   al,BYTE PTR ds:[esi]
  41e371:	fwait
  41e372:	jns    0x41e39f
  41e374:	push   ecx
  41e375:	into   
  41e376:	mov    esi,0xd2b8197f
  41e37b:	xchg   ebx,eax
  41e37c:	cmp    eax,0x4a619fc5
  41e381:	jo     0x41e3c6
  41e383:	mov    edi,0xfd652c35
  41e388:	add    eax,edx
  41e38a:	xchg   edi,eax
  41e38b:	sub    BYTE PTR [ecx-0x40a43d6c],ch
  41e391:	fisubr DWORD PTR cs:[ecx+0x31]
  41e395:	adc    al,0xfe
  41e397:	dec    esi
  41e398:	inc    edi
  41e399:	push   0x7f
  41e39b:	clc    
  41e39c:	rcr    BYTE PTR [ebx-0x639a9ba5],1
  41e3a2:	inc    edi
  41e3a3:	xor    bl,BYTE PTR [eax+0x59]
  41e3a6:	push   esp
  41e3a7:	(bad)  
  41e3a8:	mov    edi,fs
  41e3aa:	into   
  41e3ab:	pop    ds
  41e3ac:	aas    
  41e3ad:	or     BYTE PTR [ebp+0x34fb5d7d],bh
  41e3b3:	out    dx,eax
  41e3b4:	mov    cl,0x1a
  41e3b6:	mov    dl,0x8e
  41e3b8:	xor    eax,0xc0a3412d
  41e3bd:	xor    BYTE PTR ds:0x485dee88,dh
  41e3c3:	or     ch,cl
  41e3c5:	mov    dl,0x25
  41e3c7:	xor    eax,0x3c6deffe
  41e3cc:	xchg   ecx,eax
  41e3cd:	mov    gs,ebp
  41e3cf:	pop    esi
  41e3d0:	jne    0x41e394
  41e3d2:	cmp    dl,BYTE PTR [ecx+0x4b]
  41e3d5:	pop    ss
  41e3d6:	or     bl,BYTE PTR [esi-0x6d24bb4e]
  41e3dc:	push   es
  41e3dd:	in     eax,dx
  41e3de:	mov    cs,WORD PTR [edi+0x5]
  41e3e1:	das    
  41e3e2:	cdq    
  41e3e3:	inc    ecx
  41e3e4:	xchg   ecx,eax
  41e3e5:	icebp  
  41e3e6:	xchg   ebp,eax
  41e3e7:	ja     0x41e43b
  41e3e9:	cmp    ecx,DWORD PTR [ebp-0xb4ea27a]
  41e3ef:	aas    
  41e3f0:	inc    edx
  41e3f1:	xchg   edi,eax
  41e3f2:	ror    BYTE PTR [ebx],cl
  41e3f4:	in     eax,dx
  41e3f5:	aaa    
  41e3f6:	rol    ah,0x5f
  41e3f9:	cdq    
  41e3fa:	vmread DWORD PTR es:0x18f16c31,eax
  41e402:	mov    al,BYTE PTR [edi-0x60c7084b]
  41e408:	xor    dh,BYTE PTR [ecx+0x4b]
  41e40b:	imul   edi,DWORD PTR [edi],0x1c
  41e40e:	dec    eax
  41e40f:	into   
  41e410:	jmp    0xbc02:0x1233ef29
  41e417:	add    BYTE PTR [esi],0xea
  41e41a:	add    ebp,DWORD PTR [eax+0x4c5b1355]
  41e420:	mov    al,0x6
  41e422:	mov    edi,0x2a068043
  41e428:	mov    cl,0x32
  41e42a:	xchg   edx,eax
  41e42b:	xchg   ebx,eax
  41e42c:	repz push esp
  41e42e:	push   es
  41e42f:	cmp    al,0x8f
  41e431:	inc    ebx
  41e432:	xor    edi,DWORD PTR [esi+eiz*1-0x4b729029]
  41e439:	sub    BYTE PTR [edi-0x5c],0x66
  41e43d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e43e:	sbb    DWORD PTR [edi-0x34],eax
  41e441:	test   eax,0xeb510428
  41e446:	xchg   edi,eax
  41e447:	cmp    al,0xea
  41e449:	mov    dl,0xe7
  41e44b:	adc    edx,DWORD PTR [edx+0x5e]
  41e44e:	jmp    0x41e466
  41e450:	jae    0x41e4c7
  41e452:	nop
  41e453:	mov    al,0xb3
  41e455:	fdiv   st,st(7)
  41e457:	ins    DWORD PTR es:[edi],dx
  41e458:	inc    eax
  41e459:	gs xor al,0xb2
  41e45c:	hlt    
  41e45d:	jecxz  0x41e3ee
  41e45f:	test   eax,0xddb8b36a
  41e464:	call   0xafbf8809
  41e469:	xchg   DWORD PTR [ebp-0x4e87d400],ebx
  41e46f:	rcr    DWORD PTR [edx],1
  41e471:	sbb    al,0x7d
  41e473:	cmp    esi,DWORD PTR [ecx]
  41e475:	aam    0xf3
  41e477:	cwde   
  41e478:	and    dl,al
  41e47a:	mov    ebp,cs
  41e47c:	lea    eax,[ebx+edi*1+0x19dda011]
  41e483:	add    al,BYTE PTR [edx+0x1]
  41e486:	xchg   edx,eax
  41e487:	(bad)  
  41e488:	cdq    
  41e489:	rcl    BYTE PTR [ebx+ebx*4+0x92c64f8],0x51
  41e491:	xchg   ecx,eax
  41e492:	or     ebx,DWORD PTR [ebx+edi*4+0x38]
  41e496:	xchg   ebx,eax
  41e497:	mov    esp,0xbf68289a
  41e49c:	inc    esp
  41e49d:	adc    al,BYTE PTR ds:0xb43a877
  41e4a3:	cmp    eax,0x302c447d
  41e4a8:	push   eax
  41e4a9:	jp     0x41e42f
  41e4ab:	sbb    dl,BYTE PTR [edi+0x32e3c0e3]
  41e4b1:	sar    BYTE PTR [esi-0x16f9b46b],1
  41e4b7:	mov    eax,ds:0x6b56363e
  41e4bc:	xor    BYTE PTR [ebx-0x72f9b188],ah
  41e4c2:	es inc edx
  41e4c4:	clc    
  41e4c5:	clc    
  41e4c6:	jae    0x41e4d0
  41e4c8:	pop    esp
  41e4c9:	sub    eax,0xe6704ee
  41e4ce:	rcl    BYTE PTR [edx],1
  41e4d0:	mov    edi,0xde08058d
  41e4d5:	jmp    0x7ccce75b
  41e4da:	nop
  41e4db:	or     ah,BYTE PTR [edi]
  41e4dd:	mov    al,ds:0xa318a160
  41e4e2:	test   BYTE PTR [eax],0x85
  41e4e5:	ins    DWORD PTR es:[edi],dx
  41e4e6:	out    0x1e,al
  41e4e8:	add    DWORD PTR [eax],esi
  41e4ea:	mov    eax,0x1de6a47e
  41e4ef:	imul   ecx,DWORD PTR [esi*8-0x7c4ce420],0xffffffc4
  41e4f7:	xor    cl,al
  41e4f9:	xor    ebp,ebx
  41e4fb:	push   ebx
  41e4fc:	ins    BYTE PTR es:[edi],dx
  41e4fd:	ins    BYTE PTR es:[edi],dx
  41e4fe:	mov    al,0x9f
  41e500:	cmp    al,0xaf
  41e502:	test   eax,0x36fe02c
  41e507:	hlt    
  41e508:	aaa    
  41e509:	bound  eax,QWORD PTR [ebx+0x2]
  41e50c:	pop    ss
  41e50d:	enter  0x7801,0x19
  41e511:	test   eax,0xb518f179
  41e516:	stc    
  41e517:	pushf  
  41e518:	xchg   ebx,eax
  41e519:	test   DWORD PTR [edi],0x2999c435
  41e51f:	stc    
  41e520:	and    BYTE PTR [esi+0x487d9165],0x9a
  41e527:	sar    BYTE PTR [edx+0x75],0x74
  41e52b:	call   0x46c7:0x4d1e3333
  41e532:	cmp    esi,DWORD PTR [eax+0x63]
  41e535:	xchg   ch,ch
  41e537:	and    edx,DWORD PTR [ebx]
  41e539:	into   
  41e53a:	fnstcw WORD PTR [ecx]
  41e53c:	outs   dx,BYTE PTR ds:[esi]
  41e53d:	dec    ebx
  41e53e:	mov    WORD PTR [ecx],bx
  41e541:	addr16 inc esi
  41e543:	fs retf 0x71ec
  41e547:	jle    0x41e577
  41e549:	xchg   esi,eax
  41e54a:	call   0xdda0750f
  41e54f:	push   ss
  41e550:	xor    BYTE PTR [ebx+0x70],cl
  41e553:	push   ebx
  41e554:	jbe    0x41e50a
  41e556:	inc    esp
  41e557:	mov    DWORD PTR [esi+ebp*8-0x13],esp
  41e55b:	sbb    DWORD PTR [ecx-0x19],ebp
  41e55e:	cmp    ebx,DWORD PTR [eax+0x6d]
  41e561:	test   eax,0xa0cfb718
  41e566:	dec    ecx
  41e567:	inc    edx
  41e568:	lods   eax,DWORD PTR ds:[esi]
  41e569:	popa   
  41e56a:	and    al,0x42
  41e56c:	mov    bh,BYTE PTR [esi]
  41e56e:	hlt    
  41e56f:	out    0xdb,al
  41e571:	push   edx
  41e572:	(bad)  
  41e573:	pop    esp
  41e574:	hlt    
  41e575:	je     0x41e581
  41e577:	add    al,0x11
  41e579:	push   esp
  41e57a:	push   edi
  41e57b:	sbb    dl,dh
  41e57d:	mov    esp,0xce30ad7f
  41e582:	out    dx,eax
  41e583:	mov    esp,0xc88bbf3
  41e588:	adc    al,0xe0
  41e58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e58b:	push   DWORD PTR [ecx-0x36]
  41e58e:	xchg   edi,eax
  41e58f:	imul   edx,DWORD PTR [edx],0xae6630bd
  41e595:	mov    ebx,0x578e939c
  41e59a:	pop    ds
  41e59b:	push   es
  41e59c:	sbb    eax,ebp
  41e59e:	push   0x61da6156
  41e5a3:	xchg   edi,eax
  41e5a4:	shl    BYTE PTR ds:0xe9b72179,1
  41e5aa:	aaa    
  41e5ab:	and    al,0xc2
  41e5ad:	stos   DWORD PTR es:[edi],eax
  41e5ae:	or     ebp,DWORD PTR [esi]
  41e5b0:	adc    eax,DWORD PTR [eax-0x33]
  41e5b3:	rcl    DWORD PTR [ecx+0x27],0x2f
  41e5b7:	pop    es
  41e5b8:	push   ss
  41e5b9:	idiv   al
  41e5bb:	cmc    
  41e5bc:	and    bl,BYTE PTR [ecx-0xe00f10f]
  41e5c2:	add    BYTE PTR [ebx+0x34038342],0x7e
  41e5c9:	push   ebp
  41e5ca:	mov    al,0xb4
  41e5cc:	mov    ah,0x60
  41e5ce:	fsub   QWORD PTR [eax+ecx*2+0xa49e9db]
  41e5d5:	fcom   QWORD PTR [esi+0x3ff67f6e]
  41e5db:	inc    esi
  41e5dc:	ret    
  41e5dd:	hlt    
  41e5de:	dec    edi
  41e5df:	xchg   esp,eax
  41e5e0:	clc    
  41e5e1:	sub    al,0x37
  41e5e3:	fucomp st(3)
  41e5e5:	out    dx,al
  41e5e6:	pop    ss
  41e5e7:	mov    WORD PTR [esi],fs
  41e5e9:	sub    eax,DWORD PTR [edx+0x7d]
  41e5ec:	adc    esi,DWORD PTR [edx-0x58]
  41e5ef:	sbb    dl,BYTE PTR [edi+0x7ae23fd1]
  41e5f5:	sti    
  41e5f6:	or     edx,ecx
  41e5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f9:	ss (bad) 
  41e5fb:	inc    esp
  41e5fc:	push   ss
  41e5fd:	or     bl,BYTE PTR [edx+0x13267614]
  41e603:	mov    bh,0x31
  41e605:	aam    0xf7
  41e607:	push   esi
  41e608:	adc    BYTE PTR [edi],dl
  41e60a:	test   BYTE PTR [edx+0x27c49b18],ch
  41e610:	mov    ss,ebp
  41e612:	cmp    bl,ah
  41e614:	mov    eax,0x4a22d6c6
  41e619:	push   edx
  41e61a:	or     bh,BYTE PTR [edi]
  41e61c:	pop    edx
  41e61d:	pop    es
  41e61e:	jb     0x41e664
  41e620:	arpl   WORD PTR [ebp-0x64],dx
  41e623:	or     ecx,DWORD PTR ds:0x3a95bc56
  41e629:	shl    DWORD PTR ds:0xe1d1cec9,0x7b
  41e630:	push   ebx
  41e631:	dec    edx
  41e632:	cli    
  41e633:	pop    ss
  41e634:	push   ebx
  41e635:	mov    cs,WORD PTR [esi+0x10]
  41e638:	popf   
  41e639:	sbb    DWORD PTR [ecx-0x16],edi
  41e63c:	dec    esp
  41e63d:	mov    edx,0xe46168f9
  41e642:	(bad)  
  41e643:	in     al,dx
  41e644:	hlt    
  41e645:	neg    DWORD PTR [edi-0x4d05a3e8]
  41e64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e64c:	mov    dl,0x45
  41e64e:	loope  0x41e648
  41e650:	stos   DWORD PTR es:[edi],eax
  41e651:	push   ebp
  41e652:	pop    ebp
  41e653:	push   esi
  41e654:	sub    ebp,DWORD PTR [edi]
  41e656:	push   ebx
  41e657:	sbb    eax,0x6e4a4417
  41e65c:	pop    eax
  41e65d:	or     DWORD PTR [edi-0x55],esp
  41e660:	sub    al,dl
  41e662:	push   esi
  41e663:	mov    ecx,0x3a558f7b
  41e668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e669:	sti    
  41e66a:	dec    ecx
  41e66b:	lods   eax,DWORD PTR ds:[esi]
  41e66c:	lea    edi,[edi]
  41e66e:	aad    0x47
  41e670:	cmp    BYTE PTR [ecx],bl
  41e672:	pop    ecx
  41e673:	mov    ds:0xe9120e86,eax
  41e678:	test   BYTE PTR [ecx],bl
  41e67a:	lds    esp,FWORD PTR [esp+eiz*8+0x61c18e6b]
  41e681:	call   0xd239:0x8528e9d4
  41e688:	imul   esp,DWORD PTR [edi+0x71],0x5251d1d2
  41e68f:	inc    ecx
  41e690:	mov    al,ds:0x7f66ed8c
  41e695:	sar    BYTE PTR [edi],1
  41e697:	xor    al,0x2b
  41e699:	mov    al,0x30
  41e69c:	enter  0xf765,0x5b
  41e6a0:	aas    
  41e6a1:	mov    dh,0x71
  41e6a3:	push   ecx
  41e6a4:	js     0x41e709
  41e6a6:	out    dx,al
  41e6a7:	daa    
  41e6a8:	js     0x41e630
  41e6aa:	jmp    DWORD PTR [esi+eiz*4-0x3bde79c1]
  41e6b1:	inc    ebx
  41e6b2:	push   eax
  41e6b3:	std    
  41e6b4:	fdivr  QWORD PTR [edx]
  41e6b6:	loopne 0x41e65d
  41e6b8:	mov    DWORD PTR [eax],ebp
  41e6ba:	inc    eax
  41e6bb:	cmp    eax,DWORD PTR [edi+0x631a89ed]
  41e6c1:	xchg   ebp,eax
  41e6c2:	jo     0x41e6c7
  41e6c4:	je     0x41e6cb
  41e6c6:	enter  0xcfbe,0xf4
  41e6ca:	jae    0x41e6aa
  41e6cc:	rcr    DWORD PTR [edi+esi*1-0x41685dd2],1
  41e6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d4:	inc    edi
  41e6d5:	es lock pop eax
  41e6d8:	aaa    
  41e6d9:	clc    
  41e6da:	xor    edx,esp
  41e6dc:	push   es
  41e6dd:	(bad)  
  41e6de:	idiv   BYTE PTR [esp+edx*1+0x2c]
  41e6e2:	rcr    BYTE PTR [eax+0x172192c3],cl
  41e6e8:	sar    BYTE PTR [edi+0x40374322],cl
  41e6ee:	mul    BYTE PTR [ecx+0x7208bd81]
  41e6f4:	and    eax,0x1a1ad637
  41e6f9:	push   cs
  41e6fa:	ins    BYTE PTR es:[edi],dx
  41e6fb:	stos   BYTE PTR es:[edi],al
  41e6fc:	shl    BYTE PTR [eax+ecx*4],0x7a
  41e700:	xlat   BYTE PTR ds:[ebx]
  41e701:	mov    ebp,0xb29aa196
  41e706:	mov    BYTE PTR [ebx],0xa5
  41e709:	pusha  
  41e70a:	and    eax,0xee7920a5
  41e70f:	adc    BYTE PTR [edi+0x64d9229f],0x3f
  41e716:	push   eax
  41e717:	lahf   
  41e718:	jns    0x41e6ea
  41e71a:	arpl   WORD PTR [ebx+0x7b],sp
  41e71d:	xor    al,0x5f
  41e71f:	int    0xcd
  41e721:	mov    ebx,DWORD PTR [ebx]
  41e723:	inc    edi
  41e724:	inc    eax
  41e725:	test   eax,0xb14d2ebf
  41e72a:	retf   0x47d7
  41e72d:	xchg   ebp,eax
  41e72e:	add    DWORD PTR [ecx+0x43b818e7],ebp
  41e734:	jle    0x41e737
  41e736:	adc    BYTE PTR [ebp-0x647ea267],bh
  41e73c:	mov    DWORD PTR [edi],0xe06019c0
  41e742:	xor    edx,DWORD PTR [edx-0x3c]
  41e745:	scas   eax,DWORD PTR es:[edi]
  41e746:	sti    
  41e747:	dec    esp
  41e748:	pop    edi
  41e749:	dec    ecx
  41e74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e74b:	and    ch,BYTE PTR [esi+edi*2-0x4c9aa084]
  41e752:	inc    edi
  41e753:	xchg   esi,eax
  41e754:	int    0x2d
  41e756:	xchg   edi,eax
  41e757:	mov    WORD PTR [esp+ebx*1],?
  41e75a:	mov    ah,BYTE PTR [esi+0x4137ee82]
  41e760:	xchg   ebx,eax
  41e761:	add    al,0x97
  41e763:	dec    esp
  41e764:	and    BYTE PTR [ebx],ah
  41e766:	arpl   sp,ax
  41e768:	add    eax,DWORD PTR [ebx-0x4d37e10e]
  41e76e:	mov    edx,0x2b1673e2
  41e773:	xchg   ebx,eax
  41e774:	shl    DWORD PTR [edi+0x67],cl
  41e777:	jmp    0xba529495
  41e77c:	fnsave [ebp+0x52aa5178]
  41e782:	ret    
  41e783:	out    0x0,eax
  41e785:	and    esi,DWORD PTR [edx+0x46]
  41e788:	jl     0x41e7db
  41e78a:	das    
  41e78b:	adc    BYTE PTR [edx+ecx*4+0xace4574],dl
  41e792:	push   esi
  41e793:	dec    edi
  41e794:	stos   DWORD PTR es:[edi],eax
  41e795:	dec    eax
  41e796:	dec    edx
  41e797:	shl    ebp,cl
  41e799:	and    eax,DWORD PTR [esi+0x7abe0960]
  41e79f:	pop    edx
  41e7a0:	mov    bh,0xa4
  41e7a2:	in     al,0x85
  41e7a4:	or     eax,0x72e5da73
  41e7a9:	(bad)  [ebx+0x7b886138]
  41e7af:	mov    ebp,0xa59d451b
  41e7b4:	outs   dx,DWORD PTR ds:[esi]
  41e7b5:	pop    ebp
  41e7b6:	sbb    DWORD PTR [eax],ebp
  41e7b8:	push   esi
  41e7b9:	mov    al,ds:0xa53b5aee
  41e7be:	sbb    esi,eax
  41e7c0:	(bad)  
  41e7c2:	mov    ?,WORD PTR [edx-0x2e]
  41e7c5:	lahf   
  41e7c6:	or     al,0xce
  41e7c8:	jg     0x41e83b
  41e7ca:	pop    es
  41e7cb:	lods   eax,DWORD PTR ds:[esi]
  41e7cc:	inc    ebp
  41e7cd:	sbb    DWORD PTR [eax-0x75c0df69],esp
  41e7d3:	iret   
  41e7d4:	(bad)  
  41e7d5:	xor    al,0x84
  41e7d7:	lods   al,BYTE PTR ds:[esi]
  41e7d8:	jno    0x41e855
  41e7da:	ins    BYTE PTR es:[edi],dx
  41e7db:	sub    dh,BYTE PTR [edi]
  41e7dd:	mov    cl,0xff
  41e7df:	cmc    
  41e7e0:	lods   eax,DWORD PTR ds:[esi]
  41e7e1:	dec    eax
  41e7e2:	xchg   edi,eax
  41e7e3:	jnp    0x41e76c
  41e7e5:	repz std 
  41e7e7:	lea    esi,[ebx+0x1edd1be0]
  41e7ed:	xchg   edi,eax
  41e7ee:	fwait
  41e7ef:	ret    0x5108
  41e7f2:	sbb    DWORD PTR [edx-0x59997290],eax
  41e7f8:	nop
  41e7f9:	ret    
  41e7fa:	add    DWORD PTR ds:0xcffeaa5d,esi
  41e800:	(bad)  
  41e801:	adc    eax,DWORD PTR [edi]
  41e803:	stos   BYTE PTR es:[edi],al
  41e804:	push   es
  41e805:	loope  0x41e857
  41e807:	(bad)  
  41e808:	scas   eax,DWORD PTR es:[edi]
  41e809:	inc    ebx
  41e80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80b:	dec    esp
  41e80c:	cli    
  41e80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80e:	pop    ebx
  41e80f:	push   edx
  41e810:	cmp    DWORD PTR [edi-0x47aedfde],0x92e6365
  41e81a:	inc    ebx
  41e81b:	xchg   BYTE PTR [edx+ecx*1+0x3a],dl
  41e81f:	(bad)  
  41e820:	rep stos BYTE PTR es:[edi],al
  41e822:	dec    esi
  41e823:	mov    ecx,0x2a68218f
  41e828:	jns    0x41e87b
  41e82a:	into   
  41e82b:	jnp    0x41e858
  41e82d:	add    al,0xc2
  41e82f:	pusha  
  41e830:	xor    dl,cl
  41e832:	jge    0x41e850
  41e834:	jns    0x41e86a
  41e836:	jecxz  0x41e806
  41e838:	inc    ebx
  41e839:	bound  edi,QWORD PTR [edx-0x25906c33]
  41e83f:	outs   dx,BYTE PTR ds:[esi]
  41e840:	(bad)  
  41e841:	pop    esi
  41e842:	rol    ah,cl
  41e844:	icebp  
  41e845:	cli    
  41e846:	das    
  41e847:	add    esp,DWORD PTR [ebp-0x5c]
  41e84a:	in     al,dx
  41e84b:	add    al,0xdb
  41e84d:	bound  ecx,QWORD PTR [ecx-0x78e6f442]
  41e853:	ret    0x3d37
  41e856:	loop   0x41e7fd
  41e858:	jmp    0x8e4d:0xbfeb224d
  41e85f:	scas   al,BYTE PTR es:[edi]
  41e860:	sbb    al,0x9c
  41e862:	or     DWORD PTR [eax],ecx
  41e864:	outs   dx,DWORD PTR ds:[esi]
  41e865:	and    ebp,DWORD PTR [ebp+edx*8-0x6b1545c3]
  41e86c:	fwait
  41e86d:	bound  esi,QWORD PTR [eax+eax*8+0x55ae3dec]
  41e874:	xor    DWORD PTR [ecx-0x220c6f45],esi
  41e87a:	push   0xc9e8fd84
  41e87f:	xchg   bh,ch
  41e881:	sbb    BYTE PTR [ebx],al
  41e883:	loopne 0x41e89e
  41e885:	lahf   
  41e886:	push   edi
  41e887:	cmp    BYTE PTR [edi-0x72],ah
  41e88a:	and    ebx,0xffffffba
  41e88d:	daa    
  41e88e:	mov    edx,0xcdd5c467
  41e893:	mov    edx,0xe7ddcde7
  41e898:	mov    al,ds:0xa0e0b9b7
  41e89d:	xchg   edi,eax
  41e89e:	gs dec ebx
  41e8a0:	sbb    bh,BYTE PTR [esi-0x56adffde]
  41e8a6:	sub    bh,bl
  41e8a8:	nop
  41e8a9:	les    ebp,FWORD PTR [ebp-0x5e]
  41e8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ad:	addr16 push ss
  41e8af:	mov    ah,bh
  41e8b1:	je     0x41e840
  41e8b3:	dec    eax
  41e8b4:	loope  0x41e8bc
  41e8b6:	ja     0x41e89d
  41e8b8:	push   es
  41e8b9:	bound  edx,QWORD PTR [edi+0x53]
  41e8bc:	enter  0xafa7,0xaa
  41e8c0:	imul   esp,esp,0x357a4a69
  41e8c6:	lahf   
  41e8c7:	std    
  41e8c8:	mov    ?,WORD PTR [edi*2-0x19f8ac91]
  41e8cf:	mov    ?,WORD PTR [esi-0x6b]
  41e8d2:	es pusha 
  41e8d4:	sbb    eax,0x860f976b
  41e8d9:	stc    
  41e8da:	in     eax,0x61
  41e8dc:	jp     0x41e912
  41e8de:	and    eax,0x928b8756
  41e8e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e4:	sbb    eax,0x3d4f6e81
  41e8e9:	clc    
  41e8ea:	fmul   DWORD PTR [ebx]
  41e8ec:	dec    edx
  41e8ed:	ins    DWORD PTR es:[edi],dx
  41e8ee:	cmp    ebx,DWORD PTR [edx-0x5a46f08c]
  41e8f4:	pop    ss
  41e8f5:	push   ss
  41e8f6:	adc    DWORD PTR [ebx-0x595d8699],edx
  41e8fc:	mov    edi,0xe2cd0610
  41e901:	stos   DWORD PTR es:[edi],eax
  41e902:	adc    DWORD PTR [ecx+0x72],edi
  41e905:	jae    0x41e891
  41e907:	ins    BYTE PTR es:[edi],dx
  41e908:	mov    ds:0x49df760a,eax
  41e90d:	enter  0xce83,0x9a
  41e911:	sbb    ebp,DWORD PTR [ebx+0x1f3a818b]
  41e917:	js     0x41e989
  41e919:	lea    esp,[edi+edi*2+0x7a8dbe32]
  41e920:	xor    BYTE PTR [esi+0x2db1d144],0x50
  41e927:	pop    esp
  41e928:	dec    esp
  41e929:	dec    eax
  41e92a:	call   0x4896:0x3422bba
  41e931:	lahf   
  41e932:	xchg   BYTE PTR [edi+0x0],dh
  41e935:	fdiv   QWORD PTR [esi+0x11]
  41e938:	out    dx,eax
  41e939:	xor    eax,ebx
  41e93b:	(bad)  
  41e93d:	dec    esp
  41e93e:	add    edx,DWORD PTR [edx+esi*8]
  41e941:	pop    ss
  41e942:	int    0xf1
  41e944:	xchg   edx,eax
  41e945:	bound  edi,QWORD PTR [ebx-0x308d7fd7]
  41e94b:	inc    ebx
  41e94c:	test   DWORD PTR [edi-0x5],0x9cee9747
  41e953:	or     BYTE PTR [esi],al
  41e955:	call   0x54d4:0x8604fb8b
  41e95c:	loopne 0x41e943
  41e95e:	gs mov dh,ah
  41e961:	cld    
  41e962:	aam    0x13
  41e964:	aaa    
  41e965:	vpaddusb ymm6,ymm0,YMMWORD PTR [ebp+ecx*4+0x79]
  41e96b:	jno    0x41e983
  41e96d:	jl     0x41e9c6
  41e96f:	aas    
  41e970:	sbb    DWORD PTR [ecx+0x44],eax
  41e973:	dec    eax
  41e974:	push   ss
  41e975:	jnp    0x41e910
  41e977:	push   edi
  41e978:	gs pop ebp
  41e97a:	mov    al,BYTE PTR [ebp+0x379b1d17]
  41e980:	fld    QWORD PTR [edx]
  41e982:	fst    st(3)
  41e984:	push   esi
  41e985:	mov    dh,bl
  41e987:	cdq    
  41e988:	mov    ecx,0x99b43367
  41e98d:	jg     0x41e93c
  41e98f:	sbb    eax,0xc05d7f29
  41e994:	xchg   esp,eax
  41e995:	mov    fs,WORD PTR [ecx-0x1d22a142]
  41e99b:	mov    eax,ds:0xd32f8d56
  41e9a0:	outs   dx,BYTE PTR ds:[esi]
  41e9a1:	pop    ecx
  41e9a2:	cmp    BYTE PTR [eax-0x4d],ch
  41e9a5:	outs   dx,BYTE PTR ds:[esi]
  41e9a6:	ffree  st(1)
  41e9a8:	cwde   
  41e9a9:	push   ebp
  41e9aa:	mov    al,ds:0x98e6261a
  41e9af:	or     ecx,DWORD PTR [edx]
  41e9b1:	fcomp  DWORD PTR [esi+0x8fd5fd5]
  41e9b7:	ja     0x41e951
  41e9b9:	test   BYTE PTR ds:0x24184ff,ch
  41e9bf:	das    
  41e9c0:	loopne 0x41ea15
  41e9c2:	mov    fs,WORD PTR [esi*8-0x5b3844c]
  41e9c9:	xchg   ecx,eax
  41e9ca:	xor    BYTE PTR [ecx],dh
  41e9cc:	cs je  0x41ea1f
  41e9cf:	add    edx,DWORD PTR [esi+eiz*1-0x66]
  41e9d3:	pusha  
  41e9d4:	jle    0x41e96b
  41e9d6:	mov    edi,DWORD PTR [ebp-0x2f]
  41e9d9:	mov    dh,dh
  41e9db:	out    0x47,al
  41e9dd:	push   eax
  41e9de:	and    ebx,ebx
  41e9e0:	xor    BYTE PTR [ecx+0x5f],bh
  41e9e3:	sub    al,0xb8
  41e9e5:	rcr    BYTE PTR [ebx+eax*1+0x3fad392b],1
  41e9ec:	stos   DWORD PTR es:[edi],eax
  41e9ed:	fiadd  DWORD PTR [ecx]
  41e9ef:	aaa    
  41e9f0:	push   eax
  41e9f1:	ins    DWORD PTR es:[edi],dx
  41e9f2:	out    dx,al
  41e9f3:	enter  0xaf92,0x12
  41e9f7:	mov    edx,0xd050adff
  41e9fc:	and    BYTE PTR [ecx*2+0x524dabd1],0x1d
  41ea04:	xchg   ebx,eax
  41ea05:	adc    DWORD PTR [edi+0x1683329b],esi
  41ea0b:	lds    ecx,FWORD PTR [ecx+edx*4-0x3dbc58ac]
  41ea12:	xor    DWORD PTR [esi],edx
  41ea14:	adc    BYTE PTR [ecx+eax*4+0x6d],dl
  41ea18:	jmp    0x425f:0xac1f43a5
  41ea1f:	inc    eax
  41ea20:	sbb    eax,0x3377f4bd
  41ea25:	shl    BYTE PTR [ebp+0x79],0x35
  41ea29:	rcl    BYTE PTR [edx-0x34732c77],1
  41ea2f:	rcr    DWORD PTR [edi-0x78],0x76
  41ea33:	xor    BYTE PTR [edx],dl
  41ea35:	std    
  41ea36:	div    DWORD PTR [ebx-0x8]
  41ea39:	jnp    0x41ea24
  41ea3b:	pop    ebp
  41ea3c:	adc    eax,0xd67d98a5
  41ea41:	es and dh,0xdf
  41ea45:	fldz   
  41ea47:	fcmovnbe st,st(2)
  41ea49:	push   ebx
  41ea4b:	adc    al,0xb9
  41ea4d:	jg     0x41ea83
  41ea4f:	push   ds
  41ea50:	inc    ebp
  41ea51:	dec    edx
  41ea52:	inc    edx
  41ea53:	cwde   
  41ea54:	inc    ecx
  41ea55:	sub    al,0xc8
  41ea57:	and    DWORD PTR [ebx-0x6c],esi
  41ea5a:	lds    ecx,FWORD PTR [ebx]
  41ea5c:	pusha  
  41ea5d:	(bad)  
  41ea5e:	dec    edx
  41ea5f:	mov    ebp,0xe6ab2713
  41ea64:	enter  0x86a3,0x64
  41ea68:	test   al,0x64
  41ea6a:	push   ebx
  41ea6b:	xchg   ebx,eax
  41ea6c:	(bad)  
  41ea6d:	cmc    
  41ea6e:	cmp    eax,0xc62e86e5
  41ea74:	mov    bh,0x9d
  41ea76:	adc    al,0x73
  41ea78:	iret   
  41ea79:	and    edx,DWORD PTR [eax+0x32abceec]
  41ea7f:	and    al,0x25
  41ea81:	bound  esp,QWORD PTR [esi]
  41ea83:	test   DWORD PTR [esp+ebp*2-0x50],0x20e3ece7
  41ea8b:	jbe    0x41eace
  41ea8d:	shr    cl,cl
  41ea8f:	cli    
  41ea90:	sbb    eax,ecx
  41ea92:	dec    ecx
  41ea93:	(bad)  
  41ea94:	stc    
  41ea95:	mov    al,0xb2
  41ea97:	pop    esi
  41ea98:	or     al,0x96
  41ea9a:	xchg   ecx,eax
  41ea9b:	dec    ebx
  41ea9c:	cmp    al,0x35
  41ea9e:	pop    es
  41ea9f:	mov    esi,0x3aead3aa
  41eaa4:	inc    eax
  41eaa5:	or     DWORD PTR [edx-0x1a259e7d],edi
  41eaab:	rcr    DWORD PTR [ebx+0xd],0xdf
  41eaaf:	(bad)  
  41eab0:	adc    eax,0xe4f5281
  41eab5:	xor    dl,bl
  41eab7:	icebp  
  41eab8:	or     esp,edx
  41eaba:	adc    DWORD PTR [edi-0x5be03b79],ebp
  41eac0:	mov    esp,0x3a2adab9
  41eac5:	adc    eax,0x955701a4
  41eaca:	call   0x912d:0x7a0d423a
  41ead1:	cmp    DWORD PTR [edi],ebp
  41ead3:	in     eax,0xbd
  41ead5:	mov    esp,0x1858f1a6
  41eada:	ds nop
  41eadc:	bound  esp,QWORD PTR [esi]
  41eade:	jns    0x41eb53
  41eae0:	xor    eax,DWORD PTR [esi]
  41eae2:	jp     0x41ea94
  41eae4:	imul   BYTE PTR [edx+0x7e]
  41eae7:	sbb    bl,al
  41eae9:	mov    ds:0x4ff007e7,al
  41eaee:	dec    eax
  41eaef:	mov    BYTE PTR [edi],bh
  41eaf1:	les    esi,FWORD PTR ds:0x6032f4af
  41eaf7:	xchg   edi,eax
  41eaf8:	or     DWORD PTR [eax],0x36
  41eafb:	aas    
  41eafc:	inc    ebp
  41eafd:	icebp  
  41eafe:	mov    esp,0x612c31dc
  41eb03:	mov    esi,0x813083c9
  41eb08:	or     bh,BYTE PTR [ecx-0x79]
  41eb0b:	pop    es
  41eb0c:	jge    0x41ead0
  41eb0e:	int3   
  41eb0f:	xchg   edx,eax
  41eb10:	arpl   WORD PTR [esi],si
  41eb12:	push   cs
  41eb13:	jo     0x41eab2
  41eb15:	inc    edx
  41eb16:	and    si,WORD PTR [esi]
  41eb19:	mov    dl,0x2c
  41eb1b:	repz out dx,eax
  41eb1d:	mov    edx,es
  41eb1f:	mov    BYTE PTR [edi-0x5c],cl
  41eb22:	sahf   
  41eb23:	leave  
  41eb24:	in     eax,0xc5
  41eb26:	inc    ecx
  41eb27:	mov    ds:0x940ca153,al
  41eb2c:	pop    ss
  41eb2d:	outs   dx,BYTE PTR ds:[esi]
  41eb2e:	stos   BYTE PTR es:[edi],al
  41eb2f:	enter  0x2995,0xb5
  41eb33:	pop    ss
  41eb34:	jecxz  0x41eb79
  41eb36:	xchg   bh,cl
  41eb38:	push   edx
  41eb39:	cli    
  41eb3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb3b:	cmp    esi,ecx
  41eb3d:	imul   edi,DWORD PTR [ecx+ebx*8+0x29],0x7565bf15
  41eb45:	fld    DWORD PTR [ebx]
  41eb47:	sub    eax,0x12ff1980
  41eb4c:	push   cs
  41eb4d:	and    eax,0x111c9b9b
  41eb52:	or     al,0xd7
  41eb54:	mov    ds:0xd2f613b4,eax
  41eb59:	mov    esi,0x41aef126
  41eb5e:	into   
  41eb5f:	fcom   st(3)
  41eb61:	scas   eax,DWORD PTR es:[edi]
  41eb62:	pop    edx
  41eb63:	xor    ah,dl
  41eb65:	add    cl,ah
  41eb67:	(bad)  
  41eb68:	xor    ah,cl
  41eb6a:	in     eax,dx
  41eb6b:	nop
  41eb6c:	dec    esi
  41eb6d:	pushf  
  41eb6e:	xchg   ecx,eax
  41eb6f:	mov    dh,0xe5
  41eb71:	or     dh,BYTE PTR [eax]
  41eb73:	std    
  41eb74:	fnstenv [edx-0xe76d2f4]
  41eb7a:	sbb    ch,bl
  41eb7c:	stos   DWORD PTR es:[edi],eax
  41eb7d:	push   0xfffffffd
  41eb7f:	gs test al,0xa9
  41eb82:	dec    esp
  41eb83:	or     DWORD PTR [esi-0x602c5789],edx
  41eb89:	cmp    al,0xe8
  41eb8b:	test   eax,0x7e0299c6
  41eb90:	and    al,0x69
  41eb92:	jnp    0x57a6f9ab
  41eb98:	jb     0x41ec09
  41eb9a:	inc    ebx
  41eb9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb9c:	addr16 loopne 0x41ebcf
  41eb9f:	add    ebx,esi
  41eba1:	inc    edx
  41eba2:	push   edi
  41eba3:	and    edx,edx
  41eba5:	mov    dh,0x32
  41eba7:	test   eax,0x5a789108
  41ebac:	mov    bh,0x1
  41ebae:	outs   dx,BYTE PTR ds:[esi]
  41ebaf:	fbstp  TBYTE PTR ds:0x8142ce39
  41ebb5:	(bad)
  41ebb9:	and    eax,esi
  41ebbb:	out    0x48,eax
  41ebbd:	popa   
  41ebbe:	cli    
  41ebbf:	les    ebx,FWORD PTR [edx+0x1e584f64]
  41ebc5:	and    BYTE PTR [esi-0x4f],ah
  41ebc8:	addr16 loope 0x41ebc3
  41ebcb:	or     DWORD PTR ds:0xb6604ac0,ecx
  41ebd1:	xchg   esp,eax
  41ebd2:	loope  0x41eba4
  41ebd4:	adc    al,0x34
  41ebd6:	sti    
  41ebd7:	push   edi
  41ebd8:	mov    dl,0x5
  41ebda:	xor    DWORD PTR [ecx+0x64],edi
  41ebdd:	push   0xfffffff2
  41ebdf:	out    dx,al
  41ebe0:	outs   dx,BYTE PTR ds:[esi]
  41ebe1:	pusha  
  41ebe2:	sahf   
  41ebe3:	clc    
  41ebe4:	mov    esp,0x4e0055a3
  41ebe9:	pop    edi
  41ebea:	adc    BYTE PTR [ecx],0xda
  41ebed:	push   0x4c
  41ebef:	add    ah,ch
  41ebf1:	idiv   ebp
  41ebf3:	cmp    eax,0xadd43152
  41ebf8:	sub    cl,BYTE PTR [ecx+ebx*1+0x160840cb]
  41ebff:	lahf   
  41ec00:	adc    al,bl
  41ec02:	xor    edx,DWORD PTR [ebx-0x7a7bba53]
  41ec08:	and    ch,ch
  41ec0a:	or     cl,dl
  41ec0c:	push   0x2e
  41ec0e:	push   esi
  41ec0f:	xor    BYTE PTR [edi],bl
  41ec11:	bound  ebx,QWORD PTR [edx-0x7099cc07]
  41ec17:	mov    ebx,0x8253540f
  41ec1c:	push   cs
  41ec1d:	and    eax,0x5ca6c73c
  41ec22:	fwait
  41ec23:	lea    ebp,[ebp-0x595e8562]
  41ec29:	add    ebp,ecx
  41ec2b:	add    ebx,DWORD PTR [edi-0x65]
  41ec2e:	lods   al,BYTE PTR ds:[esi]
  41ec2f:	sub    bl,BYTE PTR [ebx-0x334571b]
  41ec35:	fisttp WORD PTR [ecx]
  41ec37:	pusha  
  41ec38:	push   cs
  41ec39:	es gs push ds
  41ec3c:	push   0x55
  41ec3e:	add    al,0xcd
  41ec40:	push   ss
  41ec41:	shl    DWORD PTR [ecx+eiz*1+0x5d],0x26
  41ec46:	inc    esp
  41ec47:	dec    esi
  41ec48:	dec    esi
  41ec49:	lds    ebp,FWORD PTR [ebp-0x68947b88]
  41ec4f:	jnp    0x41ec85
  41ec51:	fcom   DWORD PTR [eax+ebx*8]
  41ec54:	mov    bl,al
  41ec56:	not    DWORD PTR [eax]
  41ec58:	scas   al,BYTE PTR es:[edi]
  41ec59:	jno    0x41ecd9
  41ec5b:	adc    BYTE PTR [esi],ah
  41ec5d:	ins    DWORD PTR es:[edi],dx
  41ec5e:	rcr    BYTE PTR ds:0xf0dd3dff,0xd9
  41ec65:	retf   
  41ec66:	fdiv   st(4),st
  41ec68:	mov    ebx,0xa5a9b9ee
  41ec6d:	adc    ebp,DWORD PTR [ecx+0x5f]
  41ec70:	into   
  41ec71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec72:	dec    esi
  41ec73:	(bad)  
  41ec75:	ins    DWORD PTR es:[edi],dx
  41ec76:	add    al,0x3d
  41ec78:	sbb    ebp,DWORD PTR [ebx+0xf]
  41ec7b:	imul   esp,DWORD PTR [edi+0x4c],0x7f672649
  41ec82:	retf   
  41ec83:	push   ecx
  41ec84:	xchg   edi,eax
  41ec85:	mov    esp,0x4c898d4b
  41ec8a:	icebp  
  41ec8b:	xchg   edi,eax
  41ec8c:	fbld   TBYTE PTR [edx-0x30f48fdc]
  41ec92:	add    ecx,DWORD PTR [esi+0x11]
  41ec95:	push   0x2812068b
  41ec9a:	stc    
  41ec9b:	xchg   esp,eax
  41ec9c:	outs   dx,DWORD PTR ds:[esi]
  41ec9d:	xchg   eax,ebx
  41ec9f:	jecxz  0x41eccd
  41eca1:	xor    edi,esp
  41eca3:	push   esp
  41eca4:	mov    WORD PTR [ecx+0x6e],cs
  41eca7:	adc    dh,BYTE PTR ds:0x2d35dc4
  41ecad:	inc    edi
  41ecae:	push   ss
  41ecaf:	xchg   esp,eax
  41ecb0:	adc    bl,dh
  41ecb2:	adc    ch,al
  41ecb4:	adc    al,BYTE PTR ds:[edi-0x74]
  41ecb8:	ja     0x41ece2
  41ecba:	fisttp QWORD PTR [edi-0x74]
  41ecbd:	push   esp
  41ecbe:	test   DWORD PTR [ebx],ecx
  41ecc0:	sti    
  41ecc1:	sbb    eax,0xb6ab8379
  41ecc7:	inc    edx
  41ecc8:	imul   BYTE PTR [ebp-0x2a72be95]
  41ecce:	out    0x2d,al
  41ecd0:	mov    edx,0xfd22b372
  41ecd5:	stos   DWORD PTR es:[edi],eax
  41ecd6:	test   BYTE PTR [edi+ebp*8+0x66],al
  41ecda:	push   esi
  41ecdb:	pop    edi
  41ecdc:	pop    edx
  41ecdd:	mov    WORD PTR [edx-0x1656001a],?
  41ece3:	jb     0x41eca6
  41ece5:	fwait
  41ece6:	out    dx,eax
  41ece7:	clc    
  41ece8:	sub    dh,BYTE PTR [ecx]
  41ecea:	scas   al,BYTE PTR es:[edi]
  41eceb:	and    esi,DWORD PTR [eax]
  41eced:	pop    esp
  41ecee:	pop    esi
  41ecef:	into   
  41ecf0:	jne    0x41ec7e
  41ecf2:	gs inc esp
  41ecf4:	mov    ebp,fs
  41ecf6:	ror    BYTE PTR [ebp-0x65ecd5f1],0x28
  41ecfd:	js     0x41ed65
  41ecff:	mov    esp,eax
  41ed01:	data16 fwait
  41ed03:	push   0xffffffd8
  41ed05:	outs   dx,BYTE PTR ds:[esi]
  41ed06:	cmp    al,0x8b
  41ed08:	xchg   ecx,eax
  41ed09:	pop    ebp
  41ed0a:	dec    ebx
  41ed0b:	fsub   DWORD PTR [ebp+0x6f]
  41ed0e:	outs   dx,BYTE PTR ds:[esi]
  41ed0f:	loopne 0x41eca3
  41ed11:	sti    
  41ed12:	lds    ecx,FWORD PTR [edx+0x6256d2fe]
  41ed18:	int    0x5c
  41ed1a:	xor    ecx,DWORD PTR [ebp-0x5d14cbe0]
  41ed20:	das    
  41ed21:	aad    0x15
  41ed23:	aaa    
  41ed24:	cmp    eax,0xe5bc93b9
  41ed29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed2a:	stos   BYTE PTR es:[edi],al
  41ed2b:	mov    ah,0x3e
  41ed2d:	cs mov ecx,0xa409dba0
  41ed33:	xchg   ecx,eax
  41ed34:	sar    DWORD PTR [edi-0x71],cl
  41ed37:	push   ebx
  41ed38:	lods   al,BYTE PTR ds:[esi]
  41ed39:	cmp    al,0x4c
  41ed3b:	shl    BYTE PTR [ecx+eax*4+0x4c],0x3
  41ed40:	dec    edi
  41ed41:	sub    ah,BYTE PTR gs:[esi-0x78]
  41ed45:	lods   eax,DWORD PTR ds:[esi]
  41ed46:	addr16 (bad) 
  41ed48:	int    0x68
  41ed4a:	push   eax
  41ed4b:	or     DWORD PTR [edx-0x28820ad],edx
  41ed51:	sbb    eax,0xe5ac4ff7
  41ed56:	fild   DWORD PTR [esi-0x4595416a]
  41ed5c:	mov    ds:0xb2cf9398,al
  41ed61:	imul   esi,DWORD PTR [edi+0x9],0xd9187fcf
  41ed68:	lods   al,BYTE PTR ds:[esi]
  41ed6a:	fucomp st(4)
  41ed6c:	ja     0x41ed5d
  41ed6e:	mov    ebp,DWORD PTR [ebx]
  41ed70:	std    
  41ed71:	test   al,0x6f
  41ed73:	dec    edx
  41ed74:	or     esi,DWORD PTR [eax-0x5ca9dcf0]
  41ed7a:	or     DWORD PTR [ecx-0x606d7155],ecx
  41ed80:	stos   BYTE PTR es:[edi],al
  41ed81:	xchg   ebx,eax
  41ed82:	popf   
  41ed83:	lods   al,BYTE PTR ds:[esi]
  41ed84:	xchg   edx,eax
  41ed85:	or     BYTE PTR [edx+0x6b],al
  41ed88:	dec    esi
  41ed89:	jo     0x41ed41
  41ed8b:	xchg   ebp,eax
  41ed8c:	(bad)  
  41ed8d:	fcmovnbe st,st(6)
  41ed8f:	fnsave [edx+ecx*4-0x3b8951aa]
  41ed96:	dec    ebx
  41ed97:	sbb    BYTE PTR [ebp-0x21e342d2],cl
  41ed9d:	repnz sbb dh,BYTE PTR [esi+0x78]
  41eda1:	sbb    dh,BYTE PTR [edx]
  41eda3:	pop    esi
  41eda4:	push   esi
  41eda5:	mov    al,ds:0x4d025eb3
  41edaa:	xor    BYTE PTR [ecx+esi*4],0x87
  41edae:	leave  
  41edaf:	mov    cl,0x0
  41edb1:	cmp    ebx,0x98ef907e
  41edb7:	in     eax,dx
  41edb8:	inc    ebp
  41edb9:	push   eax
  41edba:	push   eax
  41edbb:	imul   esi,DWORD PTR [esi+0x34],0xe3927e50
  41edc2:	cmp    DWORD PTR [ebp-0x23eff28c],eax
  41edc8:	push   edx
  41edc9:	push   edx
  41edca:	pushf  
  41edcb:	cli    
  41edcc:	out    dx,eax
  41edcd:	mov    cs,ecx
  41edcf:	cmp    al,ch
  41edd1:	xor    DWORD PTR [edx+0x29fd5256],esp
  41edd7:	adc    eax,0xa4f16f22
  41eddc:	(bad)  
  41eddd:	aam    0x1d
  41eddf:	shl    edx,0xc0
  41ede2:	adc    DWORD PTR es:[edx],ebx
  41ede5:	inc    ebp
  41ede6:	aaa    
  41ede7:	add    DWORD PTR [ecx-0x1083fbc5],eax
  41eded:	dec    eax
  41edee:	mov    DWORD PTR [esi+0x30ec7b64],0x66d5618f
  41edf8:	xchg   esi,eax
  41edf9:	adc    eax,0x6d541bc0
  41edfe:	inc    ecx
  41edff:	pslld  mm3,QWORD PTR [eax+0x6]
  41ee03:	mov    BYTE PTR ds:0xf9283715,0x9b
  41ee0a:	test   eax,0xeb0f2750
  41ee0f:	adc    BYTE PTR [ecx-0x6],dh
  41ee12:	inc    edx
  41ee13:	inc    esi
  41ee14:	cwde   
  41ee15:	(bad)  
  41ee17:	and    eax,0xcda42fa3
  41ee1c:	aam    0xb3
  41ee1e:	push   0x35
  41ee20:	add    cl,BYTE PTR [esp+eax*1-0x1d4d4b18]
  41ee27:	jb     0x41edf8
  41ee29:	cmp    ebx,ebp
  41ee2b:	ror    DWORD PTR [edx-0x53],cl
  41ee2e:	inc    ebp
  41ee2f:	pop    esi
  41ee30:	sbb    eax,DWORD PTR [ebx+0x71]
  41ee33:	cmp    BYTE PTR [eax+0x9],cl
  41ee36:	sti    
  41ee37:	and    ecx,ebp
  41ee39:	vmwrite ecx,DWORD PTR [edi-0x1ba002d2]
  41ee40:	jbe    0x41edfc
  41ee42:	retw   
  41ee44:	pop    ebp
  41ee45:	jbe    0x41eec6
  41ee47:	mov    fs,WORD PTR [ecx]
  41ee49:	cld    
  41ee4a:	cld    
  41ee4b:	or     al,0x5e
  41ee4d:	leave  
  41ee4e:	mov    edi,0x93169f45
  41ee53:	jmp    0x41ee17
  41ee55:	int3   
  41ee56:	popf   
  41ee57:	in     eax,dx
  41ee58:	repnz inc edi
  41ee5a:	ss nop
  41ee5c:	adc    al,0x6c
  41ee5e:	fs popa 
  41ee60:	mov    bl,0xee
  41ee63:	and    BYTE PTR [ecx+0x71e1d74c],bh
  41ee69:	enter  0x8ccc,0x6a
  41ee6d:	mov    dh,0xee
  41ee6f:	frstor [eax+0x29]
  41ee72:	ret    0x2198
  41ee75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee76:	pop    edx
  41ee77:	je     0x41ee9a
  41ee79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7a:	jp     0x41ee61
  41ee7c:	bound  esp,QWORD PTR [edi+0x3b1ca2d9]
  41ee82:	xor    ebx,DWORD PTR [esi+0x6103344c]
  41ee88:	stos   DWORD PTR es:[edi],eax
  41ee89:	popf   
  41ee8a:	repz mov ah,0x52
  41ee8d:	rcl    BYTE PTR [eax],1
  41ee8f:	push   eax
  41ee90:	inc    ecx
  41ee91:	sbb    eax,0x7443108
  41ee96:	rol    DWORD PTR [edi+ebx*4+0x7e6247c6],0x1c
  41ee9e:	jle    0x41ef13
  41eea0:	or     al,0xdf
  41eea2:	retf   
  41eea3:	inc    edi
  41eea4:	outs   dx,DWORD PTR ds:[esi]
  41eea5:	push   0x509d3b1a
  41eeaa:	dec    edi
  41eeab:	dec    ebp
  41eeac:	adc    bl,dh
  41eeae:	mov    edi,cs
  41eeb0:	retf   
  41eeb1:	pop    ebx
  41eeb2:	test   eax,0xc614aaa7
  41eeb7:	push   eax
  41eeb8:	jo     0x41eea6
  41eeba:	mov    ebp,0xe171d6c7
  41eebf:	jecxz  0x41eeba
  41eec1:	bound  ebp,QWORD PTR [eax+0x4d]
  41eec4:	and    eax,0xaac7deea
  41eec9:	cmc    
  41eeca:	aad    0x93
  41eecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eecd:	mov    edx,0x2354c855
  41eed2:	or     ecx,DWORD PTR [ebx+0x11]
  41eed5:	xor    ecx,DWORD PTR [eax-0x2e]
  41eed8:	adc    BYTE PTR [edx-0x5c],ch
  41eedb:	stos   DWORD PTR es:[edi],eax
  41eedc:	jne    0x41ef25
  41eede:	mov    bl,0xbe
  41eee0:	pop    edx
  41eee1:	fist   WORD PTR [ecx+0x3e]
  41eee4:	sar    DWORD PTR [ebx+edx*2-0x2c6fb6f9],0x8e
  41eeec:	push   edi
  41eeed:	nop
  41eeee:	repz sbb bl,BYTE PTR [eax-0x3feb8eab]
  41eef5:	(bad)  
  41eef6:	lods   al,BYTE PTR ds:[esi]
  41eef7:	cmp    DWORD PTR [ebx+eax*1+0x490d5be6],ebp
  41eefe:	xchg   edi,eax
  41eeff:	mov    ebp,0x9749d6ae
  41ef04:	and    DWORD PTR [esi-0x6ded4267],eax
  41ef0a:	cdq    
  41ef0b:	mov    al,ds:0x3473a321
  41ef10:	fcomp  st(0)
  41ef12:	(bad)  
  41ef13:	sub    bh,al
  41ef15:	ret    
  41ef16:	xchg   BYTE PTR [eax],ah
  41ef18:	sbb    dh,BYTE PTR [ecx+edi*8]
  41ef1b:	cmp    eax,0xb5f9a88a
  41ef20:	leave  
  41ef21:	sbb    eax,DWORD PTR [edi]
  41ef23:	pop    es
  41ef24:	shr    al,cl
  41ef26:	cs aad 0x5a
  41ef29:	mov    edx,0x77721422
  41ef2e:	mov    ss:0x1e42814b,eax
  41ef34:	xchg   ebp,eax
  41ef35:	imul   BYTE PTR [edi]
  41ef37:	dec    esp
  41ef38:	cwde   
  41ef39:	sbb    esi,edi
  41ef3b:	loope  0x41ef02
  41ef3d:	adc    al,0x12
  41ef3f:	arpl   WORD PTR [ecx+0x368c7eaf],bp
  41ef45:	retf   
  41ef46:	lods   eax,DWORD PTR ds:[esi]
  41ef47:	(bad)  [ebx]
  41ef49:	cmp    esi,DWORD PTR [edx]
  41ef4b:	(bad)  [eax-0x6c496e34]
  41ef51:	add    cl,ah
  41ef53:	scas   al,BYTE PTR es:[edi]
  41ef54:	and    eax,0xd2ffa81c
  41ef59:	lods   ax,WORD PTR ds:[esi]
  41ef5b:	and    eax,0x7bc36f3
  41ef60:	les    ecx,FWORD PTR [edx-0x52ae5c19]
  41ef66:	ror    cl,1
  41ef68:	push   DWORD PTR [edx]
  41ef6a:	pushf  
  41ef6b:	mov    esp,0xf36a19a4
  41ef70:	cwde   
  41ef71:	(bad)  
  41ef74:	dec    edi
  41ef75:	cld    
  41ef76:	xor    bl,BYTE PTR [esi-0xe]
  41ef79:	mov    al,ds:0x8370473d
  41ef7e:	call   0x3444de5e
  41ef83:	mov    al,0x0
  41ef85:	sti    
  41ef86:	pop    ecx
  41ef87:	hlt    
  41ef88:	ins    DWORD PTR es:[edi],dx
  41ef89:	jle    0x41efdd
  41ef8b:	jl     0x41ef38
  41ef8d:	xor    ah,dl
  41ef8f:	push   ebp
  41ef90:	mov    bh,0xf
  41ef92:	(bad)  
  41ef94:	ss dec esp
  41ef96:	mov    al,dh
  41ef98:	cmp    al,0x7d
  41ef9a:	or     al,0x65
  41ef9c:	addr16 jno 0x41ef6a
  41ef9f:	push   cs
  41efa0:	adc    al,0x9a
  41efa2:	dec    eax
  41efa3:	mov    eax,ds:0x2fcc232d
  41efa8:	daa    
  41efa9:	pop    edi
  41efaa:	lods   eax,DWORD PTR es:[esi]
  41efac:	scas   eax,DWORD PTR es:[edi]
  41efad:	test   eax,0x38e6cb29
  41efb2:	ret    
  41efb3:	mov    ch,0xde
  41efb5:	stc    
  41efb6:	adc    esi,DWORD PTR [ecx]
  41efb8:	outs   dx,BYTE PTR ds:[esi]
  41efb9:	test   DWORD PTR [edi-0x65eb7ad7],ebp
  41efbf:	xchg   ebp,eax
  41efc0:	add    dh,BYTE PTR cs:[ebx+0x74]
  41efc4:	out    dx,al
  41efc5:	dec    ecx
  41efc6:	mov    ?,WORD PTR [esp+ebp*1+0x66]
  41efca:	adc    BYTE PTR [eax+0x51eec878],cl
  41efd0:	mov    esi,0x2eed8005
  41efd5:	inc    ebp
  41efd6:	dec    ebp
  41efd7:	fldpi  
  41efd9:	mov    dl,0x28
  41efdb:	call   0x8c5b3553
  41efe0:	in     eax,dx
  41efe1:	pop    edi
  41efe2:	sbb    ah,cl
  41efe4:	mov    dl,0x6d
  41efe6:	xchg   edi,eax
  41efe7:	cmp    BYTE PTR [esi-0x2d2ee5df],bh
  41efed:	lock sbb BYTE PTR [ebx+0x5d],cl
  41eff1:	fstp   st(5)
  41eff3:	adc    BYTE PTR [ebp+0x2f],ah
  41eff6:	dec    ebx
  41eff7:	jno    0x41f03e
  41eff9:	pop    es
  41effa:	jmp    0x88d84584
  41efff:	aaa    
  41f000:	push   esp
  41f001:	arpl   WORD PTR [ebx],si
  41f003:	pop    ecx
  41f004:	das    
  41f005:	xchg   DWORD PTR [esp+edx*2],edi
  41f008:	out    dx,al
  41f009:	dec    ebx
  41f00a:	jp     0x41f07d
  41f00c:	data16 jbe 0x41f040
  41f00f:	mov    ecx,0x89d38732
  41f014:	jp     0x41f076
  41f016:	int    0xd1
  41f018:	test   al,0xf2
  41f01a:	adc    BYTE PTR [esi-0x4cecbb7f],al
  41f020:	out    0x1b,eax
  41f022:	lahf   
  41f023:	jmp    0x41efd7
  41f025:	sbb    al,0xf1
  41f027:	lock xchg BYTE PTR ds:0x297282ec,al
  41f02e:	mov    WORD PTR ds:0xf64be0a8,cs
  41f034:	cmp    al,0x2
  41f036:	outs   dx,DWORD PTR ds:[esi]
  41f037:	add    esp,DWORD PTR [esi-0x173e4213]
  41f03d:	and    BYTE PTR [edx-0x4bd86605],al
  41f043:	mov    ebp,0xf36b1b26
  41f048:	cmp    al,0x41
  41f04a:	hlt    
  41f04b:	push   ss
  41f04c:	retf   
  41f04d:	pop    es
  41f04e:	mov    ebp,0x5cf792c8
  41f053:	scas   al,BYTE PTR es:[edi]
  41f054:	adc    eax,0xb8ffc651
  41f059:	or     al,0x2e
  41f05b:	add    eax,0x13
  41f05e:	xor    eax,0xed50a8aa
  41f063:	shl    DWORD PTR [eax],1
  41f065:	sub    dl,BYTE PTR [ebx]
  41f067:	xchg   esi,eax
  41f068:	push   ss
  41f069:	into   
  41f06a:	stc    
  41f06b:	aad    0x5f
  41f06d:	mov    BYTE PTR [eax],0x80
  41f070:	inc    ebp
  41f071:	mov    BYTE PTR [edx+0x3a1cfa73],0xbf
  41f078:	in     eax,0x22
  41f07a:	sar    cl,0x96
  41f07d:	mov    ds:0xb8782a96,eax
  41f082:	ret    
  41f083:	cdq    
  41f084:	adc    ecx,eax
  41f086:	loop   0x41f00a
  41f088:	mov    al,ds:0x9687c409
  41f08d:	xchg   BYTE PTR [edx+0x152d634e],bh
  41f093:	fadd   st,st(2)
  41f095:	push   esp
  41f096:	nop
  41f097:	ds lahf 
  41f099:	icebp  
  41f09a:	jg     0x41f081
  41f09c:	xor    eax,0x61827629
  41f0a1:	add    eax,DWORD PTR [ebp+0x1b40620c]
  41f0a7:	xor    DWORD PTR [ecx],0x51
  41f0aa:	xchg   edi,eax
  41f0ab:	stc    
  41f0ac:	retf   
  41f0ad:	mov    DWORD PTR [ecx-0x20],ebx
  41f0b0:	or     esi,edx
  41f0b2:	lock outs dx,BYTE PTR ds:[esi]
  41f0b4:	and    ebp,DWORD PTR [ebp-0x5d14d847]
  41f0ba:	cli    
  41f0bb:	retf   
  41f0bc:	pop    esi
  41f0bd:	mov    DWORD PTR [eax],edi
  41f0bf:	inc    edx
  41f0c0:	(bad)  
  41f0c1:	hlt    
  41f0c2:	fidivr WORD PTR [edx-0x52]
  41f0c5:	add    eax,0xe7182c80
  41f0ca:	popa   
  41f0cb:	fmul   QWORD PTR [eax-0x57]
  41f0ce:	mov    cs,esp
  41f0d0:	lods   al,BYTE PTR ds:[esi]
  41f0d1:	pop    edi
  41f0d2:	loop   0x41f121
  41f0d4:	daa    
  41f0d5:	add    bl,BYTE PTR gs:0xd43519d5
  41f0dc:	mov    BYTE PTR [ecx+0xe],ah
  41f0df:	mov    ecx,0xfeef0998
  41f0e4:	cmp    ebx,DWORD PTR [ebp+0x69158890]
  41f0ea:	test   al,0x49
  41f0ec:	aam    0x98
  41f0ee:	push   ds
  41f0ef:	retf   0x4d3c
  41f0f2:	and    BYTE PTR [eax-0x9187267],cl
  41f0f8:	push   edi
  41f0f9:	loope  0x41f0b1
  41f0fb:	aas    
  41f0fc:	retf   
  41f0fd:	mov    ch,bh
  41f0ff:	mov    bh,0x19
  41f101:	adc    cl,BYTE PTR [edi]
  41f103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f104:	pop    ebx
  41f105:	dec    eax
  41f106:	fisttp WORD PTR [ebx-0x1501d1fe]
  41f10c:	mov    ds:0x288f27a5,eax
  41f111:	xor    al,0x28
  41f113:	shl    BYTE PTR [ebp-0x4c],1
  41f116:	jg     0x41f0ec
  41f118:	mov    eax,0xe7ee771d
  41f11d:	add    eax,DWORD PTR [ebx]
  41f11f:	mov    ecx,0xb89aa51c
  41f124:	xchg   ebp,eax
  41f125:	es inc esp
  41f127:	xor    BYTE PTR [ebp-0x19],bl
  41f12a:	xor    al,cl
  41f12c:	push   ecx
  41f12d:	jb     0x41f163
  41f12f:	xchg   esi,eax
  41f130:	jmp    0x7ec0:0x35f184a2
  41f137:	xor    BYTE PTR [ebp+0x1d2d1a11],ch
  41f13d:	repz loope 0x41f11c
  41f140:	mov    ds:0x913e2574,al
  41f145:	fnstsw WORD PTR [ebp-0x621b97c9]
  41f14b:	clc    
  41f14c:	cmp    dl,0xdf
  41f14f:	sub    al,0xd5
  41f151:	jge    0x41f14b
  41f153:	xchg   edx,eax
  41f154:	push   ds
  41f155:	pusha  
  41f156:	and    DWORD PTR [esi+0xbb67a82],eax
  41f15c:	call   0xe932:0x8265565b
  41f163:	das    
  41f164:	stos   BYTE PTR es:[edi],al
  41f165:	retf   
  41f166:	adc    BYTE PTR [ecx],dh
  41f168:	cmc    
  41f169:	jno    0x41f1a6
  41f16b:	retf   0x48b8
  41f16e:	or     DWORD PTR [esi+0x4e],eax
  41f171:	mov    dl,0x93
  41f173:	push   0x1bc7d74b
  41f178:	rcl    BYTE PTR [esp+eax*2+0x180053ec],1
  41f17f:	adc    dl,bh
  41f181:	push   cs
  41f182:	popf   
  41f183:	mov    al,ds:0x5209d8e0
  41f188:	dec    ebx
  41f189:	push   ss
  41f18a:	fistp  WORD PTR [edx]
  41f18c:	mov    eax,ds:0xe7dbda7e
  41f191:	mov    ch,0x43
  41f193:	sbb    eax,0x48593c9e
  41f198:	dec    edx
  41f199:	sbb    ebp,ecx
  41f19b:	and    BYTE PTR [ebx+0x7c],0x3c
  41f19f:	add    edx,ebp
  41f1a1:	mov    eax,ds:0x1a5055e
  41f1a6:	idiv   BYTE PTR [edx+ebp*4-0x76f7ebd7]
  41f1ad:	(bad)  
  41f1ae:	jecxz  0x41f1e2
  41f1b0:	cli    
  41f1b1:	cdq    
  41f1b2:	pop    edx
  41f1b3:	xor    eax,0xcd6e831d
  41f1b8:	sbb    ch,bh
  41f1ba:	test   DWORD PTR [esi+0x4622e41b],ebx
  41f1c0:	call   0x590f:0xb85ba9c9
  41f1c7:	mov    DWORD PTR [eax+0x239eb385],esi
  41f1cd:	add    eax,0x310a359c
  41f1d2:	sbb    DWORD PTR [ecx+0x6ba212cc],eax
  41f1d8:	or     DWORD PTR [ebx+0xd97818b],ebx
  41f1de:	mov    esi,0x23a1ac7
  41f1e3:	and    BYTE PTR [esi-0x6b17562b],dh
  41f1e9:	xor    al,0x45
  41f1eb:	fild   WORD PTR [esi-0x56]
  41f1ee:	or     bl,BYTE PTR [ecx+0x20b4f684]
  41f1f4:	cmp    BYTE PTR [bx+si-0x4473],0x4b
  41f1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1fb:	cmp    eax,0x25d44f75
  41f200:	sub    ch,bl
  41f202:	pop    edx
  41f203:	xchg   DWORD PTR [esi+0x167ec80b],ebp
  41f209:	push   esi
  41f20a:	dec    edx
  41f20b:	inc    edi
  41f20c:	ret    
  41f20d:	int3   
  41f20e:	adc    edi,DWORD PTR [ebp-0x44]
  41f211:	pop    ds
  41f212:	(bad)  
  41f213:	add    esp,edi
  41f215:	jge    0x41f264
  41f217:	sbb    BYTE PTR [esp+ebp*2-0x21],al
  41f21b:	inc    esp
  41f21c:	jbe    0x41f1d7
  41f21e:	jg     0x41f227
  41f220:	mov    cl,0x5e
  41f222:	add    BYTE PTR [edx],bh
  41f224:	loope  0x41f206
  41f226:	sbb    ebx,ebp
  41f228:	ja     0x41f219
  41f22a:	jo     0x41f1f7
  41f22c:	jnp    0x41f26e
  41f22e:	lods   eax,DWORD PTR ds:[esi]
  41f22f:	(bad)  
  41f230:	adc    eax,0xfb91313d
  41f235:	mov    ch,0xbe
  41f237:	inc    ebx
  41f238:	out    0x19,al
  41f23a:	dec    esi
  41f23b:	cmp    al,0xbe
  41f23d:	sbb    BYTE PTR [eax+0xc0a021b],ch
  41f243:	repz pop ebx
  41f245:	leave  
  41f246:	sbb    al,0xab
  41f248:	add    eax,0x587b7a48
  41f24d:	jo     0x41f224
  41f24f:	or     edi,DWORD PTR [eax-0x2105a472]
  41f255:	rol    DWORD PTR [edi],cl
  41f257:	mov    cl,0x82
  41f259:	adc    eax,0x7ef2fb70
  41f25e:	xchg   esp,eax
  41f25f:	jp     0x41f1ec
  41f261:	mov    eax,ds:0xf8cd4a70
  41f266:	pop    ds
  41f267:	mov    ds:0x7b6d55b,al
  41f26c:	or     al,0xd3
  41f26e:	sbb    dl,BYTE PTR [esi+0x1a57e9a5]
  41f274:	adc    esi,ebx
  41f276:	(bad)  
  41f278:	ss push 0xffffffb5
  41f27b:	dec    edi
  41f27c:	jecxz  0x41f207
  41f27e:	adc    al,0xa7
  41f280:	push   eax
  41f281:	jge    0x41f292
  41f283:	nop
  41f284:	int3   
  41f285:	and    al,0xd5
  41f287:	push   cs
  41f288:	push   ss
  41f289:	mov    ebx,0x45a3ad39
  41f28e:	xor    al,0x30
  41f290:	mov    bl,0x6a
  41f292:	cmp    BYTE PTR [ebx+0x4f44ce75],al
  41f298:	lea    ebp,[edx]
  41f29a:	lock lea ebp,[ecx+0x5f6fb85c]
  41f2a1:	in     al,dx
  41f2a2:	sub    ebp,DWORD PTR [ebp-0x5]
  41f2a5:	sub    edi,DWORD PTR [ecx+0x14]
  41f2a8:	pop    esi
  41f2a9:	adc    DWORD PTR ds:0xd7337092,ecx
  41f2af:	pusha  
  41f2b0:	fnstcw WORD PTR [edx]
  41f2b2:	sub    DWORD PTR [edx-0x26c01a91],ecx
  41f2b8:	aam    0x46
  41f2ba:	ins    BYTE PTR es:[edi],dx
  41f2bb:	(bad)  
  41f2bc:	jne    0x41f2bd
  41f2be:	push   cs
  41f2bf:	mov    al,ds:0x7eb52289
  41f2c4:	nop
  41f2c5:	mov    ecx,0xddc4848f
  41f2ca:	repz jmp 0x41f29f
  41f2cd:	sub    eax,0x4f187b21
  41f2d2:	jmp    0x1ffb:0x726cb7ba
  41f2d9:	stos   DWORD PTR es:[edi],eax
  41f2da:	cmp    al,0x3a
  41f2dc:	sub    edi,DWORD PTR [esi+0x7a]
  41f2df:	or     BYTE PTR [edi+eax*8],bh
  41f2e2:	(bad)  gs:[edx+0x6806edf4]
  41f2e9:	ror    DWORD PTR [ebp+0x5002dc37],0x58
  41f2f0:	ret    
  41f2f1:	ror    BYTE PTR [eax+esi*1+0x7906c2fd],cl
  41f2f8:	cwde   
  41f2f9:	pop    ds
  41f2fa:	dec    ebx
  41f2fb:	mov    ds:0xf8778617,eax
  41f300:	bound  eax,QWORD PTR [eax]
  41f302:	enter  0x7ea2,0xf9
  41f306:	outs   dx,DWORD PTR ds:[esi]
  41f307:	jmp    DWORD PTR [ebx-0x57]
  41f30a:	(bad)  
  41f30b:	mov    ah,0xda
  41f30d:	sbb    al,BYTE PTR ds:[ebp+0x1cad6a0]
  41f314:	xor    eax,0x2fb00e48
  41f319:	stos   DWORD PTR es:[edi],eax
  41f31a:	stos   DWORD PTR es:[edi],eax
  41f31b:	retf   0xd807
  41f31e:	cmp    al,0xee
  41f320:	icebp  
  41f321:	(bad)  
  41f323:	xchg   edx,eax
  41f324:	out    dx,al
  41f325:	ror    DWORD PTR [ebp-0x2ecc3e01],1
  41f32b:	jmp    0xc3db:0x2f7e1840
  41f332:	jge    0x41f374
  41f334:	and    edi,esp
  41f336:	inc    esi
  41f337:	fcomp  st(0)
  41f339:	scas   eax,DWORD PTR es:[edi]
  41f33a:	not    BYTE PTR [ebp+0x105c7b2]
  41f340:	mov    esp,0xb83165d3
  41f345:	sub    al,0x26
  41f347:	adc    al,0xee
  41f349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f34a:	mov    al,ds:0xc06ca79f
  41f34f:	xchg   ebx,eax
  41f350:	push   edx
  41f351:	cmp    esi,DWORD PTR [ebx+eiz*2+0x38]
  41f355:	jo     0x41f34c
  41f357:	rol    BYTE PTR [ebx],1
  41f359:	xchg   ebx,ebp
  41f35b:	mov    edx,0xe569e88
  41f360:	pop    es
  41f361:	push   esp
  41f362:	into   
  41f363:	(bad)  
  41f364:	fstp   QWORD PTR [eax-0x6499e619]
  41f36a:	stos   DWORD PTR es:[edi],eax
  41f36b:	inc    esi
  41f36c:	cli    
  41f36d:	fistp  QWORD PTR [esi+0x37]
  41f370:	mov    esi,0xf7907a3d
  41f375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f376:	and    esp,DWORD PTR [eax-0x59]
  41f379:	ret    0xd8f5
  41f37c:	shl    BYTE PTR [esi-0x36b918a2],0x90
  41f383:	jae    0x41f3da
  41f385:	repz std 
  41f387:	adc    al,0x54
  41f389:	jmp    0x73ed679c
  41f38e:	loope  0x41f387
  41f390:	push   ebx
  41f391:	es sbb edi,edx
  41f394:	inc    eax
  41f395:	cmp    eax,0x6f160359
  41f39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f39b:	cwde   
  41f39c:	repnz adc eax,0xbbdfa9e6
  41f3a2:	push   ds
  41f3a3:	xchg   esp,eax
  41f3a4:	imul   ebp,esp,0xc9c30054
  41f3aa:	push   0x61263d30
  41f3af:	test   BYTE PTR [edx],bh
  41f3b1:	mov    BYTE PTR [ebx+0x3b],dh
  41f3b4:	mov    bl,0x8e
  41f3b6:	push   cs
  41f3b7:	jg     0x41f34b
  41f3b9:	add    al,0x3d
  41f3bb:	mov    dh,0xe5
  41f3bd:	push   ebp
  41f3be:	jecxz  0x41f3b4
  41f3c0:	sbb    al,0x1e
  41f3c2:	xor    ch,BYTE PTR [ebx+0x52]
  41f3c5:	popa   
  41f3c6:	cmp    eax,0x2f483985
  41f3cb:	add    DWORD PTR [esi*4+0xcda810c],ecx
  41f3d2:	es aas 
  41f3d4:	and    bh,al
  41f3d6:	adc    BYTE PTR [ecx+0x4ba93883],al
  41f3dc:	repz add BYTE PTR [edi+0x16f29db8],dl
  41f3e3:	inc    ebp
  41f3e4:	shr    cl,1
  41f3e6:	pop    edi
  41f3e7:	stos   DWORD PTR es:[edi],eax
  41f3e8:	fstp   TBYTE PTR [eax]
  41f3ea:	or     bl,BYTE PTR [eax]
  41f3ec:	divps  xmm6,XMMWORD PTR [edx+edi*1]
  41f3f0:	cmp    al,0x9b
  41f3f2:	lods   al,BYTE PTR ds:[esi]
  41f3f3:	add    ecx,DWORD PTR [ebx-0x50]
  41f3f6:	fisubr WORD PTR [esi+eiz*8-0x6]
  41f3fa:	mov    eax,ds:0xaab51cea
  41f3ff:	or     al,0xb2
  41f401:	std    
  41f402:	xor    al,0x5
  41f404:	popa   
  41f405:	sbb    BYTE PTR [eax],cl
  41f407:	fist   DWORD PTR [edx+0x7f5feecd]
  41f40d:	mov    cs,eax
  41f40f:	or     bh,ah
  41f411:	out    0xf4,eax
  41f413:	xchg   ebp,eax
  41f414:	sub    al,0x7b
  41f416:	xor    eax,0xffffffa1
  41f419:	stos   BYTE PTR es:[edi],al
  41f41a:	out    dx,al
  41f41b:	ins    DWORD PTR es:[edi],dx
  41f41c:	add    ebp,DWORD PTR [ebp-0xb]
  41f41f:	sahf   
  41f420:	dec    ebx
  41f421:	rcl    edx,cl
  41f423:	fnstenv [ecx]
  41f425:	add    al,cl
  41f427:	or     al,0x60
  41f429:	or     eax,0xa79a4514
  41f42e:	jg     0x41f404
  41f430:	and    DWORD PTR [esi+0x3b],0x39
  41f434:	sti    
  41f435:	push   esp
  41f436:	xor    al,BYTE PTR [ebp+ebx*8-0x4d7dc7f3]
  41f43d:	push   ecx
  41f43e:	fwait
  41f43f:	sti    
  41f440:	test   eax,0xd8cb9d68
  41f445:	jg     0x41f43c
  41f447:	xchg   esp,eax
  41f448:	inc    edx
  41f449:	fnstenv [eax-0x58]
  41f44c:	shr    edi,cl
  41f44e:	cld    
  41f44f:	inc    esp
  41f450:	out    0x20,al
  41f452:	or     al,BYTE PTR [ebp+eiz*1+0x4c8c31eb]
  41f459:	cwde   
  41f45a:	fild   QWORD PTR [ecx-0xe]
  41f45d:	jns    0x41f428
  41f45f:	retf   
  41f460:	dec    ecx
  41f461:	adc    edi,0x5
  41f464:	(bad)  
  41f466:	pusha  
  41f467:	jmp    0xbc57011d
  41f46c:	dec    eax
  41f46d:	das    
  41f46e:	push   ss
  41f46f:	push   ecx
  41f470:	mov    WORD PTR [ebx],gs
  41f472:	adc    eax,0x6813199e
  41f477:	mov    edi,0x5a8e4f76
  41f47c:	add    bl,BYTE PTR [edi-0x25]
  41f47f:	es jo  0x41f47e
  41f482:	cmp    dh,bh
  41f484:	aad    0x14
  41f486:	clc    
  41f487:	mov    ebx,0x85859bc8
  41f48c:	adc    esp,DWORD PTR gs:[ebx-0x488ab215]
  41f493:	shr    BYTE PTR [esi+0x29],cl
  41f496:	adc    BYTE PTR [ebp-0x2b],0xac
  41f49a:	in     eax,dx
  41f49b:	out    dx,eax
  41f49c:	mov    dh,0xcd
  41f49e:	retf   0xedd8
  41f4a1:	push   ecx
  41f4a2:	pop    esi
  41f4a3:	popf   
  41f4a4:	mov    ah,0x66
  41f4a6:	fild   DWORD PTR [edx+ebp*8]
  41f4a9:	pop    es
  41f4aa:	cmp    eax,0xeeca9fe6
  41f4af:	pop    esi
  41f4b0:	fdivr  st,st(2)
  41f4b2:	xchg   ebx,eax
  41f4b3:	and    BYTE PTR [ebx-0x30],dl
  41f4b6:	aas    
  41f4b7:	or     bh,ch
  41f4b9:	ja     0x41f4fe
  41f4bb:	lods   eax,DWORD PTR ds:[esi]
  41f4bc:	jb     0x41f4e1
  41f4be:	jo     0x41f49c
  41f4c0:	push   0x2870012b
  41f4c5:	inc    ebx
  41f4c6:	test   eax,0x1fa58834
  41f4cb:	imul   BYTE PTR [eax-0x30123a2b]
  41f4d1:	push   ss
  41f4d2:	scas   al,BYTE PTR es:[edi]
  41f4d3:	in     al,0x77
  41f4d5:	jo     0x41f4e4
  41f4d7:	pop    eax
  41f4d8:	std    
  41f4d9:	jae    0x41f511
  41f4db:	push   eax
  41f4dc:	xor    esi,DWORD PTR [ebx-0x2b6a2c92]
  41f4e2:	and    al,ah
  41f4e4:	add    edx,DWORD PTR [ebx+ebp*2-0x5a4f4727]
  41f4eb:	adc    DWORD PTR [edi-0x48],edx
  41f4ee:	sti    
  41f4ef:	mov    al,ds:0x2118275a
  41f4f4:	xlat   BYTE PTR ds:[ebx]
  41f4f5:	push   edi
  41f4f6:	retf   
  41f4f7:	inc    ebp
  41f4f8:	pop    esi
  41f4f9:	test   BYTE PTR [eax],bh
  41f4fb:	addr16 adc eax,0x836708a
  41f501:	aas    
  41f502:	pop    ds
  41f503:	test   DWORD PTR ds:0xdce57c40,eax
  41f509:	xchg   BYTE PTR [ebx],dh
  41f50b:	pop    eax
  41f50c:	jmp    0xf18f97b1
  41f511:	add    eax,0x3810fb1d
  41f516:	mov    DWORD PTR [ecx+0x7b],0xec85170
  41f51d:	mov    al,0xb1
  41f51f:	lds    ebx,FWORD PTR [ebx+0x5ddba911]
  41f525:	pmulhw mm1,mm0
  41f528:	push   edi
  41f529:	and    eax,0xbdecceca
  41f52e:	push   eax
  41f52f:	push   es
  41f530:	jo     0x41f549
  41f532:	sub    BYTE PTR [edi-0x3ebcfa3d],bh
  41f538:	push   edi
  41f539:	inc    edx
  41f53a:	add    BYTE PTR [eax],dh
  41f53c:	aad    0x83
  41f53e:	in     al,dx
  41f53f:	add    al,0xe3
  41f541:	repz in al,0x65
  41f544:	aas    
  41f545:	fstp   DWORD PTR [ecx]
  41f547:	mov    BYTE PTR [esi+edx*4+0xd2368b3],al
  41f54e:	inc    ebp
  41f54f:	dec    edx
  41f550:	sub    eax,0xbce62c1a
  41f555:	and    DWORD PTR [esi],0xef44d095
  41f55b:	loop   0x41f4dd
  41f55d:	jle    0x41f58d
  41f55f:	push   0xce32e152
  41f564:	cdq    
  41f565:	mov    eax,DWORD PTR [ebx]
  41f567:	sahf   
  41f568:	mov    esp,0xb896f2cd
  41f56d:	cs add bh,al
  41f570:	adc    ch,BYTE PTR [esi-0x89c0a4]
  41f576:	jmp    0x41f5c4
  41f578:	xchg   esp,eax
  41f579:	test   BYTE PTR [eax],cl
  41f57b:	xchg   edi,eax
  41f57c:	int    0xaf
  41f57e:	dec    eax
  41f57f:	mov    ch,0x82
  41f581:	cdq    
  41f582:	dec    ebx
  41f583:	push   edi
  41f584:	xchg   esp,eax
  41f585:	push   eax
  41f586:	in     eax,dx
  41f587:	pop    esi
  41f588:	mov    al,ds:0x8bfba8e2
  41f58d:	out    0xc4,al
  41f58f:	xor    eax,0xc0ca8203
  41f594:	xchg   ecx,eax
  41f595:	sub    DWORD PTR [esi],esi
  41f597:	retf   
  41f598:	mov    ss,WORD PTR [edx+0x4ec6a49f]
  41f59e:	sahf   
  41f59f:	int3   
  41f5a0:	or     bh,bl
  41f5a2:	repz xor al,0x53
  41f5a5:	xchg   esp,eax
  41f5a6:	test   al,0x53
  41f5a8:	or     BYTE PTR [eax+0x60d4e8f7],bh
  41f5ae:	mov    eax,ds:0xc09feb5e
  41f5b3:	fcomp  DWORD PTR [edi]
  41f5b5:	fwait
  41f5b6:	out    dx,al
  41f5b7:	ss jmp 0x537d:0xece04fca
  41f5bf:	sbb    BYTE PTR [edx+ebp*1+0x3093d],bh
  41f5c6:	mov    cl,0x48
  41f5c8:	cmp    al,0x7b
  41f5ca:	xchg   edi,eax
  41f5cb:	pop    eax
  41f5cc:	cmp    eax,0xe1e7030b
  41f5d1:	outs   dx,BYTE PTR ds:[esi]
  41f5d2:	cmc    
  41f5d3:	mov    esp,DWORD PTR ds:0x88c55f2b
  41f5d9:	loope  0x41f635
  41f5db:	pop    ss
  41f5dc:	push   esp
  41f5dd:	fwait
  41f5de:	mov    ds:0xecc4215,eax
  41f5e3:	aaa    
  41f5e4:	pop    edi
  41f5e5:	jbe    0x41f625
  41f5e7:	fist   WORD PTR [ecx]
  41f5e9:	jg     0x41f5b2
  41f5eb:	or     BYTE PTR [ebx],dl
  41f5ed:	rcl    BYTE PTR [esi-0x18f11716],0x8e
  41f5f4:	int    0x5c
  41f5f6:	cld    
  41f5f7:	adc    eax,0x7ee7f38d
  41f5fc:	ror    BYTE PTR [ecx],cl
  41f5fe:	aad    0x8d
  41f600:	sub    DWORD PTR [edi+0x2],0xc9074e68
  41f607:	or     bl,BYTE PTR [ecx+0x6e]
  41f60a:	mov    ds:0xd201cc2b,al
  41f60f:	aam    0xc5
  41f611:	(bad)  
  41f612:	mov    ebp,0xff51b7af
  41f617:	cmp    BYTE PTR [esp+ebp*8],cl
  41f61a:	mov    eax,ds:0xb86949cf
  41f61f:	(bad)  
  41f620:	xchg   esp,eax
  41f621:	push   edi
  41f622:	sahf   
  41f623:	ins    BYTE PTR es:[edi],dx
  41f624:	js     0x41f5b2
  41f626:	cmp    al,0x3a
  41f628:	out    0x69,al
  41f62a:	aam    0xa
  41f62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f62d:	cmp    eax,0x50e45edb
  41f632:	inc    BYTE PTR [ecx-0x1f]
  41f635:	scas   al,BYTE PTR es:[edi]
  41f636:	or     BYTE PTR [eax+0x63],dh
  41f639:	inc    eax
  41f63a:	pop    es
  41f63b:	loop   0x41f676
  41f63d:	mov    eax,0xfea75afe
  41f642:	push   edx
  41f643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f644:	sar    bh,cl
  41f646:	retf   0x7911
  41f649:	enter  0x156,0xba
  41f64d:	fs (bad) 
  41f64f:	fist   DWORD PTR [eax+0x4e]
  41f652:	or     esp,DWORD PTR [ebp-0x29]
  41f655:	leave  
  41f656:	or     bh,BYTE PTR [edi+0x23b25567]
  41f65c:	sbb    BYTE PTR es:[esi+eiz*8+0x4d72bae9],dh
  41f664:	nop
  41f665:	xor    edx,DWORD PTR [esi]
  41f667:	test   BYTE PTR ds:0x8368fd86,al
  41f66d:	mov    dh,0x60
  41f66f:	aam    0x6a
  41f671:	or     eax,0x952b38ff
  41f676:	rcl    BYTE PTR [ebx+0x1f],cl
  41f679:	sbb    ecx,DWORD PTR [ebx-0x674206da]
  41f67f:	in     al,dx
  41f680:	pop    ebp
  41f681:	pop    ebp
  41f682:	pop    eax
  41f683:	push   0x1b77f3b9
  41f688:	idiv   BYTE PTR [ecx]
  41f68a:	(bad)  
  41f68c:	jmp    0x41f640
  41f68e:	mov    ebp,DWORD PTR [esi]
  41f690:	mov    bh,BYTE PTR [edi+0x6de74113]
  41f696:	test   al,0xd8
  41f698:	lods   al,BYTE PTR ds:[esi]
  41f699:	xor    ebp,DWORD PTR [esi]
  41f69b:	fcom   QWORD PTR [eax-0xc]
  41f69e:	lahf   
  41f69f:	or     esp,DWORD PTR [ecx]
  41f6a1:	xchg   ebx,eax
  41f6a2:	pop    ebp
  41f6a3:	push   edx
  41f6a4:	cmp    ebx,DWORD PTR [ebp+0x387cb2fa]
  41f6aa:	jmp    0x41f6a6
  41f6ac:	addr16 cli 
  41f6ae:	test   eax,0xab202a33
  41f6b3:	jl     0x41f723
  41f6b5:	aam    0x33
  41f6b7:	into   
  41f6b8:	repz mov ds:0xbb5c54aa,al
  41f6be:	test   al,0x39
  41f6c0:	and    esp,ebx
  41f6c2:	std    
  41f6c3:	(bad)  ds:0xed3ed2f3
  41f6c9:	loopne 0x41f742
  41f6cb:	test   eax,0x20157b23
  41f6d0:	das    
  41f6d1:	mov    esp,0x3e3b28f7
  41f6d6:	fisttp DWORD PTR [edi+0x408e0564]
  41f6dc:	add    esp,eax
  41f6de:	sub    DWORD PTR [eax-0x4f],edx
  41f6e1:	and    dh,BYTE PTR [eax]
  41f6e3:	xlat   BYTE PTR ds:[ebx]
  41f6e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e5:	lea    ecx,[ebp+0x35]
  41f6e8:	mov    ebp,0xd50b3fe1
  41f6ed:	mov    cl,0xba
  41f6ef:	jae    0x41f69c
  41f6f1:	push   edi
  41f6f2:	dec    ecx
  41f6f3:	push   eax
  41f6f4:	xchg   ecx,eax
  41f6f5:	and    bl,dl
  41f6f7:	inc    ebp
  41f6f8:	out    dx,eax
  41f6f9:	mov    ebp,0xe21634dc
  41f6fe:	push   edx
  41f6ff:	xchg   edi,eax
  41f700:	ins    BYTE PTR es:[edi],dx
  41f701:	jae    0x41f730
  41f703:	push   0x1d
  41f705:	hlt    
  41f706:	call   0x50fdc809
  41f70b:	stos   DWORD PTR es:[edi],eax
  41f70c:	clc    
  41f70d:	stos   DWORD PTR es:[edi],eax
  41f70e:	inc    edx
  41f70f:	or     eax,0x83b0b655
  41f714:	sub    al,0x68
  41f716:	jbe    0x41f6db
  41f718:	fcom   QWORD PTR [esi+0x46]
  41f71b:	es stos DWORD PTR es:[edi],eax
  41f71d:	data16 out 0xec,al
  41f720:	mov    BYTE PTR [eax],bh
  41f722:	jno    0x41f6db
  41f724:	or     ecx,eax
  41f726:	jmp    0x52acc2a8
  41f72b:	div    BYTE PTR [edi+0x3e]
  41f72e:	ror    BYTE PTR [eax],0xbc
  41f731:	pop    esi
  41f732:	push   esp
  41f733:	fild   QWORD PTR [edx]
  41f735:	test   edi,edx
  41f737:	push   ss
  41f738:	and    DWORD PTR [ecx-0x184172e2],edi
  41f73e:	jmp    0x26f9:0x224d59f4
  41f745:	push   ebp
  41f746:	(bad)  
  41f747:	je     0x41f725
  41f749:	rcl    DWORD PTR [eax],cl
  41f74b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41f74d:	pushf  
  41f74e:	test   BYTE PTR [edi],ch
  41f750:	cmp    BYTE PTR [ebx-0x2e7ee263],cl
  41f756:	sub    al,0x45
  41f758:	pop    ss
  41f759:	shl    BYTE PTR [ecx-0x53ab61cc],cl
  41f75f:	sar    BYTE PTR [edx],1
  41f761:	in     eax,dx
  41f762:	mov    bl,0x38
  41f764:	inc    esi
  41f765:	or     al,0x2e
  41f767:	and    BYTE PTR [ebp+0x60],cl
  41f76a:	mov    bh,0xcb
  41f76c:	inc    esp
  41f76d:	aas    
  41f76e:	retf   0xd588
  41f771:	fwait
  41f772:	ja     0x41f70d
  41f774:	scas   al,BYTE PTR es:[edi]
  41f775:	jle    0x41f7b2
  41f777:	jae    0x41f7f1
  41f779:	xchg   bp,ax
  41f77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f77c:	add    al,0x27
  41f77e:	scas   eax,DWORD PTR es:[edi]
  41f77f:	imul   ebx,DWORD PTR [ebp-0x44],0x4d2586e
  41f786:	push   eax
  41f787:	push   cs
  41f788:	jmp    0x6b9707dc
  41f78d:	jmp    0x5cf7a5ff
  41f792:	push   ecx
  41f793:	dec    esi
  41f794:	das    
  41f795:	sub    eax,0x11fd1557
  41f79a:	mov    BYTE PTR [esi-0x1e],al
  41f79d:	pop    ebx
  41f79e:	ds rol ebp,0xbc
  41f7a2:	shr    WORD PTR [esp+ecx*4-0x2c],0x1d
  41f7a8:	fidivr WORD PTR [edi]
  41f7aa:	fwait
  41f7ab:	test   DWORD PTR [edi-0x26e2897],ebx
  41f7b1:	imul   ebx,DWORD PTR [ecx],0xd741651f
  41f7b7:	cmp    al,0x6e
  41f7b9:	sub    al,0xb9
  41f7bb:	mov    ch,0xb8
  41f7bd:	lahf   
  41f7be:	push   ss
  41f7bf:	popf   
  41f7c0:	jmp    0x41f830
  41f7c2:	mov    esp,0x852d3b64
  41f7c7:	outs   dx,BYTE PTR ds:[esi]
  41f7c8:	mov    ecx,0x8e92a1a6
  41f7cd:	(bad)  
  41f7cf:	mov    ecx,0xd5aa4d0
  41f7d4:	fsub   QWORD PTR [edx-0x729d28b8]
  41f7da:	add    DWORD PTR [edx-0x5fb52ffc],eax
  41f7e0:	fldcw  WORD PTR [ecx-0x13]
  41f7e3:	sub    DWORD PTR [ecx],0x10707164
  41f7e9:	sbb    esp,eax
  41f7eb:	enter  0x4ac9,0x79
  41f7ef:	mov    edi,0x24191022
  41f7f4:	call   0x70e8398d
  41f7f9:	mov    ah,0xf3
  41f7fb:	and    BYTE PTR [eax+0x4bee9c82],bl
  41f801:	push   ebx
  41f802:	mov    ebx,0xa47168be
  41f807:	fld    TBYTE PTR [edi+0x74]
  41f80a:	ds int 0xdd
  41f80d:	ins    DWORD PTR es:[edi],dx
  41f80e:	push   edi
  41f80f:	pop    ecx
  41f810:	jae    0x41f85e
  41f812:	xchg   edx,eax
  41f813:	fstp   TBYTE PTR [esi]
  41f815:	sbb    BYTE PTR [ebx+0x6be199eb],ah
  41f81b:	loope  0x41f7e6
  41f81d:	shl    DWORD PTR [edx],0x32
  41f820:	bound  edi,QWORD PTR [eax-0x276ae68f]
  41f826:	test   esi,0x8673f28f
  41f82c:	shl    BYTE PTR [ecx],cl
  41f82e:	xchg   ecx,eax
  41f82f:	imul   dl
  41f831:	cmp    BYTE PTR [edx-0x7d],ah
  41f834:	pop    ecx
  41f835:	add    BYTE PTR [edx-0x26],dh
  41f838:	arpl   WORD PTR [ebx-0x614acee1],di
  41f83e:	mov    bl,0x6b
  41f840:	fstp   TBYTE PTR [edx+0x4ef98057]
  41f846:	jmp    0xbe100f63
  41f84b:	pop    es
  41f84c:	push   cs
  41f84d:	pop    ds
  41f84e:	adc    cl,BYTE PTR [eax-0x5e]
  41f851:	ds fptan 
  41f854:	retf   0x2d27
  41f857:	loopne 0x41f840
  41f859:	popf   
  41f85a:	dec    ecx
  41f85b:	xor    dh,al
  41f85d:	sti    
  41f85e:	inc    ebx
  41f85f:	out    dx,al
  41f860:	cmc    
  41f861:	into   
  41f862:	dec    ecx
  41f863:	adc    DWORD PTR [ebx+0x69],esi
  41f866:	data16 lods al,BYTE PTR ds:[si]
  41f869:	mov    DWORD PTR [edx],esp
  41f86b:	adc    al,BYTE PTR [esi-0x1a]
  41f86e:	or     BYTE PTR [esp+ecx*1],0xf1
  41f872:	shr    BYTE PTR [ecx+0x254a3139],cl
  41f878:	pop    ebp
  41f879:	pop    ds
  41f87a:	ins    BYTE PTR es:[edi],dx
  41f87b:	xchg   esi,eax
  41f87c:	mov    bh,0xa1
  41f87e:	pop    edi
  41f87f:	sub    esi,edi
  41f881:	xchg   esp,eax
  41f882:	pop    ss
  41f883:	pop    edx
  41f884:	sti    
  41f885:	inc    edx
  41f886:	retf   0xe259
  41f889:	mov    bl,0xcb
  41f88b:	js     0x41f877
  41f88d:	jmp    0xa2a1f322
  41f892:	adc    dl,BYTE PTR [eax-0x42976695]
  41f898:	scas   al,BYTE PTR es:[edi]
  41f899:	mov    dh,0xea
  41f89b:	ret    
  41f89c:	mov    esi,DWORD PTR [esi+0x7e]
  41f89f:	das    
  41f8a0:	inc    esp
  41f8a1:	cli    
  41f8a2:	aad    0x38
  41f8a4:	stc    
  41f8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a6:	adc    al,0x3b
  41f8a8:	mov    eax,ds:0xf34e1e8d
  41f8ad:	gs call 0xa625f372
  41f8b3:	xchg   esi,eax
  41f8b4:	pop    ebp
  41f8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8b6:	mul    DWORD PTR ds:0x36a882c6
  41f8bc:	xlat   BYTE PTR ds:[ebx]
  41f8bd:	mov    edi,0x3646f655
  41f8c2:	les    edx,FWORD PTR [edi-0xf]
  41f8c5:	jmp    0x41f8df
  41f8c7:	pop    eax
  41f8c8:	(bad)  
  41f8ca:	xor    al,0x4a
  41f8cc:	sub    BYTE PTR es:[eax+eiz*4-0x5c9c2086],bl
  41f8d4:	inc    ecx
  41f8d5:	add    dh,ch
  41f8d7:	push   ds
  41f8d8:	outs   dx,BYTE PTR ds:[esi]
  41f8d9:	jb     0x41f939
  41f8db:	adc    ebx,DWORD PTR [eax+0x29b80ea0]
  41f8e1:	lds    eax,FWORD PTR [edi-0x1e]
  41f8e4:	mov    esi,0x90d57c91
  41f8e9:	ss cs ss aad 0x85
  41f8ee:	mov    ds:0xce6e78cc,al
  41f8f3:	imul   esi,DWORD PTR [esp+ecx*2],0x39
  41f8f7:	enter  0x65e8,0x2c
  41f8fb:	mov    al,ds:0x61d947f7
  41f900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f901:	adc    DWORD PTR [edi-0x35],ecx
  41f904:	push   cs
  41f905:	mov    WORD PTR [edx],ds
  41f907:	lahf   
  41f908:	sti    
  41f909:	push   cs
  41f90a:	jns    0x41f94a
  41f90c:	aaa    
  41f90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90e:	mov    ds,WORD PTR [ebp+edx*2+0x7f7f7b93]
  41f915:	lock mov ebp,0x5c81c15e
  41f91b:	push   eax
  41f91c:	fisubr DWORD PTR [esi]
  41f91e:	push   ecx
  41f91f:	or     esp,0xbdad9cce
  41f925:	scas   eax,DWORD PTR es:[edi]
  41f926:	inc    edi
  41f927:	div    BYTE PTR [ebx]
  41f929:	not    BYTE PTR [eax]
  41f92b:	retf   
  41f92c:	ja     0x41f931
  41f92e:	repz mov dl,0x99
  41f931:	xor    eax,0x4a3bed5f
  41f936:	pushf  
  41f937:	test   BYTE PTR [ecx+0x77cc555d],bl
  41f93d:	mov    eax,0xfb30a1ac
  41f942:	es push 0x5
  41f945:	mov    esi,0x7f47e830
  41f94a:	icebp  
  41f94b:	jmp    0x41f8f0
  41f94d:	icebp  
  41f94e:	into   
  41f94f:	mov    bl,0xda
  41f951:	fwait
  41f952:	xor    esi,DWORD PTR [ebx+0x52]
  41f955:	cmp    BYTE PTR [ebx],bh
  41f957:	mov    edx,0xc45e1a80
  41f95c:	cmp    bl,BYTE PTR [edi+0x5a16f3aa]
  41f962:	outs   dx,BYTE PTR ds:[esi]
  41f963:	rcl    DWORD PTR [ecx],cl
  41f965:	xchg   DWORD PTR [edx+0x2cff9a21],ecx
  41f96b:	in     eax,0x6
  41f96d:	push   0x6b
  41f96f:	add    ah,bh
  41f971:	or     bl,BYTE PTR ds:0x546a3312
  41f977:	dec    ebx
  41f978:	inc    edx
  41f979:	inc    ecx
  41f97a:	add    al,0x81
  41f97c:	not    DWORD PTR [ebx+0x62]
  41f97f:	arpl   ax,bx
  41f981:	xor    BYTE PTR [edx],0x4c
  41f984:	fs add eax,0xebcadd32
  41f98a:	xor    al,0x43
  41f98c:	xchg   bl,dh
  41f98e:	adc    BYTE PTR [ebx],bh
  41f990:	adc    BYTE PTR [ecx+0x65],bl
  41f993:	cmp    ebx,DWORD PTR [ebx-0x67b004f3]
  41f999:	lods   al,BYTE PTR ds:[esi]
  41f99a:	dec    eax
  41f99b:	ret    0x7f8
  41f99e:	dec    edx
  41f99f:	lfs    esp,FWORD PTR [ecx+ebx*8-0x15]
  41f9a4:	add    dh,BYTE PTR [edi]
  41f9a6:	xchg   BYTE PTR [eax-0x38fa51ff],ch
  41f9ac:	ins    BYTE PTR es:[edi],dx
  41f9ad:	push   esi
  41f9ae:	xchg   edx,eax
  41f9af:	jp     0x41f9aa
  41f9b1:	pshufw mm4,QWORD PTR [edx-0x76],0x1
  41f9b6:	dec    eax
  41f9b7:	xchg   BYTE PTR [esi+0x7aa7f6af],dh
  41f9bd:	mov    ah,0xda
  41f9bf:	mov    bl,0x19
  41f9c1:	jl     0x41f961
  41f9c3:	mov    esp,0x949f128e
  41f9c8:	mov    ds:0x77391922,al
  41f9cd:	or     edx,DWORD PTR [edx]
  41f9cf:	cmp    eax,0x7bebc47
  41f9d4:	test   DWORD PTR [ebp-0xd8058de],ecx
  41f9da:	cld    
  41f9db:	dec    esi
  41f9dc:	pop    ebp
  41f9dd:	xor    bl,BYTE PTR [ecx-0x2653854e]
  41f9e3:	aam    0x5
  41f9e5:	int3   
  41f9e6:	and    eax,DWORD PTR [edx+0x6b562055]
  41f9ec:	shl    BYTE PTR [edx+0x3cc354d4],0xfa
  41f9f3:	aas    
  41f9f4:	and    BYTE PTR [edi+ecx*4],dh
  41f9f7:	pushf  
  41f9f8:	sbb    dh,BYTE PTR [ecx-0x4198575d]
  41f9fe:	xchg   ecx,eax
  41f9ff:	bound  edx,QWORD PTR [esi-0x10]
  41fa02:	cmp    DWORD PTR [ebx-0x16],edi
  41fa05:	inc    ecx
  41fa06:	fs in  eax,dx
  41fa08:	push   cs
  41fa09:	arpl   WORD PTR [edi],sp
  41fa0b:	ins    BYTE PTR es:[edi],dx
  41fa0c:	cld    
  41fa0d:	inc    ebx
  41fa0e:	and    BYTE PTR [esi-0x1ba31c80],dh
  41fa14:	xor    DWORD PTR [esi+0x2c],0x113f4475
  41fa1b:	xor    DWORD PTR [ebx-0x3b],edi
  41fa1e:	test   BYTE PTR [edx],cl
  41fa20:	dec    ebx
  41fa21:	jbe    0x41fa2b
  41fa23:	mov    esp,0xfd8eb7db
  41fa28:	sbb    al,bl
  41fa2a:	ret    
  41fa2b:	mov    eax,0x115471d5
  41fa30:	xlat   BYTE PTR ss:[ebx]
  41fa32:	add    esp,DWORD PTR [edi+0x41deceb]
  41fa38:	add    al,0x17
  41fa3b:	cli    
  41fa3c:	sti    
  41fa3d:	arpl   WORD PTR [esi+0x6fc23ddc],sp
  41fa43:	push   ecx
  41fa44:	add    eax,0x9ac6e4f4
  41fa49:	push   edi
  41fa4a:	shl    DWORD PTR gs:[edi],1
  41fa4d:	loopne 0x41fa51
  41fa4f:	aad    0xc6
  41fa51:	mov    ebp,0x6b1a6bd6
  41fa56:	mov    ah,0x35
  41fa58:	mov    esp,0xb0bf03ad
  41fa5d:	or     DWORD PTR [eax-0x79c685dd],0xd63c9065
  41fa67:	adc    bl,BYTE PTR [eax]
  41fa69:	mov    dl,BYTE PTR [ecx+0x2f]
  41fa6c:	ins    BYTE PTR es:[edi],dx
  41fa6d:	arpl   dx,cx
  41fa6f:	stos   DWORD PTR es:[edi],eax
  41fa70:	and    esp,ebx
  41fa72:	lds    edi,FWORD PTR [eax-0x52750fd5]
  41fa78:	mov    ah,0xfb
  41fa7a:	lods   eax,DWORD PTR ds:[esi]
  41fa7b:	push   ds
  41fa7c:	(bad)  
  41fa7d:	pop    esp
  41fa7e:	ficomp DWORD PTR [eax+ebp*4-0x29]
  41fa82:	iret   
  41fa83:	sub    BYTE PTR ds:0xee12284e,0x3
  41fa8a:	cmp    BYTE PTR [edi+0x4f],ah
  41fa8d:	inc    ecx
  41fa8e:	xchg   esi,eax
  41fa8f:	cwde   
  41fa90:	pusha  
  41fa91:	nop
  41fa92:	(bad)  
  41fa93:	fimul  WORD PTR [edi+0x3b738525]
  41fa99:	lods   eax,DWORD PTR ds:[esi]
  41fa9a:	adc    DWORD PTR [edx],ecx
  41fa9c:	retf   0x1e4a
  41fa9f:	(bad)  
  41faa0:	(bad)  
  41faa1:	or     ebx,ebp
  41faa3:	or     ecx,DWORD PTR [eax]
  41faa5:	nop
  41faa6:	and    BYTE PTR [ebp-0x371d670e],0xb9
  41faad:	fs out 0x84,al
  41fab0:	jb     0x41fafa
  41fab2:	test   bl,al
  41fab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab5:	arpl   WORD PTR [ebx-0x23f508c5],bp
  41fabb:	inc    ecx
  41fabc:	popa   
  41fabd:	mov    ch,BYTE PTR [ebx+0x71e95463]
  41fac3:	push   es
  41fac4:	(bad)  
  41fac5:	stc    
  41fac6:	mov    BYTE PTR [ebx],bl
  41fac8:	adc    BYTE PTR [ebp+0x78514337],bh
  41face:	cmp    DWORD PTR [eax],0xff825e30
  41fad4:	push   ds
  41fad5:	xchg   ebx,eax
  41fad6:	xchg   ecx,eax
  41fad7:	shl    BYTE PTR [ebx-0x57],0x5a
  41fadb:	sbb    ecx,ebx
  41fadd:	mov    esp,0xabc15cce
  41fae2:	cmp    eax,0x2bdf7426
  41fae7:	je     0x41faf8
  41fae9:	or     eax,0xdb72256b
  41faee:	nop
  41faef:	jno    0x41fb27
  41faf1:	(bad)  
  41faf2:	fmul   st(6),st
  41faf4:	mov    ch,0x87
  41faf6:	call   0x6eb5:0xff695fe6
  41fafd:	pop    ss
  41fafe:	and    eax,0xb4244281
  41fb03:	das    
  41fb04:	pop    edx
  41fb05:	dec    BYTE PTR [edx+esi*1-0xb]
  41fb09:	enter  0xe8f6,0x35
  41fb0d:	outs   dx,DWORD PTR ds:[esi]
  41fb0e:	cmc    
  41fb0f:	std    
  41fb10:	cmc    
  41fb11:	jecxz  0x41fab6
  41fb13:	push   edi
  41fb14:	xor    dl,BYTE PTR [esi]
  41fb16:	sub    cl,dl
  41fb18:	cmp    bl,0xdd
  41fb1b:	add    esi,edi
  41fb1d:	test   BYTE PTR ds:0x2bb68e47,bh
  41fb23:	adc    dl,ah
  41fb25:	sahf   
  41fb26:	lods   eax,DWORD PTR ds:[esi]
  41fb27:	into   
  41fb28:	test   BYTE PTR [edi],dh
  41fb2a:	out    dx,eax
  41fb2b:	popf   
  41fb2c:	daa    
  41fb2d:	and    ecx,DWORD PTR [edi-0x16]
  41fb30:	(bad)  [ebp+0x2a]
  41fb33:	adc    ah,BYTE PTR [ebp+ebp*2+0x14]
  41fb37:	and    DWORD PTR [edx-0x2e],edx
  41fb3a:	mov    BYTE PTR [ebx+0x75],ch
  41fb3d:	sti    
  41fb3e:	into   
  41fb3f:	jns    0x41fb0a
  41fb41:	pop    ebp
  41fb42:	jnp    0x41fb6f
  41fb44:	neg    esp
  41fb46:	(bad)  
  41fb47:	ret    0x8ddd
  41fb4a:	dec    eax
  41fb4b:	(bad)  
  41fb4c:	mov    cl,0x41
  41fb4e:	lods   al,BYTE PTR ds:[esi]
  41fb4f:	in     al,0x83
  41fb51:	sbb    eax,0x931092ea
  41fb56:	xor    ebx,esp
  41fb58:	add    DWORD PTR [ecx+0x5b],0x20881116
  41fb5f:	push   ss
  41fb60:	push   ecx
  41fb61:	add    cl,BYTE PTR [ebp-0x454ea121]
  41fb67:	sub    bh,BYTE PTR [ebp-0x18]
  41fb6a:	std    
  41fb6b:	adc    al,BYTE PTR [edx+0x1a7f5f30]
  41fb71:	inc    ebp
  41fb72:	shr    edx,0x36
  41fb75:	xor    eax,DWORD PTR [esi-0x29]
  41fb78:	add    al,0xf8
  41fb7a:	into   
  41fb7b:	mov    dh,0xa7
  41fb7d:	sub    esp,DWORD PTR [edi]
  41fb7f:	shr    DWORD PTR [eax+0x1105c60c],1
  41fb85:	pop    ss
  41fb86:	jle    0x41fb92
  41fb88:	mov    DWORD PTR [eax+eax*1+0x27],esi
  41fb8c:	je     0x41fb72
  41fb8e:	or     al,0x92
  41fb90:	repnz clc 
  41fb92:	or     ebp,DWORD PTR [eax+edi*4]
  41fb95:	fcomip st,st(4)
  41fb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb98:	popa   
  41fb99:	mov    ds:0xd3f3eb2f,eax
  41fb9e:	mov    ecx,0xabc4d38f
  41fba3:	int    0x32
  41fba5:	(bad)  
  41fba6:	pop    esp
  41fba7:	ds pop ebx
  41fba9:	pop    esp
  41fbaa:	jo     0x41fbf5
  41fbac:	cli    
  41fbad:	jl     0x41fbbf
  41fbaf:	push   0x28051d3d
  41fbb4:	pop    ebx
  41fbb5:	mov    edx,esp
  41fbb7:	and    al,0x4c
  41fbb9:	pushf  
  41fbba:	xor    eax,0x7e9787e9
  41fbbf:	sti    
  41fbc0:	addr16 sbb edi,0x90f5a808
  41fbc7:	rcl    DWORD PTR [eax+0x467e8d4a],0xbe
  41fbce:	mov    esp,DWORD PTR [ebx-0x395832f0]
  41fbd4:	pop    es
  41fbd5:	pop    ds
  41fbd6:	add    al,0xf5
  41fbd8:	jae    0x41fc3e
  41fbda:	inc    ebp
  41fbdb:	and    DWORD PTR [edi],esp
  41fbdd:	and    eax,0x8e4b6893
  41fbe2:	adc    al,0xc3
  41fbe4:	sub    BYTE PTR [edi],bh
  41fbe6:	pop    edx
  41fbe7:	and    al,0x68
  41fbe9:	in     eax,0xd8
  41fbeb:	sbb    al,0x26
  41fbed:	mov    edx,0xf0627d87
  41fbf2:	mov    WORD PTR [edx+0x1ad06d38],?
  41fbf8:	mov    esp,0xc7098c49
  41fbfd:	cmp    ch,BYTE PTR [edi+0x7e1a2b3e]
  41fc03:	shl    DWORD PTR [ebx+eiz*4+0x7f],1
  41fc07:	dec    edi
  41fc08:	sahf   
  41fc09:	cmp    BYTE PTR [esi+0x4f6ad5f1],0x10
  41fc10:	(bad)  
  41fc11:	je     0x41fc3b
  41fc13:	mov    ebp,0x483b4a4b
  41fc18:	bound  edx,QWORD PTR [edi-0x62ae4cbe]
  41fc1e:	fwait
  41fc1f:	in     al,dx
  41fc20:	ja     0x41fbcb
  41fc22:	pusha  
  41fc23:	mov    eax,ds
  41fc25:	jmp    DWORD PTR [eax+0x1a]
  41fc28:	repnz and DWORD PTR [ecx-0x23c96d0],esi
  41fc2f:	enter  0x1493,0x77
  41fc33:	push   ds
  41fc34:	ret    
  41fc35:	mov    ecx,0xf19de1a1
  41fc3a:	mov    dh,0xbc
  41fc3c:	inc    ebp
  41fc3d:	lock ins BYTE PTR es:[edi],dx
  41fc3f:	mov    ds:0x6331b370,al
  41fc44:	in     al,dx
  41fc45:	adc    DWORD PTR [edi-0x2a0e68df],esp
  41fc4b:	dec    edi
  41fc4c:	cld    
  41fc4d:	(bad)  
  41fc4f:	add    dh,al
  41fc51:	sbb    ecx,esp
  41fc53:	aaa    
  41fc54:	in     al,dx
  41fc55:	push   ebp
  41fc56:	sti    
  41fc57:	jae    0x41fcd5
  41fc59:	adc    edx,ebx
  41fc5b:	neg    BYTE PTR [ecx-0x351b2d84]
  41fc61:	add    DWORD PTR [ecx+edi*8],esi
  41fc64:	hlt    
  41fc65:	sbb    al,BYTE PTR ds:0x8094fc98
  41fc6b:	xor    ebx,DWORD PTR [ebp-0x4e09353e]
  41fc71:	dec    esp
  41fc72:	test   eax,eax
  41fc74:	inc    esi
  41fc75:	and    ebp,DWORD PTR [eax]
  41fc77:	sub    al,0x6b
  41fc79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc7a:	jne    0x41fc6a
  41fc7c:	or     al,0x9f
  41fc7e:	test   esi,ecx
  41fc80:	add    dh,dh
  41fc82:	loop   0x41fcf5
  41fc84:	lahf   
  41fc85:	cwde   
  41fc86:	jo     0x41fcc7
  41fc88:	xchg   edx,eax
  41fc89:	mov    ds:0x82f1e88d,eax
  41fc8e:	sub    al,0xf8
  41fc90:	mov    bh,0x7e
  41fc92:	cmp    eax,0x75370029
  41fc97:	push   cs
  41fc98:	push   esi
  41fc99:	fs clc 
  41fc9b:	nop
  41fc9c:	fstp   TBYTE PTR [esi+0x3ef36cd8]
  41fca2:	jge    0x41fc52
  41fca4:	es dec esp
  41fca6:	fdivr  QWORD PTR [ecx+0x7c]
  41fca9:	cmp    esp,DWORD PTR ds:0x54a183de
  41fcaf:	dec    eax
  41fcb0:	imul   esi,DWORD PTR [edi],0xbdfb41da
  41fcb6:	xlat   BYTE PTR ds:[ebx]
  41fcb7:	and    DWORD PTR [edi*1-0x51fddaa6],ebx
  41fcbe:	enter  0x7667,0xde
  41fcc2:	jae    0x41fd3f
  41fcc4:	jmp    0x41fd26
  41fcc6:	scas   al,BYTE PTR es:[edi]
  41fcc7:	xchg   ebp,eax
  41fcc8:	or     cl,BYTE PTR [esi]
  41fcca:	lods   al,BYTE PTR ds:[esi]
  41fccb:	loop   0x41fc7d
  41fccd:	out    dx,eax
  41fcce:	rol    BYTE PTR [eax+0x5798f176],1
  41fcd4:	ins    BYTE PTR es:[edi],dx
  41fcd5:	addr16 push esi
  41fcd7:	jb     0x41fd50
  41fcd9:	hlt    
  41fcda:	rol    DWORD PTR [ebp+edx*1-0x12],1
  41fcde:	test   DWORD PTR [edx-0x193c26c2],0xa4833f95
  41fce8:	neg    DWORD PTR ds:0x23454ea1
  41fcee:	stos   DWORD PTR es:[edi],eax
  41fcef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcf0:	push   ss
  41fcf1:	mov    al,0xe0
  41fcf3:	jmp    0x758c:0xdec41acf
  41fcfa:	pop    esi
  41fcfb:	add    esi,ebx
  41fcfd:	or     BYTE PTR [ecx-0x36],cl
  41fd00:	fmul   QWORD PTR [eax-0x1c]
  41fd03:	(bad)  
  41fd04:	fldcw  WORD PTR [ebx]
  41fd06:	data16 mov ds:0xc91db7f2,al
  41fd0c:	mov    ?,WORD PTR [ebx]
  41fd0e:	(bad)  
  41fd0f:	retf   0xf4f0
  41fd12:	jnp    0x41fced
  41fd14:	lahf   
  41fd15:	mov    dl,0x15
  41fd17:	ds xor al,0x3b
  41fd1a:	inc    esp
  41fd1b:	xlat   BYTE PTR ds:[ebx]
  41fd1c:	aaa    
  41fd1d:	rcl    edi,cl
  41fd1f:	adc    eax,0xd869a8d6
  41fd24:	mov    dl,0xcc
  41fd26:	out    dx,eax
  41fd27:	test   ch,cl
  41fd29:	cmp    cl,BYTE PTR [ebp-0x7f]
  41fd2c:	inc    esp
  41fd2d:	iret   
  41fd2e:	sub    esi,esp
  41fd30:	test   DWORD PTR [eax],ecx
  41fd32:	out    dx,eax
  41fd33:	dec    ebp
  41fd34:	cdq    
  41fd35:	push   0x8dd9b5a
  41fd3a:	ins    DWORD PTR es:[edi],dx
  41fd3b:	popa   
  41fd3c:	or     ebx,edx
  41fd3e:	fdivr  QWORD PTR [edi+0x7350d55c]
  41fd44:	sbb    ebp,esp
  41fd46:	mov    ch,0x37
  41fd48:	xor    DWORD PTR [esp+edi*2],ebp
  41fd4b:	mov    dl,0x77
  41fd4d:	cmp    al,0xc
  41fd4f:	imul   edx,ebp,0x4a002199
  41fd55:	out    0xc1,al
  41fd57:	inc    ecx
  41fd58:	out    dx,eax
  41fd59:	cmp    bh,BYTE PTR [ebx+edx*8+0x5795e146]
  41fd60:	enter  0x6307,0x92
  41fd64:	je     0x41fd61
  41fd66:	shl    ebx,0x8e
  41fd69:	sbb    dh,BYTE PTR [ecx-0x7f]
  41fd6c:	test   BYTE PTR [ebx-0x777915c9],dh
  41fd72:	sti    
  41fd73:	and    cl,BYTE PTR [ebp+eax*1-0x6a609786]
  41fd7a:	das    
  41fd7b:	sbb    cl,dl
  41fd7d:	inc    edi
  41fd7e:	je     0x41fd05
  41fd80:	repnz cmp dh,BYTE PTR [ebp+0x11afa3aa]
  41fd87:	dec    eax
  41fd88:	fs ss loop 0x41fdab
  41fd8c:	mov    dl,0x91
  41fd8e:	popf   
  41fd8f:	pop    edx
  41fd90:	adc    DWORD PTR [edx],esp
  41fd92:	stc    
  41fd93:	xchg   esi,eax
  41fd94:	cmp    edi,DWORD PTR [esp+edi*2-0x3e16853e]
  41fd9b:	(bad)  
  41fd9c:	jnp    0x41fdfb
  41fd9e:	pop    ss
  41fd9f:	mov    dh,0xb4
  41fda1:	cmc    
  41fda2:	cld    
  41fda3:	ror    BYTE PTR [edi+ebp*8-0x3ec3b1b5],0xfa
  41fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdac:	test   dh,0x4d
  41fdaf:	test   al,0xd2
  41fdb1:	add    ah,bh
  41fdb3:	jmp    0x6538d560
  41fdb8:	jp     0x41fe29
  41fdba:	arpl   WORD PTR [ebx+0xeb869e7],bp
  41fdc0:	out    dx,eax
  41fdc1:	jl     0x41fe1d
  41fdc3:	shr    eax,0x19
  41fdc6:	jp     0x41fe1d
  41fdc8:	adc    edx,DWORD PTR ds:[esi+0x7a]
  41fdcc:	push   esp
  41fdcd:	push   es
  41fdce:	inc    ebx
  41fdcf:	mov    ch,0x84
  41fdd1:	jp     0x41fd57
  41fdd3:	mov    DWORD PTR [esi+0x1d],esp
  41fdd6:	cmp    eax,DWORD PTR [edx]
  41fdd8:	adc    BYTE PTR [ecx],dh
  41fdda:	mov    bh,0x40
  41fddc:	cdq    
  41fddd:	xchg   edx,eax
  41fdde:	addr16 (bad) 
  41fde0:	mov    ebx,0x416be948
  41fde5:	push   0x82cffb2f
  41fdea:	cmp    DWORD PTR [eax],ebp
  41fdec:	aad    0x78
  41fdee:	retf   
  41fdef:	sbb    ah,BYTE PTR [eax+ecx*2-0x26]
  41fdf3:	sbb    ah,BYTE PTR [esi+0x799c3431]
  41fdf9:	in     eax,dx
  41fdfa:	push   ss
  41fdfb:	cdq    
  41fdfc:	pop    ecx
  41fdfd:	pop    es
  41fdfe:	and    ch,bh
  41fe00:	pop    eax
  41fe01:	adc    esi,DWORD PTR [eax+0x33]
  41fe04:	(bad)  
  41fe05:	sub    al,0x17
  41fe07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe08:	fwait
  41fe09:	(bad)  
  41fe0a:	lods   al,BYTE PTR ds:[esi]
  41fe0b:	pop    edx
  41fe0c:	cmp    BYTE PTR [edx],cl
  41fe0e:	lods   al,BYTE PTR ds:[esi]
  41fe0f:	out    0xa1,eax
  41fe11:	in     al,dx
  41fe12:	(bad)  
  41fe13:	lock pop esi
  41fe15:	sbb    al,0x2d
  41fe17:	sti    
  41fe18:	push   ds
  41fe19:	test   DWORD PTR [eax*4+0x6efac24f],0x65ef19f9
  41fe24:	adc    BYTE PTR [eax-0x2b],0xc
  41fe28:	dec    esi
  41fe29:	icebp  
  41fe2a:	mov    ds:0xcfdd4d1,al
  41fe2f:	js     0x41fe6f
  41fe31:	arpl   WORD PTR [ebx-0x1a],di
  41fe34:	jnp    0x41fdde
  41fe36:	sub    edx,eax
  41fe38:	aam    0xaa
  41fe3a:	jge    0x41fdf4
  41fe3c:	and    edx,DWORD PTR [ebx-0x5adbe7c4]
  41fe42:	addr16 mov edx,0x3c1df924
  41fe48:	dec    ebp
  41fe49:	push   eax
  41fe4a:	lods   al,BYTE PTR ds:[esi]
  41fe4b:	mov    cl,0x2
  41fe4d:	push   0xffffffd7
  41fe4f:	jmp    0x41fe7d
  41fe51:	mov    esp,0x20d30df6
  41fe56:	xor    DWORD PTR [ebp+0x59],esi
  41fe59:	jmp    0xa86c:0x9b72088f
  41fe60:	or     al,0xbf
  41fe62:	jg     0x41fe5b
  41fe64:	js     0x41fe6a
  41fe66:	mov    edi,0x8b77d9bd
  41fe6b:	ja     0x41fedc
  41fe6d:	pop    DWORD PTR [ecx-0x6e0ad11]
  41fe73:	xor    BYTE PTR ds:[edx],bl
  41fe76:	inc    ebx
  41fe77:	or     DWORD PTR [ebx+0x77808acd],ebp
  41fe7d:	xor    cl,ah
  41fe7f:	cmp    DWORD PTR [edx-0x7d385078],edi
  41fe85:	fadd   QWORD PTR [edi]
  41fe88:	mov    WORD PTR [ebx+0x38],?
  41fe8b:	jno    0x41fe60
  41fe8d:	push   edx
  41fe8e:	jo     0x41fe2f
  41fe90:	loopne 0x41fe5d
  41fe92:	push   es
  41fe93:	push   cs
  41fe94:	test   al,0x8
  41fe96:	std    
  41fe97:	stos   BYTE PTR es:[edi],al
  41fe98:	xor    al,0x4f
  41fe9a:	xchg   al,ch
  41fe9c:	xchg   BYTE PTR [esi-0x4f],ah
  41fe9f:	es loopne 0x41fe56
  41fea2:	mov    eax,ds:0x9953419c
  41fea7:	mov    DWORD PTR [ebx+ebp*1],ebx
  41feaa:	out    0xa2,eax
  41feac:	inc    ecx
  41fead:	jo     0x41fe90
  41feaf:	adc    dl,BYTE PTR [ecx+0x4f]
  41feb2:	dec    ebp
  41feb3:	enter  0x1844,0x34
  41feb7:	jge    0x41fe8f
  41feb9:	add    bh,0x44
  41febc:	dec    ebp
  41febd:	loop   0x41fe88
  41febf:	mov    ecx,0x26c9011
  41fec4:	push   esi
  41fec5:	out    0xd0,eax
  41fec7:	iret   
  41fec8:	inc    esi
  41fec9:	xor    eax,0xac0f5872
  41fece:	sub    DWORD PTR [eax+0x7df1b75e],eax
  41fed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fed5:	lods   eax,DWORD PTR ds:[esi]
  41fed6:	gs sub esi,0xffffffc2
  41feda:	dec    esp
  41fedb:	push   ecx
  41fedc:	jno    0x41ff3b
  41fede:	sub    BYTE PTR [ebx-0x599f461],0x74
  41fee5:	ds scas eax,DWORD PTR es:[edi]
  41fee7:	pusha  
  41fee8:	lods   al,BYTE PTR ds:[esi]
  41fee9:	add    edi,edx
  41feeb:	pop    edx
  41feec:	sbb    eax,0xebce3add
  41fef1:	xchg   ecx,eax
  41fef2:	pusha  
  41fef3:	mov    DWORD PTR [ecx+0x69],eax
  41fef6:	(bad)  
  41fef7:	popf   
  41fef8:	cmp    DWORD PTR [eax],ebx
  41fefa:	sbb    eax,0xc025d2ba
  41feff:	sbb    DWORD PTR [ebx+0x317a9e9a],ebx
  41ff05:	inc    eax
  41ff06:	fsub   st(1),st
  41ff08:	add    esp,ebp
  41ff0a:	xchg   ebp,eax
  41ff0b:	sar    BYTE PTR [edi-0x47adc191],0xcf
  41ff12:	inc    edx
  41ff13:	in     al,0xc8
  41ff15:	jae    0x41ff45
  41ff17:	mov    bl,0xa8
  41ff19:	inc    ebx
  41ff1a:	rep lods eax,DWORD PTR ds:[esi]
  41ff1c:	out    0x37,al
  41ff1e:	sub    edx,DWORD PTR [eax-0x18]
  41ff21:	xor    DWORD PTR [ebx],esp
  41ff23:	dec    ebx
  41ff24:	fild   DWORD PTR [ecx+ecx*4-0x19]
  41ff28:	stos   DWORD PTR es:[edi],eax
  41ff29:	out    dx,al
  41ff2a:	mov    ebp,esp
  41ff2c:	xor    BYTE PTR [ebx],cl
  41ff2e:	push   eax
  41ff2f:	pop    ebp
  41ff30:	ficomp WORD PTR [edx]
  41ff32:	mov    bh,0x84
  41ff34:	mov    bl,0x4
  41ff36:	inc    esp
  41ff37:	cwde   
  41ff38:	(bad)  
  41ff39:	retf   0xed89
  41ff3c:	jmp    0x64cd:0xed9318f6
  41ff43:	sub    DWORD PTR [edi+eiz*2-0x5f908eb1],ecx
  41ff4a:	jge    0x41ff9d
  41ff4c:	sbb    eax,ecx
  41ff4e:	(bad)  
  41ff4f:	sar    DWORD PTR [edx+0x69],cl
  41ff52:	shl    BYTE PTR [edx+0x6de26fe1],cl
  41ff58:	dec    edx
  41ff59:	fisttp DWORD PTR [edx-0x6c]
  41ff5c:	adc    dh,cl
  41ff5e:	repz and BYTE PTR [edx-0x4f7f6aa],0x8e
  41ff66:	inc    eax
  41ff67:	cs and al,0x22
  41ff6a:	repz sar BYTE PTR [esi+ebx*8-0x35a46d44],cl
  41ff72:	(bad)  
  41ff73:	les    esp,FWORD PTR [ebx]
  41ff75:	cmp    edi,edx
  41ff77:	sub    al,0xb9
  41ff79:	cmp    DWORD PTR [ecx],0xffffffed
  41ff7c:	int    0x2f
  41ff7e:	or     ch,BYTE PTR [ecx-0x63]
  41ff81:	iret   
  41ff82:	inc    ecx
  41ff83:	xor    DWORD PTR [ecx],edx
  41ff85:	(bad)
  41ff89:	dec    ebx
  41ff8b:	add    bl,BYTE PTR [edx-0x56ea2734]
  41ff91:	cli    
  41ff92:	push   ss
  41ff93:	sbb    BYTE PTR [ebp+0xe16ee39],al
  41ff99:	iret   
  41ff9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff9b:	cli    
  41ff9c:	add    dh,0x97
  41ff9f:	inc    ebx
  41ffa0:	push   es
  41ffa1:	jl     0x41ff76
  41ffa3:	xchg   ebx,eax
  41ffa4:	mov    ch,BYTE PTR [ebp+0xb80f19b]
  41ffaa:	(bad)  
  41ffab:	fadd   DWORD PTR ds:0x68a69c60
  41ffb1:	and    ebp,DWORD PTR [edx]
  41ffb3:	cli    
  41ffb4:	sar    edx,0x30
  41ffb7:	stc    
  41ffb8:	sar    DWORD PTR [edi],0x9f
  41ffbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffbc:	mov    fs,WORD PTR [ecx+0x77ae063c]
  41ffc2:	mov    esi,0x39c7879b
  41ffc7:	push   0xffffffa0
  41ffc9:	aas    
  41ffca:	ds ret 0xafe9
  41ffce:	push   esp
  41ffcf:	les    esp,FWORD PTR [eax+0x11a16fb6]
  41ffd5:	pop    es
  41ffd6:	outs   dx,BYTE PTR ds:[esi]
  41ffd7:	inc    edi
  41ffd8:	pop    ebx
  41ffd9:	xlat   BYTE PTR ds:[ebx]
  41ffda:	test   eax,0x2c32fd0
  41ffdf:	pop    eax
  41ffe0:	es dec esi
  41ffe2:	fdivr  QWORD PTR [esi+ebx*4-0x4d]
  41ffe6:	int3   
  41ffe7:	sti    
  41ffe8:	mov    ch,0xa2
  41ffea:	pop    ebx
  41ffeb:	rcl    DWORD PTR [esi+0x3f37da23],0xed
  41fff2:	xor    ah,BYTE PTR ds:[ebx-0x39219886]
  41fff9:	xchg   edx,eax
  41fffa:	mov    ecx,DWORD PTR [ebp-0x18]
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0xbb5e3b0a
  420121:	clc    
  420122:	push   es
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x2dc3d1de],0x57
  42012f:	sbb    eax,0x519aa8da
  420134:	xor    BYTE PTR [edx],bl
  420136:	xor    eax,0x7c773daa
  42013b:	pop    edx
  42013c:	aam    0x2f
  42013e:	jnp    0x42010a
  420140:	vunpcklps xmm0,xmm6,XMMWORD PTR [ebp-0x59]
  420145:	cs popa 
  420147:	and    DWORD PTR [esi],ebx
  420149:	or     DWORD PTR [esi+0x7dd9b512],edi
  42014f:	pop    ss
  420150:	mov    al,ds:0x671e03b1
  420155:	adc    cl,bl
  420157:	and    eax,0xf344cebf
  42015c:	imul   ebp,DWORD PTR [ebx],0xf05fe1e
  420162:	adc    BYTE PTR [eax+0x16450e92],dl
  420168:	jmp    0x4201d6
  42016a:	sbb    eax,0xc0ff47d
  42016f:	daa    
  420170:	cmp    eax,0x4a41818c
  420175:	js     0x31d09348
  42017b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42017c:	adc    BYTE PTR [ebp+0x4afabc5d],al
  420182:	cmp    al,0xa
  420184:	mov    ecx,DWORD PTR [ebx]
  420186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420187:	rcr    BYTE PTR [eax-0x21be5c48],cl
  42018d:	rol    BYTE PTR [ecx-0x5],0x59
  420191:	pop    esi
  420192:	div    DWORD PTR [eax]
  420194:	dec    esp
  420195:	mov    ah,0x0
  420197:	addr16 mov dh,0x9b
  42019a:	out    dx,al
  42019b:	inc    edi
  42019c:	(bad)  
  42019d:	mov    bh,0x6f
  42019f:	mov    edx,?
  4201a1:	loope  0x420177
  4201a3:	shl    DWORD PTR [edx],cl
  4201a5:	add    ecx,ecx
  4201a7:	stc    
  4201a8:	xchg   DWORD PTR [esp+esi*4+0x41],esi
  4201ac:	and    dl,dh
  4201ae:	mov    BYTE PTR gs:[edx*1+0x593217e3],dh
  4201b6:	sub    BYTE PTR [esi+edi*1+0x56],0x1e
  4201bb:	ret    0xefb5
  4201be:	cmp    eax,0xe663f00f
  4201c3:	push   DWORD PTR [ecx+0x4c3b1f47]
  4201c9:	mov    ebp,0x6e3495bb
  4201ce:	fmul   QWORD PTR [edx+0x75656bc5]
  4201d4:	mov    cs,WORD PTR [ebx-0x1a]
  4201d7:	jno    0x4201bc
  4201d9:	inc    esp
  4201da:	(bad)  
  4201db:	push   eax
  4201dc:	call   0xcf67:0xfa02ed17
  4201e3:	arpl   WORD PTR [esi],dx
  4201e5:	or     BYTE PTR [ebp+ecx*4+0xb],0xa0
  4201ea:	loop   0x42021c
  4201ec:	push   esp
  4201ed:	push   cs
  4201ee:	je     0x42026b
  4201f0:	ds push ebx
  4201f2:	out    0xee,eax
  4201f4:	mov    esi,ebx
  4201f6:	loopne 0x4201aa
  4201f8:	(bad)  
  4201fa:	sbb    dl,dh
  4201fc:	push   es
  4201fd:	outs   dx,DWORD PTR ds:[esi]
  4201fe:	jb     0x420267
  420200:	shl    DWORD PTR [esi-0x69],0xbf
  420204:	les    ebx,FWORD PTR [ecx]
  420206:	add    al,0x1a
  420208:	jne    0x420195
  42020a:	inc    ecx
  42020b:	sub    esp,edi
  42020d:	shl    BYTE PTR [ebp+0x4e],0x8d
  420211:	mov    ss,WORD PTR [edi+0x33]
  420214:	(bad)  
  420217:	mov    edi,0x8c2a5768
  42021c:	pop    ebx
  42021d:	inc    edi
  42021e:	test   DWORD PTR [ecx*2-0x70478170],esp
  420225:	loope  0x42020f
  420227:	mov    ch,0xbe
  420229:	xchg   ebp,eax
  42022a:	and    dl,BYTE PTR [edi-0x554b59d7]
  420230:	cli    
  420231:	sbb    al,0x2d
  420233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420234:	test   al,0x49
  420236:	in     al,0xd5
  420238:	jns    0x42028b
  42023a:	loope  0x4201db
  42023c:	fwait
  42023d:	cmp    al,0x2c
  42023f:	js     0x420278
  420241:	fwait
  420242:	ja     0x420210
  420244:	sub    BYTE PTR [ebp+0x2b],dl
  420247:	dec    esp
  420248:	mov    esp,0x14a89572
  42024d:	sbb    eax,eax
  42024f:	pop    eax
  420250:	xlat   BYTE PTR fs:[ebx]
  420252:	push   ds
  420253:	and    dh,BYTE PTR [ebp+0x6]
  420256:	or     BYTE PTR [eax],dl
  420258:	fucomi st,st(5)
  42025a:	inc    eax
  42025b:	fimul  DWORD PTR [eax-0x90a6b67]
  420261:	push   ss
  420262:	xchg   edx,eax
  420263:	aas    
  420264:	adc    eax,DWORD PTR [edx-0x72ec9938]
  42026a:	aas    
  42026b:	cmc    
  42026c:	xchg   ecx,eax
  42026d:	xchg   BYTE PTR [ecx+0x21],dh
  420270:	dec    esi
  420271:	jmp    0x4201fd
  420273:	sub    eax,0x7255d20c
  420278:	imul   ebx,esp,0xffffffda
  42027b:	add    bl,dl
  42027d:	out    0x66,al
  42027f:	pop    ds
  420280:	push   edx
  420281:	stos   DWORD PTR es:[edi],eax
  420282:	push   esp
  420283:	(bad)  
  420284:	push   eax
  420285:	pop    eax
  420286:	dec    edi
  420287:	push   0xddf0a37
  42028c:	out    dx,eax
  42028d:	sub    al,0x60
  42028f:	xor    ch,BYTE PTR [edi]
  420291:	out    0x86,eax
  420293:	je     0x4202e6
  420295:	fmul   QWORD PTR ds:0xdd920e33
  42029b:	scas   eax,DWORD PTR es:[edi]
  42029c:	mov    esp,0x7b5446f0
  4202a1:	inc    edi
  4202a2:	push   esp
  4202a3:	dec    esi
  4202a4:	mov    eax,ecx
  4202a6:	(bad)
  4202a9:	or     ch,BYTE PTR ds:0xb651f8b9
  4202af:	(bad)  
  4202b0:	ret    0xd01c
  4202b3:	or     al,0x99
  4202b5:	call   0xc7558892
  4202ba:	inc    esi
  4202bb:	and    bh,dl
  4202bd:	jp     0x4202cf
  4202bf:	fcmovnb st,st(0)
  4202c1:	sbb    al,0xb9
  4202c3:	test   eax,0x5c2495d5
  4202c8:	adc    dl,BYTE PTR [ebx-0x2f]
  4202cb:	cmp    ecx,DWORD PTR ss:[ecx-0xf]
  4202cf:	dec    ecx
  4202d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d1:	sbb    eax,0x5fa5fb61
  4202d6:	clc    
  4202d7:	test   esp,0xdb19484a
  4202dd:	mov    ebx,DWORD PTR [esi-0x6d765c8f]
  4202e3:	jbe    0x42026d
  4202e5:	pop    edx
  4202e6:	mov    ds:0x7fa35177,eax
  4202eb:	fdiv   DWORD PTR [esi]
  4202ed:	push   esp
  4202ee:	gs mov eax,0x5c612e23
  4202f4:	pop    ecx
  4202f5:	push   ecx
  4202f6:	lods   eax,DWORD PTR ds:[esi]
  4202f7:	sub    BYTE PTR [eax],al
  4202f9:	or     BYTE PTR [eax+0x1],ch
  4202fc:	repnz int 0x32
  4202ff:	out    0x35,eax
  420301:	cmp    al,0x3b
  420303:	aas    
  420304:	(bad)  
  420305:	aad    0xe9
  420307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420308:	stc    
  420309:	add    al,dh
  42030b:	and    al,0x57
  42030d:	pop    edi
  42030e:	sbb    DWORD PTR [edi],0x54
  420311:	das    
  420312:	mul    BYTE PTR [edx+0xceeec5b]
  420318:	xchg   ebx,eax
  420319:	clc    
  42031a:	jo     0x420376
  42031c:	jo     0x420312
  42031e:	adc    BYTE PTR [ebx-0x72],cl
  420321:	ins    DWORD PTR es:[edi],dx
  420322:	and    eax,0x6875e36d
  420327:	mov    dl,0xa1
  420329:	fcomi  st,st(2)
  42032b:	in     al,0x34
  42032d:	shl    BYTE PTR [edx+0xdf3264a],cl
  420333:	dec    esi
  420334:	jnp    0x4202b7
  420336:	jne    0x42034d
  420338:	and    ebp,edi
  42033a:	imul   edx,DWORD PTR [ebp+ebx*1-0x2798dd56],0xf8da9e17
  420345:	cs leave 
  420347:	push   ebx
  420348:	jl     0x4202ff
  42034a:	inc    ebp
  42034b:	sub    BYTE PTR [edi-0x12],dh
  42034e:	dec    ebp
  42034f:	push   es
  420350:	add    ch,BYTE PTR [ebp-0x361aad2c]
  420356:	mov    al,ds:0xe6464c3f
  42035b:	into   
  42035c:	ins    BYTE PTR es:[edi],dx
  42035d:	sbb    ebx,DWORD PTR [edi-0x112e8025]
  420363:	call   0x2a0d702f
  420368:	mov    esi,0xdfeebde6
  42036d:	cs enter 0xba5c,0x37
  420372:	jnp    0x420365
  420374:	push   es
  420375:	pop    ebx
  420376:	lds    esp,FWORD PTR [eax+0x40]
  420379:	cmp    BYTE PTR [edi-0x7e],bh
  42037c:	add    dh,BYTE PTR [eax-0x74]
  42037f:	dec    esi
  420380:	pusha  
  420381:	into   
  420382:	push   es
  420383:	shl    DWORD PTR [edx-0x5733058a],1
  420389:	cmovle edx,DWORD PTR [ebx-0x42fb9727]
  420390:	fcomp  QWORD PTR [ebp+ecx*2+0x47d2c955]
  420397:	dec    esp
  420398:	add    edi,edi
  42039a:	and    ecx,DWORD PTR [ecx-0x3d1ff36c]
  4203a0:	pop    esi
  4203a1:	cli    
  4203a2:	int3   
  4203a3:	jge    0x4203b3
  4203a5:	call   0x317c:0x2bb747b1
  4203ac:	push   ss
  4203ad:	leave  
  4203ae:	test   DWORD PTR [ebp+esi*1-0x345a1793],esp
  4203b5:	adc    edx,edx
  4203b7:	not    BYTE PTR [ecx]
  4203b9:	sub    edi,DWORD PTR [eax-0x11c860b6]
  4203bf:	or     DWORD PTR [esi],ebx
  4203c1:	pop    esi
  4203c2:	xor    DWORD PTR [edi+0x7784dc3],0x45
  4203c9:	push   eax
  4203ca:	(bad)  
  4203cb:	in     eax,dx
  4203cc:	daa    
  4203cd:	ret    0x8adc
  4203d0:	cwde   
  4203d1:	je     0x4203ae
  4203d3:	inc    edx
  4203d4:	aaa    
  4203d5:	sbb    BYTE PTR [edx-0x78023674],dl
  4203db:	ret    
  4203dc:	icebp  
  4203dd:	arpl   si,bx
  4203df:	or     BYTE PTR [ecx+0x7c],al
  4203e2:	sbb    DWORD PTR ds:0x937a0e11,ecx
  4203e8:	dec    esp
  4203e9:	aas    
  4203ea:	xor    eax,0x5b603e06
  4203ef:	xchg   esi,eax
  4203f0:	dec    eax
  4203f1:	dec    esp
  4203f2:	fnstcw WORD PTR [edi]
  4203f4:	lods   al,BYTE PTR ds:[esi]
  4203f5:	adc    BYTE PTR [eax],al
  4203f7:	test   al,0xef
  4203f9:	sbb    DWORD PTR [edi-0x2a],esp
  4203fc:	push   ebp
  4203fd:	adc    ebx,DWORD PTR [edi+eiz*1]
  420400:	cli    
  420401:	(bad)  
  420402:	xor    al,0x49
  420404:	loopne 0x4203ea
  420406:	jno    0x4203fe
  420408:	mov    ebx,0x3eb48d63
  42040d:	adc    ecx,ebx
  42040f:	or     ecx,ebx
  420411:	sbb    al,0x95
  420413:	ror    BYTE PTR [ecx-0x189d57d4],0x66
  42041a:	js     0x4203fe
  42041c:	add    esp,eax
  42041e:	nop
  42041f:	xor    DWORD PTR [ecx-0x21ac431a],esi
  420425:	sub    BYTE PTR [ebx+0x3ad86d24],bh
  42042b:	dec    edi
  42042c:	std    
  42042d:	data16 lods al,BYTE PTR ds:[esi]
  42042f:	cmp    esp,DWORD PTR [edi+0x22]
  420432:	or     si,WORD PTR [ecx-0x6e686182]
  420439:	cmc    
  42043a:	and    eax,DWORD PTR gs:[ecx+0x12851ebd]
  420441:	js     0x4204b7
  420443:	int    0xf8
  420445:	cs (bad) 
  420448:	jl     0x4204b6
  42044a:	pop    edx
  42044b:	jnp    0x420436
  42044d:	and    eax,0xc7331fb4
  420452:	sbb    al,BYTE PTR [ebx]
  420454:	lods   eax,DWORD PTR ds:[esi]
  420455:	js     0x42047d
  420457:	push   esp
  420458:	in     al,dx
  420459:	in     al,dx
  42045a:	cdq    
  42045b:	push   esi
  42045c:	retf   0xedfc
  42045f:	jnp    0x420461
  420461:	pop    ecx
  420462:	dec    esi
  420463:	pop    DWORD PTR [edx-0x19c88e98]
  420469:	dec    edi
  42046a:	sub    ecx,DWORD PTR [eax]
  42046c:	jp     0x420405
  42046e:	xchg   ebp,esi
  420470:	popf   
  420471:	outs   dx,DWORD PTR ds:[esi]
  420472:	sub    eax,DWORD PTR [ecx+0x1]
  420475:	dec    esi
  420476:	rol    DWORD PTR [eax+ebx*2-0x3e5f2251],0xd
  42047e:	mov    eax,ds:0x73394955
  420483:	sub    BYTE PTR [ebx+ecx*4-0x5da76db9],dh
  42048a:	inc    edx
  42048b:	mov    edi,0xc2e90f08
  420490:	lahf   
  420491:	out    0xbc,eax
  420493:	push   0x93eff2fb
  420498:	xor    ah,0xab
  42049b:	pop    esi
  42049c:	je     0x420422
  42049e:	outs   dx,DWORD PTR ds:[esi]
  42049f:	push   esp
  4204a0:	out    dx,eax
  4204a1:	pop    esp
  4204a2:	mov    esi,0xa9d6542a
  4204a7:	jg     0x420491
  4204a9:	gs push es
  4204ab:	rol    eax,1
  4204ad:	ja     0x4204d2
  4204af:	hlt    
  4204b0:	out    0xc5,al
  4204b2:	pop    esp
  4204b3:	mov    DWORD PTR gs:[esi+0x62da6abe],ebx
  4204ba:	gs fcmovnb st,st(2)
  4204bd:	inc    esp
  4204be:	push   edi
  4204bf:	and    eax,esp
  4204c1:	jae    0x420470
  4204c3:	and    BYTE PTR [edi],cl
  4204c5:	arpl   cx,sp
  4204c7:	(bad)  
  4204c8:	aas    
  4204c9:	xchg   esi,eax
  4204ca:	repnz mov ah,0xe6
  4204cd:	(bad)  
  4204ce:	(bad)  
  4204cf:	pop    ecx
  4204d0:	mov    edi,0x6cc75d20
  4204d5:	or     BYTE PTR [edi+0xa],0x91
  4204d9:	inc    edi
  4204da:	jnp    0x42049b
  4204dc:	push   ds
  4204dd:	pop    edi
  4204de:	fmul   DWORD PTR [ebp+0xe]
  4204e1:	bound  ebp,QWORD PTR [edi+ebx*1+0x7a]
  4204e5:	xchg   ecx,eax
  4204e6:	add    BYTE PTR ds:0x16cdf11a,dl
  4204ec:	nop
  4204ed:	dec    eax
  4204ee:	imul   ebx,DWORD PTR [edx],0x3df174fd
  4204f4:	loope  0x4204a3
  4204f6:	jecxz  0x4204c9
  4204f8:	inc    ebp
  4204f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204fa:	cmp    ch,BYTE PTR [esi+0x39]
  4204fd:	outs   dx,DWORD PTR ds:[esi]
  4204fe:	stc    
  4204ff:	aam    0x97
  420501:	push   es
  420502:	xor    DWORD PTR [ecx+edx*2+0x30457933],ebx
  420509:	xor    ecx,ecx
  42050b:	shl    bh,1
  42050d:	adc    eax,0x36e58d29
  420512:	mov    ebx,0x2836be96
  420517:	test   al,0x68
  420519:	or     ebx,edx
  42051b:	sar    DWORD PTR [eax],1
  42051d:	inc    edi
  42051e:	test   al,0x7c
  420520:	aaa    
  420521:	cdq    
  420522:	mov    eax,0xb0049951
  420527:	jbe    0x420590
  420529:	and    bl,BYTE PTR ss:[eax+edi*1]
  42052d:	popa   
  42052e:	mov    ebx,0xb6caacd9
  420533:	mov    al,ds:0xacd1ad38
  420538:	inc    ecx
  420539:	mov    edi,DWORD PTR ds:0xb0abc029
  42053f:	push   ecx
  420540:	jg     0x420512
  420542:	mov    ah,0x8d
  420544:	test   BYTE PTR [ecx+0x7c],ah
  420547:	add    al,0x53
  420549:	jno    0x420559
  42054b:	or     dl,dh
  42054d:	iret   
  42054e:	mov    BYTE PTR [ebx],ah
  420550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420551:	mov    fs,esp
  420553:	push   cs
  420554:	and    eax,0x1ff380ad
  420559:	sbb    eax,0x6f03a078
  42055e:	pop    edi
  42055f:	sub    eax,0xca913656
  420564:	test   BYTE PTR [ebx+0x66],ch
  420567:	mov    ecx,0x4075bf76
  42056c:	xor    esp,DWORD PTR [ebx]
  42056e:	in     eax,0x65
  420570:	push   ecx
  420571:	cmp    al,0x4
  420573:	loopne 0x4205dc
  420575:	and    ah,BYTE PTR [esi-0x17]
  420578:	cwde   
  420579:	outs   dx,DWORD PTR ds:[esi]
  42057a:	inc    ecx
  42057b:	bound  eax,QWORD PTR [eax-0x17c6615b]
  420581:	(bad)  
  420582:	sub    al,0xff
  420584:	sub    DWORD PTR [eax+edi*8-0x6d9ada0b],edx
  42058b:	std    
  42058c:	add    dl,BYTE PTR [eax+0x1c]
  42058f:	sub    al,0x60
  420591:	pusha  
  420592:	sub    al,0x68
  420594:	fcmovne st,st(7)
  420596:	daa    
  420597:	fcomp  DWORD PTR [edx-0x13]
  42059a:	jge    0x4205bb
  42059c:	push   edx
  42059d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42059e:	jno    0x4205a8
  4205a0:	sub    eax,0x4b75c9e1
  4205a5:	or     BYTE PTR [si],bh
  4205a8:	mov    fs,edi
  4205aa:	not    DWORD PTR [ebp-0x28]
  4205ad:	lods   al,BYTE PTR ds:[esi]
  4205ae:	arpl   bx,cx
  4205b0:	sti    
  4205b1:	adc    BYTE PTR fs:[ebp-0x2639e10b],0x53
  4205b9:	jb     0x4205a1
  4205bb:	add    al,0xbf
  4205bd:	hlt    
  4205be:	sub    al,BYTE PTR [esi]
  4205c0:	xchg   DWORD PTR [ebp+0x44bd8006],esp
  4205c6:	inc    esi
  4205c7:	imul   BYTE PTR [edx-0x117f1587]
  4205cd:	push   esi
  4205ce:	jl     0x420553
  4205d0:	xor    ebx,ebp
  4205d2:	(bad)  
  4205d3:	lds    ebx,FWORD PTR [ecx+edx*8+0x204c05dc]
  4205da:	mov    al,0xbe
  4205dc:	int    0x94
  4205de:	cs xchg ecx,eax
  4205e0:	xchg   BYTE PTR [ebp+0x37e1fd4d],bh
  4205e6:	and    BYTE PTR [esi+eax*2],dh
  4205e9:	les    ebx,FWORD PTR [ebp-0x2c]
  4205ec:	jecxz  0x420669
  4205ee:	push   esi
  4205ef:	leave  
  4205f0:	retf   
  4205f1:	hlt    
  4205f2:	cmc    
  4205f3:	rcl    DWORD PTR [ebp-0x1cecc4bd],0x21
  4205fa:	adc    edx,ebp
  4205fc:	xchg   edi,eax
  4205fd:	xor    al,0x3c
  4205ff:	(bad)  
  420600:	push   esp
  420601:	shr    dl,1
  420603:	popa   
  420604:	jl     0x42064c
  420606:	pop    ebx
  420607:	push   cs
  420608:	popf   
  420609:	inc    edi
  42060a:	fucomi st,st(6)
  42060c:	in     al,0x62
  42060e:	(bad)  
  42060f:	mov    ds:0x5c5f286,al
  420614:	adc    esp,DWORD PTR [edi+eax*8-0x26785f70]
  42061b:	mov    DWORD PTR [edi],ecx
  42061d:	mov    ecx,0x9c279b20
  420622:	jl     0x4205df
  420624:	mov    al,ds:0xb99fd9c6
  420629:	mov    dh,0x90
  42062b:	mov    bh,0xca
  42062d:	pop    ebx
  42062e:	call   0x38463294
  420633:	mov    bh,0xe1
  420635:	mov    bh,BYTE PTR [ecx-0x1c]
  420638:	push   ss
  420639:	call   0xf4463b60
  42063e:	imul   eax,DWORD PTR [ebx+0x32df4091],0xfffffffb
  420645:	jge    0x420633
  420647:	inc    dl
  420649:	sbb    BYTE PTR [eax],cl
  42064b:	mov    eax,0x6022f155
  420650:	icebp  
  420651:	pop    ds
  420652:	pop    ds
  420653:	fdivr  QWORD PTR [ecx]
  420655:	in     al,0x78
  420657:	test   BYTE PTR [esi-0x7e],cl
  42065a:	or     DWORD PTR [ecx],ebp
  42065c:	fadd   st,st(6)
  42065e:	cs mov ch,0xd3
  420661:	imul   ebp,DWORD PTR [ecx],0xffffff91
  420664:	xor    cl,BYTE PTR [edi-0x6a]
  420667:	add    DWORD PTR cs:[ebx+ecx*8-0x30ee73d1],ebx
  42066f:	mov    edx,esi
  420671:	push   esp
  420672:	stc    
  420673:	adc    DWORD PTR [edi-0x1f],ebp
  420676:	jecxz  0x42064f
  420678:	cmp    BYTE PTR [eax-0x7],dh
  42067b:	(bad)  
  42067c:	adc    ecx,DWORD PTR [esi-0x10]
  42067f:	cli    
  420680:	cmp    edx,edx
  420682:	add    eax,0x3c5f57aa
  420687:	adc    DWORD PTR [ecx],0xd4850ed3
  42068d:	stos   DWORD PTR es:[edi],eax
  42068e:	pop    edx
  42068f:	bnd jbe 0x420673
  420692:	pop    esi
  420693:	ins    BYTE PTR es:[edi],dx
  420694:	cli    
  420695:	fwait
  420696:	xchg   esp,eax
  420697:	das    
  420698:	mov    eax,0xcb9644ff
  42069d:	dec    edi
  42069e:	stos   BYTE PTR es:[edi],al
  42069f:	fmul   QWORD PTR [edi-0xd0f8db1]
  4206a5:	pop    esi
  4206a6:	cmp    eax,0xff250688
  4206ab:	jnp    0x4206cc
  4206ad:	xor    eax,0x5768bf6e
  4206b2:	xchg   ecx,eax
  4206b3:	call   0xb06d:0xd796d613
  4206ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206bb:	addr16 pop ebx
  4206bd:	adc    DWORD PTR [eax],ecx
  4206bf:	hlt    
  4206c0:	dec    esi
  4206c1:	push   ecx
  4206c2:	push   edi
  4206c3:	and    eax,0x19088beb
  4206c8:	jne    0x4206fa
  4206ca:	cmp    ecx,DWORD PTR [esi+edi*8-0x57c46857]
  4206d1:	imul   esi,DWORD PTR [eax+0x59],0xa6fabe7e
  4206d8:	push   es
  4206d9:	outs   dx,DWORD PTR ds:[esi]
  4206da:	pop    ecx
  4206db:	in     al,dx
  4206dc:	in     eax,0xd8
  4206de:	or     ebx,edx
  4206e0:	(bad)  
  4206e1:	pop    eax
  4206e2:	scas   eax,DWORD PTR es:[edi]
  4206e3:	inc    ebp
  4206e4:	sahf   
  4206e5:	aaa    
  4206e6:	mov    bl,0x4
  4206e8:	adc    ebx,DWORD PTR [ebx]
  4206ea:	xor    DWORD PTR [ebx-0x60],0xffffff9f
  4206ee:	inc    eax
  4206ef:	pop    ss
  4206f0:	in     al,0x4a
  4206f2:	popf   
  4206f3:	dec    ebp
  4206f4:	xor    BYTE PTR [edi-0x2a4b8e8f],cl
  4206fa:	push   ebp
  4206fb:	ja     0x420708
  4206fd:	(bad)  
  4206fe:	fs pop edi
  420700:	pop    DWORD PTR [edx+0x16970f27]
  420706:	dec    esi
  420707:	mov    eax,ds:0x34c3b388
  42070c:	pop    ebp
  42070d:	inc    ecx
  42070e:	gs jbe 0x420749
  420711:	mov    bl,0x13
  420713:	mov    al,ds:0x1cf241a4
  420718:	push   ss
  420719:	cdq    
  42071a:	out    0x22,al
  42071c:	or     al,0x2d
  42071e:	into   
  42071f:	mov    ds:0x363b31e3,eax
  420724:	pop    esp
  420725:	dec    ecx
  420726:	div    DWORD PTR [ebp-0x2a]
  420729:	stos   BYTE PTR es:[edi],al
  42072a:	or     ecx,DWORD PTR [ecx+0x318070c7]
  420730:	fdiv   QWORD PTR [edx+0x32ddd35e]
  420736:	clc    
  420737:	ret    0x1a8e
  42073a:	jp     0x420757
  42073c:	xor    eax,0x1e1b479d
  420741:	xor    eax,0x58b6b016
  420746:	add    eax,0x9f9f44df
  42074b:	xchg   esp,eax
  42074c:	adc    esp,edx
  42074e:	sbb    esi,ecx
  420750:	adc    al,0xe4
  420752:	pop    esi
  420753:	lahf   
  420754:	(bad)  
  420755:	lock (bad) 
  420757:	xor    BYTE PTR [edi+0x2e],ah
  42075a:	sub    BYTE PTR [esi-0x60616d28],al
  420760:	sti    
  420761:	nop
  420762:	mov    al,0xdd
  420764:	aam    0xf9
  420766:	fadd   st(4),st
  420768:	push   ebp
  420769:	cmp    dl,BYTE PTR [edx]
  42076b:	push   ebx
  42076c:	jo     0x4207cf
  42076e:	iret   
  42076f:	(bad)  
  420770:	cld    
  420771:	xchg   edi,eax
  420772:	sbb    al,0x15
  420774:	jo     0x42072c
  420776:	push   esp
  420777:	jg     0x4207eb
  420779:	add    DWORD PTR [ecx-0x51],eax
  42077c:	ret    
  42077d:	mov    ebx,0x6c4a5517
  420782:	(bad)  
  420783:	jo     0x4207c3
  420785:	sbb    BYTE PTR [ebp-0x43],bh
  420788:	jl     0x420736
  42078a:	pop    edi
  42078b:	mov    esi,0x88e11296
  420790:	stos   BYTE PTR es:[edi],al
  420791:	add    al,0x14
  420793:	add    dh,bh
  420795:	inc    ebp
  420796:	inc    eax
  420797:	xlat   BYTE PTR ds:[ebx]
  420798:	xchg   edx,eax
  420799:	and    cl,al
  42079b:	scas   al,BYTE PTR es:[edi]
  42079c:	mov    eax,ds:0xbfff7cc8
  4207a1:	jge    0x420771
  4207a3:	push   esp
  4207a4:	test   DWORD PTR [edx+0x5f],edx
  4207a7:	ds aaa 
  4207a9:	mov    dl,0xa8
  4207ab:	aad    0xce
  4207ad:	xor    eax,0x54466ec7
  4207b2:	les    esi,FWORD PTR [ecx]
  4207b4:	nop
  4207b5:	loopne 0x4207e1
  4207b7:	imul   ebx,DWORD PTR [esi],0xffffff82
  4207ba:	arpl   bx,dx
  4207bc:	add    BYTE PTR [ecx+ebp*4+0x5],bh
  4207c0:	dec    edi
  4207c1:	mov    al,0x3a
  4207c3:	test   al,0x82
  4207c5:	nop
  4207c6:	mov    eax,ds:0x79f72f3d
  4207cb:	pop    ss
  4207cc:	rcr    DWORD PTR [ebx-0x7cf83d33],0xa6
  4207d3:	cwde   
  4207d4:	iret   
  4207d5:	mov    ecx,0xfd5f4446
  4207da:	xor    al,0x9f
  4207dc:	xchg   ebp,eax
  4207dd:	arpl   WORD PTR [eax+0x7668057],di
  4207e3:	aaa    
  4207e4:	sti    
  4207e5:	jo     0x4207ed
  4207e7:	sahf   
  4207e8:	lahf   
  4207e9:	adc    BYTE PTR [edx-0x66],0xf7
  4207ed:	sub    ecx,DWORD PTR [eax+0x2a]
  4207f0:	mov    edi,0x9b1218a4
  4207f5:	test   ecx,edx
  4207f7:	xor    ch,BYTE PTR [eax-0x7baf030c]
  4207fd:	stc    
  4207fe:	popa   
  4207ff:	adc    ch,BYTE PTR [eax+0x1e1fcd27]
  420805:	aad    0xaa
  420807:	jb     0x420829
  420809:	xor    esi,DWORD PTR [esi]
  42080b:	and    BYTE PTR [ebx+ebp*4+0xa],bh
  42080f:	iret   
  420810:	int    0x9a
  420812:	mov    eax,0x1bae543c
  420817:	mov    ebx,0x72a701d7
  42081c:	sbb    edi,esp
  42081e:	in     al,dx
  42081f:	mov    bh,0x31
  420821:	inc    eax
  420822:	lahf   
  420823:	mov    eax,0x35b7e740
  420828:	sub    al,0x9
  42082a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42082b:	cld    
  42082c:	lods   eax,DWORD PTR ds:[esi]
  42082d:	adc    esp,esi
  42082f:	les    eax,FWORD PTR [ebx+0x409314f4]
  420835:	jmp    0xaff3dfbe
  42083a:	int    0xef
  42083c:	lods   al,BYTE PTR ds:[esi]
  42083d:	push   ecx
  42083e:	push   ebx
  42083f:	daa    
  420840:	and    cl,BYTE PTR [eax+0x6f]
  420843:	outs   dx,DWORD PTR ds:[esi]
  420844:	push   esi
  420845:	nop
  420846:	outs   dx,DWORD PTR ds:[esi]
  420847:	jl     0x4208a1
  420849:	aas    
  42084a:	rcl    DWORD PTR [ebx+0x65],cl
  42084d:	add    eax,0xfed04d53
  420852:	es xchg esi,eax
  420854:	xchg   BYTE PTR [esi+ebp*4+0x5f],ch
  420858:	fs (bad) 
  42085a:	clc    
  42085b:	test   eax,edx
  42085d:	mov    ch,0xc1
  42085f:	aam    0x53
  420861:	call   0xac099de0
  420866:	inc    ecx
  420867:	adc    DWORD PTR [ebx+0x78],ecx
  42086a:	pop    ds
  42086b:	mov    DWORD PTR [edi+0x51],ebp
  42086e:	dec    edi
  42086f:	mov    ah,0x0
  420871:	cdq    
  420872:	test   DWORD PTR [esi],0x8a96f293
  420878:	in     al,0x68
  42087a:	lds    edi,FWORD PTR [edi-0x26fba295]
  420880:	popf   
  420881:	mov    bh,0xad
  420883:	shl    DWORD PTR [edi+0x6a],cl
  420886:	sub    cl,BYTE PTR [ebp+0x40]
  420889:	test   al,0xa2
  42088b:	test   bl,cl
  42088d:	int3   
  42088e:	adc    bh,BYTE PTR [edx-0x3b]
  420891:	cmp    eax,0x7092738a
  420896:	repnz mov eax,0x9cfa8aec
  42089c:	cmc    
  42089d:	test   eax,0x37296b1d
  4208a2:	mov    ebp,ecx
  4208a4:	mov    edx,0xfc739cfd
  4208a9:	repnz (bad) 
  4208ab:	leave  
  4208ac:	(bad)  
  4208ad:	loopne 0x4208cf
  4208af:	push   ebx
  4208b0:	push   es
  4208b1:	shl    DWORD PTR [edx-0x6e],0xf5
  4208b5:	inc    edi
  4208b6:	push   ebp
  4208b7:	push   ebx
  4208b8:	daa    
  4208b9:	pusha  
  4208ba:	into   
  4208bb:	gs pushf 
  4208bd:	push   cs
  4208be:	in     al,0xba
  4208c0:	dec    esi
  4208c1:	push   cs
  4208c2:	mov    al,0x1b
  4208c4:	inc    edx
  4208c5:	cld    
  4208c6:	xor    bl,0x16
  4208c9:	mov    dh,0x57
  4208cb:	call   0x8166:0x39e6dbb0
  4208d2:	xor    BYTE PTR [ebx+0x46],bh
  4208d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d6:	sbb    DWORD PTR [edi],esi
  4208d8:	jmp    0x8967f910
  4208dd:	aam    0x23
  4208df:	sar    BYTE PTR [ebp-0x1a],1
  4208e2:	gs mov bl,0x78
  4208e5:	gs cld 
  4208e7:	push   ss
  4208e8:	jno    0x42089c
  4208ea:	jns    0x42088f
  4208ec:	jmp    0x42094f
  4208ee:	ins    DWORD PTR es:[edi],dx
  4208ef:	cmp    DWORD PTR [ecx+0x5963bd88],eax
  4208f5:	jo     0x420903
  4208f7:	add    dl,BYTE PTR [esi]
  4208f9:	add    al,0x3b
  4208fb:	jmp    0xbbae:0x9c971fc3
  420902:	fldcw  WORD PTR [eax]
  420904:	pop    edi
  420905:	push   cs
  420906:	pop    edi
  420907:	bound  edi,QWORD PTR [eax+0x65]
  42090a:	dec    ebx
  42090b:	mov    DWORD PTR [edx],eax
  42090d:	mov    WORD PTR [esp+esi*1+0x359901b4],cs
  420914:	mov    ds:0xedfe53d6,al
  420919:	sbb    ebx,ebp
  42091b:	dec    ebp
  42091c:	lock scas eax,DWORD PTR es:[edi]
  42091e:	adc    BYTE PTR [edx-0x322f357d],ah
  420924:	mov    cl,0xd7
  420926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420927:	inc    edx
  420928:	div    DWORD PTR [ebx]
  42092a:	mov    esi,0x55ac26d0
  42092f:	imul   eax,DWORD PTR [eax+0xb7146bb],0x137a73ad
  420939:	xchg   esi,eax
  42093a:	xor    al,0xad
  42093c:	mov    ebx,0x7fac54f8
  420941:	add    esi,DWORD PTR ds:0xe735da8
  420947:	imul   eax,DWORD PTR [ebp+0x4b],0xa2b2e43d
  42094e:	mov    ebp,0x89231edd
  420953:	add    bl,BYTE PTR [esi]
  420955:	ret    0xf75e
  420958:	out    dx,al
  420959:	sbb    BYTE PTR [ebx-0x6d6287e4],ah
  42095f:	cmp    dl,bh
  420961:	mov    ah,0xda
  420963:	adc    ebp,DWORD PTR [eax+0x77]
  420966:	aaa    
  420967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420968:	xor    cl,dl
  42096a:	pop    edx
  42096b:	sahf   
  42096c:	arpl   WORD PTR [ebp+0x4eefe43f],cx
  420972:	cwde   
  420973:	adc    edi,esi
  420975:	push   esp
  420976:	call   0x10c7a2c7
  42097b:	and    edx,esp
  42097d:	inc    ebp
  42097e:	dec    edx
  42097f:	popa   
  420980:	jg     0x4209c5
  420982:	xor    DWORD PTR [ecx],edi
  420984:	out    dx,eax
  420985:	out    dx,eax
  420986:	std    
  420987:	ja     0x420939
  420989:	mov    edx,DWORD PTR [ebp-0x167c06ca]
  42098f:	ficom  DWORD PTR [ebx+ebx*1-0x6789991b]
  420996:	jno    0x42091f
  420998:	xchg   esp,eax
  420999:	aam    0xa5
  42099b:	adc    bh,bl
  42099d:	inc    edx
  42099e:	sub    eax,0x8e1ee208
  4209a3:	fcomp  QWORD PTR [eax]
  4209a5:	push   ecx
  4209a6:	aad    0x20
  4209a8:	pop    edx
  4209a9:	xchg   esi,eax
  4209aa:	stos   BYTE PTR es:[edi],al
  4209ab:	dec    ebp
  4209ac:	jmp    0xce99:0xabc9505a
  4209b3:	mov    eax,0x5c4f6142
  4209b8:	dec    edi
  4209b9:	xchg   ecx,eax
  4209ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209bb:	add    al,0x56
  4209bd:	lods   al,BYTE PTR ds:[esi]
  4209be:	nop
  4209bf:	xor    edi,DWORD PTR [ecx]
  4209c1:	or     BYTE PTR [ebx+0x47],ch
  4209c4:	dec    esi
  4209c5:	sbb    eax,0x86a1f989
  4209ca:	inc    eax
  4209cb:	rcl    BYTE PTR [edx+0x6a],0x27
  4209cf:	push   edi
  4209d0:	mov    bl,0xb4
  4209d2:	pop    ds
  4209d3:	cli    
  4209d4:	mov    esi,0xf83bcdce
  4209d9:	mov    eax,DWORD PTR [ebx-0x6515af2d]
  4209df:	shl    ebp,0xe9
  4209e2:	pop    esi
  4209e3:	adc    ebp,ebx
  4209e5:	xor    DWORD PTR [edi+0x78],0x1ab8fccc
  4209ec:	dec    edx
  4209ed:	(bad)  
  4209ee:	dec    esp
  4209ef:	not    ch
  4209f1:	pop    ebx
  4209f2:	ret    
  4209f3:	fs call 0xb07d:0x2f5fbe5a
  4209fb:	inc    edx
  4209fc:	adc    eax,0xe6b81301
  420a01:	cld    
  420a02:	in     eax,0xd7
  420a04:	or     eax,0xbc8ced3a
  420a09:	add    bl,BYTE PTR [esi]
  420a0b:	iret   
  420a0c:	xchg   ebp,eax
  420a0d:	mov    ebp,DWORD PTR [eax+ebx*2-0x6b4e63b5]
  420a14:	outs   dx,DWORD PTR ds:[esi]
  420a15:	pop    ebx
  420a16:	mov    dl,0x7
  420a18:	cmp    ecx,0xffffff82
  420a1b:	in     al,dx
  420a1c:	in     al,0x42
  420a1e:	imul   edx,ebx,0x13b9c186
  420a24:	(bad)  
  420a25:	pop    ebx
  420a26:	stos   BYTE PTR es:[edi],al
  420a27:	cmp    ah,al
  420a29:	call   0xd217:0x1675574e
  420a30:	cmc    
  420a31:	std    
  420a32:	jae    0x420a77
  420a34:	xor    bh,ah
  420a36:	push   cs
  420a37:	aam    0x24
  420a39:	dec    eax
  420a3a:	(bad)  
  420a3c:	imul   edi,DWORD PTR [esi-0x75d222ba],0xff15baab
  420a46:	scas   al,BYTE PTR es:[edi]
  420a47:	shl    al,1
  420a49:	sbb    al,0x1e
  420a4b:	jb     0x420a1d
  420a4d:	mov    BYTE PTR [ebx],bl
  420a4f:	mov    eax,ds:0xf8c0fa10
  420a54:	sub    esp,DWORD PTR [ecx]
  420a56:	(bad)  
  420a57:	sahf   
  420a58:	aad    0xd7
  420a5a:	mov    eax,ds:0xd7bd4685
  420a5f:	cmp    DWORD PTR [esi+0x52],edx
  420a62:	ja     0x420ad1
  420a64:	add    al,bh
  420a66:	dec    esi
  420a67:	out    0xaa,al
  420a69:	fs shl ebx,0x2
  420a6d:	dec    ecx
  420a6e:	jge    0x420a56
  420a70:	not    DWORD PTR [edx+eiz*8-0x5335f918]
  420a77:	push   ebx
  420a78:	push   esi
  420a79:	jno    0x420aca
  420a7b:	mov    dl,0xed
  420a7d:	fdivp  st(5),st
  420a7f:	shr    DWORD PTR [ebp+0x49a9777a],0xf8
  420a86:	sub    al,0x0
  420a88:	push   0x71
  420a8a:	add    esi,DWORD PTR [ebx+edi*8+0x2075e5e9]
  420a91:	sbb    ch,ch
  420a93:	dec    esp
  420a94:	js     0x420af3
  420a96:	xchg   ebp,eax
  420a97:	sub    eax,0x7b2494ec
  420a9c:	and    cl,BYTE PTR [eax]
  420a9e:	mov    esi,0x58ec1117
  420aa3:	popa   
  420aa4:	mov    bl,0xa
  420aa6:	stc    
  420aa7:	cmc    
  420aa8:	mov    bh,0x14
  420aaa:	dec    esi
  420aab:	sti    
  420aac:	inc    ebp
  420aad:	push   0xffffff9b
  420aaf:	add    al,0xb9
  420ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ab2:	xor    al,bh
  420ab4:	mov    dh,0x19
  420ab6:	jmp    0x97e1:0xb3a061ae
  420abd:	out    0x58,eax
  420abf:	xchg   edx,eax
  420ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ac1:	in     al,0xe9
  420ac3:	add    ebp,esi
  420ac5:	stos   BYTE PTR es:[edi],al
  420ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac7:	mov    WORD PTR [ebp-0x69],gs
  420aca:	pop    esp
  420acb:	cmp    al,BYTE PTR [eax-0x36ca6f33]
  420ad1:	fidivr DWORD PTR [edx*1+0x7722b441]
  420ad8:	ret    0x3abb
  420adb:	iret   
  420adc:	cmp    DWORD PTR [edx],0x68
  420adf:	xchg   edx,eax
  420ae0:	sub    edx,DWORD PTR [edi]
  420ae2:	jp     0x420ac2
  420ae4:	xor    bl,BYTE PTR [ebx+0x30]
  420ae7:	neg    ch
  420ae9:	hlt    
  420aea:	mov    BYTE PTR [ebx+edx*4+0x670de813],bl
  420af1:	xor    DWORD PTR ds:0x28801cf2,ecx
  420af7:	and    BYTE PTR [ecx-0x3e36d5b8],ah
  420afd:	ror    esp,cl
  420aff:	pop    ss
  420b00:	bound  ebx,QWORD PTR [eax+0x15]
  420b03:	mov    eax,ds:0x236376da
  420b08:	sub    BYTE PTR [ebx-0x46],ch
  420b0b:	ins    BYTE PTR es:[edi],dx
  420b0c:	ror    DWORD PTR [ebx+edi*4-0xd],cl
  420b10:	in     eax,dx
  420b11:	or     BYTE PTR [edi-0x26],bh
  420b14:	je     0x420b11
  420b16:	in     eax,dx
  420b17:	push   edi
  420b18:	dec    ecx
  420b19:	dec    ecx
  420b1a:	xchg   edi,eax
  420b1b:	mov    edi,0xbe8a2e3e
  420b20:	icebp  
  420b21:	daa    
  420b22:	mov    ebp,0x8ea9c963
  420b27:	xchg   edx,eax
  420b28:	pop    ecx
  420b29:	out    dx,al
  420b2a:	inc    esi
  420b2b:	mov    esp,0xd56e4dbc
  420b30:	mov    eax,ds:0x9ee0a475
  420b35:	(bad)  
  420b36:	enter  0x5e40,0x77
  420b3a:	ja     0x420b14
  420b3c:	push   edx
  420b3d:	int3   
  420b3e:	xchg   ebp,eax
  420b3f:	shr    BYTE PTR [edi-0x4271d2bb],0xa
  420b46:	mov    edx,0x846c41dd
  420b4b:	dec    esp
  420b4c:	sbb    DWORD PTR [esi],esp
  420b4e:	and    eax,DWORD PTR [ecx+0x71f28249]
  420b54:	aad    0xb6
  420b56:	xchg   edi,eax
  420b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b58:	mov    al,0x4d
  420b5a:	test   DWORD PTR [edx+0x58],eax
  420b5d:	int3   
  420b5e:	imul   esp,esi,0x24267a97
  420b64:	stos   BYTE PTR es:[edi],al
  420b65:	inc    esi
  420b66:	je     0x420af7
  420b68:	aam    0x40
  420b6a:	push   edi
  420b6b:	sti    
  420b6c:	dec    ebp
  420b6d:	sub    edi,DWORD PTR [edi+0x7b]
  420b70:	xor    DWORD PTR [eax-0x17],eax
  420b73:	movups XMMWORD PTR [ecx],xmm6
  420b76:	retf   
  420b77:	aaa    
  420b78:	arpl   WORD PTR [eax-0x132960c5],ax
  420b7e:	push   edx
  420b7f:	or     DWORD PTR [esi-0x4d9e3f33],ecx
  420b85:	pop    ecx
  420b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b87:	jle    0x420bad
  420b89:	sub    dh,BYTE PTR [esi+ebp*1+0x4391950e]
  420b90:	in     al,dx
  420b91:	rcr    DWORD PTR [edi-0x7be79752],1
  420b97:	push   ecx
  420b98:	shr    DWORD PTR [edx+ebx*2-0x33dc91c5],0x43
  420ba0:	xor    BYTE PTR [edx-0x5a],dl
  420ba3:	aad    0x75
  420ba5:	cmp    DWORD PTR [ebx],esp
  420ba7:	dec    ecx
  420ba8:	pop    ds
  420ba9:	(bad)  
  420baa:	aas    
  420bab:	std    
  420bac:	inc    DWORD PTR [edi+0x40ae0450]
  420bb2:	mov    ?,WORD PTR [eax+0x4014c630]
  420bb8:	cmp    DWORD PTR [edi],ebp
  420bba:	fistp  WORD PTR [edi-0x7986e334]
  420bc0:	dec    DWORD PTR [ebx+0x46]
  420bc3:	call   0x920c8733
  420bc8:	cmp    edx,esp
  420bca:	jg     0x420bd8
  420bcc:	ins    BYTE PTR es:[edi],dx
  420bcd:	rol    esp,cl
  420bcf:	or     BYTE PTR [bp+si],bh
  420bd2:	test   eax,0xa1a63767
  420bd7:	mov    dl,0x7e
  420bd9:	enter  0x9e03,0x83
  420bdd:	enter  0x4743,0xc5
  420be1:	jg     0x420b65
  420be3:	and    al,0x46
  420be5:	cmc    
  420be6:	jns    0x420c3e
  420be8:	sahf   
  420be9:	test   ebx,edi
  420beb:	push   0x8d2575c7
  420bf0:	ins    BYTE PTR es:[edi],dx
  420bf1:	and    BYTE PTR [ecx+0x44],0x9
  420bf5:	rcr    bl,cl
  420bf7:	imul   edx,eax,0x3f32d23
  420bfd:	leave  
  420bfe:	mov    esi,0xfb8e02f2
  420c03:	mov    esi,0x33002e
  420c08:	popf   
  420c09:	test   DWORD PTR [eax+0x506ae576],esi
  420c0f:	fldcw  WORD PTR [edi+0x2a]
  420c12:	pop    esp
  420c13:	xchg   esi,eax
  420c14:	sub    edi,ecx
  420c16:	gs xor eax,0x35f71fc6
  420c1c:	ret    
  420c1d:	pop    es
  420c1e:	pop    edi
  420c1f:	push   esp
  420c20:	cmp    esi,DWORD PTR [edi+0x779049ba]
  420c26:	sub    al,0xfc
  420c28:	add    dh,BYTE PTR [ebx+0x3618d6e5]
  420c2e:	shl    cl,1
  420c30:	sub    ecx,DWORD PTR [eax]
  420c32:	push   edx
  420c33:	add    cl,BYTE PTR [edi]
  420c35:	cmp    DWORD PTR [ebx+0x193a7560],esp
  420c3b:	or     al,BYTE PTR ds:0x56e063ae
  420c41:	pop    ebx
  420c42:	xchg   esp,eax
  420c43:	xchg   esi,eax
  420c44:	fiadd  WORD PTR [edx-0x77]
  420c47:	aad    0x61
  420c49:	pushf  
  420c4a:	jecxz  0x420c09
  420c4c:	adc    ch,ah
  420c4e:	mov    dh,0x45
  420c50:	pop    es
  420c51:	std    
  420c52:	cmp    eax,0xe67ed532
  420c57:	sbb    ebx,ecx
  420c59:	stos   BYTE PTR es:[edi],al
  420c5a:	or     al,0x1e
  420c5c:	aad    0x24
  420c5e:	jmp    0x33d:0xc0fdf7cb
  420c65:	adc    al,0x43
  420c67:	loopne 0x420c6a
  420c69:	cs enter 0xe4cf,0xbb
  420c6e:	push   ss
  420c6f:	inc    edx
  420c70:	les    ebx,FWORD PTR [ebp-0x13]
  420c73:	mov    dh,0xab
  420c75:	(bad)  
  420c76:	sub    eax,0x285cdb6f
  420c7b:	xchg   esp,eax
  420c7c:	mov    esi,esp
  420c7e:	adc    eax,0x4db0a927
  420c83:	dec    ebp
  420c84:	retf   
  420c85:	cwde   
  420c86:	adc    BYTE PTR [eax+0x3b],ch
  420c89:	ror    bh,cl
  420c8b:	pop    es
  420c8c:	xchg   edx,eax
  420c8d:	(bad)  
  420c8e:	sbb    DWORD PTR [ebx+0x27bbe384],eax
  420c94:	adc    dh,dl
  420c96:	jle    0x420cb8
  420c98:	add    BYTE PTR [ecx-0x25],ah
  420c9b:	outs   dx,DWORD PTR ds:[esi]
  420c9c:	sbb    BYTE PTR [ecx-0x2b85bf13],0x47
  420ca3:	out    0x90,al
  420ca5:	les    ecx,FWORD PTR [ebp+0x19bb8c96]
  420cab:	lods   eax,DWORD PTR ds:[esi]
  420cac:	dec    ecx
  420cad:	leave  
  420cae:	iret   
  420caf:	ss push esp
  420cb1:	mov    esp,0xc5b951c7
  420cb6:	out    0x64,eax
  420cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb9:	pop    eax
  420cba:	sahf   
  420cbb:	aas    
  420cbc:	mov    BYTE PTR [eax-0x70],al
  420cbf:	mov    edi,0x7f3ed85f
  420cc4:	jle    0x420ce4
  420cc6:	into   
  420cc7:	out    0x84,al
  420cc9:	sahf   
  420cca:	jns    0x420d42
  420ccc:	shl    BYTE PTR [ebp+0x7c],cl
  420ccf:	add    DWORD PTR [ecx],eax
  420cd1:	mov    edx,0xa579159f
  420cd6:	out    0xe4,al
  420cd8:	nop
  420cd9:	(bad)  
  420cdb:	sub    esp,DWORD PTR [ebp+0x1b103e18]
  420ce1:	shr    dh,1
  420ce3:	sub    ecx,DWORD PTR [esi-0x6850c771]
  420ce9:	xor    al,0xc9
  420ceb:	adc    al,0x2b
  420ced:	aaa    
  420cee:	jecxz  0x420cda
  420cf0:	out    0xa1,al
  420cf2:	leave  
  420cf3:	dec    edi
  420cf4:	ds pop ss
  420cf6:	fxch   st(7)
  420cf8:	mov    bh,0xd
  420cfa:	adc    BYTE PTR [edi-0x5be8610f],dl
  420d00:	int3   
  420d01:	cmp    ebx,DWORD PTR [esi+0x5f]
  420d04:	ret    
  420d05:	aad    0xaa
  420d07:	jmp    0x5b8ad711
  420d0c:	repz cld 
  420d0e:	ins    DWORD PTR es:[edi],dx
  420d0f:	jle    0x420d07
  420d11:	jp     0x420d2b
  420d13:	sbb    al,0x11
  420d15:	in     eax,0x15
  420d17:	inc    eax
  420d18:	adc    BYTE PTR [esi+0xb],bh
  420d1b:	cs cld 
  420d1d:	pop    ebx
  420d1e:	jge    0x420d74
  420d20:	push   0x3ee79fd0
  420d25:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  420d27:	mov    eax,ds:0x493beaed
  420d2c:	and    edx,esi
  420d2e:	fs je  0x420d9c
  420d31:	pop    esi
  420d32:	mov    ch,BYTE PTR [eax+0x7c639ba0]
  420d38:	and    BYTE PTR [edx-0x7c9ea4e9],cl
  420d3e:	gs je  0x420dbe
  420d41:	sub    DWORD PTR [ebx+edi*1+0x649798c6],0xffffff82
  420d49:	xchg   edx,eax
  420d4a:	gs and bh,0x17
  420d4e:	popa   
  420d4f:	repz dec edi
  420d51:	test   eax,0xa76a4ecc
  420d56:	add    esp,DWORD PTR [edi]
  420d58:	mov    eax,0x876fcce3
  420d5d:	stos   DWORD PTR es:[edi],eax
  420d5e:	in     eax,0xe6
  420d60:	ror    DWORD PTR [esp+eax*2+0x5e320510],0x4e
  420d68:	mov    ecx,0x398db492
  420d6d:	shr    DWORD PTR [edx-0x3a],cl
  420d70:	sbb    dh,BYTE PTR ds:0xeeb45a66
  420d76:	(bad)  
  420d77:	jmp    0x2a0ced94
  420d7c:	outs   dx,BYTE PTR ds:[esi]
  420d7d:	lods   al,BYTE PTR ds:[esi]
  420d7e:	inc    edx
  420d7f:	cdq    
  420d80:	mov    bl,BYTE PTR [edx-0x68]
  420d83:	xor    bh,bl
  420d85:	test   ebx,ebp
  420d87:	xor    al,0xe4
  420d89:	inc    esi
  420d8a:	lods   al,BYTE PTR ds:[esi]
  420d8b:	ret    
  420d8c:	lds    ecx,FWORD PTR [eax]
  420d8e:	mov    bl,0x8f
  420d90:	std    
  420d91:	fistp  DWORD PTR ds:0x94fe95d7
  420d97:	inc    esp
  420d98:	xor    al,0x75
  420d9a:	jg     0x420da1
  420d9c:	imul   esp,DWORD PTR ds:0xb093e81a,0xffffffac
  420da3:	and    esp,esp
  420da5:	xor    ecx,esi
  420da7:	xor    ch,BYTE PTR [ecx]
  420da9:	daa    
  420daa:	arpl   WORD PTR [ebx],bp
  420dac:	lahf   
  420dad:	and    al,0x80
  420daf:	scas   al,BYTE PTR es:[edi]
  420db0:	cmp    BYTE PTR [ebp+0x77],al
  420db3:	fnstsw WORD PTR [edi+0x73]
  420db6:	pop    eax
  420db7:	or     BYTE PTR [ebp-0x50f3a7b2],bh
  420dbd:	lods   eax,DWORD PTR ds:[esi]
  420dbe:	call   0x6e3a6c51
  420dc3:	sbb    cl,ah
  420dc5:	jne    0x420e3b
  420dc7:	mov    dl,0xae
  420dc9:	mov    DWORD PTR ds:0x254e4316,edx
  420dcf:	fnstenv [ebp+edx*2-0x4]
  420dd3:	sar    eax,1
  420dd5:	sar    BYTE PTR [eax-0x28ae7d07],0xe2
  420ddc:	and    BYTE PTR [eax],dl
  420dde:	push   eax
  420ddf:	cmp    DWORD PTR [ebp+0x15],eax
  420de2:	stos   DWORD PTR es:[edi],eax
  420de3:	push   ecx
  420de4:	mov    al,0xba
  420de6:	inc    esi
  420de7:	in     eax,0x78
  420de9:	jnp    0x420e50
  420deb:	repnz push es
  420ded:	jno    0x420d8d
  420def:	es pop ds
  420df1:	jge    0x420dbf
  420df3:	jmp    0xe27f3270
  420df8:	icebp  
  420df9:	cdq    
  420dfa:	mov    ds:0xc7b51898,al
  420dff:	test   DWORD PTR [ebp+0x1a51222b],edi
  420e05:	or     ch,ah
  420e07:	pop    esi
  420e08:	repz cld 
  420e0a:	dec    edi
  420e0b:	jmp    0x420e56
  420e0d:	and    al,0x6d
  420e10:	ss jmp 0x52743b96
  420e16:	mov    ebx,0x31505daf
  420e1b:	pop    eax
  420e1c:	and    bh,BYTE PTR [ecx+0x36]
  420e1f:	stos   BYTE PTR es:[edi],al
  420e20:	and    eax,0xd6a4f614
  420e25:	inc    esp
  420e26:	jle    0x420de7
  420e28:	pop    edi
  420e29:	sbb    esi,ebx
  420e2b:	(bad)  
  420e2c:	jmp    0x420dc4
  420e2e:	pusha  
  420e2f:	push   eax
  420e30:	xor    DWORD PTR [eax-0x5d],esp
  420e33:	mov    eax,0x93f93c14
  420e38:	and    esp,DWORD PTR [edx]
  420e3a:	cmp    al,0xa1
  420e3c:	(bad)  
  420e3d:	jle    0x420e4e
  420e3f:	inc    ebx
  420e40:	dec    ebp
  420e41:	sbb    ebp,DWORD PTR [eax]
  420e43:	test   edx,esi
  420e45:	mov    bh,0x45
  420e47:	lahf   
  420e48:	jmp    0x787b538e
  420e4d:	push   esp
  420e4e:	lea    ebp,[ebp+ebx*1-0xc57a92e]
  420e55:	mov    WORD PTR [edx+0x41],gs
  420e58:	jg     0x420e55
  420e5a:	cdq    
  420e5b:	fnstcw WORD PTR [edx-0x1d]
  420e5e:	jns    0x420de6
  420e60:	bound  ebx,QWORD PTR [ebp+0x49]
  420e63:	test   eax,0x5d30d157
  420e68:	jmp    0x420e80
  420e6a:	out    0x2c,al
  420e6c:	jo     0x420ebf
  420e6e:	push   edi
  420e6f:	cmp    eax,0xec310c66
  420e74:	xor    esp,esp
  420e76:	leave  
  420e77:	add    cl,BYTE PTR [ebx+ebx*4]
  420e7a:	ins    DWORD PTR es:[edi],dx
  420e7b:	and    al,0x4a
  420e7d:	pushf  
  420e7e:	sbb    al,0xb7
  420e80:	mov    ?,ebp
  420e82:	xchg   ecx,eax
  420e83:	test   DWORD PTR [ebx],edi
  420e85:	imul   ebx,DWORD PTR [eax-0x4fcdf981],0xffffffef
  420e8c:	js     0x420e2e
  420e8e:	mov    ebp,DWORD PTR [ebp-0x2b9afc94]
  420e94:	push   esp
  420e95:	lds    esp,FWORD PTR [ebx-0x7a52a94b]
  420e9b:	mov    BYTE PTR [ebx-0xc],dh
  420e9e:	xchg   edx,eax
  420e9f:	xchg   edi,eax
  420ea0:	or     cl,0x95
  420ea3:	out    dx,eax
  420ea4:	xchg   esp,eax
  420ea5:	in     eax,dx
  420ea6:	jg     0x420e29
  420ea8:	inc    ecx
  420ea9:	push   edx
  420eaa:	mov    al,0xc6
  420eac:	push   ebx
  420ead:	fsub   QWORD PTR [esi]
  420eaf:	mov    ds:0x6ec2a49c,eax
  420eb4:	arpl   WORD PTR [esi-0x32cab196],si
  420eba:	add    ebp,DWORD PTR [eax-0x7e]
  420ebd:	gs stos DWORD PTR es:[edi],eax
  420ebf:	inc    esp
  420ec0:	mov    ss,WORD PTR [ecx-0x6e736b71]
  420ec6:	mov    bl,0x8b
  420ec8:	in     eax,0x3a
  420eca:	js     0x420f09
  420ecc:	mov    edi,0x590a654
  420ed1:	and    ah,BYTE PTR [ebp-0x53]
  420ed4:	daa    
  420ed5:	dec    eax
  420ed6:	mov    ah,0x19
  420ed8:	and    cl,cl
  420eda:	and    DWORD PTR ds:0x5a632b7c,edx
  420ee0:	ret    0xb4dd
  420ee3:	jmp    0x1c166483
  420ee8:	data16 and cl,BYTE PTR [ebp+0x3553791e]
  420eef:	mov    dh,0xf5
  420ef1:	(bad)  
  420ef2:	into   
  420ef3:	pop    esi
  420ef4:	cdq    
  420ef5:	push   ds
  420ef6:	outs   dx,BYTE PTR ds:[esi]
  420ef7:	mov    DWORD PTR [esi],0xc76e1c39
  420efd:	xchg   ebx,eax
  420efe:	daa    
  420eff:	pusha  
  420f00:	cmp    eax,DWORD PTR [ebx-0x16bc997d]
  420f06:	dec    eax
  420f07:	cli    
  420f08:	ja     0x420edd
  420f0a:	xlat   BYTE PTR ds:[ebx]
  420f0b:	es xor esp,edx
  420f0e:	mov    ah,0x6e
  420f10:	push   ebx
  420f11:	arpl   WORD PTR [ecx-0x272e3c03],bp
  420f17:	add    eax,0xdd10a7bd
  420f1c:	and    BYTE PTR ds:0x21699f04,ch
  420f22:	repz stc 
  420f24:	or     BYTE PTR [esi-0x1063e393],dl
  420f2a:	jmp    0x8ac8:0x7da4790a
  420f31:	out    dx,al
  420f32:	jg     0x420f0e
  420f34:	jno    0x420ed1
  420f36:	stos   DWORD PTR es:[edi],eax
  420f37:	xchg   BYTE PTR [edx],ah
  420f39:	and    eax,DWORD PTR [edx]
  420f3b:	jmp    FWORD PTR [ebp+0x33]
  420f3e:	imul   ebx,DWORD PTR [ecx],0x938567a3
  420f44:	repnz add DWORD PTR [edi+0x30],edi
  420f48:	sahf   
  420f49:	sub    BYTE PTR [esi-0x12d9de8],dh
  420f4f:	sub    eax,0x9d76ef52
  420f54:	push   cs
  420f55:	pushf  
  420f56:	jo     0x420f5f
  420f58:	test   al,0x59
  420f5a:	fxch   st(7)
  420f5c:	sub    BYTE PTR [ebp-0x60b85bba],bh
  420f62:	push   ecx
  420f63:	sub    al,0x6e
  420f65:	or     bh,bh
  420f67:	mov    esp,0xeb6fbb32
  420f6c:	(bad)  
  420f6d:	cld    
  420f6e:	jo     0x420f17
  420f70:	fwait
  420f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f72:	adc    cl,cl
  420f74:	adc    dl,dl
  420f76:	adc    eax,DWORD PTR [ebp+0x6f04a562]
  420f7c:	repnz out 0x5d,eax
  420f7f:	jae    0x420f14
  420f81:	shl    BYTE PTR [ebp+0x59],1
  420f84:	pop    ss
  420f85:	and    edx,DWORD PTR [edx]
  420f87:	pop    edi
  420f88:	mov    edx,0x3ae9f10f
  420f8d:	xchg   BYTE PTR cs:[eax-0x22474dac],cl
  420f94:	mov    ecx,0xa42f142f
  420f99:	add    DWORD PTR [eax],ebx
  420f9b:	add    ebx,DWORD PTR [ebx]
  420f9d:	sbb    dh,BYTE PTR [esi]
  420f9f:	neg    BYTE PTR [edx+eiz*8]
  420fa2:	mov    edx,0x232d5426
  420fa7:	lods   al,BYTE PTR ds:[esi]
  420fa8:	adc    al,0xb7
  420faa:	add    ecx,ecx
  420fac:	push   esp
  420fad:	fisttp QWORD PTR [edx]
  420faf:	dec    ebx
  420fb0:	mov    esi,0x2c3dd3a2
  420fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fb6:	mov    bh,dl
  420fb8:	jb     0x420f63
  420fba:	mov    ebx,0xfd260ffe
  420fbf:	sti    
  420fc0:	shr    bl,cl
  420fc2:	mov    eax,0x136d973a
  420fc7:	xor    DWORD PTR [ebx+ebx*1-0x33245a40],0x75a721ec
  420fd2:	push   eax
  420fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd4:	bound  ebp,QWORD PTR [ebx-0x4a]
  420fd7:	icebp  
  420fd8:	inc    edi
  420fd9:	jg     0x420f99
  420fdb:	dec    eax
  420fdc:	popa   
  420fdd:	aad    0xc5
  420fdf:	mov    dh,0x16
  420fe1:	clc    
  420fe2:	inc    edi
  420fe3:	dec    edx
  420fe4:	loope  0x421044
  420fe6:	mov    ds:0xaf8cefc4,eax
  420feb:	fldcw  WORD PTR ss:[edi-0x44]
  420fef:	cmp    eax,0xf72235d6
  420ff4:	stos   DWORD PTR es:[edi],eax
  420ff5:	clc    
  420ff6:	xchg   ebp,eax
  420ff7:	into   
  420ff8:	push   esp
  420ff9:	xchg   esi,eax
  420ffa:	cld    
  420ffb:	mov    ecx,0xdbbe079f
  421000:	mov    edx,DWORD PTR [edi]
  421002:	fmul   DWORD PTR [ecx-0xde95e3a]
  421008:	dec    esi
  421009:	stos   DWORD PTR es:[edi],eax
  42100a:	and    eax,0xb1b08d4b
  42100f:	mov    ah,0xf1
  421011:	mov    bh,0x51
  421013:	fstp   QWORD PTR [edx+0x38]
  421016:	bound  edi,QWORD PTR [esi]
  421018:	push   DWORD PTR [ebp-0x5c]
  42101b:	(bad)  
  42101c:	fnstsw WORD PTR [ebx]
  42101e:	pop    edx
  42101f:	push   ebx
  421020:	xor    edi,ecx
  421022:	or     al,0xf6
  421024:	sub    cl,BYTE PTR [edx]
  421026:	dec    ebp
  421027:	jno    0x420fcc
  421029:	mov    ebp,0xee8308fa
  42102e:	xchg   edx,eax
  42102f:	cli    
  421030:	in     eax,dx
  421031:	mov    BYTE PTR [ebx-0x70f9b4d0],al
  421037:	scas   al,BYTE PTR es:[edi]
  421038:	fld    DWORD PTR [ecx-0x44afe4e6]
  42103e:	jecxz  0x4210aa
  421040:	dec    esi
  421041:	xor    BYTE PTR [ebx],ah
  421043:	inc    ebx
  421044:	loope  0x42106c
  421046:	and    BYTE PTR [edx],ah
  421048:	jo     0x42101d
  42104a:	mov    ah,BYTE PTR [esi+edx*1-0x46]
  42104e:	stos   DWORD PTR es:[edi],eax
  42104f:	jmp    0x2f09:0x8bcd1b58
  421056:	pop    esp
  421057:	out    dx,al
  421058:	sti    
  421059:	imul   esi,DWORD PTR [edi-0x51],0xa
  42105d:	loopne 0x4210c9
  42105f:	jl     0x421081
  421061:	fstp   DWORD PTR [eax+0x7d]
  421064:	retf   0xd8ef
  421067:	lea    ebp,[ecx+eax*4+0x5873d3e8]
  42106e:	mov    eax,ds:0x63e00ca8
  421073:	jb     0x421055
  421075:	pop    edx
  421076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421077:	sub    al,0x5e
  421079:	add    bl,bh
  42107b:	jae    0x421094
  42107d:	mov    bl,0x79
  42107f:	adc    BYTE PTR [edi+0x5d],ah
  421082:	pop    ebp
  421083:	rcl    BYTE PTR [esi-0x38e619a],1
  421089:	xchg   ebx,eax
  42108a:	out    0x6e,eax
  42108c:	adc    edi,esp
  42108e:	inc    edi
  42108f:	test   al,0xc1
  421091:	push   edi
  421092:	out    0x1a,eax
  421094:	retf   
  421095:	and    eax,0xa8ccd15c
  42109a:	mov    al,0xe1
  42109c:	push   esp
  42109d:	xor    BYTE PTR [esi],ch
  42109f:	push   esp
  4210a0:	mov    al,ah
  4210a2:	out    0x43,al
  4210a4:	test   al,0xaa
  4210a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a7:	pop    es
  4210a8:	shl    dh,0x89
  4210ab:	xor    BYTE PTR [esi-0x56bbb46d],bl
  4210b1:	(bad)  
  4210b2:	pop    ebp
  4210b3:	bnd jnp 0x42109f
  4210b6:	stc    
  4210b7:	fst    DWORD PTR [ecx-0x54]
  4210ba:	shr    al,cl
  4210bc:	sub    DWORD PTR [ecx+0x7c],0xfffffff2
  4210c0:	(bad)  
  4210c2:	xchg   ebp,eax
  4210c3:	dec    ebp
  4210c4:	sbb    DWORD PTR [esi+0x7b0382ad],ebx
  4210ca:	push   edx
  4210cb:	std    
  4210cc:	push   0xffffffe7
  4210ce:	dec    ecx
  4210cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d0:	daa    
  4210d1:	icebp  
  4210d2:	mov    edi,DWORD PTR [esi+0x24408b27]
  4210d8:	add    al,0xca
  4210da:	cmp    BYTE PTR [esi-0x3b],ah
  4210dd:	punpckhdq mm7,QWORD PTR [esi]
  4210e0:	mov    edi,DWORD PTR [esi]
  4210e2:	or     bl,dl
  4210e4:	pop    es
  4210e5:	add    eax,0x280d076b
  4210ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210eb:	(bad)  
  4210ec:	je     0x4210d2
  4210ee:	retf   
  4210ef:	cdq    
  4210f0:	jl     0x42116a
  4210f2:	ds xchg ebp,eax
  4210f4:	add    eax,DWORD PTR [edi]
  4210f6:	ficom  DWORD PTR [eax-0x2f]
  4210f9:	cmp    BYTE PTR [eax+ecx*2],ch
  4210fc:	stc    
  4210fd:	ficom  DWORD PTR [edi+0x4a]
  421100:	mov    cl,0xc6
  421102:	js     0x421115
  421104:	imul   esp,DWORD PTR [ebx-0x65],0x10
  421108:	cmp    al,0x8f
  42110a:	shr    BYTE PTR [ecx],cl
  42110c:	push   edi
  42110d:	ret    0x4ebe
  421110:	popa   
  421111:	or     esp,DWORD PTR [ecx+0x4e2317a4]
  421117:	imul   esp,DWORD PTR [esi+edi*1+0x69],0x7c242f83
  42111f:	xchg   edi,eax
  421120:	sub    dl,0x5e
  421123:	pop    eax
  421124:	mov    al,BYTE PTR [bx+di-0x687b]
  421129:	popf   
  42112a:	push   edi
  42112b:	add    eax,0xb46bbde
  421130:	dec    esp
  421131:	(bad)  
  421132:	test   DWORD PTR ds:0x98c8317f,edx
  421138:	fisttp DWORD PTR [ecx]
  42113a:	fldl2t 
  42113c:	rcr    BYTE PTR [ebx],0x3e
  42113f:	jl     0x42113a
  421141:	or     dh,al
  421143:	in     eax,dx
  421144:	test   eax,0xcaab448b
  421149:	es mov bh,0xe4
  42114c:	(bad)  
  42114e:	fdivr  st(0),st
  421150:	ins    BYTE PTR es:[edi],dx
  421151:	cs push 0xffffffba
  421154:	sbb    DWORD PTR [eax-0x58],0x99b4aa41
  42115b:	aaa    
  42115c:	sub    ah,BYTE PTR [edi]
  42115e:	inc    ebp
  42115f:	(bad)  
  421160:	nop
  421161:	popf   
  421162:	adc    DWORD PTR [ecx+0x2d4547c4],esi
  421168:	mov    cl,al
  42116a:	sub    al,0xe9
  42116c:	sbb    esi,DWORD PTR [edx+eiz*8-0x54]
  421170:	mov    ebx,0x9553215e
  421175:	int    0xfc
  421177:	mov    cl,0x72
  421179:	wrmsr  
  42117b:	xlat   BYTE PTR ds:[ebx]
  42117c:	test   eax,0xa0f391a3
  421181:	ret    0xeebf
  421184:	pop    eax
  421185:	mov    WORD PTR [edx-0x1d],gs
  421188:	adc    BYTE PTR [ecx-0x8],dh
  42118b:	mov    esi,0x53053467
  421190:	adc    eax,0xb932c7b0
  421195:	stos   DWORD PTR es:[edi],eax
  421196:	jmpw   0x6391
  42119a:	pop    es
  42119b:	mov    edx,0x4f465f06
  4211a0:	stc    
  4211a1:	xor    dh,cl
  4211a3:	push   edi
  4211a4:	jne    0x4211f5
  4211a6:	not    esp
  4211a8:	push   ebp
  4211a9:	ret    
  4211aa:	dec    esp
  4211ab:	sbb    eax,0xd46515ac
  4211b0:	jmp    0x681354dd
  4211b5:	stos   BYTE PTR es:[edi],al
  4211b6:	loope  0x421215
  4211b8:	aad    0x52
  4211ba:	fstp   TBYTE PTR [ecx+0x38]
  4211bd:	push   ebp
  4211be:	xchg   ecx,eax
  4211bf:	ret    0x31ea
  4211c2:	leave  
  4211c3:	mov    bh,0x2d
  4211c5:	dec    edx
  4211c6:	sub    eax,0x1dc017fe
  4211cb:	or     BYTE PTR [edi+0x57e1bd59],ch
  4211d1:	and    DWORD PTR [ebp+edx*1+0x54],0x38
  4211d6:	pop    edi
  4211d7:	xchg   ecx,eax
  4211d8:	mov    esp,0x11b70bff
  4211dd:	leave  
  4211de:	push   0x5b0d245c
  4211e3:	lods   al,BYTE PTR ds:[esi]
  4211e4:	mov    dh,0x64
  4211e6:	xchg   ecx,eax
  4211e7:	add    BYTE PTR ss:[edi+edx*2],0x46
  4211ec:	(bad)  
  4211ed:	std    
  4211ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ef:	std    
  4211f0:	sbb    BYTE PTR [ebp-0x6c],0x9c
  4211f4:	cli    
  4211f5:	scas   al,BYTE PTR es:[edi]
  4211f6:	mov    ebp,DWORD PTR [ebp-0x54f79fe5]
  4211fc:	pop    eax
  4211fd:	lock push 0x60dc1f69
  421203:	gs inc cx
  421206:	inc    esi
  421207:	popf   
  421208:	pop    ecx
  421209:	xchg   sp,ax
  42120b:	fsub   st(2),st
  42120d:	inc    eax
  42120e:	call   0xeaae8821
  421213:	xchg   edi,eax
  421214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421215:	(bad)  
  421217:	mov    ecx,0x229cee99
  42121c:	push   ds
  42121d:	adc    BYTE PTR [eax],ah
  42121f:	inc    esi
  421220:	add    BYTE PTR [edx],dl
  421222:	retf   
  421223:	rol    BYTE PTR [edx-0xf],0x5a
  421227:	jae    0x421230
  421229:	push   eax
  42122a:	sub    eax,0xeb9072f5
  42122f:	xchg   BYTE PTR [eax+0x1e],dl
  421232:	mov    edi,0x360f7e4e
  421237:	ror    BYTE PTR [edi],cl
  421239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42123a:	push   esi
  42123b:	arpl   WORD PTR [ebp-0x3c],dx
  42123e:	out    dx,eax
  42123f:	jne    0x42122d
  421241:	inc    ebp
  421242:	stos   DWORD PTR es:[edi],eax
  421243:	jmp    FWORD PTR [ecx+0x3e]
  421246:	imul   DWORD PTR [edi]
  421248:	adc    esi,DWORD PTR [edx]
  42124a:	cld    
  42124b:	mov    ds:0xac4c41fe,al
  421250:	iret   
  421251:	or     dh,BYTE PTR [edi+0x1a9dcd44]
  421257:	les    ebx,FWORD PTR [ecx-0x1c]
  42125a:	ds pop ecx
  42125c:	popf   
  42125d:	cmp    ebp,DWORD PTR [ebx]
  42125f:	rcl    BYTE PTR [ebx+eiz*8+0x565cbae6],1
  421266:	push   0x331893a
  42126b:	pop    es
  42126c:	mov    WORD PTR [edi+ebx*8+0x2b78f712],gs
  421273:	cmp    ebx,DWORD PTR [eax+0x24]
  421276:	mov    DWORD PTR [ecx-0x77],0xd8bcecc
  42127d:	mov    eax,ds:0xe234d28b
  421282:	ins    DWORD PTR es:[edi],dx
  421283:	xchg   ebx,eax
  421284:	adc    ecx,DWORD PTR [ecx+0x31]
  421287:	jmp    0xb97e0e3
  42128c:	(bad)  
  42128d:	leave  
  42128e:	sbb    BYTE PTR ds:0x24f306f2,dh
  421294:	inc    ecx
  421295:	jecxz  0x4212ce
  421297:	(bad)  
  421298:	xor    al,0x15
  42129a:	xor    ebp,edx
  42129c:	push   esi
  42129d:	sbb    bl,BYTE PTR [edi]
  42129f:	add    BYTE PTR [edi],0xa9
  4212a2:	iret   
  4212a3:	popf   
  4212a4:	pusha  
  4212a5:	add    BYTE PTR [edx-0x7feb0b5c],bh
  4212ab:	lock mov eax,ds:0xcd2f6bd3
  4212b1:	mov    ds:0x3e075509,eax
  4212b7:	jg     0x4212bb
  4212b9:	das    
  4212ba:	xor    BYTE PTR [esi],cl
  4212bc:	outs   dx,DWORD PTR ds:[esi]
  4212bd:	(bad)  
  4212be:	scas   al,BYTE PTR es:[edi]
  4212bf:	in     eax,dx
  4212c0:	xchg   edi,eax
  4212c1:	outs   dx,BYTE PTR ds:[esi]
  4212c2:	dec    ebx
  4212c3:	test   al,0x22
  4212c5:	xor    BYTE PTR [ebx],al
  4212c7:	arpl   WORD PTR [eax],sp
  4212c9:	add    eax,0x5782e2d3
  4212ce:	sbb    eax,0xfa76cf42
  4212d3:	jnp    0x42126c
  4212d5:	pop    ebx
  4212d6:	mov    dh,0x51
  4212d8:	jmp    0x4212f1
  4212da:	or     eax,0xf676bc33
  4212df:	aas    
  4212e0:	scas   eax,DWORD PTR es:[edi]
  4212e1:	add    DWORD PTR [ebx-0x39],esi
  4212e4:	imul   esi,DWORD PTR [ecx],0x31
  4212e7:	jp     0x421333
  4212e9:	(bad)  
  4212ea:	pop    esp
  4212eb:	and    BYTE PTR [eax+ecx*4],ch
  4212ee:	sahf   
  4212ef:	sub    DWORD PTR [edi+0x1f],eax
  4212f2:	push   ecx
  4212f3:	jne    0x421308
  4212f5:	cli    
  4212f6:	sub    BYTE PTR [ebp-0x8],dh
  4212f9:	jne    0x421325
  4212fb:	das    
  4212fc:	jns    0x4212de
  4212fe:	ret    0xaa51
  421301:	popa   
  421302:	mov    cl,0xe2
  421304:	lahf   
  421305:	test   al,0x15
  421307:	leave  
  421308:	iret   
  421309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130a:	rcr    DWORD PTR [ecx-0x71cf59b9],0x47
  421311:	popf   
  421312:	dec    eax
  421313:	adc    bh,BYTE PTR ds:0xb392a49c
  421319:	add    al,0x1d
  42131b:	cdq    
  42131c:	aas    
  42131d:	xor    DWORD PTR [esi],esi
  42131f:	shl    eax,0x1d
  421322:	loop   0x42133d
  421324:	mov    WORD PTR [esi-0x7f],ss
  421327:	dec    esi
  421328:	lahf   
  421329:	push   0xffffffbc
  42132b:	leave  
  42132c:	aaa    
  42132d:	jmp    0x42138a
  42132f:	stc    
  421330:	sbb    bh,ah
  421332:	in     eax,0x2a
  421334:	gs jl  0x42139e
  421337:	pop    esp
  421338:	fcomp  DWORD PTR [ebx+0x3f]
  42133b:	enter  0x86b8,0xc0
  42133f:	jle    0x4212cf
  421341:	push   0xffffff8a
  421343:	dec    ebx
  421344:	inc    ebx
  421345:	nop
  421346:	pop    ecx
  421347:	leave  
  421348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421349:	xchg   esp,eax
  42134a:	or     DWORD PTR ds:0xc910f8a0,ebx
  421350:	dec    ebx
  421351:	mov    dl,0xad
  421353:	jl     0x4213c1
  421355:	arpl   ax,cx
  421357:	pop    edx
  421358:	cwde   
  421359:	outs   dx,DWORD PTR ds:[esi]
  42135a:	(bad)  
  42135b:	cli    
  42135c:	mov    ebp,0xf6ab89d
  421361:	pop    eax
  421362:	cmp    BYTE PTR [edx],dh
  421364:	sbb    edx,esi
  421366:	lds    esp,FWORD PTR [ecx]
  421368:	mov    bh,0x84
  42136a:	in     eax,0x7f
  42136c:	xchg   ebp,eax
  42136d:	in     eax,dx
  42136e:	dec    DWORD PTR [eax]
  421370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421371:	sbb    al,BYTE PTR [eax+eax*4+0x35]
  421375:	aaa    
  421376:	adc    eax,0x7b5e4c00
  42137b:	loop   0x4213ab
  42137d:	(bad)  
  42137e:	xor    eax,0xe6fb514a
  421383:	loopne 0x42130e
  421385:	call   0x514219d1
  42138a:	sahf   
  42138b:	ja     0x4213ec
  42138d:	and    bh,dh
  42138f:	mov    bh,0x7b
  421391:	in     al,0xa
  421393:	and    BYTE PTR [ecx-0x1e4d2729],0x2c
  42139a:	call   0xa03:0xd0dc15e1
  4213a1:	(bad)  
  4213a2:	or     BYTE PTR [esi+0x50],dl
  4213a5:	or     DWORD PTR [ebx+0x6e85d36b],esi
  4213ab:	paddusw mm2,mm7
  4213ae:	sbb    dl,BYTE PTR [edi+0x67]
  4213b1:	xor    dl,BYTE PTR [esi-0x3e35d1b1]
  4213b7:	inc    esp
  4213b8:	shl    BYTE PTR [esi-0x52],cl
  4213bb:	jge    0x421428
  4213bd:	xor    esi,DWORD PTR [esi-0x4e]
  4213c0:	rcr    BYTE PTR [esi-0x6f],1
  4213c3:	mov    ebp,0xc94301e4
  4213c8:	mov    ds:0xd1448a00,al
  4213cd:	arpl   WORD PTR [esi-0x92e96b4],si
  4213d3:	pop    ss
  4213d4:	sahf   
  4213d5:	add    dl,ah
  4213d7:	popf   
  4213d8:	pop    es
  4213d9:	adc    al,0xd4
  4213db:	add    eax,DWORD PTR [ebx]
  4213dd:	stc    
  4213de:	jnp    0x421397
  4213e0:	pusha  
  4213e1:	mov    eax,DWORD PTR [esi+ebp*1]
  4213e4:	jge    0x4213f4
  4213e6:	clc    
  4213e7:	add    al,0x99
  4213e9:	or     ch,BYTE PTR [ecx]
  4213eb:	and    BYTE PTR [edi],ah
  4213ed:	xrelease mov DWORD PTR [ebx],ecx
  4213f0:	sub    eax,0xbae24815
  4213f5:	fnstcw WORD PTR [esi+0x23]
  4213f8:	pop    ebx
  4213f9:	fstp   st(5)
  4213fb:	dec    esp
  4213fc:	sbb    al,0x75
  4213fe:	rol    BYTE PTR [edx-0x5ae44c6f],0x49
  421405:	pop    ds
  421406:	imul   cl
  421408:	mov    ds:0xa25b965,al
  42140d:	or     DWORD PTR [edi+edx*2-0x5831ab99],eax
  421414:	inc    ebx
  421415:	(bad)  
  421416:	cld    
  421417:	scas   eax,DWORD PTR es:[edi]
  421418:	add    esi,eax
  42141a:	test   al,0x37
  42141c:	add    DWORD PTR [ecx+0x4c],ebp
  42141f:	inc    esi
  421420:	mov    ebp,0x8fd3888e
  421425:	pop    eax
  421426:	add    eax,0xb9320528
  42142b:	std    
  42142c:	push   ds
  42142d:	das    
  42142e:	dec    eax
  42142f:	push   0x8a65fc79
  421434:	dec    eax
  421435:	(bad)  
  421436:	daa    
  421437:	popa   
  421438:	xchg   ebp,eax
  421439:	in     al,dx
  42143a:	adc    ebx,DWORD PTR [edi+0x13]
  42143d:	push   ss
  42143e:	push   cs
  42143f:	pop    esp
  421440:	and    esp,DWORD PTR [ebx-0x14]
  421443:	mov    edi,0x555d70f9
  421448:	test   BYTE PTR [ebx+ebx*2],ah
  42144b:	shr    esi,0xee
  42144e:	pusha  
  42144f:	mov    cl,0x39
  421451:	dec    ebx
  421452:	mov    edx,0xc5b25d31
  421457:	mov    edx,0x6e1783a8
  42145c:	sti    
  42145d:	ins    DWORD PTR es:[edi],dx
  42145e:	xchg   esi,eax
  42145f:	stos   DWORD PTR es:[edi],eax
  421460:	mov    DWORD PTR [esi+0x30],esi
  421463:	mov    esp,0x62777847
  421468:	mov    ?,ebx
  42146a:	mov    ebp,cs
  42146c:	or     ah,BYTE PTR [edx+eax*4+0x63b6596f]
  421473:	loop   0x42147e
  421475:	gs dec ebp
  421477:	pop    esp
  421478:	inc    ecx
  421479:	daa    
  42147a:	pop    es
  42147b:	cmp    eax,0xc12a6db7
  421480:	jb     0x4214fa
  421482:	and    dl,BYTE PTR [edi+0x25]
  421485:	jo     0x42149b
  421487:	lods   eax,DWORD PTR ds:[esi]
  421488:	fdivrp st(7),st
  42148a:	les    ecx,FWORD PTR [edx-0x8c77894]
  421490:	and    DWORD PTR [eax-0x4c57e49a],eax
  421496:	or     esp,DWORD PTR [ebp+0x374da3fa]
  42149c:	sbb    BYTE PTR [si+0x63e],dh
  4214a1:	lods   eax,DWORD PTR ds:[esi]
  4214a2:	mov    edx,0x9607af7e
  4214a7:	push   edx
  4214a8:	add    eax,0xba3a38fd
  4214ad:	inc    esp
  4214ae:	xchg   dl,dl
  4214b0:	xchg   edi,eax
  4214b1:	out    0x78,al
  4214b3:	popa   
  4214b4:	add    DWORD PTR [ebx-0x51],edx
  4214b7:	cmp    BYTE PTR [edx+edi*4+0x2185b7df],0x4a
  4214bf:	cmp    eax,0x6f4cac18
  4214c4:	adc    al,0x96
  4214c6:	cmp    esi,ecx
  4214c8:	fiadd  WORD PTR [ecx]
  4214ca:	aam    0x70
  4214cc:	mov    edi,0xf50f4d6d
  4214d1:	jnp    0x4214b1
  4214d3:	mov    dh,BYTE PTR [edx]
  4214d5:	test   DWORD PTR [eax],ecx
  4214d7:	xchg   esp,eax
  4214d8:	repnz dec esp
  4214da:	cld    
  4214db:	mov    ds:0xbc641fab,eax
  4214e0:	adc    BYTE PTR [edi+edx*4+0x18cb17cb],dl
  4214e7:	cmp    al,0xf1
  4214e9:	cdq    
  4214ea:	mov    esi,0x95d26bd3
  4214ef:	aam    0x0
  4214f1:	fiadd  WORD PTR [ecx-0x1b]
  4214f4:	mov    BYTE PTR [eax],dl
  4214f6:	mov    ebx,0xa4a298c7
  4214fb:	or     al,0xf7
  4214fd:	or     al,0x5f
  4214ff:	cmp    al,0x84
  421501:	inc    edx
  421502:	and    al,0x2d
  421504:	jp     0x42151a
  421506:	sti    
  421507:	inc    eax
  421508:	cmp    bl,ch
  42150a:	bound  edi,QWORD PTR fs:[ebx]
  42150d:	or     ah,al
  42150f:	sbb    bl,BYTE PTR [eax-0x75ae33f2]
  421515:	ins    BYTE PTR es:[edi],dx
  421516:	xor    al,0x4b
  421518:	cmp    edx,DWORD PTR [ecx-0x1adaa6f2]
  42151e:	xor    BYTE PTR [ecx+0x14],bl
  421521:	clc    
  421522:	arpl   di,bx
  421524:	shl    BYTE PTR [edx],1
  421526:	sbb    esp,DWORD PTR [esi+eiz*1+0x6c]
  42152a:	push   0x501201a1
  42152f:	test   DWORD PTR [ecx+0x525b0c2d],edi
  421535:	repz fcmovu st,st(7)
  421538:	xor    DWORD PTR [ebx-0x9a2f18a],0x51dbc6f
  421542:	out    0x5a,eax
  421544:	push   esp
  421545:	pop    eax
  421546:	jae    0x421540
  421548:	pop    edx
  421549:	adc    DWORD PTR [ebx+edi*8-0x75],edi
  42154d:	jg     0x421534
  42154f:	pop    ebp
  421550:	cmp    al,dh
  421552:	cmp    esp,DWORD PTR [edi]
  421554:	adc    eax,0x53866ca8
  421559:	imul   ebx,ebx,0xd7f733a8
  42155f:	adc    al,0x42
  421561:	pop    esi
  421562:	cmp    BYTE PTR [esi+0x409155cd],dh
  421568:	repz or eax,0x71c94c7
  42156e:	test   al,0x87
  421570:	push   esi
  421571:	inc    esp
  421572:	aad    0x44
  421574:	cmc    
  421575:	pop    ecx
  421576:	dec    ebp
  421577:	ins    BYTE PTR es:[edi],dx
  421578:	mov    edx,0xcce72a49
  42157d:	data16 mov al,ds:0x11bb45ed
  421583:	jae    0x421577
  421585:	aas    
  421586:	int    0x71
  421588:	mov    BYTE PTR [ebp-0x26baa678],al
  42158e:	adc    cl,BYTE PTR [eax+0x60047d03]
  421594:	popf   
  421595:	aaa    
  421596:	xchg   ecx,eax
  421597:	out    dx,eax
  421598:	lods   al,BYTE PTR ds:[esi]
  421599:	ror    BYTE PTR [esp+edi*8],cl
  42159c:	inc    esi
  42159d:	retf   
  42159e:	xchg   BYTE PTR [ebp+0x6012ebb1],cl
  4215a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a5:	call   DWORD PTR [eax+ecx*8+0x46a4f128]
  4215ac:	mov    edi,0xbf0c8f3c
  4215b1:	dec    esi
  4215b2:	retf   
  4215b3:	aam    0x51
  4215b5:	aad    0xae
  4215b7:	sub    eax,0x7f50ef62
  4215bc:	fild   DWORD PTR [ebx+0x5a]
  4215bf:	loopne 0x4215c3
  4215c1:	sub    BYTE PTR [edi+edx*2],bh
  4215c4:	outs   dx,DWORD PTR ds:[esi]
  4215c5:	hlt    
  4215c6:	dec    ebx
  4215c7:	les    ecx,FWORD PTR [ecx-0xfb0fb44]
  4215cd:	jmp    0x4215dc
  4215cf:	add    bl,bl
  4215d1:	and    al,0x1a
  4215d3:	je     0x421599
  4215d5:	sub    al,0xb2
  4215d7:	and    dl,ah
  4215d9:	in     al,dx
  4215da:	aaa    
  4215db:	inc    edi
  4215dc:	xor    ch,cl
  4215de:	lahf   
  4215df:	dec    ebx
  4215e0:	outs   dx,DWORD PTR ds:[esi]
  4215e1:	jmp    0x4215a5
  4215e3:	stos   DWORD PTR es:[edi],eax
  4215e4:	gs ret 
  4215e6:	inc    ebx
  4215e7:	mov    eax,0x84997850
  4215ec:	iret   
  4215ed:	and    eax,0x8443d9f6
  4215f2:	pop    edi
  4215f3:	sub    ebx,0xffffffd3
  4215f6:	scas   al,BYTE PTR es:[edi]
  4215f7:	sbb    al,0x8e
  4215f9:	ja     0x42164d
  4215fb:	mov    edx,0x619ef30
  421600:	imul   ebp,ebp,0x89ada10
  421606:	outs   dx,BYTE PTR ds:[esi]
  421607:	jg     0x4215a1
  421609:	push   edx
  42160a:	inc    ecx
  42160b:	mov    dh,0x4d
  42160d:	cmp    ebx,DWORD PTR [edi-0x5a]
  421610:	cmp    BYTE PTR [eax-0x31],dl
  421613:	(bad)  
  421614:	xor    bh,al
  421616:	mov    ebp,0xdea62d8b
  42161b:	adc    eax,0x226cbf7e
  421620:	dec    ebx
  421621:	imul   esi,DWORD PTR [edi],0xffffff98
  421624:	rol    DWORD PTR [eax+0x5d],cl
  421627:	mov    esi,edx
  421629:	fild   WORD PTR [ecx+0x2]
  42162c:	out    0xeb,eax
  42162e:	div    DWORD PTR [eax]
  421630:	lea    ecx,[ebp-0x72bb646f]
  421636:	xchg   DWORD PTR [ebp-0x2302066e],edi
  42163c:	repz imul BYTE PTR [eax-0x695e701b]
  421643:	sub    ebp,DWORD PTR [ecx*4+0x5179f138]
  42164a:	jb     0x421613
  42164c:	add    BYTE PTR [ebp-0x46],bh
  42164f:	mov    edx,0xb7fed7b
  421654:	xor    BYTE PTR [eax+ecx*8],0xc4
  421658:	xchg   ebx,eax
  421659:	outs   dx,BYTE PTR ds:[esi]
  42165a:	sbb    BYTE PTR [esi+ecx*1-0x1],cl
  42165e:	xchg   BYTE PTR [esi-0x5dd87537],dh
  421664:	dec    ebx
  421665:	jne    0x421636
  421667:	dec    esi
  421668:	bnd jne 0x421600
  42166b:	xchg   esi,eax
  42166c:	ret    
  42166d:	(bad)  
  42166e:	adc    al,0xc4
  421670:	imul   BYTE PTR [ebp-0x43]
  421673:	xchg   ebp,eax
  421674:	push   ecx
  421675:	dec    ebx
  421676:	out    0xde,al
  421678:	xor    al,0xaf
  42167a:	push   0xffffffc9
  42167c:	xchg   ebp,eax
  42167d:	mov    al,ds:0x7a304c68
  421682:	jbe    0x4216ff
  421684:	fimul  WORD PTR [ebx+0x33d990e0]
  42168a:	test   eax,0x2b1d3896
  42168f:	scas   al,BYTE PTR es:[edi]
  421690:	cs mov ebp,0x5873dbbc
  421696:	test   eax,0x240270cb
  42169b:	dec    esp
  42169c:	js     0x4216f1
  42169e:	xor    cl,cl
  4216a0:	mov    WORD PTR [esi+0xc],fs
  4216a3:	pop    es
  4216a4:	jb     0x4216e6
  4216a6:	inc    esi
  4216a7:	push   eax
  4216a8:	popf   
  4216a9:	popf   
  4216aa:	mov    ah,0x2c
  4216ac:	(bad)  
  4216ad:	aam    0x55
  4216af:	xor    eax,0x46237706
  4216b4:	pop    edi
  4216b5:	iret   
  4216b6:	rcl    BYTE PTR [esi+0x8],1
  4216b9:	repnz mov WORD PTR [bp+0x1910],es
  4216bf:	mov    bl,0x8f
  4216c1:	cwde   
  4216c2:	(bad)  
  4216c3:	mov    esp,DWORD PTR [ebx]
  4216c5:	push   ebx
  4216c6:	adc    bl,BYTE PTR [edi+0x449a3617]
  4216cc:	push   esp
  4216cd:	dec    BYTE PTR [ecx+eax*2]
  4216d0:	dec    esi
  4216d1:	mov    ds:0xd063a420,al
  4216d6:	push   0xf5e5b571
  4216db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216dc:	mov    al,0xd7
  4216de:	(bad)  
  4216e0:	push   edi
  4216e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216e2:	jnp    0x421712
  4216e4:	adc    al,0x54
  4216e6:	jecxz  0x421697
  4216e8:	push   ebx
  4216e9:	fild   DWORD PTR [ebp+0x5ad1248f]
  4216ef:	jno    0x421759
  4216f1:	xor    bl,BYTE PTR [eax+0x69818411]
  4216f7:	popa   
  4216f8:	and    BYTE PTR [eax+0x673c7241],bh
  4216fe:	into   
  4216ff:	in     al,0x7a
  421701:	inc    esp
  421702:	xchg   esp,eax
  421703:	fbstp  TBYTE PTR [eax-0x2675ac70]
  421709:	add    al,BYTE PTR [edi+0x6a]
  42170c:	call   0x25c53026
  421711:	jb     0x4216eb
  421713:	xor    BYTE PTR [esi+0x783409fe],dl
  421719:	dec    esi
  42171a:	in     eax,dx
  42171b:	fbstp  TBYTE PTR [esi-0x71]
  42171e:	bound  eax,QWORD PTR [edi-0x74d1a2e0]
  421724:	mov    bl,0xac
  421726:	add    al,0x5d
  421728:	aas    
  421729:	fld    TBYTE PTR [edi-0x5dffead2]
  42172f:	das    
  421730:	les    esp,FWORD PTR [esi+ebx*8+0x71edb38b]
  421737:	aas    
  421738:	dec    esp
  421739:	stos   DWORD PTR es:[edi],eax
  42173a:	pop    esi
  42173b:	shr    BYTE PTR [ebx+0x34],cl
  42173e:	dec    ebp
  42173f:	mov    edx,0x7a131797
  421744:	ret    0x62ea
  421747:	sbb    DWORD PTR [ebp+0x39e15a09],edx
  42174d:	add    DWORD PTR [ecx],ebp
  42174f:	or     eax,0x982db091
  421754:	or     BYTE PTR [ecx-0x74849efa],0xa7
  42175b:	loope  0x421726
  42175d:	add    eax,0x7b295fa6
  421762:	mov    ah,0xb3
  421764:	test   al,0x3
  421766:	sub    bh,dh
  421768:	dec    ebx
  421769:	cdq    
  42176a:	sbb    eax,DWORD PTR [edi+0x7d9f4abb]
  421770:	and    esi,DWORD PTR [ebx+0x6478509e]
  421776:	push   esp
  421777:	add    cl,bl
  421779:	sub    ah,dl
  42177b:	push   eax
  42177c:	cmp    al,0x13
  42177e:	lods   al,BYTE PTR ds:[esi]
  42177f:	pop    edx
  421780:	aad    0xf0
  421782:	dec    esp
  421783:	or     ebp,DWORD PTR [ecx+edi*8+0x3deea95]
  42178a:	mov    ecx,0xc6fb889a
  42178f:	sub    eax,0xf3326863
  421794:	jl     0x4217f4
  421796:	push   esi
  421797:	rol    BYTE PTR [ebp+0x4c],0xc2
  42179b:	push   esp
  42179c:	jp     0x4217d8
  42179e:	scas   al,BYTE PTR es:[edi]
  42179f:	(bad)  
  4217a0:	int    0xce
  4217a2:	and    al,0xd1
  4217a4:	xchg   BYTE PTR gs:0xa9643da3,cl
  4217ab:	imul   esp,DWORD PTR [edx+0x21bc01f1],0xffffff9c
  4217b2:	jns    0x4217d3
  4217b4:	mov    ebp,ecx
  4217b6:	mov    ds:0xf6fdd3dd,al
  4217bb:	adc    esi,esp
  4217bd:	mov    edx,0xa7244203
  4217c2:	xor    eax,0x269ed5b9
  4217c7:	mov    DWORD PTR [edi-0x76d608c],ebx
  4217cd:	adc    cl,al
  4217cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217d0:	sti    
  4217d1:	xor    eax,0x1e53a34e
  4217d6:	sahf   
  4217d7:	and    BYTE PTR [ebx+0x26],al
  4217da:	or     eax,0xee7fb55e
  4217df:	push   0x904270dd
  4217e4:	push   ebp
  4217e5:	call   0x4b7:0x719e81f2
  4217ec:	rol    BYTE PTR [edi],cl
  4217ee:	xor    al,0xc6
  4217f0:	mov    cl,0x28
  4217f2:	stc    
  4217f3:	fdivr  st(2),st
  4217f5:	sbb    ecx,edx
  4217f7:	inc    ebp
  4217f8:	je     0x421806
  4217fa:	push   ss
  4217fb:	shl    ch,0xc1
  4217fe:	rcr    DWORD PTR [ebx],1
  421800:	scas   eax,DWORD PTR es:[edi]
  421801:	ret    
  421802:	aaa    
  421803:	jl     0x421879
  421805:	ret    
  421806:	mov    ebx,0x4d79d294
  42180b:	pop    ebx
  42180c:	ret    0x5bee
  42180f:	xor    BYTE PTR [ebx+0x6fbecb4],0xb8
  421816:	cli    
  421817:	or     eax,0xc7dc0a15
  42181c:	mov    bh,0x66
  42181e:	inc    DWORD PTR [edi-0x31]
  421821:	adc    DWORD PTR [eax-0x5],ecx
  421824:	xchg   DWORD PTR [edi+0x696aff66],edx
  42182a:	(bad)  
  42182b:	inc    BYTE PTR [eax+0x48]
  42182e:	mov    esp,DWORD PTR [eax-0x1122ba3c]
  421834:	adc    eax,0xfa1d63b5
  421839:	mov    edi,?
  42183b:	xchg   BYTE PTR [esi+0x2aa4edca],ah
  421841:	or     DWORD PTR [edi],ebx
  421843:	test   DWORD PTR [edx+0x5a],0xf545b2bc
  42184a:	lock repnz std 
  42184d:	out    0xa5,eax
  42184f:	mul    DWORD PTR [ecx]
  421851:	js     0x4217e1
  421853:	dec    esp
  421854:	inc    esp
  421855:	lahf   
  421856:	leave  
  421857:	(bad)
  42185a:	jl     0x4218a9
  42185c:	mov    esp,DWORD PTR [edi-0x57]
  42185f:	addr16 or eax,0xc53185ce
  421865:	pop    eax
  421866:	xchg   bp,ax
  421868:	call   0x61e:0xcb8110bc
  42186f:	cld    
  421870:	pop    ebp
  421871:	add    DWORD PTR [ebx+0x3ec69e33],esp
  421877:	xchg   ebp,eax
  421878:	or     eax,0xfa77b932
  42187d:	xor    ch,BYTE PTR [edx+0x22a3432]
  421883:	stc    
  421884:	imul   edx,esp,0x234d5943
  42188a:	stos   DWORD PTR es:[edi],eax
  42188b:	inc    eax
  42188c:	inc    eax
  42188d:	sbb    edx,0x6b
  421890:	pop    edx
  421891:	out    dx,eax
  421892:	jbe    0x421873
  421894:	sbb    ch,dl
  421896:	sbb    ebx,edx
  421898:	push   ebx
  421899:	out    dx,al
  42189a:	pop    ds
  42189b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42189c:	or     DWORD PTR [ebx-0x16bdc510],esp
  4218a2:	in     eax,dx
  4218a3:	out    dx,al
  4218a4:	fmul   DWORD PTR [edi]
  4218a6:	les    ebx,FWORD PTR [ebx+0x2bba0855]
  4218ac:	aas    
  4218ad:	add    BYTE PTR [ecx+0x787ec4e5],ah
  4218b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b4:	dec    ebp
  4218b5:	shr    esp,1
  4218b7:	adc    DWORD PTR [edi+0x645207dc],esi
  4218bd:	push   ss
  4218be:	push   ss
  4218bf:	repnz adc bh,dl
  4218c2:	sbb    al,0x5e
  4218c4:	push   0x2f327bee
  4218c9:	cmp    al,dl
  4218cb:	and    DWORD PTR [ecx-0x67],0x5c
  4218cf:	inc    ecx
  4218d0:	cmc    
  4218d1:	jb     0x42189d
  4218d3:	in     eax,0xca
  4218d5:	(bad)  
  4218d6:	jmp    0x421865
  4218d8:	inc    ebp
  4218d9:	add    BYTE PTR [esi-0x64],bl
  4218dc:	test   dl,bl
  4218de:	iret   
  4218df:	loop   0x421929
  4218e1:	scas   al,BYTE PTR es:[edi]
  4218e2:	bound  ebx,QWORD PTR [ebx+0x730b803a]
  4218e8:	xchg   edx,eax
  4218e9:	mov    al,0xcc
  4218eb:	and    edx,DWORD PTR [edx]
  4218ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218ee:	fs cmp cl,ah
  4218f1:	mov    bh,dl
  4218f3:	jp     0x42193c
  4218f5:	sahf   
  4218f6:	sar    BYTE PTR [eax],cl
  4218f8:	xor    eax,0x5a82149e
  4218fd:	arpl   WORD PTR [esi+0x5681b5fb],dx
  421903:	mov    eax,0x980bb1c3
  421908:	inc    edx
  421909:	nop
  42190a:	pop    ss
  42190b:	jb     0x4218db
  42190d:	in     al,dx
  42190e:	not    ah
  421910:	cmp    dl,BYTE PTR [ebx]
  421912:	loope  0x4218d1
  421914:	test   BYTE PTR [ebx],dl
  421916:	lds    ebx,FWORD PTR [edi]
  421918:	leave  
  421919:	sub    ebp,DWORD PTR [ebx-0x6]
  42191c:	adc    dh,BYTE PTR [eax-0x3e720b20]
  421922:	lock ret 
  421924:	mov    ch,BYTE PTR [ebp+0x28]
  421927:	pop    ecx
  421928:	les    ecx,FWORD PTR [esi-0xe4fd5a]
  42192e:	add    bh,BYTE PTR fs:[ecx-0x6]
  421932:	push   ebp
  421933:	xor    eax,0x6a5df76
  421938:	mov    dl,0x3d
  42193a:	mov    al,0xe4
  42193c:	dec    esi
  42193d:	mov    esi,0x2612ef37
  421942:	mov    esp,0xa90ebde9
  421947:	into   
  421948:	sub    BYTE PTR [edx-0x297426b3],al
  42194e:	lock pop esp
  421950:	jmp    0x22dd92a6
  421955:	stos   DWORD PTR es:[edi],eax
  421956:	in     eax,dx
  421957:	mov    ebx,0xb2934efd
  42195c:	xlat   BYTE PTR ds:[ebx]
  42195d:	add    BYTE PTR [esp+eax*2+0x5df344b],ah
  421964:	repz inc esi
  421966:	push   0x13eaf0bf
  42196b:	repnz push ecx
  42196d:	add    ah,BYTE PTR [esi-0x66f17972]
  421973:	ja     0x421962
  421975:	ret    0x1503
  421978:	loope  0x421923
  42197a:	gs add al,0x1f
  42197d:	mov    ds:0x8b7d2ef7,eax
  421982:	das    
  421983:	xor    ebx,DWORD PTR [eax+0x7be3f04a]
  421989:	mov    al,ds:0x92e8f447
  42198e:	add    edx,DWORD PTR [eax+esi*2+0x361acce7]
  421995:	sti    
  421996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421997:	push   edx
  421998:	retf   0xda40
  42199b:	mov    esi,0x3ccee267
  4219a0:	xchg   ebx,eax
  4219a1:	test   DWORD PTR [esi+0x43],esi
  4219a4:	int    0x88
  4219a6:	jmp    0x6284:0x3f4037dd
  4219ad:	imul   ecx,ebx,0x38
  4219b0:	mov    esi,0x77c42270
  4219b5:	(bad)  
  4219b6:	hlt    
  4219b7:	push   eax
  4219b8:	jmp    0xa476:0xcbc95bbb
  4219bf:	in     eax,0x3
  4219c1:	mov    edi,esp
  4219c3:	loop   0x4219d7
  4219c5:	mov    edi,0x6c384ab2
  4219ca:	pop    edx
  4219cb:	sbb    dl,BYTE PTR [edi-0x5e]
  4219ce:	adc    DWORD PTR [esi+0x4],0xffffffe1
  4219d2:	cmp    eax,0xbd357e84
  4219d7:	out    0x93,eax
  4219d9:	cmp    al,BYTE PTR [ebx+0x6c7325e9]
  4219df:	or     eax,0xac121c95
  4219e4:	aam    0xbf
  4219e6:	retf   0x7d5f
  4219e9:	jns    0x4219db
  4219eb:	pop    ebx
  4219ec:	nop
  4219ed:	stc    
  4219ee:	jg     0x421a12
  4219f0:	pop    ebx
  4219f1:	and    BYTE PTR [esi],bh
  4219f3:	call   0x82f0a9c9
  4219f8:	aam    0x59
  4219fa:	inc    edx
  4219fb:	stos   DWORD PTR es:[edi],eax
  4219fc:	bound  edx,QWORD PTR [ebx+ebx*1]
  4219ff:	jecxz  0x421a3a
  421a01:	or     DWORD PTR [eax],esi
  421a03:	repnz dec ecx
  421a05:	mov    ds:0x46ad6086,eax
  421a0a:	retf   0x23c
  421a0d:	jae    0x4219cc
  421a0f:	sbb    DWORD PTR [ebx],0xa37432d2
  421a15:	xchg   ebp,eax
  421a16:	inc    eax
  421a17:	leave  
  421a18:	cli    
  421a19:	xchg   esi,eax
  421a1a:	ja     0x421a7f
  421a1c:	jmp    0x248c7b3e
  421a21:	mov    BYTE PTR [eax-0xd],ah
  421a24:	aas    
  421a25:	popf   
  421a26:	mov    cl,0xb8
  421a28:	inc    eax
  421a29:	(bad)  
  421a2a:	jb     0x421a64
  421a2c:	loopne 0x421a9f
  421a2e:	add    al,0xc0
  421a30:	mov    edi,0x616c14fe
  421a35:	imul   edi,DWORD PTR [eax-0x4c],0x3f
  421a39:	push   edx
  421a3a:	ret    
  421a3b:	ret    
  421a3c:	je     0x4219be
  421a3e:	out    0xe3,al
  421a40:	aam    0x9f
  421a42:	lahf   
  421a43:	adc    dh,dl
  421a45:	dec    eax
  421a46:	mov    dl,al
  421a48:	pop    edx
  421a49:	xor    esp,DWORD PTR [edx+edi*1-0x3285ad6f]
  421a50:	dec    ebp
  421a51:	jno    0x421ab6
  421a53:	or     al,0xe7
  421a55:	or     al,0x97
  421a57:	mov    ebp,0x533571fb
  421a5c:	fst    QWORD PTR [ebp-0x2a]
  421a5f:	mov    eax,ds:0x82be55e7
  421a64:	arpl   dx,bx
  421a66:	imul   ebp,DWORD PTR [si-0x5b44],0x43ecf498
  421a6f:	xor    al,0x99
  421a71:	iret   
  421a72:	fldcw  WORD PTR [ecx+0x286976bc]
  421a78:	pop    ebp
  421a79:	xchg   esp,eax
  421a7a:	mov    eax,0x5dfc6f10
  421a7f:	call   0xc632b893
  421a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a85:	mov    ch,0xf1
  421a87:	add    ebp,edi
  421a89:	mov    dl,BYTE PTR [esi+0x7d]
  421a8c:	jae    0x421ac6
  421a8e:	hlt    
  421a8f:	jns    0x421a16
  421a91:	sbb    al,BYTE PTR [ebx]
  421a93:	xor    DWORD PTR [ecx-0x6325e2a7],ebp
  421a99:	sbb    BYTE PTR [edi-0x2b],0xf0
  421a9d:	xchg   bl,al
  421a9f:	inc    ebx
  421aa0:	movsx  ebp,BYTE PTR [ecx]
  421aa3:	mov    edi,0x59fbeed5
  421aa8:	aas    
  421aa9:	adc    al,0x8f
  421aab:	fld    TBYTE PTR [ebx]
  421aad:	sti    
  421aae:	out    dx,eax
  421aaf:	inc    ebx
  421ab0:	push   esp
  421ab1:	bound  ebp,QWORD PTR [di+0x28]
  421ab5:	(bad)  
  421ab6:	jmp    0xfdc3:0xaecf56ea
  421abd:	sbb    cl,BYTE PTR [edx-0x2b]
  421ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac1:	xor    eax,0x8b997cb8
  421ac6:	push   cs
  421ac7:	rcr    BYTE PTR [ecx+0x3117acaa],1
  421acd:	xchg   ecx,eax
  421ace:	out    dx,al
  421acf:	mov    edx,0x947235f0
  421ad4:	in     eax,dx
  421ad5:	ss dec esi
  421ad7:	adc    BYTE PTR [eax-0x20],bl
  421ada:	jns    0x421b46
  421adc:	lock and DWORD PTR [edi-0x28c73248],ebx
  421ae3:	rcl    edx,1
  421ae5:	mov    esi,?
  421ae7:	popf   
  421ae8:	fmul   QWORD PTR [ecx-0x5a]
  421aeb:	or     bl,BYTE PTR [edx]
  421aed:	jne    0x421b17
  421aef:	xor    BYTE PTR ds:0xeca77f36,al
  421af5:	xchg   BYTE PTR ds:0xe8f55675,bh
  421afb:	sahf   
  421afc:	mov    BYTE PTR [ecx+eax*2],0x57
  421b00:	pushf  
  421b01:	xor    eax,0xd16f466a
  421b06:	imul   eax,DWORD PTR [edi+0x55],0x6
  421b0a:	daa    
  421b0b:	xchg   ebp,eax
  421b0c:	jne    0x421afd
  421b0e:	mov    cs,WORD PTR [ebx]
  421b10:	xor    eax,0xdf12ca21
  421b15:	outs   dx,BYTE PTR ds:[esi]
  421b16:	rcr    BYTE PTR [ecx+edi*8-0x5416278f],cl
  421b1d:	in     eax,0x6d
  421b1f:	add    al,0x6e
  421b21:	(bad)  
  421b22:	lods   al,BYTE PTR ds:[esi]
  421b23:	scas   al,BYTE PTR es:[edi]
  421b24:	fistp  DWORD PTR [esi+eax*1-0xf]
  421b28:	sbb    al,0x9a
  421b2a:	add    eax,0x78b7d6fd
  421b2f:	inc    esp
  421b30:	sub    dh,al
  421b32:	and    dl,BYTE PTR [ebp+0x216b1d04]
  421b38:	jne    0x421bb7
  421b3a:	sub    bl,BYTE PTR [edi+0x7d58b9a5]
  421b40:	pop    esi
  421b41:	push   edx
  421b42:	mov    esp,eax
  421b44:	imul   ebp,DWORD PTR gs:[edi+0x71],0xffffffd1
  421b49:	mov    eax,ds:0x35580765
  421b4e:	jle    0x421b64
  421b50:	cmc    
  421b51:	dec    edi
  421b52:	jmp    0x421bac
  421b54:	sub    BYTE PTR [esi+ecx*1+0x1f12bb0a],ch
  421b5b:	mov    ds:0xd50a9b1b,al
  421b60:	xor    BYTE PTR [eax],ah
  421b62:	fwait
  421b63:	nop
  421b64:	call   0x1003:0x5df5cf3f
  421b6b:	cs dec esi
  421b6d:	add    BYTE PTR [ebp-0x6075a04c],cl
  421b73:	adc    DWORD PTR [ebp-0x266b97fe],ebx
  421b79:	mov    bh,BYTE PTR [ebx]
  421b7b:	cmp    esi,esi
  421b7d:	clc    
  421b7e:	cli    
  421b7f:	(bad)  [edx-0x630d42d7]
  421b85:	push   ss
  421b86:	mov    eax,0xa1970480
  421b8b:	jmp    0x1beb:0x1561b56f
  421b92:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b94:	xor    BYTE PTR [eiz*8+0x2258b478],0xf0
  421b9c:	cmp    ecx,DWORD PTR [edx+ebx*4-0x74]
  421ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ba1:	dec    eax
  421ba2:	jecxz  0x421bd8
  421ba4:	imul   edi,DWORD PTR [esi+0x3e],0xaffac261
  421bab:	gs pop edx
  421bad:	mov    bl,BYTE PTR ds:0x3daedab4
  421bb3:	fdivr  st,st(0)
  421bb5:	mov    ecx,ss
  421bb7:	cwde   
  421bb8:	lock aam 0x46
  421bbb:	loopne 0x421b77
  421bbd:	les    esi,FWORD PTR [edi+ebx*8-0x69]
  421bc1:	es loopne 0x421c07
  421bc4:	dec    ebx
  421bc5:	xor    BYTE PTR [ecx+0x2],al
  421bc8:	ffreep st(1)
  421bca:	pop    es
  421bcb:	cli    
  421bcc:	xchg   ebp,eax
  421bcd:	(bad)
  421bd1:	jb     0x421b9f
  421bd3:	hlt    
  421bd4:	cmp    BYTE PTR [esi+edi*8+0x6],0xe8
  421bd9:	imul   ebp,esp,0x73
  421bdc:	mov    bh,0x81
  421bde:	sar    BYTE PTR [ebx],0x77
  421be1:	inc    ebx
  421be2:	or     eax,0xe8a9a828
  421be7:	fiadd  DWORD PTR [eax+eax*2]
  421bea:	je     0x421c36
  421bec:	mov    gs,WORD PTR [ecx]
  421bee:	jmp    0x46d7:0x8fb10774
  421bf5:	or     BYTE PTR [eax+ecx*1],bl
  421bf8:	xchg   ebx,eax
  421bf9:	dec    esp
  421bfa:	or     bh,ch
  421bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bfd:	call   0xa525:0x54c77249
  421c04:	test   DWORD PTR [edx-0x24],edi
  421c07:	std    
  421c08:	aaa    
  421c09:	stos   BYTE PTR es:[edi],al
  421c0a:	lds    ebp,FWORD PTR [edx-0x79]
  421c0d:	adc    edx,eax
  421c0f:	sub    eax,0xd27b723a
  421c14:	pop    eax
  421c15:	xor    eax,0xa9de8232
  421c1a:	mov    ch,0x1d
  421c1c:	mov    al,0xcc
  421c1e:	inc    ebp
  421c1f:	out    0x94,al
  421c21:	shr    BYTE PTR [edi-0x4],cl
  421c24:	sti    
  421c25:	adc    BYTE PTR [ebx-0x2365851e],0xb1
  421c2c:	sub    DWORD PTR [ecx-0xb],0xffffffcd
  421c30:	sbb    ebx,DWORD PTR [eax]
  421c32:	out    0xe9,eax
  421c34:	out    dx,al
  421c35:	in     al,dx
  421c36:	and    esp,DWORD PTR [edi-0x70]
  421c39:	xchg   esp,eax
  421c3a:	mov    esp,0x6e270158
  421c3f:	fnstcw WORD PTR [edx]
  421c41:	shr    DWORD PTR [ebx-0x6d],1
  421c44:	sar    BYTE PTR [ebx+0x1b],0x91
  421c48:	pop    ebx
  421c49:	jmp    0x421c0d
  421c4b:	rcl    DWORD PTR [ebp+0x74b19015],0xdf
  421c52:	push   cs
  421c53:	pop    edx
  421c54:	pop    esi
  421c55:	sub    DWORD PTR [esi-0x312fe123],edi
  421c5b:	les    esp,FWORD PTR [edi]
  421c5d:	js     0x421c24
  421c5f:	les    esp,FWORD PTR [ebp+0x508371bd]
  421c65:	inc    ecx
  421c66:	in     eax,0xe3
  421c68:	jl     0x421c03
  421c6a:	jge    0x421c9f
  421c6c:	mov    dl,0x92
  421c6e:	cwde   
  421c6f:	jae    0x421ce5
  421c71:	loope  0x421c4b
  421c73:	add    DWORD PTR [edi+0x7b9cbc78],ecx
  421c79:	push   es
  421c7a:	js     0x421c3e
  421c7c:	(bad)  
  421c7f:	sbb    edx,ebp
  421c81:	sar    BYTE PTR [eax-0x36b6290f],cl
  421c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c88:	jge    0x421c0f
  421c8a:	inc    ecx
  421c8b:	div    BYTE PTR [edi]
  421c8d:	pop    ecx
  421c8e:	bound  esi,QWORD PTR [ebp-0x7199a62f]
  421c94:	xor    eax,0x6ba39525
  421c99:	mov    cl,0x32
  421c9b:	mov    ebx,0xa79d8439
  421ca0:	xlat   BYTE PTR ds:[ebx]
  421ca1:	out    dx,eax
  421ca2:	xor    BYTE PTR ds:0x6bea6cf9,bl
  421ca8:	fistp  WORD PTR [eax-0x3296ba61]
  421cae:	mov    eax,0x625cc3fc
  421cb3:	shr    BYTE PTR [ecx],cl
  421cb5:	arpl   WORD PTR [edx+0x115582e2],si
  421cbb:	push   0x93384d2a
  421cc0:	das    
  421cc1:	retf   
  421cc2:	push   ds
  421cc3:	xchg   esp,eax
  421cc4:	out    0xe5,al
  421cc6:	imul   DWORD PTR [esp+esi*8+0x18]
  421cca:	call   0x13db:0xe7614744
  421cd1:	xor    al,0x21
  421cd3:	rol    bh,cl
  421cd5:	sub    dh,BYTE PTR [ebp-0xb]
  421cd8:	mov    al,ds:0x8ee75a23
  421cdd:	push   ss
  421cde:	mov    ?,esp
  421ce0:	jbe    0x421d19
  421ce2:	pop    ebp
  421ce3:	jno    0x421d2d
  421ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ce6:	jbe    0x421ce7
  421ce8:	mov    edx,0x1a218fe6
  421ced:	push   es
  421cee:	retf   
  421cef:	mov    bh,0x6
  421cf1:	or     dl,bh
  421cf3:	cmp    BYTE PTR ds:0x5deb941f,0xd6
  421cfa:	rol    BYTE PTR [ebp+0x5a62619e],1
  421d00:	jmp    0x421d7f
  421d02:	dec    DWORD PTR [eax]
  421d04:	popf   
  421d05:	jl     0x421ccd
  421d07:	adc    al,0x9c
  421d09:	test   eax,0xc2a3890e
  421d0e:	push   ecx
  421d0f:	fstp   DWORD PTR [ecx-0x6b]
  421d12:	ins    DWORD PTR es:[edi],dx
  421d13:	iret   
  421d14:	int3   
  421d15:	sbb    eax,0xd5ab0751
  421d1a:	test   eax,0x80c5e0c0
  421d1f:	mov    DWORD PTR [edx],0x9fe6d8a
  421d25:	xchg   esp,eax
  421d26:	xor    DWORD PTR [ecx+0x36],esi
  421d29:	or     DWORD PTR [edx+0x56ad8fcb],eax
  421d2f:	fisub  DWORD PTR [edi+0x4d]
  421d32:	sbb    esp,DWORD PTR [edi+eiz*1+0x2b4da509]
  421d39:	adc    al,0x7d
  421d3b:	cwde   
  421d3c:	in     al,0x2d
  421d3e:	and    al,0xc6
  421d40:	pusha  
  421d41:	sahf   
  421d42:	xchg   ebx,eax
  421d43:	pop    ebp
  421d44:	in     al,dx
  421d45:	add    al,0xd
  421d47:	inc    ebp
  421d48:	rcl    BYTE PTR [edx-0x1],cl
  421d4b:	(bad)  
  421d4c:	mov    ecx,0x21a7377f
  421d51:	sti    
  421d52:	xor    ebp,DWORD PTR [ecx+0x49]
  421d55:	pushf  
  421d56:	popa   
  421d57:	xor    DWORD PTR [eax-0x47],ebx
  421d5a:	pop    ds
  421d5b:	neg    DWORD PTR [esi]
  421d5d:	in     eax,0x52
  421d5f:	cmp    eax,0xb2376a01
  421d64:	ja     0x421d2a
  421d66:	hlt    
  421d67:	pop    esp
  421d68:	ins    BYTE PTR es:[edi],dx
  421d69:	pop    ss
  421d6a:	lods   eax,DWORD PTR ds:[esi]
  421d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6c:	lea    ebx,[ebx+0x60]
  421d6f:	(bad)  
  421d70:	mov    edx,DWORD PTR gs:[ebx]
  421d73:	mov    BYTE PTR ds:0x921e3475,ch
  421d79:	dec    edx
  421d7a:	js     0x421d0e
  421d7c:	sbb    eax,0x67cb4e92
  421d81:	test   DWORD PTR [edx-0x19],0xdcb49874
  421d88:	and    BYTE PTR [eax-0x12],ch
  421d8b:	sub    esp,DWORD PTR [ecx]
  421d8d:	retf   0xc562
  421d90:	cli    
  421d91:	call   0xed2b3a23
  421d96:	cdq    
  421d97:	rcr    DWORD PTR [edi-0x5c],1
  421d9a:	jbe    0x421dc2
  421d9c:	cli    
  421d9d:	fwait
  421d9e:	stos   BYTE PTR es:[edi],al
  421d9f:	xchg   ecx,eax
  421da0:	xor    bh,bl
  421da2:	cmp    ch,0x66
  421da5:	nop
  421da6:	leave  
  421da7:	pop    ds
  421da8:	rol    BYTE PTR [edx+0x48],cl
  421dab:	and    eax,DWORD PTR [ebx+0x76]
  421dae:	pop    ecx
  421daf:	(bad)  [eax+eax*4-0x3390b32b]
  421db6:	and    eax,0xb05ab435
  421dbb:	shl    ebp,0x14
  421dbe:	mov    bl,0xd0
  421dc0:	xchg   edx,eax
  421dc1:	iret   
  421dc2:	fcom   QWORD PTR [edx+0x1a56ad83]
  421dc8:	inc    ebx
  421dc9:	call   0x2f5e9956
  421dce:	mov    dh,0x50
  421dd0:	fst    st(7)
  421dd2:	shl    DWORD PTR [ebx-0x5a68e5d],0x91
  421dd9:	fwait
  421dda:	sbb    al,0x92
  421ddc:	cwde   
  421ddd:	or     ch,ch
  421ddf:	cdq    
  421de0:	in     eax,dx
  421de1:	jmp    0xb7ad98c4
  421de6:	icebp  
  421de7:	(bad)  
  421de8:	adc    cl,al
  421dea:	scas   al,BYTE PTR es:[edi]
  421deb:	pop    edi
  421dec:	call   0x1ddc:0xbee317a1
  421df3:	push   ebx
  421df4:	xlat   BYTE PTR ds:[ebx]
  421df5:	lods   eax,DWORD PTR ds:[esi]
  421df6:	cmp    eax,0x361373d2
  421dfb:	(bad)  [edx]
  421dfd:	daa    
  421dfe:	into   
  421dff:	jmp    FWORD PTR [ebx+eiz*4-0x6e010724]
  421e06:	fstp   TBYTE PTR [edx-0xb60da78]
  421e0c:	into   
  421e0d:	in     eax,0x7f
  421e0f:	ins    BYTE PTR es:[edi],dx
  421e10:	gs fs cwde 
  421e13:	xchg   ecx,eax
  421e14:	xlat   BYTE PTR ds:[ebx]
  421e15:	xchg   edx,eax
  421e16:	push   edx
  421e17:	in     al,dx
  421e18:	mov    DWORD PTR [ecx+0x772064af],edx
  421e1e:	lahf   
  421e1f:	mov    es,WORD PTR [esi]
  421e21:	stc    
  421e22:	es stos BYTE PTR es:[edi],al
  421e24:	hlt    
  421e25:	imul   ebx,DWORD PTR [ecx-0x44c4e0a6],0x4b3cdf2a
  421e2f:	mov    WORD PTR [eax-0x7c],fs
  421e32:	imul   BYTE PTR [ebx+eiz*4-0x7458c7c9]
  421e39:	add    eax,0xa15c5516
  421e3e:	and    edi,DWORD PTR [edx]
  421e40:	and    eax,0x9ca0d60e
  421e45:	push   esi
  421e46:	add    al,0xe7
  421e48:	in     eax,dx
  421e49:	imul   ecx,DWORD PTR [edi-0x79630a11],0xffffffd2
  421e50:	(bad)  
  421e51:	imul   ebx,DWORD PTR [edi-0x16],0x19e03714
  421e58:	mov    eax,0xbc2bc9f5
  421e5d:	mov    edx,DWORD PTR [ebp+esi*4+0x1e314108]
  421e64:	push   ss
  421e65:	push   esi
  421e66:	and    DWORD PTR [ebx],ebx
  421e68:	ret    
  421e69:	imul   ebx,DWORD PTR [eax+0x5868ee96],0x6b
  421e70:	ret    
  421e71:	ret    
  421e72:	nop    DWORD PTR [esi+0x34ac1f5]
  421e79:	mov    DWORD PTR [ecx+esi*8+0x6f1ea776],ecx
  421e80:	imul   eax,DWORD PTR [edx+0x59aa4679],0xffffff9e
  421e87:	test   BYTE PTR ds:0x78dee191,0x42
  421e8e:	jns    0x421e36
  421e90:	mov    ecx,edx
  421e92:	push   0xaf83d722
  421e97:	cld    
  421e98:	jno    0x421e2b
  421e9a:	push   ss
  421e9b:	xchg   ebx,eax
  421e9c:	iret   
  421e9d:	dec    edx
  421e9e:	mov    ch,cl
  421ea0:	cli    
  421ea1:	out    dx,eax
  421ea2:	into   
  421ea3:	xor    dl,BYTE PTR [esi]
  421ea5:	std    
  421ea6:	push   cs
  421ea7:	xchg   dh,cl
  421ea9:	popa   
  421eaa:	xor    DWORD PTR [eax+0x2aca7842],esi
  421eb0:	pop    es
  421eb1:	jns    0x421e7d
  421eb3:	fild   WORD PTR [edi]
  421eb5:	nop
  421eb6:	push   es
  421eb7:	and    al,0x21
  421eb9:	pop    ebx
  421eba:	cmp    BYTE PTR [ecx],dl
  421ebc:	xchg   DWORD PTR [ecx+0x48a8d0a5],esi
  421ec2:	inc    ecx
  421ec3:	(bad)  
  421ec5:	arpl   WORD PTR [edi],cx
  421ec7:	sub    al,dl
  421ec9:	mov    eax,0x9aa6eaa6
  421ece:	pop    es
  421ecf:	push   ebx
  421ed0:	mov    esi,0xfc4101dd
  421ed5:	bound  ebp,QWORD PTR [eax-0x47d404d8]
  421edb:	cli    
  421edc:	push   ds
  421edd:	add    ch,bh
  421edf:	loopne 0x421ea0
  421ee1:	or     al,0x4e
  421ee3:	mov    eax,0xd4f4b4b5
  421ee8:	js     0x421e93
  421eea:	rcl    BYTE PTR [edi+0x11dce833],0x28
  421ef1:	pop    esp
  421ef2:	mov    bl,0x5c
  421ef4:	mov    eax,0xc94883b5
  421ef9:	sahf   
  421efa:	mov    al,ds:0xf4466c21
  421eff:	mov    cl,dh
  421f01:	jo     0x421eb8
  421f03:	scas   eax,DWORD PTR es:[edi]
  421f04:	std    
  421f05:	or     eax,0xd2b2c04d
  421f0a:	hlt    
  421f0b:	lahf   
  421f0c:	mov    dl,0x32
  421f0e:	(bad)  
  421f0f:	in     eax,dx
  421f10:	add    al,BYTE PTR [edx-0x1e]
  421f13:	or     bh,0xd4
  421f16:	not    DWORD PTR [ecx-0x5c862088]
  421f1c:	cmp    eax,0xad868002
  421f21:	stc    
  421f22:	mov    ecx,0x5d88b588
  421f27:	pusha  
  421f28:	sbb    ebp,esp
  421f2a:	cmp    DWORD PTR [ebp-0x6f],ecx
  421f2d:	lods   al,BYTE PTR ds:[esi]
  421f2e:	fistp  DWORD PTR [ecx+0x652a8ee4]
  421f34:	stos   BYTE PTR es:[edi],al
  421f35:	push   edi
  421f36:	stos   DWORD PTR es:[edi],eax
  421f37:	in     eax,0x1e
  421f39:	lds    ebp,FWORD PTR [ebx+esi*1]
  421f3c:	inc    ecx
  421f3d:	js     0x421f2d
  421f3f:	jecxz  0x421fb7
  421f41:	push   eax
  421f42:	sbb    al,0x50
  421f44:	dec    eax
  421f45:	sub    al,0x2b
  421f47:	push   ebp
  421f48:	jmp    0xf5a0:0xd0a0867e
  421f4f:	mov    ecx,0xba6b6ce7
  421f54:	push   ebx
  421f55:	test   eax,0xd691c58
  421f5a:	ret    0x3673
  421f5d:	out    dx,al
  421f5e:	fst    DWORD PTR [edx]
  421f60:	pop    esp
  421f61:	mov    eax,ds:0x7a3d82d2
  421f66:	test   al,0x95
  421f68:	int    0x17
  421f6a:	mov    al,ds:0xe2be28da
  421f6f:	or     BYTE PTR [edi-0x8bb8eea],0x3a
  421f76:	xchg   ebx,eax
  421f77:	outs   dx,BYTE PTR ds:[esi]
  421f78:	mov    dl,0x33
  421f7a:	pop    edx
  421f7b:	mov    edi,0x16719216
  421f80:	fwait
  421f81:	scas   eax,DWORD PTR es:[edi]
  421f82:	cmc    
  421f83:	sub    DWORD PTR [eax-0x16],esi
  421f86:	jnp    0x421f7f
  421f88:	sahf   
  421f89:	dec    eax
  421f8a:	jge    0x421faa
  421f8c:	and    DWORD PTR [eax+0xa664a6e],esi
  421f92:	add    DWORD PTR [edi+esi*1+0x43ac9c0a],edx
  421f99:	pop    ss
  421f9a:	dec    esp
  421f9b:	jno    0x421f6e
  421f9d:	aad    0x45
  421f9f:	pop    ss
  421fa0:	outs   dx,BYTE PTR ds:[esi]
  421fa1:	jmp    0x12a457db
  421fa6:	std    
  421fa7:	add    eax,0x2ee822c7
  421fac:	mov    eax,ds:0x25437997
  421fb1:	xor    DWORD PTR [ebx],ebx
  421fb3:	cdq    
  421fb4:	test   eax,0x56e12f9c
  421fb9:	xor    ch,al
  421fbb:	or     al,0x9f
  421fbd:	adc    BYTE PTR [edi-0x28ffc1a0],dh
  421fc3:	dec    ebx
  421fc4:	sbb    BYTE PTR [ebp+eiz*2-0x7e4e962a],dh
  421fcb:	out    0x6d,eax
  421fcd:	xchg   ebp,eax
  421fce:	aad    0x25
  421fd0:	test   al,0x32
  421fd2:	push   esp
  421fd3:	pop    edi
  421fd4:	and    DWORD PTR [edi+esi*8+0x31],0x28fa994f
  421fdc:	ss cmp ch,ch
  421fdf:	mov    bh,0xb3
  421fe1:	mov    bl,0xe2
  421fe3:	rcl    al,1
  421fe5:	loopne 0x421f69
  421fe7:	imul   esi,ebx,0xa42f3208
  421fed:	push   edx
  421fee:	adc    ch,ch
  421ff0:	mov    eax,ds:0xc2a84d21
  421ff5:	nop
  421ff6:	stos   DWORD PTR es:[edi],eax
  421ff7:	aad    0xe7
  421ff9:	mov    ebp,0x41751370
  421ffe:	je     0x42206a
  422000:	dec    esi
  422001:	mov    dh,0xd7
  422003:	(bad)  ds:0x7d8fecdd
  422009:	and    eax,0xd7e1a07f
  42200e:	scas   eax,DWORD PTR es:[edi]
  42200f:	das    
  422010:	aam    0xaa
  422012:	mov    dl,BYTE PTR [ecx-0x4f]
  422015:	inc    esp
  422016:	adc    al,0x60
  422018:	fwait
  422019:	mov    al,ds:0x31db6dc0
  42201e:	sub    eax,0xb219a8bb
  422023:	pop    eax
  422024:	mov    cl,0x5d
  422026:	fldcw  WORD PTR [ebx+0x49]
  422029:	push   cs
  42202a:	dec    ebx
  42202b:	sti    
  42202c:	nop
  42202d:	mov    ebp,0xe72a180a
  422032:	cmp    edi,0x4
  422035:	clc    
  422036:	inc    esi
  422037:	(bad)  
  422038:	jbe    0x422019
  42203a:	xchg   esi,eax
  42203b:	dec    ebx
  42203c:	push   ss
  42203d:	gs aaa 
  42203f:	push   ecx
  422040:	loopne 0x42206b
  422042:	icebp  
  422043:	add    eax,0x46dc8664
  422048:	or     ebp,DWORD PTR [ecx+0x37]
  42204b:	pop    ds
  42204c:	xor    bh,BYTE PTR [ecx]
  42204e:	inc    ecx
  42204f:	loopne 0x421fe7
  422051:	fwait
  422052:	xchg   ebp,eax
  422053:	or     al,0x2c
  422055:	ja     0x422049
  422057:	ret    0x8862
  42205a:	mov    ds:0xc1c90375,eax
  42205f:	fnstcw WORD PTR [esi+0x1016d8e0]
  422065:	mov    cl,0x61
  422067:	ins    DWORD PTR es:[edi],dx
  422068:	push   edx
  422069:	mov    dl,0x56
  42206b:	adc    DWORD PTR [eax],esp
  42206d:	pop    ecx
  42206e:	fs and bh,dl
  422071:	sbb    esi,DWORD PTR [esp+esi*4]
  422074:	rcr    BYTE PTR [eax],0xa3
  422077:	and    DWORD PTR [ecx],edi
  422079:	icebp  
  42207a:	adc    BYTE PTR [esi+eax*4+0x17779d71],dh
  422081:	jae    0x4220b2
  422083:	je     0x4220a0
  422085:	scas   eax,DWORD PTR es:[edi]
  422086:	xchg   BYTE PTR [esi-0x46],al
  422089:	mov    al,ds:0x53ca2be8
  42208e:	add    ecx,DWORD PTR [edi+eax*4+0x1a]
  422092:	pop    eax
  422093:	stc    
  422094:	xchg   ecx,eax
  422095:	ja     0x4220b5
  422097:	(bad)  
  422098:	out    0x20,eax
  42209a:	pop    esp
  42209b:	jg     0x422103
  42209d:	and    BYTE PTR [ebx+0x17bedb7b],cl
  4220a3:	cmp    DWORD PTR [esi+0x136b3c85],ecx
  4220a9:	in     eax,dx
  4220aa:	ror    BYTE PTR [edx+0x29520c76],cl
  4220b0:	in     al,dx
  4220b1:	das    
  4220b2:	lea    ebp,[eax+0x1dfdcedd]
  4220b8:	mov    bl,0x5e
  4220ba:	sub    ebp,esp
  4220bc:	mov    eax,ds:0x167f17a3
  4220c1:	lahf   
  4220c2:	inc    eax
  4220c3:	push   es
  4220c4:	loope  0x4220f0
  4220c6:	adc    edx,ebp
  4220c8:	inc    edx
  4220c9:	pop    ebx
  4220ca:	out    0xe6,al
  4220cc:	lods   eax,DWORD PTR ds:[esi]
  4220cd:	popf   
  4220ce:	xor    BYTE PTR [edx],0xdb
  4220d1:	(bad)  
  4220d2:	repnz pop esp
  4220d4:	pushf  
  4220d5:	test   esp,0x8877d260
  4220db:	or     eax,0xd3f29421
  4220e0:	mov    esi,0xa15866b7
  4220e5:	xchg   ebx,eax
  4220e6:	aaa    
  4220e7:	mov    cl,0x1d
  4220e9:	or     DWORD PTR [esi-0x78],ecx
  4220ec:	cdq    
  4220ed:	mov    bl,0x99
  4220ef:	call   0xc9d5dd4
  4220f4:	mov    bh,0x23
  4220f6:	fistp  QWORD PTR [edx-0x45]
  4220f9:	outs   dx,DWORD PTR ds:[esi]
  4220fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220fb:	shr    DWORD PTR [eax+0x34],cl
  4220fe:	pop    eax
  4220ff:	push   es
  422100:	ins    DWORD PTR es:[edi],dx
  422101:	push   cs
  422102:	das    
  422103:	pop    ebp
  422104:	fnstenv [esi-0x2087008a]
  42210a:	push   0xb644bb4a
  42210f:	adc    bh,BYTE PTR [eax+0x2d]
  422112:	dec    ecx
  422113:	xchg   edx,eax
  422114:	iret   
  422115:	sub    BYTE PTR [ebp-0x67fd0f1f],ch
  42211b:	push   ebx
  42211c:	fnstenv [esi]
  42211e:	xor    eax,0x1071180c
  422123:	push   ss
  422124:	push   ss
  422125:	iret   
  422126:	xor    eax,0x387a133c
  42212b:	sahf   
  42212c:	arpl   WORD PTR [edx+0xdaafb2d],bp
  422132:	add    BYTE PTR [ebx+0x63d4ada6],bh
  422138:	push   edx
  422139:	cmp    eax,DWORD PTR [esi+0x6c1c4668]
  42213f:	push   esp
  422140:	sub    eax,0x25a3c99
  422145:	sub    eax,0xad0d2e30
  42214a:	lahf   
  42214b:	sbb    DWORD PTR [esi+0x7a8a0639],ecx
  422151:	mov    esp,0xfa50f7c9
  422156:	aaa    
  422157:	xchg   esi,eax
  422158:	popf   
  422159:	jle    0x422175
  42215b:	inc    edi
  42215c:	inc    esi
  42215d:	xchg   ebp,eax
  42215e:	mov    cl,dl
  422160:	pop    es
  422161:	push   0xea71224
  422166:	or     BYTE PTR [edx],bh
  422168:	adc    ch,0x4c
  42216b:	inc    esi
  42216c:	or     BYTE PTR [ebp-0x2c9989f4],dl
  422172:	out    0xb1,al
  422174:	cmp    eax,0xc2cd6998
  422179:	xor    edi,DWORD PTR [esi-0x5465d0d0]
  42217f:	inc    ebp
  422180:	ins    DWORD PTR es:[edi],dx
  422181:	inc    ebp
  422182:	jno    0x42216e
  422184:	sub    ebx,DWORD PTR [ebp-0x45]
  422187:	(bad)  
  422188:	ffreep st(4)
  42218a:	(bad)  
  42218b:	dec    ebp
  42218c:	cmp    esp,ebp
  42218e:	pop    edi
  42218f:	pop    eax
  422190:	pop    edi
  422191:	ret    
  422192:	mov    bh,0xe8
  422194:	cmc    
  422195:	push   0xffffffc1
  422197:	stos   BYTE PTR es:[edi],al
  422198:	sbb    eax,0x3b8b5aff
  42219d:	mov    eax,ds:0xed466089
  4221a2:	and    eax,0x8f046986
  4221a7:	std    
  4221a8:	add    esi,DWORD PTR [esi+0x30201023]
  4221ae:	dec    edx
  4221af:	sub    edi,DWORD PTR [ebx+edx*1-0x57aef553]
  4221b6:	xchg   ebx,eax
  4221b7:	pop    esp
  4221b8:	retf   
  4221b9:	inc    ebx
  4221ba:	xchg   edx,eax
  4221bb:	pusha  
  4221bc:	xchg   esp,eax
  4221bd:	push   edx
  4221be:	mov    ebp,0xbf30ba03
  4221c3:	sysenter 
  4221c5:	jbe    0x422186
  4221c7:	repz loope 0x422163
  4221ca:	and    al,0x7b
  4221cc:	dec    ebx
  4221cd:	jle    0x42215d
  4221cf:	ret    
  4221d0:	fucomi st,st(3)
  4221d2:	ins    DWORD PTR es:[edi],dx
  4221d3:	xchg   esp,eax
  4221d4:	or     ah,BYTE PTR [esi]
  4221d6:	mul    ebx
  4221d8:	(bad)  
  4221d9:	retf   
  4221da:	scas   al,BYTE PTR es:[edi]
  4221db:	fxch   st(0)
  4221dd:	outs   dx,DWORD PTR ds:[esi]
  4221de:	pop    ebx
  4221df:	jo     0x422205
  4221e1:	dec    esi
  4221e2:	inc    ebx
  4221e3:	push   ebp
  4221e4:	shl    BYTE PTR [esi+0x44138d2a],cl
  4221ea:	out    0x5c,eax
  4221ec:	jge    0x422221
  4221ee:	cli    
  4221ef:	leave  
  4221f0:	aad    0xd8
  4221f2:	data16 mov cl,0x3b
  4221f5:	sub    al,0xda
  4221f7:	imul   DWORD PTR [ebx]
  4221f9:	(bad)  
  4221fa:	push   ebx
  4221fb:	retf   0xb4ae
  4221fe:	push   0xbc7afd
  422203:	or     dl,ch
  422205:	test   DWORD PTR [ecx+eax*4],0xba16fcc9
  42220c:	and    ecx,esi
  42220e:	fimul  WORD PTR [ebp-0xc214230]
  422214:	pop    ds
  422215:	popf   
  422216:	dec    ecx
  422217:	loopne 0x4221f7
  422219:	mov    dh,0x14
  42221b:	adc    BYTE PTR [ebp-0x2bf917bd],al
  422221:	mov    ebx,0x44eeeeb8
  422226:	jg     0x4221be
  422228:	and    BYTE PTR [eax+ecx*8],bh
  42222b:	sysenter 
  42222d:	(bad)  
  42222f:	ins    BYTE PTR es:[edi],dx
  422230:	ret    
  422231:	jo     0x42228f
  422233:	cmp    al,dl
  422235:	jmp    0x1766:0xda4e3f07
  42223c:	dec    eax
  42223d:	jno    0x4221ed
  42223f:	shl    DWORD PTR [edi+0x6f],0x17
  422243:	push   ds
  422244:	inc    edi
  422245:	pop    esi
  422246:	pop    esi
  422247:	xchg   ebp,eax
  422248:	jg     0x42223d
  42224a:	fwait
  42224b:	outs   dx,BYTE PTR ds:[esi]
  42224c:	push   ebx
  42224d:	repz dec edi
  42224f:	push   esi
  422250:	(bad)  
  422251:	sbb    eax,edi
  422253:	push   ecx
  422254:	std    
  422255:	lea    ecx,[eax+0x20dc9d99]
  42225b:	imul   bl
  42225d:	loope  0x422229
  42225f:	pop    ecx
  422260:	out    dx,al
  422261:	call   0x61e0:0x755bcc85
  422268:	xor    eax,0xe0550fc5
  42226d:	sar    DWORD PTR ds:0xdc4f56f5,0x5d
  422274:	mov    dh,0x67
  422276:	mov    ch,0x86
  422278:	xchg   edx,eax
  422279:	lahf   
  42227a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42227b:	imul   ebx,DWORD PTR [edi-0x41],0xffffffb7
  42227f:	push   ss
  422280:	fistp  QWORD PTR [esi+edi*2]
  422283:	loop   0x42226b
  422285:	push   edx
  422286:	xor    eax,DWORD PTR [esi+eiz*2+0x68a41678]
  42228d:	inc    ebx
  42228e:	pop    esp
  42228f:	mov    cl,BYTE PTR [edx-0x42]
  422292:	xchg   BYTE PTR [eax-0x27],al
  422295:	fwait
  422296:	addr16 pop edi
  422298:	mov    ch,0xad
  42229a:	enter  0xf66b,0x0
  42229e:	popa   
  42229f:	iret   
  4222a0:	out    0x59,al
  4222a2:	iret   
  4222a3:	cli    
  4222a4:	push   esp
  4222a5:	push   0x5227a233
  4222aa:	div    DWORD PTR [edx+0x6b]
  4222ad:	dec    eax
  4222ae:	out    dx,al
  4222af:	sbb    eax,0x4086edeb
  4222b4:	xor    BYTE PTR [eax-0x50],ah
  4222b7:	mov    edi,0xac08871d
  4222bc:	sbb    eax,0xd0be3309
  4222c1:	les    ebx,FWORD PTR [esi]
  4222c3:	inc    esp
  4222c4:	adc    ch,BYTE PTR [ebp+0x32]
  4222c7:	xor    eax,0x1adf7307
  4222cc:	imul   esi,DWORD PTR [edi+ebp*1],0xffffff88
  4222d0:	or     DWORD PTR [edi+edx*8-0xa],esi
  4222d4:	xor    bh,BYTE PTR [edx]
  4222d6:	outs   dx,BYTE PTR ds:[esi]
  4222d7:	sub    al,0x12
  4222d9:	xor    al,0xb6
  4222db:	sahf   
  4222dc:	jno    0x42233c
  4222de:	and    al,0xc9
  4222e0:	push   edx
  4222e1:	lahf   
  4222e2:	add    eax,0xebfb6f19
  4222e7:	jl     0x4222a5
  4222e9:	jecxz  0x4222f2
  4222eb:	inc    ebx
  4222ec:	inc    ebp
  4222ed:	sub    ecx,ecx
  4222ef:	mov    al,ds:0x6b610978
  4222f4:	push   edi
  4222f5:	adc    al,0x5b
  4222f7:	sub    esp,edx
  4222f9:	jp     0x422337
  4222fb:	call   0x6ed52f2f
  422300:	std    
  422301:	loop   0x4222a2
  422303:	sub    DWORD PTR [ecx],ecx
  422305:	push   ebp
  422306:	(bad)  
  422307:	mov    dh,0x2b
  422309:	or     bl,ch
  42230b:	icebp  
  42230c:	pop    eax
  42230d:	pop    eax
  42230e:	sti    
  42230f:	xor    eax,0xe47c4f68
  422314:	mov    ah,0x30
  422316:	(bad)  
  422317:	pop    esp
  422318:	mov    bh,0x6f
  42231a:	pop    es
  42231b:	stc    
  42231c:	sbb    BYTE PTR [ecx],al
  42231e:	ret    
  42231f:	sub    esp,DWORD PTR [edx+0x6593f300]
  422325:	adc    eax,0x60eb265a
  42232a:	push   ebx
  42232b:	fidivr WORD PTR [edi-0x32741501]
  422331:	cld    
  422332:	fincstp 
  422334:	adc    ecx,0xffffffdf
  422337:	or     cl,al
  422339:	aad    0xf4
  42233b:	cld    
  42233c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42233d:	(bad)  
  42233e:	push   ds
  42233f:	pop    ebx
  422340:	jmp    0x422368
  422342:	inc    ecx
  422343:	gs cmp al,0xc8
  422346:	jnp    0x422362
  422348:	retf   
  422349:	or     eax,0xb8db1962
  42234e:	push   0xa3bb77f9
  422353:	push   esp
  422354:	pop    ecx
  422355:	add    cl,0xb5
  422358:	xor    bh,BYTE PTR [eax-0x1c1dda7e]
  42235e:	(bad)  
  42235f:	and    eax,0x4ea15692
  422364:	xor    DWORD PTR [edx+0xf],ebx
  422367:	sbb    esp,DWORD PTR [esi+0x6be4d039]
  42236d:	rol    BYTE PTR [ebx],1
  42236f:	jge    0x422303
  422371:	mov    bh,BYTE PTR [ebp-0x4fd29871]
  422377:	cmp    eax,DWORD PTR [eax+edi*1-0x205795b2]
  42237e:	fmul   QWORD PTR [ebp+0x4019ff73]
  422384:	ins    BYTE PTR es:[edi],dx
  422385:	fisubr WORD PTR [ebp-0x138b43c0]
  42238b:	and    edx,ebx
  42238d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42238e:	sub    dh,ch
  422390:	cdq    
  422391:	es mov eax,?
  422394:	pusha  
  422395:	imul   ebx,DWORD PTR [ebx-0x3ba75e05],0xfffffffb
  42239c:	jbe    0x422382
  42239e:	dec    eax
  42239f:	and    dh,dh
  4223a1:	mov    ebx,0x323b5c0
  4223a6:	sbb    al,al
  4223a8:	mov    eax,0xbd29057d
  4223ad:	sub    DWORD PTR [ecx],0xffffffe1
  4223b0:	out    dx,al
  4223b1:	sbb    esp,DWORD PTR [ebx-0x38043d5b]
  4223b7:	xor    edx,DWORD PTR [ecx+0x2d88b714]
  4223bd:	or     BYTE PTR [edi+ebx*1+0x39],ah
  4223c1:	popa   
  4223c2:	jmp    0x25f8ac01
  4223c7:	inc    eax
  4223c8:	cs mov ch,0x8e
  4223cb:	std    
  4223cc:	push   es
  4223cd:	push   edx
  4223ce:	hlt    
  4223cf:	or     eax,0x6e52fbda
  4223d4:	mov    eax,ds:0x440fc416
  4223d9:	push   es
  4223da:	std    
  4223db:	xchg   ebx,eax
  4223dc:	dec    esp
  4223dd:	call   0x8ea5:0xfb02bfb5
  4223e4:	fucomip st,st(7)
  4223e6:	cmp    bh,BYTE PTR [edi+0x63]
  4223e9:	lods   al,BYTE PTR ds:[esi]
  4223ea:	xor    BYTE PTR [edi+esi*8],0x57
  4223ee:	fcomp  QWORD PTR [ecx-0x13]
  4223f1:	int    0x98
  4223f3:	ss dec ebx
  4223f5:	and    BYTE PTR gs:[esi+0x271b92dd],bh
  4223fc:	imul   ebp,DWORD PTR [ecx+esi*2+0x36],0x296c7d9d
  422404:	and    BYTE PTR [esp+eax*4+0x3f],al
  422408:	ss sbb ch,ch
  42240b:	es mov cl,0x9d
  42240e:	mov    ebx,0xd803a7ae
  422413:	cmp    cl,BYTE PTR ds:0x7aa69e89
  422419:	ret    
  42241a:	mov    ?,WORD PTR [esp+ebp*4+0x30]
  42241e:	sub    ecx,DWORD PTR [edx+0x254e8097]
  422424:	icebp  
  422425:	xor    al,cl
  422427:	outs   dx,DWORD PTR ds:[esi]
  422428:	inc    esi
  422429:	pusha  
  42242a:	mov    al,0xdb
  42242c:	div    bh
  42242e:	jmp    0x422482
  422430:	or     dh,BYTE PTR [edx+0x45c7fea1]
  422436:	jg     0x42241f
  422438:	add    BYTE PTR [eax-0x55],ah
  42243b:	xor    dh,BYTE PTR [eax-0xe6fb91b]
  422441:	add    dh,cl
  422443:	mov    DWORD PTR [esp+esi*2],esi
  422446:	mov    eax,0x52759fb4
  42244b:	cmp    ecx,ebx
  42244d:	add    eax,0x1dd4dd08
  422452:	into   
  422453:	aaa    
  422454:	jl     0x422439
  422456:	adc    edi,DWORD PTR [eax-0x71]
  422459:	loope  0x4223e9
  42245b:	fucom  st(5)
  42245d:	dec    edx
  42245e:	fs add al,0x1b
  422461:	sub    BYTE PTR [ebx+0x23965cbc],al
  422467:	mov    edx,0xe6918173
  42246c:	ret    0xfa97
  42246f:	dec    eax
  422470:	inc    eax
  422471:	jmp    0xaecb:0xc026bee4
  422478:	or     ch,BYTE PTR [ecx-0x2adf46f5]
  42247e:	push   0x858fa7a7
  422483:	mov    esi,0x68bac5ca
  422488:	push   edi
  422489:	mov    ds:0xff4ebffa,eax
  42248e:	faddp  st(0),st
  422490:	xor    dl,dh
  422492:	mov    ch,0x2b
  422494:	mov    bl,0x45
  422496:	inc    ecx
  422497:	neg    BYTE PTR [edx]
  422499:	jnp    0x422447
  42249b:	adc    al,0xf9
  42249d:	out    0xff,al
  42249f:	jne    0x42247d
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x42580c
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x182776ec
  4242c9:	add    ebx,ebx
  4242cb:	rcl    DWORD PTR [edx+0x4b838095],1
  4242d1:	ins    BYTE PTR es:[edi],dx
  4242d2:	add    DWORD PTR [ebx-0x70b62553],0xffffffab
  4242d9:	(bad)  
  4242db:	stc    
  4242dc:	dec    edi
  4242dd:	pop    edx
  4242de:	xlat   BYTE PTR ds:[ebx]
  4242df:	or     ebx,DWORD PTR [eax-0x1048755f]
  4242e5:	or     BYTE PTR [edi-0x5d],al
  4242e8:	inc    eax
  4242ea:	int3   
  4242eb:	inc    edx
  4242ec:	xor    al,0xfe
  4242ee:	dec    eax
  4242ef:	push   edi
  4242f0:	jmp    0x19cf2c84
  4242f5:	mov    dl,0x6
  4242f7:	xor    eax,0xa4240c13
  4242fc:	int    0xa5
  4242fe:	ins    BYTE PTR es:[edi],dx
  4242ff:	clc    
  424300:	add    al,0x46
  424302:	jae    0x42430c
  424304:	xchg   esp,eax
  424305:	fdivr  st,st(0)
  424307:	xor    eax,0xb16e78fa
  42430c:	inc    ebx
  42430d:	mov    WORD PTR [edi+0x79],gs
  424310:	gs mov dh,0x3d
  424313:	das    
  424314:	and    al,0xf3
  424316:	jmp    0x4242ea
  424318:	pop    esp
  424319:	sub    BYTE PTR [edi],bl
  42431b:	pop    ecx
  42431c:	sub    bh,BYTE PTR [edx+ebp*8]
  42431f:	lds    edi,FWORD PTR [edi-0x2f]
  424322:	jo     0x424331
  424324:	and    DWORD PTR [ebx],esp
  424326:	jmp    0xd545:0x8eb703be
  42432d:	adc    al,0x7d
  42432f:	dec    edi
  424330:	mov    edi,0xa53fe839
  424335:	mov    edi,0xb42b0410
  42433a:	shl    BYTE PTR [edx],cl
  42433c:	pusha  
  42433d:	mov    esi,0x9d88544a
  424342:	mov    esi,0x546ad0cd
  424347:	xchg   edx,eax
  424348:	cmp    BYTE PTR [bp+0x5d68],bh
  42434d:	mov    dl,0x91
  42434f:	cld    
  424350:	icebp  
  424351:	pop    es
  424352:	sbb    DWORD PTR [esi],eax
  424354:	inc    esi
  424355:	fcmovu st,st(4)
  424357:	or     al,0x81
  424359:	mov    ebx,0x8d98b50
  42435e:	stc    
  42435f:	adc    DWORD PTR [ebp+0x1],edi
  424362:	mov    ah,0xed
  424364:	in     al,dx
  424365:	push   ecx
  424366:	mov    al,ds:0xaad17ca3
  42436b:	sahf   
  42436c:	ret    
  42436d:	mov    edx,eax
  42436f:	xchg   ebx,eax
  424370:	ins    BYTE PTR es:[edi],dx
  424371:	aam    0xa9
  424373:	les    ebp,FWORD PTR ds:0x7dfbb3e4
  424379:	sbb    cl,bh
  42437b:	add    eax,DWORD PTR [edx*1+0x1c54409]
  424382:	fwait
  424383:	in     eax,dx
  424384:	pop    ss
  424385:	mov    gs,eax
  424387:	xchg   dl,bl
  424389:	fs jno 0x42436e
  42438c:	adc    BYTE PTR [edx],al
  42438e:	dec    esi
  42438f:	(bad)  
  424391:	push   ebx
  424392:	stos   BYTE PTR es:[edi],al
  424393:	(bad)  
  424394:	call   0x6936ca57
  424399:	jg     0x424334
  42439b:	mov    ch,0xbf
  42439d:	imul   esi,edi,0xffffffc8
  4243a0:	or     DWORD PTR gs:[ecx-0x71],0x19
  4243a5:	xor    edx,DWORD PTR [ecx-0x1e3ebd37]
  4243ab:	pop    esp
  4243ac:	ds xor edx,ebx
  4243af:	lahf   
  4243b0:	cli    
  4243b1:	mov    al,BYTE PTR [edi-0x6b]
  4243b4:	push   esp
  4243b5:	icebp  
  4243b6:	adc    bh,BYTE PTR [ebx+0x2e48eec1]
  4243bc:	fisttp QWORD PTR [ebx]
  4243be:	ins    BYTE PTR es:[edi],dx
  4243bf:	mov    bl,0xe0
  4243c1:	sbb    al,0x3a
  4243c3:	shr    cl,1
  4243c5:	call   0xb969:0x686406f5
  4243cc:	test   DWORD PTR [eax-0x3a66a0f4],ecx
  4243d2:	stc    
  4243d3:	(bad)  
  4243d4:	rol    ecx,1
  4243d6:	cmp    eax,ecx
  4243d8:	xor    ch,BYTE PTR [ecx+0x44]
  4243db:	mov    eax,0x9fef787e
  4243e0:	xchg   ecx,eax
  4243e1:	fsqrt  
  4243e3:	addr16 mov eax,ds:0x8cf7
  4243e7:	jge    0x42445f
  4243e9:	xchg   edi,eax
  4243ea:	mul    ebp
  4243ec:	shl    BYTE PTR [esi],0x53
  4243ef:	inc    edi
  4243f0:	popa   
  4243f1:	sub    DWORD PTR [esi],0xffffffc5
  4243f4:	sbb    bh,BYTE PTR [esi-0x470f5589]
  4243fa:	cld    
  4243fb:	addr16 jno 0x424465
  4243fe:	test   BYTE PTR [edx+0x333107e1],al
  424404:	inc    esp
  424405:	xchg   edi,eax
  424406:	pop    ss
  424407:	icebp  
  424408:	retf   
  424409:	outs   dx,BYTE PTR ds:[esi]
  42440a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42440b:	int    0x53
  42440d:	bsr    edx,ebx
  424410:	jb     0x4243e2
  424412:	and    BYTE PTR [ebx-0x33],cl
  424415:	les    ebp,FWORD PTR [edx+0x7c]
  424418:	shl    BYTE PTR [ecx-0x61],0xef
  42441c:	dec    edi
  42441d:	mov    cl,BYTE PTR [esi-0x2c367c89]
  424423:	out    dx,al
  424424:	and    eax,0x25c0e158
  424429:	call   0x4506f693
  42442e:	loop   0x42445e
  424430:	mov    bh,0x8b
  424432:	dec    esp
  424433:	rcr    BYTE PTR [ebx-0xf],1
  424436:	aaa    
  424437:	fild   QWORD PTR [ebp+0x1a]
  42443a:	(bad)  
  42443b:	and    ebx,edx
  42443d:	mov    WORD PTR [ebx],fs
  42443f:	cmp    esp,ebx
  424441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424442:	fldz   
  424444:	nop
  424445:	test   al,0x9a
  424447:	and    ch,BYTE PTR [eax+ecx*4-0x2a]
  42444b:	mov    dh,BYTE PTR [esi+0xc]
  42444e:	fst    QWORD PTR ds:0x68aaab55
  424454:	lods   al,BYTE PTR ds:[esi]
  424455:	lock inc esp
  424457:	or     DWORD PTR [edx-0x4a8c02bf],eax
  42445d:	imul   edx,DWORD PTR [ebx],0xffffffa8
  424460:	sub    eax,DWORD PTR [eax+0x2f828c9c]
  424466:	jne    0x4244be
  424468:	jecxz  0x42445d
  42446a:	cwde   
  42446b:	into   
  42446c:	sub    al,0x10
  42446e:	cmp    DWORD PTR [esi],edx
  424470:	imul   ebx,DWORD PTR [eax-0x67124284],0xffffffc7
  424477:	imul   ebx,DWORD PTR [edx+ebx*2],0xffffffd3
  42447b:	cmp    BYTE PTR [ecx],ch
  42447d:	dec    esp
  42447e:	rcl    DWORD PTR [eax],1
  424480:	sbb    BYTE PTR [edx],dl
  424482:	(bad)  
  424483:	neg    BYTE PTR [edx-0x5b]
  424486:	jecxz  0x424410
  424488:	mov    dh,cl
  42448a:	in     eax,0x2f
  42448c:	push   ebx
  42448d:	push   ds
  42448e:	stos   BYTE PTR es:[edi],al
  42448f:	aas    
  424490:	test   eax,0xd0276a64
  424495:	xchg   edi,eax
  424496:	sahf   
  424497:	mov    cl,0x14
  424499:	inc    edi
  42449a:	pop    esi
  42449b:	adc    dh,BYTE PTR [edx+0x2f3802a9]
  4244a1:	fwait
  4244a2:	lods   eax,DWORD PTR ds:[esi]
  4244a3:	test   BYTE PTR [esi+ecx*1-0x71241c20],0x42
  4244ab:	call   0xba1ed44f
  4244b0:	xchg   edx,eax
  4244b1:	popf   
  4244b2:	bound  esp,QWORD PTR [ebp+edi*2-0x6161f837]
  4244b9:	mov    bh,0x61
  4244bb:	cli    
  4244bc:	dec    esi
  4244bd:	(bad)  
  4244be:	jne    0x42445d
  4244c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244c1:	scas   al,BYTE PTR es:[edi]
  4244c2:	in     eax,0xea
  4244c4:	test   al,0xa9
  4244c6:	push   0x478ed37e
  4244cb:	mov    al,0x26
  4244cd:	les    eax,FWORD PTR [eax-0x79c8a9c6]
  4244d3:	movq   mm2,QWORD PTR [bx+si-0x72]
  4244d8:	rol    DWORD PTR ds:0xf4bc5296,0x65
  4244df:	inc    ebx
  4244e0:	sbb    BYTE PTR ds:0x21d1bff0,ch
  4244e6:	jo     0x424559
  4244e8:	test   eax,0xb050024
  4244ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244ee:	jnp    0x424563
  4244f0:	sti    
  4244f1:	xor    esi,DWORD PTR [ebp-0x61]
  4244f4:	mov    ds:0xa738ce0,al
  4244f9:	or     eax,0x1baabc6d
  4244fe:	sub    DWORD PTR [edx-0x6f],ebp
  424501:	push   ebx
  424502:	jge    0x424547
  424504:	cld    
  424505:	xor    BYTE PTR [ebp-0x50],al
  424508:	mov    ebp,0x1841131d
  42450d:	pushf  
  42450e:	xor    BYTE PTR [edx],dh
  424510:	popf   
  424511:	scas   eax,DWORD PTR es:[edi]
  424512:	push   eax
  424513:	dec    ecx
  424514:	not    BYTE PTR ds:[edx-0x6]
  424518:	ja     0x42457d
  42451a:	popa   
  42451b:	or     edx,eax
  42451d:	enter  0x3238,0x39
  424521:	pop    ebx
  424522:	pop    esi
  424523:	pop    ebx
  424524:	sti    
  424525:	pop    ebx
  424526:	sahf   
  424527:	ja     0x4244ac
  424529:	jmp    0x8aae:0x65e3b67e
  424530:	(bad)  
  424531:	lods   eax,DWORD PTR ds:[esi]
  424532:	fld    DWORD PTR [ecx]
  424534:	stos   BYTE PTR es:[edi],al
  424535:	int3   
  424536:	push   edi
  424537:	adc    eax,0xe7751b98
  42453c:	adc    ecx,DWORD PTR [esi-0x27bdae4b]
  424542:	mov    eax,0x9b66052b
  424547:	xlat   BYTE PTR ds:[ebx]
  424548:	retf   0xf6e1
  42454b:	repz jne 0x42456a
  42454e:	or     ch,BYTE PTR [ebx-0x39]
  424551:	sub    al,BYTE PTR [ebp-0x2bc7ee56]
  424557:	popa   
  424558:	pop    edx
  424559:	xchg   esi,eax
  42455a:	add    BYTE PTR [edi-0x1ad693ba],dl
  424560:	xchg   BYTE PTR [ebx+ebx*8],bl
  424563:	(bad)  
  424564:	addr16 pop ebp
  424566:	scas   eax,DWORD PTR es:[edi]
  424567:	cld    
  424568:	xlat   BYTE PTR ds:[ebx]
  424569:	pop    ss
  42456a:	retf   0xee14
  42456d:	dec    edi
  42456e:	mov    al,ds:0xe82e9ee3
  424573:	loop   0x4245bd
  424575:	pop    edi
  424576:	xchg   esp,eax
  424577:	xor    BYTE PTR [edi+0x3a3673ec],dh
  42457d:	(bad)  
  42457e:	shl    BYTE PTR [ebp+0x67d396a1],1
  424584:	xor    eax,0xb4e91816
  424589:	sbb    eax,0xd76c0038
  42458e:	loop   0x424553
  424590:	mov    BYTE PTR [edx-0x6f],ah
  424593:	jge    0x424577
  424595:	out    dx,eax
  424596:	rol    bh,1
  424598:	xchg   ebp,eax
  424599:	test   BYTE PTR [ebp-0x2819065],bh
  42459f:	clc    
  4245a0:	stos   DWORD PTR es:[edi],eax
  4245a1:	dec    esp
  4245a2:	idiv   BYTE PTR [esi]
  4245a4:	mov    ds:0xe25d8ad6,al
  4245a9:	sbb    eax,ebx
  4245ab:	aad    0x3c
  4245ad:	imul   ebx,DWORD PTR [eax-0x53],0xf87d4f7d
  4245b4:	mov    ah,0xdb
  4245b6:	inc    edi
  4245b7:	mov    bh,ch
  4245b9:	mov    al,0x54
  4245bb:	inc    edi
  4245bc:	leave  
  4245bd:	pop    ds
  4245be:	in     eax,dx
  4245bf:	cwde   
  4245c0:	xchg   esi,eax
  4245c1:	sbb    al,0x81
  4245c3:	push   esi
  4245c4:	daa    
  4245c5:	in     al,dx
  4245c6:	xlat   BYTE PTR ds:[bx]
  4245c8:	je     0x4245b3
  4245ca:	ins    BYTE PTR es:[edi],dx
  4245cb:	fdivr  DWORD PTR [esi]
  4245cd:	int    0xba
  4245cf:	push   ebp
  4245d0:	jae    0x4245b6
  4245d2:	push   ds
  4245d3:	sub    eax,0xd2ded995
  4245d8:	imul   eax,DWORD PTR [edx],0xd8af06d3
  4245de:	hlt    
  4245df:	and    al,0x60
  4245e1:	sbb    al,0xa4
  4245e3:	mov    cl,0x1
  4245e5:	sbb    edi,DWORD PTR [edx+0x4f]
  4245e8:	sbb    DWORD PTR [esi-0x14],0x97baa09
  4245ef:	xchg   ecx,eax
  4245f0:	cs push es
  4245f2:	inc    ebx
  4245f3:	mov    BYTE PTR [edi],0x9
  4245f6:	sbb    eax,0x7c7fc8eb
  4245fb:	fcom   st(4)
  4245fd:	mov    ecx,0x4ae24cfa
  424602:	call   0x23f4480d
  424607:	std    
  424608:	mov    dl,0x7b
  42460a:	test   eax,0x10eddc45
  42460f:	mov    BYTE PTR [edi-0x3a],ch
  424612:	call   0xd11e66ba
  424617:	addr16 xor eax,0x603957b1
  42461d:	xchg   ecx,eax
  42461e:	jo     0x424673
  424620:	mov    bl,0x48
  424622:	sub    DWORD PTR ds:0xc8bf5d59,0xc3800d87
  42462c:	gs sbb eax,0x9f230a0e
  424632:	xchg   DWORD PTR [esi],edi
  424634:	out    0x52,eax
  424636:	add    DWORD PTR [ebx+0x4800cd88],0xb823577c
  424640:	xor    ah,ah
  424642:	dec    esi
  424643:	call   0x81ae:0x2f4edfa6
  42464a:	out    0xef,al
  42464c:	push   esp
  42464d:	or     BYTE PTR [edx-0x63ab4036],0xa8
  424654:	addr16 jns 0x4245d7
  424657:	(bad)  
  424658:	xchg   ebp,eax
  424659:	sub    eax,0x38fd0af5
  42465e:	mov    ebx,0xfe9dfc67
  424663:	mov    fs:0x8bf12944,al
  424669:	int    0xcf
  42466b:	mov    BYTE PTR [ebx-0x45],dh
  42466e:	mov    bl,0xc4
  424670:	sbb    al,0x14
  424672:	stos   BYTE PTR es:[edi],al
  424673:	push   0x54e5831a
  424678:	mov    esp,0x70e0a826
  42467d:	cmp    al,cl
  42467f:	adc    DWORD PTR [edi+0x7ed16134],ecx
  424685:	cmp    BYTE PTR [ecx-0x6c8d9733],dl
  42468b:	cwde   
  42468c:	(bad)  
  42468d:	(bad)  [ecx+0x370556fb]
  424693:	imul   ecx,DWORD PTR [esi+0x12e0860b],0xc69044b5
  42469d:	and    ecx,DWORD PTR [ecx]
  42469f:	repz test eax,0x497e4d6b
  4246a5:	cmp    ebx,ecx
  4246a7:	jno    0x4246ce
  4246a9:	ds addr16 fsubrp st(0),st
  4246ad:	stos   BYTE PTR es:[edi],al
  4246ae:	xor    esp,DWORD PTR [edx+0x3]
  4246b1:	xchg   DWORD PTR [ebp-0x29],ebp
  4246b4:	inc    edx
  4246b5:	jecxz  0x424699
  4246b7:	rcl    ebp,1
  4246b9:	xlat   BYTE PTR ds:[ebx]
  4246ba:	adc    edx,DWORD PTR [ecx]
  4246bc:	aam    0x40
  4246be:	jl     0x424714
  4246c0:	inc    ebx
  4246c1:	int    0x3b
  4246c3:	pop    ecx
  4246c4:	popf   
  4246c5:	(bad)  
  4246c6:	retf   
  4246c7:	cmc    
  4246c8:	leave  
  4246c9:	daa    
  4246ca:	push   cs
  4246cb:	push   ebx
  4246cc:	ins    BYTE PTR es:[edi],dx
  4246cd:	aam    0x72
  4246cf:	or     BYTE PTR [esi-0x2a],al
  4246d2:	push   esp
  4246d3:	mov    al,BYTE PTR [edx-0x53]
  4246d6:	inc    esp
  4246d8:	imul   BYTE PTR [esp+ebp*4+0x3f]
  4246dc:	adc    al,0xad
  4246de:	nop
  4246df:	pusha  
  4246e0:	pop    ss
  4246e1:	jb     0x42472d
  4246e3:	adc    BYTE PTR [ecx],dh
  4246e5:	and    ebp,DWORD PTR [eax-0x4c310ae6]
  4246eb:	inc    eax
  4246ec:	test   BYTE PTR [eax],ch
  4246ee:	adc    al,BYTE PTR ds:0x9d174a50
  4246f4:	sbb    eax,0xe0fae0a4
  4246f9:	test   eax,0x36608b67
  4246fe:	shr    edi,1
  424700:	and    dh,BYTE PTR [esi+0x24b75b4e]
  424706:	comiss xmm0,DWORD PTR [ebx]
  424709:	push   esp
  42470a:	ret    0x4123
  42470d:	rcr    DWORD PTR [ebx-0x32daadf3],0x92
  424714:	inc    edx
  424715:	ffreep st(7)
  424717:	adc    BYTE PTR [edx+0x36],cl
  42471a:	adc    al,0x5a
  42471c:	(bad)  
  42471d:	sar    esi,cl
  42471f:	aad    0xf1
  424721:	fsubr  DWORD PTR [esi-0x25]
  424724:	lahf   
  424725:	sbb    bh,ah
  424727:	dec    BYTE PTR [edi+0x2021ced4]
  42472d:	push   0xffffffe2
  42472f:	dec    ecx
  424730:	push   esp
  424731:	and    edi,DWORD PTR [edi+0x7aef74cb]
  424737:	sub    ebp,DWORD PTR [edx+ecx*8]
  42473a:	(bad)  [esi]
  42473c:	call   0x7e51:0xa72ab3f4
  424743:	mov    bh,0xda
  424745:	and    esp,DWORD PTR [edx]
  424747:	mov    cl,0x76
  424749:	and    eax,0x99e33950
  42474e:	add    ecx,DWORD PTR [ebx-0x31]
  424751:	leave  
  424752:	jo     0x42471e
  424754:	test   DWORD PTR [ebx+0x50b85aab],eax
  42475a:	lock in al,0x29
  42475d:	add    DWORD PTR [edx-0x430773c7],0xffffffdf
  424764:	xor    al,0x77
  424766:	ficom  DWORD PTR fs:[esi-0x36]
  42476a:	out    dx,al
  42476b:	popa   
  42476c:	push   ss
  42476d:	out    0x5a,al
  42476f:	jmp    0x4247d6
  424771:	test   eax,0x4723c8bd
  424776:	out    dx,eax
  424777:	inc    ecx
  424778:	pop    edi
  424779:	enter  0x3428,0x8d
  42477d:	or     DWORD PTR [esi],0xb
  424780:	arpl   di,cx
  424782:	add    DWORD PTR [eax],eax
  424784:	test   BYTE PTR [ebx+0x70],bl
  424787:	out    0x7f,eax
  424789:	js     0x424712
  42478b:	sub    BYTE PTR [eax+0x16c6e26e],ah
  424791:	jo     0x4247db
  424793:	js     0x424814
  424795:	(bad)  
  424796:	jnp    0x4247ba
  424798:	stos   BYTE PTR es:[edi],al
  424799:	rcl    BYTE PTR [esi],1
  42479b:	hlt    
  42479c:	jns    0x42480a
  42479e:	sbb    eax,DWORD PTR [esi]
  4247a0:	mov    dl,0xf8
  4247a2:	rol    esi,0xcf
  4247a5:	call   0x63b797c4
  4247aa:	pop    esi
  4247ab:	jp     0x424807
  4247ad:	cmp    al,0xab
  4247af:	int3   
  4247b0:	xchg   esi,eax
  4247b1:	pop    ebp
  4247b2:	loope  0x42478c
  4247b4:	push   ebp
  4247b5:	(bad)  
  4247b6:	fistp  DWORD PTR [esi]
  4247b8:	aad    0x6c
  4247ba:	pop    esp
  4247bb:	cmp    edi,DWORD PTR [ebp+0x0]
  4247be:	dec    ebx
  4247bf:	popf   
  4247c0:	xchg   edi,eax
  4247c1:	jno    0x4247c5
  4247c3:	sub    ecx,eax
  4247c5:	jnp    0x424813
  4247c7:	pop    edx
  4247c8:	gs dec ecx
  4247ca:	and    ebp,DWORD PTR [eax-0x4b]
  4247cd:	sub    BYTE PTR ds:0xc8470f05,bl
  4247d3:	retf   
  4247d4:	fwait
  4247d5:	jmp    0xfd15:0xb45933cf
  4247dc:	adc    eax,0x3c0c7c21
  4247e1:	pusha  
  4247e2:	mov    edi,0x6862012d
  4247e7:	or     eax,0x2648aeea
  4247ec:	mov    DWORD PTR [esp+eiz*2],edi
  4247ef:	stos   DWORD PTR es:[edi],eax
  4247f0:	and    dl,0x83
  4247f3:	jns    0x4247e9
  4247f5:	add    ebp,DWORD PTR [edi]
  4247f7:	int    0xeb
  4247f9:	and    al,0x33
  4247fb:	lahf   
  4247fc:	mov    edi,0x536c4089
  424801:	push   esp
  424802:	rcr    BYTE PTR [edi],1
  424804:	xchg   BYTE PTR [esi+0x169cf6b0],al
  42480a:	push   esi
  42480b:	xchg   BYTE PTR [ebx],dl
  42480d:	ins    DWORD PTR es:[edi],dx
  42480e:	xchg   ebx,ecx
  424810:	aaa    
  424811:	mul    DWORD PTR [eax+ecx*4]
  424814:	mov    ebp,0xabd64702
  424819:	cmp    edi,eax
  42481b:	sahf   
  42481c:	sub    BYTE PTR [edi],0x8a
  42481f:	idiv   dh
  424821:	(bad)  
  424822:	jnp    0x4247c7
  424824:	test   edi,esi
  424826:	mov    dl,BYTE PTR [esp+ebx*1-0x19f494e0]
  42482d:	push   ss
  42482e:	push   esi
  42482f:	sbb    eax,0x58acb93b
  424834:	test   eax,0x426d35fe
  424839:	cli    
  42483a:	adc    BYTE PTR [eiz*2-0x726a447e],al
  424841:	test   eax,0x2cb60b4f
  424846:	(bad)  
  424847:	gs pop ss
  424849:	mov    DWORD PTR fs:[esi+0x2182e970],0x1a03f69b
  424854:	dec    ecx
  424855:	fldcw  WORD PTR [edi]
  424857:	test   eax,0xd48f8d61
  42485c:	xor    ah,bl
  42485e:	je     0x424806
  424860:	add    BYTE PTR [esi+ebx*4-0x3b],cl
  424864:	inc    esp
  424865:	aas    
  424866:	dec    ebx
  424867:	in     al,0xb5
  424869:	or     DWORD PTR [edi+0x3035c467],esp
  42486f:	xchg   al,cl
  424871:	sub    DWORD PTR [edi-0x325a6d32],esp
  424877:	aas    
  424878:	jge    0x4248c1
  42487a:	test   al,0x19
  42487c:	pop    eax
  42487d:	sti    
  42487e:	pop    ebp
  42487f:	sbb    edx,esp
  424881:	cdq    
  424882:	dec    edx
  424883:	jmp    0x5b322880
  424888:	cdq    
  424889:	dec    ecx
  42488a:	push   eax
  42488b:	xor    DWORD PTR [esi],edi
  42488d:	adc    ah,BYTE PTR [eax]
  42488f:	stos   DWORD PTR es:[edi],eax
  424890:	ret    0xc5b5
  424893:	xor    BYTE PTR [ebx],ch
  424895:	jae    0x4248ac
  424897:	jne    0x4248e8
  424899:	pop    eax
  42489a:	outs   dx,BYTE PTR ds:[esi]
  42489b:	jnp    0x42481d
  42489d:	sub    BYTE PTR [ebx],bl
  42489f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a0:	or     DWORD PTR es:[ebx],edx
  4248a3:	popa   
  4248a4:	pop    esi
  4248a5:	daa    
  4248a6:	pop    ecx
  4248a7:	adc    eax,0x6d6ebf60
  4248ac:	sub    edx,DWORD PTR [esi+0x3d15eece]
  4248b2:	xor    dl,al
  4248b4:	mov    al,ds:0xd495b226
  4248b9:	xor    BYTE PTR [ecx],cl
  4248bb:	adc    DWORD PTR [ecx+0x2f54f317],esi
  4248c1:	and    al,0xc
  4248c3:	je     0x424933
  4248c5:	scas   al,BYTE PTR es:[edi]
  4248c6:	mov    al,ds:0xb481083
  4248cb:	lahf   
  4248cc:	cmp    bl,al
  4248ce:	xor    eax,0x214e1127
  4248d3:	aas    
  4248d4:	(bad)  
  4248d5:	sub    ecx,edx
  4248d7:	lock (bad) 
  4248d9:	cli    
  4248da:	dec    esi
  4248db:	cmc    
  4248dc:	sub    al,BYTE PTR [eax-0x3e]
  4248df:	or     al,0x95
  4248e1:	scas   al,BYTE PTR es:[edi]
  4248e2:	lods   al,BYTE PTR ds:[esi]
  4248e3:	fisttp QWORD PTR [ecx+0x1279c85e]
  4248ea:	mov    ds:0xf886bc10,al
  4248ef:	enter  0x22b5,0x92
  4248f3:	scas   al,BYTE PTR es:[edi]
  4248f4:	popa   
  4248f5:	es mov ecx,0xabcfaa29
  4248fb:	xchg   edx,eax
  4248fc:	cmc    
  4248fd:	or     eax,0x84a7e297
  424902:	jmp    0xbcf7f61b
  424907:	add    eax,DWORD PTR [ebp-0xb]
  42490a:	xchg   edx,eax
  42490b:	call   0x7859:0x1530e0e1
  424912:	cmp    DWORD PTR [edx+eax*1],esi
  424915:	daa    
  424916:	mov    esi,DWORD PTR [edi+0x3a]
  424919:	ret    
  42491a:	and    cl,BYTE PTR [esi+0x2d]
  42491d:	xchg   ecx,eax
  42491e:	nop
  42491f:	(bad)  
  424920:	sub    DWORD PTR [edx],ebp
  424922:	fwait
  424923:	push   edx
  424924:	test   al,0x3e
  424926:	cmp    al,0x76
  424928:	push   ds
  424929:	add    al,0x80
  42492b:	lods   eax,DWORD PTR ds:[esi]
  42492c:	push   0xede59c95
  424931:	dec    ebx
  424932:	stos   BYTE PTR es:[edi],al
  424933:	loopne 0x424923
  424935:	and    al,BYTE PTR [eax+0xc]
  424938:	sub    eax,0x413a1e66
  42493d:	xlat   BYTE PTR ds:[ebx]
  42493e:	and    BYTE PTR [eax+0x74],bl
  424941:	out    0xb9,eax
  424943:	call   0x2599:0x65bb4520
  42494a:	pop    edi
  42494b:	sub    al,0x24
  42494d:	out    dx,al
  42494e:	jbe    0x424916
  424950:	xor    ah,BYTE PTR [ebx+edi*2-0x5]
  424954:	mov    esp,0xa217e057
  424959:	sbb    ecx,eax
  42495b:	out    dx,al
  42495c:	(bad)  
  42495d:	fiadd  WORD PTR [ebp-0x3680e2eb]
  424963:	cwde   
  424964:	mov    eax,ds:0xda08d1b
  424969:	adc    DWORD PTR [eax],edi
  42496b:	mov    ds:0x57c5d237,eax
  424970:	test   eax,0x47d4462f
  424975:	test   DWORD PTR [ecx],0x9b1d212c
  42497b:	mov    fs,WORD PTR ds:0x967b84dd
  424981:	xchg   BYTE PTR [ebx-0x48],bl
  424984:	out    0x9,eax
  424986:	in     al,dx
  424987:	cs dec eax
  424989:	lds    ebx,FWORD PTR [edi-0x2b]
  42498c:	into   
  42498d:	icebp  
  42498e:	xor    al,0x8a
  424990:	sub    BYTE PTR [ecx+0x29631b74],dh
  424996:	inc    eax
  424997:	and    eax,0xc23f7ba8
  42499c:	xor    al,0x9
  42499e:	mov    al,0x31
  4249a0:	mov    bl,0x41
  4249a2:	rcl    BYTE PTR [edx-0x73],cl
  4249a5:	out    0xf1,al
  4249a7:	outs   dx,DWORD PTR ds:[esi]
  4249a8:	imul   edi,DWORD PTR [ecx+0x4c],0xffffffa0
  4249ac:	fisubr DWORD PTR [esi-0x3b]
  4249af:	inc    edi
  4249b0:	retf   
  4249b1:	sbb    ebx,edi
  4249b3:	mov    ds:0x997c815e,al
  4249b8:	and    BYTE PTR [edx-0x19a47674],dh
  4249be:	add    dh,BYTE PTR [ebx+0x22841d03]
  4249c4:	add    dh,bh
  4249c6:	(bad)  
  4249c7:	out    dx,al
  4249c8:	cmp    al,0xfa
  4249ca:	fbstp  TBYTE PTR ds:0x97ce46b5
  4249d0:	repnz xor eax,0x21dc5816
  4249d6:	push   es
  4249d7:	outs   dx,BYTE PTR ds:[esi]
  4249d8:	daa    
  4249d9:	shr    BYTE PTR [edx+0x57],0x66
  4249dd:	pop    es
  4249de:	sub    DWORD PTR [esp+ebp*1],0xf2d157f9
  4249e5:	jp     0x424a19
  4249e7:	rol    DWORD PTR [esi+ebp*4-0x3a],1
  4249eb:	adc    DWORD PTR [ecx],0x54b440eb
  4249f1:	cmp    edx,DWORD PTR [ecx+0x2a07485a]
  4249f7:	stos   BYTE PTR es:[edi],al
  4249f8:	jp     0x424998
  4249fa:	imul   edx,ecx,0x4c
  4249fd:	bound  ebp,QWORD PTR [edi+0x6a0616e2]
  424a03:	mov    eax,ds:0xc67d0c96
  424a08:	out    dx,eax
  424a09:	mov    cl,BYTE PTR [esi]
  424a0b:	xchg   ebx,eax
  424a0c:	dec    ebp
  424a0d:	jge    0x424a44
  424a0f:	mov    esi,ecx
  424a11:	mov    BYTE PTR [esi-0x41],cl
  424a14:	jmp    0x940:0x68366516
  424a1b:	jecxz  0x4249a7
  424a1d:	xchg   ecx,eax
  424a1e:	dec    edi
  424a1f:	std    
  424a20:	mov    esp,0x6014b5cd
  424a25:	xchg   DWORD PTR [ebx],edx
  424a27:	ret    0x9a51
  424a2a:	iret   
  424a2b:	or     DWORD PTR [bp+0x2931],0xd50f5591
  424a34:	cli    
  424a35:	jle    0x424a7f
  424a37:	mov    ch,0x12
  424a39:	js     0x424a9f
  424a3b:	sub    al,0xe2
  424a3d:	push   0x57
  424a3f:	(bad)  
  424a41:	xchg   ebx,eax
  424a42:	in     al,dx
  424a43:	or     DWORD PTR [esi],eax
  424a45:	hlt    
  424a46:	push   0x87c70c91
  424a4b:	inc    edi
  424a4c:	je     0x424aa1
  424a4e:	jg     0x424a51
  424a50:	pop    ecx
  424a51:	xchg   ebp,eax
  424a52:	push   ebx
  424a53:	mov    dh,0x52
  424a55:	xchg   ecx,eax
  424a56:	pushf  
  424a57:	fldcw  WORD PTR [ecx]
  424a59:	aas    
  424a5a:	sbb    ebp,DWORD PTR [edx-0x34460d19]
  424a60:	lahf   
  424a61:	pop    esi
  424a62:	ffreep st(7)
  424a64:	popf   
  424a65:	pop    ecx
  424a66:	sub    ebp,DWORD PTR [ebx-0x6a]
  424a69:	ds in  eax,dx
  424a6b:	into   
  424a6c:	rcl    DWORD PTR [ecx+0x5e],0x47
  424a70:	ret    
  424a71:	int    0x12
  424a73:	nop
  424a74:	jg     0x424ab1
  424a76:	mov    BYTE PTR [edx],bh
  424a78:	dec    eax
  424a7a:	call   0xe5fd:0x92183867
  424a81:	and    ah,BYTE PTR [ecx]
  424a83:	or     al,0x8c
  424a85:	addr16 in al,dx
  424a87:	pushf  
  424a88:	lock jbe 0x424ad5
  424a8b:	mov    cs,WORD PTR [ecx+0x6f79a571]
  424a91:	sub    ch,dl
  424a93:	pop    ecx
  424a94:	cmc    
  424a95:	lahf   
  424a96:	addr16 cmp al,0x86
  424a99:	test   BYTE PTR [edi],bh
  424a9b:	push   esp
  424a9c:	mov    dl,0x3a
  424a9e:	bound  ebx,QWORD PTR ds:0x278b1005
  424aa4:	jle    0x424a9d
  424aa6:	(bad)  
  424aa7:	(bad)  
  424aa8:	adc    DWORD PTR [esi],esi
  424aaa:	retf   
  424aab:	int    0xea
  424aad:	push   ebx
  424aae:	lock stc 
  424ab0:	mov    ecx,0xff482d8
  424ab5:	or     al,0x9e
  424ab7:	mov    ah,0x6
  424ab9:	retf   0xdcf2
  424abc:	daa    
  424abd:	gs js  0x424b1e
  424ac0:	arpl   WORD PTR [edx-0x263982d3],bx
  424ac6:	or     DWORD PTR [esi+0x23],0x4e
  424aca:	popa   
  424acb:	loopne 0x424aad
  424acd:	xor    eax,0xaff8a907
  424ad2:	jp     0x424b3b
  424ad4:	sahf   
  424ad5:	loopne 0x424ae8
  424ad7:	push   esp
  424ad8:	jmp    0x2c69:0xcbe42e27
  424adf:	xchg   ecx,eax
  424ae0:	push   ecx
  424ae1:	adc    BYTE PTR [edi],dl
  424ae3:	mov    ds:0x1f0dadce,al
  424ae8:	mov    dh,0x6
  424aea:	jp     0x424af6
  424aec:	inc    edi
  424aed:	or     ah,BYTE PTR [edx-0x68bcb644]
  424af3:	lea    edx,[esp+edx*4+0x77]
  424af7:	or     DWORD PTR [ebx-0x3e],edx
  424afa:	loop   0x424acc
  424afc:	out    0x63,al
  424afe:	loopne 0x424afb
  424b00:	mov    eax,0xa4bb7177
  424b05:	mov    cl,0x55
  424b07:	dec    esp
  424b08:	lods   al,BYTE PTR ds:[esi]
  424b09:	inc    ecx
  424b0a:	sbb    DWORD PTR [esi+0x6473907a],esi
  424b10:	dec    ebx
  424b11:	int    0x14
  424b13:	ins    DWORD PTR es:[edi],dx
  424b14:	xor    eax,DWORD PTR [edi+0x8]
  424b17:	inc    esp
  424b18:	cmp    BYTE PTR [eax+ebp*2+0x67],al
  424b1c:	je     0x424b9a
  424b1e:	rcr    BYTE PTR [eax],1
  424b20:	add    al,0x56
  424b22:	fist   WORD PTR [esi+0x10]
  424b25:	dec    edi
  424b26:	cmp    eax,0x698e6f63
  424b2b:	xor    al,0xa4
  424b2d:	stc    
  424b2e:	je     0x424b63
  424b30:	test   DWORD PTR ds:0x55d59460,edx
  424b36:	jmp    0xc3fc479a
  424b3b:	cmc    
  424b3c:	jge    0x424b2f
  424b3e:	or     edx,DWORD PTR [esi+ebx*1-0x58]
  424b42:	clc    
  424b43:	sub    esi,DWORD PTR [esi+0x76afd9b7]
  424b49:	cmp    eax,DWORD PTR [eax-0x3d1db5e4]
  424b4f:	lds    eax,FWORD PTR [ebx-0x22536fa2]
  424b55:	inc    ecx
  424b56:	xchg   esi,eax
  424b57:	scas   al,BYTE PTR es:[edi]
  424b58:	(bad)  
  424b59:	pop    edx
  424b5a:	je     0x424bd8
  424b5c:	jge    0x424bab
  424b5e:	adc    DWORD PTR [edx-0x37d0123b],ecx
  424b64:	push   0xffffffa8
  424b66:	popa   
  424b67:	loope  0x424bba
  424b69:	jecxz  0x424b06
  424b6b:	outs   dx,DWORD PTR ds:[esi]
  424b6c:	imul   edi,DWORD PTR [ebp-0x4a979b38],0xffffffb4
  424b73:	pop    esi
  424b74:	cmc    
  424b75:	xchg   BYTE PTR [ebp-0x33eeab7a],ch
  424b7b:	jge    0x424b44
  424b7d:	pop    edx
  424b7e:	pop    ebp
  424b7f:	hlt    
  424b80:	dec    esp
  424b81:	jp     0x424bf0
  424b83:	sbb    DWORD PTR [esi],ebp
  424b85:	inc    ebx
  424b86:	dec    ecx
  424b87:	xchg   ebp,eax
  424b88:	jg     0x424b1d
  424b8a:	pop    ss
  424b8b:	xor    BYTE PTR [eax-0x176c4280],cl
  424b91:	std    
  424b92:	adc    bh,BYTE PTR [eax]
  424b94:	in     eax,dx
  424b95:	rol    al,cl
  424b97:	ja     0x424b80
  424b99:	retf   
  424b9a:	add    esi,DWORD PTR [ebx+0x44]
  424b9d:	sub    eax,0xef3c20ce
  424ba2:	mov    ah,0xd
  424ba4:	dec    ecx
  424ba5:	adc    DWORD PTR ds:0x2e5edaa0,edi
  424bab:	(bad)  
  424bac:	jecxz  0x424b7e
  424bae:	test   bh,bh
  424bb0:	mov    al,0x61
  424bb2:	sbb    bh,cl
  424bb4:	adc    eax,0x5a58ebfc
  424bb9:	pushf  
  424bba:	nop
  424bbb:	jge    0x424bbe
  424bbd:	dec    edx
  424bbe:	and    eax,DWORD PTR [esi+0x38]
  424bc1:	icebp  
  424bc2:	xchg   esi,eax
  424bc3:	js     0x424c0a
  424bc5:	ins    BYTE PTR es:[edi],dx
  424bc6:	jo     0x424c06
  424bc8:	jns    0x424c10
  424bca:	jp     0x424bb7
  424bcc:	(bad)  
  424bce:	popa   
  424bcf:	sub    ecx,DWORD PTR [ecx]
  424bd1:	sub    al,cl
  424bd3:	stos   BYTE PTR es:[edi],al
  424bd4:	pop    es
  424bd5:	mov    esp,0x99e18747
  424bda:	xlat   BYTE PTR ds:[ebx]
  424bdb:	into   
  424bdc:	push   eax
  424bdd:	mov    ecx,0x98226bf6
  424be2:	xor    eax,0x9728022e
  424be7:	bound  ebx,QWORD PTR [eax-0x105ca971]
  424bed:	inc    eax
  424bee:	fwait
  424bef:	xchg   edx,eax
  424bf0:	loopne 0x424c4c
  424bf2:	cmp    DWORD PTR [eax+0x6e],ebp
  424bf5:	adc    DWORD PTR [edx],edi
  424bf7:	mov    dh,0xf9
  424bf9:	cs rcl ah,cl
  424bfc:	push   ss
  424bfd:	inc    edx
  424bfe:	das    
  424bff:	mov    ah,0xd2
  424c01:	int    0xc0
  424c03:	(bad)  
  424c04:	(bad)  
  424c05:	mov    bh,0xdf
  424c07:	sub    dh,ch
  424c09:	pop    eax
  424c0a:	std    
  424c0b:	enter  0x4638,0x91
  424c0f:	pop    ebx
  424c10:	xchg   ebx,eax
  424c11:	jno    0x424c11
  424c13:	and    DWORD PTR [ebx+0x47],ebp
  424c16:	icebp  
  424c17:	adc    eax,0x8afffee1
  424c1c:	jle    0x424bab
  424c1e:	inc    esi
  424c1f:	arpl   WORD PTR [ebx+0x3],bx
  424c22:	inc    eax
  424c23:	inc    edx
  424c24:	out    dx,al
  424c25:	mov    dh,0xa7
  424c27:	lods   eax,DWORD PTR ds:[esi]
  424c28:	ds xchg ebp,eax
  424c2a:	pop    esi
  424c2b:	sub    edx,ecx
  424c2d:	or     DWORD PTR [edi],0xfffffffd
  424c30:	and    al,0xdd
  424c32:	jb     0x424c66
  424c34:	idiv   BYTE PTR [ebx+0xac77f09]
  424c3a:	arpl   WORD PTR [ebx],cx
  424c3c:	ror    DWORD PTR [edi+0x15],1
  424c3f:	outs   dx,DWORD PTR cs:[esi]
  424c41:	(bad)  
  424c42:	js     0x424cb4
  424c44:	out    dx,al
  424c45:	sub    eax,0x5e058142
  424c4b:	pop    eax
  424c4c:	fwait
  424c4d:	mov    ah,0x5
  424c4f:	inc    ebx
  424c50:	fild   QWORD PTR [ecx]
  424c52:	add    esi,eax
  424c54:	(bad)  
  424c55:	dec    eax
  424c56:	es jae 0x424c7e
  424c59:	mov    al,0x2
  424c5b:	cmp    eax,0x7a62f194
  424c60:	jle    0x424cd9
  424c62:	cvtps2pd xmm1,xmm2
  424c65:	inc    ebx
  424c66:	shr    BYTE PTR [esi-0x20],0x46
  424c6a:	je     0x424ccc
  424c6c:	nop
  424c6d:	jne    0x424c2a
  424c6f:	sar    DWORD PTR [ebx],1
  424c71:	jbe    0x424c70
  424c73:	sbb    al,0xd7
  424c75:	in     eax,dx
  424c76:	mov    WORD PTR [edx+0x29],?
  424c79:	jmp    0xd6a:0xa6ee8bfd
  424c80:	xchg   edi,eax
  424c81:	jg     0x424cb7
  424c83:	fimul  DWORD PTR [ecx]
  424c85:	push   esi
  424c86:	jl     0x424c16
  424c88:	add    al,0xe
  424c8a:	pop    ebx
  424c8b:	bound  esi,QWORD PTR ds:0x2980dc83
  424c91:	sub    al,0xf0
  424c93:	mov    ds:0x5682f19a,al
  424c98:	dec    edi
  424c99:	jecxz  0x424d11
  424c9b:	pop    esi
  424c9c:	add    ebx,eax
  424c9e:	mov    eax,0x5a3b80e8
  424ca3:	arpl   WORD PTR gs:[edx+eax*2-0x11],dx
  424ca8:	jo     0x424cb3
  424caa:	and    ah,BYTE PTR [edx]
  424cac:	jnp    0x424c54
  424cae:	js     0x424cf4
  424cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cb1:	in     al,0xb7
  424cb3:	int3   
  424cb4:	sbb    ah,BYTE PTR [edi]
  424cb6:	adc    DWORD PTR [esi],0xfffffffd
  424cb9:	pop    ecx
  424cba:	sbb    esi,eax
  424cbc:	mov    BYTE PTR ds:0x49f49729,bh
  424cc2:	xor    DWORD PTR [esi],ebx
  424cc4:	push   eax
  424cc5:	pop    edi
  424cc6:	cs (bad) 
  424cc8:	retf   
  424cc9:	and    ebx,DWORD PTR [edx+0x3727242e]
  424ccf:	pop    edi
  424cd0:	lahf   
  424cd1:	mov    ah,0x6a
  424cd3:	ins    DWORD PTR es:[edi],dx
  424cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cd5:	popf   
  424cd6:	dec    esp
  424cd7:	pop    eax
  424cd8:	dec    edx
  424cd9:	sahf   
  424cda:	push   cs
  424cdb:	jp     0x424d4b
  424cdd:	mov    DWORD PTR [ecx],esp
  424cdf:	xchg   BYTE PTR [edi],bh
  424ce1:	lods   al,BYTE PTR ds:[esi]
  424ce2:	mov    al,ds:0x43e9d27c
  424ce7:	add    al,0xd1
  424ce9:	imul   edx,DWORD PTR [edx-0x4f3b2bc9],0xffffff9e
  424cf0:	cmp    bl,ah
  424cf2:	(bad)  
  424cf3:	sub    al,0x8e
  424cf5:	dec    ebx
  424cf6:	fisubr WORD PTR [edx-0x2e]
  424cf9:	mov    eax,DWORD PTR [ecx+0x35]
  424cfc:	sbb    DWORD PTR [ebp-0xa17607e],esi
  424d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d03:	data16 fld DWORD PTR ds:0x58f06533
  424d0a:	sbb    ecx,DWORD PTR [edi]
  424d0c:	inc    ecx
  424d0d:	add    eax,0x54eac65
  424d12:	call   0x9161:0xa925541c
  424d19:	mov    al,ds:0x99be438a
  424d1e:	cmp    al,bh
  424d20:	in     eax,dx
  424d21:	xchg   DWORD PTR [ecx-0x5b],esi
  424d24:	in     al,0xfb
  424d26:	pop    ds
  424d27:	xchg   ebp,eax
  424d28:	push   esi
  424d29:	xor    ecx,DWORD PTR [ebx+edi*4+0x54]
  424d2d:	cmp    eax,0x5a56a017
  424d32:	or     BYTE PTR [ebx-0x15],dl
  424d35:	push   eax
  424d36:	inc    ebp
  424d37:	xchg   ebx,eax
  424d38:	sub    al,0xd8
  424d3a:	and    bh,cl
  424d3c:	out    dx,eax
  424d3d:	push   0x42
  424d3f:	fcom   QWORD PTR [bx+0x5d]
  424d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d44:	fucomi st,st(4)
  424d46:	gs js  0x424d1b
  424d49:	jo     0x424d14
  424d4b:	mov    ecx,0x3456c55d
  424d50:	shl    BYTE PTR [ebx+ebx*8+0x3e],0xe2
  424d55:	or     cl,BYTE PTR [ebx+0x5d47906b]
  424d5b:	not    esi
  424d5d:	push   ds
  424d5e:	jmp    0x64dd:0x3eef8da7
  424d65:	inc    ecx
  424d66:	icebp  
  424d67:	stos   DWORD PTR es:[edi],eax
  424d68:	add    edi,ecx
  424d6a:	xchg   esp,eax
  424d6b:	and    eax,ebp
  424d6d:	enter  0xe221,0xf9
  424d71:	mov    al,ds:0xeac43789
  424d76:	scas   al,BYTE PTR es:[edi]
  424d77:	fld    DWORD PTR [ebx-0x34b7a81d]
  424d7d:	adc    esp,ebx
  424d7f:	das    
  424d80:	sti    
  424d81:	jno    0x424d96
  424d83:	mov    dh,0xc9
  424d85:	lahf   
  424d86:	or     ch,0x5f
  424d89:	aam    0xc5
  424d8b:	sbb    esp,DWORD PTR [ebx+ebp*4+0xa]
  424d8f:	mov    ?,WORD PTR [ebx+0x52]
  424d92:	stos   BYTE PTR es:[edi],al
  424d93:	inc    ecx
  424d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d95:	mov    ebp,0x862f395
  424d9a:	push   esi
  424d9b:	cwde   
  424d9c:	test   BYTE PTR [ebx],bh
  424d9e:	cmp    al,0xca
  424da0:	cmp    eax,0xe20dbed5
  424da5:	pop    es
  424da6:	or     BYTE PTR [edi+0x76b96387],al
  424dac:	cmp    al,0x84
  424dae:	mov    al,ds:0xb07b7903
  424db3:	push   ecx
  424db4:	(bad)  
  424db5:	repnz in al,0x36
  424db8:	loopne 0x424e13
  424dba:	pop    eax
  424dbb:	sti    
  424dbc:	fcmovnu st,st(3)
  424dbe:	and    eax,0xf6ff6957
  424dc3:	into   
  424dc4:	(bad)  
  424dc5:	jno    0x424d5d
  424dc7:	push   eax
  424dc8:	cld    
  424dc9:	test   esi,edi
  424dcb:	and    BYTE PTR [edi+eiz*4],cl
  424dce:	jmp    0x99b2:0x42ab10a1
  424dd5:	xchg   ecx,eax
  424dd6:	inc    ebp
  424dd7:	or     al,0x2e
  424dd9:	inc    ebx
  424dda:	jne    0x424e05
  424ddc:	loopne 0x424e1c
  424dde:	sub    BYTE PTR ds:0xa5e65ef2,cl
  424de4:	js     0x424e5b
  424de6:	mov    ds:0xa9a1d9e6,eax
  424deb:	push   es
  424dec:	cmp    ebp,DWORD PTR [edx]
  424dee:	add    BYTE PTR ds:0xd47420da,bl
  424df4:	jnp    0x424dbf
  424df6:	push   ecx
  424df7:	xchg   ebp,eax
  424df8:	outs   dx,BYTE PTR ds:[esi]
  424df9:	lahf   
  424dfa:	xor    eax,0xe70574d5
  424dff:	int    0x11
  424e01:	cs das 
  424e03:	rcr    BYTE PTR [ebp+eiz*4-0x5c],0x87
  424e08:	cmp    al,0x79
  424e0a:	xlat   BYTE PTR ds:[ebx]
  424e0b:	shl    DWORD PTR [ebp+0x6073539a],cl
  424e11:	mov    BYTE PTR [esi],ch
  424e13:	clc    
  424e14:	call   0x3f0275b6
  424e19:	and    BYTE PTR [eax+0x1b],0xa9
  424e1d:	push   edi
  424e1e:	jb     0x424e45
  424e20:	in     al,dx
  424e21:	push   edi
  424e22:	cld    
  424e23:	popf   
  424e24:	inc    eax
  424e25:	jmp    0x95bf41ad
  424e2a:	inc    ebx
  424e2b:	cmp    dl,dh
  424e2d:	ror    dh,0xc8
  424e30:	adc    esp,DWORD PTR [edx+esi*4+0x2ffc5314]
  424e37:	sub    al,0xa5
  424e39:	sub    BYTE PTR [edi-0x80],0x9f
  424e3d:	or     al,0xb6
  424e3f:	jmp    0x424e5e
  424e41:	cmp    BYTE PTR [bp+si+0x2b],0x17
  424e46:	hlt    
  424e47:	adc    esp,DWORD PTR [edi]
  424e49:	(bad)  
  424e4a:	mov    ds:0x4d7a7d81,al
  424e4f:	mov    ecx,0xe61a9826
  424e54:	dec    DWORD PTR [eax-0x23]
  424e57:	js     0x424e0e
  424e59:	ins    BYTE PTR es:[edi],dx
  424e5a:	fidivr DWORD PTR [eax+eax*1]
  424e5d:	aaa    
  424e5e:	xchg   edi,edi
  424e60:	arpl   WORD PTR [edi-0x51],si
  424e63:	in     al,0xe5
  424e65:	pop    es
  424e66:	imul   edi,DWORD PTR [esi-0x26],0x6c
  424e6a:	and    eax,0x1585fe5d
  424e6f:	xchg   esi,eax
  424e70:	jo     0x424eec
  424e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e73:	stos   BYTE PTR es:[edi],al
  424e74:	call   0x835d4462
  424e79:	(bad)  
  424e7a:	push   0xb59b203b
  424e7f:	mov    ecx,0xb70006b2
  424e84:	mov    ?,edx
  424e86:	fstp   TBYTE PTR [ecx+0x7c]
  424e89:	rcr    BYTE PTR [ebx],0xa
  424e8c:	pushf  
  424e8d:	aas    
  424e8e:	into   
  424e8f:	xor    dl,BYTE PTR [edi-0x7b101e9b]
  424e95:	xchg   WORD PTR [edi+0x15a4975d],bx
  424e9c:	js     0x424eed
  424e9e:	mov    BYTE PTR [edx-0x3d],ch
  424ea1:	add    cl,ch
  424ea3:	xor    DWORD PTR [ecx],esi
  424ea5:	sbb    eax,DWORD PTR es:[ecx+0x71]
  424ea9:	les    ebp,FWORD PTR [esi]
  424eab:	daa    
  424eac:	push   0xf0136b44
  424eb1:	(bad)  
  424eb2:	push   edi
  424eb3:	arpl   WORD PTR [ebx-0x78ae9135],si
  424eb9:	in     eax,dx
  424eba:	in     eax,dx
  424ebb:	mov    ds:0x28abfc4f,al
  424ec0:	adc    ecx,DWORD PTR [ebx]
  424ec2:	jnp    0x424f21
  424ec4:	mov    ah,0xeb
  424ec6:	retf   
  424ec7:	push   ds
  424ec8:	or     eax,0xd28568dc
  424ecd:	cwde   
  424ece:	(bad)  
  424ecf:	icebp  
  424ed0:	push   edi
  424ed1:	rcl    BYTE PTR [eax+0x4e],0x1f
  424ed5:	push   0xffffffee
  424ed7:	xchg   ebx,eax
  424ed8:	imul   eax,DWORD PTR [esi-0x8],0x47
  424edc:	scas   eax,DWORD PTR es:[edi]
  424edd:	into   
  424ede:	aaa    
  424edf:	pop    edx
  424ee0:	or     eax,0xed7586f4
  424ee5:	rcl    DWORD PTR [ebx],1
  424ee7:	sub    al,0xfa
  424ee9:	ds push es
  424eeb:	and    DWORD PTR [ebx+0x7269b6ca],ebp
  424ef1:	or     ch,al
  424ef3:	gs into 
  424ef5:	jno    0x424eb4
  424ef7:	sub    BYTE PTR [esi],bl
  424ef9:	ror    DWORD PTR [ebp-0x39cb13ed],1
  424eff:	(bad)  
  424f00:	cwde   
  424f01:	pushw  0xd27f
  424f05:	pop    dx
  424f07:	add    DWORD PTR [esi-0xe],eax
  424f0a:	cmp    ch,ah
  424f0c:	mov    ds:0xfd219624,al
  424f11:	in     eax,dx
  424f12:	jg     0x424ee5
  424f14:	daa    
  424f15:	and    eax,0x1338de9c
  424f1a:	and    esp,DWORD PTR [ecx-0x338dda95]
  424f20:	xor    edi,DWORD PTR [edx]
  424f22:	inc    edx
  424f23:	adc    ecx,esi
  424f25:	mov    DWORD PTR [edx],ebp
  424f27:	jmp    0x945d:0xd86f571b
  424f2e:	call   0x1b116125
  424f33:	push   ebp
  424f34:	or     al,0x8
  424f36:	pop    es
  424f37:	icebp  
  424f38:	xchg   ecx,eax
  424f39:	add    BYTE PTR [ebp+0x9bb21e0],ah
  424f3f:	shl    BYTE PTR [eax+0x3d],0x3
  424f43:	rcl    DWORD PTR [ebx-0x3bf70381],1
  424f49:	mov    eax,ds:0xf49e36c1
  424f4e:	lods   al,BYTE PTR ss:[esi]
  424f50:	mov    dh,0xac
  424f52:	pop    esp
  424f53:	push   edi
  424f54:	js     0x424fb8
  424f56:	or     eax,0x9b25ec1
  424f5b:	sub    bh,BYTE PTR [edx]
  424f5d:	fisttp WORD PTR [ecx]
  424f5f:	add    dl,bh
  424f61:	inc    esi
  424f62:	int    0x7d
  424f64:	or     al,0x2c
  424f66:	scas   eax,DWORD PTR es:[edi]
  424f67:	jnp    0x424f79
  424f69:	dec    esi
  424f6a:	xchg   ax,ax
  424f6c:	mov    DWORD PTR [ecx+0x45],ebp
  424f6f:	xlat   BYTE PTR ds:[ebx]
  424f70:	jmp    0x57d3:0x286c51c0
  424f77:	inc    eax
  424f78:	pop    ecx
  424f79:	int    0x35
  424f7b:	or     ah,BYTE PTR [edx+0x31]
  424f7e:	mov    eax,ds:0x50da4b92
  424f83:	pop    ss
  424f84:	add    edx,DWORD PTR [edi-0x3e]
  424f87:	mov    ch,0x57
  424f89:	cmp    DWORD PTR [eax-0x1c3c2ca2],ebx
  424f8f:	rol    DWORD PTR [ebp+0x45],0x5
  424f93:	lock cwde 
  424f95:	pusha  
  424f96:	sub    BYTE PTR [eax-0x56b8e33a],al
  424f9c:	popf   
  424f9d:	out    dx,al
  424f9e:	xlat   BYTE PTR ds:[ebx]
  424f9f:	pop    edx
  424fa0:	popf   
  424fa1:	loope  0x424f62
  424fa3:	jbe    0x424f49
  424fa5:	push   esp
  424fa6:	and    DWORD PTR [eax],0x443bd0c2
  424fac:	inc    edx
  424fad:	sti    
  424fae:	xor    ch,BYTE PTR [edx+0x4f]
  424fb1:	xchg   esi,eax
  424fb2:	ins    BYTE PTR es:[edi],dx
  424fb3:	nop
  424fb4:	or     al,0xf9
  424fb6:	cmc    
  424fb7:	sti    
  424fb8:	xchg   esp,eax
  424fb9:	cmp    eax,0xe2517186
  424fbe:	in     al,0x5c
  424fc0:	cmc    
  424fc1:	loop   0x424f56
  424fc3:	and    eax,0x790ee408
  424fc8:	bound  edi,QWORD PTR [ecx-0x1a]
  424fcb:	stc    
  424fcc:	repz or ebx,DWORD PTR [edi]
  424fcf:	pop    esp
  424fd0:	repz xlat BYTE PTR ds:[ebx]
  424fd2:	mov    al,0xf5
  424fd4:	stos   DWORD PTR es:[edi],eax
  424fd5:	pop    ds
  424fd6:	pop    edx
  424fd7:	stos   BYTE PTR es:[edi],al
  424fd8:	dec    ecx
  424fd9:	pop    ebp
  424fda:	pop    ebp
  424fdb:	jns    0x424fea
  424fdd:	or     bh,dh
  424fdf:	jp     0x424ff5
  424fe1:	cmp    al,0x9f
  424fe3:	mov    DWORD PTR [esi],ebp
  424fe5:	xor    eax,0x310d728c
  424fea:	push   ebx
  424feb:	xor    al,0xc9
  424fed:	mov    bh,0x64
  424fef:	sbb    ecx,esp
  424ff1:	out    dx,al
  424ff2:	cmp    BYTE PTR [ecx+0xcdce933],dh
  424ff8:	or     al,0x6c
  424ffa:	and    eax,0xfcd03b1
  424fff:	je     0x424f86
  425001:	test   al,0x9b
  425003:	mov    WORD PTR [edi],?
  425005:	pop    es
  425006:	mov    esp,0x3e41f382
  42500b:	stos   DWORD PTR es:[edi],eax
  42500c:	adc    al,0x71
  42500e:	test   al,0x58
  425010:	cmp    DWORD PTR [ebx-0x61],esp
  425013:	cmp    eax,0x497ce665
  425018:	jb     0x424fa5
  42501a:	shl    eax,0x9e
  42501d:	fiadd  DWORD PTR [esi-0x36be75a1]
  425023:	rcr    dh,cl
  425025:	or     ebx,ebp
  425027:	push   ecx
  425028:	add    esp,DWORD PTR [eax-0x470d406c]
  42502e:	jg     0x425003
  425030:	push   ebx
  425031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425032:	mov    ch,0xde
  425034:	adc    eax,0x6907efac
  425039:	adc    eax,0xd406ad88
  42503e:	inc    esp
  42503f:	test   DWORD PTR [esi],esi
  425041:	inc    ebp
  425042:	bound  ecx,QWORD PTR [eax-0x20]
  425045:	adc    al,0x70
  425047:	repz dec edi
  425049:	pop    edi
  42504a:	(bad)  
  42504c:	ror    BYTE PTR [edx+0x3e],1
  42504f:	iret   
  425050:	data16 mov cs,WORD PTR [eax]
  425053:	addr16 fwait
  425055:	inc    ecx
  425056:	adc    DWORD PTR [ebx-0x52fcd568],edx
  42505c:	mov    esp,DWORD PTR [edi-0x710853c2]
  425062:	xchg   ebp,eax
  425063:	data16 adc al,0x3a
  425066:	mov    cl,0xd
  425068:	xchg   edx,eax
  425069:	adc    eax,0x7dbc2d6
  42506e:	fdiv   st,st(6)
  425070:	test   BYTE PTR [ecx+0x6b2471b0],ch
  425076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425077:	lds    ecx,FWORD PTR [edx]
  425079:	inc    ebp
  42507a:	arpl   WORD PTR [edx+edx*1+0xace15b3],bx
  425081:	mov    ds:0xb5f9c662,al
  425086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425087:	mov    ebp,DWORD PTR [eax+edi*2-0x218bcf6a]
  42508e:	adc    al,0x45
  425090:	je     0x4250a4
  425092:	lahf   
  425093:	ss imul edx,edx,0xe10c7899
  42509a:	ss add al,0xba
  42509d:	mov    eax,ds:0xc1d78a1f
  4250a2:	mov    ds:0xfeeddc47,eax
  4250a7:	jecxz  0x4250fd
  4250a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250aa:	test   DWORD PTR [esi],esp
  4250ac:	(bad)  
  4250ad:	xchg   ebp,eax
  4250ae:	pop    edi
  4250af:	test   DWORD PTR [ecx+ebp*8],esi
  4250b2:	push   es
  4250b3:	sub    DWORD PTR [edx-0x52019cc7],edx
  4250b9:	mov    ds:0x5dc81903,al
  4250be:	mov    edi,0x5c3166f1
  4250c3:	pop    esp
  4250c4:	dec    esi
  4250c5:	dec    eax
  4250c6:	dec    esp
  4250c7:	cmp    al,BYTE PTR [eax+esi*4]
  4250ca:	mov    eax,0x120a64e4
  4250cf:	mov    ecx,0x7ae4aa49
  4250d4:	xchg   ebx,eax
  4250d5:	inc    ebx
  4250d6:	bound  edi,QWORD PTR [ecx]
  4250d8:	fdiv   QWORD PTR [eax-0x63932a50]
  4250de:	pop    ds
  4250df:	jae    0x42514d
  4250e1:	xchg   ebx,eax
  4250e2:	xchg   ebx,eax
  4250e3:	cmp    DWORD PTR [esi-0x73de7d09],esp
  4250e9:	jle    0x4250bb
  4250eb:	repnz mov eax,0xe11b34c5
  4250f1:	hlt    
  4250f2:	lods   eax,DWORD PTR ds:[esi]
  4250f3:	ins    BYTE PTR es:[edi],dx
  4250f4:	mov    ebx,0xea6e646e
  4250f9:	mov    ah,0x58
  4250fb:	les    edi,FWORD PTR [ecx+0x21]
  4250fe:	stc    
  4250ff:	xor    DWORD PTR [ecx+0x5a],eax
  425102:	pop    esp
  425103:	mov    eax,0x47a44c56
  425108:	jne    0x4250bc
  42510a:	(bad)
  42510d:	lods   al,BYTE PTR ds:[esi]
  42510e:	pop    edx
  42510f:	dec    ebp
  425110:	inc    edx
  425111:	out    0x70,al
  425113:	fdivrp st(1),st
  425115:	fnstsw WORD PTR [esi]
  425117:	(bad)  
  425118:	xchg   edi,eax
  425119:	test   eax,0xefcb994e
  42511e:	cmp    eax,0x1f0078f
  425123:	imul   edx,DWORD PTR ds:0xe038ba08,0x43
  42512a:	dec    sp
  42512c:	push   ds
  42512d:	loop   0x425139
  42512f:	pop    ebp
  425130:	mov    DWORD PTR [eax+edi*1],eax
  425133:	pop    ds
  425134:	cmp    al,0x18
  425136:	xchg   edi,eax
  425137:	mov    cl,dh
  425139:	rol    BYTE PTR ds:0x53d17d96,cl
  42513f:	mov    edx,DWORD PTR [ebp-0x6a3492fd]
  425145:	rol    BYTE PTR [ecx-0x122877a3],cl
  42514b:	scas   eax,DWORD PTR es:[edi]
  42514c:	sub    bl,BYTE PTR [esi+0x3]
  42514f:	push   es
  425150:	les    eax,FWORD PTR [ecx]
  425152:	ret    0x1968
  425155:	sti    
  425156:	push   0xffffffb2
  425158:	shld   DWORD PTR [ecx+ebp*8],edx,cl
  42515c:	push   esi
  42515d:	jne    0x42513b
  42515f:	pop    ebp
  425160:	xchg   esp,eax
  425161:	mov    esp,0xdc5979e3
  425166:	inc    ecx
  425167:	popf   
  425168:	es jb  0x425106
  42516b:	mov    BYTE PTR [ebp-0x52],dl
  42516e:	and    dl,ah
  425170:	sub    DWORD PTR [esi],eax
  425172:	fnsave [ebp+0x685245f7]
  425178:	fbld   TBYTE PTR [ebx]
  42517a:	jmp    0x2f2f:0xb247eced
  425181:	sar    DWORD PTR [eax+0x28],0x26
  425185:	jb     0x4251a8
  425187:	outs   dx,DWORD PTR ds:[esi]
  425188:	sub    ch,BYTE PTR [ebx-0x6346d889]
  42518e:	mov    eax,ds:0x4047da94
  425193:	sbb    DWORD PTR [ebp+0x7330aea],edi
  425199:	push   ss
  42519a:	std    
  42519b:	pop    ss
  42519c:	xor    DWORD PTR [edx],edi
  42519e:	push   0x510382ae
  4251a3:	mov    eax,ds:0xa09961f9
  4251a8:	in     eax,0xe7
  4251aa:	inc    ebx
  4251ab:	out    dx,al
  4251ac:	inc    esp
  4251ad:	mov    eax,ds:0x85eb77b2
  4251b2:	jmp    0x425219
  4251b4:	mov    esi,0x346ab0be
  4251b9:	mov    bh,0xf2
  4251bb:	popf   
  4251bc:	lea    ebx,[esi]
  4251be:	mov    ds:0x2b705697,eax
  4251c3:	dec    ebp
  4251c4:	jmp    0xba4c:0xb27f062c
  4251cb:	mov    cl,0xff
  4251cd:	outs   dx,BYTE PTR ds:[esi]
  4251ce:	mov    bl,0x12
  4251d0:	xor    cl,BYTE PTR [eax-0x48]
  4251d3:	xchg   edi,eax
  4251d4:	mov    bh,BYTE PTR [ebp-0x5fd0bb7e]
  4251da:	cli    
  4251db:	adc    ch,BYTE PTR [eax]
  4251dd:	loop   0x42525a
  4251df:	cmc    
  4251e0:	(bad)  
  4251e1:	into   
  4251e2:	jp     0x42524d
  4251e4:	std    
  4251e5:	jmp    0xc05:0x54ed6c3
  4251ec:	ss push cs
  4251ee:	out    dx,al
  4251ef:	arpl   dx,sp
  4251f1:	sti    
  4251f2:	test   eax,0x26b107a9
  4251f7:	(bad)  
  4251f8:	loopne 0x4251b2
  4251fa:	retf   
  4251fb:	lock add al,BYTE PTR [ebp-0x79]
  4251ff:	data16 and BYTE PTR cs:[esi],ah
  425203:	or     edi,DWORD PTR [ecx+edi*8+0x2f]
  425207:	jno    0x425205
  425209:	jmp    0xcf36:0x167d5470
  425210:	push   ebp
  425211:	or     eax,0x44a973e2
  425216:	add    ebp,ecx
  425218:	add    bh,ah
  42521a:	cld    
  42521b:	inc    eax
  42521c:	int3   
  42521d:	rol    bl,cl
  42521f:	mov    edi,0x55df9015
  425224:	jmp    0x603c7d5
  425229:	jne    0x4251ff
  42522b:	and    BYTE PTR [esi-0xb],ch
  42522e:	stc    
  42522f:	sahf   
  425230:	add    ah,BYTE PTR [eax+0x561255f]
  425236:	xor    eax,0xc221f157
  42523b:	jmp    0xce48:0x9877b226
  425242:	test   edi,0x77cc6648
  425248:	pop    edi
  425249:	arpl   WORD PTR [esi],bp
  42524b:	fbstp  TBYTE PTR [eax+ebp*4]
  42524e:	shl    DWORD PTR [eax+ebp*1],1
  425251:	mov    edx,0x9d827ad9
  425256:	push   ecx
  425257:	sahf   
  425258:	stc    
  425259:	mov    bh,0xce
  42525b:	cdq    
  42525c:	adc    eax,0x1fb0ee74
  425261:	jnp    0x42525b
  425263:	fadd   QWORD PTR ds:0x5345fe97
  425269:	int    0x96
  42526b:	ror    DWORD PTR [edx+0x266e9f9e],cl
  425271:	clc    
  425272:	mov    bh,0x89
  425274:	inc    edx
  425275:	cmp    esp,DWORD PTR [esi-0x6a755359]
  42527b:	cmp    BYTE PTR [esi+0x48f508d0],bh
  425281:	and    DWORD PTR [esi+eax*2],eax
  425284:	push   ebx
  425285:	and    esp,ebx
  425287:	add    eax,0xff59e252
  42528c:	out    dx,al
  42528d:	mov    dl,0xd1
  42528f:	call   0x9c278955
  425294:	xchg   ecx,eax
  425295:	push   ss
  425296:	push   eax
  425297:	sub    esp,esi
  425299:	addr16 inc esp
  42529b:	pop    ds
  42529c:	jnp    0x4252d5
  42529e:	push   ds
  42529f:	add    dl,al
  4252a1:	and    al,0x86
  4252a3:	je     0x4252cf
  4252a5:	mov    edx,DWORD PTR [edi]
  4252a7:	and    edx,DWORD PTR [eax*1-0x6d7fd5a7]
  4252ae:	pop    ss
  4252af:	stc    
  4252b0:	pop    esp
  4252b1:	fisub  WORD PTR [edi]
  4252b3:	or     esp,DWORD PTR [ebx+0x4f04300c]
  4252b9:	mov    dh,0xd4
  4252bb:	add    al,0xbc
  4252bd:	jo     0x425309
  4252bf:	push   ds
  4252c0:	sub    ecx,eax
  4252c2:	and    ecx,DWORD PTR [edx]
  4252c4:	inc    eax
  4252c5:	imul   esp,ecx,0xffffffeb
  4252c8:	xchg   edi,eax
  4252c9:	imul   eax,ebp,0xffffff80
  4252cc:	xor    al,0x72
  4252ce:	(bad)  
  4252d1:	ret    
  4252d2:	or     BYTE PTR [ebx-0x2d8369ef],0xaa
  4252d9:	add    ah,BYTE PTR [edx-0x8c94ae3]
  4252df:	mov    DWORD PTR [edx+0xe],edx
  4252e2:	sub    ebp,edx
  4252e4:	sub    DWORD PTR [ebp+0x48],edx
  4252e7:	sbb    DWORD PTR [edi+esi*2],esp
  4252ea:	dec    edi
  4252eb:	dec    esp
  4252ec:	and    esp,esp
  4252ee:	mov    eax,0xdef25864
  4252f3:	lods   eax,DWORD PTR ds:[esi]
  4252f4:	imul   ebx,DWORD PTR fs:[eax-0x1253b79d],0xf98572d2
  4252ff:	clc    
  425300:	mov    dl,0x3d
  425302:	or     eax,0x43de088a
  425307:	xor    cl,BYTE PTR [edx-0x1c54631c]
  42530d:	push   ebp
  42530e:	mov    ds:0xc11ac9c5,eax
  425313:	outs   dx,BYTE PTR ds:[esi]
  425314:	dec    ecx
  425315:	mov    bl,0x61
  425317:	clc    
  425318:	rcr    DWORD PTR [ecx],1
  42531a:	cmp    eax,0xae40c8b8
  42531f:	psubusb mm3,QWORD PTR [ebx]
  425322:	push   ds
  425323:	push   DWORD PTR [ecx-0x32]
  425326:	push   0xe659bb91
  42532b:	push   ecx
  42532c:	sbb    esi,DWORD PTR [ebx-0x37]
  42532f:	mov    cl,0x7a
  425331:	xchg   ecx,eax
  425332:	lods   eax,DWORD PTR ds:[esi]
  425333:	push   edi
  425334:	sti    
  425335:	inc    esi
  425336:	retf   0x8515
  425339:	(bad)  
  42533a:	sub    eax,0x5e87617f
  42533f:	pop    ebx
  425340:	int3   
  425341:	xlat   BYTE PTR ds:[ebx]
  425342:	xor    ebp,eax
  425344:	aam    0xf
  425346:	push   esi
  425347:	pop    ebx
  425348:	imul   ebx,ebp,0xffffffb1
  42534b:	cmp    eax,0x632a6b31
  425350:	or     eax,0xb9c4112c
  425355:	inc    ecx
  425356:	lahf   
  425357:	or     BYTE PTR [edx],bh
  425359:	test   eax,0x74f892ab
  42535e:	push   esi
  42535f:	(bad)
  425362:	imul   esp,DWORD PTR [ebx],0xffffffc6
  425365:	out    dx,al
  425366:	xor    dh,dl
  425368:	imul   ebx,edi,0xba16816c
  42536e:	js     0x425348
  425370:	loop   0x42537d
  425372:	std    
  425373:	neg    ebx
  425375:	idiv   BYTE PTR [ebp+0x48a2fa4f]
  42537b:	sub    BYTE PTR [ecx],ah
  42537d:	dec    edx
  42537e:	in     eax,0x4a
  425380:	xor    al,0x1c
  425382:	fs push eax
  425384:	xor    eax,0xaac74a0f
  425389:	enter  0x537e,0xc3
  42538d:	test   eax,edx
  42538f:	push   esi
  425390:	push   0xffffffd4
  425392:	jecxz  0x425365
  425394:	aaa    
  425395:	scas   al,BYTE PTR es:[edi]
  425396:	into   
  425397:	data16 jp 0x42533f
  42539a:	cmp    edx,DWORD PTR [ebp+ebp*4-0x3ec2d9db]
  4253a1:	sti    
  4253a2:	pop    esp
  4253a3:	cmp    eax,0xf3e2e7b0
  4253a8:	and    eax,0xf13f9ca2
  4253ad:	pop    esi
  4253ae:	push   ebp
  4253af:	retf   0x6ad7
  4253b2:	pop    esi
  4253b3:	inc    esi
  4253b4:	loop   0x4253ac
  4253b6:	sbb    dl,BYTE PTR [esi+ebp*2+0x5ebcdc5a]
  4253bd:	xchg   ebx,eax
  4253be:	dec    ecx
  4253bf:	in     al,dx
  4253c0:	das    
  4253c1:	pop    esp
  4253c2:	dec    ebx
  4253c3:	cmc    
  4253c4:	test   DWORD PTR [eax],0xf1d16737
  4253ca:	scas   eax,DWORD PTR es:[edi]
  4253cb:	adc    eax,0xac93770e
  4253d0:	mov    eax,ds:0x6c3d3cb7
  4253d5:	mov    BYTE PTR [edx],bl
  4253d7:	in     al,0x1a
  4253d9:	repz push edi
  4253db:	mov    cl,0x21
  4253dd:	jne    0x4253b2
  4253df:	or     DWORD PTR [ecx-0x3f2987d3],eax
  4253e5:	adc    al,0x69
  4253e7:	xor    eax,0x5868a157
  4253ec:	push   cs
  4253ed:	mov    ah,0xfc
  4253ef:	pop    ds
  4253f0:	or     BYTE PTR [esi+0x1f],0x3d
  4253f4:	pop    ebx
  4253f5:	dec    eax
  4253f6:	jo     0x425436
  4253f8:	mov    al,ds:0xcad5d14f
  4253fd:	mov    ecx,0xa89733ce
  425402:	add    eax,0xad358126
  425407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425408:	jmp    0x4253aa
  42540a:	lea    esi,[ecx-0x26]
  42540d:	jmp    0x425413
  42540f:	add    dl,BYTE PTR [ebp+0x2ac76d94]
  425415:	fbld   TBYTE PTR [ebx]
  425417:	sub    eax,0x4839b3fd
  42541c:	xchg   DWORD PTR [eax+0x29bc9f03],edi
  425422:	xor    eax,0x5cc80377
  425427:	xchg   DWORD PTR [ebp+0x2d],edx
  42542a:	push   esi
  42542b:	adc    eax,0x6b6c654e
  425430:	mov    ss,WORD PTR [edi+0x33]
  425433:	pushf  
  425434:	ret    0x1afe
  425437:	hlt    
  425438:	adc    al,0xac
  42543a:	jne    0x425472
  42543c:	add    edx,edi
  42543e:	les    esi,FWORD PTR [edx]
  425440:	sbb    BYTE PTR [ebx],ch
  425442:	les    edx,FWORD PTR [esp+ebp*8]
  425445:	push   ss
  425446:	and    BYTE PTR [ebx+0x48fc431f],ah
  42544c:	mov    eax,0x817e7c4d
  425451:	mov    cl,0xf9
  425453:	popa   
  425454:	in     eax,dx
  425455:	outs   dx,DWORD PTR ds:[esi]
  425456:	(bad)  
  425457:	mov    esp,0xb7d4f2cc
  42545c:	inc    ebp
  42545d:	aam    0x98
  42545f:	pop    esp
  425460:	or     eax,DWORD PTR [ecx+esi*2]
  425463:	lahf   
  425464:	aas    
  425465:	in     eax,0xb9
  425467:	in     eax,dx
  425468:	out    dx,eax
  425469:	mov    al,0xff
  42546b:	xor    ecx,ecx
  42546d:	lea    ecx,[edx+0x6c]
  425470:	aad    0xa2
  425472:	call   0xd1d4515a
  425477:	ds pushf 
  425479:	popf   
  42547a:	fmul   DWORD PTR [ecx+0x3c9e9465]
  425480:	mov    ss,ebx
  425482:	pop    ecx
  425483:	and    al,dh
  425485:	jns    0x4254e1
  425487:	popf   
  425488:	(bad)  
  425489:	push   cs
  42548a:	nop
  42548b:	xlat   BYTE PTR ds:[ebx]
  42548c:	in     eax,0x43
  42548e:	xor    DWORD PTR [ebx-0x1fac588],ebx
  425494:	jl     0x425459
  425496:	pop    edx
  425497:	js     0x425463
  425499:	mov    ah,0x90
  42549b:	cmp    al,0x51
  42549d:	xor    al,0x9d
  42549f:	xchg   esp,eax
  4254a0:	jnp    0x4254bb
  4254a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254a3:	sub    DWORD PTR [eax+0x39],ebx
  4254a6:	cmp    ah,ch
  4254a8:	push   0x68
  4254aa:	sub    al,0x1c
  4254ac:	jmp    0x2a6638ef
  4254b1:	ds nop
  4254b3:	in     eax,dx
  4254b4:	loop   0x42552f
  4254b6:	xlat   BYTE PTR ds:[ebx]
  4254b7:	rcr    edi,cl
  4254b9:	mov    cl,0xe4
  4254bb:	out    0xca,al
  4254bd:	xlat   BYTE PTR ds:[ebx]
  4254be:	(bad)
  4254c2:	test   eax,0x378e5b18
  4254c7:	iret   
  4254c8:	pop    ebp
  4254c9:	dec    ebx
  4254ca:	enter  0x6461,0x55
  4254ce:	hlt    
  4254cf:	in     eax,0x32
  4254d1:	mov    ebp,0x35a85362
  4254d6:	stos   BYTE PTR es:[edi],al
  4254d7:	or     dl,BYTE PTR [eax+0x67]
  4254da:	aas    
  4254db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254dc:	and    eax,0xba8daaf5
  4254e1:	(bad)  
  4254e3:	in     eax,0x9d
  4254e5:	pop    es
  4254e6:	push   cs
  4254e7:	push   ebx
  4254e8:	push   ecx
  4254e9:	call   0x360f:0x9575be77
  4254f0:	xchg   esp,eax
  4254f1:	les    esi,FWORD PTR [esi-0x76]
  4254f4:	xlat   BYTE PTR ds:[ebx]
  4254f5:	or     eax,0x27d3b7c8
  4254fa:	inc    eax
  4254fb:	call   0xb1836bd2
  425500:	mov    ebx,0x62eab720
  425505:	add    al,0x33
  425507:	add    ecx,edx
  425509:	sti    
  42550a:	out    dx,eax
  42550b:	in     al,0x6f
  42550d:	cmp    al,0x3f
  42550f:	pusha  
  425510:	imul   edx,DWORD PTR [ebx],0x4c
  425513:	jmp    0x921:0x48c9d9c3
  42551a:	pop    edx
  42551b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42551c:	fidivr DWORD PTR [edx+0x2bdcfc7c]
  425522:	imul   esi,DWORD PTR [esi+0x5d29cd68],0xebc9c485
  42552c:	mov    ebp,DWORD PTR [ecx]
  42552e:	idiv   BYTE PTR [edi-0x8]
  425531:	sbb    al,0xc1
  425533:	int    0x74
  425535:	jl     0x4254ff
  425537:	ret    
  425538:	outs   dx,DWORD PTR ds:[esi]
  425539:	(bad)  
  42553b:	sbb    DWORD PTR [ebx+0x1d22aa82],ebx
  425541:	jp     0x425532
  425543:	fst    QWORD PTR [ecx+ecx*8-0xa991926]
  42554a:	cdq    
  42554b:	es out dx,al
  42554d:	inc    ecx
  42554e:	jg     0x4255cc
  425550:	aaa    
  425551:	mov    ebp,edx
  425553:	cmp    DWORD PTR [esi-0x6d],esp
  425556:	in     eax,0x48
  425558:	scas   al,BYTE PTR es:[edi]
  425559:	mov    dh,0xe2
  42555b:	cmp    al,0xc8
  42555d:	daa    
  42555e:	jge    0x425567
  425560:	addr16 and al,0xc5
  425563:	or     eax,0x5703c44
  425568:	stos   DWORD PTR es:[edi],eax
  425569:	add    ch,BYTE PTR [edx]
  42556b:	cmp    BYTE PTR [ecx-0xd100fa0],ch
  425571:	ss test eax,0x5a6160bc
  425577:	repz retf 0xc7dd
  42557b:	xor    ecx,DWORD PTR [edx+edi*4+0x2e]
  42557f:	lds    edi,FWORD PTR [eax-0x25486a4f]
  425585:	pop    edx
  425586:	xor    ecx,edx
  425588:	ror    DWORD PTR [edx+0x79bf7de8],0x2b
  42558f:	bound  ebp,QWORD PTR fs:0x637ee9b1
  425596:	mov    edi,0x3ba5be68
  42559b:	inc    edx
  42559c:	sub    al,0xc9
  42559e:	test   eax,0xabffc521
  4255a3:	jo     0x425552
  4255a5:	loope  0x4255bc
  4255a7:	adc    esp,DWORD PTR [esi+0x6cecdbef]
  4255ad:	sub    al,0xf7
  4255af:	aaa    
  4255b0:	fild   WORD PTR [esi-0x64]
  4255b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255b4:	dec    ebx
  4255b5:	int    0xef
  4255b7:	and    esp,DWORD PTR [eax]
  4255b9:	dec    ecx
  4255ba:	mov    ds:0x74538da,al
  4255bf:	aad    0x12
  4255c1:	mov    al,dh
  4255c3:	out    0x36,al
  4255c5:	cwde   
  4255c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255c7:	outs   dx,DWORD PTR ds:[esi]
  4255c8:	outs   dx,BYTE PTR ds:[esi]
  4255c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255ca:	mov    BYTE PTR [edx-0xbe0b618],ch
  4255d0:	mov    ds:0x4d9682c6,eax
  4255d5:	pushf  
  4255d6:	xor    al,0x35
  4255d8:	lock adc esp,edi
  4255db:	(bad)  
  4255dc:	push   edx
  4255dd:	jmp    0x425570
  4255df:	loop   0x425625
  4255e1:	cdq    
  4255e2:	imul   ebp,DWORD PTR [ecx],0xd67c38b9
  4255e8:	mov    ds:0x8dc5ea09,al
  4255ed:	jg     0x42560e
  4255ef:	sbb    DWORD PTR [ebp+0x6],edi
  4255f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255f3:	mov    ah,0x26
  4255f5:	jmp    0x29c52949
  4255fa:	mov    DWORD PTR [eax+0x12350d74],ebp
  425600:	xchg   ecx,eax
  425601:	(bad)  
  425602:	aas    
  425603:	test   al,0xd3
  425605:	push   ecx
  425606:	out    0x29,eax
  425608:	sbb    BYTE PTR [edx],bh
  42560a:	repnz fistp QWORD PTR [esp+ecx*2-0x293f5342]
  425612:	es into 
  425614:	cmc    
  425615:	mov    al,0xc4
  425617:	mov    ds:0xcfa1db7c,eax
  42561c:	xor    eax,0x5f4b0eb8
  425621:	add    al,0xbc
  425623:	pusha  
  425624:	add    esi,esi
  425626:	dec    ebx
  425627:	addr16 push esi
  425629:	enter  0x9cc5,0x59
  42562d:	mov    al,0x4f
  42562f:	xchg   BYTE PTR [esi+eax*1+0x38175b7a],dh
  425636:	dec    ebp
  425637:	fistp  DWORD PTR [edx]
  425639:	sbb    ecx,esi
  42563b:	rcl    BYTE PTR [eax+0x4c9897e0],cl
  425641:	or     eax,DWORD PTR [edx-0x66058f72]
  425647:	xchg   BYTE PTR [eax-0x4d],dh
  42564a:	sar    dh,0xe7
  42564d:	fs cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425650:	and    ebp,DWORD PTR [eax+0x44]
  425653:	xchg   ebx,eax
  425654:	sbb    eax,0xab96d339
  425659:	clc    
  42565a:	or     ebx,DWORD PTR [edi]
  42565c:	dec    edx
  42565d:	or     esi,DWORD PTR [edi+ecx*4]
  425660:	sbb    edx,eax
  425662:	aas    
  425663:	mov    bl,0x11
  425665:	retf   0xcb20
  425668:	and    ch,bh
  42566a:	out    dx,al
  42566b:	xchg   ebp,eax
  42566c:	and    ah,BYTE PTR [ebx+edi*4+0x1485641a]
  425673:	and    eax,0x817e16e5
  425678:	int    0x63
  42567a:	jns    0x425653
  42567c:	fistp  QWORD PTR [ebx-0x7f]
  42567f:	or     cl,bl
  425681:	push   edi
  425682:	sbb    al,0x6c
  425684:	pop    edi
  425685:	add    al,0xe2
  425687:	leave  
  425688:	adc    BYTE PTR [esi],al
  42568a:	pop    ds
  42568b:	cmp    al,0x40
  42568e:	xchg   ebx,eax
  42568f:	lock aaa 
  425691:	dec    esp
  425692:	jns    0x425624
  425694:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425696:	and    ecx,ebp
  425698:	pop    es
  425699:	int    0xe7
  42569b:	xchg   WORD PTR [edi+eiz*4],bp
  42569f:	fwait
  4256a0:	pop    ss
  4256a1:	leave  
  4256a2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4256a4:	dec    esi
  4256a5:	cmp    DWORD PTR [edi],ebx
  4256a7:	sahf   
  4256a8:	sbb    eax,0x83ae4664
  4256ad:	sbb    eax,0x23ae8c16
  4256b2:	shl    dl,1
  4256b4:	outs   dx,BYTE PTR ds:[esi]
  4256b5:	push   0x2e
  4256b7:	call   0xab94:0x7e8d48eb
  4256be:	mov    ds:0xeba40cf7,eax
  4256c3:	(bad)  
  4256c4:	stc    
  4256c5:	fisubr DWORD PTR [eax]
  4256c7:	in     eax,0x8c
  4256c9:	pop    es
  4256ca:	mov    ah,0xe0
  4256cc:	or     dh,0x8f
  4256cf:	jl     0x425676
  4256d1:	sub    BYTE PTR [ecx+0x4f],dl
  4256d4:	or     bl,0xc0
  4256d7:	push   0x49
  4256d9:	sub    BYTE PTR [edx+0x36],al
  4256dc:	retf   0x87d7
  4256df:	lahf   
  4256e0:	jmp    0xba076ba4
  4256e5:	mov    esi,0x4102d2aa
  4256ea:	out    dx,eax
  4256eb:	test   al,0xbb
  4256ed:	(bad)  
  4256ee:	fmul   st,st(0)
  4256f0:	xchg   BYTE PTR ss:[esi],ch
  4256f3:	jmp    0x7f0f:0xf3cf8bf2
  4256fa:	std    
  4256fb:	cli    
  4256fc:	dec    esi
  4256fd:	call   0xd5396ff4
  425702:	(bad)  
  425704:	mov    ecx,0xdcf91f39
  425709:	ss xchg edx,eax
  42570b:	jmp    0x4256fa
  42570d:	dec    edi
  42570e:	adc    al,0x7e
  425710:	retf   
  425711:	popf   
  425712:	stos   DWORD PTR es:[edi],eax
  425713:	pop    ebx
  425714:	aaa    
  425715:	jmp    0xb4fc63a9
  42571a:	cmp    dl,dl
  42571c:	popf   
  42571d:	xlat   BYTE PTR ds:[ebx]
  42571e:	addr16 rol esp,1
  425721:	jg     0x425758
  425723:	pop    esp
  425724:	push   ds
  425725:	push   ebx
  425726:	inc    BYTE PTR [ebp-0x5b8e196]
  42572c:	lods   eax,DWORD PTR ds:[esi]
  42572d:	push   ebx
  42572e:	mov    ah,0x19
  425730:	ficom  DWORD PTR [edi+0x10]
  425733:	sbb    al,0xcb
  425735:	nop
  425736:	fmul   QWORD PTR [ecx+0x1994fe75]
  42573c:	out    0x31,al
  42573e:	sub    al,0x63
  425740:	sub    ah,BYTE PTR [esi+0xe923bfc]
  425746:	jg     0x42577d
  425748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425749:	dec    eax
  42574a:	mov    ch,0x5e
  42574c:	mov    esp,0x27696850
  425751:	push   ebp
  425752:	dec    eax
  425753:	out    0x45,al
  425755:	sbb    eax,0x9987358b
  42575a:	jmp    FWORD PTR [eax]
  42575c:	cdq    
  42575d:	xchg   bl,bl
  42575f:	sbb    BYTE PTR [ebp+0x1b74b759],dh
  425765:	(bad)  
  425766:	pop    esi
  425767:	ins    DWORD PTR es:[edi],dx
  425768:	sbb    ebp,DWORD PTR [eax-0x1]
  42576b:	sahf   
  42576c:	mov    BYTE PTR [eax+0x15],bl
  42576f:	xlat   BYTE PTR ds:[ebx]
  425770:	or     al,0xf9
  425773:	out    0x5a,eax
  425775:	lds    esp,FWORD PTR [edx]
  425777:	bound  ebp,QWORD PTR cs:[eax-0x4f6fea89]
  42577e:	sub    DWORD PTR [esi+0xe],esp
  425781:	iret   
  425782:	jae    0x4257e9
  425784:	push   edx
  425785:	call   0x7b1dc34a
  42578a:	sbb    DWORD PTR [ebp+0x8e24cf6],esi
  425790:	xchg   ebp,ebp
  425792:	mov    edi,esi
  425794:	pop    ebx
  425795:	cmp    DWORD PTR [ebp-0x5f40932b],0xffffffc5
  42579c:	mov    dl,0xec
  42579e:	jmp    0x42581a
  4257a0:	xchg   ebx,eax
  4257a1:	dec    esi
  4257a2:	idiv   BYTE PTR [eax+0x48]
  4257a5:	scas   al,BYTE PTR es:[edi]
  4257a6:	std    
  4257a7:	dec    ebx
  4257a8:	cwde   
  4257a9:	mov    ebx,0x74de9aeb
  4257ae:	popa   
  4257af:	xor    DWORD PTR [edx-0x3],ecx
  4257b2:	lods   eax,DWORD PTR ds:[esi]
  4257b3:	inc    eax
  4257b4:	jmp    FWORD PTR [esi-0x14]
  4257b7:	call   0x8bf0:0xfd7265fb
  4257be:	inc    edi
  4257bf:	sbb    BYTE PTR [esi],dh
  4257c1:	push   es
  4257c2:	and    al,0x8c
  4257c4:	xor    al,BYTE PTR [eax-0x26]
  4257c7:	sub    BYTE PTR [edi],dh
  4257c9:	push   ebx
  4257ca:	sbb    eax,0xb199f88b
  4257cf:	aad    0x15
  4257d1:	ins    DWORD PTR es:[edi],dx
  4257d2:	inc    esp
  4257d3:	hlt    
  4257d4:	mov    ebp,0x3253ccec
  4257d9:	leave  
  4257da:	pop    edx
  4257db:	not    bl
  4257dd:	fbstp  TBYTE PTR [edi-0xbabc2e]
  4257e3:	das    
  4257e4:	test   DWORD PTR [edi],eax
  4257e6:	inc    BYTE PTR [edx]
  4257e8:	xchg   edx,eax
  4257e9:	mov    BYTE PTR [ebp+edi*4+0x15],ah
  4257ed:	or     DWORD PTR [esi-0x1b9fba41],esi
  4257f3:	(bad)  [ecx]
  4257f5:	dec    ecx
  4257f6:	and    bl,dl
  4257f8:	data16 sahf 
  4257fa:	int    0xb9
  4257fc:	hlt    
  4257fd:	lds    esp,FWORD PTR [ebx]
  4257ff:	dec    edi
  425800:	into   
  425801:	scas   al,BYTE PTR es:[edi]
  425802:	sbb    dl,dl
  425804:	jle    0x4257b8
  425806:	test   BYTE PTR [ecx+0x7aef14b4],0x3b
  42580d:	clc    
  42580e:	je     0x425863
  425814:	mov    DWORD PTR [ebp-0xc],esi
  425817:	mov    eax,DWORD PTR [ebp-0xc]
  42581a:	mov    esi,DWORD PTR [ebp+0xc]
  42581d:	xor    eax,ecx
  42581f:	lea    eax,[eax*8+0x1939820]
  425826:	mov    eax,DWORD PTR [esi+eax*1]
  425829:	mov    DWORD PTR [ebp+0xc],eax
  42582c:	mov    eax,DWORD PTR [ebp-0x4]
  42582f:	mov    esi,DWORD PTR [ebp-0x8]
  425832:	xor    eax,ecx
  425834:	xor    esi,ecx
  425836:	add    esi,edx
  425838:	add    eax,edx
  42583a:	imul   eax,esi
  42583d:	mov    esi,DWORD PTR [ebp+0xc]
  425840:	cmp    esi,eax
  425842:	je     0x425863
  425848:	mov    eax,DWORD PTR [ebp-0x4]
  42584b:	xor    eax,ecx
  42584d:	mov    ecx,DWORD PTR [ebp+0xc]
  425850:	add    eax,edx
  425852:	imul   eax,ecx
  425855:	add    eax,DWORD PTR [ebp+0x8]
  425858:	mov    DWORD PTR [ebp+0xc],eax
  42585b:	mov    eax,DWORD PTR [ebp+0xc]
  42585e:	jmp    0x425874
  425863:	mov    eax,DWORD PTR [ebp-0x4]
  425866:	mov    esi,DWORD PTR [ebp-0x8]
  425869:	xor    esi,ecx
  42586b:	xor    eax,ecx
  42586d:	add    esi,edx
  42586f:	add    eax,edx
  425871:	imul   eax,esi
  425874:	pop    edi
  425875:	pop    esi
  425876:	leave  
  425877:	ret    0x8
	...
  425882:	add    BYTE PTR [eax],al
  425884:	int3   
  425885:	cmp    al,0xf3
  425887:	dec    ebp
  425888:	add    BYTE PTR [eax],al
  42588a:	add    BYTE PTR [eax],al
  42588c:	add    al,BYTE PTR [eax]
  42588e:	add    BYTE PTR [eax],al
  425890:	add    BYTE PTR ss:[eax],al
  425893:	add    BYTE PTR [eax-0x5ffffda8],ah
  425899:	dec    esp
  42589a:	add    al,BYTE PTR [eax]
  42589c:	add    BYTE PTR [eax],al
  42589e:	add    BYTE PTR [eax],al
  4258a0:	push   edx
  4258a1:	push   ebx
  4258a2:	inc    esp
  4258a3:	push   ebx
  4258a4:	lea    eax,[ecx]
  4258a6:	imul   ecx,DWORD PTR [edi+0x441eaa06],0xffffffb8
  4258ad:	repnz adc edi,DWORD PTR [edi]
  4258b0:	xchg   edx,eax
  4258b1:	clc    
  4258b2:	inc    esi
  4258b3:	add    BYTE PTR [ecx],al
  4258b5:	add    BYTE PTR [eax],al
  4258b7:	add    BYTE PTR [edi+0x3a],al
  4258ba:	pop    esp
  4258bb:	push   ebx
  4258bc:	jns    0x425931
  4258be:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4258c2:	and    BYTE PTR [edi+0x69],dl
  4258c5:	outs   dx,BYTE PTR ds:[esi]
  4258c6:	pop    esp
  4258c7:	inc    esi
  4258c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  4258d0:	outs   dx,BYTE PTR ds:[esi]
  4258d1:	jae    0x42593c
  4258d3:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  4258db:	or     BYTE PTR [ecx],al
  4258dd:	add    BYTE PTR [eax],al
  4258df:	push   ebx
  4258e0:	mov    eax,ebx
  4258e2:	xchg   ecx,eax
  4258e3:	mov    eax,DWORD PTR [ebp+0x8]
  4258e6:	cmp    eax,0xf89c85a5
  4258eb:	jne    0x425dac
  4258f1:	mov    eax,DWORD PTR [ebp+0xc]
  4258f4:	cmp    eax,0xf89c85a2
  4258f9:	jne    0x425dac
  4258ff:	mov    eax,DWORD PTR [ebp+0x24]
  425902:	mov    DWORD PTR [ebp-0x4],eax
  425905:	mov    eax,DWORD PTR [ebp-0x4]
  425908:	mov    eax,DWORD PTR [eax+0x1d8]
  42590e:	mov    eax,DWORD PTR [eax]
  425910:	mov    eax,DWORD PTR [eax]
  425912:	mov    DWORD PTR [ebp-0x8],eax
  425915:	mov    BYTE PTR [ebp-0x18],0x1a
  425919:	mov    BYTE PTR [ebp-0x17],0x1f
  42591d:	mov    BYTE PTR [ebp-0x16],0x18
  425921:	mov    BYTE PTR [ebp-0x15],0x4e
  425925:	mov    BYTE PTR [ebp-0x14],0x51
  425929:	mov    BYTE PTR [ebp-0x13],0x83
  42592d:	mov    BYTE PTR [ebp-0x20],0xc
  425931:	mov    BYTE PTR [ebp-0x1f],0xe
  425935:	mov    BYTE PTR [ebp-0x1e],0x1c
  425939:	mov    BYTE PTR [ebp-0x1d],0x11
  42593d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425941:	mov    BYTE PTR [ebp-0x1b],0x51
  425945:	mov    BYTE PTR [ebp-0x1a],0x83
  425949:	mov    BYTE PTR [ebp-0x28],0xe
  42594d:	mov    BYTE PTR [ebp-0x27],0x1b
  425951:	mov    BYTE PTR [ebp-0x26],0x17
  425955:	mov    BYTE PTR [ebp-0x25],0xa
  425959:	mov    BYTE PTR [ebp-0x24],0x20
  42595d:	mov    BYTE PTR [ebp-0x23],0x13
  425961:	mov    BYTE PTR [ebp-0x22],0x18
  425965:	mov    BYTE PTR [ebp-0x21],0x83
  425969:	xor    ecx,ecx
  42596b:	lea    eax,[ebp+ecx*1-0x18]
  42596f:	movzx  edx,BYTE PTR [eax]
  425972:	xor    edx,0x7e
  425975:	add    edx,0x3
  425978:	inc    ecx
  425979:	mov    BYTE PTR [eax],dl
  42597b:	cmp    ecx,0x6
  42597e:	jb     0x42596b
  425980:	xor    ecx,ecx
  425982:	lea    eax,[ebp+ecx*1-0x20]
  425986:	movzx  edx,BYTE PTR [eax]
  425989:	xor    edx,0x7e
  42598c:	add    edx,0x3
  42598f:	inc    ecx
  425990:	mov    BYTE PTR [eax],dl
  425992:	cmp    ecx,0x7
  425995:	jb     0x425982
  425997:	xor    ecx,ecx
  425999:	lea    eax,[ebp+ecx*1-0x28]
  42599d:	movzx  edx,BYTE PTR [eax]
  4259a0:	xor    edx,0x7e
  4259a3:	add    edx,0x3
  4259a6:	inc    ecx
  4259a7:	mov    BYTE PTR [eax],dl
  4259a9:	cmp    ecx,0x8
  4259ac:	jb     0x425999
  4259ae:	lea    eax,[ebp-0x2c]
  4259b1:	mov    DWORD PTR [ebp-0x8],eax
  4259b4:	mov    ecx,DWORD PTR [ebp-0x8]
  4259b7:	mov    eax,0x7113fccf
  4259bc:	mov    DWORD PTR [ecx],eax
  4259be:	mov    ecx,DWORD PTR [ebp-0x2c]
  4259c1:	push   esi
  4259c2:	push   edi
  4259c3:	mov    esi,0x4e3e
  4259c8:	mov    ebx,0x3272f5
  4259cd:	cmp    ecx,eax
  4259cf:	jne    0x425a9a
  4259d5:	lea    eax,[esi+0x39]
  4259d8:	mov    WORD PTR [ebp-0x78],ax
  4259dc:	mov    eax,esi
  4259de:	mov    WORD PTR [ebp-0x76],ax
  4259e2:	add    eax,0x3f
  4259e5:	mov    WORD PTR [ebp-0x74],ax
  4259e9:	lea    eax,[esi-0x2]
  4259ec:	mov    WORD PTR [ebp-0x72],ax
  4259f0:	add    eax,0x43
  4259f3:	mov    ecx,eax
  4259f5:	lea    eax,[esi-0x9]
  4259f8:	mov    WORD PTR [ebp-0x66],ax
  4259fc:	mov    eax,esi
  4259fe:	mov    WORD PTR [ebp-0x64],ax
  425a02:	add    eax,0xffffffec
  425a05:	mov    WORD PTR [ebp-0x62],ax
  425a09:	mov    eax,0x443
  425a0e:	mov    WORD PTR [ebp-0x60],ax
  425a12:	mov    eax,0x5670
  425a17:	mov    WORD PTR [ebp-0x5e],ax
  425a1b:	mov    eax,0x6110
  425a20:	mov    WORD PTR [ebp-0x5c],ax
  425a24:	lea    eax,[ebp-0xe0]
  425a2a:	push   eax
  425a2b:	mov    eax,DWORD PTR [ebp+0xc]
  425a2e:	mov    edi,0x75108ae
  425a33:	xor    eax,edi
  425a35:	add    eax,ebx
  425a37:	push   eax
  425a38:	mov    WORD PTR [ebp-0x70],cx
  425a3c:	lea    ecx,[esi-0xe]
  425a3f:	mov    edx,ecx
  425a41:	lea    eax,[ebp-0x78]
  425a44:	push   eax
  425a45:	mov    eax,DWORD PTR [ebp-0x4]
  425a48:	mov    eax,DWORD PTR [eax+0x198]
  425a4e:	mov    WORD PTR [ebp-0x6e],dx
  425a52:	mov    edx,0x4f8a
  425a57:	mov    WORD PTR [ebp-0x6c],dx
  425a5b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a62:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a69:	mov    DWORD PTR [ebp-0xe0],0x1
  425a73:	mov    DWORD PTR [ebp-0xdc],0x255
  425a7d:	push   DWORD PTR [eax]
  425a7f:	mov    eax,DWORD PTR [ebp+0x10]
  425a82:	call   eax
  425a84:	mov    DWORD PTR [ebp-0x8],eax
  425a87:	mov    eax,DWORD PTR [ebp-0x8]
  425a8a:	test   eax,eax
  425a8c:	je     0x425a9f
  425a8e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425a98:	jmp    0x425a9f
  425a9a:	mov    edi,0x75108ae
  425a9f:	mov    eax,DWORD PTR [ebp-0x4]
  425aa2:	mov    ecx,DWORD PTR [eax+0x18c]
  425aa8:	xor    eax,eax
  425aaa:	cmp    DWORD PTR [ecx],eax
  425aac:	jne    0x425d1f
  425ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  425ab5:	mov    ecx,DWORD PTR [ecx+0x17c]
  425abb:	mov    DWORD PTR [ecx],eax
  425abd:	mov    ecx,DWORD PTR [ebp-0x4]
  425ac0:	mov    ecx,DWORD PTR [ecx+0x180]
  425ac6:	mov    DWORD PTR [ecx],eax
  425ac8:	mov    eax,0x4e6d
  425acd:	mov    WORD PTR [ebp-0x9c],ax
  425ad4:	mov    eax,esi
  425ad6:	mov    WORD PTR [ebp-0x9a],ax
  425add:	mov    eax,0x4e7d
  425ae2:	mov    WORD PTR [ebp-0x98],ax
  425ae9:	add    eax,0xffffffc0
  425aec:	mov    WORD PTR [ebp-0x96],ax
  425af3:	mov    eax,0x4f8e
  425af8:	mov    WORD PTR [ebp-0x94],ax
  425aff:	mov    eax,0x4e32
  425b04:	mov    WORD PTR [ebp-0x92],ax
  425b0b:	add    eax,0x4d
  425b0e:	mov    WORD PTR [ebp-0x90],ax
  425b15:	mov    eax,0x4e30
  425b1a:	mov    WORD PTR [ebp-0x8e],ax
  425b21:	mov    eax,esi
  425b23:	mov    WORD PTR [ebp-0x8c],ax
  425b2a:	mov    eax,0x4e31
  425b2f:	mov    WORD PTR [ebp-0x8a],ax
  425b36:	mov    eax,0x99fd
  425b3b:	mov    WORD PTR [ebp-0x88],ax
  425b42:	mov    eax,0x8d62
  425b47:	mov    WORD PTR [ebp-0x86],ax
  425b4e:	mov    eax,0xd66f
  425b53:	mov    WORD PTR [ebp-0x84],ax
  425b5a:	mov    eax,0xd783
  425b5f:	mov    WORD PTR [ebp-0x82],ax
  425b66:	mov    eax,0x2780
  425b6b:	mov    WORD PTR [ebp-0x80],ax
  425b6f:	mov    eax,0x4780
  425b74:	mov    WORD PTR [ebp-0x7e],ax
  425b78:	mov    eax,0x4e33
  425b7d:	push   0x8
  425b7f:	mov    WORD PTR [ebp-0x7c],ax
  425b83:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425b8a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425b91:	lea    eax,[ebp-0x10]
  425b94:	pop    ecx
  425b95:	mov    dl,BYTE PTR [eax]
  425b97:	xor    dl,0x7e
  425b9a:	add    dl,0x3
  425b9d:	mov    BYTE PTR [eax],dl
  425b9f:	inc    eax
  425ba0:	dec    ecx
  425ba1:	jne    0x425b95
  425ba3:	lea    eax,[ebp-0x10]
  425ba6:	mov    DWORD PTR [ebp-0xdc],eax
  425bac:	lea    eax,[ebp-0xe0]
  425bb2:	push   eax
  425bb3:	mov    eax,DWORD PTR [ebp+0xc]
  425bb6:	xor    eax,edi
  425bb8:	add    eax,ebx
  425bba:	push   eax
  425bbb:	mov    eax,DWORD PTR [ebp-0x4]
  425bbe:	add    eax,0x66
  425bc1:	push   eax
  425bc2:	mov    eax,DWORD PTR [ebp-0x4]
  425bc5:	mov    eax,DWORD PTR [eax+0x198]
  425bcb:	mov    DWORD PTR [ebp-0xe0],0x1
  425bd5:	push   DWORD PTR [eax]
  425bd7:	mov    eax,DWORD PTR [ebp+0x10]
  425bda:	call   eax
  425bdc:	mov    ecx,DWORD PTR [ebp+0x8]
  425bdf:	xor    ecx,edi
  425be1:	add    ecx,ebx
  425be3:	mov    DWORD PTR [ebp-0x8],eax
  425be6:	cmp    eax,ecx
  425be8:	jne    0x425c03
  425bea:	mov    eax,ds:0x33730bcc
  425bef:	or     eax,0x22150bcf
  425bf4:	mov    ds:0x33730bcc,eax
  425bf9:	add    eax,0x3372e92f
  425bfe:	mov    ds:0x33730bcc,eax
  425c03:	mov    ecx,0x4e66
  425c08:	mov    eax,ecx
  425c0a:	mov    WORD PTR [ebp-0x40],ax
  425c0e:	add    eax,0x5
  425c11:	mov    edx,eax
  425c13:	mov    WORD PTR [ebp-0x3e],dx
  425c17:	mov    edx,0x4f93
  425c1c:	mov    WORD PTR [ebp-0x3c],dx
  425c20:	add    edx,0xfffffff8
  425c23:	mov    WORD PTR [ebp-0x3a],dx
  425c27:	mov    edx,0x4f89
  425c2c:	mov    WORD PTR [ebp-0x38],dx
  425c30:	add    edx,0x3
  425c33:	mov    WORD PTR [ebp-0x36],dx
  425c37:	mov    edx,0x4f87
  425c3c:	mov    WORD PTR [ebp-0x34],dx
  425c40:	mov    WORD PTR [ebp-0x32],cx
  425c44:	mov    ecx,esi
  425c46:	mov    WORD PTR [ebp-0x30],cx
  425c4a:	lea    ecx,[edx-0x1]
  425c4d:	mov    edx,ecx
  425c4f:	mov    WORD PTR [ebp-0x54],dx
  425c53:	mov    edx,eax
  425c55:	mov    WORD PTR [ebp-0x52],dx
  425c59:	mov    edx,0x4e73
  425c5e:	mov    WORD PTR [ebp-0x50],dx
  425c62:	mov    WORD PTR [ebp-0x4e],ax
  425c66:	lea    eax,[edx-0xa]
  425c69:	mov    WORD PTR [ebp-0x4c],ax
  425c6d:	add    eax,0x3
  425c70:	mov    WORD PTR [ebp-0x4a],ax
  425c74:	lea    eax,[edx-0xc]
  425c77:	mov    WORD PTR [ebp-0x48],ax
  425c7b:	mov    WORD PTR [ebp-0x46],cx
  425c7f:	mov    WORD PTR [ebp-0x44],si
  425c83:	mov    eax,DWORD PTR [ebp+0x8]
  425c86:	movzx  ecx,WORD PTR [ebp-0x54]
  425c8a:	xor    eax,edi
  425c8c:	add    eax,ebx
  425c8e:	xor    eax,ecx
  425c90:	mov    WORD PTR [ebp-0x54],ax
  425c94:	mov    eax,DWORD PTR [ebp+0x8]
  425c97:	movzx  ecx,WORD PTR [ebp-0x40]
  425c9b:	xor    eax,edi
  425c9d:	add    eax,ebx
  425c9f:	xor    eax,ecx
  425ca1:	mov    WORD PTR [ebp-0x40],ax
  425ca5:	xor    eax,eax
  425ca7:	mov    WORD PTR [ebp-0xf4],ax
  425cae:	mov    WORD PTR [ebp-0x108],ax
  425cb5:	mov    edi,DWORD PTR [ebp+0x24]
  425cb8:	lea    eax,[ebp-0xf4]
  425cbe:	lea    edx,[ebp-0x54]
  425cc1:	mov    DWORD PTR [ebp-0xe0],0x2
  425ccb:	mov    DWORD PTR [ebp-0xdc],eax
  425cd1:	call   0x428709
  425cd6:	mov    DWORD PTR [ebp-0xd8],eax
  425cdc:	lea    eax,[ebp-0xe0]
  425ce2:	push   eax
  425ce3:	mov    eax,DWORD PTR [ebp+0xc]
  425ce6:	xor    eax,0x75108ae
  425ceb:	add    eax,ebx
  425ced:	push   eax
  425cee:	lea    eax,[ebp-0x9c]
  425cf4:	push   eax
  425cf5:	push   DWORD PTR [ebp-0x8]
  425cf8:	mov    eax,DWORD PTR [ebp+0x10]
  425cfb:	call   eax
  425cfd:	mov    edi,DWORD PTR [ebp+0x24]
  425d00:	lea    eax,[ebp-0x108]
  425d06:	lea    edx,[ebp-0x40]
  425d09:	mov    DWORD PTR [ebp-0xdc],eax
  425d0f:	call   0x428709
  425d14:	mov    DWORD PTR [ebp-0xd8],eax
  425d1a:	mov    edi,0x75108ae
  425d1f:	mov    eax,DWORD PTR [ebp+0x14]
  425d22:	push   DWORD PTR [ebp-0x4]
  425d25:	push   DWORD PTR [ebp+0x20]
  425d28:	push   DWORD PTR [ebp+0x1c]
  425d2b:	push   DWORD PTR [ebp+0x18]
  425d2e:	push   DWORD PTR [ebp+0x10]
  425d31:	push   DWORD PTR [ebp+0x8]
  425d34:	push   DWORD PTR [ebp+0xc]
  425d37:	call   0x426faa
  425d3c:	test   eax,eax
  425d3e:	je     0x425d82
  425d40:	add    DWORD PTR [ebp-0x4],eax
  425d43:	push   DWORD PTR [ebp-0x4]
  425d46:	lea    esi,[ebp+0x4]
  425d49:	call   0x42619a
  425d4e:	mov    eax,DWORD PTR [ebp-0x4]
  425d51:	mov    eax,DWORD PTR [eax+0x1c8]
  425d57:	mov    eax,DWORD PTR [eax]
  425d59:	xor    eax,edi
  425d5b:	add    eax,ebx
  425d5d:	mov    eax,DWORD PTR [ebp-0x4]
  425d60:	jne    0x425d78
  425d62:	mov    ecx,DWORD PTR [ebp-0x4]
  425d65:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d6b:	push   DWORD PTR [ecx]
  425d6d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d73:	call   DWORD PTR [eax+0x28]
  425d76:	jmp    0x425d82
  425d78:	mov    eax,DWORD PTR [eax+0x17c]
  425d7e:	mov    eax,DWORD PTR [eax]
  425d80:	add    DWORD PTR [esi],eax
  425d82:	mov    eax,DWORD PTR [ebp-0x4]
  425d85:	mov    eax,DWORD PTR [eax+0x1dc]
  425d8b:	dec    DWORD PTR [eax]
  425d8d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d90:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425d96:	mov    eax,DWORD PTR [eax]
  425d98:	lea    eax,[ecx+eax*4]
  425d9b:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425da4:	mov    eax,DWORD PTR [eax]
  425da6:	mov    ecx,DWORD PTR [ecx]
  425da8:	add    DWORD PTR [eax],ecx
  425daa:	pop    edi
  425dab:	pop    esi
  425dac:	pop    ebx
  425dad:	leave  
  425dae:	ret    0x20
  425db1:	push   edi
  425db2:	push   esi
  425db3:	push   ebx
  425db4:	push   ebp
  425db5:	mov    ebp,esp
  425db7:	mov    eax,DWORD PTR [ebp+0x24]
  425dba:	add    DWORD PTR [ebp+0x28],eax
  425dbd:	push   eax
  425dbe:	cld    
  425dbf:	mov    esi,DWORD PTR [ebp+0x18]
  425dc2:	add    DWORD PTR [ebp+0x1c],esi
  425dc5:	push   esi
  425dc6:	mov    esi,DWORD PTR [ebp+0x14]
  425dc9:	lods   eax,DWORD PTR ds:[esi]
  425dca:	xchg   edx,eax
  425dcb:	push   edx
  425dcc:	mov    cl,BYTE PTR [esi-0x2]
  425dcf:	or     eax,0xffffffff
  425dd2:	shl    eax,cl
  425dd4:	not    eax
  425dd6:	push   eax
  425dd7:	mov    cl,dh
  425dd9:	or     eax,0xffffffff
  425ddc:	shl    eax,cl
  425dde:	not    eax
  425de0:	push   eax
  425de1:	add    cl,dl
  425de3:	mov    edi,esi
  425de5:	sub    esp,0xc
  425de8:	sub    eax,eax
  425dea:	inc    eax
  425deb:	push   eax
  425dec:	push   eax
  425ded:	push   eax
  425dee:	push   eax
  425def:	push   eax
  425df0:	push   edi
  425df1:	sub    esi,esi
  425df3:	push   esi
  425df4:	or     ebx,0xffffffff
  425df7:	mov    eax,0x300
  425dfc:	shl    eax,cl
  425dfe:	lea    ecx,[eax+0x736]
  425e04:	mov    eax,0x4000400
  425e09:	shr    ecx,1
  425e0b:	rep stos DWORD PTR es:[edi],eax
  425e0d:	push   0x5
  425e0f:	pop    ecx
  425e10:	call   0x4260fb
  425e15:	loop   0x425e10
  425e17:	lea    esi,[esi]
  425e19:	lea    edi,[edi]
  425e1b:	mov    edi,DWORD PTR [ebp-0x4]
  425e1e:	mov    eax,DWORD PTR [ebp-0x10]
  425e21:	sub    edi,DWORD PTR [ebp+0x24]
  425e24:	and    eax,edi
  425e26:	mov    DWORD PTR [ebp-0x18],eax
  425e29:	mov    al,0x0
  425e2b:	call   0x426113
  425e30:	jne    0x425ecb
  425e36:	mov    cl,BYTE PTR [ebp-0xc]
  425e39:	and    edi,DWORD PTR [ebp-0x14]
  425e3c:	shl    edi,cl
  425e3e:	sub    cl,0x8
  425e41:	neg    cl
  425e43:	shr    esi,cl
  425e45:	pop    eax
  425e46:	add    edi,esi
  425e48:	pop    esi
  425e49:	lea    edi,[edi+edi*2]
  425e4c:	shl    edi,0x8
  425e4f:	cmp    al,0x7
  425e51:	pop    edx
  425e52:	lea    ecx,[esi+edi*2+0xe6c]
  425e59:	push   ecx
  425e5a:	push   esi
  425e5b:	mov    esi,0x100
  425e60:	push   eax
  425e61:	mov    al,0x1
  425e63:	jb     0x425e99
  425e65:	mov    edi,DWORD PTR [ebp-0x4]
  425e68:	sub    edi,DWORD PTR [ebp-0x24]
  425e6b:	movzx  edi,BYTE PTR [edi]
  425e6e:	mov    ebp,DWORD PTR [ebp-0x34]
  425e71:	shl    edi,1
  425e73:	mov    ecx,esi
  425e75:	and    esi,edi
  425e77:	add    ecx,esi
  425e79:	lea    ebp,[ebp+ecx*2+0x0]
  425e7d:	call   0x426132
  425e82:	mov    ecx,eax
  425e84:	shr    esi,0x8
  425e87:	and    ecx,0x1
  425e8a:	cmp    esi,ecx
  425e8c:	mov    esi,0x100
  425e91:	jne    0x425ea1
  425e93:	cmp    eax,esi
  425e95:	jb     0x425e6e
  425e97:	jmp    0x425ead
  425e99:	mov    ebp,DWORD PTR [ebp-0x34]
  425e9c:	call   0x426132
  425ea1:	inc    eax
  425ea2:	inc    esi
  425ea3:	sub    eax,0x1
  425ea6:	sub    esi,0x1
  425ea9:	cmp    eax,esi
  425eab:	jb     0x425e99
  425ead:	pop    edx
  425eae:	inc    edx
  425eaf:	cmp    edx,0x5
  425eb2:	dec    edx
  425eb3:	mov    ecx,edx
  425eb5:	jb     0x425ec6
  425eb7:	inc    edx
  425eb8:	cmp    edx,0xb
  425ebb:	dec    edx
  425ebc:	mov    cl,0x4
  425ebe:	dec    cl
  425ec0:	jb     0x425ec6
  425ec2:	mov    cl,0x7
  425ec4:	dec    cl
  425ec6:	sub    edx,ecx
  425ec8:	push   edx
  425ec9:	jmp    0x425f1a
  425ecb:	mov    al,0xc1
  425ecd:	dec    al
  425ecf:	call   0x426123
  425ed4:	jne    0x425eea
  425ed6:	pop    eax
  425ed7:	pop    edi
  425ed8:	pop    edx
  425ed9:	pop    ecx
  425eda:	pop    edx
  425edb:	pop    ecx
  425edc:	push   DWORD PTR [esp]
  425edf:	push   ecx
  425ee0:	push   edx
  425ee1:	mov    edx,0x664
  425ee6:	mov    cl,0x0
  425ee8:	jmp    0x425f5d
  425eea:	mov    al,0xcd
  425eec:	dec    al
  425eee:	call   0x426123
  425ef3:	jne    0x425f23
  425ef5:	mov    al,0xf1
  425ef7:	dec    al
  425ef9:	call   0x426113
  425efe:	jne    0x425f53
  425f00:	pop    eax
  425f01:	cmp    al,0x7
  425f03:	mov    al,0x9
  425f05:	jb     0x425f09
  425f07:	mov    al,0xb
  425f09:	push   eax
  425f0a:	mov    esi,DWORD PTR [ebp-0x4]
  425f0d:	sub    esi,DWORD PTR [ebp-0x24]
  425f10:	cmp    esi,DWORD PTR [ebp+0x24]
  425f13:	jb     0x4260ea
  425f19:	lods   al,BYTE PTR ds:[esi]
  425f1a:	mov    edi,DWORD PTR [ebp-0x4]
  425f1d:	stos   BYTE PTR es:[edi],al
  425f1e:	jmp    0x4260b1
  425f23:	mov    al,0xd8
  425f25:	call   0x426123
  425f2a:	mov    esi,DWORD PTR [ebp-0x28]
  425f2d:	je     0x425f4a
  425f2f:	mov    al,0xe4
  425f31:	call   0x426123
  425f36:	mov    esi,DWORD PTR [ebp-0x2c]
  425f39:	je     0x425f44
  425f3b:	mov    esi,DWORD PTR [ebp-0x30]
  425f3e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f41:	mov    DWORD PTR [ebp-0x30],ecx
  425f44:	mov    ecx,DWORD PTR [ebp-0x28]
  425f47:	mov    DWORD PTR [ebp-0x2c],ecx
  425f4a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f4d:	mov    DWORD PTR [ebp-0x28],ecx
  425f50:	mov    DWORD PTR [ebp-0x24],esi
  425f53:	pop    eax
  425f54:	pop    edi
  425f55:	pop    ecx
  425f56:	mov    edx,0xa68
  425f5b:	mov    cl,0x8
  425f5d:	add    edx,edi
  425f5f:	push   edx
  425f60:	push   edi
  425f61:	cmp    al,0x7
  425f63:	mov    al,cl
  425f65:	jb     0x425f69
  425f67:	add    al,0x3
  425f69:	push   eax
  425f6a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f6d:	call   0x426130
  425f72:	jne    0x425f88
  425f74:	mov    eax,DWORD PTR [ebp-0x18]
  425f77:	mov    edi,DWORD PTR [ebp-0x34]
  425f7a:	shl    eax,0x3
  425f7d:	sub    ecx,ecx
  425f7f:	push   0x8
  425f81:	pop    esi
  425f82:	lea    edi,[edi+eax*2+0x4]
  425f86:	jmp    0x425fbd
  425f88:	mov    ebp,DWORD PTR [ebp-0x34]
  425f8b:	add    ebp,0x2
  425f8e:	call   0x426130
  425f93:	jne    0x425fad
  425f95:	mov    eax,DWORD PTR [ebp-0x18]
  425f98:	mov    edi,DWORD PTR [ebp-0x34]
  425f9b:	shl    eax,0x3
  425f9e:	push   0x8
  425fa0:	pop    ecx
  425fa1:	push   0x8
  425fa3:	pop    esi
  425fa4:	lea    edi,[edi+eax*2+0x104]
  425fab:	jmp    0x425fbd
  425fad:	mov    edi,0x204
  425fb2:	add    edi,DWORD PTR [ebp-0x34]
  425fb5:	push   0x10
  425fb7:	pop    ecx
  425fb8:	mov    esi,0x100
  425fbd:	mov    DWORD PTR [ebp-0x1c],ecx
  425fc0:	sub    eax,eax
  425fc2:	inc    eax
  425fc3:	mov    ebp,edi
  425fc5:	call   0x426132
  425fca:	mov    ecx,eax
  425fcc:	sub    ecx,esi
  425fce:	jb     0x425fc3
  425fd0:	add    DWORD PTR [ebp-0x1c],ecx
  425fd3:	cmp    DWORD PTR [ebp-0x3c],0x4
  425fd7:	jae    0x42608d
  425fdd:	add    DWORD PTR [ebp-0x3c],0x7
  425fe1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe4:	cmp    ecx,0x4
  425fe7:	jb     0x425fec
  425fe9:	push   0x3
  425feb:	pop    ecx
  425fec:	mov    edi,DWORD PTR [ebp-0x38]
  425fef:	shl    ecx,0x6
  425ff2:	sub    eax,eax
  425ff4:	inc    eax
  425ff5:	push   0x40
  425ff7:	pop    esi
  425ff8:	lea    edi,[edi+ecx*2+0x360]
  425fff:	mov    ebp,edi
  426001:	call   0x426132
  426006:	mov    ecx,eax
  426008:	sub    ecx,esi
  42600a:	jb     0x425fff
  42600c:	mov    DWORD PTR [ebp-0x18],ecx
  42600f:	mov    DWORD PTR [ebp-0x24],ecx
  426012:	cmp    ecx,0x4
  426015:	jb     0x42608a
  426017:	mov    esi,ecx
  426019:	and    DWORD PTR [ebp-0x24],0x1
  42601d:	shr    esi,1
  42601f:	or     DWORD PTR [ebp-0x24],0x2
  426023:	dec    esi
  426024:	cmp    ecx,0xe
  426027:	jae    0x426042
  426029:	mov    eax,0x2af
  42602e:	sub    eax,ecx
  426030:	mov    ecx,esi
  426032:	shl    BYTE PTR [ebp-0x24],cl
  426035:	add    eax,DWORD PTR [ebp-0x24]
  426038:	shl    eax,1
  42603a:	add    eax,DWORD PTR [ebp-0x38]
  42603d:	mov    DWORD PTR [ebp-0x34],eax
  426040:	jmp    0x42606f
  426042:	sub    esi,0x4
  426045:	call   0x4260ef
  42604a:	shr    ebx,1
  42604c:	shl    DWORD PTR [ebp-0x24],1
  42604f:	cmp    DWORD PTR [ebp-0x20],ebx
  426052:	jb     0x42605a
  426054:	inc    DWORD PTR [ebp-0x24]
  426057:	sub    DWORD PTR [ebp-0x20],ebx
  42605a:	dec    esi
  42605b:	jne    0x426045
  42605d:	mov    eax,0x644
  426062:	add    eax,DWORD PTR [ebp-0x38]
  426065:	mov    DWORD PTR [ebp-0x34],eax
  426068:	shl    DWORD PTR [ebp-0x24],0x4
  42606c:	push   0x4
  42606e:	pop    esi
  42606f:	sub    edi,edi
  426071:	inc    edi
  426072:	mov    eax,edi
  426074:	mov    ebp,DWORD PTR [ebp-0x34]
  426077:	call   0x426132
  42607c:	test   al,0x1
  42607e:	je     0x426083
  426080:	or     DWORD PTR [ebp-0x24],edi
  426083:	shl    edi,1
  426085:	dec    esi
  426086:	jne    0x426074
  426088:	jmp    0x42608a
  42608a:	inc    DWORD PTR [ebp-0x24]
  42608d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426090:	add    ecx,0x2
  426093:	mov    edi,DWORD PTR [ebp-0x4]
  426096:	mov    eax,edi
  426098:	sub    eax,DWORD PTR [ebp+0x24]
  42609b:	cmp    DWORD PTR [ebp-0x24],eax
  42609e:	ja     0x4260ea
  4260a0:	mov    esi,edi
  4260a2:	sub    esi,DWORD PTR [ebp-0x24]
  4260a5:	mov    edx,DWORD PTR [ebp+0x28]
  4260a8:	lods   al,BYTE PTR ds:[esi]
  4260a9:	stos   BYTE PTR es:[edi],al
  4260aa:	cmp    edi,edx
  4260ac:	jae    0x4260b1
  4260ae:	dec    ecx
  4260af:	jne    0x4260a8
  4260b1:	mov    DWORD PTR [ebp-0x4],edi
  4260b4:	movzx  esi,al
  4260b7:	cmp    edi,DWORD PTR [ebp+0x28]
  4260ba:	jb     0x425e1b
  4260c0:	call   0x4260ef
  4260c5:	sub    eax,eax
  4260c7:	lea    ebp,[esp+0x3c]
  4260cb:	mov    edx,DWORD PTR [ebp+0x20]
  4260ce:	mov    esi,DWORD PTR [ebp-0x8]
  4260d1:	sub    esi,DWORD PTR [ebp+0x18]
  4260d4:	mov    DWORD PTR [edx],esi
  4260d6:	mov    dh,0xdd
  4260d8:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  4260de:	sbb    BYTE PTR [esi+0x1f5af70],ch
  4260e4:	add    eax,0x188f893
  4260e9:	jmp    0x37cbec22
  4260ee:	jmp    0x42607e
  4260f0:	ja     0x42607a
  4260f2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4260f8:	(bad)  
  4260f9:	pop    ss
  4260fa:	test   al,0xe1
  4260fc:	mov    dh,0x5d
  4260fe:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426103:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426109:	test   al,0x3a
  42610b:	scas   al,BYTE PTR es:[edi]
  42610c:	popf   
  42610d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426113:	mov    dh,0xbd
  426115:	fwait
  426116:	les    esp,FWORD PTR [edx-0x75]
  426119:	(bad)  
  42611a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426122:	mov    al,ds:0x948b62c4
  426127:	popf   
  426128:	fwait
  426129:	mov    dh,0x3d
  42612b:	stos   DWORD PTR es:[edi],eax
  42612c:	mov    esi,0x34889d39
  426131:	mov    edi,DWORD PTR [esi-0x717762c7]
  426137:	ja     0x4260c1
  426139:	mov    BYTE PTR [eax-0x4907aa74],cl
  42613f:	mov    ecx,0x198f6818
  426144:	sbb    BYTE PTR [eax],cl
  426146:	test   al,0x74
  426148:	mov    ecx,0xfa55f918
  42614d:	mov    dl,0xcc
  42614f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426155:	test   al,0x88
  426157:	push   esp
  426158:	and    al,0x20
  42615a:	mov    ecx,ebx
  42615c:	movzx  edx,WORD PTR [ebp+0x0]
  426160:	shr    ecx,0xb
  426163:	imul   ecx,edx
  426166:	cmp    DWORD PTR [esp+0x20],ecx
  42616a:	jae    0x426183
  42616c:	mov    ebx,ecx
  42616e:	mov    ecx,0x800
  426173:	sub    ecx,edx
  426175:	shr    ecx,0x5
  426178:	add    WORD PTR [ebp+0x0],cx
  42617c:	add    eax,eax
  42617e:	lea    ebp,[esp+0x40]
  426182:	ret    
  426183:	shr    edx,0x5
  426186:	sub    DWORD PTR [esp+0x20],ecx
  42618a:	sub    ebx,ecx
  42618c:	sub    WORD PTR [ebp+0x0],dx
  426190:	add    eax,eax
  426192:	add    eax,0x1
  426195:	lea    ebp,[esp+0x40]
  426199:	ret    
  42619a:	push   ebp
  42619b:	mov    ebp,esp
  42619d:	sub    esp,0x12c
  4261a3:	push   ebx
  4261a4:	push   esi
  4261a5:	push   edi
  4261a6:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4261ad:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4261b4:	mov    eax,DWORD PTR [ebp+0x8]
  4261b7:	mov    DWORD PTR [ebp+0x8],eax
  4261ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4261bd:	mov    ebx,0x75108ae
  4261c2:	xor    ecx,ebx
  4261c4:	mov    eax,0x3272f5
  4261c9:	add    ecx,eax
  4261cb:	mov    DWORD PTR [ebp-0x24],ecx
  4261ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4261d1:	xor    ecx,ebx
  4261d3:	add    ecx,eax
  4261d5:	mov    DWORD PTR [ebp-0x40],ecx
  4261d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4261db:	xor    ecx,ebx
  4261dd:	add    ecx,eax
  4261df:	mov    DWORD PTR [ebp-0x3c],ecx
  4261e2:	mov    ecx,DWORD PTR [ebp-0x10]
  4261e5:	xor    ecx,ebx
  4261e7:	add    ecx,eax
  4261e9:	mov    DWORD PTR [ebp-0xd8],ecx
  4261ef:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4261f6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4261fd:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426204:	push   0x25
  426206:	pop    ecx
  426207:	mov    DWORD PTR [ebp-0x30],ecx
  42620a:	mov    DWORD PTR [ebp-0x30],ecx
  42620d:	push   0x65
  42620f:	pop    ecx
  426210:	mov    DWORD PTR [ebp-0x30],ecx
  426213:	mov    DWORD PTR [ebp-0x30],ecx
  426216:	mov    DWORD PTR [ebp-0x30],0x4d
  42621d:	mov    DWORD PTR [ebp-0x30],0x43
  426224:	mov    ecx,DWORD PTR [ebp-0x10]
  426227:	xor    ecx,ebx
  426229:	add    ecx,eax
  42622b:	mov    DWORD PTR [ebp-0x30],ecx
  42622e:	mov    ecx,DWORD PTR [ebp-0x10]
  426231:	xor    ecx,ebx
  426233:	add    ecx,eax
  426235:	mov    DWORD PTR [ebp-0x30],ecx
  426238:	mov    DWORD PTR [ebp-0x28],0x258
  42623f:	mov    DWORD PTR [ebp-0x34],0x36
  426246:	mov    DWORD PTR [ebp-0x14],0x7a
  42624d:	lea    edi,[ebp-0x10c]
  426253:	lea    esi,[ebp-0x12c]
  426259:	call   0x426f19
  42625e:	dec    DWORD PTR [ebp-0x14]
  426261:	jne    0x42624d
  426263:	dec    DWORD PTR [ebp-0x34]
  426266:	jne    0x426246
  426268:	dec    DWORD PTR [ebp-0x28]
  42626b:	jne    0x42623f
  42626d:	mov    DWORD PTR [ebp-0x28],0x400e
  426274:	mov    eax,DWORD PTR [ebp-0x10]
  426277:	xor    eax,ebx
  426279:	mov    esi,0x3272f5
  42627e:	add    eax,esi
  426280:	mov    DWORD PTR [ebp-0x1c],eax
  426283:	mov    eax,DWORD PTR [ebp-0x10]
  426286:	and    DWORD PTR [ebp-0x94],0x0
  42628d:	xor    eax,ebx
  42628f:	add    eax,esi
  426291:	mov    DWORD PTR [ebp-0x38],eax
  426294:	mov    eax,fs:0x18
  42629a:	mov    DWORD PTR [ebp-0x94],eax
  4262a0:	mov    eax,DWORD PTR [eax+0x30]
  4262a3:	mov    DWORD PTR [ebp-0xcc],eax
  4262a9:	mov    eax,DWORD PTR [eax+0xc]
  4262ac:	mov    DWORD PTR [ebp-0xc0],eax
  4262b2:	mov    eax,DWORD PTR [ebp+0x8]
  4262b5:	lea    ecx,[ebp-0x94]
  4262bb:	mov    DWORD PTR [eax+0x1a0],ecx
  4262c1:	mov    eax,DWORD PTR [ebp+0x8]
  4262c4:	lea    ecx,[ebp-0xcc]
  4262ca:	mov    DWORD PTR [eax+0x1a4],ecx
  4262d0:	mov    eax,DWORD PTR [ebp+0x8]
  4262d3:	push   DWORD PTR [ebp+0x8]
  4262d6:	lea    ecx,[ebp-0xc0]
  4262dc:	mov    DWORD PTR [eax+0x1a8],ecx
  4262e2:	call   0x4286da
  4262e7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262ea:	xor    ecx,ebx
  4262ec:	add    ecx,esi
  4262ee:	cmp    ecx,eax
  4262f0:	je     0x426673
  4262f6:	mov    eax,DWORD PTR [ebp+0x8]
  4262f9:	mov    eax,DWORD PTR [eax+0x194]
  4262ff:	mov    ecx,DWORD PTR [eax]
  426301:	mov    eax,DWORD PTR [ebp+0x8]
  426304:	mov    eax,DWORD PTR [eax+0x194]
  42630a:	mov    eax,DWORD PTR [eax]
  42630c:	add    eax,DWORD PTR [ecx+0x3c]
  42630f:	mov    ecx,DWORD PTR [ebp+0x8]
  426312:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426318:	lea    edx,[ebp-0xec]
  42631e:	push   edx
  42631f:	mov    edx,DWORD PTR [ebp+0x8]
  426322:	mov    edx,DWORD PTR [edx+0x18c]
  426328:	mov    edx,DWORD PTR [edx]
  42632a:	add    edx,DWORD PTR [eax+0x88]
  426330:	push   0x4
  426332:	push   DWORD PTR [eax+0x8c]
  426338:	push   edx
  426339:	call   DWORD PTR [ecx+0x1c]
  42633c:	push   DWORD PTR [ebp+0x8]
  42633f:	xor    eax,eax
  426341:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42634b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426355:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42635f:	mov    BYTE PTR [ebp-0x9c],0x83
  426366:	lea    edi,[ebp-0x9b]
  42636c:	stos   DWORD PTR es:[edi],eax
  42636d:	stos   WORD PTR es:[edi],ax
  42636f:	stos   BYTE PTR es:[edi],al
  426370:	xor    eax,eax
  426372:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42637c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426386:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426390:	mov    BYTE PTR [ebp-0xb0],0x83
  426397:	lea    edi,[ebp-0xaf]
  42639d:	stos   DWORD PTR es:[edi],eax
  42639e:	stos   WORD PTR es:[edi],ax
  4263a0:	stos   BYTE PTR es:[edi],al
  4263a1:	mov    edi,DWORD PTR [ebp+0x8]
  4263a4:	mov    eax,DWORD PTR [ebp+0x8]
  4263a7:	mov    edx,DWORD PTR [eax+0x1b8]
  4263ad:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  4263b4:	mov    DWORD PTR [ebp-0x64],0x1813141e
  4263bb:	mov    WORD PTR [ebp-0x60],0x8340
  4263c1:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  4263cb:	mov    DWORD PTR [ebp-0x8c],0x17401120
  4263d5:	mov    DWORD PTR [ebp-0x88],0x35201b13
  4263df:	mov    DWORD PTR [ebp-0x84],0x111c140c
  4263e9:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4263f0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4263f7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4263fe:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426405:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42640c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426413:	call   0x428709
  426418:	push   eax
  426419:	mov    eax,DWORD PTR [ebp+0x8]
  42641c:	mov    eax,DWORD PTR [eax+0x1a8]
  426422:	push   DWORD PTR [eax]
  426424:	call   0x4283aa
  426429:	test   eax,eax
  42642b:	jne    0x42647d
  42642d:	mov    eax,DWORD PTR [ebp+0x8]
  426430:	mov    eax,DWORD PTR [eax+0x1e0]
  426436:	mov    edi,DWORD PTR [ebp+0x8]
  426439:	add    eax,0x4
  42643c:	mov    DWORD PTR [ebp-0x20],eax
  42643f:	mov    eax,DWORD PTR [ebp+0x8]
  426442:	mov    edx,DWORD PTR [eax+0x1b8]
  426448:	call   0x428709
  42644d:	push   eax
  42644e:	mov    eax,DWORD PTR [ebp-0x20]
  426451:	call   DWORD PTR [eax]
  426453:	test   eax,eax
  426455:	jne    0x42647d
  426457:	mov    eax,DWORD PTR [ebp+0x8]
  42645a:	mov    eax,DWORD PTR [eax+0x1e0]
  426460:	mov    edi,DWORD PTR [ebp+0x8]
  426463:	add    eax,0x10
  426466:	mov    DWORD PTR [ebp-0x20],eax
  426469:	mov    eax,DWORD PTR [ebp+0x8]
  42646c:	mov    edx,DWORD PTR [eax+0x1b8]
  426472:	call   0x428709
  426477:	push   eax
  426478:	mov    eax,DWORD PTR [ebp-0x20]
  42647b:	call   DWORD PTR [eax]
  42647d:	mov    eax,DWORD PTR [ebp-0x10]
  426480:	mov    ecx,DWORD PTR [ebp-0x28]
  426483:	xor    eax,ebx
  426485:	add    eax,esi
  426487:	cmp    eax,ecx
  426489:	je     0x42664c
  42648f:	mov    eax,DWORD PTR [ebp-0x18]
  426492:	xor    eax,ebx
  426494:	mov    ecx,0xffcd8d0b
  426499:	sub    ecx,eax
  42649b:	add    ecx,DWORD PTR [ebp-0x28]
  42649e:	mov    eax,DWORD PTR [ebp-0x1c]
  4264a1:	cmp    eax,ecx
  4264a3:	ja     0x42664c
  4264a9:	mov    DWORD PTR [ebp-0x34],0x0
  4264b0:	push   DWORD PTR [ebp+0x8]
  4264b3:	mov    edi,DWORD PTR [ebp+0x8]
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	mov    edx,DWORD PTR [eax+0x1b4]
  4264bf:	call   0x428709
  4264c4:	push   eax
  4264c5:	mov    eax,DWORD PTR [ebp+0x8]
  4264c8:	mov    eax,DWORD PTR [eax+0x1a8]
  4264ce:	push   DWORD PTR [eax]
  4264d0:	call   0x4283aa
  4264d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4264d8:	mov    ecx,DWORD PTR [ecx+0x19c]
  4264de:	mov    DWORD PTR [ecx],eax
  4264e0:	mov    eax,DWORD PTR [ebp+0x8]
  4264e3:	mov    edi,DWORD PTR [eax+0x1e0]
  4264e9:	mov    esi,DWORD PTR [ebp+0x8]
  4264ec:	xor    eax,eax
  4264ee:	lea    edx,[ebp-0x7c]
  4264f1:	call   0x42873f
  4264f6:	push   eax
  4264f7:	mov    eax,DWORD PTR [ebp+0x8]
  4264fa:	mov    eax,DWORD PTR [eax+0x19c]
  426500:	push   DWORD PTR [eax]
  426502:	call   DWORD PTR [edi+0x8]
  426505:	mov    DWORD PTR [ebp-0x20],eax
  426508:	mov    eax,DWORD PTR [ebp+0x8]
  42650b:	mov    edi,DWORD PTR [eax+0x1e0]
  426511:	mov    esi,DWORD PTR [ebp+0x8]
  426514:	xor    eax,eax
  426516:	lea    edx,[ebp-0x90]
  42651c:	call   0x42873f
  426521:	push   eax
  426522:	mov    eax,DWORD PTR [ebp+0x8]
  426525:	mov    eax,DWORD PTR [eax+0x19c]
  42652b:	push   DWORD PTR [eax]
  42652d:	call   DWORD PTR [edi+0x8]
  426530:	mov    eax,DWORD PTR [ebp+0x8]
  426533:	mov    edi,DWORD PTR [eax+0x1e0]
  426539:	mov    esi,DWORD PTR [ebp+0x8]
  42653c:	xor    eax,eax
  42653e:	lea    edx,[ebp-0xa8]
  426544:	call   0x42873f
  426549:	push   eax
  42654a:	mov    eax,DWORD PTR [ebp+0x8]
  42654d:	mov    eax,DWORD PTR [eax+0x19c]
  426553:	push   DWORD PTR [eax]
  426555:	call   DWORD PTR [edi+0x8]
  426558:	and    DWORD PTR [ebp-0x8],0x0
  42655c:	mov    DWORD PTR [ebp-0x48],eax
  42655f:	mov    eax,DWORD PTR [ebp-0x8]
  426562:	and    eax,0x7
  426565:	add    eax,0x31
  426568:	push   eax
  426569:	call   DWORD PTR [ebp-0x20]
  42656c:	test   eax,eax
  42656e:	je     0x4265b2
  426570:	mov    eax,DWORD PTR [ebp-0x8]
  426573:	push   0x19
  426575:	xor    edx,edx
  426577:	pop    ecx
  426578:	div    ecx
  42657a:	add    dl,0x41
  42657d:	movzx  eax,dl
  426580:	push   eax
  426581:	call   DWORD PTR [ebp-0x48]
  426584:	test   eax,eax
  426586:	jne    0x4265b2
  426588:	mov    eax,DWORD PTR [ebp+0x8]
  42658b:	mov    edi,DWORD PTR [eax+0x1e0]
  426591:	mov    esi,DWORD PTR [ebp+0x8]
  426594:	xor    eax,eax
  426596:	lea    edx,[ebp-0x68]
  426599:	call   0x42873f
  42659e:	push   eax
  42659f:	mov    eax,DWORD PTR [ebp+0x8]
  4265a2:	mov    eax,DWORD PTR [eax+0x198]
  4265a8:	push   DWORD PTR [eax]
  4265aa:	call   DWORD PTR [edi+0x8]
  4265ad:	mov    DWORD PTR [ebp-0x14],eax
  4265b0:	jmp    0x4265b6
  4265b2:	and    DWORD PTR [ebp-0x14],0x0
  4265b6:	inc    DWORD PTR [ebp-0x8]
  4265b9:	cmp    DWORD PTR [ebp-0x8],0x10
  4265bd:	jb     0x42655f
  4265bf:	mov    eax,DWORD PTR [ebp-0x18]
  4265c2:	mov    esi,DWORD PTR [ebp+0x8]
  4265c5:	xor    eax,ebx
  4265c7:	mov    edi,0x3272f5
  4265cc:	add    eax,edi
  4265ce:	lea    edx,[ebp-0x10c]
  4265d4:	call   0x42873f
  4265d9:	push   eax
  4265da:	mov    eax,DWORD PTR [ebp-0x10]
  4265dd:	mov    esi,DWORD PTR [ebp+0x8]
  4265e0:	xor    eax,ebx
  4265e2:	add    eax,edi
  4265e4:	lea    edx,[ebp-0x12c]
  4265ea:	call   0x42873f
  4265ef:	push   eax
  4265f0:	call   DWORD PTR [ebp-0x14]
  4265f3:	mov    ecx,DWORD PTR [ebp-0x10]
  4265f6:	xor    ecx,ebx
  4265f8:	add    ecx,edi
  4265fa:	cmp    ecx,eax
  4265fc:	jne    0x426605
  4265fe:	mov    DWORD PTR [ebp-0x34],0x1
  426605:	mov    eax,DWORD PTR [ebp-0x18]
  426608:	mov    ecx,DWORD PTR [ebp-0x1c]
  42660b:	xor    eax,ebx
  42660d:	lea    eax,[eax+ecx*1+0x3272f5]
  426614:	mov    DWORD PTR [ebp-0x1c],eax
  426617:	mov    eax,DWORD PTR [ebp-0x34]
  42661a:	test   eax,eax
  42661c:	je     0x426630
  42661e:	mov    eax,DWORD PTR [ebp-0x18]
  426621:	mov    ecx,DWORD PTR [ebp-0x38]
  426624:	xor    eax,ebx
  426626:	lea    eax,[eax+ecx*1+0x3272f5]
  42662d:	mov    DWORD PTR [ebp-0x38],eax
  426630:	mov    eax,DWORD PTR [ebp-0x18]
  426633:	xor    eax,ebx
  426635:	mov    ecx,0xffcd8d0b
  42663a:	sub    ecx,eax
  42663c:	add    ecx,DWORD PTR [ebp-0x28]
  42663f:	mov    eax,DWORD PTR [ebp-0x1c]
  426642:	cmp    eax,ecx
  426644:	jbe    0x4264a9
  42664a:	mov    esi,edi
  42664c:	mov    eax,DWORD PTR [ebp-0x38]
  42664f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426652:	cmp    ecx,eax
  426654:	jne    0x426667
  426656:	push   DWORD PTR [ebp+0x8]
  426659:	lea    eax,[ebp-0x40]
  42665c:	push   eax
  42665d:	call   0x4291ae
  426662:	mov    DWORD PTR [ebp-0x24],eax
  426665:	jmp    0x426673
  426667:	mov    eax,DWORD PTR [ebp-0x24]
  42666a:	mov    ecx,DWORD PTR [ebp-0x18]
  42666d:	xor    ecx,ebx
  42666f:	add    ecx,esi
  426671:	xor    DWORD PTR [eax],ecx
  426673:	mov    eax,DWORD PTR [ebp-0x10]
  426676:	mov    ecx,DWORD PTR [ebp-0x24]
  426679:	xor    eax,ebx
  42667b:	add    eax,esi
  42667d:	cmp    eax,ecx
  42667f:	je     0x426df7
  426685:	mov    eax,DWORD PTR [ebp-0x10]
  426688:	mov    ecx,DWORD PTR [ebp-0x40]
  42668b:	xor    eax,ebx
  42668d:	add    eax,esi
  42668f:	cmp    eax,ecx
  426691:	je     0x426df7
  426697:	mov    eax,DWORD PTR [ebp-0x10]
  42669a:	xor    eax,ebx
  42669c:	add    eax,esi
  42669e:	jmp    0x4266bc
  4266a0:	mov    edi,DWORD PTR [ebp-0x24]
  4266a3:	mov    cl,al
  4266a5:	and    cl,0x1f
  4266a8:	or     dl,0xff
  4266ab:	sub    dl,cl
  4266ad:	add    BYTE PTR [edi+eax*1],dl
  4266b0:	mov    ecx,DWORD PTR [ebp-0x18]
  4266b3:	xor    ecx,ebx
  4266b5:	lea    eax,[eax+ecx*1+0x3272f5]
  4266bc:	mov    ecx,DWORD PTR [ebp-0x40]
  4266bf:	cmp    eax,ecx
  4266c1:	jb     0x4266a0
  4266c3:	mov    eax,DWORD PTR [ebp-0x40]
  4266c6:	mov    DWORD PTR [ebp-0x28],eax
  4266c9:	mov    eax,DWORD PTR [ebp-0x24]
  4266cc:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4266d3:	mov    DWORD PTR [ebp-0xd4],eax
  4266d9:	mov    edi,0xf89c85a2
  4266de:	mov    DWORD PTR [ebp-0x2c],edi
  4266e1:	mov    eax,DWORD PTR [ebp-0x38]
  4266e4:	xor    eax,ebx
  4266e6:	add    eax,esi
  4266e8:	mov    DWORD PTR [ebp-0xc],eax
  4266eb:	mov    eax,DWORD PTR [ebp-0x38]
  4266ee:	xor    eax,ebx
  4266f0:	add    eax,esi
  4266f2:	mov    DWORD PTR [ebp-0x8],eax
  4266f5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4266fc:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426703:	mov    eax,DWORD PTR [ebp-0x38]
  426706:	mov    ecx,DWORD PTR [ebp-0x28]
  426709:	xor    eax,ebx
  42670b:	add    eax,esi
  42670d:	cmp    ecx,eax
  42670f:	je     0x42690e
  426715:	jmp    0x4268ea
  42671a:	mov    ecx,DWORD PTR [ebp-0xc]
  42671d:	mov    eax,DWORD PTR [ebp-0x28]
  426720:	sub    eax,ecx
  426722:	mov    ecx,DWORD PTR [ebp-0x48]
  426725:	xor    ecx,ebx
  426727:	add    ecx,esi
  426729:	xor    edx,edx
  42672b:	div    ecx
  42672d:	mov    DWORD PTR [ebp-0x8],eax
  426730:	mov    eax,DWORD PTR [ebp-0x4c]
  426733:	mov    ecx,DWORD PTR [ebp-0x8]
  426736:	xor    eax,ebx
  426738:	add    eax,esi
  42673a:	cmp    ecx,eax
  42673c:	jbe    0x426748
  42673e:	mov    eax,DWORD PTR [ebp-0x4c]
  426741:	xor    eax,ebx
  426743:	add    eax,esi
  426745:	mov    DWORD PTR [ebp-0x8],eax
  426748:	mov    eax,DWORD PTR [ebp-0x48]
  42674b:	mov    ecx,DWORD PTR [ebp-0x8]
  42674e:	xor    eax,ebx
  426750:	add    eax,esi
  426752:	imul   eax,ecx
  426755:	mov    DWORD PTR [ebp-0x8],eax
  426758:	mov    eax,DWORD PTR [ebp-0x38]
  42675b:	mov    ecx,DWORD PTR [ebp-0x8]
  42675e:	xor    eax,ebx
  426760:	add    eax,esi
  426762:	cmp    ecx,eax
  426764:	je     0x4268d8
  42676a:	mov    eax,DWORD PTR [ebp-0x8]
  42676d:	mov    DWORD PTR [ebp-0x14],eax
  426770:	mov    eax,DWORD PTR [ebp-0xc]
  426773:	add    eax,DWORD PTR [ebp-0xd4]
  426779:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426780:	mov    DWORD PTR [ebp-0x34],edi
  426783:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42678d:	mov    DWORD PTR [ebp-0x8],eax
  426790:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426797:	mov    DWORD PTR [ebp-0x1c],edi
  42679a:	mov    eax,DWORD PTR [ebp-0x20]
  42679d:	xor    eax,ebx
  42679f:	add    eax,esi
  4267a1:	jmp    0x426897
  4267a6:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  4267b0:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4267ba:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bd:	mov    ecx,DWORD PTR [ebp-0x44]
  4267c0:	xor    eax,ebx
  4267c2:	add    eax,esi
  4267c4:	imul   eax,ecx
  4267c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ca:	mov    al,BYTE PTR [eax+ecx*1]
  4267cd:	mov    BYTE PTR [ebp-0x2],al
  4267d0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267d6:	xor    eax,ebx
  4267d8:	add    eax,esi
  4267da:	imul   eax,ecx
  4267dd:	mov    ecx,DWORD PTR [ebp-0xe8]
  4267e3:	xor    ecx,ebx
  4267e5:	add    eax,ecx
  4267e7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ea:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4267f2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4267f8:	xor    ecx,ebx
  4267fa:	lea    eax,[ecx+eax*1+0x3272f5]
  426801:	movzx  ecx,BYTE PTR [ebp-0x2]
  426805:	xor    ecx,eax
  426807:	mov    BYTE PTR [ebp-0x2],cl
  42680a:	mov    al,BYTE PTR [ebp-0x2]
  42680d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426810:	mov    edx,DWORD PTR [ebp-0x44]
  426813:	xor    ecx,ebx
  426815:	add    ecx,esi
  426817:	imul   ecx,edx
  42681a:	mov    edx,DWORD PTR [ebp-0x8]
  42681d:	mov    BYTE PTR [ecx+edx*1],al
  426820:	mov    eax,DWORD PTR [ebp-0x1c]
  426823:	mov    ecx,DWORD PTR [ebp-0x44]
  426826:	xor    eax,ebx
  426828:	add    eax,esi
  42682a:	imul   eax,ecx
  42682d:	mov    ecx,DWORD PTR [ebp-0x8]
  426830:	mov    al,BYTE PTR [eax+ecx*1]
  426833:	mov    BYTE PTR [ebp-0x2],al
  426836:	mov    eax,DWORD PTR [ebp-0x1c]
  426839:	mov    ecx,DWORD PTR [ebp-0x44]
  42683c:	xor    eax,ebx
  42683e:	add    eax,esi
  426840:	imul   eax,ecx
  426843:	mov    ecx,DWORD PTR [ebp-0x34]
  426846:	xor    ecx,ebx
  426848:	add    eax,ecx
  42684a:	mov    ecx,DWORD PTR [ebp-0x8]
  42684d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426855:	mov    ecx,DWORD PTR [ebp-0xc4]
  42685b:	xor    ecx,ebx
  42685d:	lea    eax,[ecx+eax*1+0x3272f5]
  426864:	movzx  ecx,BYTE PTR [ebp-0x2]
  426868:	xor    ecx,eax
  42686a:	mov    BYTE PTR [ebp-0x2],cl
  42686d:	mov    al,BYTE PTR [ebp-0x2]
  426870:	mov    ecx,DWORD PTR [ebp-0x1c]
  426873:	mov    edx,DWORD PTR [ebp-0x44]
  426876:	xor    ecx,ebx
  426878:	add    ecx,esi
  42687a:	imul   ecx,edx
  42687d:	mov    edx,DWORD PTR [ebp-0x8]
  426880:	mov    BYTE PTR [ecx+edx*1],al
  426883:	mov    eax,DWORD PTR [ebp-0x30]
  426886:	mov    ecx,DWORD PTR [ebp-0x34]
  426889:	xor    eax,ebx
  42688b:	xor    ecx,ebx
  42688d:	add    eax,esi
  42688f:	add    ecx,esi
  426891:	imul   eax,ecx
  426894:	add    eax,DWORD PTR [ebp-0x44]
  426897:	mov    DWORD PTR [ebp-0x44],eax
  42689a:	mov    eax,DWORD PTR [ebp-0x44]
  42689d:	mov    ecx,DWORD PTR [ebp-0x14]
  4268a0:	cmp    ecx,eax
  4268a2:	jb     0x4267a6
  4268a8:	mov    eax,DWORD PTR [ebp-0x34]
  4268ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4268ae:	xor    eax,ebx
  4268b0:	add    eax,esi
  4268b2:	imul   eax,ecx
  4268b5:	mov    ecx,DWORD PTR [ebp-0x20]
  4268b8:	xor    ecx,ebx
  4268ba:	add    ecx,esi
  4268bc:	or     eax,ecx
  4268be:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268c1:	xor    ecx,ebx
  4268c3:	add    eax,ecx
  4268c5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268c8:	xor    ecx,ebx
  4268ca:	add    eax,ecx
  4268cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4268cf:	lea    eax,[eax+ecx*1+0x64e5ea]
  4268d6:	jmp    0x4268e7
  4268d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4268db:	mov    ecx,DWORD PTR [ebp-0xc]
  4268de:	xor    eax,ebx
  4268e0:	lea    eax,[eax+ecx*1+0x3272f5]
  4268e7:	mov    DWORD PTR [ebp-0xc],eax
  4268ea:	mov    eax,DWORD PTR [ebp-0x2c]
  4268ed:	xor    eax,ebx
  4268ef:	mov    ecx,0xffcd8d0b
  4268f4:	sub    ecx,eax
  4268f6:	add    ecx,DWORD PTR [ebp-0x28]
  4268f9:	mov    eax,DWORD PTR [ebp-0x2c]
  4268fc:	mov    edx,DWORD PTR [ebp-0xc]
  4268ff:	xor    eax,ebx
  426901:	add    eax,esi
  426903:	imul   eax,edx
  426906:	cmp    eax,ecx
  426908:	jbe    0x42671a
  42690e:	mov    eax,DWORD PTR [ebp-0x10]
  426911:	mov    ecx,DWORD PTR [ebp-0x40]
  426914:	mov    eax,DWORD PTR [ebp+0x8]
  426917:	mov    edx,DWORD PTR [ebp-0x54]
  42691a:	mov    eax,DWORD PTR [eax+0x1e0]
  426920:	xor    edx,ebx
  426922:	add    edx,esi
  426924:	push   edx
  426925:	mov    edx,DWORD PTR [ebp-0x3c]
  426928:	xor    edx,ebx
  42692a:	add    edx,esi
  42692c:	push   edx
  42692d:	push   ecx
  42692e:	mov    DWORD PTR [ebp-0x30],ecx
  426931:	mov    ecx,DWORD PTR [ebp-0x10]
  426934:	xor    ecx,ebx
  426936:	add    ecx,esi
  426938:	push   ecx
  426939:	call   DWORD PTR [eax+0x14]
  42693c:	mov    edi,eax
  42693e:	mov    eax,DWORD PTR [ebp-0x10]
  426941:	xor    eax,ebx
  426943:	add    eax,esi
  426945:	cmp    eax,edi
  426947:	je     0x4269a2
  426949:	mov    eax,DWORD PTR [ebp-0x10]
  42694c:	jmp    0x42696f
  42694e:	mov    ecx,DWORD PTR [ebp-0x24]
  426951:	xor    eax,ebx
  426953:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42695a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426961:	mov    ecx,DWORD PTR [ebp-0x18]
  426964:	xor    ecx,ebx
  426966:	lea    eax,[ecx+eax*1+0x3272f5]
  42696d:	xor    eax,ebx
  42696f:	mov    ecx,DWORD PTR [ebp-0x40]
  426972:	sub    ecx,esi
  426974:	xor    ecx,ebx
  426976:	cmp    eax,ecx
  426978:	jne    0x42694e
  42697a:	mov    eax,DWORD PTR [ebp+0x8]
  42697d:	mov    ecx,DWORD PTR [ebp-0x50]
  426980:	mov    eax,DWORD PTR [eax+0x1e0]
  426986:	xor    ecx,ebx
  426988:	add    ecx,esi
  42698a:	push   ecx
  42698b:	mov    ecx,DWORD PTR [ebp-0x10]
  42698e:	xor    ecx,ebx
  426990:	add    ecx,esi
  426992:	push   ecx
  426993:	push   DWORD PTR [ebp-0x24]
  426996:	call   DWORD PTR [eax+0x18]
  426999:	mov    eax,DWORD PTR [ebp-0x30]
  42699c:	mov    DWORD PTR [ebp-0x24],edi
  42699f:	mov    DWORD PTR [ebp-0x40],eax
  4269a2:	mov    edi,DWORD PTR [ebp-0x24]
  4269a5:	mov    eax,DWORD PTR [ebp-0x18]
  4269a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4269ab:	xor    eax,ebx
  4269ad:	mov    DWORD PTR [ebp-0x30],edi
  4269b0:	add    eax,esi
  4269b2:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  4269b9:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4269c0:	jmp    0x4269f4
  4269c2:	xor    ecx,ebx
  4269c4:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  4269cb:	xor    dl,0x7e
  4269ce:	add    dl,0x3
  4269d1:	mov    DWORD PTR [ebp-0x3c],ecx
  4269d4:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  4269dc:	movzx  edx,dl
  4269df:	cmp    ecx,edx
  4269e1:	jne    0x4269fe
  4269e3:	mov    ecx,DWORD PTR [ebp-0x18]
  4269e6:	mov    edx,DWORD PTR [ebp-0x3c]
  4269e9:	xor    ecx,ebx
  4269eb:	lea    ecx,[ecx+edx*1+0x3272f5]
  4269f2:	xor    ecx,ebx
  4269f4:	cmp    ecx,0xf89c85bd
  4269fa:	jne    0x4269c2
  4269fc:	jmp    0x426a05
  4269fe:	mov    eax,DWORD PTR [ebp-0x10]
  426a01:	xor    eax,ebx
  426a03:	add    eax,esi
  426a05:	mov    ecx,DWORD PTR [ebp-0x10]
  426a08:	xor    ecx,ebx
  426a0a:	add    ecx,esi
  426a0c:	cmp    ecx,eax
  426a0e:	je     0x426b81
  426a14:	mov    eax,DWORD PTR [edi+0x8]
  426a17:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a1e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a25:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a2c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a33:	mov    DWORD PTR [ebp-0x14],eax
  426a36:	mov    eax,DWORD PTR [ebp+0x8]
  426a39:	mov    ecx,DWORD PTR [ebp-0x20]
  426a3c:	xor    ecx,ebx
  426a3e:	add    ecx,esi
  426a40:	push   ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x48]
  426a44:	mov    eax,DWORD PTR [eax+0x1e0]
  426a4a:	xor    ecx,ebx
  426a4c:	add    ecx,esi
  426a4e:	push   ecx
  426a4f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a52:	xor    ecx,ebx
  426a54:	add    ecx,esi
  426a56:	push   ecx
  426a57:	mov    ecx,DWORD PTR [ebp-0xc]
  426a5a:	xor    ecx,ebx
  426a5c:	add    ecx,esi
  426a5e:	push   ecx
  426a5f:	call   DWORD PTR [eax+0x14]
  426a62:	mov    edi,eax
  426a64:	mov    eax,DWORD PTR [ebp+0x8]
  426a67:	mov    ecx,DWORD PTR [ebp-0x20]
  426a6a:	mov    eax,DWORD PTR [eax+0x1e0]
  426a70:	xor    ecx,ebx
  426a72:	add    ecx,esi
  426a74:	push   ecx
  426a75:	mov    ecx,DWORD PTR [ebp-0x48]
  426a78:	xor    ecx,ebx
  426a7a:	add    ecx,esi
  426a7c:	push   ecx
  426a7d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a80:	push   DWORD PTR [ebp-0x14]
  426a83:	xor    ecx,ebx
  426a85:	add    ecx,esi
  426a87:	push   ecx
  426a88:	call   DWORD PTR [eax+0x14]
  426a8b:	mov    ecx,DWORD PTR [ebp-0xc]
  426a8e:	xor    ecx,ebx
  426a90:	add    ecx,esi
  426a92:	mov    DWORD PTR [ebp-0x20],eax
  426a95:	cmp    ecx,edi
  426a97:	je     0x426e24
  426a9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426aa0:	xor    ecx,ebx
  426aa2:	add    ecx,esi
  426aa4:	cmp    ecx,eax
  426aa6:	je     0x426e24
  426aac:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426ab3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426aba:	mov    ecx,DWORD PTR [ebp-0x3c]
  426abd:	xor    cl,0xae
  426ac0:	sub    cl,0xb
  426ac3:	mov    BYTE PTR [edi],cl
  426ac5:	mov    ecx,DWORD PTR [ebp-0xc]
  426ac8:	xor    cl,0xae
  426acb:	sub    cl,0xb
  426ace:	mov    BYTE PTR [edi+0x1],cl
  426ad1:	mov    ecx,DWORD PTR [ebp-0x54]
  426ad4:	xor    cl,0xae
  426ad7:	sub    cl,0xb
  426ada:	mov    BYTE PTR [edi+0x2],cl
  426add:	and    DWORD PTR [ebp-0xc8],0x0
  426ae4:	and    DWORD PTR [ebp-0xdc],0x0
  426aeb:	lea    ecx,[ebp-0xdc]
  426af1:	push   ecx
  426af2:	push   DWORD PTR [ebp-0x14]
  426af5:	push   eax
  426af6:	lea    eax,[ebp-0xc8]
  426afc:	push   eax
  426afd:	mov    eax,DWORD PTR [ebp-0x30]
  426b00:	push   DWORD PTR [eax+0xc]
  426b03:	mov    eax,DWORD PTR [ebp-0x24]
  426b06:	add    eax,0x10
  426b09:	push   eax
  426b0a:	push   edi
  426b0b:	call   0x425db1
  426b10:	mov    DWORD PTR [ebp-0x3c],eax
  426b13:	mov    eax,DWORD PTR [ebp+0x8]
  426b16:	mov    ecx,DWORD PTR [ebp-0x50]
  426b19:	mov    eax,DWORD PTR [eax+0x1e0]
  426b1f:	xor    ecx,ebx
  426b21:	add    ecx,esi
  426b23:	push   ecx
  426b24:	mov    ecx,DWORD PTR [ebp-0xc]
  426b27:	xor    ecx,ebx
  426b29:	add    ecx,esi
  426b2b:	push   ecx
  426b2c:	push   edi
  426b2d:	call   DWORD PTR [eax+0x18]
  426b30:	mov    eax,DWORD PTR [ebp-0x3c]
  426b33:	add    eax,0xffcd8d0b
  426b38:	xor    eax,ebx
  426b3a:	cmp    eax,0xf89c85a5
  426b3f:	mov    eax,DWORD PTR [ebp+0x8]
  426b42:	mov    eax,DWORD PTR [eax+0x1e0]
  426b48:	mov    ecx,DWORD PTR [ebp-0x50]
  426b4b:	jne    0x426b6e
  426b4d:	xor    ecx,ebx
  426b4f:	add    ecx,esi
  426b51:	push   ecx
  426b52:	mov    ecx,DWORD PTR [ebp-0xc]
  426b55:	xor    ecx,ebx
  426b57:	add    ecx,esi
  426b59:	push   ecx
  426b5a:	push   DWORD PTR [ebp-0x24]
  426b5d:	call   DWORD PTR [eax+0x18]
  426b60:	mov    eax,DWORD PTR [ebp-0x20]
  426b63:	mov    DWORD PTR [ebp-0x24],eax
  426b66:	mov    eax,DWORD PTR [ebp-0x14]
  426b69:	mov    DWORD PTR [ebp-0x40],eax
  426b6c:	jmp    0x426b81
  426b6e:	xor    ecx,ebx
  426b70:	add    ecx,esi
  426b72:	push   ecx
  426b73:	mov    ecx,DWORD PTR [ebp-0xc]
  426b76:	xor    ecx,ebx
  426b78:	add    ecx,esi
  426b7a:	push   ecx
  426b7b:	push   DWORD PTR [ebp-0x20]
  426b7e:	call   DWORD PTR [eax+0x18]
  426b81:	mov    eax,DWORD PTR [ebp-0x40]
  426b84:	mov    DWORD PTR [ebp-0x38],eax
  426b87:	mov    eax,DWORD PTR [ebp-0x24]
  426b8a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426b91:	mov    DWORD PTR [ebp-0x3c],eax
  426b94:	mov    edi,0xf89c85a2
  426b99:	mov    DWORD PTR [ebp-0x2c],edi
  426b9c:	mov    eax,DWORD PTR [ebp-0x28]
  426b9f:	xor    eax,ebx
  426ba1:	add    eax,esi
  426ba3:	mov    DWORD PTR [ebp-0xc],eax
  426ba6:	mov    eax,DWORD PTR [ebp-0x28]
  426ba9:	xor    eax,ebx
  426bab:	add    eax,esi
  426bad:	mov    DWORD PTR [ebp-0x14],eax
  426bb0:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426bb7:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426bbe:	mov    eax,DWORD PTR [ebp-0x28]
  426bc1:	mov    ecx,DWORD PTR [ebp-0x38]
  426bc4:	xor    eax,ebx
  426bc6:	add    eax,esi
  426bc8:	cmp    ecx,eax
  426bca:	je     0x426dc0
  426bd0:	jmp    0x426d9c
  426bd5:	mov    ecx,DWORD PTR [ebp-0xc]
  426bd8:	mov    eax,DWORD PTR [ebp-0x38]
  426bdb:	sub    eax,ecx
  426bdd:	mov    ecx,DWORD PTR [ebp-0x48]
  426be0:	xor    ecx,ebx
  426be2:	add    ecx,esi
  426be4:	xor    edx,edx
  426be6:	div    ecx
  426be8:	mov    DWORD PTR [ebp-0x14],eax
  426beb:	mov    eax,DWORD PTR [ebp-0x20]
  426bee:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf1:	xor    eax,ebx
  426bf3:	add    eax,esi
  426bf5:	cmp    ecx,eax
  426bf7:	jbe    0x426c03
  426bf9:	mov    eax,DWORD PTR [ebp-0x20]
  426bfc:	xor    eax,ebx
  426bfe:	add    eax,esi
  426c00:	mov    DWORD PTR [ebp-0x14],eax
  426c03:	mov    eax,DWORD PTR [ebp-0x48]
  426c06:	mov    ecx,DWORD PTR [ebp-0x14]
  426c09:	xor    eax,ebx
  426c0b:	add    eax,esi
  426c0d:	imul   eax,ecx
  426c10:	mov    DWORD PTR [ebp-0x14],eax
  426c13:	mov    eax,DWORD PTR [ebp-0x28]
  426c16:	mov    ecx,DWORD PTR [ebp-0x14]
  426c19:	xor    eax,ebx
  426c1b:	add    eax,esi
  426c1d:	cmp    ecx,eax
  426c1f:	je     0x426d8a
  426c25:	mov    eax,DWORD PTR [ebp-0x14]
  426c28:	mov    DWORD PTR [ebp-0x34],eax
  426c2b:	mov    eax,DWORD PTR [ebp-0xc]
  426c2e:	add    eax,DWORD PTR [ebp-0x3c]
  426c31:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c38:	mov    DWORD PTR [ebp-0x14],edi
  426c3b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c42:	mov    DWORD PTR [ebp-0x1c],eax
  426c45:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c4c:	mov    DWORD PTR [ebp-0x8],edi
  426c4f:	mov    eax,DWORD PTR [ebp-0x4c]
  426c52:	xor    eax,ebx
  426c54:	add    eax,esi
  426c56:	jmp    0x426d49
  426c5b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c65:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c6f:	mov    eax,DWORD PTR [ebp-0x8]
  426c72:	mov    ecx,DWORD PTR [ebp-0x18]
  426c75:	xor    eax,ebx
  426c77:	add    eax,esi
  426c79:	imul   eax,ecx
  426c7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c7f:	mov    al,BYTE PTR [eax+ecx*1]
  426c82:	mov    BYTE PTR [ebp-0x1],al
  426c85:	mov    eax,DWORD PTR [ebp-0x8]
  426c88:	mov    ecx,DWORD PTR [ebp-0x18]
  426c8b:	xor    eax,ebx
  426c8d:	add    eax,esi
  426c8f:	imul   eax,ecx
  426c92:	mov    ecx,DWORD PTR [ebp-0x54]
  426c95:	xor    ecx,ebx
  426c97:	add    eax,ecx
  426c99:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c9c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426ca4:	mov    ecx,DWORD PTR [ebp-0xe4]
  426caa:	xor    ecx,ebx
  426cac:	lea    eax,[ecx+eax*1+0x3272f5]
  426cb3:	movzx  ecx,BYTE PTR [ebp-0x1]
  426cb7:	xor    ecx,eax
  426cb9:	mov    BYTE PTR [ebp-0x1],cl
  426cbc:	mov    al,BYTE PTR [ebp-0x1]
  426cbf:	mov    ecx,DWORD PTR [ebp-0x8]
  426cc2:	mov    edx,DWORD PTR [ebp-0x18]
  426cc5:	xor    ecx,ebx
  426cc7:	add    ecx,esi
  426cc9:	imul   ecx,edx
  426ccc:	mov    edx,DWORD PTR [ebp-0x1c]
  426ccf:	mov    BYTE PTR [ecx+edx*1],al
  426cd2:	mov    eax,DWORD PTR [ebp-0x8]
  426cd5:	mov    ecx,DWORD PTR [ebp-0x18]
  426cd8:	xor    eax,ebx
  426cda:	add    eax,esi
  426cdc:	imul   eax,ecx
  426cdf:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce2:	mov    al,BYTE PTR [eax+ecx*1]
  426ce5:	mov    BYTE PTR [ebp-0x1],al
  426ce8:	mov    eax,DWORD PTR [ebp-0x8]
  426ceb:	mov    ecx,DWORD PTR [ebp-0x18]
  426cee:	xor    eax,ebx
  426cf0:	add    eax,esi
  426cf2:	imul   eax,ecx
  426cf5:	mov    ecx,DWORD PTR [ebp-0x14]
  426cf8:	xor    ecx,ebx
  426cfa:	add    eax,ecx
  426cfc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cff:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d07:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d0d:	xor    ecx,ebx
  426d0f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d16:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d1a:	xor    ecx,eax
  426d1c:	mov    BYTE PTR [ebp-0x1],cl
  426d1f:	mov    al,BYTE PTR [ebp-0x1]
  426d22:	mov    ecx,DWORD PTR [ebp-0x8]
  426d25:	mov    edx,DWORD PTR [ebp-0x18]
  426d28:	xor    ecx,ebx
  426d2a:	add    ecx,esi
  426d2c:	imul   ecx,edx
  426d2f:	mov    edx,DWORD PTR [ebp-0x1c]
  426d32:	mov    BYTE PTR [ecx+edx*1],al
  426d35:	mov    eax,DWORD PTR [ebp-0x30]
  426d38:	mov    ecx,DWORD PTR [ebp-0x14]
  426d3b:	xor    eax,ebx
  426d3d:	xor    ecx,ebx
  426d3f:	add    eax,esi
  426d41:	add    ecx,esi
  426d43:	imul   eax,ecx
  426d46:	add    eax,DWORD PTR [ebp-0x18]
  426d49:	mov    DWORD PTR [ebp-0x18],eax
  426d4c:	mov    eax,DWORD PTR [ebp-0x18]
  426d4f:	mov    ecx,DWORD PTR [ebp-0x34]
  426d52:	cmp    ecx,eax
  426d54:	jb     0x426c5b
  426d5a:	mov    eax,DWORD PTR [ebp-0x14]
  426d5d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d60:	xor    eax,ebx
  426d62:	add    eax,esi
  426d64:	imul   eax,ecx
  426d67:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d6a:	xor    ecx,ebx
  426d6c:	add    ecx,esi
  426d6e:	or     eax,ecx
  426d70:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d73:	xor    ecx,ebx
  426d75:	add    eax,ecx
  426d77:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d7a:	xor    ecx,ebx
  426d7c:	add    eax,ecx
  426d7e:	mov    ecx,DWORD PTR [ebp-0xc]
  426d81:	lea    eax,[eax+ecx*1+0x64e5ea]
  426d88:	jmp    0x426d99
  426d8a:	mov    eax,DWORD PTR [ebp-0x2c]
  426d8d:	mov    ecx,DWORD PTR [ebp-0xc]
  426d90:	xor    eax,ebx
  426d92:	lea    eax,[eax+ecx*1+0x3272f5]
  426d99:	mov    DWORD PTR [ebp-0xc],eax
  426d9c:	mov    eax,DWORD PTR [ebp-0x2c]
  426d9f:	xor    eax,ebx
  426da1:	mov    ecx,0xffcd8d0b
  426da6:	sub    ecx,eax
  426da8:	add    ecx,DWORD PTR [ebp-0x38]
  426dab:	mov    eax,DWORD PTR [ebp-0x2c]
  426dae:	mov    edx,DWORD PTR [ebp-0xc]
  426db1:	xor    eax,ebx
  426db3:	add    eax,esi
  426db5:	imul   eax,edx
  426db8:	cmp    eax,ecx
  426dba:	jbe    0x426bd5
  426dc0:	push   DWORD PTR [ebp+0x8]
  426dc3:	mov    eax,DWORD PTR [ebp+0x8]
  426dc6:	push   DWORD PTR [eax+0x1cc]
  426dcc:	lea    eax,[ebp-0xd8]
  426dd2:	push   eax
  426dd3:	mov    eax,DWORD PTR [ebp+0x8]
  426dd6:	mov    eax,DWORD PTR [eax+0x1c4]
  426ddc:	push   DWORD PTR [eax]
  426dde:	mov    eax,DWORD PTR [ebp+0x8]
  426de1:	mov    eax,DWORD PTR [eax+0x1c0]
  426de7:	push   DWORD PTR [eax]
  426de9:	push   DWORD PTR [ebp-0x40]
  426dec:	push   DWORD PTR [ebp-0x24]
  426def:	call   0x427886
  426df4:	mov    DWORD PTR [ebp-0x3c],eax
  426df7:	mov    eax,DWORD PTR [ebp-0x10]
  426dfa:	mov    ecx,DWORD PTR [ebp-0x24]
  426dfd:	xor    eax,ebx
  426dff:	add    eax,esi
  426e01:	cmp    eax,ecx
  426e03:	je     0x426e24
  426e05:	mov    eax,DWORD PTR [ebp+0x8]
  426e08:	mov    ecx,DWORD PTR [ebp-0x50]
  426e0b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e11:	xor    ecx,ebx
  426e13:	add    ecx,esi
  426e15:	push   ecx
  426e16:	mov    ecx,DWORD PTR [ebp-0x10]
  426e19:	xor    ecx,ebx
  426e1b:	add    ecx,esi
  426e1d:	push   ecx
  426e1e:	push   DWORD PTR [ebp-0x24]
  426e21:	call   DWORD PTR [eax+0x18]
  426e24:	pop    edi
  426e25:	pop    esi
  426e26:	pop    ebx
  426e27:	leave  
  426e28:	ret    0x4
  426e2b:	push   ebp
  426e2c:	mov    ebp,esp
  426e2e:	push   ecx
  426e2f:	push   ecx
  426e30:	lea    eax,[ebp-0x8]
  426e33:	mov    DWORD PTR [ebp-0x4],eax
  426e36:	push   esi
  426e37:	mov    esi,DWORD PTR [ebp-0x4]
  426e3a:	mov    eax,0xf881ba2f
  426e3f:	mov    DWORD PTR [esi],eax
  426e41:	mov    esi,DWORD PTR [ebp-0x8]
  426e44:	cmp    esi,eax
  426e46:	pop    esi
  426e47:	jne    0x426e51
  426e49:	mov    BYTE PTR [ecx+0xa],0x83
  426e4d:	mov    BYTE PTR [edx+0x8],0x2e
  426e51:	mov    BYTE PTR [edx+0xa],0x83
  426e55:	mov    BYTE PTR [ecx+0x2],0x15
  426e59:	leave  
  426e5a:	ret    
  426e5b:	push   ebp
  426e5c:	mov    ebp,esp
  426e5e:	push   ecx
  426e5f:	push   ecx
  426e60:	lea    eax,[ebp-0x8]
  426e63:	mov    DWORD PTR [ebp-0x4],eax
  426e66:	mov    edx,DWORD PTR [ebp-0x4]
  426e69:	mov    eax,0xf88b0bcb
  426e6e:	mov    DWORD PTR [edx],eax
  426e70:	mov    edx,DWORD PTR [ebp-0x8]
  426e73:	cmp    edx,eax
  426e75:	jne    0x426e86
  426e77:	mov    eax,DWORD PTR [ebp+0x8]
  426e7a:	mov    BYTE PTR [ecx+0x9],0xf
  426e7e:	mov    BYTE PTR [eax+0x7],0x56
  426e82:	mov    BYTE PTR [ecx+0x6],0xe
  426e86:	mov    BYTE PTR [ecx+0x3],0x1f
  426e8a:	leave  
  426e8b:	ret    0x4
  426e8e:	push   ebp
  426e8f:	mov    ebp,esp
  426e91:	push   ecx
  426e92:	push   ecx
  426e93:	lea    eax,[ebp-0x8]
  426e96:	mov    DWORD PTR [ebp-0x4],eax
  426e99:	mov    edx,DWORD PTR [ebp-0x4]
  426e9c:	mov    eax,0x7e0da2f
  426ea1:	mov    DWORD PTR [edx],eax
  426ea3:	mov    edx,DWORD PTR [ebp-0x8]
  426ea6:	cmp    edx,eax
  426ea8:	jne    0x426eae
  426eaa:	mov    BYTE PTR [ecx+0x7],0x56
  426eae:	mov    eax,DWORD PTR [ebp+0x8]
  426eb1:	mov    BYTE PTR [ecx+0x1],0x18
  426eb5:	mov    BYTE PTR [eax+0x9],0x2f
  426eb9:	leave  
  426eba:	ret    0x4
  426ebd:	push   ebp
  426ebe:	mov    ebp,esp
  426ec0:	push   ecx
  426ec1:	push   ecx
  426ec2:	lea    eax,[ebp-0x8]
  426ec5:	mov    DWORD PTR [ebp-0x4],eax
  426ec8:	push   esi
  426ec9:	mov    esi,DWORD PTR [ebp-0x4]
  426ecc:	mov    eax,0x7060e3c
  426ed1:	mov    DWORD PTR [esi],eax
  426ed3:	mov    esi,DWORD PTR [ebp-0x8]
  426ed6:	cmp    esi,eax
  426ed8:	pop    esi
  426ed9:	jne    0x426ee5
  426edb:	mov    BYTE PTR [edx+0x4],0x12
  426edf:	mov    WORD PTR [ecx+0x3],0x121f
  426ee5:	mov    BYTE PTR [edx],0x3e
  426ee8:	leave  
  426ee9:	ret    
  426eea:	push   ebp
  426eeb:	mov    ebp,esp
  426eed:	push   ecx
  426eee:	push   ecx
  426eef:	lea    eax,[ebp-0x8]
  426ef2:	mov    DWORD PTR [ebp-0x4],eax
  426ef5:	mov    edx,DWORD PTR [ebp-0x4]
  426ef8:	mov    eax,0xf8870b3f
  426efd:	mov    DWORD PTR [edx],eax
  426eff:	mov    edx,DWORD PTR [ebp-0x8]
  426f02:	cmp    edx,eax
  426f04:	jne    0x426f11
  426f06:	mov    eax,DWORD PTR [ebp+0x8]
  426f09:	mov    BYTE PTR [ecx+0x8],0xe
  426f0d:	mov    BYTE PTR [eax+0x1],0x18
  426f11:	mov    BYTE PTR [ecx+0x5],0xa
  426f15:	leave  
  426f16:	ret    0x4
  426f19:	push   esi
  426f1a:	mov    ecx,edi
  426f1c:	call   0x426eea
  426f21:	mov    edx,edi
  426f23:	mov    ecx,esi
  426f25:	mov    BYTE PTR [esi],0x1e
  426f28:	call   0x426ebd
  426f2d:	push   esi
  426f2e:	mov    ecx,edi
  426f30:	mov    BYTE PTR [esi+0x5],0xa
  426f34:	call   0x426e8e
  426f39:	push   esi
  426f3a:	mov    BYTE PTR [esi+0x6],0xe
  426f3e:	call   0x426e5b
  426f43:	mov    BYTE PTR [esi+0x2],0x15
  426f47:	mov    edx,esi
  426f49:	jmp    0x426e2b
  426f4e:	push   ebp
  426f4f:	mov    ebp,esp
  426f51:	push   ecx
  426f52:	mov    ecx,DWORD PTR [edx+0x194]
  426f58:	push   esi
  426f59:	mov    esi,DWORD PTR [ebp+0x8]
  426f5c:	mov    esi,DWORD PTR [esi]
  426f5e:	mov    DWORD PTR [ecx],esi
  426f60:	mov    ecx,DWORD PTR [edx+0x194]
  426f66:	mov    ecx,DWORD PTR [ecx]
  426f68:	mov    esi,DWORD PTR [edx+0x190]
  426f6e:	mov    DWORD PTR [esi],ecx
  426f70:	mov    eax,DWORD PTR [edx+0x194]
  426f76:	mov    ecx,DWORD PTR [eax]
  426f78:	mov    ecx,DWORD PTR [ecx+0x3c]
  426f7b:	add    ecx,DWORD PTR [eax]
  426f7d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	movzx  ecx,WORD PTR [ecx+0x16]
  426f8b:	xor    eax,0x75108ae
  426f90:	add    eax,0x3272f5
  426f95:	pop    esi
  426f96:	test   ecx,eax
  426f98:	je     0x426fa6
  426f9a:	mov    eax,DWORD PTR [edx+0x1c8]
  426fa0:	mov    DWORD PTR [eax],0xf89c85a2
  426fa6:	leave  
  426fa7:	ret    0x4
  426faa:	push   ebp
  426fab:	mov    ebp,esp
  426fad:	sub    esp,0x70
  426fb0:	and    DWORD PTR [ebp-0x20],0x0
  426fb4:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426fbb:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426fc2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426fc9:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426fd0:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426fd7:	mov    eax,DWORD PTR [ebp+0x20]
  426fda:	mov    eax,DWORD PTR [eax+0x194]
  426fe0:	mov    DWORD PTR [ebp-0xc],eax
  426fe3:	mov    eax,DWORD PTR [ebp+0x20]
  426fe6:	push   ebx
  426fe7:	push   esi
  426fe8:	mov    esi,DWORD PTR [eax+0x190]
  426fee:	mov    eax,DWORD PTR [ebp+0x20]
  426ff1:	mov    eax,DWORD PTR [eax+0x18c]
  426ff7:	mov    DWORD PTR [ebp-0x8],eax
  426ffa:	mov    eax,DWORD PTR [eax]
  426ffc:	push   edi
  426ffd:	mov    DWORD PTR [ebp-0x4],esi
  427000:	test   eax,eax
  427002:	jne    0x42700f
  427004:	push   DWORD PTR [ebp+0x1c]
  427007:	mov    edx,DWORD PTR [ebp+0x20]
  42700a:	call   0x426f4e
  42700f:	mov    eax,DWORD PTR [esi]
  427011:	mov    ebx,DWORD PTR [esi]
  427013:	add    ebx,DWORD PTR [eax+0x3c]
  427016:	mov    eax,DWORD PTR [ebp+0xc]
  427019:	mov    ecx,DWORD PTR [ebp-0x8]
  42701c:	mov    ecx,DWORD PTR [ecx]
  42701e:	mov    esi,0x75108ae
  427023:	xor    eax,esi
  427025:	mov    edi,0x3272f5
  42702a:	add    eax,edi
  42702c:	cmp    eax,ecx
  42702e:	jne    0x427266
  427034:	mov    eax,DWORD PTR [ebp-0xc]
  427037:	mov    eax,DWORD PTR [eax]
  427039:	mov    DWORD PTR [ebp-0x10],eax
  42703c:	mov    eax,DWORD PTR [ebx+0x50]
  42703f:	mov    DWORD PTR [ebp-0x68],eax
  427042:	mov    eax,DWORD PTR [ebp-0x18]
  427045:	xor    eax,esi
  427047:	add    eax,edi
  427049:	mov    DWORD PTR [ebp-0x64],eax
  42704c:	mov    eax,DWORD PTR [ebp-0x14]
  42704f:	and    DWORD PTR [ebp-0x6c],0x0
  427053:	xor    eax,esi
  427055:	add    eax,edi
  427057:	mov    DWORD PTR [ebp-0x60],eax
  42705a:	lea    eax,[ebp-0x70]
  42705d:	push   eax
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	xor    eax,esi
  427063:	add    eax,edi
  427065:	push   eax
  427066:	mov    eax,DWORD PTR [ebp+0x20]
  427069:	add    eax,0xaa
  42706e:	push   eax
  42706f:	mov    eax,DWORD PTR [ebp+0x20]
  427072:	mov    eax,DWORD PTR [eax+0x198]
  427078:	mov    DWORD PTR [ebp-0x70],0x4
  42707f:	push   DWORD PTR [eax]
  427081:	mov    eax,DWORD PTR [ebp+0x10]
  427084:	call   eax
  427086:	mov    ecx,DWORD PTR [ebp-0xc]
  427089:	mov    ecx,DWORD PTR [ecx]
  42708b:	mov    edx,DWORD PTR [ebp-0x8]
  42708e:	mov    DWORD PTR [ebp-0x6c],eax
  427091:	mov    DWORD PTR [ebp+0x1c],eax
  427094:	mov    DWORD PTR [edx],ecx
  427096:	mov    ecx,DWORD PTR [ebp-0x4]
  427099:	mov    DWORD PTR [ecx],eax
  42709b:	mov    eax,DWORD PTR [ebx+0x50]
  42709e:	mov    DWORD PTR [ebp-0x68],eax
  4270a1:	mov    eax,DWORD PTR [ebp-0x1c]
  4270a4:	xor    eax,esi
  4270a6:	add    eax,edi
  4270a8:	mov    DWORD PTR [ebp-0x64],eax
  4270ab:	lea    eax,[ebp-0x20]
  4270ae:	mov    DWORD PTR [ebp-0x60],eax
  4270b1:	lea    eax,[ebp-0x70]
  4270b4:	push   eax
  4270b5:	mov    eax,DWORD PTR [ebp+0x8]
  4270b8:	xor    eax,esi
  4270ba:	add    eax,edi
  4270bc:	push   eax
  4270bd:	mov    eax,DWORD PTR [ebp+0x20]
  4270c0:	add    eax,0xee
  4270c5:	push   eax
  4270c6:	mov    eax,DWORD PTR [ebp+0x20]
  4270c9:	mov    eax,DWORD PTR [eax+0x198]
  4270cf:	mov    DWORD PTR [ebp-0x70],0x4
  4270d6:	push   DWORD PTR [eax]
  4270d8:	mov    eax,DWORD PTR [ebp+0x10]
  4270db:	call   eax
  4270dd:	test   eax,eax
  4270df:	je     0x427104
  4270e1:	and    DWORD PTR [ebp+0xc],0x0
  4270e5:	cmp    DWORD PTR [ebx+0x50],0x0
  4270e9:	jbe    0x427104
  4270eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4270ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f1:	sub    ecx,eax
  4270f3:	mov    dl,BYTE PTR [ecx+eax*1]
  4270f6:	inc    DWORD PTR [ebp+0xc]
  4270f9:	mov    BYTE PTR [eax],dl
  4270fb:	mov    edx,DWORD PTR [ebp+0xc]
  4270fe:	inc    eax
  4270ff:	cmp    edx,DWORD PTR [ebx+0x50]
  427102:	jb     0x4270f3
  427104:	mov    edx,DWORD PTR [ebp+0x1c]
  427107:	mov    ecx,DWORD PTR [edx+0x3c]
  42710a:	add    ecx,edx
  42710c:	mov    eax,DWORD PTR [ecx+0xa0]
  427112:	mov    ebx,DWORD PTR [ecx+0x28]
  427115:	add    eax,edx
  427117:	sub    edx,DWORD PTR [ebp-0x10]
  42711a:	add    ebx,DWORD PTR [ebp+0x1c]
  42711d:	mov    DWORD PTR [ebp+0xc],edx
  427120:	mov    DWORD PTR [ebp-0x2c],ecx
  427123:	mov    DWORD PTR [ebp-0x14],ebx
  427126:	mov    DWORD PTR [ebp-0x8],0x0
  42712d:	jmp    0x4271a9
  42712f:	add    edx,0xfffffff8
  427132:	shr    edx,1
  427134:	mov    DWORD PTR [ebp-0x18],edx
  427137:	je     0x427195
  427139:	lea    edx,[eax+0x8]
  42713c:	mov    DWORD PTR [ebp-0x4],edx
  42713f:	mov    edx,DWORD PTR [ebp-0x18]
  427142:	mov    DWORD PTR [ebp-0x18],edx
  427145:	mov    edx,DWORD PTR [ebp-0x4]
  427148:	movzx  edx,WORD PTR [edx]
  42714b:	mov    DWORD PTR [ebp-0x24],edx
  42714e:	and    edx,0xfff
  427154:	mov    DWORD PTR [ebp-0x28],edx
  427157:	mov    edx,DWORD PTR [ebp-0x24]
  42715a:	shr    edx,0xc
  42715d:	add    edx,0xffcd8d0b
  427163:	xor    edx,esi
  427165:	cmp    edx,0xf89c85a0
  42716b:	jne    0x42718c
  42716d:	mov    edx,DWORD PTR [ebp-0x28]
  427170:	add    edx,DWORD PTR [ebp+0x1c]
  427173:	mov    ebx,DWORD PTR [eax]
  427175:	cmp    DWORD PTR [ebx+edx*1],0x0
  427179:	je     0x427189
  42717b:	mov    ecx,DWORD PTR [ebp+0xc]
  42717e:	add    ecx,DWORD PTR [ebx+edx*1]
  427181:	mov    ebx,DWORD PTR [eax]
  427183:	mov    DWORD PTR [edx+ebx*1],ecx
  427186:	mov    ecx,DWORD PTR [ebp-0x2c]
  427189:	mov    ebx,DWORD PTR [ebp-0x14]
  42718c:	add    DWORD PTR [ebp-0x4],0x2
  427190:	dec    DWORD PTR [ebp-0x18]
  427193:	jne    0x427145
  427195:	mov    edx,DWORD PTR [ebp-0xc]
  427198:	add    DWORD PTR [ebp-0x8],edx
  42719b:	mov    edx,DWORD PTR [ebp-0x8]
  42719e:	cmp    edx,DWORD PTR [ecx+0xa4]
  4271a4:	jae    0x4271b7
  4271a6:	add    eax,DWORD PTR [ebp-0xc]
  4271a9:	mov    edx,DWORD PTR [eax+0x4]
  4271ac:	mov    DWORD PTR [ebp-0xc],edx
  4271af:	test   edx,edx
  4271b1:	jne    0x42712f
  4271b7:	mov    eax,DWORD PTR [ebp-0x10]
  4271ba:	mov    DWORD PTR [ebp-0x6c],eax
  4271bd:	mov    DWORD PTR [ebp-0x70],0x4
  4271c4:	mov    eax,DWORD PTR [ecx+0x50]
  4271c7:	mov    DWORD PTR [ebp-0x68],eax
  4271ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4271cd:	xor    eax,esi
  4271cf:	add    eax,edi
  4271d1:	mov    DWORD PTR [ebp-0x64],eax
  4271d4:	lea    eax,[ebp-0x20]
  4271d7:	mov    DWORD PTR [ebp-0x60],eax
  4271da:	lea    eax,[ebp-0x70]
  4271dd:	push   eax
  4271de:	mov    eax,DWORD PTR [ebp+0x8]
  4271e1:	xor    eax,esi
  4271e3:	add    eax,edi
  4271e5:	push   eax
  4271e6:	mov    eax,DWORD PTR [ebp+0x20]
  4271e9:	add    eax,0xee
  4271ee:	push   eax
  4271ef:	mov    eax,DWORD PTR [ebp+0x20]
  4271f2:	mov    eax,DWORD PTR [eax+0x198]
  4271f8:	push   DWORD PTR [eax]
  4271fa:	mov    eax,DWORD PTR [ebp+0x10]
  4271fd:	call   eax
  4271ff:	mov    eax,DWORD PTR [ebp+0x20]
  427202:	mov    eax,DWORD PTR [eax+0x180]
  427208:	add    eax,DWORD PTR [ebp+0xc]
  42720b:	mov    ecx,DWORD PTR [ebp+0xc]
  42720e:	push   DWORD PTR [ebp+0x18]
  427211:	mov    DWORD PTR [eax],ecx
  427213:	push   DWORD PTR [ebp+0x14]
  427216:	push   DWORD PTR [ebp+0x1c]
  427219:	call   ebx
  42721b:	mov    ecx,DWORD PTR [ebp+0xc]
  42721e:	add    ecx,DWORD PTR [ebp+0x20]
  427221:	lea    eax,[ebp+0x4]
  427224:	mov    DWORD PTR [ebp+0x20],ecx
  427227:	mov    ecx,DWORD PTR [ebp+0x20]
  42722a:	mov    ecx,DWORD PTR [ebp+0x20]
  42722d:	mov    edx,DWORD PTR [ecx+0x190]
  427233:	mov    ecx,DWORD PTR [ebp+0x20]
  427236:	mov    ecx,DWORD PTR [ecx+0x18c]
  42723c:	mov    esi,DWORD PTR [ecx]
  42723e:	cmp    DWORD PTR [eax],esi
  427240:	jb     0x427261
  427242:	mov    esi,DWORD PTR [edx]
  427244:	mov    edi,DWORD PTR [edx]
  427246:	mov    esi,DWORD PTR [esi+0x3c]
  427249:	lea    esi,[edi+esi*1+0x50]
  42724d:	mov    edi,DWORD PTR [ecx]
  42724f:	add    edi,DWORD PTR [esi]
  427251:	cmp    DWORD PTR [eax],edi
  427253:	jae    0x427261
  427255:	mov    esi,DWORD PTR [ecx]
  427257:	mov    ecx,DWORD PTR [eax]
  427259:	mov    edx,DWORD PTR [edx]
  42725b:	sub    ecx,esi
  42725d:	add    edx,ecx
  42725f:	mov    DWORD PTR [eax],edx
  427261:	mov    eax,DWORD PTR [ebp+0xc]
  427264:	jmp    0x427268
  427266:	xor    eax,eax
  427268:	pop    edi
  427269:	pop    esi
  42726a:	pop    ebx
  42726b:	leave  
  42726c:	ret    0x1c
  42726f:	push   ebp
  427270:	mov    ebp,esp
  427272:	sub    esp,0x1c
  427275:	push   esi
  427276:	mov    esi,eax
  427278:	mov    eax,DWORD PTR [ecx+0x190]
  42727e:	cmp    DWORD PTR [eax],0x0
  427281:	je     0x427391
  427287:	test   edx,edx
  427289:	je     0x427391
  42728f:	test   esi,esi
  427291:	je     0x427391
  427297:	mov    eax,DWORD PTR [esi+0x88]
  42729d:	test   eax,eax
  42729f:	je     0x42738c
  4272a5:	cmp    DWORD PTR [esi+0x8c],0x10
  4272ac:	je     0x42738c
  4272b2:	cmp    DWORD PTR [esi+0x34],edx
  4272b5:	je     0x42738c
  4272bb:	mov    esi,DWORD PTR [ecx+0x18c]
  4272c1:	and    DWORD PTR [ebp-0x10],0x0
  4272c5:	mov    ecx,edx
  4272c7:	sub    ecx,DWORD PTR [esi]
  4272c9:	add    eax,edx
  4272cb:	movzx  edx,WORD PTR [eax+0xc]
  4272cf:	mov    DWORD PTR [ebp-0x1c],ecx
  4272d2:	movzx  ecx,WORD PTR [eax+0xe]
  4272d6:	add    ecx,edx
  4272d8:	je     0x42738c
  4272de:	lea    ecx,[eax+0x14]
  4272e1:	push   ebx
  4272e2:	mov    DWORD PTR [ebp-0x18],ecx
  4272e5:	mov    esi,0x7fffffff
  4272ea:	push   edi
  4272eb:	test   DWORD PTR [ecx],esi
  4272ed:	je     0x42736e
  4272ef:	mov    edx,DWORD PTR [ecx]
  4272f1:	and    DWORD PTR [ebp-0xc],0x0
  4272f5:	and    edx,esi
  4272f7:	add    edx,eax
  4272f9:	movzx  edi,WORD PTR [edx+0xe]
  4272fd:	movzx  ebx,WORD PTR [edx+0xc]
  427301:	add    edi,ebx
  427303:	je     0x42736e
  427305:	lea    ecx,[edx+0x14]
  427308:	mov    DWORD PTR [ebp-0x14],ecx
  42730b:	test   DWORD PTR [ecx],esi
  42730d:	je     0x427350
  42730f:	mov    ecx,DWORD PTR [ecx]
  427311:	and    DWORD PTR [ebp-0x8],0x0
  427315:	and    ecx,esi
  427317:	add    ecx,eax
  427319:	movzx  edi,WORD PTR [ecx+0xe]
  42731d:	movzx  ebx,WORD PTR [ecx+0xc]
  427321:	add    edi,ebx
  427323:	je     0x427350
  427325:	lea    edi,[ecx+0x14]
  427328:	mov    DWORD PTR [ebp-0x4],edi
  42732b:	mov    edi,DWORD PTR [ebp-0x4]
  42732e:	mov    edi,DWORD PTR [edi]
  427330:	test   edi,edi
  427332:	je     0x42733a
  427334:	mov    ebx,DWORD PTR [ebp-0x1c]
  427337:	add    DWORD PTR [edi+eax*1],ebx
  42733a:	movzx  edi,WORD PTR [ecx+0xe]
  42733e:	movzx  ebx,WORD PTR [ecx+0xc]
  427342:	inc    DWORD PTR [ebp-0x8]
  427345:	add    DWORD PTR [ebp-0x4],0x8
  427349:	add    edi,ebx
  42734b:	cmp    DWORD PTR [ebp-0x8],edi
  42734e:	jb     0x42732b
  427350:	movzx  edi,WORD PTR [edx+0xe]
  427354:	movzx  ebx,WORD PTR [edx+0xc]
  427358:	mov    ecx,DWORD PTR [ebp-0x14]
  42735b:	inc    DWORD PTR [ebp-0xc]
  42735e:	add    ecx,0x8
  427361:	add    edi,ebx
  427363:	mov    DWORD PTR [ebp-0x14],ecx
  427366:	cmp    DWORD PTR [ebp-0xc],edi
  427369:	jb     0x42730b
  42736b:	mov    ecx,DWORD PTR [ebp-0x18]
  42736e:	movzx  edx,WORD PTR [eax+0xe]
  427372:	movzx  edi,WORD PTR [eax+0xc]
  427376:	inc    DWORD PTR [ebp-0x10]
  427379:	add    ecx,0x8
  42737c:	add    edx,edi
  42737e:	mov    DWORD PTR [ebp-0x18],ecx
  427381:	cmp    DWORD PTR [ebp-0x10],edx
  427384:	jb     0x4272eb
  42738a:	pop    edi
  42738b:	pop    ebx
  42738c:	xor    eax,eax
  42738e:	inc    eax
  42738f:	jmp    0x427393
  427391:	xor    eax,eax
  427393:	pop    esi
  427394:	leave  
  427395:	ret    
  427396:	push   ebp
  427397:	mov    ebp,esp
  427399:	mov    ecx,DWORD PTR [ecx+0x190]
  42739f:	mov    eax,DWORD PTR [ebp+0xc]
  4273a2:	sub    esp,0x10
  4273a5:	push   ebx
  4273a6:	xor    ebx,ebx
  4273a8:	push   esi
  4273a9:	push   edi
  4273aa:	cmp    DWORD PTR [ecx],ebx
  4273ac:	je     0x427434
  4273b2:	cmp    eax,ebx
  4273b4:	je     0x427434
  4273b6:	cmp    DWORD PTR [eax+0x78],ebx
  4273b9:	jne    0x4273c0
  4273bb:	xor    eax,eax
  4273bd:	inc    eax
  4273be:	jmp    0x427436
  4273c0:	mov    eax,DWORD PTR [eax+0x78]
  4273c3:	add    eax,DWORD PTR [ebp+0x8]
  4273c6:	mov    ecx,DWORD PTR [eax+0x1c]
  4273c9:	mov    edx,DWORD PTR [eax+0x24]
  4273cc:	mov    esi,DWORD PTR [eax+0x14]
  4273cf:	mov    edi,DWORD PTR [eax+0x18]
  4273d2:	add    ecx,DWORD PTR [ebp+0x8]
  4273d5:	add    edx,DWORD PTR [ebp+0x8]
  4273d8:	mov    DWORD PTR [ebp-0x4],esi
  4273db:	cmp    esi,edi
  4273dd:	ja     0x4273e2
  4273df:	mov    DWORD PTR [ebp-0x4],edi
  4273e2:	mov    DWORD PTR [ebp-0x8],ebx
  4273e5:	cmp    DWORD PTR [ebp-0x4],ebx
  4273e8:	jbe    0x4273bb
  4273ea:	cmp    ebx,DWORD PTR [eax+0x14]
  4273ed:	jae    0x4273f5
  4273ef:	movzx  esi,WORD PTR [edx+ebx*2]
  4273f3:	jmp    0x4273f7
  4273f5:	mov    esi,ebx
  4273f7:	lea    esi,[ecx+esi*4]
  4273fa:	mov    edi,DWORD PTR [esi]
  4273fc:	test   edi,edi
  4273fe:	je     0x427429
  427400:	add    edi,DWORD PTR [ebp+0x8]
  427403:	mov    DWORD PTR [ebp-0x10],edi
  427406:	cmp    edi,eax
  427408:	jbe    0x42741a
  42740a:	mov    ebx,DWORD PTR [ebp+0xc]
  42740d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427410:	add    ebx,eax
  427412:	cmp    edi,ebx
  427414:	jae    0x42741a
  427416:	mov    esi,DWORD PTR [esi]
  427418:	jmp    0x427422
  42741a:	sub    edi,DWORD PTR [ebp+0x8]
  42741d:	mov    DWORD PTR [esi],edi
  42741f:	mov    esi,DWORD PTR [ebp-0x10]
  427422:	test   esi,esi
  427424:	je     0x427434
  427426:	mov    ebx,DWORD PTR [ebp-0x8]
  427429:	inc    ebx
  42742a:	mov    DWORD PTR [ebp-0x8],ebx
  42742d:	cmp    ebx,DWORD PTR [ebp-0x4]
  427430:	jb     0x4273ea
  427432:	jmp    0x4273bb
  427434:	xor    eax,eax
  427436:	pop    edi
  427437:	pop    esi
  427438:	pop    ebx
  427439:	leave  
  42743a:	ret    0x8
  42743d:	push   ebp
  42743e:	mov    ebp,esp
  427440:	sub    esp,0x2c
  427443:	mov    edx,0xf89c85a5
  427448:	mov    DWORD PTR [ebp-0x4],edx
  42744b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427452:	mov    eax,DWORD PTR [ebp-0x4]
  427455:	mov    ecx,DWORD PTR [ebp-0x4]
  427458:	mov    ecx,DWORD PTR [ebp-0x4]
  42745b:	mov    ecx,DWORD PTR [ebp-0x4]
  42745e:	mov    ecx,DWORD PTR [ebp-0x4]
  427461:	mov    ecx,DWORD PTR [ebp-0x4]
  427464:	push   ebx
  427465:	mov    ebx,DWORD PTR [ebp+0x10]
  427468:	push   esi
  427469:	mov    esi,0x75108ae
  42746e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427475:	mov    ecx,DWORD PTR [ebp-0x4]
  427478:	mov    ebx,DWORD PTR [ebx+0x190]
  42747e:	push   edi
  42747f:	mov    edi,0x3272f5
  427484:	xor    ecx,esi
  427486:	xor    eax,esi
  427488:	add    eax,edi
  42748a:	add    ecx,edi
  42748c:	mov    DWORD PTR [ebp-0x18],eax
  42748f:	cmp    ecx,DWORD PTR [ebx]
  427491:	je     0x427712
  427497:	mov    ebx,DWORD PTR [ebp-0x4]
  42749a:	mov    ecx,DWORD PTR [ebp+0xc]
  42749d:	xor    ebx,esi
  42749f:	add    ebx,edi
  4274a1:	cmp    ebx,ecx
  4274a3:	je     0x427712
  4274a9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274ac:	mov    ecx,DWORD PTR [ecx+0x80]
  4274b2:	xor    ebx,esi
  4274b4:	add    ebx,edi
  4274b6:	cmp    ecx,ebx
  4274b8:	je     0x42770d
  4274be:	add    ecx,DWORD PTR [ebp+0x8]
  4274c1:	mov    DWORD PTR [ebp-0x2c],ecx
  4274c4:	mov    ebx,edx
  4274c6:	xor    ebx,esi
  4274c8:	add    ebx,edi
  4274ca:	mov    DWORD PTR [ebp-0x10],ebx
  4274cd:	mov    ebx,DWORD PTR [ebp-0x10]
  4274d0:	cmp    ebx,edx
  4274d2:	je     0x4274e6
  4274d4:	mov    edx,DWORD PTR [ebp-0x10]
  4274d7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274da:	imul   edx,edx,0x14
  4274dd:	xor    ebx,esi
  4274df:	add    ebx,edi
  4274e1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4274e4:	jne    0x4274fd
  4274e6:	mov    edx,DWORD PTR [ebp-0x10]
  4274e9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274ec:	imul   edx,edx,0x14
  4274ef:	xor    ebx,esi
  4274f1:	add    ebx,edi
  4274f3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4274f7:	je     0x4276ff
  4274fd:	mov    eax,DWORD PTR [ebp-0x4]
  427500:	mov    ebx,DWORD PTR [ebp-0x4]
  427503:	mov    eax,DWORD PTR [ebp-0x10]
  427506:	imul   eax,eax,0x14
  427509:	add    eax,ecx
  42750b:	mov    ecx,DWORD PTR [eax+0x10]
  42750e:	add    ecx,DWORD PTR [ebp+0x8]
  427511:	xor    ebx,esi
  427513:	mov    DWORD PTR [ebp-0x1c],ecx
  427516:	mov    ecx,DWORD PTR [ebp-0x4]
  427519:	mov    edx,DWORD PTR [ebp-0x4]
  42751c:	xor    ecx,esi
  42751e:	add    ecx,edi
  427520:	xor    edx,esi
  427522:	mov    DWORD PTR [ebp-0x24],ecx
  427525:	mov    ecx,DWORD PTR [eax]
  427527:	add    edx,edi
  427529:	add    ebx,edi
  42752b:	cmp    ecx,edx
  42752d:	je     0x427535
  42752f:	add    ecx,DWORD PTR [ebp+0x8]
  427532:	mov    DWORD PTR [ebp-0x24],ecx
  427535:	mov    ecx,DWORD PTR [ebp-0x4]
  427538:	xor    ecx,esi
  42753a:	add    ecx,DWORD PTR [eax+0xc]
  42753d:	mov    eax,DWORD PTR [ebp+0x8]
  427540:	lea    eax,[ecx+eax*1+0x3272f5]
  427547:	mov    DWORD PTR [ebp+0xc],eax
  42754a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427551:	mov    eax,DWORD PTR [ebp+0x10]
  427554:	push   DWORD PTR [ebp+0xc]
  427557:	mov    eax,DWORD PTR [eax+0x1e0]
  42755d:	call   DWORD PTR [eax]
  42755f:	mov    ecx,DWORD PTR [ebp-0x4]
  427562:	xor    ecx,esi
  427564:	add    ecx,edi
  427566:	mov    DWORD PTR [ebp-0xc],eax
  427569:	cmp    ecx,eax
  42756b:	jne    0x42757f
  42756d:	mov    eax,DWORD PTR [ebp+0x10]
  427570:	push   DWORD PTR [ebp+0xc]
  427573:	mov    eax,DWORD PTR [eax+0x1e0]
  427579:	call   DWORD PTR [eax+0xc]
  42757c:	mov    DWORD PTR [ebp-0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427586:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42758d:	mov    eax,DWORD PTR [ebp-0x4]
  427590:	xor    eax,esi
  427592:	add    eax,edi
  427594:	cmp    eax,DWORD PTR [ebp-0xc]
  427597:	jne    0x4275bc
  427599:	mov    eax,DWORD PTR [ebp-0x8]
  42759c:	mov    ecx,DWORD PTR [ebp-0x20]
  42759f:	xor    eax,esi
  4275a1:	xor    ecx,esi
  4275a3:	lea    ebx,[ebx+eax*1+0x3272f5]
  4275aa:	mov    eax,DWORD PTR [ebp+0x10]
  4275ad:	mov    eax,DWORD PTR [eax+0x1e0]
  4275b3:	add    ecx,edi
  4275b5:	imul   ecx,ebx
  4275b8:	push   ecx
  4275b9:	call   DWORD PTR [eax+0x24]
  4275bc:	mov    eax,DWORD PTR [ebp-0x4]
  4275bf:	xor    eax,esi
  4275c1:	add    eax,edi
  4275c3:	cmp    eax,DWORD PTR [ebp-0xc]
  4275c6:	jne    0x4275d7
  4275c8:	mov    eax,DWORD PTR [ebp-0x28]
  4275cb:	xor    eax,esi
  4275cd:	add    eax,edi
  4275cf:	cmp    ebx,eax
  4275d1:	jbe    0x427551
  4275d7:	mov    eax,DWORD PTR [ebp-0x4]
  4275da:	xor    eax,esi
  4275dc:	add    eax,edi
  4275de:	cmp    eax,DWORD PTR [ebp-0xc]
  4275e1:	jne    0x4275fa
  4275e3:	mov    eax,DWORD PTR [ebp-0x8]
  4275e6:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e9:	xor    eax,esi
  4275eb:	lea    eax,[ecx+eax*1+0x3272f5]
  4275f2:	mov    DWORD PTR [ebp-0x18],eax
  4275f5:	jmp    0x4276e9
  4275fa:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427601:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427608:	mov    ebx,DWORD PTR [ebp-0x4]
  42760b:	xor    ebx,esi
  42760d:	add    ebx,edi
  42760f:	jmp    0x4276d6
  427614:	mov    eax,DWORD PTR [ebp-0x4]
  427617:	xor    eax,esi
  427619:	add    eax,edi
  42761b:	mov    DWORD PTR [ebp-0x14],eax
  42761e:	mov    eax,DWORD PTR [ebp-0x4]
  427621:	xor    eax,esi
  427623:	add    eax,edi
  427625:	mov    DWORD PTR [ebp+0xc],eax
  427628:	mov    ecx,DWORD PTR [ebp-0x4]
  42762b:	mov    eax,DWORD PTR [ebp-0x24]
  42762e:	xor    ecx,esi
  427630:	add    ecx,edi
  427632:	cmp    ecx,eax
  427634:	je     0x42763c
  427636:	mov    eax,DWORD PTR [eax+ebx*4]
  427639:	mov    DWORD PTR [ebp-0x14],eax
  42763c:	mov    eax,DWORD PTR [ebp-0x1c]
  42763f:	mov    eax,DWORD PTR [eax+ebx*4]
  427642:	mov    DWORD PTR [ebp+0xc],eax
  427645:	mov    eax,DWORD PTR [ebp-0x4]
  427648:	mov    ecx,DWORD PTR [ebp-0x14]
  42764b:	xor    eax,esi
  42764d:	add    eax,edi
  42764f:	cmp    eax,ecx
  427651:	je     0x42767c
  427653:	mov    eax,DWORD PTR [ebp-0x4]
  427656:	mov    ecx,DWORD PTR [ebp-0x14]
  427659:	xor    eax,esi
  42765b:	add    eax,edi
  42765d:	shr    ecx,0x1f
  427660:	cmp    eax,ecx
  427662:	je     0x42767c
  427664:	mov    ecx,DWORD PTR [ebp-0x14]
  427667:	mov    eax,DWORD PTR [ebp+0x10]
  42766a:	mov    eax,DWORD PTR [eax+0x1e0]
  427670:	movzx  ecx,cx
  427673:	push   ecx
  427674:	push   DWORD PTR [ebp-0xc]
  427677:	call   DWORD PTR [eax+0x8]
  42767a:	jmp    0x427695
  42767c:	mov    eax,DWORD PTR [ebp+0xc]
  42767f:	add    eax,DWORD PTR [ebp+0x8]
  427682:	mov    ecx,DWORD PTR [ebp+0x10]
  427685:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42768b:	add    eax,0x2
  42768e:	push   eax
  42768f:	push   DWORD PTR [ebp-0xc]
  427692:	call   DWORD PTR [ecx+0x8]
  427695:	mov    DWORD PTR [ebp+0xc],eax
  427698:	mov    eax,DWORD PTR [ebp-0x4]
  42769b:	mov    ecx,DWORD PTR [ebp+0xc]
  42769e:	xor    eax,esi
  4276a0:	add    eax,edi
  4276a2:	cmp    eax,ecx
  4276a4:	mov    eax,DWORD PTR [ebp-0x8]
  4276a7:	jne    0x4276ba
  4276a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ac:	xor    eax,esi
  4276ae:	lea    eax,[ecx+eax*1+0x3272f5]
  4276b5:	mov    DWORD PTR [ebp-0x18],eax
  4276b8:	jmp    0x4276ca
  4276ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4276bd:	xor    eax,esi
  4276bf:	add    eax,edi
  4276c1:	imul   eax,ecx
  4276c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276c7:	mov    DWORD PTR [ecx+ebx*4],eax
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	xor    eax,esi
  4276cf:	lea    ebx,[ebx+eax*1+0x3272f5]
  4276d6:	mov    eax,DWORD PTR [ebp-0x4]
  4276d9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276dc:	xor    eax,esi
  4276de:	add    eax,edi
  4276e0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4276e3:	jne    0x427614
  4276e9:	mov    edx,DWORD PTR [ebp-0x10]
  4276ec:	mov    eax,DWORD PTR [ebp-0x18]
  4276ef:	mov    ecx,DWORD PTR [ebp-0x2c]
  4276f2:	sub    edx,0x3272f4
  4276f8:	xor    edx,esi
  4276fa:	jmp    0x4274c4
  4276ff:	mov    ecx,DWORD PTR [ebp-0x4]
  427702:	xor    ecx,esi
  427704:	add    ecx,edi
  427706:	cmp    eax,ecx
  427708:	mov    eax,DWORD PTR [ebp-0x4]
  42770b:	jne    0x427715
  42770d:	mov    eax,DWORD PTR [ebp-0x8]
  427710:	jmp    0x427715
  427712:	mov    eax,DWORD PTR [ebp-0x4]
  427715:	xor    eax,esi
  427717:	add    eax,edi
  427719:	pop    edi
  42771a:	pop    esi
  42771b:	pop    ebx
  42771c:	leave  
  42771d:	ret    0xc
  427720:	push   ebp
  427721:	mov    ebp,esp
  427723:	sub    esp,0x28
  427726:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42772d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427734:	mov    eax,DWORD PTR [ebp+0xc]
  427737:	mov    DWORD PTR [ebp+0xc],eax
  42773a:	push   esi
  42773b:	mov    eax,eax
  42773d:	mov    eax,DWORD PTR [ebp-0x4]
  427740:	mov    esi,DWORD PTR [ebp+0x8]
  427743:	mov    ecx,0x75108ae
  427748:	xor    eax,ecx
  42774a:	mov    edx,0x3272f5
  42774f:	add    eax,edx
  427751:	cmp    esi,eax
  427753:	je     0x42787a
  427759:	mov    eax,DWORD PTR [ebp+0x8]
  42775c:	mov    esi,DWORD PTR [ebp+0x8]
  42775f:	add    esi,DWORD PTR [eax+0x3c]
  427762:	push   edi
  427763:	mov    DWORD PTR [ebp+0xc],esi
  427766:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42776d:	mov    eax,DWORD PTR [ebp-0x1c]
  427770:	mov    esi,DWORD PTR [ebp-0x4]
  427773:	mov    edi,DWORD PTR [ebp+0xc]
  427776:	xor    esi,ecx
  427778:	xor    eax,ecx
  42777a:	add    esi,edx
  42777c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427783:	je     0x427874
  427789:	mov    esi,DWORD PTR [ebp+0xc]
  42778c:	mov    eax,DWORD PTR [ebp+0x8]
  42778f:	add    eax,DWORD PTR [esi+0xa0]
  427795:	mov    esi,DWORD PTR [ebp+0x8]
  427798:	mov    edi,DWORD PTR [ebp+0xc]
  42779b:	sub    esi,DWORD PTR [edi+0x34]
  42779e:	mov    edi,DWORD PTR [ebp-0x4]
  4277a1:	xor    edi,ecx
  4277a3:	add    edi,edx
  4277a5:	mov    DWORD PTR [ebp-0x24],esi
  4277a8:	cmp    esi,edi
  4277aa:	je     0x427874
  4277b0:	mov    esi,DWORD PTR [ebp-0x4]
  4277b3:	xor    esi,ecx
  4277b5:	add    esi,edx
  4277b7:	mov    DWORD PTR [ebp-0x8],esi
  4277ba:	push   ebx
  4277bb:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  4277c2:	jmp    0x42785e
  4277c7:	mov    esi,DWORD PTR [ebp-0x4]
  4277ca:	xor    esi,ecx
  4277cc:	lea    edi,[ebx-0x8]
  4277cf:	add    esi,edx
  4277d1:	shr    edi,1
  4277d3:	cmp    esi,edi
  4277d5:	jae    0x427844
  4277d7:	sub    edi,esi
  4277d9:	lea    ebx,[eax+esi*2+0x8]
  4277dd:	mov    DWORD PTR [ebp-0x18],edi
  4277e0:	movzx  esi,WORD PTR [ebx]
  4277e3:	and    esi,0xfff
  4277e9:	mov    DWORD PTR [ebp-0x14],esi
  4277ec:	mov    edi,DWORD PTR [ebp-0x14]
  4277ef:	mov    esi,DWORD PTR [eax]
  4277f1:	sub    esi,edx
  4277f3:	add    edi,esi
  4277f5:	movzx  esi,WORD PTR [ebx]
  4277f8:	shr    esi,0xc
  4277fb:	xor    edi,ecx
  4277fd:	mov    DWORD PTR [ebp-0x20],edi
  427800:	mov    DWORD PTR [ebp-0x14],esi
  427803:	mov    esi,DWORD PTR [ebp-0x20]
  427806:	mov    edi,DWORD PTR [ebp+0x8]
  427809:	xor    esi,ecx
  42780b:	lea    esi,[esi+edi*1+0x3272f5]
  427812:	mov    DWORD PTR [ebp-0x20],esi
  427815:	mov    esi,DWORD PTR [ebp-0x10]
  427818:	mov    edi,DWORD PTR [ebp-0x14]
  42781b:	xor    esi,ecx
  42781d:	add    esi,edx
  42781f:	cmp    edi,esi
  427821:	jne    0x427839
  427823:	mov    esi,DWORD PTR [ebp-0x10]
  427826:	mov    edi,DWORD PTR [ebp-0x14]
  427829:	xor    esi,ecx
  42782b:	add    esi,edx
  42782d:	cmp    edi,esi
  42782f:	jne    0x427839
  427831:	mov    esi,DWORD PTR [ebp-0x20]
  427834:	mov    edi,DWORD PTR [ebp-0x24]
  427837:	add    DWORD PTR [esi],edi
  427839:	add    ebx,0x2
  42783c:	dec    DWORD PTR [ebp-0x18]
  42783f:	jne    0x4277e0
  427841:	mov    ebx,DWORD PTR [ebp-0xc]
  427844:	add    DWORD PTR [ebp-0x8],ebx
  427847:	mov    esi,DWORD PTR [ebp-0x1c]
  42784a:	mov    edi,DWORD PTR [ebp-0x8]
  42784d:	mov    ebx,DWORD PTR [ebp+0xc]
  427850:	xor    esi,ecx
  427852:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427859:	jae    0x427873
  42785b:	add    eax,DWORD PTR [ebp-0xc]
  42785e:	mov    esi,DWORD PTR [ebp-0x4]
  427861:	mov    ebx,DWORD PTR [eax+0x4]
  427864:	xor    esi,ecx
  427866:	add    esi,edx
  427868:	mov    DWORD PTR [ebp-0xc],ebx
  42786b:	cmp    ebx,esi
  42786d:	jne    0x4277c7
  427873:	pop    ebx
  427874:	mov    eax,DWORD PTR [ebp-0x28]
  427877:	pop    edi
  427878:	jmp    0x42787d
  42787a:	mov    eax,DWORD PTR [ebp-0x4]
  42787d:	xor    eax,ecx
  42787f:	add    eax,edx
  427881:	pop    esi
  427882:	leave  
  427883:	ret    0x8
  427886:	push   ebp
  427887:	mov    ebp,esp
  427889:	sub    esp,0xd8
  42788f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427896:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42789d:	mov    eax,DWORD PTR [ebp-0x4]
  4278a0:	push   ebx
  4278a1:	push   esi
  4278a2:	mov    esi,0x75108ae
  4278a7:	xor    eax,esi
  4278a9:	push   edi
  4278aa:	mov    edi,0x3272f5
  4278af:	add    eax,edi
  4278b1:	mov    DWORD PTR [ebp-0x18],eax
  4278b4:	mov    eax,DWORD PTR [ebp-0x4]
  4278b7:	xor    eax,esi
  4278b9:	add    eax,edi
  4278bb:	mov    DWORD PTR [ebp-0x8],eax
  4278be:	mov    ebx,DWORD PTR [ebp+0x20]
  4278c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4278c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4278c7:	xor    eax,ecx
  4278c9:	mov    DWORD PTR [ebp-0x1c],eax
  4278cc:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4278d3:	mov    eax,DWORD PTR [ebp-0xc]
  4278d6:	mov    ecx,DWORD PTR [ebp-0xc]
  4278d9:	xor    eax,ecx
  4278db:	mov    DWORD PTR [ebp-0xc],eax
  4278de:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4278e5:	mov    eax,DWORD PTR [ebp-0x10]
  4278e8:	mov    ecx,DWORD PTR [ebp-0x10]
  4278eb:	xor    eax,ecx
  4278ed:	mov    DWORD PTR [ebp-0x10],eax
  4278f0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4278f7:	mov    eax,DWORD PTR [ebp-0x28]
  4278fa:	mov    ecx,DWORD PTR [ebp-0x28]
  4278fd:	xor    eax,ecx
  4278ff:	mov    DWORD PTR [ebp-0x28],eax
  427902:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427909:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427910:	mov    eax,DWORD PTR [ebp+0x8]
  427913:	test   eax,eax
  427915:	je     0x427d9c
  42791b:	mov    eax,DWORD PTR [ebp+0xc]
  42791e:	test   eax,eax
  427920:	je     0x427d9c
  427926:	mov    eax,DWORD PTR [ebp+0x18]
  427929:	test   eax,eax
  42792b:	je     0x427d9c
  427931:	mov    eax,DWORD PTR [ebp+0x20]
  427934:	mov    ecx,DWORD PTR [ebp+0x8]
  427937:	xor    eax,0x8ae
  42793c:	add    eax,0x72f5
  427941:	cmp    WORD PTR [ecx],ax
  427944:	jne    0x427d9c
  42794a:	mov    eax,DWORD PTR [ebp-0x4]
  42794d:	xor    eax,esi
  42794f:	add    eax,edi
  427951:	mov    DWORD PTR [ebp-0x30],eax
  427954:	mov    eax,DWORD PTR [ebp-0x4]
  427957:	mov    ecx,DWORD PTR [ebp+0x8]
  42795a:	mov    eax,DWORD PTR [ebp+0x8]
  42795d:	add    eax,DWORD PTR [ecx+0x3c]
  427960:	mov    DWORD PTR [ebp+0xc],eax
  427963:	mov    eax,DWORD PTR [eax+0x50]
  427966:	test   eax,eax
  427968:	je     0x427d9c
  42796e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427975:	mov    eax,DWORD PTR [ebp-0x2c]
  427978:	xor    eax,esi
  42797a:	add    eax,edi
  42797c:	mov    DWORD PTR [ebp-0x2c],eax
  42797f:	mov    eax,DWORD PTR [ebp-0x4]
  427982:	mov    eax,DWORD PTR [ebx+0x190]
  427988:	mov    ecx,DWORD PTR [eax]
  42798a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42798d:	add    ecx,DWORD PTR [eax]
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	mov    eax,DWORD PTR [ebx+0x18c]
  427998:	mov    edx,DWORD PTR [eax]
  42799a:	mov    DWORD PTR [ebp-0x20],ecx
  42799d:	mov    DWORD PTR [ebp+0x20],edx
  4279a0:	cmp    edx,edx
  4279a2:	jne    0x4279d6
  4279a4:	mov    eax,DWORD PTR [ebx+0x1e0]
  4279aa:	lea    edx,[ebp-0x18]
  4279ad:	push   edx
  4279ae:	mov    edx,DWORD PTR [ebp-0xc]
  4279b1:	xor    edx,esi
  4279b3:	add    edx,edi
  4279b5:	push   edx
  4279b6:	push   DWORD PTR [ecx+0x50]
  4279b9:	push   DWORD PTR [ebp+0x20]
  4279bc:	call   DWORD PTR [eax+0x1c]
  4279bf:	mov    eax,DWORD PTR [ebp-0x20]
  4279c2:	mov    ecx,DWORD PTR [eax+0x54]
  4279c5:	mov    eax,DWORD PTR [eax+0x50]
  4279c8:	sub    eax,ecx
  4279ca:	add    ecx,DWORD PTR [ebp+0x20]
  4279cd:	push   ecx
  4279ce:	call   0x428339
  4279d3:	mov    edx,DWORD PTR [ebp+0x20]
  4279d6:	mov    eax,DWORD PTR [ebx+0x194]
  4279dc:	mov    DWORD PTR [eax],edx
  4279de:	mov    eax,DWORD PTR [ebp+0xc]
  4279e1:	push   DWORD PTR [eax+0x54]
  4279e4:	push   DWORD PTR [ebp+0x8]
  4279e7:	push   edx
  4279e8:	call   0x42822f
  4279ed:	mov    ecx,DWORD PTR [ebp+0x20]
  4279f0:	mov    eax,DWORD PTR [ecx+0x3c]
  4279f3:	add    eax,ecx
  4279f5:	movzx  ecx,WORD PTR [eax+0x14]
  4279f9:	lea    ecx,[ecx+eax*1+0x18]
  4279fd:	mov    DWORD PTR [ebp+0x18],ecx
  427a00:	mov    ecx,DWORD PTR [ebp-0x4]
  427a03:	movzx  edx,WORD PTR [eax+0x6]
  427a07:	xor    ecx,esi
  427a09:	add    ecx,edi
  427a0b:	mov    DWORD PTR [ebp+0xc],eax
  427a0e:	cmp    edx,ecx
  427a10:	je     0x427abd
  427a16:	mov    ecx,DWORD PTR [ebp-0x4]
  427a19:	xor    ecx,esi
  427a1b:	add    ecx,edi
  427a1d:	mov    DWORD PTR [ebp-0x8],ecx
  427a20:	mov    ecx,DWORD PTR [ebp-0x24]
  427a23:	movzx  edx,WORD PTR [eax+0x6]
  427a27:	xor    ecx,esi
  427a29:	sub    edx,ecx
  427a2b:	sub    edx,edi
  427a2d:	cmp    DWORD PTR [ebp-0x8],edx
  427a30:	ja     0x427abd
  427a36:	mov    edx,DWORD PTR [ebp+0x18]
  427a39:	add    edx,0x8
  427a3c:	mov    DWORD PTR [ebp+0x18],edx
  427a3f:	jmp    0x427a44
  427a41:	mov    edx,DWORD PTR [ebp+0x18]
  427a44:	mov    eax,DWORD PTR [eax+0x38]
  427a47:	lea    ecx,[eax-0x1]
  427a4a:	mov    DWORD PTR [ebp-0x38],eax
  427a4d:	mov    eax,DWORD PTR [edx]
  427a4f:	test   eax,ecx
  427a51:	je     0x427a5a
  427a53:	not    ecx
  427a55:	and    eax,ecx
  427a57:	add    eax,DWORD PTR [ebp-0x38]
  427a5a:	mov    ecx,DWORD PTR [edx+0x4]
  427a5d:	add    ecx,DWORD PTR [ebp+0x20]
  427a60:	push   ecx
  427a61:	call   0x428339
  427a66:	mov    edx,DWORD PTR [ebp-0x4]
  427a69:	mov    eax,DWORD PTR [ebp+0x18]
  427a6c:	mov    ecx,DWORD PTR [eax+0x8]
  427a6f:	xor    edx,esi
  427a71:	add    edx,edi
  427a73:	cmp    ecx,edx
  427a75:	je     0x427a8e
  427a77:	push   ecx
  427a78:	mov    ecx,DWORD PTR [ebp+0x8]
  427a7b:	add    ecx,DWORD PTR [eax+0xc]
  427a7e:	mov    eax,DWORD PTR [eax+0x4]
  427a81:	add    eax,DWORD PTR [ebp+0x20]
  427a84:	push   ecx
  427a85:	push   eax
  427a86:	call   0x42822f
  427a8b:	mov    eax,DWORD PTR [ebp+0x18]
  427a8e:	mov    ecx,DWORD PTR [ebp-0x24]
  427a91:	mov    edx,DWORD PTR [ebp-0x8]
  427a94:	add    eax,0x28
  427a97:	xor    ecx,esi
  427a99:	lea    ecx,[edx+ecx*1+0x3272f5]
  427aa0:	mov    edx,DWORD PTR [ebp+0xc]
  427aa3:	mov    DWORD PTR [ebp+0x18],eax
  427aa6:	mov    eax,DWORD PTR [ebp-0x24]
  427aa9:	movzx  edx,WORD PTR [edx+0x6]
  427aad:	xor    eax,esi
  427aaf:	sub    edx,eax
  427ab1:	mov    eax,DWORD PTR [ebp+0xc]
  427ab4:	sub    edx,edi
  427ab6:	mov    DWORD PTR [ebp-0x8],ecx
  427ab9:	cmp    ecx,edx
  427abb:	jbe    0x427a41
  427abd:	mov    edx,DWORD PTR [ebx+0x18c]
  427ac3:	mov    ecx,DWORD PTR [ebp+0x20]
  427ac6:	cmp    ecx,DWORD PTR [edx]
  427ac8:	jne    0x427af1
  427aca:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ad0:	lea    edx,[ebp-0x18]
  427ad3:	push   edx
  427ad4:	mov    edx,DWORD PTR [ebp-0x10]
  427ad7:	xor    edx,esi
  427ad9:	add    edx,edi
  427adb:	push   edx
  427adc:	mov    edx,DWORD PTR [ebp-0x20]
  427adf:	push   DWORD PTR [edx+0x54]
  427ae2:	push   ecx
  427ae3:	call   DWORD PTR [eax+0x1c]
  427ae6:	test   eax,eax
  427ae8:	je     0x427d8d
  427aee:	mov    eax,DWORD PTR [ebp+0xc]
  427af1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427af7:	mov    ecx,DWORD PTR [ecx]
  427af9:	xor    ecx,esi
  427afb:	add    ecx,edi
  427afd:	je     0x427cb8
  427b03:	mov    eax,DWORD PTR [ebp-0x4]
  427b06:	xor    eax,esi
  427b08:	add    eax,edi
  427b0a:	and    DWORD PTR [ebp+0x8],0x0
  427b0e:	mov    DWORD PTR [ebp-0x14],eax
  427b11:	mov    eax,0xf89c85c1
  427b16:	lea    ecx,[eax+0x18]
  427b19:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b20:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b27:	mov    DWORD PTR [ebp-0x50],eax
  427b2a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b2d:	mov    DWORD PTR [ebp-0x48],ecx
  427b30:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b37:	mov    edx,DWORD PTR [ebp+0x8]
  427b3a:	mov    ecx,0x8ae
  427b3f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b44:	mov    edx,0x72f5
  427b49:	add    cx,dx
  427b4c:	mov    edx,DWORD PTR [ebp+0x8]
  427b4f:	inc    DWORD PTR [ebp+0x8]
  427b52:	cmp    DWORD PTR [ebp+0x8],0x6
  427b56:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b5e:	jb     0x427b37
  427b60:	mov    ecx,0xf89c85d3
  427b65:	mov    DWORD PTR [ebp-0xb0],eax
  427b6b:	mov    DWORD PTR [ebp-0x9c],eax
  427b71:	mov    DWORD PTR [ebp-0x74],eax
  427b74:	mov    DWORD PTR [ebp-0x70],eax
  427b77:	lea    eax,[ecx-0x3]
  427b7a:	lea    edx,[ecx+0x2c]
  427b7d:	mov    DWORD PTR [ebp-0x64],eax
  427b80:	mov    DWORD PTR [ebp-0x60],eax
  427b83:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427b8d:	mov    DWORD PTR [ebp-0xac],ecx
  427b93:	mov    DWORD PTR [ebp-0xa8],edx
  427b99:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427ba3:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427bad:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427bb7:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427bc1:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427bcb:	mov    DWORD PTR [ebp-0x8c],ecx
  427bd1:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427bdb:	mov    DWORD PTR [ebp-0x84],edx
  427be1:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427be8:	mov    DWORD PTR [ebp-0x7c],ecx
  427beb:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427bf2:	mov    DWORD PTR [ebp-0x6c],ecx
  427bf5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427bfc:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c03:	xor    eax,eax
  427c05:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c0c:	xor    cl,0xae
  427c0f:	sub    cl,0xb
  427c12:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c19:	inc    eax
  427c1a:	cmp    eax,0x17
  427c1d:	jb     0x427c05
  427c1f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c25:	lea    ecx,[ebp-0xc0]
  427c2b:	push   ecx
  427c2c:	call   DWORD PTR [eax+0x4]
  427c2f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c35:	lea    edx,[ebp-0xd8]
  427c3b:	push   edx
  427c3c:	push   eax
  427c3d:	call   DWORD PTR [ecx+0x8]
  427c40:	mov    DWORD PTR [ebp-0x40],eax
  427c43:	lea    eax,[ebp-0x14]
  427c46:	push   eax
  427c47:	mov    eax,DWORD PTR [ebx+0x18c]
  427c4d:	push   DWORD PTR [eax]
  427c4f:	mov    eax,DWORD PTR [ebp-0x40]
  427c52:	call   eax
  427c54:	mov    eax,DWORD PTR [ebp-0x4]
  427c57:	xor    eax,esi
  427c59:	add    eax,edi
  427c5b:	mov    DWORD PTR [ebp-0x34],eax
  427c5e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c61:	mov    eax,DWORD PTR [ebp-0x14]
  427c64:	xor    ecx,esi
  427c66:	add    ecx,edi
  427c68:	cmp    eax,ecx
  427c6a:	je     0x427cb5
  427c6c:	mov    DWORD PTR [ebp-0x3c],eax
  427c6f:	jmp    0x427c80
  427c71:	mov    eax,DWORD PTR [eax]
  427c73:	mov    ecx,DWORD PTR [ebp-0x3c]
  427c76:	mov    DWORD PTR [ebp-0x14],eax
  427c79:	mov    eax,DWORD PTR [ebp-0x14]
  427c7c:	cmp    eax,ecx
  427c7e:	je     0x427c8d
  427c80:	mov    edx,DWORD PTR [eax+0x18]
  427c83:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c89:	cmp    edx,DWORD PTR [ecx]
  427c8b:	jne    0x427c71
  427c8d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c93:	mov    edx,DWORD PTR [eax+0x18]
  427c96:	cmp    edx,DWORD PTR [ecx]
  427c98:	jne    0x427cb5
  427c9a:	mov    ecx,DWORD PTR [ebx+0x190]
  427ca0:	mov    edx,DWORD PTR [ebp-0x20]
  427ca3:	mov    edx,DWORD PTR [edx+0x28]
  427ca6:	add    edx,DWORD PTR [ecx]
  427ca8:	mov    DWORD PTR [eax+0x1c],edx
  427cab:	mov    eax,DWORD PTR [ebp-0x24]
  427cae:	xor    eax,esi
  427cb0:	add    eax,edi
  427cb2:	mov    DWORD PTR [ebp-0x34],eax
  427cb5:	mov    eax,DWORD PTR [ebp+0xc]
  427cb8:	push   ebx
  427cb9:	push   eax
  427cba:	push   DWORD PTR [ebp+0x20]
  427cbd:	call   0x42743d
  427cc2:	test   eax,eax
  427cc4:	je     0x427d8d
  427cca:	push   DWORD PTR [ebp+0xc]
  427ccd:	mov    ecx,ebx
  427ccf:	push   DWORD PTR [ebp+0x20]
  427cd2:	call   0x427396
  427cd7:	test   eax,eax
  427cd9:	je     0x427d8d
  427cdf:	mov    eax,DWORD PTR [ebp+0xc]
  427ce2:	mov    edx,DWORD PTR [ebp+0x20]
  427ce5:	mov    ecx,ebx
  427ce7:	call   0x42726f
  427cec:	test   eax,eax
  427cee:	je     0x427d8d
  427cf4:	push   ebx
  427cf5:	push   DWORD PTR [ebp+0x20]
  427cf8:	call   0x427720
  427cfd:	test   eax,eax
  427cff:	je     0x427d8d
  427d05:	mov    eax,DWORD PTR [ebx+0x18c]
  427d0b:	mov    edx,DWORD PTR [ebp+0x20]
  427d0e:	cmp    edx,DWORD PTR [eax]
  427d10:	jne    0x427d2c
  427d12:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d18:	lea    ecx,[ebp-0x18]
  427d1b:	push   ecx
  427d1c:	push   DWORD PTR [ebp-0x18]
  427d1f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d22:	push   DWORD PTR [ecx+0x54]
  427d25:	push   edx
  427d26:	call   DWORD PTR [eax+0x1c]
  427d29:	mov    edx,DWORD PTR [ebp+0x20]
  427d2c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d32:	mov    eax,DWORD PTR [eax]
  427d34:	xor    eax,esi
  427d36:	add    eax,edi
  427d38:	je     0x427d71
  427d3a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d3d:	mov    eax,DWORD PTR [ecx+0x28]
  427d40:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d47:	mov    esi,DWORD PTR [ebp+0x8]
  427d4a:	push   DWORD PTR [ebp+0x14]
  427d4d:	xor    esi,0x8ae
  427d53:	push   DWORD PTR [ebp+0x10]
  427d56:	add    esi,0x72f5
  427d5c:	or     WORD PTR [ecx+0x16],si
  427d60:	add    eax,edx
  427d62:	push   edx
  427d63:	call   eax
  427d65:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d6f:	jmp    0x427d7b
  427d71:	mov    eax,DWORD PTR [ebp+0xc]
  427d74:	mov    eax,DWORD PTR [eax+0x28]
  427d77:	add    eax,edx
  427d79:	call   eax
  427d7b:	mov    DWORD PTR [ebp-0x8],eax
  427d7e:	mov    eax,DWORD PTR [ebp-0x8]
  427d81:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d84:	mov    DWORD PTR [ecx],eax
  427d86:	mov    DWORD PTR [ebp-0x30],0x1
  427d8d:	cmp    DWORD PTR [ebp-0x30],0x0
  427d91:	jne    0x427d97
  427d93:	and    DWORD PTR [ebp+0x20],0x0
  427d97:	mov    eax,DWORD PTR [ebp+0x20]
  427d9a:	jmp    0x427d9e
  427d9c:	xor    eax,eax
  427d9e:	pop    edi
  427d9f:	pop    esi
  427da0:	pop    ebx
  427da1:	leave  
  427da2:	ret    0x1c
  427da5:	push   ebp
  427da6:	mov    ebp,esp
  427da8:	movzx  edx,WORD PTR [ecx+0x6]
  427dac:	movzx  eax,WORD PTR [ecx+0x14]
  427db0:	push   ebx
  427db1:	push   edi
  427db2:	xor    edi,edi
  427db4:	lea    eax,[eax+ecx*1+0x18]
  427db8:	test   edx,edx
  427dba:	je     0x427ddb
  427dbc:	mov    ecx,DWORD PTR [eax+0xc]
  427dbf:	lea    ebx,[ecx+esi*1]
  427dc2:	cmp    DWORD PTR [ebp+0x8],ebx
  427dc5:	jb     0x427dd3
  427dc7:	mov    ebx,DWORD PTR [eax+0x8]
  427dca:	add    ebx,ecx
  427dcc:	add    ebx,esi
  427dce:	cmp    DWORD PTR [ebp+0x8],ebx
  427dd1:	jb     0x427ddd
  427dd3:	add    eax,0x28
  427dd6:	inc    edi
  427dd7:	cmp    edi,edx
  427dd9:	jb     0x427dbc
  427ddb:	xor    eax,eax
  427ddd:	pop    edi
  427dde:	pop    ebx
  427ddf:	pop    ebp
  427de0:	ret    0x4
  427de3:	push   ebp
  427de4:	mov    ebp,esp
  427de6:	sub    esp,0x34
  427de9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427df0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427df7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427dfe:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e05:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e0c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e13:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e1a:	mov    DWORD PTR [ebp-0x10],eax
  427e1d:	mov    eax,DWORD PTR [ebp+0x8]
  427e20:	mov    DWORD PTR [ebp-0x14],eax
  427e23:	mov    eax,DWORD PTR [ebp-0xc]
  427e26:	push   ebx
  427e27:	mov    ecx,0x75108ae
  427e2c:	xor    eax,ecx
  427e2e:	push   esi
  427e2f:	mov    esi,DWORD PTR [ebp-0x10]
  427e32:	mov    edx,0x3272f5
  427e37:	add    eax,edx
  427e39:	push   edi
  427e3a:	cmp    esi,eax
  427e3c:	je     0x42801b
  427e42:	mov    eax,DWORD PTR [ebp-0xc]
  427e45:	mov    esi,DWORD PTR [ebp-0x14]
  427e48:	xor    eax,ecx
  427e4a:	add    eax,edx
  427e4c:	cmp    esi,eax
  427e4e:	je     0x42801b
  427e54:	mov    eax,DWORD PTR [ebp-0xc]
  427e57:	xor    eax,ecx
  427e59:	add    eax,edx
  427e5b:	mov    DWORD PTR [ebp-0x24],eax
  427e5e:	mov    eax,DWORD PTR [ebp-0xc]
  427e61:	xor    eax,ecx
  427e63:	add    eax,edx
  427e65:	mov    DWORD PTR [ebp-0x28],eax
  427e68:	mov    edi,DWORD PTR [ebp-0x20]
  427e6b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e6e:	mov    esi,0x8ae
  427e73:	xor    edi,esi
  427e75:	mov    eax,0x72f5
  427e7a:	xor    ebx,esi
  427e7c:	add    edi,eax
  427e7e:	add    ebx,eax
  427e80:	sub    ebx,edi
  427e82:	mov    WORD PTR [ebp-0x8],bx
  427e86:	jmp    0x427f4b
  427e8b:	mov    edi,DWORD PTR [ebp-0xc]
  427e8e:	mov    bx,WORD PTR [ebp-0x4]
  427e92:	xor    edi,esi
  427e94:	add    edi,eax
  427e96:	cmp    bx,di
  427e99:	je     0x427f8d
  427e9f:	mov    edi,DWORD PTR [ebp-0xc]
  427ea2:	mov    ebx,DWORD PTR [ebp+0xc]
  427ea5:	xor    edi,ecx
  427ea7:	add    edi,edx
  427ea9:	cmp    ebx,edi
  427eab:	mov    di,WORD PTR [ebp-0x4]
  427eaf:	mov    bx,WORD PTR [ebp+0x8]
  427eb3:	je     0x427f1e
  427eb5:	cmp    bx,di
  427eb8:	je     0x427f27
  427eba:	mov    edi,DWORD PTR [ebp-0x20]
  427ebd:	mov    bx,WORD PTR [ebp+0x8]
  427ec1:	xor    edi,esi
  427ec3:	add    edi,eax
  427ec5:	cmp    bx,di
  427ec8:	jb     0x427ee8
  427eca:	mov    edi,DWORD PTR [ebp-0x2c]
  427ecd:	mov    bx,WORD PTR [ebp+0x8]
  427ed1:	xor    edi,esi
  427ed3:	add    edi,eax
  427ed5:	cmp    bx,di
  427ed8:	ja     0x427ee8
  427eda:	movzx  edi,WORD PTR [ebp+0x8]
  427ede:	movzx  ebx,WORD PTR [ebp-0x8]
  427ee2:	add    edi,ebx
  427ee4:	mov    WORD PTR [ebp+0x8],di
  427ee8:	mov    edi,DWORD PTR [ebp-0x20]
  427eeb:	mov    bx,WORD PTR [ebp-0x4]
  427eef:	xor    edi,esi
  427ef1:	add    edi,eax
  427ef3:	cmp    bx,di
  427ef6:	jb     0x427f16
  427ef8:	mov    edi,DWORD PTR [ebp-0x2c]
  427efb:	mov    bx,WORD PTR [ebp-0x4]
  427eff:	xor    edi,esi
  427f01:	add    edi,eax
  427f03:	cmp    bx,di
  427f06:	ja     0x427f16
  427f08:	movzx  edi,WORD PTR [ebp-0x4]
  427f0c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f10:	add    edi,ebx
  427f12:	mov    WORD PTR [ebp-0x4],di
  427f16:	mov    di,WORD PTR [ebp-0x4]
  427f1a:	mov    bx,WORD PTR [ebp+0x8]
  427f1e:	cmp    bx,di
  427f21:	jne    0x42801b
  427f27:	mov    edi,DWORD PTR [ebp-0x1c]
  427f2a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f2d:	xor    edi,ecx
  427f2f:	lea    edi,[edi+ebx*1+0x3272f5]
  427f36:	mov    DWORD PTR [ebp-0x10],edi
  427f39:	mov    edi,DWORD PTR [ebp-0x1c]
  427f3c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f3f:	xor    edi,ecx
  427f41:	lea    edi,[edi+ebx*1+0x3272f5]
  427f48:	mov    DWORD PTR [ebp-0x14],edi
  427f4b:	mov    edi,DWORD PTR [ebp-0x24]
  427f4e:	mov    ebx,DWORD PTR [ebp-0x10]
  427f51:	mov    di,WORD PTR [ebx+edi*2]
  427f55:	mov    WORD PTR [ebp+0x8],di
  427f59:	mov    edi,DWORD PTR [ebp-0x28]
  427f5c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f5f:	mov    di,WORD PTR [ebx+edi*2]
  427f63:	mov    WORD PTR [ebp-0x4],di
  427f67:	mov    edi,DWORD PTR [ebp-0xc]
  427f6a:	mov    bx,WORD PTR [ebp+0x8]
  427f6e:	xor    edi,esi
  427f70:	add    edi,eax
  427f72:	cmp    bx,di
  427f75:	jne    0x427e8b
  427f7b:	mov    eax,DWORD PTR [ebp-0x18]
  427f7e:	mov    esi,DWORD PTR [ebp-0xc]
  427f81:	xor    eax,ecx
  427f83:	add    eax,edx
  427f85:	imul   eax,esi
  427f88:	mov    DWORD PTR [ebp-0xc],eax
  427f8b:	jmp    0x427f9f
  427f8d:	mov    eax,DWORD PTR [ebp-0xc]
  427f90:	mov    esi,DWORD PTR [ebp-0x18]
  427f93:	xor    eax,ecx
  427f95:	lea    eax,[eax+esi*1+0x3272f5]
  427f9c:	mov    DWORD PTR [ebp-0x18],eax
  427f9f:	mov    eax,DWORD PTR [ebp-0x24]
  427fa2:	sub    eax,edx
  427fa4:	xor    eax,ecx
  427fa6:	mov    DWORD PTR [ebp-0x30],eax
  427fa9:	mov    eax,DWORD PTR [ebp-0x28]
  427fac:	sub    eax,edx
  427fae:	xor    eax,ecx
  427fb0:	mov    DWORD PTR [ebp-0x34],eax
  427fb3:	mov    eax,DWORD PTR [ebp-0x34]
  427fb6:	mov    esi,DWORD PTR [ebp-0x1c]
  427fb9:	xor    esi,ecx
  427fbb:	add    esi,edx
  427fbd:	xor    eax,ecx
  427fbf:	add    eax,0x3272f5
  427fc4:	imul   esi,eax
  427fc7:	mov    eax,DWORD PTR [ebp-0x14]
  427fca:	movzx  eax,WORD PTR [esi+eax*1]
  427fce:	mov    esi,DWORD PTR [ebp-0x30]
  427fd1:	mov    edi,DWORD PTR [ebp-0x1c]
  427fd4:	xor    esi,ecx
  427fd6:	add    esi,edx
  427fd8:	xor    edi,ecx
  427fda:	add    edi,edx
  427fdc:	imul   edi,esi
  427fdf:	mov    esi,DWORD PTR [ebp-0x10]
  427fe2:	movzx  esi,WORD PTR [edi+esi*1]
  427fe6:	sub    eax,edx
  427fe8:	sub    esi,edx
  427fea:	xor    eax,ecx
  427fec:	xor    esi,ecx
  427fee:	cmp    esi,eax
  427ff0:	jne    0x42801b
  427ff2:	mov    eax,DWORD PTR [ebp-0x30]
  427ff5:	mov    esi,DWORD PTR [ebp-0x1c]
  427ff8:	xor    eax,ecx
  427ffa:	add    eax,0x3272f5
  427fff:	xor    esi,ecx
  428001:	add    esi,edx
  428003:	imul   esi,eax
  428006:	mov    eax,DWORD PTR [ebp-0x10]
  428009:	movzx  eax,WORD PTR [esi+eax*1]
  42800d:	mov    esi,DWORD PTR [ebp-0xc]
  428010:	sub    eax,edx
  428012:	xor    eax,ecx
  428014:	cmp    eax,esi
  428016:	mov    eax,DWORD PTR [ebp-0xc]
  428019:	je     0x42801e
  42801b:	mov    eax,DWORD PTR [ebp-0x18]
  42801e:	pop    edi
  42801f:	xor    eax,ecx
  428021:	pop    esi
  428022:	add    eax,edx
  428024:	pop    ebx
  428025:	leave  
  428026:	ret    0x8
  428029:	push   ebp
  42802a:	mov    ebp,esp
  42802c:	push   ecx
  42802d:	mov    cx,WORD PTR [eax]
  428030:	push   esi
  428031:	mov    esi,0x3b5c
  428036:	sub    cx,si
  428039:	mov    esi,0x8a9a
  42803e:	xor    cx,si
  428041:	mov    esi,0x4e3e
  428046:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42804d:	mov    edx,0xf89c85a5
  428052:	cmp    cx,si
  428055:	je     0x4280b4
  428057:	push   ebx
  428058:	push   edi
  428059:	movzx  ecx,cx
  42805c:	mov    edi,0xffcd8d0b
  428061:	mov    esi,0x75108ae
  428066:	mov    ebx,0x4f9a
  42806b:	cmp    cx,bx
  42806e:	jne    0x428073
  428070:	mov    DWORD PTR [ebp-0x4],edx
  428073:	lea    edx,[edi+0x1]
  428076:	xor    edx,esi
  428078:	mov    edi,edx
  42807a:	xor    edi,esi
  42807c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428084:	mov    ebx,0x3b5c
  428089:	sub    cx,bx
  42808c:	mov    ebx,0x8a9a
  428091:	xor    cx,bx
  428094:	mov    ebx,0x4e3e
  428099:	cmp    cx,bx
  42809c:	jne    0x428066
  42809e:	mov    ecx,DWORD PTR [ebp-0x4]
  4280a1:	pop    edi
  4280a2:	pop    ebx
  4280a3:	cmp    ecx,0xf89c85a4
  4280a9:	je     0x4280b4
  4280ab:	xor    ecx,esi
  4280ad:	lea    eax,[eax+ecx*2+0x64e5ec]
  4280b4:	pop    esi
  4280b5:	leave  
  4280b6:	ret    
  4280b7:	push   ebp
  4280b8:	mov    ebp,esp
  4280ba:	push   ecx
  4280bb:	push   esi
  4280bc:	push   edi
  4280bd:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280c4:	mov    esi,0xf89c85a5
  4280c9:	call   0x428029
  4280ce:	mov    edi,eax
  4280d0:	mov    al,BYTE PTR [edi]
  4280d2:	sub    al,0x3
  4280d4:	xor    al,0x7e
  4280d6:	cmp    al,0x83
  4280d8:	je     0x42813b
  4280da:	mov    eax,edi
  4280dc:	mov    edx,0xffcd8d0b
  4280e1:	mov    ecx,0x75108ae
  4280e6:	push   ebx
  4280e7:	mov    ax,WORD PTR [eax]
  4280ea:	mov    ebx,0x3b5c
  4280ef:	sub    ax,bx
  4280f2:	mov    ebx,0x8a9a
  4280f7:	xor    ax,bx
  4280fa:	mov    ebx,0x4e48
  4280ff:	cmp    ax,bx
  428102:	jne    0x428107
  428104:	mov    DWORD PTR [ebp-0x4],esi
  428107:	lea    esi,[edx+0x1]
  42810a:	xor    esi,ecx
  42810c:	mov    edx,esi
  42810e:	xor    edx,ecx
  428110:	lea    eax,[edi+edx*2+0x64e5ea]
  428117:	mov    bl,BYTE PTR [eax]
  428119:	sub    bl,0x3
  42811c:	xor    bl,0x7e
  42811f:	cmp    bl,0x83
  428122:	jne    0x4280e7
  428124:	mov    eax,DWORD PTR [ebp-0x4]
  428127:	pop    ebx
  428128:	cmp    eax,0xf89c85a4
  42812d:	je     0x42813b
  42812f:	xor    eax,ecx
  428131:	xor    ecx,ecx
  428133:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42813b:	mov    eax,edi
  42813d:	pop    edi
  42813e:	pop    esi
  42813f:	leave  
  428140:	ret    
  428141:	push   ebp
  428142:	mov    ebp,esp
  428144:	push   ecx
  428145:	push   esi
  428146:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42814d:	mov    esi,0xf89c85a5
  428152:	call   0x428029
  428157:	mov    cx,WORD PTR [eax]
  42815a:	mov    edx,0x3b5c
  42815f:	sub    cx,dx
  428162:	mov    edx,0x8a9a
  428167:	xor    cx,dx
  42816a:	mov    edx,0x4e3e
  42816f:	cmp    cx,dx
  428172:	je     0x4281cb
  428174:	push   ebx
  428175:	push   edi
  428176:	movzx  ecx,cx
  428179:	mov    edx,0xffcd8d0b
  42817e:	mov    edi,0x75108ae
  428183:	mov    ebx,0x4e48
  428188:	cmp    cx,bx
  42818b:	jne    0x428190
  42818d:	mov    DWORD PTR [ebp-0x4],esi
  428190:	lea    esi,[edx+0x1]
  428193:	xor    esi,edi
  428195:	mov    edx,esi
  428197:	xor    edx,edi
  428199:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  4281a1:	mov    ebx,0x3b5c
  4281a6:	sub    cx,bx
  4281a9:	mov    ebx,0x8a9a
  4281ae:	xor    cx,bx
  4281b1:	mov    ebx,0x4e3e
  4281b6:	cmp    cx,bx
  4281b9:	jne    0x428183
  4281bb:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  4281c2:	pop    edi
  4281c3:	pop    ebx
  4281c4:	je     0x4281cb
  4281c6:	xor    eax,eax
  4281c8:	inc    eax
  4281c9:	jmp    0x4281cd
  4281cb:	xor    eax,eax
  4281cd:	pop    esi
  4281ce:	leave  
  4281cf:	ret    
  4281d0:	push   ebp
  4281d1:	mov    ebp,esp
  4281d3:	push   ecx
  4281d4:	mov    eax,DWORD PTR [ebp+0x8]
  4281d7:	movzx  ecx,WORD PTR [eax]
  4281da:	push   esi
  4281db:	lea    eax,[ecx-0x3b5c]
  4281e1:	mov    esi,0x8a9a
  4281e6:	push   edi
  4281e7:	xor    eax,esi
  4281e9:	mov    edi,0x4e3e
  4281ee:	mov    DWORD PTR [ebp-0x4],edx
  4281f1:	cmp    ax,di
  4281f4:	je     0x428221
  4281f6:	mov    eax,DWORD PTR [ebp+0x8]
  4281f9:	sub    eax,edx
  4281fb:	mov    DWORD PTR [ebp+0x8],eax
  4281fe:	jmp    0x428203
  428200:	mov    eax,DWORD PTR [ebp+0x8]
  428203:	mov    WORD PTR [edx],cx
  428206:	add    edx,0x2
  428209:	movzx  edi,WORD PTR [eax+edx*1]
  42820d:	mov    ecx,edi
  42820f:	add    edi,0xffffc4a4
  428215:	xor    edi,esi
  428217:	mov    eax,0x4e3e
  42821c:	cmp    di,ax
  42821f:	jne    0x428200
  428221:	xor    eax,eax
  428223:	pop    edi
  428224:	mov    WORD PTR [edx],ax
  428227:	mov    eax,DWORD PTR [ebp-0x4]
  42822a:	pop    esi
  42822b:	leave  
  42822c:	ret    0x4
  42822f:	push   ebp
  428230:	mov    ebp,esp
  428232:	sub    esp,0x18
  428235:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42823c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428243:	mov    ecx,DWORD PTR [ebp-0x8]
  428246:	push   esi
  428247:	mov    eax,0x75108ae
  42824c:	xor    ecx,eax
  42824e:	mov    esi,0x3272f5
  428253:	add    ecx,esi
  428255:	mov    DWORD PTR [ebp-0x4],ecx
  428258:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42825f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428266:	push   edi
  428267:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42826e:	jmp    0x42830f
  428273:	mov    ecx,DWORD PTR [ebp-0x4]
  428276:	mov    edx,DWORD PTR [ebp+0x10]
  428279:	sub    edx,ecx
  42827b:	mov    ecx,DWORD PTR [ebp-0xc]
  42827e:	xor    ecx,eax
  428280:	add    ecx,esi
  428282:	cmp    edx,ecx
  428284:	jbe    0x4282a1
  428286:	mov    edx,DWORD PTR [ebp-0x4]
  428289:	add    edx,DWORD PTR [ebp+0x8]
  42828c:	mov    ecx,DWORD PTR [ebp-0x4]
  42828f:	add    ecx,DWORD PTR [ebp+0xc]
  428292:	mov    edi,DWORD PTR [ecx]
  428294:	mov    DWORD PTR [edx],edi
  428296:	mov    ecx,DWORD PTR [ecx+0x4]
  428299:	mov    DWORD PTR [edx+0x4],ecx
  42829c:	mov    ecx,DWORD PTR [ebp-0xc]
  42829f:	jmp    0x4282ee
  4282a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4282a4:	mov    edx,DWORD PTR [ebp+0x10]
  4282a7:	sub    edx,ecx
  4282a9:	mov    ecx,DWORD PTR [ebp-0x10]
  4282ac:	xor    ecx,eax
  4282ae:	add    ecx,esi
  4282b0:	cmp    edx,ecx
  4282b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4282b5:	jbe    0x4282c9
  4282b7:	add    ecx,DWORD PTR [ebp+0x8]
  4282ba:	mov    edx,DWORD PTR [ebp-0x4]
  4282bd:	add    edx,DWORD PTR [ebp+0xc]
  4282c0:	mov    edx,DWORD PTR [edx]
  4282c2:	mov    DWORD PTR [ecx],edx
  4282c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4282c7:	jmp    0x4282ee
  4282c9:	mov    edx,DWORD PTR [ebp+0x10]
  4282cc:	sub    edx,ecx
  4282ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4282d1:	xor    ecx,eax
  4282d3:	add    ecx,esi
  4282d5:	cmp    edx,ecx
  4282d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4282da:	jbe    0x4282ff
  4282dc:	add    ecx,DWORD PTR [ebp+0x8]
  4282df:	mov    edx,DWORD PTR [ebp-0x4]
  4282e2:	add    edx,DWORD PTR [ebp+0xc]
  4282e5:	mov    dx,WORD PTR [edx]
  4282e8:	mov    WORD PTR [ecx],dx
  4282eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4282ee:	mov    edx,DWORD PTR [ebp-0x4]
  4282f1:	xor    ecx,eax
  4282f3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4282fa:	mov    DWORD PTR [ebp-0x4],ecx
  4282fd:	jmp    0x42830f
  4282ff:	add    ecx,DWORD PTR [ebp+0x8]
  428302:	mov    edx,DWORD PTR [ebp-0x4]
  428305:	add    edx,DWORD PTR [ebp+0xc]
  428308:	mov    dl,BYTE PTR [edx]
  42830a:	mov    BYTE PTR [ecx],dl
  42830c:	inc    DWORD PTR [ebp-0x4]
  42830f:	mov    ecx,DWORD PTR [ebp-0x18]
  428312:	mov    edx,DWORD PTR [ebp+0x10]
  428315:	xor    ecx,eax
  428317:	add    ecx,esi
  428319:	imul   ecx,edx
  42831c:	mov    edx,DWORD PTR [ebp-0x8]
  42831f:	mov    edi,DWORD PTR [ebp-0x4]
  428322:	xor    edx,eax
  428324:	lea    edx,[edx+edi*1+0x3272f5]
  42832b:	cmp    edx,ecx
  42832d:	jb     0x428273
  428333:	pop    edi
  428334:	pop    esi
  428335:	leave  
  428336:	ret    0xc
  428339:	push   ebp
  42833a:	mov    ebp,esp
  42833c:	sub    esp,0xc
  42833f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428346:	push   esi
  428347:	mov    esi,eax
  428349:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428350:	mov    edx,DWORD PTR [ebp-0x4]
  428353:	mov    eax,0x75108ae
  428358:	xor    edx,eax
  42835a:	mov    ecx,0x3272f5
  42835f:	add    edx,ecx
  428361:	cmp    esi,edx
  428363:	je     0x4283a5
  428365:	push   ebx
  428366:	push   edi
  428367:	mov    edx,DWORD PTR [ebp-0x8]
  42836a:	mov    ebx,DWORD PTR [ebp+0x8]
  42836d:	xor    edx,eax
  42836f:	mov    edi,0xffcd8d0b
  428374:	sub    edi,edx
  428376:	add    esi,edi
  428378:	lea    edx,[esi-0x3272f5]
  42837e:	xor    edx,eax
  428380:	mov    DWORD PTR [ebp-0xc],edx
  428383:	mov    edx,DWORD PTR [ebp-0x4]
  428386:	mov    edi,DWORD PTR [ebp-0xc]
  428389:	xor    dl,0xae
  42838c:	sub    dl,0xb
  42838f:	xor    edi,eax
  428391:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428398:	mov    edx,DWORD PTR [ebp-0x4]
  42839b:	xor    edx,eax
  42839d:	add    edx,ecx
  42839f:	cmp    esi,edx
  4283a1:	jne    0x428367
  4283a3:	pop    edi
  4283a4:	pop    ebx
  4283a5:	pop    esi
  4283a6:	leave  
  4283a7:	ret    0x4
  4283aa:	push   ebp
  4283ab:	mov    ebp,esp
  4283ad:	sub    esp,0x21c
  4283b3:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283ba:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  4283c1:	mov    eax,DWORD PTR [ebp+0x10]
  4283c4:	mov    eax,DWORD PTR [ebp-0x4]
  4283c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4283ca:	push   esi
  4283cb:	push   edi
  4283cc:	mov    edi,0x75108ae
  4283d1:	xor    eax,edi
  4283d3:	mov    esi,0x3272f5
  4283d8:	add    eax,esi
  4283da:	cmp    eax,ecx
  4283dc:	mov    eax,DWORD PTR [ebp-0x4]
  4283df:	jne    0x4283ea
  4283e1:	xor    eax,edi
  4283e3:	add    eax,esi
  4283e5:	jmp    0x428496
  4283ea:	mov    ecx,DWORD PTR [ebp+0xc]
  4283ed:	xor    eax,edi
  4283ef:	add    eax,esi
  4283f1:	cmp    eax,ecx
  4283f3:	jne    0x4283fa
  4283f5:	mov    eax,DWORD PTR [ebp-0x4]
  4283f8:	jmp    0x4283e1
  4283fa:	lea    eax,[ebp-0x21c]
  428400:	mov    DWORD PTR [ebp-0x8],eax
  428403:	mov    eax,DWORD PTR [ebp+0xc]
  428406:	mov    DWORD PTR [ebp-0x10],eax
  428409:	mov    eax,DWORD PTR [ebp-0x4]
  42840c:	xor    eax,edi
  42840e:	add    eax,esi
  428410:	mov    DWORD PTR [ebp+0x10],eax
  428413:	mov    eax,DWORD PTR [ebp+0xc]
  428416:	push   ebx
  428417:	call   0x428141
  42841c:	mov    ebx,eax
  42841e:	mov    eax,DWORD PTR [ebp+0x8]
  428421:	mov    eax,DWORD PTR [eax+0x14]
  428424:	jmp    0x42847e
  428426:	mov    eax,DWORD PTR [ebp+0xc]
  428429:	sub    eax,0x8
  42842c:	mov    DWORD PTR [ebp-0xc],eax
  42842f:	mov    eax,DWORD PTR [ebp-0xc]
  428432:	mov    eax,DWORD PTR [eax+0x28]
  428435:	call   0x428029
  42843a:	mov    DWORD PTR [ebp+0x10],eax
  42843d:	push   DWORD PTR [ebp+0x10]
  428440:	mov    edx,DWORD PTR [ebp-0x8]
  428443:	call   0x4281d0
  428448:	mov    eax,DWORD PTR [ebp-0x4]
  42844b:	xor    eax,edi
  42844d:	add    eax,esi
  42844f:	cmp    eax,ebx
  428451:	jne    0x42845b
  428453:	mov    eax,DWORD PTR [ebp-0x8]
  428456:	call   0x4280b7
  42845b:	mov    eax,DWORD PTR [ebp-0x14]
  42845e:	xor    eax,edi
  428460:	add    eax,esi
  428462:	push   eax
  428463:	push   DWORD PTR [ebp-0x10]
  428466:	mov    eax,DWORD PTR [ebp-0x8]
  428469:	call   0x427de3
  42846e:	mov    ecx,DWORD PTR [ebp-0x4]
  428471:	xor    ecx,edi
  428473:	add    ecx,esi
  428475:	cmp    eax,ecx
  428477:	je     0x42849c
  428479:	mov    eax,DWORD PTR [ebp+0xc]
  42847c:	mov    eax,DWORD PTR [eax]
  42847e:	mov    DWORD PTR [ebp+0xc],eax
  428481:	mov    eax,DWORD PTR [ebp+0x8]
  428484:	mov    ecx,DWORD PTR [ebp+0xc]
  428487:	add    eax,0x14
  42848a:	cmp    ecx,eax
  42848c:	jne    0x428426
  42848e:	mov    eax,DWORD PTR [ebp-0x4]
  428491:	xor    eax,edi
  428493:	add    eax,esi
  428495:	pop    ebx
  428496:	pop    edi
  428497:	pop    esi
  428498:	leave  
  428499:	ret    0xc
  42849c:	mov    eax,DWORD PTR [ebp-0xc]
  42849f:	mov    eax,DWORD PTR [eax+0x18]
  4284a2:	jmp    0x428495
  4284a4:	push   ebp
  4284a5:	mov    ebp,esp
  4284a7:	mov    eax,DWORD PTR [ebp+0xc]
  4284aa:	sub    esp,0x10
  4284ad:	cmp    DWORD PTR [ebp+0x8],0x0
  4284b1:	push   ebx
  4284b2:	push   esi
  4284b3:	push   edi
  4284b4:	je     0x428569
  4284ba:	test   eax,eax
  4284bc:	je     0x428569
  4284c2:	movzx  eax,WORD PTR [eax+0x20]
  4284c6:	mov    ecx,eax
  4284c8:	mov    DWORD PTR [ebp-0x10],eax
  4284cb:	xor    edx,edx
  4284cd:	and    DWORD PTR [ebp-0x8],edx
  4284d0:	mov    eax,0x8a9a
  4284d5:	xor    ecx,eax
  4284d7:	add    ecx,0x3b5c
  4284dd:	mov    DWORD PTR [ebp-0xc],ecx
  4284e0:	and    DWORD PTR [ebp-0x4],0x0
  4284e4:	xor    ecx,ecx
  4284e6:	push   0xffffff81
  4284e8:	pop    edi
  4284e9:	cmp    cx,WORD PTR [ebp-0xc]
  4284ed:	jae    0x428553
  4284ef:	lea    esi,[edx-0x3b5c]
  4284f5:	xor    esi,eax
  4284f7:	movzx  ecx,WORD PTR [ebp-0x4]
  4284fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4284fe:	lea    ecx,[ebx+ecx*4]
  428501:	cmp    WORD PTR [ecx+0x2],si
  428505:	jne    0x42853e
  428507:	movzx  ecx,WORD PTR [ecx]
  42850a:	mov    edi,0x4e3e
  42850f:	cmp    cx,di
  428512:	jne    0x428520
  428514:	mov    ebx,DWORD PTR [ebp+0x8]
  428517:	movzx  edi,dx
  42851a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42851e:	je     0x42854d
  428520:	mov    ebx,DWORD PTR [ebp+0x8]
  428523:	movzx  edi,dx
  428526:	movsx  di,BYTE PTR [edi+ebx*1]
  42852b:	mov    ebx,0x3b5c
  428530:	sub    di,bx
  428533:	xor    di,ax
  428536:	cmp    cx,di
  428539:	je     0x42854d
  42853b:	push   0xffffff83
  42853d:	pop    edi
  42853e:	inc    DWORD PTR [ebp-0x4]
  428541:	mov    cx,WORD PTR [ebp-0xc]
  428545:	cmp    WORD PTR [ebp-0x4],cx
  428549:	jb     0x4284f7
  42854b:	jmp    0x428553
  42854d:	inc    DWORD PTR [ebp-0x8]
  428550:	push   0xffffff80
  428552:	pop    edi
  428553:	mov    esi,DWORD PTR [ebp+0x8]
  428556:	movzx  ecx,dx
  428559:	cmp    BYTE PTR [ecx+esi*1],0x0
  42855d:	je     0x428572
  42855f:	inc    edx
  428560:	cmp    edi,0xffffff83
  428563:	jne    0x4284e0
  428569:	xor    eax,eax
  42856b:	pop    edi
  42856c:	pop    esi
  42856d:	pop    ebx
  42856e:	leave  
  42856f:	ret    0x8
  428572:	mov    ecx,DWORD PTR [ebp-0x8]
  428575:	add    ecx,0xffffc4a4
  42857b:	xor    cx,ax
  42857e:	xor    eax,eax
  428580:	cmp    cx,WORD PTR [ebp-0x10]
  428584:	sete   al
  428587:	jmp    0x42856b
  428589:	push   ebp
  42858a:	mov    ebp,esp
  42858c:	sub    esp,0x50
  42858f:	push   edi
  428590:	mov    edi,eax
  428592:	mov    eax,DWORD PTR [edi+0x1a8]
  428598:	cmp    DWORD PTR [eax],0x0
  42859b:	jne    0x4285a4
  42859d:	xor    eax,eax
  42859f:	jmp    0x4286d5
  4285a4:	push   DWORD PTR [ebp+0x8]
  4285a7:	push   0x2c
  4285a9:	pop    eax
  4285aa:	call   0x428339
  4285af:	mov    edx,DWORD PTR [edi+0x1ac]
  4285b5:	lea    eax,[edi+0x22]
  4285b8:	mov    DWORD PTR [ebp-0x4c],eax
  4285bb:	lea    eax,[edi+0x44]
  4285be:	mov    DWORD PTR [ebp-0x48],eax
  4285c1:	lea    eax,[edi+0x66]
  4285c4:	mov    DWORD PTR [ebp-0x44],eax
  4285c7:	lea    eax,[edi+0x88]
  4285cd:	mov    DWORD PTR [ebp-0x40],eax
  4285d0:	lea    eax,[edi+0xaa]
  4285d6:	mov    DWORD PTR [ebp-0x3c],eax
  4285d9:	lea    eax,[edi+0xcc]
  4285df:	mov    DWORD PTR [ebp-0x38],eax
  4285e2:	lea    eax,[edi+0xee]
  4285e8:	mov    DWORD PTR [ebp-0x34],eax
  4285eb:	lea    eax,[edi+0x110]
  4285f1:	mov    DWORD PTR [ebp-0x30],eax
  4285f4:	lea    eax,[edi+0x132]
  4285fa:	mov    DWORD PTR [ebp-0x2c],eax
  4285fd:	lea    eax,[edi+0x154]
  428603:	push   edi
  428604:	mov    DWORD PTR [ebp-0x50],edi
  428607:	mov    DWORD PTR [ebp-0x28],eax
  42860a:	call   0x428709
  42860f:	push   eax
  428610:	mov    eax,DWORD PTR [edi+0x1a8]
  428616:	push   DWORD PTR [eax]
  428618:	call   0x4283aa
  42861d:	mov    DWORD PTR [ebp-0x10],eax
  428620:	test   eax,eax
  428622:	je     0x4286d5
  428628:	mov    ecx,DWORD PTR [eax+0x3c]
  42862b:	push   ebx
  42862c:	push   esi
  42862d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428631:	add    esi,eax
  428633:	mov    edi,DWORD PTR [esi+0x24]
  428636:	mov    ecx,DWORD PTR [esi+0x1c]
  428639:	mov    edx,DWORD PTR [esi+0x20]
  42863c:	mov    ebx,DWORD PTR [esi+0x18]
  42863f:	add    edi,eax
  428641:	mov    DWORD PTR [ebp-0x20],edi
  428644:	mov    edi,DWORD PTR [esi+0x14]
  428647:	add    ecx,eax
  428649:	add    edx,eax
  42864b:	mov    DWORD PTR [ebp-0xc],ecx
  42864e:	mov    DWORD PTR [ebp-0x1c],edx
  428651:	mov    DWORD PTR [ebp-0x8],edi
  428654:	cmp    edi,ebx
  428656:	ja     0x42865b
  428658:	mov    DWORD PTR [ebp-0x8],ebx
  42865b:	xor    ebx,ebx
  42865d:	mov    DWORD PTR [ebp-0x18],ebx
  428660:	cmp    DWORD PTR [ebp-0x8],ebx
  428663:	jbe    0x4286d3
  428665:	jmp    0x42866a
  428667:	mov    edx,DWORD PTR [ebp-0x1c]
  42866a:	mov    edi,DWORD PTR [ebp-0x20]
  42866d:	movzx  edi,WORD PTR [edi+ebx*2]
  428671:	cmp    ebx,DWORD PTR [esi+0x18]
  428674:	jae    0x4286d3
  428676:	cmp    edi,DWORD PTR [esi+0x14]
  428679:	jae    0x4286d3
  42867b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42867e:	mov    edx,DWORD PTR [ebp+0x8]
  428681:	mov    edi,DWORD PTR [ecx+edi*4]
  428684:	mov    DWORD PTR [ebp-0x4],edx
  428687:	lea    edx,[ebp-0x50]
  42868a:	add    ebx,eax
  42868c:	add    edi,eax
  42868e:	sub    edx,DWORD PTR [ebp+0x8]
  428691:	mov    DWORD PTR [ebp-0x14],0xb
  428698:	mov    DWORD PTR [ebp-0x24],edx
  42869b:	mov    edx,DWORD PTR [ebp-0x4]
  42869e:	cmp    DWORD PTR [edx],0x0
  4286a1:	jne    0x4286be
  4286a3:	mov    eax,DWORD PTR [ebp-0x24]
  4286a6:	push   DWORD PTR [eax+edx*1]
  4286a9:	push   ebx
  4286aa:	call   0x4284a4
  4286af:	mov    ecx,DWORD PTR [ebp-0xc]
  4286b2:	test   eax,eax
  4286b4:	je     0x4286bb
  4286b6:	mov    eax,DWORD PTR [ebp-0x4]
  4286b9:	mov    DWORD PTR [eax],edi
  4286bb:	mov    eax,DWORD PTR [ebp-0x10]
  4286be:	add    DWORD PTR [ebp-0x4],0x4
  4286c2:	dec    DWORD PTR [ebp-0x14]
  4286c5:	jne    0x42869b
  4286c7:	mov    ebx,DWORD PTR [ebp-0x18]
  4286ca:	inc    ebx
  4286cb:	mov    DWORD PTR [ebp-0x18],ebx
  4286ce:	cmp    ebx,DWORD PTR [ebp-0x8]
  4286d1:	jb     0x428667
  4286d3:	pop    esi
  4286d4:	pop    ebx
  4286d5:	pop    edi
  4286d6:	leave  
  4286d7:	ret    0x4
  4286da:	push   ebp
  4286db:	mov    ebp,esp
  4286dd:	mov    eax,DWORD PTR [ebp+0x8]
  4286e0:	push   esi
  4286e1:	push   DWORD PTR [eax+0x1e0]
  4286e7:	lea    esi,[eax+0x198]
  4286ed:	mov    eax,DWORD PTR [ebp+0x8]
  4286f0:	call   0x428589
  4286f5:	mov    ecx,DWORD PTR [esi]
  4286f7:	mov    DWORD PTR [ecx],eax
  4286f9:	mov    eax,DWORD PTR [esi]
  4286fb:	xor    ecx,ecx
  4286fd:	cmp    DWORD PTR [eax],ecx
  4286ff:	pop    esi
  428700:	setne  cl
  428703:	mov    eax,ecx
  428705:	pop    ebp
  428706:	ret    0x4
  428709:	mov    ecx,DWORD PTR [edi+0x188]
  42870f:	push   ebx
  428710:	jmp    0x428725
  428712:	xor    eax,0x8a9a
  428717:	add    eax,0x3b5c
  42871c:	mov    WORD PTR [ecx],ax
  42871f:	add    ecx,0x2
  428722:	add    edx,0x2
  428725:	movzx  eax,WORD PTR [edx]
  428728:	mov    ebx,0x4e3e
  42872d:	cmp    ax,bx
  428730:	jne    0x428712
  428732:	xor    eax,eax
  428734:	mov    WORD PTR [ecx],ax
  428737:	mov    eax,DWORD PTR [edi+0x188]
  42873d:	pop    ebx
  42873e:	ret    
  42873f:	push   edi
  428740:	mov    edi,eax
  428742:	mov    eax,DWORD PTR [esi+0x188]
  428748:	shl    edi,0x6
  42874b:	add    eax,edi
  42874d:	jmp    0x428759
  42874f:	xor    cl,0x7e
  428752:	add    cl,0x3
  428755:	mov    BYTE PTR [eax],cl
  428757:	inc    eax
  428758:	inc    edx
  428759:	mov    cl,BYTE PTR [edx]
  42875b:	cmp    cl,0x83
  42875e:	jne    0x42874f
  428760:	mov    BYTE PTR [eax],0x0
  428763:	mov    eax,DWORD PTR [esi+0x188]
  428769:	add    eax,edi
  42876b:	pop    edi
  42876c:	ret    
  42876d:	push   ebp
  42876e:	mov    ebp,esp
  428770:	sub    esp,0x14
  428773:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42877a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428781:	mov    eax,DWORD PTR [ebx]
  428783:	mov    DWORD PTR [ebp-0x8],eax
  428786:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42878d:	push   esi
  42878e:	push   edi
  42878f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428796:	mov    edi,DWORD PTR [ebp-0x4]
  428799:	mov    ecx,DWORD PTR [ebp-0x10]
  42879c:	mov    eax,0x75108ae
  4287a1:	xor    edi,eax
  4287a3:	mov    edx,0x3272f5
  4287a8:	xor    ecx,eax
  4287aa:	add    edi,edx
  4287ac:	add    ecx,edx
  4287ae:	imul   edi,ecx
  4287b1:	jmp    0x4287f9
  4287b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4287b6:	mov    esi,DWORD PTR [ebp-0x4]
  4287b9:	xor    ecx,eax
  4287bb:	xor    esi,eax
  4287bd:	add    ecx,edx
  4287bf:	add    esi,edx
  4287c1:	test   esi,ecx
  4287c3:	mov    esi,DWORD PTR [ebp-0x8]
  4287c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4287c9:	je     0x4287e0
  4287cb:	xor    ecx,eax
  4287cd:	xor    esi,eax
  4287cf:	add    ecx,edx
  4287d1:	add    esi,edx
  4287d3:	shr    esi,cl
  4287d5:	mov    ecx,DWORD PTR [ebp-0x14]
  4287d8:	xor    ecx,eax
  4287da:	add    ecx,edx
  4287dc:	xor    esi,ecx
  4287de:	jmp    0x4287ea
  4287e0:	xor    esi,eax
  4287e2:	xor    ecx,eax
  4287e4:	add    esi,edx
  4287e6:	add    ecx,edx
  4287e8:	shr    esi,cl
  4287ea:	mov    DWORD PTR [ebp-0x8],esi
  4287ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4287f0:	xor    ecx,eax
  4287f2:	lea    edi,[edi+ecx*1+0x3272f5]
  4287f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4287fc:	mov    esi,DWORD PTR [ebp-0x4]
  4287ff:	xor    esi,eax
  428801:	xor    ecx,eax
  428803:	sub    ecx,esi
  428805:	cmp    edi,ecx
  428807:	jbe    0x4287b3
  428809:	mov    eax,DWORD PTR [ebp-0x8]
  42880c:	pop    edi
  42880d:	mov    DWORD PTR [ebx],eax
  42880f:	mov    eax,DWORD PTR [ebp-0x8]
  428812:	pop    esi
  428813:	leave  
  428814:	ret    
  428815:	push   ebp
  428816:	mov    ebp,esp
  428818:	sub    esp,0x38
  42881b:	push   ebx
  42881c:	mov    ebx,0xf89c85a5
  428821:	mov    DWORD PTR [ebp-0x4],ebx
  428824:	lea    ecx,[ebx-0x3]
  428827:	mov    DWORD PTR [ebp-0x24],ecx
  42882a:	mov    eax,DWORD PTR [ebp-0x4]
  42882d:	mov    edx,DWORD PTR [ebp+0x8]
  428830:	push   esi
  428831:	mov    esi,0x75108ae
  428836:	xor    eax,esi
  428838:	push   edi
  428839:	mov    edi,0x3272f5
  42883e:	add    eax,edi
  428840:	cmp    edx,eax
  428842:	mov    eax,DWORD PTR [ebp-0x4]
  428845:	je     0x4289aa
  42884b:	mov    edx,DWORD PTR [ebp+0xc]
  42884e:	xor    eax,esi
  428850:	add    eax,edi
  428852:	cmp    edx,eax
  428854:	je     0x4289a7
  42885a:	mov    eax,DWORD PTR [ebp+0x10]
  42885d:	mov    edx,DWORD PTR [ebp+0xc]
  428860:	mov    DWORD PTR [ebp-0x14],eax
  428863:	mov    eax,DWORD PTR [ebp+0x8]
  428866:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42886d:	mov    DWORD PTR [ebp-0xc],eax
  428870:	lea    eax,[ebx-0x2]
  428873:	mov    DWORD PTR [ebp-0x1c],eax
  428876:	mov    DWORD PTR [ebp-0x10],ebx
  428879:	mov    DWORD PTR [ebp+0xc],ecx
  42887c:	mov    DWORD PTR [ebp+0x10],eax
  42887f:	mov    eax,DWORD PTR [ebp+0xc]
  428882:	xor    eax,esi
  428884:	mov    DWORD PTR [ebp-0x20],edx
  428887:	sub    edx,eax
  428889:	sub    edx,edi
  42888b:	mov    DWORD PTR [ebp+0x8],edx
  42888e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428895:	jmp    0x428997
  42889a:	mov    eax,DWORD PTR [ebp+0xc]
  42889d:	mov    ecx,DWORD PTR [ebp+0xc]
  4288a0:	xor    eax,esi
  4288a2:	xor    ecx,esi
  4288a4:	lea    ecx,[eax+ecx*1+0x64e5ea]
  4288ab:	mov    eax,DWORD PTR [ebp+0x8]
  4288ae:	xor    edx,edx
  4288b0:	div    ecx
  4288b2:	mov    eax,DWORD PTR [ebp+0x10]
  4288b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4288b8:	xor    eax,esi
  4288ba:	xor    ecx,esi
  4288bc:	sub    eax,ecx
  4288be:	cmp    edx,eax
  4288c0:	jne    0x428956
  4288c6:	mov    eax,DWORD PTR [ebp+0x8]
  4288c9:	mov    ecx,DWORD PTR [ebp-0xc]
  4288cc:	mov    dl,BYTE PTR [eax+ecx*1]
  4288cf:	mov    eax,DWORD PTR [ebp-0x10]
  4288d2:	mov    ecx,DWORD PTR [ebp-0x8]
  4288d5:	xor    eax,esi
  4288d7:	xor    ecx,esi
  4288d9:	add    eax,edi
  4288db:	add    ecx,edi
  4288dd:	cmp    eax,ecx
  4288df:	jae    0x428927
  4288e1:	lea    ecx,[eax-0x3272f5]
  4288e7:	mov    DWORD PTR [ebp-0x4],ecx
  4288ea:	mov    ebx,DWORD PTR [ebp-0x4]
  4288ed:	xor    ebx,esi
  4288ef:	add    ebx,0x7f55d8e3
  4288f5:	lea    ecx,[ebp+eax*4-0x38]
  4288f9:	mov    DWORD PTR [ecx],ebx
  4288fb:	mov    ebx,DWORD PTR [ecx]
  4288fd:	cmp    ebx,0x244ecb80
  428903:	jbe    0x42890d
  428905:	add    DWORD PTR [ecx],0x405fcc1
  42890b:	jmp    0x428913
  42890d:	add    DWORD PTR [ecx],0xfdaf433f
  428913:	mov    ecx,DWORD PTR [ebp-0x8]
  428916:	xor    ecx,esi
  428918:	inc    eax
  428919:	inc    DWORD PTR [ebp-0x4]
  42891c:	add    ecx,edi
  42891e:	cmp    eax,ecx
  428920:	jb     0x4288ea
  428922:	mov    ebx,0xf89c85a5
  428927:	cmp    DWORD PTR [ebp-0x14],0x0
  42892b:	jne    0x428935
  42892d:	xor    dl,0x7e
  428930:	add    dl,0x3
  428933:	jmp    0x42894b
  428935:	mov    eax,DWORD PTR [ebp-0x18]
  428938:	xor    al,0xae
  42893a:	mov    cl,0xb
  42893c:	sub    cl,al
  42893e:	add    dl,cl
  428940:	mov    ecx,DWORD PTR [ebp-0x1c]
  428943:	xor    cl,0xae
  428946:	sub    cl,0xb
  428949:	ror    dl,cl
  42894b:	xor    eax,eax
  42894d:	mov    eax,DWORD PTR [ebp+0x8]
  428950:	mov    ecx,DWORD PTR [ebp-0xc]
  428953:	mov    BYTE PTR [eax+ecx*1],dl
  428956:	mov    eax,DWORD PTR [ebp+0x8]
  428959:	mov    ecx,DWORD PTR [ebp-0x10]
  42895c:	sub    eax,edi
  42895e:	xor    eax,esi
  428960:	cmp    eax,ecx
  428962:	jne    0x428985
  428964:	mov    eax,DWORD PTR [ebp+0x10]
  428967:	mov    ecx,DWORD PTR [ebp+0xc]
  42896a:	xor    eax,esi
  42896c:	xor    ecx,esi
  42896e:	sub    eax,ecx
  428970:	mov    ecx,DWORD PTR [ebp-0x20]
  428973:	sub    eax,edi
  428975:	xor    eax,esi
  428977:	mov    DWORD PTR [ebp+0x10],eax
  42897a:	mov    eax,DWORD PTR [ebp+0xc]
  42897d:	xor    eax,esi
  42897f:	sub    ecx,eax
  428981:	sub    ecx,edi
  428983:	jmp    0x428994
  428985:	mov    eax,DWORD PTR [ebp+0xc]
  428988:	xor    eax,esi
  42898a:	mov    ecx,0xffcd8d0b
  42898f:	sub    ecx,eax
  428991:	add    ecx,DWORD PTR [ebp+0x8]
  428994:	mov    DWORD PTR [ebp+0x8],ecx
  428997:	mov    eax,DWORD PTR [ebp+0x10]
  42899a:	cmp    eax,ebx
  42899c:	jne    0x42889a
  4289a2:	mov    eax,DWORD PTR [ebp-0x24]
  4289a5:	jmp    0x4289aa
  4289a7:	mov    eax,DWORD PTR [ebp-0x4]
  4289aa:	xor    eax,esi
  4289ac:	add    eax,edi
  4289ae:	pop    edi
  4289af:	pop    esi
  4289b0:	pop    ebx
  4289b1:	leave  
  4289b2:	ret    0xc
  4289b5:	push   ebp
  4289b6:	mov    ebp,esp
  4289b8:	sub    esp,0x420
  4289be:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4289c5:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4289cc:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4289d3:	push   ebx
  4289d4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4289db:	mov    eax,DWORD PTR [ebp-0x14]
  4289de:	push   esi
  4289df:	mov    esi,0x75108ae
  4289e4:	push   edi
  4289e5:	xor    eax,esi
  4289e7:	mov    edi,0x3272f5
  4289ec:	add    eax,edi
  4289ee:	mov    DWORD PTR [ebp-0x8],eax
  4289f1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4289f8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4289ff:	mov    DWORD PTR [ebp-0x10],0x8
  428a06:	mov    ecx,ecx
  428a08:	mov    eax,DWORD PTR [ebp-0xc]
  428a0b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a0e:	xor    eax,esi
  428a10:	xor    ecx,esi
  428a12:	add    eax,edi
  428a14:	add    ecx,edi
  428a16:	imul   eax,ecx
  428a19:	jmp    0x428a4c
  428a1b:	mov    eax,DWORD PTR [ebp-0x4]
  428a1e:	sub    eax,edi
  428a20:	xor    eax,esi
  428a22:	mov    DWORD PTR [ebp-0x8],eax
  428a25:	lea    ebx,[ebp-0x8]
  428a28:	call   0x42876d
  428a2d:	mov    DWORD PTR [ebp-0x8],eax
  428a30:	mov    eax,DWORD PTR [ebp-0x8]
  428a33:	mov    ecx,DWORD PTR [ebp-0x4]
  428a36:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a3d:	mov    eax,DWORD PTR [ebp-0xc]
  428a40:	mov    ecx,DWORD PTR [ebp-0x4]
  428a43:	xor    eax,esi
  428a45:	lea    eax,[eax+ecx*1+0x3272f5]
  428a4c:	mov    DWORD PTR [ebp-0x4],eax
  428a4f:	mov    eax,DWORD PTR [ebp-0x18]
  428a52:	mov    ecx,DWORD PTR [ebp-0xc]
  428a55:	xor    ecx,esi
  428a57:	xor    eax,esi
  428a59:	sub    eax,ecx
  428a5b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a5e:	cmp    ecx,eax
  428a60:	jbe    0x428a1b
  428a62:	mov    eax,DWORD PTR [ebp-0x1c]
  428a65:	xor    eax,esi
  428a67:	add    eax,edi
  428a69:	mov    DWORD PTR [ebp-0x8],eax
  428a6c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428a73:	mov    ebx,ebx
  428a75:	jmp    0x428ad8
  428a77:	mov    ecx,DWORD PTR [ebp-0x20]
  428a7a:	mov    eax,DWORD PTR [ebp-0x8]
  428a7d:	xor    ecx,esi
  428a7f:	add    ecx,edi
  428a81:	shr    eax,cl
  428a83:	mov    DWORD PTR [ebp-0x4],eax
  428a86:	mov    eax,DWORD PTR [ebp+0x8]
  428a89:	mov    cl,BYTE PTR [eax]
  428a8b:	mov    BYTE PTR [ebp+0xb],cl
  428a8e:	mov    cl,BYTE PTR [ebp+0xb]
  428a91:	mov    edx,DWORD PTR [ebp-0x8]
  428a94:	movzx  ecx,cl
  428a97:	xor    ecx,edx
  428a99:	mov    DWORD PTR [ebp+0x8],ecx
  428a9c:	mov    ecx,DWORD PTR [ebp-0x18]
  428a9f:	mov    edx,DWORD PTR [ebp+0x8]
  428aa2:	xor    ecx,esi
  428aa4:	add    ecx,edi
  428aa6:	and    ecx,edx
  428aa8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428aaf:	mov    edx,DWORD PTR [ebp-0x4]
  428ab2:	xor    ecx,edx
  428ab4:	mov    DWORD PTR [ebp-0x8],ecx
  428ab7:	mov    ecx,DWORD PTR [ebp-0xc]
  428aba:	xor    ecx,esi
  428abc:	lea    eax,[eax+ecx*1+0x3272f5]
  428ac3:	mov    DWORD PTR [ebp+0x8],eax
  428ac6:	mov    eax,DWORD PTR [ebp-0xc]
  428ac9:	xor    eax,esi
  428acb:	mov    ecx,0xffcd8d0b
  428ad0:	sub    ecx,eax
  428ad2:	add    ecx,DWORD PTR [ebp-0x10]
  428ad5:	mov    DWORD PTR [ebp-0x10],ecx
  428ad8:	mov    eax,DWORD PTR [ebp-0x14]
  428adb:	mov    ecx,DWORD PTR [ebp-0x10]
  428ade:	xor    eax,esi
  428ae0:	add    eax,edi
  428ae2:	cmp    ecx,eax
  428ae4:	jne    0x428a77
  428ae6:	mov    eax,DWORD PTR [ebp-0x1c]
  428ae9:	mov    ecx,DWORD PTR [ebp-0x8]
  428aec:	xor    eax,esi
  428aee:	add    eax,edi
  428af0:	pop    edi
  428af1:	pop    esi
  428af2:	xor    eax,ecx
  428af4:	pop    ebx
  428af5:	leave  
  428af6:	ret    0x4
  428af9:	push   ebp
  428afa:	mov    ebp,esp
  428afc:	mov    eax,DWORD PTR [ebp+0x1c]
  428aff:	mov    ecx,DWORD PTR [ebp+0x8]
  428b02:	mov    edx,DWORD PTR [ebp+0x10]
  428b05:	mov    eax,DWORD PTR [eax+0x190]
  428b0b:	mov    eax,DWORD PTR [eax]
  428b0d:	sub    esp,0x64
  428b10:	push   ebx
  428b11:	push   esi
  428b12:	push   edi
  428b13:	mov    edi,0x75108ae
  428b18:	xor    ecx,edi
  428b1a:	mov    ebx,0x3272f5
  428b1f:	add    ecx,ebx
  428b21:	cmp    ecx,edx
  428b23:	jne    0x428b34
  428b25:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b2f:	jmp    0x429030
  428b34:	mov    ecx,DWORD PTR [ebp+0x8]
  428b37:	mov    esi,DWORD PTR [ebp+0x14]
  428b3a:	mov    edx,DWORD PTR [esi]
  428b3c:	xor    ecx,edi
  428b3e:	add    ecx,ebx
  428b40:	cmp    edx,ecx
  428b42:	je     0x428feb
  428b48:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b4b:	mov    DWORD PTR [ebp-0x1c],eax
  428b4e:	mov    DWORD PTR [ebp+0x1c],ecx
  428b51:	mov    ecx,DWORD PTR [ebp+0x18]
  428b54:	mov    eax,DWORD PTR [esi]
  428b56:	mov    DWORD PTR [ebp-0x20],eax
  428b59:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b60:	mov    edx,0xf89c85a2
  428b65:	mov    DWORD PTR [ebp-0x8],edx
  428b68:	mov    eax,DWORD PTR [ebp+0x1c]
  428b6b:	mov    DWORD PTR [ebp+0x1c],eax
  428b6e:	mov    eax,DWORD PTR [ebp+0x1c]
  428b71:	mov    eax,DWORD PTR [eax+0x190]
  428b77:	mov    eax,DWORD PTR [eax]
  428b79:	mov    DWORD PTR [ebp-0x24],ecx
  428b7c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b7f:	mov    ecx,DWORD PTR [ecx+0x190]
  428b85:	mov    ecx,DWORD PTR [ecx]
  428b87:	add    ecx,DWORD PTR [eax+0x3c]
  428b8a:	mov    DWORD PTR [ebp+0x10],ecx
  428b8d:	mov    eax,DWORD PTR [ebp+0x8]
  428b90:	xor    eax,edi
  428b92:	add    eax,ebx
  428b94:	mov    DWORD PTR [ebp-0x4],eax
  428b97:	mov    eax,DWORD PTR [ebp+0x8]
  428b9a:	xor    eax,edi
  428b9c:	add    eax,ebx
  428b9e:	mov    DWORD PTR [ebp+0x18],eax
  428ba1:	mov    eax,DWORD PTR [ebp+0x10]
  428ba4:	mov    eax,DWORD PTR [eax+0x50]
  428ba7:	sub    eax,0xc
  428baa:	mov    DWORD PTR [ebp-0x28],eax
  428bad:	mov    eax,DWORD PTR [ebp+0x10]
  428bb0:	mov    eax,DWORD PTR [eax+0x38]
  428bb3:	mov    ecx,DWORD PTR [ebp+0x10]
  428bb6:	dec    eax
  428bb7:	test   DWORD PTR [ecx+0x54],eax
  428bba:	mov    eax,DWORD PTR [ebp+0x10]
  428bbd:	je     0x428bd7
  428bbf:	mov    eax,DWORD PTR [eax+0x38]
  428bc2:	mov    ecx,DWORD PTR [ebp+0x10]
  428bc5:	mov    ecx,DWORD PTR [ecx+0x54]
  428bc8:	dec    eax
  428bc9:	not    eax
  428bcb:	and    ecx,eax
  428bcd:	mov    eax,DWORD PTR [ebp+0x10]
  428bd0:	mov    eax,DWORD PTR [eax+0x38]
  428bd3:	add    eax,ecx
  428bd5:	jmp    0x428bda
  428bd7:	mov    eax,DWORD PTR [eax+0x54]
  428bda:	mov    DWORD PTR [ebp+0x1c],eax
  428bdd:	mov    eax,DWORD PTR [ebp+0x8]
  428be0:	xor    eax,edi
  428be2:	add    eax,ebx
  428be4:	mov    DWORD PTR [ebp+0x18],eax
  428be7:	mov    eax,DWORD PTR [ebp+0x8]
  428bea:	xor    eax,edi
  428bec:	add    eax,ebx
  428bee:	mov    DWORD PTR [ebp+0x18],eax
  428bf1:	mov    eax,DWORD PTR [ebp+0x8]
  428bf4:	mov    ecx,DWORD PTR [ebp-0x24]
  428bf7:	xor    eax,edi
  428bf9:	add    eax,ebx
  428bfb:	mov    DWORD PTR [ecx],eax
  428bfd:	mov    DWORD PTR [ebp+0x18],edx
  428c00:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c07:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c0e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c15:	mov    eax,DWORD PTR [ebp-0x8]
  428c18:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c1b:	xor    eax,edi
  428c1d:	add    eax,ebx
  428c1f:	imul   eax,ecx
  428c22:	mov    ecx,DWORD PTR [ebp+0x8]
  428c25:	mov    edx,DWORD PTR [ebp-0x28]
  428c28:	xor    ecx,edi
  428c2a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c31:	cmp    eax,ecx
  428c33:	jae    0x428fe4
  428c39:	mov    eax,DWORD PTR [ebp+0x8]
  428c3c:	xor    eax,edi
  428c3e:	add    eax,ebx
  428c40:	mov    DWORD PTR [ebp+0x18],eax
  428c43:	mov    eax,DWORD PTR [ebp+0x1c]
  428c46:	add    eax,DWORD PTR [ebp-0x1c]
  428c49:	mov    DWORD PTR [ebp-0x4],eax
  428c4c:	push   DWORD PTR [ebp-0x4]
  428c4f:	mov    esi,DWORD PTR [ebp-0x1c]
  428c52:	mov    ecx,DWORD PTR [ebp+0x10]
  428c55:	call   0x427da5
  428c5a:	mov    DWORD PTR [ebp+0xc],eax
  428c5d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c64:	mov    eax,DWORD PTR [ebp-0x18]
  428c67:	xor    eax,edi
  428c69:	lea    ecx,[ebp-0x40]
  428c6c:	add    eax,ebx
  428c6e:	push   ecx
  428c6f:	call   0x428339
  428c74:	mov    eax,DWORD PTR [ebp+0xc]
  428c77:	test   eax,eax
  428c79:	je     0x428cc9
  428c7b:	mov    eax,DWORD PTR [ebp-0x18]
  428c7e:	xor    eax,edi
  428c80:	add    eax,ebx
  428c82:	push   eax
  428c83:	push   DWORD PTR [ebp+0xc]
  428c86:	lea    eax,[ebp-0x40]
  428c89:	push   eax
  428c8a:	call   0x42822f
  428c8f:	mov    eax,DWORD PTR [ebp-0x4]
  428c92:	mov    DWORD PTR [ebp-0x18],eax
  428c95:	mov    eax,DWORD PTR [ebp-0x18]
  428c98:	mov    ecx,DWORD PTR [ebp-0x1c]
  428c9b:	sub    eax,ecx
  428c9d:	mov    DWORD PTR [ebp-0x18],eax
  428ca0:	mov    eax,DWORD PTR [ebp+0xc]
  428ca3:	mov    ecx,DWORD PTR [ebp+0xc]
  428ca6:	mov    eax,DWORD PTR [eax+0x10]
  428ca9:	add    eax,DWORD PTR [ecx+0xc]
  428cac:	mov    ecx,DWORD PTR [ebp-0x18]
  428caf:	cmp    ecx,eax
  428cb1:	jb     0x428cc9
  428cb3:	mov    eax,DWORD PTR [ebp+0xc]
  428cb6:	mov    eax,DWORD PTR [eax+0xc]
  428cb9:	mov    ecx,DWORD PTR [ebp+0xc]
  428cbc:	add    eax,DWORD PTR [ecx+0x8]
  428cbf:	mov    ecx,DWORD PTR [ebp-0x18]
  428cc2:	sub    eax,ecx
  428cc4:	jmp    0x428fb7
  428cc9:	push   0xc
  428ccb:	push   DWORD PTR [ebp-0x4]
  428cce:	lea    eax,[ebp-0x4c]
  428cd1:	push   eax
  428cd2:	call   0x42822f
  428cd7:	mov    eax,0xf89c85a5
  428cdc:	mov    DWORD PTR [ebp-0x2c],eax
  428cdf:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428ce6:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428ced:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428cf4:	lea    ecx,[ebp-0x2c]
  428cf7:	mov    DWORD PTR [ebp-0xc],ecx
  428cfa:	lea    ecx,[ebp-0x30]
  428cfd:	mov    DWORD PTR [ebp-0x10],ecx
  428d00:	lea    ecx,[ebp-0x34]
  428d03:	mov    DWORD PTR [ebp+0xc],ecx
  428d06:	lea    ecx,[ebp-0x38]
  428d09:	mov    DWORD PTR [ebp-0x14],ecx
  428d0c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d0f:	xor    ecx,edi
  428d11:	add    ecx,ebx
  428d13:	mov    DWORD PTR [ebp-0x18],ecx
  428d16:	jmp    0x428f12
  428d1b:	cmp    eax,0xf89c85a3
  428d20:	je     0x428f24
  428d26:	mov    ecx,DWORD PTR [ebp-0x8]
  428d29:	xor    ecx,edi
  428d2b:	mov    esi,eax
  428d2d:	add    ecx,ebx
  428d2f:	mov    DWORD PTR [ebp+0x18],ecx
  428d32:	mov    eax,DWORD PTR [ebp-0x18]
  428d35:	xor    esi,edi
  428d37:	lea    eax,[eax+esi*1+0x3272f5]
  428d3e:	mov    DWORD PTR [ebp-0x18],eax
  428d41:	mov    eax,DWORD PTR [ebp-0x8]
  428d44:	mov    ecx,DWORD PTR [ebp-0x18]
  428d47:	xor    eax,edi
  428d49:	add    eax,ebx
  428d4b:	cmp    ecx,eax
  428d4d:	jne    0x428d62
  428d4f:	mov    eax,DWORD PTR [ebp+0x8]
  428d52:	xor    eax,edi
  428d54:	add    eax,ebx
  428d56:	push   eax
  428d57:	push   0xc
  428d59:	lea    eax,[ebp-0x4c]
  428d5c:	push   eax
  428d5d:	call   0x428815
  428d62:	mov    eax,DWORD PTR [ebp-0xc]
  428d65:	mov    eax,DWORD PTR [eax]
  428d67:	xor    eax,edi
  428d69:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d70:	mov    ecx,DWORD PTR [ebp+0x8]
  428d73:	xor    ecx,edi
  428d75:	movzx  eax,al
  428d78:	add    ecx,ebx
  428d7a:	cmp    eax,ecx
  428d7c:	je     0x428efa
  428d82:	mov    eax,DWORD PTR [ebp-0x10]
  428d85:	mov    eax,DWORD PTR [eax]
  428d87:	xor    eax,edi
  428d89:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d90:	mov    ecx,DWORD PTR [ebp+0x8]
  428d93:	xor    ecx,edi
  428d95:	movzx  eax,al
  428d98:	add    ecx,ebx
  428d9a:	cmp    eax,ecx
  428d9c:	je     0x428efa
  428da2:	mov    eax,DWORD PTR [ebp+0xc]
  428da5:	mov    eax,DWORD PTR [eax]
  428da7:	xor    eax,edi
  428da9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428db0:	mov    ecx,DWORD PTR [ebp+0x8]
  428db3:	xor    ecx,edi
  428db5:	movzx  eax,al
  428db8:	add    ecx,ebx
  428dba:	cmp    eax,ecx
  428dbc:	je     0x428efa
  428dc2:	mov    eax,DWORD PTR [ebp-0x14]
  428dc5:	mov    eax,DWORD PTR [eax]
  428dc7:	xor    eax,edi
  428dc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dd0:	mov    ecx,DWORD PTR [ebp+0x8]
  428dd3:	xor    ecx,edi
  428dd5:	movzx  eax,al
  428dd8:	add    ecx,ebx
  428dda:	cmp    eax,ecx
  428ddc:	je     0x428efa
  428de2:	mov    eax,DWORD PTR [ebp-0x10]
  428de5:	mov    eax,DWORD PTR [eax]
  428de7:	xor    eax,edi
  428de9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428df0:	mov    ecx,DWORD PTR [ebp-0xc]
  428df3:	mov    ecx,DWORD PTR [ecx]
  428df5:	xor    ecx,edi
  428df7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dfe:	xor    al,cl
  428e00:	mov    ecx,DWORD PTR [ebp+0xc]
  428e03:	mov    ecx,DWORD PTR [ecx]
  428e05:	xor    ecx,edi
  428e07:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e0e:	or     al,cl
  428e10:	mov    ecx,DWORD PTR [ebp-0xc]
  428e13:	mov    ecx,DWORD PTR [ecx]
  428e15:	xor    ecx,edi
  428e17:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e1e:	cmp    cl,al
  428e20:	jne    0x428efa
  428e26:	mov    eax,DWORD PTR [ebp+0xc]
  428e29:	mov    eax,DWORD PTR [eax]
  428e2b:	xor    eax,edi
  428e2d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e34:	mov    ecx,DWORD PTR [ebp-0x10]
  428e37:	mov    ecx,DWORD PTR [ecx]
  428e39:	xor    ecx,edi
  428e3b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e42:	xor    al,cl
  428e44:	mov    ecx,DWORD PTR [ebp-0x14]
  428e47:	mov    ecx,DWORD PTR [ecx]
  428e49:	xor    ecx,edi
  428e4b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e52:	or     al,cl
  428e54:	mov    ecx,DWORD PTR [ebp-0x10]
  428e57:	mov    ecx,DWORD PTR [ecx]
  428e59:	xor    ecx,edi
  428e5b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e62:	cmp    cl,al
  428e64:	jne    0x428efa
  428e6a:	mov    eax,DWORD PTR [ebp-0x14]
  428e6d:	mov    eax,DWORD PTR [eax]
  428e6f:	xor    eax,edi
  428e71:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e78:	mov    ecx,DWORD PTR [ebp+0xc]
  428e7b:	mov    ecx,DWORD PTR [ecx]
  428e7d:	xor    ecx,edi
  428e7f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e86:	xor    al,cl
  428e88:	mov    ecx,DWORD PTR [ebp-0xc]
  428e8b:	mov    ecx,DWORD PTR [ecx]
  428e8d:	xor    ecx,edi
  428e8f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e96:	or     al,cl
  428e98:	mov    ecx,DWORD PTR [ebp+0xc]
  428e9b:	mov    ecx,DWORD PTR [ecx]
  428e9d:	xor    ecx,edi
  428e9f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ea6:	cmp    cl,al
  428ea8:	jne    0x428efa
  428eaa:	mov    eax,DWORD PTR [ebp-0x14]
  428ead:	mov    eax,DWORD PTR [eax]
  428eaf:	xor    eax,edi
  428eb1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428eb8:	mov    ecx,DWORD PTR [ebp-0xc]
  428ebb:	mov    ecx,DWORD PTR [ecx]
  428ebd:	xor    ecx,edi
  428ebf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec6:	xor    al,cl
  428ec8:	mov    ecx,DWORD PTR [ebp-0x10]
  428ecb:	mov    ecx,DWORD PTR [ecx]
  428ecd:	xor    ecx,edi
  428ecf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ed6:	or     al,cl
  428ed8:	mov    ecx,DWORD PTR [ebp-0x14]
  428edb:	mov    ecx,DWORD PTR [ecx]
  428edd:	xor    ecx,edi
  428edf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ee6:	cmp    cl,al
  428ee8:	jne    0x428efa
  428eea:	lea    eax,[ebp-0x4c]
  428eed:	push   eax
  428eee:	call   0x4289b5
  428ef3:	mov    ecx,DWORD PTR [ebp-0x44]
  428ef6:	cmp    eax,ecx
  428ef8:	je     0x428f04
  428efa:	mov    eax,DWORD PTR [ebp+0x8]
  428efd:	xor    eax,edi
  428eff:	add    eax,ebx
  428f01:	mov    DWORD PTR [ebp+0x18],eax
  428f04:	mov    eax,DWORD PTR [ebp-0x8]
  428f07:	xor    eax,edi
  428f09:	lea    eax,[eax+esi*1+0x3272f5]
  428f10:	xor    eax,edi
  428f12:	mov    ecx,DWORD PTR [ebp+0x8]
  428f15:	mov    edx,DWORD PTR [ebp+0x18]
  428f18:	xor    ecx,edi
  428f1a:	add    ecx,ebx
  428f1c:	cmp    edx,ecx
  428f1e:	je     0x428d1b
  428f24:	mov    eax,DWORD PTR [ebp+0x8]
  428f27:	mov    ecx,DWORD PTR [ebp+0x18]
  428f2a:	xor    eax,edi
  428f2c:	add    eax,ebx
  428f2e:	cmp    ecx,eax
  428f30:	jne    0x428f43
  428f32:	mov    eax,DWORD PTR [ebp-0x8]
  428f35:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f38:	xor    eax,edi
  428f3a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f41:	jmp    0x428fba
  428f43:	push   0x18
  428f45:	push   DWORD PTR [ebp-0x4]
  428f48:	lea    eax,[ebp-0x64]
  428f4b:	push   eax
  428f4c:	call   0x42822f
  428f51:	mov    eax,DWORD PTR [ebp+0x8]
  428f54:	mov    ecx,DWORD PTR [ebp-0x18]
  428f57:	xor    eax,edi
  428f59:	add    eax,ebx
  428f5b:	cmp    eax,ecx
  428f5d:	je     0x428f72
  428f5f:	mov    eax,DWORD PTR [ebp+0x8]
  428f62:	xor    eax,edi
  428f64:	add    eax,ebx
  428f66:	push   eax
  428f67:	push   0x18
  428f69:	lea    eax,[ebp-0x64]
  428f6c:	push   eax
  428f6d:	call   0x428815
  428f72:	mov    eax,DWORD PTR [ebp-0x4]
  428f75:	add    eax,0x18
  428f78:	mov    DWORD PTR [ebp+0x18],eax
  428f7b:	push   DWORD PTR [ebp-0x50]
  428f7e:	push   DWORD PTR [ebp+0x18]
  428f81:	mov    eax,DWORD PTR [ebp-0x54]
  428f84:	add    eax,DWORD PTR [ebp-0x20]
  428f87:	push   eax
  428f88:	call   0x42822f
  428f8d:	mov    eax,DWORD PTR [ebp+0x8]
  428f90:	mov    ecx,DWORD PTR [ebp-0x18]
  428f93:	xor    eax,edi
  428f95:	add    eax,ebx
  428f97:	cmp    eax,ecx
  428f99:	je     0x428fac
  428f9b:	push   0x0
  428f9d:	push   DWORD PTR [ebp-0x50]
  428fa0:	mov    eax,DWORD PTR [ebp-0x54]
  428fa3:	add    eax,DWORD PTR [ebp-0x20]
  428fa6:	push   eax
  428fa7:	call   0x428815
  428fac:	mov    eax,DWORD PTR [ebp-0x24]
  428faf:	mov    ecx,DWORD PTR [ebp-0x50]
  428fb2:	add    DWORD PTR [eax],ecx
  428fb4:	mov    eax,DWORD PTR [ebp-0x50]
  428fb7:	add    eax,DWORD PTR [ebp+0x1c]
  428fba:	mov    DWORD PTR [ebp+0x1c],eax
  428fbd:	mov    eax,DWORD PTR [ebp-0x8]
  428fc0:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fc3:	xor    eax,edi
  428fc5:	add    eax,ebx
  428fc7:	imul   eax,ecx
  428fca:	mov    ecx,DWORD PTR [ebp+0x8]
  428fcd:	mov    edx,DWORD PTR [ebp-0x28]
  428fd0:	xor    ecx,edi
  428fd2:	lea    ecx,[ecx+edx*1+0x3272f5]
  428fd9:	cmp    eax,ecx
  428fdb:	jb     0x428c39
  428fe1:	mov    esi,DWORD PTR [ebp+0x14]
  428fe4:	mov    eax,DWORD PTR [ebp-0x20]
  428fe7:	mov    DWORD PTR [esi],eax
  428fe9:	jmp    0x429030
  428feb:	mov    ecx,DWORD PTR [ebp+0x8]
  428fee:	mov    edx,DWORD PTR [ebp+0xc]
  428ff1:	xor    ecx,edi
  428ff3:	xor    edx,edi
  428ff5:	add    ecx,ebx
  428ff7:	add    edx,ebx
  428ff9:	cmp    ecx,edx
  428ffb:	jne    0x42900f
  428ffd:	mov    eax,ds:0x7f642ddc
  429002:	imul   eax,eax,0x9f15fccf
  429008:	mov    ds:0x7f642ddc,eax
  42900d:	jmp    0x429030
  42900f:	mov    ecx,DWORD PTR [ebp+0x8]
  429012:	xor    ecx,edi
  429014:	add    ecx,ebx
  429016:	cmp    eax,ecx
  429018:	je     0x429026
  42901a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429024:	jmp    0x429030
  429026:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429030:	pop    edi
  429031:	pop    esi
  429032:	pop    ebx
  429033:	leave  
  429034:	ret    0x18
  429037:	push   ebp
  429038:	mov    ebp,esp
  42903a:	and    esp,0xfffffff8
  42903d:	mov    eax,DWORD PTR [ebp+0x20]
  429040:	sub    esp,0x14
  429043:	push   ebx
  429044:	mov    ebx,DWORD PTR [ebp+0x14]
  429047:	push   esi
  429048:	push   edi
  429049:	cmp    eax,0xf89c85a5
  42904e:	jne    0x42905a
  429050:	push   0xf89c85a2
  429055:	jmp    0x42918c
  42905a:	mov    eax,DWORD PTR [ebp+0x20]
  42905d:	cmp    eax,0xf89c85a2
  429062:	jne    0x42906e
  429064:	push   0xf89c85a3
  429069:	jmp    0x42918c
  42906e:	mov    eax,DWORD PTR [ebp+0x20]
  429071:	cmp    eax,0xf89c85a3
  429076:	jne    0x429082
  429078:	push   0xf89c85a0
  42907d:	jmp    0x42918c
  429082:	mov    eax,DWORD PTR [ebp+0x20]
  429085:	cmp    eax,0xf89c85a0
  42908a:	jne    0x429096
  42908c:	push   0xf89c85a1
  429091:	jmp    0x42918c
  429096:	mov    ecx,DWORD PTR [ebp+0x20]
  429099:	mov    eax,0xf89c85bc
  42909e:	cmp    ecx,eax
  4290a0:	jne    0x42915c
  4290a6:	mov    eax,DWORD PTR [ebp+0x10]
  4290a9:	mov    DWORD PTR [esp+0xc],eax
  4290ad:	mov    eax,DWORD PTR [ebp+0x18]
  4290b0:	mov    DWORD PTR [esp+0x14],eax
  4290b4:	mov    eax,DWORD PTR [ebp+0xc]
  4290b7:	mov    DWORD PTR [esp+0x18],eax
  4290bb:	mov    eax,DWORD PTR [ebp+0x8]
  4290be:	mov    DWORD PTR [esp+0x10],eax
  4290c2:	mov    eax,DWORD PTR [esp+0x10]
  4290c6:	mov    ecx,DWORD PTR [esp+0x14]
  4290ca:	mov    edi,0x75108ae
  4290cf:	xor    eax,edi
  4290d1:	mov    esi,0x3272f5
  4290d6:	add    eax,esi
  4290d8:	mov    DWORD PTR [ecx],eax
  4290da:	mov    eax,DWORD PTR [esp+0xc]
  4290de:	mov    eax,DWORD PTR [eax+0x194]
  4290e4:	mov    ecx,DWORD PTR [eax]
  4290e6:	mov    eax,DWORD PTR [esp+0xc]
  4290ea:	mov    eax,DWORD PTR [eax+0x194]
  4290f0:	mov    eax,DWORD PTR [eax]
  4290f2:	add    eax,DWORD PTR [ecx+0x3c]
  4290f5:	mov    ecx,DWORD PTR [esp+0xc]
  4290f9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4290ff:	mov    ecx,DWORD PTR [ecx+0x14]
  429102:	push   0x4
  429104:	push   0x3000
  429109:	push   DWORD PTR [eax+0x50]
  42910c:	push   0x0
  42910e:	call   ecx
  429110:	mov    DWORD PTR [ebx],eax
  429112:	mov    eax,DWORD PTR [esp+0x10]
  429116:	push   DWORD PTR [esp+0xc]
  42911a:	xor    eax,edi
  42911c:	add    eax,esi
  42911e:	mov    DWORD PTR [esp+0x20],eax
  429122:	lea    eax,[esp+0x20]
  429126:	push   eax
  429127:	push   ebx
  429128:	push   DWORD PTR [esp+0x20]
  42912c:	push   DWORD PTR [esp+0x28]
  429130:	push   DWORD PTR [esp+0x24]
  429134:	call   0x428af9
  429139:	mov    eax,DWORD PTR [esp+0x10]
  42913d:	mov    ecx,DWORD PTR [ebx]
  42913f:	xor    eax,edi
  429141:	add    eax,esi
  429143:	cmp    ecx,eax
  429145:	je     0x4291a3
  429147:	mov    eax,DWORD PTR [esp+0x18]
  42914b:	mov    ecx,DWORD PTR [esp+0x14]
  42914f:	xor    eax,edi
  429151:	add    eax,esi
  429153:	imul   eax,DWORD PTR [esp+0x1c]
  429158:	mov    DWORD PTR [ecx],eax
  42915a:	jmp    0x4291a3
  42915c:	mov    ecx,DWORD PTR [ebp+0x20]
  42915f:	cmp    ecx,0xf89c85a1
  429165:	jne    0x42916e
  429167:	push   0xf89c85be
  42916c:	jmp    0x42918c
  42916e:	mov    ecx,DWORD PTR [ebp+0x20]
  429171:	cmp    ecx,0xf89c85be
  429177:	jne    0x429180
  429179:	push   0xf89c85bf
  42917e:	jmp    0x42918c
  429180:	mov    ecx,DWORD PTR [ebp+0x20]
  429183:	cmp    ecx,0xf89c85bf
  429189:	jne    0x4291a3
  42918b:	push   eax
  42918c:	push   DWORD PTR [ebp+0x1c]
  42918f:	push   DWORD PTR [ebp+0x18]
  429192:	push   ebx
  429193:	push   DWORD PTR [ebp+0x10]
  429196:	push   DWORD PTR [ebp+0xc]
  429199:	push   DWORD PTR [ebp+0x8]
  42919c:	call   0x429037
  4291a1:	mov    DWORD PTR [ebx],eax
  4291a3:	mov    eax,DWORD PTR [ebx]
  4291a5:	pop    edi
  4291a6:	pop    esi
  4291a7:	pop    ebx
  4291a8:	mov    esp,ebp
  4291aa:	pop    ebp
  4291ab:	ret    0x1c
  4291ae:	push   ebp
  4291af:	mov    ebp,esp
  4291b1:	sub    esp,0xc
  4291b4:	mov    eax,0xf89c85a5
  4291b9:	mov    DWORD PTR [ebp-0x8],eax
  4291bc:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4291c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4291c6:	xor    ecx,0x75108ae
  4291cc:	add    ecx,0x3272f5
  4291d2:	mov    DWORD PTR [ebp-0x4],ecx
  4291d5:	mov    ecx,DWORD PTR [ebp+0xc]
  4291d8:	push   eax
  4291d9:	mov    DWORD PTR [ebp+0xc],ecx
  4291dc:	push   DWORD PTR [ebp+0xc]
  4291df:	lea    eax,[ebp-0x4]
  4291e2:	push   DWORD PTR [ebp+0x8]
  4291e5:	push   eax
  4291e6:	push   DWORD PTR [ebp+0xc]
  4291e9:	push   DWORD PTR [ebp-0xc]
  4291ec:	push   DWORD PTR [ebp-0x8]
  4291ef:	call   0x429037
  4291f4:	mov    DWORD PTR [ebp-0x4],eax
  4291f7:	mov    eax,DWORD PTR [ebp-0x4]
  4291fa:	leave  
  4291fb:	ret    0x8
